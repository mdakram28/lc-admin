{
    "username": "quack_quack",
    "submission": "class Solution {\npublic:\n    int get_val (vector<int> & bits , int n , int val , int len_sub){\n        int res = 0;\n        for(int i = 0 ; i <= 30 ; i++){\n            if(n & (1 << i)){\n                bits[i] += val;\n            }\n            if(len_sub == bits[i]){\n                res += (1 << i);\n            }\n        }\n        return res;\n    }\n    long long solve(vector<int>& nums, int k){\n        int n = nums.size();\n        vector<int>bits(31 , 0);\n        int aux = 0;\n        long long ans = 0;\n        int cnt = 0;\n        \n        for(int i = 0 , j = 0 ; i < n ; i++){\n            aux = get_val(bits , nums[i] , 1 , (i - j + 1));\n            \n            while(aux < k && j <= i){\n                aux = get_val(bits , nums[j] , -1 , (i - j));\n                j++;\n            }\n            \n            ans += (i - j + 1);\n        }\n        \n        return ans;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        return solve(nums , k) - solve(nums , k + 1);       \n    }\n};",
    "submit_ts": "1720280923",
    "subm_id": "1311806886"
}