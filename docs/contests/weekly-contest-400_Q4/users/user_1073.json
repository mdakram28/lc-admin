{
    "username": "yuvrajcoder",
    "submission": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <climits>\n\nclass Solution {\npublic:\n    int minimumDifference(std::vector<int>& nums, int k) {\n        std::vector<int> zeros(32, 0);\n\n        auto minus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] -= 1;\n                }\n            }\n        };\n\n        auto plus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] += 1;\n                }\n            }\n        };\n\n        auto eval = [&]() {\n            int res = 0;\n            for (int i = 0; i < 32; ++i) {\n                if (zeros[i] == 0) {\n                    res ^= (1 << i);\n                }\n            }\n            return res;\n        };\n\n        int i = 0;\n        int n = nums.size();\n        int ans = INT_MAX;\n\n        for (int j = 0; j < n; ++j) {\n            plus(nums[j]);\n            int x = eval();\n            ans = std::min(ans, std::abs(x - k));\n            while (i < j && x < k) {\n                minus(nums[i]);\n                ++i;\n                x = eval();\n                ans = std::min(ans, std::abs(x - k));\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717300155.0
}