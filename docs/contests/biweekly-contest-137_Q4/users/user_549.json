{
    "username": "Neer N Patel",
    "submission": "class Solution {\npublic:\n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        \n        set< pair < int , pair < int , int > >  >  topValues;\n        int sz = 2 * max(n,m) + 3;\n        \n        for(int i = 0 ; i < n ; i++) {\n            for(int j = 0 ; j < m ; j++) {\n                if(topValues.size() == sz) {\n                    auto it = topValues.begin();\n                    if((*it).first < board[i][j]) {\n                        topValues.erase(topValues.begin());\n                        topValues.insert(make_pair(board[i][j], make_pair(i,j)));\n                    }\n                } else {\n                    topValues.insert(make_pair(board[i][j], make_pair(i,j)));\n                }\n            }\n        }\n        \n        vector< pair < int , pair < int , int > >  >  tv;\n        \n        for(auto i : topValues) {\n            tv.push_back(i);\n        }\n        \n        long long ans = -1e10;\n        \n        for(int i = 0 ; i < tv.size() ; i++) {\n            for(int j = i+1 ; j < tv.size() ; j++) {\n                for(int k = j+1 ; k < tv.size() ; k++) {\n                    if(tv[i].second.first != tv[j].second.first && tv[i].second.second != tv[j].second.second && \n                       tv[k].second.first != tv[j].second.first && tv[k].second.second != tv[j].second.second && \n                       tv[i].second.first != tv[k].second.first && tv[i].second.second != tv[k].second.second\n                      ) {\n                        ans = max(ans, 0LL + tv[i].first + tv[j].first + tv[k].first);\n                    }\n                }\n            }\n        }\n        return ans;\n        \n    }\n};\n\n/*\n\n\n[[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\n[[1,2,3],[4,5,6],[7,8,9]]\n[[1,1,1],[1,1,1],[1,1,1]]\n[[-46,-9,28],[34,-74,-25],[-62,-73,-68]]\n\n*/\n",
    "submit_ts": "1723909896",
    "subm_id": "1359209711"
}