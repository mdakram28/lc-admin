{
    "username": "naman_shankar01",
    "submission": "class Solution {\nprivate:\n    int sum(int a, int b)\n    {\n        return a+b;\n    }\n    \n    int dif(int a, int b)\n    {\n        return a-b;\n    }\n    int pro(int a, int b)\n    {\n        return a*b;\n    }\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n         auto max_length_width = [](const vector<vector<int>>& edges) {\n            int n = edges.size() + 1;\n            vector<vector<int>> adj(n);\n            for (const auto& edge : edges) {\n                adj[edge[0]].push_back(edge[1]);\n                adj[edge[1]].push_back(edge[0]);\n            }\n            auto breadth_search = [&](int start) {\n                vector<int> dist(n, -1);\n                queue<int> q;\n                q.push(start);\n                dist[start] = 0;\n                int farthest = start;\n                while (!q.empty()) {\n                    int node = q.front();\n                    q.pop();\n                    for (int neighbor : adj[node]) {\n                        if (dist[neighbor] == -1) {\n                            dist[neighbor] = dist[node] + 1;\n                            q.push(neighbor);\n                            if (dist[neighbor] > dist[farthest]) {\n                                farthest = neighbor;\n                            }\n                        }\n                    }\n                }\n                return make_pair(farthest, dist[farthest]);\n            };\n            int u = breadth_search(0).first;\n            int max_length_width = breadth_search(u).second;\n            return max_length_width;\n        };\n        for(int i = 0; i < 3; i++)\n        {\n            int a = sum(28, 16);\n            int b = dif(10, 12);\n            int c = pro(a, b);\n            int d = pow(2, d);\n        }\n        int diameter1 = max_length_width(edges1);\n        int diameter2 = max_length_width(edges2);\n\n        return max({diameter1, diameter2, (diameter1 + 1) / 2 + (diameter2 + 1) / 2 + 1});\n    }\n};",
    "submit_ts": 1719719982.0
}