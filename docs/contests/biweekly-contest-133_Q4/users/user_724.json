{
    "username": "atheshwarank21cs",
    "submission": "class Solution {\n  static int MOD = 1000000007;\n  static int[][] dp;\n    public int numberOfPermutations(int n, int[][] arr) {\n    int[] a = new int[n];\n    Arrays.fill(a, -1);\n    for (int i = 0; i < arr.length; i++) {\n      a[arr[i][0]] = arr[i][1];\n    }\n    int lim=a[n-1]+1;\n    dp = new int[n][lim];\n    for (int[] i : dp) {\n      Arrays.fill(i, -1);\n    }\n    return f(a[n - 1], n - 1, a);\n    }\n    static int f(int ind, int i, int[] a) {\n    if (i == -1) {\n      if(ind==0)\n        return 1;\n      return  0;\n    }\n\n    if (dp[i][ind] != -1)\n      return dp[i][ind];\n      int lim=Math.min(i+1,ind+1);\n    int res = 0;\n\n    if(a[i]!=-1 && a[i]!=ind)\n      return 0;\n\n      for (int j = 0; j < lim; j++) {\n        int newV=ind-j;\n        res += f(newV, i-1, a);\n        res %= MOD;\n      }\n    \n\n    return dp[i][ind] = res;\n  }\n}",
    "submit_ts": "1719071088",
    "subm_id": "1296838815"
}