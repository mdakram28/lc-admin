{
    "username": "trchen",
    "submission": "using ll = long long;\n\nclass Solution {\n public:\n  static inline constexpr ll MIN = numeric_limits<ll>::min() / 100000;\n\n  ll Solve3(const vector<int>& v1, const vector<int>& v2, const vector<int>& v3) {\n    int n = v1.size();\n    ll dp1 = v1[0];\n    ll dp2 = v2[0];\n    ll dp3 = v3[0];\n    ll dp12 = MIN;\n    ll dp13 = MIN;\n    ll dp23 = MIN;\n    ll dp123 = MIN;\n    for (int i = 1; i < n; ++i) {\n      dp123 = max({ dp123, ll(v1[i]) + dp23, ll(v2[i]) + dp13, ll(v3[i]) + dp12 });\n      dp12 = max({ dp12, ll(v1[i]) + dp2, dp1 + ll(v2[i]) });\n      dp13 = max({ dp13, ll(v1[i]) + dp3, dp1 + ll(v3[i]) });\n      dp23 = max({ dp23, ll(v2[i]) + dp3, dp2 + ll(v3[i]) });\n      dp1 = max(ll(v1[i]), dp1);\n      dp2 = max(ll(v2[i]), dp2);\n      dp3 = max(ll(v3[i]), dp3);\n    }\n    return dp123;\n  }\n\n  long long maximumValueSum(vector<vector<int>>& board) {\n    int n = board.size();\n    int m = board[0].size();\n    vector<multiset<int, greater<>>> sts(m);\n    for (int j = 0; j < m; ++j) {\n      for (int i = 0; i < n; ++i) {\n        sts[j].insert(board[i][j]);\n      }\n    }\n    ll ret = numeric_limits<ll>::min();\n    for (int r1 = 0; r1 < n; ++r1) {\n      for (int r2 = r1 + 1; r2 < n; ++r2) {\n        vector<int> v(m);\n        for (int j = 0; j < m; ++j) {\n          auto iter1 = sts[j].find(board[r1][j]);\n          sts[j].erase(iter1);\n          auto iter2 = sts[j].find(board[r2][j]);\n          sts[j].erase(iter2);\n          v[j] = *sts[j].begin();\n        }\n        ret = max(ret, Solve3(board[r1], board[r2], v));\n        for (int j = 0; j < m; ++j) {\n          sts[j].insert(board[r1][j]);\n          sts[j].insert(board[r2][j]);\n        }\n      }\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1723907770",
    "subm_id": "1359123476"
}