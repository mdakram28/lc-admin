{
    "username": "ss2202002",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long hori=1,verti=1;\n        long long ans = 0;\n        priority_queue<pair<int,int>>vc;\n        priority_queue<pair<int,int>>hc;\n\n        for(int i=0;i<m-1;i++){\n            hc.push({horizontalCut[i],i});\n        }\n        for(int i=0;i<n-1;i++){\n            vc.push({verticalCut[i],i});\n        }\n        while(!(hc.empty() || vc.empty())){\n            if(hc.top().first>vc.top().first){\n                ans+=hc.top().first*hori;\n                verti++;\n                hc.pop();\n            }\n            else{\n                ans+=vc.top().first*verti;\n                hori++;\n                vc.pop();\n            }\n        }\n        while(!hc.empty()){\n            ans+=hc.top().first*hori;\n            hc.pop();\n        }\n        while(!vc.empty()){\n            ans+=vc.top().first*verti;\n            vc.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926256",
    "subm_id": "1320280665"
}