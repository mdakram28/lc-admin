{
    "username": "mohitpapa69",
    "submission": "class TrieNode {\n    constructor() {\n        this.children = {};\n        this.cost = Infinity; \n    }\n}\nclass Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n    insert(word, cost) {\n        let node = this.root;\n        for (let char of word) {\n            if (!node.children[char]) {\n                node.children[char] = new TrieNode();\n            }\n            node = node.children[char];\n        }\n        node.cost = Math.min(node.cost, cost); \n    }\n    search(target, start) {\n        const results = [];\n        let node = this.root;\n        for (let i = start; i < target.length; i++) {\n            if (!node.children[target[i]]) break;\n            node = node.children[target[i]];\n            if (node.cost !== Infinity) results.push([i + 1, node.cost]); \n        }\n        return results;\n    }\n}\nconst createTrie = (words, costs) => {\n    const trie = new Trie();\n    for (let i = 0; i < words.length; i++) {\n        trie.insert(words[i], costs[i]);\n    }\n    return trie;\n};\nconst updateDpArray = (dp, matches, currentCost) => {\n    for (let [end, cost] of matches) {\n        dp[end] = Math.min(dp[end], currentCost + cost);\n    }\n};\nvar minimumCost = function(target, words, costs) {\n    const n = target.length;\n    const trie = createTrie(words, costs);\n    const dp = new Array(n + 1).fill(Infinity);\n    dp[0] = 0;\n    for (let i = 0; i < n; i++) {\n        if (dp[i] === Infinity) continue;\n        const matches = trie.search(target, i);\n        updateDpArray(dp, matches, dp[i]);\n    }\n    return dp[n] === Infinity ? -1 : dp[n];\n};",
    "submit_ts": "1720323885",
    "subm_id": "1312386395"
}