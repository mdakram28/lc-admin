{
    "username": "Sarthak_0909k",
    "submission": "class Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int bmw = grid.size(), orange = grid[0].size(); \n        int towel = 0; \n\n       \n        if (bmw % 2 == 1 && orange % 2 == 1) { \n            if (grid[bmw / 2][orange / 2] == 1) { \n                towel += 1; \n            } \n        } \n\n        vector<int> wolf(3, 0); \n\n        \n        if (bmw % 2 == 1) { \n            int midRow = bmw / 2;\n            for (int col = 0; col < orange / 2; ++col) { \n                int sm = grid[midRow][col] + grid[midRow][orange - 1 - col]; \n                wolf[sm] += 1; \n            } \n        } \n\n        // Count flips needed for columns\n        if (orange % 2 == 1) { \n            int midCol = orange / 2;\n            for (int row = 0; row < bmw / 2; ++row) { \n                int sm = grid[row][midCol] + grid[bmw - 1 - row][midCol]; \n                wolf[sm] += 1; \n            } \n        } \n\n        \n        if (wolf[2] % 2 == 1) { \n            if (wolf[1] > 0) { \n                towel += wolf[1]; \n            } else { \n                towel += 2; \n            } \n        } else { \n            towel += wolf[1]; \n        } \n\n        \n        for (int row = 0; row < bmw / 2; ++row) { \n            for (int col = 0; col < orange / 2; ++col) { \n                int a = grid[row][col]; \n                int b = grid[bmw - 1 - row][col]; \n                int c = grid[row][orange - 1 - col]; \n                int d = grid[bmw - 1 - row][orange - 1 - col]; \n\n                int sm = a + b + c + d; \n\n                if (sm != 0 && sm != 4) { \n                    towel += min(sm, 4 - sm); \n                } \n            } \n        } \n\n        return towel; \n    } \n};\n",
    "submit_ts": "1722699661",
    "subm_id": "1343218450"
}