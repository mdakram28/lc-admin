{
    "username": "piyushs13",
    "submission": "class Solution {\npublic:\n    bool bfs(const vector<vector<int>>& adjList, int startNode, int jult, int aug) {\n        queue<int> nodeQueue;\n        vector<bool> isVisited(adjList.size(), false);\n        nodeQueue.push(startNode);\n        isVisited[startNode] = true;\n\n        while (!nodeQueue.empty()) {\n            int currentNode = nodeQueue.front();\n            nodeQueue.pop();\n            for (int neighbor : adjList[currentNode]) {\n                if (!isVisited[neighbor]) {\n                    nodeQueue.push(neighbor);\n                    isVisited[neighbor] = true;\n                }\n            }\n        }\n\n        return isVisited[jult] || isVisited[aug];\n    }\n\n    void createEdge(vector<vector<int>>& adjList, int node1, int node2) {\n        adjList[node1].push_back(node2);\n        adjList[node2].push_back(node1);\n    }\n\n    bool canReachCorner(int width, int height, const vector<vector<int>>& obstacles) {\n        int ans = obstacles.size();\n        vector<vector<int>> adjList(ans + 4);\n\n        for (int i = 0; i < ans; ++i) {\n            int obsX = obstacles[i][0], obsY = obstacles[i][1], res = obstacles[i][2];\n\n            if (obsX <= res) createEdge(adjList, ans, i);\n            if (width - obsX <= res) createEdge(adjList, ans + 2, i);\n            if (obsY <= res) createEdge(adjList, ans + 1, i);\n            if (height - obsY <= res) createEdge(adjList, ans + 3, i);\n\n            for (int j = i + 1; j < ans; ++j) {\n                int obsX2 = obstacles[j][0], obsY2 = obstacles[j][1], res2 = obstacles[j][2];\n                double sum = sqrt(pow(obsX - obsX2, 2) + pow(obsY - obsY2, 2));\n                int cnt = res + res2;\n                if (cnt >= sum) {\n                    createEdge(adjList, i, j);\n                }\n            }\n        }\n\n        return !(bfs(adjList, ans, ans + 1, ans + 2) ||\n                 bfs(adjList, ans + 3, ans + 2, ans + 1));\n    }\n};\n\n",
    "submit_ts": "1722138671",
    "subm_id": "1335796706"
}