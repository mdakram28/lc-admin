{
    "username": "sachin-031",
    "submission": "class Solution {\npublic:\n    vector<int> MaxDist(vector< vector<int>>& A, int N)\n{\n    vector<pair<int,int>> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] = {A[i][0] + A[i][1],i};\n        V1[i] = {A[i][0] - A[i][1],i};\n    }\n\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n    vector<int>ans(3);\n    if(V.back().first - V.front().first>=V1.back().first - V1.front().first){\n        ans[0]=V.back().first - V.front().first;\n        ans[1]=V.back().second;\n        ans[2]=V.front().second;\n    }\n    else{\n        ans[0]=V1.back().first - V1.front().first;\n        ans[1]=V1.back().second;\n        ans[2]=V1.front().second;\n    }\n    return ans;\n}\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int>k=MaxDist(points,points.size());\n        vector<vector<int>>v1,v2;\n        for(int i=0;i<points.size();i++){\n            if(i!=k[1])v1.push_back(points[i]);\n            if(i!=k[2])v2.push_back(points[i]);\n        }\n        vector<int>i=MaxDist(v1,v1.size());\n        vector<int>j=MaxDist(v2,v2.size());\n        return min(i[0],j[0]);\n        \n    }\n};"
}