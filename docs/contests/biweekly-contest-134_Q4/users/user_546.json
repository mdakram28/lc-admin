{
    "username": "lostTreasure",
    "submission": "class Solution {\npublic:\n    struct stt{\n        vector<vector<int>>st;\n        vector<int>lg;  \n        const int k=22;\n        int n;  \n        void init(int n1){\n            n=n1;  \n            st.resize(k+2,vector<int>(n+2));\n            lg.resize(n+2,0);  \n        }\n        void build(vector<int>&a){\n            lg[1]=0;\n            for(int i=2;i<=n;i++){\n                lg[i]=(lg[i/2]+1);\n            }\n            for(int i=1;i<=n;i++){\n                st[0][i]=a[i];  \n            }\n            for(int i=1;i<=(k);i++){\n                int len=1<<(i-1);\n                for(int j=1;j<=n;j++){\n                    st[i][j]=(st[i-1][j]&st[i-1][min(n,j+len)]);\n                }\n            }\n        }\n        int range(int l,int r){\n            int i=(lg[r-l+1]);\n            return (st[i][l]&st[i][r-(1<<i)+1]);\n        }\n    };\n    #define ll long long\n    long long countSubarrays(vector<int>& v, int k) {\n        stt tobe;int n=v.size();\n        tobe.init(n);\n        vector<int>t(n+1);\n        for(int i=0;i<n;i++)t[i+1]=v[i];\n        tobe.build(t);\n        ll ans=0;\n        for(int i=1;i<=n;i++){\n            int st=i,en=n;\n            while(en-st>1){\n                int mid=(st+en+1)/2;\n                if(tobe.range(i,mid)<=k){\n                    en=mid;\n                }\n                else st=mid;\n            }\n            int l=-1;\n            if(tobe.range(i,st)==k)l=st;\n            else if(tobe.range(i,en)==k)l=en;\n            if(l==-1)continue;\n            st=i,en=n;\n            while(en-st>1){\n                int mid=(en+st+1)/2;\n                if(tobe.range(i,mid)>=k)st=mid;\n                else en=mid;\n            }\n            int r=-1;\n            if(tobe.range(i,en)==k)r=en;\n            else if(tobe.range(i,st)==k)r=st;\n            ans+=(r-l+1);\n        }\n        return ans;\n    }\n    \n};",
    "submit_ts": "1720278279",
    "subm_id": "1311702234"
}