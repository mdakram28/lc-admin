{
    "username": "kenCHLEE",
    "submission": "/*\nn = nums.length\nm = max(nums[i])\n\ndp[i][x] := number of pairs in nums[0, i], arr1[i] == x\ndp[0][x] = 1, 0 <= x <= nums[0]\ndp[i][x] = sum(dp[i-1][y])\ny <= x <= nums[i]\nnums[i-1] - y >= nums[i] - x >= 0\n=> y <= min(x, nums[i-1] - nums[i] + x)\n=> TC: O(nmm), SC: O(nm) or O(m)\n\ndp[i][x] := number of pairs in nums[0, i], arr1[i] <= x\ndp[0][x] = x + 1, 0 <= x <= nums[0]\ndp[i][x] = dp[i][x-1] + dp[i-1][y]\ny = min(x, nums[i-1] - nums[i] + x)\n=> TC: O(nm), SC: O(nm) or O(m)\n*/\nclass Solution {\n    public int countOfPairs(int[] nums) {\n        final int MOD = (int) Math.pow(10, 9) + 7;\n        int n = nums.length;\n        int m = 0;\n        for (int num : nums) {\n            m = Math.max(m, num);\n        }\n        int[] dp = new int[m + 1];\n        for (int x = 0; x <= nums[0]; x++) {\n            dp[x] = x + 1;\n        }\n        for (int i = 1; i < n; i++) {\n            int[] nextDp = new int[m + 1];\n            for (int x = 0; x <= nums[i]; x++) {\n                int y = Math.min(x, nums[i - 1] - nums[i] + x);\n                if (y < 0) {\n                    continue;\n                }\n                if (x > 0) {\n                    nextDp[x] += nextDp[x - 1];\n                    nextDp[x] %= MOD;\n                }\n                nextDp[x] += dp[y];\n                nextDp[x] %= MOD;\n            }\n            dp = nextDp;\n        }\n        return dp[nums[n - 1]];\n    }\n}",
    "submit_ts": "1723347052",
    "subm_id": "1351590869"
}