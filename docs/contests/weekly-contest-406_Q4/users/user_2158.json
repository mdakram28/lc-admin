{
    "username": "abhishek_s18",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \n        \n        \n        \n        \n        result = 0\n        \n        horizontalCut = sorted(horizontalCut, reverse=True)\n        verticalCut = sorted(verticalCut, reverse=True)\n        \n        \n        verc = 0\n        horc = 0\n        \n        while (verc+horc)<(len(horizontalCut)+len(verticalCut)):\n            ele1 = float('-inf')\n            ele2 = float('-inf')\n            \n            if verc<len(verticalCut):\n                ele1 = verticalCut[verc]\n            \n            if horc<len(horizontalCut):\n                ele2 = horizontalCut[horc]\n            \n            if ele1>=ele2:\n                result += (ele1*(horc+1))\n                verc+=1\n            else:\n                result += (ele2*(verc+1))\n                horc+=1\n        \n        return result\n                \n            \n        \n        \n            \n        ",
    "submit_ts": "1720926649",
    "subm_id": "1320292394"
}