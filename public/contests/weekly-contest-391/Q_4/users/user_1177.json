{
    "username": "wangjian2015la",
    "submission": "\nimport numpy as np\nclass Solution:\n    def minimumDistance(self, points0: List[List[int]]) -> int:\n        \n        def get_max_i_j(points):\n            points.sort(key=lambda x: x[0])\n            #print(points)\n            p = [ xy[0] + xy[1] for xy in points]\n            m = [ xy[0] - xy[1] for xy in points]\n            pmin = np.argmin(p)\n            pmax = np.argmax(p)\n\n            mmin = np.argmin(m)\n            mmax = np.argmax(m)\n\n            i,j = 0,0\n            if p[pmax] - p[pmin] >= m[mmax] - m[mmin]:\n                i = pmax\n                j = pmin\n            else:\n                i = mmin\n                j = mmax\n            return max(p[pmax] - p[pmin], m[mmax] - m[mmin]), i,j\n        \n        a,i,j = get_max_i_j(points0)\n        #print(a,i,j)\n        bi, _, _ = get_max_i_j(points0[0:i]+points0[i+1:])\n        bj, _, _ = get_max_i_j(points0[0:j]+points0[j+1:])\n\n\n        return min(bi,bj)\n"
}