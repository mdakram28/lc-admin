{
    "username": "LogicalCat",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        from heapq import nlargest\n        m, n = len(board), len(board[0])\n        \n        # \u4ece\u6bcf\u884c\u548c\u6bcf\u5217\u4e2d\u627e\u5230\u6700\u5927\u7684\u4e09\u4e2a\u5143\u7d20\n        row_max = [[(board[r][c], c) for c in nlargest(3, range(n), key=lambda x: board[r][x])] for r in range(m)]\n        col_max = [[(board[r][c], r) for r in nlargest(3, range(m), key=lambda x: board[x][c])] for c in range(n)]\n        \n        # \u8fdb\u884c\u884c\u548c\u5217\u7684\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u7b5b\u9009\u5019\u9009\u9879\n        valid_candidates = set()\n        for r in range(m):\n            for value, c in row_max[r]:\n                # \u68c0\u67e5\u662f\u5426\u540c\u65f6\u4e5f\u662f\u5217\u7684\u524d\u4e09\u5927\n                if any(value == board[r][c] and r == row for value, row in col_max[c]):\n                    valid_candidates.add((value, r, c))\n        \n        # \u5c06\u5019\u9009\u9879\u6309\u4ef7\u503c\u964d\u5e8f\u6392\u5e8f\n        sorted_candidates = sorted(valid_candidates, reverse=True, key=lambda x: x[0])\n        \n        # \u4f7f\u7528\u56de\u6eaf\u5bfb\u627e\u4e09\u4e2a\u4e0d\u51b2\u7a81\u7684\u6700\u5927\u4ef7\u503c\u7684\u4f4d\u7f6e\n        def backtrack(index, count, current_sum, used_rows, used_cols):\n            nonlocal max_sum\n            if count == 3:\n                max_sum = max(max_sum, current_sum)\n                return\n            if index >= len(sorted_candidates):\n                return\n            \n            for i in range(index, len(sorted_candidates)):\n                value, row, col = sorted_candidates[i]\n                if row not in used_rows and col not in used_cols:\n                    backtrack(i + 1, count + 1, current_sum + value, used_rows | {row}, used_cols | {col})\n        \n        max_sum = float('-inf')\n        backtrack(0, 0, 0, set(), set())\n        return max_sum",
    "submit_ts": "1723906330",
    "subm_id": "556317773"
}