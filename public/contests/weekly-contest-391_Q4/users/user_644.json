{
    "username": "agix",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>> sums;\n        vector<vector<int>> diffs;\n        \n        int n = points.size();\n        \n        for (int i = 0; i < n; i++)\n        {\n            sums.push_back({points[i][0] + points[i][1], i});\n            diffs.push_back({points[i][0] - points[i][1], i});\n        }\n        \n        sort(sums.begin(), sums.end());\n        sort(diffs.begin(), diffs.end());\n        \n        vector<int> sols;\n        \n        sols.push_back(sums[0][1]);\n        sols.push_back(sums[n - 1][1]);\n        sols.push_back(diffs[0][1]);\n        sols.push_back(diffs[n - 1][1]);\n        \n        int ans = 1e9;\n        \n        for (auto& sol : sols)\n        {\n            sums.clear();\n            diffs.clear();\n            \n            for (int i = 0; i < n; i++)\n            {\n                if (i == sol)\n                {\n                    continue;\n                }\n                sums.push_back({points[i][0] + points[i][1], i});\n                diffs.push_back({points[i][0] - points[i][1], i});\n            }\n\n            sort(sums.begin(), sums.end());\n            sort(diffs.begin(), diffs.end());\n            \n            int best = max(sums[n - 2][0] - sums[0][0], diffs[n - 2][0] - diffs[0][0]);\n            \n            ans = min(ans, best);\n        }\n        \n        return ans;\n    }\n};"
}