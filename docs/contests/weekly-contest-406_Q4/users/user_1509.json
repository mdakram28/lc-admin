{
    "username": "surya_jl",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int h = 0, v = 0;\n        int hSegments = 1, vSegments = 1;\n        long long totalCost = 0;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += horizontalCut[h] * vSegments;\n                hSegments++;\n                h++;\n            } else {\n                totalCost += verticalCut[v] * hSegments;\n                vSegments++;\n                v++;\n            }\n        }\n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * vSegments;\n            hSegments++;\n            h++;\n        }\n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * hSegments;\n            vSegments++;\n            v++;\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926002",
    "subm_id": "1320272949"
}