{
    "username": "Hastorius",
    "submission": "import java.util.ArrayList;\nimport java.util.Arrays;\n\nclass Solution {\n    public long maximumValueSum(int[][] board) {\n        long max = Long.MIN_VALUE;\n        int n = board.length;\n        int m = board[0].length;\n        long[][][] hMax = new long[n][3][3];// n * top 3 * spots\n        long[][][] vMax = new long[m][3][3];\n        for (int i = 0; i < n; i++) {\n            hMax[i][0][0] = Long.MIN_VALUE;\n            hMax[i][1][0] = Long.MIN_VALUE;\n            hMax[i][2][0] = Long.MIN_VALUE;\n            for (int j = 0; j < m; j++) {\n                if (board[i][j] > hMax[i][2][0]) {\n                    hMax[i][2] = new long[]{board[i][j], i, j};\n                }\n                if (hMax[i][1][0] < hMax[i][2][0]) {\n                    long[] temp = hMax[i][1];\n                    hMax[i][1]  = hMax[i][2];\n                    hMax[i][2] = temp;\n                }\n                if (hMax[i][0][0] < hMax[i][1][0]) {\n                    long[] temp = hMax[i][1];\n                    hMax[i][1]  = hMax[i][0];\n                    hMax[i][0] = temp;\n                }\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            vMax[j][0][0] =Long.MIN_VALUE;\n            vMax[j][1][0] = Long.MIN_VALUE;\n            vMax[j][2][0] = Long.MIN_VALUE;\n            for (int i = 0; i < n; i++) {\n                if (board[i][j] > vMax[j][2][0]) {\n                    vMax[j][2] = new long[]{board[i][j], i, j};\n                }\n                if (vMax[j][1][0] < vMax[j][2][0]) {\n                    long[] temp = vMax[j][1];\n                    vMax[j][1]  = vMax[j][2];\n                    vMax[j][2] = temp;\n                }\n                if (vMax[j][0][0] < vMax[j][1][0]) {\n                    long[] temp = vMax[j][1];\n                    vMax[j][1]  = vMax[j][0];\n                    vMax[j][0] = temp;\n                }\n            }\n        }\n        \n\n        for (int i = 0; i < n * 3; i++) {\n            for (int j = i + 1; j < n * 3; j++) {\n                for (int k = j + 1; k < n * 3; k++) {\n                    long[] a = hMax[i / 3][i % 3];\n                    long[] b = hMax[j / 3][j % 3];\n                    long[] c = hMax[k / 3][k % 3];\n                    if (a[1] == b[1] || b[1] == c[1] || a[1] == c[1]) {\n                        continue;\n                    }\n                    if (a[2] == b[2] || b[2] == c[2] || a[2] == c[2]) {\n                        continue;\n                    }\n                    max = Math.max(max, a[0] + b[0] + c[0]);\n                }\n            }\n        }\n\n\n        return max;\n    }\n}",
    "submit_ts": "1723908942",
    "subm_id": "1359173342"
}