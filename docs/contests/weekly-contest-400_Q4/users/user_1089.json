{
    "username": "yfnijm",
    "submission": "class Solution {\n    void addAndNum(int& num, vector<int>& bitArray, int andNum) {\n        for(int i = 0; i < 30; i++) {\n            if((andNum & (1 << i))) continue; \n            bitArray[i]--;\n            if(bitArray[i] == -1)\n                num ^= (1 << i);\n        }\n    }\n    \n    void delAndNum(int& num, vector<int>& bitArray, int andNum) {\n        for(int i = 0; i < 30; i++) {\n            if((andNum & (1 << i))) continue;\n            bitArray[i]++;\n            if(!bitArray[i])\n                num ^= (1 << i);\n        }\n    }\n    \npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int res = INT_MAX;\n        \n        int andNum = (1<<30) - 1, minNum = 0;\n        vector<int> bitArray(32);\n        int i = 0, j = 0;\n        for(; j < n; j++) {\n            addAndNum(andNum, bitArray, nums[j]);\n            res = min(res, abs(andNum - k));\n            while(andNum < k) {\n                int tmp = andNum;\n                delAndNum(andNum, bitArray, nums[i]);\n                res = min(res, abs(andNum - k));\n                if(andNum >= k) {\n                    //addAndNum(andNum, bitArray, nums[j]);\n                    i++;\n                    break;\n                }else {\n                    i++;\n                }\n            }\n            //cout << andNum << \" \";\n            res = min(res, abs(andNum - k));\n        }\n        /*\n        andNum = andNum = (1<<30) - 1;\n        bitArray = vector<int>(32);\n        i = 0, j = 0;\n        for(; j < n; j++) {\n            addAndNum(andNum, bitArray, nums[j]);\n            while(andNum >= k) {\n                delAndNum(andNum, bitArray, nums[i]);\n                if(andNum < k) {\n                    addAndNum(andNum, bitArray, nums[i]);\n                    break;\n                } else {\n                    i++;\n                } \n            }\n            res = min(res, abs(andNum - k));\n        }*/\n        \n        return res;\n    }\n};",
    "submit_ts": "1717300475",
    "subm_id": "1274845333"
}