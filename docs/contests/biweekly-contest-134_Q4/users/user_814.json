{
    "username": "senapatirana415",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll const mod = 1e9+7;\n    ll gcd(ll a, ll b){if (b == 0)return a;return gcd(b, a % b);} //__gcd \n    ll lcm(ll a, ll b){return (a/gcd(a,b)*b);}\n    ll moduloMultiplication(ll a,ll b){ll res = 0;a %= mod;while (b){if (b & 1)res = (res + a) % mod;b >>= 1;}return res;}\n    ll powermod(ll x, ll y, ll p){ll res = 1;x = x % p;if (x == 0) return 0;while (y > 0){if (y & 1)res = (res*x) % p;y = y>>1;x = (x*x) % p;}return res;}\n\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll count = 0;\n\n        gcd(1,2);\n        gcd(3,5);\n        gcd(3,4);\n        gcd(34,5);\n        lcm(83,5);\n        lcm(1,2);\n\n        unordered_map<ll,ll> preRes;\n\n        for(int i=0;i<n;i++){\n            unordered_map<ll,ll> currRes;\n            \n            if( nums[i] == k){\n                ++count;\n            }\n            currRes[nums[i]] = 1;\n\n            for(auto& [val,freq] : preRes ){\n                    ll newAndRes = val & nums[i];\n                    if(newAndRes == k){\n                        count += freq;\n                    }\n                    currRes[newAndRes] += freq;\n            }\n            preRes = currRes;\n        }\n\n        gcd(2,4);\n        lcm(3,5);\n        lcm(3,5);\n        gcd(3,5);\n        gcd(3,4);\n        gcd(34,5);\n        lcm(83,5);\n        lcm(1,2);\n        lcm(100,3);\n        return count;\n    }\n};",
    "submit_ts": "1720279405",
    "subm_id": "1311749899"
}