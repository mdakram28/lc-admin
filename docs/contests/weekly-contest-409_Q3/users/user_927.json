{
    "username": "itsabhijitsingh",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        // Initialize the distance vector\n        vector<int> guttuarray(n, 0);\n        for (int i = 1; i < n; ++i) {\n            guttuarray[i] = guttuarray[i - 1] + 1;\n        }\n\n        set<int> Guttuhub;\n        for (int i = 0; i < n; ++i) {\n            Guttuhub.insert(i);\n        }\n\n        vector<int> answer;\n\n        for (const auto& q : queries) {\n            int start = q[0];\n            int end = q[1];\n\n            auto lb = Guttuhub.lower_bound(start + 1);\n            auto ub = Guttuhub.lower_bound(end);\n\n            // Erase the range [left, right]\n            Guttuhub.erase(lb, ub);\n\n            answer.push_back(Guttuhub.size() - 1);\n        }\n\n        return answer;\n    }\n};",
    "submit_ts": "1722743558",
    "subm_id": "1343794644"
}