{
    "username": "nektar-pi",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> mt1, mt2;\n        int n = size(points);\n        for(int i{}; i<n; ++i){\n            mt1.insert(points[i][0]+points[i][1]);\n            mt2.insert(points[i][0]-points[i][1]);\n        }\n        int ans{INT_MAX};\n        for(int i{}; i<n; ++i){\n            int tm1 = points[i][0]+points[i][1];\n            int tm2 = points[i][0]-points[i][1];\n            mt1.erase(mt1.find(tm1));\n            mt2.erase(mt2.find(tm2));\n            int sm1 = *mt1.begin()-*mt1.rbegin();\n            int sm2 = *mt2.begin()-*mt2.rbegin();\n            ans = min(ans, max(abs(sm1), abs(sm2)));\n            mt1.insert(tm1);\n            mt2.insert(tm2);\n        }\n        return ans;\n    }\n};"
}