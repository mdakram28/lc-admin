{
    "username": "kevincabbage",
    "submission": "class Solution {\npublic:\n    int LargerNum(vector<int> &nums, int x) {\n        int left = 0, right = nums.size();\n        \n        while(left < right) {\n            int mid = (left + right) / 2;\n            if(nums[mid] <= x) left = mid + 1;\n            else right = mid;\n        }\n        \n        return nums.size() - left + 1;\n    }\n    \n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diff_record;\n        vector<int> total_record;\n        int res = nums.size();\n        \n        for(int i = 0; 2 * i < nums.size(); ++i) {\n            int num1 = nums[i];\n            int num2 = nums[nums.size() - i - 1];\n            \n            int min_num = num1;\n            min_num = min(min_num, k - num1);\n            min_num = min(min_num, num2);\n            min_num = min(min_num, k - num2);\n            \n            total_record.push_back(min_num);\n            diff_record[abs(num1 - num2)].push_back(min_num);\n        }\n        \n        sort(total_record.begin(), total_record.end());\n        \n        for(auto &it : diff_record) {\n            sort(it.second.begin(), it.second.end());\n            \n            int total_change_num = total_record.size() - it.second.size();\n            int total_large_num = LargerNum(total_record, k - it.first) - LargerNum(it.second, k - it.first);\n            \n            res = min(res, total_change_num + total_large_num);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1721490033",
    "subm_id": "548321289"
}