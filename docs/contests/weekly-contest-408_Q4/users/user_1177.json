{
    "username": "YubiDesu",
    "submission": "class Solution:\n    def canReachCorner(self, X_BOUND: int, Y_BOUND: int, circles: List[List[int]]) -> bool:\n        # N^2 check over the circles for overlap?\n        # N check of the circles for intersection with the top/left and bottom/right\n        \n        ufMap = {}\n        def union(x, y):\n            rootX = find(x)\n            rootY = find(y)\n            ufMap[rootX] = rootY\n\n        def find(x):\n            if not x in ufMap:\n                ufMap[x] = x\n            if ufMap[x] != x:\n                ufMap[x] = find(ufMap[x])\n            return ufMap[x]\n\n        N = len(circles)\n        \n        for i in range(N):\n            ufMap[i] = i\n        \n        for i, firstCircle in enumerate(circles):\n            for j in range(i+1, N):\n                secondCircle = circles[j]\n                \n                [x1,y1,r1] = firstCircle\n                [x2,y2,r2] = secondCircle\n                xDist = abs(x1 - x2)\n                yDist = abs(y1 - y2)\n                rDist = (r1+r2)\n                # if (xDist*xDist + yDist*yDist) <= (r1+r2)*:\n                if (xDist*xDist + yDist*yDist) <= rDist*rDist:\n                    union(i, j)\n        # print(ufMap)\n        \n        touchesLeft = {}\n        touchesRight = {}\n        groupTouchesLeft = {}\n        groupTouchesRight = {}\n        for i in range(N):\n            root = find(i)\n            groupTouchesLeft[i] = False\n            groupTouchesRight[i] = False\n\n        for idx,circle in enumerate(circles):\n            [x,y,r] = circle\n            xDist = x\n            yDist = Y_BOUND - y\n            # if (xDist*xDist + yDist*yDist) >= (r):\n            if xDist <= r or yDist <= r:\n                touchesLeft[idx] = True\n                groupTouchesLeft[find(idx)] = True\n            else:\n                touchesLeft[idx] = False\n                \n            # [x,y,r] = circle\n            xDist = X_BOUND - x\n            yDist = y\n            # if (xDist*xDist + yDist*yDist) >= (r):\n            if xDist <= r or yDist <= r:\n                touchesRight[idx] = True\n                groupTouchesRight[find(idx)] = True\n            else:\n                touchesRight[idx] = False\n                \n                \n        # print(ufMap)\n        # print(touchesLeft)\n        # print(touchesRight)\n        \n        for i in range(N):\n            root = find(i)\n            if groupTouchesLeft[root] and groupTouchesRight[root]:\n                return False\n        \n\n        return True\n                \n                \n                \n                \n",
    "submit_ts": "1722137168",
    "subm_id": "1335756115"
}