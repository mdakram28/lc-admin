{
    "username": "dd_001__",
    "submission": "class TrieNode {\npublic:\n    bool isEOW;\n    vector<TrieNode*> child;\n    int cost;\n\n    TrieNode() { isEOW = false; child.resize(26, NULL); cost = INT_MAX;}\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    Trie() { root = new TrieNode(); }\n\n    void insert(string& word, int cost) {\n        TrieNode* node = root;\n\n        for (int i = 0; i < word.size(); i++) {\n            if (node->child[word[i] - 'a'] == NULL) {\n                TrieNode* newNode = new TrieNode();\n                node->child[word[i] - 'a'] = newNode;\n            }\n\n            node = node->child[word[i] - 'a'];\n        }\n\n        node->isEOW = true;\n        node->cost = min(node->cost, cost);\n    }\n\n    int f(vector<int>& dp, string& target, int idx)\n    {\n        if(idx == target.size())\n            return 0;\n\n        if(dp[idx] != -1)\n            return dp[idx];\n\n        TrieNode* node = root;\n        dp[idx] = INT_MAX;\n\n        for(int i = idx; i < target.size(); i++)\n        {\n            if (node->child[target[i] - 'a'] == NULL)\n                break;\n\n            node = node->child[target[i] - 'a'];\n\n            if(node->isEOW)\n                dp[idx] = min(1LL * dp[idx], 1LL * node->cost + 1LL * f(dp, target, i + 1));\n        }\n\n        return dp[idx];\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n    {\n        Trie* trie = new Trie();\n        \n        for(int i = 0; i < words.size(); i++)\n        {\n            trie->insert(words[i], costs[i]);\n        }\n        \n        vector<int> dp(target.size(), -1);\n        \n        trie->f(dp, target, 0);\n        int ans = dp[0];\n        \n        if(ans == INT_MAX) ans = -1;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720322376",
    "subm_id": "1312348216"
}