{
    "username": "mbeceanu",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        l=len(nums)\n        for i in range(l):\n            nums[i]-=target[i]\n        lst=[(i, nums[i]) for i in range(l) if nums[i]>0]\n        lst2=[(i, -nums[i]) for i in range(l) if nums[i]<0]\n        self.ans=0\n        def comb(lst):\n            if len(lst)==0:\n                return\n            lst.sort(key=lambda x:-x[1])\n            g=[0]*l\n            l2=len(lst)\n            i=0\n            ct=0\n            t=[]\n            while i<l2:\n                _, val=lst[i]\n                while i<l2 and lst[i][1]==val:\n                    v=lst[i][0]\n                    g[v]=1\n                    tmp=1\n                    if v>0 and g[v-1]==1:\n                        tmp-=1\n                    if v<l-1 and g[v+1]==1:\n                        tmp-=1\n                    ct+=tmp\n                    i+=1\n                t.append((val, ct))\n            t.append((0, -1))\n            l3=len(t)\n            for i in range(l3-1):\n                self.ans+=t[i][1]*(t[i][0]-t[i+1][0])\n        comb(lst)\n        comb(lst2)\n        return self.ans\n\n        ",
    "submit_ts": "1721531113",
    "subm_id": "1327952566"
}