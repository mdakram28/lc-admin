{
    "username": "parthraut45",
    "submission": "class TrieNodeCustom {\npublic:\n    unordered_map<char, TrieNodeCustom*> cld;\n    int price; \n    TrieNodeCustom() : price(INT_MAX) {}\n};\n\nclass TrieCustom {\npublic:\n    TrieNodeCustom* root;\n    \n    TrieCustom() {\n        root = new TrieNodeCustom();\n    }\n    \n    void dalo(const string& akshar, int price) {\n        TrieNodeCustom* node = root;\n        for (char c : akshar) {\n            if (!node->cld.count(c)) {\n                node->cld[c] = new TrieNodeCustom();\n            }\n            node = node->cld[c];\n        }\n        node->price = min(node->price, price);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string res, vector<string>& shabd, vector<int>& prices) {\n        int length = res.size();\n        TrieCustom trieCustom;\n        for (int i = 0; i < shabd.size(); ++i) {\n            trieCustom.dalo(shabd[i], prices[i]);\n        }\n        \n        vector<int> dp(length + 1, INT_MAX);\n        dp[0] = 0;\n        \n        int i = 0;\n        while (i < length) {\n            if (dp[i] == INT_MAX) {\n                ++i;\n                continue;\n            }\n            \n            TrieNodeCustom* node = trieCustom.root;\n            int j = i;\n            while (j < length) {\n                if (!node->cld.count(res[j])) break;\n                node = node->cld[res[j]];\n                if (node->price != INT_MAX) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->price);\n                }\n                ++j;\n            }\n            ++i;\n        }\n        \n        return dp[length] == INT_MAX ? -1 : dp[length];\n    }\n};\n",
    "submit_ts": "1720324352",
    "subm_id": "1312397439"
}