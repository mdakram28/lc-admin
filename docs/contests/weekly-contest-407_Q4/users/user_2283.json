{
    "username": "cheng-jun-hong",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        l = len(nums)\n        nums = [target[i] - nums[i] for i in range(l)] + [0]\n        a = 0\n        b = 0\n        for i in range(1, l+1):\n            if nums[i] > nums[i-1]:\n                a += nums[i] - nums[i-1]\n            if nums[i] < nums[i-1]:\n                b += nums[i-1] - nums[i]\n        return max(a, b)\n        \n        # def dfs(x, y):\n        #     a = 0\n        #     b = 0\n        #     for i in range(x+1, y+1):\n        #         if nums[i] > nums[i-1]:\n        #             a += nums[i] - nums[i-1]\n        #         if nums[i] < nums[i-1]:\n        #             b += nums[i-1] - nums[i]\n        #     return max()",
    "submit_ts": "1721533597",
    "subm_id": "548400042"
}