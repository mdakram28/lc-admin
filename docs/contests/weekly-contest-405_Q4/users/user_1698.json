{
    "username": "user7814X",
    "submission": "class Solution {\nstatic class TrieNode {\n        TrieNode[]children;\n        int cost;\n\n        public TrieNode() {\n            children =new TrieNode[26];\n            cost =Integer.MAX_VALUE;\n        }\n    }\n\n    static class Trie {\n        TrieNode root;\n\n        public Trie() {\n            root = new TrieNode();\n        }\n\n        public void insert(String word, int cost) {\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                int idx = c - 'a';\n                if (node.children[idx]==null) {\n                    node.children[idx] =new TrieNode();\n                }\n                node =node.children[idx];\n            }\n            node.cost=Math.min(node.cost, cost);  \n        }\n\n        public TrieNode getRoot() {\n            return root;\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        Trie trie = new Trie();\n        for (int i=0;i<words.length;i++) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i]==Integer.MAX_VALUE) continue;\n            TrieNode node = trie.getRoot();\n            for (int j = i; j < n; j++) {\n                int idx=target.charAt(j) - 'a';\n                if (node.children[idx] == null) break;\n                node=node.children[idx];\n                if (node.cost!=Integer.MAX_VALUE) {\n                    dp[j+1] = Math.min(dp[j+1],dp[i]+node.cost);\n                }\n            }\n        }\n\n        return dp[n]==Integer.MAX_VALUE? -1:dp[n];\n    }\n}",
    "submit_ts": "1720323583",
    "subm_id": "1312379089"
}