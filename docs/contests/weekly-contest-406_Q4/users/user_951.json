{
    "username": "user7906ia",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n        vector<int>& verticalCut) {\n        int h = 0, v = 0;\n        long long c = 0;\n\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n\n        int i = horizontalCut.size() - 1, j = verticalCut.size() - 1;\n        while (i >= 0 && j >= 0) {\n            if (verticalCut[j] >= horizontalCut[i]) {\n                v++;\n                c += verticalCut[j] * (h + 1);\n                j--;\n            } else {\n                h++;\n                c += horizontalCut[i] * (v + 1);\n                i--;\n            }\n        }\n\n        while (j >= 0) {\n            v++;\n            c += verticalCut[j] * (h + 1);\n            j--;\n        }\n\n        while (i >= 0) {\n            h++;\n            c += horizontalCut[i] * (v + 1);\n            i--;\n        }\n\n        return c;\n    }\n};",
    "submit_ts": "1720925956",
    "subm_id": "1320271537"
}