{
    "username": "Shivam__07",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int n = grid.size(), m = grid[0].size();\n        int cnt1 = 0;\n        int ones = 0;\n        for (int i = 0; i < n/2; i++) {\n            for (int j = 0; j < m/2; j++) {\n                int xd = grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j] + grid[n-1-i][m-1-j];\n                ans += min(xd, 4-xd);\n            }\n        }\n        if (n % 2 == 1) {\n            int row = n/2;\n            for (int j = 0; j < m/2; j++) {\n                if (grid[row][j] != grid[row][m-1-j]) {\n                    ans++;\n                    ones++;\n                } else {\n                    if (grid[row][j] == 1) cnt1 += 2;\n                }\n            }\n        }\n        if (m % 2 == 1) {\n            int col = m/2;\n            for (int i = 0; i < n/2; i++) {\n                if (grid[i][col] != grid[n-1-i][col]) {\n                    ans++;\n                    ones++;\n                } else {\n                    if (grid[i][col] == 1) cnt1 += 2;\n                }\n            }\n        }\n        if (cnt1 % 4 == 2 and ones > 0) cnt1 += 2;\n        ans += (cnt1 % 4);\n        if (m % 2 == 1 and n % 2 == 1) {\n            if (grid[n/2][m/2] == 1) ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697452",
    "subm_id": "1343147072"
}