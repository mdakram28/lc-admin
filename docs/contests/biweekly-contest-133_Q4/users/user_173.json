{
    "username": "Decision",
    "submission": "class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        int m = 0;\n        final int[] rqs = new int[n];\n        Arrays.fill(rqs, -1);\n        for(int[] kk : requirements){\n            m = Math.max(m, kk[1]);\n            rqs[kk[0]] = kk[1];\n        }\n        final Integer[][] dp = new Integer[n][m+1];\n        return todo(dp, 0, 0, m, n, rqs, 1000000007);\n    }\n    \n    private int todo(Integer[][] dp, int idx, int pre, int m, int n, int[] rqs, int MODE){\n        if(idx >= n){\n            return 1;\n        }\n        if(dp[idx][pre] == null){\n            dp[idx][pre] = 0;\n            if(rqs[idx] >= 0){\n                if(rqs[idx]-pre >= 0 && rqs[idx] - pre <= idx){\n                    dp[idx][pre] = todo(dp, idx+1, rqs[idx], m, n, rqs, MODE);\n                }\n            }else{\n                for(int i=pre,j=Math.min(m, pre+idx);i<=j;++i){\n                    dp[idx][pre] += todo(dp, idx+1, i, m, n, rqs, MODE);\n                    dp[idx][pre] = dp[idx][pre] % MODE;\n                }\n            }\n        }\n        return dp[idx][pre];\n    }\n}",
    "submit_ts": "1719069318",
    "subm_id": "1296793112"
}