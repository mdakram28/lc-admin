{
    "username": "HuangYuting",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int n = nums.length;\n        int[] diffOri = new int[n];\n        diffOri[0] = nums[0];\n        for(int i = 1; i < n; i++) {\n            diffOri[i] = nums[i] - nums[i-1];\n        }\n        int[] diffTar = new int[n];\n        diffTar[0] = target[0];\n        for(int i = 1; i < n; i++) {\n            diffTar[i] = target[i] - target[i-1];\n        }\n        int prev = 0;\n        for(int i = 0; i < n; i++) {\n            int nowDiff = diffTar[i] - diffOri[i];\n            if(nowDiff == 0) {\n                continue;\n            }\n            \n            if(prev == 0 || (long)prev * (long)nowDiff < 0) {\n                prev -= nowDiff;\n                ans += Math.abs(nowDiff);\n            } else {\n                if(Math.abs(prev) >= Math.abs(nowDiff)) {\n                    prev -= nowDiff;\n                    continue;\n                } else {\n                    nowDiff -= prev;\n                    ans += Math.abs(nowDiff);\n                    prev = -nowDiff;\n                }\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1721531793",
    "subm_id": "1327969984"
}