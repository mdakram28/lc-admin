{
    "username": "gr455",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        unordered_map<long long, long long> dp[33][2];\n        \n        return f(k, 1, 0, false, dp);\n    }\n    \n    int f(int k , long long i, int jmp, int dropused, unordered_map<long long, long long> dp[][2]) {\n        if (jmp > (k == 0 ? 2: log2(k) + 2)) return 0;\n        if (i < 0) return 0;\n        \n        if (dp[jmp][dropused].find(i) != dp[jmp][dropused].end()) return dp[jmp][dropused][i];\n        \n        if (i == k) dp[jmp][dropused][i] = 1;\n        \n        dp[jmp][dropused][i] += f(k, i + (1ll << jmp), jmp + 1, false, dp);\n        if (!dropused) dp[jmp][dropused][i] += f(k, i - 1, jmp, true, dp);\n        \n        return dp[jmp][dropused][i];\n    }\n};",
    "submit_ts": "1716089217",
    "subm_id": "1261836329"
}