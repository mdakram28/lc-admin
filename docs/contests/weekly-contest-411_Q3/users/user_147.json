{
    "username": "David Li",
    "submission": "class Solution {\n    \n    string generate(int amt, int num) {\n        string ret = \"\";\n        for(int i =0 ; i < amt; i++) {\n            ret += (num + '0');\n        }\n        return ret;\n    }\n    \n    bool checkDivBy7(string s) {\n        if(s.size() % 3 == 1) {\n            s = \"00\" + s;\n        } else if(s.size() % 3 == 2) {\n            s = \"0\" + s;\n        }\n        bool sub = false;\n        int sum = 0;\n        for(int i = s.size() - 3; i >= 0; i -= 3) {\n            int amt = stoi(s.substr(i, 3));\n            if(sub) {\n                sum -= amt;\n            } else {\n                sum += amt;\n            }\n            sub = !sub;\n        }\n        return (sum % 7) == 0;\n    }\npublic:\n    string largestPalindrome(int n, int k) {\n        if(k == 1 || k == 3 || k == 9) {\n            return generate(n, 9);\n        } else if(k == 2) {\n            if(n <= 2) {\n                return generate(n, 8);\n            }\n            return \"8\" + generate(n - 2, 9) + \"8\";\n        } else if(k == 4) {\n            if(n <= 4) {\n                return generate(n, 8);\n            }\n            return \"88\" + generate(n - 4, 9) + \"88\";\n        } else if(k == 5) {\n            if(n == 1) {\n                return generate(n, 5);\n            }\n            return \"5\" + generate(n - 2, 9) + \"5\";\n        } else if(k == 6) {\n            if(n <= 2) {\n                return generate(n, 6);\n            }\n            // 7 -> 1, 2, 1, 2, 1\n            // 8 -> 1, 2, 2, 2, 1\n            int nines = (n - 3) / 2; \n            if(n % 2 == 1) {\n                int digSum = 2 * (8 + nines * 9);\n                string other = \"0\";\n                if(digSum % 3 == 0) {\n                    other = \"9\";\n                } else if(digSum % 3 == 1) {\n                    other = \"8\";\n                } else {\n                    other = \"7\";\n                }\n                return \"8\" + generate(nines, 9) + other + generate(nines, 9) + \"8\";\n            } else {\n                int digSum = 2 * (8 + nines * 9);\n                string other;\n                if(digSum % 3 == 0) {\n                    other = \"99\";\n                } else if(digSum % 3 == 1) {\n                    other = \"77\";\n                } else {\n                    other = \"88\";\n                }\n                return \"8\" + generate(nines, 9) + other + generate(nines, 9) + \"8\";\n            }\n        } else if(k == 7) {\n            for(int mid = 9; mid >= 0; mid--) {\n                string cand = generate((n-1)/2, 9) + generate(2 - (n % 2), mid) + generate((n-1)/2, 9);\n                if(checkDivBy7(cand)) {\n                    return cand;\n                }\n            }\n            return \"\";\n//             int m = n;\n//             int sum = 0;\n//             bool sub = false;\n//             while(m > 0) {\n//                 int amt = 27;\n//                 if(m == 2) {\n//                     amt = 18;\n//                 } else if(m == 1) {\n//                     amt = 9;\n//                 }\n//                 if(sub) {\n//                     sum -= 27;\n//                 } else {\n//                     sum += 27;\n//                 }\n//                 m -= 3;\n//                 sub = !sub;\n//             }\n            \n//             if(n % 2 == 0) {\n//                 //8 -> 4, 5\n//                 int mid1 = n / 2;\n//                 int mid2 = (n + 1) / 2;\n//                 bool sub = false;\n//                 m = n;\n//                 while(m > mid) {\n//                     m -= 3;\n//                     sub = !sub;\n//                 }\n//                 sub = !sub;\n//                 int mod = sum % 7;\n//                 int dig = (9 - mod);\n//                 if(sub) {\n//                     dig = 9 - (7 - mod);\n//                 }\n//                 return generate(9, n/2) + generate(1, dig) + generate(9, n/2);\n//             } else {\n//                 //7 -> 4\n//                 int mid = (n + 1) / 2;\n//                 bool sub = false;\n//                 m = n;\n//                 while(m > mid) {\n//                     m -= 3;\n//                     sub = !sub;\n//                 }\n//                 sub = !sub;\n//                 int mod = sum % 7;\n//                 int dig = (9 - mod);\n//                 if(sub) {\n//                     dig = 9 - (7 - mod);\n//                 }\n//                 return generate(9, n/2) + generate(1, dig) + generate(9, n/2);\n//             }\n            \n        } else if(k == 8) {\n            if(n <= 6) {\n                return generate(n, 8);\n            }\n            return \"888\" + generate(n - 6, 9) + \"888\";\n        }\n        return \"unknown\";\n    }\n};",
    "submit_ts": "1723950864",
    "subm_id": "1359757053"
}