{
    "username": "user1175bd",
    "submission": "class Solution {\npublic:\n    uint64_t minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int numHorizontal = 1;\n        int numVertical = 1;\n        uint64_t ans = 0;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        while (!horizontalCut.empty() && !verticalCut.empty()) {\n            if (horizontalCut[horizontalCut.size()-1] < verticalCut[verticalCut.size()-1]) {\n                ans += verticalCut[verticalCut.size() - 1] * numHorizontal;\n                numVertical++;\n                verticalCut.pop_back();\n            } else {\n                ans += horizontalCut[horizontalCut.size() - 1] * numVertical;\n                numHorizontal++;\n                horizontalCut.pop_back();\n            }\n        }\n        for (auto x : verticalCut) {\n            ans += x * numHorizontal;\n        }\n        for (auto x : horizontalCut) {\n            ans += x * numVertical;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926212",
    "subm_id": "1320279304"
}