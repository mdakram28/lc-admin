{
    "username": "wivole4747",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        res = [\"0\" for _ in range(n)]\n\n        if k == 9 or k == 1:\n            for i in range(n):\n                res[i] = \"9\"\n        elif k == 2:\n            if n == 1:\n                res[0] = \"8\"\n            if n == 2:\n                return \"88\"\n            res[0] = res[-1] = \"8\"\n            for i in range(1, n - 1):\n                res[i] = \"9\"\n        elif k == 3:\n            for i in range(n):\n                res[i] = \"9\"\n        elif k == 5:\n            res[0] = res[-1] = \"5\"\n            for i in range(1, n - 1):\n                res[i] = \"9\"\n        elif k == 4:\n            if n == 1:\n                return \"8\"\n            res[0] = res[1] = res[-1] = res[-2] = \"8\"\n            for i in range(2, n - 2):\n                res[i] = \"9\"\n        elif k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            res[0] = res[-1] = \"8\"\n            sum_digits = 16\n            for i in range(1, n - 1):\n                res[i] = \"9\"\n                sum_digits += 9\n            if sum_digits % 6 != 0:\n                if n % 2:\n                    cur = 8\n                    while sum_digits % 3 != 0:\n                        res[n // 2] = str(cur)\n                        sum_digits -= 1\n                        cur -= 1\n                else:\n                    cur = 8\n                    while sum_digits % 3 != 0:\n                        res[n // 2] = str(cur)\n                        res[(n // 2) - 1] = str(cur)\n                        cur -= 1\n                        sum_digits -= 2\n        elif k == 8:\n            if n == 1:\n                return \"8\"\n            if n == 2:\n                return \"88\"\n            if n == 3:\n                return \"888\"\n            res[0] = res[1] = res[2] = res[-1] = res[-2] = res[-3] = \"8\"\n            for i in range(3, n - 3):\n                res[i] = \"9\"\n        elif k == 7:\n            if n == 1:\n                return \"7\"\n            if n == 2:\n                return \"77\"\n            sum = 0\n            bad = [n//2] if n%2 else [n//2-1, n//2]\n            if n % 2 == 0:\n                for i in range(n):\n                    if i in bad:\n                        continue\n                    res[i] = \"9\"\n                    sum += ((9 % 7) * pow(10, n - i-1, 7) % 7)%7\n                cur = 9\n                p1, p2 = n // 2, n // 2 - 1\n                res[n // 2 - 1] = res[n // 2] = \"9\"\n                while (sum + (cur % 7 * pow(10, p1, 7) % 7) % 7 + (cur % 7 * pow(10, p2, 7) % 7) % 7) % 7 != 0:\n                    cur -= 1\n                    res[n // 2 - 1] = res[n // 2] = str(cur)\n            else:\n                for i in range(n):\n                    if i in bad:\n                        continue\n                    res[i] = \"9\"\n                    sum += ((9 % 7) * pow(10, n - i-1, 7) % 7)%7\n                cur = 9\n                p1 = n // 2\n                res[n // 2] = \"9\"\n                while (sum + (cur % 7 * pow(10, p1, 7) % 7) % 7) % 7 != 0:\n                    cur -= 1\n                    res[n // 2] = str(cur)\n\n        return ''.join(res)\n",
    "submit_ts": "1723953149",
    "subm_id": "1359813661"
}