{
    "username": "MonoLithh",
    "submission": "class Solution {\npublic:\n    \n    int  result(int a, int b)\n{\n  return min(a,b); // desired changes are needed here \n} \n\nvoid update_tree(int node, int a, int b, int i, int j, int value,vector<int>&t) {\n  \n  \n  if(a > b || a > j || b < i) // Current segment is not within range [i, j]\n    return;\n    \n    if(a >= i && b <= j) { // Segment is fully within range\n        t[node] += value;\n\n        return;\n  }\n\n  update_tree(node*2, a, (a+b)/2, i, j, value,t); // Updating left child\n  update_tree(1+node*2, 1+(a+b)/2, b, i, j, value,t); // Updating right child\n\n  t[node] = result(t[node*2], t[node*2+1]); // Updating root with max value\n}\n\n/**\n * Query tree to get max element value within range [i, j]\n */\nint query_tree(int node, int a, int b, int i, int j,vector<int>&t) {\n  \n  if(a > b || a > j || b < i) return 1; // Out of range\n\n  if(a >= i && b <= j) // Current segment is totally within range [i, j]\n    return t[node];\n\n  int q1 = query_tree(node*2, a, (a+b)/2, i, j,t); // Query left child\n  int q2 = query_tree(1+node*2, 1+(a+b)/2, b, i, j,t); // Query right child\n\n  int res = result(q1, q2); // Return final result\n  \n  return res;\n}\n\n    int numberOfAlternatingGroups(vector<int>& color, int k) {\n       int n=color.size();\n        for(int i=0;i<n;i++)\n        {\n            color.push_back(color[i]);\n        }\n        vector<int>sum(2*n,0);\n        vector<int>t(8*n+5,0);\n        for(int i=1;i<2*n;i++)\n        {\n            sum[i]=(color[i]!=color[i-1]);\n            update_tree(1,0,2*n-1,i,i,sum[i],t);\n        }\n        for(int i=0;i<2*n;i++)\n        {\n            cout<<sum[i]<<\" \";\n        }\n        int ans=0;\n        // return 0;\n        for(int i=0;i<n;i++)\n        {\n            int curr=query_tree(1,0,2*n-1,i+1,i+k-1,t);\n            // cout<<i<<\" \"<<curr<<\"\\n\";\n            if(curr==1)\n            {\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278610",
    "subm_id": "1311716644"
}