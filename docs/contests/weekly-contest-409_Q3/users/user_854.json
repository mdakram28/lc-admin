{
    "username": "qR16DWn1gB",
    "submission": "int N = 100010;\nclass Solution {\npublic:\n\nstruct Node {\n    int l, r;\n    int sum, add = -1;\n}tr[4 * 100010];\n\nvoid pushup(int u) {\n    tr[u].sum = tr[u << 1].sum + tr[u << 1 | 1].sum;\n}\n\nvoid pushdown(int u) {\n    if (tr[u].add != -1) {\n        tr[u << 1].add = tr[u].add;\n        tr[u << 1].sum = (tr[u << 1].r - tr[u << 1].l + 1) * tr[u].add;\n        tr[u << 1 | 1].add = tr[u].add;\n        tr[u << 1 | 1].sum = (tr[u << 1 | 1].r - tr[u << 1 | 1].l + 1) * tr[u].add;\n        tr[u].add = -1;\n        return;\n    }\n}\n\nvoid built(int u, int l, int r) {\n    tr[u].l = l, tr[u].r = r;\n    if (l == r) {\n        tr[u].sum = 1;\n        tr[u].add = -1;\n        return;\n    }\n    int mid = l + r >> 1;\n    built(u << 1, l, mid), built(u << 1 | 1, mid + 1, r);\n    pushup(u);\n}\n\nvoid modify(int u, int l, int r, int k) {\n    if (tr[u].l >= l && tr[u].r <= r) {\n        tr[u].sum = (tr[u].r - tr[u].l + 1) * k;\n        tr[u].add = k;\n        return;\n    }\n\n    pushdown(u);\n    int mid = tr[u].l + tr[u].r >> 1;\n    if (l <= mid) modify(u << 1, l, r, k);\n    if (r >= mid + 1) modify(u << 1 | 1, l, r, k);\n    pushup(u);\n}\n\nint query(int u, int l, int r) {\n    if (tr[u].l >= l && tr[u].r <= r) {\n        return tr[u].sum;\n    }\n\n    pushdown(u);\n    int mid = tr[u].l + tr[u].r >> 1;\n    int res = 0;\n    if (l <= mid) res = query(u << 1, l, r);\n    if (r >= mid + 1) res += query(u << 1 | 1, l, r);\n\n    return res;\n}\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        built(1, 1, n);\n        vector<int> ans(queries.size());\n        for (int i = 0; i < queries.size(); i++) {\n            int u = queries[i][0], v = queries[i][1];\n            u++, v++;\n\n            // int sum = query(1, u, v);\n            // int m = query(1, u - 1, u - 1);\n            \n            // cout << \"u - 1: \" << u - 1 << endl;\n            // if (sum == 0 || sum == 1) {\n            //     ans[i] = ans[i - 1];\n            // } else if (u - 1 >= 1 && sum == v - u + 1 && m == 1) {\n            //     modify(1, u, v - 1, 0);\n            //     cout << i << endl;\n            // } else if (sum == v - u && query(1, v, v) == 0) {\n            //     modify(1, u, v - 1, 0);\n            //     modify(1, v, v, 1);\n\n            // } else if (u - 1 >= 1 && m == 0) {\n                \n            //     modify(1, u + 1, v - 1, 0);\n            // } else {\n                \n            //     modify(1, u, v - 1, 0);\n            // }\n\n            if (u + 1 <= v - 1) modify(1, u + 1, v - 1, 0);\n\n            //for (int i = 1; i <= n; i++) cout << query(1, i, i) << \" \";\n            cout << \"\\n\";\n\n            int res = 0;\n\n            res += query(1, 1, n) - 1;\n            ans[i] = res;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742422",
    "subm_id": "552344534"
}