{
    "username": "Anurag Mudgil",
    "submission": "class Solution {\npublic:\n    int find(vector<int> &v, int l, int r){\n\n        int start = l ;\n        int end = r ;\n        int r1 = r ;\n        int ans = end ;\n        while(start<=end){\n            int m = (start+end)/2 ;\n            if(v[m]>=r1){\n                ans = m ;\n                end = m-1 ;\n            }\n            else{\n                start = m+1 ;\n            }\n        }\n        return ans ;\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = (int)s.size() ;\n        vector<int> final_index(s.size()) ;\n        vector<long long int> cm(n) ;\n        int o = 0 ;\n        int z = 0 ; \n        int j = 0 ;\n        for(int i=0;i<s.size();i++){\n            for(;j<=s.size();){\n                if(j==s.size()){\n                    break ;\n                }\n                if(s[j]=='1'){\n                    o++ ;\n                    if(o>k && z>k){\n                        o-- ;\n                        break ;\n                    }\n                }\n                else{   \n                    z++ ;\n                    if(o>k && z>k){\n                        z-- ;\n                        break ;\n                    }\n                }\n                j++ ;\n            }\n            final_index[i] = j - 1  ;\n            if(s[i]=='1'){\n                o-- ;\n            }\n            else{\n                z-- ;\n            }\n        }\n\n        for(int i=0;i<final_index.size();i++){\n            cout<<final_index[i]<<\" \" ;\n        }\n        cout<<endl ;\n\n        for(int i=0;i<n;i++){\n            long long int prev = 0 ;\n            if(i>0){\n                prev = cm[i-1] ;\n            }\n            long long int curr = final_index[i] - i + 1 ;\n            cm[i] = prev + curr ;\n        }\n\n        for(int i=0;i<cm.size();i++){\n            cout<<cm[i]<<\" \" ;\n        }\n        cout<<endl ;\n\n\n        vector<long long int> f_ans ;\n\n        for(int i=0;i<queries.size();i++){\n            int l = queries[i][0] ;\n            int r = queries[i][1] ;\n           // l-- ;\n           // r-- ;\n\n            int f_index = find(final_index, l, r) ;\n            cout<<f_index<<endl ;\n            int s = r - f_index + 1 ;\n            long long int ans = (1LL*s*(s+1))/2 ;\n            if(f_index>l){\n                long long int p1 = 0LL ;\n                if(l>0){\n                    p1 = cm[l-1] ;\n                }\n                long long int p = 1LL*cm[f_index-1] - p1 ;\n                ans+=p ;\n            }\n            f_ans.push_back(ans) ;\n        }\n\n        return f_ans ;\n    }\n};",
    "submit_ts": "1723953500",
    "subm_id": "1359822937"
}