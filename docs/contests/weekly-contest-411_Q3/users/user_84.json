{
    "username": "Nebulous Mirage",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        switch(k) {\n            case 1:\n            case 3:\n            case 9:\n                return string(n, '9');\n            case 2:\n                if (n <= 2) {\n                    return string(n, '8');\n                }\n                return \"8\" + string(n - 2, '9') + '8';\n            case 4:\n                if (n <= 4) {\n                    return string(n, '8');\n                }\n                return \"88\" + string(n - 4, '9') + \"88\";\n            case 5:\n                if (n <= 2) {\n                    return string(n, '5');\n                }\n                return \"5\" + string(n - 2, '9') + '5';\n            case 6:\n                if (n == 1) {\n                    return \"6\";\n                }\n                if (n == 2) {\n                    return \"66\";\n                }\n                if (n % 2 == 1) {\n                    return \"8\" + string((n - 3)/2, '9') + '8' + string((n - 3)/2, '9') + '8';\n                }\n                return \"8\" + string((n - 4)/2, '9') + \"77\" + string((n - 4)/2, '9') + '8';\n            case 7: {\n                int offset = (getMod7(n) + 7 - 1) % 7;\n                if (n % 2 == 1) {\n                    int digit = n / 2;\n                    int div = getMod7(digit);\n                    for (int i = 9; i >= 0; --i) {\n                        if ((offset - div * (9 - i)) % 7 == 0) {\n                            return string((n - 1) / 2, '9') + to_string(i) + string((n - 1) / 2, '9');\n                        }\n                    }\n                }\n                int digit1 = n / 2 - 1;\n                int digit2 = (n / 2);\n                int div = (getMod7(digit1) + getMod7(digit2)) % 7;\n                // printf(\"%d, %d, %d, %d\\n\", offset, digit1, digit2, div);\n                for (int i = 9; i >= 0; --i) {\n                    if ((offset - div * (9 - i)) % 7 == 0) {\n                        return string((n - 2) / 2, '9') + to_string(i) + to_string(i) + string((n - 2) / 2, '9');\n                    }\n                }\n                return \"\";\n            }\n            case 8:\n                if (n <= 6) {\n                    return string(n, '8');\n                }\n                return \"888\" + string(n - 6, '9') + \"888\";\n            default:\n                return \"\";\n        }\n    }\n    \n    int getMod7(int n) {\n        int ans = 1;\n        for (int i = 0; i < n; ++i) {\n            ans *= 10;\n            ans %= 7;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950824",
    "subm_id": "1359756048"
}