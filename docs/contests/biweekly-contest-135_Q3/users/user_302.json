{
    "username": "SaveVMK",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        ArrayList<TreeSet<Integer>> al = new ArrayList<>();\n        for (int i = 0; i <= k; ++i) {\n            al.add(new TreeSet<>());\n        }\n        int[] tops = new int[n/2];\n        for (int i = 0; i < n/2; ++i) {\n            tops[i] = nums[i];\n            tops[i] = Math.max(tops[i],nums[n-i-1]);\n            tops[i] = Math.max(tops[i],k-nums[i]);\n            tops[i] = Math.max(tops[i],k-nums[n-i-1]);\n        }\n        int[] cts = new int[k+1];\n        int[] tcts = new int[k+1];\n        for (int i = 0; i < n/2; ++i)\n            cts[Math.abs(nums[i]-nums[n-i-1])]++;\n        for (int x : tops)\n            tcts[x]++;\n        int run = n/2;\n        int ans = n-run-cts[0];\n        for (int i = 1; i <= k; ++i) {\n            //System.out.println(i+\" \"+run+\" \"+ans+\" \"+cts[i]+\" \"+tcts[i]);\n            run-=tcts[i-1];\n            ans = Math.min(ans,n-run-cts[i]);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721487727",
    "subm_id": "1327399016"
}