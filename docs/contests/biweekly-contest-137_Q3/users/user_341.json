{
    "username": "b08902137",
    "submission": "class Solution {\npublic:\n    \n    \n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        int m = board.size(), n = board[0].size();\n        vector<vector<pair<int, int>>> v(m);\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                v[i].push_back({board[i][j], j});\n            }\n            sort(v[i].begin(), v[i].end(), greater<pair<int, int>>());\n        }\n        \n        \n        long long ret = -3 * 1e9;\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < m; j++){\n                for(int k = 0; k < m; k++){\n                    if(i == j || i == k || j == k)  continue;\n                    int ptrB = 0;\n                    while(v[j][ptrB].second == v[i][0].second)   ptrB++;\n                    int ptrC = 0;\n                    while(v[k][ptrC].second == v[i][0].second || v[k][ptrC].second == v[j][ptrB].second)   ptrC++;\n                    ret = max(ret, (long long)v[i][0].first + v[j][ptrB].first + v[k][ptrC].first);          \n                }\n            }\n        }\n        \n        return ret;\n        \n    }\n};",
    "submit_ts": "1723907817",
    "subm_id": "1359125614"
}