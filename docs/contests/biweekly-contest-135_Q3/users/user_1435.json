{
    "username": "vaibhaviroy2002",
    "submission": "class Solution {\npublic:\n    void Differences(vector<int>& nums, int k, map<int, vector<int>>& diffToMaxMap, vector<int>& maxValues) {\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i];\n            int b = nums[n - i - 1];\n            int diff = abs(a - b);\n            int X = max({a, b, k - a, k - b});\n            diffToMaxMap[diff].push_back(X);\n            maxValues.push_back(X);\n        }\n    }\n\n    int InitialChanges(int n, vector<int>& maxValues, int diff) {\n        int T = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n        return T * 2 + (n / 2 - T);\n    }\n\n    int MinChanges(vector<int>& nums, map<int, vector<int>>& diffToMaxMap, vector<int>& maxValues) {\n        int n = nums.size();\n        int minChanges = n;\n        for (auto& pair : diffToMaxMap) {\n            int diff = pair.first;\n            int changes = InitialChanges(n, maxValues, diff);\n            for (int X : pair.second) {\n                changes -= (X < diff) ? 2 : 1;\n            }\n            minChanges = min(minChanges, changes);\n        }\n        return minChanges;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffToMaxMap;\n        vector<int> maxValues;\n        Differences(nums, k, diffToMaxMap, maxValues);\n        sort(maxValues.begin(), maxValues.end());\n        return MinChanges(nums, diffToMaxMap, maxValues);\n    }\n};",
    "submit_ts": "1721489481",
    "subm_id": "1327454563"
}