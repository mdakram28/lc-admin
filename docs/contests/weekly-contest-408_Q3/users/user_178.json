{
    "username": "Ajit123",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n        \n        vector<vector<int>> cnt(n+1, vector<int>(2));\n        for(int i=1; i<=n; i++) {\n            cnt[i] = cnt[i-1];\n            cnt[i][s[i-1]-'0']++;\n        }\n\n        int ans = 0;\n        vector<int> zeros;\n        for(int i=1; i<=n; i++) {\n            if (s[i-1] == '0') {\n                zeros.push_back(i);\n            }\n\n            int siz = zeros.size();\n            int tot = 0;\n            if (zeros.empty()) {\n                ans += i;\n                continue;\n            }\n            else {\n                ans += (i-zeros.back());\n            }\n\n            for(int j=siz-1; j>=0; j--) {\n                int val = zeros[j];\n                tot++;\n                int cur_ind = zeros[j];\n                int nxt_ind = j ? zeros[j-1] : 0;\n                if (tot * tot > i) {\n                    break;\n                }\n\n                int cur_ones_cnt = cnt[i][1] - cnt[cur_ind-1][1];\n                int between = cur_ind - nxt_ind - 1;\n                int need = max(tot*tot - cur_ones_cnt, 0);\n                if (need > between) {\n                    continue;\n                }\n                \n                ans += between-need+1;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722135485",
    "subm_id": "1335703338"
}