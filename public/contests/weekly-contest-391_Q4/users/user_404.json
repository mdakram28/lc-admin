{
    "username": "stemdarrenyang",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n\nusing ll = long long;\nusing ld = long double;\nusing str = string;\n\nusing pi = pair<int, int>;\nusing pl = pair<ll, ll>;\nusing pd = pair<ld, ld>;\n#define mp make_pair\n#define f first\n#define s second\n\n#define vt vector\nusing vi = vt<int>;\nusing vb = vt<bool>;\nusing vl = vt<ll>;\nusing vd = vt<ld>;\nusing vs = vt<str>;\nusing vpi = vt<pi>;\nusing vpl = vt<pl>;\nusing vpd = vt<pd>;\n#define sz(x) (int)(x).size()\n#define bg(x) begin(x)\n#define all(x) bg(x), end(x)\n#define rall(x) rbegin(x), rend(x)\n#define sor(x) sort(all(x))\n#define rs resize\n#define is insert\n#define pb push_back\n#define eb emplace_back\n#define ft front()\n#define bk back()\n\n#define lb lower_bound\n#define ub upper_bound\n\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define F0R(i, a) FOR(i, 0, a)\n#define ROF(i, a, b) for (int i = (b)-1; i >= (a); --i)\n#define R0F(i, a) ROF(i, 0, a)\n#define each(x, a) for (auto& x: a)\n\nconst int M = 1e9+7;\n// const int M = 998244353;\nconst int d4i[]{-1, 0, 1, 0}, d4j[]{0, 1, 0, -1};\nconst int d8i[]{-1, -1, 0, 1, 1, 1, 0, -1}, d8j[]{0, 1, 1, 1, 0, -1, -1, -1};\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> sum, diff;\n        F0R(i, sz(points)) {\n            sum.pb(points[i][0] + points[i][1]);\n            diff.pb(points[i][0] - points[i][1]);\n        }\n        sor(sum), sor(diff);\n        int ans = INT_MAX;\n        F0R(i, sz(points)) {\n            int mn_sum = points[i][0] + points[i][1] == sum[0] ? sum[1] : sum[0];\n            int mx_sum = points[i][0] + points[i][1] == sum.bk ? sum[sz(sum)-2] : sum.bk;\n            int mn_diff = points[i][0] - points[i][1] == diff[0] ? diff[1] : diff[0];\n            int mx_diff = points[i][0] - points[i][1] == diff.bk ? diff[sz(diff)-2] : diff.bk;\n            ans = min(max(mx_sum - mn_sum, mx_diff - mn_diff), ans);\n        }\n        return ans;\n    }\n};"
}