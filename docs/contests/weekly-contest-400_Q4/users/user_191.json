{
    "username": "brijeshsiwach93",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size()        ;\n        vector<vector<int>> bit(n+1,vector<int>(30));\n        for(int i=0;i<n;i++){\n            for(int j=0;j<30;j++){\n                bit[i+1][j]=bit[i][j];\n                if(nums[i]&(1<<j)){\n                    bit[i+1][j]++;\n                }\n            }\n        }\n        auto get_and=[&](int l,int r){\n            int ans=0;\n            for(int i=0;i<30;i++){\n                if(bit[r+1][i]-bit[l][i] == (r-l+1)) {\n                    ans|=(1<<i);\n                }\n            }\n            return ans;\n        };\n        int ans=1e9;\n        for(int i=0;i<n;i++){\n            int l=i,h=n-1,ind1=i,ind2=i;\n            while(l<=h){\n                int mid=(l+h)>>1;\n                int a=get_and(i,mid);\n                if(a>=k) {\n                    ind1=mid;\n                    l=mid+1;\n                }\n                else {\n                    ind2=mid;\n                    h=mid-1;\n                }\n            }\n            ans=min(ans,abs(get_and(i,ind1)-k));\n            ans=min(ans,abs(get_and(i,ind2)-k));\n        }\n        return ans;\n\n    }\n};\n",
    "submit_ts": 1717296594.0
}