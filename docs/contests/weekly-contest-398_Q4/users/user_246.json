{
    "username": "dhairya_996",
    "submission": "class Solution {\n    map<string, int> mp;\n    int getWays(int step, int jump, int flag, int k)\n    {\n        // base cases\n        if(step - k > 1) return 0;\n        \n        string cur = \"\";\n        cur += to_string(step); cur += '.'; cur += to_string(jump); cur += '.'; cur += to_string(flag);\n        if(mp.find(cur) != mp.end()) return mp[cur];\n        \n        int ways = step==k?1:0;\n        if(flag == 0)\n        {\n            // this means operation 1 can be done, as it has not been done previously\n            ways += getWays(step-1, jump, 1, k);\n        }\n        \n        ways += getWays(step+(1<<jump), jump+1, 0, k);\n        return mp[cur] = ways;\n    }\npublic:\n    int waysToReachStair(int k) {\n        int ans = getWays(1, 0, 0, k);\n        return ans;\n    }\n};",
    "submit_ts": "1716088116",
    "subm_id": "1261804419"
}