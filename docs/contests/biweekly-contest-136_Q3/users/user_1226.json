{
    "username": "JanBorowski",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        cost = 0\n        for row in range(m//2):\n                for col in range(n//2):\n                    s = grid[row][col] + grid[row][n - 1 - col] + grid[m - row - 1][col] + grid[m - row - 1][n - col - 1]\n                    cost += min(s, 4 - s)\n\n        if n % 2 and m % 2 :\n            cost += grid[m//2][n//2]\n            c = sum(grid[i][n//2] != grid[m - 1 - i][n//2] for i in range(m // 2)) + sum(grid[m//2][i] != grid[m//2][n - 1 - i] for i in range(n // 2))\n            s = sum(grid[i][n//2] for i in range(m)) + sum(b for b in grid[m//2]) - 2 * grid[m//2][n//2]\n            \n        else :\n            if n % 2 :\n                mid = [grid[i][n//2] for i in range(m)]\n\n            elif m % 2 :\n                mid = grid[m//2]\n                \n\n            else : \n                return cost\n\n            c = sum(mid[i] != mid[len(mid) - 1 - i] for i in range(len(mid) // 2))\n            s = sum(mid)\n\n        cost += c\n        if s % 4 == 2 and c == 0 :\n            cost += 2 \n        \n\n        return cost\n",
    "submit_ts": "1722698741",
    "subm_id": "1343190277"
}