{
    "username": "Meng-Hsuan Wu",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        LARGE = 10 ** 9 + 1\n        m = len(board)\n        n = len(board[0])\n        top3_by_row = []\n        for r in range(m):\n            pq = []\n            for c in range(3):\n                heappush(pq, (board[r][c], c))\n            for c in range(3, n):\n                heappush(pq, (board[r][c], c))\n                heappop(pq)\n            pq.sort(reverse = True)\n            top3_by_row.append(pq.copy())\n        \n        def place2(r_ban: int, c_ban: int) -> int:\n            ret = -LARGE * 2\n            \n            cols = [-LARGE] * n\n            cols[c_ban] = 0\n            r_list = list(range(r_ban)) + list(range(r_ban + 1, m))\n            top2_by_col = [(-LARGE, i) for i in range(3) if i != c_ban][:2]\n            for r in r_list:\n                top2_curr_row = [i for i in top3_by_row[r] if i[1] != c_ban][:2]\n                #print(top2_curr_row, top2_by_col)\n                tmp = top2_curr_row[0][0] + top2_by_col[0][0] if top2_curr_row[0][1] != top2_by_col[0][1] else max(top2_curr_row[0][0] + top2_by_col[1][0], top2_curr_row[1][0] + top2_by_col[0][0])\n                ret = max(ret, tmp)\n                \n                top2_by_col = sorted(top2_by_col + top2_curr_row, reverse = True)\n                top2_by_col = [top2_by_col[0]] + [top2_by_col[1 if top2_by_col[1][1] != top2_by_col[0][1] else 2]]\n            #print(top2_by_col)\n            #print()\n            \n            return ret\n        \n        ans = -LARGE * 3\n        for r0 in range(m):\n            for i in range(3):\n                c0 = top3_by_row[r0][i][1]\n                ans = max(ans, board[r0][c0] + place2(r0, c0))\n        \n        return ans\n    ",
    "submit_ts": "1723909502",
    "subm_id": "1359194954"
}