{
    "username": "m1stborn",
    "submission": "class Solution {\npublic:\n    vector<int> seg;\n    \n    void build(vector<int>& nums, int segIdx, int l, int r) {\n        if(l==r) {\n            if(l>0 && l<nums.size()-1 && nums[l-1]<nums[l] && nums[l+1]<nums[l]) \n                seg[segIdx] = 1;\n            return;\n        }\n        int mid = (l+r)/2;\n        build(nums, 2*segIdx+1, l, mid);\n        build(nums, 2*segIdx+2, mid+1, r);\n        seg[segIdx] = seg[2*segIdx+1] + seg[2*segIdx+2];\n    }\n    int query(int ql, int qr, int segIdx, int l, int r) { \n        if(ql<=l && r<=qr) return seg[segIdx];\n        if(r<ql || qr<l) return 0;\n        int mid = (l+r)/2;\n        return query(ql, qr, segIdx*2+1, l, mid)+ query(ql, qr, segIdx*2+2, mid+1, r);\n    }\n    void update(vector<int>& nums, int uIdx, int segIdx, int l, int r) { // val = max val end with uIdx\n        if(l==r) {\n            if(l>0 && l<nums.size()-1 && nums[l-1]<nums[l] && nums[l+1]<nums[l])\n                seg[segIdx] = 1;\n            else seg[segIdx] = 0;\n            return;\n        }\n        int mid = (l+r)/2;\n        if(uIdx<=mid) update(nums, uIdx, 2*segIdx+1, l, mid);\n        else update(nums, uIdx, 2*segIdx+2, mid+1, r);\n        seg[segIdx] = seg[2*segIdx+1]+ seg[2*segIdx+2];\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n =nums.size();\n        seg.resize(4*n+1, 0);\n\n        build(nums, 0, 0, n-1);        \n        vector<int> ans;\n        for(auto& q: queries) {\n            if(q[0]==1) {\n                if(q[1]==q[2] || q[1]+1==q[2]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                ans.push_back(query(q[1]+1, q[2]-1, 0, 0, n-1));\n            } else {\n                if(nums[q[1]]==q[2]) continue;\n\n                nums[q[1]] = q[2];\n                update(nums, q[1], 0, 0, n-1);\n                if(q[1]-1>=0) update(nums, q[1]-1, 0, 0, n-1);\n                if(q[1]+1<n) update(nums, q[1]+1, 0, 0, n-1);\n            }\n        }\n        // cout << query(1, 1, 0, 0, n-1)<<\" \";\n        return ans;\n    }\n};",
    "submit_ts": 1718507865.0
}