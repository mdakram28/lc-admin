{
    "username": "mew",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>> x, y;\n        for (int i = 0; i < points.size(); i++) {\n            x.push_back({points[i][0]+points[i][1], i});\n            y.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(x.begin(), x.end());\n        sort(y.begin(), y.end());\n        \n//         for (auto it : x )\n//             cout << it[0] << \" \";\n//         cout << endl;\n//         for (auto it : y)\n//             cout << it[0] << \" \";\n//         cout << endl;\n        \n        set<int> s;\n        int n = points.size();\n        s.insert(x[0][1]); s.insert(x[n-1][1]); s.insert(y[0][1]); s.insert(y[n-1][1]);\n        int ans = INT_MAX;\n        for (auto id : s) {\n            int cur = 0;\n            if (x[0][1] == id) {\n                cur = max(x[n-1][0]-x[1][0], cur);\n            } else if (x[n-1][1] == id) {\n                cur = max(x[n-2][0]-x[0][0], cur);\n            } else {\n                cur = max(x[n-1][0]-x[0][0], cur);    \n            }\n            \n            if (y[0][1] == id) {\n                cur = max(y[n-1][0]-y[1][0], cur);\n            } else if (y[n-1][1] == id) {\n                cur = max(y[n-2][0]-y[0][0], cur);\n            } else {\n                cur = max(y[n-1][0]-y[0][0], cur);\n            }\n            // cout << id << \" \" << cur << endl;\n            ans = min(ans, cur);\n        }\n        return ans;\n    }\n};"
}