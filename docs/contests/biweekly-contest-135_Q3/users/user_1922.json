{
    "username": "itsad9513",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        int h = n / 2;\n        \n        auto m = getD(nums, k, h);\n        \n        vector<int> s = getS(m);\n        return calC(m, s, h, n);\n    }\nprivate:\n    map<int, vector<int>> getD(vector<int>& nums, int k, int h) {\n        map<int, vector<int>> m;\n        int i = 0;\n        while (i < h) {\n            int a = nums[i];\n            int b = nums[nums.size() - i - 1];\n            int d = abs(a - b);\n            int v = max({a, b, k - a, k - b});\n            m[d].push_back(v);\n            i++;\n        }\n        return m;\n    }\n    vector<int> getS(map<int, vector<int>>& m) {\n        vector<int> s;\n        for (const auto& p : m) {\n            int i = 0;\n            while (i < p.second.size()) {\n                s.push_back(p.second[i]);\n                i++;\n            }\n        }\n        sort(s.begin(), s.end());\n        return s;\n    }\n    int calC(map<int, vector<int>>& m, vector<int>& s, int h, int n) {\n        int c = n;\n        for (const auto& p : m) {\n            int d = p.first;\n            int t = lower_bound(s.begin(), s.end(), d) - s.begin();\n            t = t * 2 + (h - t);\n            int i = 0;\n            while (i < p.second.size()) {\n                if (p.second[i] < d) {\n                    t -= 2;\n                } else {\n                    t -= 1;\n                }\n                i++;\n            }\n            c = min(c, t);\n        }\n        return c;\n    }\n};",
    "submit_ts": "1721489357",
    "subm_id": "1327450904"
}