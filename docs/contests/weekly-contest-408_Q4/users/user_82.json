{
    "username": "mishai",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> g(n + 4);\n        for (int i = 0; i < n; i++) {\n            long long x = circles[i][0];\n            long long y = circles[i][1];\n            long long r = circles[i][2];\n            if (x - r <= 0) {\n                g[i].push_back(n);\n                g[n].push_back(i);\n            }\n            if (x + r >= X) {\n                g[i].push_back(n + 2);\n                g[n + 2].push_back(i);\n            }\n            if (y - r <= 0) {\n                g[i].push_back(n + 1);\n                g[n + 1].push_back(i);\n            }\n            if (y + r >= Y) {\n                g[i].push_back(n + 3);\n                g[n + 3].push_back(i);\n            }\n            for (int j = i + 1; j < n; j++) {\n                long long x2 = circles[j][0];\n                long long y2 = circles[j][1];\n                long long r2 = circles[j][2];\n                if ((x - x2) * (x - x2) + (y - y2) * (y - y2) <= (r + r2) * (r + r2)) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n\n        // for (int i = 0; i < n + 4; i++) {\n        //     cout << \"adj of \" << i << \"\\n\";\n        //     for (auto y : g[i]) cout << y << \" \";\n        //     cout << \"\\n\";\n        // }\n\n        auto bfs = [&](int start, int end1, int end2) {\n            vector<bool> visited(n + 4, false);\n            queue<int> q;\n            q.push(start);\n            while (!q.empty()) {\n                int x = q.front(); q.pop();\n                if (visited[x]) continue;\n                // cout << \"visiting \" << x << \"\\n\";\n                visited[x] = true;\n                if (x == end1 || x == end2) return true;\n                for (auto y : g[x]) {\n                    q.push(y);\n                }\n            }\n            return false;\n        };\n\n        return !bfs(n + 2, n, n + 3) && !bfs(n + 1, n, n + 3);\n    }\n};",
    "submit_ts": "1722137147",
    "subm_id": "1335755534"
}