{
    "username": "Deepu09",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def func(a,b,idx):\n            a1=a.copy()\n            b1=b.copy()\n            for i,k in enumerate(a1):\n                if k[1]==idx:\n                    # a1.remove(i)\n                    del a1[i]\n            for i,k in enumerate(b1):\n                if k[1]==idx:\n                    # b1.remove(i)\n                    del b1[i]\n            return max(a1[-1][0]-a1[0][0],b1[-1][0]-b1[0][0])\n                \n        a=[]# sums\n        b=[]# diffs\n        for idx,k in enumerate(points):\n            i,j=k\n            a.append((i+j,idx))\n            b.append((i-j,idx))\n        a.sort()\n        b.sort()\n        print(a,b)\n        return min(func(a,b,a[0][1]),func(a,b,a[-1][1]),func(a,b,b[0][1]),func(a,b,b[-1][1]))\n        # return min(a[-1]-a[1],b[-1]-b[1])\n        # return min(max(a[-1]-a[1],b[-1]-b[0]),max(a[-1]-a[0],b[-1]-b[1]),max(a[-2]-a[0],))\n        "
}