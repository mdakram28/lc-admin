{
    "username": "Ivan_len",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int q = queries.size();\n        int sum = 0;\n        set<pair<int, int>> st;\n        for (int i = 0; i < q; i++) {\n            int u = queries[i][0], v = queries[i][1];\n            auto iter = st.lower_bound(make_pair(u, u));\n            if (iter != st.begin()) {\n                iter--;\n                if (iter->second >= v) {\n                    ans.push_back(n - 1 - sum + st.size());\n                    continue;\n                }\n            }\n            iter = st.lower_bound(make_pair(u, u));\n\n            if (iter == st.end()) {\n                sum += v - u;\n                st.insert(make_pair(u, v));\n                ans.push_back(n - 1 - sum + st.size());\n                continue;\n            }\n            if (iter->first == u) {\n                if (iter->second <= v) {\n                    sum -= iter->second - iter->first;\n                    st.erase(iter);\n                }\n                else {\n                    ans.push_back(n - 1 - sum + st.size());\n                    continue;\n                }\n            }\n            while (true) {\n                iter = st.lower_bound(make_pair(u, u));\n                if (iter == st.end() || iter->first >= v) break;\n                sum -= iter->second - iter->first;\n                st.erase(iter);\n            }\n            st.insert(make_pair(u, v));\n            sum += v - u;\n            ans.push_back(n - 1 - sum + st.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740418",
    "subm_id": "1343719259"
}