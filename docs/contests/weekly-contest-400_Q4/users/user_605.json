{
    "username": "nps0706",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& v, int k) {\n        int n=v.size();\n        int i =0,j=0;\n        int ans = INT_MAX;\n        \n        vector<vector<int>>dp(n,vector<int>(31,0));\n        for(int i=0;i<n;i++){\n            int x = v[i],j=0;\n            while(x){\n                dp[i][j]=(x&1);\n                x/=2;\n                j++;\n            }\n        }\n        \n        for(int j=0;j<31;j++){\n            for(int i=1;i<n;i++){\n                dp[i][j] += dp[i-1][j];\n            }\n        }\n        \n        \n        int res = v[0];\n        i=0;\n        while(i<n){\n            res&=v[i];\n            ans=min(ans,abs(res-k));\n           // cout<<res<<\" \";\n           // cout<<ans<<\" \";\n            while(j<i && res <k){\n                res = 0;\n                \n                for(int k=30;k>=0;k--){\n                    if(dp[i][k]-dp[j][k]==(i-j)){\n                       \n                        res += (1<<k);\n                    }\n                }\n               // cout<<j<<\" \"<<i<<res<<\" \";\n                ans=min(ans,abs(res-k));\n              //  cout<<ans<<\" \";\n                j++;\n                \n            }\n            ans=min(ans,abs(res-k));\n            //cout<<i<<\" \"<<ans<<\" \";\n            i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299277.0
}