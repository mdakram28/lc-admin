{
    "username": "rudranilghosh",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, char>> pq;\n        for (int cost : horizontalCut) {\n            pq.push({cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            pq.push({cost, 'V'});\n        }\n        \n        long long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        while (!pq.empty()) {\n            auto [cost, type] = pq.top();\n            pq.pop();\n            \n            if (type == 'H') {\n                totalCost += (long long)(cost) * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += (long long)(cost) * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925290",
    "subm_id": "1320249625"
}