{
    "username": "megurine",
    "submission": "#include <bits/stdc++.h>\n\n#ifdef MEGURINE\n#include \"algo/debug.h\"\n#include \"algo/debug_lc.h\"\n#else\n#define debug(...) 42\n#endif\n\nusing namespace std;\n\n#define itr(it) begin(it), end(it)\n\ntemplate<typename T>\nbool chmax(T &a, T b) { return a < b ? (a = b, true) : false; }\n\ntemplate<typename T>\nbool chmin(T &a, T b) { return a > b ? (a = b, true) : false; }\n\nint __fast_io__ = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\nusing K = array<int, 2>;\n\nK operator+(const K &a, const K &b) {\n    return K{min(a[0], b[0]), max(a[1], b[1])};\n}\n\nint d(K &a) {\n    return max(0, a[1] - a[0] + 1);\n}\n\nint help(vector<vector<int>> &g) {\n    int n = g.size(), m = g[0].size();\n    vector<int> ft(n, 1e9), fb(n, 1e9);\n    vector<K> h1(n, {n, -1}), h2(n, {m, -1});\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < m; ++j) {\n            if (g[i][j]) {\n                h1[i] = h1[i] + K{i, i};\n                h2[i] = h2[i] + K{j, j};\n            }\n        }\n    }\n    {\n        K lr{n, -1}, tb{m, -1};\n        for (int i = n - 1; i >= 0; --i) {\n            lr = lr + h1[i];\n            tb = tb + h2[i];\n            chmin(fb[i], d(lr) * d(tb));\n        }\n    }\n    for (int mid = 0; mid < n; ++mid) {\n        vector<int> fl(m), fr(m);\n        {\n            K lr{n, -1}, tb{m, -1};\n            for (int i = 0; i < m; ++i) {\n                for (int j = 0; j <= mid; ++j) {\n                    if (g[j][i]) {\n                        lr = lr + K{j, j};\n                        tb = tb + K{i, i};\n                    }\n                }\n                fl[i] = d(lr) * d(tb);\n            }\n\n        }\n        {\n            K lr{n, -1}, tb{m, -1};\n            for (int i = m - 1; i >= 0; --i) {\n                for (int j = 0; j <= mid; ++j) {\n                    if (g[j][i]) {\n                        lr = lr + K{j, j};\n                        tb = tb + K{i, i};\n                    }\n                }\n                fr[i] = d(lr) * d(tb);\n            }\n        }\n        chmin(ft[mid], fl[m - 1]);\n        for (int i = 0; i + 1 < m; ++i) {\n            chmin(ft[mid], fl[i] + fr[i + 1]);\n        }\n        for (int k = 0; k < mid; ++k) {\n            int cur = 0;\n            {\n                K lr{n, -1}, tb{m, -1};\n                for (int i = 0; i <= k; ++i) {\n                    lr = lr + h1[i];\n                    tb = tb + h2[i];\n                }\n                cur += d(lr) * d(tb);\n            }\n            {\n                K lr{n, -1}, tb{m, -1};\n                for (int i = k + 1; i <= mid; ++i) {\n                    lr = lr + h1[i];\n                    tb = tb + h2[i];\n                }\n                cur += d(lr) * d(tb);\n            }\n            chmin(ft[mid], cur);\n        }\n    }\n    int ret = ft[n - 1];\n    for (int i = 0; i + 1 < n; ++i) {\n        chmin(ret, ft[i] + fb[i + 1]);\n    }\n    return ret;\n}\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>> &g1) {\n        int ans = g1.size() * g1[0].size();\n        for (int i = 0; i < 4; ++i) {\n            ans = min(ans, help(g1));\n            int n = g1[0].size(), m = g1.size();\n            vector<vector<int>> g2(n, vector<int>(m));\n            for (int x = 0; x < n; ++x) {\n                for (int y = 0; y < m; ++y) {\n                    g2[x][y] = g1[y][n - 1 - x];\n                }\n            }\n            g1 = g2;\n        }\n        return max(ans, 3);\n    }\n};\n\n#ifdef MEGURINE\n\nint main() {\n    freopen(\"../input.txt\", \"r\", stdin);\n    freopen(\"../output.txt\", \"w\", stdout);\n    clock_t start = clock();\n    int T;\n    cin >> T;\n    getchar();\n    while (T--) {\n        Solution sol;\n        test<vector<vector<int>>>(sol, &Solution::minimumSum);\n    }\n\n    clock_t end = clock();\n    cout << \"\\nRunning Time: \" << (double) (end - start) / CLOCKS_PER_SEC * 1000 << \"ms\" << endl;\n    return 0;\n}\n\n#endif\n",
    "submit_ts": 1719112572.0
}