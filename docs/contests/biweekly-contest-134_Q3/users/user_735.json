{
    "username": "gargi_11",
    "submission": "class Solution {\npublic:\n    int n;\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n//         int n = colors.size();\n//         int ans = 0;\n\n//     vector<int>v = colors;\n//     for (int i = 0; i < k - 1; ++i) {\n//         v.push_back(colors[i]);\n//     }\n//  int i = 0;\n//     while(i<n) {\n//         bool flag = true;\n//         int j = i;\n//         while( j < i + k - 1) {\n//             if (v[j] == v[j + 1]) {\n//                 flag = false;\n//                 break;\n//             }\n//             j++;\n//         }\n//         if (flag) {\n//             ans++;\n//         }\n//         i++;\n//     }\n\n//     return ans;\n        \n        //<---TLE--->\n        \n        n = colors.size(); \n \n        if (k == 1)return n ;\n \n        int alter_len = 1 , cnt = 0 , i = 1; \n        \n        while (i < n + k - 1) { \n            int curr = i , prev = i -1;\n \n            if (curr >= n) curr-= n;\n            if (prev >= n)prev-= n;\n \n            if (colors[curr] != colors[prev]) { \n                alter_len++; \n            } else { \n                alter_len = 1; \n            } \n \n            if (alter_len >= k)cnt++; \n \n            i++; \n        } \n \n        return cnt; \n\n    }\n};",
    "submit_ts": "1720279694",
    "subm_id": "1311761442"
}