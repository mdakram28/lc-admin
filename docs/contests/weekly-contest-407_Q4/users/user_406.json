{
    "username": "XKTZ",
    "submission": "constexpr int MAXN = 1e5 + 5;\n\ntypedef long long ll;\n\nll ddiff[MAXN];\n\nll a[MAXN];\nbool rmv[MAXN];\nll bsz[MAXN];\n\nll calc(ll M) {\n    priority_queue<pair<ll,ll>, vector<pair<ll,ll>>, greater<pair<ll,ll>>> pq;\n    for (ll i = 1; i <= M; i ++) {\n        rmv[i] = false;\n        bsz[i] = a[i];\n        pq.push({a[i], i});\n    }\n    sort(bsz + 1, bsz + 1 + M);\n    ll J = unique(bsz + 1, bsz + 1 + M) - bsz - 1;\n    rmv[0] = rmv[M + 1] = 1;\n    ll coll = 1, ans = 0;\n    for (ll i = 1; i <= J; i ++) {\n        ans += coll * (bsz[i] - bsz[i - 1]);\n        // cout << i << ' ' << coll << '\\n';\n        while (!pq.empty() && pq.top().first == bsz[i]) {\n            auto [_, j] = pq.top();\n            pq.pop();\n            if (!rmv[j - 1] && !rmv[j + 1]) {\n                coll ++;\n            } else if (rmv[j - 1] && rmv[j + 1]) {\n                coll --;\n            }\n            rmv[j] = 1;\n        }\n    }\n    return ans;\n}\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        ll n = nums.size();\n        for (ll i = 0; i < n; i ++) {\n            ddiff[i] = nums[i] - target[i];\n        }\n        ll M = n;\n        ll ans = 0;\n        for (ll i = 0, j; i < M; i ++) {\n            if (ddiff[i] == 0) continue;\n            for (j = i; j + 1 < M && ddiff[j + 1] * ddiff[i] > 0; j ++);\n            for (ll k = i; k <= j; k ++) {\n                a[k - i + 1] = abs(ddiff[k]);\n            }\n            ans += calc(j - i + 1);\n            i = j;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721530475",
    "subm_id": "1327934643"
}