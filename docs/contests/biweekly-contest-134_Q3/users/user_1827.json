{
    "username": "bibimoni",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        int ans = 0;\n        bool all_alter = true;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == a[(i + 1) % n]) {\n                cout << \"i: \" << i << '\\n';\n                all_alter = false;\n                break;\n            }\n        }\n        cout << all_alter << '\\n';\n        if (all_alter) {\n            return n;\n        }\n        auto len = [&] (int l, int r) -> int {\n            if (r > l) {\n                return r - l + 1;\n            } \n            return n - l + r + 1;\n        };\n        vector<int> was(n, 0);\n        auto search = [&] (int i) -> int {\n            int len = 1;\n            was[i] = 1;\n            int j = (i - 1 + n) % n;\n            while (was[j] == 0 && a[j] != a[(j + 1) % n]) {\n                cout << \"j: \" << j << '\\n';\n                was[j] = 1;\n                j -= 1;\n                j += n;\n                j %= n;\n                len += 1;\n            }\n            cout << \"i j: \" << i << ' ' << j << '\\n';\n            j = (i + 1) % n;\n            while (was[j] == 0 && a[j] != a[(j - 1 + n) % n]) {\n                was[j] = 1;\n                j += 1;\n                j %= n;\n                len += 1;\n            }\n            cout << \"i j: \" << i << ' ' << j << '\\n';\n            return max(0, len - k + 1);\n        };\n\n        for (int i = 0; i < n; i++) {\n            if (!was[i]) {\n                ans += search(i);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278820",
    "subm_id": "1311725670"
}