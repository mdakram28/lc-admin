{
    "username": "om4rr",
    "submission": "\n const static auto _ = [] { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr; }();\n\n\n\n\nclass Solution {\npublic:\n\n    int N = 301, M = 401, MOD = 1e9 + 7;\n\nint dp[301][401], frq[301];\n\nvoid CLR(int n) {\n    for (int i = 0; i < n; ++i)\n        frq[i] = -1;\n}\n\nint add(int a, int b, int mod) {\n    int ans = a + b;\n    if (ans >= mod)\n        ans -= mod;\n    if (ans < 0)\n        ans += mod;\n    return ans;\n}\n\nint numberOfPermutations(int n, vector<vector<int>> &requirements) {\n\n    CLR(n);\n    for (int i = 0; i < requirements.size(); ++i)\n        frq[requirements[i][0]] = requirements[i][1];\n\n    dp[0][0] = 1;\n\n    for (int idx = 1; idx < n; ++idx) {\n        for (int cnt = 0; cnt < 401; ++cnt) {\n            dp[idx][cnt] = 0;\n\n            if (frq[idx - 1] != -1 && (cnt - idx <= frq[idx - 1] && cnt >= frq[idx - 1])) {\n                dp[idx][cnt] = add(dp[idx][cnt], dp[idx - 1][frq[idx - 1]], MOD);\n            } else if (frq[idx - 1] == -1) {\n                for (int j = 0; j <= idx; ++j) {\n                    if (cnt - j < 0)\n                        break;\n                    dp[idx][cnt] = add(dp[idx][cnt], dp[idx - 1][cnt - j], MOD);\n                }\n            }\n        }\n    }\n    return dp[n - 1][frq[n - 1]];\n}\n\n    \n    \n};",
    "submit_ts": "1719071365",
    "subm_id": "1296845106"
}