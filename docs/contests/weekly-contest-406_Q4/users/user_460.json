{
    "username": "supreet04singh",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    static bool cmp(pair<int, char> &a, pair<int, char> &b) {\n        return a.first > b.first;\n    }\n    long long minimumCost(int m, int n, vector<int>& hor, vector<int>& vert) {\n        vector<pair<int, char>> cuts;\n        \n        for (int i = 0; i < m - 1; i++) {\n            cuts.push_back({hor[i], 'H'});\n        }\n        for (int i = 0; i < n - 1; i++) {\n            cuts.push_back({vert[i], 'V'});\n        }\n        \n        sort(cuts.begin(), cuts.end(), cmp);\n        \n        int hseg = 1; \n        int vseg = 1; \n        ll ttl = 0;\n        \n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                ttl += cut.first * vseg;\n                hseg++;\n            } \n            else {\n                ttl += cut.first * hseg;\n                vseg++;\n            }\n        }\n        \n        return ttl;\n    }\n};",
    "submit_ts": "1720925545",
    "subm_id": "1320258300"
}