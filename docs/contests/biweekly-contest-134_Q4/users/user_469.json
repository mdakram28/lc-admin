{
    "username": "JiaLiLue",
    "submission": "constexpr int NN = 1e5+10;\nusing LL = long long;\ninline int make_int(int *ptr){\n    int v = 0;\n    for(int i=0; i<30; ++i){\n        if(ptr[i]==0){\n            v ^= 1<<i;\n        }\n    }\n    return v;\n}\ninline void make_cnt(int *ptr, int v, int k=1){\n    for(int i=0; i<30; ++i){\n        if((v>>i&1)==0){\n            ptr[i] += k;\n        }\n    }\n}\nint idx[NN];\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size(), m=0;\n        LL ans = 0;\n        idx[m++] = -1;\n        for(int i=0; i<n; ++i){\n            for(int j=0; j<30; ++j){\n                if((k>>j&1)==1 and (nums[i]>>j&1)==0){\n                    idx[m++] = i;\n                }\n            }\n        }\n        idx[m++] = n;\n        for(int t=1; t<m; ++t){\n            int is = idx[t-1]+1, ie = idx[t];\n            if(ie>is){\n                int cnt1[32]={0}, cnt2[32]={0};\n                for(int i=is, i1=i, i2=i; i<ie; ++i){\n                    while(i1<ie and make_int(cnt1)>k){\n                        make_cnt(cnt1, nums[i1]);\n                        ++i1;\n                    }\n                    while(i2<ie and make_int(cnt2)>=k){\n                        make_cnt(cnt2, nums[i2]);\n                        ++i2;\n                    }\n                    // printf(\"i=%d, i1=%d, i2=%d\\n\", i, i1, i2);\n                    ans += i2-i1;\n                    if(make_int(cnt2)==k){\n                        ++ans;\n                    }\n                    make_cnt(cnt1, nums[i], -1);\n                    make_cnt(cnt2, nums[i], -1);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278744",
    "subm_id": "544564128"
}