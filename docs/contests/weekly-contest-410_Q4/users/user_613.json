{
    "username": "varangrai",
    "submission": "const int MOD = 1e9 + 7;\n\nclass FenwickTree {\nprivate:\n    vector<int> tree;\n    int n;\n\n    int modSum(int a, int b) {\n        return (a + b) % MOD;\n    }\n\npublic:\n    FenwickTree(int size) {\n        n = size;\n        tree.resize(n + 1, 0);\n    }\n    FenwickTree(){}\n    void update(int idx, int delta) {\n        while (idx <= n) {\n            tree[idx] = modSum(tree[idx], delta);\n            idx += idx & -idx;\n        }\n    }\n\n    int query(int idx) {\n        int sum = 0;\n        while (idx > 0) {\n            sum = modSum(sum, tree[idx]);\n            idx -= idx & -idx;\n        }\n        return sum;\n    }\n\n    int rangeQuery(int l, int r) {\n        return (query(r) - query(l - 1) + MOD) % MOD;\n    }\n};\n\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int modSum(int a, int b) {\n        return (a + b) % MOD;\n    }\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        FenwickTree dp[n];\n\n        for (int i = 0; i < n; ++i) {\n            dp[i] = FenwickTree(1001);\n        }\n\n        int ans = 0;\n\n        for (int i = 0; i < n; i++) {\n            for (int x = 0; x <= nums[i]; x++) {\n                int y = nums[i] - x;\n\n                if (i == 0) {\n                    dp[i].update(x + 1, 1);  \n                } else \n                {\n                    dp[i].update(x + 1, dp[i - 1].rangeQuery(0, 1 + min({x, nums[i - 1], x - (nums[i] - nums[i - 1])})));\n                }\n\n                if (i == n - 1) {\n                    ans = modSum(ans, dp[n - 1].rangeQuery(x + 1, x + 1));\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723348290",
    "subm_id": "1351615312"
}