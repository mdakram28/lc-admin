{
    "username": "Andwerp",
    "submission": "typedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<bool> vb;\ntypedef vector<ld> vd;\ntypedef vector<vector<int>> vvi;\ntypedef vector<vector<ll>> vvl;\ntypedef vector<vector<bool>> vvb;\ntypedef vector<vector<ld>> vvd;\n\nclass Solution {\npublic:\n\n    ll arith_sum(ll start, ll nr_elem, ll inc) {\n        ll ans = start * nr_elem;\n        ans += inc * nr_elem * (nr_elem - 1) / 2;\n        return ans;\n    }   \n\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vi mxr(n, -1);\n        {\n            int r = 0;\n            int zcnt = 0;\n            int ocnt = 0;\n            for(int i = 0; i < n; i++){\n                while(r != n) {\n                    zcnt += s[r] == '0';\n                    ocnt += s[r] == '1';\n                    if(zcnt > k && ocnt > k){\n                        zcnt -= s[r] == '0';\n                        ocnt -= s[r] == '1';\n                        break;\n                    }\n                    r ++;\n                }\n                mxr[i] = r;\n                // cout << \"MXR[i] : \" << i << \" \" << mxr[i] << \"\\n\";\n                zcnt -= s[i] == '0';\n                ocnt -= s[i] == '1';\n            }\n        }\n        vl pfx(n + 1, 0);\n        for(int i = 1; i <= n; i++){\n            pfx[i] = pfx[i - 1] + mxr[i - 1];\n        }\n        vl ans(queries.size());\n        for(int i = 0; i < queries.size(); i++){\n            int l = queries[i][0];\n            int r = queries[i][1];\n            r ++;\n            int ind = r - 1;\n            {\n                int low = l;\n                int high = r - 1;\n                while(low <= high) {\n                    int mid = low + (high - low) / 2;\n                    if(mxr[mid] > r){\n                        ind = min(ind, mid);\n                        high = mid - 1;\n                    }\n                    else {\n                        low = mid + 1;\n                    }\n                }\n            }\n            ll cans = pfx[r] - pfx[l];\n            ll tmp = (ll) (r - ind) * (ll) r - (pfx[r] - pfx[ind]);\n            // cout << \"TMP : \" << tmp << \"\\n\";\n            cans += tmp;\n            cans -= arith_sum(l, r - l, 1);\n            // cout << \"ARITH SUM : \" << arith_sum(l, r - l, 1) << \"\\n\";\n            ans[i] = cans;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723953388",
    "subm_id": "1359819956"
}