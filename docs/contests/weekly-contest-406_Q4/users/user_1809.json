{
    "username": "pranayaditya9001",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        int curVertical = 1 , curHorizontal = 1;\n\n        vector<pair<int,pair<int,int>>>vec;\n\n        for(int i = 0 ; i < m-1 ; i++)\n        {\n            vec.push_back({horizontalCut[i],{i,0}});\n        }\n        for(int i = 0 ; i < n-1 ; i++)\n        {\n            vec.push_back({verticalCut[i],{i,1}});\n        }\n\n        sort(vec.begin(),vec.end());\n        long long cost = 0;\n\n        for(int i = vec.size()-1 ; i >= 0 ; i--)\n        {\n            if(vec[i].second.second == 0)\n            {\n                cost += vec[i].first * curVertical;\n                curHorizontal++;\n            }\n            else\n            {\n                cost += vec[i].first * curHorizontal;\n                curVertical++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926465",
    "subm_id": "1320287095"
}