{
    "username": "Meet_73",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long long, long long>> maxheap;\n        \n        long long h=0, v=0;\n        for(auto it : horizontalCut)\n        {\n            maxheap.push({it, 1});\n        }\n        for(auto it : verticalCut)\n        {\n            maxheap.push({it, 2});\n        }\n\n        long long ans = 0;\n        while(!maxheap.empty())\n        {\n            long long cutval = maxheap.top().first;\n            long long num = maxheap.top().second;\n            maxheap.pop();\n\n            if(num == 1)\n            {\n                h++;\n                ans += (cutval*(v+1));\n            }\n            else\n            {\n                v++;\n                ans += (cutval*(h+1));\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925869",
    "subm_id": "1320268838"
}