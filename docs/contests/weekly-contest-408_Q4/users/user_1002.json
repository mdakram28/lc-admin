{
    "username": "Addyamishra",
    "submission": "class Solution {\npublic:\n\n\nbool bfs(const vector<vector<int>>& graph, int start, int target1, int target2, int nodes) {\n    queue<int> q;\n    vector<bool> visited(nodes + 4, false);\n    q.push(start);\n    visited[start] = true;\n\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int v : graph[u]) {\n            if (!visited[v]) {\n                q.push(v);\n                visited[v] = true;\n            }\n        }\n    }\n    return visited[target1] || visited[target2];\n}\n\nbool canReachCorner(int X, int Y, const vector<vector<int>>& circles) {\n    int num_circles = circles.size();\n    vector<vector<int>> graph(num_circles + 4);\n\n    for (int i = 0; i < num_circles; ++i) {\n        int x = circles[i][0];\n        int y = circles[i][1];\n        int r = circles[i][2];\n\n        if (x <= r) {\n            graph[num_circles].push_back(i);\n            graph[i].push_back(num_circles);\n        }\n        if (X - x <= r) {\n            graph[num_circles + 2].push_back(i);\n            graph[i].push_back(num_circles + 2);\n        }\n        if (y <= r) {\n            graph[num_circles + 1].push_back(i);\n            graph[i].push_back(num_circles + 1);\n        }\n        if (Y - y <= r) {\n            graph[num_circles + 3].push_back(i);\n            graph[i].push_back(num_circles + 3);\n        }\n        for (int j = i + 1; j < num_circles; ++j) {\n            int xj = circles[j][0];\n            int yj = circles[j][1];\n            int rj = circles[j][2];\n            double distance = sqrt(pow(x - xj, 2) + pow(y - yj, 2));\n            double radius_sum = r + rj;\n            if (radius_sum >= distance) {\n                graph[i].push_back(j);\n                graph[j].push_back(i);\n            }\n        }\n    }\n\n    bool isBlocked = false;\n    isBlocked = max(isBlocked, bfs(graph, num_circles, num_circles + 1, num_circles + 2, num_circles + 4));\n    isBlocked = max(isBlocked, bfs(graph, num_circles + 3, num_circles + 2, num_circles + 1, num_circles + 4));\n\n    return !isBlocked;\n }\n};\n",
    "submit_ts": "1722138962",
    "subm_id": "1335804219"
}