{
    "username": "akshat_20_21",
    "submission": "class Solution {\npublic:\n    \n   map<int,int> m;\n   long long int dp[1001][1001];\n\n    int N=1e9+7;\n    \n    long long int f(int i,int j){\n    if (i == 0) {\n        if(j==0) return 1;\n        return 0;\n       \n    }\n        \n    if (dp[i][j] != -1) {\n        return dp[i][j];\n    }\n\n    long long int ans=0;\n    for (int k=0;k<i;k++) {\n        if (j>=k) {\n            ans=(ans+f(i - 1,j-k))%N;\n        }\n    }\n\n    if (m.find(i) != m.end()) {\n        if (j != m[i]) {\n            ans=0;\n        }\n    }\n\n    return  dp[i][j]=ans;\n}\n    \n    int numberOfPermutations(int n, vector<vector<int>>& a) {\n        \n        sort(a.begin(),a.end());\n        \n        int N=1e9+7;\n        \n    m.clear();\n    for (auto& it:a) {\n        m[it[0] + 1] = it[1];\n    }\n\n    memset(dp,-1,sizeof(dp));\n        \n    long long int ans=0;\n    for (int i=0;i<=500;i++) {\n        ans=(ans+f(n,i))%N;\n    }\n\n    return ans;\n   \n        \n        \n        \n    }\n};",
    "submit_ts": 1719071026.0
}