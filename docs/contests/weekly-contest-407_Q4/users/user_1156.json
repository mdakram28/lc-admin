{
    "username": "zio-z",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        ans = 0\n        d = []\n        for i in range(n):\n            nums[i] = target[i] - nums[i]\n            if not d or d[-1] != nums[i]:\n                d.append(nums[i])\n        n = len(d)\n        i = 0\n        #print(d)\n        def get(i, j):\n            #print(i, j)\n            if d[i] < 0:\n                for k in range(i, j + 1):\n                    d[k] = - d[k]\n            nonlocal ans\n            if i == j:\n                ans += d[i]\n                return\n            l = []\n            if d[i] > d[i + 1]:\n                l.append(d[i])\n            for k in range(i + 1, j):\n                if d[k - 1] < d[k] > d[k + 1]:\n                    l.append(d[k])\n                if d[k - 1] > d[k] < d[k + 1]:\n                    l.append(d[k])\n            if d[j] > d[j - 1]:\n                l.append(d[j])\n            m = len(l)\n            #print(l)\n            for k in range(m):\n                if k % 2 == 0:\n                    ans += l[k]\n                else:\n                    ans -=  l[k]\n            #print('ans: ',ans)\n        while i < n:\n            if d[i] == 0:\n                i += 1\n                continue\n            j = i \n            \n            while j < n - 1 and d[i] * d[j + 1] > 0:\n                j += 1\n            get(i, j)\n            i = j + 1\n        return ans",
    "submit_ts": "1721532171",
    "subm_id": "548390821"
}