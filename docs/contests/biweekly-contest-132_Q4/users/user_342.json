{
    "username": "hetvikgoel2021",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[1] * (k + 1) for _ in range(n)]\n        max_len = 1\n        max_ch = [-1] * (k + 1)\n        max_val = [{} for _ in range(k + 1)]\n\n        for i in range(n):\n            for ch in range(k + 1):\n                for pch in range(ch):\n                    dp[i][ch] = max(dp[i][ch], 1 + max_ch[pch])\n                if nums[i] in max_val[ch]:\n                    dp[i][ch] = max(dp[i][ch], 1 + max_val[ch][nums[i]])\n                max_len = max(max_len, dp[i][ch])\n            for ch in range(k + 1):\n                max_ch[ch] = max(max_ch[ch], dp[i][ch])\n                max_val[ch][nums[i]] = max(max_val[ch].get(nums[i], 0), dp[i][ch])\n\n        return max_len",
    "submit_ts": "1717862139",
    "subm_id": "1281813488"
}