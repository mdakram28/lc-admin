{
    "username": "vipbaswan",
    "submission": "class Solution {\npublic:\n    \n    int findDis(pair<int, int> p1, pair<int, int> p2) {\n        return abs(p1.first - p2.first) + abs(p1.second - p2.second);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> st1, st2;\n        \n        int n = points.size();\n        \n        for(int i=0; i<n; i++) {\n            int x = points[i][0], y = points[i][1];\n            st1.insert(x+y);\n            st2.insert(x-y);\n        }\n        \n        int ans = INT_MAX;\n        \n        for(int i=0; i<n; i++) {\n            // remove this point\n            int x = points[i][0], y = points[i][1];\n            st1.erase(st1.find(x+y));\n            st2.erase(st2.find(x-y));\n            \n            // Find dis1\n            int dis = max(*(st1.rbegin()) - *(st1.begin()), *(st2.rbegin()) - *(st2.begin()));\n            \n            ans = min(ans, dis);\n            \n            st1.insert(x+y);\n            st2.insert(x-y);\n        }\n        \n        return ans;\n    }\n};"
}