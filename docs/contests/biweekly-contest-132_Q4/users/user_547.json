{
    "username": "bhaskar_op",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& v, int k) {\n        int n=v.size(), ans=1;\n        vector<vector<int>> dp(n, vector<int>(k+1, 1)); \n\n        vector<int> temp(k+1,-1); \n        vector<map<int,int>> hash(k+1); \n        \n        for(int i=0; i<n; i++){ \n            for(int j=0; j<=k; j++){ \n                for(int l=0; l<j; l++){ \n                    dp[i][j]=max(dp[i][j], 1+temp[l]); \n                } \n                \n                if(hash[j].find(v[i])!=hash[j].end()) dp[i][j]=max(dp[i][j],1+hash[j][v[i]]); \n                \n                ans=max(ans,dp[i][j]); \n            } \n            \n            for(int j=0; j<=k; j++){ \n                temp[j]=max(temp[j], dp[i][j]); \n                hash[j][v[i]]=max(hash[j][v[i]], dp[i][j]); \n            } \n        } \n        \n        return ans; \n    }\n};",
    "submit_ts": 1717862365.0
}