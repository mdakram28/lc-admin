{
    "username": "vinesh_01",
    "submission": "\npublic class Solution {\n    long count = 0;\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        List<Integer> mismatchIndices = new ArrayList<>();\n        List<List<Integer>> bitPositions = new ArrayList<>();\n        \n        for (int i = 0; i < 32; i++) {\n            bitPositions.add(new ArrayList<>());\n        }\n\n        for (int i = 0; i < n; i++) {\n            int andResult = nums[i] & k;\n            if (andResult != k) {\n                mismatchIndices.add(i);\n            } else {\n                for (int j = 0; j < 31; j++) {\n                    if ((nums[i] & (1 << j)) == 0) {\n                        bitPositions.get(j).add(i);\n                    }\n                }\n            }\n        }\n\n        mismatchIndices.add(n);\n\n        for (int i = 0; i < n; i++) {\n            int andResult = nums[i] & k;\n            if (andResult != k) continue;\n            int lastIndex = i;\n\n            int length = 0;\n            if (nums[i] != 0) length = (int)(Math.log(nums[i]) / Math.log(2));\n            for (int j = 0; j <= length; j++) {\n                if (((k & (1 << j)) == 0) && ((nums[i] & (1 << j)) != 0)) {\n                    int pos = Collections.binarySearch(bitPositions.get(j), i);\n                    if (pos < 0) pos = -pos - 1;\n                    if (pos == bitPositions.get(j).size()) lastIndex = n;\n                    else lastIndex = Math.max(lastIndex, bitPositions.get(j).get(pos));\n                }\n            }\n            int nextIndex = i + 1;\n            nextIndex = Collections.binarySearch(mismatchIndices, i);\n            if (nextIndex < 0) nextIndex = -nextIndex - 1;\n            if (lastIndex <= mismatchIndices.get(nextIndex)) count += mismatchIndices.get(nextIndex) - lastIndex;\n        }\n        return count;\n    }\n}",
    "submit_ts": "1720279780",
    "subm_id": "1311764760"
}