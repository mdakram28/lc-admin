{
    "username": "swagatika_parida_",
    "submission": "import java.util.*;\n\nclass TrieNode {\n    TrieNode[] children;\n    int minCost;\n\n    TrieNode() {\n        children = new TrieNode[26]; \n        minCost = Integer.MAX_VALUE / 2; \n    }\n}\n\nclass Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        buildTrie(root, words, costs);\n\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE / 2); \n\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                int idx = target.charAt(j) - 'a';\n                if (node.children[idx] == null) break;\n                node = node.children[idx];\n                if (node.minCost != Integer.MAX_VALUE / 2) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.minCost);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE / 2 ? -1 : dp[n];\n    }\n\n    private void buildTrie(TrieNode root, String[] words, int[] costs) {\n        for (int i = 0; i < words.length; i++) {\n            String word = words[i];\n            int cost = costs[i];\n\n            TrieNode node = root;\n            for (char ch : word.toCharArray()) {\n                int idx = ch - 'a';\n                if (node.children[idx] == null) {\n                    node.children[idx] = new TrieNode();\n                }\n                node = node.children[idx];\n            }\n            node.minCost = Math.min(node.minCost, cost);\n        }\n    }\n}\n",
    "submit_ts": "1720322876",
    "subm_id": "1312361393"
}