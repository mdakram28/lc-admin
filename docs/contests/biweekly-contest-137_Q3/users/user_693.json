{
    "username": "jason7708",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> index(m, vector<int>(n, 0));\n        for(int i=0; i<m; i++) {\n            iota(index[i].begin(), index[i].end(), 0);\n            ranges::sort(index[i], [&] (const int a, const int b) {\n                return board[i][a] > board[i][b];\n            });\n        }\n        long long ans = LLONG_MIN;\n        for(int i=0; i<m; i++) {\n            for(int p=0; p<3; p++) {\n                int idx = index[i][p];\n                long long val1 = board[i][idx];\n                for(int i2=i+1; i2<m; i2++) {\n                    for(int q=0; q<3; q++) {\n                        int idx2 = index[i2][q];\n                        if(idx2 == idx) continue;\n                        long long val2 = board[i2][idx2];\n                        for(int i3=i2+1; i3<m; i3++) {\n                            for(int r=0; r<3; r++) {\n                                int idx3 = index[i3][r];\n                                if(idx3 == idx || idx3 == idx2) continue;\n                                long long val3 = board[i3][idx3];\n                                ans = max(ans, val1 + val2 + val3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907156",
    "subm_id": "1359093080"
}