{
    "username": "nevergiveup",
    "submission": "class Solution {\n\n    private static class Interval implements Comparable<Interval> {\n        public int start , end;\n        public Interval(int start , int end) {\n            this.start = start;\n            this.end = end;\n        }\n        @Override\n        public int compareTo(Interval interval) {\n            if (this.start != interval.start) {\n                return this.start - interval.start;\n            } else {\n                if (this.end < interval.end) {\n                    return - 1;\n                } else if (this.end > interval.end) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        }\n        @Override\n        public String toString() {\n            return \"(\" + this.start + \", \" + this.end + \")\";\n        }\n    }\n\n    private int solve(int n) {\n        return n - 1 - sum + set.size();\n    }\n\n    private void update(int start , int end) {\n        Interval interval = new Interval(start , end);\n        Interval floor = set.floor(new Interval(start , Integer.MAX_VALUE));\n        if (floor != null && floor.end >= end) {\n            return;\n        }\n        Set<Interval> subSet = new HashSet<>(set.subSet(new Interval(start , start), new Interval(end, end)));\n        for (Interval subInterval : subSet) {\n            set.remove(subInterval);\n            sum -= (subInterval.end - subInterval.start);\n        }\n        sum += (end - start);\n        set.add(interval);\n    }\n\n    private TreeSet<Interval> set = new TreeSet<>();\n    private int sum = 0;\n\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] ans = new int[queries.length];\n        for (int i = 0;i < queries.length;i ++) {\n            int start = queries[i][0] , end = queries[i][1];\n            update(start , end);\n            ans[i] = solve(n);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722740829",
    "subm_id": "1343729758"
}