{
    "username": "quangnn",
    "submission": "import java.util.*;\n\nclass Solution {\n    public long maximumValueSum(int[][] b) {\n        int n = b.length;\n        int m = b[0].length;\n        long[][] prefix = new long[n][m];\n        long[][] suffix = new long[n][m];\n\n        for (int i = 0; i < n; i++) {\n            prefix[i][0] = b[i][0];\n            for (int j = 1; j < m; j++) {\n                prefix[i][j] = Math.max(prefix[i][j - 1], b[i][j]);\n            }\n            suffix[i][m - 1] = b[i][m - 1];\n            for (int j = m - 2; j >= 0; j--) {\n                suffix[i][j] = Math.max(suffix[i][j + 1], b[i][j]);\n            }\n        }\n\n        long ans = Long.MIN_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    for (int u = 1; u < m - 1; u++) {\n                        long[] candidates = {\n                            (long) b[i][u] + prefix[j][u - 1] + suffix[k][u + 1],\n                            (long) b[i][u] + prefix[k][u - 1] + suffix[j][u + 1],\n                            (long) b[j][u] + prefix[i][u - 1] + suffix[k][u + 1],\n                            (long) b[j][u] + prefix[k][u - 1] + suffix[i][u + 1],\n                            (long) b[k][u] + prefix[j][u - 1] + suffix[i][u + 1],\n                            (long) b[k][u] + prefix[i][u - 1] + suffix[j][u + 1]\n                        };\n                        for (long candidate : candidates) {\n                            ans = Math.max(ans, candidate);\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n}\n",
    "submit_ts": "1723906952",
    "subm_id": "1359081377"
}