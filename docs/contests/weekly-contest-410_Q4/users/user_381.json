{
    "username": "Aylup",
    "submission": "using ll = long long;\nconstexpr ll MAX_N = 1e3 + 20;\nconstinit ll dp1[MAX_N]{}, dp0[MAX_N]{};\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        ll n = nums.size();\n        ll mod = 1e9 + 7;\n        ll high = *max_element(nums.begin(), nums.end()) + 1;\n        std::fill(dp1, dp1 + high + 3, 0);\n        for (ll i = n; i >= 0; --i) {\n            std::fill(dp0, dp0 + high + 3, 0);\n            for (ll p = high; p >= 0; --p) {\n                ll ans;\n                if (i == n) {\n                    ans = 1;\n                } else {\n                    ll p2 = i ? nums[i - 1] - p : high;\n                    ll l = 0, r = nums[i] + 1;\n                    while (l < r) {\n                        ll m = l + (r - l) / 2;\n                        ll m2 = nums[i] - m;\n                        if (p2 >= m2 and p <= m) {\n                            r = m;\n                        } else {\n                            l = m + 1;\n                        }\n                    }\n                    ans = (dp1[l] - dp1[nums[i] + 1]) % mod;\n                    if (i == 0 and p == 0)\n                        return ans % mod;\n                }\n                dp0[p] = (dp0[p + 1] + ans) % mod;\n            }\n            std::swap(dp0, dp1);\n        }\n        return  -1;\n    }\n};",
    "submit_ts": "1723346532",
    "subm_id": "1351579620"
}