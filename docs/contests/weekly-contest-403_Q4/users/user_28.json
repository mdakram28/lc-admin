{
    "username": "GoldenShadow5",
    "submission": "class Solution {\n    public int helper(int[][] grid, int sr, int er, int sc, int ec) {\n        int minr = grid.length;\n        int maxr = -1;\n        int minc = grid[0].length;\n        int maxc = -1;\n        for(int i = sr; i <= er; i++) {\n            for(int j = sc; j <= ec; j++) {\n                if(grid[i][j] == 1) {\n                    minr = Math.min(minr, i);\n                    maxr = Math.max(maxr, i);\n                    minc = Math.min(minc, j);\n                    maxc = Math.max(maxc, j);\n                }\n            }\n        }\n        return maxr == -1 ? 0 : (maxr-minr+1)*(maxc-minc+1);\n    }\n    public int solve(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int ans = n*m;\n        for(int i = 0; i < n-1; i++) {\n            for(int j = i+1; j < n; j++) {\n                ans = Math.min(ans, helper(grid, 0, i, 0, m-1)+helper(grid, i+1, j, 0, m-1)+helper(grid, j+1, n-1, 0, m-1));\n            }\n            for(int j = 0; j < m-1; j++) {\n                ans = Math.min(ans, helper(grid, 0, i, 0, j)+helper(grid, 0, i, j+1, m-1)+helper(grid, i+1, n-1, 0, m-1));\n                ans = Math.min(ans, helper(grid, i+1, n-1, 0, j)+helper(grid, i+1, n-1, j+1, m-1)+helper(grid, 0, i, 0, m-1));\n            }\n        }\n        return ans;\n    }\n    public int minimumSum(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int[][] flip = new int[m][n];\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                flip[j][i] = grid[i][j];\n            }\n        }\n        return Math.min(solve(grid), solve(flip));\n    }\n}",
    "submit_ts": "1719111581",
    "subm_id": "1297277235"
}