{
    "username": "yuwen-yan",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        costs = []\n        for cut in horizontalCut:\n            costs.append((cut, False))\n        for cut in verticalCut:\n            costs.append((cut, True))\n\n        costs.sort(key=lambda x:x[0], reverse=True)\n        \n        ans = 0\n        num_of_rows = 1\n        num_of_cols = 1\n        for i in range(len(costs)):\n            if costs[i][1]:\n                ans += (costs[i][0] * num_of_rows)\n                num_of_cols += 1\n            else:\n                ans += (costs[i][0] * num_of_cols)\n                num_of_rows += 1\n        return ans",
    "submit_ts": "1720925666",
    "subm_id": "1320262242"
}