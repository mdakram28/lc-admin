{
    "username": "louisfghbvc",
    "submission": "class Solution {\npublic:\n    int maxTotalReward(vector<int>& rewardValues) {\n        // goal: find the maximum rewardValues\n        // idea: order is no matter\n        // we can sort the array\n        // each position we can add value or not\n        // dp[i][x]: maximum so far in the index i, current value x\n        \n        sort(rewardValues.begin(), rewardValues.end());\n        rewardValues.erase(unique(rewardValues.begin(), rewardValues.end()), rewardValues.end());\n        \n        int n = rewardValues.size();\n        int mx = *max_element(rewardValues.begin(), rewardValues.end());\n        \n        bitset<50000> dp;\n        dp[0] = 1;\n        for (int x: rewardValues) {\n            dp |= (dp<<(50000-x)>>(50000-x)) << x;\n        }\n        \n        set<int> poss; // possible sum\n        for (int j = 0; j <= 50000; ++j)\n            if (dp[j])\n                poss.insert(j);\n        \n        int res = 0;\n        for (int x: rewardValues) {\n            auto it = prev(poss.lower_bound(x));\n            res = max(res, x + *it);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1717905247.0
}