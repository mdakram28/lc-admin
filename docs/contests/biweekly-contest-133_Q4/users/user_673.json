{
    "username": "akshay_2902",
    "submission": "class Solution {\npublic:\n    int mod = 1e9 + 7;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int MAX = 403;\n        map<int, int> mp,np;\n        for (auto& it : requirements) {\n            int x = it[0],y = it[1];\n            mp[x + 1] = y;\n        }\n\n        vector<vector<long long>> dp(n + 2, vector<long long>(MAX + 1, 0));\n        // dp[0][0] = 0;\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int inv = 0; inv <= MAX; inv++) {\n                for (int newPos = 0; newPos < i; ++newPos) {\n                    int xx = inv - newPos;\n                    if ((inv - newPos) >= 0) {\n                        dp[i][inv] = (dp[i][inv] + dp[i - 1][xx]) % mod;\n                    }\n                }\n            }\n\n            if (mp.find(i) != mp.end()) {\n                int tt = mp[i];\n                for (int j = 0; j <= MAX; ++j) {\n                    if (j == tt) {\n                        \n                    }\n                    else{\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (auto &itt : dp[n]) {\n            ans = (ans + itt) % mod;\n        }\n\n        return (int) ans;\n    }\n};",
    "submit_ts": "1719070955",
    "subm_id": "1296835723"
}