{
    "username": "monik_gowda_21",
    "submission": "class Solution {\npublic:\n    int i2,j2;\n    int i1,j1;\n    \n    int diffe(vector<vector<int>>& p)\n    {\n         vector<pair<int,int>> sum, diff;\n        int n = p.size();\n        \n        for(int i=0;i<p.size();i++)\n        {\n             sum.push_back({p[i][0]+p[i][1], i});\n             diff.push_back({p[i][0]-p[i][1], i});\n        }\n        \n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        \n        int sd = (sum[n-1].first - sum[0].first);\n        int dd = (diff[n-1].first - diff[0].first);\n        \n        if(sd > dd)\n        {\n            i1 = sum[n-1].second;\n            j1 = sum[0].second;\n        }\n        \n        else if(dd > sd)\n        {\n             i1 = diff[n-1].second;\n             j1 = diff[0].second;\n        }\n        else\n        {\n             i1 = sum[n-1].second;\n            j1 = sum[0].second;\n             i2 = diff[n-1].second;\n             j2 = diff[0].second;\n        }\n        return max(sd, dd);\n    }\n    \n    int minEle(int k1,int k2, vector<vector<int>>& p)\n    {\n        vector<vector<int>> temp1, temp2;\n        \n        for(int i=0;i<p.size();i++)\n        {\n             if(i != k1)\n                 temp1.push_back(p[i]);\n            \n            if(i!=k2)\n                temp2.push_back(p[i]);\n        }\n        \n        return min(diffe(temp1), diffe(temp2));\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        i2 = -1, j2 = -1;\n        \n        diffe(points);\n       // cout<<i1<<\" \"<<j1<<endl;\n        \n        if(i2!=-1)\n        {\n            return min(minEle(i1,j1,points), minEle(i2,j2,points));\n        }\n        \n        return minEle(i1,j1, points);\n    }\n};"
}