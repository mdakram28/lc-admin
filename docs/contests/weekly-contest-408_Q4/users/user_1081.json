{
    "username": "ads169573",
    "submission": "class Solution {\npublic:\n    vector<int> b;\n    vector<int> p;\n    int f(int x){\n        return p[x]==x?x:p[x]=f(p[x]);\n    }\n    void u(int x,int y){\n        int a=f(x);\n        int c=f(y);\n        if(a<c){\n            p[c]=a;\n            b[a]|=b[c];\n        }\n        else{\n            p[a]=c;\n            b[c]|=b[a];\n        }\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        p.resize(circles.size());\n        b.resize(circles.size());\n        for(int i=0;i<p.size();++i){\n            p[i]=i;\n            int mk=0;\n            int x=circles[i][0],y=circles[i][1],d=circles[i][2];\n            if((((x>=0)&&(x-d)<=0))||((x<0)&&((x+d)>=0))){\n                mk|=1;\n            }\n            if(((x<=X)&&(x+d>=X))||((x>X)&&((x-d)<=X))){\n                mk|=2;\n            }\n            if((((y>=0)&&(y-d)<=0))||((y<0)&&((y+d)>=0))){\n                mk|=4;\n            }\n            if((((y<=Y)&&(y+d)>=Y))||((y>Y)&&((y-d)<=Y))){\n                mk|=8;\n            }\n            b[i]=mk;\n        }\n        for(int i=0;i<p.size();++i){\n            long long x1=circles[i][0],y1=circles[i][1],d1=circles[i][2];\n            for(int j=i+1;j<p.size();++j){\n                long long x2=circles[j][0],y2=circles[j][1],d2=circles[j][2];\n                if(((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))<=(d1+d2)*(d1+d2)){\n                    u(i,j);\n                }\n            }\n        }\n        set<int> s;\n        for(int i=0;i<p.size();++i){\n            int pp=f(i);\n            if(s.find(pp)==s.end()){\n                s.insert(pp);\n                \n                if((b[pp]==15)||((b[pp]&10)==10)||((b[pp]&5)==5)||((b[pp]&3)==3)||((b[pp]&12)==12)){\n                    return 0;\n                }\n            }\n        }\n        return 1;\n    }\n};",
    "submit_ts": "1722137938",
    "subm_id": "1335777760"
}