{
    "username": "vaibhavrakyan",
    "submission": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <climits>\n\nclass Solution {\npublic:\n    std::vector<int> top3MaxIndices(const std::vector<int>& nums) {\n        std::vector<std::pair<int, int>> valueIndexPairs;\n        for (int i = 0; i < nums.size(); ++i) {\n            valueIndexPairs.push_back({nums[i], i});\n        }\n        std::sort(valueIndexPairs.begin(), valueIndexPairs.end(), std::greater<>());\n\n        std::vector<int> top3Indices;\n        for (int i = 0; i < 3 && i < valueIndexPairs.size(); i++) {\n            top3Indices.push_back(valueIndexPairs[i].second);\n        }\n\n        return top3Indices;\n    }\n\n    long long maximumValueSum(std::vector<std::vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        std::vector<std::vector<int>> topthree(n, std::vector<int>(3));\n        \n        for (int i = 0; i < n; i++) {\n            std::vector<int> top = top3MaxIndices(board[i]);\n            topthree[i] = top;\n        }\n        \n        long long ans = LLONG_MIN;\n        \n        for (int i = 0; i < n-2; i++) {\n            for (int x = 0; x < 3; x++) {\n                long long cost = 0;\n                int idx1 = topthree[i][x];\n                cost += board[i][idx1];\n                \n                for (int j = i + 1; j < n - 1; j++) {\n                    for (int y = 0; y < 3; y++) {\n                        int idx2 = topthree[j][y];\n                        if (idx2 == idx1) continue;\n                        cost += board[j][idx2];\n                        \n                        for (int k = j + 1; k < n; k++) {\n                            for (int z = 0; z < 3; z++) {\n                                int idx3 = topthree[k][z];\n                                if (idx3 == idx1 || idx3 == idx2) continue;\n                                cost += board[k][idx3];\n                                ans = std::max(ans, cost);\n                                cost -= board[k][idx3];\n                                break;\n                            }\n                        }\n                        cost -= board[j][idx2];\n                    }   \n                }\n                cost -= board[i][idx1];\n            }\n        }\n        \n        return ans;\n    }\n};\n\n",
    "submit_ts": "1723910307",
    "subm_id": "1359225236"
}