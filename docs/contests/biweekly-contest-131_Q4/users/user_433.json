{
    "username": "lian-xu-han-shu",
    "submission": "const int N=5e4+10;\nclass Solution {\n    \n    \n    struct Node\n    {\n        int l, r;\n        int v;  // \u533a\u95f4[l, r]\u4e2d\u7684\u6700\u5927\u503c\n    }tr[N * 4];\n\n    void pushup(int u)  // \u7531\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6765\u8ba1\u7b97\u7236\u8282\u70b9\u7684\u4fe1\u606f\n    {\n        tr[u].v = max(tr[u << 1].v, tr[u << 1 | 1].v);\n    }\n\n    void build(int u, int l, int r)\n    {\n        tr[u] = {l, r};\n        tr[u].v=0;\n        if (l == r) return;\n        int mid = l + r >> 1;\n        build(u << 1, l, mid), build(u << 1 | 1, mid + 1, r);\n    }\n\n    int query(int u, int l, int r)\n    {\n        if (tr[u].l >= l && tr[u].r <= r) return tr[u].v;   // \u6811\u4e2d\u8282\u70b9\uff0c\u5df2\u7ecf\u88ab\u5b8c\u5168\u5305\u542b\u5728[l, r]\u4e2d\u4e86\n\n        int mid = tr[u].l + tr[u].r >> 1;\n        int v = 0;\n        if (l <= mid) v = query(u << 1, l, r);\n        if (r > mid) v = max(v, query(u << 1 | 1, l, r));\n\n        return v;\n    }\n\n    void modify(int u, int x, int v)\n    {\n        if (tr[u].l == x && tr[u].r == x) tr[u].v = v;\n        else\n        {\n            int mid = tr[u].l + tr[u].r >> 1;\n            if (x <= mid) modify(u << 1, x, v);\n            else modify(u << 1 | 1, x, v);\n            pushup(u);\n        }\n    }\n\n    \npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n=queries.size();\n        int cnt=0;\n        build(1,1,N-3);\n        int mx=0;\n        for(auto &q:queries)\n        {\n            if(q[0]==2)cnt++;\n            mx=max(mx,q[1]);\n        }\n        // for(int i=1;i<=mx;i++)modify(1,i,0);\n        vector<bool>ans(cnt);\n        set<int>st;\n        st.insert(0);\n        int k=0;\n        // for(int i=1;i<=3;i++)cout<<query(1,i,i)<<'\\n';\n        for(auto &q:queries){\n            if(q[0]==1){\n                int x=q[1];\n                auto it=st.lower_bound(x);\n                if(it!=st.end()){\n                    auto It=it;\n                    It--;\n                    int v=(*it)-(*It),v1=x-(*It),v2=(*it)-x;\n                    st.insert(x);\n                    modify(1,(*it),-1);\n                    modify(1,x,x-(*It)),modify(1,(*it),(*it)-x);\n                }else {\n                    \n                    it--;\n                    // cout<<(*it)<<'\\n';\n                    // if(k==0)cout<<x-(*it)<<'\\n';\n                    st.insert(x);\n                    // if(k==0){\n                    //     cout<<x<<' '<<(*it)<<'\\n';\n                    // }\n                    modify(1,x,x-(*it));\n                }\n            }else {\n                int x=q[1],sz=q[2];\n                // if(k==0){\n                //     for(int i=1;i<=3;i++)cout<<query(1,i,i)<<'\\n';\n                // }\n                int qq=query(1,x,x);\n                // cout<<x<<' '<<x<<' '<<qq<<'\\n';\n                if(qq==0){\n                    auto it=st.lower_bound(x);\n                    it--;\n                    int v1=max(x-(*it),query(1,1,(*it)));\n                    if(v1>=sz)ans[k]=true;\n                    else ans[k]=false;\n                    // cout<<v1<<'\\n';\n                }\n                if(x>=(*st.rbegin())){\n                    if(x-(*st.rbegin())>=sz){\n                        ans[k]=ans[k]||true;\n                    }\n                    else ans[k]=ans[k]||false;\n                }\n                \n                int res=query(1,1,x);\n                if(res>=sz)ans[k]=ans[k]||true;\n                else ans[k]=ans[k]||false;\n                k++;\n            }\n        }\n        \n        return ans;\n    }\n    \n/*\n[[1,5],[2,2,1]]\n*/\n};",
    "submit_ts": 1716652595.0
}