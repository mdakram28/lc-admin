{
    "username": "ssp_2000",
    "submission": "class Solution {\npublic:\n    #define INF LONG_MAX\n    // Segment Tree class to perform task optimally\nclass SegmentTree {\npublic:\n    vector<long long int> tree;\n    long long int n;\n\n    SegmentTree(vector<int>& arr)\n    {\n        n = arr.size();\n        tree.resize(4 * n);\n        build(arr, 0, 0, n - 1);\n    }\n\n    void build(vector<int>& arr, long long int node, long long int start,\n               long long int end)\n    {\n        if (start == end) {\n            tree[node] = arr[start];\n        }\n        else {\n            int mid = (start + end) / 2;\n            build(arr, 2 * node + 1, start, mid);\n            build(arr, 2 * node + 2, mid + 1, end);\n\n            tree[node]\n                = tree[2 * node + 1] & tree[2 * node + 2];\n        }\n    }\n    long long int query(long long int l, long long int r)\n    {\n        return query(0, 0, n - 1, l, r);\n    }\n\n    long long int query(long long int node, long long int start, long long int end, long long int l, long long int r)\n    {\n        if (r < start || end < l) {\n            return INF;\n        }\n        if (l <= start && end <= r) {\n            return tree[node];\n        }\n        long long int mid = (start + end) / 2;\n        long long int p1 = query(2 * node + 1, start, mid, l, r);\n        long long int p2 = query(2 * node + 2, mid + 1, end, l, r);\n\n        // bitwise AND operation result\n        return p1 & p2;\n    }\n};\n\n    int minimumDifference(vector<int>& arr, int k) {\n        long long int n = arr.size();\n    SegmentTree st(arr);\n    long long int ans = INF;\n    for (int i = 0; i < n; i++) {\n        int l = i - 1, r = n - 1, mid;\n\n        // binary search implementation\n        while (r - l > 1) {\n            mid = (l + r) / 2;\n            if (st.query(i, mid) >= k)\n                l = mid;\n            else\n                r = mid;\n        }\n        if (l != i - 1)\n            ans = min(ans, abs(st.query(i, l) - k));\n        ans = min(ans, abs(k - st.query(i, r)));\n    }\n    return ans;\n    }\n};",
    "submit_ts": 1717298842.0
}