{
    "username": "JavOliva",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n        ll ans = 0;\n        int filas = 1, columnas = 1;\n        int i1 = 0, i2 = 0;\n        while(i1 < horizontalCut.size() or i2 < verticalCut.size()){\n            if (i1 == horizontalCut.size() or (i2 < verticalCut.size() and horizontalCut[i1] < verticalCut[i2])){\n                ans += (ll)(filas) * verticalCut[i2];\n                i2 ++;\n                columnas ++;\n            }\n            else{\n                ans += (ll)(columnas) * horizontalCut[i1];\n                i1 ++;\n                filas ++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925590",
    "subm_id": "1320259767"
}