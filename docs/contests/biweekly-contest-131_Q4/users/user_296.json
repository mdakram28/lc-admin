{
    "username": "HarrierJFH",
    "submission": "class Solution {\n    public List<Boolean> getResults(int[][] queries) {\n        List<Integer> obstacles = new ArrayList<>();\n        obstacles.add(0);\n        \n        TreeMap<Integer, List<Integer>> map = new TreeMap<>(Comparator.reverseOrder());\n        ArrayList<Integer> list = new ArrayList<>();\n        list.add(0);\n        map.put(Integer.MAX_VALUE, list);\n        \n        List<Boolean> results = new ArrayList<>();\n        loop:\n        for (int[] query : queries) {\n            if (query[0] == 1) {\n                int m = query[1];\n                int index = ~Collections.binarySearch(obstacles, m);\n                int a = obstacles.get(index - 1), b = index == obstacles.size() ? Integer.MAX_VALUE : obstacles.get(index);\n                obstacles.add(index, m);\n                int diff = b - a;\n                List<Integer> l = map.get(diff);\n                l.remove(Collections.binarySearch(l, a));\n                if (l.isEmpty()) {\n                    map.remove(diff);\n                }\n                diff = m - a;\n                l = map.computeIfAbsent(diff, k -> new ArrayList<>());\n                l.add(~Collections.binarySearch(l, a), a);\n                diff = b - m;\n                l = map.computeIfAbsent(diff, k -> new ArrayList<>());\n                l.add(~Collections.binarySearch(l, m), m);\n            } else {\n                Set<Integer> keySet = map.keySet();\n                for (Integer k : keySet) {\n                    if (k >= query[2] && query[1] - map.get(k).get(0) >= query[2]) {\n                        results.add(true);\n                        continue loop;\n                    }\n                }\n                results.add(false);\n            }\n        }\n        return results;\n    }\n}",
    "submit_ts": 1716651903.0
}