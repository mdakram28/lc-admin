{
    "username": "ha-ha-ha-wo-hao-kuai-le-a",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ans = 10 ** 10\n        n = len(points)\n        v = [[[0] * 2 for _ in range(n)] for __ in range(4)]\n        for i in range(n):\n            v[0][i][0] = points[i][0] + points[i][1]\n            v[1][i][0] = points[i][0] - points[i][1]\n            v[2][i][0] = -points[i][0] + points[i][1]\n            v[3][i][0] = -points[i][0] - points[i][1]\n            v[0][i][1] = v[1][i][1] = v[2][i][1] = v[3][i][1] = i\n        v[0].sort()\n        v[1].sort()\n        v[2].sort()\n        v[3].sort()\n        for i in range(n):\n            cur_mx = 0\n            for j in range(4):\n                if v[j][0][1] == i:\n                    cur_mx = max(cur_mx, v[j][n - 1][0] - v[j][1][0])\n                elif v[j][n - 1][1] == i:\n                    cur_mx = max(cur_mx, v[j][n - 2][0] - v[j][0][0])\n                else:\n                    cur_mx = max(cur_mx, v[j][n - 1][0] - v[j][0][0])\n            ans = min(ans, cur_mx)\n        return ans\n"
}