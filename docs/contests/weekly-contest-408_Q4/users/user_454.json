{
    "username": "muskandn",
    "submission": "class Solution {\npublic:\n    int helper(int s, int t1, int t2, int n,vector<vector<int>> &g) {\n        queue<int> q;\n        vector<int> v(n + 4, 0);\n        q.push(s);\n        v[s] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int w : g[u]) {\n                if (!v[w]) {\n                    q.push(w);\n                    v[w] = 1;\n                }\n            }\n        }\n        return v[t1] || v[t2];\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<pair<pair<int, int>, int>> c(n);\n        vector<vector<int>> g(n + 4);\n\n        for (int i = 0; i < n; ++i) {\n            c[i].first.first = circles[i][0];\n            c[i].first.second = circles[i][1];\n            c[i].second = circles[i][2];\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (c[i].first.first <= c[i].second) {\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n             if (c[i].first.second <= c[i].second) {\n                g[n + 1].push_back(i);\n                g[i].push_back(n + 1);\n            }\n            if (X - c[i].first.first <= c[i].second) {\n                g[n + 2].push_back(i);\n                g[i].push_back(n + 2);\n            }\n           \n            if (Y - c[i].first.second <= c[i].second) {\n                g[n + 3].push_back(i);\n                g[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                double d = sqrt(pow(c[i].first.first - c[j].first.first, 2) +\n                                pow(c[i].first.second - c[j].first.second, 2));\n                int r = c[i].second + c[j].second;\n                if (d <= r) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n\n        int blocked = 0;\n        blocked = max(blocked, helper(n, n + 1, n + 2, n + 4,g)); \n        blocked = max(blocked, helper(n + 3, n + 2, n + 1, n + 4,g)); \n\n        return !blocked;\n    }\n};\n\n",
    "submit_ts": "1722137162",
    "subm_id": "1335755923"
}