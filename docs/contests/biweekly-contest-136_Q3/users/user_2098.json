{
    "username": "sajanray255",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int numRows = grid.size();\n        int numCols = grid[0].size();\n        int flips = 0;\n        \n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (grid[numRows / 2][numCols / 2] == 1) {\n                flips += 1;\n            }\n        }\n\n        vector<int> shiftCounts(3, 0);\n\n        if (numRows % 2 == 1) {\n            int left = 0;\n            int right = numCols - 1;\n            while (left < right) {\n                int sum = grid[numRows / 2][left] + grid[numRows / 2][right];\n                shiftCounts[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (numCols % 2 == 1) {\n            int top = 0;\n            int bottom = numRows - 1;\n            while (top < bottom) {\n                int sum = grid[top][numCols / 2] + grid[bottom][numCols / 2];\n                shiftCounts[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (shiftCounts[2] % 2 == 1) {\n            if (shiftCounts[1] > 0) {\n                flips += shiftCounts[1];\n            } else {\n                flips += 2;\n            }\n        } else {\n            flips += shiftCounts[1];\n        }\n\n        for (int i = 0; i < numRows / 2; ++i) {\n            for (int j = 0; j < numCols / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[numRows - 1 - i][j];\n                int c = grid[i][numCols - 1 - j];\n                int d = grid[numRows - 1 - i][numCols - 1 - j];\n\n                int sum = a + b + c + d;\n\n                if (sum != 0 && sum != 4) {\n                    flips += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return flips;\n    }\n};\n",
    "submit_ts": "1722699918",
    "subm_id": "1343226236"
}