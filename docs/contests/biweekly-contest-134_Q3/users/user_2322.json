{
    "username": "ishubh123",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int fp = 0, lp = 0;\n        int n = colors.size();\n        vector<int> vis(n+1,0),maxr(n+1,0);\n        while(lp<=n-1){\n            if(colors[(lp+1)%n]^colors[lp]==1){\n                lp++;\n                if(lp==n){\n                    if(vis[0]==1){\n                        if(maxr[0]==0) maxr[n-1] = 2;\n                        else maxr[n-1] =maxr[0]+1;\n                        int t = lp-1;\n                while(t>=fp){\n                    vis[t] = 1;\n                    maxr[t]=n-1-t+maxr[n-1];\n                    t--;\n                }\n                    }\n                    else{\n                        for(int i=0;i<n;i++){\n                            maxr[i] = n;\n                        }\n                    }\n                }\n                }\n            else{\n                int t = lp-1;\n                vis[lp]=1;\n                cout << lp << \" \";\n                maxr[lp]=0;\n                while(t>=fp){\n                    vis[t] = 1;\n                    maxr[t]=lp-t+1;\n                    t--;\n                }\n                lp++;\n                fp = lp;\n            }\n        }\n\n        // for(int i=0;i<n;i++){\n        //     if(maxr[i]==n){\n        //         if(colors[(i-1+n)%n]^colors[i]==0) maxr[i]--;\n        //     }\n        // }\n\n        if(k==n){\n            if(maxr[0]==n && k%2==0) return k;\n            else if(maxr[0]==n) return 1;\n        }\n        int ans = 0;\n        for(int i=0;i<n;i++){\n            // cout << maxr[i] << \" \";\n            if(maxr[i]>=k) ans++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720280218",
    "subm_id": "1311781210"
}