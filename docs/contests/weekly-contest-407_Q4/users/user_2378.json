{
    "username": "MUDDASSIR",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n         # Calculate the difference array between target and nums\n        diffa = [target[i] - nums[i] for i in range(len(nums))]\n\n        total_operationscount = 0\n        current_segment_diffa = 0\n\n        for i in range(len(diffa)):\n            if i == 0:\n                # If it's the first element, add the absolute difference to operations\n                total_operationscount += abs(diffa[i])\n                current_segment_diffa = diffa[i]\n            elif (diffa[i - 1] > 0 and diffa[i] > 0) or (diffa[i - 1] < 0 and diffa[i] < 0):\n                # If the current difference has the same sign as the previous one\n                additional_operations = abs(diffa[i]) - abs(current_segment_diffa)\n                if additional_operations > 0:\n                    total_operationscount += additional_operations\n                current_segment_diffa = diffa[i]\n            else:\n                # If the current difference changes sign\n                total_operationscount += abs(diffa[i])\n                current_segment_diffa = diffa[i]#calculating curr segment difference\n\n        return total_operationscount",
    "submit_ts": "1721534000",
    "subm_id": "1328021340"
}