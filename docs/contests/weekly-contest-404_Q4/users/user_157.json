{
    "username": "Likhith_R_Krishna",
    "submission": "class Solution {\npublic:\n    int dfs(int node, vector<vector<int>> &g, vector<bool> &vis, int &res) {\n    vis[node] = true;\n    int cnt = 1;\n    int fmaxm = 0, smaxm = 0;\n    for (auto x : g[node]) {\n        if (!vis[x]) {\n            int temp = dfs(x, g, vis, res);\n            if (temp >= fmaxm) {\n                smaxm = fmaxm;\n                fmaxm = temp;\n            }\n            else if (temp >= smaxm) {\n                smaxm = temp;\n            }\n        }\n    }\n    res = max(res, fmaxm + smaxm + 1);\n    return cnt + fmaxm;\n}\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>> g1(edges1.size()+1), g2(edges2.size()+1);\n        vector<bool> vis1(edges1.size()+1, false),vis2(edges2.size()+1,false);\n        int res1=0,res2=0;\n        for(auto x:edges1){\n            g1[x[0]].push_back(x[1]);\n            g1[x[1]].push_back(x[0]);\n        }\n        for(auto x:edges2){\n            g2[x[0]].push_back(x[1]);\n            g2[x[1]].push_back(x[0]);\n        }\n        int res=0;\n        dfs(0,g1,vis1,res1);\n        dfs(0,g2,vis2,res2);\n        res1--;res2--;\n        res=max(res1,res2);\n        res1 = max(res1/2,res1-res1/2);\n        res2 = max(res2/2,res2-res2/2);\n        return max(res,res1+res2+1);\n    }\n};",
    "submit_ts": 1719717541.0
}