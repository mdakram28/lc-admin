{
    "username": "mishrasn924",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> differences;\n        vector<int> maxValues;\n\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; i++) {\n            int a = nums[i];\n            int b = nums[n - i - 1];\n            int diff = abs(a - b);\n            int maxi = max({a, b, k - a, k - b});\n            differences[diff].push_back(maxi);\n            maxValues.push_back(maxi);\n        }   \n\n\n        int minChanges = n;\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (auto& pair : differences) {\n            int diff = pair.first;\n            auto& maxList = pair.second;\n            \n            int pos = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            int T = pos * 2 + (n / 2 - pos);\n            \n            for (int maxX : maxList) {\n                if (maxX < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n\n             minChanges = min(minChanges, T);\n        }\n        \n        return minChanges;\n\n        \n    }\n};",
    "submit_ts": "1721490320",
    "subm_id": "1327479290"
}