{
    "username": "SupervisorMayHap",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        \n        N = len(A)\n        v1 = []\n        v2 = []\n\n        for i in range(N):\n            v1.append( (A[i][0] + A[i][1], i))\n            v2.append((A[i][0] - A[i][1], i))\n\n        # Sorting both the vectors\n        v1.sort()\n        v2.sort()\n\n        maximum = max(v1[-1][0] - v1[0][0],\n                      v2[-1][0] - v2[0][0])\n        \n        candidates = [v1[-1][1], v1[0][1], v2[-1][1], v2[0][1]]\n        N = len(A)\n        def solve(k):\n\n            v1 = []\n            v2 = []\n\n            for i in range(N):\n                if i != k:\n                    v1.append( (A[i][0] + A[i][1], i))\n                    v2.append((A[i][0] - A[i][1], i))\n\n            # Sorting both the vectors\n            v1.sort()\n            v2.sort()\n\n            maximum = max(v1[-1][0] - v1[0][0],\n                          v2[-1][0] - v2[0][0])\n            return maximum\n        results = []\n        for c in candidates:\n            results.append(solve(c))\n        \n        \n        return min(results)"
}