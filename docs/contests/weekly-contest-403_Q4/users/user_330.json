{
    "username": "zsq007",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        \n        @lru_cache(None)\n        def oneRec(i1: int, j1: int, i2: int, j2: int) -> (int,int,int,int):\n            if i1 == i2:\n                if j1 == j2:\n                    return (i1,j1,i2,j2) if grid[i1][j1] else (inf,inf,-inf,-inf)\n                minX, minY, maxX, maxY = oneRec(i1,j1,i2,j2-1)\n                if grid[i2][j2]:\n                    if minY == inf:    return (i2,j2,i2,j2)\n                    return (i1, minY, i2, j2)\n                return (minX, minY, maxX, maxY)\n            elif j1 == j2:\n                minX, minY, maxX, maxY = oneRec(i1,j1,i2-1,j2)\n                if grid[i2][j2]:\n                    if minX == inf:    return (i2,j2,i2,j2)\n                    return (minX, j1, i2, j2)\n                return (minX, minY, maxX, maxY)\n            else:\n                minX1, minY1, maxX1, maxY1 = oneRec(i1,j1,i2-1,j2)\n                minX2, minY2, maxX2, maxY2 = oneRec(i1,j1,i2,j2-1)\n                if grid[i2][j2]:\n                    return (min(i2,minX1,minX2), min(j2,minY1,minY2), i2, j2)\n                return (min(minX1,minX2), min(minY1,minY2), max(maxX1,maxX2), max(maxY1,maxY2))\n            \n        m, n = len(grid), len(grid[0])\n        res = m*n\n        for i in range(1,m):\n            ords1 = oneRec(0,0,i-1,n-1)\n            if ords1[0] < inf:\n                area1 = (ords1[2]-ords1[0]+1) * (ords1[3]-ords1[1]+1)\n                for j in range(i+1,m):\n                    ords2 = oneRec(i,0,j-1,n-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(j,0,m-1,n-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n                for j in range(1,n):\n                    ords2 = oneRec(i,0,m-1,j-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(i,j,m-1,n-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n            ords1 = oneRec(i,0,m-1,n-1)\n            if ords1[0] < inf:\n                area1 = (ords1[2]-ords1[0]+1) * (ords1[3]-ords1[1]+1)\n                for j in range(1,n):\n                    ords2 = oneRec(0,0,i-1,j-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(0,j,i-1,n-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n        for i in range(1,n):\n            ords1 = oneRec(0,0,m-1,i-1)\n            if ords1[0] < inf:\n                area1 = (ords1[2]-ords1[0]+1) * (ords1[3]-ords1[1]+1)\n                for j in range(i+1,n):\n                    ords2 = oneRec(0,i,m-1,j-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(0,j,m-1,n-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n                for j in range(1,m):\n                    ords2 = oneRec(0,i,j-1,n-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(j,i,m-1,n-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n            ords1 = oneRec(0,i,m-1,n-1)\n            if ords1[0] < inf:\n                area1 = (ords1[2]-ords1[0]+1) * (ords1[3]-ords1[1]+1)\n                for j in range(1,m):\n                    ords2 = oneRec(0,0,j-1,i-1)\n                    if ords2[0] == inf: continue\n                    area2 = (ords2[2]-ords2[0]+1) * (ords2[3]-ords2[1]+1)\n                    ords3 = oneRec(j,0,m-1,i-1)\n                    if ords3[0] == inf: continue\n                    area3 = (ords3[2]-ords3[0]+1) * (ords3[3]-ords3[1]+1)\n                    curArea = area1 + area2 + area3\n                    if res > curArea:   res = curArea\n        return res\n        ",
    "submit_ts": "1719113185",
    "subm_id": "1297319033"
}