{
    "username": "_maityamit",
    "submission": "int mod = 1e9+7;\nclass Solution {\npublic:\n    int dp[2001][51][51];\n    int count_monotonic_pairs(int index,vector<int> &nums,int first_num,int second_num){\n        \n        if(index==nums.size()) return 1;\n        if(dp[index][first_num][second_num]!=-1) return dp[index][first_num][second_num];\n        long long monotonic_pairs = 0;\n        if(index==0){\n            \n            for(int value=0;value<=nums[index];value++){\n                monotonic_pairs += count_monotonic_pairs(index+1,nums,value,nums[index]-value);\n                monotonic_pairs %= mod;\n            }\n            \n        }else{\n            \n            for(int value=0;value<=nums[index];value++){\n                if(first_num<=value && second_num>=(nums[index]-value)){\n                    monotonic_pairs += count_monotonic_pairs(index+1,nums,value,nums[index]-value);\n                    monotonic_pairs %= mod;\n                }\n            }\n            \n        }\n        \n        return dp[index][first_num][second_num]=(int)(monotonic_pairs%mod);\n        \n    }\n    int countOfPairs(vector<int>& nums) {\n        memset(dp,-1,sizeof(dp));\n        return count_monotonic_pairs(0,nums,0,0);\n    }\n};",
    "submit_ts": "1723344648",
    "subm_id": "1351539054"
}