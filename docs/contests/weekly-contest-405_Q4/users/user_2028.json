{
    "username": "balajiyoganantham",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n        \n        # Create a dictionary to store costs of words for quick lookup\n        word_costs = {}\n        for i in range(len(words)):\n            word_costs[words[i]] = min(word_costs.get(words[i], float('inf')), costs[i])\n        \n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            for word in word_costs:\n                if i + len(word) <= n and target[i:i+len(word)] == word:\n                    dp[i+len(word)] = min(dp[i+len(word)], dp[i] + word_costs[word])\n        \n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720323419",
    "subm_id": "1312375088"
}