{
    "username": "devangsvaghani",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sums(n, 0), diffs(n, 0);\n        for(int i = 0; i < n; ++i){\n            sums[i] = points[i][0] + points[i][1];\n            diffs[i] = points[i][0] - points[i][1];\n        }\n        \n        sort(sums.begin(), sums.end());\n        sort(diffs.begin(), diffs.end());\n        \n        int ans = INT_MAX;\n        \n        for(int i = 0; i < n; ++i){\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            \n            int mxSum = sums[n-1], mnSum = sums[0];\n            int mxDiff = diffs[n-1], mnDiff = diffs[0];\n            \n            if(sum == sums[n-1]){\n                mxSum = sums[n-2];\n            }else if(sum == sums[0]){\n                mnSum = sums[1];\n            }\n            \n            if(diff == diffs[n-1]){\n                mxDiff = diffs[n-2];\n            }else if(diff == diffs[0]){\n                mnDiff = diffs[1];\n            }\n            \n            ans = min(ans, max(mxSum - mnSum, mxDiff - mnDiff));\n        }\n        \n        return ans;\n    }\n    \n};"
}