{
    "username": "abhay__krn",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size(); \n        bool ans = true; \n        vector<bool> visited(n, false); \n\n        for(int i = 0; i < n; ++i) {\n            if(visited[i])\n                continue; \n\n            queue<int> q; \n            q.push(i); \n\n            bool left = false, down = false; \n            bool up = false, right = false; \n\n            while(!q.empty()) {\n                auto it = q.front(); \n                q.pop(); \n\n                if(visited[it])\n                    continue; \n\n                visited[it] = true; \n\n                long long xx = circles[it][0]; \n                long long yy = circles[it][1]; \n                long long r = circles[it][2]; \n\n                if(xx - r <= 0)\n                    left = true; \n                if(xx + r >= X)\n                    right = true; \n                if(yy - r <= 0)\n                    down = true; \n                if(yy + r >= Y)\n                    up = true; \n\n                for(int j = 0; j < n; ++j) {\n                    if(visited[j] || i == j)\n                        continue; \n\n                    long long dx = circles[j][0] - circles[it][0]; \n                    long long dy = circles[j][1] - circles[it][1]; \n                    long long rSum = circles[j][2] + circles[it][2]; \n\n                    if(dx * dx + dy * dy <= rSum * rSum)\n                        q.push(j);\n                }\n\n                if((left && down) || (right && up) || (left && right) || (up && down)) {\n                    ans = false;\n                    return ans;\n                }\n            }\n        }\n        return ans; \n    }\n};\n",
    "submit_ts": "1722138784",
    "subm_id": "1335799569"
}