{
    "username": "LeviAckerman616",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n\n        unordered_map<long long, long long> prevResults;\n        int i = 0;\n        while (i < n) {\n            unordered_map<long long, long long> currResults;\n            if (nums[i] == k) \n                ++count;\n            currResults[nums[i]] = 1;\n            fun1(prevResults, currResults, nums[i], k, count);\n            prevResults = currResults;\n            ++i;\n        }\n        return count;\n    }\n\nprivate:\n    void fun1(unordered_map<long long, long long>& prevResults,\n              unordered_map<long long, long long>& currResults,\n              int num, int k, long long& count) {\n        auto it = prevResults.begin();\n        while (it != prevResults.end()) {\n            long long val = it->first;\n            long long freq = it->second;\n\n            fun2(val, num, k, freq, count, currResults);\n\n            ++it;\n        }\n    }\n\n    void fun2(long long val, int num, int k, long long freq, long long& count,\n              unordered_map<long long, long long>& currResults) {\n        int j = 0;\n        while (j < 1) {\n            long long newAndResult = val & num;\n            if (newAndResult == k) \n                count += freq;\n            fun3(newAndResult, freq, currResults);\n            j++;\n        }\n    }\n\n    void fun3(long long newAndResult, long long freq,\n              unordered_map<long long, long long>& currResults) {\n        currResults[newAndResult] += freq;\n    }\n};",
    "submit_ts": "1720278554",
    "subm_id": "1311714226"
}