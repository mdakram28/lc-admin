{
    "username": "Harshkriplani",
    "submission": "#define ll long long\nvector<vector<ll>>g;\n\nvector<ll>in,out;\nclass Solution {\npublic:\n    \n\n// compute in[] array\n//       for indp always use tail recursion........\n//        for outdp always use head recursion.........\n//indp..node..\n//out ..child..\nvoid dfs1(ll node, ll par) {\n    in[node] = 0LL;\n    for (auto child : g[node]) {\n        if (child == par)continue;\n        dfs1(child, node);\n        int curr = 1;\n        if ((child - 1) % 2 == 0)\n            curr = 2;\n        in[node] = max(in[node], curr + in[child]);\n    }\n}\n\n// compute out[] array\nvoid dfs2(ll node, ll par) {\n    ll mx1 = -1;\n    ll mx2 = -1;\n\n    for (auto child : g[node]) {\n        if (child == par) continue;\n        int curr = 1;\n        if ((child - 1) % 2 == 0)\n            curr = 2;\n\n        if (in[child] + curr >= mx1) mx2 = mx1, mx1 = curr + in[child];\n        else if (in[child] + curr > mx2) mx2 = curr + in[child];\n    }\n\n    for (auto child : g[node]) {\n        if (child == par) continue;\n        ll use = mx1;\n        int curr1 = 1;\n        if ((child - 1) % 2 == 0)\n            curr1 = 2;\n\n        if (mx1 == in[child] + curr1) use = mx2;\n        ll curr = 1;\n        if ((node - 1) % 2 == 0)\n            curr = 2;\n        out[child] = max(curr + out[node], curr + use);\n        dfs2(child, node);\n    }\n}\n    vector<int> timeTaken(vector<vector<int>>& e) {\n        g.clear();\n        int n=e.size()+1;\n        in=vector<ll>(n+1,0);\n        out=vector<ll>(n+1,0);\n        g.resize(n+1);\n        for(auto i:e)\n        {\n            g[i[0]+1].push_back(i[1]+1);\n             g[i[1]+1].push_back(i[0]+1);\n            \n        }\n         dfs1(1, 0);\n    dfs2(1, 0);\n    //debug(out[1])\n    //debug(in[1])\n        vector<int>temp;\n    for (ll i = 1; i <= n; i++) temp.push_back( max(in[i], out[i]));\n        return temp;\n        \n        \n        \n    }\n};",
    "submit_ts": "1722698480",
    "subm_id": "1343181972"
}