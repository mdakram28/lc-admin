{
    "username": "v_s_codes",
    "submission": "class Solution {\npublic:\n    int sm(vector<int> &v){\n        return v[0]+v[1];\n    }\n    int df(vector<int> &v){\n        return v[0]-v[1];\n    }\n    pair<int,int> oof(vector<vector<int>>& points){\n        int sx=0, sn=0, dx=0, dn=0, i, n=points.size();\n        for(i=1;i<n;i++){\n            if(sm(points[i])>sm(points[sx])){\n                sx=i;\n            }\n            if(sm(points[i])<sm(points[sn])){\n                sn=i;\n            }\n            if(df(points[i])>df(points[dx])){\n                dx=i;\n            }\n            if(df(points[i])<df(points[dn])){\n                dn=i;\n            }\n        }\n        if(sm(points[sx])-sm(points[sn])>df(points[dx])-df(points[dn])){\n            return {sx, sn};\n        }\n        return {dx, dn};\n    }\n    int d(vector<int>&a, vector<int>&b){\n        return abs(a[0]-b[0])+abs(a[1]-b[1]);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        auto p = oof(points);\n        vector<vector<int>>a, b;\n        int n=points.size();\n        for(int i=0;i<n;i++){\n            if(i!=p.first)a.push_back(points[i]);\n            if(i!=p.second)b.push_back(points[i]);\n        }\n        auto al =oof(a);\n        int dist = d(a[al.first], a[al.second]);\n        auto be=oof(b);\n        dist=min(dist, d(b[be.first], b[be.second]));\n        return dist;\n    }\n};"
}