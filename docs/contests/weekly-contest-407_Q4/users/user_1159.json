{
    "username": "vasu52",
    "submission": "class Solution {\npublic:\n    long long func(vector<long long>& target, bool f)\n    {\n        if(f)for(auto &i:target)i=-i;\n        long long count = target[0];\n        for (int i = 1; i < target.size(); i++)\n            count += max(target[i] - target[i - 1], 0ll);\n        return count;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<long long> diff(n+1);\n        for(int i=0; i<n; i++)diff[i]=target[i]-nums[i];\n        vector<long long> temp;\n        long long ans=0;\n        for(int i=0; i<n+1; i++)\n        {\n            if(diff[i]==0)\n            {\n                // for(auto i:temp)cout<<i<<' ';\n                // cout<<endl;\n                if(temp.size())\n                    ans+=func(temp,temp.back()<0);\n                temp.clear();\n            }\n            else if(temp.empty())temp.push_back(diff[i]);\n            else if((temp.back()<0 && diff[i]<0) || (temp.back()>0 && diff[i]>0))\n            {\n                temp.push_back(diff[i]);\n            }\n            else\n            {\n                // for(auto i:temp)cout<<i<<' ';\n                // cout<<endl;\n                ans+=func(temp,temp.back()<0);\n                temp.clear();\n                temp.push_back(diff[i]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532474",
    "subm_id": "1327986685"
}