{
    "username": "jakao",
    "submission": "class Solution {\npublic:\n#define MXN 2005\n#define MXC 1005\n#define MOD 1'000'000'007\n    int dp[MXN][MXC];\n    int pre[MXC];\n    int getSum(int l, int r){\n        if(l == 0)  return pre[r];\n        return  (pre[r] - pre[l-1]+MOD)%MOD;\n    }\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        nums.insert(nums.begin(), 2000);\n        dp[0][0] = 1;\n        for(int i = 1; i <= n; i++){\n            for(int j = 0; j < MXC; j++){\n                pre[j] = dp[i-1][j];\n                if(j){\n                    pre[j] += pre[j-1];\n                    pre[j] %= MOD;\n                }\n            }\n            for(int j = 0 ; j <= nums[i]; j++){\n                \n                if(nums[i-1] < nums[i]-j){\n                    continue;\n                }\n                else{\n                    int l = 0, r = min(nums[i-1], j);\n                    if(nums[i-1] - r < nums[i] - j){\n                        r = nums[i-1] - (nums[i] - j);\n                    }\n                    dp[i][j] += getSum(l, r);\n                    dp[i][j] %= MOD;\n                }\n            }\n            \n        }\n        int ret = 0;\n        for(int i = 0; i < MXC; i++){\n            ret += dp[n][i];\n            ret %= MOD;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723344820",
    "subm_id": "1351542726"
}