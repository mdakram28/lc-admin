{
    "username": "KANISHK1311",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    long long countSubarrays(vector<int>& nums, int k) {\n        ll n = nums.size();\n        ll count = 0;\n        unordered_map<ll, ll> prev_results;\n\n        for (int num : nums) {\n            unordered_map<ll, ll> curr_results;\n\n            if (num == k) {\n                count += 1;\n            }\n            curr_results[num] = 1;\n\n            for (const auto& pair : prev_results) {\n                int val = pair.first;\n                int freq = pair.second;\n                int new_and_result = val & num;\n                if (new_and_result == k) {\n                    count += freq;\n                }\n                curr_results[new_and_result] += freq;\n            }\n\n            prev_results = curr_results;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720278594",
    "subm_id": "1311715932"
}