{
    "username": "musing-corizl3",
    "submission": "class Solution {\nprivate:\n    int check(int a) {\n        if (a > 0)\n            return 1;\n        else if (a == 0)\n            return 0;\n        return -1;\n    }\n    long long solve(vector<int> & d) {\n        long long ans = 0;\n        int n = d.size();\n        // int pre = check(d[0]);\n        for (int i : d)\n            cout << i << ' ';\n        cout << '\\n';\n        // int maxn = 0;\n        // for (int i = 0;i < n;i++) {\n        //     if (pre == check(d[i])) {\n        //         maxn = max(maxn, abs(d[i]));\n        //     }\n        //     else {\n        //         cout << maxn << ' ';\n        //         ans += maxn;\n        //         maxn = 0;\n        //         int t = check(d[i]);\n        //         pre = t;\n        //         maxn = max(maxn, abs(d[i]));\n        //     }\n        // }\n        // if (maxn) {\n        //     cout << maxn << '\\n';\n        //     ans += maxn;\n        // }\n        long long t1 = 0, t2 = 0;\n        for (int i = 0;i < n;i++) {\n            if (d[i] > 0)\n                t1 += d[i];\n            else\n                t2 += d[i];\n        }\n        ans = max(t1, -t2);\n        return ans;   \n    }\n    \npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        // long long ans = 0;\n        int n = nums.size();\n        vector<int> delta(n, 0);\n        vector<int> d(n, 0);\n        for (int i = 0;i < n;i++) {\n            delta[i] = target[i] - nums[i];\n        }\n        d[0] = delta[0];\n        for (int i = 1;i < n;i++) {\n            d[i] = delta[i] - delta[i - 1];\n        }\n        return solve(d);\n    }\n};",
    "submit_ts": "1721531797",
    "subm_id": "548388585"
}