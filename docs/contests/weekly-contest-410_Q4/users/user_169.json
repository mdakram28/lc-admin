{
    "username": "tzeng12",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        max_value = nums[-1]+1\n        \n        dp = [[0] * n for _ in range(max_value)]\n        \n        # Initialize dp for the first element\n        for x in range(max_value):\n            dp[x][0] = 1\n        \n        # Fill dp for the rest of the elements\n        for x in range(1, len(dp[0])):\n            diff = nums[x] - nums[x-1]\n            for y in range(max_value):\n                if diff > 0:\n                    if y < diff:\n                        dp[y][x] = 0\n                    else:\n                        dp[y][x] = (dp[y-1][x] + dp[y-diff][x-1]) % (10**9+7)\n                else:\n                    if y == 0:\n                        dp[y][x] = dp[y][x-1]\n                    else:\n                        dp[y][x] = (dp[y][x-1] + dp[y-1][x]) % (10**9+7)\n        \n        \n        # Sum all possibilities for the last element\n        return sum(dp[x][-1] for x in range(len(dp))) % (10**9 + 7)",
    "submit_ts": "1723345987",
    "subm_id": "1351567682"
}