{
    "username": "d-Vas2000",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int hIndex = 0, vIndex = 0;\n        long long hSegments = 1, vSegments = 1;\n        long long total_cost = 0;\n        \n        while (hIndex < horizontalCut.size() || vIndex < verticalCut.size()) {\n            if (vIndex == verticalCut.size() || (hIndex < horizontalCut.size() && horizontalCut[hIndex] >= verticalCut[vIndex])) {\n                total_cost += static_cast<long long>(horizontalCut[hIndex]) * vSegments;\n                hIndex++;\n                hSegments++;\n            } else {\n                total_cost += static_cast<long long>(verticalCut[vIndex]) * hSegments;\n                vIndex++;\n                vSegments++;\n            }\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720925433",
    "subm_id": "1320254592"
}