{
    "username": "redmastic",
    "submission": "import java.util.*;\n\npublic class Solution {\n    public int minChanges(int[] arr, int k) {\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        List<Integer> list = new ArrayList<>();\n\n        for (int i = 0; i < arr.length / 2; i++) {\n            int a = arr[i];\n            int b = arr[arr.length - i - 1];\n            int diff = Math.abs(a - b);\n            int X = Math.max(a, Math.max(b, Math.max(k - a, k - b)));\n            \n            map.computeIfAbsent(diff, x -> new ArrayList<>()).add(X);\n            list.add(X);\n        }\n\n        int ans = arr.length;\n        Collections.sort(list);\n\n        for (Map.Entry<Integer, List<Integer>> entry : map.entrySet()) {\n            int diff = entry.getKey();\n            List<Integer> values = entry.getValue();\n            int T = lowerBound(list, diff) * 2 + (arr.length / 2 - lowerBound(list, diff));\n\n            for (int X : values) {\n                if (X < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n\n            ans = Math.min(ans, T);\n        }\n\n        return ans;\n    }\n\n    public int lowerBound(List<Integer> list, int target) {\n        int left = 0, right = list.size();\n        \n        while(left < right) {\n            int mid = left + (right - left) / 2;\n\n            if(list.get(mid) < target) {\n                left = mid + 1;\n            } \n            else {\n                right = mid;\n            }\n        }\n        return left;\n    }\n}",
    "submit_ts": "1721489478",
    "subm_id": "1327454475"
}