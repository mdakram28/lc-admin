{
    "username": "zhiylu528",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int start = 0;\n        while (start < nums.size() && nums[start] == target[start]) {\n            start++;\n        }\n        if (start == nums.size()) return 0;\n        int offset = target[start] - nums[start];\n        long long res = 0;\n        for (int i = start + 1; i < nums.size(); i++) {\n            if (nums[i] == target[i]) {\n                res += abs(offset);\n                offset = 0;\n                continue;\n            }\n            \n\n            if (offset == 0) {\n                start = i;\n                while (start < nums.size() && nums[start] == target[start]) {\n                    start++;\n                }\n                if (start == nums.size()) return res;\n                offset = target[start] - nums[start];\n                i = start;\n                continue;\n            }\n            \n            int temp = target[i] - nums[i];\n            if ((offset > 0) == (temp > 0)) {\n                if (abs(temp) > abs(offset)) {\n                    offset = temp;\n                } else {\n                    res += (abs(offset) - abs(temp));\n                    offset = temp;\n                }\n            } else {\n                res += abs(offset);\n                offset = temp;\n            }\n        }\n        res += abs(offset);\n        return res;\n    }\n};",
    "submit_ts": "1721531177",
    "subm_id": "1327954304"
}