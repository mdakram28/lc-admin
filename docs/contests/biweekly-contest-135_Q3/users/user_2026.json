{
    "username": "sreekardvs",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        absDifferenceMap = {}\n        for index in range(len(nums)//2):\n            diff = abs(nums[index] - nums[-index-1])\n            # print(diff, index)\n            absDifferenceMap[diff] =  absDifferenceMap.get(diff, 0) + 1\n        \n\n        # print(absDifferenceMap)\n        # maximumKey = None\n        # maximumValue = 0\n\n        def findNoOfOperations(nums, maximumKey):\n            # print(maximumKey)\n            noOfOperations = 0\n            for index in range(len(nums)//2):\n                diff = abs(nums[index] - nums[-index-1])\n                maximum = max(nums[index], nums[-index-1])\n                minimum = min(nums[index], nums[-index-1])\n                if diff != maximumKey:\n                    val = abs(diff - maximumKey)\n                    if diff < maximumKey:\n                        if maximum +  val <= k or minimum - val >= 0:\n                            noOfOperations += 1\n                        else:\n                            noOfOperations += 2\n                    if diff > maximumKey:\n                        if minimum +  val <= k or maximum - val >= 0:\n                            noOfOperations += 1\n                        else:\n                            noOfOperations += 2\n            return noOfOperations\n\n        minimumNoOfOperations = len(nums)*2\n\n        absDifferenceMap = sorted(absDifferenceMap.items(), key=lambda x:x[1], reverse=True)\n\n\n        for key, val in absDifferenceMap:\n            # print(key, findNoOfOperations(nums, key))\n            if minimumNoOfOperations < (len(nums)//2 - val):\n                break\n            minimumNoOfOperations = min(minimumNoOfOperations, findNoOfOperations(nums, key))\n        \n        return minimumNoOfOperations\n\n        ",
    "submit_ts": "1721489758",
    "subm_id": "1327462845"
}