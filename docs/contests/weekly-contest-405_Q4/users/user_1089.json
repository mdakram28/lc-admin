{
    "username": "Challa_Bharadwaj_Reddy",
    "submission": "struct Node{\n    vector<Node*>nd=vector<Node*>(26,NULL);\n    int end=INT_MAX;\n};\nclass trie{\npublic:\n    Node* root;\n    trie(){\n        root= new Node;\n    }\n    void addword(string word,int cst){\n        Node *pre=root;\n        for(int i=0;i<word.size();i++){\n            int ind=word[i]-'a';\n            if(pre->nd[ind]==NULL) pre->nd[ind]=new Node;\n            pre=pre->nd[ind];\n        }\n        pre->end=min(cst,pre->end);\n    }\n    vector<int>dp=vector<int>(50010,-1);\n    int func(int i,string &word,Node*pre){\n        if(i>=word.size()) return pre->end;\n        int ind=word[i]-'a';\n        int c=INT_MAX;\n        if(pre==root){\n            if(dp[i]!=-1) return dp[i]; \n        }\n        if(pre->end!=INT_MAX){\n            int d=func(i,word,root);\n            if(d!=INT_MAX) c=d+pre->end;\n        }\n        if(pre->nd[ind]==NULL){\n            if(pre==root) return dp[i]=c;\n            return c;\n        }\n        c=min(func(i+1,word,pre->nd[ind]),c);\n        if(pre==root) return dp[i]=c;\n        return c;\n    }\n    int cost(string word){\n        return func(0,word,root);\n    }\n};\nclass Solution {\npublic:\n    \n    int minimumCost(string tar, vector<string>& w, vector<int>& c) {\n        trie t; \n        for(int i=0;i<w.size();i++){\n            t.addword(w[i],c[i]);\n        }\n        int ans=t.cost(tar);\n        if(ans==INT_MAX) return -1;\n        return ans;\n    }\n};",
    "submit_ts": "1720323126",
    "subm_id": "1312367926"
}