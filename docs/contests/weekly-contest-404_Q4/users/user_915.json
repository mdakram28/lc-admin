{
    "username": "rip",
    "submission": "class Solution {\n    vector<vector<int>>G;\n    pair<int,int>bfs(int c){\n        queue<int>q;q.push(c);int d=0;vector<bool>v(G.size());v[c]=1;\n        for(;q.size();++d)for(int s=q.size();s-->0;){\n            c=q.front();q.pop();for(auto n:G[c])if(!v[n]){v[n]=1;q.push(n);}\n        }\n        return{c,d};\n    }\n    pair<int,int>cc(vector<vector<int>>&E){\n        G.clear();G.resize(E.size()+1);\n        for(auto&e:E){G[e[0]].push_back(e[1]);G[e[1]].push_back(e[0]);}\n        auto[b,_]=bfs(0);auto[e,d]=bfs(b);\n        return {d/2,d-1};\n    }\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& E1, vector<vector<int>>& E2) {\n        auto[d1,m1]=cc(E1);auto[d2,m2]=cc(E2);return max({d1+d2+1,m1,m2});\n    }\n};\n",
    "submit_ts": 1719719912.0
}