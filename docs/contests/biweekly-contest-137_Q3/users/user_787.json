{
    "username": "SouravKumar",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll findMax(int i, int m, int n, vector<vector<pair<int,int>>>& rows, int p1, int p2, vector<vector<vector<ll>>>& dp) {\n        if (i == m) return -1e14;\n        else if (dp[i][p1][p2] != -1e15) return dp[i][p1][p2];\n        else {\n            if (p1 == n && p2 == n) {\n                ll ans = findMax(i+1, m, n, rows, p1, p2, dp);\n                for (int j=0; j<3; j++) {\n                    ans = max(ans, findMax(i+1, m, n, rows, rows[i][j].second, p2, dp) + rows[i][j].first);\n                }\n                return dp[i][p1][p2] = ans;\n            }\n            else if (p2 == n) {\n                ll ans = findMax(i+1, m, n, rows, p1, p2, dp);\n                for (int j=0; j<3; j++) {\n                    if (rows[i][j].second != p1) {\n                        ans = max(ans, findMax(i+1, m, n, rows, p1, rows[i][j].second, dp) + rows[i][j].first);\n                    }\n                }\n                return dp[i][p1][p2] = ans;\n            }\n            else {\n                ll maxv = findMax(i+1, m, n, rows, p1, p2, dp);\n                for (int j=0; j<3; j++) {\n                    if (rows[i][j].second != p1 && rows[i][j].second != p2) {\n                        maxv = max(maxv, (ll)rows[i][j].first);\n                    }\n                }\n                return dp[i][p1][p2] = maxv;\n            }\n        }\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<int,int>>> rows(m);\n        for (int i=0; i<m; i++) {\n            for (int j=0; j<n; j++) {\n                rows[i].emplace_back(board[i][j], j);\n            }\n            sort(rows[i].begin(), rows[i].end(), [](pair<int,int>& p1, pair<int,int>& p2){\n                return p1.first > p2.first;\n            });\n        }\n        vector<vector<vector<ll>>> dp(m, vector<vector<ll>>(n+1, vector<ll>(n+1, -1e15)));\n        return findMax(0, m, n, rows, n, n, dp);\n    }\n};",
    "submit_ts": "1723907872",
    "subm_id": "1359128136"
}