{
    "username": "gauravSahitya",
    "submission": "#define vi vector<int>\n#define vvi vector<vi>\nint helperOne(vvi &grid, int x, int X, int y, int Y) {\n    int a = 100, b = 100, c= 0, d = 0;\n    for (int i=x; i<X; i++) {\n        for(int j=y; j<Y; j++) {\n            if(grid[i][j]) {\n                a = min(a, i);\n                b = min(b, j);\n                c = max(c, i);\n                d = max(d, j);\n            }\n        }\n    }\n    // cout<<(d-b+1)*(c-a+1)<<\" \";\n    return (d-b+1)*(c-a+1);\n}\n\nint helperTwo(vvi &grid, int x, int X, int y, int Y) {\n    int ret = 1000;\n    for (int i = x+1; i<X; i++) {\n        ret = min(ret, helperOne(grid, x, i, y, Y) + helperOne(grid, i, X, y, Y));\n    }\n    for (int i = y+1; i<Y; i++) {\n        ret = min(ret, helperOne(grid, x, X, y, i) + helperOne(grid, x, X, i, Y));\n    }\n    // cout<<ret<<\" \";\n    return ret;\n}\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int ret = 1000;\n        for (int i = 1; i<grid.size(); i++) {\n            // cout<<i<<\" \";\n            ret = min(ret, helperOne(grid, 0, i, 0, grid[0].size()) + helperTwo(grid, i, grid.size(), 0, grid[0].size()));\n            ret = min(ret, helperTwo(grid, 0, i, 0, grid[0].size()) + helperOne(grid, i, grid.size(), 0, grid[0].size()));\n        }\n        for (int i = 1; i<grid[0].size(); i++) {\n            ret = min(ret, helperOne(grid, 0, grid.size(), 0, i) + helperTwo(grid, 0, grid.size(), i, grid[0].size()));\n            ret = min(ret, helperTwo(grid, 0, grid.size(), 0, i) + helperOne(grid, 0, grid.size(), i, grid[0].size()));\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1719114346",
    "subm_id": "1297344920"
}