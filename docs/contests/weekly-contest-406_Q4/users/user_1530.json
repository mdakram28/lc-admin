{
    "username": "Archit_1608",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'V'});\n        }\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'H'});\n        }\n        \n        sort(cuts.begin(), cuts.end(), greater<pair<int, char>>());\n\n        long long int hSegment = 1,vSegment = 1,ans=0;\n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                ans += cut.first * vSegment;\n                ++hSegment;\n            } else {\n                ans += cut.first * hSegment;\n                ++vSegment;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926013",
    "subm_id": "1320273268"
}