{
    "username": "AbhishekKumar0207",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        int opr = 0;\n        int prev = 0;\n        long ans = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (diff[i] == 0) {\n                prev = 0;\n                opr = 0;\n            } else if (diff[i] > 0) {\n                int need = diff[i];\n                if (prev == 1) {\n                    if (need == opr) {\n                        continue;\n                    } else if (need < opr) {\n                        opr = need;\n                    } else {\n                        ans += (need - opr);\n                        opr = need;\n                    }\n                } else {\n                    opr = need;\n                    ans += opr;\n                    prev = 1;\n                }\n            } else {\n                int need = Math.abs(diff[i]);\n                if (prev == 0) {\n                    if (opr == need) {\n                        continue;\n                    } else if (opr > need) {\n                        opr = need;\n                    } else {\n                        ans += (need - opr);\n                        opr = need;\n                    }\n                } else {\n                    prev = 0;\n                    ans += need;\n                    opr = need;\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721532503",
    "subm_id": "1327987406"
}