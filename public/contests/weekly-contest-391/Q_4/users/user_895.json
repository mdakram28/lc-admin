{
    "username": "yawn_sean_rank_1_apologist",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        map<int, set<int>> R, C;\n        for (int i = 0; auto& p : points) {\n            auto r = p[0], c = p[1];\n            p[0] = r - c, p[1] = r + c;\n            R[p[0]].insert(i), C[p[1]].insert(i);\n            ++i;\n        }\n        int res = max(R.rbegin()->first - R.begin()->first, C.rbegin()->first - C.begin()->first);\n\n        const auto remove_id = [&](auto id) {\n            auto r = points[id][0], c = points[id][1];\n            R[r].erase(id), C[c].erase(id);\n            if (R[r].empty()) {\n                R.erase(r);\n            }\n            if (C[c].empty()) {\n                C.erase(c);\n            }\n        };\n        \n        const auto insert_id = [&](auto id) {\n            auto r = points[id][0], c = points[id][1];\n            R[r].insert(id);\n            C[c].insert(id);\n        };\n        \n        if (R.begin()->second.size() == 1) {\n            auto id = *(R.begin()->second.begin());\n            remove_id(id);\n            res = min(res, max(R.rbegin()->first - R.begin()->first, C.rbegin()->first - C.begin()->first));\n            insert_id(id);\n        }\n        if (R.rbegin()->second.size() == 1) {\n            auto id = *(R.rbegin()->second.begin());\n            remove_id(id);\n            res = min(res, max(R.rbegin()->first - R.begin()->first, C.rbegin()->first - C.begin()->first));\n            insert_id(id);\n        }\n        if (C.begin()->second.size() == 1) {\n            auto id = *(C.begin()->second.begin());\n            remove_id(id);\n            res = min(res, max(R.rbegin()->first - R.begin()->first, C.rbegin()->first - C.begin()->first));\n            insert_id(id);\n        }\n        if (C.rbegin()->second.size() == 1) {\n            auto id = *(C.rbegin()->second.begin());\n            remove_id(id);\n            res = min(res, max(R.rbegin()->first - R.begin()->first, C.rbegin()->first - C.begin()->first));\n            insert_id(id);\n        }\n        return res;\n    }\n};"
}