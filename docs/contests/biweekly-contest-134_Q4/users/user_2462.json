{
    "username": "dhruv6_6",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> decToBinary(int n) {\n        vector<int> a(32, 0);\n        for (int i = 31; i >= 0; i--) {\n            int k = n >> i;\n            if (k & 1)\n                a[31 - i] = 1;\n            else\n                a[31 - i] = 0;\n        }\n        return a;\n    }\n\n    vector<int> zero;\n    vector<int> one;\n    vector<int> kk;\n\n    int isSame() {\n        for (int i = 0; i < 32; i++) {\n            if (kk[i]) {\n                if (!(one[i] > 0 && zero[i] == 0)) {\n                    return 0;\n                }\n            } else {\n                if (!((one[i] > 0 && zero[i]>0) || (one[i]==0))) {\n                    return 0;\n                }\n            }\n        }\n        return 1;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<vector<int>> a(1);\n\n        for (int i = 0; i < n; i++) {\n            if ((nums[i] & k) == k) {\n                a.back().push_back(nums[i]);\n            } else {\n                if (!a.back().empty()) {\n                    a.push_back({});\n                }\n            }\n        }\n\n        kk = decToBinary(k);\n        for (const auto& subarray : a) {\n            \n            zero = vector<int>(32, 0);\n            one = vector<int>(32, 0);\n            int i = 0, j = 0;\n\n            while (true) {\n                while (i < subarray.size() && (j==i || !isSame())) {\n                    vector<int> res = decToBinary(subarray[i]);\n                    for (int k = 0; k < 32; k++) {\n                        if (res[k] == 1) {\n                            one[k]++;\n                        } else {\n                            zero[k]++;\n                        }\n                    }\n                    i++;\n                }\n                if (i!=j && isSame()) {\n                    ans += subarray.size() - i + 1;\n                }\n                else{\n                    if (i == subarray.size() || j==subarray.size()) break;\n                }\n\n                vector<int> res = decToBinary(subarray[j]);\n                for (int k = 0; k < 32; k++) {\n                    if (res[k] == 1) {\n                        one[k]--;\n                    } else {\n                        zero[k]--;\n                    }\n                }\n                j++;\n                cout<<ans<<endl;\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720281495",
    "subm_id": "1311827223"
}