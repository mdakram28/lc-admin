{
    "username": "ting-ting-28",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        p = [[0] * (m + 1) for _ in range(n + 1)]\n        for i in range(n):\n            for j in range(m):\n                p[i+1][j+1] = p[i][j+1] + p[i+1][j] - p[i][j] + grid[i][j]\n        dp = [[[[[-1, -1, -1, -1] for _ in range(m+1)] for _ in range(m)] for _ in range(n+1)] for _ in range(n)]\n\n        def f(l1, r1, l2, r2, cnt):\n            v = p[r1][r2] - p[r1][l2] - p[l1][r2] + p[l1][l2]\n            if not v:\n                return 0\n            if v == (r1-l1)*(r2-l2):\n                return (r1-l1)*(r2-l2)\n            if cnt == 0:\n                return inf\n            if dp[l1][r1][l2][r2][cnt] != -1:\n                return dp[l1][r1][l2][r2][cnt]\n            now = [i[l2:r2] for i in grid[l1:r1]]\n            a = deque(now)\n            b = deque(zip(*now))\n            while a and all(j == 0 for j in a[0]):\n                a.popleft()\n            while a and all(j == 0 for j in a[-1]):\n                a.pop()\n            while b and all(j == 0 for j in b[0]):\n                b.popleft()\n            while b and all(j == 0 for j in b[-1]):\n                b.pop()\n            res = len(a)*len(b)\n            if cnt > 1:\n                for i in range(1, r1-l1):\n                    for j in range(1, cnt):\n                        res = min(res, f(l1, l1+i, l2, r2, j)+f(l1+i, r1, l2, r2, cnt-j))\n                for i in range(1, r2-l2):\n                    for j in range(1, cnt):\n                        res = min(res, f(l1, r1, l2, l2+i, j)+f(l1, r1, l2+i, r2, cnt-j))\n            dp[l1][r1][l2][r2][cnt] = res\n            return res\n\n        res = f(0, n, 0, m, 3)\n        return res",
    "submit_ts": 1719113132.0
}