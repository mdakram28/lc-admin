{
    "username": "pka5667",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>> pre(n+1, vector<int> (32, 0));\n        for(int i=0;i<n;i++){\n            for(int j=0;j<32;j++){\n                if(((nums[i]>>j)&1) != 0){\n                    pre[i+1][j] = 1;\n                }\n            }\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=0;j<32;j++){\n                pre[i][j] += pre[i-1][j];\n            }\n        }\n\n        long long ans=0;\n        for(int i=1; i<=n; i++){\n            int low=i, high=n, curr=-1;\n\n            // max where can get k\n            while(low<=high){\n                int mid = (low+high)/2;\n\n                int len = mid-i+1;\n                bool f=1,f1=1;\n                for(int j=0; j<31; j++){\n                    int x=pre[mid][j] - pre[i-1][j];\n                    if((k&(1<<j)) != 0){\n                        if(x!=len)\n                            f1=false;\n                    }else{\n                        if(x==len)\n                            f=false;\n                    }\n                }\n\n                if(f1){\n                    curr=mid;\n                    low=mid+1;\n                }else{\n                    high=mid-1;\n                }\n            }\n\n            int curr1 = curr;\n\n            // min where can get k\n            low=i, high=curr, curr=-1;\n            \n            while(low<=high){\n                int mid = (low+high)/2;\n\n                int len = mid-i+1;\n                bool f=1, f1=1;\n                for(int j=0; j<31; j++){\n                    int x=pre[mid][j] - pre[i-1][j];\n                    if((k&(1<<j)) != 0){\n                        if(x!=len)\n                            f1=false;\n                    }else{\n                        if(x==len)\n                            f=false;\n                    }\n                }\n\n                if(f){\n                    curr=mid;\n                    high=mid-1;\n                }else{\n                    low=mid+1;\n                }\n            }\n            \n            if(curr!=-1)\n                ans += curr1-curr+1;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720280330",
    "subm_id": "1311785351"
}