{
    "username": "Jacob",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        ref = defaultdict(list)\n        for i in range(m):\n            for j in range(n):\n                v = board[i][j]\n                ref[v].append([i,j])\n        reserve = defaultdict(list)\n        sortedKey = list(sorted(ref.keys(),reverse = True))\n        # print(f'sorted:{sortedKey}')\n        maxR = -math.inf\n        for i,num in enumerate(sortedKey):\n            if i>=20:\n                break\n            # newR = reserve.copy()\n            for x,y in ref[num]:\n                # if 1 not in reserve:\n                reserve[1].append([[x,y]])\n                # else:\n                for k in range(1,3):\n                    if k in reserve:\n                        for pairs in reserve[k]:\n                            isOk = 1\n                            newPairs = [[x,y]]\n                            for pair in pairs:\n                                x1,y1 = pair\n                                if x1!=x and y1!=y:\n                                    newPairs.append([x1,y1])\n                                else:\n                                    isOk=0\n                                    break\n                            if isOk:\n                                reserve[k+1].append(newPairs)\n                                if k+1==3:\n                                    res = 0\n                                    for x2,y2 in newPairs:\n                                        res+=board[x2][y2]\n                                    maxR = max(maxR,res)\n\n        \n        \n        return maxR\n        ",
    "submit_ts": "1723909079",
    "subm_id": "1359178785"
}