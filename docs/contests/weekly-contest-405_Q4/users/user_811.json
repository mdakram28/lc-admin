{
    "username": "Double-T1",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trim(words,costs);\n        \n        int n = words.size();\n        vector<vector<int>> record(target.size());\n        for (int i=0; i<n; ++i) {\n            //string& w = words[i];\n            kmp(words[i],target,record,i);\n        }\n        vector<int> dp(target.size(),-1);\n        int ans = helper(target,record,0,words,costs,dp);\n        return ans == INT_MAX ? -1 : ans;\n    }\n    \n    int helper(string& target, vector<vector<int>>& record, int i, vector<string>& words, vector<int>& costs, vector<int>& dp) {\n        if (i == target.size()) return 0;\n        int& ans = dp[i];\n        if (ans > -1) return ans;\n        ans = INT_MAX;\n        \n        for (int options: record[i]) {\n            int len = words[options].size();\n            int c = helper(target,record,i+len,words,costs,dp);\n            if (c == INT_MAX) continue;\n            ans = min(ans,c+costs[options]);\n        }\n        return ans;\n    }\n    \n    void trim(vector<string>& words, vector<int>& costs) {\n        unordered_map<string,int> um;\n        int i = 0;\n        for (auto& w: words) {\n            if (um.find(w) != um.end()) {\n                um[w] = min(um[w],costs[i]);\n            } else {\n                um[w] = costs[i];\n            }\n            \n            ++i;\n        }\n        \n        words.clear();\n        costs.clear();\n        for (auto&[w,c] : um) {\n            words.push_back(w);\n            costs.push_back(c);\n        }\n    }\n    \n    void kmp(string& pattern, string& s, vector<vector<int>>& record, int index) {\n        vector<int> lps(pattern.size(),0);\n        for (int i=0, j=1; j<pattern.size();) {\n            if (pattern[i] == pattern[j]) lps[j++] = ++i;\n            else if (i>0) i = lps[i-1];\n            else j++;\n        }\n\n        int i = 0, j =0, matched = 0;\n        while (i<s.size() && j<pattern.size()) {\n            if (s[i] == pattern[j]) i++,j++;\n            else if (j>0) j = lps[j-1];\n            else i++;\n\n            if (j == pattern.size()) {\n                record[i-j].push_back(index);\n                j = lps[j-1];\n            }\n        }\n    }\n};",
    "submit_ts": "1720323213",
    "subm_id": "1312370087"
}