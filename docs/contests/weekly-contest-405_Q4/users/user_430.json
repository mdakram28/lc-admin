{
    "username": "vipbaswan",
    "submission": "const int MAXI = INT_MAX/2;\n\nclass TrieNode {\nprivate:\n    vector<TrieNode*> children;\n    bool isEndOfWord;\n    int cost;\n    \npublic:\n    TrieNode(): children(26, nullptr), isEndOfWord(false), cost(MAXI) {\n        \n    }\n    \n    void insert(string& s, int cost) {\n        TrieNode* curr = this;\n        \n        for(char c : s) {\n            int idx = c - 'a';\n            \n            if(!curr->children[idx]) {\n                curr->children[idx] = new TrieNode();\n            }\n            \n            curr = curr->children[idx];\n        }\n        \n        curr->isEndOfWord = true;\n        curr->cost = min(cost, curr->cost);\n    }\n    \n    \n    int search(string& s, int idx, vector<int>& dp) {\n        if(idx == s.length()) {\n            return MAXI;\n        }\n        \n        int c = s[idx] - 'a';\n        // cout<<s[idx]<<endl;\n        \n        if(!this->children[c]) {\n            return MAXI;\n        }\n        \n        TrieNode* curr = this->children[c];\n        \n        if(idx+1 == s.length()) {\n            // last character\n            if(curr->isEndOfWord) {\n                return curr->cost;\n            }\n            return MAXI;\n        }\n        \n        int ans = MAXI;\n        if(curr->isEndOfWord) {\n            ans = min(ans, curr->cost + dp[idx+1]);\n        }\n        ans = min(ans, curr->search(s, idx+1, dp));\n        \n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = words.size(), m = target.length();\n        \n        vector<int> dp(m+1, MAXI);\n        dp[m] = 0;\n        \n        TrieNode* trie = new TrieNode();\n        \n        for(int i=0; i<n; i++) {\n            trie->insert(words[i], costs[i]);\n        }\n        \n        // cout<<trie->search(target, 3, dp);\n        \n        for(int i=m-1; i>=0; i--) {\n            dp[i] = trie->search(target, i, dp);\n        }\n        \n        return (dp[0] == MAXI ? -1 : dp[0]);\n    }\n};",
    "submit_ts": "1720322430",
    "subm_id": "1312349712"
}