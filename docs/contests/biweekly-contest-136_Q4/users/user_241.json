{
    "username": "ywwbill",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        g = [[] for _ in range(n)]\n        for u, v in edges:\n            g[u].append(v)\n            g[v].append(u)\n        q, head = [0], -1\n        visited = [False] * n\n        visited[0] = True\n        parent = [-1] * n\n        kids = [[] for _ in range(n)]\n        dis = [0] * n\n        while head + 1 < len(q):\n            head += 1\n            u = q[head]\n            for v in g[u]:\n                if not visited[v]:\n                    visited[v] = True\n                    q.append(v)\n                    parent[v] = u\n                    kids[u].append(v)\n                    dis[v] = dis[u] + (1 if v % 2 == 1 else 2)\n        max_leaf_dis = [[0] * 2 for _ in range(n)]\n        for i in range(n - 1, 0, -1):\n            u = q[i]\n            dis = max_leaf_dis[u][1] + (1 if u % 2 == 1 else 2)\n            if dis > max_leaf_dis[parent[u]][0]:\n                heapq.heappushpop(max_leaf_dis[parent[u]], dis)\n        times = [0] * n\n        times[0] = max_leaf_dis[0][1]\n        max_parent_to_other_tree_dis = [0] * n\n        for i in range(1, n):\n            u = q[i]\n            d_parent = 1 if parent[u] % 2 == 1 else 2\n            d_kid = 1 if u % 2 == 1 else 2\n            if d_kid + max_leaf_dis[u][1] == max_leaf_dis[parent[u]][1]:\n                max_parent_to_other_tree_dis[u] = (\n                    max(\n                        max_parent_to_other_tree_dis[parent[u]],\n                        max_leaf_dis[parent[u]][0],\n                    )\n                    + d_parent\n                )\n            else:\n                max_parent_to_other_tree_dis[u] = (\n                    max(\n                        max_parent_to_other_tree_dis[parent[u]],\n                        max_leaf_dis[parent[u]][1],\n                    )\n                    + d_parent\n                )\n            times[u] = max(max_leaf_dis[u][1], max_parent_to_other_tree_dis[u])\n        return times",
    "submit_ts": "1722700073",
    "subm_id": "552278274"
}