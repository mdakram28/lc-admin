{
    "username": "CutSandstone",
    "submission": "class Solution {\n    int mod = 1_000_000_007;\n    long inv(long n){\n        long a = 1; int k = mod-2;\n        while(k > 0){\n            if((k&1) == 1) a = a*n%mod;\n            n = n*n%mod;\n            k>>=1;\n        }\n        return a;\n    }\n    int choose(int n, int k){\n        long ans = 1;\n        k = Math.min(k,n-k);\n        for(int i = n; i>n-k; i--) ans = (ans*i)%mod;\n        for(int i = 1; i<=k; i++) ans = (ans*inv(i))%mod;\n        return (int)ans;\n    }\n    public int waysToReachStair(int k) {\n        int ans = 0;\n        for(int i = 0;; i++){\n            long need = (1L<<i)-k;\n            if(need > i+1) return ans;\n            if(need >= 0) ans+=choose(i+1,(int)need);\n        }\n    }\n}",
    "submit_ts": "1716087202",
    "subm_id": "1261776142"
}