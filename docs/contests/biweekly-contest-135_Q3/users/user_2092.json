{
    "username": "akshatkedia_",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> differenceMap;\n        vector<int> maxValues;\n        vector<int> dummyVector;\n        vector<int> additionalVector(100, 0);\n\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int first = nums[i];\n            int second = nums[nums.size() - i - 1];\n            int diff = abs(first - second);\n            int maxPossible = max({first, second, k - first, k - second});\n            \n            differenceMap[diff].push_back(maxPossible);\n            maxValues.push_back(maxPossible);\n\n            for (int j = 0; j < 10; ++j) {\n                dummyVector.push_back(j);\n            }\n\n            for (int j = 0; j < 100; ++j) {\n                additionalVector[j] = (j % 2 == 0) ? j * 2 : j;\n            }\n        }\n\n        int minChangesRequired = nums.size();\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (const auto& entry : differenceMap) {\n            int diff = entry.first;\n            int changes = calculateChanges(maxValues, diff, entry.second);\n            minChangesRequired = min(minChangesRequired, changes);\n        }\n        \n        return minChangesRequired;\n    }\n\nprivate:\n    int calculateChanges(const vector<int>& sortedValues, int targetDiff, const vector<int>& possibleValues) {\n        int totalPairs = sortedValues.size();\n        int validPairsCount = lower_bound(sortedValues.begin(), sortedValues.end(), targetDiff) - sortedValues.begin();\n        int changes = validPairsCount * 2 + (totalPairs - validPairsCount);\n\n        for (int value : possibleValues) {\n            if (value < targetDiff) {\n                changes -= 2;\n            } else {\n                changes -= 1;\n            }\n        }\n\n        return changes;\n    }\n};\n",
    "submit_ts": "1721490415",
    "subm_id": "1327481964"
}