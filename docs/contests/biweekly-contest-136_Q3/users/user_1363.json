{
    "username": "just_want_to_code",
    "submission": "class Solution {\n    int find(int ind, int curr, vector<pair<int,int>> &poss, vector<vector<int>> &dp)\n    {\n        if(ind==poss.size())\n        {\n            if(curr==0) return 0;\n            else return 1e6;\n        }\n        if(dp[ind][curr]!=-1) return dp[ind][curr];\n        int op1= poss[ind].first + find(ind+1, curr, poss, dp);\n        int op2= poss[ind].second-poss[ind].first + find(ind+1, (curr+poss[ind].second)%4, poss, dp);\n        int res= min(op1, op2);\n        return dp[ind][curr]=res;\n    }\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n= grid.size(), m= grid[0].size();\n        \n        vector<pair<int,int>> poss;\n        for(int i=0; i<(n-n/2); i++)\n        {\n            for(int j=0; j<(m-m/2); j++)\n            {\n                if(i!=n-1-i && j!=m-1-j)\n                {\n                    if(grid[i][j]==grid[n-1-i][j] && grid[i][j]==grid[i][m-1-j] && grid[i][j]==grid[n-1-i][m-1-j])\n                    {\n                        if(grid[i][j]==1) poss.push_back({4,4});\n                        else poss.push_back({0,4});\n                        continue;\n                    }\n                    int ones= grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j] + grid[n-1-i][m-1-j];\n\n                    poss.push_back({ones,4});\n                }\n                else if(i!=n-1-i)\n                {\n                    if(grid[i][j]==grid[n-1-i][j])\n                    {\n                        if(grid[i][j]==1) poss.push_back({2,2});\n                        else poss.push_back({0,2});\n                        continue;\n                    }\n                    int ones= grid[i][j] + grid[n-1-i][j];\n\n                    poss.push_back({ones,2});\n                }\n                else if(j!=m-1-j)\n                {\n                    if(grid[i][j]==grid[i][m-1-j])\n                    {\n                        if(grid[i][j]==1) poss.push_back({2,2});\n                        else poss.push_back({0,2});\n                        continue;\n                    }\n                    int ones= grid[i][j] + grid[i][m-1-j];\n\n                    poss.push_back({ones,2});\n                }\n                else \n                {\n                    if(grid[i][j]==1) poss.push_back({1,1});\n                    else poss.push_back({0,1});\n                }\n            }\n        }\n        vector<vector<int>> dp(n*m+1, vector<int>(5,-1));\n        int ans= find(0, 0, poss, dp);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722699533",
    "subm_id": "1343214571"
}