{
    "username": "Codio",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        vector<vector<bool>> vis(n, vector<bool>(m, false));\n        int ans = 0;\n        vector<pair<int,int>> arr; // cost, total\n        for (int i = 0; i < (n+1)/2; i++) {\n            for (int j = 0; j < (m+1)/2; j++) {\n                if (vis[i][j]) continue;\n                vis[i][j] = true;\n                vis[i][m-1-j] = true;\n                vis[n-1-i][j] = true;\n                vis[n-1-i][m-1-j] = true;\n                int a = grid[i][j];\n                int b = grid[i][m-1-j];\n                int c = grid[n-1-i][j];\n                int d = grid[n-1-i][m-1-j];\n                int count = (a == 1) + (b == 1) + (c == 1) + (d == 1);\n                if (j != m-1-j && i != n-1-i) {\n                    ans += min(count, 4-count);\n                } else {\n                    if (j == m-1-j && i == n-1-i) {\n                        arr.push_back({1-grid[i][j], 1});\n                    } else {\n                        arr.push_back({2-(count/2), 2});\n                    }\n                }\n            }\n        }\n        vector<vector<int>> dp(arr.size()+1, vector<int>(4, 1e7));\n        dp[0][0] = 0;\n        for (int i = 1; i <= arr.size(); i++) {\n            int take = arr[i-1].first;\n            int nottake = arr[i-1].second-arr[i-1].first;\n            for (int j = 0; j < 4; j++) {\n                dp[i][j] = min(dp[i-1][(j-arr[i-1].second+4)%4] + take, dp[i-1][j] + nottake);\n            }\n        }\n        return dp[arr.size()][0] + ans;\n\n    }\n};\n",
    "submit_ts": "1722700078",
    "subm_id": "1343231036"
}