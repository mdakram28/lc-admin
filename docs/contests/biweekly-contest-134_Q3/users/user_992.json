{
    "username": "adi_9865",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int n = colors.size(); \n        int count = 0; \n \n        if (k == 1) { \n            return n; \n        } \n \n        int c1 = 1; \n        int i = 1; \n        while (i < n + k - 1) { \n            int c = i; \n            int p = i - 1; \n            if (c >= n) { \n                c -= n; \n            } \n            if (p >= n) { \n                p -= n; \n            } \n \n            if (colors[c] != colors[p]) { \n                ++c1; \n            } else { \n                c1 = 1; \n            } \n            if (c1 >= k) { \n                ++count; \n            } \n \n            ++i; \n        } \n \n        return count; \n    } \n};",
    "submit_ts": "1720279613",
    "subm_id": "1311758250"
}