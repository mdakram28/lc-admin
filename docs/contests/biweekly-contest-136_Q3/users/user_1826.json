{
    "username": "ableed",
    "submission": "typedef long long ll;\n#define fast_io                  \\\n    ios::sync_with_stdio(false); \\\n    cin.tie(nullptr);\n#define vi vector<ll>\n#define For(i, a, b) for (ll i = (a); i < (b); i++)\n#define srt(v) sort(v.begin(), v.end());\n#define pb push_back\n#define yes cout << \"YES\";\n#define no cout << \"NO\";\n#define ADD(v) accumulate(v.begin(), v.end(), 0)\n\nclass Solution{\npublic:\n    int res = 0;\n    int minFlips(vector<vector<int>> &grid)\n    {\n        ll n = grid.size(), m = grid[0].size();\n        ll check = 0, cnt = 0;\n\n        For(i, 0, n / 2){\n            For(j, 0, m / 2){\n                vi v = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]};\n\n                ll ones = ADD(v);\n                res += min(ones, 4 - ones);\n            }\n        }\n\n        if (m % 2 != 0){\n            For(i, 0, n / 2){\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]){\n                    res += 1;\n                    check += 1;\n                }\n                else\n                    if (grid[i][m / 2] == 1)\n                        cnt += 1;\n            }\n        }\n\n        if (n % 2 != 0){\n            For(j, 0, m / 2){\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]){\n                    res += 1;\n                    check += 1;\n                }\n                else\n                    if (grid[n / 2][j] == 1)\n                        cnt += 1;\n            }\n        }\n\n        if (cnt % 2 != 0 and check == 0)\n            res+=2;\n        if (n % 2 != 0 and m % 2 != 0 and grid[n / 2][m / 2] == 1)\n            res++;\n\n        return res;\n    }\n};\n",
    "submit_ts": "1722699986",
    "subm_id": "1343228241"
}