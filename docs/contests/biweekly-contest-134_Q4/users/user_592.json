{
    "username": "TleDestroyer",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        \n        int n = nums.length;\n        \n        long cnt = 0;\n\n        HashMap<Long, Long> pr = new HashMap<>();\n        \n\n        for (int i = 0; i < n; ++i) {\n            \n            HashMap<Long, Long> crr = new HashMap<>();\n\n            if (nums[i] == k) {\n                ++cnt;\n            }\n            \n            crr.put((long) nums[i], 1L);\n            \n\n            for (Map.Entry<Long, Long> entry : pr.entrySet()) {\n                \n                long vv = entry.getKey();                \n                long frq = entry.getValue();\n                \n                long ress = vv & nums[i];\n                \n                if (ress== k) {\n                    cnt += frq;\n                }\n                \n                \n                crr.put(ress, crr.getOrDefault(ress, 0L) + frq);\n                \n            }\n\n            pr = crr;\n        }\n        \n        \n\n        return cnt;\n    \n        \n    }\n}",
    "submit_ts": "1720278518",
    "subm_id": "1311712669"
}