{
    "username": "rocky180304",
    "submission": "\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        const int MOD = 1e9+7;\n        const int maxi = 400;\n        map<int, int> rmp;\n        \n        for (auto& req : requirements) {\n            rmp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> permutationCounts(n + 1, vector<long long>(maxi + 1, 0));\n        permutationCounts[0][0] = 1;\n\n        for (int j = 0; j < n; ++j) {\n            for (int i = 0; i <= maxi; ++i) {\n                for (int newPos = 0; newPos < j+1; ++newPos) {\n                    int prev = i - newPos;\n                    if (prev >= 0) {\n                        permutationCounts[j+1][i] = (permutationCounts[j+1][i] + permutationCounts[j][prev]) % MOD;\n                    }\n                }\n            }\n\n            if (rmp.find(j+1)!=rmp.end()) {\n                int tar = rmp[j+1];\n                for (int i = 0; i <= maxi; ++i) {\n                    if (i != tar) {\n                        permutationCounts[j+1][i] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (int i = 0; i <= maxi; ++i) {\n            ans = (ans + permutationCounts[n][i]) % MOD;\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": 1719071927.0
}