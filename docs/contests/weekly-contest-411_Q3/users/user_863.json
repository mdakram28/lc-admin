{
    "username": "Abhijit Karmakar",
    "submission": "import sys\nsys.set_int_max_str_digits(0)\nclass Solution:\n    def k6(self, n):\n        if n <= 2:\n            return \"6\" * n\n        if n & 1:\n            return \"8\" + (\"9\" * ((n - 3) // 2)) + \"8\" + (\"9\" * ((n - 3) // 2)) + \"8\"\n        else:\n            n //= 2\n            y = \"8\" + (\"9\" * max(0, n - 2)) + \"7\"\n            return y + y[::-1]\n\n    def k7(self, n):\n        if n <= 2:\n            return \"7\" * n\n        for i in range(9, 0, -1):\n            x = \"9\" * ceil((n - 2) / 2) + str(i)\n            if n & 1 and int(x + \"9\" * ceil((n - 2) / 2)) % 7 == 0:\n                return x + \"9\" * ceil((n - 2) / 2)\n            x = \"9\" * (n//2 - 1) + str(i)\n            if n % 2 == 0 and int(x + x[::-1]) % 7 == 0:\n                return x + x[::-1]\n\n    def k8(self, n):\n        if n <= 6:\n            return \"8\" * n\n        return \"8\" * 3 + \"9\" * (n - 6) + \"8\" * 3\n\n    def k4(self, n):\n        if n <= 4: return \"8\"*n\n        return \"88\" + \"9\" * (n-4) + \"88\"\n        \n        \n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in (1, 3, 9):\n            return \"9\" * n\n        elif k == 2:\n            return \"8\" * n if n <= 2 else \"8\" + \"9\" * (n - 2) + \"8\"\n        elif k == 4:\n            return self.k4(n)\n        elif k == 5:\n            return \"5\" * n if n <= 2 else \"5\" + \"9\" * (n - 2) + \"5\"\n        elif k == 6:\n            return self.k6(n)\n        elif k == 8: return self.k8(n)\n        return self.k7(n)\n",
    "submit_ts": "1723952927",
    "subm_id": "1359808078"
}