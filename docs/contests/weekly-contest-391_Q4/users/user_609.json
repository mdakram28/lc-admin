{
    "username": "se-ping-li-de-chao-yan-suan",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        t1, t2 = [], []\n        for i, p in enumerate(points):\n            t1.append((p[0] + p[1], i))\n            t2.append((p[0] - p[1], i))\n        t1.sort()\n        t2.sort()\n        # print(t1, t2)\n        # r = min(\n        #     max(t1[-1]-t1[1], t2[-1]-t2[0]), \n        #     max(t1[-2]-t1[0], t2[-1]-t2[0]),\n        #     max(t1[-1]-t1[0], t2[-1]-t2[1]),\n        #     max(t1[-1]-t1[0], t2[-2]-t2[0]),\n        #     )\n        r = math.inf\n        for d in [t1[0][1], t1[-1][1], t2[0][1], t2[-1][1]]:\n            t1min = t1[0][0] if t1[0][1] != d else t1[1][0]\n            t1max = t1[-1][0] if t1[-1][1] != d else t1[-2][0]\n            t2min = t2[0][0] if t2[0][1] != d else t2[1][0]\n            t2max = t2[-1][0] if t2[-1][1] != d else t2[-2][0]\n            r = min(r, max(t1max-t1min, t2max-t2min))\n\n        return r\n        \n        \n        "
}