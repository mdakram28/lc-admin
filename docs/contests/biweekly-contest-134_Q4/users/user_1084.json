{
    "username": "viksolve",
    "submission": "const int N = 1e5 + 5;\nint d[N*4];\nint help[N];\nvoid build(int x, int l, int r, int n){\n    if(l==r){\n        if(l<=n) d[x]=help[l];\n        return;\n    }\n    int sr=(l+r)/2;\n    build(x*2, l, sr, n);\n    build(x*2+1, sr+1, r, n);\n    d[x]=d[x*2]&d[x*2+1];\n}\nint query(int x, int l, int r, int a, int b){\n    if(a<=l&&r<=b){\n        return d[x];\n    }\n    int sr=(l+r)/2;\n    int res=-1;\n    if(a<=sr){\n        res=query(x*2, l, sr, a, b);\n    }\n    if(sr<b){\n        int pm=query(x*2+1, sr+1, r ,a , b);\n        if(res==-1) res=pm;\n        else res=res&pm;\n    }\n    return res;\n}\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size(), rozm=1;\n        while(rozm<n+1){\n            rozm<<=1;\n        }\n        for(int i=0;i<=4e5;i++) d[i]=0;\n        for(int i=0;i<=1e5;i++) help[i]=0;\n        for(int i=1;i<=n;i++){\n            help[i]=nums[i-1];\n        }\n        build(1, 1, rozm, n);\n        vector<int> dp(n+2, 0);\n        int last=-1;\n        for(int i=n-1;i>=0;i--){\n            if((k&nums[i])==k){\n                if(last==-1){\n                    dp[i]=i;\n                    last=i;\n                }\n                else dp[i]=last;\n            }\n            else{\n                dp[i]=-1;\n                last=-1;\n            }\n        }\n        long long ans=0;\n        for(int i=0;i<n;i++){\n            if(dp[i]==-1) continue;\n            int l=i, r=dp[i], idx=1e9;\n            while(l<=r){\n                int sr=(l+r)/2;\n                if(query(1, 1, rozm, i+1, sr+1)==k){\n                    idx=min(idx, sr);\n                    r=sr-1;\n                }\n                else l=sr+1;\n            }\n            if(idx!=1e9)ans+=dp[i]-idx+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281036",
    "subm_id": "1311810878"
}