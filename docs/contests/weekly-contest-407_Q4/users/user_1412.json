{
    "username": "gu-mu-8b",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diff = [target[i] - nums[i] for i in range(len(nums))]\n        diff.insert(0, 0)\n        ans = 0\n        def calu(i, j, d):\n            if diff[i] < 0:\n                for k in range(i, j + 1):\n                    diff[k] = -diff[k]\n            return max(diff[i:j + 1]) - d\n\n        flag = True if diff[0] >= 0 else False\n        flag2 = False\n        pre = 0\n        d = 0\n        for i in range(1, len(diff)):\n            if flag and diff[i] < 0:\n                ans += calu(pre, i - 1, d)\n                pre = i\n                d = 0\n                flag = False\n                flag2 = False\n            elif not flag and diff[i] > 0:\n                ans += calu(pre, i - 1, d)\n                d = 0\n                pre = i\n                flag = True\n                flag2 = False\n            else:\n                if flag:\n                    if not flag2 and diff[i] < diff[i - 1]:\n                        flag2 = True\n                    elif flag2 and diff[i] > diff[i - 1]:\n                        ans += calu(pre, i - 1, d)\n                        d = diff[i - 1]\n                        pre = i\n                        flag2 = False\n                else:\n                    if not flag2 and diff[i] > diff[i - 1]:\n                        flag2 = True\n                    elif flag2 and diff[i] < diff[i - 1]:\n                        ans += calu(pre, i - 1, d)\n                        d = diff[i - 1]\n                        pre = i\n                        flag2 = False\n            if i == len(diff) - 1:\n                ans += calu(pre, i, d)\n        return ans",
    "submit_ts": "1721532536",
    "subm_id": "548392936"
}