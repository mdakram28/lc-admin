{
    "username": "SamaelW",
    "submission": "import math\n\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        if k == 0:\n            return 2\n        elif k == 1:\n            return 4\n        \n        poss_n = list()\n        for n in range(1, 33):\n            if ((k-1) <= (2 ** n - 1)) and ((k-1) >= 2 ** n - n - 2):\n                poss_n.append(n)\n        #print(poss_n)\n        \n        ans = 0\n        for n in poss_n:\n            op_1 = 2 ** n - 1 - (k-1)\n            if (op_1 < 0) or (op_1 > n + 1):\n                continue\n            ans += math.comb(n+1, op_1)\n        return ans",
    "submit_ts": 1716089184.0
}