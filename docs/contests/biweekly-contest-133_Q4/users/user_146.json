{
    "username": "seryp",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        int start = 0;\n        int query_c = r.size();\n        sort(r.begin(),r.end());\n        if(r[start][0] == 0){\n            if(r[start][1] != 0){\n                return 0;\n            }\n            start++;\n        }\n        long long cur = 1;\n        int index = 0;\n        const int up = 400;\n        const int mod = 1e9 + 7;\n        vector<vector<long long>> dp(n + 3, vector<long long>(up + 1,0));\n        dp[index][0] = 1;\n        index++;\n        while(index < n){\n            for(int j = 1;j <= index + 1;j++){\n                int t = index + 1 - j;\n                for(int x = 0; x<=up;x++){\n                    if(dp[index-1][x] != 0 && x + t <= up){\n                        dp[index][x+t] = (dp[index][x+t] + dp[index-1][x]) % mod;\n                    }\n                }\n            }\n            if(r[start][0] == index){\n                for(int x = 0;x <=up ;x++){\n                    if(x != r[start][1]){\n                        dp[index][x] = 0;\n                    }\n                }\n                start++;\n            }\n            index++;\n        }\n        int aim = r[start-1][1];\n        return dp[n-1][aim];\n    }\n};",
    "submit_ts": 1719069066.0
}