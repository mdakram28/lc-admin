{
    "username": "LinSun1020",
    "submission": "class Solution {\n    HashMap<String, Integer> memo;\n    public int waysToReachStair(int k) {\n        memo = new HashMap<>();\n        return helper(1, k, 0, -1);\n    }\n    public int helper(int cur, int goal, int jump, int preOpt) {\n        if (cur < 0) return 0;\n        String key = String.valueOf(cur) + \" \" + String.valueOf(jump) + \" \" + String.valueOf(preOpt);\n        if (memo.containsKey(key)) return memo.get(key);\n        int ans = 0;\n        if (cur == goal) {\n            // return 1;\n            ans = 1;\n        }\n        // System.out.println(cur);\n        // go down\n        if (preOpt != 0) {\n            ans += helper(cur - 1, goal, jump, 0);\n        }\n        \n        // go up\n        if (cur <= goal) {\n            ans += helper(cur + (int) Math.pow(2, jump), goal, jump + 1, 1);\n        }\n        memo.put(key, ans);\n        return ans;\n    }\n}",
    "submit_ts": 1716088290.0
}