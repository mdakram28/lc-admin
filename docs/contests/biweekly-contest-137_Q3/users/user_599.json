{
    "username": "\u516d\u516c\u56ed",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n, m = len(board), len(board[0])\n        bottom = [board[i].copy() for i in range(n)]\n        for i in range(n-1)[::-1]:\n            for j in range(m):\n                bottom[i][j] = max(bottom[i][j], bottom[i+1][j])\n        ans = -inf\n        # print(board)\n        # print(bottom)\n        top = board[0].copy()\n        for i in range(1,n-1):\n            mx = [[-inf]*m for _ in range(m)]\n            tmp = sorted(bottom[i+1])\n            for p in range(m):\n                for q in range(p+1,m):\n                    a, b = min(bottom[i+1][p],bottom[i+1][q]), max(bottom[i+1][p],bottom[i+1][q])\n                    if tuple(sorted([a,b,tmp[-1]])[::-1]) <= tuple(tmp[-3:][::-1]):\n                        mx[p][q] = mx[q][p] = tmp[-1]\n                    elif tuple(sorted([a,b,tmp[-2]])[::-1]) <= tuple(tmp[-3:][::-1]):\n                        mx[p][q] = mx[q][p] = tmp[-2]\n                    else:\n                        mx[p][q] = mx[q][p] = tmp[-3]\n            # print(i,tmp,bottom[i+1])\n            # print(mx)\n            for p in range(m):\n                for q in range(m):\n                    if p == q: continue\n                    ans = max(ans,mx[p][q]+board[i][p]+top[q])\n            for q in range(m):\n                top[q] = max(top[q],board[i][q])\n        return ans",
    "submit_ts": "1723909080",
    "subm_id": "556334399"
}