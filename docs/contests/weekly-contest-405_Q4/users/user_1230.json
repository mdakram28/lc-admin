{
    "username": "Weeentar_Wind",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n\t{\n        Trie trie;\n        int n = target.size();\n        \n        for (int i = 0; i < words.size(); ++i) \n\t\t{\n            trie.insert(costs[i], words[i]);\n        }\n        \n    \n        vector<long long> dp(n + 1, 1e9);\n        dp[0] = 0;\n        \n      \n        for (int i = 0; i < n ; ++i) \n\t\t{\n            trie.updateCosts();\n            long long current_cost = dp[i];\n            TrieNode* node = trie.root;\n            \n            for (int j = i; j < n; ++j) \n\t\t\t{\n                char ch = target[j];\n                if (!node->children.count(ch)) \n\t\t\t\tbreak; \n                \n                node = node->children[ch];\n                if (node->min_cost == 1e9) \n\t\t\t\tcontinue; \n                \n                dp[j + 1] = min(dp[j + 1], current_cost + node->min_cost);\n            }\n        }\n        \n        return dp[n] == 1e9 ? -1 : dp[n];\n    }\n    \nprivate:\n    struct TrieNode \n\t{\n        map<char, TrieNode*> children;\n        int min_cost = 1e9; \n        \n        void updateMinCost(int cost) \n\t\t{\n            min_cost = min(min_cost, cost);\n        }\n    };\n    \n    class Trie {\n    public:\n        TrieNode* root;\n        \n        Trie() \n\t\t{\n            root = new TrieNode();\n        }\n        \n        void insert(int cost, string& word) \n\t\t{\n            TrieNode* node = root;\n            for (char ch : word) \n\t\t\t{\n                if (!node->children.count(ch)) \n\t\t\t\t{\n                    node->children[ch] = new TrieNode();\n                }\n                node = node->children[ch];\n            }\n            node->updateMinCost(cost);\n        }\n        \n    \n        void updateCosts() \n\t\t{\n        }\n    };\n};",
    "submit_ts": "1720323438",
    "subm_id": "1312375567"
}