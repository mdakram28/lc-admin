{
    "username": "ahluwaliatikant",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        \n        reverse(horizontalCut.begin(), horizontalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n        \n        int i = 0;\n        int j = 0;\n        long long int hm = 1;\n        long long int vm = 1;\n        long long int ans = 0;\n        while(i<m-1 && j<n-1){\n            if(horizontalCut[i] > verticalCut[j]){\n                ans = ans + (long long int)(horizontalCut[i] * hm);\n                vm++;\n                i++;\n            }\n            else{\n                ans = ans + (long long int)(verticalCut[j] * vm);\n                hm++;\n                j++;\n            }\n        }\n        \n        while(i < m-1){\n            ans = ans + (long long int)(horizontalCut[i] * hm);\n            vm++;\n            i++;\n        }\n        while(j < n-1){\n            ans = ans + (long long int)(verticalCut[j] * vm);\n            hm++;\n            j++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720925674",
    "subm_id": "1320262489"
}