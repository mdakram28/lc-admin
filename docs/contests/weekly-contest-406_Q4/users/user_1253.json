{
    "username": "harshit_99",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end(),greater<int>()); //m-1\n        sort(verticalCut.begin(),verticalCut.end(),greater<int>());     //n-1\n        int i = 0, j  = 0;\n        long long ans = 0;\n        while(i < m-1 && j < n-1)\n        {\n            if(horizontalCut[i] >= verticalCut[j])\n            {\n                ans += (long long)(j+1)*horizontalCut[i];\n                i++;\n            }\n            else{\n                ans += (long long)(i+1)*verticalCut[j];\n                j++;\n            }\n        }\n        while(i < m-1)\n        {\n            ans += (long long)(n)*horizontalCut[i];\n            i++;\n        }\n        while(j < n-1)\n        {\n            ans += (long long)(m)*verticalCut[j];\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926146",
    "subm_id": "1320277342"
}