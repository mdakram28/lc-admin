{
    "username": "dejandenib",
    "submission": "from typing import List\n\n\n\nimport math\n\n# Function to check if two circles touch each other\ndef intersect(x1, y1, x2, y2, r1, r2):\n    d = math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n\n    if(d <= r1 - r2):\n        return True\n    elif(d <= r2 - r1):\n        return True\n    elif(d < r1 + r2):\n        return True\n    elif(d == r1 + r2):\n        return True\n    else:\n        return False\n\nimport collections\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        a = circles\n\n        up = [False for i in a]\n        down = [False for i in a]\n        left = [False for i in a]\n        right = [False for i in a]\n        parent = [i for i in range(len(a))]\n        processed = [False for i in a]\n        q = collections.deque()\n\n        for i in range(len(a)):\n            x,y,r = a[i]\n\n            if x+r>=X:\n                right[i]=True\n            if x-r<=0:\n                left[i]=True\n            if y+r>=Y:\n                up[i]=True\n            if y-r<=0:\n                down[i]=True\n\n            if up[i] or down[i] or left[i] or right[i]:\n                q.append(i)\n                #processed[i]=True\n\n        if len(q)==0:\n            return True\n\n        while len(q)>0:\n            current_index = q[0]\n            if processed[current_index]:\n                q.popleft()\n                continue\n            processed[current_index]=True\n            x,y,r = a[q[0]]\n            q.popleft()\n            parent_of_this = current_index\n            while parent_of_this!=parent[parent_of_this]:\n                parent_of_this = parent[parent_of_this]\n            for i in range(len(a)):\n                if processed[i]==False:\n                    x2,y2,r2 = a[i]\n                    if intersect(x,y,x2,y2,r,r2):\n                        parenti = i\n                        while parenti != parent[parenti]:\n                            parenti = parent[parenti]\n\n\n\n                        f = parent_of_this\n                        g = parenti\n                        up[f]|=up[g]\n                        down[f]|=down[g]\n                        left[f]|=left[g]\n                        right[f]|=right[g]\n\n                        parent[parenti]=parent_of_this\n\n                        q.append(i)\n\n        for i in range(len(a)):\n            if up[i] and down[i]:\n                return False\n            if left[i] and right[i]:\n                return False\n            if up[i] and right[i]:\n                return False\n            if down[i] and left[i]:\n                return False\n\n        return True",
    "submit_ts": "1722137589",
    "subm_id": "1335768118"
}