{
    "username": "codebuster420",
    "submission": "class Solution {\npublic:\n    int mod= 1e9+7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> map;\n        int m= requirements.size();\n        \n        //insert in map\n        \n        for (auto& v: requirements) {\n            map[v[0] + 1] = v[1];\n        }\n        \n        vector<vector<long long int>> vec(n+1,vector<long long int>(401, 0));\n        vec[0][0] = 1;\n        \n        for (int i=1; i <= n; i++) {\n            for (int j=0; j<=400; j++) {\n                for (int l=0; l<i; l++) {\n                    int k = j - l;\n                    if (k >= 0) {\n                        vec[i][j] = (vec[i][j] + vec[i-1][k]) % mod;\n                    }\n                }\n            }\n            if (map.count(i)) {\n                int x = map[i];\n                for (int m=0; m<=400; m++) {\n                    if (m!=x) {\n                        vec[i][m] = 0;\n                    }\n                }\n            }\n        }\n\n        int ans = 0;\n        for (auto& i:vec[n]) {\n            ans+= i;\n            ans%= mod;\n        }\n        \n        return ans;\n\n\n    }\n};",
    "submit_ts": "1719070770",
    "subm_id": "1296831322"
}