{
    "username": "Scooter1946",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    \n    int binsearch(int val, vector<ll>& inds){\n        int l = 0, r = (int)inds.size()-1, mid;\n        while(l < r){\n            mid = (l + r + 1)/2;\n            if(inds[mid] < val){\n                l = mid;\n            }else{\n                r = mid-1;\n            }\n        }\n        return l;\n    }\n    \n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<ll> psumKV(n);\n        vector<ll> psumRD(n);\n        vector<ll> endind(n);\n        vector<ll> answer;\n        ll z = 0, o = 0;\n        ll ans = 0;\n        ll ind = 0;\n        for(int i = 0; i < (int)s.size(); i++){\n            if(s[i] == '0')z++;\n            else o++;\n            while(o > k && z > k){\n                if(s[ind] == '0')z--;\n                else o--;\n                ind++;\n            }\n            ans += i - (ind - 1LL);\n            psumKV[i] = ans;\n            psumRD[i] = (i == 0 ? 0 : psumRD[i-1]) + (n - ind - 1);\n            endind[i] = ind;\n        }\n        for(int i = 0; i < (int)queries.size(); i++){\n            int s = queries[i][0], e = queries[i][1];\n            ind = binsearch(s, endind);\n            if(ind > e) ind = e;\n            ans = psumKV[e] - (s == 0 ? 0 : psumKV[s-1]);\n            ans -= (psumRD[ind] - (s == 0 ? 0 : psumRD[s-1]) - (ind - (s - 1)) * (n - s - 1));\n            answer.push_back(ans);\n        }\n        return answer;\n    }\n};",
    "submit_ts": "1723952169",
    "subm_id": "1359789612"
}