{
    "username": "kirya2604",
    "submission": "class Solution {\npublic:\n    bool used[101000] = {0};\n    pair<int, int> dfs(int v, vector< vector< int >> &next)\n    {\n        used[v] = true;\n        //cout << \"IN \" << v << endl;\n\n        int mx = 0;\n        int bestN = v;\n        for (int u : next[v])\n        {\n            if (used[u]) continue;\n            pair<int, int> ch = dfs(u, next);\n            if (ch.first > mx)\n            {\n                mx = ch.first;\n                bestN = ch.second;\n            }\n        }\n        //cout << v << \" \" << mx << \" \" << bestN << endl;\n        return {mx + 1, bestN};\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        \n        int n = 0, m = 0;\n\n        vector< vector<int> > next1(101000), next2(101000);\n\n        for (auto edge : edges1)\n        {\n            next1[edge[0]].push_back(edge[1]);\n            next1[edge[1]].push_back(edge[0]);\n            n = max(n, max(edge[0], edge[1]));\n        }\n\n        n ++;\n\n        for (auto edge : edges2)\n        {\n            next2[edge[0]].push_back(edge[1]);\n            next2[edge[1]].push_back(edge[0]);\n            m = max(m, max(edge[0], edge[1]));\n        }\n\n        m ++;\n\n        next1.resize(n);\n        next2.resize(m);\n\n        pair<int, int> v1 = dfs(0, next1);\n        //cout <<v1.first << \" \" << v1.second << endl;\n        for (int i = 0; i < max(n,m); i ++) used[i] = 0;\n        v1 = dfs(v1.second, next1);\n        //cout <<v1.first << \" \" << v1.second << endl;\n\n        \n        for (int i = 0; i < max(n,m); i ++) used[i] = 0;\n        pair<int, int> v2 = dfs(0, next2);\n        for (int i = 0; i < max(n,m); i ++) used[i] = 0;\n        v2 = dfs(v2.second, next2);\n        //cout << v2.first << \" \" << v2.second << endl;\n\n        int d = v1.first - 1;\n        d = max(d, v2.first - 1);\n        d = max(d, (v1.first) / 2 + (v2.first) / 2 + 1);\n        return d;\n    }\n};",
    "submit_ts": 1719718607.0
}