{
    "username": "troels",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int N = nums.size();\n        unordered_map<int,int> mp;\n        vector<int> ds (k+2,0);\n        \n        for (int i=0; i<N/2; ++i) {\n            int absdiff = abs(nums[i]-nums[N-1-i]);\n            mp[absdiff]++;\n            \n            int mn = min(nums[i],nums[N-1-i]);\n            int mx = max(nums[i],nums[N-1-i]);\n            // if a >= d, and it will cant double\n            int d = max(mx,k-mn)+1;\n            \n            ds[d]++;\n        }\n        \n        int sum = 0;\n        for (int i=0; i<ds.size(); ++i) {\n            sum += ds[i];\n            ds[i]=sum;\n        }\n        \n        int best = N/2;\n        \n        for (auto const& m : mp) {\n            int cost = (N/2)-m.second;\n            cost += ds[m.first];\n            best = min(best,cost);\n            \n        }\n        return best;\n    }\n};",
    "submit_ts": "1721488916",
    "subm_id": "1327437104"
}