{
    "username": "cplusplus3",
    "submission": "class SGTree {\n    std::vector<int> seg;\npublic:\n    SGTree(int n) {\n        seg.resize(4 * n + 1, INT_MAX);\n    }\n\n    void build(int ind, int low, int high, std::vector<int>& arr) {\n        if (low == high) {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        int mid = (low + high) / 2;\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = (seg[2 * ind + 1] & seg[2 * ind + 2]);\n    }\n\n    int query(int ind, int low, int high, int l, int r) {\n        if (r < low || high < l) return INT_MAX;\n        if (low >= l && high <= r) return seg[ind];\n\n        int mid = (low + high) >> 1;\n        int left = query(2 * ind + 1, low, mid, l, r);\n        int right = query(2 * ind + 2, mid + 1, high, l, r);\n        return (left & right);\n    }\n\n    void update(int ind, int low, int high, int i, int val) {\n        if (low == high) {\n            seg[ind] = val;\n            return;\n        }\n\n        int mid = (low + high) >> 1;\n        if (i <= mid) update(2 * ind + 1, low, mid, i, val);\n        else update(2 * ind + 2, mid + 1, high, i, val);\n        seg[ind] = (seg[2 * ind + 1] & seg[2 * ind + 2]);\n    }\n};\n\nclass Solution {\n    long long f(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        SGTree sgt(n);\n        sgt.build(0, 0, n - 1, nums);\n        long long ans = 0;\n\n        for (int i = 0; i < n; i++) {\n            int l = 0;\n            int h = i;\n            int idx = i + 1;\n            \n            while (l <= h) {\n                int mid = l + (h - l) / 2;\n                if (sgt.query(0, 0, n - 1, mid, i) < k) {\n                    l = mid + 1;\n                } else {\n                    idx = mid;\n                    h = mid - 1;\n                }\n            }\n            ans += (i - idx + 1);\n        }\n\n        return ans;\n    }\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        long long a = f(nums, k + 1);\n        long long b = f(nums, k);\n        return b - a;\n    }\n};\n",
    "submit_ts": "1720281037",
    "subm_id": "1311810926"
}