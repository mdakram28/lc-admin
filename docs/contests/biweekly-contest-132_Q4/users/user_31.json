{
    "username": "pasricha_dhruv",
    "submission": "const int N = 5e3 + 10;\n\nint dp[N][60];\nint dp2[60];\n\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        \n        memset(dp2, 0, sizeof dp2);\n        \n        map<int, int> mp;\n        \n        int ans = 0;\n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = 0; j <= k; ++j)\n            {\n                if(i == 0)\n                {\n                    dp[i][j] = 1;\n                }\n                else\n                {\n                    dp[i][j] = 1;\n                    int rem = mp.count(nums[i]) ? dp[mp[nums[i]]][j] : 0;\n                    if(j > 0)\n                    {\n                        rem = max(rem, dp2[j - 1]);\n                    }\n                    \n                    dp[i][j] += rem;\n                }\n                \n                ans = max(ans, dp[i][j]);\n            }\n            \n            mp[nums[i]] = i; \n            \n            \n            for(int j = 0; j <= k; ++j)\n            {\n                dp2[j] = max(dp2[j], dp[i][j]);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717858237.0
}