{
    "username": "jason7708",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, vector<int>> cnt;\n        vector<int> all_mx_diff;\n        for(int i=0; i<n/2; i++) {\n            int diff = abs(nums[i] - nums[n-i-1]);\n            int g = max(nums[i], nums[n-i-1]), l = min(nums[i], nums[n-i-1]);\n            int mx_diff = max(g, k - l);\n            all_mx_diff.push_back(mx_diff);\n            cnt[diff].push_back(mx_diff);\n        }\n\n        ranges::sort(all_mx_diff);\n        for(auto& [diff, vec] : cnt) {\n            ranges::sort(vec);\n        }\n        int ans = 2 * n;\n        for(int x=0; x<=k; x++) {\n            int less_cnt = lower_bound(all_mx_diff.begin(), all_mx_diff.end(), x) - all_mx_diff.begin();\n            int greater_cnt = all_mx_diff.size() - less_cnt;\n\n            int eq_less = lower_bound(cnt[x].begin(), cnt[x].end(), x) - cnt[x].begin();\n            int eq_greater = cnt[x].size() - eq_less;\n\n            ans = min(ans, (less_cnt - eq_less) * 2 + (greater_cnt - eq_greater));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488805",
    "subm_id": "1327433757"
}