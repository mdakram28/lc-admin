{
    "username": "daxrajsinh16",
    "submission": "class Solution {\nprivate:\n    vector<long> segT;\n\n    void build(int s, int e, int i, const vector<long>& a) {\n        if (s == e) {\n            segT[i] = a[s];\n            return;\n        }\n        int mid = s + (e - s) / 2;\n        build(s, mid, 2 * i + 1, a);\n        build(mid + 1, e, 2 * i + 2, a);\n        segT[i] = max(segT[2 * i + 1], segT[2 * i + 2]);\n    }\n\n    void update(int s, int e, int i, int q, long v) {\n        if (s == e) {\n            segT[i] = v;\n            return;\n        }\n        int mid = s + (e - s) / 2;\n        if (q <= mid)\n            update(s, mid, 2 * i + 1, q, v);\n        else\n            update(mid + 1, e, 2 * i + 2, q, v);\n        segT[i] = max(segT[2 * i + 1], segT[2 * i + 2]);\n    }\n\n    long range(int s, int e, int i, int qs, int qe) {\n        if (qs <= s && qe >= e)\n            return segT[i];\n        if (qs > e || qe < s)\n            return LONG_MIN;\n        int mid = s + (e - s) / 2;\n        long l = range(s, mid, 2 * i + 1, qs, qe);\n        long r = range(mid + 1, e, 2 * i + 2, qs, qe);\n        return max(l, r);\n    }\n\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        \n        \n        vector<bool> arr;\n        set<int> set;\n        set.insert(0);\n        set.insert(100000);\n        unordered_map<int, int> map;\n        map[0] = 0;\n        map[100000] = 100000;\n        segT.resize(5 * 100000);\n\n        for (auto& i : queries) {\n            if (i[0] == 1) {\n                set.insert(i[1]);\n                auto prev = set.lower_bound(i[1]);\n                auto next = set.upper_bound(i[1]);\n                int prevVal = *(--prev);\n                int nextVal = *next;\n                map[nextVal] = nextVal - i[1];\n                map[i[1]] = i[1] - prevVal;\n                update(0, 100000, 0, i[1], map[i[1]]);\n                update(0, 100000, 0, nextVal, map[nextVal]);\n            } else {\n                auto prev = set.lower_bound(i[1]);\n                int prevVal = *(--prev);\n                if (i[1] - prevVal >= i[2]) {\n                    arr.push_back(true);\n                    continue;\n                } else if (range(0, 100000, 0, 0, i[1]) >= i[2]) {\n                    arr.push_back(true);\n                    continue;\n                }\n                arr.push_back(false);\n            }\n        }\n        return arr;\n    }\n};",
    "submit_ts": 1716652485.0
}