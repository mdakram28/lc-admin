{
    "username": "BZH110",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<int> ans(n);\n        vector<vector<int>> g(n);\n        for(auto& e:edges){\n            g[e[0]].push_back(e[1]);\n            g[e[1]].push_back(e[0]);\n        }\n        vector<int> t0(n, 0), t1(n, 0), high(n, -1), sub(n, -1);\n        function<int(int,int)> dfs = [&](int now, int pre)->int{\n            int ret = 0, a = 0, b = 0;\n            for(auto next:g[now]){\n                if(next == pre)\n                    continue;\n                auto t = dfs(next, now) + ((next % 2) ? 1 : 2);\n                ret = max(ret, t);\n                if(t > a){\n                    b = a;\n                    a = t;\n                    sub[now] = high[now];\n                    high[now] = next;\n                }\n                else if(t > b){\n                    b = t;\n                    sub[now] = next;\n                }\n            }\n            t0[now] = a;\n            t1[now] = b;\n            return ret;\n        };\n        ans[0] = dfs(0, -1);\n\n        function<void(int,int,int)> d2 = [&](int now, int pre, int ex){\n            ans[now] = max(t0[now], ex);\n            for(auto next:g[now]){\n                if(next == pre)\n                    continue;\n                if(next != high[now]) {\n                    d2(next, now, max({ex, t0[now]}) + ((now % 2) ? 1 : 2));\n                }\n                else{\n                    d2(next, now, max({ex, t1[now]}) + ((now % 2) ? 1 : 2));\n                }\n            }\n        };\n\n        d2(0, -1, 0);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722697318",
    "subm_id": "1343142194"
}