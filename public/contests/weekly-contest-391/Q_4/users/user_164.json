{
    "username": "BreadMuMu",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        # Variables to track running extrema\n        N = len(A)\n        p1 = 0\n        p2 = 0\n        p3 = 0\n        p4 = 0\n        minsum = maxsum = A[0][0] + A[0][1]\n        mindiff = maxdiff = A[0][0] - A[0][1]\n \n        for i in range(1, N):\n            sum = A[i][0] + A[i][1]\n            diff = A[i][0] - A[i][1]\n            if (sum < minsum):\n                minsum = sum\n                p1 = i\n            elif (sum > maxsum):\n                maxsum = sum\n                p2 = i\n            if (diff < mindiff):\n                mindiff = diff\n                p3 = i\n            elif (diff > maxdiff):\n                maxdiff = diff\n                p4 = i\n        \n        answer = float('inf')\n        tmp = A[p1]\n        A.pop(p1)\n        answer = min(answer, self.MaxDist(A))\n        A.insert(p1, tmp)\n        \n        tmp = A[p2]\n        A.pop(p2)\n        answer = min(answer, self.MaxDist(A))\n        A.insert(p2, tmp)\n        \n        tmp = A[p3]\n        A.pop(p3)\n        answer = min(answer, self.MaxDist(A))\n        A.insert(p3, tmp)\n        \n        tmp = A[p4]\n        A.pop(p4)\n        answer = min(answer, self.MaxDist(A))\n        A.insert(p4, tmp)\n        \n        return answer\n\n    def MaxDist(self, A):\n        N = len(A)\n\n        # Variables to track running extrema\n        minsum = maxsum = A[0][0] + A[0][1]\n        mindiff = maxdiff = A[0][0] - A[0][1]\n\n        for i in range(1,N):\n            sum = A[i][0] + A[i][1]\n            diff = A[i][0] - A[i][1]\n            if (sum < minsum):\n                minsum = sum\n            elif (sum > maxsum):\n                maxsum = sum\n            if (diff < mindiff):\n                mindiff = diff\n            elif (diff > maxdiff):\n                maxdiff = diff\n\n        maximum = max(maxsum - minsum, maxdiff - mindiff)\n        return maximum"
}