{
    "username": "KLatitude",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> mp;\n        int n = nums.size();\n        for (int i = 0, j = n - 1; i < j; i ++ , j -- ) {\n            if (nums[i] < nums[j])\n                swap(nums[i], nums[j]);\n\n            int x = nums[i] - nums[j];\n            if (mp.count(x))\n                mp[x] += 1;\n            else\n                mp[x] = 1;\n        }\n\n        vector<pair<int, int>> p;\n        for (auto [x, c] : mp)\n            p.push_back({x, c});\n\n        sort(p.begin(), p.end(), [&](const pair<int, int> &lhs, const pair<int, int> &rhs){\n            if (lhs.second == rhs.second)\n                return lhs.first < rhs.first;\n            return lhs.second > rhs.second;\n        });\n\n        int res = n;\n        for (int idx = 0; idx < min((int)p.size(), 10); idx ++ ) {\n            int sum = 0, x = p[idx].first;\n            for (int i = 0, j = n - 1; i < j; i ++ , j -- ) {\n                int y = nums[i] - nums[j];\n\n                if (x != y) {\n                    if (nums[i] - x >= 0 || nums[j] + x <= k)\n                        sum ++ ;\n                    else\n                        sum += 2;\n                }\n            }\n            \n            // cout << sum << endl;\n            res = min(sum, res);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1721487241",
    "subm_id": "548309093"
}