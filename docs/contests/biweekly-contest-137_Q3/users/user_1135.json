{
    "username": "Sameer Kumar",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<int>> v;\n        v.reserve(n * m);\n        \n        for(int i= 0;i<n;i++)\n        {\n            for(int j = 0;j<board[0].size();j++)\n                v.push_back({board[i][j], i, j});\n            \n        }\n        \n        sort(v.begin(), v.end(), greater<vector<int>>());\n        \n        \n        ll ans = LLONG_MIN;\n        \n        for(int i = 0;i<(n+m);i++)\n        {\n            for(int j = i+1;j < min(n*m, i + (n+m));j++)\n            {\n                for(int k = j+1;k < min(n*m, j + 2*(n+m));k++)\n                {\n                    int x1,y1,x2,y2,x3,y3;\n                    x1 = v[i][1];\n                    y1 = v[i][2];\n                    x2 = v[j][1];\n                    y2 = v[j][2];\n                    x3 = v[k][1];\n                    y3 = v[k][2];\n                    \n                    if(x1 != x2 and x2 != x3 and x3 != x1 and y1 != y2 and y2 != y3 and y3 != y1)\n                        ans = max(ans,v[i][0] + 0ll + v[j][0] + v[k][0] );\n                    \n                    \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910112",
    "subm_id": "1359217833"
}