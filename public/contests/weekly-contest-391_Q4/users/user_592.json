{
    "username": "tanuj_taneja",
    "submission": "class Solution {\npublic:\n    int helper(vector<vector<int>> &sm,vector<vector<int>> &df,int i){\n        int n=sm.size();\n        int ls=0,rs=n-1,ld=0,rd=n-1;\n        if (sm[ls][1]==i) ls++;\n        if (sm[rs][1]==i) rs--;\n        if (df[ld][1]==i) ld++;\n        if (df[rd][1]==i) rd--;\n        return max(abs(sm[ls][0]-sm[rs][0]),abs(df[ld][0]-df[rd][0]));\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<vector<int>> sm(n),df(n);\n        for(int i=0;i<n;i++){\n            sm[i]={points[i][0]+points[i][1],i};\n            df[i]={points[i][0]-points[i][1],i};     \n        }\n        sort(sm.begin(),sm.end());\n        sort(df.begin(),df.end());\n        int ans=INT_MAX;\n        vector<int> last;\n        last.push_back(sm[0][1]);\n        last.push_back(sm[n-1][1]);\n        last.push_back(df[0][1]);\n        last.push_back(df[n-1][1]);\n        for (int i:last){\n            ans=min(ans,helper(sm,df,i));\n        }\n        return ans;\n    }\n};"
}