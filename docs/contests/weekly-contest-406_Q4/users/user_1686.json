{
    "username": "the-tan",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int hc = 0, vc = 0;\n        int i = 0, j = 0;\n        long long ans = 0;\n        while(i < m - 1 && j < n - 1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] * (vc + 1);\n                hc++;\n                i++;\n            } else {\n                ans += verticalCut[j] * (hc + 1);\n                vc++;\n                j++;\n            }\n        }\n\n        while(i < m - 1) ans += horizontalCut[i++] * (vc + 1);\n        while(j < n - 1) ans += verticalCut[j++] * (hc + 1);\n        return ans;\n    }\n};",
    "submit_ts": "1720926076",
    "subm_id": "1320275231"
}