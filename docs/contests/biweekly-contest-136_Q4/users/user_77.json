{
    "username": "Dimitrovsd",
    "submission": "class Solution {\npublic:\n\n    const int INF = 1 << 30;\n\n    int n;\n    vector<int> ans;\n    vector<int> g[100000];\n    int dp[100000];\n    \n    int dfs1(int v, int p) {\n        dp[v] = 0;\n        for (int to : g[v]) {\n            if (to == p) continue;\n            dp[v] = max(dp[v], dfs1(to, v) + 2 - (to & 1));\n        }\n        return dp[v];\n    }\n\n    void dfs2(int v, int p, int add) {\n        cout << v << \" \" << add << endl;\n        ans[v] = max(dp[v], add);\n\n        int mx1 = 0;\n        int mx2 = 0;\n        for (int to : g[v]) {\n            if (to == p) continue;\n            int x = dp[to] + 2 - (to & 1);\n            if (x > mx2) swap(x, mx2);\n            if (mx2 > mx1) swap(mx2, mx1);\n        }\n\n        for (int to : g[v]) {\n            if (to == p) continue;\n            int x = dp[to] + 2 - (to & 1);\n            if (x == mx1) {\n                dfs2(to, v, max(mx2, add) + 2 - (v & 1));\n            } else {\n                dfs2(to, v, max(mx1, add) + 2 - (v & 1));\n            }\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size() + 1;\n        ans = vector<int>(n, -1);\n\n        for (auto& e : edges) {\n            g[e[0]].push_back(e[1]);\n            g[e[1]].push_back(e[0]);\n        }\n\n        dfs1(0, -1);\n        dfs2(0, -1, 0);\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1722698002",
    "subm_id": "1343166391"
}