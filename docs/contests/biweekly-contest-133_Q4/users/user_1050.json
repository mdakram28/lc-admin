{
    "username": "xerrex",
    "submission": "class Solution {\n    static const int MAX_INV=400;\n    static const int MOD = 1e9+7;\n    int memo[301][401];\n\n    int countPerms(int len, int inv, const vector<int>& reqInv, const vector<bool>& hasReq) {\n        if (len == 0) {\n            return inv == 0 ? 1 : 0;\n        }\n        if (memo[len][inv] != -1) {\n            return memo[len][inv];\n        }\n        \n        long long res = 0;\n        \n        for (int pos = 0; pos < len; pos++) {\n            int newInv = inv - pos;\n            if (newInv >= 0) {\n                res = (res + countPerms(len - 1, newInv, reqInv, hasReq)) % MOD;\n            }\n        }\n\n        if (hasReq[len]) {\n            memo[len][inv] = (inv == reqInv[len]) ? res : 0;\n        } else {\n            memo[len][inv] = res;\n        }\n\n        return memo[len][inv];\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        memset(memo, -1, sizeof(memo));\n\n        vector<int> reqInv(n + 1, -1);\n        vector<bool> hasReq(n + 1, false);\n        for (const auto& r : reqs) {\n            int len = r[0] + 1;\n            reqInv[len] = r[1];\n            hasReq[len] = true;\n        }\n\n        long long total = 0;\n        for (int inv = 0; inv <= MAX_INV; inv++) {\n            total = (total + countPerms(n, inv, reqInv, hasReq)) % MOD;\n        }\n\n        return total;\n    }\n};\n",
    "submit_ts": 1719071892.0
}