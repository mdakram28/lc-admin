{
    "username": "vjcp9058",
    "submission": "#include <vector>\n#include <set>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int numNodes, vector<vector<int>>& queries) {\n        // Initialize distance vector with increasing distances\n        vector<int> distances(numNodes, 0);\n        for (int i = 1; i < numNodes; ++i) {\n            distances[i] = distances[i - 1] + 1;\n        }\n\n        // Initialize set with all node indices\n        set<int> nodeIndices;\n        for (int i = 0; i < numNodes; ++i) {\n            nodeIndices.insert(i);\n        }\n\n        // Result vector to store answers to each query\n        vector<int> result;\n\n        // Process each query\n        for (const auto& query : queries) {\n            int leftIndex = query[0];\n            int rightIndex = query[1];\n\n            // Find the range of nodes to erase from the set\n            auto lowerBound = nodeIndices.lower_bound(leftIndex + 1);\n            auto upperBound = nodeIndices.lower_bound(rightIndex);\n\n            // Erase the nodes within the range\n            nodeIndices.erase(lowerBound, upperBound);\n\n            // Store the size of the set after erasure, minus one\n            result.push_back(nodeIndices.size() - 1);\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1722743749",
    "subm_id": "1343798775"
}