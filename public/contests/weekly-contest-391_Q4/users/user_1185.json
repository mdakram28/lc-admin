{
    "username": "dreamy-antonelliqkw",
    "submission": "class Solution {\npublic:\n    int tmax(vector<vector<int>> &t, int i) {\n        int n = t.size();\n        return (t[n-1][1] == i ? t[n-2][0] : t[n-1][0]) - (t[0][1] == i ? t[1][0] : t[0][0]);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<int>> t1;\n        vector<vector<int>> t2;\n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0], y = points[i][1];\n            t1.push_back({x+y,i});\n            t2.push_back({x-y,i});\n        }\n        sort(t1.begin(), t1.end(), [](auto& a, auto& b) {\n            return a[0] < b[0];\n        });\n        sort(t2.begin(), t2.end(), [](auto& a, auto& b) {\n            return a[0] < b[0];\n        });\n        \n        if (t1.back()[0] - t1[0][0] > t2.back()[0] - t2[0][0]) {\n            int chu1 = max(t1[n-1][0] - t1[1][0], tmax(t2, t1[0][1]));\n            int chu2 = max(t1[n-2][0] - t1[0][0], tmax(t2, t1[n-1][1]));\n            return min(chu1, chu2);\n        } else {\n            int chu1 = max(t2[n-1][0] - t2[1][0], tmax(t1, t2[0][1]));\n            int chu2 = max(t2[n-2][0] - t2[0][0], tmax(t1, t2[n-1][1]));\n            return min(chu1, chu2);\n        }\n        \n        \n    }\n};"
}