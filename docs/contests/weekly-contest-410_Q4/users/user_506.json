{
    "username": "datnguyen03",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        prev_dp = defaultdict(int)\n        prev_prefix_dp = defaultdict(int)\n        mod = int(1e9 + 7)\n\n        for num1 in range(nums[0] + 1):\n            num2 = nums[0] - num1\n            prev_dp[(num1, num2)] = 1\n            prev_prefix_dp[(num1, num2)] = prev_dp[(num1, num2)] + prev_prefix_dp[(num1 - 1, num2 + 1)]\n\n        for i in range(1, n):\n            curr_dp = defaultdict(int)\n            curr_prefix_dp = defaultdict(int)\n\n            for num1 in range(nums[i] + 1):\n                num2 = nums[i] - num1\n\n                prev_count = 0\n                if nums[i] <= nums[i - 1]:\n                    prev_num1 = num1\n                    prev_num2 = nums[i - 1] - prev_num1\n                    prev_count = prev_prefix_dp[(prev_num1, prev_num2)]\n                elif num2 <= nums[i - 1]:\n                    prev_num2 = num2\n                    prev_num1 = nums[i - 1] - prev_num2\n                    prev_count = prev_prefix_dp[(prev_num1, prev_num2)]\n\n                # print(i, num1, num2, )\n                curr_dp[(num1,num2)] = prev_count\n                curr_dp[(num1,num2)] %= mod\n\n                curr_prefix_dp[(num1,num2)] = curr_dp[(num1,num2)] + curr_prefix_dp[(num1 - 1, num2 + 1)]\n                curr_prefix_dp[(num1,num2)] %= mod\n                # print(i, num1, num2, prefix_dp[i][num1][num2])\n\n            prev_dp = curr_dp\n            prev_prefix_dp = curr_prefix_dp\n        \n        result = 0\n        for num1 in range(nums[-1] + 1):\n            num2 = nums[-1] - num1\n            result += prev_dp[(num1,num2)]\n            result %= mod\n\n        return result\n\n# 0 8 \n# 1 7 \n# 2 6\n# 3 5\n# 4 4 \n# 5 3 \n# 6 2\n# 7 1\n# 8 0\n\n# 3 7",
    "submit_ts": "1723347133",
    "subm_id": "1351592615"
}