{
    "username": "louisfghbvc",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        // goal: find the number of ways to each K stair\n        // idea:\n        // 1st operation: cannot be used consecutive\n        // 2st operation: jump+1\n        \n        // we never do 2nd twice -> since it's impossible\n        \n        // we only have two start, from 1st, or 2nd\n        // case1:\n        // i=1, j=0\n        // i=0, j=0\n        // i=1, j=1\n        // i=0, j=1\n        // i=2, j=2  => i=6,j=3\n        // i=1, j=2\n        // i=3, j=3\n        // i=2, j=3\n        // i=2+2^3,j=4\n        // i=2+2^3-1,j=4\n        \n        // i=1,j=0\n        // i=2,j=1 => \n        // i=1,j=1 => i=3,j=2\n        \n        // j is only have at most 30\n        \n        // 0: 0,1\n        // 1: 0,1,1,2\n        // 2: 1,2,3\n        // 3: 2,3,5,6\n        \n        // write the tree\n        //       (1,0)\n        //   /.         \\\n        // [0,0]         (2,1)\n        //    \\          /        \\\n        //    (1,1)   [1,1]       (4,2)\n        //     /  \\       \\       /    \\\n        //  [0,1]  (3,2)  (3,2)  [3,2] [8,3]\n        //.   \\       /    /\n        //    (2,2) [2,2]  [2,2]\n        //    /   \\    \\     \\\n        //. [1,2] (6,3) (6,3) (6,3)\n        //.   \\\n        //.   (5,3)\n        \n        vector dp(31, vector(2, unordered_map<int, int>()));\n        auto dfs = [&](auto &self, int i, int j, bool op1=false) -> int {\n            if (i - k >= 2) return 0;\n            if (j >= 31) return 0;\n            auto it = dp[j][op1].find(i);\n            if (it != dp[j][op1].end())\n                return it->second;\n            \n            int &res = dp[j][op1][i];\n            res = (i==k);\n            if (op1 == false)\n                res = res + self(self, i-1, j, true);\n            if (i < INT_MAX - (1<<j))\n                res = res + self(self, i+(1<<j), j+1, false);\n            \n            return res;\n        };\n        \n        return dfs(dfs, 1, 0);\n     }\n};",
    "submit_ts": 1716089492.0
}