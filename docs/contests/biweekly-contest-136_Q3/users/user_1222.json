{
    "username": "bhavyas_",
    "submission": "\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        rows, cols = len(grid), len(grid[0])\n        total_flips = 0\n\n        def flips_for_2x2_subgrid(x: int, y: int) -> int:\n            elements = [\n                grid[x][y],\n                grid[rows - x - 1][y],\n                grid[x][cols - y - 1],\n                grid[rows - x - 1][cols - y - 1]\n            ]\n            ones_count = sum(elements)\n            return min(ones_count, 4 - ones_count)\n\n        def flips_for_middle_row() -> (int, int):\n            middle_row = rows // 2\n            row_flips = 0\n            ones_count = 0\n\n            for col in range(cols // 2):\n                if grid[middle_row][col] != grid[middle_row][cols - col - 1]:\n                    row_flips += 1\n                elif grid[middle_row][col] == 1:\n                    ones_count += 1\n\n            return row_flips, ones_count\n\n        def flips_for_middle_column() -> (int, int):\n            middle_col = cols // 2\n            col_flips = 0\n            ones_count = 0\n\n            for row in range(rows // 2):\n                if grid[row][middle_col] != grid[rows - row - 1][middle_col]:\n                    col_flips += 1\n                elif grid[row][middle_col] == 1:\n                    ones_count += 1\n\n            return col_flips, ones_count\n\n        def flips_for_central_element() -> int:\n            if rows % 2 != 0 and cols % 2 != 0 and grid[rows // 2][cols // 2] == 1:\n                return 1\n            return 0\n\n        for row in range(rows // 2):\n            for col in range(cols // 2):\n                total_flips += flips_for_2x2_subgrid(row, col)\n\n        total_possible_flips, total_ones_count = 0, 0\n\n        if rows % 2 != 0:\n            row_flips, row_ones = flips_for_middle_row()\n            total_flips += row_flips\n            total_possible_flips += row_flips\n            total_ones_count += row_ones\n\n        if cols % 2 != 0:\n            col_flips, col_ones = flips_for_middle_column()\n            total_flips += col_flips\n            total_possible_flips += col_flips\n            total_ones_count += col_ones\n\n        total_flips += flips_for_central_element()\n\n        if total_possible_flips == 0 and total_ones_count % 2 != 0:\n            total_flips += 2\n\n        return total_flips\n",
    "submit_ts": "1722699337",
    "subm_id": "1343208566"
}