{
    "username": "hkhzzz",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        // AND more only makes it smaller\n        int n = nums.size();\n        vector<int> dp(nums.begin(), nums.end());\n        \n        int ret = abs(nums[0] - k);\n        int all = nums[0];\n        for (int j = 0; j < n; j ++) {\n            ret = min(ret, abs(nums[j] - k));\n            all &= nums[j];\n        }\n        ret = min(ret, abs(all - k));\n        if (all > k) return ret;\n        for (int i = 1; i <= n; i ++) {\n            int mx = 0;\n            for (int j = 0; j < n - i; j ++) {\n                dp[j] &= nums[j + i];\n                mx = max(mx, dp[j]);\n                ret = min(ret, abs(dp[j] - k));\n                if (ret == 0) break;\n                // cout << i << \",\" << j << \": \" << dp[j] << endl;\n            }\n            if (mx < k || ret == 0) break;\n        }\n        \n        \n        \n        return ret;\n    }\n};",
    "submit_ts": "1717297893",
    "subm_id": "1274759689"
}