{
    "username": "de123",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int>sum;\n        multiset<int>diff;\n        \n        for(int i=0; i<points.size(); i++){\n            sum.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][0]-points[i][1]);\n        }\n        \n        int ans = INT_MAX;\n        \n        for(int i=0; i<points.size(); i++){\n            int s = points[i][0] + points[i][1];\n            int d = points[i][0] - points[i][1];\n            \n            sum.erase(sum.find(s));\n            diff.erase(diff.find(d));\n            \n            int temp1 = (*sum.rbegin())-(*sum.begin());\n            int temp2 = (*diff.rbegin()) - (*diff.begin());\n            \n            ans = min(ans,max(temp1,temp2));\n            \n            sum.insert(s);\n            diff.insert(d);\n        }\n        \n        return ans;\n    }\n};"
}