{
    "username": "tarptaeya",
    "submission": "from math import inf\nfrom functools import cache\n\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        @cache\n        def f(a, b, c, d, k):\n            if k == 1:\n                return g(a, b, c, d)\n            ans = inf\n            for i in range(a, c):\n                ans = min(ans, f(a, b, i, d, k - 1) + g(i + 1, b, c, d), f(i + 1, b, c, d, k - 1) + g(a, b, i, d))\n            for j in range(b, d):\n                ans = min(ans, f(a, b, c, j, k - 1) + g(a, j + 1, c, d), f(a, j + 1, c, d, k - 1) + g(a, b, c, j))\n            return ans\n\n        def g(a, b, c, d):\n            xmin = c\n            ymin = d\n            xmax = a\n            ymax = b\n            for i in range(a, c + 1):\n                for j in range(b, d + 1):\n                    if grid[i][j] == 1:\n                        xmin = min(xmin, i)\n                        xmax = max(xmax, i)\n                        ymin = min(ymin, j)\n                        ymax = max(ymax, j)\n            ans = max(1, (xmax - xmin + 1) * (ymax - ymin + 1))\n            return ans\n        \n        m = len(grid)\n        n = len(grid[0])\n        return f(0, 0, m - 1, n - 1, 3)\n",
    "submit_ts": 1719112851.0
}