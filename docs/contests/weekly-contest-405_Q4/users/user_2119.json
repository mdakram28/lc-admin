{
    "username": "SiddhiM7",
    "submission": "import java.util.*;\n\nclass Solution {\n    static class TrieNode {\n        Map<Character, TrieNode> children = new HashMap<>();\n        int cost = Integer.MAX_VALUE;\n    }\n\n    static class Trie {\n        TrieNode root = new TrieNode();\n\n        void insert(String word, int cost) {\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                node.children.putIfAbsent(c, new TrieNode());\n                node = node.children.get(c);\n            }\n            node.cost = Math.min(node.cost, cost);\n        }\n\n        List<int[]> getMatches(String s, int start) {\n            List<int[]> matches = new ArrayList<>();\n            TrieNode node = root;\n            for (int i = start; i < s.length(); i++) {\n                node = node.children.get(s.charAt(i));\n                if (node == null) break;\n                if (node.cost != Integer.MAX_VALUE) {\n                    matches.add(new int[]{i + 1, node.cost});\n                }\n            }\n            return matches;\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; i++) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            for (int[] match : trie.getMatches(target, i)) {\n                int end = match[0];\n                int cost = match[1];\n                dp[end] = Math.min(dp[end], dp[i] + cost);\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        \n        String target = scanner.nextLine();\n\n       \n        int wordCount = scanner.nextInt();\n        scanner.nextLine();\n\n        String[] words = new String[wordCount];\n        int[] costs = new int[wordCount];\n\n        for (int i = 0; i < wordCount; i++) {\n            words[i] = scanner.nextLine();\n        }\n\n        for (int i = 0; i < wordCount; i++) {\n            costs[i] = scanner.nextInt();\n        }\n\n        Solution solution = new Solution();\n        int result = solution.minimumCost(target, words, costs);\n\n        System.out.println(result);\n\n        scanner.close();\n    }\n}\n",
    "submit_ts": "1720322790",
    "subm_id": "1312359165"
}