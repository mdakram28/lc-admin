{
    "username": "killerpajji",
    "submission": "class Solution {\npublic:\n    map<int,map<pair<int,int>,int>> mp;\n    int find(int jump,int lastOp,int pos,int k){\n        if(pos-1>k) return 0;\n        \n        pair<int,int> p(jump,lastOp);\n        \n        if(mp[pos].find(p)!=mp[pos].end()) return mp[pos][p];\n        \n        int ans = 0;\n        if(pos==k) ans++;\n        \n        if(lastOp==false){\n            ans += find(jump,true,pos-1,k);\n        }\n        ans += find(jump+1,false,pos+(1<<jump),k);\n        return mp[pos][p] = ans;\n    }\n    int waysToReachStair(int k) {\n        mp.clear();\n        int ans = find(0,false,1,k);\n        return ans;\n    }\n};",
    "submit_ts": 1716089527.0
}