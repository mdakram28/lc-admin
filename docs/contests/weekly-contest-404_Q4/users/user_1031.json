{
    "username": "vanshulagarwal2004",
    "submission": "class Solution {\npublic:\n    int maxdim(vector<vector<int>>&graph, int &ans, vector<int>&vis, int curr){\n        vis[curr]=1;\n        int a,max1=0,max2=0;\n        for(auto it:graph[curr]){\n            if(!vis[it]){\n                a=maxdim(graph,ans,vis,it);\n                if(max1<a){\n                    max2=max1;\n                    max1=a;\n                }\n                else if(max2<a){\n                    max2=a;\n                }\n            }\n        }\n        if(max1+max2+1>ans){\n            ans=max1+max2+1;\n        }\n        vis[curr]=0;\n        // cout<<curr<<\" \"<<max1+1<<\" \"<<ans<<endl;\n        return max1+1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>>graph1(edges1.size()+1),graph2(edges2.size()+1);\n        for(auto it:edges1){\n            graph1[it[0]].push_back(it[1]);\n            graph1[it[1]].push_back(it[0]);\n        }\n        for(auto it:edges2){\n            graph2[it[0]].push_back(it[1]);\n            graph2[it[1]].push_back(it[0]);\n        }\n        vector<int>vis1(edges1.size()+1);\n        vector<int>vis2(edges2.size()+1);\n        int a1=0,a2=0;\n        maxdim(graph1,a1,vis1,0);\n        maxdim(graph2,a2,vis2,0);\n        return max(a1/2+a2/2+1,max(a1-1,a2-1));\n    }\n};",
    "submit_ts": 1719718981.0
}