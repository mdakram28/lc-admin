{
    "username": "afterdisillusion",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                sum_ = grid[i][j] + grid[m - i - 1][j] + grid[i][n - j - 1] + grid[m - i - 1][n - j - 1]\n                ans += min(sum_, 4 - sum_)\n        if m % 2 and n % 2 and grid[m // 2][n // 2]:\n            ans += 1\n        ones = 0\n        changes = 0\n        if m % 2:\n            for i in range(n // 2):\n                if grid[m // 2][i] != grid[m // 2][n - i - 1]:\n                    ans += 1\n                    changes += 1\n                elif grid[m // 2][i] == grid[m // 2][n - i - 1] == 1:\n                    ones += 2\n        if n % 2:\n            for i in range(m // 2):\n                if grid[i][n // 2] != grid[m - i - 1][n // 2]:\n                    ans += 1\n                    changes += 1\n                elif grid[i][n // 2] == grid[m - i - 1][n // 2] == 1:\n                    ones += 2\n        return ans + 2 if ones % 4 and not changes else ans",
    "submit_ts": "1722697550",
    "subm_id": "552266644"
}