{
    "username": "ganeshdarshan18",
    "submission": "#define vi vector<int>\n#define fastio ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\ntemplate <typename T>\nclass TrieNode {\npublic:\n    array<TrieNode<T>*, 26> children;\n    vector<pair<T, T>> ending;\n    TrieNode() {\n        children.fill(nullptr);\n    }\n    ~TrieNode() {\n        for (auto child : children) {\n            delete child;\n        }\n    }\n};\n\ntemplate <typename T>\nclass Trie {\npublic:\n    TrieNode<T>* root;\n    Trie() {\n        root = new TrieNode<T>();\n    }\n    void insert(const string& w, T idx, T cost) {\n        TrieNode<T>* node = root;\n        for (char ch : w) {\n            int charIndex = ch - 'a';\n            if (!node->children[charIndex]) {\n                node->children[charIndex] = new TrieNode<T>();\n            }\n            node = node->children[charIndex];\n        }\n        node->ending.push_back({ idx, cost });\n    }\n    ~Trie() {\n        delete root;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string tar, vector<string>& w, vector<int>& costs) {\n        int n = tar.size(), sz = w.size();\n        vi dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        Trie<int> trie;\n        for (int i = 0; i < sz; i++)\n            trie.insert(w[i], i, costs[i]);\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == INT_MAX) {\n                continue;\n            }\n            TrieNode<int>* node = trie.root;\n            for (int j = i; j < n; j++) {\n                int charIndex = tar[j] - 'a';\n                if (!node->children[charIndex]) {\n                    break;\n                }\n                node = node->children[charIndex];\n                for (auto& nd : node->ending) {\n                    int l = w[nd.first].size();\n                    if (i + l <= n) dp[i + l] = min(dp[i + l], dp[i] + nd.second);\n                }\n            }\n        }\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720324588",
    "subm_id": "1312403200"
}