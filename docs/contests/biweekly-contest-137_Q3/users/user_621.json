{
    "username": "bramar2",
    "submission": "#include <bits/stdc++.h>\n#pragma GCC optimize (\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx2,tune=native\")\nusing namespace std;\n#define all(x) x.begin(), x.end()\n\n\nusing ull = unsigned long long;\nusing ll = long long;\n\ninline int gcd(int a,int b) { if (b==0) return a; return gcd(b, a%b); }\ninline long long gcd(long long a,long long b) { if (b==0) return a; return gcd(b, a%b); }\ninline int lcm(int a,int b) { return a/gcd(a,b)*b; } \ninline long long lcm(long long a,long long b) { return a/gcd(a,b)*b; }\ninline long long nth_prime(long long a) { a++;if(a <= 6) return (vector<long long>{2,3,5,7,11,13,17})[a]; long double lg = log((long double) a); return (long long) floor(a * (lg + log(lg))); }\ninline long long mod_exp(long long base, long long exp, long long modd) { unsigned long long ans = 1; base %= modd; while(exp > 0) { if(exp%2==1) ans = (base*ans)%modd; exp /= 2; base = (base*base)%modd; } return ans; }\ninline string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }\ninline string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }\n\n\nbool fIO() {\n    ios::sync_with_stdio(false);\n    ios_base::sync_with_stdio(false);\n    ios::sync_with_stdio(false);\n    cout.tie(nullptr);\n    cin.tie(nullptr);\n    return true;\n}\nbool y4555123 = fIO();\nconst ll MOD = 1e9 + 7;\n\nclass ListNodeA {\n    int val;\n    ListNodeA* next;\n    ListNodeA() {}\n    ListNodeA(int x) : val(x) {}\n    ListNodeA(int x, ListNodeA* pNext) : val(x), next(pNext) {}\n};\nclass TreeNodeA {\n    int val;\n    TreeNodeA* left;\n    TreeNodeA* right;\n    TreeNodeA(int x) : val(x), left(nullptr), right(nullptr) {}\n    TreeNodeA(int x, TreeNodeA* left, TreeNodeA* right) : val(x), left(left), right(right) {}\n};\n// using ListNode = ListNodeA;\n// using TreeNode = TreeNodeA;\n\nclass Solution {\npublic:\n    long long maximumValueSum(const vector<vector<int>>& board) {\n        int M = (int) board.size(), N = (int) board[0].size();\n        vector<pair<int,pair<int,int>>> values;\n        for(int i = 0; i < M; i++) {\n            for(int j = 0; j < N; j++) {\n                values.push_back({board[i][j], {i, j}});\n            }\n        }\n        sort(all(values));\n        // Choose from the last 27\n        int SZ = (int) values.size();\n        const int compute = 27;\n        ll ans = LONG_LONG_MIN;\n        for(int ai = max(0, SZ-compute); ai < SZ; ai++) {\n            for(int bi = ai+1; bi < SZ; bi++) {\n                if(values[ai].second.first == values[bi].second.first ||\n                    values[ai].second.second == values[bi].second.second) continue;\n                for(int ci = bi+1; ci < SZ; ci++) {\n                    if(values[ci].second.first == values[bi].second.first ||\n                    values[ci].second.second == values[bi].second.second ||\n                    values[ai].second.first == values[ci].second.first ||\n                    values[ai].second.second == values[ci].second.second) continue;\n                    ans = max(ans, (ll) values[ai].first + values[bi].first + values[ci].first);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908617",
    "subm_id": "1359160111"
}