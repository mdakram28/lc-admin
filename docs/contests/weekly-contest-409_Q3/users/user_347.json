{
    "username": "sank555",
    "submission": "template <typename T> struct IntervalContainer {\n    set<pair<T, T>> intervals;\n    T total = 0;\n\n    void add(T l, T r) {\n        while (true) {\n            auto it = intervals.lower_bound(make_pair(l, l));\n            if (it == intervals.end() || it->first >=r) break;\n            r = max(r, it->second);\n            l = min(l, it->first);\n            total -= it->second - it->first;\n            intervals.erase(it);\n        }\n        while (true) {\n            auto it = intervals.lower_bound(make_pair(l, l));\n            if (it == intervals.begin()) break;\n            it--;\n            if (it->second <=l) break;\n            r = max(r, it->second);\n            l = min(l, it->first);\n            total -= it->second - it->first;\n            intervals.erase(it);\n        }\n        intervals.insert(make_pair(l, r));\n        total += r - l;\n    }\n\n\n};\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        IntervalContainer<int> ic;\n        vector<int> ans;\n        for(int i =0 ; i<=n-2;i++){\n            ic.add(i,i+1);\n        }\n        for(auto q : queries){\n            ic.add(q[0],q[1]);\n            ans.push_back(ic.intervals.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740787",
    "subm_id": "1343728713"
}