{
    "username": "i3rave-darwinbl8",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ranges::sort(horizontalCut, greater{});\n        ranges::sort(verticalCut, greater{});\n        int i = 0;\n        int j = 0;\n        long long cost = 0;\n        while (i < m-1 && j < n-1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                cost += static_cast<long long>(horizontalCut[i]) * (j+1);\n                i++;\n            } else {\n                cost += static_cast<long long>(verticalCut[j]) * (i+1);\n                j++;\n            }\n        }\n        while (i < m-1) cost += static_cast<long long>(horizontalCut[i++]) * n;\n        while (j < n-1) cost += static_cast<long long>(verticalCut[j++]) * m;\n        return cost;\n    }\n};",
    "submit_ts": "1720924923",
    "subm_id": "546435506"
}