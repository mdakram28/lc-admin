{
    "username": "scanhex",
    "submission": "\nclass Solution {\npublic:\n  vector<vector<int>> rot(vector<vector<int>> &board) {\n    vector<vector<int>> res(board[0].size(), vector<int>(board.size()));\n    for (int i = 0; i < board.size(); i++) {\n      for (int j = 0; j < board[0].size(); j++) {\n        res[j][board.size() - 1 - i] = board[i][j];\n      }\n    }\n    return res;\n  }\n  long long maximumValueSum(vector<vector<int>> &board) {\n    const long long oo = 0x3f3f3f3f3f3f3f3f;\n    long long ans = -oo;\n    for (int i = 0; i < 4; ++i, board = rot(board)) {\n      int n = board.size(), m = board[0].size();\n      vector<vector<long long>> mx(n, vector<long long>(m, -oo));\n      vector<vector<long long>> mxr(n, vector<long long>(m, -oo));\n      auto mxc = mxr;\n      auto mxa = mxr;\n      for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < m; ++j) {\n          if (i == 0)\n            mxc[i][j] = board[i][j];\n          else\n            mxc[i][j] = max(mxc[i - 1][j], 1LL * board[i][j]);\n          if (j == 0)\n            mxr[i][j] = board[i][j];\n          else\n            mxr[i][j] = max(mxr[i][j - 1], 1LL * board[i][j]);\n          mxa[i][j] = board[i][j];\n          if (i > 0)\n            mxa[i][j] = max(mxa[i][j], mxa[i - 1][j]);\n          if (j > 0)\n            mxa[i][j] = max(mxa[i][j], mxa[i][j - 1]);\n        }\n      }\n      for (int i = 1; i < n; ++i) {\n        for (int j = 1; j < m; ++j) {\n          mx[i][j] = max(mx[i][j - 1], mx[i - 1][j]);\n          mx[i][j] = max(mx[i][j], mxa[i - 1][j - 1] + board[i][j]);\n          mx[i][j] = max(mx[i][j], mxr[i][j - 1] + mxc[i - 1][j]);\n          ans = max(ans, mx[i - 1][j - 1] + board[i][j]);\n        }\n      }\n    }\n    return ans;\n  }\n};\n\n",
    "submit_ts": "1723906386",
    "subm_id": "1359050519"
}