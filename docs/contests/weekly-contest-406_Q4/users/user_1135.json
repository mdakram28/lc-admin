{
    "username": "BreadMuMu",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        max_horiz = [-c for c in horizontalCut]\n        max_vert = [-c for c in verticalCut]\n\n        heapq.heapify(max_horiz)\n        heapq.heapify(max_vert)\n\n        horizontal_pieces = 1\n        vertical_pieces = 1\n\n        total_cost = 0\n        while max_horiz or max_vert:\n            if max_vert and (not max_horiz or max_vert[0] <= max_horiz[0]):\n                cost = -heapq.heappop(max_vert)\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n            else:\n                cost = -heapq.heappop(max_horiz)\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n        return total_cost",
    "submit_ts": "1720925782",
    "subm_id": "1320266031"
}