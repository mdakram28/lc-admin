{
    "username": "Bhavesh_T",
    "submission": "class Solution {\npublic:\n    int lower(vector<vector<int>>&vis,int in,int p){\n        int s=0;\n        int e=vis[in].size()-1;\n        int ans=INT_MAX;\n        while(s<=e){\n            int mid=(s+e)/2;\n            if(vis[in][mid]>p){\n                ans=vis[in][mid];\n                e=mid-1;\n            }else{\n                s=mid+1;\n            }\n        }\n        return ans;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int ans=INT_MAX;\n        vector<vector<int>>vis(32);\n        for(int in=0;in<nums.size();in++){\n        for(int i=31;i>=0;i--){\n            if(((1LL<<i)&nums[in])!=0){\n            }else{\n                vis[i].push_back(in);\n            }\n        }\n        }\n        for(int i=0;i<nums.size();i++){\n           \n            int p=i;\n            int pre=nums[i];\n            ans=min(ans,abs(pre-k));\n            while(pre>k && p!=INT_MAX){\n            int cnt=INT_MAX;\n            for(int in=0;in<32;in++){\n                if(((1LL<<in)&pre)!=0){\n                     cnt=min(cnt,lower(vis,in,p));   \n                    \n                }\n            }\n                p=cnt;\n                if(cnt!=INT_MAX){\n                    pre&=nums[p];\n                }\n                  ans=min(ans,abs(pre-k));\n            }\n           \n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299563.0
}