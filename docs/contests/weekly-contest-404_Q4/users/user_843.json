{
    "username": "deeper-red",
    "submission": "class Solution {\npublic:\n    \n    void dfs1(vector<vector<int>>& g,int u, int parent,vector<int>& in){ \n        in[u] = 0; \n        for (int child : g[u]) { \n\n            if (child == parent) \n                continue; \n            dfs1(g, child, u,in); \n            in[u] = max(in[u], 1 + in[child]); \n        } \n    } \n   \n \n    void dfs2(vector<vector<int>>& g, int u, int parent,vector<int>& in,vector<int>& out){ \n        int m1 = -1, m2 = -1; \n        for (int child : g[u]) { \n            if (child == parent) \n                continue; \n            if (in[child] >= m1) { \n                m2 = m1; \n                m1 = in[child]; \n            } \n\n            else if (in[child] > m2) \n                    m2 = in[child]; \n            } \n\n        for (int child : g[u]) { \n            if (child == parent) \n                continue; \n\n            int longest = m1; \n            if (m1 == in[child]) \n                longest = m2; \n            out[child] = 1 + max(out[u], 1 + longest);  \n            dfs2(g, child, u,in,out); \n        } \n    } \n   \n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>> g1(100005), g2(100005);\n        int n = edges1.size()+1, m = edges2.size()+1;\n        for(auto v:edges1){\n            g1[v[0]].push_back(v[1]);\n            g1[v[1]].push_back(v[0]);\n        }\n        \n        for(auto v:edges2){\n            g2[v[0]].push_back(v[1]);\n            g2[v[1]].push_back(v[0]);\n        }\n        \n        vector<int> in_time(100005,0),out_time(100005,0);\n        dfs1(g1,0,-1,in_time);\n        dfs2(g1,0,-1,in_time,out_time);\n        \n        int l1 = n, l2 = m;\n        int l1max = 0, l2max = 0; \n        for(int i=0;i<n;i++){\n            l1 = min(l1,max(in_time[i],out_time[i]));\n            l1max = max(l1max,max(in_time[i],out_time[i]));\n        }\n        \n        in_time = vector<int>(100005,0);\n        out_time = vector<int>(100005,0);\n        \n        dfs1(g2,0,-1,in_time);\n        dfs2(g2,0,-1,in_time,out_time);\n        \n        for(int i=0;i<m;i++){\n            l2 = min(l2,max(in_time[i],out_time[i]));\n            l2max = max(l2max,max(in_time[i],out_time[i]));\n        }\n        \n        if(n==1) l1 = 0;\n        if(m==1) l2 = 0;\n        //cout << l1 << \" \" << l2 << endl;\n        int ans = l1+1+l2;\n        ans = max(ans,l1max);\n        ans = max(ans,l2max);\n        return ans;\n        \n    }\n};",
    "submit_ts": "1719718854",
    "subm_id": "1304427736"
}