{
    "username": "recursing-mcnultyqvd",
    "submission": "const int N=1e5+10;\nclass Solution {\npublic:\n    int n,m;\n    int t[N],vis[N];\n    int lowbit(int x){\n        return x&(-x);\n    }\n    void add(int x,int k){\n        while(x<=n) t[x]+=k,x+=lowbit(x);\n    }\n    int ask(int x){\n        int res=0;\n        while(x) res+=t[x],x-=lowbit(x);\n        return res;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> res;\n        this->n=nums.size();\n        this->m=queries.size();\n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]){\n                vis[i+1]=1;\n                add(i+1,1);\n            }\n        }\n        for(int i=0;i<m;i++){\n            int a=queries[i][0],b=queries[i][1],c=queries[i][2];\n        \n            if(a==1){\n                if(c-b<2) res.push_back(0);\n                else res.push_back(ask(c)-ask(b+1));\n            }\n            else{\n                if(nums[b]==c) continue;\n                nums[b]=c;\n                if(b==0){\n                    if(vis[2] && nums[1]<=nums[0]) vis[2]=0,add(2,-1);\n                    if(!vis[2] && nums[1]>nums[0] && nums[1]>nums[2]) vis[2]=1,add(2,1);\n                }\n                else if(b==n-1){\n                    if(vis[n-1] && nums[n-2]<=nums[n-1]) vis[n-1]=0,add(n-1,-1);\n                    if(!vis[n-1] && nums[n-2]>nums[n-1] && nums[n-2]>nums[n-3]) vis[n-1]=1,add(n-1,1);\n                }\n                else{\n                    if(vis[b+1] && (nums[b]<=nums[b-1] || nums[b]<=nums[b+1])) vis[b+1]=0,add(b+1,-1);\n                    if(!vis[b+1] && (nums[b]>nums[b-1] && nums[b]>nums[b+1])) vis[b+1]=1,add(b+1,1);\n                    \n                    if(b-1>0){\n                        int t=b-1;\n                        if(vis[t+1] && (nums[t]<=nums[t-1] || nums[t]<=nums[t+1])) vis[t+1]=0,add(t+1,-1);\n                        if(!vis[t+1] && (nums[t]>nums[t-1] && nums[t]>nums[t+1])) vis[t+1]=1,add(t+1,1);\n                    }\n                    if(b+1<n-1){\n                        int t=b+1;\n                        if(vis[t+1] && (nums[t]<=nums[t-1] || nums[t]<=nums[t+1])) vis[t+1]=0,add(t+1,-1);\n                        if(!vis[t+1] && (nums[t]>nums[t-1] && nums[t]>nums[t+1])) vis[t+1]=1,add(t+1,1);\n                    }\n                    \n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718506703.0
}