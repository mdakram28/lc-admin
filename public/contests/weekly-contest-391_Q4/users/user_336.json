{
    "username": "YiliLiu",
    "submission": "class Solution {\npublic:\n    int dist(vector<vector<int>>& points, int ignore) {\n        int minSum = INT_MAX;\n        int maxSum = INT_MIN;\n        int minDiff = INT_MAX;\n        int maxDiff = INT_MIN;\n        \n        for (int i = 0; i < points.size(); i++) {\n            if (i == ignore) continue;\n            auto& p = points[i];\n            minSum = min(minSum, p[0] + p[1]);\n            maxSum = max(maxSum, p[0] + p[1]);\n            minDiff = min(minDiff, p[0] - p[1]);\n            maxDiff = max(maxDiff, p[0] - p[1]);\n        }\n        return max(maxSum - minSum, maxDiff - minDiff);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        // sort(points.begin(), points.end());\n        \n        \n        int minSum = INT_MAX;\n        int maxSum = INT_MIN;\n        int minDiff = INT_MAX;\n        int maxDiff = INT_MIN;\n        \n        for (int i = 0; i < points.size(); i++) {\n            auto& p = points[i];\n            minSum = min(minSum, p[0] + p[1]);\n            maxSum = max(maxSum, p[0] + p[1]);\n            minDiff = min(minDiff, p[0] - p[1]);\n            maxDiff = max(maxDiff, p[0] - p[1]);\n        }\n        \n        int o = INT_MAX;\n        for (int i = 0; i < points.size(); i++) {\n            auto& p = points[i];\n            if (p[0] + p[1] == minSum || \n                p[0] + p[1] == maxSum || \n                p[0] - p[1] == minDiff || \n                p[0] - p[1] == maxDiff) {\n                o = min(o, dist(points, i));\n            }\n        }\n        \n        return o;\n    }\n};"
}