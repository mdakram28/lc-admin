{
    "username": "Khwaja_Abdul_Samad",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int target) {\n    int n = nums.size();\n\n    int left = 0, right = 1;\n    int curr = nums[0];\n    int mp[32] = {0} ;\n    int minDiff = abs(target-nums[0]);\n    \n    for(int i = 0 ; i<32 ; i++){\n        mp[i] += ((nums[0]>>i)&1) == 0;\n    }\n\n    while (right < n) {\n        \n        while (right < n && curr >= target) {\n            minDiff = min(minDiff, abs(curr-target));\n            curr &= nums[right];\n              \n            for(int k = 0 ; k<32 ; k++){\n                mp[k] += ((nums[right]>>k)&1) == 0;\n            }\n            right++;\n        }\n            minDiff = min(minDiff, abs(curr-target));\n\n        while (left < right && curr <= target) {\n            \n            curr = 0 ;\n            \n            for(int k = 0 ; k<32 ; k++){\n                mp[k] -= ((nums[left]>>k)&1) == 0;\n                if(mp[k] == 0)\n                curr |= 1<<k;\n            }\n            left++;\n            minDiff = min(minDiff, abs(curr-target));\n        }\n        \n        if(right == n)\n        break;\n        \n        if(left == right ){\n            for(int i = 0 ; i<32 ; i++){\n            mp[i] += ((nums[right]>>i)&1) == 0;\n        }\n        curr = nums[right++];\n            minDiff = min(minDiff, abs(curr-target));\n        }\n        \n        // cout<<curr<<\" \";\n        \n    }\n\n    return minDiff;\n\n    }\n};",
    "submit_ts": "1717297737",
    "subm_id": "1274753984"
}