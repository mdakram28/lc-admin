{
    "username": "AlphaS",
    "submission": "class Solution {\npublic:\n    long long depe[40][40];\n    \n    int waysToReachStair(int k) {\n        depe[0][0] = 1;\n        for(int i = 1; i < 40; i++){\n            for(int j = 0; j < 40; j++){\n                if(j > i) {\n                    depe[i][j] = 0;\n                    continue;\n                }\n                if(j == 0 || j == i) {\n                    depe[i][j] = 1;\n                    continue;\n                }\n                // cout << i << \" \" << j << \" here\\n\";\n                depe[i][j] = depe[i - 1][j - 1] + depe[i - 1][j];\n            }\n        }\n        \n        int ret = 0;\n        if(k == 0) return 2;\n        \n        k--;\n        long long now = 1;\n        long long idx = 0;\n        while(now - 2 - idx <= k) {\n            // cout << idx << \" \" << now << \" here\\n\";\n            long long tot = now - 1;\n            long long mins = tot - (idx + 1);\n            long long maks = tot;\n            // cout << idx << \" \" << mins << \" \" << maks << \" ini\\n\";\n            \n            if(k >= mins && k <= maks){\n                int nyak1 = idx;\n                int nyak2 = maks - k;\n                \n                if(nyak2 > nyak1){\n                    ret++;\n                } else {\n                    ret = ret + depe[nyak1 + 1][nyak2];\n                }\n                //cout << idx << \" \" << ret << \" here\\n\";\n            }\n                \n            idx++;\n            now = now * 2;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1716088154",
    "subm_id": "1261805593"
}