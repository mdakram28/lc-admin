{
    "username": "skyress",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hc(horizontalCut.begin(), horizontalCut.end());\n        priority_queue<int> vc(verticalCut.begin(), verticalCut.end());\n\n        ll hp = 1, vp = 1, tc = 0;\n\n        while(!hc.empty() || !vc.empty()){\n            ll chc = hc.empty() ? -1 : hc.top();\n            ll cvc = vc.empty() ? -1 : vc.top();\n\n            if(chc >= cvc){\n                tc += (chc * vp);\n                hp++;\n                hc.pop();\n            }\n            else{\n                tc += (cvc * hp);\n                vp++;\n                vc.pop();\n            }\n        }\n        return tc;\n    }\n};",
    "submit_ts": "1720926381",
    "subm_id": "1320284540"
}