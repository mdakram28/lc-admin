{
    "username": "xyz_xyz_xyz_xyz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n   // Sort the horizontal and vertical cuts in descending order\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    int h = 0, v = 0;\n    long long totalCost = 0;\n    int horizontalSegments = 1;\n    int verticalSegments = 1;\n\n    while (h < horizontalCut.size() && v < verticalCut.size()) {\n        if (horizontalCut[h] > verticalCut[v]) {\n            totalCost += (long long) horizontalCut[h] * verticalSegments;\n            horizontalSegments++;\n            h++;\n        } else {\n            totalCost += (long long) verticalCut[v] * horizontalSegments;\n            verticalSegments++;\n            v++;\n        }\n    }\n\n    while (h < horizontalCut.size()) {\n        totalCost += (long long) horizontalCut[h] * verticalSegments;\n        h++;\n    }\n\n    while (v < verticalCut.size()) {\n        totalCost += (long long) verticalCut[v] * horizontalSegments;\n        v++;\n    }\n\n    return totalCost;\n\n    }\n};",
    "submit_ts": "1720925808",
    "subm_id": "1320266830"
}