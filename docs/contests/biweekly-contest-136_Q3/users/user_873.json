{
    "username": "kanakthe2nd",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int numflips = 0;\n        for (int i = 0; i < n/2; i++) {\n            for (int j = 0; j < m/2; j++) {\n                int cnt = (grid[i][j] + grid[i][m-1-j]\n                         + grid[n-1-i][m-1-j] + grid[n-1-i][j]) % 4;\n                numflips += min(cnt, 4 - cnt);\n            }\n        }\n        int numones = 0;\n        bool found = false;\n        if (n % 2 == 1) {\n            int l = 0, r = m-1;\n            while (l < r) {\n                if (grid[n/2][l] != grid[n/2][r]) {\n                    numflips++;\n                    found = true;\n                }\n                numones += 2*grid[n/2][l];\n                l++;\n                r--;\n            }\n        }\n        if (m % 2 == 1) {\n            int l = 0, r = n-1;\n            while (l < r) {\n                if (grid[l][m/2] != grid[r][m/2]) {\n                    numflips++;\n                    found = true;\n                }\n                numones += 2*grid[l][m/2];\n                l++;\n                r--;\n            }\n        }\n        if (numones % 4 == 2) {\n            if (!found) {\n                numflips += 2;\n            }\n        }\n        if (n % 2 == 1 && m % 2 == 1 && grid[n/2][m/2] == 1) {\n            numflips++;\n        }\n        return numflips;\n    }\n};",
    "submit_ts": "1722697985",
    "subm_id": "1343165830"
}