{
    "username": "sshang",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        \n        n = len(target)\n        \n        trie = {}\n        \n        for i, word in enumerate(words):\n            t = trie\n            for c in word:\n                if c not in t:\n                    t[c] = {}\n                t = t[c]\n            if '#' in t:\n                t['#'] = min(t['#'], costs[i])\n            else:\n                t['#'] = costs[i]\n                \n        dp = [0] + [float('inf')] * n\n        \n        for idx in range(n):\n            if dp[idx] == float('inf'):\n                continue\n                \n            t = trie\n            for i in range(idx, n):\n                c = target[i]\n                if c in t:\n                    t = t[c]\n                    if '#' in t:\n                        dp[i+1] = min(dp[i+1], dp[idx] + t['#'])\n                else:\n                    break\n        return dp[-1] if dp[-1] != float('inf') else -1\n            \n#         q = []\n#         t = trie\n#         for i, c in enumerate(target):\n#             if c in t:\n#                 t = t[c]\n#                 if '#' in t:\n#                     heapq.heappush(q, (t['#'], -i))\n#             else:\n#                 break\n                \n#         seen = set()\n#         while q:\n#             cost, idx = heapq.heappop(q)\n#             idx = -idx\n            \n#             if idx == n - 1:\n#                 return cost\n            \n#             if idx in seen:\n#                 continue\n#             else:\n#                 seen.add(idx)\n            \n#             t = trie\n#             for i in range(idx + 1, n):\n#                 c = target[i]\n#                 if c in t:\n#                     t = t[c]\n#                     if '#' in t and i not in seen:\n#                         heapq.heappush(q, (cost + t['#'], -i))\n#                 else:\n#                     break\n        \n#         return -1",
    "submit_ts": "1720322927",
    "subm_id": "1312362842"
}