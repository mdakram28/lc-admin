{
    "username": "shen-jian-666",
    "submission": "class Solution {\n    public int maxOperations(String s) {\n        char[] sArray = s.toCharArray();\n        int n = s.length();\n        List<Integer> a = new ArrayList<>();\n        int i = 0;\n        int j = 0;\n        while (j < n) {\n            while (j < n && sArray[j] == '0') {\n                j++;\n            }\n            i = j;\n            while (j < n && sArray[j] == '1') {\n                j++;\n            }\n            if (j > i) {\n                a.add(j - i);\n            }\n            i = j;\n        }\n        int ans = 0;\n        int max;\n        if (sArray[n - 1] == '0') {\n            max = a.size();\n            for (int k = 0; k < a.size(); k++) {\n                ans = ans + a.get(k) * max;\n                max--;\n            }\n        } else {\n            max = a.size() - 1;\n            for (int k = 0; k < a.size(); k++) {\n                ans = ans + a.get(k) * max;\n                max--;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721531264",
    "subm_id": "548384170"
}