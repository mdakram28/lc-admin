{
    "username": "CarlosAlcaraz",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n \n        sum_arr = [0 for i in range(n)]\n        diff_arr = [0 for i in range(n)]\n\n        for i in range(n):\n            sum_arr[i] = points[i][0] + points[i][1]\n            diff_arr[i] = points[i][0] - points[i][1]\n        \n        sum_arr = [(total, i) for i, total in enumerate(sum_arr)]\n        diff_arr = [(diff, i) for i, diff in enumerate(diff_arr)]\n        \n\n        sum_arr.sort()\n        diff_arr.sort()\n        \n        \n        def get_min_max(i):\n            a = sum_arr[-1][0] if sum_arr[-1][1] != i else sum_arr[-2][0]\n            b = sum_arr[0][0] if sum_arr[0][1] != i else sum_arr[1][0]\n            c1 = a - b\n            \n            c = diff_arr[-1][0] if diff_arr[-1][1] != i else diff_arr[-2][0]\n            d = diff_arr[0][0] if diff_arr[0][1] != i else diff_arr[1][0]\n            c2 = c - d\n            return max(c1, c2)\n        \n        \n        best = math.inf\n        for i in range(n):\n            # i = point to remove\n            min_max = get_min_max(i)\n            best = min(best, min_max)\n        \n        return best\n        \n"
}