{
    "username": "myselfprachipatel",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, vector<int>> diffToX; \n        vector<int>x; \n\n\n        for (int i = 0; i < n / 2;i++) {\n            int l= nums[i];\n            int r= nums[n - i - 1];\n            int diff = abs(l - r);\n            int maxValue = max({l, r, k - l, k - r});\n            \n            diffToX[diff].push_back(maxValue);\n            x.push_back(maxValue);\n        }\n\n        int mini= n / 2;\n        sort(x.begin(),x.end());\n\n        for (auto& [diff, xValues] : diffToX) {\n            int countX = lower_bound(x.begin(),x.end(), diff) -x.begin();\n            countX = countX * 2 + (n / 2 - countX);\n\n            for (int x : xValues) {\n                if (x < diff) {\n                    countX -= 2;\n                } else {\n                    countX -= 1;\n                }\n            }\n\n            mini= min(mini, countX);\n        }\n\n        return mini;\n    }\n};\n",
    "submit_ts": "1721489513",
    "subm_id": "1327455538"
}