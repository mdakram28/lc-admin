{
    "username": "aka_kovid_juyal",
    "submission": "class Solution\n{\nprivate:\n    int func(int n, vector<vector<int>> &requirements, int mod,int maxinv)\n    {\n        unordered_map<int, int> m;\n        \n        for ( auto &x : requirements)\n        {\n            m[x[0] + 1] = x[1];\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(maxinv + 1, 0));\n        dp[0][0] = 1;\n        int i = 1;\n        while (i <= n)\n        {\n            int j = 0;\n            while ( j <= maxinv)\n            {\n                int k = 0;\n                while ( k < i)\n                {\n                    // int prevj = j - k;\n                    if (j-k >= 0)\n                    {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][j-k]) % mod;\n                    }\n                    k++;\n                }\n                j++;\n            }\n\n            if (m.find(i) != m.end())\n            {\n                int aim = m[i];\n                int j = 0;\n                while ( j <= maxinv)\n                {\n                    if (j != aim)\n                    {\n                        dp[i][j] = 0;\n                    }\n                    j++;\n                }\n            }\n            i++;\n        }\n\n        long long ans = 0;\n        for (long long count : dp[n])\n        {\n            ans = (ans + count) % mod;\n        }\n\n        return ans;\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>> &requirements)\n    {\n        int maxinv = 400;\n        int mod = 1e9 + 7;\n        return func(n, requirements, mod,maxinv);\n    }\n};",
    "submit_ts": 1719071371.0
}