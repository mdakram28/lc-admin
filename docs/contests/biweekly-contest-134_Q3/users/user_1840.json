{
    "username": "Anoshor",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int count = 0;\n        int size = colors.size();\n\n        bool validGroup = true;\n        if (k > size) return 0;\n        for (int i = 1; i < k && validGroup; i++) {\n            if (colors[i] == colors[i - 1]) {\n                validGroup = false;\n            }\n        }\n        count += validGroup ? 1 : 0;\n\n        for (int start = 1; start < size; start++) {\n            int outgoingIdx = start - 1;\n            int lastIdxPrevWindow = (start + k - 2) % size;\n            int incomingIdx = (start + k - 1) % size;\n\n            if (!validGroup) {\n                validGroup = true;\n                for (int check = 0; check < k - 1 && validGroup; check++) {\n                    if (colors[(start + check) % size] == colors[(start + check + 1) % size]) {\n                        validGroup = false;\n                    }\n                }\n            }\n            else {\n                if (colors[outgoingIdx] == colors[outgoingIdx + 1] || colors[lastIdxPrevWindow] == colors[incomingIdx]) {\n                    validGroup = false;\n                }    \n            }\n\n            count += validGroup ? 1 : 0;\n        }\n\n        return count;\n    }\n};\n",
    "submit_ts": "1720278653",
    "subm_id": "1311718499"
}