{
    "username": "krabsxd",
    "submission": "struct Rec {\n\tint flipToOneCnt = 0;\n\tint flipToZeroCnt = 0;\n\n\tfriend bool operator<(const Rec& lhs, const Rec& rhs)\n\t{\n\t\treturn lhs.flipToZeroCnt < rhs.flipToZeroCnt;\n\t}\n\n\tfriend bool operator<=(const Rec& lhs, const Rec& rhs) { return !(rhs < lhs); }\n\n\tfriend bool operator>(const Rec& lhs, const Rec& rhs) { return rhs < lhs; }\n\n\tfriend bool operator>=(const Rec& lhs, const Rec& rhs) { return !(lhs < rhs); }\n};\nclass Solution {\npublic:\n\tint minFlips(vector<vector<int>>& grid)\n\t{\n\t\tconst int rowCnt = grid.size();\n\t\tconst int colCnt = grid[0].size();\n\t\tint ret = 0;\n\t\tvector<vector<bool>> visited(rowCnt, vector<bool>(colCnt, false));\n\n\t\tvector<bool> originZeroCntToExist(3, false);\n\n\t\tint nowOneCnt = 0;\n\t\tfor (int r = 0; r <= rowCnt / 2; ++r) {\n\t\t\tfor (int c = 0; c <= colCnt / 2; ++c) {\n\t\t\t\tif (visited[r][c])\n\t\t\t\t\tcontinue;\n\t\t\t\tint flipToOneCnt = 0;\n\t\t\t\tint flipToZeroCnt = 0;\n\t\t\t\tset<pair<int, int>> indices;\n\t\t\t\tindices.emplace(r, c);\n\t\t\t\tindices.emplace(rowCnt - 1 - r, c);\n\t\t\t\tindices.emplace(r, colCnt - 1 - c);\n\t\t\t\tindices.emplace(rowCnt - 1 - r, colCnt - 1 - c);\n\t\t\t\tfor (const auto index : indices) {\n\t\t\t\t\tif (grid[index.first][index.second] == 0) {\n\t\t\t\t\t\t++flipToOneCnt;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t++flipToZeroCnt;\n\t\t\t\t\t}\n\t\t\t\t\tvisited[index.first][index.second] = true;\n\t\t\t\t}\n\t\t\t\tif (flipToOneCnt <= flipToZeroCnt) {\n\t\t\t\t\tnowOneCnt += indices.size();\n\t\t\t\t\tret += flipToOneCnt;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret += flipToZeroCnt;\n\t\t\t\t}\n\t\t\t\tif (indices.size() == 2) {\n\t\t\t\t\toriginZeroCntToExist[flipToOneCnt] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (nowOneCnt % 4 == 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tif (nowOneCnt % 4 >= 2) {\n\t\t\t// pick 2 flipToOne to flipToZero\n\t\t\tnowOneCnt -= 2;\n\t\t\t\n\t\t\tif (!originZeroCntToExist[1]) {\n\t\t\t\tret += 2;\n\t\t\t}\n\t\t}\n\t\tif (nowOneCnt % 4 == 1) {\n\t\t\tnowOneCnt -= 1;\n\t\t\tret++;\n\t\t}\n\t\treturn ret;\n\t}\n};",
    "submit_ts": "1722698298",
    "subm_id": "552270251"
}