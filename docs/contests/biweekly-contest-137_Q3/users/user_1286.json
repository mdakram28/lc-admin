{
    "username": "yhwputin",
    "submission": "class Solution {\npublic:\n     long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(),n = board[0].size();\n        vector<vector<int>> lj(m,vector<int>(n,0));\n        for(int i = 0;i < m;i++){\n            for(int j = 0;j < n;j++){\n                lj[i][j] = j;\n            }\n            sort(lj[i].begin(),lj[i].end(),[&](int a,int b){\n                return board[i][a] < board[i][b];\n            });\n        }\n\n        long long ans = INT64_MIN;\n        for(int i = 0;i < m;i++){\n            for(int j = i + 1;j < m;j++){\n                for(int k = j + 1;k < m;k++){\n                    for(int i1 = 0;i1 < 3;i1++){\n                        for(int j1 = 0;j1 < 3;j1++){\n                            for(int k1 = 0;k1 < 3;k1++){\n                                if(lj[i][n - i1 - 1] != lj[j][n - j1 - 1] && lj[i][n - i1 - 1] != lj[k][n - k1 - 1] && lj[j][n - j1 - 1] != lj[k][n - k1 - 1]){\n                                    ans = max(ans,(long long)board[i][lj[i][n - i1 - 1]] + board[j][lj[j][n - j1 - 1]] + board[k][lj[k][n - k1 - 1]]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": "1723910007",
    "subm_id": "556339062"
}