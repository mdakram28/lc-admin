{
    "username": "Hughstudy",
    "submission": "class Solution {\n    public long maximumScore(int[][] grid) {\n        int n = grid.length;\n        long res = 0;\n        long[][] last = new long[n + 1][n + 1];\n        for (int i = 1; i < n; ++i) {\n            long[] rowMax = new long[n + 1];\n            for (int j = 0; j <= n; ++j) {\n                for (int k = j; k <= n; ++k) {\n                    rowMax[j] = Math.max(rowMax[j], last[j][k]);\n                }\n            }\n\n            long[] prefixSum = new long[n + 1];\n            for (int j = 0; j < n; ++j) {\n                prefixSum[j + 1] = prefixSum[j] + grid[j][i];\n            }\n\n            long[][] nextLast = new long[n + 1][n + 1];\n            for (int j = 0; j <= n; ++j) {\n                for (int k = j; k <= n; ++k) {\n                    nextLast[j][k] = rowMax[k] + prefixSum[k] - prefixSum[j];\n                    res = Math.max(nextLast[j][k], res);\n                }\n            }\n\n            long[] rowTmp = new long[n + 1];\n            for (int j = 0; j <= n; ++j) {\n                rowTmp[j] = last[j][j];\n                long bestTmp = Math.max(rowMax[j], rowTmp[j]);\n                for (int k = 0; k < j; ++k) {\n                    rowTmp[k] = Math.max(rowTmp[k] + grid[j - 1][i - 1], last[k][j]);\n                    bestTmp = Math.max(bestTmp, rowTmp[k]);\n                }\n                nextLast[j][j] = bestTmp;\n                res = Math.max(res, bestTmp);\n            }\n            last = nextLast;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721489935",
    "subm_id": "548320865"
}