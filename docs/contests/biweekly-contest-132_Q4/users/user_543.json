{
    "username": "chaitanyameshram07",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n       int size = nums.length;\n        int[][] lengths = new int[size][k + 1];\n        for (int i = 0; i < size; i++) {\n            Arrays.fill(lengths[i], 1);\n        }\n        int maxLength = 1;\n        int[] maxLengths = new int[k + 1];\n        Arrays.fill(maxLengths, -1);\n        Map<Integer, Integer>[] numToLengthsMap = new HashMap[k + 1];\n        for (int i = 0; i <= k; i++) {\n            numToLengthsMap[i] = new HashMap<>();\n        }\n\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    lengths[i][j] = Math.max(lengths[i][j], 1 + maxLengths[l]);\n                }\n\n                if (numToLengthsMap[j].containsKey(nums[i])) {\n                    lengths[i][j] = Math.max(lengths[i][j], 1 + numToLengthsMap[j].get(nums[i]));\n                }\n\n                maxLength = Math.max(maxLength, lengths[i][j]);\n            }\n\n            for (int j = 0; j <= k; j++) {\n                maxLengths[j] = Math.max(maxLengths[j], lengths[i][j]);\n                numToLengthsMap[j].put(nums[i], Math.max(numToLengthsMap[j].getOrDefault(nums[i], 0), lengths[i][j]));\n            }\n        }\n\n        return maxLength;\n    }\n}",
    "submit_ts": "1717862339",
    "subm_id": "1281820104"
}