{
    "username": "KeshavChaudhary",
    "submission": "use std::cmp::min;\n\nimpl Solution {\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let n = grid.len();\n        let m = grid[0].len();\n        let mut ans = 0;\n\n        if n % 2 == 1 && m % 2 == 1 {\n            if grid[n / 2][m / 2] == 1 {\n                ans += 1;\n            }\n        }\n\n        let mut shift = vec![0; 3];\n        if n % 2 == 1 {\n            let mut a = 0;\n            let mut b = m - 1;\n            while a < b {\n                let sm = grid[n / 2][a] + grid[n / 2][b];\n                shift[sm as usize] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if m % 2 == 1 {\n            let mut a = 0;\n            let mut b = n - 1;\n            while a < b {\n                let sm = grid[a][m / 2] + grid[b][m / 2];\n                shift[sm as usize] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if shift[2] % 2 == 1 {\n            if shift[1] > 0 {\n                ans += shift[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += shift[1];\n        }\n\n        for i in 0..n / 2 {\n            for j in 0..m / 2 {\n                let a = grid[i][j];\n                let b = grid[n - 1 - i][j];\n                let c = grid[i][m - 1 - j];\n                let d = grid[n - 1 - i][m - 1 - j];\n\n                let sm = a + b + c + d;\n\n                if sm != 0 && sm != 4 {\n                    ans += min(sm, 4 - sm);\n                }\n            }\n        }\n\n        ans\n    }\n}\n",
    "submit_ts": "1722700404",
    "subm_id": "1343240898"
}