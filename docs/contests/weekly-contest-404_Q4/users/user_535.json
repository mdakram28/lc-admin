{
    "username": "gauravkr2004",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> adj1;\n    vector<vector<int>> adj2;\n    vector<int> dis;\n    void dfs1(int node,int par){\n        for(auto c:adj1[node]){\n            if(c==par) continue;\n            dis[c]=dis[node]+1;\n            dfs1(c,node);\n        }\n    }\n    void dfs2(int node,int par){\n        for(auto c:adj2[node]){\n            if(c==par) continue;\n            dis[c]=dis[node]+1;\n            dfs2(c,node);\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        adj1.resize(n);\n        adj2.resize(m);\n        dis.resize(n,0);\n        for(auto i:edges1){\n            adj1[i[0]].push_back(i[1]);\n            adj1[i[1]].push_back(i[0]);\n        }\n         for(auto i:edges2){\n            adj2[i[0]].push_back(i[1]);\n            adj2[i[1]].push_back(i[0]);\n        }\n        dfs1(0,0);\n        int mxd=0;\n        int ind=-1;\n        for(int i=0;i<n;i++){\n          if(dis[i]>=mxd){\n            mxd=dis[i];\n            ind=i;\n          }\n        }\n        dis.assign(n,0);\n        dfs1(ind,ind);\n        mxd=0;\n        for(int i=0;i<n;i++) mxd=max(mxd,dis[i]);\n        dis.assign(m,0);\n        dfs2(0,0);\n         int mxd2=0;\n        int ind2=-1;\n        for(int i=0;i<m;i++){\n          if(dis[i]>=mxd2){\n            mxd2=dis[i];\n            ind2=i;\n          }\n        }\n        dis.assign(m,0);\n        dfs2(ind2,ind2);\n        mxd2=0;\n        for(int i=0;i<m;i++) mxd2=max(mxd2,dis[i]);\n        int val1=mxd/2;\n        int val2=mxd2/2;\n        if(mxd%2) val1++;\n        if(mxd2%2) val2++;\n        int val=max(mxd,mxd2);\n        return max((val1+val2+1),val);\n    }\n};",
    "submit_ts": "1719719346",
    "subm_id": "1304439688"
}