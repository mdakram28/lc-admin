{
    "username": "Rupa",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int cur=s.size();\n        int i=s.size()-1;\n        int z=0,o=0;\n        vector<int> pre(s.size());\n        vector<long long> preSum(s.size());\n        vector<long long> ans;\n\n        while(i>=0) {\n            z+=(s[i]=='0');\n            o+=(s[i]=='1');\n            while(z>k && o>k) {\n                cur--;\n                z-=(s[cur]=='0');\n                o-=(s[cur]=='1');\n            }\n            pre[i]=cur;\n            i--;\n        }\n        \n        for(auto i: pre) cout<<i<<' ';cout<<endl;\n        \n        preSum[0]=pre[0];\n        for(int i=1;i<pre.size();i++) {\n            preSum[i]=pre[i]+preSum[i-1];\n        }\n        \n        \n        for(const auto q: queries) {\n            int l=q[0];\n            int r=q[1]+1;\n            \n            int where = (lower_bound(pre.begin()+l, pre.begin()+r, r+1)-pre.begin());\n            cout<<where<<endl;\n            // where=min(where, r);\n            assert(where<=r);\n            \n            // l , l+1, ... r => l (0, 1, r-l)\n            long long total = ((r-where)*1LL*(r)) - ((r-l-1)*1LL*(r-l)>>1) - (l*1LL*(r-l));\n            if(l>0) total-=preSum[l-1];\n            if(where>0) total+=preSum[where-1];\n            ans.push_back(total);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723950689",
    "subm_id": "1359752486"
}