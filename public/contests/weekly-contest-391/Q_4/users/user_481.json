{
    "username": "scyyyyyyyyy",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        a = c = 10 ** 18\n        b = d = -10 ** 18\n        for x,y in points:\n            a = min(x + y, a)\n            b = max(x + y, b)\n            c = min(x - y, c)\n            d = max(x - y, d)\n        ans = -1\n        choose = -1\n        for i, (x,y) in enumerate(points):\n            dis = max(x + y - a, b - x - y, x - y - c, d - x + y)\n         #   print(dis,1111)\n            if dis > ans: \n                ans = dis\n                choose = i\n                print(ans,dis)\n        i = 0\n     #   print(choose,dis)\n        for x,y in points:\n            if abs(x - points[choose][0]) + abs(y - points[choose][1]) == ans:\n                print('dinf')\n                another = i\n                break\n            i += 1\n        def f(choose):\n            a = c = 10 ** 18\n            b = d = -10 ** 18\n            point=points.copy()\n            point.pop(choose)    \n            for x,y in point:\n                a = min(x + y, a)\n                b = max(x + y, b)\n                c = min(x - y, c)\n                d = max(x - y, d)\n            ans = -1\n            choose = -1\n            for i, (x,y) in enumerate(point):\n                dis = max(x + y - a, b - x - y, x - y - c, d - x + y)\n                if dis > ans: \n                    ans = dis\n                    choose = i\n            return ans\n        #print(choose,another)\n        return min(f(choose),f(another))"
}