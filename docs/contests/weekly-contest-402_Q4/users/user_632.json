{
    "username": "theSavyasachi",
    "submission": "class Solution {\n    vector<int> s,lz;\npublic:\n    bool isPeak(int idx, vector<int>& nums)\n    {\n        int n = nums.size();\n        if(idx>0 && idx<n-1)\n            return nums[idx]>nums[idx-1] && nums[idx]>nums[idx+1];\n        return false;\n    }\n    \n    void upd(int low, int high, int qlow, int qhigh, int val, int pos) {\n        if(qlow > high || qhigh < low)\n                return;\n        if(lz[pos]) {\n            s[pos] += lz[pos];\n            if(low != high) {\n                lz[2*pos+1] += lz[pos];\n                lz[2*pos+2] += lz[pos];\n            }\n            lz[pos]=0;\n        }\n        \n        if(qlow <= low && qhigh >= high) {\n            s[pos] += val;\n            if(low != high) {\n                lz[2*pos+1] += val;\n                lz[2*pos+2] += val;\n            }\n            return;\n        }\n        int mid = low + (high-low)/2;\n        upd(low, mid, qlow, qhigh, val, 2*pos+1);\n        upd(mid+1, high, qlow, qhigh, val, 2*pos+2);\n        s[pos] = s[2*pos+1]+s[2*pos+2];\n    }\n    \n    int get(int low, int high, int qlow, int qhigh, int pos)\n    {\n        if(qlow > high || qhigh < low)\n                return 0;\n        if(lz[pos]) {\n            s[pos] += lz[pos];\n            if(low != high) {\n                lz[2*pos+1] += lz[pos];\n                lz[2*pos+2] += lz[pos];\n            }\n            lz[pos]=0;\n        }\n        \n        if(qlow <= low && qhigh >= high) {\n            return s[pos];\n        }\n        int mid = low + (high-low)/2;\n        return get(low, mid, qlow, qhigh, 2*pos+1) + get(mid+1, high, qlow, qhigh, 2*pos+2);\n    }\n        \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size(), q = queries.size(),i, sz=4*n;\n        s.resize(sz,0);\n        lz.resize(sz,0);\n        vector<bool> isp(n,0);\n        for(i=1;i<n-1;i++) {\n            isp[i]= isPeak(i,nums);\n            if(isp[i])\n                upd(0, n-1, i, i, 1, 0);\n        }\n        vector<int> ans;\n        for(i=0;i<q;i++) {\n            int a = queries[i][1];\n            int b = queries[i][2];\n            if(queries[i][0]==1)\n                ans.push_back(get(0, n-1, a+1, b-1, 0));\n            else {\n                nums[a]=b;\n                int diff = isp[a];\n                isp[a] = isPeak(a, nums);\n                diff = isp[a]-diff;\n                if(diff)\n                    upd(0, n-1, a, a, diff, 0);\n                if(a>0) {\n                    int diff = isp[a-1];\n                    isp[a-1] = isPeak(a-1,nums);\n                    diff = isp[a-1]-diff;\n                    if(diff)\n                        upd(0, n-1, a-1, a-1, diff, 0);\n                }\n                if(a<n-1) {\n                    int diff = isp[a+1];\n                    isp[a+1] = isPeak(a+1, nums);\n                    diff = isp[a+1]-diff;\n                    if(diff)\n                        upd(0, n-1, a+1, a+1, diff, 0);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507801",
    "subm_id": "1289662876"
}