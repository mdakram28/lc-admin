{
    "username": "noobiiitian",
    "submission": "\nauto init = []()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 'c';\n}();\nclass Solution {\npublic:\n\nint dp[5000][51];\nint dp2[5000][51];\n// map<int,vector<int>>mp;\n// int dfs(int ind, int k, vector<int>&nums);\n\n\nint dfs2(int ind, int k, vector<int>&nums){\n    if(ind>=nums.size()) return 0;\n    if(k<0) return 0;\n    if(dp2[ind][k]!=-1) return dp2[ind][k];\n    int ans = 0;\n    ans = max(ans, dfs(ind, k, nums));\n    ans = max(ans, dfs2(ind+1, k, nums));\n    return dp2[ind][k] = ans;\n}\nvector<int>agla;\nint dfs(int ind, int k, vector<int>&nums){\n    if(ind>=nums.size()) return 0;\n    if(k<0) return 0;\n    if(dp[ind][k]!=-1) return dp[ind][k];\n    int ans = 0;\n    // int ct = 0;\n    ans = max(ans, 1+ dfs2(ind+1, k-1, nums));\n    ans = max(ans, 1+dfs(agla[ind], k, nums));\n    return dp[ind][k] =  ans;\n}\n    int maximumLength(vector<int>& nums, int k) {\n        // mp.clear();\n        map<int,int>mp;\n        int ans = 0, n = nums.size();\n       agla.assign(n, n);\n        for(int i = 0 ; i < n; i++){\n            if(mp.find(nums[i])!=mp.end()){\n                agla[mp[nums[i]]] = i;\n            }\n            mp[nums[i]] = i;\n        }\n        memset(dp, -1, sizeof(dp));\n        memset(dp2, -1, sizeof(dp2));\n        for(int i = 0 ; i < nums.size(); i++){\n            ans = max(ans, dfs(i, k, nums));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861691.0
}