{
    "username": "rentyydrip",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n\n        res = [0 for i in range(len(queries))]\n        \n        points = SortedList([i for i in range(n)])\n        \n        res = []\n        \n        # print(points)\n        \n        for q in queries:\n            \n            values = list(points.irange(q[0], q[1]))\n            if len(values) > 1:\n                for v in values:\n                    points.remove(v)\n                points.add(q[0])\n                points.add(q[1])\n            # points.remove(q[0])\n            # points.remove(q[1])\n            \n            # skip adding a point if its in between two points\n                \n            # points.add(q[0])\n            # points.add(q[1])\n            \n            # res.append(points[0] + (len(points) - 1) + (n - 1 - points[-1]))\n            res.append(len(points) - 1)\n            \n            # print(points)\n            \n            # points.add(q[0])\n            # points.add(q[1])\n        \n        # print(\"---\")\n        \n        return res\n        ",
    "submit_ts": "1722742816",
    "subm_id": "1343777814"
}