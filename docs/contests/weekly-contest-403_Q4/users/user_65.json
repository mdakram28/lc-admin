{
    "username": "SR3mix",
    "submission": "class Solution {\npublic:\n    int minArea(vector<vector<int>>& grid, int sr, int er, int sc, int ec) {\n        if (sr > er || sc > ec) return 1;\n        int m = grid.size(), n = grid[0].size();\n        int mir = INT_MAX, mar = -1, mic = INT_MAX, mac = -1;\n        for (int i = sr; i <= er; i++) {\n            for (int j = sc; j <= ec; j++) {\n                if (grid[i][j]) {\n                    mir = min(mir, i);\n                    mar = max(mar, i);\n                    mic = min(mic, j);\n                    mac = max(mac, j);\n                }\n            }\n        }\n        if (mar == -1) return 1;\n        int dr = mar - mir + 1;\n        int dc = mac - mic + 1;\n        return max(1,dr * dc);\n    }\n    int compute(vector<vector<int>>&g) {\n        int m = g.size(), n = g[0].size();\n        int ans = INT_MAX;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                int get = minArea(g, 0, i, 0, n-1);\n                get += minArea(g, i+1, m-1, 0, j);\n                get += minArea(g, i+1, m-1, j+1, n-1);\n                ans = min(ans, get);\n                get = minArea(g, 0, i, 0, j);\n                get += minArea(g, 0, i, j+1, n-1);\n                get += minArea(g, i+1, m-1, 0, n-1);\n                ans = min(ans, get);\n            }\n        }\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = i+1; j < m; j++) {\n                int get = minArea(g, 0, i, 0, n-1);\n                get += minArea(g, i+1, j, 0, n-1);\n                get += minArea(g, j+1, m-1, 0, n-1);\n                ans = min(ans, get);\n            }\n        }\n        return ans;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        //int ans = INT_MAX;\n        int v1 = compute(grid);\n        vector<vector<int>>tg(n, vector<int>(m));\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                tg[j][i] = grid[i][j];\n            }\n        }\n        int v2 = compute(tg);\n        int ans = min(v1, v2);\n        return ans;\n    }\n};",
    "submit_ts": "1719111472",
    "subm_id": "1297274307"
}