{
    "username": "L_08",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>>&ret,int i,int x,int y,int val) {\n        queue<int>q;\n        vector<int>vis(val+4,0);\n        q.push(i);\n        vis[i]=1;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(auto v:ret[u]) if(!vis[v]){q.push(v);vis[v]=1;}\n        }\n        return vis[x]||vis[y];\n    }\n    \n    void solve(int x,int it,int y,int j,int k,vector<vector<int>>&ret) {\n        if(x<=it){\n            ret[j].push_back(k);\n            ret[k].push_back(j);\n        }\n        if(y-x<=it) {\n            ret[j+2].push_back(k);\n            ret[k].push_back(j+2);\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        vector<pair<pair<int,int>,int>>v(n);\n        vector<vector<int>>ret(n+4);\n        for(int i=0;i<n;i++) v[i]={{circles[i][0],circles[i][1]},circles[i][2]};\n        for(int i=0;i<n;i++){\n            auto[it3,it1]=v[i];\n            int x1=it3.first;\n            int y1=it3.second;\n            solve(x1,it1,X,n,i,ret);\n            solve(y1,it1,Y,n+1,i,ret);\n            for(int j=i+1;j<n;j++) {\n                auto[it4,it2]=v[j];\n                int x2=it4.first,y2=it4.second;\n                if(it1+it2>=sqrt(pow(x1-x2,2)+pow(y1-y2,2))){\n                    ret[i].push_back(j);\n                    ret[j].push_back(i);\n                }\n            }}\n        bool r1=bfs(ret,n,n+1,n+2,n+4),r2=bfs(ret,n+3,n+2,n+1,n+4); \n        return !(r1||r2);\n    }\n        \n};",
    "submit_ts": "1722138128",
    "subm_id": "1335782847"
}