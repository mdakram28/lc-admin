{
    "username": "renuka_29",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int MOD = 1000000007;\n        int n = nums.length;\n        int maxVal = 50;\n        \n        int[][] dp = new int[n][maxVal + 1];\n        \n        // Initialize the first element: arr1[0] + arr2[0] = nums[0]\n        for (int j = 0; j <= nums[0]; j++) {\n            dp[0][j] = 1;\n        }\n        \n        // Process each index from 1 to n-1\n        for (int i = 1; i < n; i++) {\n            int[][] newDp = new int[n][maxVal + 1];\n            for (int j = 0; j <= nums[i]; j++) {\n                int k = nums[i] - j;\n                for (int m = 0; m <= j; m++) {\n                    if (k <= nums[i - 1] - m) {\n                        newDp[i][j] = (newDp[i][j] + dp[i - 1][m]) % MOD;\n                    }\n                }\n            }\n            dp = newDp;\n        }\n        \n        // Sum all possibilities for the last element\n        int result = 0;\n        for (int j = 0; j <= maxVal; j++) {\n            result = (result + dp[n - 1][j]) % MOD;\n        }\n        \n        return result;\n    }\n}\n",
    "submit_ts": "1723344108",
    "subm_id": "1351526665"
}