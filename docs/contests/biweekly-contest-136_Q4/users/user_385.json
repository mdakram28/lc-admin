{
    "username": "manipradeep693",
    "submission": "class Solution {\npublic:\nint dfs1(int v,int p,vector<int>& dis,vector<int>& price,vector<int>& res,vector<int> adj[]){\n            dis[v]=(v%2?1:2);\n            int x=0;\n            for(auto c : adj[v]){\n                if(c==p) continue;\n                auto k=dfs1(c,v,dis,price,res,adj);\n                x=max(x,k);\n            }\n            dis[v]+=x;\n            return dis[v];\n}\n\nvoid dfs(int v,int p,int pans,vector<int>& dis,vector<int>& price,vector<int>& res,vector<int> adj[]){\n            vector<int> a,ver;\n\n            for(auto c : adj[v]){\n                if(c==p) continue;\n                a.push_back(dis[c]);\n                ver.push_back(c);\n            }\n            if(a.empty()){\n                res[v]=pans;\n                return;\n            }\n            if(a.size()==1){\n                res[v]=max(pans,a[0]);\n                int newpans=price[v]+pans;\n                // cout<<\"vertex: \"<<endl;\n                // cout<<v<<\" \"<<res[v]<<endl;\n                // cout<<\"to child: \"<<endl;\n                // cout<<v<<\" \"<<a[0]<<\" \"<<newpans<<endl;\n                dfs(ver[0],v,newpans,dis,price,res,adj);\n                return;\n            }\n            int siz=a.size();\n            vector<int> pre(siz,0),suf(siz,0);\n            for(int i=1;i<siz;i++){\n                pre[i]=max(pre[i-1],a[i-1]);\n            }\n            for(int i=siz-2;i>=0;i--) suf[i]=max(suf[i+1],a[i+1]);\n            res[v]=max(max(suf[0],pre[siz-1]),pans);\n            // cout<<\"vertex: \"<<endl;\n            // cout<<v<<\" \"<<res[v]<<endl;\n            // cout<<\"a: \"<<endl;\n            // for(auto x : a) cout<<x<<\" \";\n            // cout<<endl;\n            int ind=0;\n            for(auto c : adj[v]){\n                if(c==p) continue;\n                int newpans=price[v]+max(pans,max(pre[ind],suf[ind]));\n                // cout<<\"to child: \"<<endl;\n                // cout<<v<<\" \"<<c<<\" \"<<newpans<<endl;\n                dfs(c,v,newpans,dis,price,res,adj);\n                ind++;\n            }\n}\n\nvector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        vector<int> dis(n,0),price(n,0),res(n,0),adj[n];\n        for(int i=0;i<n;i++){\n            if(i%2) price[i]=1;\n            else price[i]=2;\n        }\n        for(auto e : edges){\n            int u=e[0],v=e[1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        \n        auto pr1=dfs1(0,-1,dis,price,res,adj);\n        // cout<<\"dis: \";\n        // for(auto x : dis) cout<<x<<\" \";\n        // cout<<endl;\n        dfs(0,-1,0,dis,price,res,adj);\n        return res;\n}\n};",
    "submit_ts": "1722699698",
    "subm_id": "1343219602"
}