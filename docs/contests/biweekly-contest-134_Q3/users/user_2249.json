{
    "username": "RohitAgarwal1",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int n = c.size();\n        vector<bool> alt(n);\n        for (int i = 0; i < n; ++i) {\n            alt[i] = (c[i] != c[(i + 1) % n]);\n        }\n        int count = 0;\n        int curr = 0;\n        for (int i = 0; i < k - 1; ++i) {\n            if (alt[i]) {\n                ++curr;\n            }\n        }\n        if (curr == k - 1) {\n            ++count;\n        }\n        for (int i = 1; i < n; ++i) {\n            if (alt[i - 1]) {\n                --curr;\n            }\n            if (alt[(i + k - 2) % n]) {\n                ++curr;\n            }\n            if (curr == k - 1) {\n                ++count;\n            }\n        }\n        return count;\n        }\n};",
    "submit_ts": "1720278675",
    "subm_id": "1311719419"
}