{
    "username": "bttfa",
    "submission": "\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, vector<int>> diffToValues;\n        vector<int> allValues;\n\n       \n        for (int i = 0; i < n / 2; ++i) {\n            int left = nums[i];\n            int right = nums[n - i - 1];\n            int diff = abs(left - right);\n            int maxValue = max({left, right, k - left, k - right});\n\n            diffToValues[diff].push_back(maxValue);\n            allValues.push_back(maxValue);\n        }\n\n        \n        int minChangesRequired = n;\n\n       \n        sort(allValues.begin(), allValues.end());\n\n        for (const auto& entry : diffToValues) {\n            int diff = entry.first;\n            int countLessThanDiff = lower_bound(allValues.begin(), allValues.end(), diff) - allValues.begin();\n            int changesRequired = countLessThanDiff * 2 + (n / 2 - countLessThanDiff);\n\n            for (int value : entry.second) {\n                if (value < diff) {\n                    changesRequired -= 2;\n                } else {\n                    changesRequired -= 1;\n                }\n            }\n\n            minChangesRequired = min(minChangesRequired, changesRequired);\n        }\n\n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721489807",
    "subm_id": "1327464396"
}