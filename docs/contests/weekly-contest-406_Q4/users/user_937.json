{
    "username": "chun-ruan-ovo",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        long long htotal = accumulate(horizontalCut.begin(), horizontalCut.end(), 0);\n        long long vtotal = accumulate(verticalCut.begin(), verticalCut.end(), 0);\n        int i=0,j=0;\n        while(i<m-1 && j<n-1){\n            if(horizontalCut[i] > verticalCut[j]){\n                htotal -= horizontalCut[i];\n                ans += horizontalCut[i++]*(j+1);\n            }else if(verticalCut[j] > horizontalCut[i]){\n                vtotal -= verticalCut[j];\n                ans += verticalCut[j++]*(i+1);\n            }else{\n                if(htotal>vtotal){\n                    htotal -= horizontalCut[i];\n                    ans += horizontalCut[i++]*(j+1);\n                }else{\n                    vtotal -= verticalCut[j];\n                    ans += verticalCut[j++]*(i+1);\n                }\n            }\n        }\n        while(i<m-1){\n            ans += horizontalCut[i++]*(j+1);\n        }\n        while(j<n-1){\n            ans += verticalCut[j++]*(i+1);\n        }\n        return ans;       \n    }\n};",
    "submit_ts": "1720925948",
    "subm_id": "546443042"
}