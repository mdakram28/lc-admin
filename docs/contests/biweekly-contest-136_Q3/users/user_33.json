{
    "username": "fsj-o",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < n/2; i++) {\n            for (int j = 0; j < m/2; j++) {\n                int a = grid[i][j];\n                int b = grid[i][m-1-j];\n                int c = grid[n-1-i][j];\n                int d = grid[n-1-i][m-1-j];\n                int sum = a+b+c+d;\n                ans += std::min(sum, 4-sum);\n            }\n        }\n        \n        int cnt01 = 0, cnt00 = 0, cnt11 = 0;\n        if (n%2 == 1) {\n            for (int i = 0; i < m/2; i++) {\n                if (grid[n/2][i] != grid[n/2][m-1-i]) {\n                    cnt01++;\n                } else if (grid[n/2][i] == 0) {\n                    cnt00++;\n                } else {\n                    cnt11++;\n                }\n            }\n        }\n        if (m%2 == 1) {\n            for (int i = 0; i < n/2; i++) {\n                if (grid[i][m/2] != grid[n-1-i][m/2]) {\n                    cnt01++;\n                } else if (grid[i][m/2] == 0) {\n                    cnt00++;\n                } else {\n                    cnt11++;\n                }\n            }\n        }\n        if (cnt01 == 0 && cnt11%2 == 1) {\n            ans += 2;\n        } else {\n            ans += cnt01;\n        }\n        \n        if (n%2 == 1 && m%2 == 1 && grid[n/2][m/2] == 1) ans++;\n       \n        return ans;\n    }\n};",
    "submit_ts": "1722697390",
    "subm_id": "552265880"
}