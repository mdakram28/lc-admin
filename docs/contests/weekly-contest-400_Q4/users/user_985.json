{
    "username": "workingnaresh",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        \n        \n        bit_count = len(bin(max(nums))) - 2\n        \n        bits_z = [0 for _ in range(bit_count)]\n        bits_o = [0 for _ in range(bit_count)]\n\n        i = 0\n        j = 0\n        \n        def add_bits(cur):\n            bit = bin(cur)[2:]\n            bit = bit[::-1]\n            actual = len(bit)\n            \n            bit = bit + \"0\"*(bit_count - len(bit))\n\n            for i in range(len(bit)):\n                v = bit[i]\n                if v==\"0\":\n                    bits_z[-i-1] += 1\n                elif i < actual:\n                    bits_o[-i-1] += 1\n\n                    \n        def remove_bits(cur):\n            bit = bin(cur)[2:]\n            bit = bit[::-1]\n            actual = len(bit)\n\n            bit = bit + \"0\"*(bit_count - len(bit))\n\n\n            for i in range(len(bit)):\n                v = bit[i]\n                if v==\"0\":\n                    bits_z[-i-1] -= 1\n                elif i < actual:\n                    bits_o[-i-1] -= 1\n                    \n        def get_value():\n            val = 0\n            for i,v in enumerate(zip(bits_z[::-1],bits_o[::-1])):\n                if v[1] > 0 and v[0] == 0:\n                    val += 2**(i)\n            return val\n        \n        \n        n = len(nums)\n        diff = float('inf')\n        for i in range(n):\n            add_bits(nums[i])\n            cur = get_value()\n            \n            diff = min(diff, abs(k - cur))\n            # print(cur,diff)\n            # print(bits_z)\n            # print(bits_o)\n\n            while cur < k and j<=i:\n                remove_bits(nums[j])\n                if j!=i:\n                    cur = get_value()\n                    diff = min(diff, abs(k - cur))\n                j+=1\n        # print('-------')\n\n        return diff\n\n            \n        \n        ",
    "submit_ts": 1717299608.0
}