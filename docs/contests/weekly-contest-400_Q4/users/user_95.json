{
    "username": "jayesh_shaw",
    "submission": "\n\n#define INF INT32_MAX\n\nclass Solution {\npublic:\n    // Segment Tree class to perform task optimally\nclass SGtree {\npublic:\n    vector<int> tree;\n    int n;\n\n    // Constructor\n    SGtree(vector<int>& arr)\n    {\n        n = arr.size();\n        tree.resize(4 * n);\n        build(arr, 0, 0, n - 1);\n    }\n\n    // Function to build the Segment Tree\n    void build(vector<int>& arr, int node, int start,\n               int end)\n    {\n        if (start == end) {\n            tree[node] = arr[start];\n        }\n        else {\n            int mid = (start + end) / 2;\n            build(arr, 2 * node + 1, start, mid);\n            build(arr, 2 * node + 2, mid + 1, end);\n\n            // bitwise AND of the children nodes\n            tree[node]\n                = tree[2 * node + 1] & tree[2 * node + 2];\n        }\n    }\n\n    // Overloading query function to be used recursively\n    int query(int l, int r)\n    {\n        return query(0, 0, n - 1, l, r);\n    }\n\n    // query function to get bitwise AND of the range\n    int query(int node, int start, int end, int l, int r)\n    {\n        if (r < start || end < l) {\n            return INF;\n        }\n        if (l <= start && end <= r) {\n            return tree[node];\n        }\n        int mid = (start + end) / 2;\n        int p1 = query(2 * node + 1, start, mid, l, r);\n        int p2 = query(2 * node + 2, mid + 1, end, l, r);\n\n        // bitwise AND operation result\n        return p1 & p2;\n    }\n};\n\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        SGtree s(nums);\n        int ans=INT_MAX;\n        for(int i=0;i<n;i++){\n            int a=i-1,b=n-1;\n            while(b-a>1){\n                int m=(a+b)/2;\n                if(s.query(i,m)>=k)a=m;\n                else b=m;\n            }\n            int x;\n            if(a!=i-1){\n                x=abs(s.query(i,a)-k);\n                ans=min(ans,x);\n            }\n            x=abs(s.query(i,b)-k);\n            ans=min(ans,x);\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1717297476",
    "subm_id": "1274743884"
}