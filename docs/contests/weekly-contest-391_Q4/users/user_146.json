{
    "username": "VibhorSingh123",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<long long, long long>> sum, diff;\n        int n = points.size();\n        for(int i=0; i<n; i++){\n            sum.push_back({points[i][0]+points[i][1], i});\n            diff.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        pair<int,int> p1;\n        if(sum[n-1].first - sum[0].first > diff[n-1].first - diff[0].first){\n            p1 = {sum[n-1].second, sum[0].second};\n        }\n        else{\n            p1 = {diff[n-1].second, diff[0].second};\n        }\n        vector<pair<long long, long long>> sum1, diff1;\n        for(int i=0; i<n; i++){\n            if(i==p1.first) continue;\n            sum1.push_back({points[i][0]+points[i][1], i});\n            diff1.push_back({points[i][0]-points[i][1], i});\n        }\n        vector<pair<long long, long long>> sum2, diff2;\n        for(int i=0; i<n; i++){\n            if(i==p1.second) continue;\n            sum2.push_back({points[i][0]+points[i][1], i});\n            diff2.push_back({points[i][0]-points[i][1], i});\n        }\n        sort(sum1.begin(), sum1.end());\n        sort(diff1.begin(), diff1.end());\n        sort(sum2.begin(), sum2.end());\n        sort(diff2.begin(), diff2.end());\n        int ans1 = 0, ans2 = 0;\n        ans1 = max(sum1[sum1.size()-1].first - sum1[0].first, diff1[diff1.size()-1].first - diff1[0].first);        \n        ans2 = max(sum2[sum2.size()-1].first - sum2[0].first, diff2[diff2.size()-1].first - diff2[0].first);\n        return min(ans1,ans2);\n\n    }\n};"
}