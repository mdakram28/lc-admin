{
    "username": "mkshkrmanish",
    "submission": "// class Solution {\n// public:\n//     int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        \n//     }\n// };\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> children;\n    vector<pair<int, int>> wordEndings;\n};\n\nclass Trie {\npublic:\n    TrieNode* rootNode;\n\n    Trie() {\n        rootNode = new TrieNode();\n    }\n\n    void insert(string word, int index, int cost) {\n        TrieNode* currentNode = rootNode;\n        for (char c : word) {\n            if (!currentNode->children.count(c)) {\n                currentNode->children[c] = new TrieNode();\n            }\n            currentNode = currentNode->children[c];\n        }\n        currentNode->wordEndings.push_back({index, cost});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int targetLength = target.size();\n        vector<int> costDP(targetLength + 1, INT_MAX);\n        costDP[0] = 0;\n\n        Trie trie;\n        for (int i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], i, costs[i]);\n        }\n\n        for (int i = 0; i < targetLength; ++i) {\n            if (costDP[i] == INT_MAX) {\n                continue;\n            }\n\n            TrieNode* currentNode = trie.rootNode;\n            for (int j = i; j < targetLength; ++j) {\n                if (!currentNode->children.count(target[j])) {\n                    break;\n                }\n                currentNode = currentNode->children[target[j]];\n                for (auto& wordEnding : currentNode->wordEndings) {\n                    int wordLength = words[wordEnding.first].size();\n                    if (i + wordLength <= targetLength) {\n                        costDP[i + wordLength] = min(costDP[i + wordLength], costDP[i] + wordEnding.second);\n                    }\n                }\n            }\n        }\n\n        return costDP[targetLength] == INT_MAX ? -1 : costDP[targetLength];\n    }\n};\n",
    "submit_ts": "1720322779",
    "subm_id": "1312358895"
}