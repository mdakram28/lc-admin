{
    "username": "ankan2526",
    "submission": "class Solution:\n    def minimumOperations(self, a: List[int], b: List[int]) -> int:\n        n = len(a)\n        diff = [a[i]-b[i] for i in range(n)]\n        def solve(l, r, dx):\n            if l > r:\n                return 0\n            if l == r:\n                return abs(diff[l] + dx)\n            while l <= r:\n                if diff[l] + dx == 0:\n                    l += 1\n                else:\n                    break\n            while l <= r:\n                if diff[r] + dx == 0:\n                    r -= 1\n                else:\n                    break\n            if l > r:\n                return 0\n            newL = l\n            while l <= r:\n                if (diff[newL] + dx) * (diff[r] + dx) <= 0:\n                    newL += 1\n                else:\n                    break\n            \n            if newL != l:\n                return solve(l, newL-1, dx) + solve(newL, r, dx)\n            \n            if diff[l] + dx < 0:\n                if diff[l] + dx > diff[r] + dx:\n                    ans = solve(l+1, r, dx-(diff[l] + dx)) + abs(diff[l] + dx)\n                else:\n                    ans = solve(l, r-1,  dx-(diff[r] + dx)) + abs(diff[r] + dx)\n            else:\n                if diff[l] + dx < diff[r] + dx:\n                    ans = solve(l+1, r, dx-(diff[l] + dx)) + abs(diff[l] + dx)\n                else:\n                    ans = solve(l, r-1, dx-(diff[r] + dx)) + abs(diff[r] + dx)\n            print(l, r, dx, ans)\n            return ans\n        return solve(0, n-1, 0)",
    "submit_ts": "1721531553",
    "subm_id": "1327963863"
}