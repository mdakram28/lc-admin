{
    "username": "Vashu_Verma",
    "submission": "class Solution {\npublic:\n    bool bfs(vector<vector<int>> &Graph, int st, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> vis(n, 0);\n        q.push(st);\n        vis[st] = 1;\n        while (!q.empty()) {\n            int fnode = q.front();\n            q.pop();\n            for (int nbr : Graph[fnode]) {\n                if (!vis[nbr]) {\n                    if (nbr == t1 || nbr == t2) {\n                        return true;\n                    }\n                    q.push(nbr);\n                    vis[nbr] = 1;\n                }\n            }\n        }\n        return false;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int nC = circles.size();\n        vector<pair<pair<int,int>, int>> C(nC);\n        vector<vector<int>> Graph(nC + 4);\n        for(int i=0;i<nC;++i) {\n            C[i]={{circles[i][0], circles[i][1]}, circles[i][2]};\n        }\n        for(int i=0;i<nC;++i) {\n            if(C[i].first.first <= C[i].second) {\n                Graph[nC].push_back(i);\n                Graph[i].push_back(nC);\n            }\n            if(X - C[i].first.first <= C[i].second) {\n                Graph[nC + 2].push_back(i);\n                Graph[i].push_back(nC + 2);\n            }\n            if(C[i].first.second <= C[i].second) {\n                Graph[nC + 1].push_back(i);\n                Graph[i].push_back(nC + 1);\n            }\n            if(Y - C[i].first.second <= C[i].second) {\n                Graph[nC + 3].push_back(i);\n                Graph[i].push_back(nC + 3);\n            }\n            for(int j = i+1; j <nC; j++) {\n                double dis = sqrt(pow(C[i].first.first - C[j].first.first, 2) +\n                                  pow(C[i].first.second - C[j].first.second, 2));\n                int rS = C[i].second + C[j].second;\n                if(rS >= dis) {\n                    Graph[i].push_back(j);\n                    Graph[j].push_back(i);\n                }\n            }\n        }\n        if(bfs(Graph, nC, nC+1, nC+2, nC+4) || bfs(Graph, nC+3, nC+2, nC+1, nC+4)) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138427",
    "subm_id": "1335790490"
}