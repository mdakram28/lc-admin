{
    "username": "joe-139-m",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), ans = 0;\n        for(int i = 0, j = m - 1; i < j; ++i, --j) {\n            for(int p = 0, q = n - 1; p < q; ++p, --q) {\n                int tmp = grid[i][p] + grid[i][q] + grid[j][p] + grid[j][q];\n                ans += min(tmp, 4 - tmp);\n            }\n        }\n        int cnt = 0, one = 0;\n        if(m & 1) {\n            for(int i = 0, j = n - 1, k = m / 2; i < j; ++i, --j) {\n                if(grid[k][i] != grid[k][j]) ++cnt;\n                else if(grid[k][i]) ++one;\n            }\n        }\n        if(n & 1) {\n            for(int i = 0, j = m - 1, k = n / 2; i < j; ++i, --j) {\n                if(grid[i][k] != grid[j][k]) ++cnt;\n                else if(grid[i][k]) ++one;\n            }\n        }\n        if((one & 1) && !cnt) ans += 2;\n        else ans += cnt;\n        if((m & 1) && (n & 1)) ans += grid[m / 2][n / 2];\n        return ans;\n    }\n};",
    "submit_ts": "1722697759",
    "subm_id": "552267666"
}