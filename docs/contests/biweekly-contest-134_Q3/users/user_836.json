{
    "username": "Goku333",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& col, int k) {\n        unordered_map<string, int> mp;\n        \n        // col.insert(col.end(), col.begin(), col.begin()+k);\n        int n = col.size();\n        \n        for(int i=0; i<k; i++){\n            col.push_back(col[i]);\n        }\n        \n        n+=k;\n        \n        vector<int> v(n+1, 0);\n        \n        stack<int> st;\n        \n        for(int i=0; i<n; i++){\n            st.push(i);\n        }\n        \n        for(int i=1; i<n; i++){\n            v[i] = abs(col[i] - col[i-1]) + v[i-1];\n        }\n        \n        int ct = 0;\n        k-=1;\n        \n        for(int i=0; i<n; i++){\n            st.pop();\n        }\n        \n        for(int i=k+1; i<n; i++){\n            if(v[i] - v[i-k] == k) ct++;\n        }\n        \n        return ct;\n    }\n};",
    "submit_ts": "1720279890",
    "subm_id": "1311769153"
}