{
    "username": "AijoKaren",
    "submission": "class Solution\n{\n    constexpr static int N = 1e5 + 5;\n    int n, tr[N] = {};\n\n    inline int lowbit(const int x) { return x & (-x); }\n    inline void modify(const int x, const int c)\n    {\n        int p = x;\n        while (p <= n)\n        {\n            tr[p] += c;\n            p += lowbit(p);\n        }\n    }\n\n    inline int query(const int x)\n    {\n        int p = x, res = 0;\n        while (p > 0)\n        {\n            res += tr[p];\n            p -= lowbit(p);\n        }\n        return res;\n    }\n\npublic:\n    vector<int> countOfPeaks(vector<int> &nums, vector<vector<int>> &queries)\n    {\n        n = nums.size();\n        for (int i = 1; i < n - 1; i++)\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                modify(i, 1);\n        vector<int> res;\n        for (const auto &it : queries)\n        {\n            int op = it[0], l = it[1], r = it[2];\n            if (op == 1)\n                res.emplace_back((l == r) ? 0 : query(r - 1) - query(l));\n            else\n            {\n                for (int i = l - 1; i <= l + 1; i++)\n                {\n                    if (i < 1 || i >= n - 1)\n                        continue;\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                        modify(i, -1);\n                }\n                nums[l] = r;\n                for (int i = l - 1; i <= l + 1; i++)\n                {\n                    if (i < 1 || i >= n - 1)\n                        continue;\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                        modify(i, 1);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718506789.0
}