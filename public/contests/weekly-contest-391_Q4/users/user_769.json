{
    "username": "aditya0610",
    "submission": "class Solution {\npublic:\n    \n    int minimumDistance(vector<vector<int>>& v) {\n        vector<int> a,b;\n        multiset<int> m1,m2;\n        for(int i = 0;i < v.size();i++){\n            int x = v[i][0];\n            int y = v[i][1];\n            a.push_back(x + y);\n            b.push_back(x - y);\n            m1.insert(x + y);\n            m2.insert(x - y);\n        }\n        vector<int> ans;\n        for(int i = 0;i < v.size();i++){\n            m1.erase(m1.find(a[i]));\n            m2.erase(m2.find(b[i]));\n            int a1 = *m1.rbegin();\n            int a2 = *m1.begin();\n            int b1 = *m2.rbegin();\n            int b2 = *m2.begin();\n            \n            ans.push_back(max(abs(a1 - a2),abs(b1-b2)));\n            m1.insert(a[i]);\n            m2.insert(b[i]);\n        }\n        int fans = ans[0];\n        for(int i = 0;i < ans.size();i++){\n            fans = min(fans,ans[i]);\n            cout << ans[i] << endl;\n        }\n        \n        return fans;\n        \n    }\n};"
}