{
    "username": "great-johnsonyen",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntemplate<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \", \" << p.second << ')'; }\ntemplate<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = \", \"; return os << '}'; }\n \nvoid dbg_out() { cout << endl; }\ntemplate<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cout << ' ' << H; dbg_out(T...); }\n#define debug(...) cout << '[' << __FILE__ << ':' << __LINE__ << \"] (\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\n\n#define all(x) begin(x), end(x)\n#define rall(x) begin(x), end(x)\n// loops\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define F0R(i, a) FOR(i, 0, a)\n#define ROF(i, a, b) for (int i = (b)-1; i >= (a); --i)\n#define R0F(i, a) ROF(i, 0, a)\n#define rep(a) F0R(_, a)\n#define each(a, x) for (auto &a : x)\nusing i64 = long long;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<i64, i64>;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing vvi = vector<vector<int>>;\nusing vvl = vector<vector<ll>>;\nusing vpii = vector<pii>;\nusing vpll = vector<pll>;\nconst int inf = INT_MAX / 2 - 100;\nconst i64 infLL = LLONG_MAX / 3;\nint MOD = 1e9 + 7;\nint dx[4]{1, 0, -1, 0}, dy[4]{0, 1, 0, -1};\ntemplate<typename T> using min_heap=priority_queue<T,vector<T>,greater<T>>;\ntemplate<typename T> using max_heap=priority_queue<T>;\n\ntemplate <class T>\nvoid mkuni(vector<T>& v) {\n    sort(all(v));\n    v.erase(unique(all(v)), v.end());\n}\n\ntemplate <class T>\nint lwb(vector<T>& a, const T& b) {\n    return int(lower_bound(all(a), b) - begin(a));\n}\n\ntemplate <class T>\nint upb(vector<T>& a, const T& b) {\n    return int(upper_bound(all(a), b) - begin(a));\n}\n\nconstexpr int popcount(int x) {\n    return __builtin_popcount(x);\n}\n\nconstexpr int topbit(int x) {\n    return x == 0 ? 0 : 31 - __builtin_clz(x);\n}\n\ntemplate <class T, class U>\nvoid safeErase(T& t, const U& u) {\n    auto it = t.find(u);\n    assert(it != end(t));\n    t.erase(it);\n}\n\ntemplate<class T, class U>\nT fstTrue(T lo, T hi, U f) {\n\t++hi;\n\tassert(lo <= hi);  // assuming f is increasing\n\twhile (lo < hi) {  // find first index such that f is true\n\t\tT mid = lo + (hi - lo) / 2;\n\t\tf(mid) ? hi = mid : lo = mid + 1;\n\t}\n\treturn lo;\n}\n\ntemplate<class T, class U>\nT lstTrue(T lo, T hi, U f) {\n\t--lo;\n\tassert(lo <= hi);  // assuming f is decreasing\n\twhile (lo < hi) {  // find first index such that f is true\n\t\tT mid = lo + (hi - lo + 1) / 2;\n\t\tf(mid) ? lo = mid : hi = mid - 1;\n\t}\n\treturn lo;\n}\n\ninline void add_mod(int& x, int y) { x += y; if (x >= MOD) x -= MOD; }\ninline void sub_mod(int& x, int y) { x += MOD - y; if (x >= MOD) x -= MOD; }\n\ntemplate <class T>\nbool chmin(T& a, const T& b) {\n    return b < a ? a = b, 1 : 0;\n}  // set a = min(a,b)\ntemplate <class T>\nbool chmax(T& a, const T& b) {\n    return a < b ? a = b, 1 : 0;\n}  // set a = max(a,b)\n\n/***\n * \\U0001d4fd\\U0001d4f1\\U0001d4ee \\U0001d4fc\\U0001d4f8\\U0001d4f5\\U0001d4fe\\U0001d4fd\\U0001d4f2\\U0001d4f8\\U0001d4f7 \\U0001d4f8\\U0001d4ef \\U0001d500\\U0001d502\\U0001d4ef0722\n */\n\ntemplate <typename T, typename F>\nclass SparseTable {\n   public:\n    int n;\n    vector<vector<T>> mat;\n    F func;\n\n    SparseTable(const vector<T>& a, const F& f) : func(f) {\n        n = static_cast<int>(a.size());\n        int max_log = 32 - __builtin_clz(n);\n        mat.resize(max_log);\n        mat[0] = a;\n        for (int j = 1; j < max_log; j++) {\n            mat[j].resize(n - (1 << j) + 1);\n            for (int i = 0; i <= n - (1 << j); i++) {\n                mat[j][i] = func(mat[j - 1][i], mat[j - 1][i + (1 << (j - 1))]);\n            }\n        }\n    }\n\n    T query(int from, int to) const {\n        assert(0 <= from && from <= to && to <= n - 1);\n        int lg = 32 - __builtin_clz(to - from + 1) - 1;\n        return func(mat[lg][from], mat[lg][to - (1 << lg) + 1]);\n    }\n};\n\nauto get_max = [](auto a, auto b) { return max(a, b); };\n\nauto get_min = [](auto a, auto b) { return min(a, b); };\n\n// SparseTable<int, decltype(get_max)> st(input_data, get_max);\n\nauto get_and = [](auto a, auto b) { return a & b; };\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        SparseTable<int, decltype(get_and)> st(nums, get_and);\n\t\ti64 ans = 0;\n\t\tint n = nums.size();\n\t\tFOR(i, 0, n) {\n\t\t\tif (nums[i] < k) continue;\n\t\t\tif (st.query(i, n - 1) > k) continue;\n\t\t\t// \u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u7684\u4f4d\u7f6e\n\t\t\tint lo = i - 1, hi = n - 1;\n\t\t\twhile (lo + 1 < hi) {\n\t\t\t\tint mid = (lo + hi) / 2;\n\t\t\t\tif (st.query(i, mid) > k) lo = mid;\n\t\t\t\telse hi = mid;\n\t\t\t}\n\t\t\tif (st.query(i, hi) != k) continue;\n\t\t\tint l = hi;\n\t\t\t// \u6700\u540e\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u4f4d\u7f6e\n\t\t\tlo = i, hi = n;\n\t\t\twhile (lo + 1 < hi) {\n\t\t\t\tint mid = (lo + hi) / 2;\n\t\t\t\tif (st.query(i, mid) < k) hi = mid;\n\t\t\t\telse lo = mid;\n\t\t\t}\n\t\t\tint r = lo;\n\t\t\tans += r - l + 1;\n\t\t\t// debug(i, l, r);\n\t\t}\n\t\treturn ans;\n    }\n};",
    "submit_ts": "1720277983",
    "subm_id": "544560003"
}