{
    "username": "windlike-man",
    "submission": "class Solution\n{\npublic:\n    int minFlips(vector<vector<int>> &grid)\n    {\n        int csize = grid[0].size();\n        int rsize = grid.size();\n        int ans = 0;\n        for (int r = 0; r < rsize / 2; ++r)\n            for (int c = 0; c < csize / 2; ++c)\n            {\n                int one = 0;\n                one = grid[r][c] + grid[r][csize - c - 1] + grid[rsize - r - 1][c] + grid[rsize - r - 1][csize - c - 1];\n                ans += min(one, 4 - one);\n            }\n\n        int one1 = 0, one2 = 0;\n        if ((rsize & 1) && (csize & 1))\n            ans += grid[rsize / 2][csize / 2];\n\n        if (rsize & 1)\n            for (int c = 0; c < csize / 2; ++c)\n            {\n                int l = grid[rsize / 2][c], r = grid[rsize / 2][csize - c - 1];\n                if (l == r)\n                    one2 += l == 1;\n                else\n                    one1++;\n            }\n        if (csize & 1)\n            for (int r = 0; r < rsize / 2; ++r)\n            {\n                int ll = grid[r][csize / 2], rr = grid[rsize - r - 1][csize / 2];\n                if (ll == rr)\n                    one2 += ll == 1;\n                else\n                    one1++;\n            }\n        if (one2 & 1)\n        {\n            if (one1)\n                ans += one1;\n            else\n                ans += 2;\n        }\n        else\n            ans += one1;\n        return ans;\n    }\n};",
    "submit_ts": "1722696940",
    "subm_id": "552263637"
}