{
    "username": "AtulKeshari",
    "submission": "class Solution\n{\npublic:\n    int dp[5003][3][53];\n    map<int, vector<int>> mp;\n\n    int solve(int i, vector<int> &nums, int check, int k)\n    {\n        if (i == nums.size())\n        if(check)return 0;\n        if (k < 0||i == nums.size())\n            return -1;\n\n        if (dp[i][check][k] != -1)\n            return dp[i][check][k];\n\n        int result[4] = {0};\n\n        if (check == 0)\n            result[2] = solve(i + 1, nums, 0, k);\n        if (i < nums.size() - 1)\n        {\n            if (nums[i] != nums[i + 1])\n                result[0] = 1 + solve(i + 1, nums, 1, k - 1);\n            else\n                result[0] = 1 + solve(i + 1, nums, 1, k);\n        }\n\n        result[3] = 1 + solve(i + 1, nums, 0, k - 1);\n        int che_in = upper_bound(mp[nums[i]].begin(), mp[nums[i]].end(), i) - mp[nums[i]].begin();\n\n        if (che_in != mp[nums[i]].size())\n            result[1] = 1 + solve(mp[nums[i]][che_in], nums, 1,k);\n        return dp[i][check][k] = max({result[0], result[1], result[2], result[3]});\n    }\n\n    int maximumLength(vector<int> &nums, int k)\n    {\n        int n = nums.size();\n        memset(dp, -1, sizeof(dp));\n        mp.clear();\n        for (int i = 0; i < n; i++)\n        {\n            mp[nums[i]].push_back(i);\n        }\n\n        return 1+solve(0, nums, 0, k);\n    }\n};\n",
    "submit_ts": 1717861369.0
}