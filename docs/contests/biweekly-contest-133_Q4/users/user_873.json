{
    "username": "AstuteManiac",
    "submission": "class Solution:\n    MOD=1000000007\n    MAX_INV=400\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        req_map = {}\n        for req in requirements:\n            req_map[req[0] + 1] = req[1]\n\n        dp = [[0] * (self.MAX_INV + 1) for _ in range(n + 1)]\n        dp[0][0] = 1\n\n        for length in range(1, n + 1):\n            for inv in range(self.MAX_INV + 1):\n                for pos in range(length):\n                    prev_inv = inv - pos\n                    if prev_inv >= 0:\n                        dp[length][inv] = (dp[length][inv] + dp[length - 1][prev_inv]) % self.MOD\n\n            if length in req_map:\n                req_inv = req_map[length]\n                for inv in range(self.MAX_INV + 1):\n                    if inv != req_inv:\n                        dp[length][inv] = 0\n\n        result = sum(dp[n]) % self.MOD\n        return result\n\n        \n            \n        ",
    "submit_ts": "1719071437",
    "subm_id": "1296846721"
}