{
    "username": "user5511GD",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long int count = 0;\n        std::unordered_map<int, int> andMap;\n\n        for (int num : nums) {\n            std::unordered_map<int, int> newAndMap;\n\n            newAndMap[num]++; // start a new subarray with the current element\n            for (const auto& [andVal, freq] : andMap) {\n                int newAnd = andVal & num;\n                newAndMap[newAnd] += freq;\n            }\n\n            for (const auto& [andVal, freq] : newAndMap) {\n                if (andVal == k) {\n                    count += freq;\n                }\n            }\n\n            andMap = newAndMap;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720278567",
    "subm_id": "1311714756"
}