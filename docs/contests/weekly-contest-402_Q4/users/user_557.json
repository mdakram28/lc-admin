{
    "username": "goldenwind",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct Node\n{\n    int l, r;\n    int v;  // \u533a\u95f4[l, r]\u4e2d\u7684\u548c\n};\n\nclass SegTree {\npublic:\n    SegTree(int n) {\n        tr.resize(4*n);\n        build(1, 0, n-1);\n    }\n    \n    void pushup(int u)  // \u7531\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6765\u8ba1\u7b97\u7236\u8282\u70b9\u7684\u4fe1\u606f\n    {\n        tr[u].v = tr[u << 1].v + tr[u << 1 | 1].v;\n    }\n    \n    void build(int u, int l, int r)\n    {\n        tr[u] = {l, r};\n        if (l == r) return;\n        int mid = l + r >> 1;\n        build(u << 1, l, mid), build(u << 1 | 1, mid + 1, r);\n    }\n    \n    int query(int u, int l, int r)\n    {\n        if (tr[u].l >= l && tr[u].r <= r) return tr[u].v;   // \u6811\u4e2d\u8282\u70b9\uff0c\u5df2\u7ecf\u88ab\u5b8c\u5168\u5305\u542b\u5728[l, r]\u4e2d\u4e86\n    \n        int mid = tr[u].l + tr[u].r >> 1;\n        int v = 0;\n        if (l <= mid) v = query(u << 1, l, r);\n        if (r > mid) v += query(u << 1 | 1, l, r);\n    \n        return v;\n    }\n    \n    void modify(int u, int x, int v)\n    {\n        if (tr[u].l == x && tr[u].r == x) tr[u].v = v;\n        else\n        {\n            int mid = tr[u].l + tr[u].r >> 1;\n            if (x <= mid) modify(u << 1, x, v);\n            else modify(u << 1 | 1, x, v);\n            pushup(u);\n        }\n    }\n    \n    vector<Node> tr;\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& qs) {\n        int n = nums.size();\n        vector<int> res;\n        SegTree t(n);\n        for(int i=1; i<n-1; i++) {\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]) {\n                t.modify(1, i, 1);\n            }\n        }\n        for(auto&q: qs) {\n            if(q[0] == 1) {\n                if(q[2] - q[1] <= 1) {\n                    res.push_back(0);\n                } else {\n                    res.push_back(t.query(1, q[1]+1, q[2]-1));\n                }\n                \n            } else {\n                nums[q[1]] = q[2];\n                \n                    if(q[1]-1 >= 0 && q[1]+1<n) t.modify(1, q[1], nums[q[1]] > nums[q[1]-1] && nums[q[1]] > nums[q[1]+1]);\n                    if(q[1]+2<n)t.modify(1, q[1]+1, nums[q[1]+1] > nums[q[1]] && nums[q[1]+1] > nums[q[1]+2]);\n                    if(q[1]-2 >= 0)t.modify(1, q[1]-1, nums[q[1]-1] > nums[q[1]] && nums[q[1]-1] > nums[q[1]-2]);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718507115.0
}