{
    "username": "da-bai-xiong-9b",
    "submission": "class Solution:\n\tdef minimumDistance(self, points: List[List[int]]) -> int:\n\t\tdef f(ls):\n\t\t\tt1=[]\n\t\t\tt2=[]\n\t\t\tfor x,y,idx in ls:\n\t\t\t\tt1.append([x-y, idx])\n\t\t\t\tt2.append([x+y,idx])\n\t\t\tt1.sort()\n\t\t\tt2.sort()\n\t\t\tif t1[-1][0]-t1[0][0]>t2[-1][0]-t2[0][0]:\n\t\t\t\treturn (t1[-1][0]-t1[0][0], t1[-1][1], t1[0][1])\n\t\t\telse:\n\t\t\t\treturn (t2[-1][0]-t2[0][0], t2[-1][1], t2[0][1])\n\t\tnew=[]\n\t\tfor i,(x,y) in enumerate(points):\n\t\t\tnew.append([x,y,i])\n\t\tmx,p1,p2=f(new)\n\t\tnew1=deepcopy(new)\n\t\tdel new1[p1]\n\t\tans1=f(new1)\n\t\tnew2=deepcopy(new)\n\t\tdel new2[p2]\n\t\tans2=f(new2)\n\t\treturn min(ans1[0], ans2[0])\n"
}