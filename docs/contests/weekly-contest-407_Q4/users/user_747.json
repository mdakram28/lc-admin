{
    "username": "leaf_node_",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        std::vector<long long> A(n);\n        for (int i = 0; i < n; i++) {\n            A[i] = nums[i] - target[i];\n        }\n        long long ans = 0;\n        std::vector<std::array<int, 2>> rng;\n        for (int i = 0; i < n; i++) {\n            if (!A[i]) {\n                continue;\n            }\n            \n            int sign = (A[i] > 0) ? 1 : -1;\n            int j = i;\n            while (j < n && sign * A[j] > 0) {\n                A[j] = abs(A[j]);\n                j++;\n            }\n            j--;\n            rng.push_back({i, j});\n            i = j;\n        }\n        auto f = [&] (long long l, long long r) -> long long {\n            long long res = 0;\n            long long components = 1;\n            long long prev_val = 0;\n            std::set<std::array<long long, 2>> st;\n            std::set<long long> R;\n            R.insert({INT_MAX});\n            R.insert({INT_MIN});\n            for (long long i = l; i <= r; i++) {\n                st.insert({A[i], i});\n                R.insert(i);\n            }\n            for (auto [a, i] : st) {\n                res += (a - prev_val) * components;\n                prev_val = a;\n                auto it = R.find(i);\n                long long ll = *std::prev(it);\n                long long rr = *std::next(it);\n                components += (i - 1 == ll) + (i + 1 == rr) - 1;\n                R.erase(it);\n            }\n\n            return res;\n        };  \n\n        for (auto it : rng) {\n            ans += f(it[0], it[1]);\n            // std::cout << it[0] << ' ' << it[1] << \":\";\n            // std::cout << f(it[0], it[1]) << \" ,\";\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531782",
    "subm_id": "1327969717"
}