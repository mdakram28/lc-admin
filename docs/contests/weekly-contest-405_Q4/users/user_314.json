{
    "username": "pcwuu",
    "submission": "class Solution {\npublic:\n    class Trie {\n    public:\n        Trie *children[26] = {};\n        int cost = INT_MAX / 2;\n        bool end = false;\n        \n        void insert(Trie *root, string &s, int c) {\n            int n = s.size();\n            for(int i = 0; i < n; i++) {\n                if(root->children[s[i] - 'a'] == NULL)\n                    root->children[s[i] - 'a'] = new Trie();\n                root = root->children[s[i] - 'a'];\n            }\n            root->end = true;\n            root->cost = min(root->cost, c);\n        }\n        \n        int find(Trie *root, string &s) {\n            int n = s.size();\n            for(int i = 0; i < n; i++) {\n                if(root->children[s[i] - 'a'] == NULL)\n                    return INT_MAX / 2;\n                root = root->children[s[i] - 'a'];\n            }\n            if(root->end)\n                return root->cost;\n            return INT_MAX / 2;\n        }\n    };\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie *root = new Trie();\n        for(int i = 0; i < words.size(); i++)\n            root->insert(root, words[i], costs[i]);\n        \n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX / 2);\n        dp[0] = 0;\n        for(int i = 1; i <= n; i++) {\n            Trie *temp = root;\n            for(int j = n - i; j < n; j++) {\n                if(temp->children[target[j] - 'a'] == NULL)\n                    break;\n                temp = temp->children[target[j] - 'a'];\n                if(temp->end)\n                    dp[i] = min(dp[i], temp->cost + dp[n - j - 1]);\n            }\n        }\n        if(dp[n] == INT_MAX / 2)\n            return -1;\n        return dp[n];\n    }\n};\n\n/*\ndp[n] = min(dp[n - 1] + cost[a], dp[n - 2] + cost[b], ...) \n*/",
    "submit_ts": "1720321796",
    "subm_id": "1312332513"
}