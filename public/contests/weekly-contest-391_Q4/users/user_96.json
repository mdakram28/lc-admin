{
    "username": "jinmingli",
    "submission": "class Solution {\npublic:\n    pair<int,int> getD(vector<vector<int>>& p){\n        int n=p.size();\n        vector<int> idx(n);\n        for(int i=0;i<n;i++) idx[i]=i;\n        sort(idx.begin(),idx.end(),[&](int i,int j){\n            return p[i][0]+p[i][1]<p[j][0]+p[j][1];\n        });\n        pair<int,int> r1={idx[0],idx.back()};\n        int s1=abs(p[r1.second][0]-p[r1.first][0])+abs(p[r1.second][1]-p[r1.first][1]);\n        sort(idx.begin(),idx.end(),[&](int i,int j){\n            return p[i][0]-p[i][1]<p[j][0]-p[j][1];\n        });\n        pair<int,int> r2={idx[0],idx.back()};\n        int s2=abs(p[r2.second][0]-p[r2.first][0])+abs(p[r2.second][1]-p[r2.first][1]);\n        return s1>s2?r1:r2;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        auto r=getD(points);\n        vector<vector<int>> t1,t2;\n        for(int i=0;i<points.size();i++){\n            if(i!=r.first) t1.push_back(points[i]);\n            if(i!=r.second) t2.push_back(points[i]);\n        }\n        auto r1=getD(t1),r2=getD(t2);\n        int s1=abs(t1[r1.second][0]-t1[r1.first][0])+abs(t1[r1.second][1]-t1[r1.first][1]);\n        int s2=abs(t2[r2.second][0]-t2[r2.first][0])+abs(t2[r2.second][1]-t2[r2.first][1]);\n        return min(s1,s2);\n    }\n};"
}