{
    "username": "rithwikgupta",
    "submission": "\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        // circles.push_back({0, 0, 0});\n        // circles.push_back({X, Y, 0});\n\n        long long n = circles.size();\n        \n\n        vector<vector<long long> > adj(n+2);\n\n        for (long long i = 0; i < n; i++) {\n            for (long long j = 0; j < n; j++) {\n                if (j == i) continue;\n                long long dist = pow((long long) circles[i][0] - (long long) circles[j][0], 2) + pow((long long) circles[i][1] - (long long) circles[j][1], 2);\n                if (dist <= pow((long long) circles[i][2] + (long long)  circles[j][2], 2)) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n            long long x = circles[i][0];\n            long long y = circles[i][1];\n            long long r = circles[i][2];\n            if (x - r <= 0 || y + r >= Y) {\n                adj[i].push_back(n);\n                adj[n].push_back(i);\n            } \n\n            if (x + r >= X || y - r <= 0) {\n                adj[i].push_back(n+1);\n                adj[n+1].push_back(i);\n            } \n        }\n        n+=2;\n\n        vector<long long> vis(n);\n        long long st = n-2;\n        long long en = n-1;\n        queue<long long> q;\n        q.push(st);\n        vis[st]=true;\n        while (!q.empty()) {\n            long long cur = q.front();\n            q.pop();\n            for (auto val: adj[cur]) {\n                if (!vis[val]) {\n                    q.push(val);\n                    vis[val]=true;\n                }\n            }\n        }\n\n        return !vis[en];\n\n\n\n    }\n};",
    "submit_ts": "1722134436",
    "subm_id": "1335666154"
}