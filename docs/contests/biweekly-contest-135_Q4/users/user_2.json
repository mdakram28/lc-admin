{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    int a[105][105], n;\n    long long f[105][105], g[105][105], s[105][105], p1[105], p2[105];\n    long long ans(){\n        long long res = 0ll;\n        for(int i = 0; i <= n; ++i)\n            for(int j = 0; j <= n; ++j)\n                res = std::max(res, f[i][j]);\n        return res;\n    }\n    long long maximumScore(vector<vector<int>>& grid) {\n        n = grid.size();\n        for(int i = 1; i <= n; ++i)\n            for(int j = 1; j <= n; ++j)\n                a[i][j] = grid[i - 1][j - 1];\n        for(int j = 1; j <= n; ++j){\n            for(int i = 1; i <= n; ++i) \n                s[i][j] = s[i - 1][j] + 1ll * a[i][j];\n        }\n        if(n == 1){\n            return 0ll;\n        }\n        for(int k1 = 0; k1 <= n; ++k1){\n            for(int k2 = 0; k2 <= n; ++k2){\n                if(k1 > k2) f[k1][k2] = s[k1][2] - s[k2][2];\n                if(k2 > k1) f[k1][k2] = s[k2][1] - s[k1][1];\n            }\n        }\n        if(n == 2){\n            return ans();\n        }\n        for(int j = 3; j <= n; ++j){\n            for(int i = 0; i <= n; ++i)\n                for(int t = 0; t <= n; ++t)\n                    g[i][t] = f[i][t];\n            long long m1 = 0ll, m2 = 0ll;\n            for(int k1 = 0; k1 <= n; ++k1){\n                m1 = 0ll; m2 = 0ll;\n                for(int k3 = 0; k3 <= k1; ++k3)\n                    m1 = std::max(m1, g[k3][k1]);\n                for(int k3 = 0; k3 <= n; ++k3)\n                    m2 = std::max(m2, g[k3][k1]);\n                p1[k1] = 0ll;\n                for(int k3 = k1 + 1; k3 <= n; ++k3)\n                    p1[k3] = std::max(p1[k3 - 1], g[k3][k1] - s[k3][j - 1]);\n                p2[n + 1] = 0ll;\n                for(int k3 = n; k3 >= k1; --k3)\n                    p2[k3] = std::max(p2[k3 + 1], g[k3][k1]);\n                for(int k2 = 0; k2 <= n; ++k2){\n                    if(k1 >= k2){\n                        f[k1][k2] = m2 + s[k1][j] - s[k2][j];\n                    }\n                    else {\n                        f[k1][k2] = m1 + s[k2][j - 1] - s[k1][j - 1];\n                        f[k1][k2] = std::max(f[k1][k2], s[k2][j - 1] + p1[k2]);\n                        f[k1][k2] = std::max(f[k1][k2], p2[k2]);\n                    }\n                }\n            }\n        }\n        return ans();\n    }\n};",
    "submit_ts": "1721487238",
    "subm_id": "1327381430"
}