{
    "username": "Sonu_710",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        PriorityQueue<pair> pq=new PriorityQueue<>();\n        HashMap<Integer,Integer> map=new HashMap<>();\n        for(int i=0;i<nums.length/2;i++)\n        {\n            int it=Math.abs(nums[i] - nums[nums.length - i - 1]);\n            map.put(it,map.getOrDefault(it,0)+1);\n        }\n        map.forEach((key,value)->{\n            pq.add(new pair(key,value));\n        });\n        \n       \n        int min=Integer.MAX_VALUE;\n        while(pq.isEmpty()==false && nums.length/2-pq.peek().freq<min)\n        {\n            int diff=pq.remove().val;\n             int ans=0;\n            for(int i=0;i<nums.length/2;i++)\n            {\n                int it=Math.abs(nums[i] - nums[nums.length - i - 1]);\n                if(it!=diff)\n                {\n                    if((k-Math.min(nums[i],nums[nums.length - i - 1])>=diff) || (Math.max(nums[i],nums[nums.length - i - 1])>=diff))\n                    {\n                        // System.out.println(nums[i]+\" \"+nums[nums.length - i - 1]+\" \"+(k-Math.min(nums[i],nums[nums.length - i - 1])));\n                        ans+=1;\n                    }\n                    else\n                    ans+=2;\n                }\n            }\n            min=Math.min(ans,min);\n        }\n        return min;\n    }\n}\nclass pair implements Comparable<pair>\n{\n    int val;\n    int freq;\n    pair(int val,int freq)\n    {\n        this.val=val;\n        this.freq=freq;\n    }\n    public int compareTo(pair p)\n    {\n        int s=p.freq-this.freq;\n        if(s==0)\n        return this.val-p.val;\n        return s;\n\n    }\n}",
    "submit_ts": "1721489298",
    "subm_id": "1327449099"
}