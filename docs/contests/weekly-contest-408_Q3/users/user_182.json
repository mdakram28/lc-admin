{
    "username": "theeeeeeekhai",
    "submission": "class Solution {\npublic:\n\n    vector<pair<int, int>> v;\n\n    pair<int, int> get(int i, int j) {\n        auto a = v[j + 1], b = v[i];\n        return {a.second - b.second, a.first - b.first};\n    }\n\n    int numberOfSubstrings(string s) {\n        int n = s.size(), ans = 0;\n        v.resize(n + 1);\n        int a = 0, b = 0;\n        vector<int> ze;\n        for(int i = 0; i < n; i++) {\n            if(s[i] == '1') a++;\n            else {\n                b++;\n                ze.push_back(i);\n            }\n            v[i + 1] = {a, b};\n        }\n\n        for(int i = 0; i < n; i++) {\n            int j = i, o = 0, z = 0;\n            while(j < n) {\n                auto p = get(i, j);\n                o = p.second, z = p.first; \n                if(o >= z * z) {\n                    if(s[j] == '0') {\n                        ans++;\n                        j++;\n                        continue;\n                    }\n                    int idx = lower_bound(ze.begin(), ze.end(), j) - ze.begin();\n                    int ni;\n                    if(idx == ze.size()) ni = n;\n                    else ni = ze[idx];\n                    ans += ni - j;\n                    j = ni;\n                }\n                else j += z * z - o;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722135535",
    "subm_id": "1335705095"
}