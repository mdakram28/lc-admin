{
    "username": "Ajit123",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        vector<int> start(n);\n        vector<int> end(n);\n        start[n-1] = 1, end[0] = 1;\n        for(int i=1; i<colors.size(); i++) {\n            if (colors[i] != colors[i-1]) {\n                end[i] = end[i-1] + 1;\n            }\n            else {\n                end[i] = 1;\n            }\n        }\n\n        for(int i=n-2; i>=0; i--) {\n            if (colors[i] != colors[i+1]) {\n                start[i] = start[i+1] + 1;\n            }\n            else {\n                start[i] = 1;\n            }\n        }\n\n        // if (n == k) {\n        //     int ans = (start[0] == n);\n        //     for(int i=1; i<n; i++) {\n        //         if (start[i] == n-i && start[0] >= i && colors[n-1] != colors[0]) {\n        //             ans = 1;\n        //             break;\n        //         }\n        //     }\n        //     return ans;\n        // }\n\n        int ans = 0;\n        for(int i=k-1; i<n; i++) {\n            if (end[i] >= k) {\n                ans++;\n            }\n        }\n\n        for(int first=1; first<=k-1; first++) {\n            int last = k-first;\n            if (start[0] >= first && end[n-1] >= last && colors[n-1] != colors[0]) {\n                ans++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720278052",
    "subm_id": "1311692152"
}