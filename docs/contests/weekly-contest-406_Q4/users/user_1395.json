{
    "username": "JiaLiLue",
    "submission": "using LL = long long;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        LL ans = 0;\n        vector<int> idx_h(m-1), idx_v(n-1);\n        iota(idx_h.begin(), idx_h.end(), 0);\n        sort(idx_h.begin(), idx_h.end(), [&](int i1, int i2){\n            return horizontalCut[i1]>horizontalCut[i2];\n        });\n        iota(idx_v.begin(), idx_v.end(), 0);\n        sort(idx_v.begin(), idx_v.end(), [&](int i1, int i2){\n            return verticalCut[i1]>verticalCut[i2];\n        });\n        for(int hi=0, vi=0; hi<m-1 or vi<n-1; ){\n            int hc = hi==m-1?0:horizontalCut[idx_h[hi]];\n            int vc = vi==n-1?0:verticalCut[idx_v[vi]];\n            if(hc>vc){\n                ans += hc*(vi+1);\n                ++hi;\n            } else {\n                ans += vc*(hi+1);\n                ++vi;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925928",
    "subm_id": "546442904"
}