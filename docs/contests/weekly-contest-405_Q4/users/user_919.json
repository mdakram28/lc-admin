{
    "username": "Groker",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        MAXC = max(costs) * n + 42\n        cos = {}\n        for i in range(len(words)):\n            if words[i] in cos:\n                cos[words[i]] = min(cos[words[i]], costs[i])\n            else:\n                cos[words[i]] = costs[i]\n        dp = [MAXC] * (n+1)\n        dp[n] = 0\n        for i in reversed(range(n)):\n            t = target[i:]\n            mini = MAXC\n            for c in cos:\n                if t.startswith(c):\n                    # if i + len(c) > n:\n                    #     print(i, t, c, len(dp), n)\n                    mini = min(mini, dp[i+len(c)] + cos[c])\n            dp[i] = mini\n        ans = dp[0]\n        # @cache\n        # def cost_of(t): # t for target\n        #     if t == \"\":\n        #         return 0\n        #     ans = []\n        #     for c in cos:\n        #         if t.startswith(c):\n        #             ans.append(cost_of(t[len(c):])+cos[c])\n        #     if len(ans) > 0:\n        #         return min(ans)\n        #     else:\n        #         return MAXC\n        # ans = cost_of(target)\n        if ans >= MAXC:\n            return -1\n        return ans",
    "submit_ts": "1720322778",
    "subm_id": "1312358888"
}