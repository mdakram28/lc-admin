{
    "username": "distracted-i3lackwello2n",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0, cnt = 0, ok = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (i > n - 1 - i || j > m - 1 - j) continue;\n                if (i < n - 1 - i && j < m - 1 - j) {\n                    int num = 0;\n                    num += grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                    ans += std::min(4 - num, num);\n                }\n                else {\n                    if (i == n - 1 - i && j == m - 1 - j) {\n                        ans += grid[i][j];\n                    }\n                    else {\n                        if (i == n - 1 - i) {\n                            if (grid[i][j] && grid[i][m - 1 - j]) cnt++;\n                            else {\n                                ans += grid[i][j] + grid[i][m - 1 - j];\n                                if (grid[i][j] ^ grid[i][m - 1 - j]) ok = 1;\n                            } \n                        }\n                        else {\n                            if (grid[i][j] && grid[n - 1 - i][j]) cnt++;\n                            else {\n                                ans += grid[i][j] + grid[n - 1 - i][j];\n                                if (grid[i][j] ^ grid[n - 1 - i][j]) ok = 1;\n                            } \n                        }\n                    }\n                }\n            }\n        }\n        return ans + (((cnt & 1) && (!ok)) ? 2 : 0);\n    }\n};\n",
    "submit_ts": "1722699277",
    "subm_id": "552274940"
}