{
    "username": "ritikyadav1819",
    "submission": "class Solution {\npublic:\n\n    int handleCenterElement(vector<vector<int>>& grid, int n, int m) {\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    void handleMiddleRow(vector<vector<int>>& grid, int n, int m, vector<int>& shift) {\n        int a = 0, b = m - 1;\n        while (a < b) {\n            int sm = grid[n / 2][a] + grid[n / 2][b];\n            shift[sm] += 1;\n            a += 1;\n            b -= 1;\n        }\n    }\n\n    void handleMiddleColumn(vector<vector<int>>& grid, int n, int m, vector<int>& shift) {\n        int a = 0, b = n - 1;\n        while (a < b) {\n            int sm = grid[a][m / 2] + grid[b][m / 2];\n            shift[sm] += 1;\n            a += 1;\n            b -= 1;\n        }\n    }\n\n    int handleShifts(vector<int>& shift) {\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                return shift[1];\n            } else {\n                return 2;\n            }\n        } else {\n            return shift[1];\n        }\n    }\n\n    int processGrid(vector<vector<int>>& grid, int n, int m) {\n        int flips = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    flips += min(sm, 4 - sm);\n                }\n            }\n        }\n        return flips;\n    }\n    \n    \n    int minFlips(vector<vector<int>>& grid) {\n         int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n\n           ans += handleCenterElement(grid, n, m);\n\n        vector<int> shift(3, 0);\n\n  \n        if (n % 2 == 1) {\n            handleMiddleRow(grid, n, m, shift);\n        }\n\n        if (m % 2 == 1) {\n            handleMiddleColumn(grid, n, m, shift);\n        }\n\n        ans += handleShifts(shift);\n\n        ans += processGrid(grid, n, m);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699721",
    "subm_id": "1343220282"
}