{
    "username": "tannu8597",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int N = colors.size(); \n        int count = 0; \n\n        if (k == 1) { \n            return N; \n        } \n        int alter = 1; \n        int i = 1; \n        while (i < N + k - 1) { \n            int curr = i; \n            int prev = i - 1; \n \n           \n            if (curr >= N) { \n                curr -= N; \n            } \n            if (prev >= N) { \n                prev -= N; \n            } \n \n            if (colors[curr] != colors[prev]) { \n                ++alter; \n            } else { \n                alter = 1; \n            } \n \n           \n            if (alter >= k) { \n                ++count; \n            } \n \n            ++i; \n        } \n         return count; \n\n \n\n\n    }\n};",
    "submit_ts": "1720279686",
    "subm_id": "1311761112"
}