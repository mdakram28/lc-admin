{
    "username": "nordic1",
    "submission": "int mod = 1e9 + 7;\nclass Solution {\npublic:\n    int dp[305][405];\n    \n    int solve(int idx, int k, vector <int> &arr){\n        // cout<<\"at top \"<<idx<<\" \"<<k<<endl;\n        if(k < 0) return 0;\n        \n        if(dp[idx][k] != -1) return dp[idx][k];\n        // if(arr[idx] != -1 && arr[idx] != k) return dp[idx][k] = 0;\n        if(idx == 0){\n            if(k == 0) return dp[idx][k] = 1;\n            else return dp[idx][k]= 0;\n        }\n        \n        int ans = 0;\n        ans = (solve(idx, k-1, arr) + solve(idx - 1, k, arr)) % mod;\n        ans = (ans - solve(idx -1 , k - idx, arr) + mod) % mod;\n        // cout<<idx<<\" \"<<k<<\" \"<<ans<<endl;\n        return dp[idx][k] = ans;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        sort(req.begin(), req.end());\n        vector <int> arr(n + 1, -1);\n        for(int i = 0; i < req.size(); i++){\n            arr[req[i][0] + 1] = req[i][1];\n        }\n        // for(auto i : arr) cout<<i<<\" \";\n        // cout<<endl;\n        memset(dp, -1, sizeof(dp));\n        int ans = 0;\n        for(int i =0 ; i < req.size(); i++){\n            int idx = req[i][0] + 1;\n            int val = req[i][1];\n            ans = solve(idx, val, arr);\n            for(int j = 0; j <= 400; j++) {\n                if(j != val)\n                    dp[idx][j] = 0;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719070850.0
}