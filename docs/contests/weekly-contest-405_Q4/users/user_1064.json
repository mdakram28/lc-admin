{
    "username": "shreyd26",
    "submission": "/**\n * @param {string} target\n * @param {string[]} words\n * @param {number[]} costs\n * @return {number}\n */\nclass TrieNode {\n    constructor() {\n        this.children = {};\n        this.isEndOfWord = false;\n    }\n}\n\nclass Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n\n    addWord(word,cost) {\n        let current = this.root;\n        for (let char of word) {\n            if (!current.children[char]) {\n                current.children[char] = new TrieNode();\n            }\n            current = current.children[char];\n        }\n        current.isEndOfWord = true;\n        current.cost = Math.min(cost, current.cost ?? Infinity);\n    }\n}\n\nvar minimumCost = function(target, words, costs) {\n    const n = target.length;\n    const trie = new Trie();\n    for(let i=0;i<words.length;i++){\n        trie.addWord(words[i],costs[i]);\n    }\n    const dp = new Array(n).fill(-1);\n    const helper = (i) => {\n        if(i===n) return 0;\n        if(dp[i]!==-1) return dp[i];\n        let str = '';\n        let minCost = Infinity;\n        let curr = trie.root;\n        for(let j=i;j<n;j++){\n            str+=target[j];\n            if(!curr.children[target[j]]) break;\n            curr = curr.children[target[j]];\n            if(curr.isEndOfWord) {\n                minCost = Math.min(minCost, curr.cost + helper(j+1));\n            }\n        }\n        return dp[i] = minCost;\n    }\n    const cost = helper(0);\n    return cost === Infinity ? -1 : cost;\n};",
    "submit_ts": "1720323058",
    "subm_id": "1312366247"
}