{
    "username": "user8629ED",
    "submission": "class Solution {\npublic:\n      long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        map<long long, long long>mp1,mp2;\n        long long ct = 0;\n        for (int i=0;i<n;i++){\n            mp2.clear();mp2[nums[i]]=1;\n            if (nums[i] == k) ++ct;\n            for (auto& it: mp1){\n                long long ans= it.first&nums[i];\n                mp2[ans] += 1LL*it.second;\n                if (ans==k) ct+=1LL*it.second;\n            }\n            \n            mp1=mp2;\n        }\n        return ct;\n    }\n    // long long countSubarrays(vector<int>& nums, int k) {\n    //     long long n = nums.size(),ct = 0;\n    // for (int i = 0; i < n; ++i) {\n    //     int ans = nums[i];\n    //     if (ans == k) ct++;\n    //     for (int e = i + 1; e < n; ++e) {\n    //         ans &= nums[e];\n    //         if (ans == k) ct++;\n    //         else if (ans < k) break; \n    //     }\n    // }\n    // return n; \n    // }\n};",
    "submit_ts": "1720280488",
    "subm_id": "1311791232"
}