{
    "username": "ju_mbo",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long int nn = horizontalCut.size(), mm = verticalCut.size(), hori = 0, veri = 0;\n        long long int a = 1, b = 1, ans = 0;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        while (veri < mm && hori < nn) {\n            if (verticalCut[veri] < horizontalCut[hori]){\n                ans += horizontalCut[hori] * b;\n                hori++, a++;\n            }\n            else{\n                ans += verticalCut[veri] * a;\n                veri++, b++;\n            }\n        }\n        while (hori < nn) {\n            ans += horizontalCut[hori] * b;\n            hori++;\n        }\n        while (veri < mm) {\n            ans += verticalCut[veri] * a;\n            veri++;\n        }\n        return ans;\n    }\n}; ",
    "submit_ts": "1720926284",
    "subm_id": "1320281581"
}