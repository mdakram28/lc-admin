{
    "username": "coderkb",
    "submission": "typedef pair<int, int> pi;\nclass Solution {\n    int ans;\n    map<pi, int> neg;\n    map<pi, int> pos;\n    \n    int jumpVal(int jump) {\n        return (1 << jump);\n    }\n    \n    void solve(int curr, int target, bool prevDown, int jump) {\n        // cout << curr << \" \" << prevDown << \" \" << jump << endl;\n        \n        if(curr == target) {\n            ans++;\n        }\n        \n        if(prevDown) {\n            // neg dp\n            if(neg.find({curr, jump}) != neg.end()) {\n                ans += neg[{curr, jump}];\n                return;\n            }\n        } else {\n            // pos dp\n            if(pos.find({curr, jump}) != pos.end()) {\n                ans += pos[{curr, jump}];\n                return;\n            }\n        }\n        \n        if(curr > target + 2) return;\n        \n        int prevAns = ans;\n        // jump option\n        solve(curr + jumpVal(jump), target, false, jump + 1);\n        \n        if(!prevDown) {\n            // can perform down\n            solve(curr - 1, target, true, jump);\n        }\n        \n        if(prevDown) {\n            // neg dp\n            neg[{curr, jump}] = ans - prevAns;\n        } else {\n            // pos dp\n            pos[{curr, jump}] = ans - prevAns;\n        }\n    }\npublic:\n    int waysToReachStair(int k) {\n        if(k == 0) return 2;\n        \n        ans = 0;\n        \n        solve(1, k, false, 0);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1716089209",
    "subm_id": "1261836092"
}