{
    "username": "zhang-yuan-long",
    "submission": "\nclass Solution {\npublic:\n\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int i = 0;\n        int ans = 0;\n        for (int i = 0; i < n - i - 1; i++) {\n            for (int j = 0; j < m - j - 1; j++) {\n                int c[2] = { 0 };\n                c[grid[i][j]]++;\n                c[grid[i][m - j - 1]]++;\n                c[grid[n - i - 1][j]]++;\n                c[grid[n - i - 1][m - j - 1]]++;\n                ans += min(c[0], c[1]);\n            }\n        }\n        \n        int pairs = 0;\n        int c[2] = { 0 };\n\n        if (n % 2) {\n            for (int j = 0; j < m - j - 1; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) pairs++;\n                else {\n                    c[grid[n / 2][j]] += 2;\n                }\n            }\n        }\n        if (m % 2) {\n            for (int j = 0; j < n - j - 1; j++) {\n                if (grid[j][m / 2] != grid[n - j - 1][m / 2]) pairs++;\n                else\n                    c[grid[j][m / 2]] += 2;\n            }\n        }\n        //printf(\"%d %d %d %d\\n\", ans, pairs, c[0], c[1]);\n        ans += pairs ;\n        if (c[1] % 4 && pairs < 1) {\n            ans+=2;\n        }\n\n        if (m % 2 && n % 2) {\n            ans += grid[n / 2][m / 2];\n        }\n        return ans;\n\n\n    }\n};",
    "submit_ts": "1722697459",
    "subm_id": "552266238"
}