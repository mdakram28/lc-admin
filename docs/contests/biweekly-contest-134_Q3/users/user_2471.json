{
    "username": "Adityabhartiit",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& array, int k) {\n    int arraySize = array.size();\n    int numberOfSubarraysFound = 0;\n    int currentIndex = 0;\n    int nextIndex = 1;\n\n    while (nextIndex < arraySize + k && currentIndex < arraySize) {\n        int tempNextIndex = nextIndex;\n        int tempEndIndex = tempNextIndex % arraySize;\n\n        while (array[tempEndIndex] != array[(tempEndIndex - 1 + arraySize) % arraySize] && tempNextIndex < (arraySize + k - 1)) {\n            tempNextIndex += 1;\n            tempEndIndex = tempNextIndex % arraySize;\n        }\n\n        numberOfSubarraysFound += max(tempNextIndex - currentIndex - k + 1, 0);\n        currentIndex = tempNextIndex;\n        nextIndex = currentIndex + 1;\n    }\n\n    return numberOfSubarraysFound;\n    }\n};",
    "submit_ts": "1720280634",
    "subm_id": "544572738"
}