{
    "username": "_global",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        Tree obj = new Tree(n);\n        List<Integer> res = new ArrayList<>();\n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]) obj.update(i,1);\n        }\n        for(int q[] : queries){\n            if(q[0]==1){\n                int l=q[1],r=q[2];\n                int ans = obj.query(l,r);\n                if(l!=0 && l+1<n  && nums[l]>nums[l-1] && nums[l]>nums[l+1]) ans--;\n                if(r != n-1 && r-1>=0 && nums[r]>nums[r-1] && nums[r]>nums[r+1]) ans--;\n                res.add(Math.max(0,ans));\n            } else {\n                int idx = q[1];\n                int val = q[2];\n                if(idx==n-1){\n                    if(nums[idx-1]>nums[idx] && nums[idx-1] > nums[idx-2]) obj.update(idx-1,-1);\n                    nums[idx]=val;\n                    if(nums[idx-1]>nums[idx] && nums[idx-1] > nums[idx-2]) obj.update(idx-1,1);\n                } else if(idx==0){\n                    if(nums[idx+1]>nums[idx] && nums[idx+1] > nums[idx+2]) obj.update(idx+1,-1);\n                    nums[idx]=val;\n                    if(nums[idx+1]>nums[idx] && nums[idx+1] > nums[idx+2]) obj.update(idx+1,1);\n                } else{\n                    if(idx-2>=0 && nums[idx-1]>nums[idx] && nums[idx-1] > nums[idx-2]) obj.update(idx-1,-1);\n                    if(idx+2<n && nums[idx+1]>nums[idx] && nums[idx+1] > nums[idx+2]) obj.update(idx+1,-1);\n                    if(nums[idx]>nums[idx-1] && nums[idx]>nums[idx+1]) obj.update(idx,-1);\n                    nums[idx]=val;\n                    if(idx-2>=0 && nums[idx-1]>nums[idx] && nums[idx-1] > nums[idx-2]) obj.update(idx-1,1);\n                    if(idx+2<n && nums[idx+1]>nums[idx] && nums[idx+1] > nums[idx+2]) obj.update(idx+1,1);\n                    if(nums[idx]>nums[idx-1] && nums[idx]>nums[idx+1]) obj.update(idx,1);\n                }\n            }\n        }\n        return res;\n    }\n}\nclass Tree{\n    int n;\n    int bit[];\n    public Tree(int n){\n        this.n = n+1;\n        this.bit = new int[this.n];\n    }\n    public void update(int idx,int val){\n        idx++;\n        for(int i=idx;i<n;i+=(i&(-i))) bit[i]+=val;\n    }\n    public int query(int l,int r){\n        return sum(r)-sum(l-1);\n    }\n    public int sum(int idx){\n        idx++;\n        int val=0;\n        for(int i=idx;i>0;i-=(i&(-i))) val+=bit[i];\n        return val;\n    }\n}",
    "submit_ts": "1718507187",
    "subm_id": "1289643880"
}