{
    "username": "qslt916",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int result = 0;\n        int row_count = grid.size();\n        int col_count = grid[0].size();\n        \n        for (int i = 0; i < row_count / 2; ++i)\n        {\n            for (int j = 0; j < col_count / 2; ++j)\n            {\n                int one_count = grid[i][j] + grid[i][col_count - 1 - j] + grid[row_count - 1 - i][j] + grid[row_count - 1 - i][col_count - 1 - j];\n                result += min(one_count, 4 - one_count);\n            }\n        }\n        \n        int left_different_count = 0;\n        int left_one_count = 0;\n        if (row_count % 2 == 1)\n        {\n            for (int col = 0; col < col_count / 2; ++col)\n            {\n                if (grid[row_count / 2][col] != grid[row_count / 2][col_count - 1- col])\n                    left_different_count++;\n                else\n                {\n                    if (grid[row_count / 2][col] == 1)\n                        left_one_count += 2;\n                }\n            }\n        }\n        \n        if (col_count % 2 == 1)\n        {\n            for (int row = 0; row < row_count / 2; ++row)\n            {\n                if (grid[row][col_count / 2] != grid[row_count - 1 - row][col_count / 2])\n                    left_different_count++;\n                else\n                {\n                    if (grid[row][col_count / 2] == 1)\n                        left_one_count += 2;\n                }\n            }\n        }\n        \n        result += left_different_count;\n        if (left_different_count == 0 && left_one_count % 4 != 0)\n            result += 2;\n        \n        if (row_count % 2 == 1 && col_count % 2 == 1 && grid[row_count / 2][col_count / 2])\n            result++;\n        \n        return result;\n    }\n};",
    "submit_ts": "1722699090",
    "subm_id": "552274037"
}