{
    "username": "zzjjbb",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        p = sorted((x + y, i) for i, (x, y) in enumerate(points))\n        n = sorted((x - y, i) for i, (x, y) in enumerate(points))\n        # print(p, n)\n        pall = p[-1][0] - p[0][0]\n        pl = p[-2][0] - p[0][0]\n        pr = p[-1][0] - p[1][0]\n        nall = n[-1][0] - n[0][0]\n        nl = n[-2][0] - n[0][0]\n        nr = n[-1][0] - n[1][0]\n        ans = max(pall, nall)\n\n        if pall <= nall:\n            pl, pr, pall, nl, nr, nall, p, n = nl, nr, nall, pl, pr, pall, n, p\n        # print(pl, pr, pall, nl, nr, nall)\n        # print(p, n)\n            \n        if p[-1][1] == n[0][1] :\n            ans = min(ans, max(pl, nr))\n            # print(\"nr\")\n        if p[-1][1] == n[-1][1]:\n            ans = min(ans, max(pl, nl))\n            # print(\"nl\")\n        ans = min(ans, max(pl, nall))\n\n        if p[0][1] == n[0][1] :\n            ans = min(ans, max(pr, nr))\n        if p[0][1] == n[-1][1]:\n            ans = min(ans, max(pr, nl))\n        ans = min(ans, max(pr, nall))\n        return ans\n\n                \n        "
}