{
    "username": "MonoLithh",
    "submission": "class Solution {\npublic:\n      //logic ->https://www.geeksforgeeks.org/bitwise-and-of-sub-array-closest-to-k/  and template of my own \n       int  result(int a, int b)\n       {\n         return a&b; // desired changes are needed here \n       } \n       void build_tree(int node, int a, int b,vector<int>&arr, vector<int>&t) {\n           if(a > b) return; // Out of range\n\n           if(a == b) { // Leaf node\n               t[node] = arr[a]; // Init value\n           return;\n         }\n\n         build_tree(node*2, a, (a+b)/2,arr,t); // Init left child\n         build_tree(node*2+1, 1+(a+b)/2, b,arr,t); // Init right child\n\n         t[node] = result(t[node*2], t[node*2+1]); // Init root value\n       }\n\n\n       /**\n        * Query tree to get max element value within range [i, j]\n        */\n       int query_tree(int node, int a, int b, int i, int j,vector<int>&t) {\n\n         if(a > b || a > j || b < i) return ((1<<30)-1); // Out of range\n\n         if(a >= i && b <= j) // Current segment is totally within range [i, j]\n           return t[node];\n\n         int q1 = query_tree(node*2, a, (a+b)/2, i, j,t); // Query left child\n         int q2 = query_tree(1+node*2, 1+(a+b)/2, b, i, j,t); // Query right child\n\n         int res = result(q1, q2); // Return final result\n\n         return res;\n       }\n    int minimumDifference(vector<int>& nums, int k) {\n       int n=nums.size();\n       vector<int>t(4*n+5);\n       build_tree(1,0,n-1,nums,t);\n       int ans=INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid;\n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (query_tree(1,0,n-1,i, mid,t) >= k)\n                    l = mid;\n                else\n                    r = mid;\n            }\n            if (l != i - 1)\n                ans = min(ans, abs(query_tree(1,0,n-1,i, l,t) - k));\n            ans = min(ans, abs(k - query_tree(1,0,n-1,i, r,t)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297292.0
}