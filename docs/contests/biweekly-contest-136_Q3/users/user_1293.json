{
    "username": "lmuddapati",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m=grid.size();\n        int n=grid[0].size();\n        \n        int val=0;\n        if(m%2!=0&&n%2!=0){\n            if(grid[(m/2)][(n/2)]==1){\n                val++;\n                grid[(m/2)][(n/2)]=0;\n            }\n            int k=0;\n            int nof1=0;\n            for(int i=0;i<m;i++){\n                if(grid[i][n/2]==1){\n                    nof1++;\n                }\n                k+=abs(grid[i][n/2]-grid[m-1-i][n/2]);\n            }\n            for(int i=0;i<n;i++){\n                if(grid[m/2][i]==1){\n                    nof1++;\n                }\n                k+=abs(grid[m/2][i]-grid[m/2][n-1-i]);\n            }\n            k/=2;\n            val+=k;\n            if((k+nof1)%4==2){\n                if(k==0){\n                    val+=2;\n                }\n            }\n            \n        }\n        else if(m%2==0&&n%2==1){\n            int k=0;\n            int nof1=0;\n            for(int i=0;i<m;i++){\n                if(grid[i][n/2]==1){\n                    nof1++;\n                }\n                k+=abs(grid[i][n/2]-grid[m-1-i][n/2]);\n            }\n            k/=2;\n            val+=k;\n            if((k+nof1)%4==2){\n                if(k==0){\n                    val+=2;\n                }\n            }\n        } \n        else if(m%2!=0&&n%2==0){\n            int k=0;\n            int nof1=0;\n            for(int i=0;i<n;i++){\n                if(grid[m/2][i]==1){\n                    nof1++;\n                }\n                k+=abs(grid[(m/2)][i]-grid[(m/2)][n-1-i]);\n            }\n            k/=2;\n            val+=k;\n            if((k+nof1)%4==2){\n                if(k==0){\n                    val+=2;\n                }\n            }\n        }\n        \n        int ans=0;\n        for(int i=0;i< (m/2);i++){\n            for(int j=0;j<(n/2);j++){\n                 ans+=min(4-(grid[i][j]+grid[m-1-i][j]+grid[i][n-1-j]+grid[m-1-i][n-1-j]),(grid[i][j]+grid[m-1-i][j]+grid[i][n-1-j]+grid[m-1-i][n-1-j]));\n            }\n        }\n        \n        // cout<<ans<<endl;\n        return (ans+val);\n    }\n};",
    "submit_ts": "1722699439",
    "subm_id": "1343211679"
}