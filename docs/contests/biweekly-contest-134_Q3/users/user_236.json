{
    "username": "blissful-nevvtonifl",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> tmp = colors;\n        int n = colors.size();\n        vector<int> dp(2 * n + 1, 0);\n        tmp.insert(tmp.end(), colors.begin(), colors.end());\n        for(int i = 0; i < n * 2; i++){\n            if(i == 0) continue;\n            if(i > 0 && tmp[i] == tmp[i - 1]) {\n                int l = max(0, i - k + 1), r = i;\n                dp[l]++, dp[r]--;\n                //cout << i << ' ' << l << ' ' << r << endl;\n            }\n        }\n        int ans = (dp[0] == 0);\n        for(int i = 1; i < n; i++){\n            dp[i] += dp[i - 1];\n            if(dp[i] == 0)\n                ans++;\n            //printf(\"dp[%d] = %d \", i, dp[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278496",
    "subm_id": "544562871"
}