{
    "username": "EmZie",
    "submission": "/*\n    30 September 2023\n    Others leetcode\n*/\n\n#ifndef __DEBUG__\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#endif\n\n#undef __INTERACTIVE__\n\n#include <bits/stdc++.h>\n#define pb push_back\n#define mp make_pair\n#define fr first\n#define sc second\n#define pyes cout << \"YES\" //\"Yes\"\n#define pno cout << \"NO\"   //\"No\"\n#define fastio ios_base::sync_with_stdio(0)\n#define untie cin.tie(0)\n#define rep(i, n) for (int i = 0; i < (n); i++)\n#define repe(i, n) for (int i = 1; i <= (n); i++)\n#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)\n#define rrepe(i, n) for (int i = (n); i > 0; i--)\n#define ms(a, b) memset(a, b, sizeof a)\n#define a2z(x) (x).begin(), (x).end()\n#define z2a(x) (x).rbegin(), (x).rend()\n#define gsz(v) ((int)(v).size())\n#define MOD 1000000007 // 998244353\n#define MAX 1000005\n\n#if !defined(__INTERACTIVE__) && !defined(__DEBUG__)\n#define endl \"\\n\"\n#endif\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\n\nusing vb = vector<bool>;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing vpii = vector<pair<int, int>>;\n\nusing vvb = vector<vector<bool>>;\nusing vvi = vector<vector<int>>;\nusing vvl = vector<vector<ll>>;\nusing vvpii = vector<vector<pair<int, int>>>;\n\nusing mii = map<int, int>;\nusing umii = unordered_map<int, int>;\nusing seti = set<int>;\nusing useti = unordered_set<int>;\n\ntemplate <class T, class OP>\nclass SegmentTree\n{\n    vector<T> t;\n    void build()\n    {\n        for (int i = n - 1; i > 0; --i)\n            t[i] = OP()(t[i << 1], t[i << 1 | 1]);\n    }\n\npublic:\n    int n;\n\n    SegmentTree(int nn)\n    {\n        n = nn;\n        t = vector<T>(n << 1);\n    }\n\n    SegmentTree(vector<T> v)\n    {\n        n = v.size();\n        t = vector<T>(n << 1);\n        for (int i = 0; i < n; ++i)\n            t[i + n] = v[i];\n        build();\n    }\n\n    void update(int p, T value)\n    {\n        for (t[p += n] = value; p > 1; p >>= 1)\n            t[p >> 1] = OP()(t[p], t[p ^ 1]);\n    }\n\n    T query(int l, int r)\n    {\n        if (l == n)\n            return 0;\n        r++;\n        T res = OP::initVal;\n        for (l += n, r += n; l < r; l >>= 1, r >>= 1)\n        {\n            if (l & 1)\n                res = OP()(res, t[l++]);\n            if (r & 1)\n                res = OP()(res, t[--r]);\n        }\n        return res;\n    }\n};\n\ntemplate <class T>\nclass Max\n{\npublic:\n    static const T initVal = numeric_limits<T>::min();\n    T operator()(T x, T y)\n    {\n        return max(x, y);\n    }\n};\n\nnamespace std\n{\n\n    template <class Fun>\n    class y_combinator_result\n    {\n        Fun fun_;\n\n    public:\n        template <class T>\n        explicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\n\n        template <class... Args>\n        decltype(auto) operator()(Args &&...args)\n        {\n            return fun_(std::ref(*this), std::forward<Args>(args)...);\n        }\n    };\n\n    template <class Fun>\n    decltype(auto) y_combinator(Fun &&fun)\n    {\n        return y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\n    }\n\n}\n\nclass Solution\n{\npublic:\n    int maximumLength(vector<int> &nums, int k)\n    {\n        int n = gsz(nums);\n        vi nextDiff(n);\n        umii m;\n        rrep(i, n)\n        {\n            if (m.find(nums[i]) == m.end())\n                nextDiff[i] = n;\n            else\n                nextDiff[i] = m[nums[i]];\n\n            m[nums[i]] = i;\n        }\n\n        vector<SegmentTree<int, Max<int>>> memo(k + 1, SegmentTree<int, Max<int>>(n));\n\n        rep(left, k + 1)\n            rrep(i, n)\n        {\n            int res = 0;\n            if (nextDiff[i] != i + 1 && left)\n            {\n                res = 1 + memo[left - 1].query(i + 1, nextDiff[i] - 1);\n            }\n\n            res = max(res, 1 + memo[left].query(nextDiff[i], nextDiff[i]));\n\n            memo[left].update(i, res);\n        }\n\n        return memo[k]\n            .query(0, n - 1);\n    }\n};",
    "submit_ts": 1717859799.0
}