{
    "username": "Aryan_1202",
    "submission": "\nclass Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int n = grid.size(), m = grid[0].size(); \n        int answer = 0; \n         \n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                answer += 1; \n            } \n        } \n \n        vector<int> shit(3, 0); \n        if (n % 2 == 1) { \n            int aish = 0, bash = m - 1; \n            while (aish < bash) { \n                int sruti= grid[n / 2][aish] + grid[n / 2][bash]; \n                shit[sruti] += 1; \n                aish += 1; \n                bash -= 1; \n            } \n        } \n \n        if (m % 2 == 1) { \n            int aish = 0, bash = n - 1; \n            while (aish < bash) { \n                int sruti = grid[aish][m / 2] + grid[bash][m / 2]; \n                shit[sruti] += 1; \n                aish += 1; \n                bash -= 1; \n            } \n        } \n \n        if (shit[2] % 2 == 1) { \n            if (shit[1] > 0) { \n                answer += shit[1]; \n            } else { \n                answer += 2; \n            } \n        } else { \n            answer += shit[1]; \n        } \n \n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int at = grid[i][j]; \n                int bt = grid[n - 1 - i][j]; \n                int ct = grid[i][m - 1 - j]; \n                int dt = grid[n - 1 - i][m - 1 - j]; \n \n                int smt = at + bt + ct + dt; \n \n                if (smt != 0 && smt != 4) { \n                    answer += min(smt, 4 - smt); \n                } \n            } \n        } \n \n        return answer; \n    } \n};\n",
    "submit_ts": "1722699796",
    "subm_id": "1343222591"
}