{
    "username": "ywwbill",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diffs = [nums[i] - target[i] for i in range(n)]\n        temp = []\n        num_ops = 0\n        for d in diffs:\n            if d == 0:\n                if len(temp) > 0:\n                    num_ops += self.calc_ops(temp)\n                temp = []\n            elif d > 0:\n                if len(temp) == 0 or temp[-1] > 0:\n                    temp.append(d)\n                else:\n                    num_ops += self.calc_ops(temp)\n                    temp = [d]\n            else:\n                if len(temp) == 0 or temp[-1] < 0:\n                    temp.append(d)\n                else:\n                    num_ops += self.calc_ops(temp)\n                    temp = [d]\n        if len(temp) > 0:\n            num_ops += self.calc_ops(temp)\n        return num_ops\n\n    def calc_ops(self, target: List[int]) -> int:\n        num_ops = abs(target[0])\n        for i in range(1, len(target)):\n            num_ops += max(abs(target[i]) - abs(target[i - 1]), 0)\n        return num_ops",
    "submit_ts": "1721530213",
    "subm_id": "548376861"
}