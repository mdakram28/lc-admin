{
    "username": "admiring-i3lackwellsf6",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        #\u5bf9\u4e24\u4e2a\u65b9\u5411\u7684cost\u8fdb\u884c\u6392\u5e8f\uff0c\u65b9\u4fbf\u6211\u4eec\u9009\u62e9\u6700\u9ad8\u7684cost\n        horizontalCut.sort(reverse = True)\n        verticalCut.sort(reverse = True)\n\n        h_pieces, v_pieces = 1, 1\n        tot_cost = 0\n        h, v = 0, 0\n\n        while h < len(horizontalCut) and v < len(verticalCut):\n            if horizontalCut[h] > verticalCut[v]:\n                tot_cost += horizontalCut[h] * v_pieces\n                h_pieces += 1\n                h += 1\n            else:\n                tot_cost += verticalCut[v] * h_pieces\n                v_pieces += 1\n                v += 1\n        \n        # If there are remaining horizontal cuts\n        while h < len(horizontalCut):\n            tot_cost += horizontalCut[h] * v_pieces\n            h += 1\n        \n        # If there are remaining vertical cuts\n        while v < len(verticalCut):\n            tot_cost += verticalCut[v] * h_pieces\n            v += 1\n        \n        return tot_cost",
    "submit_ts": "1720925806",
    "subm_id": "546442070"
}