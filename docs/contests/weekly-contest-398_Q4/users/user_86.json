{
    "username": "LayCurse",
    "submission": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"inline\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define main dummy_main\nint main(){\n  return 0;\n}\n#undef main\nmap<tuple<long long,long long,long long,int>,int> solve_cL_memo_map;\nint solve_cL_func(long long s, long long t, long long j, int f );\nint solve(long long s,long long t,long long j,int f){\n  auto it = solve_cL_memo_map.find({s,t,j,f});\n  if(it != solve_cL_memo_map.end()){\n    return it->second;\n  }\n  return solve_cL_memo_map[{s,t,j,f}] = solve_cL_func(s,t,j,f);\n}\nvoid solve_clear(){\n  solve_cL_memo_map.clear();\n}\nint solve_cL_func(long long s, long long t, long long j, int f ){\n  int res = 0;\n  if(s > t+1){\n    return 0;\n  }\n  if(s == t){\n    res++;\n  }\n  {\n    int x;\n    int y;\n    x = (s % (1<<j));\n    y = (t % (1<<j));\n    if(x < y){\n      x += (1<<j);\n    }\n    if(x > y + 50){\n      return res;\n    }\n  }\n  if(f && s){\n    res += solve(s-1, t, j, 0);\n  }\n  res += solve(s + (1<<j), t, j+1, 1);\n  return res;\n}\nclass Solution{\n  public:\n  int waysToReachStair(int k){\n    return solve(1, k, 0, 1);\n  }\n}\n;\n// cLay version 20240420-1\n\n// --- original code ---\n// #define main dummy_main\n// {}\n// #undef main\n// \n// \n// int solve(ll s, ll t, ll j, int f : Memoize){\n//   int res = 0;\n//   if(s > t+1) return 0;\n//   if(s == t) res++;\n// \n//   {\n//     int x, y;\n//     x = (s % (1<<j));\n//     y = (t % (1<<j));\n//     if(x < y) x += (1<<j);\n//     if(x > y + 50) return res;\n//   }\n// \n//   if(f && s) res += solve(s-1, t, j, 0);\n//   res += solve(s + (1<<j), t, j+1, 1);\n// \n//   return res;\n// }\n// \n// \n// class Solution {\n// public:\n//   int waysToReachStair(int k) {\n//     return solve(1, k, 0, 1);\n//   }\n// };\n",
    "submit_ts": 1716087072.0
}