{
    "username": "l1l2",
    "submission": ";\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        \n        vector<int> sum(n), diff(n);\n        for (int i = 0; i < n; ++i) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        \n        int minSum = *min_element(sum.begin(), sum.end());\n        int maxSum = *max_element(sum.begin(), sum.end());\n        int minDiff = *min_element(diff.begin(), diff.end());\n        int maxDiff = *max_element(diff.begin(), diff.end());\n        \n      \n        int globalMax = max(maxSum - minSum, maxDiff - minDiff);\n        \n        int result = globalMax;\n        for (int i = 0; i < n; ++i) {\n            \n            int localMinSum = minSum, localMaxSum = maxSum, localMinDiff = minDiff, localMaxDiff = maxDiff;\n           \n            if (sum[i] == minSum || sum[i] == maxSum || diff[i] == minDiff || diff[i] == maxDiff) {\n                vector<int> sumTemp = sum, diffTemp = diff;\n                sumTemp.erase(sumTemp.begin() + i);\n                diffTemp.erase(diffTemp.begin() + i);\n               \n                localMinSum = *min_element(sumTemp.begin(), sumTemp.end());\n                localMaxSum = *max_element(sumTemp.begin(), sumTemp.end());\n                localMinDiff = *min_element(diffTemp.begin(), diffTemp.end());\n                localMaxDiff = *max_element(diffTemp.begin(), diffTemp.end());\n            }\n            \n            int localMax = max(localMaxSum - localMinSum, localMaxDiff - localMinDiff);\n            \n            result = min(result, localMax);\n        }\n        \n        return result;\n    }\n};\n"
}