{
    "username": "Muskan_agarwal",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        Comparator<Pair<Integer, Integer>> pairComparator = (p1, p2) -> {\n            int firstCompare = Integer.compare(p2.getValue(), p1.getValue());\n            if(firstCompare==0) {\n                return Integer.compare(p1.getKey(), p2.getKey());\n            }else {\n                return firstCompare;\n            }\n        };\n        Map<Integer, Integer> diff = new HashMap<>();\n        for(int i=0; i<nums.length/2; i++) {\n            int curr = Math.abs(nums[nums.length-1-i]- nums[i]);\n            diff.put(curr, diff.getOrDefault(curr,0)+1);\n        }\n\n        PriorityQueue<Pair<Integer, Integer>> pq = new PriorityQueue<>(pairComparator);\n\n        for(Map.Entry<Integer, Integer> entry : diff.entrySet()) {\n            pq.add(new Pair<>(entry.getKey(), entry.getValue()));\n        }\n\n        int ans = nums.length;\n        \n        while(!pq.isEmpty()) {\n            Pair<Integer, Integer> pqElement = pq.poll();\n            Integer reqDiff = pqElement.getKey();\n            Integer minAns = (nums.length/2) - pqElement.getValue();\n            if(ans<=minAns) {\n                break;\n            }\n            int tempAns = 0;\n            for(int i=0; i<nums.length/2; i++) {\n                int curr = Math.abs(nums[nums.length-1-i]- nums[i]);\n                if(curr != reqDiff) {\n                    int check1 = Math.min(nums[i], k-nums[i]);\n                    int check2 = Math.min(nums[nums.length-1-i], k-nums[nums.length-1-i]);\n                    int minNum = Math.min(check1, check2);\n                    if(reqDiff > k-minNum) {\n                        tempAns +=2;\n                    }else{\n                        tempAns+=1;\n                    }\n                }\n            }\n            ans = Math.min(tempAns, ans);\n            // pq.poll();\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721490762",
    "subm_id": "1327492003"
}