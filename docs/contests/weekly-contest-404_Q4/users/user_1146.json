{
    "username": "godhanismit45",
    "submission": "#define ll long long int\nclass Solution {\npublic:\n    \n    void dfs(ll node,ll parent,vector<ll> adj[],vector<vector<int>> &dp){\n    dp[node][0]=0;\n    dp[node][1]=0;\n    // if(adj[node].size()==1){\n    //   dp[node][1]=1;\n    //   dp[node][0]=1;\n    //   return;\n    // }\n    for(auto i:adj[node]){\n      if(i!=parent){\n        dfs(i,node,adj,dp);\n      }\n    }\n    ll maxi1=0,maxi2=0;\n    for(auto it:adj[node]){\n      if(it!=parent){\n        if(dp[it][0]>maxi1){\n          maxi2=maxi1;\n          maxi1=dp[it][0];\n        }\n        else if(dp[it][0]>maxi2){\n          maxi2=dp[it][0];\n        }\n      }\n    }\n    dp[node][1]=1+maxi1+maxi2;\n    dp[node][0]=maxi1+1;\n} \n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<ll> adj1[n],adj2[m];\n         for(int i=0;i<n-1;i++){\n             adj1[edges1[i][0]].push_back(edges1[i][1]);\n             adj1[edges1[i][1]].push_back(edges1[i][0]);\n         }\n        for(int i=0;i<m-1;i++){\n             adj2[edges2[i][0]].push_back(edges2[i][1]);\n             adj2[edges2[i][1]].push_back(edges2[i][0]);\n         }\n          vector<vector<int>> dp1(n,vector<int> (2));\n        vector<vector<int>> dp2(m,vector<int> (2));\n          dfs(0,-1,adj1,dp1);\n        dfs(0,-1,adj2,dp2);\n        // for(auto i:dp1){\n        //     cout<<i[0]<<\" \"<<i[1]<<endl;\n        // }\n        // for(auto i:dp2){\n        //     cout<<i[0]<<\" \"<<i[1]<<endl;\n        // }\n        int maxi1=0,maxi2=0,ans1=0,ans2=0;\n        for(auto i:dp1){\n            maxi1=max(maxi1,i[0]-1);\n            maxi1=max(maxi1,i[1]-1);\n        }\n        for(auto i:dp2){\n            maxi2=max(maxi2,i[0]-1);\n            maxi2=max(maxi2,i[1]-1);\n        }\n        // if(maxi1==0 && maxi2==0) return 1;\n        // if(maxi1==0){\n        //     if(ans2==1){\n        //         return ans2+1;\n        //     }\n        //     return ans2;\n        // }\n        // if(maxi2==0){\n        //     if(ans1==1){\n        //         return ans1+1;\n        //     }\n        //     return ans1;\n        // };\n        // int ans=maxi1+maxi2+1;\n        // cout<<maxi1<<\" \"<<maxi2<<\" \"<<ans1<<\" \"<<ans2<<endl;\n        // ll ans=0;\n        // ans=max(ans,ans1);\n        // ans=max(ans,ans2);\n        // // cout<<ans<<endl;\n        // ans=max(ans,maxi1+maxi2+1);\n        int finalans=max(maxi1,maxi2);\n        finalans=max(finalans,((maxi1+1)/2+(maxi2+1)/2+1));\n        return finalans;\n    }\n};",
    "submit_ts": 1719719900.0
}