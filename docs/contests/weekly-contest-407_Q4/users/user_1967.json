{
    "username": "schrOdingerr11",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        \n        int n= nums.length;\n         int diff[] = new int[n];\n         for(int i=0;i<n;i++){\n            diff[i]=target[i]- nums[i];\n         }\n         long totalOps=0;\n         long currDiff=0;\n\n\n\n           for (int i = 0; i < n; i++) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                long additionalOperations = Math.abs(diff[i]) - Math.abs(currDiff);\n                if (additionalOperations > 0) {\n                    totalOps += additionalOperations;\n                }\n                currDiff = diff[i];\n            } else {\n                totalOps += Math.abs(diff[i]);\n                currDiff = diff[i];\n            }\n        }\n\n\n        return totalOps;\n    }\n}\n\n",
    "submit_ts": "1721533815",
    "subm_id": "1328017241"
}