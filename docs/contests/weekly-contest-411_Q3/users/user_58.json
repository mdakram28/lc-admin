{
    "username": "SHHK",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\n   public:\n    string largestPalindrome(int n, int k) {\n        vector<int> d;\n        vector<int> b(n);\n        b[0] = 1;\n        for (int i = 0; i + 1 < n; ++i) {\n            b[i + 1] = b[i] * 10 % k;\n        }\n        for (int l = 0, r = n; r - l > 0; ++l, --r) {\n            int x = b[l];\n            if (r - l > 1) {\n                x += b[r - 1];\n            }\n            d.push_back(x);\n        }\n        reverse(d.begin(), d.end());\n        int m = d.size();\n        vector<vector<int>> dp(m + 1, vector<int>(k)), pre(m + 1, vector<int>(k, -1));\n        dp[0][0] = 1;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < k; ++j) {\n                if (dp[i][j] == 0) {\n                    continue;\n                }\n                for (int x = 0; x < 10; ++x) {\n                    int nj = (j + x * d[i]) % k;\n                    dp[i + 1][nj] = 1;\n                    if (pre[i + 1][nj] == -1 || pre[i + 1][nj] < x) {\n                        pre[i + 1][nj] = x;\n                    }\n                }\n            }\n        }\n        string s;\n        for (int i = m, p = 0; i > 0; --i) {\n            int x = pre[i][p];\n            p = (p - x * d[i - 1]) % k;\n            p = (p + k) % k;\n            s += char('0' + x);\n        }\n        auto t = s;\n        reverse(s.begin(), s.end());\n        t += s.substr(m - (n - m), n - m);\n        return t;\n    }\n};",
    "submit_ts": "1723949851",
    "subm_id": "556395346"
}