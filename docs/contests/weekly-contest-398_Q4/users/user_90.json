{
    "username": "shubhammishra4623",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        Map<String, Long> mem = new HashMap<>();\n        return (int) dfs(1, 0, false, k, mem);\n    }\n\n    private long dfs(int cur, int j, boolean pd, int k, Map<String, Long> mem) {\n        if (cur > k + 1) {\n            return 0;\n        }\n\n        String key = cur + \",\" + j + \",\" + pd;\n\n        if (mem.containsKey(key)) {\n            return mem.get(key);\n        }\n\n        long cnt = 0;\n\n        if (cur == k) {\n            cnt++;\n        }\n\n        if (cur > 0 && !pd) {\n            cnt += dfs(cur - 1, j, true, k, mem);\n        }\n\n        cnt += dfs(cur + (1 << j), j + 1, false, k, mem);\n\n        mem.put(key, cnt);\n\n        return cnt;\n    }\n}\n",
    "submit_ts": 1716087388.0
}