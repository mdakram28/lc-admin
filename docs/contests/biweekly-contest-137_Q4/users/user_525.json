{
    "username": "Ying Liu",
    "submission": "typedef long long LL;\ntypedef pair<LL, LL> PLL;\n\nclass Solution {\npublic:\n    LL maximumValueSum(vector<vector<int>> &board) {\n        sort(board.begin(), board.end(), [](vector<int> &a, vector<int> &b) {\n            return *max_element(a.begin(), a.end()) > *max_element(b.begin(), b.end());\n        });\n        vector<vector<int>> board_t(board[0].size(), vector<int>(board.size()));\n        for(int i = 0; i < board.size(); i++) {\n            for(int j = 0; j < board[i].size(); j++) {\n                board_t[j][i] = board[i][j];\n            }\n        }\n        sort(board_t.begin(), board_t.end(), [](vector<int> &a, vector<int> &b) {\n            return *max_element(a.begin(), a.end()) > *max_element(b.begin(), b.end());\n        });\n        LL ret = -1e12;\n        int sz = (int)board_t.size(), csz = (int)board_t[0].size();\n        for(int i = 0; i < min(9, sz); i++) {\n            for(int j = 0; j < min(9, csz); j++) {\n                for(int k = 0; k < min(9, sz); k++) {\n                    if(k != i) {\n                        for(int l = 0; l < min(9, csz); l++) {\n                            if(l != j) {\n                                for(int m = 0; m < min(9, sz); m++) {\n                                    if(m != i && m != k) {\n                                        for(int n = 0; n < min(9, csz); n++) {\n                                            if(j != n && l != n) {\n                                                ret = max(ret, (LL)board_t[i][j] + board_t[k][l] + board_t[m][n]);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723910199",
    "subm_id": "1359221043"
}