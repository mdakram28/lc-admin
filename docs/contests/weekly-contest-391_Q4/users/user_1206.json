{
    "username": "Aakash_Negi",
    "submission": "class Solution:\n    def minimumDistance(self, A) -> int:\n        N = len(A)\n        V = [0 for i in range(N)]\n        V1 = [0 for i in range(N)]\n\n        for i in range(N):\n            V[i] = (A[i][0] + A[i][1],i)\n            V1[i] = (A[i][0] - A[i][1],i)\n\n        V.sort(key = lambda x:x[0])\n        V1.sort(key = lambda x:x[0])\n        a = V[-1][0] - V[0][0]\n        b = V1[-1][0] - V1[0][0]\n        if a > b:\n            i = self.getMax(A[0:V[-1][1]]+A[V[-1][1]+1 :])\n            j = self.getMax(A[0:V[0][1]]+A[V[0][1]+1 :])\n            return min(i,j)\n        i = self.getMax(A[0:V1[-1][1]]+A[V1[-1][1]+1 :])\n        j = self.getMax(A[0:V1[0][1]]+A[V1[0][1]+1 :])\n        return min(i,j)\n    \n    def getMax(self,A):\n        N = len(A)\n        V = [0 for i in range(N)]\n        V1 = [0 for i in range(N)]\n        for i in range(N):\n            V[i] = A[i][0] + A[i][1]\n            V1[i] = A[i][0] - A[i][1]\n\n        V.sort()\n        V1.sort()\n\n        maximum = max(V[-1] - V[0],\n                      V1[-1] - V1[0])\n\n        return maximum\n            "
}