{
    "username": "Ajit",
    "submission": "\nclass Solution {\npublic:\n    int solve(int i, int rem, int k, vector<vector<int>>& dp, vector<int>& pow10) {\n        int n = pow10.size();\n        if (i > n-i-1) {\n            return rem == 0;\n        }\n\n        if (dp[i][rem] != -1) {\n            return dp[i][rem];\n        }\n\n        int start = (i == 0 ? 1: 0);\n        bool ok = false;\n        for(int dig=start; dig<=9; dig++) {\n            int sum = (pow10[i] * dig) %k;\n            if (i != n-1-i) {\n                sum += (pow10[n-1-i] * dig);\n            } \n            sum %= k;\n            int rem1 = (rem-sum+k) % k;\n            if (solve(i+1, rem1, k, dp, pow10)) {\n                ok = true;\n                break;\n            }\n        }\n\n        return dp[i][rem] = ok;\n    }\n\n    string largestPalindrome(int n, int k) {\n        vector<vector<int>> dp(n+3, vector<int>(k, -1));\n        vector<int> pow10(n);\n        pow10[0] = 1;\n        for(int i=1; i<n; i++) {\n            pow10[i] = (pow10[i-1] * 10) % k;\n        }\n\n        solve(0, 0, k, dp, pow10);\n\n        string ans = string(n, '#');\n        int cur_rem = 0;\n        for(int i=0; i<(n+1)/2; i++) {\n            int start = (i==0 ? 1: 0);\n            for(int digit=9; digit>=start; digit--) {\n                int sum = (pow10[i] * digit) % k;\n                if (i != n-1-i) {\n                    sum += (pow10[n-1-i] * digit);\n                    sum %= k;\n                }\n\n                int rem = (cur_rem - sum + k) % k;\n                if (solve(i+1, rem, k, dp, pow10)) {\n                    cur_rem = rem;\n                    ans[i] = ans[n-1-i] = (char)(digit + '0');\n                    break;\n                }\n                else if (digit == start) {\n                    return \"-1\";\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723950263",
    "subm_id": "1359741465"
}