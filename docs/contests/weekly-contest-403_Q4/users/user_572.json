{
    "username": "Meaningless",
    "submission": "class Solution {\npublic:\n    int compute(int l1, int r1, int t1, int b1, vector<vector<int>>& grid){\n        int n = grid.size(), m = grid[0].size();\n        int l = m, r = 0, b = 0, t = n;\n        bool has = false;\n        for(int i=t1; i<=b1; i++){\n            for(int j=l1; j<=r1; j++){\n                if(grid[i][j]){\n                    has = true;\n                    l = min(l, j);\n                    r = max(r, j);\n                    b = max(b, i);\n                    t = min(t, i);\n                }\n            }\n        }\n        return has? (r-l+1) * (b-t+1) : 0;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 1e9, l, r, b, t, res;\n        int area[3] = {0, 0, 0};\n        // VV\n        for(int i=0; i<m-2; i++){\n            res = compute(0, i, 0, n-1, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=i+1; j<m-1; j++){\n                res = compute(i+1, j, 0, n-1, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(j+1, m-1, 0, n-1, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        // HH\n        for(int i=0; i<n-2; i++){\n            res = compute(0, m-1, 0, i, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=i+1; j<n-1; j++){\n                res = compute(0, m-1, i+1, j, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(0, m-1, j+1, n-1, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        // VH\n        for(int i=0; i<m-1; i++){\n            res = compute(0, i, 0, n-1, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=0; j<n-1; j++){\n                res = compute(i+1, m-1, 0, j, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(i+1, m-1, j+1, n-1, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        for(int i=0; i<m-1; i++){\n            res = compute(i+1, m-1, 0, n-1, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=0; j<n-1; j++){\n                res = compute(0, i, 0, j, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(0, i, j+1, n-1, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        // HV\n        for(int i=0; i<n-1; i++){\n            res = compute(0, m-1, 0, i, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=0; j<m-1; j++){\n                res = compute(0, j, i+1, n-1, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(j+1, m-1, i+1, n-1, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        for(int i=0; i<n-1; i++){\n            res = compute(0, m-1, i+1, n-1, grid);\n            if(!res)\n                continue;\n            area[0] = res;\n            for(int j=0; j<m-1; j++){\n                res = compute(0, j, 0, i, grid);\n                if(!res)\n                    continue;\n                area[1] = res;\n                res = compute(j+1, m-1, 0, i, grid);\n                if(!res)\n                    continue;\n                area[2] = res;\n                ans = min(ans, area[0]+area[1]+area[2]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719115088",
    "subm_id": "1297360101"
}