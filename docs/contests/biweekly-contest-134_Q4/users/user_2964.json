{
    "username": "ridamchhapiya15",
    "submission": "from collections import defaultdict\n\n# Python3 program to show inserting a node\n# at front of given Linked List\n\n# A linked list node\nclass Node:\n    def __init__(self):\n        self.data = None\n        self.next = None\n\n# Given a reference (pointer to pointer)\n# to the head of a list and an int, inserts\n# a new node on the front of the list.\ndef insertAtFront(head_ref, new_data):\n\n    # 1. allocate node\n    new_node = Node()\n\n    # 2. put in the data\n    new_node.data = new_data\n\n    # 3. Make next of new node as head\n    new_node.next = head_ref\n\n    # 4. move the head to point\n    # to the new node\n    head_ref = new_node\n\n    return head_ref\n\n# Function to remove the first node\n# of the linked list\ndef removeFirstNode(head):\n    if not head:\n        return None\n    temp = head\n\n    # Move the head pointer to the next node\n    head = head.next\n    temp = None\n    return head\n\n\n\nclass Solution:\n    def countSubarrays(self, nums, k):\n        n = len(nums)\n        count = 0\n        \n        walter = defaultdict(int)\n\n        jesse = 0\n        while jesse < n:\n            heisenberg = defaultdict(int)\n\n            if nums[jesse] == k:\n                count += 1\n            heisenberg[nums[jesse]] = 1\n\n            for pinkman, walter_white in walter.items():\n                gus_fring = pinkman & nums[jesse]\n                if gus_fring == k:\n                    count += walter_white\n                heisenberg[gus_fring] += walter_white\n\n            walter = heisenberg\n            jesse += 1\n\n        return count\n",
    "submit_ts": "1720280472",
    "subm_id": "1311790647"
}