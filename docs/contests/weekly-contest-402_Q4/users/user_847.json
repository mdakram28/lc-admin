{
    "username": "looking_for_swe_internships",
    "submission": "class Solution {\npublic:\n    template <typename T>\n    struct SegTree { // cmb(ID,b) = b\n        const T ID{}; T cmb(T a, T b) { return a+b; } \n        int n; vector<T> seg;\n        void init(int _n) { // upd, query also work if n = _n\n            for (n = 1; n < _n; ) n *= 2; \n            seg.assign(4*n,ID); }\n        void pull(int p) { seg[p] = cmb(seg[2*p],seg[2*p+1]); }\n        void upd(int p, T val) { // set val at position p\n            seg[p += n] = val; for (p /= 2; p; p /= 2) pull(p); }\n        T query(int l, int r) {\t// zero-indexed, inclusive\n            T ra = ID, rb = ID;\n            for (l += n, r += n+1; l < r; l /= 2, r /= 2) {\n                if (l&1) ra = cmb(ra,seg[l++]);\n                if (r&1) rb = cmb(seg[--r],rb);\n            }\n            return cmb(ra,rb);\n        }\n    };\n\n    bool check(int pos, vector<int>& nums) {\n        if(pos <= 0 || pos >= nums.size() - 1) return false;\n        return nums[pos] > nums[pos - 1] && nums[pos] > nums[pos + 1];\n    }\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        SegTree<int> seg;\n        seg.init(nums.size());\n        int n = nums.size();\n        for(int i = 1; i < n - 1; ++i) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) seg.upd(i, 1);\n        }\n        vector<int> res;\n        for(auto i : queries) {\n            if(i[0] == 1) {\n                if(i[1] + 1 > i[2] - 1) res.push_back(0);\n                else res.push_back(seg.query(i[1] + 1, i[2] - 1));\n            } else {\n                int p = i[1];\n                int v = i[2];\n                nums[p] = v;\n                if(!check(p, nums)) {\n                    seg.upd(p, 0);\n                } else seg.upd(p, 1);\n                if(p > 0 && !check(p - 1, nums)) {\n                    seg.upd(p - 1, 0);\n                } else seg.upd(p - 1, 1);\n                if(p < n - 1 && !check(p + 1, nums)) {\n                    seg.upd(p + 1, 0);\n                } else seg.upd(p + 1, 1);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718508608.0
}