{
    "username": "shivamch1704",
    "submission": "class Solution{\n    public:\n    struct TrieNode {\n        TrieNode* children[26];\n        int cost;\n        TrieNode() {\n            for (int i=0; i<26; i++)    \n                children[i] = nullptr;\n            cost = INT_MAX;\n        }\n    };\n\n    void insert(TrieNode* root, const string& word, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            int idx = c - 'a';\n            if (!node->children[idx]) {\n                node->children[idx] = new TrieNode();\n            }\n            node = node->children[idx];\n        }\n        node->cost = min(node->cost, cost);\n    }\n\n    int minimumCost(string target,vector<string> &words,vector<int> &costs){\n        int n = target.length();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        TrieNode* root = new TrieNode();\n        for (int i=0; i<words.size(); i++) {\n            insert(root, words[i], costs[i]);\n        }\n\n        for (int i=0; i<n; i++) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = root;\n            for (int j = i; j < n; j++) {\n                int idx = target[j] - 'a';\n                if (!node->children[idx]) break;\n                node = node->children[idx];\n                if (node->cost != INT_MAX) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n                }\n            }\n        }\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720320860",
    "subm_id": "1312306635"
}