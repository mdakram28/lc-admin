{
    "username": "theabbie",
    "submission": "M = 10 ** 9 + 7\n\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        req = [-1] * n\n        for i, c in requirements:\n            req[i] = c\n        K = req[-1]\n        dp = [[0] * (K + 1) for _ in range(n + 1)]\n        for i in range(n + 1):\n            dp[i][0] = 1\n        pf = [0] * (K + 2)\n        for inv in range(K + 1):\n            pf[inv + 1] = pf[inv] + dp[0][inv]\n            pf[inv + 1] %= M\n        for i in range(1, n + 1):\n            for inv in range(K + 1):\n                if req[i - 1] != -1 and inv != req[i - 1]:\n                    dp[i][inv] = 0\n                    continue\n                x = min(i, inv + 1)\n                dp[i][inv] = M + pf[inv + 1] - pf[inv + 1 - x]\n                dp[i][inv] %= M\n            pf[0] = 0\n            for inv in range(K + 1):\n                pf[inv + 1] = pf[inv] + dp[i][inv]\n                pf[inv + 1] %= M\n        return dp[n][K]",
    "submit_ts": "1719071069",
    "subm_id": "1296838384"
}