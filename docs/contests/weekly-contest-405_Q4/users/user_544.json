{
    "username": "peterrockwave",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        bestcosts = {}\n        for i in range(len(words)):\n            if words[i] in bestcosts:\n                bestcosts[words[i]] = min(bestcosts[words[i]], costs[i])\n            else:\n                bestcosts[words[i]] = costs[i]\n        \n        words = list(bestcosts.keys())\n        costs = [bestcosts[k] for k in words]\n\n        base = 26\n        mod = 1000000007\n\n        ans = [None] * (len(target)+1)\n        ans[0] = 0\n        totalhash = 0\n        prefixhashes = [0] * (len(target)+1)\n        powhashes = [1] * (len(target)+1)\n        for i in range(1, len(target)+1):\n            powhashes[i] = (powhashes[i-1] * base) % mod\n        wordhashes = []\n        wordlens = [len(word) for word in words]\n        for word in words:\n            h = 0\n            for c in word:\n                h = (h*base + (ord(c) - ord('a'))) % mod\n            wordhashes.append(h)\n\n        for i,c in enumerate(target):\n            totalhash = ((totalhash * base) + (ord(c) - ord('a'))) % mod\n            prefixhashes[i+1] = totalhash\n            for j in range(len(words)):\n                posthash = (totalhash - (prefixhashes[i-wordlens[j]+1] * powhashes[wordlens[j]])) % mod\n                if posthash < 0:\n                    posthash += mod\n                # print(i, words[j], wordhashes[j], posthash)\n                if posthash == wordhashes[j]: # and target[i-wordlens[j]+1:i+1] == words[j]\n                    if ans[i-wordlens[j]+1] is not None:\n                        temp = ans[i-wordlens[j]+1] + costs[j]\n                        if (ans[i+1] is None or ans[i+1] > temp):\n                            ans[i+1] = temp\n        \n        # print(ans)\n        if ans[-1] is None:\n            return -1\n        return ans[-1]\n\n\n",
    "submit_ts": "1720321502",
    "subm_id": "1312324578"
}