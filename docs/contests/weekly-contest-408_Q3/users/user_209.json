{
    "username": "Lilbud_314",
    "submission": "#define ll long long\n\ntemplate<class T> void pv(vector<T> &v){cout<<'{';for(auto&x:v)cout<<x<<',';cout<<\"\\b}\"<<endl;}\ntemplate<class T> void pvv(vector<vector<T>> &v){cout << \"---\\n\";for(auto&x:v){pv(x);}cout << \"---\"<<endl;}\ntemplate<class T> void pvp(vector<T> &v){cout<<'{';for(auto&x:v)cout<<'('<<x.F<<','<<x.S<<')';cout<<\"}\"<<endl;}\ntemplate<class T> T gcd(vector<T> &v){T ans = 0;for(auto&i:v)ans = gcd(i, ans);return ans;}\n\nclass Solution {\npublic:\n    int get_sum(int l, int r, vector<int>&pref){\n        return pref[r+1] - pref[l];\n    }\n\n    int numberOfSubstrings(string s) {\n        ll n = s.size(), ans = 0;\n        vector<int> pref(s.size()+1, 0);\n        for(int i = 1; i <= s.size(); i++) pref[i] = pref[i-1] + (s[i-1] == '1');\n        vector<int> zero_pos = {-1};\n        for(int i = 0; i < n; ++i){\n            if(s[i] == '0') zero_pos.push_back(i);\n            int idx = zero_pos.size()-1;\n            while(idx > 0){\n                int num_zeros = zero_pos.size() - idx;\n                if(num_zeros*num_zeros > i) break;\n                int num_ones = get_sum(zero_pos[idx], i, pref);\n                int ones_left = zero_pos[idx] - zero_pos[idx-1] - 1;\n                int ones_needed = max(0, num_zeros*num_zeros - num_ones);\n                if(!ones_needed) ans += ones_left + 1;\n                else{   \n                    ans += max(-1, ones_left - ones_needed) + 1;\n                }\n                idx--;\n            }\n        }\n        zero_pos.push_back(n);\n        for(int i = 1; i < zero_pos.size(); ++i){\n            int num_ones = zero_pos[i] - zero_pos[i-1] - 1;\n            ans += (num_ones) * (num_ones+1) / 2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722136440",
    "subm_id": "1335734554"
}