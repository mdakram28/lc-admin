{
    "username": "E-Ro Nguyen",
    "submission": "const int N = 1e5 + 100;\nint cnt[N], f[N];\nlong long sum[N];\nvector<pair<int, int>> q[N];\n\nclass Solution {\npublic:\n    void up(int u, int v) {\n        for (; u < N; u += u & -u) {\n            ++cnt[u];\n            sum[u] += v;\n        }\n    }\n\n    pair<int, long long> get(int u) {\n        int c = 0; long long s = 0;\n        for (; u > 0; u -= u & -u) {\n            c += cnt[u];\n            s += sum[u];\n        }\n        return {c, s};\n    }\n\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        //\n        int n = s.size();\n        for (int i = 0; i <= n; ++i) {\n            q[i].clear();\n            sum[i] = cnt[i] = 0;\n        }\n\n        int c[2] = {};\n        for (int i = 0, j = 0; i < n; ++i) {\n            // while (j < n && min(c[0], c[1]) <= k) {\n            //     if (j < n) {\n            //         ++c[s[j] - '0'];\n            //         ++j;\n            //     }\n            // }\n            while (j < n && min(c[0], c[1]) <= k) {\n                ++c[s[j] - '0'];\n                // cout << i << ' ' << j << ' ' << c[0] << ' ' << c[1] << endl;\n                ++j;\n            }\n            f[i + 1] = j - 1;\n            if (min(c[0], c[1]) <= k) ++f[i + 1];\n            // cout << \"Hi \" << i + 1 << ' ' << f[i + 1] << ' ' << c[0] << ' ' << c[1] << '\\n';\n            --c[s[i] - '0'];\n        }\n        // f[i]\n        for (int i = 0; i < queries.size(); ++i) {\n            int l = queries[i][0], r = queries[i][1];\n            q[l + 1].push_back({r + 1, i});\n        }\n\n        vector<long long> res(queries.size());\n        for (int l = n; l > 0; --l) {\n            up(f[l], f[l]);\n            // cout << \"Up \" << f[l] << ' ' << l << endl;\n            for (auto& [r, id]: q[l]) {\n                pair<int, long long> x = get(r);\n                int c = x.first;\n                long long s = x.second;\n                int len = r - l + 1;\n                // cout << l << ' ' << r << ' ' << id << ' ' << len << ' ' << c << ' ' << s << endl;\n                res[id] = 1ll * len * (len + 1) / 2 - (1ll * r * c - s);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723952656",
    "subm_id": "1359801436"
}