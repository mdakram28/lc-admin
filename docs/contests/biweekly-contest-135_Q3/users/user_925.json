{
    "username": "jsood99",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n\n        map<int, int> mp;\n        int n = nums.size();\n        int mn = (n/2);\n\n        vector<int> v;\n\n        for(int i = 0; i < n/2; ++i) {\n            int best = max(max(nums[i],nums[n-i-1]) - 0 , k - min(nums[i],nums[n-i-1]));\n            v.push_back(best);\n        }\n\n        sort(v.begin(), v.end());\n\n        // for(int i = 0; i < n/2; ++i) {\n        //     cout << v[i] << \" \";\n        // }\n        // cout << endl;\n\n        for(int i = 0; i < n/2; ++i) {\n            int ab = abs(nums[i] - nums[n-i-1]);\n            int twos = lower_bound(v.begin(), v.end(), ab) - v.begin();\n            int ones = (n/2)-twos-mp[ab]-1;\n            // cout << ab << \" \" << ones << \" \" << twos << \" \" << ones+2*twos << endl;\n            mn = min(mn, ones+2*twos);\n            mp[ab]++;\n        }\n\n        return mn;\n    }\n};",
    "submit_ts": "1721488966",
    "subm_id": "1327438656"
}