{
    "username": "ankikadey",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long total_count = 0;\n        \n        unordered_map<long long, long long> previous_results;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> current_results; \n\n            if (nums[i] == k) {\n                ++total_count;\n            }\n            current_results[nums[i]] = 1;\n\n            for (auto& [value, frequency] : previous_results) {\n                long long new_and_result = value & nums[i];\n                if (new_and_result == k) {\n                    total_count += frequency;\n                }\n                current_results[new_and_result] += frequency;\n            }\n            \n            previous_results = current_results;\n        }\n        \n        return total_count;\n    }\n};\n",
    "submit_ts": "1720278266",
    "subm_id": "1311701668"
}