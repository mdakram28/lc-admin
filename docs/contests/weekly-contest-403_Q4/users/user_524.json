{
    "username": "ye_che",
    "submission": "int pre[31][31];\nint rec[31][31][31][31];\nclass Solution {\npublic:\n    int cal(int x1, int x2, int y1, int y2) {\n        return pre[x2][y2] - pre[x1-1][y2] - pre[x2][y1-1] + pre[x1-1][y1-1];\n    }\n    int minimumSum(vector<vector<int>>& g) {\n        int n = g.size(), m = g[0].size();\n        for (int i = 0; i <= n; i ++)\n            for (int j = 0; j <= m; j ++) {\n                if (i == 0 || j == 0) pre[i][j] = 0;\n                else pre[i][j] = g[i-1][j-1] + pre[i-1][j] + pre[i][j-1] - pre[i-1][j-1];\n            }\n        for (int x1 = 1; x1 <= n; x1 ++) {\n            for (int y1 = 1; y1 <= m; y1 ++) {\n                for (int x2 = x1; x2 <= n; x2 ++) {\n                    for (int y2 = y1; y2 <= m; y2 ++) {\n                        if (cal(x1, x2, y1, y2) == 0) {\n                            rec[x1][x2][y1][y2] = 0;\n                            continue;\n                        }\n                        int l = x1, r = x2, m;\n                        while (l < r) {\n                            m = (l + r) >> 1;\n                            if (cal(x1, m, y1, y2) == 0) l = m + 1;\n                            else r = m;\n                        }\n                        int up = l;\n                        l = x1, r = x2;\n                        while (l < r) {\n                            m = (l + r + 1) >> 1;\n                            if (cal(m, x2, y1, y2) == 0) r = m - 1;\n                            else l = m;\n                        }\n                        int down = l;\n                        l = y1, r = y2;\n                        while (l < r) {\n                            m = (l + r) >> 1;\n                            if (cal(x1, x2, y1, m) == 0) l = m + 1;\n                            else r = m;\n                        }\n                        int left = l;\n                        l = y1, r = y2;\n                        while (l < r) {\n                            m = (l + r + 1) >> 1;\n                            if (cal(x1, x2, m, y2) == 0) r = m - 1;\n                            else l = m;\n                        }\n                        int right = l;\n                        rec[x1][x2][y1][y2] = (right - left + 1) * (down - up + 1);\n                    }\n                }\n\n            }\n        }\n        int res = rec[1][n][1][m];\n        for (int x1 = 1; x1 < n; x1 ++) {\n            for (int y1 = 1; y1 < m; y1 ++) \n                res = min(res, rec[1][x1][1][m] + rec[x1+1][n][1][y1] + rec[x1+1][n][y1+1][m]);\n            for (int x2 = x1+1; x2 < n; x2 ++)\n                res = min(res, rec[1][x1][1][m] + rec[x1+1][x2][1][m] + rec[x2+1][n][1][m]);\n        }\n        for (int y1 = 1; y1 < m; y1 ++) {\n            for (int x1 = 1; x1 < n; x1 ++)\n                res = min(res, rec[1][n][1][y1] + rec[1][x1][y1+1][m] + rec[x1+1][n][y1+1][m]);\n            for (int y2 = y1+1; y2 < m; y2 ++)\n                res = min(res, rec[1][n][1][y1] + rec[1][n][y1+1][y2] + rec[1][n][y2+1][m]);\n        }\n        for (int x1 = n; x1 > 1; x1 --) {\n            for (int y1 = 1; y1 < m; y1 ++)\n                // cout << rec[x1][n][1][m] << ' ' << rec[1][x1-1][1][y1] << ' ' << rec[1][x1-1][y1+1][m] << endl,\n                res = min(res, rec[x1][n][1][m] + rec[1][x1-1][1][y1] + rec[1][x1-1][y1+1][m]);\n            cout << res << endl;\n            for (int x2 = x1-1; x2 > 1; x2 --)\n                res = min(res, rec[x1][n][1][m] + rec[x2][x1-1][1][m] + rec[1][x2-1][1][m]);\n            // cout << res << endl;\n        }\n        for (int y1 = m; y1 > 1; y1 --) {\n            for (int x1 = 1; x1 < n; x1 ++)\n                res = min(res, rec[1][n][y1][m] + rec[1][x1][1][y1-1] + rec[x1+1][n][1][y1-1]);\n            for (int y2 = y1-1; y2 > 1; y2 --)\n                res = min(res, rec[1][n][y1][m] + rec[1][n][y2][y1-1] + rec[1][n][1][y2-1]);\n        }\n        for (int i = 1; i < n; i ++)\n            res = min(res, rec[1][i][1][m] + rec[i+1][n][1][m]);\n        for (int j = 1; j < m; j ++)\n            res = min(res, rec[1][n][1][j] + rec[1][n][j+1][m]);\n        // for (int x1 = 1; x1 <= n; x1 ++)\n        //     for (int x2 = x1; x2 <= n; x2 ++)\n        //         for (int y1 = 1; y1 <= m; y1 ++)\n        //             for (int y2 = y1; y2 <= m; y2 ++)\n        //                 cout << x1 << \" \" << x2 << \" \" << y1 << \" \" << y2 << \" \" << rec[x1][x2][y1][y2] << endl;\n        // for (int i = 1; i <= n; i ++)\n        //     for (int j = 1; j <= m; j ++)\n        //         cout << i << \" \" << j << \" \" << pre[i][j] << endl;\n        return res;\n    }\n};",
    "submit_ts": 1719114600.0
}