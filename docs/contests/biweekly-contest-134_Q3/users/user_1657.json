{
    "username": "sudh12",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& col, int k) {\n        int n=col.size();\n        vector<int> pref;\n        pref.push_back(0);\n        int s=0;\n        for(int i=0; i<col.size()-1; ++i){\n            if(col[i]==col[i+1]){\n                s+=1;\n            }\n            pref.push_back(s);\n        }\n\n        int j=k;\n        int ans=0;\n        int i=1;\n        bool f=0;\n        int len=1;\n\n        if(col[0]==col[n-1]){\n        f=1;\n        s+=1;\n        pref.push_back(s);\n        }\n\n        while(i<col.size()+k-1){\n            // if(j>=n && f==1){\n            //     if((pref[j%n]+1-pref[i%n -1])==0)\n            //     ans+=1;\n            //     i+=1;\n            //     j+=1;\n            //     continue;\n            // }\n            int cur=i, prev=i-1;\n            i+=1;\n\n           if(prev>=n)\n           prev= prev-n;\n\n           if(cur>=n)\n           cur-=n;\n\n           col[cur]!=col[prev]?len+=1:len=1;\n\n           if(len>=k)\n           ans+=1;\n            // if((pref[j%n]-pref[i%n-1])==0){\n            //     ans+=1;\n            // }\n            // i+=1;\n            // j+=1;\n        }\n\n// for(auto x: pref)\n// cout<<x<<\" \";\n// cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720280585",
    "subm_id": "1311794869"
}