{
    "username": "FightEveryDay",
    "submission": "class Solution {\n    int mod = (int)1e9 + 7;;\n    public int countOfPairs(int[] nums) {\n        nums = nums;\n        int m = nums.length;\n        Long[][] dp = new Long[m][51];\n        long res = help(nums, dp, 0, 0);\n        return (int)res;\n    }\n    \n    private long help(int[] nums, Long[][] dp, int cur, int pre) {\n        if (cur == nums.length) {\n            return 1;\n        }\n        if (dp[cur][pre] != null) {\n            return dp[cur][pre];\n        }\n        long res = 0;\n        int max = nums[cur];\n        for (int i = pre; i <= max; i++) {\n            if (cur > 0 && (max - i > nums[cur - 1] - pre)) {\n                continue;\n            }\n            res = (res + help(nums, dp, cur + 1, i)) % mod;\n        }\n        dp[cur][pre] = res;\n        return res;\n    }\n}\n",
    "submit_ts": "1723345260",
    "subm_id": "1351552004"
}