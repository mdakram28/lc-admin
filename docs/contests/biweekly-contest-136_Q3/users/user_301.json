{
    "username": "kaname_asuka",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        total_flips = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                val = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                total_flips += min(val, 4 - val)\n        matches = 0\n        flips = 0\n        if m % 2 == 1:\n            for j in range(n//2):\n                if grid[m//2][j] != grid[m//2][n - 1 - j]:\n                    flips += 1\n                elif grid[m//2][j] == 1:\n                    matches += 1\n        if n % 2 == 1:\n            for i in range(m//2):\n                if grid[i][n//2] != grid[m - 1 - i][n//2]:\n                    flips += 1\n                elif grid[i][n//2] == 1:\n                    matches += 1\n        if matches % 2 == 0:\n            total_flips += flips\n        else:\n            if flips >= 1:\n                total_flips += flips\n            else:\n                total_flips += 2\n        if m % 2 == 1 and n % 2 == 1 and grid[m//2][n//2] == 1:\n            total_flips += 1\n        return total_flips\n        ",
    "submit_ts": "1722697359",
    "subm_id": "1343143743"
}