{
    "username": "lakh",
    "submission": "int seg[400001];\nvector<int>v;\nvoid b(int si, int st, int en) {\n    if(st==en) {\n        if(!st || (st==(v.size()-1))) seg[si]=0;\n        else seg[si]=((v[st]>v[st-1]) && (v[st]>v[st+1]));\n        return;\n    }\n    int mi=(st+en)/2;\n    b(2*si+1,st,mi);\n    b(2*si+2,mi+1,en);\n    seg[si]=seg[2*si+1]+seg[2*si+2];\n}\n\nvoid up(int si, int st, int en, int ix) {\n    if(ix<0 || (ix>=v.size())) return;\n    if(st==en) {\n       if(!st || (st==(v.size()-1))) seg[si]=0;\n        else seg[si]=((v[st]>v[st-1]) && (v[st]>v[st+1]));\n        return; \n    }\n    int mi=(st+en)/2;\n    if(ix<=mi) up(2*si+1,st,mi,ix);\n    else up(2*si+2,mi+1,en,ix);\n    seg[si]=seg[2*si+1]+seg[2*si+2];\n}\n\nint go(int si, int st, int en, int l, int r) {\n    if(st>r || en<l || l>r) return 0;\n    if(l<=st && r>=en) return seg[si];\n    int mi=(st+en)/2;\n    return go(2*si+1,st,mi,l,r) + go(2*si+2,mi+1,en,l,r);\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        v=nums;\n        int n=nums.size();\n        b(0,0,n-1);\n        \n        vector<int>re;\n        for(vector<int>p: queries) {\n            int tp=p[0], v1=p[1], v2=p[2];\n            if(tp==1) {\n              if(v2-v1<2) re.push_back(0);\n              else {\n                re.push_back(go(0,0,n-1,v1+1, v2-1));  \n              }\n            } else {\n                v[v1]=v2;\n                up(0,0,n-1,v1);\n                up(0,0,n-1,v1-1);\n                up(0,0,n-1,v1+1);\n            }\n        }\n        return re;\n    }\n};",
    "submit_ts": 1718508328.0
}