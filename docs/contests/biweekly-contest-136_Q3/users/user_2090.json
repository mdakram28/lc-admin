{
    "username": "Pawan0Gupta",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int ans = 0;\n        if (n % 2 == 1 && m % 2 == 1) if (grid[n / 2][m / 2] == 1 )ans += 1;\n        int[] shift = new int[3];\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n        if (m % 2 == 1) {\n            int a = 0, b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) ans += shift[1];\n            else ans += 2;\n        }\n        else ans += shift[1];\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n                int sm = a + b + c + d;\n                if (sm != 0 && sm != 4) ans += Math.min(sm, 4 - sm);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722700211",
    "subm_id": "1343234977"
}