{
    "username": "workingnaresh",
    "submission": "from sortedcontainers import SortedList\n\nINT_MIN = float('-inf')\n\ndef construct_segment_tree(arr: list, size: int):\n    global segtree\n\n    for i in range(size):\n        segtree[size + i] = arr[i]\n\n    for i in range(size - 1, 0, -1):\n        segtree[i] = max(segtree[2 * i], segtree[2 * i + 1])\n\ndef update(index: int, value: int, size: int):\n    global segtree\n\n    index += size\n    segtree[index] = value\n\n    while index > 1:\n        index //= 2\n        segtree[index] = max(segtree[2 * index], segtree[2 * index + 1])\n\ndef range_query(left: int, right: int, size: int) -> int:\n    global segtree\n\n    left += size\n    right += size\n\n    maximum = INT_MIN\n    while left < right:\n        if left & 1:\n            maximum = max(maximum, segtree[left])\n            left += 1\n        if right & 1:\n            right -= 1\n            maximum = max(maximum, segtree[right])\n        left //= 2\n        right //= 2\n    return maximum\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        global segtree\n        l = 5*10**4+2\n        x = SortedList([0,l])\n        \n        va = [0 for _ in range(l)]\n        \n        va[0] = l\n        res = []\n        segtree = [0] * len(va) * 2\n        available = construct_segment_tree(va, len(va))\n        # print(segtree)\n        # available = SortedList([5*10**4+2])\n        for query in queries:\n            if query[0] == 1:\n                index = x.bisect(query[1])\n                # diff = x[index] - x[index-1]\n                update(x[index-1], query[1] - x[index-1],len(va))\n                update(query[1], x[index] - query[1],len(va))\n                x.add(query[1])\n\n\n#                 available.remove(diff)\n#                 available.add(x[index] - query[1] - 1)\n#                 available.add(query[1] - x[index-1] +(0 if x[index-1] == 0 else -1 ))\n                # print(x)\n            else:\n            \n                index = x.bisect(query[1])\n                # diff = x[index] - x[index-1]\n                temp = range_query(x[index-1],x[index-1]+1, len(va))\n                temp = 0 if temp == float(-inf) else temp\n                update(x[index-1], query[1] - x[index-1],len(va))\n                # update(query[1], x[index] - query[1],len(va))\n                # x.add(query[1])\n                \n                \n                maxi = min(query[1], range_query(0,query[1]-1, len(va)))\n                maxi = query[1] if maxi == float(-inf) else maxi\n                res.append(maxi >= query[2])\n                \n                update(x[index-1], temp,len(va))\n                # print(maxi)\n            \n        return res\n                \n                \n                \n        \n        ",
    "submit_ts": 1716651691.0
}