{
    "username": "AttAditya",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diff = [t - n for n, t in zip(nums, target)]\n        count = 0\n        st = []\n\n        def f(start, end, m):\n            count = 0\n            st = []\n\n            for i in range(start, end):\n                d = diff[i] * m\n\n                if not st:\n                    st.append(d)\n                    count += d\n                    continue\n                \n                if st[-1] == d:\n                    continue\n                \n                if st[-1] < d:\n                    count += d - st[-1]\n                    st.append(d)\n                    continue\n                \n                while st and st[-1] > d:\n                    del st[-1]\n                \n                if st and st[-1] == d:\n                    continue\n                \n                st.append(d)\n            \n            return count\n\n        start = 0\n        m = 1\n\n        diff.append(0)\n\n        for i in range(len(diff)):\n            if diff[i] == 0 or diff[i] / abs(diff[i]) != m:\n                val = f(start, i, m)\n                # print(start, i, m, val)\n                count += val\n\n                if diff[i] != 0:\n                    m = diff[i] / abs(diff[i])\n                    start = i\n                else:\n                    m = 1\n                    start = i + 1\n        \n        return int(count)",
    "submit_ts": "1721532538",
    "subm_id": "1327988270"
}