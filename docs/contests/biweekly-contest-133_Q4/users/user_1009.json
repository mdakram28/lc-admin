{
    "username": "vineeshmittal1",
    "submission": "class Solution {\npublic:\n    \nconst int mod = 1e9 + 7;\n\nint numberOfPermutations(int n, vector<vector<int>>& requirements) {\n    int k = 400;\n    vector<vector<int>> dp(n + 1, vector<int>(k + 1, 0));\n    dp[0][0] = 1; \n    \n    unordered_map<int, int> mpp;\n    \n    for (auto it : requirements)  mpp[it[0] + 1] = it[1]; \n       \n    \n\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 0; j <= k; ++j) {\n            for(int s=0;s<i;s++){\n                int check=j-s;\n                if(check>=0) dp[i][j]=(dp[i][j]+dp[i-1][check])%mod;\n            }\n        }\n        \n        if (mpp.find(i) != mpp.end()) {\n            int index = mpp[i];\n            for (int l = 0; l <= k; ++l) {\n                if (l != index)  dp[i][l] = 0; \n            }\n        }\n    }\n    \n    int ans = 0;\n    for (int i = 0; i <= k; ++i)  ans = (ans + dp[n][i]) % mod;\n      \n    \n    \n    return ans;\n\n\n    \n\n   \n    \n}\n};",
    "submit_ts": 1719071486.0
}