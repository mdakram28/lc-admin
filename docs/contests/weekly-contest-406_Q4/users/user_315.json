{
    "username": "20_0_Nitya",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Integer[] hCuts = Arrays.stream(horizontalCut).boxed().toArray(Integer[]::new);\n        Integer[] vCuts = Arrays.stream(verticalCut).boxed().toArray(Integer[]::new);\n        Arrays.sort(hCuts, Collections.reverseOrder());\n        Arrays.sort(vCuts, Collections.reverseOrder());\n\n        int i = 0, j = 0;\n        long x = 1, y = 1;\n        long ans = 0;\n\n        while (i < m - 1 && j < n - 1) {\n            if (hCuts[i] < vCuts[j]) {\n                ans += (long) vCuts[j] * x;\n                j++;\n                y++;\n            } else {\n                ans += (long) hCuts[i] * y;\n                i++;\n                x++;\n            }\n        }\n\n        while (i < m - 1) {\n            ans += (long) hCuts[i++] * y;\n        }\n\n        while (j < n - 1) {\n            ans += (long) vCuts[j++] * x;\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1720925396",
    "subm_id": "1320253349"
}