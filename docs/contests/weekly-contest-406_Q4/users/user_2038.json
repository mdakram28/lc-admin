{
    "username": "Lee3Mu",
    "submission": "class Solution {\npublic:\n    static int cmp(int a, int b) {\n        return a > b;\n    }\n\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       sort(horizontalCut.begin(), horizontalCut.end(), cmp);\n        sort(verticalCut.begin(), verticalCut.end(), cmp);\n        int hcut = 1, vcut = 1;\n        int hidx = 0, vidx = 0;\n        long long cost = 0;\n        for(; hidx < m - 1 && vidx < n - 1; ) {\n            if(horizontalCut[hidx] > verticalCut[vidx]) {\n                cost += horizontalCut[hidx] * hcut;\n                hidx++;\n                vcut++;\n            } else {\n                cost += verticalCut[vidx] * vcut;\n                vidx++;\n                hcut++;\n            }\n        }\n\n        while(hidx < m - 1) {\n            cost += horizontalCut[hidx] * n;\n            hidx++;\n        }\n\n        while(vidx < n - 1) {\n            cost += verticalCut[vidx] * m;\n            vidx++;\n        }\n        return cost; \n    }\n};",
    "submit_ts": "1720926605",
    "subm_id": "546447293"
}