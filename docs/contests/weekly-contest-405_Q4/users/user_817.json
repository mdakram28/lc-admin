{
    "username": "useDP",
    "submission": "class Solution {\n    struct TrieNode {\n        int isWord = -1;\n        TrieNode* links[26] = {0};\n    };\n    TrieNode* head;\n    void buildTrie(vector<string> &words, vector<int>&costs) {\n        head = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            TrieNode* curr = head;\n            for (char j : words[i]) {\n                if (!curr->links[j - 'a']) curr->links[j - 'a'] = new TrieNode();\n                curr = curr->links[j - 'a'];\n            }\n            curr->isWord = curr->isWord == -1 ? costs[i] : min(costs[i], curr->isWord);\n        }\n    }\npublic:\n    long long dp[50000];\n    long long solve(int ind, string &t) {\n        if (ind == t.length()) return 0;\n        long long &d = dp[ind];\n        if (d == -1) {\n            d = 1e9;\n            int i = ind;\n            char c = t[i] - 'a';\n            TrieNode* curr = head;\n            while (i < t.length() && curr->links[c]) {\n                curr = curr->links[c];\n                if (curr->isWord != -1) d = min(d, (long long)curr->isWord + solve(i + 1, t));\n                c = t[++i] - 'a';\n            }\n        }\n        return d;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        memset(dp, -1, sizeof(dp));\n        buildTrie(words, costs);\n        // return 0;\n        return solve(0, target) >= 1e9 ? -1 : dp[0];\n    }\n};",
    "submit_ts": "1720322625",
    "subm_id": "1312354868"
}