{
    "username": "fireyyouth",
    "submission": "\nstruct SegTree {\n    vector<int> heap;\n    int size;\n    int ih;\n    SegTree(int s) {\n        ih = ceil(log2(s));\n        size = s;\n        heap.resize(1 << (ih + 1));\n    }\n    void update(int i, int v) {\n        int x = (1 << ih) - 1 + i;\n        heap[x] = v;\n        x = (x - 1) / 2;\n        while (1) {\n            heap[x] = heap[2 * x + 1] + heap[2 * x + 2];\n            if (x == 0) {\n                break;\n            }\n            x = (x - 1) / 2;\n        }\n    }\n    int f(int x, int p, int q, int i, int j) {\n        if (q < i || j < p) {\n            return 0;\n        }\n        if (i <= p && q <= j) {\n            return heap[x];\n        }\n        return f(2 * x + 1, p, (p + q) / 2, i, j) + f(2 * x + 2, (p + q) / 2 + 1, q, i, j);\n    }\n    int range_sum(int i, int j) {\n        return f(0, 0, (1 << ih) - 1, i, j);\n    }\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        SegTree segtree(a.size());\n        vector<int> r;\n        auto check = [&a](int i) {\n            return i >= 1 && i <= a.size() - 2 && a[i] > a[i - 1] && a[i] > a[i + 1];\n        };\n        for (int i = 0; i < a.size(); ++i) {\n            segtree.update(i, check(i));\n        }\n        for (auto &q: queries) {\n            if (q[0] == 1) {\n                r.push_back(segtree.range_sum(q[1], q[2]));\n                if (q[1] < q[2]) {\n                    if (check(q[1])) {\n                        r.back() -= 1;\n                    }\n                    if (check(q[2])) {\n                        r.back() -= 1;\n                    }    \n                } else {\n                    if (check(q[1])) {\n                        r.back() -= 1;\n                    }\n                }\n                \n            } else {\n                int i = q[1];\n                a[i] = q[2];\n                segtree.update(i, check(i));\n                if (i - 1 >= 0) {\n                    segtree.update(i - 1, check(i - 1));\n                }\n                if (i + 1 < a.size()) {\n                    segtree.update(i + 1, check(i + 1));\n                }\n            }\n        }\n        return r;\n    }\n};",
    "submit_ts": 1718506733.0
}