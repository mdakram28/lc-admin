{
    "username": "iamc7054",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int alternating = 0;\n        int N = colors.size();\n        for(int i = 0; i < colors.size(); i++) {\n            if (colors[(i) % N] != colors[(i + 1) % N]) alternating++;\n        }\n        if (alternating == N) {\n            return N;\n        }\n        int start = -1;\n        for(int i = 0; i < N; i++) {\n            if (colors[(i) % N] == colors[(i + 1) % N]) {\n                start = (i + 1) % N;\n                break;\n            }\n        }\n        int len = 1;\n        int lc = colors[start];\n        int tot = 0;\n        for(int i = (start + 1) % N; i != start; i = (i + 1) % N) {\n            if (colors[i] != lc) {\n                len++;\n            }\n            else {\n                len = 1;\n            }\n            if (len >= k) {\n                tot++;\n            }\n            lc = colors[i];\n        }\n        return tot;\n    }\n};",
    "submit_ts": "1720276857",
    "subm_id": "1311636061"
}