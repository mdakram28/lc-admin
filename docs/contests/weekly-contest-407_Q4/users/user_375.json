{
    "username": "nafnil",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long re = 0;\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) arr[i] = target[i] - nums[i];\n\n        for (int i = 0; i<n; i++) {\n            if (arr[i] == 0) continue;\n                int r = i;\n            if (arr[i] > 0) {\n                while (r+1<n && arr[r+1] > 0) r++;\n            } else {\n                while (r+1<n && arr[r+1] < 0) r++;\n                for (int j = i; j<=r; j++) arr[j] = -arr[j];\n            }\n            re += gao(i, r, arr);\n            i = r;\n        }\n        return re;\n    }\n\n    long gao(int l, int r, int[] arr) {\n        long re = arr[l];\n        for (int i = l+1; i <= r; i++) {\n            re += Math.max(0, arr[i]-arr[i-1]);\n        }\n        return re;\n    }\n}",
    "submit_ts": "1721530998",
    "subm_id": "1327949454"
}