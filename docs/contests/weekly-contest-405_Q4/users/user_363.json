{
    "username": "hkmaxi",
    "submission": "struct trie_node{\n    trie_node *child[26];\n    int is_end;\n    int cost;\n    \n    trie_node(){\n        for(int i=0;i<26;i++){\n            child[i]=NULL;\n        }\n        is_end=0;\n        cost=1e9;\n    }\n};\n\nclass Solution {\npublic:\n    void insert(trie_node *root,string &w,int &c){\n        for(auto ch:w){\n            int v=ch-'a';\n            if(root->child[v]==NULL){\n                root->child[v]=new trie_node();\n            }\n            root=root->child[v];\n        }\n        root->is_end=1;\n        root->cost=min(root->cost,c);\n    }\n    \n    int solve(int ind,string &target,vector<int> &dp,trie_node *root){\n        \n       // cout<<ind<<endl;\n        \n        if(ind==target.size()){\n            return 0;\n        }\n        \n        if(dp[ind] != -1){\n            return dp[ind];\n        }\n        \n        int res=1e9;\n        int n=target.size();\n        trie_node *tmp=root;\n        int st=ind;\n        \n        while(ind<n){\n            \n            if(tmp->child[target[ind]-'a']==NULL){\n                break;\n            }\n            \n            tmp=tmp->child[target[ind]-'a'];\n            \n            if(tmp->is_end){\n                res=min(res,tmp->cost+solve(ind+1,target,dp,root));\n            }\n                \n            ind++;\n            \n        }\n        \n        return dp[st]=res;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n=target.size();\n        \n        vector<int> dp(n,-1);\n\n        trie_node *root;\n        root=new trie_node();\n        int m=words.size();\n        \n        for(int i=0;i<m;i++){\n            insert(root,words[i],costs[i]);\n        }\n        \n        \n        int res=solve(0,target,dp,root);\n        \n        if(res==1e9){\n            res=-1;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720321940",
    "subm_id": "1312336357"
}