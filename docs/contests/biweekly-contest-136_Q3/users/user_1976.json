{
    "username": "Abhay01",
    "submission": "class Solution {\npublic:\n        \n    vector<vector<int>>v,dp;\n    int fun(int i,int j)\n    {\n        if(i==v.size())\n        {\n            if(j==0)return 0;\n            return 1e9;\n        }\n        if(dp[i][j]!=-1)return dp[i][j];\n        int one=fun(i+1,(j+v[i][1])%4)+v[i][1];\n        int zero=fun(i+1,(j+4-v[i][0])%4)+v[i][0];\n        return dp[i][j]=min(one,zero);\n    }\n    int minFlips(vector<vector<int>>& grid) {   \n        int n=grid.size(),m=grid[0].size(); \n        v.clear();\n        dp.clear();\n        vector<vector<int>>vis(n,vector<int>(m,0));\n        int np=n/2,mp=m/2,total=0;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                if(!vis[i][j])\n                {\n                    if(i==(n-i-1)&&j==(m-j-1))\n                    {\n                        vis[i][j]=1;\n                        if(grid[i][j])\n                        {\n                            v.push_back({1,0});\n                            total++;\n                        }\n                        else v.push_back({0,1});\n                    }\n                    else if(i==(n-i-1))\n                    {\n                        int o=0;\n                        vis[i][j]=1;\n                        vis[i][m-j-1]=1;\n                        if(grid[i][j])o++;\n                        if(grid[i][m-j-1])o++;\n                        v.push_back({o,2-o});\n                        total+=o;\n                    }\n                    else if(j==(m-j-1))\n                    {\n                        int o=0;\n                        vis[i][j]=1;\n                        vis[n-i-1][j]=1;\n                        if(grid[i][j])o++;\n                        if(grid[n-i-1][j])o++;\n                        v.push_back({o,2-o});\n                        total+=o;\n                    }\n                    else\n                    {\n                        int o=0;\n                        vis[i][j]=1;\n                        vis[i][m-j-1]=1;\n                        vis[n-i-1][j]=1;\n                        vis[n-i-1][m-j-1]=1;\n                        if(grid[i][j])o++;\n                        if(grid[i][m-j-1])o++;\n                        if(grid[n-i-1][j])o++;\n                        if(grid[n-i-1][m-j-1])o++;\n                        v.push_back({o,4-o});\n                        total+=o;\n                    }\n                }\n            }\n        }\n        total=total%4;\n        for(int i=0;i<v.size();i++)\n        dp.resize(v.size(),vector<int>(4,-1));\n        return fun(0,total);\n    }\n};",
    "submit_ts": "1722699812",
    "subm_id": "1343223085"
}