{
    "username": "Jesko",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n                Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        long a = 1;\n        long b = 1;\n        int idx = m - 2;\n        int idy = n - 2;\n        long res = 0;\n        while(idx >= 0 || idy >= 0) {\n            if(idx < 0) {\n                int d = verticalCut[idy--];\n                res += d * a;\n                ++b;\n            } else if(idy < 0) {\n                int c = horizontalCut[idx--];\n                res += c * b;\n                ++a;\n            } else {\n                int c = horizontalCut[idx];\n                int d = verticalCut[idy];\n                if(c >= d) {\n                    res += c * b;\n                    ++a;\n                    idx--;\n                } else {\n                    res += d * a;\n                    ++b;\n                    idy--;\n                }\n            }\n            //System.out.println(idx+\"@\"+idy+\"@\" +res);\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720925352",
    "subm_id": "1320251810"
}