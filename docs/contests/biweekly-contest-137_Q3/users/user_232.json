{
    "username": "Jagnyasai",
    "submission": "#include <vector>\n#include <algorithm>\n#include <limits>\nusing namespace std;\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<pair<long long, pair<int, int>>> ans;\n        int n = board.size();\n        int m = board[0].size();\n        for(int i = 0; i < n; i++) {\n            vector<pair<long long, pair<int, int>>> curr;\n            for(int j = 0; j < m; j++) {\n                curr.push_back({board[i][j], {i, j}});\n            }\n           \n            sort(curr.rbegin(), curr.rend());\n            for(int j = 0; j < min(3, m); j++) {\n                ans.push_back(curr[j]);\n            }\n        }\n\n        \n        sort(ans.rbegin(), ans.rend());\n\n        long long maxSum = LLONG_MIN;\n        int size = ans.size();\n\n       \n        for(int i = 0; i < size; i++) {\n            auto p1 = ans[i];\n            int x1 = p1.second.first;\n            int y1 = p1.second.second;\n            for(int j = i + 1; j < size; j++) {\n                auto p2 = ans[j];\n                int x2 = p2.second.first;\n                int y2 = p2.second.second;\n                if(x1 == x2 || y1 == y2) continue;\n                for(int k = j + 1; k < size; k++) {\n                    auto p3 = ans[k];\n                    int x3 = p3.second.first;\n                    int y3 = p3.second.second;\n                    if(x1 == x3 || y1 == y3 || x2 == x3 || y2 == y3) continue;\n                    long long c = p1.first + p2.first + p3.first;\n                    maxSum = max(maxSum, c);\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723909864",
    "subm_id": "1359208610"
}