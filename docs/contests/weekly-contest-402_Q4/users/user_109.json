{
    "username": "andy-lc",
    "submission": "import java.lang.RuntimeException\nimport kotlin.math.abs\nimport kotlin.math.max\nimport kotlin.math.min\n\nclass Segment(val L: Int, val R: Int) {\n    var left: Segment? = null\n    var righ: Segment? = null\n    var sum = 0\n\n    init {\n        if (L >= R) {\n            throw RuntimeException(\"L >= R: ${L}, ${R}\")\n        }\n        val M = L + (R - L) / 2\n        if (L < M) {\n            left = Segment(L, M)\n            righ = Segment(M, R)\n        }\n    }\n\n    fun validate() {\n        if (left === null && righ !== null) {\n            throw RuntimeException(\"left === null && righ !== null\")\n        }\n        if (left !== null && righ === null) {\n            throw RuntimeException(\"left !== null && righ === null\")\n        }\n    }\n\n    fun set(i: Int, x: Int) {\n        validate()\n        if (left === null) {\n            sum = x\n            return\n        }\n        val M = L + (R - L) / 2\n        if (i < M) {\n            left!!.set(i, x)\n        } else {\n            righ!!.set(i, x)\n        }\n        sum = left!!.sum + righ!!.sum\n    }\n\n    fun get(l: Int, r: Int): Int {\n        if (l <= L && R <= r) {\n            return sum\n        }\n        if (R <= l || L >= r) {\n            return 0\n        }\n        return left!!.get(l, r) + righ!!.get(l, r)\n    }\n}\n\nclass Solution {\n    fun countOfPeaks(nums: IntArray, queries: Array<IntArray>): List<Int> {\n        val seg = Segment(0, nums.size)\n        for (i in 1..<nums.size - 1) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                seg.set(i, 1)\n            }\n        }\n        val ans = ArrayList<Int>()\n        for (arr in queries) {\n            if (arr[0] == 1) {\n                ans.add(seg.get(arr[1] + 1, arr[2]))\n                continue\n            }\n            val i = arr[1]\n            nums[i] = arr[2]\n            if (i > 1) {\n                if (nums[i - 2] < nums[i - 1] && nums[i - 1] > nums[i]) {\n                    seg.set(i - 1, 1)\n                } else {\n                    seg.set(i - 1, 0)\n                }\n            }\n            if (i > 0 && i < nums.size - 1) {\n                if (nums[i - 1] < nums[i] && nums[i] > nums[i + 1]) {\n                    seg.set(i, 1)\n                } else {\n                    seg.set(i, 0)\n                }\n            }\n            if (i < nums.size - 2) {\n                if (nums[i] < nums[i + 1] && nums[i + 1] > nums[i + 2]) {\n                    seg.set(i + 1, 1)\n                } else {\n                    seg.set(i + 1, 0)\n                }\n            }\n        }\n        return ans\n    }\n}",
    "submit_ts": 1718506648.0
}