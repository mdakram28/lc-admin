{
    "username": "Hongrock",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> f(n);\n        f[0] = 1;\n        for(int i=1; i<n; ++i)  f[i] = f[i-1] * 10 % k;\n        vector<vector<int>> dp(n, vector<int>(k, -1));\n        int m1, m2;\n        if(n % 2 == 0){\n            m1 = n / 2;\n            m2 = m1 - 1;\n            for(int i=0; i<10; ++i){\n                int v = i * (f[m1] + f[m2]) % k;\n                dp[m1][v] = max(dp[m1][v], i);\n            }\n        } else {\n            m1 = m2 = n / 2;\n            for(int i=0; i<10; ++i){\n                int v = i * f[m1] % k;\n                dp[m1][v] = max(dp[m1][v], i);\n            }\n        }\n        for(int i=m1+1; i<n; ++i){\n            int d = i - m1;\n            for(int j=0; j<k; ++j){\n                if(dp[i-1][j] == -1)    continue;\n                for(int x=0; x<10; ++x){\n                    int v = (j + x * (f[m1 + d] + f[m2 - d])) % k;\n                    dp[i][v] = max(dp[i][v], x);\n                }\n            }\n        }\n        string ans = string(n, '9');\n        for(int L=n-1, R=0, j=0; L>=R; --L, ++R){\n            int d = L - m1;\n            ans[L] = ans[R] = dp[L][j] + '0';\n            int v = dp[L][j] * (f[m1 + d] + f[m2 - d]) % k;\n            j = (j + k - v) % k;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723949758",
    "subm_id": "556394761"
}