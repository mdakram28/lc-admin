{
    "username": "sssssummer",
    "submission": "class Solution {\n    int m;\n    int n;\n    public int minimumSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        this.m = m;\n        this.n = n;\n        int res = (int)1e10;\n        for (int i = 0; i < m-1; i++) {\n            for (int j = 0; j < n-1; j++) {\n                int a1 = helper(grid, 0, i, 0, j);\n                int a2 = helper(grid, i+1, m-1, 0, j);\n                int a3 = helper(grid, 0, i, j+1, n-1);\n                int a4 = helper(grid, i+1, m-1, j+1, n-1);\n                \n                \n                int a12 = helper(grid, 0, m-1, 0, j);\n                int a13 = helper(grid, 0, i, 0, n-1);\n                int a24 = helper(grid, i+1, m-1, 0, n-1);\n                int a34 = helper(grid, 0, m-1, j+1, n-1);\n                \n                List<Integer> list = new ArrayList<>();\n                list.add(a12+a3+a4);\n                list.add(a13+a2+a4);\n                list.add(a24+a1+a3);\n                list.add(a34+a1+a2);\n                \n                res = Math.min(res, findMin(list));\n            }\n        }\n        \n        \n        for (int i1 = 0; i1 < m-1; i1++) {\n            for (int i2 = i1+1; i2 < m-1; i2++) {\n                int a1 = helper(grid, 0, i1, 0, n-1);\n                int a2 = helper(grid, i1+1, i2, 0, n-1);\n                int a3 = helper(grid, i2+1, m-1, 0, n-1);\n                \n                res = Math.min(a1+a2+a3, res);\n            }\n        }\n        \n        \n        for (int j1 = 0; j1 < n-1; j1++) {\n            for (int j2 = j1+1; j2 < n-2; j2++) {\n                int a1 = helper(grid, 0, m-1, 0, j1);\n                int a2 = helper(grid, 0, m-1, j1+1, j2);\n                int a3 = helper(grid, 0, m-1, j2+1, n-1);\n                \n                res = Math.min(a1+a2+a3, res);\n            }\n        }\n        \n\n        return res;\n    }\n    \n    \n    private int findMin(List<Integer> list) {\n        \n        int min = Integer.MAX_VALUE;\n        for (int val: list) {\n            min = Math.min(min, val);\n        }\n        return min;\n    }\n    \n    public int helper(int[][] grid, int starti, int endi, int startj, int endj) {\n        int left = endj, right = startj;\n        int up = endi, down = starti;\n        \n        boolean exist = false;\n        for (int i = starti; i <= endi; i++) {\n            for (int j = startj; j <= endj; j++) {\n                if (grid[i][j] == 1) {\n                    exist = true;\n                    left = Math.min(left, j);\n                    right = Math.max(right, j);\n                    \n                    up = Math.min(up, i);\n                    down = Math.max(down, i);\n                }\n            }\n        }\n        if (exist) {\n            return  (right - left + 1) * (down - up + 1);\n        }\n        \n        return 0;\n    }\n}",
    "submit_ts": 1719114131.0
}