{
    "username": "shuklaaman549",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> me;\n        vector<int> vec;\n        for (int i = 0; i < nums.size() / 2; i++) {\n            int a = nums[i], b = nums[nums.size() - i - 1];\n            int difference = abs(a - b);\n            int ex = max({a, b, k - a, k - b});\n            me[difference].push_back(ex);\n            vec.push_back(ex);\n        }\n        int ans = nums.size();\n        sort(vec.begin(), vec.end());\n\n        for (auto& value : me) {\n\n            int difference = value.first;\n            int temp = lower_bound(vec.begin(), vec.end(), difference) - vec.begin();\n            temp = temp * 2 + (nums.size() / 2 - temp);\n\n            for (auto& ex : value.second) {\n                if (ex >= difference) {\n                    temp -= 1;\n                } else {\n                    temp -= 2;\n                }\n            }\n\n            ans = min(temp, ans);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721489414",
    "subm_id": "1327452542"
}