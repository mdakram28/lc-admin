{
    "username": "smoker-2",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] sub = new int[n];\n        for(int i = 0; i < n; i++) {\n            sub[i] = target[i] - nums[i];\n        }\n        int[] cf = new int[n];\n        cf[0] = sub[0];\n        for(int i = 1; i < n; i++) {\n            cf[i] = sub[i] - sub[i - 1];\n        }\n        int min = Math.abs(sub[0]);\n        long res = min;\n        for(int i = 1; i < n; i++) {\n            if((sub[i] > 0 && sub[i - 1] > 0) || (sub[i] < 0 && sub[i - 1] < 0)) {\n                if(Math.abs(sub[i]) > Math.abs(sub[i - 1])) {\n                    res += (Math.abs(sub[i]) - min);\n                    min = Math.abs(sub[i]);\n                }\n                else {\n                    min = Math.min(Math.abs(sub[i]), min);\n                }\n            }\n            else {\n                min = Math.abs(sub[i]);\n                res += min;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721531987",
    "subm_id": "548389752"
}