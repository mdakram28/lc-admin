{
    "username": "Priyansh Sharma",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n#include <set>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        \n        vector<vector<pair<int, int>>> topValues(m, vector<pair<int, int>>(3, {0, -1}));\n        \n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> values;\n            for (int j = 0; j < n; ++j) {\n                values.push_back({board[i][j], j});\n            }\n            sort(values.rbegin(), values.rend());\n            for (int k = 0; k < 3 && k < values.size(); ++k) {\n                topValues[i][k] = values[k];\n            }\n        }\n        \n        long long result = LLONG_MIN;\n        \n        \n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    \n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (topValues[r1][i].second ==topValues[r2][j].second) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (topValues[r3][k].second == topValues[r1][i].second || topValues[r3][k].second == topValues[r2][j].second) continue;\n                                \n                                long long sum = (long long)topValues[r1][i].first +\n                                                (long long)topValues[r2][j].first +\n                                                (long long)topValues[r3][k].first;\n                                result = max(result, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return result;\n    }\n};\n",
    "submit_ts": "1723909457",
    "subm_id": "1359193301"
}