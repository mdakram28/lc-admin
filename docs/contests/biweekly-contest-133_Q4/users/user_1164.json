{
    "username": "callmetiwari",
    "submission": "import java.util.*;\n\nclass Solution {\n    int mod = 1000000007;\n    int mi = 400;\n\n    public int numberOfPermutations(int n, int[][] r) {\n        Map<Integer, Integer> mp = new HashMap<>();\n        for (int i = 0; i < r.length; i++) {\n            mp.put(r[i][0] + 1, r[i][1]);\n        }\n        \n        long[][] dp = new long[n + 1][mi + 1];\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= mi; j++) {\n                for (int k = 0; k < i; k++) {\n                    int pi = j - k;\n                    if (pi >= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][pi]) % mod;\n                    }\n                }\n                if (mp.containsKey(i)) {\n                    int tar = mp.get(i);\n                    for (int jj = 0; jj <= mi; jj++) {\n                        if (jj != tar) {\n                            dp[i][jj] = 0;\n                        }\n                    }\n                }\n            }\n        }\n        \n        long ans = 0;\n        for (int j = 0; j <= mi; j++) {\n            ans = (ans + dp[n][j]) % mod;\n        }\n        \n        return (int) ans;\n    }\n}\n",
    "submit_ts": 1719071711.0
}