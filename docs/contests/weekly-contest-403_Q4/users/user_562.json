{
    "username": "cactus_epic",
    "submission": "class Solution {\npublic:\n    struct Info {\n        int rl, rr, cl, cr;\n        Info(): rl(100), rr(-1), cl(100), cr(-1) {}\n\n        void set(int i, int j) {\n            rl = rr = i;\n            cl = cr = j;\n        }\n\n        Info operator + (const Info& t) {\n            Info ans;\n            ans.rl = min(rl, t.rl);\n            ans.rr = max(rr, t.rr);\n            ans.cl = min(cl, t.cl);\n            ans.cr = max(cr, t.cr);\n            return ans;\n        } \n\n        Info operator += (const Info& t) {\n            rl = min(rl, t.rl);\n            rr = max(rr, t.rr);\n            cl = min(cl, t.cl);\n            cr = max(cr, t.cr);\n            return *this;\n        } \n\n        int area() {\n            if (rr == -1) return 1000;\n            return (rr - rl + 1) * (cr - cl + 1);\n        }\n    };\n\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = INT_MAX;\n\n        Info D[40][40], U[40][40], L[40][40], R[40][40];\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (grid[i][j]) {\n                    U[i][j].set(i, j);\n                    D[i][j].set(i, j);\n                    L[i][j].set(i, j);\n                    R[i][j].set(i, j);\n                }\n            }\n        } \n\n        for (int j = 0; j < n; ++j) {\n            for (int i = m - 2; i >= 0; --i)\n                U[i][j] += U[i + 1][j]; \n        }\n\n        for (int j = 0; j < n; ++j) {\n            for (int i = 1; i < m; ++i)\n                D[i][j] += D[i - 1][j]; \n        }\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = n - 2; j >= 0; --j)\n                L[i][j] += L[i][j + 1];\n        }\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = 1; j < n; ++j)\n                R[i][j] += R[i][j - 1];\n        }\n\n        Info a, b, c;\n        for (int i = 0; i < m; ++i) {\n            a += L[i][0];\n            b = Info();\n            for (int j = m - 1; j > i; --j) {\n                b += L[j][0];\n                c = Info();\n                for (int k = i + 1; k < j; ++k) {\n                    c += L[k][0];\n                }\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n\n            // if (i == m - 1) continue;\n\n            b = Info();\n            for (int j = 0; j < n; ++j) {\n                b += U[i + 1][j];\n                c = Info();\n                for (int k = n - 1; k > j; --k) {\n                    c += U[i + 1][k];\n                }\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n        }\n\n        a = Info();\n        for (int i = m - 1; i > 0; --i) {\n            a += L[i][0];\n            b = Info();\n            for (int j = 0; j < n; ++j) {\n                b += D[i - 1][j];\n                c = Info();\n                for (int k = n - 1; k > j; --k) {\n                    c += D[i - 1][k];\n                }\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n        }\n\n        a = Info();\n        // cout << U[0][0].area() << \" \" << (U[0][1] + U[0][0]).area() << '\\n';\n        for (int j = 0; j < n; ++j) {\n            a += U[0][j];\n            b = Info();\n            for (int k = n - 1; k > j; --k) {\n                b += U[0][k];\n                c = Info();\n                for (int i = j + 1; i < k; ++i) {\n                    c += U[0][i];\n                }\n                // cout << j << \" \" << k << '\\n';\n                // cout << a.area() << \" \" << b.area() << \" \" << c.area() << '\\n';\n\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n\n            // if (j = n - 1) continue;\n\n            b = Info();\n            for (int i = 0; i < m; ++i) {\n                b += L[i][j + 1];\n                c = Info();\n                for (int k = i + 1; k < m; ++k) {\n                    c += L[k][j + 1];\n                }\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n        }\n\n        a = Info();\n        for (int j = n - 1; j > 0; --j) {\n            a += U[0][j];\n            b = Info();\n            for (int i = 0; i < m; ++i) {\n                b += R[i][j - 1];\n                c = Info();\n                for (int k = i + 1; k < m; ++k) {\n                    c += R[k][j - 1];\n                }\n                ans = min(ans, a.area() + b.area() + c.area());\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1719115130",
    "subm_id": "541404714"
}