{
    "username": "connoryangsingapore",
    "submission": "def find(points, skip=-1):\n    maxp = maxm = float('-inf')\n    minp = minm = float('inf')\n\n    for cur in range(len(points)):\n        if cur==skip: continue\n        x, y = points[cur]\n        if x + y > maxp:\n            maxp = x + y\n            maxp_point = cur\n        if x + y < minp:\n            minp = x + y\n            minp_point = cur\n        if x - y > maxm:\n            maxm = x - y\n            maxm_point = cur\n        if x - y < minm:\n            minm = x - y\n            minm_point = cur\n\n    distance = max(maxp - minp, maxm - minm)\n    if distance == maxp - minp:\n        return maxp_point, minp_point, distance\n    else:\n        return maxm_point, minm_point, distance\n    \nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        p1, p2, d = find(points)\n        _, _2, ans1 = find(points, p1)\n        _, _2, ans2 = find(points, p2)\n        return min(ans1, ans2)\n\n\n        "
}