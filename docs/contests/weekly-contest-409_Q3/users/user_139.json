{
    "username": "mickeyandkaka1",
    "submission": "// {{{\n#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing vi = vector<int>;\nusing pii = pair<int, int>;\n#define sz(x) (int)((x).size())\n#define all(x) (x).begin(), (x).end()\n#define clr(a, b) memset(a, b, sizeof(a))\n#define debug(x...)\n#define debug_arr(x...)\n#ifdef LOCAL\n#include \"prettyprint.hpp\"\n#endif\n// }}}\n\nbool check(const pii& a, const pii& b)\n{\n    int l = a.first;\n    int r = a.second;\n\n    int ll = b.first;\n    int rr = b.second;\n\n    return l <= ll && rr <= r;\n}\n\nclass Solution\n{\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries)\n    {\n        vector<int> ans;\n\n        set<pii> st;\n\n        for (int i = 0; i + 1 < n; i++)\n        {\n            st.insert({i, i + 1});\n            // addInterval(st, i, i + 1);\n        }\n        debug(st);\n\n        for (auto& vec : queries)\n        {\n            int u = vec[0];\n            int v = vec[1];\n\n            pii cur{u, v};\n\n            bool add = false;\n            auto iter = st.lower_bound({u, -1});\n            while (1)\n            {\n                if (iter == st.end()) break;\n                auto nxt_iter = iter;\n                nxt_iter++;\n\n                if (check(cur, *iter))\n                {\n                    st.erase(iter);\n                    iter = nxt_iter;\n                    add = true;\n                }\n                else\n                {\n                    break;\n                }\n            }\n\n            if (add) st.insert(cur);\n\n            ans.push_back(st.size());\n        }\n\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1722740292",
    "subm_id": "552330498"
}