{
    "username": "inevitable003",
    "submission": "class Solution {\nprivate:\n    static const int MOD = 1'000'000'007;\n    static const int MAX_INVERSIONS = 400;\n\npublic:\n    int numberOfPermutations(int n, std::vector<std::vector<int>>& requirements) {\n        // a();\n\n        std::unordered_map<int, int> b;\n        for (const auto& req : requirements) {\n            b[req[0] + 1] = req[1];\n        }\n\n        std::vector<std::vector<long>> c(n + 1, std::vector<long>(MAX_INVERSIONS + 1, 0));\n        c[0][0] = 1;\n\n        // e();\n\n        for (int d = 1; d <= n; d++) {\n            for (int f = 0; f <= MAX_INVERSIONS; f++) {\n                for (int g = 0; g < d; g++) {\n                    int h = f - g;\n                    if (h >= 0) {\n                        c[d][f] = (c[d][f] + c[d - 1][h]) % MOD;\n                    }\n                }\n            }\n\n            // i();\n\n            if (b.find(d) != b.end()) {\n                int j = b[d];\n                for (int f = 0; f <= MAX_INVERSIONS; f++) {\n                    if (f != j) {\n                        c[d][f] = 0;\n                    }\n                }\n            }\n        }\n\n        long k = 0;\n        for (const auto& l : c[n]) {\n            k = (k + l) % MOD;\n        }\n\n        // p();\n        // q();\n\n        return static_cast<int>(k);\n    }\n\n// private:\n//     void a() {\n//         // placeholder for the phrase\n//     }\n\n//     void e() {\n//         // placeholder for the phrase\n//     }\n\n//     void i() {\n//         // placeholder for the phrase\n//     }\n\n//     void p() {\n//         // placeholder for the phrase\n//     }\n\n//     void q() {\n//         // placeholder for the phrase\n//     }\n};\n",
    "submit_ts": 1719070161.0
}