{
    "username": "vins215",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MOD = 10**9 + 7\n        \n        # Sort requirements by end index\n        requirements.sort()\n        req_dict = {end: count for end, count in requirements}\n        \n        # Initialize DP table\n        dp = [[0] * 401 for _ in range(n + 1)]\n        dp[0][0] = 1\n        \n        # Fill DP table\n        for i in range(1, n + 1):\n            new_dp = [0] * 401\n            for j in range(min(400, i * (i - 1) // 2) + 1):\n                for k in range(i):\n                    if j >= i - k - 1:\n                        new_dp[j] = (new_dp[j] + dp[i-1][j - (i - k - 1)]) % MOD\n            \n            # Apply requirement if it exists for this position\n            if i - 1 in req_dict:\n                req_count = req_dict[i - 1]\n                if req_count > j:\n                    return 0  # Impossible to satisfy this requirement\n                temp = new_dp[req_count]\n                new_dp = [0] * 401\n                new_dp[req_count] = temp\n            \n            dp[i] = new_dp\n        \n        return dp[n][req_dict[n-1]]",
    "submit_ts": "1719067526",
    "subm_id": "1296729041"
}