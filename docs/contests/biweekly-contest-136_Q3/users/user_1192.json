{
    "username": "rax_coder",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        // if four easily posible convert it,\n        // n if odd, m if odd then ...\n        int nn = n/2, mm = m/2;\n        int ans = 0;\n        for(int i=0;i<nn;i++){\n            for(int j=0;j<mm;j++){\n                int ax = n-i-1;\n                int by = m-j-1;\n                int count = 0;\n                if(grid[i][j])count++;\n                if(grid[ax][j])count++;\n                if(grid[i][by])count++;\n                if(grid[ax][by])count++;\n                ans += min(count,4-count);\n            }\n        }\n        int count11 = 0, count10 = 0;\n        if(n%2){\n            int l = 0 , r = m-1;\n            while(l<r){\n                if(grid[n/2][l]^grid[n/2][r])count10++;\n                if((grid[n/2][l] == grid[n/2][r])&& (grid[n/2][l]==1)) count11++;\n                l++;r--;\n            }\n        }\n        if(m%2){\n            int l = 0 , r = n-1;\n            while(l<r){\n                if(grid[l][m/2]^grid[r][m/2])count10++;\n                if((grid[l][m/2] == grid[r][m/2])&& (grid[r][m/2]==1)) count11++;\n                l++,r--;\n            }\n        }\n        if((n%2==1) && (m%2==1))ans+=grid[n/2][m/2];\n                // cout<<count11<<\" \"<<count10<<\" \"<<ans<<endl;\n\n        count11%=2;\n        if(count11 && count10)ans++,count10--,count11--;\n        ans+=count10;\n        count10%=2;\n        if(count11==1 && count10==0)ans+=2;\n        return ans;\n    }\n};",
    "submit_ts": "1722698695",
    "subm_id": "1343188819"
}