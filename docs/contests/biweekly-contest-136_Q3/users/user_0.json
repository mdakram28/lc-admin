{
    "username": "Heltion",
    "submission": "class Solution {\n public:\n  int minFlips(vector<vector<int>>& grid) {\n    int res = 0, n = grid.size(), m = grid[0].size();\n    vector<int> c(4);\n    for (int i = 0; i <= n - 1 - i; i += 1)\n      for (int j = 0; j <= m - 1 - j; j += 1) {\n        if (i < n - 1 - i and j < m - 1 - j) {\n          array<int, 2> c = {0, 0};\n          c[grid[i][j]] += 1;\n          c[grid[n - 1 - i][j]] += 1;\n          c[grid[i][m - 1 - j]] += 1;\n          c[grid[n - 1 - i][m - 1 - j]] += 1;\n          res += min(c[0], c[1]);\n        } else if (i < n - 1 - i) {\n          c[grid[i][j] * 2 + grid[n - 1 - i][j]] += 1;\n        } else if (j < m - 1 - j) {\n          c[grid[i][j] * 2 + grid[i][m - 1 - j]] += 1;\n        } else {\n          res += grid[i][j];\n        }\n      }\n    int x = c[0], y = c[1] + c[2], z = c[3];\n    return res + (y ? y : z % 2 * 2);\n  }\n};",
    "submit_ts": "1722695967",
    "subm_id": "552258035"
}