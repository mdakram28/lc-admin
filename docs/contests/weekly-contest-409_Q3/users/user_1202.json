{
    "username": "golu_0409",
    "submission": "#define ll int\nclass Solution {\npublic:\n    ll n;\nll removeRangeExclusive(set<int>& s, int start, int end) {\n    ll dk = 0;\n    auto it = s.upper_bound(start);\n    while (it != s.end() && *it < end) {\n        it = s.erase(it);++dk;\n    }\n    return dk;\n}\n\nvector<int> shortestDistanceAfterQueries(int m, vector<vector<int>>& queries) {\n    vector<int> ans;\n    map<ll,ll> mp;\n    n = 1ll*m;\n    ll dk = n-1;\n    for(ll i = 0;i<n-1;++i){\n        mp[i] = (i+1);\n    }\n    \n    vector<ll> dp(n,0);\n    set<ll> s;\n    for(ll i = 1;i<n;++i){\n        dp[i] = (i);\n        s.insert(i);\n    }\n    \n    ll die = 0;\n    for(auto it:queries){\n        ll i = it[0],j = it[1];\n        die += removeRangeExclusive(s,i,j);\n        \n        \n\n        // if(dp[j] > (1+dp[i])){\n        //     dk -= (dp[j]-(dp[i]+1));\n        //     dp[j] = (dp[i]+1);\n            // dk -= (j-mp[i]);\n            // mp[i] = j;\n        // }\n        ans.push_back(dk-die);\n    }\n    return ans;\n}\n};",
    "submit_ts": "1722743998",
    "subm_id": "1343804838"
}