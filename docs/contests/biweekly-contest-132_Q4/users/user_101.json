{
    "username": "adityavkrm",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        const int n = nums.size();\n        if (n == 1) {\n            return 1;\n        } else if (k >= n - 1) {\n            return n;\n        }\n        unordered_map<int, vector<int>> dp;\n        dp[nums[0]] = vector<int>(k + 1, 1);\n        vector<pair<int, int>> maxDp(k + 1, { 1, nums[0] });\n        vector<int> secondMaxDp(k + 1);\n\n        auto getMaxDP = [](int num, int k, const vector<pair<int, int>>& maxDp, const vector<int>& secondMaxDp) {\n            if (maxDp[k].second != num) {\n                return maxDp[k].first;\n            }\n            return secondMaxDp[k];\n        };\n        \n        for (int i = 1; i < n; ++i) {\n            auto it = dp.find(nums[i]);\n            if (it != dp.end()) {\n                auto& thisDp = it->second;\n                for (int j = k; j > 0; --j) {\n                    thisDp[j] = 1 + max(thisDp[j], getMaxDP(nums[i], j - 1, maxDp, secondMaxDp));\n                }\n                ++thisDp[0];\n            } else {\n                vector<int> thisDp;\n                thisDp.reserve(k + 1);\n                thisDp.push_back(1);\n                for (int j = 1; j <= k; ++j) {\n                    thisDp.push_back(1 + maxDp[j - 1].first);\n                }\n                it = dp.insert(make_pair(nums[i], std::move(thisDp))).first;\n            }\n\n            // Update maxDp and secondMaxDp\n            const auto& thisDp = it->second;\n            for (int j = 0; j <= k; ++j) {\n                if (thisDp[j] > maxDp[j].first) {\n                    secondMaxDp[j] = maxDp[j].first;\n                    maxDp[j].first = thisDp[j];\n                    maxDp[j].second = nums[i];\n                } else if (thisDp[j] > secondMaxDp[j]) {\n                    secondMaxDp[j] = thisDp[j];\n                }\n            }\n        }\n        return max_element(maxDp.begin(), maxDp.end())->first;\n    }\n};",
    "submit_ts": 1717860227.0
}