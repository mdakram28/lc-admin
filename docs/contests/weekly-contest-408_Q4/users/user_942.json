{
    "username": "prat-zzz",
    "submission": "class Solution {\npublic:\n bool canReachCorner(int w, int h, vector<vector<int>>& c) {\n        return isPathPossible(w, h, c);\n    }\n\nprivate:\n    bool isPathPossible(int w, int h, vector<vector<int>>& c) {\n        int n = c.size();\n        vector<vector<int>> g(n + 4);\n\n        buildGraph(g, c, w, h, n);\n        return !areConnected(g, n);\n    }\n\n    void buildGraph(vector<vector<int>>& g, vector<vector<int>>& c, int w, int h, int n) {\n        for (int i = 0; i < n; ++i) {\n            checkBounds(g, c, i, w, h, n);\n            checkIntersections(g, c, i, n);\n        }\n    }\n\n    void checkBounds(vector<vector<int>>& g, vector<vector<int>>& c, int i, int w, int h, int n) {\n        if (c[i][0] <= c[i][2]) addEdge(g, i, n);\n        if (w - c[i][0] <= c[i][2]) addEdge(g, i, n + 2);\n        if (c[i][1] <= c[i][2]) addEdge(g, i, n + 1);\n        if (h - c[i][1] <= c[i][2]) addEdge(g, i, n + 3);\n    }\n\n    void checkIntersections(vector<vector<int>>& g, vector<vector<int>>& c, int i, int n) {\n        for (int j = i + 1; j < n; ++j) {\n            double dist = sqrt(pow(c[i][0] - c[j][0], 2) + pow(c[i][1] - c[j][1], 2));\n            if (c[i][2] + c[j][2] >= dist) {\n                addEdge(g, i, j);\n            }\n        }\n    }\n\n    void addEdge(vector<vector<int>>& g, int i, int j) {\n        g[i].push_back(j);\n        g[j].push_back(i);\n    }\n\n    bool areConnected(vector<vector<int>>& g, int n) {\n        return bfs(g, n, n + 1, n + 2, n + 4) || bfs(g, n + 3, n + 2, n + 1, n + 4);\n    }\n\n    bool bfs(vector<vector<int>>& g, int start, int t1, int t2, int nodes) {\n        queue<int> q;\n        vector<bool> vis(nodes + 4, false);\n        q.push(start);\n        vis[start] = true;\n\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n            for (int neighbor : g[node]) {\n                if (!vis[neighbor]) {\n                    q.push(neighbor);\n                    vis[neighbor] = true;\n                }\n            }\n        }\n\n        return vis[t1] || vis[t2];\n    }\n};\n  ",
    "submit_ts": "1722139032",
    "subm_id": "1335806051"
}