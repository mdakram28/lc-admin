{
    "username": "ashwanthkannan",
    "submission": "\nvector<int> adjlst[100005];\nint ans[100005];\nint subans[100005];\n\n\nvoid dfs(int u,  int p){\n    subans[u] = 0;\n    for(int v : adjlst[u]){\n        if(v == p) continue;\n        \n        dfs(v , u);\n        subans[u] = max(subans[u] , subans[v] + ((v%2 == 0)?2:1));\n    }\n    \n    if(u == 0){\n        ans[u] = subans[u];\n    }\n}\n\n\nvoid dfs1(int u , int p , int up = 0){\n    multiset<int> ms;\n    ms.insert(up);\n    for(int v : adjlst[u]){\n        if(v == p) continue;\n        \n        ms.insert(subans[v] +  ((v%2 == 0)?2:1));\n    }\n    \n    for(int v : adjlst[u]){\n        if(v == p) continue;\n        ms.erase(ms.find(subans[v]+ ((v%2 == 0)?2:1)));\n        int cost = (u%2 == 0)?2:1;\n        \n        ans[v] = max(ans[v] , *ms.rbegin() + cost);\n        ans[v] = max(ans[v] , subans[v]);\n        \n        dfs1(v , u , *ms.rbegin() + cost);\n        \n        ms.insert(subans[v]+ ((v%2 == 0)?2:1));\n        \n    }\n}\n\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        \n        int n = edges.size();\n        \n        for(int i = 0 ; i <= n ; i ++){\n            adjlst[i].clear();\n            subans[i] = 0;\n            ans[i] = 0;\n        }\n        for(auto kk : edges){\n            adjlst[kk[0]].push_back(kk[1]);\n            adjlst[kk[1]].push_back(kk[0]);\n        }\n        \n        dfs(0,-1);\n        \n        dfs1(0,-1);\n        \n      \n        vector<int> fans(edges.size() + 1);\n        \n        for(int i = 0 ; i  <=n ; i  ++) fans[i] = ans[i];\n        return fans;\n    }\n};",
    "submit_ts": "1722696922",
    "subm_id": "1343127412"
}