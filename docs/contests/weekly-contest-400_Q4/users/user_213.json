{
    "username": "catnip033",
    "submission": "struct SegTree {\n    int n;\n    vector<int> T;\n    SegTree(vector<int> &v) : n(v.size()), T(v.size()*4) {\n        init(1, 0, n-1, v);\n    }\n\n    int init(int ni, int nl, int nr, vector<int> &v) {\n        if(nl == nr) return T[ni] = v[nl];\n        int m = nl+nr>>1;\n        return T[ni] = init(ni*2, nl, m, v) & init(ni*2+1, m+1, nr, v);\n    }\n\n    int query(int l, int r, int ni, int nl, int nr) {\n        if(r < nl || nr < l) return -1;\n        if(l <= nl && nr <= r) return T[ni];\n        int m = nl+nr>>1;\n        return query(l, r, ni*2, nl, m) & query(l, r, ni*2+1, m+1, nr);\n    }\n\n    int query(int l, int r) { return query(l, r, 1, 0, n-1); }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        const int n = nums.size();\n        int lo = 0, hi = 0, a = -1, ans = INT_MAX;\n        SegTree T(nums);\n        while(lo < n) {\n            if(hi == n || lo < hi && a < k) {\n                lo++;\n                a = lo == hi ? -1 : T.query(lo, hi-1);\n            }\n            else a &= nums[hi++];\n            if(lo < hi) ans = min(ans, abs(k-a));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717297547",
    "subm_id": "1274746730"
}