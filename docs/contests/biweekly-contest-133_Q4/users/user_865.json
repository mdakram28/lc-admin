{
    "username": "striver1217010",
    "submission": "import java.util.*;\nclass Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        long mod = 1000000007;\n        Map<Integer, Integer> hm = new HashMap<>();\n\n        for (int i = 0; i < requirements.length; i++) {\n            hm.put(requirements[i][0], requirements[i][1]);\n        }\n\n        //System.out.println(hm);\n\n        if (hm.containsKey(0) && hm.get(0).intValue() != 0) {\n            return 0;\n        }\n\n        long dp[][] = new long[n][hm.get(n - 1).intValue() + 1];\n\n\n        dp[0][0] = 1;\n\n        for (int i = 1; i < dp[0].length; i++) {\n            dp[0][i] = 0;\n        }\n\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < dp[0].length; j++) {\n                if (hm.containsKey(i) && hm.get(i).intValue() != j) {\n                    dp[i][j] = 0;\n                    continue;\n                }\n\n                dp[i][j] = 0;\n\n                for (int k = 0; k <= i; k++) {\n\n                    if (j >= i - k) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][j - (i - k)])%mod;\n                    }\n                }\n            }\n        }\n\n        // for (int i = 0; i < n; i++) {\n        //     for (int j = 0; j < dp[0].length; j++) {\n        //         System.out.print(dp[i][j] + \" \");\n        //     }\n        //     System.out.println();\n        // }\n\n\n        return (int)(dp[n - 1][hm.get(n - 1)]);\n        \n    }\n}",
    "submit_ts": "1719071423",
    "subm_id": "1296846418"
}