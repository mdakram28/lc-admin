{
    "username": "BadK007",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        auto f = [&](int x) {\n            int i = 0, j = 0;\n            long long ans = 0;\n            vector<int> bit(32, 0);\n            auto add = [&](int x) -> void {\n                for (int i = 0; i < 32; i++) {\n                    if ((x & (1 << i)) == 0) {\n                        bit[i]++;\n                    }\n                }\n            };\n            auto subtract = [&](int x) -> void {\n                for (int i = 0; i < 32; i++) {\n                    if ((x & (1 << i)) == 0) {\n                        bit[i]--;\n                    }\n                }\n            };\n            auto calculate = [&]() -> int {\n                int res = 0;\n                for (int i = 0; i < 32; i++) {\n                    if (bit[i] == 0) {\n                        res += (1 << i);\n                    }\n                }\n                return res;\n            };\n            while (j < n) {\n                add(nums[j]);\n                while (i <= j && calculate() < x) {\n                    subtract(nums[i]);\n                    i++;\n                }\n                ans += (j - i + 1);\n                j++;\n            }\n            return ans;\n        };\n        return f(k) - f(k + 1);\n    }\n};\n",
    "submit_ts": "1720278698",
    "subm_id": "1311720421"
}