{
    "username": "user9168lk",
    "submission": "#include<bits/stdc++.h>\ntypedef long long ll;\n#define pb push_back\n#define f(i,a,b) for(int i=a;i<b;i++)\nusing namespace std;\n\nclass SegmentTree {\npublic:\n    vector<int> tree;\n    int size;\n\n    SegmentTree(vector<int>& arr) {\n        size = arr.size();\n        tree.resize(4 * size);\n        buildTree(arr, 0, 0, size - 1);\n    }\n\n    void buildTree(vector<int>& arr, int node, int start, int end) {\n        if (start == end) {\n            tree[node] = arr[start];\n        } else {\n            int mid = start + (end - start) / 2;\n            buildTree(arr, 2 * node + 1, start, mid);\n            buildTree(arr, 2 * node + 2, mid + 1, end);\n            tree[node] = tree[2 * node + 1] & tree[2 * node + 2];\n        }\n    }\n\n    int rangeQuery(int l, int r) {\n        return rangeQuery(0, 0, size - 1, l, r);\n    }\n\n    int rangeQuery(int node, int start, int end, int l, int r) {\n        if (r < start || end < l) {\n            return INT_MAX;\n        }\n        if (l <= start && end <= r) {\n            return tree[node];\n        }\n        int mid = start + (end - start) / 2;\n        int leftResult = rangeQuery(2 * node + 1, start, mid, l, r);\n        int rightResult = rangeQuery(2 * node + 2, mid + 1, end, l, r);\n        return leftResult & rightResult;\n    }\n};\n\nint findClosestAND(vector<int> arr, int k) {\n    int n = arr.size();\n    SegmentTree st(arr);\n    int closestDiff = INT_MAX;\n\n    for (int i = 0; i < n; i++) {\n        int low = i - 1, high = n - 1, mid;\n        while (high - low > 1) {\n            mid = low + (high - low) / 2;\n            if (st.rangeQuery(i, mid) >= k)\n                low = mid;\n            else\n                high = mid;\n        }\n        if (low != i - 1)\n            closestDiff = min(closestDiff, abs(st.rangeQuery(i, low) - k));\n        closestDiff = min(closestDiff, abs(st.rangeQuery(i, high) - k));\n    }\n    return closestDiff;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        return findClosestAND(nums, k);\n    }\n};\n",
    "submit_ts": 1717299178.0
}