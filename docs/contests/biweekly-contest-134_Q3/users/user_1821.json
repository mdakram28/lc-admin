{
    "username": "MckinellGreen7",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        l = 0\n        r = 0 \n        ans = 0\n        n = len(colors)\n        while l<len(colors):\n            if r-l+1!=k:\n                parity = 0\n                for i in range(k):\n                    if i==0:\n                        parity = colors[(i+l)%n]\n                    else:\n                        if colors[(i+l)%n] == parity:\n                            r = i+l\n                            l = i+l\n\n                            break\n                        else:\n                            parity = colors[(i+l)%n]\n                            r = i+l\n                continue\n            else:\n                if r-l+1 == k:\n                    ans += 1\n                if l<len(colors):\n                    if k%2==0 and colors[l] == colors[(r+1)%n]:\n                        l+=1\n                        r+=1\n                    elif k%2 == 1 and colors[l] != colors[(r+1)%n]:\n                        l+=1\n                        r+=1\n                    else:\n                        l = r+1\n                        r = r+1\n        return ans",
    "submit_ts": "1720280126",
    "subm_id": "1311777888"
}