{
    "username": "LemonDrop47",
    "submission": "class Solution {\npublic:\n    const int MOD=1e9+7;\n    void dfs(vector<vector<int>>& dp,map<int,int>& mp, int i,int n)\n    {\n        if(i==n)\n            return;\n        for (int j = 0; j <= 400; ++j) {\n            for (int k = 0; k < i; ++k) {\n                if ((j - k) >= 0) {\n                    dp[i][j] = (dp[i][j] + dp[i - 1][j - k]) % MOD;\n                }\n            }\n        }\n        if (mp.find(i) != mp.end()) {\n            int req_value = mp[i];\n            \n            for (int j = 0; j <= 400; ++j) {\n                if (j != req_value) {\n                    dp[i][j] = 0;\n                }\n            }\n        }\n        dfs(dp, mp, i+1, n);\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int,int> mp;\n        for (auto it : requirements)\n            mp[it[0] + 1]=it[1];\n        vector<vector<int>> dp(n+1,vector<int>(401,0));\n        dp[0][0] = 1;\n        dfs(dp,mp,1,n+1);\n        int res = 0;\n        for (auto it : dp[n]) {\n            res = (res + it) % MOD;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719071038.0
}