{
    "username": "mrpurvesh",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int rows = grid.length;\n        int cols = grid[0].length;\n        int result = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                result += 1;\n            }\n        }\n        \n        int[] adjustments = new int[3];\n        \n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = grid[rows / 2][left] + grid[rows / 2][right];\n                adjustments[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n                adjustments[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (adjustments[2] % 2 == 1) {\n            if (adjustments[1] > 0) {\n                result += adjustments[1];\n            } else {\n                result += 2;\n            }\n        } else {\n            result += adjustments[1];\n        }\n        \n        for (int row = 0; row < rows / 2; row++) {\n            for (int col = 0; col < cols / 2; col++) {\n                int topLeft = grid[row][col];\n                int bottomLeft = grid[rows - 1 - row][col];\n                int topRight = grid[row][cols - 1 - col];\n                int bottomRight = grid[rows - 1 - row][cols - 1 - col];\n                \n                int total = topLeft + bottomLeft + topRight + bottomRight;\n                \n                if (total != 0 && total != 4) {\n                    result += Math.min(total, 4 - total);\n                }\n            }\n        }\n        \n        return result;\n    }\n}\n",
    "submit_ts": "1722699859",
    "subm_id": "1343224542"
}