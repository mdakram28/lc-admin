{
    "username": "user0790KB",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int l) {\n        int n = nums.size(), ret = 1;\n        map<pair<int, int>, int> dp;\n        vector<pair<int, int>> mx(l + 1, {0, 0});\n        for(int k = 0;k <= l;k++) dp[{nums[n - 1], k}] = 1, mx[k] = {nums[n - 1], 1};\n        for(int i = n - 2;~i;i--){\n            for(int k = 0;k <= l;k++){\n                dp[{nums[i], k}]++;\n                if(k > 0 && mx[k - 1].first != nums[i]){\n                    dp[{nums[i], k}] = max(dp[{nums[i], k}], 1 + mx[k - 1].second);\n                }\n                if(mx[k].second < dp[{nums[i], k}]){\n                    mx[k] = {nums[i], dp[{nums[i], k}]};\n                }\n                ret = max(ret, dp[{nums[i], k}]);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717861512.0
}