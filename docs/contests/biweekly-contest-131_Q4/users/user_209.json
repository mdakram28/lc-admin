{
    "username": "zhi-cr",
    "submission": "const int N=5e4+10;\nstruct node\n{\n    int l;\n    int r;\n    int lp;\n    int rp;\n    int len;\n};\nnode tr[4*N];\nvoid pushup(int u)\n{\n    tr[u].len=max(tr[u<<1|1].len,tr[u<<1].len);\n    int lb=(tr[u<<1].rp==-1? tr[u<<1].l:tr[u<<1].rp);\n    int rb=(tr[u<<1|1].lp==-1? tr[u<<1|1].r:tr[u<<1|1].lp);\n    tr[u].len=max(tr[u].len,rb-lb);\n    \n    tr[u].lp=(tr[u<<1].lp==-1? tr[u<<1|1].lp:tr[u<<1].lp);\n    tr[u].rp=tr[u<<1|1].rp==-1? tr[u<<1].rp:tr[u<<1|1].rp;\n    // cout<<\"*\"<<tr[u].l<<\" \"<<tr[u].r<<\" \"<<tr[u].len<<\"\\n\";\n}\nnode pushup(node tr1,node tr2)\n{\n    node ans={tr1.l,tr2.r};\n    ans.len=max(tr1.len,tr2.len);\n    int lb=(tr1.rp==-1? tr1.l:tr1.rp);\n    int rb=(tr2.lp==-1? tr2.r:tr2.lp);\n    ans.len=max(ans.len,rb-lb);\n    ans.lp=(tr1.lp==-1? tr2.lp:tr1.lp);\n    ans.rp=tr2.rp==-1? tr1.rp:tr2.rp;\n    return ans;\n}\nvoid modify(int u,int x)\n{   \n    // cout<<u<<\" \"<<tr[u].l<<\" \"<<tr[u].r<<\"\\n\";\n    if(tr[u].l==tr[u].r&&tr[u].l==x)\n    {\n        tr[u].lp=x;\n        tr[u].rp=x;\n        tr[u].len=0;\n    }\n    else\n    {\n        int mid=(tr[u].l+tr[u].r)>>1;\n        if(x<=mid)\n        modify(u<<1,x);\n        else modify(u<<1|1,x);\n        pushup(u);\n    }\n}\nvoid build(int u,int l,int r)\n{\n    \n    if(l==r)\n    {\n        tr[u]={l,r,-1,-1,0};\n        return;\n    }\n    tr[u]={l,r};\n    int mid=(l+r)>>1;\n    build(u<<1,l,mid);\n    build(u<<1|1,mid+1,r);\n    pushup(u);\n    \n}\nnode query(int u,int r)\n{\n    if(tr[u].r<=r)\n    {\n        return tr[u];\n    }\n        int mid=(tr[u].l+tr[u].r)>>1;\n        node tr1,tr2;\n        tr1=query(u<<1,r);\n        node ans=tr1;\n        if(r>mid)\n        {\n            tr2=query(u<<1|1,r);\n            ans=pushup(tr1,tr2);\n        }\n        return ans;\n}\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& q) {\n       \n        \n        int m=q.size(); \n        int n=min((int)5e4,3*m);\n        build(1,1,n+1);\n        vector<bool> ans;\n        for(int i=0;i<q.size();i++)\n        {\n            int op=q[i][0];\n            if(op==1)\n            {\n                modify(1,q[i][1]+1);\n            }\n            else \n            {\n                node res=query(1,q[i][1]+1);\n                 // cout<<res.len<<\"\\n\";\n                if(res.len>=q[i][2])\n                {\n                    ans.push_back(true);\n                }\n                else ans.push_back(false);\n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": 1716651462.0
}