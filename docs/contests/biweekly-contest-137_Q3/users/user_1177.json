{
    "username": "Competent KellerOib",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<pair<int,int>>res;\n\n        int m=board.size(),n=board[0].size();\n        int row[110]={0},col[110]={0};\n        for(int i=0;i<=100;i++){\n            row[i]=col[i]=0;\n        }\n        long long maxx=INT_MIN;\n        long long minn=INT_MAX;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                maxx=max(maxx,(long long)board[i][j]);\n                minn=min(minn,(long long)board[i][j]);\n            }\n        }\n        long long ans=3*minn;\n        //cout<<maxx<<endl;\n        auto dfs=[&](auto && dfs,long long tmp){\n            long long left=3-res.size();\n            if((tmp+left*maxx)<ans){\n                return;\n            }\n            if(res.size()==3){\n                ans=max(ans,tmp);\n                return;\n            }\n            for(int i=0;i<m;i++){\n                for(int j=0;j<n;j++){\n                    if(!row[i]&&!col[j]){\n                        row[i]=col[j]=1;\n                        res.push_back({i,j});\n                        dfs(dfs,tmp+board[i][j]);\n                        row[i]=col[j]=0;\n                        res.pop_back();\n                    }\n                }\n            }\n            \n        };\n        dfs(dfs,0);\n        return ans;\n    }\n};",
    "submit_ts": "1723909150",
    "subm_id": "556334750"
}