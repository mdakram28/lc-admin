{
    "username": "ankiit_k_",
    "submission": "class Solution {\npublic:\n    vector<int>seg,v1;\n    void build(int id,int l,int r)\n    {\n        if(r-l==1)\n        {\n            seg[id]=v1[l];\n            return;\n        }\n        int mid=(l+r)/2;\n        build(2*id,l,mid);\n        build(2*id+1,mid,r);\n        seg[id]=seg[2*id]&seg[2*id+1];\n    }\n    int find(int x,int y,int id,int l,int r)\n    {\n        if(r<=x||l>y)\n        {\n            return -1;\n        }\n        if(l>=x&&r-1<=y)\n        {\n            return seg[id];\n        }\n        int mid=(l+r)/2;\n        int num1=-1;\n        if(!(mid<=x||l>y))num1=find(x,y,2*id,l,mid);\n        int num2=-1;\n        if(!(r<=x||mid>y))num2=find(x,y,2*id+1,mid,r);\n        int tmp=0;\n        if(num1!=-1&&num2!=-1)\n        {\n            tmp=num1&num2;\n        }\n        else if(num1==-1)\n        {\n            tmp=num2;\n        }\n        else if(num2==-1)\n        {\n            tmp=num1;\n        }\n        return tmp;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        long long ans=0;\n        seg.resize(4*n+1);\n        v1=nums;\n        build(1,0,n);\n        for(int i=0;i<n;i++)\n        {\n            int lo=i,hi=n-1,mid,ans1=-1;\n            while(lo<=hi)\n            {\n                mid=lo+(hi-lo)/2;\n                int num=find(i,mid,1,0,n);\n                if(num==k)\n                {\n                    ans1=mid;\n                    hi=mid-1;\n                }\n                else if(num>k)\n                {\n                    lo=mid+1;\n                }\n                else\n                {\n                    hi=mid-1;\n                }\n            }\n            lo=i,hi=n-1;\n            int ans2=-1;\n            while(lo<=hi)\n            {\n                mid=lo+(hi-lo)/2;\n                int num=find(i,mid,1,0,n);\n                // cout<<lo<<\" \"<<mid<<\" \"<<hi<<endl;\n                if(num==k)\n                {\n                    ans2=max(ans2,mid);\n                    // cout<<ans2<<endl;\n                    lo=mid+1;\n                }\n                else if(num>k)\n                {\n                    lo=mid+1;\n                }\n                else\n                {\n                    hi=mid-1;\n                }\n            }\n            if(ans1!=-1)\n            {\n                ans+=ans2-ans1+1;\n            }\n            // cout<<ans1<<\" \"<<ans2<<endl;\n        }\n        // cout<<seg[1]<<endl;\n        // cout<<find(1,2,1,0,n)<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720280608",
    "subm_id": "1311795670"
}