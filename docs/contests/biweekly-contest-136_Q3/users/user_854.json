{
    "username": "elastic-noethera0s",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int res = 0;\n        for (int i = 0; i < m / 2; i++){\n            for (int j = 0; j < n / 2; j++){\n                int cnt = grid[i][j] + grid[m - i - 1][j] + grid[i][n - j - 1] + grid[m - i - 1][n - j - 1];\n                res += min(cnt, 4 - cnt);\n            }\n        }\n        int cnt = 0, diff = 0;\n        if (m & 1){\n            for (int i = 0, j = n - 1; i < j; i++, j--){\n                cnt += grid[m / 2][j] + grid[m / 2][i];\n                if (grid[m / 2][j] != grid[m / 2][i])   diff++;\n            }\n        }\n        if (n & 1){\n            for (int i = 0, j = m - 1; i < j; i++, j--){\n                cnt += grid[i][n / 2] + grid[j][n / 2];\n                if (grid[i][n / 2] != grid[j][n / 2])   diff++;\n            }\n        }\n\n        if ((n & 1) && (m & 1)){\n            res += grid[m / 2][n / 2];\n        }\n\n        if (diff == 0){\n            if (cnt % 4 == 0)   return res;\n            return res + 2;\n        }\n        return res + diff;\n    }\n};",
    "submit_ts": "1722698553",
    "subm_id": "552271416"
}