{
    "username": "woaixuexi-6",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < m / 2; i++)\n            for(int j = 0; j < n / 2; j++)\n            {\n                int t = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j];\n                ans += min(t, 4 - t);\n            }\n        \n        if(m % 2 == 1 && n % 2 == 1)\n            ans += grid[m / 2][n / 2];\n        // cout << ans << endl;\n        \n        int cnt = 0, flip = 0;\n        if(n % 2 == 1)\n        {\n            for(int i = 0; i < m / 2; i++)\n            {\n                if(grid[i][n / 2] != grid[m - 1 - i][n / 2])\n                    flip++;\n                else if(grid[i][n / 2] == 1)\n                    cnt++;\n            }\n        }\n        if(m % 2 == 1)\n        {\n            for(int j = 0; j < n / 2; j++)\n            {\n                if(grid[m / 2][n - 1 - j] != grid[m / 2][j])\n                    flip++;\n                else if(grid[m / 2][j] == 1)\n                    cnt++;\n            }\n        }\n        // cout << cnt << \" \" << flip << endl;\n\n        ans += flip;\n        if(cnt % 2 == 1 && flip == 0)\n            ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722696236",
    "subm_id": "552259803"
}