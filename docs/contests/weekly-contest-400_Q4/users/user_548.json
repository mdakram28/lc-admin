{
    "username": "pulkit31997",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n\n        int n=nums.length;\n        int cur=nums[0];\n        int ans=Math.abs(cur-k);\n        int[] count=new int[31];\n        for(int l=0;l<31;l++){\n            int mask=1<<l;\n            if((mask & nums[0])==0){\n                count[l]++;\n            }\n        }\n        int j=0;\n        for(int i=1;i<n;i++){\n            cur=cur&nums[i];\n            for(int l=0;l<31;l++){\n                int mask=1<<l;\n                if((mask & nums[i])==0){\n                    count[l]++;\n                }\n            }\n            ans=Math.min(ans,Math.abs(cur-k));\n            // System.out.println(cur+\"up\");\n            while(j<i && cur<k){\n                for(int l=0;l<31;l++){\n                    int mask=1<<l;\n                    if((mask & nums[j])==0){\n                        count[l]--;\n                    }\n                }\n                j++;\n                cur=getCur(count);\n                 ans=Math.min(ans,Math.abs(cur-k));\n                // System.out.println(cur+\"in\");\n            }\n\n            // System.out.println(cur + \" \"+count[0]+\" \"+count[1]+\" \"+count[2]+\" \"+count[3]);\n            ans=Math.min(ans,Math.abs(cur-k));\n        }\n        return ans;\n    }\n    int getCur(int[] count){\n        int cur=0;\n        for(int l=0;l<31;l++){\n            if(count[l]==0){\n                cur|=(1<<l);\n            }\n        }\n        return cur;\n    }\n}\n// 1\n//     0\n//     91 11\n\n// [1,2,4,5]\n// 3\n// [1,2,1,2]\n// 2\n// [1]\n// 10\n// [9,10,7]\n// 6\n// [21,72,97,56,18]\n// 43\n",
    "submit_ts": "1717298820",
    "subm_id": "1274792335"
}