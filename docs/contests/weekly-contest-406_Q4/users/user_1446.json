{
    "username": "klahsiv",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        priority_queue < pair<long long, long long>> pq;\n        \n        for(int i = 0; i + 1 < m; i++){\n            pq.push( {horizontalCut[i], 1} );\n        }\n        for(int i = 0; i + 1 < n; i++){\n            pq.push( {verticalCut[i], -1} );\n        }\n        \n        long long ans = 0;\n        long long hc = 1, vc = 1;\n        \n        while(!pq.empty()){\n            \n            long long cost = pq.top().first;\n            long long type = pq.top().second;\n            \n            pq.pop();\n            \n            ans += cost * (type == 1 ? vc : hc);\n            \n            if(type == 1)hc++;\n            else vc++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720926262",
    "subm_id": "1320280891"
}