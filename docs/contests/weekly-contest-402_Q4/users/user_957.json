{
    "username": "Sanyasi",
    "submission": "class SGTree{ \n   vector<int>seg;\npublic:\n    SGTree(int n)\n    {\n        seg.resize(4*n);\n    }\n \n    void build (int ind,int low,int high,vector<int>&arr)\n    {\n        if(low==high)\n        {\n            seg[ind]=arr[low];\n            return;\n        }\n \n        int mid= (low+high)>>1;\n        build(2*ind+1,low,mid,arr);\n        build(2*ind+2,mid+1,high,arr);\n        seg[ind]=(seg[2*ind+1]+seg[2*ind+2]);\n    }\n \n    int query(int ind,int low,int high, int l,int r)\n    {\n         if(r<low||high<l)return 0;\n \n         if(l<=low&&high<=r)return seg[ind];\n \n         int mid=(low+high)>>1;\n         int left=query(2*ind+1,low,mid,l,r);\n         int right=query(2*ind+2,mid+1,high,l,r);\n         return (left+right);\n    }\n \n    void update(int ind,int low,int high,int i,int val)\n    {\n        if(low==high)\n        {\n            seg[ind]=val;\n            return;\n        }\n \n        int mid=(low+high)>>1;\n        if(i<=mid)update(2*ind+1,low,mid,i,val);\n        else update(2*ind+2,mid+1,high,i,val);\n        seg[ind]=(seg[2*ind+1]+seg[2*ind+2]);\n    }\n \n};\n \n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& qu) {\n        int n=nums.size();\n        int q=qu.size();\n        vector<int>res;\n        vector<int>temp(n);\n        for(int i=1;i<n-1;i++)\n        {\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                temp[i]=1;\n            }\n        }\n        SGTree sgt(n+1);\n        sgt.build(0,0,n-1,temp);\n        for(int i=0;i<q;i++)\n        {\n            int t=qu[i][0];\n            if(t==1)\n            {\n                int l=qu[i][1],r=qu[i][2];\n                if(r-l>=2){\n                    l=l+1;\n                    r=r-1;\n                    int chk=sgt.query(0,0,n-1,l,r);\n                    res.push_back(chk);\n                }\n                else{\n                    res.push_back(0);\n                }\n            }\n            else{\n                int ind=qu[i][1],val=qu[i][2];\n                nums[ind]=val;\n                if(ind-1>=0&&ind+1<n)\n                {\n                    if(nums[ind]>nums[ind-1]&&nums[ind]>nums[ind+1]){\n                        sgt.update(0,0,n-1,ind,1);\n                    }\n                    else{\n                        sgt.update(0,0,n-1,ind,0);\n                    }\n                }\n                if(ind-2>=0&&ind<n)\n                {\n                    if(nums[ind-1]>nums[ind-2]&&nums[ind-1]>nums[ind]){\n                        sgt.update(0,0,n-1,ind-1,1);\n                    }\n                    else{\n                        sgt.update(0,0,n-1,ind-1,0);\n                    }\n                }\n                if(ind+1>=0&&ind+2<n)\n                {\n                    if(nums[ind+1]>nums[ind]&&nums[ind+1]>nums[ind+2]){\n                        sgt.update(0,0,n-1,ind+1,1);\n                    }\n                    else{\n                        sgt.update(0,0,n-1,ind+1,0);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718508278",
    "subm_id": "1289676691"
}