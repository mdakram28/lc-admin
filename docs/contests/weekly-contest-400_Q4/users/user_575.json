{
    "username": "user3593Z",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        \n        int n = nums.length;\n\n        TreeSet<Integer> treeSet = new TreeSet<>();\n        Set<Integer> curSet = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            Set<Integer> nset = new HashSet<>();\n            for (int x : curSet)\n                nset.add(x & nums[i]);\n            nset.add(nums[i]);\n            treeSet.addAll(nset);\n            curSet = nset;\n        }\n\n        Integer high = treeSet.ceiling(k);\n        Integer low = treeSet.floor(k);\n        if (high != null && low != null)\n            return Math.min(high.intValue() - k, k - low.intValue());\n        else if (high != null)\n            return high.intValue() - k;\n        else\n            return k - low.intValue();\n    }\n}",
    "submit_ts": 1717298012.0
}