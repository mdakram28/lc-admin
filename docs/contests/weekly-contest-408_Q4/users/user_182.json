{
    "username": "suhailkhan568",
    "submission": "class DisjointSet {\nprivate: \n    vector<int> size;\n    vector<int> parent;\npublic:\n    DisjointSet(int n) {\n        size.resize(n, 1);\n        parent.resize(n);\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n        }\n    }\n\n    int find(int x) {\n        if (parent[x] != x) {\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n\n    void Union(int x, int y) {\n        int rootX = find(x);\n        int rootY = find(y);\n        if (rootX != rootY) {\n            if (size[rootX] < size[rootY]) {\n                swap(rootX, rootY);\n            }\n            parent[rootY] = rootX;\n            size[rootX] += size[rootY];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        DisjointSet dsu(n + 4);\n        \n        for (int i = 0; i < n; ++i) {\n            int x1 = circles[i][0], y1 = circles[i][1], r1 = circles[i][2];\n            if (x1 - r1 <= 0) dsu.Union(i, n);\n            if (x1 + r1 >= X) dsu.Union(i, n + 1);\n            if (y1 - r1 <= 0) dsu.Union(i, n + 2);\n            if (y1 + r1 >= Y) dsu.Union(i, n + 3);\n\n            for (int j = i + 1; j < n; ++j) {\n                if (isIntersecting(x1, y1, r1, circles[j][0], circles[j][1], circles[j][2])) {\n                    dsu.Union(i, j);\n                }\n            }\n        }\n        \n        if (dsu.find(n) == dsu.find(n + 1) || dsu.find(n) == dsu.find(n + 2) || dsu.find(n + 3) == dsu.find(n + 1) || dsu.find(n + 3) == dsu.find(n + 2)) {\n            return false;\n        }\n        return true;\n    }\n\nprivate:\n    bool isIntersecting(int x1, int y1, int r1, int x2, int y2, int r2) {\n        return distSq(x1, y1, x2, y2) <= (long long)(r1 + r2) * (r1 + r2);\n    }\n\n    long long distSq(int x1, int y1, int x2, int y2) {\n        return (long long)(x1 - x2) * (x1 - x2) + (long long)(y1 - y2) * (y1 - y2);\n    }\n};\n",
    "submit_ts": "1722135814",
    "subm_id": "1335714509"
}