{
    "username": "PostyFranky",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        if (n == 0) {\n            return null;\n        }\n        TreeSet<Integer> nodes = new TreeSet<>();\n        for (int i = 0; i < n; i++) {\n            nodes.add(i);\n        }\n        int[] result = new int[queries.length];\n        int i = 0;\n        for (int[] query : queries) {\n            Iterator<Integer> iterator = nodes.tailSet(query[0]).iterator();\n            while (iterator.hasNext()) {\n                int node = iterator.next();\n                if (node > query[0] && node < query[1]) {\n                    iterator.remove();\n                } else if (node > query[0]) {\n                    break;\n                }\n            }\n            result[i++] = nodes.size() - 1;\n        }\n        return result;\n    }\n}",
    "submit_ts": "1722740797",
    "subm_id": "1343728952"
}