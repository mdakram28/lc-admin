{
    "username": "Manu-Bharadwaj-BN",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    private static final int MODULUS = 1_000_000_007;\n\n    public int countOfPairs(int[] data) {\n        int length = data.length;\n        long[][][] cache = new long[length][51][51];\n        \n        for (long[][] layer : cache) {\n            for (long[] row : layer) {\n                Arrays.fill(row, -1);\n            }\n        }\n        \n        return (int) compute(data, 0, 0, data[0], cache);\n    }\n\n    private long compute(int[] data, int pos, int minX, int maxY, long[][][] cache) {\n        if (pos >= data.length) return 1;\n        if (cache[pos][minX][maxY] != -1) return cache[pos][minX][maxY];\n        \n        long total = 0;\n        for (int x = minX; x <= data[pos]; x++) {\n            for (int y = maxY; y >= 0; y--) {\n                if (x + y == data[pos]) {\n                    total = (total + compute(data, pos + 1, x, y, cache)) % MODULUS;\n                }\n            }\n        }\n        cache[pos][minX][maxY] = total;\n        return total;\n    }\n}\n",
    "submit_ts": "1723346664",
    "subm_id": "1351582496"
}