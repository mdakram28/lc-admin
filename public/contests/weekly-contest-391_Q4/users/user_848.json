{
    "username": "devashish59",
    "submission": "#define pb push_back\n#define ff first\n#define ss second\n#define all(x) (x).begin(),(x).end()\ntypedef long long int ll;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points)\n    {\n        multiset<int> sum, dif;\n        for(vector<int> p: points)\n        {\n            sum.insert(p[0] + p[1]);\n            dif.insert(p[0] - p[1]);\n        }\n        int ans = INT_MAX;\n        for(vector<int> p: points)\n        {\n            auto it1 = sum.find(p[0] + p[1]);\n            auto it2 = dif.find(p[0] - p[1]);\n            sum.erase(it1);\n            dif.erase(it2);\n            \n            auto it3 = sum.end(); it3--;\n            auto it4 = sum.begin();\n            int v1 = (*it3) - (*it4);\n            \n            auto it5 = dif.end(); it5--;\n            auto it6 = dif.begin();\n            int v2 = (*it5) - (*it6);\n            \n            ans = min(ans, max(v1, v2));;\n            \n            sum.insert(p[0] + p[1]);\n            dif.insert(p[0] - p[1]);\n        }\n        return ans;\n    }\n};"
}