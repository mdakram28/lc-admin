{
    "username": "xymabinogi",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<int>> best(4, vector<int>(2, 0));\n        for (int i = 0; i < 2; i++){ //[maxsum, maxdiff]\n            for (int j = 0; j < 2; j++){\n                best[i][j] = INT_MIN;\n            }\n        }\n        for (int i = 2; i < 4; i++){ //[minsum, mindiff]\n            for (int j = 0; j < 2; j++){\n                best[i][j] = INT_MAX;\n            }\n        }\n        \n        \n        for (int i = 0; i < n; i++){\n            int x = points[i][0], y = points[i][1];\n            int sum = x + y, diff = x - y;\n            if (sum >= best[0][1]){\n                best[0][1] = sum;\n            }\n            if (sum < best[2][1]) best[2][1] = sum;\n            if (diff > best[1][1]) best[1][1] = diff;\n            if (diff < best[3][1]) best[3][1] = diff;\n            \n            for (int j = 0; j < 2; j++){\n                if (best[j][1] > best[j][0]) swap(best[j][1], best[j][0]);\n            }\n            for (int j = 2; j < 4; j++){\n                if (best[j][1] < best[j][0]) swap(best[j][1], best[j][0]);\n            }\n        }\n        // for (int i = 0; i < 4; i++){\n        //     for (int j = 0; j < 2; j++){\n        //         cout << best[i][j] << \" \\n\"[j == 1];\n        //     }\n        // }\n        \n        \n        int res = INT_MAX;\n        for (int i = 0; i < n; i++){\n            int x = points[i][0], y = points[i][1];\n            int sum = x + y, diff = x - y;\n            \n            int maxsum = (best[0][0] == sum ? best[0][1] : best[0][0]);\n            int minsum = (best[2][0] == sum ? best[2][1] : best[2][0]);\n            int maxdiff = (best[1][0] == diff ? best[1][1] : best[1][0]);\n            int mindiff = (best[3][0] == diff ? best[3][1] : best[3][0]);\n            res = min(res, max(maxsum - minsum, maxdiff - mindiff));\n        }\n        return res;\n        \n        \n        \n        \n    }\n};"
}