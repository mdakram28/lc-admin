{
    "username": "i3rave-darwinbl8",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n        \n        int cnt = 0;\n        for (int i = 0; i < m/2; ++i) {\n            for (int j = 0; j < n/2; ++j) {\n                int cnt1 = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                cnt += min(cnt1, 4 - cnt1);\n            }\n        }\n        \n        int cnt_d1 = 0;\n        int cnt_ub = 0;\n        if (m & 1) {\n            for (int j = 0; j < n/2; ++j) {\n                int cnt1 = grid[m/2][j] + grid[m/2][n-1-j];\n                if (cnt1 == 1) cnt_ub++;\n                else if (cnt1 == 2) cnt_d1 += 2;\n            }\n            \n            if (n & 1) cnt += grid[m/2][n/2];\n        }\n        \n        if (n & 1) {\n            for (int i = 0; i < m/2; ++i) {\n                int cnt1 = grid[i][n/2] + grid[m-1-i][n/2];\n                if (cnt1 == 1) cnt_ub++;\n                else if (cnt1 == 2) cnt_d1 += 2;\n            }\n        }\n        \n        cnt_d1 %= 4;\n        return cnt + cnt_ub + (cnt_d1 > 0 && cnt_ub < 1 ? 2 : 0);\n    }\n};",
    "submit_ts": "1722697625",
    "subm_id": "552267041"
}