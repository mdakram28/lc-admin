{
    "username": "the_arc_knight_24",
    "submission": "class Solution {\n    \nprivate: \n    \n    bool isValid(int i, int k, int n){\n        return (i < n + k - 1) ; \n    }\n    int soluchan(vector<int>& colors, int k, int rev, int i, int n){\n        int cnt=0;\n        while (isValid(i,k,n)) { \n            int pres = i; \n            int last = i - 1; \n             if (pres >= n) { \n                pres -= n; \n            } \n            if (last >= n) { \n                last -= n; \n            } \n \n            if (colors[pres] != colors[last]) { \n                rev++; \n            } else { \n                rev = 1; \n            } \n \n            if (rev >= k) { \n                cnt++; \n            } \n \n            i++; \n        } \n    return cnt;\n\n    }\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(); \n        int cnt = 0; \n \n        if (k == 1)  return n; \n        \n \n        int rev = 1; \n        int i = 1; \n        return soluchan(colors, k, rev, i, n); \n\n    }\n};",
    "submit_ts": "1720279690",
    "subm_id": "1311761276"
}