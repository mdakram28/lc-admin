{
    "username": "enzoar",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size(); \n        vector<int> pos; \n        pos.emplace_back(-1); \n        for (int i = 0; i < n; i++) if (s[i] == '0') {\n            pos.emplace_back(i);\n        }\n        \n        long long ans = 0; \n        for (int i = n-1; i >= 0; i--) {\n            while (pos.size() && pos.back() > i) pos.pop_back(); \n            if (pos.size()) {\n                long long m = pos.size(); \n                long long c1 = 0, c0 = 0;\n                long long last =  i + 1; \n                for (int j = m-1; j >= 0; j--) {\n                    long long idx = pos[j]; \n                    \n                    long long a1 = last - idx - 1; \n                    long long mn = c0 * c0; \n                    \n                    //cout << j << \" \" << idx << \" \" << a1 << \" \" << mn << endl;\n                    \n                    ans += max(0ll, min(c1 + a1 - mn + 1, a1));\n                    \n                    c0++; \n                    c1 += a1; \n                    last = idx; \n                    if (idx > -1) ans += c0 * c0 <= c1; \n                    if (c0 * c0 > n) break; \n                }\n            } \n            else ans += i + 1; \n            \n            //cout << i << \" \" << ans << endl;\n        }\n        return ans; \n    }\n};",
    "submit_ts": "1722135353",
    "subm_id": "1335698858"
}