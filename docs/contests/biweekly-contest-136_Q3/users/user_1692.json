{
    "username": "HoneyGupta12",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int minflips=0,cnt;\n        int n=grid.size(),m=grid[0].size();\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                cnt=grid[i][j]+grid[i][m-j-1]+grid[n-i-1][j]+grid[n-i-1][m-j-1];\n                minflips+=min(cnt,4-cnt);\n            }\n        }\n        int rowcnt=0,colcnt=0;\n        int ones=0;\n        if(n&1){\n            int l=0,r=m-1;\n            while(l<r){\n                if(grid[n/2][l]==1 && grid[n/2][r]==1) ones+=2;\n                else if(grid[n/2][l]!=grid[n/2][r]) rowcnt++;\n                l++,r--;\n            }\n        }\n        if(m&1){\n            int u=0,d=n-1;\n            while(u<d){\n                if(grid[u][m/2]==1 && grid[d][m/2]==1) ones+=2;\n                else if(grid[u][m/2]!=grid[d][m/2]) colcnt++;\n                u++,d--;\n            }\n        }\n        if(m&1 && n&1) minflips+=grid[n/2][m/2];\n        // cout<<ones<<rowcnt<<colcnt;\n        if(ones%4==0 || colcnt || rowcnt) minflips+=rowcnt+colcnt;\n        else minflips+=2; \n        return minflips;\n    }\n};",
    "submit_ts": "1722699562",
    "subm_id": "1343215464"
}