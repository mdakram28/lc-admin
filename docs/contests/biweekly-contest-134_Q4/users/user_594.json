{
    "username": "iN_siDious",
    "submission": "class Solution {\npublic:\n    long long solve(const vector<vector<long long>>& bits, long long l, long long r) {\n        long long res = 0;\n        for (long long idx = 0; idx < 32; ++idx) {\n            if (bits[r][idx] - ((l-1>=0)?bits[l-1][idx]:0) == 0) res |= (1 << idx);\n        }\n        return res;\n    }\n    long long countSubarrays(vector<int>& nums, long long k) {\n        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n        long long n = nums.size(), ans = 0;\n        vector<vector<long long>> bits(n + 1, vector<long long>(32, 0));\n        \n        for (long long i = 0; i < n; ++i) {\n            if (i>0) bits[i] = bits[i-1];\n            for (long long idx = 0; idx < 32; ++idx) {\n                if ((nums[i] & (1 << idx)) == 0) bits[i][idx]++;\n            }\n        }\n        \n        for (long long i = 0; i < n; ++i) {\n            long long l = i, h = n - 1;\n            while (l < h) {\n                long long mid = (l + h) >> 1;\n                if (solve(bits, i, mid) <= k) h = mid;\n                else l = mid + 1;\n            }\n            if (solve(bits, i, l) != k) continue;\n            long long up = l;\n            \n            l = i, h = n - 1;\n            while (l < h) {\n                long long mid = (l + h + 1) >> 1;\n                if (solve(bits, i, mid) >= k) l = mid;\n                else h = mid - 1;\n            }\n            long long low = l;\n            ans += abs(up - low) + 1;\n        }\n        return ans;\n    }\n    \n};",
    "submit_ts": "1720279862",
    "subm_id": "1311768073"
}