{
    "username": "anvayjain64",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int cost = 0;\n\n        // making the four divisions pallindromic at minimum cost\n        if (m > 1 && n > 1) {\n            for (int row = 0; row < m/2; row++) {\n                for (int col = 0; col < n/2; col++) {\n                    int sum = ( grid[row][col] + \n                                grid[row][n-1-col] + \n                                grid[m-1-row][col] + \n                                grid[m-1-row][n-1-col] );\n                    cost += Math.min(sum, 4-sum);\n                }\n            }\n        }\n\n        int ones = 0;\n        int flips = 0;\n        if (m%2 == 1) {\n            int row = m/2;\n            for (int col = 0; col < n/2; col++) {\n                if (grid[row][col] != grid[row][n-1-col]) {\n                    cost += 1;\n                    flips += 1;\n                }\n                else if (grid[row][col] == 1) {\n                    ones += 2;\n                }\n            }\n        }\n\n        if (n%2 == 1) {\n            int col = n/2;\n            for (int row = 0; row < m/2; row++) {\n                if (grid[row][col] != grid[m-1-row][col]) {\n                    cost += 1;\n                    flips += 1;\n                }\n                else if (grid[row][col] == 1){\n                    ones += 2;\n                }\n            }\n        }\n\n\n        if (m%2 == 1 && n%2 == 1) cost += grid[m/2][n/2];\n        if (ones%4 != 0 && flips < 1) cost += 2;\n        return cost;\n    }\n}",
    "submit_ts": "1722698126",
    "subm_id": "1343170532"
}