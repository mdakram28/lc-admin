{
    "username": "theabbie",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        graph = [[] for _ in range(n)]\n        for a, b in edges:\n            graph[a].append(b)\n            graph[b].append(a)\n        f = [0] * n\n        s = [0] * n\n        c = [0] * n\n        def dfs(i, p):\n            for j in graph[i]:\n                if j != p:\n                    cost = 1 if j & 1 else 2\n                    dfs(j, i)\n                    if f[j] + cost > f[i]:\n                        s[i] = f[i];\n                        f[i] = f[j] + cost\n                        c[i] = j\n                    elif f[j] + cost > s[i]:\n                        s[i] = f[j] + cost\n        dfs(0, -1)\n        res = [0] * n\n        def sdfs(i, p):\n            for j in graph[i]:\n                if j != p:\n                    cost = 1 if i & 1 else 2\n                    if c[i] == j:\n                        if f[j] < s[i] + cost:\n                            s[j] = f[j]\n                            f[j] = s[i] + cost\n                            c[j] = i\n                        else:\n                            s[j] = max(s[j], s[i] + cost)\n                    else:\n                        s[j] = f[j]\n                        f[j] = f[i] + cost\n                        c[j] = i\n                    sdfs(j, i)\n        sdfs(0, -1)\n        return f",
    "submit_ts": "1722698846",
    "subm_id": "1343193676"
}