{
    "username": "ALESTA1",
    "submission": "class Solution {\npublic:\n    map<int,vector<int>> mp;\n    \n    int dp[5010][2][51];\n    int rec(int id,int pick,int k,vector<int> &a){\n        \n        if(id==a.size())return 0;\n        \n        if(dp[id][pick][k]!=-1)return dp[id][pick][k];\n        int ans = 0;\n        \n        //pick same;\n        if(pick==1){\n            \n            auto it = upper_bound(mp[a[id]].begin(),mp[a[id]].end(),id);\n            if(it!=mp[a[id]].end()){\n                //cout<<a[id]<<endl;\n                ans = max(ans,1+rec(*it,1,k,a));\n            }\n        }\n        \n        ans = max(ans,rec(id+1,0,k,a));\n        \n        if(k-1>=0){\n            \n            if(id+1<a.size())\n            ans = max(ans,1+rec(id+1,1,k-1,a));\n        }\n        \n        return dp[id][pick][k] = ans;\n    }\n    int maximumLength(vector<int>& nums, int k) {\n        \n        for(int i=0;i<nums.size();i++)mp[nums[i]].push_back(i);\n        memset(dp,-1,sizeof(dp));\n        int ans = 0;\n        \n        for(int i=0;i<nums.size();i++)ans = max(ans,1+rec(i,1,k,nums));\n        return ans;\n        \n    }\n};",
    "submit_ts": 1717860392.0
}