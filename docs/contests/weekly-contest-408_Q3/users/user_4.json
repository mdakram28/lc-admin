{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n        \n        s = \"$\" + s;\n        \n        vector<int> one(n + 1);\n        vector<int> zero;\n        \n        for (int i = 1; i <= n; i++) {\n            if (s[i] == '1') one[i] = 1;\n            else zero.push_back(i);\n            one[i] += one[i - 1];\n        }\n        \n        int res = 0;\n        \n        for (int i = 1; i <= n; i++) {\n            int id = lower_bound(zero.begin(), zero.end(), i) - zero.begin();\n            \n            if (id >= (int)zero.size()) {\n                res += n - i + 1;\n                continue;\n            }\n            \n            if (s[i] == '1') {\n                res += zero[id] - i;\n            }\n            \n            \n            for (int j = 1; i + j + j * j - 1 <= n; j++) {\n                if (id + j - 1 >= (int)zero.size()) break;\n                \n                int len = max(zero[id + j - 1], i + j + j * j - 1);\n                \n                if (id + j >= (int)zero.size()) {\n                    res += n - max(zero[id + j - 1], len) + 1;\n                    continue;\n                }\n                \n                int nxt = zero[id + j];\n                \n                if (nxt <= len) continue;\n                \n                res += nxt - len;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1722134952",
    "subm_id": "1335684422"
}