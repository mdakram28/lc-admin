{
    "username": "akokoz",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        // int ans = 0;\n        Map<Integer, Integer> m = new HashMap<>();\n        for (int i = 0; i < n / 2; i++) {\n            int diff = Math.abs(nums[i] - nums[n - i - 1]);\n            m.merge(diff, 1, Integer::sum);\n        }\n        int x = -1;\n        for (int key : m.keySet()) {\n            int v = m.get(key);\n            int vcur = m.getOrDefault(x, 0);\n            if (v > vcur) {\n                x = key;\n            } else if (v == vcur && key < x) {\n                x = key;\n            }\n        }\n        int x2 = -1;\n        for (int key : m.keySet()) {\n            int v = m.get(key);\n            int vcur = m.getOrDefault(x2, 0);\n            if (key < x) {\n                if (v > vcur) {\n                    x2 = key;\n                } else if (v == vcur && key < x2) {\n                    x2 = key;\n                }\n            }\n        }\n        // System.out.println(x + \" \" + x2);\n        int ans = Math.min(check(nums, k, x), check(nums, k, x2));\n        \n        return ans;\n    }\n    \n    int check(int[] nums, int k, int x) {\n        int ans = 0;\n        int n = nums.length;\n        for (int i = 0; i < n / 2; i++) {\n            if (x != Math.abs(nums[i] - nums[n - i - 1])) {\n                int min = Math.min(nums[i], nums[n - i - 1]);\n                int max = Math.max(nums[i], nums[n - i - 1]);\n                if (max - x < 0 && min + x > k) {\n                    ans += 2;\n                } else {\n                    ans++;\n                }\n            }\n        }\n        \n        return ans;\n    }\n}\n\n/*\n\n[1,0,1,2,4,3]\n4\n[0,1,2,3,3,6,5,4]\n6\n[1,1,1,1,0,0,0,5,4,3,19,17,16,15,15,15,19,19,19,19]\n20\n\n*/",
    "submit_ts": "1721488850",
    "subm_id": "1327435171"
}