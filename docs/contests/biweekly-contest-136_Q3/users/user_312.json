{
    "username": "Maruzensky",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        answer = 0\n        \n        if m % 2 == 1 and n % 2 == 1:\n            if grid[m // 2][n // 2] == 1:\n                answer += 1\n\n        # pairs\n        pairs = []\n        \n        if m % 2 == 1:\n            for i in range(n // 2):\n                pairs.append((grid[m // 2][i], grid[m // 2][n - 1 - i]))\n                \n        if n % 2 == 1:\n            for i in range(m // 2):\n                pairs.append((grid[i][n // 2], grid[m - 1 - i][n // 2]))\n                \n        if all(u == v for u, v in pairs) and sum(u for u, v in pairs) % 2 == 1:\n            answer += 2\n        else:\n            answer += sum(u != v for u, v in pairs)\n                \n        # quads\n        for i in range(m // 2):\n            for j in range(n // 2):\n                quad = (grid[i][j], grid[m - 1 - i][n - 1 - j], grid[m - 1  - i][j], grid[i][n - 1 - j])\n                sq = sum(quad)\n                \n                answer += min(sq, 4 - sq)\n                \n        return answer",
    "submit_ts": "1722696554",
    "subm_id": "1343112537"
}