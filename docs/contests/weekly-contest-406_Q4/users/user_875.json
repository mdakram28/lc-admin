{
    "username": "MvKaio",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        using ll = long long;\n        ll a = accumulate(h.begin(), h.end(), 0LL);\n        ll b = accumulate(v.begin(), v.end(), 0LL);\n        ll pa = 1, pb = 1;\n        \n        sort(h.rbegin(), h.rend());\n        sort(v.rbegin(), v.rend());\n        \n        int i = 0, j = 0;\n        ll ans = 0;\n        \n        auto do_i = [&] () {\n            ans += pb * h[i];\n            i++;\n            pa += 1;\n        };\n        \n        auto do_j = [&] () {\n            ans += pa * v[j];\n            j++;\n            pb += 1;\n        };\n        \n        while (i < h.size() || j < v.size()) {\n            if  (i == h.size()) {\n                do_j();\n            } else if (j == v.size()) {\n                do_i();\n            } else {\n                if (h[i] >= v[j]) do_i();\n                else do_j();\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720925289",
    "subm_id": "1320249603"
}