{
    "username": "wutwere",
    "submission": "struct PT {\n    double x, y;\n    PT() { x = 0, y = 0; }\n    PT(double x, double y) : x(x), y(y) {}\n    PT(const PT &p) : x(p.x), y(p.y)    {}\n    PT operator + (const PT &a) const { return PT(x + a.x, y + a.y); }\n    PT operator - (const PT &a) const { return PT(x - a.x, y - a.y); }\n    double norm() { return sqrt(x * x + y * y); }\n};\ninline double cross(PT a, PT b) { return a.x * b.y - a.y * b.x; }\ndouble dist_from_point_to_line(PT a, PT b, PT c) {\n    return fabs(cross(b - a, c - a) / (b - a).norm());\n}\ntemplate <int N>\nstruct disjoint_set {\n  int par[N + 1];\n  disjoint_set() { memset(par, -1, sizeof(par)); }\n  int find(int v) { return par[v] < 0 ? v : par[v] = find(par[v]); }\n  void join(int u, int v) {\n    if ((u = find(u)) != (v = find(v))) {\n      if (par[u] > par[v]) swap(u, v);\n      par[u] += par[v], par[v] = u;\n    }\n  }\n};\n\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        const int n = circles.size();\n        map<int, set<int>> wallhit;\n        disjoint_set<1000> dsu;\n        auto pt = [&](int i) {\n            return PT(circles[i][0], circles[i][1]);\n        };\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if ((pt(i) - pt(j)).norm() <= circles[i][2] + circles[j][2]) {\n                    dsu.join(i, j);\n                }\n            }\n        }\n        PT c1(0, 0), c2(0, Y), c3(X, 0), c4(X, Y);\n        auto inside = [&](PT a, PT b, int i) {\n            return dist_from_point_to_line(a, b, pt(i)) <= circles[i][2];\n        };\n        for (int i = 0; i < n; i++) {\n            if (inside(c1, c2, i)) wallhit[dsu.find(i)].insert(1);\n            if (inside(c1, c3, i)) wallhit[dsu.find(i)].insert(4);\n            if (inside(c2, c4, i)) wallhit[dsu.find(i)].insert(2);\n            if (inside(c3, c4, i)) wallhit[dsu.find(i)].insert(3);\n        }\n        for (auto [i, s] : wallhit) {\n            if (s.count(1) && s.count(3)) return false;\n            if (s.count(1) && s.count(4)) return false;\n            if (s.count(2) && s.count(3)) return false;\n            if (s.count(2) && s.count(4)) return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722137328",
    "subm_id": "1335760626"
}