{
    "username": "gradesking",
    "submission": "typedef long long ll;\n\nll S[101][101];\nll n;\nll dp[101][101][101];\n\nclass Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        n = grid.size();\n\n        if (n == 1)\n            return 0;\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                S[i + 1][j + 1] = grid[i][j] + S[i][j + 1];\n            }\n        }\n\n        for (int l1 = 0; l1 <= n; ++l1) {\n            for (int l2 = 0; l2 <= l1; ++l2) {\n                dp[0][l1][l2] = 0;\n            }\n            for (int l2 = l1 + 1; l2 <= n; ++l2) {\n                dp[0][l1][l2] = S[l2][1] - S[l1][1];\n            }\n        }\n\n        for (int k = 1; k < n - 1; ++k) {\n            for (int l1 = 0; l1 <= n; ++l1) {\n                for (int l2 = 0; l2 <= n; ++l2) {\n                    int big = (l1 != 0 && l1 <= l2 ? l1 - 1 : n);\n                    dp[k][l1][l2] = 0;\n                    for (int i = 0; i <= big; ++i) {\n                        dp[k][l1][l2] =\n                            max(dp[k][l1][l2],\n                                dp[k - 1][i][l1] + (max(i, l2) <= l1\n                                                        ? 0\n                                                        : S[max(i, l2)][k + 1] -\n                                                              S[l1][k + 1]));\n                    }\n                }\n            }\n        }\n\n        ll ans = 0;\n        for (int l1 = 0; l1 <= n; ++l1) {\n            dp[n - 1][l1][0] = 0;\n            for (int i = 0; i <= n; ++i) {\n                dp[n - 1][l1][0] =\n                    max(dp[n - 1][l1][0],\n                        dp[n - 2][i][l1] + (i <= l1 ? 0 : S[i][n] - S[l1][n]));\n                ans = max(ans, dp[n - 1][l1][0]);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721490938",
    "subm_id": "548324854"
}