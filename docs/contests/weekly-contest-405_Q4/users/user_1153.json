{
    "username": "Bobby137",
    "submission": "class Solution {\npublic:\n    struct TrieNode{\n        TrieNode* childNode[26];\n        int wordEnd=INT_MAX;\n        TrieNode(){\n            for(int i=0;i<26;i++) childNode[i]=NULL;\n        }\n    };\n    int dp[50005];\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n       memset(dp,-1,sizeof(dp));\n       TrieNode* root = new TrieNode();\n       for(int i=0;i<w.size();i++) insert(root,w[i],c[i]); \n       int ans=rec(t,0,root); \n       if(ans==INT_MAX) return -1;\n       return ans;\n    }\n    int rec(string &t,int i,TrieNode* root){\n        int n=t.size();\n        if(i>=n) return 0;\n        if(dp[i]!=-1) return dp[i];\n        TrieNode* currentNode = root;\n        int ans=INT_MAX;\n        for (int j=i;j<n;j++) {\n            // cout<<j<<\" bb \"<<currentNode->wordEnd<<endl;\n            if (currentNode->childNode[t[j] - 'a'] == NULL) {\n                break;\n            }\n            currentNode = currentNode->childNode[t[j] - 'a'];\n            if(currentNode->wordEnd != INT_MAX) {\n                int temp=rec(t,j+1,root);\n                // cout<<i<<\" \"<<(j+1)<<\" temp \"<<temp<<endl;\n                if(temp!=INT_MAX) ans = min(ans,currentNode->wordEnd+temp);\n            }\n        }\n        // cout<<i<<\" \"<<ans<<endl;\n        return dp[i]=ans;\n    }\n     void insert(TrieNode* root, string& key,int cost){\n        TrieNode* currentNode = root;\n        for (auto c : key) {\n            if (currentNode->childNode[c - 'a'] == NULL) {\n                TrieNode* newNode = new TrieNode();\n                currentNode->childNode[c - 'a'] = newNode;\n            }\n            currentNode = currentNode->childNode[c - 'a'];\n        }\n        currentNode->wordEnd = min(currentNode->wordEnd,cost);\n    }\n};",
    "submit_ts": "1720323568",
    "subm_id": "1312378734"
}