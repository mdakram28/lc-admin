{
    "username": "dirigibility",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        adj = defaultdict(list)\n        for i,(x,y,r) in enumerate(circles):\n            if r >= x or r >= Y-y:\n                adj[-1].append(i)\n                adj[i].append(-1)\n            if r >= y or r >= X-x:\n                adj[-2].append(i)\n                adj[i].append(-2)\n            for j in range(i+1,len(circles)):\n                a,b,t = circles[j]\n                d2 = (x-a)*(x-a)+(y-b)*(y-b)\n                if d2 <= (r+t)*(r+t):\n                    adj[i].append(j)\n                    adj[j].append(i)\n        visited = set()\n        def dfs(i):\n            if i == -2:\n                return True\n            if i in visited:\n                return False\n            visited.add(i)\n            return any(dfs(j) for j in adj[i])\n        return not dfs(-1)",
    "submit_ts": "1722138390",
    "subm_id": "1335789539"
}