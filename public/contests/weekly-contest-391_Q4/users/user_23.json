{
    "username": "bilyhurington",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> p;\n    int dis(int x,int y){\n        return abs(p[x][0]-p[y][0])+abs(p[x][1]-p[y][1]);\n    }\n    pair<int,int> solve(int x){\n        pair<int,int> min1={(int)1e9,0},max1={-(int)1e9,0};\n        pair<int,int> min2={(int)1e9,0},max2={-(int)1e9,0};\n        for(int i=0;i<p.size();i++){\n            if(i==x) continue;\n            pair<int,int> v1={p[i][0]+p[i][1],i};\n            min1=min(min1,v1);\n            max1=max(max1,v1);\n            pair<int,int> v2={p[i][0]-p[i][1],i};\n            min2=min(min2,v2);\n            max2=max(max2,v2);\n        }\n        if(max1.first-min1.first>max2.first-min2.first){\n            return {max1.second,min1.second};\n        }else{\n            return {max2.second,min2.second};\n        }\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        p=points;\n        int n=points.size();\n        pair<int,int> pr=solve(-1);\n        pair<int,int> p1=solve(pr.first);\n        pair<int,int> p2=solve(pr.second);\n        return min(dis(p1.first,p1.second),dis(p2.first,p2.second));\n    }\n};"
}