{
    "username": "harryB17",
    "submission": "const int N = 501;\nconst int K = 55;\n// int dp[N][K], ndp[N][K];\nint dp[K];\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        // for(int j = 0; j <= n; j++)\n        //     for(int z = 0; z <= k; z++) dp[j][z] = 0, ndp[j][z] = 0;\n        for(int i = 0; i <= k; i++) dp[i] = 0;\n        map<int, int> mp[k+1];\n        \n        for(int i = 0; i < n; i++){\n            for(int z = 0; z <= k; z++) mp[z][nums[i]]++;\n            for(int z = 1; z <= k; z++) mp[z][nums[i]] = max(mp[z][nums[i]], dp[z-1]+1);\n            for(int z = k; z >= 0; z--)  dp[z] = max(dp[z], mp[z][nums[i]]);\n            \n//             for(int j = 0; j < i; j++){\n//                 for(int z = 0; z <= k; z++){\n//                     if(nums[i] == nums[j])\n//                         ndp[i][z] = max(ndp[i][z], 1 + dp[j][z]);\n//                     else if(z < k)\n//                         ndp[i][z+1] = max(ndp[i][z+1], 1 + dp[j][z]);\n//                 }\n//             }\n//             for(int j = 0; j < n; j++) for(int z = 0; z <= k; z++)\n//                 dp[j][z] = ndp[j][z];\n        }\n        \n        int ans = 0;\n        for(int i = 0; i <= k; i++) ans = max(ans, dp[i]);\n        // for(int i = 0; i < n; i++) ans = max(ans, dp[i][k]);\n        return ans;\n    }\n};",
    "submit_ts": 1717860365.0
}