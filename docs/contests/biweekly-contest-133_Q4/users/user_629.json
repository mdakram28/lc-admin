{
    "username": "Kayalennian10",
    "submission": "MOD = 1_000_000_007\nMAX_INVERSIONS = 400\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        mapp = {req[0] + 1: req[1] for req in requirements}\n        cnts = [[0] * (MAX_INVERSIONS + 1) for _ in range(n + 1)]\n        cnts[0][0] = 1\n        for leng in range(1, n + 1):\n            for i in range(MAX_INVERSIONS + 1):\n                for new in range(leng):\n                    inv = i - new\n                    if inv >= 0: cnts[leng][i] = (cnts[leng][i] + cnts[leng - 1][inv]) % MOD\n            if leng in mapp:\n                target = mapp[leng]\n                for i in range(MAX_INVERSIONS + 1):\n                    if i != target: cnts[leng][i] = 0\n                    else:\n                        pass\n            else:\n                pass\n        return (sum(cnts[n]) % MOD)",
    "submit_ts": "1719070850",
    "subm_id": "1296833242"
}