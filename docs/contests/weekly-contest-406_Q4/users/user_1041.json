{
    "username": "badwomanzz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        n = verticalCut.size(), m = horizontalCut.size();\n        int i = 0, j = 0;\n        long long ans = 0;\n        while(i < n && j < m){\n            long long x = verticalCut[i], y = horizontalCut[j];\n            if(x > y){\n                ans += x * (j + 1);\n                i++;\n            }\n            else if(x < y){\n                ans += y * (i + 1);\n                j++;\n            }\n            else {\n                if(i > j){\n                    ans += y * (i + 1);\n                    j++;\n                }\n                else {\n                    ans += x * (j + 1);\n                    i++;\n                }\n            }\n        }\n        while(i < n) ans += (long long)verticalCut[i] * (m + 1), i++;\n        while(j < m) ans += (long long)horizontalCut[j] * (n + 1), j++;\n        return ans;\n    }\n};",
    "submit_ts": "1720926018",
    "subm_id": "546443484"
}