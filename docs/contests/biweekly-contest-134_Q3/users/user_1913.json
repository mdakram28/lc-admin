{
    "username": "Piyusha_7",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) { \n        int count = 0;\n        int l = 1;\n        int ans= helper(colors,k,colors.length,count,l);\n        return ans;\n    }\n    public int helper(int[] colors, int k, int s, int count, int l){\n        int j= s+k-1;\n        for (int i = 1; i < j; i++) {\n            int curr = i%s;\n            int prev = (i-1)%s;\n            // l = (colors[curr] != colors[prev]) ? l+1 : 1;\n            if(equal(colors[curr],colors[prev])){\n                l++;\n            }else l=1;\n            if (check(l,k)) count++;\n        }\n        return count;\n    }\n    public boolean check(int l, int k){\n        return l>=k;\n    }\n    public boolean equal(int x, int y){\n        return x != y;\n    }\n}",
    "submit_ts": "1720281174",
    "subm_id": "1311815738"
}