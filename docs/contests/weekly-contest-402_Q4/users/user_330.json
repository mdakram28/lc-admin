{
    "username": "jtcheng26",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        int q = queries.size();\n        int s = 1;\n        while (s * s < n) s++;\n        vector<int> a(s, 0);\n        for (int i=0;i<s;i++) {\n            for (int j=i*s;j<i*s+s && j < n;j++) {\n                if (j > 0 && j < n-1 && nums[j] > nums[j-1] && nums[j] > nums[j+1]) a[i]++;\n            }\n        }\n        \n        vector<int> ans;\n        \n        for (const vector<int>& q : queries) {\n            if (q[0] == 1) {\n                int k = 0;\n                int l = q[1];\n                int r = q[2];\n                for (int j=l+1;j<min((l/s + 1) * s, r);j++) {\n                    k += (j > 0 && j < n-1 && nums[j] > nums[j-1] && nums[j] > nums[j+1]);\n                }\n                if (r / s != l / s) {\n                    for (int j=max(l+1, r/s * s);j<r;j++) {\n                        k += (j > 0 && j < n-1 && nums[j] > nums[j-1] && nums[j] > nums[j+1]);\n                    }\n                }\n                for (int i=l/s+1;i<r/s;i++) k += a[i];\n                ans.push_back(k);\n            } else {\n                nums[q[1]] = q[2];\n                int i = q[1] / s;\n                a[i] = 0;\n                if (i > 0) a[i-1] = 0;\n                if (i < s-1) a[i+1] = 0;\n                for (int j=max(i*s-s, 0);j<min(n, i*s+s+s) && j < n;j++) {\n                    if (j > 0 && j < n-1 && nums[j] > nums[j-1] && nums[j] > nums[j+1]) a[j / s]++;\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718506599.0
}