{
    "username": "ddmike",
    "submission": "using ll = long long;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        int i = 0, j = 0;\n        ll ans = 0;\n        while (i < m - 1 && j < n - 1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += ll(horizontalCut[i]) * (j + 1);\n                ++i;\n            }\n            else {\n                ans += ll(verticalCut[j]) * (i + 1);\n                ++j;\n            }\n        }\n        while (i < m - 1) {\n            ans += ll(horizontalCut[i]) * (j + 1);\n            ++i;\n        }\n        while (j < n - 1) {\n            ans += ll(verticalCut[j]) * (i + 1);\n            ++j;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925522",
    "subm_id": "546440036"
}