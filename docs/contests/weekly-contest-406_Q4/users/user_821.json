{
    "username": "ephemeral-t9",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut = [-cost for cost in horizontalCut]\n        verticalCut = [-cost for cost in verticalCut]\n        heapq.heapify(horizontalCut)\n        heapq.heapify(verticalCut)\n        \n        ans = 0\n        hp = 1\n        vp = 1\n        \n        while horizontalCut and verticalCut:\n            if horizontalCut[0] <= verticalCut[0]:\n                cost = -heapq.heappop(horizontalCut)\n                ans += cost * vp\n                hp += 1\n            else:\n                cost = -heapq.heappop(verticalCut)\n                ans += cost * hp\n                vp += 1\n        while horizontalCut:\n            cost = -heapq.heappop(horizontalCut)\n            ans += cost * vp\n        while verticalCut:\n            cost = -heapq.heappop(verticalCut)\n            ans += cost * hp\n            \n        return ans",
    "submit_ts": "1720925567",
    "subm_id": "546440356"
}