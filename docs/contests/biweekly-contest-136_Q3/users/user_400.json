{
    "username": "opPO24",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = (int)grid.size();\n        int m = (int)grid[0].size();\n\n        int ans = 0;\n        int ones = 0;\n        int zeros = 0;\n        if (n % 2 == 0 && m % 2 == 0) {\n            for (int i = 0; i < n / 2; i++) {\n                for (int j = 0; j < m / 2; j++) {\n                    vector<int> cnt(2);\n                    cnt[grid[i][j]]++;\n                    cnt[grid[n - i - 1][j]]++;\n                    cnt[grid[i][m - j - 1]]++;\n                    cnt[grid[n - i - 1][m - j - 1]]++;\n                    ans += min(cnt[0], cnt[1]);\n                }\n            }\n        } else if (n % 2 && m % 2 == 0) {\n            for (int i = 0; i < n / 2; i++) {\n                for (int j = 0; j < m / 2; j++) {\n                    vector<int> cnt(2);\n                    cnt[grid[i][j]]++;\n                    cnt[grid[n - i - 1][j]]++;\n                    cnt[grid[i][m - j - 1]]++;\n                    cnt[grid[n - i - 1][m - j - 1]]++;\n                    ans += min(cnt[0], cnt[1]);\n                }\n            }\n\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) ans++, zeros++;\n                ones += grid[n / 2][j] + grid[n / 2][m - j - 1];\n            }\n            ones %= 4;\n\n            if (ones == 2 && !zeros) {\n                ans += 2;\n            }\n        } else if (n % 2 == 0 && m % 2) {\n            for (int i = 0; i < n / 2; i++) {\n                for (int j = 0; j < m / 2; j++) {\n                    vector<int> cnt(2);\n                    cnt[grid[i][j]]++;\n                    cnt[grid[n - i - 1][j]]++;\n                    cnt[grid[i][m - j - 1]]++;\n                    cnt[grid[n - i - 1][m - j - 1]]++;\n                    ans += min(cnt[0], cnt[1]);\n                }\n            }\n\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) ans++, zeros++;\n                ones += grid[i][m / 2] + grid[n - i - 1][m / 2];\n            }\n            ones %= 4;\n\n            if (ones == 2 && !zeros) {\n                ans += 2;\n            }\n        } else {\n            for (int i = 0; i < n / 2; i++) {\n                for (int j = 0; j < m / 2; j++) {\n                    vector<int> cnt(2);\n                    cnt[grid[i][j]]++;\n                    cnt[grid[n - i - 1][j]]++;\n                    cnt[grid[i][m - j - 1]]++;\n                    cnt[grid[n - i - 1][m - j - 1]]++;\n                    ans += min(cnt[0], cnt[1]);\n                }\n            }\n\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) ans++, zeros++;\n                ones += grid[i][m / 2] + grid[n - i - 1][m / 2];\n            }\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) ans++, zeros++;\n                ones += grid[n / 2][j] + grid[n / 2][m - j - 1];\n            }\n            ones += grid[n / 2][m / 2];\n            ones %= 4;\n\n            if (ones == 1) {\n                if (zeros % 2 == 0) {\n                    ans++;\n                }\n            } else if (ones == 2) {\n                if (!zeros) {\n                    ans += 2;\n                } else if (zeros % 2 == 1) {\n                    ans += 1;\n                }\n            } else if (ones == 3) {\n                if (grid[n / 2][m / 2]) {\n                    if (!zeros) {\n                        ans += 3;\n                    } else {\n                        ans += 1;\n                    }\n                }\n            } else {\n                ans += zeros % 2;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699969",
    "subm_id": "1343227719"
}