{
    "username": "remidinishanth",
    "submission": "inline int test(int n, int b) { return (n>>b)&1; }\n\nclass Solution {\npublic:\n    long long count(vector<int> V, int k){\n        if(V.size() == 0) return 0;\n        // printf(\"%d\\n\", V.size());\n        unordered_map<int, vector<int>> M;\n\n        long long ans = 0;\n        \n        int n = V.size();\n        for(int i=n-1;i>=0;i--){\n            int x = V[i];\n            for(int j=0;j<32;j++){\n                if(test(x, j) == 0) M[j].push_back(i);\n            }\n        }\n\n        for(int i=0;i<n;i++){\n            int x = V[i] ^ k;\n            int right = i;\n            for(int j=0;j<32;j++){\n                if(test(x, j)){\n                    while(M[j].size() > 0 && M[j].back() < i) M[j].pop_back();\n                    if(M[j].size() > 0) right = max(right, M[j].back());\n                    else right = n;\n                }\n            }\n            // printf(\"%d, %d\\n\", i, right);\n            ans += n - right;\n        }\n        return ans;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<int> V;\n        for(int i: nums){\n            if((i & k) != k){\n                ans += count(V, k);\n                V.clear();\n            } else {\n                V.push_back(i);\n            }\n        }\n        ans += count(V, k);\n        return ans;\n    }\n};",
    "submit_ts": "1720278982",
    "subm_id": "1311732405"
}