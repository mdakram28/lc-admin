{
    "username": "RX_coder",
    "submission": "class Solution {\npublic:\n    long long solve( vector<int>& horizontal, vector<int>& vertical,int m,int n){\n        vector<pair<int,int>> v;\n        for(int i=0;i<n-1;i++){\n            v.push_back({vertical[i],1});\n        }\n        for(int i=0;i<m-1;i++){\n            v.push_back({horizontal[i],0});\n        }\n        priority_queue<pair<int,int>>pq;\n        for(auto i:v){\n            pq.push(i);\n        }\n        int hans = 1,vans = 1;\n        long long ans = 0;\n        while(!pq.empty()){\n            auto t= pq.top();\n            pq.pop();\n            int ind = t.second;\n            if(ind != 0){\n                ans += (long long)hans*(long long)t.first;\n                vans++;\n            }\n            else{\n                ans += (long long)vans*(long long)t.first;\n                hans++;\n            }\n        }\n        return ans;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontal, vector<int>& vertical) {\n        return solve(horizontal,vertical,m,n);\n    }\n};",
    "submit_ts": "1720926028",
    "subm_id": "1320273768"
}