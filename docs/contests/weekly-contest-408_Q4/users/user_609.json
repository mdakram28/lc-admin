{
    "username": "Aditya_Tulsyan",
    "submission": "class Solution {\nprivate:\n    int bfs(vector<vector<int>> &graph, int start, int target1, int target2, int nodes) {\n        queue<int> q;\n        vector<int> visited(nodes + 4, 0);\n        q.push(start);\n        visited[start] = 1;\n        \n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : graph[u]) {\n                if (!visited[v]) {\n                    q.push(v);\n                    visited[v] = 1;\n                }\n            }\n        }\n        return visited[target1] || visited[target2];\n    }\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles2) {\n        int num_circles = circles2.size();\n        vector<vector<int>> graph(num_circles + 4);\n\n        vector<tuple<int, int, int>> circles(num_circles);\n        for (int i = 0; i < num_circles; ++i) {\n            circles[i] = make_tuple(circles2[i][0], circles2[i][1], circles2[i][2]);\n        }\n\n        for (int i = 0; i < num_circles; ++i) {\n            auto [xi, yi, ri] = circles[i];\n            if (xi - ri <= 0) {\n                graph[num_circles].push_back(i);\n                graph[i].push_back(num_circles);\n            }\n            if (xi + ri >= X) {\n                graph[num_circles + 2].push_back(i);\n                graph[i].push_back(num_circles + 2);\n            }\n            if (yi - ri <= 0) {\n                graph[num_circles + 1].push_back(i);\n                graph[i].push_back(num_circles + 1);\n            }\n            if (yi + ri >= Y) {\n                graph[num_circles + 3].push_back(i);\n                graph[i].push_back(num_circles + 3);\n            }\n\n            for (int j = i + 1; j < num_circles; ++j) {\n                auto [xj, yj, rj] = circles[j];\n                double distance = sqrt(pow(xi - xj, 2) + pow(yi - yj, 2));\n                if (distance <= ri + rj) {\n                    graph[i].push_back(j);\n                    graph[j].push_back(i);\n                }\n            }\n        }\n\n        if (bfs(graph, num_circles, num_circles + 1, num_circles + 2, num_circles + 4) ||\n            bfs(graph, num_circles + 3, num_circles + 2, num_circles + 1, num_circles + 4)) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138033",
    "subm_id": "1335780341"
}