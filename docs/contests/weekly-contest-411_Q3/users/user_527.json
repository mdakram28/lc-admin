{
    "username": "Lost Temple",
    "submission": "public class Solution {\n    public string LargestPalindrome(int n, int k) {\n        char[] arr = new char[n];\n        int left = 0,right = n-1;\n        if (k == 5) {\n            arr[0] = '5';\n            arr[n-1] = '5';\n            left++;\n            right--;\n            while (left <= right) {\n                arr[left] = '9';\n                arr[right] = '9';\n                left++;\n                right--;\n            }\n            //return new string(arr);\n        } else if (n == 1 || n == 2) {\n            int d = 9/k*k;\n            arr[left] = (char)(d+'0');\n            arr[right] = arr[left];\n            //return new string(arr);\n        } else if (k == 4) {\n            arr[left++] = '8';\n            arr[right--] = '8';\n            arr[left++] = '8';\n            arr[right--] = '8';\n            while (left <= right) {\n                arr[left++] = '9';\n                arr[right--] = '9';\n            }\n        } else if (k == 8) {\n            for (int i=0;i<3;i++) {\n                arr[left+i] = '8';\n                arr[right-i] = '8';\n            }\n            left += 3;\n            right -= 3;\n            while (left <= right) {\n                arr[left++] = '9';\n                arr[right--] = '9';\n            }\n        } else {\n            int d = k % 2 == 0 ? 8 : 9;\n            arr[left] = (char)(d+'0');\n            arr[right] = arr[left];\n            left++;\n            right--;\n            long m = (d * FastPow(10,n-1,k) + d) % k;\n            int b = 1;\n            while ((n % 2 == 0 && left < right-1) || (n % 2 != 0 && left < right)) {\n                d = 9;\n                arr[left]  = '9';\n                arr[right] = '9';\n                m = (m + d * FastPow(10,n-b-1,k) + d * FastPow(10,b,k)) % k;\n                left++;\n                right--;\n                b++;\n            }\n            //Console.WriteLine(m);\n            for (d = 9;d>=0;d--) {\n                long tmpM = n % 2 == 0 ? (m + d * FastPow(10,n-b-1,k) + d * FastPow(10,b,k)) % k : (m + d * FastPow(10,n-b-1,k)) % k;\n                //Console.WriteLine(tmpM);\n                if (tmpM == 0) {\n                    arr[left] = (char)(d + '0');\n                    arr[right] = arr[left];\n                    break;\n                    //return new string(arr);\n                }\n            }\n        }\n        return new string(arr);\n    }\n    \n    private long FastPow(long a,long b,long mod) {\n        long res = 1;\n        while (b != 0) {\n            if ((b&1) != 0) {\n                res = res * a % mod;\n            }\n            a = a * a % mod;\n            b >>= 1;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723951649",
    "subm_id": "556406824"
}