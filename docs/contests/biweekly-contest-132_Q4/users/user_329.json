{
    "username": "jamshedmd1111",
    "submission": "#define ll long long int\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        ll n = a.size();\n\n        vector<ll> v (n + 1, -1);\n\n        map<ll, ll> m;\n\n        for (ll i = n - 1; i >= 0; i--)\n        {\n            if(m.count(a[i])){\n                v[i] = m[a[i]];\n            }\n            m[a[i]] = i;\n        }\n\n        vector<vector<ll>> dp (n + 1, vector<ll> (k + 3, 1));\n\n        vector<ll> maxOfIMoves (k + 1);\n\n        ll ans = 0;\n\n        for(ll i = 0; i<n; i++){\n            for(ll x = k; x >= 0; x--){\n\n                if(i - 1 >= 0 && x - 1 >= 0){\n                    dp[i][x] = max(dp[i][x], maxOfIMoves[x - 1] + 1);\n                    if(dp[i][x] > i + 1){\n                        dp[i][x] = i + 1;\n                    }\n                }\n\n                maxOfIMoves[x] = max(maxOfIMoves[x], dp[i][x]);\n\n                ans = max(ans, dp[i][x]);\n\n                ll c = v[i];\n\n                if(c != -1){\n                    dp[c][x] = max(dp[c][x], dp[i][x] + 1);\n                }\n            }\n        }   \n\n        return ans;\n    }\n};",
    "submit_ts": "1717860857",
    "subm_id": "1281771663"
}