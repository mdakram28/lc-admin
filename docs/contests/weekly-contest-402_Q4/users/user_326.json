{
    "username": "meng-hsuan",
    "submission": "class TreeNode:\n    def __init__(self):\n        self.val = 0\n        self.chd = collections.defaultdict(TreeNode)\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        MAX_BITS = 17\n        \n        status = [0] + [1 if nums[i] > nums[i - 1] and nums[i] > nums[i + 1] else 0 for i in range(1, n - 1)] + [0]\n        print(status)\n        \n        root = TreeNode()\n        \n        def update_val(ind: int, dv: int) -> None:\n            #print(f\"Updating the value at index {ind} by an increment of {dv}.\")\n            ptr = root\n            for bit in range(MAX_BITS - 1, -1, -1):\n                if ind & (1 << bit):\n                    ptr = ptr.chd[bit]\n                else:\n                    ptr.chd[bit].val += dv\n                    #print(\"Written\", bit, dv)\n        \n        def get_sum(ind: int) -> None:\n            #print(f\"Retrieving the sum of values up to index {ind}.\")\n            ptr = root\n            ret = 0\n            for bit in range(MAX_BITS - 1, -1, -1):\n                if ind & (1 << bit):\n                    ptr = ptr.chd[bit]\n                    ret += ptr.val\n                    #print(\"Obtained\", bit, ptr.val)\n            \n            return ret\n        \n        for i in range(1, n -1):\n            if status[i]:\n                update_val(i, status[i])\n        \n        ans = []\n        for type_, u, v in queries:\n            if type_ == 2:\n                nums[u] = v\n                for i in range(u - 1, u + 2):\n                    if 1 <= i <= n - 2:\n                        orig_status = status[i]\n                        status[i] = 1 if nums[i] > nums[i - 1] and nums[i] > nums[i + 1] else 0\n                        update_val(i, status[i] - orig_status)\n                #print(status)\n            else:\n                if v - u < 2:\n                    ans.append(0)\n                else:\n                    ans.append(get_sum(v) - get_sum(u + 1))\n        \n        return ans\n    ",
    "submit_ts": 1718507488.0
}