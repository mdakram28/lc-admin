{
    "username": "Edward Jiwook Kim",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        import heapq\n        from itertools import combinations\n        maxVals = []\n        maxDimens = max(len(board), len(board[0]))\n        heapLen = maxDimens if maxDimens > 50 else 3 * maxDimens\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                heappush(maxVals, (board[i][j], i, j))\n                if len(maxVals) > heapLen:\n                    heappop(maxVals)\n        res = float('-inf')\n        for comb in combinations(maxVals, 3):\n            if len(set([s[1] for s in comb])) == 3 == len(set([s[2] for s in comb])):\n                res = max(sum([s[0] for s in comb]), res)\n        return res\n                \n\n        ",
    "submit_ts": "1723910080",
    "subm_id": "1359216604"
}