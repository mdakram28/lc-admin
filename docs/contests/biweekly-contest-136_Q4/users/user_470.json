{
    "username": "EyeStrain11",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        vector<int> adj[n];\n\n        for(auto it: edges)\n        {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n\n        vector<int> sub(n), ans(n);\n\n        function<void(int, int)> dfs = [&](int node, int par)\n        {\n            for(auto it: adj[node])\n            {\n                if(it!=par)\n                {\n                    dfs(it, node);\n                    if(it%2) sub[node] = max(sub[node], sub[it]+1);\n                    else sub[node] = max(sub[node], sub[it]+2);\n                }\n            }\n        };\n\n        function<void(int, int)> dfs2 = [&](int node, int par)\n        {\n            ans[node] = sub[node];\n\n            multiset<int> s;\n            for(auto it: adj[node]) \n            {\n                int c = 2;\n                if(it%2) c = 1;\n                s.insert(sub[it]+c);\n            }\n\n            for(auto it: adj[node])\n            {\n                if(it!=par)\n                {\n                    int c = 2;\n                    if(it%2) c = 1;\n\n                    int p = sub[node], q = sub[it];\n                    s.erase(s.find(q + c));\n\n                    int d = 2;\n                    if(node%2) d = 1;\n\n                    if(s.size()) sub[node] = *s.rbegin();\n                    else sub[node] = 0;\n                    // cout << node << \" \" << it << \" \" << sub[node] <<'\\n';\n                    sub[it] = max(sub[it], sub[node]+d);\n\n                    dfs2(it, node);\n\n                    s.insert(q+c);\n                    sub[node] = p;\n                    sub[it] = q;\n                }\n            }\n        };\n\n        dfs(0, -1);\n\n        dfs2(0, -1);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700228",
    "subm_id": "1343235502"
}