{
    "username": "PranavKhullar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0;\n\n        if (n%2==1 && m%2==1 && grid[n/2][m/2] == 1) ans++;\n        for(int i=0; i<n/2; i++) {\n            for(int j=0; j<m/2; j++) {\n                int z=0, o=0;\n                // count 0s\n                if (grid[i][j] == 0) z++;\n                else o++;\n                if (grid[i][m-1-j] == 0) z++;\n                else o++;\n                if (grid[n-1-i][j] == 0) z++;\n                else o++;\n                if (grid[n-1-i][m-1-j] == 0) z++;\n                else o++;\n                ans += (4-max(z,o));\n            }\n        }\n        int op=0, o=0;\n        if (n%2==1) {\n            for(int j=0; j<m/2; j++) {\n                int s = grid[n/2][j] + grid[n/2][m-1-j];\n                if (s == 2) op++;\n                else if (s==1) o++;\n            }\n        }\n        if (m%2==1) {\n            for(int i=0; i<n/2; i++) {\n                int s = grid[i][m/2] + grid[n-1-i][m/2];\n                if (s==2) op++;\n                else if (s==1) o++;\n            }\n        }\n\n        if ((2*op) % 4 == 0) {\n            ans += o;\n        } else {\n            if (o>0) {\n                ans += o;\n            } else {\n                ans += 2;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722697390",
    "subm_id": "1343144835"
}