{
    "username": "Karunesh_123",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    // Helper function to calculate differences and their maximum values\n    void calculateDifferences(const vector<int>& nums, int k, map<int, vector<int>>& mp, vector<int>& x) {\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i], b = nums[n - i - 1];\n            int diff = abs(a - b);\n            int X = max({a, b, k - a, k - b});\n            mp[diff].push_back(X);\n            x.push_back(X);\n        }\n    }\n\n    // Main function to determine the minimum number of changes\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>>mp;\n        vector<int> x;\n\n        // Calculate differences and their maximum values\n        calculateDifferences(nums, k, mp, x);\n\n        int ans = nums.size();\n        sort(x.begin(), x.end());\n\n        for (const auto& val : mp) {\n            int dif = val.first;\n            int t = lower_bound(x.begin(), x.end(), dif) - x.begin();\n            t = t * 2 + (nums.size() / 2 - t);\n\n            for (const auto& X : val.second) {\n                if (X < dif) {\n                    t -= 2;\n                } else {\n                    t-= 1;\n                }\n            }\n\n            ans = min(ans, t);\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1721489479",
    "subm_id": "1327454493"
}