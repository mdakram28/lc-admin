{
    "username": "an1ket_62",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n=a.size();\n        vector<int>pf(n);\n        pf[0]=1;\n        for (int i=1;i<n;i++){\n            if (a[i]!=a[i-1]){\n                pf[i]+=1;\n            }\n            pf[i]+=pf[i-1];\n            \n        }\n        int ans=0;\n        for (int i=0;i<n;i++){\n            if (i+k-1<n){\n                int diff=pf[i+k-1]-pf[i];\n                if (diff==k-1){\n                    ans++;\n                }\n                \n            }\n            else{\n                int diff=pf[n-1]-pf[i];\n                int rem=k-(n-1-i+1);\n                // cout << i << \" \" << rem << endl;\n                diff+=(pf[rem-1]-pf[0]);\n                if (diff==k-2 && a[0]!=a[n-1]){\n                    ans++;\n                }\n                \n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277067",
    "subm_id": "1311646196"
}