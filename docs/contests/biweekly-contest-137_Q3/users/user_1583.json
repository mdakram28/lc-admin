{
    "username": "Rupa",
    "submission": "class Solution {\npublic:\n    int n,m;\n    set<pair<int,int>> rows[502];\n    set<pair<int,int>> cols[502];\n    \n    const int mod=-1e9+7;\n    \n    long long solve(int blockedRow) {\n        // vector<int> bestCol[3];\n        cout<<blockedRow<<\"::\";\n        // for(int i=0;i<3;i++) {\n        //     bestCol[i].resize(m+2);\n        //     for(int col=0;col<m;col++) {\n        //        bestCol[i][col]=mod;\n        //     }\n        // }\n        set<pair<int,pair<int,int>>> pls;\n        for(int row=0;row<n;row++) {\n            if(row==blockedRow) continue;\n            int cnt=2;\n            auto it=rows[row].rbegin();\n            while(cnt) {\n                auto [v, col] = *it;\n                pls.insert({v,{row,col}});\n                // bestCol[cnt][col]=max(bestCol[cnt][col], v);\n                it=next(it);\n                cnt--;\n            }\n        }\n        long long bestest = LLONG_MIN;\n        auto it=pls.rbegin();\n        int cnt=2;\n        while(cnt--) {\n            auto bc=it->second;\n            auto it2=pls.rbegin();\n            while(it2 != pls.rend()) {\n                if((it2->second).first == bc.first || (it2->second).second == bc.second) {\n                    ++it2;\n                    continue;\n                }\n                bestest=max(bestest, it->first + 0LL + it2->first);\n                break;\n            }\n            it=next(it);\n        }\n        \n        \n//         for(int i=1;i<3;i++) sort(bestCol[i].begin(), bestCol[i].end(), greater<int>());\n//         for(int i=1;i<3;i++) {\n//             for(int row=0;row<n;row++) cout<<bestCol[i][row]<<' ';\n//             cout<<endl;\n//         }\n//         long long bestest = bestCol[2][0] + bestCol[2][1];\n//         bestest = max(bestest, bestCol[1][0] + 0LL + bestCol[1][1]);\n        \n//         for(int i=1;i<3;i++) for(int j=0;j<2;j++) \n//             bestest = max(bestest, bestCol[i][j] + 0LL + bestCol[(i==1) ? 2 : 1][(j==1) ? 0 : 1]);\n        \n        cout<<bestest<<endl;\n        return bestest;\n    }\n    \n    long long maximumValueSum(vector<vector<int>>& a) {\n        n=a.size();\n        m=a[0].size();\n        for(int row=0;row<n;row++) {\n            for(int col=0;col<m;col++) {\n                rows[row].insert({a[row][col], col});\n                cols[col].insert({a[row][col], row});\n            }\n        }\n        \n        long long ans=LLONG_MIN;\n        for(int col=0;col<(m-2);col++) {\n            for(int row=0;row<n;row++) {\n                rows[row].erase({a[row][col], col});\n            }\n            int cnt=3;\n            auto it=cols[col].rbegin();\n            while(cnt--) {\n                cout<<col<<' '<<(it->first)<<\"::\";\n                ans=max(ans, it->first + solve(it->second));\n                it=next(it);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909769",
    "subm_id": "1359205118"
}