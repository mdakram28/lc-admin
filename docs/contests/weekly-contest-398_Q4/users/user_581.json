{
    "username": "pavi_sri",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        dp = {}\n        def dfs(i, jump, is_last_diff):\n            if i > k and is_last_diff:\n                return 0\n            if (i, jump, is_last_diff) in dp:\n                return dp[(i, jump, is_last_diff) ]\n            \n            s = (i == k)\n            if i + 2**jump <= k+1:\n                s += dfs(i + 2**jump, jump + 1, False)\n            \n            if i >= 1 and not is_last_diff:\n                s += dfs(i - 1, jump, True)\n            dp[(i, jump, is_last_diff)] = s\n            return s\n        \n        return dfs(1, 0, False)",
    "submit_ts": 1716089286.0
}