{
    "username": "Shivanshu Dixit",
    "submission": "\ndef isD(cn,k):\n    if k == 1:\n        return True\n    if k == 2:\n        return True if int(cn[-1])  % 2 == 0 else False\n    if k == 3:\n        if len(cn) <= 5:\n            return True if int(cn) % 3 == 0 else False\n        cs = sum([int(c) for c in cn])\n        return isD(str(cs),k)\n    if k == 4:\n        if len(cn) <= 2:\n            return True if int(cn) % 4 == 0 else False\n        return isD(cn[-2:],k)\n    if k == 5:\n        if int(cn[0]) in [0,5]:\n            return True\n    if k == 6:\n        return isD(cn,3) and isD(cn,2)\n    if k == 7:\n        if len(cn) <= 3:\n            return True if int(cn) % 7 == 0 else False\n        ca = 0\n        cs = 0\n        for i in range(len(cn) - 1, -1 , -3):\n            cv = cn[i-2:i+1] if i - 2 > -1 else cn[0:i+1]\n            if cs == 0:\n                ca += int(cv)\n            else:\n                ca -= int(cv)\n            cs ^= 1\n        return isD(str(ca),k)\n    if k == 8:\n        if len(cn) <= 3:\n            return True if int(cn) % 8 == 0 else False\n        return isD(cn[-3:],k)\n    if k == 9:\n        if len(cn) <= 5:\n            return True if int(cn) % 9 == 0 else False\n        cs = sum([int(c) for c in cn])\n        return isD(str(cs),k)\n                \n                \n                \nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        \n        if k == 1:\n            return \"9\" * n\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            return \"8\" + (\"9\" * (n-2)) + \"8\"\n        if k == 3:\n            return \"9\" * n\n        if k == 4:\n            if n == 1:\n                return \"8\"\n            if n == 2:\n                return \"88\"\n            if n == 3:\n                return \"888\"\n            return \"88\" + (\"9\" * (n-4)) + \"88\"\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            return \"5\" + (\"9\" * (n-2)) + \"5\"\n        if k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            if n == 3:\n                return \"888\"\n            if n == 4:\n                return \"8778\"\n            if n == 5:\n                return \"89898\"\n            if n % 2 == 0:\n                c9 = (n-4)//2\n                return \"8\" + (\"9\" * (c9)) + \"77\" + (\"9\" * (c9)) + \"8\"\n            else:\n                c9 = (n-3)//2\n                return \"8\" + (\"9\" * (c9)) + \"8\" + (\"9\" * (c9)) + \"8\"\n        if k == 7:\n            if n == 1:\n                return \"7\"\n            if n == 2:\n                return \"77\"\n            if n == 3:\n                return \"959\"\n            if n == 4:\n                return \"9779\"\n            if n == 5:\n                return \"99799\"\n            if n % 2 == 0:\n                c9 = (n-2) // 2\n                for i in range(9,-1,-1):\n                    cn = (\"9\" * c9) +(str(i) * 2)+ (\"9\" * c9)\n                    if isD(cn,7):\n                        return cn\n            else:\n                c9 = (n-1) // 2\n                for i in range(9,-1,-1):\n                    cn = (\"9\" * c9) +(str(i) )+ (\"9\" * c9)\n                    if isD(cn,7):\n                        return cn\n        \n        if k == 8:\n            if n <= 6:\n                return \"8\" * n\n            return \"888\" + (\"9\" * (n-6)) + \"888\"\n            \n            \n        if k == 9:\n            return \"9\" * n\n            \n            \n        \n\n                \n        pl = (n + 1)//2\n        \n        st = 10 ** (pl - 1)       \n        en = (10 ** pl) - 1\n        \n        for i in range(en,st-1,-1):\n            si = str(i)\n            \n            if n % 2 == 0:\n                cn = si + si[::-1]\n            else:\n                cn = si + si[-2::-1]\n            \n            if isD(cn,k):\n                return cn\n        return k\n                \n                ",
    "submit_ts": "1723952933",
    "subm_id": "1359808209"
}