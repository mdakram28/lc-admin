{
    "username": "Aditya_Varma8019",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> dp;\n\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        \n        dp.resize(n,vector<int>(k+1,1));\n        \n        vector<int> vec(k+1,-1);\n        vector<map<int,int>> mp(k+1);\n        \n        \n        for(int i=0;i<n;i++) {\n            dp[i][0]=1;\n        }\n        \n        int ans=1;\n        \n        \n        for(int ind=0;ind<n;ind++) {\n            for(int i=0;i<=k;i++) {\n                for(int j=0;j<i;j++) {\n                    dp[ind][i]=max(dp[ind][i], 1+vec[j]);\n                }\n                \n                if(mp[i].find(nums[ind])!=mp[i].end()) {\n                    dp[ind][i] = max(dp[ind][i], 1 + mp[i][nums[ind]]);\n                }\n                ans=max(ans,dp[ind][i]);\n            }\n            for(int i=0;i<=k;i++) {\n                vec[i] = max(vec[i],dp[ind][i]);\n                mp[i][nums[ind]]=max(mp[i][nums[ind]],dp[ind][i]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717862280.0
}