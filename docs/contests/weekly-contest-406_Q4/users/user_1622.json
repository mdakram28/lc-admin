{
    "username": "srini047",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        long long  ans=0;\n        int rows=1;\n        int cols=1;\n        int i=0;\n        int j=0;\n\n        while (i<horizontalCut.size() && j<verticalCut.size())\n        {\n            if (horizontalCut[i] >= verticalCut[j])\n            {\n                ans += horizontalCut[i]*cols;\n                rows++;\n                i++;\n            }\n            else\n            {\n                ans += verticalCut[j]*rows;\n                cols++;\n                j++;\n            }\n        }\n        \n        while (i<horizontalCut.size())\n        {\n            ans += horizontalCut[i]*cols;\n            i++;\n        }\n        \n        while (j<verticalCut.size())\n        {\n            ans += verticalCut[j]*rows;\n            j++;\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1720926365",
    "subm_id": "1320284044"
}