{
    "username": "Yoder2k4",
    "submission": "class Solution {\n    class Trie{\n    public:\n        int cost;\n        Trie *child[26];\n        Trie() {\n            this->cost = INT_MAX;\n            for(int i =0; i < 26; i++) this->child[i] = NULL;\n        }\n    };\n\n    void add(string &s, int c, Trie *root) {\n        Trie *curr = root;\n        for(int i = 0; i < s.size(); i++) {\n            int l = s[i]-'a';\n            if(curr->child[l]==NULL) curr->child[l] = new Trie();\n            curr = curr->child[l];\n        }\n        curr->cost = min(curr->cost, c);\n    }\n\n    int rec(int ind, string &s, Trie *root, vector<int> &dp) {\n        if(ind==s.size()) return 0;\n        if(dp[ind]!=-1) return dp[ind];\n        Trie *curr = root;\n        int res = INT_MAX;\n        for(int i = ind; i < s.size(); i++) {\n            int l = s[i]-'a';\n            if(curr->child[l]==NULL) break;\n            curr = curr->child[l];\n            if(curr->cost<INT_MAX) {\n                int r = rec(i+1, s, root, dp);\n                if(r!=INT_MAX) res = min(res, r+curr->cost);\n            }\n        }\n        return dp[ind] = res;\n    }\n\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie *root = new Trie();\n        for(int i = 0; i < words.size(); i++) add(words[i], costs[i], root);\n        vector<int> dp(target.size(), -1);\n        int ans = rec(0, target, root, dp);\n        return (ans==INT_MAX ? -1: ans);\n    }\n};",
    "submit_ts": "1720322535",
    "subm_id": "1312352524"
}