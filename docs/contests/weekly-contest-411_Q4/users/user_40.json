{
    "username": "vonrong",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, queries: List[List[int]]) -> List[int]:\n        j = 0\n        a, b = 0, 0\n        n = len(s)\n        s = '?'+s\n        d = [0]*(n+1)\n        psum = [0]*(n+1)\n        for i in range(1, n+1):\n            if s[i] == '0': a += 1\n            else: b += 1\n            while a > k and b > k:\n                j += 1\n                if s[j] == '0': a -= 1\n                else: b -= 1\n            d[i] = j\n        for i in range(1, n+1):\n            psum[i] = psum[i-1]+(i-d[i])\n        ans = []\n        print(d)\n        print(psum)\n        for l, r in queries:\n            r += 1\n            l += 1\n            ind = bisect_right(d, l-1)\n            if ind > r:\n                tans = (r-l+1)*(r-l+2)//2\n            else:\n                tans = psum[r]-psum[ind-1]+(ind-l)*(ind-l+1)//2\n            ans.append(tans)\n        return ans\n            \n        \n                    ",
    "submit_ts": "1723949984",
    "subm_id": "1359734102"
}