{
    "username": "Juliet91",
    "submission": "class Solution(object):\n    def minimumDistance(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n        s = sorted([(a + b, i) for i, [a, b] in enumerate(points)])\n        d = sorted([(a - b, i) for i, [a, b] in enumerate(points)])\n        \n        res = 9999999999\n        for i, bb in enumerate(points):\n            minsum = maxsum = mindiff = maxdiff = 0\n            if i == s[0][1]:\n                minsum = s[1][0]\n            else:\n                minsum = s[0][0]\n            if i == s[-1][1]:\n                maxsum = s[-2][0]\n            else:\n                maxsum = s[-1][0]\n            \n            \n            if i == d[0][1]:\n                mindiff = d[1][0]\n            else: mindiff = d[0][0]\n            \n            if i == d[-1][1]:\n                maxdiff = d[-2][0]\n            else: maxdiff = d[-1][0]\n                \n            res = min(res, max(maxsum - minsum, maxdiff - mindiff))\n            \n        return res\n        \n        \n        \n        \n# void MaxDist(vector<pair<int, int> >& A, int N)\n# {\n#     // Variables to track running extrema\n#     int minsum, maxsum, mindiff, maxdiff;\n \n#     minsum = maxsum = A[0].first + A[0].second;\n#     mindiff = maxdiff = A[0].first - A[0].second;\n#     for (int i = 1; i < N; i++) {\n#         int sum = A[i].first + A[i].second;\n#         int diff = A[i].first - A[i].second;\n#         if (sum < minsum)\n#             minsum = sum;\n#         else if (sum > maxsum)\n#             maxsum = sum;\n#         if (diff < mindiff)\n#             mindiff = diff;\n#         else if (diff > maxdiff)\n#             maxdiff = diff;\n#     }\n \n#     int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n#     cout << maximum << endl;\n# }"
}