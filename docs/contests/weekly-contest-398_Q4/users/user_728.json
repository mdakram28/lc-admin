{
    "username": "003213",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        int ans = 0;\n        \n        int jump = 0;\n        // System.out.println((long)Math.pow(2,29));\n        while(true) {\n            int cur = (int)Math.pow(2, jump);\n            // System.out.println(cur+\" \" +(jump+1));\n            if(cur-jump-1 > k) break;\n            \n            int back = cur-k;\n            \n            if(back < 0) {\n                jump++;\n                continue;\n            }\n            int c = combi(jump+1, back);\n            // System.out.println(\"ff  \"+ (jump+1) + \" \" + back+ \" \" +c);\n            ans+=c;\n            jump++;\n        }\n        return ans;\n    }\n    \n    private int combi(int n, int r) {\n        long out = 1;\n        \n        if(r > n/2) {\n            r = n-r;\n        }\n        \n        boolean[] div = new boolean[r+1];\n        for(int i=0; i<r; i++) {\n            div[r-i] = true;\n        }\n        \n        for(int i=0; i<r; i++) {\n            if(out*(n-i) <= 0) {\n                for(int j=0; j<=r; j++) {\n                    if(!div[j]) continue;\n                    \n                    if(out%j==0) {\n                        out/=j;\n                        div[j] = false;\n                    }\n                }\n            }\n            out = out*(n-i);\n            // System.out.println(n+\" \" + r+\" \" +out);\n        }\n        for(int i=0; i<=r; i++) {\n            if(div[i]) {\n                out/=i;\n            }\n        }\n        return (int) out;\n    }\n}",
    "submit_ts": 1716089093.0
}