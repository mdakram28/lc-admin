{
    "username": "Fun_Purpose",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // priority_queue<int> pq;\n        // for(auto cost : horizontalCut)pq.push(cost);\n        // for(auto cost : verticalCut)pq.push(cost);\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        ll h = 1 , v = 1 , totalCost = 0;\n        int i = 0, j = 0;\n        \n        while(i < horizontalCut.size() && j < verticalCut.size()) {\n            if(horizontalCut[i] >= verticalCut[j]) {\n                totalCost += (ll)horizontalCut[i] * v;\n                i++;\n                h++;\n            } \n            else {\n                totalCost += verticalCut[j] * h;\n                j++;\n                v++;\n            }\n        }\n        while(i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] * v;\n            i++;\n            h++;\n        }\n        while(j < verticalCut.size()) {\n            totalCost += verticalCut[j] * h;\n            j++;\n            v++;\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720926662",
    "subm_id": "1320292755"
}