{
    "username": "rishu82100",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long m = board.size();\n        long long n = board[0].size();\n        vector<vector<pair<long long, long long>>> topValues(m); // Store top 3 values per row (value, column index)\n\n        // Step 1: Precompute the top 3 values for each row\n        for (long long i = 0; i < m; ++i) {\n            vector<pair<long long, long long>> rowValues;\n            for (long long j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n            sort(rowValues.rbegin(), rowValues.rend()); // Sort in descending order by value\n            topValues[i] = vector<pair<long long, long long>>(rowValues.begin(), rowValues.begin() + min(3*1LL, n));\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        // Step 2: Try every combination of three distinct rows\n        for (long long r1 = 0; r1 < m; ++r1) {\n            for (long long r2 = r1 + 1; r2 < m; ++r2) {\n                for (long long r3 = r2 + 1; r3 < m; ++r3) {\n                    // Step 3: Try to pick values from the precomputed top 3 for each row\n                    for (auto& [val1, c1] : topValues[r1]) {\n                        for (auto& [val2, c2] : topValues[r2]) {\n                            if (c1 == c2) continue; // Skip if columns are the same\n                            for (auto& [val3, c3] : topValues[r3]) {\n                                if (c1 == c3 || c2 == c3) continue; // Skip if columns are the same\n                                long long currentSum = val1 + val2 + val3;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723908938",
    "subm_id": "1359173194"
}