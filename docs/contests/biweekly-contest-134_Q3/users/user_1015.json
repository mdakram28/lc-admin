{
    "username": "jushuai_lfx",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int tmp = c.size();\n        for (int i = 0; i < tmp; ++i) {\n            c.push_back(c[i]);\n        }\n        \n        int size = c.size();\n        vector<int> v(size, 0);\n        for (int i = 0; i < size; ++i) {\n            if (c[i] != c[(i - 1 + size) % size] && c[i] != c[(i + 1) % size]) {\n                v[i] = 1;\n                //cout << \"*\" << i << endl;\n            }\n        }\n        vector<int> psum(size + 1, 0);\n        for (int i = 0; i < size; ++i) {\n            psum[i + 1] = psum[i] + v[i]; \n        }\n        int ans = 0;\n        for (int i = 0; i < size / 2; ++i) {\n            if (psum[i + k - 1] - psum[i + 1] == k - 2) {\n                ++ans;\n                //cout << i << endl;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277396",
    "subm_id": "544556385"
}