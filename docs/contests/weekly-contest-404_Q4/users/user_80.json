{
    "username": "radiowaves",
    "submission": "class Solution {\n    static ArrayList<ArrayList<Integer>> arr,arr2;\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        arr = new ArrayList<>();\n        arr2 = new ArrayList<>();\n        for(int i = 0; i <= edges1.length; i++) arr.add(new ArrayList<>());\n        for(int i = 0; i <= edges2.length; i++) arr2.add(new ArrayList<>());\n        for(int i = 0; i < edges1.length; i++){\n            int s = edges1[i][0];\n            int t = edges1[i][1];\n            arr.get(s).add(t);\n            arr.get(t).add(s);\n        }\n        for(int i = 0; i < edges2.length; i++){\n            int s = edges2[i][0];\n            int t = edges2[i][1];\n            arr2.get(s).add(t);\n            arr2.get(t).add(s);\n        }\n        int v1 = getD(arr);\n        int v2 = getD(arr2);\n        return Math.max((v1+1)/2 + (v2+1)/2 + 1,Math.max(v1,v2));\n    }\n    \n    public int getD(ArrayList<ArrayList<Integer>> g){\n        int[] s1 = goDepth(g,0);\n        int[] s2 = goDepth(g,s1[0]);\n        return s2[1];\n    }\n    \n    public int[] goDepth(ArrayList<ArrayList<Integer>> g, int s){\n        Deque<int[]> dq = new ArrayDeque<>();\n        int[] ok = new int[g.size()];\n        Arrays.fill(ok,g.size()+3);\n        dq.add(new int[]{s,0});\n        ok[s] = 0;\n        int last = s;\n        while(dq.size() > 0){\n            int[] now = dq.poll();\n            for(int v : g.get(now[0])){\n                if(ok[v] > now[1]+1){\n                    ok[v] = now[1]+1;\n                    dq.add(new int[]{v,now[1]+1});\n                    last = v;\n                }\n            }\n        }\n        return new int[]{last,ok[last]};\n        \n    }\n}",
    "submit_ts": 1719716895.0
}