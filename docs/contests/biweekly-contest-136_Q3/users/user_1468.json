{
    "username": "adoring-stonebrakerr7q",
    "submission": "class Solution {\n\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        nums = new ArrayList<>();\n    \tfor(int i = 0; i < n / 2; i++){\n            for(int j = 0; j < m / 2; j++){\n                int a = grid[i][j], b = grid[i][m - (j + 1)];\n                int c = grid[n - (i + 1)][j], d = grid[n - (i + 1)][m - (j + 1)];\n                int cnt1 = a == 1 ? 1 : 0;\n                cnt1 += b == 1 ? 1 : 0;\n                cnt1 += c == 1 ? 1 : 0;\n                cnt1 += d == 1 ? 1 : 0;\n                nums.add(new int[]{cnt1, 1});\n            }\n        }\n        if(n % 2 == 1){\n            // i / 2\n            for(int j = 0; j < m / 2; j++){\n                int cnt1 = grid[n / 2][j] == 1 ? 1 : 0;\n                cnt1 += grid[n / 2][m - (j + 1)] == 1 ? 1 : 0;\n                nums.add(new int[]{cnt1, 0});\n            }\n        }\n        if(m % 2 == 1){\n            // j / 2\n            for(int i = 0; i < n / 2; i++){\n                int cnt1 = grid[i][m / 2] == 1 ? 1 : 0;\n                cnt1 += grid[n - (i + 1)][m / 2] == 1 ? 1 : 0;\n                nums.add(new int[]{cnt1, 0});\n            }\n        }\n    \t// for(int i = 0; i < nums.size(); i++){\n        //     System.out.println(Arrays.toString(nums.get(i)));\n        // }\n        int c1 = 0;\n        if(n % 2 == 1 && m % 2 == 1){\n            c1 += grid[n / 2][m / 2] == 1 ? 1 : 0;\n        }\n        //System.out.println(c1);\n        dp = new int[nums.size() + 1][4][5];\n        for(int i = 0; i <= nums.size(); i++){\n            for(int j = 0; j <= 3; j++){\n                for(int k = 0; k <= 4; k++){\n                    dp[i][j][k] = -1;\n                }\n            }\n        }\n        int ans = Math.min(dfs(0, c1, 0), dfs(0, 0, 4 - c1) + c1);\n        //System.out.println(dfs(0, c1, 0) + \" \" + (dfs(0, 0, 4 - c1) + c1));\n        return ans;\n    }\n\n    List<int[]> nums;\n    int[][][] dp;\n    public int dfs(int i, int j, int y){\n        int size = nums.size();\n        if(i == size) return j == 0 ? 0 : Integer.MAX_VALUE / 2;\n        if(dp[i][j][y] != -1) return dp[i][j][y];\n        int ans = Integer.MAX_VALUE / 2;\n        var a = nums.get(i);\n        int sum = a[1] == 1 ? 4 : 2;\n        // \u90091\n        ans = Math.min(ans, dfs(i + 1, (sum + j) % 4, y) + sum - a[0]);\n        // \u90090\n        ans = Math.min(ans, dfs(i + 1, j % 4, y) + a[0]);\n        return dp[i][j][y] = ans;\n    }\n\n}",
    "submit_ts": "1722699045",
    "subm_id": "552273790"
}