{
    "username": "nifeshe",
    "submission": "#define f first\n#define s second\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) ((int) (x).size())\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntemplate <typename T> inline bool umin(T &a, const T &b) { if(a > b) { a = b; return 1; } return 0; }\ntemplate <typename T> inline bool umax(T &a, const T &b) { if(a < b) { a = b; return 1; } return 0; }\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst ll mod = 1e9 + 7;\nconst ll base = 1e6 + 9;\nconst ll inf = 1e9;\nconst int MAX = 2e5 + 42;\nconst int LG = 20;\n\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<array<ll, 3>> a;\n        for(auto x : circles) {\n            a.pb({x[0], x[1], x[2]});\n        }\n        auto check = [&](ll x, ll y, int i) {\n            return (x - a[i][0]) * (x - a[i][0]) + (y - a[i][1]) * (y - a[i][1]) <= a[i][2] * a[i][2]; \n        };\n        int n = sz(a);\n        int N = n + 4;\n        vector<vector<int>> g(N);\n        auto add_edge = [&](int u, int v) {\n            g[u].pb(v); g[v].pb(u);\n        };\n        for(int i = 0; i < n; i++) {\n            auto [x, y, R] = a[i];\n            if(check(0, 0, i)) add_edge(i, n);\n            if(check(0, Y, i)) add_edge(i, n);\n            if(y <= Y && check(0, y, i)) add_edge(i, n);\n\n            if(check(0, Y, i)) add_edge(i, n + 1);\n            if(check(X, Y, i)) add_edge(i, n + 1);\n            if(x <= X && check(x, Y, i)) add_edge(i, n + 1);\n\n            if(check(X, Y, i)) add_edge(i, n + 2);\n            if(check(X, 0, i)) add_edge(i, n + 2);\n            if(y <= Y && check(X, y, i)) add_edge(i, n + 2);\n\n            if(check(X, 0, i)) add_edge(i, n + 3);\n            if(check(0, 0, i)) add_edge(i, n + 3);\n            if(x <= X && check(x, 0, i)) add_edge(i, n + 3);\n        }\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                auto [x1, y1, R1] = a[i];\n                auto [x2, y2, R2] = a[j];\n                if((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) <= (R1 + R2) * (R1 + R2)) {\n                    g[i].pb(j); g[j].pb(i);\n                }\n            }\n        }\n        int cnt = 0;\n        vector<int> used(N, -1);\n        function<void(int)> dfs = [&](int v) {\n            used[v] = cnt;\n            for(auto to : g[v]) {\n                if(!~used[to]) dfs(to);\n            }\n        };\n        for(int i = n; i < N; i++) {\n            if(!~used[i]) {\n                dfs(i);\n                cnt++;\n            }\n        }\n        return (used[n] != used[n + 2] && used[n + 1] != used[n + 3] && used[n] != used[n + 3] && used[n + 2] != used[n + 1]);\n    }\n};",
    "submit_ts": "1722137528",
    "subm_id": "1335766385"
}