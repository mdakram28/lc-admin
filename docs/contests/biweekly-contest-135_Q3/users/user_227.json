{
    "username": "chuan-chih",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        c = [0] * (k + 1)\n        need = [0] * (k + 2)\n        for i in range(n // 2):\n            x, y = nums[i], nums[~i]\n            c[abs(x - y)] += 1\n            max_diff = max(x, y, k - x, k - y)\n            need[max_diff + 1] += 1\n        need[:] = accumulate(need)\n        # rint(need)\n        return min(n // 2 - c[i] + need[i] for i in range(k + 1))\n#         ans = math.inf\n#         for i in range(k + 1):\n#             rest = n // 2 - c[i]\n            \n#         most = max(c.values())\n#         print(c)\n#         return n // 2 - most\n            ",
    "submit_ts": "1721487764",
    "subm_id": "1327400312"
}