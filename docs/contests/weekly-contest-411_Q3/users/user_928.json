{
    "username": "Niraj",
    "submission": "class Solution\n{\npublic:\n    char DPA[100001][7];\n    char DPAnz[100001][7];\n    int nxt[100001][7];\n    int nznxt[100001][7];\n\n    string largestPalindrome(int n, int k)\n    {\n        static const unordered_set<int> ok = {1, 3, 9};\n        if (ok.find(k) != ok.end())\n        {\n            return string(n, '9');\n        }\n\n        if (k == 2)\n        {\n            return (n == 1) ? \"8\" : (string(n, '9').replace(0, 1, \"8\").replace(n - 1, 1, \"8\"));\n        }\n\n        if (k == 5)\n        {\n            return (n == 1) ? \"5\" : (string(n, '9').replace(0, 1, \"5\").replace(n - 1, 1, \"5\"));\n        }\n        if (k == 4)\n        {\n            if (n <= 3)\n            {\n                return string(n, '8');\n            }\n            string res(n, '9');\n            for (int i = 0; i < 2; ++i)\n            {\n                res[i] = '8';\n                res[n - 1 - i] = '8';\n            }\n            return res;\n        }\n        if (k == 8)\n        {\n            if (n <= 5)\n            {\n                string res(n, '8');\n                return res;\n            }\n            string res(n, '9');\n            res[0] = '8';\n            res[n - 1] = '8';\n            res[1] = '8';\n            res[n - 2] = '8';\n            res[2] = '8';\n            res[n - 3] = '8';\n            return res;\n        }\n        if (k == 6)\n        {\n            if (n == 1)\n                return \"6\";\n            if (n == 2)\n                return \"66\";\n            if (n == 3)\n                return \"888\";\n            string res(n, '9');\n            res[0] = '8';\n            res[n - 1] = '8';\n            if (n % 2 == 1)\n            {\n                res[n / 2] = '8';\n            }\n            else\n            {\n                res[n / 2] = '7';\n                res[n / 2 - 1] = '7';\n            }\n\n            return res;\n        }\n        if (k == 7)\n        {\n            if (n == 1)\n            {\n                return \"7\";\n            }\n            fill(&DPA[0][0], &DPA[0][0] + sizeof(DPA), 0);\n            fill(&DPAnz[0][0], &DPAnz[0][0] + sizeof(DPAnz), 0);\n\n            for (int i = 1; i < 10; ++i)\n            {\n                DPA[1][i % 7] = '0' + i;\n                if (i != 0)\n                {\n                    DPAnz[1][i % 7] = '0' + i;\n                }\n            }\n\n            int base = 10 % 7;\n            for (int i = 0; i <= 100000 - 2; ++i)\n            {\n                for (int j = 0; j < 7; ++j)\n                {\n                    if ((i == 0 && j != 0) || (i > 0 && DPA[i][j] == 0))\n                    {\n                        continue;\n                    }\n                    for (int k = 9; k >= 0; --k)\n                    {\n                        int newm = (base * k + k + j * 10) % 7;\n                        if (DPA[i + 2][newm] == 0 || DPA[i + 2][newm] < '0' + k)\n                        {\n                            DPA[i + 2][newm] = '0' + k;\n                            nxt[i + 2][newm] = j;\n                        }\n                        if (k == 0)\n                            continue;\n                        if (DPAnz[i + 2][newm] == 0 || DPAnz[i + 2][newm] < '0' + k)\n                        {\n                            DPAnz[i + 2][newm] = '0' + k;\n                            nznxt[i + 2][newm] = j;\n                        }\n                    }\n                }\n                base = (base * 10) % 7;\n            }\n            int q = n;\n            string front(1, DPAnz[q][0]);\n            string back(1, DPAnz[q][0]);\n            int mod = nznxt[q][0];\n            q -= 2;\n            while (q)\n            {\n                front += DPA[q][mod];\n                if (q > 1)\n                    back += DPA[q][mod];\n                else\n                    break;\n                mod = nxt[q][mod];\n                q -= 2;\n            }\n            reverse(back.begin(), back.end());\n            string ans = front + back;\n            return ans;\n        }\n        return \"\";\n    }\n};",
    "submit_ts": "1723953287",
    "subm_id": "1359817285"
}