{
    "username": "akshaykumargupta0409",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        const int MOD = 1e9 + 7;\n        // dp[i][j][k] means the number of ways to form arrays up to index i with arr1[i] = j and arr2[i] = k\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(51, vector<int>(51, 0)));\n\n        // Initialize the dp array for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            int k = nums[0] - j;\n            if (k >= 0 && k <= 50) {\n                dp[0][j][k] = 1;\n            }\n        }\n\n        // Fill the dp table\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= 50; ++j) {\n                for (int k = 0; k <= 50; ++k) {\n                    if (dp[i-1][j][k] > 0) {\n                        for (int nj = j; nj <= nums[i]; ++nj) {\n                            int nk = nums[i] - nj;\n                            if (nk >= 0 && nk <= k) {\n                                dp[i][nj][nk] = (dp[i][nj][nk] + dp[i-1][j][k]) % MOD;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // Sum up all valid configurations for the last element\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            for (int k = 0; k <= 50; ++k) {\n                result = (result + dp[n-1][j][k]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723347091",
    "subm_id": "1351591670"
}