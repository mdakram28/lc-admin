{
    "username": "ding-fei-5",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def do(x, y):\n            # print(x,y)\n            if x:\n                while y <= n:\n                    has[y] += x\n                    y += y & (-y)\n        def get(x):\n            tep = 0\n            while x:\n                tep += has[x]\n                x -= x & (-x)\n            return tep\n        lis = [float(\"inf\"), float(\"inf\")] + nums + [float(\"inf\"), float(\"inf\")]\n        ans = []\n        n = len(lis)\n        has = [0] * (n + 1)\n        for i in range(1,n-1):\n            if lis[i] > max(lis[i-1], lis[i+1]):\n                \n                # print(lis,i)\n                do(1, i)\n        # print(has)\n\n        for i,j,k in queries:\n            if i == 1:\n                if j >= k - 1:\n                    ans.append(0)\n                else:\n                    ans.append(get(k+1)-get(j+2))\n            else:\n                j += 2\n                v = lis[j]\n                lis[j] = k\n                # print(lis[j-1], lis[j])\n                q = (lis[j-1] > lis[j-2] and lis[j-1] > lis[j]) - (lis[j-1] > lis[j-2] and lis[j-1] > v)\n                do(q, j-1)\n                q = (lis[j] > lis[j-1] and lis[j] > lis[j+1]) - (v > lis[j-1] and v > lis[j+1])\n                do(q,j)\n                q = (lis[j+1] > lis[j] and lis[j+1] > lis[j+2]) - (lis[j+1] > v and lis[j+1] > lis[j+2])\n                do(q,j+1)\n        # print(has, lis)\n\n        return ans\n\n",
    "submit_ts": "1718507151",
    "subm_id": "539779585"
}