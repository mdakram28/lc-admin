{
    "username": "sykobeli",
    "submission": "class Solution:\n    \n    def MaxDist(self, A, skip):\n        # List to store maximum and\n        # minimum of all the four forms\n        V = []\n        V1 = []\n\n        for i in range(len(A)):\n            if i == skip:\n                continue\n            V.append((A[i][0] + A[i][1], i))\n            V1.append((A[i][0] - A[i][1], i))\n\n        # Sorting both the vectors\n        V.sort()\n        V1.sort()\n        \n        if V[-1][0] - V[0][0] > V1[-1][0] - V1[0][0]:\n            return V[-1][0] - V[0][0], V[-1][1], V[0][1]\n        return V1[-1][0] - V1[0][0], V1[-1][1], V1[0][1]\n\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        dist, p1, p2 = self.MaxDist(points, -1)\n        d1, p3, p4 = self.MaxDist(points, p1)\n        d2, p5, p6 = self.MaxDist(points, p2)\n        return min(d1, d2)"
}