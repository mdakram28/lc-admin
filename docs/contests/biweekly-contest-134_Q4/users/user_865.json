{
    "username": "Jay_1410",
    "submission": "class Solution {\npublic:\n    vector<int> tree;\n\n    int build(int node , int low , int high , vector<int> &nums){\n        if(low == high) return tree[node] = nums[low];\n        int mid = (low + high) >> 1;\n        return tree[node] = build(node << 1 , low , mid , nums) & build(node << 1 | 1 , mid + 1 , high , nums);\n    }\n\n    int bitwiseAnd(int node , int low , int high , int ql , int qr){\n        if(high < ql || low > qr) return (1LL << 31) - 1;\n        if(low >= ql && high <= qr) return tree[node];\n        int mid = (low + high) >> 1;\n        return bitwiseAnd(node << 1 , low , mid , ql , qr) & bitwiseAnd(node << 1 | 1 , mid + 1 , high , ql , qr);\n    }\n    using ll = long long;\n    long long countSubarrays(vector<int>& nums , int k){\n        int N = nums.size();\n\n        tree.resize(N << 2 | 1);\n        build(1 , 0 , N - 1 , nums);\n        \n        ll ans = 0;\n        \n        for(int L = 0 ; L < N ; L++){\n            int end1 = -1 , end2 = -1;\n            int low = L , high = N - 1;\n            while(low <= high){\n\n                int mid = (low + high) >> 1;\n                int v = bitwiseAnd(1 , 0 , N - 1 , L , mid);\n\n\n                if(v == k){\n                    end1 = mid;\n                    high = mid - 1;\n                }\n\n                else if(v < k){\n                    high = mid - 1;\n                }\n                else{\n                    low = mid + 1;\n                }\n            }\n            low = L , high = N - 1;\n            while(low <= high){\n                int mid = (low + high) >> 1;\n                int v = bitwiseAnd(1 , 0 , N - 1 , L , mid);\n                if(v == k){\n                    end2 = mid;\n                    low = mid + 1;\n                }\n                else if(v < k){\n                    high = mid - 1;\n                }\n                else{\n                    low = mid + 1;\n                }\n            }\n            if(end1 != -1) ans += (end2 - end1 + 1);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720279109",
    "subm_id": "1311737798"
}