{
    "username": "Proelectro444",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        map<int, int> d;\n        for (int i = 0; i < nums.size(); i++)\n        {\n            if (d.find(nums[i]) == d.end())\n                d[nums[i]] = d.size();\n            nums[i] = d[nums[i]];\n        }\n        vector<vector<int>> dp(nums.size() + 1, vector<int>(k + 1, 0));\n        vector<int> maxrow(k + 1, 0);\n        for (int e : nums)\n        {\n            // vector<int> nrow = dp[e];\n            for (int galtiya = k; galtiya > 0; galtiya--)\n            {\n                dp[e][galtiya] = max(dp[e][galtiya] + 1, maxrow[galtiya - 1] + 1);\n                maxrow[galtiya] = max(maxrow[galtiya], dp[e][galtiya]);\n            }\n            dp[e][0]++;\n            maxrow[0] = max(maxrow[0], dp[e][0]);\n        }\n        int ans = 0;\n        for (vector<int> row : dp)\n            ans = max(ans, *max_element(row.begin(), row.end()));\n        return ans;      \n    }\n};\n\n// Input: nums = [1,2,1,1,3], k = 2\n\n// Output: 4\n\n// Explanation:\n\n// The maximum length subsequence is [1,2,1,1,3]\n\n// int main() {\n//     Solution s;\n//     vector<int> nums = {1,2,1,1,3};\n//     int k = 2;\n//     cout << s.maximumLength(nums, k) << endl;\n//     return 0;\n// }",
    "submit_ts": 1717861395.0
}