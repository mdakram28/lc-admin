{
    "username": "Vr_7",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int i = 0, count = 0, curr_col = colors[0], curr_cnt = 1;\n        int pos = 1;\n        set <pair <int, int>> st;\n        while (pos < 2 * n) {\n            int j = pos % n;\n            if (colors[j] == curr_col ^ 1) {\n                curr_cnt++;\n                curr_col ^= 1;\n            } else {\n                i = j;\n                curr_cnt = 1;\n                curr_col = colors[j];\n            }\n            while (curr_cnt > k) {\n                curr_cnt--;\n                i++;\n            }\n            if (curr_cnt == k) {\n                st.insert({i % n, j});\n            }\n            pos++;\n        }\n        // for (auto it : st) {\n        //     cout << it.first << \" \" << it.second << endl;\n        // }\n        return st.size();\n    }\n};",
    "submit_ts": "1720277240",
    "subm_id": "1311654371"
}