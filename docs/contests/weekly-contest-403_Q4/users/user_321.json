{
    "username": "Yunchuan",
    "submission": "class Solution {\npublic:\n    int minimumArea(int i_start, int i_end, int j_start, int j_end, vector<vector<int>>& grid) {\n        int up = i_end, down = i_start, left = j_end, right = j_start, found = 0;\n        for(int i = i_start;i<=i_end;i++){\n            for(int j = j_start;j<=j_end;j++){\n                if(grid[i][j] == 1){\n                    up = min(i, up);\n                    down = max(i, down);\n                    left = min(left, j);\n                    right = max(right, j);\n                    found = 1;\n                }\n            }\n        }\n        if(found == 0)\n            return 1;\n        // int out = 1;\n        \n        return (down-up+1)*(1+right-left);\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), out = INT_MAX;\n        if(m<=2 && n<=2){\n            int tmp = 0;\n            for(int i = 0;i<m;i++){\n                for(int j = 0;j<n;j++){\n                    tmp += grid[i][j];\n                }\n            }\n            return tmp;\n        }\n        // two horizontals\n        for(int i = 0;i<m-2;i++){\n            for(int j = i+1;j<m-1;j++){\n                int a = minimumArea(0, i, 0, n-1, grid), b = minimumArea(i+1, j, 0, n-1, grid), c = minimumArea(j+1, m-1, 0, n-1, grid);\n                // cout<<a<<b<<c<<endl;\n                out = min(out, a+b+c);\n            }\n        }\n        // two verticals\n        for(int i = 0;i<n-2;i++){\n            for(int j = i+1;j<n-1;j++){\n                int a = minimumArea(0, m-1, 0, i, grid), b = minimumArea(0, m-1, i+1, j, grid), c = minimumArea(0, m-1, j+1, n-1, grid);\n                // cout<<a<<b<<c<<endl;\n                out = min(out, a+b+c);\n            }\n        }\n        // one horizontal and then one vertical down\n        for(int i = 0;i<m-1;i++){\n            for(int j = 0;j<n-1;j++){\n                int a = minimumArea(0, i, 0, n-1, grid), b = minimumArea(i+1, m-1, 0, j, grid), c = minimumArea(i+1, m-1, j+1, n-1, grid);\n                out = min(out, a+b+c);\n                \n                a = minimumArea(0, i, 0, j, grid), b = minimumArea(0, i, j+1, n-1, grid), c = minimumArea(i+1, m-1, 0, n-1, grid);\n                out = min(out, a+b+c);\n                \n                a = minimumArea(0, i, 0, j, grid), b = minimumArea(i+1, m-1, 0, j, grid), c = minimumArea(0, m-1, j, n-1, grid);\n                out = min(out, a+b+c);\n                \n                a = minimumArea(0, m-1, 0, j, grid), b = minimumArea(0, i, j+1, n-1, grid), c = minimumArea(i+1, m-1, j+1, n-1, grid);\n                out = min(out, a+b+c);\n            }\n        }\n        return out;\n    }\n};",
    "submit_ts": 1719114057.0
}