{
    "username": "Adi007",
    "submission": "class Solution {\npublic:\n    typedef long long int ll;\n    ll M = 1e9 + 7;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& v) {\n        \n        \n        int res = 400;\n        \n        unordered_map<int, int> cnt;\n        for(int i = 0; i < v.size(); i++) {\n            cnt[v[i][0] + 1] = v[i][1];\n        }\n        \n        vector<vector<ll>> vec(n + 1, vector<ll> (res + 1, 0));\n        vec[0][0] = 1;\n        \n        for(int i = 1; i <= n; i++) {\n            for(int j = 0; j <= res; j++) {\n                for(int k = 0; k < i; k++) {\n                    int p = j - k;\n                    if(p >= 0) {\n                        vec[i][j] = (vec[i][j] % M + vec[i - 1][p] % M) % M;\n                    }\n                }\n            }\n            \n            if(cnt.count(i)) {\n                int z = cnt[i];\n                for(int j = 0; j <= res; j++) {\n                    if(j != z) {\n                        vec[i][j] = 0;\n                    }\n                }\n            }\n        }\n        \n        ll ans = 0;\n        \n        for(int i = 0; i < vec[n].size(); i++) {\n            ans = (ans % M + vec[n][i] % M) % M;\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1719071544.0
}