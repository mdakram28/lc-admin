{
    "username": "felixhuang07",
    "submission": "template<class S>\nstruct fenwick {\npublic:\n\tfenwick() : n(0) {}\n\texplicit fenwick(int _n) : n(_n), data(_n) {}\n\n\tvoid add(int p, S x) {\n\t\tfor(int i = p + 1; i <= n; i += i & -i) {\n\t\t\tdata[i - 1] += x;\n\t\t}\n\t}\n\n\t// [0, p)\n\tS get(int p) const {\n\t\tauto ans = S();\n\t\tfor(int i = p; i > 0; i -= i & -i) {\n\t\t\tans += data[i - 1];\n\t\t}\n\t\treturn ans;\n\t}\n\n\t// [l, r)\n\tS sum(int l, int r) const { return get(r) - get(l); }\n\n\t// 0-based\n\tint kth(S k) const {\n\t\tint x = 0;\n\t\tfor(int i = 1 << std::__lg(n); i > 0; i >>= 1) {\n\t\t\tif (x + i <= n && k >= data[x + i - 1]) {\n\t\t\t\tx += i;\n\t\t\t\tk -= data[x - 1];\n\t\t\t}\n\t\t}\n\t\treturn x;\n\t}\n\nprivate:\n\tint n;\n\tstd::vector<S> data;\n};\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        auto a = colors;\n        for(int i = 0; i < k - 1; i++) {\n            a.push_back(a[i]);\n        }\n        int n = a.size();\n        fenwick<int> fenw(n);\n        for(int i = 0; i < n - 1; i++) {\n            if(a[i] != a[i+1]) {\n                fenw.add(i, +1);\n            }\n        }\n        int ans = 0;\n        for(int i = k - 2; i < n; i++) {\n            int l = i - (k - 2);\n            if(fenw.sum(l, i + 1) == k - 1) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276499",
    "subm_id": "1311618451"
}