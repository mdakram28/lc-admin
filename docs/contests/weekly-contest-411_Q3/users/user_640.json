{
    "username": "Gary Yao",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in [1,3,9]:\n            s = ''\n            for i in range(n):\n                s = s + \"9\"\n            return s\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            else:\n                s = \"\"\n                for i in range(n - 2):\n                    s = s + \"9\"\n                s = \"8\" + s + \"8\"\n                return s\n\n        if k == 4:\n            if n == 1:\n                return \"8\"\n            elif n == 2:\n                return \"88\"\n            elif n == 3:\n                return \"888\"\n            else:\n                s = \"\"\n                for i in range(n - 4):\n                    s = s + \"9\"\n                s = \"88\" + s + \"88\"\n                return s\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            if n == 2:\n                return \"55\"\n            else:\n                s = \"\"\n                for i in range(n-2):\n                    s = s + \"9\"\n                s = \"5\" + s + \"5\"\n                return s\n        \n\n        if k == 6:\n            if n == 1:\n                return '6'\n\n            if n == 2:\n                return '66'\n            \n            else:\n                if n % 2 == 0:\n                    run_sum = 16 + 9*(n-4)\n                    for i in range(9,0,-1):\n                        if (run_sum + i*11) % 3 == 0:\n                            s = \"{}{}\".format(i,i)\n                            for i in range(n//2 - 2):\n                                s = \"9\" + s + \"9\"\n                            s = \"8\" + s + \"8\"\n                            return s\n                else:\n                    run_sum = 16 + 9*(n-3)\n                    for i in range(9,0,-1):\n                        if (run_sum + i) % 3 == 0:\n                            s = \"{}\".format(i)\n                            for i in range(n//2 - 1):\n                                s = \"9\" + s + \"9\"\n                            s = \"8\" + s + \"8\"\n                            return s\n\n        if k == 8:\n            s = ''\n            if n <= 6:\n                for i in range(n):\n                    s = s + \"8\"\n            else:\n                for i in range(n - 6):\n                    s = s + \"9\"\n                for i in range(3):\n                    s = \"8\" + s + \"8\"\n            return s\n        \n        def is_divisible_by_7(s: str) -> bool:\n            remainder = 0\n            \n            for digit in s:\n                # Update the remainder\n                remainder = (remainder * 10 + int(digit)) % 7\n            \n            # If remainder is 0, the number is divisible by 7\n            return remainder == 0\n        if k == 7:\n            if n == 1:\n                return \"7\"\n            if n == 2:\n                return \"77\"\n            else:\n                if n % 2 == 1:\n                    s = \"\"\n                    for i in range(n//2):\n                        s = s + \"9\"\n                    for j in range(9,0,-1):\n                        check_string = s + \"{}\".format(j) + s\n                        if is_divisible_by_7(check_string):\n                            return check_string\n                \n                else:\n                    s = \"\"\n                    for i in range(n//2 - 1):\n                        s = s + \"9\"\n                    for j in range(9,0,-1):\n                        check_string = s + \"{}{}\".format(j,j) + s\n                       # print(check_string)\n                        if is_divisible_by_7(check_string):\n                            return check_string\n                \n\n\n\n            \n",
    "submit_ts": "1723951785",
    "subm_id": "1359779990"
}