{
    "username": "choudhary463",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n    vector<int>a=nums;\n    int n=a.size();\n    const int INF=-1e9;\n    vector<vector<int>>dp(n,vector<int>(k+1,INF));\n    vector<unordered_map<int,int>>mp(k+1);\n    vector<set<pair<int,int>>>s(k+1);\n    for(int i=0;i<n;i++){\n        vector<int>ne(k+1,-1);\n        for(int j=0;j<=k;j++){\n            if(1){\n                auto it=mp[j].find(a[i]);\n                if(it!=mp[j].end()){\n                    int f=it->second;\n                    auto itt=s[j].find({f,a[i]});\n                    ne[j]=max(ne[j], f+1);\n                }\n                else{\n                    if(j==0){\n                        ne[0]=max(ne[0],1);\n                    }\n                }\n            }\n            if(j){\n                auto it=mp[j-1].find(a[i]);\n                int wut=-1;\n                if(it!=mp[j-1].end()){\n                    auto itt=s[j-1].find({it->second,a[i]});\n                    s[j-1].erase(itt);\n                    if(s[j-1].size()){\n                        wut=s[j-1].rbegin()->first+1;\n                    }\n                    s[j-1].insert({it->second,a[i]});\n\n                } else {\n                    if(s[j-1].size()){\n                        wut=s[j-1].rbegin()->first+1;\n                    }\n                }\n                if(wut!=-1){\n                    ne[j]=max(ne[j],wut);\n                }\n            }\n        }\n        for(int j=0;j<=k;j++){\n            if(ne[j]==-1) continue;\n            pair<int,int>p={a[i],ne[j]};\n            auto it=mp[j].find(p.first);\n            if(it!=mp[j].end()){\n                int a=it->first;\n                int b=it->second;\n                if(p.second>b){\n                    mp[j].erase(it);\n                    s[j].erase({b,a});\n                    mp[j].insert({a,p.second});\n                    s[j].insert({p.second,a});\n                }\n            }\n            else{\n                mp[j].insert(p);\n                s[j].insert({p.second,p.first});\n            }\n        }\n    }\n    int ans=0;\n    for(int i=0;i<=k;i++){\n        for(auto p:mp[i]){\n            ans=max(ans,p.second);\n        }\n    }\n    return ans;\n}\n};",
    "submit_ts": 1717862259.0
}