{
    "username": "tarche",
    "submission": "const int INF = 1e9;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> v;\n        for (auto x : points) {\n            v.emplace_back(x[0] + x[1], x[0] - x[1]);\n        }\n        \n        vector<pair<int, int>> byX, byY;\n        for (int i = 0; i < (int)(v.size()); i++) {\n            byX.push_back({v[i].first, i});\n            byY.push_back({v[i].second, i});\n        }\n        \n        sort(byX.begin(), byX.end());\n        sort(byY.begin(), byY.end());\n        \n        int n = (int)(v.size());\n        int ans = min({\n            max(byX[n - 2].first - byX[0].first, byY[n - 1].first - byY[0].first),\n            max(byX[n - 1].first - byX[1].first, byY[n - 1].first - byY[0].first),\n            max(byX[n - 1].first - byX[0].first, byY[n - 2].first - byY[0].first),\n            max(byX[n - 1].first - byX[0].first, byY[n - 1].first - byY[1].first)\n        });\n        \n        if (byX[0].second == byY[0].second) ans = min(ans, max(byX[n - 1].first - byX[1].first, byY[n - 1].first - byY[1].first));\n        if (byX[0].second == byY[n - 1].second) ans = min(ans, max(byX[n - 1].first - byX[1].first, byY[n - 2].first - byY[0].first));\n        if (byX[n - 1].second == byY[0].second) ans = min(ans, max(byX[n - 2].first - byX[0].first, byY[n - 1].first - byY[1].first));\n        if (byX[n - 1].second == byY[n - 1].second) ans = min(ans, max(byX[n - 2].first - byX[0].first, byY[n - 2].first - byY[0].first));\n        \n        return ans;\n    }\n};"
}