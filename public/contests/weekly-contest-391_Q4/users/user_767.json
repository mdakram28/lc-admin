{
    "username": "pavanareti02",
    "submission": "#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n#define ins insert\n#define ull unsigned long long\n#define rep(i, begin, end) for (__typeof(begin) i = (begin); i <= (end); ++i)\n#define repr(i, begin, end) for (__typeof(end) i = (begin); i >= (end); --i)\n#define ff first\n#define ss second\n#define fast ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n#define nl \"\\n\"\n#define sz(a) (int)(a).size()\n#define all(a) (a).begin(), (a).end()\n#define fl(a,x) memset(a, x, sizeof(a));\n#define present(c, x) (c.find(x) != c.end())\n#define get(a, begin, end) rep(i, (begin), (end)) cin >> (a)[i];\n#define show(a, begin, end) rep(i, (begin), (end)) cout << (a)[i] << \" \"; cout << nl;\n#define ld long double\n#define vec vector\n\n\n\ntypedef long long int lli;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpi;\ntypedef unordered_map<int,int> umi;\ntypedef map<int,int> mi;\ntypedef unordered_set<int> usi;\ntypedef set<int> si;\n\n\nint mod = 1e9+7;\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = sz(p);\n        vector<lli> sum(n,0);\n        vector<lli> diff(n,0);\n        \n        for(int i=0;i<n;i++){\n            sum[i] = p[i][0]+p[i][1];\n        }\n        for(int i=0;i<n;i++){\n            diff[i] = p[i][0]-p[i][1];\n        }\n        \n        // sort(all(sum));\n        // sort(all(diff));\n        \n        priority_queue<pii,vector<pii>,greater<>> sum_l,diff_l;\n        priority_queue<pii> sum_g,diff_g;\n        \n        for(int i=0;i<n;i++){\n            sum_l.push({sum[i],i});\n            sum_g.push({sum[i],i});\n            diff_l.push({diff[i],i});\n            diff_g.push({diff[i],i});\n        }\n        \n        lli ans =INT_MAX;\n        for(int i=0;i<n;i++){\n            vector<int> slv,sgv,dlv,dgv;\n            auto sl = sum_l.top();\n            if(sl.second==i){\n                sum_l.pop();\n                slv.pb(sl.first);\n                sl = sum_l.top();\n            }\n            \n            auto sg = sum_g.top();\n            if(sg.second==i){\n                sum_g.pop();\n                sgv.pb(sg.first);\n                sg = sum_g.top();\n            }\n            \n            auto dl = diff_l.top();\n            if(dl.second==i){\n                diff_l.pop();\n                dlv.pb(dl.first);\n                dl = diff_l.top();\n            }\n            \n            auto dg = diff_g.top();\n            if(dg.second==i){\n                diff_g.pop();\n                dgv.pb(dg.first);\n                dg = diff_g.top();\n            }\n            \n            ans = min(ans,(lli)max(sg.first-sl.first,dg.first-dl.first));\n            if(slv.size()){\n                sum_l.push({slv[0],i});\n            }\n            if(sgv.size()){\n                sum_g.push({sgv[0],i});\n            }\n            if(dlv.size()){\n                diff_l.push({dlv[0],i});\n            }\n            if(dgv.size()){\n                diff_g.push({dgv[0],i});\n            }\n        }\n        return ans;\n    }\n};"
}