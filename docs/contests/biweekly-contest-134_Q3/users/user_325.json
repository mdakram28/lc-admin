{
    "username": "yu-hou-qing-shan-z",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        colors = colors + colors\n        candi0 = [0, 1] * (k // 2) + [0] * (k % 2)\n        candi1 = [1, 0] * (k // 2) + [1] * (k % 2)\n\n        P = 131\n        mx = 2 * n\n        mod = 10 ** 18 + 3\n        muls = [1] * (mx + 1)  # \u5f97\u5230P\u7684\u5e42\u6570\u7ec4(\u5bf9mod\u53d6\u6a21)\u3002\u5982muls[3] = P ** 3\n        for i in range(1, mx + 1):\n            muls[i] = muls[i - 1] * P % mod\n\n        def f(s):  # \u8ba1\u7b97\u5b57\u7b26\u4e32s\u7684\u503c\u6570\u7ec4\uff0c\u7c7b\u4f3c \u201812678\u2019 \u5bf9\u5e94[0, 1, 12, 126, 1267, 12678]\uff0c\u6700\u524d\u9762\u8865\u96f6\u65b9\u4fbf\n            res = [0]\n            tmp = 0\n            for ch in s:\n                tmp = (tmp * P + ch + 1) % mod\n                res.append(tmp)\n            return res\n\n        def get_str_val(l, r, vals):  # \u8ba1\u7b97\u67d0\u4e2a\u5b57\u7b26\u4e32[l, r]\u5bf9\u5e94\u6570\u503c\n            return (vals[r + 1] - vals[l] * muls[r - l + 1]) % mod  # \u5b57\u7b26\u4e32\u4ece\u7b2c0\u4f4d\u5f00\u59cb\u7b97\n\n        vals = f(colors)\n        tmp0, tmp1 = f(candi0)[-1], f(candi1)[-1]\n        ans = 0\n        for i in range(n):\n            if get_str_val(i, i + k - 1, vals) in [tmp0, tmp1]:\n                ans += 1\n        return ans",
    "submit_ts": "1720278830",
    "subm_id": "544564593"
}