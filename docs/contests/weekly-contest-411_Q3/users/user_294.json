{
    "username": "Chengyu Wu",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        \n        if n == 1:\n            ans = [None,'9','8','9','8','5','6','7','8','9']\n            return ans[k]\n        \n        q,r = divmod(n,2)\n        if k in [1,3,9]: return '9'*n\n        elif k == 5:\n            return '5' + '9'*(n - 2) + '5'\n        elif k == 8:\n            if n < 6: return '8'*n\n            else: return '888' + '9'*(n - 6) + '888'\n        elif k == 4:\n            if n < 4: return '8'*n\n            else: return '88' + '9'*(n - 4) + '88'\n        elif k == 2:\n            return '8' + '9'*(n - 2) + '8'\n        elif k == 6:\n            if r == 1:\n                return '8' + '9'*(q - 1) + '8' + '9'*(q - 1) + '8'\n            elif n == 2:\n                return '66'\n            else:\n                return '8' + '9'*(q - 2) + '77' + '9'*(q - 2) + '8'\n\n        \n        def helper(h1, m):\n            nonlocal q,k\n            rem0, rem1, p = 0, 0, 1\n            for x in h1:\n                rem0 = (rem0*10 + x) % k\n                rem1 = (rem1 + x*p) % k\n                p = (p*10) % k\n            if m is not None:\n                rem0 = (rem0*10 + m) % k\n            ans = (rem0*p + rem1) % k\n            return ans\n        \n        def decrement(h1, m):\n            nonlocal q\n            if m is not None and m > 0: return (h1, m - 1)\n            for i in reversed(range(q)):\n                if h1[i] > 0:\n                    h1[i] -= 1\n                    break\n                else: h1[i] = 9\n            if m is not None: return (h1, 9)\n            else: return (h1, None)\n        \n        h1 = [9]*q\n        m = None if r == 0 else 9\n        while helper(h1, m) != 0:\n            h1, m = decrement(h1, m)\n        if r == 1:\n            ans = h1 + [m] + h1[::-1]\n        else:\n            ans = h1 + h1[::-1]\n        return ''.join([str(x) for x in ans])",
    "submit_ts": "1723951846",
    "subm_id": "1359781465"
}