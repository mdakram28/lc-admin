{
    "username": "JeffreyLC",
    "submission": "class Solution {\npublic:\n    int maxTotalReward(vector<int>& rewardValues) {\n        set<int> s(rewardValues.begin(), rewardValues.end());\n        rewardValues.clear();\n        for (int num : s) {\n            rewardValues.push_back(num);\n        }\n        const int n = rewardValues.size();\n        if (n == 1) return rewardValues[0];\n        bitset<100001> ones, total;\n        total.set(0);\n        int last_set = -1;\n        for (int i = 0; i < n; ++i) {\n            while (last_set + 1 < rewardValues[i]) {\n                ones.set(++last_set);\n            }\n            total |= ((total & ones) << rewardValues[i]);\n        }\n        for (int i = rewardValues[n - 1] * 2 - 1; i > rewardValues[n - 1] + rewardValues[n - 2]; --i) {\n            if (total.test(i)) return i;\n        }\n        return rewardValues[n - 1] + rewardValues[n - 2];\n    }\n};",
    "submit_ts": "1717903854",
    "subm_id": "1282345514"
}