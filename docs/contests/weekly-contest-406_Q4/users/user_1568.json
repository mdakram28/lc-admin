{
    "username": "KRKanakad",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> v;\n        ll  hor = 1, ver = 1;\n        ll ans = 0;\n        for (int i = 0; i < m-1; i++)\n            v.push_back({horizontalCut[i], 0});\n        for (int i = 0; i < n-1; i++)\n            v.push_back({verticalCut[i], 1});\n\n        sort(v.rbegin(), v.rend());\n        // for(auto it:v)\n        // cout<<it.first<<\" \"<<it.second<<endl;\n        for (auto it : v) {\n            if (it.second == 1) {\n                ans += ((ll)it.first * hor);\n                ver++;\n            } else { \n                ans += ((ll)it.first * ver);\n                hor++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926034",
    "subm_id": "1320273953"
}