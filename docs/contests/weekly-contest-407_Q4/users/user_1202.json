{
    "username": "fengsuiyan",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntemplate <class T> void mini(T &l, T r) { l = min(l, r); }\ntemplate <class T> void maxi(T &l, T r) { l = max(l, r); }\n\nstring to_string(string s) { return '\"' + s + '\"'; }\n\nstring to_string(bool a) { return a ? \"T\" : \"F\"; }\n\nstring to_string(const char *s) { return to_string((string)s); }\n\ntemplate <typename A, typename B> string to_string(pair<A, B> p) {\n  return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n}\n\ntemplate <typename A> string to_string(A v) {\n  bool first = true;\n  string res = \"{\";\n  for (const auto &x : v) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    res += to_string(x);\n  }\n  res += \"}\";\n  return res;\n}\n\nvoid debug_out() { cout << endl; }\n\ntemplate <typename Head, typename... Tail> void debug_out(Head H, Tail... T) {\n  cout << \" \" << to_string(H);\n  debug_out(T...);\n}\n\n#ifdef LOCAL\n#define debug(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define debug(...) 42\n#endif\n\n#define X first\n#define Y second\n\nusing ll = long long;\nusing ld = long double;\n\nstruct dsu {\n  vector<size_t> pa, size, sum, mx;\n\n  explicit dsu(size_t size_)\n      : pa(size_ * 2), size(size_ * 2, 1), sum(size_ * 2) {\n    // size \u4e0e sum \u7684\u524d\u534a\u6bb5\u5176\u5b9e\u6ca1\u6709\u4f7f\u7528\uff0c\u53ea\u662f\u4e3a\u4e86\u8ba9\u4e0b\u6807\u8ba1\u7b97\u66f4\u7b80\u5355\n    iota(pa.begin(), pa.begin() + size_, size_);\n    iota(pa.begin() + size_, pa.end(), size_);\n    iota(sum.begin() + size_, sum.end(), 0);\n    iota(mx.begin() + size_, mx.end(), 0);\n  }\n\n  void unite(size_t x, size_t y) {\n    x = find(x), y = find(y);\n    if (x == y) return;\n    if (size[x] < size[y]) swap(x, y);\n    pa[y] = x;\n    size[x] += size[y];\n    sum[x] += sum[y];\n    mx[x] = max(mx[x], mx[y]);\n  }\n\n  size_t find(size_t x) { return pa[x] == x ? x : pa[x] = find(pa[x]); }\n};\n\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> delta(nums.size());\n        for (int i = 0; i < nums.size(); ++i) {\n            delta[i] = target[i] - nums[i];\n        }\n        long long ret = 0;\n        {\n            ll last = 0;\n            for (int i = 0; i < delta.size(); ++i) {\n                if (delta[i] > 0) {\n                    if (delta[i] > last) {\n                        ret += delta[i] - last;\n                    }\n                }\n                last = max(0, delta[i]);\n            }\n        }\n        debug(ret);\n        for (int i = 0; i < delta.size(); ++i) {\n            delta[i] = -delta[i];\n        }\n        {\n            ll last = 0;\n            for (int i = 0; i < delta.size(); ++i) {\n                if (delta[i] > 0) {\n                    if (delta[i] > last) {\n                        ret += delta[i] - last;\n                    }\n                }\n                last = max(0, delta[i]);\n            }\n        }\n        return ret;\n\n    }\n};",
    "submit_ts": "1721532838",
    "subm_id": "1327995226"
}