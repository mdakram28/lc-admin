{
    "username": "ninado_dante",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int nn, int[][] queries) {\n        int q = queries.length;\n        int[] res = new int[q];\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        int sum = 0;\n        int n = nn - 1;\n        for(int i = 0; i < queries.length; i++){\n            if(n - sum == 1){\n                res[i] = 1;\n                continue;\n            }\n            int x = queries[i][0], y = queries[i][1];\n            if(x >= y){\n                res[i] = n - sum;\n                //System.out.println(1 + \" \" + res[i]);\n            }else{\n                var e = map.ceilingEntry(y);\n                var e2 = map.floorEntry(y);\n                if(e == null){\n                    for(var t = map.higherEntry(x); t != null && t.getKey() <= y && t.getValue() >= x; t = map.higherEntry(x)){\n                                sum -= t.getKey() - t.getValue() - 1;\n                                map.remove(t.getKey());\n                            }\n                            //System.out.println(1);\n                            sum += y - x - 1;\n                            map.put(y, x);\n                            res[i] = n - sum;\n                    //System.out.println(2 + \" \" + res[i]);\n                }else{\n                    int dx = e.getValue(), dy = e.getKey();\n                    if(dx >= y){\n                        for(var t = map.higherEntry(x); t != null && t.getKey() <= y && t.getValue() >= x; t = map.higherEntry(x)){\n                                sum -= t.getKey() - t.getValue() - 1;\n                                map.remove(t.getKey());\n                            }\n                            //System.out.println(1);\n                            sum += y - x - 1;\n                            map.put(y, x);\n                            res[i] = n - sum;\n                        // map.put(y, x);\n                        // sum += y - x - 1;\n                        // res[i] = n - sum;\n                        //System.out.println(3 + \" \" + res[i]);\n                    }else{\n                        if(dx <= x && dy >= y){\n                            res[i] = n - sum;\n                            //System.out.println(4 + \" \" + res[i]);\n                            continue;\n                        }else if(dx >= x){\n                            for(var t = map.higherEntry(x); t != null && t.getKey() <= y && t.getValue() >= x; t = map.higherEntry(x)){\n                                sum -= t.getKey() - t.getValue() - 1;\n                                map.remove(t.getKey());\n                            }\n                            //System.out.println(1);\n                            sum += y - x - 1;\n                            map.put(y, x);\n                            res[i] = n - sum;\n                            //System.out.println(5 + \" \" + res[i]);\n                        }\n                    }\n                }\n                \n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722743233",
    "subm_id": "552349598"
}