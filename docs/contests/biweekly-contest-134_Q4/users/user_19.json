{
    "username": "_kevinyang",
    "submission": "class Solution {\npublic:\n    struct Sparse{\n\tvector<int>logs;\n\tvector<vector<int>>dp;\n\tint ln;\n\tint size;\n\tvoid init(int n, vector<int>arr){\n\t\tsize = n;\n\t\tlogs.resize(n+1);\n\t\tdp.resize(n+1);\n\t\tln = 0;\n\t\tfor(int i = 1; i<=n; i*=2){\n\t\t\tlogs[i] = ln; ln++;\n\t\t}\n\t\tfor(int i = 1; i<=n; i++){\n\t\t\tdp[i].resize(ln+1);\n\t\t\tlogs[i] = max(logs[i],logs[i-1]);\n\t\t\tdp[i][0] = arr[i];\n\t\t}\n\t\tfor(int i = 1; i<=ln; i++){\n\t\t\tfor(int j = 1; j+(1<<i)-1<=n; j++){\n\t\t\t\tdp[j][i] = (dp[j][i-1]&dp[j+(1<<(i-1))][i-1]);\n\t\t\t}\n\t\t}\n\t}\n\tint query(int l, int r){\n\t\tint lg = logs[r-l+1];\n\t\treturn (dp[l][lg]&dp[r-(1<<lg)+1][lg]);\n\t}\n};\n    long long solve(int n, vector<int>a, int k){\n        Sparse sparse;\n        sparse.init(n,a);\n        long long ans = 0;\n        //c/out << sparse.query(1,3) << '\\n';\n        for(int i = 1; i<=n; i++){\n            int low = i-1; int high = n+1;\n            while(low + 1 < high){\n                int mid = (low+high)/2;\n                if(sparse.query(i,mid)>k){\n                    low = mid;\n                }\n                else{\n                    high = mid;\n                }\n            }\n            ans+=n+1-high;\n        }\n        return ans;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int>a(n+1);\n        for(int i = 1; i<=n; i++){\n            a[i] = nums[i-1];\n        }\n        //cout << solve(n,a,k) << ' ' << solve(n,a,k-1) << '\\n';\n        return solve(n,a,k)-solve(n,a,k-1);\n    }\n};",
    "submit_ts": "1720276982",
    "subm_id": "1311642174"
}