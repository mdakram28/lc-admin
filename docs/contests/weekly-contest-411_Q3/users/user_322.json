{
    "username": "DLon_",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        if (k == 1 || k == 3 || k == 9) {\n            return \"9\".repeat(n);\n        }\n        \n        if (k == 2) {\n            if (n == 1) \n                return \"8\";\n            if (n == 2)\n                return \"88\";\n            StringBuilder sb = new StringBuilder();\n            sb.append(8);\n            sb.append(\"9\".repeat(n - 2));\n            sb.append(8);\n            return sb.toString();\n        }\n        \n        if (k == 5) {\n            if (n == 1) \n                return \"5\";\n            if (n == 2)\n                return \"55\";\n            StringBuilder sb = new StringBuilder();\n            sb.append(5);\n            sb.append(\"9\".repeat(n - 2));\n            sb.append(5);\n            return sb.toString();\n        }\n        \n        if (k == 4) {\n            if (n <= 4) {\n                return \"8\".repeat(n);\n            }\n            StringBuilder sb = new StringBuilder();\n            sb.append(88);\n            sb.append(\"9\".repeat(n - 4));\n            sb.append(88);\n            return sb.toString();\n        }\n        \n        if (k == 6) {\n            if (n <= 2) \n                return \"6\".repeat(n);\n            if (n % 2 == 1) {\n                StringBuilder sb = new StringBuilder();\n                sb.append(8);\n                sb.append(\"9\".repeat((n - 3) / 2));\n                sb.append(8);\n                sb.append(\"9\".repeat((n - 3) / 2));\n                sb.append(8);\n                return sb.toString();\n            } else {\n                StringBuilder sb = new StringBuilder();\n                sb.append(8);\n                sb.append(\"9\".repeat((n - 4) / 2));\n                sb.append(77);\n                sb.append(\"9\".repeat((n - 4) / 2));\n                sb.append(8);\n                return sb.toString();\n            }\n        }\n        \n        if (k == 8) {\n            if (n <= 6) \n                return \"8\".repeat(n);\n            StringBuilder sb = new StringBuilder();\n            sb.append(888);\n            sb.append(\"9\".repeat(n - 6));\n            sb.append(888);\n            return sb.toString();\n        }\n        \n        if (k == 7) {\n            if (n >= 12) {\n                int surplus = n % 12;\n                int times = (n - surplus) / 2;\n                StringBuilder sb = new StringBuilder();\n                sb.append(\"9\".repeat(times));\n                sb.append(largestPalindrome(surplus, 7));\n                sb.append(\"9\".repeat(times));\n                return sb.toString();\n            } else {\n                if (n == 11) {\n                    return \"99999499999\";\n                } if (n == 10) {\n                    return \"9999449999\";\n                } if (n == 9) {\n                    return \"999969999\";\n                } if (n == 8) {\n                    return \"99944999\";\n                } if (n == 7) {\n                    return \"9994999\";\n                } if (n == 6) {\n                    return \"999999\";\n                } if (n == 5) {\n                    return \"99799\";\n                } if (n == 4) {\n                    return \"9779\";\n                } if (n == 3) {\n                    return \"959\";\n                } if (n == 2) {\n                    return \"77\";\n                } if (n == 1) {\n                    return \"7\";\n                } if (n == 0) {\n                    return \"\";\n                }\n            }\n        }\n        \n        \n        return null;\n    }\n}",
    "submit_ts": "1723951478",
    "subm_id": "1359772521"
}