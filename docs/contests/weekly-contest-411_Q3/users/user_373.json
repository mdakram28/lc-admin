{
    "username": "humbl_pi",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k==1:\n            return '9'*n\n        elif k==2:\n            if n ==1:\n                return '8'*n\n            return '8'+'9'*(n-2)+'8'\n        elif k==3:\n            return '9'*n\n        elif k==4:\n            if n<=4: return '8'*n\n            # elif n==3: return \n            else: return '88'+'9'*(n-4)+'88'\n        elif k==5:\n            if n==1: return '5'\n            else: return '5'+'9'*(n-2)+'5'\n        \n        elif k==6:\n            if n<=2: return '6'*n\n            elif n==3: return '888'\n            ## last digit even, digits sum to 3x\n            if n%2==0:\n                n9 = (n-4)//2\n                ans = '8'+'9'*n9+'7'\n                return ans+ans[::-1]\n            else:\n                n9 = (n-3)//2\n                return '8'+'9'*n9+'8'+'9'*n9+'8'\n        \n        elif k==7:\n            if n<=2: return '7'*n\n            if n%2==0:\n                diff = 11*10**((n-2)//2)\n            else: diff = 10**((n-1)//2)\n            modu = (10**n-1)%7\n            dig = 9\n            while modu != 0:\n                # print(dig,modu)\n                dig -= 1\n                modu = (modu-diff)%7\n                # print(dig,modu)\n            if n%2==0:\n                n9 = (n-2)//2\n                return '9'*n9+str(dig)*2+'9'*n9\n            else:\n                n9 = (n-1)//2\n                return '9'*n9+str(dig)+'9'*n9\n        \n        elif k==8:\n            if n<=6: return '8'*n\n            # elif n==3: return \n            else: return '888'+'9'*(n-6)+'888'\n        elif k==9:\n            return '9'*n\n        ",
    "submit_ts": "1723951475",
    "subm_id": "1359772442"
}