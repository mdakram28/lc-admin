{
    "username": "chuntinglinct",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        vector<pair<int, int>> plus_v, minus_v;\n        int n = p.size();\n        for(int i = 0; i < p.size(); i++){\n            plus_v.push_back({p[i][0] + p[i][1], i});\n            minus_v.push_back({p[i][0] - p[i][1], i});\n        }\n        sort(plus_v.begin(), plus_v.end());\n        sort(minus_v.begin(), minus_v.end());\n        /*\n        for(auto i : plus_v){\n            cout << i.first << \"  \";\n        }\n        cout << \"\\n\";\n        for(auto i : minus_v){\n            cout << i.first << \" \";\n        }\n        cout << \"\\n\";\n        */\n        vector<int> c;\n        if(plus_v[n - 1].first - plus_v[0].first > minus_v[n - 1].first - minus_v[0].first){\n            c.push_back(plus_v[n - 1].second);\n            c.push_back(plus_v[0].second);\n        }\n        else{\n            c.push_back(minus_v[n - 1].second);\n            c.push_back(minus_v[0].second);\n        }\n        int ans = INT_MAX;\n        for(auto i : c){\n            int p_l = 0, p_r = n - 1, m_l = 0, m_r = n - 1;\n            if(plus_v[p_l].second  == i){\n                p_l++;\n            }\n            if(plus_v[p_r].second == i){\n                p_r--;\n            }\n            if(minus_v[m_l].second == i){\n                m_l++;\n            }\n            if(minus_v[m_r].second == i){\n                m_r--;\n            }\n            ans = min(ans, max(plus_v[p_r].first - plus_v[p_l].first, minus_v[m_r].first - minus_v[m_l].first));\n        }\n        \n        \n        return ans;\n    }\n};"
}