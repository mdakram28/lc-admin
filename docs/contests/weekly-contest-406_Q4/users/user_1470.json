{
    "username": "coleworld223",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue <array <int, 2>> pq;\n        for (int i = 0; i < m - 1; i++) {\n            pq.push({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < n - 1; i++) {\n            pq.push({verticalCut[i], 1});\n        }\n        long long ans = 0;\n        long long c0 = 1, c1 = 1;\n        while(!pq.empty()) {\n            auto [x, y] = pq.top();\n            pq.pop();\n            if (y == 0) {\n                ans += (c1 * x);\n                c0++;\n            }\n            else {\n                ans += (c0 * x);\n                c1++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926257",
    "subm_id": "1320280726"
}