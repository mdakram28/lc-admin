{
    "username": "Nisarg Patel",
    "submission": "class Solution {\n    int m;\n    int n;\n    int len;\n\n    public long maximumValueSum(int[][] board) {\n        m = board.length;\n        n = board[0].length;\n        len = Math.min(2*(m+n)-3, m*n);\n        PriorityQueue<Cell> PQ = new PriorityQueue<>(len, (a,b) -> (int)(a.val-b.val));\n        for(int i=0;i<m;i++) {\n            for(int j=0;j<n;j++) {\n                if(PQ.size()<len) {\n                    PQ.offer(new Cell(board[i][j], i, j));\n                } else if(PQ.peek().val<board[i][j]) {\n                    PQ.poll();\n                    PQ.offer(new Cell(board[i][j], i, j));\n                }\n            }\n        }\n        //System.out.println(PQ);\n        Cell[] cell = new Cell[len];\n        for(int i=len-1;i>=0;i--) {\n            cell[i] = PQ.poll();\n        }\n        //print(cell);\n        long max = Long.MIN_VALUE;\n        for(int i=0;i<m+n-1;i++) {\n            for(int j=1;j<len-1;j++) {\n                for(int k=2;k<len;k++) {\n                    if(valid(cell[i], cell[j], cell[k])) {\n                        max = Math.max(max, cell[i].val+cell[j].val+cell[k].val);\n                    }\n                }\n            }\n        }\n        return max;\n    }\n\n\n    private boolean valid(Cell a, Cell b, Cell c) {\n        return (a.r!=b.r && b.r!=c.r && c.r!= a.r&&a.c!=b.c&&b.c!=c.c&&c.c!=a.c);\n    }\n\n    private void print(Cell[] cell) {\n        for(int i=0;i<cell.length;i++) {\n            System.out.println(\"(\"+cell[i].r+\",\"+cell[i].c+\"): \"+cell[i].val);\n        }\n    }\n}\n\nclass Cell {\n    long val;\n    int r;\n    int c;\n\n    public Cell(long val, int r, int c) {\n        this.val = val;\n        this.r = r;\n        this.c = c;\n    }\n}",
    "submit_ts": "1723909378",
    "subm_id": "1359190267"
}