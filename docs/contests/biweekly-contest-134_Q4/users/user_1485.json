{
    "username": "meisabhishekpatel",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         int n = nums.size();\n        ll count = 0;\n        \n        map<ll, ll> prev;\n\n        for (int i = 0; i < n; ++i) {\n            map<ll, ll> curr; \n            curr[nums[i]] = 1;\n            if (nums[i] == k) {\n                ++count;\n            }\n\n            for (auto it : prev) {\n                ll newan = (it.first & nums[i]);\n                curr[newan] += it.second;\n                if (newan == k) {\n                    count += it.second;\n                }\n            }\n            prev = curr;\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720279024",
    "subm_id": "1311734094"
}