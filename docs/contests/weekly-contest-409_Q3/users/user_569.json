{
    "username": "siyu618",
    "submission": "class Solution {\n   public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for (int i = 0; i < n; i++) {\n            map.put(i, i);\n        }\n        int[] ans = new int[queries.length];\n        for (int i = 0; i < queries.length; i++) {\n            int x = queries[i][0];\n            int y = queries[i][1];\n            do {\n                Map.Entry<Integer, Integer> entry = map.ceilingEntry(x + 1);\n                if (entry != null && entry.getKey() < y) {\n                    x = entry.getKey();\n                    map.remove(entry.getKey());\n                } else {\n                    break;\n                }\n            } while (true);\n            ans[i] = map.size() - 1;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722742326",
    "subm_id": "552343937"
}