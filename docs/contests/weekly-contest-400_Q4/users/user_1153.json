{
    "username": "shubhambhatt037",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> zeros(32, 0);\n        \n        auto subtract = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0)\n                    zeros[i] -= 1;\n            }\n        };\n        auto addition = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0)\n                    zeros[i] += 1;\n            }\n        };\n        auto evaluation = [&]() {\n            int res = 0;\n            for (int i = 0; i < 32; ++i) {\n                if (zeros[i] == 0) \n                    res ^= (1 << i);\n            }\n            return res;\n        };\n        \n        int i = 0;\n        int n = nums.size();\n        int result = INT_MAX;\n        \n        for (int j = 0; j < n; ++j) {\n            addition(nums[j]);\n            int x = evaluation();\n            result = min(result, abs(x - k));\n            while (i < j && x < k) {\n                subtract(nums[i]);\n                ++i;\n                x = evaluation();\n                result = min(result, abs(x - k));\n            }\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": 1717300692.0
}