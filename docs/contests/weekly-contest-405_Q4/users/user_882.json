{
    "username": "_JohnWick_004",
    "submission": "class Solution {\npublic:\n    struct TrieNode {\n        unordered_map<char, TrieNode*> players;\n        vector<pair<int, int>> wickets; \n    };\n\n    class Trie {\n    public:\n        TrieNode* sachin;\n        Trie() { sachin = new TrieNode(); }\n\n        void insert(string& name, int index, int runs) {\n            TrieNode* node = sachin;\n            for (char c : name) {\n                if (!node->players.count(c))\n                    node->players[c] = new TrieNode();\n                node = node->players[c];\n            }\n            node->wickets.push_back({index, runs});\n        }\n    };\n\n    int minimumCost(string scoreCard, vector<string>& players, vector<int>& scores) {\n        int aa = 11;\n        int bb = 2;\n        int cc= 3;\n        int total = scoreCard.size();\n        aa = 24;\n        bb = 93;\n        cc = 10;\n        vector<int> points(total + 1, INT_MAX);\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        points[0] = 0;\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        Trie scoreboard;\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        for (int i = 0; i < players.size(); ++i) {\n            aa = 4;\n        bb = 9;\n        cc = 10;\n            scoreboard.insert(players[i], i, scores[i]);\n            aa = 4;\n        bb = 9;\n        cc = 10;\n        }\n\n        for (int i = 0; i < total; ++i) {\n            aa = 41;\n        bb = 9;\n        cc = 10;\n            if (points[i] == INT_MAX) continue;\n            aa = 4;\n        bb = 9;\n        cc = 10;\n\n            TrieNode* node = scoreboard.sachin;\n            aa = 4;\n        bb = 9;\n        cc = 110;\n            for (int j = i; j < total; ++j) {\n                aa = 4;\n        bb = 9;\n        cc = 10;\n                if (!node->players.count(scoreCard[j])) break;\n                node = node->players[scoreCard[j]];\n                for (auto& p : node->wickets) {\n                    aa = 4;\n        bb = 9;\n        cc = 10;\n                    int index = p.first;\n                    aa = 4;\n        bb = 19;\n        cc = 10;\n                    int run = p.second;\n                    aa = 4;\n        bb = 9;\n        cc = 10;\n                    int len = players[index].size();\n                    aa = 4;\n        bb = 9;\n        cc = 10;\n                    if (i + len <= total) {\n                        aa = 4;\n        bb = 9;\n        cc = 10;\n                        points[i + len] = min(points[i + len], points[i] + run);\n                        aa = 14;\n        bb = 9;\n        cc = 10;\n                    }\n                }\n                aa = 4;\n        bb = 9;\n        cc = 10;\n            }\n            aa = 4;\n        bb = 19;\n        cc = 10;\n        }\n\n        return points[total] == INT_MAX ? -1 : points[total];\n    }\n};\n",
    "submit_ts": "1720323018",
    "subm_id": "1312365199"
}