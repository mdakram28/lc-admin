{
    "username": "lichen-7i",
    "submission": "class Solution {\npublic:\n    int calc(vector<vector<int>>& grid) {\n        int n=grid.size(),m=grid[0].size();\n        int res=1e9;\n        for (int a=0;a<=n;a++) {\n            for (int b=a;b<=n;b++) {\n                for (int c=0;c<=m;c++) {\n                    int cur=0;\n                    {\n                        int lx=1e9,rx=-1e9,ly=1e9,ry=-1e9;\n                        for (int i=0;i<a;i++) {\n                            for (int j=0;j<c;j++) {\n                                if (grid[i][j]==1) {\n                                    lx=min(lx,i);\n                                    rx=max(rx,i);\n                                    ly=min(ly,j);\n                                    ry=max(ry,j);\n                                }\n                            }\n                        }\n                        if (lx<=rx) cur+=max(1ll,(long long)(rx-lx+1)*(ry-ly+1));\n                    }\n                    {\n                        int lx=1e9,rx=-1e9,ly=1e9,ry=-1e9;\n                        for (int i=a;i<b;i++) {\n                            for (int j=0;j<c;j++) {\n                                if (grid[i][j]==1) {\n                                    lx=min(lx,i);\n                                    rx=max(rx,i);\n                                    ly=min(ly,j);\n                                    ry=max(ry,j);\n                                }\n                            }\n                        }\n                        if (lx<=rx) cur+=max(1ll,(long long)(rx-lx+1)*(ry-ly+1));\n                    }\n                    {\n                        int lx=1e9,rx=-1e9,ly=1e9,ry=-1e9;\n                        for (int i=0;i<n;i++) {\n                            for (int j=0;j<m;j++) if (!(i<b&&j<c)) {\n                                if (grid[i][j]==1) {\n                                    lx=min(lx,i);\n                                    rx=max(rx,i);\n                                    ly=min(ly,j);\n                                    ry=max(ry,j);\n                                }\n                            }\n                        }\n                        if (lx<=rx) cur+=max(1ll,(long long)(rx-lx+1)*(ry-ly+1));\n                    }\n                    // printf(\"cur=%d\\n\",cur);\n                    res=min(res,cur);\n                }\n            }\n        }\n        return res;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int res=1e9;\n        for (int k=0;k<4;k++) { // rotate\n            res=min(res,calc(grid));\n            int n=grid.size(),m=grid[0].size();\n            vector<vector<int>> nxt(m,vector<int>(n));\n            for (int i=0;i<n;i++) for (int j=0;j<m;j++) nxt[j][n-1-i]=grid[i][j];\n            nxt.swap(grid);\n        }\n        res=max(res,3);\n        return res;\n    }\n};",
    "submit_ts": "1719111158",
    "subm_id": "541385392"
}