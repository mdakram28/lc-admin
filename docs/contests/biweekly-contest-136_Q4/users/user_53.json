{
    "username": "htedsv-i",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  1000000007 //998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (1000005)\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n\n}\nvector<int> mp[MAX];\nint dp[MAX], ans[MAX];\nvoid addE(int u, int v) {\n    mp[u].emplace_back(v);\n    mp[v].emplace_back(u);\n}\nvoid dfs(int x, int pa) {\n    dp[x]=0;\n    for(int c:mp[x]) if (c!=pa) {\n        dfs(c,x);\n        if (~c&1) maxtt(dp[x], dp[c]+1);\n        else maxtt(dp[x], dp[c]+2);\n    }\n}\nvoid dfs2(int x, int pa, int C) {\n    int pre = (~pa&1) ? C+1: C+2;\n    if (pa == 0) {\n        ans[x]=dp[x];\n    } else {\n        ans[x]=max(dp[x], pre);\n    }\n    vector<pii> V;\n    for(int c:mp[x]) if (c!=pa) {\n        V.emplace_back(c, (~c&1) ? dp[c]+1: dp[c]+2);\n    }\n    if (V.empty()) return;\n    int vs = V.size();\n    vector<int> ps(vs+2,0), pb(vs+2,0);\n    ps[1]=V[0].second;\n    for(int i=1;i<vs;i++) {\n        ps[i+1]=max(ps[i], V[i].second);\n    }\n    pb[vs] = V.back().second;\n    for(int i=vs-2;i>=0;i--) {\n        pb[i+1]=max(pb[i+1+1], V[i].second);\n    }\n    REP(i,vs) {\n        int j=i+1;\n        int c=V[i].first;\n        int tmp=max(ps[j-1], pb[j+1]);\n        if (pa>0) maxtt(tmp, pre);\n        dfs2(c, x, tmp);\n    }\n}\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size() + 1;\n        REQ(i,n) {\n            mp[i].clear();\n        }\n        for(auto &p: edges) {\n            addE(p[0]+1, p[1]+1);\n        }\n        dfs(1,0);\n        ans[1] = dp[1];\n        dfs2(1,0, 0);\n        vector<int> ta;\n        REQ(i,n) ta.emplace_back(ans[i]);\n        return ta;\n    }\n};\n",
    "submit_ts": "1722697984",
    "subm_id": "552268767"
}