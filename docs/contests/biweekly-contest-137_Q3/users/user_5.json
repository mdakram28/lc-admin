{
    "username": "jonathanirvings",
    "submission": "//start of jonathanirvings' template v3.0.3 (BETA)\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int,int> pii;\ntypedef pair<LL,LL> pll;\ntypedef pair<string,string> pss;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vii;\ntypedef vector<LL> vl;\ntypedef vector<vl> vvl;\n\ndouble EPS = 1e-9;\nint INF = 1000000005;\nlong long INFF = 1000000000000000005LL;\ndouble PI = acos(-1);\nint dirx[8] = {-1,0,0,1,-1,-1,1,1};\nint diry[8] = {0,1,-1,0,-1,1,-1,1};\n\n#ifdef TESTING\n  #define DEBUG fprintf(stderr,\"====TESTING====\\n\")\n  #define VALUE(x) cerr << \"The value of \" << #x << \" is \" << x << endl\n  #define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n  #define DEBUG \n  #define VALUE(x)\n  #define debug(...)\n#endif\n\n#define FOR(a,b,c) for (int (a)=(b);(a)<(c);++(a))\n#define FORN(a,b,c) for (int (a)=(b);(a)<=(c);++(a))\n#define FORD(a,b,c) for (int (a)=(b);(a)>=(c);--(a))\n#define FORSQ(a,b,c) for (int (a)=(b);(a)*(a)<=(c);++(a))\n#define FORC(a,b,c) for (char (a)=(b);(a)<=(c);++(a))\n#define FOREACH(a,b) for (auto &(a) : (b))\n#define REP(i,n) FOR(i,0,n)\n#define REPN(i,n) FORN(i,1,n)\n#define MAX(a,b) a = max(a,b)\n#define MIN(a,b) a = min(a,b)\n#define SQR(x) ((LL)(x) * (x))\n#define RESET(a,b) memset(a,b,sizeof(a))\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define ALL(v) v.begin(),v.end()\n#define ALLA(arr,sz) arr,arr+sz\n#define SIZE(v) (int)v.size()\n#define SORT(v) sort(ALL(v))\n#define REVERSE(v) reverse(ALL(v))\n#define SORTA(arr,sz) sort(ALLA(arr,sz))\n#define REVERSEA(arr,sz) reverse(ALLA(arr,sz))\n#define PERMUTE next_permutation\n#define TC(t) while(t--)\n\ninline string IntToString(LL a){\n  char x[100];\n  sprintf(x,\"%lld\",a); string s = x;\n  return s;\n}\n\ninline LL StringToInt(string a){\n  char x[100]; LL res;\n  strcpy(x,a.c_str()); sscanf(x,\"%lld\",&res);\n  return res;\n}\n\ninline string GetString(void){\n  char x[1000005];\n  scanf(\"%s\",x); string s = x;\n  return s;\n}\n\ninline string uppercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';\n  return s;\n}\n\ninline string lowercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';\n  return s;\n}\n\ninline void OPEN (string s) {\n  #ifndef TESTING\n  freopen ((s + \".in\").c_str (), \"r\", stdin);\n  freopen ((s + \".out\").c_str (), \"w\", stdout);\n  #endif\n}\n\n#ifdef TESTING\nint main() {}\n#endif\n\n//end of jonathanirvings' template v3.0.3 (BETA)\n\n// LL kiriatas[505][505];\n// LL kiribawah[505][505];\n// LL kananatas[505][505];\n// LL kananbawah[505][505];\nLL atas[505][505];\nLL bawah[505][505];\nint r,c;\n\nclass Solution {\npublic:\n  long long maximumValueSum(vector<vector<int>>& board) {\n    r = SIZE(board);\n    c = SIZE(board[0]);\n    FORN(j,1,c)\n    {\n      FORN(i,0,r+1) atas[i][j] = bawah[i][j] = -INFF;\n      FORN(i,1,r)\n      {\n        atas[i][j] = board[i-1][j-1];\n        MAX(atas[i][j],atas[i-1][j]);\n      }\n      FORD(i,r,1)\n      {\n        bawah[i][j] = board[i-1][j-1];\n        MAX(bawah[i][j],bawah[i+1][j]);\n      }\n    }\n    LL risan = -INFF;\n    FORN(i,2,r-1)\n    {\n      vector<pair<LL,int>> ada0,ada1,ada2;\n      FORN(j,1,c)\n      {\n        ada0.pb(mp(atas[i-1][j],j));\n        ada1.pb(mp(board[i-1][j-1],j));\n        ada2.pb(mp(bawah[i+1][j],j));\n      }\n      nth_element(ada0.begin(), ada0.end() - 3, ada0.end());\n      nth_element(ada1.begin(), ada1.end() - 3, ada1.end());\n      nth_element(ada2.begin(), ada2.end() - 3, ada2.end());\n      FOR(i,SIZE(ada0)-3,SIZE(ada0)) FOR(j,SIZE(ada1)-3,SIZE(ada1)) FOR(k,SIZE(ada2)-3,SIZE(ada2))\n      {\n        if (ada0[i].se == ada1[j].se) continue;\n        if (ada0[i].se == ada2[k].se) continue;\n        if (ada1[j].se == ada2[k].se) continue;\n        MAX(risan,ada0[i].fi + ada1[j].fi + ada2[k].fi);\n      }\n    }\n    return risan;\n\n    // FORN(i,0,r+1) FORN(j,0,c+1)\n    // {\n    //   kiriatas[i][j] = kiribawah[i][j] = kananatas[i][j] = kananbawah[i][j] = -INFF;\n    // }\n    // FORN(i,1,r) FORN(j,1,c)\n    // {\n    //   MAX(kiriatas[i][j],board[i][j]);\n    //   MAX(kiriatas[i][j],kiriatas[i-1][j]);\n    //   MAX(kiriatas[i][j],kiriatas[i][j-1]);\n    // }\n    // FORN(i,1,r) FORD(j,c,1)\n    // {\n    //   MAX(kananatas[i][j],board[i][j]);\n    //   MAX(kananatas[i][j],kananatas[i-1][j]);\n    //   MAX(kananatas[i][j],kananatas[i][j+1]);\n    // }\n    // FORD(i,r,1) FORN(j,1,c)\n    // {\n    //   MAX(kiribawah[i][j],board[i][j]);\n    //   MAX(kiribawah[i][j],kiribawah[i+1][j]);\n    //   MAX(kiribawah[i][j],kiribawah[i][j-1]);\n    // }\n    // FORD(i,r,1) FORD(j,c,1)\n    // {\n    //   MAX(kananbawah[i][j],board[i][j]);\n    //   MAX(kananbawah[i][j],kananbawah[i+1][j]);\n    //   MAX(kananbawah[i][j],kananbawah[i][j+1]);\n    // }\n    // LL risan = -INFF;\n    // FORN(i,2,r-1) FORN(j,2,c-1)\n    // {\n    //   LL now = \n    // }\n  }\n};",
    "submit_ts": "1723905903",
    "subm_id": "1359025175"
}