{
    "username": "tigertank123",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        \n        int changes = 0; \n        // consider rectangles\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int cur = grid[i][j] + grid[i][m - j - 1] + grid[n - i - 1][j] + grid[n - i - 1][m - j - 1];\n                \n                if (cur % 4 == 0) continue;\n                \n                changes += min(cur, 4 - cur);\n            }\n        }\n        \n        // there must be an even number of 1 pairs\n        int onepairs = 0; \n        int count = 0; \n        // horizontal\n        if (n % 2 == 1) {\n            int mid = n / 2;\n            for (int i = 0, j = m - 1; i < j; i++, j--) {\n                int cur = grid[mid][i] + grid[mid][j];\n                if (cur % 2 == 1) count++;\n                else if (cur == 2) onepairs ++;\n            }\n        }\n        \n        // vertical\n        if (m % 2 == 1) {\n            int mid = m / 2;\n            for (int i = 0, j = n - 1; i < j; i++, j--) {\n                int cur = grid[i][mid] + grid[j][mid];\n                if (cur % 2 == 1) count++;\n                else if (cur == 2) onepairs ++;\n            }\n        }\n        \n        // center\n        if (n % 2 == 1 and m % 2 == 1 and grid[n / 2][m / 2] == 1) changes ++;\n        \n        if (onepairs % 2 == 1) {\n            if (count > 0) changes += count;        // change alt\n            else changes += 2 + count;                  // change onepair\n            \n        } else {\n            changes += count;\n        }\n\n        \n        return changes;\n    }\n};",
    "submit_ts": "1722698596",
    "subm_id": "1343185729"
}