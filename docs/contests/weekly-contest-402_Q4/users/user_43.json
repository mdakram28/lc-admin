{
    "username": "summerdaway",
    "submission": "#define maxn 111111\n#define LN(x) ((x)<<1)\n#define RN(x) (((x)<<1)|1)\nint a[maxn], b[maxn], T[maxn*20], n;\n\n\nclass Solution {\npublic:\n    void update(int node) {\n        T[node] = T[LN(node)]+T[RN(node)];\n    }\n\n    void build_tree(int node, int l, int r) {\n        if (l == r) {\n            T[node] = b[l];\n            return;\n        }\n        int mid = (l+r)>>1;\n        build_tree(LN(node), l, mid);\n        build_tree(RN(node), mid+1, r);\n        update(node);\n    }\n\n    int query(int node, int l, int r, int x, int y) {\n        if (x <= l && r <= y) return T[node];\n        if (x > r || y < l) return 0;\n        int mid = (l+r)>>1;\n        return query(LN(node), l, mid, x, y)+query(RN(node), mid+1, r, x, y);\n    }\n\n    void insert(int node, int l, int r, int x) {\n        if (l == r) {\n            T[node] = b[x];\n            return;\n        }\n        int mid = (l+r)>>1;\n        if (x <= mid) insert(LN(node), l, mid, x);\n        else insert(RN(node), mid+1, r, x);\n        update(node);\n    }\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        for (int i = 1; i <= n; ++i) {\n            a[i] = nums[i-1];\n        }\n        a[0] = a[n+1] = 0;\n        for (int i = 1; i <= n; ++i) {\n            b[i] = (a[i]>a[i-1])&&(a[i]>a[i+1]);\n        }\n        build_tree(1, 1, n);\n        vector<int> ret;\n        for (auto q: queries) {\n            if (q[0] == 1) {\n                ret.push_back(query(1, 1, n, q[1]+2, q[2]));\n            } else {\n                int i = q[1]+1;\n                a[i] = q[2];\n                for (int j = max(i-1, 1); j <= i+1 && j <= n; ++j) {\n                    b[j] = (a[j]>a[j-1])&&(a[j]>a[j+1]);\n                    insert(1, 1, n, j);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1718506239",
    "subm_id": "539773715"
}