{
    "username": "srikanth_j",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid[0].size();\n        int m = grid.size();\n        int ans = 0;\n        int ones = 0;\n        for (int i = 0; i<m/2; i++) {\n            for (int j = 0; j<n/2; j++) {\n                int currOnes = 0;\n                currOnes += grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 -j] + grid[m - 1 - i][n - 1 -j];\n\n                ans += min(currOnes, 4 - currOnes);\n            }\n        }\n        int numSwaps = 0;\n        if (m % 2) {\n            for (int i = 0; i<n/2; i++) {\n                if (grid[m/2][i] != grid[m/2][n - i - 1]) {\n                    ans++;\n                    numSwaps++;\n                } else {\n                    if (grid[m/2][i]) ones += 2;\n                }\n\n            }\n        }\n        if (n % 2) {\n            for (int i = 0; i<m/2; i++) {\n                if (grid[i][n/2] != grid[m - i - 1][n/2]) {\n                    ans++;\n                    numSwaps++;\n                } else {\n                    if (grid[i][n/2]) ones += 2;\n                }\n\n            }\n        }\n        if (m % 2 && n % 2) {\n            if (grid[m/2][n/2] == 1) ans++;\n        }\n        if (ones % 4 && !numSwaps) {\n            ans += 2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699798",
    "subm_id": "1343222684"
}