{
    "username": "Benlegend",
    "submission": "class Solution {\npublic:\n    /*\n    0 1 1 1 0\n    1 0 0 1 0\n    1 1 0 0 1\n    1 1 1 0 1\n    0 0 1 0 1\n    \n    0 1 1 1 0\n    1 0 0 1 0\n    1 1 1 0 1\n    0 0 1 0 1\n    \n    0 1 1 1\n    1 0 0 1\n    1 0 0 1\n    1 1 0 0\n    1 1 1 0\n    \n    1 0 1\n    1 1 0\n    1 1 1\n    \n    */\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        \n        int ans = 0;\n        // traverse top-bottom row pairs, may leave row in the middle\n        for (int i = 0, j = m - 1; i < j; ) {\n            for (int p = 0, q = n - 1; p < q; ) {\n                int ones = grid[i][p] + grid[i][q] + grid[j][p] + grid[j][q];\n                ans += min(ones, 4 - ones);\n                \n                p++;\n                q--;\n            }\n            \n            i++;\n            j--;\n        }\n        \n        int ones = 0, diff = 0;\n        // odd rows\n        if (m & 0x01) {\n            // 1 1\n            // 1 1 1\n            // 1 1 1 1\n            for (int i = 0, j = n - 1; i < j; ) {\n                if (grid[m / 2][i] != grid[m / 2][j]) {\n                    diff++;\n                } else if (grid[m / 2][i] == 1) {\n                    ones++;\n                }\n                \n                i++;\n                j--;\n            }\n        }\n        \n        if (n & 0x1) {\n            for (int i = 0, j = m - 1; i < j; ) {\n                if (grid[i][n / 2] != grid[j][n / 2]) {\n                    diff++;\n                } else if (grid[i][n / 2] == 1) {\n                    ones++;\n                }\n                \n                i++;\n                j--;\n            }\n            \n        }\n        \n        // diff = 3 ones = 3\n        // diff = 2 ones = 3\n        // diff = 4 ones = 2\n        if (ones % 2) {\n            if (diff > 0) {\n                diff--;\n                ans += 1;\n            } else {\n                ans += 2;\n            }\n        }\n        \n        ans += diff;\n        \n        if ((m & 0x1) && (n & 0x1)) {\n            ans += grid[m / 2][n / 2];\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722697719",
    "subm_id": "1343156452"
}