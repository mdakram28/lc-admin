{
    "username": "Java_Script_Coder",
    "submission": "class TrieNode {\n    constructor() {\n        this.children = {};\n        this.wordEnds = [];\n    }\n}\n\nclass Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n\n    insert(word, index, cost) {\n        let node = this.root;\n        for (let c of word) {\n            if (!node.children[c]) {\n                node.children[c] = new TrieNode();\n            }\n            node = node.children[c];\n        }\n        node.wordEnds.push({ index: index, cost: cost });\n    }\n}\n\nvar minimumCost = function(target, words, costs) {\n    const n = target.length;\n    const dp = new Array(n + 1).fill(Number.MAX_SAFE_INTEGER);\n    dp[0] = 0;\n\n    const trie = new Trie();\n    for (let i = 0; i < words.length; ++i) {\n        trie.insert(words[i], i, costs[i]);\n    }\n\n    for (let i = 0; i < n; ++i) {\n        if (dp[i] === Number.MAX_SAFE_INTEGER) continue;\n\n        let node = trie.root;\n        for (let j = i; j < n; ++j) {\n            if (!node.children[target[j]]) break;\n            node = node.children[target[j]];\n            for (let p of node.wordEnds) {\n                const wordIndex = p.index;\n                const wordCost = p.cost;\n                const len = words[wordIndex].length;\n                if (i + len <= n) {\n                    dp[i + len] = Math.min(dp[i + len], dp[i] + wordCost);\n                }\n            }\n        }\n    }\n\n    return dp[n] === Number.MAX_SAFE_INTEGER ? -1 : dp[n];\n};\n",
    "submit_ts": "1720321537",
    "subm_id": "1312325532"
}