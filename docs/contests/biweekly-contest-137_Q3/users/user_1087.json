{
    "username": "Tz-Jiun Chiou",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board2)\n    {\n        int m = board2.size();\n        int n = board2[0].size();\n\n        vector<vector<long long>> board (m, vector<long long> (n));\n        for (int i = 0; i < m; i++)\n        {\n            for (int j = 0; j < n; j++)\n            {\n                board[i][j] = board2[i][j];\n            }\n        }\n\n        \n        vector<long long> dp1(n);\n        for (int i = 0; i < n; i++)\n        {\n            dp1[i] = board[0][i] > board[1][i] ? board[0][i] : board[1][i];\n        }\n\n        vector<vector<long long>> dp2(n, vector<long long>(n, LLONG_MIN));\n\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                long long a = board[0][i] + board[1][j];\n                long long b = board[0][j] + board[1][i];\n                if (a > b)\n                {\n                    dp2[i][j] = a;\n                }\n                else\n                {\n                    dp2[i][j] = b;\n                }\n\n\n                \n                // cout << \"i = \" << i << \", j = \" << j << '\\n';\n                // cout << \"dp2[i][j] = \" << dp2[i][j] << '\\n';\n            }\n        }\n\n\n\n        long long ret = LLONG_MIN;\n\n        for (int i = 2; i < m; i++)\n        {\n            // cout << \"ret = \" << ret << '\\n';\n            \n            \n            for (int j = 0; j < n; j++)\n            {\n                for (int k = 0; k < n; k++)\n                {\n                    // if (k > j)\n                    // {\n                    //     cout << \"i = \" << i << \", \";\n                    //     cout << \"j = \" << j << \", k = \" << k << \", \";\n                    //     cout << \"dp2[j][k] = \" << dp2[j][k] << '\\n';\n                    // }\n                    \n                    for (int t = 0; t < n; t++)\n                    {\n                        if (k >= t || k == j || j == t)\n                            continue;\n                        // if (i == 2)\n                        // {\n                        //     cout << \"i = 2, \" << \"j = \" << j << \"\\n\";\n                        //     cout << \"board[i][j] = \" << board[i][j] << '\\n';\n                        //     cout << \"k = \" << k << \", t = \" << t << '\\n';\n                        //     cout << \"dp2[k][t] = \" << dp2[k][t] << '\\n';\n                        //     cout << \"max = \" << board[i][j] + dp2[k][t] << '\\n';\n                        // }\n                        if (board[i][j] + dp2[k][t] > ret)\n                        {\n                            ret = board[i][j] + dp2[k][t];\n                            // cout << \"ret = \" << ret << '\\n';\n                        }\n                        // ret = max(ret, board[i][j] + dp2[k][t]);\n                    }\n                }\n            }\n\n            //dp2\n            for (int j = 0; j < n; j++)\n            {\n                for (int k = 0; k < n; k++)\n                {\n                    if (j == k)\n                        continue;\n                    if (board[i][j] + dp1[k] > dp2[j][k])\n                    {\n                        dp2[j][k] = board[i][j]+ dp1[k] ;\n                    }\n\n                    if (board[i][k] + dp1[j] > dp2[j][k])\n                    {\n                        dp2[j][k] = board[i][k] + dp1[j];\n                    }\n                    // dp2[j][k] = max(dp2[j][k], board[i][j] + dp1[k]);\n                    // dp2[j][k] = max(dp2[j][k], board[i][k] + dp1[j]);\n                }\n            }\n\n            // dp1\n            for (int j = 0; j < n; j++)\n            {\n                // dp1[j] = max(dp1[j], (long long)board[i][j]);\n                if (board[i][j] > dp1[j])\n                {\n                    dp1[j] = board[i][j];\n                }\n            }\n        }\n\n        return ret;\n    }\n};",
    "submit_ts": "1723909769",
    "subm_id": "1359205086"
}