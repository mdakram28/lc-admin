{
    "username": "ramchandra-mulik",
    "submission": "class Solution {\n    private static final int MOD = 1000000007;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][][] memo = new long[n][51][51];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 51; j++) {\n                Arrays.fill(memo[i][j], -1);\n            }\n        }\n\n        return (int) countPairs(nums, 0, 0, nums[0], memo);\n    }\n\n    private long countPairs(int[] nums, int index, int arr1Value, int arr2Value, long[][][] memo) {\n        if (index >= nums.length) return 1;\n        if (memo[index][arr1Value][arr2Value] != -1) return memo[index][arr1Value][arr2Value];\n\n        long result = 0;\n        for (int i = arr1Value; i <= nums[index]; i++) {\n            for (int j = arr2Value; j >= 0; j--) {\n                if (i + j == nums[index]) {\n                    result += countPairs(nums, index + 1, i, j, memo);\n                    result %= MOD;\n                }\n            }\n        }\n\n        memo[index][arr1Value][arr2Value] = result;\n        return result;\n    }\n}",
    "submit_ts": "1723346842",
    "subm_id": "1351586342"
}