{
    "username": "Tejpa",
    "submission": "#include <vector>\n#include <map>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        int ans = 1;\n        vector<int> vk(k + 1, -1);\n        vector<map<int, int>> vkm(k + 1);\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j <= k; ++j) {\n                for (int l = 0; l < j; ++l) {\n                    dp[i][j] = max(dp[i][j], 1 + vk[l]);\n                }\n                if (vkm[j].find(nums[i]) != vkm[j].end()) {\n                    dp[i][j] = max(dp[i][j], 1 + vkm[j][nums[i]]);\n                }\n                ans = max(ans, dp[i][j]);\n            }\n            for (int j = 0; j <= k; ++j) {\n                vk[j] = max(vk[j], dp[i][j]);\n                vkm[j][nums[i]] = max(vkm[j][nums[i]], dp[i][j]);\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1717861603",
    "subm_id": "1281796522"
}