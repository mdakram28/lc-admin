{
    "username": "981377660LMT",
    "submission": "from functools import lru_cache\nfrom typing import List, Tuple, Optional\nfrom collections import defaultdict, Counter\nfrom sortedcontainers import SortedList\n\n\nMOD = int(1e9 + 7)\nINF = int(1e20)\n\n# \u7ed9\u4f60\u4e00\u4e2a m x n \u7684\u4e8c\u8fdb\u5236\u77e9\u9635 grid \u3002\n\n# \u5982\u679c\u77e9\u9635\u4e2d\u4e00\u884c\u6216\u8005\u4e00\u5217\u4ece\u524d\u5f80\u540e\u4e0e\u4ece\u540e\u5f80\u524d\u8bfb\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u4e00\u884c\u6216\u8005\u8fd9\u4e00\u5217\u662f \u56de\u6587 \u7684\u3002\n\n# \u4f60\u53ef\u4ee5\u5c06 grid \u4e2d\u4efb\u610f\u683c\u5b50\u7684\u503c \u7ffb\u8f6c \uff0c\u4e5f\u5c31\u662f\u5c06\u683c\u5b50\u91cc\u7684\u503c\u4ece 0 \u53d8\u6210 1 \uff0c\u6216\u8005\u4ece 1 \u53d8\u6210 0 \u3002\n\n\n# \u8bf7\u4f60\u8fd4\u56de \u6700\u5c11 \u7ffb\u8f6c\u6b21\u6570\uff0c\u4f7f\u5f97\u77e9\u9635\u4e2d \u6240\u6709 \u884c\u548c\u5217\u90fd\u662f \u56de\u6587\u7684 \uff0c\u4e14\u77e9\u9635\u4e2d 1 \u7684\u6570\u76ee\u53ef\u4ee5\u88ab 4 \u6574\u9664 \u3002\ndef max2(a: int, b: int) -> int:\n    return a if a > b else b\n\n\ndef min2(a: int, b: int) -> int:\n    return a if a < b else b\n\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ROW, COL = len(grid), len(grid[0])\n\n        # !\u56db\u4e2a\u89d2\n        counter = [0] * 2\n        diff1Info = []\n        for i in range(ROW // 2):\n            for j in range(COL // 2):\n                counter[grid[i][j]] += 1\n                counter[grid[i][~j]] += 1\n                counter[grid[~i][j]] += 1\n                counter[grid[~i][~j]] += 1\n                v0, v1 = counter\n                diff1Info.append((v0, v1))\n                counter[0] = 0\n                counter[1] = 0\n        diff1 = sum(4 - max2(v0, v1) for v0, v1 in diff1Info)\n\n        # !\u4e2d\u5fc3\u7ebf\n        diff2 = 0\n        centerOnes = 0\n        if ROW & 1:\n            centerOnes += sum(grid[ROW // 2])\n            for i in range(COL // 2):\n                if grid[ROW // 2][i] != grid[ROW // 2][~i]:\n                    diff2 += 1\n        if COL & 1:\n            centerOnes += sum(grid[i][COL // 2] for i in range(ROW))\n            for i in range(ROW // 2):\n                if grid[i][COL // 2] != grid[~i][COL // 2]:\n                    diff2 += 1\n        if ROW & 1 and COL & 1:\n            centerOnes -= grid[ROW // 2][COL // 2]\n\n        dp = [False] * 4\n        dp[centerOnes & 3] = True\n        for _ in range(diff2):\n            ndp = [False] * 4\n            # +1/-1\n            for i in range(4):\n                if dp[i]:\n                    ndp[(i + 1) & 3] = True\n                    ndp[(i - 1) & 3] = True\n            dp = ndp\n        cost = INF\n        for i in range(4):\n            if dp[i]:\n                cost = min(cost, i)\n        return diff1 + diff2 + cost\n",
    "submit_ts": "1722700702",
    "subm_id": "552280949"
}