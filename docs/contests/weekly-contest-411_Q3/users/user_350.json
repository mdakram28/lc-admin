{
    "username": "Aylup",
    "submission": "'''\nYou are given two positive integers n and k.\n\nAn integer x is called k-palindromic if:\n\nx is a palindrome\nx is divisible by k.\n\nReturn the largest integer having n digits (as a string) that is k-palindromic.\n\nfor some digit d\n[d] [  n - 2  ] [d]\n\ns = d * (10 ** (n - 1))\ne = d * (10 ** 0)\n\nmust equal\nanswer(n - 2, rest)\ns + e + rest = target \nrest = (target - s - e) % k\nanswer(n - 2, rest)\n\n500 + 5\n'''\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        @cache\n        def findInv10(rest: int) -> int:\n            valid = []\n            for i in range(k):\n                if (i * 10) % k == rest:\n                    valid.append(i)\n            return valid\n\n        pow10 = [1] * n\n        for i in range(n - 1):\n            pow10[i + 1] = (10 * pow10[i]) % k\n\n        @cache\n        def dp(n: int, target: int, start: int):\n            if n == 0:\n                return [] if target == 0 else None\n            if n == 1:\n                for d in range(9, start - 1, -1):\n                    if d % k == target:\n                        return [d, []]\n                return None\n\n            for d in range(9, start - 1, -1):\n                s = (d * pow10[n - 1]) % k\n                e = (d * pow10[0]) % k\n                rest = (target - s - e) % k\n                ans = None\n                for x in findInv10(rest):\n                    answer = dp(n - 2, x, 0)\n                    if answer is not None:\n                        ans = max(ans, [d, answer]) if ans else [d, answer]\n                if ans is not None:\n                    return ans\n\n            return None\n\n        ans = []\n        node = dp(n, 0, 1)\n        while node:\n            ans.append(node[0])\n            node = node[1]\n\n        ans = ''.join(map(str, ans))\n        \n        if n % 2 == 0:\n            return ans + ans[::-1]\n        else:\n            return ans + ans[-2::-1]",
    "submit_ts": "1723951949",
    "subm_id": "1359784144"
}