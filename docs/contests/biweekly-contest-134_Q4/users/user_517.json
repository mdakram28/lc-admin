{
    "username": "kunal0612",
    "submission": "#define ll long long int\n\nclass SegmentTree {\nprivate:\n    vector<int> tree;\n    int n;\n\n    void build(const vector<int>& nums, int node, int start, int end) {\n        if (start == end) {\n            tree[node] = nums[start];\n        } else {\n            int mid = (start + end) / 2;\n            int left_child = 2 * node + 1;\n            int right_child = 2 * node + 2;\n            build(nums, left_child, start, mid);\n            build(nums, right_child, mid + 1, end);\n            tree[node] = tree[left_child] & tree[right_child];\n        }\n    }\n\n    int query(int node, int start, int end, int l, int r) {\n        if (r < start || end < l) {\n            return -1;  // Represents the bitwise AND identity\n        }\n        if (l <= start && end <= r) {\n            return tree[node];\n        }\n        int mid = (start + end) / 2;\n        int left_child = 2 * node + 1;\n        int right_child = 2 * node + 2;\n        int left_query = query(left_child, start, mid, l, r);\n        int right_query = query(right_child, mid + 1, end, l, r);\n        if (left_query == -1) return right_query;\n        if (right_query == -1) return left_query;\n        return left_query & right_query;\n    }\n\npublic:\n    SegmentTree(const vector<int>& nums) {\n        n = nums.size();\n        tree.resize(4 * n);\n        build(nums, 0, 0, n - 1);\n    }\n\n    int query(int l, int r) {\n        return query(0, 0, n - 1, l, r);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        SegmentTree segTree(nums);\n        int n=nums.size();\n        ll ans=0;\n        map<ll,ll> prev;\n        for(auto it:nums){\n            map<ll,ll> cur;\n            if(it==k) ans++;\n            cur[it]=1;\n            for(auto &x:prev){\n                int first=x.first;\n                int second=x.second;\n                ll nw=first&it;\n                if(nw==k) ans+=second;\n                cur[nw]+=second;\n            }\n            prev=cur;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279112",
    "subm_id": "1311737909"
}