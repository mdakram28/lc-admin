{
    "username": "weilunla",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int hPieces = 1;\n        int vPieces = 1;\n        long long cost = 0;\n        int i = 0, j = 0;\n\n        while (i < m - 1 && j < n - 1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                cost += horizontalCut[i] * vPieces; \n                hPieces++; \n                i++; \n            } else {\n                cost += verticalCut[j] * hPieces;\n                vPieces++; \n                j++; \n            }\n        }\n\n        while (i < m - 1) {\n            cost += horizontalCut[i] * vPieces;\n            i++;\n        }\n\n        while (j < n - 1) {\n            cost += verticalCut[j] * hPieces;\n            j++;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720925411",
    "subm_id": "1320253862"
}