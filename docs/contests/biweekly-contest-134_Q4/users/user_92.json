{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    static constexpr int MAX_LOG = 30;\n    deque<int> s[MAX_LOG];\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n\n        long long res = 0;\n\n        for (int i = 0; i < MAX_LOG; i++) s[i].clear();\n        \n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < MAX_LOG; j++) {\n                if (nums[i] & (1 << j)) continue;\n                s[j].push_back(i);\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            if ((nums[i] & k) != k) continue;\n\n            int high = n;\n            int low = i;\n\n            for (int j = 0; j < MAX_LOG; j++) {\n                if (k & (1 << j)) {\n                    while (!s[j].empty() && s[j].front() < i) {\n                        s[j].pop_front();\n                    }\n                    if (!s[j].empty()) {\n                        high = min(high, s[j].front());\n                    }\n                } else {\n                    while (!s[j].empty() && s[j].front() < i) {\n                        s[j].pop_front();\n                    }\n                    if (!s[j].empty()) {\n                        low = max(low, s[j].front());\n                    } else {\n                        low = n;\n                    }\n                }\n            }\n            res += max(0, high - low);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720277242",
    "subm_id": "1311654478"
}