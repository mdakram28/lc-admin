{
    "username": "Aditya_Dixit94",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n         vector<vector<int>> dp(k + 1, vector<int>(2, 0));\n        \n        vector<unordered_map<int, int>> c(k + 1);\n        \n        vector<unordered_set<int>> e(k + 1);\n\n        for (auto i : nums) {\n            int p = 0;\n            for (int j = 0; j <= k; ++j) {\n                int x=max((dp[j][0] + 1) * (e[j].count(i) > 0), c[j][i] + 1);\n                int cur = max(p + 1, x);\n\n                p= dp[j][0];\n                dp[j][1] = cur;\n\n                if (dp[j][0] < cur) {\n                    dp[j][0] = cur;\n                    e[j].clear();\n                }\n\n                if (cur == dp[j][0]) {\n                    e[j].insert(i);\n                }\n\n                c[j][i] = cur;\n            }\n        }\n\n        return dp[k][0];\n\n    }\n};",
    "submit_ts": "1717860012",
    "subm_id": "1281742620"
}