{
    "username": "liaoyunyang0815",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int ans = 0;\n        int start = -1;\n        for (int i = 0; i < n; i++) {\n            if (colors[i] == colors[(i+1)%n]) {\n                start = (i+1)%n;\n                break;\n            }\n        }\n\n        if (start == -1) {\n            return n;\n        }\n\n        for (int i = 0; i < n; i++) colors.push_back(colors[i]);\n        int cur = 1;\n        cout << \"start = \" << start << endl;\n        for (int i = start+1; i < start+n; i++) {\n            if (colors[i] != colors[i-1]) {\n                cur++;\n            } else {\n                if (cur >= k) {\n                    ans += cur - k + 1;\n                }\n                cur = 1;\n            }\n        }\n        if (cur >= k) {\n            ans += cur - k + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278066",
    "subm_id": "1311692790"
}