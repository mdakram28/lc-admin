{
    "username": "akashtomar19",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        //sort(p.begin(), p.end());\n        vector<long long int>a(p.size());\n        vector<long long int>b(p.size());\n        for(int i = 0; i < p.size(); i++){\n            a[i] = p[i][0] + p[i][1];\n            b[i] = p[i][0] - p[i][1];\n        }\n        multiset<long long int>aa(a.begin(), a.end());\n        multiset<long long int>bb(b.begin(), b.end());\n        long long int res = 1e15;\n        cout<<1<<endl;\n        for(int i = 0; i < p.size(); i++){\n            aa.erase(aa.find(a[i]));\n            bb.erase(bb.find(b[i]));\n            //cout<<aa.size()<<endl;\n            long long int c = max(*aa.rbegin() - *aa.begin(), *bb.rbegin() - *bb.begin());\n            res = min(res, c);\n            aa.insert(a[i]);\n            bb.insert(b[i]);\n        }\n        return res;\n    }\n};"
}