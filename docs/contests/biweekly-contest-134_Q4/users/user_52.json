{
    "username": "w285714",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long res=0;\n        map<int,long long> a;\n        int n=nums.size();\n        for(long long i=0;i<n;++i){\n            map<int,long long> b;\n            b[nums[i]]=i;\n            for(auto [k,v]:a){\n                int t=k&nums[i];\n                if(b.count(t)){\n                    b[t]=min(b[t],v);\n                }\n                else{\n                    b[t]=v;\n                }\n            }\n            if(b.count(k)){\n                auto p=b.find(k);\n                ++p;\n                if(p==b.end()){\n                    // cout<<\"i1=\"<<i<<\" res=\"<<res<<endl;\n                    res+=i-b[k]+1;\n                }\n                else{\n                    res+=(p->second)-b[k];\n                    // cout<<\"i2=\"<<i<<\" res=\"<<res<<endl;\n                    // cout<<\"p-f=\"<<(p->first)<<\" p-s=\"<<(p->second)<<endl;\n                    // cout<<\"b[k]=\"<<b[k]<<endl;\n                }\n            }\n            // cout<<\"i=\"<<i<<\" res=\"<<res<<endl;\n            swap(a,b);\n        }\n        // if(k==0){\n        //     ++res;\n        // }\n        return res;\n    }\n};",
    "submit_ts": "1720277292",
    "subm_id": "544555695"
}