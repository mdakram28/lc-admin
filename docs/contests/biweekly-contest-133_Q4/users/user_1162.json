{
    "username": "sunnymaurya101",
    "submission": "\nint MOD = 1e9 + 7;\nconst int Maxy = 400;\n\nclass Solution {\nprivate:\n    void helper(int n, vector<vector<long>>& dp, map<int, int>& mp) {\n        for (int ln = 1; ln <= n; ln++) {\n            for (int inv = 0; inv <= Maxy; inv++) {\n                for (int pos = 0; pos < ln; pos++) {\n                    int p_idx = inv - pos;\n                    if (p_idx >= 0) {\n                        dp[ln][inv] = (dp[ln][inv] + dp[ln - 1][p_idx]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(ln) != mp.end()) {\n                int val = mp[ln];\n                for (int inv = 0; inv <= Maxy; inv++) {\n                    if (inv != val) {\n                        dp[ln][inv] = 0;\n                    }\n                }\n            }\n        }\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        map<int, int> mp;\n        for (const auto& req : reqs) mp[req[0] + 1] = req[1];\n        vector<vector<long>> dp(n + 1, vector<long>(Maxy + 1, 0));\n        dp[0][0] = 1;\n        helper(n, dp, mp);\n        long res = 0;\n        for (long it : dp[n]) {\n            res = (res% MOD + it% MOD) % MOD;\n        }\n\n        return static_cast<int>(res);\n    }\n};",
    "submit_ts": "1719071716",
    "subm_id": "1296852599"
}