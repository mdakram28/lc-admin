{
    "username": "krish_2002",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<pair<int,int> > mu1;\n        multiset<int> mu;\n        int n=points.size();\n        for(int i=0;i<n;i++){\n            int x=points[i][0];\n            int y=points[i][1];\n             int sum=x+y;\n            int diff=x-y;\n            mu1.insert({sum,diff});\n            mu.insert(diff);\n        }\n        \n        int mini=INT_MAX;\n        for(int i=0;i<n;i++){\n           int x=points[i][0];\n            int y=points[i][1];\n            int sum=x+y;\n            int diff=x-y;\n            mu1.erase(mu1.find({sum,diff}));\n            mu.erase(mu.find(diff));\n            int s1=(*(mu1.begin())).first;            \n            int s2=(*(--mu1.end())).first;\n            int d1=(*(mu.begin()));\n            int d2=(*(--mu.end()));\n            mini=min(mini,max(s2-s1, d2-d1));\n            mu1.insert({sum,diff});\n            mu.insert(diff);\n        }\n        \n        return mini;\n        \n        \n        \n    }\n};"
}