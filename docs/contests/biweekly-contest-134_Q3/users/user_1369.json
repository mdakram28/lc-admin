{
    "username": "Indrajeet99yadav",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int N = colors.length;\n        int count = 0;\n        if (k == 1) {\n            return N;\n        }\n\n        int alternatingLength = 1;\n        int i = 1;\n        int[] extendedColors = new int[2 * N];\n        System.arraycopy(colors, 0, extendedColors, 0, N);\n        System.arraycopy(colors, 0, extendedColors, N, N);\n\n        while (i < N + k - 1) {\n            int current = i;\n            int previous = i - 1;\n            if (current >= extendedColors.length) {\n                current -= N;\n            }\n            if (previous >= extendedColors.length) {\n                previous -= N;\n            }\n\n            if (extendedColors[current] != extendedColors[previous]) {\n                alternatingLength++;\n            } else {\n                alternatingLength = 1;\n            }\n            if (alternatingLength >= k) {\n                count++;\n            }\n\n            i++;\n        }\n\n        return count;\n\n    }\n}",
    "submit_ts": "1720279839",
    "subm_id": "1311767161"
}