{
    "username": "wangdh15",
    "submission": "class Solution {\npublic:\n    \n    struct Node {\n        int cost = 1e9;\n        int ch[26];\n    };\n    \n    Node tr[50005];\n    \n    int idxx = 0;\n    \n    int dp[50005];\n    \n    void add(const std::string& str, int cost) {\n        const int n = str.size();\n        int cur = 0;\n        for (int i = n - 1; i >= 0; --i) {\n            auto idx = str[i] - 'a';\n            if (tr[cur].ch[idx] == 0) tr[cur].ch[idx] = ++idxx;\n            cur = tr[cur].ch[idx];\n        }\n        tr[cur].cost = min(tr[cur].cost, cost);\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n         int n = words.size();\n        for (int i = 0; i < n; ++i) {\n            add(words[i], costs[i]);\n        }\n        \n        n = target.size();\n        for (int i = 1; i <= n; ++i) {\n            dp[i] = 1e9;\n            int cur = 0;\n            for (int j = i; j > 0; --j) {\n                int idx = target[j-1] - 'a';\n                // cout << idx << endl;\n                if (tr[cur].ch[idx] == 0) {\n                    break;\n                }\n                // cout << i << ' ' << j << \" aa\" << endl;\n                cur = tr[cur].ch[idx];\n                dp[i] = min(dp[i], dp[j-1] + tr[cur].cost);\n            }\n        }\n        // for (int i = 1; i <= n; ++i) {\n        //     cout << dp[i] << ' ';\n        // }\n        return dp[n] == 1e9 ? -1 : dp[n];\n        \n    }\n};",
    "submit_ts": "1720321568",
    "subm_id": "1312326344"
}