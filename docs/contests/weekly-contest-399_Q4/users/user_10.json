{
    "username": "Superultra",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define FOR(i, x, y) for (int i = x; i < y; i++)\n#define ll long long \n#define pll pair<ll, ll>\n#define f first\n#define s second\n#define obj array<array<ll, 2>, 2>\n\nconst int MOD = 1e9 + 7;\n\nobj unit;\n\nstruct segTree{\n    vector<obj> seg;\n    int sz;\n\n    void init(int sz_){\n        sz = 1;\n        while (sz < sz_)\n            sz *= 2;\n\n        seg.assign(sz * 2, unit);\n    }\n    obj merge(obj a, obj b){\n        obj ret;\n        ret[0][0] = max(a[0][0] + b[1][0], a[0][1] + b[0][0]);\n        ret[1][0] = max(a[1][0] + b[1][0], a[1][1] + b[0][0]);\n        ret[0][1] = max(a[0][0] + b[1][1], a[0][1] + b[0][1]);\n        ret[1][1] = max(a[1][0] + b[1][1], a[1][1] + b[0][1]);\n        return ret;\n    }\n    void upd(int i, int val){\n        obj ret = unit;\n        ret[1][1] = val;\n\n        seg[i += sz] = ret;\n        for (i /= 2; i > 0; i /= 2) \n            seg[i] = merge(seg[i * 2], seg[i * 2 + 1]);\n    }\n    ll qry(){\n        obj ret = seg[1]; \n        return max({ret[0][0], ret[0][1], ret[1][0], ret[1][1]});\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& A, vector<vector<int>>& Q) {\n        int n = A.size();\n        segTree st;\n        st.init(n);\n\n        for (int i = 0; i < n; i++){\n            st.upd(i, A[i]);\n        }\n\n        ll ans = 0;\n\n        for (auto V : Q){\n            int pos = V[0];\n            int elem = V[1];\n            st.upd(pos, elem);\n            ans = (ans + st.qry()) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716691381.0
}