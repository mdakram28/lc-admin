{
    "username": "shivam_30",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         \n        int prevH = 1, prevV =1;\n        long long cost = 0;\n        \n        priority_queue<pair<int,char>>pq;\n        \n        for(int cut : horizontalCut){\n            pq.push({cut, 'H'});\n        }\n        for(int cut : verticalCut){\n            pq.push({cut, 'V'});\n        }\n        \n        while(!pq.empty()){\n            pair<int,char>cut = pq.top();\n            pq.pop();\n            \n            if(cut.second == 'H'){\n                cost += prevV*1LL*cut.first;\n                prevH++;\n            }else{\n                cost += prevH*1LL*cut.first;\n                prevV++;\n            }\n        }\n        return cost;\n        \n        \n    }\n};",
    "submit_ts": "1720925272",
    "subm_id": "1320249024"
}