{
    "username": "TheronAma",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<int>> value_map;\n        for (int i = 0; i < board.size(); i++) {\n            for (int j = 0; j < board[0].size(); j++) {\n                value_map.push_back({board[i][j], i, j});\n            }\n        }\n\n        sort(value_map.rbegin(), value_map.rend());\n        long long result = -1000000000 * (long long)3;\n        for (int i = 0; i < min(202, (int)value_map.size()); i++) {\n            for (int j = i + 1; j < min(202, (int)value_map.size()); j++) {\n                for (int k = j + 1; k < min(606, (int)value_map.size()); k++) {\n                    int row1 = value_map[i][1];\n                    int row2 = value_map[j][1];\n                    int row3 = value_map[k][1];\n\n                    int col1 = value_map[i][2];\n                    int col2 = value_map[j][2];\n                    int col3 = value_map[k][2];\n\n                    if (row1 != row2 && row2 != row3 && row1 != row3 \n                    && col1 != col2 && col1 != col3 && col2 != col3) {\n                        long long currSum =  (long long)value_map[i][0] + (long long)value_map[j][0] + (long long)value_map[k][0];\n                        result = max(result, currSum);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1723908343",
    "subm_id": "1359148589"
}