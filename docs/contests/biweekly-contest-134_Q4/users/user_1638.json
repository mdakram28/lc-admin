{
    "username": "Nil45ak03",
    "submission": "class Solution {\npublic:\n    vector<int> dectobit(int n){\n        \n        vector<int> arr(32,0);\n        int ptr=0;\n        while(n){\n            \n            arr[ptr]=n%2;\n            ptr++;\n            n=n/2;\n        }\n        return arr;\n        \n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        int n=nums.size();\n        vector<vector<int>> bitarr(n,vector<int>(32,0));\n        vector<int> activebit(32,0);\n        activebit=dectobit(k);\n        \n        long long ans=0;\n        for(int i=0;i<n;i++){\n            int  maxactive=i+1,maxnonactive=0;\n            bitarr[i]=dectobit(nums[i]);\n            for(int j=0;j<32;j++){\n                if(i!=0){\n                    if(bitarr[i][j]==1){\n                        bitarr[i][j]+=bitarr[i-1][j];\n                    }\n                }\n                \n                if(activebit[j]==1){\n                    maxactive=min(maxactive,bitarr[i][j]);\n                }\n                else{\n                    // cout<<bitarr[i][j];\n                    maxnonactive=max(maxnonactive,bitarr[i][j]);\n                }\n                \n            }\n            // cout<<maxactive<<\" \"<<maxnonactive<<endl;\n            \n            ans+=max(0,(maxactive-maxnonactive));\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720280530",
    "subm_id": "1311792860"
}