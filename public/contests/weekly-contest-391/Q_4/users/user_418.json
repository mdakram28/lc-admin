{
    "username": "Albert_Zhang",
    "submission": "\"\"\" === Method 1. coordinate rotation\n(1) u = x + y, v = x - y\n(2) For the new coordinates, we check at most 4 points of the max distances.\n    Then we try to remove each of them, and get the min of max distance remaining.\n\"\"\"\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        newPoints = self.getNewPoints(points)\n        maxPointIdxs = self.getMaxPointIdxs(newPoints)\n        # print(newPoints)\n        # print(maxPointIdxs)\n        minDistance = float(\"inf\")\n        for maxIdx in maxPointIdxs:\n            remainingDistance = self.getRemainingDistance(newPoints, maxIdx)\n            minDistance = min(minDistance, remainingDistance)\n            # print(remainingDistance, minDistance)\n        return minDistance\n    \n    def getNewPoints(self, points):\n        newPoints = []\n        for x, y in points:\n            newPoints.append((x + y, x - y))\n        return newPoints\n    \n    def getMaxPointIdxs(self, points):\n        idxs = []\n        idxs.append(self.getMaxIdx(0, points))\n        idxs.append(self.getMaxIdx(1, points))\n        idxs.append(self.getMinIdx(0, points))\n        idxs.append(self.getMinIdx(1, points))\n        return idxs\n    \n    def getMaxIdx(self, axisIdx, points, removedIdx = -1):\n        maxValue = float(\"-inf\")\n        maxIdx = -1\n        for idx, point in enumerate(points):\n            if idx == removedIdx:\n                continue\n            if point[axisIdx] >= maxValue:\n                maxValue = point[axisIdx]\n                maxIdx = idx\n        return maxIdx\n    \n    def getMinIdx(self, axisIdx, points, removedIdx = -1):\n        minValue = float(\"inf\")\n        minIdx = -1\n        for idx, point in enumerate(points):\n            if idx == removedIdx:\n                continue\n            if point[axisIdx] <= minValue:\n                minValue = point[axisIdx]\n                minIdx = idx\n        return minIdx\n        \n    def getRemainingDistance(self, points, removedIdx):\n        return max(self.getRemainingDistanceInAxis(0, points, removedIdx),\n                  self.getRemainingDistanceInAxis(1, points, removedIdx))\n    \n    def getRemainingDistanceInAxis(self, axisIdx, points, removedIdx):\n        minIdx = self.getMinIdx(axisIdx, points, removedIdx)\n        maxIdx = self.getMaxIdx(axisIdx, points, removedIdx)\n        return abs(points[maxIdx][axisIdx] - points[minIdx][axisIdx])\n        \n        \n        \n        \n        \n            \n        "
}