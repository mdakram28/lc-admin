{
    "username": "accelerator-a5",
    "submission": "const int N = 50005;\n\nint n4;\nint n=50003, root=1;\nint arr[N];//\u4e0b\u6807\u4ece1\u5f00\u59cb\nint lazy[N<<2], mx[N<<2];\n\nvoid maintain(int cl, int cr, int p) {\n\tint cm = cl + (cr - cl) / 2;\n\tif (cl != cr && lazy[p]) {\n\t\tlazy[p * 2] = lazy[p];\n\t\tlazy[p * 2 + 1] = lazy[p];\n\t\tmx[p * 2] = lazy[p];\n\t\tmx[p * 2 + 1] = lazy[p];\n\t\tlazy[p] = 0;\n\t}\n}\nint query_max(int l, int r, int cl, int cr, int p) {\n\tif (l <= cl && cr <= r) return mx[p];\n\tint m = cl + (cr - cl) / 2;\n\tint max_num = INT_MIN;\n\tmaintain(cl, cr, p);\n\tif (l <= m) max_num = max(max_num , query_max(l, r, cl, m, p * 2));\n\tif (r > m) max_num = max(max_num , query_max(l, r, m + 1, cr, p * 2 + 1));\n\treturn max_num;\n}\nvoid range_set(int l, int r, int val, int cl, int cr, int p) {\n\tif (l <= cl && cr <= r) {\n\t\tlazy[p] = val;\n\t\tmx[p] = val;\n\t\treturn;\n\t}\n\tint m = cl + (cr - cl) / 2;\n\tmaintain(cl, cr, p);\n\tif (l <= m) range_set(l, r, val, cl, m, p * 2);\n\tif (r > m) range_set(l, r, val, m + 1, cr, p * 2 + 1);\n\tmx[p] = max(mx[p * 2] , mx[p * 2 + 1]);\n}\nvoid build(int l = 1, int r = n , int p = 1) {\n\tif (l == r) {\n\t\tmx[p] = arr[l];\n\t\treturn;\n\t}\n\tint m = l + (r - l) / 2;\n\tbuild(l, m, p * 2);\n\tbuild(m + 1, r, p * 2 + 1);\n\tmx[p] = max(mx[p * 2] , mx[p * 2 + 1]);\n}\nint query_max(int l, int r) {\n\treturn query_max(l, r, 1, n, root);\n}\nvoid range_set(int l, int r, int val) {\n\trange_set(l, r, val, 1, n, root);\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        memset(arr,0,sizeof(arr));build();\n        vector<bool> ans;\n        set<int> cut;cut.insert(1);cut.insert(50002);\n        for(auto&v:queries){\n            if(v[0]==1){\n                int p=v[1]+1;\n                cut.insert(p);\n                auto it=cut.find(p);auto pre=prev(it);auto nextIt = std::next(it);\n                //cout<<(*pre)+1<<\" \"<<p<<\" \"<<p+1<<\" \"<<*nextIt<<\"\\n\";\n                range_set((*pre)+1,p,p-*pre);\n                range_set(p+1,*nextIt,*nextIt-p);\n            }else{\n                int x=v[1]+1,sz=v[2];auto it=cut.lower_bound(x);\n                //cout<<*it<<\"-----\";\n                auto prevIt = --(it);\n                //cout<<*prevIt<<\" ********\";\n                //cout<<*prevIt<<\" \";\n                int temp=query_max(1,*prevIt);\n                //cout<<x - *prevIt<<\" \"<<temp;\n                if (max(x - *prevIt,temp) < sz) {\n                    ans.push_back(false);\n                } else {\n                    ans.push_back(true);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716652198.0
}