{
    "username": "iit2021201",
    "submission": "#define mod 1000000007;\nclass Solution {\npublic:\n    int rec(int index, int sum, int tot, map<int, int> &mp, int n, vector<vector<int>> &dp){\n        if(sum > tot) return 0;\n        if(index == n+1) return 1;\n        if(dp[index][sum] != -1) return dp[index][sum];\n        int ans = 0;\n        if(mp.find(index) == mp.end()){\n            for(int i = 0 ; i < index ; i++){\n                ans = (ans + rec(index+1, sum+i, tot, mp, n, dp)) % mod;\n            }\n        }\n        else{\n            if(mp[index] < sum) ans = 0;\n            else{\n                int add = mp[index]-sum;\n                if(add < index) ans = (ans + rec(index+1, mp[index], tot, mp, n, dp)) % mod;\n            }\n        }\n        return dp[index][sum] = ans;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        map<int, int> mp;\n        for(int i = 0 ; i < req.size() ; i++){\n            mp[req[i][0]+1] = req[i][1];\n        }\n        int tot = mp[n];\n        vector<vector<int>> dp(n+3, vector<int> (tot+3, -1));\n        return rec(1, 0, tot, mp, n, dp);\n    }\n};",
    "submit_ts": 1719070559.0
}