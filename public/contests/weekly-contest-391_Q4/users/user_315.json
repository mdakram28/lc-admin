{
    "username": "abcdhhhh",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points = [[i,x+y,x-y] for i,(x,y) in enumerate(points)]\n        a = sorted(points, key=lambda x:x[1])\n        b = sorted(points, key=lambda x:x[2])\n        r1 = max(a[-2][1] - a[0][1], b[-1][2] - b[0][2])\n        r2 = max(a[-1][1] - a[1][1], b[-1][2] - b[0][2])\n        r3 = max(a[-1][1] - a[0][1], b[-2][2] - b[0][2])\n        r4 = max(a[-1][1] - a[0][1], b[-1][2] - b[1][2])\n        ret = min(r1, r2, r3, r4)\n        # print(a,b)\n        # print(r1,r2,r3,r4)\n        if a[0][0]==b[0][0]:\n            ret = min(ret, max(a[-1][1]-a[1][1],b[-1][2]-b[1][2]))\n        if a[-1][0] == b[-1][0]:\n            ret = min(ret, max(a[-2][1]-a[0][1],b[-2][2]-b[0][2]))\n        if a[0][0] == b[-1][0]:\n            ret = min(ret, max(a[-1][1]-a[1][1],b[-2][2]-b[0][2]))\n        if a[-1][0] == b[0][0]:\n            ret = min(ret, max(a[-2][1]-a[0][1],b[-1][2]-b[1][2]))\n        return ret\n            \n            "
}