{
    "username": "weilunla",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int res = INT_MAX;\n        int m = grid.size(), n = grid[0].size();\n        int count = 0;\n        for(int i = 0; i < m / 2; i++){\n            for(int j = 0; j < n / 2; j++){\n                int temp[2] = {0};\n                temp[grid[i][j]]++;\n                temp[grid[m - i - 1][j]]++;\n                temp[grid[i][n - j -1]]++;\n                temp[grid[m - i - 1][n - j - 1]]++;\n                count += min(temp[0], temp[1]);\n            }\n        }\n        //cout<<count<<endl;\n        int pair1 = 0, pair0 = 0, diff = 0;\n        if(m % 2 == 1){\n            for(int l = 0, r = n - 1; l < r; l++, r--){\n                if(grid[m / 2][l] != grid[m / 2][r]) diff++;\n                else if(grid[m / 2][l] == 0) pair0++;\n                else pair1++;\n            }\n        }\n        if(n % 2 == 1){\n            for(int l = 0, r = m - 1; l < r; l++, r--){\n                if(grid[l][n / 2] != grid[r][n / 2]) diff++;\n                else if(grid[l][n / 2] == 0) pair0++;\n                else pair1++;\n            }\n        }\n        if(n % 2 == 1 && m % 2 == 1 && grid[m / 2][n / 2] == 1) count++;\n        count += diff;\n        //cout<<count<<endl;\n        if(pair1 % 2 != 0 && diff == 0){\n            count += 2;\n        }\n        return count;\n    }\n};",
    "submit_ts": "1722698809",
    "subm_id": "1343192536"
}