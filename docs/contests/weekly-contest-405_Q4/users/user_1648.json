{
    "username": "abhinavgpt",
    "submission": "class Trie {\n    int cost;\n    boolean isEnd;\n    HashMap<Character, Trie> map;\n    \n    public Trie() {\n        this.cost = -1;\n        this.isEnd = false;\n        this.map = new HashMap<>();\n    }\n    \n    public void insert(String word, int cost) {\n        Trie curr = this;\n        for(int i = 0; i < word.length(); i++) {\n            char ch = word.charAt(i);\n            if(!curr.map.containsKey(ch)) {\n                curr.map.put(ch, new Trie());\n            }\n            \n            curr = curr.map.get(ch);\n        }\n        \n        curr.isEnd = true;\n        if(curr.cost != -1) curr.cost = Math.min(cost, curr.cost);\n        else curr.cost = cost;\n    }\n    \n}\n\nclass Solution {\n    \n    \n    private int rec(Trie root, String target, int idx, int[] dp) {\n        if(idx == target.length()) return 0;\n        \n        Trie temp = root;\n        \n        if(dp[idx] != -1) return dp[idx];\n        \n        int ans = (int)1e9;\n        \n        for(int i = idx; i < target.length(); i++) {\n            char ch = target.charAt(i);\n            if(temp.map.containsKey(ch)) {\n                temp = temp.map.get(ch);\n                if(temp.isEnd) {\n                    ans = Math.min(ans, rec(root, target, i + 1, dp) + temp.cost);\n                }\n            } else break;\n        }\n        \n        return dp[idx] = ans;\n        \n    }\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        Trie root = new Trie();\n        for(int i = 0; i < words.length; i++) {\n            root.insert(words[i], costs[i]);\n        }\n        \n        int[] dp = new int[target.length()];\n        Arrays.fill(dp, -1);\n        \n        int ans = rec(root, target, 0, dp);\n        return ans == (int)1e9 ? -1 : ans;\n         \n    }\n}",
    "submit_ts": "1720323791",
    "subm_id": "1312384149"
}