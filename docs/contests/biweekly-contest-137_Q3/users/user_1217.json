{
    "username": "Maanas M Singh",
    "submission": "typedef pair<int, int> pii;\n\nbool check(pii &a, pii &b) {\n    if (a.first == b.first || a.second == b.second) {\n        return false;\n    }\n    return true;\n}\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n\n        vector<pair<long long, pii>> arr;\n\n        for (int i = 0; i < n; ++i) {\n            priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;\n\n            for (int j = 0; j < m; ++j) {\n                pq.push({board[i][j], j});\n                if (pq.size() > 3) {\n                    pq.pop();\n                }\n            }\n\n            while (pq.size()) {\n                auto [a, b] = pq.top();\n                pq.pop();\n                arr.push_back({a, {i, b}});\n            }\n        }\n\n        sort(arr.begin(), arr.end(), greater<>());\n        long long res = LLONG_MIN;\n\n        for (int i = 0; i < arr.size(); ++i) {\n            for (int j = i+1; j < arr.size(); ++j) {\n                if (!check(arr[i].second, arr[j].second)) {\n                    continue;\n                }\n\n                for (int k = j+1; k < arr.size(); ++k) {\n                    if (!check(arr[i].second, arr[k].second) || !check(arr[j].second, arr[k].second))  {\n                        continue;\n                    }\n                    res = max(res, arr[i].first + arr[j].first + arr[k].first);\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723910272",
    "subm_id": "1359223809"
}