{
    "username": "aksharye",
    "submission": "class Solution {\npublic:\n    int LC = 0;\n    int RC = 0;\n    int maxDist(vector<pair<int,int>>& points) {\n        vector<pair<int,int>> s;\n        vector<pair<int,int>> d;\n        \n        for (int i = 0; i < points.size(); i++) {\n            s.push_back({points[i].first + points[i].second, i});\n            d.push_back({points[i].first - points[i].second, i});\n        }\n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        \n        int d1 = s[s.size() - 1].first - s[0].first;\n        int d2 = d[d.size() - 1].first - d[0].first;\n        if (d1 > d2) {\n            LC = s[s.size()-1].second;\n            RC = s[0].second;\n        } else {\n            LC = d[d.size() - 1].second;\n            RC = d[0].second;\n        }\n        return max(d1, d2);\n    }\n    int minimumDistance(vector<vector<int>>& p) {\n        vector<pair<int,int>> points;\n        for (vector<int> v : p) points.push_back({v[0],v[1]});\n        sort(points.begin(), points.end(), [](pair<int,int> x, pair<int,int> y) {\n           if (x.first == y.first) {\n               return x.second < y.second;\n           }\n            return x.first < y.first;\n        });\n        \n        vector<pair<int,int>> points2;\n        for (pair<int,int> lawl : points) points2.push_back(lawl);\n        maxDist(points);\n\n        points.erase(points.begin() + LC);\n        points2.erase(points2.begin() + RC);\n        \n        \n        return min(maxDist(points),maxDist(points2));\n    }\n};"
}