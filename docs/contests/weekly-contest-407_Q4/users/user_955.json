{
    "username": "Voilet",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        for (int i = 0; i < n; i++) {\n            target[i] -= nums[i];\n        }\n        long ans = 0;\n\n        long pre = 0;\n        for (long x : target) {\n            if (x >= 0) {\n                pre = Math.max(pre, 0);\n                ans += Math.max(x -pre, 0);\n            } else {\n                pre = Math.min(pre, 0);\n                ans += Math.max(pre - x, 0);\n            }\n            pre = x;\n        }\n//\n//        Deque<Integer> st = new ArrayDeque<>();\n//        st.push(0);\n//        for (int i = 0; i < n; i++) {\n//            while (st.size() > 1 && target[i] < st.peek()) {\n//                st.pop();\n//            }\n//            ans += Math.max(0, target[i] - st.peek());\n//            st.push(target[i]);\n//        }\n        return ans;\n    }\n}",
    "submit_ts": "1721531544",
    "subm_id": "548386938"
}