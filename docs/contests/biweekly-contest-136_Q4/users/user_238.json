{
    "username": "ram-9",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& ed) {\n        int n = ed.size() + 1;\n        vector<vector<int>> e(n);\n        for (auto & ee : ed) {\n            int x = ee[0];\n            int y = ee[1];\n            e[x].push_back(y);\n            e[y].push_back(x);\n        }\n        \n        vector<int> dp(n);\n        vector<int> f(n);\n        vector<int> sp(n);\n        auto dfs = [&](auto &&self, int x, int fa) -> int {\n            f[x] = fa;\n            int res = dp[x];\n            for (int nxt : e[x]) {\n                if (nxt == fa) continue;\n                if (nxt & 1) {\n                    dp[nxt] = dp[x] + 1;\n                } else dp[nxt] = dp[x] + 2;\n                res = max(res, self(self, nxt, x));\n            }\n            sp[x] = res - dp[x];\n            return res;\n        };\n        \n        vector<int> ans(n);\n        ans[0] = dfs(dfs, 0, -1);\n        \n        auto reroot = [&](auto &&self, int x, int fa, int p) -> void {\n            ans[x] = sp[x];\n            if (fa & 1) p++;\n            else p += 2;\n            ans[x] = max(ans[x], p);\n            vector<int> a;\n            // cout << x << \" \" << p << \"\\n\";\n            for (int nxt : e[x]) {\n                if (nxt == fa) continue;\n                if (nxt & 1) {\n                    a.push_back(sp[nxt] + 1);\n                    ans[x] = max(ans[x], sp[nxt] + 1);\n                } else {\n                    a.push_back(sp[nxt] + 2);\n                    ans[x] = max(ans[x], sp[nxt] + 2);\n                }\n            }\n            int m = a.size();\n            vector<int> pre(m + 1, p);\n            vector<int> suf(m + 1, p);\n            int c = 0;\n            for (int i = 0; i < m; i++) {\n                cout << a[i] << \" \\n\"[i == m - 1];\n                pre[i + 1] = pre[i];\n                pre[i + 1] = max(pre[i + 1], a[i]);\n                suf[m - i - 1] = suf[m - i];\n                suf[m - i - 1] = max(suf[m - 1 - i], a[m - i - 1]);\n            }\n            c = 0;\n            for (int nxt : e[x]) {\n                if(nxt == fa) continue;\n                self(self, nxt, x, max(pre[c], suf[c + 1]));\n                c++;\n            }\n        };\n        reroot(reroot, 0, 0, -2);\n        return ans;\n    }\n};",
    "submit_ts": "1722699513",
    "subm_id": "552275979"
}