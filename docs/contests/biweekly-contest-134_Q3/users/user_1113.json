{
    "username": "Konsept",
    "submission": "impl Solution {\n    pub fn number_of_alternating_groups(colors: Vec<i32>, k: i32) -> i32 {\n        let total_colors = colors.len() as i32;\n        let mut group_count = 0;\n\n        if k == 1 {\n            return total_colors;\n        }\n\n        let mut current_alternating_length = 1;\n        let mut current_index = 1;\n        while current_index < total_colors + k - 1 {\n            let current_color_index = ((current_index % total_colors) + total_colors) % total_colors;\n            let previous_color_index = (((current_index - 1) % total_colors) + total_colors) % total_colors;\n\n            if colors[current_color_index as usize] != colors[previous_color_index as usize] {\n                current_alternating_length += 1;\n            } else {\n                current_alternating_length = 1;\n            }\n\n            if current_alternating_length >= k {\n                group_count += 1;\n            }\n\n            current_index += 1;\n        }\n\n        group_count\n    }\n}",
    "submit_ts": "1720279475",
    "subm_id": "1311752670"
}