{
    "username": "TonyYeh_",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        def C(n, k):\n            if k > n:\n                return 0\n            return math.factorial(n) // (math.factorial(k) * math.factorial(n - k))\n        def H(a, b):\n            return C(a+b-1, a-1)\n            \n        #  <= k <= 1e9\n        Pow2, Pos = [], []\n        for i in range(31):\n            Pow2.append(pow(2, i))\n            Pos.append(Pow2[-1]-i-1)\n\n        # print(Pow2)\n        # print(Pos)\n            \n        result = 0\n        for i in range(31):\n            if 0 <= k - Pos[i] <= i+1:\n                # print(i+1, i+1- k + Pos[i], C(i+1, i+1- k + Pos[i]))\n                result += C(i+1, i+1- k + Pos[i])\n        \n        return result",
    "submit_ts": 1716090471.0
}