{
    "username": "rohbat",
    "submission": "// configurations from  https://atcoder.jp/contests/abc347/editorial/9690\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& G) {\n        int R = G.size(), C = G[0].size();\n        \n        int dp[30][30][30][30];\n        memset(dp, 0, sizeof(dp));\n        \n        const auto get_area = [&](auto tlr, auto tlc, auto brr, auto brc) {\n            int mnr = R, mnc = C, mxr = 0, mxc = 0;\n            for (int r = tlr; r <= brr; ++r)\n                for (int c = tlc; c <= brc; ++c)\n                    if (G[r][c] == 1)\n                        mnr = min(mnr, r), mnc = min(mnc, c), mxr = max(mxr, r), mxc = max(mxc, c);\n            return mnr == R ? 0 : (mxr - mnr + 1) * (mxc - mnc + 1);\n        };\n        \n        for (int r1 = 0; r1 < R; ++r1) {\n            for (int c1 = 0; c1 < C; ++c1) {\n                for (int r2 = r1; r2 < R; ++r2) {\n                    for (int c2 = c1; c2 < C; ++c2) {\n                        dp[r1][c1][r2][c2] = get_area(r1, c1, r2, c2);\n                    }\n                }\n            }\n        }\n\n        \n        int res = R * C;\n        for (int r1 = 0; r1 < R - 2; ++r1) {\n            for (int r2 = r1 + 1; r2 < R - 1; ++r2) {\n                res = min(res, dp[0][0][r1][C - 1] + dp[r1 + 1][0][r2][C - 1] + dp[r2 + 1][0][R - 1][C - 1]);\n            }\n        }\n        \n        for (int r = 0; r < R - 1; ++r) {\n            for (int c = 0; c < C - 1; ++c) {\n                res = min(res, dp[0][0][r][C - 1] + dp[r + 1][0][R - 1][c] + dp[r + 1][c + 1][R - 1][C - 1]);\n            }\n        }\n        \n        for (int c = 0; c < C - 1; ++c) {\n            for (int r = 0; r < R - 1; ++r) {\n                res = min(res, dp[0][0][R - 1][c] + dp[0][c + 1][r][C - 1] + dp[r + 1][c + 1][R - 1][C - 1]);\n            }\n        }\n        \n        for (int c1 = 0; c1 < C - 2; ++c1) {\n            for (int c2 = c1 + 1; c2 < C - 1; ++c2) {\n                res = min(res, dp[0][0][R - 1][c1] + dp[0][c1 + 1][R - 1][c2] + dp[0][c2 + 1][R - 1][C - 1]);\n            }\n        }\n        \n        for (int r = 0; r < R - 1; ++r) {\n            for (int c = 0; c < C - 1; ++c) {\n                res = min(res, dp[0][0][r][c] + dp[0][c + 1][r][C - 1] + dp[r + 1][0][R - 1][C - 1]);\n            }\n        }\n        \n        for (int c = 0; c < C - 1; ++c) {\n            for (int r = 0; r < R - 1; ++r) {\n                res = min(res, dp[0][0][r][c] + dp[r + 1][0][R - 1][c] + dp[0][c + 1][R - 1][C - 1]);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1719113973.0
}