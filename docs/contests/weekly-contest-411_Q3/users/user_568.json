{
    "username": "bob314",
    "submission": "#include <string>\nusing namespace std;\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        string result;\n        \n        if (k == 1 || k == 3 || k == 9) {\n            // When k is 1, 3, or 9, return all 9s\n            result = string(n, '9');\n        } else if (k == 2) {\n            // When k is 2, return 899...998 (first and last digits are 8)\n            if (n == 1) {\n                result = \"8\";\n            } else {\n                result = \"8\" + string(n - 2, '9') + \"8\";\n            }\n        } else if (k == 4) {\n            // When k is 4, return 88 999...999 88 or special cases like 888\n            if (n == 1) {\n                result = \"8\";\n            } else if (n == 2 || n == 3) {\n                result = string(n, '8');  // 88 for n=2, 888 for n=3\n            } else {\n                result = \"88\" + string(n - 4, '9') + \"88\";\n            }\n        } else if (k == 5) {\n            // When k is 5, return 599...995 (first and last digits are 5)\n            if (n == 1) {\n                result = \"5\";\n            } else {\n                result = \"5\" + string(n - 2, '9') + \"5\";\n            }\n        } else if (k == 6) {\n            // When k is 6, different patterns based on odd/even n\n            if (n == 1) {\n                result = \"6\";\n            } else if (n % 2 == 0) {\n                // Even n: 8 999...999 77 999...999 8\n                if (n == 2) {\n                    result = \"66\";\n                } else if (n == 4) {\n                    result = \"8778\";\n                } else {\n                    result = \"8\" + string((n / 2) - 2, '9') + \"77\" + string((n / 2) - 2, '9') + \"8\";\n                }\n            } else {\n                // Odd n: 8 999...999 1 999...999 8\n                if (n == 3) {\n                    result = \"888\";\n                } else {\n                    result = \"8\" + string((n - 3) / 2, '9') + \"8\" + string((n - 3) / 2, '9') + \"8\";\n                }\n            }\n        } else if (k == 7) {\n            // When k is 7, consult specific arrays for odd and even n\n            if (n % 2 == 1) {  // Odd n\n                int index = (n - 1) / 2 % 6;\n                int oddArray[6] = {7, 5, 7, 4, 6, 4};  // Array for odd n\n                string mid = to_string(oddArray[index]);\n                result = string((n - 1) / 2, '9') + mid + string((n - 1) / 2, '9');\n            } else {  // Even n\n                int index = (n / 2 - 1) % 6;\n                string evenArray[6] = {\"77\", \"77\", \"99\", \"44\", \"44\", \"99\"};  // Array for even n\n                string mid = evenArray[index];\n                result = string((n / 2) - 1, '9') + mid + string((n / 2) - 1, '9');\n            }\n        } else if (k == 8) {\n            // When k is 8, return 888999...999888 or special cases like 888\n            if (n == 1) {\n                result = \"8\";\n            } else if (n == 2 || n == 3|| n == 4|| n == 5) {\n                result = string(n, '8');  // 88 for n=2, 888 for n=3\n            } else {\n                result = \"888\" + string(n - 6, '9') + \"888\";\n            }\n        } else {\n            // For all other cases, leave result empty (or handle as needed)\n            result = \"\"; // This leaves the space for all others, as instructed\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723952410",
    "subm_id": "1359795629"
}