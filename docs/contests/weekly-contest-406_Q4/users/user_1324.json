{
    "username": "sumitdrak",
    "submission": "class Solution {\npublic:\n    struct arr {\n    long long val;\n    int horv;\n    };\n\n    static bool compare(arr c, arr d) {\n        return c.val > d.val;\n    }\n    \n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<arr> cuts;\n\n    for (int i = 0; i < m - 1; ++i) {\n        cuts.push_back({horizontalCut[i], 1});\n    }\n\n    for (int i = 0; i < n - 1; ++i) {\n        cuts.push_back({verticalCut[i], 0});\n    }\n\n    sort(cuts.begin(), cuts.end(), compare);\n\n    int h = 0, v = 0;\n    long long cost = 0;\n\n    for (int i = 0; i < cuts.size(); ++i) {\n        if (cuts[i].horv == 1) { \n            cost += cuts[i].val * (v + 1);\n            h++;\n        } else {  \n            cost += cuts[i].val * (h + 1);\n            v++;\n        }\n    }\n\n    return cost;\n        \n    }\n};",
    "submit_ts": "1720926190",
    "subm_id": "1320278630"
}