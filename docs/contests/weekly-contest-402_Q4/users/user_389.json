{
    "username": "Jay_Dhanwalkar",
    "submission": "class SegmentTree {\nprivate:\n    vector<int> st;\n    vector<int> nums;\n    int n;\n\n    int build(int si, int ss, int se) {\n        if (ss == se) {\n            return st[si] = isPeak(ss) ? 1 : 0;\n        }\n        int mid = (ss + se) / 2;\n        return st[si] = build(2 * si + 1, ss, mid) + build(2 * si + 2, mid + 1, se);\n    }\n\n    int query(int si, int ss, int se, int qs, int qe) {\n        if (qs > se || qe < ss) return 0;\n        if (qs <= ss && se <= qe) return st[si];\n        int mid = (ss + se) / 2;\n        return query(2 * si + 1, ss, mid, qs, qe) + query(2 * si + 2, mid + 1, se, qs, qe);\n    }\n\n    void update(int si, int ss, int se, int idx) {\n        if (ss == se) {\n            st[si] = isPeak(idx) ? 1 : 0;\n            return;\n        }\n        int mid = (ss + se) / 2;\n        if (idx <= mid) {\n            update(2 * si + 1, ss, mid, idx);\n        } else {\n            update(2 * si + 2, mid + 1, se, idx);\n        }\n        st[si] = st[2 * si + 1] + st[2 * si + 2];\n    }\n\n    bool isPeak(int idx) {\n        if (idx <= 0 || idx >= n - 1) return false;\n        return nums[idx] > nums[idx - 1] && nums[idx] > nums[idx + 1];\n    }\n\npublic:\n    SegmentTree(const vector<int>& input) : nums(input) {\n        n = nums.size();\n        st.resize(4 * n, 0);\n        build(0, 0, n - 1);\n    }\n\n    int query(int l, int r) {\n        if (l >= r) return 0;\n        return query(0, 0, n - 1, l + 1, r - 1);\n    }\n\n    void update(int idx, int val) {\n        nums[idx] = val;\n        for(int i=max(1, idx - 1); i<=min(n - 2, idx + 1); ++i) {\n            update(0, 0, n - 1, i);\n        }\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        SegmentTree st(nums);\n        vector<int> result;\n        for (const auto& query : queries) {\n            if (query[0] == 1) {\n                result.push_back(st.query(query[1], query[2]));\n            } else if (query[0] == 2) {\n                st.update(query[1], query[2]);\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": 1718507399.0
}