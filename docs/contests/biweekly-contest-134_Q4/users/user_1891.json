{
    "username": "saulmaldonado",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        // check all subarrays`\n        int n = nums.size();\n\n        long long res = 0;\n\n        unordered_map<long long, long long> prev;\n\n        for (int i = 0; i < n; i++) {\n\n            unordered_map<long long, long long> curr; \n\n            // single member subarry is k\n            if (nums[i] == k) {\n                res++;\n            }\n\n            curr[nums[i]] = 1;\n\n            for (auto& [v, freq] : prev) {\n\n                long long x = v & nums[i];\n\n                if (x == k) {\n                    res += freq;\n                }\n\n                // curr[x] = number of subarray ending at nums[i] that == x\n                curr[x] += freq;\n            }\n            \n            prev = curr;\n        }\n\n        return res;\n    \n    }\n};",
    "submit_ts": "1720281377",
    "subm_id": "1311822887"
}