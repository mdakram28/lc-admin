{
    "username": "Puneet7373",
    "submission": "//puneet_73\n#include<bits/stdc++.h>\n#define ll long long\n#define in(t) ll int t ; cin>>t\n#define fore(i,x,n) for(int i=x;i<n;i++)\n#define rev(i,x,n) for(ll int i=n-1;i>=x;i--)\n#define all(v) v.begin(),v.en()\n#define invi(v,n) vector<ll int> v; fore(i,0,n){in(z);v.pb(z);}\n#define nsort(v) sort(v.begin(),v.en())\n#define rsort(v) sort(v.rbegin(),v.ren())\n#define pb push_back \n#define fi first\n#define se second\nusing namespace std;\n#define INF INT32_MAX \n\n// Segment Tree Template\nclass SegTree { \npublic: \n vector<int> tree; \n int n; \n \n SegTree(vector<int>& v) { \n    n = v.size(); \n    tree.resize(4 * n); \n    build(v, 0, 0, n - 1); \n } \n\n void build(vector<int>& v, int vert, int str, int en) { \n    if (str == en) { \n        tree[vert] = v[str]; \n    } \n    else { \n        int mid = (str + en) / 2; \n        build(v, 2 * vert + 1, str, mid); \n        build(v, 2 * vert + 2, mid + 1, en); \n        tree[vert] = tree[2 * vert + 1] & tree[2 * vert + 2]; \n    } \n } \n\n int query(int l, int r) { \n    return custum_query(0, 0, n - 1, l, r); \n } \n\n int custum_query(int vert, int str, int en, int l, int r) { \n    if (r < str || en < l) { \n        return INF; \n    } \n    if (l <= str && en <= r) { \n        return tree[vert]; \n    } \n    int mid = (str + en) / 2; \n    int p1 = custum_query(2 * vert + 1, str, mid, l, r); \n    int p2 = custum_query(2 * vert + 2, mid + 1, en, l, r); \n    return p1 & p2; \n } \n}; \n\nclass Solution {\npublic:\n int minimumDifference(vector<int>& v, int k) {\n    int n = v.size(); \n    int minn = 1e9; \n    SegTree S(v); \n    fore(i,0,n){ \n        int l = i - 1;\n        int r = n - 1; \n        while (r - l > 1) { \n            int mid = (l + r) / 2; \n            int cur_andd = S.query(i, mid);\n            if(cur_andd >= k){\n                l = mid; \n            }\n            else{ \n                r = mid;\n            } \n        } \n        if(l != i - 1){\n            int andd = S.query(i,l);\n            minn = min(minn, abs(andd - k)); \n        }\n        int l_andd = S.query(i,r);\n        minn = min(minn, abs(k - l_andd)); \n    } \n    return minn; \n }\n};",
    "submit_ts": "1717299537",
    "subm_id": "1274815946"
}