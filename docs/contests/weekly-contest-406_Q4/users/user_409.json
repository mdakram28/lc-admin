{
    "username": "bzh",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<>());\n        int i = 0, j = 0;\n        long long ans = 0;\n        while(i < m - 1 && j < n - 1){\n            if(verticalCut[j] < horizontalCut[i]){\n                ans += horizontalCut[i] * (j + 1);\n                i++;\n            }\n            else{\n                ans += verticalCut[j] * (i + 1);\n                j++;\n            }\n        }\n        // cout << ans << \" \"<< i << \" \" << j << \" \" << endl;\n        while(i < m - 1){\n            ans += horizontalCut[i] * n;\n            i++;\n        }\n        while(j < n - 1){\n            ans += verticalCut[j] * m;\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925447",
    "subm_id": "546439488"
}