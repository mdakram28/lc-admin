{
    "username": "Priyanshu_Patel_54",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n                sort(horizontalCut.begin(),horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(),verticalCut.end(),greater<int>());\n        \n        int v=1,h=1;\n        \n        int i=0,j=0;\n        long long cost = 0;\n        while (i<horizontalCut.size() && j<verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                cost += (horizontalCut[i]*h);\n                v++;\n                i++;\n            } else {\n                cost += (verticalCut[j]*v);\n                h++;\n                j++;\n            }\n        }\n        \n        while (i<horizontalCut.size()) {\n            cost += (horizontalCut[i]*h);\n            v++;\n            i++;\n        }\n        \n        while (j<verticalCut.size()) {\n            cost += (verticalCut[j]*v);\n            h++;\n            j++;\n        }\n        \n        return cost;\n    }\n};",
    "submit_ts": "1720925727",
    "subm_id": "1320264234"
}