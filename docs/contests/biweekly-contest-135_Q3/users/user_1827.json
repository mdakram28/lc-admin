{
    "username": "Saaii28",
    "submission": "class Solution {\npublic:\n    int solve(vector<int>& nums, int k, int n) {\n        map<int, vector<int>> mp;\n        vector<int> v;\n        int ll = *min_element(nums.begin(), nums.end());\n        int mnn = n;\n        int a, b, d, X;\n        for (int i = 0; i < n / 2; i++) {\n            a = nums[i];\n            b = nums[n - i - 1];\n            d = abs(a - b);\n            X = max({a, b, k - a, k - b});\n            v.push_back(X);\n            mp[d].push_back(X);\n        }\n        sort(v.begin(), v.end());\n        for (auto& fs : mp) {\n            int d = fs.first;\n            int gg = lower_bound(v.begin(), v.end(), d) - v.begin();\n            gg = gg * 2 + (n / 2 - gg);\n            for (auto& fss : fs.second) {\n                if (fss < d) {\n                    gg -= 2;\n                } else {\n                    gg -= 1;\n                }\n            }\n            mnn = min(mnn, gg);\n        }\n        return mnn;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        return solve(nums, k, nums.size());\n    }\n};",
    "submit_ts": "1721490157",
    "subm_id": "1327474673"
}