{
    "username": "zzczzc004",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hs = []\n        for i, h in enumerate(horizontalCut):\n            heappush(hs, (-h, i))\n\n        vs = []\n        for i, v in enumerate(verticalCut):\n            heappush(vs, (-v, i))\n\n        ans = 0\n        hc = 0\n        vc = 0\n        for _ in range(len(horizontalCut) + len(verticalCut)):\n            if hs and vs:\n                cost_h = (vc+1) * -hs[0][0]\n                cost_v = (hc+1) * -vs[0][0]\n                cost_a = cost_h + (hc+2) * (-vs[0][0])\n                cost_b = cost_v + (vc+2) * (-hs[0][0])\n                #if cost_h > cost_v or (cost_h == cost_v and -hs[0][0]>-vs[0][0]):\n                if cost_a < cost_b:\n                    # choose h\n                    hc += 1\n                    heappop(hs)\n                    ans += cost_h\n                else:\n                    vc += 1\n                    heappop(vs)\n                    ans += cost_v\n            elif hs:\n                cost_h = (vc+1) * -hs[0][0]\n                hc += 1\n                heappop(hs)\n                ans += cost_h\n            else:\n                cost_v = (hc+1) * -vs[0][0]\n                vc += 1\n                heappop(vs)\n                ans += cost_v\n        return ans\n                    ",
    "submit_ts": "1720925917",
    "subm_id": "546442828"
}