{
    "username": "kantnaveen",
    "submission": "class Solution {\n    public int minChanges(int[] a, int k) {\n        int n=a.length;\n        \n        HashMap<Integer,Integer>map=new HashMap<>();\n        int b[]=new int[n/2];\n        for(int i=0;i<n/2;i++){\n            int diff=Math.abs(a[i]-a[n-i-1]);\n            map.put(diff,map.getOrDefault(diff,0)+1);\n            int f1=Math.max(a[i],a[n-i-1])-0;\n            int f2=k-Math.min(a[i],a[n-i-1]);\n            b[i]=Math.max(f1,f2);\n        }\n        // System.out.println(Arrays.toString(b));\n        Arrays.sort(b);\n        int res=100000000;\n        for(int i:map.keySet()){\n            int total=bin(b,i);\n            // System.out.println(total+\" tt\");\n\n            int two=n/2-total;\n            two*=2;\n            total-=map.get(i);\n            res=Math.min(res,total+two);\n        }\n        \n        return res;\n    }\n    int bin(int b[],int ele){\n        int i=0;\n        int j=b.length-1;\n        int res=-1;\n        while(i<=j){\n            int mid=(i+j)>>1;\n            if(b[mid]>=ele){\n                j=mid-1;\n                res=mid;\n            }else{\n                i=mid+1;\n            }\n        }\n        return b.length-res;\n       \n    }\n}",
    "submit_ts": "1721490538",
    "subm_id": "1327485506"
}