{
    "username": "LuckyCong",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int len = board.length, leny = board[0].length;\n        int allLen = len * leny;\n        long ans = Long.MIN_VALUE;\n        List<Point> points = new ArrayList<>();\n        for (int i = 0; i < len; ++i) {\n            for (int j = 0; j < leny; ++j) {\n                points.add(new Point(i, j, board[i][j]));\n            }\n        }\n        Collections.sort(points);\n        long tmp = Long.MIN_VALUE;\n        for (int i = 0; i < allLen - 2; ++i) {\n            for (int j = i + 1; j < allLen - 1; ++j) {\n                if (points.get(i).x == points.get(j).x || points.get(i).y == points.get(j).y) {\n                    continue;\n                }\n                if (0L + points.get(i).value + points.get(j).value + points.get(j + 1).value <= ans) {\n                    break;\n                }\n                for (int k = j + 1; k < allLen; ++k) {\n                    if (points.get(k).x == points.get(i).x || points.get(k).y == points.get(i).y ||\n                      points.get(k).x == points.get(j).x || points.get(k).y == points.get(j).y) {\n                        continue;\n                    }\n                    tmp = 0L + points.get(i).value + points.get(j).value + points.get(k).value;\n                    if (tmp <= ans) {\n                        break;\n                    } else {\n                        ans = tmp;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n    public class Point implements Comparable<Point> {\n        public int x;\n        public int y;\n        public int value;\n        public Point(int x, int y, int value) {\n            this.x = x;\n            this.y = y;\n            this.value = value;\n        }\n        @Override\n        public int compareTo(Point other) {\n            return Integer.compare(other.value, this.value);\n        }\n    }\n}",
    "submit_ts": "1723909614",
    "subm_id": "556337151"
}