{
    "username": "jpOtyG4Mis",
    "submission": "class Solution {\npublic:\n    int mod = 1e9 + 7;\n    vector<vector<vector<int>>> memo;\n\n    int solve(vector<int> &nums, int idx, int prev1, int prev2) {\n        if (idx == nums.size()) {\n            return 1;\n        }\n        \n        if (memo[idx][prev1][prev2] != -1) {\n            return memo[idx][prev1][prev2];\n        }\n\n        int ans = 0;\n        for (int i = prev1; i <= nums[idx]; i++) {\n            if (nums[idx] - i <= prev2) {\n                ans = (ans + solve(nums, idx + 1, i, nums[idx] - i)) % mod;\n            }\n        }\n        \n        return memo[idx][prev1][prev2] = ans;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        memo.assign(n, vector<vector<int>>(51, vector<int>(51, -1))); // Adjust size based on constraints\n        \n        int ans = solve(nums, 0, 0, 50); // The max value of nums[i] is 50\n        return ans;\n    }\n};\n",
    "submit_ts": "1723346216",
    "subm_id": "1351572750"
}