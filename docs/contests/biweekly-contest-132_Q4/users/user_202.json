{
    "username": "zucrose",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int kn) {\n         int n=nums.size();\n        int dp[n+1][51],pm[n+1][51];\n        memset(dp,0,sizeof(dp));\n        memset(pm,0,sizeof(pm));\n        int ans=1;\n        unordered_map<int,int> m;\n        for(int i=0;i<n;i++){\n             dp[i][0]=1;\n                     \n                    for(int k=0;k<=min(50,kn);k++)\n                    {\n                    \n                    \n                    if(m[nums[i]]>0)\n                    dp[i][k]=max(dp[m[nums[i]]-1][k]+1,dp[i][k]);\n                    if(k>0&&i>0)\n                    dp[i][k]=max(pm[i-1][k-1]+1,dp[i][k]);\n                    //cout<<dp[i][k]<<\" \"<<i<<\" \"<<k<<endl;\n                    if(i>0)\n                    pm[i][k]=max(dp[i][k],pm[i-1][k]);\n                        else\n                    pm[i][k]=dp[i][k];\n                    ans=max(dp[i][k],ans);\n                        \n                }\n           // cout<<endl;\n            \n                           \n            \n            m[nums[i]]=i+1;\n        }\n       // cout<<endl<<endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717860906.0
}