{
    "username": "Ayu1_2",
    "submission": "class Solution {\npublic:\n    int isPossible(vector<vector<int>>& pre, int st, int en){\n        int x = 0;\n        for(int i=29;i>=0;i--){\n            int diff = pre[en+1][i] - pre[st][i];\n            if(diff == (en-st+1)){\n                x|= (1<<i);\n            }\n        }\n            \n        return x;\n    }\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<vector<int>> pre(n+1, vector<int>(30, 0));\n        for(int i=0;i<n;i++){\n            for(int j=29;j>=0;j--){\n                pre[i+1][j]+= pre[i][j];\n                if(nums[i]&(1<<j)){\n                    pre[i+1][j]++;\n                }\n                else{\n\n                }\n            }\n        }\n        \n        for(int i=0;i<n;i++){\n            if(nums[i]<k) continue;\n            int l=i, r=n-1, m;\n       \n            while(l<=r){\n                int m = (l+r) >> 1;\n                int x = isPossible(pre, i, m);\n                if(x > k){\n                    l = m+1;\n                }\n                else r=m-1;\n            }\n            int st = l;\n            if(st == n) continue;\n            int v1 = isPossible(pre, i, st);\n            if(v1 != k) continue;\n            l=i, r=n-1, m;\n            while(l<=r){\n                int m = (l+r) >> 1;\n                int x = isPossible(pre, i, m);\n                if(x >= k){\n                    l = m+1;\n                }\n                else r=m-1;\n            }\n            \n            ans+= (l-st);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720281552",
    "subm_id": "1311829461"
}