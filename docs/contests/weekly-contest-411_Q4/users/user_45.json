{
    "username": "Ajit",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<vector<int>> cnt(n+1, vector<int>(2));\n        vector<long long> pref(n+1);\n        vector<long long> ans;\n        for(int i=1; i<=n; i++) {\n            for(int j=0; j<2; j++) {\n                cnt[i][j] = cnt[i-1][j];\n            }\n            cnt[i][s[i-1]-'0']++;\n        }\n\n        auto sum = [&](int l, int r, int dig) -> int {\n            return cnt[r][dig] - cnt[l-1][dig];\n        };\n\n        auto solve = [&](int i) -> int {\n            int l = 0, r = i+1;\n            while (l+1 < r) {\n                int mid = (l+r) >> 1;\n                if (sum(mid, i, 0) <= k || sum(mid, i, 1) <= k) {\n                    r = mid;\n                }\n                else {\n                    l = mid;\n                }\n            }\n\n            return i-r+1;\n        };\n\n        for(int i=1; i<=n; i++) {\n            pref[i] = pref[i-1];\n            pref[i] += solve(i);\n        }\n\n        for(auto& q: queries) {\n            int l1 = q[0] + 1, r1 = q[1] + 1;\n            int l = q[0], r = q[1] + 2;\n            while (l+1 < r) {\n                int mid = (l+r) >> 1;\n                int len = pref[mid] - pref[mid-1];\n                if (mid-len+1 >= l1) {\n                    r = mid;\n                }\n                else {\n                    l = mid;\n                }\n            }\n\n            long long vals = (l-l1+1);\n            long long toAdd = (1LL * vals * (vals+1)) / 2;\n            long long temp = pref[r1] - pref[r-1] + toAdd;\n            ans.push_back(temp);  \n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723951521",
    "subm_id": "1359773520"
}