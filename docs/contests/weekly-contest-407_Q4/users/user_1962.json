{
    "username": "RedStarShining",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        if not nums and not target:\n            return 0\n\n        diffs = [nums[i] - target[i] for i in range(0, len(nums))]\n        # print(nums)\n        # print(target)\n        # print(diffs)\n        return self.count(diffs)\n\n    def count(self, diffs: List[int]) -> int:\n        result = 0\n        split_diffs = self.split_diffs(diffs)\n        i = 0\n        while True:\n            if i >= len(split_diffs):\n                break\n\n            each_diffs = split_diffs[i]\n            r, new_split_diffs = self.count_one_split(each_diffs)\n            result += r\n            split_diffs.extend(new_split_diffs)\n\n            i += 1\n        return result\n\n    def count_one_split(self, diffs: List[int]) -> Tuple[int, List[List[int]]]:\n        # same sign and no zero in diffs\n        result = 0\n        if diffs[0] > 0:\n            v = min(diffs)\n            result += v\n            diffs = [e - v for e in diffs]\n        else:\n            v = max(diffs)\n            result -= v\n            diffs = [e - v for e in diffs]\n        return result, self.split_diffs(diffs)\n\n    def split_diffs(self, diffs: List[int]) -> List[List[int]]:\n        results = []\n\n        current = []\n        for i in range(0, len(diffs)):\n            if diffs[i] == 0:\n                if current:\n                    results.append(current)\n                    current = []\n            elif diffs[i] > 0:\n                if current:\n                    if current[0] > 0:\n                        current.append(diffs[i])\n                    else:\n                        results.append(current)\n                        current = [diffs[i]]\n                else:\n                    current.append(diffs[i])\n            else:  # < 0\n                if current:\n                    if current[0] > 0:\n                        results.append(current)\n                        current = [diffs[i]]\n                    else:\n                        current.append(diffs[i])\n                else:\n                    current.append(diffs[i])\n        if current:\n            results.append(current)\n        return results",
    "submit_ts": "1721533513",
    "subm_id": "1328010656"
}