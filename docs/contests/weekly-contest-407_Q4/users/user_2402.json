{
    "username": "puliuren",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long res = 0;\n        for(int i = 0; i < n; ++i){\n            if(nums[i] != target[i]){\n                int j = i, ans = 0;\n                List<Integer> arr = new ArrayList<>();\n                if(nums[i] > target[i]){\n                    while(j < n && nums[j] > target[j]){\n                        arr.add(nums[j] - target[j]);\n                        ++j;\n                    }\n                }else{\n                    while(j < n && nums[j] < target[j]){\n                        arr.add(target[j] - nums[j]);\n                        ++j;\n                    }\n                }\n                int m = arr.size();\n                res += arr.get(0);\n                for(int k = 1; k < m; ++k){\n                    if(arr.get(k) > arr.get(k - 1))\n                        res += arr.get(k) - arr.get(k - 1);\n                } \n                i = j - 1;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721533127",
    "subm_id": "548396198"
}