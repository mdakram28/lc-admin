{
    "username": "wxy9018",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10 ** 9 + 7\n        \n        dp = [0] * 1002 # dp[i] is arr1[p] ending with num i \n        \n        for i in range(nums[0]+1):\n            dp[i] = 1\n        #print(dp)\n        for p in range(1, len(nums)):\n            summ = nums[p]\n            dp1 = [0] * 1002\n            \n            for i in range(summ + 1): # update dp1[i]\n                remaining = summ - i\n                \n                if i == 0:\n                    arr1_pre = 0\n                    arr2_pre = nums[p-1]\n                    if arr2_pre >= remaining:\n                        dp1[0] = dp[0]\n                \n                else:\n                    # check the effect of adding i\n                    dp1[i] = dp1[i-1]\n                    arr1_pre = i\n                    arr2_pre = nums[p-1] - i\n                    #print(p, i, arr1_pre, arr2_pre, remaining)\n                    if arr2_pre >= remaining:\n                        dp1[i] += dp[i]\n                    \n                    # check the effect of decreasing remaining\n                    arr2_pre = remaining\n                    arr1_pre = nums[p-1] - remaining\n                    if arr1_pre <= i and arr1_pre >= 0 and not (arr1_pre <= i-1 and arr2_pre >= remaining+1) and not (arr1_pre == i):\n                        dp1[i] += dp[arr1_pre]\n                        \n                    \n                \n                dp1[i] = dp1[i] % MOD\n            dp = dp1\n            \n            #print(dp)\n                \n            \"\"\"\n            for arr1_pre in range(i+1): # as we require non decreasing for arr1\n                arr2_pre = nums[p-1] - arr1_pre\n                if arr2_pre >= remaining: # we require non increasing for arr2\n                    dp1[i] += dp[arr1_pre]\n\n            \"\"\"\n                \n        return sum(dp) % MOD",
    "submit_ts": "1723347454",
    "subm_id": "1351599116"
}