{
    "username": "erdeq",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Create a list of all cuts with their respective costs and types\n        cuts = [(cost, 'h') for cost in horizontalCut] + [(cost, 'v') for cost in verticalCut]\n        \n        # Sort the cuts by cost in descending order\n        cuts.sort(reverse=True, key=lambda x: x[0])\n        \n        # Initialize counts of the remaining horizontal and vertical pieces\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        \n        # Initialize total cost\n        total_cost = 0\n        \n        # Process each cut in sorted order\n        for cost, cut_type in cuts:\n            if cut_type == 'h':\n                # If it's a horizontal cut, multiply cost by the number of vertical pieces\n                total_cost += cost * vertical_pieces\n                # Increment horizontal pieces count\n                horizontal_pieces += 1\n            else:\n                # If it's a vertical cut, multiply cost by the number of horizontal pieces\n                total_cost += cost * horizontal_pieces\n                # Increment vertical pieces count\n                vertical_pieces += 1\n        \n        return total_cost",
    "submit_ts": "1720924865",
    "subm_id": "1320234002"
}