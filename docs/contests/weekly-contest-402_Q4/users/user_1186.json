{
    "username": "k1384",
    "submission": "\n\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\n\ntemplate<typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        ordered_set<int>st;\n        \n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1])st.insert(i);\n        }\n        \n        vector<int>ans;\n        \n        for(auto it:queries){\n            int type=it[0];\n            if(type==1){\n                int  l=it[1],r=it[2];\n                if(l==r){\n                    ans.push_back(0);\n                    continue;\n                }\n                int curans=st.order_of_key(r)-st.order_of_key(l+1);\n                ans.push_back(curans);\n            }\n            else{\n                int idx=it[1], x=it[2];\n                int l=idx-1,r=idx+1;\n                if(l>=0&&r<n&&x>nums[l]&&x>nums[r]&&st.find(idx)==st.end()) st.insert(idx);\n                if(st.find(idx)!=st.end()&&(x<=nums[l]||x<=nums[r]))st.erase(idx);\n                if(l>=0&&st.find(l)!=st.end()&&x>=nums[l])st.erase(l);\n                if(r<n&&st.find(r)!=st.end()&&x>=nums[r])st.erase(r);\n                \n                if(l>0&&st.find(l)==st.end()&&x<nums[l]&&nums[l]>nums[l-1])st.insert(l);\n                if(r<n-1&&st.find(r)==st.end()&&x<nums[r]&&nums[r]>nums[r+1])st.insert(r);\n                nums[idx]=x;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508238.0
}