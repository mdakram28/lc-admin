{
    "username": "arushigarg02",
    "submission": "#include <vector>\n#include <iostream>\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(51, vector<int>(51, 0)));\n        \n        // Initialize for the first index\n        for (int a = 0; a <= nums[0]; ++a) {\n            int b = nums[0] - a;\n            if (b >= 0 && b <= 50) {\n                dp[0][a][b] = 1;\n            }\n        }\n        \n        // Fill DP table\n        for (int x = 1; x < n; ++x) {\n            for (int a = 0; a <= nums[x]; ++a) {\n                int b = nums[x] - a;\n                if (b < 0 || b > 50) continue;\n                \n                for (int preva = 0; preva <= nums[x-1]; ++preva) {\n                    int prevb = nums[x-1] - preva;\n                    if (prevb < 0 || prevb > 50) continue;\n                    \n                    if (preva <= a && prevb >= b) {\n                        dp[x][a][b] = (dp[x][a][b] + dp[x-1][preva][prevb]) % MOD;\n                    }\n                }\n            }\n        }\n        \n        // Sum up all valid configurations for the last index\n        int res = 0;\n        for (int a = 0; a <= nums[n-1]; ++a) {\n            int b = nums[n-1] - a;\n            if (b >= 0 && b <= 50) {\n                res = (res + dp[n-1][a][b]) % MOD;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1723346245",
    "subm_id": "1351573370"
}