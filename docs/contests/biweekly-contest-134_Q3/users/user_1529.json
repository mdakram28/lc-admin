{
    "username": "NeyNeel",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colours, int k) {\n        int n = colours.size();\n        int res = 0;\n        int i = 0;\n        while(i<n){\n            // cout<<i<<endl;\n            int j = i;\n            bool flag = colours[j]==0?true:false;\n            bool found = false;\n            j++;\n            int count = 1;\n            while(count<k){\n                if(flag && colours[j%n]==1){\n                    j++;\n                    count++;\n                    flag=!flag;\n                }else if(!flag && colours[j%n]==0){\n                    j++;\n                    count++;\n                    flag=!flag;\n                }else{\n                    break;\n                }\n            }\n            if(count==k){\n                // cout<<i<<endl;\n                found=true;\n            }\n            if(found){\n                while(i<n){\n                    if(colours[i]==colours[(i+k-1)%n] && (k&1)){\n                        res++;\n                        i++;\n                    }else if(colours[i]!=colours[(i+k-1)%n] && ((k&1)==0)){\n                        res++;\n                        i++;\n                    }else break;\n                }\n                i=i+k-1;\n            }else{\n                i=j;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720280381",
    "subm_id": "1311787264"
}