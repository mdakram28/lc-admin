{
    "username": "adityaverma5878",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> m;\n        vector<int> v;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++) {\n            int diff = abs(nums[i] - nums[n - i - 1]);\n\n            int X = max(\n                {nums[i], nums[n - i - 1], k - nums[i], k - nums[n - i - 1]});\n\n            m[diff].push_back(X);\n            v.push_back(X);\n        }\n\n        int ans = nums.size();\n        sort(v.begin(), v.end());\n\n        for (auto x : m) {\n            int temp = lower_bound(v.begin(), v.end(), x.first) - v.begin();\n            temp = temp * 2 + (n / 2 - temp);\n\n            for (auto X : x.second) {\n                if (X < x.first) {\n                    temp -= 2;\n                } else {\n                    temp -= 1;\n                }\n            }\n\n            ans = min(ans, temp);\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1721489862",
    "subm_id": "1327466048"
}