{
    "username": "New2World",
    "submission": "class Solution {\n    using vi = vector<int>;\n    map<vi,int> dp;\n    int dfs(int stair, int jump, int k, bool goback){\n        // cout << layer << \": at \" << stair << \" jump: \" << jump << endl;\n        vi key = {stair, jump, goback};\n        int ans = 0;\n        if(dp.count(key))\n            return dp[key];\n        if(stair == k){\n            ++ans;\n        }\n        if(goback)\n            ans += dfs(stair-1, jump, k, false);\n        if(stair+(1<<jump) > k+1)\n            return dp[key] = ans;\n        ans += dfs(stair + (1<<jump), jump+1, k, true);\n        return dp[key] = ans;\n    }\npublic:\n    int waysToReachStair(int k) {\n        int ans = dfs(1, 0, k, true);\n        return ans;\n    }\n};",
    "submit_ts": 1716088890.0
}