{
    "username": "saksham190804",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>> &g, int s, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> vis(n + 4, 0);\n        q.push(s);\n        vis[s] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : g[u]) {\n                if (!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n        return vis[t1] || vis[t2];\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>> &circles2) {\n        vector<pair<pair<int, int>, int>> c(circles2.size());\n        vector<vector<int>> g(circles2.size() + 4);\n        int n = circles2.size();\n\n        for (int i = 0; i < n; ++i) {\n            c[i].first.first = circles2[i][0];\n            c[i].first.second = circles2[i][1];\n            c[i].second = circles2[i][2];\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (c[i].first.first <= c[i].second) {\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n            if (X - c[i].first.first <= c[i].second) {\n                g[n + 2].push_back(i);\n                g[i].push_back(n + 2);\n            }\n            if (c[i].first.second <= c[i].second) {\n                g[n + 1].push_back(i);\n                g[i].push_back(n + 1);\n            }\n            if (Y - c[i].first.second <= c[i].second) {\n                g[n + 3].push_back(i);\n                g[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                double d = sqrt(pow(c[i].first.first - c[j].first.first, 2) + pow(c[i].first.second - c[j].first.second, 2));\n                int r_sum = c[i].second + c[j].second;\n                if (r_sum >= d) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n\n        int blocked = 0;\n        blocked = max(blocked, bfs(g, n, n + 1, n + 2, n + 4));\n        blocked = max(blocked, bfs(g, n + 3, n + 2, n + 1, n + 4));\n        if (blocked) return false;\n        return true;\n    }\n};\n",
    "submit_ts": "1722137280",
    "subm_id": "1335759244"
}