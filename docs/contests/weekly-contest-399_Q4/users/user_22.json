{
    "username": "OTTFF",
    "submission": "template<typename T> void cmin(T &x,const T &y) { if(y<x) x=y; }\ntemplate<typename T> void cmax(T &x,const T &y) { if(x<y) x=y; }\n\ntypedef long long LL;\n\nstruct SegT {\n    int n;\n    vector<vector<LL>> sum;\n    SegT(int n = 0) : n(n), sum(4, vector<LL>(n << 2)) {}\n\n    int P, V;\n    void update(int o, int l, int r) {\n        if (l == r) {\n          sum[3][o] = V;\n          return;\n        }\n        int mid = (l + r) >> 1;\n        if (P <= mid) update(o << 1, l, mid);\n        else update(o << 1 | 1, mid + 1, r);\n        \n        for (int i = 0; i < 4; i++) {\n            sum[i][o] = 0;\n        }\n        for (int ll = 0; ll < 2; ll++) {\n            for (int lr = 0; lr < 2; lr++) {\n                int stl = (ll | (lr << 1));\n                for (int rl = 0; rl < 2; rl++) {\n                    if (lr && rl) continue;\n                    for (int rr = 0; rr < 2; rr++) {\n                        int str = (rl | (rr << 1));\n                        int st = (ll | (rr << 1));\n                        \n                        cmax(sum[st][o], sum[stl][o << 1] + sum[str][o << 1 | 1]);\n                    }\n                }\n            }\n        }\n    }\n    \n    void update(int p, int v) {\n        P = p;\n        V = v;\n        update(1, 0, n - 1);\n    }\n    \n    LL query() {\n        LL ans = 0;\n        for (int i = 0; i < 4; i++) {\n            cmax(ans, sum[i][1]);\n        }\n        // cout << \"query = \" << ans << endl;\n        return ans;\n    }\n    \n    void show(int o, int l, int r) {\n        cout << \"o = \" << o << \", l = \" << l << \", r = \" << r << \":\";\n        cout << \"00 = \" << sum[0][o] << \", 10 = \" << sum[1][o] << \", 01 = \" << sum[2][o] << \", 11 = \" << sum[3][o] << endl;\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        show(o << 1, l, mid);\n        show(o << 1 | 1, mid + 1, r);\n    }\n    \n    void show() {\n        show(1, 0, n - 1);\n    }\n};\n\nclass Solution {\npublic:\n    int MO = 1e9 + 7;\n    int maximumSumSubsequence(vector<int>& a, vector<vector<int>>& qs) {\n        int n = a.size();\n        SegT segt(n);\n        for (int i = 0; i < n; i++) {\n            segt.update(i, a[i]);\n        }\n        \n        // segt.show();\n        \n        LL ans = 0;\n        for (auto&& q : qs) {\n            segt.update(q[0], q[1]);\n            // segt.show();\n            \n            ans += segt.query();\n            ans %= MO;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716692400.0
}