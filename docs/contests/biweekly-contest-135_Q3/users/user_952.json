{
    "username": "fishhhappy",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        diffs = [0] * (k + 2)\n        n = len(nums)\n\n        def update(left: int, right: int, change: int) -> None:\n            diffs[left] += change\n            diffs[right + 1] -= change\n\n        for i in range(n // 2):\n            other = n - i - 1\n            cur_diff = abs(nums[i] - nums[other])\n            max_diff = max(nums[i], k - nums[i], nums[other], k - nums[other])\n            \n            if 0 != cur_diff:\n                update(0, cur_diff - 1, 1)\n            if cur_diff != max_diff:\n                update(cur_diff + 1, max_diff, 1)\n            if max_diff != k:\n                update(max_diff + 1, k, 2)\n        \n        arr = [0] * (k + 1)\n        arr[0] = diffs[0]\n\n        for i in range(1, k + 1):\n            arr[i] = arr[i - 1] + diffs[i]\n        \n        return min(arr)",
    "submit_ts": "1721489286",
    "subm_id": "1327448705"
}