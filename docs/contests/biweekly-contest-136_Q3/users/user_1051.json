{
    "username": "Vaibhav0460",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int i, j, m=grid.size(), n=grid[0].size(), ans=0, x, p=0;\n        vector<vector<int>> vis(m, vector<int>(n, 0));\n        vector<int> k[4];\n        for(i=0;i<m;i++){\n            for(j=0;j<n;j++){\n                if(vis[i][j]==1) continue;\n                x=0;\n                if(grid[i][j]==1) x++;\n                if(grid[m-1-i][j]==1) x++;\n                if(grid[i][n-1-j]==1) x++;\n                if(grid[m-1-i][n-1-j]) x++;\n                if(x!=4 && x!=0){\n                    ans += min(4-x, x);\n                    if(i==(m-1-i) || j==(n-1-j)){\n                        p++;\n                        ans--;\n                    }\n                    if(x<2){\n                        grid[i][j] = 0;\n                        grid[m-1-i][j] = 0;\n                        grid[i][n-1-j] = 0;\n                        grid[m-1-i][n-1-j] = 0;\n                    }\n                    else{\n                        grid[i][j] = 1;\n                        grid[m-1-i][j] = 1;\n                        grid[i][n-1-j] = 1;\n                        grid[m-1-i][n-1-j] = 1;\n                    }\n                }\n                vis[i][j] = 1;\n                vis[m-1-i][j] = 1;\n                vis[i][n-1-j] = 1;\n                vis[m-1-i][n-1-j] = 1;\n\n\n\n                // if(grid[i][j]!=grid[m-1-i][j] && vis[i][j]==0 && grid[m-1-i][j]){\n                //     if(grid[i][j]!=grid[i][n-1-j]){\n                //         grid[i][j] ^= 1;\n                //         ans++;\n                //     }\n                //     else if(grid[m-1-i][j]!=grid[m-1-i][n-1-j]){\n                //         grid[m-1-i][j] ^= 1;\n                //         ans++;\n                //     }\n                //     else{\n                //         grid[i][j] ^= 1;\n                //         ans++;\n                //     }\n                // }\n                // if(grid[i][j]!=grid[i][n-1-j]){\n                //     if(grid[i][j]!=grid[i][n-1-j]){\n                //         grid[i][j] ^= 1;\n                //         ans++;\n                //     }\n                //     else if(grid[m-1-i][j]!=grid[m-1-i][n-1-j]){\n                //         grid[m-1-i][j] ^= 1;\n                //         ans++;\n                //     }\n                //     else{\n                //         grid[i][j] ^= 1;\n                //         ans++;\n                //     }\n                // }\n            }\n        }\n\n        int c=0;\n        for(auto it:grid) for(auto et:it) if(et==1) c++;\n        if(c%4==0) return ans;\n        if(c%4==1) return ans+1;\n        if(c%4==3){\n            if(p>0) return ans+1;\n            return ans+3;\n        }\n        if(p>0) return ans;\n        return ans+2;\n\n        // return min(r/2, c/2);\n    }\n};",
    "submit_ts": "1722698675",
    "subm_id": "1343188182"
}