{
    "username": "chuan-chih",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                sub = grid[i][j] + grid[i][~j] + grid[~i][j] + grid[~i][~j]\n                ans += min(sub, 4 - sub)\n        count = [0] * 3\n        if m % 2:\n            mid_row = grid[m // 2]\n            for i in range(n // 2):\n                count[mid_row[i] + mid_row[~i]] += 1\n        if n % 2:\n            if m % 2:\n                ans += grid[m // 2][n // 2]\n            for i in range(m // 2):\n                count[grid[i][n // 2] + grid[~i][n // 2]] += 1\n        ans += count[1]\n        if count[2] % 2 and not count[1]:\n            ans += 2\n        return ans",
    "submit_ts": "1722697658",
    "subm_id": "1343154243"
}