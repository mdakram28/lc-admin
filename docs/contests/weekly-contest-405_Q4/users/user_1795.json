{
    "username": "kasinathansj",
    "submission": "class Solution {\n    public int minimumCost(String s, String[] words, int[] costs) {\n        Trie tr = new Trie();\n        for(int i = 0 ; i < words.length ; i++){\n            tr.insert(words[i],costs[i]);\n        }\n        int dp[] = new int[s.length()];\n        Arrays.fill(dp,(int)1e9);\n        for(int i = 0 ; i < s.length() ; i++){\n            node temp = tr.root;\n            int j = i;\n            for( ; j >= 0 ; j--){\n                if(!temp.has(s.charAt(j)))break;\n                temp=temp.get(s.charAt(j));\n                if(temp.flag){\n                    if(j>0)\n                    dp[i] = Math.min(dp[i] , temp.val+dp[j-1]);\n                    else\n                    dp[i] = Math.min(dp[i],temp.val);    \n                }\n            }\n        }\n        // System.out.println(Arrays.toString(dp));\n        if(dp[s.length()-1]==(int)1e9)return -1; \n        return dp[s.length()-1];\n    }\n}\n\n\nclass node{\n    node[] link;\n    boolean flag ;\n\n    int val;\n    node(){\n        this.flag=false;\n        this.link = new node[26];\n        this.val = -1;\n    }\n\n    node get(char c){\n        return link[c-'a'];\n    }\n\n    boolean has(char c){\n        return link[c-'a']!=null;\n    }\n\n    void set(char c){\n        link[c-'a']=new node();\n    }\n}\n\n\nclass Trie{\n    node root;\n    int dp[];\n    Trie(){\n        this.root=new node();\n    }\n\n    void insert(String s , int val){\n        node temp = root;\n        for(int i = s.length()-1 ; i >= 0 ; i--){\n            if(!temp.has(s.charAt(i)))temp.set(s.charAt(i));\n            temp=temp.get(s.charAt(i));\n        }\n        temp.flag=true;\n        if(temp.val==-1)\n        temp.val=val;\n        else \n        temp.val = Math.min(temp.val,val);\n    }\n\n    int find(String s){\n        this.dp = new int[s.length()];\n        Arrays.fill(dp,-1);\n        int val = min(s,0);\n        if(val == (int)1e9)return -1;\n        return val;\n    }\n\n    int min(String s , int i ){\n        int p = i;\n        if(i==s.length())return 0;\n        if(dp[p]!=-1)return dp[i];\n        int ans = (int)1e9;\n        node temp = root;\n        for( ; i < s.length() ; i++){\n            if(!temp.has(s.charAt(i)))return ans;\n            temp=temp.get(s.charAt(i));\n            if(temp.flag){\n                ans = Math.min(ans , temp.val+min(s,i+1));\n            }\n        }\n        return dp[p] = ans;\n    }\n}",
    "submit_ts": "1720323910",
    "subm_id": "1312387025"
}