{
    "username": "sidg_24",
    "submission": "class Solution {\n    \n#define ll long long int\n#define vi vector<ll> \n#define all(vi) vi.begin(), vi.end() \n#define pi pair<ll,ll>\n#define ml map<ll,ll>\n#define sl set<ll>\n#define mx(vi) *max_element(all(vi))\n#define mi(vi) *min_element(all(vi))\n#define f first                                          \n#define se second \n#define mp make_pair\n#define FOR(i,a,b)  for(ll i=a ; i<b ; i++)\n#define pb push_back\n#define Sort(vi) sort(all(vi))\n#define vvi vector<vector<ll>>\n#define For(i,a,n) for(ll i=a;i<=n;i++)\n#define Forr(i,j,k) for(ll i=(j);i>=(k);i--)\n#define REP(i,n) For(i,0,n)\n#define rep(i,n) For(i,0,n-1)\n#define v_in(v,h,n) for(int i=h;i<n;i++)cin>>v[i]\n#define v_out(v,h,n) for(int i=h; i<n; i++)cout<<v[i]<<\" \"\n#define mods 1000000000\n \nvoid _print(ll x){cerr<<x;}  \nvoid _print(int x){cerr<<x;}  \nvoid _print(char x){cerr<<x;}   \nvoid _print(string x){cerr<<x;} \ntemplate <class T> void scan(vector<T> &v){ for (int i = 0; i < v.size(); i++) cin >> v[i]; }\ntemplate <class T> void print(vector<T> v){for (int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << endl;}\ntemplate<class T,class V> void _print(pair<T,V> p) {cerr<<\"{\"; _print(p.first);cerr<<\",\"; _print(p.second);cerr<<\"}\";}\ntemplate<class T>void _print(vector<T> v) {cerr<<\" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(set<T> v) {cerr<<\" [ \"; for (T i:v){_print(i); cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T, class V>void _print(set<T, greater<V>> v) {cerr<<\" [ \"; for (T i:v){_print(i); cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(multiset<T> v) {cerr<< \" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T,class V>void _print(map<T, V> v) {cerr<<\" [ \"; for(auto i:v) {_print(i);cerr<<\" \";} cerr<<\"]\";} \n \nll po(ll x, ll y, ll mod)\n{\n    ll res = 1;\n    if (x == 0) \n        return 0;\n    while (y > 0)\n    {\n        if (y & 1)\n        res = (res*x)%mod ;\n        y = y>>1;\n        x = (x*x)%mod ;\n    }\nreturn res%mod;\n}\n \n// vector<int> pdivisors(int n){\n//   vector<int>divisors;\n//   for(int i=2;i<=sqrt(n);i++){\n//     if(n%i==0 && prim(i)){\n//       divisors.push_back(i);\n//     }\n//   }\n//   return divisors;\n// }\n// vector<int>compdiv(int n){\n//   vector<int>divisors;\n//   for(int i=2;i<=sqrt(n);i++){\n//     if(n%i==0 && !prim(i)){\n//       divisors.push_back(i);\n//       if(i!=n/i && !prim(n/i)){\n//         divisors.push_back(n/i);\n//       }\n//     }\n//   }\n//   return divisors;\n// }\n \nint maxSubArraySum(vector<int>a, int size)\n{\n    int max_so_far = INT_MIN, max_ending_here = 0,\n        start = 0, end = 0, s = 0;\n \n    for (int i = 0; i < size; i++) {\n        max_ending_here += a[i];\n \n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n \n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n   return max_so_far;\n       \n}\n \n \nbool isPalindrome_string(string s){\n   ll n = s.size();\n   ll i=0,j=n-1;\n   while(i<=j){\n       if(s[i]==s[j])\n        {\n            i++;\n            j--;\n        }\n       else\n        {\n            return false;\n        }\n   }\nreturn true;\n}\nbool qt(int m,int n,int k,vi& v,vi& x)\n{\n    ll f1=INT_MAX;\n    For(i,0,n-2)\n    {\n        ll q=m,f2=0;\n        FOR(l,i,n)\n        {\n            if(v[l]>=q && x[l]<q)\n            {\n                f2=f2+abs(x[l]-q);\n                q=q-1;\n            }\n            else if(q<=x[l])\n            {\n                break;\n            }\n            else if(q>v[l])\n            {\n                f2=INT_MAX;\n                break;\n            }\n        }\n        f1=min(f1,f2);\n    }\n    if(f1<=k)\n    {\n        return true;\n    }\n    return false;\n}\nvoid threeSum(vector<ll>& nums) \n    {\n        ll n=nums.size();\n        vector<vector<ll>> a;\n        sort(nums.begin(),nums.end());\n        for(ll i=0;i<n;i++)\n        {\n            if(i!=0 && nums[i]==nums[i-1])\n            {\n                continue;\n            }\n            ll j=i+1;\n            ll k=n-1;\n            while(j<k)\n            {\n                if(nums[i]+nums[j]+nums[k]==0)\n                {\n                    a.push_back({nums[i],nums[j],nums[k]});\n                    j++;\n                    while(j<k && nums[j]==nums[j-1])\n                    {\n                        j++;\n                    }\n                }\n                else if(nums[i]+nums[j]+nums[k]<0)\n                {\n                    j++;\n                }\n                else\n                {\n                    k--;\n                }\n            }\n        }\n        if(!a.empty())\n        {\n            cout<<\"YES\"<<endl;\n        }\n        else\n        {\n            cout<<\"NO\"<<endl;\n        }\n    }\nvoid test()\n{\n    ll t,n,m,y,x1,y1,x2,y2,x3,y3,e,k;\n    cin>>n;\n    vi a;\n    e=INT_MIN,m=INT_MAX,k=0;\n    For(i,1,n)\n    {\n        ll c,d;\n        cin>>c>>d;\n        if(c==1)\n        {\n            e=max(e,d);\n        }\n        else if(c==2)\n        {\n            m=min(m,d);\n        }\n        else if(c==3)\n        {\n            \n        }\n\n        if(e>m)\n        {\n            swap(e,m);\n        }\n    }\n    cout<<k<<endl;;\n}\npublic:\n    long long countSubarrays(vector<int>& nums, int k) \n    {\n        int n=nums.size();\n        long long c=0;\n        map<long long,long long>m;\n        for(int j=0;j<n;j++)\n        {\n            map<long long,long long>y;\n            if(nums[j]==k)\n            {\n                c=c+1;\n            }\n            y[nums[j]]=1;\n            for(auto& [x,z]:m)\n            {\n                long long e=x&nums[j];\n                if(e==k)\n                {\n                    c=c+z;\n                }\n                y[e]=y[e]+z;\n            }\n            m=y;\n        }\n        return c;\n    }\n};",
    "submit_ts": "1720279268",
    "subm_id": "1311744410"
}