{
    "username": "TooMuchFreeTime",
    "submission": "class Solution {\npublic:\n    \n    //prev->0 i-1;\n    //prev->1 i+2^jump\n    map<vector<int>,int>mp;\n    \n    int helper(int i,int jump,int prev,int k){\n        if(i<0) return 0;\n        if(mp.count({i,jump,prev})) return mp[{i,jump,prev}];\n        if(i==k){\n            int ans = 0;\n            if(i>0 && prev==1){\n            ans = ans + helper(i-1,jump,0,k);            \n            }\n            int x = pow(2,jump);\n            if(i+x<=k+1){\n            ans = ans + helper(i+x,jump+1,1,k);            \n            }\n            return 1 + ans;\n        }\n        int ans = 0;\n        if(i>0 && prev==1){\n            ans = ans + helper(i-1,jump,0,k);            \n        }\n        int x = pow(2,jump);\n        if(i+x<=k+1){\n            ans = ans + helper(i+x,jump+1,1,k);            \n        }\n        return mp[{i,jump,prev}] = ans;\n    }\n    \n    int waysToReachStair(int k) {\n        mp.clear();\n        return helper(1,0,1,k);\n    }\n};",
    "submit_ts": "1716089029",
    "subm_id": "1261831048"
}