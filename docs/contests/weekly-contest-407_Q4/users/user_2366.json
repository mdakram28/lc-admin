{
    "username": "mkliac",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        // 1 1 1 2 1 2 1\n        // 1 -2 2\n        // while s.back() > i, s.pop\n        // if s.empty res += i \n        // else if i >= s.back() res += i - s.back()\n        // s.push\n        // 1 1 1\n        long long res = 0;\n        vector<long long> v;\n        for (int i = 0; i < nums.size(); i++) {\n            v.push_back(target[i]-nums[i]);\n        }\n        for (int i = 0; i < v.size();) {\n            int begin = i, end = i;\n            while (end < v.size() && (v[begin] < 0 && v[end] < 0 || v[begin] >= 0 && v[end] >= 0)) {\n                end++;\n            }\n            cout << begin << \" \" << end << endl;\n            res += helper(v, begin, end-1);\n            i = end;\n        }\n\n        return res;\n    }\n    // 0 3 -1 -9 3 1 5 3 4 2\n    // 3 \n    // 1 8\n    // 3 \n    // 4 \n    // 1\n    long long helper(vector<long long>& v, int begin, int end) {\n        vector<int> t;\n        for (int i = begin; i <= end; i++)\n            t.push_back(abs(v[i]));\n        stack<int> s;\n        long long res = 0;\n        for (int i = 0; i < t.size(); i++) {\n            bool tf = false;\n            while (!s.empty() && s.top() > t[i]) {\n                s.pop();\n                tf = true;\n            }\n            if (s.empty()) {\n                if (!tf)\n                    res += t[i];\n            } else {\n                if (!tf)\n                    res += t[i] - s.top();\n            }\n            s.push(t[i]);\n            // cout << res << endl;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721533687",
    "subm_id": "1328014456"
}