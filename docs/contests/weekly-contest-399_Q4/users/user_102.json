{
    "username": "koseiarima",
    "submission": "#define ll long long \nstruct comp\n{\n    ll none,first,last,both;\n};\nstruct comp seg[200005];\nvoid build(ll v,ll l,ll r,vector <int> &nums)\n{\n    if(l==r)\n    {\n        seg[v].none = seg[v].first = seg[v].last = 0;\n        seg[v].both = max(0,nums[l]);\n        return;\n    }\n    ll mid = (l+r)/2;\n    build(2*v,l,mid,nums);\n    build(2*v+1,mid+1,r,nums);\n    seg[v].none = max({seg[2*v].none+seg[2*v+1].none,seg[2*v].last+seg[2*v+1].none,seg[2*v].none+seg[2*v+1].first});\n    seg[v].first = max({seg[2*v].first+seg[2*v+1].first,seg[2*v].first+seg[2*v+1].none,seg[2*v].both+seg[2*v+1].none});\n    seg[v].last = max({seg[2*v].none+seg[2*v+1].last,seg[2*v].last+seg[2*v+1].last,seg[2*v].none+seg[2*v+1].both});\n    seg[v].both = max({seg[2*v].first+seg[2*v+1].last,seg[2*v].first+seg[2*v+1].both,seg[2*v].both+seg[2*v+1].last});\n}\nvoid update(ll v,ll l,ll r,ll ind,ll val,vector <int> &nums)\n{\n    if(l==r)\n    {\n        nums[l] = val;\n        seg[v].none = seg[v].first = seg[v].last = 0;\n        seg[v].both = max(0,nums[l]);\n        return;\n    }\n    ll mid = (l+r)/2;\n    if(ind<=mid)\n    {\n        update(2*v,l,mid,ind,val,nums);\n    }\n    else\n    {\n        update(2*v+1,mid+1,r,ind,val,nums);\n    }\n    seg[v].none = max({seg[2*v].none+seg[2*v+1].none,seg[2*v].last+seg[2*v+1].none,seg[2*v].none+seg[2*v+1].first});\n    seg[v].first = max({seg[2*v].first+seg[2*v+1].first,seg[2*v].first+seg[2*v+1].none,seg[2*v].both+seg[2*v+1].none});\n    seg[v].last = max({seg[2*v].none+seg[2*v+1].last,seg[2*v].last+seg[2*v+1].last,seg[2*v].none+seg[2*v+1].both});\n    seg[v].both = max({seg[2*v].first+seg[2*v+1].last,seg[2*v].first+seg[2*v+1].both,seg[2*v].both+seg[2*v+1].last});\n}\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        for(int i=0;i<4*n;i++)\n        {\n            seg[i].none = 0,seg[i].last = 0,seg[i].first = 0,seg[i].both = 0;\n        }\n        build(1,0,n-1,nums);\n        ll q = queries.size();\n        ll sum = 0;\n        for(ll i=0;i<q;i++)\n        {\n            update(1,0,n-1,queries[i][0],queries[i][1],nums);\n            sum+= max({seg[1].none,seg[1].first,seg[1].last,seg[1].both});\n            sum = sum%1000000007;\n        }\n        int ans = sum;\n        return ans;\n    }\n};",
    "submit_ts": 1716693236.0
}