{
    "username": "Tikam_Gupta",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int MOD = 1000000007;\n        int MAX_INV = 400;\n        int m = requirements.size();\n        unordered_map<int, int> mp;\n        for (auto req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> cnts(n + 1, vector<long long>(MAX_INV + 1, 0));\n        cnts[0][0] = 1;\n\n        for (int len = 1; len <= n; len++) {\n            for (int inverse = 0; inverse <= MAX_INV; inverse++) {\n                for (int newPos = 0; newPos < len; newPos++) {\n                    if (inverse - newPos >= 0) {\n                        cnts[len][inverse] = (cnts[len][inverse] + cnts[len - 1][inverse - newPos]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(len) != mp.end()) {\n                int target = mp[len];\n                for (int inverse = 0; inverse <= MAX_INV; inverse++) {\n                    if (inverse != target) {\n                        cnts[len][inverse] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (long long cnt : cnts[n]) {\n            ans = (ans + cnt) % MOD;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719071786.0
}