{
    "username": "chienvaicak",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> mp;\n        map<int, int> tolerate;\n        for (int i = 0; i < n / 2; i++) {\n            int diff = abs(nums[i] - nums[n - i - 1]);\n            mp[diff]++;\n            tolerate[min(min(nums[i], k - nums[i]), min(nums[n - i - 1], k - nums[n - i - 1]))]++;\n        }\n        int m = INT_MAX;\n        for (auto diff : mp) {\n            int change = n / 2 - diff.second;\n            for (auto it = tolerate.rbegin(); it != tolerate.rend(); it++) {\n                if (it->first + diff.first > k) change += it->second;\n                else break;\n            }\n            m = min(m, change);\n        }\n        return m;\n    }\n};",
    "submit_ts": "1721489917",
    "subm_id": "1327467594"
}