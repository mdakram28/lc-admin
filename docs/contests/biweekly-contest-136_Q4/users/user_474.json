{
    "username": "infinempty",
    "submission": "class Solution {\npublic:\n    void dfs1(vector<vector<int> > &G,vector<int>&dp,vector<int>&dp2,int now,int fa){\n        dp[now] = 0;\n        for(auto to:G[now]){\n            if(to == fa){\n                continue;\n            }\n            dfs1(G,dp,dp2,to,now);\n            int plus = 1+int(to%2 == 0);\n            if(dp[to]+plus > dp[now]){\n                dp2[now] = dp[now];\n                dp[now] = dp[to] + plus;\n            }else{\n                dp2[now] = max(dp2[now],dp[to]+plus);\n            }\n        }\n    }\n    void dfs2(vector<vector<int> > &G,vector<int>&dp,vector<int>&dp2,vector<int> &ans, int now,int fa,int fa_val){\n        ans[now] = max(dp[now], fa_val);\n        for(auto to:G[now]){\n            if(to == fa)continue;\n            int plus_son = 1 + int(to%2 == 0);\n            int plus = 1 + int(now%2 == 0);\n            if(dp[to]+plus_son == dp[now]){\n                dfs2(G,dp,dp2,ans,to,now,max(dp2[now],fa_val)+plus);\n            }else{\n                dfs2(G,dp,dp2,ans,to,now,max(dp[now],fa_val)+plus);\n            }\n            \n        }\n\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size();\n        vector<vector<int> > G(n+1);\n        vector<int> dp(n+1),ans(n+1),dp2(n+1);\n        for(auto &i:edges){\n            int u=i[0],v=i[1];\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n        dfs1(G,dp,dp2,0,-1);\n        //return dp2;\n        dfs2(G,dp,dp2,ans,0,-1,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722699756",
    "subm_id": "552277021"
}