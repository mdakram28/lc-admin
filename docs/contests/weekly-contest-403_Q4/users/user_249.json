{
    "username": "jsood99",
    "submission": "class Solution {\npublic:\n    \n    int minimumSum(vector<vector<int>>& grid, int st_x, int en_x, int st_y, int en_y) {\n        \n        if(en_x < st_x || en_y < st_y) return 0;\n        \n        int l = st_x, r = en_x, t = st_y, b = en_y;\n        \n        //left\n        while(l <= r) {\n            bool flag = false;\n            for(int i = st_y; i <= en_y; ++i) {\n                if(grid[l][i] == 1){\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag) l++;\n            else break;\n        }\n        \n        //right\n        while(r >= l) {\n            bool flag = false;\n            for(int i = st_y; i <= en_y; ++i) {\n                if(grid[r][i] == 1){\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag) r--;\n            else break;\n        }\n        \n        //top\n        while(t <= b) {\n            bool flag = false;\n            for(int i = st_x; i <= en_x; ++i) {\n                if(grid[i][t] == 1){\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag) t++;\n            else break;\n        }\n        \n        //bottom\n        while(b >= t) {\n            bool flag = false;\n            for(int i = st_x; i <= en_x; ++i) {\n                if(grid[i][b] == 1){\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag) b--;\n            else break;\n        }\n        \n        return (r-l+1)*(b-t+1);\n    }\n        \n    int minimumSum(vector<vector<int>>& grid) {\n        \n        int n = grid.size();\n        int m = grid[0].size();\n        \n        //case1\n        int res1 = INT_MAX;\n        for(int x1 = 0; x1 < n; ++x1) {\n            for(int x2 = x1+1; x2 < n; ++x2) {\n                int r1 = minimumSum(grid, 0, x1, 0, m-1);\n                int r2 = minimumSum(grid, x1+1, x2, 0, m-1);\n                int r3 = minimumSum(grid, x2+1, n-1, 0, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res1 = min(res1, r1+r2+r3);\n            }\n        }\n        \n        //case2\n        int res2 = INT_MAX;\n        for(int y1 = 0; y1 < m; ++y1) {\n            for(int y2 = y1+1; y2 < m; ++y2) {\n                int r1 = minimumSum(grid, 0, n-1, 0, y1);\n                int r2 = minimumSum(grid, 0, n-1, y1+1, y2);\n                int r3 = minimumSum(grid, 0, n-1, y2+1, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res2 = min(res2, r1+r2+r3);\n            }\n        }\n        \n        //case3\n        int res3 = INT_MAX;\n        for(int x1 = 0; x1 < n; ++x1) {\n            for(int y1 = 0; y1 < m; ++y1) {\n                int r1 = minimumSum(grid, 0, x1, 0, m-1);\n                int r2 = minimumSum(grid, x1+1, n-1, 0, y1);\n                int r3 = minimumSum(grid, x1+1, n-1, y1+1, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res3 = min(res3, r1+r2+r3);\n            }\n        }\n        \n        //case4\n        int res4 = INT_MAX;\n        for(int x1 = 0; x1 < n; ++x1) {\n            for(int y1 = 0; y1 < m; ++y1) {\n                int r1 = minimumSum(grid, 0, x1, 0, y1);\n                int r2 = minimumSum(grid, 0, x1, y1+1, m-1);\n                int r3 = minimumSum(grid, x1+1, n-1, 0, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res4 = min(res4, r1+r2+r3);\n            }\n        }\n        \n        //case5\n        int res5 = INT_MAX;\n        for(int x1 = 0; x1 < n; ++x1) {\n            for(int y1 = 0; y1 < m; ++y1) {\n                int r1 = minimumSum(grid, 0, n-1, 0, y1);\n                int r2 = minimumSum(grid, 0, x1, y1+1, m-1);\n                int r3 = minimumSum(grid, x1+1, n-1, y1+1, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res5 = min(res5, r1+r2+r3);\n            }\n        }\n        \n        //case6\n        int res6 = INT_MAX;\n        for(int x1 = 0; x1 < n; ++x1) {\n            for(int y1 = 0; y1 < m; ++y1) {\n                int r1 = minimumSum(grid, 0, x1, 0, y1);\n                int r2 = minimumSum(grid, x1+1, n-1, 0, y1);\n                int r3 = minimumSum(grid, 0, n-1, y1+1, m-1);\n                \n                if(r1 == 0 || r2 == 0 || r3 == 0) continue;\n                res6 = min(res6, r1+r2+r3);\n            }\n        }\n        \n        \n        return min(res1, min(res2, min(res3, min(res4, min(res5, res6)))));\n        \n    }\n};",
    "submit_ts": "1719113597",
    "subm_id": "1297328911"
}