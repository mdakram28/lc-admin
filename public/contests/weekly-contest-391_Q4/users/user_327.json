{
    "username": "vinayaksingh809",
    "submission": "class Solution {\npublic:\n    \n    int sol(vector<vector<int>>& A, int n)\n    {\n        vector<pair<int,int>> V(n), V1(n);\n        for (int i = 0; i < n; i++) {\n            V[i] = {A[i][0] + A[i][1],i};\n            V1[i] = {A[i][0] - A[i][1],i};\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        \n        int i1=V.front().second,i2=V.back().second,i3=V1.front().second,i4=V1.back().second;\n        \n        int max1 = max(((V.back().second==i1)?V[n-2].first:V.back().first)-((V.front().second==i1)?V[1].first:V[0].first),\n                      ((V1.back().second==i1)?V1[n-2].first:V1.back().first)-((V1.front().second==i1)?V1[1].first:V1[0].first));\n        \n        int max2 = max(((V.back().second==i2)?V[n-2].first:V.back().first)-((V.front().second==i2)?V[1].first:V[0].first),\n                      ((V1.back().second==i2)?V1[n-2].first:V1.back().first)-((V1.front().second==i2)?V1[1].first:V1[0].first));\n        \n        int max3 = max(((V.back().second==i3)?V[n-2].first:V.back().first)-((V.front().second==i3)?V[1].first:V[0].first),\n                      ((V1.back().second==i3)?V1[n-2].first:V1.back().first)-((V1.front().second==i3)?V1[1].first:V1[0].first));\n        \n        int max4 = max(((V.back().second==i4)?V[n-2].first:V.back().first)-((V.front().second==i4)?V[1].first:V[0].first),\n                      ((V1.back().second==i4)?V1[n-2].first:V1.back().first)-((V1.front().second==i4)?V1[1].first:V1[0].first));\n\n        // int max1 = max(V.back() - V.front(), V1.back() - V1.front());\n        \n        // cout<<max1<<\" \"<<max2<<\" \"<<max3;\n        return min({max1,max2,max3,max4});\n    }\n    int minimumDistance(vector<vector<int>>& p) {\n        int n=p.size();\n        return sol(p,n);\n    }\n};"
}