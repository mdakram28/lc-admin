{
    "username": "hoanghonghieu",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        int minOp = n / 2; \n        int op = n / 2;\n        map<int, int> events;\n        for (int i = 0; i * 2 < n; i++) {\n            int l = nums[i];\n            int r = nums[n - 1 - i];\n            if (l > r) swap(l, r);\n\n            events[r - l] += -1;\n            events[r - l + 1] += 1;\n            events[max(k - l, r) + 1] += 1;\n        }\n\n        for (auto [value, cost] : events) {\n            op += cost;\n            minOp = min(minOp, op);\n        }\n        return minOp;\n    }\n};",
    "submit_ts": "1721488418",
    "subm_id": "1327421598"
}