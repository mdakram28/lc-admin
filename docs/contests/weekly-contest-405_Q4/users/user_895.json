{
    "username": "lianglia",
    "submission": "class Solution {\n    vector<int> h;\n    string target;\n    vector<string> words;\n    vector<int> costs;\n    struct Node {\n        Node* next[26];\n        int c = INT_MAX;\n        bool is_end = false;\n        Node () {\n            for (int i = 0; i < 26; ++i) next[i] = nullptr;\n        }\n    };\n    Node* head;\npublic:\n    int minimumCost(string _target, vector<string>& _words, vector<int>& _costs) {\n        target = _target;\n        words = _words;\n        costs = _costs;\n\n        h.resize(target.size(), -1);\n        build_tri();\n        int res = dfs(0);\n        if (res > 1e9) return -1;\n        return res;\n    }\n\n    void build_tri() {\n        head = new Node();\n        for (int i = 0; i < words.size(); ++i) {\n            string w = words[i];\n            auto* p = head;\n            for (char ch : w) {\n                if (p->next[ch - 'a'] == nullptr) {\n                    p->next[ch - 'a'] = new Node();\n                }\n                p = p->next[ch - 'a'];\n            }\n            p->c = min(p->c, costs[i]);\n            p->is_end = true;\n        }\n    }\n\n    int dfs(int u) {\n        if (u == target.size()) return 0;\n        if (h[u] >= 0) return h[u];\n\n        auto* p = head;\n        int res = INT_MAX / 2;\n        for (int i = u; i < target.size(); ++i) {\n            int j = target[i] - 'a';\n            p = p->next[j];\n            if (!p) break;\n            if (p->is_end) {\n                res = min(res, p->c + dfs(i + 1));\n            }\n        }\n        h[u] = res;\n        return res;\n    }\n};",
    "submit_ts": "1720322446",
    "subm_id": "1312350149"
}