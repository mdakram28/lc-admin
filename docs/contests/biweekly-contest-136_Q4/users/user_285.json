{
    "username": "Assassin-Killer",
    "submission": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nclass Solution {\n\n    private List<Integer>[] g;\n    private int n;\n    private int[][] rrc;\n    private int[][] ch1;\n    private int[] ffa;\n    private int[] ans;\n\n    public int[] timeTaken(int[][] edges) {\n        n = edges.length + 1;\n        ans = new int[n];\n        g = new ArrayList[n];\n        Arrays.setAll(g, e -> new ArrayList<>());\n\n        rrc = new int[n][2];\n\n        ffa = new int[n];\n        ch1 = new int[n][2];\n        for (int[] e : edges) {\n            int x = e[0], y = e[1];\n            g[x].add(y);\n            g[y].add(x);\n        }\n        ans[0] = dfs(0, -1) - 2;\n        for (int y : g[0]) {\n            dfs1(y, 0);\n        }\n        return ans;\n\n    }\n\n    private void dfs1(int x, int fa) {\n        int mx = 0;\n        int ff = fa % 2 == 0 ? 2 : 1;\n        if (rrc[fa][0] != x) {\n            mx = Math.max(mx, ch1[fa][0] + ff);\n        } else {\n            mx = Math.max(mx, ch1[fa][1] + ff);\n        }\n        mx = Math.max(mx, ffa[fa] + ff);\n        ffa[x] = mx;\n\n        mx = Math.max(mx, ch1[x][0]);\n        ans[x] = mx;\n\n\n\n        for (int y : g[x]) {\n            if (y == fa) continue;\n            dfs1(y, x);\n        }\n    }\n\n    private int dfs(int x, int fa) {\n        int mx = 0, id = -1;\n        int tmx = 0, tid = -1;\n        for (int y : g[x]) {\n            if (y == fa) continue;\n            int tmp = dfs(y, x);\n            if (tmp >= mx) {\n                tmx = mx;\n                tid = id;\n                mx = tmp;\n                id = y;\n            } else if (tmp >= tmx) {\n                tmx = tmp;\n                tid = y;\n            }\n        }\n        rrc[x][0] = id;\n        rrc[x][1] = tid;\n        ch1[x][0] = mx;\n        ch1[x][1] = tmx;\n        return x % 2 == 0 ? 2 + mx : 1 + mx;\n    }\n}",
    "submit_ts": "1722699901",
    "subm_id": "552277609"
}