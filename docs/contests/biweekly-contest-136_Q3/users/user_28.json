{
    "username": "mikeac",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = mid = ms = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                cnt = grid[i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j]\n                ans += min(cnt, 4 - cnt)\n        \n        if n & 1:\n            for j in range(m // 2):\n                if grid[n // 2][j] == grid[n // 2][m - 1 - j]:\n                    if grid[n // 2][j] == 1:\n                        ms += 2\n                else:\n                    mid += 1\n        if m & 1:\n            for i in range(n // 2):\n                if grid[i][m // 2] == grid[n - 1 - i][m // 2]:\n                    if grid[i][m // 2] == 1:\n                        ms += 2\n                else:\n                    mid += 1\n\n        ans += mid\n        if ms % 4 and mid == 0:\n            ans += 2\n\n        if n & 1 and m & 1:\n            ans += grid[n // 2][m // 2]\n        \n        return ans",
    "submit_ts": "1722696761",
    "subm_id": "552262713"
}