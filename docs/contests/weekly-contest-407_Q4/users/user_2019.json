{
    "username": "fswuwei",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(const vector<int>& nums, const vector<int>& target) {\n        long long res = 0;\n        int n = nums.size();\n        stack<int> stk;\n        int last_flag = 0;\n        for (int i = 0; i < n; i++) {\n            int num = nums[i] - target[i];\n            int flag = 0;\n            if (num < 0) {\n                flag = -1;\n            }\n            if (num > 0) {\n                flag = 1;\n            }\n            if (flag * last_flag <= 0) {\n                if (!stk.empty()) {\n                    res += abs(stk.top());\n                }\n                while (!stk.empty()) {\n                    stk.pop();\n                }\n                stk.push(num);\n            } else {\n                bool first = true;\n                while (!stk.empty() && abs(stk.top()) > abs(num)) {\n                    int t = stk.top();\n                    stk.pop();\n                    if (first) {\n                        res += abs(t) - abs(num);\n                        first = false;\n                    }\n                }\n                stk.push(num);\n            }\n\n            last_flag = flag;\n        }\n        if (!stk.empty()) {\n            res += abs(stk.top());\n        }\n        while (!stk.empty()) {\n            stk.pop();\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721533286",
    "subm_id": "548396983"
}