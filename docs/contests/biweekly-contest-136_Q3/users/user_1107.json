{
    "username": "scenei",
    "submission": "class Solution(object):\n    def minFlips(self, grid):\n        m, n = len(grid[0]), len(grid)\n        count = 0\n        secret = True\n        for i in range(n // 2):\n            for j in range(m // 2):\n                total = grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j] + grid[n-1-i][m-1-j]\n                count += min(total % 4, 4 - total % 4)\n        if n % 2 == 1:\n            for j in range(m // 2):\n                if grid[n//2][j] != grid[n//2][m-1-j]:\n                    count += 1\n                    secret = False\n        if m % 2 == 1:\n            for i in range(n // 2):\n                if grid[i][m//2] != grid[n-1-i][m//2]:\n                    count += 1\n                    secret = False\n        if m % 2 == 1 and n % 2 == 1:\n            count += grid[n//2][m//2]\n\n        if secret:\n            total = 0\n            if m % 2 == 1:\n                for i in range(n // 2):\n                    total += grid[i][m//2]\n            if n % 2 == 1:\n                for j in range(m // 2):\n                    total += grid[n//2][j]\n            if total % 2 == 1:\n                count += 2\n\n        return count\n",
    "submit_ts": "1722698514",
    "subm_id": "552271220"
}