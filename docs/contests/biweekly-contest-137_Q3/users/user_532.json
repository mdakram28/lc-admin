{
    "username": "Govind Ji",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        // Store top 3 max values and their column indices for each row\n        vector<vector<pair<int, int>>> rowMax(m); // pair<value, column_index>\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> maxInRow(3, {INT_MIN, -1});\n            for (int j = 0; j < n; ++j) {\n                if (board[i][j] > maxInRow[0].first) {\n                    maxInRow[2] = maxInRow[1];\n                    maxInRow[1] = maxInRow[0];\n                    maxInRow[0] = {board[i][j], j};\n                } else if (board[i][j] > maxInRow[1].first) {\n                    maxInRow[2] = maxInRow[1];\n                    maxInRow[1] = {board[i][j], j};\n                } else if (board[i][j] > maxInRow[2].first) {\n                    maxInRow[2] = {board[i][j], j};\n                }\n            }\n            rowMax[i] = maxInRow;\n        }\n\n        long long result = LLONG_MIN;\n\n\n        for (int i1 = 0; i1 < m - 2; ++i1) {\n            for (int i2 = i1 + 1; i2 < m - 1; ++i2) {\n                for (int i3 = i2 + 1; i3 < m; ++i3) {\n                    for (auto [val1, col1] : rowMax[i1]) {\n                        for (auto [val2, col2] : rowMax[i2]) {\n                            if (col1 == col2) continue; \n                            for (auto [val3, col3] : rowMax[i3]) {\n                                if (col1 != col3 && col2 != col3) {\n                                    long long currSum = (long long)val1 + (long long)val2 + (long long)val3;\n                                    result = max(result, currSum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723905815",
    "subm_id": "1359020482"
}