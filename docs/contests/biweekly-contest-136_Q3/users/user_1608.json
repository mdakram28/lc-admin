{
    "username": "sanjv12",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        num_rows = len(grid)\n        num_cols = len(grid[0])      \n        total_flips = 0\n        for row in range(num_rows // 2):\n            for col in range(num_cols // 2):\n                elements = [grid[row][col],grid[num_rows - row - 1][col],grid[row][num_cols - col - 1],grid[num_rows - row - 1][num_cols - col - 1]]\n                num_ones = sum(elements)\n                total_flips += min(num_ones, 4 - num_ones)        \n        potential_flips = 0\n        middle_ones_count = 0\n        if num_rows % 2 != 0:\n            middle_row = num_rows // 2\n            for col in range(num_cols // 2):\n                if grid[middle_row][col] != grid[middle_row][num_cols - col - 1]:\n                    total_flips += 1\n                    potential_flips += 1\n                else:\n                    if grid[middle_row][col] == 1:\n                        middle_ones_count += 1\n        if num_cols % 2 != 0:\n            middle_col = num_cols // 2\n            for row in range(num_rows // 2):\n                if grid[row][middle_col] != grid[num_rows - row - 1][middle_col]:\n                    total_flips += 1\n                    potential_flips += 1\n                else:\n                    if grid[row][middle_col] == 1:\n                        middle_ones_count += 1\n        if num_rows % 2 != 0 and num_cols % 2 != 0:\n            central_element = grid[num_rows // 2][num_cols // 2]\n            if central_element == 1:\n                total_flips += 1 \n        if potential_flips == 0 and middle_ones_count % 2 != 0:\n            total_flips += 2\n        return total_flips\n",
    "submit_ts": "1722699494",
    "subm_id": "1343213363"
}