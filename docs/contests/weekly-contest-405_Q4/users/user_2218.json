{
    "username": "rituraj2024",
    "submission": "from typing import List\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n       \n        target_length = len(target)\n        \n       \n        word_cost = {}\n        for i, word in enumerate(words):\n            word_cost[word] = min(word_cost.get(word, float('inf')), costs[i])\n        \n        \n        dp = [float('inf')] * (target_length + 1)\n        dp[0] = 0\n        \n        \n        for i in range(1, target_length + 1):\n            for word in word_cost:\n                if i >= len(word) and target[i - len(word): i] == word:\n                    dp[i] = min(dp[i], dp[i - len(word)] + word_cost[word])\n        \n       \n        return dp[target_length] if dp[target_length] != float('inf') else -1\n        ",
    "submit_ts": "1720323578",
    "subm_id": "1312378950"
}