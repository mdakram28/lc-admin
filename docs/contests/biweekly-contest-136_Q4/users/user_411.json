{
    "username": "buzzxi",
    "submission": "class Solution {\n    private int[] h;\n    private int[] e;\n    private int[] ne;\n    private int idx;\n    private int[] f;\n    private int[] ans;\n    public int[] timeTaken(int[][] edges) {\n        \n        int m = edges.length, n = m + 1;\n        this.h = new int[n];\n        Arrays.fill(h, -1);\n        this.e = new int[m << 1];\n        this.ne = new int[m << 1];\n        this.idx = 0;\n        \n        for (int[] e : edges) {\n            add(e[0], e[1]);\n            add(e[1], e[0]);\n        }\n        \n        this.f = new int[n];\n        dfs(0, -1);\n        \n        this.ans = new int[n];\n        chroot(0, -1, 0);\n        return ans;\n    }\n    \n    private void chroot(int node, int fa, int re) {\n        int fir = 0, sec = 0;\n        \n        int rst = 0;\n        for (int i = h[node]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa)\n                continue;\n            int tmp = f[j];\n            tmp ++;\n            if ((j & 1) == 0) \n                tmp ++;\n            \n            rst = Math.max(rst, tmp);\n            if (tmp > fir) {\n                sec = fir;\n                fir = tmp;\n            } else if (tmp > sec) {\n                sec = tmp;\n            }\n        }\n        \n        if (fa != -1) {\n            int tmp = re + 1;\n            if ((fa & 1) == 0)\n                tmp ++;\n            rst = Math.max(rst, tmp);\n            if (tmp > fir) {\n                sec = fir;\n                fir = tmp;\n            } else if (tmp > sec) {\n                sec = tmp;\n            }\n        }\n        \n        ans[node] = rst;\n        \n        \n        for (int i = h[node]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa) \n                continue;\n            int tmp = f[j];\n            tmp ++;\n            if ((j & 1) == 0) \n                tmp ++;\n            if (tmp == fir) {\n                chroot(j, node, sec);\n            } else {\n                chroot(j, node, fir);\n            }\n        }\n    }\n    \n    private int dfs(int node, int fa) {\n        int rst = 0;\n        for (int i = h[node]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa) \n                continue;\n            int tmp = dfs(j, node);\n            if ((j & 1) == 1) {\n                rst = Math.max(rst, tmp + 1);\n            } else {\n                rst = Math.max(rst, tmp + 2);\n            }\n        }\n        \n        f[node] = rst;\n        return rst;\n    }\n    \n    private void add(int a, int b) {\n        e[idx] = b;\n        ne[idx] = h[a];\n        h[a] = idx ++;\n    }\n}",
    "submit_ts": "1722697247",
    "subm_id": "552265165"
}