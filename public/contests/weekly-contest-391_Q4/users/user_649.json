{
    "username": "indianick",
    "submission": "class Solution {\npublic:\n    \n    \n    vector<int> solve(vector<vector<int> >& A, int N)\n{\n   \n    vector<pair<int,int>> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i].first = A[i][0] + A[i][1];\n        V1[i].first = A[i][0] - A[i][1];\n        V[i].second=i;\n        V1[i].second=i;\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    // int maximum\n    //     = max(V.back() - V.front(), V1.back() - V1.front());\n        int p,q;\n        int mx;\n        if((V.back().first - V.front().first)>(V1.back().first - V1.front().first)){\n            mx=V.back().first - V.front().first;\n            p=V.back().second;\n            q=V.front().second;\n        }\n        else \n        {\n            mx=(V1.back().first - V1.front().first);\n            p=V1.back().second;\n            q=V1.front().second;\n        }\n        vector<int> v;\n        v.push_back(p);\n        v.push_back(q);\n        v.push_back(mx);\n        return v;\n \n    // cout << maximum << endl;\n}\n    int minimumDistance(vector<vector<int>>& p) {\n        int n=p.size();\n        vector<int> a=solve(p,n);\n        int c=a[0];\n        int d=a[1];\n        int ans=a[2];\n       vector<vector<int>> s;\n        for(int i=0;i<n;i++){\n         if(i!=c) s.push_back(p[i]); \n        }\n       \n        a=solve(s,n-1);\n        ans=min(ans,a[2]);\n        \n        \n        \n        vector<vector<int>> r;\n        for(int i=0;i<n;i++){\n         if(i!=d) r.push_back(p[i]); \n        }\n        \n        \n        a=solve(r,n-1);\n        ans=min(ans,a[2]);\n        return ans;\n    }\n};"
}