{
    "username": "hong-tao-ashi",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> g(n);\n        for(auto x : edges){\n            g[x[0]].push_back(x[1]);\n            g[x[1]].push_back(x[0]);\n        }\n        vector<unordered_map<int,int>> all(n);\n        function<int(int,int)> dfs = [&](int i, int p){\n            int res = 0;\n            for(auto x : g[i]){\n                if(x == p) continue;\n                int t = dfs(x, i) + ((x%2)?1:2);\n                all[i][x] = t;\n                res = max(res, t);\n            }\n            return res;\n        };\n\n        dfs(0, -1);\n        \n        //for(int i=0;i<all.size();i++){\n        //    for(auto [y,z] : all[i]) cout<<i<<\" \"<<y<<\" \"<<z<<endl;\n        //}\n        \n        vector<int> res(n);\n        function<void(int,int,int)> reroot = [&](int i, int p, int c){\n            int t = 0;\n            for(auto &[x,y] : all[i]) t = max(t, y);\n            res[i] = max(t, c);\n            priority_queue<pair<int,int>> q;\n            for(auto x : g[i]){\n                if(x == p) continue;\n                q.push({all[i][x], x});\n            }\n            for(auto x : g[i]){\n                if(x == p) continue;\n                if(q.top().second != x) reroot(x, i, max(q.top().first, c) + ((i%2)?1:2));\n                else{\n                    auto t = q.top();\n                    q.pop();\n                    if(q.size() == 0) reroot(x, i, c + ((i%2)?1:2));\n                    else reroot(x, i, max(q.top().first, c) + ((i%2)?1:2));\n                    q.push(t);\n                }\n            }             \n                \n        };\n        reroot(0, -1, 0);\n        return res;\n    }\n};",
    "submit_ts": "1722700557",
    "subm_id": "552280327"
}