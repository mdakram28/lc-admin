{
    "username": "sam_990",
    "submission": "class Solution {\n    public:\n    int maxTotalReward(vector<int> rewardValues) {\n        sort(rewardValues.begin(), rewardValues.end());\n        rewardValues.resize(unique(rewardValues.begin(), rewardValues.end()) - rewardValues.begin());\n        int n = rewardValues.size();\n        int mx = rewardValues.back();\n        bool dp[2 * mx + 5];\n        set<int> left;\n        for (int i = 1; i < 2 * mx + 5; i++) left.insert(i);\n        memset(dp, 0, sizeof dp);\n        dp[0] = 1;\n\n        for (int i = 0; i < n; i++) {\n            int num = rewardValues[i];\n            auto rnum = *left.upper_bound(2 * num - 1);\n\n            for (auto it = left.lower_bound(num); *it != rnum;) {\n                int x = *it;\n                if (dp[x - num]) {\n                    dp[x] = true;\n                    it++;\n                    left.erase(x);\n                }\n                else it++;\n            }\n\n        }\n\n        for (int i = 2 * mx + 4; i >= 0; i--) {\n            if (dp[i]) return i;\n        }\n\n        return 0;\n    }\n};",
    "submit_ts": "1717903323",
    "subm_id": "1282330407"
}