{
    "username": "\u65ed\u65e5\u4e1c\u5347",
    "submission": "class Solution {\npublic:\n    bool isDivisibleByK(const std::string& palindrome, int k) {\n    int remainder = 0;\n    for (char ch : palindrome) {\n        remainder = (remainder * 10 + (ch - '0')) % k;\n    }\n    return remainder == 0;\n}\n\nstd::string largestPalindrome(int n, int k) {\n    int half_len = n / 2;\n    string res, halfs;\n    if (n > 10) {\n    if (k == 1) {\n        return string(n, '9');\n    } \n    else if (k == 2) {\n        halfs = string(half_len - 1, '9');\n        halfs = '8' + halfs;\n        if (n % 2) res = halfs + '9' + string(halfs.rbegin(), halfs.rend());\n        else res = halfs + string(halfs.rbegin(), halfs.rend());\n        return res;\n    }\n    else if (k == 3) {\n        return string(n, '9');\n    }\n    else if (k == 4) {\n        halfs = string(half_len - 2, '9');\n        halfs = \"88\" + halfs;\n        if (n % 2) res = halfs + '9' + string(halfs.rbegin(), halfs.rend());\n        else res = halfs + string(halfs.rbegin(), halfs.rend());\n        return res;\n    }\n    else if (k == 5) {\n        halfs = string(half_len - 1, '9');\n        halfs = '5' + halfs;\n        if (n % 2) res = halfs + '9' + string(halfs.rbegin(), halfs.rend());\n        else res = halfs + string(halfs.rbegin(), halfs.rend());\n        return res;\n    }\n    else if (k == 6) {\n        halfs = std::string(half_len - 2, '9');\n        halfs = '8' + halfs;\n        if (n % 2) res = halfs + \"989\" + std::string(halfs.rbegin(), halfs.rend());\n        else res = halfs + \"77\" + std::string(halfs.rbegin(), halfs.rend());\n        return res;\n    }\n    else if (k == 8) {\n       halfs = std::string(half_len - 3, '9');\n                halfs = \"888\" + halfs;\n                if (n % 2) res = halfs + '9' + std::string(halfs.rbegin(), halfs.rend());\n                else res = halfs + std::string(halfs.rbegin(), halfs.rend());\n                return res;\n    }\n    else if (k == 9) {\n        return string(n, '9');\n    }\n    }\n    cout << 1;\n    half_len = (n + 1) / 2;\n    std::string half = std::string(half_len, '9');\n    \n    while (true) {\n        std::string palindrome;\n        if (n % 2 == 0) {\n            palindrome = half + std::string(half.rbegin(), half.rend());\n        } else {\n            palindrome = half + std::string(half.rbegin() + 1, half.rend());\n        }\n\n        if (isDivisibleByK(palindrome, k)) {\n            return palindrome;\n        }\n        \n        for (int i = half_len - 1; i >= 0; --i) {\n            if (half[i] > '0') {\n                --half[i];\n                break;\n            } else {\n                half[i] = '9';\n            }\n        }\n\n        if (half[0] == '0') {\n            break;\n        }\n    }\n\n    return \"\";\n}\n};",
    "submit_ts": "1723953595",
    "subm_id": "556418735"
}