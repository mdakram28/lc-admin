{
    "username": "piyush4545",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int n = colors.size(); \n        \n \n        if (k == 1) { \n            return n; \n        } \n \n        int len = 1; \n        int ptr = 1; \n        int val = 0; \n        \n        \n        while (ptr + 1 <= n + k - 1 ) { \n            int randomtemp = ptr%n; \n            int sectemp = (ptr - 1)%n; \n \n            if (randomtemp >= n) { \n                randomtemp %= n; \n            } \n            if (sectemp >= n) { \n                sectemp %= n; \n            } \n \n            if (colors[randomtemp] != colors[sectemp]) { \n                len++; \n            } \n            else { \n                len = 1; \n            } \n \n            \n            if (len >= k) { \n                val++; \n            } \n \n            ptr++; \n        } \n \n        return val; \n    } \n};",
    "submit_ts": "1720281015",
    "subm_id": "1311810138"
}