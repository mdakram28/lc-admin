{
    "username": "Wilsano",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int max_val = *max_element(nums.begin(), nums.end());\n        int n = nums.size();\n        vector<vector<long>> dp(n, vector<long>(max_val + 1, 0));\n\n        for(int val = 0; val <= nums[0]; ++val){\n            dp[0][val] = 1;\n        }\n\n        int mod = 1e9 + 7;\n        for(int i = 1; i < n; ++i){\n            // step 1. create prefix for previous element\n            vector<long> prefix(max_val + 1, 0);\n            prefix[0] = dp[i - 1][0];\n            for(int val = 1; val <= nums[i]; ++val){\n                prefix[val] = prefix[val - 1] + dp[i - 1][val];\n                prefix[val] %= mod;\n            }\n            \n            for(int val = 0; val <= nums[i]; ++val){\n                // val - k >= nums[i] - nums[i - 1]\n                //    => val >= nums[i] - nums[i - 1] + k\n                //    => val - diff >= k\n                int diff = nums[i] - nums[i - 1];\n                if(val >= diff){\n                    dp[i][val] += prefix[min({val, nums[i - 1], val - diff})];\n                    dp[i][val] %= mod;\n                }\n                \n                // for(int k = 0; k <= nums[i - 1]; ++k){\n                //     // prev_x1 = k, prev_x2 = max_val - k\n                //     if(val >= k && (nums[i] - val) <= (nums[i - 1] - k)){\n                //         dp[i][val] += dp[i - 1][k];\n                //         dp[i][val] %= mod;\n                //     }\n                // }\n            }\n        }\n\n        long res = accumulate(dp[n - 1].begin(), dp[n - 1].end(), 0LL);\n        res %= mod;\n\n        return res;\n    }\n};",
    "submit_ts": "1723347664",
    "subm_id": "1351603187"
}