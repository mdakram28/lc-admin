{
    "username": "Kartik Garg",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        int n = s.length();\n        vector<long long> contri(n), idx(n);\n        vector<long long> pref0(n,0), pref1(n,0);\n        if(s[0] == '0'){\n            pref0[0] = 1;\n        }\n        else{\n            pref1[0] = 1;\n        }\n        for(int i=1; i<n; i++){\n            if(s[i] == '0'){\n                pref0[i] = pref0[i-1] + 1;\n                pref1[i] = pref1[i-1];\n            }\n            else{\n                pref0[i] = pref0[i-1];\n                pref1[i] = pref1[i-1] + 1;\n            }\n        }\n        // for(int i=0; i<n; i++){\n        //     cout<<pref1[i]<<endl;\n        // }\n        for(int i=0; i<n; i++){\n            long long curr0 = pref0[i]+k, curr1 = pref1[i]+k;\n            if(s[i] == '0'){\n                curr0--;\n            }\n            else{\n                curr1--;\n            }\n            long long idx0 = upper_bound(pref0.begin(),pref0.end(),curr0) - pref0.begin();\n            long long idx1 = upper_bound(pref1.begin(),pref1.end(),curr1) - pref1.begin();\n            idx0--;\n            idx1--;\n            long long Max = max(idx0,idx1);\n            contri[i] = Max-i+1;\n            if(i != 0){\n                contri[i] += contri[i-1];\n            }\n            idx[i] = Max; \n        }\n        // for(int i=0; i<n; i++){\n        //     cout<<i<<\" \"<<idx[i]<<endl;\n        // }\n        vector<long long> ans;\n        for(int i=0; i<q.size(); i++){\n            long long x = q[i][0];\n            long long y = q[i][1];\n            long long d = upper_bound(idx.begin(),idx.end(),y) - idx.begin();\n            d--;\n            // cout<<i<<\" \"<<d<<endl;\n            if(d < x){\n                long long diff = y-x+1;\n                long long res = (diff)*(diff+1) / 2;\n                ans.push_back(res);\n                continue;\n            }\n            long long diff = d-x;\n            long long res = 0;\n            res = contri[d];\n            if(x != 0){\n                res -= contri[x-1];\n            }\n            long long left = y - d;\n            res += (left)*(left+1)/2;\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952234",
    "subm_id": "1359791288"
}