{
    "username": "qiao-k4w",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long,long>>heap;\n        for(int i=0;i<horizontalCut.size();i++)\n        {\n            heap.push({horizontalCut[i],1});\n        }\n        for(int i=0;i<verticalCut.size();i++)\n        {\n            heap.push({verticalCut[i],2});\n        }\n        long long ans=0;\n        int h=1,v=1;\n        while(heap.size())\n        {\n            auto t=heap.top();\n            heap.pop();\n            if(t.second==1)\n            {\n                ans+=t.first*v;\n                h++;\n            }\n            else\n            {\n                ans+=t.first*h;\n                v++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926099",
    "subm_id": "546444054"
}