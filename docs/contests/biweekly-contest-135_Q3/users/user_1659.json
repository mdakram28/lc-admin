{
    "username": "Geek_Guy_",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define loop(i, a, n) for (lli i = (a); i < (n); ++i)\n#define loopD(i, a, n) for (lli i = (a); i >= (n); --i)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define sz(a) ((int)a.size())\n#define YES cout << \"YES\" << endl;\n#define NO cout << \"NO\" << endl;\n#define endl '\\n'\n#define fastio std::ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n#define pb push_back\n#define pp pop_back()\n#define fi first\n#define si second\n#define v(a) vector<int>(a)\n#define vv(a) vector<vector<int>>(a)\n#define present(c, x) ((c).find(x) != (c).end())\n#define set_bits __builtin_popcountll\n#define MOD 1000000007\n\ntypedef long long lli;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<lli, lli> pll;\ntypedef pair<int, int> pii;\ntypedef map<lli, lli> umpi;\ntypedef map<int, int> mpi;\ntypedef vector<pii> vp;\ntypedef vector<lli> vll;\ntypedef vector<vll> vvll;\n\nclass Solution {\npublic:\nint myMax(int a, int b, int c, int d) {\n    return max({a, b, c, d});\n}\n\nint myAbs(int value) {\n    return (value >= 0) ? value : -value;\n}\n\nint myMin(int a, int b) {\n    return (a < b) ? a : b;\n}\n\n\nint myLowerBoundIndex(const vector<int>& sortedVec, int target) {\n    int left = 0;\n    int right = sortedVec.size();\n    while (left < right) {\n        int mid = left + (right - left) / 2;\n        if (sortedVec[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n\n    int minChanges(vector<int>& numbers, int threshold) {\n        unordered_map<int, vector<int>> differenceMap;\n        vector<int> maxValues;\n\n        int halfSize = numbers.size() / 2;\n        for (int i = 0; i < halfSize; i++) {\n            int leftNum = numbers[i];\n            int rightNum = numbers[numbers.size() - i - 1];\n            int difference = myAbs(leftNum - rightNum);\n            int maxValue = myMax(leftNum, rightNum, threshold - leftNum, threshold - rightNum);\n            differenceMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minChanges = numbers.size();\n        sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& entry : differenceMap) {\n            int difference = entry.first;\n            int changes = myLowerBoundIndex(maxValues, difference) * 2 + (halfSize - myLowerBoundIndex(maxValues, difference));\n\n            for (int value : entry.second) {\n                if (value < difference) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChanges = myMin(minChanges, changes);\n        }\n\n        return minChanges;\n    }\n};",
    "submit_ts": "1721489106",
    "subm_id": "1327443083"
}