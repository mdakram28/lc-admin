{
    "username": "archief_117",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diff_map;\n        vector<int> max_values;\n\n        int n = nums.size();\n        int half_n = n / 2;\n\n        for (int i = 0; i < half_n; ++i) {\n            int first_elem = nums[i];\n            int second_elem = nums[n - i - 1];\n            int difference = abs(first_elem - second_elem);\n\n            int max_val = max({first_elem, second_elem, k - first_elem, k - second_elem});\n            diff_map[difference].push_back(max_val);\n            max_values.push_back(max_val);\n        }\n\n        int min_changes = half_n;  \n        sort(max_values.begin(), max_values.end());\n\n        for (const auto& entry : diff_map) {\n            int difference = entry.first;\n            const vector<int>& values = entry.second;\n\n            int lower_bound_pos = lower_bound(max_values.begin(), max_values.end(), difference) - max_values.begin();\n            int tentative_changes = lower_bound_pos * 2 + (half_n - lower_bound_pos);\n\n            for (const int& max_val : values) {\n                if (max_val < difference) {\n                    tentative_changes -= 2;\n                } else {\n                    tentative_changes -= 1;\n                }\n            }\n\n            min_changes = min(min_changes, tentative_changes);\n        }\n\n        return min_changes;\n    }\n};\n",
    "submit_ts": "1721489419",
    "subm_id": "1327452686"
}