{
    "username": "ivedantsharma",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int ans = 0;\n        if(n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) ans += 1;\n        }\n        int[] sh = new int[3];\n        if(n % 2 == 1) {\n            int i = 0, j = m - 1;\n            while (i < j) {\n                int sum = grid[n / 2][i] + grid[n / 2][j];\n                sh[sum] += 1;\n                i += 1;\n                j -= 1;\n            }\n        }\n        if(m % 2 == 1) {\n            int i = 0, j = n - 1;\n            while (i < j) {\n                int sum = grid[i][m / 2] + grid[j][m / 2];\n                sh[sum] += 1;\n                i += 1;\n                j -= 1;\n            }\n        }\n        if(sh[2] % 2 == 1) {\n            if(sh[1] > 0) ans += sh[1];\n            else ans += 2;\n        } \n        else ans += sh[1];\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int p = grid[i][j];\n                int q = grid[n - 1 - i][j];\n                int r = grid[i][m - 1 - j];\n                int s = grid[n - 1 - i][m - 1 - j];\n\n                int sum = p + q + r + s;\n                if (sum != 0 && sum != 4) ans += Math.min(sum, 4 - sum);\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1722699690",
    "subm_id": "1343219356"
}