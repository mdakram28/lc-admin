{
    "username": "Julian",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n\n        using ll = long long;\n\n        int r = -1;\n        int a = 0, b = 0;\n        vector<ll> nxt(n);\n        for (int i = 0; i < n; i++) {\n            while (r + 1 < n) {\n                int na = a + (s[r + 1] == '0');\n                int nb = b + (s[r + 1] == '1');\n                if (na <= k || nb <= k)\n                    a = na, b = nb, r++;\n                else\n                    break;\n            }\n\n            nxt[i] = r;\n\n            a -= s[i] == '0';\n            b -= s[i] == '1';\n\n            cout << i << ' ' << nxt[i] << '\\n';\n        }\n\n        vector<ll> p = nxt;\n        for (int i = 1; i < n; i++)\n            p[i] += p[i - 1];\n\n        vector<ll> ans;\n        for (auto &v : queries) {\n            int l = v[0], r = v[1];\n            int lo = l, hi = r, pos = r + 1;\n            while (lo <= hi) {\n                int mid = (lo + hi) / 2;\n\n                if (nxt[mid] > r)\n                    pos = mid, hi = mid - 1;\n                else\n                    lo = mid + 1;\n            }\n\n            cout << \"> \" << pos << '\\n';\n            ll here = (pos == 0 ? 0 : p[pos - 1]) - (l == 0 ? 0 : p[l - 1]);\n            here += 1LL * (r + 1 - pos) * r;\n            here -= 1LL * r * (r - 1) / 2 - 1LL * (l - 1) * (l - 2) / 2;\n            ans.push_back(here);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723948869",
    "subm_id": "1359704183"
}