{
    "username": "anton-gorbikov",
    "submission": "function timeTaken(edges: number[][]): number[] {\n    const graph = new Array(edges.length + 1).fill(0).map(t => []);\n\n    edges.forEach(([a, b]) => {\n        graph[a].push(b);\n        graph[b].push(a);\n    });\n\n    const bfs = (seed, vis, rev) => {\n        const q = [seed];\n        let res_i = -1;\n        let res_w = -1;\n        let index = 0;\n\n        vis.set(seed, 0);\n\n        while (index < q.length) {\n            const node_i = q[index];\n            const node_w = vis.get(node_i);\n\n            index += 1;\n\n            if (node_w > res_w) {\n                res_w = node_w;\n                res_i = node_i;\n            }\n\n            for (let i = 0; i < graph[node_i].length; ++i) {\n                const dest_i = graph[node_i][i];\n\n                if (!vis.has(dest_i)) {\n                    let dest_w;\n                    if (rev) {\n                        dest_w = node_i % 2 === 0 ? node_w + 2 : node_w + 1;\n                    } else {\n                        dest_w = dest_i % 2 === 0 ? node_w + 2 : node_w + 1;\n                    }\n\n                    vis.set(dest_i, dest_w);\n                    q.push(dest_i);\n                }\n            }\n        }\n\n        return [res_i, res_w];\n    }\n\n    const [left_i, left_w] = bfs(0, new Map(), false);\n    const [right_i, right_w] = bfs(left_i, new Map(), false);\n\n    const left_map = new Map();\n    const right_map = new Map();\n\n    bfs(left_i, left_map, true);\n    bfs(right_i, right_map, true);\n\n    return new Array(edges.length + 1).fill(0).map((t, i) => {\n        return Math.max(left_map.get(i), right_map.get(i));\n    })\n};",
    "submit_ts": "1722700683",
    "subm_id": "1343249492"
}