{
    "username": "\u7693\u9996\u4e0d\u5026.GRH",
    "submission": "\n# -*- coding: utf-8 -*-\nfrom typing import List, Tuple, Optional\nfrom collections import deque, Counter\nfrom queue import PriorityQueue\nimport math\nfrom functools import lru_cache\nfrom sortedcontainers import SortedDict, SortedSet\nimport random\nimport copy\nimport sys\nsys.setrecursionlimit(9999999)\n\nMOD = 10**9 + 7\n\n\n\nBAD = -1\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n\n        pow_arr = [0] * n\n\n        pow_arr[0] = 1 % k\n        for i in range(1, n):\n            pow_arr[i] = (pow_arr[i-1]*10) % k\n\n\n\n        N = n >> 1\n\n        @lru_cache(typed=False, maxsize=128000000)\n        def dp(ii, pre_mod):\n            if ii == N:\n                if n % 2 == 0:\n                    if pre_mod == 0:\n                        return None\n                    else:\n                        return BAD\n\n                else:\n\n                    for cur in range(9, -1, -1):\n                        if ii == 0 and cur == 0 and n != 1:\n                            continue\n\n                        v = (cur * pow_arr[ii]) % k\n                        if (v + pre_mod) % k == 0:\n                            return cur\n\n                    return BAD\n\n\n            jj = n-1-ii\n            for cur in range(9, -1, -1):\n                if ii == 0 and cur == 0 and n != 1:\n                    continue\n\n                v = pre_mod % k\n                v += (cur * pow_arr[ii]) % k\n                v %= k\n                v += (cur * pow_arr[jj]) % k\n                v %= k\n\n                if dp(ii+1, v) != BAD:\n                    return cur\n\n            return BAD\n\n        if dp(0, 0) == BAD:\n            return \"0\"\n\n\n        ans = []\n        mid = \"\"\n        mod = 0\n        for ii in range(N+1):\n            ch = dp(ii, mod)\n\n            if ii != N:\n                jj = n-1 - ii\n                mod += ch*pow_arr[ii] + ch*pow_arr[jj]\n                mod %= k\n                ans.append(ch)\n\n            else:\n\n                if n%2 == 1:\n                    ch = dp(ii, mod)\n                    mid = str(ch)\n                else:\n                    mid = \"\"\n\n        s = \"\"\n        for v in ans:\n            s += str(v)\n\n        s += mid\n\n        for v in ans[::-1]:\n            s += str(v)\n\n        return s\n",
    "submit_ts": "1723952720",
    "subm_id": "556413264"
}