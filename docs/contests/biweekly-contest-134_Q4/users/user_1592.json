{
    "username": "Piyusha_7",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long temp = 0;\n        long ans= helper(nums,k,temp);\n        return ans;\n    }\n\n    public long helper(int[] nums, int k, long temp){\n        HashMap<Long, Long> map = new HashMap<>();\n        long ans = helper2(nums,k,temp,map);\n        return ans;\n    }\n    public long helper2(int[] nums, int k, long temp, HashMap<Long,Long> map){\n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] == k) temp++;\n            HashMap<Long, Long> map2 = new HashMap<>();\n            long j= (long) nums[i];\n            map2.put(j, (long) 1);\n\n            for (Map.Entry<Long, Long> e : map.entrySet()) {\n                long key = e.getKey();\n                long f = e.getValue();\n                long c = key & nums[i];\n                if (c == k) temp += f;\n\n                map2.put(c, map2.getOrDefault(c, (long) 0) + f);\n            }\n\n            map = map2;\n        }\n        return temp;\n    }\n}",
    "submit_ts": "1720280117",
    "subm_id": "1311777539"
}