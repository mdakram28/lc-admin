{
    "username": "AyushK28",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9 + 7;\n    int dp[2001][51][51];  \n\n    int countPairs(int idx, int prev1, int prev2, vector<int>& nums) {\n        if (idx == nums.size()) return 1;\n        \n        if (dp[idx][prev1][prev2] != -1) return dp[idx][prev1][prev2];\n\n        int count = 0;\n        for (int i = prev1; i <= nums[idx]; i++) \n        {  \n            int j = nums[idx] - i;  \n            if (j <= prev2) \n            {  \n                count = (count + countPairs(idx + 1, i, j, nums)) % MOD;\n            }\n        }\n\n        return dp[idx][prev1][prev2] = count;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1, sizeof(dp));  \n        return countPairs(0, 0, 50, nums);  \n    }\n};\n",
    "submit_ts": "1723344545",
    "subm_id": "1351536869"
}