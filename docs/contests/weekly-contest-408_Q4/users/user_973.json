{
    "username": "Puneet7373",
    "submission": "class Solution {\npublic:\n    double distance(int a, int b,int c,int d){\n        return sqrt(1.0*(a-c)*(a-c) + 1.0*(b-d)*(b-d));\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>> &v) {\n        int n=v.size();\n        vector<vector<int>> adj(n+4);\n         for (int i = 0; i < n; ++i) {\n            if (v[i][2] >= v[i][0] ) {\n                adj[n].push_back(i);\n                adj[i].push_back(n);\n            }\n            if (v[i][2] >= v[i][1] ) {\n                adj[n + 1].push_back(i);\n                adj[i].push_back(n + 1);\n            }\n\n            if (v[i][2] + v[i][0] >= X ) {\n                adj[n + 2].push_back(i);\n                adj[i].push_back(n + 2);\n            }\n            if (v[i][2] + v[i][1] >= Y ) {\n                adj[n + 3].push_back(i);\n                adj[i].push_back(n + 3);\n            }\n\n            for (int j = i + 1; j < n; ++j) {\n                double d = distance(v[i][0],v[i][1],v[j][0],v[j][1]);\n                int r = v[i][2] + v[j][2];\n                if (r >= d) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        \n        auto bfs = [&](int n ,int start, int t1, int t2){\n            queue<int> q;\n            q.push(start);\n            vector<int> vis(n+4, 0);\n            vis[start] = 1;\n            \n            while (!q.empty()) {\n                int fr = q.front();\n                q.pop();\n                for (auto v : adj[fr]) {\n                    if (!vis[v]) {\n                        q.push(v);\n                        vis[v] = 1;\n                    }\n                }\n            }\n            return vis[t1] || vis[t2];\n        };\n        bool ok = 0;\n        ok = max(ok, bfs(n+4, n, n + 1, n + 2)); \n        ok = max(ok, bfs(n+4 , n + 3, n + 2, n + 1));\n        \n        if (ok){\n            return 0;\n        }\n        return 1;\n    }\n};\n",
    "submit_ts": "1722138265",
    "subm_id": "1335786334"
}