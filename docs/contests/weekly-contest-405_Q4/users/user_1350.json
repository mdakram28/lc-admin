{
    "username": "nexgphoenix",
    "submission": "#define rep(i,a,b)             for(int i = a ; i <= b ; i++)\n#define rev(i,a,b)             for (int i = a ; i >= b ; i--)\n#define vi                     vector<int>\n#define pii                    pair<int,int>\n#define pb                     push_back\n#define ppb                    pop_back\n#define pf                     push_front\n#define ppf                    pop_front \n#define all(x)                 (x).begin(),(x).end()\n#define setit(a,b)             memset(a,b,sizeof(a))\n#define mp                     make_pair\n#define ff                     first \n#define ss                     second\n#define least                  INT_MIN\n#define great                  INT_MAX       \n#define its(n)                 int n ; cin>>n \n#define get(arr,n)             vi arr(n) ; rep(i,0,n-1){cin>>arr[i] ;}\n#define give(x)                cout<<#x<<\" is \"<<x<<endl;\n#define out(x)                 cout<<x<<endl;\n#define yes                    cout<<\"Yes\"<<endl;\n#define no                     cout<<\"No\"<<endl;\n#define c(x)                   cout<<((x)? \"Yes\" : \"No\")<<endl ;\n#define debug(x,n)             rep(i,0,n-1){cout<<#x<<i<<\" is \"<<arr[i]<<endl;}\n#define outarr(arr,n)          rep(i,0,n-1){cout<<arr[i]<<\" \" ;} cout<<endl;\n#define maxe                   *max_element \n#define mine                   *min_element\n#define ppcll                  __builtin_popcountll\nclass Solution {\npublic:\n    // picked the template frome here - https://leetcode.com/problems/search-suggestions-system/solutions/1549649/c-trie-nothing-fancy-standard-template/ ;\n    class TrieNode{\n        public:\n        vector<pii> ci ;\n        map<char, TrieNode*> children;\n        // bool isEnd = false;\n    };\n    class Ti{\n        public:\n        TrieNode* root = new TrieNode();\n        void insert(string &word, int idx , int c) {\n            TrieNode* node = root;\n            for(int i = 0; i < word.size(); i++){\n                char c = word[i];\n                if(!node->children.count(c)){\n                    node->children[c] = new TrieNode();                        \n                }            \n                node = node->children[c];                                            \n            }       \n            // node->isEnd = true;    \n            node->ci.pb({idx , c}) ;\n        }\n    };   \n    int minimumCost(string t, vector<string>& words, vector<int>& c) {\n        Ti trie ;\n        int sz = words.size() ;\n        rep(i,0,sz-1){\n            trie.insert(words[i] , i , c[i]) ;\n        }\n        int n = t.size() ;\n        vi ans(n + 1 , 1e9) ;\n        ans[0] = 0 ;\n        rep(i,0,n-1){\n            if(ans[i] != 1e9){\n                TrieNode* node = trie.root;\n                rep(j,i,n-1){\n                    if(!node->children.count(t[j])){\n                        break ;\n                    }\n                    node = node->children[t[j]] ;\n                    for(auto x : node->ci){\n                        int idx = x.ff , c = x.ss ;\n                        int k = words[idx].size();\n                        if (i + k <= n) {\n                            int x = ans[i + k] ;\n                            int y = ans[i] + c ;\n                            ans[i + k] = min(x , y) ;\n                        }\n                    }\n                }\n            }\n        }\n        int fans = ans[n] ;\n        if(fans == 1e9){\n            fans = -1 ;\n        }\n        return fans ;\n    }\n};",
    "submit_ts": "1720324301",
    "subm_id": "1312396245"
}