{
    "username": "Vilanel",
    "submission": "class Solution {\npublic:\n    bool check(int c, vector<vector<int>> &grid){\n        int n=grid.size(), m = grid[0].size();\n        int cnt=0;\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                vector<int> d(2,0);\n                d[grid[i][j]]++;\n                d[grid[i][m-j-1]]++;\n                d[grid[n-i-1][j]]++;\n                d[grid[n-i-1][m-j-1]]++;\n                cnt+=min(d[0],d[1]);\n            }\n        }\n        int midcnt=0,pair1=0;\n        if(m%2==1){\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]) midcnt++;\n                else if(grid[i][m/2]==1)pair1++;\n            }\n        }\n        if(n%2==1){\n            for(int i=0;i<m/2;i++){\n                if(grid[n/2][i]!=grid[n/2][m-i-1]) midcnt++;\n                else if(grid[n/2][i]==1)pair1++;\n            }\n        }\n        if(n%2==1&&m%2==1&& grid[n/2][m/2]==1) cnt++;\n        if(pair1%2==0){\n            return cnt+midcnt<=c;\n        }\n        if(2-(pair1%2)>midcnt)return cnt+midcnt+2*(pair1%2)<=c;\n        return cnt+midcnt<=c;\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int lo=0, n=grid.size(), m = grid[0].size(), hi=1e5,mid;\n        while(hi-lo>1){\n            mid=(hi+lo)/2;\n\n            if(check(mid,grid)) hi=mid;\n            else lo=mid+1;\n        }\n        if(check(lo,grid)) return lo;\n        return hi;\n    }\n};",
    "submit_ts": "1722697997",
    "subm_id": "1343166233"
}