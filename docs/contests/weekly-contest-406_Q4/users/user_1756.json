{
    "username": "Eshwar777",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int rows = 1, cols = 1;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int i = horizontalCut.size()-1, j = verticalCut.size()-1;\n        long long cost = 0;\n        while(i >= 0 && j >= 0) {\n            if(horizontalCut[i] > verticalCut[j]) {\n                cost += cols*horizontalCut[i];\n                rows++;\n                i--;\n            } else {\n                cost += rows*verticalCut[j];\n                cols++;\n                j--;\n            }\n        }\n        while(i >= 0) {\n            cost += cols*horizontalCut[i];\n            i--;\n        }\n        while(j >= 0) {\n            cost += rows*verticalCut[j];\n            j--;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926142",
    "subm_id": "1320277242"
}