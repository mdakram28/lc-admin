{
    "username": "eni00kanu",
    "submission": "class Solution {\npublic:\n    struct TrieNode {\n        unordered_map<char, TrieNode*> children;\n        int cost;\n        bool isEndOfWord;\n\n        TrieNode() : cost(INT_MAX), isEndOfWord(false) {}\n    };\n    \n    class Trie {\n    public:\n        TrieNode* root;\n\n        Trie() {\n            root = new TrieNode();\n        }\n\n        void insert(string word, int cost) {\n            TrieNode* node = root;\n            for (char ch : word) {\n                if (node->children.find(ch) == node->children.end()) {\n                    node->children[ch] = new TrieNode();\n                }\n                node = node->children[ch];\n            }\n            node->cost = min(node->cost, cost);\n            node->isEndOfWord = true;\n        }\n\n        int find(string word) {\n            TrieNode* node = root;\n            for (char ch : word) {\n                if (node->children.find(ch) == node->children.end()) {\n                    return INT_MAX;\n                }\n                node = node->children[ch];\n            }\n            return node->isEndOfWord ? node->cost : INT_MAX;\n        }\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.length();\n        vector<int> dp(n+1,INT_MAX);\n        dp[0]=0;\n\n        Trie trie;\n        for (int i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = trie.root;\n            for (int j = i; j < n; ++j) {\n                if (node->children.find(target[j]) == node->children.end()) break;\n                node = node->children[target[j]];\n                if (node->isEndOfWord) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];  \n    }\n};",
    "submit_ts": "1720321156",
    "subm_id": "1312315068"
}