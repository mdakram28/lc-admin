{
    "username": "Vihari Vemuri",
    "submission": "class Solution {\n\n    private int n, k;\n    private int[] tenPow;\n    private int[][][] dp;\n    private void computeTenPow(){\n        tenPow = new int[n+1];\n        tenPow[0] = 1%k;\n        for (int i = 1; i < n; i++){\n            tenPow[i] = (tenPow[i-1]*10)%k;\n        }\n    }\n    private boolean isPossible(int mod, int i, int digit){\n\n        if (i == 0 && digit == 0) return false;\n        if (n%2 == 1 && i > n/2) return mod == 0;\n        else if (n%2 == 0 && i >= n/2) return mod == 0;\n        if (dp[mod][i][digit] != -1) return dp[mod][i][digit] == 1;\n        int nextMod = mod;\n        nextMod += digit*tenPow[i];\n        nextMod %= k;\n        if (n%2 == 1 && i == n/2){\n        }\n        else{\n            nextMod += digit*tenPow[n-i-1];\n            nextMod %= k;\n        }\n        boolean isPos = false;\n        for (int nextDigit = 9; nextDigit >= 0 && !isPos; nextDigit--){\n            isPos |= isPossible(nextMod, i+1, nextDigit);\n        }\n        if (isPos)  dp[mod][i][digit] = 1;\n        else  dp[mod][i][digit] = 0;\n        return isPos;\n    }\n    int[] c;\n    private void construct(int mod, int i){\n        if (n%2 == 1 && i > n/2) return;\n        else if (n%2 == 0 && i >= n/2) return;\n\n        for (int digit = 9; digit >= 0; digit--){\n            if (isPossible(mod, i, digit)){\n                c[i] = digit;\n                mod += digit*tenPow[i];\n                mod %= k;\n                if (n%2 == 1 && i == n/2){\n                }\n                else{\n                    c[n-i-1] = digit;\n                    mod += digit*tenPow[n-i-1];\n                    mod %= k;\n                }\n                construct(mod, i+1);\n                break;\n            }\n        }\n    }\n    public String largestPalindrome(int n, int k) {\n        this.n = n;\n        this.k = k;\n        computeTenPow();\n        c = new int[n];\n        dp = new int[k][n][10];\n        for (int[][] mat : dp){\n            for (int[] row : mat) Arrays.fill(row, -1);\n        }\n        construct(0, 0);\n        StringBuilder sb = new StringBuilder();\n        for (int x : c) sb.append(x);\n        return sb.toString();\n    }\n}",
    "submit_ts": "1723950831",
    "subm_id": "1359756224"
}