{
    "username": "ashwinbanwari",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int, int>> ranges;\n        vector<int> res;\n        int cost = n - 1;\n        for (vector<int>& q : queries) {\n            int a = q[0];\n            int b = q[1];\n            int shouldPlace = true;\n            while (true) {\n                auto it = ranges.lower_bound(pair<int, int>{a, 0});\n                if (it == ranges.end() || it->second > b) {\n                    break;\n                }\n                cost += (it->second - it->first - 1);\n                ranges.erase(it);\n            }\n            auto it = ranges.lower_bound(pair<int, int>{a, 0});\n            bool betterBefore = true;;\n            if (it != ranges.begin()) {\n                auto before = it;\n                before--;\n                if (before->second > a) {\n                    betterBefore = false;\n                }\n            }\n            // cout << betterBefore << endl;\n            if ((it == ranges.end() || it->first >= b) && betterBefore) {\n                // cout << \"inserting\" << endl;\n                ranges.insert({a, b});\n                cost -= (b - a - 1);\n            }\n            res.push_back(cost);\n            \n        }\n        return res;\n    }\n};",
    "submit_ts": "1722742322",
    "subm_id": "1343766248"
}