{
    "username": "alexpods",
    "submission": "class Solution(object):\n    def maximumLength(self, nums, k):\n        n = len(nums)\n\n        dp = [[0] * n for _ in range(k+1)]\n        mm = [[0] * n for _ in range(k+1)]\n\n        dp[0][0] = 1\n        mm[0][0] = 1\n        jj = {}\n\n        jj[nums[0]] = 0\n\n        for j in range(1, n):\n\n            if nums[j] in jj:\n                dp[0][j] = dp[0][jj[nums[j]]] + 1\n            else:\n                dp[0][j] = 1\n\n            mm[0][j] = max(dp[0][j], mm[0][j-1])\n\n            jj[nums[j]] = j\n\n\n        for i in range(1,k+1):\n            jj = {}\n\n            dp[i][0] = dp[i-1][0]\n\n            for j in range(1, n):\n                dp[i][j] = dp[i-1][j]\n\n                if nums[j] in jj:\n                    dp[i][j] = max(dp[i][j], 1 + dp[i-0][jj[nums[j]]])\n                \n\n                dp[i][j] = max(dp[i][j], 1 + mm[i-1][j-1])\n                mm[i][j] = max(dp[i][j], mm[i][j-1])\n\n                jj[nums[j]] = j\n\n        return max(dp[k])\n\n",
    "submit_ts": 1717861782.0
}