{
    "username": "hwwwwwh",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0, m = grid.size(), n = grid[0].size();\n        for(int i = 0; i < m / 2; i++) {\n            for(int j = 0; j < n / 2; j++) {\n                int sum = grid[i][j] + grid[m - i - 1][j] + grid[i][n - j - 1] + grid[m - i - 1][n - j - 1];\n                ans += sum < 4 - sum ? sum : 4 - sum;\n            }\n        }\n        int sum = 0, count = 0;\n        if(m % 2) {\n            for(int j = 0; j < n / 2; j++) {\n                sum += grid[m / 2][j] * 2;\n                if(grid[m / 2][j] != grid[m / 2][n - j - 1]) {\n                    ans++;\n                    count++;\n                }\n            }\n        } \n        if(n % 2) {\n            for(int i = 0; i < m / 2; i++) {\n                sum += grid[i][n / 2] * 2;\n                if(grid[i][n / 2] != grid[m - i - 1][n / 2]) {\n                    ans++;\n                    count++;\n                }\n            }\n        }\n        if(n % 2 && m % 2) {\n            int center = grid[m / 2][n / 2];\n            sum = sum + center;\n            if(sum % 4 == 1 && center == 1) return ans + 1;\n            if(sum % 4 == 3 && center == 0) return ans + 1;\n            if(sum % 2) ans += 1;\n        }\n        if(sum % 4 == 0) return ans;\n        if(count == 0) return ans + 2; \n        return ans;\n    }\n};",
    "submit_ts": "1722698960",
    "subm_id": "552273385"
}