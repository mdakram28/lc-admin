{
    "username": "abhishekvaish",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        adj = [ [] for i in range(n) ]\n        for u,v in edges:\n            adj[u].append(v)\n            adj[v].append(u)\n            \n        down = [0] * n \n        time = [0] * n\n        \n        def dfs_down(u,p):\n            curr = 1 \n            if u % 2 == 0:\n                curr = 2\n            mx = 0\n            for v in adj[u]:\n                if v == p: continue \n                mx = max(mx, dfs_down(v,u))\n            \n            down[u] = mx \n            return curr + mx \n        \n        dfs_down(0,-1)\n        # print(\"----\"*n)\n        # print(down)\n        \n        def dfs_up(u,p,mx):\n            \n            # if p == -1: \n            #     mx = mp\n            # else:\n            #     mx = mp + 2 - (u%2)\n                \n            time[u] = max(down[u] , mx)\n            \n            mx1,mx2 = 0,0\n            for v in adj[u]:\n                if v == p: continue\n                e = 2 - (v%2)\n                if down[v] + e > mx1:\n                    mx2 = mx1\n                    mx1 = down[v] + e\n                elif down[v] + e > mx2:\n                    mx2 = down[v] + e\n            # print(u,mx,mx1,mx2)\n            for v in adj[u]:\n                if v == p: continue \n                e = 2 - (u%2)                \n                if down[v] + 2 - (v%2) == mx1:\n                    dfs_up(v,u, e + max(mx, mx2))\n                else:\n                    dfs_up(v,u, e + max(mx, mx1) )\n        \n        dfs_up(0,-1,0)\n        return time \n            \n            \n                \n                \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            ",
    "submit_ts": "1722699499",
    "subm_id": "1343213526"
}