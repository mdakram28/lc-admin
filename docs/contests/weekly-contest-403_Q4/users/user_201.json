{
    "username": "miscsb",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        // Case I:\n        int min = Integer.MAX_VALUE;\n        for (int i1 = 0; i1 < grid.length; i1++) {\n            for (int i2 = i1; i2 < grid.length; i2++) {\n                int val = find(grid, 0, i1,           0, grid[0].length)\n                        + find(grid, i1, i2,          0, grid[0].length)\n                        + find(grid, i2, grid.length, 0, grid[0].length);\n                if (val < min) min = val;\n            }\n        }\n        // Case II:\n        for (int j1 = 0; j1 < grid[0].length; j1++) {\n            for (int j2 = j1; j2 < grid[0].length; j2++) {\n                int val = find(grid, 0, grid.length, 0, j1)\n                        + find(grid, 0, grid.length, j1, j2)\n                        + find(grid, 0, grid.length, j2, grid[0].length);\n                if (val < min) min = val;\n            }\n        }\n        // Case III and IV:\n        for (int i1 = 0; i1 < grid.length; i1++) {\n            for (int j1 = 0; j1 < grid[0].length; j1++) {\n                int val = find(grid, 0, i1, 0, grid[0].length)\n                        + find(grid, i1, grid.length, 0, j1)\n                        + find(grid, i1, grid.length, j1, grid[0].length);\n                if (val < min) min = val;\n            }\n            for (int j1 = 0; j1 < grid[0].length; j1++) {\n                int val = find(grid, i1, grid.length, 0, grid[0].length)\n                        + find(grid, 0, i1, 0, j1)\n                        + find(grid, 0, i1, j1, grid[0].length);\n                if (val < min) min = val;\n            }\n        }\n        // Case V and VI:\n        for (int j1 = 0; j1 < grid[0].length; j1++) {\n            for (int i1 = 0; i1 < grid.length; i1++) {\n                int val = find(grid, 0, grid.length, 0, j1)\n                        + find(grid, 0, i1, j1, grid[0].length)\n                        + find(grid, i1, grid.length, j1, grid[0].length);\n                if (val < min) min = val;\n            }\n            for (int i1 = 0; i1 < grid.length; i1++) {\n                int val = find(grid, 0, grid.length, j1, grid[0].length)\n                        + find(grid, 0, i1, 0, j1)\n                        + find(grid, i1, grid.length, 0, j1);\n                if (val < min) min = val;\n            }\n        }\n        return min;\n    }\n    \n    public int find(int[][] grid, int a, int b, int c, int d) {\n        int minX = Integer.MAX_VALUE; int minY = Integer.MAX_VALUE;\n        int maxX = Integer.MIN_VALUE; int maxY = Integer.MIN_VALUE;\n        for (int i = a; i < b; i++) {\n            for (int j = c; j < d; j++) {\n                if (grid[i][j] == 0) continue;\n                if (i > maxX) maxX = i;\n                if (j > maxY) maxY = j;\n                if (i < minX) minX = i;\n                if (j < minY) minY = j;\n            }\n        }\n        if (minX == Integer.MAX_VALUE) return Integer.MAX_VALUE / 3;\n        return (maxX - minX + 1) * (maxY - minY + 1);\n    }\n}",
    "submit_ts": "1719113195",
    "subm_id": "1297319315"
}