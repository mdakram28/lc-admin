{
    "username": "Louma143",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n(grid.size()), m(grid[0].size()), res(0), n1(0); bool c(false);\n        for(int i(0); i<n/2; i++){\n            for(int j(0), l(m-1); j<l; j++, l--){\n                if(grid[i][j] != grid[i][l]){\n                    if(grid[n-1-i][j] == grid[n-1-i][l]){\n                        res++;\n                    }\n                    else res += 2;\n                }\n                else{\n                    if(grid[n-1-i][j] == grid[n-1-i][l]){\n                        if(grid[n-1-i][j] != grid[i][j]) res+=2; \n                    }\n                    else res++;\n                }\n            }\n        }\n        if(n%2 || m%2){\n            if(n%2){\n                for(int j(0), l(m-1); j<l; j++, l--){\n                    if(grid[n/2][j] != grid[n/2][l]){\n                        res++;\n                        c = true;\n                    }\n                    else if(grid[n/2][j]) n1 += 1;\n                }\n            }\n            if(m%2){\n                for(int j(0), l(n-1); j<l; j++, l--){\n                    if(grid[j][m/2] != grid[l][m/2]){\n                        res++;\n                        c = true;\n                    }\n                    else if(grid[j][m/2]) n1 += 1;\n                }\n            }\n            if(m%2 && n%2 && grid[n/2][m/2]) res++;\n        }\n        if(!c && n1%2) res +=2;\n        return res;\n    }\n};",
    "submit_ts": "1722699247",
    "subm_id": "1343205902"
}