{
    "username": "_Cypher_0101",
    "submission": "class SegmentTree:\n    def __init__(self,nums):\n        tree=[0]*4*len(nums)\n        \n        def f(ind=0,l=0,r=len(nums)-1):\n            # print(l,r,ind,(nums[l-1]<nums[l] and nums[l+1]<nums[l]) if l==r and l!=0 and l!=len(nums)-1 else None)\n            if l==r:\n                \n                if l!=0 and l!=len(nums)-1:tree[ind]=(nums[l-1]<nums[l] and nums[l+1]<nums[l])\n                else:tree[ind]=False\n                # print('ins',l,r,ind,tree[ind])\n            else:\n                mid=(l+r)//2\n                tree[ind]=f(ind*2+1,l,mid)+f(ind*2+2,mid+1,r)\n            return tree[ind]\n        \n        f()\n        # print(tree)\n        self.tree,self.nums=tree,nums\n    def update(self, index: int, val: int) -> None:\n        nums,tree=self.nums,self.tree\n        def f(ind=0,l=0,r=len(nums)-1):\n            if l==r==index:\n                nums[index]=val\n                if l!=0 and l!=len(nums)-1:tree[ind]=(nums[l-1]<nums[l] and nums[l+1]<nums[l])\n                else:tree[ind]=False\n            elif l>index or r<index:return tree[ind]\n            else:\n                mid=(l+r)//2\n                tree[ind]=f(ind*2+1,l,mid)+f(ind*2+2,mid+1,r)\n            return tree[ind]\n        f()\n        # print(tree)\n    def sum(self,left,right):\n        nums,tree=self.nums,self.tree\n        def f(ind=0,l=0,r=len(nums)-1):\n            if l>right or r<left:return 0\n            elif left<=l<=r<=right:return tree[ind]\n            else:\n                mid=(l+r)//2\n                return f(ind*2+1,l,mid)+f(ind*2+2,mid+1,r)\n        \n        return f()\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        s,ans=SegmentTree(nums),[]\n        for x,y,z in queries:\n            if x==1:\n                # print(y+1,z-1)\n                ans.append(s.sum(y+1,z-1) if z-y>1 else 0)\n            else:\n                nums[y]=z\n                # print(y)\n                s.update(y,z)\n                \n                if y-1>=0:s.update(y-1,nums[y-1])\n                if y+1<len(nums):s.update(y+1,nums[y+1])\n        print()\n        return ans",
    "submit_ts": "1718507853",
    "subm_id": "1289664452"
}