{
    "username": "differential_plantain",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        ll n = nums.size();\n        ll arr[n];\n        for (ll i{0}; i < n; i++)\n        {\n            arr[i] = target[i] - nums[i];\n        }\n        stack<ll> stuff;\n        ll ans{0};\n        for (ll i{0}; i < n; i++)\n        {\n            if (stuff.empty())\n            {\n                if (arr[i] != 0)\n                {\n                    stuff.push(arr[i]);\n                }\n                continue;\n            }\n\n            if(abs(arr[i] - stuff.top()) < max(abs(arr[i]), abs(stuff.top())))\n            {\n                if (abs(arr[i]) >= abs(stuff.top()))\n                {\n                    stuff.push(arr[i]);\n                }\n\n                else\n                {\n                    ans += abs(stuff.top() - arr[i]);\n                    while (!stuff.empty() && abs(arr[i]) < abs(stuff.top()))\n                    {\n                        stuff.pop();\n                    }\n                    stuff.push(arr[i]);\n                }\n            }\n\n            else\n            {\n                ans += abs(stuff.top());\n                while (!stuff.empty())\n                {\n                    stuff.pop();\n                }\n                if (arr[i] != 0)\n                {\n                    stuff.push(arr[i]);\n                }\n            }\n        }\n        if (!stuff.empty())\n        {\n            ans += abs(stuff.top());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532683",
    "subm_id": "1327991608"
}