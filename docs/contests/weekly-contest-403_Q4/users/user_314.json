{
    "username": "wwwap",
    "submission": "/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar minimumSum = function (grid) {\n  const n = grid.length\n  const m = grid[0].length\n  let ans = n * m\n\n  for (let i = 0; i < n - 1; i++) {\n    const grid1 = grid.slice(0, i + 1).map((row) => row.slice())\n    const ret1 = minimumArea(grid1)\n\n    for (let j = 0; j < m - 1; j++) {\n      const grid2 = grid.slice(i + 1).map((row) => row.slice(0, j + 1))\n      const grid3 = grid.slice(i + 1).map((row) => row.slice(j + 1))\n      // console.log(grid1, grid2, grid3);\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  for (let i = 0; i < n - 1; i++) {\n    const grid1 = grid.slice(i + 1).map((row) => row.slice())\n    const ret1 = minimumArea(grid1)\n\n    for (let j = 0; j < m - 1; j++) {\n      const grid2 = grid.slice(0, i + 1).map((row) => row.slice(0, j + 1))\n      const grid3 = grid.slice(0, i + 1).map((row) => row.slice(j + 1))\n      // console.log(grid1, grid2, grid3);\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  for (let j = 0; j < m - 1; j++) {\n    const grid1 = grid.map((row) => row.slice(0, j + 1))\n    const ret1 = minimumArea(grid1)\n\n    for (let i = 0; i < n - 1; i++) {\n      const grid2 = grid.slice(0, i + 1).map((row) => row.slice(j + 1))\n      const grid3 = grid.slice(i + 1).map((row) => row.slice(j + 1))\n      // console.log(grid1, grid2, grid3);\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  for (let j = 0; j < m - 1; j++) {\n    const grid1 = grid.map((row) => row.slice(j + 1))\n    const ret1 = minimumArea(grid1)\n\n    for (let i = 0; i < n - 1; i++) {\n      const grid2 = grid.slice(0, i + 1).map((row) => row.slice(0, j + 1))\n      const grid3 = grid.slice(i + 1).map((row) => row.slice(0, j + 1))\n      // console.log(grid1, grid2, grid3);\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  for (let i = 0; i < n - 1; i++) {\n    const grid1 = grid.slice(0, i + 1).map((row) => row.slice())\n    const ret1 = minimumArea(grid1)\n\n    for (let k = i + 1; k < n - 1; k++) {\n      const grid2 = grid.slice(i + 1, k + 1).map((row) => row.slice())\n      const grid3 = grid.slice(k + 1).map((row) => row.slice())\n\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  for (let j = 0; j < m - 1; j++) {\n    const grid1 = grid.map((row) => row.slice(0, j + 1))\n    const ret1 = minimumArea(grid1)\n\n    for (let k = j + 1; k < m - 1; k++) {\n      const grid2 = grid.map((row) => row.slice(j + 1, k + 1))\n      const grid3 = grid.map((row) => row.slice(k + 1))\n      const ret2 = minimumArea(grid2)\n      const ret3 = minimumArea(grid3)\n      ans = Math.min(ans, ret1 + ret2 + ret3)\n    }\n  }\n\n  return ans\n\n  function minimumArea(grid) {\n    const n = grid.length\n    const m = grid[0].length\n    let x1 = n\n    let x2 = 0\n    let y1 = m\n    let y2 = 0\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < m; j++) {\n        if (grid[i][j] === 1) {\n          x1 = Math.min(x1, i)\n          x2 = Math.max(x2, i)\n          y1 = Math.min(y1, j)\n          y2 = Math.max(y2, j)\n        }\n      }\n    }\n\n    const ret = (x2 - x1 + 1) * (y2 - y1 + 1)\n    return ret\n  }\n}\n",
    "submit_ts": 1719114002.0
}