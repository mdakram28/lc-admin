{
    "username": "k3x9_",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long i = 0, j = 0;\n        long long ans = 0;\n        while(j<n-1 && i<m-1){\n            if(horizontalCut[i] > verticalCut[j]){\n                ans += (horizontalCut[i] * (j+1));\n                i++;\n            }\n            else if(horizontalCut[i] < verticalCut[j]){\n                ans += (verticalCut[j] * (i+1));\n                j++;\n            }\n            else if(i>j){\n                ans += (horizontalCut[i] * (j+1));\n                i++;\n            }\n            else{\n                ans += (verticalCut[j] * (i+1));\n                j++;\n            }\n        }\n\n        while(i<m-1){\n            ans += (horizontalCut[i] * (j+1));\n            i++;\n        }\n        while(j<n-1){\n            ans += (verticalCut[j] * (i+1));\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925476",
    "subm_id": "1320255988"
}