{
    "username": "Abhay5648",
    "submission": "public class Solution {\n    private static final int MOD = 1_000_000_007;\n    private long[][][] dp;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        dp = new long[n][51][51];  \n\n       \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 51; j++) {\n                for (int k = 0; k < 51; k++) {\n                    dp[i][j][k] = -1;\n                }\n            }\n        }\n\n        return (int) findPairs(nums, 0, 0, 50); \n    }\n\n    private long findPairs(int[] nums, int idx, int prev1, int prev2) {\n        if (idx >= nums.length) {\n            return 1;\n        }\n\n        if (dp[idx][prev1][prev2] != -1) {\n            return dp[idx][prev1][prev2];\n        }\n\n        long ans = 0;\n        for (int i = 0; i <= nums[idx]; i++) {\n            int arr1Val = i;\n            int arr2Val = nums[idx] - i;\n            if (arr1Val >= prev1 && arr2Val <= prev2) {\n                ans = (ans + findPairs(nums, idx + 1, arr1Val, arr2Val)) % MOD;\n            }\n        }\n\n        dp[idx][prev1][prev2] = ans;\n        return ans;\n    }\n\n}\n",
    "submit_ts": "1723347089",
    "subm_id": "1351591632"
}