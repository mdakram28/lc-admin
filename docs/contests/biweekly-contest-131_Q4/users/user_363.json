{
    "username": "mittaludit768",
    "submission": "#include <vector>\n#include <unordered_set>\n#include <unordered_map>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    void update(int s, int e, int i, int q, int v,vector<int> &bit) {\n        if (s == e) {\n            bit[i] = v;\n            return;\n        }\n        int mid = s + (e - s) / 2;\n        if (q <= mid) {\n            update(s, mid, 2 * i + 1, q, v,bit);\n        } else {\n            update(mid + 1, e, 2 * i + 2, q, v,bit);\n        }\n        bit[i] = max(bit[2 * i + 1], bit[2 * i + 2]);\n    }\n\n    int query(int s, int e, int i, int qs, int qe,vector<int> &bit) {\n        if (qs <= s && qe >= e) {\n            return bit[i];\n        }\n        if (qs > e || qe < s) {\n            return INT_MIN;\n        }\n        int mid = s + (e - s) / 2;\n        int l = query(s, mid, 2 * i + 1, qs, qe,bit);\n        int r = query(mid + 1, e, 2 * i + 2, qs, qe,bit);\n        return max(l, r);\n    }\n\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<int> bit(5*100000,0);\n\n        vector<bool> v;\n        set<int> s;\n        unordered_map<int, int> m;\n\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                s.insert(q[1]);\n                auto it1 = s.lower_bound(q[1]);\n                auto it2 = s.upper_bound(q[1]);\n                int p,n;\n                if(it1!=s.begin())\n                    p=*prev(it1);\n                else \n                    p=0;\n                 if(it2!=s.end())\n                    n=*it2;\n                else \n                    n=100000;\n                m[n] = n - q[1];\n                m[q[1]] = q[1] - p;\n                update(0, 100000, 0, q[1], m[q[1]],bit);\n                update(0, 100000, 0, n, m[n],bit);\n            } else {\n                auto it = s.lower_bound(q[1]);\n                int p;\n                if(it!=s.begin())\n                    p=*prev(it);\n                else\n                    p=0;\n                if (q[1] - p >= q[2]) {\n                    v.push_back(true);\n                } else if (query(0, 100000, 0, 0, q[1],bit) >= q[2]) {\n                    v.push_back(true);\n                } else {\n                    v.push_back(false);\n                }\n            }\n        }\n\n        return v;\n    }\n};\n",
    "submit_ts": 1716652712.0
}