{
    "username": "Swapna16",
    "submission": "class Solution:\n    def __init__(self):\n        self.dp = {}\n\n    def solve(self, k, i, swa, c):\n        if i > k + 5:\n            return 0\n\n        if swa > 31:\n            return 0\n\n        if i in self.dp and self.dp[i][swa][c] != -1:\n            return self.dp[i][swa][c]\n\n        ans = 1 if i == k else 0\n        if c:\n            ans += self.solve(k, i - 1, swa, 0)\n        if i + (1 << swa) <= k + 1:\n            ans += self.solve(k, i + (1 <<swa), swa + 1, 1)\n\n        if i not in self.dp:\n            self.dp[i] = [[-1] * 2 for _ in range(32)]\n\n        self.dp[i][swa][c] = ans\n\n        return ans\n\n    def waysToReachStair(self, k):\n        return self.solve(k, 1, 0, 1)\n",
    "submit_ts": 1716090138.0
}