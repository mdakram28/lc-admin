{
    "username": "dushyantrajeev",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        int n = nums.length;\n        int[][] dushyant = new int[n][k + 1];\n        for (int[] row : dushyant) {\n            Arrays.fill(row, 1);\n        }\n        int maxLength = 1;\n        int[] maxiLength = new int[k + 1];\n        Arrays.fill(maxiLength, -1);\n        List<Map<Integer, Integer>> maxLengthsByValueAndChanges = new ArrayList<>();\n        \n        for (int i = 0; i <= k; i++) {\n            maxLengthsByValueAndChanges.add(new HashMap<>());\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int ind = 0; ind <= k; ind++) {\n                for (int l = 0; l < ind; l++) {\n                    dushyant[i][ind] = Math.max(dushyant[i][ind], 1 + maxiLength[l]);\n                }\n                if (maxLengthsByValueAndChanges.get(ind).containsKey(nums[i])) {\n                    dushyant[i][ind] = Math.max(dushyant[i][ind], 1 + maxLengthsByValueAndChanges.get(ind).get(nums[i]));\n                }\n                maxLength = Math.max(maxLength, dushyant[i][ind]);\n            }\n            for (int ind = 0; ind <= k; ind++) {\n                maxiLength[ind] = Math.max(maxiLength[ind], dushyant[i][ind]);\n                maxLengthsByValueAndChanges.get(ind).put(nums[i], Math.max(maxLengthsByValueAndChanges.get(ind).getOrDefault(nums[i], 0), dushyant[i][ind]));\n            }\n        }\n\n        return maxLength;\n    }\n}\n",
    "submit_ts": 1717861397.0
}