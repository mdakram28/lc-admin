{
    "username": "alicewang20",
    "submission": "class Solution {\npublic:\n    long long backtrack(int row, vector<pair<int, int>>& rooks, vector<vector<pair<int, int>>>& board) {\n        if (rooks.size() == 3) {\n            return 0;\n        }\n        long long ans = numeric_limits<long long int>::min();\n        //cout << \"rooks:\" << endl;\n        /*for (auto & [x, y] : rooks) {\n            cout << x << \", \" << y << endl;\n        }*/\n        //cout << endl;\n\n        for (int i = row; i < board.size() - 3 + rooks.size() + 1; i++) {\n            for (int j = 0; j < board[0].size(); j++) {\n                for (auto & [x, y] : rooks) {\n                    // column is already occupied so skip\n                    if (y == board[i][j].second) {\n                        goto inner;\n                    }\n                }\n\n                // impossible for board[i, j] to be invalid now?\n                //cout << \"pos: \" << i << \" \" << j << endl;\n                rooks.push_back({i, board[i][j].second});\n                ans = max(ans, board[i][j].first + backtrack(i + 1, rooks, board));\n                rooks.pop_back();\n                inner: ;\n            }\n        }\n\n        return ans; \n    }    \n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<pair<int, int>> rooks;\n        vector<vector<pair<int, int>>> b(board.size());\n\n        for (int i = 0; i < board.size(); i++) {\n            for (int j = 0; j < board[0].size(); j++) {\n                b[i].push_back({board[i][j], j});\n            }\n            sort(b[i].begin(), b[i].end(), greater<pair<int, int>>());\n            while (b[i].size() > 3) {\n                b[i].pop_back();\n            }\n        }\n\n        /*for (int i = 0; i < b.size(); i++) {\n            for (int j = 0; j < b[i].size(); j++) {\n                cout << i << \", \" << b[i][j].second << \" : \" << b[i][j].first << endl;\n            }\n        }*/\n\n        return backtrack(0, rooks, b);\n    }\n};",
    "submit_ts": "1723909023",
    "subm_id": "1359176530"
}