{
    "username": "monishaalla",
    "submission": "import java.util.*;\n\nclass Solution {\n    private static final int MOD = 1000000007;\n\n    public int numberOfPermutations(int n, int[][] requirements) {\n        // dp[i][k] -> number of permutations of first i elements with exactly k inversions\n        int[][] dp = new int[n + 1][400 + 1];\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int k = 0; k <= 400; k++) {\n                for (int j = 0; j < i; j++) {\n                    if (k - j >= 0) {\n                        dp[i][k] = (dp[i][k] + dp[i - 1][k - j]) % MOD;\n                    }\n                }\n            }\n        }\n\n        int[] target = new int[400 + 1];\n        Arrays.fill(target, -1);\n        for (int[] req : requirements) {\n            target[req[0]] = req[1];\n        }\n\n        int[][] dp2 = new int[n + 1][400 + 1];\n        dp2[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int k = 0; k <= 400; k++) {\n                if (target[i - 1] != -1 && target[i - 1] != k) {\n                    continue;\n                }\n                for (int j = 0; j < i; j++) {\n                    if (k - j >= 0) {\n                        dp2[i][k] = (dp2[i][k] + dp2[i - 1][k - j]) % MOD;\n                    }\n                }\n            }\n        }\n\n        return dp2[n][target[n - 1]];\n    }\n\n    public static void main(String[] args) {\n        Solution sol = new Solution();\n        int[][] requirements1 = { {2, 2}, {0, 0} };\n        System.out.println(sol.numberOfPermutations(3, requirements1)); // Output: 2\n\n        int[][] requirements2 = { {2, 2}, {1, 1}, {0, 0} };\n        System.out.println(sol.numberOfPermutations(3, requirements2)); // Output: 1\n\n        int[][] requirements3 = { {0, 0}, {1, 0} };\n        System.out.println(sol.numberOfPermutations(2, requirements3)); // Output: 1\n    }\n}\n",
    "submit_ts": "1719067617",
    "subm_id": "1296733042"
}