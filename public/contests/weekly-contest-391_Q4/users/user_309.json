{
    "username": "karthikeysaxena",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& a) {\n        map<long long, long long> s, d;\n        for (auto c: a) {\n            s[c[0] + c[1]]++;\n            d[c[0] - c[1]]++;\n        }\n        int ans = INT_MAX;\n        for (auto c: a) {\n            s[c[0] + c[1]]--;\n            d[c[0] - c[1]]--;\n            if (s[c[0] + c[1]] == 0) {\n                s.erase(c[0] + c[1]);\n            }\n            if (d[c[0] - c[1]] == 0) {\n                d.erase(c[0] - c[1]);\n            }\n            \n            auto sx1 = s.begin();\n            auto sx2 = s.end();\n            sx2--;\n            \n            auto dx1 = d.begin();\n            auto dx2 = d.end();\n            dx2--;\n            \n            ans = min(ans, (int) max(sx2->first - sx1->first, dx2->first - dx1->first));\n            \n            s[c[0] + c[1]]++;\n            d[c[0] - c[1]]++;\n        }\n        return ans;\n    }\n};"
}