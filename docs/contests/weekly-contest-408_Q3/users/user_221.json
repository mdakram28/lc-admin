{
    "username": "Rishab01",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        \n        int N = s.size(), res = 0;\n        vector<int> psum(N), L(N), R(N), idx;\n        \n        for(int i=0; i<N; ++i) {\n            if(i) {\n                psum[i] += psum[i-1];\n                R[i] += R[i-1];\n            }\n            \n            psum[i] += s[i] == '1';\n            \n            if(s[i] == '1') \n                R[i]++;\n            else {\n                if(i) res += R[i-1] * (R[i-1] + 1) / 2;\n                R[i] = 0;\n                idx.push_back(i);   \n            }\n        }\n        \n        res += R.back() * (R.back() + 1) / 2;\n        \n        for(int i=N-1; i>=0; --i) {\n            if(i < N-1) \n                L[i] += L[i+1];\n            \n            if(s[i] == '1')\n                L[i]++;\n            else\n                L[i] = 0;\n        }\n        \n        for(int i=1; i*i<=N; ++i) \n            for(int j=0; j+i-1<idx.size(); j++) {\n                \n                int tot = psum[idx[j+i-1]]-psum[idx[j]];\n                \n                int l = idx[j] == 0 ? 0 : R[idx[j]-1], r = idx[j+i-1] == N-1 ? 0 : L[idx[j+i-1]+1]; // mislabled by mistake\n                \n                int x = i*i;\n                int need = x - tot;\n                \n                if(need > l+ r) continue;\n                \n                for(int k=0; k<=l; ++k) {\n                    \n                    int rem = max(need-k, 0);\n                    res += max(r - rem + 1, 0);\n              \n                }\n                \n            \n            }\n          \n        return res;\n        \n    }\n};",
    "submit_ts": "1722137769",
    "subm_id": "1335773205"
}