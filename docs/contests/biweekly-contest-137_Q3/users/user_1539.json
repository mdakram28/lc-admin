{
    "username": "\u690e\u540d\u6d77\u73b2",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size();\n        int m=board[0].size();\n        vector<vector<int>>idx(n,vector<int>(m));\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                idx[i][j]=j;\n            }\n            sort(idx[i].begin(),idx[i].end(),[&](int x,int y){\n                return board[i][x]>board[i][y];\n            });\n        }\n\n        //vector<bool>y(m);\n        int t=max(n,m)+2;\n        long memo[t*t*t];\n\n        memset(memo,128,sizeof memo);\n\n        auto &&dfs=[&](auto &&dfs,int i,int cnt,int y1,int y2)->long{\n            if(cnt==0){\n                return 0;\n            }\n            else if(i==n){\n                return -1e15;\n            }\n            int s=i*t*t+y1*t+y2;\n            if(memo[s]>-1e10)return memo[s];\n            long res=-1e15;\n            for(int k=0;k<3;k++){\n                int j=idx[i][k];\n                if(j==y1||j==y2)continue;\n                int ny1=y1,ny2=y2;\n                if(y1==m)ny1=j;\n                else ny2=j;\n                res=max(res,dfs(dfs,i+1,cnt-1,ny1,ny2)+board[i][j]);\n            }\n            res=max(res,dfs(dfs,i+1,cnt,y1,y2));\n            return memo[s]=res;\n        };\n\n        return dfs(dfs,0,3,m,m);\n    }\n};",
    "submit_ts": "1723910190",
    "subm_id": "556340010"
}