{
    "username": "NirbhayPaliwal",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int,int>> s;\n        int curr=n-1;\n        vector<int> ans;\n        for(auto vec : queries)\n        {\n            int a = vec[0];\n            int b = vec[1];\n            auto it = s.lower_bound({a,0});\n            if(it!=s.begin())\n            {\n                it--;\n                pair<int,int> p = *it;\n                if(p.second >=b)\n                {\n                    ans.push_back(curr);\n                     continue;\n                }\n                it++;\n            }\n            if(it==s.end())\n            {   \n                curr-=(b-a);\n                curr+=1;\n                s.insert({a,b});\n                ans.push_back(curr);\n                continue;\n            }\n            pair<int,int> p = *it;\n            int c= p.first;\n            int d= p.second;\n            if(b>=d)\n            {\n                vector<pair<int,int>> er;\n                while(it!=s.end())\n                {\n                    p = *it;\n                    c= p.first;\n                    d= p.second;\n                    if(b>=d)er.push_back({c,d});\n                    else break;\n                    curr+=(d-c);\n                    curr--;\n                    it++;\n                }\n                s.insert({a,b});\n                curr -= (b-a);\n                curr++;\n                for(auto [a,b] : er)\n                {\n                    s.erase(s.find({a,b}));\n                }\n                ans.push_back(curr);\n                continue;\n            }\n            else\n            {\n                if(b<=c)\n                {\n                    s.insert({a,b});\n                    curr-=(b-a);\n                    curr++;\n                }\n                ans.push_back(curr);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741699",
    "subm_id": "1343751317"
}