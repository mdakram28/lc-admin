{
    "username": "jackieckc",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int c = 0;\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int d = nums[i] - target[i];\n            // int dd = ;\n            // cout << i << \" diff = \" << d << endl;\n            if (d > 0) {\n                // reduce\n                if (c < 0) {\n                    // c is reduce\n                    // cout << \" can use c < 0 \" << c << endl;\n                    d += c;\n                }\n                d = max(0, d);\n                // cout << \" d = \" << d << endl;\n                res += d;\n                c = -(nums[i] - target[i]);\n            } else if (d < 0) {\n                // inc\n                d = -d;\n                if (c > 0) {\n                    // cout << \" can use c > 0 \" << c << endl;\n                    d -= c;\n                }\n                d = max(0, d);\n                // cout << \" d = \" << d << endl << endl;\n                res += d;\n                c = -(nums[i] - target[i]);\n            } else {\n                c = 0;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721531971",
    "subm_id": "1327974458"
}