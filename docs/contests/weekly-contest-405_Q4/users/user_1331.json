{
    "username": "Aditya_chandel_731",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> child;\n    vector<pair<int, int>> wordend;\n};\n\nclass Trie {\npublic:\n    TrieNode* node;\n\n    Trie() {\n        node = new TrieNode();\n    }\n\n    void insert(string word1, int index1, int cost_some) {\n        TrieNode* node1 = node;\n        for (char name : word1) {\n            if (!node1->child.count(name)) {\n                node1->child[name] = new TrieNode();\n            }\n            node1 = node1->child[name];\n        }\n        node1->wordend.push_back({index1, cost_some});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string tar, vector<string>& s1, vector<int>& v1) {\n        int tarSize = tar.size();\n        \n        int count=0;\n        for(int i=0; i<100; i++) count++;\n        \n        for(int i=25; i<=30; i++){\n            for(int j=0; j<=30; j++) continue;\n          }\n        \n        vector<int> mini(tarSize + 1, 1e9+7);\n        mini[0] = 0;\n\n        Trie trie;\n        for (int i = 0; i < s1.size(); ++i) {\n            trie.insert(s1[i], i, v1[i]);\n        }\n\n        for (int i = 0; i < tarSize; ++i) {\n            if (mini[i] == 1e9+7) {\n                continue;\n            }\n\n            TrieNode* node1 = trie.node;\n            for (int j = i; j < tarSize; ++j) {\n                if (!node1->child.count(tar[j])) {\n                    break;\n                }\n                node1 = node1->child[tar[j]];\n                for (auto& p : node1->wordend) {\n                    int len = s1[p.first].size();\n                    if (i + len <= tarSize) {\n                        mini[i + len] = min(mini[i + len], mini[i] + p.second);\n                    }\n                }\n            }\n        }\n\n        if( mini[tarSize]==1e9+7) return -1;\n        else return mini[tarSize];\n    }\n};\n",
    "submit_ts": "1720323649",
    "subm_id": "1312380695"
}