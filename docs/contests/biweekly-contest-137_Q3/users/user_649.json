{
    "username": "kryptonite007",
    "submission": "class Solution {\npublic:\n    long long dp[102][102][102];\n    long long solve(int i, int p1, int p2, vector<vector<vector<int>>> &arr){\n        if(i == arr.size()){\n            return LLONG_MIN/2;\n        }\n        if(dp[i][p1+1][p2+1] != -1)return dp[i][p1+1][p2+1];\n        long long ans = LLONG_MIN/2;\n        if(p1 == -1){\n            ans = max(ans, arr[i][0][0]+solve(i+1, arr[i][0][1], p2, arr));\n        }\n        if(p1 == -1){\n            ans = max(ans, arr[i][1][0]+solve(i+1, arr[i][1][1], p2, arr));\n        }\n        if(p1 == -1){\n            ans = max(ans, arr[i][2][0]+solve(i+1, arr[i][2][1], p2, arr));\n        }\n        \n        if(p1 !=-1 && p2 == -1 && arr[i][0][1] != p1){\n            ans = max(ans, arr[i][0][0]+solve(i+1, p1, arr[i][0][1] , arr));\n        }\n        if(p1 !=-1 && p2 == -1 && arr[i][1][1] != p1){\n            ans = max(ans, arr[i][1][0]+solve(i+1, p1, arr[i][1][1] , arr));\n        }\n        if(p1 !=-1 && p2 == -1 && arr[i][2][1] != p1){\n            ans = max(ans, arr[i][2][0]+solve(i+1, p1, arr[i][2][1] , arr));\n        }\n        if(p1 != -1 && p2 !=-1 && arr[i][0][1] != p1 && arr[i][0][1] != p2){\n            ans = max(ans, (long long)arr[i][0][0]);\n        }\n        if(p1 != -1 && p2 !=-1 && arr[i][1][1] != p1 && arr[i][1][1] != p2){\n            ans = max(ans, (long long)arr[i][1][0]);\n        }\n        if(p1 != -1 && p2 !=-1 && arr[i][2][1] != p1 && arr[i][2][1] != p2){\n            ans = max(ans, (long long)arr[i][2][0]);\n        }\n        \n        ans = max(ans, solve(i+1, p1, p2, arr));\n        return dp[i][p1+1][p2+1] = ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        memset(dp, -1, sizeof(dp));\n        vector<vector<vector<int>>>arr(m);\n        for(int i = 0;i<m;i++){\n            priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>>> pq;\n            for(int j=0;j<n;j++){\n                pq.push({board[i][j], j});\n                if(pq.size()>3){\n                    pq.pop();\n                }\n            }\n            while(!pq.empty()){\n                arr[i].push_back(pq.top());\n                pq.pop();\n            }\n            reverse(arr[i].begin(), arr[i].end());\n        }\n        \n        return solve(0, -1, -1, arr);\n        \n    }\n};",
    "submit_ts": "1723909254",
    "subm_id": "1359185486"
}