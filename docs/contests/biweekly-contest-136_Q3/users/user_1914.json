{
    "username": "jain05akshat",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for(int i=0; i<n/2; i++) {\n            for(int j=0; j<m/2; j++) {\n                int p = grid[i][j];\n                int q = grid[n-i-1][j];\n                int r = grid[i][m-j-1];\n                int s = grid[n-i-1][m-j-1];\n                int ones = p+q+r+s;\n                ans += min(4-ones, ones);\n            }\n        }\n        int ok = 0;\n        int cnt = 0;\n        if(n%2 == 1) {\n            for(int j=0; j<m/2; j++) {\n                if(grid[n/2][j] != grid[n/2][m-j-1]) {\n                    ans++;\n                    ok++;\n                }\n                else if(grid[n/2][j] == 1) {\n                    cnt++;\n                }\n            }\n        }\n        if(m%2 == 1) {\n            for(int i=0; i<n/2; i++) {\n                if(grid[i][m/2] != grid[n-i-1][m/2]) {\n                    ans++;\n                    ok++;\n                }\n                else if(grid[i][m/2] == 1) {\n                    cnt++;\n                }\n            }\n        }\n        if(n%2 == 1 && m%2 == 1) {\n            if(grid[n/2][m/2] == 1) {\n                ans++;\n            }\n        }\n        if(!ok && cnt%2 == 1) {\n            ans+=2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699756",
    "subm_id": "1343221358"
}