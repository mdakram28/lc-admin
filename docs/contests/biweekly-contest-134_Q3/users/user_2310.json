{
    "username": "adi_tyarai",
    "submission": "class Solution {\npublic:\n    bool isAlternatingGroup(const vector<int>& colors, int start, int k) {\n    for (int i = 0; i < k; ++i) {\n        // current and next index in the window\n        int curr = (start + i) % colors.size();\n        int next = (start + i + 1) % colors.size();\n        if (colors[curr] == colors[next]) {\n            return false;\n        }\n    }\n    return true;\n}\n    int numberOfAlternatingGroups(vector<int>& cl, int k) {\n        set<int>st;\n        \n        for(int i=1;i<cl.size();i++)\n        {\n            if(cl[i]==cl[i-1]){\n                st.insert(i);\n            }\n        }\n        \n        if(cl[0]==cl[cl.size()-1])st.insert(0);\n        \n        int ans=0,cnt=0;\n        int j=0;\n        int n=cl.size();\n        for(int i=0;j<cl.size();i++)\n        {\n            int f=i%n;\n            if(st.count(f)){\n                cnt++;\n            }\n            if(i-j+1==k){\n                if(st.count(j))\n                    cnt--;\n                if(cnt==0)\n                    ans++;\n                j++;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720280939",
    "subm_id": "1311807396"
}