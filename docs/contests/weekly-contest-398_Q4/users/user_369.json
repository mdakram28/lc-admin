{
    "username": "hellotestabc",
    "submission": "class Solution {\npublic:\n    int traverse(int pos, int jump, bool down, int k, vector<vector<unordered_map<int, int>>>& dp) {\n        if (pos > k + 1) {\n            return 0;\n        }\n        \n        if (dp[jump][down].contains(pos)) {\n            return dp[jump][down][pos];\n        }\n        \n        int total = 0;\n        \n        if (pos == k) {\n            total = 1;\n        }\n        \n        if (!down && pos > 0) {\n            total += traverse(pos - 1, jump, true, k, dp);\n        }\n        \n        total += traverse(pos + pow(2, jump), jump + 1, false, k, dp);\n        \n        return dp[jump][down][pos] = total;\n    }\n    \n    int waysToReachStair(int k) {\n        vector<vector<unordered_map<int, int>>> dp(30, vector<unordered_map<int, int>>(2));\n        \n        return traverse(1, 0, false, k, dp);\n    }\n};",
    "submit_ts": 1716087666.0
}