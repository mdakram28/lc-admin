{
    "username": "kvedula2004",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 5:\n            if n == 1: return \"5\"\n            num = [\"5\"]\n            for i in range(n-2):\n                num.append(\"9\")\n            num.append(\"5\")\n            return ''.join(num)\n        if k == 1 or k == 3 or k == 9:\n            num = [\"9\" for i in range(n)]\n            return ''.join(num)\n        if k == 2:\n            if n == 1: return \"8\"\n            num = [\"8\"]\n            for i in range(n-2):\n                num.append(\"9\")\n            num.append(\"8\")\n            return ''.join(num)\n        if k == 4:\n            if n <= 3: return \"8\"*n\n            num = [\"8\", \"8\"]\n            for i in range(n-4):\n                num.append(\"9\")\n            num.append(\"8\")\n            num.append(\"8\")\n            return ''.join(num)\n        if k == 8:\n            if n <= 5: return \"8\"*n\n            num = [\"8\", \"8\", \"8\"]\n            for i in range(n-6):\n                num.append(\"9\")\n            num.append(\"8\")\n            num.append(\"8\")\n            num.append(\"8\")\n            return ''.join(num)\n        if k == 6:\n            if n == 1: return \"6\"\n            if n == 2: return \"66\"\n            if n == 3: return \"888\"\n            if n % 2 == 0:\n                num = [\"8\"]\n                for i in range(n//2-2):\n                    num.append('9')\n                num.append(\"7\")\n                num.append(\"7\")\n                for i in range(n//2-2):\n                    num.append('9')\n                num.append(\"8\")\n                return \"\".join(num)\n            else:\n                num = [\"8\"]\n                for i in range(n//2-1):\n                    num.append('9')\n                num.append(\"8\")\n                for i in range(n//2-1):\n                    num.append('9')\n                num.append(\"8\")\n                return \"\".join(num)\n        else:\n            if n == 1: return \"7\"\n            if n == 2: return \"77\"\n            middleDigit = [5,7,7,9,4,4,6,4,4,9,7,7]\n            digit = str(middleDigit[(n-3)%(len(middleDigit))])\n            num = []\n            for i in range((n-1)//2):\n                num.append(\"9\")\n            num.append(digit)\n            if n % 2 == 0:\n                num.append(digit)\n            for i in range((n-1)//2):\n                num.append(\"9\")\n            return ''.join(num)\n            ",
    "submit_ts": "1723949497",
    "subm_id": "1359721083"
}