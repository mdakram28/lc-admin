{
    "username": "huanshin",
    "submission": "class Solution {\n    struct trie\n    {\n        struct trie *child[26];\n        bool is_end;\n        int cost;\n    };\n\n\n    struct trie *root = new trie();    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.length();\n        vector<int> dp(n + 1, -1);\n        \n        build_trie(words, costs);\n        \n        dfs(target, dp, 0);\n        \n        //for(int i = 0; i < n; i++)\n           // printf(\"%d \", dp[i]);     \n        \n\n        return dfs(target, dp, 0) == INT_MAX / 2 ? -1 : dp[0];\n\n    }\n    \n    int dfs(string &target, vector<int>& dp, int start)\n    {\n        int n = target.size();\n        struct trie *curr = root;\n        \n        if(start == n)\n            return 0;\n        \n        if(dp[start] != -1)\n            return dp[start];\n        \n       // printf(\"Enter %d \\n\", start);\n        dp[start] = INT_MAX / 2;\n        \n        for(int i = start; i < target.size(); i++)\n        {\n            if(curr->child[target[i] - 'a'] == NULL)\n                break;\n            curr = curr->child[target[i] - 'a'];\n            \n            if(curr->is_end == true)\n            {\n                //printf(\"%d %d\\n\", i, curr->cost);\n                dp[i+1] = dfs(target, dp, i+1);\n                dp[start] = min(dp[start], curr->cost + dp[i+1]);\n            }\n        }\n\n        //printf(\"~~%d %d\\n\", start, dp[start]);\n        return dp[start];\n    }\n    \n    void build_trie(vector<string>& Dict, vector<int>& costs)\n    {\n        int cnt = 0;\n        \n        for(auto i : Dict)\n        {\n            struct trie *curr = root;\n            for(auto w : i)\n            {\n                if(curr->child[w - 'a'] == NULL)\n                    curr->child[w - 'a'] = new trie();\n                curr = curr->child[w - 'a'];\n            }\n\n                \n            curr->is_end = true;\n            if(curr->cost == 0)\n                curr->cost = costs[cnt++];\n            else\n                curr->cost = min(curr->cost, costs[cnt++]);\n        }\n\n        return;\n    }\n    \n};",
    "submit_ts": "1720322850",
    "subm_id": "1312360737"
}