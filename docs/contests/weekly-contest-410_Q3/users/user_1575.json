{
    "username": "tlecodes",
    "submission": "class Solution {\npublic:\n    int dp[2003][51][51];\n    int mod = 1e9 + 7;\n    int helper(int index, int prev1, int prev2, vector<int> &nums, int n) {\n        if (index == n) {\n            return 1;\n        }\n        if (dp[index][prev1][prev2] != -1) {\n            return dp[index][prev1][prev2];\n        }\n        int ans = 0, curr1, curr2;\n        for (int val = 0; val <= nums[index]; val++) {\n            curr1 = val;\n            curr2 = nums[index] - val;\n            if (curr1 >= prev1 && prev2 >= curr2) {\n                ans = (ans % mod + helper(index + 1, curr1, curr2, nums, n) % mod) % mod;\n            }\n        }\n        return dp[index][prev1][prev2] = ans % mod;\n    }\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        memset(dp, -1, sizeof(dp));\n        return helper(0, 0, 50, nums, n);\n    }\n};",
    "submit_ts": "1723346263",
    "subm_id": "1351573737"
}