{
    "username": "ujjwalmish",
    "submission": "class Solution {\npublic:\n    #define loop(i,a,b) for(int i=a;i<b;i++)\n#define pool(i,a,b) for(int i=a;i>=b;i--)\n#define pb push_back\n#define um unordered_map\n#define all(a) a.begin(), a.end()\n#define rall(a) a.rbegin(), a.rend()\n#define sz(a) a.size()\ntypedef long long ll;\ntypedef vector<int>vi;\ntypedef pair<int,int>pi;\n    long long maximumValueSum(vector<vector<int>>& grid) {\n         ll max_sum = LLONG_MIN;\n    int m=sz(grid),n=sz(grid[0]);\n        \n    vector<vector<pi>> sortedRows(m);\nfor(int i = 0; i < m; i++) {\n        for(int j = 0; j < n; j++) {\n            sortedRows[i].push_back({grid[i][j], j});\n        }\n        sort(sortedRows[i].rbegin(), sortedRows[i].rend());\n    }\n    for(int i = 0; i < m; i++) {\n        for(int j = i + 1; j < m; j++) {\n            for(int k = 0; k < min(3, n); k++) {\n                for(int l = 0; l < min(3, n); l++) {\n                    if(sortedRows[i][k].second == sortedRows[j][l].second)\n                        continue;\n\n                    for(int x = 0; x < m; x++) {\n                        if(x == i || x == j)\n                            continue;\n                        for(int y = 0; y < min(3, n); y++) {\n                            if(sortedRows[x][y].second != sortedRows[i][k].second &&\n                               sortedRows[x][y].second != sortedRows[j][l].second) {\n                                ll sum = 1ll*sortedRows[i][k].first + 1ll*sortedRows[j][l].first + 1ll*sortedRows[x][y].first;\n                                max_sum = max(max_sum, sum);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n        return max_sum;\n    }\n};",
    "submit_ts": "1723907224",
    "subm_id": "1359096723"
}