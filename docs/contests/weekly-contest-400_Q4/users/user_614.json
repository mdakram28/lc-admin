{
    "username": "suyasho786",
    "submission": "from typing import List\nimport numpy as np\n\nclass Solution:\n    \n    def add(self, buffer, value):\n        index = 0\n        while value:\n            value, buffer[index] = value & buffer[index], value ^ buffer[index]\n            index += 1\n\n    def subtract(self, buffer, value):\n        index = 0\n        while value:\n            value, buffer[index] = value & ~buffer[index], value ^ buffer[index]\n            index += 1\n\n    def compute_value(self, buffer, element_count):\n        index = 0\n        result = -1\n        while element_count:\n            if element_count % 2 > 0:\n                result &= buffer[index]\n            else:\n                result &= ~buffer[index]\n            element_count //= 2\n            index += 1\n        return result\n    \n    def sexx(self, array, target):\n        buffer = np.zeros(32, np.int64)\n        n = len(array)\n        left = right = 0\n        current_value = target\n        min_difference = np.int64(2**63-1)\n        count = 0\n\n        while left < n:\n            if current_value < target or right == n:\n                self.subtract(buffer, array[left])\n                left += 1\n                count -= 1\n            else:\n                self.add(buffer, array[right])\n                right += 1\n                count += 1\n\n            if right > left:\n                current_value = self.compute_value(buffer, count)\n                difference = abs(current_value - target)\n                if min_difference > difference:\n                    min_difference = difference\n            else:\n                current_value = target\n\n        return min_difference\n\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        return self.sexx(nums, k)\n",
    "submit_ts": 1717299626.0
}