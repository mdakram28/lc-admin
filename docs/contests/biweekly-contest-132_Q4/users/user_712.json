{
    "username": "Eren_Midoriya27",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size(), ans=1;\n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        vector<int>v(k+1,-1); \n        vector<map<int,int>>m(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+v[l]); \n                } \n                if(m[j].find(nums[i])!=m[j].end()) dp[i][j]=max(dp[i][j],1+m[j][nums[i]]); \n                ans=max(ans,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                v[j]=max(v[j],dp[i][j]); m[j][nums[i]]=max(m[j][nums[i]],dp[i][j]); \n            } \n        } \n        return ans; \n\n    }\n};",
    "submit_ts": 1717861512.0
}