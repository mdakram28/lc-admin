{
    "username": "vassu118",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int cnt = 1;\n        int i = 1;\n        while(i < n && colors[i] != colors[i - 1]) {\n            cnt += 1;\n            i += 1;\n        }\n        if(i == n && colors[0] != colors[n - 1]) return n;\n        int j = n - 1;\n        while(j >= 0 && colors[j] != colors[(j + 1) % n]) j -= 1, cnt += 1;\n        int ans = max(cnt - k + 1, 0);\n        cnt = 1;\n        i += 1;\n        for(;i<=j;i++) {\n            if(colors[i] != colors[i - 1]) cnt += 1;\n            else {\n                ans += max(0, cnt - k + 1);\n                cnt = 1;\n            }\n        }\n        ans += max(0, cnt - k + 1);\n        return ans;\n    }\n};",
    "submit_ts": "1720276725",
    "subm_id": "1311629470"
}