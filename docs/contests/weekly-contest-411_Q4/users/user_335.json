{
    "username": "Shishir Kushwah",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<long long> count_0(n, 0);\n        vector<long long> count_1(n, 0);\n        \n        int cnt0 = 0, cnt1 = 0;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') cnt0++;\n            else cnt1++;\n            \n            count_0[i] = cnt0;\n            count_1[i] = cnt1;\n        }\n        \n        vector<long long> valid_ind(n);\n        for (int i = 0; i < n; i++) {\n            int req_0 = (i == 0) ? k : k + count_0[i-1];\n            int req_1 = (i == 0) ? k : k + count_1[i-1];\n            \n            int lower0 = upper_bound(count_0.begin(), count_0.end(), req_0) - count_0.begin();\n            int lower1 = upper_bound(count_1.begin(), count_1.end(), req_1) - count_1.begin();\n            \n            lower0 = min(lower0 - 1, n - 1);  \n            lower1 = min(lower1 - 1, n - 1);  \n            \n            int ind = max(lower0, lower1);\n            valid_ind[i] = ind;\n        }\n        \n        for(int i=0;i<n;i++) cout<<valid_ind[i]<<\" \";\n        cout<<endl;\n        vector<long long> prefix(n);\n        prefix[0] = valid_ind[0] - 0 + 1;\n        \n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i-1] + (valid_ind[i] - i + 1);\n        }\n        for(int i=0;i<n;i++) cout<<prefix[i]<<\" \";\n        cout<<endl;\n        vector<long long> ans;\n        for (int i = 0; i < queries.size(); i++) {\n            int left = queries[i][0];\n            int right = queries[i][1];\n            long long temp = 0;\n            \n            if (left == right) {\n                ans.push_back(1);  \n            } else {\n                long long l = upper_bound(valid_ind.begin() + left, valid_ind.begin() + right + 1, right) - valid_ind.begin();\n                l = min(l - 1, (long long)right);  \n\n                if(l>=0) temp = (left == 0 ) ? prefix[l] : prefix[l] - prefix[left-1];\n                temp += (1ll * (right - l) * (right - l + 1)) / 2;\n                \n                ans.push_back(temp);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723952867",
    "subm_id": "1359806622"
}