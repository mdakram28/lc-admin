{
    "username": "sbian31",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        row = [[] for _ in range(m)]\n        col = [[] for _ in range(n)]\n\n        for i in range(m):\n            mx, mxc, mx2, mxc2, mx3, mxc3 = float('-inf'), None, float('-inf'), None, float('-inf'), None\n            for j in range(n):\n                if board[i][j] > mx:\n                    mx2, mx3 = mx, mx2\n                    mxc2, mxc3 = mxc, mxc2\n                    mx = board[i][j]\n                    mxc = j\n                elif board[i][j] > mx2:\n                    mx3 = mx2\n                    mxc3 = mxc2\n                    mx2 = board[i][j]\n                    mxc2 = j\n                elif board[i][j] > mx3:\n                    mx3 = board[i][j]\n                    mxc3 = j\n            row[i].append(mxc)\n            row[i].append(mxc2)\n            row[i].append(mxc3)\n\n        for j in range(n):\n            mx, mxr, mx2, mxr2, mx3, mxr3 = float('-inf'), None, float('-inf'), None, float('-inf'), None\n            for i in range(m):\n                if board[i][j] > mx:\n                    mx2, mx3 = mx, mx2\n                    mxr2, mxr3 = mxr, mxr2\n                    mx = board[i][j]\n                    mxr = i\n                elif board[i][j] > mx2:\n                    mx3 = mx2\n                    mxr3 = mxr2\n                    mx2 = board[i][j]\n                    mxr2 = i\n                elif board[i][j] > mx3:\n                    mx3 = board[i][j]\n                    mxr3 = i\n            col[j].append(mxr)\n            col[j].append(mxr2)\n            col[j].append(mxr3)\n        \n        ans = float('-inf')\n        for i in range(m):\n            r1 = i\n            c1 = row[i][0]\n            for j in range(n):\n                if j == c1:\n                    continue\n                c2 = j\n                if col[j][0] != r1:\n                    r2 = col[j][0]\n                else:\n                    r2 = col[j][1]\n                for k in range(m):\n                    if k == r1 or k == r2:\n                        continue\n                    if row[k][0] != c1 and row[k][0] != c2:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[k][row[k][0]])\n                    elif row[k][1] != c1 and row[k][1] != c2:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[k][row[k][1]])\n                    else:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[k][row[k][2]])\n        for j in range(n):\n            c1 = j\n            r1 = col[j][0]\n            for i in range(m):\n                if i == r1:\n                    continue\n                r2 = i\n                if row[i][0] != c1:\n                    c2 = row[i][0]\n                else:\n                    c2 = row[i][1]\n                for k in range(n):\n                    if k == c1 or k == c2:\n                        continue\n                    if col[k][0] != r1 and col[k][0] != r2:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[col[k][0]][k])\n                    elif col[k][1] != r1 and col[k][1] != r2:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[col[k][1]][k])\n                    else:\n                        ans = max(ans, board[r1][c1] + board[r2][c2] + board[col[k][2]][k])\n        return ans",
    "submit_ts": "1723908727",
    "subm_id": "1359164690"
}