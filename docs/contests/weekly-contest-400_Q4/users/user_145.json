{
    "username": "YarosHarm",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        int[] arr = new int[30];\n        int min = Integer.MAX_VALUE;\n        int l = 0;\n        for(int r = 0; r < n; r++) {\n            int cr = nums[r];\n            for(int j = 0; j < 30; j++) {\n                arr[j] += ((cr >> j) & 1);\n            }\n            min = Math.min(min, Math.abs(k - eval(arr, r - l + 1)));\n            while(l <= r && eval(arr, r - l + 1) < k) {\n                int cl = nums[l];\n                for(int j = 0; j < 30; j++) {\n                    arr[j] -= ((cl >> j) & 1);\n                }\n                l++;\n                min = Math.min(min, Math.abs(k - eval(arr, r - l + 1)));\n            }\n        }\n\n        return min;\n    }\n\n    int eval(int[] arr, int size) {\n        int res = 0;\n        for(int i = 0; i < 30; i++) {\n            if(arr[i] == size) {\n                res |= (1 << i);\n            }\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1717297847",
    "subm_id": "1274758020"
}