{
    "username": "pintusingh15689",
    "submission": "#include <vector>\n#include <unordered_map>\n#include <tuple>\n#include <functional>\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n     unordered_map<long long, long long> dp;\n        return solve(nums, 0, 0ll, 50, dp);\n    }\n\nprivate:\n    // Encode the state into a single long long integer\n    long long encodeState(int i, long long mn, long long mx) const {\n        // Use a large base to ensure unique encoding\n        const long long base = 100000; \n        return i * base * base + mn * base + mx;\n    }\n\n    long long solve(vector<int>& nums, int i, long long mn, long long mx, unordered_map<long long, long long> &dp) {\n        if (i >= nums.size()) return 1;\n\n        long long key = encodeState(i, mn, mx);\n        if (dp.find(key) != dp.end()) return dp[key];\n\n        long long count = 0;\n        for (int j = 0; j <= nums[i]; ++j) {\n            if (j >= mn && nums[i] - j <= mx) {\n                count = (count + solve(nums, i + 1, j, nums[i] - j, dp)) % 1000000007;\n            }\n        }\n\n        dp[key] = count;\n        return count;\n    }\n};\n\n// class Solution {\n// public:\n//     int countOfPairs(vector<int>& nums) {\n//         unordered_map<long long,unordered_map<long long,long long>> dp(nums.size(),vector<long long>(51,-1));\n//         return solve(nums,0,50,dp);\n//     }\n//     long long solve(vector<int> nums,int i,int mx,vector<vector<long long>> &dp){\n//         if(i>=nums.size()) return 1;\n//         if(dp[i][mx]!=-1) return dp[i][mx];\n//         long long count=0;\n//         for(int mn=0;mn<=nums[i];mn++){\n//             for(int j=nums[i];j<=mn;j++){\n//                if(nums[i]-j<=mx){\n//                  count=(count+solve(nums,i+1,nums[i]-j,dp))%1000000007;\n//                }\n//             }\n//         }\n//         return dp[i][mx]=count;\n//     }\n// };",
    "submit_ts": "1723346647",
    "subm_id": "1351582091"
}