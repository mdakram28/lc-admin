{
    "username": "minixue",
    "submission": "#define inf (1000000000)\n#define ninf (-1000000000)\nclass Solution {\npublic:\n    int dist(vector<int> &l, vector<int> &r) {\n        return abs(r[0] - l[0]) + abs(r[1] - l[1]);\n    }\n    pair<vector<int>, vector<int>> maxDist(vector<vector<int>> &points) {\n        vector<int> bl = {ninf, ninf}, tl = {inf, ninf}, br = {ninf, inf}, tr = {inf, inf};\n        for(vector<int> &point : points) {\n            if(point[0] + point[1] > bl[0] + bl[1]) bl = point;\n            if(point[0] - point[1] > br[0] - br[1]) br = point;\n            if(- point[0] + point[1] > - tl[0] + tl[1]) tl = point;\n            if(- point[0] - point[1] > - tr[0] - tr[1]) tr = point;\n        }\n        vector<vector<int>> c = {bl, tl, br, tr};\n        pair<vector<int>, vector<int>> res = {{0, 0}, {0, 0}};\n        for(int i = 0; i < 4; ++ i) {\n            if(c[i][0] == inf || c[i][1] == ninf) continue;\n            for(int j = i + 1; j < 4; ++ j) {\n                if(c[j][0] == inf || c[j][1] == ninf) continue;\n                if(dist(c[i], c[j]) > dist(res.first, res.second)) res = {c[i], c[j]};\n            }\n        }\n        return res;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        pair<vector<int>, vector<int>> p = maxDist(points);\n        vector<int> a = p.first, b = p.second;\n        vector<vector<int>> tmp1, tmp2;\n        bool u = true, v = true;\n        for(vector<int> &point : points) {\n            if(u == true && dist(point, a) == 0) {\n                u = false;\n            }\n            else {\n                tmp1.push_back(point);\n            }\n            if(v == true && dist(point, b) == 0) {\n                v = false;\n            }\n            else {\n                tmp2.push_back(point);\n            }\n        }\n        auto x = maxDist(tmp1), y = maxDist(tmp2);\n        return min(dist(x.first, x.second), dist(y.first, y.second));\n    }\n};"
}