{
    "username": "Wibo",
    "submission": "#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\ntemplate<class T>\nstruct RMQ {\n\tvector<vector<T>> jmp;\n\tRMQ(const vector<T>& V) : jmp(1, V) {\n\t\tfor (int pw = 1, k = 1; pw * 2 <= sz(V); pw *= 2, ++k) {\n\t\t\tjmp.emplace_back(sz(V) - pw * 2 + 1);\n\t\t\trep(j,0,sz(jmp[k]))\n\t\t\t\tjmp[k][j] = jmp[k - 1][j] & jmp[k - 1][j + pw];\n\t\t}\n\t}\n\tT query(int a, int b) {\n\t\tassert(a < b); // or return inf if a == b\n\t\tint dep = 31 - __builtin_clz(b - a);\n\t\treturn jmp[dep][a] & jmp[dep][b - (1 << dep)];\n\t}\n};\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        RMQ sp(nums);\n        \n        int ans = 1e9+3;\n        for (int i=0; i<n; i++) {\n            // cari j terkecil sehingga sp.query(i, j) < k\n            int l = i, r = n-1, j = n;\n            while (l <= r) {\n                int mid = (l+r)/2;\n                if (sp.query(i, mid+1) < k) {\n                    j = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            \n            if (j < n) ans = min(ans, abs(k - sp.query(i, j+1)));\n            if (j > i) ans = min(ans, abs(k - sp.query(i, j)));\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717296844.0
}