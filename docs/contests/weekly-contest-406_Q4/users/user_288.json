{
    "username": "d_ananta_",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        long long ans = 0;\n        int h = 0, v = 0;\n        bool vert;\n        while(!horizontalCut.empty() || !verticalCut.empty()) {\n            if(horizontalCut.empty()) vert = 1;\n            else if(verticalCut.empty()) vert = 0;\n            else if(horizontalCut.back() >= verticalCut.back()) vert = 0;\n            else vert = 1;\n            if(vert) {\n                ans += verticalCut.back() * (h+1);\n                verticalCut.pop_back();\n                v++;\n            } else {\n                ans += horizontalCut.back() * (v+1);\n                horizontalCut.pop_back();\n                h++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925375",
    "subm_id": "1320252580"
}