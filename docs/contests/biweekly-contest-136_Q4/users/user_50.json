{
    "username": "woruo27",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        const int n = edges.size() + 1;\n        vector<vector<int>> g(n);\n        for (const auto& i : edges)\n            g[i[0]].push_back(i[1]), g[i[1]].push_back(i[0]);\n        vector<int> dp(n);\n        auto dfs1 = [&](const int cur, const int pa, auto&& self) -> int {\n            for (const auto& i : g[cur])\n                if (i != pa)\n                    dp[cur] = max(dp[cur], self(i, cur, self) + 2 - i % 2);\n            return dp[cur];\n        };\n        vector<int> res(n);\n        auto dfs2 = [&](const int cur, const int pa, auto&& self) -> void {\n            res[cur] = dp[cur];\n            multiset<int> s{0};\n            for (const auto& i : g[cur])\n                s.insert(dp[i] + 2 - i % 2);\n            for (const auto& i : g[cur]) {\n                if (i == pa)\n                    continue;\n                s.erase(s.find(dp[i] + 2 - i % 2));\n                const int prv = dp[i];\n                dp[cur] = *--end(s);\n                dp[i] = max(dp[i], dp[cur] + 2 - cur % 2);\n                self(i, cur, self);\n                dp[i] = prv;\n                dp[cur] = res[cur];\n                s.insert(dp[i] + 2 - i % 2);\n            }\n        };\n        dfs1(0, -1, dfs1);\n        dfs2(0, -1, dfs2);\n        return res;\n    }\n};",
    "submit_ts": "1722697902",
    "subm_id": "552268367"
}