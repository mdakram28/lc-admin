{
    "username": "vaibhav_134",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<int> diffCount(k+1,0),maxAttainable(k+1,0);\n        int n = nums.size();\n\n        for (int i=0;i<n-1-i;i++) {\n            int diff = abs(nums[i] - nums[n-i-1]);\n            diffCount[diff]++;\n\n            int mxDiff = max(max(nums[i],k-nums[i]),max(nums[n-i-1],k - nums[n-i-1]));\n            maxAttainable[mxDiff]++;\n        }\n\n        int ans = nums.size(),curSum = 0;\n        for (int i=k;i>=0;i--) {\n            curSum += maxAttainable[i];\n            int countGroupRight = curSum - diffCount[i];\n            int countGroupLeft = n/2 - countGroupRight - diffCount[i];\n\n            int ops = countGroupLeft*2 + countGroupRight;\n            // cout<<i<<\" \"<<countGroupLeft<<\" \"<<countGroupRight<<\" \"<<ops<<endl;\n            ans = min(ans,ops);\n        }\n\n        return ans;\n    }\n};\n\n// 1\n\n// 0,4 -> 4,6\n// 1,5 -> 4,5\n// 2,6 -> 4,6\n// 3,3 -> 0,3",
    "submit_ts": "1721487922",
    "subm_id": "1327405661"
}