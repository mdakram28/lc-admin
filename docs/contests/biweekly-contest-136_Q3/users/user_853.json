{
    "username": "AG-88301",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ans = 0\n        n = len(grid)\n        m = len(grid[0])\n        for r in range(n//2):\n            for c in range(m//2):\n                corners = [grid[r][c],grid[r][-c-1],grid[-r-1][-c-1],grid[-r-1][c]]\n                c0 = corners.count(0)\n                c1 = corners.count(1)\n                ans += min(c0, c1)\n\n        if n%2 == 0 and m%2 == 0:\n            return ans\n        \n        if n%2 == 1 and m%2 == 1 and grid[n//2][m//2] != 0:\n            ans += 1\n\n        ones = 0\n        flips = 0\n        if n%2 == 1:\n            row = grid[n//2]\n            for i in range(m//2):\n                ones += row[i] + row[-i-1]\n                if row[i] != row[-i-1]:\n                    flips += 1\n        if m%2 == 1:\n            col = [grid[r][m//2] for r in range(n)]\n            for i in range(n//2):\n                ones += col[i] + col[-i-1]\n                if col[i] != col[-i-1]:\n                    flips += 1\n\n        print(flips, ones)\n        if ones%4 == 2:\n            ans += 2 if flips < 2 else 0\n        return ans + flips\n\n\"\"\"\n[\n    [1,1,0,0,1],\n    [0,1,1,0,1],\n    [0,0,1,1,1],\n    [1,0,1,1,0],\n    [1,0,1,1,0],\n    [0,0,1,1,1],\n    [0,1,1,0,1],\n    [1,1,0,1,0]\n]\n\"\"\"",
    "submit_ts": "1722697946",
    "subm_id": "1343164543"
}