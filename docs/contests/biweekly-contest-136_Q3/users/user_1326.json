{
    "username": "arpitraj__02",
    "submission": "#define ll long long int\n#define un unsigned long long\n#define all(v) v.begin(),v.end()\n#define pb push_back\n#define sz(x) ((int)(x).size())\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n       int ans = 0, an = 0;\n    int i = 0, i1 = sz(grid) - 1;\n    int of = 0, zf = 0;\n    vector<pair<int, int>> pron, prze;\n    while (i <= i1)\n    {\n        int j = 0, j1 = sz(grid[i]) - 1;\n        while (j <= j1)\n        {\n            int co = 0;\n            set<pair<int, int>> se;\n            se.insert({i, j});\n            se.insert({i, j1});\n            se.insert({i1, j});\n            se.insert({i1, j1});\n            for (auto x : se)\n            {\n                if (grid[x.first][x.second] == 1) co++;\n            }\n            if (sz(se) == 2)\n            {\n                if (co == 2 || co == 1)\n                {\n                    an += 2;\n                }\n                if (co == 1) zf++;\n            }\n            else if (sz(se) == 1)\n            {\n                if (co == 1) an++;\n            }\n            // debug(se, co);\n            ans += min(co, sz(se) - co);\n            j++;\n            j1--;\n        }\n        i++;\n        i1--;\n    }\n    // debug(an)\n  if (an % 4 == 2 && zf) ans;\n    else if (an % 4 == 3 && zf) ans++;\n    else ans += an % 4;\n    return ans;\n    }\n};",
    "submit_ts": "1722698881",
    "subm_id": "1343194775"
}