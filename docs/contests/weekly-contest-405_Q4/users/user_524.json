{
    "username": "bash_coder",
    "submission": "struct Trie{\n    map<char, Trie*> mp;\n    long cost;\n};\nclass Solution {\npublic:\n    void insert(Trie* root, string &word, long cost){\n        for(auto ch: word){\n            if(root->mp.find(ch)==root->mp.end()){\n                root->mp[ch]=new Trie();\n                root->mp[ch]->cost=1e10;\n            }\n            root=root->mp[ch];\n        }\n        root->cost=min(root->cost, cost);\n    }\n    int find(Trie* root, string word){\n        for(auto ch: word){\n            root=root->mp[ch];\n        }\n        return root->cost;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* root=new Trie();\n        root->cost=-1;\n        for(int i=0;i<words.size();++i){\n            insert(root, words[i], costs[i]);\n            // cout<<find(root, words[i])<<\" \";\n        }\n        int n=target.size();\n        target=' '+target;\n        vector<long> dp(n+2, 1e10);\n        dp[n+1]=0;\n        for(int i=n;i>0;--i){\n            int ind=i;\n            Trie* rt=root;\n            while(ind<=n && rt->mp.find(target[ind])!=rt->mp.end()){\n                rt=rt->mp[target[ind]];\n                // if(rt->cost!=-1){\n                    dp[i]=min(dp[i], dp[ind+1]+rt->cost);\n                // }\n                ind++;\n            }\n        }\n        if(dp[1]>=(long)(1e10))  return -1;\n        return dp[1];\n    }\n};",
    "submit_ts": "1720322349",
    "subm_id": "1312347536"
}