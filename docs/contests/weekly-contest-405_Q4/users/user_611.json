{
    "username": "BanasureAtharva",
    "submission": "class Solution {\n    class Node {\n        Node children[] = new Node[26];\n        int cost = Integer.MAX_VALUE;\n        \n        Node() {\n            for (int i = 0; i < 26; i++) {\n                children[i] = null;\n            }\n        }\n    }\n    \n    public Node root = new Node();\n    \n    public void insert(String word, int cost) {\n        Node curr = root;\n        for (int level = 0; level < word.length(); level++) {\n            int idx = word.charAt(level) - 'a';\n            \n            if (curr.children[idx] == null) {\n                curr.children[idx] = new Node();\n            }\n            curr = curr.children[idx];\n        }\n        curr.cost = Math.min(curr.cost, cost);\n    }\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        for (int i = 0; i < words.length; i++) {\n            insert(words[i], costs[i]);\n        }\n        \n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) {\n                continue;\n            }\n            Node curr = root;\n            for (int j = i; j < n; j++) {\n                int idx = target.charAt(j) - 'a';\n                if (curr.children[idx] == null) {\n                    break;\n                }\n                curr = curr.children[idx];\n                if (curr.cost != Integer.MAX_VALUE) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + curr.cost);\n                }\n            }\n        }\n        \n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n    \n\t\t// public int minimumCost(String target, String[] words, int[] costs) {\n\t\t// for(int i=0;i<words.length;i++){\n\t\t//     insert(words[i],costs[i]);\n\t\t// }\n\t\t// }\n}",
    "submit_ts": "1720320846",
    "subm_id": "1312306233"
}