{
    "username": "huangshan01",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        n = len(A)\n        # List to store maximum and\n        # minimum of all the four forms\n        V = []\n        V1 = []\n\n        for i in range(n):\n            V.append((A[i][0] + A[i][1], i))\n            V1.append((A[i][0] - A[i][1], i))\n\n        # Sorting both the vectors\n        V.sort()\n        V1.sort()\n        \n        # print(V)\n        # print(V1)\n        \n        dc = {}\n        for i in range(n):\n            dc[V[i][1]] = i\n        \n        ans = inf\n        for i in range(n):\n            if i == 0:\n                d1 = V1[-1][0] - V1[1][0]\n            elif i == n - 1:\n                d1 = V1[-2][0] - V1[0][0]\n            else:\n                d1 = V1[-1][0] - V1[0][0]\n            #\n            j = dc[V1[i][1]]\n            if j == 0:\n                d0 = V[-1][0] - V[1][0]\n            elif j == n - 1:\n                d0 = V[-2][0] - V[0][0]\n            else:\n                d0 = V[-1][0] - V[0][0]\n            #\n            ans = min(ans, max(d0, d1))\n        return ans\n            "
}