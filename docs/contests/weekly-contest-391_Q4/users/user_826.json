{
    "username": "Carisa-Li",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        add = []\n        minus = []\n        for i in range(len(points)):\n            add.append((points[i][0]+points[i][1],i))\n            minus.append((points[i][0]-points[i][1],i))\n        a = max(add)\n        b = min(add)\n        c = max(minus)\n        d = min(minus)\n        if a[0]-b[0] > c[0]-d[0]:\n            t = [a[1],b[1]]\n        else:\n            t = [c[1],d[1]]\n        add = []\n        minus = []\n        for i in range(len(points)):\n            if i != t[0]:\n                add.append(points[i][0]+points[i][1])\n                minus.append(points[i][0]-points[i][1])\n        a = max(add)\n        b = min(add)\n        c = max(minus)\n        d = min(minus)\n        t1 = max(a-b,c-d)\n        add = []\n        minus = []\n        for i in range(len(points)):\n            if i != t[1]:\n                add.append(points[i][0]+points[i][1])\n                minus.append(points[i][0]-points[i][1])\n        a = max(add)\n        b = min(add)\n        c = max(minus)\n        d = min(minus)\n        t2 = max(a-b,c-d)\n        return min(t1,t2)"
}