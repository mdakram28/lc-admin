{
    "username": "Hungry Ishizaka4ZT",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n    long long m = board.size(), n = board[0].size();\n    vector<vector<pair<long long, long long>>> sortedRows(m);\n    \n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            sortedRows[i].emplace_back(board[i][j], j);\n        }\n        sort(sortedRows[i].rbegin(), sortedRows[i].rend());\n    }\n    \n    long long maxSum = LLONG_MIN;\n    \n    for (int i1 = 0; i1 < m; ++i1) {\n        for (int i2 = i1 + 1; i2 < m; ++i2) {\n            for (int i3 = i2 + 1; i3 < m; ++i3) {\n                long long sum = LLONG_MIN;\n                for (int a = 0; a < 3; ++a) {\n                    for (int b = 0; b < 3; ++b) {\n                        if (sortedRows[i1][a].second == sortedRows[i2][b].second) continue;\n                        for (int c = 0; c < 3; ++c) {\n                            if (sortedRows[i1][a].second == sortedRows[i3][c].second || sortedRows[i2][b].second == sortedRows[i3][c].second) continue;\n                            sum = max(sum, sortedRows[i1][a].first + sortedRows[i2][b].first + sortedRows[i3][c].first);\n                        }\n                    }\n                }\n                maxSum = max(maxSum, sum);\n            }\n        }\n    }\n    return maxSum;\n    }\n};",
    "submit_ts": "1723907573",
    "subm_id": "556326319"
}