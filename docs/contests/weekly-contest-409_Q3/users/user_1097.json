{
    "username": "saoieinonasd",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int>rgt(n), lft(n);\n        for(int i=0; i<n-1; i++){rgt[i] = i+1;}\n        for(int i=n-1; i>0; i--){lft[i] = i-1;}\n        \n        set<pair<int,int>>st;\n        for(int i=0; i<n-1; i++){\n            st.insert({i, i+1});\n        }\n        \n        int curr = n-1;\n        vector<int>ans;\n        for (auto it:queries){\n            \n            int x = it[0], y = it[1];\n            auto it1 = st.lower_bound({x, y});\n            if(it1==st.end() || it1->first>x){it1--;}\n            \n            vector<pair<int,int>>rmv;\n            while(it1!=st.end() && (it1->first>=x && it1->second<=y)){\n                rmv.push_back({it1->first, it1->second});\n                it1++;\n            }\n            \n            // cout<<x<<\"__\"<<y<<endl;\n            // for(int i=0; i<rmv.size(); i++){cout<<rmv[i].first<<\"-----\"<<rmv[i].second<<endl;}\n            \n            if(rmv.empty()){\n                ans.push_back(curr);\n                continue;\n            }\n            \n            int add = 0;\n            for(int i=0; i<rmv.size(); i++){\n                st.erase(rmv[i]);\n                add += (rmv[i].second - rmv[i].first - 1);\n            }\n            int sub = y - x - 1;\n            curr = curr + add - sub;\n            ans.push_back(curr);\n            st.insert({x, y});\n            \n//             if(it1==st.end() || (it1->first)>x){it1--;}\n//             if((it1->first)<=x && (it1->second)>=y){\n//                 ans.push_back(curr);\n//                 continue;\n//             }\n            \n            \n//             // if overlapping is not the case\n//             int prev_sub = (rgt[x] - x - 1) + (y - lft[y] - 1);\n//             int curr_sub = (y - x - 1);\n//             curr = min(curr, curr - (curr_sub - prev_sub));\n//             ans.push_back(curr);\n//             rgt[x] = max(rgt[x], y);\n//             lft[y] = min(lft[y], x);\n            \n//             // remove elements from the set\n//             vector<pair<int,int>>rmv;\n//             while(it1!=st.end() && (it1->first>=x && it1->second<=y)){\n//                 rmv.push_back({it1->first, it1->second});\n//                 it1++;\n//             }\n            \n            \n            \n            // cout<<it[0]<<\"****\"<<it[1]<<endl;\n            // for (auto it2: st){\n                // cout<<it2.first<<\"::\"<<it2.second<<endl;\n            // }\n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743409",
    "subm_id": "1343791294"
}