{
    "username": "dingmingcheng1",
    "submission": "class Solution {\n        public class Pair<K, V> {\n        private final K key;\n        private final V value;\n\n        public Pair(K k, V v) {\n            this.key = k;\n            this.value = v;\n        }\n    }\n\n            public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<Pair<Integer, Integer>> h = new ArrayList<>();\n        List<Pair<Integer, Integer>> v = new ArrayList<>();\n        for (int i =0;i<horizontalCut.length; i++) {\n            h.add(new Pair<>(i, horizontalCut[i]));\n        }\n        for (int i =0;i<verticalCut.length; i++) {\n            v.add(new Pair<>(i, verticalCut[i]));\n        }\n        Collections.sort(h, (a, b) -> {\n            return b.value - a.value;\n        });\n        Collections.sort(v, (a, b) -> {\n            return b.value - a.value;\n        });\n        int hc = 0;\n        int vc = 0;\n        long ans = 0;\n        while (true) {\n            Pair<Integer, Integer> hn = null;\n            Pair<Integer, Integer> vn = null;\n            if (hc < h.size()) {\n                hn = h.get(hc);\n            }\n            if (vc < v.size()) {\n                vn = v.get(vc);\n            }\n            if (hn == null && vn == null) {\n                break;\n            }\n            int hv1 = 0;\n            int xv1 = 0;\n            if (hn != null) hv1 = hn.value;\n            if (vn != null) xv1 = vn.value;\n            long xh = 1l * (vc + 1) * hv1 + 1l * (hc + 2) * xv1;\n            long xv = 1l * (vc + 2) * hv1 + 1l * (hc + 1) * xv1;\n            if (xh < xv) {\n                ans += 1l * (vc + 1) * hv1;\n                hc ++;\n            } else {\n                ans += 1l * (hc + 1) * xv1;\n                vc ++;\n            }\n        }\n        return ans;\n    }\n\n\n\n}",
    "submit_ts": "1720926537",
    "subm_id": "1320289127"
}