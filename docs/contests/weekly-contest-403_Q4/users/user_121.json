{
    "username": "suizhiyuan",
    "submission": "impl Solution {\n    pub fn minimum_sum(grid: Vec<Vec<i32>>) -> i32 {\n        let p0 = Point{x: 0, y: 0};\n        let p1 = Point{x: grid.len()-1, y: grid[0].len()-1};\n    \n        let mut min_value = i32::MAX;\n        for row in p0.x .. p1.x{\n            let s1 = size(&grid, Point{x: p0.x, y: p0.y}, Point{x: row, y: p1.y});\n            let s2 = max_div_2(&grid, Point{x: row+1, y: p0.y}, Point{x: p1.x, y: p1.y});\n            min_value = min_value.min(s1 + s2);\n    \n            let s1 = max_div_2(&grid, Point{x: p0.x, y: p0.y}, Point{x: row, y: p1.y});\n            let s2 = size(&grid, Point{x: row+1, y: p0.y}, Point{x: p1.x, y: p1.y});\n            min_value = min_value.min(s1 + s2);\n        }\n    \n        for col in p0.y .. p1.y{\n            let s1 = size(&grid, Point{x: p0.x, y: p0.y}, Point{x: p1.x, y: col});\n            let s2 = max_div_2(&grid, Point{x: p0.x, y: col+1}, Point{x: p1.x, y: p1.y});\n            min_value = min_value.min(s1 + s2);\n    \n            let s1 = max_div_2(&grid, Point{x: p0.x, y: p0.y}, Point{x: p1.x, y: col});\n            let s2 = size(&grid, Point{x: p0.x, y: col+1}, Point{x: p1.x, y: p1.y});\n            min_value = min_value.min(s1 + s2);\n        }\n    \n        min_value\n    }\n}\n\nfn max_div_2(grid: &[Vec<i32>] , p0 : Point , p1: Point) -> i32 {\n    let mut min_value = i32::MAX;\n\n    for row in p0.x .. p1.x{\n        let s1 = size(grid, Point{x: p0.x, y: p0.y}, Point{x: row, y: p1.y});\n        let s2 = size(grid, Point{x: row+1, y: p0.y}, Point{x: p1.x, y: p1.y});\n        min_value = min_value.min(s1 + s2);\n    }\n\n    for col in p0.y .. p1.y{\n        let s1 = size(grid, Point{x: p0.x, y: p0.y}, Point{x: p1.x, y: col});\n        let s2 = size(grid, Point{x: p0.x, y: col+1}, Point{x: p1.x, y: p1.y});\n        min_value = min_value.min(s1 + s2);\n    }\n\n    min_value\n}\n\nfn size(grid: &[Vec<i32>] , p0: Point , p1: Point) -> i32 {\n    let mut min_x = usize::MAX;\n    let mut max_x = usize::MIN;\n    let mut min_y = usize::MAX;\n    let mut max_y = usize::MIN;\n\n    let mut find = false;\n    for row in p0.x ..= p1.x {\n        for cell in p0.y ..= p1.y {\n            if grid[row][cell] == 1 {\n                find = true;\n                min_x = min_x.min(row);\n                max_x = max_x.max(row);\n                min_y = min_y.min(cell);\n                max_y = max_y.max(cell);\n            }\n        }\n    }\n    if !find {\n        return 0;\n    }\n    ((max_x - min_x + 1) * (max_y - min_y + 1)) as i32\n}\n\n#[derive(Debug)]\nstruct Point {\n    x: usize,\n    y: usize,\n}",
    "submit_ts": 1719112782.0
}