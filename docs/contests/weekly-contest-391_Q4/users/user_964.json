{
    "username": "a_kill",
    "submission": "#define ll long long\n#define F first\n#define S second\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int,int>>a;\n        for(int i=0;i<points.size();i++){\n            a.push_back({points[i][0],points[i][1]});\n        }\n        int n=a.size();\n        int N=n;\n        multiset<int>ms1;\n        multiset<int>ms2;\n        // vector<int> V(N), V1(N);\n        for (int i = 0; i < n; i++) {\n            // V[i] = A[i].first + A[i].second;\n            // V1[i] = A[i].first - A[i].second;\n            ms1.insert(a[i].first + a[i].second);\n            ms2.insert(a[i].first - a[i].second);\n        }\n\n        // Sorting both the vectors\n        // sort(V.begin(), V.end());\n        // sort(V1.begin(), V1.end());\n\n        // int maximum\n        //     = max(V.back() - V.front(), V1.back() - V1.front());\n        int ans=INT_MAX;\n        for(int i=0;i<n;i++){\n            int t1=a[i].first + a[i].second;\n            int t2=a[i].first - a[i].second;\n            auto it1=ms1.find(t1);\n            auto it2=ms2.find(t2);\n            ms1.erase(it1);\n            ms2.erase(it2);\n            \n            auto itr1=ms1.begin();\n            auto ritr1=ms1.rbegin();\n            int am1=(*itr1);\n            int ram1=(*ritr1);\n            \n            auto itr2=ms2.begin();\n            auto ritr2=ms2.rbegin();\n            int am2=(*itr2);\n            int ram2=(*ritr2);\n            ans=min(ans,(max(ram1-am1,ram2-am2)));\n            \n            ms1.insert(t1);\n            ms2.insert(t2);\n            \n        }\n        return ans;\n\n    }\n};"
}