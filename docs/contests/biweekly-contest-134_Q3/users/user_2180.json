{
    "username": "yuvrajrathore",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        if (n < k) {\n            return 0;\n        }\n\n        int count = 0;\n        int alternatingPairs = 0;\n\n        // Initialize the first window\n        for (int i = 0; i < k - 1; i++) {\n            if (colors[i] != colors[i + 1]) {\n                alternatingPairs++;\n            }\n        }\n        \n        // Check if the first window is an alternating group\n        if (alternatingPairs == k - 1) {\n            count++;\n        }\n\n        // Slide the window\n        for (int i = 1; i < n; i++) {\n            // Remove the effect of the element that is sliding out\n            if (colors[(i - 1) % n] != colors[(i - 1 + 1) % n]) {\n                alternatingPairs--;\n            }\n            \n            // Add the effect of the new element sliding in\n            if (colors[(i + k - 2) % n] != colors[(i + k - 1) % n]) {\n                alternatingPairs++;\n            }\n\n            // Check if the current window is an alternating group\n            if (alternatingPairs == k - 1) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n}",
    "submit_ts": "1720280329",
    "subm_id": "1311785324"
}