{
    "username": "Balakrishnan Varadarajan",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m=board.size();\n        int n=board[0].size();\n        \n        vector<vector<int>> top3(m);\n        for(int i=0;i<m;i++) {\n            vector<pair<int,int>> curr_top3;\n            for(int j=0;j<n;j++) {\n                curr_top3.push_back({board[i][j],j});\n                if (curr_top3.size()>3) {\n                    sort(curr_top3.begin(),curr_top3.end(),greater<pair<int,int>>());\n                    curr_top3.pop_back();\n                }\n            }\n            for(auto x : curr_top3) {\n                top3[i].push_back(x.second);\n            }\n        }\n        \n        ll ans = -(1ll<<60);\n        for(int i1=0;i1<m;i1++) {\n            for(int i2=i1+1;i2<m;i2++) {\n                for(int i3=i2+1;i3<m;i3++) {\n                    for(int j1 : top3[i1]) {\n                        for(int j2 : top3[i2]) {\n                            for(int j3 : top3[i3]) {\n                                if (j1==j2 || j1==j3 || j2==j3) continue;\n                                ans = max(ans, (ll)board[i1][j1]+board[i2][j2]+board[i3][j3]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n        \n        \n        \n    }\n};",
    "submit_ts": "1723905568",
    "subm_id": "1359007873"
}