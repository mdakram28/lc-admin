{
    "username": "21je0586",
    "submission": "class Solution {\npublic:\n  \n    int minFlips(vector<vector<int>>& grid) {\n            int n = grid.size();\n        int m = grid[0].size();\n        \n        int ans = 0;\n        \n        //  2x2 sub-grids\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                std::vector<int> subgrid = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n                \n                int count1 = std::accumulate(subgrid.begin(), subgrid.end(), 0);\n                \n                ans += std::min(count1, 4 - count1);\n            }\n        }\n        \n        int change = 0;\n        //cnt of ones\n        int cnt = 0;\n        \n        // middle row if n is odd\n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    ans += 1;\n                    change+= 1;\n                } else {\n                    if (grid[n / 2][j] == 1) {\n                        cnt += 1;\n                    }\n                }\n            }\n        }\n        \n        // middle column if m is odd\n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    ans += 1;\n                    change += 1;\n                } else {\n                    if (grid[i][m / 2] == 1) {\n                        cnt += 1;\n                    }\n                }\n            }\n        }\n        \n        //central element if both n and m are odd\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        \n        // if grid[i]==grid[j] but botth are ones we have to change them\n        if (change == 0 && cnt % 2 != 0) {\n            ans += 2;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722700471",
    "subm_id": "1343242884"
}