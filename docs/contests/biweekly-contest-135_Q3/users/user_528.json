{
    "username": "pele_3010",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int>m1;\n        int n=nums.size();\n        vector<int>maxpo;\n        for(int i=0;i<(n/2);i++){\n            m1[abs(nums[i]-nums[n-1-i])]++;\n            int k2=max(nums[i],nums[n-1-i]);\n            maxpo.push_back(max(k-nums[i],max(k-nums[n-1-i],k2)));\n        }\n        sort(maxpo.begin(),maxpo.end());\n        // for(auto it:maxpo)\n        // cout<<it<<\" \";\n        // cout<<\"\\n\";\n        int count=2*n;\n        for(int i=0;i<=k;i++){\n            int curr=0;\n            int cnt=m1[i];\n            auto it=lower_bound(maxpo.begin(),maxpo.end(),i)-maxpo.begin();\n            int left=it;\n            //  cout<<it<<\" \"<<cnt<<\"\\n\";\n            curr+=((maxpo.size()-it)-cnt)+2*(it);\n            count=min(curr,count);\n        }\n        return count;\n\n    }\n};",
    "submit_ts": "1721488298",
    "subm_id": "1327417875"
}