{
    "username": "masatomo",
    "submission": "class Solution {\nusing P = pair<int, int>;\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        set<P> X, Y;\n        vector<P> coords(n); \n\n        for (int i=0; i<n; i++) {\n            // cout << i << endl;\n            vector<int> p = points[i];\n            X.emplace(p[0] + p[1], i);\n            Y.emplace(p[0] - p[1], i);\n            coords[i] = P(p[0] + p[1], p[0] - p[1]);\n        }\n        \n        // cout << 999 << endl;\n        \n        int ans = 1e9;\n        for (int i=0; i<n; i++) {\n            P p = coords[i];\n            \n            X.erase(P(p.first, i));\n            Y.erase(P(p.second, i));\n            auto it_x = X.end(); it_x--;\n            auto it_y = Y.end(); it_y--;\n            int x_diff = it_x->first - X.begin()->first;\n            int y_diff = it_y->first - Y.begin()->first;\n            ans = min(ans, max(x_diff, y_diff));\n            X.emplace(p.first, i);\n            Y.emplace(p.second, i);\n        }\n        \n        return ans;\n    }\n};"
}