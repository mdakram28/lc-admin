{
    "username": "Karan-nigam96",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9 + 7;\n    int sol(int n, vector<vector<int>>& requirements){\n        int inv = 400;\n        map<int, int> mpp;\n        for (auto it : requirements) {\n            mpp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<int>> temp(n + 1, vector<int>(inv + 1, 0));\n        temp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= inv; j++) {\n                for (int k = 0; k < i; k++) {\n                    int c = j - k;\n                    if (c >= 0) {\n                        temp[i][j] = (temp[i][j] + temp[i - 1][c]) % MOD;\n                    }\n                }\n            }\n\n            if (mpp.find(i) != mpp.end()) {\n                int tar = mpp[i];\n                for (int j = 0; j <= inv; j++) {\n                    if (j != tar) {\n                        temp[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        int result = 0;\n        for (int count : temp[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return (result);\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int x = requirements.size();\n        int y = requirements[0].size();\n        return sol(n,requirements);\n    }\n};",
    "submit_ts": "1719071610",
    "subm_id": "1296850431"
}