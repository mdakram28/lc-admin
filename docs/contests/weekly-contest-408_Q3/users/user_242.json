{
    "username": "aknov711",
    "submission": "class Solution {\n    void fun(int sz, vector<int> &z ,int &already, int &ans){\n        for(int j=sz-1;j>=max(0, sz-200);j--){\n                    int ones = z[j]-(j > 0 ? z[j-1]:-1)-1;\n                    int zeroes=sz-j;\n                    int must = (sz-j)*(sz-j);\n                    if(already >= must)\n                        ans++;\n                    // already + ? >= must \n                    int what = must-already;\n                    what = max(0, what);\n                    if(what == 0)\n                        ans+=ones;\n                    else \n                    ans += max(0, ones - what+1);\n                    already += ones;\n                    \n                }\n    }\npublic:\n    int numberOfSubstrings(string s) {\n      vector<int> o, z;\n      int n=s.size();\n        int ans=0;\n        for(int i=0;i<n;i++){\n            if(s[i]=='0'){\n                z.push_back(i);\n                 int sz=z.size();\n                int already=0;\n                fun(sz, z, already, ans);\n            } else {\n              int sz=z.size();\n                int already= i - (sz>0 ? z.back() : -1);\n                ans+=already;\n                fun(sz, z, already, ans);\n            }\n           // cout<<ans<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722138215",
    "subm_id": "1335785124"
}