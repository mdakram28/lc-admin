{
    "username": "is2ac",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        Integer[][][] dp = new Integer[100][100][2];\n                                           \n        return recur(1,0,1,0,0,k,dp);\n    }\n    public int recur(int cur, int jump, int prev, int donem, int donej, int k, Integer[][][] dp) {\n        if (cur-1>k) return 0;\n        if (dp[donem][donej][prev]!=null) return dp[donem][donej][prev];\n        int res = 0;\n        if (cur==k) res ++;\n        if (prev!=0) {\n            res += recur(cur-1,jump,0,donem+1,donej,k,dp);\n        }\n        res += recur(cur+(int)Math.pow(2,jump),jump+1,1,donem,donej+1,k,dp);\n        return dp[donem][donej][prev] = res;\n        \n    }\n}",
    "submit_ts": 1716087353.0
}