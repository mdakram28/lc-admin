{
    "username": "Cregan_wolf",
    "submission": "import heapq\n\nclass TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.word_end = False\n        self.cost = float('inf')\n\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode()\n\n    def insert(self, word, cost):\n        node = self.root\n        for char in word:\n            if char not in node.children:\n                node.children[char] = TrieNode()\n            node = node.children[char]\n        node.word_end = True\n        node.cost = min(node.cost, cost)\n\n    def search_from_position(self, text, start):\n        node = self.root\n        matches = []\n        for i in range(start, len(text)):\n            if text[i] in node.children:\n                node = node.children[text[i]]\n                if node.word_end:\n                    matches.append((i + 1, node.cost))  # (end_position, cost)\n            else:\n                break\n        return matches\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0  # The cost to construct an empty string is 0\n        pq = [(0, 0)]  # (cost, start_position)\n\n        trie = Trie()\n        word_cost_map = {}\n\n        for word, cost in zip(words, costs):\n            if word not in word_cost_map or cost < word_cost_map[word]:\n                word_cost_map[word] = cost\n            trie.insert(word, cost)\n\n        while pq:\n            current_cost, start_pos = heapq.heappop(pq)\n\n            if current_cost > dp[start_pos]:\n                continue\n\n            matches = trie.search_from_position(target, start_pos)\n            for end_pos, match_cost in matches:\n                new_cost = current_cost + match_cost\n                if new_cost < dp[end_pos]:\n                    dp[end_pos] = new_cost\n                    heapq.heappush(pq, (new_cost, end_pos))\n\n        return dp[n] if dp[n] != float('inf') else -1",
    "submit_ts": "1720322172",
    "subm_id": "1312342638"
}