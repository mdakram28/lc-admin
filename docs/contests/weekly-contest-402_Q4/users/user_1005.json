{
    "username": "xcrizy",
    "submission": "const int MX = 111111;\nint F[MX];\nvoid f_add(int x, int v = +1) {\n    //printf(\"add %d (%d)\\n\", x, v);\n    ++x;\n    while(x<MX) {\n        F[x]+=v;\n        x += x&-x;\n    }\n}\n\nint f_sum(int x) {\n    ++x;\n    int r = 0;\n    while(x) {\n        r += F[x];\n        x -= x&-x;\n    }\n    return r;\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& A, vector<vector<int>>& Q) {\n        memset(F,0,sizeof(F)); \n        vector<int> res;\n        for (int i = 1; i+1 < A.size(); ++i) {\n            if (A[i]>A[i-1] && A[i]>A[i+1]) {\n                f_add(i,+1);\n            }\n        }\n        \n        for (auto q : Q) {\n            if (q[0]==1) {\n                //for (int i = 0; i < A.size(); ++i) printf(\"%d. %d\\n\", i, f_sum(i));\n                int a = q[1]+1;\n                int b = q[2]-1;\n                //printf(\"%d %d\\n\", a, b);\n                if (a<=b) {\n                    res.push_back(f_sum(b)-f_sum(a-1));\n                } else {\n                    res.push_back(0);\n                }\n            } else {\n                int x = q[1];\n                int v = q[2];\n                for (int i = x-1; i<=x+1; ++i) {\n                    if (i>0 && i+1<A.size() && A[i]>A[i-1] && A[i]>A[i+1]) {\n                        f_add(i,-1);\n                    } \n                }\n                A[x]=v;\n                for (int i = x-1; i<=x+1; ++i) {\n                    if (i>0 && i+1<A.size() && A[i]>A[i-1] && A[i]>A[i+1]) {\n                        f_add(i,+1);\n                    } \n                } \n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1718508983.0
}