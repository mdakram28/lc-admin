{
    "username": "ltf0501",
    "submission": "class Solution {\npublic:\n    int get_area(int a, int b, int c, int d) {\n        if (b < a || d < c) return 0;\n        return (b - a + 1) * (d - c + 1);\n    }\n    void rotate(vector<vector<int>> &grid) {\n        int n = int(grid.size());\n        int m = int(grid[0].size());\n        vector new_grid(m, vector<int>(n));\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                new_grid[i][j] = grid[j][m - 1 - i];\n            }\n        }\n        grid = new_grid;\n    }\n    int minsum(vector<vector<int>> &grid, int x_mn, int x_mx, int y_mn, int y_mx) {\n        int x_mx2 = -1, x_mn2 = 100, y_mx2 = -1, y_mn2 = 100;\n        for (int i = x_mn; i <= x_mx; i++) {\n            for (int j = y_mn; j <= y_mx; j++) {\n                if (grid[i][j] == 1) {\n                    x_mx2 = max(x_mx2, i);\n                    x_mn2 = min(x_mn2, i);\n                    y_mx2 = max(y_mx2, j);\n                    y_mn2 = min(y_mn2, j);\n                }\n            }\n        }\n                //cout << x_mn << ' ' << x_mx << ' ' << y_mn << ' ' << y_mx << \":@ \" << get_area(x_mn2, x_mx2, y_mn2, y_mx2) << '\\n';\n\n        return get_area(x_mn2, x_mx2, y_mn2, y_mx2);\n    }\n    int min2sum(vector<vector<int>> &grid, int x_mn_, int x_mx_, int y_mn_, int y_mx_) {\n        vector tmp_grid(x_mx_ - x_mn_ + 1, vector<int>(y_mx_ - y_mn_ + 1));\n        int nn = int(tmp_grid.size());\n        int mm = int(tmp_grid[0].size());\n        for (int i = 0; i < nn; i++) {\n            for (int j = 0; j < mm; j++) tmp_grid[i][j] = grid[i + x_mn_][j + y_mn_];\n        }\n        int ans = mm * nn;\n        for (int _ = 0; _ < 2; _++) {\n            int n = int(tmp_grid.size());\n            int m = int(tmp_grid[0].size());\n            //cout << \"nn: \" << n << \", mm: \" << m << '\\n';\n            int x_mx = -1, x_mn = n, y_mx = -1, y_mn = m;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    if (tmp_grid[i][j] == 1) {\n                        x_mx = max(x_mx, i);\n                        x_mn = min(x_mn, i);\n                        y_mx = max(y_mx, j);\n                        y_mn = min(y_mn, j);\n                    }\n                }\n            }\n             int y_mn_tmp = m, y_mx_tmp = -1;\n            for (int i = x_mn; i + 1 <= x_mx; i++) {\n                // cut x <= i and > i\n               \n                for (int j = 0; j < m; j++) {\n                    if (tmp_grid[i][j] == 1) {\n                        y_mn_tmp = min(y_mn_tmp, j);\n                        y_mx_tmp = max(y_mx_tmp, j);\n                    }\n                }\n                int sum1 = get_area(x_mn, i, y_mn_tmp, y_mx_tmp);\n               // cout << \"x_mn: \" << x_mn << \", i:\" << i << \", y_mn_tmp: \" << y_mn_tmp << \", y_mx_tmp: \" << y_mx_tmp << '\\n';\n                int sum2 = minsum(tmp_grid, i + 1, x_mx, y_mn, y_mx);\n                //cout << \"sum1:@\" << sum1 << \", sum2: \" << sum2 << '\\n';\n\n                ans = min(ans, sum1 + sum2);\n            }\n            rotate(tmp_grid);\n        }\n        //cout << x_mn_ << ' ' << x_mx_ << ' ' << y_mn_ << ' ' << y_mx_ << \": \" << ans << '\\n';\n        return ans;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int ans = 10000;\n        for (int _ = 0; _ < 4; _++) {\n            int n = int(grid.size());\n            int m = int(grid[0].size());\n            //cout << \"n: \" << n << \", m: \" << m << '\\n';\n            ans = min(ans, m * n);\n            int x_mx = -1, x_mn = n, y_mx = -1, y_mn = m;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    if (grid[i][j] == 1) {\n                        x_mx = max(x_mx, i);\n                        x_mn = min(x_mn, i);\n                        y_mx = max(y_mx, j);\n                        y_mn = min(y_mn, j);\n                    }\n                }\n            }\nint y_mn_tmp = m, y_mx_tmp = -1;\n            for (int i = x_mn; i + 1 <= x_mx; i++) {\n                // cut x <= i and > i\n                \n                for (int j = 0; j < m; j++) {\n                    if (grid[i][j] == 1) {\n                        y_mn_tmp = min(y_mn_tmp, j);\n                        y_mx_tmp = max(y_mx_tmp, j);\n                    }\n                }\n                int sum1 = get_area(x_mn, i, y_mn_tmp, y_mx_tmp);\n                int sum2 = min2sum(grid, i + 1, x_mx, y_mn, y_mx);\n                //cout << \"sum1: \" << sum1 << \", sum2: \" << sum2 << '\\n';\n                ans = min(ans, sum1 + sum2);\n            }\n            \n            rotate(grid);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719114294.0
}