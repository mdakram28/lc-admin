{
    "username": "power1011",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        // 2^n > 1 + 2 + 4 + ... + 2^{n-1}\n        // 31th ((k >> 31) % 2 << 31)\n        // 0000011111\n        // 0000010000\n        \n        //[1,2,4,5]\n        //[[1,3,2],[4,3,2],[4,3,4],[4,4,4]]\n        // O(len(nums) * 31)\n        int n = nums.size(); // 4\n        std::vector<std::array<int,32>> next(n);\n        std::array<int,32> current_next{};\n        current_next.fill(n);\n        for(int i=n-1;i>=0;--i)\n        {\n            auto &v = nums[i]; // 2\n            next[i] = current_next;\n            for(int j=0;j<31;++j)\n            {\n                if((v >> j) % 2 == 0)\n                {\n                    current_next[j] = i;\n                }\n            }\n        }\n        int ans = 0x7fff'ffff;\n        for(int i=0;i<n;++i)\n        {\n            auto v = nums[i]; // 1\n            int current_pos = i;\n            while(current_pos < n){\n                v &= nums[current_pos];\n                //update answer\n                auto tmp = k - v;\n                if(tmp < 0) tmp *= -1;\n                ans = std::min(ans, tmp);\n                // find next\n                int first_bit_to_remove = n;\n                for(int j=0;j<31;++j)\n                {\n                    if((v >> j) % 2 == 1)\n                    {\n                        first_bit_to_remove = std::min(first_bit_to_remove, next[i][j]);\n                    }\n                }\n                current_pos = first_bit_to_remove;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717299163",
    "subm_id": "1274803487"
}