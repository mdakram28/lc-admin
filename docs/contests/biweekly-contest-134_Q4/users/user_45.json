{
    "username": "qqwrv",
    "submission": "template <typename ValueType>\nclass RMQ {\n private:\n  using Operator = std::function<ValueType(const ValueType&, const ValueType&)>;\n\n  int n_;\n  std::vector<std::vector<ValueType>> a_;\n  std::vector<int> lg_;\n  Operator op_;\n\n public:\n  RMQ(const std::vector<ValueType>& a, const Operator& op)\n      : n_(a.size()), op_(op) {\n    lg_.resize(n_ + 1);\n    lg_[1] = 0;\n    for (int i = 2; i <= n_; ++i)\n      lg_[i] = lg_[i >> 1] + 1;\n\n    a_.resize(n_);\n    for (int i = 0; i < n_; ++i) {\n      a_[i].resize(lg_[n_] + 1);\n      a_[i][0] = a[i];\n    }\n    for (int j = 1; j <= lg_[n_]; ++j) {\n      int w = (1 << (j - 1));\n      for (int i = 0; i + w < n_; ++i) {\n        a_[i][j] = op_(a_[i][j - 1], a_[i + w][j - 1]);\n      }\n    }\n  }\n\n  const ValueType Query(int l, int r) const {\n    int k = lg_[r - l + 1];\n    return op_(a_[l][k], a_[r - (1 << k) + 1][k]);\n  }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        const int n = a.size();\n        RMQ<int> rmq(a, [](int x, int y) { return x & y; });\n\n        auto get_l = [&](int i) {\n            int l = 0, r = i, res = n;\n            while (l <= r) {\n                int mid = (l + r) >> 1;\n                if (rmq.Query(mid, i) >= k)\n                    r = mid - 1, res = mid;\n                else\n                    l = mid + 1;\n            }\n\n            return res;\n        };\n\n        auto get_r = [&](int i) {\n            int l = 0, r = i, res = -1;\n            while (l <= r) {\n                int mid = (l + r) >> 1;\n                if (rmq.Query(mid, i) <= k)\n                    l = mid + 1, res = mid;\n                else\n                    r = mid - 1;\n            }\n            return res;\n        };\n\n        long long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            int l = get_l(i);\n            int r = get_r(i);\n\n            if (l <= r) ans += r - l + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277814",
    "subm_id": "1311681219"
}