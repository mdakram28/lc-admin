{
    "username": "88tt4VduLk",
    "submission": "#include <vector>\n#include <iostream>\n#define MOD 1000000007\n\nclass Solution {\npublic:\n    int countOfPairs(std::vector<int>& nums) {\n        int n = nums.size();\n        std::vector<std::vector<int>> dp(51, std::vector<int>(51, 0));\n\n        // Initialize for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            int k = nums[0] - j;\n            dp[j][k] = 1;\n        }\n\n        // Iterate over the array\n        for (int i = 1; i < n; ++i) {\n            std::vector<std::vector<int>> new_dp(51, std::vector<int>(51, 0));\n            std::vector<std::vector<int>> prefix_sum(51, std::vector<int>(51, 0));\n\n            // Compute prefix sums\n            for (int j = 0; j <= 50; ++j) {\n                for (int k = 0; k <= 50; ++k) {\n                    prefix_sum[j][k] = dp[j][k];\n                    if (k > 0) prefix_sum[j][k] = (prefix_sum[j][k] + prefix_sum[j][k - 1]) % MOD;\n                }\n            }\n\n            // Fill the new dp table\n            for (int j = 0; j <= nums[i]; ++j) {\n                int k = nums[i] - j;\n                for (int prev_j = 0; prev_j <= j; ++prev_j) {\n                    new_dp[j][k] = (new_dp[j][k] + prefix_sum[prev_j][50]) % MOD;\n                    if (k > 0) new_dp[j][k] = (new_dp[j][k] - prefix_sum[prev_j][k - 1] + MOD) % MOD;\n                }\n            }\n\n            dp = new_dp;\n        }\n\n        // Sum all possible valid configurations for the last element\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            for (int k = 0; k <= 50; ++k) {\n                result = (result + dp[j][k]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723344421",
    "subm_id": "1351534057"
}