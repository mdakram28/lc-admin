{
    "username": "ofgs1",
    "submission": "impl Solution {\n\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let (m, n) = (grid.len(), grid[0].len());\n        let mut c = 0;\n        for i in 0..m/2 {\n            for j in 0..n/2 {\n                let x = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                c += x.min(4-x);\n            }\n        }\n        if m&1 == 0 && n&1 == 0 {\n            return c;\n        }\n        if m&1 == 1 && n&1 == 1 {\n            c += grid[m/2][n/2]-0;\n        }\n        let mut x = 0;\n        let mut ones = 0;\n        if m&1 == 1 {\n            for j in 0..n/2 {\n                if grid[m/2][j] != grid[m/2][n-1-j] {\n                    x += 1;\n                } else if grid[m/2][j] == 1 {\n                    ones += 1;\n                }\n            }\n        }\n        if n&1 == 1 {\n            for i in 0..m/2 {\n                if grid[i][n/2] != grid[m-1-i][n/2] {\n                    x += 1;\n                } else if grid[i][n/2] == 1 {\n                    ones += 1;\n                }\n            }\n        }\n        if ones&1==0 {\n            return x+c;\n        } else if x == 0 {\n            return c+2;\n        }\n        c+x\n    }\n}",
    "submit_ts": "1722697146",
    "subm_id": "552264678"
}