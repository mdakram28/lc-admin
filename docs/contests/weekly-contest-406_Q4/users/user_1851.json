{
    "username": "hao-shou-bu-juan",
    "submission": "\n# -*- coding: utf-8 -*-\nfrom typing import List, Tuple, Optional\nfrom collections import deque, Counter\nfrom queue import PriorityQueue\nimport math\nfrom functools import lru_cache\nfrom sortedcontainers import SortedDict, SortedSet\nimport random\nimport copy\nimport sys\nsys.setrecursionlimit(9999999)\n\nMOD = 10**9 + 7\n\n\n\n\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hh = horizontalCut\n        vv = verticalCut\n\n        tot = 0\n\n        arr = []\n        for v in hh:\n            arr.append((v, 0))\n        for v in vv:\n            arr.append((v, 1))\n\n        arr.sort(reverse = True)\n\n\n        t0 = 1\n        t1 = 1\n        for v, t in arr:\n            if t == 0:\n                t1 += 1\n                tot += t0 * v\n            else:\n                t0 += 1\n                tot += t1 * v\n\n        return tot",
    "submit_ts": "1720926458",
    "subm_id": "546446376"
}