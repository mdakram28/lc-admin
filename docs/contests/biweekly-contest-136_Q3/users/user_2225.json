{
    "username": "kashvi_bhanderi",
    "submission": "class Solution {\npublic:\n    int minFlipsHelper(int index, int mod, vector<vector<int>>& pairs, vector<vector<int>>& dp) {\n        if (index >= pairs.size()) {\n            return (mod == 0) ? 0 : 1e9;\n        }\n\n        if (dp[index][mod] != -1) {\n            return dp[index][mod];\n        }\n\n        int minFlips = 1e9;\n        int newMod = (mod + pairs[index][0] + pairs[index][1]) % 4;\n        \n        minFlips = min(minFlips, pairs[index][0] + minFlipsHelper(index + 1, newMod, pairs, dp));\n        minFlips = min(minFlips, pairs[index][1] + minFlipsHelper(index + 1, mod, pairs, dp));\n        \n        return dp[index][mod] = minFlips;\n    }\n\n    int minFlips(vector<vector<int>>& matrix) {\n        vector<vector<int>> pairs;\n        int row = matrix.size();\n        int col = matrix[0].size();\n\n        int top = 0, bottom = row - 1;\n        while (top < bottom) {\n            int left = 0, right = col - 1;\n            while (left < right) {\n                vector<int> cnt(2, 0);\n                cnt[matrix[top][left]]++;\n                cnt[matrix[top][right]]++;\n                cnt[matrix[bottom][left]]++;\n                cnt[matrix[bottom][right]]++;\n                pairs.push_back(cnt);\n                left++;\n                right--;\n            }\n            if (left == right) {\n                vector<int> cnt(2, 0);\n                cnt[matrix[top][left]]++;\n                cnt[matrix[bottom][right]]++;\n                pairs.push_back(cnt);\n            }\n            top++;\n            bottom--;\n        }\n\n        if (top == bottom) {\n            int left = 0, right = col - 1;\n            while (left < right) {\n                vector<int> cnt(2, 0);\n                cnt[matrix[top][left]]++;\n                cnt[matrix[top][right]]++;\n                pairs.push_back(cnt);\n                left++;\n                right--;\n            }\n            if (left == right) {\n                vector<int> cnt(2, 0);\n                cnt[matrix[top][left]]++;\n                pairs.push_back(cnt);\n            }\n        }\n\n        int pairCount = pairs.size();\n        vector<vector<int>> dp(pairCount + 1, vector<int>(4, -1));\n        int result = minFlipsHelper(0, 0, pairs, dp);\n        return result == 1e9 ? -1 : result; // Handle case where no valid solution exists\n    }\n};\n",
    "submit_ts": "1722700333",
    "subm_id": "1343238675"
}