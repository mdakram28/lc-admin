{
    "username": "SagarMondal",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        if (k == 1) { \n            return colors.size();\n        } \n        int i = 1;\n        int res = 0; \n        int len = 1;  \n        while (i < colors.size() + k - 1){ \n            int back = i - 1;\n            int recent = i;  \n            if (back >= colors.size()){ \n                back = back - colors.size(); \n            }\n            if (recent >= colors.size()){ \n                recent = recent - colors.size(); \n            }  \n            if (colors[recent] != colors[back]){ \n                len++; \n            } \n            else{ \n                len = 1; \n            }  \n            if(len >= k) { \n                res++; \n            } \n            i++; \n        } \n        return res % 1000000007;\n\n    }\n};",
    "submit_ts": "1720280409",
    "subm_id": "1311788333"
}