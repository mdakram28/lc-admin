{
    "username": "KnockCat",
    "submission": "class Solution {\npublic:\n    \n    const int mod = 1e9+7;\n    \n    int helper(int idx, int mini, int maxi, vector<int>& nums, vector<vector<vector<int>>>& dp)\n    {\n        if(idx == nums.size())\n            return 1;\n        \n        if(dp[idx][mini][maxi] != -1)\n            return dp[idx][mini][maxi];\n        \n        int left = mini;\n        int right = maxi;\n        \n        int ans = 0;\n        \n        for(int i = left; i <= 50; ++i)\n        {\n            for(int j = min(right, 50); j >= 0; --j)\n            {\n                if(i + j == nums[idx] and i >= left and j <= right)\n                {\n                    ans += helper(idx+1, i, j, nums, dp);\n                    ans %= mod;\n                }\n            }\n        }\n        \n        return dp[idx][mini][maxi] = ans % mod;\n        \n    }\n    \n    int countOfPairs(vector<int>& nums) {\n        \n        int n = nums.size();\n        \n        vector<vector<vector<int>>> dp(n+1, vector<vector<int>>(51, vector<int>(51, -1)));\n        \n        return helper(0, 0, 50, nums, dp);\n        \n    }\n};",
    "submit_ts": "1723346671",
    "subm_id": "1351582656"
}