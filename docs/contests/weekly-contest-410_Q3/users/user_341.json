{
    "username": "jiezhongXiaoShawn",
    "submission": "class Solution:\n    def helper(self,index,temp,nums,count):\n        if index == len(nums):\n            count[0] += 1\n            return\n        num = nums[index]\n        prev_increasing = temp[len(temp)-1]\n        prev_decreasing = nums[index-1]-prev_increasing\n        for i in range(prev_increasing,num+1):\n            if num - i > prev_decreasing:\n                continue\n            temp.append(i)\n            self.helper(index+1,temp,nums,count)\n            temp.pop()\n                \n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10**9 + 7\n        n = len(nums)\n        \n        dp = [0] * 51\n        prefix_sum = [0] * 52\n        \n        for j in range(nums[0] + 1):\n            dp[j] = 1\n            prefix_sum[j+1] = (prefix_sum[j] + dp[j]) % MOD\n        \n        for i in range(1, n):\n            new_dp = [0] * 51\n            new_prefix_sum = [0] * 52\n            \n            for j in range(nums[i] + 1):\n                left = 0\n                right = min(j, nums[i-1] - (nums[i] - j))\n                if left <= right:\n                    new_dp[j] = (prefix_sum[right+1] - prefix_sum[left] + MOD) % MOD\n            \n            for j in range(51):\n                new_prefix_sum[j+1] = (new_prefix_sum[j] + new_dp[j]) % MOD\n            \n            dp = new_dp\n            prefix_sum = new_prefix_sum\n        \n        return sum(dp) % MOD",
    "submit_ts": "1723346409",
    "subm_id": "1351576946"
}