{
    "username": "eric_321",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n       std::unordered_map<int, std::vector<int>> diffMap;\n        std::vector<int> possibleValues;\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; i++) {\n            int num1 = nums[i], num2 = nums[n - i - 1];\n            int diff = std::abs(num1 - num2);\n            int maxPossibleValue = std::max({num1, num2, k - num1, k - num2});\n            diffMap[diff].push_back(maxPossibleValue);\n            possibleValues.push_back(maxPossibleValue);\n        }\n        \n        int minChanges = n;\n        std::sort(possibleValues.begin(), possibleValues.end());\n        \n        for (const auto& entry : diffMap) {\n            int diff = entry.first;\n            int changeCount = std::lower_bound(possibleValues.begin(), possibleValues.end(), diff) - possibleValues.begin();\n            changeCount = changeCount * 2 + (n / 2 - changeCount);\n            \n            for (const auto& value : entry.second) {\n                if (value < diff) {\n                    changeCount -= 2;\n                } else {\n                    changeCount -= 1;\n                }\n            }\n            \n            minChanges = std::min(minChanges, changeCount);\n        }\n        \n        return minChanges;\n        \n    }\n};",
    "submit_ts": "1721489165",
    "subm_id": "1327444931"
}