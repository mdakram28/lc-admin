{
    "username": "nicholask_17",
    "submission": "class Solution {\npublic:\n    vector <int> arr,seg;\n    void build(int id,int tl,int tr){\n        if (tl==tr){\n            seg[id]=(arr[tl]>arr[tl-1]&&arr[tl]>arr[tl+1]);\n            return;\n        }\n        int tm=(tl+tr)/2;\n        build(2*id,tl,tm);\n        build(2*id+1,tm+1,tr);\n        seg[id]=seg[2*id]+seg[2*id+1];\n    }\n    void update(int id,int tl,int tr,int pos){\n        if (tl==tr){\n            seg[id]=(arr[tl]>arr[tl-1]&&arr[tl]>arr[tl+1]);\n            return;\n        }\n        int tm=(tl+tr)/2;\n        if (pos<=tm) update(2*id,tl,tm,pos);\n        else update(2*id+1,tm+1,tr,pos);\n        seg[id]=seg[2*id]+seg[2*id+1];\n    }\n    int query(int id,int tl,int tr,int l,int r){\n        if (l>r) return 0;\n        if (l<=tl&&tr<=r) return seg[id];\n        int tm=(tl+tr)/2;\n        int lx=query(2*id,tl,tm,l,min(r,tm));\n        int rx=query(2*id+1,tm+1,tr,max(l,tm+1),r);\n        return lx+rx;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        arr.push_back(1e9);\n        for (int i:nums) arr.push_back(i);\n        arr.push_back(1e9);\n        seg.clear();\n        seg.resize(4*n+10);\n        build(1,1,n);\n        vector <int> op;\n        for (auto i:queries){\n            if (i[0]==1){\n                i[1]++; i[2]++;\n                op.push_back(query(1,1,n,i[1]+1,i[2]-1));\n            } else if (i[0]==2){\n                i[1]++;\n                arr[i[1]]=i[2];\n                for (int j=i[1]-1; j<=i[1]+1; j++){\n                    if (j>=1&&j<=n) update(1,1,n,j);\n                }\n            }\n        }\n        return op;\n    }\n};",
    "submit_ts": 1718505799.0
}