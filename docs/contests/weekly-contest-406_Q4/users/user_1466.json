{
    "username": "l0vekeven",
    "submission": "from functools import cache\nfrom math import inf\nfrom typing import List\n\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort()\n        verticalCut.sort()\n        h,v = 0,0\n        ans = 0\n        while horizontalCut and verticalCut:\n            if horizontalCut[-1] > verticalCut[-1]:\n                h += 1\n                ans += (1 + v) * horizontalCut.pop()\n            else:\n                v += 1\n                ans += (1 + h) * verticalCut.pop()\n        while horizontalCut:\n            ans += (1 + v) * horizontalCut.pop()\n        while verticalCut:\n            ans += (1 + h) * verticalCut.pop()\n        return ans\n# print(Solution().minimumCost(m = 2, n = 2, horizontalCut = [7], verticalCut = [4]))",
    "submit_ts": "1720925974",
    "subm_id": "546443210"
}