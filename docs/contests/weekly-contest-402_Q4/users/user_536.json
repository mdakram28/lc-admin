{
    "username": "guddusingh123",
    "submission": "\n\n// DEBUGGING TEMPLATE\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\nenable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifndef ONLINE_JUDGE\n~debug() { cout << endl; }\neni(!=) cout << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\nris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n*this << \"[\";\nfor (auto it = d.b; it != d.e; ++it)\n*this << \", \" + 2 * (it == d.b) << *it;\nris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\nstruct S{\n    int n;\n    vector<int> t, lazy;\n    S(int N){\n        n = N;\n        t.resize(n<<2);\n        lazy.resize(n<<2);\n    }\n \n    int query(int v, int tl, int tr, int l, int r){\n        if(tl > r || tr < l) return 0;\n        if(tl >= l && tr <= r){\n            return t[v];\n        }\n        int tm = (tl + tr)>>1;\n        return query(v*2, tl, tm, l, r) + query(v*2+1, tm+1, tr, l, r);\n    }\n    \n    int query(int l, int r){\n        return query(1, 1, n, l, r);\n    }\n \n    void updateInd(int v, int tl, int tr, int i, int x){\n        if(tl == tr){\n            t[v] = x;\n            return;\n        }\n        int tm = (tl + tr)>>1;\n        if(i <= tm) updateInd(v*2, tl, tm, i, x);\n        else updateInd(v*2+1, tm+1, tr, i, x);\n        t[v] = t[v*2] + t[v*2+1];\n    }\n \n    void updateInd(int i, int x){\n        updateInd(1, 1, n, i, x);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n = a.size();\n        S t(n);\n        for(int i = 0; i < n; i++){\n            if(i > 0 && i < n - 1 && a[i] > a[i-1] && a[i] > a[i+1]){\n                t.updateInd(i+1, 1);\n                // debug() << imie(i) << imie(a);\n            }\n        }\n        vector<int> res;\n        for(auto & v : q){\n            int type = v[0], l = v[1], r = v[2];\n            if(type == 1){\n                if(l == r){\n                    res.push_back(0);\n                    continue;\n                }\n                int cur = t.query(l+1, r+1) - t.query(l+1, l+1) - t.query(r+1, r+1);\n                \n                res.push_back(cur);\n            }\n            else{\n                for(int j = max(0, l - 1); j <= min(n-1, l+1); j++){\n                    t.updateInd(j+1, 0);\n                    // debug() << imie(j) << imie(a);\n                }\n                a[l] = r;\n                // debug() << imie(a);\n                for(int i = max(0, l - 1); i <= min(n-1, l+1); i++){\n                    if(i > 0 && i < n - 1 && a[i] > a[i-1] && a[i] > a[i+1]){\n                        t.updateInd(i+1, 1);\n                    }\n                }\n            }\n        }\n        debug();\n        return res;\n    }\n};",
    "submit_ts": 1718507229.0
}