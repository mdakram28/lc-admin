{
    "username": "matek",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        differences = [num - tgt for num, tgt in zip(nums, target)]\n        \n        dp = [0] * n\n        dp[0] = abs(differences[0])\n        \n        for i in range(1, n):\n            if (differences[i] > 0 and differences[i - 1] < 0) or (differences[i] < 0 and differences[i - 1] >= 0):\n                dp[i] = dp[i - 1] + abs(differences[i])\n            elif (differences[i] > 0 and differences[i] > differences[i - 1]) or (differences[i] < 0 and differences[i] < differences[i - 1]):\n                dp[i] = dp[i - 1] + abs(differences[i] - differences[i - 1])\n            else:\n                dp[i] = dp[i - 1]\n        \n        return dp[-1]\n        print(dp)",
    "submit_ts": "1721530703",
    "subm_id": "548380442"
}