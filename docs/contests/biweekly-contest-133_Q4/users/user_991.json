{
    "username": "manojtyagi2656",
    "submission": "const int MOD = 1e9+7;\nconst int MAX_INV = 400;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n    vector<vector<int>> dp(n + 1, vector<int>(MAX_INV + 1, 0));\n        map<int, int> mp;\n        for (auto& req : requirements) {\n            mp[req[0] + 1] = req[1]; \n        }\n        dp[1][0] = 1;\n        for(int len =1;len<=n;++len){\n            for(int inv=0;inv<=MAX_INV;++inv){\n                for(int np=0;np<len;++np){\n                    int prev= inv-np;\n                    if(prev>=0){\n                        dp[len][inv]=(dp[len][inv]+dp[len-1][prev])%MOD;\n                    }\n                }\n            }\n            if(mp.find(len)!=mp.end()){\n                int target = mp[len];\n                for(int i=0;i<=MAX_INV;++i){\n                    if(i!=target){\n                        dp[len][i]=0;\n                    }\n                }\n            }\n        }\n        long long res=0;\n        for(long long cnt:dp[n]){\n            res=(res+cnt)%MOD;\n        }\n        return (int)res;\n    }\n};",
    "submit_ts": "1719071151",
    "subm_id": "1296840243"
}