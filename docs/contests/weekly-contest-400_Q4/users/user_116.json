{
    "username": "mufti",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> spt;\n    vector<int> lg2;\n\n    void build(vector<int> &nums) {\n        lg2[1] = 0;\n        for (int i = 2; i < (int) lg2.size(); i++) {\n            lg2[i] = 1 + lg2[i >> 1];\n        }\n        for (int i = (int) nums.size() - 1; i >= 0; i--) {\n            int sz = (int) nums.size() - i;\n            int sz2 = lg2[sz] + 1;\n            spt[i].resize(sz2);\n            spt[i][0] = nums[i];\n            for (int j = 1; j < sz2; j++) {\n                spt[i][j] = spt[i][j - 1] & spt[i + (1 << (j - 1))][j - 1];\n            }\n        }\n    }\n\n    int query(int i, int j) {\n        int sz = j - i + 1;\n        int l = lg2[sz];\n        return spt[i][l] & spt[j - (1 << l) + 1][l];\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        spt.resize(n);\n        lg2.resize(n + 1);\n        build(nums);\n        \n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, u = n - 1;\n            while (l < u) {\n                int m = l + (u - l + 1) / 2;\n                int a = query(i, m);\n                if (a <= k) u = m - 1;\n                else l = m;\n            }\n            if (l != i - 1) {\n                int x = query(i, l);\n                ans = min(ans, abs(x - k));\n            }\n            if (l != n - 1) {\n                int x = query(i, l + 1);\n                ans = min(ans, abs(x - k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297026.0
}