{
    "username": "hereToRock",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    struct Node {\n        int start, end, value;\n        Node* left = nullptr;\n        Node* right = nullptr;\n    };\n\n    Node* buildTree(const vector<int>& nums, int start, int end) {\n        Node* node = new Node{start, end, 0};\n\n        if (start == end) {\n            node->value = nums[start];\n        } else {\n            int mid = start + (end - start) / 2;\n            node->left = buildTree(nums, start, mid);\n            node->right = buildTree(nums, mid + 1, end);\n\n            node->value = node->left->value & node->right->value;\n\n            for (int i = node->start; i <= node->end; i++) {\n                node->value &= nums[i];\n            }\n        }\n\n        return node;\n    }\n\n\n    int query(Node* node, int left, int right) {\n        if (node->start == left && node->end == right) {\n            return node->value;\n        }\n        int mid = node->start + (node->end - node->start) / 2;\n        if (right <= mid) {\n            return query(node->left, left, right);\n        } else if (left > mid) {\n            return query(node->right, left, right);\n        } else {\n            return query(node->left, left, mid) & query(node->right, mid + 1, right);\n        }\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        unordered_map<ll, ll> dp;\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> present; \n\n            if (nums[i] == k) {\n                ++ans;\n            }\n            present[nums[i]] = 1;\n\n            for (pair <ll, ll> p: dp) {\n                ll and_value = p.first & nums[i];\n                if (and_value == k) {\n                    ans += p.second;\n                }\n                present[and_value] += p.second;\n            }\n            \n            dp = present;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720280888",
    "subm_id": "1311805624"
}