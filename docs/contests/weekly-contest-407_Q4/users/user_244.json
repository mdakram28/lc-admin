{
    "username": "pankaj_777",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        long long res = 0;\n        for (int i = 0, j = 0; j < n; i = j) {\n            if (diff[i] == 0) {\n                j++;\n            } else if (diff[i] > 0) {\n                int increment = 0;\n                while (j < n and diff[j] > 0) {\n                    if (diff[j] >= increment) {\n                        res += diff[j] - increment;\n                        increment = max(increment, diff[j]);\n                    } else {\n                        increment = min(increment, diff[j]);\n                    }\n                    j++;\n                }\n            } else {\n                int decrement = 0;\n                while (j < n and diff[j] < 0) {\n                    if (diff[j] * -1 >= decrement) {\n                        res += -1 * diff[j] - decrement;\n                        decrement = max(decrement, -1 * diff[j]);\n                    } else {\n                        decrement = min(decrement, -1 * diff[j]);\n                    }\n                    j++;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721530898",
    "subm_id": "1327946791"
}