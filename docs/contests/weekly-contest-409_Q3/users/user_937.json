{
    "username": "xish",
    "submission": "class Solution {\n\tpublic int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n\t\tint f[] = new int[n];\n\t\tf[0] = 0;\n\n\t\tTreeSet<Integer> numMap = new TreeSet<>();\n\t\tfor (int i = 0 ; i < n - 1 ; i++) {\n\t\t\tnumMap.add(i);\n\t\t}\n\t\tint curAns = n - 1;\n\t\tint ans[] = new int[queries.length];\n\t\tfor (int i = 0 ; i < queries.length ; i++) {\n\t\t\tint u = queries[i][0];\n\t\t\tint v = queries[i][1];\n\n\t\t\tInteger pos = numMap.lower(v);\n\t\t\twhile (pos > u) {\n\t\t\t\tnumMap.remove(pos);\n\t\t\t\tpos = numMap.lower(v);\n\t\t\t}\n\n\t\t\tans[i] = numMap.size();\n\t\t}\n\n\t\treturn ans;\n\t}\n}",
    "submit_ts": "1722743581",
    "subm_id": "552351641"
}