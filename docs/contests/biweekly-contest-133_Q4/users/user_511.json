{
    "username": "himanshu_28",
    "submission": "class Solution {\n\n      int MOD = 1000000007;\n      int LIMIT = 400;\n    bool check(int a,int b){\n        return a>=b && a<b;\n    }\n\npublic:\n    int numberOfPermutations(int n,vector<vector<int>>& requirements) {\n        long long res = 0;\n        unordered_map<int, int> mp;\n        \n        vector<vector<long long>> permCounts(n + 1, vector<long long>(LIMIT + 1, 0));\n        permCounts[0][0] = 1;\n        for (auto& req : requirements) {\n            mp[1+req[0]] = req[1];\n        }\n\n       \n\n        for (int len = 1; len <= n; len++) {\n            for (int i = 0; i <= LIMIT; i++) {\n                for (int newPos = 0; newPos < len; newPos++) {\n                    int prevInv = i - newPos;\n                    if (prevInv >= 0) {\n                        permCounts[len][i] = (permCounts[len][i] + permCounts[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(len) != mp.end()) {\n                int target = mp[len];\n                for (int i = 0; i <= LIMIT; i++) {\n                    if (i != target) {\n                        permCounts[len][i] = 0;\n                    }\n                }\n            }\n        }\n\n        \n        for (long long cnt : permCounts[n]) {\n            res = (res + cnt) % MOD;\n        }\n\n        return static_cast<int>(res);\n    }\n};",
    "submit_ts": 1719070578.0
}