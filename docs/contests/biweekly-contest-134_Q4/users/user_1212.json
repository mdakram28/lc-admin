{
    "username": "dk3103",
    "submission": "\n\nclass Solution {\npublic:\n    #define int long long\n    #define MAX 100000\n    #define bitscount 32\n\n    // Array to store bit-wise\n    // prefix count\n    int prefix_count[bitscount][MAX];\n\n    // Function to find the prefix sum\n    void findPrefixCount(vector<int> &arr, int n)\n    {\n\n        // Loop for each bit\n        for (int i = 0; i < bitscount; i++) {\n\n            // Loop to find prefix count\n            prefix_count[i][0] = ((arr[0] >> i) & 1);\n            for (int j = 1; j < n; j++) {\n                prefix_count[i][j] = ((arr[j] >> i) & 1);\n                prefix_count[i][j] += prefix_count[i][j - 1];\n            }\n        }\n    }\n\n    // Function to answer query\n    int rangeAnd(int l, int r)\n    {\n\n        // To store the answer\n        int ans = 0;\n\n        // Loop for each bit\n        for (int i = 0; i < bitscount; i++) {\n            // To store the number of variables\n            // with ith bit set\n            int x;\n            if (l == 0)\n                x = prefix_count[i][r];\n            else\n                x = prefix_count[i][r]\n                    - prefix_count[i][l - 1];\n\n            // Condition for ith bit\n            // of answer to be set\n            if (x == r - l + 1)\n                ans = (ans | (1 << i));\n        }\n\n        return ans;\n    }\n    int solve(vector<int> &arr,int k)\n    {\n        int ans=0;\n        int n=arr.size();\n        findPrefixCount(arr,n);\n        for(int i=0;i<n;i++)\n        {\n            int lo=i;\n            int hi=n-1;\n            int first=n;\n            int last=-1;\n            while(lo<=hi)\n            {\n                int mid=(lo+hi)/2;\n                int val=rangeAnd(i,mid);\n                if(val>k)\n                {\n                    lo=mid+1;\n                }\n                else if(val<=k)\n                {\n                    if(val==k)\n                    {\n                        first=min(first,mid);\n                    }\n                    hi=mid-1;\n                }\n            }\n            lo=i;\n            hi=n-1;\n            while(lo<=hi)\n            {\n                int mid=(lo+hi)/2;\n                int val=rangeAnd(i,mid);\n                if(val>=k)\n                {\n                    lo=mid+1;\n                    if(val==k)\n                    {\n                        last=max(last,mid);\n                    }\n                }\n                else if(val<k)\n                {\n                    hi=mid-1;\n                }\n            }\n            if(last==-1)\n            {\n                continue;\n            }\n            ans=ans+last-first+1;\n        }\n        return ans;\n    }\n    #undef int\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<long long> arr(nums.begin(),nums.end());\n        return solve(arr,k);\n}\n};",
    "submit_ts": "1720279227",
    "subm_id": "1311742727"
}