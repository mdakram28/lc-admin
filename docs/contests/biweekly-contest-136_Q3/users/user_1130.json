{
    "username": "sumi_62",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        int totalFlips = 0;\n\n        // Process the 2x2 blocks to count flips\n        totalFlips += count2x2BlockFlips(grid, rows, cols);\n\n        // Count flips for center row and column if they exist\n        int centerRowFlips = 0, centerRowOnes = 0;\n        if (rows % 2) {\n            countCenterRowFlips(grid, rows, cols, centerRowFlips, centerRowOnes);\n        }\n\n        int centerColFlips = 0, centerColOnes = 0;\n        if (cols % 2) {\n            countCenterColFlips(grid, rows, cols, centerColFlips, centerColOnes);\n        }\n\n        // Adjust total flips to make the number of 1s divisible by 4\n        int totalCenterFlips = centerRowFlips + centerColFlips;\n        int totalCenterOnes = centerRowOnes + centerColOnes;\n        totalFlips = adjustFlips(totalFlips, totalCenterOnes, totalCenterFlips);\n\n        // Process the center cell if both dimensions are odd\n        if (rows % 2 && cols % 2) {\n            totalFlips += grid[rows / 2][cols / 2];\n        }\n\n        return totalFlips;\n    }\n\nprivate:\n    int count2x2BlockFlips(vector<vector<int>>& grid, int rows, int cols) {\n        int flips = 0;\n        for (int i = 0; i < rows / 2; i++) {\n            for (int j = 0; j < cols / 2; j++) {\n                int count = grid[i][j] + grid[rows - i - 1][j] + grid[i][cols - j - 1] + grid[rows - i - 1][cols - j - 1];\n                flips += min(count, 4 - count);\n            }\n        }\n        return flips;\n    }\n\n    void countCenterRowFlips(vector<vector<int>>& grid, int rows, int cols, int& centerRowFlips, int& centerRowOnes) {\n        for (int j = 0; j < cols / 2; j++) {\n            int count = grid[rows / 2][j] + grid[rows / 2][cols - j - 1];\n            centerRowOnes += count;\n            centerRowFlips += min(count, 2 - count);\n        }\n    }\n\n    void countCenterColFlips(vector<vector<int>>& grid, int rows, int cols, int& centerColFlips, int& centerColOnes) {\n        for (int i = 0; i < rows / 2; i++) {\n            int count = grid[i][cols / 2] + grid[rows - i - 1][cols / 2];\n            centerColOnes += count;\n            centerColFlips += min(count, 2 - count);\n        }\n    }\n\n    int adjustFlips(int totalFlips, int totalCenterOnes, int totalCenterFlips) {\n        if ((totalCenterOnes + totalCenterFlips) % 4 == 2 && totalCenterFlips < 2) {\n            return totalFlips + (totalCenterFlips == 1 ? 1 : 2);\n        } else {\n            return totalFlips + totalCenterFlips;\n        }\n    }\n};\n",
    "submit_ts": "1722699184",
    "subm_id": "1343203959"
}