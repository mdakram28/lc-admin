{
    "username": "park29",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        if len(points) < 3:  return -1\n        n = len(points)\n        \n        def find_max_dist(points):\n            n = len(points)\n            A = [points[i][0] + points[i][1] for i in range(n)]\n            B = [points[i][0] - points[i][1] for i in range(n)]\n\n            maxsum, max_sum_idx = max(A), A.index(max(A))\n            maxdiff, max_diff_idx = max(B), B.index(max(B))\n\n            minsum, min_sum_idx = min(A), A.index(min(A))\n            mindiff, min_diff_idx = min(B), B.index(min(B))\n            maximum = max(maxsum - minsum, maxdiff - mindiff)\n            return maximum, maxsum, max_sum_idx, maxdiff, max_diff_idx, minsum, min_sum_idx, mindiff, min_diff_idx\n        \n        ans, maxsum, max_sum_idx, maxdiff, max_diff_idx, minsum, min_sum_idx, mindiff, min_diff_idx = find_max_dist(points)\n        if maxsum - minsum > maxdiff - mindiff:\n            x, y = max_sum_idx, min_sum_idx\n            # remove one of them\n            n = len(points)\n            A = [points[i] for i in range(n) if i != x]\n            B = [points[i] for i in range(n) if i != y]\n            new_dist, _, _, _, _, _, _, _, _ = find_max_dist(A)\n            ans = min(ans, new_dist)\n            new_dist, _, _, _, _, _, _, _, _ = find_max_dist(B)\n            ans = min(ans, new_dist)\n\n        else:\n            x, y = max_diff_idx, min_diff_idx\n            # remove one of them\n            n = len(points)\n            A = [points[i] for i in range(n) if i != x]\n            B = [points[i] for i in range(n) if i != y]\n            new_dist, _, _, _, _, _, _, _, _ = find_max_dist(A)\n            ans = min(ans, new_dist)\n            new_dist, _, _, _, _, _, _, _, _ = find_max_dist(B)\n            ans = min(ans, new_dist)\n        \n        return ans\n        \n        \n        \n        \n        \n        \n        \n        \n        "
}