{
    "username": "kHb9Q9dLoRkkQFkIWDj0zu7PtJ",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size(), a, b;\n        \n        vector<vector<int> > v(n, vector<int> (3));\n        for(int i=0;i<n;i++) {\n            a = points[i][0], b = points[i][1];\n            v[i] = {a+b, a-b, i};\n        }\n        \n        // Finding the max distance pair\n        sort(v.begin(), v.end(), [](const vector<int> &a, const vector<int> &b) {\n            if(a[0] == b[0])    {\n                if(a[1] == b[1])    return a[2] < b[2];\n                return a[1] < b[1];\n            }\n            return a[0] < b[0];\n        });\n        \n        \n        vector<int> p1 = v[0];\n        vector<int> p2 = v[n-1];\n        int d1 = max(abs(p1[0] - p2[0]), abs(p2[1] - p2[1]));\n        \n        sort(v.begin(), v.end(), [](const vector<int> &a, const vector<int> &b) {\n            if(a[1] == b[1])    {\n                if(a[0] == b[0])    return a[2] < b[2];\n                return a[0] < b[0];\n            }\n            return a[1] < b[1];\n        });\n        \n        vector<int> p3 = v[0];\n        vector<int> p4 = v[n-1];\n        int d2 = max(abs(p3[0] - p4[0]), abs(p3[1] - p4[1]));\n\n        vector<vector<int> > toTry;\n        if(d1 == d2) {\n            toTry.push_back(p1);\n            toTry.push_back(p2);\n            toTry.push_back(p3);\n            toTry.push_back(p4);\n        }\n        else if(d1 > d2) {\n            toTry.push_back(p1);\n            toTry.push_back(p2);\n        }\n        else {\n            toTry.push_back(p3);\n            toTry.push_back(p4);\n        }\n        \n        // for(int i=0;i<(int)toTry.size();i++) {\n        //     cout << toTry[i][0] << \" \" << toTry[i][1] << \" \" << toTry[i][2] << endl;  \n        // }\n        \n        int ans = INT_MAX;\n        for(int i=0;i<(int)toTry.size();i++) {\n            // Remove point\n            v.erase(remove(v.begin(), v.end(), toTry[i]), v.end());\n            \n            \n            // cout << \"Removed: \" << toTry[i][0] << \" \" << toTry[i][1] << \" \" << toTry[i][2] << endl; \n            // for(auto el: v) {\n            //     for(auto e: el) {\n            //         cout << e << \" \";\n            //     }\n            //     cout << endl;\n            // }\n           \n            sort(v.begin(), v.end(), [](const vector<int> &a, const vector<int> &b) {\n                if(a[0] == b[0])    {\n                    if(a[1] == b[1])    return a[2] < b[2];\n                    return a[1] < b[1];\n                }\n                return a[0] < b[0];\n            });\n\n            p1 = v[0];\n            p2 = v[n-2];\n            d1 = max(abs(p1[0] - p2[0]), abs(p2[1] - p2[1]));\n\n            sort(v.begin(), v.end(), [](const vector<int> &a, const vector<int> &b) {\n                if(a[1] == b[1])    {\n                    if(a[0] == b[0])    return a[2] < b[2];\n                    return a[0] < b[0];\n                }\n                return a[1] < b[1];\n            });\n\n            p3 = v[0];\n            p4 = v[n-2];\n            d2 = max(abs(p3[0] - p4[0]), abs(p3[1] - p4[1]));\n        \n            ans = min(ans, max(d1, d2));\n            \n            v.push_back(toTry[i]);\n        }\n        \n        return ans;\n    }\n};"
}