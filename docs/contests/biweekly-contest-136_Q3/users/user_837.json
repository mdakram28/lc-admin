{
    "username": "sekhharr",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        vector<vector<pair<ll, ll>>> v(5);\n\t\t// cost of 1 set, 2 sets and 4 sets - setting all 0 and 1\n\t\tll n = grid.size(), m = grid[0].size();\n\t\tll nn = (n%2==1)?n/2:n/2-1, mm = (m%2==1)?m/2:m/2-1;\n        // cout<<\" nn = \"<<nn<<\" mm = \"<<mm<<\"\\n\";\n\t\tll cost0= 0, cost1=0;\n\t\tfor(ll i=0; i<=nn; i++)\n\t\tfor(ll j=0; j<=mm; j++){\n\t\t\t// find all set of positions first\n\t\t\tset<pair<ll,ll>> s;\n\t\t\ts.insert({i,j});\n\t\t\t// horiz image\n\t\t\ts.insert({i,m-j-1});\n\t\t\t// vert image\n\t\t\ts.insert({n-i-1,j});\n\t\t\t// both image\n\t\t\ts.insert({n-i-1,m-j-1});\n\t\t\t// find cost to convert all to 0s\n\t\t\tcost0 = 0, cost1 = 0;\n\t\t\tfor(auto &k: s){\n\t\t\t\tif(grid[k.first][k.second] == 1) cost0++;\n\t\t\t}\n\t\t\t// find cost to convert all to 1s\n\t\t\tfor(auto &k: s){\n\t\t\t\tif(grid[k.first][k.second] == 0) cost1++;\n\t\t\t}\n            // cout<<\" i = \"<<i<<\" j = \"<<j<<\" c0 =\"<<cost0<<\" c1= \"<<cost1<<\" size=\"<<s.size()<<\"\\n\";\n\t\t\t// push accr to no of uniq position \n\t\t\tv[s.size()].push_back({cost0, cost1});\n\t\t}\n\n\t\tll ans = 0, count = 0;\n\t\t// if both n and m are odd then center ele must be 0 to make 1 count div by 4\n\t\tif(n%2==1 && m%2==1 && grid[n/2][m/2] == 1) ans++;\n\n\t\t// find opt cost and no of 1s if we do min changes\n\t\tfor(int i = 2; i<=4; i++){\n\t\t\tif(v[i].size() == 0) continue;\n\t\t\tfor(auto &k: v[i]){\n\t\t\t\t// if keeping all 0s cost is less\n\t\t\t\tif(k.first <= k.second){\n\t\t\t\t\tans += k.first;\n\t\t\t\t}else{\n\t\t\t\t// if keeping all 1s cost is less\n\t\t\t\t\tans += k.second;\n\t\t\t\t\tcount += i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        // cout<<\" ans1= \"<<ans<<\"  count = \"<<count<<\"\\n\";\n\t\t// if no of 1s is already div by 4 then return ans\n\t\tif(count%4 == 0) return ans;\n\t\t// else we have to flip any ones of v[2] \n\t\t// see which of v[2] has least increase when we flip to higher cost\n\t\tll mk = 1e18;\n\t\tfor(auto &k: v[2]){\n\t\t\tif(k.first > k.second) mk = min(mk, k.first-k.second);\n\t\t\telse mk = min(mk, k.second-k.first);\n\t\t}\n\t\treturn ans+mk;\n    }\n};",
    "submit_ts": "1722698517",
    "subm_id": "1343183180"
}