{
    "username": "vignat0905",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        long long ans = 0;\n        int hh = 1, vv = 1, h = 0, v = 0;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                ans += (long long)horizontalCut[h] * vv;\n                hh++, h++;\n            } else {\n                ans += (long long)verticalCut[v] * hh;\n                vv++, v++;\n            }\n        }\n        while (h < horizontalCut.size())\n            ans += (long long)horizontalCut[h++] * vv;\n        while (v < verticalCut.size())\n            ans += (long long)verticalCut[v++] * hh;\n        return ans;\n    }\n};",
    "submit_ts": "1720925432",
    "subm_id": "1320254525"
}