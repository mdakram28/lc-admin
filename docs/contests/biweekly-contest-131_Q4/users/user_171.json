{
    "username": "recursing-almeidafxd",
    "submission": "class Node{\n    Node left,right;\n    boolean val=false;\n    int min=-1,max=-1;\n    int maxL=0;\n}\nclass Solution {\n    int N=100090;\n    Node root=new Node();\n    void push(Node root){\n        if (root.left==null)root.left=new Node();\n        if (root.right==null)root.right=new Node();\n    }\n    void update(Node root,int start,int end,int l,int r){\n        if (start==end){\n            root.val=true;\n            root.min=end;\n            root.max=end;\n            return;\n        }\n        push(root);\n        int mid=start+end>>1;\n        if (l<=mid)update(root.left,start,mid,l,r);\n        if (r>mid)update(root.right,mid+1,end,l,r);\n        int Lmax=root.left.maxL,Rmax=root.right.maxL,maxL=root.left.max==-1?start:root.left.max,minR=root.right.min==-1?end:root.right.min;\n        root.maxL=Math.max(Lmax,Math.max(Rmax,minR-maxL));\n        root.min=root.left.min==-1?root.right.min:root.left.min;\n        root.max=root.right.max==-1?root.left.max:root.right.max;\n    }\n    int query(Node root,int start,int end,int l,int r){\n        if (root==null)return 0;\n        if (l<=start&&r>=end){\n            return root.maxL;\n        }\n        int mid=start+end>>1;\n        int ans=0;\n        if (l<=mid)ans=query(root.left,start,mid,l,r);\n        if (r>mid)ans=Math.max(ans,query(root.right,mid+1,end,l,r));\n        int maxL=(root.left==null||root.left.max==-1)?start:root.left.max,minR=(root.right==null||root.right.min==-1?end:root.right.min);\n        return Math.max(ans,Math.min(minR,r)-Math.max(maxL,l));\n    }\n    public List<Boolean> getResults(int[][] queries) {\n        List<Boolean> ans=new ArrayList<>();\n        for (int[]q:queries){\n            if (q[0]==1)update(root,1,N,q[1]+1,q[1]+1);\n            else ans.add(query(root,1,N,1,q[1]+1)>=q[2]);\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1716650710.0
}