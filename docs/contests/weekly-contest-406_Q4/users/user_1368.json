{
    "username": "makino96",
    "submission": "class Solution {\nprivate:\n    struct Cut\n    {\n        long long cost;\n        bool isHorizontal;\n    };\n    struct Cmp\n    {\n        bool operator() (const Cut& a, const Cut& b)\n        {\n            return a.cost > b.cost;\n        }\n    };\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<Cut> cuts;\n    \n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            cuts.push_back({horizontalCut[i], true});\n        }\n        \n        for (int j = 0; j < verticalCut.size(); ++j) {\n            cuts.push_back({verticalCut[j], false});\n        }\n        \n        sort(cuts.begin(), cuts.end(), Cmp());\n        \n        long long totalCost = 0;\n        long long HorPieces = 1;\n        long long VerPieces = 1;\n        \n        for (const Cut& cut : cuts)\n        {\n            if (cut.isHorizontal)\n            {\n                totalCost += cut.cost * VerPieces;\n                ++HorPieces;\n            }\n            else\n            {\n                totalCost += cut.cost * HorPieces;\n                ++VerPieces;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926216",
    "subm_id": "1320279426"
}