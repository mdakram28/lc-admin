{
    "username": "run_time_error__",
    "submission": "class Solution {\npublic:\n    int avic(vector<vector<int>>& grid)\n    {\n        int avians = 0;\n        long num = grid.size();\n        long mum = grid[0].size();\n        \n\n        if (num % 2 == 1 && mum % 2 == 1) {\n            if (grid[num / 2][mum / 2] == 1) {\n                avians += 1;\n            }\n        }\n\n        vector<int> sht(3, 0);\n        if (num % 2 == 1) {\n            long left = 0, right = mum - 1;\n            while (left < right) {\n                long sm = grid[num / 2][left] + grid[num / 2][right];\n                sht[sm] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (mum % 2 == 1) {\n            long tp = 0, bott = num - 1;\n            while (tp < bott) {\n                long sm = grid[tp][mum / 2] + grid[bott][mum / 2];\n                sht[sm] += 1;\n                tp += 1;\n                bott -= 1;\n            }\n        }\n\n        if (sht[2] % 2 == 1) {\n            if (sht[1] > 0) avians += sht[1];\n             else avians += 2;\n    \n        } else avians += sht[1];\n    \n\n        for (int i = 0; i < num / 2; ++i) {\n            for (int j = 0; j < mum / 2; ++j) {\n                long bvi = grid[num - 1 - i][j];\n                long avi = grid[i][j];\n                long dvi = grid[num - 1 - i][mum - 1 - j];\n                long cvi = grid[i][mum - 1 - j];\n               \n\n                long sm = avi + bvi + cvi + dvi;\n\n                if (sm != 0 && sm != 4) avians += min(sm, 4 - sm);\n            }\n        }\n\n        return avians;\n    }\n    int avii(vector<vector<int>>& grid)\n    {\n        long long n;\n        return avic(grid);\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        long long m;\n        return avii(grid);\n    }\n};",
    "submit_ts": "1722700346",
    "subm_id": "1343239068"
}