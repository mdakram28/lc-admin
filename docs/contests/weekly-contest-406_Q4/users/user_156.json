{
    "username": "rohan289",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int> ());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int> ());\n        int horizontalPieces = 1;\n        int verticalPieces = 1; \n        long long i = 0, j = 0, ans = 0;\n        while(i < horizontalCut.size() || j < verticalCut.size()) {\n            if(i >= horizontalCut.size()) {\n                ans += verticalCut[j] * horizontalPieces;\n                j++;\n            }\n            else if(j >= verticalCut.size()) {\n                ans += horizontalCut[i] * verticalPieces;\n                i++;\n            }\n            else if(horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] * verticalPieces;\n                horizontalPieces++;\n                i++;\n            } else {\n                ans += verticalCut[j] * horizontalPieces;\n                verticalPieces++;\n                j++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925153",
    "subm_id": "1320244765"
}