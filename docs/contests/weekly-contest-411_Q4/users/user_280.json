{
    "username": "\u3055\u304f\u308a\u3059",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        int o = 0, z = 0;\n        vector<long long> far(n, 0), cnt(n, 0), sum(n, 0);\n        int j = -1;\n        vector<long long> mul(n + 1, 0);\n        for (int i = 0; i < n; i++)\n        {\n            while ((j + 1 < n) &&\n                (o + (s[j + 1] == '1' ? 1 : 0) <= k \n            || z + (s[j + 1] == '0' ? 1 : 0) <= k))\n            {\n                j++;\n                o += (s[j] == '1' ? 1 : 0);\n                z += (s[j] == '0' ? 1 : 0);\n            }\n            far[i] = j;\n            cnt[i] = j - i + 1;\n            sum[i] = cnt[i] + (i == 0 ? 0 : sum[i - 1]);\n            //cout << far[i] << \" \" << cnt[i] << \" \" << sum[i] << endl;\n\n            if (i > 0)\n            {\n                mul[i] = (i == 1 ? 1 : i + mul[i - 1]);\n            }\n\n            if (s[i] == '0') \n                z--;\n            else \n                o--;\n        }\n        if (n > 0)\n            mul[n] = mul[n - 1] + n;\n\n        vector<long long> ans;\n        for (const auto& q : queries)\n        {\n            int l = q[0], r = q[1];\n            int ub = upper_bound(far.begin(), far.end(), r) - far.begin();\n            \n            long long tmp = 0;\n            if (ub <= l)\n            {\n                tmp += mul[r - l + 1];\n            }\n            else if (ub > r)\n            {\n                tmp += sum[r] - (l > 0 ? sum[l - 1] : 0);\n            }\n            else\n            {\n                int div = ub - 1;\n                tmp += (sum[div] - (l > 0 ? sum[l - 1] : 0));\n                tmp += mul[r - ub + 1];\n            }\n            ans.push_back(tmp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952633",
    "subm_id": "556412736"
}