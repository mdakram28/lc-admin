{
    "username": "mhmakelvin",
    "submission": "template<typename T>\nclass sparseTable {\n  public:\n    sparseTable(vector<T>& a) {\n      n = a.size();\n      tab.push_back(a);\n      for (int i = 1; 1 <= (n >> i); i++) {\n        vector<T> v;\n        for (int j = 0; j + (1 << i) <= n; j++) {\n          v.push_back(op(tab[i-1][j], tab[i-1][j + (1 << (i-1))]));\n        }\n        tab.push_back(v);\n      }\n    }\n\n    T query(int l, int r) {\n      if (l > r) swap(l, r);\n      int len = r - l + 1;\n      int k = lg(len);\n      if ((1 << k) == len) return tab[k][l];\n\n      return op(tab[k][l], tab[k][r+1-(1 << k)]);\n    }\n\n  private:\n    int n;\n    vector<vector<T>> tab;\n\n    T op(T& a, T& b) {\n      return a & b;\n    }\n\n    int lg(int n) {\n      return bit_width((unsigned long long) n) - 1;\n    }\n\n};\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        sparseTable<int> st(nums);\n        long long res = 0;\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n - 1;\n            \n            while (r >= l) {\n                int mid = (l + r) / 2;\n                \n                if (st.query(i, mid) >= k) l = mid + 1;\n                else r = mid - 1;\n            }\n            \n            int len = l;\n            \n            l = i; r = n - 1;\n            \n            while (r >= l) {\n                int mid = (l + r) / 2;\n                \n                if (st.query(i, mid) <= k) r = mid - 1;\n                else l = mid + 1;\n            }\n            \n            len -= l;\n            res += len;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720277555",
    "subm_id": "1311669223"
}