{
    "username": "Mitul11",
    "submission": "class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        List<int[]> l = new ArrayList();\n        for(int i=0;i<requirements.length;i++){\n            l.add(new int[]{requirements[i][0],requirements[i][1]});\n        }\n        return func(n,l);\n    }\n         public static int func(int n, List<int[]> reqs) {\n        Map<Integer, Integer> hm = new HashMap<>();\n        for (int[] req : reqs) {\n            hm.put(req[0] + 1, req[1]);\n        }\n        \n        long javab = 0;\n        int max = 400;\n        long[][] mitul = new long[n + 1][max + 1];\n        mitul[0][0] = 1;\n      int div = 1000000007;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= max; j++) {\n                for (int pos = 0; pos < i; pos++) {\n                    int prevInv = j - pos;\n                    if (prevInv >= 0) {\n                        mitul[i][j] = (mitul[i][j] + mitul[i - 1][prevInv]) % div;\n                    }\n                }\n            }\n            \n            if (hm.containsKey(i)) {\n                int tar = hm.get(i);\n                for (int k = 0; k <= max; k++) {\n                    if (k != tar) {\n                        mitul[i][k] = 0;\n                    }\n                }\n            }\n        }\n        \n    \n        for (long num : mitul[n]) {\n            javab = (javab + num) % div;\n        }\n        return (int) javab;\n    }\n\n}",
    "submit_ts": 1719071829.0
}