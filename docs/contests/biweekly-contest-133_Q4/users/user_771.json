{
    "username": "dk3103",
    "submission": "class Solution {\npublic:\n    #define int long long\n    const int mod=1e9+7;\n    map<int,int> mpp;\n    map<int,int> strictly;\n    int dp[301][401];\n    int solve(int n,int k)\n    {\n        if(n==0 || (strictly.find(n-1)!=strictly.end() && (strictly[n-1])!=k))\n        {\n            return 0;\n        }\n        if(k==0)\n        {\n            for(int i=n;i>0;i--)\n            {\n                if(strictly.find(i-1)!=strictly.end() && strictly[i-1]!=k)\n                {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n        if(dp[n][k]!=-1)\n        {\n            return dp[n][k];\n        }\n        int ans=0;\n        for(int i=0;i<=k;i++)\n        {\n            if(i<=(n-1))\n            {\n                ans=(ans+solve(n-1,k-i))%mod;\n            }\n        }\n        return dp[n][k]=ans;\n    }\n    #undef int\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(),requirements.end());\n        //sorted in ascending order\n        memset(dp,-1,sizeof(dp));\n        for(auto it:requirements)\n        {\n            mpp[it[0]]=it[1];\n            strictly[it[0]]=it[1];\n        }\n        for(int i=0;i<n;i++)\n        {\n            if(mpp.find(i)==mpp.end())\n            {\n                mpp[i]=(i*(i+1))/2;\n            }\n        }\n        return solve(n,mpp[n-1])%mod;\n    }\n};\n// 5\n// [[0,0],[4,3],[1,1]]\n// 6",
    "submit_ts": 1719070590.0
}