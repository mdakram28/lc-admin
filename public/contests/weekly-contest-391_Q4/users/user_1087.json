{
    "username": "Chandraprabhu",
    "submission": "class Solution {\npublic:\n    int _getMax(vector<vector<int>>& points,int s,int e){\n        int ans = 0;\n        ans = abs(points[s][0]-points[e][0])+abs(points[s][1]-points[e][1]);\n        return ans;\n    }\n    int getMaxDis(vector<vector<int>>& points){\n        sort(points.begin(),points.end(),sum);\n        int ans1 = _getMax(points,0,points.size()-1);\n        sort(points.begin(),points.end(),dif);\n        int ans2 = _getMax(points,0,points.size()-1);\n        return max(ans1,ans2);\n    }\n    static int sum(const vector<int> &a, const vector<int> &b){\n        return a[0]+a[1] < b[0]+b[1];\n    }\n    \n    static int dif(const vector<int> &a, const vector<int> &b){\n        return a[0]-a[1] < b[0]-b[1];\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(),points.end(),sum);\n        int n = points.size();\n\n        vector<vector<int>> temp(points.begin()+1,points.end());\n        int ans1 = getMaxDis(temp);\n        temp.clear();\n        temp.insert(temp.end(),points.begin(),points.end()-1);\n        ans1 = min(ans1,getMaxDis(temp));\n        \n        sort(points.begin(),points.end(),dif);\n        \n        temp.clear();\n        temp.insert(temp.end(),points.begin(),points.end()-1);\n        int ans2 = getMaxDis(temp);\n        temp.clear();\n        temp.insert(temp.end(),points.begin()+1,points.end());\n\n        ans2 = min(ans2,getMaxDis(temp));\n        \n        cout<<ans1<<' '<<ans2<<endl;\n        return min(ans1,ans2);\n    }\n};"
}