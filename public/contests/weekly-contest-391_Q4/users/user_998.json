{
    "username": "aphroditus",
    "submission": "class Solution {\npublic:\n    pair<int, pair<int, int>> help(vector<pair<int, int> >& A, int N){\n        vector<pair<int, int>> V(N), V1(N);\n        for (int i = 0; i < N; i++) {\n            V[i] = {A[i].first + A[i].second, i};\n            V1[i] = {A[i].first - A[i].second, i};\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        if (V.back().first - V.front().first > V1.back().first - V1.front().first) {\n            return {V.back().first - V.front().first, {V.back().second, V.front().second}}; \n        }\n        return {V1.back().first - V1.front().first, {V1.back().second, V1.front().second}}; \n    }\n    int minimumDistance(vector<vector<int>>& arr) {\n        int n = arr.size();\n        set<pair<int, int>> s; \n                vector<pair<int, int>> v; \n        for (int i = 0; i<n; i++) {\n            s.insert({arr[i][0], arr[i][1]});\n            v.push_back({arr[i][0], arr[i][1]});\n        }\n        // for (auto it: s) {\n        //     v.push_back(it);\n        // }\n        if (v.size() == 1) return 0; \n        pair<int, pair<int, int>> it = help(v, v.size());\n        int ans1 = it.first; \n        int f = it.second.first; \n        int l = it.second.second; \n        vector<pair<int, int>> v1, v2; \n        for (int i = 0; i<v.size(); i++) {\n            if (i == f) continue; \n            v1.push_back(v[i]); \n        }\n        for (int i = 0; i<v.size(); i++) {\n            if (i == l) continue; \n            v2.push_back(v[i]); \n        }\n        pair<int, pair<int, int>> tp = help(v1, v1.size()); \n        int ans2 = tp.first; \n        pair<int, pair<int, int>> kp = help(v2, v2.size()); \n        int ans3 = kp.first;\n        return min({ans1, ans2, ans3});\n    }\n};"
}