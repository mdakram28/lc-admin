{
    "username": "3sha26",
    "submission": "import java.util.*;\n\npublic class Solution {\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int n = edges1.length + 1;\n        int m = edges2.length + 1;\n\n        List<List<Integer>> tree1 = buildTree(n, edges1);\n        List<List<Integer>> tree2 = buildTree(m, edges2);\n\n        int diameter1 = getTreeDiameter(tree1, n);\n        int diameter2 = getTreeDiameter(tree2, m);\n\n        return Math.max(diameter1, Math.max(diameter2, (diameter1 + 1) / 2 + (diameter2 + 1) / 2 + 1));\n    }\n\n    private List<List<Integer>> buildTree(int n, int[][] edges) {\n        List<List<Integer>> tree = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            tree.add(new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            tree.get(edge[0]).add(edge[1]);\n            tree.get(edge[1]).add(edge[0]);\n        }\n        return tree;\n    }\n\n    private int getTreeDiameter(List<List<Integer>> tree, int n) {\n        int[] farthestNode = bfs(tree, 0, n);\n        int[] farthestFromFarthest = bfs(tree, farthestNode[0], n);\n        return farthestFromFarthest[1];\n    }\n\n    private int[] bfs(List<List<Integer>> tree, int start, int n) {\n        Queue<Integer> queue = new LinkedList<>();\n        boolean[] visited = new boolean[n];\n        queue.add(start);\n        visited[start] = true;\n        int farthestNode = start;\n        int distance = 0;\n\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            for (int i = 0; i < size; i++) {\n                int node = queue.poll();\n                for (int neighbor : tree.get(node)) {\n                    if (!visited[neighbor]) {\n                        visited[neighbor] = true;\n                        queue.add(neighbor);\n                        farthestNode = neighbor;\n                    }\n                }\n            }\n            distance++;\n        }\n\n        return new int[]{farthestNode, distance - 1};\n    }}",
    "submit_ts": 1719719680.0
}