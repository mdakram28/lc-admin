{
    "username": "sun-man-man",
    "submission": "\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        N = 500005\n        tree = [0] * (2*N)\n\n        def update(x, v):\n            x += N\n            tree[x] = v\n            while x > 1:\n                x //= 2\n                tree[x] = max(tree[x*2], tree[x*2+1])\n\n        def query(l, r):\n            l += N\n            r += N\n            ans = 0\n            while l <= r:\n                if l & 1:\n                    ans = max(ans, tree[l])\n                    l += 1\n                if (r & 1) == 0:\n                    ans = max(ans, tree[r])\n                    r -= 1\n                l //= 2\n                r //= 2\n            return ans\n\n        ans = []\n        d = [0]\n        for i in range(len(queries)):\n            op = queries[i][0]\n            x = queries[i][1]\n            if op == 1:\n                if x > d[-1]:\n                    update(x, x-d[-1])\n                    d.append(x)\n                else:\n                    ind = bisect.bisect_left(d, x)\n                    update(x, x-d[ind-1])\n                    update(d[ind], d[ind]-x)\n                    d[ind:ind] = [x]\n            else:\n                ind = bisect.bisect_left(d, x+1)-1\n                mx = query(0, d[ind])\n                mx = max(mx, x-d[ind])\n                if mx >= queries[i][2]:\n                    ans.append(True)\n                else:\n                    ans.append(False)\n        return ans\n",
    "submit_ts": "1716651352",
    "subm_id": "534774701"
}