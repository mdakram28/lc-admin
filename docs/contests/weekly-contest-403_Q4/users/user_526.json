{
    "username": "littlemxrush",
    "submission": "int f[35][35][35][35];\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& a) {\n        int n = a.size(), m = a[0].size();\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++) \n                for (int k = i; k < n; k++)\n                    for (int p = j; p < m; p++) {\n                        // (i, j) (k, p)\n                        int x1, x2, y1, y2;\n                        x1 = y1 = 1e9;\n                        x2 = y2 = 0;\n                        for (int r = i; r <= k; r++)\n                            for (int c = j; c <= p; c++)\n                                if (a[r][c]) {\n                                    x1 = min(x1, r);\n                                    y1 = min(y1, c);\n                                    x2 = max(x2, r);\n                                    y2 = max(y2, c);\n                                }\n                        if (x1 == 1e9) f[i][j][k][p] = 0;\n                        else f[i][j][k][p] = (x2 - x1 + 1) * (y2 - y1 + 1);\n                        // printf(\">> %d %d %d %d %d\\n\", x1, y1, x2, y2, f[i][j][k][p]);\n                    }\n        int ans = 1e9;\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++) {\n                // (0, 0) (i, j)\n                // (0, j+1) (i, m-1) |  (i+1, 0), (n-1, m-1)\n                // printf(\"%d %d %d\\n\", f[0][0][i][j], f[0][j+1][i][m-1], f[i+1][0][n-1][m-1]);\n                if (f[0][0][i][j] and f[0][j+1][i][m-1] and f[i+1][0][n-1][m-1]) \n                    ans = min(ans, f[0][0][i][j] + f[0][j+1][i][m-1] + f[i+1][0][n-1][m-1]);\n                // (0, j+1) (n, m) | (i+1, 0), (n, j)\n                if (f[0][0][i][j] and  f[0][j+1][n-1][m-1] and f[i+1][0][n-1][j])\n                    ans = min(ans, f[0][0][i][j] + f[0][j+1][n-1][m-1] + f[i+1][0][n-1][j]);\n            }\n        for (int i = 0; i < n; i++) {\n            // (0, 0), (i, m-1)\n            for (int j = 0; j < m; j++) {\n                // (i+1, 0) (n-1, j) | (i+1, j+1) (n-1, m-1)\n                if (f[0][0][i][m-1] and f[i+1][0][n-1][j] and f[i+1][j+1][n-1][m-1]) \n                    ans = min(ans, f[0][0][i][m-1] + f[i+1][0][n-1][j] + f[i+1][j+1][n-1][m-1]);\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            // (0, 0) (n-1, j)\n            for (int i = 0; i < n; i++) {\n                // (0, j+1) (i, m-1) | (i+1, j+1) (n-1, m-1)\n                if (f[0][0][n-1][j] and f[0][j+1][i][m-1] and f[i+1][j+1][n-1][m-1]) \n                    ans = min(ans, f[0][0][n-1][j] + f[0][j+1][i][m-1] + f[i+1][j+1][n-1][m-1]);\n            }\n        }\n        for (int i = 0; i < n-2; i++) {\n            for (int j = i+1; j < n-1; j++) {\n                // (0, 0) (i, m-1) | (i+1, 0) (j, m-1) | (j+1, 0) (n-1, m-1)\n                if (f[0][0][i][m-1] and f[i+1][0][j][m-1] and f[j+1][0][n-1][m-1])\n                    ans = min(ans, f[0][0][i][m-1] + f[i+1][0][j][m-1] + f[j+1][0][n-1][m-1]);\n            }\n        }\n        for (int i = 0; i < m-2; i++)\n            for (int j = i+1; j < m-1; j++) {\n                // (0, 0), (n-1, i) | (0, i+1) (n-1, j) | (0, j+1), (n-1, m-1)\n                if (f[0][0][n-1][i] and f[0][i+1][n-1][j] and f[0][j+1][n-1][m-1]) \n                    ans = min(ans, f[0][0][n-1][i] + f[0][i+1][n-1][j] + f[0][j+1][n-1][m-1]);\n            }\n        return ans;\n    }\n};",
    "submit_ts": "1719114917",
    "subm_id": "1297356651"
}