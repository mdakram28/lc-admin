{
    "username": "cuiaoxiang",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> nxt(n, -1), cnt(2);\n        for (int i = 0, j = 0; i < n; ++i) {\n            if (i > 0) cnt[s[i - 1] - '0']--;\n            for (; j < n && (cnt[0] <= k || cnt[1] <= k); ++j) {\n                cnt[s[j] - '0']++;\n            }\n            if (cnt[0] > k && cnt[1] > k) nxt[i] = j;\n        }\n        for (int i = 0; i < n; ++i) cout << nxt[i] << \" \"; cout << endl;\n        \n        using int64 = long long;\n        vector<int64> ret;\n        while (nxt.size() && nxt.back() < 0) nxt.pop_back();\n        int m = nxt.size();\n        vector<int64> S(m + 1);\n        for (int i = 0; i < m; ++i) S[i + 1] = S[i] + nxt[i];\n        cout << m << endl;\n        \n        for (auto& v : queries) {\n            int L = v[0], R = v[1] + 1;\n            int64 len = R - L;\n            int64 sum = len * (len + 1) / 2;\n            auto j = lower_bound(nxt.begin(), nxt.end(), R + 1) - nxt.begin();\n            if (L <= j) sum -= (j - L) * (R + 1LL) - S[j] + S[L];\n            // for (int i = L; i < rr; ++i) {\n            //     sum -= max(0, R - nxt[i] + 1);\n            // }\n            ret.push_back(sum);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723950951",
    "subm_id": "556402317"
}