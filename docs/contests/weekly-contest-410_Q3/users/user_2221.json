{
    "username": "Himanshu9997",
    "submission": "public class Solution {\n\n    private static final int MOD = 1000000007;\n    \n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int maxVal = 50; // Since nums[i] <= 50\n        \n        // Initialize DP array\n        long[][][] dp = new long[n][maxVal + 1][maxVal + 1];\n        \n        // Initialize DP for the first element\n        for (int j = 0; j <= nums[0]; j++) {\n            int k = nums[0] - j;\n            if (k >= 0 && k <= maxVal) {\n                dp[0][j][k] = 1;\n            }\n        }\n        \n        // Fill DP table\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= nums[i]; j++) {\n                int k = nums[i] - j;\n                if (k < 0 || k > maxVal) continue;\n                \n                // Accumulate valid pairs from previous DP states\n                for (int prevJ = 0; prevJ <= nums[i - 1]; prevJ++) {\n                    int prevK = nums[i - 1] - prevJ;\n                    if (prevK < 0 || prevK > maxVal) continue;\n                    \n                    if (j >= prevJ && k <= prevK) {\n                        dp[i][j][k] = (dp[i][j][k] + dp[i - 1][prevJ][prevK]) % MOD;\n                    }\n                }\n            }\n        }\n        \n        // Sum up all valid pairs for the last element\n        long result = 0;\n        for (int j = 0; j <= nums[n - 1]; j++) {\n            int k = nums[n - 1] - j;\n            if (k >= 0 && k <= maxVal) {\n                result = (result + dp[n - 1][j][k]) % MOD;\n            }\n        }\n        \n        return (int) result;\n    }\n\n    public static void main(String[] args) {\n        Solution sol = new Solution();\n        int[] nums1 = {2, 3, 2};\n        int[] nums2 = {5, 5, 5, 5};\n        \n        System.out.println(sol.countOfPairs(nums1)); // Output: 4\n        System.out.println(sol.countOfPairs(nums2)); // Output: 126\n    }\n}\n",
    "submit_ts": "1723345880",
    "subm_id": "1351565311"
}