{
    "username": "AO9",
    "submission": "const int mod = 1e9 + 7; \n\nclass Solution {\npublic:\n    long long dp[2001][51][51];\n\n    int dfs(vector<int> &nums, int i, int low, int hi) {\n        if (i == nums.size()) \n            return 1; \n\n        if (dp[i][low][hi]!=-1) \n            return dp[i][low][hi];\n\n        long long ans = 0; \n        for (int j = 0; j <= nums[i]; j++) {\n            if (j >= low && nums[i]-j <= hi) {\n                ans = (ans + dfs(nums, i+1, max(low,j),min(hi,nums[i]-j)) % mod) % mod;\n            }\n        }\n\n        return dp[i][low][hi]=ans; \n\n\n    }\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1, sizeof dp); \n        int n = nums.size(); \n\n\n\n        return dfs(nums, 0, 0, 50);\n        \n    }\n};",
    "submit_ts": "1723344718",
    "subm_id": "1351540537"
}