{
    "username": "coder_679",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        vector<int>v;\n        \n        int i = 0, j = n-1;\n        unordered_map<int,int>mp;\n        \n        while(i<j){\n            \n            int val1 = min(nums[i],nums[j]);\n            int val2 = max(nums[i],nums[j]);\n            \n            int val = max(abs(k-val1),abs(val2));\n            \n            int val3 = abs(nums[i]-nums[j]);\n            mp[val3]++;\n            \n            i++,j--;\n            \n            v.push_back(val);\n            \n        }\n        int res = INT_MAX;\n        sort(v.begin(),v.end());\n        \n     \n        \n        \n        for(int i = 0; i<=k; i++){\n            \n            int ind = lower_bound(v.begin(), v.end(), i) - v.begin();\n           \n            int ans = 0;\n            if(ind==n){\n                \n                ans += (ind)*2;\n                res = min(res,ans);\n                \n            }else{\n                \n        \n                int n1 = v.size();\n                \n               \n                ans += (ind)*2;\n         \n              \n                \n                \n                int ind1 =(n1-ind);\n               \n                int val2 = mp[i];\n                ind1 -= val2;\n            \n                ans += ind1;\n              \n                res = min(res,ans);\n                \n            }\n            \n        }\n        \n        return res;\n        \n    }\n};",
    "submit_ts": "1721488853",
    "subm_id": "1327435241"
}