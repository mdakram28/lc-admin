{
    "username": "masteralphi",
    "submission": "class Solution {\npublic:\n    vector<int> res, ans;\n\n    int dfs(int from, vector<vector<int>>& gr, vector<bool>& seen) {\n        seen[from] = true;\n        int mx = 0;\n        for (auto nbr : gr[from]) {\n            if (!seen[nbr]) {\n                auto upd = dfs(nbr, gr, seen);\n                if (nbr % 2) {\n                    mx = max(mx, upd+1);\n                } else {\n                    mx = max(mx, upd+2);\n                }\n            }\n        }\n        res[from] = mx;\n        return mx;\n    }\n\n    void dfs2(int from, vector<vector<int>>& gr, vector<bool>& seen, int longest=0) {\n        seen[from] = true;\n        int top = 0, top2 = 0;\n        for (auto nbr : gr[from]) {\n            if (!seen[nbr]) {\n                if (nbr % 2) {\n                    if (res[nbr] + 1 > top) {\n                        top2 = top;\n                        top = res[nbr] + 1;\n                    } else if (res[nbr] + 1 > top2) {\n                        top2 = res[nbr] + 1;\n                    }\n                } else {\n                    if (res[nbr] + 2 > top) {\n                        top2 = top;\n                        top = res[nbr] + 2;\n                    } else if (res[nbr] + 2 > top2) {\n                        top2 = res[nbr] + 2;\n                    }\n                }\n            }\n        }\n        ans[from] = max(top, longest);\n        for (auto nbr : gr[from]) {\n            if (!seen[nbr]) {\n                auto cpy = longest;\n                if (nbr % 2) {\n                    if ((res[nbr] + 1) == top) {\n                        if (from % 2){\n                            cpy = max(cpy, top2)+1;\n                        } else {\n                            cpy = max(cpy, top2)+2;\n                        }\n                    } else {\n                        if (from % 2){\n                            cpy = max(cpy, top)+1;\n                        } else {\n                            cpy = max(cpy, top)+2;\n                        }\n                    }\n                } else {\n                    if ((res[nbr] + 2) == top) {\n                        if (from % 2){\n                            cpy = max(cpy, top2)+1;\n                        } else {\n                            cpy = max(cpy, top2)+2;\n                        }\n                    } else {\n                        if (from % 2){\n                            cpy = max(cpy, top)+1;\n                        } else {\n                            cpy = max(cpy, top)+2;\n                        }\n                    }\n                }\n                dfs2(nbr, gr, seen, cpy);\n            }\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<bool> seen(n, false);\n        vector<vector<int>> gr(n);\n        for (auto e: edges) {\n            gr[e[0]].push_back(e[1]);\n            gr[e[1]].push_back(e[0]);\n        }\n        res.resize(n);\n        dfs(0, gr, seen);\n        seen = vector<bool>(n, false);\n        ans.resize(n);\n        ans[0] = res[0];\n        dfs2(0, gr, seen);\n        return ans;\n    }\n};",
    "submit_ts": "1722699001",
    "subm_id": "1343198459"
}