{
    "username": "Fkaiser7",
    "submission": "#define lli long long\nlli mod=1e9+7;\nclass Solution {\npublic:\n    void update(lli ind, lli value, lli i, lli l, lli r, vector<vector<lli>>&seg)\n{\n    if (l == r)\n    {\n        seg[i][0]=0;\n        seg[i][1]=value;\n        seg[i][2]=0;\n        seg[i][3]=0;\n        return;\n    }\n    lli mid = (l + r) / 2;\n    if (ind <= mid)\n    {\n        update(ind, value, 2 * i + 1, l, mid, seg);\n    }\n    else\n    {\n        update(ind, value, 2 * i + 2, mid + 1, r, seg);\n    }\n    seg[i][0]=max(seg[2*i+1][0]+seg[2*i+2][0],seg[2*i+1][1]+seg[2*i+2][3]);\n    seg[i][1]=max(seg[2*i+1][0]+seg[2*i+2][1],seg[2*i+1][1]+seg[2*i+2][2]);\n    seg[i][2]=max(seg[2*i+1][2]+seg[2*i+2][2],seg[2*i+1][3]+seg[2*i+2][1]);\n    seg[i][3]=max(seg[2*i+1][2]+seg[2*i+2][3],seg[2*i+1][3]+seg[2*i+2][0]);\n    return;\n}\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        lli n=nums.size();\n        vector<vector<lli>>seg(4*n,vector<lli>(4,0));\n        for(lli i=0;i<n;i++){\n            if(nums[i]<0){\n                nums[i]=0;\n            }\n            update(i,nums[i],0,0,n-1,seg);\n        }\n        lli ans=0;\n        for(lli i=0;i<queries.size();i++){\n            lli p=queries[i][0];\n            lli val=queries[i][1];\n            nums[p]=max((lli)(0),val);\n            update(p,nums[p],0,0,n-1,seg);\n            lli ma=max(seg[0][0],max(seg[0][1],max(seg[0][2],seg[0][3])));\n            //cout<<ma<<endl;\n            ans+=ma;\n            ans=ans%mod;\n        }\n        return (int)(ans);\n    }\n};",
    "submit_ts": 1716694141.0
}