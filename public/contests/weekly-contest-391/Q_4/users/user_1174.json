{
    "username": "blackcoder0212",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        multiset<int> s1,s2;\n        int ans=INT_MAX;\n \n        for (int i = 0; i < n; i++) {\n        s1.insert(points[i][0] + points[i][1]);            \n        s2.insert(points[i][0] - points[i][1]);\n    }\n \n        for(int i=0;i<n;i++)\n        {\n          int x=points[i][0] + points[i][1];\n          int y=points[i][0] - points[i][1];\n          s1.erase(s1.find(x));\n            s2.erase(s2.find(y));\n            int t1=*--s1.end();\n            int t2=*s1.begin();\n            int t3=*--s2.end();\n            int t4=*s2.begin();\n            int t=max(t1-t2,t3-t4);\n            ans=min(ans,t);\n            s1.insert(x);\n            s2.insert(y);\n        }\n        \n        return ans;\n        \n    }\n};"
}