{
    "username": "hcseo",
    "submission": "class Solution:\n    def maxTotalReward(self, rewardValues: List[int]) -> int:\n        can_not_make = set()\n        rewardValues.sort()\n        n = len(rewardValues)\n        if n == 1:\n            return rewardValues[0]\n        largest = rewardValues[n-1]\n\n        def can_make(num: int):\n            if num in can_not_make:\n                return False\n            if rewardValues[0] > num:\n                return False\n            l = 0\n            r = n-1\n            while l<r-1:\n                next = (l+r)>>1\n                if rewardValues[next] <= num:\n                    l = next\n                else:\n                    r = next\n            if num == rewardValues[l]:\n                return True\n            i = l\n            while i >= 0 and rewardValues[i]*2 > num:\n                if can_make(num - rewardValues[i]):\n                    return True\n                i -= 1\n            can_not_make.add(num)\n            return False\n\n        for i in range(largest-1, 0, -1):\n            if can_make(i):\n                return i + largest\n        return largest\n",
    "submit_ts": 1717904011.0
}