{
    "username": "zucrose",
    "submission": "class Solution {\npublic:\n    void dfs(int ind,vector<int> g[],bool vis[],int dis[]){\n        for(auto i:g[ind]){\n            if(vis[i]==false){\n                vis[i]=true;\n                dis[i]=dis[ind]+1;\n                dfs(i,g,vis,dis);\n            }\n            \n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n         int n=edges1.size()+1,m=edges2.size()+1;\n        vector<int> g1[n],g2[m];\n        for(auto i:edges1){\n            g1[i[0]].push_back(i[1]);\n             g1[i[1]].push_back(i[0]);\n        }\n        for(auto i:edges2){\n            g2[i[0]].push_back(i[1]);\n             g2[i[1]].push_back(i[0]);\n        }\n       \n        int dis[n];\n        dis[0]=0;\n        bool vis[n];\n        memset(vis,false,sizeof(vis));\n        vis[0]=true;\n        dfs(0,g1,vis,dis);\n        int ind=0,mx=0;\n        for(int i=0;i<n;i++){\n            if(dis[i]>mx){mx=dis[i];ind=i;};\n        }\n        //cout<<ind<<endl;\n        dis[ind]=0;\n       memset(vis,false,sizeof(vis));\n        vis[ind]=true;\n        dfs(ind,g1,vis,dis);\n        int h1=0;\n        for(int i=0;i<n;i++)h1=max(h1,dis[i]);\n        \n        int dis1[m];\n        dis1[0]=0;\n        bool vis1[m];\n        memset(vis1,false,sizeof(vis1));\n        vis1[0]=true;\n        dfs(0,g2,vis1,dis1);\n        int ind1=0,mx1=0;\n        for(int i=0;i<m;i++){\n            if(dis1[i]>mx1){mx1=dis1[i];ind1=i;}\n        }\n        dis1[ind1]=0;\n       memset(vis1,false,sizeof(vis1));\n        vis1[ind1]=true;\n        dfs(ind1,g2,vis1,dis1);\n        int h2=0;\n        for(int i=0;i<m;i++)h2=max(h2,dis1[i]);\n       //cout<<h1<<\" \"<<h2<<endl;\n        return max((h1+1)/2+(h2+1)/2+1,max(h1,h2));\n    }\n};",
    "submit_ts": 1719719526.0
}