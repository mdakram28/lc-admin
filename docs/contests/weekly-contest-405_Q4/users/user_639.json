{
    "username": "boAshraf",
    "submission": "class Trie:\n    def __init__(self):\n        self.nxt = [None] * 26\n        self.val = float('inf')\n        self.is_end = False\n        self.dp = []\n        self.s = \"\"\n        self.n = 0\n\n    def insert(self, s, c):\n        curr = self\n        for char in s:\n            index = ord(char) - ord('a')\n            if curr.nxt[index] is None:\n                curr.nxt[index] = Trie()\n            curr = curr.nxt[index]\n        curr.is_end = True\n        curr.val = min(curr.val, c)\n\n    def init(self, s_len, s):\n        self.dp = [-1] * s_len\n        self.s = s\n        self.n = s_len\n\n    def rec(self, match):\n        if match == self.n:\n            return 0\n        if self.dp[match] != -1:\n            return self.dp[match]\n        ret = float('inf')\n        curr = self\n        for i in range(match, self.n):\n            index = ord(self.s[i]) - ord('a')\n            if curr.nxt[index] is None:\n                break\n            curr = curr.nxt[index]\n            if curr.is_end:\n                ret = min(ret, self.rec(i + 1) + curr.val)\n        self.dp[match] = ret\n        return ret\n\n\nclass Solution:\n    def minimumCost(self, target, words, costs):\n        T = Trie()\n        T.init(len(target), target)\n        for i in range(len(words)):\n            T.insert(words[i], costs[i])\n        ans = T.rec(0)\n        if ans >= float('inf'):\n            return -1\n        return ans\n",
    "submit_ts": "1720321992",
    "subm_id": "1312337803"
}