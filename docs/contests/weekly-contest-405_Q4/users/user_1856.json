{
    "username": "devansh789",
    "submission": "struct TrieNode {\n    TrieNode* childNode[26];\n    int mincost = -1;\n\n    TrieNode()\n    {\n        mincost = -1;\n        for (int i = 0; i < 26; i++) {\n            childNode[i] = NULL;\n        }\n    }\n};\n\nvoid insert_key(TrieNode* root, string &key, int cost)\n{\n    TrieNode* currentNode = root;\n    for (auto c : key) {\n        if (currentNode->childNode[c-'a'] == NULL) {\n            TrieNode* newNode = new TrieNode();\n            currentNode->childNode[c-'a'] = newNode;\n        }\n        currentNode = currentNode->childNode[c-'a'];\n    }\n    if((currentNode->mincost)==-1) (currentNode->mincost) = cost;\n    else (currentNode->mincost) = min(cost,(currentNode->mincost));\n}\n\nlong long func(int pos, TrieNode* root, string &s, vector<int> &dp) {\n    if(pos==s.size()) return 0;\n    if(dp[pos]!=-1) return dp[pos];\n    long long ans = 1e9;\n    TrieNode* node = root;\n    for(int i = pos; i < s.length(); i++) {\n        node = node->childNode[s[i]-'a'];\n        if(node==NULL) break;\n        if((node->mincost)!=-1) ans = min(ans,(node->mincost)+func(i+1,root,s,dp));\n    }\n    return dp[pos] = ans;\n}\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        int n = target.length(), m = words.size();\n        for(int i = 0; i < m; i++) {\n            insert_key(root,words[i],costs[i]);\n        }\n        vector<int> dp(n,-1);\n        int ans = func(0,root,target,dp);\n        if(ans==(1e9)) ans = -1;\n        return ans;\n    }\n};",
    "submit_ts": "1720324778",
    "subm_id": "1312408022"
}