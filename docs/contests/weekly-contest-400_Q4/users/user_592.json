{
    "username": "louisfghbvc",
    "submission": "class Solution {\npublic:\n    \n    void add(vector<int> &bit, int x, int v) {\n        for (int i = 0; i < 30; ++i) {\n            if (x >> i & 1) {\n                bit[i] += v;\n            }\n        }\n    }\n    \n    int get(vector<int> &bit, int len) {\n        int ans = 0;\n        for (int i = 0; i < 30; ++i) {\n            if (bit[i] == len) {\n                ans |= 1<<i;\n            }\n        }\n        return ans;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        // goal: find the minimum abs AND with k\n        // idea:\n        // two pointers + binary search the ans\n        // 6,5,4 => 4, k=1, f=2\n        \n        int n = nums.size();\n        \n        auto good = [&](int f) -> bool {\n            vector<int> tmp(30);\n            for (int r = 0, l = 0; r < n; ++r) {\n                add(tmp, nums[r], 1);\n                while (l < r && abs(get(tmp, r-l+1) - k) > f) {\n                    if (get(tmp, r-l+1) < k) add(tmp, nums[l++], -1);\n                    else break;\n                }\n                if (abs(get(tmp, r-l+1)-k) <= f)\n                    return true;\n            }    \n            return false;\n        };\n        \n        int l = 0, r = 1e9;\n        int ans = 1e9;\n        while (l <= r) {\n            int m = (l+r)/2;\n            if (good(m)) ans = m, r = m-1;\n            else l = m+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298943.0
}