{
    "username": "Aryam_singh",
    "submission": "#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        pbds stt;\n        for(int p=0;p<n;p++){\n            stt.insert(p);\n        }\n         int md = 1000000007;\n         int mx = 400;\n\n        unordered_map<long long int,long long  int> r;\n        for (auto  rq : req) {\n            r[rq[0] + 1] = rq[1];\n        }\n\n        vector<vector<long long >> vt(n + 1, vector<long long >(mx + 1, 0));\n        vt[0][0] = 1;\n\n        for (int x = 1; x <= n; x++) {\n            for (int y = 0; y <= mx; y++) {\n                for (int z = 0; z < x; z++) {\n                    int pi = y - z;\n                    if (pi >= 0) {\n                        vt[x][y] = (vt[x][y] + vt[x - 1][pi]) % md;\n                    }\n                }\n            }\n\n            if (r.count(x)) {\n                int ti = r[x];\n                for (int y = 0; y <= mx; y++) {\n                    if (y != ti) {\n                        vt[x][y] = 0;\n                    }\n                }\n            }\n        }\n\n        long long  sum = 0;\n        for (long long  ct : vt[n]) {\n            sum = (sum + ct) % md;\n        }\n\n        return sum;\n    }\n};",
    "submit_ts": 1719070968.0
}