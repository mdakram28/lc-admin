{
    "username": "lilpanda02",
    "submission": "\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> chutki;\n    vector<pair<int, int>> jaggu;\n};\n\nclass Trie {\npublic:\n    TrieNode* bheem;\n\n    Trie() {\n        bheem = new TrieNode();\n    }\n\n    void insert(string dholu, int bholu, int indumati) {\n        TrieNode* node = bheem;\n        for (char raju : dholu) {\n            if (!node->chutki.count(raju)) {\n                node->chutki[raju] = new TrieNode();\n            }\n            node = node->chutki[raju];\n        }\n        node->jaggu.push_back({bholu, indumati});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string tunmun, vector<string>& kalia, vector<int>& raju) {\n        int n = tunmun.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        Trie bheemTrie;\n        for (int chutki = 0; chutki < kalia.size(); ++chutki) {\n            bheemTrie.insert(kalia[chutki], chutki, raju[chutki]);\n        }\n\n        for (int chutki = 0; chutki < n; ++chutki) {\n            if (dp[chutki] == INT_MAX) {\n                continue;\n            }\n\n            TrieNode* node = bheemTrie.bheem;\n            for (int jaggu = chutki; jaggu < n; ++jaggu) {\n                if (!node->chutki.count(tunmun[jaggu])) {\n                    break;\n                }\n                node = node->chutki[tunmun[jaggu]];\n                for (auto& p : node->jaggu) {\n                    int dholu_len = kalia[p.first].size();\n                    if (chutki + dholu_len <= n) {\n                        dp[chutki + dholu_len] = min(dp[chutki + dholu_len], dp[chutki] + p.second);\n                    }\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};\n",
    "submit_ts": "1720323190",
    "subm_id": "1312369532"
}