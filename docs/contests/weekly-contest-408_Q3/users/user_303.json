{
    "username": "zzjjbb",
    "submission": "class Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        n = len(s)\n        last = [0] * n\n        le = 1\n        z = [i for i, c in enumerate(s) if c == '0']\n        z = [-1] + z + [n]\n        tot0 = len(z)\n        ans = 0\n        for n0 in range(1, int(sqrt(n + 0.5)) + 1):\n            minl = n0 ** 2 + n0\n            for l in range(1, tot0 - n0):\n                r = l + n0 - 1\n                lb = z[l-1] + 1\n                rb = z[r + 1] - 1\n                lp = min(max(z[r] - minl, lb - 1), z[l])\n                lp2 = max(min(z[l], rb - minl + 1), lp)\n                p1 = (lp - lb + 1) * (rb - z[r] + 1)\n                p2 = (lp2 - lp) * (rb - lp - minl + 1) - (lp2 - lp) * (lp2 - lp - 1) // 2\n                ans += p1 + p2\n                # print(z[l], z[r], lb, rb, lp, lp2)\n                # print(p1)\n                # print(p2)\n        for i, j in pairwise(z):\n            ans += (j - i) * (j - i - 1) // 2\n        return ans",
    "submit_ts": "1722138856",
    "subm_id": "1335801461"
}