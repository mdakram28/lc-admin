{
    "username": "ljs7619480",
    "submission": "class Solution {\n    static constexpr size_t nbits = 32;\n    void addCnt(int num){\n        for(int i=0; i<nbits; i++){\n            int mask = 1L << i;\n            if(num & mask){ bit_cnt[i]++; }\n        }\n        // cout << num << \"a: \";\n        // for(int x: bit_cnt){ cout << x <<\" \"; }\n        // cout << endl;\n    }\n\n    void delCnt(int num){\n        for(int i=0; i<nbits; i++){\n            int mask = 1L << i;\n            if(num & mask){ bit_cnt[i]--; }\n        }\n        // cout << num << \"d: \";\n        // for(int x: bit_cnt){ cout << x <<\" \"; }\n        // cout << endl;\n    }\n\n    int cnt2num(int len){\n        int num = 0;\n        for(int i=0; i<nbits; i++){\n            if(bit_cnt[i] == len){\n                int mask = 1L << i;\n                num |= mask;\n            }\n        }\n        return num;\n    }\n        \n    array<int, nbits> bit_cnt;\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int const n = nums.size();\n        int ans = INT_MAX;\n        int l=0, r=0;\n        while(r<n){\n            addCnt(nums[r++]);\n            int num = cnt2num(r-l);\n            ans = min(ans, abs(num-k));\n\n            while(l<r && num < k){ // AND can only take away bit and make smaller\n                delCnt(nums[l++]);\n                num = cnt2num(r-l);\n                ans = min(ans, abs(num-k));\n            }\n            if(num == k){ return 0; }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717298842",
    "subm_id": "1274793066"
}