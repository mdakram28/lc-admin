{
    "username": "shawnxi",
    "submission": "F = 10**15\nclass ST3:\n    def __init__(self, n):  # \u8303\u56f4 [0, n-1]\n        self.n = n\n        self.st = [0 for _ in range(0, 2 ** (math.ceil(math.log2(n))) * 2)]\n        self.f = [10**15 for _ in range(0, 2 ** (math.ceil(math.log2(n))) * 2)]\n\n    def _set(self, i, l, r, sl, sr, k):\n        if l == r:\n            self.st[i] = k\n            return\n        if sl == l and sr == r:\n            self.st[i] = k * (r - l + 1)\n            self.f[i] = k\n            return\n        p = (l + r) // 2\n        if self.f[i]!=F:\n            self._set(2 * i + 1, l, p, l, p, self.f[i])\n            self._set(2 * i + 2, p + 1, r, p + 1, r, self.f[i])\n            self.f[i]=F\n        if sl <= p:\n            self._set(2 * i + 1, l, p, sl, min(sr, p), k)\n        if sr > p:\n            self._set(2 * i + 2, p + 1, r, max(sl, p + 1), sr, k)\n        self.st[i] = self.st[2 * i + 1] + self.st[2 * i + 2]\n\n    def _sum(self, i, l, r, sl, sr):\n        if l == r:\n            return self.st[i]\n        if sl == l and sr == r:\n            return self.st[i]\n        if self.f[i]!=F:\n            return self.f[i] * (sr - sl + 1)\n        p = (l + r) // 2\n        res = 0\n        if sl <= p:\n            res += self._sum(2 * i + 1, l, p, sl, min(sr, p))\n        if sr > p:\n            res += self._sum(2 * i + 2, p + 1, r, max(sl, p + 1), sr)\n        return res\n\n    def set_range(self, l, r, k):\n        if l>r:\n            return\n        return self._set(0, 0, self.n - 1, l, r, k)\n\n    def sum(self, l, r):\n        if l>r:\n            return 0\n        return self._sum(0, 0, self.n - 1, l, r)\n    \nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        bit = ST3(n)\n        \n        res = []\n    \n        last= n-1\n        \n        for i,j in queries:\n            k = bit.sum(i+1,j-1)\n            if k<(j-i-1):\n                last-=(j-i-1)-k\n                bit.set_range(i+1,j-1,1)\n            res.append(last)\n            \n        \n        return res",
    "submit_ts": "1722741681",
    "subm_id": "552339751"
}