{
    "username": "vinewhip",
    "submission": "class Solution {\npublic:\n    \n    int getmax(vector<pair<int, int>>& A, int N)\n    {\n        vector<int> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i] = A[i].first + A[i].second;\n            V1[i] = A[i].first - A[i].second;\n        }\n\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        int maxi = max(V.back() - V.front(), V1.back() - V1.front());\n        return maxi;\n    }\n    \n    pair<int, int> helper(vector<pair<int, int>>A, int N)\n    {\n        vector<pair<int, int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) \n        {\n            V[i].first = A[i].first + A[i].second;\n            V[i].second = i;\n\n            V1[i].first = A[i].first - A[i].second;\n            V1[i].second = i;\n        }\n\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        int d1 = V.back().first - V.front().first;\n        int d2 = V1.back().first - V1.front().first;\n\n        if (d1 >= d2)\n            return {V.back().second, V.front().second};\n        else\n            return {V1.back().second, V1.front().second};\n    }\n    \n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int, int>>arr;\n        for (auto v : points)\n            arr.push_back({v[0], v[1]});\n        \n        auto p = helper(arr, n);\n        int idx1 = p.first, idx2 = p.second;\n        \n        vector<pair<int, int>>a, b;\n        for (int i = 0; i < n; i++)\n        {\n            if (i != idx1)\n                a.push_back(arr[i]);\n            if (i != idx2)\n                b.push_back(arr[i]);\n        }\n        \n        int ans1 = getmax(a, a.size());\n        int ans2 = getmax(b, b.size());\n        \n        return min(ans1, ans2);\n    }\n};"
}