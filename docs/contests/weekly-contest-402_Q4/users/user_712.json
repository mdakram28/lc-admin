{
    "username": "user2106li",
    "submission": "#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \nusing namespace __gnu_pbds; \n  \n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \n  \nclass Solution {\npublic:\n    void doIt(ordered_set &peak, vector<int>& nums, int id){\n        if(peak.find(id)!=peak.end()){\n            peak.erase(peak.find(id));\n        }\n        if(id-1>=0 and id+1<nums.size() and nums[id-1]<nums[id] and nums[id]>nums[id+1])peak.insert(id);\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        ordered_set peak;\n        vector<int>ans;\n        for(int i=1;i+1<nums.size();i++)\n        {\n            if(nums[i]>nums[i-1] and nums[i]>nums[i+1])peak.insert(i);\n        }\n        for(auto it : queries)\n        {\n            //cout<<peak.size()<<endl;\n            int op = it[0];\n            if(op==2)\n            {\n                int id = it[1];\n                int val = it[2];\n                nums[id]=val;\n                doIt(peak,nums,id);\n                doIt(peak,nums,id+1);\n                doIt(peak,nums,id-1);\n                //cout<<peak.size()<<endl;\n            }\n            else\n            {\n                int l=it[1],r=it[2];\n                l++,r--;\n                int total=0;\n                //cout<<l<<' '<<r<<endl;\n                //cout<<peak.order_of_key(r+1)<<endl;\n                //cout<<peak.order_of_key(l)<<endl;\n                if(l<=r)\n                total = peak.order_of_key(r+1)-peak.order_of_key(l);\n                ans.push_back(total);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507998.0
}