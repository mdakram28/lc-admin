{
    "username": "Abdur Rahman Daanish",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        const int n = board.size(), m = board[0].size();\n        const long long inf = 1LL<<50;\n        vector<vector<long long>> dp(n,vector<long long>(n,-inf));\n        vector<int> pre_max(n,-1e9);\n        for(int i=0;i<n;++i){\n            pre_max[i] = max(board[i][0], board[i][1]);\n            for(int j=i+1;j<n;++j){\n                dp[i][j] = max( board[i][0] + board[j][1] , board[i][1] + board[j][0]);\n            }\n        }\n        long long ans = -inf;\n        for(int k=2;k<m;++k){\n            vector<pair<int,int>> all(n);\n            for(int j=0;j<n;++j) all[j] = { board[j][k], j};\n            sort(rbegin(all), rend(all));\n            for(int i=0;i<n;++i){\n                for(int j=i+1;j<n;++j){\n                    for(int d: {0,1,2})if(!(all[d].second == i || all[d].second == j)){\n                        ans = max(ans, 1LL * all[d].first + 1LL * dp[i][j]);\n                    }\n                }\n            }\n\n            for(int i=0;i<n;++i){\n                for(int j=i+1;j<n;++j){\n                    dp[i][j] = max(dp[i][j], 1LL*pre_max[i] + board[j][k]);\n                    dp[i][j] = max(dp[i][j], 1LL*pre_max[j] + board[i][k]);\n                }\n            }\n            for(int i=0;i<n;++i) pre_max[i] = max(pre_max[i], board[i][k]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908120",
    "subm_id": "1359139029"
}