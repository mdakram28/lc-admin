{
    "username": "qiye-5",
    "submission": "int __FAST_IO__ = []() { std::ios::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0); return 0; }();\n\nclass Solution {\n    vector<vector<int>> g, f;\n    int dfs(int k, int p, vector<int>& res)\n    {\n        int max_dis = 0;\n        for (int i = 0; i < g[k].size(); ++i) {\n            if (g[k][i] == p) continue;\n            f[k][i] = 2 - (g[k][i] & 1) + dfs(g[k][i], k, res);\n            max_dis = max(max_dis, f[k][i]);\n        }\n        // cout << max_dis << endl;\n        return res[k] = max_dis;\n    }\n\n    void dfs2(int k, int p, vector<int>& res, int sum)\n    {\n        res[k] = max(sum, res[k]);\n        int x = -1, y = 0;\n        for (int i = 0; i < g[k].size(); ++i) {\n            if (g[k][i] == p) continue;\n            if (y < f[k][i]) y = f[k][x = i];\n        }\n        // cout << \"k: \" << k << \" \" << x << \",\" << y << \" \" << sum << endl;\n\n        for (int i = 0; i < g[k].size(); ++i) {\n            if (g[k][i] == p) continue;\n            if (x != i) {\n                dfs2(g[k][i], k, res, 2 - (k & 1) + max(y, sum));\n            } else {\n                int lcd = 0;\n                for (int j = 0; j < g[k].size(); ++j) {\n                    if (g[k][j] == p || x == j) continue;\n                    lcd = max(lcd, f[k][j]);\n                    // cout << \"j \" << j << endl;\n                }\n                // cout << lcd << endl;\n                dfs2(g[k][i], k, res, 2 - (k & 1) + max(lcd, sum));\n            }\n        }\n    }\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        g.resize(n);\n        for (auto& e : edges) g[e[0]].push_back(e[1]), g[e[1]].push_back(e[0]);\n        for (auto& v : g) f.push_back(vector<int>(v.size(), 0));\n\n        vector<int> res(n);\n        dfs(0, -1, res);\n        dfs2(0, -1, res, 0);\n        return res;\n    }\n};",
    "submit_ts": "1722699408",
    "subm_id": "552275494"
}