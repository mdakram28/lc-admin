{
    "username": "\u5c0f\u9547\u505a\u9898\u5bb6",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m=Integer.min(board.length, board[0].length);\n        ArrayList<int[]> list=new ArrayList<>();\n        for(int i=0;i<board.length;i++){\n            for (int j = 0; j < board[0].length; j++) {\n                list.add(new int[]{i,j,board[i][j]});\n            }\n        }\n        list.sort((o1, o2) -> o2[2]-o1[2]);\n        long ans=Long.MIN_VALUE;\n        int bound=Integer.min(list.size(),3*m+3);\n        for(int i=0;i<bound;i++){\n            int x1=list.get(i)[0];\n            int y1=list.get(i)[1];\n            for(int j=0;j<bound;j++){\n                int x2=list.get(j)[0];\n                int y2=list.get(j)[1];\n                for (int k = 0; k <bound ; k++) {\n                    int x3=list.get(k)[0];\n                    int y3=list.get(k)[1];\n                    if(x1==x2||x1==x3||x2==x3||y1==y2||y1==y3||y2==y3){\n                        continue;\n                    }else {\n                        long temp= list.get(i)[2];\n                        temp=temp+list.get(j)[2];\n                        temp=temp+list.get(k)[2];\n                        ans=Long.max(ans,temp);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723908323",
    "subm_id": "556330359"
}