{
    "username": "ritik_369",
    "submission": "class Solution {\npublic:\nint numberOfAlternatingGroups(vector<int>colors, int k) \n{\n   int n = colors.size() ; \n   vector < int > dp(n + 10 , 0) ; \n   dp[n-1] = 1 ; \n   for(int i = n-2 ; i >= 0 ; i -= 1)\n   {\n      if(colors[i] == colors[i + 1])\n      {\n         dp[i] = 1 ; \n      }\n      else\n      {\n         dp[i] = dp[i + 1] + 1 ; \n      }\n   }\n   int res = 0 , rem = n ; \n   for(int i = 0 ; i < n ; i += 1)\n   {\n      if(rem < k)\n      {\n         int rig = (n - i) ; \n         int lef = k - rig ; \n         res += (((dp[0] >= lef) & (dp[i] >= rig)) & (colors[0] != colors[n-1])) ; \n      }\n      else\n      {\n         res += (dp[i] >= k) ; \n      }\n      rem --  ; \n   }\n    return res;\n}\n\n};",
    "submit_ts": "1720278283",
    "subm_id": "1311702438"
}