{
    "username": "truongphamminh17",
    "submission": "/**\n * @param {string} target\n * @param {string[]} words\n * @param {number[]} costs\n * @return {number}\n */\nvar minimumCost = function (target, words, costs) {\n  class TrieNode {\n    constructor() {\n      this.children = {};\n      this.isEndOfWord = false;\n      this.cost = 0;\n    }\n  }\n\n  class Trie {\n    constructor() {\n      this.root = new TrieNode();\n    }\n\n    insert(word, cost) {\n      let node = this.root;\n      for (const char of word) {\n        if (!node.children[char]) {\n          node.children[char] = new TrieNode();\n        }\n        node = node.children[char];\n      }\n      node.isEndOfWord = true;\n      node.cost = Math.min(node.cost || 10 ** 10, cost)\n    }\n\n    insertArray(words, costs) {\n      for (let i = 0; i < words.length; i++) {\n        this.insert(words[i], costs[i]);\n\n      }\n    }\n\n    search(word) {\n      let node = this.root;\n      for (const char of word) {\n        if (!node.children[char]) {\n          return false;\n        }\n        node = node.children[char];\n      }\n      return node.isEndOfWord;\n    }\n\n    travel(compare) {\n      const result = [];\n      let comIndex = 0;\n      let node = this.root;\n      while (comIndex < compare.length) {\n        if (node.children[compare[comIndex]]) {\n          node = node.children[compare[comIndex]];\n          if (node.isEndOfWord) {\n            result.push([comIndex, node.cost])\n          }\n          comIndex++\n        } else {\n          break\n        }\n      }\n      return result\n    }\n  }\n  const trie = new Trie();\n  trie.insertArray(words, costs);\n  const endHash = Array(target.length).fill(10 ** 10);\n  for (let i = 0; i < target.length; i++) {\n    const prevCost = i > 0 ? endHash[i - 1] : 0\n    let searchText = target.slice(i)\n    const nexts = trie.travel(searchText);\n    for (const [pos, cost] of nexts) {\n      if (endHash[pos + i] > cost + prevCost) {\n        endHash[pos + i] = cost + prevCost\n      }\n    }\n  }\n  return endHash[target.length - 1] < 10 ** 10 ? endHash[target.length - 1] : -1\n};",
    "submit_ts": "1720323858",
    "subm_id": "1312385754"
}