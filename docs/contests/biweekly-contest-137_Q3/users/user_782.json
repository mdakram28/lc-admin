{
    "username": "Sam Lee",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        m = board.size();\n        n = board[ 0 ].size();\n\n        vector<vector<int>> tops = board;\n        for( int i = 1; i < m; ++i ) {\n            for( int j = 0; j < n; ++j ) {\n                tops[ i ][ j ] = max( tops[ i ][ j ], tops[ i - 1 ][ j ] );\n            }\n        }\n\n        vector<vector<int>> tops2 = board;\n        for( int i = m - 2; i >= 2; --i ) {\n            for( int j = 0; j < n; ++j ) {\n                tops2[ i ][ j ] = max( tops2[ i ][ j ], tops2[ i + 1 ][ j ] );\n            }\n        }\n\n        vector<vector<vector<int>>> bottoms = vector<vector<vector<int>>>( m, vector<vector<int>>( n, vector<int>( n, INT_MIN ) ) );\n        for( int i = 2; i < m; ++i ) {\n            multiset<int> vals;\n            for( int val : tops2[ i ] ) {\n                vals.insert( val );\n            }\n            for( int j = 0; j < n; ++j ) {\n                vals.erase( vals.find( tops2[ i ][ j ] ) );\n                for( int k = 0; k < n; ++k ) {\n                    if( k == j ) {\n                        continue;\n                    }\n                    vals.erase( vals.find( tops2[ i ][ k ] ) );\n                    bottoms[ i ][ j ][ k ] = *vals.rbegin();\n                    vals.insert( tops2[ i ][ k ] );\n                }\n                vals.insert( tops2[ i ][ j ] );\n            }\n        }\n\n        long long ans = INT_MIN * 3LL;\n        for( int i = 1; i < m - 1; ++i ) {\n            for( int j = 0; j < n; ++j ) {\n                long long mid = board[ i ][ j ];\n                for( int k = 0; k < n; ++k ) {\n                    if( k == j ) {\n                        continue;\n                    }\n                    long long top = tops[ i - 1 ][ k ];\n                    long long bottom = bottoms[ i + 1 ][ j ][ k ];\n                    //cout<<i<<\",\"<<j<<\",\"<<k<<\",\"<<mid<<\",\"<<top<<\",\"<<bottom<<\"\\n\";\n                    ans = max( ans, mid + top + bottom );\n                }\n            }\n        }\n\n        return ans;\n    }\nprivate:\n    int m, n;\n};",
    "submit_ts": "1723909682",
    "subm_id": "1359201773"
}