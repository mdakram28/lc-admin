{
    "username": "atm314",
    "submission": "\nusing i8 = int8_t;\nusing u8 = uint8_t;\nusing i16 = int16_t;\nusing u16 = uint16_t;\nusing i32 = int32_t;\nusing u32 = uint32_t;\nusing i64 = int64_t;\nusing u64 = uint64_t;\n\nusing f32 = float;\nusing f64 = double;\n\n#define all(x) (x).begin(), (x).end()\n#define ll long long int\n#define VI vector<ll>\n#define VVI vector<VI>\n\n#define ISD true\n#define debug(x) \\\n    if (ISD)     \\\n    cout << #x << \": \" << x << endl\n#define DEBUG(x) cout << #x << \": \" << x << endl\n\ntemplate <typename C>\ni64 SIZE(const C &c)\n{\n    return static_cast<i64>(c.size());\n}\n\ntemplate <typename T, size_t N>\ni64 SIZE(const T (&)[N]) { return static_cast<i64>(N); }\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmax(T &xmax, const U &x, Comp comp = {})\n{\n    if (comp(xmax, x))\n    {\n        xmax = x;\n        return true;\n    }\n    return false;\n}\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmin(T &xmin, const U &x, Comp comp = {})\n{\n    if (comp(x, xmin))\n    {\n        xmin = x;\n        return true;\n    }\n    return false;\n}\n\n#define CPP_STR(x) CPP_STR_I(x)\n#define CPP_CAT(x, y) CPP_CAT_I(x, y)\n#define CPP_STR_I(args...) #args\n#define CPP_CAT_I(x, y) x##y\n\n#define ASSERT(expr...) assert((expr))\n\n// }}}\n\nconstexpr i64 INF = 1'010'000'000'000'000'017LL;\n\nconstexpr i64 MOD = 998244353LL;\n\nconstexpr f64 EPS = 1e-12;\n\nconstexpr f64 PI = 3.14159265358979323846;\n\n#define M5 100007\n#define M9 1000000000\n\n#define F first\n#define S second\n\n// util {{{\n#define FOR(i, start, end) for (i64 i = (start), CPP_CAT(i, xxxx_end) = (end); i < CPP_CAT(i, xxxx_end); ++i)\n#define REP(i, n) FOR(i, 0, n)\nbool isKaibun(string st)\n{\n    bool ans = true;\n    int n = st.length();\n    REP(i, n / 2)\n    {\n        if (st[i] != st[n - i - 1])\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\nclass Solution\n{\npublic:\n    string largestPalindrome(int n, int k)\n    {\n        if (n <= 6)\n        {\n            ll b = 1;\n            REP(i, n - 1)\n            {\n                b *= 10;\n            }\n            ll ans = 0;\n            FOR(i, b, b * 10)\n            {\n                if (i % k != 0)\n                {\n                    continue;\n                }\n                string s = to_string(i);\n                if (isKaibun(s))\n                {\n                    chmax(ans, i);\n                }\n            }\n            return to_string(ans);\n        }\n\n        string ans = \"\";\n        if (k == 6)\n        {\n            REP(i, n)\n            {\n                ans.push_back('9');\n            }\n            if (n % 2 == 1)\n            {\n                ans[0] = '8';\n                ans[n - 1] = '8';\n                ans[n / 2] = '8';\n            }\n            else\n            {\n                ans[0] = '8';\n                ans[n - 1] = '8';\n                ans[n / 2] = '7';\n                ans[n / 2 + 1] = '9';\n                ans[n / 2 - 1] = '7';\n                ans[n / 2 - 2] = '9';\n            }\n            return ans;\n        }\n        if (k == 7)\n        {\n            ll b = 1;\n            ll sum = 0;\n            ll t = 0;\n            REP(i, n)\n            {\n                sum += (b * 9);\n                sum %= 7;\n                ans.push_back('9');\n                if (n % 2 == 0 && (i == n / 2 || i == n / 2 - 1))\n                {\n                    t += b;\n                    t %= 7;\n                }\n                if (n % 2 == 1 && i == n / 2)\n                {\n                    t += b;\n                }\n                b *= 10;\n                b %= 7;\n            }\n            // cout << sum << endl;\n            ll s = 9;\n            for (int k = 9; k >= 0; k--)\n            {\n                s = k;\n                if (sum == 0)\n                {\n                    break;\n                }\n                sum = (sum - t + 7) % 7;\n            }\n            if (n % 2 == 0)\n            {\n                ans[n / 2 - 1] = (char)'0' + s;\n                ans[n / 2] = (char)'0' + s;\n            }\n            else\n            {\n                ans[n / 2] = (char)'0' + s;\n            }\n            return ans;\n        }\n\n        map<int, string> pre;\n        pre[1] = \"9\";\n        pre[3] = \"9\";\n        pre[9] = \"9\";\n        pre[2] = \"8\";\n        pre[4] = \"88\";\n        pre[5] = \"5\";\n        pre[8] = \"888\";\n        string p = pre[k];\n\n        ll c = n - p.size() * 2;\n        string b = \"\";\n        REP(i, c)\n        {\n            b.push_back('9');\n        }\n        return p + b + p;\n    }\n};\n",
    "submit_ts": "1723952703",
    "subm_id": "1359802593"
}