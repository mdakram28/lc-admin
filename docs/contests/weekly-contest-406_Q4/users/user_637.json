{
    "username": "batch89",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> ans;\n        int len1= horizontalCut.size();\n        for (int i = 0; i <len1; ++i) {\n            ans.push_back({horizontalCut[i], 'h'});\n        }\n        int len2=verticalCut.size();\n        for (int i = 0; i <len2; ++i) {\n            ans.push_back({verticalCut[i], 'v'});\n        }\n\n        sort(ans.rbegin(), ans.rend());\n\n        long long ans2 = 0;\n        int pi1 = 1, pi2 = 1;\n\n        for (const auto& it : ans) {\n            if (it.second == 'h') {\n                ans2+= static_cast<long long>(it.first) *pi2;\n                ++pi1;\n            } else {\n                ans2 += static_cast<long long>(it.first) * pi1;\n                ++pi2;\n            }\n        }\n\n        return ans2;\n    }\n};\n",
    "submit_ts": "1720925713",
    "subm_id": "1320263749"
}