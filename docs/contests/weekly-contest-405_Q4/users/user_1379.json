{
    "username": "Divyanshu_Vaibhav",
    "submission": "type TrieNode struct {\n\tchildren map[rune]*TrieNode\n\tendWords []WordInfo\n}\n\ntype WordInfo struct {\n\tindex int\n\tcost  int\n}\n\ntype Trie struct {\n\troot *TrieNode\n}\n\nfunc NewTrie() *Trie {\n\treturn &Trie{root: &TrieNode{children: make(map[rune]*TrieNode)}}\n}\n\nfunc (t *Trie) addWord(word string, index int, cost int) {\n\tnode := t.root\n\tfor _, c := range word {\n\t\tif _, exists := node.children[c]; !exists {\n\t\t\tnode.children[c] = &TrieNode{children: make(map[rune]*TrieNode)}\n\t\t}\n\t\tnode = node.children[c]\n\t}\n\tnode.endWords = append(node.endWords, WordInfo{index, cost})\n}\n\nfunc minimumCost(target string, words []string, costs []int) int {\n\ttargetLen := len(target)\n\tdp := make([]int, targetLen+1)\n\tfor i := range dp {\n\t\tdp[i] = math.MaxInt64\n\t}\n\tdp[0] = 0\n\n\ttrie := NewTrie()\n\tfor i, word := range words {\n\t\ttrie.addWord(word, i, costs[i])\n\t}\n\n\tfor i := 0; i < targetLen; i++ {\n\t\tif dp[i] == math.MaxInt64 {\n\t\t\tcontinue\n\t\t}\n\n\t\tnode := trie.root\n\t\tfor j := i; j < targetLen; j++ {\n\t\t\tif _, exists := node.children[rune(target[j])]; !exists {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tnode = node.children[rune(target[j])]\n\t\t\tfor _, p := range node.endWords {\n\t\t\t\twordLength := len(words[p.index])\n\t\t\t\tif i+wordLength <= targetLen {\n\t\t\t\t\tdp[i+wordLength] = min(dp[i+wordLength], dp[i]+p.cost)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif dp[targetLen] == math.MaxInt64 {\n\t\treturn -1\n\t}\n\treturn dp[targetLen]\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}",
    "submit_ts": "1720323459",
    "subm_id": "1312376103"
}