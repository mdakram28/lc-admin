{
    "username": "Solar1ne",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int arraySize = nums.size();\n        long long subarrayCount = 0;\n        unordered_map<long long, long long> previousResultsMap;\n\n        for (int index = 0; index < arraySize; ++index) {\n            unordered_map<long long, long long> currentResultsMap;\n            if (nums[index] == k) {\n                subarrayCount++;\n            }\n            currentResultsMap[nums[index]] = 1;\n            for (auto& [value, frequency] : previousResultsMap) {\n                long long newBitwiseAndResult = value & nums[index];\n                if (newBitwiseAndResult == k) {\n                    subarrayCount += frequency;\n                }\n                currentResultsMap[newBitwiseAndResult] += frequency;\n            }\n            previousResultsMap = currentResultsMap;\n        }\n\n        return subarrayCount;\n    }\n};",
    "submit_ts": "1720280038",
    "subm_id": "1311774631"
}