{
    "username": "Max.D.",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        # for i in range(pow(10,n)-1,-1,-1):\n        #     if i%k==0 and str(i)==(str(i)[::-1]):\n        #         return i\n\n        if k in [1,3,9]:\n            return '9'*n\n        elif k==2:\n            if n>=2:\n                return '8'+(n-2)*'9'+'8'\n            else:\n                return '8'*n\n        elif k==4:\n            if n>=4:\n                return '88'+(n-4)*'9'+'88'\n            else:\n                return '8'*n\n        elif k==5:\n            if n>=2:\n                return '5'+(n-2)*'9'+'5'\n            else:\n                return '5'*n\n        elif k==6:\n            if n<=2:\n                return '6'*n\n            elif n%2==1:\n                return '8'+'9'*((n-3)//2)+'8'+'9'*((n-3)//2)+'8'\n            else:\n                return '8'+'9'*(n//2-2)+'77'+'9'*(n//2-2)+'8'\n        elif k==8:\n            if n<=6:\n                return '8'*n\n            else:\n                return '888'+'9'*(n-6)+'888'\n        else:\n            assert k==7\n            p=[7,7,9,4,4,9]\n            q=[7,5,7,4,6,4]\n            if n%2==0:\n                v=p[(n//2-1)%6]\n                return '9'*((n-2)//2)+str(v)*2+'9'*((n-2)//2)\n            else:\n                v=q[((n-1)//2)%6]\n                return '9'*((n-1)//2)+str(v)+'9'*((n-1)//2)\n\n",
    "submit_ts": "1723951062",
    "subm_id": "556403000"
}