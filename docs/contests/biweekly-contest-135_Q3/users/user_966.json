{
    "username": "jacobj2",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        diffs = [0]*(10**5+7)\n        lp = 0\n        rp = len(nums) - 1\n        mut = len(diffs)-1\n        ct = defaultdict(int)\n        while lp<=rp:\n            diff = abs(nums[lp]-nums[rp])\n            ct[diff]+=1\n            op1 = max(nums[lp],nums[rp])\n            if nums[lp]<k:\n                op1 = max(op1,abs(k-nums[rp]))\n            if nums[rp]<k:\n                op1 = max(op1,abs(k-nums[lp]))\n            op2 = k\n            mut = min(mut,max(op1,op2))\n            if diff>op1:\n                diffs[0]+=1\n                diffs[op1+1]-=1\n            elif diff==op1:\n                diffs[0]+=1\n                diffs[op1]-=1\n            else:\n                diffs[0]+=1\n                diffs[diff]-=1\n                diffs[diff+1]+=1\n                diffs[op1+1]-=1\n            if op2>op1:\n                diffs[op1+1]+=2\n                diffs[op2+1]-=2\n                if diff>op1 and diff<=op2:\n                    diffs[diff]-=2\n                    if diff+1<op2:\n                        diffs[diff+1]+=2\n                        diffs[op2+1]-=2\n            lp+=1\n            rp-=1\n        if max(ct.values())==len(nums)//2:\n            return 0\n        res = inf\n        for i in range(mut+1):\n            if i>0:\n                diffs[i]+=diffs[i-1]\n            res = min(res,diffs[i])\n        return res\n            ",
    "submit_ts": "1721489296",
    "subm_id": "1327449027"
}