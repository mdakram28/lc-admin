{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    long long dat[200055][2][2];\n    const int MOD = 1e9 + 7;\n    void merge(int id, int l, int r) {\n        memset(dat[id], 0, sizeof(dat[id]));\n        \n        for (int b = 0; b < 2; b++) {\n            for (int c = 0; c < 2; c++) {\n                if (b == 1 && c == 1) continue;\n                \n                for (int a = 0; a < 2; a++) {\n                    for (int d = 0;d < 2; d++) {\n                        dat[id][a][d] = max(dat[id][a][d], dat[l][a][b] + dat[r][c][d]);\n                    }\n                }\n            }\n        }\n    }\n    \n    void build(int id, int x, int y, vector<int>& nums) {\n        if (x == y) {\n            memset(dat[id], 0, sizeof(dat[id]));\n            dat[id][1][1] = nums[x];\n            return;\n        }\n        \n        int mid = (x + y) >> 1;\n        \n        build(id + id, x, mid, nums);\n        build(id + id + 1, mid + 1, y, nums);\n        \n        merge(id, id + id, id + id + 1);\n    }\n    void update(int id, int x, int y, int pos, long long val) {\n        if (x == y) {\n            memset(dat[id], 0, sizeof(dat[id]));\n            dat[id][1][1] = val;\n            return;\n        }\n        \n        int mid = (x + y) >> 1;\n        \n        if (pos <= mid) update(id + id, x, mid, pos, val);\n        else update(id + id + 1, mid + 1, y, pos, val);\n        \n        merge(id, id + id, id + id + 1);\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int q = (int)queries.size();\n        int n = (int)nums.size();\n        \n        build(1, 0, n - 1, nums);\n        \n        int res = 0;\n        \n        for (const auto& vec : queries) {\n            int pos = vec[0];\n            int x = vec[1];\n            \n            update(1, 0, n - 1, pos, x);\n            \n            long long val = 0;\n            \n            for (int i = 0; i < 2; i++) for (int j = 0; j < 2; j++) {\n                val = max(val, dat[1][i][j]);\n            }\n            \n            res = (1ll * res + val) % MOD;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1716691621",
    "subm_id": "1268027390"
}