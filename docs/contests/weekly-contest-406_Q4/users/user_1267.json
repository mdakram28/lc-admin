{
    "username": "harsh32200216",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        long long r = 1, c = 1, s = 0, i = 0, j = 0;\n        while(i < m-1 && j < n-1){\n            if(horizontalCut[i] < verticalCut[j]){\n                s += (long long)verticalCut[j++] * r;\n                c++;\n            }\n            else{\n                s += (long long)horizontalCut[i++] * c;\n                r++;\n            }\n        }\n        while(i < m-1){\n            s += (long long)horizontalCut[i++] * c;\n            r++;\n        }\n        while(j < n-1){\n            s += (long long)verticalCut[j++]*r;\n            c++;\n        }\n        return s;\n    }\n};",
    "submit_ts": "1720926155",
    "subm_id": "1320277597"
}