{
    "username": "_shryder_",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& v, int k) {\n        int n = v.size(),ans=0; \n        for(int i=0;i<k;i++){\n            v.push_back(v[i]);\n        }\n        n=v.size();\n        for(auto x:v){\n            cout<<x<<\" \";\n        }\n        vector<int>dp(n,0),v1(n+1,-1); \n        for (int i = 1; i < n; i++) { \n            if(v[i]-v[i-1]==1){\n                v1[i] += 1;\n                dp[i] += dp[i - 1] + abs(v[i]-v[i-1]); \n            }\n            else{\n                dp[i] += dp[i - 1] + abs(v[i]-v[i-1]); \n            }\n        } \n        for (int i = 0; i < n; i++) { \n            if(i<k){\n                v1[i]++;\n            }\n            else{\n                if (dp[i] - dp[i - k + 1] == k - 1 ) { \n                    ans++; \n                } \n                else{\n                    v1[i]--;\n                }\n            }\n        } \n        return ans; \n    }\n};",
    "submit_ts": "1720280282",
    "subm_id": "1311783584"
}