{
    "username": "Tannu Singh",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m= board[0].length;\n        pair[] p = new pair[n*m];\n        int a=0;\n        for(int i =0 ;i < n;i++){\n            for(int j =0 ;j < m;j++){\n                p[a] = new pair(i,j,board[i][j]);\n                a++;\n            }\n        }\n        Arrays.sort(p, (l,r)-> { return r.z-l.z;} );\n        long ans = Long.MIN_VALUE;\n        for(int i = 0;i<Math.min(m+n+100,p.length);i++){\n            for(int j =i+1 ;j<Math.min(i+m+n+100,p.length);j++){\n                for(int k = 1+j;k<Math.min(m+n+100+j,p.length);k++){\n                    if( p[i].x== p[j].x || p[i].x ==p[k].x || p[j].x==p[k].x){\n                        continue;\n                    }\n                    if( p[i].y== p[j].y || p[i].y ==p[k].y || p[j].y==p[k].y){\n                        continue;\n                    }\n                    ans = Math.max( ans,(long)p[i].z +(long) p[j].z +(long) p[k].z  );\n                }\n            }\n        }\n        return ans;\n    }\n}\nclass pair{\n    int x;\n    int y;\n    int z;\n    pair(int a,int b,int c){\n        x=a;\n        y=b;\n        z=c;\n    }\n}",
    "submit_ts": "1723908012",
    "subm_id": "1359134366"
}