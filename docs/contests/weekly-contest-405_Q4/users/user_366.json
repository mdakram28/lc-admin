{
    "username": "VeXe1199",
    "submission": "class TrieNode {\npublic:\n    vector<TrieNode*> children;\n    int cost;\n\n    TrieNode() : children(26, nullptr), cost(INT_MAX) {}\n};\n\nclass Solution {\nprivate:\n    void insert(TrieNode* root, const string& word, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            if (!node->children[c - 'a']) {\n                node->children[c - 'a'] = new TrieNode();\n            }\n            node = node->children[c - 'a'];\n        }\n        node->cost = min(node->cost, cost);\n    }\n    \n    void deleteTrie(TrieNode* node) {\n        for (TrieNode* child : node->children) {\n            if (child) {\n                deleteTrie(child);\n            }\n        }\n        delete node;\n    }\n\npublic:\n    typedef long long ll;\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            insert(root, words[i], costs[i]);\n        }\n\n        int n = target.length();\n        vector<ll> dp(n + 1, LLONG_MAX);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; ++i) {\n            \n            if (dp[i] == LLONG_MAX) continue;\n            \n            TrieNode* node = root;\n            for (int j = i; j < n; ++j) {\n                if (!node->children[target[j] - 'a']) break;\n                node = node->children[target[j] - 'a'];\n                if (node->cost != INT_MAX) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n                }\n            }\n        }\n\n        deleteTrie(root);\n        \n        return dp[n] == LLONG_MAX ? -1 : dp[n];\n    }\n};\n",
    "submit_ts": "1720322245",
    "subm_id": "1312344655"
}