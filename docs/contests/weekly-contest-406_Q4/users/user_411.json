{
    "username": "Akanksha35",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> h,v;\n         for(auto it:horizontalCut)\n         {\n            h.push(it);\n         }\n         for(auto it:verticalCut)\n         {\n           v.push(it);\n         }\n\n    int hpiece = 1;\n    int vpiece = 1;\n    long long ans = 0;\n\n    while (!h.empty() || !v.empty()) {\n       \n        if (h.empty()) {\n           ans += v.top() * hpiece;\n            v.pop();\n            vpiece++;\n        }\n       \n        else if (v.empty()) {\n           ans += h.top() *vpiece;\n            h.pop();\n            hpiece++;\n        }\n       else if (h.top() > v.top()) {\n            ans += h.top() * vpiece;\n            h.pop();\n            hpiece++;\n        }\n        else {\n            ans += v.top() *hpiece;\n            v.pop();\n            vpiece++;\n        }\n    }\n\n    return ans;\n    \n    }\n};",
    "submit_ts": "1720925496",
    "subm_id": "1320256679"
}