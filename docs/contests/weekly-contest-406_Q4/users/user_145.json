{
    "username": "rtdrtd67",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long horizontals = 0, verticals = 0, res = 0;\n        priority_queue<pair<long long, long long>> pq;\n        for (int i = 0; i < m-1; i++) {\n            pq.push({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < n-1; i++) {\n            pq.push({verticalCut[i], 1});\n        }\n        while (!pq.empty()) {\n            pair<long long, long long> cut = pq.top();\n            pq.pop();\n            long long cost = cut.first, horiz = cut.second;\n            if (horiz) {\n                horizontals++;\n                res += (verticals+1)*cost;\n            }\n            else {\n                verticals++;\n                res += (horizontals+1)*cost;\n            }  \n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925128",
    "subm_id": "1320243865"
}