{
    "username": "sunil1906",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int i, j, k, dist = n - 1, from, to, removed_small, is_ignore;\n        vector<int> ans;\n        set<pair<int, int>> s;\n        pair<int, int> p;\n        \n        for(i=0;i<queries.size();i++){\n            from = queries[i][0]; to = queries[i][1];\n            removed_small = 0;\n            is_ignore = 0;\n            // cout<<\"\\nwhen adding \"<<from<<\", \"<<to<<\"\\n\";\n            // if this in over the smaller, remove smaller ones\n            auto it = s.lower_bound({from, -1});\n            while(it != s.end() and (*it).first < to and (*it).second <= to){\n                p = *it;\n                s.erase(it);\n                dist += (p.second - p.first - 1);\n                // cout<<\"erased \"<<p.first<<\",\"<<p.second<<\" with dist \"<<(p.second - p.first - 1)<<\"\\n\";\n                it = s.lower_bound({from, -1});\n                removed_small = 1;\n            }\n            \n            // if this is under the already path, ignore;\n            it = s.upper_bound({from, 1e9});\n            if(it != s.begin()){\n                it--;\n                p = *it;\n                if(p.second >= to){\n                    is_ignore = 1;\n                    // cout<<\"Ignoring this:( \\n\";\n                }\n            }\n            \n            if(is_ignore == 0){\n                dist -= (to - from - 1);\n                s.insert({from, to});\n                // cout<<\"Adding this :) \\n\";\n            }\n            \n            ans.push_back(dist);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722741868",
    "subm_id": "1343755416"
}