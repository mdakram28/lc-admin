{
    "username": "ds_reptile",
    "submission": "typedef long long ll;\n\nclass Solution {\nprivate:\n    ll f(int index, int l1, int l2, vector<vector<int>> &b, vector<vector<vector<ll>>> &dp){\n        if(index == 0){\n            if(l2 != b.size()){\n                ll maxm = -1e15;\n                for(int i = 0; i < b.size(); ++i){\n                    if(i != l1 && i != l2){\n                        maxm = max(maxm, 0LL + b[i][index]);\n                    }\n                }\n                return maxm;\n            }\n            else{\n                return -1e15;\n            }\n        }\n        \n        if(dp[index][l1][l2] != -1e15) return dp[index][l1][l2];\n        \n        ll maxm = -1e15;\n        \n        for(int i = 0; i < b.size(); ++i){\n            if(l1 == b.size()){\n                maxm = max(maxm, b[i][index] + 0LL + f(index-1, i, l2, b, dp));\n            }\n            else if(l2 == b.size()){\n                if(i != l1) maxm = max(maxm, b[i][index] + 0LL + f(index-1, l1, i, b, dp));\n            }\n            else{\n                if(i != l1 && i != l2) maxm = max(maxm, b[i][index] + 0LL);\n            }\n        }\n        \n\n        maxm = max(maxm, f(index-1, l1, l2, b, dp) + 0LL);\n        \n        return dp[index][l1][l2] = maxm;\n\n    }\n    \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        // a little game of bits, similar to the question that I attempted yesterday on atcoder\n        int n = board.size(), m = board[0].size();\n        \n        // l1 l2\n        vector<vector<vector<ll>>> dp(m, vector<vector<ll>>(n+1, vector<ll>(n+1, -1e15)));\n        return f(m-1, n, n, board, dp);\n    }\n};",
    "submit_ts": "1723907180",
    "subm_id": "1359094343"
}