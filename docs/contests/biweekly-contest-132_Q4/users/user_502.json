{
    "username": "leolee2020",
    "submission": "class Solution {\npublic:\nvector<vector<int>> b;\n\nvoid modify(int k, int idx, int val, int n) {\n    for (int i = idx + 1; i <= n; i += i & -i)\n        b[k][i] = max(b[k][i], val);\n}\n\nint getMax(int k, int idx, int n) {\n    int val = 0;\n    for (int i = idx + 1; i >= 1; i -= i & -i)\n        val = max(val, b[k][i]);\n    return val;\n}\n\nint maximumLength(vector<int> &nums, int k) {\n    int n = nums.size();\n    vector<int> nextIdx(n, n);\n    unordered_map<int, int> m;\n    for (int i = n - 1; i >= 0; i--) {\n        if (m.count(nums[i]))\n            nextIdx[i] = m[nums[i]];\n        m[nums[i]] = i;\n    }\n    b.assign(k + 1, vector<int>(n + 1));\n\n    vector<vector<int>> dp(n + 1, vector<int>(k + 1));\n    for (int i = 0; i <= k; i++) {\n        dp[n - 1][i] = 1;\n        modify(i, n - 1, 1, n);\n    }\n    for (int i = n - 2; i >= 0; i--) {\n        for (int j = k; j >= 0; j--) {\n            dp[i][j] = dp[nextIdx[i]][j] + 1;\n            if (j)\n                dp[i][j] = max(dp[i][j], getMax(j - 1, nextIdx[i] - 1, n) + 1);\n            modify(j, i, dp[i][j], n);\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j <= k; j++)\n            ans = max(ans, dp[i][j]);\n    }\n\n    return ans;\n}\n};",
    "submit_ts": 1717861819.0
}