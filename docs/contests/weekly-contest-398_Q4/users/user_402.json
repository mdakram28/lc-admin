{
    "username": "shivambhadani",
    "submission": "class Solution {\npublic:\n    map<vector<int>, int> cache;\n    int dp(int i, int jump, int op1, int k) {\n        if(cache.count({i, jump, op1})) {\n            return cache[{i, jump, op1}];\n        }\n        int ans = (i == k);\n        if(op1 == 0) {\n            ans += dp(i - 1, jump, 1, k);\n        }\n        if(i + (1 << jump) <= k + 1) {\n            ans += dp(i + (1 << jump), jump + 1, 0, k);\n        }\n        return cache[{i, jump, op1}] = ans;\n    }\n    int waysToReachStair(int k) {\n        return dp(1, 0, 0, k);\n    }\n};",
    "submit_ts": "1716088708",
    "subm_id": "1261821774"
}