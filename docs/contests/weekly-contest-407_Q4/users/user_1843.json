{
    "username": "anshul12102004",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        dp=0\n        op=0\n        n=len(nums)\n\n        chk=[]\n        f1=0\n        f_1=0\n        for j in range(n):\n            chk.append(target[j]-nums[j])\n            # if(target[j]-nums[j]>0):\n            #     f1=1\n            # elif(target[j]-nums[j]<0):\n            #     f_1=1\n            # else:\n            #     f1=1\n            #     f_1=1\n\n        # print(chk)\n        # m=float('inf')\n        for j in range(n):\n            if(j==0):\n                op=max(op,abs(chk[j]))        \n            elif(j!=0 and chk[j]>0 and chk[j-1]>0):\n                if(chk[j-1]<=chk[j]):\n                    # if((f1==0 or f1==1)):\n                        # f1=1\n                    op=max(op,chk[j])\n                elif(chk[j-1]>chk[j]):\n                    dp+=(chk[j-1]-chk[j])\n                    op=chk[j]\n            elif(j!=0 and chk[j]<0 and chk[j-1]<0):\n                if(abs(chk[j-1])<=abs(chk[j])):\n                    # if((f1==0 or f1==1)):\n                        # f1=1\n                    op=max(op,abs(chk[j]))\n                elif(abs(chk[j-1])>abs(chk[j])):\n                    dp+=(abs(chk[j-1])-abs(chk[j]))\n                    op=abs(chk[j])\n            else:\n                dp+=op\n                op=abs(chk[j])\n            # print(j,dp,op)\n\n\n        # if(f1 and f_1):\n        dp+=op\n\n        return dp\n            ",
    "submit_ts": "1721533378",
    "subm_id": "1328007645"
}