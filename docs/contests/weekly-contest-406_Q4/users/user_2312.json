{
    "username": "arjunpullari",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long hp = 1;\n        long vp = 1;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int i = horizontalCut.length-1;\n        int j = verticalCut.length-1;\n        long ans = 0;\n        while(i >= 0 || j >= 0){\n            if(i >= 0 && j >= 0){\n                if(horizontalCut[i] >= verticalCut[j]){\n                    ans += (hp * (long)(horizontalCut[i]));\n                    vp++;\n                    i--;\n                }else{\n                    ans += (vp * (long)(verticalCut[j]));\n                    hp++;\n                    j--;\n                }\n            }else if(i >= 0){\n                ans += (hp * (long)(horizontalCut[i]));\n                i--;\n            }else{\n                ans += (vp * (long)(verticalCut[j]));\n                j--;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926454",
    "subm_id": "1320286792"
}