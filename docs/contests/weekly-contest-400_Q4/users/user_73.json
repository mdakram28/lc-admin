{
    "username": "pasricha_dhruv",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        vector<vector<int>> pre(n, vector<int>(30));\n        \n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = 0; j < 30; ++j)\n            {\n                pre[i][j] = (nums[i] & (1 << j)) != 0;   \n            }\n        }\n        \n        for(int j = 0; j < 30; ++j)\n        {\n            for(int i = 1; i < n; ++i)\n            {\n                pre[i][j] += pre[i - 1][j]; \n            }\n        }\n        \n        auto query = [&](int l, int r)\n        {\n            int ans = 0;\n            for(int i = 0; i < 30; ++i)\n            {\n                int sum = pre[r][i]; if(l) sum -= pre[l - 1][i];\n                if(sum == r - l + 1) ans += 1 << i;\n            }\n            return ans;\n        };\n        \n        int ans = INT_MAX;\n        for(int i = 0; i < n; ++i)\n        {\n            int l = -1;\n            int r = i;\n            \n            while(r - l > 1)\n            {\n                int m = (l + r) / 2;\n                if(query(m, i) >= k)\n                {\n                    r = m;\n                }\n                else\n                {\n                    l = m;\n                }\n            }\n            \n            ans = min(ans, abs(query(r, i) - k));\n            if(l >= 0) {\n                ans = min(ans, abs(query(l, i) - k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297333.0
}