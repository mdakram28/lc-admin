{
    "username": "p_r_d_p_41",
    "submission": "class Solution {\npublic:\n    vector<int> dp, dp1;\n    int n;\n\n    int f(int nd) {\n        return (nd & 1) ? 1 : 2;\n    }\n\n    void rec(int nd, int par, vector<vector<int>>&gp) {\n        dp[nd] = 0;\n        for (auto c : gp[nd]) {\n            if (c == par) continue;\n            int cnt = f(c);\n            rec(c, nd, gp);\n            dp[nd] = max({dp[nd], cnt + dp[c]});\n        }\n    }\n\n    void rec2(int nd, int par, vector<vector<int>>&gp) {\n        int max1 = -1, max2 = -1;\n        for (auto c : gp[nd]) {\n            if (c == par) continue;\n            int cnt = f(c) + dp[c];\n            if (cnt > max1) {\n                max2 = max1;\n                max1 = cnt;\n            } else if (cnt > max2) {\n                max2 = cnt;\n            }\n        }\n\n        for (auto c : gp[nd]) {\n            if (c == par && par != -1) continue;\n            int mx1 = f(nd);\n            int mx2 = f(c);\n            int useMax = (mx2 + dp[c] == max1) ? max2 : max1;\n            dp1[c] = dp1[nd] + mx1;\n            dp1[c] = max({dp1[c], mx1 + useMax});\n            rec2(c, nd, gp);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        vector<vector<int>>gp;\n        n = edges.size();\n        gp.resize(n+1);\n        for (int i=0;i<n;i++) {\n            gp[edges[i][1]].push_back(edges[i][0]);\n            gp[edges[i][0]].push_back(edges[i][1]);\n        }\n        dp.resize(n+1, 0);\n        dp1.resize(n+1, 0);\n        rec(0, -1, gp);\n        rec2(0, -1, gp);\n        vector<int> res(n+1, 0);\n        for (int i = 0; i < n+1; i++) {\n            res[i] = max({dp[i], dp1[i]});\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722700411",
    "subm_id": "1343241103"
}