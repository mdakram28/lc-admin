{
    "username": "coderman2004",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n           int n = nums.length;\n        ArrayList<Integer> diff = new ArrayList<>();\n        for (int i = 0; i < n; ++i) {\n            diff.add(target[i] - nums[i]);\n        }\n        \n        long ops = 0;\n        long currseg = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diff.get(i - 1) > 0 && diff.get(i) > 0) || (diff.get(i - 1) < 0 && diff.get(i) < 0)) {\n                long add = Math.abs(diff.get(i)) - Math.abs(currseg);\n                if (add > 0)\n                    ops += add;\n            } else \n                ops += Math.abs(diff.get(i));\n\n  currseg = diff.get(i);\n            \n        }\n        \n        return ops;\n    }\n}",
    "submit_ts": "1721533232",
    "subm_id": "1328004356"
}