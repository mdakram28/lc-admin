{
    "username": "Vaibhawjyoti17",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n         int length = nums.size();\n        deque<int> difference;\n\n        for (int i = 0; i < length; i++) {\n            difference.push_back(target[i] - nums[i]);\n        }\n\n        long long totalOps = 0;\n        long long currentDiff = 0;\n\n        for (int i = 0; i < length; i++) {\n            if (i == 0 || (difference[i - 1] > 0 && difference[i] > 0) || (difference[i - 1] < 0 && difference[i] < 0)) {\n                int additionalOps = abs(difference[i]) - abs(currentDiff);\n                if (additionalOps > 0) {\n                    totalOps += additionalOps;\n                }\n                currentDiff = difference[i];\n            } else {\n                totalOps += abs(difference[i]);\n                currentDiff = difference[i];\n            }\n        }\n\n        return totalOps;\n    }\n};",
    "submit_ts": "1721534340",
    "subm_id": "1328028788"
}