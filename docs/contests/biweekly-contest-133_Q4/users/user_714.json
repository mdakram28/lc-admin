{
    "username": "bhanunegi420",
    "submission": "class Solution {\n    int mod = 1e9 + 7;;\n    int maxInv = 400;\n\n    public:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        ios_base::sync_with_stdio(0);\n        cin.tie(0); cout.tie(0);\n        unordered_map<int,int> mp;\n        for (auto it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<long long>> cnt(n+1,vector<long long>(maxInv+1,0));\n        cnt[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int inv = 0; inv <= maxInv; inv++) {\n                for (int j = 0; j < i; j++) {\n                    int prevInv = inv - j;\n                    if (prevInv >= 0) {\n                        cnt[i][inv] = (cnt[i][inv] + cnt[i - 1][prevInv]) % mod;\n                    }\n                }\n            }\n\n            if (mp.count(i) > 0) {\n                int temp = mp[i];\n                for (int k = 0; k <= maxInv; k++) {\n                    if (k != temp) {\n                        cnt[i][k] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (auto it : cnt[n]) {\n            ans = (ans + it) % mod;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719071055.0
}