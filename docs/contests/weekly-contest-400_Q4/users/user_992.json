{
    "username": "h_bugw7",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n\n#define ALL(x) (x).begin(), (x).end()\n#define FOR(i, a, b) for (int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define SORT(v) sort((v).begin(),(v).end())\n#define RSORT(v) sort((v).rbegin(),(v).rend())\n#define UN(v) SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> ppi;\ntypedef pair<int, pii> pip;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<pair<int, int>> vpii;\n\nint dx[] = {0, 0, -1, 1, -1, -1, 1, 1};\nint dy[] = {-1, 1, 0, 0, -1, 1, -1, 1};\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\n\nstatic auto __ = []\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    return 0;\n}();\n\nint ID(int x) { return x << 1; }\nint ID(int l, int r) { return (l + r) | (l != r); }\n\nclass SegmentTree {\n    vector<int> data;\n    size_t sz;\n\n    void build(vector<int> &a, int l, int r) {\n        if(l == r) {\n            data[ID(l)] = a[l];\n            return;\n        }\n        int m = (l + r) >> 1;\n        build(a, l, m);\n        build(a, m+1, r);\n        data[ID(l, r)] = data[ID(l, m)] & data[ID(m+1, r)];\n    }\n    int query(int l, int r, int L, int R) {\n        if(L == l && r == R) return data[ID(l, r)];\n        int m = (l + r) >> 1;\n        if(R <= m) return query(l, m, L, R);\n        if(L > m) return query(m+1, r, L, R);\n        return query(l, m, L, m) & query(m+1, r, m+1, R);\n    }\npublic:\n    SegmentTree(vector<int> &a): data((a.size() << 1) + 1), sz(a.size()) {\n        build(a, 0, a.size() - 1);\n    }\n    int query(int l, int r) {\n        return query(0, sz-1, l, r);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        SegmentTree st(nums);\n        int res = INT_MAX;\n        const int len = nums.size();\n        REP(i, len) {\n            int l = i, r = len - 1, m;\n            while(l <= r) {\n                m = (l + r) >> 1;\n                int val = st.query(i, m);\n                res = min(res, abs(k - val));\n                if(val < k) r = m - 1;\n                else l = m + 1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717299930.0
}