{
    "username": "rush-9e",
    "submission": "typedef pair<int, int> PII;\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        vector<vector<PII>> vec(4, vector<PII>(n));\n        for (int i = 0; i < n; ++i) {\n            vec[0][i] = make_pair(p[i][0] + p[i][1], i);\n            vec[1][i] = make_pair(-p[i][0] + p[i][1], i);\n            vec[2][i] = make_pair(p[i][0] - p[i][1], i);\n            vec[3][i] = make_pair(-p[i][0] - p[i][1], i);\n        }\n        \n        for (int i = 0; i < 4; ++i) sort(vec[i].begin(), vec[i].end());\n        \n        int ans = 200000000;\n        for (int i = 0; i < n; ++i) {\n            // remove i\n            \n            int res = 0;\n            for (int j = 0; j < 4; ++j) {\n                int l = 0;\n                int r = n - 1;\n                if (vec[j][0].second == i) l = 1;\n                if (vec[j][n - 1].second == i) r = n - 2;\n                res = max(res, vec[j][r].first - vec[j][l].first);\n            }\n            \n            ans = min(ans, res);\n        }\n        \n        return ans;\n    }\n};"
}