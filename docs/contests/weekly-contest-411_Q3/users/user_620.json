{
    "username": "wildwarrior1155",
    "submission": "class Solution:\n    def largestPalindrome(self, length: int, pattern: int) -> str:\n        choices = ['5', '77', '7', '99', '4', '44', '6']\n        if pattern == 1:\n            return \"9\" * length\n        if pattern == 2:\n            if length == 1:\n                return '8'\n            return '8' + '9' * (length - 2) + '8'\n        if pattern == 3:\n            return \"9\" * length\n\n        if pattern == 4:\n            if length <= 3:\n                for i in range(10**(length),10**(length-1),-1):\n                    if str(i) == str(i)[::-1] and i%4 == 0:\n                        return str(i)\n            return '88' + '9' * (length - 4) + '88'\n        if pattern == 5:\n            if length == 1:\n                return '5'\n            return '5' + '9' * (length - 2) + '5'\n        if pattern == 6:\n            if length <= 2:\n                for i in range(10**(length),10**(length-1),-1):\n                    if str(i) == str(i)[::-1] and i%6 == 0:\n                        return str(i)\n            if length % 2:\n                return '8' + '9' * ((length - 3) // 2) + '8' + '9' * ((length - 3) // 2) + '8'\n            half_length = length // 2\n            half_string = '8' + '9' * (half_length - 2) + '7'\n            return half_string + half_string[::-1]\n        if pattern == 7:\n            if length <= 2:\n                for i in range(10**(length),10**(length-1),-1):\n                    if str(i) == str(i)[::-1] and i%7 == 0:\n                        return str(i)\n            index = 0\n            remaining_length = length\n            length -= 3\n            increasing = True\n            while length:\n                if increasing:\n                    index += 1\n                else:\n                    index -= 1\n                if index == 6:\n                    increasing = False\n                if index == 0:\n                    increasing = True    \n                length -= 1\n            selected_string = choices[index]\n            selected_length = len(selected_string)\n            \n            return '9' * ((remaining_length - selected_length) // 2) + selected_string + '9' * ((remaining_length - selected_length) // 2)\n                \n        if pattern == 8:\n            if length <= 6:\n                return '8' * length\n            return '888' + '9' * (length - 6) + '888'\n        if pattern == 9:\n            return \"9\" * length",
    "submit_ts": "1723953215",
    "subm_id": "1359815367"
}