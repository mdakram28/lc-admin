{
    "username": "mufti",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        sort(points.begin(), points.end());\n        // unordered_map<int, array<int, 2>> distsu, distsd; // dist -> point\n        \n        int md = INT_MIN;\n        array<int, 2> pd, pu, a, b;\n        \n        auto test = [&] (array<int, 2> omit) {\n            md = INT_MIN;\n            int d = INT_MAX, u = INT_MIN;\n            // int add = 0;\n            bool omitted = omit[0] == -1;\n            for (int i = 0; i < n; i++) {\n                int x = points[i][0], y = points[i][1];\n                if (!omitted && x == omit[0] && y == omit[1]) {\n                    omitted = 1;\n                    continue;\n                }\n                if (y + x < d) {\n                    d = y + x;\n                    pd = {x, y};\n                }\n                if (y - x > u) {\n                    u = y - x;\n                    pu = {x, y};\n                }\n                // if (d != INT_MIN) {\n                    // add += x - points[i - 1][0];\n                    if (y - d + x > md) {\n                        md = y - d + x;\n                        a = {x, y}, b = pd;\n                    }\n                    if (-y + u + x > md) {\n                        md = -y + u + x;\n                        a = {x, y}, b = pu;\n                    }\n                // }\n            }\n        };\n        \n        test({-1, -1});\n        array<int, 2> c1 = a, c2 = b;\n        int ans = md;\n        test(c1);\n        ans = min(ans, md);\n        test(c2);\n        ans = min(ans, md);\n        return ans;\n    }\n};"
}