{
    "username": "rui-de",
    "submission": "class Solution {\npublic:\n    \n    struct Fenwik {\n        vector<int> f;\n        int n_;\n        Fenwik(int n) : f(n + 10), n_(n) {};\n        \n        void upd(int pos, int v) {\n            for (; pos < n_; pos |= pos + 1) {\n                f[pos] = max(f[pos], v);\n            }\n        }\n        \n        int get(int pos) {\n            int res = 0;\n            for (; pos >= 0; pos &= pos + 1, pos --) {\n                res = max(res, f[pos]);\n            }\n            return res;\n        }\n    };\n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        map<int, int> allpts{{0, 42}, {10000000, 42}};\n        for (auto q : queries) {\n            allpts[q[1]] = 42;\n        }\n        int sz = 0;\n        for (auto& [_, pos] : allpts) {\n            pos = sz++;\n        }\n        Fenwik fw(sz);\n        set<int> obs{0, 10000000};\n        for (auto q : queries) {\n            if (q[0] == 1) {\n                obs.insert(q[1]);\n            }\n        }\n        int prv = 0;\n        for (int v : obs) {\n            int pos = allpts[v];\n            int dist = v - prv;\n            fw.upd(pos, dist);            \n            prv = v;\n        }\n        \n        vector<bool> res;\n        \n        for (int i = queries.size() - 1; i >= 0; i--) {\n            if (queries[i][0] == 1) {\n                auto it = obs.find(queries[i][1]);\n                --it;\n                int prv = *it;\n                \n                it ++; it++;\n                int newDist = *it - prv;\n                int pos = allpts[ *it ];\n                fw.upd(pos, newDist);\n                it--;\n                obs.erase(it);              \n                // return res;\n            } else {\n                int pos = allpts[ queries[i][1] ];\n                \n                int curDist = fw.get(pos);\n                // return res;\n                auto it = obs.lower_bound(queries[i][1]);\n                \n                \n                it --;\n                curDist = max(curDist, queries[i][1] - *it);\n                \n                res.push_back(curDist >= queries[i][2]);\n                \n            }\n            \n            \n        }\n        reverse(res.begin(), res.end());\n        return res;\n        \n    }\n};",
    "submit_ts": 1716649490.0
}