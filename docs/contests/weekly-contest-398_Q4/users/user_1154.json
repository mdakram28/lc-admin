{
    "username": "360verse",
    "submission": "using System.Collections.Generic;\n\npublic class Solution {\n    private Dictionary<int, List<List<int>>> dp = new Dictionary<int, List<List<int>>>();\n\n    private int Solve(int k, int i, int jump, bool can) {\n        if (i > k + 5)\n            return 0;\n\n        if (jump > 31)\n            return 0;\n\n        if (dp.ContainsKey(i) && dp[i][jump][can ? 1 : 0] != -1)\n            return dp[i][jump][can ? 1 : 0];\n\n        int ans = (i == k) ? 1 : 0;\n        if (can)\n            ans += Solve(k, i - 1, jump, false);\n        if (i + (1 << jump) <= k + 1)\n            ans += Solve(k, i + (1 << jump), jump + 1, true);\n\n        if (!dp.ContainsKey(i)) {\n            dp[i] = new List<List<int>>();\n        }\n\n        while (dp[i].Count <= jump) {\n            dp[i].Add(new List<int>{ -1, -1 });\n        }\n\n        dp[i][jump][can ? 1 : 0] = ans;\n        return ans;\n    }\n\n    public int WaysToReachStair(int k) {\n        return Solve(k, 1, 0, true);\n    }\n}\n",
    "submit_ts": 1716089474.0
}