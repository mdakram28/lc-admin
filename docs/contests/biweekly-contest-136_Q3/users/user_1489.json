{
    "username": "umar_amu",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m=grid.size();\n        int n=grid[0].size();\n        int lr=0,er=m-1;\n        int lc=0,ec=n-1,op=0;\n        while(lr<er)\n        {\n            lc=0;\n            ec=n-1;\n            while(lc<ec)\n            {\n                int d[2]{0};\n                d[grid[lr][lc]]++;\n                d[grid[lr][ec]]++;\n                d[grid[er][lc]]++;\n                d[grid[er][ec]]++;\n                op+=min(d[0],d[1]);\n                lc++;\n                ec--;\n            }\n            lr++;\n            er--;\n        }\n        int pair=0;\n        int changes=0;\n        if(m%2==1)\n        {\n            lc=0;\n            ec=n-1;\n            while(lc<ec)\n            {\n                if(grid[m/2][lc]!=grid[m/2][ec])\n                {\n                    op++;\n                    changes++;\n                }\n                if(grid[m/2][lc]==1)pair++;\n                lc++;\n                ec--;\n            }\n        }\n        if(n%2==1)\n        {\n            lr=0;\n            er=m-1;\n            while(lr<er)\n            {\n                if(grid[lr][n/2]!=grid[er][n/2])\n                {\n                    op++;\n                    changes++;\n                }\n                if(grid[lr][n/2]==1)pair++;\n                lr++;\n                er--;\n            }\n            if(m%2==1)if(grid[m/2][n/2]==1)op++;\n        }\n        if(pair%2==0||changes!=0)return op;\n        return op+2;\n        \n    }\n};\n",
    "submit_ts": "1722699364",
    "subm_id": "1343209407"
}