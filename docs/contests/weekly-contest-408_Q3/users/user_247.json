{
    "username": "ddiibboo",
    "submission": "class Solution {\n    public int numberOfSubstrings(String s) {\n        int ans = 0;\n        int[][] sum = new int[2][s.length() + 1];\n        for (int i = 1; i <= s.length(); ++i) {\n            sum[0][i] = sum[0][i - 1] + ('1' - s.charAt(i - 1));\n            sum[1][i] = sum[1][i - 1] + (s.charAt(i - 1) - '0');\n        }\n        // for (int i = 0; i < 2; ++i) {\n        //     for (int j = 0; j <= s.length(); ++j) {\n        //         System.out.print(sum[i][j] + \" \");\n        //     }\n        //     System.out.println();\n        // } \n        int tmp = 0;\n        for (int i = 0; i < s.length(); ++i) {\n            if (s.charAt(i) == '1') {\n                ans += ++tmp;\n            } else {\n                tmp = 0;\n            }\n        }\n        for (int c = 1; ; ++c) {\n            if (c + 1L * c * c > s.length()) break;\n            int cnt0 = 0, j = 1, k = 1, l = 1;\n            // System.out.println(\"c = \" + c);\n            for (int i = 1; i <= s.length(); ++i) {\n                int v = sum[1][i - 1] + c * c;\n                while (j <= s.length() && sum[0][j] - sum[0][i - 1] < c) ++j;\n                while (k <= s.length() && sum[0][k] - sum[0][i - 1] <= c) ++k;\n                l = Math.max(l, j);\n                while (l < k && sum[1][l] < v) ++l;\n                // System.out.println(String.format(\"i = %d, j = %d, k = %d, l = %d\", i, j, k, l));\n                if (j < k) ans += k - l;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722138381",
    "subm_id": "1335789299"
}