{
    "username": "monk45456",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        vector<vector<int>> dp(nums.size(),vector<int>(k+1,0));\n        map<int,int> mp;\n        for(int i=0;i<nums.size();i++){\n            if(mp.find(nums[i])!=mp.end()){\n                dp[i][0]+=mp[nums[i]];\n            }\n            dp[i][0]+=1;\n            mp[nums[i]]++;\n        }\n        vector<int> closest;\n        mp.clear();\n        for(int i=0;i<nums.size();i++){\n            if(mp.find(nums[i])!=mp.end()){\n                closest.push_back(mp[nums[i]]);\n            }\n            else{\n                closest.push_back(-1);\n            }\n            mp[nums[i]]=i;\n        }\n        vector<vector<int>> pref(nums.size(),vector<int>(k+1,0));\n        pref[0][0]=1;\n        int ans=dp[0][0];\n        for(int i=1;i<nums.size();i++){\n            pref[i][0]=max(pref[i-1][0],dp[i][0]);\n            ans=max(dp[i][0],ans);\n            for(int m=1;m<=k;m++){\n                int last=closest[i];\n                int maxi=max(0,pref[i-1][m-1]);\n                // for(int j=i-1;j>=0;j--){\n                //     maxi=max(maxi,dp[j][m-1]);\n                // }\n                if(last!=-1){\n                    dp[i][m]=max(1+dp[last][m],dp[i][m]);\n                }\n                dp[i][m]=max(dp[i][m],1+maxi);\n                ans=max(ans,dp[i][m]);\n                pref[i][m]=max(pref[i-1][m],dp[i][m]);\n            }\n        }\n        // int ans=0;\n        // for(int i=0;i<nums.size();i++){\n        //     for(int m=0;m<=k;m++){\n        //         ans=max(ans,dp[i][m]);\n        //         cout<<\"i=\"<<i<<\" m=\"<<m<<\" \"<<dp[i][m]<<endl;\n        //     }\n        // }\n        // cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1717861925",
    "subm_id": "1281806264"
}