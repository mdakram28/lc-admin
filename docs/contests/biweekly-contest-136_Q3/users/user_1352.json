{
    "username": "Manish18raj",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int rows = grid.length;\n        int cols = grid[0].length;\n        int flipsCount = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                flipsCount += 1;\n            }\n        }\n\n        int[] pairCount = new int[3];\n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = grid[rows / 2][left] + grid[rows / 2][right];\n                pairCount[sum] += 1;\n                left++;\n                right--;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n                pairCount[sum] += 1;\n                top++;\n                bottom--;\n            }\n        }\n\n        if (pairCount[2] % 2 == 1) {\n            if (pairCount[1] > 0) {\n                flipsCount += pairCount[1];\n            } else {\n                flipsCount += 2;\n            }\n        } else {\n            flipsCount += pairCount[1];\n        }\n\n        for (int i = 0; i < rows / 2; i++) {\n            for (int j = 0; j < cols / 2; j++) {\n                int top1 = grid[i][j];\n                int bottom1 = grid[rows - 1 - i][j];\n                int top2 = grid[i][cols - 1 - j];\n                int bottom2 = grid[rows - 1 - i][cols - 1 - j];\n\n                int totalSum = top1 + bottom1 + top2 + bottom2;\n\n                if (totalSum != 0 && totalSum != 4) {\n                    flipsCount += Math.min(totalSum, 4 - totalSum);\n                }\n            }\n        }\n\n        return flipsCount;\n    }\n}",
    "submit_ts": "1722699517",
    "subm_id": "1343214102"
}