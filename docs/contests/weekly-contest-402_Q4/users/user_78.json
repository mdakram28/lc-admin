{
    "username": "hongrock",
    "submission": "const int N = 1e5 + 10;\nint n, a[N], s[N];\nint lowbit(int x){\n    return x & (-x);\n}\nvoid add(int x, int v){\n    for(;x <=n; x+=lowbit(x)){\n        s[x] += v;\n    }\n}\nint sum(int x){\n    int ret = 0;\n    for(; x>0; x-=lowbit(x))    ret += s[x];\n    return ret;\n}\nint sum(int L, int R){\n    if(L > R)   return 0;\n    return sum(R) - sum(L - 1);\n}\nvoid check(int x, int v){\n    if(x <= 1 || x >= n)    return;\n    if(a[x] > a[x-1] && a[x] > a[x+1])  add(x, v);\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        for(int i=1; i<=n; ++i){\n            s[i] = 0;\n            a[i] = nums[i - 1];\n        }\n        for(int i=2; i<n; ++i){\n            if(a[i] > a[i-1] && a[i] > a[i+1])  add(i, 1);\n        }\n        int op, l, r;\n        vector<int> ret;\n        for(auto &p : queries){\n            op = p[0];\n            l = p[1];\n            r = p[2];\n            if(op == 1){\n                ++l;\n                ++r;\n                ret.push_back(sum(l + 1, r - 1));\n            } else {\n                ++l;\n                check(l - 1, -1);\n                check(l, -1);\n                check(l + 1, -1);\n                a[l] = r;\n                check(l - 1, 1);\n                check(l, 1);\n                check(l + 1, 1);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1718505866.0
}