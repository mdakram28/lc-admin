{
    "username": "__akshansh7",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> differences(n);\n\\\n        for (int i = 0; i < n; ++i) {\n            differences[i] = target[i] - nums[i];\n        }\n\n        long long totalOperations = 0; \n        long long maxInSegment = 0;    \n        int currentSegmentSign = 0;    \n\n        totalOperations = abs(differences[0]);\n        maxInSegment = abs(differences[0]);\n        currentSegmentSign = (differences[0] >= 0) ? 1 : 0;\n\n        for (int i = 1; i < n; ++i) {\n            int currentDiff = differences[i];\n            int currentSign = (currentDiff >= 0) ? 1 : 0;\n\n            if (currentSign != currentSegmentSign) {\n                totalOperations += abs(currentDiff);\n                maxInSegment = abs(currentDiff);\n                currentSegmentSign = currentSign;\n            } else {\n                if (maxInSegment < abs(currentDiff)) {\n                    totalOperations += abs(currentDiff) - maxInSegment;\n                    maxInSegment = abs(currentDiff);\n                } else {\n                    maxInSegment = abs(currentDiff);\n                }\n            }\n        }\n\n        return totalOperations;\n    }\n};",
    "submit_ts": "1721532385",
    "subm_id": "1327984576"
}