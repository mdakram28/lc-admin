{
    "username": "masteralphi",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        mx = max(nums)\n        pws = []\n        cur = 1\n        while cur <= mx:\n            pws.append(cur)\n            cur <<= 1\n        regs = []\n        last = -1\n        for i, el in enumerate(nums):\n            if el & k == k:\n                if last == i - 1:\n                    if last == -1:\n                        regs.append([i, i])\n                    else:\n                        regs[-1][1] += 1\n                else:\n                    regs.append([i, i])\n                last = i\n        res = 0\n        except_pw = []\n        for pw in pws:\n            if (pw & k) == 0:\n                except_pw.append(pw)\n        \n        for st, en in regs:\n            last_pw = [[-1, -1] for _ in range(len(except_pw))]\n            if nums[st] == k:\n                res += 1\n            for i, pw in enumerate(except_pw):\n                if pw & nums[st]:\n                    last_pw[i] = [st, st]\n            \n            for idx in range(st+1, en+1):\n                for i, pw in enumerate(except_pw):\n                    if pw & nums[idx]:\n                        if last_pw[i][0] == -1:\n                            last_pw[i] = [idx, idx]\n                        else:\n                            last_pw[i][1] += 1\n                    else:\n                        last_pw[i] = [-1, -1]\n                mn = -1\n                for i, j in last_pw:\n                    if i != -1:\n                        if mn == -1:\n                            mn = i\n                        else:\n                            mn = min(mn, i)\n                if mn == -1:\n                    res += idx-st+1\n                else:\n                    res += mn-st\n                \n        return res",
    "submit_ts": "1720279800",
    "subm_id": "1311765594"
}