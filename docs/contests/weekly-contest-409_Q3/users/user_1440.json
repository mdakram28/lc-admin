{
    "username": "ayyanpasha2014",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] lastNode = new int[n];\n        int visited[] = new int[n];\n        for(int i=0;i<n;i++){\n            visited[i] = i;\n            if(i != n-1) lastNode[i] = i+1;\n        }\n        \n        int result[] = new int[queries.length];\n        int distanceMin = 0;\n        Arrays.fill(result,Integer.MAX_VALUE);\n        for(int i=0;i<result.length;i++){\n            int node1 = queries[i][0];\n            int node2 = queries[i][1];\n            \n            int distanceM = 0;\n            int j = node1+1;\n            if(lastNode[node1] != 0)\n            while(j<node2){\n                if(lastNode[j] == 0) break;\n                if(lastNode[j] != 0){\n                    distanceM++;\n                }\n                int current = j;\n                j = lastNode[j];\n                lastNode[current] = 0;                \n            }\n            j = lastNode[node1];\n            if(lastNode[node1] != 0)\n            while(j<node2){\n                if(lastNode[j] == 0) break;\n                if(lastNode[j] != 0){\n                    distanceM++;\n                }\n                int current = j;\n                j = lastNode[j];\n                lastNode[current] = 0;                \n            }\n\n            if(lastNode[node1] != 0)lastNode[node1] = Math.max(lastNode[node1],node2);\n            distanceMin += distanceM;\n            result[i] = n-1 - distanceMin;\n            // solve(result,lastNode,node1,visited,0,i);\n        }\n        return result;\n    }\n    public void solve(int result[], int[] lastNode, int current, int visited[], int sum, int query){\n        if(current == lastNode.length-1){\n            result[query] = Math.min(result[query],visited[current]);\n            return;\n        }\n        \n        \n        if(visited[current]+1<visited[lastNode[current]]){\n            visited[lastNode[current]] = visited[current]+1;\n        }else{\n            result[query] = Math.min(result[query],visited[visited.length-1]);\n            return;\n        }\n        solve(result,lastNode,lastNode[current],visited,sum+1,query);\n        \n        \n    }\n}",
    "submit_ts": "1722743949",
    "subm_id": "1343803372"
}