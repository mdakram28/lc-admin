{
    "username": "dsacpabhijit_kr",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        map<int,int>mpsum,mpdiff;\n        for(int i=0;i<n;i++){\n            int s1=points[i][0] + points[i][1];\n            int s2=points[i][0] - points[i][1];\n            mpsum[s1]++;\n            mpdiff[s2]++;\n        }\n        int mn=INT_MAX;\n        for(int i=0;i<n;i++){\n            int curr_sum=points[i][0]+points[i][1];\n            int curr_diff=points[i][0]-points[i][1];\n            mpsum[curr_sum]--;\n            if(mpsum[curr_sum]==0) mpsum.erase(curr_sum);\n            mpdiff[curr_diff]--;\n            if(mpdiff[curr_diff]==0) mpdiff.erase(curr_diff);\n            \n            auto mpsbg=mpsum.begin();\n            auto mpsen=mpsum.end();\n            mpsen--;\n            \n            auto mpdbg=mpdiff.begin();\n            auto mpden=mpdiff.end();\n            mpden--;\n            \n            int maximum=max((mpsen->first)-(mpsbg->first),(mpden->first)-(mpdbg->first));\n            mn=min(mn,maximum);\n            \n            mpsum[curr_sum]++;\n            mpdiff[curr_diff]++;\n        }\n        return mn;\n    }\n};"
}