{
    "username": "CoderAbhi27",
    "submission": "#define int long long\n\nconst int M=1e9+7;\n\ntemplate <class T>\nclass segTree{\npublic:\n    vector<T> a, seg;\n    int n;\n    T nill=T();\n\n    segTree(int sz, vector<T> arr=vector<T>(0)) {\n        n=sz;\n        if(arr.size()) a=arr;\n        else a=vector<T>(n,nill);\n        seg.assign(4*n, nill);\n        build();\n    }\n\n    T func(T,T);\n\n    void build(int id, int l, int r){\n        if(r-l==1){\n            seg[id]=a[l];\n            return;\n        }\n        int mid=(l+r)/2;\n        build(2*id,l,mid);\n        build(2*id+1,mid,r);\n        seg[id]=func(seg[2*id], seg[2*id+1]);\n    }\n    void build(){build(1,0,n);}\n\n    //[x,y)\n    T query(int x, int y, int id, int l, int r){\n        if(y<=l || x>=r) return nill;\n        if(x<=l && r<=y) return seg[id];\n        int mid=(l+r)/2;\n        return func(query(x,y,id*2,l,mid), query(x,y,id*2+1,mid,r));\n    }\n    T query(int x, int y){return query(x,y,1,0,n);}\n\n    //(kth-one) smallest index(0-based) i, such that prsum(i)=k\n    T query2(int k, int id, int l, int r){\n        if(seg[id]<k) return -1;\n        if(k==0) return l-1;\n        if(r-l==1){\n            return l;\n        }\n        int mid=(l+r)/2;\n        if(seg[id*2]<k) return query2(k-seg[id*2], id*2+1, mid, r);\n        return query2(k, id*2, l, mid);\n    }\n    T query2(int k){return query2(k,1,0,n);}\n\n    void update(int i, T val, int id, int l, int r){\n        if(r-l==1){\n            a[i]=val;\n            seg[id]=val;\n            return;\n        }\n        int mid=(l+r)/2;\n        if(i<mid) update(i,val,2*id,l,mid);\n        else update(i,val,2*id+1,mid,r);\n        seg[id]=func(seg[2*id], seg[2*id+1]);\n    }\n    void update(int i, T val){update(i,val,1,0,n);}\n\n};\n\nstruct Node{\n    int val;\n    int lval;\n    int rval;\n    int lrval;\n    Node(int x){\n        val=max(0LL,x);\n        lval=0;\n        rval=0;\n        lrval=0;\n    }\n    Node(){\n        val=0;\n        lval=0;\n        rval=0;\n        lrval=0;\n    }\n};\n\n//must return T()\ntemplate <class T>\nT segTree<T>::func(T a, T b){\n    T temp;\n    temp.val=max(a.val+b.lval, a.rval+b.val);\n    temp.lval=max(a.lval+b.lval, a.lrval+b.val);\n    temp.rval=max(a.val+b.lrval, a.rval+b.rval);\n    temp.lrval=max(a.lval+b.lrval, a.lrval+b.rval);\n    return temp;\n}\n\nclass Solution {\npublic:\n    \n    int maximumSumSubsequence(vector<int32_t>& nums, vector<vector<int32_t>>& queries) {\n        segTree<Node> st(nums.size());\n        for(int i=0;i<nums.size();i++){\n            st.update(i, Node(nums[i]));\n        }\n        int ans=0;\n        for(auto v:queries){\n            int i=v[0];\n            int x=v[1];\n            st.update(i,x);\n            ans+=st.query(0,nums.size()).val;\n            ans%=M;\n        }\n        return ans;\n    }\n    #undef int\n};",
    "submit_ts": 1716693703.0
}