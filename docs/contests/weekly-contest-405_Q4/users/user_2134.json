{
    "username": "ghostrider22",
    "submission": "class Solution {\npublic:\n    #define pb push_back\n    #define ll long long\n    struct Node {\n        unordered_map<char, Node*> bra;\n        vector<pair<ll, ll>> last;\n\n        Node() : bra(), last() {}\n    };\n\n    class SegmentT {\n    private:\n        Node* root;\n\n    public:\n        SegmentT() {\n            root = new Node();\n        }\n\n        void push(const string& word, ll ix, ll cost) {\n            Node* node = root;\n            for (char c : word) {\n                if (node->bra.find(c) == node->bra.end()) {\n                    node->bra[c] = new Node();\n                }\n                node = node->bra[c];\n            }\n            node->last.pb({ix, cost});\n        }\n\n        Node* fetch() const {\n            return root;\n        }\n    };\n\n    int minimumCost(const string& tg, const vector<string>& words, const vector<int>& cs) {\n        SegmentT st;\n        ll n = tg.size();\n        vector<ll> dp(n+1, 1e9);\n        dp[0] = 0;\n        for (ll i=0; i<words.size(); i++) {\n            st.push(words[i],i,cs[i]);\n        }\n\n        for (ll i=0; i<n; i++) {\n            Node* cn=st.fetch();\n            if (dp[i] == 1e9) {\n                continue;\n            }\n            for (ll j=i; j<n; j++) {\n                if (auto it=cn->bra.find(tg[j]); it==cn->bra.end()) {\n                    break;\n                }\n                cn = cn->bra[tg[j]];\n                for (auto&p : cn->last) {\n                    ll cost= words[p.first].size();\n                    if (i+cost<=n) {\n                        dp[i+cost] = min(dp[i+cost], dp[i]+p.second);\n                    }\n                }\n            }\n        }\n        if(dp[n]==1e9){\n            return -1;\n        }\n        return dp[n];\n    }\n};\n",
    "submit_ts": "1720323576",
    "subm_id": "1312378927"
}