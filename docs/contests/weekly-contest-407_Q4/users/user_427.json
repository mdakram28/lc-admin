{
    "username": "sandipan72",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> arr(n, 0);\n        \n        for(int i = 0; i < n; i++) {\n            arr[i] = target[i] - nums[i];\n        }\n        \n        long long res = 0, till = 0;\n        \n        res += abs(arr[0]), till = abs(arr[0]);\n        \n        for(int i = 1; i < n; i++) {\n            if(arr[i] < 0) {\n                if(arr[i-1] < 0) {\n                    res += (abs(arr[i]) - till) > 0 ? abs(arr[i])-till : 0;\n                    till += abs(arr[i]) - till;\n                } else {\n                    till = abs(arr[i]);\n                    res += till;\n                }\n            } else {\n                if(arr[i-1] > 0) {\n                    res += (abs(arr[i]) - till) > 0 ? abs(arr[i])-till : 0;\n                    till += abs(arr[i]) - till;\n                } else {\n                    till = abs(arr[i]);\n                    res += till;\n                }\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1721531438",
    "subm_id": "1327960950"
}