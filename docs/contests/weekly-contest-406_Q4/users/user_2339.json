{
    "username": "vineetvermaa30",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    int horizSegments = 1, vertSegments = 1;\n    long long totalCost = 0;\n    size_t hIndex = 0, vIndex = 0;\n\n    while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n        if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n            totalCost += static_cast<long long>(horizontalCut[hIndex]) * vertSegments;\n            ++horizSegments;\n            ++hIndex;\n        } else {\n            totalCost += static_cast<long long>(verticalCut[vIndex]) * horizSegments;\n            ++vertSegments;\n            ++vIndex;\n        }\n    }\n\n    while (hIndex < horizontalCut.size()) {\n        totalCost += static_cast<long long>(horizontalCut[hIndex]) * vertSegments;\n        ++horizSegments;\n        ++hIndex;\n    }\n\n    while (vIndex < verticalCut.size()) {\n        totalCost += static_cast<long long>(verticalCut[vIndex]) * horizSegments;\n        ++vertSegments;\n        ++vIndex;\n    }\n\n    return totalCost;\n}\n};",
    "submit_ts": "1720926465",
    "subm_id": "1320287091"
}