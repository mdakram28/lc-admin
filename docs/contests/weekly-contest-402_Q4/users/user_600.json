{
    "username": "Sarath_Vasana",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        out = []\n        is_peak = SortedList([])\n        for i in range(1,len(nums)-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                is_peak.add(i)\n        for q in queries:\n            if q[0] == 1:\n                k1,k2 = bisect_right(is_peak,q[1]),bisect_left(is_peak,q[2])\n                out.append(max(0,k2-k1))\n            else:\n                ind,val = q[1],q[2]\n                nums[ind] = val\n                if ind > 0 and ind < len(nums)-1:\n                    if val > nums[ind-1] and val > nums[ind+1]:\n                        is_peak.discard(ind)\n                        is_peak.add(ind)\n                    else:\n                        is_peak.discard(ind)\n                if ind < len(nums)-2:\n                    if nums[ind+1] > val and nums[ind+1] > nums[ind+2]:\n                        is_peak.discard(ind+1)\n                        is_peak.add(ind+1)\n                    else:\n                        is_peak.discard(ind+1)\n                if ind >= 2:\n                    if nums[ind-1] > val and nums[ind-1] > nums[ind-2]:\n                        is_peak.discard(ind-1)\n                        is_peak.add(ind-1)\n                    else:\n                        is_peak.discard(ind-1)\n        return out\n        \n                ",
    "submit_ts": 1718508328.0
}