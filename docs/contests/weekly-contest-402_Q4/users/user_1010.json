{
    "username": "jcn2",
    "submission": "template <class T> class SumSegmentTree{\n    private:\n\t    const T DEFAULT = 0;\n        vector<T> segtree;\n        int len;\n\n    public:\n        SumSegmentTree(int len) : len(len), segtree(len * 2, DEFAULT) {}\n\n        void set(int ind, T val){\n            ind += len;\n            segtree[ind] = val;\n            for(; ind > 1; ind /= 2){\n                segtree[ind / 2] = segtree[ind] + segtree[ind ^ 1];\n            }\n        }\n\n        /** @return sum in range[start, end) */\n        T range_sum(int start, int end){\n            T m = DEFAULT;\n            for(start += len, end += len; start < end; start /= 2, end /= 2){\n                if(start % 2 == 1) { m += segtree[start++]; }\n                if(end % 2 == 1) { m += segtree[--end]; }\n            }\n            return m;\n        }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        SumSegmentTree<int> st(n);\n        \n        for(int i=1; i<n-1; i++){\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]) st.set(i, 1);\n        }\n        \n//         for(int i=0; i<n; i ++){\n//             cout << i << ' ' << st.range_sum(i, i+1) << '\\n';\n//         }\n        \n        vector<int> v;\n        \n        for(int i=0; i<queries.size(); i++){\n            if(queries[i][0]==1){\n                int l = queries[i][1] + 1, r = queries[i][2] - 1;\n                if(l > r) v.push_back(0);\n                else{\n                    // cout << l << ' ' << r << '\\n';\n                    // cout << \"QUR\" << st.range_sum(l, r+1) << '\\n';\n                    v.push_back(st.range_sum(l,r+1));\n                \n                }\n            }else if(queries[i][0]==2){\n                int index = queries[i][1], val = queries[i][2];\n                nums[index] = val;\n                if(index-1>=0) st.set(index-1,0);\n                st.set(index, 0);\n                if(index+1 < n) st.set(index+1, 0);\n                if(index - 2 >= 0){\n                    if(nums[index-1] > nums[index-2] && nums[index-1] > nums[index]) st.set(index-1, 1);\n                }\n                if(index -1 >= 0 && index + 1 < n){\n                    if(nums[index] > nums[index-1] && nums[index] > nums[index+1]) st.set(index, 1);\n                }\n                if(index + 2 < n){\n                    if(nums[index+1] > nums[index] && nums[index+1] > nums[index+2]) st.set(index+1, 1);\n                } \n            }\n        }\n        \n        // for(int i=0; i<n; i ++){\n        //     cout << i << ' ' << st.range_sum(i, i+1) << '\\n';\n        // }\n        \n        return v;\n    }\n};",
    "submit_ts": 1718508092.0
}