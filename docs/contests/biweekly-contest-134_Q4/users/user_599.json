{
    "username": "qiao-xia",
    "submission": "def cal(ls):\n    n = len(ls)\n    if n == 0:\n        return 0\n    mv = max(ls)\n    bl = mv.bit_length()\n    #indexls = [[0] * (bl+1) for i in range(n)]\n    curindexls = [0] * (bl+1)\n    curindex = 0\n    r = 0\n    index = 0\n    for i in range(n):\n        curindex += 1\n        for j in range(bl):\n            if (ls[i] >> j) & 1:\n                curindexls[j] += 1\n        while 1:\n            if max(curindexls) < curindex:\n                curindex -= 1\n                for j in range(bl):\n                    if (ls[index] >> j) & 1:\n                        curindexls[j] -= 1\n                index += 1\n            else:\n                break\n        r += index\n    return r\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n\n        n = len(nums)\n        ls = []\n        re = 0\n        for i in range(n):\n            if nums[i] & k == k:\n                ls.append(k^nums[i])\n            else:\n                re += cal(ls)\n                ls = []\n        re+=cal(ls)\n        return re\n",
    "submit_ts": "1720278806",
    "subm_id": "544564466"
}