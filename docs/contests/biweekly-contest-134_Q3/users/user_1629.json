{
    "username": "omgupta20382038",
    "submission": "class Solution {\npublic:    \n    \nvoid solve(vector<int>& colors, int k, int& start, int& end, int& groupCount, int& currentLength)\n{\n    int n = colors.size();\n    int currentIndex = end % n;\n    int previousIndex = (end - 1) % n;\n\n    if (colors[currentIndex] != colors[previousIndex]) {\n        currentLength++;\n    } else {\n        currentLength = 1;\n    }\n\n    if (currentLength >= k) {\n        groupCount++;\n    }\n}\n\nint numberOfAlternatingGroups(vector<int>& colors, int k)\n{\n    int n = colors.size();\n    if (k == 1) {\n        return n;\n    }\n\n    int groupCount = 0;\n    int startIndex = 0, endIndex = 1;\n    int currentLength = 1;\n\n    for (endIndex = 1; endIndex < n + k - 1; endIndex++) {\n        solve(colors, k, startIndex, endIndex, groupCount, currentLength);\n    }\n\n    return groupCount;\n}\n\n};",
    "submit_ts": "1720280511",
    "subm_id": "1311792109"
}