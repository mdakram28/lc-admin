{
    "username": "Madhav3702",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(),horizontalCut.rend());\n        sort(verticalCut.rbegin(),verticalCut.rend());\n        long long hPieces = 1;\n        long long vPieces = 1;\n        long long cost = 0;\n        int i = 0, j = 0;\n        while(i < horizontalCut.size() && j < verticalCut.size()){\n            if (horizontalCut[i] >= verticalCut[j]) {\n                cost += horizontalCut[i] * vPieces;\n                hPieces++;\n                i++;\n            }\n            else {\n                cost += verticalCut[j] * hPieces;\n                vPieces++;\n                j++;\n            }\n        }\n        while(i < horizontalCut.size()){\n            cost += horizontalCut[i] * vPieces;\n            hPieces++;\n            i++;\n        }\n        while(j < verticalCut.size()){\n            cost += verticalCut[j] * hPieces;\n            vPieces++;\n            j++;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926095",
    "subm_id": "1320275824"
}