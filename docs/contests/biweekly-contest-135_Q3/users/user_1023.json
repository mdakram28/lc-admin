{
    "username": "silly-7eavittjb6",
    "submission": "#define abs(x) (((x)<(0))?(-(x)):(x))\n#define fmax(a,b) (((a)>(b))?(a):(b))\n#define fmin(a,b) (((a)<(b))?(a):(b))\nclass Solution\n{\npublic:\n    int minChanges(vector<int>& nums, int k)\n    {\n        unordered_map<int, int>delta;\n        int left = 0, right = nums.size() - 1;\n        while (left < right)\n        {\n            delta[abs(nums[right] - nums[left])]++;\n            left++;\n            right--;\n        }\n        vector<pair<int, int>>sorted(delta.begin(), delta.end());\n        sort(sorted.begin(), sorted.end(), [](const pair<int, int>& p1, const pair<int, int>& p2)\n            {\n                if (p1.second > p2.second)\n                {\n                    return true;\n                }\n                else if (p1.second == p2.second)\n                {\n                    return p1.first < p2.first;\n                }\n                else\n                {\n                    return false;\n                }\n            });\n        int min_times = 1000000000;\n        int select = 0;\n        while (select < sorted.size())\n        {\n            int times = 0;\n            int middle = nums.size() >> 1;\n            int select_delta = sorted[select].first;\n            for (int i = 0; i < middle; i++)\n            {\n                int num1 = nums[i];\n                int num2 = nums[nums.size() - 1 - i];\n                if (abs(num1 - num2) != select_delta)\n                {\n                    if (fmax(k - fmin(num1, num2), fmax(num1, num2)) < select_delta)\n                    {\n                        times += 2;\n                    }\n                    else\n                    {\n                        times++;\n                    }\n                }\n            }\n            min_times = fmin(min_times, times);\n            select++;\n            while (select < sorted.size() && sorted[select].second == sorted[select - 1].second)\n            {\n                select++;\n            }\n        }\n        return min_times;\n    }\n};",
    "submit_ts": "1721489370",
    "subm_id": "548318488"
}