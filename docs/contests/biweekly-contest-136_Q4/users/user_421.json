{
    "username": "Shanwitha",
    "submission": "vector<int> fin;\nint solve(int b){\n    if(b%2==1) return 1;\n    return 2;\n}\n\nvoid dfs(int node,vector<vector<int>>& adj,int *ans,int p){\n    ans[node]=0;\n    for(int i=0;i<adj[node].size();i++)\n    {\n        int v=adj[node][i];\n        if(v!=p)\n        {\n            dfs(v,adj,ans,node);\n            ans[node]=max(solve(v)+ans[v],ans[node]);\n        }\n    }\n    return ;\n}\n\nvoid dfs2(int node,vector<vector<int>>& adj,int *ans,int p,int prev){\n    \n    // cout<<node<<\" \"<<prev<<\" \"<<ans[node]<<\"\\n\";\n    fin[node]=max(ans[node],prev);  // reeroorted \n    \n    \n    vector<pair<int,int>> v1;\n    v1.push_back({0,-1});v1.push_back({0,-1});\n    for(int i=0;i<adj[node].size();i++)\n    {\n        int v=adj[node][i];\n        if(v!=p)\n        {\n            v1.push_back({ans[v]+solve(v),v});\n        }\n    }\n    \n    sort(v1.begin(),v1.end(),greater<pair<int,int>>());\n    int maxi1=v1[0].first; int node1=v1[0].second;\n    int maxi2=v1[1].first;\n    \n    for(int i=0;i<adj[node].size();i++)\n    {\n        int v=adj[node][i];\n        if(v!=p)\n        {\n            // dfs2(v,adj,ans,node,prev);\n            int t1=-1;\n            if(v==node1) t1=maxi2;\n            else t1=maxi1;\n            // cout<<\"..\"<<v<<\" \"<<t1<<\"\\n\";\n            dfs2(v,adj,ans,node,solve(node)+max(prev,t1));\n        }\n    }\n    \n    \n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        vector<vector<int>> adj(n+2);\n        for(int i=0;i<edges.size();i++)\n        {\n            int u,v;\n            u=edges[i][0];\n            v=edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        int ans[n+2];\n        dfs(0,adj,ans,-1);\n        fin.clear();\n        for(int i=0;i<n;i++) fin.push_back(-1);\n        dfs2(0,adj,ans,-1,0);\n        return fin;\n    }\n};",
    "submit_ts": "1722697566",
    "subm_id": "1343151150"
}