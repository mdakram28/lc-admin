{
    "username": "wanghy012",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n ==1:\n            if k == 2 or k == 4 or k==8:\n                return '8'\n            if k == 1 or k==3 or k == 9:\n                return '9'\n            return str(k)\n        if k==1 or k == 3 or k==9: \n            return ''.join(['9']*n)\n        if k==2:\n            return '8' + ''.join(['9']*(n-2)) + '8'\n        if k==4:\n            if n <= 4:\n                return '8' * n\n            return '88' + ''.join(['9']*(n-4)) + '88'\n        if k == 5:\n            return '5' + ''.join(['9']*(n-2)) + '5'\n        if k == 6:\n            if n == 2:\n                return '66'\n            if n % 2 == 0:\n                return '8' + ''.join(['9']*((n-4)//2)) + '77' + ''.join(['9']*((n-4)//2)) + '8'\n            return '8' + ''.join(['9']*((n-3)//2)) + '8' + ''.join(['9']*((n-3)//2)) + '8'\n        if k == 7:\n            res = ['9']*n\n            m = 0\n            if n % 6 == 1:\n                m = 2\n            if n % 6 == 2:\n                m = 1\n            if n % 6 == 3:\n                m = 5\n            if n % 6 == 4:\n                m = 3\n            if n % 6 == 5:\n                m = 4\n            d = {0:5,1:1,2:3,3:2,4:6,5:4,6:5}\n            inv = {1:1,2:4,4:2,3:5,5:3,6:6}\n            if n % 2 == 1:\n                m1 = d[(n//2) % 6 +1]\n                res[n // 2] = str(9- (m*inv[m1])%7)\n            if n % 2 == 0:\n                m1 = (d[(n//2) % 6] + d[(n//2 + 1)%6]) % 7\n                #print([m,m1])\n                res[n//2] = str(9- (m*inv[m1])%7)\n                res[n//2 -1] = str(9- (m*inv[m1])%7)\n            return ''.join(res)\n\n\n                \n\n        if k == 8:\n            if n <= 6:\n                return ''.join(['8']*(n))\n            return '888' + ''.join(['9']*(n-6)) + '888'\n        \n        ",
    "submit_ts": "1723952480",
    "subm_id": "1359797243"
}