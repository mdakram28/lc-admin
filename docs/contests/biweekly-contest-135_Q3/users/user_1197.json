{
    "username": "Masila",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        m=collections.defaultdict(int)\n        for i in range(len(nums)//2):\n            m[abs(nums[i]-nums[-1-i])]+=1\n        l1=sorted(m.items() ,key=lambda x:(-x[1],x[0]))\n        ans=0\n       \n        def dp(X):\n            ans=0\n            for i in range(len(nums)//2):\n                if abs(nums[i]-nums[-1-i])==X:\n                    continue\n                else:\n\n                    maxi=max(nums[i],nums[-1-i])\n                    mini=min(nums[i],nums[-1-i])\n                    \n                    if maxi-mini>X:\n                        val=maxi-mini-X\n                        if mini+val<=k:\n                            ans+=1\n                        elif maxi-val>=0:\n                            ans+=1\n                        else:\n                            ans+=2\n                    else:\n                        val=X-(maxi-mini)\n                        if val+maxi<=k:\n                            ans+=1\n                        elif mini-val>=0:\n                            ans+=1\n                        else:\n                            ans+=2\n            return ans\n        last=float('inf')\n        for i,j in l1:\n            res=dp(i)\n            if res<last:\n                last=res\n            else:\n                break\n        print(l1)\n        return last",
    "submit_ts": "1721488046",
    "subm_id": "1327409784"
}