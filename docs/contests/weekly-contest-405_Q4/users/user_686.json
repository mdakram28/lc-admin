{
    "username": "Vraj_Dobariya_59",
    "submission": "\nconst long long inf = 1e11;\nconst int co = 26;\nclass TrieNode{\n    public:\n    TrieNode* child[26];\n    bool isend;\n    long long cost;\n    TrieNode(){\n        isend=false;\n        cost=inf;\n        \n        for(int i=0;i<26;i++){\n            child[i]=NULL;\n        }\n    }\n};\n\nclass Trie{\n    public:\n    TrieNode* root;\n    Trie(){\n        root=new TrieNode();\n    }\n    void insert(string s,long long c){\n        TrieNode* temp=root;\n        for(int i=0;i<s.size();i++){\n            if(temp->child[s[i]-'a']==NULL){\n                temp->child[s[i]-'a']=new TrieNode();\n            }\n            temp=temp->child[s[i]-'a'];\n        }\n        temp->cost = min(temp->cost,c);\n        temp->isend=true;\n    }\n};\n\n\nclass Solution {\npublic:\n//     long long dfs(int n,int i,string &s,Trie* trie,vector<long long>&dp){\n//         if(i==n){\n//             return 0;\n//         }\n        \n//         if(dp[i]!=-1)\n//             return dp[i];\n//         TrieNode* root=trie->root;\n//         long long op=inf;\n//         for(int j=i;j<n;j++){\n//             // cout<<root->child[s[j]-'a']<<\"--\"<<temp<<\"--\\n\";\n//             if(root->child[s[j]-'a']!=NULL){\n//                 root=root->child[s[j]-'a'];\n//                 if(root->isend){\n                   \n//                     op = min(op,(long long)root->cost + dfs(n,j+1,s,trie,dp));\n//                 }\n//             }\n//             else break;\n//         }\n        \n//         dp[i] = op;\n//         return op;\n//     }\n    \n    int minimumCost(string s, vector<string>& words, vector<int>& costs) {\n        Trie* trie=new Trie();\n        int ii=0;\n        for(string i :words){\n            trie->insert(i,(long long)costs[ii]);\n            ii++;\n            \n        }\n        int n = s.size();\n        \n        vector<long long>dp(n+1,inf);\n        dp[0]=0;\n        \n        \n        vector<bool>bit(n,0);\n        \n       \n        \n        for(int i=0;i<n;i++){\n             TrieNode* root=trie->root;\n        for(int j=i;j<n;j++){\n            // cout<<root->child[s[j]-'a']<<\"--\"<<temp<<\"--\\n\";\n            if(root->child[s[j]-'a']!=NULL){\n                root=root->child[s[j]-'a'];\n                \n                if(root->isend){\n                    dp[j+1]= min(dp[j+1],(long long)root->cost + dp[i]);\n                }\n            }\n            else\n                break;\n        }\n            while(i<n && dp[i+1]==inf)\n                i++;\n            \n            \n            \n    \n        }\n        if(dp[n]==inf)\n            return -1;\n        else\n            return dp[n];\n        \n    }\n};",
    "submit_ts": "1720321782",
    "subm_id": "1312332135"
}