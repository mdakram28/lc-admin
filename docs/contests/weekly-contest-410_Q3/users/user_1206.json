{
    "username": "griffin_stewie",
    "submission": "class Solution {\n    \n    static final int MOD = 1_000_000_007;\n    \n    static int dp[][][];\n    \n    static int add(int a, int b) {\n        return ((a%MOD)+(b%MOD))%MOD;\n    }\n    \n    static int go(int p1, int p2, int idx, int nums[]) {\n        if(idx == nums.length)  return 1;\n        if(dp[p1][p2][idx] != -1)  return dp[p1][p2][idx];\n        int ans = 0;\n        for(int i = p1; i <= 50; i++) {\n            int n1 = i;\n            int n2 = nums[idx] - n1;\n            if(n1 >= 0 && n2 >= 0 && n1 >= p1 && n2 <= p2) {\n                int now = go(n1, n2, idx+1, nums);\n                ans = add(ans, now);\n            }\n        }\n        return dp[p1][p2][idx] = ans;\n    }\n    \n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        dp = new int[51][51][n+1];\n        for(int i = 0; i < 51; i++) {\n            for(int j = 0; j < 51; j++) {\n                Arrays.fill(dp[i][j], -1);\n            }\n        }\n        int ans = go(0, 50, 0, nums);\n        return ans;\n    }\n}",
    "submit_ts": "1723345687",
    "subm_id": "1351561186"
}