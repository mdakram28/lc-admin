{
    "username": "aviiii",
    "submission": "class Solution {\npublic:\n    // bool isValid(vector<int>& colors, int n){\n    //     for(int i=1; i<n; i++){\n    //         if()\n    //     }\n    // }\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(); \n        int count = 0; \n \n        if (k == 1) return n; \n \n        int alt = 1; \n        int i = 1; \n        while (i < n + k - 1) { \n            int current = i; \n            int previous = i - 1; \n \n            if (current >= n) current -= n; \n            if (previous >= n) previous -= n; \n \n            if (colors[current] != colors[previous]) ++alt; \n            else alt = 1; \n \n            if (alt >= k) ++count;  \n            ++i; \n        } \n \n        return count; \n    }\n};",
    "submit_ts": "1720279765",
    "subm_id": "1311764194"
}