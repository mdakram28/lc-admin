{
    "username": "eminence_in_shadow",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int, int>> s, d;\n \n        for (int i = 0; i < n; i++) {\n            s.push_back({points[i][0]+points[i][1], i});\n            d.push_back({points[i][0]-points[i][1], i}) ;   \n        }\n \n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        \n        vector<int> arr;\n    \n        int ans = 0;\n        int j = 0,k = n-1;\n        if(d[0].second == s[n-1].second){\n            j++;\n        }else if(d[n-1].second == s[n-1].second){\n            k--;\n        }\n        arr.push_back(max(s[n-2].first-s[0].first, d[k].first-d[j].first));\n        \n        j = 0,k = n-1;\n        if(d[0].second == s[0].second){\n            j++;\n        }else if(d[n-1].second == s[0].second){\n            k--;\n        }\n        arr.push_back(max(s[n-1].first-s[1].first, d[k].first-d[j].first));\n        \n        j = 0,k = n-1;\n        if(d[0].second == s[n-1].second){\n            k--;\n        }else if(d[0].second == s[0].second){\n            j++;\n        }\n        arr.push_back(max(s[k].first-s[j].first, d[n-1].first-d[1].first));\n        \n        j = 0,k = n-1;\n        if(d[n-1].second == s[n-1].second){\n            k--;\n        }else if(d[n-1].second == s[0].second){\n            j++;\n        }\n        arr.push_back(max(s[k].first-s[j].first, d[n-2].first-d[0].first));\n        \n        \n        sort(arr.begin(), arr.end());\n        \n        return arr[0];\n    }\n};"
}