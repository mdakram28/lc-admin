{
    "username": "liang sheng",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if (n == 1) {\n            string ans;\n            for (int i = 9; i >= 1; i--) if (i % k == 0) {\n                ans.push_back(i + '0');\n                break;\n            }\n            return ans;\n        }\n        vector<int> f(n, 1 % k);\n        for (int i = 1; i < n; i++) f[i] = f[i - 1] * 10 % k;\n        vector<vector<int>> dp(n, vector<int>(k, -1)), pre = dp;\n        \n        vector<int> h(k, -1);\n        for (int i = 1; i <= 9; i++) {\n            int d = (i * f[n - 1] + i) % k;\n            dp[n - 1][d] = i;\n            h[d] = i;\n        }\n        vector<int> g(k);\n        for (int i = 0; i < k; i++) g[i] = i;\n        sort(g.begin(), g.end(), [&](const int& x, const int& y) {\n            return h[x] > h[y]; \n        });\n        \n        // for (int i = 0; i < k; i++) {\n        //     cout << \"l= \" << n - 1 << \", g[i]= \" << g[i] << \", dp= \" << dp[n - 1][g[i]] << \", pre= \" << pre[n - 1][g[i]] << ' ' << h[g[i]] << '\\n';\n        // }\n        for (int l = n - 2, r = n - 1 - l; l >= r; l--, r++) {\n            vector<int> hh(k, -1);\n            for (int i = 0; i < k; i++) if (dp[l + 1][g[i]] != -1) {\n                for (int j = 9; j >= 0; j--) {\n                    int d = (g[i] + f[l] * j) % k;\n                    if (l != r) d = (d + f[r] * j) % k;\n                    if (dp[l][d] == -1) {\n                        dp[l][d] = j, hh[d] = h[g[i]] * 10 + j;\n                        pre[l][d] = g[i];\n                    }\n                }\n            } \n            h = hh;\n            sort(g.begin(), g.end(), [&](const int& x, const int& y) {\n                return h[x] > h[y]; \n            });\n            for (int i = 0; i < k; i++) h[g[i]] = 9 - i;\n            // for (int i = 0; i < k; i++) {\n            //     cout << \"l= \" << l << \", g[i]= \" << g[i] << \", dp= \" << dp[l][g[i]] << \", pre= \" << pre[l][g[i]] << ' ' << h[g[i]] << '\\n';\n            // }\n        }\n        string ans;\n        int p = n / 2, q = 0;\n        while (p < n) {\n            // cout << \"p= \" << p << \", q= \" << q << \", dp= \" << dp[p][q] << \", pre= \" << pre[p][q] << '\\n';\n            ans.push_back(dp[p][q] + '0');\n            q = pre[p++][q];\n        }\n        string res = ans;\n        if (n % 2) res = ans.substr(1);\n        reverse(ans.begin(), ans.end());\n        // cout << \"ans= \" << ans << \", res= \" << res << '\\n';\n        // cout << \"over\" << '\\n';\n        return ans + res;\n    }\n};",
    "submit_ts": "1723952375",
    "subm_id": "556411246"
}