{
    "username": "eulusoy",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> helper(k+1, vector<int>(n, 0));\n        \n        unordered_map<int, int> lastIndex;\n        vector<int> maxVals(k+1, 1);\n        vector<int> maxV(k+1, nums[0]);\n        \n        for (int i=0; i<n; ++i){\n            cout << i << endl;\n            helper[0][i] = 1;\n            \n            if(lastIndex.find(nums[i]) != lastIndex.end()){\n                // cout << \"found\" << endl;\n                for (int l=0; l<=(min(i+1, k)); ++l){\n                    helper[l][i] = helper[l][lastIndex[nums[i]]]+1;\n                }\n            }\n                     \n            for(int l=0; l<min(i, k); ++l){\n                if (maxV[l]!=nums[i]){\n                    helper[l+1][i] = max(helper[l+1][i], maxVals[l]+1);\n                }\n            }\n            lastIndex[nums[i]]=i;\n            for(int l=0; l<=k; ++l){\n                if(helper[l][i]>maxVals[l]){\n                    maxVals[l] = helper[l][i];\n                    maxV[l] = nums[i];\n                }\n                // cout << maxVals[l] << \" \" << maxV[l] << endl;\n            }\n        }\n        \n        // for(int j=0; j<=k; ++j){\n        //     for(int i=0; i<n; ++i){\n        //         cout << helper[j][i] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        \n        int ans = 0;\n        for(int i=0; i<=k; ++i){\n            for(int j=0; j<n; ++j){\n                ans = max(ans,helper[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717860895",
    "subm_id": "1281773020"
}