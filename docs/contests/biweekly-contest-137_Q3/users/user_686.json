{
    "username": "DAME_M",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& v) {\n        int m = v.size(); // number of rows\n        int n = v[0].size(); // number of columns\n        \n        // Vector to store cell values along with their positions\n        vector<pair<long long, pair<int, int>>> cells;\n\n        // Fill the vector with cell values and their positions\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                cells.push_back({(long long)v[i][j], {i, j}});\n            }\n        }\n\n        // Sort the vector in descending order based on the cell values\n        sort(cells.rbegin(), cells.rend());\n\n        long long max_sum = LLONG_MIN;\n\n        // Try to place three rooks in the top-valued cells\n        for (int i = 0; i < cells.size(); ++i) {\n            int r1 = cells[i].second.first;\n            int c1 = cells[i].second.second;\n            long long sum1 = cells[i].first;\n\n            for (int j = i + 1; j < cells.size(); ++j) {\n                int r2 = cells[j].second.first;\n                int c2 = cells[j].second.second;\n                if (r1 == r2 || c1 == c2) continue;\n                long long sum2 = sum1 + cells[j].first;\n\n                for (int k = j + 1; k < cells.size(); ++k) {\n                    int r3 = cells[k].second.first;\n                    int c3 = cells[k].second.second;\n                    if (r1 == r3 || c1 == c3 || r2 == r3 || c2 == c3) continue;\n                    else{\n                      long long sum3 = sum2 + cells[k].first;\n                    max_sum = max(max_sum, sum3);\n                    break;\n                    }\n                    \n                }\n            }\n        }\n\n        return max_sum;\n    }\n};",
    "submit_ts": "1723908530",
    "subm_id": "1359156493"
}