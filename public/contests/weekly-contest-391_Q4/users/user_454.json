{
    "username": "bhavik_11",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        int N = A.size();\n        vector<int> sum(N),diff(N);\n        for (int i = 0; i < N; i++) {\n            sum[i] = A[i][0] + A[i][1];\n            diff[i] = A[i][0] - A[i][1];\n        }\n        \n        multiset<int> sumSt,diffSt;\n        for(int i=0;i<N;++i) {\n            sumSt.insert(sum[i]);\n            diffSt.insert(diff[i]);\n        }\n        \n        int ans = 1e9;\n        for(int i=0;i<N;++i) {\n            sumSt.erase(sumSt.find(sum[i]));\n            diffSt.erase(diffSt.find(diff[i]));\n            \n            int val = max( *(--sumSt.end()) - *(sumSt.begin()) , *(--diffSt.end()) - *(diffSt.begin()));\n            ans = min(ans,val);\n            \n            sumSt.insert(sum[i]);\n            diffSt.insert(diff[i]);\n        }\n        return ans; \n    }\n};"
}