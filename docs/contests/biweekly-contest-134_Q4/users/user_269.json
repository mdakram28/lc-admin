{
    "username": "SamyakSinghania",
    "submission": "class Solution {\npublic:\n    vector<int> st;\n    void upd(int p,int l,int r,int k,int x){\n        if(l==r){\n            st[p]=x;\n            return;\n        }\n        int mid=(l+r)/2;\n        if(k<=mid)  upd(2*p,l,mid,k,x);\n        else    upd(2*p+1,mid+1,r,k,x);\n        st[p]=st[2*p]&st[2*p+1];\n    }\n    int get(int p,int l,int r,int i,int j){\n        if(j<i) return (1<<30)-1;\n        if(l>j || r<i)  return (1<<30)-1;\n        if(i<=l && r<=j){\n            return st[p];\n        }\n        int mid=(l+r)/2;\n        return get(2*p,l,mid,i,j)&get(2*p+1,mid+1,r,i,j);\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        st.assign(4*n,(1<<30)-1);\n        for(int i=0;i<n;i++){\n            upd(1,0,n-1,i,nums[i]);\n        }\n        long long val=0;\n        for(int i=0;i<n;i++){\n            if((nums[i]&k)!=k)  continue;\n            int low=i;\n            int high=n-1;\n            int ans=n;\n            while(low<=high){\n                int mid=(low+high)/2;\n                if((get(1,0,n-1,i,mid)&k)!=k){\n                    ans=mid;\n                    high=mid-1;\n                }\n                else{\n                    low=mid+1;\n                }\n            }\n            if(get(1,0,n-1,i,ans-1)!=k) continue;\n            if(nums[i]==k){\n                val+=ans-i;\n            }\n            else{\n                int low=i,high=ans-1,curr=ans-1;\n                while(low<=high){\n                    int mid=(low+high)/2;\n                    if(get(1,0,n-1,i,mid)==k){\n                        curr=mid;\n                        high=mid-1;\n                    }\n                    else{\n                        low=mid+1;\n                    }\n                }\n                val+=ans-curr;\n            }\n        }\n        return val;\n    }\n};",
    "submit_ts": "1720278636",
    "subm_id": "1311717744"
}