{
    "username": "Ayush-Vardhan-03",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int ans = 0, one = 0;\n\n        for (int r=0; r<m/2; r++) {\n            for (int c=0; c<n/2; c++) {\n                int o = grid[r][c] + grid[r][n-c-1] + grid[m-r-1][c] + grid[m-r-1][n-c-1];\n                \n                if (0 < o && o < 4) {\n                    if (o == 1) {\n                        grid[r][c] = grid[r][n-c-1] = grid[m-r-1][c] = grid[m-r-1][n-c-1] = 0;\n                    } else if (o == 3) {\n                        grid[r][c] = grid[r][n-c-1] = grid[m-r-1][c] = grid[m-r-1][n-c-1] = 1;\n                    } else {\n                        grid[r][c] = grid[r][n-c-1] = grid[m-r-1][c] = grid[m-r-1][n-c-1] = 0;\n                        ans++;\n                    }\n                    ans++;\n                }\n            }\n        }\n\n        int odd = 0;\n\n        if (m%2 == 1) {\n            for (int c=0; c<n/2; c++) {\n                if (grid[m>>1][c] != grid[m>>1][n-c-1]) {\n                    grid[m>>1][c] = grid[m>>1][n-c-1] = 0;\n                    ans++;\n                    odd++;\n                }\n            }\n        }\n        if (n%2 == 1) {\n            for (int r=0; r<m/2; r++) {\n                if (grid[r][n>>1] != grid[m-r-1][n>>1]) {\n                    grid[r][n>>1] = grid[m-r-1][n>>1] = 0;\n                    ans++;\n                    odd++;\n                }\n            }\n        }\n\n        for (int r=0; r<m; r++) {\n            for (int c=0; c<n; c++) {\n                one += grid[r][c];\n            }\n        }\n\n        if (one%4 == 0) return ans;\n        if (one%4 == 1) return ans+1;\n        if (one%4 == 2) {\n            if (odd > 0) return ans;\n            return ans+2;\n        }\n        if (odd > 0) return ans+1;\n        return ans+3;\n    }\n}",
    "submit_ts": "1722699367",
    "subm_id": "1343209471"
}