{
    "username": "Satvik Sr",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n\n        vector<vector<int>> lmx = board;\n        // cout << \"HIT\" << endl;\n        for(int i = 0; i < n; i++)\n        for(int j = 1; j < m; j++) {\n            lmx[i][j] = max(lmx[i][j - 1], board[i][j]);\n        }\n\n        // cout << \"HIT\" << endl;\n\n\n        long long ans = LONG_MIN;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n                    // vector<int> &r1 = board[i];\n                    // vector<int> &r2 = board[j];\n                    // vector<int> &r3 = board[k];\n                    // ans = max(ans, best(r1, r2, r3, m));\n                    long long r1mx = board[i].back();\n                    long long r2mx = board[j].back();\n                    long long r3mx = board[k].back();\n                    for(int l = m - 2; l > 0; l--) {\n                        ans = max({ans, r3mx + board[i][l] + lmx[j][l-1], r2mx+ board[i][l] + lmx[k][l-1], r1mx + board[j][l] + lmx[k][l-1], r3mx + board[j][l] + lmx[i][l-1], r2mx + board[k][l] + lmx[i][l-1], r1mx + board[k][l] + lmx[j][l-1]});\n                        r1mx = max(r1mx, (long long) board[i][l]);\n                        r2mx = max(r2mx, (long long) board[j][l]);\n                        r3mx = max(r3mx, (long long) board[k][l]);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n\n    // long long best(vector<int> &r1, vector<int> &r2, vector<int> &r3, int m) {\n    //     vector<int> l1mx = r1;\n    //     vector<int> l2mx = r2;\n    //     vector<int> l3mx = r3;\n    //     for(int i = 1; i < m; i++) {\n    //         l1mx[i] = max(l1mx[i - 1], r1[i]);\n    //         l2mx[i] = max(l2mx[i - 1], r2[i]);\n    //         l3mx[i] = max(l3mx[i - 1], r3[i]);\n    //     }\n    //     long long ans = INT_MIN;\n    //     long long r1mx = r1.back();\n    //     long long r2mx = r2.back();\n    //     long long r3mx = r3.back();\n    //     for(int i = m - 2; i > 0; i--) {\n    //         ans = max({ans, r1[i] + l2mx[i-1]+ r3mx, r1[i] + l3mx[i-1] + r2mx, r2[i] + l3mx[i-1]+ r1mx, r2[i] + l1mx[i-1] + r3mx, r3[i] + l1mx[i-1]+ r2mx, r3[i] + l2mx[i-1] + r1mx});\n    //         r1mx = max(r1mx, (long long) r1[i]);\n    //         r2mx = max(r2mx, (long long) r2[i]);\n    //         r3mx = max(r3mx, (long long) r3[i]);\n    //     }\n\n    //     return ans;\n    // }\n};",
    "submit_ts": "1723907940",
    "subm_id": "1359131182"
}