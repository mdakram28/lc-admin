{
    "username": "mejarkumar2003",
    "submission": "class Solution {\npublic:\n        int bfs(int src, int n, vector<vector<int>>&adj, vector<int>&ans){\n            \n            vector<int> dist(n+1,-1);\n            \n            queue<int>q;\n            q.push(src);\n            dist[src]=1;\n            int last =src;\n            ans[src]=max(ans[src],dist[src]);\n            while(!q.empty()){\n                int node = q.front();\n                last = node;\n                q.pop();\n                for(auto nbr:adj[node]){\n                    if(dist[nbr]==-1){\n                        dist[nbr]=dist[node]+1;\n                        ans[nbr] = max(ans[nbr],dist[nbr]);\n                        q.push(nbr);\n                    }\n                }\n            }\n            return last;\n        }\n\n    \n    \n    \n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int m = edges2.size()+1;\n        int n = edges1.size()+1;\n        vector<vector<int>>adj1(n+1),adj2(m+1);\n        for(auto e:edges1){\n            adj1[e[0]].push_back(e[1]);\n            adj1[e[1]].push_back(e[0]);\n        }\n        for(auto e:edges2){\n            adj2[e[0]].push_back(e[1]);\n            adj2[e[1]].push_back(e[0]);\n        }\n        vector<int>ans1(n+1),ans2(m+1);\n        int node  = bfs(0,n,adj1,ans1);\n        node = bfs(node,n,adj1,ans1);\n        bfs(node,n,adj1,ans1);\n        int maxi = 0;\n        int s1=n,s2=m;\n        for(int i=0;i<n;i++){\n            ans1[i]-=1;\n            // cout<<ans1[i]<<\" \";\n            maxi = max(maxi,ans1[i]);\n            s1 = min(s1,ans1[i]);\n        }\n        // cout<<endl;\n        node  = bfs(0,m,adj2,ans2);\n        node = bfs(node,m,adj2,ans2);\n        bfs(node,m,adj2,ans2);\n        for(int i=0;i<m;i++){\n            ans2[i]-=1;\n             // cout<<ans2[i]<<\" \";\n            maxi = max(maxi,ans2[i]);\n            s2 = min(s2,ans2[i]);\n        }\n        // cout<<endl;\n        \n        int ans = max(s1+s2+1,maxi);\n        return ans;\n    }\n};",
    "submit_ts": "1719719890",
    "subm_id": "1304453211"
}