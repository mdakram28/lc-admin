{
    "username": "AathityanPandian",
    "submission": "from typing import List\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)      \n        h_pointer, v_pointer = 0, 0\n        horizontal_pieces, vertical_pieces = 1, 1\n        total_cost = 0\n        while h_pointer < len(horizontalCut) and v_pointer < len(verticalCut):\n            if horizontalCut[h_pointer] >= verticalCut[v_pointer]:\n                total_cost += horizontalCut[h_pointer] * vertical_pieces\n                horizontal_pieces += 1\n                h_pointer += 1\n            else:\n                total_cost += verticalCut[v_pointer] * horizontal_pieces\n                vertical_pieces += 1\n                v_pointer += 1\n        while h_pointer < len(horizontalCut):\n            total_cost += horizontalCut[h_pointer] * vertical_pieces\n            h_pointer += 1\n        while v_pointer < len(verticalCut):\n            total_cost += verticalCut[v_pointer] * horizontal_pieces\n            v_pointer += 1\n        return total_cost\n\n        ",
    "submit_ts": "1720925596",
    "subm_id": "1320260003"
}