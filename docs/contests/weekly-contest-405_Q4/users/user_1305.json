{
    "username": "dapu81000",
    "submission": "struct Trie{\n    int cost;\n    Trie *nxt[26];\n    Trie(){}\n    Trie(int c){\n        for(int i=0;i<26;i++) nxt[i]=NULL;\n        cost = c;\n    }\n};\nclass Solution {\npublic:\n    Trie *root;\n    void insert(string &st, int cost){\n        Trie *cur = root;\n        for(char ch:st){\n            int nxtid = ch-'a';\n            if(!cur->nxt[nxtid]){\n                cur->nxt[nxtid] = new Trie(INT_MAX);\n            }\n            cur = cur->nxt[nxtid];\n        }\n        cur->cost = min(cur->cost, cost);\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = words.size(), m = target.size();\n        vector<int> dp(m+1, INT_MAX);\n        dp[0] = 0;\n        root = new Trie(-1);\n        for(int i=0;i<n;i++){\n            insert(words[i], costs[i]);\n        }\n\n        for(int i=0;i<m;i++){\n            if(dp[i] == INT_MAX) continue;\n            Trie *cur = root;\n            for(int j=i;j<m;j++){\n                int nxtid = target[j]-'a';\n                if(!cur->nxt[nxtid]) break;\n                cur = cur->nxt[nxtid];\n                if(cur->cost != INT_MAX){\n                    dp[j+1] = min(dp[j+1], dp[i]+cur->cost);\n                }\n            }\n        }\n        return dp[m] == INT_MAX?-1:dp[m];\n    }\n};",
    "submit_ts": "1720323894",
    "subm_id": "1312386606"
}