{
    "username": "samliu12",
    "submission": "#include <bits/stdc++.h>\n#ifdef DEBUG\n#include \"debug.h\"\n#else\n#define dbg(x...)\n#endif\nusing namespace std;\n\nlong long fac(int n) {\n\treturn n == 0 ? 1 : n * fac(n - 1);\n}\n\nlong long nCk(int n, int k) {\n\tif (k == 0) return 1;\n    return ((long long)n * nCk(n - 1, k - 1)) / k;\n}\n\n// jump, jump, sub\n\nclass Solution {\npublic:\n    int waysToReachStair(int n) {\n        // we want to get from 1 -> n\n\t\t// the # of stair operations <= the # of jump operations + 1, and the order doesn't matter at all\n\t\t// let's iterate over the # of jump operations\n\t\tint jp = 0, ans = 0;\n\t\twhile (1) {\n\t\t\t// we land at 1 + total_jumps\n\t\t\t// can have b/w 0 and max_decrease decreases, so we land in [1 + total_jumps - max_decrease, 1 + total_jumps]\n\t\t\tint total_jumps = (1 << jp) - 1;\n\t\t\tint max_decrease = jp + 1;\n\t\t\tint lo = 1 + total_jumps - max_decrease;\n\t\t\tint hi = 1 + total_jumps;\n\t\t\tif (lo > n) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lo <= n && hi >= n) {\n\t\t\t\t// we do jp jumps\n\t\t\t\tint sub = 1 + total_jumps - n;\n\t\t\t\tif (sub == 0) {\n\t\t\t\t\tans += 1;\n\t\t\t\t} else {\n\t\t\t\t\tint individual_jumps = jp - sub + 1;\n\t\t\t\t\tint total_options = sub + individual_jumps;\n\t\t\t\t\tans += nCk(total_options, individual_jumps);\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t++jp;\n\t\t}\n\t\treturn ans;\n    }\n};",
    "submit_ts": "1716089201",
    "subm_id": "1261835904"
}