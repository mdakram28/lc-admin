{
    "username": "wu99",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int,int> cnt;\n        vector<int> diffs(nums.size()/2, 0);\n        for (int i = 0; i < nums.size()/2; i++) {\n            diffs[i] = abs(nums[i] - nums[nums.size()-1-i]);\n            cnt[diffs[i]]++;\n        }\n        unordered_map<int,int> cnt_min_diff;\n        for (auto it = cnt.begin(); it != cnt.end(); it++) {\n            int diff{it->first}, count{it->second};\n            if (cnt_min_diff.count(count) == 0)\n                cnt_min_diff[count] = diff;\n            else\n                cnt_min_diff[count] = min(cnt_min_diff[count], diff);\n        }\n        int ans{static_cast<int>(nums.size())/2};\n        for (auto it = cnt_min_diff.begin(); it != cnt_min_diff.end(); it++) {\n            int diff{it->second};\n            int tmp{0};\n            for (int i = 0; i < nums.size()/2; i++) {\n                if (diffs[i] == diff) continue;\n                else if (nums[i] + diff > k && nums[i] - diff < 0 &&\n                         nums[nums.size()-1-i] + diff > k && nums[nums.size()-1-i] - diff < 0)\n                         tmp += 2;\n                else tmp++;\n            }\n            ans = min(ans, tmp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489888",
    "subm_id": "1327466765"
}