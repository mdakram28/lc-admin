{
    "username": "user3460wU",
    "submission": "class Solution(object):\n    MOD=1000000007\n    MAX_INV=400\n    def numberOfPermutations(self, n, requirements):\n        \"\"\"\n        :type n: int\n        :type requirements: List[List[int]]\n        :rtype: int\n        \"\"\"\n        reqMap={}\n        for req in requirements:\n            reqMap[req[0]+1]=req[1]\n\n        cnt=[[0]*(self.MAX_INV+1) for _ in range(n + 1)]\n        cnt[0][0]=1\n        for length in range(1,n+1):\n            for inv in range(self.MAX_INV+1):\n                for newPos in range(length):\n                    prevInv = inv-newPos\n                    if prevInv>=0:\n                        cnt[length][inv]=(cnt[length][inv]+cnt[length-1][prevInv]) % self.MOD\n            if length in reqMap:\n                targetInv=reqMap[length]\n                for inv in range(self.MAX_INV+1):\n                    if inv != targetInv:\n                        cnt[length][inv] = 0\n        result=sum(cnt[n])%self.MOD\n        return result",
    "submit_ts": 1719070263.0
}