{
    "username": "taoz-kc",
    "submission": "from sortedcontainers import SortedDict,SortedList\n\nfrom bisect import bisect_right,insort_left,bisect_left\nfrom queue import Queue,LifoQueue,PriorityQueue\nimport math\nINF  = math.inf\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        c = defaultdict(list)\n        n = len(nums)\n        for i in range(n//2):\n            c[abs(nums[i] - nums[n-1-i])].append(max(nums[i],nums[n-1-i],k-nums[i],k-nums[n-1-i]))\n        ret = n\n        sl = SortedList([])\n        keys = sorted(list(c.keys()))\n        for k in keys:\n            t1 = sl.bisect_right(k-1)\n            ret = min(ret,n//2 -len(c[k]) + t1)\n            #print(k,c[k],t1,ret,sl)\n            for a in c[k]:\n                sl.add(a)\n        return ret",
    "submit_ts": "1721487219",
    "subm_id": "548308994"
}