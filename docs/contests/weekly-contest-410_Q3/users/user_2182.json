{
    "username": "Hydra-Ramesh",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    private static final int MOD = 1_000_000_007;\n    \n    public int countOfPairs(int[] values) {\n        int size = values.length;\n        // Create a 3D array for memoization with size [size][51][51]\n        long[][][] memo = new long[size][51][51];\n        for (long[][] matrix : memo) {\n            for (long[] row : matrix) {\n                Arrays.fill(row, -1);  // Initialize all values to -1\n            }\n        }\n        \n        // Helper method to perform the computation\n        return (int) solve(values, 0, 0, values[0], memo);\n    }\n\n    private long solve(int[] values, int index, int val1, int val2, long[][][] memo) {\n        if (index >= values.length) return 1;  // Base case: end of the array\n        if (memo[index][val1][val2] != -1) return memo[index][val1][val2];  // Check memoization\n        \n        long result = 0;\n        for (int i = val1; i <= values[index]; i++) {\n            for (int j = val2; j >= 0; j--) {\n                if (i + j == values[index]) {\n                    result = (result + solve(values, index + 1, i, j, memo)) % MOD;\n                }\n            }\n        }\n        memo[index][val1][val2] = result;  // Memoize the result\n        return result;\n    }\n}",
    "submit_ts": "1723346443",
    "subm_id": "1351577688"
}