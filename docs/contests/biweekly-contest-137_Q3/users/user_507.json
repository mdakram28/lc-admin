{
    "username": "YoloTingOP",
    "submission": "class Solution {\n    private boolean fun(int arr1,int arr2,int m){\n        int x1 = arr1/m;\n        int y1 = arr1%m;\n        int x2 = arr2/m;\n        int y2 = arr2%m;\n        if(x1==x2||y1==y2){\n            return false;\n        }\n        return true;\n    }\n    public long maximumValueSum(int[][] board) {\n        long ans = Long.MIN_VALUE;\n        List<int[]> list = new ArrayList<>();\n        int n = board.length;\n        int m = board[0].length;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                list.add(new int[]{board[i][j],i*m+j});\n            }\n        }\n        Collections.sort(list, new Comparator<int[]>() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                return o2[0]-o1[0];\n            }\n        });\n        int length = list.size();\n        for(int i=0;i<length;i++){\n            if(ans>= 3L *list.get(i)[0]){\n                break;\n            }\n            for(int j=i+1;j<length;j++){\n                for(int k=j+1;k<length;k++){\n                    boolean flag = fun(list.get(i)[1],list.get(j)[1],m);\n                    flag = flag && fun(list.get(i)[1],list.get(k)[1],m);\n                    flag = flag && fun(list.get(j)[1],list.get(k)[1],m);\n                    if(flag){\n                        ans = Math.max((long) list.get(i)[0] + list.get(j)[0] + list.get(k)[0],ans);\n                        break;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723907370",
    "subm_id": "556325128"
}