{
    "username": "timetravel_",
    "submission": "class Node {\npublic:\n    int value;\n    Node* next;\n    Node(int val) : value(val), next(nullptr) {}\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int numNodes, vector<vector<int>>& queries) {\n        vector<Node *> nodes(numNodes + 1);\n        int remainingNodes = numNodes;\n        Node* headNode = new Node(0);\n        nodes[0] = headNode;\n        Node* currentNode = headNode;\n\n        int i = 1;\n        while (i < numNodes) {\n            currentNode->next = new Node(i);\n            currentNode = currentNode->next;\n            nodes[i] = currentNode;\n            i++;\n        }\n\n        vector<int> result;\n        int queryIndex = 0;\n        while (queryIndex < queries.size()) {\n            const auto& query = queries[queryIndex];\n            int startIndex = query[0];\n            int endIndex = query[1];\n            Node* startNode = nodes[startIndex];\n            Node* endNode = nodes[endIndex];\n            if (startNode != nullptr && endNode != nullptr && startIndex != endIndex) {\n                Node* tempNode = startNode->next;\n                while (tempNode != nullptr && tempNode != endNode) {\n                    remainingNodes--;\n                    Node* nextNode = tempNode->next;\n                    nodes[tempNode->value] = nullptr;\n                    tempNode->next = nullptr;\n                    tempNode = nextNode;\n                }\n                startNode->next = endNode;\n            }\n\n            result.push_back(remainingNodes - 1);\n            queryIndex++;\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1722743056",
    "subm_id": "1343783310"
}