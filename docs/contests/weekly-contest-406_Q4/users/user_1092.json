{
    "username": "Karan-nigam96",
    "submission": "class Solution {\npublic:\n    long long sol(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int x = m-1;\n        int y = n-1;\n        int h = 0, v = 0;\n        int hp = 1, vp = 1;\n        long long cnt = 0;\n\n        while (h < x && v < y) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                cnt += horizontalCut[h] * vp;\n                hp++;\n                h++;\n            } else {\n                cnt += verticalCut[v] * hp;\n                vp++;\n                v++;\n            }\n        }\n\n        while (h < x) {\n            cnt += horizontalCut[h] * vp;\n            h++;\n        }\n\n        while (v < y) {\n            cnt += verticalCut[v] * hp;\n            v++;\n        }\n\n        return cnt;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        return sol(m,n,horizontalCut,verticalCut);\n    }\n};",
    "submit_ts": "1720925756",
    "subm_id": "1320265203"
}