{
    "username": "VimT",
    "submission": "impl Solution {\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let m = grid.len();\n        let n = grid[0].len();\n        let mut result = 0;\n        for i in 0..m / 2 {\n            for j in 0..n / 2 {\n                let a = grid[i][j];\n                let b = grid[m - 1 - i][j];\n                let c = grid[i][n - 1 - j];\n                let d = grid[m - 1 - i][n - 1 - j];\n                result += match a + b + c + d {\n                    1 => 1,\n                    2 => 2,\n                    3 => 1,\n                    _ => 0\n                };\n            }\n        }\n        let mut one = 0;\n        let mut diff = 0;\n        if m & 1 == 1 {\n            for j in 0..n / 2 {\n                let a = grid[m / 2][j];\n                let b = grid[m / 2][n - 1 - j];\n                if a != b {\n                    diff += 1;\n                } else if a == 1 {\n                    one += 2;\n                }\n            }\n        }\n        if n & 1 == 1 {\n            for i in 0..m / 2 {\n                let a = grid[i][n / 2];\n                let b = grid[m - 1 - i][n / 2];\n                if a != b {\n                    diff += 1;\n                } else if a == 1 {\n                    one += 2;\n                }\n            }\n        }\n        if one % 4 == 2 && diff == 0 {\n            diff += 2;\n        }\n        result += diff;\n        if m & 1 == 1 && n & 1 == 1 {\n            result += grid[m / 2][n / 2];\n        }\n        result\n    }\n}",
    "submit_ts": "1722697936",
    "subm_id": "552268536"
}