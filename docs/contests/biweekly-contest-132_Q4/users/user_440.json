{
    "username": "hprasad13579",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        vector<int>temp(k+1,-1); \n        vector<map<int,int>>m(k+1); \n        vector<vector<int>>dp(nums.size(),vector<int>(k+1,1)); \n        int res=1; \n        for(int idx=0;idx<nums.size();idx++)\n\t    { \n            for(int jdx=0;jdx<=k;jdx++)\n\t        { \n                for(int q=0;q<jdx;q++)\n                    dp[idx][jdx]=max(dp[idx][jdx],1+temp[q]); \n                if(m[jdx].find(nums[idx])!=m[jdx].end())\n                    dp[idx][jdx]=max(dp[idx][jdx],1+m[jdx][nums[idx]]); \n                res=max(res,dp[idx][jdx]); \n            } \n            for(int a=0;a<=k;a++)\n\t        { \n                m[a][nums[idx]]=max(m[a][nums[idx]],dp[idx][a]);\n                temp[a]=max(temp[a],dp[idx][a]);      \n            } \n        } \n        return res; \n    }\n};",
    "submit_ts": "1717862249",
    "subm_id": "1281816988"
}