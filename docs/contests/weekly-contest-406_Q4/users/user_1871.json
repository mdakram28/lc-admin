{
    "username": "shubhamusk",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<ll, char>> cuts;\n    \n        for (ll i = 0; i < m - 1; ++i) {\n            cuts.push_back({horizontalCut[i], 'H'});\n        }\n        for (ll j = 0; j < n - 1; ++j) {\n            cuts.push_back({verticalCut[j], 'V'});\n        }\n\n       \n        sort(cuts.begin(), cuts.end(), greater<pair<ll, char>>());\n\n        ll totalCost = 0;\n        ll horizontalSegments = 1;\n        ll verticalSegments = 1; \n\n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += cut.first * verticalSegments;\n                ++horizontalSegments;\n            } else {\n                totalCost += cut.first * horizontalSegments;\n                ++verticalSegments;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926204",
    "subm_id": "1320279057"
}