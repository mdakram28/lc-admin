{
    "username": "Sonu_710",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long curr=count(nums,k);\n        long next=count(nums,k+1);  \n        System.out.println(curr+\" \"+next);\n        return curr-next; \n    }\n    static long count(int[] nums,int k)\n    {\n        int[] bits=new int[32];\n        long ans=0;\n        int start=0;\n        int and=Integer.MAX_VALUE;\n        for(int i=0;i<nums.length;i++)\n        {\n            and(bits,nums[i]);\n            while(getNum(bits,i-start+1)<k && start<=i)\n            {\n                \n                remove(bits,nums[start++]);\n            }\n            // if(getNum(bits,i-start+1)==k)\n            ans+=(i-start)+1;\n            // System.out.println(getNum(bits,i-start+1)+\" \"+i+\" \"+start);\n        }\n        \n        return ans;\n    }\n    static void and(int[] bits,int n)\n    {\n        int[] nums=new int[32];\n        int index=0;\n        while(n>0)\n        {\n            nums[index++]=n%2;\n            n=n/2;\n        }\n        for(int i=0;i<32;i++)\n        {\n            bits[i]+=nums[i];\n        }\n    }\n    static void remove(int[] bits,int n)\n    {\n        int[] nums=new int[32];\n        int index=0;\n        while(n>0)\n        {\n            nums[index++]=n%2;\n            n=n/2;\n        }\n        for(int i=0;i<32;i++)\n        {\n            bits[i]-=nums[i];\n        }\n    }\n    static int getNum(int[] bits,int size)\n    {\n        int ans=0;\n        for(int i=0;i<32;i++)\n        {\n            if(bits[i]==size)\n            ans+=(int)Math.pow(2,i);\n        }\n        return ans;\n    }\n\n}",
    "submit_ts": "1720278268",
    "subm_id": "1311701745"
}