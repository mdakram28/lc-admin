{
    "username": "vhlpZARocz",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n#         m, n = len(grid), len(grid[0])\n#         cnt = 0\n#         for i in range(m):\n#             for j in range(n):\n#                 if grid[i][j] == 1:\n#                     cnt += 1\n#         if m * n < 4:\n#             return cnt\n        \n#         cnt_r, cnt_l = 0, 0\n#         for i in range(m):\n#             for j in range(n//2):\n#                 if grid[i][j] != grid[i][n-1-j]:\n#                     cnt_r += 1\n#         for j in range(n):\n#             for i in range(m//2):\n#                 if grid[i][j] != grid[m-1-i][j]:\n#                     cnt_l += 1\n#         res = 0\n#         # col\n#         # if n % 2 == 0:\n#         print(cnt_r, cnt_l)\n#         if cnt + cnt_r >= 4:\n#             res = min((cnt + cnt_r) % 4, 4 - (cnt + cnt_r) % 4) + cnt_r\n#         else:\n#             res = 4 - (cnt + cnt_r) % 4 + cnt_r \n#         print(res)\n#         if cnt + cnt_l >= 4:\n#             res = min(res, min((cnt + cnt_l) % 4, 4 - (cnt + cnt_l) % 4) + cnt_l)\n#         else:\n#             res = min(res, 4 - (cnt + cnt_l) % 4 + cnt_l)\n#         print(res)\n#         # res = min(4 - (cnt + cnt_r) % 4 + cnt_r, 4 - (cnt + cnt_l) % 4 + cnt_l)\n        \n        \n        \n        \n        m, n = len(grid), len(grid[0])\n        lookup = defaultdict(int)\n        res = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                cc = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j]\n                res += min(cc, 4 - cc)\n        cnt_one = 0\n        cnt = 0\n        if m % 2 == 1:\n            for j in range(n//2):\n                if grid[m//2][j] != grid[m//2][n-1-j]:\n                    cnt += 1\n                if grid[m//2][j] == 1:\n                    cnt_one += 1\n                if grid[m//2][n-1-j] == 1:\n                    cnt_one += 1\n        if n % 2 == 1:\n            for i in range(m//2):\n                if grid[i][n//2] != grid[m-1-i][n//2]:\n                    cnt += 1\n                if grid[i][n//2] == 1:\n                    cnt_one += 1\n                if grid[m-1-i][n//2] == 1:\n                    cnt_one += 1\n        if m % 2 == 1 and n % 2 == 1 and grid[m//2][n//2] == 1:\n            res += 1\n        # print(res, cnt_one, cnt)\n        if cnt >= 1 or cnt_one % 4 != 0:\n            for j in range(0, cnt + 1):\n                if (cnt_one + j  - (cnt - j)) % 4 == 0:\n                    res += cnt\n                    break\n            else:\n                res += cnt + 2\n                \n        \n        \n        return res\n                ",
    "submit_ts": "1722699098",
    "subm_id": "552274072"
}