{
    "username": "anjkk01",
    "submission": "class Solution {\npublic:\n    map<vector<int> ,int> dp;\n    int chk(int pos,int k,int jmp,int flag){\n        if(pos>k+1)return 0;\n        if(dp.find({pos,jmp,flag})!=dp.end())return dp[{pos,jmp,flag}];\n        if(flag){\n            if(pos==k)\n                return dp[{pos,jmp,flag}] = 1 + chk(pos+ (1<<jmp) , k ,jmp+1,0);\n            else\n                return dp[{pos,jmp,flag}] = chk(pos+ (1<<jmp) , k ,jmp+1,0);\n        }\n        else{\n            if(pos==k)\n                return dp[{pos,jmp,flag}] = 1 + chk(pos+ (1<<jmp) , k ,jmp+1,0) + chk(pos-1 , k ,jmp,1);\n            else\n                return dp[{pos,jmp,flag}] = chk(pos+ (1<<jmp) , k ,jmp+1,0) + chk(pos-1 , k ,jmp,1);\n        }\n    }\n    int waysToReachStair(int k) {\n        return chk(1,k,0,0);\n    }\n};",
    "submit_ts": "1716087208",
    "subm_id": "1261776342"
}