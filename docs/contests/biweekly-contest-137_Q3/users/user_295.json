{
    "username": "Shawn",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        b = board\n        m,n = len(b), len(b[0])\n        \n        q = [(b[i][j],i,j) for i in range(m) for j in range(n)]\n        \n        # heapq.heapify(q)\n        \n        q.sort(reverse=True)\n        \n        print(q)\n    \n        \n        \n        def cal(q):\n            k1,i1,j1 = q[0]\n            k2,i2,j2 = q[1]\n            \n            res = -10**15\n            if i1!=i2 and j1!=j2:\n                return k1+k2\n            \n            for idx in range(2,len(q)):\n                k3, i3,j3 = q[idx]\n                if i3!=i1 and j3!=j1:\n                    res = max(res, k1+k3)\n                if i3!=i2 and j3!=j2:\n                    res = max(res, k2+k3)\n            \n            return res\n                \n        \n        res = -10**15\n        for i in range(9):\n            k1,i1,j1 = q[i]\n            res = max(res, k1+cal([r for r in q if r[1]!=i1 and r[2]!=j1]))\n            \n        \n        return res",
    "submit_ts": "1723908721",
    "subm_id": "556332473"
}