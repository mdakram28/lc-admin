{
    "username": "keshav02",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut)  {\n    sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>()); \n    int horizontal_pieces = 1;\n    int vertical_pieces = 1;\n    long long total_cost = 0;\n    int i = 0, j = 0;\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n        if (horizontalCut[i] > verticalCut[j]) {\n            total_cost += horizontalCut[i] * vertical_pieces;\n            horizontal_pieces++;\n            i++;\n        } else {\n            total_cost += verticalCut[j] * horizontal_pieces;\n            vertical_pieces++;\n            j++;\n        }\n    }\n    while (i < horizontalCut.size()) {\n        total_cost += horizontalCut[i] * vertical_pieces;\n        i++;\n    }\n    while (j < verticalCut.size()) {\n        total_cost += verticalCut[j] * horizontal_pieces;\n        j++;\n    }\n    \n    return total_cost;\n}\n};",
    "submit_ts": "1720926015",
    "subm_id": "1320273349"
}