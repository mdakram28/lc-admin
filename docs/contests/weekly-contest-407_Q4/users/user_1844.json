{
    "username": "csz-leetcode",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0L;\n        int n = nums.length;\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = nums[i] - target[i];\n        }\n\n        long pre = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] * pre == 0) {\n                ans += Math.abs(pre);\n            } else if (arr[i] * pre < 0) {\n                ans += Math.abs(pre);\n            } else {\n                if (pre > 0 && pre > arr[i]) {\n                    ans += pre - arr[i];\n                }\n                if (pre < 0 && pre < arr[i]) {\n                    ans += arr[i] - pre;\n                }\n            }\n            pre = arr[i];\n        }\n\n        return ans + Math.abs(pre);\n    }\n}",
    "submit_ts": "1721533077",
    "subm_id": "548395954"
}