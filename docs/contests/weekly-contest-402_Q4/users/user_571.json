{
    "username": "se-ping-li-de-chao-yan-suan",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        peak = [0] * n\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                peak[i] = 1\n        tree = [0] * (n+1)\n        for i, x in enumerate(peak, start=1):\n            tree[i] += x\n            pa = i + (i & -i)\n            if pa <= n:\n                tree[pa] += tree[i]\n        \n        def prefix_sum(i):\n            s = 0\n            while i:\n                s += tree[i]\n                i -= i & -i\n            return s\n\n        def range_sum(left, right):\n            return prefix_sum(right) - prefix_sum(left)\n\n        def update(index, delta):\n            peak[index] += delta\n            index += 1\n            while index <= n:\n                tree[index] += delta\n                index += index & -index\n\n        # print(peak)\n        res = []\n        for q in queries:\n            if q[0] == 1:\n                left, right = q[1], q[2]\n                if right - left >= 2:\n                    res.append(range_sum(left+1, right))\n                else:\n                    res.append(0)\n            elif q[0] == 2:\n                index, val = q[1], q[2]\n                nums[index] = val\n                if index - 1 >= 1:\n                    new = nums[index - 1] > nums[index - 2] and nums[index - 1] > nums[index]\n                    delta = new - peak[index - 1]\n                    if delta != 0:\n                        update(index-1, delta)\n                if index + 1 < n - 1:\n                    new = nums[index + 1] > nums[index + 2] and nums[index + 1] > nums[index]\n                    delta = new - peak[index + 1]\n                    if delta != 0:\n                        update(index+1, delta)\n                if 1 <= index < n - 1:\n                    new = nums[index] > nums[index + 1] and nums[index] > nums[index - 1]\n                    delta = new - peak[index]\n                    if delta != 0:\n                        update(index, delta)\n            # print(peak)\n            # print(tree)\n            # print(range_sum(1, 1))\n\n        return res\n\n\n\n\n",
    "submit_ts": "1718507931",
    "subm_id": "539784325"
}