{
    "username": "mnaoumov",
    "submission": "public class Solution\n{\n    public int MinFlips(int[][] grid)\n    {\n        var m = grid.Length;\n        var n = grid[0].Length;\n\n        var flips = 0;\n        var oneCount = 0;\n        var hasSwitchingPair = false;\n\n        for (var row = 0; row <= (m - 1) / 2; row++)\n        {\n            for (var column = 0; column <= (n - 1) / 2; column++)\n            {\n                var isMiddleRow = row == m - 1 - row;\n                var isMiddleColumn = column == n - 1 - column;\n\n                var value = grid[row][column];\n\n                if (isMiddleRow && isMiddleColumn)\n                {\n                    if (value == 1)\n                    {\n                        flips++;\n                    }\n\n                    continue;\n                }\n\n                var values = new List<int> { value };\n\n                if (!isMiddleRow)\n                {\n                    values.Add(grid[m - row - 1][column]);\n                }\n\n                if (!isMiddleColumn)\n                {\n                    values.Add(grid[row][n - column - 1]);\n                }\n\n                if (!isMiddleRow && !isMiddleColumn)\n                {\n                    values.Add(grid[m - row - 1][n - column - 1]);\n                }\n\n                var count = values.Count(other => other == value);\n                flips += Math.Min(count, values.Count - count);\n\n                if (values.Count != 2)\n                {\n                    continue;\n                }\n\n                if (value == 1)\n                {\n                    oneCount += 2;\n                }\n\n                if (count == 1)\n                {\n                    hasSwitchingPair = true;\n                }\n            }\n        }\n\n\n        if (oneCount % 4 == 2 && !hasSwitchingPair)\n        {\n            flips += 2;\n        }\n\n        return flips;\n    }\n}\n",
    "submit_ts": "1722698399",
    "subm_id": "1343179396"
}