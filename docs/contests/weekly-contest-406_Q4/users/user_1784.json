{
    "username": "funny-kirchb8p",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long sum = 0;\n        if (m == 1){\n            for (int i : verticalCut) {\n                sum += i;\n            }\n            return sum;\n        }\n        if (n == 1){\n            for (int i : horizontalCut) {\n                sum += i;\n            }\n            return sum;\n        }\n        long rowNum = 0;\n        long colNum = 0;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int i = m-2, j = n-2;\n        while (i >= 0 && j >= 0){\n            int iNum = horizontalCut[i];\n            int jNum = verticalCut[j];\n            if (iNum > jNum || (iNum == jNum && m <= n)){\n                rowNum++;\n                sum += (long) iNum * (colNum + 1);\n                i--;\n            } else{\n              colNum++;\n              sum += (long) jNum * (rowNum + 1);\n              j--;\n            }\n        }\n        while (i >= 0){\n            sum += (long) horizontalCut[i] * (colNum + 1);\n            i--;\n        }\n        while (j >= 0){\n            sum += (long) verticalCut[j] * (rowNum + 1);\n            j--;\n        }\n        return sum;\n    }\n}",
    "submit_ts": "1720926454",
    "subm_id": "546446344"
}