{
    "username": "ostars",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut = sorted(horizontalCut, reverse=True)\n        verticalCut = sorted(verticalCut, reverse=True)\n        # \u884c\u548c\u5217\u5206\u522b\u88ab\u5207\u6210\u4e86\u51e0\u6b21\u4e86\n        row = col = 0\n        ans = i = j = 0\n        while i < m - 1 and j < n - 1:\n            if horizontalCut[i] >= verticalCut[j]:\n                ans += horizontalCut[i] * (col + 1)\n                row += 1\n                i += 1\n            else:\n                ans += verticalCut[j] * (row + 1)\n                col += 1\n                j += 1\n        \n        while i < m - 1:\n            ans += horizontalCut[i] * (col + 1)\n            i += 1\n        \n        while j < n - 1:\n            ans += verticalCut[j] * (row + 1)\n            j += 1\n\n        return ans",
    "submit_ts": "1720926494",
    "subm_id": "546446600"
}