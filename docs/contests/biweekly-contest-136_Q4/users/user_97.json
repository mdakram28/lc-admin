{
    "username": "shawnxi",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        e = defaultdict(list)\n        \n        for i,j in edges:\n            e[i].append(j)\n            e[j].append(i)\n        \n        n = len(edges)+1\n        \n        p = [-1]*n\n        ch = [[] for _ in p]\n        \n        \n        def put(i,pa):\n            if pa>=0:\n                ch[pa].append(i)\n            p[i]=pa\n            for j in e[i]:\n                if j!=pa:\n                    put(j,i)\n        \n        put(0, -1)\n        \n        @lru_cache(None)\n        def dep(i):\n            tmp = []\n            for j in ch[i]:\n                l = dep(j)\n                k = 0\n                if len(l)>0:\n                    k = l[0][0]\n                t = k+(1 if j%2 else 2)\n                tt = (t,j)\n                tmp.append(tt)\n                tmp.sort(reverse=True)\n                if len(tmp)>2:\n                    tmp = tmp[:2]\n                \n            return tmp\n        \n        \n        @lru_cache(None)\n        def top(i):\n            if i==0:\n                return 0\n            pa = p[i]\n            \n            l = dep(pa)\n            if len(l)>0 and l[0][1]==i:\n                l = l[1:]\n            k = 0\n            if len(l)>0:\n                k = l[0][0]\n            \n                \n            tmp = max(top(pa), k)\n            return tmp+(1 if pa%2 else 2)\n        \n        def cal(i):\n            l = dep(i)\n            k = 0\n            if len(l)>0:\n                k = l[0][0]\n            return max(k,top(i))\n        \n        return [cal(i) for i in range(n)]\n            \n            \n            \n            \n            \n            \n            \n            \n        \n        \n                ",
    "submit_ts": "1722698404",
    "subm_id": "552270685"
}