{
    "username": "RaghavWadhwa16",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n\n        int ans = 0;\n        for(int i=0;i<n/2;i++){\n            for(int j=0,k=m-1;j<k;j++,k--){\n                if(j==k){\n                    continue;\n                }\n                else{\n                    int zeros = 0,ones = 0;\n                    if(grid[i][j]==0){\n                        zeros++;\n                    }else{\n                        ones++;\n                    }\n\n                    if(grid[n-1-i][j]==0){\n                        zeros++;\n                    }else{\n                        ones++;\n                    }\n\n                    if(grid[i][k]==0){\n                        zeros++;\n                    }else{\n                        ones++;\n                    }\n\n                    if(grid[n-1-i][k]==0){\n                        zeros++;\n                    }else{\n                        ones++;\n                    }\n\n                    ans += min(zeros,ones);\n                }\n            }\n        }\n\n        // int ones = 0;\n        // int zeroes = 0;\n\n         \n        int possible = 0;\n        int count = 0;\n\n\n        if (m % 2 != 0) {\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[j][m/2] != grid[n-j-1][m/2]) {\n                    ans += 1;\n                    possible += 1;\n                } else {\n                    if (grid[j][m/2] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n\n        // Handle the middle column if n is odd\n        if (n % 2 != 0) {\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[n/2][i] != grid[n/2][m-i-1]) {\n                    ans += 1;\n                    possible += 1;\n                } else {\n                    if (grid[n/2][i] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        \n        // Adjust ans based on count and possible\n        if (possible == 0 && count % 2 != 0) {\n            ans += 2;\n        }\n\n\n\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699840",
    "subm_id": "1343223977"
}