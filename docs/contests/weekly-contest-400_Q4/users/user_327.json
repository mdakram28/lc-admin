{
    "username": "vinay_7516",
    "submission": "class segmenttree{\n    public:\n        vector<int> arr;\n        segmenttree(vector<int>&v,int n){\n            arr.assign(4*n+1,0);\n            build_tree(0,0,n-1,v);\n        }\n\n        int getand(int ind,int i,int j,int st,int end){\n            if(st>j || end<i) return INT_MAX;\n            if(st>=i && end<=j){\n                return arr[ind];\n            }\n            int mid = (st+end)/2;\n\n            return (getand(2*ind+1,i,j,st,mid)&getand(2*ind+2,i,j,mid+1,end));\n        }\n\n        void build_tree(int ind,int st,int end,vector<int>&v){\n            if(st==end){\n                arr[ind] = v[st];\n                return ;\n            }\n            int mid = (st+end)/2;\n            build_tree(2*ind+1,st,mid,v);\n            build_tree(2*ind+2,mid+1,end,v);\n            arr[ind] = (arr[2*ind+1]&arr[2*ind+2]);\n        }\n\n};\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        segmenttree t(nums,n);\n        int ans = INT_MAX;\n        for(int i=0;i<n;i++){\n            ans = min(ans,abs(t.getand(0,i,n-1,0,n-1)-k));\n            int l = i,h = n - 1;\n            while(l<=h){\n                int mid = (l+h)/2;\n                int and_val = t.getand(0,i,mid,0,n-1);\n                if(and_val==k){\n                    ans = 0;\n                    break;\n                }\n                if(and_val>k){\n                    ans = min(ans,and_val-k);\n                    l = mid + 1;\n                }\n                else{\n                    ans = min(ans,k-and_val);\n                    h = mid - 1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717298382",
    "subm_id": "1274777065"
}