{
    "username": "criss_cross",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        if (colors.size() < k)\n            return 0; // If array size is less than k, no groups possible\n\n        int pairs = 0;\n        int size = 1;\n\n        // Loop through the array\n        for (int i = 1; i < colors.size(); i++) {\n            if (colors[i] == colors[i - 1]) {\n                size = 1; // Reset size if colors are the same\n            } else {\n                size++; // Increment size if colors are different\n            }\n\n            if (size == k) {\n                pairs++; // Count the group if size reaches k\n                size--;  // Reduce size to continue checking for next groups\n            }\n        }\n\n\n        if (colors[0] != colors.back()) {\n\n            size++;\n            if (size == k) {\n                pairs++;\n                size--;\n            }\n            for (int i = 1; i < k - 1; i++) {\n                if (colors[i] == colors[i - 1]) {\n                    size = 1; // Reset size if colors are the same\n                } else {\n                    size++; // Increment size if colors are different\n                }\n\n                if (size == k) {\n                    pairs++; // Count the group if size reaches k\n                    size--;  // Reduce size to continue checking for next groups\n                }\n            }\n        }\n\n        return pairs;\n    }\n};\n",
    "submit_ts": "1720277801",
    "subm_id": "1311680630"
}