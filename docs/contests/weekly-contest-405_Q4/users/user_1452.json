{
    "username": "2210030218",
    "submission": "class Solution {\npublic:\n    struct WordNode \n    {\n        map<char, WordNode*> next;\n        vector<pair<int, int>> endings;\n    };\n\n    class WordTree {\n    public:\n        WordNode* begin;\n        WordTree() \n        {\n            begin = new WordNode();\n        }\n\n        void addWord(string& s, int idx, int price) \n        {\n            WordNode* current = begin;\n            for (char letter : s) \n            {\n                if (current->next.find(letter) == current->next.end())\n                    current->next[letter] = new WordNode();\n                current = current->next[letter];\n            }\n            current->endings.push_back({idx, price});\n        }\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n    {\n        int length = target.length();\n        vector<int> minCost(length + 1, numeric_limits<int>::max());\n        minCost[0] = 0;\n\n        WordTree wordTree;\n        for (int i = 0; i < words.size(); ++i) \n            wordTree.addWord(words[i], i, costs[i]);\n\n        for (int start = 0; start < length; ++start) \n        {\n            if (minCost[start] == numeric_limits<int>::max()) continue;\n            WordNode* current = wordTree.begin;\n            for (int end = start; end < length; ++end) \n            {\n                if (current->next.find(target[end]) == current->next.end()) break;\n                current = current->next[target[end]];\n                for (auto& entry : current->endings) \n                {\n                    int wordIdx = entry.first;\n                    int wordPrice = entry.second;\n                    int wordLen = words[wordIdx].length();\n                    if (start + wordLen <= length) \n                        minCost[start + wordLen] = min(minCost[start + wordLen], minCost[start] + wordPrice);\n                }\n            }\n        }\n        return minCost[length] == numeric_limits<int>::max() ? -1 : minCost[length];\n    }\n};",
    "submit_ts": "1720323330",
    "subm_id": "1312372951"
}