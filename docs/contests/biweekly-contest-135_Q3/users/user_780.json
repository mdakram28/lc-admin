{
    "username": "nishka_shrimali",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& numbers, int limit) {\n        map<int, vector<int>> differenceMap;\n        vector<int> maxValuesList;\n        \n        int totalNumbers = numbers.size();\n        for (int i = 0; i < totalNumbers / 2; ++i) {\n            int leftNumber = numbers[i], rightNumber = numbers[totalNumbers - i - 1];\n            int difference = abs(leftNumber - rightNumber);\n            int maxValue = max({leftNumber, rightNumber, limit - leftNumber, limit - rightNumber});\n            \n            differenceMap[difference].push_back(maxValue);\n            maxValuesList.push_back(maxValue);\n        }\n        \n        int minOperationsResult = totalNumbers;\n        sort(maxValuesList.begin(), maxValuesList.end());\n        \n        for (const auto& entry : differenceMap) {\n            int difference = entry.first;\n            int count = lower_bound(maxValuesList.begin(), maxValuesList.end(), difference) - maxValuesList.begin();\n            int operations = count * 2 + (totalNumbers / 2 - count);\n            \n            for (const auto& maxValue : entry.second) {\n                operations -= (maxValue < difference)? 2 : 1;\n            }\n            \n            minOperationsResult = min(minOperationsResult, operations);\n        }\n        \n        return minOperationsResult;\n    }\n};",
    "submit_ts": "1721489044",
    "subm_id": "1327441133"
}