{
    "username": "Cipher_07",
    "submission": "class Trie {\npublic:\n    struct Node {\n        Node *link[26];\n        int cost;\n        bool is_end;\n\n        Node() {\n            for (int i = 0; i < 26; i++)\n                link[i] = nullptr;\n            cost = 1e9;\n            is_end = 0;\n        }\n\n        void set(int i) {\n            link[i] = new Node();\n        }\n\n        Node *get(int i) {\n            return link[i];\n        }\n    };\n\n    Node *root;\n    Trie() {\n        root = new Node();\n    }\n\n    void insert(string &s, int c) {\n        auto ptr = root;\n        for (char ch : s) {\n            if (!ptr->get(ch - 'a'))\n                ptr->set(ch - 'a');\n            ptr = ptr->get(ch - 'a');\n        }\n\n        ptr->is_end = 1;\n        ptr->cost = min(c, ptr->cost);\n    }\n};\n\nint dp[50000];\n\nclass Solution {\n    Trie t;\n\n    int solve(string &s, int i) {\n        if (i == s.size())\n            return 0;\n\n        if(dp[i] != -1)\n            return dp[i];\n\n        int ans = 1e9;\n        auto ptr = t.root;\n        for (int j = i; j < s.size(); j++) {\n            if (!ptr->get(s[j] - 'a'))\n                break;\n            ptr = ptr->get(s[j] - 'a');\n            if (ptr->is_end)\n                ans = min(ans, ptr->cost + solve(s, j + 1));\n        }\n\n        return dp[i] = ans;\n    }\n\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        for (int i = 0; i < words.size(); i++)\n            t.insert(words[i], costs[i]);\n\n        for(int i = 0; i < target.size(); i++)\n            dp[i] = -1;\n        int ans = solve(target, 0);\n        if (ans < 1e9)\n            return ans;\n        return -1;\n    }\n};",
    "submit_ts": "1720320762",
    "subm_id": "1312303829"
}