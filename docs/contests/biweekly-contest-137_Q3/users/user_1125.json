{
    "username": "nkb_xyz",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    ll dp[101][102][102];\n    \n    vector<vector<int>> temp;\n    ll f(int ind,int ind1,int ind2,vector<vector<int>> &board){\n        int n = board.size(),m = board[0].size();\n        ll ans = LLONG_MIN;\n        if(ind == n-1){\n            if(ind1 == -1 || ind2 == -1) return -1e14;\n            for(int i = 0;i<3;i++){\n                if(ind1 != temp[ind][i] && ind2 != temp[ind][i]){\n                    return dp[ind][ind1 + 1][ind2+1] = board[ind][temp[ind][i]];\n                }\n            }\n        }\n        if(dp[ind][ind1 + 1][ind2 + 1] != 1e14) return dp[ind][ind1+1][ind2+1];\n        if(ind1 != -1 && ind2 != -1){\n            for(int i = 0;i<3;i++){\n                if(ind1 != temp[ind][i] && ind2 != temp[ind][i]){\n                    ans = max(ans,1LL*board[ind][temp[ind][i]]);\n                    break ;\n                }\n            }\n            return dp[ind][ind1+1][ind2+1] = max(ans,f(ind+1,ind1,ind2,board));\n        }\n        else if(ind1 != -1){\n            for(int i = 0;i<3;i++){\n               if(ind1 != temp[ind][i]){\n                   ans = max(ans,board[ind][temp[ind][i]] + f(ind+1,ind1,temp[ind][i],board));\n                }\n            }\n            ans = max(ans, f(ind + 1,ind1,ind2,board));\n            return dp[ind][ind1+1][ind2+1] = ans;\n        }\n        \n        for(int i = 0;i<3;i++){\n             if(ind1 != temp[ind][i]){\n                   ans = max(ans,board[ind][temp[ind][i]] + f(ind+1,temp[ind][i],ind2,board));\n               }\n            }\n        ans = max(ans, f(ind + 1,ind1,ind2,board));\n        return dp[ind][ind1+1][ind2+1] = ans;\n        \n        \n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(),m = board[0].size();\n        temp.resize(n,vector<int>(3));\n        for(int i = 0;i<n;i++){\n            vector<pair<int,int>> vec;\n            for(int j = 0;j<m;j++){\n                vec.push_back({board[i][j],j});\n            }\n            sort(vec.rbegin(),vec.rend());\n            temp[i][0] = vec[0].second;\n            temp[i][1] = vec[1].second;\n            temp[i][2] = vec[2].second;\n        }\n        for(int i = 0;i<101;i++){\n            for(int j = 0;j<102;j++){\n                for(int k = 0;k<102;k++){\n                    dp[i][j][k] = 1e14;\n                }\n            }\n        }\n        return f(0,-1,-1,board);\n    }\n};",
    "submit_ts": "1723909218",
    "subm_id": "1359184088"
}