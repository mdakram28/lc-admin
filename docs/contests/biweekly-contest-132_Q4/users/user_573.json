{
    "username": "fmota",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int n = a.size();\n        auto b = a;\n        sort(b.begin(), b.end());\n        b.erase(unique(b.begin(), b.end()), b.end());\n        for(int i = 0; i < n; i++){\n            a[i] = lower_bound(b.begin(), b.end(), a[i]) - b.begin();\n        }\n        using pii = pair<int, int>;\n        vector<pii> s;\n        for(int i = 0, j = 0; i < n; i = j){\n            while(j < n && a[i] == a[j]) j++;\n            s.emplace_back(a[i], j - i);\n        }\n        n = s.size();\n        k++;\n        vector<vector<int>> dp(n, vector<int>(k + 1, 0));\n        for(int i = 0; i < n; i++){\n            int lst = -1;\n            int mx = 0;\n            vector<int> cnt(n, 0);\n            for(int j = i; j >= 0; j--){\n                cnt[s[j].first] += s[j].second;\n                mx = max(mx, cnt[s[j].first]);\n                if(mx != lst){\n                    for(int z = 0; z < k; z++){\n                        dp[i][z + 1] = max(dp[i][z + 1], mx + (j ? dp[j - 1][z] : 0));\n                    }\n                    lst = mx;\n                }\n            }\n        }\n        return dp[n - 1][k];\n    }\n};",
    "submit_ts": "1717861009",
    "subm_id": "1281776687"
}