{
    "username": "CoderVinit28",
    "submission": "class Solution {\npublic:\n    map<vector<int>, int> dp;\n    int waysToReachStair(int k) {\n        dp.clear();\n        return helper(1, k, 0, true);\n    }\n    \n    int helper(int stair, int &k, int jump, bool goDown){\n        if( stair > k && ((stair - k) > 2 && jump > 2) ){\n            return 0;\n        }\n        vector<int> state = {stair, jump, goDown};\n        if( dp.find(state) == dp.end() ){\n            int ways = 0;\n            if( stair == k ) ways += 1;\n            if( goDown ){\n                ways += helper(stair-1, k, jump, false);\n            }\n            ways += helper(stair + (1<<jump), k, jump+1, true);\n            dp[state] = ways;\n        }\n        return dp[state];\n    }\n};",
    "submit_ts": "1716088081",
    "subm_id": "1261803366"
}