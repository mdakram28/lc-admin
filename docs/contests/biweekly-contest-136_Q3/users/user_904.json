{
    "username": "drexdelta",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        vector<vector<int>> g = grid;\n        \n        if(grid.size() == 0) return 0;\n        int n = grid.size() , m = grid[0].size();\n        \n        if(n == 1 && m==1) {\n            if(grid[0][0]) return 1;\n            return 0;\n        }\n        if(n==1) {\n            int mis , ones, zeroes;\n            mis = ones = zeroes = 0;\n            for(int i = 0 ; i < m/2 ; i++) {\n                if((g[0][i] == g[0][m-i-1]) && g[0][i]) ones++;\n                else if((g[0][i] == g[0][m-i-1]) && !g[0][i]) zeroes++;\n                else mis++;\n            }\n            \n            if(mis > 0) {\n                if((m&1) && g[0][m/2]) return mis + 1;\n                return mis;\n            }\n            int ans = 0;\n            if(ones % 2) ans = 2;\n            if((m&1) && g[0][m/2]) ans++;\n            return ans;\n        }\n        \n        if(m==1) {\n            vector<int> temp;\n            for(int i = 0 ; i < n ; i++) {\n                temp.push_back(g[i][0]);\n            }\n            vector<vector<int>>temp1;\n            temp1.push_back(temp);\n            return minFlips(temp1);\n        }\n        \n        \n        int ans = 0;\n        \n        // map<int,int> mp;\n        for(int i = 0 ; i < n/2 ; i++) {\n            for(int j = 0 ; j < m/2 ; j++) {\n                int x = 0;\n                if(grid[i][j])x++;\n                if(grid[i][m-j-1])x++;\n                if(grid[n-i-1][m-j-1])x++;\n                if(grid[n-i-1][j])x++;\n                // mp[x]++;\n                ans += min(x,4-x);\n            }\n        }\n        \n        if((m&1) && (n&1)) {\n            int ones, zeroes, mis;\n            ones = zeroes = mis = 0;\n            for(int i = 0 ; i < n/2 ; i++) {\n                if((g[i][m/2] == g[n-i-1][m/2]) && g[i][m/2]) ones++;\n                else if((g[i][m/2] == g[n-i-1][m/2]) && !g[i][m/2]) zeroes++;\n                else mis++;\n            }\n            \n            for(int i = 0 ; i < m/2 ; i++) {\n                if((g[n/2][i] == g[n/2][m-i-1]) && g[n/2][i]) ones++;\n                else if((g[n/2][i] == g[n/2][m-i-1]) && !g[n/2][i]) zeroes++;\n                else mis++;\n            }\n            \n            if(mis > 0) {\n                if(g[n/2][m/2]) {\n                    return ans + mis + 1;\n                }\n                else return ans + mis;\n            }\n            if(ones & 1) {\n                ans += 2;\n            }\n            \n            if(g[n/2][m/2]) {\n                ans++;\n            }\n            return ans;\n            \n        } else if(n&1) {\n            vector<int> temp;\n            for(int i = 0 ; i < m ; i++) {\n                temp.push_back(g[n/2][i]);\n            }\n            vector<vector<int>>temp1;\n            temp1.push_back(temp);\n            ans += minFlips(temp1);\n        } else if(m&1) {\n            vector<int> temp;\n            for(int i = 0 ; i < n ; i++) {\n                temp.push_back(g[i][m/2]);\n            }\n            vector<vector<int>>temp1;\n            temp1.push_back(temp);\n            ans += minFlips(temp1);\n        }\n        \n        \n        \n        \n        return ans;\n    }\n};",
    "submit_ts": "1722698028",
    "subm_id": "1343167304"
}