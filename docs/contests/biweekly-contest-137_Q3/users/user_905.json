{
    "username": "Premsukh",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        long long n = b.size();\n        long long m = b[0].size();\n        long long maxi = LLONG_MIN;\n\n        // Store the top 3 maximum values and their row indices for each column\n        vector<vector<pair<long long, long long>>> v(m);\n        for (long long j = 0; j < m; j++) {\n            vector<pair<long long, long long>> temp;\n            for (long long i = 0; i < n; i++) {\n                temp.push_back({b[i][j], i});\n            }\n            // Sort in descending order and take the top 3 values\n            sort(temp.rbegin(), temp.rend());\n            for (long long i = 0; i < min(3LL, n); i++) {\n                v[j].push_back(temp[i]);\n            }\n        }\n        for (long long i = 0; i < m; i++) {\n            for (long long j = i + 1; j < m; j++) {\n                for (long long k = j + 1; k < m; k++) {\n                    for (auto& l : v[i]) {\n                        for (auto& p : v[j]) {\n                            for (auto& q : v[k]) {\n                                if (l.second != p.second && l.second != q.second && p.second != q.second) {\n                                    long long sum = l.first + p.first + q.first;\n                                    maxi = max(maxi, sum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxi;\n    }\n};\n",
    "submit_ts": "1723908327",
    "subm_id": "1359147973"
}