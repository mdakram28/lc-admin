{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    int n, m, ans, a[35][35], b[35][35];\n    const int inf = 1e9;\n    void work(){\n        int A[3] = {inf, inf, inf}, B[3] = {0, 0, 0}, C[3] = {inf, inf, inf}, D[3] = {0, 0, 0};\n        for(int i = 1; i <= n - 1; ++i){\n            int tmp = 0;\n            for(int j = 1; j <= m; ++j)\n                if(a[i][j] == 1)\n                    A[0] = std::min(A[0], i),\n                    B[0] = std::max(B[0], i),\n                    C[0] = std::min(C[0], j),\n                    D[0] = std::max(D[0], j);\n            //1\n            for(int k = i + 1; k <= n - 1; ++k){\n                A[1] = A[2] = C[1] = C[2] = inf;\n                B[1] = B[2] = D[1] = D[2] = 0;\n                for(int ii = i + 1; ii <= k; ++ii)\n                    for(int j = 1; j <= m; ++j)\n                        if(a[ii][j] == 1)\n                            A[1] = std::min(A[1], ii),\n                            B[1] = std::max(B[1], ii),\n                            C[1] = std::min(C[1], j),\n                            D[1] = std::max(D[1], j);\n                for(int ii = k + 1; ii <= n; ++ii)\n                    for(int j = 1; j <= m; ++j)\n                        if(a[ii][j] == 1)\n                            A[2] = std::min(A[2], ii),\n                            B[2] = std::max(B[2], ii),\n                            C[2] = std::min(C[2], j),\n                            D[2] = std::max(D[2], j);\n                tmp = 0;\n                for(int s = 0; s <= 2; ++s)\n                    if(A[s] <= B[s] && C[s] <= D[s])\n                        tmp += (B[s] - A[s] + 1) * (D[s] - C[s] + 1);\n                ans = std::min(ans, tmp);\n            }\n            //2\n            for(int j = 1; j <= m - 1; ++j){\n                A[1] = A[2] = C[1] = C[2] = inf;\n                B[1] = B[2] = D[1] = D[2] = 0;\n                for(int jj = 1; jj <= j; ++jj)\n                    for(int ii = i + 1; ii <= n; ++ii)\n                        if(a[ii][jj] == 1)\n                            A[1] = std::min(A[1], ii),\n                            B[1] = std::max(B[1], ii),\n                            C[1] = std::min(C[1], jj),\n                            D[1] = std::max(D[1], jj);\n                for(int jj = j + 1; jj <= m; ++jj)\n                    for(int ii = i + 1; ii <= n; ++ii)\n                        if(a[ii][jj] == 1)\n                            A[2] = std::min(A[2], ii),\n                            B[2] = std::max(B[2], ii),\n                            C[2] = std::min(C[2], jj),\n                            D[2] = std::max(D[2], jj);\n                tmp = 0;\n                for(int s = 0; s <= 2; ++s)\n                    if(A[s] <= B[s] && C[s] <= D[s])\n                        tmp += (B[s] - A[s] + 1) * (D[s] - C[s] + 1);\n                ans = std::min(ans, tmp);\n            }\n        }\n        return ;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        n = grid.size();\n        m = grid[0].size();\n        for(int i = 1; i <= n; ++i)\n            for(int j = 1; j <= m; ++j)\n                a[i][j] = grid[i - 1][j - 1];\n        ans = 1e9;\n        work();\n        for(int j = 1; j <= m; ++j)\n            for(int i = 1; i <= n / 2; ++i)\n                std::swap(a[i][j], a[n - i + 1][j]);\n        work();\n        for(int i = 1; i <= n; ++i)\n            for(int j = 1; j <= m; ++j)\n                b[j][i] = a[i][j];\n        std::swap(n, m);\n        for(int i = 1; i <= n; ++i)\n            for(int j = 1; j <= m; ++j)\n                a[i][j] = b[i][j];\n        work();\n        for(int j = 1; j <= m; ++j)\n            for(int i = 1; i <= n / 2; ++i)\n                std::swap(a[i][j], a[n - i + 1][j]);\n        work();\n        return ans;\n    }\n};",
    "submit_ts": "1719111469",
    "subm_id": "1297274217"
}