{
    "username": "tolbi",
    "submission": "#ifdef tolbi\n#include<bits/stdc++.h>\nusing namespace std;\n#endif\nclass Solution {\npublic:\n\tconst int MOD = 1e9+7;\n\tint numberOfPermutations(int n, vector<vector<int>>& requirements) {\n\t\tlong long ans = 1ll;\n\t\tsort(requirements.begin(), requirements.end());\n\t\twhile (requirements.size()){\n\t\t\tint aralik;\n\t\t\tint ugf;\n\t\t\tif (requirements.size()==1){\n\t\t\t\taralik=requirements[0][0]+1;\n\t\t\t\tugf=requirements[0][1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\taralik = requirements[requirements.size()-1][0]-requirements[requirements.size()-2][0];\n\t\t\t\tugf = requirements[requirements.size()-1][1]-requirements[requirements.size()-2][1];\n\t\t\t}\n\t\t\tvector<vector<long long>> dp(aralik+1,vector<long long>(ugf+1,0));\n\t\t\tdp[aralik].back()=1ll;\n\t\t\tfor (int node = aralik-1; node >= 0; node--){\n\t\t\t\tfor (int inv = 0; inv <= ugf; inv++){\n\t\t\t\t\tint l = inv;\n\t\t\t\t\tint r = inv+n-node-1;\n\t\t\t\t\tr=min(r,ugf);\n\t\t\t\t\tif (requirements.back()[0]==4 && inv==0){\n\t\t\t\t\t//cout<<\"LOL\"<<\" \"<<l<<\" \"<<r<<\" \"<<ugf<<endl;\n\t\t\t\t\t}\n\t\t\t\t\tif (l==0) dp[node][inv]=dp[node+1][r];\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[node][inv]=dp[node+1][r]-dp[node+1][l-1];\n\t\t\t\t\t\tif (dp[node][inv]<0) dp[node][inv]+=MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int i = 1; i < dp[node].size(); i++){\n\t\t\t\t\tdp[node][i]+=dp[node][i-1];\n\t\t\t\t\tif (dp[node][i]>=MOD) dp[node][i]-=MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans*=dp[0][0];\n\t\t\tans%=MOD;\n\t\t\tn-=aralik;\n\t\t\trequirements.pop_back();\n\t\t}\n\t\treturn ans;\n\t}\n};\n#ifdef tolbi\nint main(){\n\tint n = 5;\n\tvector<vector<int>> req = {{0,0},{1,0},{4,6},{3,4}};\n\tSolution soln;\n\tcout<<soln.numberOfPermutations(n,req)<<endl;\n}\n#endif",
    "submit_ts": 1719069124.0
}