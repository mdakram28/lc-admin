{
    "username": "LEARNER__0001",
    "submission": "/*AUTHOR : ANTU RANA*/\n#include <bits/stdc++.h>\nusing namespace std;\n// #define int long long\n// (1<<k should be greater equal to n so choice k as 16 or above here we chose k=18)\nconst int k = 18;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int p) {\n        int n = nums.size();\n        long long int ans = 0;\n       \n        vector<int> arr(n);\n        for (int i = 0; i < n; i++)\n            arr[i] = nums[i];\n        vector<vector<int>> table(n, vector<int>(k + 1, 0));\n        // build Sparse Table\n        for (int i = 0; i < n; i++)\n            table[i][0] = arr[i];\n        for (int j = 1; j <= k; j++)\n        {\n            for (int i = 0; i <= n - (1 << j); i++)\n                table[i][j] = table[i][j - 1] & table[i + (1 << (j - 1))][j - 1];\n        }\n\n        auto query = [&](int L,int R) -> long long int\n        {\n             // boundaries of next query, 0-indexed\n            int len = R - L + 1;\n            int highest_bit = (int)log2(len);\n            long long answer = 0;\n            answer = table[L][highest_bit] & table[R - (1 << highest_bit) + 1][highest_bit];\n            return answer ;\n        };\n        \n        for(int i=0;i<n;i++){\n            int start = i;\n            int l = start;\n            int r = n-1;\n            int left = -1;\n            int right = -1;\n            while(l <= r){\n                int mid = (l+r)/2;\n                long long int t = query(start,mid);\n                if(t>=p){\n                    if(t==p){\n                        right = mid;\n                    }\n                    l = mid + 1;\n                }\n                else{\n                    r = mid - 1;   \n                }\n            }\n            l = start;\n            r = n-1;\n            while(l<=r){\n                int mid = (l+r)/2;\n                long long int t = query(start,mid);\n                if(t<=p){\n                    if(t==p){\n                        left = mid;\n                    }\n                    r = mid-1;\n                }\n                else{\n                    l = mid+1;\n                }\n            }\n            if(left != -1 && right != -1){\n                ans += (right - left + 1);\n            }\n        }\n        return ans;\n    }\n};\n\n// i am at index i ",
    "submit_ts": "1720280754",
    "subm_id": "1311800881"
}