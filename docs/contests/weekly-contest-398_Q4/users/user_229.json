{
    "username": "mycoolhairison",
    "submission": "from queue import Queue\nfrom queue import PriorityQueue\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        pq = PriorityQueue()\n        count = {}\n        ret = 0\n        pq.put([1,1,0,0])\n        count[(1,0,0)]=1\n        while not pq.empty():\n            y,x,jump,prev = pq.get()\n            cnt = count[(x,jump,prev)]\n            if x==k:\n                ret+=cnt\n            if prev==0:\n                if x-1<=k:\n                    if (x-1,jump,1) in count:\n                        count[(x-1,jump,1)]+=cnt\n                    else:\n                        pq.put([x-3,x-1,jump,1])\n                        count[(x-1,jump,1)] = cnt\n            if (x+(2**jump))<=k+1:\n                if (x+(2**jump),jump+1,0) in count:\n                    count[(x+(2**jump),jump+1,0)] += cnt\n                else:\n                    pq.put([x+(2**jump),x+(2**jump),jump+1,0])\n                    count[(x+(2**jump),jump+1,0)] = cnt\n        return ret\n        \n        ",
    "submit_ts": "1716088064",
    "subm_id": "1261802827"
}