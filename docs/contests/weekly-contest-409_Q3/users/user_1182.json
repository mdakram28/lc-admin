{
    "username": "shivam22331100",
    "submission": "class Solution {\npublic:\n       vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n       vector<int> distances(n, 0);\n        for (int i = 1; i < n; ++i) {\n            distances[i] = distances[i - 1] + 1;\n        }\n\n        set<int> positions;\n        for (int i = 0; i < n; ++i) {\n            positions.insert(i);\n        }\n\n        vector<int> ans;\n\n        for (const auto& query : q) {\n            int left = query[0];\n            int right = query[1];\n\n            auto lowerBound = positions.lower_bound(left + 1);\n            auto upperBound = positions.lower_bound(right);\n\n            positions.erase(lowerBound, upperBound);\n\n            ans.push_back(positions.size() - 1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722743946",
    "subm_id": "1343803314"
}