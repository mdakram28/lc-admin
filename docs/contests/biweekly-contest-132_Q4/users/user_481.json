{
    "username": "typical_soul",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k+1, 0));\n        dp[0][0] = 1;\n        vector<int> vk(k+1, 1);\n        unordered_map<int, int> umap;\n        umap[nums[0]] = 0;\n        \n        int mx = 1;\n        for(int i = 1; i < n; i++) {\n            // cout << i << \"  \" << nums[i] << \" --\\n\";\n            dp[i][0] =1;\n            vector<int> t(k+1, 0);\n            for(int j = 0; j <= k && j <= i; j++) {\n                if(j > 0) {\n                    dp[i][j] = max(dp[i][j-1], vk[j-1]+1);\n                }\n                if(umap.find(nums[i]) != umap.end()) {\n                    // cout << umap[nums[i]] << \" - \" << dp[umap[nums[i]]][j] << \"\\n\";\n                    dp[i][j] = max(dp[i][j], dp[umap[nums[i]]][j]+1);\n                }\n                mx = max(mx, dp[i][j]);\n                // cout << j << \" = \" << dp[i][j] << \"\\n\";\n                t[j] = max(vk[j], dp[i][j]);\n            }\n            for(int j = 0; j <= k; j++) {\n                vk[j] = max(vk[j], t[j]);\n            }\n            umap[nums[i]] = i;\n            // cout << \"\\n\\n\";\n        }\n        return mx;\n    }\n};",
    "submit_ts": 1717862366.0
}