{
    "username": "user9218i",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(), points.end());\n        multiset<int> sp, sm;\n        int res = INT_MAX;\n        \n        for(auto it : points) {\n            int p = it[0] + it[1], m = it[0] - it[1];\n            sp.insert(p);   sm.insert(m);\n        }\n        for(auto it : points) {\n            int p = it[0] + it[1], m = it[0] - it[1];\n            sp.erase(sp.find(p));   sm.erase(sm.find(m));\n            \n            int ans = -1;\n            if(sp.size() >= 2)      ans = max(ans, *sp.rbegin() - *sp.begin());\n            if(sm.size() >= 2)      ans = max(ans, *sm.rbegin() - *sm.begin());\n            if(ans != -1)   res = min(res, ans);\n            \n            sp.insert(p);   sm.insert(m);\n        }\n        return res;\n    }\n};"
}