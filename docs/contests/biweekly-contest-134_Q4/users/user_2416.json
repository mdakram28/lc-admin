{
    "username": "satyam2411",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll cnt = 0;\n        \n        unordered_map<ll, ll>prevVal;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> currVal; \n\n            if (nums[i] == k) {\n                ++cnt;\n            }\n            currVal[nums[i]] = 1;\n\n            for (auto& [key, val] :prevVal) {\n                ll newVal = key & nums[i];\n                if (newVal == k) {\n                    cnt += val;\n                }\n                currVal[newVal] += val;\n            }\n            \n           prevVal = currVal;\n        }\n        \n        return cnt;\n    }\n};",
    "submit_ts": "1720278500",
    "subm_id": "1311711884"
}