{
    "username": "anant0704",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCut, vector<int>& vCut) {\n        long long h = 1;\n        long long v = 1;\n        priority_queue<pair<int, int>>pq;\n        for(int i = 0; i<hCut.size(); i++){\n            pq.push({hCut[i], 0});\n        }\n        for(int i = 0; i<vCut.size(); i++){\n            pq.push({vCut[i], 1});\n        }\n\n        long long cost = 0;\n        while(!pq.empty()){\n            auto it = pq.top();\n            int c = it.first;\n            int bit = it.second; // 0(h) 1(v)\n            pq.pop();\n            if(bit == 0){ // h\n                cost += c*v;\n                h++;\n            }\n            else if(bit == 1){\n                cost += c*h;\n                v++;\n            }\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720926460",
    "subm_id": "1320286952"
}