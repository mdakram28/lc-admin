{
    "username": "JatinYadav14",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& b) {\n        int mod = 1e9 + 7;\n        unordered_map<int, int> c;\n        for (auto& req : b) {\n            c[req[0] + 1] = req[1]; \n        }\n        vector<vector<long long>> dp(n + 1, vector<long long>(401, 0));\n        dp[0][0] = 1;\n        int ind = 1;\n        while (ind <= n) {\n            int e = 0;\n            while (e <= 400) {\n                int f = 0;\n                while (f < ind) {\n                    int g = e - f;\n                    if (g >= 0) {\n                        dp[ind][e] = (dp[ind][e] + dp[ind - 1][g]) % mod;\n                    }\n                    ++f;\n                }\n                ++e;\n            }\n            if (c.count(ind) > 0) {\n                int h = c[ind];\n                int e = 0;\n                while (e <= 400) {\n                    if (e != h) {\n                        dp[ind][e] = 0;\n                    }\n                    ++e;\n                }\n            }\n            ++ind;\n        }\n        int ans= 0;\n        int e = 0;\n        while (e <= 400) {\n            ans = (ans + dp[n][e]) % mod;\n            ++e;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719071882.0
}