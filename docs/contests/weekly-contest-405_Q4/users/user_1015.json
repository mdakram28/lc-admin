{
    "username": "kumarnikhil94058",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass TrieNode {\npublic:\n    char data;\n    TrieNode* children[26];\n    bool isTerminal;\n    vector<pair<int, int>> word_ends; // Pair of (index, cost)\n\n    // Constructor\n    TrieNode(char ch) {\n        data = ch;\n        for (int i = 0; i < 26; i++) {\n            children[i] = NULL;\n        }\n        isTerminal = false;\n    }\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    // Constructor to initialize root node\n    Trie() {\n        root = new TrieNode('\\0'); // Root doesn't hold any character\n    }\n\n    void insert(const string& word, int index, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            int idx = c - 'a';\n            if (node->children[idx] == NULL) {\n                node->children[idx] = new TrieNode(c);\n            }\n            node = node->children[idx];\n        }\n        node->isTerminal = true;\n        node->word_ends.push_back({index, cost});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        Trie trie;\n        for (int i = 0; i < words.size(); i++) {\n            trie.insert(words[i], i, costs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) {\n                continue;\n            }\n\n            TrieNode* node = trie.root;\n            for (int j = i; j < n; j++) {\n                int idx = target[j] - 'a';\n                if (node->children[idx] == NULL) {\n                    break;\n                }\n                node = node->children[idx];\n                for (const auto& p : node->word_ends) {\n                    int word_len = words[p.first].size();\n                    if (i + word_len <= n) {\n                        dp[i + word_len] = min(dp[i + word_len], dp[i] + p.second);\n                    }\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720323274",
    "subm_id": "1312371612"
}