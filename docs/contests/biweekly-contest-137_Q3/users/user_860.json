{
    "username": "kasi nathan",
    "submission": "class Solution {\n    long dp[][][];\n    public long maximumValueSum(int[][] board) {\n        dp = new long[board[0].length+1][board[0].length+1][board.length];\n        for(long a[][] : dp)\n            for(long b[] : a)\n                Arrays.fill(b,-1);\n        return maximum(board,-1,-1,0);\n    }\n    private long maximum(int[][] board , int f , int s , int i){\n        if(i==board.length){\n            return -(long)1e14;\n        }\n        if(dp[f+1][s+1][i]!=-1)return dp[f+1][s+1][i];\n        if(f==-1){\n            long ans = Long.MIN_VALUE;\n            for(int j = 0 ; j < board[0].length ; j++){\n                ans = Math.max(ans , board[i][j]+maximum(board,j,s,i+1));\n            }\n            ans = Math.max(ans , maximum(board,-1,-1,i+1));\n            return dp[f+1][s+1][i] = ans;\n        }else if(s==-1){\n            long ans = Long.MIN_VALUE;\n            for(int j = 0 ; j < board[0].length ; j++){\n                if(j!=f)\n                ans = Math.max(ans , board[i][j]+maximum(board,f,j,i+1));\n            }\n            ans = Math.max(ans , maximum(board,f,-1,i+1));\n            // System.out.println(i+\" \"+ans);\n            return dp[f+1][s+1][i] = ans;\n        }else{\n            long ans = Long.MIN_VALUE;\n            for(int j = 0 ; j < board[0].length ; j++){\n                if(j!=f&&j!=s){\n                    ans = Math.max(ans , board[i][j]);\n                }\n            }\n            ans = Math.max(ans , maximum(board,f,s,i+1));\n            return dp[f+1][s+1][i] = ans;\n        }\n    }\n    \n}",
    "submit_ts": "1723908772",
    "subm_id": "1359166525"
}