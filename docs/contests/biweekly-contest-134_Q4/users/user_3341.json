{
    "username": "wakeupsid-",
    "submission": "// #include <vector>\n// using namespace std;\n\n// class Solution {\n// public:\n//     long long countSubarrays(vector<int>& nums, int k) {\n//         int n = nums.size();\n//         long long cnt = 0;\n//         long long res=0;\n//         for (int i = 0; i < n; i++) {\n//            res=nums[i];\n//             if (res== k) cnt++;\n            \n//             for (int j = i + 1; j < n; j++) {\n//                 res &= nums[j];\n//                 if (res== k) {\n//                     cnt++;\n//                 } else if (res< k) {\n//                     break;\n//                 }\n//             }\n//         }\n\n//         return cnt;\n//     }\n// };\n\ntypedef long long ll;\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll cnt = 0;\n        \n        unordered_map<ll,ll> mpp;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll,ll> mpp1; \n\n            if (nums[i] == k) {\n                cnt++;\n            }\n            mpp1[nums[i]] = 1;\n\n            for (auto& it: mpp) {\n                \n                ll res = it.first & nums[i];\n                if (res == k) {\n                    cnt += it.second;\n                }\n                mpp1[res] += it.second;\n            }\n            \n            mpp= mpp1;\n        }\n        \n        return cnt;\n    }\n};\n",
    "submit_ts": "1720280458",
    "subm_id": "1311790151"
}