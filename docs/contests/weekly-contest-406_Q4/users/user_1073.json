{
    "username": "suyog475",
    "submission": "class Solution {\n     private void reverseArray(int[] array) {\n        int left = 0, right = array.length - 1;\n        while (left < right) {\n            int temp = array[left];\n            array[left] = array[right];\n            array[right] = temp;\n            left++;\n            right--;\n        }\n    }\n\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverseArray(horizontalCut);\n        reverseArray(verticalCut);\n\n        int h = 0, v = 0;\n        int hp = 1, vp = 1;\n        long cost = 0;\n\n        while (h < horizontalCut.length && v < verticalCut.length) {\n            if (verticalCut[v] <= horizontalCut[h]) {\n                cost += horizontalCut[h] * vp;\n                hp++;\n                h++;\n            } else {\n                cost += verticalCut[v] * hp;\n                vp++;\n                v++;\n            }\n        }\n        while (h < horizontalCut.length) {\n            cost += horizontalCut[h] * vp;\n            hp++;\n            h++;\n        }\n        while (v < verticalCut.length) {\n            cost += verticalCut[v] * hp;\n            vp++;\n            v++;\n        }\n\n        return cost;\n    }\n}",
    "submit_ts": "1720925743",
    "subm_id": "1320264780"
}