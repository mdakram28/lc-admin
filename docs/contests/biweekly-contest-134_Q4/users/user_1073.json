{
    "username": "Rishab01",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long res = 0;\n        int extra = 0, l = 0;\n        \n        vector<int> cnt(32);\n        \n        for(int i=0; i<nums.size(); ++i) {\n        \n            // we can't include this number otherwise getting k is impossible\n            if((nums[i] & k) != k) {\n                extra = 0;\n                fill(begin(cnt), end(cnt), 0);    \n                l = i+1;\n                continue;\n            } \n            \n            // adding this number in\n            for(int j=0; j<32; ++j)\n                if((1<<j)&nums[i])\n                    cnt[j]++;\n            \n            \n            // this section will try to minimize the window by increasing extra\n            // extra numbers are numbers that can be included within the window without affecting the total\n            // AND value k of the subarray\n            bool good = true;\n            \n            while(good) {\n                for(int j=0; j<32; ++j) \n                    if(((1<<j)&nums[l]) == 0 && cnt[j] == i-l) { // if cnt[j] == i-l this number is giving us ability to \n                        // get to AND value of k so we don't remove\n                        good = false;\n                        break;            \n                    }\n                \n                // if we can remove nums[l], we remove it\n                if(good) {\n                    for(int i=0; i<32; ++i)\n                        if((1<<i)&nums[l])\n                            cnt[i]--;\n                    \n                    l++;\n                    extra++;\n                }\n            \n            }\n            \n            // finally we check whether AND value is k, this means that all nonset bits in k\n            // we must be able to achieve by ANDing numbers in our window\n            bool check = true;\n            \n            for(int j=0; j<32; ++j)\n                if(((1<<j)&k) == 0 && cnt[j] == i-l+1) { // atleast one number shouldn't be set that is cnt[j] must not equal i-l+1\n                    check = false;\n                    break;\n                }\n            \n            if(check) res += extra + 1;\n            \n                \n        }\n        \n        \n        return res;\n        \n        \n        \n    }\n};",
    "submit_ts": "1720280604",
    "subm_id": "1311795555"
}