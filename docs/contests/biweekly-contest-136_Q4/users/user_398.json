{
    "username": "zzdfw",
    "submission": "const int N = 1e5 + 10;\nclass Solution {\n    vector<pair<int, int>> e[N];\n    bool visited[N];\n    int maxDist1[N];\n    int maxDist2[N];\n    int ans[N];\n\n    void dfs1(int u, int fa) {\n        visited[u] = true;\n        maxDist1[u] = 0;\n        maxDist2[u] = 0;\n        \n        for (auto [v, w] : e[u]) {\n            if (v == fa) {\n                continue;\n            }\n            dfs1(v, u);\n            int dist = w + maxDist1[v];\n            if (dist > maxDist1[u]) {\n                maxDist2[u] = maxDist1[u];\n                maxDist1[u] = dist;\n            } else if (dist > maxDist2[u]) {\n                maxDist2[u] = dist;\n            }\n        }\n        visited[u] = false;\n        // cout<<u<<\" \"<<maxDist1[u]<<\" \"<<maxDist2[u]<<endl;\n    }\n\n    void dfs2(int u, int fa, int upDist) {\n        visited[u] = true;\n        // cout<<u<<\" \"<<maxDist1[u]<<\" \"<<upDist<<endl;\n        ans[u] = max(maxDist1[u], upDist);\n        \n        for (auto [v, w] : e[u]) {\n            if (v == fa) {\n                continue;\n            }\n            int longest = (w + maxDist1[v] == maxDist1[u]) ? maxDist2[u] : maxDist1[u];\n            dfs2(v, u, 1+(u%2==0) + max(upDist, longest));\n        }\n        visited[u] = false;\n    }\n\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        for (auto it : edges) {\n            e[it[0]].push_back({it[1], 1 + (it[1] % 2 == 0)});\n            e[it[1]].push_back({it[0], 1 + (it[0] % 2 == 0)});\n        }\n        \n        fill(visited, visited + N, false);\n        fill(maxDist1, maxDist1 + N, 0);\n        fill(maxDist2, maxDist2 + N, 0);\n        fill(ans, ans + N, 0);\n        \n        dfs1(0, -1);\n        fill(visited, visited + N, false);\n        dfs2(0, -1, 0);\n\n        vector<int> result(n);\n        for (int i = 0; i < n; ++i) {\n            result[i] = ans[i];\n        }\n        return result;\n    }\n};",
    "submit_ts": "1722700689",
    "subm_id": "552280895"
}