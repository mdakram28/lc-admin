{
    "username": "Anshul1811",
    "submission": "/**\n * @param {number[][]} board\n * @return {number}\n */\nvar maximumValueSum = function(board) {\n      const m = board.length;\n    const n = board[0].length;\n    let maxSum = Number.MIN_SAFE_INTEGER;\n    const bestValues = Array.from({ length: m }, () => Array(3).fill(Number.MIN_SAFE_INTEGER));\n    const bestColumns = Array.from({ length: m }, () => Array(3).fill(-1));\n\n    for (let i = 0; i < m; ++i) {\n        const colValues = [];\n        for (let j = 0; j < n; ++j) {\n            colValues.push([board[i][j], j]);\n        }\n        colValues.sort((a, b) => b[0] - a[0]); // Sort in descending order\n\n        for (let k = 0; k < 3 && k < n; ++k) {\n            bestValues[i][k] = colValues[k][0];\n            bestColumns[i][k] = colValues[k][1];\n        }\n    }\n\n    // Try all combinations of 3 different rows.\n    for (let r1 = 0; r1 < m; ++r1) {\n        for (let r2 = r1 + 1; r2 < m; ++r2) {\n            for (let r3 = r2 + 1; r3 < m; ++r3) {\n                for (let i = 0; i < 3; ++i) {\n                    for (let j = 0; j < 3; ++j) {\n                        if (bestColumns[r2][j] === bestColumns[r1][i]) continue;\n                        for (let k = 0; k < 3; ++k) {\n                            if (bestColumns[r3][k] === bestColumns[r1][i] || bestColumns[r3][k] === bestColumns[r2][j]) continue;\n\n                            const currentSum = bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k];\n                            maxSum = Math.max(maxSum, currentSum);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return maxSum;\n};",
    "submit_ts": "1723910346",
    "subm_id": "1359226792"
}