{
    "username": "Faizan Hussain",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        ll n=s.length();\n        vector<ll> zeros,ones;\n        for(int i=0; i<n; i++) {\n            if(s[i]=='0') {\n                zeros.push_back(i);\n            }\n            else {\n                ones.push_back(i);\n            }\n        }\n\n        vector<pair<ll,ll>> segments;\n        for(int i=0; i<n; i++) {\n            auto posZero=lower_bound(zeros.begin(),zeros.end(),i)-zeros.begin();\n            auto posOne=lower_bound(ones.begin(),ones.end(),i)-ones.begin();\n\n            if(posZero+k<(ll)zeros.size() && posOne+k<(ll)ones.size()) {\n                segments.push_back({min(zeros[posZero],ones[posOne]),max(zeros[posZero+k],ones[posOne+k])});\n            }\n        }\n\n        vector<ll> prefix;\n        for(int i=0; i<(ll)segments.size(); i++) {\n            if(prefix.empty()) {\n                prefix.push_back(segments[i].second);\n            }\n            else {\n                prefix.push_back(prefix.back()+segments[i].second);\n            }\n        }   \n\n        // for(auto x : segments) {\n        //     cout<<\"(\"<<x.first<<\" \"<<x.second<<\")\\n\";\n        // }\n\n        vector<ll> res;\n\n        for(auto x : queries) {\n            ll start=x[0];\n            ll last=x[1];\n            ll len=last-start+1;\n            ll total=len*(len+1)/2;\n\n            ll l=0,r=(ll)segments.size()-1;\n            ll ans=-1;\n            while(l<=r) {\n                ll mid=(l+r)/2;\n\n                if(segments[mid].first>=start && segments[mid].second<=last) {\n                    ans=mid;\n                    r=mid-1;\n                }\n                else if(segments[mid].first<start) {\n                    l=mid+1;\n                }\n                else {\n                    r=mid-1;\n                }\n            }\n\n            if(ans==-1) {\n                res.push_back(total);\n                continue;\n            }\n\n            l=0,r=(ll)segments.size()-1;\n            ll ans1=-1;\n            while(l<=r) {\n                ll mid=(l+r)/2;\n\n                if(segments[mid].first>=start && segments[mid].second<=last) {\n                    ans1=mid;\n                    l=mid+1;\n                }\n                else if(segments[mid].first<start) {\n                    l=mid+1;\n                }\n                else {\n                    r=mid-1;\n                }\n            }\n            \n            ll sum=prefix[ans1];\n            if(ans>0) sum-=prefix[ans-1];\n\n            total-=((ans1-ans+1)*last + (ans1-ans+1) - sum);\n            res.push_back(total);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723952858",
    "subm_id": "1359806396"
}