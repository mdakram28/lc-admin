{
    "username": "zhiylu528",
    "submission": "class Solution {\npublic:\n    int find(vector<int>& parents, int i) {\n        if (parents[i] == i) return i;\n        else return parents[i] = find(parents, parents[i]);\n    }\n\n    void join(vector<int>& parents, vector<vector<bool>>& touch, int i, int j) {\n        int p = find(parents, j);\n        for (int k = 0; k < 4; k++) {\n            touch[p][k] = touch[p][k] || touch[find(parents, i)][k]; \n        }\n        parents[find(parents, i)] = p;\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<int> parents;\n        for (int i = 0; i < circles.size(); i++) {\n            parents.push_back(i);\n        }\n\n        vector<vector<bool>> touch(circles.size(), vector<bool>(4, false));\n\n        for (int i = 0; i < circles.size(); i++) {\n            if (distance(circles[i][0], circles[i][1], 0, 0) < circles[i][2]) return false;\n            if (distance(circles[i][0], circles[i][1], X, Y) < circles[i][2]) return false;\n            \n            if (circles[i][1] + circles[i][2] >= Y) {\n                touch[i][0] = true;\n            } if (circles[i][1] - circles[i][2] <= 0) {\n                touch[i][1] = true;\n            } if (circles[i][0] - circles[i][2] <= 0) {\n                touch[i][2] = true;\n            } if (circles[i][0] + circles[i][2] >= X) {\n                touch[i][3] = true;\n            }\n\n            if (touch[i][0] && touch[i][1]) return false;\n            if (touch[i][2] && touch[i][3]) return false;\n            if (touch[i][0] && touch[i][3]) return false;\n            if (touch[i][1] && touch[i][2]) return false;\n        }\n\n        for (int i = 0; i < circles.size(); i++) {\n            for (int j = i + 1; j < circles.size(); j++) {\n                if (distance(circles[i][0], circles[i][1], circles[j][0], circles[j][1]) <= circles[i][2] + circles[j][2]) {\n                    join(parents, touch, i, j);\n                    int p = find(parents, j);\n                    if (touch[p][0] && touch[p][1]) return false;\n                    if (touch[p][2] && touch[p][3]) return false;\n                    if (touch[p][0] && touch[p][3]) return false;\n                    if (touch[p][1] && touch[p][2]) return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    double distance(int x, int y, int xx, int yy) {\n        x = abs(x - xx);\n        y = abs(y - yy);\n        return sqrt(pow(x, 2) + pow(y, 2));\n    }\n};",
    "submit_ts": "1722137547",
    "subm_id": "1335766888"
}