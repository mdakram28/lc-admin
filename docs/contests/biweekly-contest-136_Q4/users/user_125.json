{
    "username": "jangar",
    "submission": "class Solution {\npublic:\n\n    void dfs(vector<int> &time, vector<vector<int> > &path, int now, vector<int> &mxs) {\n        mxs[now] = 0;\n        \n        for (int next : path[now]) {\n            if (time[next] != -1) continue;\n\n            time[next] = time[now] + (next % 2 ? 1 : 2);\n            dfs(time, path, next, mxs);\n            mxs[now] = max(mxs[now], mxs[next] + time[next] - time[now]);\n        }\n    }\n\n    void create_ans(vector<int> &mxs, vector<vector<int> > &path, vector<int> &time, vector<int> &ans, int now, int top) {\n        int mx1 = 0, mx2 = 0;\n        ans[now] = top;\n        for (int next : path[now]) {\n            if (mxs[next] >= mxs[now]) continue;\n\n            if (mxs[next] + time[next] - time[now] >= mx1) {\n                mx2 = mx1;\n                mx1 = mxs[next] + time[next] - time[now];\n            } else if (mxs[next] + time[next] - time[now] >= mx2) {\n                mx2 = mxs[next] + time[next] - time[now];\n            }\n\n            ans[now] = max(mxs[next] + time[next] - time[now], ans[now]);\n        }\n        // cout << now << ' ' << top << ' ' << mx1 << ' ' << mx2 << '\\n';\n\n        for (int next : path[now]) {\n            if (mxs[next] >= mxs[now]) continue;\n            if (mxs[next] + time[next] - time[now] == mx1)\n                create_ans(mxs, path, time, ans, next, max(top, mx2) + (now % 2 ? 1 : 2));\n            else \n                create_ans(mxs, path, time, ans, next, max(top, mx1) + (now % 2 ? 1 : 2));\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int> > path(n);\n        for (int i = 0; i < n-1; i++) {\n            path[edges[i][0]].push_back(edges[i][1]);\n            path[edges[i][1]].push_back(edges[i][0]);\n        }\n\n        vector<int> time(n, -1);\n        vector<int> mxs(n), ans(n);\n\n        time[0] = 0;\n        dfs(time, path, 0, mxs);\n        // for (int i = 0; i < n; i++)\n        //     cout << mxs[i] << ' ';\n        // cout << '\\n';\n        create_ans(mxs, path, time, ans, 0, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722698287",
    "subm_id": "1343175778"
}