{
    "username": "libkonstantin",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n\n        int ans = 0;\n        for (int li = 0, ri = n - 1; li < ri; li++, ri--) {\n            for (int lj = 0, rj = m - 1; lj < rj; lj++, rj--) {\n                int sum = grid[li][lj] + grid[li][rj] + grid[ri][lj] + grid[ri][rj];\n                if (sum <= 2) {\n                    ans += sum;\n                } else {\n                    ans += (4 - sum);\n                }\n            }\n        }\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            ans += grid[n / 2][m / 2];\n        }\n\n        int cntNotMatched = 0;\n        int cntOnes = 0;\n        if (n % 2 == 1) {\n            int i = n / 2;\n            for (int l = 0, r = m - 1; l < r; l++, r--) {\n                if (grid[i][l] != grid[i][r]) {\n                    cntNotMatched++;\n                } else {\n                    cntOnes += grid[i][l];\n                }\n            }\n        }\n        if (m % 2 == 1) {\n            int j = m / 2;\n            for (int l = 0, r = n - 1; l < r; l++, r--) {\n                if (grid[l][j] != grid[r][j]) {\n                    cntNotMatched++;\n                } else {\n                    cntOnes += grid[l][j];\n                }\n            }\n        }\n        if (cntNotMatched > 0) {\n            ans += cntNotMatched;\n        } else {\n            ans += 2 * (cntOnes % 2);\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1722696877",
    "subm_id": "1343125659"
}