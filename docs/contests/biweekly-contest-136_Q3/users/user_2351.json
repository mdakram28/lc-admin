{
    "username": "fabulous_aj",
    "submission": "#include <vector> \n#include <algorithm> \n \nusing namespace std; \n \nclass Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int n = grid.size(), m = grid[0].size(); \n        int no_ones = 0; \n         \n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                no_ones += 1; \n            } \n        } \n \n        vector<int> shift(3, 0); \n        if (n % 2 == 1) { \n            int n1= 0, n2= m - 1; \n            while (n1 < n2) { \n                int sm = grid[n / 2][n1] + grid[n / 2][n2]; \n                shift[sm] += 1; \n                n1+= 1; \n                n2-= 1; \n            } \n        } \n \n        if (m % 2 == 1) { \n            int n1= 0, n2= n - 1; \n            while (n1 < n2) { \n                int sm = grid[n1][m / 2] + grid[n2][m / 2]; \n                shift[sm] += 1; \n                n1+= 1; \n                n2-= 1; \n            } \n        } \n \n        if (shift[2] % 2 == 1) { \n            if (shift[1] > 0) { \n                no_ones += shift[1]; \n            } else { \n                no_ones += 2; \n            } \n        } else { \n            no_ones += shift[1]; \n        } \n \n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int n1= grid[i][j]; \n                int n2= grid[n - 1 - i][j]; \n                int n3= grid[i][m - 1 - j]; \n                int n4 = grid[n - 1 - i][m - 1 - j]; \n \n                int sm = n1+ n2+ n3+ n4; \n \n                if (sm != 0 && sm != 4) { \n                    no_ones += min(sm, 4 - sm); \n                } \n            } \n        } \n \n        return no_ones; \n    } \n};\n",
    "submit_ts": "1722699866",
    "subm_id": "1343224747"
}