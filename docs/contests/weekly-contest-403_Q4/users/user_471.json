{
    "username": "user0747oJ",
    "submission": "class Solution {\n    fun minimumSum(grid: Array<IntArray>): Int {\n        return f3(grid)\n    }\n\n    private fun f1(grid: Array<IntArray>, startI: Int, endI: Int, startJ: Int, endJ: Int): Int {\n        var minI = -1\n        var maxI = -1\n\n        for (i in startI..endI) {\n            if ((startJ..endJ).none { grid[i][it] == 1 }) continue\n\n            if (minI == -1) minI = i\n            maxI = i\n        }\n\n        var minJ = -1\n        var maxJ = -1\n\n        for (j in startJ..endJ) {\n            if ((startI..endI).none { grid[it][j] == 1 }) continue\n\n            if (minJ == -1) minJ = j\n            maxJ = j\n        }\n\n        return if (minI == -1) 100_000 else (maxI - minI + 1) * (maxJ - minJ + 1)\n    }\n\n    private fun f2(grid: Array<IntArray>): Int {\n        var result = 100_000\n\n        for (i in 1..grid.lastIndex) {\n            result =\n                min(result, f1(grid, 0, i - 1, 0, grid[0].lastIndex) + f1(grid, i, grid.lastIndex, 0, grid[0].lastIndex))\n        }\n        for (j in 1..grid[0].lastIndex) {\n            result = min(result, f1(grid, 0, grid.lastIndex, 0, j - 1) + f1(grid, 0, grid.lastIndex, j, grid[0].lastIndex))\n        }\n\n        return result\n    }\n\n    private fun f3(grid: Array<IntArray>): Int {\n        var result = 100_000\n\n        for (i in grid.indices) {\n            for (j in grid[i].indices) {\n                val part = f1(grid, 0, i, 0, j)\n                if (part == 100_000) continue\n\n                for (ii in 0..i) {\n                    for (jj in 0..j) {\n                        grid[ii][jj] = -grid[ii][jj]\n                    }\n                }\n\n                result = min(result, part + f2(grid))\n\n                for (ii in 0..i) {\n                    for (jj in 0..j) {\n                        grid[ii][jj] = -grid[ii][jj]\n                    }\n                }\n            }\n        }\n\n        return result\n    }\n}",
    "submit_ts": 1719114120.0
}