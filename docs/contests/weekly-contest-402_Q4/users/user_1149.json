{
    "username": "gelu-h",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        bit = vector<int>(n + 1);\n        for (int i = 1; i < n - 1; ++i) {\n            if (nums[i - 1] < nums[i] && nums[i] > nums[i + 1]) {\n                add(i, 1);\n            }\n        }\n        auto f = [&](int i, bool flag) {\n            if (i <= 0 || i >= n - 1) return;\n            if (nums[i - 1] < nums[i] && nums[i] > nums[i + 1]) {\n                if (!flag) {\n                    add(i, 1);\n                }\n            } else {\n                if (flag) {\n                    add(i, -1);\n                }\n            }\n        };\n        vector<int> ans;\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                int l = q[1], r = q[2];\n                int x = l + 1 >= r ? 0 : sum(r - 1) - sum(l);\n                ans.push_back(x);\n            } else {\n                int id = q[1], val = q[2];\n                bool f0 = 0 < id - 1 && id - 1 < n - 1 && nums[id - 2] < nums[id - 1] && nums[id - 1] > nums[id],\n                f1 = 0 < id && id < n - 1 && nums[id - 1] < nums[id] && nums[id] > nums[id + 1],\n                f2 = 0 < id + 1 && id + 1 < n - 1 && nums[id] < nums[id + 1] && nums[id + 1] > nums[id + 2];\n                nums[id] = val;\n                f(id - 1, f0);\n                f(id, f1);\n                f(id + 1, f2);\n            }\n        }\n        return ans;\n    }\nprivate:\n    int n;\n    vector<int> bit;\nprivate:\n    int lowbit(int i) {\n        return i & -i;\n    }\n\n    void add(int i, int x) {\n        while (i <= n) {\n            bit[i] += x;\n            i += lowbit(i);\n        }\n    }\n\n    int sum(int i) {\n        int s = 0;\n        while (i) {\n            s += bit[i];\n            i -= lowbit(i);\n        }\n        return s;\n    } \n};",
    "submit_ts": 1718509365.0
}