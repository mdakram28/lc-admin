{
    "username": "hoangls",
    "submission": "class Solution {\npublic:\n    int laz[1000005],seg[1000005];\n    void update(int id , int l , int r , int u , int v , int val)\n    {\n        seg[id] += laz[id]*(r - l + 1) ;\n        laz[2*id] += laz[id];\n        laz[2*id+1] += laz[id];\n        laz[id] = 0 ;\n        if(u > r || v < l) {\n            return ;\n        }\n        if(l >= u && r <= v) {\n            seg[id] = val*(r - l + 1) ;\n            laz[2*id] += val ;\n            laz[2*id+1] += val ;\n            return ;\n        }\n        int mid = (l+r)>>1;\n        update(2*id , l , mid , u , v , val) ;\n        update(2*id + 1 , mid + 1 , r , u , v , val) ;\n        seg[id] = seg[2*id] + seg[2*id+1];\n\n    }\n    long long get(int id ,int l , int r , int u , int v)\n    {\n        seg[id] += laz[id]*(r - l + 1) ;\n        laz[2*id] += laz[id] ;\n        laz[2*id+1] += laz[id] ;\n        laz[id] = 0 ;\n        if( u > r || v < l) {\n            return 0;\n        }\n        if(l >= u && r <= v)\n        {\n            return seg[id] ;\n        }\n        int mid = ( l + r )>>1;\n        return (get(2*id , l , mid , u , v) + get(2*id + 1 , mid + 1 , r , u , v)) ;\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int temp = n-1;\n        for ( auto e : queries ) {\n            int u = e[0];\n            int v = e[1];\n            if ( get(1,1,n,u+2,v) < v - u - 1 ) {\n                temp += get(1,1,n,u+2,v);\n                update(1,1,n,u+2,v,1);\n                temp -= ( v - u - 1);\n            }\n            ans.push_back(temp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741601",
    "subm_id": "1343748936"
}