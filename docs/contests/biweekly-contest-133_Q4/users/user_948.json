{
    "username": "PiGuy1010",
    "submission": "class Solution:\n    def solve(self, val, n, k):\n        M = 1000000007\n        if val < 0 or val > ((2*n-k-1)*k)//2:\n            return 0\n        calcs = [[1]+[0 for _ in range(val)]]\n        for i in range(1, k+1):\n            far = n-i\n            row = [1]\n            run = 1\n            for j in range(1, val+1):\n                run += calcs[-1][j]\n                if j > far:\n                    run -= calcs[-1][j-far-1]\n                row.append(run%M)\n                # print(run)\n                # print(run%M)\n            calcs.append(row)\n        # print(calcs)\n        return calcs[k][val]\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        M = 1000000007\n        sr = sorted(requirements, key=lambda x:x[0], reverse=True)\n        result = 1\n        # print(sr)\n        # print(self.solve(5, 5, 3))\n        for i in range(len(sr)-1):\n            result = (result*self.solve(sr[i][1]-sr[i+1][1], sr[i][0]+1, sr[i][0]-sr[i+1][0])) % M\n        result = (result*self.solve(sr[-1][1], sr[-1][0]+1, sr[-1][0])) % M\n        return result",
    "submit_ts": "1719071344",
    "subm_id": "1296844658"
}