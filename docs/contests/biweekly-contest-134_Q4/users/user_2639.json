{
    "username": "unique_01",
    "submission": "import java.util.HashMap;\n\nclass Solution {\n    \n    public long countSubarrays(int[] anan, int minuo) {\n        \n        int arrayLength = anan.length;\n        \n        long subarrayCount = 0;\n        int yuio=0;\n        int poiu=0;\n\n        // Map to store previous AND results and their frequencies\n        HashMap<Long, Long> previousAndResults = new HashMap<>();\n\n        // Iterate through each element in the array\n        for (int currentIndex = 0; currentIndex < arrayLength; ++currentIndex) {\n            // Map to store current AND results for this iteration\n            HashMap<Long, Long> currentAndResults = new HashMap<>();\n\n            // Check if the current element equals the target AND value\n            if (anan[currentIndex] == minuo) {\n                ++subarrayCount;\n            }\n            // Initialize the current AND results with the current element\n            currentAndResults.put((long) anan[currentIndex], 1L);\n\n            // Iterate through the previous AND results\n            for (var entry : previousAndResults.entrySet()) {\n                \n                long previousAndValue = entry.getKey();\n                \n                long frequency = entry.getValue();\n                long newAndResult = previousAndValue & anan[currentIndex];\n\n                // Check if the new AND result equals the target AND value\n                if (newAndResult == minuo) {\n                    subarrayCount += frequency;\n                }\n\n                // Update the current AND results map with the new AND result\n                currentAndResults.put(newAndResult, currentAndResults.getOrDefault(newAndResult, 0L) + frequency);\n            }\n\n            // Update the previous AND results for the next iteration\n            previousAndResults = currentAndResults;\n        }\n\n        return subarrayCount;\n    }\n}\n",
    "submit_ts": "1720278558",
    "subm_id": "1311714374"
}