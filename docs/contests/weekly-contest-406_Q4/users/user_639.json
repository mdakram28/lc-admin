{
    "username": "regulus50-vs-antilly-athos",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        int horiBlock = 1, vertiBlock = 1;\n        priority_queue<pair<int, int>> pq;\n        for(int i: horizontalCut) {\n            pq.push({i,0});\n        }\n        for(int i: verticalCut) {\n            pq.push({i,1});\n        }\n        while(!pq.empty()) {\n            pair<int, int> x = pq.top();\n            if (x.second == 0) {\n                vertiBlock++;\n                ans += (long long)horiBlock * x.first;\n            }\n            else {\n                horiBlock++;\n                ans += (long long)vertiBlock * x.first;\n            }\n            pq.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925688",
    "subm_id": "546441255"
}