{
    "username": "profchi",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        boolean [][] visited = new boolean [grid.length][grid[0].length];\n        \n        int [] count = new int [2];\n        int nr, nc;\n        \n        int total = 0;\n        \n        int all = 0;\n        int mid = 0;\n        \n        for (int i = 0; i < grid.length; ++i) {\n            for (int j = 0; j < grid[0].length; ++j) {\n                // sum += grid[i][j];\n                \n                if (visited[i][j])\n                    continue;\n                \n                nr = grid.length - 1 - i;\n                nc = grid[0].length - 1 - j;\n                \n                //vals = new ArrayList<>();\n                \n                Arrays.fill(count, 0);\n                \n                update(grid, visited, count, i, j);\n                update(grid, visited, count, nr, j);\n                update(grid, visited, count, i, nc);\n                update(grid, visited, count, nr, nc);\n                \n                total += Math.min(count[0], count[1]);\n                \n                if (count[0] + count[1] == 2) {\n                    if (count[1] == 2)\n                        ++all;\n                    else if (count[1] == 1)\n                        ++mid;\n                }else if (count[0] + count[1] == 1) {\n                    total += count[1];\n                }\n            }\n        }\n        \n        if (all % 2 == 1) {\n            total += mid > 0 ? 0 : 2;\n        }\n        \n        return total;\n    }\n    \n    private void update(int [][] grid, boolean [][] visited, int [] count, int i, int j) {\n        if (!visited[i][j]){\n            count[grid[i][j]]++;\n            visited[i][j] = true;\n        }\n    }\n}",
    "submit_ts": "1722696644",
    "subm_id": "1343116352"
}