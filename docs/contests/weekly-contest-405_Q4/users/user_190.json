{
    "username": "rohinth076",
    "submission": "class Trie{\n    Trie[] children;\n    boolean isEnd;\n    int cost;\n    Trie(){\n        children = new Trie[26];\n        isEnd = false;\n        cost = 100000;\n    }\n    void setEnd(boolean flag){\n        this.isEnd = true;\n    }\n    void setCost(int val){\n        cost = Math.min(cost,val);\n    }\n}\nclass Solution {\n    final int max = Integer.MAX_VALUE;\n    Trie root;\n    char[] a;\n    int len;\n    int[] dp;\n    boolean[] hasCache;\n    Trie build(String[] words,int[] costs){\n        int n = costs.length;\n        Trie r = new Trie();\n        for(int w=0;w<n;w++){\n            Trie temp = r;\n            for(char i:words[w].toCharArray()){\n                int in = i - 'a';\n                if(temp.children[in] == null){\n                    temp.children[in] = new Trie();\n                }\n                temp = temp.children[in];\n            }\n            temp.setEnd(true);\n            temp.setCost(costs[w]);\n        }\n        return r;\n    }\n    int rec(int level){\n        if(level == len){\n            return 0;\n        }\n        if(hasCache[level])return dp[level];\n        int ans = max;\n        Trie temp = root;\n        for(int i=level;i<len;i++){\n            int in = a[i] - 'a';\n            if(temp.children[in] == null)break;\n            temp = temp.children[in];\n            if(temp.isEnd){\n                int val = rec(i+1);\n                if(val != -1){\n                    ans = Math.min(ans,val+temp.cost);\n                }\n            }\n        }\n        if(ans == max)ans = -1;\n        hasCache[level] = true;\n        dp[level] = ans;\n        return dp[level];\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        root = build(words,costs);\n        a = target.toCharArray();\n        len = a.length;\n        dp = new int[len];\n        hasCache = new boolean[len];\n        return rec(0);\n    }\n}",
    "submit_ts": "1720321666",
    "subm_id": "1312329054"
}