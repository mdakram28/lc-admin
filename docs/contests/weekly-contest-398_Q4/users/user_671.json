{
    "username": "Shaurya_Malhan",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        if(k == 0) return 2;\n        if(k == 1) return 4;\n        if(k == 2) return 4;\n        if(k == 4) return 2;\n        long start = 1;\n        int i = 0;\n        int count = 1;\n        while(start < k){\n            long curr = (1 << i);\n            start += curr;\n            i++;\n            count++;\n        }\n        int diff = (int) start - k;\n        if(diff > count){\n            return 0;\n        }\n        long ans = nCr(count, diff);\n        return (int) ans;\n    }\n    public static int nCr(int n, int r) {\n        if (r > n)\n            return 0;\n        if (r == 0 || n == r)\n            return 1;\n        double res = 0;\n        for (int i = 0; i < r; i++) {\n            res += Math.log(n - i) - Math.log(i + 1);\n        }\n        return (int) Math.round(Math.exp(res));\n    }\n}",
    "submit_ts": "1716089262",
    "subm_id": "1261837573"
}