{
    "username": "gauravtiwarrii",
    "submission": "class Solution:\n    def minimumCost(self, target, words, costs):\n        word_to_cost = {}\n        for word, cost in zip(words, costs):\n            if word not in word_to_cost or word_to_cost[word] > cost:\n                word_to_cost[word] = cost\n\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            for word, cost in word_to_cost.items():\n                if target.startswith(word, i):\n                    dp[i + len(word)] = min(dp[i + len(word)], dp[i] + cost)\n\n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720320622",
    "subm_id": "1312299843"
}