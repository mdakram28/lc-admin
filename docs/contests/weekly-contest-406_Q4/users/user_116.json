{
    "username": "Sdas_1905",
    "submission": "class Solution {\n    #define ll long long\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n    \n    int hIndex = 0, vIndex = 0;\n    int horizontalPieces = 1, verticalPieces = 1;\n    ll totalCost = 0;\n    \n    while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n        if (horizontalCut[hIndex] > verticalCut[vIndex]) {\n            totalCost += horizontalCut[hIndex] * verticalPieces;\n            horizontalPieces++;\n            hIndex++;\n        } else {\n            totalCost += verticalCut[vIndex] * horizontalPieces;\n            verticalPieces++;\n            vIndex++;\n        }\n    }\n    \n    while (hIndex < horizontalCut.size()) {\n        totalCost += horizontalCut[hIndex] * verticalPieces;\n        hIndex++;\n    }\n    \n    while (vIndex < verticalCut.size()) {\n        totalCost += verticalCut[vIndex] * horizontalPieces;\n        vIndex++;\n    }\n    \n    return totalCost;\n    }\n};",
    "submit_ts": "1720925024",
    "subm_id": "1320239973"
}