{
    "username": "user8664Ui",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& b, int c) {\n    bool d = false;\n    vector<int> e;\n    int f = b[0];\n    int g = 1;\n    \n    for (int h = 1; h < b.size(); ++h) {\n        if (b[h] == f) {\n            e.push_back(g);\n            g = 1;\n            d = true;\n        } else {\n            ++g;\n        }\n        f = b[h];\n    }\n    e.push_back(g);\n\n    if (e.size() == 1 && e.front() == b.size() && b[0] != b.back() && !d) {\n        return b.size();\n    } else {\n        if (b[0] != b.back() && e.size() > 1) {\n            int i = e.back();\n            e.pop_back();\n            e.front() += i;\n        }\n\n        long long j = 0;\n        for (int k : e) {\n            j += max(0, k - (c - 1));\n        }\n\n        return static_cast<int>(j);\n    }\n}\n\n};",
    "submit_ts": "1720280384",
    "subm_id": "1311787357"
}