{
    "username": "nnks8908",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) \n    {\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        long long h=1, v=1, ans=0;\n        for(int n=horizontalCut.size()-1, m=verticalCut.size()-1;n>=0||m>=0;)\n        {\n            if(n==-1)\n            {\n                ans+=verticalCut[m--]*v;\n                ++h;\n            }\n            else if(m==-1)\n            {\n                ans+=horizontalCut[n--]*h;\n                ++v;\n            }\n            else\n            {\n                if((verticalCut[m]*v+horizontalCut[n]*(h+1))<(horizontalCut[n]*h+verticalCut[m]*(v+1)))\n                {\n                    ans+=verticalCut[m--]*v;\n                    ++h;\n                }\n                else\n                {\n                    ans+=horizontalCut[n--]*h;\n                    ++v;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925519",
    "subm_id": "1320257432"
}