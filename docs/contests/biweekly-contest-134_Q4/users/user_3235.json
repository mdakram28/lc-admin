{
    "username": "nan-chen-e",
    "submission": "\ntemplate <typename T>\nclass SparseTable {\n  using VT = vector<T>;\n  using VVT = vector<VT>;\n  using func_type = function<T(const T &, const T &)>;\n\n  VVT ST;\n\n  static T default_func(const T &t1, const T &t2) { return  t1 & t2; }\n\n  func_type op;\n\n public:\n  SparseTable(const vector<T> &v, func_type _func = default_func) {\n    op = _func;\n    int len = v.size(), l1 = ceil(log2(len)) + 1;\n    ST.assign(len, VT(l1, 0));\n    for (int i = 0; i < len; ++i) {\n      ST[i][0] = v[i];\n    }\n    for (int j = 1; j < l1; ++j) {\n      int pj = (1 << (j - 1));\n      for (int i = 0; i + pj < len; ++i) {\n        ST[i][j] = op(ST[i][j - 1], ST[i + (1 << (j - 1))][j - 1]);\n      }\n    }\n  }\n\n  T query(int l, int r) {\n    int lt = r - l + 1;\n    int q = floor(log2(lt));\n    return op(ST[l][q], ST[r - (1 << q) + 1][q]);\n  }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        auto  t  =  new SparseTable(nums) ;\n        int ans = 0x3f3f3f3f ;  \n        long long  res  =0  ;  \n        for (int  i =0 ; i<nums.size() ; i++) {\n            int  l =i  , r = nums.size() - 1 ;\n            int ll = i ,ld = i   ;  \n            while( l <  r ) {\n                int  mid  = ( l +  r )   >> 1     ;\n                if(t->query(i , mid )  <= k) {\n                    r = mid   ;  \n                }else {\n                    l  = mid +  1 ;  \n                }\n            }\n            ll = l ; \n              l =i ;  r = nums.size() - 1 ;\n            while( l < r ) {\n                int mid  = ( l + r +  1) >>  1  ; \n                if(t ->query(i  ,mid)  >=  k ) {\n                    l = mid  ;  \n                }else {\n                    r = mid  - 1 ; \n                }\n            }\n            ld = r ; \n            if(t->query( i , ll) == k  && t->query(i , ld) == k ) \n                res += abs(ld - ll) +  1 ;  \n            else if(t->query( i , ll) == k || t->query(i , ld) == k  ) res += abs(ld - ll) ; \n            \n            \n        }\n        return res ;  \n    }\n};",
    "submit_ts": "1720281114",
    "subm_id": "544574568"
}