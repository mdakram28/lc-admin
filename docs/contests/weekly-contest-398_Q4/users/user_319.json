{
    "username": "leoyu0813",
    "submission": "class Solution {\npublic:\n    // k <= 1e9 is jump <= 30\n    unordered_map <int, int> dp[2][32];\n    int waysToReachStair(int k) {\n        if (k == 0)\n            return 2;\n        return dfs (1, 0, k, true);\n    }\n    \n    int dfs (int cur, int jump, int k, bool flag)\n    {\n        if (cur > k+1)\n            return 0;\n        if (dp [flag][jump].count (cur))\n            return dp [flag][jump][cur];\n        int count = (cur == k);        \n        if (flag && cur)\n           count += dfs (cur-1, jump, k, false);\n        count += dfs (cur + (1 << jump), jump+1, k, true);\n        return dp [flag][jump][cur] = count;\n    }\n};",
    "submit_ts": "1716088378",
    "subm_id": "1261812207"
}