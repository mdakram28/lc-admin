{
    "username": "HelloBuddyJr",
    "submission": "\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        const int MOD = 1e9 + 7;\n        const int MAX_INV = 400;\n        long res = 0;\n        unordered_map<int, int> r;\n        vector<vector<long>> dp(n + 1, vector<long>(MAX_INV + 1, 0));\n        for (auto& req : reqs) {\n            r[req[0] + 1] = req[1];\n        }\n        dp[0][0] = 1;\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= MAX_INV; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n            if (r.count(len)) {\n                int targetInv = r[len];\n                for (int inv = 0; inv <= MAX_INV; inv++) {\n                    if (inv != targetInv) {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n        \n        for (long count : dp[n]) {\n            res = (res + count);\n            res %= MOD;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719070483.0
}