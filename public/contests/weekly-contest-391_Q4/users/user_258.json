{
    "username": "acleo",
    "submission": "#include <array>\n#include <cstdio>\n#include <algorithm>\n#include <cassert>\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <iomanip>\n#include <cstring>\n#include <cmath>\n#include <bitset>\n#define pb push_back\n#define mk make_pair\n#define eb emplace_back\n#define eps 1e-8\n#define fi first\n#define se second\n#define all(x) (x).begin(),(x).end()\nusing namespace std;\n\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef tuple<int, int, int> tiii;\ntypedef vector<int> vi;\ntypedef vector<pii> vii;\ntypedef vector<long double> vd;\nconst int inf = 1e9;\nconst long long INF = 1e18;\n\nconst int maxn = 5e5;\nconst int maxm = 5e5;\nconst int mod = 998244353;\nvoid debug_out() { std::cout << std::endl; }\ntemplate <typename Head>\nvoid debug_out(Head H) {\n\tstd::cout << H << std::endl;\n}\n\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n\tstd::cout << H << \", \";\n\tdebug_out(T...);\n}\n\n#ifdef DEBUG\n#define debug(...) std::cout << \"[\" #__VA_ARGS__ \"]: \", debug_out(__VA_ARGS__)\nstruct ListNode {\n\tint val;\n\tListNode *next;\n\tListNode() : val(0), next(nullptr) {}\n\tListNode(int x) : val(x), next(nullptr) {}\n\tListNode(int x, ListNode *next) : val(x), next(next) {}\n};\n#else\n#define debug(...)\n#endif\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& a) {\n\t\tint n = a.size();\n\t\tint ans = 0;\n\t\tint d = 2;\n\t\tint x, y;\n\t\tfor(int i = 0 ; i < (1 << d); i ++ )\n\t\t{\n\t\t\tint maxv = -1e9, minv = 1e9;\n\t\t\tint tx, ty;\n\t\t\tfor(int j = 0; j < n; j ++ )\n\t\t\t{\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int k = 0 ; k < d ; k ++ )\n\t\t\t\t{\n\t\t\t\t\tif(i >> k & 1) sum += a[j][k];\n\t\t\t\t\telse sum -= a[j][k];\n\t\t\t\t}\n\t\t\t\tif (sum > maxv) {\n\t\t\t\t\ttx = j;\n\t\t\t\t\tmaxv = sum;\n\t\t\t\t}\n\t\t\t\tif (sum < minv) {\n\t\t\t\t\tty = j;\n\t\t\t\t\tminv = sum;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ans < maxv - minv) {\n\t\t\t\tans = maxv - minv;\n\t\t\t\tx = tx;\n\t\t\t\ty = ty;\n\t\t\t}\n\t\t\t// ans = max(ans, maxv - minv);\n\t\t}\n\t\tcout << ans << endl;\n\t\tint res = inf;\n\t\tans = 0;\n\t\tfor(int i = 0 ; i < (1 << d); i ++)\n\t\t{\n\t\t\tint maxv = -1e9, minv = 1e9;\n\t\t\tfor(int j = 0; j < n; j ++ )\n\t\t\t{\n\t\t\t\tif (j == x) continue;\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int k = 0 ; k < d ; k ++ )\n\t\t\t\t{\n\t\t\t\t\tif(i >> k & 1) sum += a[j][k];\n\t\t\t\t\telse sum -= a[j][k];\n\t\t\t\t}\n\t\t\t\tmaxv = max(maxv, sum), minv = min(minv, sum);\n\t\t\t}\n\t\t\tans = max(ans, maxv - minv);\n\t\t}\n\t\tres = min(res, ans);\n\t\tcout << ans << endl;\n\t\tans = 0;\n\t\tfor(int i = 0 ; i < (1 << d); i ++)\n\t\t{\n\t\t\tint maxv = -1e9, minv = 1e9;\n\t\t\tfor(int j = 0; j < n; j ++ )\n\t\t\t{\n\t\t\t\tif (j == y) continue;\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int k = 0 ; k < d ; k ++ )\n\t\t\t\t{\n\t\t\t\t\tif(i >> k & 1) sum += a[j][k];\n\t\t\t\t\telse sum -= a[j][k];\n\t\t\t\t}\n\t\t\t\tmaxv = max(maxv, sum), minv = min(minv, sum);\n\t\t\t}\n\t\t\tans = max(ans, maxv - minv);\n\t\t}\n\t\tres = min(res, ans);\n\t\tcout << ans << endl;\n\n\t\tcout << x << ' ' << y << endl;\n\t\treturn res;\n    }\n};\n\n\n\n#ifdef DEBUG\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n#ifdef DEBUG\n\tfreopen(\"in\", \"r\", stdin);\n\tfreopen(\"out\", \"w\", stdout);\n#endif\n\n\n\n\tSolution lst;\n\t\n\n\treturn 0;\n}\n#endif"
}