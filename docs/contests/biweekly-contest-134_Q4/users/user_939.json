{
    "username": "yash_ww07",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll cnt = 0;\n        \n        unordered_map<ll, ll> prev;\n\n        for (int i = 0; i < n; i++) {\n            \n            unordered_map<ll, ll> curr; \n            curr[nums[i]] = 1;\n            \n            \n            if (nums[i] == k) {\n                cnt++;\n            }\n            \n            for(int i=0; i<prev.size(); i++)    cnt += 1;\n\n            for (const auto& it : prev) {\n                ll val = it.first;\n                ll f = it.second;\n                if ((nums[i] & val) == k) {\n                    cnt += f;\n                }\n                curr[nums[i] & val] += f;\n            }\n\n            \n            cnt -= prev.size();\n            \n            prev = curr;\n        }\n        \n        return cnt;\n    }\n};",
    "submit_ts": "1720278437",
    "subm_id": "1311709122"
}