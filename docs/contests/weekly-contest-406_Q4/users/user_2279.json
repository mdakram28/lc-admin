{
    "username": "Ayushcp7051",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Sort the cuts in descending order\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n\n        # Initialize the number of segments\n        horizontal_segments = 1\n        vertical_segments = 1\n\n        # Total cost\n        total_cost = 0\n\n        # Indices for horizontal and vertical cuts\n        i, j = 0, 0\n\n        # Perform cuts\n        while i < len(horizontalCut) and j < len(verticalCut):\n            if horizontalCut[i] >= verticalCut[j]:\n                total_cost += horizontalCut[i] * vertical_segments\n                horizontal_segments += 1\n                i += 1\n            else:\n                total_cost += verticalCut[j] * horizontal_segments\n                vertical_segments += 1\n                j += 1\n\n        # Remaining horizontal cuts\n        while i < len(horizontalCut):\n            total_cost += horizontalCut[i] * vertical_segments\n            i += 1\n\n        # Remaining vertical cuts\n        while j < len(verticalCut):\n            total_cost += verticalCut[j] * horizontal_segments\n            j += 1\n\n        return total_cost",
    "submit_ts": "1720926297",
    "subm_id": "1320281986"
}