{
    "username": "silencea",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        if (k == 0)\n            return 2;\n        if (k == 1)\n            return 4;\n        if (k == 2)\n            return 4;\n        // +1 +2 +4 +8\n        // -1 -1 -1 -1\n        int diff = k - 1;\n        int res = 0;\n        for (int i = 1; i < 100000000; ++i) {\n            \n            int up = (int) Math.pow(2, i) - 1;\n            // System.out.println(i + \", \" + up + \", \" + (up - diff));\n            if (up < diff)\n                continue;\n            if (up == diff)\n                res++;\n            else {\n                int down = up - diff;\n                if (down > i + 1)\n                    break;\n                res += foo(i + 1, down);\n            }\n        }\n        // System.out.println(foo(8, 2));\n        \n        return res;\n    }\n    \n    int foo(int n, int k) {\n        double res = 1;\n        for (int i = n; i >= n - k + 1; i--)\n            res *= (double) i;\n        for (int i = 1; i <= k; i++)\n            res /= i;\n                // System.out.println(\"aaaa: \" + res);\n        return (int) Math.round(res);\n\n    }\n}",
    "submit_ts": 1716089053.0
}