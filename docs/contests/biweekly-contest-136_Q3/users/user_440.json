{
    "username": "realstar",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int count[] = new int[4];\n        for (int i = 0; i < m / 2; i++) {\n        \tfor (int j = 0; j < n / 2; j++) {\n        \t\tint ones = grid[i][j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j] + grid[i][n - 1 - j];\n        \t\tif (ones == 0 || ones == 4)\n        \t\t\tcontinue;\n        \t\tcount[ones]++;\n        \t}\n        }\n        int single = 0;\n        int ones = 0;\n        if (m % 2 != 0) {\n        \tfor (int j = 0; j < n / 2; j++) {\n        \t\tif (grid[m / 2][j] != grid[m / 2][n - 1 - j]) {\n        \t\t\tones++;\n        \t\t\tsingle++;\n        \t\t} else if (grid[m / 2][j] == 1)\n        \t\t\tones += 2;\n        \t}\n        }\n        if (n % 2 != 0) {\n        \tfor (int i = 0; i < m / 2; i++) {\n        \t\tif (grid[i][n / 2] != grid[m - 1 - i][n  / 2]) {\n        \t\t\tones++;\n        \t\t\tsingle++;\n        \t\t} else if (grid[i][n / 2] == 1)\n        \t\t\tones += 2;\n        \t}\n        }\n        int cov = count[1] + 2 * count[2] + count[3] + single;\n        if (m % 2 != 0 && n % 2 != 0 && grid[m / 2][n / 2] == 1)\n        \tcov++;\n        if ((ones + single) % 4 != 0 && single == 0)\n        \tcov += 2;\n        return cov;\n    }\n}",
    "submit_ts": "1722697121",
    "subm_id": "1343134957"
}