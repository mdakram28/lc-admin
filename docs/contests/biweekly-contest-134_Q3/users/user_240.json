{
    "username": "grundy_number",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int n = c.size();\n        vector<int> b(n);\n        for (int i = 0; i < n; ++i) {\n            int l = (i - 1 + n) % n;\n            int r = (i + 1) % n;\n            b[i] = ((c[i] != c[l]) & (c[i] != c[r]));\n        }\n        vector<int> pr(2 * n + 1);\n        for (int i = 0; i < 2 * n; ++i) {\n            pr[i+1] = pr[i] + b[i % n];\n        }\n        int ans = 0;\n        for (int i = k - 1; i < 2 * n; ++i) {\n            int r = i;\n            int l = i - k + 1;\n            \n            if (pr[r] - pr[l + 1] == k - 2 && l < n) {\n                ++ans;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276765",
    "subm_id": "1311631453"
}