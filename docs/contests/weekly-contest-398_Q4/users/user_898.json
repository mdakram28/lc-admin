{
    "username": "dk_sensei",
    "submission": "\n#define ll long long\n// Calculates the binomial coefficient nCr using the logarithmic formula\nll nCr(int n, int r) {\n    // If r is greater than n, return 0\n    if (r > n) return 0;\n    // If r is 0 or equal to n, return 1\n    if (r == 0 || n == r) return 1;\n    // Initialize the logarithmic sum to 0\n    long double res = 0;\n    // Calculate the logarithmic sum of the numerator and denominator using loop\n    for (int i = 0; i < r; i++) {\n        // Add the logarithm of (n-i) and subtract the logarithm of (i+1)\n        res += log(n-i) - log(i+1);\n    }\n    // Convert logarithmic sum back to a normal number\n    return (ll)round(exp(res));\n}\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        ll ans=0;\n        for(int i=0;i<30;i++){\n            int x=i+1;\n            int y=(1LL<<i)-k;\n            if(y>x or y<0) continue;\n            // cout<<x<<\" \"<<y<<\" \"<<k<<\" \"<<nCr(x,y)<<endl;\n            ans+= nCr(x,y);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716089548.0
}