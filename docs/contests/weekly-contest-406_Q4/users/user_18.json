{
    "username": "inevitable003",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        int hSegments = 1, vSegments = 1;\n        int i = 0, j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += (long long)horizontalCut[i] * vSegments;\n                ++hSegments;\n                ++i;\n            } else {\n                totalCost += (long long)verticalCut[j] * hSegments;\n                ++vSegments;\n                ++j;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[i] * vSegments;\n            ++i;\n        }\n\n        while (j < verticalCut.size()) {\n            totalCost += (long long)verticalCut[j] * hSegments;\n            ++j;\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720924694",
    "subm_id": "1320227152"
}