{
    "username": "vikasmandal8055",
    "submission": "\nclass Solution {\n    unordered_map<int, vector<vector<int>>> dp;\n    \n    int nikalTarike(int nishchitTarike, int vartamanTarike, int vartamanChhalaang, bool neecheKaUpyogKarSakteHain) {\n        if (vartamanTarike > nishchitTarike + 5)\n            return 0;\n        \n        if (vartamanChhalaang > 31)\n            return 0;\n        \n        if (dp.count(vartamanTarike) && dp[vartamanTarike][vartamanChhalaang][neecheKaUpyogKarSakteHain ? 1 : 0] != -1)\n            return dp[vartamanTarike][vartamanChhalaang][neecheKaUpyogKarSakteHain ? 1 : 0];\n        \n        int uttar = (vartamanTarike == nishchitTarike) ? 1 : 0;\n        \n        if (neecheKaUpyogKarSakteHain)\n            uttar += nikalTarike(nishchitTarike, vartamanTarike - 1, vartamanChhalaang, false);\n        \n        if (vartamanTarike + (1 << vartamanChhalaang) <= nishchitTarike + 1)\n            uttar += nikalTarike(nishchitTarike, vartamanTarike + (1 << vartamanChhalaang), vartamanChhalaang + 1, true);\n        \n        if (!dp.count(vartamanTarike))\n            dp[vartamanTarike] = vector<vector<int>>(32, vector<int>(2, -1));\n        \n        dp[vartamanTarike][vartamanChhalaang][neecheKaUpyogKarSakteHain ? 1 : 0] = uttar;\n        \n        return uttar;\n    }\n    \npublic:\n    int waysToReachStair(int k) {\n        return nikalTarike(k, 1, 0, true);\n    }\n};",
    "submit_ts": "1716090365",
    "subm_id": "1261865558"
}