{
    "username": "whuang369",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n    int n = edges1.size() + 1;\n    int m = edges2.size() + 1;\n    vector <int> v[n], g[m];\n    for (int i = 0; i < n - 1; i ++) {\n        int x = edges1[i][0], y = edges1[i][1];\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    for (int i = 0; i < m - 1; i ++) {\n        int x = edges2[i][0], y = edges2[i][1];\n        g[x].push_back(y);\n        g[y].push_back(x);\n    }\n    vector <int> d11(n), d12(n), d21(m), d22(m);\n    queue <int> q;\n    int dia11 = 0, dia12 = 0, dia21 = 0, dia22 = 0;\n    int dia1 = 0, dia2 = 0;\n    d11[0] = 1;\n    q.push (0);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : v[x]) {\n            if (d11[y])\n                continue;\n            d11[y] = d11[x] + 1;\n            if (d11[dia11] < d11[y]) {\n                dia11 = y;\n            }\n            q.push(y);\n        }\n    }\n    d12[dia11] = 1;\n    q.push (dia11);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : v[x]) {\n            if (d12[y])\n                continue;\n            d12[y] = d12[x] + 1;\n            dia1 = max (dia1, d12[y]);\n            if (d12[dia12] < d12[y]) {\n                dia12 = y;\n            }\n            q.push(y);\n        }\n    }\n    d21[0] = 1;\n    q.push (0);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : g[x]) {\n            if (d21[y])\n                continue;\n            d21[y] = d21[x] + 1;\n            if (d21[dia21] < d21[y]) {\n                dia21 = y;\n            }\n            q.push(y);\n        }\n    }\n    d22[dia21] = 1;\n    q.push (dia21);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : g[x]) {\n            if (d22[y])\n                continue;\n            d22[y] = d22[x] + 1;\n            dia2 = max (dia2, d22[y]);\n            if (d22[dia22] < d22[y]) {\n                dia22 = y;\n            }\n            q.push(y);\n        }\n    }\n    for (int i = 0; i < n; i ++)\n        d11[i] = 0;\n    for (int i = 0; i < m; i ++)\n        d21[i] = 0;\n    d11[dia12] = 1;\n    q.push (dia12);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : v[x]) {\n            if (d11[y])\n                continue;\n            d11[y] = d11[x] + 1;\n            q.push(y);\n        }\n    }\n    d21[dia22] = 1;\n    q.push (dia22);\n    while (!q.empty()) {\n        int x = q.front(); q.pop ();\n        for (int y : g[x]) {\n            if (d21[y])\n                continue;\n            d21[y] = d21[x] + 1;\n            q.push(y);\n        }\n    }\n    int mn1 = n, mn2 = m;\n    // cout << dia11 << \" \" << dia12 << \" \" << dia21 << \" \" << dia22 << \"\\n\";\n    for (int i = 0; i < n; i ++) {\n        mn1 = min (mn1, max (d11[i], d12[i]));\n        // cout << d11[i] << \" \" << d12[i] << \"\\n\";\n    }\n    // cout << \"--------------------------\\n\";\n    for (int i = 0; i < m; i ++) {\n        mn2 = min (mn2, max (d21[i], d22[i]));\n        // cout << d21[i] << \" \" << d22[i] << \"\\n\";\n    }\n    return max (mn1 + mn2 - 1, max (dia1 - 1, dia2 - 1));\n        \n    }\n};",
    "submit_ts": 1719718064.0
}