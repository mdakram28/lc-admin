{
    "username": "wcq_txdy",
    "submission": "struct Node {\n    long long stair;\n    int jmp;\n    bool canGoDown;\n};\n\nlong long ncr(long long n, long long r) {\n    if (r > n) return 0;\n    if (r > n - r) r = n - r; \n    long long c = 1;\n    for (int i = 0; i < r; ++i) {\n        c = c * (n - i) / (i + 1);\n    }\n    return c;\n}\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        if(k == 0)\n        {\n            return 2;\n        }\n        if(k == 1)\n        {\n            return 4;\n        }\n        if(k == 2)\n        {\n            return 4;\n        }\n        if(k == 3)\n        {\n            return 3;\n        }\n        if(k == 4)\n        {\n            return 2;\n        }\n        long long x = 1;\n        long long exp = 0;\n        while(x < k)\n        {\n            x *=2;\n            exp++;\n        }\n        exp++;\n        long long dist = x-k;\n        if(dist > exp)\n        {\n            return 0;\n        }\n        long long ans = ncr(exp, dist);\n        return ans;\n        \n        // queue<Node> q;\n        // q.push({1, 0, true});\n        // int ans = 0;\n        // while(q.size())\n        // {\n        //     Node x = q.front();\n        //     q.pop();\n        //     if(x.stair == k)\n        //     {\n        //         ans++;\n        //         continue;\n        //     }\n        //     if(x.stair < k)\n        //     {\n        //         if(x.canGoDown && x.stair > 0)\n        //             q.push({x.stair-1, x.jmp, false});\n        //         long long nxt = x.stair;\n        //         nxt += 1LL << x.jmp;\n        //         q.push({nxt, x.jmp+1, true});\n        //     }\n        // }\n        // return ans;\n    }\n};",
    "submit_ts": "1716088388",
    "subm_id": "1261812486"
}