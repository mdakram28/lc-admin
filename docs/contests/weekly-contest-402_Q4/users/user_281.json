{
    "username": "oBoQxrm71O",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> tr(n + 1);\n        function<bool(int)> check = [&](int x) {\n            if (x <= 1 || x >= n) return false;\n            return nums[x - 1] > nums[x - 2] && nums[x - 1] > nums[x];\n        };\n        function<int(int)> lowbit = [&](int x) {\n            return x & -x;\n        };\n        function<void(int, int)> add = [&](int x, int c) {\n            for (int i = x; i <= n; i += lowbit(i)) {\n                tr[i] += c;\n            }\n        };\n        function<int(int)> query = [&](int x) {\n            int ret = 0;\n            for (int i = x; i; i -= lowbit(i)) {\n                ret += tr[i];\n            }\n            return ret;\n        };\n        for (int i = 1; i <= n; i++) {\n            if (check(i)) add(i, 1);\n        }\n        vector<int> ans;\n        for (auto &p : queries) {\n            if (p[0] == 1) {\n                p[1]++, p[2]++;\n                if (check(p[1])) add(p[1], -1);\n                if (p[1] != p[2] && check(p[2])) add(p[2], -1);\n                ans.push_back(query(p[2]) - query(p[1] - 1));\n                if (check(p[1])) add(p[1], 1);\n                if (p[1] != p[2] && check(p[2])) add(p[2], 1);\n            }\n            else {\n                p[1]++;\n                for (int i = p[1] - 1; i <= p[1] + 1; i++) {\n                    if (check(i)) add(i, -1);\n                }\n                nums[p[1] - 1] = p[2];\n                for (int i = p[1] - 1; i <= p[1] + 1; i++) {\n                    if (check(i)) add(i, 1);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718506706",
    "subm_id": "539776725"
}