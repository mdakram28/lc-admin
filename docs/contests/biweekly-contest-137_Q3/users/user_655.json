{
    "username": "eliteCoder",
    "submission": "using ll = long long ;\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<ll,ll>>> g(m,vector<pair<ll,ll>>(n));\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                g[i][j]=make_pair(board[i][j]*1LL,j*1LL);\n            }\n        }\n        for(int i=0;i<m;i++){\n            sort(g[i].begin(),g[i].end(),greater<pair<ll,ll>>());\n        }\n        \n        // cout<\n        \n        ll ans=-1e14;\n        for(int x=0;x<m;x++){\n            for(int y=x+1;y<m;y++){\n                for(int z=y+1;z<m;z++){\n                    // x y z rows , \n                    for(int i=0;i<3;i++){\n                        for(int j=0;j<3;j++){\n                            for(int k=0;k<3;k++){\n                                int c1=g[x][i].second,c2=g[y][j].second,c3=g[z][k].second;\n                                if(c1==c2 || c2==c3 || c1==c3)continue;\n                                ans = max(ans,g[x][i].first+g[y][j].first+g[z][k].first);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723906296",
    "subm_id": "1359045647"
}