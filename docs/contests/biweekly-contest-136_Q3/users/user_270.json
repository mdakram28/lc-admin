{
    "username": "LeetCoach",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        R, C = len(grid), len(grid[0])\n        res = 0\n        if R % 2 == C % 2 == 1 and grid[R // 2][C // 2] == 1:\n            res += 1\n        for r in range(R // 2):\n            for c in range(C // 2):\n                cur = grid[r][c] + grid[R - 1 - r][c] + grid[r][C - 1 - c] + grid[R - 1 - r][C - 1 - c]\n                res += min(cur, 4 - cur)\n        double = 0\n        ones = 0\n        diff = False\n        if R % 2 == 1:\n            for c in range(C // 2):\n                if grid[R // 2][c] == grid[R // 2][C - 1 - c] == 1:\n                    ones += 2\n                elif grid[R // 2][c] != grid[R // 2][C - 1 - c]:\n                    res += 1\n                    diff = True\n        if C % 2 == 1:\n            for r in range(R // 2):\n                if grid[r][C // 2] == grid[R - 1 - r][C // 2] == 1:\n                    ones += 2\n                elif grid[r][C // 2] != grid[R - 1 - r][C // 2]:\n                    res += 1\n                    diff = True\n        if ones % 4 != 0 and not diff:\n            res += 2\n        return res",
    "submit_ts": "1722699786",
    "subm_id": "1343222327"
}