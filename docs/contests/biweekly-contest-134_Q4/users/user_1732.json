{
    "username": "sravanbansal08081998",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n    long long n = nums.size();\n    vector<long long> arr(32, 0);\n    int i = 0;\n    while (k) {\n        arr[i] = (k % 2);\n        k = k / 2;\n        i++;\n    }\n    long long closeZero[n][32];\n    long long farOne[n][32];\n    memset(closeZero, -1, sizeof(closeZero));\n    memset(farOne, -1, sizeof(farOne));\n    for (int j = 0; j < 32; j++) {\n        for (int i = 0; i < n; i++) {\n            long long val = (nums[i] & (1LL << j));\n            if (val >= 1) {\n                farOne[i][j] = i;\n                if (i > 0) {\n                    if (farOne[i - 1][j] != -1) {\n                        farOne[i][j] = farOne[i - 1][j];\n                    }\n                    closeZero[i][j] = closeZero[i - 1][j];\n                }\n            } else {\n                closeZero[i][j] = i;\n            }\n        }\n    }\n    // for (int i = 0; i < n; i++) {\n    //     for (int j = 0; j < 1; j++) {\n    //         cout << i << \" \" << j << \" \" << farOne[i][j] << \" \" << closeZero[i][j] << endl;\n    //     }\n    // }\n\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n        long long mi = 0, ma = i;\n        for (int j = 0; j < 32; j++) {\n            long long val = (nums[i] & (1LL << j));\n            if (val >= 1) {\n                if (arr[j] == 1) {\n                    mi = max(mi, farOne[i][j]);\n                } else {\n                    ma = min(ma, closeZero[i][j]);\n                }\n            } else {\n                if (arr[j] == 1) {\n                    mi = -1;\n                    break;\n                }\n            }\n        }\n        if (ma != -1 && mi != -1) {\n            ans += max(ma - mi + 1, 0LL);\n        }\n    }\n    return ans;\n}\n};",
    "submit_ts": "1720280476",
    "subm_id": "1311790812"
}