{
    "username": "wengh",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        @cache\n        def solve1(i1, i2, j1, j2):\n            imin = jmin = inf\n            imax = jmax = -1\n            for i in range(i1, i2):\n                for j in range(j1, j2):\n                    if grid[i][j]:\n                        imin = min(imin, i)\n                        imax = max(imax, i)\n                        jmin = min(jmin, j)\n                        jmax = max(jmax, j)\n            if imax == -1:\n                return 0\n            return (imax - imin + 1) * (jmax - jmin + 1)\n        def solve2(i1, i2, j1, j2):\n            ans = inf\n            for i in range(i1+1, i2):\n                ans = min(ans, solve1(i1, i, j1, j2) + solve1(i, i2, j1, j2))\n            for j in range(j1+1, j2):\n                ans = min(ans, solve1(i1, i2, j1, j) + solve1(i1, i2, j, j2))\n            return ans\n        def solve3(i1, i2, j1, j2):\n            ans = inf\n            for i in range(i1+1, i2):\n                ans = min(ans, solve2(i1, i, j1, j2) + solve1(i, i2, j1, j2))\n                ans = min(ans, solve1(i1, i, j1, j2) + solve2(i, i2, j1, j2))\n            for j in range(j1+1, j2):\n                ans = min(ans, solve2(i1, i2, j1, j) + solve1(i1, i2, j, j2))\n                ans = min(ans, solve1(i1, i2, j1, j) + solve2(i1, i2, j, j2))\n            return ans\n        return solve3(0, len(grid), 0, len(grid[0]))\n",
    "submit_ts": "1719110876",
    "subm_id": "1297256551"
}