{
    "username": "xPatrL",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        long maxSum = Long.MIN_VALUE;\n        PriorityQueue<int[]>[] pq = new PriorityQueue[m];\n        for (int i = 0; i < m; i++) {\n            pq[i] = new PriorityQueue<>((a, b) -> Long.compare(b[0], a[0]));\n            for (int j = 0; j < n; j++) {\n                pq[i].add(new int[]{board[i][j], j});\n            }\n        }\n        for (int i1 = 0; i1 < m; i1++) {\n            for (int i2 = i1 + 1; i2 < m; i2++) {\n                for (int i3 = i2 + 1; i3 < m; i3++) {\n                    long[][] valIdx1 = new long[3][2];\n                    long[][] valIdx2 = new long[3][2];\n                    long[][] valIdx3 = new long[3][2];\n                    PriorityQueue<int[]> p1 = new PriorityQueue<>(pq[i1]), p2 = new PriorityQueue<>(pq[i2]), p3 = new PriorityQueue<>(pq[i3]);\n                    for (int i = 0; i < 3; i++) {\n                        valIdx1[i] = new long[]{p1.peek()[0], p1.poll()[1]};\n                        valIdx2[i] = new long[]{p2.peek()[0], p2.poll()[1]};\n                        valIdx3[i] = new long[]{p3.peek()[0], p3.poll()[1]};\n                    }\n                    for (int i = 0; i < 3; i++) {\n                        for (int j = 0; j < 3; j++) {\n                            for (int k = 0; k < 3; k++) {\n                                if (valIdx1[i][1] != valIdx2[j][1] && valIdx2[j][1] != valIdx3[k][1] && valIdx3[k][1] != valIdx1[i][1]) {\n                                    maxSum = Math.max(maxSum, valIdx1[i][0] + valIdx2[j][0] + valIdx3[k][0]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n}",
    "submit_ts": "1723910251",
    "subm_id": "556340334"
}