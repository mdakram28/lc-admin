{
    "username": "shivamj0326",
    "submission": "public class Solution {\n    public int minFlips(int[][] grid) {\n        int numRows = grid.length;\n        int numCols = grid[0].length;\n        int minFlips = 0;\n\n        \n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (grid[numRows / 2][numCols / 2] == 1) {\n                minFlips += 1;\n            }\n        }\n\n        int[] flipCount = new int[3];\n        \n        \n        if (numRows % 2 == 1) {\n            int left = 0, right = numCols - 1;\n            while (left < right) {\n                int sum = grid[numRows / 2][left] + grid[numRows / 2][right];\n                flipCount[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        \n        if (numCols % 2 == 1) {\n            int top = 0, bottom = numRows - 1;\n            while (top < bottom) {\n                int sum = grid[top][numCols / 2] + grid[bottom][numCols / 2];\n                flipCount[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n       \n        if (flipCount[2] % 2 == 1) {\n            if (flipCount[1] > 0) {\n                minFlips += flipCount[1];\n            } else {\n                minFlips += 2;\n            }\n        } else {\n            minFlips += flipCount[1];\n        }\n\n       \n        for (int i = 0; i < numRows / 2; ++i) {\n            for (int j = 0; j < numCols / 2; ++j) {\n                int topLeft = grid[i][j];\n                int bottomLeft = grid[numRows - 1 - i][j];\n                int topRight = grid[i][numCols - 1 - j];\n                int bottomRight = grid[numRows - 1 - i][numCols - 1 - j];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    minFlips += Math.min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return minFlips;\n    }\n}",
    "submit_ts": "1722700098",
    "subm_id": "1343231624"
}