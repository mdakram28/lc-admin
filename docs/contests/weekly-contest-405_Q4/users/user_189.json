{
    "username": "ShivamPansuriya98",
    "submission": "class Solution {\n    class Node {\n        Node[] child;\n        List<Integer> wordAt;\n\n        Node() {\n            child = new Node[26];\n            wordAt = new ArrayList<>();\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Node root = trie(words);\n        int n = target.length();\n        var dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            Node node = root;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (node.child[c - 'a'] == null) break;\n                node = node.child[c - 'a'];\n                for (int wordIndex : node.wordAt) {\n                    int newCost = dp[i] + costs[wordIndex];\n                    dp[j + 1] = Math.min(dp[j + 1], newCost);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    private Node trie(String[] words) {\n        Node root = new Node();\n        for (int i = 0; i < words.length; i++) {\n            Node node = root;\n            for (char c : words[i].toCharArray()) {\n                if (node.child[c - 'a'] == null) {\n                    node.child[c - 'a'] = new Node();\n                }\n                node = node.child[c - 'a'];\n            }\n            node.wordAt.add(i);\n        }\n        return root;\n    }\n}",
    "submit_ts": "1720321370",
    "subm_id": "1312321084"
}