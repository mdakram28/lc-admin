{
    "username": "Andwerp",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        ll mod = 1e9 + 7;\n        int n = nums.size();\n        vector<vector<ll>> dp(n);\n        for(int i = 0; i < n; i++){\n            dp[i] = vector<ll>(nums[i] + 1, 0);\n        }\n        //base case\n        dp[0] = vector<ll>(nums[0] + 1, 1);\n        for(int i = 1; i < n; i++){\n            //precompute pfx\n            vector<ll> pfx(nums[i - 1] + 2, 0);\n            for(int j = 1; j < pfx.size(); j++){\n                pfx[j] = pfx[j - 1] + dp[i - 1][j - 1];\n                pfx[j] %= mod;\n            }\n            // cout << \"CUR : \" << nums[i] << \"\\n\";\n            for(int j = 0; j <= nums[i]; j++){\n                //identify the range of numbers that we can come from. \n                int nondec = j;\n                int noninc = nums[i] - j;\n                int mx = min({nums[i - 1], j, nums[i - 1] - noninc});\n                mx = max(-1, mx);\n                // cout << \"MX : \" << mx << \"\\n\";\n                dp[i][j] = pfx[mx + 1];\n                // cout << dp[i][j] << \" \";\n            }\n            // cout << \"\\n\";\n        }\n        ll ans = 0;\n        for(int i = 0; i <= nums[n - 1]; i++){\n            ans += dp[n - 1][i];\n            ans %= mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723345031",
    "subm_id": "1351547171"
}