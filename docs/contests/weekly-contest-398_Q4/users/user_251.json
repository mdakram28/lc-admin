{
    "username": "user6192dH",
    "submission": "class Solution {\n    \n    long[] powers = new long[40];\n    \n    long[][] binom = new long[40][40];\n    \n    public int waysToReachStair(int k) {\n        long ways = 0;\n        \n        powers[0] = 1;\n        for (int i = 1; i < 40; i++) {\n            powers[i] = powers[i-1] + powers[i-1];\n        }\n        \n        long K = k;\n        \n        for (int i = 0; i < 40; i++) {\n            binom[i][0] = 1;\n            for (int j = 1; j <= i; j++) {\n                binom[i][j] = binom[i-1][j-1] + binom[i-1][j];\n            }\n        }\n        \n        \n        for (long jumps = 0; jumps <= 35; jumps++) {\n            if (jumps == 0) {\n                \n                if (k == 0) {\n                    ways++;\n                } else if (k == 1) {\n                    ways++;\n                }\n                \n                continue;\n            } \n            \n            \n            if (powers[(int)jumps] < K) continue;\n            \n            if (powers[(int)jumps] - jumps - 1L > K) continue;\n            \n            // powers[jumps] - d = K\n            long drops = powers[(int)jumps] - K;\n            // jump + 1 spots to place these drops\n            \n            // jump + 1 choose drops ways to do this\n            ways += binom[(int)(jumps+1L)][(int)drops];\n        }\n        \n        return (int) ways;\n        \n    }\n}",
    "submit_ts": "1716088128",
    "subm_id": "1261804841"
}