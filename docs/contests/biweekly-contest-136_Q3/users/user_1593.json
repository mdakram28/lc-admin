{
    "username": "LordHarsh1211",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n\n        int flipCount = 0;\n\n        for (int r = 0; r < rows / 2; ++r) {\n            for (int c = 0; c < cols / 2; ++c) {\n                vector<int> subGridElements = {\n                    matrix[r][c], matrix[rows - r - 1][c],\n                    matrix[r][cols - c - 1],\n                    matrix[rows - r - 1][cols - c - 1]};\n\n                int numOnes =\n                    count(subGridElements.begin(), subGridElements.end(), 1);\n\n                flipCount += min(numOnes, 4 - numOnes);\n            }\n        }\n\n        int possibleFlips = 0;\n        int centralCount = 0;\n\n        if (rows % 2 != 0) {\n            for (int c = 0; c < cols / 2; ++c) {\n                if (matrix[rows / 2][c] != matrix[rows / 2][cols - c - 1]) {\n                    flipCount += 1;\n                    possibleFlips += 1;\n                } else {\n                    if (matrix[rows / 2][c] == 1) {\n                        centralCount += 1;\n                    }\n                }\n            }\n        }\n\n        if (cols % 2 != 0) {\n            for (int r = 0; r < rows / 2; ++r) {\n                if (matrix[r][cols / 2] != matrix[rows - r - 1][cols / 2]) {\n                    flipCount += 1;\n                    possibleFlips += 1;\n                } else {\n                    if (matrix[r][cols / 2] == 1) {\n                        centralCount += 1;\n                    }\n                }\n            }\n        }\n\n        if (rows % 2 != 0 && cols % 2 != 0 && matrix[rows / 2][cols / 2] == 1) {\n            flipCount += 1;\n        }\n\n        if (possibleFlips == 0 && centralCount % 2 != 0) {\n            flipCount += 2;\n        }\n\n        return flipCount;\n    }\n};",
    "submit_ts": "1722699781",
    "subm_id": "1343222163"
}