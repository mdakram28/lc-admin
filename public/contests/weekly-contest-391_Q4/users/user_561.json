{
    "username": "iamch15542",
    "submission": "class Solution {\npublic:\n    vector<int> maxManhattan(vector<vector<int>>& points) {\n        int maxn = points[0][0] + points[0][1], minn = maxn;\n        int max_diff = points[0][0] - points[0][1], min_diff = max_diff;\n        \n        int minn_i = 0, maxn_i = 0, minn_d_i = 0, maxn_d_i = 0;\n\n        for (int i = 1; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            if (sum < minn) {\n                minn = sum;\n                minn_i = i;\n            } else if (sum > maxn) {\n                maxn = sum;\n                maxn_i = i;\n            }\n            if (diff < min_diff) {\n                min_diff = diff;\n                minn_d_i = i;\n            } else if (diff > max_diff) {\n                max_diff = diff;\n                maxn_d_i = i;\n            }\n        }\n        vector<int> res = {maxn - minn, maxn_i, minn_i};\n        if (max_diff - min_diff > res[0]) {\n            res[0] = max_diff - min_diff;\n            res[1] = maxn_d_i;\n            res[2] = minn_d_i;\n        }\n        return res;\n    }\n    \n    void print(vector<vector<int>>& arr) {\n        cout << \"start\\n\";\n        for (auto& v : arr) {\n            cout << v[0] << ' ' << v[1] << '\\n';\n        }\n        cout << \"end\\n\";\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> arr = maxManhattan(points);\n        int res = arr[0], n = points.size();\n        vector<int> p1 = points[arr[1]], p2 = points[arr[2]];\n        cout << arr[0] << ' ' << arr[1] << ' ' << arr[2] << '\\n';\n        vector<vector<int>> remove;\n        for (int i = 0; i < n; i++) {\n            if (i == arr[1] || i == arr[2]) continue;\n            remove.push_back(points[i]);\n        }\n        remove.push_back(p1);\n        auto dis = maxManhattan(remove);\n        res = min(res, dis[0]);\n        remove.pop_back();\n        remove.push_back(p2);\n        dis = maxManhattan(remove);\n        res = min(res, dis[0]);\n        return res;\n    }\n};\n\n/*\n[[3,10],[5,15],[10,2],[4,4]]\n[[1,1],[1,1],[1,1]]\n[[5,3],[4,6],[2,4],[1,8],[3,9],[1,6]]\n[[10,7],[5,5],[2,7],[2,6]]\n\n12\n0\n6\n5\n*/"
}