{
    "username": "shi-xiao-yu-2",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeMap<Integer, Integer> tm = new TreeMap<>();\n        int len = queries.length;\n        int[] res = new int[len];\n        int cur = n - 1;\n        for (int i = 0; i < len; i++) {\n            if (cur == 1) {\n                res[i] = 1;\n                continue;\n            }\n            int from = queries[i][0], to = queries[i][1];\n            if (tm.containsKey(from)) {\n                if (tm.get(from) < to) {\n                    cur += (tm.get(from) - from - 1);\n                    int x = from;\n                    while (tm.higherKey(x) != null && tm.higherKey(x) < to) {\n                        int t = tm.higherKey(x);\n                        cur += (tm.get(t) - t - 1);\n                        x = t;\n                        tm.remove(t);\n                    }\n                    cur -= (to - from - 1);\n                    tm.put(from, to);\n                }\n            } else {\n                if (tm.lowerKey(from) != null && tm.get(tm.lowerKey(from)) > from) {\n                    res[i] = cur;\n                    continue;\n                }\n                int x = from;\n                while (tm.higherKey(x) != null && tm.higherKey(x) < to) {\n                    int t = tm.higherKey(x);\n                    cur += (tm.get(t) - t - 1);\n                    x = t;\n                    tm.remove(t);\n                }\n                cur -= (to - from - 1);\n                tm.put(from, to);\n            }\n            res[i] = cur;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722743480",
    "subm_id": "552351049"
}