{
    "username": "sun-man-man",
    "submission": "\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        row = len(grid)\n        col = len(grid[0])\n\n        def cal(x1, y1, x2, y2):\n            xmn = float(\"inf\")\n            xmx = float(\"-inf\")\n            ymn = float(\"inf\")\n            ymx = float(\"-inf\")\n            for i in range(x1, x2+1):\n                for j in range(y1, y2+1):\n                    if grid[i][j] == 1:\n                        xmn = min(xmn, i)\n                        xmx = max(xmx, i)\n                        ymn = min(ymn, j)\n                        ymx = max(ymx, j)\n            if xmn > xmx:\n                return float(\"inf\")\n            return (xmx-xmn+1)*(ymx-ymn+1)\n        ans = float(\"inf\")\n        for i in range(row-2):\n            for j in range(i+1, row-1):\n                ans = min(ans, cal(0, 0, i, col-1)+cal(i+1, 0,\n                          j, col-1)+cal(j+1, 0, row-1, col-1))\n\n        for i in range(col-2):\n            for j in range(i+1, col-1):\n                ans = min(ans, cal(0, 0, row-1, i)+cal(0, i+1,\n                          row-1, j)+cal(0, j+1, row-1, col-1))\n\n        for i in range(row-1):\n            for j in range(col-1):\n                ans = min(ans, cal(0, 0, i, col-1)+cal(i+1, 0,\n                          row-1, j)+cal(i+1, j+1, row-1, col-1))\n\n        for i in range(row-1, 0, -1):\n            for j in range(col-1):\n                ans = min(ans, cal(i, 0, row-1, col-1) +\n                          cal(0, 0, i-1, j)+cal(0, j+1, i-1, col-1))\n\n        for i in range(col-1):\n            for j in range(row-1):\n                ans = min(ans, cal(0, 0, row-1, i)+cal(0, i+1,\n                          j, col-1)+cal(j+1, i+1, row-1, col-1))\n        for i in range(col-1, 0, -1):\n            for j in range(row-1):\n                ans = min(ans, cal(0, i, row-1, col-1) +\n                          cal(0, 0, j, i-1)+cal(j+1, 0, row-1, i-1))\n        return ans\n",
    "submit_ts": 1719111771.0
}