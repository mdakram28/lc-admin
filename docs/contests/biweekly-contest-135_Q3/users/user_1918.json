{
    "username": "ksarda17",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n=nums.size();\n        unordered_map<int,int> mpp;\n        for(int i=0;i<n/2;i++){\n            int temp=abs(nums[i]-nums[n-i-1]);\n            mpp[temp]++;\n        }\n        vector<int> diff;\n        int curr=0;\n        for(auto it:mpp){\n            if(it.second>curr){\n                diff.empty();\n                diff.push_back(it.first);\n                curr=it.second;\n            }\n            else if(it.second==curr){\n                diff.push_back(it.first);\n                curr=it.second;\n            }\n        }\n        int ans=INT_MAX;\n        for(int i=0;i<diff.size();i++){\n            int temp=0;\n            for(int j=0;j<(n/2);j++){\n                int t=abs(nums[j]-nums[n-j-1]);\n                if(t==diff[i]){\n                    continue;\n                }\n                else{\n                   int m=max(nums[j],nums[n-j-1]);\n                   int m1=min(nums[j],nums[n-j-1]);\n                   int t1=m-diff[i];\n                   int t2=diff[i]+m1;\n                   if(t1>=0 && t1<=k){\n                    temp++;\n                   }\n                   else if(t2>=0 && t2<=k){\n                    temp++;\n                   }\n                   else{\n                    temp=temp+2;\n                   }\n\n                }\n                   \n            }\n            ans=min(ans,temp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489651",
    "subm_id": "1327459674"
}