{
    "username": "asr1y",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long res = 0;\n        int n = nums.size();\n        vector<vector<int>> cnt(n + 1, vector<int>(32, 0));\n        vector<vector<int>> next0(n + 1, vector<int>(32, n));\n        for(int i = n - 1; i >= 0; i --) {\n            for(int j = 0; j < 32; j ++) {\n                if((nums[i] >> j) & 1) {\n                    cnt[i][j] = cnt[i + 1][j] + 1;\n                    next0[i][j] = next0[i + 1][j];\n                }\n                else {\n                    next0[i][j] = i;\n                }\n            }\n        }\n        for(int i = 0; i < n; i ++) {\n            int left = i, right = n - 1;\n            for(int j = 0; j < 32; j ++) {\n                if(((k >> j) & 1) && ((nums[i] >> j) & 1)) {\n                    right = min(right, i + cnt[i][j] - 1);\n                }\n                else if(((k >> j) & 1) == 0 && ((nums[i] >> j) & 1)) {\n                    left = max(left, next0[i][j]);\n                }\n                else if(((k >> j) & 1) && ((nums[i] >> j) & 1) == 0) {\n                    right = -1;\n                    break;\n                }\n            }\n            if(left <= right) {\n                res += right - left + 1;\n            }\n        }\n        return res;\n    }\n};\n\n/*\n\n010\n001\n010\n100\n000\n\n\n\n\n\n\n\n\n\n*/",
    "submit_ts": "1720279828",
    "subm_id": "1311766726"
}