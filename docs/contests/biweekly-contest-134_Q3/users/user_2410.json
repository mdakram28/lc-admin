{
    "username": "the_GOAT13",
    "submission": "\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int b) {\n       \n        int f = a.size();\n        \n         int c = 0;\n        int d = 0;\n        int e = 1;\n        \n        while (e < f + b && d < f) {\n            int g = findEndOfGroup(a, d, e, f, b);\n            c += calculateGroups(g, d, b);\n            d = g;\n            e = d + 1;\n        }\n        \n        return c;\n    }\n\nprivate:\n    int findEndOfGroup(vector<int>& a, int d, int e, int f, int b) {\n        int h = e;\n        int i = h % f;\n        \n        while (a[i] != a[(i - 1 + f) % f] && h < f + b - 1) {\n            h++;\n            i = h % f;\n        }\n        \n        return h;\n    }\n\n    int calculateGroups(int g, int d, int b) {\n        int j = g - d - b + 1;\n        return max(j, 0);\n    }\n\n    int max(int x, int y) {\n        if (x > y) {\n            return x;\n        } else {\n            return y;\n        }\n    }\n};\n",
    "submit_ts": "1720281565",
    "subm_id": "1311830053"
}