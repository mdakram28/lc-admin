{
    "username": "ltf0501",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        if (k == 0) return 2; // 1->0, 1->0->1->0\n        if (k == 1) return 4; // 1->0, 1->0->1, 1->2->1, 1->0->1->0->2->1\n\n        int ans = 0;\n        k--;\n        vector C(50, vector<int64_t>(50));\n        for (int i = 0; i < 50; i++) C[i][0] = C[i][i] = 1;\n        for (int i = 1; i < 50; i++) {\n            for (int j = 1; j < i; j++) {\n                C[i][j] = C[i - 1][j] + C[i - 1][j - 1];\n            }\n        }\n        int sum = 0, mx_dec = 1;\n        for (int i = 1;; i++) {\n            sum += (1 << (i - 1));\n            mx_dec++;\n            \n            if (sum - k > mx_dec) break;\n            \n            if (k > sum) continue;\n            \n            int x = sum - k;\n            //cout << \"i = \" << i << \", x = \" << x << '\\n';\n            // 2^0, 2^1, ..., 2^{i - 1}, -1, -1, ..., -1\n            // ans += C(i + 1, x)\n            ans += C[i + 1][x];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716087404",
    "subm_id": "1261782598"
}