{
    "username": "skywalkert",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& A, vector<vector<int>>& que) {\n        int n = A.size();\n        vector<bool> B(n);\n        vector<int> bits(n);\n        for(int i = 1; i + 1 < n; ++i) {\n            bits[i] += B[i] = A[i - 1] < A[i] && A[i] > A[i + 1];\n            int j = i + (i & -i);\n            if(j < n)\n                bits[j] += bits[i];\n            // printf(\"%d%c\", (int)B[i], \" \\n\"[i == n - 2]);\n        }\n        vector<int> res;\n        for(auto &it: que) {\n            if(it[0] == 2) {\n                int i = it[1];\n                A[i] = it[2];\n                // printf(\"#%d: %d\\n\", i, it[2]);\n                for(int j = i - 1; j <= i + 1; ++j) {\n                    if(j < 1 || j > n - 2)\n                        continue;\n                    bool nxt = A[j - 1] < A[j] && A[j] > A[j + 1];\n                    if(nxt == B[j])\n                        continue;\n                    for(int dt = (int)nxt - (int)B[j], x = j; x < n; x += x & -x)\n                        bits[x] += dt;\n                    // printf(\"%d: %d -> %d\\n\", j, (int)B[j], (int)nxt);\n                    B[j] = nxt;\n                }\n                continue;\n            }\n            int L = it[1] + 1, R = it[2] - 1;\n            if(L > R) {\n                res.push_back(0);\n                continue;\n            }\n            int cnt = 0;\n            for(int x = R; x > 0; x -= x & -x)\n                cnt += bits[x];\n            for(int x = L - 1; x > 0; x -= x & -x)\n                cnt -= bits[x];\n            res.push_back(cnt);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506555",
    "subm_id": "1289623103"
}