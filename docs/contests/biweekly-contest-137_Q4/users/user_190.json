{
    "username": "HaKu",
    "submission": "class Solution {\n    fun maximumValueSum(board: Array<IntArray>): Long {\n        val pq = PriorityQueue<Triple<Long, Int, Int>>(compareBy({ -it.first }))\n        for (i in board.indices) {\n            for (j in board[0].indices) {\n                pq.offer(Triple(board[i][j].toLong(), i, j))\n            }\n        }\n\n        val arr = ArrayList<Triple<Long, Int, Int>>()\n\n        while (pq.isNotEmpty()) {\n            val item = pq.poll()\n            if (arr.size > 100) break\n            arr.add(item)\n        }\n\n        var ans = Long.MIN_VALUE\n        for (i in arr.indices) {\n            for (j in i + 1 until arr.size) {\n                for (k in j + 1 until arr.size) {\n                    val setX = hashSetOf<Int>()\n                    val setY = hashSetOf<Int>()\n                    val a = arr[i]\n                    setX.add(a.second)\n                    setY.add(a.third)\n                    val b = arr[j]\n                    setX.add(b.second)\n                    setY.add(b.third)\n                    val c = arr[k]\n                    setX.add(c.second)\n                    setY.add(c.third)\n                    if (setX.size == 3 && setY.size == 3) {\n//                        println(\"${a.first + b.first + c.first} with $a $b $c\")\n                        ans = maxOf(ans, a.first + b.first + c.first)\n                    }\n                }\n            }\n        }\n        return ans\n    }\n}",
    "submit_ts": "1723907968",
    "subm_id": "556328482"
}