{
    "username": "CEn4494FZh",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end(),greater<int>());        \n        sort(verticalCut.begin(),verticalCut.end(),greater<int>());\n        long long res = 0, hor =1,vert=1;\n        long long i =0,j=0;\n        while(i<m-1 && j<n-1){\n             if (horizontalCut[i] > verticalCut[j])\n            {\n                res = res + (long long)(horizontalCut[i] * vert);\n                hor++;\n                i++;\n            }\n            else\n            {\n                res = res + (long long)(verticalCut[j] * hor);\n                vert++;\n                j++;\n            }\n        }\n        long long total = 0;\n        while (i < m-1)\n            total = total + (long long) horizontalCut[i++];\n        res = res + (long long)(total * vert);\n\n        total = 0;\n        while (j < n-1)\n            total += verticalCut[j++];\n        res = res+ (long long)(total * hor);\n\n        return res;\n    }\n};",
    "submit_ts": "1720926017",
    "subm_id": "1320273388"
}