{
    "username": "kailam11223",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.length();\n        vector<int> counts(n, 0);\n        counts[0] = s[0]=='1';\n        for(int i = 1; i < n ; ++i){\n            counts[i] = counts[i-1] + (s[i]=='1');\n        }\n        \n        vector<int> nexts(n, 0);\n        int nxt = n;\n        for(int i = n-1; i >= 0; --i){\n            nexts[i] = nxt;\n            if(s[i]=='0'){\n                nxt = i;\n            }\n        }\n        \n        int ret = 0;\n        for(int i = 0; i < n ; ++i){\n            for(int j = i; j < n;){\n                auto offset = (i>0)?counts[i-1]:0;\n                auto count1 = counts[j]-offset;\n                auto count0 = j-i+1-count1;\n                \n                if(count1 < count0*count0){\n                    int target = count0*count0 + offset;\n                    auto it = lower_bound(counts.begin(), counts.end(), target);\n                    if(it == counts.end()) break;\n                    j = it - counts.begin();\n                } else {\n                    auto tmp = j;\n                    j = nexts[j];\n                    ret += j - tmp;\n                }\n            }\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1722136071",
    "subm_id": "1335722875"
}