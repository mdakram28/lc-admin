{
    "username": "JavOliva",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<int> difs(n);\n        for (int i = 0; i < n; i ++){\n            difs[i] = target[i] - nums[i];\n        }\n        int wea = 0;\n        for (int i = 0; i <= n; i ++){\n            if (i < n and wea == 0){\n                ans += abs(difs[i]);\n                wea = difs[i];\n                continue;\n            }\n            if (i == n){\n                break;\n            }\n            if ((wea < 0 and difs[i] <= 0) or (wea > 0 and difs[i] >= 0)){\n                if (wea < 0){\n                    if (wea > difs[i])\n                        ans += (wea - difs[i]);\n                    wea = difs[i];\n                }\n                else{\n                    if (wea < difs[i])\n                        ans += (difs[i] - wea);\n                    wea = difs[i];\n                }\n            }\n            else{\n                ans += abs(difs[i]);\n                wea = difs[i];\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721530136",
    "subm_id": "1327923972"
}