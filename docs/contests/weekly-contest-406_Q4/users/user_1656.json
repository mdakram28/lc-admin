{
    "username": "bombbox",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hor=[]\n        ver=[]\n        for h in horizontalCut:\n            heapq.heappush(hor,-h)\n        for v in verticalCut:\n            heapq.heappush(ver,-v)\n        row_pieces=1\n        col_pieces=1\n        total=0\n        while ver and hor:\n            if hor[0]<=ver[0]:# horizontal cut\n                cost=-heapq.heappop(hor)\n                total+=cost*row_pieces\n                # print(\"horizon cut: \",cost)\n                # print(f\"for {row_pieces} times\")\n                col_pieces+=1\n            else:\n                cost=-heapq.heappop(ver)\n                total+=cost*col_pieces\n                # print(\"veritcal cut: \",cost)\n                # print(f\"for {row_pieces} times\")\n                row_pieces+=1\n        # print(\"row pieces\", row_pieces)\n        # print(\"col pieces\", col_pieces)\n        \n        if hor:\n            total+=(-sum(hor))*row_pieces\n        if ver:\n            total+=(-sum(ver))*col_pieces\n        return total \n        \n\n",
    "submit_ts": "1720926081",
    "subm_id": "1320275372"
}