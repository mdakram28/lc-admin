{
    "username": "xyzlancehe",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n                int n = points.size();\n\n        auto maxManhattan = [&](int exclude)\n        {\n            int maxSumIdx = -1;\n            int maxDiffIdx = -1;\n            int minSumIdx = -1;\n            int minDiffIdx = -1;\n\n            for (int i = 0; i < n; i++)\n            {\n                if (i == exclude)\n                    continue;\n                int sum = points[i][0] + points[i][1];\n                int diff = points[i][0] - points[i][1];\n                if (maxSumIdx == -1 || sum > points[maxSumIdx][0] + points[maxSumIdx][1])\n                {\n                    maxSumIdx = i;\n                }\n                if (maxDiffIdx == -1 || diff > points[maxDiffIdx][0] - points[maxDiffIdx][1])\n                {\n                    maxDiffIdx = i;\n                }\n                if (minSumIdx == -1 || sum < points[minSumIdx][0] + points[minSumIdx][1])\n                {\n                    minSumIdx = i;\n                }\n                if (minDiffIdx == -1 || diff < points[minDiffIdx][0] - points[minDiffIdx][1])\n                {\n                    minDiffIdx = i;\n                }\n            }\n\n            int maxSum = points[maxSumIdx][0] + points[maxSumIdx][1];\n            int maxDiff = points[maxDiffIdx][0] - points[maxDiffIdx][1];\n            int minSum = points[minSumIdx][0] + points[minSumIdx][1];\n            int minDiff = points[minDiffIdx][0] - points[minDiffIdx][1];\n\n            if (maxSum - minSum > maxDiff - minDiff)\n            {\n                return tuple{maxSum - minSum, maxSumIdx, minSumIdx};\n            }\n            else\n            {\n                return tuple{maxDiff - minDiff, maxDiffIdx, minDiffIdx};\n            }\n        };\n\n        auto [_, i, j] = maxManhattan(-1);\n        auto [d1, i1, j1] = maxManhattan(i);\n        auto [d2, i2, j2] = maxManhattan(j);\n        return min(d1, d2);\n    }\n};"
}