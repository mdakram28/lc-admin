{
    "username": "AlaudaeHong",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        # self.cache = dict()\n        \n        # def count_pairs(a1_end, a2_end, nums_arr):\n        #     if not nums_arr:\n        #         return 1\n\n        #     if (a1_end, a2_end, len(nums_arr)) in self.cache:\n        #         # print(\"hit\")\n        #         return self.cache[(a1_end, a2_end, len(nums_arr))]\n\n        #     num_pairs = 0\n        #     for x1 in range(a1_end, nums_arr[0]+1):\n        #         x2 = nums_arr[0]-x1\n        #         if a2_end >= x2:\n        #             num_pairs += count_pairs(x1, nums_arr[0]-x1, nums_arr[1:])\n\n        #     self.cache[(a1_end, a2_end, len(nums_arr))] = num_pairs\n        #     return num_pairs\n\n        # num_pairs = 0\n        # for x in range(0, nums[0]+1):\n        #     num_pairs += count_pairs(x, nums[0]-x, nums[1:])\n\n        # return num_pairs % (7 + 10 ** 9)\n\n        dp = [\n            [0 for _ in range(max(nums)+1)] for _ in nums \n        ]\n\n        for i in range(nums[0]+1):\n            dp[0][i] = 1\n\n        # for line in dp:\n        #     print(line)\n\n        for i in range(1, len(nums)):\n            for x1 in range(0, nums[i]+1):\n                x2_upper_bound = x1-min(0, nums[i]-nums[i-1])\n\n                if x2_upper_bound < 0: continue\n                \n                dp[i][x1] += sum(dp[i-1][x2_upper_bound:])\n            \n        # print()\n        # for line in dp:\n        #     print(line)\n\n        return sum(dp[-1]) % (7 + 10 ** 9)\n\n",
    "submit_ts": "1723346968",
    "subm_id": "1351589069"
}