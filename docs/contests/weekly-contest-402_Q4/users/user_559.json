{
    "username": "Hadyko",
    "submission": "\nclass segtree:\n    def __init__(self, n):\n        self.n = n\n        self.tree = [0] * (2 * self.n)\n\n    # function to build the tree  \n    def build(self, arr) : \n        # insert leaf nodes in tree  \n        for i in range(self.n) :  \n            self.tree[self.n + i] = arr[i];  \n        # build the tree by calculating parents  \n        for i in range(self.n - 1, 0, -1) :  \n            self.tree[i] = self.tree[i << 1] + self.tree[i << 1 | 1];  \n\n    # function to update a tree node  \n    def update(self, p, value) :  \n        # set value at position p  \n        self.tree[p + self.n] = value;  \n        p = p + self.n;  \n        # move upward and update parents  \n        i = p; \n        while i > 1 : \n\n            self.tree[i >> 1] = self.tree[i] + self.tree[i ^ 1];  \n            i >>= 1;  \n\n    # function to get sum on interval [l, r)  \n    def query(self, l, r) :  \n        res = 0;  \n        # loop to find the sum in the range  \n        l += self.n; \n        r += self.n; \n        while l < r : \n            if (l & 1) : \n                res += self.tree[l];  \n                l += 1\n            if (r & 1) : \n                r -= 1; \n                res += self.tree[r];  \n            l >>= 1; \n            r >>= 1\n        return res;\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        arr = [0 for n in nums]\n        for i in range(1, len(nums) - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                arr[i] = 1\n        st = segtree(len(arr))\n        st.build(arr)\n        ans = []\n        for q in queries:\n            if q[0] == 1:\n                minus = arr[q[1]] + arr[q[2]] if q[1] != q[2] else arr[q[1]]\n                ans.append(st.query(q[1], q[2] + 1) - minus)\n            else:\n                nums[q[1]] = q[2]\n                for i in range(max(1, q[1] - 1), min(q[1] + 2, len(arr) - 1)):\n                    if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                        arr[i] = 1\n                        st.update(i, 1)\n                    else:\n                        arr[i] = 0\n                        st.update(i, 0)\n        return ans\n\n            \n        ",
    "submit_ts": "1718507286",
    "subm_id": "1289646849"
}