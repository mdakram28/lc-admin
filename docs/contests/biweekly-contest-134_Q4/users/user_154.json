{
    "username": "Akash_0P",
    "submission": "class SGTree {\n  vector<int> sg;\n  int n;\npublic:\n  SGTree(int n, vector<int> &vec) {\n    this->n = n;\n    sg = vector<int> (4 * n);\n    build(0, 0, n-1, vec);\n  }\n  void build(int i, int l, int r, vector<int> &vec) {\n    if(l == r) {\n      sg[i] = vec[l];\n      return;\n    }\n    int m = (l + r)/2;\n    build(2*i+1, l, m, vec), build(2*i+2, m+1, r, vec);\n    sg[i] = (sg[2*i+1] & sg[2*i+2]);\n  }\n  int query(int L, int R, int i, int l, int r) {\n    if(r < L || R < l) return INT_MAX;\n    if(L <= l && r <= R) return sg[i];\n    int m = (l + r)/2;\n    return (query(L, R, 2*i+1, l, m) & query(L, R, 2*i+2, m+1, r));\n  }\n  int query(int L, int R) {\n    return query(L, R, 0, 0, n-1);\n  }\n};\n\nclass Solution {\npublic:\n  long long countSubarrays(vector<int>& nums, int k) {\n    \n    long long ans = 0;\n\n    int n = nums.size();\n\n    SGTree sg(n, nums);\n\n    for(int i = 0; i < n; i++) {\n\n      long long ind1 = -1, ind2 = -1;\n\n      long long l = i, r = n-1;\n\n      while(l <= r) {\n        int m = (l + r)/2;\n\n        int x = sg.query(i, m);\n\n        if(x < k) r = m - 1;\n        else if(x > k) l = m + 1;\n        else {\n          ind1 = m;\n          r = m - 1;\n        }\n\n      }\n\n      l = i, r = n-1;\n      while(l <= r) {\n        int m = (l + r)/2;\n\n        int x = sg.query(i, m);\n\n        if(x < k) r = m - 1;\n        else if(x > k) l = m + 1;\n        else {\n          ind2 = m;\n          l = m + 1;\n        }\n      }\n\n      if(ind1 != -1) ans += ind2 - ind1 + 1;\n    }\n\n    return ans;\n  }\n};",
    "submit_ts": "1720277656",
    "subm_id": "1311673877"
}