{
    "username": "xi-jun-xiao-zi",
    "submission": "from typing import List\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        m = len(bin(max(max(nums), k))) - 1\n        cnt = [0] * m\n        end = 0\n        tmp = (1 << m) - 1\n        last = -1\n        ans = 0\n        for i in range(n):\n            while end < n and tmp & nums[end] > k:\n                num = nums[end]\n                tmp &= num\n                for j in range(m):\n                    if num & (1 << j):\n                        cnt[j] += 1\n                end += 1\n            if end == n:\n                break\n            if tmp & nums[end] == k:\n                if last >= end:\n                    ans += last - end + 1\n                else:\n                    now = end + 1\n                    while now < n and nums[now] & k == k:\n                        now += 1\n                    last = now - 1\n                    ans += now - end\n            else:\n                last = -1\n            \n            if end == i:\n                end += 1\n            else:\n                pre = nums[i]\n                for j in range(m):\n                    if pre & (1 << j):\n                        cnt[j] -= 1\n                    if cnt[j] == end - i - 1:\n                        tmp |= (1 << j)\n            # print(i, ans, last, tmp, end, cnt)\n        return ans\n            ",
    "submit_ts": "1720278904",
    "subm_id": "544564976"
}