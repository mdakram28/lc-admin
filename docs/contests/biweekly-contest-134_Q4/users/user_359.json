{
    "username": "Acepted",
    "submission": "class Solution {\npublic:\n    int sum[100010][32];\n    int a[32];\n    bool ok (int m, int r, int k) {\n        int s = 0;\n        for (int i = 0; i < 31; ++i) {\n            if (sum[r][i] - sum[m - 1][i] == r - m + 1) s |= 1 << i;\n        }\n        return s >= k;\n    }\n        bool ok1 (int m, int r, int k) {\n        int s = 0;\n        for (int i = 0; i < 31; ++i) {\n            if (sum[r][i] - sum[m - 1][i] == r - m + 1) s |= 1 << i;\n        }\n        return s <= k;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        for (int i = 0; i < 31; ++i) {\n            if (k & (1 << i)) a[i]++;\n        }\n        for (int i = 0; i < nums.size(); ++i) {\n            for (int j = 0; j < 31; ++j) {\n                sum[i + 1][j] = sum[i][j];\n                if (nums[i] & (1 << j)) {\n                    sum[i + 1][j] += 1;\n                }\n            }\n        }\n        long long ans = 0;\n        for (int i = 1; i <= nums.size(); ++i) {\n            int l = 1, r = i;\n            int rl = -1, rr = -1;\n            while (l <= r) {\n                int m = (l + r) / 2;\n                if (ok(m, i, k)) {\n                    rl = m;\n                    r = m - 1;\n                } else {\n                    l = m + 1;\n                }\n            }\n            l = 1, r = i;\n            while (l <= r) {\n                int m = (l + r) / 2;\n                if (ok1(m, i, k)) {\n                    rr = m;\n                    l = m + 1;\n                } else {\n                    r = m - 1;\n                }\n            }\n            if (rl != -1 && rr != -1) {\n                \n                ans += rr -rl + 1;\n            }\n            // cout << i << \" \" << rl << \" \" << rr << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278087",
    "subm_id": "544560590"
}