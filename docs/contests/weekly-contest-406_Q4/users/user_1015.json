{
    "username": "WarisChugh",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        sort(horizontalCut.rbegin(),horizontalCut.rend());\n        sort(verticalCut.rbegin(),verticalCut.rend());\n        \n        ll i = 0;\n        ll j = 0;\n        ll cou1 = 1;\n        ll cou2 = 1;\n        ll cost = 0;\n        \n        while(i < horizontalCut.size() && j < verticalCut.size())\n        {\n            if(horizontalCut[i] > verticalCut[j])\n            {\n                cost += ((ll)horizontalCut[i] * cou2);\n                i++;\n                cou1++;\n            }\n            else if(horizontalCut[i] < verticalCut[j])\n            {\n                cost += ((ll)verticalCut[j]*cou1);\n                j++;\n                cou2++;\n            }\n            else\n            {\n                if(cou1 > cou2)\n                {\n                    cost += ((ll)verticalCut[j]*cou1);\n                    j++;\n                    cou2++;\n                }\n                else\n                {\n                    cost += ((ll)horizontalCut[i] * cou2);\n                    i++;\n                    cou1++;\n                }\n            }\n        }\n        while(i < horizontalCut.size())\n        {\n            cost += ((ll)horizontalCut[i] * cou2);\n            i++;\n            cou1++;\n        }\n        while(j < verticalCut.size())\n        {\n            cost += ((ll)verticalCut[j]*cou1);\n            j++;\n            cou2++;\n        }\n        return cost;\n  \n    }\n};",
    "submit_ts": "1720925699",
    "subm_id": "1320263317"
}