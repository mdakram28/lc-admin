{
    "username": "plevande",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        r = [None for i in range(n)]\n        for ei, ci in requirements:\n            r[ei] = ci  \n        start = [1]\n        p = 10**9+7\n        for i in range(n):\n            next_s = [None for i in range((i+1)*(i)//2+1)]\n            #start[0], start[1], start[2],  ..., start[i] start[i+1]\n            #            start[0], start[1], ...,  start[0]  start[1]\n            #\n            C = 0\n            for x in range(i+1):\n                if x  < len(start):\n                    C+=start[x]\n                next_s[x] = C \n            for x in range(i+1, len(next_s)):\n                C-=start[x-i-1]\n                if x < len(start):\n                    C+=start[x]\n                next_s[x] = C \n          #  print(i+1, next_s)\n            if r[i] is not None:\n                if  r[i] >= len(next_s)  or next_s[r[i]]==0:\n                    return 0\n                start = next_s\n                for j in range(len(start)):\n                    if j != r[i]:\n                        start[j] = 0\n            else:\n                start = next_s \n        answer =sum(start) % p\n        return answer % p\n        ",
    "submit_ts": 1719068635.0
}