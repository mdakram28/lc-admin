{
    "username": "Celony Mire",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#ifdef LC_LOCAL\n#include \"parser.hpp\"\n#else\n#define dbg(...)\n#endif\n\n// ----- CHANGE FOR PROBLEM -----\nclass Solution {\npublic:\n  long long maximumValueSum(vector<vector<int>> &g) {\n    int n = g.size(), m = g[0].size();\n    long long ans = -1e18;\n    vector pref(n + 1, vector(m + 1, (int)-1e9)), suf(n + 1, vector(m + 1, (int)-1e9)), pref2(n + 1, vector(m + 1, (int)-1e9)), suf2(n + 1, vector(m + 1, (int)-1e9));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        pref[i + 1][j + 1] = max(max(pref[i][j + 1], pref[i + 1][j]), g[i][j]);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = m - 1; j >= 0; j--) {\n        suf[i + 1][j] = max(max(suf[i + 1][j + 1], suf[i][j]), g[i][j]);\n      }\n    }\n    for (int i = n - 1; i >= 0; i--) {\n      for (int j = 0; j < m; j++) {\n        pref2[i][j + 1] = max(max(pref2[i + 1][j + 1], pref2[i][j]), g[i][j]);\n      }\n    }\n    for (int i = n - 1; i >= 0; i--) {\n      for (int j = m - 1; j >= 0; j--) {\n        suf2[i][j] = max(max(suf2[i][j + 1], suf2[i + 1][j]), g[i][j]);\n      }\n    }\n    vector row_pref(n, vector(m + 1, (int)-1e9)), row_suf(n, vector(m + 1, (int)-1e9));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        row_pref[i][j + 1] = max(row_pref[i][j], g[i][j]);\n      }\n      for (int j = m - 1; j >= 0; j--) {\n        row_suf[i][j] = max(row_suf[i][j + 1], g[i][j]);\n      }\n    }\n    for (int i = 2; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        for (int i2 = 1; i2 < i; i2++) {\n          ans = max(ans, 1LL * g[i][j] + row_pref[i2][j] + suf[i2][j + 1]);\n          ans = max(ans, 1LL * g[i][j] + row_suf[i2][j + 1] + pref[i2][j]);\n        }\n      }\n    }\n    for (int i = n - 3; i >= 0; i--) {\n      for (int j = 0; j < m; j++) {\n        for (int i2 = i + 1; i2 < n; i2++) {\n          ans = max(ans, 1LL * g[i][j] + row_pref[i2][j] + suf2[i2 + 1][j + 1]);\n          ans = max(ans, 1LL * g[i][j] + row_suf[i2][j + 1] + pref2[i2 + 1][j]);\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        ans = max(ans, 1LL * g[i][j] + pref[i][j] + suf2[i + 1][j + 1]);\n        ans = max(ans, 1LL * g[i][j] + pref2[i + 1][j] + suf[i][j + 1]);\n      }\n    }\n    return ans;\n  }\n};\n// ----- CHANGE FOR PROBLEM -----\n\n#ifdef LC_LOCAL\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  exec(&Solution::maximumValueSum); // CHANGE FOR PROBLEM\n}\n#endif",
    "submit_ts": "1723908502",
    "subm_id": "1359155340"
}