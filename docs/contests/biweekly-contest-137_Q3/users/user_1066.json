{
    "username": "jushuai_lfx",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long maximumValueSum(vector<vector<int>>& b) {\n        ll bottom = LLONG_MIN / 10;\n        int row = b.size();\n        int col = b[0].size();\n        ll ans = bottom;\n        vector<ll> last1(col, bottom);\n        vector<vector<ll>> last2(col, vector<ll>(col, bottom));\n        vector<ll> vv(col + 1, bottom);\n        \n        for (int i = 0; i < row; ++i) {\n            vector<ll> dp1(col, bottom);\n            vector<vector<ll>> dp2(col, vector<ll>(col, bottom));\n            vector<ll> v;\n            \n            for (int j = 0; j < col; ++j) {\n                dp1[j] = max((ll)b[i][j], last1[j]);\n                for (int k = 0; k < col; ++k) {\n                    if (k == j) {\n                        continue;\n                    }\n                    dp2[min(j, k)][max(j, k)] = max(dp2[min(j, k)][max(j, k)], last2[min(j, k)][max(j, k)]);\n                    dp2[min(j, k)][max(j, k)] = max((ll)b[i][j] + last1[k], dp2[min(j, k)][max(j, k)]);\n                }\n            }\n            \n            for (int j = 0; j < col; ++j) {\n                vector<ll> tmp;\n                for (int k = 0; k < col; ++k) {\n                    tmp.push_back(last2[min(j, k)][max(j, k)] );\n                }\n                sort(tmp.begin(), tmp.end(), greater<ll>());\n                \n                // for (int k = 0; k < col; ++k) {\n                //     cout << \"tmp: \" << k << \" \" << tmp[k] << \" \" << i << \" \" << j << endl;\n                // }\n                \n                for (int k = 0; k < col; ++k) {\n                    if (tmp[k] != vv[k]) {\n                        ans = max(ans, vv[k] + b[i][j]);\n                        // cout << \"*\" << vv[k] << \" \" << i << \" \" << j << \" \" << b[i][j] << endl;\n                        break;\n                    }\n                }\n            }\n            \n            \n            for (int j = 0; j < col; ++j) {\n                for (int k = 0; k < j; ++k) {\n                    v.push_back(dp2[k][j]);\n                    // cout << i << \" \" << k << \" \" << j << \" \" << dp2[k][j] << endl;\n                }\n            }\n            sort(v.begin(), v.end(), greater<ll>());\n            \n            \n            \n            swap(dp1, last1);\n            swap(dp2, last2);\n            swap(v, vv);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910162",
    "subm_id": "556339862"
}