{
    "username": "HighJUMP",
    "submission": "class Solution {\n    int[] zeros = new int[32];\n    public void subs(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) zeros[i] -= 1;\n        }\n    }\n    public void adds(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) zeros[i] += 1;\n        }\n    }\n    public int find() {\n        int res = 0;\n        for (int i = 0; i < 32; ++i) {\n            if (zeros[i] == 0) res ^= (1 << i);\n        }\n        return res;\n    }\n    public int minimumDifference(int[] nums, int k) {\n        Arrays.fill(zeros, 0);\n        int i = 0 , n = nums.length , ans = Integer.MAX_VALUE;\n        for (int j = 0; j < n; ++j) {\n            adds(nums[j]);\n            int x = find();\n            ans = Math.min(ans, Math.abs(x - k));\n            while (i < j && x < k) {\n                subs(nums[i]); i++;\n                x = find();\n                ans = Math.min(ans, Math.abs(x - k));\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1717300195.0
}