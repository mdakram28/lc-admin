{
    "username": "Vishwajeet Singh Solanki",
    "submission": "class Solution {\npublic:\n    struct Cell {\n    int value;\n    int rowIndex;\n    int colIndex;\n};\n     \n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n    int n = board[0].size();\n    \n    // Step 1: Precompute the top 3 elements for each row along with their row and column indices\n    vector<Cell> topCells;\n    \n    for (int i = 0; i < m; ++i) {\n        vector<Cell> temp;\n        for (int j = 0; j < n; ++j) {\n            temp.push_back({board[i][j], i, j});\n        }\n        // Sort the row elements by value in descending order\n        sort(temp.begin(), temp.end(), [](const Cell& a, const Cell& b) {\n            return a.value > b.value;\n        });\n        // Add the top 3 elements from each row to the topCells vector\n        for (int k = 0; k < 3 && k < temp.size(); ++k) {\n            topCells.push_back(temp[k]);\n        }\n    }\n    \n    // Step 2: Sort all selected cells by value in descending order\n    sort(topCells.begin(), topCells.end(), [](const Cell& a, const Cell& b) {\n        return a.value > b.value;\n    });\n\n    long long maxSum = INT64_MIN;\n    \n    // Step 3: Find the maximum sum of three cells ensuring no two cells share the same row or column\n    int topSize = topCells.size();\n    for (int i = 0; i < topSize; ++i) {\n        for (int j = i + 1; j < topSize; ++j) {\n            if (topCells[i].rowIndex != topCells[j].rowIndex && topCells[i].colIndex != topCells[j].colIndex) {\n                for (int k = j + 1; k < topSize; ++k) {\n                    if (topCells[i].rowIndex != topCells[k].rowIndex && topCells[i].colIndex != topCells[k].colIndex &&\n                        topCells[j].rowIndex != topCells[k].rowIndex && topCells[j].colIndex != topCells[k].colIndex) {\n                        long long currentSum = (long long)topCells[i].value + topCells[j].value + topCells[k].value;\n                        maxSum = max(maxSum, currentSum);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    \n    return maxSum;\n    }\n        \n    \n};",
    "submit_ts": "1723908322",
    "subm_id": "1359147748"
}