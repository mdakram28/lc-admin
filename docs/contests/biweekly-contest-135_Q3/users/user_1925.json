{
    "username": "peng-qiao-e-liao",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n int n=nums.length;\n        int res=Integer.MAX_VALUE;\n        HashMap<Integer,Integer> map=new HashMap<>();\n        int []pre=new int[k+1];\n        for (int i=0;i<n/2;i++) {\n            int temp=Math.abs(nums[i]-nums[n-i-1]);\n           map.put(temp,map.getOrDefault(temp,0)+1);\n           int max=Math.max(Math.max(nums[i],nums[n-i-1]),Math.max(k-nums[i],k-nums[n-i-1]));\n           pre[max]++;\n\n            }\n        for (int i=1;i<=k;i++) pre[i]+=pre[i-1];\n\n        for (int i=0;i<n/2;i++) {\n            int temp=Math.abs(nums[i]-nums[n-i-1]);\n\n            int res1=n/2-map.get(temp);\n            if (temp-1>=0) res1+=pre[temp-1];\n            res=Math.min(res,res1);\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721489658",
    "subm_id": "548319693"
}