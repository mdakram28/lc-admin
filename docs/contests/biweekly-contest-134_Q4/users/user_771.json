{
    "username": "zhou_jay",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        count = 0\n        current = defaultdict(int)\n\n        for num in nums:\n            new_current = defaultdict(int)\n\n            if num == k:\n                count += 1\n            new_current[num] += 1\n\n            for key in current:\n                new_and = key & num\n                if new_and == k:\n                    count += current[key]\n                new_current[new_and] += current[key]\n\n            current = new_current\n\n        return count\n        \n#         n = len(nums)\n#         count = 0\n#         left = 0\n\n#         while left < n:\n#             if nums[left] < k:\n#                 left += 1\n#                 continue\n\n#             current_and = nums[left]\n#             if current_and == k:\n#                 count += 1\n\n#             right = left + 1\n\n#             while right < n:\n#                 current_and &= nums[right]\n#                 if current_and < k:\n#                     break\n#                 if current_and == k:\n#                     count += 1\n#                 right += 1\n\n#             left += 1\n\n        return count\n#         def find_x(a, b):\n#             x = 0\n#             bit_position = 1\n\n#             while bit_position <= a:\n#                 if a & bit_position and b & bit_position:\n#                         x |= bit_position\n#                 bit_position <<= 1\n#             return x\n        \n#         prefix_sums = defaultdict(int)\n#         offset = -1\n#         res = 0\n#         for i, num in enumerate(nums):\n#             offset &= num\n# #             x & offset = num\n#             prefix_sums[find_x(offset, num)] += 1\n#             print(i, dict(prefix_sums), find_x(offset, k), offset)\n#             res += prefix_sums[find_x(offset, k)]\n#             # prefix_sums[num - offset] += 1\n#             # res += prefix_sums[k - offset]\n#         return res",
    "submit_ts": "1720279176",
    "subm_id": "1311740666"
}