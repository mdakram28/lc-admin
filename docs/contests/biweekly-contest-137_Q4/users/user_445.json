{
    "username": "Pavel",
    "submission": "public class Solution \n{\n    static Comparer<int[]> comp = Comparer<int[]>.Create((x, y) => y[0].CompareTo(x[0]));\n    public long MaximumValueSum(int[][] board)\n    {\n        long res = long.MinValue;\n        int[][] sorted = new int[board.Length * board[0].Length][];\n        int index = 0;\n\n        for (int i = 0; i < board.Length; i++)\n        {\n            for (int j = 0; j < board[0].Length; j++)\n            {\n                sorted[index++] = [board[i][j], i, j];\n            }\n        }\n\n        Array.Sort(sorted, comp);\n        HashSet<int> rows = new(), cols = new();\n        Check(0, 0, 0);\n        return res;\n\n        void Check(int index, int rookNum, long sum)\n        {\n            if (3-rookNum + index > sorted.Length)\n                return;\n\n            var cur = sorted[index];\n            if (rows.Contains(cur[1]) || cols.Contains(cur[2]))\n            {\n                Check(index + 1, rookNum, sum);\n                return;\n            }\n\n            if (rookNum == 1 && sum + cur[0] + sorted[index+1][0] <= res)\n                return;\n\n            rows.Add(cur[1]);\n            cols.Add(cur[2]);\n            sum += cur[0];\n            if (rookNum == 2)\n                res = Math.Max(res, sum);\n            else\n                Check(index + 1, rookNum + 1, sum);\n\n            rows.Remove(cur[1]);\n            cols.Remove(cur[2]);\n\n            Check(index + 1, rookNum, sum- cur[0]);\n        }\n    }\n}",
    "submit_ts": "1723909243",
    "subm_id": "1359185040"
}