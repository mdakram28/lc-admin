{
    "username": "liaoyunyang0815",
    "submission": "class Solution {\n#define pb push_back\npublic:\n    int seg[400005];\n    vector<int> v;\n\n    void build(int id, int l, int r) {\n        if (l == r) {\n            seg[id] = v[l];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(id << 1, l, mid);\n        build(id << 1 | 1, mid+1, r);\n        seg[id] = seg[id<<1] & seg[id<<1 | 1];\n    }\n\n    int ask(int id, int l, int r, int L, int R) {\n        //cout << \"l = \" << l << \" r = \" << r << endl;\n        if (l > R || r < L) return -1;\n        if (L <= l && r <= R) {\n            return seg[id];\n        } \n        int mid = (l + r) >> 1;\n        return (ask(id<<1, l, mid, L, R) & ask(id<<1|1, mid+1, r, L, R));\n    }\n\n    bool check(int a, int k) {\n        for (int i = 0; i < 32; i++) if ((k>>i) & 1) {\n            if (!((a>>i)&1)) return true;\n        }\n        return false;\n    }\n\n    bool check2(int a, int k) {\n        for (int i = 0; i < 32; i++) if ((k>>i) & 1) {\n            if (!((a>>i)&1)) return false;\n        }\n        if (a > k) return true;\n        return false;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = (int)nums.size();\n\n        long long ans = 0;\n\n        v.pb(0);\n        for (int i:nums) v.pb(i);\n\n        build(1, 1, n);\n\n        for (int i = 1; i <= n; i++) {\n            //cout << \"i = \" << i << endl;\n            int l = i+1, r = n+1;\n            while (l < r) {\n                int mid = (l + r) >> 1;\n                if (check(ask(1, 1, n, i, mid), k)) {\n                    r = mid;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            int s = l - 1;\n            //cout << \"s = \" << s << endl;\n            l = i+1; r = n+1;\n            while (l < r) {\n                int mid = (l + r) >> 1;\n                //cout << \"mid = \" << mid << \" ask = \" << ask(1, 1, n, i, mid) << endl;\n                if (check2(ask(1, 1, n, i, mid), k)) {\n                    l = mid + 1;\n                } else {\n                    r = mid;\n                }\n            }\n            int f = l;\n            //cout << \"f = \" << f << endl;\n            ans += max(0, s - f + 1);\n            if (v[i] == k) ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280192",
    "subm_id": "1311780250"
}