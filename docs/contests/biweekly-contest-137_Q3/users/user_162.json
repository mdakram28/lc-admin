{
    "username": "gaoqiaoheimu",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        int t = 2 * n + 2 * m - 3;\n        vector<vector<long long>> bb;\n        for(int k=0;k<n;k++) {\n            for(int i=0;i<m;i++) {\n                int c = board[k][i];\n                vector<long long> tmp;\n                tmp.push_back(c);\n                tmp.push_back(k);\n                tmp.push_back(i);\n                bb.push_back(tmp);\n            }\n        }\n        sort(bb.begin(), bb.end());\n        vector<vector<long long>> cc;\n        for(int k=n*m-t;k<n*m;k++) {\n            vector<long long> tmp;\n            tmp.push_back(bb[k][1]);\n            tmp.push_back(bb[k][2]);\n            tmp.push_back(bb[k][0]);\n            cc.push_back(tmp);\n        }\n        sort(cc.begin(), cc.end());\n        long long INF = 1e18;\n        vector<vector<long long>> h(n, vector<long long>(m, 0));\n        for(int k=0;k<n;k++) {\n            for(int i=0;i<m;i++) {\n                h[k][i] = -INF;\n            }\n        }\n        for(auto c: cc) {\n            int x = c[0], y = c[1], d = c[2];\n            h[x][y] = d;\n        }\n        for(int k=n-2;k>=0;k--) {\n            for(int i=0;i<m;i++) {\n                h[k][i] = max(h[k][i], h[k + 1][i]);\n            }\n        }\n        vector<vector<long long>> hp(n, vector<long long>(3, 0));\n        for(int k=0;k<n;k++) {\n            for(int i=0;i<3;i++) {\n                hp[k][i] = -INF;\n            }\n        }\n        for(int k=0;k<n;k++) {\n            for(int i=0;i<m;i++) {\n                if (h[k][i] == -INF) continue;\n                long long c = h[k][i];\n                if (c >= hp[k][0]) {\n                    hp[k][2] = hp[k][1];\n                    hp[k][1] = hp[k][0];\n                    hp[k][0] = c;\n                } else if (c >= hp[k][1]) {\n                    hp[k][2] = hp[k][1];\n                    hp[k][1] = c;\n                } else if (c >= hp[k][2]) {\n                    hp[k][2] = c;\n                }\n            }\n        }\n        long long ans = -INF;\n        for(int k=0;k<t;k++) {\n            for(int i=k+1;i<t;i++) {\n                long long x1 = cc[k][0], y1 = cc[k][1], x2 = cc[i][0], y2 = cc[i][1];\n                if (x1 == x2 || y1 == y2) continue;\n                if (x2 == n - 1) continue;\n                bool ok[3];\n                for(int j=0;j<3;j++) ok[j] = true;\n                long long d1 = h[x2 + 1][y1], d2 = h[x2 + 1][y2];\n                if (d1 != INF) {\n                    for(int j=0;j<3;j++) {\n                        if (hp[x2 + 1][j] == -INF) break;\n                        if (!ok[j]) continue;\n                        if (hp[x2 + 1][j] == d1) {\n                            ok[j] = false;\n                            break;\n                        }\n                    }\n                }\n                if (d2 != INF) {\n                    for(int j=0;j<3;j++) {\n                        if (hp[x2 + 1][j] == -INF) break;\n                        if (!ok[j]) continue;\n                        if (hp[x2 + 1][j] == d2) {\n                            ok[j] = false;\n                            break;\n                        }\n                    }\n                }\n                long long tmp = cc[k][2] + cc[i][2];\n                for(int j=0;j<3;j++) {\n                    if (ok[j] && hp[x2 + 1][j] != -INF) {\n                        tmp += hp[x2 + 1][j];\n                        ans = max(ans, tmp);\n                        break;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908481",
    "subm_id": "1359154465"
}