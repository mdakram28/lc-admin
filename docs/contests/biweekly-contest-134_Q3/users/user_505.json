{
    "username": "Pajju_0330",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        for(int i = 0; i < n; ++i){\n            colors.push_back(colors[i]);\n        }\n        vector<int>v;\n        for(int i = 1; i < 2*n; ++i){\n            if(colors[i] != colors[i-1]){\n                v.push_back(1);\n            }else{\n                v.push_back(0);\n            }\n        }\n        int pref[2*n];\n        memset(pref,0,sizeof(pref));\n        pref[0]  = v[0];\n        for(int i = 1; i < 2*n; ++i){\n            pref[i] = v[i] + pref[i-1];\n        }\n        int ans = 0;\n        for(int i = 0; i < n; ++i){\n            int prev = (i - 1 >= 0?pref[i-1]:0);\n            int sum = pref[i + k-2] - prev;\n            ans += (sum == (k - 1));\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720276940",
    "subm_id": "1311640152"
}