{
    "username": "jian-shen-_",
    "submission": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\nclass Solution {\n    int n;\n    ArrayList<Integer>[] g;\n    int []times;\n    int[]delay;\n    HashMap<Integer,Integer> []ex;\n    public int[] timeTaken(int[][] edges) {\n        n=edges.length+1;\n        times=new int[n];\n\n        if(n==1)return times;\n\n        delay=new int[n];\n\n        g=new ArrayList[n];\n        Arrays.setAll(g, i->new ArrayList<>());\n\n        ex=new HashMap[n];\n        Arrays.setAll(ex, i->new HashMap<>());\n\n        for(int[] edge:edges){\n            int x=edge[0],y=edge[1];\n            g[x].add(y);\n            g[y].add(x);\n        }\n\n        dfs(0,-1);\n\n        times[0]=delay[0];\n\n        int maid=-1, ma=-1;\n        int ma2=-1;\n        for(int nx:g[0]){\n            int a=delay[nx];\n            if(nx%2==1)a++;\n            else a+=2;\n\n            if(a>ma){\n                ma2=ma;\n                ma=a;\n                maid=nx;\n            }else if(a>ma2){\n                ma2=a;\n            }\n        }\n        if(g[0].size()==1){\n            ex[0].put(g[0].getFirst(), 0);\n        }else{\n            for(int nx:g[0]){\n                if(nx==maid){\n                    ex[0].put(nx, ma2);\n                }else{\n                    ex[0].put(nx, ma);\n                }\n            }\n        }\n\n        //System.out.println(ex[0]);\n\n        dfs1(0,-1);\n\n        return times;\n    }\n\n    private void dfs1(int cur, int fa) {\n\n        for(int nx:g[cur]){\n            if(nx==fa)continue;\n\n            int ap;\n            if(cur%2==1){\n                ap= ex[cur].get(nx)+1;\n            }else{\n                ap= ex[cur].get(nx)+2;\n            }\n\n            times[nx]=Math.max(delay[nx] , ap);\n\n            // \u66f4\u65b0\u6392\u9664\n            int maid=-1, ma=-1;\n            int ma2=-1;\n            for(int cnx:g[nx]){\n                if(cnx==cur)continue;\n\n                int a=delay[cnx];\n                if(cnx%2==1)a++;\n                else a+=2;\n\n                if(a>ma){\n                    ma2=ma;\n\n                    ma=a;\n                    maid=cnx;\n                }else if(a>ma2){\n                    ma2=a;\n                }\n            }\n\n            for(int cnx:g[nx]){\n                if(cnx==cur)continue;\n                if(cnx==maid){\n                    ex[nx].put(cnx, Math.max(ap, ma2));\n                }else{\n                    ex[nx].put(cnx, Math.max(ap, ma));\n                }\n            }\n\n\n\n            dfs1(nx,cur);\n\n        }\n    }\n\n    // \u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u67d3\u8272\u540e \u6574\u4e2a\u5b50\u6811\u8981\u591a\u4e45\n    int dfs(int cur, int fa){\n        int res=0;\n        for(int nx:g[cur]){\n            if(nx==fa)continue;\n            int a=dfs(nx,cur);\n\n            if(nx%2==1)a++;\n            else a+=2;\n\n            res = Math.max(res,a);\n        }\n\n        delay[cur]=res;\n\n//        if(fa!=-1){\n//            ex[cur].put(fa, res);\n//        }\n\n        return res;\n    }\n}",
    "submit_ts": "1722699125",
    "subm_id": "552274211"
}