{
    "username": "der-u",
    "submission": "impl Solution {\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let (m,n) = (grid.len(),grid[0].len());\n        let mut ans = 0;\n        for i in 0..m/2{\n            for j in 0..n/2{\n                let all =  grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                ans += (all-0).min(4-all);\n            }\n        }       \n        match (m%2,n%2) {\n            (1,1) => {\n                ans += grid[m/2][n/2];\n                let mut one_num = 0;\n                let mut diff = 0;\n                for i in 0..m/2 {\n                    if grid[i][n/2]==1{\n                        one_num+=1;\n                    }\n                    if grid[m-1-i][n/2]==1{\n                        one_num+=1;\n                    }\n                    if grid[i][n/2]!=grid[m-1-i][n/2]{\n                        one_num+=1;\n                        diff +=1;\n                    }\n                }\n                for j in 0..n/2 {\n                    if grid[m/2][j]==1{\n                        one_num+=1;\n                    }\n                    if grid[m/2][n-1-j]==1{\n                        one_num+=1;\n                    }\n                    if grid[m/2][j]!=grid[m/2][n-1-j]{\n                        one_num+=1;\n                        diff +=1;\n                    }\n                }\n                if one_num%4!=0{\n                    // \u53ea\u80fd\u662f2 6 10...\n                    if diff==0{\n                        diff+=2;\n                    }\n                }  \n                ans += diff;\n                \n            },\n            (0,1) => {\n                let mut one_num = 0;\n                let mut diff = 0;\n                for i in 0..m/2 {\n                    if grid[i][n/2]==1{\n                        one_num+=1;\n                    }\n                    if grid[m-1-i][n/2]==1{\n                        one_num+=1;\n                    }\n                    if grid[i][n/2]!=grid[m-1-i][n/2]{\n                        one_num+=1;\n                        diff +=1;\n                    }\n                }    \n                if one_num%4!=0{\n                    // \u53ea\u80fd\u662f2 6 10...\n                    if diff==0{\n                        diff+=2;\n                    }\n                }  \n                ans += diff;\n\n            },\n            (1,0) => {\n                let mut one_num = 0;\n                let mut diff = 0;\n                for j in 0..n/2 {\n                    if grid[m/2][j]==1{\n                        one_num+=1;\n                    }\n                    if grid[m/2][n-1-j]==1{\n                        one_num+=1;\n                    }\n                    if grid[m/2][j]!=grid[m/2][n-1-j]{\n                        one_num+=1;\n                        diff +=1;\n                    }\n                }    \n                if one_num%4!=0{\n                    // \u53ea\u80fd\u662f2 6 10...\n                    if diff==0{\n                        diff+=2;\n                    }\n                }  \n                ans += diff;\n            },\n            _ => {\n\n            }\n        } \n        ans\n    }\n}\n",
    "submit_ts": "1722699217",
    "subm_id": "552274659"
}