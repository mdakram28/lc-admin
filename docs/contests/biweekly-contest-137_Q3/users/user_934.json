{
    "username": "Sahil",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        msum = float('-inf')\n        rtv = []\n        for i in range(m):\n            sorted_values = sorted(enumerate(board[i]), key=lambda x: x[1], reverse=True)\n            rtv.append(sorted_values[:3])  \n        for rows in combinations(range(m), 3):\n            r1, r2, r3 = rows\n            tv1 = rtv[r1]\n            tv2 = rtv[r2]\n            tv3 = rtv[r3]\n            \n            for c1 in range(3):\n                for c2 in range(3):\n                    if tv2[c2][0] == tv1[c1][0]:\n                        continue\n                    for c3 in range(3):\n                        if tv3[c3][0] == tv1[c1][0] or tv3[c3][0] == tv2[c2][0]:\n                            continue\n                        csum = (tv1[c1][1] + tv2[c2][1] + tv3[c3][1])\n                        msum = max(msum, csum)\n        \n        return msum\n\n",
    "submit_ts": "1723908037",
    "subm_id": "1359135407"
}