{
    "username": "NISHANT_2001",
    "submission": "#define E \"\\n\"\n#define read(x) ll x; cin>>x\n#define readstr(s) string s; cin>>s\n#define ll long long\n#define dd double\n#define vi  vector<int> \n#define vvi vector<vector<int>>\n#define mi map<int,int>\n#define pr  pair<int,int>\n#define unset unordered_set<int>\n#define ff first\n#define ss second\n#define pb push_back\n#define MAX INT_MAX\n#define MIN INT_MIN\n#define fr(i,n) for(int i=0; i<n; i++)\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define acc(x) accumulate(all(x),0LL)\n#define qpr queue<pair<int,int>>\n#define pqb priority_queue<int>\n#define pqs priority_queue<int,vi,greater<int> >\n#define yes cout << \"YES\" << E\n#define no cout << \"NO\" << E\n#define printC(st) for(auto & it:st) cout<<it<<\" \";cout<<E;\nstring SS = \"codeforces\";\nconst int MOD=1e9+7;\n\n/*------------------------------------------------------------------*/\nbool isPrime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}\nbool isvowel(char c){return (c=='a'||c=='e'||c=='i'||c=='o'||c=='u');}\nll gcd(ll a,ll b){if(b==0)return a;return gcd(b,a%b);}\nlong long lcm(int a, int b){return (a / gcd(a, b)) * b;}\nbool isPowerOfTwo(ll n) {return (n>0 && (n&(n-1))==0);}\nvoid printMatrix(vector<vector<int>> &A){for(int i=0;i<A.size();i++){for(int j=0;j<A[i].size();j++){cout<<A[i][j]<<' ';}cout<<endl;}}\nvoid printArr(vi &arr) {fr(i,arr.size()) cout<<arr[i]<<' '; cout<<E; }\nint no_of_digits(int n) { return ((log10(n))+1); }\nint binexp(int x,int n){int a=x;int prod=1;while(n){if(n%2==1)prod=prod*a;a=a*a;n=n/2;}return prod;}\nint modexp(int a, int b, int m) {a %= m;int res = 1LL;while (b > 0) {if (b & 1)res = (res%m *1LL* a%m) % m;a = (a%m *1LL* a%m) % m;b >>= 1;}return res%m;}\nint modadd(int a,int b,int m){return (a%m+b%m)%m;}\nint modsub(int a,int b,int m){return (a%m-b%m+m)%m;}\nint modmul(int a,int b,int m){return (a%m*1LL*b%m)%m;}\nint modinv(int a,int m){return modexp(a,m-2,m);}\nint moddiv(int a,int b,int m){return (a%m*1LL*modinv(b,m)%m)%m;}\n// int to char   char ch= num + 48 (ascii of 0)\n//string integer_to_binary_string = bitset<32>(n).to_string();\n//bitset<32> b(res);\n//int ans = (int)(b.to_ulong());\nvector <int> check(100000, 0);\nvector <int> primes;\nvoid sieve(){for(ll i = 2; i < 100000; i++){if(check[i] == 0){for(ll j = i * i; j < 100000; j += i)check[j] = 1;primes.push_back(i);}}}\n/*----------------------------------------------------------------*/\nclass Solution {\npublic:\n    int MaxDist(vector<vector <int> >& A, int N){\n        // Vectors to store maximum and\n        // minimum of all the four forms\n        int res = INT_MAX;\n        vector<int> V(N), V1(N);\n        int maxi1 = INT_MIN;\n        int maxi2 = INT_MIN;\n        int mini1 = INT_MAX;\n        int mini2 = INT_MAX;\n        for (int i = 0; i < N; i++) {\n            V[i] = A[i][0] + A[i][1];\n            maxi1 = max(maxi1, V[i]); mini1 = min(mini1, V[i]);\n            V1[i] = A[i][0] - A[i][1];\n            maxi2 = max(maxi2, V1[i]); mini2 = min(mini2, V1[i]);\n        }\n        multiset <int> m1, m2;\n        for(auto & it : V) {m1.insert(it); /*cout << it << \" \"; cout << endl;*/}\n        for(auto & it : V1) {m2.insert(it); /*cout << it << \" \"; cout << endl;*/}\n        \n        \n        // printC(V); printC(V1);\n        // printC(m1); printC(m2);\n        \n        for(int i = 0 ; i < N; i++) {\n            int aa = V[i];\n            int bb = V1[i];\n            auto it = m1.lower_bound(aa);\n            m1.erase(it);\n            auto itr = m2.lower_bound(bb);\n            m2.erase(itr);\n            \n            \n            // printC(m1); printC(m2);\n            // cout << E;\n            \n            int MINI1 = *(m1.begin());\n            int MAXI1 = *(m1.rbegin());\n            int MINI2 = *(m2.begin());\n            int MAXI2 = *(m2.rbegin());\n            // cout << MAXI1 << \" \" << MINI1 << \" \" << MAXI2 << \" \" << MINI2 << endl;\n            int ans = max(MAXI1 - MINI1, MAXI2 - MINI2);\n            res = min(ans, res);\n            \n            // cout << res << endl;\n            // cout << E;\n            m1.insert(aa);\n            m2.insert(bb);\n           \n            \n        }\n\n        int maximum\n            = max(maxi1 - mini1, maxi2 - mini2);\n\n        return res;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        return MaxDist(points, points.size());\n        \n    }\n};"
}