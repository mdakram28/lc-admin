{
    "username": "tin_le",
    "submission": "int MOD = 1e9 + 7;\nusing ll = long long;\nclass FW {\npublic:\n    int n;\n    vector<ll> root;\n\n    FW(int n) {\n        this->n = n;\n        root.resize(n + 1, 0);\n    }\n\n    void update(int id, int val) {\n        while (id <= n) {\n            root[id] = (root[id] + val) % MOD;\n            id += (id & -id);\n        }\n    }\n\n    ll get(int id) {\n        ll res = 0;\n        while (id > 0) {\n            res = (res + root[id]) % MOD;\n            id -= (id & -id);\n        }\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<ll>> dp(n, vector<ll>(1001, 0));\n        FW fenwick(1001);\n\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1;\n            fenwick.update(j + 1, dp[0][j]);\n        }\n\n        for (int i = 1; i < n; ++i) {\n            FW nextFenwick(1001);\n            for (ll j = 0; j <= nums[i]; ++j) {\n                ll arr2_i = nums[i] - j;\n                if (arr2_i <= nums[i - 1]) {\n                    int query_index = min(j, nums[i - 1] - arr2_i) + 1;\n                    dp[i][j] = (dp[i][j] + fenwick.get(query_index)) % MOD;\n                }\n                nextFenwick.update(j + 1, dp[i][j]);\n            }\n            fenwick = nextFenwick;\n        }\n        int res = 0;\n        for (int j = 0; j <= nums.back(); ++j) {\n            res = (res + dp[n-1][j]) % MOD;\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": "1723348076",
    "subm_id": "1351611125"
}