{
    "username": "PlumsLC",
    "submission": "typedef long long ll;\nstruct DSU {\n\tvector<int> e; void init(int N) { e = vector<int>(N,-1); }\n\tint get(int x) { return e[x] < 0 ? x : e[x] = get(e[x]); } \n\tbool sameSet(int a, int b) { return get(a) == get(b); }\n\tint size(int x) { return -e[get(x)]; }\n\tbool unite(int x, int y) { // union by size\n\t\tx = get(x), y = get(y); if (x == y) return 0;\n\t\tif (e[x] > e[y]) swap(x,y);\n\t\te[x] += e[y]; e[y] = x; return 1;\n\t}\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        DSU dsu;\n        dsu.init(n);\n        for (int i=0; i<n; i++) {\n            ll x = circles[i][0];\n            ll y = circles[i][1];\n            ll r = circles[i][2];\n\n            for (int j=i+1; j<n; j++) {\n                ll x1 = circles[j][0];\n                ll y1 = circles[j][1];\n                ll r1 = circles[j][2];\n\n                ll dist = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n                ll sum = r + r1;\n                sum = sum * sum;\n\n                if (sum >= dist) {\n                    dsu.unite(i, j);\n                }\n            }\n        }\n\n        bool ans = true;\n        for (int i=0; i<n; i++) {\n            ll x = circles[i][0];\n            ll y = circles[i][1];\n            ll r = circles[i][2];\n\n            bool left = (r >= x);\n            bool bottom = (r >= y);\n            bool right = (r >= (X - x));\n            bool top = (r >= (Y - y));\n\n            //cout << i << \" \" << left << \" \" << bottom << \" \" << right << \" \" << top << endl;\n            for (int j=0; j<n; j++) {\n                ll x1 = circles[j][0];\n                ll y1 = circles[j][1];\n                ll r1 = circles[j][2];\n                if (!dsu.sameSet(i, j)) continue;\n                bool left1 = (r1 >= x1);\n                bool bottom1 = (r1 >= y1);\n                bool right1 = (r1 >= (X - x1));\n                bool top1 = (r1 >= (Y - y1));\n\n                if (left && right1) ans = false;\n                if (bottom && top1) ans = false;\n                if (left && bottom1) ans = false;\n                if (right && top1) ans = false;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722137221",
    "subm_id": "1335757622"
}