{
    "username": "Harttle",
    "submission": "/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar largestPalindrome = function(N, K) {\n    if (K === 8) {\n        if (N <= 6) return Array(N).fill(8).join('')\n        return '888' + Array(N - 6).fill(9).join('') + '888'\n    }\n    const Kn = BigInt(K)\n    const FIRST = ['0', '9', '8', '9', '88', '5', '8', '9', '8', '9']\n    const RFIRST = FIRST.map(x => [...x].reverse().join(''))\n    if (N <= 4) {\n        for (let num = 10**N - 1; num >= 10**(N - 1); num--) {\n            if (num % K === 0 && isPalin(num + '')) return num + ''\n        }\n        return false\n    }\n\n    for (const str of getPalin(N - FIRST[K].length * 2)) {\n        const num = FIRST[K] + str + RFIRST[K]\n        if (BigInt(num) % Kn === 0n) return num\n    }\n\n    function* getPalin(N) {\n        const H = Math.floor(N / 2)\n        const max = N % 2\n            ? Array(H + 1).fill(9).join('')\n            : Array(H).fill(9).join('')\n        for (let half = BigInt(max); half >= 0n; half--) {\n            const hstr = half.toString()\n            yield N % 2\n                ? hstr.slice(0, hstr.length - 1) + [...hstr].reverse().join('')\n                : hstr + [...hstr].reverse().join('')\n        }\n    }\n\n    function isPalin(str) {\n        const N = str.length\n        for (let i = 0, j = N - 1; i <= j; i++, j--) {\n            if (str[i] !== str[j]) return false\n        }\n        return true\n    }\n};",
    "submit_ts": "1723952739",
    "subm_id": "1359803502"
}