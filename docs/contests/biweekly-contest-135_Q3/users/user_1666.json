{
    "username": "hdeutsch",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        freq_diff = defaultdict(int)\n        n = len(nums)\n\n        for i in range(len(nums) // 2):\n            freq_diff[abs(nums[n - i - 1] - nums[i])] += 1\n        max_freq = max(freq_diff.values())\n        \n        max_diff_for_one_inc = [0] * (n // 2)\n        for i in range(len(nums) // 2):\n            n_1, n_2 = min(nums[i], nums[n - i - 1]), max(nums[i], nums[n - i - 1])\n            max_diff_for_one_inc[i] = max(n_2 - 0, k - n_1)\n        # print(max_diff_for_one_inc)\n        max_diff_for_one_inc.sort()\n\n        min_changes = float('inf')\n        for diff, freq in freq_diff.items():\n            ones_inc = (n // 2) - bisect_left(max_diff_for_one_inc, diff)\n            twos_inc = (n // 2) - ones_inc\n            # print('diff', diff, 'freq', freq, 'ones', ones_inc, 'twos', twos_inc)\n            min_changes = min(min_changes, ones_inc + twos_inc * 2 - freq)\n        return min_changes\n\n        # changes = 0\n        # for i in range(len(nums) // 2):\n        #     if abs(nums[n - i - 1] - nums[i]) == max_diff: continue\n        #     # can go down\n        #     n_1, n_2 = nums[i], nums[n - i - 1]\n        #     temp = 0\n        #     if 0 <= n_1 - max_diff <= k or 0 <= n_1 + max_diff <= k:\n        #         temp += 1\n        #     elif 0 <= n_2 - max_diff <= k or 0 <= n_2 + max_diff <= k:\n        #         temp += 1\n        #     else:\n        #         temp += 2\n        #     # print(i, n_1, n_1, 'inc', temp)\n        #     changes += temp\n        # return changes",
    "submit_ts": "1721489416",
    "subm_id": "1327452603"
}