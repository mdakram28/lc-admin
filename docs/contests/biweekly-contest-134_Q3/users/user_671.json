{
    "username": "Fasdr",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        int res = 0;\n        ClGr clr = new ClGr(k);\n        int i = 0;\n        for (; i < k - 1; i++)\n            clr.add(colors[i]);\n        for (; i < n; i++) {\n            clr.add(colors[i]);\n            res += clr.alternating();\n        }\n        \n        for (i = 0; i < k - 1; i++) {\n            clr.add(colors[i]);\n            res += clr.alternating();\n        }\n        return res;\n    }\n}\n\nclass ClGr {\n    private int k;\n    private long l;\n    private int last; \n    \n    public ClGr(int k) {\n        this.k = k;\n        last = 0;\n        l = 0;\n    }\n    \n    public int alternating() {\n        return l >= k ? 1 : 0;\n    }\n    \n    public void add(int color) {\n        if (last != color) {\n            l++;\n        } else {\n            l = 1;\n        }\n        last = color;\n    }\n}",
    "submit_ts": "1720278221",
    "subm_id": "1311699735"
}