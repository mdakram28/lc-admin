{
    "username": "hank55663",
    "submission": "    vector<int> v1[100005],v2[100005];\n    int Max[2][100005],Max2[2][100005];\n    int Len[2][100005];\n    int ans;\nclass Solution {\npublic:\n\n    void dfs(int x,int f,vector<int> *v,int *Max,int *Max2){\n        Max[x]=Max2[x]=0;\n        for(auto it:v[x]){\n            if(it!=f){\n                dfs(it,x,v,Max,Max2);\n                if(Max[it]+1>Max[x]){\n                    Max2[x]=Max[x];\n                    Max[x]=Max[it]+1;\n                }\n                else if(Max[it]+1>Max2[x]){\n                    Max2[x]=Max[it]+1;\n                }\n            }\n        }\n        ans=max(ans,Max[x]+Max2[x]);\n    }\n    void dfs2(int x,int f,vector<int> *v,int *Max,int *Max2,int top,int *res){\n        res[x]=max(Max[x],top);\n        for(auto it:v[x]){\n            if(it!=f){\n                if(Max[x]==Max[it]+1)\n                dfs2(it,x,v,Max,Max2,max(top,Max2[x])+1,res);\n                else\n                dfs2(it,x,v,Max,Max2,max(top,Max[x])+1,res);\n            }\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        for(int i = 0;i<=edges1.size();i++)v1[i].clear();\n         for(int i = 0;i<=edges2.size();i++)v2[i].clear();\n        ans=0;\n        for(auto it:edges1){\n            v1[it[0]].push_back(it[1]);\n            v1[it[1]].push_back(it[0]);\n        }\n        for(auto it:edges2){\n            v2[it[0]].push_back(it[1]);\n            v2[it[1]].push_back(it[0]);\n        }\n        ans=0;\n        dfs(0,0,v1,Max[0],Max2[0]);\n        dfs(0,0,v2,Max[1],Max2[1]);\n        dfs2(0,0,v1,Max[0],Max2[0],0,Len[0]);\n        dfs2(0,0,v2,Max[1],Max2[1],0,Len[1]);\n        int Min1=1e9,Min2=1e9;\n        for(int i = 0;i<=edges1.size();i++)Min1=min(Min1,Len[0][i]);\n        for(int i = 0;i<=edges2.size();i++)Min2=min(Min2,Len[1][i]);\n        ans=max(ans,Min1+Min2+1);\n        return ans;\n    }\n};",
    "submit_ts": "1719715702",
    "subm_id": "1304343947"
}