{
    "username": "amulshaturia",
    "submission": "class Solution {\n    int get(int i , int j , int I , int J , vector<vector<int>>& grid) {\n        int n = grid.size() , m = grid[0].size() ; \n        int rs = 20000 , re = -1 , cs = 20000 , ce = -1 ; \n        for(int ii = i ; ii <= I ; ii++){\n            for(int jj = j ; jj <= J; jj++){\n                if(grid[ii][jj] == 1){\n                    rs = min(rs , ii); \n                    re = max(re , ii); \n                    cs = min(cs , jj); \n                    ce = max(ce , jj); \n                }\n            }\n        } \n        if(rs == 20000) return INT_MAX/2 ; \n        int ans = (re - rs+1)*(ce - cs+1) ; \n        return ans ; \n    }\n    \n    int sol(int pat , int i , int j , int I , int J , vector<vector<int>>& v){\n        \n        // horizontal cut\n        int hori = INT_MAX/3 , ver = INT_MAX/3 ; \n        int a , b ; \n        for(int ii = i ; ii < I ; ii++){\n            if(pat){\n                a = get(i , j , ii , J , v) + get(ii+1 , j , I , J , v) ;  \n                hori = min(hori , a) ; \n            }\n            else{\n                // opt1 \n                a = get(i , j , ii , J , v) + sol(1 , ii+1 , j , I , J , v) ; \n                // opt2\n                b = sol(1 , i , j , ii , J , v) + get(ii+1 , j , I , J , v) ; \n                \n                a = min(a , b) ; \n                hori = min(hori , a) ; \n            }\n            \n        }\n        \n        // vertical cut\n        for(int jj = j ; jj < J ; jj++){\n            if(pat){\n                a = get(i , j , I , jj , v) + get(i , jj+1 , I , J , v) ; \n                ver = min(ver , a) ; \n            }\n            else{\n                // opt1 \n                a = get(i , j , I , jj , v) + sol(1 , i , jj+1 , I , J , v) ; \n                // opt2\n                b = sol(1 , i , j , I , jj , v) + get(i , jj+1 , I , J , v) ; \n                \n                a = min(a , b) ; \n                ver = min(ver , a) ; \n            }\n        }\n        \n        return min(hori , ver) ; \n    }\n    \npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size() , m = grid[0].size(); \n        int ans = sol(0 , 0 , 0 , n-1 , m-1 , grid) ; \n        return ans ; \n    }\n};",
    "submit_ts": 1719113667.0
}