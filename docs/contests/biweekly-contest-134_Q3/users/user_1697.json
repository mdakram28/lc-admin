{
    "username": "jpz",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        # next_neighbour_is_good = []\n        # for i in range(len(colors)):\n        #     next_neighbour_is_good.append(colors[i] != colors[(i+1) % len(colors)])\n        \n        # next_neighbour_is_good = next_neighbour_is_good + next_neighbour_is_good[:k]\n\n        # print(next_neighbour_is_good)\n        # print(colors)\n\n        colors = colors + colors[:k-1]\n\n        # print(colors)\n\n        consecutiveAlternating = 1\n        cnt = 0\n        last = colors[0]\n        for c in colors[1:]:\n            # print(cnt, last, c, consecutiveAlternating)\n            if c != last:\n                consecutiveAlternating += 1\n                if consecutiveAlternating >= k:\n                    cnt += 1\n            else:\n                consecutiveAlternating = 1\n            last = c\n\n        return cnt\n",
    "submit_ts": "1720278543",
    "subm_id": "1311713721"
}