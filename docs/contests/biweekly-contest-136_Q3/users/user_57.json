{
    "username": "abhayg_07",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int n = grid.size(), m = grid[0].size();\n        for( int i = 0 ; i < n/2 ; i++ ){\n            for( int j = 0 ; j < m/2 ; j++ ){\n                vector<int> cnt(2,0);\n                cnt[grid[i][j]]++;\n                cnt[grid[n-1-i][j]]++;\n                cnt[grid[i][m-1-j]]++;\n                cnt[grid[n-1-i][m-1-j]]++;\n                ans += min(cnt[0],cnt[1]);\n            }\n        }\n        if((n%2) && (m%2) && grid[n/2][m/2]) ans++;\n        int diff = 0, zero = 0, one = 0;\n        if(n%2){\n            for( int j = 0 ; j < m/2 ; j++ ){\n                if( grid[n/2][j] == grid[n/2][m-1-j] ){\n                    if( grid[n/2][j] == 0 ) zero++;\n                    else one++;\n                }\n                else{\n                    diff++;\n                }\n            }\n        }\n        if(m%2){\n            for( int i = 0 ; i < n/2 ; i++ ){\n                if( grid[i][m/2] == grid[n-1-i][m/2] ){\n                    if( grid[i][m/2] == 0 ) zero++;\n                    else one++;\n                }\n                else{\n                    diff++;\n                }\n            }\n        }\n        ans += diff;\n        if(one%2){\n            if(diff==0){\n                ans += 2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722696801",
    "subm_id": "1343122688"
}