{
    "username": "balakrishnan_v",
    "submission": "#define MAXN 100000\n#define MAXBIT 31\nclass Solution {\n    \npublic:\n    \n    int count_ones[MAXN+1][MAXBIT+1];\n    bool HasBit(int x,int b) {\n        return (x>>b)&1;\n    }\n\n    int GetAnd(const vector<int>& nums, int st, int en) {\n        int ret=0;\n        for(int b=0;b<=MAXBIT;b++) {\n            int num_ones = count_ones[en][b]-(st?count_ones[st-1][b]:0);\n            if (num_ones == en-st+1) ret |= (1<<b);\n        }\n        return ret;\n    }\n\n    int minimumDifference(const vector<int>& nums, int k) {\n        int n=nums.size();\n        for(int i=0;i<n;i++) {\n            for(int b=0;b<=MAXBIT;b++) {\n                count_ones[i][b]=HasBit(nums[i],b);\n                if (i) count_ones[i][b]+=count_ones[i-1][b];\n            }\n        }\n        \n        int ans=abs(nums[0]-k);\n        for(int x : nums) {\n            ans = min(ans, abs(x-k));\n        }\n\n        for(int i=0;i<n;i++) {\n\n            if (nums[i]<k) continue;\n            // minimize with >= k\n            int low=i;\n            int high=n-1;\n            while(low<high) {\n                int mid=(low+high+1)/2;\n                if (GetAnd(nums,i,mid)>=k) {\n                    low=mid;\n                } else {\n                    high=mid-1;\n                }\n            }\n            ans=min(ans,abs(GetAnd(nums,i,low)-k));\n        }\n\n        // maximize with <= k\n        for(int i=0;i<n;i++) {\n            if (GetAnd(nums,i,n-1)>k) continue;\n            int low=i;\n            int high=n-1;\n            while(low<high) {\n                int mid=(low+high)/2;\n                if (GetAnd(nums,i,mid)<=k) {\n                    high=mid;\n                } else {\n                    low=mid+1;\n                }\n            }\n            ans=min(ans,abs(GetAnd(nums,i,low)-k));\n        }\n\n        return ans;\n\n    }\n\n\n    \n    \n};",
    "submit_ts": 1717297356.0
}