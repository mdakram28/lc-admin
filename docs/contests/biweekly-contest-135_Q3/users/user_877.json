{
    "username": "abhishek_k11",
    "submission": "#define LARGE_VALUE 1000000000\n\ntypedef vector<int> IntList;\ntypedef map<int, IntList> DiffMap;\ntypedef int IntegerType;\n\nclass Solution {\npublic:\n    IntegerType minChanges(IntList& numbers, IntegerType k) {\n        DiffMap diffMap;\n        IntList valueList;\n        IntegerType size = numbers.size();\n        \n        for (IntegerType i = 0; i < size / 2; ++i) {\n            IntegerType left = numbers[i], right = numbers[size - i - 1];\n            IntegerType diff = abs(left - right);\n            IntegerType maxVal = max({left, right, k - left, k - right});\n            \n            diffMap[diff].push_back(maxVal);\n            valueList.push_back(maxVal);\n        }\n        \n        IntegerType result = size;\n        sort(valueList.begin(), valueList.end());\n        \n        for (const auto& entry : diffMap) {\n            IntegerType diff = entry.first;\n            IntegerType position = lower_bound(valueList.begin(), valueList.end(), diff) - valueList.begin();\n            IntegerType tempResult = position * 2 + (size / 2 - position);\n            \n            for (IntegerType value : entry.second) {\n                if (value < diff) {\n                    tempResult -= 2;\n                } else {\n                    tempResult -= 1;\n                }\n            }\n            \n            result = min(result, tempResult);\n        }\n        \n        return result;\n    }\n};\n\nauto init = []() { \n    ios::sync_with_stdio(false); \n    cin.tie(nullptr); \n    cout.tie(nullptr); \n    return 'c'; \n}();\n",
    "submit_ts": "1721488889",
    "subm_id": "1327436305"
}