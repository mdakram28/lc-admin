{
    "username": "weak",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long result = 0;\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            nums[i] -= target[i];\n            printf(\"%d \", nums[i]);\n        }\n        printf(\"\\n\");\n\n        for (int i = 0; i < n; i++) {\n            if (i == 0) {\n                result += abs(nums[i]);\n            } else {\n                if (nums[i] == 0 || nums[i] == nums[i - 1]) {\n                    continue;\n                }\n                if (nums[i] > 0) {\n                    if (nums[i - 1] > 0) {\n                        result += max(0, nums[i] - nums[i - 1]);\n                    } else {\n                        result += nums[i];\n                    }\n                } else {\n                    if (nums[i - 1] < 0) {\n                        result += max(0, nums[i - 1] - nums[i]);\n                    } else {\n                        result += abs(nums[i]);\n                    }\n                }\n            } \n            // printf(\"[%d] = %d : %d\\n\", i, nums[i], result);\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1721530403",
    "subm_id": "548378349"
}