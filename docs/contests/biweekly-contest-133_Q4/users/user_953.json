{
    "username": "Ray_1502",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> mp;\n        const int M = 1e9 + 7;\n        for(auto i : requirements) {\n            mp[i[0] + 1] += i[1];\n        }\n        long long ans = 0;\n        vector<vector<int>> v(n + 10, vector<int>(407, 0));\n        v[0][0] = 1;\n        long long S = 0;\n        \n        for(int i = 1; i <= n; i++) {\n            for(int j = 0; j <= 400; j++) {\n                for(int k = 0; k < i; k++) {\n                    if((j - k) >= 0)\n                        v[i][j] = (v[i][j] % M + v[i - 1][j - k] % M) % M;\n                }\n            }\n            \n            int cnt = 0;\n            // for(auto i : requirements) {\n            //     cnt += i[1];\n            // }\n            for(auto l : mp)\n                cnt += (l.first == i);\n            \n            if(cnt) {\n                for(int x = 0; x <= 400; x++) {\n                    if(x != mp[i])\n                        v[i][x] = 0;\n                }\n            }\n        }\n        // for(auto i: mp)\n        //     x += i;\n        \n        for(auto i : v[n]) {\n            ans = ((ans % M) + (i % M)) % M;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719071648.0
}