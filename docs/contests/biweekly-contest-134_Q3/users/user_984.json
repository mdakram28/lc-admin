{
    "username": "Kazama_0126",
    "submission": "#include <vector>\n#include <set>\n#include <algorithm>\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(std::vector<int>& color, int k) {\n        \n        \n        set<int> settt;\n        int n = color.size();\n        int res1 = 0;\n        for (int i = 0; i < n; i++) {\n            if (color[i] == color[(i - 1 + n) % n]) {\n                settt.insert(i);\n            }\n        }\n        for (int i = 0; i <= n - k; i++) {\n            auto it = settt.lower_bound(i + 1);\n            if (it != settt.end() && *it < i + k) \n                continue;\n            \n   res1++;\n        }\n        for (int z = n - k + 1; z < n; z++) {\n            auto it = settt.empty() ? settt.end() : prev(settt.end());\n            if (it != settt.end() && *it > z) {\n                continue;\n            }\n            it = settt.empty() ? settt.end() : settt.begin();\n            if (it != settt.end() && *it < k - (n - z)) {\n                continue;\n            }\n            res1++;\n        } \n        return res1;\n    }\n};\n",
    "submit_ts": "1720278015",
    "subm_id": "1311690467"
}