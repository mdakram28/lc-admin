{
    "username": "clean",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ret = 0, ret2 = 0, m = grid.size(), n = grid[0].size();\n        for (int i = 0; i < m/2; ++i) {\n            for (int j = 0; j < n/2; ++j) {\n                int c = 0;\n                if (grid[i][j] == 1) c++;\n                if (grid[i][n-1-j] == 1) c++;\n                if (grid[m-1-i][j] == 1) c++;\n                if (grid[m-1-i][n-1-j] == 1) c++;\n                ret += min(c, 4-c);\n            }\n        }\n        int c1= 0;\n        if (m % 2 == 1) {\n            int i = m/2;\n            for (int j = 0; j < n/2; ++j) {\n                if (grid[i][j] != grid[i][n-1-j]) ret2++;\n                if (grid[i][j] == 1) c1++;\n            }\n        }\n        //cout<<m<<' '<<n<<endl;\n        if (n % 2 == 1) {\n            int j = n/2;\n            for (int i = 0; i < m/2; ++i) {\n                if (grid[i][j] != grid[m-1-i][j]) ret2++;\n                if (grid[i][j] == 1) c1++;\n            }\n        }\n        if (ret2 == 0 && c1 % 2 == 1) ret2 = 2;\n        ret += ret2; \n        if (m % 2 == 1 && n % 2 == 1) {\n            int i =  m/2;\n            int j = n/2;\n            if (grid[i][j] == 1) ret++;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722698346",
    "subm_id": "1343177686"
}