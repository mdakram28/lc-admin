{
    "username": "tanmay_walekar2001",
    "submission": "class Solution {\npublic:\n    vector<int> MaxDist(vector<vector<int> >& A,int fl)\n{\n    // Vectors to store maximum and\n        int N=A.size();\n    // minimum of all the four forms\n    vector<pair<int,int>> V, V1;\n \n    for (int i = 0; i < N; i++) {\n        if(i!=fl)\n        {V.push_back( {A[i][0] + A[i][1],i});\n        V1.push_back ({A[i][0] - A[i][1],i});}\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n vector<int> ans;\n    int maximum\n        = max(V.back().first - V.front().first, V1.back().first - V1.front().first);\n        ans.push_back(maximum);\n if(maximum==V.back().first - V.front().first)\n {\n     ans.push_back(V.back().second);\n       ans.push_back(V.front().second);\n }\n        else\n        {\n             ans.push_back(V1.back().second);\n       ans.push_back(V1.front().second);\n        }\n        return ans;\n   \n}\n    int minimumDistance(vector<vector<int>>& p) {\n        vector<int> x=MaxDist(p,-1);\n        int a=x[1];\n        int b=x[2];\n       cout<<a<<\" \"<<b<<endl;\n         vector<int> c=MaxDist(p,a);\n         vector<int> d=MaxDist(p,b);\n        return min(c[0],d[0]);\n        \n    }\n};"
}