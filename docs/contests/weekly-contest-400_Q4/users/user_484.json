{
    "username": "LarryNY",
    "submission": "#include <vector>\n#include <cmath>\n#include <algorithm>\n\nclass Solution {\npublic:\n    int minimumDifference(std::vector<int>& nums, int k) {\n        int N = nums.size();\n        const int B = 32;\n        const long long INF = (1 << 30);\n        \n        long long best = INF;\n        std::vector<std::vector<int>> counts(N + 1, std::vector<int>(B, 0));\n        \n        for (int i = 0; i < N; ++i) {\n            int x = nums[i];\n            for (int j = 0; j < B; ++j) {\n                counts[i + 1][j] = counts[i][j];\n                if ((x & (1 << j)) > 0) {\n                    counts[i + 1][j] += 1;\n                }\n            }\n        }\n        \n        auto good = [&](int left, int right) {\n            int current = 0;\n            for (int j = 0; j < B; ++j) {\n                if (counts[right + 1][j] - counts[left][j] == right - left + 1) {\n                    current |= (1 << j);\n                }\n            }\n            return current > k;\n        };\n        \n        for (int i = 0; i < N; ++i) {\n            int left = i;\n            int right = N - 1;\n            \n            while (left < right) {\n                int mid = (left + right + 1) / 2;\n                \n                if (good(i, mid)) {\n                    left = mid;\n                } else {\n                    right = mid - 1;\n                }\n            }\n            \n            for (int c : {left, left + 1}) {\n                if (N > c && c >= i) {\n                    long long current = 0;\n                    for (int j = 0; j < B; ++j) {\n                        if (counts[c + 1][j] - counts[i][j] == c - i + 1) {\n                            current |= (1 << j);\n                        }\n                    }\n                    best = std::min(best, std::abs(current - k));\n                }\n            }\n        }\n        return static_cast<int>(best);\n    }\n};\n",
    "submit_ts": "1717298324",
    "subm_id": "1274774981"
}