{
    "username": "cpgod",
    "submission": "class FenwickTree:\n    def __init__(self, size):\n        self.size = size\n        self.tree = [0] * (size + 1)\n\n    def update(self, index, delta):\n        while index <= self.size:\n            self.tree[index] += delta\n            index += index & -index\n\n    def query(self, index):\n        sum_ = 0\n        while index > 0:\n            sum_ += self.tree[index]\n            index -= index & -index\n        return sum_\n\n    def range_query(self, left, right):\n        return self.query(right) - self.query(left - 1)\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def is_peak(i):\n            if i <= 0 or i >= len(nums) - 1:\n                return False\n            return nums[i] > nums[i - 1] and nums[i] > nums[i + 1]\n        \n        n = len(nums)\n        fenwick = FenwickTree(n)\n        peaks = [False] * n\n        \n        for i in range(1, n - 1):\n            if is_peak(i):\n                peaks[i] = True\n                fenwick.update(i + 1, 1)  # +1 for 1-based indexing\n        \n        results = []\n        \n        for query in queries:\n            if query[0] == 1:\n                # Query type 1: count peaks in the subarray nums[li..ri]\n                li, ri = query[1], query[2]\n                if li == ri or li + 1 == ri:\n                    results.append(0)\n                else:\n                    results.append(fenwick.range_query(li + 2, ri))  # +2 because we ignore first element\n            elif query[0] == 2:\n                # Query type 2: update nums[indexi] to vali\n                index, val = query[1], query[2]\n                nums[index] = val\n                \n                # Update peak status of index and its neighbors\n                for i in range(max(1, index - 1), min(n - 1, index + 2)):\n                    was_peak = peaks[i]\n                    is_now_peak = is_peak(i)\n                    if was_peak != is_now_peak:\n                        peaks[i] = is_now_peak\n                        fenwick.update(i + 1, 1 if is_now_peak else -1)\n        \n        return results\n",
    "submit_ts": 1718505283.0
}