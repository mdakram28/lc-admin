{
    "username": "addusirmac",
    "submission": "class Solution {\npublic:\nint dx[8]={0,0,1,-1,1,1,-1,-1};\nint dy[8]={1,-1,0,0,1,-1,-1,1};\n// int dx[8]={1, 1, -1, -1, 2, 2, -2, -2};\n// int dy[8]={2, -2, 2, -2, 1, -1, 1, -1};\n \nconst int N=1001;\n#define ll long long int\n#define pii pair<int,int>\n#define all(arr) arr.begin(),arr.end()\n#define fr first\n#define sc second\n#define pb push_back\n// const int INF= 1e16;\n// const int mod= 1e12+9;\nconst int mod= 1e8;\n// const int mod= 998244353;\nint solve(int n, vector<vector<int>>&g) {\n    auto bfs= [&](int st)->vector<int>{\n      vector<int>dist(n+1,-1);\n      vector<bool>vis(n+1, 1);\n      dist[st]= 0;\n      queue<int>q;\n      q.push(st);\n\n      while(!q.empty()){\n        int v= q.front();\n        q.pop();\n\n        for(auto &ch: g[v]){\n          if(dist[ch]==-1){\n            dist[ch]= dist[v]+1;\n            q.push(ch);\n          }\n        }\n      }\n\n      return dist;\n    };\n\n    vector<int>dist= bfs(1);\n    int mx= *max_element(all(dist));\n    for(int i=1; i<=n; i++){\n      if(dist[i]==mx){\n        vector<int>newDist= bfs(i);\n        int ans= *max_element(all(newDist));\n        return ans;\n      }\n    }\n    return -1;\n}\n\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n= e1.size(), m= e2.size();\n        n++, m++;\n        vector<vector<int>>g1(n+1), g2(m+1);\n        for(auto &vec: e1){\n            int u= vec[0], v= vec[1];\n            u++, v++;\n            g1[u].pb(v);\n            g1[v].pb(u);\n        }\n        for(auto &vec: e2){\n            int u= vec[0], v= vec[1];\n            u++, v++;\n            g2[u].pb(v);\n            g2[v].pb(u);\n        }\n        \n        int d1= solve(n, g1);\n        int d2= solve(m, g2);\n        // cout<<d1<<\" \"<<d2<<endl;\n        int ans= (d1+1)/2+ (d2+1)/2 +1;\n        ans= max({ans, d1, d2});\n        return ans;\n    }\n};",
    "submit_ts": 1719716759.0
}