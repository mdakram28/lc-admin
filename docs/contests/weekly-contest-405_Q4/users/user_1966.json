{
    "username": "bryanpak2006",
    "submission": "class Solution {\npublic:\n    struct TrieNode{\n        vector<TrieNode*> children;\n        int cost;\n        TrieNode() : children(26, nullptr), cost(INT_MAX){}\n    };\n\n    void insertWord(TrieNode* root, const string& word, int cost){\n        TrieNode* node = root;\n        for(char c : word){\n            if(!node->children[c - 'a']){\n                node->children[c - 'a'] = new TrieNode();\n            }\n            node = node->children[c - 'a'];\n        }\n        node->cost = min(node->cost, cost);\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        for(int i = 0; i < words.size(); i++){\n            insertWord(root, words[i], costs[i]);\n        }\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        for(int i = 0; i < n; i++){\n            if(dp[i] == INT_MAX){\n                continue;\n            }\n            TrieNode* node = root;\n            for(int j = i; j < n; j++){\n                if(!node->children[target[j] - 'a']){\n                    break;\n                }\n                node = node->children[target[j] - 'a'];\n                if(node->cost != INT_MAX){\n                    dp[j + 1] = min(dp[j + 1], dp[i]+ node->cost);\n                }\n            }\n        }\n        delete root;\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720324589",
    "subm_id": "1312403235"
}