{
    "username": "pcwuu",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> cnt(32);\n        int n = nums.size();\n        int ans = INT_MAX;\n        for(int l = 0, r = 0; r < n; r++) {\n            long long p = 1;\n            for(int i = 0; i < 32; i++) {\n                if(nums[r] & p)\n                    cnt[i]++;\n                p *= 2;\n            }\n\n            p = 1;\n            int cur = 0;\n            for(int i = 0; i < 32; i++) {\n                if(cnt[i] == r - l + 1)\n                    cur += p;\n                p *= 2;\n            }\n\n            while(cur < k && l <= r) {\n                ans = min(ans, abs(k - cur));\n                p = 1;\n                for(int i = 0; i < 32; i++) {\n                    if(nums[l] & p)\n                        cnt[i]--;\n                    p *= 2;\n                }                \n                l++;\n\n                p = 1, cur = 0;\n                for(int i = 0; i < 32; i++) {\n                    if(cnt[i] == r - l + 1)\n                        cur += p;\n                    p *= 2;\n                }\n            }\n            ans = min(ans, abs(k - cur));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298033.0
}