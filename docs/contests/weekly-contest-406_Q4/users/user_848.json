{
    "username": "Andyp3",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        multiset<int>hct;\n        multiset<int>vct;\n        priority_queue<pair<int,int>>pq;\n        for (auto it : horizontalCut) pq.push({it,0});\n        for (auto it : verticalCut) pq.push({it,1});\n\n        long long ans = 0;\n        while (!pq.empty()){\n            int ct = pq.top().first;\n            int side = pq.top().second;\n            pq.pop();\n            if(side == 0){\n                ans = (ans + (vct.size()+1)*ct*1ll);\n                hct.insert(ct);\n            }\n            else{\n                ans = (ans + (hct.size()+1)*ct*1ll);\n                vct.insert(ct);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925886",
    "subm_id": "1320269373"
}