{
    "username": "priyasridhar101",
    "submission": "class Solution:\n    def numberOfPermutations(self, n, requirements):\n        MODULO = 10**9 + 7\n        MAX_INVERSIONS = 400\n        \n        inversion_requirements = {req[0] + 1: req[1] for req in requirements}\n        \n        dp = [[0] * (MAX_INVERSIONS + 1) for _ in range(n + 1)]\n        dp[0][0] = 1\n        \n        for length in range(1, n + 1):\n            for current_inversion in range(MAX_INVERSIONS + 1):\n                dp[length][current_inversion] = sum(dp[length - 1][current_inversion - new_pos]\n                                                    for new_pos in range(length)\n                                                    if current_inversion - new_pos >= 0) % MODULO\n            \n            if length in inversion_requirements:\n                target_inversion = inversion_requirements[length]\n                dp[length] = [0 if inv != target_inversion else dp[length][inv] for inv in range(MAX_INVERSIONS + 1)]\n        \n        total_permutations_with_required_inversions = sum(dp[n]) % MODULO\n        \n        return total_permutations_with_required_inversions\n",
    "submit_ts": "1719070061",
    "subm_id": "1296813497"
}