{
    "username": "vinay_7516",
    "submission": "class Node{\n    public:\n        Node* links[26];\n        int val;\n        bool isend;\n        Node(){\n            for(int i=0;i<26;i++){\n                links[i] = NULL;\n            }\n            val = INT_MAX;\n            isend = false;\n        }\n\n        int getval(){\n            return val;\n        }\n\n        bool containskey(int i){\n            return (links[i]!=NULL);\n        }\n\n        void putkey(int i){\n            links[i] = new Node();\n        }\n\n        Node* getkey(int i){\n            return links[i];\n        }\n    \n        void setEnd(){\n            isend = true;\n        }\n\n};\n\nclass trie{\n    public:\n        Node* root;\n        trie(){\n            root = new Node();\n        }\n\n        void insert(string s,int cost){\n            Node* temp = root;\n            for(int i=0;i<s.length();i++){\n                if(!temp->containskey(s[i]-'a')){\n                    temp->putkey(s[i]-'a');\n                }\n                temp = temp->getkey(s[i]-'a');\n            }\n            temp->isend = true;\n            temp->val = min(temp->val,cost);\n        }\n};\nlong long dp[50001];\nclass Solution {\npublic:\n    long long helper(int ind,trie &t,string &target){\n        if(ind==target.length()) return 0;\n        if(dp[ind]!=-1) return dp[ind];\n        long long ans = 1e9;\n        Node* temp = t.root;\n        for(int i=ind;i<target.length();i++){\n            if(!temp->containskey(target[i]-'a')) break;\n            temp = temp->getkey(target[i]-'a');\n            if(temp->isend){\n                ans = min(ans,temp->val + helper(i+1,t,target));\n            }\n        }\n        return dp[ind] = ans;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        memset(dp,-1,sizeof(dp));\n        int n = words.size();\n        trie t;\n        reverse(target.begin(),target.end());\n        for(int i=0;i<words.size();i++){\n            reverse(words[i].begin(),words[i].end());\n        }\n        for(int i=0;i<n;i++){\n            t.insert(words[i],costs[i]);\n        }\n        int ans = helper(0,t,target);\n        return ((ans>=1e9)?-1:ans);\n    }\n};",
    "submit_ts": "1720321777",
    "subm_id": "1312332032"
}