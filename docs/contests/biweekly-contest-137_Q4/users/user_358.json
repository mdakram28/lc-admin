{
    "username": "Sergey Tihon",
    "submission": "impl Solution {\n    pub fn maximum_value_sum(br: Vec<Vec<i32>>) -> i64 {\n        let inf = 3_000_000_001i64;\n        let mut res = -inf;\n        let n = br.len();\n\n        let mx: Vec<Vec<(i64, usize)>> = br\n            .iter()\n            .map(|arr| {\n                arr.iter()\n                    .enumerate()\n                    .map(|(i, &x)| (x as i64, i))\n                    .collect::<Vec<(i64, usize)>>()\n            })\n            .map(|mut v| {\n                v.sort_by(|a, b| b.0.cmp(&a.0)); // reverse sort by first element\n                v.into_iter().take(3).collect::<Vec<(i64, usize)>>()\n            })\n            .collect();\n\n        for i in 0..n {\n            for j in i + 1..n {\n                for k in j + 1..n {\n                    for &(a, ii) in &mx[i] {\n                        for &(b, jj) in &mx[j] {\n                            for &(c, kk) in &mx[k] {\n                                if ii != jj && jj != kk && ii != kk {\n                                    let s = a + b + c;\n                                    if s > res {\n                                        res = s\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        res\n    }\n}",
    "submit_ts": "1723909580",
    "subm_id": "1359197918"
}