{
    "username": "gpipare2",
    "submission": "class Solution {\npublic:\n    static constexpr int MOD = 1e9 + 7;\n\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        vector<vector<int>> dp(n + 1, vector<int>(n * (n - 1) / 2 + 1, 0));\n        dp[0][0] = 1;\n\n        for (int len = 1; len <= n; ++len) {\n            vector<int> prefix_sum(n * (n - 1) / 2 + 2, 0);\n            for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n                prefix_sum[inv + 1] = (prefix_sum[inv] + dp[len - 1][inv]) % MOD;\n            }\n            for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n                dp[len][inv] = (prefix_sum[inv + 1] - prefix_sum[max(0, inv - len + 1)] + MOD) % MOD;\n            }\n        }\n\n        vector<int> invs(n, -1);\n        for (const auto& r : req) {\n            invs[r[0]] = r[1];\n        }\n\n        vector<vector<int>> valid_dp(n + 1, vector<int>(n * (n - 1) / 2 + 1, 0));\n        valid_dp[0][0] = 1;\n\n        for (int len = 1; len <= n; ++len) {\n            vector<int> prefix_sum(n * (n - 1) / 2 + 2, 0);\n            for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n                prefix_sum[inv + 1] = (prefix_sum[inv] + valid_dp[len - 1][inv]) % MOD;\n            }\n            for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n                valid_dp[len][inv] = (prefix_sum[inv + 1] - prefix_sum[max(0, inv - len + 1)] + MOD) % MOD;\n                if (invs[len - 1] != -1 && invs[len - 1] != inv) {\n                    valid_dp[len][inv] = 0;\n                }\n            }\n        }\n\n        int res = 0;\n        for (int inv = 0; inv <= n * (n - 1) / 2; ++inv) {\n            res = (res + valid_dp[n][inv]) % MOD;\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": 1719068633.0
}