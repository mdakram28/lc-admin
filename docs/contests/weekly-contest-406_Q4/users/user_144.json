{
    "username": "watchingForStars",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Sort the horizontal and vertical cuts in descending order\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        total_cost = 0\n        h_index = 0\n        v_index = 0\n        h_segments = 1\n        v_segments = 1\n        \n        while h_index < len(horizontalCut) and v_index < len(verticalCut):\n            # Compare current largest horizontal and vertical cut cost\n            if horizontalCut[h_index] >= verticalCut[v_index]:\n                total_cost += horizontalCut[h_index] * v_segments\n                h_segments += 1\n                h_index += 1\n            else:\n                total_cost += verticalCut[v_index] * h_segments\n                v_segments += 1\n                v_index += 1\n        \n        # Process any remaining horizontal cuts\n        while h_index < len(horizontalCut):\n            total_cost += horizontalCut[h_index] * v_segments\n            h_segments += 1\n            h_index += 1\n        \n        # Process any remaining vertical cuts\n        while v_index < len(verticalCut):\n            total_cost += verticalCut[v_index] * h_segments\n            v_segments += 1\n            v_index += 1\n        \n        return total_cost",
    "submit_ts": "1720925122",
    "subm_id": "1320243647"
}