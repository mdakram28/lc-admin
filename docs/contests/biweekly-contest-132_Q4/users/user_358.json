{
    "username": "parwez0786",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int maxChanges) {\n        int n = nums.size();\n        \n       \n        map<int, vector<int>> valueIndices;\n        for (int i = 0; i < n; ++i) {\n            valueIndices[nums[i]].push_back(i);\n        }\n\n      \n        vector<vector<vector<int>>> dp(n + 1, vector<vector<int>>(maxChanges + 1, vector<int>(2, 0)));\n\n      \n        for (int i = n - 1; i >= 0; --i) {\n            for (int changesLeft = 0; changesLeft <= maxChanges; ++changesLeft) {\n                for (int isStrict = 0; isStrict <= 1; ++isStrict) {\n                    int maxLength = 0;\n\n                    if (!isStrict) {\n                        maxLength = dp[i + 1][changesLeft][0];\n                    }\n\n                   \n                    int nextIndexPosition = upper_bound(valueIndices[nums[i]].begin(), valueIndices[nums[i]].end(), i) - valueIndices[nums[i]].begin();\n                    if (nextIndexPosition < valueIndices[nums[i]].size()) {\n                        maxLength = max(maxLength, 1 + dp[valueIndices[nums[i]][nextIndexPosition]][changesLeft][1]);\n                    } else {\n                        maxLength = max(maxLength, 1 + dp[n][changesLeft][1]);\n                    }\n\n                   \n                    if (changesLeft > 0) {\n                        maxLength = max(maxLength, 1 + dp[i + 1][changesLeft - 1][0]);\n                    }\n\n                    dp[i][changesLeft][isStrict] = maxLength;\n                }\n            }\n        }\n\n        return dp[0][maxChanges][0];\n    }\n};\n",
    "submit_ts": "1717861612",
    "subm_id": "1281796783"
}