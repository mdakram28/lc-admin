{
    "username": "nikhilverma_",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) { \n        \n        int n = target.size();\n        \n        vector<int> diff(n);\n        \n        for(int i = 0; i<n; i++){\n            \n            diff[i] = target[i] - nums[i];\n        }\n        \n        long long  ans = 0; \n        \n        // stack<int> st ; \n        \n        int pg = 0;\n        int ng = 0;\n        int turn; \n        \n        if(diff[0] >=0) turn = 1; \n        else\n            turn = 0;\n         \n        for(int i =0; i<diff.size(); i++){ \n            \n            if(turn){\n            \n            if(diff[i] > pg){\n                ans += diff[i]-pg;\n                pg = diff[i];\n            }  \n                \n            else{\n                pg = diff[i];\n            }    \n                \n                if( i <n-1 && diff[i+1] <0){\n                    turn = 0;\n                    pg = 0;\n                }\n                \n            }   \n            \n            else{ \n                \n                if(diff[i] < ng){\n                    ans += (diff[i]*(-1)) - (ng* (-1)) ;\n                    ng = diff[i];\n                } \n                \n                else{\n                    ng = diff[i];\n                }\n                \n                if( i < n-1 && diff[i+1] >=0 ){\n                    turn = 1;\n                    ng = 0;\n                }\n                \n            }\n            \n        }\n        \n        \n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1721534325",
    "subm_id": "1328028420"
}