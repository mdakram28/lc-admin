{
    "username": "VIVEK_887",
    "submission": "import java.util.*;\n\nclass Solution {\n    public class TrieNode {\n        TrieNode[] trieNode;\n        int cost;\n        boolean isWord;\n        \n        TrieNode() {\n            trieNode = new TrieNode[26];\n            cost = Integer.MAX_VALUE;\n            isWord = false;\n        }\n    }\n\n    public void add(String s, TrieNode node, int cost) {\n        for (int i = 0; i < s.length(); i++) {\n            int idx = s.charAt(i) - 'a';\n            if (node.trieNode[idx] == null) {\n                node.trieNode[idx] = new TrieNode();\n            }\n            node = node.trieNode[idx];\n        }\n        node.cost = Math.min(node.cost, cost);\n        node.isWord = true;\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            add(words[i], root, costs[i]);\n        }\n        \n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                int idx = target.charAt(j) - 'a';\n                if (node.trieNode[idx] == null) break;\n                node = node.trieNode[idx];\n                if (node.isWord) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.cost);\n                }\n            }\n        }\n        \n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}\n",
    "submit_ts": "1720323365",
    "subm_id": "1312373741"
}