{
    "username": "shootingstar33",
    "submission": "class Solution {\npublic: \n    const int MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int k = 400;\n        vector<int> dp(k + 1, 0);\n        dp[0] = 1;\n\n        map<int,int> mp;\n        for(int i=0; i<requirements.size(); i++){\n            requirements[i][0]++;\n            mp[requirements[i][0]] = requirements[i][1];\n        }\n\n        for (int i = 1; i <= n; ++i) {\n            vector<int> new_dp(k + 1, 0);\n            for (int j = 0; j <= k; ++j) {\n                new_dp[j] = (new_dp[j] + dp[j]) % MOD;\n                if (j > 0) {\n                    new_dp[j]\n                        = (new_dp[j] + new_dp[j - 1]) % MOD;\n                }\n                if (j - i >= 0) {\n                    new_dp[j]\n                        = (new_dp[j] - dp[j - i] + MOD) % MOD;\n                }\n            }\n            if(mp.count(i)){\n                for(int j=0; j<=k; j++){\n                    if(j == mp[i]) continue;\n                    new_dp[j] = 0;\n                }\n            }\n            dp = new_dp;\n        }\n\n        int ans = (dp[mp[n]] + MOD) % MOD;\n        return ans;\n    }\n};",
    "submit_ts": "1719070113",
    "subm_id": "1296814829"
}