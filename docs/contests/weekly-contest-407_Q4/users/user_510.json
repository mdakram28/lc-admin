{
    "username": "ashwinbanwari",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int lastOp = 0;\n        int N = nums.size();\n        \n        vector<int> diffs(N);\n        for (int i = 0; i < N; i++) {\n            diffs[i] = target[i] - nums[i];\n        }\n        \n        for (int i = 0; i < N; i++) {\n            if (diffs[i] >= 0) {\n                if (lastOp < 0) {\n                    res += diffs[i];\n                } else {\n                    res += max(0, diffs[i] - lastOp);\n                }\n            } else {\n                if (lastOp > 0) {\n                    res -= diffs[i];\n                } else {\n                    int req = lastOp - diffs[i];\n                    res += max(0, req);\n                }\n            }\n            \n            lastOp = diffs[i];\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721531327",
    "subm_id": "1327958153"
}