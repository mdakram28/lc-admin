{
    "username": "abhay200324",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace _gnu_pbds;\n// template<class T> using pbset=tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update> ;\n// template<class T> using pbmultiset=tree<T, null_type, less_equal<T>, rb_tree_tag,tree_order_statistics_node_update> ;\n// pbset<int> ps;\n// pbmultiset<int> pms;\n// // s.find_by_order(1);  //returns a pointer to the element at index t in O(logn)\n// // s.order_of_key(6); //returns an integer =how many elements less than 5 (this one is valid for multiset too)... or,position of 5 or rank of 5 (for set only)\nusing ll = long long;\nusing ull = unsigned long long;\nusing lld = long double;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing vii = vector<pii>;\nusing vll = vector<pll>;\nusing vvi = vector<vi>;\nusing vs = vector<string>;\n#define f(i,x,n) for(int i = x; i < n; i++)\n#define rf(i,x,n) for(int i = x; i >= n; i--)\n#define fix(prec) {cout << setprecision(prec) << fixed;}\n#define sz(a) int((a).size())\n#define pb push_back\n#define all(a) a.begin(), a.end()\n#define rall(a) a.rbegin(), a.rend()\n#define sqr(x) (1LL*(x)(x))\n#define gcd(a,b) __gcd(a,b)\n#define lcm(a,b) (1LL(a/gcd(a,b))*b)\n#define F first\n#define S second\n#define yes cout<<\"YES\"<<endl\n#define no cout<<\"NO\"<<endl\n#define err cout<<-1<<endl\n#ifndef ONLINE_JUDGE\n#define dbg(v) cout << \"Line(\" << __LINE_ << \") -> \" << #v << \" = \" << (v) << endl;\n#else\n#define dbg(v)\n#endif\ntemplate<typename T> istream& operator>>(istream& is,  vector<T> &v){for (auto& i : v) is >> i; return is;}\ntemplate<typename T> ostream& operator<<(ostream& os,  vector<T> &v){for (auto& i : v) os << i << ' '; return os;}\n#define tr(c, i) for (typeof (c).begin() i = c.begin(); i != c.end(); i++)\n#define present(c, x) (c.find(x) != c.end())\n#define cpresent(c, x) (find(all(c), x) != c.end())\n///.........Bit_Manipulation...........///\n#define MSB(mask) (63-__builtin_clzll(mask))  /// 0 -> -1\n#define LSB(mask) __builtin_ctzll(mask)  /// 0 -> 64\n#define SETBIT(mask) __builtin_popcountll(mask)\n#define CHECKBIT(mask,bit) (mask&(1LL<<bit))\n#define ONBIT(mask,bit) (mask|(1LL<<bit))\n#define OFFBIT(mask,bit) (mask&~(1LL<<bit))\n#define CHANGEBIT(mask,bit) (mask^(1LL<<bit))\nconst int inf = 2e9;\nconst ll mod = 1000000007;\nclass Solution {\npublic:\n    unordered_map<int,vector<vi>> dp;\n    int solve(int k,int i,int jump,int flag) {\n        if (i>k+5)\n            return 0;\n        if(jump>31)\n            return 0;\n        if(dp.find(i)!=dp.end() && dp[i][jump][flag]!=-1)\n            return dp[i][jump][flag];\n        int ans =(i == k);\n        if (flag)\n            ans += solve(k, i - 1, jump, 0);\n        if (i+(1 << jump)<=k+1)\n            ans += solve(k,i+(1<<jump),jump+1,1);\n        dp[i].resize(32, vector<int>(2, -1));\n        return dp[i][jump][flag]=ans;\n    }\n    int waysToReachStair(int k) {\n        return solve(k, 1, 0, 1);\n    } \n};",
    "submit_ts": 1716089386.0
}