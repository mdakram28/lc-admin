{
    "username": "btcmoon",
    "submission": "class Solution {\n    private Map<String, Integer> mp;\n\n    public int waysToReachStair(int k) {\n        mp = new HashMap<>();\n        return dfs(1, false, 0, k);\n    }\n\n    private int dfs(int u, boolean lastdown, int use, int k) {\n        String key = u + \",\" + lastdown + \",\" + use;\n        if (mp.containsKey(key)) {\n            return mp.get(key);\n        }\n\n        int ans;\n        if (u == k) {\n            ans = 1;\n        } else {\n            ans = 0;\n        }\n\n        int step = (int) Math.pow(2, use);\n        if (u > k + 1) {\n            return 0;\n        }\n\n        if (u >= 1 && !lastdown) {\n            ans += dfs(u - 1, true, use, k);\n        }\n\n        ans += dfs(u + step, false, use + 1, k);\n        mp.put(key, ans);\n        return ans;\n    }\n}",
    "submit_ts": 1716087817.0
}