{
    "username": "Harshal Joshi",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long numRows = board.size();\n        long long numCols = board[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<pair<long long, long long>>> sortedColumns(numRows);\n        for (long long i = numRows - 1; i >= 2; --i) {\n            if (i != numRows - 1) {\n                sortedColumns[i] = sortedColumns[i + 1];\n            }\n            for (long long j = 0; j < numCols; ++j) {\n                sortedColumns[i].emplace_back(board[i][j], j);\n            }\n            sort(sortedColumns[i].rbegin(), sortedColumns[i].rend());\n        }\n        for (long long row1 = 0; row1 < numRows - 2; ++row1) {\n            for (long long col1 = 0; col1 < numCols; ++col1) {\n                long long value1 = board[row1][col1];\n                for (long long row2 = row1 + 1; row2 < numRows - 1; ++row2) {\n                    for (long long col2 = 0; col2 < numCols; ++col2) {\n                        if (col2 == col1) {\n                            continue; \n                        }\n                        long long value2 = board[row2][col2];\n                        long long value3 = 0;\n\n                      \n                        for (const auto& [val, col] : sortedColumns[row2 + 1]) {\n                            if (col != col1 && col != col2) {\n                                value3 = val;\n                                break;\n                            }\n                        }\n                        maxSum = max(maxSum, value1 + value2 + value3);\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723908382",
    "subm_id": "1359150210"
}