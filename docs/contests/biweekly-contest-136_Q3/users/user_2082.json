{
    "username": "Dev2073",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int zeros, ones, m = grid.size(), n = grid[0].size(), count = 0;\n        for (int i=0; i<m/2; i++){\n            for (int j=0; j<n/2; j++){\n                zeros = 0;\n                ones = 0;\n                if (grid[i][j] == 0) zeros++;\n                else ones++;\n                if (grid[m-i-1][j] == 0) zeros++;\n                else ones++;\n                if (grid[i][n-j-1] == 0) zeros++;\n                else ones++;\n                if (grid[m-i-1][n-j-1] == 0) zeros++;\n                else ones++;\n                count += min(ones, zeros);\n            }\n        }\n        int a = 0, b = 0;\n        if (n % 2){\n            for (int i=0; i<m/2; i++){\n                if (grid[i][n/2] == grid[m-i-1][n/2] && grid[i][n/2] == 1) a++;\n                else if (grid[i][n/2] != grid[m-i-1][n/2]) b++; \n            }\n        }\n        if (m % 2){\n            for (int i=0; i<n/2; i++){\n                if (grid[m/2][i] == grid[m/2][n-i-1] && grid[m/2][i] == 1) a++;\n                else if (grid[m/2][i] != grid[m/2][n-i-1]) b++; \n            }\n        }\n        if (a % 2 && b == 0) count += 2;\n        else count += b;\n        \n        if (m % 2 && n % 2) count += grid[m/2][n/2];\n        return count;\n    }\n};",
    "submit_ts": "1722699003",
    "subm_id": "1343198536"
}