{
    "username": "brian386",
    "submission": "class Solution {\ntypedef long long ll;\npublic:\n\n    ll sign(ll n){\n        return n/abs(n);\n    }\n\n    ll solve_block(vector<ll>& v){\n        ll sum = v[0];\n        ll save = 0;\n        for(int i = 1; i < v.size(); i ++){\n            sum += v[i];\n            if(v[i] <= v[i-1]){\n                save += v[i];\n            } else {\n                save += v[i-1];\n            }\n        }\n        return sum - save;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<ll> diff;\n        for(int i = 0; i < nums.size(); i++){\n            diff.push_back( (ll)nums[i] - (ll)target[i]);\n        }\n\n        for(int i = 0; i < diff.size() ;i++){\n            cout << diff[i] << \" \";\n        }\n        cout << endl;\n        vector<vector<ll>> blocks;\n        vector<ll> cur;\n        ll ans = 0;\n        for(int i = 0; i < diff.size(); i++){\n            if(diff[i] == 0){\n                if(!cur.empty()){\n                    blocks.push_back(cur);\n                    cur.clear();\n                }\n                continue;\n            }\n            if(i != 0 && diff[i-1] != 0 && sign(diff[i]) != sign(diff[i-1])){\n                if(!cur.empty()){\n                    blocks.push_back(cur);\n                    cur.clear();\n                }\n            }\n            cur.push_back(abs(diff[i]));\n            \n        }\n        if(!cur.empty()){\n            blocks.push_back(cur);\n            cur.clear();\n        }\n\n\n        for(int i = 0; i < blocks.size() ;i++){\n            ans += solve_block(blocks[i]);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1721532719",
    "subm_id": "1327992427"
}