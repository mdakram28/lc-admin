{
    "username": "satyambansal183",
    "submission": "class Solution {\npublic:\n    int LIM = 30;\n    int minimumDifference(vector<int>& nums, int k) {\n        int start = 0;\n        int end = 0;\n        \n        int ans = abs(nums[0] - k);\n        \n        vector<int> curr(LIM+1);\n        \n        for(;end < nums.size(); end++) {\n            \n            curr = addNum(curr, nums[end]);\n            int currVal = getVal(curr, (end-start+1));\n            \n            // cout<<currVal<<\"eee \\n\";\n            ans = min(ans, abs(k - currVal));\n            \n            while(currVal <= k && start < end) {\n                // cout<<\"here \";\n                curr = removeNum(curr, nums[start]);\n                start++;\n                currVal = getVal(curr, (end-start+1));\n                ans = min(ans, abs(k - currVal));\n            }\n        }\n        \n        return ans;\n    }\n    \n    vector<int> getCt(int num) {\n        vector<int> ans(LIM, 0);\n        for(int i = LIM; i >=0 ; i--) {\n            if(num & (1<<i))\n                ans[i]++;\n        }\n        return ans;\n    }\n    \n    vector<int> addNum(vector<int> &curr, int val) {\n        for(int i = LIM; i >=0 ; i--) {\n            if(val & (1<<i))\n                curr[i]++;\n        }\n        return curr;\n    }\n    \n    vector<int> removeNum(vector<int> &curr, int val) {\n        for(int i = LIM; i >=0 ; i--) {\n            if(val & (1<<i) && curr[i] > 0)\n                curr[i]--;\n        }\n        return curr;\n    }\n    \n    int getVal(vector<int> &curr, int len) {\n        int ans = 0; \n        for(int i = LIM; i >=0 ; i--) {\n            if(curr[i] == len)\n                ans |= (1<<i);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299659.0
}