{
    "username": "jacobj2",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k==1:\n            return '9'*n\n        curr = ['0']*n\n        if k==2:\n            curr[0] = curr[-1] = '8'\n            lp = 1\n            rp = n - 2\n            while lp<=rp:\n                curr[lp] = curr[rp] = '9'\n                lp+=1\n                rp-=1\n            return ''.join(curr)\n        if k==3:\n            return '9'*n\n        if k==4:\n            if n==1:\n                return \"8\"\n            if n==2:\n                return \"88\"\n            curr[0]=curr[-1]='8'\n            curr[1]=curr[-2]='8'\n            lp = 2\n            rp = n - 3\n            while lp<=rp:\n                curr[lp] = curr[rp]='9'\n                lp+=1\n                rp-=1\n            return ''.join(curr)\n        if k==5:\n            curr[0] = curr[-1] = '5'\n            lp = 1\n            rp = n - 2\n            while lp<=rp:\n                curr[lp] = curr[rp] = '9'\n                lp+=1\n                rp-=1\n            return ''.join(curr)\n        if k==6:\n            if n==1:\n                return '6'\n            if n==2:\n                return '66'\n            curr[0] = curr[-1] = '8'\n            if n%2==1:\n                lp = 1\n                rp = n - 2\n                while lp<=rp:\n                    if lp==rp:\n                        curr[lp] = '8'\n                        lp+=1\n                    else:\n                        curr[lp] = curr[rp] = '9'\n                        lp+=1\n                        rp-=1\n                return ''.join(curr)\n            else:\n                lp = 1\n                rp = n - 2\n                while lp<=rp:\n                    if lp+1==rp:\n                        curr[lp] = curr[rp] = '7'\n                    else:\n                        curr[lp] = curr[rp] = '9'\n                    lp+=1\n                    rp-=1\n                return ''.join(curr)\n        if k==7:\n            if n<=2:\n                return '7'*n\n            lp = 0\n            rp = n - 1\n            while lp<=rp:\n                if lp+1<rp:\n                    curr[lp] = curr[rp] = '9'\n                else:\n                    for x in range(9,-1,-1):\n                        curr[lp] = curr[rp] = str(x)\n                        md = 0\n                        for i in range(n-1,-1,-1):\n                            md = md*10+int(curr[i])\n                            md%=7\n                        if md==0:\n                            break\n                lp+=1\n                rp-=1\n            return ''.join(curr)\n        if k==8:\n            if n==1:\n                return '8'\n            if n==2:\n                return '88'\n            if n==3:\n                return '888'\n            if n==4:\n                return '8888'\n            lp = 0\n            rp = n - 1\n            for i in range(3):\n                curr[lp] = curr[rp] = '8'\n                lp+=1\n                rp-=1\n            while lp<=rp:\n                curr[lp] = curr[rp] = '9'\n                lp+=1\n                rp-=1\n            return ''.join(curr)\n        if k==9:\n            return '9'*n\n                ",
    "submit_ts": "1723951794",
    "subm_id": "1359780201"
}