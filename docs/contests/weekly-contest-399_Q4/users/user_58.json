{
    "username": "Skywarrior2000",
    "submission": "const int N = 5e4+2;\nconst int mod = 1e9+7;\nstruct node{\n    long long a00, a01, a10, a11;\n    node() : a00(0), a01(0), a10(0), a11(0) {}\n};\n\nnode seg[N*4];\n\nvoid merge(int idx, int left, int right){\n    seg[idx].a00 = max(seg[left].a01 + max(seg[right].a00, seg[right].a10), seg[left].a00 + seg[right].a10);\n    seg[idx].a10 = max(seg[left].a11 + max(seg[right].a00, seg[right].a10), seg[left].a10 + seg[right].a10);\n    seg[idx].a01 = max(seg[left].a01 + max(seg[right].a01, seg[right].a11), seg[left].a00 + seg[right].a11);\n    seg[idx].a11 = max(seg[left].a11 + max(seg[right].a01, seg[right].a11), seg[left].a10 + seg[right].a11);\n}\n\nvoid update(int idx, int l, int r, int i, int x){\n    if(l == r){\n        seg[idx] = node();\n        seg[idx].a00 = x;\n        return;\n    }\n    int m = l+(r-l)/2;\n    int left = idx*2+1;\n    int right = left+1;\n    \n    if(i <= m)update(left, l, m, i, x);\n    else update(right, m+1, r, i, x);\n    \n    merge(idx, left, right);\n}\n\nlong long query(){\n    int idx = 0;\n    return max(max(seg[idx].a00, seg[idx].a01), max(seg[idx].a10, seg[idx].a11));\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        long long ans = 0;\n        for(int i = 0; i<= 4*n; i++)seg[i] = node();\n        for(int i = 0; i < n; i++){\n            update(0, 0, n-1, i, nums[i]);\n        }\n        \n        for(auto q: queries){\n            int p = q[0], x = q[1];\n            update(0, 0, n-1, p, x);\n            ans += query();\n            ans %= mod;\n        }\n        return (int)(ans);\n    }\n};",
    "submit_ts": "1716693568",
    "subm_id": "1268090403"
}