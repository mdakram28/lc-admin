{
    "username": "\u8001\u516d",
    "submission": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <map>\n#include <set>\n#include <unordered_set>\n#include <unordered_map>\n#include <list>\n#include <stack>\n#include <cmath>\n#include <functional>\n#include <cstdlib>\n#include <ctime>\n#include <random>\n#include <iomanip>\n\nusing namespace std;\n\nint init = []()\n{\n\t#ifdef LOCAL\n\t\tfreopen(\"in.txt\", \"r\", stdin);\n\t#endif\n\tios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n\treturn 0;\n}();\n\nvoid show_bits(void *ptr, int len)\n{\n\tunsigned char *p = (unsigned char*) ptr;\n\tfor(int i = len-1; i >= 0; --i)\n\t{\n\t\tprintf(\"%x\", p[i]);\n\t\t// for(int j = 7; j >= 0; --j)\n\t\t// {\n\t\t// \tprintf(\"%u\", (p[i]>>j)&1);\n\t\t// }\n\t}\n\tprintf(\"\\n\");\n}\n\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define dep(i,a,b) for(int i=(a);i>=(b);i--)\n#define range(n) for(int __i = 0; __i<n; ++__i)\n#define sort_(arr) sort(arr.begin(), arr.end())\n// #define dsort(arr) sort(arr.begin(), arr.end(), greater<int>)\n#define show(arr) for(auto &a : arr) cout << a << \" \";cout<<endl;\nconst int MAX = INT32_MAX;\nconst int MIN = INT32_MIN;\nusing ll = long long;\nusing pii = pair<int,int>;\nusing piii = pair<int,pii>;\nusing pll = pair<ll,ll>;\nusing vi = vector<int>;\nusing vii = vector<vi>;\nusing vl = vector<ll>;\nusing vll = vector<vl>;\n// default_random_engine e;\n// e.seed(time(0));\n// uniform_real_distribution<double> u(0,1.0); // \u5de6\u95ed\u53f3\u95ed\u533a\u95f4\n// #define FK\n#ifdef FK\n#define FUCK(x) cout << (#x) << \": \" << x << endl<< endl;\n#define FUCKK(x, y) cout << (#x) << \": \" << x << endl << (#y) << \": \" << y << endl<< endl;\n#define FUCKKK(x, y, z) cout << (#x) << \": \" << x << endl << (#y) << \": \" << y << endl << (#z) << \": \" << z << endl<< endl;\n#else\n#define FUCK(x) ;\n#define FUCKK(x, y) ;\n#define FUCKKK(x, y, z) ;\n#endif\nint ct = 0;\nusing ll = long long;\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        ++ct;\n\n        int n = s.size();\n        deque<int> s1, s0;\n        stack<ll> st1, st0;\n        vector<ll> nextd(n+1, n), bd(n+1, n);\n        ll pre1= -1, pre0 = -1;\n        \n        for(ll i = 0; i<n; ++i) {\n            if(s[i] == '1') {\n                while(st0.size()) {\n                    auto a = st0.top();\n                    st0.pop();\n                    \n                    nextd[a] = i;\n                }\n                st1.push(i);\n                if(s1.size() == k) {\n                    if(s1[0] < 0 || s1[0]>n) {\n                        if(ct == 621)\n                        return vector<ll>();\n                    }\n                    bd[s1[0]] = i;\n                    s1.pop_front();\n                }\n                s1.push_back(i);\n            } else {\n                while(st1.size()) {\n                    auto a = st1.top();\n                    st1.pop();\n                    if(a < 0 || a>=n) {\n                        if(ct == 621)\n                        return vector<ll>();\n                    }\n                    nextd[a] = i;\n                }\n                st0.push(i);\n                if(s0.size() == k) {\n                    \n                    bd[s0[0]] = i; // <0\n                    s0.pop_front();\n                }\n                s0.push_back(i);\n            }\n        }\n        \n        vector<ll> kend(n), sm(n);\n        for(ll l = 0; l<n; ++l) {\n            ll r = bd[nextd[l]];\n            kend[l] = max(r, bd[l]);\n            ll len = kend[l] - l;\n            sm[l] = len;\n            // cout << kend[l] << \" \";\n        }\n        // cout << endl;\n        // for(auto a : sm) {\n        //     cout << a << \" \";\n        // }\n        // cout << endl;\n        for(ll i = 1; i<n; ++i) {\n            sm[i] += sm[i-1];\n        }\n        auto sum = [&](ll l, ll r) {\n            if(l == 0) return sm[r];\n            return sm[r] - sm[l-1];\n        };\n\n        vector<long long> ans;\n        for(auto &v : queries) {\n            ll l = v[0], r = v[1];\n            ll i = l, j = r;\n            while(i<j) {\n                ll mid = (i+j)/2;\n                if(kend[mid] > r) {\n                    j = mid;\n                } else {\n                    i = mid+1;\n                }\n            }\n            ll len = min(r, i >=0 ? kend[i]-1 : 0) - i + 1;\n            ll res = len*(len+1)/2;\n\n            if(i>l){\n                res += sum(l, i-1);\n            }\n            ans.push_back(res);\n        }\n\n        return ans;\n    }\n};\n\n// int main() {\n    \n//     return 0;\n// }",
    "submit_ts": "1723952296",
    "subm_id": "556410764"
}