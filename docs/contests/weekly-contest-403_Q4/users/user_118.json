{
    "username": "timetoai",
    "submission": "class Solution:\n    def ma(self, grid: List[List[int]], si, ei, sj, ej) -> int:\n        mii = mij = inf\n        mai = maj = - inf\n        for i in range(si, ei):\n            for j in range(sj, ej):\n                if grid[i][j] == 1:\n                    mii = min(mii, i)\n                    mij = min(mij, j)\n                    mai = max(mai, i)\n                    maj = max(maj, j)\n        return (maj - mij + 1) * (mai - mii + 1) if mai != - inf else 0\n    \n    def minimumSum(self, grid: List[List[int]]) -> int:\n        mii = mij = inf\n        mai = maj = - inf\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == 1:\n                    mii = min(mii, i)\n                    mij = min(mij, j)\n                    mai = max(mai, i)\n                    maj = max(maj, j)\n        ret = inf\n        for ei in range(1, len(grid)):\n            for ej in range(1, len(grid[0])):\n                ret = min(ret,\n                    self.ma(grid, 0, ei, 0, len(grid[0])) + \\\n                    self.ma(grid, ei, len(grid), 0, ej) + \\\n                    self.ma(grid, ei, len(grid), ej, len(grid[0]))\n                )\n                # print(ei, ej, ret)\n        for ei in range(1, len(grid)):\n            for ej in range(1, len(grid[0])):\n                ret = min(ret,\n                    self.ma(grid, ei, len(grid), 0, len(grid[0])) + \\\n                    self.ma(grid, 0, ei, 0, ej) + \\\n                    self.ma(grid, 0, ei, ej, len(grid[0]))\n                )\n                # print(ei, ej, ret)\n        # print(ret)\n        for ei in range(1, len(grid)):\n            for ej in range(1, len(grid[0])):\n                ret = min(ret,\n                    self.ma(grid, 0, len(grid), 0, ej) + \\\n                    self.ma(grid, 0, ei, ej, len(grid[0])) + \\\n                    self.ma(grid, ei, len(grid), ej, len(grid[0]))\n                )\n                # print(ei, ej, ret)\n        for ei in range(1, len(grid)):\n            for ej in range(1, len(grid[0])):\n                ret = min(ret,\n                    self.ma(grid, 0, len(grid), ej, len(grid[0])) + \\\n                    self.ma(grid, 0, ei, 0, ej) + \\\n                    self.ma(grid, ei, len(grid), 0, ej)\n                )\n                # print(ei, ej, ret)\n                \n        for ei1 in range(1, len(grid)):\n            for ei2 in range(ei1 + 1, len(grid)):\n                ret = min(ret,\n                         self.ma(grid, 0, ei1, 0, len(grid[0])) + \\\n                          self.ma(grid, ei1, ei2, 0, len(grid[0])) + \\\n                          self.ma(grid, ei2, len(grid), 0, len(grid[0]))\n                         )\n        for ej1 in range(1, len(grid[0])):\n            for ej2 in range(ej1, len(grid[0])):\n                ret = min(ret,\n                         self.ma(grid, 0, len(grid), 0, ej1) + \\\n                         self.ma(grid, 0, len(grid), ej1, ej2) + \\\n                         self.ma(grid, 0, len(grid), ej2, len(grid[0])))\n        return ret\n        ",
    "submit_ts": 1719111864.0
}