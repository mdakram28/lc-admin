{
    "username": "Rishab",
    "submission": "class Solution {\npublic:\n    \n    #define ll long long\n    \n    int dp[(int) 1e5+10][10];\n    long long POW10[(int) 1e5+10];\n    string res;\n    \n    int dfs(int i, int rem, int n, int k) {\n        \n        if(dp[i][rem] != -1)\n            return dp[i][rem];\n        \n        if(i > n-1-i) return dp[i][rem] = rem == 0;\n        \n        dp[i][rem] = 0;\n        \n        int start = i ? 0 : 1;\n        \n        if(i == n-1-i) {\n        \n            for(int j=9; j>=start; --j) {\n                int new_rem = (rem + j * POW10[i]) % k;\n                dp[i][rem] |= dfs(i+1, new_rem, n, k);\n            }\n            \n        } else {\n        \n            for(int j=9; j>=start; --j) {\n               int new_rem = (rem + j * POW10[i] + j * POW10[n-1-i]) % k;\n                dp[i][rem] |= dfs(i+1, new_rem, n, k);\n            }\n            \n        }\n        \n        return dp[i][rem];\n        \n    }\n    \n    void reconstruct(int i, int rem, int n, int k) {\n       \n        if(i > n-1-i) return;\n        \n        int start = i ? 0 : 1;\n        \n        if(i == n-1-i) {\n        \n            for(int j=9; j>=start; --j) {\n                int new_rem = (rem + j * POW10[i]) % k;\n                if(dp[i+1][new_rem]) {\n                    res[i] = '0'+j;\n                    return;\n                }\n            }\n            \n        } else {\n        \n            for(int j=9; j>=start; --j) {\n                int new_rem = (rem + j * POW10[i] + j * POW10[n-1-i]) % k;\n                if(dp[i+1][new_rem]) {\n                     res[i] = res[n-1-i] = '0'+j;\n                    return reconstruct(i+1, new_rem, n, k);\n                }\n            }\n            \n        }\n          \n    }\n    \n    \n    string largestPalindrome(int n, int k) {\n        \n        POW10[0] = 1;\n        \n        for(int i=1; i<=n; ++i) {\n            POW10[i] = 10 * POW10[i-1];\n            POW10[i] %= k;\n        }\n        \n        res = string(n, '.');\n        \n        memset(dp, -1, sizeof(dp));\n        \n        int x = dfs(0, 0, n, k);\n        \n        reconstruct(0, 0, n, k);\n        \n        return res;\n        \n        \n    }\n};",
    "submit_ts": "1723951173",
    "subm_id": "1359765053"
}