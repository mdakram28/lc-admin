{
    "username": "user3593Z",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int mod = (int)1e9 + 7;\n        int n = nums.length;\n        \n        int[][] dp = new int[n][1002];\n        Arrays.fill(dp[0], 1);\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j <= nums[i]; j++) {\n                int one = j;\n                int two = nums[i] - j;\n                int diff = Math.max(0, nums[i + 1] - nums[i]);\n                \n                dp[i + 1][one + diff] = (dp[i + 1][one + diff] + dp[i][j]) % mod;\n                dp[i + 1][nums[i + 1] + 1] = ((dp[i + 1][nums[i + 1] + 1] - dp[i][j]) % mod + mod) % mod;\n            }\n            \n            for (int j = 1; j <= nums[i + 1] + 1; j++) {\n                dp[i + 1][j] = (dp[i + 1][j] + dp[i + 1][j - 1]) % mod;\n            }\n        }\n        \n        int result = 0;\n        for (int i = 0; i <= nums[n - 1]; i++) result = (result + dp[n - 1][i]) % mod;\n        return result;\n        \n    }\n}",
    "submit_ts": "1723345723",
    "subm_id": "1351561951"
}