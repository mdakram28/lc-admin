{
    "username": "goats_9",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<array<int, 20>> spt(n);\n        for (int i = 0; i < n; i++) spt[i][0] = nums[i];\n        for (int j = 1; j < 20; j++) {\n            for (int i = 0; i + (1<<j) <= n; i++) {\n                spt[i][j] = spt[i][j - 1] & spt[i + (1<<(j - 1))][j - 1];\n            }\n        }\n        function<int(int, int)> query = [&] (int l, int r) -> int {\n            if (l >= r) return 0;\n            int d = r - l;\n            int p = 0;\n            while ((1<<(p + 1)) <= d) p++;\n            return spt[l][p] & spt[r - (1<<p)][p];\n        };\n        for (int i = 0; i < n; i++) {\n            int l1 = i, r1 = n;\n            while (r1 - l1 > 1) {\n                int g = (l1 + r1) / 2;\n                if (query(i, g) > k) l1 = g;\n                else r1 = g;\n            }\n            if (query(i, r1) != k) continue;\n            int l = i + 1, r = n;\n            while (r - l > 1) {\n                int g = (l + r) / 2;\n                if (query(i, g) >= k) l = g;\n                else r = g;\n            }\n            ans += r - r1;\n            ans += (query(i, r) == k);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280449",
    "subm_id": "1311789832"
}