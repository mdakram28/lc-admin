{
    "username": "Ash-codes18",
    "submission": "class TrieNode {\npublic:\nvector<TrieNode*> childNodes;\nint cost;\nbool isEndOfWord;\nTrieNode() : childNodes(26, nullptr), cost(INT_MAX), isEndOfWord(false) {}\n};\n\nclass TrieTree {\npublic:\nTrieNode* root;\n\nTrieTree() {\n    root = new TrieNode();\n}\n\nvoid addWord(const string& word, int wordCost) {\n    TrieNode* node = root;\n    for (char c : word) {\n        if (!node->childNodes[c - 'a']) {\n            node->childNodes[c - 'a'] = new TrieNode();\n        }\n        node = node->childNodes[c - 'a'];\n    }\n    node->cost = min(wordCost, node->cost);\n    node->isEndOfWord = true;\n}\n\nTrieNode* getRoot() {\n    return root;\n}\n};\n\n    \nclass Solution {\npublic:\nint minimumCost(string target, vector<string>& words, vector<int>& costs) {\nTrieTree trie;\nint targetLength = target.size();\nvector<int> minCost(targetLength + 1, INT_MAX);\n    for (int i = 0; i < words.size(); ++i) {\n        trie.addWord(words[i], costs[i]);\n    }\n\n    minCost[0] = 0;\n\n    for (int i = 0; i < targetLength; ++i) {\n        if (minCost[i] == INT_MAX) continue;\n\n        TrieNode* node = trie.getRoot();\n        for (int j = i; j < targetLength; ++j) {\n            char c = target[j];\n            if (!node->childNodes[c - 'a']) break;\n            node = node->childNodes[c - 'a'];\n            if (node->isEndOfWord) {\n                minCost[j + 1] = min(minCost[j + 1], minCost[i] + node->cost);\n            }\n        }\n    }\n\n    return minCost[targetLength] == INT_MAX ? -1 : minCost[targetLength];\n}\n};\n",
    "submit_ts": "1720323087",
    "subm_id": "1312367003"
}