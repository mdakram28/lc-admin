{
    "username": "_mugiwara_",
    "submission": "class Solution:\n    def __init__(self):\n        self.dp = defaultdict(lambda: [[-1] * 2 for _ in range(32)])\n    \n    def solve(self, k, i, jump, can):\n        if i > k + 5:\n            return 0\n\n        if jump > 31:\n            return 0\n\n        if self.dp[i][jump][can] != -1:\n            return self.dp[i][jump][can]\n\n        ans = (i == k)\n        if can:\n            ans += self.solve(k, i - 1, jump, 0)\n        if i + (1 << jump) <= k + 1:\n            ans += self.solve(k, i + (1 << jump), jump + 1, 1)\n\n        self.dp[i][jump][can] = ans\n        return ans\n    \n    def waysToReachStair(self, k):\n        return self.solve(k, 1, 0, 1)",
    "submit_ts": "1716089610",
    "subm_id": "1261846778"
}