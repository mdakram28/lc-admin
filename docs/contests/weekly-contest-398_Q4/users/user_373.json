{
    "username": "UltraSonic",
    "submission": "class Solution {\n    int nCr(int n, int r,vector<vector<int> > &ncr)\n{\n        if(ncr[n][r]!=-1)return ncr[n][r];\n    if (r > n)\n        return 0;\n    if (r == 0 || r == n)\n        return 1;\n    ncr[n][r]= nCr(n - 1, r - 1, ncr) + nCr(n - 1, r, ncr);\n       return ncr[n][r];\n}\n\n    \n    int comb(int n, int r){\n        if(r==0)return 1;\n        \n        vector<vector<int> > ncr(n+1, vector<int> (r+1,-1));\n        \n        return nCr(n,r,ncr);\n        /*long long den=n,num=r;\n        \n        while(r>1){\n            n--;\n            r--;\n            den=den*n;\n            num=num*r;\n        }\n        return den/num;*/\n    }\npublic:\n    int waysToReachStair(int k) {\n        if(k==0)return 2;\n        int pw = log2(k);\n        //cout<<pw;\n        \n        if((1<<pw)!=k){\n            pw++;\n        }\n        long long one=1;\n        \n        int spaces, fill;\n        \n        int res=0;\n        while((one<<pw)-(pw+1) <= k ){\n            spaces=pw+1;\n            fill=(one<<pw)-k;\n            res+=comb(spaces, fill);\n            cout<<spaces<<\",\"<<fill<<\"\\t\";\n            cout<<(one<<pw)<<\",\"<<(one<<pw)-(pw+2)<<\"\\n\";\n            pw++;\n        }\n        \n        return res;\n        \n    }\n};",
    "submit_ts": 1716088587.0
}