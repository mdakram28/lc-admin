{
    "username": "poojaagarwal_22",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& col, int x) {\n\n        col.insert(col.end(), col.begin(), col.begin() + x);\n        int m= col.size(), c = 0;\n        map<string, int> mp;\n        vector<int>v(m + 1, 0);\n        // int m=col.size();\n        // if(col.size()<k)return 0;\n        // int cnt=0;\n        // bool f=1;\n        // for(int i=0;i<k-1;i++){\n        //    if(col[i]==col[i+1]){\n        //     f=0;\n        //     break;\n        //    }\n        // }\n        // if(f==1)cnt++;\n        // for(int i=1;i<m;i++){\n        //     int og=col[(i-1)%m];\n        //     int in=col[(i+k-1)%m];\n        //     int n=col[(i+k)%m];\n        //     int p=col[(i-2+m)%m];\n        //     if(og==p)f=0;\n        //     if(in==n)f=0;\n        //     if(og!=p && in!=n)f=1;\n        //     if(f==1)cnt++;\n        // }\n        // return cnt;\n        for (int a= 1; a < m; ++a)\n        {\n            v[a] += v[a - 1] + abs(col[a] - col[a - 1]);\n        }\n        x--;\n        for (int b = x + 1; b < m; ++b)\n        {\n            if (v[b] - v[b - x] == x)\n            {\n                c++;\n            }\n        }\n        return c;\n    }\n};",
    "submit_ts": "1720280356",
    "subm_id": "1311786285"
}