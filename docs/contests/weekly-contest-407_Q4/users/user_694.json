{
    "username": "Ostosis",
    "submission": "class Solution {\npublic:\nlong long minimumOperations(vector<int>& nums, vector<int>& target) {\n    long long operations = 0;\n    int len = nums.size();\n    vector<int> diffs(len);\n\n    for (size_t i = 0; i < len; i++)\n    {\n        diffs[i] = target[i] - nums[i];\n    }\n\n\n    int direction = 0;\n\n    for (size_t i = 0; i < len;)\n    {\n        int d = diffs[i];\n        \n        if (d == 0) {\n            i++;\n            continue;\n        }\n\n        direction = d > 0 ? 1 : -1;\n        int startIdx = i;\n        i++;\n\n        if (d > 0) {\n            int prevMax = d;\n\n            while (i < len && diffs[i] > 0) {\n                int diff = diffs[i];\n\n                if (diff < prevMax) {\n                    operations += prevMax - diff;\n                }\n\n                prevMax = diff;\n                i++;\n            }\n\n            operations += prevMax;\n        }\n        else {\n            int prevMin = d;\n\n            while (i < len && diffs[i] < 0) {\n                int diff = diffs[i];\n\n                if (diff > prevMin) {\n                    operations += diff - prevMin;\n                }\n\n                prevMin = diff;\n                i++;\n            }\n\n            operations -= prevMin;\n        }\n    }\n\n    return operations;\n}\n};",
    "submit_ts": "1721531978",
    "subm_id": "1327974607"
}