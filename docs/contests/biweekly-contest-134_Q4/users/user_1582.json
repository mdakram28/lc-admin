{
    "username": "srafael",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        constexpr int K = 17;\n\n        int n = nums.size();\n\n        vector<vector<int>> st(K + 1, vector<int>(n + 1));\n\n        copy(nums.begin(), nums.end(), st[0].begin());\n\n        for (int i = 1; i <= K; i++) {\n            for (int j = 0; j + (1 << i) <= n; j++) {\n                st[i][j] = st[i - 1][j] & st[i - 1][j + (1 << (i - 1))];\n            }\n        }\n\n        const auto orq = [&](int L, int R) {\n            int i = log2_floor(R - L + 1);\n            return st[i][L] & st[i][R - (1 << i) + 1];\n        };\n\n        long long res = 0;\n\n        const auto left_match = [&](int i) {\n            int left = i;\n            int right = n - 1;\n            int best = -1;\n            while (right - left >= 0) {\n                int mid = (left + right) >> 1;\n\n                int q = orq(i, mid);\n\n                if (q < k) {\n                    right = mid - 1;\n                } else if (q > k) {\n                    left = mid + 1;\n                } else {\n                    right = mid - 1;\n                    best = mid;\n                }\n            }\n\n            return best;\n        };\n        \n        const auto right_match = [&](int i) {\n            int left = i;\n            int right = n - 1;\n            int best = -1;\n            while (right - left >= 0) {\n                int mid = (left + right) >> 1;\n\n                int q = orq(i, mid);\n\n                if (q < k) {\n                    right = mid - 1;\n                } else if (q > k) {\n                    left = mid + 1;\n                } else {\n                    left = mid + 1;\n                    best = mid;\n                }\n            }\n\n            return best;\n        };\n\n        for (int i = 0; i < n; ++i) {\n            int left = left_match(i);\n            \n            if (left == -1) {\n                continue;\n            }\n            \n            int right = right_match(i);\n            \n            // cout << i << ' ' << left << ' ' << right << endl;\n\n            res += right - left + 1;\n        }\n\n        return res;\n    }\n    \n    int log2_floor(unsigned long i) {\n        return std::bit_width(i) - 1;\n    }\n};",
    "submit_ts": "1720279339",
    "subm_id": "1311747216"
}