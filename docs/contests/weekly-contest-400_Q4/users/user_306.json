{
    "username": "2022_grad",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define PI (2*acos(0.0))\n#define sz(x)           ( (ll) (x).size())\n#define setbits(x)      __builtin_popcountll(x)\n#define zrobits(x)      __builtin_ctzll(x)\n#define pos_rt_stbt(x)   (__builtin_ffsll(x))   // return position of rightmost set bit ( 1 indexing ) pos_rt_stbt(10) = 2 ( 1010 )\n#define ps(x,y)         fixed<<setprecision(y)<<x\n#define w(test)            int test; cin>>test; while(test--)\n#define nl \"\\n\"\n#define yes cout<<\"YES\\n\"\n#define no cout<<\"NO\\n\"\n#define all(v) (v).begin(),(v).end()\n#define clr(v) memset(v,0,sizeof(v));\n#define sqr(x) ((x) * (x))\ntypedef long long int  ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<string> vs;\ntypedef pair<ll, ll> pll;\ntypedef vector<pair<ll, ll>> vpll;\ntypedef vector<vpll>vvpll;\nconst long long int inf = 1e17;\nconst long long int mod = 1e9 + 7;\nconst long long int MOD =  998244353;\ntypedef long long int  ll;\n\nvector<int>LOG;\nvoid build_LOG(int MAX_N){\n    LOG.resize(MAX_N+3);\n    LOG[1]=0;\n    for (int i = 2; i <=MAX_N+2 ; ++i){\n        LOG[i]=LOG[i/2]+1;\n    }\n}\nint init=0;\ntemplate <class T> struct SparseTable {\n    int n, logn;\n    vector <vector <T>> dp1,dp2;\n    SparseTable(int _n) {\n        n = _n;\n        logn = ceil(log2(n)) + 1;\n        dp1.assign(logn, vector <T> (n, 0));\n    }\n    T comb1(T x, T y) { return (x & y); }\n    void build(vector<int> &a) {\n        for(int i = 0; i < n; i ++) {\n            dp1[0][i] = a[i];\n        }\n        for(int j = 1; j < logn; j ++) {\n            for(int i = 0; i + (1LL << j) <= n; i ++) {\n                dp1[j][i] = comb1(dp1[j - 1][i], dp1[j - 1][i + (1LL << (j - 1))]);\n            }\n        }\n    }\n    T query1(int l, int r) {\n        int ln = LOG[r - l + 1];\n        return comb1(dp1[ln][l], dp1[ln][r - (1LL << ln) + 1]);\n    }\n};\n\nclass Solution {\npublic:\n\n    int minimumDifference(vector<int>& nums, int k) {\n        if(init == 0){\n            init=1;\n            build_LOG(1e5+10);\n        }\n        int n = nums.size();\n        SparseTable<int>S (n);\n        S.build(nums);\n        int ans = 1e9+2;\n        for (int i = 0; i < n; ++i){\n            int l=i,r=n-1;\n            while(l<=r){\n                int mid = l+(r-l)/2;\n                int AND = S.query1(i,mid);\n                if(AND <=k){\n                    ans=min(ans,k-AND);\n                    r=mid-1;\n                }else l=mid+1;\n            }\n        }\n        for (int i = 0; i < n; ++i){\n            int l=i,r=n-1;\n            while(l<=r){\n                int mid = l+(r-l)/2;\n                int AND = S.query1(i,mid);\n                if(AND >= k){\n                    ans=min(ans,AND-k);\n                    l=mid+1;\n                }else r=mid-1;\n            }\n        }\n        // ans=min(ans,k);\n        return ans;\n    }\n};\n\nstatic const auto speedup = []() {\n    std::ios::sync_with_stdio(false); std::cin.tie(nullptr); return 0;\n}();\n\n\nvoid solve(){\n    vector<int>a={};\n    vector<vector<int>>g={\n\n    };\n\n    Solution x;\n    int d;\n}\n\n// int main(){  solve();  }",
    "submit_ts": 1717296356.0
}