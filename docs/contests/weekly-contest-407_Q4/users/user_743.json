{
    "username": "hungry-swirleshgv",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        dn, dt = [nums[0]] * n, [target[0]] * n\n        for i in range(1, n):\n            dn[i] = nums[i] - nums[i - 1]\n            dt[i] = target[i] - target[i - 1]\n        d = [0] * n\n        for i, (a, b) in enumerate(zip(dn, dt)):\n            d[i] = b - a\n        \n        upsm = sum(d[i] for i in range(n) if d[i] > 0)\n        dosm = abs(sum(d[i] for i in range(n) if d[i] < 0))\n        return min(upsm, dosm) + abs(upsm - dosm)",
    "submit_ts": "1721532079",
    "subm_id": "548390276"
}