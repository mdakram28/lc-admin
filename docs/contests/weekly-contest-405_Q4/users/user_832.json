{
    "username": "rishabhk02",
    "submission": "class Solution {\n    class TrieNode {\n        int isEnd = 0;\n        int minVal = Integer.MAX_VALUE;\n        TrieNode arr[];\n\n        public TrieNode() {\n            arr = new TrieNode[26];\n        }\n    }\n\n    TrieNode root = new TrieNode();\n\n    void add(int cost, String word) {\n        int n = word.length();\n        TrieNode cur = root;\n        for (int i = 0; i < n; i++) {\n            int c = word.charAt(i) - 'a';\n            if (cur.arr[c] == null) {\n                cur.arr[c] = new TrieNode();\n            }\n            cur = cur.arr[c];\n        }\n        cur.isEnd = 1;\n        cur.minVal = Math.min(cur.minVal, cost);\n    }\n    \n    int dp[];\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = words.length;\n        for (int i = 0; i < n; i++) {\n            add(costs[i], words[i]);\n        }\n        dp = new int[target.length()+1];\n        Arrays.fill(dp,-1);\n        int res = helper(target, 0);\n        return res == Integer.MAX_VALUE ? -1 : res;\n    }\n\n    int helper(String target, int idx) {\n        int n = target.length();\n        if (idx == n) return 0;\n        if(dp[idx]!=-1) return dp[idx];\n        TrieNode cur = root;\n        int curIdx = idx;\n        int res = Integer.MAX_VALUE;\n        while (cur != null && curIdx < n) {\n            int c = target.charAt(curIdx) - 'a';\n            cur = cur.arr[c];\n            if (cur != null && cur.isEnd == 1) {\n                int curVal = helper(target, curIdx + 1);\n                if (curVal != Integer.MAX_VALUE) {\n                    res = Math.min(res, cur.minVal + curVal);\n                }\n            }\n            curIdx++;\n        }\n        return dp[idx]=res;\n    }\n}\n",
    "submit_ts": "1720322643",
    "subm_id": "1312355348"
}