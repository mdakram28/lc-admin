{
    "username": "cy171",
    "submission": "class SegmentTree:\n    def __init__(self, n):\n        self.defvalue = 0  # change the default value to start\n        self.tree = [self.defvalue] * (4 * n)\n\n    def update(self, idx, val, node=1, start=0, end=None):\n        if end is None:\n            end = len(self.tree) // 4\n        if start == end:\n            self.tree[node] = val\n        else:\n            mid = (start + end) // 2\n            if idx <= mid:\n                self.update(idx, val, node * 2, start, mid)\n            else:\n                self.update(idx, val, node * 2 + 1, mid + 1, end)\n            self.tree[node] = self.tree[node * 2]+ self.tree[node * 2 + 1]\n\n    def query(self, left, right, node=1, start=0, end=None):\n        if end is None:\n            end = len(self.tree) // 4\n        if left > end or right < start:\n            return self.defvalue\n        if left <= start and right >= end:\n            return self.tree[node]\n        mid = (start + end) // 2\n        return self.query(left, right, node * 2, start, mid) +self.query(left, right, node * 2 + 1, mid + 1, end)\n    \n    \nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def check(i):\n            if i <= 0 or i >= n - 1:\n                return \n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                if sign[i] == 0:\n                    tree.update(i, 1)\n                    sign[i] = 1\n            else:\n                if sign[i] == 1:\n                    tree.update(i, 0)\n                    sign[i] = 0\n\n            \n        n = len(nums)\n        tree = SegmentTree(n)\n        sign = [0]*n\n        for i in range(1,n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                tree.update(i, 1)\n                sign[i] = 1\n        # print(sign)\n        ans = []\n        for item in queries:\n            if item[0] == 1:\n                _, l, r = item\n                ans.append(tree.query(l+1, r-1))\n            else:\n                _, idx, val = item\n                nums[idx] = val\n                check(idx)\n                check(idx+1)\n                check(idx-1)\n        return ans\n\n                            \n                            \n                \n                \n                \n                \n        \n        ",
    "submit_ts": 1718507064.0
}