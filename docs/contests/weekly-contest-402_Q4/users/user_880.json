{
    "username": "ji-shi-u",
    "submission": "class Solution {\npublic:\n    \n    int query(int* cs, int idx){\n        int res = 0;\n        while(idx > 0){\n            res += cs[idx];\n            idx -= idx & -idx;\n        }\n        return res;\n    }\n    \n    void modify(int* cs, int n, int idx, int val){\n        while(idx <= n){\n            cs[idx] += val;\n            idx += idx & -idx;\n        }\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        int cnts[n + 1];\n        memset(cnts, 0, sizeof cnts);\n        for(int i = 1; i < n - 1; ++i){\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                modify(cnts, n, i + 1, 1);\n        }\n        \n        vector<int> ans;\n        for(auto& q: queries){\n            if(q[0] == 1){\n                if(q[2] > q[1])\n                    ans.push_back(query(cnts, q[2]) - query(cnts, q[1] + 1));\n                else\n                    ans.push_back(0);\n            }else{\n                if(q[1] == 0 || q[1] == n - 1){\n                    if(q[1] == 0){\n                        if(1 < n - 1 && nums[1] > nums[2] && nums[1] > nums[0]){\n                            if(nums[1] <= q[2])\n                                modify(cnts, n, 2, -1);\n                        }else{\n                            if(1 < n - 1 && nums[1] > nums[2] && nums[1] > q[2])\n                                modify(cnts, n, 2, 1);\n                        }\n                    }else{\n                        int j = n - 2;\n                        if(j > 0 && nums[j] > nums[j - 1] && nums[j] > nums[j + 1]){\n                            if(nums[j] <= q[2])\n                                modify(cnts, n, j + 1, -1);\n                        }else{\n                            if(j > 0 && nums[j] > nums[j - 1] && nums[j] > q[2])\n                                modify(cnts, n, j + 1, 1);\n                        }\n                    }\n                    nums[q[1]] = q[2];\n                }else{\n                    if(nums[q[1]] > nums[q[1] - 1] && nums[q[1]] > nums[q[1] + 1]){\n                        if(q[2] <= nums[q[1] - 1] || q[2] <= nums[q[1] + 1]){\n                            modify(cnts, n, q[1] + 1, -1);\n                        }\n                        if(q[1] - 1 > 0 && nums[q[1] - 1] > nums[q[1] - 2] && nums[q[1] - 1] > q[2])\n                            modify(cnts, n, q[1], 1);\n                        if(q[1] + 1 < n - 1 && nums[q[1] + 1] > nums[q[1] + 2] && nums[q[1] + 1] > q[2])\n                            modify(cnts, n, q[1] + 2, 1);\n                    }else{\n                         int pr = q[1] - 1, nxt = q[1] + 1;\n                         if(pr > 0 && nums[pr] > nums[pr - 1] && nums[pr] > nums[pr + 1]){\n                             if(nums[pr] <= q[2])\n                                    modify(cnts, n, pr + 1, -1);\n                         }else{\n                             if(pr > 0 && nums[pr] > nums[pr - 1] && nums[pr] > q[2])\n                                    modify(cnts, n, pr + 1, 1);\n                         }\n                        \n                        if(nxt < n - 1 && nums[nxt] > nums[nxt + 1] && nums[nxt] > nums[nxt - 1]){\n                            if(nums[nxt] <= q[2])\n                                modify(cnts, n, nxt + 1, -1);\n                        }else{\n                            if(nxt < n - 1 && nums[nxt] > nums[nxt + 1] && nums[nxt] > q[2])\n                                modify(cnts, n, nxt + 1, 1);\n                                    \n                        }\n                         if(q[2] > nums[q[1] - 1] && q[2] > nums[q[1] + 1]){\n                             modify(cnts, n, q[1] + 1, 1);\n                         }\n                    }\n                    nums[q[1]] = q[2];\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507280",
    "subm_id": "539780366"
}