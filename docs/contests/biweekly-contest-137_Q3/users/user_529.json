{
    "username": "Nikhil Priyadarshan",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(std::vector<std::vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        // Precompute the top 3 values and their column indices for each row\n        std::vector<std::vector<std::pair<int, int>>> top3(m); // stores (value, column index)\n\n        for (int i = 0; i < m; ++i) {\n            std::vector<std::pair<int, int>> rowValues;\n            for (int j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n            // Sort row values in descending order to get the top 3\n            std::sort(rowValues.rbegin(), rowValues.rend());\n            top3[i] = {rowValues[0], rowValues[1], rowValues[2]};\n        }\n\n        // Iterate through all combinations of three different rows\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    // For these rows, try to pick the best combination of columns\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (top3[r1][i].second == top3[r2][j].second) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (top3[r1][i].second == top3[r3][k].second || top3[r2][j].second == top3[r3][k].second) continue;\n\n                                // Valid combination of columns, calculate the sum\n                                long long currentSum = static_cast<long long>(top3[r1][i].first) +\n                                                       static_cast<long long>(top3[r2][j].first) +\n                                                       static_cast<long long>(top3[r3][k].first);\n                                maxSum = std::max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723908674",
    "subm_id": "1359162475"
}