{
    "username": "Marmaduke",
    "submission": "typedef array<long long int, 4> poop;\n\nconst long long int dead = -1e11;\n\nvoid update(vector<poop>& st, int node, int idx, int val, int L, int R)\n{\n    if(L == R)\n    {\n        st[node][0] = 0;\n        st[node][1] = st[node][2] = dead;\n        st[node][3] = val;\n        return;\n    }\n    int M = (L+R)/2;\n    int a = node*2;\n    int b = a+1;\n    if(idx <= M)\n    {\n        update(st, a, idx, val, L, M);\n    }\n    else\n    {\n        update(st, b, idx, val, M+1, R);\n    }\n    for(int k = 0; k < 4; k++)\n    {\n        st[node][k] = dead;\n    }\n    for(int i = 0; i < 4; i++)\n    {\n        for(int j = 0; j < 4; j++)\n        {\n            if((i&1) != 0 && (j&2) != 0)\n            {\n                continue;\n            }\n            int left = i & 2;\n            int right = j & 1;\n            auto &holder = st[node][left+right];\n            holder = max(holder, st[a][i]+st[b][j]);\n        }\n    }\n}\n\nvoid verbose(vector<poop>& st, int node, int L, int R)\n{\n    cout << \"range: \" << L << \" to \" << R << endl;\n    for(int i = 0; i < 4; i++)\n    {\n        cout << \"f(\" << i << \")=\" << st[node][i] << \" \";\n    }\n    cout << endl;\n    \n    if(L == R)\n    {\n        return;\n    }\n    int M = (L+R)/2;\n    int a = node*2;\n    int b = a+1;\n    verbose(st, a, L, M);\n    verbose(st, b, M+1, R);\n}\n\nlong long int val_at(vector<poop>& st, int node, int idx, int L, int R)\n{\n    if(L == R)\n    {\n        return st[node][3];\n    }\n    int M = (L+R)/2;\n    int a = node*2;\n    int b = a+1;\n    if(idx <= M)\n    {\n        return val_at(st, a, idx, L, M);\n    }\n    else\n    {\n        return val_at(st, b, idx, M+1, R);\n    }\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<poop> st(4*n);\n        for(int i = 0; i < n; i++)\n        {\n            update(st, 1, i, nums[i], 0, n-1);\n        }\n        \n        long long int ans = 0;\n        const int mod = 1e9+7;\n        for(auto &q : queries)\n        {\n            int x = q[1];\n            int idx = q[0];\n            update(st, 1, idx, x, 0, n-1);\n            long long int test = dead;\n            for(int i = 0; i < 4; i++)\n            {\n                test = max(test, st[1][i]);\n            }\n            // test zone\n            /*\n            cout << \"array: \";\n            for(int i = 0; i< n; i++)\n            {\n                cout << val_at(st, 1, i, 0, n-1) << \" \";\n            }\n            cout << endl;\n            verbose(st, 1, 0, n-1);\n            */\n            // end test\n            ans += test;\n            ans %= mod;\n        }\n        \n        ans = (ans + mod) % mod;\n        return ans;\n    }\n};",
    "submit_ts": 1716693129.0
}