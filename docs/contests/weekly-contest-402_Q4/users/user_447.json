{
    "username": "Momos_",
    "submission": "\n#define ll long long\n#define ull unsigned long long\n#define  FOR(i,n) for(long long i = 0; i < (n); i++)\n#define  FOR1(i,n) for(long long i = 1; i <= (n); i++)\n#define  FOR2(i,n) for(long long i = 2; i <= (n); i++)\n#define pb push_back\n#define V vector<int>\n#define VV vector<V>\n#define VVV vector<VV>\n#define el cout<<endl;\n#define fi first\n#define se second\n#define noo cout<<\"NO\"<<endl;\n#define yess cout<<\"YES\"<<endl;\n#define take(a,n) FOR(i,n) cin>>a[i];\n#define print(v) for(auto it:v) cout<<it<<\" \"; el\n#define all(v) v.begin(),v.end()\n#define sort(v) sort(v.begin(),v.end())\n#define fast ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); \n#define w(T) \tll T; cin>>T; while(T--)\n#define input(a,n) int n; cin>>n; V a(n); take(a,n);\n#define pii pair<int,int>\n \nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll expo(ll a, ll b, ll m) {ll res = 1; while (b > 0) {if (b & 1) res = (res * a) % m; a = (a * a) % m; b = b >> 1;} return res%m ;}\nint nCr(int n , int r){\n\tif (n < r) return 0;\n\tif (r > n - r) r = n - r;\n\tll ans = 1; ll i;\n\tfor (i = 1; i <= r; i++){ans = (ans*(n - r + i));ans /= i;} return ans;\n}\nll modinv(ll a , ll m ) {return expo(a , m-2 , m)%m;} // m is prime \n \nclass Solution {\npublic:\nint operation(int a, int b){\n\treturn a + b;\n}\nvoid build(int node, int l, int r,vector<int>& a,vector<int> &tree){\n\tif(l == r){\n\t\ttree[node] = a[l]; return;\n\t}\n\tint mid = (l+r)/2;\n\tbuild(2*node,l, mid,a,tree);\n\tbuild(2*node+1,mid+1,r,a,tree);\n \n\ttree[node] = operation(tree[2*node] , tree[2*node+1]); \n}\n\nint query(int node, int start, int end, int l ,int r,vector<int>& a,vector<int> &tree){\n\n\tif(start>r || end<l) return 0;\n\tif(start>=l && end<=r) return tree[node];\n\t\n\tint mid = (start+end)/2;\n\tint left = query(2*node,start, mid, l,r,a,tree);\n\tint right = query(2*node+1,mid+1, end, l,r,a,tree);\n \n\treturn operation(left , right);\n}\n \nvoid update(int node, int start, int end,int idx, int val,vector<int>& a,vector<int> &tree){\n\tif(idx<start || idx>end) return;\n\n\tif(start==end){\n\t\ttree[node] = val;\n\t\treturn;\n\t}\n\n\tint mid = (start + end) >>1;\n\tupdate(2*node,start,mid,idx,val,a,tree);\n\tupdate(2*node+1,mid+1,end,idx,val,a,tree);\n\ttree[node] = operation(tree[2*node] , tree[2*node+1]);\n\n}\n\n\n    \n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n = a.size();\n        vector<int> tree(4*n+5);\n        vector<int> peak(n);\n        FOR(i,n){\n            if(i>0 && i<n-1  &&  a[i]>a[i-1] && a[i]>a[i+1]) peak[i]=1;\n        }\n        build(1,0,n-1,peak,tree);\n        \n        vector<int> ans;\n        for(auto it: q){\n            int type = it[0];\n            if(type == 1){\n                int l = it[1], r = it[2];\n                ans.pb(query(1,0,n-1,l+1,r-1,a,tree));\n            }\n            else{\n                int idx = it[1], val = it[2];\n                // update previous state\n                if(idx>0 && idx < n-1  && a[idx]>a[idx-1] && a[idx]>a[idx+1]){\n                    update(1,0,n-1,idx,0,a,tree);\n                }\n                if(idx-1>0 && idx-1 < n-1  && a[idx-1]>a[idx-2] && a[idx-1]>a[idx]){\n                    update(1,0,n-1,idx-1,0,a,tree);\n                }\n                if(idx+1>0 && idx+1 < n-1  && a[idx+1]>a[idx] && a[idx+1]>a[idx+2]){\n                    update(1,0,n-1,idx+1,0,a,tree);\n                }\n                a[idx]=val;\n                if(idx>0 && idx < n-1  && a[idx]>a[idx-1] && a[idx]>a[idx+1]){\n                    update(1,0,n-1,idx,1,a,tree);\n                }\n                if(idx-1>0 && idx-1 < n-1  && a[idx-1]>a[idx-2] && a[idx-1]>a[idx]){\n                    update(1,0,n-1,idx-1,1,a,tree);\n                }\n                if(idx+1>0 && idx+1 < n-1  && a[idx+1]>a[idx] && a[idx+1]>a[idx+2]){\n                    update(1,0,n-1,idx+1,1,a,tree);\n                }\n                \n            }\n           \n        }\n         return ans;\n    \n        \n    }\n};",
    "submit_ts": 1718507588.0
}