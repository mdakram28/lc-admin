{
    "username": "Chuan-Chih Chou",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in (1, 3, 9):\n            return '9' * n\n        if k == 2:\n            if n == 1:\n                return '8'\n            else:\n                return '8' + '9' * (n - 2) + '8'\n        if k == 4:\n            if n < 5:\n                return [None, '8', '88', '888', '8888'][n]\n            else:\n                return '88' + '9' * (n - 4) + '88'\n        if k == 5:\n            if n == 1:\n                return '5'\n            else:\n                return '5' + '9' * (n - 2) + '5'\n        if k == 6:\n            if n < 3:\n                return [None, '6', '66'][n]\n            odd = n % 2\n            if odd:\n                half = '9' * ((n - 3) // 2)\n                return '8' + half + '8' + half + '8'\n            else:\n                half = '9' * ((n - 4) // 2)\n                return '8' + half + '77' + half + '8'\n        if k == 8:\n            ans = [None]\n            ans.extend('8' * x for x in range(1, 7))\n            if n < len(ans):\n                return ans[n]\n            return '888' + '9' * (n - 6) + '888'\n        \n        ans = [None, '7', '77'] # , 959, 9779, 99799, 999999]\n        if n < len(ans):\n            return ans[n]\n        odd = n % 2\n        half = n // 2\n        all_9 = (pow(10, n, mod=7) - 1) % 7\n        if odd:\n            middle = pow(10, half, mod=7)\n            for i in range(10):\n                if not (all_9 - middle * i) % 7:\n                    return '9' * half + str(9 - i) + '9' * half\n        else:\n            middle = pow(10, half, mod=7) + pow(10, half - 1, mod=7)\n            for i in range(10):\n                if not (all_9 - middle * i) % 7:\n                    suffix = '9' * (half - 1)\n                    return suffix + str(9 - i) * 2 + suffix\n            \n        \n        \n            \n            \n            ",
    "submit_ts": "1723953168",
    "subm_id": "1359814171"
}