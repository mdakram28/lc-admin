{
    "username": "ritik_369",
    "submission": "auto func = [](int a , int b) -> int{\n   return (a & b) ; \n};\n\nstruct spt\n{\n    vector<vector<int>>dp;\n    int n,inv;\n    vector<int>prec_lg2;\n    spt(vector<int>&a) \n    { \n        n = a.size();\n        dp=vector<vector<int>>(2*n+1,vector<int>((int)log2(n)+2,0));\n        prec_lg2=vector<int>(2*n+2,0);\n        for(int i = 2; i < 2 * n; i++) prec_lg2[i] = prec_lg2[i >> 1] + 1;\n        for(int i = 0; i < n; i++) dp[i][0] = a[i];\n        for(int j = 1; (1 << j) <= n; j++)    \n            for(int i = 0; i < n; i++)\n            {\n                dp[i][j] = func(dp[i][j - 1], dp[i + (1 << (j - 1))][j - 1]);\n            }\n    }\n\n    int query(int l, int r) \n    {\n        int k = prec_lg2[r - l + 1];\n        return func(dp[l][k], dp[r - (1 << k) + 1][k]);\n    }\n};\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) \n    {\n      long long ans = 0 ; \n      spt sp(nums) ; \n      for(int i = 0 ; i < nums.size() ; i += 1)\n      {\n         int low = 0 , high = i , res = -1 ; \n         while(low <= high)\n         {\n            int mid = (low + high) / 2 ; \n            if(k < sp.query(mid , i))\n            {\n               high = mid-1 ; \n            }\n            else if(k == sp.query(mid , i))\n            {\n               res = mid ; \n               low = mid + 1 ; \n            }\n            else\n            {\n               low = mid + 1 ; \n            }\n         }\n         if(res == -1)continue ; \n         int r = res ; \n         low = 0 , high = i , res = -1 ; \n         while(low <= high)\n         {\n            int mid = (low + high) / 2 ; \n            if(k < sp.query(mid , i))\n            {\n               high = mid-1 ; \n            }\n            else if(k == sp.query(mid , i))\n            {\n               res = mid ; \n               high = mid-1 ;  \n            }\n            else\n            {\n               low = mid + 1 ; \n            }\n         }\n         ans = (ans + (1ll * (r - res + 1))) ; \n      }\n      return ans ; \n    }\n};\n",
    "submit_ts": "1720278302",
    "subm_id": "1311703268"
}