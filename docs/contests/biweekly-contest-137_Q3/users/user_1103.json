{
    "username": "no-hope",
    "submission": "class Solution {\n    final int IMIN = Integer.MIN_VALUE;\n    public long maximumValueSum(int[][] a) {\n        int n = a.length, m = a[0].length;\n        int pre[][] = new int[n][m];\n        int sufx[][] = new int[n][m];\n\n        for(int i=0;i<n;i++) for(int j=0;j<m;j++) pre[i][j] = Math.max(a[i][j], j==0 ? IMIN : pre[i][j-1]);\n        for(int i=0;i<n;i++) for(int j=m-1;j>=0;j--) sufx[i][j] = Math.max(a[i][j], j==m-1 ? IMIN : sufx[i][j+1]);\n        // System.out.println(Arrays.deepToString(pre));\n        // System.out.println(Arrays.deepToString(sufx));\n\n        int[] col1 = {0}, col2 = {2};\n        PriorityQueue<Integer> preq = new PriorityQueue<>((row1, row2) -> pre[row2][col1[0]] - pre[row1][col1[0]]);\n        PriorityQueue<Integer> sufxq = new PriorityQueue<>((row1, row2) -> sufx[row2][col2[0]] - sufx[row1][col2[0]]);\n        for(int i=0;i<n;i++) {\n            preq.offer(i);\n            sufxq.offer(i);\n        }\n        long res = Long.MIN_VALUE;\n        for(int j=1;j<m-1;j++) {\n            preq.offer(preq.poll());\n            sufxq.offer(sufxq.poll());\n            for(int i=0;i<n;i++) {\n                long cur = a[i][j];\n\n                preq.remove(i);\n                sufxq.remove(i);\n\n                cur += pre[preq.peek()][col1[0]];\n                sufxq.remove(preq.peek());\n                cur += sufx[sufxq.peek()][col2[0]];\n                sufxq.offer(preq.peek());\n\n                res = Math.max(res, cur);\n\n\n                cur = a[i][j];\n                // System.out.println(cur);\n                cur += sufx[sufxq.peek()][col2[0]];\n                // System.out.println(cur + \" \" + sufx[sufxq.peek()][col2[0]] + \" \" + sufxq);\n                preq.remove(sufxq.peek());\n                cur += pre[preq.peek()][col1[0]];\n                // System.out.println(cur + \" \" + pre[preq.peek()][col1[0]] + \" \" + preq);\n                preq.offer(sufxq.peek());\n\n                res = Math.max(res, cur);\n\n                preq.offer(i);\n                sufxq.offer(i);\n\n            }\n            col1[0]++;\n            col2[0]++;\n            // preq.clear();\n            // sufxq.clear();\n            // for(int i=0;i<n && col2[0] < m;i++) {\n            //     preq.offer(i);\n            //     sufxq.offer(i);\n            // }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723909453",
    "subm_id": "1359193151"
}