{
    "username": "Arif2321",
    "submission": "class Solution {\npublic:\n    pair<vector<int>, vector<int>> findPairMaxManhattanDistance(const vector<vector<int>>& points) {\n        int maxXplusY = INT_MIN, minXplusY = INT_MAX;\n        int maxXminusY = INT_MIN, minXminusY = INT_MAX;\n        vector<int> maxPlusPair(2), minPlusPair(2), maxMinusPair(2), minMinusPair(2);\n\n        // Iterate through all points to find the extremes for x+y and x-y\n        for (const auto& point : points) {\n            int xPlusY = point[0] + point[1];\n            int xMinusY = point[0] - point[1];\n\n            // Update max and min for x+y\n            if (xPlusY > maxXplusY) {\n                maxXplusY = xPlusY;\n                maxPlusPair = point;\n            }\n            if (xPlusY < minXplusY) {\n                minXplusY = xPlusY;\n                minPlusPair = point;\n            }\n\n            // Update max and min for x-y\n            if (xMinusY > maxXminusY) {\n                maxXminusY = xMinusY;\n                maxMinusPair = point;\n            }\n            if (xMinusY < minXminusY) {\n                minXminusY = xMinusY;\n                minMinusPair = point;\n            }\n        }\n        if ((maxXplusY - minXplusY) > (maxXminusY - minXminusY)) {\n            return {maxPlusPair, minPlusPair};\n        } else {\n            return {maxMinusPair, minMinusPair};\n        }\n    }\n\n    int maxManhattanDistance(const vector<vector<int>>& points) {\n        int maxXplusY = INT_MIN, minXplusY = INT_MAX;\n        int maxXminusY = INT_MIN, minXminusY = INT_MAX;\n\n        for (const auto& point : points) {\n            int xPlusY = point[0] + point[1];\n            int xMinusY = point[0] - point[1];\n\n            maxXplusY = max(maxXplusY, xPlusY);\n            minXplusY = min(minXplusY, xPlusY);\n            maxXminusY = max(maxXminusY, xMinusY);\n            minXminusY = min(minXminusY, xMinusY);\n        }\n\n        return max(maxXplusY - minXplusY, maxXminusY - minXminusY);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        pair<vector<int>, vector<int>> p = findPairMaxManhattanDistance(points);\n        int ans = INT_MAX;\n        vector<int> v = p.first;\n        vector<vector<int>> temp;\n        bool f = 0;\n        for(auto it : points)\n        {\n            if(it == v && !f)\n            {\n                f = 1;\n                continue;\n            }\n            temp.push_back(it);\n        }\n        ans = min(ans,maxManhattanDistance(temp));\n        temp.clear();\n        f = 0;\n        v = p.second;\n        for(auto it : points)\n        {\n            if(it == v && !f)\n            {\n                f = 1;\n                continue;\n            }\n            temp.push_back(it);\n        }\n        ans = min(ans,maxManhattanDistance(temp));\n        return ans;\n    }\n};"
}