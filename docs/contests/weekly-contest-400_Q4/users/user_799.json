{
    "username": "donpaul299",
    "submission": "#define ll long long\n\nll cal(vector<int> &fr)\n{\n    ll ans = 0;\n\n    for(int i=0; i<32; ++i)\n    {\n        if(fr[i] == 0)\n        {\n            ans+=pow(2, i);\n        }\n    }\n    \n\n    return ans;\n}\n\n\nvoid add(vector<int> &fr, int val)\n{\n    \n    for(int i=0; i<32; ++i)\n    {\n        if( !((val>>i) & 1) )\n        {\n            fr[i]++;\n        } \n    }   \n}\n\n\nvoid sub(vector<int> &fr, int val)\n{\n    for(int i=0; i<32; ++i)\n    {\n        if( !((val>>i) & 1) )\n        {\n            fr[i]--;\n        } \n    }   \n}\n\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n            \n        int n = nums.size();\n        \n        int high = *max_element(nums.begin(), nums.end());\n        int low = nums[0];\n        \n        for(int i=1; i<n; ++i)  \n            low = low & nums[i];\n        \n        if(nums.size() == 1)\n            return abs(k - nums[0]);\n        \n        \n        if(k >= high)\n        {\n            return k - high;\n        }\n        \n        \n        vector<int> fr(32, 0);\n        \n        \n        int p1 = 0;\n        int p2 = 1;\n        \n        ll curr = nums[0]; \n        add(fr, nums[0]);\n        \n        ll ans = 1e9+1;\n        \n        while(p2<n)\n        {\n            \n            ans = min(ans, abs(curr-k));\n            \n            \n            while(curr > k && p2 < n)\n            {\n                add(fr, nums[p2]);\n                curr = cal(fr);\n                ans = min(ans, abs(curr-k));\n                ++p2;\n            }\n        \n            \n            while(curr < k && p1 < p2)\n            {\n                sub(fr, nums[p1]);\n                \n                curr = cal(fr);\n                ans = min(ans, abs(curr-k));\n                ++p1;\n            }\n                \n            if(curr == k)\n                return 0;\n\n         \n            ans = min(ans, abs(curr-k));        \n        }\n        \n        if(curr == k)\n                return 0;\n        \n        \n        while(curr > k && p1 < n)\n        {\n            sub(fr, nums[p1]);\n            curr = cal(fr);\n            ans = min(ans, abs(curr-k));\n            ++p1; \n            \n            if(curr == k)\n                return 0;\n        }\n\n        \n        return ans;   \n        \n    }\n};",
    "submit_ts": 1717299980.0
}