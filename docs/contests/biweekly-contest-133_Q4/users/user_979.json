{
    "username": "Dummy_Mishra",
    "submission": "class Solution {\npublic:\n    int mod=1e9+7;\n    void mapp(unordered_map<int, int> &mp,int n, vector<vector<int>>& requirements){\n         for (auto it : requirements) {\n            mp[it[0]+1] = it[1];\n        }\n    }\n    \n    void solve(int n, vector<vector<int>>& requirements, vector<vector<long long>> &perm,unordered_map<int, int> &mp){\n        perm[0][0] = 1;\n       for (int i=1;i<n+1; i++) {\n            for (int count=0; count <401; count++) {\n                for (int pos = 0; pos <= i-1; pos++) {\n                    if ((count-pos)>= 0) {\n                        perm[i][count] = (perm[i][count] + perm[i - 1][(count-pos)]) % mod;\n                    }\n                }\n            }\n            if(mp.find(i)!=mp.end()) {\n                int res=mp[i];\n                for(int count = 0; count <401; count++) {\n                    if(count != res) {\n                        perm[i][count] = 0;\n                    }\n                }\n            }\n        }\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        vector<vector<long long>> perm(n + 1, vector<long long>(401,0));\n        mapp(mp,n,requirements);\n        solve(n,requirements,perm,mp);\n        long long ans = 0;\n        for (long long cnt : perm[n]) {\n            long long temp=(ans+cnt)%mod;\n            ans=temp;\n        }\n        \n        return (int)(ans);\n    }\n};",
    "submit_ts": 1719071724.0
}