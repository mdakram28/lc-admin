{
    "username": "2210030150",
    "submission": "import java.util.*;\n\nclass Solution {\n    private static final long MOD = 1_000_000_007;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][][] dp = new long[n][51][51];\n        \n        for (long[][] matrix : dp) {\n            for (long[] row : matrix) {\n                Arrays.fill(row, -1);\n            }\n        }\n        \n        return (int) DfS(0, 0, nums[0], nums, dp);\n    }\n\n    private long DfS(int idx, int a, int b, int[] nums, long[][][] dp) {\n        if (idx >= nums.length) return 1;\n        if (dp[idx][a][b] != -1) return dp[idx][a][b];\n\n        long count = 0;\n\n        for (int i = a; i <= nums[idx]; i++) {\n            for (int j = b; j >= 0; j--) {\n                if (i + j == nums[idx]) {\n                    count = (count + DfS(idx + 1, i, j, nums, dp)) % MOD;\n                }\n            }\n        }\n\n        return dp[idx][a][b] = count;\n    }\n}",
    "submit_ts": "1723346268",
    "subm_id": "1351573838"
}