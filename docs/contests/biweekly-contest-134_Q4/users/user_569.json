{
    "username": "harshdew02",
    "submission": "class Solution {\npublic:\n    \n    \n    #define ff first\n    #define ss second\n    \n    using ll = long long;\n    \n    \n    \n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        ll ans = 0;\n        \n        map<ll , ll> mpp;\n        \n        int n = nums.size();\n        \n        int i = 0;\n        \n        auto fn = [&](){\n            \n            while(i<n){\n                \n            map<ll,ll> mpc;\n            \n            if(nums[i] == k)\n                ans++;\n            \n            mpc[nums[i]] = 1;\n            \n            for(auto x:mpp){\n                ll nd = x.ff&nums[i];\n                \n                if(nd == k){\n                    ans+=x.ss;\n                }\n                mpc[nd] += x.ss;\n            }\n            \n            mpp = mpc;\n            \n            i++;\n        }\n            \n        };\n        \n        \n        fn();\n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720280121",
    "subm_id": "1311777717"
}