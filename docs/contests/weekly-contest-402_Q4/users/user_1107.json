{
    "username": "xie-bin-o",
    "submission": "class Solution {\n    void update(int[] t, int idx, int val){\n        for(int i = idx; i < t.length; i += (i&-i)){\n            t[i] += val;\n        }\n    }\n    int query(int[] t, int idx){\n        int ret = 0;\n        for(int i = idx; i > 0; i -= (i&-i)){\n            ret += t[i];\n        }\n        return ret;\n    }\n    \n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int len = nums.length;\n        int[] t = new int[len+10];\n        int[] c = new int[len];\n        for(int i = 1; i < len-1; i++){\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]){\n                update(t, i+1, 1);\n                c[i] = 1;\n            }\n        }\n        List<Integer> list = new ArrayList<>();\n        for(int[] q: queries){\n            if(q[0] == 1){\n                list.add(Math.max(0, query(t, q[2]) - query(t, q[1]+1)));\n            }else{\n                int idx = q[1];\n                int val = q[2];\n                if(idx >= 2){\n                    if(c[idx-1] == 0 && nums[idx-1] > nums[idx-2] && nums[idx-1] > val){\n                        update(t, idx, 1);\n                        c[idx-1] = 1;\n                    }else if(c[idx-1] == 1 && (nums[idx-1] <= nums[idx-2] || nums[idx-1] <= val)){\n                        update(t, idx, -1);\n                        c[idx-1] = 0;\n                    }\n                }\n                if(idx > 0 && idx < len-1){\n                    if(c[idx] == 0 && val > nums[idx-1] && val > nums[idx+1]){\n                        update(t, idx+1, 1);\n                        c[idx] = 1;\n                    }else if(c[idx] == 1 && (val <= nums[idx-1] || val <= nums[idx+1])){\n                        update(t, idx+1, -1);\n                        c[idx] = 0;\n                    }\n                }\n                if(idx + 2 < len){\n                    if(c[idx+1] == 0 && nums[idx+1] > val && nums[idx+1] > nums[idx+2]){\n                        update(t, idx+2, 1);\n                        c[idx+1] = 1;\n                    }else if(c[idx+1] == 1 && (nums[idx+1] <= nums[idx+2] || nums[idx+1] <= val)){\n                        update(t, idx+2, -1);\n                        c[idx+1] = 0;\n                    }\n                }\n                nums[idx] = val;\n            }\n            // System.out.println(Arrays.toString(c));\n            \n        }\n        return list;\n    }\n}",
    "submit_ts": 1718508054.0
}