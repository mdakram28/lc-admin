{
    "username": "vamsika_s",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& numbers, int k) {\n        map<int, vector<int>> differenceMap;\n        vector<int> maxValues;\n        \n        for (int i = 0; i < numbers.size() / 2; i++) {\n            int valueA = numbers[i];\n            int valueB = numbers[numbers.size() - i - 1];\n            int difference = abs(valueA - valueB);\n            int maxValue = max({valueA, valueB, k - valueA, k - valueB});\n            differenceMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minimumChanges = numbers.size();\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (auto &pair : differenceMap) {\n            int difference = pair.first;\n            int threshold = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            threshold = threshold * 2 + (numbers.size() / 2 - threshold);\n\n            for (auto &maxValue : pair.second) {\n                if (maxValue < difference) {\n                    threshold -= 2;\n                } else {\n                    threshold -= 1;\n                }\n            }\n\n            minimumChanges = min(minimumChanges, threshold);\n        }\n\n        return minimumChanges;\n    }\n};",
    "submit_ts": "1721490517",
    "subm_id": "1327484891"
}