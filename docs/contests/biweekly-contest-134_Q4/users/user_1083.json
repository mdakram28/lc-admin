{
    "username": "a7174812",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<int> nonkbits(32, INT_MIN);\n        \n        int t = 32 - __builtin_popcount(k);\n        \n        \n        int n = nums.size();\n\n        long long ans = 0;\n        \n        for(int r = 0, l = 0; r < nums.size(); ++r){\n            \n            \n            if((nums[r] & k) != k){\n                l = r + 1;\n                nonkbits = vector<int>(32, INT_MIN);\n                continue;\n            }\n            \n            for(int i = 0; i < 32; ++i){\n                if(!((1 << i) & k) && !((1 << i) & nums[r]))\n                    nonkbits[i] = max(nonkbits[i], r);\n            }\n            \n            int cnt = 0;\n            int mn = INT_MAX;\n            \n            for(int i = 0; i < 32; ++i){\n                if(nonkbits[i] != INT_MIN){\n                    ++cnt;\n                    mn = min(mn, nonkbits[i]);\n                }\n            }\n            \n            if(cnt == t){\n                ans += (mn - l + 1);\n                // printf(\"%d %d %d\\n\", l, r, mn);\n            }\n                \n        }\n        \n        \n        \n        return ans;\n    }\n};",
    "submit_ts": "1720281036",
    "subm_id": "1311810899"
}