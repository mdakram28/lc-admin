{
    "username": "exciting-aryabhatalkl",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def check(i):\n            if i<=0 or i>=n-1:\n                return False\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                return True\n            return False\n        n=len(nums)\n        ans=[]\n        l=[]\n        for i in range(1,n-1):\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                l.append(i)\n        cnt=SortedList(l)\n        for t,i,j in queries:\n            if t==1:\n                id1=bisect_left(cnt,j)\n                id2=bisect_right(cnt,i)\n                ans.append(max(id1-id2,0))\n            else:\n                for p in [i-1,i,i+1]:\n                    if 0<=p<=n-1:\n                        if check(p):\n                            cnt.remove(p)\n                nums[i]=j\n                for p in [i-1,i,i+1]:\n                    if 0<=p<=n-1:\n                        if check(p):\n                            cnt.add(p)\n        return ans\n",
    "submit_ts": 1718508046.0
}