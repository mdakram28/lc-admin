{
    "username": "WeiyanZhu",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        res = math.inf\n        left = right = 0\n        currentNum = 0\n        counter = [0] * 32\n        def addToCounter(num, counter):\n            for i in range(32):\n                if num & (1 << i) > 0:\n                    counter[i] += 1\n        \n        def removeFromCounter(num, counter):\n            for i in range(32):\n                if num & (1 << i) > 0:\n                    counter[i] -= 1\n            \n        def counterToNum(counter, totalNum):\n            res = 0\n            digit = 0\n            for n in counter:\n                if n == totalNum:\n                    res += 1 << digit\n                digit += 1\n            return res\n        currentNum = counterToNum(counter, 0)\n        while left < len(nums) and right <= len(nums):\n            #print(left, right, currentNum, counter)\n            if currentNum < k:\n                removeFromCounter(nums[left], counter)\n                left += 1\n                currentNum = counterToNum(counter, right - left)\n                res = min(res, abs(k - currentNum))\n            elif currentNum == k:\n                return 0\n            else:\n                if(right >= len(nums)):\n                    break\n                addToCounter(nums[right], counter)\n                right += 1\n                currentNum = counterToNum(counter, right - left)\n                res = min(res, abs(k - currentNum))\n        return res\n            \n        ",
    "submit_ts": "1717299901",
    "subm_id": "1274827521"
}