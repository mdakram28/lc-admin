{
    "username": "ou-hai-ziJHu23dNZ",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        // 1\u88ab4\u6574\u9664\n        int r = grid.length;\n        int c = grid[0].length;\n        int ans = 0;\n        if (r == 1 && c == 1) {\n            return grid[0][0] == 1 ? 1 : 0;\n        }\n        if (grid.length == 1) {\n            if (grid[0].length % 2 == 1 && grid[0][grid[0].length / 2] == 1) {\n                ans++;\n            }\n            return get(grid[0])[0] + ans;\n        } else if (grid.length % 2 == 1 && grid[0].length == 1) {\n            int[] gg = new int[r];\n            for (int i = 0; i < r; i++) {\n                gg[i] = grid[i][0];\n            }\n            if (gg[gg.length / 2] == 1) {\n                ans++;\n            }\n            return get(gg)[0] + ans;\n        }\n        // 1/4\u7684\u4f4d\u7f6e\u76f4\u63a5\u8ba1\u7b97\n        for (int i = 0; i < grid.length / 2; i++) {\n            for (int j = 0; j < grid[0].length / 2; j++) {\n                // [i,j]\n                int count = 0;\n                if (grid[i][j] == 1) {\n                    count++;\n                }\n                if (grid[i][grid[0].length - 1 - j] == 1) {\n                    count++;\n                }\n                if (grid[grid.length - 1 - i][j] == 1) {\n                    count++;\n                }\n                if (grid[grid.length - 1 - i][grid[0].length - 1 - j] == 1) {\n                    count++;\n                }\n                ans += Math.min(count, 4 - count);\n            }\n        }\n        if (r % 2 == 1 && c % 2 == 1) {\n            if (grid[r / 2][c / 2] == 1) {\n                ans++;\n            }\n        }\n        if (r % 2 == 1 && c % 2 == 1) {\n            int[] gr = grid[r / 2];\n            // \u8ba1\u7b97g\n            int[] rr = get(gr);\n            int[] gc = new int[r];\n            for (int i = 0; i < r; i++) {\n                gc[i] = grid[i][c / 2];\n            }\n            int[] cc = get(gc);\n            ans += Math.min(rr[0] + cc[0], rr[1] + cc[1]);\n            return ans;\n        }\n        if (c % 2 == 1) {\n            int[] g = new int[r];\n            for (int i = 0; i < r; i++) {\n                g[i] = grid[i][c / 2];\n            }\n            // \u8ba1\u7b97g\n            ans += get(g)[0];\n        } else if (r % 2 == 1) {\n            int[] g = grid[r / 2];\n            // \u8ba1\u7b97g\n            ans += get(g)[0];\n        }\n        return ans;\n    }\n\n    private int[] get(int[] t) {\n        // \u8ba1\u7b97mod0\u7684 \u548cmod2\u7684\u7b54\u6848\n        int count = 0;\n        int count1 = 0;\n        for (int i = 0; i < t.length; i++) {\n            if (t.length % 2 == 1 && i == t.length / 2) {\n                continue;\n            }\n            if (t[i] == 1) {\n                count1++;\n            }\n        }\n        for (int i = 0; i < t.length/2; i++) {\n            if (t[i] != t[t.length - 1 - i]) {\n                count++;\n            }\n        }\n        if (count > 0) {\n            return new int[] {count, count};\n        } else {\n            boolean zero = count1 % 4 == 0;\n            if (zero) {\n                return new int[] {0, 2};\n            } else {\n                return new int[] {2, 0};\n            }\n        }\n    }\n}",
    "submit_ts": "1722697022",
    "subm_id": "552264057"
}