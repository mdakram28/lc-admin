{
    "username": "Windlike man",
    "submission": "struct XX\n{\n    int  val;\n    int  x, y;\n    bool nonCross(const XX &r)\n    {\n        return x != r.x && y != r.y;\n    }\n};\nbool operator<(const XX &l, const XX &r)\n{\n    return l.val > r.val || l.val == r.val && (l.x < r.x || l.x == r.x && l.y < r.y);\n}\nusing T = int64_t;\nclass Solution\n{\npublic:\n    vector<XX> records;\n    int        M, N;\n    long long  maximumValueSum(vector<vector<int>> &board)\n    {\n        M = board.size();\n        N = board[0].size();\n        records.clear();\n        records.reserve(M * N);\n        for (int i = 0; i < M; ++i)\n            for (int j = 0; j < N; ++j)\n                records.push_back({board[i][j], i, j});\n        sort(records.begin(), records.end());\n\n        int maxL = 0;\n        T   max0 = INT_MIN * T(3);\n        for (int idxL = 0; idxL < (M + N - 1); ++idxL)\n        {\n            auto c = R0(idxL);\n            if (c > max0)\n            {\n                maxL = idxL;\n                max0 = c;\n            }\n        }\n        return max0;\n    }\n\n    T R0(int idxL)\n    {\n        auto l = records[idxL];\n        int  endIdx = idxL + 1 + M + N;\n        endIdx = min(endIdx, M * N);\n\n        T mmax = INT_MIN * T(2);\n        for (int im = idxL + 1; im < endIdx; ++im)\n        {\n            auto m = records[im];\n            if (l.nonCross(m))\n            {\n                auto max3 = R1(im, l.x, l.y, m.x, m.y);\n                auto cmax = m.val + max3;\n                mmax = max(mmax, cmax);\n            }\n        }\n        return mmax + l.val;\n    }\n\n    T R1(int idx, int x1, int y1, int x2, int y2)\n    {\n        int endIdx = idx + 2 * (M + N + 1);\n        endIdx = min(endIdx, M * N);\n\n        for (int i = idx + 1; i < endIdx; ++i)\n        {\n            int x = records[i].x, y = records[i].y;\n            if (x != x1 && x != x2 && y != y1 && y != y2)\n                return records[i].val;\n        }\n        return INT_MIN;\n    }\n};",
    "submit_ts": "1723910346",
    "subm_id": "556340865"
}