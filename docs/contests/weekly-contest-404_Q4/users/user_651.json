{
    "username": "koushik15",
    "submission": "class Solution {\npublic:\n    int findDiameter(vector<vector<int>> &adj)\n    {\n        queue<pair<int,int>> q;\n        q.push({0,-1});\n        int last = -1;\n        while(q.size()){\n            auto top = q.front();\n            q.pop();\n            last = top.first;\n            for(auto x:adj[top.first])\n            {\n                if(x != top.second){\n                    q.push({x,top.first});\n                }\n            }\n        }\n \n        int sze = 0;\n        q.push({last,-1});\n        while(q.size()){\n            int n = q.size();\n            for(int i=0;i<n;i++)\n            {\n                auto top = q.front();\n                q.pop();\n                last = top.first;\n                for(auto x:adj[top.first])\n                {\n                    if(x != top.second){\n                        q.push({x,top.first});\n                    }\n                }\n            }\n            sze++;\n        }\n\n\n        return sze-1;\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n = e1.size();\n        int m  = e2.size();\n        vector<vector<int>> adj1(n+1);\n        for(auto x:e1)\n        {\n            adj1[x[0]].push_back(x[1]);\n            adj1[x[1]].push_back(x[0]);\n        }\n        vector<vector<int>> adj2(m+1);\n        for(auto x:e2)\n        {\n            adj2[x[0]].push_back(x[1]);\n            adj2[x[1]].push_back(x[0]);\n        }\n        \n        int d1 = findDiameter(adj1);\n        int d2 = findDiameter(adj2);\n        cout<<d1<<\" \"<<d2<<\" \"<<endl;\n        return max({d1,d2,(d1+1)/2 + (d2+1)/2 + 1});\n    }\n};",
    "submit_ts": 1719719721.0
}