{
    "username": "Vegetablebirds",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int row = 1;\n        int col = 1;\n        List<int[]> cs = new ArrayList<>();\n        for (int i = 0; i <  horizontalCut.length; i++) {\n            cs.add(new int[] {i + 1, horizontalCut[i], 1});\n        }\n        for (int i = 0; i < verticalCut.length; i++) {\n            cs.add(new int[] {i + 1, verticalCut[i], 0});\n        }\n        cs.sort(Comparator.comparingInt(c -> -c[1]));\n        long ans = 0;\n        for (int[] c : cs) {\n            if (c[2] == 1) {\n                ans += (long)c[1] * col;\n                row++;\n            } else {\n                ans += (long) c[1] * row;\n                col++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925811",
    "subm_id": "1320266938"
}