{
    "username": "ahimawan",
    "submission": "typedef long long LL;\nint p[1005];\n\nclass Solution {\npublic:\n    int find(int x) {\n        if (p[p[x]] != p[x]) {\n            p[x] = find(p[x]);\n        }\n        return p[x];\n    }\n    void join(int x, int y) {\n        if (find(x) != find(y)) {\n            p[find(x)] = find(y);\n        }\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cir) {\n        int n = cir.size();\n        for (int i = 0; i < n+2; i++) p[i] = i;\n        for (int i = 0; i < n; i++) {\n            int x = cir[i][0];\n            int y = cir[i][1];\n            int r = cir[i][2];\n            if (x - r <= 0 || y + r >= Y) {\n               // printf(\"join %d %d\\n\", i, n);\n                join(i, n);\n            }\n            if (x + r >= X || y - r <= 0) {\n                //printf(\"join %d %d\\n\", i, n+1);\n                join(i, n+1);\n            }\n            for (int j = i+1; j < n; j++) {\n                int x2 = cir[j][0];\n                int y2 = cir[j][1];\n                int r2 = cir[j][2];\n                LL dx = x2 - x;\n                LL dy = y2 - y;\n                LL R = r + r2;\n                if (R * R >= dx * dx + dy * dy) {\n                   // printf(\"join %d %d\\n\", i, j);\n                    join(i, j);\n                }\n            }\n        }\n       // cout << \"done\\n\";\n        if (find(n) == find(n+1)) return false;\n        return true;\n    }\n};",
    "submit_ts": "1722137092",
    "subm_id": "1335753917"
}