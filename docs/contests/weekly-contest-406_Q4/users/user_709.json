{
    "username": "shivamch1704",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n\n        int hs = horizontalCut.size();\n        int vs = verticalCut.size();\n        long long hp = 1, vp = 1, ans = 0, i = 0, j = 0;\n\n        while (i < hs  || j < vs) {\n            if (i < hs && (j == vs || horizontalCut[i] >= verticalCut[j])) {\n                ans += (horizontalCut[i] * vp);\n                hp++;\n                i++;\n            } else {\n                ans += (verticalCut[j] * hp);\n                vp++;\n                j++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925775",
    "subm_id": "1320265813"
}