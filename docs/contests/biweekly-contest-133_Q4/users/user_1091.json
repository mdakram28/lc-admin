{
    "username": "aryansingh3418",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& ituirements) {\n        vector<vector<long>> anuj(n + 1, vector<long>(400 + 1, 0));\n        anuj[0][0] = 1;\n        unordered_map<int, int> aryan;\n        for (auto it : ituirements) {\n            aryan[1+it[0]] = it[1]; //map me value dali\n        }\n        int i=1;\n        while(i<= n) {  //loop no 1 chalaya\n            int k=0;\n            while(k<=400) {//loop no 2 chalaya\n                if (anuj[i - 1][k] != 0) {\n                    int nu=0;\n                    while(nu<i){\n                        int nuk=k + nu;\n                        if (nuk > 400) { //checkkiya >400 se\n                            break;\n                        } else {\n                            anuj[i][nuk] =(anuj[i - 1][k]+anuj[i][nuk]) % 1000000007; //mod kiya and then 2d dp me value dali\n                        }\n                        nu++;\n                    }\n                }\n                k++;\n            }\n            if (aryan.find(i)!= aryan.end()) { //end find ki\n                k=0;\n                int targetk = aryan[i];\n                while(k<=400) {  //check karwaya ki less than 400 hai ki nhi\n                    if (k != targetk) {\n                        anuj[i][k] = 0;\n                    }\n                    k++;\n                }\n            }\n            i++;\n        }\n        long result = 0;\n        for (long count : anuj[n]) {\n            result = (result + count) % 1000000007; //count se mod karwyaa\n        }\n        return result;\n    }\n};",
    "submit_ts": 1719071985.0
}