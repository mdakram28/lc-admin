{
    "username": "nameless",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return \"9\" * n\n        if k == 2:\n            if n <= 2:\n                return n * '8'\n            else:\n                return '8' + '9' * (n - 2) + '8'\n        if k == 4:\n            if n <= 4:\n                return '8' * n\n            else:\n                return '88' + '9' * (n - 4) + \"88\"\n        if k == 5:\n            if n <= 2:\n                return '5' * n\n            else:\n                return '5' + '9' * (n - 2) + '5'\n        if k == 8:\n            if n <= 6:\n                return '8' * n\n            else:\n                return \"888\" + '9' * (n - 6) + \"888\"\n        if k == 6:\n            if n <= 2:\n                return '6' * n\n            if n == 3:\n                return \"888\"\n            if n == 4:\n                return \"8778\"\n            if n % 2 == 1:\n                return '8' + '9' * (n // 2 - 1) + '8' + '9' * (n // 2 - 1) + '8'\n            else:\n                return '8' + '9' * (n // 2 - 2) + '77' + '9' * (n // 2 - 2) + '8'\n        if k == 7:\n            a = [7, 77, 5, 77, 7, 99, 4, 44, 6, 44, 4, 99]\n            a = [str(x) for x in a]\n            i = (n - 1) % 12\n            return '9' * ((n - len(a[i])) // 2) + a[i] + '9' * ((n - len(a[i])) // 2)",
    "submit_ts": "1723952642",
    "subm_id": "556412805"
}