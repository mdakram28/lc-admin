{
    "username": "runtime_tterror",
    "submission": "class Solution {\npublic:\n    \n    int fun(vector<vector<int>>& points,vector<pair<int,int>>&v1,vector<pair<int,int>>&v2,vector<pair<int,int>>&v3,vector<pair<int,int>>&v4,int rem){\n        \n        int dist = -1;\n        int n = points.size();\n       for(int i=0;i<n;i++){\n           \n           if(i==rem)continue;\n           \n            int a = points[i][0] + points[i][1];\n            int b = points[i][0] - points[i][1];\n            int c = -points[i][0] - points[i][1];\n            int d = -points[i][0] + points[i][1];\n           \n           int a1 ,b1,c1,d1;\n           if(v3[n-1].second!=i && v3[n-1].second!=rem){\n               a1 = v3[n-1].first;\n           }\n           else if(v3[n-2].second!=rem){\n               a1 = v3[n-2].first;\n           }\n           else {\n               a1 = v3[n-3].first;\n           }\n           \n           if(v4[n-1].second!=i && v4[n-1].second!=rem){\n               b1 = v4[n-1].first;\n           }\n           else if(v4[n-2].second!=rem){\n               b1 = v4[n-2].first;\n           }\n           else {\n               b1 = v4[n-3].first;\n           }\n           \n           if(v1[n-1].second!=i && v1[n-1].second!=rem){\n               c1 = v1[n-1].first;\n           }\n           else if(v1[n-2].second!=rem){\n               c1 = v1[n-2].first;\n           }\n           else {\n               c1 = v1[n-3].first;\n           }\n           \n           if(v2[n-1].second!=i && v2[n-1].second!=rem){\n               d1 = v2[n-1].first;\n           }\n           else if(v2[n-2].second!=rem){\n               d1 = v2[n-2].first;\n           }\n           else {\n               d1 = v2[n-3].first;\n           }\n           \n           int mac = max(max((a+a1),(b+b1)) , max((c+c1),(d+d1)) );\n           dist = max(dist,mac);\n       }\n        return dist;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        vector<pair<int,int>>v1,v2,v3,v4;\n        int n = points.size();\n        \n        for(int i=0;i<n;i++){\n            int a = points[i][0] + points[i][1];\n            int b = points[i][0] - points[i][1];\n            int c = -points[i][0] - points[i][1];\n            int d = -points[i][0] + points[i][1];\n            \n            v1.push_back({a,i});\n            v2.push_back({b,i});\n            v3.push_back({c,i});\n            v4.push_back({d,i});\n        }\n        \n        sort(v1.begin(),v1.end());\n        sort(v2.begin(),v2.end());\n        sort(v3.begin(),v3.end());\n        sort(v4.begin(),v4.end());\n        \n        // vector<vector<int>>ans(n);\n        \n        int d1 = fun(points,v1,v2,v3,v4,v1[n-1].second);\n        int d2 = fun(points,v1,v2,v3,v4,v2[n-1].second);\n        int d3 = fun(points,v1,v2,v3,v4,v3[n-1].second);\n        int d4 = fun(points,v1,v2,v3,v4,v4[n-1].second);\n        \n        return min(min(d1,d2), min(d3,d4));\n        \n    }\n};"
}