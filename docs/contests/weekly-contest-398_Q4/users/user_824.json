{
    "username": "user2000717",
    "submission": "from functools import lru_cache\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        @lru_cache(None)\n        def countWays(current_stair: int, jump: int, can_down: bool) -> int:\n            if current_stair < 0 or current_stair > k + 1:\n                return 0\n\n            total_ways = 0\n\n            if current_stair == k:\n                total_ways += 1\n\n            if current_stair > 0 and can_down:\n                total_ways += countWays(current_stair - 1, jump, False)\n\n            next_stair = current_stair + 2 ** jump\n            total_ways += countWays(next_stair, jump + 1, True)\n\n            return total_ways\n\n        return countWays(1, 0, True)",
    "submit_ts": 1716088460.0
}