{
    "username": "Sayan_244",
    "submission": "\n#define ll long long\n#define pb push_back\n#define endl \"\\n\"\n#define pii pair <int, int>\n#define siz(a) int((a).size())\n//using namespace std;\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector <int> dp(n, -1);\n        vector <int> tdp(n, -1);\n        \n        //memset(dp, -1, sizeof (dp));\n        \n        int ans = 1;\n\n        map <int, int> pref;\n        for(int i = 0; i < n; i++) {\n          pref[nums[i]] += 1;\n          dp[i] = pref[nums[i]];\n          ans = max(ans, dp[i]);\n        }\n\n        for(int nmatch = 1; nmatch <= k; nmatch++) {\n          map <int, int> tpref; // stores max dp[value] for nmatch transition till index j - 1\n          map <int, int> prev; // stores max dp[value] for nmatch - 1 transition till index j - 1\n          multiset <pii> vux; // stores max value for nmatch - 1 transition over all distinct values till index j - 1\n\n          for(int j = 0; j < n; j++) {\n            if (tpref.find(nums[j]) != tpref.end()) {\n              tdp[j] = tpref[nums[j]] + 1;  \n            }\n            //bool flag = false;\n            //if (prev.find(nums[j]) != prev.end()) {\n              //flag = true;\n              auto it = vux.find({prev[nums[j]],  nums[j]});\n                if (it != vux.end()) {\n                    vux.erase(it);\n                }\n            //}\n                              \n            if (siz(vux)) {\n              pii temp = *vux.rbegin();\n              tdp[j] = max(temp.first + 1, tdp[j]);\n            }\n\n            //if (tdp[j] >= 0) {\n              tpref[nums[j]] = max(tpref[nums[j]], tdp[j]);\n            //}\n\n            //if (dp[j] >= 0) {\n              prev[nums[j]] = max(prev[nums[j]], dp[j]);\n            //}\n            \n            // auto it2 = vux.find({prev[nums[j]], nums[j]});\n            // if (it2 != vux.end()) {\n            //   vux.erase(it);\n            // }\n\n            //if (prev.find(nums[j]) != prev.end()) {\n            vux.insert({prev[nums[j]], nums[j]});\n            //}\n            ans = max(ans, tdp[j]);\n          }\n        \n          dp = tdp;\n          fill(tdp.begin(), tdp.end(), -1);        \n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": 1717862319.0
}