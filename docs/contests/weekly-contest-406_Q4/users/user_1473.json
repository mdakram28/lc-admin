{
    "username": "Anurag_002",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long int horizontalParts = 1, verticalParts = 1;\n        long long int totalCost = 0;\n\n        long long int i = 0, j = 0;\n\n        while (i < m-1 && j < n-1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * verticalParts;\n                horizontalParts++;\n                i++;\n            } else {\n                totalCost += verticalCut[j] * horizontalParts;\n                verticalParts++;\n                j++;\n            }\n        }\n\n        while (i < m-1) {\n            totalCost += horizontalCut[i] * verticalParts;\n            i++;\n        }\n\n        while (j < n-1) {\n            totalCost += verticalCut[j] * horizontalParts;\n            j++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925980",
    "subm_id": "1320272256"
}