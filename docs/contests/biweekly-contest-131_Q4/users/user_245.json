{
    "username": "ilpyq_wasd003",
    "submission": "class Solution {\npublic:\n    map<int, int> S;\n    int MX = 0;\n    constexpr static int N = 2e5 + 10;\n    int tr[N << 2];\n    int getmid(int l, int r) {\n        if (l >= r) {\n            assert(0);\n        }\n        return l + (r - l) / 2;\n    }\n    void pushup(int root, int l, int r) {\n        tr[root] = max(tr[root * 2], tr[root * 2 + 1]);\n    }\n    void set(int root, int l, int r, int x, int val) {\n         if (l >= r) {\n            tr[root] = val;\n            return;\n        }\n        const int mid = getmid(l, r);\n        if (x <= mid) set(root * 2, l, mid, x, val);\n        else set(root * 2 + 1, mid + 1, r, x, val);\n        pushup(root, l, r);\n    }\n    int query(int root, int l, int r, int x, int y) {\n        if (x <= l && y >= r) return tr[root];\n        int ans = 0, mid = getmid(l, r);\n        if (x <= mid) ans = max(ans, query(root * 2, l, mid, x, y));\n        if (y > mid) ans = max(ans, query(root * 2 + 1, mid + 1, r, x, y));\n        return ans;\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        const int m = queries.size();\n        for (int i = 0; i < m; i ++ ) MX = max(MX, queries[i][1]);\n        MX ++ ;\n        S[MX] = 0;\n        set(1, 0, MX, MX, MX);\n        vector<bool> ans;\n        for (int i = 0; i < m; i ++ ) {\n            int op = queries[i][0];\n            if (op == 1) {\n                int x = queries[i][1];\n                \n                auto it = S.upper_bound(x);\n                assert(it != S.end());\n                const int right = it->first, left = it->second;\n                assert(right > x);\n                assert(left < x);\n                S.erase(it);\n                S[right] = x;\n                S[x] = left;\n                set(1, 0, MX, right, right - x);\n                set(1, 0, MX, x, x - left);\n            } else {\n                int x = queries[i][1], sz = queries[i][2];\n                auto it = S.upper_bound(x);\n                int diff = -1;\n                if (it == S.begin()) {\n                    diff = x;\n                } else {\n                    it -- ;\n                    diff = x - it->first;\n                    assert(diff >= 0);\n                    int diff2 = query(1, 0, MX, 0, it->first);\n                    diff = max(diff, diff2);\n                }\n                ans.push_back(diff >= sz);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716651701",
    "subm_id": "534776077"
}