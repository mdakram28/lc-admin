{
    "username": "RohanBhardwaj08",
    "submission": "class Solution {\npublic:\n    class Trie {\n    public:\n        vector<Trie*> v;\n        int end;\n\n        Trie() : v(26, nullptr), end(0) {}\n    };\n\n    void insert(Trie* root, const string &s, int c) {\n        Trie* temp = root;\n        for (char ch : s) {\n            if (temp->v[ch - 'a'] == nullptr) {\n                temp->v[ch - 'a'] = new Trie();\n            }\n            temp = temp->v[ch - 'a'];\n        }\n        if(temp->end!=0){\n            temp->end = min(temp->end,c);\n        }else{\n            temp->end = c;\n        }\n    }\n\n    int fun(Trie* root, string &target, vector<int>& costs, int st, int n, vector<int>& dp) {\n        if (st == n) {\n            return 0;\n        }\n        if (dp[st] != -1) {\n            return dp[st];\n        }\n\n        Trie* temp = root;\n        int ans = 1e9;\n        for (int i = st; i < target.size(); i++) {\n            if (temp->v[target[i] - 'a'] != nullptr) {\n                temp = temp->v[target[i] - 'a'];\n            } else {\n                break;\n            }\n            if (temp->end != 0) {\n                ans = min(ans, fun(root, target, costs, i + 1, n, dp) + temp->end);\n            }\n        }\n        return dp[st] = ans;\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        Trie* root = new Trie();\n        for (int i = 0; i < words.size(); i++) {\n            insert(root, words[i], costs[i]);\n        }\n        vector<int> dp(n + 1, -1);\n        int ans = fun(root, target, costs, 0, n, dp);\n        return (ans == 1e9) ? -1 : ans;\n    }\n};\n",
    "submit_ts": "1720322498",
    "subm_id": "1312351517"
}