{
    "username": "jassy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int res = 0;\n        int m = grid.size();\n        int n = grid[0].size();\n        for (int i = 0; i < grid.size() / 2; i++) {\n            for (int k = 0; k < grid[0].size() / 2; k++) {\n                int sm = grid[i][k] + grid[m - i - 1][k] +\n                         grid[m - i - 1][n - k - 1] + grid[i][n - k - 1];\n                res += std::min(4 - sm, sm);\n            }\n        }\n        // std::cout<<res<<std::endl;\n        int r = 0;\n        int cnt = 0;\n        if (n % 2 != 0) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - i - 1][n / 2]) {\n                    r += 1;\n                }\n                // else\n                {\n                cnt += grid[i][n / 2];\n                cnt += grid[m - i - 1][n / 2];\n                }\n            }\n        }\n        \n        // std::cout<<res<<\",\"<<r<<std::endl;\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[m / 2][i] != grid[m / 2][n - i - 1]) {\n                    r += 1;\n                }\n                // else\n                {\n                cnt += grid[m / 2][i];\n                cnt += grid[m / 2][n - i - 1];\n                }\n            }\n        }\n        // std::cout<<res<<\",\"<<r<<\",\"<<cnt<<std::endl;\n        res += r;\n        // r = cnt % 4;\n        cnt = cnt%4;\n        res+=std::min({std::max(0,cnt - r), std::max(0,cnt + r),std::max(0, 4-cnt + r),std::max(0,4-cnt - r)});\n        // res += std::min(r, 4 - r);\n        // std::cout<<res<<\",\"<<r<<std::endl;\n\n        if (m % 2 != 0 && n % 2 != 0) {\n            if (grid[m / 2][n / 2] == 1)\n                res++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697810",
    "subm_id": "552267919"
}