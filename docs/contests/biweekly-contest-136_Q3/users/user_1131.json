{
    "username": "pranav_todkar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int flips = 0;\n        int totalOnes = 0;\n\n        // Handle main grid\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int sum = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                totalOnes += sum;\n                if (sum == 1 || sum == 3) flips += 1;\n                else if (sum == 2) flips += 2;\n            }\n        }\n        int ct=0,ch=0;\n        // Handle central row if m is odd\n        if (m % 2 == 1) {\n            int midRow = m / 2;\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[midRow][j] != grid[midRow][n-1-j]) {\n                    flips++;\n                    totalOnes++;\n                    ch++;\n                } else {\n                    if (grid[midRow][j] == 1) ct++;\n                }\n            }\n            if (n % 2 == 1) {\n                flips += grid[midRow][n/2];\n            }\n        }\n\n        // Handle central column if n is odd\n        if (n % 2 == 1) {\n            int midCol = n / 2;\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][midCol] != grid[m-1-i][midCol]) {\n                    flips++;\n                    ch++;\n                } else {\n                    if (grid[i][midCol] == 1) ct++;\n                    \n                }\n            }\n        }\n\n        // Adjust to make total ones divisible by 4\n        if((ct%2 == 1) && ch==0) flips+=2;\n\n        return flips;\n    }\n};",
    "submit_ts": "1722698883",
    "subm_id": "1343194838"
}