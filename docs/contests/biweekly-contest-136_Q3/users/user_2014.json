{
    "username": "Divyanshu-prakash-rx",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int flips = 0;\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int ones = 0;\n                int newRow[] = {i, i, n - i - 1, n - i - 1};\n                int newCol[] = {j, m - j - 1, j, m - j - 1};\n                for (int k = 0; k < 4; ++k) {\n                    ones += grid[newRow[k]][newCol[k]];\n                }\n                flips += min(ones, 4 - ones);\n            }\n        }\n\n        int possible = 0, count = 0;\n\n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    flips++;\n                    possible++;\n                } else if (grid[i][m / 2] == 1) {\n                    count++;\n                }\n            }\n        }\n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    flips++;\n                    possible++;\n                } else if (grid[n / 2][j] == 1) {\n                    count++;\n                }\n            }\n        }\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2]) {\n            flips++;\n        }\n\n        if (possible == 0 && count % 2 != 0) {\n            flips += 2;\n        }\n\n        return flips;\n    }\n};",
    "submit_ts": "1722699541",
    "subm_id": "1343214827"
}