{
    "username": "liulaoye135",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        tr = [0]*(n + 1)\n        \n        def ispeak(i):\n            if i - 1 >= 0 and i + 1 < n:\n                if nums[i-1] < nums[i] and nums[i + 1] < nums[i]:\n                    return True\n        \n        def lb(i):\n            return -i&i\n        \n        def add(ind, val):\n            if ind == 0: return\n            while ind <= n:\n                tr[ind] += val\n                ind += lb(ind)\n        \n        def query(ind):\n            res = 0\n            while ind:\n                res += tr[ind]\n                ind -= lb(ind)\n            return res\n        \n        for ind, num in enumerate(nums, 1):\n            i = ind - 1\n            if ispeak(i):\n                add(ind, 1)\n        \n        ans = []\n        for tp, a, b in queries:\n            if tp == 1:\n                l = a\n                r = b\n                ans.append(max(0,query(r) - query(l+1)))\n            else:\n                p1 = 0\n                p2 = 0\n                p3 = 0\n                if ispeak(a - 1):\n                    p1 = 1\n                if ispeak(a):\n                    p2 = 1\n                if ispeak(a + 1):\n                    p3 = 1\n                \n                nums[a] = b\n                c1 = 0\n                c2 = 0\n                c3 = 0\n                if ispeak(a - 1):\n                    c1 = 1\n                if ispeak(a):\n                    c2 = 1\n                if ispeak(a + 1):\n                    c3 = 1\n                # print(p1,p2,p3)\n                # print(c1,c2,c3)\n                add(a, c1 - p1)\n                add(a + 1, c2 - p2)\n                add(a + 2, c3 - p3)\n        return ans\n                \n                \n        \n        ",
    "submit_ts": 1718508049.0
}