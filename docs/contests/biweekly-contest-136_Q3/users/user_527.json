{
    "username": "techtushar2002",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) \n    {\n        int m = grid.size(), n = grid[0].size();\n        int count = 0;\n        for(int i=0;i<m/2;i++)\n        {\n            for(int j=0;j<n/2;j++)\n            {\n                int sum = 0;\n                sum += grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                count += min(sum,4-sum);\n            }\n        }\n        int count1 = 0, countx = 0;\n        if(m&1)\n        {\n            for(int j=0;j<n/2;j++)\n            {\n                if(grid[(m-1)/2][j] != grid[(m-1)/2][n-1-j])\n                countx++;\n                else\n                {\n                    if(grid[(m-1)/2][j] == 1)\n                    count1 += 2;\n                }\n            }\n        }\n        if(n&1)\n        {\n            for(int i=0;i<m/2;i++)\n            {\n                if(grid[i][(n-1)/2] != grid[m-1-i][(n-1)/2])\n                countx++;\n                else\n                {\n                    if(grid[i][(n-1)/2] == 1)\n                    count1 += 2;\n                }\n            }\n        }\n        if(count1%4 != 0 && countx == 0) count += 2;\n        if(m&1 && n&1) count += grid[m/2][n/2];\n        return count + countx;\n    }\n};",
    "submit_ts": "1722697679",
    "subm_id": "1343155041"
}