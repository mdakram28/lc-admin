{
    "username": "nom3rcy",
    "submission": "const MAX = int(1e9)\nvar dp []int\nfunc minimumCost(target string, words []string, costs []int) int {\n    trie := &Trie{MAX, false, make([]*Trie, 26)}\n    for i:=0; i<len(words); i++ {\n        insert(trie, words[i], costs[i])\n    }\n    \n    dp = make([]int, len(target))\n    for i:=0; i<len(dp); i++ {\n        dp[i] = MAX\n    }\n    res := dfs(target, 0, trie)\n    if res == MAX {\n        return -1\n    }\n    return res\n}\n\nfunc dfs(target string, i int, trie *Trie) int {    \n    if i==len(target) {\n        return 0\n    }\n    if i>len(target) {\n        return MAX\n    }\n    if dp[i] < MAX {\n        return dp[i]\n    }\n    tmp := MAX\n    n := trie\n    for j:=i; j<len(target) && n != nil; j++ {\n        idx := int(target[j]-'a')\n        n = n.children[idx]\n        if n == nil {\n            break\n        }\n        if n.isWord {\n            tmp = min(tmp, n.cost + dfs(target, j+1, trie))\n        }\n    }\n    dp[i] = tmp\n    return tmp\n}\n\ntype Trie struct {\n    cost int\n    isWord bool\n    children []*Trie\n}\n\nfunc insert(t *Trie, w string, cost int) {\n    n := t\n    for i:=0; i<len(w); i++ {\n        idx := int(w[i]-'a')\n        next := n.children[idx]\n        if next == nil {\n            next = &Trie{MAX, false, make([]*Trie, 26)}\n            n.children[idx] = next\n        }\n        n = next\n    }\n    n.cost = min(n.cost, cost)\n    n.isWord = true\n}",
    "submit_ts": "1720321618",
    "subm_id": "1312327710"
}