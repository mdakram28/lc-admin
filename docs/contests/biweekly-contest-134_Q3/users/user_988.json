{
    "username": "ad009",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, anuj_a: List[int], anuj_b: int) -> int:\n        anuj_c = []\n        anuj_d = 0\n        anuj_e = 1\n        anuj_f = 0\n    \n        while anuj_e < len(anuj_a) + anuj_b and anuj_d < len(anuj_a):\n            anuj_g = anuj_e\n            anuj_h = anuj_g % len(anuj_a)\n            \n            while anuj_a[anuj_h] != anuj_a[anuj_h - 1] and (anuj_g < (len(anuj_a) + anuj_b - 1)):\n                anuj_g += 1\n                anuj_h = anuj_g % len(anuj_a)\n\n            anuj_f += max(anuj_g - anuj_d - anuj_b + 1, 0)\n            anuj_d = anuj_g\n            anuj_e = anuj_d + 1\n        \n        return anuj_f\n",
    "submit_ts": "1720280443",
    "subm_id": "1311789612"
}