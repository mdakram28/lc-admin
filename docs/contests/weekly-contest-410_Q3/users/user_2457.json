{
    "username": "alok2211",
    "submission": "\nclass Solution {\npublic:\n    static const int MOD = 1e9 + 7;\n    int dp[2001][51][51]; \n     Solution() {\n        memset(dp, -1, sizeof(dp)); \n    }\n\n    int findPairs(const vector<int>& nums, int index, int previous1, int previous2) {\n        if (index >= nums.size()) {\n            return 1; \n        }\n\n        if (dp[index][previous1][previous2] != -1) {\n            return dp[index][previous1][previous2]; \n        }\n\n        int ans = 0;\n        for (int i = 0; i <= nums[index]; ++i) {\n            int arr1Val = i;\n            int arr2Val = nums[index] - i;\n            if (arr1Val >= previous1 && arr2Val <= previous2) {\n                ans = (ans + findPairs(nums, index + 1, arr1Val, arr2Val)) % MOD;\n            }\n        }\n\n        dp[index][previous1][previous2] = ans;\n        return ans;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        memset(dp, -1, sizeof(dp)); \n        return findPairs(nums, 0, 0, 50); \n    }\n};\n",
    "submit_ts": "1723347336",
    "subm_id": "1351596766"
}