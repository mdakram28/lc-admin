{
    "username": "chinmay02",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n\n        int n = a.size();\n        vector<set<int>> cnt(n);\n\n        int minval = INT32_MAX;\n        for(int i=0;i<n;i++){\n            if(i == 0){\n                cnt[i].insert(a[i]);\n                minval = min(abs(k-a[i]),minval);\n                continue;\n            }\n\n            for(auto v:cnt[i-1]){\n                int x = v&a[i];\n                cnt[i].insert(x);\n            }\n\n            cnt[i].insert(a[i]);\n\n            auto it = lower_bound(cnt[i].begin(),cnt[i].end(),k);\n\n            if(*it == k){\n                minval = 0;\n                break;\n            }\n\n            if(it == cnt[i].end()){\n                it--;\n                // cout<<\"here \"<<*it<<endl;\n                int val = *it;\n                minval = min(minval,abs(k-val));\n            }\n            else{\n                int val = *it;\n                minval = min(minval,abs(val-k));\n\n                if(it != cnt[i].begin()){\n                    it--;\n                    int val = *it;\n                    minval = min(minval,abs(val-k));\n                }\n            }\n\n        }\n\n        return minval;\n    }\n};",
    "submit_ts": 1717298270.0
}