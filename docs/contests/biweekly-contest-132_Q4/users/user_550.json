{
    "username": "AvanRocks",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k+1, -1));\n        for (int i = 0; i < n; i++) dp[i][0] = 1;\n        int ans = 1;\n        vector<int> m1(n), m2(n);\n        for (int j = 0; j <= k; j++) {\n            m1 = m2;\n            for (int i = 0; i < n; i++) m2[i] = 1;\n            unordered_map<int,int> dp2;\n            m2[0] = 1;\n            dp2[nums[0]] = 1;\n            for (int i = 1; i < n; i++) {\n                dp[i][j] = 1;\n                if (j-1 >= 0) dp[i][j] = dp[i][j-1];\n                dp[i][j] = max(dp[i][j], m1[i-1] + 1);\n                dp[i][j] = max(dp[i][j], dp2[nums[i]] + 1);\n                /*\n                for (int k = 0; k < i; k++) {\n                    if (nums[k] == nums[i]) {\n                        dp[i][j] = max(dp[i][j], dp[k][j] + 1);\n                    } else {\n                        dp[i][j] = max(dp[i][j], dp[k][j-1] + 1);\n                    }\n                }\n                */\n                m2[i] = max(m2[i-1], dp[i][j]);\n                dp2[nums[i]] = max(dp2[nums[i]], dp[i][j]);\n                ans = max(ans, dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717862368.0
}