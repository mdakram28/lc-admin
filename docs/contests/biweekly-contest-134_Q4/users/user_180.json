{
    "username": "Conrad_123",
    "submission": "class Solution {\npublic:\n    \n    long long Count_Less_Than(std::vector<int>& nums, int target){\n        \n        int back_idx = 0;\n        int current_bit_mask = 0;\n        std::vector<int> bit_counts(32, 0);\n        long long result = 0;\n        \n        for(int i = 0; i < nums.size(); i++){\n            \n            int idx = 0;\n            while((1 << idx) <= nums[i]){\n                if((1 << idx) & nums[i]) bit_counts[idx]++;\n                idx++;\n            }\n            \n            for(int j = 0; j < bit_counts.size(); j++){\n                if(bit_counts[j] == i - back_idx + 1){\n                    current_bit_mask |= (1 << j);\n                }else{\n                    current_bit_mask &= ~(1 << j);\n                }\n            }\n            \n            while(current_bit_mask <= target && back_idx <= i){\n                \n                result += nums.size() - i;\n                idx = 0;\n                \n                while((1 << idx) <= nums[back_idx]){\n                    if((1 << idx) & nums[back_idx]) bit_counts[idx]--;\n                    idx++;\n                }\n                \n                back_idx++;\n                \n                for(int j = 0; j < bit_counts.size(); j++){\n                    if(bit_counts[j] == i - back_idx + 1){\n                        current_bit_mask |= (1 << j);\n                    }else{\n                        current_bit_mask &= ~(1 << j);\n                    }\n                }   \n            }\n        }        \n        \n        return result;\n    }\n    \n    long long countSubarrays(std::vector<int>& nums, int k) {\n        \n        if(k == 0){\n            return Count_Less_Than(nums, k);\n        }\n        \n        return Count_Less_Than(nums, k) - Count_Less_Than(nums, k-1);\n    }\n};",
    "submit_ts": "1720278297",
    "subm_id": "1311703025"
}