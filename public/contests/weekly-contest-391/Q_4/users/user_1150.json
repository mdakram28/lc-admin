{
    "username": "spushkar1526",
    "submission": "class Solution {\npublic:\n   int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size(); \n        vector<pair<int, int>> sum(n), diff(n); \n        for(int i =0; i<n; i++){\n            sum[i] = {points[i][0] + points[i][1], i}; \n            diff[i] = {points[i][0] - points[i][1], i}; \n        }\n\n        sort(sum.begin(), sum.end()); sort(diff.begin(), diff.end()); \n\n        vector<pair<int, int>> temp; \n        //return min(sum[n-1].first - sum[0].first, diff[n-1].first-diff[0].first);\n        vector<int> removable = {sum[n-1].second, sum[0].second, diff[n-1].second, diff[0].second};\n        int ans = INT_MAX; \n\n        for(auto removed: removable){\n            int sumbig = sum[n-1].second==removed?sum[n-2].first: sum[n-1].first;\n            int sumsmall= sum[0].second==removed? sum[1].first: sum[0].first;\n\n            int diffbig = diff[n-1].second== removed?diff[n-2].first: diff[n-1].first;\n            int diffsmall = diff[0].second==removed? diff[1].first: diff[0].first;\n            ans = min(ans, max(sumbig-sumsmall, diffbig-diffsmall));\n        }\n        return ans;\n    }\n};"
}