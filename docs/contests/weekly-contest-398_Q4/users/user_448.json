{
    "username": "beta-blue",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        map<vector<int>, int> dp;\n        return solve(k, 1, 0, 0, dp);\n    }\n    \n    int solve(int k, int cur, int jump, int back, map<vector<int>, int>& dp) {\n        if (cur > k + 1)\n            return 0;\n        \n        vector<int> key = {cur, jump, back};\n        if (dp.find(key) != dp.end())\n            return dp[key];\n        \n        int res = cur == k ? 1 : 0;\n        \n        if (cur != 0 && !back)\n            res += solve(k, cur-1, jump, 1, dp);\n        \n        long long j = cur + pow(2LL, jump);\n        if (j <= k + 1)\n            res += solve(k, j, jump+1, 0, dp);\n        \n        return dp[key] = res;\n    }\n};",
    "submit_ts": "1716088586",
    "subm_id": "1261818327"
}