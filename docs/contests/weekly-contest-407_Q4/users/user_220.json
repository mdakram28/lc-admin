{
    "username": "is2ac",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long[] a = new long[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            a[i] = (long)(target[i] - nums[i]);\n        }\n        int pos = 1;\n        int past = 0;\n        long res = 0;\n        // System.out.println(Arrays.toString(a));\n        for (int i = 0; i < a.length; i++) {\n            if (a[i]>0) {\n                if (pos==1) {\n                    \n                } else {\n                    res += help(past,i-1,a);\n                    past = i;\n                    pos = 1;\n                }\n            } else if (a[i]<0) {\n                if (pos == 1) {\n                    res += help(past,i-1,a);\n                    past = i;\n                    pos = -1;\n                } else {\n                    \n                }\n            }\n        }\n        res += help(past,a.length-1,a);\n        // System.out.println(Arrays.toString(a));\n        return res;\n    }\n    public long help(int l, int r, long[] a) {\n        if (r<l) return 0;\n        long res = 0;\n        for (int i = l; i <= r; i++) {\n            a[i] = Math.abs(a[i]);\n        }\n        long cur = a[l];\n        res += a[l];\n        for (int i = l + 1; i <= r; i++) {\n            if (a[i]>cur) {\n                res += a[i]-cur;\n                cur = a[i];\n            } else {\n                cur = a[i];\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721530824",
    "subm_id": "1327944853"
}