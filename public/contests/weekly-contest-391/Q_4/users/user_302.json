{
    "username": "Wizard_of_Orz",
    "submission": "const int N = 1e6 + 5;\nclass Solution {\npublic:\n    array<int, 2> p[N];\n    int n;\n    int solve(int x) {\n        // cout<<x<<'\\n';\n        int ans = 0;\n        int mn = 0x3f3f3f3f, mx = -0x3f3f3f3f;\n        for(int i = 1;i<=n;++i) if(i != x) {\n            mn = min(mn, p[i][0] + p[i][1]);\n            mx = max(mx, p[i][0] + p[i][1]);\n        }\n        ans = max(mx - mn, ans);\n        \n        mn = 0x3f3f3f3f, mx = -0x3f3f3f3f;\n        for(int i = 1;i<=n;++i) if(i != x) {\n            mn = min(mn, p[i][0] - p[i][1]);\n            mx = max(mx, p[i][0] - p[i][1]);\n        }\n        ans = max(mx - mn, ans);\n        mn = 0x3f3f3f3f, mx = -0x3f3f3f3f;\n        for(int i = 1;i<=n;++i) if(i != x) {\n            mn = min(mn, -p[i][0] + p[i][1]);\n            mx = max(mx, -p[i][0] + p[i][1]);\n        }\n        ans = max(mx - mn, ans);\n        return ans;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        n = points.size();\n        for(int i = 1;i<=n;++i) p[i] = {points[i - 1][0], points[i - 1][1]};\n        int ans = 0x3f3f3f3f;\n        int mn = 1, mx = 1;\n        for(int i = 1;i<=n;++i) {\n            if(p[i][0] + p[i][1] < p[mn][0] + p[mn][1]) {\n                mn = i;\n            }\n            if(p[i][0] + p[i][1] > p[mx][0] + p[mx][1]) {\n                mx = i;\n            }\n        }\n        ans = min(ans, solve(mn));\n        ans = min(ans, solve(mx));\n        \n        mn = 1, mx = 1;\n        for(int i = 1;i<=n;++i) {\n            if(p[i][0] - p[i][1] < p[mn][0] - p[mn][1]) {\n                mn = i;\n            }\n            if(p[i][0] - p[i][1] > p[mx][0] - p[mx][1]) {\n                mx = i;\n            }\n        }\n        ans = min(ans, solve(mn));\n        ans = min(ans, solve(mx));\n        \n        return ans;\n    }\n};"
}