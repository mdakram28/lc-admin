{
    "username": "cs12b006",
    "submission": "typedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nclass Solution {\npublic:\nbool isconn(vi& c1, vi& c2) {\n\nfloat dist = sqrt(pow(c1[0] - c2[0], 2) + pow(c1[1] - c2[1], 2));\n\n    return dist<=c1[2]+c2[2];\n}\n    void buildadj(vvi& cs, vvi& adj, int n) {\n        for(int i=0;i<n;i++) {\n            adj[i].push_back(i);\n        for (int j=i+1;j<n;j++) {\n            if (isconn(cs[i],cs[j])) {\n                adj[i].push_back(j);\n                adj[j].push_back(i);\n            }\n        }\n        }\n    }\n    bool inn(set<int> &ss, int tt) {\n        return ss.find(tt)!=ss.end();\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cs) {\n        int n=cs.size();\n        vvi adj= vvi(n, vi{});\n        buildadj(cs, adj, n);\n        set<int> dest;\n        vi visit = vi(n,0);\n        for (int i=0;i<n;i++) {\n            if (cs[i][2] >= X-cs[i][0]) {dest.insert(i);\n            // cout << i << endl;\n            }\n            if (cs[i][2] >= cs[i][1]) {\n                dest.insert(i);\n            }\n        }\n        queue<int> bfsq;\n        for (int i=0;i<n;i++) {\n            if ((cs[i][2] >= Y-cs[i][1]) || (\n                cs[i][2] >= cs[i][0]\n            )) {\n                bfsq.push(i);\n            visit[i]=1;\n            // cout << i << endl;\n            }\n        }\n        while (bfsq.size()) {\n            int topci = bfsq.front();bfsq.pop();\n            for (int nbr: adj[topci]) {\n                if (inn(dest, nbr)) return false;\n                if (visit[nbr]);\n                else { bfsq.push(nbr); visit[nbr]=1;}\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138434",
    "subm_id": "1335790678"
}