{
    "username": "lakshy-gupta",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: list[list[int]]) -> bool:\n        m = len(circles)\n        adjList = [[] for _ in range(m)]\n        touchUL = [False] * m\n        touchBR = [False] * m\n\n        for i in range(m):\n            x, y, r = circles[i]\n            dist = min(x, abs(Y - y))\n            if dist <= r:\n                touchUL[i] = True\n\n            dist = min(abs(X - x), y)\n            if dist <= r:\n                touchBR[i] = True\n\n        for i in range(m):\n            for v in range(i + 1, m):\n                xi, yi, ri = circles[i]\n                xj, yj, rj = circles[v]\n                hSq = (xi - xj) ** 2 + (yi - yj) ** 2\n                radHSq = (ri + rj) ** 2\n                if radHSq >= hSq:\n                    adjList[i].append(v)\n                    adjList[v].append(i)\n\n        vis = [False] * m\n        for i in range(m):\n            x, y, r = circles[i]\n            if not (0 <= x <= X and 0 <= y <= Y) and not touchBR[i] and not touchUL[i]:\n                vis[i] = True\n\n        for start in range(m):\n            if not vis[start]:\n                ULTouched = False\n                BRTouched = False\n                vis[start] = True\n                stack = [start]\n                while stack:\n                    node = stack.pop()\n                    if touchUL[node]:\n                        ULTouched = True\n                    if touchBR[node]:\n                        BRTouched = True\n                    for child in adjList[node]:\n                        if not vis[child]:\n                            vis[child] = True\n                            stack.append(child)\n\n            if ULTouched and BRTouched:\n                return False\n\n        return True",
    "submit_ts": "1722138699",
    "subm_id": "1335797403"
}