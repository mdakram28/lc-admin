{
    "username": "serialcomder",
    "submission": "class Solution {\npublic:\n    struct Fenwick {\n    int N; vector<int> bit;\n    void init(int n) {\n        N = n;\n        bit.assign(n + 1, 0);\n    }\n    void update(int idx, int val) {\n        while(idx <= N) {\n            bit[idx] += val;\n            idx += idx & -idx;\n        }\n    }\n    int pref(int idx) {\n        int ans = 0;\n        while(idx > 0) {\n            ans += bit[idx];\n            idx -= idx & -idx;\n        }\n        return ans;\n    }\n    int rsum(int l, int r) {\n        if(l > r) return 0;\n        return pref(r) - pref(l - 1);\n    }\n};\n\nvector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n    int n = a.size();\n    vector<int> ans, pk(n);\n    Fenwick ft; ft.init(n + 1);\n    for(int i = 1; i < n - 1; i++) {\n        if(a[i] > a[i - 1] && a[i] > a[i + 1]) {\n            pk[i] = 1;\n            ft.update(i, 1);\n        }\n    }\n    for(auto &i : q) {\n        int t = i[0], l = i[1], r = i[2];\n        if(t == 1) {\n            ans.push_back(ft.rsum(l + 1, r - 1));\n        } else {\n            vector<int> ind;\n            for(int j = l - 1; j <= l + 1; j++) {\n                if(j >= 1 && j <= n - 2) {\n                    ind.push_back(j);\n                }\n            }\n            for(auto &j : ind) {\n                if(pk[j]) {\n                    ft.update(j, -1);\n                    pk[j] = 0;\n                }\n            }\n            a[l] = r;\n            for(auto &j : ind) {\n                if(a[j] > a[j - 1] && a[j] > a[j + 1]) {\n                    pk[j] = 1;\n                    ft.update(j, 1);\n                }\n            }\n        }\n    }\n    return ans;\n}\n};",
    "submit_ts": 1718506801.0
}