{
    "username": "jalppatel1428",
    "submission": "class Solution {\npublic:\n    int gans=0;\n    int dfs(int ind,int par,vector<vector<int>> &edge){\n        int num=0,num2=0;\n        for(auto z:edge[ind]){\n            if(z==par)continue;\n            int num3=dfs(z,ind,edge);\n            if(num3>num){\n                num2=num;\n                num=num3;\n            }\n            else if(num3>num2){\n                num2=num3;\n            }\n        }\n        gans=max(gans,num+num2+1);\n        return num+1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1,m=edges2.size()+1;\n        vector<vector<int>> edge1(n);\n        for(auto it: edges1){\n            edge1[it[0]].push_back(it[1]);\n            edge1[it[1]].push_back(it[0]);\n        }\n        gans=0;\n        dfs(0,-1,edge1);\n        int dia1=gans;\n        vector<vector<int>> edge2(m);\n        for(auto it: edges2){\n            edge2[it[0]].push_back(it[1]);\n            edge2[it[1]].push_back(it[0]);\n        }\n        gans=0;\n        dfs(0,-1,edge2);\n        int dia2=gans;\n        int ans = max(dia1,dia2);\n        ans = max(ans,(dia1/2 + dia2/2 +2));\n        return ans-1;\n    }\n};",
    "submit_ts": 1719716554.0
}