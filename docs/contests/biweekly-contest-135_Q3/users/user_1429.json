{
    "username": "chirayugarg001999",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> freq;\n        for (int i=0; i<n/2; i++) {\n            int diff = abs(nums[i] - nums[n-i-1]);\n            freq[diff]++;\n        }\n\n        map<int, int> mp;\n\n        for (auto it : freq) {\n            if (mp.find(it.second) == mp.end()) {\n                mp[it.second] = it.first;\n            } else if (mp[it.second] > it.first) {\n                mp[it.second] = it.first;\n            }\n        }\n\n        int min_changes = n / 2 - freq[0];\n        for (auto it=mp.rbegin(); it!=mp.rend(); it++) {\n            if (n/2 - it->first > min_changes) {\n                continue;\n            }\n            int common = it->second;\n            int changes = 0;\n            for (int i=0; i<n/2; i++) {\n                if ((abs(nums[i] - nums[n-i-1])) != common) {\n                    if (nums[i] - common >= 0 || nums[i] + common <= k || nums[n-i-1] - common >= 0 || nums[n-i-1] + common <= k) {\n                        changes++;\n                    } else {\n                        changes += 2;\n                    }\n                }\n            }\n            min_changes = min(min_changes, changes);\n        }\n        return min_changes;\n    }\n};",
    "submit_ts": "1721488578",
    "subm_id": "1327426640"
}