{
    "username": "milesian-c",
    "submission": "int ZMax[100020][2];\nint ZMin[100020][2];\nint WMin[100020][2];\nint WMax[100020][2];\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        for(int i=0;i<n;++i){\n            ZMax[i][0] = ZMin[i][0] = points[i][0] - points[i][1];\n            WMax[i][0] = WMin[i][0] = points[i][0] + points[i][1];\n            if(i){\n                ZMax[i][0] = max(ZMax[i][0], ZMax[i-1][0]);\n                ZMin[i][0] = min(ZMin[i][0], ZMin[i-1][0]);\n                WMax[i][0] = max(WMax[i][0], WMax[i-1][0]);\n                WMin[i][0] = min(WMin[i][0], WMin[i-1][0]);\n            }\n            \n        }\n        \n        for(int i=n-1;i>=0;--i){\n            ZMax[i][1] = ZMin[i][1] = points[i][0] - points[i][1];\n            WMax[i][1] = WMin[i][1] = points[i][0] + points[i][1];\n            if(i < n-1){\n                ZMax[i][1] = max(ZMax[i][1], ZMax[i+1][1]);\n                ZMin[i][1] = min(ZMin[i][1], ZMin[i+1][1]);\n                WMax[i][1] = max(WMax[i][1], WMax[i+1][1]);\n                WMin[i][1] = min(WMin[i][1], WMin[i+1][1]);\n            }            \n        }\n        \n        int ans = 0;\n        for(int i=0;i<n;++i){\n            if(i == 0){\n                ans = max(ZMax[1][1] - ZMin[1][1], WMax[1][1] - WMin[1][1]); \n            }else if(i < n-1){\n                int z_min = min(ZMin[i-1][0], ZMin[i+1][1]);\n                int z_max = max(ZMax[i-1][0], ZMax[i+1][1]);\n                int w_min = min(WMin[i-1][0], WMin[i+1][1]);\n                int w_max = max(WMax[i-1][0], WMax[i+1][1]);\n                ans = min(ans, max(z_max - z_min, w_max - w_min));\n            }else{\n                ans = min(ans, max(ZMax[i-1][0] - ZMin[i-1][0], WMax[i-1][0] - WMin[i-1][0]));\n            }\n         //   printf(\"now: %d %d\\n\",i,ans);\n        }\n        return ans;\n    }\n};"
}