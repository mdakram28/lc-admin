{
    "username": "xue-wu-guai-shi-shi",
    "submission": "const int N  = 1e5 + 10;\nclass Solution {\npublic:\n    int n, tr[N];\n\n    int lowbit(int x)\n    {\n        return x & -x;\n    }\n\n    void add(int x, int v)\n    {\n        for (int i = x; i <= n; i += lowbit(i)) tr[i] += v;\n    }\n\n    int query(int x)\n    {\n        int res = 0;\n        for (int i = x; i; i -= lowbit(i)) res += tr[i];\n        return res;\n    }\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        nums.insert(nums.begin(), 0);\n        auto find = [&](int x)->int{\n            if(x == 1 || x == n) return 0;\n            if(nums[x] > nums[x - 1] && nums[x] > nums[x + 1]) return 1;\n            else return 0; \n        }; \n        for(int i = 1; i <= n; i ++) tr[i] = 0;\n        for(int i = 1; i <= n; i ++){\n            add(i, find(i));\n        }\n        vector<int>ans;\n        for(auto tt : queries){\n            int op = tt[0], x = tt[1], y = tt[2];\n            if(op == 1){\n                x++, y ++;\n                if(y - 1 > x)\n                ans.push_back(query(y - 1) - query(x));\n                else ans.push_back(0);\n            }else{\n                x++;\n                vector<int>qian,xian;\n                for(int i = max(1,x- 1); i <= x + 1 && i <= n; i ++)\n                qian.push_back(find(i));\n                nums[x] = y;\n                for(int i = max(1,x- 1); i <= x + 1 && i <= n; i ++)\n                xian.push_back(find(i));\n                for(int i = max(1,x- 1), j = 0; i <= x + 1 && i <= n; i ++, j ++){\n                    if(qian[j] != xian[j]){\n                        if(xian[j] == 0) xian[j] = -1;\n                        add(i, xian[j]);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507096",
    "subm_id": "539779236"
}