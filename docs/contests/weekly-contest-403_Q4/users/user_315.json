{
    "username": "john24",
    "submission": "from math import inf\nfrom typing import List\n\ndef rotate(arr):\n    m,n=len(arr),len(arr[0])\n    res=[[0]*m for _ in range(n)]\n    for i in range(m):\n        for j in range(n):\n            res[j][m-i-1]=arr[i][j]\n    return res\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        res=inf\n        def dp(grid):\n            m,n=len(grid),len(grid[0])\n            nonlocal res\n            dp1=[inf]*m\n            dp2=[inf]*m\n            colmin=[m]*n\n            colmax=[0]*n\n            for i in range(m):\n                for j in range(n):\n                    if grid[i][j]==1:\n                        colmin[j]=min(colmin[j],i)\n                        colmax[j]=max(colmax[j],i)\n                minx=n\n                maxx=0\n                miny=m\n                maxy=0\n                pre=[0]*(n+1)\n                for j in range(n):\n                    if grid[i][j]==1 or colmin[j]<=colmax[j]:\n                        minx=min(minx,j)\n                        maxx=max(maxx,j)\n                    miny=min(miny,colmin[j])\n                    maxy=max(maxy,colmax[j])\n                    pre[j]=max(0,maxx-minx+1)*max(0,maxy-miny+1)\n                dp1[i]=min(dp1[i],pre[n-1])\n                minx=n\n                maxx=0\n                miny=m\n                maxy=0\n                for j in range(n-1,0,-1):\n                    if grid[i][j]==1 or colmin[j]<=colmax[j]:\n                        minx=min(minx,j)\n                        maxx=max(maxx,j)\n                    miny=min(miny,colmin[j])\n                    maxy=max(maxy,colmax[j])\n                    v=max(0,maxx-minx+1)*max(0,maxy-miny+1)\n                    dp2[i]=min(dp2[i],v+pre[j-1])\n                \n                minx=n\n                maxx=0\n                miny=m\n                maxy=0\n                for k in range(i,0,-1):\n                    for j in range(n):\n                        if grid[k][j]==1:\n                            minx=min(minx,j)\n                            maxx=max(maxx,j)\n                            miny=min(miny,k)\n                            maxy=max(maxy,k)\n                    dp2[i]=min(dp2[i],max(0,maxx-minx+1)*max(0,maxy-miny+1) + dp1[k-1])\n            \n            minx=n\n            maxx=0\n            miny=m\n            maxy=0\n            for i in range(m-1,0,-1):\n                for j in range(n):\n                    if grid[i][j]==1:\n                        minx=min(minx,j)\n                        maxx=max(maxx,j)\n                        miny=min(miny,i)\n                        maxy=max(maxy,i)\n                res=min(res, max(0,maxx-minx+1)*max(0,maxy-miny+1) + dp2[i-1])\n        \n        dp(grid)\n        grid=rotate(grid)\n        dp(grid)\n        grid=rotate(grid)\n        dp(grid)\n        grid=rotate(grid)\n        dp(grid)\n        return res\n",
    "submit_ts": 1719113870.0
}