{
    "username": "rushi172001",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        map<long long int, long long int> prev;\n        long long int n = (long long int)nums.size();\n        long long int c = 0;\n        for (long long int i = 0; i < n; i++) {\n            map<long long int, long long int> next;\n            for (auto v : prev)\n                next[v.first & (long long int)nums[i]] = next[v.first & (long long int)nums[i]] + prev[v.first];\n\n            next[(long long int)nums[i]]++;\n            // for (auto v : next)\n            // cout<< v.first << \" \" << v.second << endl;\n            for (auto v : next)\n                if (v.first == (long long int)k)\n                    c = c + v.second;\n\n            prev = next;\n        }\n        return c;\n    }\n};",
    "submit_ts": "1720278796",
    "subm_id": "1311724604"
}