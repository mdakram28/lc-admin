{
    "username": "Deepak_Arora_",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        long dp[][][] = new long[nums.length][53][53];\n        for(long row[][] : dp)\n        {\n            for(long col[] : row)\n                Arrays.fill(col , -1);\n        }\n        long ans= helper(nums ,  0  , -1 , -1 ,dp);\n        \n        int Ans=(int)((ans)%1000000007);\n        return Ans;\n            \n        \n    }\n    public static long helper(int nums[]  , int index, int a , int b,long dp[][][])\n    {\n        if(index == nums.length)\n            return 1;\n        \n        if(dp[index][a+1][b+1]!=-1)\n            return dp[index][a+1][b+1];\n        \n        long ans = 0;\n        for(int i  = 0 ; i <= nums[index] ; i++)\n        {\n            if(a == -1)\n            {\n                ans = (ans + helper(nums , index+1 , i , nums[index] - i , dp))%1000000007;\n                \n            }\n            else\n            {  \n                if(i >= a && nums[index] - i <= b)\n                {\n                    ans = (ans + helper(nums , index+1 , i , nums[index] - i , dp))%1000000007;\n                }\n                \n            }\n            \n        }\n        return dp[index][a+1][b+1] =  ans;\n    }\n}",
    "submit_ts": "1723345820",
    "subm_id": "1351564043"
}