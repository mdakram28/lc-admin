{
    "username": "qi-dian-n",
    "submission": "\n\ndef MaxDist(A, N):\n\n    # List to store maximum and\n    # minimum of all the four forms\n    V0 = [[0, -1] for i in range(N)]\n    V1 = [[0, -1] for i in range(N)]\n\n    for i in range(N):\n        V0[i] = A[i][0] + A[i][1], i\n        V1[i] = A[i][0] - A[i][1], i\n\n    # Sorting both the vectors\n    V0.sort()\n    V1.sort()\n\n    maximum = max(V0[-1][0] - V0[0][0], V1[-1][0] - V1[0][0])\n\n    return maximum, V0[0][1], V0[-1][1], V1[0][1], V1[-1][1]\n\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        mx, a, b, c, d = MaxDist(points, n)\n        mx1 = MaxDist(points[:a] + points[a + 1 :], n - 1)[0]\n        mx2 = MaxDist(points[:b] + points[b + 1 :], n - 1)[0]\n        mx3 = MaxDist(points[:c] + points[c + 1 :], n - 1)[0]\n        mx4 = MaxDist(points[:d] + points[d + 1 :], n - 1)[0]\n        return min(mx, mx1, mx2, mx3, mx4)"
}