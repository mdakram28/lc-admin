{
    "username": "AnjiLiu",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<pair<int, int>>> a(m);\n        for (int i = 0; i < m; i++){\n            for (int j = 0; j < n; j++){\n                a[i].emplace_back(board[i][j], j);\n            }\n        }\n        for (int i = 0; i < m; i++){\n            sort(a[i].begin(), a[i].end(), [&](const auto& p1, const auto& p2){\n                return p1.first > p2.first;\n            });\n        }\n        long long mx = LONG_LONG_MIN;\n        for (int i = 0; i < m; i++){\n            for (int j = i + 1; j < m; j++){\n                for (int k = j + 1; k < m; k++){\n                    for (int d1 = 0; d1 < 3; d1++){\n                        for (int d2 = 0; d2 < 3; d2++){\n                            if (a[i][d1].second == a[j][d2].second)   continue;\n                            for (int d3 = 0; d3 < 3; d3++){\n                                if (a[i][d1].second == a[k][d3].second || a[j][d2].second == a[k][d3].second)   continue;\n                                mx = max((long long)a[i][d1].first + a[j][d2].first + a[k][d3].first, mx);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return mx;\n    }\n};",
    "submit_ts": "1723907827",
    "subm_id": "556327727"
}