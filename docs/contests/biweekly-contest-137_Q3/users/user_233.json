{
    "username": "Dhruv Kumar Agrawal",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size();\n        int m=board[0].size();\n        vector<pair<int, pair<int, int>>>vec;\n        for(int i=0; i<n; i++)\n        {\n            vector<pair<int, pair<int, int>>>temp;\n            for(int j=0; j<m; j++)\n            {\n                temp.push_back({board[i][j], {i, j}});\n            }\n            sort(temp.begin(), temp.end());\n            vec.push_back(temp[m-1]);\n            vec.push_back(temp[m-2]);\n            vec.push_back(temp[m-3]);\n        }\n        sort(vec.begin(), vec.end());\n        int t=vec.size();\n        long long res=-1e15;\n        for(int i=t-1; i>=0; i--)\n        {\n            for(int j=t-1; j>=0; j--)\n            {\n                for(int k=t-1; k>=0; k--)\n                {\n                    auto one=vec[i].second;\n                    auto two=vec[j].second;\n                    auto three=vec[k].second;\n                    if(one.first!=two.first && one.first!=three.first && two.first!=three.first &&\n                       one.second!=two.second && one.second!=three.second && two.second!=three.second)\n                       {\n                        res=max(res, vec[i].first+0LL+vec[j].first+0LL+vec[k].first);\n                       }\n\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723906152",
    "subm_id": "1359037970"
}