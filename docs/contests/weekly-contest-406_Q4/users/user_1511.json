{
    "username": "diwakarsehgal",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        ll horicut = 0; \n        ll vericut = 0; \n        ll ans = 0;\n        \n        ll i = 0, j = 0; \n        \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] * (vericut + 1);\n                horicut++;\n                i++;\n            } else {\n                ans += verticalCut[j] * (horicut + 1);\n                vericut++;\n                j++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            ans += horizontalCut[i] * (vericut + 1);\n            i++;\n        }\n        \n        while (j < verticalCut.size()) {\n            ans += verticalCut[j] * (horicut + 1);\n            j++;\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1720926303",
    "subm_id": "1320282170"
}