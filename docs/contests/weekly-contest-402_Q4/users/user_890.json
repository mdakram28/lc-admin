{
    "username": "yomaesakura",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        peak = [0] * n\n        arr = [0]*(n+1)\n        ret = []\n        for i in range(1,n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                peak[i] = 1\n        for i in range(1,n+1):\n            length = i & -i\n            arr[i] = sum(peak[i-length:i])\n\n        def update(index: int, val: int) -> None:\n            nonlocal arr,peak\n            x = len(arr) #\u957f\u5ea6\u5176\u5b9e\u662fn+1\n            delta = val - peak[index]\n            if delta == 0:return\n            i = index + 1\n            while i < x:\n                arr[i] += delta\n                i += (i&-i)\n            peak[index] = val\n\n        def sumRange(left: int, right: int) -> int:\n            nonlocal peak,arr\n            ra = peak[right]\n            leftpre = rightpre = 0\n            left+=1\n            right+=1\n            while True:\n                leftpre += arr[left]\n                left -= (left&-left)\n                if left == 0:\n                    break\n            while True:\n                rightpre += arr[right]\n                right -= (right&-right)\n                if right == 0:\n                    break\n            return rightpre - leftpre - ra\n\n        for q in queries:\n            if q[0] == 2:\n                nums[q[1]] = q[2]\n                if q[1] == 0:\n                    update(1,int(nums[1] > nums[0] and nums[1] > nums[2]))\n                elif q[1] == n - 1:\n                    update(n-2,int(nums[n-2] > nums[n-1] and nums[n-2] > nums[n-3]))\n                else:\n                    update(q[1],int(nums[q[1]] > nums[q[1]-1] and nums[q[1]] > nums[q[1]+1]))\n                    if q[1] - 1 > 0:\n                        update(q[1]-1,int(nums[q[1]-1] > nums[q[1]-2] and nums[q[1]-1] > nums[q[1]]))\n                    if q[1] + 1 < n - 1:\n                        update(q[1]+1,int(nums[q[1]+1] > nums[q[1]] and nums[q[1]+1] > nums[q[1]+2]))\n            else:\n                if q[2] - q[1] <= 1:\n                    ret.append(0)\n                else:\n                    ret.append(sumRange(q[1],q[2]))\n\n        return ret",
    "submit_ts": 1718508439.0
}