{
    "username": "Ruthvik2835",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& v, int k) {\n        int n=v.size();\n        // print(v);\n        // vector<int>pre(n,0);\n        // for(int i=0;i<n-1;i++){\n        //     if(v[i]!=v[i+1])pre[i+1]=1;\n        // }\n        vector<vector<int>>dp(k+1,vector<int>(n,0));\n\n        for(int p=0;p<=k;p++){\n            map<int,int>m;\n            int pre=0;\n            for(int i=n-1;i>=0;i--){\n                int ans=0;\n                int d=0;\n                if(m[v[i]]>0)d=(dp[p][m[v[i]]-1]);             \n                // for(int j=i+1;j<n;j++){\n                //     if(v[i]==v[j]){\n                //         ans=max(ans,dp[p][j]);\n                //     }\n                //     else{\n                //         if(p-1>=0){\n                //             ans=max(ans,dp[p-1][j]);\n                //         }\n                //     }\n                // }\n                dp[p][i]=1+max(pre,d);\n                m[v[i]]=i+1;\n                if(p-1>=0)pre=max(pre,dp[p-1][i]);\n            }\n        }\n        int ans=0;\n        for(int i=0;i<n;i++){\n            ans=max(ans,dp[k][i]);\n        }\n        // cout<<n<<endl;\n        // print(dp[0]);\n        // cout<<ans<<endl;\n        return ans;\n\n\n        // return 1;\n\n        // return 1;\n    }\n};",
    "submit_ts": "1717860570",
    "subm_id": "1281762107"
}