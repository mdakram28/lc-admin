{
    "username": "ayush_raj_14",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int>arr;\n        for(int i=0;i<2;i++)\n        {\n            for(auto x:colors){\n            arr.push_back(x);\n            }\n        }\n        // cout<<\"arr \";\n        // for(auto x:arr){\n        //     cout<<x<<' ';\n        // }\n        // cout<<endl;\n        \n        \n        vector<int>diff;\n        for(int i=0;i<arr.size()-1;i++)\n        {\n            if(arr[i]==arr[i+1]){\n                diff.push_back(i);\n            }\n        }\n        int dp[200005],n=arr.size();\n        dp[0] = arr[0];\n        for(int i=1;i<n;i++)\n        {\n            dp[i]=dp[i-1] + arr[i];\n        }\n        int t=n/2,ans=0;\n        // cout<<t<<' ';\n        for(int i=0;i<t;i++)\n        {\n   \n                auto it = lower_bound(diff.begin(),diff.end(),i);\n                // auto it1 = upper_bound(diff.begin(),diff.end(),i+k-1);\n                // it1--;\n                if(it==diff.end()){\n                    ans++;continue;\n                }\n                if(*it>=i&&*it<i+k-1){\n                    // cout<<i<<' ';\n                    ;\n                }else{\n                    ans++;\n                }\n        }\n        // cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720277504",
    "subm_id": "1311666793"
}