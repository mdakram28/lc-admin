{
    "username": "AmanBedi",
    "submission": "class Solution {\npublic:\n    const int mod = 1e9+7;\n    long long dp[2001][1002];\n    long long solve(int idx,int preva, vector<int>&nums){\n        if(idx>=nums.size()){\n            return 1; \n        } \n        if(dp[idx][preva]!=-1){\n            return dp[idx][preva]; \n        } \n        \n        int x=preva,y;\n        \n        if(preva==1001){\n            x = 0; \n            y = 1001;\n        } else{\n            x = preva; \n            y = nums[idx-1]-preva;\n        }\n        long long ans = 0;\n        int z = x;\n        \n        if(y!=1001){\n            z = max(x,(nums[idx]-y));\n        } \n        \n        for(int i=z;i<=nums[idx];++i){\n            int a = i; \n            int b = nums[idx]-i;\n            \n            if(b<0)break;\n                        \n            if(x<=a && y>=b){\n                ans+=solve(idx+1,a,nums); \n                ans%=mod;\n            }\n        } \n        return dp[idx][preva]=ans%mod;\n    }\n    int countOfPairs(vector<int>& nums) {\n        // for(int i=0;i<=nums.size();++i){\n        //     for(int j=0;j<1002;++j){\n        //         dp[i][j]=-1;\n        //     }\n        // }\n        // return solve(0,1001,nums); \n        int n = nums.size();\n        long long dp[nums.size()][1001];\n        memset(dp,0,sizeof(dp));\n        long long pref[nums.size()][1001];\n        memset(pref,0,sizeof(pref));\n        \n        for(int i=0;i<=nums[0];++i){\n            dp[0][i] = 1;\n            pref[0][i] =  1;\n        }  \n        pref[0][0]=dp[0][0]; \n        for(int j=1;j<1001;++j){\n            pref[0][j] += pref[0][j-1];\n            pref[0][j]%=mod;\n        }\n        \n        for(int i=1;i<n;++i){\n            for(int last=0;last<1001;++last){\n                int bidx = nums[i]-last; \n                if(bidx<0)break;\n                int z = last; \n                int y = nums[i-1]-bidx;\n                if(y<0)continue; \n                z = min(z,y);\n                dp[i][last]+=pref[i-1][z];\n                dp[i][last]%=mod;\n            } \n            pref[i][0] = dp[i][0]; \n            for(int j=1;j<1001;++j){\n                pref[i][j] = (dp[i][j] + pref[i][j-1])%mod;            \n            }\n        }  \n        \n        // for(int i=0;i<n;++i){\n        //     for(int j=0;j<6;++j){\n        //         cout<<dp[i][j]<<' '; \n        //     } \n        //     cout<<'\\n';\n        // }\n        // cout<<'\\n';\n        //  for(int i=0;i<n;++i){\n        //     for(int j=0;j<6;++j){\n        //         cout<<pref[i][j]<<' '; \n        //     } \n        //     cout<<'\\n';\n        // }\n        // cout<<'\\n';\n        long long ans = 0; \n        for(int i=0;i<=nums[n-1];++i){\n            ans+=dp[n-1][i];\n            ans%=mod; \n        } \n        return ans;\n    }\n};",
    "submit_ts": "1723346734",
    "subm_id": "1351584010"
}