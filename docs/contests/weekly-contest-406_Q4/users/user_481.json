{
    "username": "ShantanuTr7",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \"\"\"\n        Kruskal Algo\n        \"\"\"\n        cuts = [(cost, 'h') for cost in horizontalCut] + [(cost, 'v') for cost in verticalCut]\n        cuts.sort(reverse=True, key=lambda x: x[0])\n\n        h_pieces = 1\n        v_pieces = 1\n        total_cost = 0\n        \n        # Iterate through the sorted cuts\n        for cost, cut_type in cuts:\n            if cut_type == 'h':\n                # If it's a horizontal cut\n                total_cost += cost * v_pieces\n                h_pieces += 1\n            else:\n                # If it's a vertical cut\n                total_cost += cost * h_pieces\n                v_pieces += 1\n        \n        return total_cost\n        ",
    "submit_ts": "1720925562",
    "subm_id": "1320258850"
}