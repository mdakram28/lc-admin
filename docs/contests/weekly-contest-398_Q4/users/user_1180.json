{
    "username": "bigDeyta",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<pii> vpii;\n\n#define pb push_back\n#define eb emplace_back\n#define PRES(c, x) (c.find(x) != c.end())\n#define mod 1000000007\n#define all(x) x.begin(), x.end()\nclass Solution {\n    int nCr(int n, int r) {\n    // If r is greater than n, return 0\n    if (r > n) return 0;\n    // If r is 0 or equal to n, return 1\n    if (r == 0 || n == r) return 1;\n    // Initialize the logarithmic sum to 0\n    double res = 0;\n    // Calculate the logarithmic sum of the numerator and denominator using loop\n    for (int i = 0; i < r; i++) {\n        // Add the logarithm of (n-i) and subtract the logarithm of (i+1)\n        res += log(n-i) - log(i+1);\n    }\n    // Convert logarithmic sum back to a normal number\n    return (int)round(exp(res));\n}\npublic:\n    int waysToReachStair(int k) {\n        ll ans = 0;\n        k = k-1;\n        ll l = 0, cnt = 1;\n        while(l<=(1ll<<32)){\n            if(k>=l-cnt && k <= l)\n                ans += nCr(cnt, l-k);\n                \n            l = (l<<1) + 1;\n            cnt++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716090440.0
}