{
    "username": "yzkkai",
    "submission": "#define fi first\n#define se second\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n\n        vector<vector<pair<int, int>>> grid(n);\n        int lst = 1e9;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j)\n                grid[i].emplace_back(board[i][j], j);\n            sort(grid[i].rbegin(), grid[i].rend());\n\n            if (count(board[i].begin(), board[i].end(), grid[i][0].fi) >= 3)\n                for (int j = 0; j < 3; ++j)\n                    grid[i][j].se = lst++;\n        }\n\n        long long ans = -3e9;\n        map<int, vector<int>, greater<int>> mp;\n        map<int, int> mx;\n        for (int i = 1; i < n; ++i) {\n            for (int k = 0; k < 3; ++k) {\n                if (mx.count(grid[i - 1][k].se) && mx[grid[i - 1][k].se] >= grid[i - 1][k].fi)\n                    continue;\n                mx[grid[i - 1][k].se] = grid[i - 1][k].fi;\n                if (mp.count(grid[i - 1][k].fi) &&\n                    mp[grid[i - 1][k].fi][0] >= 1e9)\n                    continue;\n                if (grid[i - 1][k].se >= 1e9 ||\n                    mp[grid[i - 1][k].fi].size() + 1 >= 3) {\n                    mp[grid[i - 1][k].fi] = {1000000000};\n                    break;\n                }\n                mp[grid[i - 1][k].fi].emplace_back(grid[i - 1][k].se);\n            }\n\n            for (int j = i + 1; j < n; ++j) {\n                for (int a = 0; a < 3; ++a)\n                    for (int b = 0; b < 3; ++b) {\n                        int cnt = 0;\n                        for (const auto& k : mp) {\n                            for (int c = 0; c < min(20 - cnt, (int)k.se.size());\n                                 ++c) {\n                                if (grid[i][a].se == grid[j][b].se ||\n                                    grid[i][a].se == k.se[c] ||\n                                    grid[j][b].se == k.se[c])\n                                    continue;\n                                ans = max(ans, 1LL * grid[i][a].fi +\n                                                   grid[j][b].fi + k.fi);\n                                ++cnt;\n                                if (k.se[0] >= 1e9) {\n                                    cnt = 20;\n                                    break;\n                                }\n                            }\n                            if (cnt >= 20)\n                                break;\n                        }\n                    }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909872",
    "subm_id": "1359208897"
}