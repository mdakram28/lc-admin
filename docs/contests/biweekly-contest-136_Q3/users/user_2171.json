{
    "username": "nexgphoenix",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int row = grid.size() , col = grid[0].size() ;\n        int r = grid.size() , c = grid[0].size() ;\n        r /= 2 ;\n        c /= 2 ;\n        long long ans = 0 ;\n        for(int i = 0 ; i <= r - 1 ; i++){\n            for(int j = 0 ; j <= c - 1 ; j++){\n                vector<int> cnt(2) ;\n                int p = grid[i][j] , q = grid[i][col - j - 1] ;\n                int r = grid[row - i - 1][j] , s = grid[row - i - 1][col - j - 1] ;\n                cnt[p]++ ;\n                cnt[q]++ ;\n                cnt[r]++ ;\n                cnt[s]++ ;\n                if(cnt[1] >= 2){\n                    ans += (4 - cnt[1]) ;\n                }\n                else{\n                    ans += (4 - cnt[0]) ;\n                }\n            }\n        }\n        // cout << ans << endl ;\n        int cnt = 0 ;\n        int cnt1 = 0 ;\n        if(row % 2 == 1){\n            vector<int> v = grid[r] ;\n            int i = 0 , j = col - 1 ;\n            while(i < j){\n                cnt += (v[i] != v[j]) ;\n                ans += (v[i] != v[j]) ;\n                cnt1 += (v[i] + v[j] == 2) ;\n                i++ ;\n                j-- ;\n            }\n        }\n        if(col % 2 == 1){\n            vector<int> v ;\n            for(int i = 0 ; i <= row - 1 ; i++){\n                v.push_back(grid[i][c]) ;\n            }\n            int i = 0 , j = row - 1 ;\n            while(i < j){\n                cnt += (v[i] != v[j]) ;\n                ans += (v[i] != v[j]) ;\n                cnt1 += (v[i] + v[j] == 2) ;\n                i++ ;\n                j-- ;\n            }\n        }\n        int more = 0 ;\n        if(cnt == 0 && (cnt1 & 1)){\n            more = 2 ;\n        }\n        cout << ans << endl ;\n        cout << more << endl ;\n        int x = row % 2 ;\n        int y = col % 2 ;\n        if((x + y == 2) && grid[r][c] == 1){\n            ans++ ;\n        }\n        ans += more ;\n        return ans ;\n    }\n};",
    "submit_ts": "1722700292",
    "subm_id": "1343237423"
}