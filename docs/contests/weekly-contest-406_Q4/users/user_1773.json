{
    "username": "Mo_Adel",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int hIndex = 0, vIndex = 0;\n        int horizontalPieces = 1, verticalPieces = 1;\n        long long cost = 0;\n\n       \n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] > verticalCut[vIndex]) {\n                cost += horizontalCut[hIndex] * verticalPieces;\n                hIndex++;\n                horizontalPieces++;\n            } else {\n                cost += verticalCut[vIndex] * horizontalPieces;\n                vIndex++;\n                verticalPieces++;\n            }\n        }\n\n        \n        while (hIndex < horizontalCut.size()) {\n            cost += horizontalCut[hIndex] * verticalPieces;\n            hIndex++;\n        }\n\n       \n        while (vIndex < verticalCut.size()) {\n            cost += verticalCut[vIndex] * horizontalPieces;\n            vIndex++;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720925548",
    "subm_id": "1320258388"
}