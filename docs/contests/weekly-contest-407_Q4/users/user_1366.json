{
    "username": "pascalstriangle",
    "submission": "#include <vector>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int length = nums.size();\n        vector<long long> difference(length);\n\n        for (int idx = 0; idx < length; idx++) {\n            difference[idx] = (long long)target[idx] - nums[idx];\n        }\n\n        long long totalOperations = 0;\n        long long currentDiff = 0;\n\n        for (int i = 0; i < length; i++) {\n            if (i == 0 || (difference[i - 1] > 0 && difference[i] > 0) || (difference[i - 1] < 0 && difference[i] < 0)) {\n                long long additionalOperations = abs(difference[i]) - abs(currentDiff);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n                currentDiff = difference[i];\n            } else {\n                totalOperations += abs(difference[i]);\n                currentDiff = difference[i];\n            }\n        }\n\n        int dcounter = 0;\n        for (int j = 0; j < 10; j++) {\n            dcounter += j;\n        }\n\n        return totalOperations;\n    }\n};\n",
    "submit_ts": "1721532776",
    "subm_id": "1327993828"
}