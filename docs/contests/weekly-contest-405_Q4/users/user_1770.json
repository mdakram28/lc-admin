{
    "username": "gsaivishal",
    "submission": "#define inf INT_MAX\n\nstruct TrieNode {\n    TrieNode* child[26];\n    int cost;\n\n    TrieNode() {\n        for(int i = 0; i < 26; i++) child[i] = NULL;\n        cost = inf;\n    }\n};\n\nclass Solution {\nprivate:\n    TrieNode* root;\n\n    void insert(auto& word, auto& cost) {\n        TrieNode* temp = root;\n        for(auto& letter : word) {\n            int index = letter - 'a';\n            if(!temp->child[index])\n                temp->child[index] = new TrieNode();\n            temp = temp->child[index];\n        }\n        temp->cost = min(temp->cost, cost);\n    }\n\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root = new TrieNode();\n        for(int i = 0; i < words.size(); i++)\n            insert(words[i], costs[i]);\n        \n        int n = target.size();\n        vector<int> dp(n + 1, inf);\n        dp[n] = 0;\n\n        for(int start = n - 1; start >= 0; start--) {\n            TrieNode* temp = root;\n            for(int end = start; end < n; end++) {\n                int index = target[end] - 'a';\n                temp = temp->child[index];\n\n                if(!temp) break;\n\n                if(temp->cost == inf || dp[end + 1] == inf)\n                    continue;\n                \n                dp[start] = min(dp[start], temp->cost + dp[end + 1]);\n            }\n        }\n\n        return dp[0] == inf ? -1 : dp[0];\n    }\n};",
    "submit_ts": "1720324146",
    "subm_id": "1312392659"
}