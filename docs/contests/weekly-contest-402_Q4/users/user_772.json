{
    "username": "lostTreasure",
    "submission": "struct segtree{\n    vector<int>t;\n    void init(int n){\n        t.resize(4*n+2,0);\n    }\n    void build(int a[],int v,int tl,int tr){\n        if(tl==tr){\n            t[v]=a[tl];\n        }\n        else{\n            int tm=(tl+tr)/2;\n            build(a,2*v,tl,tm);\n            build(a,2*v+1,tm+1,tr);\n            t[v]=(t[2*v]+t[2*v+1]);\n        }\n    }\n    void update(int v,int tl,int tr,int pos,int nval){\n        if(tl==tr){\n            t[v]=nval;\n        }\n        else{\n            int tm=(tl+tr)/2;\n            if(pos<=tm) update(2*v,tl,tm,pos,nval);\n            else{\n                update(2*v+1,tm+1,tr,pos,nval);\n            }\n            t[v]=(t[2*v]+t[2*v+1]);\n        }\n    }\n    int query(int v,int tl,int tr,int l,int r){\n        if(l>r)return 0;\n        else if(l==tl && r==tr){\n            return t[v];\n        }\n        else{\n            int tm=(tl+tr)/2;\n            return (query(2*v,tl,tm,l,min(tm,r))+query(2*v+1,tm+1,tr,max(tm+1,l),r));\n        }\n    }\n\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& query) {\n        int n=v.size();\n        segtree tobe;tobe.init(n);\n        vector<int>np(n);\n        for(int i=1;i<n-1;i++){\n            if(v[i]>v[i-1] && v[i]>v[i+1]){\n                tobe.update(1,0,n-1,i,1);\n                np[i]=1;\n            }\n        }\n        vector<int>ans;\n        for(auto &e:query){\n            if(e[0]==1){\n                ans.push_back(tobe.query(1,0,n-1,min(n-1,e[1]+1),max(0,e[2]-1)));\n            }\n            else{\n                int idx=e[1],val=e[2];\n                v[idx]=val;\n                if(idx-1>=0 && idx+1<n && v[idx]>v[idx-1] && v[idx]>v[idx+1]){\n                    tobe.update(1,0,n-1,idx,1);\n                    np[idx]=1;\n                }\n                else{\n                    tobe.update(1,0,n-1,idx,0);\n                    np[idx]=0;\n                }\n                if(idx-1>=1){\n                    if(v[idx-1]>v[idx] && v[idx-1]>v[idx-2]){\n                        tobe.update(1,0,n-1,idx-1,1);\n                        np[idx-1]=1;\n                    }\n                    else{\n                        tobe.update(1,0,n-1,idx-1,0);\n                        np[idx-1]=0;\n                    }\n                }\n                if(idx+2<n){\n                    if(v[idx+1]>v[idx+2] && v[idx+1]>v[idx]){\n                        tobe.update(1,0,n-1,idx+1,1);\n                        np[idx+1]=1;\n                    }\n                    else{\n                        tobe.update(1,0,n-1,idx+1,0);\n                        np[idx+1]=0;\n                    }\n                }\n            }\n            // dbg(np);dbg(v);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507526.0
}