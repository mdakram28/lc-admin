{
    "username": "Utkarsh_Maurya",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n         int numRows = board.size();\nint numCols = board[0].size();\nlong long maximumSum = LLONG_MIN;\nvector<vector<long long>> topValues(numRows, vector<long long>(3, LLONG_MIN));\nvector<vector<int>> topColumns(numRows, vector<int>(3, -1));\n\nfor (int row = 0; row < numRows; ++row) {\n    vector<pair<long long, int>> columnValues;\n    for (int col = 0; col < numCols; ++col) {\n        columnValues.emplace_back(board[row][col], col);\n    }\n    sort(columnValues.rbegin(), columnValues.rend());\n\n    for (int index = 0; index < 3 && index < numCols; ++index) {\n        topValues[row][index] = columnValues[index].first;\n        topColumns[row][index] = columnValues[index].second;\n    }\n}\n\n// Try all combinations of all 3 different rows.\nfor (int row1 = 0; row1 < numRows; ++row1) {\n    for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n        for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n            for (int i = 0; i < 3; ++i) {\n                for (int j = 0; j < 3; ++j) {\n                    if (topColumns[row2][j] == topColumns[row1][i]) continue;\n                    for (int k = 0; k < 3; ++k) {\n                        if (topColumns[row3][k] == topColumns[row1][i] || topColumns[row3][k] == topColumns[row2][j]) continue;\n\n                        long long currentSum = topValues[row1][i] + topValues[row2][j] + topValues[row3][k];\n                        maximumSum = max(maximumSum, currentSum);\n                    }\n                }\n            }\n        }\n    }\n}\n\nreturn maximumSum;\n    }\n    };",
    "submit_ts": "1723910367",
    "subm_id": "1359227764"
}