{
    "username": "harshitchauhan3",
    "submission": "class Solution {\npublic:\n    long long NcR(long long n, long long r)\n    {\n        // p holds the value of n*(n-1)*(n-2)...,\n        // k holds the value of r*(r-1)...\n        long long p = 1, k = 1;\n\n        // C(n, r) == C(n, n-r),\n        // choosing the smaller value\n        if (n - r < r)\n            r = n - r;\n\n        if (r != 0) {\n            while (r) {\n                p *= n;\n                k *= r;\n\n                // gcd of p, k\n                long long m = __gcd(p, k);\n\n                // dividing by gcd, to simplify\n                // product division by their gcd \n                // saves from the overflow\n                p /= m;\n                k /= m;\n\n                n--;\n                r--;\n            }\n\n            // k should be simplified to 1\n            // as C(n, r) is a natural number\n            // (denominator should be 1 ) .\n        }\n\n        else\n            p = 1;\n        \n        return p;\n    }\n    int waysToReachStair(int k) {\n        long long ans=0;\n        long long sum=0;\n        long long j=-1;\n        long long p=1;\n        while(true)\n        {\n            long long diff=(1+sum)-k;\n            cout<<diff<<j+2<<\" \";\n            if(diff>=0)\n            {\n                if(diff<=j+2)\n                    ans+=NcR(j+2,diff);\n                else\n                    break;\n            }\n            j++;\n            sum+=p;\n            p*=2LL;\n        }\n        return (int)ans;\n    }\n};",
    "submit_ts": 1716090385.0
}