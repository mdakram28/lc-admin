{
    "username": "Hardik2972",
    "submission": "class Solution {\npublic:\n    int diameter(int i,int parent,vector<int> adj[],int& ans){\n        int maxi1=0,maxi2=0;\n        for(int j=0;j<adj[i].size();j++){\n            \n            if(adj[i][j]!=parent){\n                int temp = diameter(adj[i][j],i,adj,ans);\n                if(temp>=maxi1){\n                    maxi2 = maxi1;\n                    maxi1 = temp;\n                }\n                else if(temp>=maxi2){\n                    maxi2 = temp;\n                }\n            }\n        }\n        ans = max(ans,maxi1+maxi2);\n        return maxi1+1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int ans = 0;\n        int n = edges1.size();\n        vector<int> adj1[n+1];\n        for(int i=0;i<edges1.size();i++){\n            adj1[edges1[i][0]].push_back(edges1[i][1]);\n            adj1[edges1[i][1]].push_back(edges1[i][0]);\n        }\n        int m = edges2.size();\n        vector<int> adj2[m+1];\n        for(int i=0;i<edges2.size();i++){\n            adj2[edges2[i][0]].push_back(edges2[i][1]);\n            adj2[edges2[i][1]].push_back(edges2[i][0]);\n        }\n        int first = max(diameter(0,-1,adj1,ans)-1,ans);\n        ans = 0;\n        int second = max(diameter(0,-1,adj2,ans)-1,ans);\n        ans = ceil(first/2.0) + ceil(second/2.0) + 1;\n        // cout<<first<<\"  \"<<second<<endl;\n        return max({ans,first,second});\n    }\n};",
    "submit_ts": 1719719728.0
}