{
    "username": "sohailkasmani007",
    "submission": "int tree[400005];\nvoid build(int node,int st,int e,vector<int> &v){\n    if(st==e){\n        tree[node]=v[st];\n        return ;\n    }\n    int mid=(st+e)/2;\n    build(node*2+1,st,mid,v);\n    build(node*2+2,mid+1,e,v);\n    tree[node]=tree[2*node+1]&tree[2*node+2];\n    \n}\nint query(int node,int st,int e,int l,int r){\n    if(st>=l && e<=r) return tree[node];\n    if(r<st || l>e) return INT_MAX;\n    int mid=(st+e)/2;\n    return query(node*2+1,st,mid,l,r)&query(node*2+2,mid+1,e,l,r);\n}\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans=0;\n        build(0,0,nums.size()-1,nums);\n        // cout<<query(0,0,nums.size()-1,0,nums.size()-1)<<endl;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<k) continue;\n            else if(nums[i]==k){\n                int lo=i;\n                int hi=nums.size()-1;\n                while(hi-lo>1){\n                    int mid=lo+(hi-lo)/2;\n                    if(query(0,0,nums.size()-1,i,mid)>=k) lo=mid+1;\n                    else hi=mid;\n                }\n                int smaller=0;\n                if(query(0,0,nums.size()-1,i,lo)<k) smaller=lo;\n                else if(query(0,0,nums.size()-1,i,hi)<k) smaller=hi;\n                else smaller=nums.size();\n                ans+=(smaller-i);\n                // cout<<query(0,0,nums.size()-1,0,0)<<endl;\n            }\n            else{\n                int lo=i;\n                int hi=nums.size()-1;\n                while(hi-lo>1){\n                    int mid=lo+(hi-lo)/2;\n                    if(query(0,0,nums.size()-1,i,mid)>k) lo=mid;\n                    else hi=mid-1;\n                }\n                int greater=0;\n                int smaller=0;\n                if(query(0,0,nums.size()-1,i,hi)>k) greater=hi;\n                else greater=lo;\n                lo=i;\n                hi=nums.size()-1;\n                while(hi-lo>1){\n                    int mid=lo+(hi-lo)/2;\n                    if(query(0,0,nums.size()-1,i,mid)>=k) lo=mid;\n                    else hi=mid;\n                }\n                if(query(0,0,nums.size()-1,i,lo)<k) smaller=lo;\n                else if(query(0,0,nums.size()-1,i,hi)<k) smaller=hi;\n                else smaller=nums.size();\n                ans+=(smaller-greater-1);\n                \n            }\n            \n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281001",
    "subm_id": "1311809635"
}