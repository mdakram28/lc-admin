{
    "username": "Aman_G011",
    "submission": "#define mod 1000000007\n\nclass Solution {\npublic:\n    vector<vector<int>> seg;\n\n    void build(int ind, int low, int high, vector<int> &v){\n        if(low == high){\n            seg[ind][0] = v[low];\n            return;\n        }\n        int mid = (low + high) / 2;\n        build(2*ind+1, low, mid, v);\n        build(2*ind+2, mid+1, high, v);\n\n        vector<int> arr1 = seg[2*ind+1];\n        vector<int> arr2 = seg[2*ind+2];\n        seg[ind][0] = (max({arr1[2] + arr2[1], arr1[0] + arr2[1], arr1[2] + arr2[0]})) % mod;\n        seg[ind][1] = (max({arr1[3] + arr2[1], arr1[1] + arr2[1], arr1[3] + arr2[0]})) % mod;\n        seg[ind][2] = (max({arr1[2] + arr2[3], arr1[0] + arr2[3], arr1[2] + arr2[2]})) % mod;\n        seg[ind][3] = (max({arr1[3] + arr2[3], arr1[1] + arr2[3], arr1[3] + arr2[2]})) % mod;\n    }\n\n    void update(int ind, int low, int high, int to_up, int x,  vector<int> &v){\n        if(low == high){\n            if(low != to_up) return;\n            seg[ind][0] = x;\n            return;\n        }\n        int mid = (low + high) / 2;\n        if(to_up >= low && to_up <= mid) update(2 * ind+1, low, mid, to_up, x, v);\n        else update(2*ind+2, mid+1, high, to_up, x, v);\n\n        vector<int> arr1 = seg[2*ind+1];\n        vector<int> arr2 = seg[2*ind+2];\n        seg[ind][0] = (max({arr1[2] + arr2[1], arr1[0] + arr2[1], arr1[2] + arr2[0]})) % mod;\n        seg[ind][1] = (max({arr1[3] + arr2[1], arr1[1] + arr2[1], arr1[3] + arr2[0]})) % mod;\n        seg[ind][2] = (max({arr1[2] + arr2[3], arr1[0] + arr2[3], arr1[2] + arr2[2]})) % mod;\n        seg[ind][3] = (max({arr1[3] + arr2[3], arr1[1] + arr2[3], arr1[3] + arr2[2]})) % mod;\n    }\n\n\n    int maximumSumSubsequence(vector<int>& v, vector<vector<int>>& queries) {\n        int n = v.size();\n        seg.resize(4*n+4, vector<int> (4, 0));\n        build(0, 0, n-1, v);\n        // cout<<seg[0][0]<<' '<<seg[0][1]<<' '<<seg[0][2]<<' '<<seg[0][3];\n        int q = queries.size();\n        int ans = 0;\n        for(int i = 0 ; i <q ; i++){\n            int ind = queries[i][0] , x = queries[i][1];\n            update(0, 0, n-1, ind, x, v);\n            // cout<<seg[0][0]<<' '<<seg[0][1]<<' '<<seg[0][2]<<' '<<seg[0][3]<<endl;\n            ans = (ans + max({seg[0][0], seg[0][1], seg[0][2], seg[0][3]})) % mod;\n            \n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1716695959",
    "subm_id": "1268147337"
}