{
    "username": "Time-limit-exceed",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        // when k is 1\n        if(n==1){\n            for(int i=9;i>0;i--){\n                if(i%k==0)  return to_string(i);\n            }\n            // return to_string(k);\n        }\n        // when k is 1 or 3 or 9\n        if(k==1 || k==3 || k==9){\n            string s(n, '9');\n            return s;\n        }\n        // when k is 2\n        if(k==2){\n            string s(n, '9');\n            s[0] = '8';\n            s[n-1] = '8';\n            return s;\n        }\n        // when k is 4\n        if(k==4){\n            string s(n, '9');\n            s[0] = '8';\n            s[n-1] = '8';\n            if(n>=2){\n                s[1] = '8';\n                s[n-2] = '8';\n            }\n            return s;\n        }\n        // when k is 8\n        if(k==8){\n            string s(n, '9');\n            s[0] = '8';\n            s[n-1] = '8';\n            if(n>=2){\n                s[1] = '8';\n                s[n-2] = '8';\n            }\n            if(n>=3){\n                s[2] = '8';\n                s[n-3] = '8';\n            }\n            return s;\n        }\n        // when k is 5\n        if(k==5){\n            string s(n, '9');\n            s[0] = '5';\n            s[n-1] = '5';\n            return s;\n        }\n        string s(n, '9');\n        int rem = 0;\n        // when k is 6\n        if(k==6){\n            s[0] = '8';\n            s[n-1] = '8';\n            if(n==2){\n                return \"66\";\n            }\n            \n            // calculate the remainder of current number when divided by k, minus *000000...0001100...00000* from the it until it is divisible by 6\n            // first calculate the remainder of current number when divided by k\n            rem = 8;\n            for(int i=0; i<n-2; i++){\n                rem = (rem*10 + 9)%k;\n            }\n            rem = (rem*10 + 8)%k;\n        }\n        else{\n            s[0] = '9';\n            s[n-1] = '9';\n            if(n==2){\n                return \"77\";\n            }\n            \n            // calculate the remainder of current number when divided by k, minus *000000...0001100...00000* from the it until it is divisible by 6\n            // first calculate the remainder of current number when divided by k\n            rem = 9;\n            for(int i=0; i<n-2; i++){\n                rem = (rem*10 + 9)%k;\n            }\n            rem = (rem*10 + 9)%k;\n        }\n        // cout<<rem<<endl;\n        bool neven = n%2==0;\n        // now subtract *000000...0001100...00000* in terms of the remainder of 6 from the number until it is divisible by 6\n        int cnt = 0;\n        int sub = 1;\n        for(int i=0;i<(n-1)/2; i++){\n            sub = (sub*10)%k;\n        }\n        if(neven){\n            sub = (sub *10 + sub)%k;\n        }\n        // cout<<sub<<endl;\n        while(rem!=0){\n            rem = (rem - sub + k)%k;\n            cnt++;\n        }\n        // cout<<cnt<<endl;\n\n        // add the subtracted number to the number\n        s[n/2] = '9'-cnt;\n        if(n%2==0){\n            s[n/2-1] = '9'-cnt;\n        }\n        return s;\n    }\n};",
    "submit_ts": "1723952955",
    "subm_id": "1359808769"
}