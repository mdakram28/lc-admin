{
    "username": "Xuan-Tho Nguyen",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n == 1:\n            return str((9 // k) * k)\n        if k == 1  or k == 3 or k == 9:\n            return '9' * n\n        if k == 2:\n            return '8' + '9' * (n - 2) + '8'\n        if k == 4:\n            if n <= 3:\n                return '8' * n\n            return '88' + '9' * (n - 4) + '88'\n        if k == 8:\n            if n <= 5:\n                return '8' * n\n            return '888' + '9' * (n - 6) + '888'\n        if k == 5:\n            return '5' + '9' * (n - 2) + '5'\n        if k == 6:\n            if n % 2:\n                return '8' + '9' * (n // 2 - 1) + '8' + '9' * (n // 2 - 1) + '8'\n            else:\n                if n == 2:\n                    return '66'\n                part = '9' * (n // 2 - 2)\n                return '8' + part + '77' + part + '8'\n        if n <= 2:\n            return '7' * n\n        if n % 2:\n            half = n // 2\n            part = '9' * (half // 6) * 6\n            if half % 6 == 0:\n                return part + '7' + part\n            if half % 6 == 1:\n                return part + '959' + part\n            if half % 6 == 2:\n                return part + '99799' + part\n            if half % 6 == 3:\n                return part + '9994999' + part\n            if half % 6 == 4:\n                return part + '999969999' + part\n            if half % 6 == 5:\n                return part + '99999499999' + part\n        else:\n            half = n // 2 - 1\n            part = '9' * (half // 6) * 6\n            if half % 6 == 0:\n                return part + '77' + part\n            if half % 6 == 1:\n                return part + '9779' + part\n            if half % 6 == 2:\n                return part + '999999' + part\n            if half % 6 == 3:\n                return part + '99944999' + part\n            if half % 6 == 4:\n                return part + '9999449999' + part\n            if half % 6 == 5:\n                return part + '999999999999' + part\n\n# 1 1\n# 10 3\n# 100 2\n\n# 1 7\n# 2 77\n# 3 959\n# 4 9779\n# 5 99799\n# 6 999999\n# 7 9994999\n# 8 99944999\n# 9 999969999\n\n# 9 2\n# 90 6\n# 900 4\n# 9000 5\n# 90000 1\n# 900000 3\n",
    "submit_ts": "1723952933",
    "subm_id": "1359808219"
}