{
    "username": "prathamt12345",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \n        horiCut = [-num for num in horizontalCut]\n        vertiCut = [-num for num in verticalCut]\n        heapq.heapify(horiCut)\n        heapq.heapify(vertiCut)\n        horiPieces, vertiPieces = 1, 1\n        answer = 0\n\n        while horiCut and vertiCut:\n            if -horiCut[0] > -vertiCut[0]:\n                answer += -heapq.heappop(horiCut) * horiPieces\n                vertiPieces += 1\n            else:\n                answer += -heapq.heappop(vertiCut) * vertiPieces\n                horiPieces += 1\n\n        while horiCut:\n            answer += -heapq.heappop(horiCut) * horiPieces\n\n        while vertiCut:\n            answer += -heapq.heappop(vertiCut) * vertiPieces\n            \n        return answer",
    "submit_ts": "1720925872",
    "subm_id": "1320268930"
}