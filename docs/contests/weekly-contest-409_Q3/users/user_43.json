{
    "username": "Ryazimn",
    "submission": "const int N = 1e5 + 1;\ntypedef long long ll;\nclass Solution {\npublic:\n    struct node{\n        ll val=0,lazy=-1;\n    }seg[N*4];\n    void push(int l,int r,int x){\n        if(seg[x].lazy!=-1){\n            seg[x].val=seg[x].lazy*(ll)(r-l+1);\n            if(l!=r){\n                seg[x*2+1].lazy=seg[x].lazy;\n                seg[x*2+2].lazy=seg[x].lazy;\n            }\n            seg[x].lazy=-1;\n        }\n    }\n    void mul(int x,int st,int ed,int l,int r,int v){\n        push(st,ed,x);\n        if(ed<l||st>r) return;\n        if(l<=st&&ed<=r){\n            seg[x].lazy=v;\n            push(st,ed,x);\n            return;\n        }\n        mul(x*2+1,st,(st+ed)/2,l,r,v);\n        mul(x*2+2,(st+ed)/2+1,ed,l,r,v);\n        seg[x].val=seg[x*2+1].val+seg[x*2+2].val;\n    }\n    ll get(int x,int st,int ed,int l,int r){\n        push(st,ed,x);\n        if(ed<l||st>r) return 0;\n        if(l<=st&&ed<=r) return seg[x].val;\n        return get(x*2+1,st,(st+ed)/2,l,r)+get(x*2+2,(st+ed)/2+1,ed,l,r);\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> ans;\n        mul(0, 0, n - 1, 0, n - 2, 1);\n        for (vector<int> i: q) {\n            int l = i[0], r = i[1];\n            mul(0, 0, n - 1, l, r - 2, 0);\n            ans.push_back(get(0, 0, n - 1, 0, n - 1));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740711",
    "subm_id": "1343726869"
}