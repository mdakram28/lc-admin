{
    "username": "AkashGupta_123",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> adj1, adj2;\n    int maxd=-1,maxNode=-1;\n    int max(int a,int b){\n        if(a>b)return a;\n        return b;\n    }\n    void dfs(int node, int par,int d, vector<vector<int>>& adj) {\n        if(maxd<d){\n            maxd=d;\n            maxNode=node;\n        }\n        for(auto child:adj[node]){\n            if(child==par)continue;\n            dfs(child,node,d+1,adj);\n        }\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size() + 1;\n        int m = edges2.size() + 1;\n        adj1.resize(n);\n        adj2.resize(m);\n        \n        for (auto& edge : edges1) {\n            adj1[edge[0]].push_back(edge[1]);\n            adj1[edge[1]].push_back(edge[0]);\n        }\n        for (auto& edge : edges2) {\n            adj2[edge[0]].push_back(edge[1]);\n            adj2[edge[1]].push_back(edge[0]);\n        }\n        \n        dfs(0,-1,0,adj1);\n        int end1=maxNode;\n        maxNode=-1,maxd=-1;\n        dfs(end1,-1,0,adj1);\n        int d1=maxd;\n        maxNode=-1,maxd=-1;\n        dfs(0,-1,0,adj2);\n        int end=maxNode;\n        maxNode=-1,maxd=-1;\n        dfs(end,-1,0,adj2);\n        int d2=maxd;\n        cout<<d1<<\" \"<<d2<<\"\\n\";\n        \n        int ans=max(d1,d2);\n        int x=(d1+1)/2+(d2+1)/2;\n        ans=max(ans,x+1);\n        return ans;\n    }\n};",
    "submit_ts": "1719719551",
    "subm_id": "1304444742"
}