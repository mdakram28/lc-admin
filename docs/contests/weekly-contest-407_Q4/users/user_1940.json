{
    "username": "MalharGadge",
    "submission": "typedef long double lld;\ntypedef long long ll;\n#define fr(a,b,i) for (ll i=a;i<b;i++)\n#define rfr(a,b,i) for(ll i=a;i>=b;i--)\n#define rep(i,n) fr(0,n,i)\n#define ff first\n#define ss second\n#define pb push_back\n#define endl '\\n'\n#define inf LLONG_MAX\n#define all(c) (c).begin(), (c).end()\nconst ll mod = 1000000007;\n\ntemplate <typename T>\nvoid chmin(T &f, T s){ f = min(f, s); }\ntemplate <typename T>\nvoid chmax(T &f, T s){ f = max(f, s); }\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0)\n{if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nll modinv(ll a, ll b) {return expo(a, b - 2, b);}\nll modadd(ll a, ll b, ll m) { return ( a % m + b % m) % m;}\nll modmul(ll a, ll b, ll m) { return ( a % m * b % m) % m;}\nll modsub(ll a, ll b, ll m) { return ((a%m - b%m)+ m) % m;}\nll moddiv(ll a, ll b, ll m) { return modmul(a, modinv(b, m), m) % m ;}\n\n\nclass Solution {\npublic:\n    ll minimumOperations(vector<int>& nums, vector<int>& target) {\n        ll n = nums.size();\n        vector<ll> difs;\n        rep(i, n) {\n            difs.pb(target[i] - nums[i]);\n        }\n\n        ll ans = abs(difs[0]), last = difs[0];\n        ll lastpos = -1, lastneg = -1;\n        if(difs[0] >= 0) lastpos = 0;\n        else lastneg = 0;\n        \n        fr(1, n, i){\n            if((difs[i] >= 0 and lastpos == i-1)){\n                ll temp = difs[i] - abs(last);\n                ans += max(0ll, temp);\n                lastpos = i;\n            }\n            else if(difs[i] < 0 and lastneg == i-1){\n                ll temp = abs(difs[i]) - abs(last);\n                ans += max(0ll, temp);\n                lastneg = i;\n            }\n            else{\n                ans += abs(difs[i]);\n            }\n            \n            last = difs[i];\n            if(last >= 0) lastpos = i;\n            else lastneg = i;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533490",
    "subm_id": "1328010156"
}