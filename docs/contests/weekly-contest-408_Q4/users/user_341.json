{
    "username": "dush1729",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\n\nstruct DSU {\n\tint count, maxsize;\n\tstruct node {\n\t\tint parent, size, l, r, u, d;\n\t\tnode(int id = 0): parent(id), size(1) {}\n\t};\n\tvector <node> data;\n\n\tDSU(int SZ = 0): count(SZ), maxsize(1), data(SZ + 1) {iota(data.begin(), data.end(), 0);}\n\tint root(int i) {return i == data[i].parent ? i : root(data[i].parent);}\n\tbool is_root(int i) {return i == root(i);}\n\tbool cycle(int a, int b) {return root(a) == root(b);}\n\tint set_size(int a) {return data[root(a)].size;}\n\n\tbool join(int a, int b) {\n\t\ta = root(a), b = root(b);\n\t\tif(a == b) return false;\n\n\t\tcount--;\n\t\tif(data[a].size < data[b].size) swap(a, b);\n\t\tdata[b].parent = a, data[a].size += data[b].size, maxsize = max(maxsize, data[a].size);\n\t\tdata[a].l = min(data[a].l, data[b].l);\n\t\tdata[a].r = max(data[a].r, data[b].r);\n\t\tdata[a].u = min(data[a].u, data[b].u);\n\t\tdata[a].d = max(data[a].d, data[b].d);\n\n\t\treturn true;\n\t}\n};\n\nclass Solution {\npublic:\n\tbool intersect(ll x1, ll y1, ll r1, ll x2, ll y2, ll r2) {\n\t\treturn (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) <= (r1 + r2) * (r1 + r2);\n\t}\n\tbool canReachCorner(int X, int Y, vector<vector<int>>& a) {\n\t\tint n = a.size();\n\t\tauto dsu = DSU(n);\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tdsu.data[i].l = a[i][0] - a[i][2];\n\t\t\tdsu.data[i].r = a[i][0] + a[i][2];\n\t\t\tdsu.data[i].u = a[i][1] - a[i][2];\n\t\t\tdsu.data[i].d = a[i][1] + a[i][2];\n\t\t}\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int j = i + 1; j < n; j++) {\n\t\t\t\tif(intersect(a[i][0], a[i][1], a[i][2], a[j][0], a[j][1], a[j][2])) {\n\t\t\t\t\tdsu.join(i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tauto d = dsu.root(i);\n\t\t\tif(dsu.data[d].l <= 0 && dsu.data[d].r >= 0 && dsu.data[d].u <= 0 && dsu.data[d].d >= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(dsu.data[d].l <= X && dsu.data[d].r >= X && dsu.data[d].u <= Y && dsu.data[d].d >= Y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(dsu.data[d].l <= 0 && dsu.data[d].r >= X) return false;\n\t\t\tif(dsu.data[d].u <= 0 && dsu.data[d].d >= Y) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\n\n#ifdef DUSH1729\nint main(){cout << \"Compiled!\";}\n#endif",
    "submit_ts": "1722136764",
    "subm_id": "1335744268"
}