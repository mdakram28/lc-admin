{
    "username": "Ha Tran",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        int h = (n - 1) / 2;\n        StringBuilder ans = new StringBuilder();\n        if (n == 1) {\n            for (int i = 9; i >= 0; i--) {\n                if (i % k == 0)\n                    return i + \"\";\n            }\n        }\n        if (n == 2) {\n            for (int i = 99; i > 10; i -= 11) {\n                if (i % k == 0)\n                    return i + \"\";\n            }\n        }\n        int sum = 0;\n        if (k == 2 || k == 4 || k == 6 || k == 8) {\n            ans.append(8);\n            sum += 8;\n        } else if (k == 5) {\n            ans.append(5);\n            sum += 5;\n        }\n        if ((k == 4 || k == 8) && n >= 2) {\n            ans.append(8);\n            sum += 8;\n            if (n == 2)\n                return ans.toString();\n        }\n\n        if (k == 8 && n >= 3) {\n            ans.append(8);\n            sum += 8;\n            if (n == 3)\n                return ans.toString();\n            if (n == 4)\n            return \"8888\";\n            if (n==5)\n            return \"88888\";\n        }\n        // System.out.println(ans + \" \" +ans.length() + \" \" + h);\n        while (ans.length() < h + 1) {\n            if (ans.length() < h) {\n                ans.append(9);\n                sum += 9;\n            } else if (ans.length() == h) {\n                if (k == 3 || k == 6) {\n                    int mod = (sum * 2) % 3;\n                    if (n % 2 == 1)\n                        ans.append(9 - mod);\n                    else {\n                        if (mod == 0)\n                            ans.append(9);\n                        else if (mod == 1)\n                            ans.append(7);\n                        else\n                            ans.append(8);\n                    }\n                } else if (k == 9) {\n                    int mod = (sum * 2) % k;\n                    if (n % 2 == 1)\n                        ans.append(9 - mod);\n                    else {\n                        if (mod == 0)\n                            ans.append(9);\n                        else\n                            ans.append((9 - mod) / 2);\n                    }\n                } else if (k == 7) {\n                    //System.out.println(ans);\n                    ans.append(9);\n                    int pos = ans.length()-1;\n                    int p = (n % 2 == 0 ? h : h - 1);\n                    for (; p >= 0; p--) {\n                        ans.append(ans.charAt(p));\n                    }\n                    for (int i = 9; i >= 0; i--) {\n                        ans.setCharAt(pos, (char) ('0' + i));\n                        if (n % 2 == 0) {\n                            ans.setCharAt(pos+1, (char) ('0' + i));\n                        }\n                        if (divisibleBy7(ans)) {\n                            return ans.toString();\n                        }\n                    }\n                } else {\n                    ans.append(9);\n                }\n            }\n        }\n        if (k == 7) {\n            return ans.toString();\n        }\n        // System.out.println(divisibleBy7(new StringBuilder(\"989\")));\n        int p = (n % 2 == 0 ? h : h - 1);\n        for (; p >= 0; p--) {\n            ans.append(ans.charAt(p));\n        }\n        return ans.toString();\n    }\n\n    private boolean divisibleBy7(StringBuilder n) {\n        int c = 0;\n        // System.out.println(n.length());\n\n        for (int i = 0; i < n.length(); i++) {\n            int cur = n.charAt(i) - '0';\n            if (i == 0 && cur < 7) {\n                c = cur;\n            } else\n                c = (c * 10 + cur) % 7;\n            // System.out.println(i + \" \" + c);\n        }\n        return c == 0;\n    }\n}",
    "submit_ts": "1723953177",
    "subm_id": "1359814399"
}