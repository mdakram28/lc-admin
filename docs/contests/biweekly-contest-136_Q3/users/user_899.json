{
    "username": "feindreh",
    "submission": "/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar minFlips = function(grid) {\n    const xl = grid.length-1\n    const yl = grid[0].length-1\n\n    const getCords = (x,y) => {\n        const a = [x,y]\n        const b = [x,yl-y]\n        const c = [xl-x,y]\n        const d = [xl-x,yl-y]\n        return [a,b,c,d]\n    }\n    const doubles = []\n    let res = 0\n    const quad = (c) => {\n        let ones = 0\n        for(let i = 0;i<c.length;i++){\n            const [x,y] = c[i]\n            ones += grid[x][y]\n        }\n        if(ones === 0 || ones === 4){res += 0}\n        if(ones === 1 || ones === 3){res += 1}\n        if(ones === 2){res += 2}\n    }\n    const double = (c) => {\n        let ones = 0\n        for(let i = 0;i<c.length;i++){\n            const [x,y] = c[i]\n            ones += grid[x][y]\n        }\n        doubles.push(ones/2)\n    }\n    const single = (c) => {\n        res += grid[c[0][0]][c[0][1]]\n    }\n    for(let x = 0;x<grid.length;x++){\n        for(let y = 0;y<grid[x].length;y++){\n            if(grid[x][y] === null){continue}\n            const cords = getCords(x,y)\n            const set = new Set(cords.map((a) => a.join(\"-\")))\n            if(set.size === 4){quad(cords)}\n            if(set.size === 2){double(cords)}\n            if(set.size === 1){single(cords)}\n            grid[x][y] = null\n            grid[x][yl-y] = null\n            grid[xl-x][y] = null\n            grid[xl-x][yl-y] = null\n        }\n    }\n    const dp = {}\n    const dynamo = (index,k)=>{\n        if(index >= doubles.length){\n            if(k === 0){return 0}\n            return 1/0\n        }\n        if(dp[index] === undefined){dp[index] = {}}\n        if(dp[index][k] !== undefined){return dp[index][k]}\n        let best = 1/0\n        for(let i = 0;i<=2;i+=2){\n            best = Math.min(best,dynamo(index+1,(k+i)%4)+Math.abs(doubles[index]-i))\n        }\n        dp[index][k]  = best\n        return best\n    }\n    const extra = dynamo(0,0)\n    return res + dynamo(0,0)\n};",
    "submit_ts": "1722698635",
    "subm_id": "1343187008"
}