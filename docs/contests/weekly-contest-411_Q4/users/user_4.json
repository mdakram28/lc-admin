{
    "username": "lilPeep",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        vector<int> pre(n+1,0);\n        for(int i=1;i<=n;i++)\n            pre[i]=pre[i-1]+(s[i-1]=='1');\n        \n        vector<int> left(n+1);\n        for(int i=1;i<=n;i++)\n        {\n            int low=1;\n            int high=i;\n            int ans=i;\n            while(low<=high)\n            {\n                int mid=(low+high)/2;\n                \n                int ones=pre[i]-pre[mid-1];\n                int zeros=(i-mid+1)-ones;\n                \n                if(ones<=k || zeros<=k)\n                {\n                    ans=mid;\n                    high=mid-1;\n                }\n                else\n                    low=mid+1;\n            }\n            \n            left[i]=ans;\n        }\n        \n        vector<long long> sol(n+1);\n        for(int i=1;i<=n;i++)\n            sol[i]=sol[i-1]+left[i];\n        \n        vector<long long> ans;\n        for(auto &query : queries)\n        {\n            long long l=query[0]+1;\n            long long r=query[1]+1;\n            \n            long long total=((r-l+1)*(r+l))/2ll;\n            \n            int low=l;\n            int high=r;\n            int till=l;\n            while(low<=high)\n            {\n                int mid=(low+high)/2;\n                if( left[mid]<=l )\n                {\n                    till=mid;\n                    low=mid+1;\n                }\n                else\n                    high=mid-1;\n            }\n            long long sub=(till-l+1ll)*l +sol[r]-sol[till];\n            ans.push_back(total-sub+(r-l+1ll));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950340",
    "subm_id": "1359743458"
}