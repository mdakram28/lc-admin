{
    "username": "LayCurse",
    "submission": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"inline\")\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class S, class T> inline S chmin(S &a, T b){\n  if(a>b){\n    a=b;\n  }\n  return a;\n}\ntemplate<class S, class T> inline S chmax(S &a, T b){\n  if(a<b){\n    a=b;\n  }\n  return a;\n}\n#define main dummy_main\nint main(){\n  return 0;\n}\n#undef main\nint X;\nint Y;\nint A[50][50];\nint chk[40][40][40][40];\nint solve(int x1, int x2, int y1, int y2, int c){\n  int i;\n  int j;\n  int k;\n  int cc;\n  int res = 1073709056;\n  if(x1==x2 || y1==y2){\n    return 0;\n  }\n  if(c==1){\n    return chk[x1][x2][y1][y2];\n  }\n  for(i=(x1);i<(x2+1);i++){\n    for(cc=(1);cc<(c);cc++){\n      chmin(res, solve(x1,i,y1,y2,cc) + solve(i,x2,y1,y2,c-cc));\n    }\n  }\n  for(i=(y1);i<(y2+1);i++){\n    for(cc=(1);cc<(c);cc++){\n      chmin(res, solve(x1,x2,y1,i,cc) + solve(x1,x2,i,y2,c-cc));\n    }\n  }\n  return res;\n}\nclass Solution{\n  public:\n  int minimumSum(vector<vector<int>>& grid){\n    int i;\n    int j;\n    int k;\n    int x1;\n    int y1;\n    int x2;\n    int y2;\n    int x_mn;\n    int x_mx;\n    int y_mn;\n    int y_mx;\n    int res = 1073709056;\n    X = grid.size();\n    Y = grid[0].size();\n    for(i=(0);i<(X);i++){\n      for(j=(0);j<(Y);j++){\n        A[i][j] = grid[i][j];\n      }\n    }\n    for(x1=(0);x1<(X);x1++){\n      for(x2=(x1+1);x2<(X+1);x2++){\n        for(y1=(0);y1<(Y);y1++){\n          for(y2=(y1+1);y2<(Y+1);y2++){\n            x_mn = y_mn = 1073709056;\n            x_mx = y_mx = -1073709056;\n            for(i=(x1);i<(x2);i++){\n              for(j=(y1);j<(y2);j++){\n                if(A[i][j]){\n                  chmin(x_mn, i);\n                  chmin(y_mn, j);\n                  chmax(x_mx, i);\n                  chmax(y_mx, j);\n                }\n              }\n            }\n            chk[x1][x2][y1][y2] = 0;\n            if(x_mn <= x_mx){\n              chk[x1][x2][y1][y2] = (x_mx - x_mn + 1) * (y_mx - y_mn + 1);\n            }\n          }\n        }\n      }\n    }\n    res = solve(0, X, 0, Y, 3);\n    return res;\n  }\n}\n;\n// cLay version 20240420-1\n\n// --- original code ---\n// #define main dummy_main\n// {}\n// #undef main\n// \n// int X, Y, A[50][50];\n// int chk[40][40][40][40];\n// \n// \n// int solve(int x1, int x2, int y1, int y2, int c){\n//   int i, j, k, cc;\n//   int res = int_inf;\n// \n//   if(x1==x2 || y1==y2) return 0;\n//   if(c==1) return chk[x1][x2][y1][y2];\n// \n//   rep(i,x1,x2+1) rep(cc,1,c){\n//     res <?= solve(x1,i,y1,y2,cc) + solve(i,x2,y1,y2,c-cc);\n//   }\n//   rep(i,y1,y2+1) rep(cc,1,c){\n//     res <?= solve(x1,x2,y1,i,cc) + solve(x1,x2,i,y2,c-cc);\n//   }\n// \n//   return res;\n// }\n// \n// class Solution {\n// public:\n//   int minimumSum(vector<vector<int>>& grid) {\n//     int i, j, k;\n//     int x1, y1, x2, y2, x_mn, x_mx, y_mn, y_mx;\n//     int res = int_inf;\n// \n//     X = grid.size();\n//     Y = grid[0].size();\n//     rep(i,X) rep(j,Y) A[i][j] = grid[i][j];\n// \n//     rep(x1,X) rep(x2,x1+1,X+1) rep(y1,Y) rep(y2,y1+1,Y+1){\n//       x_mn = y_mn = int_inf;\n//       x_mx = y_mx = -int_inf;\n// \n//       rep(i,x1,x2) rep(j,y1,y2) if(A[i][j]){\n//         x_mn <?= i;\n//         y_mn <?= j;\n//         x_mx >?= i;\n//         y_mx >?= j;\n//       }\n// \n//       chk[x1][x2][y1][y2] = 0;\n//       if(x_mn <= x_mx) chk[x1][x2][y1][y2] = (x_mx - x_mn + 1) * (y_mx - y_mn + 1);\n//     }\n//     res = solve(0, X, 0, Y, 3);\n// \n//     return res;\n//   }\n// };\n",
    "submit_ts": "1719111001",
    "subm_id": "1297260529"
}