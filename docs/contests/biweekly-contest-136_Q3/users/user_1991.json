{
    "username": "vipbaswan",
    "submission": "class Solution {\npublic:\n    int MAX = INT_MAX/2;\n    \n    pair<int, int> getAns(vector<int>& a) {\n        int n = a.size();\n        \n        vector<vector<int>> dp(n, vector<int>(2, MAX));\n        \n        int j=n/2, i=j-1;\n        if(n%2 != 0) {\n            // middle element has to be zero\n            if(a[n/2]) {\n                dp[n/2][0]=1;\n            } else {\n                dp[n/2][0]=0;\n            }\n            j++;\n        } else {\n            int cnt1 = a[i] + a[j];\n            int cnt0 = 2 - cnt1;\n            dp[i][0] = cnt1;\n            dp[i][1] = cnt0;\n            i--;\n            j++;\n        }\n\n        while(i>=0 && j<n) {\n            int cnt1 = a[i] + a[j];\n            int cnt0 = 2 - cnt1;\n            \n            dp[i][0] = min(cnt1 + dp[i+1][0], cnt0 + dp[i+1][1]);\n            dp[i][1] = min(cnt1 + dp[i+1][1], cnt0 + dp[i+1][0]);\n            i--;\n            j++;\n        }\n        \n        return {dp[0][0], dp[0][1]};\n    }\n    \n    int minFlips(vector<vector<int>>& a) {\n        int m = a.size(), n = a[0].size();\n        int ans = 0;\n        \n        for(int i=0; i<m/2; i++) {\n            for(int j=0; j<n/2; j++) {\n                int cnt1 = a[i][j] + a[i][n-1-j] + a[m-1-i][j] + a[m-1-i][n-1-j];\n                int cnt0 = 4 - cnt1;\n                ans += min(cnt1, cnt0);\n            }\n        }\n        \n        // cout<<ans<<endl;\n        \n        // now just handle the odd row or odd column\n        \n        pair<int, int> exr = {0, 0}, exc = {0, 0};\n        int ex = 0;\n        if(m%2 != 0) {\n            vector<int> r(n);\n            for(int i=0; i<n; i++) {\n                r[i] = a[m/2][i];\n            }\n            exr = getAns(r);\n            if(n%2 == 0) {\n                ex = exr.first;\n            }\n        }\n        if(n%2 != 0) {\n            vector<int> c(m);\n            for(int i=0; i<m; i++) {\n                c[i] = a[i][n/2];\n            }\n            exc = getAns(c);    \n            if(m%2 != 0) {\n                // center element might have been counted twice\n                int ans1 = exr.first + exc.first;\n                int ans2 = exr.second + exc.second;\n                if(a[m/2][n/2]) {\n                    ans1--;\n                    ans2--;\n                }\n                ex = min(ans1, ans2);\n            } else {\n                ex = exc.first;\n            }\n        }\n        \n        ans += ex;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722699523",
    "subm_id": "1343214265"
}