{
    "username": "qq1239426256",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        ll ans = 0;\n        vector<int> dp(n);\n        dp[0] = abs(diff[0]);\n        for (int i = 1; i < n; i++) {\n            if (diff[i] == 0) continue;\n            int tmp = abs(diff[i]);\n            if (diff[i] > 0 && diff[i - 1] > 0)\n                tmp = min(tmp, max(0, diff[i] - diff[i - 1]));\n            else if (diff[i] < 0 && diff[i - 1] < 0)\n                tmp = min(tmp, max(0, diff[i - 1] - diff[i]));\n            dp[i] = tmp;\n        }\n        for (int i = 0; i < n; i++) {\n            ans += dp[i];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532191",
    "subm_id": "1327979950"
}