{
    "username": "helloWorld4628",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int cnt = n-1;\n        vector<int> ans;\n        set<int> st;\n        map<int, int> map1;\n        for(int i=0;i<queries.size();i++){\n            if(st.size() == 0){\n                int diff = queries[i][1] - queries[i][0];\n                cnt -= diff;\n                cnt += 1;\n                st.insert(queries[i][0]);\n                map1[queries[i][0]] = queries[i][1];\n                ans.push_back(cnt);\n            }\n            else{\n                auto it = st.lower_bound(queries[i][0]);\n                if(it != st.begin()){\n                    auto it1 = it;\n                    it1--;\n                    int low = *it1;\n                    int high = map1[low];\n                    if(high >= queries[i][1]){\n                        ans.push_back(cnt);\n                        continue;\n                    }\n                }\n                if(it == st.end()){\n                    int diff = queries[i][1] - queries[i][0];\n                    cnt -= diff;\n                    cnt += 1;\n                    st.insert(queries[i][0]);\n                    map1[queries[i][0]] = queries[i][1];\n                    ans.push_back(cnt);\n                    continue;\n                }\n                int diff = queries[i][1] - queries[i][0];\n                // cout<<i<<\"->\"<<endl;\n                // cout<<diff<<endl;\n                if(*it == queries[i][0]){\n                    if(map1[*it] > queries[i][1]){\n                        ans.push_back(cnt);\n                        continue;\n                    }\n                }\n\n                while(it != st.end()){\n                    auto it1 = it;\n                    it1++;\n                    int ab = -1;\n                    if(it1 != st.end()){\n                        ab = *it1;\n                    }\n                    // cout<<ab<<endl;\n                    if(map1[*it] <= queries[i][1]){\n                        // cnt -= 1;\n                        // cout<<*it<<\" \"<<map1[*it]<<endl;\n                        diff -= (map1[*it]-*it);\n                        diff += 1;\n                        st.erase(it);\n                        if(ab == -1) break;\n                        it = st.find(ab);\n                    }\n                    else{\n                        break;\n                    }\n                    // cout<<diff<<endl;\n                }\n                // cout<<cnt<<\" \"<<diff<<endl;\n                st.insert(queries[i][0]);\n                map1[queries[i][0]] = queries[i][1];\n                cnt -= diff;\n                cnt += 1;\n                ans.push_back(cnt);\n            }\n        }\n        return ans;\n    }\n};\n\n\n// class Solution {\n// public:\n//     vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n//         vector<set<int>> adj(n);\n//         vector<set<int>> rev(n);\n//         for(int i=0;i<n-1;i++){\n//             adj[i].insert(i+1);\n//             if(i == 0)rev[n-1].insert(n-2);\n//             else{\n//                 rev[i].insert(i-1);\n//             }\n//         }\n//         vector<int> ans;\n//         vector<int> dp(n);\n//         for(int i=0;i<n;i++){\n//             dp[i] = (n - 1 - i);\n//         }\n//         vector<int> vis(n, 0);\n//         for(int i=0;i<queries.size();i++){\n//             adj[queries[i][0]].insert(queries[i][1]);\n//             rev[queries[i][1]].insert(queries[i][0]);\n//             if(vis[queries[i][0]] == 1 && vis[queries[i][1]] == 1){\n//                 ans.push_back(ans.back());\n//             }\n//             else{\n//                 for(int i=queries[i];i)\n//             }\n//             if(dp[queries[i][0]] > dp[queries[i][]])dp[queries[i][0]] = dp[queries[i][1]] + 1;\n//             int j = 0;\n//             int cnt = 0;\n//             while(j != n-1){\n//                 auto it = adj[j].end();\n//                 it--;\n//                 j = *it;\n//                 cnt++;\n//             }\n//             ans.push_back(cnt);\n//         }\n//         return ans;\n//     }\n// };",
    "submit_ts": "1722743442",
    "subm_id": "1343792030"
}