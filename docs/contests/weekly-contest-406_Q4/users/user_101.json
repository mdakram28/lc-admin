{
    "username": "pyjuan91",
    "submission": "class Solution {\npublic:\n  long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    vector<pair<int, char>> cuts;\n    for (int cost : horizontalCut) {\n      cuts.push_back({ cost, 'H' });\n    }\n    for (int cost : verticalCut) {\n      cuts.push_back({ cost, 'V' });\n    }\n\n    sort(cuts.rbegin(), cuts.rend());\n\n    int horizontalSegments = 1;\n    int verticalSegments = 1;\n\n    int64_t res = 0;\n\n    for (const auto& cut : cuts) {\n      int cost = cut.first;\n      char type = cut.second;\n\n      if (type == 'H') {\n        res += 1LL * cost * verticalSegments;\n        horizontalSegments++;\n      }\n      else {\n        res += 1LL * cost * horizontalSegments;\n        verticalSegments++;\n      }\n    }\n\n    return res;\n  }\n};",
    "submit_ts": "1720924973",
    "subm_id": "1320238046"
}