{
    "username": "garvitgoyal058",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& original, vector<int>& target) {\n    int length = original.size();\n    vector<int> diff(length, 0);\n    for (int i = 0; i < length; i++) {\n        diff[i] = target[i] - original[i];\n    }\n    int direction = 0;\n    long long minVal = 0, totalOperations = 0;\n    totalOperations = abs(diff[0]);\n    minVal = totalOperations;\n    if (diff[0] > 0) {\n        direction = 1;\n    }\n    for (int i = 1; i < length; i++) {\n        if (diff[i] < 0 && direction == 1) {\n            totalOperations += abs(diff[i]);\n            minVal = abs(diff[i]);\n            direction = 0;\n            continue;\n        }\n        if (diff[i] >= 0 && direction == 0) {\n            totalOperations += abs(diff[i]);\n            minVal = abs(diff[i]);\n            direction = 1;\n            continue;\n        }\n        if (minVal >= abs(diff[i])) {\n            minVal = abs(diff[i]);\n            continue;\n        } else {\n            totalOperations += abs(diff[i]) - minVal;\n            minVal = abs(diff[i]);\n        }\n    }\n    return totalOperations;\n}\n};",
    "submit_ts": "1721533587",
    "subm_id": "1328012298"
}