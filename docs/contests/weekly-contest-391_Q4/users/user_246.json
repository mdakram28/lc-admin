{
    "username": "tanakat01",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n        #print(f'points={points}')\n        def maxpair(points):\n            maxv = (-float('inf'), -1, -1)\n            min_xpy = (float('inf'), -1)\n            min_xmy = (float('inf'), -1)\n            for i, (x, y) in enumerate(points):\n                xpy = x + y\n                xmy = x - y\n                if i == 0:\n                    min_xpy = (xpy, 0)\n                    min_xmy = (xmy, 0)\n                else:\n                    for j in (min_xpy[1], min_xmy[1]):\n                        v = abs(points[j][0] - x) + abs(points[j][1] - y)\n                        if maxv[0] < v:\n                            maxv = (v, i, j)\n                    min_xpy = min(min_xpy, (xpy, i))\n                    min_xmy = min(min_xmy, (xmy, i))\n            return maxv                        \n        v, i, j = maxpair(points)       \n        #print(f'v, i, j = {(v, i, j)}')\n        ans1 = maxpair(points[:i] + points[(i + 1):])\n        ans2 = maxpair(points[:j] + points[(j + 1):])\n        return min(ans1[0], ans2[0])\n                \n        "
}