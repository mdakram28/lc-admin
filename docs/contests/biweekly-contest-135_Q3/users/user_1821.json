{
    "username": "m-d-nabeel",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffs_map;\n        vector<int> max_vals;\n\n        calcDiffsAndMaxVals(nums, k, diffs_map, max_vals);\n\n        return findMinChanges(nums.size(), diffs_map, max_vals);\n    }\n\nprivate:\n    void calcDiffsAndMaxVals(const vector<int>& nums, int k,\n                             map<int, vector<int>>& diffs_map,\n                             vector<int>& max_vals) {\n        int half_size = nums.size() / 2;\n        for (int i = 0; i < half_size; ++i) {\n            int first = nums[i];\n            int second = nums[nums.size() - i - 1];\n            int diff = abs(first - second);\n\n            int max_val = max({first, second, k - first, k - second});\n\n            diffs_map[diff].push_back(max_val);\n            max_vals.push_back(max_val);\n        }\n    }\n\n    int findMinChanges(int size, const map<int, vector<int>>& diffs_map,\n                       vector<int>& max_vals) {\n        int min_changes = size;\n        sort(max_vals.begin(), max_vals.end());\n\n        for (auto it : diffs_map) {\n            int pos = lower_bound(max_vals.begin(), max_vals.end(), it.first) -\n                      max_vals.begin();\n            int changes_needed = pos * 2 + (size / 2 - pos);\n\n            for (auto& val : it.second) {\n                if (val < it.first) {\n                    changes_needed -= 2;\n                } else {\n                    changes_needed -= 1;\n                }\n            }\n\n            min_changes = min(min_changes, changes_needed);\n        }\n\n        return min_changes;\n    }\n};",
    "submit_ts": "1721489552",
    "subm_id": "1327456770"
}