{
    "username": "celerystalk",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        a, b = [], []\n        for i in range(len(nums) // 2):\n            if nums[i] > nums[len(nums) - i - 1]:\n                a.append(nums[len(nums) - i - 1])\n                b.append((nums[i], i))\n            else:\n                a.append(nums[i])\n                b.append((nums[len(nums) - i - 1], i))\n\n        diff_to_cnt = {}\n       \n        for x, (y, _) in zip(a, b):\n            if (y - x) not in  diff_to_cnt:\n                diff_to_cnt[y - x] = 0\n            diff_to_cnt[y - x] += 1\n\n        # print(a, b, diff_to_cnt)\n\n        b.sort()\n        idx_b = 0\n        pq = []\n        heapq.heapify(pq)\n        cur_cnt = 0\n\n        res = len(nums)\n        for x in range(k + 1):\n            while idx_b < len(b) and b[idx_b][0] < x:\n                heapq.heappush(pq, -a[b[idx_b][1]])\n                idx_b += 1\n            \n            while pq and -(pq[0]) > k - x:\n                heapq.heappop(pq)\n                cur_cnt += 1\n            \n            cur_res = len(nums) // 2 - diff_to_cnt.get(x, 0)\n            cur_res += cur_cnt\n\n            # print(x, cur_res, cur_cnt, diff_to_cnt)\n\n            res = min(res, cur_res)\n\n        return res\n            \n\n\n\n\n\n\n\n\n\n\n        ",
    "submit_ts": "1721490172",
    "subm_id": "1327475112"
}