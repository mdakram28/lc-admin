{
    "username": "ban_nam",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\nstruct TN {\n    unordered_map<char, TN*> chids;\n    vector<pair<int, int>> vecpair;\n};\n\nclass Trie {\n    \n    public:\n    TN* head;\n    Trie() {\n        head = new TN();\n    }\n    \n    \n    void pushhin(string& word, int idx, int qq) {\n        TN* node = head;\n        for (char c : word) {\n            if (!node->chids.count(c))\n            {\n                node->chids[c] = new TN();\n            }\n            node = node->chids[c];\n        }\n        node->vecpair.push_back({idx, qq});\n    }\n};\nint ans(string target, vector<string>& vecpair, vector<int>& cst)\n{\n    int n = target.size();\n        vector<int> vis(n + 1, INT_MAX);\n        vis[0] = 0;\n        \n        Trie trie;\n        for (int i = 0; i < vecpair.size(); ++i) {\n            trie.pushhin(vecpair[i], i, cst[i]);\n        }\n        for (int i = 0; i < n; ++i) \n        {\n            if (vis[i] == INT_MAX) \n                continue;\n            \n            TN* node = trie.head;\n            for (int j = i; j < n; ++j) \n            {\n                if (!node->chids.count(target[j])) \n                    break;\n                node = node->chids[target[j]];\n                \n                for (auto ew : node->vecpair) \n                {\n                    int len = vecpair[ew.first].size();\n                    int qq = ew.second;\n                    if (i + len <= n) {\n                        vis[i + len] = min(vis[i + len], vis[i] + qq);\n                    }\n                }\n            }\n        }\n        if(vis[n]==INT_MAX)\n            vis[n]=-1;\n        return vis[n];\n}\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& cost) \n    {\n        \n        return ans(target,words,cost);\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "submit_ts": "1720322978",
    "subm_id": "1312364185"
}