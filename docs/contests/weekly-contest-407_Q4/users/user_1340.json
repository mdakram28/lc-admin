{
    "username": "adityaraj87621",
    "submission": "import Foundation\n\nclass Solution {\n    func minimumOperations(_ nums: [Int], _ target: [Int]) -> Int {\n        // Compute the difference array\n        var differences = [Int]()\n        for index in 0..<nums.count {\n            differences.append(target[index] - nums[index])\n        }\n        \n        // Initialize the count of operations needed\n        var totalOps = 0\n        var segmentDiff = 0\n\n        // Iterate through each value in the difference array\n        for index in 0..<differences.count {\n            if index == 0 || (differences[index - 1] > 0 && differences[index] > 0) || (differences[index - 1] < 0 && differences[index] < 0) {\n                // If starting or differences are consistently positive or negative\n                let additionalOps = abs(differences[index]) - abs(segmentDiff)\n                if additionalOps > 0 {\n                    totalOps += additionalOps\n                }\n                // Update the segment difference\n                segmentDiff = differences[index]\n            } else {\n                // If the sign of the differences changes\n                totalOps += abs(differences[index])\n                // Update the segment difference\n                segmentDiff = differences[index]\n            }\n        }\n\n        return totalOps\n    }\n}\n\n// Function to call the main logic\nfunc testMinimumOperations() {\n    let solution = Solution()\n    let nums = [1, 3, 2, 4] // Example input\n    let target = [2, 4, 1, 3] // Example input\n    let result = solution.minimumOperations(nums, target)\n    print(\"Minimum operations: \\(result)\")\n}\n\n// Call the test function\ntestMinimumOperations()\n",
    "submit_ts": "1721533034",
    "subm_id": "1327999759"
}