{
    "username": "prathamk7569",
    "submission": "#define ll long long int\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<ll> diff;\n\n        for(int i = 0; i < n; i++) {\n            diff.push_back(target[i] - nums[i]);\n        }\n\n        ll ans = abs(diff[0]);\n        ll countNeg = 0, countPos = 0;\n\n        int flag = -1;\n        if(diff[0] > 0) {\n            flag = 1;\n        } else if(diff[0] < 0) {\n            flag = 0;\n        }\n\n        int i = 1;\n        while(i < n) {\n            if(diff[i] < 0) {\n                if(flag != 0) {\n                    ans += abs(diff[i]);\n                    flag = 0;\n                    i++;\n                    continue;\n                }\n                while(i < n && diff[i] <= 0) {\n                    if(abs(diff[i-1]) >= abs(diff[i])) {\n                        i++;\n                        continue;\n                    } else {\n                        ans += abs(abs(diff[i]) - abs(diff[i-1]));\n                    }\n                    i++;\n                }\n            } else {\n                if(flag != 1) {\n                    ans += abs(diff[i]);\n                    flag = 1;\n                    i++;\n                    continue;\n                }\n                while(i < n && diff[i] >= 0) {\n                    if(diff[i-1] < diff[i]) {\n                        ans += abs(diff[i] - diff[i-1]);\n                    }\n                    i++;\n                }\n            }\n            // cout << ans << endl;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533808",
    "subm_id": "1328017121"
}