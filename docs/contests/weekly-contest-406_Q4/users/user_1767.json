{
    "username": "Agorz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& H, vector<int>& V) {\n        sort(H.begin(), H.end(), greater<int>());\n        sort(V.begin(), V.end(), greater<int>());\n        long long res = 0, horiz = 1, verti = 1, i = 0, j = 0;\n\n        //this ans is similar like merging 2 sorted lists\n        while (j<n-1 && i<m-1) {\n            if (H[i]>=V[j]) {\n                res += H[i] * verti;\n                horiz++;\n                i++;\n                // cout << res << endl;\n            } else {\n                res += V[j] * horiz;\n                verti++;\n                j++;\n                // cout << res << endl;\n            }\n        }\n        // cout << res << endl;\n        while (j<n-1) {\n            res+=horiz*V[j];\n            j++;\n        }\n        while (i < m - 1) {\n            res += verti*H[i] ;\n            i++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925516",
    "subm_id": "1320257324"
}