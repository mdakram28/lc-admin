{
    "username": "homeless_man",
    "submission": "class Solution {\npublic:\n    \n    int dp[50001];\n    \n    struct Node{\n        Node* nxt[26];\n        bool end = 0;\n        int cost = 1e9;\n    };\n    \n    Node* head;\n    \n    void add(string& s,int cost){\n        Node* temp = head;\n        for(char c : s){\n            if(temp -> nxt[c-'a'] == NULL)\n                temp -> nxt[c-'a'] = new Node();\n            temp = temp -> nxt[c-'a'];\n        }\n        temp -> end = 1;\n        temp -> cost = min(cost,temp -> cost);\n    }\n    \n    int dfs(int idx,string& tar){\n        if(idx == tar.size())\n            return 0;\n        if(dp[idx] != -1)\n            return dp[idx];\n        \n        int res = 1e9;\n        Node* temp = head;\n        for(int i = idx;i<tar.size();i++){\n            if(temp -> nxt[tar[i]-'a'] != NULL)\n                temp = temp -> nxt[tar[i]-'a'];\n            else\n                break;\n            \n            if(temp -> end)\n                res = min(res,temp -> cost + dfs(i + 1,tar));\n        }\n        return dp[idx] = res;\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        memset(dp,-1,sizeof(dp));\n        head = new Node();\n        for(int i = 0;i<words.size();i++){\n            add(words[i],costs[i]);\n        }\n        return (dfs(0,target) == 1e9 ? -1 : dfs(0,target));\n    }\n};",
    "submit_ts": "1720322066",
    "subm_id": "1312339763"
}