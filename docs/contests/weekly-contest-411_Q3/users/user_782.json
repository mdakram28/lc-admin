{
    "username": "sh_reya_1",
    "submission": "using ll=long long int;\nclass Solution {\n    int n;\n    int k_;\n    vector<vector<int>> dp;\n    vector<int> anssol;\n    vector<int> mod7;\n    int l,r;\npublic:\nint expo(int a, int b, int mod) {\n    return mod7[b];\n//         if(mod==1)return 0;\n//         else if(mod==2){\n//             if(b>=1)return 0;\n//             else return a%2;\n//         }\n//         else if(mod==3 || mod==9){\n//             return 1;\n//         }\n//         else if(mod==4){\n//             if(b>=2)return 0;\n//             else if(b==1)return 2;\n//             else return 1;\n//         }\n//         else if(mod==5){\n//             return 0;\n//         }\n//         else if(mod==6){\n//             if(b==0)return 1;\n//             if(b==1)return 5;\n//             if(b>=2)return 2;\n//         }\n//         else if(mod==8){\n//             if(b>=3)return 0;\n//             if(b==2)return 4;\n//             if(b==1)return 2;\n//             if(b==0)return 1;\n//         }\n//         else if(mod==7){\n//             return mod7[b];\n//         }\n\n        \n//         // ll res = 1;\n//         // while (b > 0) {\n//         //     if (b & 1) res = (res * a) % mod;\n//         //     a = (a * a) % mod;\n//         //     b = b >> 1;\n//         // }\n//         // return res;\n//         return 0;\n    }\n        int rec(int i,int modk){\n        if(i>((n-1)/2)){\n            if(modk==0)return 1;\n            else return 0;\n        }\n        if(dp[i][modk]!=-1)return dp[i][modk];\n        int ans=0;\n        int k=n-i-1;\n\n        for(int j=9;j>=0;j--){\n            if(i==0 && j==0)continue;\n            if(k_==6 && i==0 &&  j%2==1)continue;\n            if(k_==6){\n                ans|=rec(i+1,(modk+j*expo(10,k,3)+((i!=k)?(j*expo(10,i,3)):0))%3);\n            }\n            else ans|=rec(i+1,(modk+j*expo(10,k,k_)+((i!=k)?(j*expo(10,i,k_)):0))%k_);\n            // if(ans==1)break;\n        }\n        return dp[i][modk]=ans;\n\n    }\n    void printsol(int i,int modk){\n        if(i>((n-1)/2))return ;\n        int ans=rec(i,modk);\n        int k=n-i-1;\n\n        for(int j=9;j>=0;j--){\n            if(i==0 && j==0)continue;\n            if(k_==6 && i==0 &&  j%2==1)continue;\n            if(k_==6){\n                if(ans==rec(i+1,(modk+j*expo(10,k,3)+((i!=k)?(j*expo(10,i,3)):0))%3)){\n                    if(l>=0 && l<n && r>=0 && r<n){\n                    anssol[l]=j;\n                anssol[r]=j;\n                l++;r--;\n                }\n                \n                printsol(i+1,(modk+j*expo(10,k,3)+((i!=k)?(j*expo(10,i,3)):0))%3);\n                break;\n                }\n            }\n            else if(ans==rec(i+1,(modk+j*expo(10,k,k_)+((i!=k)?(j*expo(10,i,k_)):0))%k_)){\n                if(l>=0 && l<n && r>=0 && r<n){\n                    anssol[l]=j;\n                anssol[r]=j;\n                l++;r--;\n                }\n                \n                printsol(i+1,(modk+j*expo(10,k,k_)+((i!=k)?(j*expo(10,i,k_)):0))%k_);\n                break;\n            }\n        }\n    }\n\n    string largestPalindrome(int n_, int k) {\n        n=n_;\n        k_=k;\n        dp.assign(n_+2,vector<int>(k_+2,-1));\n        anssol.resize(n);\n        mod7.resize(n);\n        // int x=0;\n        mod7[0]=1;\n        if(k==1)mod7[0]=0;\n        for(int i=1;i<n;i++){\n            mod7[i]=(mod7[i-1]*10)%k;\n        }\n\n        l=0;\n        r=n-1;\n        string sol=\"\";\n        printsol(0,0);\n        for(auto v:anssol)sol+=char(v+'0');\n        return sol; \n    }\n};",
    "submit_ts": "1723952738",
    "subm_id": "1359803472"
}