{
    "username": "Morgho",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<vector<long long>> groups;\n        bool curGroupPositive = true, prevZero = true;\n        for(int i = 0; i < n; ++i) {\n            int diff = target[i] - nums[i];\n            if(diff == 0) {\n                prevZero = true;\n                continue;\n            }\n            if(prevZero || ((diff > 0) ^ curGroupPositive)) {\n                groups.push_back({abs(diff)});\n                curGroupPositive = diff > 0;\n            } else {\n                groups.back().push_back(abs(diff));\n            }\n            prevZero = false;\n        }\n        for(auto &g : groups) {\n            // for(int i = 0; i < g.size(); ++i) {\n            //     cout << g[i] << ' ';\n            // }\n            // cout << '\\n';\n            vector<pair<int, long long>> inc{{0, g[0]}};\n            for(int i = 1; i < g.size(); ++i) {\n                if(g[i] > inc.back().second) {\n                    inc.push_back({i, g[i]});\n                } else if(g[i] < inc.back().second) {\n                    ans += (long long) (inc.back().second - g[i]);\n                    inc.pop_back();\n                    inc.push_back({i, g[i]});\n                }\n            }\n            while(!inc.empty()) {\n                long long prev = inc.size() > 1 ? inc[inc.size() - 2].second : 0;\n                ans += (long long) (inc.back().second - prev);\n                inc.pop_back();\n            }\n        }\n        \n \n        return ans;\n    }\n};",
    "submit_ts": "1721533381",
    "subm_id": "1328007699"
}