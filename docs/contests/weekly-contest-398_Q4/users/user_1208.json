{
    "username": "v2_vishal",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n     return solve(k,1,0,true);   \n    }\n    Map<Integer,Integer[][]>dp=new HashMap<>();\n    public int solve(int k, int i, int jump, boolean pos){\n        if(i>k+5)\n            return 0;\n        if(jump>31)\n            return 0;\n        int can =0;\n        if(pos)\n            can=1;\n        if(dp.containsKey(i) && dp.get(i)[jump][can] != null)\n            return dp.get(i)[jump][can];\n        \n        int ans = (i==k)?1:0;\n        if(pos)\n            ans+=solve(k,i-1,jump,false);\n        if(i+(1<<jump)<=k+1)\n            ans+=solve(k,i+(1<<jump),jump+1,true);\n        \n        if(!dp.containsKey(i))\n            dp.put(i,new Integer[32][2]);\n        \n        dp.get(i)[jump][can]=ans;\n        return ans;\n    }\n}",
    "submit_ts": "1716090185",
    "subm_id": "1261861157"
}