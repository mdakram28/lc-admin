{
    "username": "Vinay Reddy Pulyala",
    "submission": "int dp[100001][11];\n\nclass Solution {\npublic:\n    int powmod(long long x, int y, int p) \n    { \n        long long res = 1;\n\n        x = x % p;\n\n        while (y > 0) \n        { \n            if (y & 1) res = (res*x) % p; \n\n            y = y>>1;\n            x = (x*x) % p; \n        } \n        return res%p; \n    } \n    int helper1(int dig,int curr_mod,int pos,int &k,int &n){\n        int mod1 = (dig*powmod(10ll,n-pos-1,k))%k;\n        int mod2 = (dig*powmod(10ll,pos,k))%k;\n        // cout<<n-pos-1<<\" \"<<pos<<endl;\n        if(n%2!=0 && pos==n/2){\n                    // cout<<dig*powmod(10ll,n-pos-1,k)<<endl;\n                    // cout<<(curr_mod)%k<<endl;;\n            // cout<<(curr_mod)%k<<endl;\n            return (curr_mod+mod1)%k;\n        }\n        // if(pos==1) cout<<(curr_mod + mod1 + mod2)%k<<endl;\n        return (curr_mod + mod1 + mod2)%k;\n    } \n    bool path(int ind,int mod,int &n,int &k){\n        // cout<<mod<<endl;\n        if(ind==ceil(n/2.0)){\n            return (mod==0);\n        }\n        if(dp[ind][mod]!=-1) return dp[ind][mod];\n        for(int i=9;i>=(ind==0?1:0);i--){\n            if(path(ind+1,(helper1(i,mod,ind,k,n))%k,n,k)){\n                dp[ind][mod] = i;\n                // cout<<i<<\" \";\n                return true;\n            }\n        }\n        dp[ind][mod] = 0;\n        return false;\n    }\n    string largestPalindrome(int n, int k) {\n        // cout<<\"--\"<<endl;\n        memset(dp,-1,sizeof(dp));\n        path(0,0,n,k);\n        string ans = \"\";\n        for(int i=0;i<n;i++){\n            ans += '0';\n        }\n        int curr = 0;\n        int mod = 0;\n        while(curr!=ceil(n/2.0)){\n            ans[curr] = dp[curr][mod]+'0';\n            ans[n-curr-1] = ans[curr];\n            \n            mod = (helper1(dp[curr][mod],mod,curr,k,n))%k;\n            curr++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723953287",
    "subm_id": "1359817266"
}