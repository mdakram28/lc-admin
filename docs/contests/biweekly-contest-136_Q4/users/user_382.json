{
    "username": "zephyrr",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges)+1\n        res = [-1 for _ in range(n)]\n        stat = [[-1,-1] for _ in range(n)]\n        d = defaultdict(dict)\n        g = defaultdict(list)\n        for a,b in edges:\n            g[a].append(b)\n            g[b].append(a)\n\n        def dfs1(cur,par,dist):\n            stat[cur][0] = dist\n            tmp = 0\n            for nxt in g[cur]:\n                if nxt != par:\n                    dd = dfs1(nxt,cur,dist+(1 if (nxt%2==1) else 2)) + (1 if (nxt%2==1) else 2)\n                    d[cur][nxt] = dd\n                    tmp = max(tmp,dd)\n            stat[cur][1] = tmp\n            return tmp\n        \n        dfs1(0,0,0)\n        #print(stat)\n        #print(d)\n        res[0] = stat[0][1]\n\n        def dfs2(cur,par,val):\n            #print(cur,par,val)\n            arr = []\n            for nxt in d[cur]:\n                arr.append([d[cur][nxt],nxt])\n            if cur != 0:\n                val += (1 if (par%2==1) else 2)\n            if not arr:               \n                res[cur] = val\n                return\n            if len(arr) == 1:\n                res[cur] = max(val,arr[0][0])\n                #print(arr)\n                dfs2(arr[0][1],cur,val)\n                return\n            arr.sort()\n            ind1 = arr[-1][1]\n            val1 = arr[-1][0]\n            ind2 = arr[-2][1]\n            val2 = arr[-2][0]\n            res[cur] = max(val, val1)\n            for nxt in d[cur]:\n                if nxt != ind1:\n                    dfs2(nxt,cur,max(val,val1))\n                else:\n                    dfs2(nxt,cur,max(val,val2))\n            return\n        \n        dfs2(0,0,0)\n        res[0] = stat[0][1]\n        #print(stat)\n\n\n\n        return res\n\n\n        ",
    "submit_ts": "1722700554",
    "subm_id": "1343245486"
}