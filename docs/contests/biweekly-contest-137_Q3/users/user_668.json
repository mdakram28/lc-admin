{
    "username": "pravesh_252505",
    "submission": "class Solution {\npublic:\n\nlong long maximumValueSum(vector<vector<int>>& board) {\n    int n = board.size();\n    int m = board[0].size();\n\n    vector<pair<int, pair<int, int>>> cells;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cells.push_back({board[i][j], {i, j}});\n        }\n    }\n    sort(cells.rbegin(), cells.rend());\n\n    long long maxSum = LLONG_MIN;\n\n    for (int i = 0; i < cells.size(); i++) {\n        for (int j = i + 1; j < cells.size(); j++) {\n            if (cells[i].second.first != cells[j].second.first &&\n                cells[i].second.second != cells[j].second.second ) {\n                for (int k = j + 1; k < cells.size(); k++) {\n                    if (cells[i].second.first != cells[k].second.first &&\n                        cells[i].second.second != cells[k].second.second &&\n                        cells[j].second.first != cells[k].second.first &&\n                        cells[j].second.second != cells[k].second.second) {\n                        \n                        // Calculate the sum of the selected three cells\n                        long long currentSum = cells[i].first * 1LL + cells[j].first *1LL + cells[k].first *1LL;\n                        maxSum = max(maxSum, currentSum);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    return maxSum;\n}\n};",
    "submit_ts": "1723908138",
    "subm_id": "1359139798"
}