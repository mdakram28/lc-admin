{
    "username": "prathameshdshinde53",
    "submission": "class Solution {\npublic:\n    int findNext(vector<int>& v, int ci) {\n        return upper_bound(v.begin(), v.end(), ci) - v.begin();\n    }\n\n    int maxLengthRecursive(vector<int>& nums, int index, int remainingChanges, bool isStrict, map<int, vector<int>>& indexMap, vector<vector<vector<int>>>& memo) {\n        if (index >= nums.size()) return 0;\n        if (remainingChanges < 0) return 0;\n        if (memo[index][remainingChanges][isStrict] != -1) return memo[index][remainingChanges][isStrict];\n\n        int maxLength = 0;\n        int nextIndex = findNext(indexMap[nums[index]], index);\n        if (nextIndex < indexMap[nums[index]].size()) {\n            maxLength = max(maxLength, 1 + maxLengthRecursive(nums, indexMap[nums[index]][nextIndex], remainingChanges, true, indexMap, memo));\n        } else {\n            maxLength = max(maxLength, 1 + maxLengthRecursive(nums, nums.size(), remainingChanges, true, indexMap, memo));\n        }\n        if (remainingChanges)\n            maxLength = max(maxLength, 1 + maxLengthRecursive(nums, index + 1, remainingChanges - 1, false, indexMap, memo));\n        if (!isStrict)\n            maxLength = max(maxLength, maxLengthRecursive(nums, index + 1, remainingChanges, false, indexMap, memo));\n        \n        return memo[index][remainingChanges][isStrict] = maxLength;\n    }\n\n    int maximumLength(vector<int>& nums, int changesAllowed) {\n        map<int, vector<int>> indexMap;\n        for (int i = 0; i < nums.size(); i++) {\n            indexMap[nums[i]].push_back(i);\n        }\n        \n        vector<vector<vector<int>>> memo(nums.size(), vector<vector<int>>(changesAllowed + 1, vector<int>(2,-1)));\n        return maxLengthRecursive(nums, 0, changesAllowed, false, indexMap, memo);\n    }\n};\n",
    "submit_ts": "1717860796",
    "subm_id": "1281769670"
}