{
    "username": "tusharraj_2002",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> q1;\n        for(auto val:horizontalCut){\n            q1.push(val);\n        }\n        priority_queue<int> q2;\n        for(auto val:verticalCut){\n            q2.push(val);\n        }\n        int x = 1;\n        int y = 1;\n        long long cost = 0;\n        while (!q1.empty() || !q2.empty()) {\n            if (!q1.empty() && (q2.empty() || q1.top() >= q2.top())) {\n                cost += q1.top() * y;\n                q1.pop();\n                x++;\n            }\n            else {\n                cost += q2.top() * x;\n                q2.pop();\n                y++;\n            }\n        }       \n        return cost;\n    }\n};",
    "submit_ts": "1720925399",
    "subm_id": "1320253448"
}