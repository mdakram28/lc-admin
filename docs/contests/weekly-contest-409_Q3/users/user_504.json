{
    "username": "hiiragikagami-77",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int m = queries.size();\n        map<int, int> intervals;\n        int cut = 0;\n        vector<int> ans(m, 0);\n\n        for (int i = 0; i < m; i++) {\n            if (i > 0 && ans[i - 1] == 1) {\n                ans[i] = 1;\n                continue;\n            }\n\n            int left = queries[i][0];\n            int right = queries[i][1];\n            map<int, int>::iterator it = intervals.upper_bound(left);\n\n            if (it == intervals.end() || it->second >= right) {\n                intervals[right] = left;\n                cut += right - left - 1;\n                ans[i] = n - 1 - cut;\n                \n                continue;\n            }\n\n            if (it->second <= left && it->first >= right) {\n                ans[i] = n - 1 - cut;\n\n                continue;\n            }\n            \n            while (it != intervals.end() && it->second >= left && it->first <= right) {\n                cut -= it->first - it->second - 1;\n                it = intervals.erase(it);        \n            }\n\n            cut += right - left - 1;\n            intervals[right] = left;\n            ans[i] = n - 1 - cut;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722741171",
    "subm_id": "552336469"
}