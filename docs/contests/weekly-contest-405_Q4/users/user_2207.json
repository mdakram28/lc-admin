{
    "username": "akshayrajan",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        Trie trie = new Trie();\n        \n        for (int i = 0; i < words.length; i++) {\n            trie.insert(words[i], i, costs);\n        }\n\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0; \n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            TrieNode curr = trie.root;\n            for (int j = i; j < n; j++) {\n                int c = target.charAt(j) - 'a';\n                if (curr.children[c] == null) break;\n                curr = curr.children[c];\n                if (curr.index != -1) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + costs[curr.index]);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];        \n    }\n}\n\nclass TrieNode {\n    TrieNode[] children;\n    int index;\n    TrieNode() {\n        children = new TrieNode[26];\n        index = -1;\n    }\n}\nclass Trie {\n    TrieNode root;\n    Trie() {\n        root = new TrieNode();\n    }\n    void insert(String word, int index, int[] cost) {\n        TrieNode curr = root;\n        for (char ch: word.toCharArray()) {\n            if (curr.children[ch - 'a'] == null) {\n                curr.children[ch - 'a'] = new TrieNode();\n            }\n            curr = curr.children[ch - 'a'];\n        }\n        if (curr.index == -1) curr.index = index;\n        else curr.index = cost[curr.index] > cost[index] ? index : curr.index;\n    }\n}",
    "submit_ts": "1720324249",
    "subm_id": "1312395044"
}