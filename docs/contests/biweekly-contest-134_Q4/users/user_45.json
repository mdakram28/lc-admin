{
    "username": "Maruzensky",
    "submission": "from collections import deque\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        \n        bit_map = [deque() for _ in range(30)]\n        \n        for j, x in enumerate(nums):\n            for i in range(30):\n                if (1 << i) & x == 0:\n                    bit_map[i].append(j)\n                    \n        answer = 0\n        \n        for j, x in enumerate(nums):\n            cand = []\n            for i in range(30):\n                if bit_map[i]:\n                    cand.append(bit_map[i][0])\n                    \n            cand.append(j)\n            cand = sorted(list(set(cand)))\n            # print(cand)\n            \n            prev = j\n            mask = x\n            for idx in cand:\n                next_ = idx\n                if mask == k:\n                    answer += next_ - prev\n                    \n                mask &= nums[idx]\n                \n                prev = next_\n                \n            if mask == k:\n                answer += n - prev\n            \n            for i in range(30):\n                if bit_map[i] and bit_map[i][0] == j:\n                    bit_map[i].popleft()\n        \n        return answer",
    "submit_ts": "1720277785",
    "subm_id": "1311679870"
}