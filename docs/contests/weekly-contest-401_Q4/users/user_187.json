{
    "username": "fweoifhe",
    "submission": "class Solution {\npublic:\n    unordered_set<int> S;\n    constexpr static int N = 1e5 + 5;\n    bool f[N];\n#if 0\n    sort(rewards.begin(), rewards.end());\n    const int m = unique(rewards.begin(), rewards.end()) - rewards.begin();\n    rewards.resize(m);\n#endif\n    int maxTotalReward(vector<int>& rewards) {\n        const int n = rewards.size();\n        int ans = 0;\n        deque<int> q;\n        for (auto x : rewards) S.insert(x);\n        f[0] = true;\n        for (int i = 1; i < N; i ++ ) {\n            if (S.count(i)) q.push_back(i);\n            while (q.size() && !(q.front() > i - q.front())) q.pop_front();\n            for (auto j : q) {\n                if (f[i - j]) {\n                    f[i] = true;\n                    break;\n                }\n            } \n            if (f[i]) ans = max(ans, i);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717902329.0
}