{
    "username": "dawnzhu-f",
    "submission": "N = 10 ** 5 + 5\nlg = [0] * N\n\nfor i in range(2, N):\n    lg[i] = lg[i >> 1] + 1\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        st = [[(1 << 30) - 1] * n for _ in range(20)]\n        for i in range(n):\n            st[0][i] = nums[i]\n        for i in range(1, 20):\n            for j in range(n-(1<<i)+1):\n                st[i][j] = st[i-1][j] & st[i-1][j+(1<<(i-1))]\n        \n        def get_and(x, y):\n            l = lg[y - x + 1]\n            return st[l][x] & st[l][y-(1<<l)+1]\n\n        ans = 0\n        for i in range(n):\n            l1, r1 = -1, i + 1\n            while l1 + 1 < r1:\n                mid = l1 + r1 >> 1\n                if get_and(mid, i) >= k:\n                    r1 = mid\n                else:\n                    l1 = mid\n            \n            l2, r2 = -1, i + 1\n            while l2 + 1 < r2:\n                mid = l2 + r2 >> 1\n                if get_and(mid, i) > k:\n                    r2 = mid\n                else:\n                    l2 = mid\n            \n            if 0 <= l2 <= i and 0 <= r1 <= i:\n                ans += l2 - r1 + 1\n        return ans",
    "submit_ts": "1720278625",
    "subm_id": "544563528"
}