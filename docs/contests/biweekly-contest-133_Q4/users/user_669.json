{
    "username": "silent_hunter",
    "submission": "class Solution {\n    static const int mod = 1e9 + 7;\n    static const int nmax = 500;\n    int req[nmax];\n    int memo[nmax][nmax];\npublic:\n    int solve(int n, int want)\n    {\n        if(!n)\n        {\n            if(!want)\n                return 1;\n            return 0;\n        }\n        if(req[n] != -1)\n        {\n            if(want)\n                return 0;\n            want = req[n];\n        }\n        \n        if(memo[n][want] != -1)\n            return memo[n][want];\n        int ans = 0;\n        for(int i = 0;i <= min(n - 1, want);++i)\n            ans += solve(n - 1, want - i), ans %= mod;\n        return memo[n][want] = ans;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        sort(r.begin(), r.end());\n        memset(req, -1, sizeof(req));\n        for(int i = 0;i < r.size();++i)\n        {\n            if(!i)\n                req[r[i][0] + 1] = r[i][1];\n            else\n                req[r[i][0] + 1] = r[i][1] - r[i - 1][1];\n        }\n        memset(memo, -1, sizeof(memo));\n        //cout << solve(3, 0);\n        return solve(n, 0);\n    }\n};",
    "submit_ts": 1719070496.0
}