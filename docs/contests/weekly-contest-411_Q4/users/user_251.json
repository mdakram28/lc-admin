{
    "username": "macrohard",
    "submission": "class Solution {\n    public long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n        int n = s.length();\n        long[] pre = new long[n+1];\n        long[] cnts = new long[n];\n\n        for(int l = 0, r = 0, c0 = 0, c1 = 0; r < n; r++) {\n            char cur = s.charAt(r);\n            if(cur == '0') {\n                c0++;\n            } else {\n                c1++;\n            }\n            while(c0 > k && c1 > k) {\n                char left = s.charAt(l++);\n                if(left == '0') {\n                    c0--;\n                } else {\n                    c1--;\n                }\n            }\n            pre[r+1] = pre[r] + r - l + 1;\n            cnts[r] = r - l + 1;\n        }\n\n        long[] res = new long[queries.length];\n        for(int i = 0; i < queries.length; i++) {\n            var q = queries[i];\n            int left = q[0], right = q[1];\n            \n            int l = left, r = right;\n            while(l <= r) {\n                int m = (l+r)/2;\n                if(m - cnts[m] + 1 >= left) {\n                    r = m-1;\n                } else {\n                    l = m+1;\n                }\n            }\n            res[i] = pre[right+1] - pre[l];\n            long bottom = r - left + 1;\n            res[i] += (1 + bottom) * bottom / 2;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723952280",
    "subm_id": "1359792480"
}