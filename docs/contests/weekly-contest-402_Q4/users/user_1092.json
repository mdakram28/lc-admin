{
    "username": "Tanmay7404",
    "submission": "class Solution {\npublic:\n    \n    void Build_Tree(int node,int st,int end, int * tree, int *A){\n        if(st==end){\n            tree[node] = A[st];\n            return;\n        }\n        int nl = 2*node + 1;\n        int nr = 2*node + 2;\n        int mid = (st+end)/2;\n        Build_Tree(nl,st,mid,tree,A);\n        Build_Tree(nr,mid+1,end,tree,A);\n        tree[node] = tree[nl] + tree[nr];\n        return;\n    }\n    \n    void Update(int node,int st, int end, int* tree, int* A, int pos){\n        if(st==end){\n            tree[node] = A[st];\n            return;\n        }\n        int nl = 2*node + 1;\n        int nr = 2*node + 2;\n        int mid = (st+end)/2;\n        if(pos<=mid){\n            Update(nl,st,mid,tree,A,pos);\n        }\n        else{\n            Update(nr,mid+1,end,tree,A,pos);\n\n        }\n        \n        tree[node] = tree[nl] + tree[nr];\n        return;\n    }\n    \n    int RS(int node,int st,int end,int*tree,int l, int r){\n        if((r<st)||(l>end)){\n            return 0;\n        }\n        if((st>=l)&&(end<=r)){\n            return tree[node];\n        }\n        int nl = 2*node + 1;\n        int nr = 2*node + 2;\n        int mid = (st+end)/2;\n        int a1 = RS(nl,st,mid,tree,l,r);\n        int a2 = RS(nr,mid+1,end,tree,l,r);\n        return a1+a2;\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int n = nums.size();\n        int peak[n];\n        peak[0] = peak[n-1] = 0;\n        for(int i=1;i<n-1;i++){\n            if((nums[i]>nums[i-1])&&(nums[i]>nums[i+1])){\n                peak[i]=1;\n            }\n            else{\n                peak[i] = 0;\n            }\n        }\n        int tree[4*n];\n        Build_Tree(0,0,n-1,tree,peak);\n        for(auto x:queries){\n            if(x[0]==1){\n                if(x[2]-x[1]>=2){\n                    ans.push_back(RS(0,0,n-1,tree,x[1]+1,x[2]-1));\n                }\n                else{\n                    ans.push_back(0);\n                }\n            }\n            else{\n                int i = x[1];\n                int nw = x[2];\n                nums[i] = nw;\n                for(int j=i-1;j<=i+1;j++){\n                    if((j<0)||(j>=n)){\n                        continue;\n                    }\n                    if((j==0)||(j==n-1)){\n                        peak[j] = 0;\n                    }\n                    else{\n                        if((nums[j]>nums[j-1])&&(nums[j]>nums[j+1])){\n                            peak[j]=1;\n                        }\n                        else{\n                            peak[j] = 0;\n                        }\n                    }\n                    Update(0,0,n-1,tree,peak,j);\n                }\n                // cout<<tree[0];\n\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508918.0
}