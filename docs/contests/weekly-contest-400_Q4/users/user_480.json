{
    "username": "MRITuhin",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        map<int, int> f;\n        int l = 0, r = 0;\n        int res = INT_MAX;\n        while (true) { //r < nums.size()\n            int val = 0;\n            for (int i = 0; i < 31; i++) {\n                if (!f[i]) {\n                    val |= (1 << i);\n                }\n            }\n            res = min(res, abs(val - k));\n            if (val > k) {\n                if (r == nums.size()) {\n                    break;\n                }\n                for (int i = 0; i < 31; i++) {\n                    if ((nums[r] & (1 << i)) == 0) {\n                        f[i]++;\n                    }\n                }\n                r++;\n            } else {\n                for (int i = 0; i < 31; i++) {\n                    if ((nums[l] & (1 << i)) == 0) {\n                        f[i]--;\n                    }\n                }\n                l++;\n            }\n        }\n        return res;\n    }\n}; ",
    "submit_ts": 1717299218.0
}