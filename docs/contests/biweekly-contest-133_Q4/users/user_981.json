{
    "username": "pandeyGRocks",
    "submission": "\ntypedef long long int ll;\n\nll mod = 1e9 + 7;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        int m = r.size();\n        \n        sort(r.begin(), r.end());\n        int lg = 0;\n\n        map <ll, ll> mp;\n        set <ll> st;\n\n        for(ll i = 0; i < m; ++i){\n            lg = max(r[i][0] + 1, lg);\n            mp[r[i][0] + 1] = r[i][1];\n            st.insert(r[i][0] + 1);\n        }\n\n        vector <vector <ll>> t(n + 1, vector <ll> (mp[lg] + 1, 0));\n        t[0][0] = 1ll;\n\n        for (int i = 1; i <= lg; ++i) {\n            for (int j = 0; j <= mp[lg]; ++j) {\n                // cout << i << \" \" << j << \" \" << mp[i] << \" \";\n                if(st.count(i) && j != mp[i]){\n                    // cout << \"Fail\\n\";\n                    t[i][j] = 0;\n                    continue;\n                }\n                // cout << \"\\n\";\n\n                t[i][j] = 0;\n                for (int k = 0; k <= min(j, i - 1); ++k) {\n                    t[i][j] += t[i - 1][j - k];\n                    t[i][j] %= mod;\n                }\n\n            }\n        }\n        \n        return t[n][mp[lg]];\n    }\n};",
    "submit_ts": "1719071727",
    "subm_id": "1296852829"
}