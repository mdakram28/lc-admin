{
    "username": "pratikshsk",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int low = 0;\n        int hi = 1;\n        int cnt = 0;\n        multiset<int>st;\n        stack<int>stk;\n            for(int i=0;i<1000;i++) stk.push(i);\n\n\n        while (hi < n + k - 1) {\n            if (colors[hi % n] != colors[(hi - 1) % n]) {\n                if (hi - low + 1 == k) {\n                    cnt++;\n                    low++;\n                    st.insert(cnt);\n                }\n            } else {\n                low = hi;\n                st.insert(low);\n            }\n            hi++;\n        }\n         while(stk.size()) stk.pop();\n         for(int i=0;i<1000;i++) stk.push(i);\n          while(stk.size()) stk.pop();\n        //   while(st.size()) st.erase();\n\n        return cnt;\n    }\n};\n",
    "submit_ts": "1720281595",
    "subm_id": "1311831529"
}