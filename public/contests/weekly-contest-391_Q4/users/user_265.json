{
    "username": "nakanolab",
    "submission": "class Solution:\n  def minimumDistance(self, points: List[List[int]]) -> int:\n    n = len(points)\n    xs1 = sorted((x + y, i) for i, (x, y) in enumerate(points))\n    xs2 = sorted((x - y, i) for i, (x, y) in enumerate(points))\n    ans = 10**12\n    for i in range(n):\n      for j in range(n):\n        if xs1[j][1] != i:\n          xs1min = xs1[j][0]\n          break\n      for j in range(n - 1, -1, -1):\n        if xs1[j][1] != i:\n          xs1max = xs1[j][0]\n          break\n      for j in range(n):\n        if xs2[j][1] != i:\n          xs2min = xs2[j][0]\n          break\n      for j in range(n - 1, -1, -1):\n        if xs2[j][1] != i:\n          xs2max = xs2[j][0]\n          break\n      ans = min(ans, max(xs1max - xs1min, xs2max - xs2min))\n    return ans"
}