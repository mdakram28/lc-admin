{
    "username": "rathipranav330",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        int mod = 1e9 + 7;\n        int ans = 0;\n        \n        unordered_map<int, int> map;\n        \n        for(auto i : requirements)\n        {\n            map[i[0] + 1] = i[1];\n        }\n        \n        vector<vector<long>> count(n + 1, vector<long>(401, 0));\n        count[0][0] = 1;\n        \n        for(int i = 0; i < n + 1; i++)\n        {\n            for(int j = 0; j < 401; j++)\n            {\n                for(int k = 0; k < i; k++)\n                {\n                    if(j - k >= 0)\n                    {\n                        count[i][j] = (count[i][j] + count[i - 1][j - k]) % mod;\n                    }\n                }\n            }\n            \n            if(map.find(i) != map.end())\n            {\n                int inv = map[i];\n                \n                for(int j = 0; j < 401; j++)\n                {\n                    if(j != inv)\n                        count[i][j] = 0;\n                }\n            }\n        }\n        \n        for(long i : count[n])\n        {\n            ans = (ans + i) % mod;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1719071962",
    "subm_id": "1296858065"
}