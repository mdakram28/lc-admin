{
    "username": "\u4e91\u4e0a\u5bd2\u70df",
    "submission": "using System;\nusing System.Collections.Generic;\n\npublic class Solution\n{\n    public long Calc(List<(long first, int second)> a, List<(long first, int second)> b, List<(long first, int second)> c)\n    {\n        long ans = long.MinValue;\n        for (int i = 0; i < 3; ++i)\n        {\n            for (int j = 0; j < 3; ++j)\n            {\n                if (a[i].second == b[j].second) continue;\n                for (int k = 0; k < 3; ++k)\n                {\n                    if (a[i].second == c[k].second || b[j].second == c[k].second) continue;\n                    ans = Math.Max(ans, a[i].first + b[j].first + c[k].first);\n                }\n            }\n        }\n        return ans;\n    }\n\n    public long MaximumValueSum(int[][] board)\n    {\n        List<List<(long first, int second)>> m = new List<List<(long first, int second)>>();\n        int n = board.Length;\n        int end = board[0].Length;\n        for (int i = 0; i < n; ++i)\n        {\n            var p = new PriorityQueue<(long first, int second), long>();\n            m.Add(new List<(long first, int second)>());\n            for (int j = 0; j < end; ++j)\n            {\n                p.Enqueue((board[i][j], j), -board[i][j]);\n            }\n            m[i].Add(p.Dequeue());\n            m[i].Add(p.Dequeue());\n            m[i].Add(p.Dequeue());\n        }\n        long ans = long.MinValue;\n        for (int i = 0; i < n; ++i)\n        {\n            for (int j = i + 1; j < n; ++j)\n            {\n                for (int k = j + 1; k < n; ++k)\n                {\n                    ans = Math.Max(ans, Calc(m[i], m[j], m[k]));\n                }\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1723906307",
    "subm_id": "556317625"
}