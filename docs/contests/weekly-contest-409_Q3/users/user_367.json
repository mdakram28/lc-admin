{
    "username": "blackdeath1346",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) \n    {\n        set<int> nodes;\n        for (int i = 0; i < n; ++i) {\n            nodes.insert(i);\n        }\n\n        vector<int> ans;\n\n        for (const auto& query : queries) {\n            int u = query[0];\n            int v = query[1];\n\n            // Remove nodes strictly between u and v (exclusive of both u and v)\n            auto it = nodes.upper_bound(u);  // Use upper_bound to exclude u\n            while (it != nodes.end() && *it < v) {\n                it = nodes.erase(it);\n            }\n\n            // Push the size of the set after each query\n            ans.push_back(nodes.size()-1);\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": "1722741452",
    "subm_id": "1343745367"
}