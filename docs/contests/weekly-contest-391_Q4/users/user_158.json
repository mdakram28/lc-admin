{
    "username": "JeffreyLC",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        const int n = points.size();\n        vector<int> sum(n), diff(n);\n        for (int i = 0; i < n; ++i) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        multiset<int> ms_sum(sum.begin(), sum.end());\n        multiset<int> ms_diff(diff.begin(), diff.end());\n        int ans = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            ms_sum.erase(ms_sum.find(sum[i]));\n            ms_diff.erase(ms_diff.find(diff[i]));\n            int max_dist = max(*ms_sum.rbegin() - *ms_sum.begin(), *ms_diff.rbegin() - *ms_diff.begin());\n            ans = min(ans, max_dist);\n            ms_sum.insert(sum[i]);\n            ms_diff.insert(diff[i]);\n        }\n        return ans;\n    }\n};"
}