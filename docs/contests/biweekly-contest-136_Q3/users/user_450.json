{
    "username": "joe-33",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        res = 0\n        all1, all0, diff = 0, 0, 0\n        for i in range((m+1) // 2):\n            for j in range((n+1) // 2):\n                l, r = j, n-1-j\n                u, d = i, m-1-i\n                if l == r and u == d:\n                    if grid[i][j] == 1:\n                        res += 1\n                elif l == r:\n                    if grid[u][l] == 0 and grid[d][l] == 0:\n                        all0 += 1\n                    elif grid[u][l] == 1 and grid[d][l] == 1:\n                        all1 += 1\n                    else:\n                        diff += 1\n                elif u == d:\n                    if grid[u][l] == 0 and grid[u][r] == 0:\n                        all0 += 1\n                    elif grid[u][l] == 1 and grid[u][r] == 1:\n                        all1 += 1\n                    else:\n                        diff += 1\n                else:\n                    num1 = grid[u][l] + grid[u][r] + grid[d][l] + grid[d][r]\n                    num0 = 4 - num1\n                    res += min(num0, num1)\n\n        if all1 % 2 == 1 and diff == 0:\n            res += 2\n        else:\n            res += diff\n        return res",
    "submit_ts": "1722697192",
    "subm_id": "552264876"
}