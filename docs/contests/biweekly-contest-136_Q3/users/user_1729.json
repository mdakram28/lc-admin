{
    "username": "Pajju_0330",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        set<pair<int,int>>st;\n        int ans = 0;\n        int middleOnes = 0;\n        for(int i = 0; i < (n+1)/2; ++i){\n            for(int j = 0; j < (m+1)/2; ++j){\n                st.clear();\n                int one = 0;\n                int i2 = n - i - 1;\n                int j2 = m - j - 1;\n                if(st.find({i,j}) == st.end()){\n                    if(grid[i][j] == 1) one++;\n                    st.insert({i,j});\n                }\n                if(st.find({i,j2}) == st.end()){\n                     if(grid[i][j2] == 1) one++;\n                     st.insert({i,j2});\n                }\n                 if(st.find({i2,j2}) == st.end()){\n                     if(grid[i2][j2] == 1) one++;\n                     st.insert({i2,j2});\n                }\n                 if(st.find({i2,j}) == st.end()){\n                     if(grid[i2][j] == 1) one++;\n                     st.insert({i2,j});\n                }\n                if(st.size() == 4){\n                    ans += (4 - max(one, 4 - one));    \n                }else{\n                    middleOnes += one;\n                }\n                \n    \n            }\n        }\n        if(n % 2 == 1 and m % 2 == 1){\n            if(grid[n/2][m/2] == 1) {\n                ans++;\n                middleOnes--;\n                grid[n/2][m/2] = 0;\n            }\n        }\n        int cnt1 = 0, cnt2 = 0;\n        int ones = 0;\n        if(n % 2 == 1){\n            for(int j = 0; j < m/2; ++j){\n                if(grid[n/2][j] != grid[n/2][m - j - 1]) cnt1++;\n                if(grid[n/2][j] == grid[n/2][m - j - 1] and grid[n/2][j] == 1) ones+=2;\n            }\n        }\n        if(m % 2 == 1){\n            for(int i = 0; i < n/2; ++i){\n                if(grid[i][m/2] != grid[n - i - 1][m/2]) cnt2++;\n                if(grid[i][m/2] == grid[n - i - 1][m/2] and grid[i][m/2] == 1) ones+=2;\n            }\n        }\n        ones %= 4;\n        ans += cnt1 + cnt2;\n        \n        if((ones == 2 and cnt1 + cnt2 >= 1) or (ones == 0)) return ans;\n        ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722698389",
    "subm_id": "1343179090"
}