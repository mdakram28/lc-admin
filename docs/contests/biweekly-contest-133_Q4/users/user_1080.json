{
    "username": "palak_1522",
    "submission": "\nclass Solution\n{\npublic:\n#define lli long long int\n    const int MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>> &reqs)\n    {\n        map<int, int> r;\n        for (auto &req : reqs)\n        {\n            r[req[0] + 1] = req[1];\n        }\n        vector<vector<lli>> dp(n + 1, vector<lli>(400 + 1, 0));\n        dp[0][0] = 1;\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 0; j <= 400; j++)\n            {\n                for (int k = 0; k < i; k++)\n                {\n                    int prevInv = j - k;\n                    if (prevInv >= 0)\n                    {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n            if (r.count(i))\n            {\n                int targetInv = r[i];\n                for (int j = 0; j <= 400; j++)\n                {\n                    if (j != targetInv)\n                    {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < dp[n].size(); i++)\n        {\n            res = (res + dp[n][i]) % MOD;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1719071961",
    "subm_id": "1296858049"
}