{
    "username": "curiosity-10",
    "submission": "#include <vector>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        vector<int> pos;\n        vector<int> neg;\n        long long ans = 0;\n        // Calculate the difference array and classify positive and negative differences\n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n            if (diff[i] >= 0) {\n                pos.emplace_back(diff[i]);\n                if (neg.size() > 0) {\n                    ans += solve(neg);\n                }\n            } else {\n                neg.emplace_back(-diff[i]);  // Store negative differences as positive values\n                if (pos.size() > 0) {\n                    ans += solve(pos);\n                }\n            }\n        }\n        \n        return ans + solve(pos) + solve(neg);\n    }\n\nprivate:\n    long long solve(vector<int>& diffs) {\n        long long operations = 0;\n        long long prev = 0;\n\n        for (int diff : diffs) {\n            if (diff > prev) {\n                operations += diff - prev;\n            }\n            prev = diff;\n        }\n        diffs.resize(0);\n        return operations;\n    }\n};\n",
    "submit_ts": "1721530993",
    "subm_id": "548382371"
}