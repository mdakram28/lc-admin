{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    int dp[55][5055];\n    set<pair<int, int>> s[55];\n    int maximumLength(vector<int>& nums, int k) {\n        int n = (int)nums.size();\n        int m = n;\n        {\n            vector<int> vs;\n            \n            for (auto x : nums) vs.push_back(x);\n            \n            sort(vs.begin(), vs.end());\n            vs.erase(unique(vs.begin(), vs.end()), vs.end());\n            \n            for (auto& x : nums) x = lower_bound(vs.begin(), vs.end(), x) - vs.begin();\n            \n            m = (int)vs.size();\n        }\n        \n        for (int i = 0; i <= k; i++) {\n            s[i].clear();\n            for (int j = 0; j < m; j++) {\n                dp[i][j] = 0;\n                s[i].insert(make_pair(0, j));\n            }\n        }\n        \n        int res = 0;\n        \n        for (auto x : nums) {\n            for (int i = 0; i <= k; i++) {\n                s[i].erase({dp[i][x], x});\n                res = max(res, ++dp[i][x]);\n                s[i].insert({dp[i][x], x});\n            }\n            \n            for (int i = 1; i <= k; i++) {\n                int high = 0;\n                int prev = dp[i - 1][x];\n                \n                if (s[i - 1].rbegin()->second != x) {\n                    high = max(high, s[i - 1].rbegin()->first);\n                } else {\n                    auto ite = s[i - 1].rbegin();\n                    ++ite;\n                    \n                    if (ite != s[i - 1].rend()) high = max(high, ite->first);\n                }\n                \n                \n                if (high + 1 <= dp[i][x]) continue;\n                \n                s[i].erase({dp[i][x], x});\n                dp[i][x] = max(dp[i][x], high + 1);\n                s[i].insert({dp[i][x], x});\n                \n                res = max(res, dp[i][x]);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1717859962",
    "subm_id": "1281741153"
}