{
    "username": "AlaudaeHong",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:        \n        \n        res = 0\n        for target_2s in range(40, -1, -1):\n            max_possible_val = sum([1] + [2 ** i for i in range(target_2s)])\n            minus_1s = max_possible_val - k\n            total_slots = target_2s + 1\n            \n            if (minus_1s < 0):\n                break\n            elif minus_1s > total_slots:\n                continue\n                \n            # print(target_2s, minus_1s)\n            res += factorial(total_slots) / (factorial(minus_1s) * factorial(total_slots - minus_1s))\n        \n        \n        return int(res)\n        \n        \n        \n        \n        ",
    "submit_ts": 1716090248.0
}