{
    "username": "yadavgaurav9829088",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        \n        unordered_map<int, int> mp;\n        int n = nums.size();\n        for(int i = 0; i < n/2; i++)\n        {\n            mp[abs(nums[i] - nums[n - i - 1])]++;\n        }\n        int maxDiff = 0;\n        int mini = INT_MAX;\n        unordered_map<int, int> freq;\n        for(auto a : mp)\n        {\n            int diff = a.first;\n            int count = a.second;\n            if(freq.find(count) == freq.end())\n                freq[count] = diff;\n            else\n                freq[count] = min(diff, freq[count]);\n        }\n        \n\n        for(auto a : freq){\n            int maxDiff = a.second;\n            int ans = 0;\n            // cout << maxDiff << endl;\n            for(int i = 0; i < n/2; i++)\n            {\n                // cout << endl << \"i \" << i << endl;\n                int diff = abs(nums[i] - nums[n - i - 1]);\n                if(diff == maxDiff) continue;\n                ans++;\n                if(diff <= maxDiff && maxDiff + min(nums[i], nums[n - i - 1]) > k &&  max(nums[i], nums[n - i - 1]) - maxDiff < 0)\n                    ans++;\n                // cout << \"ans \" << ans << endl;\n            }\n            // cout << endl << ans << endl;\n            mini = min(ans, mini);\n        }\n\n        return mini;\n\n    }\n};",
    "submit_ts": "1721489553",
    "subm_id": "1327456780"
}