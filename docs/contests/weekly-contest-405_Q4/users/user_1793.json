{
    "username": "ryanwong0127",
    "submission": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\n#define rep(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep_(i, a, b) for (int i = (a); i > (b); i--)\n#define mst(x, a) memset(x, a, sizeof(x))\n#define all(a) begin(a), end(a)\n#define lowbit(x) ((x) & (-(x)))\n#define bitcnt(x) (__builtin_popcountll(x))\n#define se second\n#define fi first\n#define pb push_back\n#define maxe max_element\n#define mine min_element\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, ll> pil;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vi> vvi;\nconstexpr static int dirs[4][2] = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};\nconstexpr static int inf = 0x3f3f3f3f, mod = 1e9 + 7;\nconst ll infl = 0x3f3f3f3f3f3f3f3fll;\ntemplate<class T> bool chmax(T &a, T b) {\n    if (a >= b) return false;\n    a = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n    if (a <= b) return false;\n    a = b; return true;\n}\ntemplate<class T> bool chsum(T &a, T b) {\n    a = (a + b + mod) % mod;\n    return 0;\n}\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        rep(i, 0, words.size()) {\n            addWord(words[i], costs[i]);\n        }\n\n        n = target.size();\n        rep(i, 1, n + 1) {\n            dp[i] = infl;\n            ll trIdx = 0;\n            rep_(k, i, 0) {\n                int x = target[k - 1] - 'a';\n                if (trie[trIdx].xxx[x] != 0) {\n                    trIdx = trie[trIdx].xxx[x];\n                    chmin(dp[i], dp[k - 1] + trie[trIdx].cost);\n                } else {\n                    break;\n                }\n                \n            }\n        }\n\n        return dp[n] == infl ? -1 : dp[n];\n    }\nprivate:\n    constexpr static int N = 50005;\n    int n;\n    ll curIdx = 0;\n    ll dp[N] = {0};\n    struct TrieNode {\n        ll xxx[26];\n        ll cost = infl;\n    };\n    TrieNode trie[N];\n    \n    void addWord(const std::string& s, ll cost) {\n        ll trIdx = 0;\n        rep_(i, s.size() - 1, -1) {\n            int x = s[i] - 'a';\n            if (trie[trIdx].xxx[x] == 0) {\n                curIdx += 1;\n                trie[trIdx].xxx[x] = curIdx;\n            }\n            trIdx = trie[trIdx].xxx[x];\n        }\n        chmin(trie[trIdx].cost, cost);\n    }\n};",
    "submit_ts": "1720324197",
    "subm_id": "1312393828"
}