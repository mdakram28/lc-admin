{
    "username": "divyang9575",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size() ;\n        long long ans = 0;\n        vector<int> in(n, 0);\n        \n        for (int i = 0; i < n; i++) {\n            in[i] = nums[i] - target[i] ;\n        }\n        \n        int inc = 0 ;\n        int cur = 0, prev = 0 ;\n        for (int i = 0; i < n; i++) {\n            if(in[i] > 0) {\n                if(inc != 1) {\n                    ans += in[i] ;\n                    prev = in[i] ;\n                    inc = 1 ;\n                }\n                else {\n                    \n                    if(prev >= in[i]) {\n                        prev = in[i];\n                    }\n                    else {\n                        ans += in[i] - prev ;\n                        prev += in[i] - prev ;\n                    }\n                }\n            }\n            else if(in[i] < 0) {\n                if(inc != 2) {\n                    ans += abs(in[i]) ;\n                    prev = abs(in[i]) ;\n                    inc = 2;\n                }\n                else {\n                    if(abs(in[i]) <= abs(prev)) {\n                        prev = abs(in[i]) ;\n                    }\n                    else {\n                        ans += abs(in[i]) - abs(prev) ;\n                        prev += abs(in[i]) - abs(prev) ;\n                    }\n                }\n                \n            }\n            else {\n                inc = 0;\n            }\n        }\n        return ans;\n            \n    }\n};",
    "submit_ts": "1721530990",
    "subm_id": "1327949240"
}