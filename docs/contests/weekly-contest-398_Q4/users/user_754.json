{
    "username": "papaya",
    "submission": "#include<bits/stdc++.h>\nusing namespace std ; \n\n#define add emplace_back \n\ntypedef long long int64 ; \n\n\nstruct Comb { \n    vector< vector<int64> > C ;\n    int n ; \n\n    void init( int tn ){\n        n = tn ;\n        C.assign( n + 1 , vector<int64>( n + 1 , 0 ) ) ;\n\n        C[0][0] = 1 ; \n        for( int i = 1 ; i <= n ; i++ ) {\n            C[i][0] = C[i][i] = 1 ; \n            for(int j = 1 ; j < i ; j++ ) {\n                C[i][j] = C[i-1][j] + C[i-1][j-1] ;\n            }\n        }\n    }\n} ; \n\nclass Solution {\npublic:\n    int64 goal ; \n    Comb t ; \n\n    int64 solve_1( ) { \n        int64 ret = 0 ; \n\n        for( int64 K = 0 ;  K < 36 ; K++ ) { \n\n            int64 val = ( 1LL << (1+K) ) ; \n            int64 D = ( K + 1 ) ;\n            int64 low = val - D ; \n            int64 high = val ; \n\n            if( goal < low || goal > high ) {\n                continue ; \n            }\n            int64 dk = val - goal ; \n            ret += t.C[ D ] [ dk ] ; // D , dk ) ; \n        }\n        return ret ; \n    }\n\n    int64 solve_2( ) { \n        int64 ret = 0 ; \n\n        for( int64 K = 0 ;  K < 36 ; K++ ) { \n\n            int64 val = ( 1LL << (1+K) ) - 1 ; \n            int64 D = ( K + 1 ) ;\n            int64 low = val - D ; \n            int64 high = val ; \n\n            if( goal < low || goal > high ) {\n                continue ; \n            }\n            int64 dk = val - goal ; \n            ret += t.C[ D ] [ dk ] ; // D , dk ) ; \n        }\n        return ret ; \n    }\n    int waysToReachStair(int t_goal ) {\n        \n        t.init( 50  ) ;\n\n        goal = t_goal ; \n\n        if( goal == 0 ) {\n            return 2 ; \n        }\n        if( goal == 1 ) {\n            return 4 ; \n        }\n        auto t1 = solve_1() ; \n        auto t2 = solve_2() ; \n\n        auto ans = t1 + t2 ; \n        return ans ; \n        \n    }\n};\n\n\n\n\nint ma2in( )  { \n    Solution  t; \n\n    vector<int> a ;\n    int n ; \n\n    int k = 0 ; \n    for( int k = 0 ; k < 10000  ; k++ ) { \n        auto ans = t.waysToReachStair(  k ) ; \n        if( ans > 0 ) { \n            cout << \"k: \" <<  k << \" \" << ans << \"\\n\" ;\n        }\n    }\n\n    return 0 ; \n}\n",
    "submit_ts": "1716089177",
    "subm_id": "1261835215"
}