{
    "username": "kj_1301",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        // long long sol = 0;\n        // for(int i = 0; i < nums.size() ; i++){\n        //     int curr = nums[i];\n        //     for(int j = i; j < nums.size() ; j++){\n        //         if((nums[j] & curr) == k){\n        //             sol++;\n        //         }\n        //         curr = curr & nums[j];\n        //     }\n        // }\n        // return sol;\n           long long sol = 0;\n    unordered_map<int, int> and_count;\n\n    for (int i = 0; i < nums.size(); ++i) {\n        unordered_map<int, int> new_and_count;\n\n        // Start a new subarray at position i\n        if (nums[i] == k) {\n            sol++;\n        }\n        new_and_count[nums[i]]++;\n\n        // Update the AND results for existing subarrays ending at position i-1\n        for (auto& [and_result, freq] : and_count) {\n            int new_and_result = and_result & nums[i];\n            if (new_and_result == k) {\n                sol += freq;\n            }\n            new_and_count[new_and_result] += freq;\n        }\n\n        // Move the new results to the main hash map\n        and_count = std::move(new_and_count);\n    }\n\n    return sol;\n    }\n};",
    "submit_ts": "1720280099",
    "subm_id": "1311776858"
}