{
    "username": "AmyyyKJH",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int[] reverseHCut = new int[m-1];\n        int[] reverseVCut = new int[n-1];\n\n        for(int i = 0; i < m - 1; i++){\n            reverseHCut[i] = horizontalCut[m-2-i];\n        }\n        for(int i = 0; i < n - 1; i++){\n            reverseVCut[i] = verticalCut[n-2-i];\n        }\n\n        int hPieces = 1;\n        int vPieces = 1;\n        long totalCost = 0;\n        int hIndex = 0;\n        int vIndex = 0;\n\n        while(hIndex < m - 1 || vIndex < n - 1){\n            if(vIndex < n - 1 && (hIndex >= m - 1 || reverseVCut[vIndex] >= reverseHCut[hIndex])){\n                totalCost += (long)reverseVCut[vIndex] * hPieces;\n                vPieces++;\n                vIndex++;\n            }else if(hIndex < m - 1){\n                totalCost += (long)reverseHCut[hIndex] * vPieces;\n                hPieces++;\n                hIndex++;\n            }\n        }\n        return totalCost;\n    }\n}",
    "submit_ts": "1720926082",
    "subm_id": "1320275400"
}