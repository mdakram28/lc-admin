{
    "username": "david_feng",
    "submission": "class Solution(object):\n    def minimumSum(self, g):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"\n        h = len(g)\n        w = len(g[0])\n\n        trans = []\n        for i in range(w):\n            curr = []\n            for j in range(h):\n                curr.append(g[j][i])\n            trans.append(curr)  \n\n        ans = h * w\n\n        for i in range(1, h):\n            a, b = g[:i], g[i:]\n            a_area = self.minArea(a)\n            b_area = self.minArea(b)\n            a_split = self.split2(a)\n            b_split = self.split2(b)\n            ans = min(ans, a_area + b_split, b_area + a_split)\n\n        for j in range(1, w):\n            l, r = trans[:j], trans[j:]\n            l_area = self.minArea(l)\n            r_area = self.minArea(r)\n            l_split = self.split2(l)\n            r_split = self.split2(r)\n            ans = min(ans, l_area + r_split, r_area + l_split)\n\n        return ans\n\n    def split2(self, g):\n        h = len(g)\n        w = len(g[0])\n\n        trans = []\n        for i in range(w):\n            curr = []\n            for j in range(h):\n                curr.append(g[j][i])\n            trans.append(curr)                \n\n        ans = h * w\n\n        for i in range(1, h):\n            a, b = g[:i], g[i:]\n            a_area = self.minArea(a)\n            b_area = self.minArea(b)\n            ans = min(ans, a_area + b_area)\n\n        for j in range(1, w):\n            l, r = trans[:j], trans[j:]\n            l_area = self.minArea(l)\n            r_area = self.minArea(r)\n            ans = min(ans, l_area + r_area)\n\n        return ans\n\n    def minArea(self, g):\n        h = len(g)\n        w = len(g[0])\n\n        fh, lh = None, None\n        fw, lw = None, None\n\n        for i in range(h):\n            for j in range(w):\n                if fh is None and g[i][j] == 1:\n                    fh = i\n                if g[i][j] == 1:\n                    lh = i\n\n        for j in range(w):\n            for i in range(h):\n                if fw is None and g[i][j] == 1:\n                    fw = j\n                if g[i][j] == 1:\n                    lw = j\n\n        if fh is None and lh is None:\n            return 0\n\n        return (lh - fh + 1) * (lw - fw + 1)\n",
    "submit_ts": "1719114202",
    "subm_id": "1297341952"
}