{
    "username": "sujal25",
    "submission": "import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public long countSubarrays(int[] colors, int shade) {\n        int n = colors.length;\n        long count = 0;\n        \n        Map<Long, Long> previousResults = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> currentResults = new HashMap<>(); \n\n            if (colors[i] == shade) {\n                ++count;\n            }\n            currentResults.put((long) colors[i], 1L);\n\n            for (Map.Entry<Long, Long> entry : previousResults.entrySet()) {\n                long newAndResult = entry.getKey() & colors[i];\n                if (newAndResult == shade) {\n                    count += entry.getValue();\n                }\n                currentResults.put(newAndResult, currentResults.getOrDefault(newAndResult, 0L) + entry.getValue());\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return count;\n    }\n}\n",
    "submit_ts": "1720279081",
    "subm_id": "1311736575"
}