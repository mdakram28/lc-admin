{
    "username": "seedjyh",
    "submission": "typedef long long LL;\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<LL> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = (LL)target[i] - (LL)nums[i];\n        }\n        LL ans = 0;\n        vector<LL> tmp;\n        for (auto x : diff) {\n            if (x == 0) {\n                ans += calc(tmp);\n                tmp.clear();\n            } else if (x > 0) {\n                if (tmp.empty() || tmp.back() > 0) {\n                    tmp.push_back(x);\n                } else {\n                    ans += calc(tmp);\n                    tmp.clear();\n                    tmp.push_back(x);\n                }\n            } else { // x < 0\n                if (tmp.empty() || tmp.back() < 0) {\n                    tmp.push_back(x);\n                } else {\n                    ans += calc(tmp);\n                    tmp.clear();\n                    tmp.push_back(x);\n                }\n            }\n        }\n        ans += calc(tmp);\n        return ans;\n    }\n    LL calc(vector<LL> &tmp) {\n        LL ans = 0;\n        for (int i = 0; i < tmp.size(); i++) {\n            if (tmp[i] < 0) tmp[i] = -tmp[i];\n        }\n        LL pre = 0;\n        for (auto x : tmp) {\n            if (x > pre) {\n                ans += x - pre;\n            }\n            pre = x;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532482",
    "subm_id": "548392608"
}