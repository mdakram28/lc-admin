{
    "username": "Edge_Case",
    "submission": "class Solution {\n    private:\n    static const int MAXI=400;\n    static const int mod=1000000007;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int,int>invcnt;\n        int sz=requirements.size();\n        int len=1;\n        for(auto ele:requirements){\n            invcnt[ele[0]+1]=ele[1];\n        }\n        \n        vector<vector<long long>> t(n+1,vector<long long>(MAXI+1,0));\n        t[0][0]=1;\n        \n        while(len<=n){\n            int currinv=0;\n            while(currinv<=MAXI){\n                int newpos=0;\n                while(newpos<len){\n                    int previnv=currinv-newpos;\n                    if(previnv>=0){\n                        t[len][currinv]=(t[len][currinv]+t[len-1][previnv])%mod;\n                    }\n                    newpos++;\n                }\n                currinv++;\n            }\n            if(invcnt.count(len)>0){\n                int currinv=0;\n                int invreq=invcnt[len];\n                while(currinv<=MAXI){\n                    if(currinv!=invreq){\n                        t[len][currinv]=0;\n                    }\n                    currinv++;\n                }\n            }\n            len++;\n        }\n        long long answer=0;\n        int currinv=0;\n        while(currinv<=MAXI){\n            answer=(answer+t[n][currinv])%mod;\n            currinv++;\n        }\n        \n        return static_cast<int>(answer);\n    }\n};",
    "submit_ts": "1719071454",
    "subm_id": "1296847134"
}