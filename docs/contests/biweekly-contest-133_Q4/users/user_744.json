{
    "username": "vishwavirus",
    "submission": "   static const int MOD =1e9+7;\n    static const int MAX_INV = 400;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n           map<int, int> end_to_inv;\n        for (int i=0;i<reqs.size();++i) {\n            end_to_inv[reqs[i][0] + 1] = reqs[i][1]; \n\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        int len = 1;\n        while (len < n+1) {\n            int cur_inv = 0;\n\n            while (cur_inv <1+ MAX_INV) {\n\n                int new_pos = 0;\n                while (new_pos < len) {\n\n                    int prev_inv = cur_inv - new_pos;\n                    if (prev_inv >= 0) \n                        dp[len][cur_inv] = (dp[len][cur_inv] + dp[len - 1][prev_inv]) % MOD;\n                    \n                    ++new_pos;\n                }\n                cur_inv+=1;\n            }\n\n            if (end_to_inv.count(len) > 0) {\n                  int cur_inv = 0;\n                int req_inv = end_to_inv[len];\n              \n                while (cur_inv < MAX_INV+1) {\n                    if (cur_inv != req_inv) \n                        dp[len][cur_inv] = 0;\n                    \n                    cur_inv+=1;\n                }\n            }\n\n            len+=1;\n        }\n int cur_inv = 0;\n        long long res = 0;\n       \n        while (cur_inv < MAX_INV+1) {\n            res = (res + dp[n][cur_inv]) % MOD;\n            cur_inv+=1;\n        }\n\n        return static_cast<int>(res);\n    }\n};\n",
    "submit_ts": "1719070832",
    "subm_id": "1296832785"
}