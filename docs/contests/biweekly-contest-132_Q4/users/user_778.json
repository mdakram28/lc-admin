{
    "username": "yell0wfl4sh",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        // vector<vector<int> > dp(n, vector<int>(k+1, 0));\n        vector<int> dp(k+1, 0);\n        vector<int> dp1(k+1, 0);\n        unordered_map<int, vector<int> > mp;\n        vector<int> unq;\n\n        int ans = 0;\n        for(int i=0; i<n; i++){\n            for(int j=0; j<=k; j++){\n                if(i==0 && j==0){\n                    dp[j] = 1;\n                    dp1[j] = 1;\n                }else if(j==0){\n                    if(mp.count(nums[i])){\n                        dp[j] = mp[nums[i]][0] + 1;\n                    }else{\n                        dp[j] = 1;\n                    }\n                }else if(i==0){\n                    dp[j] = dp[j-1];\n                }else{\n                    if(mp.count(nums[i])){\n                        dp[j] = mp[nums[i]][j] + 1;\n                    }else{\n                        dp[j] = 0;\n                    }\n                    \n                    dp[j] = max(dp[j], dp1[j-1]+1);\n                    // int l = (int)unq.size() - 1;\n                    // while(l>=0 && unq[l]==nums[i]) l--;\n                    // if(l>=0){\n                    //     dp[j] = max(dp[j], mp[unq[l]][j-1]+1);\n                    // }\n                }\n                ans = max(ans, dp[j]);\n                // cout<<dp[j]<<\" \";\n            }\n            // cout<<endl;\n            for(int j=0; j<=k; j++){\n                dp1[j] = max(dp[j], dp1[j]);\n            }\n            \n            if(unq.empty() || (unq.back()!=nums[i])) unq.push_back(nums[i]);\n            mp[nums[i]] = dp;\n        }\n        \n        \n        return ans;\n        \n        \n    }\n};\n\n/*\n[89,89,90,88,88,88,88,90,90]\n2\n*/",
    "submit_ts": "1717862263",
    "subm_id": "1281817452"
}