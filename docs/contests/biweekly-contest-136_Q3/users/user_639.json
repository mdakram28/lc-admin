{
    "username": "cse210001081",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n        int m=grid.size();\n        int n=grid[0].size();\n        long long count=0;\n        long long count1=0;\n        long long avail=0;\n        for(int i=0;i<=(m-1)/2;i++){\n            for(int j=0;j<=(n-1)/2;j++){\n                if(m%2==1&&n%2==1&&i==(m-1)/2&&j==(n-1)/2&&grid[i][j]==1){\n                    count++;\n                    continue;\n                }\n                if(j==n-1-j){\n                    if(grid[i][j]==grid[m-1-i][j]&&grid[i][j]==1){\n                        count1++;\n                    }else if(grid[i][j]!=grid[m-1-i][j]){\n                        count++;\n                        avail++;\n                    }\n                    continue;\n                }\n                if(i==m-1-i){\n                    if(grid[i][j]==grid[i][n-1-j]&&grid[i][j]==1){\n                        count1++;\n                    }else if(grid[i][j]!=grid[i][n-1-j]){\n                        count++;\n                        avail++;\n                    }\n                    continue;\n                }\n                vector<int> temp(2,0);\n                temp[grid[i][j]]++;\n                temp[grid[m-1-i][j]]++;\n                temp[grid[i][n-1-j]]++;\n                temp[grid[m-1-i][n-1-j]]++;\n                count+=4-max(temp[0],temp[1]);\n            }\n        }\n        if(count1>0&&count1%2==1){\n            if(avail>0){\n                return count;\n            }else{\n                return count+2;\n            }\n        }\n        return count;\n    }\n};",
    "submit_ts": "1722697754",
    "subm_id": "1343157731"
}