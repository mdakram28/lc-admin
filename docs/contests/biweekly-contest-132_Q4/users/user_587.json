{
    "username": "sagnik_1729",
    "submission": "class Solution {\npublic:\n    vector<int> a;\n    map<int,vector<int>> mp;\n    map<int,int> ans;\n    int fun(int ind,int k,vector<vector<int>> &dp)\n    {\n        if(dp[ind][k]!=-1)\n            return dp[ind][k];\n        int ans=1;\n        for(int j=ind+1;j<a.size();j++)\n        {\n            if(a[j]==a[ind])\n                ans=max(ans,1+fun(j,k,dp));\n            else if(k>0)\n                ans=max(ans,1+fun(j,k-1,dp));\n                \n        }\n\n        return dp[ind][k]=ans;\n    }\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>> dp(n+1,vector<int>(k+1,1));\n        a=nums;\n        for(int i=0;i<n;i++)\n            mp[a[i]].push_back(i);\n        for(int i=n-1;i>=0;i--)\n        {\n            for(int j=k;j>=0;j--)\n            {\n                //mp[a[i]]->no of ais\n                int ind=lower_bound(mp[a[i]].begin(),mp[a[i]].end(),i)-mp[a[i]].begin();\n                ind++;\n                int cnt=mp[a[i]].size()-ind;\n                if(k==0)\n                    dp[i][j]=max(dp[i][j],1+cnt);\n                else\n                {\n                   if(cnt>0)\n                       dp[i][j]=max({dp[i][j],1+dp[mp[a[i]][ind]][j],1+ans[j-1]});\n                    else\n                        dp[i][j]=max(dp[i][j],1+ans[j-1]);\n                }\n                ans[j]=max(ans[j],dp[i][j]);\n            }\n        }\n        int cc=0;\n        for(int i=0;i<a.size();i++)\n        {\n            for(int j=0;j<=k;j++)\n            {\n                    cc=max(cc,dp[i][j]);\n                // cout<<i<<\" \"<<j<<\" \"<<\"->\"<<dp[i][j]<<endl;\n            }\n                \n        }\n        \n        return cc;\n        \n        \n    }\n};",
    "submit_ts": 1717861665.0
}