{
    "username": "sshang",
    "submission": "class SEG:\n    def __init__(self, n):\n        self.n = n\n        self.tree = [0] * 2 * self.n\n\n    def query(self, l, r):\n        \n        # print(l, r, self.tree)\n        \n        l += self.n\n        r += self.n\n        ans = 0\n        while l < r:\n            if l & 1:\n                ans += self.tree[l]\n                l += 1\n            if r & 1:\n                r -= 1\n                ans += self.tree[r]\n            l >>= 1\n            r >>= 1\n        return ans\n    \n    def update(self, i, val):\n        # print(i, val)\n        \n        i += self.n\n        diff = val - self.tree[i]\n        \n        if diff != 0:\n            self.tree[i] = val\n            while i > 1:\n                i >>= 1\n                self.tree[i] += diff\n                \n        # print(self.tree)\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        \n        n = len(nums)\n        seg = SEG(n)\n        \n        for i in range(1, n - 1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                seg.update(i, 1)\n                \n        res = []\n        for a, b, c in queries:\n            if a == 1:\n                res.append(seg.query(b+1, c))\n            else:\n                nums[b] = c\n                if 0 < b < n-1:\n                    if nums[b] > nums[b-1] and nums[b] > nums[b+1]:\n                        seg.update(b, 1)\n                    else:\n                        seg.update(b, 0)\n                    \n                if 0 < b-1 < n-1:\n                    if nums[b-1] > nums[b-2] and nums[b-1] > nums[b]:\n                        seg.update(b-1, 1)\n                    else:\n                        seg.update(b-1, 0)\n                    \n                if 0 < b+1 < n-1:\n                    if nums[b+1] > nums[b] and nums[b+1] > nums[b+2]:\n                        seg.update(b+1, 1)\n                    else:\n                        seg.update(b+1, 0)\n        return res\n        ",
    "submit_ts": 1718507614.0
}