{
    "username": "codebush",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    int minimumDifference(std::vector<int> oxygenLevels, int target) {\n        int currentBitwiseAnd = oxygenLevels[0];  \n        int bestDifference = std::abs(currentBitwiseAnd - target);  \n\n        std::unordered_map<int, int> bitCountsInWindow; \n        int number = oxygenLevels[0];  \n        for (int bit = 0; bit < 32; bit++)  \n        {  \n            if (number & (1 << bit))  \n            {  \n                bitCountsInWindow[bit]++;  \n            }  \n        }  \n\n        int leftIndex = 0, rightIndex = 0;  \n        while (rightIndex < oxygenLevels.size())  \n        {  \n            if (currentBitwiseAnd > target || leftIndex > rightIndex)  \n            {  \n                rightIndex++;  \n                if (rightIndex >= oxygenLevels.size())  \n                {  \n                    break;  \n                }  \n                number = oxygenLevels[rightIndex];  \n                for (int bit = 0; bit < 32; bit++)  \n                {  \n                    if (number & (1 << bit))  \n                    {  \n                        bitCountsInWindow[bit]++;  \n                    }  \n                }  \n            }  \n            else  \n            {     \n                number = oxygenLevels[leftIndex];  \n                for (int bit = 0; bit < 32; bit++)  \n                {  \n                    if (number & (1 << bit))  \n                    {  \n                        bitCountsInWindow[bit]--;  \n                    }  \n                }  \n                leftIndex++;  \n            }  \n\n            currentBitwiseAnd = 0;  \n            for (auto it = bitCountsInWindow.begin(); it != bitCountsInWindow.end(); it++)  \n            {     \n                if (it->second == rightIndex - leftIndex + 1)  \n                {  \n                    currentBitwiseAnd += (1 << it->first);  \n                }  \n            }  \n\n            if (leftIndex <= rightIndex)  \n            {  \n                bestDifference = std::min(bestDifference, std::abs(currentBitwiseAnd - target));  \n            }  \n        }  \n\n        return bestDifference; \n    }\n};",
    "submit_ts": 1717299568.0
}