{
    "username": "tmtriet00",
    "submission": "class Solution {\n    public int calcMinChange(int[] nums, long dist, int k){\n        int ans = 0;\n        int n = nums.length;\n        \n        for(int i = 0; i < n/2; ++i){\n            if(Math.abs((long)nums[i] - (long)nums[n-1-i]) == dist){\n                continue;\n            }\n\n            if((long)nums[i] + dist >= 0 && (long)nums[i] + dist <= k){\n                ++ans;\n                continue;\n            }\n            if((long)nums[i] - dist >= 0 && (long)nums[i] - dist <= k){\n                ++ans;\n                continue;\n            }\n            if((long)nums[n-1-i] + dist >= 0 && (long)nums[n-1-i] + dist <= k){\n                ++ans;\n                continue;\n            }\n            if((long)nums[n-1-i] - dist >= 0 && (long)nums[n-1-i] - dist <= k){\n                ++ans;\n                continue;\n            }\n\n            ans = ans + 2;\n        }\n\n        return ans;\n    }\n\n    public int minChanges(int[] nums, int k) {\n        Map<Long, Integer> m = new HashMap<>();\n        int n = nums.length;\n\n        for(int i = 0; i < n/2; ++i){\n            long dist = Math.abs((long)nums[i] - (long)nums[n-1-i]);\n            m.put(dist, m.getOrDefault(dist, 0) + 1);\n        }\n\n        int ans = Integer.MAX_VALUE;\n        \n        for(Map.Entry<Long, Integer> entry : m.entrySet()){\n            long dist = entry.getKey();\n\n            if(n/2 - entry.getValue() >= ans){\n                continue;\n            }\n\n            int change = calcMinChange(nums, dist, k);\n            // System.out.println(dist + \" \" + change);\n            ans = Math.min(ans, change);\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721488231",
    "subm_id": "1327415749"
}