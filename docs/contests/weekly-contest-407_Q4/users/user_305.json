{
    "username": "dohoanggiahuy317",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        # n = len(nums)\n        # diffs = [nums[i] - target[i] for i in range(n)]\n        \n        # ans = 0\n        # i = 0\n        \n        # while i < n:\n        #     if diffs[i] != 0:\n        #         sign = 1 if diffs[i] > 0 else -1\n        #         j = i\n        #         while j < n and diffs[j] * sign > 0:\n        #             diffs[j] -= sign\n        #             j += 1\n        #         ans += 1\n        #     else:\n        #         i += 1\n        \n        # return ans\n\n        n = len(nums)\n        diffs = [nums[i] - target[i] for i in range(n)]\n        \n        ans = 0\n        i = 0\n        \n        while i < n:\n            if diffs[i] != 0:\n                sign = 1 if diffs[i] > 0 else -1\n                j = i\n                m_v = float('inf')\n                \n                while j < n and diffs[j] * sign > 0:\n                    m_v = min(m_v, abs(diffs[j]))\n                    j += 1\n                \n                for k in range(i, j):\n                    diffs[k] -= sign * m_v\n                \n                ans += m_v\n            else:\n                i += 1\n        \n        return ans",
    "submit_ts": "1721530777",
    "subm_id": "1327943552"
}