{
    "username": "Cranjis",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int height = grid.length, width = grid[0].length;\n        int result = 0;\n        \n        result += handleCenterElement(grid, height, width);\n        result += processBorders(grid, height, width);\n        result += processInnerCells(grid, height, width);\n        \n        return result;\n    }\n    \n    private int handleCenterElement(int[][] grid, int height, int width) {\n        if (height % 2 == 1 && width % 2 == 1 && grid[height / 2][width / 2] == 1) {\n            return 1;\n        }\n        return 0;\n    }\n    \n    private int processBorders(int[][] grid, int height, int width) {\n        int[] groups = new int[3];\n        processMidRow(grid, height, width, groups);\n        processMidColumn(grid, height, width, groups);\n        \n        return calculateBorderAdjustments(groups);\n    }\n    \n    private void processMidRow(int[][] grid, int height, int width, int[] groups) {\n        if (height % 2 == 1) {\n            for (int i = 0; i < width / 2; i++) {\n                groups[grid[height / 2][i] + grid[height / 2][width - 1 - i]]++;\n            }\n        }\n    }\n    \n    private void processMidColumn(int[][] grid, int height, int width, int[] groups) {\n        if (width % 2 == 1) {\n            for (int i = 0; i < height / 2; i++) {\n                groups[grid[i][width / 2] + grid[height - 1 - i][width / 2]]++;\n            }\n        }\n    }\n    \n    private int calculateBorderAdjustments(int[] groups) {\n        if (groups[2] % 2 == 1) {\n            return groups[1] > 0 ? groups[1] : 2;\n        }\n        return groups[1];\n    }\n    \n    private int processInnerCells(int[][] grid, int height, int width) {\n        int adjustments = 0;\n        for (int i = 0; i < height / 2; i++) {\n            for (int j = 0; j < width / 2; j++) {\n                int sum = grid[i][j] + grid[height - 1 - i][j] + \n                          grid[i][width - 1 - j] + grid[height - 1 - i][width - 1 - j];\n                if (sum != 0 && sum != 4) {\n                    adjustments += Math.min(sum, 4 - sum);\n                }\n            }\n        }\n        return adjustments;\n    }\n}",
    "submit_ts": "1722699533",
    "subm_id": "1343214560"
}