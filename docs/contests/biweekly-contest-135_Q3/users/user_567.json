{
    "username": "__bunny",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        count_dict = defaultdict(list)\n        n = len(nums)\n        max_diff_dict = {}\n\n        for i in range(n//2):\n            diff = abs(nums[i]-nums[n-1-i])\n            count_dict[diff].append(i)\n            max_diff = max(k-min(nums[i], nums[n-1-i]), max(nums[i], nums[n-1-i]))\n            max_diff_dict[i] = max_diff\n\n       \n        min_changes = float('inf')\n        seen_len = set()\n        for max_diff in sorted(count_dict.keys()):\n            if len(count_dict[max_diff]) in seen_len:\n                continue\n            seen_len.add(len(count_dict[max_diff]))\n            changes = 0\n            for diff in count_dict:\n                if diff != max_diff:\n                    for ele in count_dict[diff]:\n                        if max_diff_dict[ele] < max_diff:\n                            changes += 2\n                        else:\n                            changes += 1\n            min_changes = min(min_changes, changes)\n        return min_changes\n\n        \n        ",
    "submit_ts": "1721488675",
    "subm_id": "1327429712"
}