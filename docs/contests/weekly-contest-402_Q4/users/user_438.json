{
    "username": "agix",
    "submission": "struct FenwickTree\n{\n    vector<long long> bit;\n    int n;\n\n    FenwickTree(int n)\n    {\n        this->n = n + 1;\n        bit.assign(n + 1, 0);\n    }\n\n    FenwickTree(vector<int> arr) : FenwickTree(arr.size())\n    {\n        for (int i = 0; i < arr.size(); i++)\n        {\n            add(i, arr[i]);\n        }\n    }\n\n    long long sum(int ind)\n    {\n        long long ret = 0;\n\n        ind++;\n\n        while (ind > 0)\n        {\n            ret += bit[ind];\n            ind -= ind & (-ind);\n        }\n\n        return ret;\n    }\n\n    long long sum(int l, int r)\n    {\n        return sum(r) - sum(l - 1);\n    }\n\n    void add(int ind, long long val)\n    {\n        ++ind;\n\n        while (ind < n)\n        {\n            bit[ind] += val;\n            ind += ind & (-ind);\n        }\n    }\n\n    void range_add(int l, int r, long long val)\n    {\n        add(l, val);\n        add(r + 1, -val);\n    }\n\n    long long point_query(int ind)\n    {\n        long long ret = 0;\n\n        ++ind;\n\n        while (ind > 0)\n        {\n            ret += bit[ind];\n            ind -= ind & (-ind);\n        }\n\n        return ret;\n    }\n};\n\nclass Solution {\npublic:\n    void updateTree(int ind, vector<int>& nums, FenwickTree& tree)\n    {\n        int n = nums.size();\n        \n        if (ind <= 0 || ind >= n - 1)\n        {\n            return;\n        }\n        \n        int peak = (nums[ind] > nums[ind - 1]) && (nums[ind] > nums[ind + 1]);\n        int q = tree.sum(ind, ind);\n        \n        if (q > peak)\n        {\n            tree.add(ind, -1);\n        }\n        else if (q < peak)\n        {\n            tree.add(ind, 1);\n        }\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n                \n        vector<int> arr(n);\n        \n        for (int i = 1; i < n - 1; i++)\n        {\n            if ((nums[i] > nums[i - 1]) && (nums[i] > nums[i + 1]))\n            {\n                arr[i] = 1;\n            }\n        }\n        \n        FenwickTree tree(arr);\n        \n        vector<int> ans;\n        \n        for (auto& q : queries)\n        {\n            int t = q[0];\n            \n            if (t == 1)\n            {\n                int l = q[1] + 1;\n                int r = q[2] - 1;\n                \n                int s = 0;\n                if (r >= l)\n                {\n                    s = tree.sum(l, r);\n                }\n                \n                ans.push_back(s);\n            }\n            else\n            {\n                int ind = q[1];\n                int val = q[2];\n                \n                nums[ind] = val;\n                \n                updateTree(ind - 1, nums, tree);\n                updateTree(ind, nums, tree);\n                updateTree(ind + 1, nums, tree);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1718507564",
    "subm_id": "1289655508"
}