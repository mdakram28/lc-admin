{
    "username": "dhruvan111",
    "submission": "class Solution {\npublic:\n    static const int MAXN = 1e5+3;\n    int t[4*MAXN];\n    \n    void build(vector<int>& a, int v, int tl, int tr) \n    {\n        if (tl == tr) \n        {\n            t[v] = a[tl];\n        } \n        else \n        {\n            int tm = (tl + tr) / 2;\n            build(a, v*2, tl, tm);\n            build(a, v*2+1, tm+1, tr);\n            t[v] = t[v*2] + t[v*2+1];\n        }\n    }\n    \n    int sum(int v, int tl, int tr, int l, int r) \n    {\n        if (l > r) \n            return 0;\n        if (l == tl && r == tr) \n        {\n            return t[v];\n        }\n        \n        int tm = (tl + tr) / 2;\n        return sum(v*2, tl, tm, l, min(r, tm))\n               + sum(v*2+1, tm+1, tr, max(l, tm+1), r);\n    }\n    \n    void update(int v, int tl, int tr, int pos, int new_val) \n    {\n        if (tl == tr) \n        {\n            t[v] = new_val;\n        } \n        else \n        {\n            int tm = (tl + tr) / 2;\n            if (pos <= tm)\n                update(v*2, tl, tm, pos, new_val);\n            else\n                update(v*2+1, tm+1, tr, pos, new_val);\n            t[v] = t[v*2] + t[v*2+1];\n        }\n    }\n    \n    \n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& queries) {\n        int n = v.size();\n        vector<int> ans;\n        vector<int> a(n, 0);\n        for (int i=1; i<n-1; i++)\n        {\n            if (v[i]>v[i-1] && v[i]>v[i+1])\n                a[i] = 1;\n        }\n        build(a,1,0,n-1);\n        \n        int q = queries.size();\n        for (int i=0; i<q; i++)\n        {\n            if (queries[i][0]==1)\n            {\n                // l to r\n                int l = queries[i][1];\n                int r = queries[i][2];\n                ans.push_back(sum(1, 0, n-1, l+1, r-1));\n            }\n            else\n            {\n                // to do\n                int idx = queries[i][1];\n                int val = queries[i][2];\n                if (idx==0)\n                {\n                    if (val<v[1] && v[1]>v[2])\n                        update(1, 0, n-1, 1, 1);\n                    else\n                        update(1, 0, n-1, 1, 0);\n                }\n                else if (idx==n-1)\n                {\n                    if (val<v[n-2] && v[n-2]>v[n-3])\n                        update(1, 0, n-1, n-2, 1);\n                    else\n                        update(1, 0, n-1, n-2, 0);\n                }\n                else if (val>v[idx-1] && val>v[idx+1])\n                    update(1, 0, n-1, idx, 1);\n                else\n                    update(1, 0, n-1, idx, 0);\n                \n                if (idx+1<n-1)\n                {\n                    if (v[idx+1]>val && v[idx+1]>v[idx+2])\n                        update(1, 0, n-1, idx+1, 1);\n                    else\n                        update(1, 0, n-1, idx+1, 0);\n                }\n                if (idx-1>0)\n                {\n                    if (v[idx-1]>v[idx-2] && v[idx-1]>val)\n                        update(1, 0, n-1, idx-1, 1);\n                    else\n                        update(1, 0, n-1, idx-1, 0);\n                }\n                v[idx] = val;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509197.0
}