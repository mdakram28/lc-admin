{
    "username": "senior_leetcoder",
    "submission": "public class Solution {\n    public int MinChanges(int[] nums, int k) {\n        int n = nums.Length;\n        Dictionary<int, int> dict = new();\n        for (int i = 0 ; i < n/2; i++) {\n            int val = Math.Abs(nums[i] - nums[n - i - 1]);\n            if (dict.ContainsKey(val)) {\n                dict[val]++;\n            }\n            else {\n                dict.Add(val, 1);\n            }\n        }\n        //int max_count = dict.Values.Max();\n        //var max_keys = dict.Keys.Where(k => dict[k] == max_count);\n        var keys = dict.Keys.ToList();\n        keys.Sort((a, b) => dict[b].CompareTo(dict[a]));\n        int ans = int.MaxValue;\n        for (int i = 0; i < Math.Min(keys.Count, 300); i++) {\n            ans = Math.Min(ans, helper(nums, keys[i], k));\n        }\n        \n        return ans;\n    }\n    \n    int helper(int[] nums, int kk, int k) {\n        int n = nums.Length;\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            int val = Math.Abs(nums[i] - nums[n - i - 1]);\n            int max = Math.Max(nums[i], nums[n - i - 1]);\n            int min = Math.Min(nums[i], nums[n - i - 1]);\n            if (val == kk) {\n                continue;\n            }\n            if (kk + min <= k) {\n                ans += 1;\n            }\n            else if (max - kk >= 0) {\n                ans += 1;\n            }\n            else {\n                ans += 2;\n            }\n            \n            \n//             if (val != kk) {\n//                 int min_num =   \n                \n//                 if (k - Math.Min(nums[i], nums[n - i - 1]) >= kk || Math.Max(nums[i], nums[n - i - 1]) >= kk) {\n//                     ans+=1;\n//                 }\n//                 else {\n//                     ans += 2;\n//                 }\n//             }\n        }\n        \n        return ans;\n    }\n}",
    "submit_ts": "1721488985",
    "subm_id": "1327439243"
}