{
    "username": "R_Shyam_Sundar",
    "submission": "class Solution {\npublic:\n    long long getResult(set<pair<long long, long long>> &s, set<pair<long long, long long>> &d) {\n        long long sval = s.rbegin()->first - s.begin()->first;\n        long long dval = d.rbegin()->first - d.begin()->first;\n        return max(sval, dval);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<long long> sum(n), diff(n);\n        for(int i=0; i<n; i++){\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        set<pair<long long,long long>> s, d;\n        for(int i=0; i<n; i++){\n            s.insert({sum[i], i});\n            d.insert({diff[i], i});\n        }\n        long long result = LLONG_MAX;\n        // erase top right\n        int index = s.rbegin()->second;\n        s.erase({sum[index], index});\n        d.erase({diff[index], index});\n        result = min(result, getResult(s, d));\n        s.insert({sum[index], index});\n        d.insert({diff[index], index});\n        // erase bottom left\n        index = s.begin()->second;\n        s.erase({sum[index], index});\n        d.erase({diff[index], index});\n        result = min(result, getResult(s, d));\n        s.insert({sum[index], index});\n        d.insert({diff[index], index});\n        // erase top left\n        index = d.rbegin()->second;\n        s.erase({sum[index], index});\n        d.erase({diff[index], index});\n        result = min(result, getResult(s, d));\n        s.insert({sum[index], index});\n        d.insert({diff[index], index});\n        // erase bottom right\n        index = d.begin()->second;\n        s.erase({sum[index], index});\n        d.erase({diff[index], index});\n        result = min(result, getResult(s, d));\n        s.insert({sum[index], index});\n        d.insert({diff[index], index});\n        return result;\n    }\n};"
}