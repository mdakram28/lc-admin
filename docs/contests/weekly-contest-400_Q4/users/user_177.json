{
    "username": "ajinkya1p3",
    "submission": "class Solution {\nprivate:\n    const int LOG_N = 17;\n    \n    int query(int L, int R, vector<int> &nums, vector<int> &LG, vector< vector<int> >& SP)\n    {\n        if (L == R)\n            return nums[L];\n        \n        int b = LG[R - L];\n        return (SP[b][L] & SP[b][R - (1 << b)]);\n    }\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int res = 2e9;\n        int n = nums.size();\n        \n        vector<int> LG(n);\n        vector< vector<int> > SP(LOG_N, vector<int> (n));\n        \n        for (int i = 2; i < n; i++)\n            LG[i] = LG[i / 2] + 1;\n        \n        for (int i = 0; i < n - 1; i++)\n            SP[0][i] = (nums[i] & nums[i + 1]);\n        \n        for (int i = 1; i < LOG_N; i++)\n            for (int j = 0; j + (1 << (i - 1)) < n; j++)\n                SP[i][j] = (SP[i - 1][j] & SP[i - 1][j + (1 << (i - 1))]);\n        \n        for (int i = 0; i < n; i++)\n        {\n            int ptr = i;\n            \n            while (ptr < n)\n            {\n                int L = ptr, R = n - 1, curr = 0;\n                int target = query(i, ptr, nums, LG, SP);\n                \n                while (L <= R)\n                {\n                    int mid = (L + R) / 2;\n                    \n                    if (query(i, mid, nums, LG, SP) == target)\n                        curr = mid, L = mid + 1;\n                    else\n                        R = mid - 1;\n                }\n                \n                res = min(res, abs(k - target));\n                ptr = curr + 1;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1717297395.0
}