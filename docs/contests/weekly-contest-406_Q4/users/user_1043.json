{
    "username": "hlp2599",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int hor = 0;\n        int vert = 0;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        long ans = 0;\n        int hsize = m - 1;\n        int vsize = n - 1;\n        while(hor<hsize && vert<vsize) {\n            if(horizontalCut[hsize-hor-1]>verticalCut[vsize-vert-1]) {\n                ans = ans + ((long)horizontalCut[hsize-hor-1] * (long)(vert + 1));\n                hor++;\n            } else {\n                ans = ans + ((long)verticalCut[vsize-vert-1] * (long)(hor + 1));\n                vert++;\n            }\n        }\n        while(hor<hsize) {\n            ans = ans + ((long)horizontalCut[hsize-hor-1] * (long)(vert + 1));\n            hor++;\n        }\n        while(vert<vsize) {\n            ans = ans + ((long)verticalCut[vsize-vert-1] * (long)(hor + 1));\n            vert++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925718",
    "subm_id": "1320263943"
}