{
    "username": "puspendra_09",
    "submission": "class Node {\npublic:\n    Node* link[26];\n    int endShere = 0;\n    int cost = 0;\n \n    bool containsKey(char ch) {\n        return link[ch - 'a'] != NULL;\n    }\n    void put(char ch) {\n        link[ch - 'a'] =  new Node();\n    }\n    Node* get(char ch) {\n        return link[ch - 'a'];\n    }\n};\n \nclass TRIE {\npublic:\n    Node* root;\n    TRIE() {\n        root = new Node();\n    }\n    void insert(string s , int val) {\n        int n = s.size();\n        Node* node = root;\n        for(int i = 0; i < n; i++) {\n            if(!node -> containsKey(s[i])) {\n                node -> put(s[i]);\n            }\n            node = node -> get(s[i]);\n           \n        }\n        node -> endShere = 1;\n        node -> cost = val;\n    }\n\n};\n\nclass Solution {\npublic:\n    int N;\n    string s;\n    vector<long long int> dp;\n    long long int helper(int ind , TRIE& ob) {\n        if(ind >= N) return 0;\n        if(dp[ind] != -1) return dp[ind];\n        Node* node = ob.root;\n        long long int ans = 1e15;\n        for(int i = ind; i < N; i++) {\n            if(node -> containsKey(s[i])) {\n                node = node -> get(s[i]);\n                if(node -> endShere == 1) {\n                    ans = min(ans , node -> cost + helper(i + 1 , ob));\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return dp[ind] = ans;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        map<string,int> mp;\n        this -> N = target.size();\n        this -> s = target;\n        int n = words.size();\n        dp.assign(N , -1);\n        for(int i = 0; i < n; i++) {\n            if(mp.find(words[i]) != mp.end()) {\n                mp[words[i]] = min(costs[i] , mp[words[i]]);\n            }\n            else {\n                mp[words[i]] = costs[i];\n            }\n        }\n        TRIE ob;\n        for(auto &i: mp) {\n            ob.insert(i.first , i.second);\n            // cout << i.first << ' ' << i.second << endl;\n        }\n        \n        long long int ans = helper(0 , ob);\n        if(ans >= 1e15) ans = -1;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720322317",
    "subm_id": "1312346643"
}