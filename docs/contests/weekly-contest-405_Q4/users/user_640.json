{
    "username": "neko643",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        /*\n            On every stop, we can check words 1 by 1 in O(1) using rolling hash. \n            Then time complexity will be O(n * m)\n        */\n        long long n = target.size(), mod = 1e9 + 9, p = 151993, cur = 0;\n        unordered_map<long long, int> m;\n        unordered_map<long long, int> sizes;\n        for(int i = 0; i < words.size(); i++) {\n            long long temp = 0;\n            for(char c : words[i]) {\n                temp = (temp * p + c) % mod;\n            }\n            \n            if(m.find(temp) == m.end()) {\n                m[temp] = costs[i];\n            } else {\n                m[temp] = min(m[temp], costs[i]);\n            }\n            sizes[temp] = words[i].size();\n        }\n        \n        vector<pair<long long, pair<int, int> > > arr;\n        for(auto &[k, v] : m) {\n            arr.push_back({k, {v, sizes[k]}});\n        }\n        \n        vector<long long> hashes(n), powers(n, 1);\n        for(int i = 0; i < n; i++) {\n            cur = (cur * p + target[i]) % mod;\n            hashes[i] = cur;\n            if(i > 0) {\n                powers[i] = (powers[i - 1] * p) % mod;\n            }\n        }\n        \n        vector<long long> ans(n, 1e9);\n        vector<int> pos;\n        auto calc = [&] (int l, int r) {\n            int len = r - l;\n            long long res = (hashes[r] - hashes[l] * powers[len] % mod + mod) % mod;\n            return res;\n        };\n        for(int i = 0; i < n; i++) {\n            if(m.find(hashes[i]) != m.end()) {\n                ans[i] = m[hashes[i]];\n            }\n            for(auto el : arr) {\n                int x = i - el.second.second;\n                if(x < 0) {\n                    continue;\n                }\n                long long hash = calc(x, i);\n                if(hash == el.first) {\n                    ans[i] = min(ans[i], ans[x] + el.second.first);\n                }\n            }\n            \n            // for(int x : pos) {\n            //     long long hash = calc(x, i);\n            //     if(m.find(hash) != m.end()) {\n            //         ans[i] = min(ans[i], ans[x] + m[hash]);\n            //     }\n            // }\n            if(ans[i] != 1e9) {\n                pos.push_back(i);\n            }\n        }\n        if(ans[n - 1] == 1e9) {\n            return -1;\n        }\n        \n        return ans[n - 1];\n    }\n}; ",
    "submit_ts": "1720322589",
    "subm_id": "1312353913"
}