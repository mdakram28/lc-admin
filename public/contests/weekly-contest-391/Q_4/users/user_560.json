{
    "username": "gcasd001-e",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long int\n#define db double\n#define ldb long double\n#define int128 __int128_t\n#define fr(x) freopen(x,\"r\",stdin);\n#define fw(x) freopen(x,\"w\",stdout);\n#define mst(x,a) memset(x,a,sizeof(x));\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fi first\n#define se second\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define yes std::cout << \"Yes\\n\"\n#define no std::cout << \"No\\n\"\n#ifdef LOCAL\n#include \"leetcode.h\"\n#endif // LOCAL\ntemplate <typename T> int si(const T &x) { return x.size(); }\ntemplate <typename T, typename S> inline bool chmax(T &a, const S &b) { if (a < b) { a = b; return true; } return false; }\ntemplate <typename T, typename S> inline bool chmin(T &a, const S &b) { if (b < a) { a = b; return true; } return false; }\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& pts) {\n      int n  = si(pts);\n      vector<vector<pair<int, int>>> a(4, vector<pair<int, int>>(n));\n      for (int i = 0; i < n; i++) {\n        int x = pts[i][0];\n        int y = pts[i][1];\n        a[0][i] = {x + y, i};\n        a[1][i] = {x - y, i};\n        a[2][i] = {-x + y, i};\n        a[3][i] = {-x - y, i};\n      }\n      int l = 0, r = 0, mx = -inf;\n      for (int i = 0; i < 4; i++) {\n        sort(all(a[i]));\n        int cur = a[i].back().first - a[i].front().first;\n        if (chmax(mx, cur)) {\n          l = a[i].front().second;\n          r = a[i].back().second;\n        }\n      }\n      vector<int> cn(n);\n      auto calc = [&](int i, int j) {\n        return abs(pts[i][0] - pts[j][0]) + abs(pts[i][1] - pts[j][1]);\n      };\n      for (int i = 0; i < n; i++) {\n        int tl = calc(i, l);\n        int tr = calc(i, r);\n        if (tl == mx) cn[l]++;\n        if (tr == mx) cn[r]++;\n      }\n      int at = cn[l] > cn[r] ? l : r;\n      vector<vector<pair<int, int>>> b(4);\n      for (int i = 0; i < 4; i++) {\n        for (auto &p : a[i]) {\n          if (p.second != l) {\n            b[i].push_back(p);\n          }\n        }\n      }\n      int ans1 = -inf;\n      for (int i = 0; i < 4; i++) {\n        chmax(ans1, b[i].back().first - b[i].front().first);\n      }\n      vector<vector<pair<int, int>>> c(4);\n      for (int i = 0; i < 4; i++) {\n        for (auto &p : a[i]) {\n          if (p.second != r) {\n            c[i].push_back(p);\n          }\n        }\n      }\n      int ans2 = -inf;\n      for (int i = 0; i < 4; i++) {\n        chmax(ans2, c[i].back().first - c[i].front().first);\n      }\n      int ans = min(ans1, ans2);\n      return ans;\n    }\n};\n"
}