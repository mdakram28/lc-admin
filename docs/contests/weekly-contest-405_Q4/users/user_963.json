{
    "username": "clairesworld111",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<int, int> mp, all;\n        mp.reserve(1e5);\n        all.reserve(1e5);\n        int n=target.size();\n        int m=words.size();\n        int p=1e9+7;\n        vector<tuple<int,int,int>> long_words;\n        vector<int> hsh;\n        int B=200;\n        for(int i=0; i<m; i++){\n            string s=words[i];\n            long long h=0;\n            reverse(s.begin(), s.end());\n            if(s.size()>B){\n                for(int i=0; i<s.size(); i++){\n                    h=(h*31)%p;\n                    h+=(s[i]-'a'+1);\n                }\n                long_words.push_back({s.size(), h, costs[i]});\n                // cout << s << \" h \" << h << \"\\n\";\n                continue;\n            }\n            for(int i=0; i<s.size(); i++){\n                h=(h*31)%p;\n                h+=(s[i]-'a'+1);\n                mp[h]=1;\n            }\n            all[h]=all[h]==0?costs[i]:min(all[h], costs[i]);\n        }\n        sort(long_words.begin(), long_words.end());\n        vector<int> dp(n);\n        vector<int> ha(n);\n        vector<long long> pw(n);\n        pw[0]=1;\n        for(int i=1; i<n; i++) pw[i]=(pw[i-1]*31)%p;\n        for(int i=0; i<n; i++){\n            ha[i]=(pw[i]*(target[i]-'a'+1)+(i?ha[i-1]:0))%p;\n            // cout << ha[i] << \"\\n\";\n            int j=0;\n            dp[i]=1e9;\n            long long h=0;\n            for(int j=i; j>=max(0, i-B); j--){\n                h+=(target[j]-'a'+1);\n                if(!mp[h]) break;\n                if(all[h]) dp[i]=min(dp[i], (j?dp[j-1]:0)+all[h]);\n                h=(h*31)%p;\n            }\n            for(auto [len, h, c] : long_words){\n                // cout << len << \" \" << h << \" \" << c << '\\n';\n                if(len>i+1) break;\n                // cout << \"hi\";\n                if((pw[i-len+1]*h)%p==(p+ha[i]-(len==i+1?0:ha[i-len]))%p){\n                    // cout << c << \" match \" << i << \"\\n\";\n                    dp[i]=min(dp[i], (len<=i?dp[i-len]:0)+c);\n                }\n            }\n        }\n        return dp[n-1]==1e9?-1:dp[n-1];\n    }\n};",
    "submit_ts": "1720322572",
    "subm_id": "1312353448"
}