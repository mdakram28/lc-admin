{
    "username": "Determined SutherlandJt3",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        int m = n / 2;\n        vector<int> p(n + 1);\n        vector<vector<int>> v(m + 2, vector<int>(10));\n        for(int i = 1, x = 1; i <= n; i ++, x = x * 10 % k) p[i] = x;\n        for(int i = 1; i <= m; i ++) {\n            int li = n - i + 1;\n            for(int j = 0; j < 10; j ++) {\n                v[i][j] = (p[i] + p[li]) * j % k;\n            }\n        }\n        if(n & 1) {\n            m += 1;\n            for(int j = 0; j < 10; j ++) {\n                v[m][j] = p[m] * j % k;\n            }\n        }\n\n        vector<vector<int>> dp(m + 2, vector<int>(k + 1));\n        dp[m + 1][0] = 1;\n        for(int i = m; i >= 1; i --) {\n            for(int j = 0; j < k; j ++) {\n                for(int l = 0; l < 10; l ++) {\n                    int r = ((j - v[i][l] + k) % k + k) % k;\n                    dp[i][j] |= dp[i + 1][r];\n                }\n            }\n        }\n\n        // cout << v[1][5] << '\\n';\n\n        int r = 0;\n        string ans;\n        for(int i = 1; i <= m; i ++) {\n            for(int j = 9; j >= 0; j --) {\n                int nr = (k - (r + v[i][j]) % k) % k;\n                if(dp[i + 1][nr]) {\n                    ans += j + '0';\n                    r = (r + v[i][j]) % k;\n                    break;\n                }\n            }\n        }\n        string t = ans;\n        if(n & 1) t.pop_back();\n        reverse(t.begin(), t.end());\n        ans += t;\n        return ans;\n    }\n};",
    "submit_ts": "1723950885",
    "subm_id": "556401885"
}