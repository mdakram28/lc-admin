{
    "username": "suraj_3240",
    "submission": "#define MAXSEG 400010\n\nint N;\nint st[MAXSEG];\n\nvoid update(int i, int x, int lo=0, int hi=-1, int node=0) {\n\tif (hi == -1) hi = N - 1;\n\tif (hi < i || lo > i) return;\n\tif (lo == hi) { st[node] = x; return; }\n\tint mid = (lo + hi) / 2;\n\tupdate(i, x, lo, mid, 2 * node + 1);\n\tupdate(i, x, mid + 1, hi, 2 * node + 2);\n\tst[node] = (st[2 * node + 1] & st[2 * node + 2]);\n}\n\nint query(int s, int e, int lo=0, int hi=-1, int node=0) {\n\tif (hi == -1) hi = N - 1;\n\tif (hi < s || lo > e) return INT_MAX;\n\tif (lo >= s && hi <= e) return st[node];\n\tint mid = (lo + hi) / 2;\n\treturn (query(s, e, lo, mid, 2 * node + 1) & \n\t\t\tquery(s, e, mid + 1, hi, 2 * node + 2));\n}\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        N=n;\n        for(int i=0;i<n;i++)\n        {\n            update(i,nums[i]);\n        }\n        int ans=INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            int l=i, r=n-1;\n            while(l<=r)\n            {\n                int mid = l+(r-l)/2;\n                int currAND = query(i,mid);\n                ans=min(ans,abs(currAND-k));\n                if(currAND < k)\n                {\n                    r=mid-1;\n                }\n                else\n                {   \n                    l=mid+1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717299410",
    "subm_id": "1274811867"
}