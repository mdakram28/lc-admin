{
    "username": "malicious123",
    "submission": "class segmenttree{\npublic:\n    vector<int> tree;\n    vector<int> v;\n\n    segmenttree(vector<int> val){\n        tree.resize(val.size()*4);\n\n        buildTree(0,0,val.size()-1,val);\n    }\n\n    void buildTree(int tidx, int lo, int hi,vector<int> &val){\n\n\tif(lo==hi){\n\t\ttree[tidx] = val[hi];\n\t\treturn;\n\t}\n\n\tint mid = (lo+hi)/2;\n\n\tbuildTree(2*tidx+1, lo, mid,val);\n\tbuildTree(2*tidx+2, mid+1, hi,val);\n\n\ttree[tidx] = tree[2*tidx+1] & tree[2*tidx+2];\n\n}\n\nint query(int tidx, int lo, int hi, int L, int R){\n\n\tif( R<lo || L>hi )\n\t\treturn (1ll<<32)-1;\n\n\tif( lo>=L && hi<=R )\n\t\treturn tree[tidx];\n\n\tint mid = (lo+hi)/2;\n\tint leftans = query(2*tidx+1, lo, mid, L, R);\n\tint rightans = query(2*tidx+2, mid+1, hi, L, R);\n\n\treturn leftans & rightans;\n\n}\n};\n\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        segmenttree st(nums);\n        long long ans=0;\n        for(int i=0;i<nums.size();i++){\n            int start=i;\n            int end=nums.size()-1;\n            int lim=-1;\n            while(start<=end){\n                int mid=start+(end-start)/2;\n                int value=st.query(0,0,nums.size()-1,i,mid);\n                // cout<<\"i=\"<<i<<\" mid=\"<<mid<<\" value=\"<<value<<endl;\n                if(value<k){\n                    end=mid-1;\n                }\n                else if(value>k){\n                    start=mid+1;\n                }\n                else{\n                    lim=mid;\n                    start=mid+1;\n                }\n            }\n            \n            if(lim!=-1){\n                start=i;\n                end=nums.size()-1;\n                int lim2=-1;\n                while(start<=end){\n                    int mid=start+(end-start)/2;\n                    int value=st.query(0,0,nums.size()-1,i,mid);\n                    // cout<<\"i=\"<<i<<\" mid=\"<<mid<<\" value=\"<<value<<endl;\n                    if(value<k){\n                        end=mid-1;\n                    }\n                    else if(value>k){\n                        start=mid+1;\n                    }\n                    else{\n                        lim2=mid;\n                        end=mid-1;\n                    }\n                }\n                ans+=(lim-lim2+1)*1ll;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279854",
    "subm_id": "1311767754"
}