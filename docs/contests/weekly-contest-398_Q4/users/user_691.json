{
    "username": "gobbler07",
    "submission": "class Solution {\npublic:\n    map<vector<long long>,int> mp;\n    int sol(int i,long long pos,long long k,vector<long long>& ct,int minus)\n    {\n        if(i==ct.size()) return 0;\n        if(pos==k) \n        {\n            int ans=1;\n            if(minus>0) ans+=sol(i,pos-1,k,ct,0);\n            ans+=sol(i+1,pos+ct[i],k,ct,1);\n            return ans;\n        }\n        if(pos>3*(k+1) ) return 0;\n        \n        vector<long long> tem={i,pos,minus};\n        if(mp.find(tem)!=mp.end()) return mp[tem];\n        \n        //add\n        int ans1=sol(i+1,pos+ct[i],k,ct,1);\n        \n        //minus\n        int ans2=0;\n        if(minus>0 && pos>0) ans2=sol(i,pos-1,k,ct,0);\n        // cout<<ans1<<\" \"<<ans2<<\" \"<<pos<<endl;\n        return mp[tem]=ans1+ans2;\n    }\n    \n    int waysToReachStair(int k) {\n        \n        vector<long long> ct;\n        long long t=1;\n        while(t<1e11)\n        {\n            ct.push_back(t);\n            t*=2;\n        }\n        \n        return sol(0,1,k,ct,1);\n        \n    }\n};",
    "submit_ts": "1716088719",
    "subm_id": "1261822063"
}