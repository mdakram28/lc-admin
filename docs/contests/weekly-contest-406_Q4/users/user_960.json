{
    "username": "profchi",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        \n        List<int []> list = new ArrayList<>();\n        \n        for (int num : horizontalCut) {\n            list.add(new int [] {num, 0});\n        }\n        \n        for (int num : verticalCut) {\n            list.add(new int [] {num, 1});\n        }\n        \n        Collections.sort(list, (a, b) -> b[0] - a[0]);\n        \n        long hor = 1;\n        long ver = 1;\n        \n        long result = 0;\n        \n        \n        for (int [] cArr : list) {\n           \n            if (cArr[1] == 0) {\n                result += ver * cArr[0];\n                ++hor;\n            }else {\n                result += hor * cArr[0];\n                ++ver;\n            }\n            \n             // System.out.println(Arrays.toString(cArr) + \" \" + result);\n        }\n        \n        \n        return result;\n        \n    }\n    \n    \n}",
    "submit_ts": "1720925965",
    "subm_id": "1320271795"
}