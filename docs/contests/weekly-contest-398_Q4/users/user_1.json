{
    "username": "sisyphus3",
    "submission": "class Solution {\npublic:\n    #define sz(x) int(x.size())\n#define all(x) x.begin(), x.end()\n#define db double\n#define ll long long\n#define ar array\ntemplate<typename T> bool ckmin(T& a, const T& b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\n\n    int waysToReachStair(int k) {\n        map<ll, int> mp;\n        mp[1] = 1;\n        int ans = (k == 1);\n        for (int jump = 0; jump <= 32; jump++) {\n            if (mp.count(k+1)) ans += mp[k+1];\n            map<ll, int> mp2;\n            for (auto [x, y] : mp) {\n                if (x > 0) mp2[x-1+(1LL<<jump)] += y;\n                mp2[x+(1LL<<jump)] += y;\n            }\n            swap(mp, mp2);\n            if (mp.count(k)) ans += mp[k];\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716086383.0
}