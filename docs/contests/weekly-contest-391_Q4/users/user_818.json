{
    "username": "nhienle94",
    "submission": "import bisect\nfrom math import inf\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def max_dist(A: List[List[int]]):\n            V = []\n            V1 = []\n            ans = inf\n\n            for x, y in A:\n                bisect.insort(V, x + y)\n                bisect.insort(V1, x - y)\n\n            for x, y in A:\n                first = V[-1]\n                second = V[0]\n                third = V1[-1]\n                four = V1[0]\n                if x + y == V[-1]:\n                    first = V[-2]\n                    \n                if x + y == V[0]:\n                    second = V[1]\n                    \n                if x - y == V1[-1]:\n                    third = V1[-2]\n                \n                if x - y == V1[0]:\n                    four = V1[1]\n                    \n                maximum = max(first - second, third - four)\n                ans = min(ans, maximum)\n\n            return ans\n        \n        return max_dist(points)\n"
}