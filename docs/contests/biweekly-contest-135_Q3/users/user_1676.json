{
    "username": "jerryluo11",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n       \n        differences = defaultdict(list)\n        for i in range(n // 2):\n            diff = abs(nums[n - 1 - i] - nums[i])\n            differences[diff].append(i)\n        globalmin = float('inf')\n        sortedKeys = sorted(differences.items(), key= lambda pair: len(pair[1]), reverse=True)\n        for diff, val in sortedKeys:\n            if n // 2 - len(val) >= globalmin:\n                break\n            thismin = 0\n            thiskey = diff\n            for diff2, val2 in sortedKeys:\n                if diff2 == thiskey:\n                    continue\n                # print(\"other diff\", diff2)\n                for index in differences[diff2]:\n                    if max(nums[index], nums[n - 1 - index]) >= thiskey or k - min(nums[index], nums[n - 1 - index]) >= thiskey:\n                        # print(\"added 2 ops\")\n                        thismin += 1\n                    else:\n                        # print(\"added 1 op\")\n                        thismin += 2\n            # print(\"this diff\", thiskey)\n            # print(\"min ops\", thismin)\n            globalmin = min(globalmin, thismin)\n        return globalmin\n\n\n\n",
    "submit_ts": "1721488828",
    "subm_id": "1327434491"
}