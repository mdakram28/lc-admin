{
    "username": "pensive-hertzpbk",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int rowCount = 1;\n        int colCount = 1;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int rowIndex = m - 2;\n        int colIndex = n - 2;\n        long sum = 0;\n        while (rowIndex >= 0 && colIndex >= 0) {\n            int n1 = horizontalCut[rowIndex];\n            int n2 = verticalCut[colIndex];\n            if (n1 > n2) {\n                sum += n1 * rowCount;\n                colCount ++;\n                rowIndex --;\n            } else {\n                sum += n2 * colCount;\n                rowCount ++;\n                colIndex --;\n            }\n        }\n        if (colIndex >= 0) {\n            for (int i = colIndex; i >= 0; i --) {\n                sum += verticalCut[i] * colCount;\n            }\n        }\n        if (rowIndex >= 0) {\n            for (int i = rowIndex; i >= 0; i --) {\n                sum += horizontalCut[i] * rowCount;\n            }\n        }\n        return sum;\n    }\n}",
    "submit_ts": "1720926635",
    "subm_id": "546447505"
}