{
    "username": "Sumit Kejriwal",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) \n    {\n        int m = board.length;\n        int n = board[0].length;\n        long maxSum = Long.MIN_VALUE;\n        long[][] bestValues = new long[m][3];\n        int[][] bestColumns = new int[m][3];\n        for (int i = 0; i < m; i++) \n        {\n            Arrays.fill(bestValues[i], Long.MIN_VALUE);\n            Arrays.fill(bestColumns[i], -1);\n        }\n        for (int i = 0; i < m; ++i) \n        {\n            List<Pair<Long, Integer>> colValues = new ArrayList<>();\n            for (int j = 0; j < n; ++j) \n                colValues.add(new Pair<>((long) board[i][j], j));\n            colValues.sort((a, b) -> Long.compare(b.getKey(), a.getKey()));  \n            for (int k = 0; k < 3 && k < n; ++k) \n            {\n                bestValues[i][k] = colValues.get(k).getKey();\n                bestColumns[i][k] = colValues.get(k).getValue();\n            }\n        }\n        for (int r1 = 0; r1 < m; ++r1) \n        {\n            for (int r2 = r1 + 1; r2 < m; ++r2) \n            {\n                for (int r3 = r2 + 1; r3 < m; ++r3) \n                {\n                    for (int i = 0; i < 3; ++i) \n                    {\n                        for (int j = 0; j < 3; ++j) \n                        {\n                            if (bestColumns[r2][j] == bestColumns[r1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (bestColumns[r3][k] == bestColumns[r1][i] || bestColumns[r3][k] == bestColumns[r2][j]) continue;\n\n                                long currentSum = bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k];\n                                maxSum = Math.max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n}",
    "submit_ts": "1723910319",
    "subm_id": "1359225718"
}