{
    "username": "irfanukani",
    "submission": "class Solution {\npublic:\n    static bool cmp(const vector<int>& point1, const vector<int>& point2) {\n        return point1[0] - point1[1] < point2[0] - point2[1];\n    }\n    static bool cmp2(const vector<int>& point1, const vector<int>& point2) {\n        return point1[0] + point1[1] < point2[0] + point2[1];\n    }\n    \n    int dist(vector<int> a, vector<int> b) {\n        return abs(a[0] - b[0]) + abs(a[1] - b[1]);\n    }\n    pair<int, vector<vector<int>>> func(vector<vector<int>>& v) {\n        vector<vector<int>> v_cp = v;\n        \n        sort(v.begin(), v.end(), cmp);\n        \n        sort(v_cp.begin(), v_cp.end(), cmp2);\n        \n        int dist1 = dist(v[0], v.back());\n        \n        int dist2 = dist(v_cp[0], v_cp.back());\n        \n        if(dist1 > dist2) {\n            return {dist1, {v[0], v.back()}};\n        }\n        return {dist2, {v_cp[0], v_cp.back()}};\n    }\n    \n    int minimumDistance(vector<vector<int>>& v) {\n        vector<vector<int>> points = func(v).second;\n        vector<vector<int>> nw;\n        bool taken = false;\n        \n        for(auto x : v) {\n            if(x[0] == points[0][0] && x[1] == points[0][1] && !taken) {\n                taken = true;\n                continue;\n            }\n            // if(x[0] == points[1][0] && x[1] == points[1][1]) continue;\n            nw.push_back(x);\n        }\n        int ans = func(nw).first;\n        \n        nw.clear();\n        taken = false;\n        \n        for(auto x : v) {\n            if(x[0] == points[1][0] && x[1] == points[1][1] && !taken) {\n                taken = true;\n                continue;\n            }\n            nw.push_back(x);\n        }\n        \n        ans = min(ans, func(nw).first);\n        \n        return ans;\n    }\n};"
}