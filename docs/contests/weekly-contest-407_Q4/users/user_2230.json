{
    "username": "ChouChien",
    "submission": "class Solution {\n    func minimumOperations(_ nums: [Int], _ target: [Int]) -> Int {\n        let diffArray: [Int] = zip(nums, target).map{ $0.1 - $0.0 }\n        // print(diffArray)\n        let n = diffArray.count\n        var curIdx: Int = 0\n        var ret: Int = 0\n        var queue: [Int] = []\n        while curIdx < n {\n            if (queue.isEmpty && diffArray[curIdx] != 0)\n                    || (queue.first ?? 0) * diffArray[curIdx] > 0 {\n                queue.append(diffArray[curIdx])\n            } else if !queue.isEmpty {\n                // print(queue)\n                handleArray(queue)\n                queue.removeAll()\n                queue.append(diffArray[curIdx])\n            }\n            curIdx += 1\n        }\n        // print(queue)\n        handleArray(queue)\n        func handleArray(_ array: [Int]) {\n            let arrayCount = array.count\n            if arrayCount <= 1 {\n                ret += abs(array.first ?? 0)\n                return\n            }\n            var commonNum: Int = (array[0] > 0) ? array.min()! : array.max()!\n            ret += abs(commonNum)\n            var tmpQueue: [Int] = []\n            for i in 0 ..< arrayCount {\n                if array[i] != commonNum {\n                    tmpQueue.append(array[i]-commonNum)\n                } else {\n                    handleArray(tmpQueue)\n                    tmpQueue.removeAll()\n                }\n            }\n            handleArray(tmpQueue)\n        }\n        return ret\n    }\n}",
    "submit_ts": "1721533235",
    "subm_id": "1328004417"
}