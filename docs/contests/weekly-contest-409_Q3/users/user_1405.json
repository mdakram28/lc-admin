{
    "username": "fervent-mendeleevrng",
    "submission": "class Solution {\n public:\n  vector<int> shortestDistanceAfterQueries(int n,\n                                           vector<vector<int>>& queries) {\n    vector<int> adj(n);\n    for (int i = 0; i < n - 1; i++) {\n      adj[i] = i + 1;\n    }\n    vector<int> ans;\n    map<int, int> jump;\n    int dist = n - 1;\n    for (auto& q : queries) {\n      auto s = q[0];\n      auto e = q[1];\n      auto it = jump.lower_bound(s);\n      if ((it != jump.begin() && prev(it)->second >= e) || (it != jump.end() && it->first == s && it->second >= e)) {\n          ans.push_back(dist);\n          continue;\n      }\n      int save = 0;\n      while (it != jump.end()) {\n        if (it->first >= e) {\n          break;\n        }\n        save += (it->second - it->first - 1);\n        it = jump.erase(it);\n      }\n      jump[s] = e;\n      dist -= (e - s - 1) - save;\n      cout << (e - s - 1) << save << endl;\n      ans.push_back(dist);\n    }\n    return ans;\n  }\n};",
    "submit_ts": "1722743096",
    "subm_id": "552348730"
}