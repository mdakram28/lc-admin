{
    "username": "Sunscar-Sony",
    "submission": "impl Solution {\n    pub fn minimum_cost(m: i32, n: i32, horizontal_cut: Vec<i32>, vertical_cut: Vec<i32>) -> i64 {\n        let mut horizontal_cut = horizontal_cut;\n        let mut vertical_cut = vertical_cut;\n\n        horizontal_cut.sort_unstable_by(|a, b| b.cmp(a));\n        vertical_cut.sort_unstable_by(|a, b| b.cmp(a));\n        \n        let mut h_index = 0;\n        let mut v_index = 0;\n        \n        let mut horizontal_pieces = 1;\n        let mut vertical_pieces = 1;\n        \n        let mut total_cost = 0;\n        \n        while h_index < horizontal_cut.len() && v_index < vertical_cut.len() {\n            if horizontal_cut[h_index] > vertical_cut[v_index] {\n                total_cost += horizontal_cut[h_index] as i64 * vertical_pieces as i64;\n                horizontal_pieces += 1;\n                h_index += 1;\n            } else {\n                total_cost += vertical_cut[v_index] as i64 * horizontal_pieces as i64;\n                vertical_pieces += 1;\n                v_index += 1;\n            }\n        }\n        \n        while h_index < horizontal_cut.len() {\n            total_cost += horizontal_cut[h_index] as i64 * vertical_pieces as i64;\n            h_index += 1;\n        }\n        \n        while v_index < vertical_cut.len() {\n            total_cost += vertical_cut[v_index] as i64 * horizontal_pieces as i64;\n            v_index += 1;\n        }\n        \n        total_cost\n    }\n}\n",
    "submit_ts": "1720926724",
    "subm_id": "1320294589"
}