{
    "username": "shi-gy15",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n\n        manipulations = {\n            (0, 0, 0, 0): 0,\n            (0, 0, 0, 1): 1,\n            (0, 0, 1, 0): 1,\n            (0, 0, 1, 1): 2,\n            (0, 1, 0, 0): 1,\n            (0, 1, 0, 1): 2,\n            (0, 1, 1, 0): 2,\n            (0, 1, 1, 1): 1,\n            (1, 0, 0, 0): 1,\n            (1, 0, 0, 1): 2,\n            (1, 0, 1, 0): 2,\n            (1, 0, 1, 1): 1,\n            (1, 1, 0, 0): 2,\n            (1, 1, 0, 1): 1,\n            (1, 1, 1, 0): 1,\n            (1, 1, 1, 1): 0\n        }\n\n        m_4 = 0\n        for r in range(m // 2):\n            for c in range(n // 2):\n                p = (r, c), (r, n - 1 - c), (m - 1 - r, c), (m - 1 - r, n - 1 - c)\n                v = tuple(grid[i][j] for i, j in p)\n                m_4 += manipulations[v]\n\n        n_1 = 0\n        n_2 = 0\n\n        if m % 2 == 0 and n % 2 == 0:\n            # print('-')\n            pass\n\n        elif m % 2 == 0 and n % 2 == 1:\n            # print(n)\n            c = n // 2\n            for r in range(m // 2):\n                if grid[r][c] == 0 and grid[m - 1 - r][c] == 1:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[m - 1 - r][c] == 0:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[m - 1 - r][c] == 1:\n                    n_2 += 1\n\n        elif m % 2 == 1 and n % 2 == 0:\n            # print('m')\n            r = m // 2\n            for c in range(n // 2):\n                if grid[r][c] == 0 and grid[r][n - 1 -c] == 1:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[r][n - 1 -c] == 0:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[r][n - 1 -c] == 1:\n                    n_2 += 1\n\n        else:\n            # print('mn')\n            if grid[m // 2][n // 2] == 1:\n                m_4 += 1\n            c = n // 2\n            for r in range(m // 2):\n                if grid[r][c] == 0 and grid[m - 1 - r][c] == 1:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[m - 1 - r][c] == 0:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[m - 1 - r][c] == 1:\n                    n_2 += 1\n            r = m // 2\n            for c in range(n // 2):\n                if grid[r][c] == 0 and grid[r][n - 1 -c] == 1:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[r][n - 1 -c] == 0:\n                    n_1 += 1\n                elif grid[r][c] == 1 and grid[r][n - 1 -c] == 1:\n                    n_2 += 1\n        # print(m_4, n_1, n_2)\n        if n_2 % 2 == 0:\n            return m_4 + n_1\n        else:\n            if n_1 == 0:\n                return m_4 + 2\n            else:\n                return m_4 + n_1\n\n",
    "submit_ts": "1722698170",
    "subm_id": "552269676"
}