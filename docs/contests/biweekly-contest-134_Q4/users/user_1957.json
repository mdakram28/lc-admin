{
    "username": "raararaara",
    "submission": "using lint = long long;\nusing ii = pair<int, int>;\nusing il = pair<int, lint>;\nusing li = pair<lint, int>;\nusing ll = pair<lint, lint>;\n\nconst int mxn = 1000100, mxp = 1000001;\nconst int MOD = 998244353, inf = -1e9 - 7, INF = 1e9 + 1;\nconst lint lnf = -4e18, LNF = 5e18;\nconst double eps = 1e-10;\nconst int sqrtN = 200;\n\n#define sz(x) int(size(x))\n#define all(x) (x).begin(),(x).end()\n#define compress(x) sort(all(x)), (x).erase(unique(all(x)), (x).end())\n#define lb(x, v) (lower_bound(all(x), v) - (x).begin())\n#define ub(x, v) (upper_bound(all(x), v) - (x).begin())\n#define eb emplace_back\n#define pb push_back\n#define getName(var)  #var\nvector<lint> xl, yl;\n\n#define Yes \"Yes\\n\"\n#define No \"No\\n\"\n\nconst int dr[] = {-1, 0, 1, 0};\nconst int dc[] = {0, -1, 0, 1};\n\ninline int inRange(int r, int c, int R, int C) {\n    return 0 <= r && r < R && 0 <= c && c < C;\n}\n\nlint N, M, Q, R, C, H, K, T;\n\nvoid init() {\n\n}\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        N = sz(a);\n        // \uac01 \ube44\ud2b8\ub9c8\ub2e4 on\ub418\uc5b4\uc788\ub294 \uc790\ub9ac \ucc3e\uae30\n        // 1\uc774\uba74 \ub2e4\ucf1c\uc838\uc57c \ud558\uace0, 0\uc774\uba74 \ub204\uad70\uac00\ub294 \uaebc\uc838\uc788\uc5b4\uc57c \ud55c\ub2e4.\n        // \ucf1c\uc838\uc788\uc5b4\uc57c \ud558\ub294 \uc81c\uc57d\uc870\uac74\uc740 \uad6c\uac04\uc774 \ucee4\uc9d0\uc5d0 \ub530\ub77c \ucda9\uc871\uc774 \ud798\ub4e4\uc5b4\uc9c0\uace0\n        // \uaebc\uc838\uc788\uc5b4\uc57c \ud558\ub294 \uc81c\uc57d\uc870\uac74\uc740 \uad6c\uac04\uc774 \uc791\uc544\uc9d0\uc5d0 \ub530\ub77c \ucda9\uc871\uc774 \ud798\ub4e4\uc5b4\uc9c4\ub2e4.\n        vector<vector<int>> cnt(31, vector<int>(N+1));\n        for(int i = 0; i < N; i++) {\n            for(int b = 0; b < 30; b++) {\n                cnt[b][i+1] = cnt[b][i];\n                if(a[i] >> b & 1) cnt[b][i+1]++;\n            }\n        }\n\n        lint ret = 0;\n        for(int r = 0; r < N; r++) {\n            int L = 1, offL = r+1;\n\n            bool impos = false, isOn = false, isOff = false;\n            for(int b = 0; b < 30; b++) {\n                if(!(k >> b & 1)) {\n                    isOff = true;\n                    int s = 1, e = r+1, cand = -1;\n                    while(s <= e) {\n                        int m = (s+e)/2;\n                        if(cnt[b][r+1] - cnt[b][m-1] != r+1-m+1) {\n                            cand = m;\n                            s = m+1;\n                        } else e = m-1;\n                    }\n                    // \uaebc\uc57c\ud558\ub294\ub370 \uc5b4\ub5bb\uac8c \ud574\ub3c4 \ub04c \uc218\uac00 \uc5c6\uc5b4\n                    if(cand == -1) {\n                        impos = true;\n                        break;\n                    }\n                    // \ucd5c\ucd08\ub85c 0\uc744 \ubc1c\uacac\ud558\ub294 \uc9c0\uc810\uc774\ub2e4.\n                    // \uc598\ubcf4\ub2e4\ub294 L\uc744 \uc791\uac70\ub098 \uac19\uac8c \uc124\uc815\ud574\uc57c \ud55c\ub2e4.\n                    offL = min(offL, cand);\n                } else {\n                    isOn = true;\n                    int s = 1, e = r+1, cand = -1;\n                    while(s <= e) {\n                        int m = (s+e)/2;\n                        if(cnt[b][r+1] - cnt[b][m-1] == r+1-m+1) {\n                            cand = m;\n                            e = m-1;\n                        } else s = m+1;\n                    }\n                    // \ucf1c\uc57c \ud558\ub294\ub370 \ucd5c\ub300\ud55c \uc791\uac8c \ub9cc\ub4e4\uc5b4\ub3c4 \uaebc\uc838\uc788\uc5b4\n                    if(cand == -1) {\n                        impos = true;\n                        break;\n                    }\n                    // \ubaa8\ub450 1\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub294 \ub9c8\uc9c0\ub178\uc120\uc774\ub2e4.\n                    // \uc598\ubcf4\ub2e4\ub294 L\uc744 \ud06c\uac70\ub098 \uac19\uac8c \uc124\uc815\ud574\uc57c \ud55c\ub2e4.\n                    L = max(L, cand);\n                }\n            }\n            if(impos) continue;\n            // L <= x <= offL\n            if(offL < L) continue;\n            if(!isOn) ret += offL;\n            else if(!isOff) ret += r+1-L+1;\n            else ret += (offL - L + 1);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720279359",
    "subm_id": "1311748043"
}