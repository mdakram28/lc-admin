{
    "username": "Rishabh8124",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h1=0, v1=0;\n        vector<pair<int, int>> v;\n        long long ans = 0;\n\n        for(int i=1; i<m; i++) {\n            v.push_back({-horizontalCut[i-1], 0});\n        }\n\n        for(int i=1; i<n; i++) {\n            v.push_back({-verticalCut[i-1], 1});\n        }\n\n        sort(v.begin(), v.end());\n        for(int i=0; i<(m+n-2); i++) {\n            v[i].first *= -1;\n        }\n\n        for(int i=0; i<(m+n-2); i++) {\n            int hc = 0;\n            int vc = 0;\n\n            for(int j=i; j<(m+n-2); j++) {\n                if (v[j].first == v[i].first) {\n                    if (v[j].second) vc++;\n                    else hc++;\n                } else break;\n            }\n\n            // cout << hc << \" \" << vc << endl;\n            while(hc>0 && vc>0) {\n                if (h1<v1) {ans += (1+v1)*v[i].first; h1++; hc--;}\n                else {ans += (1+h1)*v[i].first; v1++; vc--;}\n            }\n\n            while(hc) {\n                ans += (1+v1)*v[i].first; h1++; hc--;\n            }\n\n            while (vc) {\n                ans += (1+h1)*v[i].first; v1++; vc--;\n            }\n\n            while(i<(m+n-3) && v[i].first == v[i+1].first) i++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925827",
    "subm_id": "1320267471"
}