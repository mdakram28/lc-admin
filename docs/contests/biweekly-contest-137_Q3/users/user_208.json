{
    "username": "Dhruv",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<pair<long long int, pair<int, int>>> cells;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                cells.push_back({(long long int)board[i][j], {i, j}});\n            }\n        }\n        sort(cells.begin(), cells.end(), greater<pair<long long int, pair<int, int>>>());\n        long long int maxSum = INT64_MIN;\n        for (int i = 0; i < cells.size(); ++i) {\n            for (int j = i + 1; j < cells.size(); ++j) {\n                if (cells[i].second.first != cells[j].second.first &&\n                    cells[i].second.second != cells[j].second.second) {\n                    for (int k = j + 1; k < cells.size(); ++k) {\n                        if (cells[i].second.first != cells[k].second.first &&\n                            cells[i].second.second != cells[k].second.second &&\n                            cells[j].second.first != cells[k].second.first &&\n                            cells[j].second.second != cells[k].second.second) {\n                            long long int sum = cells[i].first + cells[j].first + cells[k].first;\n                            maxSum = max(maxSum, sum);\n                            break; \n                        }\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n};",
    "submit_ts": "1723907149",
    "subm_id": "1359092686"
}