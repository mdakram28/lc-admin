{
    "username": "priyanshu11_",
    "submission": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[1] * (k + 1) for _ in range(n)]\n        ans = 1\n        arr = [-1] * (k + 1)\n        mpp = [defaultdict(int) for _ in range(k + 1)]\n        \n        for i in range(n):\n            for j in range(k + 1):\n                for l in range(j):\n                    dp[i][j] = max(dp[i][j], 1 + arr[l])\n                if nums[i] in mpp[j]:\n                    dp[i][j] = max(dp[i][j], 1 + mpp[j][nums[i]])\n                ans = max(ans, dp[i][j])\n                \n            for j in range(k + 1):\n                arr[j] = max(arr[j], dp[i][j])\n                mpp[j][nums[i]] = max(mpp[j][nums[i]], dp[i][j])\n                \n        return ans\n",
    "submit_ts": "1717861496",
    "subm_id": "1281793001"
}