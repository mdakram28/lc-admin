{
    "username": "yu-shi-b",
    "submission": "class Solution {\npublic:\n    vector<int> tree ;\n    int n ;\n    void add(int i) {\n        int l=0 , r=n-1 ; //\u4e0b\u68070\n        int p=0 ;\n        while (1) {\n            tree[p]++ ;\n            if (l==r) break ;\n            int m=(l+r)>>1 ;\n            if (i<=m) {\n                p=2*p+1 ;\n                r=m ;\n                continue ;\n            }\n            p = 2*p+2 ;\n            l=m+1 ;\n        }\n        \n    }\n    void del(int i) {\n        int l=0 , r=n-1 ; //\u4e0b\u68070\n        int p=0 ;\n        while (1) {\n            tree[p]-- ;\n            if (l==r) break ;\n            int m=(l+r)>>1 ;\n            if (i<=m) {\n                p=2*p+1 ;\n                r=m ;\n                continue ;\n            }\n            p = 2*p+2 ;\n            l=m+1 ;\n        }\n        \n    }\n    int query(int l , int r , int l0 , int r0 , int p) {\n        if (r0<l || l0>r) return 0 ;\n        if (l0>r0) return 0 ;\n        if (l0>=l && r0<=r) return tree[p] ;\n        int m = (l0+r0)>>1 ;\n        return query(l,r,l0,m,2*p+1) + query(l,r,m+1,r0,2*p+2) ;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size() ;\n        tree = vector<int>(5*n,0) ;\n        vector<int> ans ;\n        for (int i=1 ; i<n-1 ; ++i) {\n            if (nums[i]>nums[i-1] && nums[i]>nums[i+1]) {\n                add(i) ;\n            }\n        }\n        for (auto &q : queries) {\n            if (q[0]==1) {\n                int res = query(q[1],q[2],0,n-1,0) ;\n                int l=q[1] ;\n                if (l>0 && l<n-1 && nums[l]>nums[l-1] && nums[l]>nums[l+1])\n                    res-- ;\n                if (q[2] != q[1])\n                {\n                l=q[2] ;\n                if (l>0 && l<n-1 && nums[l]>nums[l-1] && nums[l]>nums[l+1])\n                    res-- ;}\n                ans.push_back(res) ;\n                \n                continue ;\n            }\n            int i = q[1] ;\n            bool a=0 , b=0 , c=0 ;\n            if (i-1>0 && nums[i-1]>nums[i-2] && nums[i-1]>nums[i])\n                a=true ;\n            if (i+1<n-1 && nums[i+1]>nums[i+2] && nums[i+1]>nums[i])\n                c=true ;\n            if (i>0 && i<n-1 && nums[i]>nums[i-1] && nums[i]>nums[i+1])\n                b=true ;\n            nums[q[1]] = q[2] ;\n            if (i-1>0 && nums[i-1]>nums[i-2] && nums[i-1]>nums[i] && a==false)\n                add(i-1) ;\n            if (i+1<n-1 && nums[i+1]>nums[i+2] && nums[i+1]>nums[i] && c==false)\n                add(i+1) ;\n            if (i>0 && i<n-1 && nums[i]>nums[i-1] && nums[i]>nums[i+1] && b==false)\n                add(i) ;\n            if (i-1>0 && (nums[i-1]<=nums[i-2] || nums[i-1]<=nums[i]) && a==true)\n                del(i-1) ;\n            if (i+1<n-1 && (nums[i+1]<=nums[i+2] || nums[i+1]<=nums[i]) && c==true)\n                del(i+1) ;\n            if (i>0 && i<n-1 && (nums[i]<=nums[i-1] || nums[i]<=nums[i+1]) && b==true)\n                del(i) ;\n        }\n        \n        return ans ;\n    }\n};",
    "submit_ts": 1718507958.0
}