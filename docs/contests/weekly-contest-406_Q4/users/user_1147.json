{
    "username": "james5418",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> cuts; // {cost, type}\n\n        for(int i = 0; i < horizontalCut.size(); i++) {\n            cuts.push_back({horizontalCut[i], 0});\n        }\n\n        for(int i = 0; i < verticalCut.size(); i++) {\n            cuts.push_back({verticalCut[i], 1});\n        }\n\n        sort(cuts.begin(), cuts.end(), greater<pair<long long, int>>());\n\n        long long totalCost = 0;\n        long long hCount = 1, vCount = 1;\n\n        for(auto& cut : cuts) {\n            if (cut.second == 0) {\n                totalCost += cut.first * vCount;\n                hCount++;\n            } else {\n                totalCost += cut.first * hCount;\n                vCount++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926088",
    "subm_id": "1320275601"
}