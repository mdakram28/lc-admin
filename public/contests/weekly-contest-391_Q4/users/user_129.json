{
    "username": "ruts",
    "submission": "class Solution {\npublic:\n    \n\n    int minimumDistance(vector<vector<int>>& a) {\n        multiset<int>s;\n        multiset<int>t;\n        int n = (int)a.size();\n        for(int i = 0 ; i < n ; i++) {\n            s.insert(a[i][0] + a[i][1]);\n            t.insert(a[i][0] - a[i][1]);\n        }\n        long long X = *s.rbegin() - *s.begin();\n        long long Y = *t.rbegin() - *t.begin();\n        long long ans = (long long)1e14;\n        for(int i = 0 ; i < n ; i++) {\n            int x = a[i][0] + a[i][1];\n            int y = a[i][0] - a[i][1];\n            s.erase(s.find(x));\n            t.erase(t.find(y));\n            long long X = *s.rbegin() - *s.begin();\n            long long Y = *t.rbegin() - *t.begin();\n            ans = min(ans,max(X,Y));\n            s.insert(x);\n            t.insert(y);\n        }\n        return ans;\n    }\n};"
}