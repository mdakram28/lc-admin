{
    "username": "khsueh",
    "submission": "public class Solution {\n    public long MinimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long cost = 0;\n\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n\n        Array.Sort(horizontalCut);\n        Array.Sort(verticalCut);\n\n        int i = horizontalCut.Length - 1;\n        int j = verticalCut.Length - 1;\n\n        while(i >= 0 && j >= 0)\n        {\n            if(verticalCut[j] > horizontalCut[i])\n            {\n                cost += horizontalPieces * verticalCut[j];\n                verticalPieces++;\n                j--;\n            }else{\n                cost += verticalPieces * horizontalCut[i];\n                horizontalPieces++;\n                i--;\n            }\n        }\n\n        while(i >= 0)\n        {\n            cost += verticalPieces * horizontalCut[i];\n            horizontalPieces++;\n            i--;\n        }\n\n        while(j >= 0 ){\n            cost += horizontalPieces * verticalCut[j];\n            verticalPieces++;\n            j--;           \n        }\n\n        return cost;\n    }\n}\n\n/*\n\n\n\nThe cost of a cut depends only on the initial cost of the line and does not change.\n*/\n",
    "submit_ts": "1720925949",
    "subm_id": "1320271321"
}