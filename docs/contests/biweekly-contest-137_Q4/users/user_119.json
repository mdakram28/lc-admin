{
    "username": "skyinde2",
    "submission": "\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n\n        index_max = [[-1] * 3 for _ in range(m)]\n\n        for i in range(m):\n            k = index_max[i]\n            for j in range(n):\n                if k[0] < 0 or board[i][j] >= board[i][k[0]]:\n                    k[0], k[1], k[2] = j, k[0], k[1]\n                elif k[1] < 0 or board[i][j] >= board[i][k[1]]:\n                    k[1], k[2] = j, k[1]\n                elif k[2] < 0 or board[i][j] >= board[i][k[2]]:\n                    k[2] = j\n\n        ret = -9999999999\n\n        max_row = 0\n        for i in range(1, m):\n            if board[i][index_max[i][0]] > board[max_row][index_max[max_row][0]]:\n                max_row = i\n\n        for w in range(3):\n            a = index_max[max_row][w]\n\n            for i in range(m):\n                for j in range(m):\n                    if i != j and j != max_row and i != max_row:\n                        b = index_max[i][0]\n                        if b == a:\n                            b = index_max[i][1]\n\n                        c = index_max[j][0]\n                        if c == a or c == b:\n                            c = index_max[j][1]\n\n                        if c == a or c == b:\n                            c = index_max[j][2]\n\n                        ret = max(ret, board[max_row][a] + board[i][b] + board[j][c])\n\n        return ret",
    "submit_ts": "1723908598",
    "subm_id": "1359159298"
}