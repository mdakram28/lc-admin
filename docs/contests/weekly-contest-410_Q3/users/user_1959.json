{
    "username": "suraj_kumar2912",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        int max_val = 50;\n\n        // Create a 3D DP table for memoization\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(max_val + 1, vector<int>(max_val + 1, -1)));\n\n        // Recursive function with memoization\n        function<int(int, int, int)> dfs = [&](int idx, int last1, int last2) -> int {\n            if (idx == n) {\n                return 1;\n            }\n            \n            if (dp[idx][last1][last2] != -1) {\n                return dp[idx][last1][last2];\n            }\n\n            int count = 0;\n            for (int x = last1; x <= nums[idx]; ++x) {\n                int y = nums[idx] - x;\n                if (y <= last2) {\n                    count = (count + dfs(idx + 1, x, y)) % MOD;\n                }\n            }\n\n            return dp[idx][last1][last2] = count;\n        };\n\n        return dfs(0, 0, max_val);\n    }\n};",
    "submit_ts": "1723345286",
    "subm_id": "1351552543"
}