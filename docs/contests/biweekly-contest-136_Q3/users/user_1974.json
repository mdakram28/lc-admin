{
    "username": "genchenli",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n\t\t\t// int rown = grid.size(), coln = grid[0].size(), toto = 0;;\n\t\t\t// vector<vector<bool>> used(rown, vector<bool>(coln, false));\n\t\t\t// vector<vector<int>> v4cnt;\n\t\t\t// // for (int i = 0; i < rown; ++i) {\n\t\t\t// // \tfor (int j = 0; j < coln; ++j) {\n\t\t\t// // \t\tint curv = grid[i][j];\n\t\t\t// // \t\tif (curv) {\n\t\t\t// // \t\t\t++toto;\n\t\t\t// // \t\t}\n\t\t\t// // \t\tif (!used[i][j]) {\n\t\t\t// // \t\t\tint cnt = 1, val = grid[i][j];\n\t\t\t// // \t\t\tint cnto = 0, cntz = 0;\n\t\t\t// // \t\t\tif (val) {\n\t\t\t// // \t\t\t\t++cnto;\n\t\t\t// // \t\t\t}\n\t\t\t// // \t\t\telse {\n\t\t\t// // \t\t\t\t++cntz;\n\t\t\t// // \t\t\t}\n\t\t\t// // \t\t\tint x = i, y = coln - 1 - j;\n\t\t\t// // cout << x << \" and \" << y << endl;\n\t\t\t// // \t\t\tif (!(x == i) && (y == j)) {\n\t\t\t// // \t\t\t\tused[x][y] = true;\n\t\t\t// // \t\t\t\t++cnt;\n\t\t\t// // \t\t\t\tval = grid[x][y];\n\t\t\t// // \t\t\t\tif (val) {\n\t\t\t// // \t\t\t\t\t++cnto;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t\telse {\n\t\t\t// // \t\t\t\t\t++cntz;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t}\n\t\t\t// // \t\t\tx = rown - 1, y = j;\n\t\t\t// // cout << x << \" and \" << y << endl;\n\t\t\t// // \t\t\tif (!(x == i) && (y == j)) {\n\t\t\t// // \t\t\t\tused[x][y] = true;\n\t\t\t// // \t\t\t\t++cnt;\n\t\t\t// // \t\t\t\tval = grid[x][y];\n\t\t\t// // \t\t\t\tif (val) {\n\t\t\t// // \t\t\t\t\t++cnto;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t\telse {\n\t\t\t// // \t\t\t\t\t++cntz;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t}\n\t\t\t// // \t\t\tx = rown - 1 - i, y = coln - 1 - j; \n\t\t\t// // cout << x << \" and \" << y << endl;\n\t\t\t// // if (!(x == i) && (y == j)) {\n\t\t\t// // \t\t\t\tused[x][y] = true;\n\t\t\t// // \t\t\t\t++cnt;\n\t\t\t// // \t\t\t\tval = grid[x][y];\n\t\t\t// // \t\t\t\tif (val) {\n\t\t\t// // \t\t\t\t\t++cnto;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t\telse {\n\t\t\t// // \t\t\t\t\t++cntz;\n\t\t\t// // \t\t\t\t}\n\t\t\t// // \t\t\t}\n\t\t\t// // \t\t\tv4cnt.emplace_back();\n\t\t\t// // \t\t\tv4cnt.back() = vector<int>{ cntz, cnto };\n\t\t\t// // cout << i << \" and \" << j << \" and \" << cntz << \" and \" << cnto << endl;\n\t\t\t// // \t\t}\n\t\t\t// // \t}\n\t\t\t// // }\n\t\t\t// // \tint szv = v4cnt.size();\n\t\t\t// // \tvector<vector<int>> dp(szv + 1, vector<int>(4, rown * coln));\n\t\t\t// // \tdp[0][0] = 0;\n\t\t\t// // \tfor (int i = 0; i < szv; ++i) {\n\t\t\t// // \t\tint z2o = v4cnt[i][0], o2z = v4cnt[i][1];\n\t\t\t// // \t\tfor (int j = 0; j < 4; ++j) {\n\t\t\t// // \t\t\tdp[i + 1][(j + o2z) % 4] = min(dp[i + 1][(j + o2z) % 4], dp[i][j] + o2z);\n\t\t\t// // \t\t\tdp[i + 1][(j + z2o) % 4] = min(dp[i + 1][(j + z2o) % 4], dp[i][j] + z2o);\n\t\t\t// // \t\t}\n\t\t\t// // \t}\n\t\t\t// // \tint rmod = (4 - (toto % 4)) % 4;\n\t\t\t// // \treturn dp.back()[rmod];\n\t\t\t// for (int i = 0; i < rown; ++i) {\n\t\t\t// \tfor (int j = 0; j < coln; ++j) {\n\t\t\t// \t\tint curv = grid[i][j];\n\t\t\t// \t\tif (curv) {\n\t\t\t// \t\t\t++toto;\n\t\t\t// \t\t}\n\t\t\t// \t\t// if (!used[i][j]) {\n\t\t\t// \t\t// \tint cnt = 1, val = grid[i][j];\n\t\t\t// \t\t// \tint cnto = 0, cntz = 0;\n\t\t\t// \t\t// \tif (val) {\n\t\t\t// \t\t// \t\t++cnto;\n\t\t\t// \t\t// \t}\n\t\t\t// \t\t// \telse {\n\t\t\t// \t\t// \t\t++cntz;\n\t\t\t// \t\t// \t}\n\t\t\t// \t\t// \tint x = i, y = coln - 1 - j;\n\t\t\t// \t\t// \tcout << x << \" and \" << y << endl;\n\t\t\t// \t\t// \t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t// \tif (!((x == i) && (y == j))) {\n\t\t\t// \t\t// \t\tused[x][y] = true;\n\t\t\t// \t\t// \t\t++cnt;\n\t\t\t// \t\t// \t\tval = grid[x][y];\n\t\t\t// \t\t// \t\tif (val) {\n\t\t\t// \t\t// \t\t\t++cnto;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t\telse {\n\t\t\t// \t\t// \t\t\t++cntz;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t}\n\t\t\t// \t\t// \tx = rown - 1, y = j;\n\t\t\t// \t\t// \tcout << x << \" and \" << y << endl;\n\t\t\t// \t\t// \t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t// \tif (!((x == i) && (y == j))) {\n\t\t\t// \t\t// \t\tused[x][y] = true;\n\t\t\t// \t\t// \t\t++cnt;\n\t\t\t// \t\t// \t\tval = grid[x][y];\n\t\t\t// \t\t// \t\tif (val) {\n\t\t\t// \t\t// \t\t\t++cnto;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t\telse {\n\t\t\t// \t\t// \t\t\t++cntz;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t}\n\t\t\t// \t\t// \tx = rown - 1 - i, y = coln - 1 - j;\n\t\t\t// \t\t// \tcout << x << \" and \" << y << endl;;\n\t\t\t// \t\t// \t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t// \tif (!((x == i) && (y == j))) {\n\t\t\t// \t\t// \t\tused[x][y] = true;\n\t\t\t// \t\t// \t\t++cnt;\n\t\t\t// \t\t// \t\tval = grid[x][y];\n\t\t\t// \t\t// \t\tif (val) {\n\t\t\t// \t\t// \t\t\t++cnto;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t\telse {\n\t\t\t// \t\t// \t\t\t++cntz;\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t}\n\t\t\t// \t\t// \tv4cnt.emplace_back();\n\t\t\t// \t\t// \tv4cnt.back() = vector<int>{ cntz, cnto };\n\t\t\t// \t\t// \tcout << i << \" and \" << j << \" and \" << cntz << \" and \" << cnto << endl;\t\t\t\t\t}\n\t\t\t// if (!used[i][j]) {\n\t\t\t// \t\t\tused[i][j] = true;\n\t\t\t// \t\t\tint cnt = 1, val = grid[i][j];\n\t\t\t// \t\t\tint cnto = 0, cntz = 0;\n\t\t\t// \t\t\tif (val) {\n\t\t\t// \t\t\t\t++cnto;\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\telse {\n\t\t\t// \t\t\t\t++cntz;\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\tint x = i, y = coln - 1 - j;\n\t\t\t// \t\t\tcout << x << \" and \" << y << endl;\n\t\t\t// \t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t// \t\t\tif (!used[x][y]) {\n\t\t\t// \t\t\t\tused[x][y] = true;\n\t\t\t// \t\t\t\t++cnt;\n\t\t\t// \t\t\t\tval = grid[x][y];\n\t\t\t// \t\t\t\tif (val) {\n\t\t\t// \t\t\t\t\t++cnto;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t\telse {\n\t\t\t// \t\t\t\t\t++cntz;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\tx = rown - 1, y = j;\n\t\t\t// \t\t\tcout << x << \" and \" << y << endl;\n\t\t\t// \t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t// \t\t\tif (!used[x][y]) {\n\t\t\t// \t\t\t\tused[x][y] = true;\n\t\t\t// \t\t\t\t++cnt;\n\t\t\t// \t\t\t\tval = grid[x][y];\n\t\t\t// \t\t\t\tif (val) {\n\t\t\t// \t\t\t\t\t++cnto;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t\telse {\n\t\t\t// \t\t\t\t\t++cntz;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\tx = rown - 1 - i, y = coln - 1 - j;\n\t\t\t// \t\t\tcout << x << \" and \" << y << endl;;\n\t\t\t// \t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t// \t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t// \t\t\tif (!used[x][y]) {\n\t\t\t// \t\t\t\tused[x][y] = true;\n\t\t\t// \t\t\t\t++cnt;\n\t\t\t// \t\t\t\tval = grid[x][y];\n\t\t\t// \t\t\t\tif (val) {\n\t\t\t// \t\t\t\t\t++cnto;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t\telse {\n\t\t\t// \t\t\t\t\t++cntz;\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\tv4cnt.emplace_back();\n\t\t\t// \t\t\tv4cnt.back() = vector<int>{ cntz, cnto };\n\t\t\t// \t\t\tcout << i << \" and \" << j << \" and \" << cntz << \" and \" << cnto << endl;\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t// \tint szv = v4cnt.size();\n\t\t\t// \tvector<vector<int>> dp(szv + 1, vector<int>(4, rown * coln));\n\t\t\t// \tdp[0][0] = 0;\n\t\t\t// \tfor (int i = 0; i < szv; ++i) {\n\t\t\t// \t\tint z2o = v4cnt[i][0], o2z = v4cnt[i][1];\n\t\t\t// \t\tfor (int j = 0; j < 4; ++j) {\n\t\t\t// \t\t\tdp[i + 1][(j + o2z) % 4] = min(dp[i + 1][(j + o2z) % 4], dp[i][j] + o2z);\n\t\t\t// \t\t\tdp[i + 1][(j + z2o) % 4] = min(dp[i + 1][(j + z2o) % 4], dp[i][j] + z2o);\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// \tint rmod = (4 - (toto % 4)) % 4;\n\t\t\t// cout << \"toto is \" << toto << \" and \" << rmod << endl;\n\t\t\t// \treturn dp.back()[rmod];\n        \t\t\tint rown = grid.size(), coln = grid[0].size(), toto = 0;;\n\t\t\tvector<vector<bool>> used(rown, vector<bool>(coln, false));\n\t\t\tvector<vector<int>> v4cnt;\n\t\t\tfor (int i = 0; i < rown; ++i) {\n\t\t\t\tfor (int j = 0; j < coln; ++j) {\n\t\t\t\t\tint curv = grid[i][j];\n\t\t\t\t\tif (curv) {\n\t\t\t\t\t\t++toto;\n\t\t\t\t\t}\n\t\t\t\t\tif (!used[i][j]) {\n\t\t\t\t\t\tused[i][j] = true;\n\t\t\t\t\t\tint cnt = 1, val = grid[i][j];\n\t\t\t\t\t\tint cnto = 0, cntz = 0;\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t++cnto;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t++cntz;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint x = i, y = coln - 1 - j;\n\t\t\t\t\t\t//cout << x << \" and \" << y << endl;\n\t\t\t\t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t\t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t\t\t\tif (!used[x][y]) {\n\t\t\t\t\t\t\tused[x][y] = true;\n\t\t\t\t\t\t\t++cnt;\n\t\t\t\t\t\t\tval = grid[x][y];\n\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\t++cnto;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t++cntz;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// x = rown - 1, y = j;\n                        x = rown - 1 - i, y = j;\n\t\t\t\t\t\t//cout << x << \" and \" << y << endl;\n\t\t\t\t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t\t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t\t\t\tif (!used[x][y]) {\n\t\t\t\t\t\t\tused[x][y] = true;\n\t\t\t\t\t\t\t++cnt;\n\t\t\t\t\t\t\tval = grid[x][y];\n\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\t++cnto;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t++cntz;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx = rown - 1 - i, y = coln - 1 - j;\n\t\t\t\t\t\t//cout << x << \" and \" << y << endl;;\n\t\t\t\t\t\t// if (!(x == i) && (y == j)) {\n\t\t\t\t\t\t// if (!((x == i) && (y == j))) {\n\t\t\t\t\t\tif (!used[x][y]) {\n\t\t\t\t\t\t\tused[x][y] = true;\n\t\t\t\t\t\t\t++cnt;\n\t\t\t\t\t\t\tval = grid[x][y];\n\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\t++cnto;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t++cntz;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tv4cnt.emplace_back();\n\t\t\t\t\t\t// v4cnt.back() = vector<int>{ cntz, cnto };\n\t\t\t\t\t\tv4cnt.back() = vector<int>{ cntz, -cnto };\n\t\t\t\t\t\t//cout << i << \" and \" << j << \" and \" << cntz << \" and \" << cnto << endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tint szv = v4cnt.size();\n\t\t\t\tvector<vector<int>> dp(szv + 1, vector<int>(4, rown * coln));\n\t\t\t\tdp[0][0] = 0;\n        // cout << \" here\" << endl;\n\t\t\t\tfor (int i = 0; i < szv; ++i) {\n\t\t\t\t\tint z2o = v4cnt[i][0], o2z = v4cnt[i][1];\n\t\t\t\t\tfor (int j = 0; j < 4; ++j) {\n\t\t\t\t\t\t// dp[i + 1][(j + o2z) % 4] = min(dp[i + 1][(j + o2z) % 4], dp[i][j] + o2z);\n\t\t\t\t\t\tdp[i + 1][(j + o2z + 4) % 4] = min(dp[i + 1][(j + o2z + 4) % 4], dp[i][j] + abs(o2z));\n\t\t\t\t\t\t//  dp[i + 1][(j + z2o) % 4] = min(dp[i + 1][(j + z2o) % 4], dp[i][j] + z2o);\n\t\t\t\t\t\tdp[i + 1][(j + z2o + 4) % 4] = min(dp[i + 1][(j + z2o + 4) % 4], dp[i][j] + abs(z2o));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint rmod = (4 - (toto % 4)) % 4;\n\t\t\t\treturn dp.back()[rmod];\n    }\n};",
    "submit_ts": "1722699505",
    "subm_id": "552275951"
}