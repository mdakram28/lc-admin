{
    "username": "coderloni_71",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        long long int cnt = 0;\n        unordered_map<long long int , long long int > prefsum;\n        for (int i = 0; i<n; i++) {\n            unordered_map<long long int, long long int> cursum; \n            if (nums[i] == k) cnt++;\n            \n            cursum[nums[i]] = 1;\n            for (auto it : prefsum) {\n                long long int num=it.first;\n                long long int freq=it.second;\n                long long int curand = num & nums[i];\n                if (curand == k) {\n                    cnt += freq;\n                }\n                cursum[curand] += freq;\n            }\n            \n            prefsum = cursum; //update\n        }\n        return cnt;\n    }\n};\n//striver XOR\n// int subarraysWithXorK(vector<int> a, int k) {\n//     int n = a.size(); //size of the given array.\n//     int xr = 0;\n//     map<int, int> mpp; //declaring the map.\n//     mpp[xr]++; //setting the value of 0.\n//     int cnt = 0;\n\n//     for (int i = 0; i < n; i++) {\n//         // prefix XOR till index i:\n//         xr = xr & a[i];\n\n//         //By formula: x = xr^k:\n//         int x = xr & k;\n\n//         // add the occurrence of xr^k\n//         // to the count:\n//         cnt += mpp[x];\n\n//         // Insert the prefix xor till index i\n//         // into the map:\n//         mpp[xr]++;\n//     }\n//     return cnt;\n// }",
    "submit_ts": "1720281366",
    "subm_id": "1311822521"
}