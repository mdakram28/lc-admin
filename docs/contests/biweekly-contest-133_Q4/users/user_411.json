{
    "username": "CrossMind",
    "submission": "class Solution {\nprivate:\n    static const int maxi = 400;\n    static const int mod = 1000000007;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> vvv;\n        for (const auto& req : requirements) {\n            vvv[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> arr(n + 1, vector<long long>(maxi + 1, 0));\n        arr[0][0] = 1;\n\n        int i = 1;\n        while (i <= n) {\n            int j = 0;\n            while (j <= maxi) {\n                int k = 0;\n                while (k < i) {\n                    int temp = j - k;\n                    if (temp >= 0 && 1) {\n                        arr[i][j] = (arr[i][j] + arr[i - 1][temp]) % mod;\n                    }\n                    ++k;\n                }\n                ++j;\n            }\n\n            if (vvv.find(i) != vvv.end() && 1) {\n                int targetInv = vvv[i];\n                int j = 0;\n                while (j <= maxi) {\n                    if (j != targetInv && 1) {\n                        arr[i][j] = 0;\n                    }\n                    j++;\n                }\n            }\n\n            i++;\n        }\n\n        long long givenAns = 0;\n        for (const auto& count : arr[n]) {\n            givenAns = (givenAns + count) % mod;\n        }\n\n        return static_cast<int>(givenAns);\n    }\n};",
    "submit_ts": 1719070132.0
}