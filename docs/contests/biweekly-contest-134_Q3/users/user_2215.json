{
    "username": "robins_aryan",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int N = colors.size();\n        int count = 0;\n\n        if (k == 1) {\n            return N;  \n        }\n\n        int currentLength = 1;  \n        int i = 1;  \n        while (i < N + k - 1) {\n            int currentIdx = i % N;  \n\n            int previousIdx = (i - 1) % N;  \n            if (previousIdx < 0) {\n                previousIdx += N;\n            }\n\n            if (colors[currentIdx] != colors[previousIdx]) {\n                ++currentLength;  \n            } else {\n                currentLength = 1;  \n            }\n\n            if (currentLength >= k) {\n                ++count;  \n            }\n\n            ++i;  \n        }\n\n        return count;\n    }\n};\n",
    "submit_ts": "1720281001",
    "subm_id": "1311809649"
}