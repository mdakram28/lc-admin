{
    "username": "Aman Singh",
    "submission": "class Solution {\npublic:\n    long long max_sum(vector<int> &a, vector<int> &b, vector<int> &c, vector<vector<int>> &board, int &I, int &J, int &K){\n        long long maxx = LLONG_MIN;\n        if (a[0] != b[0] && a[0] != c[0] && c[0] != b[0]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[0]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[0] != b[0] && a[0] != c[1] && c[1] != b[0]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[0]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[0] != b[0] && a[0] != c[2] && c[2] != b[0]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[0]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[0] != b[1] && a[0] != c[0] && c[0] != b[1]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[1]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[0] != b[1] && a[0] != c[1] && c[1] != b[1]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[1]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[0] != b[1] && a[0] != c[2] && c[2] != b[1]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[1]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[0] != b[2] && a[0] != c[0] && c[0] != b[2]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[2]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[0] != b[2] && a[0] != c[1] && c[1] != b[2]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[2]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[0] != b[2] && a[0] != c[2] && c[2] != b[2]) {\n            maxx = max(maxx, board[I][a[0]]*1LL + board[J][b[2]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[1] != b[0] && a[1] != c[0] && c[0] != b[0]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[0]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[1] != b[0] && a[1] != c[1] && c[1] != b[0]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[0]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[1] != b[0] && a[1] != c[2] && c[2] != b[0]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[0]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[1] != b[1] && a[1] != c[0] && c[0] != b[1]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[1]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[1] != b[1] && a[1] != c[1] && c[1] != b[1]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[1]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[1] != b[1] && a[1] != c[2] && c[2] != b[1]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[1]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[1] != b[2] && a[1] != c[0] && c[0] != b[2]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[2]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[1] != b[2] && a[1] != c[1] && c[1] != b[2]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[2]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[1] != b[2] && a[1] != c[2] && c[2] != b[2]) {\n            maxx = max(maxx, board[I][a[1]]*1LL + board[J][b[2]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[2] != b[0] && a[2] != c[0] && c[0] != b[0]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[0]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[2] != b[0] && a[2] != c[1] && c[1] != b[0]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[0]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[2] != b[0] && a[2] != c[2] && c[2] != b[0]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[0]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[2] != b[1] && a[2] != c[0] && c[0] != b[1]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[1]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[2] != b[1] && a[2] != c[1] && c[1] != b[1]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[1]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[2] != b[1] && a[2] != c[2] && c[2] != b[1]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[1]]*1LL + board[K][c[2]]*1LL);\n        } else if (a[2] != b[2] && a[2] != c[0] && c[0] != b[2]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[2]]*1LL + board[K][c[0]]*1LL);\n        } else if (a[2] != b[2] && a[2] != c[1] && c[1] != b[2]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[2]]*1LL + board[K][c[1]]*1LL);\n        } else if (a[2] != b[2] && a[2] != c[2] && c[2] != b[2]) {\n            maxx = max(maxx, board[I][a[2]]*1LL + board[J][b[2]]*1LL + board[K][c[2]]*1LL);\n        }\n\n        return maxx;\n    }\n\n    vector<int> findThreeLargestElements(vector<int> &arr){\n        int arr_size = arr.size();\n        int max, max2, max3;\n        int minn = INT_MAX;\n        for(int i=0;i<arr_size;i++){\n            if(arr[i]<minn){\n                max = i;\n                minn = arr[i];\n            }\n        }\n        max3 = max;\n        max2 = max;\n        int i = 0;\n        for(auto &it: arr){\n            if (it >= arr[max]){\n                max3 = max2;\n                max2 = max;\n                max = i;\n            }\n            else if (it >= arr[max2]){\n                max3 = max2;\n                max2 = i;\n            }\n            else if (it > arr[max3])\n                max3 = i;\n            i++;\n        }\n        // vector<int> ans = ;\n        return {max, max2, max3};\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        vector<vector<int>> maxx(n);\n        int i = 0;\n        for(auto &it: board){\n            maxx[i] = findThreeLargestElements(it);\n            // for(auto i: maxx.back()) cout<<i<<\" \";\n            // cout<<endl;\n            i++;\n        }\n        long long ans = LLONG_MIN;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(i==j) continue;\n                for(int k=0;k<n;k++){\n                    if(j==k or k==i) continue;\n                    ans= max(ans*1LL, max_sum(maxx[i], maxx[j], maxx[k], board, i, j, k));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909995",
    "subm_id": "1359213372"
}