{
    "username": "navpreetsingh951818",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        \n        int n = nums.length;\n        int[] op = new int[n];\n    \n    \n        for(int i =0;i<n;i++){\n            op[i] = target[i] - nums[i];\n        }\n        \n        long res =  find(op);\n        for(int i =0;i<n;i++){\n            op[i] *=-1;\n        }\n        res += find(op);\n        return res;\n    }\n    \n    \n    private long find(int[] arr){\n        long res = 0;\n        int n = arr.length;\n            \n        long prev = 0;\n        for(int e : arr){\n            \n            \n            if(e  > 0){\n                res += Math.max(e*1L - prev,0L );\n                prev = e * 1l;\n            }else prev = 0;\n            \n        }\n        \n        return res;\n    }\n    \n}",
    "submit_ts": "1721531824",
    "subm_id": "1327970739"
}