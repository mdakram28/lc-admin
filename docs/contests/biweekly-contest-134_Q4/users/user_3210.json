{
    "username": "himanshukumar0",
    "submission": "class Solution {\npublic:\n     long long countSubarrays(std::vector<int>& nums, int targetVal) {\n       int arraySize = nums.size();\n         \n        \n         \n         \n        \n    long long ans = 0;\n         \n         \n         \n    std::unordered_map<long long, long long> prevAndRes;\n         \n         \n    \n    for (int currentIndex = 0; currentIndex < arraySize; ++currentIndex) {\n        \n        map<int,int>mp ;\n        \n        for(auto it : mp) cout<<it.first<<\" \" ;\n        \n    \n        \n        std::unordered_map<long long, long long> currentAndResults; \n        \n        \n        \n        \n        \n        if (nums[currentIndex] == targetVal) {\n            ++ans;\n        }\n        currentAndResults[nums[currentIndex]] = 1;\n        \n        for (auto& [andResult, frequency] : prevAndRes) {\n            \n            \n            \n            \n            long long newAndResult = andResult & nums[currentIndex];\n            \n            \n            \n                if (newAndResult == targetVal) {\n                      ans += frequency;\n                 }\n            currentAndResults[newAndResult] += frequency;\n        }\n        \n        prevAndRes = currentAndResults;\n    }\n    \n    return ans;\n    }\n};\n        \n ",
    "submit_ts": "1720280265",
    "subm_id": "1311782875"
}