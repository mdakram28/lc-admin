{
    "username": "thesycat",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        out = float('inf')\n        bit_counts = [0 for i in range(64)]\n        value = nums[0]\n        lo = 0\n        for hi in range(len(nums)):\n            for i in range(64):\n                if nums[hi] & (1 << i) != 0:\n                    bit_counts[i] += 1\n                        \n            value = value & nums[hi]\n            \n            out = min(out, abs(k-value))\n            \n            while value < k and lo <= hi:\n                out = min(out, abs(k-value))\n                tot = hi - (lo+1) + 1\n                for i in range(64):\n                    if nums[lo] & (1 << i) != 0:\n                        bit_counts[i] -= 1\n                    if bit_counts[i] == tot:\n                        value |= (1<<i)\n                lo += 1\n            out = min(out, abs(k-value))\n            if lo>hi and lo < len(nums):\n                value = nums[lo]\n            \n        return out\n            \n                \n                \n            \n            \n        ",
    "submit_ts": "1717298366",
    "subm_id": "1274776475"
}