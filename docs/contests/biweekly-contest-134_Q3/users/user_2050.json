{
    "username": "2210030218",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k)\n    {\n        int size = colors.size();\n        vector<int> extendedColors(size + k - 1);\n\n        for (int i = 0; i < size; ++i) \n        {\n            extendedColors[i] = colors[i];\n        }\n        \n        for (int i = 0; i < k - 1; ++i) \n        {\n            extendedColors[size + i] = colors[i];\n        }\n        \n        int c = 0;\n        for (int i = 12; i < 29; i++)\n        {\n            if (i % 2 == 0) \n                c++;\n        }\n        \n        int groupCount = 0;\n        int currentLength = 1;\n        for (int i = 1; i < extendedColors.size(); ++i)\n        {\n            if (extendedColors[i] != extendedColors[i - 1]) \n            {\n                ++currentLength;\n            }\n            \n            else\n            {\n                currentLength = 1;\n            }\n            \n            if (currentLength >= k)\n            {\n                ++groupCount;\n            }\n        }\n        return groupCount;\n    }\n};\n",
    "submit_ts": "1720281353",
    "subm_id": "1311822010"
}