{
    "username": "twoplusthree",
    "submission": "template <class S,S(*op)(S a,S b),S(*e)()> struct segtree{\nprivate:\n  int n;\n  S *t;\n  void upd(int k){\n    t[k]=op(t[k<<1],t[k<<1|1]);\n  }\npublic:\n  segtree(vector<S> &arr){\n    n=(int)arr.size();\n    t=new S[2*n];\n    for(int i=0;i<2*n;i++){\n      t[i]=e();\n    }\n    for(int i=0;i<n;i++){\n      t[n+i]=arr[i];\n    }\n    for(int i=n-1;i>=1;i--){\n      upd(i);\n    }\n  }\n  ~segtree(){\n    delete[] t;\n  }\n  void set(int p,S x){\n    for(t[p+=n]=x;p>>=1;){\n      upd(p);\n    }\n  }\n  S get(int p){\n    return t[n+p];\n  }\n  S prod(int l,int r){\n    if(l>=r){\n      return e();\n    }\n    S resl,resr;\n    resl=resr=e();\n    for(l+=n,r+=n;l<r;l>>=1,r>>=1){\n      if(l&1){\n        resl=op(resl,t[l++]);\n      }\n      if(r&1){\n        resr=op(t[--r],resr);\n      }\n    }\n    return op(resl,resr);\n  }\n  S all_prod(){\n    return t[1];\n  }\n};\nint op(int a,int b){return a&b;}\nint e(){return -1;}\nclass Solution{\npublic:\n  int minimumDifference(vector<int>&nums,int k){\n    int n=(int)nums.size();\n    segtree<int,op,e> st(nums);\n    int ans=1e9+5;\n    for(int l=0;l<n;l++){\n      int r=l;\n      int low,hig,mid;\n      low=l;\n      hig=n-1;\n      while(low<=hig){\n        mid=(low+hig)/2;\n        int suband=st.prod(l,mid+1);\n        if(suband>=k){\n          r=mid;\n          low=mid+1;\n        }else{\n          hig=mid-1;\n        }\n      }\n      //cout<<\"  ->\"<<l<<\" \"<<r<<\"\\n\";\n      ans=min(ans,abs(k-st.prod(l,r+1)));\n      if(r+2<=n){\n        ans=min(ans,abs(k-st.prod(l,r+2)));\n      }\n    }\n    //cout<<\"\\n\";\n    return ans;\n  }\n};",
    "submit_ts": "1717298458",
    "subm_id": "1274779781"
}