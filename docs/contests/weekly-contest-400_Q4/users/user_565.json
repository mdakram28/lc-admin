{
    "username": "Me_Noob_Sir",
    "submission": "class Solution {\npublic:\n    void build(vector<int> &a, int seg[], int i, int lo, int hi)\n{\n    if (lo == hi)\n    {\n        seg[i] = a[lo];\n        return;\n    }\n    int mid = (lo + hi) / 2;\n    build(a, seg, 2 * i + 1, lo, mid);\n    build(a, seg, 2 * i + 2, mid + 1, hi);\n    seg[i] = seg[2 * i + 1] & seg[2 * i + 2];\n}\nint query(int seg[], int i, int lo, int hi, int l, int r)\n{\n    if (l <= lo && r >= hi)\n        return seg[i];\n    if (r < lo || l > hi)\n        return INT_MAX;\n    int mid = (lo + hi) / 2;\n    int left = query(seg, 2 * i + 1, lo, mid, l, r);\n    int right = query(seg, 2 * i + 2, mid + 1, hi, l, r);\n    return left & right;\n}\n    \n    \n    int minimumDifference(vector<int>& a, int k) {\n        int n=a.size();\n        int seg[4 * n];\n    build(a, seg, 0, 0, n - 1);\n    int ans = INT_MAX;\n    for (int i = 0; i < n; i++)\n    {\n        int lo = i - 1, hi = n - 1;\n        while (hi - lo > 1)\n        {\n            int mid = (lo + hi) / 2;\n            if (query(seg, 0, 0, n - 1, i, mid) >= k)\n                lo = mid;\n            else\n                hi = mid;\n        }\n        if (lo != i - 1)\n            ans = min(ans, abs(k - query(seg, 0, 0, n - 1, i, lo)));\n        ans = min(ans, abs(k - query(seg, 0, 0, n - 1, i, hi)));\n    }\n        return ans;\n    }\n};",
    "submit_ts": 1717299454.0
}