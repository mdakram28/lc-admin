{
    "username": "wenboz",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        var freq = new HashMap<Integer, Integer>();\n        int[] freqm = new int[k + 1];\n        int n = nums.length;\n        for(int i = 0; i < n/2; i++){\n            freq.merge(Math.abs(nums[i] - nums[n - i - 1]), 1, Integer::sum);\n            int m = Math.max(Math.max(nums[i], nums[n - i - 1]), k - Math.min(nums[i], nums[n - i - 1]));\n            freqm[m]++;\n        }\n        int res = Integer.MAX_VALUE;\n        int cur = 0;\n        for(int i = 0; i <= k; i++){\n            res = Math.min(res, n/2 - freq.getOrDefault(i, 0) + cur);\n            cur += freqm[i];\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721486850",
    "subm_id": "1327366558"
}