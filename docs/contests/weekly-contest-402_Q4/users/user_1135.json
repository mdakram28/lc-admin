{
    "username": "nhc",
    "submission": "class Solution {\npublic:\n    int f[100009],n;\n    bool check(int x,vector<int>& nums)\n    {\n        return ((nums[x]>nums[x-1]) && (nums[x]>nums[x+1]));\n    }\n    void update(int x,int val)\n    {\n        if (val==0) return;\n        for (;x<=n;x+=x&(-x))\n        f[x]+=val;\n    }\n    int query(int x)\n    {\n        if (x>n) x-n;\n        if (x<1) return 0;\n        int ans=0;\n        for (;x;x-=x&(-x))\n            ans+=f[x];\n        return ans;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n= nums.size()-2;\n        for (int i=1;i<=n;i++)\n        {\n            if (check(i,nums)) update(i,1);\n        }\n       \n        vector<int>ans;\n        \n        for (auto x:queries)\n        {\n            int ch = x[0];\n            if (ch==1) \n            {\n               \n                if (x[2]-x[1]<2) ans.push_back(0);\n                else ans.push_back(query(x[2]-1)-query(x[1]));\n                //cout<<query(x[2]-1)-query(x[1])<<endl;\n            }\n            else \n            {\n                {\n                    int pre1=0,pre2=0,pre3=0,nex1=0,nex2=0,nex3=0;\n                    if (x[1]<=n && x[1]>=1)pre3 = check(x[1],nums);\n                    if (x[1]>=2)  pre1 = check(x[1]-1,nums);\n                    if (x[1]<=n-1)  pre2 = check(x[1]+1,nums);\n                          \n                    nums[x[1]] = x[2];\n\n                    if (x[1]>=2) nex1 =  check(x[1]-1,nums);\n                    if (x[1]<=n-1) nex2 =  check(x[1]+1,nums);\n                    if (x[1]<=n && x[1]>=1) nex3 = check(x[1],nums);\n\n                    if (x[1]>=2) update(x[1]-1,nex1-pre1);\n                    if (x[1]<=n-1) update(x[1]+1,nex2-pre2);\n                    if (x[1]<=n && x[1]>=1) update(x[1],nex3-pre3);\n                }\n\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509033.0
}