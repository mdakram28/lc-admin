{
    "username": "IDK",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        # \u4e09\u91cd\u904d\u5386, \u9009\u51fa\u4e09\u884c i,j,k\n        # \u5bf9\u4e8e\u8fd9\u4e09\u884c, \u5f97\u5230\u4ed6\u4eec\u7684\u524d\u4e09\u5927\u7684\u6570\u5b57\n        # \u8ba1\u7b97\u51fa\u4e0d\u540c\u5217\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u7684\u53d6\u503c\n\n        M,N = len(board), len(board[0])\n\n        first_3_max = []\n        for i in range(M):\n            t=[]\n            for j in range(3):\n                t.append([board[i][j], j])\n            t.sort()\n            for j in range(3,N):\n                if t[0][0] < board[i][j]:\n                    t[0] = [board[i][j], j]\n                    t.sort()\n            first_3_max.append(t)\n        \n\n        res = None\n        for i in range(M):\n            for j in range(i+1,M):\n                for k in range(j+1,M):\n                    m = res\n                    for ii in range(3):\n                        na,ni = first_3_max[i][ii]\n                        for jj in range(3):\n                            nb,nj = first_3_max[j][jj]\n                            if nj == ni:\n                                continue \n                            for kk in range(3):\n                                nc,nk = first_3_max[k][kk]\n                                if nk == ni or nk == nj:\n                                    continue \n                                m = na+nb+nc if m == None else max(m, na+nb+nc)\n                    res = m if res==None else max(m,res)\n        \n        return res \n                                \n                    \n    \n\n\n\n",
    "submit_ts": "1723907017",
    "subm_id": "556323058"
}