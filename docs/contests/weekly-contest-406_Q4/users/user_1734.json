{
    "username": "samtoosoon",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // Sort the costs in descending order\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        // Initialize the number of segments\n        int h_segments = 1;\n        int v_segments = 1;\n        \n        // Initialize total cost\n        long long total_cost = 0;\n        \n        // Pointers for horizontal and vertical cuts\n        int h_pointer = 0;\n        int v_pointer = 0;\n        \n        // Process cuts until all are done\n        while (h_pointer < horizontalCut.size() && v_pointer < verticalCut.size()) {\n            if (horizontalCut[h_pointer] >= verticalCut[v_pointer]) {\n                total_cost += static_cast<long long>(horizontalCut[h_pointer]) * v_segments;\n                h_segments++;\n                h_pointer++;\n            } else {\n                total_cost += static_cast<long long>(verticalCut[v_pointer]) * h_segments;\n                v_segments++;\n                v_pointer++;\n            }\n        }\n         // Process remaining horizontal cuts\n        while (h_pointer < horizontalCut.size()) {\n            total_cost += static_cast<long long>(horizontalCut[h_pointer]) * v_segments;\n            h_segments++;\n            h_pointer++;\n        }\n        \n        // Process remaining vertical cuts\n        while (v_pointer < verticalCut.size()) {\n            total_cost += static_cast<long long>(verticalCut[v_pointer]) * h_segments;\n            v_segments++;\n            v_pointer++;\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720926134",
    "subm_id": "1320277004"
}