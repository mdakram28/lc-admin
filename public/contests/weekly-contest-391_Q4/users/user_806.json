{
    "username": "samk522",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        \n        def MaxDist(A):\n            # print(A)\n            \n            N = len(A)\n \n            # Variables to track running extrema\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            minsumidx = 0\n            maxsumidx = 0\n            mindiffidx = 0\n            maxdiffidx = 0\n\n            for i in range(1, N):\n                s = A[i][0] + A[i][1]\n                \n                diff = A[i][0] - A[i][1]\n                if (s < minsum):\n                    minsum = s\n                    minsumidx = i\n                elif (s > maxsum):\n                    maxsum = s\n                    maxsumidx = i\n                if (diff < mindiff):\n                    mindiff = diff\n                    mindiffidx = i\n                elif (diff > maxdiff):\n                    maxdiff = diff\n                    maxdiffidx = i\n            \n            dist1 = maxsum - minsum\n            dist2 = maxdiff - mindiff\n            # print(dist1, dist2)\n            \n            if dist1 > dist2:\n                return (dist1, maxsumidx, minsumidx)\n            elif dist2 > dist1:\n                return (dist2, maxdiffidx, mindiffidx)\n            else:\n                return (dist1, maxsumidx, minsumidx, maxdiffidx, mindiffidx)\n            \n        \n        maxdistreturn = MaxDist(points)\n        res = maxdistreturn[0]\n        \n        for i in range(1, len(maxdistreturn)):\n            idx = maxdistreturn[i]\n            ps = []\n            for i, p in enumerate(points):\n                if i != idx:\n                    ps.append(p)\n            thisres = MaxDist(ps)[0]\n            if thisres <= res:\n                res = thisres\n        return res\n            \n            "
}