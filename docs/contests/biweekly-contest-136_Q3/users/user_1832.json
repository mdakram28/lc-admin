{
    "username": "subha_14",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        \n        if (n % 2 == 1 && m % 2 == 1) {\n            ans += (grid[n / 2][m / 2] == 1) ? 1 : 0;\n        }\n\n        vector<int> shift(3, 0);\n        if (n % 2 == 1) {\n            int left = 0, right = m - 1;\n            while (left < right) {\n                int sum = grid[n / 2][left] + grid[n / 2][right];\n                shift[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int top = 0, bottom = n - 1;\n            while (top < bottom) {\n                int sum = grid[top][m / 2] + grid[bottom][m / 2];\n                shift[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        ans += (shift[2] % 2 == 1) ? (shift[1] > 0 ? shift[1] : 2) : shift[1];\n\n        int i = 0;\n        while (i < n / 2) {\n            int j = 0;\n            while (j < m / 2) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sum = a + b + c + d;\n                ans += (sum != 0 && sum != 4) ? min(sum, 4 - sum) : 0;\n\n                j++;\n            }\n            i++;\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1722699989",
    "subm_id": "1343228323"
}