{
    "username": "mikeqiyh",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pll;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pi> vpi;\ntypedef vector<pll> vpll;\ntypedef vector<ld> vld;\n#define ms(x, a) memset(x, a, sizeof(x))\n#define siz(x) (int)x.size()\n#define len(x) (int)x.length()\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define F first\n#define S second\n#define FOR(i, x) for (int i = 0; i < x; i++)\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 0x3f3f3f3f3f3f3f3f;\nconst ll MOD = 1e9+7; //998244353;\n//===========================================\ntemplate<int MOD> struct mint {\n    static const int mod = MOD;\n     int v;\n     explicit operator int() const { return v; }\n    mint():v(0) {}\n    mint(ll _v):v(int(_v%MOD)) { v += (v<0)*MOD; }\n    mint& operator+=(mint o) {\n        if ((v += o.v) >= MOD) v -= MOD;\n        return *this; }\n    mint& operator-=(mint o) {\n        if ((v -= o.v) < 0) v += MOD;\n        return *this; }\n    mint& operator*=(mint o) {\n        v = int((ll)v*o.v%MOD); return *this; }\n    mint& operator/=(const mint& o) { return (*this) *= inv(o); }\n    friend mint pow(mint a, ll p) { assert(p >= 0);\n        return p==0?1:pow(a*a,p/2)*(p&1?a:1); }\n    friend mint inv(mint a) { assert(a.v != 0); return pow(a,MOD-2); }\n    friend mint operator+(mint a, mint b) { return a += b; }\n    friend mint operator-(mint a, mint b) { return a -= b; }\n    friend mint operator*(mint a, mint b) { return a *= b; }\n    friend mint operator/(mint a, const mint& b) { return a /= b; }\n};\nusing mi = mint<MOD>;\n//===========================================\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int n = siz(g), m = siz(g[0]);\n        int cnt = 0;\n        for (int i = 0; i < n/2; i++){\n            for (int j = 0; j < m/2; j++){\n                int x = g[i][j]+g[i][m-1-j]+g[n-1-i][j]+g[n-1-i][m-1-j];\n                cnt += min(x, 4-x);\n            }\n        }\n        if (n%2 == 0 && m%2) {\n            int x = 0, bad = 0;\n            for (int i = 0; i < n/2; i++){\n                bad += (g[i][m/2] != g[n-1-i][m/2]);\n                x += (g[i][m/2] + g[n-1-i][m/2]);\n            }\n            cnt += bad;\n            if (x%4 == 2 && !bad) cnt += 2;\n        } else if (n%2 && m%2 == 0){\n            int x = 0, bad = 0;\n            for (int i = 0; i < m/2; i++){\n                bad += (g[n/2][i] != g[n/2][m-1-i]);\n                x += (g[n/2][i] + g[n/2][m-1-i]);\n            }\n            cnt += bad;\n            if (x%4 == 2 && !bad) cnt += 2;\n        } else if (n%2 && m%2) {\n            if (g[n/2][m/2]) cnt++;\n            int x = 0, bad = 0;\n            for (int i = 0; i < n/2; i++){\n                bad += (g[i][m/2] != g[n-1-i][m/2]);\n                x += (g[i][m/2] + g[n-1-i][m/2]);\n            }\n            for (int i = 0; i < m/2; i++){\n                bad += (g[n/2][i] != g[n/2][m-1-i]);\n                x += (g[n/2][i] + g[n/2][m-1-i]);\n            }\n            cnt += bad;\n            if (x%4 == 2 && !bad) cnt += 2;\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1722697788",
    "subm_id": "1343158971"
}