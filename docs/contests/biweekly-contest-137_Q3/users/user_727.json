{
    "username": "Harry Potter",
    "submission": "#define ll long long\nconst long long inf=1e15;\nstruct SegmentMax{\n    \n    vector<ll>t;\n    \n    void build(int n){\n        t.resize(4*n,-inf);\n    }\n    ll merge(ll a,ll b){\n        return max(a,b);\n    }\n    void update(int ss,int se,int pos,int val,int i)\n    {\n        if(pos>se||pos<ss) return;\n        if(ss==se)\n        {\n            t[i]=val;\n            return;\n        }\n        int mid=(ss+se)/2;\n        update(ss,mid,pos,val,2*i+1);\n        update(mid+1,se,pos,val,2*i+2);\n        t[i]=merge(t[2*i+1],t[2*i+2]);\n    }\n\n    ll query(int ss,int se,int qs,int qe,int i)\n    {\n        if(qe<ss||se<qs) return -inf;\n        if(qs<=ss&&se<=qe) return t[i];\n        int mid=(ss+se)/2;\n        ll a=query(ss,mid,qs,qe,2*i+1);\n        ll b=query(mid+1,se,qs,qe,2*i+2);\n        return merge(a,b);\n    }\n};\nclass Solution {\npublic:\n    int m,n;\n    vector<SegmentMax>Nodee;\n    vector<vector<int>>v;\n    ll fun(int r,int c1,int c2,vector<vector<vector<ll>>>&dp){\n        if(r==m){\n            return -inf;\n        }\n        ll &c=dp[r][c1][c2];\n        if(c!=-inf) return c;\n        ll ans=fun(r+1,c1,c2,dp);\n        if(c1==n && c2==n){\n            for(int j=0;j<n;j++){\n                ans=max(1ll*fun(r+1,j,c2,dp)+v[r][j],ans);\n            }\n        }\n        else if(c2==n && c1<n){\n            for(int j=0;j<n;j++){\n                if(c1!=j){\n                    ans=max(1ll*fun(r+1,c1,j,dp)+v[r][j],ans);\n                }\n            }\n        }\n        else if(c1<n && c2<n){\n            if(c1<c2){\n                ll lmax=Nodee[r].query(0,n-1,0,c1-1,0);\n                ll rmax=Nodee[r].query(0,n-1,c2+1,n-1,0);\n                ll mmax=Nodee[r].query(0,n-1,c1+1,c2-1,0);\n                ans=max(ans,max(max(lmax,mmax),rmax));\n            }\n            else {\n                ll lmax=Nodee[r].query(0,n-1,0,c2-1,0);\n                ll rmax=Nodee[r].query(0,n-1,c1+1,n-1,0);\n                ll mmax=Nodee[r].query(0,n-1,c2+1,c1-1,0);\n                ans=max(ans,max(max(lmax,mmax),rmax));\n            }\n        }\n        return c=ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        m=board.size(); n=board[0].size();\n        Nodee.clear();\n        v.clear();\n        Nodee.resize(m);\n        for(int i=0;i<m;i++){\n            Nodee[i].build(n);\n            for(int j=0;j<n;j++){\n                Nodee[i].update(0,n-1,j,board[i][j],0);\n            }\n        }\n        v=board;\n        vector<vector<vector<ll>>>dp(m+1,vector<vector<ll>>(n+1,vector<ll>(n+1,-inf)));\n        return fun(0,n,n,dp);\n    }\n};",
    "submit_ts": "1723909751",
    "subm_id": "1359204429"
}