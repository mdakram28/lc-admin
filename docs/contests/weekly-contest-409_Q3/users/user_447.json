{
    "username": "vibhanshu_2025",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        // vector<int>adj[n];\n        // for(int i =0;i<n-1;i++){\n        //     adj[i].push_back(i+1);\n        //     // adj[i+1].push_back(i);\n        // }\n        set<int>se;\n        for(int i=0;i<n;i++) se.insert(i);\n        vector<int>ans(queries.size());\n        int x =0;\n        for(auto query:queries){\n            // adj[query[0]].push_back(query[1]);\n            auto it = se.upper_bound(query[0]);\n            // cout<<(*it)<<endl;\n            // se.erase(it);\n            int j=0;\n            // for(;;){\n            //     auto temp = it;\n            //     temp++;\n            //     if(it==se.end())cout<<\"hello\"<<endl;\n            //     else se.erase(it);\n            //     it = temp;\n            //     if(*temp==query[1]) break;\n            // }\n            // for(;;it++){\n            //     // cout<<\"aa\"<< \" \"<<(*it)<<endl;\n            //     if((*it)==query[1]) break;\n            //     se.erase(it);\n            //     j++;\n            //     if(j>5) break;\n            // }\n            while (it != se.end() && *it < query[1]) {\n                it = se.erase(it); \n            }\n            ans[x]=se.size()-1;\n            x++;\n            continue;\n            // int i =0;\n            // int cnt=0;\n            // while(i!=n-1){\n            //     i = *max_element(adj[i].begin(),adj[i].end());\n            //     // cout<<i<<endl;\n            //     cnt++;\n            // }\n            // // cout\n            // ans[x]=cnt;\n            // x++;\n\n\n\n            // queue<int>qu;\n            // qu.push(0);\n            // vector<int>dist(n,1000);\n            // dist[0]=0;\n            // while(!qu.empty()){\n            //     int fr = qu.front();\n            //     qu.pop();\n            //     for(auto c:adj[fr]){\n            //         if(dist[c]>dist[fr]+1){\n            //             qu.push(c);\n            //             dist[c]=dist[fr]+1;\n            //         }\n            //     }\n            // }\n            // // cout<<dist[n-1]<<endl;j\n            // ans[x]=dist[n-1];\n            // x++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741527",
    "subm_id": "1343747171"
}