{
    "username": "AnonymousDictator_69",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n#include <climits>\nusing namespace std;\n\n#define dboobie dp\n#define iboobie INT_MAX\n#define ivboobie vector<int>\n#define sboobie vector<string>\n\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> children;\n    vector<pair<int, int>> word_ends;\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    Trie() {\n        root = new TrieNode();\n    }\n\n    void insert(string word, int index, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            if (!node->children.count(c)) {\n                node->children[c] = new TrieNode();\n            }\n            node = node->children[c];\n        }\n        node->word_ends.push_back({index, cost});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, sboobie& words, ivboobie& costs) {\n        int n = target.size();\n        ivboobie dboobie(n + 1, iboobie);\n        dboobie[0] = 0;\n\n        Trie tboobie;\n        for (int i = 0; i < words.size(); ++i) {\n            tboobie.insert(words[i], i, costs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dboobie[i] == iboobie) {\n                continue;\n            }\n\n            TrieNode* node = tboobie.root;\n            for (int j = i; j < n; ++j) {\n                if (!node->children.count(target[j])) {\n                    break;\n                }\n                node = node->children[target[j]];\n                for (auto& p : node->word_ends) {\n                    int word_len = words[p.first].size();\n                    if (i + word_len <= n) {\n                        dboobie[i + word_len] = min(dboobie[i + word_len], dboobie[i] + p.second);\n                    }\n                }\n            }\n        }\n\n        if (dboobie[n] == iboobie) {\n            return -1;\n        } else {\n            return dboobie[n];\n        }\n    }\n};",
    "submit_ts": "1720322586",
    "subm_id": "1312353818"
}