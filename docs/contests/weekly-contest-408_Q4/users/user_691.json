{
    "username": "tanay3404",
    "submission": "class Solution {\npublic:\nint x1,x2,y1,y2;\nvoid dfs(int i,vector<int> &vis,map<int,vector<int>> &m1,vector<vector<int>> &circles){\n    vis[i]=1;\n    x1=min(x1,circles[i][0]-circles[i][2]);\n    x2=max(x2,circles[i][0]+circles[i][2]);\n    y1=min(y1,circles[i][1]-circles[i][2]);\n    y2=max(y2,circles[i][1]+circles[i][2]);\n    for(auto it:m1[i]){\n        if(vis[it]==0){\n            dfs(it,vis,m1,circles);\n        }\n    }\n\n}\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        map<int,vector<int>> m1;\n        for(int x=0;x<circles.size();x++){\n            for(int y=1;y<circles.size();y++){\n                long long int x3=circles[x][0]-circles[y][0];\n                long long int y3=circles[x][1]-circles[y][1];\n                long long int z=circles[x][2]+circles[y][2];\n                if(x3*x3+y3*y3<=z*z){\n                    m1[x].push_back(y);\n                    m1[y].push_back(x);\n\n                }\n            }\n        }\n        vector<int> vis(circles.size());\n        int j=0;\n\n        while(j<circles.size()){\n            if(vis[j]==0){\n                x1=INT_MAX;\n                x2=-INT_MAX;\n                y1=INT_MAX;\n                y2=-INT_MAX;\n                dfs(j,vis,m1,circles);\n                if(x1<=0&&x2>=X){\n                    return false;\n                }\n                if(x1<=0&&y1<=0){\n                    return false;\n                }  \n                if(y2>=Y&&x2>=X){\n                    return false;\n                }             \n                if(y2>=Y&&y1<=0){\n                    return false;\n                }\n\n            }\n             j++;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138047",
    "subm_id": "1335780739"
}