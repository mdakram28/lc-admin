{
    "username": "tom1312004",
    "submission": "const int MAXX = 150000;\n\nint segtree[4*MAXX];\nint maxi[4*MAXX];\nint mini[4*MAXX];\n\nvoid build(int i, int minimo, int maximo)\n{\n    if (minimo == maximo){\n        segtree[i] = 0;\n        maxi[i] = -1;\n        mini[i] = -1;\n        return;\n    }\n    int med = (minimo + maximo)/2;\n    build(2*i+1, minimo, med);\n    build(2*i+2, med+1, maximo);\n    maxi[i] = -1;\n    mini[i] = -1;\n    segtree[i] = maximo - minimo;\n}\n\nvoid change(int i, int minimo, int maximo, int pos)\n{\n    if (minimo == maximo){\n        maxi[i] = pos;\n        mini[i] = pos;\n        segtree[i] = 0;\n        return;\n    }\n    int med = (minimo + maximo)/2;\n    if (pos <= med) change(2*i+1, minimo, med, pos);\n    else change(2*i+2, med+1, maximo, pos);\n    if (maxi[2*i+2] == -1){\n        if (maxi[2*i+1] == -1)\n            maxi[i] = -1;\n        else\n            maxi[i] = maxi[2*i+1];\n    }\n    else maxi[i] = maxi[2*i+2];\n    if (mini[2*i+1] == -1){\n        if (mini[2*i+2] == -1)\n            mini[2*i+2] = -1;\n        else\n            mini[i] = mini[2*i+2];\n    }\n    else mini[i] = mini[2*i+1];\n    segtree[i] = max(segtree[2*i+1], segtree[2*i+2]);\n    if (maxi[2*i+1] == -1){\n        if (mini[2*i+2] == -1){\n            segtree[i] = maximo - minimo;\n        }\n        else\n        {\n            segtree[i] = max(segtree[i], mini[2*i+2]-minimo);\n        }\n    }\n    else{\n        if (mini[2*i+2] == -1){\n            segtree[i] = max(segtree[i], maximo - maxi[2*i+1]);\n        }\n        else\n        {\n            segtree[i] = max(segtree[i], mini[2*i+2] - maxi[2*i+1]);\n        }\n    }\n    return;\n}\n\nint solve(int i, int minimo, int maximo, int menor, int maior)\n{\n    if (minimo == menor && maximo == maior)\n        return segtree[i];\n    int med = (minimo + maximo)/2;\n    if (maior <= med) return solve(2*i+1, minimo, med, menor, maior);\n    if (menor > med) return solve(2*i+2, med+1, maximo, menor, maior);\n    int best = max(solve(2*i+1, minimo, med, menor, med), solve(2*i+2, med+1, maximo, med+1, maior));\n    if (maxi[2*i+1] == -1){\n        if (mini[2*i+2] == -1){\n            best = maior - menor;\n        }\n        else\n        {\n            best = max(best, min(mini[2*i+2], maior)-max(minimo, menor));\n        }\n    }\n    else{\n        if (mini[2*i+2] == -1){\n            best = max(best, min(maximo, maior) - max(maxi[2*i+1], menor));\n        }\n        else\n        {\n            best = max(best, min(maior, mini[2*i+2]) - max(maxi[2*i+1], menor));\n        }\n    }\n    return best;\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        build(0, 0, MAXX);\n        vector<bool> ans;\n        for (auto u: queries){\n            cout << u[0] << endl;\n            if (u[0] == 1){\n                change(0, 0, MAXX, u[1]);\n                continue;\n            }\n            int best = solve(0, 0, MAXX, 0, u[1]);\n            if (best >= u[2]) ans.push_back(true);\n            else ans.push_back(false);\n        }\nreturn ans;\n    }\n};",
    "submit_ts": 1716649484.0
}