{
    "username": "sfburui",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int diff;\n        set<int> temp;\n        vector<queue<int>> qs;\n        queue<int> q;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            diff = nums[i] - target[i];\n            if (diff == 0)\n            {\n                if (temp.size() == 0)\n                {\n                    continue;\n                }\n                else\n                {\n                    int x = (*temp.begin());\n                    int y = (*temp.rbegin());\n                    if (y > 0)\n                    {\n                        // ans += (long long)y;\n                    }\n                    else\n                    {\n                        // ans -= (long long)x;\n                    }\n                    qs.push_back(q);\n                    temp.clear();\n                    std::queue<int> empty;\n                    std::swap( q, empty );\n                }\n            }\n            else if (temp.size() != 0)\n            {\n                int x = *temp.begin();\n                if ((x > 0 && diff > 0) || (x < 0 && diff < 0))\n                {\n                    temp.insert(diff);\n                    q.push(abs(diff));\n                }\n                else\n                {\n                    int x = (*temp.begin());\n                    int y = (*temp.rbegin());\n                    if (y > 0)\n                    {\n                        // ans += (long long)y;\n                    }\n                    else\n                    {\n                        // ans -= (long long)x;\n                    }\n                    qs.push_back(q);\n                    temp.clear();\n                    temp.insert(diff);\n                    \n                    std::queue<int> empty;\n                    std::swap( q, empty );\n                    q.push(abs(diff));\n                }\n            }\n            else\n            {\n                q.push(abs(diff));\n                temp.insert(diff);\n            }\n        }\n        if (temp.size() != 0)\n        {\n            int x = (*temp.begin());\n            int y = (*temp.rbegin());\n            if (y > 0)\n            {\n                // ans += (long long)y;\n            }\n            else\n            {\n                // ans -= (long long)x;\n            }\n            temp.clear();\n            qs.push_back(q);\n        }\n        for(auto q: qs)\n        {\n            stack<int> ins;\n            while(!q.empty())\n            {\n                int x = q.front();\n                // cout << x << endl;\n                q.pop();\n                if(!ins.empty() && ins.top() > x)\n                {\n                    ans += ins.top() - x;\n                    while(!ins.empty() && ins.top() >= x)\n                    {\n                        ins.pop();\n                    }\n                }\n                ins.push(x);\n            }\n            if (!ins.empty())\n            {\n                ans += ins.top();\n            }\n        }\n        return ans;\n    }\n};\n\n// 9 +\n\n// 0 -7 -3 1 -5 -1 -6 -5 -7 -6\n// 9  5  5 1  7  9  8  7  6  5\n\n// 9 12  8 0  12 10 14 12 13 11",
    "submit_ts": "1721532023",
    "subm_id": "1327975760"
}