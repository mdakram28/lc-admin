{
    "username": "Ng_Chun-fai",
    "submission": "\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        t1 = [(e[0] - e[1], i) for i, e in enumerate(points)]\n        t2 = [(e[0] + e[1], i) for i, e in enumerate(points)]\n        t1.sort()\n        t2.sort()\n\n        x, y = 0, 0\n        if t1[-1][0] - t1[0][0] > t2[-1][0] - t2[0][0]:\n            x, y = t1[0][1], t1[-1][1]\n        else:\n            x, y = t2[0][1], t2[-1][1]\n        ans = inf\n        t1 = [(e[0] - e[1], i) for i, e in enumerate(points) if i != x]\n        t2 = [(e[0] + e[1], i) for i, e in enumerate(points) if i != x]\n        t1.sort()\n        t2.sort()\n        ans = min(ans, max(t1[-1][0] - t1[0][0], t2[-1][0] - t2[0][0]))\n        t1 = [(e[0] - e[1], i) for i, e in enumerate(points) if i != y]\n        t2 = [(e[0] + e[1], i) for i, e in enumerate(points) if i != y]\n        t1.sort()\n        t2.sort()\n        ans = min(ans, max(t1[-1][0] - t1[0][0], t2[-1][0] - t2[0][0]))\n        return ans"
}