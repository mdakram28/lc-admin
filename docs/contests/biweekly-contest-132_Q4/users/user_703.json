{
    "username": "shashwat28012002",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n    int n = nums.size();\n    vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n    int ans = 1;\n    vector<int> maxVal(k + 1, -1);\n    vector<map<int, int>> maxValMap(k + 1);\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j <= k; j++) {\n            for (int l = 0; l < j; l++) {\n                dp[i][j] = max(dp[i][j], 1 + maxVal[l]);\n            }\n            if (maxValMap[j].find(nums[i]) != maxValMap[j].end()) {\n                dp[i][j] = max(dp[i][j], 1 + maxValMap[j][nums[i]]);\n            }\n            ans = max(ans, dp[i][j]);\n        }\n        for (int j = 0; j <= k; j++) {\n            maxVal[j] = max(maxVal[j], dp[i][j]);\n            maxValMap[j][nums[i]] = max(maxValMap[j][nums[i]], dp[i][j]);\n        }\n    }\n    return ans;\n}\n\n};",
    "submit_ts": "1717861982",
    "subm_id": "1281808185"
}