{
    "username": "Ivan_len",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 900));\n        vector<vector<vector<int>>> dp2(n + 1, vector<vector<int>>(n + 1, vector<int>(m + 1, 900)));\n        vector<vector<vector<int>>> dp3(m + 1, vector<vector<int>>(m + 1, vector<int>(n + 1, 900)));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                int xmin = 40, xmax = -1, ymin = 40, ymax = -1;\n                for (int p = 0; p <= i; p++) {\n                    for (int q = 0; q <= j; q++) {\n                        if (grid[p][q] == 1) {\n                            xmin = min(xmin, p);\n                            xmax = max(xmax, p);\n                            ymin = min(ymin, q);\n                            ymax = max(ymax, q);\n                        }\n                    }\n                }\n                if (xmin == 40) dp[i + 1][j + 1] = 0;\n                else dp[i + 1][j + 1] = (ymax - ymin + 1) * (xmax - xmin + 1);\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                for (int k = 0; k < m; k++) {\n                    int xmin = 40, xmax = -1, ymin = 40, ymax = -1;\n                    for (int p = i; p <= j; p++) {\n                        for (int q = 0; q <= k; q++) {\n                            if (grid[p][q] == 1) {\n                                xmin = min(xmin, p);\n                                xmax = max(xmax, p);\n                                ymin = min(ymin, q);\n                                ymax = max(ymax, q);\n                            }\n                        }\n                    }\n                    if (xmin == 40) dp2[i + 1][j + 1][k + 1] = 0;\n                    else dp2[i + 1][j + 1][k + 1] = (ymax - ymin + 1) * (xmax - xmin + 1);\n                    // cout << i << ' ' << j << ' ' << k << ' ' << dp2[i + 1][j + 1][k + 1] << '\\n';\n                }\n            }\n        }\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = i; j < m; j++) {\n                for (int k = 0; k < n; k++) {\n                    int xmin = 40, xmax = -1, ymin = 40, ymax = -1;\n                    for (int p = i; p <= j; p++) {\n                        for (int q = 0; q <= k; q++) {\n                            if (grid[q][p] == 1) {\n                                xmin = min(xmin, q);\n                                xmax = max(xmax, q);\n                                ymin = min(ymin, p);\n                                ymax = max(ymax, p);\n                            }\n                        }\n                    }\n                    if (xmin == 40) dp3[i + 1][j + 1][k + 1] = 0;\n                    else dp3[i + 1][j + 1][k + 1] = (ymax - ymin + 1) * (xmax - xmin + 1);\n                    // cout << i << ' ' << j << ' ' << k << ' ' << dp3[i + 1][j + 1][k + 1] << '\\n';\n                }\n            }\n        }\n        \n        \n        \n    \n        int ans = 900;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                for (int p = i; p < n; p++) {\n                    int xmin = 40, xmax = -1, ymin = 40, ymax = -1;\n                    for (int q = j; q >= 0; q--) {\n                        if (q == j) {\n                            for (int x = 0; x < n; x++) {\n                                for (int y = m - 1; y >= 0; y--) {\n                                    if (x <= i && y <= j) break;\n                                    if (x <= p && y <= q) break;\n                                    if (grid[x][y] == 1) {\n                                        xmin = min(xmin, x);\n                                        xmax = max(xmax, x);\n                                        ymin = min(ymin, y);\n                                        ymax = max(ymax, y);\n                                    }\n                                }\n                            }   \n                        }\n                        else {\n                            for (int x = i + 1; x <= p; x++) {\n                                int y = q + 1;\n                                if (grid[x][y] == 1) {\n                                    xmin = min(xmin, x);\n                                    xmax = max(xmax, x);\n                                    ymin = min(ymin, y);\n                                    ymax = max(ymax, y);\n                                }\n                            }\n                        }\n                        int sqr = ((xmin == 40)?0:(ymax - ymin + 1) * (xmax - xmin + 1));\n                        // cout << i << ' ' << j << ' ' << p << ' ' << q << ' ' << sqr << '\\n';\n                        if (p > i) ans = min(ans, sqr + dp2[i + 2][p + 1][q + 1] + dp[i + 1][j + 1]);\n                        if (j > q) ans = min(ans, sqr + dp3[q + 2][j + 1][i + 1] + dp[p + 1][q + 1]);\n                        // ans = min(ans, sqr + min(dp2[i + 1][p + 1][q + 1] + dp[i + 1][j + 1], dp3[q + 1][j + 1][i + 1] + dp[p + 1][q + 1]));\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n\n// [[1,0,1],[1,1,1]]\n// [[1,0,1,0],[0,1,0,1]]\n// [[0,1,0,1],[0,1,0,0],[0,1,0,1]]\n// [[0,0,0],[0,0,1],[0,0,0],[1,0,1]]\n// [[0,1],[1,1]]",
    "submit_ts": 1719113611.0
}