{
    "username": "Cipher_07",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> p(n + 1, vector<int>(31));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 31; j++)\n                p[i + 1][j] = p[i][j] + bool(nums[i] & (1 << j));\n        }\n    \n        \n        auto get_value = [&](int i, int j) {\n            int value = 0;\n            for (int k = 0; k < 31; k++)\n                if (p[j][k] - p[i - 1][k] == j - i + 1)\n                    value |= (1 << k);\n            return value;\n        };\n\n        auto find_last = [&](int i) -> int {\n            int ans = -1;\n            if ((nums[i - 1] & k) != k)\n                return -1;\n\n            int low = i, high = n;\n            while (low <= high) {\n                int mid = (low + high) / 2;\n                int value = get_value(i, mid);\n                if (value < k) {\n                    high = mid - 1;\n                } else if (value > k) {\n                    low = mid + 1;\n                } else {\n                    ans = mid;\n                    low = mid + 1;\n                }\n            }\n\n            return ans;\n        };\n\n        auto find_first = [&](int i) -> int {\n            int ans = -1;\n            if ((nums[i - 1] & k) != k)\n                return -1;\n\n            int low = i, high = n;\n            while (low <= high) {\n                int mid = (low + high) / 2;\n                int value = get_value(i, mid);\n                if (value < k) {\n                    high = mid - 1;\n                } else if (value > k) {\n                    low = mid + 1;\n                } else {\n                    ans = mid;\n                    high = mid - 1;\n                }\n            }\n\n            return ans;\n        };\n\n        long long ans = 0;\n        for (int i = 1; i <= n; i++) {\n            int first = find_first(i);\n            // cout << first << endl;\n            if (first == -1)\n                continue;\n            int last = find_last(i);\n            ans += last - first + 1;\n\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720278478",
    "subm_id": "1311710927"
}