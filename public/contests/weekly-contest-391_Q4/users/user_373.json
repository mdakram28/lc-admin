{
    "username": "just_hands13",
    "submission": "int cal(vector<int> &a, int x, vector<vector<int>> &p){\n    int ans;\n    int n= a.size();\n    if(a[0]==x) ans = abs(p[a[1]][0] - p[a[n-1]][0]) + abs(p[a[1]][1] - p[a[n-1]][1]);\n    else if(a[n-1]==x) ans= abs(p[a[0]][0] - p[a[n-2]][0]) + abs(p[a[0]][1] - p[a[n-2]][1]);\n    else ans = abs(p[a[0]][0] - p[a[n-1]][0]) + abs(p[a[0]][1] - p[a[n-1]][1]);\n    return ans;\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> a, b;\n        for(int i=0; i<points.size(); i++) {a.push_back(i); b.push_back(i);}\n        sort(a.begin(), a.end(), [&points](int i, int j)->bool{\n            return points[i][0]+points[i][1] < points[j][0]+points[j][1];\n        });\n        sort(b.begin(), b.end(), [&points](int i, int j)->bool{\n            return points[i][0]-points[i][1] < points[j][0]-points[j][1];\n        });\n        int ans = max(cal(a, a[0], points), cal(b, a[0], points));\n        ans = min(ans, max(cal(a, a[a.size()-1], points), cal(b, a[a.size()-1], points)));\n        ans = min(ans, max(cal(a, b[0], points), cal(b, b[0], points)));\n        ans = min(ans, max(cal(a, b[b.size()-1], points), cal(b, b[b.size()-1], points)));\n        return ans;\n    }\n};"
}