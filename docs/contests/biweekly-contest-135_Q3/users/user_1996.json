{
    "username": "Amit130",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int size = nums.size();\n        map<int, vector<int>> difference_map;\n        vector<int> transformations;\n        \n        computeDifferences(nums, k, difference_map, transformations, size);\n        return calculateMinOperations(difference_map, transformations, size);\n    }\n\nprivate:\n    void computeDifferences(vector<int>& array, int max_val, map<int, vector<int>>& difference_map, vector<int>& transformations, int size) {\n        for (int i = 0; i < size / 2; ++i) {\n            int val1 = array[i];\n            int val2 = array[size - i - 1];\n            int diff = abs(val1 - val2);\n            int max_transform = max({val1, val2, max_val - val1, max_val - val2});\n            difference_map[diff].push_back(max_transform);\n            transformations.push_back(max_transform);\n        }\n        sort(transformations.begin(), transformations.end());\n    }\n\n    int calculateMinOperations(const map<int, vector<int>>& difference_map, const vector<int>& transformations, int size) {\n        int min_operations = size; // Start with the maximum possible number of changes\n        \n        for (const auto& entry : difference_map) {\n            int current_diff = entry.first;\n            const vector<int>& transform_values = entry.second;\n            \n            int operations = initialOperations(transformations, current_diff, size);\n            adjustOperations(transform_values, current_diff, operations);\n            \n            min_operations = min(min_operations, operations);\n        }\n        \n        return min_operations;\n    }\n    \n    int initialOperations(const vector<int>& transformations, int current_diff, int size) {\n        int position = lower_bound(transformations.begin(), transformations.end(), current_diff) - transformations.begin();\n        return position * 2 + ((size / 2) - position);\n    }\n    \n    void adjustOperations(const vector<int>& transform_values, int current_diff, int& operations) {\n        for (int transform : transform_values) {\n            if (transform < current_diff) {\n                operations -= 2;\n            } else {\n                operations -= 1;\n            }\n        }\n    }\n};\n",
    "submit_ts": "1721489433",
    "subm_id": "1327453103"
}