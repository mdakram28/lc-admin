{
    "username": "Gaurav-Singh-G",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        long long i=0, j=0, ans=0;\n        m--; n--;\n        while (i<m && j<n){\n            if (horizontalCut[i] >= verticalCut[j]){\n                ans += (long long)(horizontalCut[i] * (j+1));\n                i++;                \n            }\n            else {\n                ans += (long long)(verticalCut[j] * (i+1));\n                j++;\n            }\n        }\n        while (i==m && j<n){\n            ans += (long long)(verticalCut[j] * (i+1));\n            j++;\n        }\n        while (j==n && i<m){\n            ans += (long long)((horizontalCut[i] * (j+1)));\n            i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926757",
    "subm_id": "1320295536"
}