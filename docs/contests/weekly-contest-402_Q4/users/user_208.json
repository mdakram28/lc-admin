{
    "username": "ran-shao-de-huo",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        f = SortedList()\n        n = len(nums)\n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                f.add(i)\n        ans = []\n        for op, l, r in queries:\n            if op == 1:\n                if r <= l + 1:\n                    ans.append(0)\n                else:\n                    ans.append(f.bisect_left(r) - f.bisect_left(l + 1))\n            else:\n                nums[l] = r\n                for i in range(l - 1, l + 2):\n                    if 0 < i < n - 1 and nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                        if i not in f:\n                            f.add(i)\n                    else:\n                        f.discard(i)\n        return ans",
    "submit_ts": 1718506792.0
}