{
    "username": "SupervisorMayHap",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        n = len(circles)\n        p = [i for i in range(n + 5)]\n        \n        \n        def get(a):\n            if a == p[a]:\n                return a\n            p[a] = get(p[a])\n            return p[a]\n    \n        def union(a, b):\n            pa = get(a)\n            pb = get(b)\n            p[pa] = p[pb]\n        # for i in range(n+2):\n        #     print(get(i))\n        for i in range(n):\n            x, y, r = circles[i]\n            # print(i, ':')\n            if x <= r:\n                # print(0)\n                union(i + 1, 0)\n            if Y - y <= r:\n                # print(0)\n                union(i + 1, 0)\n            if y <= r:\n                # print(1)\n                union(i + 1, n + 1)\n            if X - x <= r:\n                # print(1)\n                union(i + 1, n + 1)\n        # for i in range(n+2):\n        #     print(get(i))\n        \n        for i in range(n):\n            for j in range(i + 1, n):\n                x1, y1, r1 = circles[i]\n                x2, y2, r2 = circles[j]\n                if (x1 - x2) ** 2 + (y1 - y2) ** 2 <= (r1 + r2) ** 2:\n                    # print(i, j)\n                    union(i + 1, j + 1)\n        return get(0) != get(n + 1)\n\n            \n        \n        \n        \n        ",
    "submit_ts": "1722135472",
    "subm_id": "1335702890"
}