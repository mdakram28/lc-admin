{
    "username": "cakuang1",
    "submission": "\n\n// Trie node structure\ntype TrieNode struct {\n\tchildren map[byte]*TrieNode\n\tcost     int\n\tendWord  bool\n}\n\nfunc newTrieNode() *TrieNode {\n\treturn &TrieNode{\n\t\tchildren: make(map[byte]*TrieNode),\n\t\tcost:     math.MaxInt32,\n\t\tendWord:  false,\n\t}\n}\n\n// Trie structure\ntype Trie struct {\n\troot *TrieNode\n}\n\n// Initialize Trie\nfunc newTrie() *Trie {\n\treturn &Trie{root: newTrieNode()}\n}\n\n// Insert word into Trie with cost\nfunc (t *Trie) insert(word string, cost int) {\n\tnode := t.root\n\tfor i := 0; i < len(word); i++ {\n\t\tch := word[i]\n\t\tif _, ok := node.children[ch]; !ok {\n\t\t\tnode.children[ch] = newTrieNode()\n\t\t}\n\t\tnode = node.children[ch]\n\t}\n\tnode.endWord = true\n\tif node.cost > cost {\n\t\tnode.cost = cost\n\t}\n}\n\n// Function to find the minimum of two integers\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\n// Main function to find the minimum cost to form the target string\nfunc minimumCost(target string, words []string, costs []int) int {\n\ttrie := newTrie()\n\tfor i, word := range words {\n\t\ttrie.insert(word, costs[i])\n\t}\n\n\tn := len(target)\n\tdp := make([]int, n+1)\n\tfor i := range dp {\n\t\tdp[i] = math.MaxInt32\n\t}\n\tdp[0] = 0\n\n\tfor i := 0; i < n; i++ {\n\t\tif dp[i] == math.MaxInt32 {\n\t\t\tcontinue\n\t\t}\n\t\tcurr := trie.root\n\t\tfor j := i; j < n; j++ {\n\t\t\tcurrByte := target[j]\n\t\t\tif next, ok := curr.children[currByte]; ok {\n\t\t\t\tcurr = next\n\t\t\t\tif curr.endWord {\n\t\t\t\t\tdp[j+1] = min(dp[j+1], dp[i]+curr.cost)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tif dp[n] == math.MaxInt32 {\n\t\treturn -1\n\t}\n\treturn dp[n]\n}\n\n",
    "submit_ts": "1720324228",
    "subm_id": "1312394548"
}