{
    "username": "b08902128",
    "submission": "class Solution {\n    public int numberOfSubstrings(String s) {\n        List<Integer> pre0 = new ArrayList<>();\n        List<Integer> pre1 = new ArrayList<>();\n        pre0.add(0);\n        pre1.add(0);\n        int n = s.length();\n        for(int i=0; i<n; i++){\n            boolean is0 = s.charAt(i) == '0';\n            pre0.add(pre0.get(i) + (is0 ? 1 : 0));\n            pre1.add(pre1.get(i) + (is0 ? 0 : 1));\n        }\n        int ans = 0;\n        for(int len=1; len<=n; len++){\n            int i=0;\n            while(i < n - len + 1){\n                int num0 = pre0.get(i+len) - pre0.get(i);\n                if(num0 + num0*num0 <= len){\n                    double possibleNum0 = (Math.sqrt(1+4*len) - 1.0)/2.0;\n                    int skip = ((int)Math.round(possibleNum0)) - num0 - 1;\n                    skip = Math.max(skip, 1);\n                    if(i + skip >= n - len +1){\n                        ans += n - len + 1 - i;\n                        break;\n                    }\n                    ans += skip;\n                    i += skip;\n                } else {\n                    double possibleNum0 = (Math.sqrt(1+4*len) - 1.0)/2.0;\n                    int skip = num0 - ((int)Math.round(possibleNum0)) - 1;\n                    i += Math.max(skip, 1);\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722137326",
    "subm_id": "1335760565"
}