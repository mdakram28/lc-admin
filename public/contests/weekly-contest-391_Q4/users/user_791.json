{
    "username": "AdityaRaj_cpp",
    "submission": "class Solution\n{\n    int MaxDist(vector<vector<int>> &points)\n    {\n        // return 0;\n        int n = points.size();\n        vector<int> t1(n), t2(n);\n        for (int i = 0; i < n; i++)\n        {\n            t1[i] = points[i][0] + points[i][1];\n            t2[i] = points[i][0] - points[i][1];\n        }\n\n        sort(t1.begin(), t1.end());\n        sort(t2.begin(), t2.end());\n\n        int ans = max(t1.back() - t1.front(), t2.back() - t2.front());\n        return ans;\n    }\n\npublic:\n    int minimumDistance(vector<vector<int>> &points)\n    {\n        int n = points.size();\n        vector<vector<int>> t1(n,vector<int>(2)), t2(n,vector<int>(2));\n\n        for (int i = 0; i < n; i++)\n        {\n            t1[i][0] = points[i][0] + points[i][1];\n            t1[i][1] = i;\n            t2[i][0] = points[i][0] - points[i][1];\n            t2[i][1] = i;\n        }\n\n        sort(t1.begin(), t1.end());\n        sort(t2.begin(), t2.end());\n\n        int ans = 0;\n        if (t1.back()[0] - t1.front()[0] > t2.back()[0] - t2.front()[0])\n        {\n            int idx1 = t1.back()[1];\n            int idx2 = t1.front()[1];\n            vector<vector<int>> vp;\n            for (int i = 0; i < n; i++)\n            {\n                if (i == idx1)\n                    continue;\n                vp.push_back({points[i][0], points[i][1]});\n            }\n            ans = MaxDist(vp);\n            vp.clear();\n            for (int i = 0; i < n; i++)\n            {\n                if (i == idx2)\n                    continue;\n                vp.push_back({points[i][0], points[i][1]});\n            }\n            ans = min(ans, MaxDist(vp));\n        }\n        else\n        {\n            int idx1 = t2.back()[1];\n            int idx2 = t2.front()[1];\n            vector<vector<int>> vp;\n            for (int i = 0; i < n; i++)\n            {\n                if (i == idx1)\n                    continue;\n                vp.push_back({points[i][0], points[i][1]});\n            }\n            ans = MaxDist(vp);\n            vp.clear();\n            for (int i = 0; i < n; i++)\n            {\n                if (i == idx2)\n                    continue;\n                vp.push_back({points[i][0], points[i][1]});\n            }\n            ans = min(ans, MaxDist(vp));\n        }\n        return ans;\n    }\n};"
}