{
    "username": "Ic7KWGeuo4",
    "submission": "class Solution {\npublic:\n    using PairCombinationCounts = vector<vector<vector<long long int>>>;\n\n    long long int modulate(long long int value, long long int modulus) {\n        return ((value % modulus) + modulus) % modulus;\n    }\n\n    void initializeMemoization(PairCombinationCounts& memoization, int size, int maxValue) {\n        for (int i = 0; i < size; ++i) {\n            for (int j = 0; j <= maxValue; ++j) {\n                fill(memoization[i][j].begin(), memoization[i][j].end(), -1);\n            }\n        }\n    }\n\n    bool validatePair(int sum1, int sum2, int target) {\n        return sum1 + sum2 == target;\n    }\n\n    long long int findPairCombinations(int currentIndex, int firstSum, int secondSum, const vector<int>& elements, PairCombinationCounts& memoization) {\n        const long long int modulusValue = 1e9 + 7;\n        const int totalElements = elements.size();\n\n        if (currentIndex == totalElements) {\n            return 1;\n        }\n\n        if (memoization[currentIndex][firstSum][secondSum] != -1) {\n            return memoization[currentIndex][firstSum][secondSum];\n        }\n\n        long long int combinationCount = 0;\n        for (int i = firstSum; i <= elements[currentIndex]; ++i) {\n            for (int j = secondSum; j >= 0; --j) {\n                if (validatePair(i, j, elements[currentIndex])) {\n                    combinationCount = modulate(combinationCount + findPairCombinations(currentIndex + 1, i, j, elements, memoization), modulusValue);\n                }\n            }\n        }\n\n        return memoization[currentIndex][firstSum][secondSum] = combinationCount;\n    }\n\n    int countOfPairs(vector<int>& elements) {\n        int totalElements = elements.size();\n        int maxValue = *max_element(elements.begin(), elements.end());\n        PairCombinationCounts memoization(totalElements, vector<vector<long long int>>(maxValue + 1, vector<long long int>(maxValue + 1, -1)));\n        return findPairCombinations(0, 0, elements[0], elements, memoization);\n    }\n};\n",
    "submit_ts": "1723346327",
    "subm_id": "1351575143"
}