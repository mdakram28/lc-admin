{
    "username": "Qode_breaker",
    "submission": "\n#define ll long long int\n\nclass Solution {\npublic:\n    using PairCounts = vector<vector<vector<ll>>>;\n\n    ll mod(ll x, ll m) {\n        return ((x % m) + m) % m; // Handles negative values\n    }\n\n    void initMemo(PairCounts& memo, int n, int max_val) {\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j <= max_val; ++j) {\n                fill(memo[i][j].begin(), memo[i][j].end(), -1);\n            }\n        }\n    }\n\n    bool isValidPair(int val1, int val2, int target) {\n        return val1 + val2 == target;\n    }\n\n    ll countPairsHelper(int index, int sum1, int sum2, const vector<int>& values, PairCounts& memo) {\n        const int mod_val = 1e9 + 7;\n        const int n = values.size();\n\n        if (index == n) {\n            return 1;\n        }\n\n        if (memo[index][sum1][sum2] != -1) {\n            return memo[index][sum1][sum2];\n        }\n\n        ll count = 0;\n        for (int i = sum1; i <= values[index]; ++i) {\n            for (int j = sum2; j >= 0; --j) {\n                if (isValidPair(i, j, values[index])) {\n                    count = mod(count + countPairsHelper(index + 1, i, j, values, memo), mod_val);\n                }\n            }\n        }\n\n        return memo[index][sum1][sum2] = count;\n    }\n\n    int countOfPairs(vector<int>& values) {\n        int n = values.size();\n        int max_val = *max_element(values.begin(), values.end());\n        PairCounts memo(n, vector<vector<ll>>(max_val + 1, vector<ll>(max_val + 1, -1)));\n        return countPairsHelper(0, 0, values[0], values, memo);\n    }\n};\n",
    "submit_ts": "1723346049",
    "subm_id": "1351569070"
}