{
    "username": "Maneeya-0405Mehta",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> temp;\n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            temp.push_back({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.size(); ++i) {\n            temp.push_back({verticalCut[i], 1});\n        }\n        sort(temp.begin(), temp.end(), greater<pair<int, int>>());\n\n        int hp = 1;\n        int vp = 1;\n        long long ans = 0;\n\n        for (auto& cut : temp) {\n            int cost = cut.first;\n            int type = cut.second;\n\n            if (type == 0) {\n                ans += cost * vp;\n                ++hp;\n            } else {\n                ans += cost * hp;\n                ++vp;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926485",
    "subm_id": "1320287663"
}