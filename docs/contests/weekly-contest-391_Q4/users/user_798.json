{
    "username": "liu-zhang-xian-sheng-i",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<multiset<int>> st(4);\n        // ++    -+    +-    --\n        for (auto&& p : points) {\n            int x = p[0], y = p[1];\n            st[0].insert(x + y);\n            st[1].insert(-x + y);\n            st[2].insert(x - y);\n            st[3].insert(-x - y);\n        }\n\n        int n = points.size();\n        int minn = INT_MAX;\n\n        for (int i = 0; i < n; i++) {\n            // \u5220\u9664\u7b2ci\u4e2a\u70b9\n            int x = points[i][0], y = points[i][1];\n            st[0].erase(st[0].find(x + y));\n            st[1].erase(st[1].find(-x + y));\n            st[2].erase(st[2].find(x - y));\n            st[3].erase(st[3].find(-x - y));\n            int r1 = *st[0].rbegin() + *st[3].rbegin();\n            int r2 = *st[1].rbegin() + *st[2].rbegin();\n            int r = max(r1, r2);\n            minn = min(minn, r);\n            st[0].insert(x + y);\n            st[1].insert(-x + y);\n            st[2].insert(x - y);\n            st[3].insert(-x - y);\n        }\n\n        return minn;\n    }\n};\n\n// int main() {\n    \n//     vector<vector<int>> points = { {1,1},{1,1},{1,1} };\n   \n//     Solution s;\n//     s.minimumDistance(points);\n// }"
}