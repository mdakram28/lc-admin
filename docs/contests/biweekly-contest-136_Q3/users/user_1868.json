{
    "username": "viethoangbui06012008",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m=grid.size();// so cot td i\n        int n=grid[0].size();//so hang td j\n        int count=0;\n        if(m%2==0&&n%2==0){\n            for(int i=0;i<m/2;i++){\n                for(int j=0;j<n/2;j++){\n                    int a=grid[i][j]+grid[m-1-i][n-1-j]+grid[i][n-1-j]+grid[m-1-i][j];\n                    count+=min(a,4-a);\n                }\n            }\n        }\n        if(m%2==1&&n%2==1){\n            int midM=(m-1)/2;\n            int midN=(n-1)/2;\n            for(int i=0;i<midM;i++){\n                for(int j=0;j<midN;j++){\n                    int a=grid[i][j]+grid[m-1-i][n-1-j]+grid[i][n-1-j]+grid[m-1-i][j];\n                    count+=min(a,4-a);\n                }\n            }\n            if(grid[(m-1)/2][(n-1)/2]==1)count++;\n            int CanChange=0;\n\n            int count1;\n            for(int i=0;i<midM;i++){\n                if(grid[i][midN]!=grid[m-1-i][midN]){\n                    count++;\n                    CanChange=2;\n                }\n                else{\n                    count1+=grid[i][midN]+grid[m-1-i][midN];\n                }\n            }\n            for(int j=0;j<midN;j++){\n                if(grid[midM][j]!=grid[midM][n-1-j]){\n                    count++;\n                    CanChange=2;\n                }\n                else{\n                    count1+=grid[midM][j]+grid[midM][n-1-j];\n                }\n            }\n            if(count1 %4!=0){\n                count+=2-CanChange;\n            }\n        }\n        if(m%2==0&&n%2==1){\n            int midM=m/2;\n            int midN=(n-1)/2;\n            for(int i=0;i<midM;i++){\n                for(int j=0;j<midN;j++){\n                    int a=grid[i][j]+grid[m-1-i][n-1-j]+grid[i][n-1-j]+grid[m-1-i][j];\n                    count+=min(a,4-a);\n                }\n            }\n            // if(grid[(m-1)/2][(n-1)/2]==1)count++;\n            int CanChange=0;\n\n            int count1;\n            for(int i=0;i<midM;i++){\n                if(grid[i][midN]!=grid[m-1-i][midN]){\n                    count++;\n                    CanChange=2;\n                }\n                else{\n                    count1+=grid[i][midN]+grid[m-1-i][midN];\n                }\n            }\n            if(count1 %4!=0){\n                count+=2-CanChange;\n            }\n        }\n        if(m%2==1&&n%2==0){\n            int midM=(m-1)/2;\n            int midN=n/2;\n            for(int i=0;i<midM;i++){\n                for(int j=0;j<midN;j++){\n                    int a=grid[i][j]+grid[m-1-i][n-1-j]+grid[i][n-1-j]+grid[m-1-i][j];\n                    count+=min(a,4-a);\n                }\n            }\n            // if(grid[(m-1)/2][(n-1)/2]==1)count++;\n            int CanChange=0;\n\n            int count1;\n            for(int j=0;j<midN;j++){\n                if(grid[midM][j]!=grid[midM][n-1-j]){\n                    count++;\n                    CanChange=2;\n                }\n                else{\n                    count1+=grid[midM][j]+grid[midM][n-1-j];\n                }\n            }\n            if(count1 %4!=0){\n                count+=2-CanChange;\n            }\n        }\n        return count;\n    }\n};",
    "submit_ts": "1722698819",
    "subm_id": "1343192840"
}