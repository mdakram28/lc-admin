{
    "username": "saadakbar10",
    "submission": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Arrays;\n\npublic class Solution {\n    private Map<Integer, int[][]> memo = new HashMap<>();\n\n    private int f(int k, int idx, int cnt, boolean flag) {\n        if (idx >= k + 4) return 0;\n        if (cnt>31) return 0;\n\n        if (memo.containsKey(idx) && memo.get(idx)[cnt][flag ? 1 : 0] != -1)\n            return memo.get(idx)[cnt][flag ? 1 : 0];\n\n        int res =(idx == k)? 1 : 0;\n        if (flag)\n            res += f(k, idx - 1, cnt, false);\n        if (idx + (1 << cnt) <= k + 1)\n            res += f(k, idx + (1 << cnt), cnt + 1, true);\n\n        if (!memo.containsKey(idx)) {\n            int[][] arr = new int[32][2];\n            for (int[] x : arr) {\n                Arrays.fill(x,-1);\n            }\n            memo.put(idx, arr);\n        }\n\n        memo.get(idx)[cnt][flag ? 1 : 0]=res;\n        return res;\n    }\n\n    public int waysToReachStair(int k) {\n        return f(k, 1, 0, true);}\n    }",
    "submit_ts": 1716090018.0
}