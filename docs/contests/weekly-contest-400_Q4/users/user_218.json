{
    "username": "noobiiitian",
    "submission": "// class Solution {\n// public:\n// int minimumDifference(vector<int> &nums, int k)\n// {\n//     vector<vector<int>> pre(nums.size() + 1, vector<int>(32, 0));\n//     for (int i = 0; i < nums.size(); i++)\n//     {\n//         for (int j = 0; j < 32; j++)\n//         {\n//             if (nums[i] & (1LL << j))\n//             {\n//                 pre[i + 1][j] = 1;\n//             }\n//         }\n//     }\n//     for (int i = 1; i < nums.size(); i++)\n//     {\n//         for (int j = 0; j < 32; j++)\n//         {\n//             pre[i][j] += pre[i - 1][j];\n//         }\n//     }\n//     int ans = INT_MAX;\n//     int n = nums.size();\n//     for (int i = 0; i < n; i++)\n//     {\n//         // cout<<ans<<endl;\n//         if (nums[i] <= k)\n//         {\n//             ans = min(ans, k - nums[i]);\n//             continue;\n//         }\n//         int low = i, high = n - 1;\n//         while (low < high)\n//         {\n//             int mid = (0LL + low + high+1) / 2;\n//             int val = 0;\n//             for (int j = 0; j < 32; j++)\n//             {\n//                 if (mid + 1 - i == pre[mid + 1][j] - pre[i][j])\n//                 {\n//                     val |= (1LL << j);\n//                 }\n//             }\n//             if (val >= k)\n//             {\n//                 low = mid;\n//             }\n//             else\n//             {\n//                 high = mid - 1;\n//             }\n//         }\n//         int val = 0;\n//         for (int j = 0; j < 32; j++)\n//         {\n//             if (low + 1 - i == pre[low + 1][j] - pre[i][j])\n//             {\n//                 val |= (1LL << j);\n//             }\n//         }\n//         cout<<low<<\" \"<<val<<endl;\n//         ans = min(ans, abs(val - k));\n//         if (low < n - 1)\n//         {\n//             val &= nums[low + 1];\n//             ans = min(ans, abs(val - k));\n//         }\n//         // cout<<low<<endl;\n//     }\n//     return ans;\n// }\n// };\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int> &nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pre(n + 1, vector<int>(32, 0));\n\n        // Preprocess the bits\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < 32; ++j) {\n                if (nums[i] & (1 << j)) {\n                    pre[i + 1][j] = 1;\n                }\n            }\n        }\n\n        // Cumulative sum of bits\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j < 32; ++j) {\n                pre[i][j] += pre[i - 1][j];\n            }\n        }\n\n        int ans = INT_MAX;\n\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] <= k) {\n                ans = min(ans, abs(k - nums[i]));\n                continue;\n            }\n\n            int low = i, high = n - 1;\n            while (low < high) {\n                int mid = (low + high + 1) / 2;\n                int val = 0;\n                for (int j = 0; j < 32; ++j) {\n                    if (pre[mid + 1][j] - pre[i][j] == (mid - i + 1)) {\n                        val |= (1 << j);\n                    }\n                }\n                if (val >= k) {\n                    low = mid;\n                } else {\n                    high = mid - 1;\n                }\n            }\n\n            int val = 0;\n            for (int j = 0; j < 32; ++j) {\n                if (pre[low + 1][j] - pre[i][j] == (low - i + 1)) {\n                    val |= (1 << j);\n                }\n            }\n            ans = min(ans, abs(val - k));\n            if (low < n - 1) {\n                val &= nums[low + 1];\n                ans = min(ans, abs(val - k));\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1717297565",
    "subm_id": "1274747400"
}