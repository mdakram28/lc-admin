{
    "username": "socrates1232",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        ans = 0\n        for i in range(int(m / 2)):\n            for j in range(int(n / 2)):\n                cnt = [0, 0]\n                cnt[grid[i][j]] += 1\n                cnt[grid[i][n - j - 1]] += 1\n                cnt[grid[m - i - 1][j]] += 1\n                cnt[grid[m - i - 1][n - j - 1]] += 1\n                ans += min(cnt)\n        bad2 = 0\n        total = 0\n        if m % 2 == 1:\n            r = int(m / 2)\n            for j in range(int(n / 2)):\n                if grid[r][j] != grid[r][n - j - 1]:\n                    bad2 += 1\n                    ans += 1\n                else:\n                    total += 2 * grid[r][j]\n        if n % 2 == 1:\n            c = int(n / 2)\n            for i in range(int(m / 2)):\n                if grid[i][c] != grid[m - i - 1][c]:\n                    bad2 += 1\n                    ans += 1\n                else:\n                    total += 2 * grid[i][c]\n        if m % 2 == 1 and n % 2 == 1:\n            ans += grid[int(m / 2)][int(n / 2)]\n        if total % 4 == 2 and bad2 == 0:\n            ans += 2\n        return ans",
    "submit_ts": "1722696649",
    "subm_id": "552262077"
}