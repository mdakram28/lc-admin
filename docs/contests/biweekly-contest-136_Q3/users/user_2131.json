{
    "username": "cheng-jun-hong",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        ans = 0\n        if m == 1 and n < 4 or (n == 1 and m < 4):\n            return sum(map(sum, grid))\n\n        # if m == 1 and n >= 4:\n        #     ans += sum(1 if grid[0][i] != grid[0][n-1-i] else 0 for i in range(n // 2))\n        #     ans += grid[0][n // 2] if n % 2 == 1 else 0\n        #     return ans\n        \n        # if n == 1 and m >= 4:\n        #     ans += sum(1 if grid[i][0] != grid[m-1-i][0] else 0 for i in range(m // 2))\n        #     ans += grid[m // 2][0] if m % 2 == 1 else 0\n        #     return ans\n\n        \n        for i in range(m // 2):\n            for j in range(n // 2):\n                tmp = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j]\n                ans += min(tmp, 4 - tmp)\n        print(ans)\n        anst = 0\n        s = 0\n        if m % 2 == 1:\n            index = m // 2\n            anst += sum(1 if grid[index][i] != grid[index][n-1-i] else 0 for i in range(n // 2))\n            ans += grid[index][n // 2] if n % 2 == 1 else 0\n            if anst == 0:\n                s += sum(grid[index][i] + grid[index][n-1-i] for i in range(n // 2))\n        print(anst)\n        if n % 2 == 1:\n            index = n // 2\n            anst += sum(1 if grid[i][index] != grid[m-1-i][index] else 0 for i in range(m // 2))\n            ans += grid[m // 2][index] if m % 2 == 1 else 0\n            if anst == 0:\n                s += sum(grid[i][index] + grid[m-1-i][index] for i in range(m // 2))\n        print(anst)\n        if m % 2 == 1 and n % 2 == 1:\n            ans -= grid[m // 2][n // 2]\n        if s % 4 > 0 and anst == 0:\n            anst += 2\n        return ans + anst",
    "submit_ts": "1722699062",
    "subm_id": "552273888"
}