{
    "username": "parasguglani",
    "submission": "class Solution {\npublic:\nint minimumDistance(vector<vector<int>> &points)\n{\n\n    int n = points.size();\n    vector<int> sums(n), diff(n);\n    multiset<int> sum, dif;\n    for (int i = 0; i < n; i++)\n    {\n        sum.insert(points[i][0] + points[i][1]);\n        dif.insert(points[i][0] - points[i][1]);\n    }\n    int ans = INT_MAX;\n    for (int i = 0; i < n; i++)\n    {\n        sum.erase(sum.find(points[i][0] + points[i][1]));\n        dif.erase(dif.find(points[i][0] - points[i][1]));\n        ans = min(ans, max(*sum.rbegin() - *sum.begin(), *dif.rbegin() - *dif.begin()));\n           sum.insert(points[i][0] + points[i][1]);\n        dif.insert(points[i][0] - points[i][1]);\n    }\n    return ans;\n}\n};"
}