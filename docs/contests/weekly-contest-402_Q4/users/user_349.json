{
    "username": "zhao-xi-20",
    "submission": "const int MAXN = 1e5 + 7;\n#define lowbit(x) (x&-x)\nint c[MAXN];\nvoid init(int n)\n{\n    for(int i = 1;i <= n;++i)   c[i] = 0;\n}\nvoid add(int x, int n, int y)\n{\n    while(x <= n)\n    {\n        c[x] += y;\n        x += lowbit(x);\n    }\n}\nint ask(int x)\n{\n    int ans = 0;\n    while(x)\n    {\n        ans += c[x];\n        x -= lowbit(x);\n    }\n    return ans;\n}\nint ask(int l,int r)\n{\n    if(l + 1 >= r)  return 0;\n    return ask(r - 1) - ask(l);\n}\nvoid md(int idx,auto &a, auto &b)\n{\n    if(idx < 0 || idx >= a.size())  return ;\n    if(idx == 0 || idx == a.size() - 1) return ;\n    if(a[idx] > a[idx - 1] && a[idx] > a[idx + 1])\n    add(idx + 1, a.size(), 1), b[idx] = 1;\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int n = a.size();\n        vector<int> b(n, 0);\n        init(n);\n        for(int i = 1;i <= n - 2;++i)\n        {\n            if(a[i] > a[i - 1] && a[i] > a[i + 1])\n            add(i + 1, n, 1), b[i] = 1;\n        }\n        for(auto &x: queries)\n        {\n            if(x[0] == 1)\n            {\n                x[1] += 1;\n                x[2] += 1;\n                ans.push_back(ask(x[1], x[2]));\n            }\n            else\n            {\n                // if(x[1] == 0 || x[1] == n - 1)  continue;\n                if(b[x[1]]) add(x[1] + 1, n, -1), b[x[1]] = 0;\n                if(x[1] - 1 >= 0 && b[x[1] - 1]) add(x[1], n, -1), b[x[1] - 1] = 0;\n                if(x[1] + 1 < n && b[x[1] + 1]) add(x[1] + 2, n, -1), b[x[1] + 1] = 0;\n                a[x[1]] = x[2];\n                md(x[1], a, b);\n                md(x[1] - 1, a, b);\n                md(x[1] + 1, a, b);\n            }\n        }return ans;\n    }\n};",
    "submit_ts": 1718506984.0
}