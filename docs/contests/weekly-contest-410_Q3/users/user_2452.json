{
    "username": "mikhiel_30",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int[][] dp = new int[n][51]; // Since nums[i] <= 50\n\n        // Initialization for the first element\n        for (int j = 0; j <= nums[0]; j++) {\n            dp[0][j] = 1;\n        }\n\n        // Fill the DP table\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= nums[i]; j++) {\n                int arr2Value = nums[i] - j;\n                for (int k = 0; k <= j; k++) {  // arr1[i-1] <= j\n                    if (arr2Value <= nums[i-1] - k) {  // arr2[i-1] >= arr2Value\n                        dp[i][j] = (dp[i][j] + dp[i-1][k]) % MOD;\n                    }\n                }\n            }\n        }\n\n        // Sum up the final row to get the answer\n        int result = 0;\n        for (int j = 0; j <= 50; j++) {\n            result = (result + dp[n-1][j]) % MOD;\n        }\n\n        return result;\n    }\n}\n",
    "submit_ts": "1723347031",
    "subm_id": "1351590413"
}