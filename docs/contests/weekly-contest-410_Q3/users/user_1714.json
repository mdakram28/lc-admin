{
    "username": "aakash_811",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n    int maxVal = 50;\n\n    // DP table for current and previous states\n    vector<vector<int>> dp(maxVal + 1, vector<int>(maxVal + 1, 0));\n    vector<vector<int>> prev(maxVal + 1, vector<int>(maxVal + 1, 0));\n    \n    // Initialize the DP table for the first element\n    for (int j = 0; j <= nums[0]; ++j) {\n        int k = nums[0] - j;\n        if (k >= 0 && k <= maxVal) {\n            dp[j][k] = 1;\n        }\n    }\n\n    // Fill the DP table\n    for (int i = 1; i < n; ++i) {\n        // Swap dp and prev\n        swap(dp, prev);\n        // Clear the current dp table\n        for (auto& row : dp) {\n            fill(row.begin(), row.end(), 0);\n        }\n\n        // Compute prefix sums for the previous state\n        vector<vector<int>> prefixSum(maxVal + 1, vector<int>(maxVal + 1, 0));\n        for (int j = 0; j <= maxVal; ++j) {\n            for (int k = 0; k <= maxVal; ++k) {\n                prefixSum[j][k] = prev[j][k];\n                if (j > 0) prefixSum[j][k] = (prefixSum[j][k] + prefixSum[j - 1][k]) % MOD;\n                if (k > 0) prefixSum[j][k] = (prefixSum[j][k] + prefixSum[j][k - 1]) % MOD;\n                if (j > 0 && k > 0) prefixSum[j][k] = (prefixSum[j][k] - prefixSum[j - 1][k - 1] + MOD) % MOD;\n            }\n        }\n\n        // Update dp table based on the prefix sums\n        for (int j = 0; j <= nums[i]; ++j) {\n            int k = nums[i] - j;\n            if (k < 0 || k > maxVal) continue;\n\n            dp[j][k] = prefixSum[j][maxVal];\n            if (k > 0) dp[j][k] = (dp[j][k] - prefixSum[j][k - 1] + MOD) % MOD;\n        }\n    }\n\n    // Sum up all valid pairs for the last element\n    int result = 0;\n    for (int j = 0; j <= nums[n - 1]; ++j) {\n        int k = nums[n - 1] - j;\n        if (k >= 0 && k <= maxVal) {\n            result = (result + dp[j][k]) % MOD;\n        }\n    }\n    \n    return result;\n}\n};",
    "submit_ts": "1723345562",
    "subm_id": "1351558461"
}