{
    "username": "achiever_673",
    "submission": "/*\n     /\\        _____  |     |   |   ______  \\        /   ______  _____      \n    /  \\      /       |     |   |  /         \\      /   /        |    \\\n   /----\\     |       |-----|   |  |_____     \\    /    |_____   |____/\n  /      \\    |       |     |   |  |           \\  /     |        |  \\\n /        \\   \\_____  |     |   |  \\______      \\/      \\______  |   \\\n \n */\n\n#include <bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\n// using namespace __gnu_pbds;\n\n// #define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\n// #define int long long\n\n\n#define ll long long\n// #define int long long int\n#define LargeInt __int128 \n#define ss second\n#define ff first\n#define vi vector<int>\n#define vvi vector<vector<int>>\n#define vc vector<char>\n#define vvc vector<vector<char>> \n#define vs vector<string>\n#define vpi vector<pair<int,int>>\n#define vf vector<float>\n#define vll vector<long long>\n#define pb push_back\n#define ppb pop_back\n#define all(v) (v).begin(),(v).end()\n#define rall(v) (v).rbegin(),(v).rend()\n#define lb lower_bound\n#define ub upper_bound\n#define flf(i,a,b) for(ll i=a;i<b;i++)\n#define flb(i,b,a) for(ll i=b;i>=a;i--)\n#define yes cout << \"Yes\\n\"\n#define no cout << \"No\\n\"\n#define set_bit __builtin_popcountll\n#define PI 3.141592653589793238462\nint binpow(int a,int b,int m){ int res=1; while(b>0){ if(b&1) res=(res*a)%m; a=(a*a)%m; b>>=1; }return res; }/////////////\n#define speedUP std::ios::sync_with_stdio(false); std::cin.tie(0); std::cout.tie(0);\nvector<vector<int>> dr = {{1,0},{-1,0},{0,1},{0,-1}};\n\ntypedef priority_queue<int,vector<int>,greater<int>> mnhp;\ntypedef priority_queue<int> mxhp;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nconst int INF = 1e9;\nconst int64_t INFF = 1e18;\nconst int Mod = 1e9+7; ////// prime number\n\nstring to_str(char c){ return string(1, c); }\nbool is_vowel(char k){\n    if(k=='a'||k=='e'||k=='i'||k=='o'||k=='u') return true;\n    if(k=='A'||k=='E'||k=='I'||k=='O'||k=='U') return true;\n    return false;\n}\n\n///////////////////////////////////////////// COMBINATORICS ///////////////////////////////////////////////////////\ntemplate <class T>\nT gcd(T a, T b){ return (b==0)?a:gcd(b,a%b); }\ntemplate <class T>\nT lcm(T a, T b){ return (a*b)/gcd(a,b); }\n\ntemplate <class T>\nT Power(T a, T b, T p = Mod){\n    // unsigned long long ans = 1;\n    T ans = 1;\n    a = a % p;\n    while(b>0){\n        if(b&1) ans = (ans * a) % p;\n        b = b>>1;\n        a = (a*a) % p;\n    }\n    return ans;\n}\n\ntemplate <class T>\nT modInverse(T n, T p = Mod){\n    return Power(n,p-2,p);\n}\n\n\nvector<int> factorial(200002);\n// int nCr(int n, int r, int p = Mod){\n//     if(n<r) return 0;\n//     if(r==0) return 1;\n//     return (factorial[n] * modInverse(factorial[r],p) % p * modInverse(factorial[n-r],p) % p) % p;\n// }\n// int nPr(int n, int r) { return factorial[n]/factorial[n-r]; }\n\ntemplate <class T>\nint nCr(int n, int r, T p = Mod){\n    if(n<r) return 0;\n    if(r==0) return 1;\n    T numerator = factorial[n];\n    T denominator = (factorial[r] * factorial[n - r]) % p;\n    return (numerator * modInverse(denominator, p)) % p;\n}\n\ntemplate <class T>\nint nPr(int n, int r, T p = Mod) {\n    if (n < r) return 0;\n    return (factorial[n] * modInverse(factorial[n - r], p)) % p;\n}\n\n\n\n////////////////////////////////////////// SIEVE ERATOSTHENES  ////////////////////////////////////////////////////\nbool checkPrime(int n){\n    if(n==1) return false;\n    for(int i=2;i<=sqrtl(n);i++) if (n % i == 0) return false;\n    return true;\n}\n\nconst int N = 1e6+10;\nvector<bool> is_prime(N,true);\nvector<int> prime;\nvoid Sieve()\n{\n    is_prime[0]=is_prime[1]=false;\n    is_prime[2]=true;\n    for(int i=2;i*i<=N;i++)\n    {\n        if(is_prime[i])\n        {\n            for(int j=i*i;j<=N;j+=i)\n            {\n                is_prime[j] = false;\n            }\n        }\n    }\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvector<int> unique(vector<int> &a){\n    auto it = unique(all(a));\n    a.resize(it - a.begin());\n    return a;\n}\n\ntemplate <class T> void vcout(map<T,T> &a){\n    for(auto i : a) cout << i.ff << \" \" << i.ss << endl;\n    cout << endl;\n}\n\ntemplate <class T> void vcout(vector<T> &a){\n    for(auto i : a) cout << i << \" \";\n    cout << endl;\n}\n\ntemplate <class T> vector<T> vcin(vector<T> &a){\n    for(auto &i : a) cin >> i;\n    return a;\n}\n\ntemplate <class T> void vvcin(vector<T> &a, int n){\n    for(int i=0;i<n;i++){\n        int k; cin >> k; a.pb(k);\n    }\n}\n\ntemplate <class T> void vcout(set<T> &a){\n    for(auto i : a) cout << i << \" \";\n    cout << endl;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// int dp[100001] = { [0 ... 100000] = -1 }; \n\n\nvoid AJ_673(){\n    int n; cin >> n;\n    vi a(n); vcin(a);\n}\n\n// signed main(){\n//     speedUP\n    \n//     // cout << setprecision(a) << fixed;\n\n//     // Sieve();\n//     // for(int i=0;i<N;i++) if(is_prime[i]) prime.pb(i);\n\n//     // factorial[0] = 1;\n//     // for(int i=1;i<200002;i++){\n//     //     factorial[i] = (factorial[i-1]*i)%Mod;\n//     // }\n\n//     int t; cin >> t;\n//     while(t--){\n//         AJ_673();\n//     }\n// }\n\n\n\n\n\n\n\n\n\nclass Solution {\npublic:\n    map<int,vector<vector<int>>> m;\n    int call(int k ,int id, int go, int done){\n        if(id >= k+6) return 0;\n        if(go > 30) return 0;\n        if(m.find(id) != m.end() && m[id][go][done] != -2){\n            return m[id][go][done];\n        }\n        \n        int amar = (id==k?1:0);\n        if(done) amar += call(k, id-1, go, 0);\n        if(id + (1<<go) < k+2) amar += call(k, id + (1<<go), go+1, 1);\n        m[id].resize(32, vector<int> (2, -2));\n        return m[id][go][done] = amar;\n    }\n    int waysToReachStair(int k) {\n        // return solve(k, 1, 0, 1);\n        return call(k, 1, 0, 1);\n    } \n};",
    "submit_ts": "1716090418",
    "subm_id": "1261866755"
}