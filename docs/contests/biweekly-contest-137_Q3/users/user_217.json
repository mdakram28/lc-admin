{
    "username": "kevincabbage",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int count = 0;\n        vector<long long> value;\n        vector<int> row, col, index;\n        long long res = LLONG_MIN;\n        \n        for(int i = 0; i < board.size(); ++i) {\n            for(int j = 0; j < board[0].size(); ++j) {\n                value.push_back(board[i][j]);\n                row.push_back(i);\n                col.push_back(j);\n                index.push_back(count++);\n            }\n        }\n        \n        sort(index.begin(), index.end(), [&](int a, int b){return value[a] > value[b];});\n        \n        for(int i = 0; i < index.size() && i < 7; ++i) {\n            int second_count = 0;\n            for(int j = i + 1; j < index.size() && second_count < 3; ++j) {\n                if(row[index[j]] == row[index[i]] || col[index[j]] == col[index[i]]) continue;\n                ++second_count;\n                for(int k = j + 1; k < index.size(); ++k) {\n                    if(row[index[k]] == row[index[i]] || col[index[k]] == col[index[i]]) continue;\n                    if(row[index[k]] == row[index[j]] || col[index[k]] == col[index[j]]) continue;\n                    \n                    res = max(res, value[index[i]] + value[index[j]] + value[index[k]]);\n                    break;\n                }\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1723908744",
    "subm_id": "556332610"
}