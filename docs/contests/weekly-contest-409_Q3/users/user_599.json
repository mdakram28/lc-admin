{
    "username": "1000voices",
    "submission": "class Solution {\n    fun shortestDistanceAfterQueries(n: Int, queries: Array<IntArray>): IntArray {\n        var map = TreeSet<Int>()\n        for (i in 0 until n) {\n            map.add(i)\n        }\n        var result = mutableListOf<Int>(n - 1)\n        for ((l, r) in queries) {\n            if (!map.contains(l) || !map.contains(r)) {\n                result.add(result.last())\n                continue\n            }\n            while (true) {\n                var higher = map.higher(l) ?: break\n                if (higher >= r) break\n                map.remove(higher)\n            }\n            result.add(map.size - 1)\n        }\n        return result.slice(1 until result.size).toIntArray()\n    }\n}",
    "submit_ts": "1722741811",
    "subm_id": "1343754056"
}