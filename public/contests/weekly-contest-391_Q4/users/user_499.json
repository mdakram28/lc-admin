{
    "username": "wenboz",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        int[][] xpy = new int[n][2];\n        int[][] xmy = new int[n][2];\n        for(int i = 0; i < n; i++){\n            xpy[i][0] = points[i][0] + points[i][1];\n            xmy[i][0] = points[i][0] - points[i][1];\n            xpy[i][1] = i;\n            xmy[i][1] = i;\n        }\n        Arrays.sort(xpy, (a,b) -> Integer.compare(a[0], b[0]));\n        Arrays.sort(xmy, (a,b) -> Integer.compare(a[0], b[0]));\n        int res = maxDist(points, xpy[0][1]);\n        res = Math.min(res, maxDist(points, xpy[n - 1][1]));\n        res = Math.min(res, maxDist(points, xmy[0][1]));\n        res = Math.min(res, maxDist(points, xmy[n - 1][1]));\n        return res;\n    }\n    \n    int maxDist(int[][] points, int k){\n        int n = points.length;\n        var xpy = new ArrayList<Integer>();\n        var xmy = new ArrayList<Integer>();\n        for(int i = 0; i < n; i++){\n            if(i != k){\n                xpy.add(points[i][0] + points[i][1]);\n                xmy.add(points[i][0] - points[i][1]);\n            }\n        }\n        Collections.sort(xpy);\n        Collections.sort(xmy);\n        return Math.max(xpy.get(xpy.size() - 1) - xpy.get(0), xmy.get(xmy.size() - 1) - xmy.get(0));\n    }\n}"
}