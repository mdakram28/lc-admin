{
    "username": "shangzhq-xiaohao",
    "submission": "class Solution {\npublic:\n    int N;\n    \n    struct Node {\n        int l, r, mx, tag;\n    };\n    \n    vector<Node> tr;\n    \n    void build(int u, int l, int r) {\n        tr[u] = {l, r, 0, 0};\n        if(l != r) {\n            int mid = l + r >> 1;\n            build(u << 1, l, mid);\n            build(u << 1 | 1, mid + 1, r);\n        }\n    }\n    \n    void pushup(int u) {\n        tr[u].mx = max(tr[u << 1].mx, tr[u << 1 | 1].mx);\n    }\n    \n    void pushdown(int u) {\n        if(tr[u].tag == 0) return;\n        tr[u << 1].mx += tr[u].tag;\n        tr[u << 1 | 1].mx += tr[u].tag;\n        tr[u << 1].tag += tr[u].tag;\n        tr[u << 1 | 1].tag += tr[u].tag;\n        tr[u].tag = 0;\n    }\n    \n    void modify(int u, int l, int r, int c) {\n        if(tr[u].l >= l && tr[u].r <= r) {\n            tr[u].mx += c;\n            tr[u].tag += c;\n        } else {\n            int mid = tr[u].l + tr[u].r >> 1;\n            pushdown(u);\n            if(l <= mid) modify(u << 1, l, r, c);\n            if(r > mid) modify(u << 1 | 1, l, r, c);\n            pushup(u);\n        }\n    }\n    \n    int query(int u, int l, int r) {\n        if(tr[u].l >= l && tr[u].r <= r) return tr[u].mx;\n        int mid = tr[u].l + tr[u].r >> 1;\n        pushdown(u);\n        int res = 0;\n        if(l <= mid) res = max(res, query(u << 1, l, r));\n        if(r > mid) res = max(res, query(u << 1 | 1, l, r));\n        return res;\n    }\n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        N = 0;\n        for(auto &i : queries) N = max(N, i[1]);\n        N ++;\n        \n        tr.resize(4 * N);\n        build(1, 0, N - 1);\n        for(int i = 0; i < N; i ++) modify(1, i, i, i);\n        vector<bool> ans;\n        set<int> ob;\n        \n        for(auto &i : queries) {\n            int op = i[0];\n            if(op == 1) {\n                int x = i[1];\n                auto preit = ob.lower_bound(x);\n                int pre = 0;\n                if(preit != ob.begin()) {\n                    preit --;\n                    pre = *preit;\n                }\n                int nxt = N - 1;\n                auto nxtit = ob.upper_bound(x);\n                if(nxtit != ob.end()) {\n                    nxt = *nxtit;\n                }\n                modify(1, x + 1, nxt, -(x - pre));\n                ob.insert(x);\n            } else {\n                int x = i[1], sz = i[2];\n                auto t = query(1, 0, x);\n                ans.push_back(t >= sz);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716648769.0
}