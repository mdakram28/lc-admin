{
    "username": "rishu_raj_10042002",
    "submission": "class Solution {\npublic:\n    #define int long long\n    int par[1001];\n    int size[1001];\n    void make(int v)\n    {\n        size[v] = 1;\n        par[v] = v;\n    }\n    int find(int v)\n    {\n        if(v==par[v]) return v;\n        return par[v] = find(par[v]);\n    }\n    void Union(int a,int b)\n    {\n        a = find(a);\n        b = find(b);\n        if(a!=b)\n        {\n            if(size[a]<size[b])\n            swap(a,b);\n            size[a] += size[b];\n            par[b] = a;\n        }\n    }\n    #undef int\n    bool canReachCorner(int X, int Y, vector<vector<int>>& given) {\n        #define int long long\n        vector<vector<int>> circles;\n        for(int i=0;i<given.size();i++){\n            vector<int> temp;\n            for(int j=0;j<given[i].size();j++)\n                temp.push_back(given[i][j]);\n            circles.push_back(temp);\n        }\n        for(int i=0;i<circles.size();i++) make(i);\n        bool left = false,right = false,top = false,bottom = false;\n        for(int i=0;i<circles.size();i++){\n            int cx = circles[i][0],cy = circles[i][1],cr = circles[i][2];\n            int d = pow(cx-X,2) + pow(cy-Y,2);\n            if(d<=cr*cr) return false;\n            d = pow(cx,2)+pow(cy,2);\n            if(d<=cr*cr) return false;\n            \n            //check if it touches bottom\n            if(cr>=cy) bottom = true;\n            //top\n            if(cr>=Y-cy) top = true;\n        }\n        for(int i=0;i<circles.size();i++){\n            for(int j=i+1;j<circles.size();j++){\n                int d = pow(circles[i][0]-circles[j][0],2) +  pow(circles[i][1]-circles[j][1],2);\n                if(d<=pow(circles[i][2]+circles[j][2],2)){\n                    Union(i,j);\n                }\n            }\n        }\n        map<int,vector<int>> help;\n        for(int i=0;i<circles.size();i++)\n            help[find(i)].push_back(i);\n        // for(auto it : help){\n        //     for(auto it1 : it.second)\n        //         cout<<it1<<\" \";\n        //     cout<<\"\\n\";\n        // }\n        bool source = false,dest = false;\n        for(auto& c : help){\n            int left = 1e9+10,right = -1e9-10,top = -1e9 - 10,bottom = 1e9 + 10;\n            for(auto ind : c.second){\n                left = min(left,circles[ind][0]-circles[ind][2]);\n                right = max(right,circles[ind][0]+circles[ind][2]);\n                bottom = min(bottom,circles[ind][1]-circles[ind][2]);\n                top = max(top,circles[ind][1]+circles[ind][2]);\n            }\n            // cout<<left<<\" \"<<right<<\" \"<<top<<\" \"<<bottom<<\"\\n\";\n            if(left<=0 && bottom<=0) return false;\n            if(left<=0 && right>=X) return false;\n            // if(left<=0 && top>=Y) return false;\n            if(right>=X && top>=Y) return false;\n            if(top>=Y && bottom<=0) return false;\n        }\n        return true;\n        #undef int\n    }\n};",
    "submit_ts": "1722137579",
    "subm_id": "1335767874"
}