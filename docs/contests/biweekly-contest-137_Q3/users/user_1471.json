{
    "username": "Ayush Maurya",
    "submission": "// class Solution {\n// public:\n//     long long maximumValueSum(vector<vector<int>>& board) {\n//         int m = board.size();\n//         int n = board[0].size();\n//         long long maxSum = LLONG_MIN;\n\n//         for (int r1 = 0; r1 < m; ++r1) {\n//             for (int r2 = r1 + 1; r2 < m; ++r2) {\n//                 for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    \n//                     for (int c1 = 0; c1 < n; ++c1) {\n//                         for (int c2 = c1 + 1; c2 < n; ++c2) {\n//                             for (int c3 = c2 + 1; c3 < n; ++c3) {\n                                \n//                                 long long sum = board[r1][c1] + board[r2][c2] + board[r3][c3];\n//                                 maxSum = max(maxSum, sum);\n//                             }\n//                         }\n//                     }\n//                 }\n//             }\n//         }\n        \n//         return maxSum;\n//     }\n// };\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n        long long maxSum = LLONG_MIN;\n        vector<vector<long long>> rowTopValues(numRows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> rowTopColumns(numRows, vector<int>(3, -1));\n\n        for (int row = 0; row < numRows; ++row) {\n            vector<pair<long long, int>> columnValues;\n            for (int col = 0; col < numCols; ++col) {\n                columnValues.emplace_back(board[row][col], col);\n            }\n            sort(columnValues.rbegin(), columnValues.rend());\n\n            for (int top = 0; top < 3 && top < numCols; ++top) {\n                rowTopValues[row][top] = columnValues[top].first;\n                rowTopColumns[row][top] = columnValues[top].second;\n            }\n        }\n\n        for (int row1 = 0; row1 < numRows; ++row1) {\n            for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n                for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n                    for (int top1 = 0; top1 < 3; ++top1) {\n                        for (int top2 = 0; top2 < 3; ++top2) {\n                            if (rowTopColumns[row2][top2] == rowTopColumns[row1][top1]) continue;\n                            for (int top3 = 0; top3 < 3; ++top3) {\n                                if (rowTopColumns[row3][top3] == rowTopColumns[row1][top1] || rowTopColumns[row3][top3] == rowTopColumns[row2][top2]) continue;\n\n                                long long currentSum = rowTopValues[row1][top1] + rowTopValues[row2][top2] + rowTopValues[row3][top3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910367",
    "subm_id": "1359227757"
}