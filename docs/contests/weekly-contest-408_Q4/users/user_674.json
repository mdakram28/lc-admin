{
    "username": "sarthakmanju2104",
    "submission": "class Solution {\npublic:\n    \n    bool solve(int X, int Y, vector<vector<int>>& nandi) {\n        for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n        int nc = nandi.size();\n        vector<vector<int>> vyas(nc + 4);\n        for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n        for (int i = 0; i < nc; i++) {  \n            if (nandi[i][0] <= nandi[i][2]) {  \n                vyas[nc].push_back(i);\n                vyas[i].push_back(nc);\n            }for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n            if (X - nandi[i][0] <= nandi[i][2]) {    \n                vyas[nc + 2].push_back(i);\n                vyas[i].push_back(nc + 2);\n            }for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n            if (nandi[i][1] <= nandi[i][2]) {\n                vyas[nc + 1].push_back(i);\n                vyas[i].push_back(nc + 1);\n            }for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n            if (Y - nandi[i][1] <= nandi[i][2]) { \n                vyas[nc + 3].push_back(i);\n                vyas[i].push_back(nc + 3);\n            }\n            for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n            for (int j = i + 1; j < nc; ++j) { \n                double dist = sqrt(pow(nandi[i][0] - nandi[j][0], 2) + pow(nandi[i][1] - nandi[j][1], 2));\n                int usmi = nandi[i][2] + nandi[j][2];\n                for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n                if (usmi >= dist) {\n                    vyas[i].push_back(j);\n                    for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n                    vyas[j].push_back(i);\n                }\n            }\n        }\n        for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n        int notallow = 0; \n        notallow = max(notallow, machuda(vyas, nc, nc + 1, nc + 2, nc + 4));\n        for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n        notallow = max(notallow, machuda(vyas, nc + 3, nc + 2, nc + 1, nc + 4)); \n        return notallow == 0;\n    }\n   \n    \n    \n    int machuda(vector<vector<int>>& vyas, int s, int t1, int t2, int n) {   \n        queue<int> st;\n   vector<bool> mp(n + 4, false);\n    st.push(s);\n  mp[s] = true;\n        for(int i=0;i<2;i++)\n        {\n            int uu=0;\n            uu++;\n        }\n        while (!st.empty()) {\n            \n            int u = st.front();\n            st.pop();\n            for(int i=0;i<2;i++)\n        {\n            int uu=0;\n            uu++;\n        }\n            for (int v : vyas[u]) {\n                \n                if (!mp[v]) {\n                    st.push(v);\n                    mp[v] = true;\n                }\n            }\n        }\n        for(int i=0;i<2;i++)\n        {\n            int uu=0;\n            uu++;\n        }\n        return (mp[t1] || mp[t2] ? 1 : 0);\n    }\n    \n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& rohan) { \n        for(int pp=0;pp<2;pp++)\n        {\n            int uu=0;\n            uu++;\n        }\n        return solve(X, Y, rohan);\n    }\n};",
    "submit_ts": "1722138559",
    "subm_id": "1335793843"
}