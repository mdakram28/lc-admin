{
    "username": "lokesh_72",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>> &req)\n    {\n        int MOD = 1e9 + 7;\n        vector<vector<long long>> dp(n + 1, vector<long long>(400 + 1, 0));\n        unordered_map<int, int> mp;\n        for (int i = 0; i < req.size(); i++)\n        {\n            int x = req[i][0];\n            mp[x + 1] = req[i][1];\n        }\n        dp[0][0] = 1;\n        for (int i = 1; i < n + 1; i++)\n        {\n            for (int j = 0; j < 400 + 1; j++)\n            {\n                for (int k = 0; k <= i - 1; k++)\n                {\n                    int y = j - k;\n                    if (y >= 0)\n                        dp[i][j] = (dp[i - 1][y] + dp[i][j]) % MOD;\n                }\n            }\n            if (mp.find(i) != mp.end())\n            {\n                int zoro = mp[i];\n                for (int p = 0; p < 400 + 1; p++)\n                {\n                    if (p != zoro)\n                    {\n                        dp[i][p] = 0;\n                    }\n                }\n            }\n        }\n        long long res = 0;\n        // todo  - as we have to answer for n size\n        for (int i = 0; i < dp[n].size(); i++)\n        {\n            res = (res + dp[n][i]) % MOD;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719071172.0
}