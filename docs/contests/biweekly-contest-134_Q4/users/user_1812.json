{
    "username": "LJHWD",
    "submission": "class Solution {\n    vector<vector<int>> d;\n    int k;\npublic:\n    int checkl(int target) {\n        int l = 0, r = target, ret = -1;\n        while(l <= r) {\n            int mid = (l + r) >> 1, temp = 0;\n            for(int i = 0; i < 32; ++i) {\n                if(d[target][i] - d[mid][i] == (target - mid)) {\n                    temp |= (1 << i);\n                } \n            }\n            if(temp >= k) {\n                r = mid - 1;\n                ret = mid;\n            }\n            else l = mid + 1;\n        }\n        return ret;\n    }\n\n    int checkr(int target) {\n        int l = 0, r = target, ret = target;\n        while(l <= r) {\n            int mid = (l + r) >> 1, temp = 0;\n            for(int i = 0; i < 32; ++i) {\n                if(d[target][i] - d[mid][i] == (target - mid)) {\n                    temp |= (1 << i);\n                } \n            }\n            if(temp > k) {\n                r = mid - 1;\n                ret = mid;\n            }\n            else l = mid + 1;\n        }\n        return ret;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        this->k = k;\n        d = vector<vector<int>>(n + 1, vector<int>(32));\n        for(int i = 0; i < n; ++i) {\n            d[i + 1] = d[i];\n            for(int j = 0; j < 31; ++j) {\n                if(nums[i] & (1 << j)) d[i + 1][j]++;\n            }\n            int l = checkl(i + 1), r = checkr(i + 1), temp = 0;\n            if(l != - 1 && r > l) {\n                for(int j = 0; j < 32; ++j) {\n                    if(d[i + 1][j] - d[l][j] == (i + 1 - l)) {\n                        cout<<j<<\"!!\";\n                        temp |= (1 << j);\n                    } \n                }\n                if(temp == k) {\n                    ans += r - l;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281320",
    "subm_id": "544575319"
}