{
    "username": "luluowls",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(100000)\n        if k == 1:\n            return \"9\" * n\n        elif k == 2:\n            if n == 1:\n                return \"8\"\n            else:\n                return \"8\" + \"9\" * (n-2) + \"8\"\n        elif k == 3:\n            return \"9\" * n\n        elif k == 4:\n            if n >= 4:\n                return \"88\" + \"9\" * (n-4) + \"88\"\n            else:\n                return \"8\" * n\n        elif k == 5:\n            if n == 1:\n                return \"5\"\n            else:\n                return \"5\" + \"9\" * (n-2) + \"5\"\n        elif k == 6:\n            if n == 1:\n                return \"6\"\n            elif n == 2:\n                return \"66\"\n            elif n % 2 == 1:\n                half = (n-3) // 2\n                return \"8\" + \"9\" * half + \"8\" + \"9\" * half + \"8\"\n            else:\n                half = (n-4) // 2\n                return \"8\" + \"9\" * half + \"77\" + \"9\" * half + \"8\"\n        elif k == 7:\n            if n % 6 == 0:\n                return \"999999\" * (n // 6)\n            elif n == 1:\n                return \"7\"\n            elif n == 2:\n                return \"77\"\n            elif n % 2 == 1:\n                half = (n-1) // 2\n                mod = int(\"9\" * half + \"0\" + \"9\" * half) % 7\n                left = 7 - mod\n                start = (10 ** half) % 7\n                largest = (9 * start) % 7\n                curr = 9\n                while largest != left:\n                    largest -= start\n                    if largest <= 0:\n                        largest += 7\n                    curr -= 1\n                return \"9\" * half + str(curr) + \"9\" * half\n            else:\n                half = (n-2) // 2\n                mod = int(\"9\" * half + \"00\" + \"9\" * half) % 7\n                left = 7 - mod\n                start = (10 ** half + 10 ** (half + 1)) % 7\n                largest = (9 * start) % 7\n                curr = 9\n                while largest != left:\n                    largest -= start\n                    if largest <= 0:\n                        largest += 7\n                    curr -= 1\n                return \"9\" * half + str(curr) * 2 + \"9\" * half\n        elif k == 8:\n            if n >= 6:\n                return \"888\" + \"9\" * (n-6) + \"888\"\n            else:\n                return \"8\" * n\n        elif k == 9:\n            return \"9\" * n\n        ",
    "submit_ts": "1723951686",
    "subm_id": "1359777615"
}