{
    "username": "VimT",
    "submission": "use std::collections::BTreeSet;\nimpl Solution {\n    pub fn shortest_distance_after_queries(n: i32, queries: Vec<Vec<i32>>) -> Vec<i32> {\n        let mut c: BTreeSet<i32> = (0..n).collect();\n        queries.into_iter().map(|q| {\n            let (u, v) = (q[0], q[1]);\n            for val in c.range(u + 1..v).copied().collect::<Vec<i32>>() {\n                c.remove(&val);\n            }\n            (c.len() - 1) as i32\n        }).collect()\n    }\n}",
    "submit_ts": "1722739779",
    "subm_id": "552326932"
}