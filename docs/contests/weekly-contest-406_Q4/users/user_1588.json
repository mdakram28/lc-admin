{
    "username": "Shubham_Tiwari55",
    "submission": "class Solution {\npublic:\n    long long f(int m, int n, vector<int> &h, vector<int> &v){\n       sort(h.begin(), h.end());\n        sort(v.begin(), v.end());\n        long long hc = 1; \n        long long vc = 1;\n        int i = h.size() - 1;\n        int j = v.size() - 1;\n        long long ans = 0;\n        while (i >= 0 && j >= 0) {\n            if (h[i] > v[j]) {\n                ans += static_cast<long long>(h[i]) * hc;\n                i--;\n                vc++;\n            } else {\n                ans += static_cast<long long>(v[j]) * vc;\n                j--;\n                hc++;\n            }\n        }\n        while (i >= 0) {\n            ans += static_cast<long long>(h[i]) * hc;\n            i--;\n            vc++;\n        }\n        while (j >= 0) {\n            ans += static_cast<long long>(v[j]) * vc;\n            j--;\n            hc++;\n        }\n        \n        return ans;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        return f(m, n, horizontalCut, verticalCut);\n    }\n};",
    "submit_ts": "1720926044",
    "subm_id": "1320274232"
}