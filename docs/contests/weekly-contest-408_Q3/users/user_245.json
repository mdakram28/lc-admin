{
    "username": "longvatrong111",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n\n        int count = 0;\n        vector<int> zeroIdx;\n        zeroIdx.push_back(-1);\n        for (int i = 0; i < n; ++i) {\n            if (s[i] == '0') zeroIdx.push_back(i);\n            \n            int m = zeroIdx.size();\n            int num = 0;\n            int idx = i;\n            int prevIdx = -1;\n            for (int j = m - 1; j >= 0; --j) {\n                int val = num * num;\n                if (val > i + 1) break;\n                prevIdx = idx;\n                idx = zeroIdx[j];\n                int numOne = i - idx - num;\n\n                if (numOne >= val) {\n                    count += std::min(numOne - val + 1, prevIdx - idx);\n                }\n\n                num++;\n            }\n        }\n        return count;\n    }\n};",
    "submit_ts": "1722138307",
    "subm_id": "1335787356"
}