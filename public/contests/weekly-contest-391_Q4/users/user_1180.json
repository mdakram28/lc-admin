{
    "username": "kk1kk2",
    "submission": "class Solution {\n    public int calc(int a, int b, int c, int d)\n    {\n        // System.out.println(a + \" \"+b+ \" \"+c+ \" \"+ d);\n        return Math.max(a - b, c -d );\n    }\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        int sum[][] = new int[n][2];\n        int diff[][] = new int[n][2];\n                \n        for(int i=0;i<n; i++)\n        {\n            sum [i][0] = points[i][0] + points[i][1];\n            diff [i][0] = points[i][0] - points[i][1];\n            sum [i][1] = i;\n            diff [i][1] = i;\n            \n        }\n        Arrays.sort(sum, (a,b)->Integer.compare(a[0],b[0]));\n        Arrays.sort(diff, (a,b)->Integer.compare(a[0],b[0]));\n        \n        //  for(int i=0;i<n; i++)\n        // {\n        //      System.out.println(diff[i][0]);\n        //  }\n        int ans = calc(sum[n-2][0], sum[0][0], sum[n-1][1]==diff[n-1][1]?diff[n-2][0]:diff[n-1][0], \n                                        sum[n-1][1]==diff[0][1]?diff[1][0]:diff[0][0]);\n        \n        ans = Math.min(ans,\n                       calc(sum[n-1][0], sum[1][0], sum[0][1]==diff[n-1][1]?diff[n-2][0]:diff[n-1][0], \n                                        sum[0][1]==diff[0][1]?diff[1][0]:diff[0][0])\n                      );\n        ans = Math.min(ans,\n                       calc(diff[n-2][0], diff[0][0], diff[n-1][1]==sum[n-1][1]?sum[n-2][0]:sum[n-1][0], \n                                        diff[n-1][1]==sum[0][1]?sum[1][0]:sum[0][0])\n                      );\n        \n        ans = Math.min(ans,\n                       calc(diff[n-1][0], diff[1][0], diff[0][1]==sum[n-1][1]?sum[n-2][0]:sum[n-1][0], \n                                        diff[0][1]==sum[0][1]?sum[1][0]:sum[0][0])\n                      );\n            \n        return ans;\n        \n    }\n}"
}