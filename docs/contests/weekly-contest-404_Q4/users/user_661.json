{
    "username": "ankushtyagi7777",
    "submission": "class Solution {\npublic:\n    \n    vector<vector<int>> adj1;\n    vector<vector<int>> adj2;\n    vector<int> depth1;\n    vector<int> depth2;\n    vector<int> vis;\n    \n    void dfs1(int node,int no){\n        depth1[node]=no;\n        vis[node]=1;\n        for(auto it:adj1[node]){\n            if(vis[it]) continue;\n            dfs1(it,no+1);\n        }\n    }\n    \n    void dfs2(int node,int no){\n        depth2[node]=no;\n        vis[node]=1;\n        for(auto it:adj2[node]){\n            if(vis[it]) continue;\n            dfs2(it,no+1);\n        }\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n=e1.size()+1;\n        int m=e2.size()+1;\n        adj1.clear();\n        adj1.resize(n,vector<int>());\n        \n        adj2.clear();\n        adj2.resize(m,vector<int>());\n        \n        depth1.clear();\n        depth1.resize(n);\n        \n        depth2.clear();\n        depth2.resize(m);\n        \n        for(int i=0;i<n-1;i++){\n            adj1[e1[i][0]].push_back(e1[i][1]);\n            adj1[e1[i][1]].push_back(e1[i][0]);\n        }\n        \n        for(int i=0;i<m-1;i++){\n            adj2[e2[i][0]].push_back(e2[i][1]);\n            adj2[e2[i][1]].push_back(e2[i][0]);\n        }\n        \n        vis.clear();\n        vis.resize(max(n,m),0);\n        int v=max(n,m);\n        \n        dfs1(0,1);\n        int val=0;\n        for(int i=0;i<n;i++){\n            val=max(val,depth1[i]);\n        }\n        int ind=0;\n        for(int i=0;i<n;i++){\n            if(depth1[i]==val){\n                ind=i;\n                break;\n            }\n        }\n        for(int i=0;i<n;i++) depth1[i]=0;\n        for(int i=0;i<v;i++) vis[i]=0;\n        \n        dfs1(ind,0);\n        val=0;\n        for(int i=0;i<n;i++){\n            val=max(val,depth1[i]);\n        }\n        for(int i=0;i<n;i++){\n            depth1[i]=max(depth1[i],val-depth1[i]);\n        }\n        \n        for(int i=0;i<v;i++) vis[i]=0;\n        \n        dfs2(0,1);\n        val=0;\n        for(int i=0;i<m;i++){\n            val=max(val,depth2[i]);\n        }\n        ind=0;\n        for(int i=0;i<m;i++){\n            if(depth2[i]==val){\n                ind=i;\n                break;\n            }\n        }\n        for(int i=0;i<m;i++) depth2[i]=0;\n        for(int i=0;i<v;i++) vis[i]=0;\n        \n        dfs2(ind,0);\n        val=0;\n        for(int i=0;i<m;i++){\n            val=max(val,depth2[i]);\n        }\n        for(int i=0;i<m;i++){\n            depth2[i]=max(depth2[i],val-depth2[i]);\n        }\n        \n        int fans=1e9;\n        // for(int i=0;i<n;i++) cout<<depth1[i]<<\" \";\n        // cout<<endl;\n        // for(int i=0;i<m;i++) cout<<depth2[i]<<\" \";\n        // cout<<endl;\n        // for(int i=0;i<n;i++){\n        //     for(int j=0;j<m;j++){\n        //         fans=min(fans,depth1[i]+depth2[j]+1);\n        //     }\n        // }\n        int v2=0,v3=0,v4=1e9,v5=1e9;\n        for(int i=0;i<n;i++) v2=max(v2,depth1[i]),v4=min(v4,depth1[i]);\n        for(int i=0;i<m;i++) v3=max(v3,depth2[i]),v5=min(v5,depth2[i]);\n        fans=v4+v5+1;\n        fans=max(v2,max(fans,v3));\n        \n        return fans;\n    }\n};",
    "submit_ts": 1719718554.0
}