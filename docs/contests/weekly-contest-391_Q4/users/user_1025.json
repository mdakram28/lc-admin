{
    "username": "plusline",
    "submission": "class compFirst {\npublic:\n    bool operator()(pair<int,int>& a, pair<int,int>& b)    \n    {\n        return a.first<b.first;\n    }\n};\n\nclass compSecond {\npublic:\n    bool operator()(pair<int,int>& a, pair<int,int>& b)    \n    {\n        return a.second<b.second;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int,int>> dis;\n        for(int i=0;i<points.size();i++)\n        {\n            dis.push_back({points[i][0]+points[i][1], points[i][0]-points[i][1]});\n        }\n        sort(dis.begin(),dis.end(),compFirst());\n        //remove first\n        int distance1 = helpFirst(dis,1,dis.size()-1);\n        //remove last \n        int distance2 = helpFirst(dis,0,dis.size()-2);\n        \n        sort(dis.begin(),dis.end(),compSecond());\n        //remove first\n        int distance3 = helpSecond(dis,1,dis.size()-1);\n        //remove last \n        int distance4 = helpSecond(dis,0,dis.size()-2);\n        //cout<<dis.back().first<<\" \"<<dis.back().second<<endl;\n        \n        //cout<<distance1<<\" \"<<distance2<<\" \"<<distance3<<\" \"<<distance4<<endl;\n        return min(min(distance1,distance2),min(distance3,distance4));\n        \n    }\n    int helpFirst(vector<pair<int,int>>& dis, int l, int r)\n    {\n        int distance = dis[r].first - dis[l].first;\n        int large = -1e9;\n        int small = 1e9;\n        for(int i=l;i<=r;i++)\n        {\n            large = max(large,dis[i].second);\n            small = min(small,dis[i].second);\n        }\n        //cout<<distance<<\": \"<<large<<\" \"<<small<<endl;\n        distance = max(distance,large-small);\n        return distance;\n    }\n    int helpSecond(vector<pair<int,int>>& dis, int l, int r)\n    {\n        int distance = dis[r].second - dis[l].second;\n        int large = -1e9;\n        int small = 1e9;\n        for(int i=l;i<=r;i++)\n        {\n            large = max(large,dis[i].first);\n            small = min(small,dis[i].first);\n        }\n        //cout<<distance<<\": \"<<large<<\" \"<<small<<endl;\n        distance = max(distance,large-small);\n        return distance;\n    }\n};"
}