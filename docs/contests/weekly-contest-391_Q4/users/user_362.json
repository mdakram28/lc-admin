{
    "username": "Code-O-Maniac",
    "submission": "class Solution {\n    int gogo(multiset<int>& sx, multiset<int>& sy) {\n        int ans1 = *(sx.rbegin()) - *(sx.begin());\n        int ans2 = *(sy.rbegin()) - *(sy.begin());\n        \n        return max(ans1, ans2);\n    }\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> sx;\n        multiset<int> sy;\n        \n        for(auto &x:points) {\n            int newX = x[0] + x[1];\n            int newY = x[0] - x[1];\n            \n            sx.insert(newX);\n            sy.insert(newY);\n            \n            x[0] = newX;\n            x[1] = newY;\n        }\n        \n        int ans = INT_MAX;\n        for(auto x:points) {\n            sx.erase(sx.find(x[0]));\n            sy.erase(sy.find(x[1]));\n            \n            ans = min(ans, gogo(sx, sy));\n            \n            sx.insert(x[0]);\n            sy.insert(x[1]);\n        }\n        \n        return ans;\n    }\n};\n\n// 1 and 2\n// 1 and x\n// 2 and y\n// 4 and 5"
}