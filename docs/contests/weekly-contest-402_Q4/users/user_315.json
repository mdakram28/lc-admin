{
    "username": "yc-li",
    "submission": "    \n\nclass Solution:\n    def countOfPeaks(self, a: List[int], q: List[List[int]]) -> List[int]:\n        n = len(a)\n        a = [0] + a\n        b = [0] * (n + 5)\n        c = [0] * (n + 5)\n        def lowbit(x):\n            return x & -x\n\n        def getsum(x):\n            ans = 0\n            while x > 0:\n                ans = ans + c[x]\n                x = x - lowbit(x)\n            return ans\n\n        def add(x, k):\n            while x <= n:  # \u4e0d\u80fd\u8d8a\u754c\n                c[x] = c[x] + k\n                x = x + lowbit(x)    \n        for i in range(2, n):\n            if a[i] > a[i - 1] and a[i] > a[i + 1]:\n                b[i] = 1\n                add(i, 1)\n        \n        ans = []\n        \n        for t, x, y in q:\n            \n            if t == 2:\n                x += 1\n                a[x] = y   \n                \n                for i in (x - 1, x, x + 1):\n                    if i <= 1 or i >= n:\n                        continue\n                    \n                    if a[i] > a[i - 1] and a[i] > a[i + 1]:\n                        if b[i] == 0:\n                            b[i] = 1\n                            add(i, 1)\n                    else:\n                        if b[i] == 1:\n                            b[i] = 0\n                            add(i, -1)\n                        \n            \n            else:\n                x += 1\n                y += 1\n                \n                \n                y -= 1\n                x += 1\n                if x <= y:\n                    ans.append(getsum(y) - getsum(x - 1))\n                else:\n                    ans.append(0)\n            \n            # print(a[1:])\n            # print([getsum(i) - getsum(i-1) for i in range(1, n + 1)])\n        \n        return ans\n                \n                \n            ",
    "submit_ts": 1718507178.0
}