{
    "username": "bilguunzen",
    "submission": "struct TrieNode {\n    TrieNode* childNode[26];\n    int cost;\n    TrieNode()\n    {\n        cost = -1;\n        for (int i = 0; i < 26; i++) {\n            childNode[i] = NULL;\n        }\n    }\n};\n\nvoid insert_key(TrieNode* root, string& key, int cost)\n{\n    TrieNode* currentNode = root;\n    for (auto c : key) {\n        if (currentNode->childNode[c - 'a'] == NULL) {\n            TrieNode* newNode = new TrieNode();\n            currentNode->childNode[c - 'a'] = newNode;\n        }\n        currentNode = currentNode->childNode[c - 'a'];\n    }\n    if (currentNode->cost != -1) {\n        currentNode->cost = min(currentNode->cost, cost);\n    } else {\n        currentNode->cost = cost;\n    }\n}\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        int n = target.size();\n        vector<int> visited(n + 1, 1e9 + 10);\n        for (int i = 0; i < words.size(); i++) {\n            insert_key(root, words[i], costs[i]);\n        }\n        queue<pair<int, int>> q;\n        q.push({0, 0});\n        visited[0] = 0;\n        while (!q.empty()) {\n            int ith = q.front().first;\n            int ccost = q.front().second;\n            q.pop();\n            TrieNode *curr = root;\n            if (visited[ith] < ccost) {\n                continue;\n            }\n            for (int i = ith; i < n; i++) {\n                if (curr->childNode[target[i] - 'a'] == NULL) {\n                    break;\n                }\n                curr = curr->childNode[target[i] - 'a'];\n                if (curr->cost != -1) {\n                    if (visited[i + 1] > curr->cost + ccost) {\n                        q.push({i + 1, ccost + curr->cost});\n                        visited[i + 1] = ccost + curr->cost;\n                    }\n                }\n            }\n        }\n        if (visited[n] == 1e9 + 10) {\n            return -1;\n        }\n        return visited[n];\n    }\n};",
    "submit_ts": "1720322754",
    "subm_id": "1312358261"
}