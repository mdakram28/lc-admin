{
    "username": "Mhmd_Bakr",
    "submission": "class Solution {\npublic:\n    #define vct vector\n    struct and_s {\n        const int def = (1ll << 31) - 1;\n        inline int op(const int& l, const int& r) { return l & r; }\n    };\n    template<typename seg_t>\n    struct segtree\n    {\n        int n = 0;\n        vct<int>tree;\n        seg_t func;\n        segtree(const vct<int>& arr) {\n            n = arr.size();\n            tree.assign(n * 4, func.def);\n            build(1, 1, n, arr);\n        }\n        void build(int node, int L, int R, const vct<int>& arr) {\n            if (L == R) {\n                tree[node] = arr[L - 1];\n                return;\n            }\n            int mid = (L + R) / 2;\n            build(2 * node, L, mid, arr);\n            build(2 * node + 1, mid + 1, R, arr);\n            tree[node] = func.op(tree[2 * node], tree[2 * node + 1]);\n        }\n        int query(int L, int R) {\n            return query(1, 1, n, L, R);\n        }\n        int query(int node, int L, int R, int l, int r) {\n            if (R < l || r < L)\treturn func.def;\n            if (l <= L && R <= r) return tree[node];\n            int mid = (L + R) / 2;\n            return func.op(query(2 * node, L, mid, l, r), query(2 * node + 1, mid + 1, R, l, r));\n        }\n        void update(int ind, int val) {\n            update(1, 1, n, ind, val);\n        }\n        void update(int node, int L, int R, int ind, int val) {\n            if (ind<L || ind>R) return;\n            if (L == R) {\n                tree[node] = val;\n                return;\n            }\n            int mid = (L + R) / 2;\n            update(2 * node, L, mid, ind, val);\n            update(2 * node + 1, mid + 1, R, ind, val);\n            tree[node] = func.op(tree[2 * node], tree[2 * node + 1]);\n        }\n    };\n    long long countSubarrays(vector<int>& a, int k) {\n        long long ans = 0;\n        int n = a.size();\n        segtree<and_s>seg(a);\n        for(int i = 0;i<n;i++){\n            int l = i,r=n-1;\n            int L=-1,R=-1;\n            while(l<=r){\n                int m = (l+r)/2;\n                int v = seg.query(i+1,m+1);\n                if(v==k) L=m,r=m-1;\n                else if(v<k) r=m-1;\n                else l=m+1;\n            }\n            l=i,r=n-1;\n            while(l<=r){\n                int m = (l+r)/2;\n                int v = seg.query(i+1,m+1);\n                if(v==k) R=m,l=m+1;\n                else if(v<k) r=m-1;\n                else l=m+1;\n            }\n            if(~L) ans+=R-L+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280771",
    "subm_id": "1311801486"
}