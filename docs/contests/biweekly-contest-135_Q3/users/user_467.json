{
    "username": "ke-er-c",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        // gap : cnt\n        unordered_map<int, int> mp;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; ++i) {\n            mp[abs(nums[i] - nums[n - i - 1])]++;\n        }\n        int ans = INT_MAX;\n        for (auto& p : mp) {\n            int gap = p.first;\n            if (n / 2 - mp[gap] >= ans) {\n                continue;\n            }\n            int tmp = 0;\n            // cout << \"gap = \" << gap << endl;\n            for (int i = 0; i < n / 2; ++i) {\n                int x = nums[i], y = nums[n - i - 1];\n                if (abs(x - y) == gap) {\n\n                } else if (x + gap > k && x - gap < 0 && y + gap > k &&\n                           y - gap < 0) {\n                    tmp += 2;\n                    // cout << \"i = \" << i << endl;\n                } else {\n                    tmp += 1;\n                    // cout << \"i = \" << i << endl;\n                }\n            }\n            ans = min(ans, tmp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488187",
    "subm_id": "548313257"
}