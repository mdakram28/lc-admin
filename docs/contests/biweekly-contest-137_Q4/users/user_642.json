{
    "username": "xfqz",
    "submission": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\n\nclass Solution {\n    public long maximumValueSum(int[][] board) {\n\t\tlong ans = Long.MIN_VALUE;\n\t\tint m = board.length, n = board[0].length;\n\t\tint[][] data = new int[m][3];\n\t\tArrayList<int[]> maxCol = init(data, board);\n\t\tfor (int r1 = 0; r1 < m; r1++) {\n\t\t\tfor (int r2 = r1+1; r2 < m; r2++) {\n\t\t\t\tfor (int c1 : data[r1]) {\n\t\t\t\t\tfor (int c2 : data[r2]) {\n\t\t\t\t\t\tif (c1 == c2) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (int[] e : maxCol) {\n\t\t\t\t\t\t\tint r3 = e[0], c3 = e[1];\n\t\t\t\t\t\t\tif (r3 != r1 && r3 != r2 && c3 != c1 && c3 != c2) {\n\t\t\t\t\t\t\t\tlong tmp = board[r1][c1];\n\t\t\t\t\t\t\t\ttmp += board[r2][c2];\n\t\t\t\t\t\t\t\ttmp += board[r3][c3];\n\t\t\t\t\t\t\t\tans = Math.max(ans, tmp);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ans;\n    }\n\n\tprivate ArrayList<int[]> init(int[][] data, int[][] board) {\n\t\tint m = board.length, n = board[0].length;\n\t\tint[] max1 = new int[n], max2 = new int[n];\n\t\tArrays.fill(max1, -1);\n\t\tArrays.fill(max2, -1);\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tint[] old = board[i];\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tlist.add(j);\n\t\t\t\tCollections.sort(list, (x,y)->old[y]-old[x]);\n\t\t\t\tif (list.size() > 3) {\n\t\t\t\t\tlist.remove(3);\n\t\t\t\t}\n\t\t\t}\n\t\t\tObject[] arr = list.toArray();\n\t\t\tdata[i][0] = (int) arr[0];\n\t\t\tdata[i][1] = (int) arr[1];\n\t\t\tdata[i][2] = (int) arr[2];\n\t\t\t\n\t\t\tint col = data[i][0];\n\t\t\tif (max1[col] == -1 || (board[i][col] > board[max1[col]][max2[col]])) {\n\t\t\t\tmax1[col] = i;\n\t\t\t\tmax2[col] = col;\n\t\t\t}\n\t\t\tcol = data[i][1];\n\t\t\tif (max1[col] == -1 || (board[i][col] > board[max1[col]][max2[col]])) {\n\t\t\t\tmax1[col] = i;\n\t\t\t\tmax2[col] = col;\n\t\t\t}\n\t\t\tcol = data[i][2];\n\t\t\tif (max1[col] == -1 || (board[i][col] > board[max1[col]][max2[col]])) {\n\t\t\t\tmax1[col] = i;\n\t\t\t\tmax2[col] = col;\n\t\t\t}\n\t\t}\n\t\t\n\t\tArrayList<int[]> maxCol = new ArrayList<int[]>();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (max1[i] != -1) {\n\t\t\t\tmaxCol.add(new int[] {max1[i], max2[i]});\n\t\t\t\tCollections.sort(maxCol, (x,y)->board[y[0]][y[1]]-board[x[0]][x[1]]);\n\t\t\t\tif (maxCol.size() > 9) {\n\t\t\t\t\tmaxCol.remove(9);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxCol;\n\t}\n}",
    "submit_ts": "1723909346",
    "subm_id": "556335758"
}