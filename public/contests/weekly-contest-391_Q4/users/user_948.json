{
    "username": "hope_09",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        set<pair<int,int>> v, v1;\n \n        for (int i = 0; i < n; i++) {\n            pair<int,int>temp;\n            temp={points[i][0] + points[i][1],i};\n            v.insert(temp);\n            temp.first= points[i][0] - points[i][1];\n            v1.insert(temp);\n        }\n        set<int>res;\n        for(int i=0;i<n;i++){\n            pair<int,int>temp,temp2;\n            temp={points[i][0] + points[i][1],i};\n            v.erase(temp);\n            temp2.first= points[i][0] - points[i][1];\n            temp2.second=i;\n            v1.erase(temp2);\n            // cout<<points[v.rbegin()->second][0]<<\" \"<<points[v.rbegin()->second][1]<<endl;\n            // cout<<points[v.begin()->second][0]<<\" \"<<points[v.begin()->second][1]<<endl;\n            // cout<<points[v1.rbegin()->second][0]<<\" \"<<points[v1.rbegin()->second][1]<<endl;\n            // cout<<points[v1.begin()->second][0]<<\" \"<<points[v1.begin()->second][1]<<endl<<endl;;\n            res.insert(max(v.rbegin()->first - v.begin()->first, v1.rbegin()->first - v1.begin()->first));\n            v.insert(temp);\n            v1.insert(temp2);\n        }\n        // cout<<endl;\n        return *res.begin();\n    }\n};"
}