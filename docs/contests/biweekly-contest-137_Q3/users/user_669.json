{
    "username": "Xiaoyuan Wang",
    "submission": "class Solution {\n\nprivate data class Cell(val row: Int, val col: Int, val value: Int)\n\nfun maximumValueSum(board: Array<IntArray>): Long {\n\n    val m = board.size\n    val n = board[0].size\n\n    val cells = mutableListOf<Cell>()\n    for (i in 0 until m) {\n        for (j in 0 until n) {\n            cells.add(Cell(i, j, board[i][j]))\n        }\n    }\n\n    cells.sortByDescending { it.value }\n\n    var ans = Long.MIN_VALUE\n    val L = minOf(100, cells.size)\n\n    for (i in 0 until L) {\n        val cell1 = cells[i]\n\n        for (j in 0 until L) {\n            val cell2 = cells[j]\n            if (cell1.row == cell2.row || cell1.col == cell2.col) {\n                continue\n            }\n\n            for (k in 0 until L) {\n                val cell3 = cells[k]\n                if (cell1.row == cell3.row || cell1.col == cell3.col || cell2.row == cell3.row || cell2.col == cell3.col) {\n                    continue\n                }\n\n                ans = maxOf(\n                    ans,\n                    0L + cell1.value + cell2.value + cell3.value\n                )\n            }\n        }\n    }\n\n\n    return ans\n}\n\nfun main() {\n    // Input: board = [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\n    println(maximumValueSum(\n        arrayOf(\n            intArrayOf(-3, 1, 1, 1),\n            intArrayOf(-3, 1, -3, 1),\n            intArrayOf(-3, 2, 1, 1)\n        )\n    ))\n\n}\n\n}",
    "submit_ts": "1723906574",
    "subm_id": "1359060462"
}