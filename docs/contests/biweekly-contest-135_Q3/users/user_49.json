{
    "username": "kind-agnesipe9",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        HashMap<Integer,ArrayList<Integer>> hm=new HashMap<>();\n        ArrayList<Integer> total=new ArrayList<>();\n        for (int i = 0; i < nums.length/2; i++) {\n            int a=nums[i];\n            int b=nums[nums.length-1-i];\n            int key=Math.abs(a-b);\n            int max=Integer.max(k-Integer.min(a,b),Integer.max(a,b));\n            if(!hm.containsKey(key)){\n                hm.put(key,new ArrayList<>());\n            }\n            hm.get(key).add(max);\n            total.add(max);\n        }\n        Collections.sort(total);\n        int ans=Integer.MAX_VALUE;\n        for (Map.Entry<Integer, ArrayList<Integer>> entry : hm.entrySet()) {\n            Collections.sort(entry.getValue());\n            int totalG=countG(total,entry.getKey());\n            int curG=countG(entry.getValue(),entry.getKey());\n            int temp=totalG-curG+ nums.length/2-entry.getValue().size();\n            ans=Integer.min(ans,temp);\n        }\n        return ans;\n    }\n    public int binary(ArrayList<Integer> list,int target){\n        int low=0;\n        int high=list.size()-1;\n        while (low<=high){\n            int mid=(low+high)>>1;\n            if(list.get(mid)<target){\n                low=mid+1;\n            }else {\n                high=mid-1;\n            }\n        }\n        return high;\n    }\n    public int countG(ArrayList<Integer> list,int target){\n        int index=binary(list,target);\n        return index+1;\n    }\n}",
    "submit_ts": "1721488287",
    "subm_id": "548313712"
}