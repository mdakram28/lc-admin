{
    "username": "svxvdp",
    "submission": "class Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        L = []\n        ans = []\n        t = n - 1\n        for u, v in queries:\n            lo = 0\n            hi = len(L)\n            while lo < hi:\n                mid = (lo + hi) // 2\n                if u >= L[mid][1]:\n                    lo = mid + 1\n                else:\n                    hi = mid\n\n            if lo == len(L):\n                L.append((u, v))\n                t -= v - u - 1\n                ans.append(t)\n\n            elif L[lo][0] <= u and L[lo][1] >= v:\n                ans.append(t)\n            \n            else:\n                i = lo\n\n                while i < len(L) and L[i][1] <= v:\n                    u2, v2 = L.pop(i)\n                    t += v2 - u2 - 1\n                \n                L.insert(lo, (u, v))\n                t -= v - u - 1\n                ans.append(t)\n\n\n        return ans\n    \n    ",
    "submit_ts": "1722742411",
    "subm_id": "1343768355"
}