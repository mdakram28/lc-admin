{
    "username": "holer",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int n = nums.size();\n        vector<int> trans, neg;\n        neg.push_back(0);\n        for (int i = 0; i < n; ++i) {\n            trans.push_back(target[i] - nums[i]);\n            if (i && trans[i] && trans[i - 1] && (trans[i] > 0 == trans[i - 1] > 0)) {\n                int diff = trans[i] - trans[i - 1];\n                if (trans[i] < 0) neg.push_back(diff < 0 ? abs(diff) : 0);\n                else neg.push_back(diff > 0 ? diff : 0);\n                // neg.push_back(trans[i] - trans[i - 1]);\n            } else if (trans[i]) neg.push_back(abs(trans[i]));\n        }\n        // for (auto& x : trans)\n        //     cout << x << ' ';\n        for (auto& x : neg) {\n            // cout << x << ' ';\n            res += x;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721531345",
    "subm_id": "1327958574"
}