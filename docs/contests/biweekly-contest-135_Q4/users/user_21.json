{
    "username": "none-31",
    "submission": "func maximumScore(grid [][]int) int64 {\n\tn := len(grid)\n\tproc := func(a int) int {\n\t\tif a < 0 {\n\t\t\treturn 2\n\t\t}\n\t\tif a > 0 {\n\t\t\treturn 1\n\t\t}\n\t\treturn 0\n\t}\n\tdfsCache := make([][][]int, n)\n\tfor i := range dfsCache {\n\t\tdfsCache[i] = make([][]int, n+1)\n\t\tfor j := range dfsCache[i] {\n\t\t\tdfsCache[i][j] = make([]int, 3)\n\t\t\tfor k := range dfsCache[i][j] {\n\t\t\t\tdfsCache[i][j][k] = -1\n\t\t\t}\n\t\t}\n\t}\n\t// 0: =   1: <   2: >\n\tvar dfs func(j int, prev int, incr int) (ans int)\n\tdfs = func(j int, prev int, incr int) (ans int) {\n\t\t//defer func() {\n\t\t//\tfmt.Printf(\"dp[%d][%d][%d] = %d\\n\", j, prev, incr, ans)\n\t\t//}()\n\t\tif j == n {\n\t\t\treturn 0\n\t\t}\n\t\tif j == 0 {\n\t\t\tfor k := 0; k <= n; k++ {\n\t\t\t\tans = max(ans, dfs(j+1, k, 0))\n\t\t\t}\n\t\t\treturn ans\n\t\t}\n\t\tif dfsCache[j][prev][incr] != -1 {\n\t\t\treturn dfsCache[j][prev][incr]\n\t\t}\n\t\tfor k := 0; k <= n; k++ {\n\t\t\tif k == prev {\n\t\t\t\tans = max(ans, dfs(j+1, k, 0))\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tp := proc(k - prev)\n\t\t\tif p == 1 {\n\t\t\t\tif incr == 2 {\n\t\t\t\t\t// - +\n\t\t\t\t\tans = max(ans, dfs(j+1, k, p))\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\tt := 0\n\t\t\t\t\tfor ti := prev; ti < k; ti++ {\n\t\t\t\t\t\tt += grid[ti][j-1]\n\t\t\t\t\t}\n\t\t\t\t\tans = max(ans, dfs(j+1, k, p)+t)\n\t\t\t\t}\n\t\t\t} else if p == 2 {\n\t\t\t\tt := 0\n\t\t\t\tfor ti := k; ti < prev; ti++ {\n\t\t\t\t\tt += grid[ti][j]\n\t\t\t\t}\n\t\t\t\tans = max(ans, dfs(j+1, k, p)+t)\n\t\t\t}\n\t\t}\n\t\tdfsCache[j][prev][incr] = ans\n\t\treturn ans\n\t}\n\tans := dfs(0, -1, -1)\n\treturn int64(ans)\n}",
    "submit_ts": "1721488884",
    "subm_id": "548316406"
}