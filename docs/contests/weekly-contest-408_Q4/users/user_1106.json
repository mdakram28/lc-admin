{
    "username": "stingspree",
    "submission": "#define ll long long\nclass Solution {\n    void dfs(int i,vector<vector<int>>& g,vector<int>& vis,ll &maxx,ll &maxy,ll &minx, ll &miny,vector<vector<int>>& circles)\n    {\n        vis[i]=1;\n        maxx=max(maxx,(ll)(circles[i][0]+circles[i][2]));\n        minx=min(minx,(ll)(circles[i][0]-circles[i][2]));\n        maxy=max(maxy,(ll)(circles[i][1]+circles[i][2]));\n        miny=min(miny,(ll)(circles[i][1]-circles[i][2]));\n        for(auto val:g[i])\n        {\n            if(vis[val]) continue;\n            dfs(val,g,vis,maxx,maxy,minx,miny,circles);\n        }\n    }\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        vector<vector<int>> g(n);\n        for(int i=0;i<n;i++)\n        {\n            set<int> ind;\n            for(int j=0;j<n;j++)\n            {\n                if(j!=i)\n                {\n                    ll x1=circles[i][0];\n                    ll y1=circles[i][1];\n                    ll x2=circles[j][0];\n                    ll y2=circles[j][1];\n                    ll r1=circles[i][2];\n                    ll r2=circles[j][2];\n                    if((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)<=(r1+r2)*(r1+r2))\n                    {\n                        g[i].push_back(j);\n                    }\n                }\n            }\n            // ll maxx=0,maxy=0,minx=X+1,miny=Y+1;\n            // for(int j=0;j<n;j++)\n            // {\n            //     if(ind.find(j)==ind.end())\n            //     {\n            //         maxx=max(maxx,(ll)(circles[j][0]+circles[j][2]));\n            //         minx=min(minx,(ll)(circles[j][0]-circles[j][2]));\n            //         maxy=max(maxy,(ll)(circles[j][1]+circles[j][2]));\n            //         miny=min(miny,(ll)(circles[j][1]-circles[j][2]));\n            //     }\n            // }\n            // if((maxx<X or maxy<Y) and (minx>0 or miny>0) and (maxx<X or minx>0) and (maxy<Y or miny>0))\n            // {\n            //     for(int j=0;j<n;j++)\n            //     {\n            //         if(ind.find(j)==ind.end()) cout<<j<<\" \";\n            //     }\n            //     cout<<endl;\n            //     return true;\n            // }\n        }\n        vector<int> vis(n,0);\n        for(int i=0;i<n;i++)\n        {\n            if(!vis[i])\n            {\n                ll maxx=0,maxy=0,minx=X+1,miny=Y+1;\n                dfs(i,g,vis,maxx,maxy,minx,miny,circles);\n                if((maxx>=X and maxy>=Y) or (minx<=0 and miny<=0) or (maxx>=X and minx<=0) or (maxy>=Y and miny<=0))\n                {\n                    // cout<<i<<endl;\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138755",
    "subm_id": "1335798817"
}