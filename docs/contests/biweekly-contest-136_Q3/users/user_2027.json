{
    "username": "bladechen",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int res = 0;\n        \n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int one = 0;\n                int zero = 0;\n                if (grid[i][j] == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n\n                if (grid[n - i - 1][j] == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n\n                if (grid[i][m - j - 1] == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                if (grid[n - i - 1][m - j - 1] == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                res += std::min(one, zero);\n            }\n        }\n\n        int one = 0;\n        int tmp1 = 0;\n        int tmp2= 0;\n        if (n & 1) {\n            for (int j = 0; j < m / 2; j ++) {\n                tmp1 += grid[n / 2][j] ^ grid[n / 2][m - j - 1];\n                if (grid[n / 2][j] == 1 && grid[n / 2][m - j - 1] == 1) one += 2;\n            }\n            \n        }\n        if (m & 1) {\n            for (int i = 0; i < n / 2; ++ i) {\n                tmp2 += grid[i][m / 2] ^ grid[n - i - 1][m / 2];\n                if (grid[i][m / 2] == 1 && grid[n - i - 1][m / 2] == 1) {\n                    one += 2;\n                }\n            }\n        }\n        if (one % 4 == 0) {\n            res += tmp2 + tmp1;\n        } else if (one % 4 == 2) {\n            int tmp = tmp2 + tmp1;\n            if (tmp) {\n                res += tmp;\n            } else {\n                res += 2;\n            }\n\n        }\n        //res += tmp2 + tmp1 + std::min(one % 4, (4 - one % 4));\n        if (n % 2 == 1 && m % 2 == 1) {\n            res += (grid[n / 2][m/2] == 1);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699549",
    "subm_id": "552276124"
}