{
    "username": "karthik447",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        n = len(A)\n        add = [[val[0]+val[1], i] for i,val in enumerate(A)]\n        sub = [[val[1]-val[0], i] for i,val in enumerate(A)]\n        add.sort()\n        sub.sort()\n        opt = set([add[0][1], add[-1][1], sub[0][1], sub[-1][1]])\n        ans = inf\n        for idx in opt:\n            a = (add[-1][0] if add[-1][1] != idx else add[-2][0]) - (add[0][0] if add[0][1] != idx else add[1][0])\n            s = (sub[-1][0] if sub[-1][1] != idx else sub[-2][0]) - (sub[0][0] if sub[0][1] != idx else sub[1][0])\n            ans = min(ans, max(a, s))\n        return ans"
}