{
    "username": "vrangr",
    "submission": "template <typename type> inline void print(const type &var) {\n    cout << var;\n}\ntemplate <typename t1, typename t2> inline void print(const pair<t1,t2> &pr) {\n    cout << \"{\";\n    print(pr.first);\n    cout << \",\";\n    print(pr.second);\n    cout << \"}\";\n}\ntemplate <typename type> inline void print(const set<type> &st) {\n    for (auto it = st.begin(); it != st.end(); ++it) {\n        print(*it);\n        cout << \" \";\n    }\n}\n#define debug(x) if(false){cout<<#x<<\": \";print(x);cout<<endl;}\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int,int>> st;\n        for (int i = 0; i < n-1; ++i)\n            st.emplace(i,i+1);\n        vector<int> sol;\n        for (auto &q : queries) {\n            int u = q[0], v = q[1];\n            // debug(st);\n            auto it = st.lower_bound({u,u});\n            if (it == st.end()) {\n                sol.push_back(st.size());\n                continue;\n            }\n            // debug(*it);\n            if (it->first == u) {\n                if (it->second > v) {\n                    sol.push_back(st.size());\n                    continue;\n                }\n                while(it != st.end() && it->second <= v) {\n                    assert(it->first >= u);\n                    it = st.erase(it);\n                }\n                st.emplace(u,v);\n                sol.push_back(st.size());\n                continue;\n            }\n            sol.push_back(st.size());\n        }\n        return sol;\n    }\n};",
    "submit_ts": "1722740371",
    "subm_id": "1343718080"
}