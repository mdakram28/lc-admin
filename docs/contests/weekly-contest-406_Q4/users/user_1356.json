{
    "username": "tmb85",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \n        arr = []\n        heapq.heapify(arr)\n        \n        for val in horizontalCut:\n            heapq.heappush(arr, (-val, 0))\n        for val in verticalCut:\n            heapq.heappush(arr, (-val, 1))\n            \n        type0 = 0\n        type1 = 0\n        \n        ans = 0\n        \n        while len(arr) > 0:\n            val, tt = heapq.heappop(arr)\n            if 0 == tt:\n                ans += val*(1+type1)\n                type0 += 1\n            else:\n                ans += val*(1 + type0)\n                type1 += 1\n        \n        return(-1*ans)\n            ",
    "submit_ts": "1720926206",
    "subm_id": "1320279091"
}