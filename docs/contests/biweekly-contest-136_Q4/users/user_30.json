{
    "username": "brenner1",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n#define endl '\\n'\n#define rep(i, a, b) for (int i = a; i < (b); i++)\n#define all(x) (x).begin(), (x).end()\n#define allr(x) (x).rbegin(), (x).rend()\n#define sz(x) (int)(x).size()\n#define sq(x) (x)*(x)\ntemplate<class T, class U> inline void chmin(T& a, U b) { if (a > b) a = b; }\ntemplate<class T, class U> inline void chmax(T& a, U b) { if (a < b) a = b; }\nmt19937 rng((int) chrono::steady_clock::now().time_since_epoch().count());\ntypedef long long ll;\ntypedef long double ld;\ntypedef __int128 i128;\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = sz(edges) + 1;\n        vector<vector<int>> adj(n);\n        rep(i, 0, n - 1) {\n            int u = edges[i][0], v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n\n        vector<int> sub(n);\n        vector<vector<int>> aux(n);\n        auto dfs0 = [&](auto &&self, int v, int p) -> void {\n            for (int ch : adj[v]) if (ch != p) {\n                self(self, ch, v);\n                int cur = sub[ch] + 2 - ch%2;\n                aux[v].push_back(cur);\n                chmax(sub[v], cur);\n            }\n        };\n        dfs0(dfs0, 0, -1);\n\n        vector<int> ans(n);\n        auto dfs = [&](auto &&self, int v, int p, int up) -> void {\n            ans[v] = max(sub[v], up);\n            sort(allr(aux[v]));\n            for (int ch : adj[v]) if (ch != p) {\n                int nxt_up = up + 2 - v%2;\n                if (sz(aux[v]) > 1) {\n                    int x = (sub[ch] + 2 - ch%2 == aux[v][0] ? aux[v][1] : aux[v][0]);\n                    chmax(nxt_up, x + 2 - v%2);\n                }\n                self(self, ch, v, nxt_up);\n            }\n        };\n        dfs(dfs, 0, -1, 0);\n\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1722697367",
    "subm_id": "1343144004"
}