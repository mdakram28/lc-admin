{
    "username": "raashiii",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n         const int MOD = 1e9 + 7;\n        int n = nums.size();\n        std::vector<std::vector<int>> dp(n, std::vector<int>(51, 0));\n\n        // Initialize the first position\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1;  // arr1[0] = j and arr2[0] = nums[0] - j\n        }\n\n        // DP to calculate the number of valid sequences\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= nums[i]; ++j) {\n                // We can only choose arr1[i] = j if arr1[i-1] <= j (because arr1 is non-decreasing)\n                for (int k = 0; k <= j; ++k) {\n                    int arr2_i = nums[i] - j;\n                    if (arr2_i >= 0 && arr2_i <= nums[i - 1] - k) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][k]) % MOD;\n                    }\n                }\n            }\n        }\n\n        // Sum all valid end configurations\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            result = (result + dp[n - 1][j]) % MOD;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1723343813",
    "subm_id": "1351518620"
}