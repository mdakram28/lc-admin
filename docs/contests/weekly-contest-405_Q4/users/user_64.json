{
    "username": "dbsic211",
    "submission": "class Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        const long long MOD = 1734232211;\n        string tar = \" \" + target;\n        int n = target.size();\n        long long ps[n+1], pau[n+1];\n        pau[0] = 1;\n        ps[0] = 0;\n        for(int i=1; i<=n; i++) {\n            pau[i] = pau[i-1] * 73;\n            pau[i] %= MOD;\n            ps[i] = ps[i-1] * 73 + (tar[i] - 'a' + 1);\n            ps[i] %= MOD;\n        }\n        int dp[n+1];\n        dp[0] = 0;\n        vector<pair<string, int>> small;\n        vector<pair<pair<int,int> , int>> large; // {len,hash}, cost\n        for(int i=0; i<words.size(); i++) {\n            if(words[i].size() > 100) {\n                long long h = 0;\n                for(int j=0; j<words[i].size(); j++) {\n                    h = h * 73 + (words[i][j] - 'a' + 1);\n                    h %= MOD;\n                }\n                large.push_back({{words[i].size(), h}, costs[i]});\n            }\n            else small.push_back({words[i], costs[i]});\n        }\n        unordered_map<long long,int> exists[101];\n        for(int i=0; i<small.size(); i++) {\n            long long h = 0;\n            for(int j=0; j<small[i].first.size(); j++) {\n                h = h * 73 + (small[i].first[j] - 'a' + 1);\n                h %= MOD;\n            }\n            int len = small[i].first.size();\n            if(exists[len].count(h)) exists[len][h] = min(exists[len][h], small[i].second);\n            else exists[len][h] = small[i].second;\n        }\n        for(int i=1; i<=n; i++) {\n            long long h = 0;\n            long long p = 1;\n            dp[i] = 1e9;\n            for(int j=i-1; j>=max(0, i-100); j--) {\n                h += p * (tar[j+1] - 'a' + 1);\n                p *= 73;\n                h %= MOD;\n                p %= MOD;\n                if(exists[i-j].count(h)) dp[i] = min(dp[i], dp[j] + exists[i-j][h]);\n            }\n            for(int j=0; j<large.size(); j++) {\n                int len = large[j].first.first;\n                if(i < len) continue;\n                \n                long long eval = (ps[i] - (ps[i - len] * pau[len]) % MOD + MOD) % MOD;\n                if(eval == large[j].first.second) {\n                    dp[i] = min(dp[i], dp[i-len] + large[j].second);\n                }\n            }\n        }\n        return (dp[n] == 1e9 ? -1 : dp[n]);\n    }\n};",
    "submit_ts": "1720320515",
    "subm_id": "1312296588"
}