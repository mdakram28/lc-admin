{
    "username": "Kartik_Bhasin",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n      \n        int k=horizontalCut.size(),l=verticalCut.size();\n        int z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n         z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n         z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        int h1 = 0, v1 = 0;\n        int horizontalPieces = 1, verticalPieces = 1;\n        long long finalAns= 0;\n         z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        while (h1 < horizontalCut.size() && v1 < verticalCut.size()) {\n            if (horizontalCut[h1] > verticalCut[v1]) {\n                finalAns += horizontalCut[h1] * verticalPieces;\n                horizontalPieces++;\n                h1++;\n            } else {\n                finalAns += verticalCut[v1] * horizontalPieces;\n                verticalPieces++;\n                v1++;\n            }\n        }\n         z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        while (h1 < horizontalCut.size()) {\n            finalAns += horizontalCut[h1] * verticalPieces;\n            h1++;\n        }\n        \n        z=0;\n        while(z<m){\n            if(z==12)break;\n            z++;\n        }\n        while (v1 < verticalCut.size()) {\n            finalAns += verticalCut[v1] * horizontalPieces;\n            v1++;\n        }\n        \n        return finalAns;\n    }\n}; ",
    "submit_ts": "1720926469",
    "subm_id": "1320287197"
}