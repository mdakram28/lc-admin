{
    "username": "hero777",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> x(32, 0);\n        int curr = 0;\n        int c = (1<<30) - 1;\n        int ans = c;\n        for(int i = 0; i < nums.size(); i++){\n            //cout << i << ' ' << c << '\\n';\n            c &= nums[i];\n            //cout << i << ' ' << nums[i] << ' ' << c << '\\n';\n            int y = 0;\n            int j = nums[i];\n            while(j > 0){\n                if(j % 2 == 1)\n                    x[y]++;\n                j /= 2;\n                y++;\n            }\n            //cout << \"reached \" << c <<'\\n';\n            ans = min(ans, abs(c-k));\n            while(c < k && curr <= i){\n                //cout << curr << '\\n';\n                int j = nums[curr];\n                int y = 0;\n                int rr = 1;\n                while(j > 0){\n                    if(j % 2 == 1){\n                        x[y]--;\n                    }\n                    j /= 2;\n                    y++;\n                }\n                c = 0;\n                for(int k = 0; k < 31; k++)\n                    if(x[k] == i-curr)\n                        c += 1 << k;\n\n                //cout << c << \"x\\n\";\n                curr++;\n                ans = min(ans, abs(c-k));\n            }\n            if(curr == i+1)\n                c = (1<<30) - 1;\n            //cout << c << '\\n';\n            ans = min(ans, abs(c-k));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299308.0
}