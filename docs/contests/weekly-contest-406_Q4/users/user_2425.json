{
    "username": "oin931104",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long res = 0;\n\n        long long horicut = 1;\n        long long vertcut = 1;\n\n        sort(horizontalCut.begin() , horizontalCut.end());\n        sort(verticalCut.begin() , verticalCut.end());\n\n        int hp = m-2;\n        int vp = n-2;\n\n        while(hp>=0 && vp>=0)\n        {\n            if(horizontalCut[hp] > verticalCut[vp])\n            {\n                res += (long long)horizontalCut[hp]*vertcut;\n                horicut ++;\n                hp--;\n            }\n            else if(horizontalCut[hp] <= verticalCut[vp])\n            {\n                res += (long long)verticalCut[vp]*horicut;\n                vertcut ++;\n                vp--;\n            }\n        }\n\n        while(hp>=0)\n        {\n            res += (long long)horizontalCut[hp]*vertcut;\n            horicut ++;\n            hp--;\n        }\n        while(vp>=0)\n        {\n            res += (long long)verticalCut[vp]*horicut;\n            vertcut ++;\n            vp--;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720926807",
    "subm_id": "1320296915"
}