{
    "username": "geeksme123",
    "submission": "class Solution {\npublic:\n    int dp[301][401];\n    const long long int MOD = 1e9+7;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n       \n        long long permCount[n+1][401];\n        memset(permCount, 0, sizeof(permCount));\n        permCount[0][0] = 1;\n        unordered_map<int,int>reqMap;\n        int cVal  = 0, flg = 0;\n        for(auto &i:requirements)\n        {\n            reqMap[i[0]+1] = i[1];\n            cVal++;\n            if(cVal == 9)\n                flg = 1;\n        }\n        \n        for(int length = 1; length <= n; length++)\n        {\n            for(int inv = 0; inv <= 400; inv++)\n            {\n                flg = 0;\n                for(int newPos = 0; newPos < length; newPos++)\n                {\n                    if((inv - newPos) >= 0)\n                    {\n                        permCount[length][inv] = (permCount[length][inv] + permCount[length-1][(inv - newPos)]) % MOD;\n                        flg = 1;\n                    }\n                }\n            }\n            if(reqMap.find(length) != reqMap.end())\n            {\n                flg = 0;\n                for(int inv = 0; inv <= 400; inv++)\n                {\n                    flg = 0;\n                    if(inv != reqMap[length])\n                    {\n                        flg = 1;\n                        permCount[length][inv] = 0;\n                    }\n                }\n            }\n        }\n        int ans = 0;\n        for(long count:permCount[n])\n            ans = (ans + count) % MOD;\n        return ans;\n        \n        // return helper(n, requirements);\n    }\n};",
    "submit_ts": "1719071482",
    "subm_id": "1296847720"
}