{
    "username": "ankush920",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int length = colors.size();   \n        int result = 0; \n        vector<int> groupWindow(length, 0); \n        for(int index = 0; index < length; index++){\n            int value = (colors[(index) % length] ^ colors[(index + 1) % length]);\n            groupWindow[index] = value;\n        }\n        \n        k--; \n        int start = 0, end = 0;  \n        int totalSize = length + k - 1; \n        while(end < totalSize){\n            int startPos = start % length, endPos = end % length; \n            if(groupWindow[endPos] == 1){\n                end++;\n                if(end - start == k){\n                    result++;\n                    start++;      \n                }\n            }\n            else{\n                end++; \n                start = end; \n            }\n        }\n        return result;\n    }\n};\n",
    "submit_ts": "1720279148",
    "subm_id": "1311739463"
}