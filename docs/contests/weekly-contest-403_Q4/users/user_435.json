{
    "username": "huanli01008",
    "submission": "class Solution {\n    int minr = Integer.MAX_VALUE, maxr = Integer.MIN_VALUE, minc = Integer.MAX_VALUE, maxc = Integer.MIN_VALUE;\n    int ans = Integer.MAX_VALUE;\n    int[][] grid;\n    public int minimumSum(int[][] grid) {\n        this.grid = grid;\n        int n = grid.length, m = grid[0].length;        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(grid[i][j] == 1){\n                    minr = Math.min(minr, i);\n                    maxr = Math.max(maxr, i);\n                    minc = Math.min(minc, j);\n                    maxc = Math.max(maxc, j);\n                }\n            }\n        }\n        horiz();\n        onlyHoriz();\n        verti();\n        onlyVerti();\n        return ans;\n    }\n    public void horiz(){\n        // above horiz\n        \n        for(int i = minr + 1; i <= maxr; i++){\n            for(int j = minc; j < maxc; j++){\n                int area1 = calcArea(minr, i - 1, minc, j);\n                int area2 = calcArea(minr, i - 1, j + 1, maxc);\n                int area3 = calcArea(i, maxr, minc, maxc);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n        // below\n        for(int i = minr; i < maxr; i++){\n            for(int j = minc; j < maxc; j++){\n                int area1 = calcArea(i + 1, maxr, minc, j);\n                int area2 = calcArea(i + 1, maxr, j + 1, maxc);\n                int area3 = calcArea(minr, i, minc, maxc);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n    }\n    public void verti(){\n        // left        \n        for(int j = minc; j < maxc; j++){\n            for(int i = minr; i < maxr; i++){\n                int area1 = calcArea(minr, i, minc, j);\n                int area2 = calcArea(i + 1, maxr, minc, j);\n                int area3 = calcArea(minr, maxr, j + 1, maxc);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n        // right\n        for(int j = minc + 1; j <= maxc; j++){\n            for(int i = minr; i < maxr; i++){\n                int area1 = calcArea(minr, i, j, maxc);\n                int area2 = calcArea(i + 1, maxr, j, maxc);\n                int area3 = calcArea(minr, maxr, 0, j - 1);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n    }\n    public void onlyHoriz(){\n        for(int r1 = minr; r1 < maxr; r1++){\n            for(int r2 = r1 + 1; r2 < maxr; r2++){\n                int area1 = calcArea(minr, r1, minc, maxc);\n                int area2 = calcArea(r1 + 1, r2, minc, maxc);\n                int area3 = calcArea(r2 + 1, maxr, minc, maxc);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n    }\n    public void onlyVerti(){\n        for(int c1 = minc; c1 < maxc; c1++){\n            for(int c2 = c1 + 1; c2 < maxc; c2++){\n                int area1 = calcArea(minr, maxr, minc, c1);\n                int area2 = calcArea(minr, maxr, c1 + 1, c2);\n                int area3 = calcArea(minr, maxr, c2 + 1, maxc);\n                ans = Math.min(ans, area1 + area2 + area3);\n            }\n        }\n    }\n    public int calcArea(int upr, int lowr, int lc, int rc){\n        if(lowr < upr || rc < lc) return 0;\n        boolean flag = true;\n        for(int i = upr; i <= lowr; i++){\n            if(grid[i][lc] == 1){\n                flag = false;\n                break;\n            }\n        }\n        if(flag) return calcArea(upr, lowr, lc + 1, rc);\n        flag = true;\n        for(int i = upr; i <= lowr; i++){\n            if(grid[i][rc] == 1){\n                flag = false;\n                break;\n            }\n        }\n        if(flag) return calcArea(upr, lowr, lc, rc - 1);\n        flag = true;\n        for(int i = lc; i <= rc; i++){\n            if(grid[upr][i] == 1){\n                flag = false;\n                break;\n            }\n        }\n        if(flag) return calcArea(upr + 1, lowr, lc, rc);\n        flag = true;\n        for(int i = lc; i <= rc; i++){\n            if(grid[lowr][i] == 1){\n                flag = false;\n                break;\n            }\n        }\n        if(flag) return calcArea(upr, lowr - 1, lc, rc);\n        return (lowr - upr + 1) * (rc - lc + 1);\n    }\n}",
    "submit_ts": 1719115053.0
}