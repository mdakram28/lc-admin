{
    "username": "gooday-3",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int K) {\n        int n = (int) nums.size();\n        \n        vector<pair<int,int>> P;\n        \n        long long res = 0;\n        for (int k = 0; k < n; ++k) {\n            int x = nums[k];\n            \n            for (auto& [y, j] : P) {\n                y &= x;\n            }\n            P.push_back({x, k});\n            \n            int sz = 0;\n            for (int i = 0; i < (int) P.size(); ++i) {\n                auto [x, j] = P[i];\n                int r = j;\n                while (i + 1 < (int) P.size()) {\n                    if (P[i + 1].first == x) {\n                        r = P[++i].second;\n                    } else {\n                        break;\n                    }\n                }\n                P[sz++] = {x, r};\n            }\n            \n            P.resize(sz);\n            for (int i = 0; i < sz; ++i) {\n                int l = i == 0 ? -1 : P[i - 1].second;\n                int r = P[i].second;\n                if (P[i].first == K) {\n                    res += r - l;\n                }\n            }\n        }\n        return res;        \n    }\n};",
    "submit_ts": "1720277657",
    "subm_id": "544558007"
}