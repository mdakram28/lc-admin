{
    "username": "suraj_0491",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(const std::vector<int>& alpha, const std::vector<int>& beta) {\n        std::vector<int> gamma(alpha.size());\n        \n        // Initialize gamma vector with differences between beta and alpha\n        size_t i = 0;\n        while (i < alpha.size()) {\n            gamma[i] = beta[i] - alpha[i];\n            ++i;\n        }\n        \n        long long delta = 0;  \n        int epsilon = 0;\n        \n        // Process the gamma vector to calculate the minimum operations\n        i = 0;\n        while (i < gamma.size()) {\n            if (i == 0 || (gamma[i - 1] > 0 && gamma[i] > 0) || (gamma[i - 1] < 0 && gamma[i] < 0)) {\n                // Absolute difference\n                long long zeta = std::abs(gamma[i]) - std::abs(epsilon); // Changed to long long\n                // If positive\n                if (zeta > 0) {\n                    delta += zeta;\n                }\n                // Set gamma[i] to epsilon\n                epsilon = gamma[i];\n            } else {\n                delta += std::abs(gamma[i]);\n                epsilon = gamma[i];\n            }\n            ++i;\n        }\n        \n        // Uncomment for debugging\n        // std::cout << delta << std::endl;\n        return delta;\n    }\n};\n",
    "submit_ts": "1721533027",
    "subm_id": "1327999607"
}