{
    "username": "amsraman",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, bool>> srt;\n        for(auto val: horizontalCut) srt.emplace_back(val, 0);\n        for(auto val: verticalCut) srt.emplace_back(val, 1);\n        sort(srt.begin(), srt.end()); reverse(srt.begin(), srt.end());\n        long long ans = 0; int hc = 0, vc = 0;\n        for(auto [val, tp]: srt) {\n            if(tp) {\n                ans += 1LL * (hc + 1) * val; ++vc;\n            } else {\n                ans += 1LL * (vc + 1) * val; ++hc;\n            }\n        }\n        return ans;\n    }\n};\n/*\nEvery vertical cut needs to be used... every horizontal cut needs to be used\n\n\nThe number of times a thing is used is the number of opposite cuts that happened before (+ 1)\n\n\nV: 4, 3\nH: 4, 2\n\n\n*/",
    "submit_ts": "1720924739",
    "subm_id": "1320228982"
}