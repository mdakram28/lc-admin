{
    "username": "nayan21100",
    "submission": "#include<bits/stdc++.h> \nusing namespace std; \n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n\nauto init = []() \n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 'c';\n}();\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int cnttwo=0;\n        int cntchangestwo=0;\n        int ans=0;\n        for(int i=0;i<n;++i){\n            if(n%2 and i==n/2){\n                for(int j=0;j<m;++j){\n                    if(m%2 and j==m/2){\n                        continue;\n                    }\n                    else{\n                        if(grid[i][j]!=grid[i][m-1-j]){\n                            // cout<<1<<endl;\n                            cntchangestwo+=1;\n                            grid[i][j]=0;\n                            grid[i][m-1-j]=0;\n                            ans+=1;\n                        }\n                        else{\n                            if(grid[i][j]==1){\n                                cnttwo+=1;\n                            }\n                        }\n                    }\n                }\n            }\n            else{\n                for(int j=0;j<m;++j){\n                    if(m%2 and j==m/2){\n                        if(grid[i][j]!=grid[n-1-i][j]){\n                            cntchangestwo+=1;\n                            grid[i][j]=0;\n                            grid[n-1-i][j]=0;\n                            ans+=1;\n                        }\n                        else{\n                            if(grid[i][j]==1){\n                                cnttwo+=1;\n                            }\n                        }\n                    }\n                    else{\n                        int one=0;\n                        one+=grid[i][j];\n                        one+=grid[i][m-1-j];\n                        one+=grid[n-1-i][j];\n                        one+=grid[n-1-i][m-1-j];\n                        ans+=min(4-one,one);\n                        grid[i][j]=0;\n                        grid[i][m-1-j]=0;\n                        grid[n-1-i][j]=0;\n                        grid[n-1-i][m-1-j]=0;\n                    }\n                }   \n            }\n        }\n        if(n%2 and m%2){\n            if(grid[n/2][m/2]) ans+=1;\n        }\n        if((cntchangestwo+cnttwo)%4){\n            if(cntchangestwo>0){\n                // ans+=1;\n            }\n            else{\n                ans+=2;\n            }\n        }\n        // cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1722698092",
    "subm_id": "1343169382"
}