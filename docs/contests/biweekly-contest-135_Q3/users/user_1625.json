{
    "username": "srinivas1667",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        map<int, vector<int>> differenceMap;\n        vector<int> potentialXValues;\n\n       \n        for (int i = 0; i < n / 2; ++i) {\n            int front = nums[i];\n            int back = nums[n - i - 1];\n            int diff = abs(front - back);\n\n            int maxX = max({front, back, k - front, k - back});\n            differenceMap[diff].push_back(maxX);\n            potentialXValues.push_back(maxX);\n        }\n\n       \n        int minChangesRequired = n;\n        sort(potentialXValues.begin(), potentialXValues.end());\n\n        \n        for (const auto& [diff, maxValues] : differenceMap) {\n            int index = lower_bound(potentialXValues.begin(), potentialXValues.end(), diff) - potentialXValues.begin();\n            int changes = index * 2 + (n / 2 - index);\n\n            \n            for (const auto& maxX : maxValues) {\n                if (maxX < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChangesRequired = min(minChangesRequired, changes);\n        }\n\n        return minChangesRequired;\n    }\n};",
    "submit_ts": "1721489388",
    "subm_id": "1327451767"
}