{
    "username": "jli57",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \n        h_indices = list(range(m - 1))\n        h_indices.sort(reverse=True, key=lambda x: horizontalCut[x])\n\n        v_indices = list(range(n - 1))\n        v_indices.sort(reverse=True, key=lambda x: verticalCut[x])\n        \n        i, j = 0, 0 \n\n        h_sections = 1\n        v_sections = 1\n        \n        cost = 0 \n        while i < m - 1 or j < n - 1: \n            if i >= m - 1: \n                v_ind = v_indices[j]\n                cost += verticalCut[v_ind] * h_sections\n                v_sections += 1\n                j += 1\n            elif j >= n - 1: \n                h_ind = h_indices[i]\n                cost += horizontalCut[h_ind] * v_sections\n                h_sections += 1\n                i += 1\n            else: \n                h_ind = h_indices[i]\n                v_ind = v_indices[j]\n\n                if horizontalCut[h_ind] > verticalCut[v_ind]: \n                    cost += horizontalCut[h_ind] * v_sections\n                    h_sections += 1\n                    i += 1\n                else: \n                    cost += verticalCut[v_ind] * h_sections\n                    v_sections += 1\n                    j += 1\n\n        return cost ",
    "submit_ts": "1720926767",
    "subm_id": "1320295792"
}