{
    "username": "ddoudle",
    "submission": "class Solution:\n    def minimumSum(self, A: List[List[int]]) -> int:\n        m, n = len(A), len(A[0])\n        \n        cache = {}\n        def p1(a,b,c,d):\n            if (a,b,c,d) in cache:\n                return cache[(a,b,c,d)]\n            left, right = d, b\n            upper, bottom = c, a\n            flag = False\n            for i in range(a, c+1):\n                for j in range(b, d+1):\n                    if A[i][j] == 1:\n                        flag = True\n                        left = min(left, j)\n                        right = max(right, j)\n                        upper = min(upper, i)\n                        bottom = max(bottom, i)\n            if flag:\n                res = (bottom-upper+1) * (right-left+1)\n            else:\n                res = 1\n            cache[(a,b,c,d)] = res\n            return res\n        \n        def p2(a, b, c, d):\n            if a == c and b == d:\n                return -inf\n            res = (c-a+1)*(d-b+1)\n            for i in range(1, c-a+1):\n                res = min(res, p1(a, b, a+i-1, d)+p1(a+i,b,c,d))\n            for j in range(1, d-b+1):\n                res = min(res, p1(a,b,c,b+j-1)+p1(a,b+j,c,d))\n            # print(a,b,c,d,res)\n            return res\n        \n        res = m * n\n        for i in range(1, m):\n            res = min(res, p1(0,0,i-1,n-1)+p2(i,0,m-1,n-1))\n            res = min(res, p2(0,0,i-1,n-1)+p1(i,0,m-1,n-1))\n            # print(i, p1(0,0,i-1,n-1)+p2(i,0,m-1,n-1))\n        for j in range(1, n):\n            res = min(res, p1(0,0,m-1,j-1)+p2(0,j,m-1,n-1))\n            res = min(res, p2(0,0,m-1,j-1)+p1(0,j,m-1,n-1))\n            # print(j, p1(0,0,m-1,j-1)+p2(0,j,m-1,n-1))\n        # print(cache)\n        return res\n            \n            \n            \n        \n        \n            ",
    "submit_ts": 1719112281.0
}