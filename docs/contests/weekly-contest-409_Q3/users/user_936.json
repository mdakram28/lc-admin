{
    "username": "coderman2004",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] distance = new int[n];\n        for (int i = 1; i < n; i++) {\n            distance[i] = distance[i - 1] + 1;\n        }\n\n        TreeSet<Integer> poss = new TreeSet<>();\n        for (int i = 0; i < n; i++) {\n            poss.add(i);\n        }\n\n        int[] result = new int[queries.length];\n\n        for (int i = 0; i < queries.length; i++) {\n            int left = queries[i][0];\n            int right = queries[i][1];\n\n            SortedSet<Integer> res = poss.subSet(left + 1, right);\n            List<Integer> res1 = new ArrayList<>(res);\n            poss.removeAll(res1);\n\n            result[i] = poss.size() - 1;\n        }\n\n        return result;\n    }\n}\n",
    "submit_ts": "1722742988",
    "subm_id": "1343781716"
}