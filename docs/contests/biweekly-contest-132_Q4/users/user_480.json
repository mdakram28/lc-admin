{
    "username": "satvik21",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[1 for _ in range(k + 1)] for _ in range(n)]\n        maxi = [1] * (k + 1)\n        ans = 1\n        d = {}\n        d[nums[-1]] = n - 1\n        for i in range(n - 2,-1,-1):\n            for j in range(k,-1,-1): \n                if d.get(nums[i]) is not None:\n                    dp[i][j] = dp[d[nums[i]]][j] + 1\n                    if j > 0:\n                        dp[i][j] = max(maxi[j - 1] + 1,dp[i][j])\n                else:\n                    if j > 0:\n                        dp[i][j] = maxi[j - 1] + 1\n                maxi[j] = max(maxi[j],dp[i][j])\n                ans = max(ans,dp[i][j])\n            d[nums[i]] = i\n        return ans",
    "submit_ts": 1717862070.0
}