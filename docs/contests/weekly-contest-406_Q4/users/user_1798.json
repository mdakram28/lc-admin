{
    "username": "Ahmed_Abdel_Al",
    "submission": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       \n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int h = 0, v = 0; \n        long long hPieces = 1, vPieces = 1; \n        long long totalCost = 0;\n        \n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += horizontalCut[h] * vPieces;\n                hPieces++;\n                h++;\n            } else {\n                totalCost += verticalCut[v] * hPieces;\n                vPieces++;\n                v++;\n            }\n        }\n        \n        \n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * vPieces;\n            h++;\n        }\n        \n        \n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * hPieces;\n            v++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925862",
    "subm_id": "1320268596"
}