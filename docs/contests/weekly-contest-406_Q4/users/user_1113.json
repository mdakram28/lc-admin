{
    "username": "Aditya1464",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n\n        int noRowCut = 1;\n        int noColCut = 1;\n\n        int i = horizontalCut.size() - 1;\n        int j = verticalCut.size() - 1;\n\n        long long ans = 0;\n\n        while(i>=0 && j>=0){\n\n            if(horizontalCut[i] < verticalCut[j]){\n                ans += verticalCut[j] * noColCut;\n                j--;\n                noRowCut++;\n            }\n            else{\n                ans += horizontalCut[i] * noRowCut;\n                i--;\n                noColCut++;\n            }\n        }\n\n        while(i>=0){\n            ans += horizontalCut[i] * noRowCut;\n            i--;\n        }\n\n        while(j>=0){\n            ans += verticalCut[j] * noColCut;\n            j--;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926032",
    "subm_id": "1320273907"
}