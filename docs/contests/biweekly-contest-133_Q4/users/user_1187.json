{
    "username": "ekeshwar2407",
    "submission": "class Solution {\npublic:\n    \n    long long mod=1000000007;\n    \n    int nsum(int n)\n    {\n        return (n*(n+1))/2;\n    }\n    \n    long long f(int i, int inver, int n, vector<int>&a, vector<int>&b, vector<vector<long long>>&dp)\n    {\n        if(i==n) return 1;\n        \n        if(dp[i][inver]!=-1) return dp[i][inver];\n        \n        int ind=lower_bound(a.begin(),a.end(),i)-a.begin();\n        if(a[ind]==i)\n        {\n            if(inver>b[ind] || inver+i<b[ind]) return dp[i][inver]=0;\n            return dp[i][inver]=f(i+1,b[ind],n,a,b,dp)%mod;\n        }\n        long long ans=0;\n        \n        \n        int howmuch=nsum(a[ind])-nsum(i);\n        \n        // int ll=max(inver,b[ind]-howmuch-inver);\n        int ul=min(b[ind],inver+i);\n        \n        // cout<<i<<\" \"<<ll<<\" \"<<ul<<endl;\n        \n        for(int k=inver;k<=ul;k++)\n        {\n            ans=(ans%mod+f(i+1,k,n,a,b,dp)%mod)%mod;\n        }\n        return dp[i][inver]=ans%mod;\n    }\n    \n    \n    static bool cmp(vector<int>&a, vector<int>&b)\n    {\n        return (a[0]<b[0]);\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& c) {\n        sort(c.begin(),c.end(),cmp);\n        int m=c.size();\n        vector<int>a(m);\n        vector<int>b(m);\n        for(int i=0;i<m;i++)\n        {\n            a[i]=c[i][0];\n            b[i]=c[i][1];\n        }\n        \n        vector<vector<long long>>dp(302, vector<long long>(403,-1));\n        \n        return f(0,0,n,a,b,dp);\n        \n    }\n};",
    "submit_ts": 1719071413.0
}