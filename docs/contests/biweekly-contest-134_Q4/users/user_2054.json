{
    "username": "Himanshu2208",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long ans = 0;\n        Map<Long, Long> past = new HashMap<>(), present;\n        for (int num : nums) {\n            if (num == k) {\n                ans++;\n            }\n            present = new HashMap<>();\n            present.put((long) num, 1L);\n            Iterator<Map.Entry<Long, Long>> iterator = past.entrySet().iterator();\n            while (true) {\n                if (!iterator.hasNext()) break;\n                Map.Entry<Long, Long> entry = iterator.next();\n                if ((entry.getKey() & num) != k) {\n                } else {\n                    ans += entry.getValue();\n                }\n                present.put(entry.getKey() & num, present.getOrDefault((entry.getKey() & num), 0L) + entry.getValue());\n            }\n            past = present;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720278811",
    "subm_id": "1311725289"
}