{
    "username": "Shyamkumar_vsk",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m,int n,vector<int>& horizon,vector<int>& vertical){\n        long long ans=0;\n        int rc=0,cc=0;\n        priority_queue<int> row,col;\n        for(auto it:horizon) row.push(it);\n        for(auto it:vertical) col.push(it);\n        while(!row.empty() and !col.empty()){\n            if(row.top()>=col.top()){\n                ans+=((cc+1)*row.top());\n                row.pop();\n                rc++;\n            }\n            else{\n                ans+=((rc+1)*col.top());\n                col.pop();\n                cc++;\n            }\n        }\n        while(!row.empty()){\n            ans+=((cc+1)*row.top());\n            row.pop();\n        }\n        while(!col.empty()){\n            ans+=((rc+1)*col.top());\n            col.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926475",
    "subm_id": "1320287391"
}