{
    "username": "ratzfatz",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        rows, cols = len(grid), len(grid[0])\n\n        def num_flips(l):\n            count = 0\n            half = len(l) // 2\n            count_ones = 0\n            for i in range(half):\n                a = l[i]\n                b = l[-i - 1]\n                count += a != b\n                count_ones += a * b\n            return count, count_ones * 2\n\n\n        result = 0\n        center_one = 0\n        if rows % 2 == 1 and cols % 2 == 1:\n            mid_row = grid[rows // 2]\n            mid_val = mid_row[cols // 2]\n            if mid_val == 1:\n                center_one = 1\n\n        result += center_one\n        mid_row_ones = 0   \n        rmr = 0     \n        if rows % 2 == 1:\n            mid_row = grid[rows // 2]\n            rmr, mid_row_ones = num_flips(mid_row)\n            result += rmr\n\n        mid_col_ones = 0\n        rmc = 0\n        if cols % 2 == 1:\n            index = cols // 2\n            mid_col = [row[index] for row in grid]\n            rmc, mid_col_ones = num_flips(mid_col)\n            result += rmc\n        \n        mid_row_ones = mid_row_ones % 4\n        if rmr == 0 and rmc == 0:\n            result += (mid_row_ones + mid_col_ones) % 4\n\n        for i in range(rows // 2):\n            for j in range(cols // 2):\n                r1 = grid[i]\n                r2 = grid[-i-1]\n                nums = [r1[j], r1[-j-1], r2[j], r2[-j-1]]\n                ones = sum(nums)\n                if ones in (1, 3):\n                    result += 1\n                if ones == 2:\n                    result += 2\n        print(result)\n        return result",
    "submit_ts": "1722698872",
    "subm_id": "1343194494"
}