{
    "username": "trying_n_trying",
    "submission": "#define ll long long\n\nint M = 1e9+7;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& v)\n    {\n        int idx = 0;\n        sort(v.begin(),v.end(),[&](vector<int> p,vector<int> q){\n            return p[0] < q[0];\n        } );\n        \n        int m = (int)v.size();\n        ll dp[n+1][407];\n        memset(dp,0LL,sizeof(dp));\n        dp[0][0]=1;\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=0;j<404;j++)\n            {\n                for(int pos=0;pos<i;pos++)\n                {\n                   if(j-(i-pos-1) >= 0)\n                   {\n                       dp[i][j] = (dp[i][j] %M + dp[i-1][j- (i-pos-1) ]%M ) %M;\n                   }\n                }\n            }\n            \n            if(i == v[idx][0]+1)\n            {\n                for(int j=0;j<404;j++) if(j!=v[idx][1]) dp[i][j]=0;\n                idx++;\n                if(idx == m) break;\n            }\n        }\n        \n        // for(int i=0;i<=n;i++)\n        // {\n        //     for(int j=0;j<6;j++) cout << dp[i][j] << \" \";\n        //     cout << \"\\n\";\n        // }\n        \n        return (int)(dp[n][ v[m-1][1] ]%M);\n    }\n};",
    "submit_ts": 1719070936.0
}