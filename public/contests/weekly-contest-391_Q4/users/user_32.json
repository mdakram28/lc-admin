{
    "username": "VILLANOVA_ECON",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n\n        \n        from sortedcontainers import SortedList\n        sorted_list_diff = SortedList()\n        sorted_list_sum = SortedList()\n        \n        #hash_lookup = {}\n        \n        for i,(x,y) in enumerate(points):\n            sorted_list_diff.add(x-y)\n            sorted_list_sum.add(x+y)\n            #hash_lookup[i] = (x,y)\n        \n        best_ans = math.inf\n        for i in range(len(points)):\n            x,y = points[i]\n            sorted_list_diff.discard(x-y)\n            sorted_list_sum.discard(x+y)\n            best_ans = min(best_ans,max(abs(sorted_list_diff[-1]-sorted_list_diff[0]),abs(sorted_list_sum[-1] - sorted_list_sum[0])))\n            sorted_list_diff.add(x-y)\n            sorted_list_sum.add(x+y)\n        return best_ans\n            \n            \n            \n            \n            \n        \n        "
}