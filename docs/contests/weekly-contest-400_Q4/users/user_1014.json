{
    "username": "OuterRidgeSavage",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        int n = a.size();\n        vector<int> suffix(n, 0);\n        suffix[n - 1] = a[n - 1];\n        for (int i = n - 2; i >= 0; --i) {\n            suffix[i] = suffix[i + 1] & a[i];\n        }\n        \n        vector<vector<int>> two(31, vector<int>(n, 0));  // prefix sum.\n        for (int t = 1, i = 0; t <= 1'000'000'000; t <<= 1, ++i) {\n            two[i][0] = ((t & a[0]) > 0);\n            for (int j = 1; j < n; ++j) {\n                two[i][j] = two[i][j - 1] + ((t & a[j]) > 0);\n            }\n        }\n        \n        \n        int ans = std::abs(a[0] - k);\n        for (int i = 0; i < n; ++i) {\n            if (ans == 0) return 0;\n            // [suffix[i], a[i]].\n            if (k >= a[i]) {\n                ans = std::min(ans, k - a[i]);\n                continue;\n            }\n            if (k <= suffix[i]) {\n                ans = std::min(ans, suffix[i] - k);\n                continue;\n            }\n            // [suffix[i], k, a[i]]\n            // a[i]     ... a[n-1]\n            // suffix[i]... suffix[n-1]\n            // [l,r].\n            int l = i;\n            int r = n - 1;\n            while (l < r) {\n                int m = (l + r) / 2;\n                // cout << \"[\" << l << \", \" << r << \"], m=\" << m << endl;\n                // [i..m].\n                int tmp = 0;\n                for (int j = 0, t = 1; t <= 1'000'000'000; t <<= 1, ++j) {\n                    if (two[j][m] - (i > 0 ? two[j][i - 1] : 0) == m - i + 1) {\n                        tmp += t;\n                    }\n                }\n                // cout << \"tmp = \" << tmp << endl;\n                if (tmp == k) return 0;\n                ans = std::min(ans, std::abs(tmp - k));\n                if (tmp < k) {\n                    r = m - 1;\n                } else {\n                    l = m + 1;\n                }\n            }\n            // check l.\n            int tmp = 0;\n            for (int j = 0, t = 1; t <= 1'000'000'000; t <<= 1, ++j) {\n                if (two[j][l] - (i > 0 ? two[j][i - 1] : 0) == l - i + 1) {\n                    tmp += t;\n                }\n            }\n            ans = std::min(ans, std::abs(tmp - k));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717300002",
    "subm_id": "1274830831"
}