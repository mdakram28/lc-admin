{
    "username": "harshraj2717",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<long long> hq, vq;\n        long long hc = 1, vc = 1;\n        for (int i: horizontalCut)\n            hq.push(i);\n        for (int i: verticalCut)\n            vq.push(i);\n        long long ans = 0;\n        while (!hq.empty() && !vq.empty())\n        {\n            if (hq.top() > vq.top())\n            {\n                ans += hq.top() * vc;\n                hc++;\n                hq.pop();\n            }\n            else\n            {\n                ans += vq.top() * hc;\n                vc++;\n                vq.pop();\n            }\n        }\n        while (!hq.empty())\n        {\n            ans += hq.top() * vc;\n            hq.pop();\n        }\n        while (!vq.empty())\n        {\n            ans += vq.top() * hc;\n            vq.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926036",
    "subm_id": "1320274008"
}