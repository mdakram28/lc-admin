{
    "username": "abhi_8",
    "submission": "class Solution {\npublic:\n\n    unsigned long long nCr(int n, int r) {\n        if (r > n - r) {\n            r = n - r;\n        }\n        unsigned long long result = 1;\n        for (int i = 0; i < r; ++i) {\n            result *= (n - i);\n            result /= (i + 1);\n        }\n        return result;\n    }\n    \n    int waysToReachStair(int k) {\n        cout<<k<<endl;\n        int sum = 0;\n        int pow = 1;\n        int curr = 1;\n        int lb = 1;\n        int ans = 0;\n        if( curr + sum - lb <= k and curr + sum >= k )\n            ans++;\n        sum += pow;\n        pow *= 2;\n        lb += 1;\n        while( curr + sum - lb <= k )\n        {\n            if( curr + sum >= k )\n                ans += nCr( lb , curr + sum - k );\n            sum += pow;\n            pow *= 2;\n            lb += 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716090100",
    "subm_id": "1261859111"
}