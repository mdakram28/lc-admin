{
    "username": "sodacorsair",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int ans = 0, non = 0, n = colors.length;\n        for (int i = 1; i < k - 1; i++)\n        {\n            if (colors[i] == colors[i - 1] || colors[i] == colors[i + 1]) non++;\n        }\n        if (non == 0) ans++;\n        for (int i = 1; i < n; i++)\n        {\n            if (colors[i] == colors[prev(i, n)] || colors[i] == colors[next(i, n)]) non--;\n            int r = (i + k - 2 + n) % n;\n            if (colors[r] == colors[prev(r, n)] || colors[r] == colors[next(r, n)]) non++;\n            if (non == 0) ans++;\n        }\n        return ans;\n    }\n\n    private int prev(int idx, int n)\n    {\n        return (idx - 1 + n) % n;\n    }\n\n    private int next(int idx, int n)\n    {\n        return (idx + 1) % n;\n    }\n}",
    "submit_ts": "1720277932",
    "subm_id": "1311686674"
}