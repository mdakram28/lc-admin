{
    "username": "Balakrishnan Varadarajan",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m=board.size();\n        int n=board[0].size();\n        \n        vector<vector<int>> top3(m);\n        for(int i=0;i<m;i++) {\n            vector<pair<int,int>> curr_top3;\n            for(int j=0;j<n;j++) {\n                curr_top3.push_back({board[i][j],j});\n                if (curr_top3.size()>3) {\n                    sort(curr_top3.begin(),curr_top3.end(),greater<pair<int,int>>());\n                    curr_top3.pop_back();\n                }\n            }\n            sort(curr_top3.begin(),curr_top3.end(),greater<pair<int,int>>());\n            for(auto x : curr_top3) {\n                top3[i].push_back(x.second);\n            }\n        }\n        \n        ll ans = -(1ll<<60);\n        for(int i1=0;i1<m;i1++) {\n            for(int i2=i1+1;i2<m;i2++) {\n                for(int i3=i2+1;i3<m;i3++) {\n                    \n                    ll curr_best = (ll)board[i1][top3[i1][0]]+(ll)board[i2][top3[i2][0]]+(ll)board[i3][top3[i3][0]];\n                    if (curr_best <= ans) continue;\n                    \n                    set<vector<int>> visited;\n                    set<pair<ll,vector<int>>> Q;\n                    Q.insert({-curr_best,{0,0,0}});\n                    \n                    while(!Q.empty()) {\n                        auto it = Q.begin();\n                        vector<int> ids = it->second;\n                        ll v = it->first;\n                        if (-v <= ans) break;\n                        Q.erase(it);\n                        if (visited.find(ids)!=visited.end()) continue;\n                        visited.insert(ids);\n                        int k1=ids[0];\n                        int k2=ids[1];\n                        int k3=ids[2];\n                        int j1=top3[i1][k1];\n                        int j2=top3[i2][k2];\n                        int j3=top3[i3][k3];\n                        if (j1!=j2 && j1!=j3 && j2!=j3) {\n                            ans = max(ans, -v);\n                            break;\n                        }\n                        \n                        for(int d=0;d<3;d++) {\n                            int nk1=k1;\n                            int nk2=k2;\n                            int nk3=k3;\n                            if (d==0) nk1++;\n                            if (d==1) nk2++;\n                            if (d==2) nk3++;\n                            if (nk1==top3[i1].size() || nk2==top3[i2].size() || nk3==top3[i3].size()) continue;\n                            ll curr = (ll)board[i1][top3[i1][nk1]]+(ll)board[i2][top3[i2][nk2]]+(ll)board[i3][top3[i3][nk3]];\n                            Q.insert({-curr, {nk1,nk2,nk3}});\n                        }\n                        \n                    }\n                    \n                }\n            }\n        }\n        return ans;\n        \n        \n        \n    }\n};",
    "submit_ts": "1723908082",
    "subm_id": "1359137377"
}