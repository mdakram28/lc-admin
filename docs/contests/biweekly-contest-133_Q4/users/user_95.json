{
    "username": "hxu10",
    "submission": "class Solution(object):\n    def numberOfPermutations(self, n, requirements):\n        \"\"\"\n        :type n: int\n        :type requirements: List[List[int]]\n        :rtype: int\n        \"\"\"\n        req = requirements\n        m = max([req[i][1] for i in range(len(req))])\n        \n      #  print(m)\n        \n        nums = [-1]*(n+1)\n        \n        \n        \n        for [index, r] in req:\n            if nums[index] >= 0 and nums[index]!=r:\n                return 0\n            nums[index] = r\n            \n        \n            \n            \n        \n        \n        dp = [[0 for _ in range(m+2)] for _ in range(n+1)]\n        accudp = [[0 for _ in range(m+2)] for _ in range(n+1)]\n        \n        M = 10**9 + 7\n        \n        dp[-1][0] = 1\n        for j in range(m+1):\n            accudp[-1][j] = 1\n        \n        for i in range(n):\n            if nums[i] >= 0:\n                target = [nums[i]]\n            else:\n                target = [j for j in range(m+1)]\n                \n                \n           # print(target)\n                \n            \n            \n            for j in target:\n                dp[i][j] = (accudp[i-1][j] - accudp[i-1][max(j-i-1,-1)])%M\n                \n            for j in range(m+1):\n                accudp[i][j] = accudp[i][j-1] + dp[i][j]\n                accudp[i][j] %= M\n                \n                \n                \n        #print(dp)\n        #print(accudp)\n                \n                \n        return dp[n-1][nums[n-1]] % M\n    \n\n                \n                \n        \n        \n    \n        \n            \n        ",
    "submit_ts": 1719068600.0
}