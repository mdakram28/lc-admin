{
    "username": "xiuyu130",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        const int m = board.size(), n = board[0].size();\n\n        long ans = calculate(board);\n        // cout << ans << endl << endl;\n        for (int i1 = 0, i2 = m - 1; i1 < i2; ++i1, --i2)\n            for (int j = 0; j < n; ++j)\n                swap(board[i1][j], board[i2][j]);\n        return max(ans, calculate(board));\n    }\nprivate:\n    long calculate(const vector<vector<int>>& board) {\n        const int m = board.size(), n = board[0].size();    \n        long ans = LONG_MIN;\n        vector<vector<long>> dp(n, vector<long>(4, LONG_MIN / 2));\n        vector<int> cols(n);\n        for (int i = 0; i < n; ++i)\n            dp[i][1] = board[0][i], dp[i][0] = 0;\n\n        for (int i = 1; i < m; ++i) {\n            vector<vector<long>> tmp(n, vector<long>(4, LONG_MIN / 2));\n            for (int j = 0; j < n; ++j)\n                tmp[j][0] = 0;\n            vector<int> tmpCols(n);\n            int k = 1;\n            int maxi = -1, smaxi = -1;\n            for (int j = 0; j < n; ++j)\n                if (maxi == -1 || dp[j][k] > dp[maxi][k])\n                    smaxi = maxi, maxi = j;\n                else if (smaxi == -1 || dp[j][k] > dp[smaxi][k])\n                    smaxi = j;\n            for (int j = 0; j < n; ++j)\n                if (j == maxi) {\n                    tmp[j][k + 1] = dp[smaxi][k] + board[i][j];\n                    tmpCols[j] = smaxi;\n                }\n                else {\n                    tmp[j][k + 1] = dp[maxi][k] + board[i][j];\n                    tmpCols[j] = maxi;\n                }\n            for (int curr = 0; curr < n; ++curr)\n                for (int prev = 0; prev < n; ++prev)\n                    if (curr != prev && curr != cols[prev] && dp[prev][2] + board[i][curr] > tmp[curr][3])\n                        tmp[curr][3] = dp[prev][2] + board[i][curr];\n\n            for (int j = 0; j < n; ++j)\n                tmp[j][1] = max((long)board[i][j], dp[j][1]);\n            for (int j = 0; j < n; ++j)\n                if (dp[j][2] > tmp[j][2])\n                    tmp[j][2] = dp[j][2], tmpCols[j] = cols[j];\n            for (int j = 0; j < n; ++j)\n                if (dp[j][3] > tmp[j][3])\n                    tmp[j][3] = dp[j][3];\n            dp = move(tmp);\n            cols = move(tmpCols);\n            // for (const auto& r: dp) {\n            //     for (const int x: r)\n            //         cout << x << \" \";\n            //     cout << endl;\n            // }\n            // cout << endl;\n        }\n        for (int j = 0; j < n; ++j)\n            if (dp[j][3] > ans) ans = dp[j][3];\n        return ans;\n    }\n};",
    "submit_ts": "1723909538",
    "subm_id": "1359196349"
}