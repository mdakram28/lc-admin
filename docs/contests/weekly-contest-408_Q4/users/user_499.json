{
    "username": "pandeypriyansh408",
    "submission": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\nfunc bfs(graph [][]int, start, target1, target2, nodes int) bool {\n\tqueue := []int{start}\n\tvisited := make([]bool, nodes+4)\n\tvisited[start] = true\n\n\tfor len(queue) > 0 {\n\t\tu := queue[0]\n\t\tqueue = queue[1:]\n\t\tfor _, v := range graph[u] {\n\t\t\tif !visited[v] {\n\t\t\t\tqueue = append(queue, v)\n\t\t\t\tvisited[v] = true\n\t\t\t}\n\t\t}\n\t}\n\treturn visited[target1] || visited[target2]\n}\n\nfunc canReachCorner(X int, Y int, circles2 [][]int) bool {\n\tnumCircles := len(circles2)\n\tcircles := make([]struct {\n\t\tx, y, r int\n\t}, numCircles)\n\n\tgraph := make([][]int, numCircles+4)\n\n\tfor i := 0; i < numCircles; i++ {\n\t\tcircles[i].x = circles2[i][0]\n\t\tcircles[i].y = circles2[i][1]\n\t\tcircles[i].r = circles2[i][2]\n\t}\n\n\tfor i := 0; i < numCircles; i++ {\n\t\tif circles[i].x <= circles[i].r {\n\t\t\tgraph[numCircles] = append(graph[numCircles], i)\n\t\t\tgraph[i] = append(graph[i], numCircles)\n\t\t}\n\t\tif X-circles[i].x <= circles[i].r {\n\t\t\tgraph[numCircles+2] = append(graph[numCircles+2], i)\n\t\t\tgraph[i] = append(graph[i], numCircles+2)\n\t\t}\n\t\tif circles[i].y <= circles[i].r {\n\t\t\tgraph[numCircles+1] = append(graph[numCircles+1], i)\n\t\t\tgraph[i] = append(graph[i], numCircles+1)\n\t\t}\n\t\tif Y-circles[i].y <= circles[i].r {\n\t\t\tgraph[numCircles+3] = append(graph[numCircles+3], i)\n\t\t\tgraph[i] = append(graph[i], numCircles+3)\n\t\t}\n\t\tfor j := i + 1; j < numCircles; j++ {\n\t\t\tdistance := math.Sqrt(math.Pow(float64(circles[i].x-circles[j].x), 2) +\n\t\t\t\tmath.Pow(float64(circles[i].y-circles[j].y), 2))\n\t\t\tradiusSum := circles[i].r + circles[j].r\n\t\t\tif float64(radiusSum) >= distance {\n\t\t\t\tgraph[i] = append(graph[i], j)\n\t\t\t\tgraph[j] = append(graph[j], i)\n\t\t\t}\n\t\t}\n\t}\n\n\tisBlocked := 0\n\tif bfs(graph, numCircles, numCircles+1, numCircles+2, numCircles+4) {\n\t\tisBlocked = 1\n\t}\n\tif bfs(graph, numCircles+3, numCircles+2, numCircles+1, numCircles+4) {\n\t\tisBlocked = 1\n\t}\n\treturn isBlocked == 0\n}\n",
    "submit_ts": "1722137941",
    "subm_id": "1335777824"
}