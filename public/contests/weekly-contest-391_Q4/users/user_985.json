{
    "username": "akhil_rautela",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sum(n), diff(n);\n        map <int, set<int>> sumC, diffC;\n        for (int i = 0; i < n; i++) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n            sumC[sum[i]].insert(i);\n            diffC[diff[i]].insert(i);\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        set<int> toRemove;\n        for (int i = 0; i < n; i++) {\n            int hereSum = points[i][0] + points[i][1];\n            int hereDiff= points[i][0] - points[i][1];\n            if (sum[0] == hereSum || sum[n - 1] == hereSum) {\n                toRemove.insert(i);\n            }\n            if (diff[0] == hereDiff || diff[n - 1] == hereDiff) {\n                toRemove.insert(i);\n            }\n        }\n        int ans = INT_MAX;\n        for (auto z : toRemove) {\n            \n            int sumHere = points[z][0] + points[z][1];\n            int diffHere = points[z][0] - points[z][1];\n            \n            sumC[sumHere].erase(z);\n            diffC[diffHere].erase(z);\n            \n            if (sumC[sumHere].size() == 0) sumC.erase(sumHere);\n            if (diffC[diffHere].size() == 0) diffC.erase(diffHere);\n            \n            auto firstSum = sumC.begin();\n            auto lastSum = sumC.end();\n            auto firstDiff = diffC.begin();\n            auto lastDiff = diffC.end();\n            lastSum --;\n            lastDiff --;\n            \n            ans = min(ans, max(lastSum -> first - firstSum -> first, lastDiff -> first - firstDiff -> first));\n            \n            \n            sumC[sumHere].insert(z);\n            diffC[diffHere].insert(z);\n        }\n        return ans;\n    }\n};"
}