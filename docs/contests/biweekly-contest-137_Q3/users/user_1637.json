{
    "username": "ashish0907",
    "submission": "#include <vector>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        vector<vector<pair<int, int>>> topValues(m); // {value, column} for each row\n\n        // Get top 3 values from each row\n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> rowValues; // {value, column}\n            for (int j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n            sort(rowValues.rbegin(), rowValues.rend()); // Sort in descending order\n            // Store top 3 values for each row (or less if n < 3)\n            for (int k = 0; k < min(3, n); ++k) {\n                topValues[i].push_back(rowValues[k]);\n            }\n        }\n\n        long long maxSum = LLONG_MIN; // Initialize the maximum sum\n\n        // Try all combinations of top values from three different rows\n        for (int row1 = 0; row1 < m; ++row1) {\n            for (int row2 = row1 + 1; row2 < m; ++row2) {\n                for (int row3 = row2 + 1; row3 < m; ++row3) {\n                    // Check all combinations of top values in these rows\n                    for (auto [val1, col1] : topValues[row1]) {\n                        for (auto [val2, col2] : topValues[row2]) {\n                            if (col1 == col2) continue; // Skip if columns are the same\n                            for (auto [val3, col3] : topValues[row3]) {\n                                if (col1 == col3 || col2 == col3) continue; // Skip if columns are the same\n                                // Calculate the sum\n                                long long currentSum = (long long)val1 + val2 + val3;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723908714",
    "subm_id": "1359164149"
}