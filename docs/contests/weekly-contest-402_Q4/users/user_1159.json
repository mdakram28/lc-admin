{
    "username": "nitinsrichakri",
    "submission": "class Solution {\npublic:\n    vector<int> a;int N,n;\n    //p=1,lol=N,s,e,ps=1,pe=n\n    int query(int p,int lol,int s,int e,int ps,int pe)\n    {\n        if(pe<=e && ps>=s)return a[p];\n        if(pe<s || ps>e)return 0;\n        int m=ps+lol/2-1;\n        return (query(p*2,lol/2,s,e,ps,m)+query(p*2+1,lol/2,s,e,m+1,pe));\n    }\n    //p=1,lol=N,ps=1,pe=n,d=destination,x=value\n    int pointupdate(int p,int lol,int ps,int pe,int d,int x)\n    {\n        if(pe<d || ps>d)return a[p];\n        if(lol==1)return a[p]=x;\n        else return a[p]=(pointupdate(p*2,lol/2,ps,ps+lol/2-1,d,x)+pointupdate(p*2+1,lol/2,ps+lol/2,pe,d,x));\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n=nums.size();\n        N=n;\n        if(N & (N - 1))N=0x8000000000000000 >> (__builtin_clzll(N) - 1);\n        a=vector<int>(N*2,0);\n        for(int i=1;i<=n;i++)\n        {\n            if(i==1||i==n)a[N+i-1]=0;\n            else a[N+i-1]=(nums[i-1]>nums[i-2] && nums[i-1]>nums[i]);\n        }\n        for(int i=N-1;i>=1;i--)a[i]=(a[2*i]+a[2*i+1]);\n        vector<int> ams;\n            // for(int i=1;i<=n;i++)cout << nums[i-1] << \" \";\n            // cout << endl;\n            // for(int i=1;i<=n;i++)cout << a[N+i-1] << \" \";\n            // cout << endl;            cout << endl;\n\n        for(auto q:queries)\n        {\n            if(q[0]==1)\n            {\n                int ans=0;\n                // cout << q[1]+2 << \" \" << q[2] << endl;\n                ans+=query(1,N,q[1]+2,q[2],1,n);\n                ams.push_back(ans);\n            }\n            else\n            {\n                nums[q[1]]=q[2];\n                if(q[1]>1 && q[1]<n)pointupdate(1,N,1,n,q[1],(nums[q[1]-1]>nums[q[1]-2] && nums[q[1]-1]>nums[q[1]]));   \n                // if(q[1]>1 && q[1]<n)cout << nums[q[1]-2] << \" \" << nums[q[1]-1] << \" \" << nums[q[1]] << endl;\n\n                if(q[1]+1>1 && q[1]+1<n)pointupdate(1,N,1,n,q[1]+1,(nums[q[1]]>nums[q[1]-1] && nums[q[1]]>nums[q[1]+1]));\n                if(q[1]+2>1 && q[1]+2<n)pointupdate(1,N,1,n,q[1]+2,(nums[q[1]+1]>nums[q[1]] && nums[q[1]+1]>nums[q[1]+2]));\n            }\n            // for(int i=1;i<=n;i++)cout << nums[i-1] << \" \";\n            // cout << endl;\n            // for(int i=1;i<=n;i++)cout << a[N+i-1] << \" \";\n            // cout << endl;cout << endl;\n\n        }\n        return ams;\n    }\n};\n// [9,7,5,8,9]\n// [[2,0,2],[1,0,3],[1,3,3],[2,3,5]] 10\n// [3,1,4,2,5]\n// [[2,3,4],[1,0,4]]\n// [4,1,4,2,1,5]\n// [[2,2,4],[1,0,2],[1,0,4]]\n// [6,7,4]\n// [[1,2,2],[2,2,8],[1,0,2],[1,1,1],[1,0,0]] 0000\n\n// [7,9,9,8,3,8,9]\n// [[2,2,6],[2,3,2],[2,4,3],[1,0,3]] 1",
    "submit_ts": 1718508490.0
}