{
    "username": "Fremder",
    "submission": "vector<int> g[100005],dis(100005);\nclass Solution {\npublic:\n    void dfs(int node,int par = -1){\n        for(auto &x:g[node]){\n            if(x==par) continue;\n            dis[x] = 1+dis[node];\n            dfs(x,node);\n        }\n    }\n    int dia(vector<vector<int>>& grp){\n        for(int i=0;i<=grp.size();i++) g[i].clear();\n        for(auto &x:grp){\n            g[x[0]].push_back(x[1]);\n            g[x[1]].push_back(x[0]);\n        }\n        for(int i=0;i<=grp.size();i++) dis[i] = 0;\n        dfs(1);\n        int trg,mx = 0;\n        for(int i=0;i<=grp.size();i++){\n            if(mx<dis[i]){\n                mx = dis[i];\n                trg = i;\n            }\n        }\n        for(int i=0;i<=grp.size();i++) dis[i] = 0;\n        dfs(trg);\n        mx = 0;\n        for(int i=0;i<=grp.size();i++){\n            if(mx<dis[i]){\n                mx = dis[i];\n            }\n        }\n        return mx;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int diam1 = dia(edges1);\n        int diam2 = dia(edges2);\n        // cout << diam1 << \" \" << diam2 << endl;\n        int ans = (diam1+1)/2 + (diam2+1)/2;\n        ans++;\n        ans = max(ans,diam1);\n        ans = max(ans,diam2);\n        return ans;\n    }\n};",
    "submit_ts": "1719717077",
    "subm_id": "1304381826"
}