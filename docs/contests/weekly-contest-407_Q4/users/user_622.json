{
    "username": "light-nh",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int []diff = new int[n];\n        for (int i = 0; i < n; i++) diff[i] = target[i] - nums[i];\n        long ans = 0;\n        int pre = 0;\n        long curans = Math.abs(diff[0]);\n        for(int i = 1; i < n; i++){\n            if(diff[i] >= 0){\n                if(diff[i - 1] >= 0){\n                    if(diff[i] > diff[i - 1]) curans += (diff[i] - diff[i - 1]);\n                }else {\n                    ans += curans;\n                    curans = Math.abs(diff[i]);\n                }\n            }else {\n                if(diff[i - 1] < 0){\n                    if(diff[i - 1] - diff[i] > 0) curans += (diff[i - 1] - diff[i] );\n                }else {\n                    ans += curans;\n                    curans = Math.abs(diff[i]);\n                }\n            }\n        }\n        ans += curans;\n        return ans;\n    }\n}",
    "submit_ts": "1721531268",
    "subm_id": "548384203"
}