{
    "username": "Maximus8597",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sum(n), diff(n);\n        for(int i = 0; i < n; i++)  {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        int minMaxDist = INT_MAX;\n        for(int i = 0; i < n; i++) {\n            int currSum = points[i][0] + points[i][1];\n            int currDiff = points[i][0] - points[i][1];\n            int l1 = 0, r1 = n - 1, l2 = 0, r2 = n - 1;\n            if(currSum == sum[l1]) l1++;\n            else if(currSum == sum[r1]) r1--;\n            if(currDiff == diff[l2]) l2++;\n            else if(currDiff == diff[r2]) r2--;\n            int maxDist = max(sum[r1] - sum[l1], diff[r2] - diff[l2]);\n            minMaxDist = min(minMaxDist, maxDist);\n        }\n        return minMaxDist;\n    }\n};"
}