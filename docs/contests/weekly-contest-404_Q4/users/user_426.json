{
    "username": "Golu-bhai",
    "submission": "class Solution {\n    int mxd=0;\npublic:\n    int find(vector<vector<int>>&adj, vector<int>&in){\n        int n = adj.size();\n        // cout<<adj.size()<<\" \"<<in.size()<<endl;\n        queue<int>leaf;\n        for(int i=0;i<n;i++){\n            if(in[i]==1) {leaf.push(i); in[i]=-1;}\n            \n        }\n        if(n==1) return 0;\n        //cout<<leaf.size();\n        leaf.push(-1);\n        int cans=0;\n        set<int>st;\n        while(!leaf.empty()){\n            int cur = leaf.front();\n            leaf.pop();\n            if(cur==-1){\n                cans++;\n                for(auto i: st){\n                    // cout<<i<<\" in \"<<in[i]<<endl;\n                    if(in[i]==1 or in[i]==0) {leaf.push(i); in[i]=-1;}\n                }\n                st.clear();\n                int cs = leaf.size();\n                // cout<<cs<<\" \"<<cans<<endl;\n                if(cs<=1) {\n                    int cd = 2*(cans-1) +1;\n                \n                    if(cs==1) cd++;\n                    //cout<<cd<<endl;\n                    mxd=max(mxd, cd);\n                    break;\n                }\n                leaf.push(-1);\n                continue;\n            }\n            for(auto nxt : adj[cur]){\n                if(in[nxt]==-1) continue;\n                in[nxt]--;\n                if(in[nxt]==1) st.insert(nxt);\n            }\n        }\n        return cans;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int ne1 = edges1.size(), ne2 = edges2.size();\n        this->mxd=0;\n        vector<vector<int>>adj1(ne1+1), adj2(ne2 + 1);\n        vector<int>in1(ne1+1, 0), in2(ne2+1, 0);\n        for(auto it : edges1){\n            int a=it[0], b = it[1];\n            adj1[a].push_back(b);\n            adj1[b].push_back(a);\n            in1[a]++;\n            in1[b]++;\n        }\n        for(auto it : edges2){\n            int a=it[0], b = it[1];\n            adj2[a].push_back(b);\n            adj2[b].push_back(a);\n            in2[a]++;\n            in2[b]++;\n        }\n        int ch1 = find(adj1, in1), ch2= find(adj2, in2);\n        //cout<<ch1<<\" \"<<ch2<<endl;\n        return max(ch1+ch2+1, mxd);\n    }\n};",
    "submit_ts": "1719718604",
    "subm_id": "1304421475"
}