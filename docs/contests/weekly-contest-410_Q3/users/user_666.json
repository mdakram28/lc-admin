{
    "username": "suryasingh_30",
    "submission": "#include <vector>\n#include <cstring>\n\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int dp[2001][51][51]; \n\n    int countPairs(int i, int prev1, int prev2, const std::vector<int>& nums) {\n        int n = nums.size();\n        if (i == n) return 1; \n\n        if (dp[i][prev1][prev2] != -1) return dp[i][prev1][prev2];  \n\n        int count = 0;\n\n        for (int x = prev1; x <= nums[i]; ++x) {\n            int y = nums[i] - x;\n            if (y <= prev2) {\n                count = (count + countPairs(i + 1, x, y, nums)) % MOD;\n            }\n        }\n\n        return dp[i][prev1][prev2] = count;\n    }\n\n    int countOfPairs(std::vector<int>& nums) {\n        memset(dp, -1, sizeof(dp));  \n        return countPairs(0, 0, 50, nums);  \n    }\n};\n",
    "submit_ts": "1723344397",
    "subm_id": "1351533483"
}