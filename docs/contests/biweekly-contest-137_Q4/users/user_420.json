{
    "username": "lime1900",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        int[][] nums = new int[m * n][3];\n        for (int i = 0; i < m; i++){\n            for (int j = 0; j < n; j++){\n                nums[i * n + j] = new int[]{board[i][j], i, j};\n            }\n        }\n        Arrays.sort(nums, (a, b) -> b[0] - a[0]);\n        long max = Long.MIN_VALUE;\n        for (int first = 0; first < m * n; first++){\n            for (int second = first + 1; second < m * n; second++){\n                if(nums[first][1] == nums[second][1] || nums[first][2] == nums[second][2]){\n                    continue;\n                }\n                if(max > (long) nums[first][0] + nums[second][0] + nums[second][0]){\n                    break;\n                }\n                for (int third = second + 1; third < m * n; third++) {\n                    if (nums[first][1] == nums[third][1] || nums[first][2] == nums[third][2] || nums[second][1] == nums[third][1] || nums[second][2] == nums[third][2]) {\n                        continue;\n                    }\n                    if(max > (long) nums[first][0] + nums[second][0] + nums[third][0]){\n                        break;\n                    }\n                    max = Math.max(max, (long) nums[first][0] + nums[second][0] + nums[third][0]);\n                }\n            }\n        }\n        return max;\n\n    }\n}",
    "submit_ts": "1723909013",
    "subm_id": "556334040"
}