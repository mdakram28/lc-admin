{
    "username": "bai-guo-zi",
    "submission": "class Solution {\n    private int cal(List<int[]> points) \n    {\n        int n = points.size();\n        List<int[]>[] p = new List[4];\n        for (int i = 0; i < 4; i++) {\n            p[i] = new ArrayList<>();\n        }\n        for (int i = 0; i < n; i++) {\n            int xi = points.get(i)[0];\n            int yi = points.get(i)[1];\n            p[0].add(new int[]{xi + yi, i});\n            p[1].add(new int[]{-xi + yi, i});\n            p[2].add(new int[]{xi - yi, i});\n            p[3].add(new int[]{-xi - yi, i});\n        }\n        for (int i = 0; i < 4; i++) {\n            p[i].sort((a, b) -> Integer.compare(a[0], b[0]));\n        }\n\n        int mx = 0;\n        int pos1 = 0, pos2 = 0;\n        for (int i = 0; i < 4; i++) {\n            int tmp = p[i].get(p[i].size() - 1)[0] - p[i].get(0)[0];\n            if (tmp > mx) {\n                mx = tmp;\n                pos1 = p[i].get(p[i].size() - 1)[1];\n                pos2 = p[i].get(0)[1];\n            }\n        }\n        return mx;\n    }\n    \n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        List<int[]>[] p = new List[4];\n        for (int i = 0; i < 4; i++) {\n            p[i] = new ArrayList<>();\n        }\n        for (int i = 0; i < n; i++) {\n            int xi = points[i][0];\n            int yi = points[i][1];\n            p[0].add(new int[]{xi + yi, i});\n            p[1].add(new int[]{-xi + yi, i});\n            p[2].add(new int[]{xi - yi, i});\n            p[3].add(new int[]{-xi - yi, i});\n        }\n        for (int i = 0; i < 4; i++) {\n            p[i].sort((a, b) -> Integer.compare(a[0], b[0]));\n        }\n\n        int mx = 0;\n        int pos1 = 0, pos2 = 0;\n        for (int i = 0; i < 4; i++) {\n            int tmp = p[i].get(p[i].size() - 1)[0] - p[i].get(0)[0];\n            if (tmp > mx) {\n                mx = tmp;\n                pos1 = p[i].get(p[i].size() - 1)[1];\n                pos2 = p[i].get(0)[1];\n            }\n        }\n\n        List<int[]> pointsList1 = new ArrayList<>(Arrays.asList(points));\n        pointsList1.remove(pos1);\n        mx = Math.min(mx, cal(pointsList1));\n\n        List<int[]> pointsList2 = new ArrayList<>(Arrays.asList(points));\n        pointsList2.remove(pos2);\n        mx = Math.min(mx, cal(pointsList2));\n\n        return mx;\n    }\n}\n"
}