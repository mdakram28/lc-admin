{
    "username": "Chandrachur M",
    "submission": "using pi = pair<int, int>;\nusing ll = long long;\n\nclass Solution {\npublic:\n  long long maximumValueSum(vector<vector<int>>& board) {\n    int n = (int)board.size(), m = (int)board[0].size();\n    vector<vector<pair<int, int>>> vec(m);\n    for(int j = 0; j < m; j++) {\n      priority_queue<pi, vector<pi>, greater<pi>> pq;\n      for(int i = 0; i < n; i++) {\n        pq.push({board[i][j], i});\n        if(pq.size() > 3) {\n          pq.pop();\n        }\n      }\n      while(!pq.empty()) {\n        auto it = pq.top();\n        pq.pop();\n        vec[j].push_back(it);\n      }\n    }\n    \n    ll res = -1e18;\n    for(int j1 = 0; j1 < m; j1++) {\n      for(int j2 = j1 + 1; j2 < m; j2++) {\n        for(int j3 = j2 + 1; j3 < m; j3++) {\n          \n          for(int k1 = 0; k1 < 3; k1++) {\n            for(int k2 = 0; k2 < 3; k2++) {\n              for(int k3 = 0; k3 < 3; k3++) {\n                int r1 = vec[j1][k1].second;\n                int r2 = vec[j2][k2].second;\n                int r3 = vec[j3][k3].second;\n                \n                if(r1 != r2 && r2 != r3 && r3 != r1) {\n                  res = max(res, 0ll + vec[j1][k1].first + vec[j2][k2].first + vec[j3][k3].first);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return res;\n  }\n};",
    "submit_ts": "1723907116",
    "subm_id": "1359090888"
}