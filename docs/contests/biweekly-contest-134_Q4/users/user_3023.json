{
    "username": "user2686xi",
    "submission": "class Solution { \n\npublic: \n\n    long long countSubarrays(vector<int>& nums, int k) { \n\n        int n = nums.size(); \n\n        long long count = 0; \n\n         \n\n        unordered_map<long long, long long> prevResults; \n\n \n\n        for (int i = 0; i < n; ++i) { \n\n            unordered_map<long long, long long> currResults;  \n\n \n\n            if (nums[i] == k) { \n\n                ++count; \n\n            } \n\n            currResults[nums[i]] = 1; \n\n \n\n            for (auto& [val, freq] : prevResults) { \n\n                long long newAndResult = val & nums[i]; \n\n                if (newAndResult == k) { \n\n                    count += freq; \n\n                } \n\n                currResults[newAndResult] += freq; \n\n            } \n\n             \n\n            prevResults = currResults; \n\n        } \n\n         \n\n        return count; \n\n    } \n\n};\n\n\n\n\n       \n   \n",
    "submit_ts": "1720280804",
    "subm_id": "1311802637"
}