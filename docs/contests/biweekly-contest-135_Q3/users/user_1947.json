{
    "username": "VeXe1199",
    "submission": "class Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> mp;\n        vector<int> vec;\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int diff = abs(nums[i] - nums[n-i-1]);\n            int maxi1 = max(nums[i], k - nums[i]);\n            int maxi2 = max(nums[n-i-1], k - nums[n-i-1]);\n            \n            mp[diff]++;\n            vec.push_back(max(maxi1, maxi2));\n        }\n        \n        sort(vec.begin(), vec.end());\n        \n        int ans = n / 2;\n        \n        for (auto i : mp) {\n            int changes = n / 2 - i.second;\n            int extra = 0;\n            for (int j = 0; j < vec.size(); ++j) {\n                if (vec[j] >= i.first) {\n                    extra = j;\n                    break;\n                }\n            }\n            if (extra == 0 && vec.back() < i.first) {\n                extra = vec.size();\n            }\n            ans = min(ans, changes + extra);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721489975",
    "subm_id": "1327469355"
}