{
    "username": "ayushjitendra28",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n    long long h = 0ll, v = 0ll;\n    long long horizontalPieces = 1ll, verticalPieces = 1ll;\n    long long totalCost = 0ll;\n\n \n    while (h < horizontalCut.size() && v < verticalCut.size()) {\n        if (horizontalCut[h] > verticalCut[v]) {\n            totalCost += horizontalCut[h] * verticalPieces;\n            horizontalPieces++;\n            h++;\n        } else {\n            totalCost += verticalCut[v] * horizontalPieces;\n            verticalPieces++;\n            v++;\n        }\n    }\n\n \n    while (h < horizontalCut.size()) {\n        totalCost += horizontalCut[h] * verticalPieces;\n        h++;\n    }\n\n  \n    while (v < verticalCut.size()) {\n        totalCost += verticalCut[v] * horizontalPieces;\n        v++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720924553",
    "subm_id": "1320221260"
}