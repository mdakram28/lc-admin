{
    "username": "miscsb",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode trie = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            trie.insert(words[i].toCharArray(), costs[i], 0);\n        }\n        int[] dp = new int[target.length() + 1];\n        for (int i = 1; i < dp.length; i++) dp[i] = Integer.MAX_VALUE / 2;\n        for (int i = 0; i < target.length(); i++) {\n            TrieNode node = trie.get(target.charAt(i));\n            if (node == null) continue;\n            if (node.match()) dp[i+1] = Math.min(dp[i+1], dp[i] + node.cost());\n            for (int j = i + 1; j < target.length(); j++) {\n                node = node.get(target.charAt(j));\n                if (node == null) break;\n                if (node.match()) dp[j+1] = Math.min(dp[j+1], dp[i] + node.cost());\n            }\n        }\n        return dp[target.length()] == Integer.MAX_VALUE / 2 ? -1 : dp[target.length()];\n    }\n}\n\nclass TrieNode {\n    TrieNode[] next;\n    boolean terminal;\n    int cost = Integer.MAX_VALUE;\n\n    public void insert(char[] s, int cost, int i) {\n        if (i == s.length) { this.terminal = true; this.cost = Math.min(cost, this.cost); }\n        else {\n            char at = s[i];\n            if (next == null) next = new TrieNode[26];\n            if (next[at - 'a'] == null) next[at - 'a'] = new TrieNode();\n            next[at - 'a'].insert(s, cost, i+1);\n        }\n    }\n\n    public TrieNode get(char c) {\n        if (next == null) return null;\n        return next[c - 'a'];\n    }\n\n    public boolean match() {\n        return this.terminal;\n    }\n\n    public int cost() {\n        return this.cost;\n    }\n}\n",
    "submit_ts": "1720322813",
    "subm_id": "1312359774"
}