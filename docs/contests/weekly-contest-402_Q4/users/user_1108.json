{
    "username": "nhienle94",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        newNums = [0] * n\n        for i in range(1, n - 1):\n            if nums[i - 1] < nums[i] > nums[i + 1]:\n                newNums[i] = 1\n        \n        numArray = NumArray(newNums)\n        ans = []\n        \n        for query in queries:\n            if query[0] == 1:\n                l, r = query[1], query[2]\n                result = numArray.sumRange(l + 1, r - 1)\n                ans.append(max(result, 0))\n            else:\n                index, val = query[1], query[2]\n                nums[index] = val\n                for i in [index - 1, index, index + 1]:\n                    if 0 < i < n - 1:\n                        new_val = 1 if nums[i - 1] < nums[i] > nums[i + 1] else 0\n                        numArray.update(i, new_val)\n                                    \n        return ans\n\n\nclass NumArray:\n    def findRSB(self, i):\n        return i & -i\n\n    def __init__(self, nums: List[int]):\n        self.n = len(nums) + 1\n        self.nums = [0] + nums\n        self.tree = [0 for i in range(self.n)]\n        \n        \n        for i in range(1, self.n):\n            self.tree[i] = self.nums[i]\n            \n        for child in range(1, self.n):\n            parent = child + self.findRSB(child)\n            if parent < self.n:\n                self.tree[parent] += self.tree[child]\n        \n\n    def update(self, index: int, val: int) -> None:\n        index += 1\n        toAdd = val - self.nums[index]\n        self.nums[index] = val\n        i = index\n        while i < self.n:\n            self.tree[i] += toAdd\n            i += self.findRSB(i)\n        \n\n    def prefixSum(self, i):\n        ans = 0\n        while i != 0:\n            ans += self.tree[i]\n            i -= self.findRSB(i)\n            \n        return ans\n    \n    def sumRange(self, left: int, right: int) -> int:\n        return self.prefixSum(right + 1) - self.prefixSum(left)",
    "submit_ts": 1718508660.0
}