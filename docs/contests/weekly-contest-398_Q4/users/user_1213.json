{
    "username": "shannonl",
    "submission": "using LL = long long;\n// using Arr = array< array<LL, 2>, 31>;\nclass Solution {\npublic:\n    \n    int waysToReachStair(int k) {\n        LL ans = 0;\n        \n        for (int j=0; j<=30; j++) {\n            for (int flag = 0; flag <=1; flag++) {\n                ans += f(k, j, flag);\n                // if (f(k, j, flag) > 0) {\n                //     cout << k <<\" \" << j << \" \" << flag << \" : \" << f(k, j, flag) << endl;\n                // }\n            }\n        }\n        \n        return ans;\n    }\n    unordered_map<LL, unordered_map<int, unordered_map<int, LL> > > mp;\n    int f(LL k, int jump, bool lastStepJumpBack) {\n        if (k < 0) return 0;\n        if (k == 0 && jump ==0 && lastStepJumpBack) return 1;\n        if (k == 0 && jump ==1 && lastStepJumpBack) return 1;\n        if (k == 0) return 0;\n        if (jump<0) return 0;\n        if (jump == 0 && k == 0 && lastStepJumpBack) return 1;\n        if (k == 1 && (jump == 0) && !lastStepJumpBack) return 1;\n        if (jump == 0)  return 0;\n        \n        auto it = mp.find(k);\n        if (it != mp.end()) {\n            auto& mp2 = it->second;\n            auto it2 = mp2.find(jump);\n            if (it2 != mp2.end()) {\n                auto&mp3 = it2->second;\n                auto it3 = mp3.find(lastStepJumpBack);\n                if (it3 != mp3.end()) return it3->second;\n            }\n        }\n        \n        \n        LL ans = 0;\n        // if (jump > 0) {\n        //     ans += f( k- (1<<(jump-1)) ,jump-1, true );\n        //     ans += f( k- (1<<(jump-1)) ,jump-1, false );\n        // }\n        if (lastStepJumpBack) {\n            ans += f(k+1, jump, false);\n        } else {\n            if (jump > 0) {\n                ans += f( k- (1<<(jump-1)) ,jump-1, true );\n                ans += f( k- (1<<(jump-1)) ,jump-1, false );\n            }\n        }\n        mp[k][jump][lastStepJumpBack] = ans;\n        return ans;\n    }\n};",
    "submit_ts": 1716090488.0
}