{
    "username": "wzmw-zr",
    "submission": "func countOfPeaks(nums []int, queries [][]int) []int {\n  n := len(nums)\n  bit := BIT{}\n  bit.Init(n)\n  for i := 0; i < n; i++ {\n    if isPeak(nums, i) {\n      bit.Add(i + 1, 1)\n    }\n  }\n  ans := make([]int, 0)\n  for _, q := range queries {\n    if q[0] == 1 {\n      l, r := q[1], q[2]\n      cnt := bit.Query(r + 1) - bit.Query(l)\n      if isPeak(nums, l) {\n        cnt--\n      }\n      if isPeak(nums, r) {\n        cnt--\n      }\n      if isPeak(nums, l) && l == r {\n        cnt++\n      }\n      ans = append(ans, cnt)\n    } else {\n      idx, val := q[1], q[2]\n      if isPeak(nums, idx) {\n        bit.Add(idx + 1, -1)\n      }\n      if idx > 0 && isPeak(nums, idx - 1) {\n        bit.Add(idx, -1)\n      }\n      if idx < n - 1 && isPeak(nums, idx + 1) {\n        bit.Add(idx + 2, -1)\n      }\n      nums[idx] = val\n      if isPeak(nums, idx) {\n        bit.Add(idx + 1, 1)\n      }\n      if idx > 0 && isPeak(nums, idx - 1) {\n        bit.Add(idx, 1)\n      }\n      if idx < n - 1 && isPeak(nums, idx + 1) {\n        bit.Add(idx + 2, 1)\n      }\n    }\n  }\n  return ans\n}\n\nfunc isPeak(nums []int, idx int) bool {\n  n := len(nums)\n  if idx == 0 || idx == n - 1 {\n    return false\n  }\n  return (nums[idx] > nums[idx - 1]) && (nums[idx] > nums[idx + 1])\n}\n\n\ntype BIT struct {\n  n int\n  vals []int\n}\n\nfunc (b *BIT) Init(n int) {\n  b.n = n\n  b.vals = make([]int, n + 10)\n}\n\nfunc (b *BIT) Add(idx int, val int) {\n  for idx <= b.n {\n    b.vals[idx] += val\n    idx += lowbit(idx)\n  }\n}\n\nfunc (b *BIT) Query(idx int) int {\n  ans := 0\n  for idx > 0 {\n    ans += b.vals[idx]\n    idx -= lowbit(idx)\n  }\n  return ans\n}\n\nfunc lowbit(val int) int {\n  return val & (val * -1)\n}\n\n",
    "submit_ts": "1718508470",
    "subm_id": "539787496"
}