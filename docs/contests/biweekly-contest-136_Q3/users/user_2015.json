{
    "username": "tlecodes",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size(), cols = grid[0].size(), ans = 0;\n        vector<int> count(3, 0);\n        if ((rows & 1) && (cols & 1)) {\n            if (grid[rows / 2][cols / 2])\n                ans++;\n        }\n        if (rows & 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sm = grid[rows / 2][left] + grid[rows / 2][right];\n                count[sm] += 1;\n                left++;\n                right--;\n            }\n        }\n        if (cols & 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sm = grid[top][cols / 2] + grid[bottom][cols / 2];\n                count[sm] += 1;\n                top++;\n                bottom--;\n            }\n        }\n        if (count[2] % 2 == 1) {\n            if (count[1] > 0) {\n                ans += count[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += count[1];\n        }\n        for (int i = 0; i < rows / 2; i++) {\n            for (int j = 0; j < cols / 2; j++) {\n                int a = grid[i][j];\n                int b = grid[rows - 1 - i][j];\n                int c = grid[i][cols - 1 - j];\n                int d = grid[rows - 1 - i][cols - 1 - j];\n                int sm = a + b + c + d;\n                if (sm != 0 && sm != 4) {\n                    ans += min(sm, 4 - sm);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699842",
    "subm_id": "1343224030"
}