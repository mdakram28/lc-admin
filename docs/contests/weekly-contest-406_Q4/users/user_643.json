{
    "username": "khoagoodkid",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hor {horizontalCut.begin(), horizontalCut.end()};\n        priority_queue<int> ver{verticalCut.begin(), verticalCut.end()};\n        int h= 1,v=1;\n        long long res=0;\n        while(hor.size() && ver.size()) {\n            int top1 = hor.top(), top2 = ver.top();\n            if(top1 > top2) {\n                res+= top1 * h;\n                v++;\n                hor.pop();\n            } else {\n                res+= top2 * v;\n                h++;\n                ver.pop();\n            }\n            // cout << res << \" \";\n        }\n        while(hor.size()) {\n            res+= hor.top() * h;\n            v++;\n            hor.pop();\n        }\n        while(ver.size()) {\n            res+= ver.top() * v;\n            h++;\n            ver.pop();\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925717",
    "subm_id": "1320263882"
}