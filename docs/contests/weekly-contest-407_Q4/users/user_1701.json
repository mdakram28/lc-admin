{
    "username": "orangesTA",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    int getstate(int x) {\n        if (x == 0) return 0;\n        if (x > 0) return 1;\n        return -1;\n    }\n\n    ll helper(vector<int>& v, vector<int>& tv, int si, int ei) {\n        // cout << si << \" -> \" << ei << \"\\n\";\n        int maxneed = abs(v[si] - tv[si]);\n        int mi = si;\n        for (int i = si; i <= ei; i++) {\n            int val = abs(v[i] - tv[i]);\n            if (val > maxneed) {\n                mi = i;\n                maxneed = val;\n            }\n        }   \n\n        // cout << mi << \" = \" << maxneed << \"\\n\";\n\n        ll res = maxneed;\n        int have = maxneed;\n        for (int i = mi-1; i >= si; i--) {\n            int need = abs(v[i] - tv[i]);\n            if (need > have) {\n                res += abs(need - have);\n            }\n            have = need;\n        }\n        have = maxneed;\n        for (int i = mi+1; i <= ei; i++) {\n            int need = abs(v[i] - tv[i]);\n            if (need > have) {\n                res += abs(need - have);\n            }\n            have = need;\n        }\n        return res;\n    }\n\n    long long minimumOperations(vector<int>& v, vector<int>& tv) {\n        int n = (int)v.size();\n        int i = 0;\n        ll res = 0ll;\n        while (i < n) {\n            int vs = getstate(v[i]-tv[i]);\n            int j = i;\n\n            while (j < n && vs == getstate(v[j]-tv[j])) {\n                j++;\n            }\n            res += helper(v, tv, i, j-1);\n            i = j;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532900",
    "subm_id": "1327996687"
}