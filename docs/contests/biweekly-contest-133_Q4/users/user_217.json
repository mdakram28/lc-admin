{
    "username": "SkinnySnakeLimb",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, rs: List[List[int]]) -> int:\n        mod = 10**9 + 7\n        \n        rs.sort()\n        \n        finalEd = rs[-1][0]\n        \n        @cache\n        def solve(rsIdx, idx, am):\n            if idx == -1 or (rsIdx > 0 and idx == rs[rsIdx - 1][0]):\n                if idx == -1:\n                    return (1 if am == 0 else 0)\n                \n                if am == rs[rsIdx - 1][1]:\n                    return solve(rsIdx - 1, idx, am)\n                else:\n                    return 0\n                \n            ret = 0\n            for i in range(idx + 1):\n                if am - i >= 0:\n                    ret += solve(rsIdx, idx - 1, am - i)\n                    ret %= mod\n                \n            return ret\n                \n        val = solve(len(rs) - 1, finalEd, rs[-1][1])\n        \n        def factMod(n, mod):\n            acc = 1\n            for i in range(1, n + 1):\n                acc *= i\n                acc %= mod\n                \n            return acc\n        \n        return (val * math.comb(n, finalEd + 1) * factMod(n - finalEd - 1, mod)) % mod",
    "submit_ts": 1719069376.0
}