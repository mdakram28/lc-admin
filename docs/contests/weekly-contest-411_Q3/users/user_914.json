{
    "username": "\u739b\u5361\u5df4\u5361",
    "submission": "from decimal import Decimal\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 9 or k == 1 or k == 3:\n            return \"9\" * n\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            return \"8\" + \"9\" * (n - 2) + \"8\"\n        if k == 4:\n            if n <= 4:\n                return \"8\" * n\n            return \"88\" + \"9\" * (n - 4) + \"88\"\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            return \"5\" + \"9\" * (n - 2) + \"5\"\n        if k == 8:\n            if n <= 6:\n                return '8' * n\n            return \"888\" + \"9\" * (n - 6) + \"888\"\n        if k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            if n == 3:\n                return '8' * n\n            if n % 2 == 0:\n                return \"8\" + \"9\" * (n // 2 - 2) + \"77\" + \"9\" * (n // 2 - 2) + \"8\"\n            if n % 2 == 1:\n                return \"8\" + \"9\" * (n // 2 - 1) + \"8\" + \"9\" * (n // 2 - 1) + \"8\"\n        if k == 7:\n            weights = [1, 3, 2, -1, -3, -2]\n            if n == 1:\n                return \"7\"\n            if n == 2:\n                return \"77\"\n            if n == 3:\n                return \"959\"\n            if n == 4:\n                return \"9779\"\n            if n % 2 == 1:\n                for i in range(999, 10, -1):\n                    num = \"9\" * (n // 2 - 1) + str(i) + \"9\" * (n // 2 - 1)\n                    total = 0\n                    for j, digit in enumerate(reversed(num)):\n                        total += int(digit) * weights[j % 6]\n                    if total % 7 == 0 and str(i) == str(i)[::-1]:\n                        return num\n            if n % 2 == 0:\n                for i in range(99, 10, -1):\n                    num = \"9\" * (n // 2 - 1) + str(i) + \"9\" * (n // 2 - 1)\n                    total = 0\n                    for j, digit in enumerate(reversed(num)):\n                        total += int(digit) * weights[j % 6]\n                    if total % 7 == 0 and str(i) == str(i)[::-1]:\n                        return num\n                    \n",
    "submit_ts": "1723953291",
    "subm_id": "556416655"
}