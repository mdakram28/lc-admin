{
    "username": "dragoljub-duric",
    "submission": "class Solution {\npublic:\n    struct FenwickTree{\n        vector<int> bit; //binary indexed tree\n        int n;\n        \n        FenwickTree(int n){\n            this -> n = n + 1;\n            bit.assign(n + 1, 0);\n        }\n        \n        FenwickTree(vector<int>& a) : FenwickTree(a.size()){\n            for(int i = 0; i < a.size(); ++i)\n                add(i, a[i]);\n        }\n        \n        void add(int idx, int delta){\n            for(++idx; idx < n; idx += idx & -idx)\n                bit[idx] += delta;\n        }\n        \n        int sum(int idx){\n            int res = 0;\n            for(++idx; idx > 0; idx -= idx & -idx)\n                res += bit[idx];\n            return res;\n        }\n        \n        int sum(int l, int r){\n            return sum(r) - sum(l - 1);\n        }\n    };\n\n    int minChanges(vector<int>& nums, int k) {\n        FenwickTree* t = new FenwickTree(2 * k + 2);\n        int n = nums.size();\n\n        t -> add(0, n);\n        t -> add(2 * k + 1, -n);\n\n        for(int i = 0; i < n / 2; ++i){\n            int j = n - 1 - i;\n\n           // int mini = min(min(abs(0 - nums[j]), abs(k - nums[j])), min(abs(0 - nums[i]), abs(k - nums[i])));\n            int maxi = max(max(abs(0 - nums[j]), abs(k - nums[j])), max(abs(0 - nums[i]), abs(k - nums[i])));\n            t -> add(0, -1);\n            t -> add(maxi + 1, 1);\n            t -> add(abs(nums[i] - nums[j]), -1);\n            t -> add(abs(nums[i] - nums[j]) + 1, 1);\n        }\n\n        int res = n;\n\n        for(int i = 0; i < 2 * k + 1; ++i)\n            res = min(res, t -> sum(0, i));\n\n        return res;\n    }\n};",
    "submit_ts": "1721488321",
    "subm_id": "1327418603"
}