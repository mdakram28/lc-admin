{
    "username": "zonda-30",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        # def bisect(lis: List[int], func) -> i:\n        #     l, r = 0, len(lis) - 1\n        #     while l <= r:\n        #         m = (l + r) // 2\n        #         if func(lis[m]):\n        #             l = m + 1\n        #         else:\n        #             r = m - 1\n        #     return l\n        ans = 0\n        numOfZeros = [[] for _ in range(30)]\n        idxs = [-1] * 30\n        for i, n in enumerate(nums):\n            for b in range(30):\n                if n & (1 << b) == 0:\n                    numOfZeros[b].append(1 + (numOfZeros[b][-1] if len(numOfZeros[b]) > 0 else 0))\n                    if k & (1 << b):\n                        idxs[b] = i + 1\n                    else:\n                        while idxs[b] == -1 or (idxs[b] < len(numOfZeros[b]) and numOfZeros[b][idxs[b]] < numOfZeros[b][-1]):\n                            idxs[b] += 1\n                else:\n                    numOfZeros[b].append(numOfZeros[b][-1] if len(numOfZeros[b]) > 0 else 0)\n                    if k & (1 << b):\n                        if idxs[b] == -1:\n                            idxs[b] = 0\n                        \n            l, r = 0, i\n            for b in range(30):\n                if k & (1 << b) == 0:\n                    # j = bisect_right(numOfZeros[b], numOfZeros[b][-1] - 1)\n                    # if numOfZeros[b][j] == 0:\n                    #     j -= 1\n                    # if i == 0 and b == 1:\n                    #     print(j, numOfZeros[b])\n                    r = min(r, idxs[b])\n                else:\n                    # j = bisect_left(numOfZeros[b], numOfZeros[b][-1])\n                    # if j < len(numOfZeros[b]) and numOfZeros[b][j] > 0:\n                    #     j += 1\n                    l = max(l, idxs[b])\n            # print(i, l, r)\n            ans += max(r - l + 1, 0)\n        return ans\n                    ",
    "submit_ts": "1720281502",
    "subm_id": "544576033"
}