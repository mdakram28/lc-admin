{
    "username": "Bhanu1146",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] c, int k) {\n        List<Integer> g = new ArrayList<>();\n        int i = 1;\n        int l = c[0];\n        int cg = 1;\n        boolean s = false;\n        \n        while (i < c.length) {\n            if (c[i] == l) {\n                g.add(cg);\n                cg = 1;\n                s = true;\n            } else {\n                cg++;\n            }\n            l = c[i];\n            i++;\n        }\n        g.add(cg);\n        \n        if (g.size() == 1 && g.get(0) == c.length && c[0] != c[c.length - 1] && !s) {\n            return c.length;\n        }\n        \n        if (c[0] != c[c.length - 1] && g.size() > 1) {\n            g.set(0, g.get(0) + g.remove(g.size() - 1));\n        }\n        \n        int result = 0;\n        int j = 0;\n        while (j < g.size()) {\n            result += Math.max(0, g.get(j) - (k - 1));\n            j++;\n        }\n        \n        return result;\n    }\n}\n",
    "submit_ts": "1720281480",
    "subm_id": "1311826700"
}