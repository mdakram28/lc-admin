{
    "username": "pssingh1434",
    "submission": "class Solution {\nprivate:\n    pair<int,int> ans(vector<vector<int>>& A, int N)\n    {\n        vector<pair<int,int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            // if(i==ind) continue;\n            V[i].first = A[i][0] + A[i][1];\n            V1[i].first = A[i][0] - A[i][1];\n            V[i].second = i;\n            V1[i].second = i;\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        \n        if(V.back().first - V.front().first>V1.back().first - V1.front().first)\n        {\n            return {V.back().second, V.front().second};\n        }\n        return {V1.back().second, V1.front().second};\n    }\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        auto org = ans(points, points.size());\n        vector<vector<int>> vec;\n        for(int i=0;i<points.size();i++)\n        {\n            if(i!=org.first)\n            {\n                vec.push_back(points[i]);\n            }\n        }\n        auto frst = ans(vec, vec.size());\n        vector<vector<int>> vec1;\n        for(int i=0;i<points.size();i++)\n        {\n            if(i!=org.second)\n            {\n                vec1.push_back(points[i]);\n            }\n        }\n        auto scnd = ans(vec1, vec1.size());\n        // cout<<org.first<<\" \"<<org.second<<endl;\n        // cout<<frst.first<<\" \"<<frst.second<<endl;\n        // cout<<scnd.first<<\" \"<<scnd.second<<endl;\n        return min(abs(points[org.first][0]-points[org.second][0])+abs(points[org.first][1]-points[org.second][1]), min(abs(vec[frst.first][0]-vec[frst.second][0])+abs(vec[frst.first][1]-vec[frst.second][1]), abs(vec1[scnd.first][0]-vec1[scnd.second][0])+abs(vec1[scnd.first][1]-vec1[scnd.second][1])));\n    }\n};"
}