{
    "username": "dk_sensei",
    "submission": "class Solution {\npublic:\n    #define  point pair<int,int>\n    #define ll long long\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<ll>sum;\n        multiset<ll>dif;\n        for(auto i:points){\n            sum.insert(i[0]+0LL+i[1]);\n            dif.insert(i[0]+0LL-i[1]);\n        }\n        ll mx=1e10;\n        for(auto i:points){\n            sum.erase(sum.find(i[0]+i[1]));\n            dif.erase(dif.find(i[0]-i[1]));\n            ll cur= max(*sum.rbegin()-*sum.begin(),*dif.rbegin()-*dif.begin());\n            sum.insert(i[0]+i[1]);\n            dif.insert(i[0]-i[1]);\n            if(cur<=mx) mx=cur;\n            // cout<<cur<<\" \"<<i[0]<<\" \"<<i[1]<<endl;\n        }\n        return mx;\n    }\n};\n\n/*\n\n[[3,2],[3,9],[7,10],[4,4],[8,10],[2,7]]\n\nex: 10\n\n\n*/"
}