{
    "username": "inversionpeter",
    "submission": "int FindWithRestrictions(int row1, int row2, int column1, int column2, vector <vector <int>> &grid) {\n    int topRow = 8888, bottomRow = 0, leftColumn = 8888, rightColumn = 0;\n    for (int i = row1; i < row2; ++i) {\n        for (int j = column1; j < column2; ++j) {\n            if (grid[i][j]) {\n                topRow = min(topRow, i);\n                bottomRow = max(bottomRow, i);\n                leftColumn = min(leftColumn, j);\n                rightColumn = max(rightColumn, j);\n            }\n        }\n    }\n    return (bottomRow - topRow + 1) * (rightColumn - leftColumn + 1); \n}\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int rows = grid.size(), columns = grid[0].size(), minimum = 888888;\n        for (int i = 1; i < columns; ++i) {\n            for (int j = i + 1; j < columns; ++j) {\n                minimum = min(minimum,  FindWithRestrictions(0, rows, 0, i, grid) +\n                                        FindWithRestrictions(0, rows, i, j, grid) +\n                                        FindWithRestrictions(0, rows, j, columns, grid));\n            }\n        }\n        for (int i = 1; i < rows; ++i) {\n            for (int j = i + 1; j < rows; ++j) {\n                minimum = min(minimum,  FindWithRestrictions(0, i, 0, columns, grid) +\n                                        FindWithRestrictions(i, j, 0, columns, grid) +\n                                        FindWithRestrictions(j, rows, 0, columns, grid));\n            }\n        }\n        for (int i = 1; i < rows; ++i) {\n            for (int j = 1; j < columns; ++j) {\n                minimum = min(minimum,  FindWithRestrictions(0, i, 0, j, grid) +\n                                        FindWithRestrictions(0, i, j, columns, grid) +\n                                        FindWithRestrictions(i, rows, 0, columns, grid));\n                minimum = min(minimum,  FindWithRestrictions(0, i, 0, columns, grid) +\n                                        FindWithRestrictions(i, rows, 0, j, grid) +\n                                        FindWithRestrictions(i, rows, j, columns, grid));\n            }\n        }\n        for (int i = 1; i < columns; ++i) {\n            for (int j = 1; j < rows; ++j) {\n                minimum = min(minimum,  FindWithRestrictions(0, j, 0, i, grid) +\n                                        FindWithRestrictions(j, rows, 0, i, grid) +\n                                        FindWithRestrictions(0, rows, i, columns, grid));\n                minimum = min(minimum,  FindWithRestrictions(0, rows, 0, i, grid) +\n                                        FindWithRestrictions(0, j, i, columns, grid) +\n                                        FindWithRestrictions(j, rows, i, columns, grid));\n            }\n        }\n        return minimum;\n    }\n};",
    "submit_ts": 1719112800.0
}