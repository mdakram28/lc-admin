{
    "username": "Bhumika_2004",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int target) {\n        int length = nums.length;\n        long count = 0;\n        HashMap<Long, Long> previous = new HashMap<>();\n        \n        for (int i = 0; i < length; ++i) {\n            HashMap<Long, Long> current = new HashMap<>();\n            \n            // Check if the current number is equal to the target\n            if (nums[i] == target) {\n                ++count;\n            }\n            \n            current.put((long) nums[i], 1L);\n            \n            for (HashMap.Entry<Long, Long> entry : previous.entrySet()) {\n                long currentVal = entry.getKey();\n                long frequency = entry.getValue();\n                long bitwiseAndResult = currentVal & nums[i];\n                \n                if (bitwiseAndResult == target) {\n                    count += frequency;\n                }\n                \n                current.put(bitwiseAndResult, current.getOrDefault(bitwiseAndResult, 0L) + frequency);\n            }\n            \n            previous = current;\n        }\n        \n        return count;\n        \n    }\n}\n",
    "submit_ts": "1720279042",
    "subm_id": "1311734873"
}