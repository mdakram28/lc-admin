{
    "username": "Tommy_Shan",
    "submission": "class Solution {\npublic:\n    struct node {\n        node* child[26];\n        int cost;\n        node() {\n            cost = 0x3f3f3f3f;\n            for(int i=0; i<26; i++) child[i] = NULL;\n        } \n    };\n    void ins(string& word, int cost, node* rt) {\n        node* cur = rt;\n        for(char c: word) {\n            if(cur->child[c-'a'] == NULL) {\n                cur->child[c-'a'] = new node();\n            }\n            cur = cur->child[c-'a'];\n        }\n        cur->cost = min(cur->cost, cost);\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int dp[target.size()+1];\n        for(int i=1; i<=target.size(); i++) dp[i] = 1e9;\n        dp[0] = 0;\n        node* root = new node();\n        for(int i=0; i<words.size(); i++) ins(words[i], costs[i], root);\n        for(int i=0; i<=target.size(); i++) {\n            if(dp[i] >= 1e9) continue;\n            node* cur = root;\n            for(int j=i; j<target.size(); j++) {\n                if(cur->child[target[j]-'a'] == NULL) break;\n                cur = cur->child[target[j]-'a'];\n                if(cur->cost < 1e9) dp[j+1] = min(dp[j+1], dp[i] + cur->cost);\n            }\n        }\n        return (dp[target.size()] >= 1e9 ? -1 : dp[target.size()]);\n    }\n};",
    "submit_ts": "1720324367",
    "subm_id": "1312397800"
}