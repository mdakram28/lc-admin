{
    "username": "JayKimyra",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        int[] differences = new int[n];\n        for (int i = 0; i < n; i++){\n            differences[i] = Math.abs(nums[i] - nums[n-1-i]);\n        }\n        int[] data = new int[k + 1];\n        for (int i = 0; i < n/2; i++){\n            data[differences[i]]++;\n        }\n        int[] maxDiffs = new int[k + 1];\n        for (int i = 0; i < n/2; i++){\n                int maxDiff = Math.max(Math.max(nums[i], nums[n-i-1]), k - Math.min(nums[i], nums[n-i-1]));\n                maxDiffs[maxDiff]++;\n        }\n        int cur = n / 2 - data[0];\n        int ans = cur;\n        for (int i = 1 ; i <= k; i++){\n            cur = cur + data[i - 1] + maxDiffs[i - 1] - data[i];\n            ans = Math.min(ans, cur);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721489672",
    "subm_id": "1327460286"
}