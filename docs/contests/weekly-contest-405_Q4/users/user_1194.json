{
    "username": "jsegaran3",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        # create trie\n        trie = {}\n\n        for cost, word in zip(costs, words):\n            trie_ptr = trie\n            for ch in word:\n                if ch not in trie_ptr:\n                    trie_ptr[ch] = {}\n                trie_ptr = trie_ptr[ch]\n            \n            trie_ptr[\"END\"] = min(cost, trie_ptr.get(\"END\", float('inf')))\n\n        dp = {}\n        @lru_cache(maxsize=None)\n        def dp(idx):\n            if idx == len(target):\n                return 0\n            \n            if target[idx] not in trie:\n                # print('hi')\n                return float('inf')\n            trie_ptr = trie[target[idx]]\n            result = float('inf')\n            for i in range(0, len(target)):\n                # print('hi')\n                if 'END' in trie_ptr:\n                    # print('hi1')\n                    if trie_ptr['END'] < result:\n                        result = min(result, trie_ptr['END'] + dp(idx + i + 1))\n                if i + idx + 1 >= len(target):\n                    break\n                if target[idx + i + 1] not in trie_ptr:\n                    break\n                \n                trie_ptr = trie_ptr[target[idx + i + 1]]\n            return result\n        \n        result = dp(0)\n        if result == float('inf'):\n            return -1\n        return result\n\n",
    "submit_ts": "1720322159",
    "subm_id": "1312342288"
}