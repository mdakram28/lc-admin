{
    "username": "radiancesheep",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = static_cast<int>(points.size());\n        set<pair<int, int>> add, sub;\n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0];\n            int y = points[i][1];\n            add.insert({x + y, i});\n            sub.insert({x - y, i});\n        }\n        int minDist = -1;\n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0];\n            int y = points[i][1];\n            add.erase(add.find({x + y, i}));\n            sub.erase(sub.find({x - y, i}));\n            int dist = max(add.rbegin()->first - add.begin()->first, sub.rbegin()->first - sub.begin()->first);\n            if (minDist == -1 || dist < minDist) {\n                minDist = dist;\n            }\n            add.insert({x + y, i});\n            sub.insert({x - y, i});\n        }\n        return minDist;\n    }\n};"
}