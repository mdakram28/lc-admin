{
    "username": "JavaJooker",
    "submission": "#include <vector>\n#include <queue>\n#include <algorithm>\n#include <climits>\nusing namespace std;\n\nstruct node {\n    long long v, x, y;\n};\n\nstruct CompareNode {\n    bool operator()(node const& n1, node const& n2) {\n        return n1.v < n2.v;  \n    }\n};\n\nclass Solution {\n    using ll = long long;\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        priority_queue<node, vector<node>, CompareNode> h;\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                h.push({board[i][j], i, j});\n            }\n        }\n\n        vector<node> v;\n        int limit = min(3 * max(n, m), n * m);\n\n        for (int i = 0; i < limit; i++) {\n            v.push_back(h.top());\n            h.pop();\n        }\n\n        ll ans = LLONG_MIN;\n\n        for (int i = 0; i < limit; i++) {\n            ll v1 = v[i].v, x1 = v[i].x, y1 = v[i].y;\n            for (int j = i + 1; j < limit; j++) {\n                ll v2 = v[j].v, x2 = v[j].x, y2 = v[j].y;\n                if (x2 == x1 || y2 == y1) continue;\n                for (int k = j + 1; k < limit; k++) {\n                    ll v3 = v[k].v, x3 = v[k].x, y3 = v[k].y;\n                    if (x3 == x2 || x3 == x1 || y3 == y2 || y3 == y1) continue;\n                    ans = max(ans, v1 + v2 + v3);\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723908956",
    "subm_id": "556333749"
}