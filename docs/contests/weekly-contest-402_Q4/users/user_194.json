{
    "username": "lddlinan",
    "submission": "class Solution(object):\n    def countOfPeaks(self, nums, queries):\n        \"\"\"\n        :type nums: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        mx=1\n        n = len(nums)\n        while mx<=n:\n            mx<<=1\n        ix = [0]*(mx+mx)\n        def setv(i, v):\n            # print \"setv\", i, v\n            i+=mx\n            while i:\n                ix[i]+=v\n                i>>=1\n        def count(s, e):\n            s+=mx\n            \n            e+=mx\n            r=0\n            while s<=e:\n                if s&1:\n                    r+=ix[s]\n                    s+=1\n                if (e&1)==0:\n                    r+=ix[e]\n                    e-=1\n                s>>=1\n                e>>=1\n            return r\n        for i in range(1, n-1):\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                setv(i, 1)\n                \n        def adjust(a, v):\n            if a and a<n-1:\n                if nums[a]>nums[a-1] and nums[a]>nums[a+1]:\n                    setv(a, v)\n            \n        r = []\n        for t, a, b  in queries:\n            if t==1:\n                r.append(count(a+1, b-1))\n            else:\n                \n                adjust(a, -1)\n                adjust(a-1, -1)\n                adjust(a+1, -1)\n                nums[a]=b\n                adjust(a, 1)\n                adjust(a-1, 1)\n                adjust(a+1, 1)\n        return r",
    "submit_ts": "1718506409",
    "subm_id": "539774768"
}