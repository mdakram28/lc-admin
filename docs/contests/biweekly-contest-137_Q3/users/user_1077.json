{
    "username": "Jayant Khandelwal",
    "submission": "from itertools import combinations\n\nclass Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        m, n = len(board), len(board[0])\n        max_sum = float('-inf')\n        \n        row_max = []\n        for i in range(m):\n            best_cols = sorted([(board[i][j], j) for j in range(n)], reverse=True)[:3]\n            row_max.append(best_cols)\n        \n        for i, j, k in combinations(range(m), 3):\n            for x in range(3):\n                col1 = row_max[i][x][1]\n                for y in range(3):\n                    col2 = row_max[j][y][1]\n                    if col2 == col1:\n                        continue\n                    for z in range(3):\n                        col3 = row_max[k][z][1]\n                        if col3 == col1 or col3 == col2:\n                            continue\n                        current_sum = board[i][col1] + board[j][col2] + board[k][col3]\n                        max_sum = max(max_sum, current_sum)\n        \n        return max_sum",
    "submit_ts": "1723908845",
    "subm_id": "1359169500"
}