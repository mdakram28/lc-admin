{
    "username": "AasrishVinay",
    "submission": "class Solution {\npublic:\n    int find(vector<vector<int>>& points,int j){\n        int mas = points[0][1]+points[0][0];\n        int mis = points[0][1]+points[0][0];\n        int mad = points[0][0] - points[0][1];\n        int mid = points[0][0] - points[0][1];\n        if(j==0){\n            mas = points[1][1]+points[1][0];\n            mis = points[1][1]+points[1][0];\n            mad = points[1][0] - points[1][1];\n            mid = points[1][0] - points[1][1];\n        }\n        int s = 0, d = 0;\n        for(int i=1;i<points.size();i++){\n            if(i==j){\n                continue;\n            }\n            s = points[i][0] + points[i][1];\n            d = points[i][0] - points[i][1];\n            if(mas<s){\n                mas = s;\n                \n            }\n            else if(mis>s){\n                mis = s;\n                \n            }\n            if(mad<d){\n                mad = d;\n                \n            }\n            else if(mid>d){\n                mid = d;\n                \n            }\n        }\n        return max(mas-mis,mad-mid);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int mas = points[0][1]+points[0][0];\n        int mis = points[0][1]+points[0][0];\n        int mad = points[0][0] - points[0][1];\n        int mid = points[0][0] - points[0][1];\n        int imas = 0, imis = 0, imad = 0, imid = 0;\n        int s = 0, d = 0;\n        for(int i=1;i<points.size();i++){\n            s = points[i][0] + points[i][1];\n            d = points[i][0] - points[i][1];\n            if(mas<s){\n                mas = s;\n                imas = i;\n            }\n            else if(mis>s){\n                mis = s;\n                imis = i;\n            }\n            if(mad<d){\n                mad = d;\n                imad = i;\n            }\n            else if(mid>d){\n                mid = d;\n                imid = i;\n            }\n        }\n        int fx,fy;\n        if((mas-mis)>(mad-mid)){\n            fx = imas;\n            fy = imis;\n        }\n        else{\n            fx = imad;\n            fy = imid;\n        }\n        return min(find(points,fx),find(points,fy));\n    }\n};"
}