{
    "username": "RuchitJagodara",
    "submission": "    long long minNumberOperations(vector<long long>& target) {\n        vector<long long> stack;\n        long long res = 0;\n\n        stack.push_back(target[0]);\n        for (int i = 1; i < target.size(); i++) {\n            if (target[i] > stack.back()) {\n                stack.push_back(target[i]);\n                continue;\n            } \n            if (target[i] == stack.back())\n                continue;\n\n            long long top = stack.back();\n\n            while (!stack.empty() && target[i] < stack.back())\n                stack.pop_back();\n\n            res += top - target[i];\n            stack.push_back(target[i]);\n        }\n        \n        if (!stack.empty())\n            res += stack.back();\n\n        return res;\n    }\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0, n=nums.size();\n        long long bach = 0;\n        \n        vector<long long> diff(n);\n        for(int i=0; i<n; i++) diff[i] = target[i]-nums[i];\n        vector<long long> diff2(n,0);\n        int last = -1;\n        for(int i=0; i<n; i++){\n            if (diff[i]<=0){\n                diff2[i] = -1*diff[i];\n                diff[i] = 0;\n                last = i;\n            }\n            else break;\n        }\n        vector<long long> diff3(n, 0);\n        for(int i=n-1; i>=max(0, last+1); i--){\n            if (diff[i]<=0) {diff3[i] = -1*diff[i];diff[i]=0;}\n            else break;\n        }\n        ans = minNumberOperations(diff);\n        ans+=minNumberOperations(diff2);\n        ans+=minNumberOperations(diff3);\n        return ans;\n        \n    }\n};",
    "submit_ts": "1721532226",
    "subm_id": "1327980796"
}