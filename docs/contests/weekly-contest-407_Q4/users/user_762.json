{
    "username": "ma22m011",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diff = [0 for _ in range(n)]\n        ans = 0\n        \n        for i in range(n):\n            diff[i] = nums[i] - target[i]\n        print(diff)\n        \n        sign_change_indices = []\n        for i in range(1, n):\n            if (diff[i] > 0 and diff[i - 1] <= 0) or (diff[i] < 0 and diff[i - 1] >= 0):\n                sign_change_indices.append(i)\n        print(sign_change_indices)\n        \n        def check(l, r):\n            print(l, r, \"inside check\")\n            arr = [abs(diff[i]) for i in range(l, r)]\n            print(arr)\n            cnt = arr[0]\n            for i in range(1, len(arr)):\n                cnt += max(arr[i] - arr[i - 1], 0)\n            return cnt\n        \n        if not sign_change_indices:\n            print(\"ere\")\n            ans = check(0, n)\n        else:\n            print(\"hereee\")\n            for i in range(len(sign_change_indices)):\n                if i == 0:\n                    ans += check(0, sign_change_indices[i])\n                if i == len(sign_change_indices) - 1:\n                    ans += check(sign_change_indices[-1], n)\n                else:\n                    ans += check(sign_change_indices[i], sign_change_indices[i + 1])\n        return ans\n",
    "submit_ts": "1721532111",
    "subm_id": "1327977892"
}