{
    "username": "wyjsdpku",
    "submission": "class Solution:\n    def minimumDifference(self, arr: List[int], target: int) -> int:\n        l = len(arr)\n        visit = [-1 for i in range(l)]\n        res = float(\"inf\")\n        for i in range(l):\n            n = arr[i]\n            if n <= visit[i]:\n                continue\n            elif n == target:\n                return 0\n            elif n < target:\n                res = min(res, target - n)\n                continue\n            for j in range(i + 1, l):\n                nn = arr[j] & n\n                if nn <= visit[j]:\n                    break\n                visit[j] = nn\n                if nn == target:\n                    return 0\n                elif nn < target:\n                    res = min(res, target - nn)\n                    res = min(res, n - target)\n                    n = nn\n                    break\n                n = nn\n            if n > target:\n                res = min(res, n - target)\n        return res\n        \n        \n\n\n",
    "submit_ts": 1717299403.0
}