{
    "username": "parasguglani",
    "submission": "class Solution {\npublic:\n    \nclass Seg\n{\npublic:\n    vector<int> stored;\n    int n;\n\n    Seg(vector<int> &arr)\n    {\n        n = arr.size();\n        stored.resize(4 * n);\n        build(arr, 0, 0, n - 1);\n    }\n\n    void build(vector<int> &arr, int node, int start, int end)\n    {\n        if (start == end)\n        {\n            stored[node] = arr[start];\n        }\n        else\n        {\n            int half = (start + end) / 2;\n            build(arr, 2 * node + 1, start, half);\n            build(arr, 2 * node + 2, half + 1, end);\n            int p1 = stored[2 * node + 1];\n            int p2 = stored[2 * node + 2];\n\n            stored[node] = p1 & p2;\n        }\n    }\n\n    int getans(int l, int r)\n    {\n        return query(0, 0, n - 1, l, r);\n    }\n\n    int query(int curr, int s, int e, int l, int r)\n    {\n        if (r < s || e < l)\n        {\n            return INT_MAX;\n        }\n        if (l <= s && e <= r)\n        {\n            return stored[curr];\n        }\n        int half = (s + e) / 2;\n        int lh = query(2 * curr + 1, s, half, l, r);\n        int rh = query(2 * curr + 2, half + 1, e, l, r);\n\n        return lh & rh;\n    }\n};\n\nint minimumDifference(vector<int> nums, int k)\n{\n    int res = INT_MAX;\n    Seg st(nums);\n    int n = nums.size();\n    for (int i = 0; i < n; i++)\n    {\n        int left = i - 1, rght = n - 1, half;\n\n        while (rght - left > 1)\n        {\n            half = (left + rght) / 2;\n            int val = st.getans(i, half);\n            if (val < k)\n            {\n                rght = half;\n            }\n            else\n            {\n                left = half;\n            }\n        }\n        if (left != i - 1)\n        {\n            int cur1 = st.getans(i, left);\n            int ans2 = abs(cur1 - k);\n            res = min(res, ans2);\n        }\n        int cur2 = st.getans(i, rght);\n        int ans3 = abs(cur2 - k);\n        res = min(res, ans3);\n    }\n    return res;\n}\n};",
    "submit_ts": 1717297968.0
}