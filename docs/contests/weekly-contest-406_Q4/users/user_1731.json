{
    "username": "drdnamaker",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        long long totalCost = 0;\n        vector<pair<int, char>> cuts;\n        for (int cost : horizontalCuts) {\n            cuts.push_back({cost, 'H'});\n        }\n        for (int cost : verticalCuts) {\n            cuts.push_back({cost, 'V'});\n        }\n        sort(cuts.begin(), cuts.end(), [](const pair<int, char>& a, const pair<int, char>& b) {\n            return a.first > b.first;\n        });\n        int horizontalPieces = 1, verticalPieces = 1;\n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += (long long)cut.first * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += (long long)cut.first * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926431",
    "subm_id": "546446202"
}