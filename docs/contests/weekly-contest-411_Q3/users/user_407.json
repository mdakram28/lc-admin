{
    "username": "yunfan",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return \"9\" * n\n        elif k == 2:\n            return \"8\" + \"9\" * (n - 2) + \"8\" if n >= 2 else \"8\"\n        elif k == 4:\n            return \"88\" + \"9\" * (n - 4) + \"88\" if n >= 4 else \"8\" * n\n        elif k == 8:\n            return \"888\" + \"9\" * (n - 6) + \"888\" if n >= 6 else \"8\" * n\n        elif k == 5:\n            return \"5\" + \"9\" * (n - 2) + \"5\" if n >= 2 else \"5\"\n        elif k == 6:\n            if n <= 2:\n                return \"6\" * n\n            if n & 1:\n                return \"8\" + \"9\" * ((n - 3) // 2) + \"8\" + \"9\" * ((n - 3) // 2)  + \"8\"\n            else:\n                return \"8\" + \"9\" * ((n - 4) // 2) + \"7\" * 2 + \"9\" * ((n - 4) // 2) + \"8\"\n        elif k == 7:\n            if n <= 2:\n                return \"7\" * n\n            mul = [1] + [0] * n\n            for i in range(n):\n                mul[i + 1] = (mul[i] * 10) % 7\n\n            if n & 1:\n                remsum = 9 * sum(mul[i] for i in range(n) if i != n // 2)\n                remsum %= 7\n                for i in range(9, -1, -1):\n                    if (i * mul[n // 2] + remsum) % 7 == 0:\n                        return \"9\" * ((n - 1) // 2) + str(i) + \"9\" * ((n - 1) // 2)\n            else:\n                remsum = 9 * sum(mul[i] for i in range(n) if i != n // 2 and i != n // 2 - 1)\n                remsum %= 7\n                for i in range(9, -1, -1):\n                    if (i * mul[n // 2] + i * mul[n // 2 - 1] + remsum) % 7 == 0:\n                        return \"9\" * ((n - 2) // 2) + str(i) * 2 + \"9\" * ((n - 2) // 2)",
    "submit_ts": "1723952268",
    "subm_id": "556410592"
}