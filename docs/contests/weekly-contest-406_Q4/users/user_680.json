{
    "username": "lucifer_84",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hC, vector<int>& vC) {\n        priority_queue<pair<int, char>> pq;\n    \n    \n    for (int i = 0; i < m - 1; ++i) {\n        pq.push({hC[i], 'H'});\n    }\n    \n   \n    for (int j = 0; j < n - 1; ++j) {\n        pq.push({vC[j], 'V'});\n    }\n    \n    long long ans = 0;\n    long long horPieces = 1;\n    long long verPieces = 1;\n    \n  \n    while (!pq.empty()) {\n        long long cost= pq.top().first;\n        long long type=pq.top().second;\n        pq.pop();\n        \n        if (type == 'H') {\n            ans += cost *  verPieces   ;\n            ++horPieces;\n        } else {\n            ans += cost * horPieces;\n            ++verPieces;\n        }\n    }\n    \n    return ans;\n    }\n};",
    "submit_ts": "1720925453",
    "subm_id": "1320255236"
}