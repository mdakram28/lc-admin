{
    "username": "havaale_khorasani",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        @cache\n        def rec(curStep, jump, prevMove):\n            a = 0\n            if curStep == k:\n                a = 1\n            \n            if curStep <= k and curStep + jump - k <=1:\n                a += rec(curStep + jump, jump*2, 1)\n            if curStep > 0 and prevMove != -1 and curStep - 1 <= k:\n                a += rec(curStep - 1, jump, -1)\n            \n            return a\n        \n        return rec(1, 1, 0)\n        \"\"\"\n        self.ans = 0\n        def rec(curStep, jump, prevMove):\n            if curStep == k:\n                self.ans += 1\n            \n            if curStep <= k and curStep + 2**jump - k <=1:\n                rec(curStep + 2**jump, jump + 1, 1)\n            if curStep > 0 and prevMove != -1 and curStep - 1 <= k:\n                rec(curStep - 1, jump, -1)\n        rec(1, 0, 0)\n        return self.ans\n        \"\"\"\n        \n            ",
    "submit_ts": "1716088764",
    "subm_id": "1261823353"
}