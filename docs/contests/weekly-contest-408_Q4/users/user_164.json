{
    "username": "sergey-tihon",
    "submission": "public class Solution {\n    public bool CanReachCorner(int X, int Y, int[][] c) {\n        var n = c.Length;\n        List<int>[] g = new List<int>[n];\n        for (var i=0; i<n; i++) {\n            g[i] = new List<int>();\n            for (var j=0; j<i; j++) {\n                long dx = c[i][0] - c[j][0];\n                long dy = c[i][1] - c[j][1];\n                long dr = c[i][2] + c[j][2];\n                if (dx*dx + dy*dy <= dr*dr) {\n                    g[i].Add(j);\n                    g[j].Add(i);\n                }\n            }\n        }\n\n        var q = new Queue<int>();\n        var v = new bool[n];\n        for (var i =0; i<n; i++) {\n            var x = c[i][0];\n            var y = c[i][1];\n            var r = c[i][2];\n            if (x-r<=0 || y+r >=Y) {\n                v[i] = true;\n                q.Enqueue(i);\n            }\n        }\n        while (q.Count >0) {\n            var p = q.Dequeue();\n            var x = c[p][0];\n            var y = c[p][1];\n            var r = c[p][2];\n            if (x+r>=X || y-r<=0)\n                return false;\n            foreach (var w in g[p]) {\n                if (!v[w]) {\n                    v[w] = true;\n                    q.Enqueue(w);\n                }\n            }\n        }\n\n        return true;\n    }\n}",
    "submit_ts": "1722137380",
    "subm_id": "1335762125"
}