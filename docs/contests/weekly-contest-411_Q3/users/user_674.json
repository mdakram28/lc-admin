{
    "username": "A1m233",
    "submission": "class Solution\n{\npublic:\n    string largestPalindrome(int n, int k)\n    {\n        /*\n        \u5bf9\u4e8e\u4e00\u4e2a\u6570x\uff0c\u5b83\u6709n\u4f4d\uff0c\u4e14\u662fk\u7684\u500d\u6570\uff0c\u8fd8\u662f\u56de\u6587\u7684\n        \u73b0\u5728\u8981\u8ba9\u8fd9\u4e2ax\u6700\u5927\u5316\n\n        \u6ce8\u610f\u5230k\u5f88\u5c0f\u6700\u5927\u53ea\u67099\n        \u4e3a\u4ec0\u4e48\u662f9\uff1f\n        \u4fdd\u8bc1\u4e86\u6211\u4eec\u6309\u4f4d\u68c0\u67e5\n        \u4ece\u540e\u5411\u524d\u770b\n        \u4e0d\u59a8\u8bben = 5\n        \u5219\u6709\n        a[0] * (10 ^ 0 + 10 ^ 4) + a[1] * (10 ^ 1 + 10 ^ 3) + a[2] * 10 ^ 2\n        \u5176\u4e2d\u6709a[i] <= 9\n\n        \u5bf9\u4e8e10 ^ i\uff0c\u5f53i >= 3\u65f6\uff0c\u5728\u6a212, 4, 8, 5\u4e0b\uff0c\u90fd\u4f1a\u662f0\uff0c\u4e0d\u63d0\u4f9b\u8d21\u732e\n        \u800c\u6a213\u4e0b\uff0c\u4e00\u76f4\u90fd\u662f1\uff0c\u6a219\u540c\u7406\uff0c\u800c\u6a216\u5c31\u4f1a\u662f\u4ea4\u66ff\u7684\n\n        \u8003\u8651\u5982\u4f55\u6700\u5927\u5316\n        \u90a3\u4e48\u7b2c\u4e00\u4e2a\u6570\u9996\u5148\u8981\u6700\u5927\n        */\n        if (n <= 5)\n        {\n            n--;\n            int pw = 1;\n            for (int i = 0; i < n; i++)\n            {\n                pw *= 10;\n            }\n            for (int i = pw * 10 - 1; i >= pw; i--)\n            {\n                if (i % k != 0)continue;\n                string s = to_string(i);\n                string t = s;\n                reverse(t.begin(), t.end());\n                if (t != s)continue;\n                return s;\n            }\n        }\n        /*\n        \u6253\u8868\uff1a\n        1\uff0c9\uff0c3\u5c31\u5168\u662f9\n        2\u4e24\u8fb9\u662f\u5404\u4e00\u4e2a8\uff0c\u4e2d\u95f4\u52a09\n        4\u4e24\u8fb9\u5404\u4e24\u4e2a8\uff0c\u4e2d\u95f49\n        5\u4e24\u8fb9\u4e00\u4e2a5\uff0c\u4e2d\u95f49\n        8\u4e24\u8fb9\u5404\u4e09\u4e2a8\uff0c\u4e2d\u95f49\n\n        6\u5947\u6570\u65f6\u4e2d\u95f4\u4e00\u4e2a8\uff0c\u4e24\u8fb9\u5404\u4e00\u4e2a8\uff0c\u5269\u4f59\u4f4d\u7f6e\u586b9\n        \u5076\u6570\u5c31\u662f\u4e2d\u95f4\u6539\u6210\u4e24\u4e2a7\n\n        7\u770b\u4e0d\u51fa\u89c4\u5f8b\uff0c\u7ed3\u5408\u4e00\u4e0b\u66b4\u529b\u5427\n        */\n        string res(n, '*');\n        int l = 0, r = n - 1;\n        if (k == 1 || k == 3 || k == 9)\n        {\n            return string(n, '9');\n        }\n        else if (k == 2 || k == 4 || k == 8)\n        {\n            int cnt = 0;\n            while (k != 1)\n            {\n                k /= 2;\n                cnt++;\n            }\n            while (l <= r)\n            {\n                if (cnt)\n                {\n                    res[l] = res[r] = '8';\n                    cnt--;\n                }\n                else\n                {\n                    res[l] = res[r] = '9';\n                }\n                l++, r--;\n            }\n            return res;\n        }\n        else if (k == 5)\n        {\n            res[l] = res[r] = '5';\n            l++, r--;\n            while (l <= r)\n            {\n                res[l] = res[r] = '9';\n                l++, r--;\n            }\n            return res;\n        }\n        else if (k == 6)\n        {\n            res[l] = res[r] = '8';\n            l++, r--;\n            while (l <= r)\n            {\n                if (l == r)\n                {\n                    res[l] = '8';\n                }\n                else if (l == r - 1)\n                {\n                    res[l] = res[r] = '7';\n                }\n                else\n                {\n                    res[l] = res[r] = '9';\n                }\n                l++, r--;\n            }\n            return res;\n        }\n        vector<int> pw(n + 1, 1);\n        for (int i = 1; i <= n; i++)\n        {\n            pw[i] = pw[i - 1] * 10 % 7;\n        }\n        /*\n        \u76ee\u524d\u770b\u6765\uff0c\u5947\u6570\u65f6\u53ea\u6709\u4e2d\u95f4\u4e00\u4e2a\u6570\u4f1a\u53d8\uff0c\u5076\u6570\u65f6\u53ea\u6709\u4e2d\u95f4\u4e24\u4e2a\u6570\u4f1a\u53d8\n        \u5076\u6570 n / 2 - 1, n / 2\n        \u5947\u6570 n / 2\n        */\n        vector<int> s(n, 9);\n        auto cal = [&]()\n        {\n            int l = 0, r = n - 1;\n            int res = 0;\n            while (l <= r)\n            {\n                if (l == r)\n                {\n                    res += s[l] * pw[l] % 7;\n                    res %= 7;\n                }\n                else\n                {\n                    res += s[l] * pw[l] % 7;\n                    res %= 7;\n                    res += s[r] * pw[r] % 7;\n                    res %= 7;\n                }\n                l++, r--;\n            }\n            return res == 0;\n        };\n        for (int i = 9; i >= 0; i--)\n        {\n            if (n % 2)s[n / 2] = i;\n            else s[n / 2 - 1] = s[n / 2] = i;\n            if (cal())\n            {\n                string ret;\n                for (int it: s)ret += to_string(it);\n                return ret;\n            }\n        }\n        return \"bruh\";\n    }\n};",
    "submit_ts": "1723953133",
    "subm_id": "556415750"
}