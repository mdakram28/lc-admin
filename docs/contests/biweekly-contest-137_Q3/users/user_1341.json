{
    "username": "Zoster",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;    // Number of rows\n        int n = board[0].length; // Number of columns\n\n        // Arrays to store the top 3 values and their column indices for each row\n        long[][] topRowValues = new long[m][3];\n        int[][] topRowIndices = new int[m][3];\n\n        // Arrays to store the top 3 values and their row indices for each column\n        long[][] topColValues = new long[n][3];\n        int[][] topColIndices = new int[n][3];\n\n        // Populate the arrays with initial minimum values\n        for (int i = 0; i < m; i++) {\n            Arrays.fill(topRowValues[i], Long.MIN_VALUE);\n        }\n        for (int j = 0; j < n; j++) {\n            Arrays.fill(topColValues[j], Long.MIN_VALUE);\n        }\n\n        // Find the top 3 values and their indices for each row\n        for (int r = 0; r < m; r++) {\n            for (int c = 0; c < n; c++) {\n                updateTopValues(topRowValues[r], topRowIndices[r], board[r][c], c);\n            }\n        }\n\n        // Find the top 3 values and their indices for each column\n        for (int c = 0; c < n; c++) {\n            for (int r = 0; r < m; r++) {\n                updateTopValues(topColValues[c], topColIndices[c], board[r][c], r);\n            }\n        }\n\n        // Evaluate the maximum sum of placing three rooks\n        long maxSum = Long.MIN_VALUE;\n        for (int r1 = 0; r1 < m; r1++) {\n            for (int i1 = 0; i1 < 3; i1++) {\n                int c1 = topRowIndices[r1][i1];\n                if (c1 == -1) continue;\n\n                for (int r2 = r1 + 1; r2 < m; r2++) {\n                    for (int i2 = 0; i2 < 3; i2++) {\n                        int c2 = topRowIndices[r2][i2];\n                        if (c2 == -1 || c2 == c1) continue;\n\n                        for (int r3 = r2 + 1; r3 < m; r3++) {\n                            for (int i3 = 0; i3 < 3; i3++) {\n                                int c3 = topRowIndices[r3][i3];\n                                if (c3 == -1 || c3 == c1 || c3 == c2) continue;\n\n                                long sum = topRowValues[r1][i1] + topRowValues[r2][i2] + topRowValues[r3][i3];\n                                maxSum = Math.max(maxSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n\n    private void updateTopValues(long[] values, int[] indices, long value, int index) {\n        for (int i = 0; i < 3; i++) {\n            if (value > values[i]) {\n                for (int j = 2; j > i; j--) {\n                    values[j] = values[j - 1];\n                    indices[j] = indices[j - 1];\n                }\n                values[i] = value;\n                indices[i] = index;\n                break;\n            }\n        }\n    }\n}\n",
    "submit_ts": "1723908833",
    "subm_id": "1359169046"
}