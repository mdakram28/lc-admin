{
    "username": "LTFja0BOEy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int ans = 0;\n        for (int i = 0; 2 * i < m - 1; i++) {\n            for (int j = 0; 2 * j < n - 1; j++) {\n                int one = grid[i][j] + grid[m - i - 1][j] + grid[i][n - j - 1] +\n                          grid[m - i - 1][n - j - 1];\n                ans += min(one, 4 - one);\n            }\n        }\n        int one = 0;\n        int t = 0;\n        if (m % 2) {\n            for (int j = 0; 2 * j < n - 1; j++) {\n                if (grid[m / 2][j] != grid[m / 2][n - j - 1])\n                    t++;\n                else\n                    one += grid[m / 2][j] + grid[m / 2][n - j - 1];\n            }\n        }\n        if (n % 2) {\n            for (int i = 0; 2 * i < m - 1; i++) {\n                if (grid[i][n / 2] != grid[m - i - 1][n / 2])\n                    t++;\n                else\n                    one += grid[i][n / 2] + grid[m - i - 1][n / 2];\n            }\n        }\n        ans += t;\n        if ((one % 4) == 2 && t == 0) {\n            ans += 2;\n        }\n        if ((m % 2) && (n % 2)) {\n            ans += grid[m / 2][n / 2];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697976",
    "subm_id": "552268733"
}