{
    "username": "Abhishek Thakur",
    "submission": "#define ll long long int\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        vector<int>zero(n,0),one(n,0);\n        for(int i=0;i<n;i++){\n            if(s[i]=='0') zero[i]++;\n            else one[i]++;\n            if(i+1<n) zero[i+1]=zero[i],one[i+1]=one[i];\n        }\n        vector<ll>summation(n+1,0);\n        for(int i=1;i<=n;i++){\n            summation[i]=summation[i-1];\n            summation[i]+=i;\n        }\n        auto find_right=[&](int idx){\n            int l=idx,r=n-1;\n            int ans=idx;\n            while(l<=r){\n                int mid=(l+r)/2;\n                int z=zero[mid]-(idx?zero[idx-1]:0);\n                int o=one[mid]-(idx?one[idx-1]:0);\n                if(z<=k or o<=k) ans=mid,l=mid+1;\n                else r=mid-1;\n            }\n            return ans;\n        };\n        auto find_left=[&](int idx){\n            int l=0,r=idx;\n            int ans=idx;\n            while(l<=r){\n                int mid=(l+r)/2;\n                int z=zero[idx]-(mid?zero[mid-1]:0);\n                int o=one[idx]-(mid?one[mid-1]:0);\n                if(z<=k or o<=k) ans=mid,r=mid-1;\n                else l=mid+1;\n            }\n            return ans;\n        };\n        vector<ll>kadane(n,0);\n        for(int i=0;i<n;i++){\n            int r=find_right(i);\n            kadane[i]+=(r-i+1);\n            if(i+1<n) kadane[i+1]=kadane[i];\n        }\n        vector<ll>ans;\n        for(auto q:queries){\n            int l=q[0],r=q[1];\n            int p=find_left(r);\n            if(p<=l) p=l;\n            ll v=(r-p+1);\n            ll curr=0;\n            if(p>l) curr+=(kadane[p-1]-(l?kadane[l-1]:0));\n            curr+=summation[v];\n            ans.push_back(curr);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951479",
    "subm_id": "1359772531"
}