{
    "username": "yc-li",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = 0\n        r = 0\n        c = 0\n        fr = 0\n        fc = 0\n        tr = False\n        tc = False\n        for i in range(n):\n            if i < n - 1 - i:\n                for j in range(m):\n                    if j < m - 1 - j:\n                        d = grid[i][j] + grid[- i - 1][j] + grid[i][- 1 - j] + grid[-1 - i][-1 - j]\n                        ans += min(d, 4 - d)\n                    elif j == m - 1 - j:\n                        d = grid[i][j] + grid[- i - 1][j]\n                        r += min(d, 2 - d)\n\n                        if d == 1:\n                            tr = True\n                        fr += grid[i][j]\n\n                    else:\n                        break\n\n            elif i == n - 1 - i:\n                for j in range(m):\n                    if j < m - 1 - j:\n                        d = grid[i][j] + grid[i][-j - 1]\n                        c += min(d, 2 - d)\n                        if d == 1:\n                            tc = True\n                        fc += grid[i][j]\n\n                    elif j == m - 1 - j:\n                        if grid[i][j] == 1:\n                            ans += 1\n                    else:\n                        break\n            \n            else:\n                break\n        \n        if not tr and not tc and (fr + fc) & 1:\n            return ans + r + c + 2\n        \n        return ans + r + c\n\n",
    "submit_ts": "1722699746",
    "subm_id": "1343221045"
}