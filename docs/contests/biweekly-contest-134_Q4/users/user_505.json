{
    "username": "jfkjfk",
    "submission": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define fastio()        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD             1000000007\n#define MOD1            998244353\n#define INF             1e18\n#define endl            \"\\n\"\n#define pb              push_back\n#define eb              emplace_back\n#define mp              make_pair\n#define gcd(a, b)       __gcd(a,b)\n#define ff              first\n#define ss              second\n#define PI              3.141592653589793238462\n#define set_bits(x)     __builtin_popcountll(x)\n#define all(x)          (x).begin(), (x).end()\n\ntypedef long long ll;\ntypedef long double lld;\n\n/*---------------------------------------------------------------------------------------------------------------------------*/\nll power(ll a, ll n){\n    ll res = 1;\n    while(n){\n        if(n & 1){\n            res = (res * a) % MOD;\n        }\n        a = (a * a) % MOD;\n        n >>= 1;\n    }\n    return res;\n}\n/*---------------------------------------------------------------------------------------------------------------------------*/\n\nclass Solution {\npublic:\n\n    bool isPalindrome(string s){\n        int n = s.size();\n        for(int i=0; i<n/2; i++){\n            if(s[i] != s[n-i-1]){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    bool isPrime(int n){\n        for(int i=2; i*i<=n; i++){\n            if(n % i == 0){\n                return false;\n            }\n        }\n        return true;\n    } \n    \n    void update(const unordered_map<ll,ll> &mp, unordered_map<ll,ll> &curr_val, int num, int k, ll &ans){\n        for(auto &it : mp){\n            int val1 = it.ff, val2 = it.ss;\n            ll res = val1 & num;\n            if(res==k){\n                ans += val2;\n            }\n            curr_val[res] += val2;\n        }\n    }\n    \n    ll getAns(vector<int> &nums, int k){\n        int n = nums.size();\n        ll ans = 0;\n        unordered_map<ll,ll> mp;\n        int i=0;\n        while(i < n){\n            unordered_map<ll,ll> curr_val;\n            if(nums[i]==k){\n                ans++;\n            }\n            curr_val[nums[i]] = 1;\n            update(mp,curr_val,nums[i],k,ans);\n            mp = curr_val;\n            i++;\n        }\n        return ans;\n    }\n\n    long long countSubarrays(vector<int> &nums, int k) {\n        ll ans = getAns(nums, k);\n        return ans;\n    }\n};\n\n// void solve(ll tc){\n// }\n\n// int main(){\n//     fastio();\n\n//     ll t=1;\n//     cin >> t;\n\n//     for(ll i=1; i<=t; i++){\n//         // cout << \"Case #\" << i << \": \";\n//         solve(i);\n//     }\n\n//     return 0;\n// }",
    "submit_ts": "1720278119",
    "subm_id": "1311695172"
}