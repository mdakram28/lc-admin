{
    "username": "user3593Z",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        \n        UF uf = new UF(circles);\n        \n        for (int i = 0; i < n; i++) {\n            long x = circles[i][0];\n            long y = circles[i][1];\n            long r = circles[i][2];\n            \n            long zx = Math.abs(x - 0);\n            long zy = Math.abs(y - 0);\n            if (zx * zx + zy * zy <= r * r) {\n                return false;\n            }\n            \n            long Xx = Math.abs(x - X);\n            long Xy = Math.abs(y - Y);\n            if (Xx * Xx + Xy * Xy <= r * r) {\n                return false;\n            }\n            \n            for (int j = i + 1; j < n; j++) {\n                long nx = circles[j][0];\n                long ny = circles[j][1];\n                long nr = circles[j][2];\n                long disx = Math.abs(x - nx);\n                long disy = Math.abs(y - ny);\n                long disr = r + nr;\n                if (disx * disx + disy * disy <= disr * disr) {\n                    uf.union(i, j);\n                }\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            int p = uf.find(i);\n            if (uf.hmax[p] >= Y && uf.hmin[p] <= 0) return false;\n            if (uf.wmax[p] >= X && uf.wmin[p] <= 0) return false;\n            if (uf.hmax[p] >= Y && uf.wmax[p] >= X) return false;\n            if (uf.wmin[p] <= 0 && uf.hmin[p] <= 0) return false;\n        }\n        \n        return true;\n    }\n    \n    static class UF {\n        int[] parent;\n        int size;\n        int[] hmax;\n        int[] wmax;\n        int[] hmin;\n        int[] wmin;\n        \n        public UF(int[][] circles) {\n            this.size = circles.length;\n            this.parent = new int[size];\n            hmax = new int[size];\n            wmax = new int[size];\n            hmin = new int[size];\n            wmin = new int[size];\n            \n            for (int i = 0; i < size; i++) {\n                parent[i] = i;\n                hmax[i] = circles[i][1] + circles[i][2];\n                wmax[i] = circles[i][0] + circles[i][2];\n                hmin[i] = circles[i][1] - circles[i][2];\n                wmin[i] = circles[i][0] - circles[i][2];\n            }\n            \n        }\n        \n        int find(int a) {\n            if (parent[a] != a) {\n                return parent[a] = find(parent[a]);\n            }\n            return parent[a];\n        }\n        \n        void union(int a, int b) {\n            int pa = find(a);\n            int pb = find(b);\n            \n            if (pa != pb) {\n                parent[pb] = pa;\n                hmax[pa] = Math.max(hmax[pa], hmax[pb]);\n                wmax[pa] = Math.max(wmax[pa], wmax[pb]);\n                hmin[pa] = Math.min(hmin[pa], hmin[pb]);\n                wmin[pa] = Math.min(wmin[pa], wmin[pb]);\n            }\n        }\n        \n    }\n}",
    "submit_ts": "1722138255",
    "subm_id": "1335786081"
}