{
    "username": "Rishikant Kashyap",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        \n        vector<vector<int>> rowmx(n);\n        \n        for(int i=0; i<n; i++){\n            vector<pair<int,int>> col;\n            for(int j=0; j<m; j++){\n                col.push_back(make_pair(board[i][j], j));\n            }\n            sort(col.begin(), col.end());\n            rowmx[i].push_back(col[m-1].second); \n            rowmx[i].push_back(col[m-2].second);\n            rowmx[i].push_back(col[m-3].second);\n            // cout<<col[m-1].first<<endl;\n            // cout<<col[m-2].first<<endl;\n            // cout<<col[m-3].first<<endl;\n        }\n        \n        long long ans = -1e18;\n\n        for(int i1=0; i1<n; i1++){\n            for(int i2=i1+1; i2<n; i2++){\n                for(int i3=i2+1; i3<n; i3++){\n                    for(auto j1: rowmx[i1]){\n                        for(auto j2: rowmx[i2]){\n                            for(auto j3: rowmx[i3]){\n                                if(j1!=j2 && j2!=j3 && j3!=j1)\n                                    ans = max(ans, 0LL + board[i1][j1] + board[i2][j2] + board[i3][j3]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723908390",
    "subm_id": "1359150563"
}