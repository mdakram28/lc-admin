{
    "username": "_JohnWick_004",
    "submission": "from typing import List\nfrom collections import deque\nimport math\n\nclass Solution:\n    def bfs(self, stadium, sachin, virat, ms_dhoni, players):\n        arr1 = []\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        queue = deque([sachin])\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        visited = [0] * (players + 4)\n        aa = 4;\n        bb = 9;\n        cc += 1;\n        arr1.append(cc)\n        visited[sachin] = 1\n        aa += 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        while queue:\n            aa = 4;\n            bb = 9;\n            cc = 10;\n            arr1.append(aa)\n            player = queue.popleft()\n            bb = 9;\n            cc = 10;\n            arr1.append(aa)\n            for opponent in stadium[player]:\n                bb += 9;\n                cc = 10;\n                arr1.append(aa)\n                if not visited[opponent]:\n                    cc = 10;\n                    arr1.append(aa)\n                    queue.append(opponent)\n                    cc += 10;\n                    arr1.append(aa)\n                    visited[opponent] = 1\n                    cc = 10;\n                    arr1.append(aa)\n        aa = 1;\n        bb = 9;\n        cc = 12;\n        aa += 8\n        arr1.append(aa)\n        return visited[virat] or visited[ms_dhoni]\n    \n    def canReachCorner(self, field_length: int, field_width: int, circles: List[List[int]]) -> bool:\n        arr1 = []\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        num_circles = len(circles)\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        stadium = [[] for _ in range(num_circles + 4)]\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        for i in range(num_circles):\n            aa = 4;\n            bb = 9;\n            cc = 10;\n            arr1.append(aa)\n            sachin, virat, ms_dhoni = circles[i]\n            aa = 4;\n            bb = 9;\n            cc = 10;\n            arr1.append(aa)\n            if sachin <= ms_dhoni:\n                aa = 4;\n                bb += 1;\n                cc = 10;\n                arr1.append(bb)\n                stadium[num_circles].append(i)\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                stadium[i].append(num_circles)\n                aa += 84;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n            if field_length - sachin <= ms_dhoni:\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                stadium[num_circles + 2].append(i)\n                aa = 4;\n                bb = 9;\n                cc += 10;\n                arr1.append(cc)\n                stadium[i].append(num_circles + 2)\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n            if virat <= ms_dhoni:\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                stadium[num_circles + 1].append(i)\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                stadium[i].append(num_circles + 1)\n                aa = 4;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n            if field_width - virat <= ms_dhoni:\n                aa +=14;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                stadium[num_circles + 3].append(i)\n                aa = 4;\n                bb += 2;\n                cc = 10;\n                arr1.append(bb)\n                stadium[i].append(num_circles + 3)\n                aa = 4;\n                bb = 9;\n                cc += 7;\n                arr1.append(cc)\n            aa = 4;\n            bb = 9;\n            cc = 10;\n            arr1.append(aa)\n            for j in range(i + 1, num_circles):\n                aa = 4;\n                bb += 90\n                cc = 10;\n                arr1.append(bb)\n                sachin2, virat2, ms_dhoni2 = circles[j]\n                aa += 3;\n                bb = 9;\n                cc = 10;\n                arr1.append(aa)\n                distance = math.sqrt((sachin - sachin2) ** 2 + (virat - virat2) ** 2)\n                if ms_dhoni + ms_dhoni2 >= distance:\n                    stadium[i].append(j)\n                    stadium[j].append(i)\n        aa = 4;\n        bb = 9;\n        cc = 10;\n        arr1.append(aa)\n        is_blocked = (self.bfs(stadium, num_circles, num_circles + 1, num_circles + 2, num_circles + 4) == 0 and\n                     self.bfs(stadium, num_circles + 3, num_circles + 2, num_circles + 1, num_circles + 4) == 0)\n        return is_blocked\n",
    "submit_ts": "1722136512",
    "subm_id": "1335736806"
}