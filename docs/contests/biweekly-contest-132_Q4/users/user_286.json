{
    "username": "nguyenducloc2",
    "submission": "class Solution {\n   public:\n    map<int, int> mp;\n\n    int query(vector<int>& trees, int L, int R, int l, int r, int index) {\n        if (R < l || L > r) {\n            return 0;\n        }\n        if (L >= l && R <= r) {\n            return trees[index];\n        }\n        int mid = (L + R) / 2;\n        return max(query(trees, L, mid, l, r, 2 * index),\n                   query(trees, mid + 1, R, l, r, 2 * index + 1));\n    }\n\n    void update(vector<int>& trees, int L, int R, int pos, int val, int index) {\n        if (L == R) {\n            trees[index] = val;\n            return;\n        }\n        int mid = (L + R) / 2;\n        if (pos <= mid)\n            update(trees, L, mid, pos, val, 2 * index);\n        else\n            update(trees, mid + 1, R, pos, val, 2 * index + 1);\n        trees[index] = max(trees[2 * index], trees[2 * index + 1]);\n    }\n\n    int maximumLength(vector<int>& nums, int k) {\n        mp.clear();\n        int n = (int)nums.size();\n        for (int i = 0; i < n; i++) {\n            mp[nums[i]]++;\n        }\n        int index = 0;\n        for (auto& e : mp) {\n            e.second = index;\n            index++;\n        }\n        vector<vector<int>> trees(k + 1, vector<int>(4 * index + 5));\n        for (int i = 0; i < n; i++) {\n            auto pos = mp[nums[i]];\n            for (int j = 0; j <= k; j++) {\n                int mx = query(trees[j], 0, index - 1, pos, pos, 1);\n                update(trees[j], 0, index - 1, pos, mx + 1, 1);\n            }\n            for (int j = 0; j < k; j++) {\n                int mx1 = query(trees[j + 1], 0, index - 1, pos, pos, 1);\n                int mx2 = query(trees[j], 0, index - 1, 0, pos - 1, 1);\n                int mx3 = query(trees[j], 0, index - 1, pos + 1, index - 1, 1);\n                update(trees[j + 1], 0, index - 1, pos,\n                       max(max(mx2, mx3) + 1, mx1), 1);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i <= k; i++) {\n            ans = max(ans, trees[i][1]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861813.0
}