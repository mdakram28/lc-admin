{
    "username": "user3087gX",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<vector<int>> pre(n , vector<int> (32));\n        for(int i = 0 ; i<32 ; i++){\n            int bit = (1<<i) & nums.back();\n            if(bit) pre[n-1][i] = n;\n            else pre[n-1][i] = n-1;\n        }\n        for(int i = n-2 ; i>=0 ; i--){\n            for(int j = 0 ; j<32 ;j++){\n                int bit = (1<<j) & nums[i];\n                if(bit) pre[i][j] = pre[i+1][j];\n                else pre[i][j] = i;\n            }\n        }\n        for(int i = 0 ; i<n ; i++){\n            if(nums[i]<k) continue;\n            int start = i, end = n;\n            for(int j = 0 ; j<32 ; j++){\n                int bit = (1<<j) & nums[i];\n                int kbit = (1<<j) & k;\n                if(kbit) end = min(end , pre[i][j]);\n                if(!kbit) start = max(start , pre[i][j]);\n            }\n            ans+=max(0 ,end-start);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281180",
    "subm_id": "1311815968"
}