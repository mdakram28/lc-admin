{
    "username": "jainam_510",
    "submission": "class Seg{\n    public:\n    vector<int> seg;\n    public:\n    Seg(int n){\n        seg.resize(4*n+1);\n    }\n\n    void build(vector<int> arr,int low,int high,int ind){\n        if(low==high){\n            seg[ind]=arr[low];\n            return;\n        }\n\n        int mid=(low+high)/2;\n        build(arr,low,mid,2*ind+1);\n        build(arr,mid+1,high,2*ind+2);\n\n        seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);\n    }\n\n    int query(int ind,int low,int high,int l,int r){\n        if(low>=l && high<=r){\n            return seg[ind];\n        }else if(low>r || high<l){\n            return INT_MAX;\n        }else{\n            int mid=(low+high)/2;\n\n            int left=query(2*ind+1,low,mid,l,r);\n            int right=query(2*ind+2,mid+1,high,l,r);\n\n            return min(left,right);\n        }\n    }\n\n    void update(int ind,int low,int high,int i,int val){\n        if(low==high){\n            seg[ind]=val;\n            return;\n        }\n\n        int mid=(low+high)/2;\n\n        if(i<=mid) update(2*ind+1,low,mid,i,val);\n        update(2*ind+2,mid+1,high,i,val);\n\n        seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);\n    }\n\n};\n\nclass Solution {\npublic:\n    \n    void aa(){\n        int k=2+5;\n    }\n    \n    void eaa(){\n        int k=2+5;\n    }\n    \n    void ava(){\n        int k=2+5;\n    }\n    \n    void aqqa(){\n        int k=5+5;\n    }\n    \n    void hulk(long long ironman, vector<int> &avengers, long long thor, long long loki, vector<long long> &shield){\n        if(thor == loki){\n            shield[ironman] = avengers[thor];\n            return;\n        }\n        long long mid = thor + (loki - thor) / 2;\n        hulk(2 * ironman + 1, avengers, thor, mid, shield);\n        hulk(2 * ironman + 2, avengers, mid + 1, loki, shield);\n        shield[ironman] = shield[2 * ironman + 1] & shield[2 * ironman + 2];\n    }\n    \n    long long tony(long long ironman, vector<long long> &shield, long long thor, long long loki, long long spiderman, long long blackwidow){\n        if(thor > blackwidow || loki < spiderman){\n            return INT_MAX;\n        }\n        if(thor >= spiderman && loki <= blackwidow){\n            return shield[ironman];\n        }\n        long long mid = thor + (loki - thor) / 2;\n        long long hawkeye = tony(2 * ironman + 1, shield, thor, mid, spiderman, blackwidow);\n        long long scarlet = tony(2 * ironman + 2, shield, mid + 1, loki, spiderman, blackwidow);\n        return hawkeye & scarlet;\n    }\n    \n    long long stark(vector<int> &avengers, long long thanos, vector<long long> &shield){\n         long long n = avengers.size();\n         long long count = 0;\n         for(long long i = 0; i < n; i++){\n             long long thor = i;\n             long long loki = n - 1;\n             long long answer = -1;\n             while(thor <= loki){\n                 long long mid = thor + (loki - thor) / 2;\n                 long long query_result = tony(0, shield, 0, n - 1, i, mid);\n                 if(query_result <= thanos){\n                     answer = mid;\n                     loki = mid - 1;\n                 }\n                 else{\n                     thor = mid + 1;\n                 }\n             }\n             if(answer != -1){\n                 count += (n - answer);\n             }\n         }\n        return count;\n    }\n    \n    long long countSubarrays(vector<int>& avengers, int thanos) {\n        long long n = avengers.size();\n        vector<long long> shield(4 * n + 1, -1);\n        hulk(0, avengers, 0, n - 1, shield);\n        long long infinity_stones = stark(avengers, thanos, shield);\n        long long time_stone = stark(avengers, thanos - 1, shield);\n        return infinity_stones - time_stone;\n    }\n};\n",
    "submit_ts": "1720278511",
    "subm_id": "1311712362"
}