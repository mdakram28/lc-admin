{
    "username": "nguyenquocthao00",
    "submission": "MOD = 10**9 + 7\nclass Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n=len(nums)\n        # cacheddp = [[] for _ in range(n)]\n        cachedsumr = [[] for _ in range(n+1)]\n        # @lru_cache(None)\n        def dp(i, va):\n            if i==n: return 1\n            vb= nums[i]-va\n            if i==n-1: return int(va>=0 and vb>=0)\n\n            # if i>=n-1: return 1\n            vb=nums[i]-va\n            # va<=x<=nums[i+1]\n            # vb>=nums[i+1]-x>=0\n            return (sumr(i+1, nums[i+1]) - sumr(i+1, max(va, nums[i+1]-vb)-1))%MOD\n            # res=0\n            # for x in range(max(va, nums[i+1]-vb), nums[i+1]+1): res += dp(i+1, x)\n            # return res%MOD\n        \n        # @lru_cache(None)\n        def sumr(i, va):\n            if not cachedsumr[i]:\n                cachedsumr[i] = [0]*(nums[i]+1)\n                cachedsumr[i][0] = dp(i, 0)\n                for j in range(1, nums[i]+1):\n                    cachedsumr[i][j] = (cachedsumr[i][j-1] + dp(i, j))%MOD\n            if va<0: return 0\n            va=min(va, nums[i])\n            # print(i, va, nums[i], cachedsumr[i])\n            return cachedsumr[i][va]\n            # return e\n            # return 0\n            # return cachedsumr[i][va]\n            # return (sumr(i, va-1) + dp(i, va))%MOD\n        # for i in range(0, nums[0]+1):\n        #     print(i, dp(0, i), dp(1, i))\n        return sum(dp(0, va) for va in range(0, nums[0]+1))%MOD",
    "submit_ts": "1723345354",
    "subm_id": "1351553953"
}