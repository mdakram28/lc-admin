{
    "username": "dragonflyer1998",
    "submission": "class Solution {\nprivate static int[] bitArr;\n    public int minimumDifference(int[] nums, int k) {\n        bitArr = new int[32];\n\n        int minAbs = Integer.MAX_VALUE, n = nums.length;\n        int index = 0;\n\n        for (int i = 0; i < n; i++) {\n            plus(nums[i]);\n            int curTotal = eval();\n            minAbs = Math.min(minAbs, Math.abs(curTotal - k));\n            while (index < i && curTotal < k) {\n                minus(nums[index]);\n                ++index;\n                curTotal = eval();\n                minAbs = Math.min(minAbs, Math.abs(curTotal - k));\n            }\n        }\n\n        return minAbs;\n    }\n\n    private void plus(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) {\n                bitArr[i] += 1;\n            }\n        }\n    }\n\n    private void minus(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) {\n                bitArr[i] -= 1;\n            }\n        }\n    }\n\n    private int eval() {\n        int res = 0;\n        for (int i = 0; i < 32; ++i) {\n            if (bitArr[i] == 0) {\n                res ^= (1 << i);\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1717300582",
    "subm_id": "1274848537"
}