{
    "username": "rroushan14",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int hr = 1, vr = 1;\n        int i = 0, j = 0;\n        long long tcost = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                tcost += static_cast<long long>(horizontalCut[i]) * vr;\n                ++hr;\n                ++i;\n            } else {\n                tcost += static_cast<long long>(verticalCut[j]) * hr;\n                ++vr;\n                ++j;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            tcost += static_cast<long long>(horizontalCut[i]) * vr;\n            ++i;\n        }\n\n        while (j < verticalCut.size()) {\n            tcost += static_cast<long long>(verticalCut[j]) * hr;\n            ++j;\n        }\n\n        return tcost;\n    }\n};\n",
    "submit_ts": "1720926010",
    "subm_id": "1320273189"
}