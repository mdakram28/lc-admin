{
    "username": "cybsbbbb",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        points = []\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == 1:\n                    points.append((i, j))\n        \n        def helper2(points):\n            if len(points) <= 2:\n                return len(points)\n            k = len(points)\n            prefix = []\n            left, right, up, down = n, -1, m, -1\n            for i, j in points:\n                left = min(left, j)\n                right = max(right, j)\n                up = min(up, i)\n                down = max(down, i)\n                prefix.append((right - left + 1) * (down - up + 1))\n            suffix = []\n            left, right, up, down = n, -1, m, -1\n            for i, j in points[::-1]:\n                left = min(left, j)\n                right = max(right, j)\n                up = min(up, i)\n                down = max(down, i)\n                suffix.append((right - left + 1) * (down - up + 1))\n            suffix = suffix[::-1]\n            ans = min(suffix[0], prefix[-1])\n            for i in range(k - 1):\n                ans = min(ans, prefix[i] + suffix[i + 1])\n            return ans\n        \n        def helper2out(points):\n            points.sort(key=lambda x: (x[0], x[1]))\n            ans = helper2(points)\n            points.sort(key=lambda x: (x[1], x[0]))\n            ans = min(ans, helper2(points))\n            return ans\n        \n        def helper3(points):\n            ans = m * n\n            left, right, up, down = n, -1, m, -1\n            for idx in range(len(points)):\n                i, j = points[idx]\n                left = min(left, j)\n                right = max(right, j)\n                up = min(up, i)\n                down = max(down, i)\n                ans = min(ans, (right - left + 1) * (down - up + 1) + helper2out(points[idx + 1:]))\n            return ans\n        \n        ans = m * n\n        points.sort(key=lambda x: (x[0], x[1]))\n        ans = min(ans, helper3(points))\n        points.sort(key=lambda x: (x[1], x[0]))\n        ans = min(ans, helper3(points))\n        points.sort(key=lambda x: (-x[0], x[1]))\n        ans = min(ans, helper3(points))\n        points.sort(key=lambda x: (-x[1], x[0]))\n        ans = min(ans, helper3(points))\n        \n        return ans\n\n            \n",
    "submit_ts": "1719112174",
    "subm_id": "1297292992"
}