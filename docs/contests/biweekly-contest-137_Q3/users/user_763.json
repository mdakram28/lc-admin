{
    "username": "\u6728\u6728\u7684\u82b1",
    "submission": "struct Item {\n    int value;\n    int x;\n    int y;\n};\n\nint item_cmp(const void* a, const void* b) {\n    struct Item* ia = (struct Item*)a;\n    struct Item* ib = (struct Item*)b;\n    if (ia->value != ib->value) {\n        return ib->value - ia->value;\n    } else if (ia->x != ib->x) {\n        return ia->x - ib->x;\n    } else {\n        return ia->y - ib->y;\n    }\n}\n\nint find_next_k(struct Item* items, int cnt, int i, int j) {\n    for (int k = j + 1; k < cnt; k++) {\n        if (items[k].x != items[i].x && items[k].y != items[i].y &&\n            items[k].x != items[j].x && items[k].y != items[j].y) {\n            return k;\n        }\n    }\n    return -1;\n}\n\nlong long maximumValueSum(int** board, int boardSize, int* boardColSize) {\n    int cnt = boardSize * boardColSize[0];\n    struct Item* items = (struct Item*)malloc(sizeof(struct Item) * cnt);\n    for (int i = 0, k = 0; i < boardSize; i++) {\n        for (int j = 0; j < boardColSize[i]; j++, k++) {\n            items[k].value = board[i][j];\n            items[k].x = i;\n            items[k].y = j;\n        }\n    }\n    qsort(items, cnt, sizeof(struct Item), item_cmp);\n    long long result = -1000000001LL * 3;\n    int end = cnt;\n    for (int i = 0; i < end; i++) {\n        for (int j = 0; j < cnt; j++) {\n            if (items[j].x == items[i].x || items[j].y == items[i].y) {\n                continue;\n            }\n            int k = find_next_k(items, cnt, i, j);\n            if (k == -1) {\n                continue;\n            }\n            if (end > k) {\n                // printf(\"end change to %d\\n\", k);\n                end = k;\n            }\n            long long tmp = (long long)items[i].value +\n                            (long long)items[j].value +\n                            (long long)items[k].value;\n            if (tmp > result) {\n                result = tmp;\n            }\n        }\n    }\n    return result;\n}",
    "submit_ts": "1723907666",
    "subm_id": "556326808"
}