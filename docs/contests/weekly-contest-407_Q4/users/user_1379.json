{
    "username": "berkeleyColin",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    ll recurse(vector<int>& diffs, int l, int r, int sub){\n        for(int i=l;i<=r;i++)diffs[i]=abs(diffs[i])-sub;\n        if(l>r)return 0;\n        if(l==r)return abs(diffs[l]);\n        int minV=INT_MAX;\n        for(int i=l;i<=r;i++)minV=min(minV,diffs[i]);\n        //cout<<\"minV:\"<<minV<<endl;\n        while(l<=r&&diffs[l]==minV)l++;\n        while(r>=l&&diffs[r]==minV)r--;\n        ll ret=minV;\n        int prev=l;\n        //cout<<\"l:\"<<l<<\", r:\"<<r<<endl;\n        for(int i=l;i<=r;i++){\n            if(diffs[i]==minV){\n                ret+=recurse(diffs,prev,i-1,minV);\n                prev=i+1;\n                //cout<<\"i:\"<<i<<\", ret:\"<<ret<<endl;\n            }\n        }\n        ret+=recurse(diffs,prev,r,minV);\n        return ret;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n=nums.size();\n        if(n==1)return abs(nums[0]-target[0]);\n        vector<int> diffs(n,0);\n        for(int i=0;i<n;i++)diffs[i]=target[i]-nums[i];\n        int prev=0;\n        ll ret=0;\n        for(int r=0;r<n;r++){\n            if((diffs[prev]<0&&diffs[r]>=0)||(diffs[prev]>=0&&diffs[r]<0)){\n                ret+=recurse(diffs,prev,r-1,0);\n                prev=r;\n                //cout<<\"r:\"<<r<<\", ret:\"<<ret<<endl;\n            }\n        }\n        ret+=recurse(diffs,prev,n-1,0);\n        return ret;\n        \n\n    }\n};",
    "submit_ts": "1721532487",
    "subm_id": "1327987001"
}