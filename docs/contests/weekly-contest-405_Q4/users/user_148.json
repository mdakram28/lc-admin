{
    "username": "XxFALCONxX",
    "submission": "class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.cost = None\n\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode()\n    \n    def insert(self, word, cost):\n        node = self.root\n        for char in word:\n            if char not in node.children:\n                node.children[char] = TrieNode()\n            node = node.children[char]\n        node.cost = cost\n\n    def find_prefixes(self, s, start):\n        node = self.root\n        prefixes = []\n        for i in range(start, len(s)):\n            if s[i] not in node.children:\n                break\n            node = node.children[s[i]]\n            if node.cost is not None:\n                prefixes.append((i + 1, node.cost))  # (end index, cost)\n        return prefixes\n\nclass Solution:\n    def minwc(self, words, costs):\n        nwords = []\n        ncosts = []\n        ws = dict()\n        for i in words:\n            ws[i] = 1000000000\n        for i in range(len(words)):\n            ws[words[i]] = min(costs[i], ws[words[i]])\n        for i in ws:\n            nwords.append(i)\n            ncosts.append(ws[i])\n        return nwords, ncosts\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n            # Step 1: Build the Trie\n        words, costs = self.minwc(words, costs)\n        trie = Trie()\n        for word, cost in zip(words, costs):\n            trie.insert(word, cost)\n\n        # Step 2: Initialize DP array\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        # Step 3: DP Transition using the Trie\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            valid_prefixes = trie.find_prefixes(target, i)\n            for end_index, cost in valid_prefixes:\n                dp[end_index] = min(dp[end_index], dp[i] + cost)\n\n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720321244",
    "subm_id": "1312317543"
}