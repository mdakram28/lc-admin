{
    "username": "zheruilin",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] positive = new int[n];\n        int[] negative = new int[n];\n        for (int i = 0; i < n; i++) {\n            positive[i] = Math.max(target[i] - nums[i], 0);\n            negative[i] = Math.max(nums[i] - target[i], 0);\n        }\n        long res = 0;\n        for (int i = 1; i < n; i++) {\n            if (positive[i] < positive[i - 1]) {\n                res += positive[i - 1] - positive[i];\n            }\n        }\n        res += positive[n - 1];\n        for (int i = 1; i < n; i++) {\n            if (negative[i] < negative[i - 1]) {\n                res += negative[i - 1] - negative[i];\n            }\n        }\n        res += negative[n - 1];\n        return res;\n    }\n}",
    "submit_ts": "1721530857",
    "subm_id": "1327945680"
}