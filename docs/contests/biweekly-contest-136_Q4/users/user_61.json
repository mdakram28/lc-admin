{
    "username": "jinmingli",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        vector<vector<int>> g(n);\n        for(auto vv:edges){\n            int u=vv[0],v=vv[1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        \n        vector<int> d1(n,0);\n        function<void(int,int)> dfs=[&](int p,int pa){\n            for(int ne:g[p]){\n                if(ne==pa) continue;\n                dfs(ne,p);\n                int t=d1[ne];\n                t+=(ne%2==0?2:1);\n                d1[p]=max(d1[p],t);\n            }\n        };\n        \n        dfs(0,-1);\n        \n        vector<int> ans(n);\n        function<void(int,int,int)> dfs2=[&](int p,int pa,int pp){\n            //cout<<p<<\" \"<<pp<<endl;\n            int c=pp;\n            multiset<int> ss;\n            for(int ne:g[p]){\n                if(ne==pa) continue;\n                int t=d1[ne];\n                t+=(ne%2==0?2:1);\n                c=max(c,t);\n                ss.insert(t);\n            }\n            ans[p]=c;\n            \n            for(int ne:g[p]){\n                if(ne==pa) continue;\n                int npp=pp;\n                int t=d1[ne];\n                t+=(ne%2==0?2:1);\n                ss.erase(ss.find(t));\n                if(ss.size()>0)\n                    npp=max(npp,(*ss.rbegin()));\n                \n                dfs2(ne,p,npp+(p%2==0?2:1));\n                ss.insert(t);\n            }\n        };\n        \n        dfs2(0,-1,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722698035",
    "subm_id": "552269004"
}