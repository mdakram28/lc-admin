{
    "username": "sveng101",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        md = 10 ** 9 + 7\n        res = 0\n        requirements.sort()\n        if requirements[0][0] == 0 and requirements[0][1] != 0:\n            return 0\n        prev_cnt = 0\n        #print(\"hi\")\n        for m, cnt in requirements:\n            if cnt < prev_cnt: return 0\n            prev_cnt = cnt\n        \n        cnts = [0] * (requirements[-1][1] + 1)\n        cnts[0] = 1\n        mn_nonzero, mx_nonzero = 0, 0\n\n        n_req = len(requirements)\n        #print(requirements)\n        req_idx = int(requirements[0][0] == 0)\n        #print(req_idx)\n        next_upper = requirements[req_idx][1] if req_idx < n_req else float(\"inf\")\n        #print(next_upper)\n        for i in range(1, n):\n            prev_cnts = cnts\n            cnts = [0] * (requirements[-1][1] + 1)\n            #new_mx_nonzero = mn_nonzero\n            for n_inv0 in range(mn_nonzero, mx_nonzero + 1):\n                for n_inv in range(n_inv0, min(n_inv0 + i, next_upper) + 1):\n                    cnts[n_inv] = (cnts[n_inv] + prev_cnts[n_inv0]) % md\n            #print(i, cnts)\n            mx_nonzero = min(next_upper, mx_nonzero + i)\n            if req_idx < len(requirements) and requirements[req_idx][0] == i:\n                if mx_nonzero < requirements[req_idx][1]: return 0\n                mn_nonzero = requirements[req_idx][1]\n                mx_nonzero = requirements[req_idx][1]\n                #mn_nonzero = requirements[req_idx][1]\n                #if cnts[mn_nonzero] == 0: return 0\n                req_idx += 1\n                next_upper = requirements[req_idx][1] if req_idx < n_req else float(\"inf\")\n\n                #mx_nonzero = mn_nonzero\n                #for j in range(mn_nonzero):\n                #    cnts[j] = 0\n                #for j in range(mn_nonzero + 1, len(cnts)):\n                #    cnts[j] = 0\n            #print(i, cnts, mn_nonzero, mx_nonzero, next_upper)\n\n        return sum(cnts[requirements[-1][1]:]) % md\n        \"\"\"\n        curr_m = 0\n        curr_cnt = 0\n        for m, cnt in requirements:\n            if cnt < curr_cnt: return 0\n            m_xs = m - curr_m\n            cnt_xs = cnt - curr_cnt\n            for \n\n\n            curr_cnt = cnt\n            curr_m = m\n        \n\n\n        return res % md\n        \"\"\"",
    "submit_ts": 1719069755.0
}