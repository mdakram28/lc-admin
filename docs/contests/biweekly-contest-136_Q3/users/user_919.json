{
    "username": "bd535853",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        res = 0\n        ones = 0\n        if n % 2 == 1:\n            for j in range(m//2):\n                if grid[n // 2] [j] != grid[n // 2][m - 1 - j]:\n                    res += 1\n                ones += (grid[n // 2] [j] + grid[n // 2][m - 1 - j])\n            \n        if m % 2 == 1:\n            for i in range(n //2):\n                if grid[i][m//2] != grid[n - 1 - i][m//2]:\n                    res += 1\n                ones += (grid[i][m//2] + grid[n - 1 - i][m//2])\n        if res < (ones % 4):\n            if res + (ones % 4) < 4:\n                res += (ones%4)\n\n        for i in range(n//2):\n            for j in range(m//2):\n                total = grid[i][j] + grid[i][m - 1 -j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 -j]\n                res += min(4 - total, total)\n        if m % 2== 1 and n % 2 == 1:\n            res += grid[n//2][m//2]\n        return res",
    "submit_ts": "1722697783",
    "subm_id": "1343158801"
}