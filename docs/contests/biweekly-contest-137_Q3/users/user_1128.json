{
    "username": "Abhinav Prakash",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<long long int,int>>> row(m); \n        long long int max_sum = -1e12;\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long int,int>> temp;\n            for (int j = 0; j < n; ++j) {\n                temp.push_back({board[i][j], j});\n            }\n            sort(temp.rbegin(), temp.rend());\n            row[i] = {temp[0], temp[1], temp[2]};\n        }\n        \n        for (int i1 = 0; i1 < m; ++i1) {\n        for (int i2 = i1 + 1; i2 < m; ++i2) {\n            for(int i3 = i2+1;i3<m;i3++){\n                \n                for(auto [a,b] : row[i1]){\n                    for(auto [a2,b2] : row[i2]){\n                        if (b == b2) continue; \n                        for(auto [a3,b3] : row[i3]){\n                                if(b2 == b3 || b3 == b)continue;\n                            \n                                max_sum = max(max_sum , a + a2 + a3);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return max_sum;\n        \n        \n    }\n};",
    "submit_ts": "1723908641",
    "subm_id": "1359161109"
}