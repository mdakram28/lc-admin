{
    "username": "prutkoi",
    "submission": "class Solution {\npublic:\n    int manhat(vector<vector<int>> &points, int to_avoid){\n        set<pair<int, int>> st;\n        set<pair<int, int>> st1;\n        \n        for(int i = 0; i < points.size(); i++){\n            if(i == to_avoid) continue;\n            auto x = points[i];\n            int a = x[0] + x[1];\n            int b = x[0] - x[1];\n            st.insert({a, i});\n            st1.insert({b, i});\n        }\n        int a = st.rbegin() -> first - st.begin() -> first;\n        int b = st1.rbegin() -> first - st1.begin() -> first;\n        return max(a, b);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        set<pair<int, int>> st;\n        set<pair<int, int>> st1;\n        \n        for(int i = 0; i < points.size(); i++){\n            auto x = points[i];\n            int a = x[0] + x[1];\n            int b = x[0] - x[1];\n            st.insert({a, i});\n            st1.insert({b, i});\n        }\n        int a = st.rbegin() -> first - st.begin() -> first;\n        int b = st1.rbegin() -> first - st1.begin() -> first;\n        int ans = 1e9;\n        if(a > b){\n            int rem = st.begin() -> second;\n            ans = manhat(points, rem);\n            rem = st.rbegin() -> second;\n            ans = min(manhat(points, rem), ans);\n        }\n        else{\n            int rem = st1.begin() -> second;\n            ans = manhat(points, rem);\n            rem = st1.rbegin() -> second;\n            ans = min(manhat(points, rem), ans);\n        }\n        return ans;\n    }\n};"
}