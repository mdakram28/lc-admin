{
    "username": "Naveen Yadav",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        max_ans=float(\"-inf\")\n        r_count=len(board)\n        c_count=len(board[0])\n        one_max=float(\"-inf\")\n        safe_1_i=None\n        safe_1_j=None\n        for i in range(r_count):\n            for j in range(c_count):\n                if board[i][j] > one_max:\n                    one_max=board[i][j]\n                    safe_1_i=i\n                    safe_1_j=j\n        \n        two_max=float(\"-inf\")\n        for i in range(r_count):\n            for j in range(c_count):\n                if board[i][j] > two_max and (i!=safe_1_i or j!=safe_1_j):\n                    two_max=board[i][j]\n\n\n\n        \n        for i in range(r_count):\n            for j in range(c_count):\n                if max_ans <=  board[i][j] +one_max +two_max:\n                    for k in range(i+1, r_count):\n                        for l in range(c_count):\n                            if j!=l and max_ans <=  board[i][j] +one_max +board[k][l]:\n                                for m in range(k+1, r_count):\n                                    for n in range(c_count):\n                                        if j!=l and l!=n and j!=n:\n                                            m_sum=board[i][j]+board[k][l]+board[m][n]\n                                            if m_sum >max_ans:\n                                                max_ans=m_sum\n        return max_ans",
    "submit_ts": "1723907987",
    "subm_id": "1359133338"
}