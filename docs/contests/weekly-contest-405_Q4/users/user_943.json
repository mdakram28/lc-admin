{
    "username": "papaji310",
    "submission": "// Start Of Anuj Bhati aka Papaji310's Template...\n#pragma GCC optimize(\"O2\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long LL;\ntypedef vector<int> vi;\ntypedef vector<bool> vb;\ntypedef vector<char> vc;\ntypedef vector<double> vd;\ntypedef vector<string> vs;\ntypedef pair<LL, LL> pll;\ntypedef pair<int, int> pii;\ntypedef pair<int, bool> pib;\ntypedef pair<char, bool> pcb;\ntypedef pair<string, int> psi;\ntypedef pair<char, int> pci;\ntypedef pair<int, char> pic;\ntypedef pair<string, string> pss;\ntypedef pair<char, char> pcc;\ntypedef pair<int, vi> pivi;\ntypedef vector<vi> vvi;\ntypedef vector<vb> vvb;\ntypedef vector<vc> vvc;\ntypedef vector<vd> vvd;\ntypedef vector<vs> vvs;\ntypedef vector<pii> vpii;\ntypedef vector<pib> vpib;\ntypedef vector<pcb> vpcb;\ntypedef vector<psi> vpsi;\ntypedef vector<pci> vpci;\ntypedef vector<pss> vpss;\ntypedef vector<LL> vll;\ntypedef vector<vll> vvll;\ndouble EPS = 1e-9;\nint INF = 1000000005;\nlong long INFF = 1000000000000000005LL;\ndouble PI = acos(-1);\n\n#define FOR(a, b, c) for (int a = b; a < c; a++)\n#define FOR1(a, b, c) for (int a = b; a <= c; ++a)\n#define Rep(i, n) FOR (i, 0, n)\n#define Rep1(i, n) FOR1(i, 1, n)\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define ALL(v) v.begin(), v.end()\n#define SORT(v) sort(ALL(v))\n#define REVERSE(v) reverse(ALL(v))\n#define mxe(v) max_element(ALL(v))\n#define mie(v) min_element(ALL(v))\n#define bitsDedo(n) __builtin_popcount(n)\n#define umii unordered_map<int, int>\n#define umll unordered_map<LL, LL>\n#define umci unordered_map<char, int>\n#define umcc unordered_map<char, char>\n#define umsi unordered_map<string, int>\n#define umipii unordered_map<int, pii>\n#define umivi unordered_map<int, vi>\n#define umili unordered_map<int, list<int>>\n#define umss unordered_map<string, string>\n#define usi unordered_set<int>\n#define usc unordered_set<char> \n#define sti stack<int>\n#define stc stack<char>\n#define sts stack<string>\n#define mii map<int, int>\n#define mpiii map<pii, int>\n#define mipii map<int, pii>\n#define mivi map<int, vi>\n#define mllll map<LL, LL>\n#define mci map<char, int>\n#define mcc map<char, char>\n#define msi map<string, int>\n#define mss map<string, string>\ntemplate<class Y> void swap(Y& x, Y& y){\n\tx = x + y;\n\ty = x - y;\n\tx = x - y;\n}\ntemplate<typename X, typename Y> void add(X& x, Y& y){\n\treturn x + y;\n}\n// end of Anuj Bhati's aka Papaji310's Template\nclass Trie{\n    public:\n    unordered_map<char, Trie*> child;\n    int c;\n    Trie():c(INT_MAX){}\n};\nclass Help{\n    public:\n    Trie* root;\n    Help(){\n        root = new Trie();\n    }\n    void insert(const string& w, int c){\n        Trie* node = root;\n        for(auto x : w){\n            if(!node->child.count(x))\n                node->child[x] = new Trie();\n            node = node->child[x];\n        }\n        node->c = fmin(node->c, c);\n    }\n    int searching(const string& words){\n        Trie* node = root;\n        for(auto character : words){\n            if(!node->child.count(character))\n                return INT_MAX;\n            node = node->child[character];\n        }\n        return node->c;\n    }\n};\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int size = target.size();\n        vi dp(size + 1, INT_MAX);\n        dp[0] = 0;\n        Help trie;\n        \n        Rep(i, words.size())\n            trie.insert(words[i], costs[i]);\n        Rep(i, size){\n            if(dp[i] == INT_MAX)\n                continue;\n            Trie* node = trie.root;\n            for(int j = i; j < size; j++){\n                if(!node->child.count(target[j]))\n                    break;\n                node = node->child[target[j]];\n                if(node->c != INT_MAX)\n                    dp[j + 1] = fmin(dp[j + 1], dp[i] + node->c);\n            }\n        }\n        //Return the nth dp element\n        return dp[size] == INT_MAX ? -1 : dp[size];\n    }\n};",
    "submit_ts": "1720323130",
    "subm_id": "1312368034"
}