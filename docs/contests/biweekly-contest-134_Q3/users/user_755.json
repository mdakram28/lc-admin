{
    "username": "RohanKadam",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int n = c.size();\n        // k alternating subarrays \n        for(int i = 0; i < k-1; i++){\n            c.push_back(c[i]);\n    }\n        deque<int> q;\n        int ans = 0;\n        vector<int> a(2);\n        for(int i = 0; i < k; i++){\n            if(q.size() == 0) {q.push_back(c[i]); continue;}\n            int t = q.back();\n            if(t == c[i] ) a[t]++;\n            q.push_back(c[i]);\n}   \n                ans = ans + ((a[0]==0) & (a[1]==0));\n\n        for(int i = k; i < c.size(); i++){\n            q.pop_front();\n            if(c[i-k] == c[i-k+1]){a[c[i-k]]--;}\n            int t = q.back();\n            if(t == c[i] ) a[t]++;\n            q.push_back(c[i]);\n                    ans = ans + ((a[0]==0) & (a[1]==0));\n\n            \n}\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720277796",
    "subm_id": "1311680434"
}