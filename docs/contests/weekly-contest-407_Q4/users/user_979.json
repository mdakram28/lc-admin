{
    "username": "tmtriet00",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long[] diff = new long[n];\n        long[] pos = new long[n];\n        long[] neg = new long[n];\n\n        for(int i = 0; i < n; ++i){\n            diff[i] = (long)target[i] - (long)nums[i];\n            if(diff[i] >= 0){\n                pos[i] = diff[i];\n            }\n            else{\n                neg[i] = -diff[i];\n            }\n        }\n\n        // System.out.println(Arrays.toString(diff));\n\n        long posacc = pos[0];\n        for(int i = 1; i < n; ++i){\n            posacc += Math.max(0, pos[i] - pos[i-1]);\n        }\n\n        long negacc = neg[0];\n        for(int i = 1; i < n; ++i){\n            negacc += Math.max(0, neg[i] - neg[i-1]);\n        }\n\n        return posacc + negacc;\n    }\n}",
    "submit_ts": "1721531884",
    "subm_id": "1327972332"
}