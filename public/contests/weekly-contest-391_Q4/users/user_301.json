{
    "username": "potat_",
    "submission": "class Solution {\npublic:\n    int MaxDist(vector<vector<int> >& A, int N)\n    {\n        // Vectors to store maximum and\n        // minimum of all the four forms\n        vector<pair<int, int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i].first = A[i][0] + A[i][1];\n            V1[i].first = A[i][0] - A[i][1];\n            V[i].second = i;\n            V1[i].second = i;\n        }\n\n        // Sorting both the vectors\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        \n        vector<int> a;\n        a.push_back((int) V[0].second);\n        a.push_back((int) V1[0].second);\n        a.push_back((V.back()).second);\n        a.push_back((V1.back()).second);\n        \n        int ans = 1e9;\n        \n        for(int i = 0; i < a.size(); i++)\n        {\n            vector<int> newv, newv1;\n            \n            for(int j = 0; j < V.size(); j++)\n            {\n                if(V[j].second != a[i])\n                    newv.push_back(V[j].first);\n                if(V1[j].second != a[i])\n                    newv1.push_back(V1[j].first);\n            }\n            \n            ans = min(ans, max(newv.back() - newv.front(), newv1.back() - newv1.front()));\n            \n        }\n\n        return ans;\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        return MaxDist(points, points.size());\n    }\n};"
}