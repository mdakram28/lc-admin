{
    "username": "prabhakarjhasunny",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        colors.insert(colors.end(), colors.begin(), colors.begin() + k);\n        int count = 0,ss = colors.size(); std::vector<int> prefixDiffs(ss + 1, 0);\n\n        int p = 1;\n        while ( ss>p) {\n            prefixDiffs[p] = prefixDiffs[p - 1] + std::abs(colors[p] - colors[p - 1]);\n            p++;\n        }\n        \n        k--;\n        int j = k + 1;\n        while (ss>j) {\n            if (prefixDiffs[j] - prefixDiffs[j - k] == k) {\n                count++;\n            }\n            j++;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720280820",
    "subm_id": "1311803206"
}