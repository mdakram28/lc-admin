{
    "username": "gonglinyuan",
    "submission": "def preprocess_combinatorials(max_n):\n    binomials = [[0] * (max_n + 1) for _ in range(max_n + 1)]\n    \n    for n in range(max_n + 1):\n        for m in range(n + 1):\n            if m == 0 or m == n:\n                binomials[n][m] = 1\n            else:\n                binomials[n][m] = binomials[n - 1][m - 1] + binomials[n - 1][m]\n    \n    return binomials\n\n\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        binomials = preprocess_combinatorials(31)\n        ans = 0\n        for jump in range(31):\n            if (2 ** jump) - (jump + 1) <= k <= 2 ** jump:\n                delta = 2 ** jump - k\n                ans += binomials[jump + 1][delta]\n        return ans\n                ",
    "submit_ts": 1716087235.0
}