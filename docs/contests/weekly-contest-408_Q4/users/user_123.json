{
    "username": "VarunR",
    "submission": "class Solution {\npublic:\n    \n    int n;\n  vector<int> par;\n  vector<int> siz;\n\n  void init(int _n) {\n    n = _n;\n    par.resize(n);\n    siz.resize(n);\n\n    for(int i = 0; i < n; i++) {\n      par[i] = i;\n      siz[i] = 1;\n    }\n\n\n  }\n\n  int find(int x) {\n    while(par[x] != par[par[x]]) par[x] = par[par[x]];\n    return par[x];\n  }\n\n  bool same(int x, int y) {\n    return find(x) == find(y);\n  }\n\n  bool merge(int x, int y) {\n    x = find(x);\n    y = find(y);\n\n    if(x == y) return false;\n\n    if(siz[x] < siz[y]) swap(x, y);\n    par[y] = x;\n    siz[x] += siz[y];\n    return true;\n  }\n    \n    bool inter(vector<int>& a, vector<int>& b) {\n        long long x = abs(b[0] - a[0]);\n        long long y = abs(b[1] - a[1]);\n        long long dis = b[2] + a[2];\n        dis = dis * dis;\n        return x * x + y * y <= dis;\n    }\n    \n    bool interhor(vector<int>& a, int x) {\n        int up = a[1] + a[2];\n        int dwn = a[1] - a[2];\n        if(dwn <= x and x <= up) return true;\n        return false;\n    }\n    \n    bool interver(vector<int>& a, int y) {\n        int lft = a[0] - a[2];\n        int rt = a[0] + a[2];\n        if(lft <= y and y <= rt) return true;\n        return false;\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = (int)circles.size();\n        init(n + 4);\n        \n        for(int i = 0; i < n; i++) {\n            \n            if(interhor(circles[i], 0)) merge(i, n);\n            if(interver(circles[i], 0)) merge(i, n + 1);\n            if(interver(circles[i], X)) merge(i, n + 2);\n            if(interhor(circles[i], Y)) merge(i, n + 3);\n            \n            for(int j = i + 1; j < n; j++) {\n                if(inter(circles[i], circles[j])) {\n                    if(merge(i, j)) {\n                        // cout << \"merged \" << i << \" \" << j;\n                        // cout << '\\n';\n                    }\n                    else {\n                        // cout << \"smae group \" << i << \" \" << j;\n                        // cout << '\\n';\n                    }\n                }\n            }\n        }\n        \n        cout << \"--------------\\n\";\n        \n        \n        \n        if(same(n, n + 1) or same(n + 2, n + 3)) return false;\n        if(same(n, n + 3) or same(n + 1, n + 2)) return false;\n        return true;\n        \n    }\n};",
    "submit_ts": "1722137916",
    "subm_id": "1335777206"
}