{
    "username": "shubhambhadada7",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n    int n=nums.size();\n        \n        \n    map<int,int> mp;\n\tfor(int i=0;i<n;++i){\n\t\tmp[nums[i]];\n\t}\n\n\tint ptr=0;\n\tfor(auto &i:mp){\n\t\ti.second=++ptr;\n\t}\n\n\tfor(int i=0;i<n;++i){\n\t\tnums[i]=mp[nums[i]];\n\t}\n\n\n    int dp1[k + 1]; \n    int dp2[k + 1][n+10], dp3[k+1][n+10]; \n\n    memset(dp1, 0, sizeof(dp1));\n    memset(dp2, 0, sizeof(dp2));\n    memset(dp3, 0, sizeof(dp3));\n\n    for (int i : nums) {\n        int prev = 0;\n        for (int j = 0; j <= k; ++j) {\n            int cur = max({prev + 1, (dp1[j] + 1) * dp3[j][i], dp2[j][i] + 1});\n\n            prev = dp1[j];\n            dp2[j][i] = cur;\n\n            if (dp1[j] < cur) {\n                dp1[j] = cur;\n                memset(dp3[j], 0, sizeof(dp3[j])); \n            }\n\n            if (cur == dp1[j]) {\n                dp3[j][i] = true;\n            }\n        }\n    }\n\n    return  dp1[k];\n}\n};",
    "submit_ts": "1717861299",
    "subm_id": "1281786440"
}