{
    "username": "yogeshshinde3624",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int hIndex = 0, vIndex = 0;\n        long long hPieces = 1, vPieces = 1;\n        long long totalCost = 0;\n\n        \n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] > verticalCut[vIndex]) {\n                totalCost += static_cast<long long>(horizontalCut[hIndex]) * vPieces;\n                hIndex++;\n                hPieces++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[vIndex]) * hPieces;\n                vIndex++;\n                vPieces++;\n            }\n        }\n\n        \n        while (hIndex < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[hIndex]) * vPieces;\n            hIndex++;\n            hPieces++;\n        }\n\n        \n        while (vIndex < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[vIndex]) * hPieces;\n            vIndex++;\n            vPieces++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925166",
    "subm_id": "1320245228"
}