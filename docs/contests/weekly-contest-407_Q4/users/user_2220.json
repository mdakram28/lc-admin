{
    "username": "u284976",
    "submission": "long find(int * arr, int left, int right){\n    // printf(\"check arr[%d]:%d to arr[%d]:%d\\n\", left, arr[left], right, arr[right]);\n    if(right < left) return 0;\n    if(left == right){\n        int beforeClear = arr[left];\n        arr[left] = 0;\n        return beforeClear;\n    }\n\n    long result = 0;\n    int min = INT_MAX;\n    int index;\n    for(int i=left ; i<=right ; i++){\n        if(arr[i] < min){\n            min = arr[i];\n            index = i;\n        }\n    }\n    result += min;\n    for(int i=left ; i<=right ; i++){\n        arr[i] -= min;\n        // printf(\"%d \", arr[i]);\n    }\n    // printf(\"\\n\");\n\n    int newLeft = left;\n    while(newLeft <= right){\n        if(arr[newLeft] > 0){\n            int newRight = newLeft;\n            while(newRight <= right && arr[newRight] > 0){\n                newRight++;\n            }\n\n            result += find(arr, newLeft, newRight-1);\n            // printf(\"result = %d\\n\", result);\n        }\n\n        newLeft++;\n    }\n\n    return result;\n}\nlong long minimumOperations(int* nums, int numsSize, int* target, int targetSize) {\n    \n    int * diff = malloc(sizeof(int) * numsSize);\n    for(int i=0 ; i<numsSize ; i++){\n        diff[i] = nums[i] - target[i];\n        // printf(\"%d \", diff[i]);\n    }\n    // printf(\"\\n\");\n\n    long result = 0;\n    int left=0;\n    while(left < numsSize){\n\n        if(diff[left] > 0){\n            int right = left;\n            while(right < numsSize && diff[right] > 0){\n                right++;\n            }\n\n            result += find(diff, left, right-1);\n        }else if(diff[left] < 0){\n            int right = left;\n            while(right < numsSize && diff[right] < 0){\n                diff[right] *= -1;\n                right++;\n            }\n\n            result += find(diff, left, right-1);\n        }\n        \n        left++;\n    }\n\n    return result;\n}",
    "submit_ts": "1721533825",
    "subm_id": "1328017464"
}