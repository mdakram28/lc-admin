{
    "username": "LiuWeibo",
    "submission": "class Solution {\n    using a4i = array<int, 4>;\n    map<a4i, int> cache;\n    int ma1(vector<vector<int>>& grid, int r1, int r2, int c1, int c2) {\n        if (cache.count({r1, r2, c1, c2}))\n            return cache[{r1, r2, c1, c2}];\n        int m = grid.size(), n = grid[0].size();\n        int b = 0, u = INT_MAX, l = INT_MAX, r = 0, cnt = 0;\n        for (int i = r1; i < r2; ++i)\n            for (int j = c1; j < c2; ++j) {\n                if (grid[i][j] == 1) {\n                    b = max(b, i), r = max(r, j);\n                    u = min(u, i), l = min(l, j);\n                    cnt ++;\n                }\n            }\n        if (cnt == 0) return cache[{r1, r2, c1, c2}] = -1;\n        return cache[{r1, r2, c1, c2}] = (b - u + 1) * (r - l + 1);\n    }\n\n    int ma2(vector<vector<int>>& grid, int r1, int r2, int c1, int c2) {\n        int ret = INT_MAX;\n        for (int i = r1; i < r2; ++i) {\n            int half = ma1(grid, r1, i, c1, c2);\n            if (half != -1) {\n                int h2 = ma1(grid, i, r2, c1, c2);\n                if (h2 != -1)\n                    ret = min(ret, half + h2);\n            }\n        }\n        for (int i = c1; i <c2; ++i) {\n            int half = ma1(grid, r1, r2, c1, i);\n            if (half != -1) {\n                int h2 = ma1(grid, r1, r2, i, c2);\n                if (h2 != -1) {\n                    ret = min(ret, half + h2);\n                }\n            }\n        }\n        return ret == INT_MAX ? -1 : ret;\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int ret = INT_MAX;\n        int m = grid.size(), n = grid[0].size();\n        for (int i = 1; i < m; ++i) {\n            int half = ma1(grid, 0, i, 0, n);\n            int half2 = -1;\n            if (half != -1) {\n                half2 = ma2(grid, i, m, 0, n);\n                if (half2 != -1) {\n                    ret = min(ret, half + half2);\n                }\n            }\n        }\n        for (int i = m - 1; i > 0; --i) {\n            int half = ma1(grid, i, m, 0, n);\n            int half2 = -1;\n            if (half != -1) {\n                half2 = ma2(grid, 0, i, 0, n);\n                if (half2 != -1) {\n                    ret = min(ret, half + half2);\n                }\n            }\n        }\n        for (int i = 1; i < n; ++i) {\n            int half = ma1(grid, 0, m, 0, i);\n            int half2 = -1;\n            if (half != -1) {\n                half2 = ma2(grid, 0, m, i, n);\n                if (half2 != -1) {\n                    ret = min(ret, half + half2);\n                }\n            }\n        }\n        for (int i = n - 1; i > 0; --i) {\n            int half = ma1(grid, 0, m, i, n);\n            int half2 = -1;\n            if (half != -1) {\n                half2 = ma2(grid, 0, m, 0, i);\n                if (half2 != -1) {\n                    ret = min(ret, half + half2);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1719113447",
    "subm_id": "1297325426"
}