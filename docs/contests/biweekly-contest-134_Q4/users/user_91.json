{
    "username": "focused-svvart22pp",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        \n        vector st(__lg(n) + 1, vector<int>(n));\n        st[0] = a;\n        for (int j = 1; j <= __lg(n); j++) {\n            for (int i = 0; i + (1 << j) - 1 < n; i++) {\n                st[j][i] = st[j - 1][i] & st[j - 1][i + (1 << (j - 1))];\n            }\n        }\n\n        auto query = [&](int l, int r) {\n            int k = __lg(r - l + 1);\n            return st[k][l] & st[k][r - (1 << k) + 1];\n        };\n        long long ans = 0;\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n;\n            while (l + 1 < r) {\n                int mid = (l + r) / 2;\n                if (query(i, mid) >= k) {\n                    l = mid;\n                } else {\n                    r = mid;\n                }\n            }\n            if (query(i, l) != k) {\n                continue;\n            }\n            int tmp = l;\n            l = i - 1; r = n;\n            while (l + 1 < r) {\n                int mid = (l + r) / 2;\n                if (query(i, mid) > k) {\n                    l = mid;\n                } else {\n                    r = mid;\n                }\n            }\n            ans += tmp - l;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276527",
    "subm_id": "544550693"
}