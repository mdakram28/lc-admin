{
    "username": "gprakhar141",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) { \n        int n=nums.size(); \n\t\tint maxLen=0;\n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n\n        vector<int>temp1(k+1,-1); \n        vector<map<int,int>>temp2(k+1); \n\t\tmaxLen++;\n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+temp1[l]); \n                } \n                if(temp2[j].find(nums[i])!=temp2[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+temp2[j][nums[i]]); \n                } \n                maxLen=max(maxLen,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                temp1[j]=max(temp1[j],dp[i][j]); \n                temp2[j][nums[i]]=max(temp2[j][nums[i]],dp[i][j]); \n            } \n        } \n        return maxLen; \n    }\n};",
    "submit_ts": 1717861950.0
}