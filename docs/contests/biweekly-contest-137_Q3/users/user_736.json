{
    "username": "Himanshu Kumar",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length, m = board[0].length;\n        long [][][] dp = new long [n][m + 1][m + 1];\n        for(int i = 0 ; i < n ; i++) {\n            for(int j = 0 ; j <= m ; j++) Arrays.fill(dp[i][j], Long.MIN_VALUE);\n        }\n        return getMax(board, 0, 0, 0, dp, n, m);\n    }\n\n    private long getMax(int [][] arr, int in, int col1, int col2, long [][][] dp, int n, int m) {\n        if(in == n) return Long.MIN_VALUE;\n        if(dp[in][col1][col2] != Long.MIN_VALUE) return dp[in][col1][col2];\n        long val = getMax(arr, in + 1, col1, col2, dp, n, m);\n        if(col1 == 0) {\n            for(int j = 0 ; j < m ; j ++) {\n                long temp = getMax(arr, in + 1, j + 1, col2, dp, n, m);\n                if(temp != Long.MIN_VALUE) {\n                    temp += arr[in][j];\n                    val = Math.max(val, temp);\n                }\n            }\n        } else if (col2 == 0) {\n            for(int j = 0 ; j < m ; j ++) {\n                if(col1 == j + 1) continue;\n                long temp = getMax(arr, in + 1, col1, j + 1, dp, n, m);\n                if(temp != Long.MIN_VALUE) {\n                    temp += arr[in][j];\n                    val = Math.max(val, temp);\n                }\n            }\n        } else {\n            for(int j = 0 ; j < m ; j ++) {\n                if(col1 == j + 1 || col2 == j + 1) continue;\n                val = Math.max(val, arr[in][j]);\n            }\n        }\n        dp[in][col1][col2] = val;\n        return dp[in][col1][col2];\n    }\n}",
    "submit_ts": "1723907621",
    "subm_id": "1359116499"
}