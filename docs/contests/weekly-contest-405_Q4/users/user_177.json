{
    "username": "sodacorsair",
    "submission": "class Solution {\n    class Trie\n    {\n        Trie[] children = new Trie[26];\n        boolean isWord = false;\n        int cost = Integer.MAX_VALUE;\n\n        public Trie()\n        {\n            // nothing...\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Trie root = new Trie();\n        for (int i = 0; i < words.length; i++)\n        {\n            Trie cur = root;\n            for (char c : words[i].toCharArray())\n            {\n                int idx = c - 'a';\n                if (cur.children[idx] == null) cur.children[idx] = new Trie();\n                cur = cur.children[idx];\n            }\n            cur.isWord = true;\n            cur.cost = Math.min(cur.cost, costs[i]);\n        }\n\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            Trie cur = root;\n            int j = i;\n            while (cur != null && j < n)\n            {\n                int idx = target.charAt(j++) - 'a';\n                cur = cur.children[idx];\n                if (cur != null && cur.isWord) dp[j] = Math.min(dp[i] + cur.cost, dp[j]);\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}",
    "submit_ts": "1720321320",
    "subm_id": "1312319646"
}