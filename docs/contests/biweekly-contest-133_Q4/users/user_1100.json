{
    "username": "akshajpadmakar",
    "submission": "   const int MOD = 1e9 + 7;\n\ntemplate< int mod >struct ModInt {\npublic:\n\tint x;\n    \n\tModInt() : x(0) {}\n\n\tModInt(int _x) {\n\t\t_x %= mod; _x += mod; _x %= mod;\n\t\tx = _x;\n\t}\n\n\tModInt &operator+=(const ModInt &_x) {\n\t\tx += _x.x;\n\t\tif (x >= mod) {\n\t\t\tx -= mod;\n\t\t}\n\t\treturn *this;\n\t}\n\n\tModInt &operator-=(const ModInt &_x) {\n\t\tx -= _x.x;\n\t\tif (x < 0) {\n\t\t\tx += mod;\n\t\t}\n\t\treturn *this;\n\t}\n\n\tModInt &operator*=(const ModInt &_x) {\n\t\tx *= _x.x; x %= mod;\n\n\t\treturn *this;\n\t}\n\n\tModInt &operator/=(const ModInt &_x) {\n\t\t*this *= _x.inverse();\n\t\treturn *this;\n\t}\n\n\tModInt operator-() const {return ModInt(-x); }\n\n\tModInt operator+(const ModInt &_x) const { return ModInt(*this) += _x; }\n\n\tModInt operator-(const ModInt &_x) const { return ModInt(*this) -= _x; }\n\n\tModInt operator*(const ModInt &_x) const { return ModInt(*this) *= _x; }\n\n\tModInt operator/(const ModInt &_x) const { return ModInt(*this) /= _x; }\n\n\tbool operator==(const ModInt &_x) const { return x == _x.x; }\n\n\tbool operator!=(const ModInt &_x) const { return x != _x.x; }\n\n\tModInt inverse() const {\n\t\tint a = x, b = mod, u = 1, v = 0, t;\n\t\twhile (b > 0) {\n\t\t\tt = a / b;\n\t\t\tswap(a -= t * b, b);\n\t\t\tswap(u -= t * v, v);\n\t\t}\n\t\treturn ModInt(u);\n\t}\n\n\tModInt binpow(int n) const {\n\t\tModInt ans(1), mul(x);\n\t\twhile (n > 0) {\n\t\t\tif (n & 1) {\n\t\t\t\tans *= mul;\n\t\t\t}\n\t\t\tmul *= mul;\n\t\t\tn >>= 1;\n\t\t}\n\t\treturn ans;\n\t}\n\n\tfriend ostream &operator<<(ostream &os, const ModInt &p) {\n\t\treturn os << p.x;\n\t}\n\n\tfriend istream &operator>>(istream &is, ModInt &a) {\n\t\tint t;\n\t\tis >> t;\n\t\ta = ModInt< mod >(t);\n\t\treturn (is);\n\t}\n\nprivate:\n};\n\nusing mint = ModInt< MOD >;\n\n\nclass Solution {\npublic:\n\nint numberOfPermutations(int n, vector<vector<int>>& r) {\n\tint q = r.size();\n\tmap<int, int> mp;\n\tfor (int i = 0; i < q; i++) {\n\t\tmp[r[i][0] + 1] = r[i][1];\n\t}\n\n\tint mx = n * (n - 1) / 2;\n\tvector<vector<mint>> dp(n + 1, vector<mint>(mx + 1, 0));\n\tvector<vector<int>> vis(n + 1, vector<int>(mx + 1, 0));\n\tfunction<mint(int, int)> dfs = [&](int len, int k) {\n\t\tif (mp.find(len) != mp.end()) {\n\t\t\tif (mp[len] != k) {\n\t\t\t\treturn mint(0ll);\n\t\t\t}\n\t\t}\n\t\t if (len == 0 && k == 0) {\n\t\t\treturn mint(1ll);\n\t\t}\n\n\t\tif (vis[len][k]) {\n\t\t\treturn dp[len][k];\n\t\t}\n\t\tvis[len][k] = 1;\n\t\tmint sum = 0;\n\t\tfor (int i = 0; i <= k; i++) {\n\t\t\tif (i <= len - 1) {\n\t\t\t\tsum += dfs(len - 1, k - i);\n\t\t\t}\n\t\t}\n\t\treturn dp[len][k] = sum;\n\t};\n\tmint ans = 0;\n\tfor (int i = 0; i <= mx; i++) {\n\t\tans += dfs(n, i);\n\t}\n\treturn ans.x;\n}\n};",
    "submit_ts": 1719071149.0
}