{
    "username": "yinqiaozhang",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    int waysToReachStair(int k) {\n        int C[33][33];\n        for (int i = 0; i <= 32; i ++) {\n            for (int j = 0; j <= i; j ++) {\n                if (!j) C[i][j] = 1;\n                else C[i][j] = C[i-1][j] + C[i-1][j-1];\n            }\n        }\n        \n        // \u679a\u4e3e\u6700\u7ec8\u7684jump\u503c / \u4f7f\u7528j\u6b21jump\n        ll res = 0;\n        for (int j = 0; j <= 32; j ++) {\n            ll up = (1LL << j) - 1;\n            ll need = up - (k - 1);\n            if (need >= 0 and need <= j + 1) {\n                // j + 1\u4e2a\u7a7a\u9699\u9009need\u4e2a\n                res += C[j + 1][need];\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716087480.0
}