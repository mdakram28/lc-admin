{
    "username": "Burhanuddin Rangwala",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m,n=len(board),len(board[0])\n        row_max=dict()\n        \n        def helper(row):\n            mx1=mx2=mx3=-inf\n            idx1=idx2=idx3=None\n            for col in range(n):\n                x=board[row][col]\n                if x>=mx1:\n                    mx1,mx2,mx3=x,mx1,mx2\n                    idx1,idx2,idx3=col,idx1,idx2\n                elif x>=mx2:\n                    mx2,mx3=x,mx2\n                    idx2,idx3=col,idx2\n                elif x>=mx3:\n                    mx3=x\n                    idx3=col\n            return (idx1,idx2,idx3)\n        \n        for i in range(m):\n            row_max[i]=helper(i)\n        \n        # print(row_max)\n        \n        def helper2(row1,row2,row3):\n            cands1=row_max[row1]\n            cands2=row_max[row2]\n            cands3=row_max[row3]\n            res=-inf\n            for a in cands1:\n                for b in cands2:\n                    for c in cands3:\n                        if len(set([a,b,c]))==3:\n                            # print(a,b,c)\n                            res=max(res,board[row1][a]+board[row2][b]+board[row3][c])\n            return res\n                \n        ans=-inf\n        for comb in itertools.combinations(range(m),3):\n            ans=max(ans,helper2(*comb))\n        \n        return ans\n            \n            \n            \n            \n            \n        ",
    "submit_ts": "1723908656",
    "subm_id": "1359161740"
}