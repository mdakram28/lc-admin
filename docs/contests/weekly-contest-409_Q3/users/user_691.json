{
    "username": "RopoC",
    "submission": "#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nstruct Node {\n\tNode *l = 0, *r = 0;\n\tint lo, hi, mset = -1, val = 0;\n\tNode(int lo,int hi):lo(lo),hi(hi){}\n\tint query(int L, int R) {\n\t\tif (R <= lo || hi <= L) return 0;\n\t\tif (L <= lo && hi <= R) return val;\n\t\tpush();\n\t\treturn l->query(L, R) + r->query(L, R);\n\t}\n\tvoid set(int L, int R, int x) {\n\t\tif (R <= lo || hi <= L) return;\n\t\tif (L <= lo && hi <= R) { mset = x; val = x * (hi - lo);}\n\t\telse {\n\t\t\tpush(), l->set(L, R, x), r->set(L, R, x);\n\t\t\tval = l->val +  r->val;\n        }\n\t}\n\tvoid push() {\n\t\tif (!l) {\n\t\t\tint mid = lo + (hi - lo)/2;\n\t\t\tl = new Node(lo, mid); r = new Node(mid, hi);\n\t\t}\n\t\tif (mset != -1)\n\t\t\tl->set(lo,hi,mset), r->set(lo,hi,mset), mset = -1;\n\t}\n};\n\nclass Solution {\n    \npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> res;\n        Node tree(0, n);\n        for (int i = 0; i < n - 1; i++) {\n            tree.set(0, n - 1, 1);\n        }\n\n        for (auto& q : queries) {\n            int cs = tree.query(q[0], q[1]);\n            if (cs > 0) {\n                tree.set(q[0] + 1, q[1], 0);\n            }\n\n            res.push_back(tree.query(0, n));\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722742426",
    "subm_id": "1343768670"
}