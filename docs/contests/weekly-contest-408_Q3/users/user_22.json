{
    "username": "MKLOL",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double, double> pdd;\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define rep(i, from, to) for (int i = from; i < (to); ++i)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n#define FOR(i, to) for (int i = 0; i < (to); ++i)\ntypedef vector<vector<int> > vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pair<int, int> > vpi;\ntypedef pair<ll,ll> pll;\ntypedef vector<string> vs;\nconst char en = '\\n';\n\nclass PSum {\npublic:\n  vector<ll> sm;\n\n  // Constructor that initializes the vector with size N\n  PSum(int N) : sm(N) {}\n\n  // Constructor that initializes with a given vector and calculates the prefix sums\n  PSum(const vll &v) {\n    sm = v;\n    make();\n  }\n\n  void add(int pos, ll val) {\n    sm[pos] += val;\n  }\n\n  void add(vll &v) {\n    for (size_t i = 0; i < v.size(); ++i) {\n      sm[i] += v[i];\n    }\n  }\n\n  void make() {\n    for (size_t i = 1; i < sm.size(); ++i) {\n      sm[i] += sm[i - 1];\n    }\n  }\n\n  // Function to get the sum of elements in the range [start, end]\n  ll sum(int start, int end) {\n      if (start > end) return 0;\n    start = max(start, 0);\n    end = min(end, static_cast<int>(sm.size()) - 1);\n\n    if (start == 0) {\n      return sm[end];\n    }\n    return sm[end] - sm[start - 1];\n  }\n};\n\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        PSum s1(sz(s)+4);\n        PSum s2(sz(s)+4);\n        vi o,z;\n        FOR(i, sz(s)) {\n            if(s[i] == '1') {\n                o.pb(i);\n                s1.add(i, 1);\n            } else {\n                z.pb(i);\n                s2.add(i, 1);\n            }\n        }\n        s1.make(); s2.make();\n        z.pb(sz(s));\n        ll ret = 0;\n        // 11100011111\n        for (int i=0;i*i<=sz(s);++i) {\n            int left = 0;\n            for (int j=0;j<sz(s);++j) {\n                while(s2.sum(left, j) > i) {\n                    ++left;\n                }\n                if(left > j) continue;\n                if (s2.sum(left, j) < i) continue;\n                ll ones = s1.sum(left,j);\n                if (ones < i * i) continue;\n                \n                //cout << j << \" \" << left << \" \" << i << endl;\n                int pos = lower_bound(all(z), left) - z.begin();\n                ll cat = j - left + 1;\n                if (i) cat = z[pos] - left + 1;\n                //cout << z[pos] << endl;\n                //cout << cat << \" \" << pos << \" \" << left << \"!\" << endl;\n                ret += min(cat, ones - i*i + 1);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722136079",
    "subm_id": "1335723112"
}