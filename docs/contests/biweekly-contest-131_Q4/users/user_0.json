{
    "username": "pandaforever",
    "submission": "\n\nint d[51000*4];\n\nvoid init1(int x,int l,int r)\n{\n    int mid;\n    d[x]=0;\n    if (l==r) return;\n    mid=(l+r)/2;\n    init1(x+x+1,l,mid);\n    init1(x+x+2,mid+1,r);\n}\n\nvoid set1(int x,int l,int r,int ind,int v)\n{\n    int mid;\n    if (l==r)\n    {\n        d[x]=v;\n        return;\n    }\n    mid=(l+r)/2;\n    if (ind<=mid)\n        set1(x+x+1,l,mid,ind,v);\n    else set1(x+x+2,mid+1,r,ind,v);\n    d[x]=max(d[x+x+1],d[x+x+2]);\n}\n\nint get1(int x,int l,int r,int ll,int rr)\n{\n    int mid;\n    if ((r<ll)||(rr<l)) return 0;\n    if ((ll<=l)&&(r<=rr)) return d[x];\n    mid=(l+r)/2;\n    return max(get1(x+x+1,l,mid,ll,rr),get1(x+x+2,mid+1,r,ll,rr));\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int i,j,k,o,ty,tmp,x,sz;\n        set<int> st;\n        vector<bool> ans;\n        st.clear();\n        ans.clear();\n        st.insert(0);\n        init1(0,0,50000);\n        for (o=0;o<queries.size();o++)\n        {\n            ty=queries[o][0];\n            if (ty==1)\n            {\n                x=queries[o][1];\n                set<int>::iterator it=st.lower_bound(x);\n                if (it!=st.end())\n                {\n                    tmp=(*it-x);\n                    set1(0,0,50000,*it,tmp);\n                }\n                it--;\n                set1(0,0,50000,x,x-*it);\n                st.insert(x);\n                \n            }\n            else\n            {\n                x=queries[o][1];\n                sz=queries[o][2];\n                set<int>::iterator it=st.lower_bound(x);\n                it--;\n                tmp=x-*it;\n                tmp=max(tmp,get1(0,0,50000,0,x));\n                if (tmp>=sz) ans.push_back(true);\n                else ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716648623.0
}