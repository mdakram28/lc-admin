{
    "username": "chromate00",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs)\n    {\n        unordered_map<string,int>comp;\n        int k=size(words);\n        for(int i=0;i<k;i++)\n        {\n            if(comp.count(words[i]))comp[words[i]]=min(comp[words[i]],costs[i]);\n            else comp[words[i]]=costs[i];\n        }\n        vector<map<char,int>>trie(1);\n        using ll=long long;\n        vector<ll>cost(1);\n        auto insert=[&](string s,ll c)\n        {\n            int root=0;\n            for(char z:s)\n            {\n                if(!trie[root].count(z))\n                {\n                    trie[root][z]=trie.size();\n                    trie.push_back({});cost.push_back(1LL<<30);\n                }\n                root=trie[root][z];\n            }\n            cost[root]=c;\n        };\n        for(auto[a,b]:comp)insert(a,b);\n        int n=size(target);\n        vector<ll>dp(n+1,1LL<<60);\n        dp[0]=0;\n        for(int i=0;i<n;i++)\n        {\n            int root=0;\n            for(int j=i;j<n;j++)\n            {\n                if(trie[root].count(target[j]))root=trie[root][target[j]];\n                else break;\n                dp[j+1]=min(dp[j+1],dp[i]+cost[root]);\n            }\n        }\n        if(dp[n]>=1LL<<30)return -1;\n        return (int)dp[n];\n    }\n};",
    "submit_ts": "1720321784",
    "subm_id": "1312332178"
}