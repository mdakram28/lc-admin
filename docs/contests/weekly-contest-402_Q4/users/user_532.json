{
    "username": "balakrishnan_v",
    "submission": "class Solution {\npublic:\n    \n    \n    bool check_is_peak(const vector<int>& nums, int id) {\n        int n=nums.size();\n        if (id<=0 || id>=n-1) return false;\n        return nums[id]>max(nums[id-1],nums[id+1]);\n    }\n    \n    void update(int idx, int v, vector<int>& tree) {\n        while(idx < tree.size()) {\n            tree[idx]+=v;\n            idx += (idx&-idx);\n        }\n    }\n    \n    int read(int idx, const vector<int>& tree) {\n        int ret=0;\n        while(idx) {\n            ret += tree[idx];\n            idx -= (idx&-idx);\n        }\n        return ret;\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        vector<int> tree(n+1,0);\n        for(int i=0;i<n;i++) {\n            if (check_is_peak(nums,i)) {\n                update(i+1,1,tree);\n            }\n        }\n        vector<int> ans;\n        for(auto& tmp : queries) {\n            int t = tmp[0];\n            if (t==1) {\n                int l = tmp[1];\n                int r = tmp[2];\n                int curr = read(r+1,tree)-read(l,tree);\n                if (check_is_peak(nums,l)) curr--;\n                if (l<r && check_is_peak(nums,r)) curr--;\n                ans.push_back(curr);        \n            } else {\n                int idx = tmp[1];\n                int val = tmp[2];\n                // idx-1,idx and idx+1\n                for(int i : {idx-1,idx,idx+1}) {\n                    if (check_is_peak(nums,i)) {\n                        update(i+1,-1,tree);\n                    }    \n                }\n                nums[idx]=val;\n                for(int i : {idx-1,idx,idx+1}) {\n                    if (check_is_peak(nums,i)) {\n                        update(i+1,1,tree);\n                    }    \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718505919",
    "subm_id": "1289600122"
}