{
    "username": "not_me1",
    "submission": "\nclass Solution {\nprivate:\n    static const int M = 1'000'000'007;\n    static const int X = 400;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> m;\n        g(requirements, m);\n        vector<vector<long long>> d(n + 1, vector<long long>(X + 1, 0));\n        h(n, d, m);\n        return j(d, n);\n    }\nprivate:\n    void g(vector<vector<int>>& requirements, unordered_map<int, int>& m) {\n        for (auto& r : requirements) {\n            int p = r[0] + 1;\n            int i = r[1];\n            m[p] = i;\n        }\n    }\n    void h(int n, vector<vector<long long>>& d, unordered_map<int, int>& m) {\n        d[0][0] = 1;\n        for (int s = 1; s <= n; ++s) {\n            for (int i = 0; i <= X; ++i) {\n                k(s, i, d);\n            }\n            l(s, d, m);\n        }\n    }\n    void k(int s, int i, vector<vector<long long>>& d) {\n        for (int p = 0; p < s; ++p) {\n            int v = i - p;\n            if (v >= 0) {\n                d[s][i] = (d[s][i] + d[s - 1][v]) % M;\n            }\n        }\n    }\n    void l(int s, vector<vector<long long>>& d, unordered_map<int, int>& m) {\n        if (m.count(s) > 0) {\n            int r = m[s];\n            for (int i = 0; i <= X; ++i) {\n                if (i != r) {\n                    d[s][i] = 0;\n                }\n            }\n        }\n    }\n    int j(vector<vector<long long>>& d, int n) {\n        long long t = 0;\n        for (int i = 0; i <= X; ++i) {\n            t = (t + d[n][i]) % M;\n        }\n        return static_cast<int>(t);\n    }\n};",
    "submit_ts": "1719071685",
    "subm_id": "1296851995"
}