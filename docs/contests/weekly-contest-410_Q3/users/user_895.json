{
    "username": "prashantpathak01",
    "submission": "class Solution {\n    int MOD = (int)1e9+7;\n    int[] arr;\n    Map<String, Integer> dp;\n    public int countOfPairs(int[] nums) {\n        arr = nums;\n        dp = new HashMap<>();\n        return count(0, 0);\n    }\n    private int count(int i, int last) {\n        if (i ==arr.length) {\n            return 1; \n        }\n        String key = i+\"#\"+last;\n        if (dp.containsKey(key)) {\n            return dp.get(key);\n        }\n        int count = 0;\n        for (int arr1 = last; arr1<= arr[i]; arr1++) {\n            int arr2 = arr[i]-arr1;\n            if (i==0 || arr2 <= arr[i-1]-last) {\n                count = (count+count(i+1,arr1))%MOD;\n            }\n        }\n        dp.put(key,count);\n        return count;\n    }\n}",
    "submit_ts": "1723344814",
    "subm_id": "1351542582"
}