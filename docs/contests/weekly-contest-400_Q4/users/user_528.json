{
    "username": "ds1354584",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> v;\n        int n = nums.size();\n        for(int i = 0; i < n; i++){\n            v.push_back(nums[i]);\n            int j = i + 1;\n            while(j < n and nums[i] == nums[j]){\n                j++;\n            }\n            i = j - 1;\n        }\n        int m = v.size();\n        int mn = abs(v[0] - k);\n        for(int i = 0; i < m; i++){\n            int And = v[i];\n            for(int j = i - 1; j >= i - 65; j--){\n                if(j < 0) break;\n                mn = min(mn, abs(k - And));\n                And &= v[j];\n            }\n            mn = min(mn, abs(k - And));\n            for(int j = i + 1; j < i + 65; j++){\n                if(j >= m) break;\n                mn = min(mn, abs(k - And));\n                And &= v[j];   \n            }\n            mn = min(mn, abs(k - And));\n        }\n        return mn;\n    }\n};",
    "submit_ts": 1717298450.0
}