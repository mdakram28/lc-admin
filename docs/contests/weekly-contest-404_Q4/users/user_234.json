{
    "username": "defaultedplayer",
    "submission": "class Solution {\npublic:\n    int a1 = 0, a2 = 0;\n    vector <int> adj1[100001];\n    vector <int> adj2[100001];\n    bool vis1[100001], vis2[100001];\n    int diam1(int x){\n        int mx1 = 0, mx2 = 0;\n        vis1[x] = 1;\n        for (int y : adj1[x]){\n            if (vis1[y] == 0){\n                int cur = 1 + diam1(y);\n                \n                if (cur >= mx1){\n                    mx2 = mx1;\n                    mx1 = cur;\n                }else if (cur > mx2){\n                    mx2 = cur;\n                }\n            }\n        }\n        \n        a1 = max(a1, mx1 + mx2);\n        return mx1;\n    }\n    \n    int diam2(int x){\n        int mx1 = 0, mx2 = 0;\n        vis2[x] = 1;\n        for (int y : adj2[x]){\n            if (vis2[y] == 0){\n                int cur = 1 + diam2(y);\n                \n                if (cur >= mx1){\n                    mx2 = mx1;\n                    mx1 = cur;\n                }else if (cur > mx2){\n                    mx2 = cur;\n                }\n            }\n        }\n        \n        a2 = max(a2, mx1 + mx2);\n        return mx1;\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        for (int i = 0; i<edges1.size(); ++i){\n            adj1[edges1[i][0]].push_back(edges1[i][1]);\n            adj1[edges1[i][1]].push_back(edges1[i][0]);\n        }\n        \n        for (int i = 0; i<edges2.size(); ++i){\n            adj2[edges2[i][0]].push_back(edges2[i][1]);\n            adj2[edges2[i][1]].push_back(edges2[i][0]);\n        }\n        if (edges1.size() > 0)\n            diam1(edges1[0][0]);\n        if (edges2.size() > 0)\n            diam2(edges2[0][0]);\n        //cout << a1 << ' ' << a2 << '\\n';\n        \n        \n        return max(a1, max(a2, ((a1 + 1) / 2) + ((a2 + 1) / 2) + 1));\n        if (edges1.size() > 0 && edges2.size() > 0){\n            return ((a1 + 1) / 2) + ((a2 + 1) / 2) + 1;\n        }else{\n            return ((a1 + 1) / 2) + ((a2 + 1) / 2);\n        }   \n    }\n};",
    "submit_ts": 1719716922.0
}