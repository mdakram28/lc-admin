{
    "username": "iit2021168",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n=grid.length;\n        int m=grid[0].length;\n        int ans=0;\n        int vert=0,cent=0;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                int one=0,zero=0;\n                HashSet<Integer> h1=new HashSet<>();\n                h1.add(i); h1.add(n-i-1);\n                HashSet<Integer> h2=new HashSet<>();\n                h2.add(j);h2.add(m-j-1);\n                for(int i1:h1){\n                    for(int j1:h2){\n                        if(grid[i1][j1]==1) one++;\n                        else zero++;\n                    }\n                }\n                if((h1.size()==1  || h2.size()==1) && Math.min(one,zero)!=0) vert++;\n                // System.out.println(\"I = \"+i+\" J = \"+j+\" Val = \"+Math.min(one,zero));\n                // System.out.println(\"One = \"+one+\" Zero = \"+zero);\n                // System.out.println(\"B1 = \"+b1+\" B2 = \"+b2+\" B3 = \"+b3);\n                ans+=Math.min(one,zero);\n                if(one>=zero){\n                    grid[i][j]=1;\n                    grid[n-i-1][j]=1;\n                    grid[n-i-1][m-j-1]=1;\n                    grid[i][m-j-1]=1;\n                }else{\n                    grid[i][j]=0;\n                    grid[n-i-1][j]=0;\n                    grid[n-i-1][m-j-1]=0;\n                    grid[i][m-j-1]=0;\n                }\n            }\n        }\n        int cnt=0;\n        for(int i[]:grid) for(int j:i) if(j==1) cnt++;\n        // for(int i[]:grid) System.out.println(Arrays.toString(i));\n        // System.out.println(\"Cnt = \"+cnt);\n        if(cnt%4==1||cnt%4==3) {ans++;cnt--;}\n        if(cnt%4==0) return ans;\n        if(vert>0) return ans;\n        return ans+2;\n    }\n}",
    "submit_ts": "1722698572",
    "subm_id": "1343184964"
}