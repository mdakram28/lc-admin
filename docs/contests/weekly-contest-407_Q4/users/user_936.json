{
    "username": "Ronak_Ramuka",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long operations = 0;\n        int idx = 0;\n\n        while (idx < n) {\n            int pre1 = 0;\n            while (idx < n && nums[idx] - target[idx] > 0) {\n                if (nums[idx] - target[idx] > pre1) {\n                    operations += nums[idx] - target[idx] - pre1;\n                } \n                pre1 = nums[idx] - target[idx];\n                idx++;\n            }\n\n            int pre2 = 0;\n            while (idx < n && nums[idx] - target[idx] < 0) {\n                if (nums[idx] - target[idx] < pre2) {\n                    operations += pre2 - (nums[idx] - target[idx]);\n                } \n                pre2 = nums[idx] - target[idx];\n                idx++;\n            }\n            if (idx < n && nums[idx] - target[idx] == 0) {\n                idx++;\n            }\n        }\n\n        return operations;\n    }\n}\n",
    "submit_ts": "1721532144",
    "subm_id": "1327978776"
}