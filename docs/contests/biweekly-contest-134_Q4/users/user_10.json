{
    "username": "vassu118",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size(), LOG = 18;\n        vector<vector<int>> dp(n, vector<int> (LOG));\n        for(int i=0;i<n;i++) dp[i][0] = nums[i];\n        for(int j=1;j<LOG;j++) {\n            for(int i=0;i<=n-(1<<j);i++) {\n                dp[i][j] = dp[i][j - 1] & dp[i + (1 << (j - 1))][j - 1];\n            }\n        }\n        long long ans = 0;\n        vector<int> arr(n + 10);\n        arr[1] = 0;\n        for(int i=2;i<=n;i++) arr[i] = arr[i / 2] + 1;\n        function<int(int,int)> get = [&](int x, int y) {\n            int dist = y - x + 1;\n            int l = arr[dist];\n            return (dp[x][l] & dp[y - (1 << l) + 1][l]);\n        };\n        for(int i=0;i<n;i++) {\n            int l = i, r = n - 1;\n            int left = i + 1, right = i;\n            while(l <= r) {\n                int mid = (l + r) / 2;\n                int now = get(i, mid);\n                if(now > k) {\n                    l = mid + 1;\n                }\n                else if(now < k) r = mid - 1;\n                else left = mid, r = mid - 1;\n            }\n            l = i, r = n - 1;\n            while(l <= r) {\n                int mid = (l + r) / 2;\n                int now = get(i, mid);\n                if(now > k) {\n                    l = mid + 1;\n                }\n                else if(now < k) r = mid - 1;\n                else right = mid, l = mid + 1;\n            }\n            ans += right - left + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277089",
    "subm_id": "1311647158"
}