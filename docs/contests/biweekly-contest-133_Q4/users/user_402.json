{
    "username": "spal06030",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define fi first\n#define se second\n#define pb push_back\n#define sz(x) (int)x.size()\n#define all(x) x.begin(), x.end()\n#define ini(x, y) memset(x, y, sizeof(x))\n#define pr(x) return x\n#define rep(i,n) for(int i = 0; i < n; i++)\n#define re(i,n) for(int i = 1; i <= n; i++)\n#define vl vector<ll>\n#define vi vector<int>\n#define pll pair<ll, ll>\n#define pii pair<int, int>\n#define vii vector<pii>\ntemplate<class T> inline T Bit(T x, int i) { return (x >> i) & 1;}\ntemplate<class T> bool umin(T &a, T b) { return a > b ? (a = b, true) : false; }\ntemplate<class T> bool umax(T &a, T b) { return a < b ? (a = b, true) : false; }\nconst int N = 2e5 + 10; // check the limits\n\n\n\nclass Solution {\npublic:\n    const int mod = 1e9 + 7;\n    ll dp[303][405];\n    int inv[305];\n    int fun(int n, int k) {\n        if (n == 0) return (k == 0);\n        if (inv[n] != k && inv[n] >= 0) return 0;\n        // if (k == 0) return 1;\n        if (dp[n][k] != -1) return dp[n][k];\n        ll sum = 0;\n        for (int i = 0; i <= k; i++) {\n            if (i <= n - 1) {\n                sum = (sum + fun(n - 1, k - i));\n                sum %= mod;\n            }\n        }\n        return dp[n][k] = sum;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        memset(dp, -1, sizeof(dp));\n        for (int i = 1; i <= n; i++) inv[i] = -1;\n        for (auto u : requirements) {\n            inv[u[0] + 1] = u[1];\n        }\n        return fun(n, inv[n]);\n    }\n};",
    "submit_ts": 1719070121.0
}