{
    "username": "qing-yu-bing-cheng",
    "submission": "class Solution {\npublic:\n    class Tree {\n    public:\n        Tree(int l, int r, vector<int>& nums) {\n            l_ = l;\n            r_ = r;\n            if (l == r) {\n                v_ = nums.at(l);\n            } else {\n                auto mid = (l + r) / 2;\n                lhs = new Tree(l, mid, nums);\n                rhs = new Tree(mid+1, r, nums);\n                v_ = lhs->v_ & rhs->v_;\n            }\n        }\n\n        int get(int l, int r) {\n            if (l_ >= l && r_ <= r) {\n                return v_;\n            }\n            auto mid = (l_ + r_) / 2;\n            if (mid >= r) {\n                return lhs->get(l, r);\n            } else if (mid < l) {\n                return rhs->get(l, r);\n            } else {\n                return lhs->get(l, r) & rhs->get(l, r);\n            }\n        }\n    private:\n        int l_, r_;\n        int v_;\n        Tree* lhs;\n        Tree* rhs;\n    };\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int r = 0;\n        long long ans = 0;\n        Tree t(0, nums.size() - 1, nums);\n        for (int lpos = 0; lpos < nums.size(); lpos++) {\n            if ((nums.at(lpos) & k) < k) {\n                continue;\n            }\n            int pos1;\n            int l = lpos; int r = nums.size() - 1;\n            while (l < r) {\n                int mid = (l + r) / 2;\n                if (t.get(lpos, mid + 1) < k) {\n                    r = mid;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            pos1 = l;\n\n            \n            int pos2;\n            l = lpos; r = nums.size() - 1;\n            while (l < r) {\n                int mid = (l + r) / 2;\n                if (t.get(lpos, mid) > k) {\n                    l = mid + 1;\n                } else {\n                    r = mid;\n                }\n            }\n            pos2 = l;\n            if (t.get(lpos, pos2) != k) {\n                continue;\n            }\n            ans += pos1 - pos2 + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279433",
    "subm_id": "544567460"
}