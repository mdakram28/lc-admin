{
    "username": "Nishu__one8",
    "submission": "class Solution {\npublic:\nvector<int> d1,d2;\nvector<vector<int>> adj1;        \nvector<vector<int>> adj2;\n \nvoid dfs1(int v,int par =-1){\n   for(int child : adj1[v]){  \n   if(child == par)continue;\n      d1[child] = d1[v]+1;\n      dfs1(child,v);\n   }\n}\n\nvoid dfs2(int v,int par =-1){\n   for(int child : adj2[v]){  \n   if(child == par)continue;\n      d2[child] = d2[v]+1;\n      dfs2(child,v);\n   }\n}  \n\nint minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2){\n   int n = edges1.size()+1;\n   int m = edges2.size()+1;\n   adj1.clear();\n   adj1.resize(n+1);\n   adj2.clear();\n   adj2.resize(m+1);\n   d1.clear();\n   d1.resize(n+1);\n   d2.clear();\n   d2.resize(m+1); \n   for(auto it:edges1){\n      adj1[it[0]].push_back(it[1]);\n      adj1[it[1]].push_back(it[0]);\n   }        \n   for(auto it:edges2){\n      adj2[it[0]].push_back(it[1]);\n      adj2[it[1]].push_back(it[0]);\n   } \n\n   int m1=INT_MAX;\n   int m2=INT_MAX;\n   dfs1(0);\n   int mxdepth =0,mxNode=0;\n   for (int i =0; i <n; i++){\n      if(d1[i] >mxdepth){\n         mxdepth = d1[i];\n         mxNode = i; \n      }\n      d1[i]=0;  \n   }\n   dfs1(mxNode);\n   mxdepth =0;\n   int mxN =0;  \n   vector<int> r1(n,0); \n \n   for (int i = 0; i <n; i++){\n      if(d1[i] >mxdepth){\n      mxdepth = d1[i];\n      mxN = i;\n      }\n      r1[i] = max(r1[i],d1[i]);\n      d1[i] = 0;\n   }\n \n   dfs1(mxN);\n   int ans=0;\n   for (int i = 0; i <n; i++){\n   r1[i] = max(r1[i],d1[i]);\n   ans = max(ans, r1[i]);\n   m1 = min(m1, r1[i]);\n   }\n    // cout<<ans<<'\\n';\n/************************************/\n\n  dfs2(0);\n   mxdepth =0,mxNode=0;\n   for (int i =0; i <m; i++){\n      if(d2[i] >mxdepth){\n         mxdepth = d2[i];\n         mxNode = i; \n      }\n      d2[i]=0;  \n   }\n   dfs2(mxNode);\n   mxdepth =0;\n   mxN =0;  \n   vector<int> r2(m,0); \n \n   for (int i = 0; i <m; i++){\n      if(d2[i] >mxdepth){\n      mxdepth = d2[i];\n      mxN = i;\n      }\n      r2[i] = max(r2[i],d2[i]);\n      d2[i] = 0;\n   }\n \n   dfs2(mxN);\n   for (int i = 0; i <m; i++){\n   r2[i] = max(r2[i],d2[i]);\n       // cout<<r2[i]<<\" \";\n   ans = max(ans, r2[i]);\n   m2 = min(m2, r2[i]);\n   }\n    // cout<<ans<<'\\n'; \n    cout<<'\\n';\n    // cout<<m1<<\" \"<<m2<<'\\n';\n   ans = max(ans, m1+m2+1);\n  return ans; \n}\n};",
    "submit_ts": "1719717633",
    "subm_id": "1304396771"
}