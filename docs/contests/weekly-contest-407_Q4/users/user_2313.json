{
    "username": "magical-margulis9t5",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> tot(n + 1);\n        vector<ll> f(n + 1, 0);\n        ll res = 0;\n        for(int i = 0; i < n; i ++) tot[i + 1] = target[i] - nums[i];\n        ll last = 0;\n        for(int i = 1; i <= n; i ++) {\n            f[i] = tot[i] - tot[i-1];\n            res += abs(f[i]);\n            last += f[i];\n        }\n        res += abs(last);\n        return res / 2;\n        for(int i = 1; i <= n; i ++) cout << tot[i] << ' '; cout << endl;\n        for(int i = 1; i <= n; i ++) {\n            // if(f[i] > 0) res += f[i];\n            cout << f[i] << ' ';\n        }\n        return res;\n    }\n    // ll dfs(int i, ll x, vector<int>& tot) {\n\n    // }\n};",
    "submit_ts": "1721533032",
    "subm_id": "548395703"
}