{
    "username": "zokumyoin",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; i++) {\n            trie.add(words[i], costs[i]);\n        }\n        Integer[] memo = new Integer[target.length()];\n        return helper(memo, trie, 0, target);\n    }\n\n    private int helper(Integer[] memo, Trie root, int k, String s) {\n        if (k == s.length()) {\n            return 0;\n        }\n        if (memo[k] != null) {\n            return memo[k];\n        }\n        int min = Integer.MAX_VALUE;\n        Trie node = root;\n        for (int i = k; i < s.length(); i++) {\n            if (node.next[s.charAt(i) - 'a'] == null) {\n                break;\n            }\n            node = node.next[s.charAt(i) - 'a'];\n            if (node.isWord) {\n                int sub = helper(memo, root, i + 1, s);\n                if (sub >= 0) {\n                    min = Math.min(min, node.cost + sub);\n                }\n            }\n        }\n        memo[k] = min == Integer.MAX_VALUE ? -1 : min;\n        return memo[k];\n\n    }\n\n    private class Trie {\n        private Trie[] next;\n        private boolean isWord;\n        private int cost = Integer.MAX_VALUE;\n\n        private Trie() {\n            next = new Trie[26];\n            isWord = false;\n        }\n\n        private void add(String s, int cost) {\n            add(s, 0, cost);\n        }\n\n        private void add(String s, int k, int cost) {\n            if (k == s.length()) {\n                isWord = true;\n                this.cost = Math.min(this.cost, cost);\n\n            } else {\n                char c = s.charAt(k);\n                if (next[c - 'a'] == null) {\n                    next[c - 'a'] = new Trie();\n                }\n                next[c - 'a'].add(s, k + 1, cost);\n            }\n        }\n\n        private boolean contains(String s) {\n            return contains(s, 0);\n        }\n\n        private boolean contains(String s, int k) {\n            if (k == s.length()) {\n                return isWord;\n            } else {\n                char c = s.charAt(k);\n                if (next[c - 'a'] == null) {\n                    return false;\n                }\n                return next[c - 'a'].contains(s, k + 1);\n            }\n        }\n    }\n}",
    "submit_ts": "1720320871",
    "subm_id": "1312306968"
}