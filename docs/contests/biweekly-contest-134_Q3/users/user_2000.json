{
    "username": "qq1239426256",
    "submission": "\ntypedef long long ll;\nvector<ll> Mod = {1610612741, 0, 805306457, 402653189, 201326611, 100663319, 50331653, 1000000007, 1000000009};\nstruct Hash {\n    int n{};\n    vector<ll> M1, M2, h1, h2;\n    ll p1 = 131, p2 = 13331;\n    Hash(string& s) {\n        Init(s);\n    }\n    void Init(string& s) {\n        if (Mod[1] == 0) change();\n        n = s.size();\n        work(1, n, s);\n    }\n    void change() {\n        mt19937 rng(chrono::system_clock::now().time_since_epoch().count());\n        while (Mod[1] == 0 || Mod[2] == 0) shuffle(Mod.begin(), Mod.end(), rng);\n    }\n    void work(int st, int len, string& s) {\n        M1.resize(len + 1);\n        M2.resize(len + 1);\n        h1.resize(len + 1);\n        h2.resize(len + 1);\n        M1[0] = 1;\n        M2[0] = 1;\n        for (int i = st; i <= len; i++) {\n            M1[i] = (M1[i - 1] * p1) % Mod[1];\n            h1[i] = (h1[i - 1] * p1 + s[i - st]) % Mod[1];\n            M2[i] = (M2[i - 1] * p2) % Mod[2];\n            h2[i] = (h2[i - 1] * p2 + s[i - st]) % Mod[2];\n        }\n    }\n    pair<ll, ll> get(int l, int r) {\n        ll t1 = ((h1[r] - h1[l - 1] * M1[r - l + 1]) % Mod[1] + Mod[1]) % Mod[1];\n        ll t2 = ((h2[r] - h2[l - 1] * M2[r - l + 1]) % Mod[2] + Mod[2]) % Mod[2];\n        return {t1, t2};\n    }\n\n    pair<ll, ll> mul(pair<ll, ll> l, pair<ll, ll> r, ll len) {\n        pair<ll, ll> it;\n        l.first *= M1[len] %= Mod[1];\n        l.second *= M2[len] %= Mod[2];\n        it.first = (l.first + r.first) % Mod[1];\n        it.second = (l.second + r.second) % Mod[2];\n        return it;\n    }\n};\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int ans = 0;\n        string str;\n        for (int i = 0; i < n; i++) {\n            str += colors[i] + '0';\n        }\n        for (int i = 0; i < n; i++) {\n            str += colors[i] + '0';\n        }\n        string t1, t2;\n        for (int i = 0; i < n; i++) {\n            t1 += (i % 2) + '0';\n            t2 += (1 - i % 2) + '0';\n        }\n        Hash h1(t1), h2(t2), h3(str);\n        for (int i = 0; i < n; i++) {\n            auto [a, b] = h3.get(i + 1, i + k);\n            auto [t11, t12] = h1.get(1, k);\n            auto [t21, t22] = h2.get(1, k);\n            if ((a == t11 && b == t12) || (a == t21 && b == t22)) ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277036",
    "subm_id": "1311644693"
}