{
    "username": "jian-shen-_",
    "submission": "import java.util.Arrays;\nimport java.util.PriorityQueue;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        // \u4f7f\u7528\u4f18\u5148\u961f\u5217\u6765\u6392\u5e8f\u6240\u6709\u7684\u5207\u5272\u7ebf\uff0c\u5f00\u9500\u6700\u5c0f\u7684\u5207\u5272\u7ebf\u6700\u5148\u88ab\u5904\u7406\n        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> b[2] - a[2]);\n\n        for (int i = 0; i < horizontalCut.length; i++) {\n            pq.offer(new int[]{i, -1, horizontalCut[i]});\n        }\n        for (int j = 0; j < verticalCut.length; j++) {\n            pq.offer(new int[]{-1, j, verticalCut[j]});\n        }\n\n        long totalCost = 0;\n        int hCuts = 0, vCuts = 0; // \u5df2\u7ecf\u6267\u884c\u7684\u6c34\u5e73\u548c\u5782\u76f4\u5207\u5272\u6b21\u6570\n\n        while (!pq.isEmpty()) {\n            int[] cut = pq.poll();\n            int cost = cut[2];\n\n            // \u6c34\u5e73\u5207\u5272\n            if (cut[1] == -1) {\n                totalCost += (long) cost * (vCuts + 1);\n                hCuts++;\n            }else {\n                totalCost += (long) cost * (hCuts + 1);\n                vCuts++;\n            }\n        }\n\n        return totalCost;\n    }\n}",
    "submit_ts": "1720925211",
    "subm_id": "546437702"
}