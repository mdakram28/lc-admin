{
    "username": "LogicalCat",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        path = ['']*n\n        @cache\n        def f(N, m):\n            if N <= 0: return True if m == 0 else False\n            #\u679a\u4e3e\u7b2c1\u4f4d \u548c \u7b2cN\u4f4d\n            # \u5047\u5b9a\u5168\u90e8\u6570\u5b57\u7684\u4f4d\u6570\u662f\u4ece [n, 1]\n            #\u7531\u4e8e\u662f\u9010\u5c42\u5265\u79bb \u6240\u4ee5n-N\u5176\u5b9e\u662f\u5265\u79bb\u7684\u5c42\u6570 (n-N)//2\u662f\u5de6\u53f3\u5404\u5265\u79bb\u7684\u5c42\u6570 e = (n-N)//2 \u6240\u4ee5\u73b0\u5728\u7684\u4f4d\u6570\u662f[n-e, e+1]\n            e = (n-N)//2\n            if n - e == e + 1: #\u5de6\u53f3\u7aef\u70b9\u91cd\u5408\n                for i in range(9, 0 if N == n else -1, -1):\n                    mod = pow(10, e, k)*i % k\n                    ss = f(N-2, (m - mod)%k)\n                    if ss:\n                        path[n-e-1] = str(i)\n                        return True\n            else: #\u679a\u4e3e\u7aef\u70b9\n                for i in range(9, 0 if N == n else -1, -1):\n                    mod = (pow(10, e, k)*i % k + pow(10, n - e - 1, k)*i % k) % k\n                    ss = f(N-2, (m - mod)%k)\n                    if ss:\n                        path[n-e-1] = str(i)\n                        path[e] = str(i)\n                        return True\n            return False\n        f.cache_clear()\n        f(n, 0)\n        return ''.join(path)",
    "submit_ts": "1723950783",
    "subm_id": "556401217"
}