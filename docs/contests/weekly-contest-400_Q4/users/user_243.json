{
    "username": "shreeya1803singhal",
    "submission": "#define INF INT32_MAX\n\nclass stt {\npublic:\n    vector<int> tree;\n    int n;\n\n    stt(vector<int>& aa)\n    {\n        n = aa.size();\n        tree.resize(4 * n);\n        bb(aa, 0, 0, n - 1);\n    }\n\n\n    void bb(vector<int>& aa, int nn, int st,\n               int end)\n    {\n        if (st == end) {\n            tree[nn] = aa[st];\n        }\n        else {\n            int mii = (st + end) / 2;\n            bb(aa, 2 * nn + 1, st, mii);\n            bb(aa, 2 * nn + 2, mii + 1, end);\n\n\n            tree[nn]\n                = tree[2 * nn + 1] & tree[2 * nn + 2];\n        }\n    }\n\n   \n    int qq(int l, int r)\n    {\n        return qq(0, 0, n - 1, l, r);\n    }\n\n    \n    int qq(int nn, int st, int end, int l, int r)\n    {\n        if (r < st || end < l) {\n            return INF;\n        }\n        if (l <= st && end <= r) {\n            return tree[nn];\n        }\n        int mii = (st + end) / 2;\n        int p1 = qq(2 * nn + 1, st, mii, l, r);\n        int p2 = qq(2 * nn + 2, mii + 1, end, l, r);\n\n    \n        return p1 & p2;\n    }\n};\n\nint ca(vector<int> aa, int k)\n{\n    int n = aa.size();\n    stt st(aa);\n    int ans = INF;\n    for (int i = 0; i < n; i++) {\n        int l = i - 1, r = n - 1, mii;\n\n      \n        while (r - l > 1) {\n            mii = (l + r) / 2;\n            if (st.qq(i, mii) >= k)\n                l = mii;\n            else\n                r = mii;\n        }\n        if (l != i - 1)\n            ans = min(ans, abs(st.qq(i, l) - k));\n        ans = min(ans, abs(k - st.qq(i, r)));\n    }\n    return ans;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        long long h=ca(nums,k);\n        if(h>k)return h;\n        return h;\n    }\n};",
    "submit_ts": "1717298297",
    "subm_id": "1274774049"
}