{
    "username": "thinker37",
    "submission": "const int N = 1000+2;\nint par[N];\nint depth[N];\nvoid makeset()\n{\n    for (int i = 1; i < N; i++)\n    {\n        par[i] = i;\n        depth[i] = 0;\n    }\n}\nint find_par(int i)\n{\n    if (par[i] == i)\n        return i;\n    return par[i] = find_par(par[i]);\n}\nvoid Union(int a, int b)\n{\n    int u = find_par(a);\n    int v = find_par(b);\n    if (depth[u] < depth[v])\n    {\n        par[u] = v;\n    }\n    else if (depth[u] > depth[v])\n    {\n        par[v] = u;\n    }\n    else\n    {\n        par[u] = v;\n\n        depth[v]++;\n    }\n}\nbool circle(int x1, int y1, int x2, int y2, int r1, int r2)\n{\n    double d = sqrtl((x1 - x2) *1LL* (x1 - x2)\n                         + (y1 - y2) * 1LL*(y1 - y2));\n\n     \n   if (d < r1 + r2 || d==r1+r2) {\n       return true;\n    }\n   \n      return  false;\n   \n}\nbool isInside(int circle_x, int circle_y,\n                   int rad, int x, int y)\n{\n    \n    if ((x - circle_x) *1LL* (x - circle_x) +\n        (y - circle_y) *1LL* (y - circle_y) <= rad *1LL* rad)\n        return true;\n    else\n        return false;\n}\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        for(int i=0;i<c.size();i++){\n            int x=c[i][0],y=c[i][1],r=c[i][2];\n            \n            double len=sqrtl((x*1LL*x) + (y*1LL*y));\n            \n            if(len<=r || isInside(x,y,r,X,Y))return false;\n        }\n       \n        makeset();\n        \n        int n=c.size();\n        for(int i=0;i<n;i++){\n            for(int j=0;j<i;j++){\n               \n                if(circle(c[i][0],c[i][1],c[j][0],c[j][1],c[i][2],c[j][2])){\n                    Union(i,j);\n                   \n                }\n            }\n        }\n        vector<set<int>> st(4);\n        \n        for(int i=0;i<n;i++){\n             int x=c[i][0],y=c[i][1],r=c[i][2];\n            if(x<=r){\n                st[0].insert(find_par(i));\n            }\n        }\n          for(int i=0;i<n;i++){\n             int x=c[i][0],y=c[i][1],r=c[i][2];\n            if(y<=r){\n                st[1].insert(find_par(i));\n            }\n        }\n          for(int i=0;i<n;i++){\n             int x=c[i][0],y=c[i][1],r=c[i][2];\n            if(abs(X-x)<=r){\n                st[2].insert(find_par(i));\n            }\n        }\n          for(int i=0;i<n;i++){\n             int x=c[i][0],y=c[i][1],r=c[i][2];\n            if(abs(Y-y)<=r){\n                st[3].insert(find_par(i));\n            }\n        }\n        \n        for(auto it:st[0]){\n            if(st[1].count(it))return false;\n        }\n        for(auto it:st[0]){\n            if(st[2].count(it))return false;\n        }\n        \n        for(auto it:st[1]){\n            if(st[3].count(it))return false;\n        }\n        for(auto it:st[2]){\n            if(st[3].count(it))return false;\n        }\n        \n        return true;\n    }\n};",
    "submit_ts": "1722138809",
    "subm_id": "1335800244"
}