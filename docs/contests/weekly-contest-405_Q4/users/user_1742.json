{
    "username": "AKGNlvMnNi",
    "submission": "#include <vector>\n#include <string>\n#include <unordered_map>\n#include <climits>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumCost(string tgt, vector<string>& wrds, vector<int>& csts) {\n        class TrieNode {\n        public:\n            unordered_map<char, TrieNode*> children;\n            vector<pair<int, int>> word_ends;\n        };\n\n        int tgtLen = tgt.size();\n        vector<int> minCost(tgtLen + 1, INT_MAX);\n        minCost[0] = 0;\n\n        // Trie construction\n        TrieNode* root = new TrieNode();\n        int idx = 0;\n        while (idx < wrds.size()) {\n            TrieNode* node = root;\n            int wIdx = 0;\n            while (wIdx < wrds[idx].size()) {\n                char ch = wrds[idx][wIdx];\n                if (!node->children.count(ch)) {\n                    node->children[ch] = new TrieNode();\n                }\n                node = node->children[ch];\n                ++wIdx;\n            }\n            node->word_ends.push_back({idx, csts[idx]});\n            ++idx;\n        }\n\n        // Dynamic programming with Trie traversal\n        int i = 0;\n        while (i < tgtLen) {\n            if (minCost[i] == INT_MAX) {\n                ++i;\n                continue;\n            }\n\n            TrieNode* node = root;\n            int j = i;\n            while (j < tgtLen) {\n                if (!node->children.count(tgt[j])) {\n                    break;\n                }\n                node = node->children[tgt[j]];\n                for (auto& p : node->word_ends) {\n                    int wordLen = wrds[p.first].size();\n                    if (i + wordLen <= tgtLen) {\n                        minCost[i + wordLen] = min(minCost[i + wordLen], minCost[i] + p.second);\n                    }\n                }\n                ++j;\n            }\n            ++i;\n        }\n\n        return minCost[tgtLen] == INT_MAX ? -1 : minCost[tgtLen];\n    }\n};\n",
    "submit_ts": "1720322841",
    "subm_id": "1312360493"
}