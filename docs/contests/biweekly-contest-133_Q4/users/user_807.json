{
    "username": "sah09321",
    "submission": "/**\n * @param {number} n\n * @param {number[][]} requirements\n * @return {number}\n */\nvar numberOfPermutations = function(n, requirements) {\n    const MOD = 1000000007;\n    const MAX_INV = 400;\n\n    let r = new Map();\n    for (let req of requirements) {\n        r.set(req[0] + 1, req[1]);\n    }\n\n    let pc = Array.from({ length: n + 1 }, () => Array(MAX_INV + 1).fill(0));\n    pc[0][0] = 1;\n\n    for (let len = 1; len <= n; len++) {\n        for (let inv = 0; inv <= MAX_INV; inv++) {\n            for (let pos = 0; pos < len; pos++) {\n                let prevInv = inv - pos;\n                if (prevInv >= 0) {\n                    pc[len][inv] = (pc[len][inv] + pc[len - 1][prevInv]) % MOD;\n                }\n            }\n        }\n\n        if (r.has(len)) {\n            let targetInv = r.get(len);\n            for (let inv = 0; inv <= MAX_INV; inv++) {\n                if (inv !== targetInv) {\n                    pc[len][inv] = 0;\n                }\n            }\n        }\n    }\n\n    let res = 0;\n    for (let count of pc[n]) {\n        res = (res + count) % MOD;\n    }\n\n    return res;\n};\n",
    "submit_ts": "1719070972",
    "subm_id": "1296836099"
}