{
    "username": "21R01A05F2",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n     int n = nums.length;\n        int[] t = new int[n];\n        \n        for (int i = 0; i < n; i++) {\n            t[i] = target[i] - nums[i];\n        }\n        \n        int pos = 0; \n        long m = 0, ans = 0;\n        \n        ans = Math.abs(t[0]); \n        m = ans;\n        if (t[0] >= 0) {\n            pos = 1; \n        }\n        \n        for (int i = 1; i < n; i++) { \n            if (t[i] < 0 && pos == 1) { \n                ans += Math.abs(t[i]); \n                m = Math.abs(t[i]);\n                pos = 0;\n                continue;\n            }\n            if (t[i] >= 0 && pos == 0) { \n                ans += Math.abs(t[i]); \n                m = Math.abs(t[i]);\n                pos = 1;\n                continue;\n            }\n            if (m >= Math.abs(t[i])) {\n                m = Math.abs(t[i]);\n                continue;\n            } else {\n                ans += Math.abs(t[i]) - m; \n                m = Math.abs(t[i]);\n            }\n        }\n        return ans;\n    }\n}\n    ",
    "submit_ts": "1721533832",
    "subm_id": "1328017614"
}