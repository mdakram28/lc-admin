{
    "username": "kzllwg",
    "submission": "from collections import deque\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        ans = 0\n        one_list = deque()\n        # sta_index = 0\n        diff_list = []\n        for i,j in zip(nums, target):\n            diff_list.append(i-j)\n        # print(diff_list)\n        for x in diff_list:\n            if len(one_list) == 0:\n                # print(x, 'one')\n                one_list.append((abs(x), 1, x > 0))\n            elif bool(x>0) == one_list[-1][-1]:\n                # print(x, 'two')\n                tmp_x = abs(x)\n                # if tmp_x >one_list[-1][0]:\n                #     one_list.append()\n                tmp_num = 1\n                if tmp_x < one_list[-1][0]:\n                    ans += (one_list[-1][0] - tmp_x)\n                    \n                # while len(one_list) > 0 and tmp_x < one_list[-1][0]:\n                #     ans += (one_list[-1][0] - tmp_x) * one_list[-1][1]\n                #     one_list.pop()\n                    # tmp_num += 1\n                one_list.append((tmp_x, tmp_num, x > 0))\n            else:\n                # print(x, 'thee')\n                ans += one_list[-1][0]\n                one_list.clear()\n                one_list.append((abs(x), 1, x > 0))\n        if len(one_list) > 0:\n            ans += one_list[-1][0]\n        return ans",
    "submit_ts": "1721532987",
    "subm_id": "548395432"
}