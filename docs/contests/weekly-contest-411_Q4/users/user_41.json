{
    "username": "Lucky Orb",
    "submission": "#include <bits/stdc++.h>\n\n#ifdef MEGURINE\n#include \"algo/debug.h\"\n#include \"algo/debug_lc.h\"\n#else\n#define debug(...) 42\n#endif\n\nusing namespace std;\n\n#define itr(it) begin(it), end(it)\n\nint __fast_io__ = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\ntemplate<typename T>\nclass fenwick {\nprivate:\n    vector<T> f1, f2;\n    int n;\n\n    void modify(int x, T v) {\n        for (int i = x; i < n; i |= i + 1)\n            f1[i] += v, f2[i] += v * x;\n    }\n\npublic:\n    explicit fenwick(int _n) : n(_n), f1(_n), f2(_n) {}\n\n    void modify(int l, int r, T v) {\n        modify(l, v), modify(r + 1, -v);\n    }\n\n    T get(int x) {\n        T v{};\n        for (int i = x; i >= 0; i = (i & (i + 1)) - 1)\n            v += f1[i] * (x + 1) - f2[i];\n        return v;\n    }\n\n    T get(int l, int r) {\n        return get(r) - get(l - 1);\n    }\n};\n\nusing i64 = long long;\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>> &queries) {\n        int n = (int) s.size();\n        vector<int> f(n);\n        fenwick<i64> fvv(n);\n        for (int i = 0, j = 0, c0 = 0, c1 = 0; i < n; ++i) {\n            (s[i] == '0' ? c0 : c1)++;\n            while (c0 > k and c1 > k) {\n                (s[j] == '0' ? c0 : c1)--;\n                j++;\n            }\n            fvv.modify(i, i, f[i] = j);\n        }\n        vector<vector<int>> qs(n);\n        for (int i = 0; i < queries.size(); ++i) {\n            qs[queries[i][0]].emplace_back(i);\n        }\n        vector<i64> ans(queries.size());\n        for (int l = 0, j = 0; l < n; ++l) {\n            for (int i: qs[l]) {\n                int r = queries[i][1];\n                ans[i] = i64(r + l + 2) * (r - l + 1) / 2 - fvv.get(l, r);\n            }\n            while (j < n && f[j] <= l) ++j;\n            fvv.modify(0, j - 1, 1);\n        }\n        \n        return ans;\n    }\n};\n\n#ifdef MEGURINE\n\nint main() {\n    freopen(\"../input.txt\", \"r\", stdin);\n    freopen(\"../output.txt\", \"w\", stdout);\n    clock_t start = clock();\n    int T;\n    cin >> T;\n    getchar();\n    while (T--) {\n        Solution sol;\n        test<string, int, vector<vector<int>>>(sol, &Solution::countKConstraintSubstrings);\n    }\n\n    clock_t end = clock();\n    cout << \"\\nRunning Time: \" << (double) (end - start) / CLOCKS_PER_SEC * 1000 << \"ms\" << endl;\n    return 0;\n}\n\n#endif\n",
    "submit_ts": "1723951265",
    "subm_id": "1359767359"
}