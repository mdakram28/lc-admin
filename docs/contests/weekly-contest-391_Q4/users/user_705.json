{
    "username": "thumbpixels",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def maxDis(points):\n            N = len(points)\n            minsum = maxsum = points[0][0] + points[0][1]\n            mindiff = maxdiff = points[0][0] - points[0][1]\n\n            for i in range(1,N):\n                sum = points[i][0] + points[i][1]\n                diff = points[i][0] - points[i][1]\n                if (sum < minsum):\n                    minsum = sum\n                elif (sum > maxsum):\n                    maxsum = sum\n                if (diff < mindiff):\n                    mindiff = diff\n                elif (diff > maxdiff):\n                    maxdiff = diff\n\n            return max(maxsum - minsum, maxdiff - mindiff)\n        def candidates(points):\n            N = len(points)\n            V = [0 for i in range(N)]\n            V1 = [0 for i in range(N)]\n\n            for i in range(N):\n                V[i] = points[i][0] + points[i][1]\n                V1[i] = points[i][0] - points[i][1]\n            \n            Varr = [(V[i], i) for i in range(N)]\n            V1arr = [(V1[i], i) for i in range(N)]\n            \n            Varr.sort()\n            V1arr.sort()\n            # print(Varr)\n            # print(V1arr)\n            if Varr[-1][0] - Varr[0][0] > V1arr[-1][0] - V1arr[0][0]:\n                return Varr[-1][1], Varr[0][1]\n            elif Varr[-1][0] - Varr[0][0] < V1arr[-1][0] - V1arr[0][0]:\n                return V1arr[-1][1], V1arr[0][1]\n            else:\n                return Varr[-1][1], Varr[0][1], V1arr[-1][1], V1arr[0][1]\n        curr = candidates(points)\n        # print(curr)\n        res = float('inf')\n        for i in curr:\n            res = min(res, maxDis(points[:i]+points[i+1:]))\n        return res"
}