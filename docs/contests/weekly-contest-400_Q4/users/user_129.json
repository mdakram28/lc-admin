{
    "username": "MvKaio",
    "submission": "using ll = long long;\nconst int MAX = 1e5 + 10;\nnamespace seg {\n\tll seg[4*MAX], lazy[4*MAX];\n\tint n, *v;\n\n\tll build(int p=1, int l=0, int r=n-1) {\n\t\tlazy[p] = 0;\n\t\tif (l == r) return seg[p] = v[l];\n\t\tint m = (l+r)/2;\n\t\treturn seg[p] = build(2*p, l, m) & build(2*p+1, m+1, r);\n\t}\n\tvoid build(int n2, int* v2) {\n\t\tn = n2, v = v2;\n\t\tbuild();\n\t}\n\tvoid prop(int p, int l, int r) {\n\t\tseg[p] += lazy[p]*(r-l+1);\n\t\tif (l != r) lazy[2*p] += lazy[p], lazy[2*p+1] += lazy[p];\n\t\tlazy[p] = 0;\n\t}\n\tll query(int a, int b, int p=1, int l=0, int r=n-1) {\n\t\tprop(p, l, r);\n\t\tif (a <= l and r <= b) return seg[p];\n\t\tif (b < l or r < a) return (1<<30) - 1;\n\t\tint m = (l+r)/2;\n\t\treturn query(a, b, 2*p, l, m) & query(a, b, 2*p+1, m+1, r);\n\t}\n\tll update(int a, int b, int x, int p=1, int l=0, int r=n-1) {\n\t\tprop(p, l, r);\n\t\tif (a <= l and r <= b) {\n\t\t\tlazy[p] += x;\n\t\t\tprop(p, l, r);\n\t\t\treturn seg[p];\n\t\t}\n\t\tif (b < l or r < a) return seg[p];\n\t\tint m = (l+r)/2;\n\t\treturn seg[p] = update(a, b, x, 2*p, l, m) & update(a, b, x, 2*p+1, m+1, r);\n\t}\n};\n        \n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& A, int k) {\n        int n = A.size();\n        seg::build(n, A.data());\n        int answer = 1e9;\n        for (int l = 0, r = 0; l < n; l++) {\n            while (r < n && seg::query(l, r) >= k) r++;\n            answer = min<ll>(answer, abs(k - seg::query(l, r)));\n            answer = min<ll>(answer, abs(k - seg::query(l, r - 1)));\n        }\n        return answer;\n    }\n};",
    "submit_ts": 1717296811.0
}