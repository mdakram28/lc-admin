{
    "username": "_Jason0330",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<int[]> list = new ArrayList<>();\n        for(int horizontal: horizontalCut) list.add(new int[]{horizontal, 0});\n        for(int vertical: verticalCut) list.add(new int[]{vertical, 1});\n        Collections.sort(list, (a, b) -> Integer.compare(b[0], a[0]));\n\n        long cost = 0;\n        int verticalCount = 1, horizontalCount = 1;\n        for(int[] info: list) {\n            long spend = (long)info[0], direct = info[1];\n            //System.out.println(spend + \"  \" + direct);\n            if(direct == 0) {\n                cost += spend * verticalCount;\n                horizontalCount++;\n            }\n            else {\n                cost += spend * horizontalCount;\n                verticalCount++;\n            }\n        }\n        return cost;\n    }\n}",
    "submit_ts": "1720926387",
    "subm_id": "1320284744"
}