{
    "username": "szp14",
    "submission": "\nclass Solution {\npublic:\n    int getArea(int U, int D, int L, int R, vector<vector<int> >& G)\n{\n    int u = D + 1, d = U, l = R + 1, r = L;\n    for(int i = U; i <= D; i++)\n        for(int j = L; j <= R; j++) if(G[i][j])\n        {\n            u = min(u, i); d = max(d, i);\n            l = min(l, j); r = max(r, j);\n        }\n    return max(0, d - u + 1) * max(0, r - l + 1);\n}\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int m = (int)grid.size(), n = (int)grid[0].size();\n    int ans = m * n;\n    for(int i = 1; i < m; i++)\n    {\n        int U = getArea(0, i - 1, 0, n - 1, grid);\n        int D = getArea(i, m - 1, 0, n - 1, grid);\n        for(int j = 1; j < n; j++)\n        {\n            ans = min(ans, D +\n                      getArea(0, i - 1, 0, j - 1, grid) +\n                      getArea(0, i - 1, j, n - 1, grid));\n            ans = min(ans, U +\n                      getArea(i, m - 1, 0, j - 1, grid) +\n                      getArea(i, m - 1, j, n - 1, grid));\n        }\n        for(int j = i + 1; j < m; j++)\n            ans = min(ans, U +\n                      getArea(i, j - 1, 0, n - 1, grid) +\n                      getArea(j, m - 1, 0, n - 1, grid));\n    }\n    for(int j = 1; j < n; j++)\n    {\n        int L = getArea(0, m - 1, 0, j - 1, grid);\n        int R = getArea(0, m - 1, j, n - 1, grid);\n        for(int i = 1; i < m; i++)\n        {\n            ans = min(ans, R +\n                      getArea(0, i - 1, 0, j - 1, grid) +\n                      getArea(i, m - 1, 0, j - 1, grid));\n            ans = min(ans, L +\n                      getArea(0, i - 1, j, n - 1, grid) +\n                      getArea(i, m - 1, j, n - 1, grid));\n        }\n        for(int i = j + 1; i < n; i++)\n            ans = min(ans, L +\n                      getArea(0, m - 1, j, i - 1, grid) +\n                      getArea(0, m - 1, i, n - 1, grid));\n    }\n    return ans;\n    }\n};",
    "submit_ts": 1719114517.0
}