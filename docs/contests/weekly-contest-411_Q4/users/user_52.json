{
    "username": "Ankan Mahapatra",
    "submission": "class Solution(object):\n    def countKConstraintSubstrings(self, s, k, queries):\n        \"\"\"\n        :type s: str\n        :type k: int\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        n = len(s)\n        pref = [0]\n        for i in s:\n            pref.append(pref[-1])\n            if i == '1':\n                pref[-1] += 1\n        \n        right = [-1]*n\n        \n        for i in range(n):\n            l, r = i, n-1\n            while l <= r:\n                m = (l+r)//2\n                ones = pref[m+1] - pref[i]\n                zeroes = m-i+1 - ones\n                if min(ones, zeroes) <= k:\n                    ans = m-i+1\n                    l = m+1\n                else:\n                    r = m-1\n            right[i] = ans\n        pref = [0]\n        for i in right:\n            pref.append(pref[-1] + i)\n        res = []\n        for L, R in queries:\n            l, r = L, R\n            while l <= r:\n                m = (l+r)//2\n                if right[m] + m - 1 >= R:\n                    ans = m\n                    r = m-1\n                else:\n                    l = m+1\n            x = pref[ans] - pref[L]\n            N = R - ans + 1\n            y = N * (N+1) // 2\n            res.append(x + y)\n        return res",
    "submit_ts": "1723951307",
    "subm_id": "1359768370"
}