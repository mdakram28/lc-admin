{
    "username": "Nakshatra21",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n         int m = board.size();\n    int n = board[0].size();\n    long long maxSum = LLONG_MIN;\n\n    vector<vector<long long>> topValues(m, vector<long long>(3, LLONG_MIN));\n    vector<vector<int>> topColumns(m, vector<int>(3, -1));\n        sort(topValues.begin(),topValues.end());\n        reverse(topColumns.begin(),topColumns.end());\n\n    for (int i = 0; i < m; ++i) {\n        vector<pair<long long, int>> colValues(n);\n\n        for (int j = 0; j < n; ++j) {\n            colValues[j] = {board[i][j], j};\n        }\n\n        sort(colValues.rbegin(), colValues.rend());\n\n        for (int k = 0; k < 3 && k < n; ++k) {\n            topValues[i][k] = colValues[k].first;\n            topColumns[i][k] = colValues[k].second;\n        }\n    }\n\n   \n    for (int r1 = 0; r1 < m; ++r1) {\n        for (int r2 = r1 + 1; r2 < m; ++r2) {\n            for (int r3 = r2 + 1; r3 < m; ++r3) {\n                for (int i = 0; i < 3; ++i) {\n                    for (int j = 0; j < 3; ++j) {\n                        if (topColumns[r2][j] == topColumns[r1][i]) continue;\n                        for (int k = 0; k < 3; ++k) {\n                            if (topColumns[r3][k] == topColumns[r1][i] || topColumns[r3][k] == topColumns[r2][j]) continue;\n\n                            long long currentSum = topValues[r1][i] + topValues[r2][j] + topValues[r3][k];\n                            maxSum = max(maxSum, currentSum);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return maxSum;\n    }\n};",
    "submit_ts": "1723910294",
    "subm_id": "1359224722"
}