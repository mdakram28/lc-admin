{
    "username": "GaleStarr",
    "submission": "class Solution {\n    \n    static int MAX = (int)1e5;\n    static int bitscount =32;\n    \nstatic void findPrefixCount(int arr[], int n,int prefix_count[][])\n{\n\n    for (int i = 0; i < bitscount; i++) \n    {\n \n       \n        prefix_count[i][0] = ((arr[0] >> i) & 1);\n        for (int j = 1; j < n; j++) \n        {\n            prefix_count[i][j] = ((arr[j] >> i) & 1);\n            prefix_count[i][j] += prefix_count[i][j - 1];\n        }\n    }\n}\n \nstatic int rangeAnd(int l, int r,int prefix_count[][])\n{\n \n    int ans = 0;\n \n    for (int i = 0; i < bitscount; i++) \n    {\n       \n        int x;\n        if (l == 0)\n            x = prefix_count[i][r];\n        else\n            x = prefix_count[i][r]\n                - prefix_count[i][l - 1];\n \n        if (x == r - l + 1)\n            ans = (ans | (1 << i));\n    }\n \n    return ans;\n}\n    public long countSubarrays(int[] nums, int k) \n    {\n          MAX = nums.length;\n          bitscount =32;\n    \n        int [][]prefix_count = new int [bitscount][MAX];\n        \n        findPrefixCount(nums,nums.length,prefix_count);\n        int n=nums.length;\n        long ans=0;\n        for(int i=0;i<n;i++) \n        {\n            int low=i;\n            int high=n-1;\n            boolean flag=false;\n            int end=-1;\n            \n            while(low<=high) \n            {\n                int mid = (low+high)/2;\n                int val=rangeAnd(i,mid,prefix_count);\n              //  System.out.print(val+\" \");\n                if(val>=k)\n                {\n                     low=mid+1;\n                   \n                    if(val==k){end=mid;flag=true;}\n                }\n                else if(val<k) \n                {\n                    high=mid-1;\n                }\n            }\n            \n            low=i;\n            high=n-1;\n           // boolean flag=false;\n            int st=-1;\n            while(low<=high) \n            {\n                int mid = (low+high)/2;\n                int val=rangeAnd(i,mid,prefix_count);\n                if(val>k)\n                {\n                    low=mid+1;\n                   \n                }\n                else if(val<=k) \n                {\n                       high=mid-1;\n                      if(val==k){st=mid;flag=true;}\n                   \n                }\n            }\n          //  System.out.println(end+\" \"+st);\n            if(flag)ans+=(end-st+1);\n        }\n        return ans;\n \n    }\n}",
    "submit_ts": "1720279726",
    "subm_id": "1311762695"
}