{
    "username": "thirsty-wozniakajk",
    "submission": "class DiffFenwick {\npublic:\n    DiffFenwick(int n) : n(n), tree(n + 1, vector<long long>(2, 0)) {}\n\n    void update(int left, int right, int val) {\n        add(left + 1, val);\n        add(right + 2, -val);\n    }\n\n    long long rangeQuery(int left, int right) {\n        return prefixQuery(right) - prefixQuery(left - 1);\n    }\n\nprivate:\n    int n;\n    vector<vector<long long>> tree;\n\n    void add(int i, int val) {\n        long long mul = static_cast<long long>(i) * val;\n        while (i <= n) {\n            tree[i][0] += val;\n            tree[i][1] += mul;\n            i += i & -i;\n        }\n    }\n\n    long long prefixQuery(int index) {\n        int i = index + 1;\n        long long s0 = 0, s1 = 0;\n        while (i > 0) {\n            s0 += tree[i][0];\n            s1 += tree[i][1];\n            i &= i - 1;\n        }\n        return (index + 2) * s0 - s1;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int, int>> s;\n        int cur = 0;\n        vector<int> ans;\n        DiffFenwick ft(n + 1);\n\n        for (auto& q : queries) {\n            int u = q[0], v = q[1];\n            auto l = s.lower_bound({u, u});\n            auto r = s.upper_bound({v, v});\n\n            if (ft.rangeQuery(u, v - 1) == v - u && distance(l, r) <= 1) {\n                ans.push_back(n - 1 - cur + s.size());\n                continue;\n            }\n\n            auto it = s.lower_bound({u, u});\n            while (it != s.end() && it->first < v) {\n                auto [_u, _v] = *it;\n                cur -= _v - _u;\n                ft.update(_u, _v - 1, -1);\n                it = s.erase(it);\n            }\n            s.insert({u, v});\n            ft.update(u, v - 1, 1);\n            cur += v - u;\n\n            ans.push_back(n - 1 - cur + s.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743192",
    "subm_id": "552349350"
}