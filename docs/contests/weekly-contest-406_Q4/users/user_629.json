{
    "username": "krishrb2517",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int numberOfVerticalCut = 0;\n        int numberOfHorizontalCut = 0;\n        vector<pair<long long,long long>>vp;\n        for(int i : horizontalCut)\n        {\n            vp.push_back({i,(long long)0});\n        }\n        for(int i : verticalCut)\n        {\n            vp.push_back({i,(long long)1});\n        }\n        sort(vp.begin(),vp.end(),greater<pair<int,int>>());\n        long long cost = 0;\n        for(auto u : vp)\n        {\n            if(u.second==0)\n            {\n                cost += (u.first*(numberOfVerticalCut+1));\n                numberOfHorizontalCut++;\n            }\n            else\n            {\n                cost += (u.first*(numberOfHorizontalCut+1));\n                numberOfVerticalCut++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925411",
    "subm_id": "1320253855"
}