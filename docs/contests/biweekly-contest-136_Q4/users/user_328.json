{
    "username": "hastings2k",
    "submission": "from sortedcontainers import SortedList as sl\nclass Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges)+1\n        debug = 1\n        neis = [[] for _ in range(n)]\n        for x,y in edges:\n            neis[x].append(y)\n            neis[y].append(x)\n        out = [0] * n\n        rec = {}\n        q = deque()\n        degs = [len(neis[i]) for i in range(n)]\n        for i in range(n):\n            if len(neis[i]) == 1:\n                q.append(i)\n        used = [0] * n\n        costs = [0] * n\n        nots = [set(neis[i]) for i in range(n)]\n        q0 = deque([[neis[x][0],x,0] for x in q])\n        temps = [sl() for _ in range(n)]\n        while q0:\n            nxt,now,cost = q0.popleft()\n            key = nxt*n+now\n            if key in rec:\n                continue\n            nots[nxt].remove(now)\n            rec[key] = (2-(now&1))+cost\n            temps[nxt].add([rec[key],now])\n            if len(nots[nxt])== 1:\n                nnxt = nots[nxt].pop()\n                nots[nxt].add(nnxt)\n                q0.append([nnxt,nxt,temps[nxt][-1][0]])\n            elif len(nots[nxt]) == 0:\n                for nnxt in neis[nxt]:\n                    if temps[nxt][-1][1] != nnxt:\n                        q0.append([nnxt,nxt,temps[nxt][-1][0]])\n                    elif len(temps[nxt]) == 1:\n                        q0.append([nnxt,nxt,0])\n                    else:\n                        q0.append([nnxt,nxt,temps[nxt][-2][0]])\n        for i in range(n):\n            out[i] = temps[i][-1][0]\n        return out\n        \n                    ",
    "submit_ts": "1722700524",
    "subm_id": "552280174"
}