{
    "username": "mohdquamartyagi",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> differenceArray(nums.size());\n        \n        // Calculate the difference array\n        for (size_t i = 0; i < nums.size(); ++i) {\n            differenceArray[i] = target[i] - nums[i];\n        }\n\n        long long totalOps = 0;\n        int currentSegmentDelta = 0;\n\n        // Loop through each difference in the array\n        for (size_t i = 0; i < differenceArray.size(); ++i) {\n            if (i == 0 || (differenceArray[i - 1] > 0 && differenceArray[i] > 0) || (differenceArray[i - 1] < 0 && differenceArray[i] < 0)) {\n                int additionalOps = abs(differenceArray[i]) - abs(currentSegmentDelta);\n                if (additionalOps > 0) {\n                    totalOps += additionalOps;\n                }\n                currentSegmentDelta = differenceArray[i];\n            } else {\n                totalOps += abs(differenceArray[i]);\n                currentSegmentDelta = differenceArray[i];\n            }\n        }\n\n        return totalOps;  \n    }\n};",
    "submit_ts": "1721532845",
    "subm_id": "1327995405"
}