{
    "username": "Gulshan7823",
    "submission": "class Solution {\nprivate:\n    const int mod = 1e9 + 7;\n\n    vector<vector<int>> initializeDP(int firstNum) {\n        vector<vector<int>> dp(51, vector<int>(51, 0));\n        for (int a = 0; a <= firstNum; ++a) {\n            dp[a][firstNum - a] = 1;\n        }\n        return dp;\n    }\n\n    vector<vector<int>> calculatePrefixSums(const vector<vector<int>>& dp) {\n        vector<vector<int>> psum(51, vector<int>(51, 0));\n        for (int b = 0; b <= 50; ++b) {\n            for (int c = 50; c >= 0; --c) {\n                psum[b][c] = dp[b][c];\n                if (c < 50) {\n                    psum[b][c] = (psum[b][c] + psum[b][c + 1]) % mod;\n                }\n            }\n        }\n        return psum;\n    }\n\n    vector<vector<int>> updateDP(const vector<vector<int>>& psum, int currentNum) {\n        vector<vector<int>> nextDp(51, vector<int>(51, 0));\n        for (int d = 0; d <= currentNum; ++d) {\n            int e = currentNum - d;\n            for (int f = 0; f <= d; ++f) {\n                nextDp[d][e] = (nextDp[d][e] + psum[f][e]) % mod;\n            }\n        }\n        return nextDp;\n    }\n\n    int sumFinalDP(const vector<vector<int>>& dp) {\n        int result = 0;\n        for (int g = 0; g <= 50; ++g) {\n            for (int h = 0; h <= 50; ++h) {\n                result = (result + dp[g][h]) % mod;\n            }\n        }\n        return result;\n    }\n\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<int>> dp = initializeDP(nums[0]);\n\n        for (int i = 1; i < n; ++i) {\n            vector<vector<int>> psum = calculatePrefixSums(dp);\n            dp = updateDP(psum, nums[i]);\n        }\n\n        return sumFinalDP(dp);\n    }\n};\n",
    "submit_ts": "1723346549",
    "subm_id": "1351579982"
}