{
    "username": "chrehall68",
    "submission": "@lru_cache(maxsize=8192)\ndef dfs(i:int,j:int, can_back:bool, k:int)->int:\n    if can_back and i-1 > k:\n        return 0\n    if not can_back and i>k:\n        return 0\n    ret = 1 if i == k else 0\n\n    # go back\n    if can_back:\n        ret += dfs(i-1,j,False,k)\n    # jump\n    ret += dfs(i+(1<<j), j+1, True, k) \n    return ret\n        \nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        # you can either go down 1 (not consecutively) or jump\n        # maybe we can dp this?\n        \n        # initial state\n        # i=1, j=0,True\n        # this can reach\n        # i = 0, j=0,False or i=2,j=1,True\n        \n        # i=0,j=0,False\n        # i=1,j=1,True ONLY\n        \n        # i=2,j=1,True\n        # i=1,j=1,False or i=4,j=2,True\n        \n        # well we can do sort of brute force\n        return dfs(1, 0, True, k)\n        \n        ",
    "submit_ts": 1716088808.0
}