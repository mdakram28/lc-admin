{
    "username": "pedantic-gaussxtm",
    "submission": "class SegmentTree:\n    def __init__(self, data):\n        n = len(data)\n        self.n = n\n        self.tree = [0] * (2 * n)\n        self.build(data)\n\n    def build(self, data):\n        for i in range(self.n):\n            self.tree[self.n + i] = data[i]\n        for i in range(self.n - 1, 0, -1):\n            self.tree[i] = self.tree[i * 2] + self.tree[i * 2 + 1]\n\n    def update(self, index, value):\n        index += self.n\n        self.tree[index] = value\n        while index > 1:\n            index //= 2\n            self.tree[index] = self.tree[2 * index] + self.tree[2 * index + 1]\n\n    def query(self, left, right):\n        left += self.n\n        right += self.n\n        result = 0\n        while left < right:\n            if left % 2:\n                result += self.tree[left]\n                left += 1\n            if right % 2:\n                right -= 1\n                result += self.tree[right]\n            left //= 2\n            right //= 2\n        return result\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def count_peaks(nums):\n            n = len(nums)\n            is_peak = [0] * n\n            for i in range(1, n - 1):\n                if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                    is_peak[i] = 1\n            return is_peak\n        n = len(nums)\n        peaks = count_peaks(nums)\n        seg_tree = SegmentTree(peaks)\n        result = []\n\n        for query in queries:\n            if query[0] == 1:\n                li, ri = query[1], query[2]\n                result.append(seg_tree.query(li + 1, ri))  \n            elif query[0] == 2:\n                index, value = query[1], query[2]\n                nums[index] = value\n                for i in range(max(1, index - 1), min(n - 1, index + 2)):\n                    is_peak = int(nums[i] > nums[i - 1] and nums[i] > nums[i + 1])\n                    seg_tree.update(i, is_peak)\n\n        return result",
    "submit_ts": 1718507429.0
}