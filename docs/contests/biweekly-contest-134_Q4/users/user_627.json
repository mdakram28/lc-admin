{
    "username": "jnfem112",
    "submission": "class Solution {\npublic:\n    int init_mask()\n    {\n        int mask = 0;\n        for (int i = 0; i < 32; i++)\n            mask |= (1 << i);\n        return mask;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int len = nums.size(), curr_and = init_mask();\n        vector<int> appear(32, 0);\n        long long int ans = 0;\n        for (int left = 0, right = 0; right < len; right++) {\n            curr_and &= nums[right];\n            for (int i = 0; i < 32; i++)\n                if (!(nums[right] & (1 << i)))\n                    appear[i] = right;\n            if (curr_and == k)\n            {\n                int first_appear = right;\n                for (int i = 0; i < 32; i++)\n                    if (!(k & (1 << i)))\n                        first_appear = min(first_appear, appear[i]);\n                ans += first_appear - left + 1;\n            }\n            else\n            {\n                bool move_left = false;\n                for (int i = 0; i < 32; i++)\n                    if ((k & (1 << i)) && !(nums[right] & (1 << i)))\n                        move_left = true;\n                if (move_left)\n                {\n                    left = right + 1;\n                    curr_and = init_mask();\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280236",
    "subm_id": "1311781848"
}