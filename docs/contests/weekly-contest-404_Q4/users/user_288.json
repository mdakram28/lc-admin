{
    "username": "dev_chandani",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> adj1,adj2;\n    \n    int diam(int node,int par,vector<vector<int>> &adj,int &d){\n        int a=-1;\n        int b=-1;\n        for(auto x:adj[node]){\n            if(x!=par){\n                int g=diam(x,node,adj,d);\n                if(g>=a){\n                    b=a;\n                    a=g;\n                }else if(a>g && g>b){\n                    b=g;\n                }\n            }\n        }\n        d=max(d,a+b+2);\n        return a+1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        adj1.resize(n);\n        adj2.resize(m);\n        for(auto x:edges1){\n            adj1[x[0]].push_back(x[1]);\n            adj1[x[1]].push_back(x[0]);\n        }\n        for(auto x:edges2){\n            adj2[x[0]].push_back(x[1]);\n            adj2[x[1]].push_back(x[0]);\n        }\n        int d=0,h=0;\n        diam(0,-1,adj1,d);\n        diam(0,-1,adj2,h);\n        // cout<<d<<' '<<h;\n        int ans=max({d,h,(d+1)/2+(h+1)/2+1});\n        return ans;\n    }\n};",
    "submit_ts": 1719718321.0
}