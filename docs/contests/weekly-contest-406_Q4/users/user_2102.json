{
    "username": "sophon",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        int horizontalSegments = 1, verticalSegments = 1;\n\n        int h = 0, v = 0;\n\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += horizontalCut[h] * (long long) verticalSegments;\n                ++horizontalSegments;\n                ++h;\n            } else {\n                totalCost += verticalCut[v] * (long long) horizontalSegments;\n                ++verticalSegments;\n                ++v;\n            }\n        }\n\n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * (long long) verticalSegments;\n            ++h;\n        }\n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * (long long) horizontalSegments;\n            ++v;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926218",
    "subm_id": "546444819"
}