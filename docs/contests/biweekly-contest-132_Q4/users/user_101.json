{
    "username": "vijaykatari23",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& A, int K) {\n        int N = A.size();\n        int mx[K + 1];\n        for(int i = 0; i <= K; ++i) mx[i] = 1;\n        vector<int> prv(N, -1);\n        map<int, int> pos;\n        for(int i = 0; i < N; ++i) {\n            if(pos[A[i]] == 0) {\n                pos[A[i]] = i + 1;\n                continue;\n            }\n            prv[i] = pos[A[i]] - 1;\n            pos[A[i]] = i + 1;\n        }\n        vector<vector<int>> dp(N, vector<int>(K + 1, 1));\n        int ans = 1;\n        for(int i = 1; i < N; ++i) {\n            for(int k = K - 1; ~k; --k) {\n                dp[i][k + 1] = max(dp[i][k + 1], 1 + mx[k]);\n                mx[k + 1] = max(mx[k + 1], dp[i][k + 1]);\n            }\n            if(prv[i] != -1) {\n                int j = prv[i];\n                for(int k = 0; k <= K; ++k) {\n                    dp[i][k] = max(dp[i][k], 1 + dp[j][k]);\n                    mx[k] = max(mx[k], dp[i][k]);\n                }\n            }\n            /*for(int j = 0; j < i; ++j) {\n                for(int k = 0; k <= K; ++k) {\n                    int nk = k + (A[j] != A[i]);\n                    if(nk > K) continue;\n                    dp[i][nk] = max(dp[i][nk], 1 + dp[j][k]);\n                    ans = max(ans, dp[i][nk]);\n                }\n            }*/\n        }\n        for(int i = 0; i <= K; ++i) ans = max(ans, mx[i]);\n        return ans;\n    }\n};",
    "submit_ts": 1717859961.0
}