{
    "username": "faiz_Ad_100",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n    int n = nums.length;\n    long totalSubarrays = 0;\n    Map<Long, Long> previousCounts = new HashMap<>();\n    for (int i = 0; i < n; i++) {\n      Map<Long, Long> currentCounts = new HashMap<>();\n      if (nums[i] == k) {\n        totalSubarrays++;\n      }\n      currentCounts.put((long) nums[i], 1L);\n      for (Map.Entry<Long, Long> entry : previousCounts.entrySet()) {\n        long val = entry.getKey();\n        long freq = entry.getValue();\n        long newAndResult = val & nums[i];\n        if (newAndResult == k) {\n          totalSubarrays += freq;\n        }\n        currentCounts.put(newAndResult, currentCounts.getOrDefault(newAndResult, 0L) + freq);\n      }\n      previousCounts = currentCounts;\n    }\n    return totalSubarrays;   \n    }\n}",
    "submit_ts": "1720279276",
    "subm_id": "1311744737"
}