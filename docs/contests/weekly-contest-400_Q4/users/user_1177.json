{
    "username": "SneakPeek",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        \n        int[][] prevZero=new int[nums.length][31];\n        for(int i=0;i<prevZero.length;i++){\n            for(int j=0;j<31;j++){\n                prevZero[i][j]=-1;\n            }\n        }\n        int finalAns=Integer.MAX_VALUE;\n        for(int i=0;i<nums.length;i++){\n            \n            long prod=1;    \n            for(int j=0;j<31;j++){\n                if(i==0){\n                    if( ((prod)&(nums[i]))!=0 ){\n                        \n                    }\n                    else{\n                        prevZero[i][j]=i;\n                    }\n                }\n                else{\n                    if( ((prod)&(nums[i]))!=0 ){\n                        // means 1 is here means we want : 1 over here !! \n                        prevZero[i][j]=prevZero[i-1][j];\n                    }\n                    else{\n                        prevZero[i][j]=i;\n                    }\n                }\n                prod=prod*2;\n            }\n            \n        }\n        \n        \n        for(int i=0;i<nums.length;i++){\n            \n            int lo=0;\n            int hi=i;\n            //this will be end pos \n            \n            // just above value \n            // >= : true else : false\n            \n            int ans=-1;\n            // ffffftttttt\n            while(lo<=hi){\n                int mid=(lo+hi)/2;\n                \n                // find the bitwise and \n                int tempAns=0;\n                for(int j=0;j<31;j++){\n                    if(prevZero[i][j]>=mid){\n                        \n                    }\n                    else{\n                        tempAns=(tempAns|(1<<j));\n                    }\n                }\n                \n                if(tempAns>=k){\n                    ans=tempAns;\n                    hi=mid-1;\n                }\n                else{\n                    lo=mid+1;\n                }\n                \n            }\n            \n            if(ans!=-1){\n                finalAns=Math.min(finalAns,Math.abs(ans-k));\n            }\n            \n            \n            lo=0;\n            hi=i;\n            //this will be end pos \n            \n            // just above value \n            // >= : true else : false\n            \n            ans=-1;\n            // <=k : true else :false\n            // ttttfffff\n            while(lo<=hi){\n                int mid=(lo+hi)/2;\n                \n                // find the bitwise and \n                int tempAns=0;\n                for(int j=0;j<31;j++){\n                    if(prevZero[i][j]>=mid){\n                        \n                    }\n                    else{\n                        tempAns=(tempAns|(1<<j));\n                    }\n                }\n                \n                if(tempAns<=k){\n                    ans=tempAns;\n                    lo=mid+1;\n                }\n                else{\n                    hi=mid-1;\n                }\n                \n            }\n            \n            if(ans!=-1){\n                finalAns=Math.min(finalAns,Math.abs(ans-k));\n            }\n            \n            \n            \n        }\n        \n        \n        \n        \n        return finalAns;\n        \n        \n    }\n}",
    "submit_ts": 1717300511.0
}