{
    "username": "Mohith2203",
    "submission": "class Solution {\npublic:\n    int tree[100001]={0},N=100001;\n    void add(int i,int val)\n    {\n        while(i<N)\n        {\n            tree[i]+=val;\n            i=i+(i&-i);\n        }\n    }\n    int get(int i)\n    {\n        int ans=0;\n        while(i>0)\n        {\n            ans+=tree[i];\n            i=i-(i&-i);\n        }\n        return ans;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> ans;\n        for(int i=1;i<nums.size()-1;i++)\n        {\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1])\n                add(i+1,1);\n        }\n        for(auto& q:queries)\n        {\n            if(q[0]==1)\n            {\n                ans.push_back(max(get(q[2])-get(q[1]+1),0));\n            }\n            else\n            {\n                for(int j=max(1,q[1]-1);j<=min((int)nums.size()-2,q[1]+1);j++)\n                {\n                    if(nums[j]>nums[j-1]&&nums[j]>nums[j+1])\n                        add(j+1,-1);\n                }\n                nums[q[1]]=q[2];\n                for(int j=max(1,q[1]-1);j<=min((int)nums.size()-2,q[1]+1);j++)\n                {\n                    if(nums[j]>nums[j-1]&&nums[j]>nums[j+1])\n                        add(j+1,1);\n                }\n                \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508900.0
}