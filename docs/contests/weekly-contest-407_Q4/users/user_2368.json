{
    "username": "jonteo2001",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diff = [target[i] - nums[i] for i in range(n)]\n        print(\"diff = \", diff)\n        pre = 0 # stores number of previous ops\n        prev = 0 # 0 for nth, 1 for plus, -1 for minus \n        count = 0 # stores count of previous ops\n        for i in range(n):\n            if (diff[i] > 0 and prev <= 0):\n                prev = 1\n                count += diff[i]\n                pre = diff[i]\n            elif (diff[i] > 0 and prev > 0):\n                count += max(0, diff[i] - pre)\n            elif (diff[i] < 0 and prev >= 0):\n                count += abs(diff[i])\n                prev = -1\n            elif (diff[i] < 0 and prev < 0):\n                count += max(0, abs(diff[i]) - pre)\n            else:\n                # print(\"Shouldn't reach here!\")\n                pass\n            pre = abs(diff[i])\n        #     print(\"diff = \", diff[:i+1])\n        #     print(\"pre = \", pre, \"prev = \", prev)\n        #     print(\"count = \", count)\n        # print(\"*\"*10)\n        return count",
    "submit_ts": "1721533389",
    "subm_id": "1328007872"
}