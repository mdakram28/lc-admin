{
    "username": "jayant932002",
    "submission": "class Solution {\npublic:\n    int maxOperations(string s) {\n        int i = s.length() - 1;\n        std::unordered_map<int, int> dic;\n\n        while (i >= 0 && s[i] == '1') {\n            i--;\n        }\n\n        while (i >= 0) {\n            if (s[i] == '1') {\n                dic[i] = 1;\n                int t = i;\n                while (i > 0 && s[i - 1] == '1') {\n                    dic[t]++;\n                    i--;\n                }\n            }\n            i--;\n        }\n\n        std::vector<int> vals;\n        for (const auto& pair : dic) {\n            vals.push_back(pair.first);\n        }\n        std::sort(vals.begin(), vals.end());\n\n        int ans = 0;\n        for (int j = vals.size() - 1; j >= 0; --j) {\n            ans += (vals.size() - j) * dic[vals[j]];\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533690",
    "subm_id": "1328014522"
}