{
    "username": "kartikeyacoding19",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k){\n        int n = nums.size();\n        int dp[n][k+1];\n        for(int i=0; i<n; i++){\n            for(int j=0; j<k+1; j++){\n                dp[i][j] = 1;\n            }\n        }\n        int ans = 1;\n        vector<int> v(k + 1, -1);\n        vector<map<int, int>> m(k + 1);\n        for (int i = 0; i < n; i++){\n            for (int j = 0; j <= k; j++){\n                for (int p = 0; p < j; p++){\n                    dp[i][j] = max(dp[i][j], 1 + v[p]);\n                }\n                if (m[j].find(nums[i]) != m[j].end()) {\n                    dp[i][j] = max(dp[i][j], 1 + m[j][nums[i]]);\n                }\n                ans = max(ans, dp[i][j]);\n            }\n            for (int j = 0; j <= k; j++){\n                v[j] = max(v[j], dp[i][j]);\n                m[j][nums[i]] = max(m[j][nums[i]], dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717862132",
    "subm_id": "1281813227"
}