{
    "username": "mihirmilindkumar",
    "submission": "class Solution {\n    void fibo(){\n        int a=69;\n        for(int i=0;i<10;i++){\n            a++;\n        }\n    }\n    int solve(int src,int des1,int des2,vector<vector<int>>&adj,int n){\n        vector<int>vis(n+4,0);\n        queue<int>q;\n        q.push(src);\n        vis[src]=1;\n        while(!q.empty()){\n            int fnode=q.front();\n            q.pop();\n            for(auto it:adj[fnode]){\n                if(!vis[it]){\n                    q.push(it);\n                    vis[it]=1;\n                }\n            }\n        }\n        bool op1=vis[des1];\n        bool op2=vis[des2];\n        return op1||op2;\n    }\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int ncir=circles.size();\n        reverse(circles.begin(),circles.end());\n        sort(circles.begin(),circles.end());\n        vector<vector<int>>adj(ncir+4);\n        fibo();\n        for(int i=0;i<ncir;i++){\n            if(circles[i][0]<=circles[i][2]){\n                adj[ncir].push_back(i);\n                adj[i].push_back(ncir);\n            }\n            if(X-circles[i][0]<=circles[i][2]){\n                adj[ncir+2].push_back(i);\n                adj[i].push_back(ncir+2);\n            }\n            if(circles[i][1]<=circles[i][2]){\n                adj[ncir+1].push_back(i);\n                adj[i].push_back(ncir+1);\n            }\n            if(Y-circles[i][1]<=circles[i][2]){\n                adj[ncir+3].push_back(i);\n                adj[i].push_back(ncir+3);\n            }\n            for(int j=i+1;j<ncir;j++){\n                double d=sqrt(pow(circles[i][0]-circles[j][0],2)+pow(circles[i][1]-circles[j][1],2));\n                int rad=circles[i][2]+circles[j][2];\n                if(rad>=d){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        fibo();\n        int check=0;\n        fibo();\n        check=max(check,solve(ncir,ncir+1,ncir+2,adj,ncir+4));\n        check=max(check,solve(ncir+3,ncir+2,ncir+1,adj,ncir+4));\n        if(!check){\n            return true;\n        }\n        return false;\n    }\n};",
    "submit_ts": "1722138513",
    "subm_id": "1335792646"
}