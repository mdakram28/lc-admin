{
    "username": "iamc7054",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    ll inter(vector<int> &a, vector<int> &b) {\n        ll dx = a[0] - b[0];\n        ll dy = a[1] - b[1];\n        ll dr = a[2] + b[2];\n        return (dx * dx + dy * dy <= dr * dr);\n    }\n\n    void ff(int curr, vector<vector<int>> &adj, vector<bool> &checked, vector<int> &C) {\n        if (checked[curr]) return;\n        checked[curr] = true;\n        C.push_back(curr);\n        for(auto e : adj[curr]) {\n            if (e == curr) continue;\n            if (!checked[e]) ff(e, adj, checked, C);\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        const int n = circles.size();\n        vector<vector<int>> adj(n);\n        for(int i = 0; i < circles.size(); i++) {\n            for(int q = i + 1; q < circles.size(); q++) {\n                if (inter(circles[i], circles[q])) {\n                    adj[i].push_back(q);\n                    adj[q].push_back(i);\n                }\n            }\n        }\n        vector<vector<int>> clusters;\n        vector<bool> c(n, false);\n        for(int i = 0; i < n; i++) {\n            if (!c[i]) {\n                clusters.push_back({});\n                ff(i, adj, c, clusters[clusters.size() - 1]);\n                bool seenTop = false, seenRight = false;\n                for(auto e : clusters[clusters.size() - 1]) {\n                    if (circles[e][1] + circles[e][2] >= Y) seenTop = true;\n                    if (circles[e][0] - circles[e][2] <= 0) seenTop = true;\n\n                    if (circles[e][0] + circles[e][2] >= X) seenRight = true;\n                    if (circles[e][1] - circles[e][2] <= 0) seenRight = true;\n                }\n                if (seenRight && seenTop) return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138102",
    "subm_id": "1335782158"
}