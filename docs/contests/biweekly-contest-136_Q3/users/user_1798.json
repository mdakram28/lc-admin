{
    "username": "gavnish_kumar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        int equalPairs = 0;\n        int flipCount = 0;\n        \n        // Check each 2x2 block for required flips to make it symmetric\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int oneCount = 0;\n                \n                oneCount += grid[i][j] == 1 ? 1 : 0;\n                oneCount += grid[i][cols - j - 1] == 1 ? 1 : 0;\n                oneCount += grid[rows - i - 1][j] == 1 ? 1 : 0;\n                oneCount += grid[rows - i - 1][cols - j - 1] == 1 ? 1 : 0;\n                \n                if (oneCount == 0 || oneCount == 4) {\n                    equalPairs++;\n                } else {\n                    if (oneCount >= 2) {\n                        flipCount += (4 - oneCount);\n                    } else {\n                        flipCount += oneCount;\n                    }\n                }\n            }\n        }\n        \n        int verticalPalindromeOnes = 0;\n        int singleFlipCount = 0;\n        \n        // Check for vertical symmetry\n        if (cols % 2 == 1) {\n            for (int i = 0; i < rows / 2; ++i) {\n                if (grid[i][cols / 2] == 1 && grid[rows - i - 1][cols / 2] == 1) {\n                    verticalPalindromeOnes++;\n                }\n                if (grid[i][cols / 2] != grid[rows - i - 1][cols / 2]) {\n                    flipCount++;\n                    singleFlipCount++;\n                }\n            }\n        }\n        \n        // Check for horizontal symmetry\n        if (rows % 2 == 1) {\n            for (int i = 0; i < cols / 2; ++i) {\n                if (grid[rows / 2][i] == 1 && grid[rows / 2][cols - i - 1] == 1) {\n                    verticalPalindromeOnes++;\n                }\n                if (grid[rows / 2][i] != grid[rows / 2][cols - i - 1]) {\n                    flipCount++;\n                    singleFlipCount++;\n                }\n            }\n        }\n        \n        if (verticalPalindromeOnes % 2 == 1) {\n            if (singleFlipCount == 0) flipCount += 2;\n        }\n        \n        if (rows % 2 == 1 && cols % 2 == 1 && grid[rows / 2][cols / 2] == 1) {\n            flipCount++;\n        }\n        \n        return flipCount;\n    }\n};\n",
    "submit_ts": "1722699919",
    "subm_id": "1343226256"
}