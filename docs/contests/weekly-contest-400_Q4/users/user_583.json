{
    "username": "HahahaHihihi",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    bool cek(vector<int>& nums, ll k, ll m){\n        ll A[33], B[33];\n        memset(A, 0, sizeof A);\n        memset(B, 0, sizeof B);\n        int n = nums.size();\n\n        auto add = [&](int v) -> void{\n            for(int b = 0; b < 30; ++b){\n                if(v & (1 << b)){\n                    A[b]++;\n                }\n                else{\n                    B[b]++;\n                }\n            }\n        };\n\n        auto red = [&](int v) -> void{\n            for(int b = 0; b < 30; ++b){\n                if(v & (1 << b)){\n                    A[b]--;\n                }\n                else{\n                    B[b]--;\n                }\n            }\n        };\n\n        auto get = [&]() -> ll{\n            ll sum = 0;\n            for(int b = 0; b < 30; ++b){\n                if(B[b] == 0 && A[b] > 0){\n                    sum += (1ll << b);\n                }\n            }\n            return sum;\n        };\n\n        ll res = LLONG_MAX;\n        ll cur = 0;\n        int l = 0, r = -1;\n        while(l < n && r < n){\n            ll p = get();\n            res = min(res, abs(p - k));\n            // saatnya nambah\n            if(p < k && abs(p - k) > m){\n                while(l < r){\n                    red(nums[l]);\n                    l++;\n                }\n            }\n            else if(p > k && abs(p - k) > m){\n                if(r + 1 < n){\n                    r++;\n                    add(nums[r]);\n                }\n            }\n            else{\n                if(p > k){\n                    if(r + 1 < n){\n                        r++;\n                        add(nums[r]);\n                    }\n                    else if(l < r){\n                        red(nums[l]);\n                        l++;\n                    }\n                    else{\n                        break;\n                    }\n                }\n                else if(p < k){\n                    if(l < r){\n                        red(nums[l]);\n                        l++;\n                    }\n                    else if(r + 1 < n){\n                        r++;\n                        add(nums[r]);\n                    }\n                    else{\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int pref[n + 1][32];\n        memset(pref, 0, sizeof pref);\n        for(int a = 0; a < n; ++a){\n            for(int b = 0; b < 30; ++b){\n                if(!(nums[a] & (1 << b))){\n                    pref[a + 1][b]++;\n                }\n                pref[a + 1][b] += pref[a][b];\n            }\n        }\n        auto get = [&](int a, int m){\n            ll sum = 0;\n            for(int b = 0; b < 30; ++b){\n                if(pref[m][b] - pref[a - 1][b] == 0){\n                    sum += (1 << b);\n                }\n            }\n            return sum;\n        };\n        int mn = INT_MAX;\n        for(int a = 1; a <= n; ++a){\n            int l = a, r = n, m;\n            while(l <= r){\n                m = (l + r)/2;\n                int p = get(a, m);\n                mn = min(mn, abs(p - k));\n                if(p == k){\n                    return 0;\n                }\n                else if(p < k){\n                    r = m - 1;\n                }\n                else{\n                    l = m + 1;\n                }\n            } \n        }\n        return mn;\n    }\n};",
    "submit_ts": "1717298636",
    "subm_id": "1274785984"
}