{
    "username": "krism_lsy",
    "submission": "def max(x,y):\n    return x if x>y else y\n\nclass SegTree:\n    def __init__(self,n,a):\n        size=2<<n.bit_length()\n        self.sum=[0]*size\n        self.a=a\n    \n    def maintain(self,o: int) -> None:\n        self.sum[o] = self.sum[o * 2]+self.sum[o * 2 + 1]\n\n\n    def build(self,o: int, l: int, r: int) -> None:\n        if l == r:\n            self.sum[o] = self.a[l - 1] #nums\u5168\u4e3a0\u5219\u4e0d\u7528\u521d\u59cb\u5316\n            return\n        m = (l + r) // 2\n        self.build(o * 2, l, m)\n        self.build(o * 2 + 1, m + 1, r)\n        self.maintain(o)\n\n\n    def update(self,o,l,r,idx,val):\n        if l==r:\n            self.sum[o]=val\n            return\n        mid=(l+r)//2\n        if idx<=mid:\n            self.update(o*2,l,mid,idx,val)\n        else:\n            self.update(o*2+1,mid+1,r,idx,val)\n        self.maintain(o)\n        \n    def query(self,o,l,r,L,R):\n        if l>=L and r<=R:\n            return self.sum[o]\n        mid=(l+r)//2\n        res=0\n        if L<=mid:\n            res+=self.query(o*2,l,mid,L,R)\n        if R>=mid+1:\n            res+=self.query(o*2+1,mid+1,r,L,R)\n        return res\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n=len(nums)\n        a=[0]*n\n        for i in range(n):\n            if i==0 or i==n-1:\n                continue\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                a[i]=1\n        print('----------------',a)\n        st=SegTree(n,a)\n        st.build(1,1,n)\n        res=[]\n        def change(idx):\n            if idx<=0 or idx>=n-1:\n                return\n            val=0\n            if nums[idx]>nums[idx-1] and nums[idx]>nums[idx+1]:\n                val=1\n            st.update(1,1,n,idx+1,val)\n            a[idx]=val\n            return\n\n        for q,x,y in queries:\n            if q==1:\n                # print(a)\n                l,r=x,y\n                t=st.query(1,1,n,l+1,r+1)\n                t-= a[l]==1\n                if r!=l:\n                    t-= a[r]==1\n                # print(t,a[l],a[r])\n                res.append(t)\n            else:\n                idx,val=x,y\n                nums[idx]=val\n                change(idx-1)\n                change(idx)\n                change(idx+1)\n                    \n        return res\n        ",
    "submit_ts": 1718507532.0
}