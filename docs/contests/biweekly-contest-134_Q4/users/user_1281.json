{
    "username": "kritikmodi",
    "submission": "class Solution {\n    static int MAX = 100000;\nstatic int bitscount =32;\n \nstatic int [][]prefix_count = new int [bitscount][MAX];\n \nstatic void findPrefixCount(int arr[], int n)\n{\n \n    for (int i = 0; i < bitscount; i++) \n    {\n \n        prefix_count[i][0] = ((arr[0] >> i) & 1);\n        for (int j = 1; j < n; j++) \n        {\n            prefix_count[i][j] = ((arr[j] >> i) & 1);\n            prefix_count[i][j] += prefix_count[i][j - 1];\n        }\n    }\n}\n \n\nstatic int rangeAnd(int l, int r)\n{\n    int ans = 0;\n    for (int i = 0; i < bitscount; i++) \n    {\n        \n        int x;\n        if (l == 0)\n            x = prefix_count[i][r];\n        else\n            x = prefix_count[i][r]\n                - prefix_count[i][l - 1];\n \n        \n        if (x == r - l + 1)\n            ans = (ans | (1 << i));\n    }\n \n    return ans;\n}\n    public long countSubarrays(int[] nums, int k) {\n        long ans=0;\n        findPrefixCount(nums, nums.length);\n        for(int j=0;j<nums.length;j++)\n        {\n            int l=j;\n            int r=nums.length-1;\n            int first=-1;\n            int last=-1;\n            while(l<=r)\n            {\n                int mid=l+(r-l)/2;\n                int currand=rangeAnd(j,mid);\n                if(currand>k)\n                    l=mid+1;\n                else if(currand==k)\n                {\n                    first=mid;\n                    r=mid-1;\n                }\n                else\n                    r=mid-1;\n            }\n            l=j;\n            r=nums.length-1;\n            while(l<=r)\n            {\n                int mid=l+(r-l)/2;\n                int currand=rangeAnd(j,mid);\n                if(currand>k)\n                    l=mid+1;\n                else if(currand==k)\n                {\n                    last=mid;\n                    l=mid+1;\n                }\n                else\n                    r=mid-1;\n            }\n            if(first!=-1)\n                ans+=last-first+1;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720278298",
    "subm_id": "1311703096"
}