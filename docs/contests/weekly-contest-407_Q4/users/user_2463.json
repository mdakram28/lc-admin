{
    "username": "jgu01",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long count = 0;\n        for (int i = 0; i < nums.size()-1; i++) {\n            int dd = (target[i+1] - nums[i+1]) - (target[i] - nums[i]);\n            if (dd > 0)\n                count += dd;\n        }\n        if (target[0] - nums[0] > 0) {\n            count += (target[0] - nums[0]);\n        }\n        if (target.back() - nums.back() < 0) {\n            count -= (target.back() - nums.back());\n        }\n        /*\n        int firstPositive = 0;\n        while (true) {\n            int start = firstPositive;\n            while (start < nums.size() && target[start] - nums[start] <= 0)\n                start++;\n            if (start == nums.size())\n                break;\n            firstPositive = start;\n            int end = start;\n            while (end < nums.size() && target[end] - nums[end] > 0)\n                end++;\n            while (start != end) {\n                nums[start]++;\n                start++;\n            }\n            count++;\n        }\n        int firstNegative = 0;\n        while (true) {\n            int start = firstNegative;\n            while (start < nums.size() && target[start] - nums[start] >= 0)\n                start++;\n            if (start == nums.size())\n                break;\n            firstNegative = start;\n            int end = start;\n            while (end < nums.size() && target[end] - nums[end] < 0)\n                end++;\n            while (start != end) {\n                nums[start]--;\n                start++;\n            }\n            count++;\n        }\n        */\n        return count;\n    }\n};",
    "submit_ts": "1721534398",
    "subm_id": "1328030417"
}