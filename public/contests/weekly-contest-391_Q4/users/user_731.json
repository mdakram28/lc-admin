{
    "username": "kaname_asuka",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        coord_sum = sorted(range(n), key = lambda i: points[i][0] + points[i][1])\n        coord_diff = sorted(range(n), key = lambda i: points[i][0] - points[i][1])\n        sum_val = points[coord_sum[-1]][0] + points[coord_sum[-1]][1] - (points[coord_sum[0]][0] + points[coord_sum[0]][1])\n        diff_val = points[coord_diff[-1]][0] - points[coord_diff[-1]][1] - (points[coord_diff[0]][0] - points[coord_diff[0]][1])\n        if sum_val > diff_val:\n            coord_sum1 = sorted([i for i in range(n) if i != coord_sum[-1]], key = lambda i: points[i][0] + points[i][1])\n            coord_diff1 = sorted([i for i in range(n) if i != coord_sum[-1]], key = lambda i: points[i][0] - points[i][1])\n            sum_val1 = points[coord_sum1[-1]][0] + points[coord_sum1[-1]][1] - (points[coord_sum1[0]][0] + points[coord_sum1[0]][1])\n            diff_val1 = points[coord_diff1[-1]][0] - points[coord_diff1[-1]][1] - (points[coord_diff1[0]][0] - points[coord_diff1[0]][1])\n            coord_sum2 = sorted([i for i in range(n) if i != coord_sum[0]], key = lambda i: points[i][0] + points[i][1])\n            coord_diff2 = sorted([i for i in range(n) if i != coord_sum[0]], key = lambda i: points[i][0] - points[i][1])\n            sum_val2 = points[coord_sum2[-1]][0] + points[coord_sum2[-1]][1] - (points[coord_sum2[0]][0] + points[coord_sum2[0]][1])\n            diff_val2 = points[coord_diff2[-1]][0] - points[coord_diff2[-1]][1] - (points[coord_diff2[0]][0] - points[coord_diff2[0]][1])\n            return min(sum_val, max(sum_val1, diff_val1), max(sum_val2, diff_val2))\n        else:\n            coord_sum1 = sorted([i for i in range(n) if i != coord_diff[-1]], key = lambda i: points[i][0] + points[i][1])\n            coord_diff1 = sorted([i for i in range(n) if i != coord_diff[-1]], key = lambda i: points[i][0] - points[i][1])\n            sum_val1 = points[coord_sum1[-1]][0] + points[coord_sum1[-1]][1] - (points[coord_sum1[0]][0] + points[coord_sum1[0]][1])\n            diff_val1 = points[coord_diff1[-1]][0] - points[coord_diff1[-1]][1] - (points[coord_diff1[0]][0] - points[coord_diff1[0]][1])\n            coord_sum2 = sorted([i for i in range(n) if i != coord_diff[0]], key = lambda i: points[i][0] + points[i][1])\n            coord_diff2 = sorted([i for i in range(n) if i != coord_diff[0]], key = lambda i: points[i][0] - points[i][1])\n            sum_val2 = points[coord_sum2[-1]][0] + points[coord_sum2[-1]][1] - (points[coord_sum2[0]][0] + points[coord_sum2[0]][1])\n            diff_val2 = points[coord_diff2[-1]][0] - points[coord_diff2[-1]][1] - (points[coord_diff2[0]][0] - points[coord_diff2[0]][1])\n            return min(diff_val, max(sum_val1, diff_val1), max(sum_val2, diff_val2))"
}