{
    "username": "kathan07",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> differencesMap;\n        vector<int> maxValues;\n\n        for (int i = 0; i < nums.size() / 2; i++) {\n            int firstElement = nums[i];\n            int secondElement = nums[nums.size() - i - 1];\n            int difference = abs(firstElement - secondElement);\n            int maxValue = max({firstElement, secondElement, k - firstElement, k - secondElement});\n            differencesMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minLength = nums.size();\n        sort(maxValues.begin(), maxValues.end());\n\n        for (auto& entry : differencesMap) {\n            int difference = entry.first;\n            int count = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            count = count * 2 + (nums.size() / 2 - count);\n\n            for (auto& maxValue : entry.second) {\n                if (maxValue < difference) {\n                    count -= 2;\n                } else {\n                    count -= 1;\n                }\n            }\n\n            minLength = min(minLength, count);\n        }\n\n        return minLength;\n    }\n};",
    "submit_ts": "1721489828",
    "subm_id": "1327465037"
}