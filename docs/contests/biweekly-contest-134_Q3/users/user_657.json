{
    "username": "gautham227",
    "submission": "// Created by: G Gautham Krishna\n\n// shortforms\n\n#define pb push_back\n#define pf push_front\n#define ppb pop_back\n#define ppf pop_front\n#define all(x) (x).begin(),(x).end()\n#define srt(v) sort(v.begin(),v.end())\n#define rev(v) reverse(v.begin(),v.end())\n#define lb(v,x) lower_bound(v.begin(),v.end(),x)\n#define ub(v,x) upper_bound(v.begin(),v.end(),x)\n#define cpy(v2,v1) v2.assign(v1.begin(),v1.end())\n#define maxv(a) *max_element(a.begin(), a.end())\n#define minv(a) *min_element(a.begin(), a.end())\n#define ff first\n#define ss second\n#define endl \"\\n\"\n\n//type definitions\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef vector<ll> vll;\n\n//constants\n\nconst long long int inf = 1e18;\nconst int mod = 1000000007;\n#define pi 3.141592653589793238462\n\nstruct custom_hash {\n    static uint64_t splitmix64(uint64_t x) {\n        // http://xorshift.di.unimi.it/splitmix64.c\n        x += 0x9e3779b97f4a7c15;\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n        return x ^ (x >> 31);\n    }\n\n    size_t operator()(uint64_t x) const {\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n        return splitmix64(x + FIXED_RANDOM);\n    }\n};\n\n//graphs\n\n//const int N=1e5+2;\n//std::vector<int> vis(N,0);\n//std::vector<int> adj[N];\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll binexp(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\nll mminvprime(ll a, ll b) {return binexp(a, b - 2, b);}\nbool revsort(ll a, ll b) {return a > b;}\nll combination(ll n, ll r, ll m, vector<ll>& fact, vector<ll>& ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\nvector<ll> sievefn(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\nll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);} \n\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int ans=0;\n        for(int i=0;i<k-1;i++){\n            colors.pb(colors[i]);\n        }\n        \n        // for(auto ele: colors){\n        //     cout<<ele<<\" \";\n        // }\n        \n        int ind=1;\n        int ind1=0;\n        int last=colors[0];\n        while(ind<colors.size()){\n            \n            while(ind<colors.size() && (ind-ind1)<k){\n                // cout<<ind<< \" \"<<ind1<<endl;\n                if(colors[ind]==last){\n                    last=colors[ind];\n                    ind++;\n                    ind1=ind-1;                  \n                }\n                else{\n                    last=colors[ind];\n                    ind++;\n                }\n            }\n            if((ind-ind1)==k){ans++;}\n            ind1++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277542",
    "subm_id": "1311668597"
}