{
    "username": "YanlinGong",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        row = set([i for i in range(m)])\n        col = set([i for i in range(n)])\n        \n        def helper(arr1,arr2,arr3):\n            res = float('-inf')\n            n = len(arr3)\n            tmp = [arr3[-1]] * n\n            for i in range(n-2,-1,-1):\n                tmp[i] = max(tmp[i+1], arr3[i])\n            for i in range(len(arr1)-2):\n                cur1 = arr1[i]\n                for j in range(i+1,len(arr1)-1):\n                    cur2 = arr2[j]\n                    cur3 = tmp[j+1]\n                    res = max(res, cur1+cur2+cur3)\n            return res\n        rowmax = []\n        for i in range(m):\n            rowmax.append(max(board[i][:]))\n        res = float('-inf')\n        for i in range(m):\n            a1 = board[i][:]\n            for j in range(i+1,m):\n                a2 = board[j][:]\n                for k in range(j+1,m):\n                    a3 = board[k][:]\n                    if rowmax[i] + rowmax[j] + rowmax[k] < res:\n                        continue\n                    c1 = helper(a1,a2,a3)\n                    c2 = helper(a1,a3,a2)\n                    c3 = helper(a2,a1,a3)\n                    c4 = helper(a2,a3,a1)\n                    c5 = helper(a3,a1,a2)\n                    c6 = helper(a3,a2,a1)\n                    res = max(res, c1, c2, c3, c4,c5,c6)\n                    \n        return res\n            \n        ",
    "submit_ts": "1723910115",
    "subm_id": "1359217975"
}