{
    "username": "pyaracetamol",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    const int MAX_INV = 400;\n    \n    \n    int numberOfPermutations(int N, vector<vector<int>>& reqs) {\n        unordered_map<int, int> endToInv; \n        for (auto &r : reqs)\n        {\n            endToInv[r[0] + 1] = r[1];\n        }\n\n        vector<vector<long long>> dp(N + 1, vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        int len = 1;\n        while (len <= N)\n        {\n            int inv = 0;\n            while (inv <= MAX_INV)\n            {\n                int pos = 0;\n                while (pos < len)\n                {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0)\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][prevInv]) % MOD;\n                    ++pos;\n                }\n                ++inv;\n            }\n\n            if (endToInv.count(len) > 0)\n            {\n                int reqInv = endToInv[len];\n                int inv = 0;\n                while (inv <= MAX_INV)\n                {\n                    if (inv != reqInv)\n                        dp[len][inv] = 0;\n                    ++inv;\n                }\n            }\n\n            ++len;\n        }\n\n        long long res = 0;\n        int inv = 0;\n        while (inv <= MAX_INV)\n        {\n            res = (res + dp[N][inv]) % MOD;\n            ++inv;\n        }\n\n        return static_cast<int>(res);\n    }\n};",
    "submit_ts": "1719070446",
    "subm_id": "1296823246"
}