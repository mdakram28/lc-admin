{
    "username": "suraj_0491",
    "submission": "class Solution { \npublic: \n    \n    int maxOperations(string s) { \n        bool gamma = 0; \n        int alpha = 0, beta = 0; \n      \n        vector<int> delta; \n        \n        int i = 0;\n        while (i < s.size()) { \n            // If current character is '1', start a new block of '1's\n            if (s[i] == '1') { \n                delta.push_back(1); \n                gamma = 1; \n            } \n            // If current character is '0' and we were in a block of '1's,\n            // add a separator (0) and end the current block of '1's\n            if (s[i] == '0' && gamma == 1) { \n                delta.push_back(0); \n                gamma = 0; \n            } \n            i++; \n        } \n\n       // to iteratee\n        auto it = delta.begin();\n        while (it != delta.end()) { \n            // If the current element is '1', increment the count of '1's\n            if (*it == 1) { \n                beta++; \n            } \n            // If the current element is '0', add the count of '1's to alpha\n            else { \n                alpha += beta; \n            } \n            ++it; \n        } \n\n        return alpha; \n    } \n};\n",
    "submit_ts": "1721530222",
    "subm_id": "1327926751"
}