{
    "username": "Tourist_ka_chachera_bhai",
    "submission": "#include<bits/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <stdlib.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n#include<ext/pb_ds/tree_policy.hpp>\n#include<ext/pb_ds/assoc_container.hpp>\nusing namespace  __gnu_pbds;\nusing namespace std;\n\n#define ll long long int  \n#define For(n) for(ll i=0;i<n;i++)\n#define all(x) x.begin(),x.end()\n#define allr(x) x.rbegin(),x.rend()\n\ntypedef vector<int> VI;  \ntypedef vector<ll> VL; \ntypedef long double lld;\ntypedef unsigned long long ull;\n\nconst int MOD = 1e9 + 7;\n\n \n//--------------------------------- Trace Functions --------------------------------------\n \nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(lld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\nvoid DBG() {\n\tcerr << \"]\" << endl;\n}\n\ntemplate<typename T1,typename T2>istream& operator>>(istream& in,pair<T1,T2> &a){in>>a.x>>a.y;return in;}\ntemplate<typename T1,typename T2>ostream& operator<<(ostream& out,pair<T1,T2> a){out<<a.x<<\" \"<<a.y;return out;}\ntemplate<typename T,typename T1>T maxs(T &a,T1 b){if(b>a)a=b;return a;}\ntemplate<typename T,typename T1>T mins(T &a,T1 b){if(b<a)a=b;return a;}\ntemplate<class H, class... T> void DBG(H h, T... t) {\n\tcerr << to_string(h);\n\tif (sizeof...(t))\n\t\tcerr << \", \";\n\tDBG(t...);\n}\n\n#define DEBUG(x...) { cout << \"(\" << #x << \")\" << \" = ( \"; Print(x); }\ntemplate <typename T1> void Print(T1 t1) { cout << t1 << \" )\" << endl; }\ntemplate <typename T1, typename... T2>\nvoid Print(T1 t1, T2... t2) { cout << t1 << \" , \"; Print(t2...); }\n\n// ----------------------------- Debuging -----------------------------------------------\n\nvoid __print(int x) {cerr << x;}\nvoid __print(long x) {cerr << x;}\nvoid __print(long long x) {cerr << x;}\nvoid __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cerr << x;}\nvoid __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;}\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n\ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\nvoid _print() {cerr << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n#ifndef ONLINE_JUDGE\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x) cerr << endl;\n#else\n#define debug(x...)\n#endif\n\n\n#define rep(x, start, end) for (auto x = (start); (start) < (end) ? x < (end) : x >= (end); (start) < (end) ? x++ : x--)\n\nclass Solution {\npublic:\n    ll maximumValueSum(vector<vector<int>>& board) {\n        ios_base::sync_with_stdio(false);\n       cin.tie(NULL);\n       cout.tie(NULL);\n        int m = board.size();\n        int n = board[0].size();\n        ll maxSum = LLONG_MIN;\n        vector<vector<ll>> bestValues(m, vector<ll>(3, LLONG_MIN));\n        vector<vector<int>> bestColumns(m, vector<int>(3, -1));\n\n        rep(i, 0, m) {\n            vector<pair<ll, int>> colValues;\n            for (int j = 0; j < n; ++j) {\n                colValues.emplace_back(board[i][j], j);\n            }\n            sort(colValues.rbegin(), colValues.rend());\n\n            for (int k = 0; k < 3 && k < n; ++k) {\n                bestValues[i][k] = colValues[k].first;\n                bestColumns[i][k] = colValues[k].second;\n            }\n        }\n\n        rep(r1, 0, m) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    rep(i, 0, 3) {\n                        rep(j, 0, 3) {\n                            if (bestColumns[r2][j] == bestColumns[r1][i]) continue;\n                            rep(k, 0, 3) {\n                                if (bestColumns[r3][k] == bestColumns[r1][i] || bestColumns[r3][k] == bestColumns[r2][j]) continue;\n\n                                ll currentSum = bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723910209",
    "subm_id": "1359221421"
}