{
    "username": "kilnyy",
    "submission": "class Solution(object):\n    def minimumDistance(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n        for p in points:\n            p.append(0)\n            p.append(p[0]+p[1])\n            p.append(p[0]-p[1])\n        \n        def calc(ps):\n            ans = 0\n            a = sorted(ps, key=lambda x: x[3])\n            aans = abs(a[0][3]-a[-1][3])\n            b = sorted(ps, key=lambda x: x[4])\n            bans = abs(b[0][4]-b[-1][4])\n            #print aans, bans, a, b\n            return aans, bans, a, b\n        \n        aas, bbs, a, b = calc(points)\n        \n        if aas > bbs:\n            aas1, bbs1, _, _ = calc(a[:-1])\n            aas2, bbs2, _, _ = calc(a[1:])\n            return min(max(aas1, bbs1), max(aas2, bbs2))\n        else:\n            aas1, bbs1, _, _ = calc(b[:-1])\n            aas2, bbs2, _, _ = calc(b[1:])\n            return min(max(aas1, bbs1), max(aas2, bbs2))"
}