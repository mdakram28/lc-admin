{
    "username": "Skywarrior2000",
    "submission": "const int N = 1e5+1;\nvector<int> adj1[N], adj2[N];\nint dp1[N], dp2[N];\n\nclass Solution {\npublic:\n    int far(int start, int n, vector<int> adj[]){\n        vector<int> vis(n, 0);\n        queue<int> q;\n        q.push(start);\n        vis[start] = 1;\n        int ans;\n        while(!q.empty()){\n            int cur = q.front();\n            ans = cur;\n            q.pop();\n            for(int child : adj[cur]){\n                if(vis[child] == false){\n                    vis[child] = true;\n                    q.push(child); \n                }\n            }\n        }\n        return ans;\n    }\n    void add_edge(vector<int> adj[], int u, int v){\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    void clear(int n, vector<int> adj[], int dp[]){\n        for(int i = 0; i <= n; i++)adj[i].clear();\n        fill(dp, dp+n+1, -1);\n    }\n    \n    void dist(int start, int n, vector<int> adj[], int dp[]){\n        vector<int> vis(n, 0);\n        queue<int> q;\n        q.push(start);\n        vis[start] = 1;\n        int h = 0;\n        while(!q.empty()){\n            int sz = q.size();\n            while(sz--){\n                int cur = q.front();\n                dp[cur] = max(dp[cur], h);\n                q.pop();\n                for(int child : adj[cur]){\n                    if(vis[child] == false){\n                        vis[child] = true;\n                        q.push(child); \n                    }\n                }\n            }\n            h++;\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {  \n        int n1 = edges1.size()+1, n2 = edges2.size()+1;\n        clear(n1, adj1, dp1);\n        clear(n2, adj2, dp2);\n        \n        for(auto edge : edges1)add_edge(adj1, edge[0], edge[1]);\n        for(auto edge : edges2)add_edge(adj2, edge[0], edge[1]);\n        \n        int a1 = far(0, n1, adj1);\n        int b1 = far(a1, n1, adj1);\n        \n        \n        int a2 = far(0, n2, adj2);\n        int b2 = far(a2, n2, adj2);\n        \n//         cout<<a1<<\" \"<<b1<<\"\\n\";\n//         cout<<a2<<\" \"<<b2<<\"\\n\";\n        \n        dist(a1, n1, adj1, dp1);\n        dist(b1, n1, adj1, dp1);\n        \n        dist(a2, n2, adj2, dp2);\n        dist(b2, n2, adj2, dp2);\n        \n        int ans = max(dp1[a1], dp2[a2]);\n        int x1 = INT_MAX, x2 = INT_MAX;\n        \n        for(int i = 0; i < n1; i++)x1 = min(x1, dp1[i]);\n        for(int i = 0; i < n2; i++)x2 = min(x2, dp2[i]);\n        \n        // for(int i = 0; i < n1; i++)cout<<dp1[i]<<\" \";cout<<\"\\n\";\n        // for(int i = 0; i < n2; i++)cout<<dp2[i]<<\" \";cout<<\"\\n\";\n        \n        // cout<<\"::\"<<x1<<\" \"<<x2<<\"\\n\";\n        ans = max(ans, x1 + x2 + 1);\n        \n        return ans;\n    }\n};",
    "submit_ts": 1719717843.0
}