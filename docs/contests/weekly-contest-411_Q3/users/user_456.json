{
    "username": "lincxiao",
    "submission": "import java.math.BigInteger;\nclass Solution {\n    public String largestPalindrome(int n, int k) {\n        if (k == 1) {\n            return buildOne(n);\n        }\n        if (k == 2) {\n            return buildTwo(n);\n        }\n        if (k == 3) {\n            return buildThree(n);\n        }\n        if (k == 4) {\n            return buildFour(n);\n        }\n        if (k == 5) {\n            return buildFive(n);\n        }\n        if (k == 6) {\n            return buildSix(n);\n        }\n        if (k == 7) {\n            return buildSeven(n);\n        }\n        if (k == 8) {\n            return buildEight(n);\n        }\n        if (k == 9) {\n            return buildNine(n);\n        }\n        return \"\";\n    }\n    \n    private String buildOne(int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.append(9);\n        }\n        return sb.toString();\n    }\n    \n    private String buildTwo(int n) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(8);\n        for (int i = 0; i < n-2; i++) {\n            sb.append(9);\n        }\n        if (n > 1) {\n            sb.append(8);\n        }\n        return sb.toString();\n    }\n    \n    private String buildThree(int n) {\n        return buildOne(n);\n    }\n    \n    private String buildFour(int n) {\n        StringBuilder sb = new StringBuilder();\n        if (n <= 4) {\n            for (int i = 0 ; i < n; i++) {\n                sb.append(8);\n            }\n        } else {\n            sb.append(88);\n            for (int i = 0; i < n-4; i++) {\n                sb.append(9);\n            }\n            sb.append(88);\n        }\n        return sb.toString();\n    }\n    \n    private String buildFive(int n) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(5);\n        for (int i = 0; i < n-2; i++) {\n            sb.append(9);\n        }\n        if (n > 1) {\n            sb.append(5);\n        }\n        return sb.toString();\n    }\n    \n    private String buildSix(int n) {\n        if (n == 1) {\n            return \"6\";\n        } else if (n == 2) {\n            return \"66\";\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(8);\n        for (int i = 0; i < n-2; i++) {\n            sb.append(9);\n        }\n        sb.append(8);\n        int mid = n/2;\n        if (n % 2 == 1) {\n            sb.replace(mid, mid+1, \"8\");\n        } else {\n            sb.replace(mid-1, mid, \"7\");\n            sb.replace(mid, mid+1, \"7\");\n        }\n        return sb.toString();\n        \n        \n        // for (int i = 0; i < n; i++) {\n        //     sb.append(8);\n        // }\n        // int mod = (8*n) % 3;\n        // if (mod == 0) {\n        //     return sb.toString();\n        // }\n        // int mid = n/2;\n        // if (mod == 1) {\n        //     if (n % 2 == 0) {\n        //         sb.replace(mid-1, mid, \"9\");\n        //         sb.replace(mid, mid+1, \"9\");\n        //     } else {\n        //         sb.replace(mid, mid+1, \"7\");\n        //     }\n        // } else {\n        //     if (n % 2 == 0) {\n        //         sb.replace(mid-1, mid, \"7\");\n        //         sb.replace(mid, mid+1, \"7\");\n        //     } else {\n        //         sb.replace(mid, mid+1, \"9\");\n        //     }\n        // }\n        // return sb.toString();\n    }\n    \n    private String buildSeven(int n) {\n        if (n == 1) return \"7\";\n        if (n == 2) return \"77\";\n        if (n == 3) return \"959\";\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.append(9);\n        }\n        int replace = 8;\n        while (true) {\n            BigInteger bigInt = new BigInteger(sb.toString());\n            BigInteger mod = bigInt.mod(new BigInteger(\"7\"));\n            if (mod.toString().equals(\"0\")) {\n                break;\n            }\n            int mid = n/2;\n            if (n % 2 == 0) {\n                sb.replace(mid-1, mid, String.valueOf(replace));\n                sb.replace(mid, mid+1, String.valueOf(replace));\n            } else {\n                sb.replace(mid, mid+1, String.valueOf(replace));\n            }\n            replace--;\n        }\n        return sb.toString();\n    }\n    \n    private String buildEight(int n) {\n        StringBuilder sb = new StringBuilder();\n        if (n <= 6) {\n            for (int i = 0; i < n; i++) {\n                sb.append(8);\n            }\n        } else {\n            sb.append(888);\n            for (int i = 0; i < n-6; i++) {\n                sb.append(9);\n            }\n            sb.append(888);\n        }\n        return sb.toString();\n    }\n    \n    private String buildNine(int n) {\n        return buildOne(n);\n    }\n\n    \n    private boolean one(String s) {\n        return true;\n    }\n    \n    private boolean two(String s) {\n        char c = s.charAt(s.length()-1);\n        return (c-'0') % 2 == 0;\n    }\n    \n    private boolean three(int sum) {\n        return sum % 3 == 0;\n    }\n    \n}",
    "submit_ts": "1723952561",
    "subm_id": "1359799132"
}