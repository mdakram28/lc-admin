{
    "username": "richweiwei",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int n = points.size();\n        \n        vector<pair<int, int>> plus;\n        vector<pair<int, int>> minus;\n        \n        for (int i = 0; i < n; ++i) {\n            plus.push_back({points[i][0] + points[i][1], i});\n            minus.push_back({points[i][0] - points[i][1], i});\n        }\n        \n        sort(plus.begin(), plus.end());\n        sort(minus.begin(), minus.end());\n                            \n        vector<int> cand = {plus[0].second, plus[n-1].second, minus[0].second, minus[n-1].second};\n        \n        int sol = INT_MAX;\n        \n        for (int k = 0; k < 4; ++k) {\n            // cout<<cand[k]<<endl;\n            vector<int> t_plus;\n            vector<int> t_minus;\n            \n            for (int i = 0; i < n; ++i) {\n                if (i != cand[k]) {\n                    t_plus.push_back(points[i][0] + points[i][1]);\n                    t_minus.push_back(points[i][0] - points[i][1]);\n                }\n            }\n            \n            sort(t_plus.begin(), t_plus.end());\n            sort(t_minus.begin(), t_minus.end());\n            \n            int case1 = t_plus[n-2] - t_plus[0];\n            int case2 = -1* t_minus[0] + t_minus[n-2];\n            int mm = max(case1, case2);\n            sol = min(sol, mm);\n        }\n            \n        return sol;\n                            \n        \n        \n        \n        \n    }\n};"
}