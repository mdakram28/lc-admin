{
    "username": "sanmai_reddy377",
    "submission": "#pragma GCC optimize(\"unroll-loops,O3,Ofast\") //even 10^8+ also works with this\n#pragma GCC target(\"avx2,avx,fma,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\n \n#define pb push_back\n#define ppb pop_back\n#define ff first\n#define ss second\n#define rt return;\n#define set_bits(a) __builtin_popcountll(a)\n#define mine(a)    (*min_element((a).begin(), (a).end()))\n#define maxe(a)    (*max_element((a).begin(), (a).end()))\n#define mini(a)    ( min_element((a).begin(), (a).end()) - (a).begin())\n#define maxi(a)    ( max_element((a).begin(), (a).end()) - (a).begin())\n#define lowb(a, x) ( lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define uppb(a, x) ( upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define disp(a) {for(int i=0;i<a.size();i++) cout<<a[i]<<\" \"; cout<<endl;}\n#define all(v) (v).begin(),(v).end()\n#define rall(v) (v).rbegin(),(v).rend()\n#define inp(a) {for(int i=0;i<(a).size();i++) cin>>(a)[i];}\n#define fill(a,b) memset(a, b, sizeof(a))\n#define prt(a) cout<<(a)<<endl;\n#define endl \"\\n\"\n#define NO cout<<\"NO\"<<endl;\n#define YES cout<<\"YES\"<<endl;\n#define vll vector<ll>\n#define vvll vector<vector<ll>>\n#define double double\n#define de(a) cout<<\"(\"<<a<<\")\"<<endl;\n#define de2(a) cout<<\"*\"<<a<<\"*\"<<endl;\n#define ft front()\n#define bk back()\n#define minpq priority_queue<ll, vector<ll>, greater<ll> >\n#define maxpq priority_queue<ll>\n#define nl cout<<endl;\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define cont continue;\n#define vpll vector<pair<ll,ll>>\n#define vvii vector<vector<int>>\n#define vi vector<int>\n#define vvpll vector<vector<pair<ll,ll>>>\n#define pll pair<ll,ll>\n\n//const ll M=998244353;\nconst ll M=1e9+7;\nconst ll N=1e5+5;  \nconst ll inf=1e18; //keeping inf may not give soln every time,try 1e9, 1e15\n\nll bit(ll n,ll i){return (n&(1LL<<i)) ? 1 : 0;}\nll add(ll a,ll b){return ((a%M)+(b%M))%M;}\nll mul(ll a,ll b){return ((a%M) * (b%M))%M;}\n\nclass Solution {\npublic:\n    vvll g;\n    vll sa;\n    vi ans;\n    vector<multiset<ll>> st;\n    ll dfs(ll ind,ll par,ll curr){\n       ll sum=curr,mx=0;\n       for(auto &k: g[ind]){\n         if(k==par) continue;\n         if(k%2){\n           ll a=dfs(k,ind,1);\n           st[ind].insert(a);\n           mx=max(a,mx);\n         } \n         else{\n            ll b=dfs(k,ind,2);\n            st[ind].insert(b);\n           mx=max(b,mx);\n         } \n       }\n       sum+=mx;\n       return sa[ind]=sum;\n    }\n    void dfs2(ll ind,ll par){\n       for(auto &k: g[ind]){\n         if(k==par) continue;\n         ll val=2,a=sa[ind],b=sa[k];\n\n         st[ind].erase(st[ind].find(sa[k]));\n         ll mx=0;\n         if(st[ind].size()) mx=*st[ind].rbegin();\n         if(ind%2) mx+=1;\n         else mx+=2;\n         sa[ind]=mx;\n         \n         // de(mx)\n         st[k].insert(sa[ind]);\n\n         sa[k]=*st[k].rbegin();\n         \n         ans[k]=sa[k];\n         dfs2(k,ind);\n\n         st[k].erase(st[k].find(sa[ind]));\n         sa[ind]=a;\n         sa[k]=b;\n         st[ind].insert(sa[k]);\n       }\n    }\n    vector<int> timeTaken(vector<vector<int>>& e) {\n      g.clear(); sa.clear(); ans.clear(); st.clear();\n      ll n=e.size()+1; g.resize(n); sa.resize(n); ans.resize(n); st.resize(n);\n      for(auto &k: e){\n         g[k[0]].pb(k[1]);\n         g[k[1]].pb(k[0]);\n      }\n      dfs(0,-1,0);\n      ans[0]=sa[0];\n      dfs2(0,-1);\n      return ans;\n    }\n};",
    "submit_ts": "1722700066",
    "subm_id": "1343230650"
}