{
    "username": "weirdsmoothie",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1, dist[100005][2]{};\n        vector<int> ans(n), adj[100000];\n        for (auto &e: edges) {\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n        DFS(adj, dist, 0, -1, 0);\n        solve(adj, ans, dist, 0, -1, 0);\n        return ans;\n    }\n    \n    void DFS(vector<int> adj[], int dist[][2], int u, int p, int d) {\n        for (int v: adj[u]) {\n            if (v == p) continue;\n            int w = 2 >> (v & 1);\n            DFS(adj, dist, v, u, d + w);\n            if (dist[v][0] + w > dist[u][0]) {\n                dist[u][1] = dist[u][0];\n                dist[u][0] = dist[v][0] + w;\n            }\n            else if (dist[v][0] + w > dist[u][1]) {\n                dist[u][1] = dist[v][0] + w;\n            }\n        }\n    }\n    \n    void solve(vector<int> adj[], vector<int>& ans, int dist[][2], int u, int p, int d) {\n        int w = 2 >> (u & 1);\n        ans[u] = max(dist[u][0], d);\n        for (int v: adj[u]) {\n            if (v == p) continue;\n            if (dist[u][0] == dist[v][0] + (2 >> (v & 1))) {\n                solve(adj, ans, dist, v, u, max(d, dist[u][1]) + w);\n            }\n            else solve(adj, ans, dist, v, u, max(d, dist[u][0]) + w);\n        }\n    }\n};",
    "submit_ts": "1722698782",
    "subm_id": "1343191610"
}