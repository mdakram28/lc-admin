{
    "username": "9caiji",
    "submission": "vector<pair<int, int>> pp[4];\nclass Solution {\npublic:\n  int minimumDistance(vector<vector<int>>& points) {\n    int n = points.size();\n    for (int i = 0; i < 4; i++) pp[i].clear();\n    for (int i = 0; i < points.size(); i++) {\n      pp[0].push_back({ points[i][0] + points[i][1] ,i });\n      pp[1].push_back({ -points[i][0] + points[i][1],i });\n      pp[2].push_back({ points[i][0] - points[i][1], i });\n      pp[3].push_back({ -points[i][0] - points[i][1], i });\n    }\n    for (int i = 0; i < 4; i++) sort(pp[i].begin(), pp[i].end());\n\n    int mi = 1e9;\n    for (int eraseIdx = 0; eraseIdx < n; eraseIdx++) {\n      int mx = 0;\n      for (int i = 0; i < 4; i++) {\n        if (pp[i][0].second == eraseIdx) {\n          mx = max(mx, pp[i][n - 1].first - pp[i][1].first);\n        }\n        else if (pp[i][n - 1].second == eraseIdx) {\n          mx = max(mx, pp[i][n - 2].first - pp[i][0].first);\n        }\n        else {\n          mx = max(mx, pp[i][n - 1].first - pp[i][0].first);\n        }\n      }\n      mi = min(mi, mx);\n    }\n    return mi;\n  }\n};"
}