{
    "username": "vishwannth",
    "submission": "class TrieNode {\npublic:\n    int cost;\n    vector<TrieNode*> children;\n    TrieNode() : cost(INT_MAX), children(26, nullptr) {}\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            TrieNode* node = root;\n            for (char c : words[i]) {\n                if (!node->children[c - 'a']) node->children[c - 'a'] = new TrieNode();\n                node = node->children[c - 'a'];\n            }\n            node->cost = min(node->cost, costs[i]);\n        }\n        \n        int n = target.length();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = root;\n            for (int j = i; j < n; ++j) {\n                if (!node->children[target[j] - 'a']) break;\n                node = node->children[target[j] - 'a'];\n                if (node->cost != INT_MAX) dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n            }\n        }\n        \n        return dp[n] == INT_MAX? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720320606",
    "subm_id": "1312299352"
}