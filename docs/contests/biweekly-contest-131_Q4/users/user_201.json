{
    "username": "ard001",
    "submission": "class Solution {\npublic:\n    static constexpr int mxn = 2e5;\n    int st[4*mxn];\n    void update(int idx,int val,int low,int high,int pos){\n        if(idx<low||idx>high)return;\n        if(low==high) return void( st[pos] = val);\n        int mid = (low + high)/2;\n        update(idx,val,low,mid,2*pos+1);\n        update(idx,val,mid+1,high,2*pos+2);\n        st[pos] = max(st[2*pos+1], st[2*pos+2]);\n    }\n    int ask(int qlow,int qhigh,int low,int high,int pos){\n        if(low>qhigh || high<qlow)return -1;\n        if(low>=qlow && high<=qhigh) return st[pos];\n        int mid = (low+high)/2;\n        return max( ask(qlow,qhigh,low,mid,2*pos+1), ask(qlow,qhigh,mid+1,high,2*pos+2));\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        const int m = 5e4;\n        for(int i=0;i<4*mxn;++i) st[i] = -1;\n        \n        set<int> points;\n        vector<bool> ans;\n        for(auto query: queries){\n            if(query[0] == 1){\n                if(points.empty()){\n                    update(query[1],query[1],0,m,0);\n                } else {\n                    auto it = points.lower_bound(query[1]);\n                    if(it == end(points)){\n                        --it;\n                        update(query[1],query[1]-*it,0,m,0);\n                    } else if( it == begin(points)){\n                        update(*it,*it-query[1],0,m,0);\n                        update(query[1],query[1],0,m,0);                        \n                    } else {\n                        auto it2 = it ;\n                        --it2;\n                        update(*it,*it-query[1],0,m,0);\n                        update(query[1],query[1]-*it2,0,m,0);\n                    }\n                }\n                \n                points.insert(query[1]);\n            } else {\n                int x = query[1], sz = query[2];\n                int ret = ask(0,x,0,m,0);\n               // cout << ret << endl;\n                auto it = points.lower_bound(x);\n                if(ret>=sz) ans.push_back(true);\n                else if(points.empty() || it == begin(points)) ans.push_back(x>=sz);\n                else if(*it == x) ans.push_back(false);\n                else{ \n                    --it;\n                    ans.push_back(x-*it>=sz);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716651087.0
}