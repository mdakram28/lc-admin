{
    "username": "unique161",
    "submission": "class Solution {\npublic:\n    int f(vector<int>& nums, int maxdiff, int k)\n    {\n        int count=0;\n        for(int i=0;i<nums.size()/2;i++)\n        {\n            if(abs(nums[i]-nums[nums.size()-i-1])!=maxdiff)\n            {\n                int mini=min(nums[i], nums[nums.size()-i-1]);\n                int maxi=max(nums[i], nums[nums.size()-i-1]);\n                if(maxi-maxdiff>=0 and maxi-maxdiff<=k)\n                    count++;\n                else if(mini+maxdiff<=k)\n                    count++;\n                else\n                    count+=2;\n            }\n        }\n        return count;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> mp;\n        for(int i=0;i<nums.size()/2;i++)\n            mp[abs(nums[i]-nums[nums.size()-i-1])]++;\n\n        int maxfre1 = 0, maxdiff1 = 0;\n        int maxfre2 = 0, maxdiff2 = 0;\n\n        for(auto i:mp) {\n            if(i.second > maxfre1) {\n                maxfre2 = maxfre1;\n                maxdiff2 = maxdiff1;\n                maxfre1 = i.second;\n                maxdiff1 = i.first;\n            } else if(i.second > maxfre2) {\n                maxfre2 = i.second;\n                maxdiff2 = i.first;\n            }\n        }\n        return min(f(nums, maxdiff1, k), f(nums, maxdiff2, k));\n    }\n};",
    "submit_ts": "1721489763",
    "subm_id": "1327463013"
}