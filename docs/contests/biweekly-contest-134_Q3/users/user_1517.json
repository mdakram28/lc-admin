{
    "username": "anu0009",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n      int n = colors.size();\n        if (n < k) return 0;\n\n       \n        std::vector<int> pattern1(k);\n        std::vector<int> pattern2(k);\n        for (int i = 0; i < k; i++) {\n            pattern1[i] = i % 2;\n            pattern2[i] = 1 - pattern1[i];\n        }\n\n       \n        std::vector<int> doubledColors(2 * n);\n        for (int i = 0; i < 2 * n; i++) {\n            doubledColors[i] = colors[i % n];\n        }\n\n        \n        int count = countPatternMatches(doubledColors, pattern1, n, k) +\n                    countPatternMatches(doubledColors, pattern2, n, k);\n\n        return count;\n    }\n\nprivate:\n    static int countPatternMatches(std::vector<int>& text, std::vector<int>& pattern, int originalLength, int k) {\n        int m = pattern.size();\n        std::vector<int> anu = buildKMPTable(pattern);\n\n        int i = 0, j = 0, count = 0;\n        while (i < text.size()) {\n            if (pattern[j] == text[i]) {\n                i++;\n                j++;\n                if (j == m) {\n                    \n                    if (i - j < originalLength) {\n                        count++;\n                    }\n                    j = anu[j - 1];\n                }\n            } else {\n                if (j != 0) {\n                    j = anu[j - 1];\n                } else {\n                    i++;\n                }\n            }\n        }\n\n        return count;\n    }\n\n    static std::vector<int> buildKMPTable(std::vector<int>& pattern) {\n        int m = pattern.size();\n        std::vector<int> anu(m);\n        int length = 0;\n        anu[0] = 0;\n\n        int i = 1;\n        while (i < m) {\n            if (pattern[i] == pattern[length]) {\n                length++;\n                anu[i] = length;\n                i++;\n            } else {\n                if (length != 0) {\n                    length = anu[length - 1];\n                } else {\n                    anu[i] = 0;\n                    i++;\n                }\n            }\n        }\n\n        return anu;  \n    }\n};",
    "submit_ts": "1720279404",
    "subm_id": "1311749874"
}