{
    "username": "suili",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        res_dict = {0:2, 1:4, 2:4, 3:3, 4:2}\n        if k <= 4:\n            return res_dict[k]\n        if k & (k - 1) == 0: # 111000 \n            return 1\n        m = k.bit_length() + 1\n        n = 2 ** k.bit_length() - k\n        if n > m:\n            return 0\n        # C_m^n = m * ... * (m - n + 1) // (n * .. * 1)\n        res = 1\n        for i in range(n):\n            res *= (m - i)\n        for i in range(n):\n            res //= (i + 1)\n        return res\n'''\n0  1-1  1-1+1-1\n1  1  1-1+1  1+1-1  1-1+1-1+2-1\n2  1-1+1-1+2  1+1   1+1-1+2-1 \n\n1  +1+2..+2^k = 2^(k+1)  -1 * (0 ~ k+1)\n0  1+1\n   1 1\n1  1+1+2\n   1 2 1\n2  1+1+2\n     1 3\n3  1+1+2\n       3\n4  1+1+2+4\n       1 1\n5  1+1+2+4\n         4\n6  1+1+2+4\n         6\n7  1+1+2+4\n         4\n8  1+1+2+4+8\n         1 \n9  1+1+2+4+8\n         \n10 1+1+2+4+8\n         \n11 1+1+2+4+8\n           1\n12 1+1+2+4+8\n           5\n13 1+1+2+4+8\n           10\n14 1+1+2+4+8\n           10\n15 1+1+2+4+8\n           5\n16 1+1+2+4+8\n           1 \n17 1+1+2+4+8\n              \n'''",
    "submit_ts": 1716089511.0
}