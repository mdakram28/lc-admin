{
    "username": "RustyKitten",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        def helper(i_start, i_end, j_start, j_end):\n            seen = False\n            up, down, left, right = float(\"inf\"), -float(\"inf\"), float(\"inf\"), -float(\"inf\")\n            for i in range(i_start, i_end):\n                for j in range(j_start, j_end):\n                    if grid[i][j] == 1:\n                        seen = True\n                        up = min(i, up)\n                        down = max(i, down)\n                        left = min(j, left)\n                        right = max(j, right)\n            return (right-left+1)*(down-up+1) if seen else 0 \n        \n        m, n = len(grid), len(grid[0])\n        res = m*n\n        \n        # all horizontal\n        for i1 in range(0, m-2):\n            for i2 in range(i1+1, m-1):\n                # print(i1, i2, helper(0, i1+1, 0, n)+helper(i1+1, i2+1, 0, n), helper(i2+1, m, 0, n))\n                res = min(res, helper(0, i1+1, 0, n)+helper(i1+1, i2+1, 0, n) + helper(i2+1, m, 0, n))\n        # print(res)\n        \n        # all vertical\n        for j1 in range(0, n-2):\n            for j2 in range(j1+1, n-1):\n                # print(j1, j2, helper(0, m, 0, j1+1), helper(0, m, j1+1, j2+1), helper(0, m, j2+1, n))\n                res = min(res, helper(0, m, 0, j1+1)+helper(0, m, j1+1, j2+1)+helper(0, m, j2+1, n))\n        # print(res)\n        \n        # 2 + 1\n        for i in range(0, m-1):\n            for j in range(0, n-1):\n                res = min(res, helper(0, i+1, 0, j+1)+helper(0, i+1, j+1, n)+helper(i+1, m, 0, n))\n                res = min(res, helper(i+1, m, 0, j+1)+helper(i+1, m, j+1, n)+helper(0, i+1, 0, n))\n                \n                res = min(res, helper(0, m, 0, j+1)+helper(0, i+1, j+1, n)+helper(i+1, m, j+1, n))\n                res = min(res, helper(0, m, j+1, n)+helper(0, i+1, 0, j+1)+helper(i+1, m, 0, j+1))\n        \n        return res",
    "submit_ts": "1719113610",
    "subm_id": "1297329228"
}