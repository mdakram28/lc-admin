{
    "username": "milhxe",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<pair<long long,int>>> best_score(n);\n        for(int i = 0; i < n; ++i) {\n            pair<long long, int> first_best = make_pair(LLONG_MIN, 0);\n            pair<long long, int> second_best = make_pair(LLONG_MIN, 0);\n            pair<long long, int> third_best = make_pair(LLONG_MIN, 0);\n            for(int j = 0; j < m; ++j) {\n                int sc = board[i][j];\n                if(sc >= first_best.first) {\n                    third_best = second_best;\n                    second_best = first_best;\n                    first_best = make_pair(sc, j);\n                } else if(sc >= second_best.first) {\n                    third_best = second_best;\n                    second_best = make_pair(sc, j);\n                } else if(sc > third_best.first) {\n                    third_best = make_pair(sc, j);\n                }\n            }\n            best_score[i].push_back(first_best);\n            best_score[i].push_back(second_best);\n            best_score[i].push_back(third_best);\n        }\n        vector<bool> taken(m, false);\n        return find(best_score, 0, taken, board, 0);\n    }\n\n    long long find(vector<vector<pair<long long,int>>>& best_score, int row, vector<bool>& taken, vector<vector<int>>& board, int rook) {\n        if(rook == 3) {\n            return 0;\n        }\n        if(row == board.size()) {\n            return LLONG_MIN / 2;\n        }\n        long long pick = LLONG_MIN / 2;\n        for(int i = 0; i < 3; ++i) {\n            if(taken[best_score[row][i].second]) continue;\n            taken[best_score[row][i].second] = true;\n            long long pick2 = static_cast<long long>(board[row][best_score[row][i].second]) + \n                find(best_score, row + 1, taken, board, rook + 1);\n            pick = max(pick2, pick);\n            taken[best_score[row][i].second] = false;\n        }\n\n        long long dont_pick = find(best_score, row + 1, taken, board, rook);\n\n        return max(pick, dont_pick);\n    }\n};\n\n// [[-1000000000,-1000000000,-1000000000,-1000000000],--1000000000,-1000000000],[-1000000000,-1000000000,-1000000000,-1000000000]]",
    "submit_ts": "1723909522",
    "subm_id": "1359195746"
}