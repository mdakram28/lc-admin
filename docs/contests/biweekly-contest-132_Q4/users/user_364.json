{
    "username": "shinez1997",
    "submission": "class Solution {\n#define F first\n#define S second\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int n = a.size();\n        vector<int> val = a;\n        sort(val.begin(), val.end());\n        val.resize(unique(val.begin(), val.end()) - val.begin());\n        auto get = [&](int x) {\n            return lower_bound(val.begin(), val.end(), x) - val.begin();\n        };\n        for(auto& x : a)\n            x = get(x);\n        // dp[i][j] - end i with j count\n        int m = val.size();\n        vector<vector<int>> dp(m, vector<int>(k + 1));\n        dp[a[0]][0] = 1;\n        // vector<vector<int>> tmp = dp;\n        vector<priority_queue<pair<int, int>>> pq(k + 1);\n        pq[0].push({1, a[0]});\n        for(int i = 1; i < n; ++i) {\n            // if(a[i] == j) {\n            //     for(int t = 0; t <= k; ++t) {\n            //         tmp[j][t] = max(dp[j][t] + 1, tmp[j][t]);\n            //     }\n            // }\n            // else {\n            //     for(int t = 0; t < k; ++t) {\n            //         tmp[a[i]][t + 1] = max(dp[j][t] + 1, tmp[a[i]][t + 1]);                    \n            //     }\n            // }\n            for(int t = k; t >= 0; --t) {\n                pair<int, int> x = {0, -1};\n                if(pq[t].size()) {\n                    x = pq[t].top();\n                }\n \n                if(x.S == a[i]) {\n                    dp[a[i]][t] =  max(dp[a[i]][t], x.F + 1);\n                    pq[t].push({dp[a[i]][t], a[i]});\n                }\n                else\n                {\n                    dp[a[i]][t] = dp[a[i]][t] + 1;\n                    pq[t].push({dp[a[i]][t], a[i]});\n                    if(t != k) {\n                        dp[a[i]][t + 1] = max(dp[a[i]][t + 1], x.F + 1);\n                        pq[t + 1].push({dp[a[i]][t + 1], a[i]});\n                    }\n                }\n               \n            }\n            \n        }\n        int res = 1;\n        for(int i = 0; i < m; ++i) {\n            for(int j = 0; j <= k; ++j)\n                res = max(res, dp[i][j]);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1717861332",
    "subm_id": "1281787543"
}