{
    "username": "yatin_kwatra",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#pragma GCC optimize (\"Ofast\")\n//#pragma GCC optimize \"trapv\" // to detect overflow\n\n#define ll                      long long\n#define ar                      array\n// #define int                     ll\n#define sz(v)                   (int)(v.size())\n#define FIO                     ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define ld                      long double\n#define ull                     unsigned long long\n#define endl                    \"\\n\"\n#define fo(i,a,b)               for(int i = a; i<=b ; i++)\n#define rfo(i,a,b)              for(int i = a; i>=b ; i--)\n#define vii                     vector<int>\n#define pq                      priority_queue\n#define uomii                   unordered_map<int,int,best_hash>\n#define all(v)                  v.begin(),v.end()\n#define mp                      make_pair\n#define pb                      push_back\n#define pob                     pop_back\n#define ff                      first\n#define ss                      second\n#define pii                     pair<int,int>\n#define mii                     map<int,int>\n#define vvii                    vector<vii>\n#define mod                     1000000007\n#define inf                     5e18\n#define pi                      3.1415926535897932384626433832795\n#define cz(x)                   63 - __builtin_clzll(x)\n\n\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<class T> using oset =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\n// https://codeforces.com/blog/entry/68809\n\nvoid __print(int x) {cout << x;}\nvoid __print(long x) {cout << x;}\nvoid __print(unsigned x) {cout << x;}\nvoid __print(unsigned long x) {cout << x;}\nvoid __print(unsigned long long x) {cout << x;}\nvoid __print(float x) {cout << x;}\nvoid __print(double x) {cout << x;}\nvoid __print(long double x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cout << (x ? \"true\" : \"false\");}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cout << '{'; __print(x.first); cout << ','; __print(x.second); cout << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cout << '{'; for (auto &i : x) cout << (f++ ? \",\" : \"\"), __print(i); cout << \"}\";}\nvoid _print() {cout << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n#ifndef ONLINE_JUDGE\n#define pr(x...) cout << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define pr(x...)\n#endif\n\n// https://codeforces.com/blog/entry/62393\n\nstruct best_hash {\n\tstatic uint64_t splitmix64(uint64_t x) {\n\n\t\tx += 0x9e3779b97f4a7c15;\n\t\tx = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n\t\tx = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n\t\treturn x ^ (x >> 31);\n\t}\n\n\tsize_t operator()(uint64_t x) const {\n\t\tstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n\t\treturn splitmix64(x + FIXED_RANDOM);\n\t}\n};\n\n/* ------------------------------ Let The Game Begin ---------------------------- */\n\nint dp[2][51][5005];\nuomii nxt;\nint agli[5005];\nint n;\n\nint findLongestGoodSubsequence(bool manke, int k, int pos, vii &nums) {\n\tif (k < 0) return -1e9;\n\n\tif (pos >= n - 1) return n - pos;\n\tint &ans = dp[manke][k][pos];\n\tif (ans != -1) return ans;\n\tans = 1;\n\n\t// go to next occurance\n\tans = max(ans, 1 + findLongestGoodSubsequence(1, k, agli[pos], nums));\n\n\t// just go to next position\n\tans = max(ans, 1 + findLongestGoodSubsequence(0, k - 1, pos + 1, nums));\n\n\t// don't count the current element\n\n\tif (!manke) ans = max(ans, findLongestGoodSubsequence(0, k, pos + 1, nums));\n\n\treturn ans;\n}\n\nclass Solution {\npublic:\n\tint maximumLength(vector<int>& nums, int k) {\n\t\tnxt.clear();\n\n\t\tn = sz(nums);\n\n\t\trfo(i, n - 1, 0) {\n\t\t\tagli[i] = n;\n\t\t\tif (nxt.count(nums[i])) agli[i] = nxt[nums[i]];\n\t\t\tnxt[nums[i]] = i;\n\t\t}\n\n\t\tfo(i, 0, k) {\n\t\t\tfo(j, 0, n - 1) {\n\t\t\t\tdp[0][i][j] = dp[1][i][j] = -1;\n\t\t\t}\n\t\t}\n\n\t\tint ans = 1;\n\t\tfo(i, 0, n - 1) {\n\t\t\tans = max(ans, findLongestGoodSubsequence(1, k, i, nums));\n\t\t}\n\t\treturn ans;\n\t}\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "submit_ts": "1717858594",
    "subm_id": "1281693130"
}