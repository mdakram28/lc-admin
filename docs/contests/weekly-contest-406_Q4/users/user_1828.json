{
    "username": "raunak_1611",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long,char>> vp;\n        long long L=horizontalCut.size(),l=verticalCut.size();;\n        for (int i = 0; i < L; i++) \n            vp.push_back(make_pair(horizontalCut[i], 'H'));\n        for (int i = 0; i <l;  i++) \n            vp.push_back(make_pair(verticalCut[i], 'V'));\n        sort(vp.rbegin(), vp.rend());\n        long long z = 1,x = 1,y=0;\n        for (auto e: vp) {\n            if (e.second == 'H') {\n                y =y+x*e.first ;\n                z++;\n            }else {\n                y = y+ e.first * z;\n                x++;\n            }\n        }  \n        return y;\n    }\n};",
    "submit_ts": "1720926475",
    "subm_id": "1320287396"
}