{
    "username": "ihgazi",
    "submission": "class Solution {\npublic:\n    int maxdist(set<pair<int,int>> &s) {\n        return abs((*s.begin()).first-(*(--s.end())).first);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        set<pair<int,int>> x,y;\n        \n        for (int i = 0; i < n; i++) {\n            vector<int> p = points[i];\n            x.insert(make_pair(p[0]+p[1],i));\n            y.insert(make_pair(p[0]-p[1],i));\n        }\n        \n        //vector<int> del = {(*x.begin()).second,(*(--x.end())).second,(*x.begin()).second,(*(--x.end())).second};\n        int ans = max(maxdist(x),maxdist(y));\n        cout << ans << \"\\n\";\n        \n        for (int d = 0; d < n; d++) {\n            vector<int> p = points[d];\n            pair<int,int> xp = make_pair(p[0]+p[1],d);\n            pair<int,int> yp = make_pair(p[0]-p[1],d);\n            \n            x.erase(xp);\n            y.erase(yp);\n            \n            ans = min(ans,max(maxdist(x),maxdist(y)));\n            \n            x.insert(xp);\n            y.insert(yp);\n        }\n        \n        return ans;\n    }\n};"
}