{
    "username": "coleworld223",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int rp = -1, cp = -1;\n        for (int i = 0; i < n; i += 1) {\n            for (int j = 0; j < m; j += 1) if (grid[i][j] == 1) {\n                rp = i; cp = j; break;\n            }\n            if (rp != -1) break;\n        }\n        \n        // cout << rp << \" \" << cp << '\\n';\n        \n        auto intersect = [&] (vector <int> a, vector <int> b) -> bool {\n            if (a[1] < b[0] || b[1] < a[0]) return 0;\n            if (a[3] < b[2] || b[3] < a[2]) return 0;\n            return 1;\n        };\n        \n        auto mini = [&] (int &x, int y) -> void {\n            x = min (x, y);\n        };\n        \n        auto maxi = [&] (int &x, int y) -> void {\n            x = max (x, y);\n        };\n        \n        int ans = 1000;\n        \n        for (int r2 = rp; r2 < n; r2 += 1) {\n            for (int c1 = 0; c1 <= cp; c1 += 1) {\n                for (int c2 = cp; c2 < m; c2 += 1) {\n                    vector <vector <int>> t = grid;\n                    for (int i = rp; i <= r2; i += 1) {\n                        for (int j = c1; j <= c2; j += 1) {\n                            t[i][j] = -1;\n                        }\n                    }\n                    vector <int> fc (m, -1), lc (m, -1), fr (n, -1), lr (n, -1);\n                    array <int, 2> r = {100, -1};\n                    array <int, 2> c = {100, -1};\n                    for (int j = 0; j < m; j += 1) {\n                        for (int i = 0; i < n; i += 1) {\n                            if (t[i][j] == 1) {\n                                mini (r[0], i);\n                                maxi (r[1], i);\n                                mini (c[0], j);\n                                maxi (c[1], j);\n                            }\n                        }\n                        if (r[0] > r[1]) {\n                            fc[j] = 0; continue;\n                        }\n                        vector <int> fir = {r[0], r[1], c[0], c[1]};\n                        vector <int> sec = {rp, r2, c1, c2};\n                        if (!intersect (fir, sec)) {\n                            fc[j] = (r[1] - r[0] + 1) * (c[1] - c[0] + 1);\n                        }\n                    }\n                    \n                    r = {100, -1};\n                    c = {100, -1};\n                    \n                    for (int j = m - 1; j >= 0; j -= 1) {\n                        for (int i = 0; i < n; i += 1) {\n                            if (t[i][j] == 1) {\n                                mini (r[0], i);\n                                maxi (r[1], i);\n                                mini (c[0], j);\n                                maxi (c[1], j);\n                            }\n                        }\n                        if (r[0] > r[1]) {\n                            lc[j] = 0; continue;\n                        }\n                        vector <int> fir = {r[0], r[1], c[0], c[1]};\n                        vector <int> sec = {rp, r2, c1, c2};\n                        if (!intersect (fir, sec)) {\n                            \n                            lc[j] = (r[1] - r[0] + 1) * (c[1] - c[0] + 1);\n                        }\n                    }\n                    \n                    r = {100, -1};\n                    c = {100, -1};\n                    \n                    for (int i = 0; i < n; i += 1) {\n                        for (int j = 0; j < m; j += 1) {\n                            if (t[i][j] == 1) {\n                                mini (r[0], i);\n                                maxi (r[1], i);\n                                mini (c[0], j);\n                                maxi (c[1], j);\n                            }\n                        }\n                        if (r[0] > r[1]) {\n                            fr[i] = 0; continue;\n                        }\n                        vector <int> fir = {r[0], r[1], c[0], c[1]};\n                        vector <int> sec = {rp, r2, c1, c2};\n                        if (!intersect (fir, sec)) {\n                            fr[i] = (r[1] - r[0] + 1) * (c[1] - c[0] + 1);\n                        }\n                    }\n                    \n                    r = {100, -1};\n                    c = {100, -1};\n                    \n                    for (int i = n - 1; i  >= 0; i -= 1) {\n                        for (int j = 0; j < m; j += 1) {\n                            if (t[i][j] == 1) {\n                                mini (r[0], i);\n                                maxi (r[1], i);\n                                mini (c[0], j);\n                                maxi (c[1], j);\n                            }\n                        }\n                        if (r[0] > r[1]) {\n                            lr[i] = 0; continue;\n                        }\n                        vector <int> fir = {r[0], r[1], c[0], c[1]};\n                        vector <int> sec = {rp, r2, c1, c2};\n                        if (!intersect (fir, sec)) {\n                            lr[i] = (r[1] - r[0] + 1) * (c[1] - c[0] + 1);\n                        }\n                    }\n                    \n                    // if (r2 == 3 && c1 == 0 && c2 == 0) {\n                    //     cout << 100 << '\\n';\n                    // }\n                    \n                    int ar = (r2 - rp + 1) * (c2 - c1 + 1);\n                    for (int i = 0; i < n - 1; i += 1) {\n                        if (fr[i] != -1 && lr[i + 1] != -1) {\n                            ans = min (ans, ar + fr[i] + lr[i + 1]);\n                        }\n                    }\n                    for (int j = 0; j < m - 1; j += 1) {\n                        if (fc[j] != -1 && lc[j] != -1) {\n                            ans = min (ans, ar + fc[j] + lc[j + 1]);\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1719113279",
    "subm_id": "1297321388"
}