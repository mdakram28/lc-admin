{
    "username": "abhayg_07",
    "submission": "class Solution {\npublic:\n    vector<int> dp;\n    vector<vector<int>> adj;\n    vector<int> ans;\n\n    void dfs( int node , int par ){\n        if( adj[node].size() == 1 && par != -1 ){\n            dp[node] = 0;\n            return;\n        }\n        int val = 0;\n        for( auto i : adj[node] ){\n            if( i == par ) continue;\n            dfs( i , node );\n            val = max( val , dp[i] + ( i%2 ? 1 : 2 ) );\n        }\n        dp[node] = val;\n    }\n\n    void rerooting( int node, int par ){\n        ans[node] = dp[node];\n\n        multiset<int> s;\n        for( auto i : adj[node] ){\n            s.insert(dp[i] + ( i%2 ? 1 : 2 ));\n        }\n        int prevnode = dp[node];\n\n        for( auto i : adj[node] ){\n            if( i == par ) continue;\n            int prev = dp[i];\n            int val = dp[i] + ( i%2 ? 1 : 2 );\n            s.erase(s.find(val));\n            int mx = ( s.size() ? *(--s.end()) : 0 );\n            dp[node] = mx;\n            dp[i] = max( dp[i], dp[node] + ( node%2 ? 1 : 2 ) );\n            rerooting(i,node);\n            dp[i] = prev;\n            dp[node] = prevnode;\n            s.insert(val);\n        }\n    }\n\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        dp.resize(n);\n        adj.resize(n);\n        ans.resize(n);\n        for( auto i : edges ){\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        dfs(0,-1);\n        rerooting(0,-1);\n        return ans;\n    }\n};",
    "submit_ts": "1722697714",
    "subm_id": "1343156267"
}