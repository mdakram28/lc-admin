{
    "username": "Navodayan",
    "submission": "class Solution {\npublic:\n    void dfs(int node, int par,int cnt, vector<int>&height, vector<vector<int>>&g){\n        height[node] = cnt;\n        for(auto child : g[node]){\n            if(child != par){\n                dfs(child,node,cnt+1,height,g);\n            }\n        }\n    }\n\n    int findDiameter(vector<vector<int>>&g){\n        int n = g.size();\n        vector<int>height(n,0);\n        dfs(0,-1,0,height,g);\n        int mx = 0;\n        int node = -1;\n        for(int i=0;i<n;i++){\n            if(mx<height[i]){\n                mx = height[i];\n                node = i;\n            }\n        }\n        height = vector<int>(n,0);\n        dfs(node,-1,0,height,g);\n        int ans = 0;\n        for(int i=0;i<n;i++){\n            ans = max(ans, height[i]);\n        }\n        return ans;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edge1, vector<vector<int>>& edge2) {\n        int n = edge1.size()+1;\n        int m = edge2.size()+1;\n        vector<vector<int>>g1(n),g2(m);\n        for(int i=0;i<edge1.size();i++){\n            int a = edge1[i][0];\n            int b = edge1[i][1];\n            g1[a].push_back(b);\n            g1[b].push_back(a);\n        }\n        for(int i=0;i<edge2.size();i++){\n            int a = edge2[i][0];\n            int b = edge2[i][1];\n            g2[a].push_back(b);\n            g2[b].push_back(a);\n        }\n        int ans1 = 0, ans2 = 0;\n        if(n > 1){\n            ans1 = findDiameter(g1);\n        }\n        if(m > 1){\n            ans2 = findDiameter(g2);\n        }\n        return max({ans1,ans2,((ans1+1)/2)+((ans2+1)/2)+1});\n    }\n};",
    "submit_ts": "1719718081",
    "subm_id": "1304408280"
}