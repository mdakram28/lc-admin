{
    "username": "Swarnarup",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<vector<int>> difference;\n        vector<int> temp;\n        for(int i = 0; i<n; i++){\n            int diff = target[i] - nums[i];\n            // cout<<diff<<endl;\n            if(i != 0){\n                if(diff < 0 && target[i-1] - nums[i-1] >= 0){\n                    difference.push_back(temp);\n                    temp = vector<int>();\n                    // temp.push_back(-diff);\n                }\n                else if(diff >= 0 && target[i-1] - nums[i-1] < 0){\n                    difference.push_back(temp);\n                    temp = vector<int>();\n                    // temp.push_back(diff);\n                }\n                // else{\n                // }\n            }\n            if(diff < 0) diff = -diff;\n            temp.push_back(diff);\n        }\n        if(temp.size() != 0)difference.push_back(temp);\n\n        long long ans = 0;\n\n        for(auto& subArr:difference){\n            // for(int x:subArr)cout<<x<<\" \";\n            // cout<<endl;\n            long long temp = subArr[0];\n            for(int i = 1; i<subArr.size(); i++){\n                if(subArr[i] > subArr[i-1]) temp += subArr[i]-subArr[i-1];\n            }\n            ans += temp;\n        }\n\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721533391",
    "subm_id": "1328007936"
}