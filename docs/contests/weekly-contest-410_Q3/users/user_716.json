{
    "username": "codeWithDarshan123",
    "submission": "class Solution {\n    \n    long mod = (long)(1e9)+7;\n    \n    public int countOfPairs(int[] nums) {\n        \n        long dp[][][] = new long[nums.length+1][53][53];\n        \n        for(long row[][] : dp){\n            \n            for(long col[] : row){\n                \n                Arrays.fill(col , -1);\n            }\n        }\n        \n        return (int)(solve(0 , nums , nums.length, -1 , 51 , dp)%mod);\n    }\n    \n    public long  solve(int i , int nums[] , int n , int prev1 , int prev2 , long dp[][][]){\n        \n        \n        if(i >= n){\n            \n            return 1;\n        }\n        int x = prev1;\n        \n        if(x ==-1){\n           x = 52;\n        }\n        \n        if(dp[i][x][prev2] != -1){\n            \n            return dp[i][x][prev2];\n        }\n        \n        \n        long  ans = 0;\n        \n        for(int j = 0; j<= nums[i]; j++){\n            \n            \n            int a = j;\n            int b = nums[i]-j;\n            \n            if(a >= prev1 && b <= prev2){\n                \n                ans = (ans%mod + solve(i+1 , nums , n , a , b , dp)%mod);\n            }\n            \n            \n        }\n        \n        \n        return dp[i][x][prev2] =  ans%mod;\n        \n    }\n}",
    "submit_ts": "1723344650",
    "subm_id": "1351539090"
}