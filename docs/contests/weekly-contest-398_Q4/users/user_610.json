{
    "username": "Hogwartsss",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        ans = 0\n        @cache\n        def dfs(k, jump, flag):\n            # print(k, jump, flag)\n            if k < 0: return 0\n            res = 0\n            if k == 1 and jump <= 0: \n                res += 1\n            if flag != 1:\n                res += dfs(k+1, jump, 1)\n            if jump == -1:\n                n = k.bit_length()\n                for i in range(n):\n                    # print(k, i)\n                    res += dfs(k - (1 << i), i, 2)\n            elif jump:\n                res += dfs(k - (1 << (jump-1)), jump-1, 2)\n            return res\n        return dfs(k, -1, 2)\n    \n    \n# class Solution:\n#     def waysToReachStair(self, k: int) -> int:\n#         ans = 0\n#         @cache\n#         def dfs(k, jump, flag):\n#             print(k, jump, flag)\n#             # nonlocal ans\n#             if k < 0: return 0\n#             if k == 1 and jump <= 0: \n#                 ans += 1\n#             if flag != 1:\n#                 dfs(k+1, jump, 1)\n#             if jump == -1:\n#                 n = k.bit_length()\n#                 for i in range(n):\n#                     print(k, i)\n#                     dfs(k - (1 << i), i, 2)\n#             elif jump:\n#                 dfs(k - (1 << (jump-1)), jump-1, 2)\n#         return dfs(k, -1, 2)\n#         return ans",
    "submit_ts": "1716089076",
    "subm_id": "1261832350"
}