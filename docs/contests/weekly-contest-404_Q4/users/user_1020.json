{
    "username": "yashrastogi543",
    "submission": "class Solution {\npublic:\n    \n    void dfs1(int vertex,int par,vector<int>&dist,vector<vector<int>>&adj){\n\tfor(auto it:adj[vertex]){\n\t\tif(it!=par){\n\t\t\tdist[it]=dist[vertex]+1;\n\t\t\tdfs1(it,vertex,dist,adj);\n\t\t    }\n\t    }\n    }\n    int find(vector<vector<int>>&adj){\n        int n=adj.size();\n        vector<int>dist(n+1,0);\n\t    vector<int>dist1(n+1,0);\n\t    vector<int>dist2(n+1,0);\n\t    dfs1(0,0,dist,adj);\n\t    int diam_a=max_element(dist.begin(),dist.end())-dist.begin();\n        // cout<<diam_a<<endl;\n\t    dfs1(diam_a,-1,dist1,adj);\n\t    int diam_b=*max_element(dist1.begin(),dist1.end());\n\t    return diam_b;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>>adj1(edges1.size()+1);\n        vector<vector<int>>adj2(edges2.size()+1);\n        for(auto edge:edges1){\n            adj1[edge[0]].push_back(edge[1]);\n            adj1[edge[1]].push_back(edge[0]);    \n        }\n        \n        for(auto edge:edges2){\n            adj2[edge[0]].push_back(edge[1]);\n            adj2[edge[1]].push_back(edge[0]);    \n        }        \n        int diam1=find(adj1);\n        int diam2=find(adj2);\n        int d1=max(diam1,diam2);\n        int d2=min(diam1,diam2);\n        \n        int ans2=0;\n        ans2=(d1+1)/2+1+(d2+1)/2;\n        ans2=max(ans2,d1);\n        return ans2;\n        \n    }\n};",
    "submit_ts": "1719719078",
    "subm_id": "1304433203"
}