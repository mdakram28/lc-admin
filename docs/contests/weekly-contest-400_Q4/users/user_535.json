{
    "username": "Needhi",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int ans = 2e9;\n        \n        int LOG = 20;\n        vector <vector <int>> tab (n, vector <int> (LOG, 0));\n        for (int bit = 0; bit < LOG; bit ++) {\n            if (bit == 0) {\n                for (int i = 0; i < n; i ++) {\n                    tab[i][bit] = nums[i];\n                }\n            }\n            else {\n                for (int i = 0; i + (1 << bit) <= n; i += 1) {\n                    tab[i][bit] = (tab[i][bit - 1] & tab[i + (1 << (bit - 1))][bit - 1]);\n                }\n            }\n        }\n        auto qry = [&] (int l, int r) -> int {\n            long long res = (1ll << 40) - 1;\n            for (int bit = LOG - 1; bit >= 0; bit --) if (l + (1 << bit) <= r + 1) {\n                res &= tab[l][bit];\n                l += (1 << bit);\n            }\n            return res;\n        };\n        \n        auto G = [&] (int i) -> void {\n            int lo = i, hi = n;\n            while (hi - lo > 1) {\n                int mid = lo + (hi - lo) / 2;\n                int nd = qry (i, mid);\n                if (nd >= k) lo = mid;\n                else hi = mid;\n            }\n            ans = min (ans, (int) abs (qry (i, lo) - k));\n        };\n        \n        auto L = [&] (int i) {\n            int lo = i, hi = n;\n            while (hi - lo > 1) {\n                int mid = lo + (hi - lo) / 2;\n                int nd = qry (i, mid);\n                if (nd <= k) hi = mid;\n                else lo = mid;\n            }\n            if (hi >= n) hi--;\n            ans = min (ans, (int) abs (k - qry (i, hi)));\n        };\n        \n        for (int i = 0; i < n; i += 1) {\n            G (i); L (i);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717298502.0
}