{
    "username": "adarsh2706",
    "submission": "class Solution {\npublic:\n    int minFlips(std::vector<std::vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        int minFlipsCount = 0;\n      \n        std::unordered_map<int, std::unordered_map<int, int>> grid_map;\n        for (int r = 0; r < rows; ++r) {\n            for (int c = 0; c < cols; ++c) {\n                grid_map[r][c] = grid[r][c];\n            }\n        }\n        \n        for (int row = 0; row < rows / 2; ++row) {\n            for (int col = 0; col < cols / 2; ++col) {\n                \n                vector<int> cornerValues = {\n                    grid_map[row][col],\n                    grid_map[rows - row - 1][col],\n                    grid_map[row][cols - col - 1],\n                    grid_map[rows - row - 1][cols - col - 1]\n                };\n                \n                int onesCount = std::accumulate(cornerValues.begin(), cornerValues.end(), 0);\n                minFlipsCount += std::min(onesCount, 4 - onesCount);\n            }\n        }\n        \n        int mismatchCount = 0;\n        int onesInMiddle = 0;\n    \n        if (rows % 2 != 0) {\n            for (int col = 0; col < cols / 2; ++col) {\n                if (grid_map[rows / 2][col] != grid_map[rows / 2][cols - col - 1]) {\n                    minFlipsCount += 1;\n                    mismatchCount += 1;\n                } else {\n                    if (grid_map[rows / 2][col] == 1) {\n                        onesInMiddle += 1;\n                    }\n                }\n            }\n        }\n      \n        if (cols % 2 != 0) {\n            for (int row = 0; row < rows / 2; ++row) {\n                if (grid_map[row][cols / 2] != grid_map[rows - row - 1][cols / 2]) {\n                    minFlipsCount += 1;\n                    mismatchCount += 1;\n                } else {\n                    if (grid_map[row][cols / 2] == 1) {\n                        onesInMiddle += 1;\n                    }\n                }\n            }\n        }\n        \n        if (rows % 2 != 0 && cols % 2 != 0 && grid_map[rows / 2][cols / 2] == 1) {\n            minFlipsCount += 1;\n        }\n        \n        if (mismatchCount == 0 && onesInMiddle % 2 != 0) {\n            minFlipsCount += 2;\n        }\n        \n        return minFlipsCount;\n    }\n};\n",
    "submit_ts": "1722700098",
    "subm_id": "1343231646"
}