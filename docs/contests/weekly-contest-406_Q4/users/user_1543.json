{
    "username": "rakeshreddy93",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCuts: List[int], verticalCuts: List[int]) -> int:\n        horizontalCuts.sort(reverse=True)\n        verticalCuts.sort(reverse=True)\n        h=0\n        v=0\n        horizontalPieces=1\n        verticalPieces=1\n        res=0\n        while h<len(horizontalCuts) and v<len(verticalCuts):\n            if horizontalCuts[h]>verticalCuts[v]:\n                res += horizontalCuts[h] * verticalPieces\n                horizontalPieces += 1\n                h += 1\n            else:\n                res += verticalCuts[v] * horizontalPieces\n                verticalPieces += 1\n                v += 1\n        # Add remaining horizontal cuts\n        while h < len(horizontalCuts):\n            res += horizontalCuts[h] * verticalPieces\n            h += 1\n        # Add remaining vertical cuts\n        while v < len(verticalCuts):\n            res += verticalCuts[v] * horizontalPieces\n            v += 1\n        \n        return res\n",
    "submit_ts": "1720926018",
    "subm_id": "1320273439"
}