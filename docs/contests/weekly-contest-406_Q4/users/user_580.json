{
    "username": "virajchandra51",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long res = 0;\n \n        sort(horizontalCut.begin(), horizontalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n    \n        sort(verticalCut.begin(), verticalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n    \n        long long hzntl = 1, vert = 1;\n    \n        int i = 0, j = 0;\n        while (i < m-1 && j < n-1)\n        {\n            if (horizontalCut[i] > verticalCut[j])\n            {\n                res += horizontalCut[i] * vert;\n                hzntl++;\n                i++;\n            }\n            else\n            {\n                res += verticalCut[j] * hzntl;\n                vert++;\n                j++;\n            }\n        }\n    \n        long long total = 0;\n        while (i < m-1)\n            total += horizontalCut[i++];\n        res += total * vert;\n    \n        total = 0;\n        while (j < n-1)\n            total += verticalCut[j++];\n        res += total * hzntl;\n    \n        return res;\n    }\n};",
    "submit_ts": "1720924956",
    "subm_id": "1320237431"
}