{
    "username": "1605Adhi",
    "submission": "from collections import defaultdict\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:    \n        n = len(nums)\n        change_count = 0 \n        d = defaultdict(int)\n        for i in range(n // 2):\n            a, b = nums[i], nums[n - i - 1]\n            d[abs(a - b)] += 1\n        d=dict(sorted(d.items(), key=lambda i:i[1],reverse=True))\n        res=2*len(nums)\n        for diff,count in d.items():\n            nc=0\n            if(res<=(len(nums)//2-count)):\n                return res\n            for i in range(n // 2):\n                a, b = nums[i], nums[n - i - 1]\n                if(abs(a-b)!=diff):\n                    if(max(a,b)-0<diff and k-min(a,b)<diff):\n                        nc+=2\n                    else:\n                        nc+=1\n            res=min(res,nc)\n        return res",
    "submit_ts": "1721488215",
    "subm_id": "1327415208"
}