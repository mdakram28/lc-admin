{
    "username": "cpp20",
    "submission": "class NumArray:\n    def __init__(self, nums: List[int]):\n        self.n = len(nums)\n        self.start = 0\n        k = 1\n        while k < self.n:\n            self.start += k\n            k <<= 1\n        self.arr = ([0]*self.start) + nums\n        for pos in range(self.start, self.start+self.n):\n            v = self.arr[pos]\n            while pos > 0:\n                pos = (pos-1) >> 1\n                self.arr[pos] += v\n\n    def update(self, index: int, val: int) -> None:\n        #print('update',index,val)\n        index += self.start\n        \n        delta = val - self.arr[index]\n        if delta == 0:\n            return\n        self.arr[index] = val\n        while index > 0:\n            index = (index-1) >> 1\n            self.arr[index] += delta\n\n    def sumRange(self, left: int, right: int) -> int:\n        #print('query',left,right)\n        if left == right:\n            return self.arr[left+self.start]\n\n        left += self.start\n        right += self.start\n        \n        lv, rv = self.arr[left], self.arr[right]\n        while True:\n            lp = (left-1) >> 1\n            rp = (right-1) >> 1\n            if lp == rp:\n                return lv + rv\n            \n            if left % 2 == 1:\n                lv += self.arr[left+1]\n            if right % 2 == 0:\n                rv += self.arr[right-1]\n            left, right = lp, rp\n\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        na = NumArray([0]*n)\n        for i in range(1,n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                na.update(i,1)\n        \n        def update(x):\n            if x > 0 and x < n-1:\n                if nums[x] > nums[x-1] and nums[x] > nums[x+1]:\n                    na.update(x,1)\n                else:\n                    na.update(x,0)\n        \n        res = []\n        for op,a,b in queries:\n            #print('op',op,a,b)\n            if op == 1:\n                if a > b-2:\n                    res.append(0)\n                else:\n                    res.append(na.sumRange(a+1,b-1))\n            else:\n                nums[a] = b\n                update(a-1)\n                update(a)\n                update(a+1)\n        return res",
    "submit_ts": 1718507431.0
}