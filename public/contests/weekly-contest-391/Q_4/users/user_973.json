{
    "username": "zhenliang153",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        const int n = points.size();\n        array<vector<int>, 4> ans;\n        array<multiset<int>, 4> ams;\n        for (int s = 0; s < 4; ++s) {\n            ans[s].reserve(n);\n            auto& ns = ans[s];\n            auto& ms = ams[s];\n            for (int i = 0; i < n; ++i) {\n                int tmp = 0;\n                for (int j = 0; j < 2; ++j) {\n                    tmp += (s & (1 << j)) ? points[i][j] : -points[i][j];\n                }\n                ns.push_back(tmp);\n                ms.insert(tmp);\n            }\n        }\n        int ret = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            int t = 0;\n            for (int s = 0; s < 4; ++s) {\n                auto& ns = ans[s];\n                auto& ms = ams[s];\n                int x = ns[i];\n                ms.erase(ms.find(x));\n                t = max(t, *ms.rbegin() - *ms.begin());\n                ms.insert(x);\n            }\n            ret = min(ret, t);\n        }\n        return ret;\n    }\n};"
}