{
    "username": "ash-0003",
    "submission": "class Solution {\npublic:\n    #define vl vector<int>\n#define vvl vector<vl>\n#define pb push_back\n#define ff first\n#define ss second\n#define pl pair<int, int>\n#define vpl vector<pl>\n#define fo(i, j, k) for(int i=j; i<k; i++)\n#define rfo(i, j, k) for(int i=j; i>=k; i--)\n#define all(x) x.begin(), x.end()\n#define srt(x) sort(all(x))\n#define srtg(x) sort(all(x), greater<int>())\n#define rev(x) reverse(all(x))\n#define lb(x, a) lower_bound(all(x), a)\n#define ub(x, a) upper_bound(all(x), a)\n#define lcm(a, b) ((a*b)/__gcd(a, b))\n#define no cout<<\"NO\"<<endl;\n#define yes cout<<\"YES\"<<endl;\n#define nor cout<<\"NO\"<<endl;return;\n#define yesr cout<<\"YES\"<<endl;return;\n#define ll long long\nint mod = 1e9+7;\n \nint power(int a, int b){\n    if(b==0){\n        return 1;\n    }\n    int val = power(a, b/2)%mod;\n    int val1 = (val * val)%mod;\n    \n    if(b%2){\n        return (a * val1)%mod;\n    }\n    return val1;\n}\n \nint inv(int a, int b){\n    return power(a, b-2);\n}\n \nvoid codeit(){\n    int n, k; cin >> n >> k;\n    vector<vector<int>> v(n, vector<int>(n));\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            cin >> v[i][j];\n        }\n    }\n \n    int cnt=0;\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            if(v[i][j] != v[n-i-1][n-j-1]){\n                cnt++;\n            }\n        }\n    }\n    cnt = cnt/2;\n    if(cnt > k){\n        nor;\n    }\n    if(n%2){\n        yesr;\n    }\n    if((k-cnt)%2 == 0){\n        yesr;\n    }\n    nor;\n}\n    int seg[1000001], n; \n    vector<int>nums;\n    void build(int idx, int l, int r) {\n        // cout << l << \" \" << r << endl;\n        if(l == r){\n            if(l == 0 || l == n-1){\n                seg[idx] = 0;\n                return;\n            }\n            seg[idx] = (nums[l] > nums[l+1] && nums[l] > nums[l-1]);\n            // cout << seg[idx] << \" \" << l << endl;\n            return;\n        }\n        int mid = l + (r - l)/2;\n        build(2*idx+1, l, mid);\n        build(2*idx+2, mid+1, r);\n        seg[idx] = seg[2*idx+1]+seg[2*idx+2];\n    }\n\n    void update(int idx, int l, int r, int index, int val){\n        if(l>index || r<index){\n            return;\n        }\n        if(l == r && l == index){\n            seg[idx] = 0;\n            if(l != 0 && l != n-1 && val > nums[l+1] && val > nums[l-1]){\n                seg[idx] = 1;\n            }\n            nums[index] = val;\n            return;\n        }\n        int mid = l + (r - l)/2;\n        update(2*idx+1, l, mid, index, val);\n        update(2*idx+2, mid+1, r, index, val);\n        seg[idx] = seg[2*idx+1]+seg[2*idx+2];\n    }\n\n    int query(int idx, int lo, int hi, int l, int r){\n        if(l>hi || lo>r){\n            return 0;\n        }\n        if(l<=lo && r>=hi){\n            return seg[idx];\n        }\n        int mid = lo + (hi - lo)/2;\n        int a = query(2*idx+1, lo, mid, l, r);\n        int b = query(2*idx+2, mid+1, hi, l, r);\n        return a + b;\n    }\n    vector<int> countOfPeaks(vector<int>& num, vector<vector<int>>& q) {\n        vector<int> res;\n        \n        nums = num;\n        n = nums.size();\n        // cout << n << endl;\n        build(0, 0, n-1);\n        // cout << endl;\n        \n        // cout << \"1\" << endl;\n        for(int i=0; i<q.size(); i++){\n            if(q[i][0] == 2){\n                int index = q[i][1];\n                int val = q[i][2];\n                if(nums[index] == val){\n                    continue;\n                }\n                // cout << i << endl;\n                update(0, 0, n-1, index, val);\n                if(index-1 > 0){\n                    update(0, 0, n-1, index-1, nums[index-1]);\n                }\n                if(index+1 < n-1){\n                    update(0, 0, n-1, index+1, nums[index+1]);\n                }\n            }\n            else{\n                res.push_back(query(0, 0, n-1, q[i][1]+1, q[i][2]-1));\n            }\n        }\n        return res;\n        \n    }\n};",
    "submit_ts": 1718508739.0
}