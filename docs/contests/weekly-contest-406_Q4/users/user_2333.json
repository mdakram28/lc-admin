{
    "username": "revolution14",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long cost = 0;\n        \n        priority_queue<int, vector<int>> hc, vc;\n\n        int currh = 1, currv = 1;\n\n        for(auto i : horizontalCut)\n            hc.push(i);\n        \n        for(auto i : verticalCut)\n            vc.push(i);\n        \n        while(!hc.empty() && !vc.empty()){\n            if(hc.top() > vc.top()){\n                cost+=hc.top()*currh;\n                hc.pop();\n                currv++;\n            }\n            else{\n                cost+=vc.top()*currv;\n                vc.pop();\n                currh++;\n            }\n        }\n\n        while(!hc.empty()){\n            cost+=hc.top()*currh;\n            hc.pop();\n        }\n\n        while(!vc.empty()){\n            cost+=vc.top()*currv;\n            vc.pop();\n        }\n\n        return cost;\n\n\n    }\n};",
    "submit_ts": "1720926462",
    "subm_id": "1320287010"
}