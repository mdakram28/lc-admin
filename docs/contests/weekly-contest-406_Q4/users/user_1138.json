{
    "username": "balani491",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h = 1;\n        int v = 1;\n        long long ans = 0;\n\n        priority_queue<pair<int, char>> pq;\n\n        for(auto i : horizontalCut) {\n            pq.push({i, 'h'});\n        }\n\n        for(auto i : verticalCut) {\n            pq.push({i, 'v'});\n        }\n\n        while(!pq.empty()) {\n            auto t = pq.top();\n            pq.pop();\n            char type = t.second;\n            int cost = t.first;\n            if(type == 'h') {\n                ans += static_cast<long long>(v) * cost;\n                h += 1;\n            } else {\n                ans += static_cast<long long>(h) * cost;\n                v += 1;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720925783",
    "subm_id": "1320266050"
}