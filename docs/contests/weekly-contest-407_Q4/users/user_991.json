{
    "username": "qlj-u",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        @cache\n        def dfs(i):\n            if i < 0:\n                return 0\n            if i == 0:\n                return abs(nums[0] - target[0])\n            if nums[i] - target[i] == 0:\n                return dfs(i - 1)\n            else:\n                if (nums[i] - target[i]) * (nums[i - 1] - target[i - 1]) > 0:\n                    if abs(nums[i] - target[i]) <= abs(nums[i - 1] - target[i - 1]):\n                        return dfs(i - 1)\n                    else:\n                        return dfs(i - 1) + abs(nums[i] - target[i]) - abs(nums[i - 1] - target[i - 1])\n                else:\n                    return dfs(i - 1) + abs(nums[i] - target[i])\n        return dfs(n - 1)",
    "submit_ts": "1721531909",
    "subm_id": "548389294"
}