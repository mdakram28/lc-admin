{
    "username": "harikay67",
    "submission": "from typing import List\n\nclass Solution:\n\n    def maximumLength(self, nums: List[int], k: int) -> int:\n\n        size = len(nums)\n\n        lengths = [[1] * (k + 1) for _ in range(size)]\n\n        max_length = 1\n\n        max_lengths = [-1] * (k + 1)\n\n        num_to_lengths_map = [{} for _ in range(k + 1)]\n\n        \n\n        for i in range(size):\n\n            for j in range(k + 1):\n\n                for l in range(j):\n\n                    lengths[i][j] = max(lengths[i][j], 1 + max_lengths[l])\n\n                \n\n                if nums[i] in num_to_lengths_map[j]:\n\n                    lengths[i][j] = max(lengths[i][j], 1 + num_to_lengths_map[j][nums[i]])\n\n                \n\n                max_length = max(max_length, lengths[i][j])\n\n            \n\n            for j in range(k + 1):\n\n                max_lengths[j] = max(max_lengths[j], lengths[i][j])\n\n                num_to_lengths_map[j][nums[i]] = max(num_to_lengths_map[j].get(nums[i], 0), lengths[i][j])\n\n        \n\n        return max_length\n\n",
    "submit_ts": 1717862141.0
}