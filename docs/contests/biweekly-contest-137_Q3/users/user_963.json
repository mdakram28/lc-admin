{
    "username": "Chirag_Birla",
    "submission": "class Solution {\npublic:\n #define ll long long\n    long long maximumValueSum(vector<vector<int>>& v) {\n         ll n = v.size();\n    ll m = v[0].size();\n    vector<vector<ll>>ok(n);\n    for (int i = 0; i < n; i++) {\n        multiset<pair<ll, ll>> m1;\n        for (int k = 0; k < v[i].size(); k++) {\n            m1.insert({v[i][k], k});\n        }\n        ll k = 0;\n        for (auto it = m1.rbegin();k<3; it++, k++) {\n            ok[i].push_back(it->second);\n        }\n    }\n\n    ll maxi = LLONG_MIN;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n                for(auto c1:ok[i]){\n                    for (ll c2 : ok[j]) {\n                        if (c2 == c1) continue;\n                        for (ll c3 : ok[k]) {\n                            if (c3 == c1 || c3 == c2) continue;\n                            ll sum = v[i][c1] + v[j][c2] ;\n                            maxi = max(maxi, sum+ v[k][c3]);\n                        }\n                    }\n                  }\n                }\n            }\n    }\n     return maxi;\n\n    }\n};",
    "submit_ts": "1723909606",
    "subm_id": "1359198965"
}