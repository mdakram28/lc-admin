{
    "username": "Yashank Singh",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        max_sum = float('-inf')\n        best_values = [[float('-inf')] * 3 for _ in range(m)]\n        best_columns = [[-1] * 3 for _ in range(m)]\n\n        for i in range(m):\n            col_values = [(board[i][j], j) for j in range(n)]\n            col_values.sort(reverse=True)\n            for k in range(min(3, n)):\n                best_values[i][k] = col_values[k][0]\n                best_columns[i][k] = col_values[k][1]\n\n        for r1 in range(m):\n            for r2 in range(r1 + 1, m):\n                for r3 in range(r2 + 1, m):\n                    for i in range(3):\n                        for j in range(3):\n                            if best_columns[r2][j] == best_columns[r1][i]:\n                                continue\n                            for k in range(3):\n                                if best_columns[r3][k] == best_columns[r1][i] or best_columns[r3][k] == best_columns[r2][j]:\n                                    continue\n                                current_sum = best_values[r1][i] + best_values[r2][j] + best_values[r3][k]\n                                max_sum = max(max_sum, current_sum)\n\n        return max_sum",
    "submit_ts": "1723910322",
    "subm_id": "1359225840"
}