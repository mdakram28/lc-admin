{
    "username": "saurabh600",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int, int>> sum(n), diff(n);\n        \n        for (int i=0; i<n; i++) {\n            sum[i] = {points[i][0] + points[i][1], i};\n            diff[i] = {points[i][0] - points[i][1], i};\n        }\n        \n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        \n        int ans = INT_MAX;\n        \n        if (sum[n-1].first - sum[0].first > diff[n-1].first - diff[0].first) {\n            // remove n-1\n            int ind = sum[n-1].second;\n            int i = 0, j=n-2, k=0, l=n-1;\n            if (diff[0].second == ind) k++;\n            if (diff[n-1].second == ind) l--;\n            \n            ans = min(ans, max(sum[j].first - sum[i].first, diff[l].first - diff[k].first));\n            \n            // remove 0\n            ind = sum[0].second;\n            i = 1, j=n-1, k=0, l=n-1;\n            if (diff[0].second == ind) k++;\n            if (diff[n-1].second == ind) l--;\n            ans = min(ans, max(sum[j].first - sum[i].first, diff[l].first - diff[k].first));\n        } else {\n            // remove n-1\n            int ind = diff[n-1].second;\n            int i = 0, j=n-1, k=0, l=n-2;\n            if (sum[0].second == ind) i++;\n            if (sum[n-1].second == ind) j--;\n            \n            ans = min(ans, max(sum[j].first - sum[i].first, diff[l].first - diff[k].first));\n            \n            // remove 0\n            ind = diff[0].second;\n            i = 0, j=n-1, k=1, l=n-1;\n            if (sum[0].second == ind) i++;\n            if (sum[n-1].second == ind) j--;\n            ans = min(ans, max(sum[j].first - sum[i].first, diff[l].first - diff[k].first)); \n        }\n        \n        return ans;\n    }\n};"
}