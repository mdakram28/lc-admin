{
    "username": "Aditya_Bansal_2002",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n                          vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        long long hPieces = 1;\n        long long vPieces = 1;\n        int hIndex = 0, vIndex = 0;\n\n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n\n                totalCost += horizontalCut[hIndex] * vPieces;\n                hPieces++;\n                hIndex++;\n            } else {\n                totalCost += verticalCut[vIndex] * hPieces;\n                vPieces++;\n                vIndex++;\n            }\n        }\n        while (hIndex < horizontalCut.size()) {\n            totalCost += horizontalCut[hIndex] * vPieces;\n            hIndex++;\n        }\n\n        while (vIndex < verticalCut.size()) {\n            totalCost += verticalCut[vIndex] * hPieces;\n            vIndex++;\n        }\n\n        return totalCost;\n    \n}\n}\n;",
    "submit_ts": "1720925824",
    "subm_id": "1320267385"
}