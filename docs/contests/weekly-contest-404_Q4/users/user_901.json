{
    "username": "k_sat",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int size1 = edges1.size() + 1;\n        int size2 = edges2.size() + 1;\n        vector<vector<int>> adjList1(size1);\n        vector<vector<int>> adjList2(size2);\n\n        // Construct adjacency lists for both graphs\n        for (const auto& edge : edges1) {\n            adjList1[edge[0]].push_back(edge[1]);\n            adjList1[edge[1]].push_back(edge[0]);\n        }\n\n        for (const auto& edge : edges2) {\n            adjList2[edge[0]].push_back(edge[1]);\n            adjList2[edge[1]].push_back(edge[0]);\n        }\n\n        // Define the DFS function to find the furthest node\n        auto dfs = [&](const vector<vector<int>>& graph, int start, int& furthestNode) {\n            int n = graph.size();\n            vector<int> dist(n, -1);\n\n            function<void(int, int)> dfsVisit = [&](int node, int d) {\n                dist[node] = d;\n                if (d > dist[furthestNode]) {\n                    furthestNode = node;\n                }\n                for (int neighbor : graph[node]) {\n                    if (dist[neighbor] == -1) {\n                        dfsVisit(neighbor, d + 1);\n                    }\n                }\n            };\n\n            furthestNode = start;\n            dfsVisit(start, 0);\n            return dist[furthestNode];\n        };\n\n        // Compute diameters and minimum diameter after merge\n        int node1 = 0;\n        dfs(adjList1, 0, node1);\n        int diameter1 = dfs(adjList1, node1, node1);\n\n        int node2 = 0;\n        dfs(adjList2, 0, node2);\n        int diameter2 = dfs(adjList2, node2, node2);\n\n        int minDiameter = max(diameter1, diameter2);\n        int half1 = (diameter1 + 1) / 2;\n        int half2 = (diameter2 + 1) / 2;\n        \n        \n        \n        \n        \n        \n        \n        \n        minDiameter = max(minDiameter, half1 + half2 + 1);\n\n        return minDiameter;\n    }\n};\n",
    "submit_ts": "1719719978",
    "subm_id": "1304455787"
}