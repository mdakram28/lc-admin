{
    "username": "Zobayer_Abedin",
    "submission": "class Solution {\npublic:\nint calc(vector<vector<int>>& grid, int r, int c, int r1, int c1) {\n    int n = grid.size(), m = grid[0].size();\n    vector<int> rw(n), cl(m);\n    for(int i = r; i <= r1; i++) {\n        for(int j = c; j <= c1; j++) {\n            rw[i] += grid[i][j];\n            cl[j] += grid[i][j];\n        }\n    }\n    while(r < r1 and rw[r] == 0) r++;\n    while(c < c1 and cl[c] == 0) c++;\n    while(r1 >= r and rw[r1] == 0) r1--;\n    while(c1 >= c and cl[c1] == 0) c1--;\n    return (r1 - r + 1) * (c1 - c + 1);\n}\n\nint solve(vector<vector<int>>& g) {\n    int n = g.size(), res = 1e9;\n    for(int j = 0; j + 1 < n; j++) {\n        int tmp = calc(g, 0, 0, n - 1, j);\n        // dbg(tmp, 0, 0, n - 1, j);\n        for(int i = 0; i + 1 < n; i++) {\n            int tmp1 = tmp + calc(g, 0, j + 1, i, n - 1) + calc(g, i + 1, j + 1, n - 1, n - 1);\n            res = min(res, tmp1);\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            int tmp = calc(g, 0, 0, i, n - 1) + calc(g, i + 1, 0, j, n - 1) + calc(g, j + 1, 0, n - 1, n - 1);\n            res = min(res, tmp);\n        }\n    }\n    return res;\n}\nint minimumSum(vector<vector<int>>& grid) {\n    int n = max(grid.size(), grid[0].size());\n    vector<vector<int> > g(n, vector<int> (n));\n    for(int i = 0; i < grid.size(); i++) {\n        for(int j = 0; j < grid[0].size(); j++) {\n            g[i][j] = grid[i][j];\n        }\n    }\n    int res = 1e9;\n    for(int i = 0; i < 4; i++) {\n        vector<vector<int> > g1 = g;\n        // if(i == 1) {\n            res = min(res, solve(g));\n            // dbg(g);\n        // }\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < n; j++) {\n                g1[j][n - i - 1] = g[i][j];\n            }\n        }\n        g = g1;\n    }\n    return res;\n}\n};",
    "submit_ts": "1719114083",
    "subm_id": "1297339452"
}