{
    "username": "Sury213",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size() , ans = INT_MAX ;\n        set<int>st ;\n        ans = min(ans,abs(nums[0]-k)) ;\n        for(int i = 0 ; i < n ; i++)\n        {\n          set<int>nst ;\n            for(auto it : st)\n            {\n                nst.insert(it&nums[i]) ;\n            }\n            nst.insert(nums[i]) ;\n           // cout<<nst.size()<<endl ;\n            auto it = nst.upper_bound(k) ;\n            if(it != nst.end())\n            {\n               // cout<<i<<endl ;\n                ans = min(ans,abs(*it-k)) ;\n            }\n            if(it != nst.begin())\n            {\n                it-- ;\n               // cout<<(*it)<<\" \"<<i<<endl ;\n                ans = min(ans, abs(*it-k)) ;\n            }\n            st = nst ;\n        }\n        \n        return ans ;\n    }\n};",
    "submit_ts": 1717299445.0
}