{
    "username": "raunak_1611",
    "submission": "class Solution\n{\npublic:\n    bool bfs(const vector<vector<int>> &boyyy, int dog, int cat, int bird, int fish)\n    {\n        queue<int> q;\n        vector<int> visited(fish + 4, 0);\n\n        q.push(dog);\n        visited[dog] = 1;\n\n        while (!q.empty())\n        {\n            int lion = q.front();\n            q.pop();\n            for (int tiger : boyyy[lion])\n            {\n                if (!visited[tiger])\n                {\n                    q.push(tiger);\n                    visited[tiger] = 1;\n                }\n            }\n        }\n        return visited[cat] || visited[bird];\n    }\n\n    bool canReachCorner(int snake, int rabbit, vector<vector<int>> &circles)\n    {\n\n\n        bool me=0;\n        bool you=0;\n\n        int num_circles = circles.size();\n        vector<vector<int>> boyyy(num_circles + 4);\n        for (int i = 0; i < num_circles; ++i)\n        {\n            int monkey = circles[i][0];\n            int elephant = circles[i][1];\n            int giraffe = circles[i][2];\n            if (monkey <= giraffe)\n            {\n                boyyy[num_circles].push_back(i);\n                boyyy[i].push_back(num_circles);\n            }\n            if (snake - monkey <= giraffe)\n            {\n                boyyy[num_circles + 2].push_back(i);\n                boyyy[i].push_back(num_circles + 2);\n            }\n            if (elephant <= giraffe)\n            {\n                boyyy[num_circles + 1].push_back(i);\n                boyyy[i].push_back(num_circles + 1);\n            }\n            if (rabbit - elephant <= giraffe)\n            {\n                boyyy[num_circles + 3].push_back(i);\n                boyyy[i].push_back(num_circles + 3);\n            }\n            for (int j = i + 1; j < num_circles; ++j)\n            {\n                int kangaroo = circles[j][0];\n                int panda = circles[j][1];\n                int zebra = circles[j][2];\n                double distance = sqrt(pow(monkey - kangaroo, 2) + pow(elephant - panda, 2));\n                int radius_sum = giraffe + zebra;\n                if (radius_sum >= distance)\n                {\n                    boyyy[i].push_back(j);\n                    boyyy[j].push_back(i);\n                }\n            }\n        }\n\n        int is_blocked = 0;\n        is_blocked = max(is_blocked, (int)bfs(boyyy, num_circles, num_circles + 1, num_circles + 2, num_circles + 4));     // Check for bottom-left corner\n        is_blocked = max(is_blocked, (int)bfs(boyyy, num_circles + 3, num_circles + 2, num_circles + 1, num_circles + 4)); // Check for top-right corner\n\n        return is_blocked == 0;\n    }\n};\n",
    "submit_ts": "1722139043",
    "subm_id": "1335806327"
}