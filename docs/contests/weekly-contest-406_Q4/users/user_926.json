{
    "username": "thakurgaurav8650",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        \n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            cuts.emplace_back(horizontalCut[i], 'H');\n        }\n        for (int j = 0; j < verticalCut.size(); ++j) {\n            cuts.emplace_back(verticalCut[j], 'V');\n        }\n        \n        \n        sort(cuts.rbegin(), cuts.rend());\n        \n        int horizontalPieces = 1, verticalPieces = 1;\n        long long totalCost = 0;\n        \n        \n        for (const auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += static_cast<long long>(cut.first) * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += static_cast<long long>(cut.first) * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925642",
    "subm_id": "1320261459"
}