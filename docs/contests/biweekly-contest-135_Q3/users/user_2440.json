{
    "username": "38bny7UdCP",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diff_to_max_map;\n        vector<int> max_values;\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int start_val = nums[i];\n            int end_val = nums[n - i - 1];\n            int difference = abs(start_val - end_val);\n            int max_val = max({start_val, end_val, k - start_val, k - end_val});\n            \n            diff_to_max_map[difference].push_back(max_val);\n            max_values.push_back(max_val);\n        }\n        \n        int min_changes = n;\n        sort(max_values.begin(), max_values.end());\n       \n        for (auto& entry : diff_to_max_map) {\n            int difference = entry.first;\n            int changes = lower_bound(max_values.begin(), max_values.end(), difference) - max_values.begin();\n            changes = changes * 2 + (n / 2 - changes);\n            \n            for (auto& max_val : entry.second) {\n                if (max_val < difference) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n            \n            min_changes = min(min_changes, changes);\n        }\n        \n        return min_changes;\n    }\n};\n",
    "submit_ts": "1721488883",
    "subm_id": "1327436140"
}