{
    "username": "zephyrr",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        res = 0\n        arr = [nums[i]-target[i] for i in range(len(nums))]\n\n        def helper(arrr):\n            #print(arrr)\n            if arrr == []:\n                return 0\n            if min(arrr) < 0:\n                for i in range(len(arrr)):\n                    arrr[i] *= -1\n            if min(arrr) == max(arrr):\n                return min(arrr)\n            \n            res = min(arrr)\n            mn = min(arrr)\n            ind = []\n            for i,n in enumerate(arrr):\n                if n == mn:\n                    ind.append(i)\n                else:\n                    arrr[i] -= mn\n            if ind[0] != 0:\n                res += helper(arrr[:ind[0]])\n            if ind[-1] != len(arrr)-1:\n                res += helper(arrr[ind[-1]+1:])\n            for i in range(len(ind)-1):\n                if ind[i] + 1 == ind[i+1]:\n                    continue\n                res += helper(arrr[ind[i]+1:ind[i+1]])\n            #print(res)\n            return res\n        \n        tmp = []\n        for n in arr:\n            if not tmp and n != 0:\n                tmp.append(n)\n            elif n == 0:\n                res += helper(tmp)\n                tmp = []\n            elif n * tmp[-1] > 0:\n                tmp.append(n)\n            elif n * tmp[-1] < 0:\n                res += helper(tmp)\n                tmp = [n]\n            #print(tmp)\n        res += helper(tmp)\n        return res\n\n        ",
    "submit_ts": "1721531978",
    "subm_id": "1327974629"
}