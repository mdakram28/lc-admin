{
    "username": "lu-chen-chen",
    "submission": "class Solution {\n    public long maximumScore(int[][] grid) {\n        int n = grid.length;\n        long[][] sums = new long[n][n + 1];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                sums[i][j + 1] = sums[i][j] + grid[j][i];\n            }\n        }\n        long[][][] dp = new long[n + 1][n + 1][n + 1];\n        for (int i = 2; i <= n; i++) {\n            for (int k = 0; k <= n; k++) {\n                long m = Arrays.stream(dp[i - 1][k]).max().orElse(0);\n                long max = 0;\n                long max2 = 0;\n                for (int j = 0; j <= n; j++) {\n                    dp[i][j][k] = m;\n                    if (k < j) {\n                        long s = sums[i - 2][j] - sums[i - 2][k];\n                        max = Math.max(max, dp[i - 1][k][j] - s);\n                        dp[i][j][k] = Math.max(dp[i][j][k], max + sums[i - 2][j] - sums[i - 2][k]);\n                        dp[i][j][k] = Math.max(dp[i][j][k], max2 + sums[i - 2][j] - sums[i - 2][k]);\n                    } else {\n                        max2 = Math.max(max2, dp[i - 1][k][j]);\n                        dp[i][j][k] += sums[i - 1][k] - sums[i - 1][j];\n                    }\n                }\n            }\n        }\n        long ans = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n; j++) {\n                ans = Math.max(ans, dp[n][i][j]);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721490992",
    "subm_id": "548325088"
}