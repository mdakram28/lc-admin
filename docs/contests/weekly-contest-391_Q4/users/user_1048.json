{
    "username": "user6821J",
    "submission": "class Solution {\npublic:\n    \n    vector<int> findM(vector<vector<int>>& points){\n        int n = points.size();\n        \n        int maxSum, minSum, maxDiff, minDiff;\n        \n        minSum = maxSum = points[0][0] + points[0][1];\n        minDiff = maxDiff = points[0][0] - points[0][1];\n        int id1, id2, id3, id4;\n        id1 = id2 = id3 = id4 = 0;\n        \n        for(int i = 1; i < n; i++){\n            int curSum = points[i][0] + points[i][1]; // Calculate current sum correctly\n            int curDiff = points[i][0] - points[i][1]; // Calculate current difference correctly\n            \n            if(curSum > maxSum){\n                maxSum = curSum;\n                id1 = i;\n            }\n            if(curSum < minSum){\n                minSum = curSum;\n                id2 = i;\n            }\n            if(curDiff < minDiff){\n                minDiff = curDiff;\n                id3 = i;\n            }\n            if(curDiff > maxDiff){\n                maxDiff = curDiff;\n                id4 = i;\n            }\n        }\n        \n        vector<int> temp;\n        if (maxSum - minSum > maxDiff - minDiff) {\n            temp.push_back(maxSum - minSum);\n            temp.push_back(id1);\n            temp.push_back(id2);\n            return temp;\n        } else {\n            temp.push_back(maxDiff - minDiff);\n            temp.push_back(id3);\n            temp.push_back(id4);\n            return temp;\n        }\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<vector<int>> temp = points;\n        vector<int> ans1 = findM(temp);\n        \n        // Make a copy of temp before erasing\n        vector<vector<int>> temp_copy = temp;\n        temp_copy.erase(temp_copy.begin() + ans1[1]);\n        \n        // Find the second answer after erasing\n        vector<int> ans2 = findM(temp_copy);\n        \n        // Restore temp to its original state\n        temp = points;\n        \n        // Erase using ans2[1]\n        temp.erase(temp.begin() + ans1[2]);\n        \n        // Find the third answer after erasing\n        vector<int> ans3 = findM(temp);\n        \n        return min(ans2[0], ans3[0]);\n    }\n};\n"
}