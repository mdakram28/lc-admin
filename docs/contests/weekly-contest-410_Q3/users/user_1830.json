{
    "username": "wlydavid",
    "submission": "class Solution {\n    int mod = 1000000007;\n    public int countOfPairs(int[] nums) {\n\n        // for i - th\n        // arr1[i-1] = low\n        // arr2[i-1] = nums[i-1] - low;\n        // arr1[i] could be Integer.max(low, nums[i] - arr2[i - 1])) \n        int n = nums.length;\n        int[][] count = new int[n][51]; // 2 - idx = value of arr1[i] \n        for(int v = 0; v <= nums[0]; v++) {\n            count[0][v] = 1;\n        }\n        for(int i = 0; i < nums.length - 1; i++) {\n            for(int v = 0; v <= nums[i]; v++) {\n                // System.out.println(\"i:\" + i + \", v: \" + v + \", count: \" + count[i][v]);\n                for(int k = Integer.max(v, nums[i + 1] - nums[i] + v); k <= nums[i + 1]; k++) {\n                // nums[i]  , nums[i+1]\n                // nums[i] - v, nums[i + 1] - k\n                // v,        k \n                // constraints k >= v, nums[i + 1] - k <= nums[i] - v;\n                //     k >= nums[i+1] - nums[i] + v; \n                    count[i + 1][k] = (count[i + 1][k] + count[i][v]) % mod;\n\n                }\n\n            }\n        }\n        int ans = 0;\n        for(int v = 0; v <= nums[n-1]; v++) {\n            // System.out.println(\"i:\" + (n - 1) + \", v: \" + v + \", count: \" + count[n - 1][v]);\n            ans= (ans + count[n - 1][v]) % mod;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723346325",
    "subm_id": "1351575093"
}