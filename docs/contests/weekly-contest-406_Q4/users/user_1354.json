{
    "username": "jiang-nanlong",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    \n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'h'});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'v'});\n        }\n\n        // Step 2: \u6309\u5f00\u9500\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort(cuts.rbegin(), cuts.rend());\n\n        // Step 3: \u521d\u59cb\u5316\u86cb\u7cd5\u5757\u6570\u91cf\n        ll horizontalPieces = 1;\n        ll verticalPieces = 1;\n        ll totalCost = 0;\n\n        // Step 4: \u904d\u5386\u5207\u5272\u7ebf\uff0c\u4f18\u5148\u5207\u5f00\u9500\u6700\u5927\u7684\u7ebf\n        for (auto& cut : cuts) {\n            int cost = cut.first;\n            char direction = cut.second;\n            if (direction == 'h') {\n                totalCost += cost * verticalPieces;\n                horizontalPieces += 1;\n            } else { // direction == 'v'\n                totalCost += cost * horizontalPieces;\n                verticalPieces += 1;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926205",
    "subm_id": "546444737"
}