{
    "username": "Jay Kumar Thakur",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = -1e15;\n        int n = board.size();\n        int m = board[0].size();\n        std::set<std::array<long long, 2>> A[n];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                A[i].insert({board[i][j], j});\n                if (A[i].size() > 3) {\n                    A[i].erase(A[i].begin());\n                }\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            std::vector<std::array<long long, 2>> ii(A[i].begin(), A[i].end());\n            for (int j = i + 1; j < n; j++) {\n                std::vector<std::array<long long, 2>> jj(A[j].begin(), A[j].end());\n                for (int k = j + 1; k < n; k++) {\n                    std::vector<std::array<long long, 2>> kk(A[k].begin(), A[k].end());\n\n                    for (auto it : ii) {\n                        for (auto jt : jj) {\n                            for (auto kt : kk) {\n                                if (it[1] != jt[1] && it[1] != kt[1] && jt[1] != kt[1]) {\n                                    ans = std::max(ans, it[0] + jt[0] + kt[0]);\n                                } \n                            }\n                        }\n                    }\n                }\n            } \n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723906847",
    "subm_id": "1359075862"
}