{
    "username": "jacobj2",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diffs = [target[i]-nums[i] for i in range(len(nums))]\n        lp = 0\n        res = 0\n        while lp<len(diffs):\n            rp = lp + 1\n            while diffs[lp]<0 and rp<len(nums) and diffs[rp]<0:\n                rp+=1\n            while diffs[lp]>0 and rp<len(nums) and diffs[rp]>0:\n                rp+=1\n            ans = 0\n            prev = 0\n            if diffs[lp]<0:\n                for x in range(lp,rp):\n                    if diffs[x]<prev:\n                        ans+=prev-diffs[x]\n                    prev = diffs[x]\n            elif diffs[lp]>0:\n                for x in range(lp,rp):\n                    if diffs[x]>prev:\n                        res+=diffs[x]-prev\n                    prev=diffs[x]\n            res+=ans\n            lp = rp\n        return res\n                    ",
    "submit_ts": "1721531456",
    "subm_id": "1327961422"
}