{
    "username": "liu686",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hcount = 1\n        vcount = 1\n        h = sorted([(val, i) for i, val in enumerate(horizontalCut)], reverse=True)\n        v = sorted([(val, i) for i, val in enumerate(verticalCut)], reverse=True)\n        hidx = 0\n        vidx = 0\n        res = 0\n        while hidx < m - 1 or vidx < n - 1:\n            if hidx < m - 1 and vidx < n - 1:\n                if h[hidx][0] > v[vidx][0]:\n                    res += hcount * h[hidx][0]\n                    hidx += 1\n                    vcount += 1\n                else:\n                    res += vcount * v[vidx][0]\n                    vidx += 1\n                    hcount += 1\n            elif hidx < m - 1:\n                res += hcount * h[hidx][0]\n                hidx += 1\n            else:\n                res += vcount * v[vidx][0]\n                vidx += 1\n        return res",
    "submit_ts": "1720925442",
    "subm_id": "1320254895"
}