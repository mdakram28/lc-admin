{
    "username": "Prateek_0007",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> maxValues;\n        \n        int size = nums.size();\n        for (int i = 0; i < size / 2; ++i) {\n            int num1 = nums[i], num2 = nums[size - i - 1];\n            int difference = abs(num1 - num2);\n            int maxValue = max({num1, num2, k - num1, k - num2});\n            \n            diffMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n        \n        int result = size;\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (const auto& entry : diffMap) {\n            int difference = entry.first;\n            int position = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            int tempResult = position * 2 + (size / 2 - position);\n            \n            for (const auto& maxValue : entry.second) {\n                if (maxValue < difference) {\n                    tempResult -= 2;\n                } else {\n                    tempResult -= 1;\n                }\n            }\n            \n            result = min(result, tempResult);\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1721489073",
    "subm_id": "1327442022"
}