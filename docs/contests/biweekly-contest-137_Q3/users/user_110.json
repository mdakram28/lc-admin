{
    "username": "mickey",
    "submission": "// {{{\n#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing vi = vector<int>;\nusing pii = pair<int, int>;\n#define sz(x) (int)((x).size())\n#define all(x) (x).begin(), (x).end()\n#define clr(a, b) memset(a, b, sizeof(a))\n#define debug(x...)\n#define debug_arr(x...)\n#ifdef LOCAL\n#include \"prettyprint.hpp\"\n#endif\n// }}}\n\nclass Solution\n{\npublic:\n    long long maximumValueSum(vector<vector<int>>& board)\n    {\n        int n = board.size();\n        int m = board[0].size();\n\n        vector<vector<pii>> vec;\n        vec.resize(n);\n\n        for (int i = 0; i < n; i++)\n        {\n            multiset<pii> st;\n            for (int j = 0; j < m; j++)\n            {\n                int v = board[i][j];\n                if (st.size() < 3) st.insert({v, j});\n                else\n                {\n                    if (v > st.begin()->first)\n                    {\n                        st.erase(st.begin());\n                        st.insert({v, j});\n                    }\n                }\n            }\n            for (auto pr : st)\n            {\n                vec[i].push_back(pr);\n            }\n        }\n\n        LL ret = LLONG_MIN;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < n; ++j)\n            {\n                if (i == j) continue;\n                for (int k = 0; k < n; ++k)\n                {\n                    if (k == i) continue;\n                    if (k == j) continue;\n\n                    for (int a = 0; a < 3; a++)\n                        for (int b = 0; b < 3; b++)\n                            for (int c = 0; c < 3; c++)\n                            {\n                                if (vec[i][a].second == vec[j][b].second) continue;\n                                if (vec[i][a].second == vec[k][c].second) continue;\n                                if (vec[j][b].second == vec[k][c].second) continue;\n                                LL cur = vec[i][a].first;\n                                cur += vec[j][b].first;\n                                cur += vec[k][c].first;\n                                ret = max(cur, ret);\n                            }\n                }\n            }\n        }\n        return ret;\n    }\n};\n\n",
    "submit_ts": "1723906506",
    "subm_id": "556320084"
}