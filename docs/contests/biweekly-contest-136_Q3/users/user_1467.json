{
    "username": "abhishek_k11",
    "submission": "#define GRID_MAX_SIZE 100\n#define ONE_FLIP 1\n#define ZERO_FLIP 0\ntypedef std::vector<std::vector<int>> Matrix;\n\nclass Solution {\npublic:\n    int minFlips(Matrix& grid) {\n        const int totalRows = grid.size();\n        const int totalCols = grid[0].size();\n        int totalFlipsRequired = 0;\n\n        auto calculateSubGridFlips = [&](int row, int col) {\n            int values[4] = {\n                grid[row][col],\n                grid[totalRows - row - 1][col],\n                grid[row][totalCols - col - 1],\n                grid[totalRows - row - 1][totalCols - col - 1]\n            };\n            int onesCount = std::accumulate(values, values + 4, 0);\n            return std::min(onesCount, 4 - onesCount);\n        };\n\n        for (int r = 0; r < totalRows / 2; ++r) {\n            for (int c = 0; c < totalCols / 2; ++c) {\n                totalFlipsRequired += calculateSubGridFlips(r, c);\n            }\n        }\n\n        int middleRowFlips = 0;\n        int middleColumnFlips = 0;\n\n        if (totalRows % 2 != 0) {\n            int middleRowIndex = totalRows / 2;\n            for (int c = 0; c < totalCols / 2; ++c) {\n                if (grid[middleRowIndex][c] != grid[middleRowIndex][totalCols - c - 1]) {\n                    ++totalFlipsRequired;\n                    ++middleRowFlips;\n                } else if (grid[middleRowIndex][c] == ONE_FLIP) {\n                    ++middleColumnFlips;\n                }\n            }\n        }\n\n        if (totalCols % 2 != 0) {\n            int middleColIndex = totalCols / 2;\n            for (int r = 0; r < totalRows / 2; ++r) {\n                if (grid[r][middleColIndex] != grid[totalRows - r - 1][middleColIndex]) {\n                    ++totalFlipsRequired;\n                    ++middleRowFlips;\n                } else if (grid[r][middleColIndex] == ONE_FLIP) {\n                    ++middleColumnFlips;\n                }\n            }\n        }\n\n        if (totalRows % 2 != 0 && totalCols % 2 != 0 && grid[totalRows / 2][totalCols / 2] == ONE_FLIP) {\n            ++totalFlipsRequired;\n        }\n\n        if (middleRowFlips == 0 && middleColumnFlips % 2 != 0) {\n            totalFlipsRequired += 2;\n        }\n\n        return totalFlipsRequired;\n    }\n};\n",
    "submit_ts": "1722699646",
    "subm_id": "1343217983"
}