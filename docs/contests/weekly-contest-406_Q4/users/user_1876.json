{
    "username": "Avaneesh06",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int ver=0;\n        int hor=0;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        int i = horizontalCut.size()-1;\n        int j = verticalCut.size()-1;\n        long long cost = 0;\n        \n        while(i>=0&&j>=0)\n        {\n            if(horizontalCut[i]>verticalCut[j])\n            {\n                hor++;\n                cost+=horizontalCut[i]*(ver+1);\n                i--;\n            }\n            else if(horizontalCut[i]==verticalCut[j])\n            {\n                if(horizontalCut[i]*(ver+1)>verticalCut[j]*(hor+1))\n                {\n                    hor++;\n                    cost+=horizontalCut[i]*(ver+1);\n                    i--;\n                }\n                else\n                {\n                    ver++;\n                    cost+=verticalCut[j]*(hor+1);\n                    j--;\n                }\n            }\n            else\n            {\n                ver++;\n                cost+=verticalCut[j]*(hor+1);\n                j--;\n            }\n        }\n        while(i>=0)\n        {\n            hor++;\n            cost+=horizontalCut[i]*(ver+1);\n            i--;\n        }\n        while(j>=0)\n        {\n            ver++;\n            cost+=verticalCut[j]*(hor+1);\n            j--;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720925907",
    "subm_id": "1320270005"
}