{
    "username": "omersarthak11",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        long long i = horizontalCut.size()-1,j = verticalCut.size()-1;\n        long long currh = 1,currv = 1;\n        while(i>=0 && j>=0){\n            if(horizontalCut[i]>verticalCut[j]){\n                ans += (horizontalCut[i]*currv);\n                i--;\n                currh++;\n            }else{\n                ans += (verticalCut[j]*currh);\n                j--;\n                currv++;\n            }\n        }\n        while(i>=0){\n            ans += (horizontalCut[i]*currv);\n                i--;\n                currh++;\n        }\n        while(j>=0){\n             ans += (verticalCut[j]*currh);\n                j--;\n                currv++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925786",
    "subm_id": "1320266153"
}