{
    "username": "klaus-mikaelson",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int rows = grid.length;\n        int cols = grid[0].length;\n        int flips = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                flips += 1;\n            }\n        }\n\n        int[] count = new int[3];\n\n        if (rows % 2 == 1) {\n            int left = 0;\n            int right = cols - 1;\n            while (left < right) {\n                int sum = grid[rows / 2][left] + grid[rows / 2][right];\n                count[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0;\n            int bottom = rows - 1;\n            while (top < bottom) {\n                int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n                count[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (count[2] % 2 == 1) {\n            if (count[1] > 0) {\n                flips += count[1];\n            } else {\n                flips += 2;\n            }\n        } else {\n            flips += count[1];\n        }\n\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int topLeft = grid[i][j];\n                int bottomLeft = grid[rows - 1 - i][j];\n                int topRight = grid[i][cols - 1 - j];\n                int bottomRight = grid[rows - 1 - i][cols - 1 - j];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    flips += Math.min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return flips;\n    }\n}\n",
    "submit_ts": "1722699666",
    "subm_id": "1343218625"
}