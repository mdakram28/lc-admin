{
    "username": "arpan218_8",
    "submission": " \nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n         map<int, std::vector<int>> differences;\n        vector<int> maxValues;\n        int n = nums.size();\n\n        for (int i = 0; i < n / 2; ++i) {\n            int first = nums[i];\n            int second = nums[n - i - 1];\n            int diff =  abs(first - second);\n            int maxVal =  max({first, second, k - first, k - second});\n            differences[diff].push_back(maxVal);\n            maxValues.push_back(maxVal);\n        }\n\n        int minChanges = n;\n         sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& pair : differences) {\n            int diff = pair.first;\n            int count =  lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            int totalChanges = count * 2 + (n / 2 - count);\n\n            for (const auto& val : pair.second) {\n                if (val < diff) {\n                    totalChanges -= 2;\n                } else {\n                    totalChanges -= 1;\n                }\n            }\n\n            minChanges =  min(minChanges, totalChanges);\n        }\n\n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721489356",
    "subm_id": "1327450874"
}