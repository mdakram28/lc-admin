{
    "username": "CoderAbhi27",
    "submission": "#define int long long\nint MAXK=20; // For N<= 1e6\nvector<vector<int>> st;\nint n;\nint MX=(1LL<<31)-1;\n\n//query function\nint func(int a, int b){\n    return a&b;\n}\n\n//pre-computation\nvoid build(vector<int32_t> &vec){\n    int N = vec.size();\n    n=N;\n    st.assign(N, vector<int>(MAXK, MX));\n    for(int i=0; i<N; i++){\n        st[i][0] = vec[i];\n    }\n    for(int k=1; k <= MAXK ; k++){\n        for(int i=0; i+(1LL<<k) <= N; i++){\n            st[i][k] = func(st[i][k-1] , st[ i + (1LL<<(k-1)) ][k-1]);\n        }\n    }\n}\n\nint query(int L, int R){\n    int ans=st[L][0];\n    for(int k= MAXK; k>=0; k--){\n        if ( (1LL<<k) <= R-L+1 ){\n            ans = func(ans, st[L][k]);\n            L += 1LL<<k;\n        }\n    }\n    return ans;\n}\n\n//max R such that [L,R] >=val\nint query1(int L, int val){\n    int i=L;\n    int res=MX;\n    for(int j=MAXK;j>=0;j--){\n        if(i+(1LL<<j)<=n && func(res,st[i][j])>=val){\n            res=func(res, st[i][j]);\n            i=i+(1LL<<j);\n        }\n    }\n    return i-1;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int32_t>& nums, int32_t k) {\n        build(nums);\n        // cout<<query(0,1);\n        int ans=2e9;\n        for(int i=0;i<nums.size();i++){\n            int r=query1(i,k);\n            int v1= (r==i-1) ? query(i,i) : query(i,r);\n            int v2= (r+1==nums.size()) ? query(i,r-1) : query(i,r+1);\n            // if(i==0) cout<<r<<' '<<v2;\n            ans=min({ans, abs(v1-k) , abs(v2-k)});\n        }\n        return ans;\n    }\n    #undef int\n};",
    "submit_ts": 1717298502.0
}