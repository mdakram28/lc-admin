{
    "username": "Om Mittal",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long int out = -1e15;\n        vector<pair<int, pair<int, int>>> v;\n        int m = board.size();\n        int n = board[0].size();\n        for(int i = 0; i < m; i++)\n        {\n            vector<pair<int, pair<int, int>>> temp;\n            for(int j = 0; j < n; j++)\n                temp.push_back({board[i][j], {i, j}});\n            sort(temp.begin(), temp.end());\n            v.push_back(temp[n - 1]);\n            v.push_back(temp[n - 2]);\n            v.push_back(temp[n - 3]);\n        }\n        sort(v.begin(), v.end());\n        reverse(v.begin(), v.end());\n        for(auto i:v)\n        {\n            int r1 = i.second.first;\n            int c1 = i.second.second;\n            for(auto j:v)\n            {\n                int r2 = j.second.first;\n                int c2 = j.second.second;\n                if(r1 != r2 && c1 != c2)\n                {\n                    for(auto k:v)\n                    {\n                        int r3 = k.second.first;\n                        int c3 = k.second.second;\n                        if(r1 != r3 && r2 != r3 && c1 != c3 && c2 != c3)\n                        {\n                            long long int tt = i.first*1LL + j.first + k.first*1LL;\n                            out = max(out, tt);\n                        }\n                    }\n                }\n            }\n        }\n        return out;\n    }\n};",
    "submit_ts": "1723907820",
    "subm_id": "1359125743"
}