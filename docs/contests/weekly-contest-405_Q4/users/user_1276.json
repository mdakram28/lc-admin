{
    "username": "anirudh1444",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n\n        top = {}\n\n        for index, word in enumerate(words):\n\n            curr = top \n\n            for letter in word:\n                curr[letter] = curr.get(letter, {})\n                curr = curr[letter]\n            \n            curr[\"Cost\"] = min(costs[index], curr.get(\"Cost\", float('inf')))\n            \n        \n        dp = [float('inf')] * (len(target) + 1)\n        dp[0] = 0\n\n        for i in range(len(dp)):\n\n            if dp[i] == float('inf'):\n                continue\n\n            curr = top \n            for mover in range(i, len(target)):\n                \n                if target[mover] not in curr.keys():\n                    break \n                \n                curr = curr[target[mover]]\n                if \"Cost\" in curr.keys():\n                    dp[mover + 1] = min(dp[mover + 1], dp[i] + curr[\"Cost\"])\n        \n        if dp[-1] == float('inf'):\n            return -1\n        \n        return dp[-1]\n",
    "submit_ts": "1720323523",
    "subm_id": "1312377652"
}