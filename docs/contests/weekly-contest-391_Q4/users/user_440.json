{
    "username": "WaxOnWaxOff",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        pts = list(tuple(it) for it in points)\n        def md(pts):\n            maxsum = minsum = pts[0][0] + pts[0][1]\n            maxspt = pts[0]\n            minspt = pts[0]\n            maxdif = mindif = pts[0][0] - pts[0][1]\n            maxdpt = pts[0]\n            mindpt = pts[0]\n            for pt in pts:\n                som = pt[0] + pt[1]\n                dif = pt[0] - pt[1]\n                if som > maxsum:\n                    maxsum = som\n                    maxspt = pt\n                if som < minsum:\n                    minsum = som\n                    minspt = pt\n                if dif > maxdif:\n                    maxdif = dif\n                    maxdpt = pt\n                if dif < mindif:\n                    mindif = dif\n                    mindpt = pt\n            cand1 = maxsum - minsum\n            cand2 = maxdif - mindif\n            if cand1 > cand2:\n                return (cand1, maxspt, minspt)\n            return (cand2, maxdpt, mindpt)\n        cand0, pt1, pt2 = md(pts)\n        pts.remove(pt1)\n        cand1, _, _ = md(pts)\n        pts.append(pt1)\n        pts.remove(pt2)\n        cand2, _, _ = md(pts)\n        pts.append(pt2)\n        return min(cand0, cand1, cand2)"
}