{
    "username": "DavidYQY",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        diff = [0] * n\n        s = [0] * n\n        \n        for i, (x, y) in enumerate(points):\n            s[i] = (x + y, i)\n            diff[i] = (x - y, i)\n        \n        s.sort()\n        diff.sort()\n        \n        idx1, idx2 = s[-1][1], s[0][1]\n        idx3, idx4 = diff[-1][1], diff[0][1]\n        \n        if s[-1][0] - s[0][0] > diff[-1][0] - diff[0][0]:\n            res1 = max(s[-2][0] - s[0][0], diff[-1-(idx1 == idx3)][0] - diff[0 + (idx1 == idx4)][0])\n            res2 = max(s[-1][0] - s[1][0], diff[-1-(idx2 == idx3)][0] - diff[0 + (idx2 == idx4)][0])\n            return min(res1, res2)\n        else:\n            res1 = max(diff[-2][0] - diff[0][0], s[-1-(idx3 == idx1)][0] - s[0 + (idx3 == idx2)][0])\n            res2 = max(diff[-1][0] - diff[1][0], s[-1-(idx4 == idx1)][0] - s[0 + (idx4 == idx2)][0])\n            return min(res1, res2)\n            "
}