{
    "username": "Sambhav-Jain",
    "submission": "struct TrieNode{\nprivate:\n    TrieNode* links[26];\n    int cost=1e9;\npublic:\n    bool containsKey(char ch)\n    {\n        return links[ch-'a']!=NULL;\n    }\n\n    void setKey(char ch,TrieNode* node)\n    {\n        links[ch-'a']=node;\n    }\n\n    TrieNode* getKey(char ch)\n    {\n        return links[ch-'a'];\n    }\n\n    int getCost()\n    {\n        return cost;\n    }\n\n    void setCost(int cost)\n    {\n        this->cost=min(this->cost,cost);\n    }\n};\n\nclass Trie{\npublic:\n    Trie()\n    {\n        root=new TrieNode();\n    }\n\n    void insertString(const string &s,const int &cost)\n    {\n        TrieNode* node=root;\n        for(auto &ch:s)\n        {\n            if(!node->containsKey(ch))\n            {\n                node->setKey(ch,new TrieNode());\n            }\n            node=node->getKey(ch);\n        }\n        node->setCost(cost);\n    }\n\n    int searchString(const string&s,const int &start,const int&end,int index,vector<int>&dp)\n    {\n        TrieNode *node=root;\n        for(int i=start;i<=end;i++)\n        {\n            char ch=s[i];\n            if(!node->containsKey(ch))\n            {\n                return node->getCost();\n            }\n            node=node->getKey(ch);\n        }\n        return node->getCost();\n    }\n\n    int helper(const string &s)\n    {\n        int n=s.size();\n        vector<long long>dp(n+1,1e9);\n        dp[0]=0;\n        for(int i=0;i<n;i++)\n        {\n            TrieNode* node=root;\n            for(int j=i;j<n;j++)\n            {\n                if(!node->containsKey(s[j]))\n                {\n                    break;\n                }\n                node=node->getKey(s[j]);\n                dp[j+1]=min(dp[j+1],dp[i]+node->getCost());\n            }\n        }\n        int ans=dp[n];\n        return (ans<1e9)?ans:-1;\n    }\n\nprivate:\n    TrieNode* root;\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n    {\n        Trie obj;\n        for(int i=0;i<words.size();i++)\n        {\n            obj.insertString(words[i],costs[i]);\n        }\n        return obj.helper(target);\n    }\n};",
    "submit_ts": "1720321948",
    "subm_id": "1312336570"
}