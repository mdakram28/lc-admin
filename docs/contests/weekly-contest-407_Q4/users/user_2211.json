{
    "username": "sachin17115285",
    "submission": "class Solution {\npublic:\nlong long min_operations(vector<int>& A)  \n{  \n    if (A.size() == 0)  \n        return 0;  \n        int n=A.size();\n        for(int i=0;i<n;i++){\n            if(A[i]<0){\n                A[i]*=-1;\n            }\n        }\n    long long ans = A[0];  \n  \n    for (int i = 1; i < A.size(); i++) {   \n        ans += max(A[i] - A[i - 1], 0);  \n    }  \n    return ans;  \n} \n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans=0;\n        int n=nums.size();\n        \n       \n        for(int i=0;i<n;i++){\n            nums[i]-=target[i];\n        }\n       vector<int>neg;\n       vector<int>pos;\n       for(int i=0;i<n;i++){\n            if(nums[i]==0){\n                ans+=min_operations(neg);\n                ans+=min_operations(pos);\n                neg.clear();\n                pos.clear();\n            }\n            else if(nums[i]>0 ){\n                ans+=min_operations(neg);\n                neg.clear();\n                pos.push_back(nums[i]);\n            }\n            else if(nums[i]<0){\n                ans+=min_operations(pos);\n                pos.clear();\n                neg.push_back(nums[i]);\n            }\n       }\n       ans+=min_operations(neg);\n                ans+=min_operations(pos);\n        return ans;\n    }\n};",
    "submit_ts": "1721532970",
    "subm_id": "1327998315"
}