{
    "username": "xiao-shu-lin-f",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n\n        vector<pair<int, int>> p[2];\n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0], y = points[i][1];\n            p[0].emplace_back(x + y, i);\n            p[1].emplace_back(-x + y, i);\n        }\n        sort(p[0].begin(), p[0].end());\n        sort(p[1].begin(), p[1].end());\n\n        auto cal = [&](int ind) -> int {\n            vector<int> arr[2];\n            for (int i = 0; i < n; ++i) {\n                if (i == ind) continue;\n                int x = points[i][0], y = points[i][1];\n                arr[0].push_back(x + y);\n                arr[1].push_back(-x + y);\n            }\n            sort(arr[0].begin(), arr[0].end());\n            sort(arr[1].begin(), arr[1].end());\n            return max(arr[0][n - 2] - arr[0][0], arr[1][n - 2] - arr[1][0]);\n        };\n\n        int ans = INT_MAX;\n        ans = min(ans, cal(p[0][0].second));\n        ans = min(ans, cal(p[0][n - 1].second));\n        ans = min(ans, cal(p[1][0].second));\n        ans = min(ans, cal(p[1][n - 1].second));\n        return ans;\n    }\n};"
}