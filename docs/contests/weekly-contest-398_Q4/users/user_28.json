{
    "username": "coleworld223",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        map <array <int, 3>, int> dp;\n        function <int (int, int, int)> func = [&] (int pos, int j, int can) -> int {\n            if (pos - k > 1) {\n                return 0;\n            }\n            if (dp.count ({pos, j, can})) return dp[{pos, j, can}];\n            int res = 0;\n            if (pos == k) res += 1;\n            if (can && pos != 0) {\n                res += func (pos - 1, j, 0);\n            }\n            res += func (pos + (1 << j), j + 1, 1);\n            return dp[{pos, j, can}] = res;\n        };\n        \n        int ans = func (1, 0, 1);\n        return ans;\n    }\n};",
    "submit_ts": 1716086542.0
}