{
    "username": "nisritha35",
    "submission": "class SegTree{\n\npublic:\n\nvector<int>seg;\n\nSegTree(int n, vector<int>&a){\n    \n    seg.resize(4*n);\n    build(a,0,0,n-1);\n\n}\n\nvoid build(vector<int>&a, int idx, int low, int high){\n    \n    if(low==high){\n        seg[idx] = a[low];\n        return;\n    }\n    \n    int mid = (low+high)/2;\n    \n    build(a, idx*2 + 1, low, mid);\n    build(a, idx*2 + 2, mid + 1, high);\n    \n    seg[idx] = seg[idx*2 + 1] & seg[idx*2 + 2];\n    \n}\n\nint query(int idx, int low, int high, int l, int r){\n    \n    if(l <= low && r >= high)return seg[idx];\n    if(l > high || r < low)return INT_MAX;\n    \n    int mid = (low+high)/2;\n    int left = query(idx*2 + 1, low, mid, l, r);\n    int right = query(idx*2 + 2, mid + 1, high, l, r);\n    \n    return (left & right);\n}\n\n};\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n\n        int n = nums.size();\n        long long ans = 0;\n        SegTree seg(n, nums);\n\n        for(int i = 0; i<n; i++){\n\n             int l = i, h = n-1;\n             int lft = l;\n\n             // first point where and equals k\n\n             while(l<=h){\n                  \n                  int mid = (l + h) >> 1;\n                  if(seg.query(0,0,n-1,i,mid) >= k){\n                    l = mid + 1; lft = mid;\n                  }\n                  else{\n                    h = mid - 1;\n                  }\n\n             }\n\n             l = i, h = n-1;\n             int ryt = l;\n\n             // last point where and equals k\n\n            while(l <= h){\n                  \n                  int mid = (l + h) >> 1;\n                  if(seg.query(0,0,n-1,i,mid) <= k){\n                    h = mid - 1; ryt = mid;\n                  }\n                  else{\n                    l = mid + 1;\n                  }\n\n            }\n\n            if((seg.query(0,0,n-1,i,lft)!=k) || (seg.query(0,0,n-1,i,ryt)!=k)){\n                continue;\n            }\n\n            //cout << ryt <<\" \"<<lft<<\"\\n\";\n            ans +=( lft - ryt + 1);\n\n            //cout << ans <<\"\\n\";\n\n        }\n\n        return ans;\n        \n    }\n};",
    "submit_ts": "1720281569",
    "subm_id": "1311830249"
}