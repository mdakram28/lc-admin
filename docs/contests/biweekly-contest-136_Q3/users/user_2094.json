{
    "username": "alcorzb",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        set<pair<int, int>> seen;\n        vector<pair<int, int>> f;\n        int n = grid.size();\n        int m = grid[0].size();\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                pair<int, int> p = make_pair(i, j);\n                if (seen.find(p) != seen.end())\n                  continue;\n                set<pair<int, int>> cur_set;\n                cur_set.insert(make_pair(i, j));\n                cur_set.insert(make_pair(i, m - 1 - j));\n                cur_set.insert(make_pair(n - 1 - i, j));\n                cur_set.insert(make_pair(n - 1 - i, m - 1 - j));\n                int z = 0, o = 0;\n                for (auto& p : cur_set) {\n                    seen.insert(p);\n                    if (grid[p.first][p.second] == 0) {\n                      z++;\n                    } else {\n                      o++;\n                    }\n                }\n                f.push_back(make_pair(z, o));\n            }\n        }\n        int cnt = 0;\n        int t = 0;\n        bool split = false;\n\n        for (int i = 0; i < f.size(); i++) {\n          int sz = f[i].first + f[i].second;\n          if (sz == 4) {\n            cnt += min(4 - f[i].first, 4 - f[i].second);\n          }\n          if (sz == 1) {\n            cnt += f[i].second;\n          }\n          if (sz == 2) {\n            if (f[i].first == 1) {\n                cnt++;\n                split = true;\n            }\n            if (f[i].second == 2) {\n              t++;\n            }\n          }\n        }\n        if (!split && ((t % 2) == 1)) {\n            cnt += 2;\n        }\n        return cnt;\n     }\n};",
    "submit_ts": "1722699618",
    "subm_id": "1343217138"
}