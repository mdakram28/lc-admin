{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    int s[400005], n, a[100005];\n    void up(int x){\n        s[x] = s[x * 2] + s[x * 2 + 1];\n        return ;\n    }\n    void build(int x, int l, int r){\n        if(l == r){\n            if(l > 1 && l < n && a[l] > a[l + 1] && a[l] > a[l - 1]) s[x] = 1;\n            else s[x] = 0;\n            return ;\n        }\n        int mid = l + r >> 1;\n        build(x * 2, l, mid);\n        build(x * 2 + 1, mid + 1, r);\n        up(x);\n        return ;\n    }\n    void upd(int x, int l, int r, int y){\n        if(l == r){\n            if(l > 1 && l < n && a[l] > a[l + 1] && a[l] > a[l - 1]) s[x] = 1;\n            else s[x] = 0;\n            return ;\n        }\n        int mid = l + r >> 1;\n        if(y <= mid) upd(x * 2, l, mid, y);\n        else upd(x * 2 + 1, mid + 1, r, y);\n        up(x);\n        return ;\n    }\n    int ask(int x, int l, int r, int L, int R){\n        if(l == L && r == R) return s[x];\n        int mid = l + r >> 1;\n        if(R <= mid) return ask(x * 2, l, mid, L, R);\n        else if(L >= mid + 1) return ask(x * 2 + 1, mid + 1, r, L, R);\n        return ask(x * 2, l, mid, L, mid) + ask(x * 2 + 1, mid + 1, r, mid + 1, R);\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        n = nums.size();\n        for(int i = 1; i <= n; ++i) a[i] = nums[i - 1];\n        build(1, 1, n);\n        std::vector<int> Ans;\n        for(int i = 0; i < q.size(); ++i){\n            int type = q[i][0];\n            if(type == 1){\n                int l = q[i][1] + 1, r = q[i][2] + 1, ans = 0;\n                if(r - l + 1 <= 2) ans = 0;\n                else ans = ask(1, 1, n, l + 1, r - 1);\n                Ans.push_back(ans);\n            }\n            else {\n                int x = q[i][1] + 1, y = q[i][2];\n                a[x] = y;\n                upd(1, 1, n, x);\n                if(x > 1) upd(1, 1, n, x - 1);\n                if(x < n) upd(1, 1, n, x + 1);\n            }\n        }\n        return Ans;\n    }\n};",
    "submit_ts": "1718505676",
    "subm_id": "1289590401"
}