{
    "username": "bruce12138",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        std::vector pre(n + 1, std::vector<int>(31));\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 31; j++) {\n                pre[i][j] = pre[i - 1][j];\n                if ((nums[i - 1] & (1 << j)) > 0) {\n                    pre[i][j]++;\n                }\n            }\n        }\n\n        auto check = [&](int l, int r) -> bool {\n            int len = r - l + 1;\n            for (int i = 0; i < 31; i++) {\n                if ((k & (1 << i))) {\n                    if (pre[r][i] - pre[l - 1][i] != len)\n                        return false;\n                } else {\n                    if (pre[r][i] - pre[l - 1][i] == len)\n                        return false;\n                }\n            }\n            return true;\n        };\n\n        auto check0 = [&](int l, int r) -> bool {\n            int len = r - l + 1;\n            for (int i = 0; i < 31; i++) {\n                if ((k & (1 << i))==0) {\n                    if (pre[r][i] - pre[l - 1][i] == len)\n                        return false;\n                }\n            }\n            return true;\n        };\n\n\n        long long ans = 0;\n\n        for (int i = 1; i <= n; i++) {\n            if (k != 0 && (nums[i - 1] & k) != k)\n                continue;\n\n            int t = nums[i - 1], idx = 0;\n            if (i) {\n                int l = i, r = n;\n                while (l <= r) {\n                    int mid = (l + r) / 2;\n                    if (check0(i, mid)) {\n                        r = mid - 1;\n                        idx = mid;\n                    } else {\n                        l = mid + 1;\n                    }\n                }\n                if (idx == 0)\n                    continue;\n            } \n            // else {\n            //     int l = i, r = n;\n            //     while (l <= r) {\n            //         int mid = (l + r) / 2;\n            //         if (check1(i, mid)) {\n            //             r = mid - 1;\n            //             idx = mid;\n            //         } else {\n            //             l = mid + 1;\n            //         }\n            //     }\n            //     if (idx == 0)\n            //         continue;\n            // }\n\n            int l = idx, r = n, j = i - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (check(i, mid)) {\n                    l = mid + 1;\n                    j = mid;\n                } else {\n                    r = mid - 1;\n                }\n            }\n\n            if (j == i - 1)\n                continue;\n            ans += (j - idx + 1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720279311",
    "subm_id": "544566907"
}