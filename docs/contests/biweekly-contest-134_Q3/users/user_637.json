{
    "username": "jakao",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int ret = 0;\n        int n = colors.size();\n        int st = -1;\n        for(int i = 0; i < n; i++){\n            if(colors[i] == colors[(i+1) % n]){\n                st = i+1;\n                break;\n            }\n        }\n        if(st == -1){\n            return colors.size();\n        }\n        int ans = 0;\n        for(int i = 0; i < n; i++){\n            int j = i;\n            while(j+1 < n && colors[(st+j+1)%n] != colors[(st+j)%n]){\n                ++j;\n            }\n            ans += max((j-i+1-k+1), 0);\n            // cout << (st+j+1)%n << \"~\" <<  (st+j)%n << \" += \" << max((j-i+1-k+1), 0)<<endl;\n            i=j;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277393",
    "subm_id": "1311661619"
}