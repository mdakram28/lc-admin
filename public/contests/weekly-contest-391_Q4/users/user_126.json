{
    "username": "jacobj2",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        sums=[[points[i][0]+points[i][1],i] for i in range(len(points))]\n        differences=[[points[i][0]-points[i][1],i] for i in range(len(points))]\n        sums.sort(key=lambda x:x[0])\n        differences.sort(key=lambda x:x[0])\n        res=float('inf')\n        dp1=len(differences)-1 if differences[-1][-1]!=sums[-1][-1] else len(differences)-2\n        dp2=0 if differences[0][1]!=sums[-1][-1] else 1\n        res=min(res,max(sums[-2][0]-sums[0][0],differences[dp1][0]-differences[dp2][0]))\n        dp1=len(differences)-1 if differences[-1][-1]!=sums[0][-1] else len(differences)-2\n        dp2=0 if differences[0][1]!=sums[0][-1] else 1\n        res=min(res,max(sums[-1][0]-sums[1][0],differences[dp1][0]-differences[dp2][0]))\n        sp1=len(sums)-1 if sums[-1][-1]!=differences[-1][-1] else len(sums)-2\n        sp2=0 if sums[0][1]!=differences[-1][-1] else 1\n        res=min(res,max(sums[sp1][0]-sums[sp2][0],differences[-2][0]-differences[0][0]))\n        sp1=len(sums)-1 if sums[-1][-1]!=differences[0][-1] else len(sums)-2\n        sp2=0 if sums[0][1]!=differences[0][-1] else 1\n        res=min(res,max(sums[sp1][0]-sums[sp2][0],differences[-1][0]-differences[1][0]))\n        return res"
}