{
    "username": "Wibo",
    "submission": "#define rep(i,a,b) for (int i=(a); i<(b); ++i)\n#define sz(x) (x).size()\n\ntemplate<class T>\nstruct RMQ {\n\tvector<vector<T>> jmp;\n\tRMQ(const vector<T>& V) : jmp(1, V) {\n\t\tfor (int pw = 1, k = 1; pw * 2 <= sz(V); pw *= 2, ++k) {\n\t\t\tjmp.emplace_back(sz(V) - pw * 2 + 1);\n\t\t\trep(j,0,sz(jmp[k]))\n\t\t\t\tjmp[k][j] = (jmp[k - 1][j] & jmp[k - 1][j + pw]);\n\t\t}\n\t}\n\tT query(int a, int b) {\n\t\tassert(a < b); // or return inf if a == b\n\t\tint dep = 31 - __builtin_clz(b - a);\n\t\treturn jmp[dep][a] & jmp[dep][b - (1 << dep)];\n\t}\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        RMQ rmq(nums);\n\n        long long ans = 0;\n        for (int i=0; i<(int)nums.size(); i++) {\n            int l, r, lb = -1, rb = -1;\n\n            l = i, r = (int)nums.size() - 1;\n            while (l <= r) {\n                int mid = (l+r)/2;\n                int cur = rmq.query(i, mid+1);\n                if (cur < k) {\n                    r = mid - 1;\n                } else if (cur > k) {\n                    l = mid + 1;\n                } else {\n                    lb = mid;\n                    r = mid - 1;\n                }\n            }\n\n            l = i, r = (int)nums.size() - 1;\n            while (l <= r) {\n                int mid = (l+r)/2;\n                int cur = rmq.query(i, mid+1);\n                if (cur < k) {\n                    r = mid - 1;\n                } else if (cur > k) {\n                    l = mid + 1;\n                } else {\n                    rb = mid;\n                    l = mid + 1;\n                }\n            }\n\n            if (lb != -1) ans += rb - lb + 1;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720277485",
    "subm_id": "1311665853"
}