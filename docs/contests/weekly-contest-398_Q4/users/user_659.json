{
    "username": "wswartworth",
    "submission": "import math\nfrom scipy.special import binom\nclass Solution(object):\n    def waysToReachStair(self, k):\n        \"\"\"\n        :type k: int\n        :rtype: int\n        \"\"\"\n\n        if k==0:\n            return 2\n\n        inc = k-1\n\n        #two_pow = 1\n        #two_pow_sum = 0\n        #while two_pow_sum < n:   \n        #    two_pow *= 2\n\n        total = 0\n\n        m = math.ceil(math.log2(inc + 1) - 1) #use pows of 2 up to 2^m\n        while True:\n            max_subs = m+2\n            subs_needed = (2**(m+1) - 1) - inc\n            if subs_needed > max_subs:\n                break\n            #m+1 powers of two, subs_needed subtractions\n            #total += (subs_needed + m + 1) choose m+1\n\n            print(f\"m:{m}\")\n            print(f\"max_subs:{max_subs}\")\n            print(f\"subs_needed:{subs_needed}\")\n\n\n            #a,b = subs_needed + m + 1, m+1\n            #bin_val = binom(a,b)\n            #print(bin_val)\n            #total += bin_val\n\n            a = m+1\n            b = subs_needed\n            total += int(binom(a+1, b))\n\n            print(f\"increment: {binom(a+1, b)}\")\n            print()\n\n            m += 1\n        \n        return total\n\n\n        \n\n        ",
    "submit_ts": 1716089508.0
}