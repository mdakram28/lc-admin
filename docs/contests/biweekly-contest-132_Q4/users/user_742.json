{
    "username": "dazh5587",
    "submission": "class Solution(object):\n    def maximumLength(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        dp = [[0]*len(nums) for _ in range (k+1)]\n        for i in range (len(dp)):\n            dp[i][0] = 1\n        max1 = 1\n        mydict = {}\n        mydict[nums[0]] = 1\n        for i in range (1, len(dp[0])):\n            if nums[i] in mydict:\n                dp[0][i] = max(dp[0][i],1+mydict[nums[i]])\n                mydict[nums[i]] = dp[0][i]\n            else:\n                dp[0][i] = max(dp[0][i],1)\n                mydict[nums[i]] = dp[0][i]\n            max1 = max(max1,dp[0][i])\n        # print (dp)\n        \n        for i in range (1, len(dp)):\n            mydict = {}\n            heap = []\n            heapq.heappush(heap,(-1*dp[i-1][0],0))\n            mydict[nums[0]] = 1\n            for j in range (1, len(dp[0])):\n                if nums[j] in mydict:\n                    dp[i][j] = max(dp[i][j],1+mydict[nums[j]])\n                    mydict[nums[j]] = max(mydict[nums[j]],dp[i][j])\n                    max1 = max(max1,dp[i][j])\n                temp = []\n                while heap and nums[heap[0][1]] == nums[j]:\n                    temp.append(heapq.heappop(heap))\n                if heap:\n                    dp[i][j] = max(dp[i][j],1+dp[i-1][heap[0][1]])\n                if nums[j] not in mydict:\n                    mydict[nums[j]] = dp[i][j]\n                else:\n                    mydict[nums[j]] = max(mydict[nums[j]],dp[i][j])\n                for x in temp:\n                    heapq.heappush(heap,x)\n                heapq.heappush(heap,(-1*dp[i-1][j],j))\n                max1 = max(max1,dp[i][j])\n        #print (dp)\n        return max1\n            \n            ",
    "submit_ts": 1717862194.0
}