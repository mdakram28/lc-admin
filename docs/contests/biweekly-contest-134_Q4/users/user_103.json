{
    "username": "whymihere",
    "submission": "template<typename T>\nclass RMQ {\npublic:\n    vector<vector<T>> st;\n    function<T(T, T)> op;\n    int n, m;\n\n    RMQ(const vector<T>& a, function<T(T, T)> _op) {\n        n = (int)a.size(); m = __lg(n) + 1; // ceil(log(r - l + 1))\n        st = vector<vector<T>>(n, vector<T>(m));\n        op = _op;\n        int p = 1;\n        for(int j = 0; j < m; j++) {\n            for(int i = 0; i + p - 1 < n; i++) {\n                if(j == 0) st[i][j] = a[i];\n                else st[i][j] = op(st[i][j - 1], st[i + (p >> 1)][j - 1]);\n            }\n            p *= 2;\n        }\n    }\n\n    T query(int l, int r) {\n        int sz = __lg(r - l + 1); // floor(log(r - l + 1))\n        return op(st[l][sz], st[r + 1 - (1 << sz)][sz]);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        const int n = (int)a.size();\n        RMQ<int> rmq(a, [](int x, int y) -> int { return (x & y); });\n        \n        auto gr = [&](int i) -> int64_t {\n            int l = i - 1, r = n;\n            while (r - l > 1) {\n                int m = l + (r - l) / 2;\n                if (rmq.query(i, m) > k)\n                    l = m;\n                else \n                    r = m;\n            }\n            if (l == i - 1)\n                return 0;\n            else\n                return l - i + 1;\n        };\n        \n        auto ls = [&](int i) -> int64_t {\n            int l = i - 1, r = n;\n            while (r - l > 1) {\n                int m = l + (r - l) / 2;\n                if (rmq.query(i, m) < k) \n                    r = m;\n                else\n                    l = m;\n            }\n            if (r == n)\n                return 0;\n            else \n                return n - r;\n        };\n        \n        int64_t ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans += max((int64_t) 0, n - i - ls(i) - gr(i));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277765",
    "subm_id": "1311678952"
}