{
    "username": "d2s2",
    "submission": "class Solution {\n    ArrayList<ArrayList<Integer>> makeGraph(int [][] edge){\n        int n = edge.length+1;\n        ArrayList<ArrayList<Integer>> a= new ArrayList<>();\n        for(int i =0;i<n;i++)a.add(new ArrayList<>());\n        for(int [] e : edge){\n            a.get(e[0]).add(e[1]);\n            a.get(e[1]).add(e[0]);\n        }\n        return a;\n    }\n\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        ArrayList<ArrayList<Integer>> a1 = makeGraph(edges1);\n        ArrayList<ArrayList<Integer>> a2 = makeGraph(edges2);\n        int ans=0,res=0;\n        maxIdx = 0;max=0;\n        diameter(0,a1,-1,0);\n        max=0;\n        diameter(maxIdx,a1,-1,0);\n        res = Math.max(res,max);\n        ans+=(max/2+(max%2));\n        maxIdx=0;max=0;\n        diameter(0,a2,-1,0);\n        max=0;\n        diameter(maxIdx,a2,-1,0);\n        res = Math.max(res,max);\n        ans+=(max/2+(max%2));\n        return Math.max(ans+1,res);\n    }\n\n\n    int maxIdx =0,max=0;\n    void diameter(int u,ArrayList<ArrayList<Integer>> a,int p,int cnt){\n        boolean flag = true;\n        for(int v : a.get(u)){\n            if(v!=p){\n                diameter(v,a,u,cnt+1);\n                flag = false;\n            }\n        }\n        if(flag){\n            if(max<cnt){\n                maxIdx = u;\n                max = cnt;\n            }\n        }\n    }\n}\n",
    "submit_ts": "1719718133",
    "subm_id": "1304409585"
}