{
    "username": "praneetjain13",
    "submission": "class TrieNode {\npublic:\n    map<char, TrieNode*> children;\n    int cost;\n\n    TrieNode() : cost(1e9) {}\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    Trie() {\n        root = new TrieNode();\n    }\n\n    void insert(const string& word, int cost) {\n        TrieNode* node = root;\n        for (char ch : word) {\n            if (!node->children.count(ch)) {\n                node->children[ch] = new TrieNode();\n            }\n            node = node->children[ch];\n        }\n        node->cost = min(node->cost, cost);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n\t\tint m = words.size();\n        Trie trie;\n        for (size_t i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        vector<int> dp(n+1, 1e9);\n        dp[0] = 0;  \n\t\tstring tmp;\n\t\tbool flag=false;\n\n        for (int idx=0; idx < n; ++idx) {\n            if (dp[idx] == 1e9) continue;  \n\n            TrieNode* node = trie.root;\n\n            for (int indd=idx; indd<n; ++indd) {\n\t\t\t\tif(flag) break;\n                if (!node->children.count(target[indd])) break;\n                node = node->children[target[indd]];\n                if (node->cost != 1e9) {\n\t\t\t\t\ttmp.append(words[0]);\n                    dp[indd + 1] = min(dp[indd + 1], dp[idx] + node->cost);\n                }\n            }\n\t\t\tflag=false;\n        }\n\t\tif(dp[n]==1e9) return -1;\n        return dp[n];\n    }\n};",
    "submit_ts": "1720323613",
    "subm_id": "1312379815"
}