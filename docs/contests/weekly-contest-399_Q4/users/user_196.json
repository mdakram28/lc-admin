{
    "username": "quasicompact",
    "submission": "class Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int N = 20;\n        while((nums.size())%N != 0){nums.push_back(0);}\n        int n = nums.size(), n0 = n/N;\n        for(auto &n : nums){if(n < 0){n = 0;}}\n        long long ans = 0;\n        vector<long long> a00(n0), a01(n0), a10(n0), a11(n0), v0(n0), v1(n0);\n        for(int k=0;k<n;k+=N){\n            int sc[N][N];\n            for(int i=0;i<N;i++){\n                sc[i][i] = nums[k+i];\n                for(int j=i+1;j<N;j++){\n                    sc[i][j] = max(sc[i][j-1] , (j-2 >= i ? sc[i][j-2] : 0) + nums[k+j]);\n                }\n            }\n            a00[k/N] = sc[1][N-2];\n            a01[k/N] = sc[1][N-1];\n            a10[k/N] = sc[0][N-2];\n            a11[k/N] = sc[0][N-1];\n        }\n        v0[0] = max(a00[0],a10[0]);\n        v1[0] = max(a01[0],a11[0]);\n        for(int m=1;m<n0;m++){\n            v0[m] = max(max(v0[m-1],v1[m-1]) + a00[m] , v0[m-1] + a10[m]);\n            v1[m] = max(max(v0[m-1],v1[m-1]) + a01[m] , v0[m-1] + a11[m]);\n        }\n        //printf(\"%d %d %d %d\\n\",a00[0],a01[0],a10[0],a11[0]);\n        //printf(\"%d %d %d\\n\",v0[n0-1],v1[n0-1],n/10);\n        for(auto &v : queries){\n            int sc[N][N], k = (v[0]/N)*N;\n            nums[v[0]] = (v[1]>0 ? v[1] : 0);\n            for(int i=0;i<N;i++){\n                sc[i][i] = nums[k+i];\n                for(int j=i+1;j<N;j++){\n                    sc[i][j] = max(sc[i][j-1] , (j-2 >= i ? sc[i][j-2] : 0) + nums[k+j]);\n                }\n            }\n            a00[k/N] = sc[1][N-2];\n            a01[k/N] = sc[1][N-1];\n            a10[k/N] = sc[0][N-2];\n            a11[k/N] = sc[0][N-1];\n            v0[0] = max(a00[0],a10[0]);\n            v1[0] = max(a01[0],a11[0]);\n            for(int m=1;m<n0;m++){\n                v0[m] = max(max(v0[m-1],v1[m-1]) + a00[m] , v0[m-1] + a10[m]);\n                v1[m] = max(max(v0[m-1],v1[m-1]) + a01[m] , v0[m-1] + a11[m]);\n            }\n            ans = (ans + max(v0[n0-1],v1[n0-1]))%((long long) 1000000007);\n            //printf(\"%d %d %d\\n\",v0[n0-1],v1[n0-1],n/10);\n        }\n        \n        \n        \n        return ans;\n    }\n};",
    "submit_ts": 1716695928.0
}