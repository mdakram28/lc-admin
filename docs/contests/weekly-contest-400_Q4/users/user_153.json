{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int pref[32][n + 2];\n        for(int j = 0; j <= 30; j++) {\n            for(int i = 0; i < n; i++) {\n                if(i == 0) pref[j][i] = ((nums[i] & (1 << j)) ? 1 : 0);\n                else pref[j][i] = pref[j][i - 1] + ((nums[i] & (1 << j)) ? 1 : 0);\n            }\n        }\n        \n        auto sum = [&](int bit, int l, int r) -> int {\n            if(l == 0) return (pref[bit][r] ? (1 << bit) : 0);\n            int count = pref[bit][r] - pref[bit][l - 1];\n            if(count == r - l + 1) return (1 << bit);\n            else return 0;\n        };\n        \n        auto cal = [&](int l, int r) -> int {\n            int ans = 0;\n            for(int i = 0; i <= 30; i++) ans += sum(i, l, r);\n            return ans;\n        };\n        \n        int tmp = 0, cur = 0, dist = 1e9;\n        for(int i = 0; i < n; i++) {\n            if(tmp < i) tmp = i;\n            // cout << i << endl;\n            cur = cal(i, tmp);\n            while(tmp < n - 1 && (cur & nums[tmp + 1]) >= k) {\n                tmp++;\n                cur &= nums[tmp];\n            }\n            // cout << i << \" \" << tmp << endl;\n            if(dist > abs(cur - k)) dist = abs(cur - k);\n            if(tmp < n - 1) cur &= nums[tmp + 1];\n            if(dist > abs(cur - k)) dist = abs(cur - k);\n        }\n        return dist;\n    }\n};",
    "submit_ts": "1717297573",
    "subm_id": "1274747746"
}