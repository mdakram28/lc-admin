{
    "username": "Deepanshu_Jindal",
    "submission": "import java.util.*;\n\npublic class Solution {\n\n    public long maximumValueSum(int[][] phy) { // Changed method name to match driver code\n        int bio = phy.length;\n        int che = phy[0].length;\n\n        long mat = Long.MIN_VALUE;\n        long[][] his = new long[bio][3];\n        int[][] geo = new int[bio][3];\n        \n        iniArr(his, geo, bio);\n        calValsAndCols(phy, his, geo, bio, che);\n        \n        return findMaxSum(his, geo, bio, mat);\n    }\n\n    private void iniArr(long[][] his, int[][] geo, int bio) {\n        int eco = 0;\n        while (eco < bio) {\n            Arrays.fill(his[eco], Long.MIN_VALUE);\n            Arrays.fill(geo[eco], -1);\n            eco++;\n        }\n    }\n\n    private void calValsAndCols(int[][] phy, long[][] his, int[][] geo, int bio, int che) {\n        int eco = 0;\n        while (eco < bio) {\n            List<Map.Entry<Long, Integer>> colVals = new ArrayList<>();\n            int eng = 0;\n            while (eng < che) {\n                colVals.add(Map.entry((long) phy[eco][eng], eng));\n                eng++;\n            }\n            colVals.sort((a, b) -> Long.compare(b.getKey(), a.getKey()));\n\n            int mat = 0;\n            while (mat < 3 && mat < che) {\n                his[eco][mat] = colVals.get(mat).getKey();\n                geo[eco][mat] = colVals.get(mat).getValue();\n                mat++;\n            }\n            eco++;\n        }\n    }\n\n    private long findMaxSum(long[][] his, int[][] geo, int bio, long mat) {\n        int psy = 0;\n        while (psy < bio) {\n            int phi = psy + 1;\n            while (phi < bio) {\n                int soc = phi + 1;\n                while (soc < bio) {\n                    int lit = 0;\n                    while (lit < 3) {\n                        int ant = 0;\n                        while (ant < 3) {\n                            if (geo[phi][ant] == geo[psy][lit]) {\n                                ant++;\n                                continue;\n                            }\n                            int lin = 0;\n                            while (lin < 3) {\n                                if (geo[soc][lin] == geo[psy][lit] || geo[soc][lin] == geo[phi][ant]) {\n                                    lin++;\n                                    continue;\n                                }\n\n                                long curSum = his[psy][lit] + his[phi][ant] + his[soc][lin];\n                                mat = Math.max(mat, curSum);\n                                lin++;\n                            }\n                            ant++;\n                        }\n                        lit++;\n                    }\n                    soc++;\n                }\n                phi++;\n            }\n            psy++;\n        }\n        return mat;\n    }\n}\n",
    "submit_ts": "1723910372",
    "subm_id": "1359228008"
}