{
    "username": "shivasaikmalla",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MOD = 10**9 + 7\n        max_inversions = n * (n - 1) // 2\n        \n        dp = [0] * (max_inversions + 1)\n        dp[0] = 1\n        \n        req_dict = {end: cnt for end, cnt in requirements}\n        \n        for i in range(n):\n            new_dp = [0] * (max_inversions + 1)\n            prefix_sum = [0] * (max_inversions + 2)\n            \n            for j in range(max_inversions + 1):\n                prefix_sum[j + 1] = (prefix_sum[j] + dp[j]) % MOD\n            \n            for j in range(max_inversions + 1):\n                new_dp[j] = (prefix_sum[j + 1] - prefix_sum[max(0, j - i)]) % MOD\n            \n            if i in req_dict:\n                cnt = req_dict[i]\n                new_dp = [new_dp[cnt] if j == cnt else 0 for j in range(max_inversions + 1)]\n            \n            dp = new_dp\n        \n        return sum(dp) % MOD",
    "submit_ts": "1719068356",
    "subm_id": "1296762411"
}