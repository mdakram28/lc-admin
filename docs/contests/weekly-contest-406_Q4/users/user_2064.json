{
    "username": "bassisaksham2222",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int n, int m, vector<int>& hori, vector<int>& vert) {\n        long long ans=0;\n        vector<pair<int,int>> h,v;\n        for(int i=0 ; i<n-1 ; i++){\n            h.push_back({hori[i],i});\n        }\n        for(int i=0 ; i<m-1 ; i++){\n            v.push_back({vert[i],i});\n        }\n        sort(h.begin(),h.end());\n        sort(v.begin(),v.end());\n        int vertcount=0;\n        int horicount=0;\n        \n        int i=v.size()-1;\n        int j=h.size()-1;\n\n        while(i>=0 && j>=0){\n            if(v[i].first >= h[j].first){\n                vertcount++;\n                ans+=((horicount+1)*v[i].first);\n                i--;\n            }else{\n                horicount++;\n                ans+=((vertcount+1)*h[j].first);\n                j--;\n            }\n        }\n        while(i>=0){\n            // if(v[i].first >= h[j].first){\n                vertcount++;\n                ans+=((horicount+1)*v[i].first);\n                i--;\n            // }\n        }\n        while(j>=0){\n            // if(v[i].first < h[j].first){\n                horicount++;\n                ans+=((vertcount+1)*h[j].first);\n                j--;\n            // }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926617",
    "subm_id": "1320291408"
}