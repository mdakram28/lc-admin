{
    "username": "Shivani_7726",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n      int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int result=1; \n        vector<int>v(k+1,-1); \n        vector<map<int,int>>mpp(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+v[l]); \n                } \n                if(mpp[j].find(nums[i])!=mpp[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+mpp[j][nums[i]]); \n                } \n                result=max(result,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                v[j]=max(v[j],dp[i][j]); \n                mpp[j][nums[i]]=max(mpp[j][nums[i]],dp[i][j]); \n            } \n        } \n        return result; \n\n    }\n};",
    "submit_ts": 1717861650.0
}