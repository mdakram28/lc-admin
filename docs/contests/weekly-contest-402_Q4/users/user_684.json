{
    "username": "Weeentar_Wind",
    "submission": "#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \nusing namespace __gnu_pbds; \n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \n  \nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& q) \n    {\n       int n = v.size();\n       ordered_set  st;\n        for( int i = 1 ; i < n - 1 ; i++ )\n            if( v[i] > v[i-1] && v[i] > v[i+1] )\n                st.insert(i);\n        \n        \n        vector<int>ans;\n      \n        for( int i = 0 ; i < q.size() ; i++ )\n        {\n            if( q[i][0] == 1 )\n            {\n                int l= q[i][1] , r = q[i][2] , val = 0 ;\n                if( r - l > 1  )\n                val = st.order_of_key(r) - st.order_of_key(l+1);\n                ans.push_back(val);\n            }\n            else\n            {\n                int pos = q[i][1] , val = q[i][2];\n                \n                v[pos] = val;\n                \n                st.erase(pos);\n                st.erase(pos+1);\n                st.erase(pos-1);\n                \n                for( int p = pos - 1 ; p <= pos + 1  ; p++ )\n                 if( p > 0 && p < n - 1 && v[p] > v[p -1 ] && v[p] > v[p+1] )\n                     st.insert(p);\n              \n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718508403.0
}