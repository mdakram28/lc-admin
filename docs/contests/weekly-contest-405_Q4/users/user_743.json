{
    "username": "DIVITE_DINESH",
    "submission": "import java.util.*;\nclass Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;  \n        Trie head = new Trie();\n        for (int i = 0; i < words.length; i++) insert(head, words[i], i);\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;  \n            Trie temp = head;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (!temp.child.containsKey(c)) break;\n                temp = temp.child.get(c);\n                for (int s : temp.wInd) dp[j + 1] = Math.min(dp[j + 1], dp[i] + costs[s]);\n            }\n        }\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n    static class Trie {\n        HashMap<Character, Trie> child = new HashMap<>();\n        List<Integer> wInd = new ArrayList<>();\n    }\n    private static void insert(Trie head, String w, int s) {\n        Trie temp = head;\n        for (char c : w.toCharArray()) {\n            temp.child.putIfAbsent(c, new Trie());\n            temp = temp.child.get(c);\n        }\n        temp.wInd.add(s);\n    }\n}",
    "submit_ts": "1720322493",
    "subm_id": "1312351393"
}