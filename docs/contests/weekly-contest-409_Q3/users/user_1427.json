{
    "username": "jiu-tian-gou",
    "submission": "class Solution {\npublic:\n    int cal(const pair<int,int>& x){\n        // cout<<x.second<<x.first<<endl;\n        return x.second-x.first-1;\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ansvec;\n        struct cmp{\n            bool operator()(const pair<int,int>& a,const pair<int,int>& b)const{\n                if (a.first!=b.first) return a.first<b.first;\n                return a.second>b.second;\n            }\n        };\n        set<pair<int, int>, cmp> intervals;\n        int ans = n-1;\n        for(auto i:queries){\n            int l=i[0],r=i[1];\n            set<pair<int,int>,cmp>::iterator wh = intervals.lower_bound({l,r});\n            bool flag = 1;\n            while(wh!=intervals.end()&&wh->first>=l&&wh->second<=r){\n                cout<<(*wh).first<<(*wh).second<<endl;\n                set<pair<int, int>, cmp>::iterator wd = wh;\n                wh++;\n                ans+=cal(*wd);\n                intervals.erase(wd);\n                flag = 1;\n            }\n            if(flag){\n                if(wh!=intervals.end()){\n                    if(wh->first<=l&&wh->second>=r) flag=0;\n                }\n                if(wh!=intervals.begin()){\n                    wh--;\n                    if(wh->first<=l&&wh->second>=r) flag=0;\n                }\n            }\n            if(flag)\n                ans -= cal({l,r}),\n                intervals.insert({l,r});\n            ansvec.push_back(ans);\n        }\n        return ansvec;\n    }\n};",
    "submit_ts": "1722743298",
    "subm_id": "552349986"
}