{
    "username": "wenboz",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int res = Integer.MAX_VALUE;\n        int[][][][] dp = new int[n][m][n][m];\n        for(int i = 0; i < n; i++){\n            for(int ie = i; ie < n; ie++){\n                for(int j = 0; j < m; j++){\n                    int minx = Integer.MAX_VALUE, miny = Integer.MAX_VALUE, maxx = 0, maxy = 0;\n                    for(int je = j; je < m; je++){\n                        for(int k = i; k <= ie; k++){\n                            if(grid[k][je] == 1){\n                                minx = Math.min(minx, k);\n                                miny = Math.min(miny, je);\n                                maxx = Math.max(maxx, k);\n                                maxy = Math.max(maxy, je);\n                            }\n                        }\n                        dp[i][j][ie][je] = minx > maxx ? 0 : (maxx - minx + 1) * (maxy - miny + 1);\n                    }\n                }\n            }\n        }\n        for(int i = 0; i < n; i++){\n            for(int ie = i + 1; ie < n - 1; ie++){\n                res = Math.min(res, dp[0][0][i][m - 1] + dp[i + 1][0][ie][m - 1] + dp[ie + 1][0][n - 1][m - 1]);\n            }\n        }\n        for(int i = 0; i < m; i++){\n            for(int ie = i + 1; ie < m - 1; ie++){\n                res = Math.min(res, dp[0][0][n - 1][i] + dp[0][i + 1][n - 1][ie] + dp[0][ie + 1][n -1][m - 1]);\n            }\n        }\n        \n        for(int i = 0; i < n - 1; i++){\n            for(int j = 0; j < m - 1; j++){\n                res = Math.min(res, dp[0][0][n - 1][j] + dp[0][j + 1][i][m - 1] + dp[i + 1][j + 1][n - 1][m - 1]);\n                res = Math.min(res, dp[0][0][i][m - 1] + dp[i + 1][0][n - 1][j] + dp[i + 1][j + 1][n - 1][m - 1]);\n                res = Math.min(res, dp[0][0][i][j] + dp[i + 1][0][n - 1][j] + dp[0][j + 1][n - 1][m - 1]);\n                res = Math.min(res, dp[0][0][i][j] + dp[0][j + 1][i][m - 1] + dp[i + 1][0][n - 1][m - 1]);\n            }\n        }\n        return res;\n        \n    }\n}",
    "submit_ts": "1719112762",
    "subm_id": "1297308344"
}