{
    "username": "w285714",
    "submission": "class Solution {\n    class BinaryIndexedTree {\n    private:\n        vector<int> tree;\n\n    public:\n        BinaryIndexedTree(int n) : tree(n + 1) {}\n\n        void add(int i, int d) {\n            while (i < tree.size()) {\n                tree[i] += d;\n                i += i & -i;\n            }\n        }\n\n        int get(int i) {\n            int res = 0;\n            while (i > 0) {\n                res += tree[i];\n                i &= i - 1;\n            }\n            return res;\n        }\n    };\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        BinaryIndexedTree t(n+10);\n        for(int i=1;i+1<n;++i){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                t.add(i+1,1);\n            }\n        }\n        vector<int> res;\n        for(auto& q:queries){\n            if(q[0]==1){\n                res.push_back(max(0,t.get(q[2])-t.get(q[1]+1)));\n                // cout<<\"get \"<<q[2]<<\":\"<<t.get(q[2])<<\" get \"<<q[1]+1<<\":\"<<t.get(q[1]+1)<<endl;\n            }\n            else{\n                // cout<<\"change i=\"<<q[1]<<\" v=\"<<q[2]<<endl;\n                int i=q[1];\n                int v=q[2];\n                if(i>1){\n                    int d=0;\n                    d+=nums[i-1]>nums[i-2]&&nums[i-1]>v;\n                    d-=nums[i-1]>nums[i-2]&&nums[i-1]>nums[i];\n                    // cout<<\"d1=\"<<d<<endl;\n                    if(d){\n                        t.add(i,d);\n                    }\n                }\n                if(i+2<n){\n                    int d=0;\n                    d+=nums[i+1]>nums[i+2]&&nums[i+1]>v;\n                    d-=nums[i+1]>nums[i+2]&&nums[i+1]>nums[i];\n                    // cout<<\"d2=\"<<d<<endl;\n                    if(d){\n                        t.add(i+2,d);\n                    }\n                }\n                if(i>0&&i+1<n){\n                    int d=0;\n                    d+=v>nums[i+1]&&v>nums[i-1];\n                    d-=nums[i]>nums[i+1]&&nums[i]>nums[i-1];\n                    // cout<<\"d3=\"<<d<<endl;\n                    if(d){\n                        t.add(i+1,d);\n                    }\n                }\n                // cout<<\"hard get 2:\"<<t.get(2)<<\" get 1:\"<<t.get(1)<<endl;\n                \n                nums[i]=v;\n                \n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1718506602.0
}