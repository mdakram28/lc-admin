{
    "username": "Fardaan",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, bool>> cuts;\n        \n        // Combine cuts into a single list with a flag indicating horizontal (true) or vertical (false)\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, true});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, false});\n        }\n        \n        // Sort cuts in descending order by cost\n        sort(cuts.rbegin(), cuts.rend());\n        \n        long long totalCost = 0;\n        long long horizontalPieces = 1;\n        long long verticalPieces = 1;\n        \n        // Process cuts in descending order by cost\n        for (auto& cut : cuts) {\n            int cost = cut.first;\n            bool isHorizontal = cut.second;\n            \n            if (isHorizontal) {\n                totalCost += cost * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cost * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925372",
    "subm_id": "1320252481"
}