{
    "username": "amitkumar2003",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        set<pair<int,int>>a,b;\n        int j=0;\n        map<int,int>mp1,mp2;\n        for(auto x:points){\n            int u=x[0];\n            int v=x[1];\n            a.insert({u+v,j});\n            b.insert({u-v,j});\n            mp1[j]=u+v;\n            mp2[j]=u-v;\n            j++;\n        }\n        int n = points.size();\n        if(n==1 || n==2)\n            return 0;\n        int ans = INT_MAX;\n        for(int i=0;i<n;i++){\n            int cur = i;\n            int plus = mp1[cur];\n            int neg = mp2[cur];\n            a.erase({plus,cur});\n            b.erase({neg,cur});\n              \n            int curres = max(prev(a.end())->first - a.begin()->first,prev(b.end())->first - b.begin()->first); \n            ans = min(curres,ans);\n            a.insert({plus,cur});\n            b.insert({neg,cur});\n            \n            \n        }\n        return ans;\n    }\n};"
}