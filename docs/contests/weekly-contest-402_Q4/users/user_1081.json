{
    "username": "thedude7181",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        peaks = SortedList()\n        for i in range(1, len(nums) - 1):\n            if nums[i - 1] < nums[i] > nums[i + 1]:\n                peaks.add(i)\n        res = []\n        for q in queries:\n            if q[0] == 1:\n                l = q[1]\n                r = q[2]\n                if r - l >= 2:\n                    res.append(peaks.bisect_right(r - 1) - peaks.bisect_left(l + 1))\n                else:\n                    res.append(0)\n                #print(peaks.bisect_right(r - 1))\n                #print(peaks.bisect_left(l + 1))\n                #print(peaks)\n                #print(nums)\n                #print(res)\n            else:\n                i = q[1]\n                v = q[2]\n                nums[i] = v\n                for j in range(max(i - 1, 1), min(len(nums) -1, i + 2)):\n                    peaks.discard(j)\n                    if nums[j - 1] < nums[j] > nums[j + 1]:\n                        peaks.add(j)\n        \n        return res\n    \n\"\"\"\n[4,9,4,10,7]\n[[2,3,2],[2,1,3],[1,2,3]]\n[7,10,7]\n[[1,2,2],[2,0,6],[1,0,2]]\n[8,5,9,3,5]\n[[1,2,4],[1,0,1],[2,2,4]]\n\n0\n[0,1]\n[0,0]\n\"\"\"",
    "submit_ts": "1718507995",
    "subm_id": "1289668718"
}