{
    "username": "void_8t",
    "submission": "\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        const int MAX_INV = 405;\n        \n        map<int, int> r;\n        for (auto& it : requirements) {\n            r[it[0]] = it[1];\n        }\n\n        vector<vector<int>> dp(n + 1, vector<int>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 0; i < n; ++i) {\n            for (int k = 0; k <= MAX_INV; ++k) {\n                if (dp[i][k] == 0) continue;\n                for (int j = 0; j <= i; ++j) {\n                    if (k + j <= MAX_INV) {\n                        dp[i + 1][k + j] = (dp[i + 1][k + j] + dp[i][k]) % MOD;\n                    }\n                }\n            }\n            \n            if (r.find(i) != r.end()) {\n                int needk = r[i];\n                for (int k = 0; k <= MAX_INV; ++k) {\n                    if (k != needk) {\n                        dp[i + 1][k] = 0;\n                    }\n                }\n            }\n        }\n        \n//         for(int i=0;i<=n;i++){\n// for(int k=0;k<=MAX_INV;k++){\n// cout<<dp[i][k]<<\" \";}\n//             cout<<endl;\n//         }\n//         cout<<endl;\n\n        return dp[n][r[n-1]]; \n    }\n};\n",
    "submit_ts": "1719071835",
    "subm_id": "1296855204"
}