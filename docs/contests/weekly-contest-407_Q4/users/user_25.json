{
    "username": "daoqi",
    "submission": "using i64 = long long;\nclass Solution {\npublic:\n    long long minimumOperations(vector<int> &nums, vector<int> &target) {\n        i64 n = nums.size(), ans = 0, lst = 0;\n        std::map<int, int> mp;\n        for (int i = 0; i < n; i++) {\n            if (target[i] - nums[i] == 0) {\n                lst = 0;\n                continue;\n            } else if (target[i] - nums[i] > 0) {\n                ans += std::max(0ll, target[i] - nums[i] - std::max(0ll, lst));\n                lst = target[i] - nums[i];\n            }else{\n                if(lst>=0) ans+=abs(target[i]-nums[i]);\n                else if(lst>target[i]-nums[i]) ans+= abs(target[i]-nums[i])-abs(lst);\n                lst=target[i]-nums[i];\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721529869",
    "subm_id": "548374092"
}