{
    "username": "sun-man-man",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        adj = collections.defaultdict(list)\n        for u, v in edges:\n            adj[u].append(v)\n            adj[v].append(u)\n        n = len(edges)+1\n\n        ts = [0]*n\n        mx = collections.defaultdict(list)\n\n        def dfs1(u, p):\n            mx[u].append(0)\n            for v in adj[u]:\n                if v == p:\n                    continue\n                tv = dfs1(v, u)\n                if v % 2 == 1:\n                    mx[u].append(tv+1)\n                else:\n                    mx[u].append(tv+2)\n            mx[u].sort(reverse=True)\n            return mx[u][0]\n\n        def dfs2(u, p):\n            for v in adj[u]:\n                if v == p:\n                    continue\n                cv = mx[v][0]+1\n                if v % 2 == 0:\n                    cv += 1\n                nt = mx[u][0]\n                if cv == mx[u][0]:\n                    nt = mx[u][1]\n                nt += 1\n                if u % 2 == 0:\n                    nt += 1\n                ts[v] = max(mx[v][0], nt)\n                mx[v].append(nt)\n                mx[v].sort(reverse=True)\n                dfs2(v, u)\n\n        ts[0] = dfs1(0, -1)\n        # print(ts[0])\n        dfs2(0, -1)\n\n        return ts",
    "submit_ts": "1722697913",
    "subm_id": "552268418"
}