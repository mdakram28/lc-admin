{
    "username": "xie-ding-e-de-mao-41c",
    "submission": "void eraseRange(std::set<int>& s, int start, int end) {\n    // \u627e\u5230\u5927\u4e8e\u6216\u7b49\u4e8estart\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n    auto it_start = s.lower_bound(start);\n    // \u627e\u5230\u5927\u4e8eend\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n    auto it_end = s.upper_bound(end);\n\n    // \u5220\u9664\u533a\u95f4\u5185\u7684\u6240\u6709\u5143\u7d20\n    if (it_start != s.end() && it_end != s.end()) {\n        s.erase(it_start, it_end);\n    }\n}\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<int> s;\n        vector<int> ans;\n        for(int i=0;i<n;i++){\n            s.insert(i);\n        }\n        for(auto& q:queries){\n            eraseRange(s, q[0]+1, q[1]-1);\n            ans.push_back(s.size()-1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742876",
    "subm_id": "552347451"
}