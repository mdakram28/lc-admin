{
    "username": "12345qwerty",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        List<Integer> sum = new ArrayList<>(), diff = new ArrayList<>();\n        for(int[] arr : points){\n            sum.add(arr[0]+arr[1]);\n            diff.add(arr[0]-arr[1]);\n        }\n        Map<Integer, Integer> summap = new HashMap<>(), diffmap = new HashMap<>();\n        for(int i = 0; i < points.length; i++){\n            summap.put(i, sum.get(i));\n            diffmap.put(i, diff.get(i));\n        }\n        Collections.sort(sum);\n        Collections.sort(diff);\n        int min = Integer.MAX_VALUE;\n        for(int i = 0; i < points.length; i++){\n            int l = sum.get(0), r = sum.get(sum.size()-1);\n            if(summap.get(i) == l)\n                l = sum.get(1);\n            if(summap.get(i) == r)\n                r = sum.get(sum.size()-2);\n            int num = r-l;\n            l = diff.get(0);\n            r = diff.get(diff.size()-1);\n            if(diffmap.get(i) == l)\n                l = diff.get(1);\n            if(diffmap.get(i) == r)\n                r = diff.get(diff.size()-2);\n            num = Math.max(num, r-l);\n            min = Math.min(min, num);\n        }\n        return min;\n    }\n}"
}