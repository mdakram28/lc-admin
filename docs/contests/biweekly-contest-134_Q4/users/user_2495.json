{
    "username": "harshmathur_1503",
    "submission": "// Solution by Harsh Mathur\n// DATE - 06-07-2024\n#include <vector>\n#include <unordered_map>\n#include <iostream>\n#define ll long long\nusing namespace std;\n\nclass Solution {\npublic:\n    // Function to count subarrays where the bitwise AND equals k\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll count = 0;\n        unordered_map<ll, ll> prevResults; // Map to store previous results\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> currResults; // Map to store current results\n            currResults[nums[i]]++; // Count the current number\n\n            if (nums[i] == k) {\n                count++; // Increment count if current number equals k\n            }\n\n            // Check all previous results\n            for (auto& [val, freq] : prevResults) {\n                ll newAndResult = val & nums[i]; // Calculate new AND result\n                if (newAndResult == k) {\n                    count += freq; // Increment count if AND result equals k\n                }\n                currResults[newAndResult] += freq; // Store/update the result in current map\n            }\n\n            prevResults = currResults; // Update previous results for next iteration\n        }\n\n        return count; // Return total count of subarrays\n    }\n};\n\n// Example usage (commented out for clarity in the context of this message)\n// int main() {\n//     Solution sol;\n// \n//     vector<int> nums1 = {1, 1, 1};\n//     int k1 = 1;\n//     cout << \"Test case 1: \" << sol.countSubarrays(nums1, k1) << endl; // Output: 6\n// \n//     vector<int> nums2 = {1, 1, 2};\n//     int k2 = 1;\n//     cout << \"Test case 2: \" << sol.countSubarrays(nums2, k2) << endl; // Output: 3\n// \n//     vector<int> nums3 = {1, 2, 3};\n//     int k3 = 2;\n//     cout << \"Test case 3: \" << sol.countSubarrays(nums3, k3) << endl; // Output: 2\n// \n//     return 0;\n// }",
    "submit_ts": "1720281567",
    "subm_id": "1311830170"
}