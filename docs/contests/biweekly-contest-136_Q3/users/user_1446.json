{
    "username": "rahul0310",
    "submission": "class Solution {\n    public int minFlips(int[][] g) {\n        int x = g.length;\n        int y = g[0].length;\n\n        int res = 0;\n\n        // Loop through the 2x2 sub-grids\n        for (int i = 0; i < x / 2; i++) {\n            for (int j = 0; j < y / 2; j++) {\n                int[] ele = {\n                    g[i][j],\n                    g[x - i - 1][j],\n                    g[i][y - j - 1],\n                    g[x - i - 1][y - j - 1]\n                };\n\n                int one = Arrays.stream(ele).sum();\n\n                res += Math.min(one, 4 - one);\n            }\n        }\n\n        int pos = 0;\n        int co = 0;\n\n        // Handle the middle row if n is odd\n        if (x % 2 != 0) {\n            for (int j = 0; j < y / 2; j++) {\n                if (g[x / 2][j] != g[x / 2][y - j - 1]) {\n                    res += 1;\n                    pos += 1;\n                } else {\n                    if (g[x / 2][j] == 1) {\n                        co += 1;\n                    }\n                }\n            }\n        }\n\n        // Handle the middle column if m is odd\n        if (y % 2 != 0) {\n            for (int i = 0; i < x / 2; i++) {\n                if (g[i][y / 2] != g[x - i - 1][y / 2]) {\n                    res += 1;\n                    pos += 1;\n                } else {\n                    if (g[i][y / 2] == 1) {\n                        co += 1;\n                    }\n                }\n            }\n        }\n\n        // Handle the central element if both n and m are odd\n        if (x % 2 != 0 && y % 2 != 0 && g[x / 2][y / 2] == 1) {\n            res += 1;\n        }\n\n        if (pos == 0 && co % 2 != 0) {\n            res += 2;\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1722699618",
    "subm_id": "1343217148"
}