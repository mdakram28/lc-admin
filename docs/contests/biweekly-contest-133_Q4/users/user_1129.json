{
    "username": "aniketsingh27",
    "submission": "    #define ll long long\n    #define MOD 1000000007\nclass Solution {\nprivate:\n    void computePermutations(int n, map<int, int>& mp, vector<vector<ll>>& cnt,int maxi) {\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= maxi; j++) {\n                for (int k = 0; k < i && (j-k)>=0; k++) {\n                        cnt[i][j] = (cnt[i - 1][j-k]+cnt[i][j]) % MOD;\n                }\n            }\n\n            auto it = mp.find(i);\n            if (it != mp.end()) {\n                int aim = it->second;\n                for (int j = 0; j <= maxi ; j++) {\n                    if (j != aim) cnt[i][j] = 0;\n                }\n            }\n        }\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        map<int, int> mp;\n        int maxi=0;\n        for (int i=0;i<requirements.size();i++){\n            mp[requirements[i][0] + 1] = requirements[i][1];\n            maxi=max(maxi,requirements[i][1]);\n        }\n\n        vector<vector<ll>> cnt(n + 1, vector<ll>(maxi + 1, 0));\n        cnt[0][0] = 1; \n        computePermutations(n, mp, cnt,maxi);\n\n        ll ans = 0;\n        for (int j = 0; j <= maxi; j++) {\n            ans = (ans + cnt[n][j]) % MOD;\n        }\n\n        return (int)(ans);\n    }\n};\n",
    "submit_ts": 1719071872.0
}