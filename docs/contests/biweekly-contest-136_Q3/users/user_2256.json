{
    "username": "tejaramjanee",
    "submission": "\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        int temp = 0;\n        \n      \n       int i=0;\n       while(i<n/2){\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> elt = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n                \n                int ones = accumulate(elt.begin(), elt.end(), 0);\n                \n                temp += min(ones, 4 - ones);\n            }\n            i++;\n        }\n        \n        int possible = 0;\n        int count = 0;\n        \n     \n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    ++temp;\n                    ++possible;\n                } else {\n                    if (grid[n / 2][j] == 1) {\n                        ++count;\n                    }\n                }\n            }\n        }\n        \n       \n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    ++temp;\n                    ++possible;\n                } else {\n                    if (grid[i][m / 2] == 1) {\n                        ++count;\n                    }\n                }\n            }\n        }\n        \n      \n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ++temp;\n        }\n        \n        if (possible == 0 && count % 2 != 0) {\n            temp += 2;\n        }\n        \n        return temp;\n    }\n};",
    "submit_ts": "1722700369",
    "subm_id": "1343239782"
}