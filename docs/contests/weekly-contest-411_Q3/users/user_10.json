{
    "username": "Farras Faddila",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        string ret(n, '\\0');\n        if (k == 1 || k == 3 || k == 9) {\n            for (int i = 0; i < n; i++) ret[i] = '9';\n            return ret;\n        } else if (k == 2) {\n            ret[0] = ret.back() = '8';\n            for (int i = 1; i < n - 1; i++) ret[i] = '9';\n            return ret;\n        } else if (k == 4) {\n            if (n == 1) return \"8\";\n            ret[0] = ret[1] = ret[n - 2] = ret[n - 1] = '8';\n            for (int i = 2; i < n - 2; i++) ret[i] = '9';\n            return ret;\n        } else if (k == 5) {\n            ret[0] = ret.back() = '5';\n            for (int i = 1; i < n - 1; i++) ret[i] = '9';\n            return ret;\n        } else if (k == 6) {\n            if (n == 1) return \"6\";\n            if (n == 2) return \"66\";\n            for (int i = 0; i < n; i++) ret[i] = '9';\n            if (n & 1) {\n                ret[0] = ret.back() = ret[n / 2] = '8';\n                return ret;\n            }\n            ret[0] = ret.back() = '8';\n            ret[n / 2] = ret[n / 2 - 1] = '7';\n            return ret;\n        } else if (k == 8) {\n            if (n == 1) return \"8\";\n            if (n == 2) return \"88\";\n            ret[0] = ret[1] = ret[2] = ret[n - 3] = ret[n - 2] = ret[n - 1] = '8';\n            for (int i = 3; i < n - 3; i++) ret[i] = '9';\n            return ret;\n        }\n        //k == 7\n        for (int i = 0; i < n; i++) ret[i] = '9';\n        vector<int> pw(n);\n        pw[0] = 1;\n        for (int i = 1; i < n; i++) {\n            pw[i] = (pw[i - 1] * 10) % 7;\n        }\n        if (n & 1) {\n            int cur = 0;\n            for (int i = 0; i < n; i++) {\n                if (i == (n / 2)) continue;\n                cur = (cur + 9 * pw[i]) % 7;\n            }\n            for (int i = 9; i >= 0; i--) {\n                if ((cur + i * pw[n / 2]) % 7 == 0) {\n                    ret[n / 2] = (char)(i + '0');\n                    return ret;\n                }\n            }\n        }\n        int cur = 0;\n        for (int i = 0; i < n; i++) {\n            if (i == (n / 2) || (i == (n / 2) - 1)) continue;\n            cur = (cur + 9 * pw[i]) % 7;\n        }\n        for (int i = 9; i >= 0; i--) {\n            if ((cur + i * pw[n / 2] + i * pw[n / 2 - 1]) % 7 == 0) {\n                ret[n / 2] = ret[n / 2 - 1] = (char)(i + '0');\n                return ret;\n            }\n        }\n        return \"-1\";\n    }\n};",
    "submit_ts": "1723949652",
    "subm_id": "1359725283"
}