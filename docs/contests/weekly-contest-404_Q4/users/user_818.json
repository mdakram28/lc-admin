{
    "username": "utsav_kasvala",
    "submission": "class Solution {\npublic:\n    void dfs1(int v,int par,vector<int> &depth,vector<int> g1[]){\n       for(auto &val:g1[v]){\n           if(val==par)continue;\n           depth[val]=depth[v]+1;\n           dfs1(val,v,depth,g1);\n       }\n    }\n    \n    void dfs2(int v,int par,vector<vector<int>> &depth,vector<int> g1[]){\n       for(auto &val:g1[v]){\n           if(val==par)continue;\n           depth[val][0]=depth[v][0]+1;\n           dfs2(val,v,depth,g1);\n       }\n    }\n    \n    void dfs3(int v,int par,vector<vector<int>> &depth,vector<int> g1[]){\n       for(auto &val:g1[v]){\n           if(val==par)continue;\n           depth[val][1]=depth[v][1]+1;\n           dfs3(val,v,depth,g1);\n       }\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size(),m=edges2.size();\n        vector<int> g1[n+2];\n        vector<int> g2[m+2];\n        for(int i=0;i<n;i++){\n            g1[edges1[i][0]].push_back(edges1[i][1]);\n            g1[edges1[i][1]].push_back(edges1[i][0]);\n\n        }\n        for(int i=0;i<m;i++){\n            g2[edges2[i][0]].push_back(edges2[i][1]);\n            g2[edges2[i][1]].push_back(edges2[i][0]);\n\n        }\n\n        vector<vector<int>> d1(n+1,vector<int>(2,0));\n        vector<vector<int>> d2(m+1,vector<int>(2,0));\n        vector<int> t1(n+1,0);\n        vector<int> t2(m+1,0);\n        dfs1(0,-1,t1,g1);\n        dfs1(0,-1,t2,g2);\n        \n        int maxi1=0,maxi2=0,ele1=0,ele2=0;\n        \n        for(int i=0;i<=n;i++){\n            if(maxi1<t1[i]){\n                ele1=i;\n                maxi1=t1[i];\n            }\n        }\n        \n        for(int i=0;i<=m;i++){\n            if(maxi2<t2[i]){\n                ele2=i;\n                maxi2=t2[i];\n            }\n        }\n        \n        dfs2(ele1,-1,d1,g1);\n        dfs2(ele2,-1,d2,g2);\n        \n        maxi1=0,maxi2=0,ele1=0,ele2=0;\n        for(int i=0;i<=n;i++){\n            if(maxi1<d1[i][0]){\n                ele1=i;\n                maxi1=d1[i][0];\n            }\n        }\n        \n        for(int i=0;i<=m;i++){\n            if(maxi2<d2[i][0]){\n                ele2=i;\n                maxi2=d2[i][0];\n            }\n        }\n        \n        dfs3(ele1,-1,d1,g1);\n        dfs3(ele2,-1,d2,g2);\n        \n        vector<vector<int>> op1,op2;\n        int mini1=INT_MAX,mini2=INT_MAX;\n        for(int i=0;i<=n;i++){\n           //op1.push_back({d1[i][0],d1[i][1]});\n           mini1=min(mini1,max(d1[i][0],d1[i][1]));\n        }\n        //cout<<\"\\n\";\n        for(int i=0;i<=m;i++){\n          // op2.push_back({d2[i][0],d2[i][1]});\n            mini2=min(mini2,max(d2[i][0],d2[i][1]));\n\n        }\n\n        \n        int ans=1+mini1+mini2;\n        \n        return max({ans,maxi1,maxi2});\n        \n        \n    }\n};",
    "submit_ts": "1719719901",
    "subm_id": "1304453486"
}