{
    "username": "Chandrachur",
    "submission": "class Solution {\n    map<pair<pair<int, int>, int>, int> dp;\nprivate:\n    int f(int curr, int jump, bool isbackallowed, int k) {\n        if(dp.count({{curr, jump}, isbackallowed})) {\n            return dp[{{curr, jump}, isbackallowed}];\n        }\n        int res = (curr == k);\n        if(curr + (1 << jump) - 1 <= k) res += f(curr + (1 << jump), jump + 1, true, k);\n        if(curr != 0 and isbackallowed) res += f(curr - 1, jump, false, k);\n        return dp[{{curr, jump}, isbackallowed}] = res;\n    }\n    \npublic:\n    int waysToReachStair(int k) {\n        dp.clear();\n        return f(1, 0, 1, k);\n    }\n};",
    "submit_ts": 1716089347.0
}