{
    "username": "adarshanand76000",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        set<pair<int,int>> points;\n        int current = n - 1;\n        \n        for (const auto& query : queries) {\n            int start = query[0];\n            int end = query[1];\n            \n            auto it = points.lower_bound({start, 0});\n            bool canInsert = true;\n            if (it != points.end() && it->first == start) {\n                if (it->second >= end) {\n                    ans.push_back(current);\n                    continue;\n                } else {\n                    current += it->second - start - 1;\n                    points.erase(it);\n                }\n            } else if (it != points.begin()) {\n                --it;\n                if (it->second > start) {\n                    canInsert = false;\n                }\n            }\n            \n            if (canInsert) {\n                it = points.lower_bound({end, 0});\n                while (it != points.begin()) {\n                    --it;\n                    if (it->second <= start) {\n                        break;\n                    }\n                    current += it->second - it->first - 1;\n                    it = points.erase(it);\n                }\n                \n                points.insert({start, end});\n                current -= end - start - 1;\n            }\n            \n            ans.push_back(current);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722743544",
    "subm_id": "1343794351"
}