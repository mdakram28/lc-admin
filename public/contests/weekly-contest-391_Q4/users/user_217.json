{
    "username": "wisdompeak",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) \n    {\n        vector<multiset<int>>arr(4);\n        \n        for (auto& p: points)\n        {\n            arr[0].insert(p[0]+p[1]);\n            arr[1].insert(p[0]-p[1]);\n            arr[2].insert(-p[0]+p[1]);\n            arr[3].insert(-p[0]-p[1]);\n        }\n        \n        int ret = INT_MAX/2;\n        for (auto& p: points)\n        {\n            arr[0].erase(arr[0].find(p[0]+p[1]));\n            arr[1].erase(arr[1].find(p[0]-p[1]));\n            arr[2].erase(arr[2].find(-p[0]+p[1]));\n            arr[3].erase(arr[3].find(-p[0]-p[1]));\n            \n            int ans = 0;\n            ans = max(ans, *prev(arr[0].end()) - *arr[0].begin());\n            ans = max(ans, *prev(arr[1].end()) - *arr[1].begin());\n            ans = max(ans, *prev(arr[2].end()) - *arr[2].begin());\n            ans = max(ans, *prev(arr[3].end()) - *arr[3].begin());\n            \n            ret = min(ret, ans);\n            \n            arr[0].insert(p[0]+p[1]);\n            arr[1].insert(p[0]-p[1]);\n            arr[2].insert(-p[0]+p[1]);\n            arr[3].insert(-p[0]-p[1]);\n        }\n        \n        return ret;\n            \n        \n        \n    }\n};"
}