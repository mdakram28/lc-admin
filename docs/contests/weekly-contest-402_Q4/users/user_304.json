{
    "username": "tang-yuan-yuan-bu-yuan",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        auto lowbit = [&](int x){\n            return x & -x;\n        };\n        int n = a.size();\n        vector<int> c(n + 1);\n        auto update = [&](int x, int d){\n            while(x <= n){\n                c[x] += d;\n                x += lowbit(x);\n            }\n        };\n        auto query = [&](int x){\n            int res = 0;\n            while(x){\n                res += c[x];\n                x -= lowbit(x);\n            }\n            return res;\n        };\n\n        for(int i = 1; i < n - 1; i ++ ){\n            if(a[i] > a[i - 1] && a[i] > a[i + 1]) update(i, 1);\n        }\n        vector<int> res;\n        for(int i = 0; i < q.size(); i ++ ){\n            int op = q[i][0], l = q[i][1], r = q[i][2];\n            if(op == 1){\n                if(r - l >= 2){\n                    res.push_back(query(r - 1) - query(l));\n                }\n                else res.push_back(0);\n            }\n            else{\n                if(l && l < n - 1 && a[l] > a[l - 1] && a[l] > a[l + 1]){\n                    update(l, -1);\n                }\n                if(l - 1 > 0 && a[l - 1] > a[l - 2] && a[l - 1] > a[l]) update(l - 1, -1);\n                if(l + 1 < n - 1 && a[l + 1] > a[l] && a[l + 1] > a[l + 2]) update(l + 1, -1);\n                a[l] = r;\n                if(l && l < n - 1 && a[l] > a[l - 1] && a[l] > a[l + 1]){\n                    update(l, 1);\n                }\n                if(l - 1 > 0 && a[l - 1] > a[l - 2] && a[l - 1] > a[l]) update(l - 1, 1);\n                if(l + 1 < n - 1 && a[l + 1] > a[l] && a[l + 1] > a[l + 2]) {\n                    update(l + 1, 1);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506512",
    "subm_id": "539775469"
}