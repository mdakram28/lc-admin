{
    "username": "Harikumar K",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        maxval = 0\n        def top3(arr):\n            n = len(arr)\n            temp = heapq.nlargest(3,zip(arr,range(n)))\n            out = []\n            for i in range(3):\n                out.append(temp[i])\n            # i=3\n            # last = temp[2][0]\n            # while i<n and temp[i][0]==last:\n            #     out.append(temp[i][1])\n            #     i+=1\n            return out\n        newarr = []\n        inds = range(n)\n        for i in range(m):\n            newarr.append(heapq.nlargest(3,zip(board[i],inds)))\n        maxval = -float('inf')\n        for i1 in range(m-2):\n            for j1 in range(3):\n                ind1 = newarr[i1][j1][1]\n                val1 = newarr[i1][j1][0]\n                for i2 in range(i1+1,m-1):\n                    for j2 in range(3):\n                        ind2 = newarr[i2][j2][1]\n                        if ind2==ind1:\n                            continue\n                        val2 = val1+newarr[i2][j2][0]\n                        for i3 in range(i2+1,m):\n                            for j3 in range(3):\n                                ind3 = newarr[i3][j3][1]\n                                if ind3==ind2 or ind3==ind1:\n                                    continue\n                                val3 = val2+newarr[i3][j3][0]\n                                maxval = max(maxval,val3)\n\n        return maxval",
    "submit_ts": "1723909577",
    "subm_id": "1359197823"
}