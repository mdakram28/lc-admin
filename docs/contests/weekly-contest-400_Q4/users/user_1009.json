{
    "username": "aqua2032",
    "submission": "class SGTree {\n    vector<int> seg;\npublic:\n    SGTree(int n) {\n        seg.resize(4 * n + 1);\n    }\n\n    void build(int ind, int low, int high, vector<int>&arr) {\n        if (low == high) {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        int mid = (low + high) / 2;\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = (seg[2 * ind + 1]&seg[2 * ind + 2]);\n    }\n\n    int query(int ind, int low, int high, int l, int r) {\n        if (r < low || high < l) return INT_MAX;\n\n        if (low >= l && high <= r) return seg[ind];\n\n        int mid = (low + high) >> 1;\n        int left = query(2 * ind + 1, low, mid, l, r);\n        int right = query(2 * ind + 2, mid + 1, high, l, r);\n        return (left&right);\n    }\n\n    void update(int ind, int low, int high, int i, int val) {\n        if (low == high) {\n            seg[ind] = val;\n            return;\n        }\n\n        int mid = (low + high) >> 1;\n        if (i <= mid) update(2 * ind + 1, low, mid, i, val);\n        else update(2 * ind + 2, mid + 1, high, i, val);\n        seg[ind] = (seg[2 * ind + 1]&seg[2 * ind + 2]);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        SGTree segt(n);\n        segt.build(0,0,n-1,nums);\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n        int low = i - 1;\n        int high = n - 1;\n        while (high - low-1>0) {\n            int mid = low+(high-low)/2;\n            int z=segt.query(0,0,n-1,i, mid);\n            if (z>= k){\n                 low = mid;\n            }   \n            else\n            {\n                high= mid;\n            }\n        }\n        if (low != i - 1){\n            int p=segt.query(0,0,n-1,i,low);\n                ans = min(abs(p- k),ans);\n        }\n        int p2=segt.query(0,0,n-1,i,high);\n        ans = min(abs(k -p2),ans);\n    }\n    return ans;        \n    }\n};",
    "submit_ts": 1717300599.0
}