{
    "username": "a-soul_official",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int l = INT_MAX, r = INT_MIN, u = INT_MIN, d = INT_MAX;\n        int l_id = -1, r_id = -1, u_id = -1, d_id = -1;\n        int n = points.size();\n        for (int i = 0; i < n; i++) {\n            if (points[i][0] - points[i][1] > r) {\n                r = points[i][0] - points[i][1];\n                r_id = i;\n            }\n            if (points[i][0] - points[i][1] < l) {\n                l = points[i][0] - points[i][1];\n                l_id = i;\n            }\n            if (points[i][0] + points[i][1] > u) {\n                u = points[i][0] + points[i][1];\n                u_id = i;\n            }\n            if (points[i][0] + points[i][1] < d) {\n                d = points[i][0] + points[i][1];\n                d_id = i;\n            }\n        }\n       vector<int> ids = {l_id, r_id, u_id, d_id};\n       int ans = INT_MAX;\n       for (auto &id : ids) {\n           int l1 = INT_MAX, r1 = INT_MIN, u1 = INT_MIN, d1 = INT_MAX;\n           for (int i = 0; i < n; i++) {\n               if (i == id) continue;\n               l1 = min(l1, points[i][0] - points[i][1]);\n               r1 = max(r1, points[i][0] - points[i][1]);\n               u1 = max(u1, points[i][0] + points[i][1]);\n               d1 = min(d1, points[i][0] + points[i][1]);\n           }\n           ans = min(ans, max(r1-l1, u1-d1));\n       }\n       return ans;\n    }\n};"
}