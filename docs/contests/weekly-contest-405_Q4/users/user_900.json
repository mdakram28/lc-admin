{
    "username": "urvashi1210",
    "submission": "class Node {\npublic:\n    unordered_map<char,Node*>child;\n    int cost;\n    Node(){\n        cost=INT_MAX;\n    }\n};\n\nclass Trie {\npublic:\n    Node* root;\n    Trie(){\n        root=new Node();\n    }\n    void insert(string w,int cost){\n        Node* node=root;\n        for(char c:w){\n            if(node->child.find(c)==node->child.end()){\n                node->child[c]=new Node();\n            }\n            node=node->child[c];\n        }\n        //end node has cost\n        node->cost=cost;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& w, vector<int>& c) {\n        \n        map<string,int>mp;\n        for(int i=0;i<w.size();i++){\n            if(mp.count(w[i])==0){\n                mp[w[i]]=c[i];\n            }\n            else{\n                mp[w[i]]=min(c[i],mp[w[i]]);\n            }\n        }\n        \n        int n=target.size();\n        vector<int>dp(n+1,INT_MAX);\n        dp[0]=0;\n    \n        Trie trie;\n        for(auto x:mp){\n            trie.insert(x.first,x.second);\n        }\n            \n        for(int i=0;i<n;i++){\n            if(dp[i]!=INT_MAX){\n               Node* node=trie.root;\n                for(int j=i;j<n;j++){\n                    if(((node->child).find(target[j]))==(node->child.end()))break;\n                    node=node->child[target[j]];\n                    if(node->cost!=INT_MAX){\n                        // cout<<dp[j+1]<<\" \"<<dp[i]+node->cost<<endl;\n                        dp[j+1]=min(dp[j+1],dp[i]+node->cost);\n                    }\n                } \n            }\n        }\n        if(dp[n]==INT_MAX)return -1;\n        return dp[n];\n    }\n};",
    "submit_ts": "1720322751",
    "subm_id": "1312358187"
}