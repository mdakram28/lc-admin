{
    "username": "alex391a",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n\n        mxdis = 0\n        s = []\n        d = []\n        for i in range(n):\n            s.append((points[i][0] + points[i][1], i))            \n            d.append((points[i][0] - points[i][1], i))\n        s.sort()\n        d.sort()\n        res = max(s[-1][0] - s[1][0], d[-1][0] - d[0][0])\n        res = min(res, max(s[-2][0] - s[0][0], d[-1][0] - d[0][0]))\n        res = min(res, max(s[-1][0] - s[0][0], d[-1][0] - d[1][0]))\n        res = min(res, max(s[-1][0] - s[0][0], d[-2][0] - d[0][0]))\n        if s[-1][1] == d[-1][1]:\n            res = min(res, max(s[-2][0] - s[0][0], d[-2][0] - d[0][0]))\n        if s[-1][1] == d[0][1]:\n            res = min(res, max(s[-2][0] - s[0][0], d[-1][0] - d[1][0]))\n        if s[0][1] == d[-1][1]:\n            res = min(res, max(s[-1][0] - s[1][0], d[-2][0] - d[0][0]))\n        if s[0][1] == d[0][1]:\n            res = min(res, max(s[-1][0] - s[1][0], d[-1][0] - d[1][0]))\n            \n        return res"
}