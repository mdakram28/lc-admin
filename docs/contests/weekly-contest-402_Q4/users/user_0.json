{
    "username": "PurpleCrayon",
    "submission": "#define sz(v) int(v.size())\ntemplate<class T>\nstruct FT {\n    vector<T> bit;\n    FT(int n) : bit(n) {}\n    FT(){}\n    void upd(int i, T x) {\n        for (; i < sz(bit); i |= i+1) bit[i] += x;\n    }\n    T qry(int r) {\n        T ans = T();\n        for (++r; r > 0; r &= r-1) ans += bit[r-1];\n        return ans;\n    }\n    T qry(int l, int r) {\n        if (l > r) return 0;\n        return qry(r)-qry(l-1);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        auto f = [&](int i) -> int {\n            if (i <= 0 || i >= n-1) return 0;\n            return nums[i] > nums[i-1] && nums[i] > nums[i+1];\n        };\n        \n        FT<int> bit(n);\n        for (int i = 0; i < n; i++) {\n            bit.upd(i, f(i));\n        }\n        \n        vector<int> ans;\n        for (auto v : queries) {\n            if (v[0] == 1) {\n                ans.push_back(bit.qry(v[1]+1, v[2]-1));\n            } else {\n                for (int j = max(0, v[1]-1); j <= min(n-1, v[1]+1); j++) {\n                    bit.upd(j, -f(j));\n                }\n                nums[v[1]] = v[2];\n                for (int j = max(0, v[1]-1); j <= min(n-1, v[1]+1); j++) {\n                    bit.upd(j, +f(j));\n                }\n            }\n            // for (int i = 0; i < n; i++) cout << bit.qry(i, i) << ' ';\n            // cout << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718505616.0
}