{
    "username": "ram3k",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int hcut=0, vcut=0;\n\n        priority_queue<vector<int>> pq;\n        for(int i=0; i<m-1; i++)\n            pq.push({ horizontalCut[i], 1, i });\n\n        for(int i=0; i<n-1; i++)\n            pq.push({ verticalCut[i], 2, i });\n\n        long long ans = 0;\n        while(!pq.empty()) {\n            vector<int> curr = pq.top();\n            pq.pop();\n\n            if(curr[1] == 1) {\n                ans += 1LL*(vcut+1)*horizontalCut[curr[2]];\n                hcut++;\n            }\n            else {\n                ans += 1LL*(hcut+1)*verticalCut[curr[2]];\n                vcut++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925867",
    "subm_id": "1320268767"
}