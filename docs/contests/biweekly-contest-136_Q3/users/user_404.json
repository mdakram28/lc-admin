{
    "username": "fanwenshanmu",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < (n + 1) / 2; ++i) {\n            for (int j = 0; j < (m + 1) / 2; ++j) {\n                int u = grid[i][j] + grid[n - i - 1][j] + grid[i][m - j - 1] + grid[n - i - 1][m - j - 1];\n                if(2 * i + 1 != n and 2 * j + 1 != m) {\n                    ans += min(u, 4 - u);\n                }\n            }\n        }\n        int res = 0, d = 0;\n        if(n & 1) {\n            for (int j = 0; j < (m + 1) / 2; ++j) {\n                res += grid[(n + 1) / 2 - 1][j] != grid[(n + 1) / 2 - 1][m - j - 1];\n                d += max(grid[(n + 1) / 2 - 1][j], grid[(n + 1) / 2 - 1][m - j - 1]);\n            }\n        }\n        if(m & 1) {\n            for (int i = 0; i < (n + 1) / 2; ++i) {\n                res += grid[i][(m + 1) / 2 - 1] != grid[n - i - 1][(m + 1) / 2 - 1];\n                d += max(grid[i][(m + 1) / 2 - 1], grid[n - i - 1][(m + 1) / 2 - 1]);\n            }\n        }\n        if((n & 1) and (m & 1)) ans += grid[(n + 1) / 2 - 1][(m + 1) / 2 - 1];\n        d -= res; \n        if((d + res) & 1) {\n            if(res == 0) ans += 2; \n            else ans += res; \n        }\n        else ans += res; \n        return ans; \n    }\n};",
    "submit_ts": "1722699743",
    "subm_id": "1343220961"
}