{
    "username": "SamyakSinghania",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        if(k==0)    return 2;\n        if(k==1)    return 4;\n        int bits=0;\n        int num=k;\n        while(num>0){\n            bits++;\n            num=num/2;\n        }\n        int dist=(1<<bits)-k;\n        // bits+1 c dist;\n        long long dp[40][40];\n        memset(dp,-1,sizeof(dp));\n        auto func=[&](auto func,int n,int r)->long long{\n            if(n<r){\n                return 0;\n            }\n            if(dp[n][r]!=-1)    return dp[n][r];\n            if(r == 0){\n                return 1;\n            }\n            if(r == 1){\n                return n;\n            }\n            if(n == 1){\n                return 1;\n            }\n            long long res=func(func,n-1,r-1)+func(func,n-1,r);\n            return dp[n][r]=res;\n        };\n        long long ans=func(func,bits+1,dist);\n        if((k&(k-1))==0)    ans=ans+1;\n        return ans;\n    }\n};",
    "submit_ts": 1716089899.0
}