{
    "username": "hillfighter2908",
    "submission": "class Solution {\npublic:\n    int st[400005];\n    int lz[400005];\n    \n    void update_range(int si, int ss, int se, int qs, int qe, int v) {\n        if (lz[si] != -1) {\n            st[si] = (se - ss + 1)*lz[si];\n            \n            if (ss != se) {\n                lz[2*si + 1] = lz[si];\n                lz[2*si + 2] = lz[si];\n            }\n            \n            lz[si] = -1;\n        }\n        \n        if (ss>se || ss>qe || se<qs) return;\n        \n        if (ss >= qs && se <= qe) {\n            st[si] = (se - ss + 1)*v;\n            if (ss != se) {\n                lz[2*si + 1] = v;\n                lz[2*si + 2] = v;\n            }\n            return;\n        }\n        \n        int m = (ss + se)/2;\n        update_range(2*si+1,ss,m,qs,qe,v);\n        update_range(2*si+2,m+1,se,qs,qe,v);\n        \n        st[si] = st[2*si+1] + st[2*si+2];\n    }\n    \n    int range_sum(int ss, int se, int qs, int qe, int si) {\n        if (lz[si] != -1) {\n            st[si] = (se - ss + 1)*lz[si];\n            \n            if (ss != se) {\n                lz[2*si + 1] = lz[si];\n                lz[2*si + 2] = lz[si];\n            }\n            \n            lz[si] = -1;\n        }\n        \n        if (ss>se || ss>qe || se<qs) return 0;\n        \n        if (ss>=qs && se<=qe) return st[si];\n        \n        int m = (ss + se)/2;\n        return range_sum(ss,m,qs,qe,2*si+1) + range_sum(m+1,se,qs,qe,2*si+2);\n    }\n    \n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n\n        vector<int> ans;\n        \n        memset(lz,-1,sizeof(lz));\n        \n        update_range(0,0,n-1,0,n-2,1);\n        \n        for (int i = 0; i<q.size(); ++i) {\n            update_range(0,0,n-1,q[i][0] + 1, q[i][1] - 1, 0);\n            \n            ans.push_back(range_sum(0,n-1,0,n-1,0));\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722743864",
    "subm_id": "1343801383"
}