{
    "username": "agix",
    "submission": "#define LL long long\n\nclass Solution {\npublic:\n    int C(int n, int k) {\n        double res = 1;\n        for (int i = 1; i <= k; ++i)\n            res = res * (n - k + i) / i;\n        return (int)(res + 0.01);\n    }\n    \n    int waysToReachStair(int k) {\n        if (k == 0)\n        {\n            return 2;\n        }\n        if (k == 1)\n        {\n            return 4;\n        }\n        \n        int ans = 0;\n        \n        int diff = k - 1;\n        \n        vector<LL> pow(31);\n        pow[0] = 1;\n        for (int i = 1; i <= 30; i++)\n        {\n            pow[i] = pow[i - 1] * 2;\n        }\n        \n        vector<LL> sums(32);\n        for (int i = 0; i <= 30; i++)\n        {\n            sums[i + 1] = sums[i] + pow[i];\n        }\n        \n        for (int i = 1; i <= 30; i++)\n        {\n            for (int j = 0; j <= i + 1; j++)\n            {\n                if (sums[i] - j == diff)\n                {\n                    cout << i << \" \" << j << endl;\n                    \n                    if (j == i + 1)\n                    {\n                        ans++;\n                    }\n                    else if (j == i)\n                    {\n                        ans += C(i + 1, j);\n                    }\n                    else\n                    {\n                        ans += C(i + 1, j);\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716089578.0
}