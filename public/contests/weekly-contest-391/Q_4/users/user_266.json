{
    "username": "sun-man-man",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n\n        n = len(points)\n        # (x+y,x-y,-x-y,-x+y)\n\n        pre = [[[float(\"inf\"), float(\"-inf\")] for _ in range(4)]\n               for _ in range(n+1)]\n        suf = [[[float(\"inf\"), float(\"-inf\")] for _ in range(4)]\n               for _ in range(n+2)]\n\n        pmx = [[float(\"inf\"), float(\"-inf\")] for _ in range(4)]\n        smx = [[float(\"inf\"), float(\"-inf\")] for _ in range(4)]\n\n        p1 = [float(\"-inf\")]*n\n        p2 = [float(\"-inf\")]*n\n\n        for i in range(n):\n            x, y = points[i]\n            ds = [x+y, x-y, -x-y, -x+y]\n            for j in range(4):\n                pre[i+1][j][0] = min(pre[i][j][0], ds[j])\n                pre[i+1][j][1] = max(pre[i][j][1], ds[j])\n            if i:\n                p1[i] = p1[i-1]\n            p1[i] = max(p1[i], ds[0]+pre[i][2][1])\n            p1[i] = max(p1[i], ds[1]+pre[i][3][1])\n            p1[i] = max(p1[i], ds[2]+pre[i][0][1])\n            p1[i] = max(p1[i], ds[3]+pre[i][1][1])\n\n        for i in range(n-1, -1, -1):\n            x, y = points[i]\n            ds = [x+y, x-y, -x-y, -x+y]\n            for j in range(4):\n                suf[i+1][j][0] = min(suf[i+2][j][0], ds[j])\n                suf[i+1][j][1] = max(suf[i+2][j][1], ds[j])\n            p2[i] = max(p2[i], ds[0]+suf[i+2][2][1])\n            p2[i] = max(p2[i], ds[1]+suf[i+2][3][1])\n            p2[i] = max(p2[i], ds[2]+suf[i+2][0][1])\n            p2[i] = max(p2[i], ds[3]+suf[i+2][1][1])\n            if i < n-1:\n                p2[i] = max(p2[i], p2[i+1])\n\n        ans = float(\"inf\")\n        for i in range(n):\n            tmp = float(\"-inf\")\n            if i:\n                tmp = max(tmp, p1[i-1])\n                # x, y = points[i-1]\n                # ds = [x+y, x-y, -x-y, -x+y]\n                # tmp = max(tmp, ds[0]+pre[i][2][1])\n                # tmp = max(tmp, ds[1]+pre[i][3][1])\n                # tmp = max(tmp, ds[2]+pre[i][0][1])\n                # tmp = max(tmp, ds[3]+pre[i][1][1])\n            if i != n-1:\n                tmp = max(tmp, p2[i+1])\n                # x, y = points[i+1]\n                # ds = [x+y, x-y, -x-y, -x+y]\n                # tmp = max(tmp, ds[0]+suf[i+2][2][1])\n                # tmp = max(tmp, ds[1]+suf[i+2][3][1])\n                # tmp = max(tmp, ds[2]+suf[i+2][0][1])\n                # tmp = max(tmp, ds[3]+suf[i+2][1][1])\n            if i and i != n-1:\n                tmp = max(tmp, pre[i][0][1]+suf[i+2][2][1])\n                tmp = max(tmp, pre[i][1][1]+suf[i+2][3][1])\n                tmp = max(tmp, pre[i][2][1]+suf[i+2][0][1])\n                tmp = max(tmp, pre[i][3][1]+suf[i+2][1][1])\n\n            ans = min(ans, tmp)\n\n        return ans"
}