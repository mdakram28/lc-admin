{
    "username": "AbdullahAlabd",
    "submission": "class Solution {\n\nstatic const int N = 1<<16; // a power of two greater than max n\nstruct segTree {\n\n    int tree[N<<1];\n    int I = INT_MIN; // operation identity.\n\n    int op(int a, int b) { // operation.\n        return max(a, b);\n    }\n\n    segTree() {\n        memset(tree, I, sizeof tree);\n    }\n\n    void build() {\n        for(int i = N-1; i; i--) {\n            tree[i] = op(tree[i<<1], tree[i<<1|1]);\n        }\n    }\n\n    void update(int idx, int val) {\n        idx += N;\n        tree[idx] = val;\n        for (idx >>= 1; idx; idx >>= 1) {\n            tree[idx] = op(tree[idx<<1], tree[idx<<1|1]);\n        }\n    }\n\n    int get(int l, int r) {\n        int res = I;\n        l += N; r += N;\n        while (l <= r) {\n            if(l&1) res = op(res, tree[l++]);\n            if(!(r&1)) res = op(res, tree[r--]);\n            l >>= 1; r >>= 1;\n        }\n        return res;\n    }\n};\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        segTree sgTree;\n        set<pair<int, int>> segs;// end, start\n        segs.insert({N - 1, 0});\n        vector<bool> ans;\n        for(auto q : queries) {\n            if(q[0] == 1) {\n                int x = q[1];\n                auto seg = segs.lower_bound({x, -1});\n                int ed = seg->first;\n                int st = seg->second;\n                segs.erase({ed, st});\n\n                segs.insert({x, st});\n                segs.insert({ed, x});\n                sgTree.update(x, x - st);\n                sgTree.update(ed, ed - x);\n            } else {\n                // type 2\n                int x = q[1], sz = q[2];\n                auto seg = segs.lower_bound({x, -1});\n                int maxAfter = x - seg->second;\n                int maxBefore = sgTree.get(0, seg->second);\n                int maxAvailable = max(maxBefore, maxAfter);\n                ans.push_back(maxAvailable >= sz);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716652759",
    "subm_id": "1267671272"
}