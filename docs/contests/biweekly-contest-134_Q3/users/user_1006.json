{
    "username": "kiran2244",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n= colors.size(); \n        int cnt = 0; \n \n        if (k == 1) { \n           \n            return n; \n        } \n \n        int len = 1; \n        int i = 1; \n        while (i < n + k - 1) { \n            int curr = i; \n            int prev = i - 1; \n \n        \n            if (curr>= n) { \n                curr -= n; \n            } \n            if (prev >= n) { \n                prev -= n; \n            } \n \n            if (colors[curr] != colors[prev]) { \n                len++; \n            } else { \n                len = 1; \n            } \n \n           \n            if (len >= k) { \n                cnt++; \n            } \n \n            i++; \n        } \n \n        return cnt; \n    }\n};",
    "submit_ts": "1720279586",
    "subm_id": "1311757187"
}