{
    "username": "\u8c2d",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        m = board.length;\n        n = board[0].length;\n        int[][][] maxBoard = new int[m][3][2];\n        for (int i = 0; i < m; i++) {\n            maxBoard[i][0][0] = -1_000_000_007;\n            maxBoard[i][1][0] = -1_000_000_007;\n            maxBoard[i][2][0] = -1_000_000_007;\n            for (int j = 0; j < n; j++) {\n                add(maxBoard[i], board[i][j],j);\n            }\n        }\n        int[] column = new int[3];\n        Arrays.fill(column, -1);\n        dfs(maxBoard,0,0,column,0);\n        return ans;\n    }\n    long ans = Long.MIN_VALUE >> 1;\n    int m;\n    int n;\n    private void dfs(int[][][] maxBoard, int k,int row, int[] column, long sum) {\n        if (k == 3) {\n            ans = Math.max(ans, sum);\n            return;\n        }\n        for (int i = row; i < m; i++) {\n            int[][] cur = maxBoard[i];\n            for (int j = 0; j < 3; j++) {\n                int curC = cur[j][1];\n                if (curC == column[0] || curC == column[1]) {\n                    continue;\n                }\n                int e = maxBoard[i][j][0];\n                column[k] = curC;\n                dfs(maxBoard, k + 1, i + 1, column, sum + e);\n                column[k] = -1;\n            }\n        }\n    }\n    private void add(int[][] arr, int cur, int column) {\n        for (int i = 0; i < 3; i++) {\n            if (cur >= arr[i][0]) {\n                for (int j = 2; j > i; j--) {\n                    arr[j][0] = arr[j - 1][0];\n                    arr[j][1] = arr[j - 1][1];\n                }\n                arr[i][0] = cur;\n                arr[i][1] = column;\n                break;\n            }\n        }\n    }\n}",
    "submit_ts": "1723908798",
    "subm_id": "556332896"
}