{
    "username": "mkliac",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        // if row&col pl, must %4 == 0 if m >= 2 && n >= 2\n        // if flip begin/end can clear 2 palindromic, take\n        int m = grid.size(), n = grid[0].size();\n        int res = 0;\n        for (int i = 0; i < m/2; i++) {\n            for (int j = 0; j < n/2; j++) {\n                int ones = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                res += min(ones, 4 - ones); \n            }\n        }\n\n        int res2 = m%2 == 1 && n%2 == 1 && grid[m/2][n/2] == 1;\n        int flip = 0, ones = 0;\n        if (m%2 == 1) {\n            for (int i = 0; i < n/2; i++) {\n                if (grid[m/2][i] != grid[m/2][n-1-i]) {\n                    flip++;\n                } else if (grid[m/2][i] == 1) {\n                    ones += 2;\n                }\n            }\n        }\n\n        if (n%2 == 1) {\n            for (int j = 0; j < m/2; j++) {\n                if (grid[j][n/2] != grid[m-1-j][n/2]) {\n                    flip++;\n                } else if (grid[j][n/2] == 1) {\n                    ones += 2;\n                }\n            }\n        }\n        if (ones%4 == 0)\n            return res + res2 + flip;\n        if (ones%4 + flip*2 >= 4)\n            return res + res2 + flip;\n\n        return res + res2 + flip + 4 - ones%4;\n    }\n};",
    "submit_ts": "1722699648",
    "subm_id": "1343218055"
}