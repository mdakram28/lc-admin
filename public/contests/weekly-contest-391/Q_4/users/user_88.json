{
    "username": "kuromilover",
    "submission": "int premn[200005], premx[200005];\nint ans[200005];\nint x[200005], y[200005], a[200005], b[200005];\nint d[4][2] = {{1, 1}, {1, -1}, {-1, 1}, {-1, -1}};\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        for (int i = 0; i < n; i ++) {\n            x[i + 1] = points[i][0], y[i + 1] = points[i][1];\n        }\n        int inf = 0x3f3f3f3f;\n        premn[0] = inf, premx[0] = -inf;\n        for (int i = 1; i <= n; i ++) ans[i] = -inf;\n        for (int r = 0; r < 4; r ++) {\n            for (int i = 1; i <= n; i ++)\n                a[i] = x[i] * d[r][0], b[i] = y[i] * d[r][1];\n            int ans1 = inf, ans2 = -inf;\n            for (int i = 1; i <= n; i ++) {\n                premn[i] = min(premn[i - 1], a[i] + b[i]);\n                premx[i] = max(premx[i - 1], a[i] + b[i]);\n            }\n            int sufmn = inf, sufmx = -inf;\n            for (int i = n; i >= 1; i --) {\n                ans[i] = max(ans[i], max(premx[i - 1], sufmx) - min(premn[i - 1], sufmn));\n                sufmn = min(sufmn, a[i] + b[i]);\n                sufmx = max(sufmx, a[i] + b[i]);\n            }\n        }\n        int sum = inf;\n        for (int i = 1; i <= n; i ++) sum = min(sum, ans[i]);\n        return sum;\n    }\n};"
}