{
    "username": "ritik_369",
    "submission": "\nint f(vector < int >  & vec  , int k , vector<vector<int>> & dp)\n{\n   int n = vec.size() ; \n   for(int j = 0 ; j <= k; j += 1)\n   {\n      vector < int  > mp(n + 2 , 0) , mp2(n + 2 , 0) ; \n      multiset < int > ms ; \n      ms.insert(0) ; \n      for(int i = 1 ; i <= n ; i += 1)\n      {\n         int here = vec[i-1] ; \n         if(j-1 >= 0)\n         {\n            mp[here] = max(mp[here] , dp[j-1][i]) ; \n            ms.insert(mp[here]) ; \n         }\n         dp[j][i] = max(mp[here] , 1) ; \n         dp[j][i] = max(dp[j][i] , mp2[here] + 1) ; \n         if(mp[here] != 0)\n            ms.erase(ms.find(mp[here])) ; \n         dp[j][i] = max(dp[j][i] , *ms.rbegin() + 1) ; \n         if(mp[here] != 0)\n            ms.insert(mp[here]) ; \n         mp2[here] = max(mp2[here] , dp[j][i]) ; \n      }\n   }\n   int ans = 0 ; \n   for(int i=1 ; i <= n ; i += 1)\n      ans = max(ans , dp[k][i]) ; \n   return ans ; \n}\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) \n    {\n        int n = nums.size() ; \n        map < int , int > mp ; \n        for(auto a : nums)\n         mp[a] ; \n         int idx = 1 ; \n         for(auto  & [a , b] : mp)\n            b = idx ++  ; \n         for(auto  & a : nums)\n            a = mp[a] ; \n\n        vector<vector<int>>dp(k + 2 , vector < int > (n + 2 , 0)) ; \n        // k = 0 ; \n        return f(nums , k , dp) ; \n    }\n};\n",
    "submit_ts": "1717861029",
    "subm_id": "1281777338"
}