{
    "username": "conner1231230",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> bitmp(31, 0);\n        int l = 0, r = 0, ans = INT_MAX;\n        int bit = 0, temp = 0;\n        temp = nums[0];\n        bit = 0;\n        while (temp) {\n            bitmp[bit] += temp%2;\n            bit++;\n            temp /= 2;\n        }\n        \n        while (r < n) {\n            \n\n            \n            int after_ans = 0;\n            bit = 0;\n            while (bit < 31) {\n                if (bitmp[bit] == r-l+1)\n                    after_ans += pow(2, bit);\n                bit++;\n\n            }\n            // cout<<after_ans<<endl;\n            ans = min(ans, abs(after_ans-k));\n            \n            if (after_ans < k) {\n                temp = nums[l];\n                bit = 0;\n                while (temp) {\n                    bitmp[bit] -= temp%2;\n                    bit++;\n                    temp /= 2;\n                }\n                l++;\n                if (l > r) {\n                    r = l;\n                    if (r < n) {\n                        temp = nums[r];\n                        bit = 0;\n                        while (temp) {\n                            bitmp[bit] += temp%2;\n                            bit++;\n                            temp /= 2;\n                        }\n                    }\n                }\n            }\n            else {\n                r++;\n                if (r < n) {\n                    temp = nums[r];\n                    bit = 0;\n                    while (temp) {\n                        bitmp[bit] += temp%2;\n                        bit++;\n                        temp /= 2;\n                    }\n                }\n            }\n               \n            \n            \n        }\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": 1717299638.0
}