{
    "username": "heartunderblade",
    "submission": "class Solution\n{\npublic:\n    vector<long long> countKConstraintSubstrings(string const &s, int const k, vector<vector<int>> const &queries)\n    {\n        auto const [max_lengths, prefix_sums] = foo(s, k);\n        vector<long long> ans; ans.reserve(queries.size());\n        for (vector<int> const &q : queries)\n        {\n            long long const l = q[0], r = q[1], len = r - l + 1;\n            long long const where = bar(max_lengths, l, r + 1);\n            long long const lhs = (1 + (where - l)) * (where - l) / 2;\n            long long const rhs = prefix_sums[r + 1] - prefix_sums[where];\n            ans.push_back(lhs + rhs);\n        }\n        return ans;\n    }\n\nprivate:\n    static int bar(vector<long long> const &max_lengths, int l, int r) noexcept\n    {\n        int const ll = l;\n        while (l != r)\n        {\n            int const m = (l + r) / 2;\n            if (max_lengths[m] - (m - ll + 1) <= 0)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n\n    static pair<vector<long long>, vector<long long>> foo(string const &s, int const k)\n    {\n        int const n = s.size();\n        vector<long long> len(n), prefix_sum(n + 1);\n        for (int i = 0, last = -1, cnt0 = 0, cnt1 = 0; i != n; ++i)\n        {\n            if (s[i] == '0') ++cnt0;\n            else ++cnt1;\n            while (cnt0 > k && cnt1 > k)\n            {\n                if (s[++last] == '0') --cnt0;\n                else --cnt1;\n            }\n            len[i] = i - last;\n        }\n        for (int i = 0; i != n; ++i)\n            prefix_sum[i + 1] = prefix_sum[i] + len[i];\n        return make_pair(move(len), move(prefix_sum));\n    }\n};",
    "submit_ts": "1723953073",
    "subm_id": "556415362"
}