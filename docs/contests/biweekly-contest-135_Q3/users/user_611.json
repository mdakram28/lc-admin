{
    "username": "869277160",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        half = n // 2\n        # max_count = n * 2  # \u5168\u90e8\u6362\u6210\u4e00\u6837\u7684\n        all_diffs = [ ]\n        for i in range(half):\n            all_diffs.append(abs(nums[i] - nums[n - i - 1]))\n\n        diff_freq = Counter(all_diffs)\n        targets = sorted(list(diff_freq.keys()), key = lambda x: (-diff_freq[x], x))\n        min_res = inf\n        for target_count in targets:\n            res = 0\n            for i in range(half):\n                # print(target_count, res)\n                if abs(nums[i] - nums[n - i - 1]) != target_count:\n                    # \u5982\u679c\u6240\u9700\u8981\u4fee\u6539\u6210\u4e3a\u7684 nums[n - i - 1] \u4e0d\u5408\u7406\uff0c\u5219\u4e24\u4e2a\u90fd\u4fee\u6539\n                    if not (0 <= nums[i] + target_count <= k or 0 <= nums[i] - target_count <= k or\n                            0 <= nums[n - i - 1] + target_count <= k or 0 <= nums[n - i - 1] - target_count <= k):\n                        res += 2\n                    else:\n                        res += 1\n                else:\n                    continue\n\n            if res < min_res:\n                min_res = res\n            else:\n                break\n\n        return min_res",
    "submit_ts": "1721488762",
    "subm_id": "548315884"
}