{
    "username": "21Cash",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n// --------------------- Debug Template ----------------------------\n\n#define DEBUG_OUT\n// #define DEBUG_TC_NUM\n\nvoid __print(int x) { cout << x; }\nvoid __print(long x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(unsigned x) { cout << x; }\nvoid __print(unsigned long x) { cout << x; }\nvoid __print(unsigned long long x) { cout << x; }\nvoid __print(float x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <size_t N>\nvoid __print(const bitset<N>& x) { cout << x; };\n\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x);\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v);\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n    cout << '{';\n    __print(x.first);\n    cout << \", \";\n    __print(x.second);\n    cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n    int f = 0;\n    cout << '{';\n    for (auto &i : x) cout << (f++ ? \", \" : \"\"), __print(i);\n    cout << \"}\";\n}\nvoid _print() { cout << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n    __print(t);\n    if (sizeof...(v)) cout << \", \";\n    _print(v...);\n}\n\ntemplate<class T> bool ckmin(T&a, const T& b) { bool B = a > b; a = min(a,b); return B; }\ntemplate<class T> bool ckmax(T&a, const T& b) { bool B = a < b; a = max(a,b); return B; }\n\n\n#ifdef DEBUG_OUT\n\n#define dout std::cout\n\n#define dbg(x...)                                                            \\\n    cout << \"[\" << #x << \"] = [\"; \\\n    _print(x);                                                               \\\n    // cout << endl;\n\n// NOTE : If Debugging in Leetcode, Replace (__LINE__) With (__LINE__ - 9)\n#define f_dbg(x...)                                                            \\\n    cout << \"[\" << __func__ << \":\" << (__LINE__)  << \" [\" << #x << \"] = [\"; \\\n    _print(x);                                                               \\\n    // cout << endl;\n    \n#else\n\n#define dout if (false) std::cout\n#define dbg(x...)\n#define f_dbg(x...)\n\n#endif  \n  \n// -------------------------- Debug Template Ends --------------------------------------\n\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int K) {\n        vector<int> nums = colors;\n        \n        int j = 0;\n        \n        for(int i = 0; i < K - 1; i++) {\n            nums.push_back(colors[j++]);\n        }\n        \n        \n        int l = 0, N = nums.size(), res = 0;\n        \n        \n        for(int r = 1; r < N; r++) {\n            if(nums[r] == nums[r - 1]) {\n                l = r;\n            }\n            \n            while(r - l + 1 > K) {\n                l++;\n            }\n            \n            if(r - l + 1 == K) {\n                res++;\n            }\n            \n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720279166",
    "subm_id": "1311740202"
}