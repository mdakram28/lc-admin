{
    "username": "Kushagra Agarwal",
    "submission": "def mod_7(num_str: str) -> int:\n    remainder = 0\n    for digit in num_str:\n        remainder = (remainder * 10 + int(digit)) % 7\n    return remainder\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in (1, 3, 9): return '9'*n\n        if k == 5: return ('5' + ('9'*(n-2)) + '5')[:n]\n        if k == 2: return ('8' + ('9'*(n-2)) + '8')[:n]\n        if k == 4: return ('88' + ('9'*(n-4)) + '88')[:n]\n        if k == 8: return ('888' + ('9'*(n-6)) + '888')[:n]\n        if k == 6: \n            if n < 3: return '6'*n\n            if n >= 3 and n&1: return f\"8{'9'*((n-3)//2)}8{'9'*((n-3)//2)}8\"\n            return f\"8{'9'*((n-4)//2)}77{'9'*((n-4)//2)}8\"\n        if k == 7: \n            if n < 3: return '7'*n\n            if n % 6 == 0: return '9'*n\n\n            num = '9'*((n+1)//2 - 1)\n\n            if n & 1:\n                res = num + '0' + num\n                md = mod_7(res)\n                fillers = [ch for ch in '987654321']\n                for filler in fillers:\n                    if (mod_7(filler + '0'*(len(num))) + md)%7 == 0: \n                        return num + filler + num\n            else:\n                res = num + '00' + num\n                md = mod_7(res)\n                fillers = [ch*2 for ch in '987654321']\n                for filler in fillers:\n                    if (mod_7(filler + '0'*(len(num))) + md)%7 == 0: \n                        return num + filler + num",
    "submit_ts": "1723953111",
    "subm_id": "1359812644"
}