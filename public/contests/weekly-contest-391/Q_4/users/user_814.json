{
    "username": "dkyyy",
    "submission": "class Solution:\n    def minimumDistance(self, ps: List[List[int]]) -> int:\n        ps.sort(key=lambda x: x[0])\n        # print(ps)\n        n = len(ps)\n        \n        def f(i, j):\n            return abs(ps[i][0] - ps[j][0]) + abs(ps[i][1] - ps[j][1])\n        \n        def maxdis(exclude):\n            ti = li = -1\n            mv = 0\n            mp = set()\n\n            for i in range(n):\n                if i == exclude:\n                    continue\n                if ti == -1:\n                    ti = i\n                    li = i\n                    continue\n                tv = f(i, ti)\n                if tv > mv:\n                    mv = tv\n                    mp = set([i, ti])\n                elif tv == mv:\n                    mp.add(i)\n                    mp.add(ti)\n                lv = f(i, li)\n                if lv > mv:\n                    mv = lv\n                    mp = set([i, li])\n                elif lv == mv:\n                    mp.add(i)\n                    mp.add(li)\n                x, y = ps[i]\n                if y - ps[ti][1] > x - ps[ti][0]:\n                    ti = i\n                if ps[li][1] - y > x - ps[li][0]:\n                    li = i\n            return mv, mp\n        \n        mv, mp = maxdis(-10)\n        # print(mv, mp)\n        # if len(mp) > 2:\n            # return mv\n        for x in mp:\n            cv, cp = maxdis(x)\n            # print(x, cv, cp)\n            mv = min(mv, cv)\n        return mv"
}