{
    "username": "money_82d",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n         int n = grid.size();\n        int m = grid[0].size();\n        int res = 0,val=0,cnt=0;\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> dir = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n\n                int o = 0;\n                for (int it : dir) {\n                    o += it;\n                }\n\n                res += min(o, 4 - o);\n            }\n        }     \n        \n           if (m % 2 != 0) {\n            int mc = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][mc] != grid[n - i - 1][mc]) {\n                    res += 1;\n                    val += 1;\n                } else {\n                    if (grid[i][mc] == 1) {\n                        cnt += 1;\n                    }\n                }\n            }\n        }\n        if (n % 2 != 0) {\n            int mr = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[mr][j] != grid[mr][m - j - 1]) {\n                    res += 1;\n                    val += 1;\n                } else {\n                    if (grid[mr][j] == 1) {\n                        cnt += 1;\n                    }\n                }\n            }\n        }\n\n\n\n        if (n % 2 != 0 and m % 2 != 0 and grid[n / 2][m / 2] == 1) {\n            res += 1;\n        }\n\n        if (val == 0 and cnt % 2 != 0) {\n            res += 2;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722700100",
    "subm_id": "1343231682"
}