{
    "username": "Malwareman007",
    "submission": "class Solution {\n  public: int minChanges(vector < int > & nums, int k) {\n    map < int, vector < int >> m;\n    vector < int > v;\n    for (int i = 0; i < nums.size() / 2; i++) {\n      int a = nums[i], b = nums[nums.size() - i - 1];\n      int diff = abs(a - b);\n      int X = max({\n        a,\n        b,\n        k - a,\n        k - b\n      });\n      m[diff].push_back(X);\n      v.push_back(X);\n    }\n    int ans = nums.size();\n    sort(v.begin(), v.end());\n    for (auto & val: m) {\n      int diff = val.first;\n      int T = lower_bound(v.begin(), v.end(), diff) - v.begin();\n      T = T * 2 + (nums.size() / 2 - T);\n      for (auto & X: val.second) {\n        if (X < diff) {\n          T -= 2;\n        } else {\n          T -= 1;\n        }\n      }\n      ans = min(ans, T);\n    }\n    return ans;\n  }\n};",
    "submit_ts": "1721488683",
    "subm_id": "1327429934"
}