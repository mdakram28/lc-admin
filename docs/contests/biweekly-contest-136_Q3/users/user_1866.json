{
    "username": "infinte_tsukuyomi",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        \n        if(m%2==1){\n            if(n%2==1){\n                if(grid[n/2][m/2]==1) ans++;\n            }\n        }\n\n        unordered_map<int, int> shift;\n        if (m % 2 == 1) {\n            int a = 0, b = n - 1;\n            while (a < b) {\n                int temp = grid[a][m / 2] + grid[b][m / 2];\n                b -= 1;a += 1;\n                shift[temp] += 1;\n            }\n        }\n        \n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int temp = grid[n / 2][a] + grid[n / 2][b];\n                b -= 1;a += 1;\n                shift[temp] += 1;\n            }\n        }\n\n\n        if (shift[2] % 2 !=1) {\n            ans += shift[1];\n            \n        } else {\n            if (shift[1] <= 0) {\n                ans += 2;\n            } else {\n                ans += shift[1];\n            }\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> cells = {\n                    grid[i][j],\n                    grid[n - 1 - i][j],\n                    grid[i][m - 1 - j],\n                    grid[n - 1 - i][m - 1 - j]\n                };\n                \n                int count0 = count(cells.begin(), cells.end(), 0);\n                int count1 = 4 - count0; \n\n                ans += min(count0, count1);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700022",
    "subm_id": "1343229332"
}