{
    "username": "Deva_Agulla",
    "submission": "class SGTree{\n   vector<int> sg;\n   public:\n    SGTree(int n){\n     sg.resize(4*n+1);\n   }\n   \n   void build(int ind ,int low ,int high,vector<int>& arr){\n      if(low==high){\n          sg[ind] = arr[low];\n          return ;\n      }\n      \n      int mid = (low+high) >> 1;\n      build(2*ind+1,low,mid,arr);\n      build(2*ind+2,mid+1,high,arr);\n      sg[ind] = sg[2*ind+1]&sg[2*ind+2];\n   }\n   //get minimum element in a range\n   int query(int ind ,int low,int high,int l,int r){\n      //non overlap \n      // l r low high  or low high l r\n      if(r < low or l > high) return INT_MAX;\n      // complete overlap\n      // l low high r\n      if(low >= l and high <=r) return sg[ind];\n      \n      int mid = (high+low) >> 1;\n      int left = query(2*ind+1,low,mid,l,r);\n      int right = query(2*ind+2,mid+1,high,l,r);\n      return left&right;\n   }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& arr, int k) {\n        int n = arr.size();\n        SGTree t1 = SGTree(n);\n         t1.build(0 ,0 ,n-1,arr);\n         long long ans = 0;\n        for(int i=0;i<n;i++){\n            int low = i;\n            int high = n-1;\n            int ind1 = -1;\n            while(low<=high){\n                int mid = (low+high)>>1;\n                int a = t1.query(0,0,n-1,i,mid);\n                if(a<=k-1){\n                    high=mid-1;\n                    ind1 = mid;\n                }\n                else{\n                    low = mid+1;\n                }\n            }\n            ind1=low;\n             low = i;\n             high = n-1;\n            int ind2 = -1;\n            while(low<=high){\n                int mid = (low+high)>>1;\n                int a = t1.query(0,0,n-1,i,mid);\n                if(a<=k){\n                    high=mid-1;\n                    ind2 = mid;\n                }\n                else{\n                    low = mid+1;\n                }\n            }\n            ind2 = low;\n            ans+=((long long)ind1-(long long)ind2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281288",
    "subm_id": "1311819683"
}