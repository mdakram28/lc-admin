{
    "username": "VimT",
    "submission": "impl Solution {\n    pub fn count_subarrays(nums: Vec<i32>, k: i32) -> i64 {\n        let len = nums.len();\n        let mut ors = vec![]; // (kk, index) \u8868\u793a \u4e0b\u6807 index \u4e3a\u7ed3\u5c3e\u7684\u5b50\u6570\u7ec4\u7684\u5de6\u7aef\u70b9\u6700\u63a5\u8fd1k\u7684\u503c\n        let mut result = 0;\n        for i in 0..len {\n            ors.push((i32::MAX, i, 1));\n            let mut j = 0;\n            for p in 0..ors.len() {\n                ors[p].0 &= nums[i];\n                if ors[p].0 == k {\n                    result += ors[p].2;\n                }\n                if ors[j].0 == ors[p].0 {\n                    if j == p { continue; }\n                    ors[j].2 += ors[p].2;  // \u53bb\u91cd\n                } else {\n                    j += 1;\n                    ors[j] = ors[p];\n                }\n            }\n            ors.truncate(j + 1);\n        }\n        result\n    }\n}",
    "submit_ts": "1720278076",
    "subm_id": "544560535"
}