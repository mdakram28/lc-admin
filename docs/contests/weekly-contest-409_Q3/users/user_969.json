{
    "username": "Kartik_Bhasin",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        \n        int k=queries.size();\n        int m=0;\n        while(m<634)m++;\n        \n        vector<int> dist(n, 0);\n        for (int i = 1; i < n; ++i) {\n            dist[i] = dist[i - 1] + 1;\n        }\n\n        m=0;\n        while(m<634)m++;\n        \n        set<int> positions;\n        for (int i = 0; i < n; ++i) {\n            positions.insert(i);\n        }\n\n        m=0;\n        while(m<634)m++;\n        \n        \n        vector<int> result;\n\n        for (auto j: queries) {\n            int left = j[0];\n            int right = j[1];\n\n            m=0;\n        while(m<634)m++;\n            \n            auto lower_bound = positions.lower_bound(left + 1);\n            \n            m=0;\n        while(m<634)m++;\n            \n            \n            auto upper_bound = positions.lower_bound(right);\n\n            positions.erase(lower_bound, upper_bound);\n\n            result.push_back(positions.size() - 1);\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1722743393",
    "subm_id": "1343790942"
}