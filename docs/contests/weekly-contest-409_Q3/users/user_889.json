{
    "username": "h_bugw7",
    "submission": "class Road {\npublic:\n    int start, end, rank;\n    int pf;\n    Road(int start, int end, int rank): start(start), end(end), rank(rank), pf(0) { }\n    bool operator<(const Road& r) {\n        return start < r.start || (start == r.start && end > r.end);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<Road> roads;\n        for(int i = 0; i < queries.size(); i++) roads.push_back(Road(queries[i][0], queries[i][1], queries.size() - i));\n        sort(roads.begin(), roads.end());\n        stack<Road> st;\n        for(Road& road: roads) {\n            while(!st.empty()) {\n                if(st.top().end <= road.start) st.pop();\n                else break;\n            }\n            if(st.empty()) {\n                st.push(road);\n                road.pf = road.rank;\n                continue;\n            }\n            if(road.rank < st.top().rank) continue;\n            road.pf = road.rank - st.top().rank;\n            st.push(road);\n        }\n        vector<int> res(queries.size()+1, 0);\n        vector<int> pf(n, 0);\n        pf[0] += queries.size();\n        for(Road& road: roads) {\n            pf[road.start] -= road.pf;\n            pf[road.end-1] += road.pf;\n        }\n        int sum = 0;\n        for(int i: pf) {\n            sum += i;\n            res[sum]++;\n        }\n        sum = n-1;\n        for(int& i: res) {\n            sum -= i;\n            i = sum;\n        }\n        res.pop_back();\n        return res;\n    }\n};",
    "submit_ts": "1722741387",
    "subm_id": "1343743780"
}