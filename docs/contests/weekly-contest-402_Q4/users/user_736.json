{
    "username": "shanmukh_2205",
    "submission": "class FenwickTree:\n    def __init__(self, size):\n        self.size=size\n        self.tree=[0] * (size+1)\n    def update(self, i, delta):\n        i+=1\n        while i<=self.size:\n            self.tree[i]+=delta\n            i+=i & -i\n    def q(self, i):\n        i+=1\n        sm=0\n        while i>0:\n            sm+=self.tree[i]\n            i-=i & -i\n        return sm\n    def rq(self, l, r):\n        return self.q(r)-self.q(l-1)\ndef peak(nums, i):\n    if i<=0 or i>=len(nums)-1:\n        return False\n    return nums[i]>nums[i-1] and nums[i]>nums[i+1]\n\nclass Solution(object):\n    def countOfPeaks(self, nums, queries):\n        n=len(nums)\n        fw=FenwickTree(n)\n        peaks=[False] * n\n        for i in range(1, n-1):\n            if peak(nums, i):\n                peaks[i]=True\n                fw.update(i, 1)        \n        res=[]\n        for q in queries:\n            if q[0] == 1:\n                li, ri=q[1], q[2]\n                if li == ri:\n                    res.append(0)\n                else:\n                    res.append(fw.rq(li+1, ri-1))\n            elif q[0] == 2:\n                ind, vali=q[1], q[2]\n                nums[ind]=vali\n                for i in range(max(1, ind-1), min(n-1, ind+2)):\n                    if peaks[i]:\n                        fw.update(i, -1)\n                    peaks[i]=peak(nums, i)\n                    if peaks[i]:\n                        fw.update(i, 1)\n        return res",
    "submit_ts": 1718508046.0
}