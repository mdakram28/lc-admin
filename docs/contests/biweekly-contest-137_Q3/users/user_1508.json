{
    "username": "\u559d\u597d\u597d",
    "submission": "import java.util.*;\n\nclass Solution {\n\n    long res = Long.MIN_VALUE;\n\n    public static void main(String[] args) {\n        int[][] array = {\n                {1, 2, 3},\n                {4, 5, 6},\n                {7, 8, 9}\n        };\n        Solution solution = new Solution();\n        System.out.println(solution.maximumValueSum(array));\n    }\n\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m = board[0].length;\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            Integer[] index = new Integer[m];\n            for (int j = 0; j < m; j++) {\n                index[j] = j;\n            }\n            int k = i;\n            Arrays.sort(index, (o1, o2) -> board[k][o2] - board[k][o1]);\n            // i*m+j\n            for (int j = 0; j < 3; j++) {\n                list.add(i * m + index[j]);\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            Integer[] index = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                index[i] = i;\n            }\n            int k = j;\n            Arrays.sort(index, (o1, o2) -> board[o2][k] - board[o1][k]);\n            // i*m+j\n            for (int i = 0; i < 3; i++) {\n                list.add(index[i] * m + j);\n            }\n        }\n        dfs(list, board, n, m);\n        return res;\n    }\n\n    void dfs(List<Integer> list, int[][] board, int n, int m) {\n        int size = list.size();\n        for (int i = 0; i < size; i++) {\n            int a = list.get(i);\n            int xa = a / m;\n            int ya = a % m;\n            for (int j = i + 1; j < size; j++) {\n                int b = list.get(j);\n                int xb = b / m;\n                int yb = b % m;\n                if (xb == xa || yb == ya) {\n                    continue;\n                }\n                for (int k = j + 1; k < size; k++) {\n                    int c = list.get(k);\n                    int xc = c / m;\n                    int yc = c % m;\n                    if (xb == xc || yb == yc||xa == xc || ya == yc) {\n                        continue;\n                    }\n                    res = Math.max(res, (long)board[xa][ya] + (long)board[xb][yb] + (long)board[xc][yc]);\n                }\n            }\n        }\n    }\n\n}",
    "submit_ts": "1723910329",
    "subm_id": "556340774"
}