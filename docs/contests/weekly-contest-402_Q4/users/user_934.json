{
    "username": "Rishab01",
    "submission": "class Solution {\npublic:\n    \n    struct FenwickTree {\n    vector<int> bit;  // binary indexed tree\n    int n;\n\n    FenwickTree(int n) {\n        this->n = n;\n        bit.assign(n, 0);\n    }\n\n    FenwickTree(vector<int> const &a) : FenwickTree(a.size()) {\n        for (size_t i = 0; i < a.size(); i++)\n            add(i, a[i]);\n    }\n\n    int sum(int r) {\n        int ret = 0;\n        for (; r >= 0; r = (r & (r + 1)) - 1)\n            ret += bit[r];\n        return ret;\n    }\n\n    int sum(int l, int r) {\n        if(l > r) return 0;\n        return sum(r) - sum(l - 1);\n    }\n\n    void add(int idx, int delta) {\n        for (; idx < n; idx = idx | (idx + 1))\n            bit[idx] += delta;\n    }\n};\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        FenwickTree t(nums.size()+2);\n        \n        nums.insert(begin(nums), INT_MAX);\n        nums.push_back(INT_MAX);\n        \n        for(int i=1; i<nums.size()-1; ++i)\n            if(max(nums[i-1], nums[i+1]) < nums[i])\n                t.add(i, 1);\n        \n        vector<int> res;\n\n        \n        for(auto& q : queries) {\n            \n            if(q[0] == 1) {\n                \n                q[1]++;\n                q[2]++;\n                \n                int subres = t.sum(q[1]+1, q[2]-1);\n                \n                res.push_back(subres);\n                \n            } else {\n                \n                q[1]++;\n                nums[q[1]] = q[2];\n                \n                for(int i=max(1, q[1]-1); i<=min(q[1]+1, (int) nums.size()-2); ++i) {\n                    \n                    if(nums[i] > max(nums[i-1], nums[i+1]))\n                        t.add(i, 1-t.sum(i, i));\n                    else if(nums[i] <= max(nums[i-1], nums[i+1]))\n                        t.add(i, -t.sum(i, i));\n                }\n           \n                \n            }\n            \n            \n        }\n        \n        return res;\n        \n        \n        \n    }\n};",
    "submit_ts": 1718508814.0
}