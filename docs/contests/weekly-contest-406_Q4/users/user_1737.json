{
    "username": "tyrantzhao",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // \u628a\u6c34\u5e73\u7ebf\u548c\u5782\u76f4\u7ebf\u7684\u5f00\u9500\u5206\u522b\u6392\u5e8f\u4e3a\u4ece\u5927\u5230\u5c0f\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        // \u521d\u59cb\u5316\u7ed3\u679c\u3001\u5f53\u524d\u6c34\u5e73\u5207\u5272\u6570\u548c\u5782\u76f4\u5207\u5272\u6570\n        long long result = 0;\n        int hCuts = 1, vCuts = 1;\n        int i = 0, j = 0;\n\n        // \u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f18\u5148\u5207\u5f00\u9500\u5927\u7684\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                result += (long long)horizontalCut[i] * vCuts;\n                i++;\n                hCuts++;\n            } else {\n                result += (long long)verticalCut[j] * hCuts;\n                j++;\n                vCuts++;\n            }\n        }\n\n        // \u5982\u679c\u8fd8\u6709\u5269\u4f59\u7684\u6c34\u5e73\u5207\u5272\n        while (i < horizontalCut.size()) {\n            result += (long long)horizontalCut[i] * vCuts;\n            i++;\n        }\n\n        // \u5982\u679c\u8fd8\u6709\u5269\u4f59\u7684\u5782\u76f4\u5207\u5272\n        while (j < verticalCut.size()) {\n            result += (long long)verticalCut[j] * hCuts;\n            j++;\n        }\n\n        return result; \n    }\n};",
    "submit_ts": "1720926436",
    "subm_id": "546446233"
}