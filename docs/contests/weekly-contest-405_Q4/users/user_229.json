{
    "username": "fsyun",
    "submission": "class Solution {\n    class Node {\n        int len, cost;\n        Node[] c;\n        Node(int len) {\n            this.len = len;\n            cost = -1;\n            c = new Node[26];\n        }\n        void add(String s, int pos, int x) {\n            if (pos == s.length()) {\n                if (cost == -1 || x < cost)\n                    cost = x;\n                return;\n            }\n            char ch = s.charAt(pos);\n            if (c[ch - 'a'] == null)\n                c[ch - 'a'] = new Node(len + 1);\n            c[ch - 'a'].add(s, pos + 1, x);\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = words.length;\n        Node root = new Node(0);\n        for (int i = 0; i < n; i++) {\n            StringBuilder sb = new StringBuilder();\n            for (int j = words[i].length() - 1; j >= 0; j--)\n                sb.append(words[i].charAt(j));\n            root.add(sb.toString(), 0, costs[i]);\n        }\n        char[] str = target.toCharArray();\n        int m = str.length;\n        int[] dp = new int[m + 1];\n        for (int i = 1; i <= m; i++) {\n            dp[i] = -1;\n            Node node = root;\n            for (int j = i; j > 0; j--) {\n                char ch = str[j - 1];\n                if (node.c[ch - 'a'] == null)\n                    break;\n                node = node.c[ch - 'a'];\n                if (node.cost != -1 && dp[j - 1] != -1) {\n                    int tmp = dp[j - 1] + node.cost;\n                    if (dp[i] == -1 || tmp < dp[i])\n                        dp[i] = tmp;\n                }\n            }\n        }\n        return dp[m];\n    }\n}",
    "submit_ts": "1720321833",
    "subm_id": "1312333513"
}