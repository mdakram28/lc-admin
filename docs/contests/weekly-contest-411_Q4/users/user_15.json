{
    "username": "JeffreyLC",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        const int n = s.length();\n        vector<int> v(n);\n        for (int l = 0, r = 0, zeros = 0, ones = 0; l < n; ++l) {\n            while (r < n) {\n                if (s[r] == '0' && zeros + 1 > k && ones > k) break;\n                if (s[r] == '1' && zeros > k && ones + 1 > k) break;\n                if (s[r] == '0') {\n                    ++zeros;\n                } else {\n                    ++ones;\n                }\n                ++r;\n            }\n            v[l] = r - 1;\n            if (s[l] == '0') {\n                --zeros;\n            } else {\n                --ones;\n            }\n        }\n        vector<long long> prefix_sum(n + 1);\n        for (int i = 0; i < n; ++i) {\n            prefix_sum[i + 1] = prefix_sum[i] + (v[i] - i + 1);\n        }\n        const int q = queries.size();\n        vector<long long> ans(q);\n        for (int i = 0; i < q; ++i) {\n            int ll = queries[i][0] - 1, rr = queries[i][1];\n            while (ll < rr) {\n                int mid = (ll + rr + 1) / 2;\n                if (v[mid] > queries[i][1]) {\n                    rr = mid - 1;\n                } else {\n                    ll = mid;\n                }\n            }\n            if (ll == queries[i][1]) {\n                ans[i] = prefix_sum[ll + 1] - prefix_sum[queries[i][0]];\n            } else if (ll == queries[i][0] - 1) {\n                int len = queries[i][1] - queries[i][0] + 1;\n                ans[i] = (long long) len * (len + 1) / 2;\n            } else {\n                ans[i] = prefix_sum[ll + 1] - prefix_sum[queries[i][0]];\n                int len = queries[i][1] - ll;\n                ans[i] += (long long) len * (len + 1) / 2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950759",
    "subm_id": "1359754302"
}