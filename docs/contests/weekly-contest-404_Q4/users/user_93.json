{
    "username": "qq1239426256",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size() + 1, m = edges2.size() + 1;\n        // \u8dd1bfs\n        vector<int> g1[n], g2[m];\n        vector<int> deg1(n), deg2(m);\n        for (int i = 0; i < n-1; i++) {\n            g1[edges1[i][0]].push_back(edges1[i][1]);\n            g1[edges1[i][1]].push_back(edges1[i][0]);\n            deg1[edges1[i][0]]++;\n            deg1[edges1[i][1]]++;\n        }\n        for (int i = 0; i < m-1; i++) {\n            g2[edges2[i][0]].push_back(edges2[i][1]);\n            g2[edges2[i][1]].push_back(edges2[i][0]);\n            deg2[edges2[i][0]]++;\n            deg2[edges2[i][1]]++;\n        }\n        queue<int> q1, q2;\n        for (int i = 0; i < n; i++) {\n            if (deg1[i] == 1) {\n                q1.push(i);\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            if (deg2[i] == 1) {\n                q2.push(i);\n            }\n        }\n        int step1 = 0, step2 = 0;\n        bool flag1 = false, flag2 = false;\n        while (!q1.empty()) {\n            int len = q1.size();\n            for (int i = 0; i < len; i++) {\n                int u = q1.front();\n                q1.pop();\n                for (auto v : g1[u]) {\n                    deg1[v]--;\n                    if (deg1[v] == 1) {\n                        q1.push(v);\n                    }\n                }\n            }\n            if (!q1.empty())\n                step1++;\n            if (q1.empty() && len >= 2) {\n                step1++;\n                flag1 = true;\n            }\n        }\n        while (!q2.empty()) {\n            int len = q2.size();\n            for (int i = 0; i < len; i++) {\n                int u = q2.front();\n                q2.pop();\n                for (auto v : g2[u]) {\n                    deg2[v]--;\n                    if (deg2[v] == 1) {\n                        q2.push(v);\n                    }\n                }\n            }\n            if (!q2.empty())\n                step2++;\n            if (q2.empty() && len >= 2) {\n                step2++;\n                flag2 = true;\n            }\n        }\n        int ans = step1 + step2 + 1;\n        if (!flag1)\n            ans = max(ans, step1 * 2);\n        else\n            ans = max(ans, step1 * 2 - 1);\n        if (!flag2)\n            ans = max(ans, step2 * 2);\n        else\n            ans = max(ans, step2 * 2 - 1);\n        return ans;\n    }\n};",
    "submit_ts": "1719717002",
    "subm_id": "1304379824"
}