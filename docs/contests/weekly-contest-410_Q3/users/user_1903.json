{
    "username": "sk___",
    "submission": "class Solution {\npublic:\n    static constexpr int MOD = 1e9 + 7;\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(51, vector<int>(51, -1)));\n        return countPairs(nums, 0, 0, nums[0], dp);\n    }\n\npublic:\n    void initializeDPTable(vector<vector<vector<int>>>& dp, int n) {\n        dp.assign(n, vector<vector<int>>(51, vector<int>(51, -1)));\n    }\n\n    bool isValidValue(int value, int remainingSum) const {\n        return value >= 0 && value <= remainingSum;\n    }\n\n    int countPairs(vector<int>& nums, int index, int lastValue, int remainingSum, vector<vector<vector<int>>>& dp) {\n        if (index == nums.size()) {\n            return 1;\n        }\n\n        if (dp[index][lastValue][remainingSum] != -1) {\n            return dp[index][lastValue][remainingSum];\n        }\n\n        int totalPairs = calculateTotalPairs(nums, index, lastValue, remainingSum, dp);\n        return dp[index][lastValue][remainingSum] = totalPairs;\n    }\n\n    int calculateTotalPairs(vector<int>& nums, int index, int lastValue, int remainingSum, vector<vector<vector<int>>>& dp) {\n        int totalPairs = 0;\n\n        for (int currentValue = lastValue; currentValue <= nums[index]; ++currentValue) {\n            int secondArrayValue = nums[index] - currentValue;\n            if (isValidValue(secondArrayValue, remainingSum)) {\n                totalPairs = (totalPairs + countPairs(nums, index + 1, currentValue, secondArrayValue, dp)) % MOD;\n            }\n        }\n\n        return totalPairs;\n    }\n};\n",
    "submit_ts": "1723346722",
    "subm_id": "1351583779"
}