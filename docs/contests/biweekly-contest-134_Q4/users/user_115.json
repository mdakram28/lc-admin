{
    "username": "onlyerror",
    "submission": "class Solution {\n    int getBit(int mask,int b){\n        return (mask>>b)&1;\n    }\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        int B=30;\n        vector<vector<int>>last(n+1,vector<int>(B,n));\n        for(int i=n-1;i>=0;i--){\n            for(int j=0;j<B;j++){\n                last[i][j]=last[i+1][j];\n                if(!getBit(nums[i],j))last[i][j]=i;\n            }\n        }\n        auto getVal=[&](int l,int r){\n            int ans=(1<<B)-1;\n            for(int j=0;j<B;j++){\n                if(last[l][j]<=r)ans^=(1<<j);\n            }\n            return ans;\n        };\n        auto getMin=[&](int s){\n            int start=s,end=n-1,ans=1;\n            while(start<=end){\n                int mid=start+(end-start)/2;\n                int v=getVal(s,mid);\n                if(v<k){\n                    end=mid-1;\n                }else if(v>k){\n                    start=mid+1;\n                }else{\n                    ans=mid;\n                    end=mid-1;\n                }\n            }\n            return ans;\n        };\n        auto getMax=[&](int s){\n            int start=s,end=n-1,ans=0;\n            while(start<=end){\n                int mid=start+(end-start)/2;\n                int v=getVal(s,mid);\n                if(v<k){\n                    end=mid-1;\n                }else if(v>k){\n                    start=mid+1;\n                }else{\n                    ans=mid;\n                    start=mid+1;\n                }\n            }\n            return ans;\n        };\n        long long ans=0;\n        for(int i=n-1;i>=0;i--){\n            int minR=getMin(i),maxR=getMax(i);\n            ans+=maxR-minR+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278415",
    "subm_id": "1311708165"
}