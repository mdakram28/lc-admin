{
    "username": "raginisharma6604",
    "submission": "var canReachCorner = function(X, Y, circles) { \n    function bfs(graph, start, target1, target2, numNodes) { \n        const queue = []; \n        const visited = Array(numNodes).fill(false); \n        queue.push(start); \n        visited[start] = true; \n \n        while (queue.length > 0) { \n            const current = queue.shift(); \n            for (const neighbor of graph[current]) { \n                if (!visited[neighbor]) { \n                    queue.push(neighbor); \n                    visited[neighbor] = true; \n                } \n            } \n        } \n \n        return visited[target1] || visited[target2]; \n    } \n \n    const numCircles = circles.length; \n    const graph = Array(numCircles + 4).fill(null).map(() => []); \n    const circleData = circles.map(circle => [circle[0], circle[1], circle[2]]); \n \n    for (let i = 0; i < numCircles; ++i) { \n        if (circleData[i][0] <= circleData[i][2]) { \n            graph[numCircles].push(i); \n            graph[i].push(numCircles); \n        } \n        if (X - circleData[i][0] <= circleData[i][2]) { \n            graph[numCircles + 2].push(i); \n            graph[i].push(numCircles + 2); \n        } \n        if (circleData[i][1] <= circleData[i][2]) { \n            graph[numCircles + 1].push(i); \n            graph[i].push(numCircles + 1); \n        } \n        if (Y - circleData[i][1] <= circleData[i][2]) { \n            graph[numCircles + 3].push(i); \n            graph[i].push(numCircles + 3); \n        } \n        for (let j = i + 1; j < numCircles; ++j) { \n            const dx = circleData[i][0] - circleData[j][0]; \n            const dy = circleData[i][1] - circleData[j][1]; \n            const distance = Math.sqrt(dx * dx + dy * dy); \n            if (circleData[i][2] + circleData[j][2] >= distance) { \n                graph[i].push(j); \n                graph[j].push(i); \n            } \n        } \n    } \n \n    return !(bfs(graph, numCircles, numCircles + 1, numCircles + 2, numCircles + 4) || \n             bfs(graph, numCircles + 3, numCircles + 2, numCircles + 1, numCircles + 4)); \n};\n",
    "submit_ts": "1722139087",
    "subm_id": "1335807511"
}