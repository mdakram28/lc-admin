{
    "username": "liaoyunyang0815",
    "submission": "class Solution {\npublic:\n    long long dp[50005];\n#define MOD (long long)(1e9 + 7)\n    map<long long, int> minn[305];\n    vector<int> v[50005];\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n       \n        int cnt = 0;\n    \n        for (auto x: words) {\n            int m = x.size();\n            long long hash = 0;\n            for (int i = 0; i < m; i++) {\n                hash = hash * 26 + x[i] - 'a';\n                hash %= MOD;\n            }\n            if (m > 300) {\n                long long cur = 0, p = 1;\n                for (int i = 0; i < m; i++) {\n                    if (i) p = p * 26 % MOD;\n                    cur = cur * 26 + target[i] - 'a';\n                    cur %= MOD;\n                }\n                for (int i = m; i < n; i++) {\n                    if (cur == hash) {\n                        v[i-1].push_back(cnt);\n                    }\n                    cur = cur - p * (target[i-m] - 'a');\n                    cur = cur * 26 + target[i] - 'a';\n                    cur = (cur%MOD + MOD) % MOD;\n                }\n\n                if (cur == hash) v[n-1].push_back(cnt);\n                    \n            } else {\n                if (!minn[m].count(hash)) minn[m][hash] = costs[cnt];\n                else minn[m][hash] = min(minn[m][hash], costs[cnt]);\n            }\n            //cout << \"cnt = \" << cnt << \" hash = \" << hash << endl;\n            \n            cnt++;\n        }\n\n        for (int i = 1; i <= n; i++) {\n           dp[i] = (long long)3e9;\n           long long tmp = 0, power = 1;\n           for (int j = 1; j <= min(i, 300); j++) {\n                tmp = tmp + power * (target[i-j] - 'a');\n                power = power * 26 % MOD;\n                tmp %= MOD;\n                //cout << \"i = \" << i << \" j = \" << j << \" tmp = \" << tmp << endl;\n                if (minn[j].count(tmp)) {\n                    dp[i] = min(dp[i], dp[i-j] + minn[j][tmp]);\n                    //cout << \"dp[\" << i << \"] = \" << dp[i] << endl;\n                }\n           }\n           for (int j: v[i-1]) {\n            dp[i] = min(dp[i], dp[i-words[j].size()] + costs[j]);\n           }\n        }\n\n        if (dp[n] < 3e9) {\n            return dp[n];\n        } else {\n            return -1;\n        }\n    }\n};",
    "submit_ts": "1720322613",
    "subm_id": "1312354561"
}