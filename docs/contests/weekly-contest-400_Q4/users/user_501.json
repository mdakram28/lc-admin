{
    "username": "ZEON3099",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        \n        vector<int> btt(31,0);\n        \n        int ann = 1e9;\n        \n        int i = 0 , j = 0 , ans = 1e9;\n        \n        auto add = [&](int x){\n            \n            for(int i = 30 ; i >= 0 ; --i){\n                if((x>>i)&1)\n                    btt[i]++;\n            }\n        };\n        \n        auto sub = [&](int x){\n            \n            for(int i = 30 ; i >= 0 ; --i){\n                if((x>>i)&1)\n                    btt[i]--;\n            }\n        };\n        \n        auto get = [&](int y){\n            \n            int ans = 0;\n            for(int i = 30 ; i >= 0 ; --i){\n                if(btt[i]==y)\n                    ans |= (1<<i);\n            }\n            return ans;\n        };\n        \n        while(j<n){\n            \n            add(nums[j]);\n            \n            while(i<=j && get(j-i+1)<k){\n                ann = min(ann,abs(get(j-i+1)-k));\n                sub(nums[i]);\n                i++;\n            }\n            ann = min(ann,abs(get(j-i+1)-k));\n            j++;\n        }\n        return ann;\n    }\n};",
    "submit_ts": 1717298952.0
}