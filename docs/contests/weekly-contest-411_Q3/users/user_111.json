{
    "username": "Ujimatsu_Chiya",
    "submission": "from sortedcontainers import SortedList\nfrom collections import defaultdict, deque, Counter\nfrom bisect import bisect_left, bisect_right\nfrom typing import List, Set, Tuple\nfrom itertools import pairwise\n\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n == 1:\n            for x in range(1, 10):\n                if x % k == 0:\n                    w = x\n            return str(w)\n        l = (n + 1) // 2\n        r = n - l\n        c = [0 for _ in range(l)]\n        p, q = 0, n - 1\n        while p <= q:\n            if p < q:\n                c[p] = pow(10, n - p - 1, k) + pow(10, n - q - 1, k)\n            else:\n                c[p] = pow(10, n - p - 1, k)\n            c[p] %= k\n            p += 1\n            q -= 1\n            \n        ds = [[-1 for _ in range(k)] for _ in range(l)]\n        for d in range(10):\n            ds[l - 1][c[l - 1] * d % k] = d\n        for i in range(l - 2, -1, -1):\n            for j in range(k):\n                for d in range(10):\n                    w = (j + c[i] * d) % k\n                    if ds[i + 1][w] != -1:\n                        ds[i][j] = d\n        now, dg = 0, ds[0][0]\n        # print(ds)\n        # print(c)\n        ls = [dg]\n        for i in range(1, l):\n            now = (now - c[i-1] * ls[-1]) % k\n            ls.append(ds[i][now])\n        a = ls + ls[:r][::-1]\n        print(ls)\n        return \"\".join(str(c) for c in a)\n",
    "submit_ts": "1723952280",
    "subm_id": "556410658"
}