{
    "username": "CIbF1V4HrL",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        int[] cnt = new int[k+2];\n        cnt[0] = n / 2;\n        List<Integer>[] groups = new ArrayList[k+1];\n        Arrays.setAll(groups, e -> new ArrayList<>());\n        for (int i = 0; i < n / 2; i++) {\n            int val = Math.abs(nums[n-i-1] - nums[i]);\n            int v1 = Math.max(nums[i], k - nums[i]);\n            int v2 = Math.max(nums[n-i-1], k - nums[n-i-1]);\n            cnt[Math.max(v1, v2)+1]--;\n            groups[val].add(Math.max(v1, v2));\n        }\n        for (int i = 0; i <= k; i++) Collections.sort(groups[i]);\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i <= k; i++) {\n            if (i != 0) cnt[i] = cnt[i] + cnt[i-1];\n            int l = 0, r = groups[i].size() - 1;\n            int pos = -1;\n            while (l <= r) {\n                int mid = l + r >> 1;\n                if (groups[i].get(mid) < i) {\n                    l = mid + 1;\n                }else {\n                    pos = mid;\n                    r = mid - 1;\n                }\n            }\n            //cnt  1\u7684\u4e2a\u6570\n            ans = Math.min(ans, cnt[i] - groups[i].size() + (n / 2 - cnt[i]) * 2);\n//            if (pos == -1) {\n//                ans = Math.min(ans, cnt[i] - sum + sum * 2);\n//            }else {\n//                int sum = n / 2 - cnt[i] - (groups[i].size() - pos);\n//                ans = Math.min(ans, cnt[i] - pos - sum + sum * 2);\n//            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721490724",
    "subm_id": "548324025"
}