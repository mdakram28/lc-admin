{
    "username": "KZn",
    "submission": "class Solution {\npublic:\nint minimumDistance(vector<vector<int>>& points) {\n    int n = points.size();\n    vector<vector<int>> xAddy(n, vector<int>(2, 0));\n    vector<vector<int>> ySubx(n, vector<int>(2, 0));\n\n    for (int i = 0; i < n; i++)\n    {\n        xAddy[i] = {points[i][0] + points[i][1], i};\n        ySubx[i] = {points[i][1] - points[i][0], i};\n    }\n\n    sort(xAddy.begin(), xAddy.end());\n    sort(ySubx.begin(), ySubx.end());\n    int ans = 1e8*2;\n    for (int i = 0; i < n; i++) {\n        int maxD = 0;\n        if (xAddy[0][1] == i) \n            maxD = max(maxD, abs(xAddy[1][0] - xAddy[n - 1][0]));\n        else if (xAddy[n-1][1] == i)\n            maxD = max(maxD, abs(xAddy[0][0] - xAddy[n - 2][0]));\n        else\n            maxD = max(maxD, abs(xAddy[0][0] - xAddy[n - 1][0]));\n\n        if (ySubx[0][1] == i) \n            maxD = max(maxD, abs(ySubx[1][0] - ySubx[n - 1][0]));\n        else if (ySubx[n-1][1] == i)\n            maxD = max(maxD, abs(ySubx[0][0] - ySubx[n - 2][0]));\n        else\n            maxD = max(maxD, abs(ySubx[0][0] - ySubx[n - 1][0]));\n\n        ans = min(ans, maxD);\n    }\n    return ans;\n}\n};"
}