{
    "username": "kllcoo1300",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int[] diff = new int[k + 1];\n        int mainDiff = 0;\n        for (int i = 0; i < nums.length / 2; i++) {\n            int d = Math.abs(nums[i] - nums[nums.length - i - 1]);\n            mainDiff = Math.max(mainDiff, ++diff[d]);\n        }\n\n        List<Integer> diffList = new ArrayList<>();\n        for (int i = 0; i < diff.length; i++) {\n            if (diff[i] >= mainDiff - 1) {\n                diffList.add(i);\n            }\n        }\n\n        int minStep = Integer.MAX_VALUE;\n        for (int curDiff : diffList) {\n            int step = 0;\n            for (int i = 0; i < nums.length / 2; i++) {\n                int p1 = nums[i];\n                int p2 = nums[nums.length - i - 1];\n                int d = Math.abs(p1 - p2);\n                if (d == curDiff) {\n                    continue;\n                }\n                if (step > minStep) {\n                    break;\n                }\n                if (p1 < curDiff && p2 < curDiff && k - p1 < curDiff && k - p2 < curDiff) {\n                    step += 2;\n                } else {\n                    step += 1;\n                }\n            }\n            minStep = Math.min(minStep, step);\n\n        }\n        return minStep;\n    }\n}",
    "submit_ts": "1721489130",
    "subm_id": "1327443817"
}