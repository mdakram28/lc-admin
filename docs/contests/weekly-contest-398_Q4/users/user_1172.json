{
    "username": "piyushjain4",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    map<ll,map<ll,map<ll,ll>>>dp;\n\n    ll f(ll stair,ll jump,ll j){\n        if(stair==0 && jump==0 && j==1){\n            return 1;\n        }\n        if(stair==0 && jump==1 && j==1){\n            return 1;\n        }\n        if(stair==1 && jump==0 && j==0){\n            return 1;\n        }\n        // if(stair==1){\n        //     return 4;\n        // }\n        if((dp.find(stair)!=dp.end()) && (dp[stair].find(jump)!=dp[stair].end()) && dp[stair][jump].find(j)!=dp[stair][jump].end()){\n            return dp[stair][jump][j];\n        }\n        ll ans =0;\n        if(j==0){\n            if((jump>=1) &&(stair>=(1ll<<(jump-1)))){\n            ans+=f(stair-(1ll<<(jump-1)),jump-1,0);\n            ans+=f(stair-(1ll<<(jump-1)),jump-1,1);\n            }\n        }\n        else{\n            ans+=f(stair+1,jump,0);\n        }\n\n        // ans+=f(stair+(1ll<<jump),jump+1,0);\n        return dp[stair][jump][j]=ans;\n    }\n    int waysToReachStair(int k){\n        dp.clear();\n        ll ans =0;\n        for(int i=0;i<31;i++){\n            ans+=f(k,i,0);\n            ans+=f(k,i,1);\n            // cout<<ans<<endl;\n        }\n        return (int)ans;\n        \n    }\n};",
    "submit_ts": 1716090126.0
}