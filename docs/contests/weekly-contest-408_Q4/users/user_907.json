{
    "username": "harshitsinghsmu",
    "submission": "class Solution {\npublic:\n    \n    \n     bool solve(int X, int Y, vector<vector<int>>& circles) {\n        \n        int n = circles.size();\n        vector<vector<int>> v(n + 4);\n        \n        for (int i = 0; i < n; i++) {  \n            if (circles[i][0] <= circles[i][2]) { \n                v[n].push_back(i);\n                v[i].push_back(n);\n            }\n            if (X - circles[i][0] <= circles[i][2]) { \n                v[n + 2].push_back(i);  \n                v[i].push_back(n + 2);\n            }\n            if (circles[i][1] <= circles[i][2]) {\n                v[n + 1].push_back(i);\n                v[i].push_back(n + 1);\n            }\n            if (Y - circles[i][1] <= circles[i][2]) {\n                v[n + 3].push_back(i);\n                v[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) { \n                double dis = sqrt(pow(circles[i][0] - circles[j][0], 2) + pow(circles[i][1] - circles[j][1], 2));\n                int Sum = circles[i][2] + circles[j][2];\n                \n                if (Sum >= dis) { \n                    v[i].push_back(j);\n                    v[j].push_back(i);\n                }\n            }\n        }\n        \n        int d = 0;\n        \n       d = max(d, bfs(v, n, n + 1, n + 2, n + 4));\n        d = max(d, bfs(v, n + 3, n+ 2, n + 1, n + 4)); \n        \n        \n        return d == 0;\n    }\n    \n    int bfs(vector<vector<int>>& g,int s,int x,int y,int n) {\n        \n        queue<int> q;\n        q.push(s);\n        vector<bool> vis(n + 4, false);\n        vis[s] = true;\n        \n        while (!q.empty()) {\n            \n            int v = q.front();\n            q.pop();\n            \n            for (int u : g[v]) {\n                \n                if (!vis[u]) {\n                    q.push(u);\n                    vis[u] = true;\n                }\n            }\n        }\n        \n        return (vis[x] || vis[y] ? 1 : 0);\n    }\n    \n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        \n        return solve(X, Y, circles);\n    }\n};\n  ",
    "submit_ts": "1722138634",
    "subm_id": "1335795782"
}