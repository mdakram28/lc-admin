{
    "username": "Haoyu Weng",
    "submission": "import sys\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        rem = [1]\n        for i in range(1, n):\n            rem.append(rem[-1] * 10 % k)\n        target = (rem[-1] * 10 - 1) % k\n        best = [[inf] for _ in range(k)]\n        best[0] = []\n        for i in range(0, n+1):\n            j = n-i-1\n            if j < i:\n                break\n            r = rem[i]\n            if j != i:\n                r = (r + rem[j]) % k\n            for a in range(1, k):\n                for s in range(k):\n                    curr = best[s] + [j] * a\n                    s1 = (s + r * a) % k\n                    best[s1] = min(best[s1], curr)\n        ans = best[target]\n        num = [9] * n\n        def remove(i):\n            num[i] -= 1\n        for i in ans:\n            remove(i)\n            j = n-i-1\n            if j != i:\n                remove(j)\n        return ''.join(map(str, num))",
    "submit_ts": "1723950125",
    "subm_id": "1359737825"
}