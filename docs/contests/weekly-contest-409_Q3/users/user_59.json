{
    "username": "cjycleaner",
    "submission": "using namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<double> vd;\ntypedef vector<string> vs;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef vector<vvll> vvvll;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef vector<pll> vpll;\ntypedef vector<vpll> vvpll;\ntypedef vector<pdd> vpdd;\ntypedef vector<vd> vvd;\n#define yn(ans) printf(\"%s\\n\", (ans)?\"Yes\":\"No\");\n#define YN(ans) printf(\"%s\\n\", (ans)?\"YES\":\"NO\");\ntemplate<class T> bool chmax(T &a, T b) {\n\tif (a >= b) return false;\n\ta = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n\tif (a <= b) return false;\n\ta = b; return true;\n}\n#define FOR(i, s, e, t) for ((i) = (s); (i) < (e); (i) += (t)) \n#define REP(i, e) for (int i = 0; i < (e); ++i) \n#define REP1(i, s, e) for (int i = (s); i < (e); ++i)\n#define RREP(i, e) for (int i = (e); i >= 0; --i)\n#define RREP1(i, e, s) for (int i = (e); i >= (s); --i)\n#define all(v) v.begin(), v.end()\n#define pb push_back\n#define qb pop_back\n#define pf push_front\n#define qf pop_front\n#define maxe max_element\n#define mine min_element\nll inf = 1e18;\n#define DEBUG printf(\"%d\\n\", __LINE__); fflush(stdout);\ntemplate<class T> void print(vector<T> &v, bool withSize = false) {\n\tif (withSize) cout << v.size() << endl;\n\tREP(i, v.size()) cout << v[i] << \" \"; \n\tcout << endl;\n}\n\nclass Union {\npublic:\n\tUnion(int _n): n(_n), tot(n), p(n, 0), c(n, 1) {REP(i, n) p[i] = i;}\n\tint find(int x) {return p[x] == x?x:(p[x] = find(p[x]));}\n\tbool merge(int x, int y) {\n\t\tint a = find(x), b = find(y);\n\t\tif (a == b) return false;\n\t\tint e = min(a, b), f = max(a, b);\n\t\tp[f] = p[e];\n\t\tc[e] += c[f];\n\t\tc[f] = 0;\n\t\t--tot;\n\t\treturn true;\n\t}\n\tint ng() {return tot;}\n\tint count(int g) {return c[g];}\n\t\nprivate:\n\tint n, tot;\n\tvector<int> p, c;\n};\n\nmt19937_64 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int N, vector<vector<int>>& queries) {\n        int Q = queries.size();\n        vi ans(Q, 0);\n        set<int> s;\n        REP(i, N - 1) s.insert(i);\n        REP(i, Q) {\n            int x = queries[i][0], y = queries[i][1];\n            auto it = s.lower_bound(x);\n            if (it != s.end()) {\n                ++it;\n                while (it != s.end() && *it < y) it = s.erase(it);\n            }\n            ans[i] = s.size();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722739311",
    "subm_id": "552323784"
}