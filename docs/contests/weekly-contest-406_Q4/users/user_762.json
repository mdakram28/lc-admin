{
    "username": "bingyuan007",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        int rows = 1, cols = 1;\n        //set of cost to side ie. cost: int -> char: 'r'/'c'\n        multiset<pair<int, char>> ms;\n        for (int i : horizontalCut){\n            ms.emplace(make_pair(i, 'h'));\n        }\n        for (int i : verticalCut){\n            ms.emplace(make_pair(i, 'v'));\n        }\n        for (auto p = ms.rbegin(); p != ms.rend(); p ++){\n            if (p->second == 'h'){\n                ans += p->first * cols;\n                rows += 1;\n            }\n            else{\n                ans += p->first * rows;\n                cols += 1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925817",
    "subm_id": "1320267164"
}