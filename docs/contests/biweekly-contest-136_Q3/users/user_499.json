{
    "username": "sakuyaqwq",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n,m=len(grid),len(grid[0])\n        vis=[[0]*m for _ in range(n)]\n        v=[]\n        cnt=0\n        for i in range(n):\n            for j in range(m):\n                if vis[i][j]:\n                    continue\n                arr=[(i,j)]\n                if not((n&1) and (i==n//2)):\n                    arr.append((n-1-i,j))\n                if not ((m&1) and (j==m//2)):\n                    arr.append((i,m-1-j))\n                if len(arr)==3:\n                    arr.append((n-1-i,m-1-j))\n                cnt0,cnt1=0,0\n                for x,y in arr:\n                    if grid[x][y]==0:\n                        cnt0+=1\n                    else:\n                        cnt1+=1\n                    vis[x][y]=1\n                v.append((cnt0,cnt1))\n        n=len(v)\n        dp=[[float('inf')]*4 for _ in range(n+1)]\n        dp[0][0]=0\n        for i in range(1,n+1):\n            cnt0,cnt1=v[i-1]\n            tot=cnt0+cnt1\n            #print(cnt0,cnt1)\n            for j in range(4):\n                last=(j-tot+4)%4\n                #print(j,last,tot-cnt0)\n                dp[i][j]=min(dp[i-1][last]+tot-cnt1,dp[i][j])\n                dp[i][j]=min(dp[i-1][j]+tot-cnt0,dp[i][j])\n            #print(dp[i])\n        return dp[n][0]",
    "submit_ts": "1722697189",
    "subm_id": "552264860"
}