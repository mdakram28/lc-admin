{
    "username": "user3593Z",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        \n        int n = grid.length;\n        int m = grid[0].length;\n        int result = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int sum = grid[i][j] + grid[n - i - 1][j] + grid[i][m - j - 1] + grid[n - i - 1][m - j - 1];\n                result += Math.min(sum, 4 - sum);\n            }\n        }\n        \n        if (n % 2 == 1 && m % 2 == 1) {\n            int one = 0;\n            int miss = 0;\n            \n            \n            int left = 0;\n            int right = m - 1;\n            while (left < right) {\n                one += grid[n / 2][left] + grid[n / 2][right];\n                miss += grid[n / 2][left] != grid[n / 2][right] ? 1 : 0;\n                left++;\n                right--;\n            }\n            left = 0;\n            right = n - 1;\n            while (left < right) {\n                one += grid[left][m / 2] + grid[right][m / 2];\n                miss += grid[left][m / 2] != grid[right][m / 2] ? 1 : 0;\n                left++;\n                right--;\n            }\n            \n            one %= 4;\n            if (one != 0) {\n                result += Math.min(one, 4 - one);\n            }\n            miss -= Math.min(one, 4 - one);\n            result += Math.max(0, miss);;\n            result += grid[n / 2][m / 2];            \n        } else if (n % 2 == 1) {\n            int left = 0;\n            int right = m - 1;\n            int one = 0;\n            int miss = 0;\n            while (left < right) {\n                one += grid[n / 2][left] + grid[n / 2][right];\n                miss += grid[n / 2][left] != grid[n / 2][right] ? 1 : 0;\n                left++;\n                right--;\n            }\n            one %= 4;\n            if (one != 0) {\n                result += Math.min(one, 4 - one);\n            }\n            miss -= Math.min(one, 4 - one);\n            result += Math.max(0, miss);;\n        } else if (m % 2 == 1) {\n            int left = 0;\n            int right = n - 1;\n            int one = 0;\n            int miss = 0;\n            while (left < right) {\n                one += grid[left][m / 2] + grid[right][m / 2];\n                miss += grid[left][m / 2] != grid[right][m / 2] ? 1 : 0;\n                left++;\n                right--;\n            }\n            one %= 4;\n            if (one != 0) {\n                result += Math.min(one, 4 - one);\n            }\n            miss -= Math.min(one, 4 - one);\n            result += Math.max(0, miss);\n        }\n        \n        return result;\n        \n    }\n}",
    "submit_ts": "1722697423",
    "subm_id": "1343146004"
}