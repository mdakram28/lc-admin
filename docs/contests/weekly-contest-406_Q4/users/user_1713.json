{
    "username": "Aradhya_3102",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<int[]>l=new ArrayList<>();\n        for(int i=0;i<horizontalCut.length;i++)\n            l.add(new int[]{horizontalCut[i], 0});\n        for (int i=0;i<verticalCut.length;i++)\n            l.add(new int[]{verticalCut[i], 1});\n        l.sort((a,b)->b[0]-a[0]);\n        int h=1;\n        int v=1;\n        long tc=0;\n        for (int[] i:l) \n        {\n            int c=i[0];\n            int t=i[1];\n            if(t==0) \n            { \n                tc+=c*v;\n                h++;\n            } \n            else \n            { \n                tc+=c*h;\n                v++;\n            }\n        }\n        return tc;       \n    }\n}",
    "submit_ts": "1720926421",
    "subm_id": "1320285749"
}