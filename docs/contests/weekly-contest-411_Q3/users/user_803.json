{
    "username": "Jason Zavaglia",
    "submission": "import sys\n\ndef digitsum(n):\n    total = 0\n    while n > 0:\n        total += n % 10\n        n //= 10\n    return total\n\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(10**6)\n        if k == 1 or k == 3 or k == 9:\n            result = 10**n - 1\n        elif k == 2:\n            if n == 1:\n                result = 8\n            else:\n                result = 10**n - 10**(n-1) - 2\n        elif k == 4:\n            if n <= 4:\n                result = int('8' * n)\n            else:\n                result = int('88' + '9'*(n-4) + '88')\n        elif k == 5:\n            if n == 1:\n                result = 5\n            else:\n                result = 10**n - 10**(n-1)*4 - 5\n        elif k == 8:\n            if n <= 6:\n                result = int('8' * n)\n            else:\n                result = int('888' + '9'*(n-6) + '888')\n        elif k == 6:\n            if n == 1:\n                result = 6\n            else:\n                result = 10**n - 10**(n-1)*1 - 2\n                remainder = result % 3\n                if remainder == 0:\n                    pass\n                elif n % 2 == 1:\n                    result -= 10**(n//2) * remainder\n                else:\n                    while remainder != 0:\n                        result -= 10**(n//2)\n                        result -= 10**(n//2 - 1)\n                        remainder = result % 6\n                    # else: # odd remainder and even digits\n                    #     # decrement front and back digit by 2\n                    #     result -= 10**(n-1)*2 + 2\n                    #     remainder = result % 3\n                    #     if remainder == 0:\n                    #         pass\n                    #     else:\n                    #         assert(remainder % 2)\n                    #         result -= 10**(n//2) * remainder\n                    #         result -= 10**(n//2 - 1) * remainder\n        else:\n            result = 10 ** n - 1\n            while result % 7 != 0:\n                if n % 2 == 1:\n                    result -= 10**(n//2)\n                else:\n                    result -= 10**(n//2)\n                    result -= 10**(n//2 - 1)\n\n\n        if result % k != 0:\n            print(f\"{result} is not divisible by {k}\")\n        # else:\n        #     for subtract in range(0, 100):\n        #         result = 10**n\n        #         print(\"part0\", subtract, result)\n        #         if subtract > 0:\n        #             subtract_digits = int(math.log10(subtract) + 1)\n        #             shift = 10**(n - subtract_digits)\n        #             result -= subtract * shift\n        #             print(\"part1\", subtract, result)\n        #         flip = int(str(subtract)[::-1])+1\n        #         result -= flip\n        #         print(\"part2\", flip, result)\n        #         if result % k == 0:\n        #             print(\"subtract \",n, k, subtract, result)\n        #             break\n        return str(result)\n",
    "submit_ts": "1723953450",
    "subm_id": "1359821604"
}