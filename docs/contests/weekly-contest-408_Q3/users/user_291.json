{
    "username": "_srihari_",
    "submission": "class Solution {\npublic:\n    int f(vector<int>& A, int k, int n, vector<int>& p, int m) {\n        int ret = 0;\n        if(k > n)return 0;\n        for(int i=0, j = k - 1;j<n;j++, i++){\n            int lft = i==0?A[i]:(A[i]-A[i-1]-1);\n            int rgt = (j+1<n)?(A[j+1]-A[j]-1):(m-A[j]-1);\n            int cnt = p[A[j]+1] - p[A[i]];\n            // cout<<i<<' '<<j<<' '<<cnt<<' '<<lft<<' '<<rgt<<endl;\n            if (cnt >= (k * k)) {\n                ret += (lft * rgt);\n                ret ++;\n                ret += lft + rgt;\n            } else if(lft+rgt+cnt>=(k*k)){\n                int rem = k*k - cnt;\n                if(rgt >= rem){\n                    ret += (rgt - rem+1);\n                }\n                if(lft >= rem){\n                    ret += (lft - rem+1);\n                }\n                ret += (lft * rgt);\n                for(int a=1; a<=lft;a++){\n                    for(int b=1;b<=rgt;b++){\n                        if(a+b<rem)ret--;\n                    }\n                }\n            }\n            \n        }\n        // cout<<ret<<' ';\n        // cout<<\"tc\"<<endl;\n        return ret;\n    }\n    int numberOfSubstrings(string s) {\n        int n = s.length();\n        int sq = sqrt(n);\n        vector<int> A;\n        for(int i=0;i<n;i++){\n            if(s[i]=='0')\n            A.push_back(i);\n        }\n        vector<int> p(n+1);\n        for(int i=1;i<=n;i++){\n            p[i]+=p[i-1];\n            if(s[i-1]=='1')p[i]++;\n        }\n        int ans = 0;\n        int cnt=0;\n        for(int j=0;j<n;j++){\n            if(s[j]=='1')cnt++;\n            else{\n                ans += (cnt*(cnt+1)/2);\n                cnt=0;\n            }\n        }\n        ans += (cnt * (cnt+1)/2);\n        for(int i=1;i<=sq;i++){\n            ans += f(A, i, A.size(), p, n);\n        }\n        // cout<<\"hi\"<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1722139152",
    "subm_id": "1335809299"
}