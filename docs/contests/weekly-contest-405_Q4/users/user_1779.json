{
    "username": "insamam_",
    "submission": "class Solution {\n    class TrieNode {\n        TrieNode[] children = new TrieNode[26];\n        List<Integer> wordIndices = new ArrayList<>();\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = buildTrie(words);\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (node.children[c - 'a'] == null) break;\n                node = node.children[c - 'a'];\n                for (int wordIndex : node.wordIndices) {\n                    int newCost = dp[i] + costs[wordIndex];\n                    if (newCost < dp[j + 1]) {\n                        dp[j + 1] = newCost;\n                    }\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    private TrieNode buildTrie(String[] words) {\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            TrieNode node = root;\n            for (char c : words[i].toCharArray()) {\n                if (node.children[c - 'a'] == null) {\n                    node.children[c - 'a'] = new TrieNode();\n                }\n                node = node.children[c - 'a'];\n            }\n            node.wordIndices.add(i);\n        }\n        return root;\n    }\n}",
    "submit_ts": "1720324452",
    "subm_id": "1312399822"
}