{
    "username": "Navneet Kumar",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<pair<long long, int>>> topThree(board.size());\n\n        for(int i = 0; i < board.size(); i++) {\n            priority_queue<pair<long long, int>, vector<pair<long long, int>>, greater<pair<long long, int>>> pq;\n\n            for(int j = 0; j < board[i].size(); j++) {\n                long long value = board[i][j];\n                if(pq.size() < 3) {\n                    pq.push({value, j});\n                } else if(pq.top().first < value) {\n                    pq.pop();\n                    pq.push({value, j});\n                }\n            }\n\n            vector<pair<long long, int>> temp;\n            while(!pq.empty()) {\n                temp.push_back(pq.top());\n                pq.pop();\n            }\n            topThree[i] = temp; // Assign to the vector at index i\n        }\n\n        vector<pair<long long, pair<int, int>>> temp;\n        for(int i = 0; i < topThree.size(); i++) {\n            for(int j = 0; j < topThree[i].size(); j++) {\n                temp.push_back({topThree[i][j].first, {i, topThree[i][j].second}});\n            }\n        }\n\n        long long ans = LLONG_MIN; // Use LLONG_MIN for long long minimum value\n        for(int i = 0; i < temp.size(); i++) {\n            int firstCol = temp[i].second.second;\n            int firstRow = temp[i].second.first;\n            for(int j = 0; j < temp.size(); j++) {\n                if(temp[j].second.second != firstCol && temp[j].second.first != firstRow) {\n                    int secondCol = temp[j].second.second;\n                    int secondRow = temp[j].second.first;\n                    for(int k = 0; k < temp.size(); k++) {\n                        int thirdCol = temp[k].second.second;\n                        int thirdRow = temp[k].second.first;\n                        if(thirdCol != secondCol && thirdCol != firstCol && thirdRow != firstRow && thirdRow != secondRow) {\n                            long long sum = temp[i].first + temp[j].first + temp[k].first;\n                            if(sum > ans) {\n                                ans = sum;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723909803",
    "subm_id": "1359206350"
}