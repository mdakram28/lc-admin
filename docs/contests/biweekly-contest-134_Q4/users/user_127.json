{
    "username": "rajatgoyal376",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n// #define int long long\ntemplate <typename M>\nclass sparsetable {\npublic:\n    int LOG;\n    vector<vector<M>> v;\n    M garbage;\n    function<M(M, M)> unite;\n\n    template <typename T>\n    sparsetable(vector<T>& a)\n        : unite([&](M a, M b) { return a & b; })\n    {\n        init(a);\n    }\n\n    template <typename T>\n    sparsetable(vector<T>& a, function<M(M, M)> comp)\n        : unite(comp)\n    {\n        init(a);\n    }\n\n    template <typename T>\n    void init(vector<T>& a)\n    {\n        int N = a.size();\n        LOG = 31 - __builtin_clz(N);\n        v.resize(LOG + 1);\n        v[0] = a;\n        int MAX = 1LL;\n        for (int i = 1; i <= LOG; i++, MAX <<= 1LL) {\n            v[i].resize(N - (MAX << 1) + 1);\n            for (int j = 0; j < N - (MAX << 1) + 1; j++) {\n                v[i][j] = unite(v[i - 1][j], v[i - 1][j + (MAX)]);\n            }\n        }\n    }\n\n    M get(int l, int r)\n    {\n        int log = __builtin_clz(r - l + 1);\n        log = 31 - log;\n        return unite(v[log][l], v[log][r - (1LL << log) + 1]);\n    }\n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& A, int K)\n    {\n        sparsetable<int> ST(A);\n        int l = 0;\n        int r = 0;\n        long long ans = 0;\n        int N = A.size();\n        for (int i = 0; i < N; i++) {\n            while (l <= i && ST.get(l, i) < K) {\n                l++;\n            }\n            while (r <= i && ST.get(r, i) <= K) {\n                r++;\n            }\n            ans+=r-l;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276776",
    "subm_id": "1311632008"
}