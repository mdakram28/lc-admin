{
    "username": "inspiring-colden7kl",
    "submission": "import copy\nclass Solution:\n    def minFlips(self, grid) -> int:\n        #line\n        result = 0\n        \n        m, n = len(grid), len(grid[0])\n\n        for i in range((m//2)):\n            for j in range((n//2)):\n                mirrors = [\n                    grid[i][j],\n                    grid[m-i-1][j],\n                    grid[m-i-1][n-j-1],\n                    grid[i][n-j-1],\n                ]\n                one_count = sum(mirrors)\n                \n                if one_count >= 2:\n                    result += 4-one_count\n                else:\n                    result += one_count\n\n        if m%2 == 1 and n%2 == 1:\n            if grid[(m//2)][(n//2)] == 1:\n                result += 1\n\n        total = 0\n        have_2_card = False\n        if m%2 == 1:\n            mid_m = (m//2)\n            for j in range(n//2):\n                if grid[mid_m][j] != grid[mid_m][n-j-1]:\n                    result += 1\n                    total += 2\n                    have_2_card = True\n                elif grid[mid_m][j] == 1:\n                    total += 2\n\n\n        if n%2 == 1:\n            mid_n = (n//2)\n            for i in range(m//2):\n                if grid[i][mid_n] != grid[m-i-1][mid_n]:\n                    result += 1\n                    total += 2\n                    have_2_card = True\n                elif grid[i][mid_n] == 1:\n                    total += 2\n\n        if total%4 == 2 and (not have_2_card):\n            result += 2\n\n        return result\n",
    "submit_ts": "1722697622",
    "subm_id": "552267026"
}