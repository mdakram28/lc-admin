{
    "username": "\u7ea2\u6843A\u58eb",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> all(n);\n        int left = 0;\n        int right = 0;\n        int c0 = 0;\n        int c1 = 0;\n        int idx0 = 0;\n        int idx1 = 0;\n        //vector<long long> newPre(n+1);\n        //for(int i=1;i<=n;i++){\n        //    newPre[i] = newPre[i-1] + (1 + i) * (i) / 2;\n        //}\n        while(right < n){\n            while(right < n && (c0 < k || c1 < k)){\n                if(s[right] == '0') c0++;\n                else c1++;\n                right++;\n            }\n            while(right < n && s[right] == '0' && c1<=k){\n                c0++;\n                right++;\n            }\n            while(right < n && s[right] == '1' && c0<=k){\n                c1++;\n                right++;\n            }\n            all[left] = right-1;\n            if(s[left] == '0') c0--;\n            else c1--;\n            left++;\n        }\n        while(left<n){\n            all[left] = right-1;\n            left++;\n        }\n        //for(auto x : all) cout<<x<<\" \";\n        //cout<<endl;\n        vector<long long> pre(n+1);\n        //for(int i=0;i<n;i++) pre[i+1] = pre[i] + (all[i] + i) * (all[i] - i + 1) / 2;\n        for(int i=0;i<n;i++) pre[i+1] = pre[i] + all[i] - i + 1;\n        //for(auto x : pre) cout<<x<<\" \";\n        //cout<<endl;\n        int m = queries.size();\n        vector<long long> res(m);\n        for(int i=0;i<m;i++){\n            int l = queries[i][0];\n            int r = queries[i][1];\n            auto it = lower_bound(all.begin(), all.end(), r);\n            long long t = 0;\n            if(it != all.begin()){\n                int last = it - all.begin() - 1;\n                if(last >= l) t += pre[last+1] - pre[l];\n                //cout<<t<<endl;\n            }\n            int start = max(l, (int)(it - all.begin()));\n            int end = r;\n            int nstart = 1;\n            int nend = end - start + 1;\n            //int start = it - all.begin();\n            //cout<<start<<\" \"<<end<<endl;\n            //cout<<endl;\n            t += (long long)(nstart + nend) * (nend - nstart + 1) / 2;\n            //cout<<t<<endl;\n            res[i] = t;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723953417",
    "subm_id": "556417464"
}