{
    "username": "ArchitBhardwaj",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hori, vector<int>& verti) {\n        int hor = 1 , ver = 1;\n\n        priority_queue<pair<int , int>> pq;\n        int i;\n        for(i = 0 ; i < hori.size() ; i++){\n            pq.push({hori[i] , i});\n        }\n\n        for( ; i < hori.size() + verti.size() ; i++){\n            pq.push({verti[i - hori.size()] , i});\n        }\n\n        long long int ans = 0;\n\n        while(!pq.empty()){\n            int cur = pq.top().second;\n            pq.pop();\n\n            if(cur >= hori.size()){\n                ans += hor * verti[cur - hori.size()];\n                ver++;\n            } else{\n                ans += ver * hori[cur];\n                hor++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925994",
    "subm_id": "1320272685"
}