{
    "username": "sakuyaqwq",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        using ll=long long;\n        int n=points.size();\n        vector<multiset<ll>> p(4);\n        for(int i=0;i<n;++i){\n            p[0].insert(points[i][0]+points[i][1]);\n            p[1].insert(-points[i][0]+points[i][1]);\n            p[2].insert(points[i][0]-points[i][1]);\n            p[3].insert(-points[i][0]-points[i][1]);\n        }\n        // for(int j=0;j<4;++j){\n        //     cout<<(*p[j].rbegin()-(*p[j].begin()))<<endl;\n        // }\n        // cout<<endl;\n        ll mx=1LL<<60;\n        for(int i=0;i<n;++i){\n            ll now=-1LL<<60;\n            p[0].erase(p[0].find(points[i][0]+points[i][1]));\n            // for(auto&j:p[0])cout<<j<<\" \";\n            // cout<<endl;\n            now=max(now,(*p[0].rbegin()-(*p[0].begin())));\n            p[0].insert(points[i][0]+points[i][1]);\n            // for(auto&j:p[0])cout<<j<<\" \";\n            // cout<<endl;\n            p[1].erase(p[1].find(-points[i][0]+points[i][1]));\n            now=max(now,(*p[1].rbegin()-(*p[1].begin())));\n            p[1].insert(-points[i][0]+points[i][1]);\n                   \n            p[2].erase(p[2].find(points[i][0]-points[i][1]));\n            now=max(now,(*p[2].rbegin()-(*p[2].begin())));\n            p[2].insert(points[i][0]-points[i][1]);\n                   \n            p[3].erase(p[3].find(-points[i][0]-points[i][1]));\n            now=max(now,(*p[3].rbegin()-(*p[3].begin())));\n            p[3].insert(-points[i][0]-points[i][1]);\n            mx=min(mx,now);\n        }\n        return mx;\n    }\n};"
}