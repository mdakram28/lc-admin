{
    "username": "ASHLER66",
    "submission": "class Solution {\npublic:\n    string kx;\n    struct TrieNode {\n        struct TrieNode *children[26];\n        bool isEndOfWord;                       // Represent end of word\n        int dp;\n    };\n \n    struct TrieNode *getNode(void) {\n        struct TrieNode *pNode = new TrieNode;\n        pNode->isEndOfWord = false;\n        for (int i = 0; i < 26; i++)\n            pNode->children[i] = NULL;\n        pNode->dp = INT_MAX;\n        return pNode;\n    }\n \n    void insert(struct TrieNode *root, string key, int val) {\n        struct TrieNode *pCrawl = root;\n        for (int i = 0; i < key.length(); i++) {\n            int index = key[i] - 'a';\n            if (!pCrawl->children[index]) {\n                pCrawl->children[index] = getNode();\n            }\n            pCrawl = pCrawl->children[index];\n        }\n        pCrawl->dp = min(pCrawl->dp, val);\n        pCrawl->isEndOfWord = true;\n    }\n    \n    int search(struct TrieNode *root, int idx, vector<int>& dp) {\n        if (idx == kx.length()) return 0;\n        if (dp[idx] != -1) return dp[idx];\n        \n        struct TrieNode *pCrawl = root;\n        int lx = INT_MAX;\n        \n        for (int i = idx; i < kx.length(); i++) {\n            int index = kx[i] - 'a';\n            if (pCrawl->isEndOfWord) {\n                int og = search(root, i, dp);\n                if (og != INT_MAX) {\n                    og += pCrawl->dp;\n                }\n                lx = min(lx, og);\n            }\n            if (!pCrawl->children[index]) {\n                break;\n            }\n            pCrawl = pCrawl->children[index];\n            if (i == kx.length() - 1) {\n                lx = min(lx, pCrawl->dp);\n            }\n        }\n        \n        dp[idx] = lx;\n        return lx;\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        struct TrieNode *root = getNode();\n        for (int i = 0; i < words.size(); i++) {\n            insert(root, words[i], costs[i]);\n        }\n        kx = target;\n        vector<int> dp(target.length(), -1);\n        int ans = search(root, 0, dp);\n        return (ans == INT_MAX) ? -1 : ans;\n    }\n};\n",
    "submit_ts": "1720323725",
    "subm_id": "1312382531"
}