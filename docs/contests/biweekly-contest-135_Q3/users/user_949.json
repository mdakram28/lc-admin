{
    "username": "yizzycool",
    "submission": "from collections import Counter\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        c = Counter()\n        double_count = Counter()\n        for i in range(0, len(nums) // 2):\n            left_num = nums[i]\n            right_num = nums[len(nums) - i - 1]\n            c[abs(left_num - right_num)] += 1\n            double_count[max(left_num, right_num, k - left_num, k - right_num)] += 1\n        total = 0\n        min_ope = len(nums) + 100\n        for i in range(k + 1):\n            total += double_count[i - 1]\n            step = len(nums) // 2 - c[i] + total\n            if step < min_ope:\n                min_ope = step\n        # print(c, double_count)\n        return min_ope\n        \n\n        \n\n\n\n\n\n\n\n# [3,1,7,7,8,7,0,5,  8,0,6,7,0,2,6,6]\n#  3,5,5,7,1,1,0,3\n\n#  6,6,7,7,8,7,0,8\n\n# {0:1, 1:2, 3:2, 5:2, 7:1}\n# for 0: 8 - 1 + 0 = 7\n# for 1: 8 - 2 + ",
    "submit_ts": "1721488679",
    "subm_id": "1327429811"
}