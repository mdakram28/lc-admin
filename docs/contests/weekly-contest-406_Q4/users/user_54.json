{
    "username": "kZS3d4UL2K",
    "submission": "import heapq\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        n = len(horizontalCut)\n        m = len(verticalCut)\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n\n        i, j = 0, 0\n        hp, vp = 1, 1\n        total = 0\n\n        while i < n and j < m:\n            if horizontalCut[i] > verticalCut[j]:\n                total += horizontalCut[i] * vp\n                hp += 1\n                i += 1\n            else:\n                total += verticalCut[j] * hp\n                vp += 1\n                j += 1\n        while i < len(horizontalCut):\n            total += horizontalCut[i] * vp\n            i += 1\n        while j < len(verticalCut):\n            total += verticalCut[j] * hp\n            j += 1\n\n        return total",
    "submit_ts": "1720924860",
    "subm_id": "1320233787"
}