{
    "username": "sahoo-ankit",
    "submission": "class Solution {\npublic:\n    vector<int>t[400100];\n\n    vector<int> merge(vector<int> &a,vector<int> &b){\n        vector<int>ans={0,0,0,0};\n\n        // for only left cut [0]\n        ans[0]=max({a[0]+b[0],a[1]+b[3]});\n\n        // for left & right cut [1]\n        ans[1]=max({a[0]+b[1],a[1]+b[2]});\n\n        // for only right cut [2]\n        ans[2]=max({a[2]+b[2],a[3]+b[1]});\n\n        // no cuts [2]\n        ans[3]=max({a[3]+b[0],a[2]+b[3]});\n\n        return ans;\n    }\n\n    void build(int idx,int l,int r,vector<int>& nums){\n        if(l==r){\n            t[idx]={0,0,0,nums[l]};\n            return;\n        }\n        int mid=(l+r)/2;\n        build(idx*2,l,mid,nums);\n        build(idx*2+1,mid+1,r,nums);\n\n        t[idx]=merge(t[2*idx],t[2*idx+1]);\n    }\n\n    void update(int idx,int l,int r,int pos,int val){\n        if(pos<l or pos>r)  return;\n        if(l==r){\n            t[idx]={0,0,0,val};\n            return;\n        }\n        int mid=(l+r)/2;\n        update(2*idx,l,mid,pos,val);\n        update(2*idx+1,mid+1,r,pos,val);\n\n        t[idx]=merge(t[2*idx],t[2*idx+1]);\n    }\n    int mod=1e9+7;\n\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        // t=vector<pair<int,int>>(4*n+4);\n        build(1,0,n-1,nums);\n\n        long long int ans=0;\n        for(auto q:queries){\n            update(1,0,n-1,q[0],q[1]);\n            ans=(ans+max(0,t[1][3]))%mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716694553",
    "subm_id": "1268118864"
}