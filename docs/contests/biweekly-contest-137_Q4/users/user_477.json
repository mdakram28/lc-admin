{
    "username": "\u624e\u5c3c",
    "submission": "class Solution {\n    static bool cmp(vector<pair<int, int>>& r1, vector<pair<int, int>>& r2) {\n        return r1[2].first > r2[2].first;\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long ans = LLONG_MIN;\n\n        vector<vector<pair<int, int>>> row_max(m, vector<pair<int, int>>(3));\n        vector<vector<pair<int, int>>> row_max_new;\n        for (int i = 0; i < m; i++) {\n            priority_queue<pair<int, int>> pq;\n            for (int j = 0; j < n; j++) {\n                pq.push({board[i][j], j});\n            }\n            row_max[i][0] = pq.top();\n            pq.pop();\n            row_max[i][1] = pq.top();\n            pq.pop();\n            row_max[i][2] = pq.top();\n            pq.pop();\n        }\n\n        sort(row_max.begin(), row_max.end(), cmp);\n        // for (int i = 0; i < m; i++) {\n        //     for (int j = 0; j < 3; j++) {\n        //         cout << row_max[i][j].first << endl;\n        //     }\n        //     cout << \"---\" << endl;\n        // }\n\n        unordered_set<int> to_del;\n        for (int i = 2; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                if (row_max[j][0].first <= row_max[i][2].first) {\n                    to_del.insert(j);\n                }\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n            if (to_del.count(i) > 0) continue;\n            row_max_new.push_back(row_max[i]);\n        }\n        m = row_max_new.size();\n        for (int i1 = 0; i1 <= m - 3; i1++) {\n            for (int i2 = i1 + 1; i2 <= m - 2; i2++) {\n                for (int i3 = i2 + 1; i3 <= m - 1; i3 ++) {\n                    for (int j1 = 0; j1 < 3; j1++) {\n                        for (int j2 = 0; j2 < 3; j2++) {\n                            if (row_max_new[i2][j2].second == row_max_new[i1][j1].second) continue;\n                            for (int j3 = 0; j3 < 3; j3++) {\n                                if (row_max_new[i3][j3].second == row_max_new[i1][j1].second) continue;\n                                if (row_max_new[i3][j3].second == row_max_new[i2][j2].second) continue;\n                                ans = max(ans, (long long)row_max_new[i1][j1].first + row_max_new[i2][j2].first + row_max_new[i3][j3].first);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909596",
    "subm_id": "556337070"
}