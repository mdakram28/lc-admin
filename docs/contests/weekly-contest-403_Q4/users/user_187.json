{
    "username": "hazzler",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        auto a = grid;\n        int n = a.size();\n        int m = a[0].size();\n        vector <vector <int>> pf(n, vector <int> (m));\n        for (int i = 0; i < n; ++i){\n            for (int j = 0; j < m; ++j){\n                pf[i][j] = a[i][j];\n                if (i) pf[i][j] += pf[i - 1][j];\n                if (j) pf[i][j] += pf[i][j - 1];\n                if (i && j) pf[i][j] -= pf[i - 1][j - 1];\n            }\n        }\n        auto get = [&](int lx, int ly, int rx, int ry){\n            int res = pf[rx][ry];\n            if (lx) res -= pf[lx - 1][ry];\n            if (ly) res -= pf[rx][ly - 1];\n            if (lx && ly) res += pf[lx - 1][ly - 1];\n            return res;\n        };\n        auto rec = [&](auto &&rec, int lx, int ly, int rx, int ry, int d) -> int{\n            if (lx > rx || ly > ry) return 10000;\n            while(lx < rx && get(lx, ly, lx, ry) == 0) ++lx;\n            while(lx < rx && get(rx, ly, rx, ry) == 0) --rx;\n            while(ly < ry && get(lx, ly, rx, ly) == 0) ++ly;\n            while(ly < ry && get(lx, ry, rx, ry) == 0) --ry;\n            if (d >= 2) return (rx - lx + 1) * (ry - ly + 1);\n            int ans = 1000000;\n            for (int sp = lx; sp < rx; ++sp){\n                ans = min(ans, rec(rec, lx, ly, sp, ry, d + 1) + rec(rec, sp + 1, ly, rx, ry, d + 2));\n                ans = min(ans, rec(rec, lx, ly, sp, ry, d + 2) + rec(rec, sp + 1, ly, rx, ry, d + 1));\n            }\n            for (int sp = ly; sp < ry; ++sp){\n                ans = min(ans, rec(rec, lx, ly, rx, sp, d + 1) + rec(rec, lx, sp + 1, rx, ry, d + 2));\n                ans = min(ans, rec(rec, lx, ly, rx, sp, d + 2) + rec(rec, lx, sp + 1, rx, ry, d + 1));\n            }\n            return ans;\n        };\n        return rec(rec, 0, 0, n - 1, m - 1, 0);\n    }\n};",
    "submit_ts": "1719112796",
    "subm_id": "1297309171"
}