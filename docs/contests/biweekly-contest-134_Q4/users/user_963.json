{
    "username": "qwertypushkar123",
    "submission": "class Solution {\npublic:\n    \n    bool check(vector<int>&nums,vector<vector<int>>&bit,int i,int mid,int k){\n        int ans=0;\n        for(int j=0;j<32;j++){\n            if(bit[mid+1][j]-bit[i][j] == (mid-i+1)){\n                ans=ans|(1<<j);\n            }\n        }\n        return ans<k;\n    }\n    \n    long long func(vector<int>&nums,vector<vector<int>>&bit,int k){\n        long long cnt=0;\n        int n=nums.size();\n        for(int i=0;i<n;i++){\n            int s=i,e=n-1,res=-1;\n            while(s<=e){\n                int mid=s+(e-s)/2;\n                if(check(nums,bit,i,mid,k)){\n                    res=mid;\n                    e=mid-1;\n                }\n                else{\n                    s=mid+1;\n                }\n            }\n            if(res!=-1){\n                cnt+=(n-res);\n            }\n        }\n        return cnt;\n    }\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>>bit(n+1,vector<int>(32));\n        for(int i=1;i<=n;i++){\n            for(int j=0;j<32;j++){\n                if(nums[i-1]&(1<<j)){\n                    bit[i][j]=bit[i-1][j]+1;\n                }\n                else{\n                    bit[i][j]=bit[i-1][j];\n                }\n            }\n        }\n        long long cnt1=func(nums,bit,k);\n        long long cnt2=func(nums,bit,k+1);\n        // cout<<cnt1<<\" \"<<cnt2<<endl;\n        return cnt2-cnt1;\n    }\n};",
    "submit_ts": "1720280542",
    "subm_id": "1311793290"
}