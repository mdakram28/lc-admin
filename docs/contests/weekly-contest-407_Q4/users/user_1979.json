{
    "username": "DeanW",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        long long ans = 0;\n        int pre = 0;\n        int pre_sign = 0;\n        \n        for(int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        for(auto& d: diff) {\n            int abs = (d >= 0 ? d : -d);\n            int sign = (d < 0 ? -1 : (d > 0 ? 1 : 0));\n            \n            //cout << \" sign \" << sign << \" d \" << d << \" abs \" << abs << \" pre_sign \" << pre_sign << \" pre \" << pre;\n            \n            if(pre_sign != sign) {\n                ans += abs;\n                //cout << \" ans1 \" << ans;\n            }\n            else {\n                if(abs > pre) {\n                    ans += (abs - pre);\n                    //cout << \" ans2 \" << ans;\n                }\n\n                pre = abs;\n            }\n            //cout << endl;\n            \n            pre_sign = sign;\n            pre = abs;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721533530",
    "subm_id": "1328011039"
}