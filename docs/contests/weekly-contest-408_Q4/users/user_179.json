{
    "username": "drash99",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        from collections import defaultdict\n\n        edges = defaultdict(set)\n        tops = set()\n        lefts = set()\n        bots = set()\n        rights = set()\n        for idx1, (x1, y1, r1) in enumerate(circles):\n            if y1 - r1 <= 0:\n                bots.add(idx1)\n            if x1 - r1 <= 0:\n                lefts.add(idx1)\n            if y1 + r1 >= Y:\n                tops.add(idx1)\n            if x1 + r1 >= X:\n                rights.add(idx1)\n            for idx2, (x2, y2, r2) in enumerate(circles):\n                if idx1 != idx2:\n                    if (x2-x1)**2+(y2-y1)**2 <= (r1+r2)**2:\n                        edges[idx1].add(idx2)\n                        edges[idx2].add(idx1)\n        \n\n        def check(stset, edset):\n            cand = set(stset)\n            visited = [False for _ in circles]\n            for s in cand:\n                visited[s] = True\n            while cand:\n                nextcand = set()\n                for s in cand:\n                    if s in edset:\n                        return True\n                    for e in edges[s]:\n                        if not visited[e]:\n                            visited[e] = True\n                            nextcand.add(e)\n                cand = nextcand\n            return False\n        \n        if check(tops, rights):\n            return False\n        if check(tops, bots):\n            return False\n        if check(lefts, rights):\n            return False\n        if check(lefts, bots):\n            return False\n        return True",
    "submit_ts": "1722135531",
    "subm_id": "1335704964"
}