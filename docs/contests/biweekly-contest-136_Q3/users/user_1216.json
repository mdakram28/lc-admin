{
    "username": "priyanshusrivastava770",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        int answer = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                answer += 1;\n            }\n        }\n\n        vector<int> shift = {0, 0, 0};\n\n        if (rows % 2 == 1) {\n            int a = 0, b = cols - 1;\n            while (a < b) {\n                int sm = grid[rows / 2][a] + grid[rows / 2][b];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int a = 0, b = rows - 1;\n            while (a < b) {\n                int sm = grid[a][cols / 2] + grid[b][cols / 2];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                answer += shift[1];\n            } else {\n                answer += 2;\n            }\n        } else {\n            answer += shift[1];\n        }\n\n        for (int i = 0; i < rows / 2; i++) {\n            for (int j = 0; j < cols / 2; j++) {\n                int a = grid[i][j];\n                int b = grid[rows - 1 - i][j];\n                int c = grid[i][cols - 1 - j];\n                int d = grid[rows - 1 - i][cols - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    answer += min(sm, 4 - sm);\n                }\n            }\n        }\n\n        return answer;\n    }\n};\n",
    "submit_ts": "1722699333",
    "subm_id": "1343208447"
}