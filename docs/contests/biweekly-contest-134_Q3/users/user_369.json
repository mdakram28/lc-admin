{
    "username": "dcube04",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n\n    int n = colors.size();\n    if (k > n) return 0; \n\n    int count = 0;\n    int alternatingLength = 1;\n\n    vector<int> extendedColors(colors.begin(), colors.end());\n    extendedColors.insert(extendedColors.end(), colors.begin(), colors.end());\n\n    for (int i = 1; i < 2 * n; ++i) {\n        if (extendedColors[i] != extendedColors[i - 1]) {\n            ++alternatingLength;\n        } else {\n            alternatingLength = 1;\n        }\n\n        if (alternatingLength >= k && i-k+1<n) {\n            count++;\n        }\n    }\n\n    return count;\n\n\n\n\n\n\n\n    }\n};",
    "submit_ts": "1720278809",
    "subm_id": "1311725172"
}