{
    "username": "RockStar_14",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long ans = 0L;\n        int n = nums.length;\n        int i = 0;\n        while(i < n) {\n            if((nums[i]&k) == k) {\n                int j = i;\n                while(j < n && (nums[j]&k) == k) {\n                    j ++;\n                }\n                int [] arr = new int [31];\n                int l = i, r = i;\n                while(r < j) {\n                    for(int x = 0 ; x < 31 ; x++) {\n                        if(((1 << x) & nums[r]) != 0) arr[x] ++;\n                    }\n                    int diff = r - l + 1;\n                    int curr = 0;\n                    for(int x = 0 ; x < 31 ; x++) {\n                        if(arr[x] == diff) curr += (1 << x);\n                    }\n                    while(l <= r && curr == k) {\n                        ans += (j - r) * 1L;\n                        // System.out.println(ans + \" \" + l + \" \" + r);\n                        for(int x = 0 ; x < 31 ; x++) {\n                            if(((1 << x) & nums[l]) != 0) arr[x] --;\n                        }\n                        l ++;\n                        diff = r - l + 1;\n                        int temp = 0;\n                        for(int x = 0 ; x < 31 ; x++) {\n                            if(arr[x] == diff) temp += (1 << x);\n                        }\n                        curr = temp;\n                    }\n                    r ++;\n                }\n                i = j - 1;\n            }\n            i ++;\n        }\n        return ans ;\n    }\n}",
    "submit_ts": "1720280958",
    "subm_id": "1311808098"
}