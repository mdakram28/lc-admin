{
    "username": "wanghy012",
    "submission": "\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        n = len(circles)\n        edges = [[] for _ in range(n)]\n        upper = [False] * n\n        lower = [False] * n\n        for i,(x,y,r) in enumerate(circles):\n            if (X-x)**2 + (Y-y)**2 <= r**2:\n                return False\n            if x <= r and y <= Y:\n                upper[i] = True\n            if abs(Y-y) <= r and x <= X:\n                upper[i] = True\n            if abs(X-x) <= r and y <= Y:\n                lower[i] = True\n            if y <= r and x <= X:\n                lower[i] = True\n\n        for i in range(n):\n            for j in range(i+1,n):\n                if self.intersaction(circles[i], circles[j], X, Y):\n                    edges[i].append(j)\n                    edges[j].append(i)\n        #print(lower)\n        #print(upper)\n        #print(edges)\n        visited = [False] * n\n        mystack = []\n        for i in range(n):\n            if upper[i]:\n                mystack.append(i)\n                visited[i] = True\n        while mystack:\n            i = mystack.pop()\n            if lower[i]:\n                return False\n            for j in edges[i]:\n                if not visited[j]:\n                    mystack.append(j)\n                    visited[j] = True\n        return True\n\n\n    def intersaction(self,c1, c2, X, Y):\n        x1, y1, r1 = c1\n        x2, y2, r2 = c2\n        if (x1 - x2)**2 + (y1-y2)**2 > (r1+r2)**2:\n            return False\n        if x1 >= X and x2 >= X:\n            return False\n        if y1 >= Y and y2 >= Y:\n            return False\n        if x1 >= X and y1 >= Y:\n            return False\n        if x2 >= X and y2 >= Y:\n            return False\n        if not (x1 < X and y1 < Y) and not (x2 < x and y2 < Y):\n            return Y > (y2 * (x1 - X) + y1 * (X-x2)) / (x1-x2)\n        return True\n\n\n        \n    ",
    "submit_ts": "1722137699",
    "subm_id": "1335771194"
}