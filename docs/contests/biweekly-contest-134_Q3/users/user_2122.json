{
    "username": "rohitmishra27037",
    "submission": "class Solution {\npublic:\n\n//not used\nbool sol(const vector<int>& colors, int start, int k) {\n    int n = colors.size();\n    for (int i = 0; i < k - 1; ++i) {\n        int current = (start + i) % n;\n        int next = (start + i + 1) % n;\n        if (colors[current] == colors[next]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n    int rohit270(vector<int>& ro, int k){\n        int i = 0,j=1,numFound=0,n = ro.size();\n        \n        while (j < n + k && i < n) {\n            int tempJ = j;\n            int t = tempJ % n;\n            while (ro[t] != ro[(t - 1 + n) % n] && tempJ < n + k - 1) {\n                tempJ++;\n                t = tempJ % n;\n            }\n            numFound += max(tempJ - i - k + 1, 0);\n            i = tempJ;\n            j = i + 1;\n        }\n        \n        return numFound;\n    }\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        return rohit270(colors,k);\n    }\n};",
    "submit_ts": "1720281176",
    "subm_id": "1311815833"
}