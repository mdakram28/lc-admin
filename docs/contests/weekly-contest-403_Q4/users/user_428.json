{
    "username": "jawaherul",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int min = 1000;\n        for(int i=1; i<m-1; i++) {\n            for(int j=i+1; j<m; j++) {\n                int total = compute(grid, 0, i, 0, n) + compute(grid, i, j, 0, n) + compute(grid, j, m, 0, n);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        for(int i=1; i<m; i++) {\n            for(int j=1; j<n; j++) {\n                int total = compute(grid, 0, i, 0, n) + compute(grid, i, m, 0, j) + compute(grid, i, m, j, n);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        for(int i=1; i<m; i++) {\n            for(int j=1; j<n; j++) {\n                int total = compute(grid, i, m, 0, n) + compute(grid, 0, i, 0, j) + compute(grid, 0, i, j, n);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        for(int i=1; i<n-1; i++) {\n            for(int j=i+1; j<n; j++) {\n                int total = compute(grid, 0, m, 0, i) + compute(grid, 0, m, i, j) + compute(grid, 0, m, j, n);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        for(int i=1; i<n; i++) {\n            for(int j=1; j<m; j++) {\n                int total = compute(grid, 0, m, 0, i) + compute(grid, 0, j, i, n) + compute(grid, j, m, i, n);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        for(int i=1; i<n; i++) {\n            for(int j=1; j<m; j++) {\n                int total = compute(grid, 0, m, i, n) + compute(grid, 0, j, 0, i) + compute(grid, j, m, 0, i);\n                if(total<min) {\n                    min = total;\n                }\n            }\n        }\n        return min;\n    }\n    \n    private int compute(int[][] grid, int left, int right, int top, int bottom) {\n        int l = right;\n        int r = left-1;\n        int t = bottom;\n        int b = top-1;\n        \n        for(int i=left; i<right; i++) {\n            for(int j=top; j<bottom; j++) {\n                if(grid[i][j]==1) {\n                    if(i<l) {\n                        l = i;\n                    }\n                    if(i>r) {\n                        r = i;\n                    }\n                    if(j<t) {\n                        t = j;\n                    }\n                    if(j>b) {\n                        b = j;\n                    }\n                }\n            }\n        }\n        return l>r ? 1 : (r-l+1)*(b-t+1);\n    }\n}",
    "submit_ts": "1719114738",
    "subm_id": "1297352916"
}