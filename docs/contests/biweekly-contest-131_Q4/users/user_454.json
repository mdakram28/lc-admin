{
    "username": "Niloy_Das_19",
    "submission": "int a[100005] = {0},seg[4*100005];\nvoid build(int ind,int low,int high){\n      if(low==high){\n          seg[ind] = a[low];\n          return ;\n      }\n      int mid = (low+high)/2;\n      build(2*ind+1,low,mid);\n      build(2*ind+2,mid+1,high);\n      seg[ind] = max(seg[2*ind+1],seg[2*ind+2]);\n}\n\nint query(int ind,int low,int high, int l,int r){\n    if(low>=l && high<=r) return seg[ind];\n    if(l> high || low>r) return INT_MIN;\n    int mid = (low+high)/2;\n    int left = query(2*ind+1,low,mid,l,r);\n    int right = query(2*ind+2,mid+1,high,l,r);\n    return max(left,right);\n}\n\nvoid update(int ind, int low , int high , int pos , int new_val){\n    if(low == high){\n        seg[ind] = new_val;\n    }\n    else{\n        int mid = (low + high) / 2;\n        if(pos <= mid){\n            update(2*ind + 1, low , mid , pos , new_val);\n        }\n        else{\n            update(2*ind + 2 , mid + 1, high , pos , new_val);\n        }\n        seg[ind] = max(seg[2*ind+1] , seg[2*ind+2]);\n    }\n}\n\n\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        set<int> dis;\n        dis.insert(0);\n        dis.insert(50005);\n        a[50004] = 50005;\n        build(0,0,50005);\n\n        vector<bool> ans;\n        for(auto q: queries){\n            if(q[0] == 1){\n                auto it = dis.upper_bound(q[1]);\n                auto right = it;\n                auto left = --it;\n                int leftDis = q[1] - *left;\n                int rightDis = *right - q[1];\n                // cout << *left << \" \" << *right << \" \" << leftDis << \" \" << rightDis << \"\\n\";\n                update(0 , 0 , 50005 , q[1] , leftDis);\n                update(0 , 0 , 50005 , *right , rightDis);\n                dis.insert(q[1]);\n            }\n            else{\n                int x = q[1];\n                int sz = q[2];  \n                auto it = dis.upper_bound(x);\n                --it;\n                int ma = query(0,0,50005,0,*it);\n                // cout << ma << \" \" << *it << \"\\n\";\n                ma = max(ma, (x - *it));\n                if(ma >= sz){\n                    ans.push_back(true);\n                }\n                else ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716652529.0
}