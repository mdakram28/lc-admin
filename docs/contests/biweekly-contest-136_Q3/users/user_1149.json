{
    "username": "henrychienhy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int flip = 0;\n        for(int i = 0; i < m - i - 1; i++) {\n            for(int j = 0; j < n - j - 1; j++) {\n                int one = grid[i][j] + grid[i][n-j-1] + grid[m-i-1][j] + grid[m-i-1][n-j-1];\n                flip += min(one % 4, 4 - one % 4);\n            }\n        }\n        int x = 0, one_count = 0;\n        if (m % 2) {\n            for(int j = 0; j < n - j - 1; j++) {\n                if (grid[m/2][j] != grid[m/2][n - j - 1]) {\n                    x++;\n                }\n                one_count += grid[m/2][j] + grid[m/2][n - j - 1];\n            }\n        }\n        if (n % 2) {\n            for(int i = 0; i < m - i - 1; i++) {\n                if (grid[i][n/2] != grid[m - i - 1][n/2]) {\n                    x++;\n                }\n                one_count += grid[i][n/2] + grid[m - i - 1][n/2];\n            }\n        }\n        if (m%2 && n%2) {\n            x += grid[m/2][n/2];\n        }\n        if (one_count % 4 == 2 && x <= 1)\n            return flip + x + 2;\n        else  {\n            return flip + x;\n        }\n    }\n};",
    "submit_ts": "1722698628",
    "subm_id": "1343186763"
}