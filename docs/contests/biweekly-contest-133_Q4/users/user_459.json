{
    "username": "xGh0st",
    "submission": "#define fastio fastio\nconst int mod = 1e9 + 7;\n#define ll long long\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> mpp;\n        for(auto it:requirements) mpp[it[0] + 1] = it[1];\n        vector<vector<ll>> perm(n + 1, vector<ll>(401,0));\n        perm[0][0] = 1;\n        for(int i = 1; i <= n; i++){\n            for(int j = 0; j <= 400; j++){\n                for(int k = 0; k < i; k++){\n                    if(j - k >= 0) perm[i][j] = (perm[i][j] + perm[i-1][j-k]) % mod;\n                }\n            }\n            if(mpp.count(i) > 0){\n                for(int j = 0; j <= 400; j++){\n                    if(j != mpp[i]) perm[i][j] = 0;\n                }\n            }\n        }\n        ll ans = 0;\n        for(auto it:perm[n]) ans = (ans + it) % mod;\n        return ans;\n    }\n};\n\n/*\n* xGh0st\n*/",
    "submit_ts": 1719070511.0
}