{
    "username": "deku878",
    "submission": "#include<bits/stdc++.h>\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1000000007;\n        unordered_map<int, int> req;\n        const int MAX_INV = 400;\n        vector<vector<long long>> dp(n + 1, std::vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n        for (const auto& r : requirements) {\n            req[r[0] + 1] = r[1];\n        }\n\n        \n\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= MAX_INV; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (req.find(len) != req.end()) {\n                int tInv = req[len];\n                for (int inv = 0; inv <= MAX_INV; inv++) {\n                    if (inv != tInv) {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long res = 0;\n        for (long long cnt : dp[n]) {\n            res = (res + cnt) % MOD;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": 1719070476.0
}