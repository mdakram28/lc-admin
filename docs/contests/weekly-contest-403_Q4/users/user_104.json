{
    "username": "power1011",
    "submission": "class Solution {\npublic:\n    int solve1(vector<vector<int>>& grid, int sx, int ex, int sy, int ey)\n    {\n        int mn_x = ex+1;\n        int mn_y = ey+1;\n        int mx_x = sx-1;\n        int mx_y = sy-1;\n        for(int x=sx;x<ex;++x)\n        {\n            for(int y=sy;y<ey;++y)\n            {\n                if(grid[x][y] == 1)\n                {\n                    mn_x = min(mn_x, x);\n                    mx_x = max(mx_x, x);\n                    mn_y = min(mn_y, y);\n                    mx_y = max(mx_y, y);\n                }\n            }\n        }\n        if(mn_x == ex+1)\n        {\n            return 0;\n        }\n        return (mx_x - mn_x + 1) * (mx_y - mn_y + 1);\n    }\n    int solve2(vector<vector<int>>& grid, int sx, int ex, int sy, int ey)\n    {\n        int ans = (ex - sx) * (ey - sy);\n        for(int x=sx;x<ex;++x)\n        {\n            int s = 0;\n            s += solve1(grid, sx, x, sy, ey);\n            s += solve1(grid, x, ex, sy, ey);\n            ans = min(ans, s);\n        }\n        for(int y=sy;y<ey;++y)\n        {\n            int s = 0;\n            s += solve1(grid, sx, ex, sy, y);\n            s += solve1(grid, sx, ex, y, ey);\n            ans = min(ans, s);\n        }\n        return ans;\n    }\n    int solve3(vector<vector<int>>& grid, int sx, int ex, int sy, int ey)\n    {\n        int ans = (ex - sx) * (ey - sy);\n        // 1 x 2\n        for(int x=sx;x<ex;++x)\n        {\n            { // case 1\n                int s = 0;\n                s += solve2(grid, sx, x, sy, ey);\n                s += solve1(grid, x, ex, sy, ey);\n                ans = min(ans, s);\n            }\n            { // case 2\n                int s = 0;\n                s += solve1(grid, sx, x, sy, ey);\n                s += solve2(grid, x, ex, sy, ey);\n                ans = min(ans, s);\n            }\n        }\n        for(int y=sy;y<ey;++y)\n        {\n            { // case 3\n                int s = 0;\n                s += solve2(grid, sx, ex, sy, y);\n                s += solve1(grid, sx, ex, y, ey);\n                ans = min(ans, s);\n            }\n            { // case 4\n                int s = 0;\n                s += solve1(grid, sx, ex, sy, y);\n                s += solve2(grid, sx, ex, y, ey);\n                ans = min(ans, s);\n            }\n        }\n        return ans;\n    }\n        \n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid.at(0).size();\n        // O((n*m*n*m)^3)\n        // *********\n        // *    |  *\n        // *    |  *\n        // *    |  *\n        // *********\n        \n        // O(2*(n+m)) O(n*m) => O((n+m)*n*m)\n        // *********\n        // *    |  *\n        // *    |--*\n        // *    |  *\n        // *********\n        // *********\n        // *    |  *\n        // *----|  *\n        // *    |  *\n        // *********\n        // O(n*m) * O(n*m) => O(n^2*m^2)\n\n        // *********\n        // * |  |  *\n        // * |  |  *\n        // * |  |  *\n        // *********\n        \n        // *********\n        // *-------*\n        // *       *\n        // *-------*\n        // *********\n        \n        // O(n^2) * O(n*m) => O(n^3*m)\n        // O(m^2) * O(n*m) => O(m^3*n)\n        // O(m^2) * O(n*m) => O(max(m,n)^4)\n        return solve3(grid, 0, n, 0, m);\n    }\n};",
    "submit_ts": 1719112279.0
}