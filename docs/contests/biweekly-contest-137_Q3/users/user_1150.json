{
    "username": "\u5723\u624b\u4e66\u751f",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board)\n    {\n        int i, j, k;\n        int m = board.size();\n        int n = board[0].size();\n        long long ans, cur;\n        vector<vector<pair<long long, int>>> max3OfRow(m, vector<pair<long long, int>>(3, {-1, -1}));\n        //vector<int>\n        for (i = 0; i < m; i++) {\n            for (j = 0; j < n; j++) {\n                if (max3OfRow[i][0].second == -1) {\n                    max3OfRow[i][0] = {board[i][j], j};\n                } else if (max3OfRow[i][1].second == -1) {\n                    if (max3OfRow[i][0].first < board[i][j]) {\n                        max3OfRow[i][1] = max3OfRow[i][0];\n                        max3OfRow[i][0] = {board[i][j], j};\n                    } else {\n                        max3OfRow[i][1] = {board[i][j], j};\n                    }\n                } else if (max3OfRow[i][2].second == -1) {\n                    if (max3OfRow[i][0].first < board[i][j]) {\n                        max3OfRow[i][2] = max3OfRow[i][1];\n                        max3OfRow[i][1] = max3OfRow[i][0];\n                        max3OfRow[i][0] = {board[i][j], j};\n                    } else if (max3OfRow[i][1].first < board[i][j]) {\n                        max3OfRow[i][2] = max3OfRow[i][1];\n                        max3OfRow[i][1] = {board[i][j], j};\n                    } else {\n                        max3OfRow[i][2] = {board[i][j], j};\n                    }\n                } else {\n                    if (max3OfRow[i][0].first < board[i][j]) {\n                        max3OfRow[i][2] = max3OfRow[i][1];\n                        max3OfRow[i][1] = max3OfRow[i][0];\n                        max3OfRow[i][0] = {board[i][j], j};\n                    } else if (max3OfRow[i][1].first < board[i][j]) {\n                        max3OfRow[i][2] = max3OfRow[i][1];\n                        max3OfRow[i][1] = {board[i][j], j};\n                    } else if (max3OfRow[i][2].first < board[i][j]) {\n                        max3OfRow[i][2] = {board[i][j], j};\n                    }\n                }\n            }\n        }\n        ans = -3000000001ll;\n        int c1, c2;\n        long long t1, t2, t;\n        for (i = 0; i < m; i++) {\n            for (j = 0; j < m; j++) {\n                if (i == j) {\n                    continue;\n                }\n                if (max3OfRow[i][0].second != max3OfRow[j][0].second) {\n                    cur = max3OfRow[i][0].first + max3OfRow[j][0].first;\n                    c1 = max3OfRow[i][0].second;\n                    c2 = max3OfRow[j][0].second;\n                } else {\n                    t1 = max3OfRow[i][0].first + max3OfRow[j][1].first;\n                    t2 = max3OfRow[i][1].first + max3OfRow[j][0].first;\n                    if (t1 > t2) {\n                        cur = t1;\n                        c1 = max3OfRow[i][0].second;\n                        c2 = max3OfRow[j][1].second;\n                    } else {\n                        cur = t2;\n                        c1 = max3OfRow[i][1].second;\n                        c2 = max3OfRow[j][0].second;\n                    }\n                }\n                //printf (\"cur = %d\\n\", cur);\n                t = cur;\n                for (k = 0; k < m; k++) {\n                    cur = t;\n                    if (k == i || k == j) {\n                        continue;\n                    }\n                    /*if (i == 1 && j == 3) {cout << \"here!!!\\n\";\n                    printf (\"%d %d\\n\", c1, c2); }\n                    */\n                    if (max3OfRow[k][0].second == c1 || max3OfRow[k][0].second == c2) {\n                        //cout << \"h\\n\";\n                        if (max3OfRow[k][1].second == c1 || max3OfRow[k][1].second == c2) {\n                            //cout << \"h1\\n\";\n                            //cout << max3OfRow[k][2].first << endl;;\n                            cur += max3OfRow[k][2].first;\n                        } else {\n                            cur += max3OfRow[k][1].first;\n                        }\n                    } else {\n                        cur += max3OfRow[k][0].first;\n                    }\n                    //printf (\"cur = %d end\\n\", cur);\n                    ans = max(ans, cur);\n                }\n                \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909648",
    "subm_id": "556337322"
}