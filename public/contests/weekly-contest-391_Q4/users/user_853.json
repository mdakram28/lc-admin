{
    "username": "hughstudy-n",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int len = points.length;\n        int[] sum = new int[len], diff = new int[len];\n        for (int i = 0; i < points.length; ++i) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        int[] removeCand = findPos(sum, diff);\n        int res = Integer.MAX_VALUE;\n        for (int n : removeCand) {\n            res = Math.min(res, minimumDistance(sum, diff, n));\n        }\n        return res;\n    }\n\n    private int[] findPos(int[] sum, int[] diff) {\n        int minsum, maxsum, mindiff, maxdiff;\n        minsum = maxsum = 0;\n        mindiff = maxdiff = 0;\n        for (int i = 1; i < sum.length; i++) {\n            if (sum[i] < sum[minsum]){\n                minsum = i;\n            } else if (sum[i] > sum[maxsum]){\n                maxsum = i;\n            }\n\n            if (diff[i] < diff[mindiff]) {\n                mindiff = i;\n            }\n            else if (diff[i] > diff[maxdiff]) {\n                maxdiff = i;\n            }\n        }\n        return new int[]{minsum, maxsum, mindiff, maxdiff};\n    }\n\n    private int minimumDistance(int[] sum, int[] diff, int skip) {\n        int minsum = Integer.MAX_VALUE, maxsum = Integer.MIN_VALUE, mindiff = Integer.MAX_VALUE, maxdiff = Integer.MIN_VALUE;\n        for (int i = 0; i < sum.length; ++i) {\n            if (i == skip) continue;\n            if (sum[i] < minsum) {\n                minsum = sum[i];\n            }\n            if (sum[i] > maxsum) {\n                maxsum = sum[i];\n            }\n\n            if (diff[i] < mindiff) {\n                mindiff = diff[i];\n            }\n            if (diff[i] > maxdiff) {\n                maxdiff = diff[i];\n            }\n        }\n        return Math.max(maxsum - minsum, maxdiff - mindiff);\n    }\n}"
}