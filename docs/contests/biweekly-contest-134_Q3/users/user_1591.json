{
    "username": "ayushku22",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(), count = 0;\n        bool isPrevAlternating = false;\n\n        for (int i = 0; i < n; i++) {\n            bool flag = true;\n            // Check the endpoints\n            if (i == 0 || !isPrevAlternating) {\n                for (int j = 0; j < k - 1; j++) {\n                    if (colors[(i + j) % n] == colors[(i + j + 1) % n]) {\n                        flag = false;\n                        break;\n                    }\n                }\n            } else {\n                // Just check the last point\n                if (colors[(i + k - 2) % n] == colors[(i + k - 1) % n]) {\n                    flag = false;\n                }\n            }\n\n            if (flag) {\n                count++;\n            }\n\n            isPrevAlternating = flag;\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720278841",
    "subm_id": "1311726560"
}