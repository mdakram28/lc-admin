{
    "username": "jeremyzhang96",
    "submission": "class Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        # \u65b0\u5efa\u9053\u8def\u610f\u5473\u7740\u9053\u8def\u8de8\u8fc7\u7684\u57ce\u5e02\u5931\u53bb\u610f\u4e49\uff0c\u4e5f\u5373\u5220\u9664\u533a\u95f4\n        city = list(range(n))\n        ans = [-1] * len(queries)\n        for i, (u, v) in enumerate(queries):\n            iu = bisect_left(city, u)\n            iv = bisect_left(city, v)\n            # \u57ce\u5e02u\u548cv\u4ecd\u7136\u5b58\u5728\uff0c\u5219\u5220\u9664\u4e24\u8005\u4e4b\u95f4\u7684\u57ce\u5e02\n            if iu < len(city) and city[iu] == u and iv < len(city) and city[iv] == v:\n                city[iu + 1:iv] = []\n            ans[i] = len(city) - 1  # \u4f59\u4e0b\u57ce\u5e02\u6570\u51cf1\u5373\u662f\u6700\u77ed\u8ddd\u79bb\n        return ans",
    "submit_ts": "1722740629",
    "subm_id": "552332683"
}