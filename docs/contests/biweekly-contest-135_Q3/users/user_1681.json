{
    "username": "satish_chau95",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n      unordered_map<int, int> freq;\n    int max_freq = 0;\n\n    for (int i = 0; i < n / 2; ++i) {\n        int diff = abs(nums[i] - nums[n - i - 1]);\n        freq[diff]++;\n        max_freq = max(max_freq, freq[diff]);\n    }\n     int p=0;\n     for(auto i:freq){\n        if(i.second==max_freq){\n            p=i.first;break;\n        }\n     }\n     int c=0;\n      for (int i = 0; i < n / 2; ++i) {\n        int dif = abs(nums[i] - nums[n - i - 1]);\n       if(p!=dif){\n              int r=min(nums[i] , nums[n - i - 1]);\n              int s=max(nums[i] , nums[n - i - 1]);\n             if(r+p<=k) c++;\n             if(s-p>=0) c++;\n       }\n    }\n\n    // int changes_needed = (n / 2) - max_freq;\n map<int,vector<int>> m;\n        vector<int> v;\n        for(int i = 0;i<n/2;i++){\n            int a = nums[i],b = nums[n-i-1];\n            int diff = abs(a-b);\n            int X = max({a,b,k-a,k-b});\n            m[diff].push_back(X);\n            v.push_back(X);\n        }\n        int result = n;\n        sort(v.begin(),v.end());\n       \n        for(auto i:m){\n            int k = lower_bound(v.begin(),v.end(),i.first)-v.begin();\n\n            k = k*2+(n/2-k);\n\n            for(auto &X:i.second){\n                if(X>=i.first){\n                    k--;\n                }\n                else{\n                    k-=2;\n                }\n            }\n\n            result = min(result,k);\n\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1721490035",
    "subm_id": "1327471132"
}