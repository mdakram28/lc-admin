{
    "username": "XKTZ",
    "submission": "typedef long long ll;\n\nconstexpr ll MAXN = 1e5 + 5;\nconstexpr ll MOD = 1e9 + 7;\n\nconstexpr ll B = 226;\nll N;\nll blockval[MAXN][4];\n\nll a[MAXN];\n\nll dp[MAXN];\n\n// 00 = 0\n// 01 = 1\n// 10 = 2\n// 11 = 3\n\nvoid calc(ll L, ll R, ll *ans) {\n    if ( L == R ){ \n        ans[0b00] = 0ll;\n        ans[0b01] = max(0ll, a[L]);\n        ans[0b10] = max(0ll, a[L]);\n        ans[0b11] = max(0ll, a[L]);\n        return;\n    } else if (L == R - 1) {\n        ans[0b00] = 0ll;\n        ans[0b01] = max({0ll, a[R]});\n        ans[0b10] = max({0ll, a[L]});\n        ans[0b11] = max({0ll, a[L], a[R]});\n        return;\n    }\n    ll Z = a[L];\n    // a[L] = 0;\n    for (ll i = L; i <= R; i ++) {\n        if (i == L) {\n            dp[i] = max(0ll, a[i]);\n        } else if (i == L + 1) {\n            dp[i] = max(dp[i - 1], a[i]);\n        } else {\n            dp[i] = max(dp[i - 1], dp[i - 2] + a[i]);\n        }\n    }\n    ans[0b10] = dp[R-1];\n    ans[0b11] = dp[R];\n    a[L] = 0;\n    for (ll i = L; i <= R; i ++) {\n        if (i == L) {\n            dp[i] = max(0ll, a[i]);\n        } else if (i == L + 1) {\n            dp[i] = max(dp[i - 1], a[i]);\n        } else {\n            dp[i] = max(dp[i - 1], dp[i - 2] + a[i]);\n        }\n    }\n    ans[0b00] = dp[R-1];\n    ans[0b01] = dp[R];\n    a[L] = Z;\n}\n\nll dps[MAXN][2];\n\nll calcans() {\n    memset(dps[0], 0, sizeof(dps[0]));\n    for (ll i = 1; i <= N / B; i ++) {\n        dps[i][0] = max(dps[i-1][1] + blockval[i][0b00],\n                        dps[i-1][0] + max(blockval[i][0b00], blockval[i][0b10]));\n        dps[i][1] = max(dps[i-1][1]+max(blockval[i][0b00], blockval[i][0b01]),\n                        dps[i-1][0]+max({blockval[i][0b00], blockval[i][0b01], blockval[i][0b11]}));\n    }\n    return max(dps[N/B][0], dps[N/B][1]);\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        N = nums.size();\n        nums.insert(nums.begin(), 0ll);\n        while (N % B != 0) {\n            nums.push_back(0ll);\n            N ++;\n        }\n        for (ll i = 1; i <= N; i ++) {\n            dp[i] = 0;\n            dps[i][0] = dps[i][1] = 0;\n        }\n        for (ll i = 1; i <= N; i ++) {\n            a[i] = nums[i];\n        }\n        for (ll i = 1; i <= N; i += B) {\n            calc(i, i + B - 1, blockval[(i + B - 1) / B]);\n        }\n        ll ans = 0;\n        for (auto &q: queries) {\n            ll p = 1+q[0], x = q[1];\n            a[p] = x;\n            ll loc = (p + B - 1) / B;\n            calc((loc - 1) * B + 1, (loc) * B, blockval[(p+B-1)/B]);\n            (ans += calcans()) %= MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716694104.0
}