{
    "username": "oopzzozzo",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int N = edges.size() + 1;\n        vector<vector<int>> m(N);\n        vector<int> p(N), up(N), down(N);\n        for(auto e:edges){\n            m[e[0]].push_back(e[1]);\n            m[e[1]].push_back(e[0]);\n        }\n        calculateDown(0, m, p, down);\n        vector<int> tmp(1, down[0]);\n        calculateUp(0, m, down, tmp, p, up);\n        vector<int> ans;\n        for(int i=0; i<N; i++){\n            //cout << down[i] << \" \" << up[i] << endl;\n            ans.push_back(max(down[i]-((i%2==0)+1), up[i]));\n        }\n        return ans;\n    }\n    int calculateDown(int r, vector<vector<int>> &m, vector<int> &p, vector<int> &ret){\n        int mx = 0;\n        for(int c:m[r]){\n            if(c == p[r])\n                continue;\n            p[c] = r;\n            mx = max(mx, calculateDown(c, m, p, ret));\n        }\n        return ret[r] = mx + (r%2==0) + 1;\n    }\n    int calculateUp(int r, vector<vector<int>> &m, vector<int> &down, vector<int> &sib, vector<int> &p, vector<int> &ret){\n        int mx = ret[p[r]] + (r? (p[r]%2==0) + 1: 0);\n        int s = sib[0];\n        if(sib[0] == down[r]){\n            if(sib.size() > 1)\n                s = sib[1];\n            else \n                s = -100;\n        }\n        ret[r] = max(mx, s + (p[r]%2==0) + 1);\n        vector<int> ss;\n        for(int c:m[r]){\n            if(c == p[r])\n                continue;\n            ss.push_back(down[c]);\n        }\n        sort(ss.rbegin(), ss.rend());\n        for(int c:m[r]){\n            if(c == p[r])\n                continue;\n            calculateUp(c, m, down, ss, p, ret);\n        }\n        return ret[r];\n    }\n};",
    "submit_ts": "1722700091",
    "subm_id": "1343231435"
}