{
    "username": "VisheshGarg",
    "submission": "class Solution {\npublic:\n\n    int findIndex(vector<int> &v, int k, int d){\n        int s=0, e=v.size()-1, res=-1;\n        while(s<=e){\n            int mid = (s+e)>>1;\n            if(v[mid]<d){\n                res=mid;\n                s=mid+1;\n            }else{\n                e=mid-1;\n            }\n        }\n        return res;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        vector<int> v;\n        unordered_map<int,int> diff;\n        for(int i=0; i<n/2; i++){\n            int maxx = max(nums[i],max(nums[n-i-1],max(k-nums[i],k-nums[n-i-1])));\n            v.push_back(maxx);\n            diff[abs(nums[i]-nums[n-i-1])]++;\n        }\n        sort(v.begin(), v.end());\n        int ans = INT_MAX;\n        for(int i=0; i<=k; i++){\n            int idx = findIndex(v,k,i);\n            if(idx==-1){\n                ans = min(ans,(int)(v.size()-diff[i]));\n            }else{\n                int r = idx+1+v.size()-diff[i];\n                ans = min(ans,r);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721490004",
    "subm_id": "1327470233"
}