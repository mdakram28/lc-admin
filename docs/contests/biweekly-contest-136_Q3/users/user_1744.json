{
    "username": "jfkjfk",
    "submission": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define fastio()        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD             1000000007\n#define MOD1            998244353\n#define INF             1e18\n#define endl            \"\\n\"\n#define pb              push_back\n#define eb              emplace_back\n#define mp              make_pair\n#define gcd(a, b)       __gcd(a,b)\n#define ff              first\n#define ss              second\n#define PI              3.141592653589793238462\n#define set_bits(x)     __builtin_popcountll(x)\n#define all(x)          (x).begin(), (x).end()\n\ntypedef long long ll;\ntypedef long double lld;\n\n/*---------------------------------------------------------------------------------------------------------------------------*/\nll power(ll a, ll n){\n    ll res = 1;\n    while(n){\n        if(n & 1){\n            res = (res * a) % MOD;\n        }\n        a = (a * a) % MOD;\n        n >>= 1;\n    }\n    return res;\n}\n/*---------------------------------------------------------------------------------------------------------------------------*/\n\nclass Solution {\npublic:\n\n    bool isPalindrome(string s){\n        int n = s.size();\n        for(int i=0; i<n/2; i++){\n            if(s[i] != s[n-i-1]){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    bool isPrime(int n){\n        for(int i=2; i*i<=n; i++){\n            if(n % i == 0){\n                return false;\n            }\n        }\n        return true;\n    } \n    \n    void checkAns(vector<vector<int>> &grid, int n, int m, int &ans){\n        for(int i=0; i<n/2; i++){\n            for(int j=0; j<m/2; j++){\n                int val1 = grid[i][j];\n                int val2 = grid[n-i-1][j];\n                int val3 = grid[i][m-1-j];\n                int val4 = grid[n-1-i][m-1-j];\n                \n                int res = val1 + val2 + val3 + val4;\n                \n                if(res != 0){\n                    if(res != 4){\n                        ans += min(res, 4 - res);\n                    }\n                }\n            }\n        }\n    }\n    \n    int getAns(vector<vector<int>>& grid){\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        if(n & 1){\n            if(m & 1){\n                if(grid[n/2][m/2]==1){\n                    ans++;\n                }\n            }\n        }\n        vector<int> v(3);\n        for(int i=0; i<3; i++){\n            v[i] = 0;\n        }\n        if(n & 1){\n            int val1 = 0, val2 = m - 1;\n            while(val1 < val2){\n                int val = grid[n/2][val1] + grid[n/2][val2];\n                v[val]++;\n                val1++;\n                val2--;\n            }\n        }\n        if(m & 1){\n            int val1 = 0, val2 = n-1;\n            while(val1 < val2){\n                int val = grid[val1][m/2] + grid[val2][m/2];\n                v[val]++;\n                val1++;\n                val2--;\n            }\n        }\n        if(v[2] & 1){\n            if(v[1]){\n                ans += v[1];\n            }else{\n                ans += 2;\n            }\n        }else{\n            ans += v[1];\n        }\n        checkAns(grid,n,m,ans);\n        \n        return ans;\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = getAns(grid);\n        return ans;\n    }\n};\n\n// void solve(ll tc){\n// }\n\n// int main(){\n//     fastio();\n\n//     ll t=1;\n//     cin >> t;\n\n//     for(ll i=1; i<=t; i++){\n//         // cout << \"Case #\" << i << \": \";\n//         solve(i);\n//     }\n\n//     return 0;\n// }",
    "submit_ts": "1722699908",
    "subm_id": "1343225932"
}