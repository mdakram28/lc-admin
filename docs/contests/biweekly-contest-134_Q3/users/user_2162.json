{
    "username": "alcorzb",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> bad;\n        for (int i = 0; i < colors.size(); i++) {\n            int right = (i + 1) % colors.size();\n            if (colors[i] == colors[right]) {\n                bad.push_back(i);\n            }\n        }\n        int n = colors.size();\n        if (bad.size() == 0) {\n            return colors.size();\n        }\n        if (bad.size() == 1) {\n            return max(0, n - k + 1);\n        }\n        int ans = 0;\n        for (int i = 0; i < bad.size() - 1; i++) {\n            int len = bad[i + 1] - bad[i];\n            ans += max(0, len - k + 1);\n        }\n        int wrap = n + bad[0] - bad[bad.size() - 1];\n        ans += max(0, wrap - k + 1);\n        return ans;\n    }\n};",
    "submit_ts": "1720279057",
    "subm_id": "1311735519"
}