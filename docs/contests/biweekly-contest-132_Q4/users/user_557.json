{
    "username": "chatterjee-swastik_022",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        \n        \n        int n=nums.length;\n        \n         List<List<Integer>> dp = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            List<Integer> row = new ArrayList<>(Collections.nCopies(k + 1, 1));\n            dp.add(row);\n        }\n\n        int ans = 1;\n        List<Integer> vk = new ArrayList<>(Collections.nCopies(k + 1, -1));\n        List<Map<Integer, Integer>> v = new ArrayList<>(k + 1);\n        for (int i = 0; i <= k; i++) {\n            v.add(new HashMap<>());\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    dp.get(i).set(j, Math.max(dp.get(i).get(j), 1 + vk.get(l)));\n                }\n                if (v.get(j).containsKey(nums[i])) {\n                    dp.get(i).set(j, Math.max(dp.get(i).get(j), 1 + v.get(j).get(nums[i])));\n                }\n                ans = Math.max(ans, dp.get(i).get(j));\n            }\n            for (int j = 0; j <= k; j++) {\n                vk.set(j, Math.max(vk.get(j), dp.get(i).get(j)));\n                v.get(j).put(nums[i], Math.max(v.get(j).getOrDefault(nums[i], 0), dp.get(i).get(j)));\n            }\n        }\n        return ans;\n        \n    }\n}",
    "submit_ts": 1717862105.0
}