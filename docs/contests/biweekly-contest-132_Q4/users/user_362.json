{
    "username": "sachinbarupal",
    "submission": "class Solution {\npublic:\n    \nvector<vector<vector<int>>> dp;\nint f(int i, int k, bool b, vector<pair<int, int>> &nums)\n{\n    // dbg(i);\n    // dbg(k) << nl;\n    if (k < 0)\n        return -1e9;\n    if (i == nums.size())\n        return 0;\n\n    if (dp[i][k][b] != -1)\n        return dp[i][k][b];\n\n    int ans = INT_MIN;\n    if (!b)\n        ans = f(i + 1, k, 0, nums);\n\n    // if()\n    ans = max(ans, nums[i].first + f(i + 1, k - 1, 0, nums));\n\n    if (nums[i].second != -1)\n        ans = max(ans, nums[i].first + f(nums[i].second, k, 1, nums));\n\n    return dp[i][k][b] = ans;\n}\n\nint maximumLength(vector<int> &nums, int k)\n{\n    int n = nums.size();\n\n    if (k == n)\n        return n;\n\n    vector<pair<int, int>> arr;\n    int mx = 0;\n    map<int, int> mpp;\n    for (int i = 0; i < n;)\n    {\n        int j = i;\n        while (i < n && nums[i] == nums[j])\n            i++;\n\n        arr.push_back({nums[j], i - j});\n        // mx = max(mx, i - j);\n        mpp[nums[j]] += i - j;\n        mx = max(mx, mpp[nums[j]]);\n    }\n    // dbg(mx);\n    if (k == 0)\n        return mx;\n\n    map<int, int> mp;\n    vector<pair<int, int>> a(arr.size());\n    for (int i = arr.size() - 1; i >= 0; --i)\n    {\n        a[i].first = arr[i].second;\n        a[i].second = -1;\n        if (mp.count(arr[i].first))\n            a[i].second = mp[arr[i].first];\n\n        mp[arr[i].first] = i;\n    }\n    dp = vector<vector<vector<int>>>(n + 1, vector<vector<int>>(k + 2, vector<int>(2, -1)));\n    return f(0, k + 1, 0, a);\n}\n};",
    "submit_ts": 1717861313.0
}