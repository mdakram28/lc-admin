{
    "username": "anuragdw0710",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define LagaKar ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define pb push_back\n#define pf push_front\n#define pob pop_back\n#define pof pop_front\n#define mp make_pair\n#define fi first\n#define se second\n#define lb lower_bound\n#define ub upper_bound\n#define ook order_of_key   //number of elements less than k\n#define fbo find_by_order  //k th element\n#define nline endl\n#define YES cout<<\"YES\"<<nline\n#define NO cout<<\"NO\"<<nline\n#define Yes cout<<\"Yes\"<<nline\n#define No cout<<\"No\"<<nline\n//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n#define precise(ans)  cout<<fixed<<setprecision(15)<<ans\n#define fo(i,n) for(ll i=0;i<n;i++)\n#define Fo(i,k,n) for(ll i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)\n#define Tr(it, a) for(auto it = a.begin(); it != a.end(); it++)\n#define Sz(x) ((ll)(x).size())\n#define All(x) x.begin(), x.end()\n#define Allr(x) x.rbegin(), x.rend()\n#define MAX(x) *max_element(All(x))\n#define MIN(x) *min_element(All(x))\n#define SUM(x) accumulate(All(x), 0LL)\n#define CNT(x) __builtin_popcountll(x)\n//##################################################################################################################\ntypedef long long ll; typedef unsigned long long ull; typedef long double lld;\ntypedef pair<ll, ll>  pl;   typedef vector<ll>  vl;typedef vector<vl>  vvl; \ntypedef vector<pl>  vpl;    template <typename T> using prq_mx  = priority_queue<T>; \ntemplate <typename T> using prq_mn = priority_queue<T, vector<T>, greater<T>>;\n//------------------------------------------------------------------------------------------------------------\ntemplate <typename T> using o_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntemplate <typename T, typename R> using o_map = tree<T, R, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntemplate <typename T> using o_multiset = tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;\n//************************************************************************************************\n#define PI 3.1415926535897932384626\n#define MOD 1000000007\n#define MOD2 998244353\n#define MOD3 1000000009\n//===============================================================================================\n\nclass Solution {\npublic:\nint  dfs(int s,int p,vector<vector<int>>& g,vector<pair<pl,pl>>& ans,vector<int>& par){\n        int x=0,y=0,ch1=-1,ch2=-1;\n        par[s]=p;\n        for(auto ch:g[s]){\n            if(ch!=p){\n                int ans1=1+dfs(ch,s,g,ans,par);\n                if(ans1>x){\n                  ch2=ch1;\n                  ch1=ch;\n                  y=x;\n                  x=ans1;\n                }else if(ans1>y){\n                  y=ans1;\n                  ch2=ch;\n                }\n            }\n        }\n        ans[s]={{x,ch1},{y,ch2}};\n        return ans[s].fi.fi;\n}\nvoid  dfs2(int s,int p,vector<vector<int>>& g,vector<pair<pl,pl>>& ans,vector<int>& par,vector<int>& fans){\n\n  if(s!=0){\n    pair<pl,pl> x=ans[par[s]];\n    pair<pl,pl> y=ans[s];\n    // debug(y);\n    if(x.fi.se!=s && x.se.se!=s){\n      if(max(1+x.fi.fi,1+x.se.fi)>y.fi.fi){\n        y.se=y.fi;\n        y.fi={max(1+x.fi.fi,1+x.se.fi),par[s]};\n      }else if(max(1+x.fi.fi,1+x.se.fi)>y.se.fi){\n        y.se={max(1+x.fi.fi,1+x.se.fi),par[s]};\n      }\n    }else if(x.se.se!=s){\n      if(1+x.se.fi>y.fi.fi){\n        y.se=y.fi;\n        y.fi={1+x.se.fi,par[s]};\n      }else if(1+x.se.fi>y.se.fi){\n        y.se={1+x.se.fi,par[s]};\n      }     \n    }else if(x.fi.se!=s){\n      if(1+x.fi.fi>y.fi.fi){\n        y.se=y.fi;\n        y.fi={1+x.fi.fi,par[s]};\n      }else if(1+x.se.fi>y.se.fi){\n        y.se={1+x.fi.fi,par[s]};\n      }\n    }\n    // cerr<<s<<\" \"<<par[s]<<\" \";\n    // debug(x);\n    // debug(y);\n    // cerr<<nline;\n    ans[s]=y;\n    fans[s]=y.fi.fi;\n  }else fans[s]=ans[s].fi.fi;\n\n  for(auto ch:g[s]){\n    if(ch!=p){\n      dfs2(ch,s,g,ans,par,fans);\n    }\n  }\n}\n\n\nint minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n         int n=e1.size()+1;\n        int m=e2.size()+1;\n        vector<vector<int>> g1(n);\n        for(int i=0;i<n-1;i++){\n            g1[e1[i][0]].push_back(e1[i][1]);\n            g1[e1[i][1]].push_back(e1[i][0]);\n        }\n        vector<vector<int>> g2(m);\n        for(int i=0;i<m-1;i++){\n            g2[e2[i][0]].push_back(e2[i][1]);\n            g2[e2[i][1]].push_back(e2[i][0]);\n        }\n        vector<pair<pl,pl>> ans1(n),ans2(m);\n        vector<int> par1(n),par2(m);\n        dfs(0,0,g1,ans1,par1);\n        dfs(0,0,g2,ans2,par2);\n        vector<int> fans1(n),fans2(m);\n        dfs2(0,0,g1,ans1,par1,fans1);\n        dfs2(0,0,g2,ans2,par2,fans2);\n        // debug(ans1);\n        // debug(fans1);\n        // debug(fans2);\n        // ll ans=\n        \n        return max(max(*max_element(All(fans1)),*max_element(All(fans2))),1+*min_element(All(fans1))+*min_element(All(fans2)));\n\n}\n};",
    "submit_ts": "1719719538",
    "subm_id": "1304444440"
}