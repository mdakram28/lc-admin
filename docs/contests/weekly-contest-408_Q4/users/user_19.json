{
    "username": "hty50",
    "submission": "class Solution:\n    def __init__(self):\n        self.maxX = 0\n        self.maxY = 0\n        self.num_c = 0\n        self.cc = 0\n        self.par = [0] * 2000\n        self.cx = [0] * 2000\n        self.cy = [0] * 2000\n        self.r = [0] * 2000\n\n    def find(self, idx):\n        if idx == self.par[idx]:\n            return idx\n        else:\n            self.par[idx] = self.find(self.par[idx])\n            return self.par[idx]\n\n    def merge(self, idx1, idx2):\n        self.par[self.find(idx1)] = self.find(idx2)\n\n    def canReachCorner(self, X, Y, circles):\n        self.maxX = X\n        self.maxY = Y\n        self.num_c = len(circles)\n        self.cc = 0\n\n        for i in range(1, self.num_c + 1):\n            cx, cy, r = circles[i - 1]\n            if cx - r >= self.maxX:\n                continue\n            if cy - r >= self.maxY:\n                continue\n            self.cc += 1\n            self.cx[self.cc] = cx\n            self.cy[self.cc] = cy\n            self.r[self.cc] = r\n            self.par[self.cc] = self.cc\n\n        for i in range(1, self.cc + 1):\n            for j in range(i + 1, self.cc + 1):\n                if (self.cx[i] - self.cx[j]) ** 2 + (self.cy[i] - self.cy[j]) ** 2 <= (self.r[i] + self.r[j]) ** 2:\n                    self.merge(i, j)\n\n        flag = False\n        for i in range(1, self.cc + 1):\n            for j in range(1, self.cc + 1):\n                if self.find(i) == self.find(j):\n                    if self.cx[i] - self.r[i] <= 0 and self.cy[j] - self.r[j] <= 0:\n                        flag = True\n                        break\n                    if self.cx[i] - self.r[i] <= 0 and self.cx[j] + self.r[j] >= self.maxX:\n                        flag = True\n                        break\n                    if self.cy[i] - self.r[i] <= 0 and self.cy[j] + self.r[j] >= self.maxY:\n                        flag = True\n                        break\n                    if self.cx[i] + self.r[i] >= self.maxX and self.cy[j] + self.r[j] >= self.maxY:\n                        flag = True\n                        break\n            if flag:\n                break\n\n        return not flag",
    "submit_ts": "1722135970",
    "subm_id": "1335719530"
}