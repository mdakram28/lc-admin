{
    "username": "anhaabc",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size(), res = 0;\n        int one = 0;\n        vector<int> zeroes, ones;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') {\n                zeroes.push_back(i);\n                ones.push_back(one);\n                one = 0;\n            }\n            else one++;\n        }\n        ones.push_back(one);\n        \n        int l = n;\n        vector<int> last(n, 0);\n        for (int i = n - 1; i >= 0; i--) {\n            last[i] = l;\n            if (s[i] == '0') l = i;\n        }\n        \n        for (int i = 0; i < n; i++) {\n            one = 0;\n            int zero = 0;\n            if (s[i] == '1') {\n                res += last[i] - i;\n                one = last[i] - i;\n            } else {\n                res += last[i] - i - 1;\n                one = last[i] - i - 1;\n                zero = 1;\n            }\n            \n            int l = last[i];\n            int z = 0;\n            while (l < n && z <= 200) {\n                zero++;\n                z++;\n                int val = last[l] - l - 1;\n                if (val + one < zero * zero) one += val;\n                else if (one >= zero * zero) {\n                    one += val;\n                    res += val + 1;\n                } else {\n                    res += val + one - zero * zero + 1;\n                    one += val;\n                }\n                l = last[l];\n            }\n            \n        }\n        \n        return res;\n        \n    }\n};",
    "submit_ts": "1722138969",
    "subm_id": "1335804413"
}