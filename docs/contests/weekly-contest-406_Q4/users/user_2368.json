{
    "username": "ASPII",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontal, vector<int>& vertical) {\n        long long  i = 0, j = 0,ans = 0, x = 0, y = 0;\n\n        sort(horizontal.begin(), horizontal.end(), greater<int>());\n        sort(vertical.begin(), vertical.end(), greater<int>());\n     \n        while (i < horizontal.size() && j < vertical.size()) {\n            if (horizontal[i] > vertical[j]) {\n                ans =ans+ (1 + y) * (long long)(long long)horizontal[i];\n                x++;\n                i++;\n            } else {\n                ans =ans+ (long long)(1 + x) * (long long)vertical[j];\n                y++;\n                j++;\n            }\n        }\n        \n        while (i < horizontal.size()) {\n            ans =ans+ (long long)(1 + y) * (long long)horizontal[i];\n            i++;\n        }\n        \n        while (j < vertical.size()) {\n            ans =ans+ (long long)(1 + x) * (long long)vertical[j];\n            j++;\n        }\n        \n        return ans;\n\n    }\n};",
    "submit_ts": "1720926179",
    "subm_id": "1320278291"
}