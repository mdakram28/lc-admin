{
    "username": "alephinfinity1",
    "submission": "using ll = long long;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<ll, char>> moves;\n        for (int h : horizontalCut) {\n            moves.push_back({h, 'h'});\n        }\n        for (int v : verticalCut) {\n            moves.push_back({v, 'v'});\n        }\n\n        sort(begin(moves), end(moves), greater<pair<ll, char>>{});\n\n        ll hpieces = 1, vpieces = 1;\n        ll ans = 0;\n        for (auto [c, d] : moves) {\n            if (d == 'h') {\n                ans += c * hpieces;\n                vpieces++;\n            } else {\n                ans += c * vpieces;\n                hpieces++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720924835",
    "subm_id": "546434761"
}