{
    "username": "rohan289",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> dict;\n    int cost;\n    \n    TrieNode() {\n        this -> cost = 1e9;\n    }\n};\n\nclass Trie {\npublic: \n    TrieNode* root;\n    \n    Trie() {\n        root = new TrieNode();   \n    }\n    \n    void insert(string word, int cost) {\n        TrieNode* curr = root;\n        for(char ch : word) {\n            if(curr -> dict.find(ch) == curr -> dict.end()) {\n                curr -> dict[ch] = new TrieNode();\n            }\n            curr = curr -> dict[ch];\n        }\n        curr -> cost = min(curr -> cost, cost);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        for(int i = 0; i < words.size(); i++) {\n            trie.insert(words[i], costs[i]);\n        }\n        vector<int> dp(target.size() + 1, 1e9);\n        dp[0] = 0;\n        int n = target.size();\n        for(int i = 0; i < n; i++) {\n            if(dp[i] == 1e9) continue;\n            TrieNode* curr = trie.root;\n            for(int j = i; j < n; j++) {\n                if(curr -> dict.find(target[j]) == curr -> dict.end()) break;\n                curr = curr -> dict[target[j]];\n                if(curr -> cost != 1e9) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + curr -> cost);\n                }\n            }\n        }\n        return dp[n] == 1e9 ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720324693",
    "subm_id": "1312405692"
}