{
    "username": "viraj_vrj",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        sort(points.begin(),points.end());\n        vector<int> hi, lo;\n        hi=points[0]; int idxhi=0;\n        lo=points[0]; int idxlo=0;\n        int ans=-1; vector<int> ansp;\n        for(int i=1;i<n;i++){\n            int k=abs(points[i][0]-hi[0]) + abs(points[i][1]-hi[1]);\n            if(k>=ans){\n                ans=k;\n                ansp={idxhi,i};\n            }\n            \n            k=abs(points[i][0]-lo[0]) + abs(points[i][1]-lo[1]);\n            if(k>=ans){\n                ans=k;\n                ansp={idxlo,i};\n            }\n            \n            int k1=abs(1e8-points[i][0]) + abs(1e8-points[i][1]);\n            int k2=abs(1e8-hi[0]) + abs(1e8-hi[1]);\n            if(k1>k2){\n                hi=points[i];\n                idxhi=i;\n            }\n            \n            int l1=abs(1e8-points[i][0]) + abs(0-points[i][1]);\n            int l2=abs(1e8-lo[0]) + abs(0-lo[1]);\n            if(l1>l2){\n                lo=points[i];\n                idxlo=i;\n            }\n        }\n        \n        int finalans=INT_MAX;\n        \n        ans=-1;\n        bool sett=false;\n        vector<int> newhi, newlo;\n        for(int i=0;i<n;i++){\n            if(i==ansp[0]) continue;\n            if(sett==false){\n                newhi=points[i];\n                newlo=points[i];\n                sett=true;\n                continue;\n            }\n            int k=abs(points[i][0]-newhi[0]) + abs(points[i][1]-newhi[1]);\n            ans=max(ans,k);\n            k=abs(points[i][0]-newlo[0]) + abs(points[i][1]-newlo[1]);\n            ans=max(ans,k);\n            \n            int k1=abs(1e8-points[i][0]) + abs(1e8-points[i][1]);\n            int k2=abs(1e8-newhi[0]) + abs(1e8-newhi[1]);\n            if(k1>k2){\n                newhi=points[i];\n            }\n            \n            int l1=abs(1e8-points[i][0]) + abs(0-points[i][1]);\n            int l2=abs(1e8-newlo[0]) + abs(0-newlo[1]);\n            if(l1>l2){\n                newlo=points[i];\n            }\n            \n        }\n        \n        finalans=min(finalans,ans);\n        \n        sett=false;\n        ans=-1;\n        for(int i=0;i<n;i++){\n            if(i==ansp[1]) continue;\n            if(sett==false){\n                newhi=points[i];\n                newlo=points[i];\n                sett=true;\n                continue;\n            }\n            int k=abs(points[i][0]-newhi[0]) + abs(points[i][1]-newhi[1]);\n            ans=max(ans,k);\n            k=abs(points[i][0]-newlo[0]) + abs(points[i][1]-newlo[1]);\n            ans=max(ans,k);\n            \n            int k1=abs(1e8-points[i][0]) + abs(1e8-points[i][1]);\n            int k2=abs(1e8-newhi[0]) + abs(1e8-newhi[1]);\n            if(k1>k2){\n                newhi=points[i];\n            }\n            \n            int l1=abs(1e8-points[i][0]) + abs(0-points[i][1]);\n            int l2=abs(1e8-newlo[0]) + abs(0-newlo[1]);\n            if(l1>l2){\n                newlo=points[i];\n            }\n            \n        }\n        \n        finalans=min(finalans,ans);\n        \n        return finalans;\n    }\n};"
}