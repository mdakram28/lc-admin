{
    "username": "Akash0P",
    "submission": "class Solution {\npublic:\n  int waysToReachStair(int k) {\n  \n    map<vector<long long>, int> dp;\n      \n    auto f = [&](long long i, long long jump, int prev, auto && f) -> int{\n  \n      if(dp.find({i, jump, prev}) != dp.end()) return dp[{i, jump, prev}];    \n\n      long long ans1 = 0, ans2 = 0;\n\n      if(i-1 >= 0 && prev == 0) ans1 = f(i-1, jump, 1, f);\n\n      if(i <= k) ans2 = f(i + (1 << jump), jump + 1, 0, f); \n\n      return dp[{i, jump, prev}] = (i == k) + (ans1 + ans2);\n    };\n    return f(1, 0, 0, f);\n  }\n};",
    "submit_ts": "1716087731",
    "subm_id": "1261792689"
}