{
    "username": "limausine",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n=s.length();\n        int res=0;\n        vector<int> z={-1};\n        for (int i=0; i<n; i++) {\n            if (s[i]=='0') z.push_back(i);\n            res += i-z[(int)z.size()-1];\n            int cnt0=0;\n            int cnt1=i-z[(int)z.size()-1];\n            for (int j=(int)z.size()-1; j>0; j--) {\n                int idx=z[j];\n                int nidx=z[j-1];\n                int gap1=idx-nidx;\n                cnt0++;\n                if (cnt0*cnt0 > i+1) break;\n                int need=max(0, cnt0*cnt0 - cnt1);\n                gap1 -= need;\n                res += max(0, gap1);\n                cnt1 += (idx-nidx-1);\n            }\n            \n            // cout<<\"res: \"<<res<<endl;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722136195",
    "subm_id": "1335726673"
}