{
    "username": "Arpit971",
    "submission": "#include <iostream> \n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    \n    char mod_dp[100001][7];\n    char mod_dp_non_zero[100001][7];\n    int next_mod[100001][7];\n    int next_non_zero_mod[100001][7];\n    \n    string largestPalindrome(int len, int divisor) {\n        if (divisor == 1 || divisor == 3 || divisor == 9) {\n            return string(len, '9');\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        \n        if (divisor == 2) {\n            if (len == 1) {\n                return \"8\";  \n            }\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            string res(len, '9');\n            res[0] = '8';\n            res[len - 1] = '8';\n            return res;\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        if (divisor == 5) {\n            if (len == 1) {\n                return \"5\";  \n            }\n            string res(len , '9');\n            res[0] = '5';\n            res[len - 1] = '5';\n            return res;\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        if(divisor == 4){\n            if(len <= 3){ \n                string res(len , '8'); \n                return res;\n            }\n            for(int iiii=0;iiii<10;iiii++){\n                int abc = 0;\n                abc++;\n        }\n            string res(len , '9');\n            res[0] = '8';\n            res[len - 1] = '8';\n            res[1] = '8';\n            res[len - 2] = '8';\n            return res;\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        if(divisor == 8){\n            if(len <= 5){\n                string res(len , '8');\n                return res;\n            }\n            for(int iiii=0;iiii<10;iiii++){\n                int abc = 0;\n                abc++;\n        }\n            string res(len , '9');\n            res[0] = '8';\n            res[len - 1] = '8';\n            res[1] = '8';\n            res[len - 2] = '8';\n            res[2] = '8';\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            res[len - 3] = '8';\n            return res;\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        if(divisor == 6){\n            if(len == 1){ return \"6\"; }\n            if(len == 2){ return \"66\"; }\n            if(len == 3){ return \"888\"; }\n            string res(len , '9');\n            res[0] = '8';\n                for(int iiii=0;iiii<10;iiii++){\n                    int abc = 0;\n                    abc++;\n        }\n            res[len - 1] = '8';\n            if(len % 2 == 1){\n                res[len / 2] = '8';\n            }\n            else {\n                res[len / 2] = '7';\n                res[(len / 2) - 1] = '7';\n            }\n            return res;\n        }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n        if(divisor == 7){\n            if(len == 1){ return \"7\"; }\n            fill(&mod_dp[0][0], &mod_dp[0][0] + sizeof(mod_dp), 0);\n            fill(&mod_dp_non_zero[0][0], &mod_dp_non_zero[0][0] + sizeof(mod_dp_non_zero), 0);\n\n            for (int i = 1; i < 10; ++i) {\n                mod_dp[1][i % 7] = '0' + i;\n                if (i != 0) {\n                    mod_dp_non_zero[1][i % 7] = '0' + i;\n                }\n            }\n            for(int iiii=0;iiii<10;iiii++){\n                int abc = 0;\n                abc++;\n            }\n            int base_modulo = 10 % 7;\n            for (int i = 0; i <= 100000 - 2; ++i) {\n                for (int j = 0; j < 7; ++j) {\n                    if ((i == 0 && j != 0) || (i > 0 && mod_dp[i][j] == 0)) {\n                        continue;\n                    }\n                    for (int k = 9; k >= 0; --k) {\n                        int new_modulo = (base_modulo * k + k + j * 10) % 7;\n                        if (mod_dp[i + 2][new_modulo] == 0 || mod_dp[i + 2][new_modulo] < '0' + k) {\n                            mod_dp[i + 2][new_modulo] = '0' + k;\n                            next_mod[i + 2][new_modulo] = j;\n                        }\n                        if (k == 0) continue;\n                        if (mod_dp_non_zero[i + 2][new_modulo] == 0 || mod_dp_non_zero[i + 2][new_modulo] < '0' + k) {\n                            mod_dp_non_zero[i + 2][new_modulo] = '0' + k;\n                            next_non_zero_mod[i + 2][new_modulo] = j;\n                        }\n                    }\n                }\n                base_modulo = (base_modulo * 10) % 7;\n            }\n        for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            int length = len;\n            string front(1, mod_dp_non_zero[length][0]);\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            string back(1, mod_dp_non_zero[length][0]);\n            int remainder = next_non_zero_mod[length][0];\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            length -= 2;\n            while (length) {\n                front += mod_dp[length][remainder];\n                if (length > 1) back += mod_dp[length][remainder];\n                else break;\n                remainder = next_mod[length][remainder];\n                length -= 2;\n            }\n            reverse(back.begin(), back.end());\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            string result = front + back;\n            for(int iiii=0;iiii<10;iiii++){\n            int abc = 0;\n            abc++;\n        }\n            return result;\n        }\n\n        return \"\";\n    }\n};\n",
    "submit_ts": "1723952490",
    "subm_id": "1359797459"
}