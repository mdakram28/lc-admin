{
    "username": "colicon",
    "submission": "class Solution:\n    def minimumDistance(self, p: List[List[int]]) -> int:\n        p.sort()\n\n        def d(p1, p2):\n            return abs(p1[0] - p2[0]) + abs(p1[1] - p2[1])\n        \n        def solve(p):\n            ans = -1\n            mn_i = 0\n            mx_i = 0\n            for i in range(1, len(p)):\n                x, y = p[i]\n\n                if ans < d(p[mn_i], p[i]):\n                    ans = d(p[mn_i], p[i])\n                    far1, far2 = mn_i, i\n                if ans < d(p[mx_i], p[i]):\n                    ans = d(p[mx_i], p[i])\n                    far1, far2 = mx_i, i\n\n                if x - p[mn_i][0] - p[mn_i][1] < -y:\n                    mn_i = i\n                if x - p[mx_i][0] + p[mx_i][1] < y:\n                    mx_i = i\n            \n            return far1, far2, ans\n        \n        far1, far2, _ = solve(p)\n        \n        return min(solve(p[:far1] + p[far1+1:])[2], solve(p[:far2] + p[far2+1:])[2])\n    "
}