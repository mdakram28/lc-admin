{
    "username": "shirley_zq",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int m = queries.size();\n        map<int, int> hm;\n        vector<int> ans(m);\n        int len = n - 1;\n        int sum = 0, cnt = 0;\n        for (int i = 0; i < m; ++i) {\n            int st = queries[i][0], ed = queries[i][1];\n            if (hm.empty()) {\n                hm[st] = ed;\n                ans[i] = st + 1 + (n - 1 - ed);\n                sum += ed - st;\n                cnt += 1;\n            } else {\n                auto it = hm.upper_bound(st);\n                if (it != hm.begin()) {\n                    --it;\n                }\n                if (it != hm.end() && st >= it->second) {\n                    ++it;\n                }\n                \n                while (it != hm.end()) {\n                    if (it->first >= ed) {\n                        break;\n                    }\n                    sum -= it->second - it->first;\n                    --cnt;\n                    st = min(st, it->first);\n                    ed = max(ed, it->second);\n                    hm.erase(it++);\n                }\n                hm[st] = ed;\n                ++cnt;\n                sum += ed - st;\n                //cout << i << \" \" << sum << \" \" << endl;\n                ans[i] = n - 1 - sum + cnt;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743485",
    "subm_id": "1343792994"
}