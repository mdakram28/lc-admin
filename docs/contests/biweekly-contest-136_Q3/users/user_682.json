{
    "username": "abhishekJr",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0, one = 0, op = 0;\n        for (int i=0;i<((n%2)?(n/2+1):(n/2));i++){\n            for (int j=0;j<((m%2)?(m/2+1):(m/2));j++){\n                // i,j; n-i-1,j; i,m-j-1; n-i-1,m-j-1;\n                // cout<<i<<j<<n-i-1<<m-j-1<<endl;\n                if (i==n-i-1 && j==m-j-1){\n                    if (grid[i][j]) ans++;\n                }\n                else if (i==n-i-1){\n                    if (grid[i][j] || grid[i][m-j-1]){\n                        if (grid[i][j]==grid[i][m-j-1]){\n                            one += 2;\n                        }\n                        else{\n                            ans++;\n                            op = 1;\n                        }\n                    }\n                }\n                else if (j==m-j-1){\n                    if (grid[i][j] || grid[n-i-1][j]){\n                        if (grid[i][j]==grid[n-i-1][j]){\n                            one += 2;\n                        }\n                        else{\n                            ans++;\n                            op = 1;\n                        }\n                    }\n                }\n                else{\n                    int count = grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                    ans += min(count, 4-count);\n                }\n            }\n        }\n        if (one%4 && op==0){\n            return ans+2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697856",
    "subm_id": "1343161384"
}