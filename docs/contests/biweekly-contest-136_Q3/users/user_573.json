{
    "username": "cid_kageno",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n,m = len(grid), len(grid[0])\n        ans = 0\n        if n%2==1 and m%2==1:\n            if grid[n//2][m//2]==1:\n                ans += 1\n\n        shift = [0,0,0]\n        if n%2==1:\n            a,b = 0,m-1\n            while a<b:\n                sm = grid[n//2][a]+grid[n//2][b]\n                shift[sm] += 1\n                a += 1\n                b -= 1\n        \n        # print(ans)\n\n        if m%2==1:\n            a,b = 0,n-1\n            while a<b:\n                sm = grid[a][m//2]+grid[b][m//2]\n                shift[sm] += 1\n                a += 1\n                b -= 1\n\n        # print(shift)\n        if shift[2]%2==1:\n            if shift[1]>0:\n                ans += shift[1]\n            else:\n                ans += 2\n        else:\n            ans += shift[1]\n    \n        # if m%2==1:\n        #     for i in range(n):\n        #         if grid[i][m//2] == 1:\n        #             ans += 1\n        #             grid[i][m//2] = 0\n        # print(ans)\n        for i in range(0, n//2):\n            for j in range(0, m//2):\n                a = grid[i][j]\n                b = grid[n-1-i][j]\n                c = grid[i][m-1-j]\n                d = grid[n-1-i][m-1-j]\n\n                sm = a+b+c+d\n                \n                # print(i,j,sm)\n                if sm!=0 or sm!=4:\n                    ans += min(sm, 4-sm)\n        \n        \n        return ans",
    "submit_ts": "1722697544",
    "subm_id": "1343150365"
}