{
    "username": "DIGVIJAY2003",
    "submission": "class Solution {\nprivate:\n    const int MODDDD = 1e9 + 7;\n    const int MAXXXX = 400;\n\n    void makeMAP(vector<vector<int>>& arr, unordered_map<int, int>& mp) {\n        for (const auto& a : arr) {\n            mp[a[0] + 1] = a[1];\n        }\n    }\n\n    void makeDP(vector<vector<long>>& dp, int n) {\n        dp.assign(n + 1, vector<long>(MAXXXX + 1, 0));\n        dp[0][0] = 1;\n    }\n\n    void helpDP(vector<vector<long>>& dp, int ln, int inv) {\n        for (int nP = 0; nP < ln; ++nP) {\n            int prI = inv - nP;\n            if (prI >= 0) {\n                dp[ln][inv] = (dp[ln][inv] + dp[ln - 1][prI]) % MODDDD;\n            }\n        }\n    }\n\n    void updtDP(vector<vector<long>>& dp, int ln) {\n        for (int inv = 0; inv <= MAXXXX; ++inv) {\n            helpDP(dp, ln, inv);\n        }\n    }\n\n    void helpCalReq(vector<vector<long>>& dp, int tINV, int ln) {\n        for (int inv = 0; inv <= MAXXXX; ++inv) {\n            if (inv != tINV) {\n                dp[ln][inv] = 0;\n            }\n        }\n    }\n\n    void calReq(vector<vector<long>>& dp, unordered_map<int, int>& mp, int ln) {\n        if (mp.find(ln) != mp.end()) {\n            int tINV = mp[ln];\n            helpCalReq(dp, tINV, ln);\n        }\n    }\n\n    long calculateResult(vector<vector<long>>& dp, int n) {\n        long res = 0;\n        for (long count : dp[n]) {\n            res = (res + count) % MODDDD;\n        }\n        return res;\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        makeMAP(requirements, mp);\n\n        vector<vector<long>> dp;\n        makeDP(dp, n);\n\n        for (int len = 1; len <= n; ++len) {\n            updtDP(dp, len);\n            calReq(dp, mp, len);\n        }\n\n        return static_cast<int>(calculateResult(dp, n));\n    }\n};",
    "submit_ts": 1719071173.0
}