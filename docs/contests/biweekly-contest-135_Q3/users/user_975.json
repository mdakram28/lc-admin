{
    "username": "augustwang5",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        cnt = defaultdict(int)\n        n = len(nums)\n        for i in range(n):\n            if i >= n - i - 1:\n                break\n            nums[i], nums[n - i - 1] = min(nums[i], nums[n - i - 1]), max(nums[i], nums[n - i - 1])\n            \n        \n        diff = [0] * (max(k, max(nums)) + 2)    \n        for i in range(n // 2):\n            cnt[nums[n - i - 1] - nums[i]] += 1\n            mi = nums[n - i - 1] - nums[i]\n            if k >= nums[i]:\n                mi = 0\n            else:\n                mi = min(mi, nums[i] - k)\n            mx = max(nums[n - i - 1], k - nums[i])\n            diff[mi] += 1\n            diff[mx + 1] -= 1\n        \n        ans = n\n        c01 = 0\n        for cur in range(max(nums) + 1):\n            c01 += diff[cur]\n            c0 = cnt[cur]\n            c1 = c01 - c0\n            c2 = n // 2 - c01\n            ans = min(ans, c1 + c2 * 2)\n        return ans\n        \n       \n        ",
    "submit_ts": "1721488705",
    "subm_id": "548315657"
}