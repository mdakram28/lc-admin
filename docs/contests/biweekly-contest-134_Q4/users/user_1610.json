{
    "username": "realstar",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        List<Integer> list = new ArrayList();\n        long result = 0;\n        for (int num : nums) {\n        \tif ((num & k) < k) {\n        \t\tif (list.size() > 0) {\n        \t\t\tresult += findK(list, k);\n        \t\t\tlist.clear();\n        \t\t}\n        \t} else {\n        \t\tlist.add(num);\n        \t}\n        }\n        if (list.size() > 0)\n\t\t\tresult += findK(list, k);\n        return result;\n    }\n\t\n\tprivate static long findK(List<Integer> list, int k) {\n\t\tint[] count = new int[32];\n\t\tfor (int i = 0; i < 32; i++) {\n\t\t    count[i] = ((k & (1 << i)) != 0) ? -1 : 0;\n\t\t}\n\t\tint result = Integer.MAX_VALUE;\n\t\tint index = 0;\n\t\tint n = list.size();\n\t\twhile (result > k && index < n) {\n\t\t\tint now = list.get(index++);\n\t\t\tresult = result & now;\n\t\t\tfor (int j = 0; j < 32; j++) {\n\t\t\t\tif (count[j] == -1)\n\t\t\t\t\tcontinue;\n\t\t\t    count[j] += ((now & (1 << j)) != 0) ? 0 : 1;\n\t\t\t}\n\t\t}\n\t\tif (result > k)\n\t\t\treturn 0;\n\t\tlong val = n - index + 1;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tfor (int j = 0; j < 32; j++) {\n\t\t\t\tif (count[j] == -1)\n\t\t\t\t\tcontinue;\n\t\t\t    count[j] -= ((list.get(i - 1) & (1 << j)) != 0) ? 0 : 1;\n\t\t\t}\n\t\t\tboolean check = pass(count);\n\t\t\twhile (!check && index < n) {\n\t\t\t\tint now = list.get(index++);\n\t\t\t\tfor (int j = 0; j < 32; j++) {\n\t\t\t\tif (count[j] == -1)\n\t\t\t\t\tcontinue;\n\t\t\t\t    count[j] += ((now & (1 << j)) != 0) ? 0 : 1;\n\t\t\t\t}\n\t\t\t\tcheck = pass(count);\n\t\t\t}\n\t\t\tif (!check)\n\t\t\t\treturn val;\n\t\t\tval += n - index + 1;\n\t\t}\n\t\treturn val;\n    }\n\t\n\tprivate static boolean pass(int[] count) {\n\t\tfor (int i = 0; i < 32; i++) {\n\t\t\tif (count[i] == 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}",
    "submit_ts": "1720281203",
    "subm_id": "1311816725"
}