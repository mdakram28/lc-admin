{
    "username": "ap5123",
    "submission": "class Solution {\npublic:\nlong long int query(long long int ind,long long int low,long long int high,vector<long long int>&seg,long long int l,long long int r)\n{\n    if(l>high||r<low)return INT_MAX;\n    if(l<=low&&r>=high)return seg[ind];\n\n    long long int mid=(low+high)/2;\n    long long int left=query(2*ind+1,low,mid,seg,l,r);\n    long long int right=query(2*ind+2,mid+1,high,seg,l,r);\n    return left&right;\n}\n\nvoid build(long long int ind,long long int low,long long int high,vector< int>&arr,vector<long long int>&seg)\n{\n    if(low==high)\n    {\n        seg[ind]=arr[low];\n        return;\n    }\n\n    long long int mid=(low+high)/2;\n    build(2*ind+1,low,mid,arr,seg);\n    build(2*ind+2,mid+1,high,arr,seg);\n    seg[ind]=seg[2*ind+1]&seg[2*ind+2];\n}\n\n\nlong long s(vector<int> &nums,long long k,vector<long long> &seg){\n        long long n=nums.size();\n        long long cnt= 0;\n        for(long long i=0;i<n;i++){\n            long long low = i;\n            long long high = n-1;\n            long long ans=-1;\n            while(low<=high){\n                long long mid = low + (high - low)/2;\n                long long qu = query(0,0,n-1,seg,i,mid);\n                if(qu<=k){\n                    ans = mid;\n                    high = mid - 1;\n                }\n                else{\n                    low = mid + 1;   \n                }\n            }\n            if(ans!=-1){\n                cnt+=(n-ans);\n            }\n        }\n    return cnt;\n}\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long n=nums.size();\n        vector<long long> seg(4*n+10,-1);\n        build(0,0,n-1,nums,seg);\n        long long t = s(nums,k,seg);\n        long long t1 = s(nums,k-1,seg);\n        \n        return t - t1;\n    }\n};",
    "submit_ts": "1720281465",
    "subm_id": "1311826127"
}