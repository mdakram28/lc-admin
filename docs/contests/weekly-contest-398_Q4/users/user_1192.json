{
    "username": "bbbbcccd",
    "submission": "class Solution(object):\n    def waysToReachStair(self, k):\n        # (stair, jump, canGoDown)\n        memo = {}\n        \n        def helper(stair, jump, canGoDown):\n            if stair > k + 1 or (stair == k + 1 and not canGoDown):\n                return 0\n            elif (stair, jump, canGoDown) in memo:\n                return memo[(stair, jump, canGoDown)]\n            elif stair == k:\n                if canGoDown:\n                    return 1 + helper(stair + 2**jump, jump+1, True) + helper(stair - 1, jump, False)\n                else:\n                    return 1 + helper(stair + 2**jump, jump+1, True)\n            elif stair == 0:\n                memo[(stair, jump, canGoDown)] = helper(stair + 2**jump, jump+1, True)\n                return memo[(stair, jump, canGoDown)]\n            else:\n                if canGoDown:\n                    memo[(stair, jump, canGoDown)] = helper(stair + 2**jump, jump+1, True) + helper(stair-1, jump, False)\n                else:\n                    memo[(stair, jump, canGoDown)] = helper(stair + 2**jump, jump+1, True)\n                return memo[(stair, jump, canGoDown)]\n        \n        return helper(1, 0, True)",
    "submit_ts": "1716090468",
    "subm_id": "1261867934"
}