{
    "username": "MjMPYFbpxj",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& v, int k) {\n        int n = v.size();\n        int ans = 0;\n        vector<int> val;\n        for(int i = 1 ; i < n ; i++){\n            if(v[i-1] != v[i]){\n                val.push_back(1);\n            }\n            else{\n                val.push_back(0);\n            }\n        }\n        val.push_back((v[0] != v[n-1]));\n        int curr = 0;\n        for(int i = 0 ; i < k - 1 ; i++){\n            curr += val[i];\n        }\n        if(curr == k - 1){\n            ans++;\n        }\n        for(auto &x : val){\n            cout << x << \" \";\n        }\n        cout << endl;\n        int low = 0 , high = k - 1;\n        while(low < n - 1){\n            curr -= val[low];\n            curr += val[high];\n            if(curr == k - 1){\n                ans++;\n            }\n            low++;\n            high = (high + 1) % n;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278752",
    "subm_id": "1311722721"
}