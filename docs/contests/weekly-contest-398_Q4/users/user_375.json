{
    "username": "Dpr18",
    "submission": "class Solution \n{\npublic:\n    int waysToReachStair(int k) \n    {\n        // op: 0 1\n        map<pair<int, pair<int, int>>, int> mp;\n        return solve(1, k, 0, -1, mp);\n    }\n    int solve(int source, int dest, int jump, int prev_op, map<pair<int, pair<int, int>>, int>& mp)\n    {\n        if(mp.find({source, {jump, prev_op}}) != mp.end())  return mp[{source, {jump, prev_op}}];\n        // cout<<source\n        int ans = 0;\n        if(source == dest)  ans++;\n        if(source > dest+1) return 0;\n        \n        \n        // op 0\n        if(prev_op)    ans += solve(source-1, dest, jump, 0, mp);\n        \n        // op 1\n        ans += solve(source+pow(2, jump), dest, jump+1, 1, mp);\n        \n        return mp[{source, {jump, prev_op}}] = ans;\n    }\n};",
    "submit_ts": 1716088308.0
}