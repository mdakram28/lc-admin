{
    "username": "avidyarth12",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        zeros = defaultdict(int)\n        def minus(x):\n            nonlocal zeros\n            for i in range(32):\n                if ((x >> i) & 1) == 0:\n                    zeros[i] -= 1\n\n        def plus(x):\n            nonlocal zeros\n            for i in range(32):\n                if ((x >> i) & 1) == 0:\n                    zeros[i] += 1\n\n        def evaluate():\n            res = 0\n            for i in range(32):\n                if zeros[i] == 0:\n                    res ^= (1 << i)\n            return res\n\n        i = 0\n        n = len(nums)\n        ans = float('inf')\n        for j in range(n):\n            plus(nums[j])\n            x = evaluate()\n            ans = min(ans, abs(x - k))\n            while i < j and x < k:\n                minus(nums[i])\n                i += 1\n                x = evaluate()\n                ans = min(ans, abs(x - k))\n        return ans",
    "submit_ts": 1717300676.0
}