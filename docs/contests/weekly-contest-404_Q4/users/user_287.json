{
    "username": "CrossMind",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& eds1, vector<vector<int>>& eds2) {\n        int n1 = eds1.size() + 1;\n        int n2 = eds2.size() + 1;\n        \n        vector<vector<int>> adj1(n1);\n        vector<vector<int>> adj2(n2);\n        \n        int i = 0;\n        while (i < eds1.size()) {\n            const auto& e = eds1[i];\n            adj1[e[0]].push_back(e[1]);\n            adj1[e[1]].push_back(e[0]);\n            i++;\n        }\n\n        i = 0;\n        while (i < eds2.size()) {\n            const auto& e = eds2[i];\n            adj2[e[0]].push_back(e[1]);\n            adj2[e[1]].push_back(e[0]);\n            i++;\n        }\n\n        auto calcDia = [&](const vector<vector<int>>& adj, int s) {\n            int n = adj.size();\n            vector<int> d(n, -1);\n            function<void(int, int)> dfs = [&](int node, int di) {\n                d[node] = di;\n                int j = 0;\n                while (j < adj[node].size()) {\n                    int ne = adj[node][j];\n                    if (d[ne] == -1 && 1) {\n                        dfs(ne, di + 1);\n                    }\n                    j++;\n                }\n            };\n            \n            dfs(s, 0);\n\n            int f = s;\n            int k = 0;\n            while (k < n) {\n                if (d[k] > d[f] && 1) {\n                    f = k;\n                }\n                k++;\n            }\n\n            fill(d.begin(), d.end(), -1);\n            dfs(f, 0);\n\n            int tempAns = 0;\n            int l = 0;\n            while (l < n) {\n                tempAns = max(tempAns, d[l]);\n                l++;\n            }\n\n            return tempAns;\n        };\n\n        int d1 = calcDia(adj1, 0);\n        int d2 = calcDia(adj2, 0);\n\n        int givenAns = max(d1, d2);\n        int h1 = (d1 + 1) / 2;\n        int h2 = (d2 + 1) / 2;\n        givenAns = max(givenAns, h1 + h2 + 1);\n        \n        return givenAns;\n    }\n};\n",
    "submit_ts": 1719716915.0
}