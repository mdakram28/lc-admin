{
    "username": "REED_W",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        return sln1(k);   \n    }\n    \n    private int sln1(int k){\n        return helper(1, 0, k, new HashMap<>());\n    }\n    \n    private int helper(int curr, int jump, int k, Map<Long, Integer> map){\n        if(curr > k+1) return 0;\n        long key = (curr*1l) << 5 | jump;\n        if(map.containsKey(key)) return map.get(key);\n        int res = (curr == k || curr == k+1)? 1: 0;\n        res += helper(curr+(1<<jump)-1, jump+1, k, map);\n        res += helper(curr+(1<<jump), jump+1, k, map);\n        map.put(key, res);\n        return res;\n    }\n}",
    "submit_ts": "1716088519",
    "subm_id": "1261816323"
}