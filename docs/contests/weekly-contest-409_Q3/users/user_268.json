{
    "username": "Tanguilol",
    "submission": "class Solution {\n    \n    private static class Node {\n        \n        int i;\n        Node next;\n        Node prev;\n        \n        public Node(int i) {\n            this.i = i;\n        }\n        \n        public String toString() {\n            return String.valueOf(i);\n        }\n        \n    }\n    \n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] result = new int[queries.length];\n        Node[] nodes = new Node[n];\n        int current = n - 1;\n        \n        for (int i = 0; i < nodes.length; i++) {\n            nodes[i] = new Node(i);\n        }\n        \n        for (int i = 0; i < nodes.length - 1; i++) {\n            nodes[i].next = nodes[i + 1];\n        }\n        \n        for (int i = 1; i < nodes.length; i++) {\n            nodes[i].prev = nodes[i - 1];\n        }\n        \n        for (int i = 0; i < queries.length; i++) {\n            Node source = nodes[queries[i][0]];\n            Node dest = nodes[queries[i][1]];\n            \n            if (source.next != null && dest.prev != null) {\n                Node myNode = source.next;\n                while (myNode != dest) {\n                    System.out.println(myNode.i + \" \" + dest.i + \" \" + myNode.next);\n                    Node next = myNode.next;\n                    myNode.next = null;\n                    myNode.prev = null;\n                    current--;\n                    myNode = next;\n                }\n            }\n            \n            source.next = dest;\n            result[i] = current;\n        }\n        \n        return result;\n    }\n}",
    "submit_ts": "1722741043",
    "subm_id": "1343735168"
}