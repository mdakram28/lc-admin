{
    "username": "dream_boy",
    "submission": "const int M = 1e9 + 7;\nconst long long INF = 1e18;\n\nclass ST {\n    int n;\n    vector<array<long long, 4>> t;\n\n    vector<vector<pair<int, int>>> d = {\n        {{0, 0}, {2, 0}, {0, 1}},\n        {{1, 0}, {1, 1}, {3, 0}},\n        {{0, 2}, {2, 2}, {0, 3}},\n        {{1, 2}, {1, 3}, {3, 2}}\n    };\n\n    void sync(int v) {\n        for (int i = 0; i < 4; i++) {\n            t[v][i] = 0;\n            for (int k = 0; k < 3; k++) {\n                t[v][i] = max(t[v][i], t[v * 2][d[i][k].first] + t[v * 2 + 1][d[i][k].second]);\n            }\n        }\n    }\n\n    void build(int v, int tl, int tr, vector<int>& a) {\n        if (tl == tr) {\n            t[v][0] = t[v][1] = t[v][2] = 0;\n            t[v][3] = a[tl];\n            return;\n        }\n\n        int tm = tl + (tr - tl) / 2;\n        build(v * 2, tl, tm, a);\n        build(v * 2 + 1, tm + 1, tr, a);\n        sync(v);\n    }\n\n    void update(int v, int tl, int tr, int pos, int new_val) {\n        if (tl == tr) {\n            t[v][0] = t[v][1] = t[v][2] = 0;\n            t[v][3] = new_val;\n            return;\n        }\n        int tm = tl + (tr - tl) / 2;\n        if (pos <= tm) update(v * 2, tl, tm, pos, new_val);\n        else update(v * 2 + 1, tm + 1, tr, pos, new_val);\n        sync(v);\n    }\n\n    array<long long, 4> query(int v, int tl, int tr, int l, int r) {\n        if (l > r) return { -INF, -INF, -INF, -INF };\n        if (l == tl && r == tr) return t[v];\n        int tm = tl + (tr - tl) / 2;\n        auto left = query(v * 2, tl, tm, l, min(r, tm));\n        auto right = query(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r);\n\n        if (left[0] == -INF) return right;\n        if (right[0] == -INF) return left;\n\n        array<long long, 4> ans = { 0, 0, 0, 0 };\n        for (int i = 0; i < 4; i++) {\n            for (int j = 0; j < 3; j++) {\n                ans[i] = max(ans[i], left[d[i][j].first] + right[d[i][j].second]);\n            }\n        }\n        return ans;\n    }\n\npublic:\n    ST(vector<int>& a) {\n        n = a.size();\n        t.resize(4 * n);\n        build(1, 0, n - 1, a);\n    }\n\n    void update(int pos, int new_val) {\n        update(1, 0, n - 1, pos, new_val);\n    }\n\n    long long query(int l, int r) {\n        auto res = query(1, 0, n - 1, l, r);\n        return *max_element(res.begin(), res.end());\n    }\n\n    long long query(int l, int r, int type) {\n        auto res = query(1, 0, n - 1, l, r);\n        return res[type];\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        ST st(nums);\n        long long ans = 0;\n        for (auto& q : queries) {\n            int x = q[0], y = q[1];\n            st.update(x, y);\n            ans += max(0LL, st.query(0, n - 1));\n        }\n        return ans % M;\n    }\n};",
    "submit_ts": "1716695082",
    "subm_id": "1268132818"
}