{
    "username": "Ronit Nandi",
    "submission": "#define ll long long\nclass Solution {\npublic:\n   ll maximumValueSum(const vector<vector<int>>& grid) {\n    int rows = grid.size();\n    int cols = grid[0].size();\n    vector<vector<ll>> bestValues(rows, vector<ll>(3, LLONG_MIN));\n    vector<vector<int>> bestColumns(rows, vector<int>(3, -1));\n\n    calculateBestValues(grid, bestValues, bestColumns);\n\n    return findMaximumSumFromCombinations(bestValues, bestColumns);\n}\n\nvoid calculateBestValues(const vector<vector<int>>& grid, vector<vector<ll>>& bestValues, vector<vector<int>>& bestColumns) {\n    for (int row = 0; row < grid.size(); ++row) {\n        vector<pair<ll, int>> columnValues;\n        int col=0;\n        while(col<grid[row].size()){\n            columnValues.emplace_back(grid[row][col], col);\n            col++;\n        }\n        sort(columnValues.rbegin(), columnValues.rend());\n\n        for (int k = 0; k < 3 && k < grid[row].size(); ++k) {\n            bestValues[row][k] = columnValues[k].first;\n            bestColumns[row][k] = columnValues[k].second;\n        }\n    }\n}\n\nll findMaximumSumFromCombinations(const vector<vector<ll>>& bestValues, const vector<vector<int>>& bestColumns) {\n    ll maxSum = LLONG_MIN;\n    int r1=0;\n    while(r1<bestValues.size()-2){\n        for (int r2 = r1 + 1; r2 < bestValues.size() - 1; ++r2) {\n            for (int r3 = r2 + 1; r3 < bestValues.size(); ++r3) {\n                for (int i = 0; i < 3; ++i) {\n                    for (int j = 0; j < 3; ++j) {\n                        if (bestColumns[r2][j] == bestColumns[r1][i]) continue;\n                        for (int k = 0; k < 3; ++k) {\n                            if (bestColumns[r3][k] == bestColumns[r1][i] || bestColumns[r3][k] == bestColumns[r2][j]) continue;\n                            ll currentSum = bestValues[r1][i] + bestValues[r2][j] + bestValues[r3][k];\n                            maxSum = max(maxSum, currentSum);\n                        }\n                    }\n                }\n            }\n        }\n        r1++;\n    }\n    return maxSum;\n}\n\n};",
    "submit_ts": "1723910221",
    "subm_id": "1359221868"
}