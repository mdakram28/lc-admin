{
    "username": "NitinVadadoriya",
    "submission": "class Solution {\npublic:\n    long long find(vector<long long >&d,int i,int n) {\n        // cout <<i << n;\n    long long ans = abs(d[i] );\n        i++;\n        for (i; i < n; i++) {\n            // cout << i << \" \" << d[i] << endl;\n             ans += max((long long)0,abs(d[i]) - abs(d[i-1]));\n        }\n        \n        return ans;\n        \n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n       vector<long long>dif(n);\n        for (int i = 0; i < n; i++) {\n            dif[i] = nums[i] - target[i];\n        }\n        \n        int i = 0, j = 0;\n        long long ans = 0 ;\n        while(i < n) {\n            if (dif[i] == 0) i++;\n            else if (dif[i] < 0) {\n                \n                    j = i;\n                    while(j < n && dif [j] < 0) {\n                        j++;\n                    }\n                    // if (j == n) j--;\n                    ans += find(dif,i,j);\n                    i = j;\n                } else if (dif[i] > 0) {\n                     j = i;\n                    while(j < n && dif[j] > 0) {\n                        j++;\n                    }\n                    // if (j == n) j--;\n                    ans += find(dif,i,j);\n                    i = j;\n                }\n            }\n        \n        return ans;\n        }\n};",
    "submit_ts": "1721532368",
    "subm_id": "1327984170"
}