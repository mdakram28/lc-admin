{
    "username": "osxyz",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        split = [[]]\n\n        def bits(x, k):\n            ss = set()\n            i = 0\n            for i in range(32):\n                v = 1<<i\n                if v > x: break\n                if (x&v)==v and (k&v)==0:\n                    ss |= {i}\n            return ss\n\n        for x in nums:\n            if (x&k) == k:\n                split[-1].append(bits(x, k))\n            else:\n                if len(split[-1])>0:\n                    split.append([])\n\n\n        \n        def solve(arr):\n            mm = collections.defaultdict(int) # digits and count\n            j = 0\n            res = 0\n            for i, bb in enumerate(arr):\n                for b in bb:\n                    mm[b] += 1\n                ll = i-j+1\n                while ll>=1 and not(any(v==ll for v in mm.values())):\n                    res += (len(arr)-i)\n                    for b in arr[j]:\n                        mm[b] -= 1\n                    j = j + 1\n                    ll = i-j+1\n            return res\n        \n        # print(split)\n        # for s in split:\n        #     print(s, \"-->\", solve(s))\n    \n        return sum(solve(arr) for arr in split)\n\n\n",
    "submit_ts": "1720280030",
    "subm_id": "1311774336"
}