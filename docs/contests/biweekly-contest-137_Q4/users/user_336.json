{
    "username": "Sam Wei Hong",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> tops(m, vector<int>(3));\n        vector<int> ids(n); iota(ids.begin(), ids.end(), 0);\n        for (int i = 0; i < m; i++) {\n            partial_sort(ids.begin(), ids.begin()+3, ids.end(), [&](int id1, int id2) {\n                return board[i][id1] > board[i][id2];\n            });\n            for (int j = 0; j < 3; j++) {\n                tops[i][j] = ids[j];\n            }\n        }\n        // for (int i = 0; i < m; i++) {\n        //     for (int j = 0; j < 3; j++) {\n        //         cout << board[i][tops[i][j]] << \" \";\n        //     }\n        //     cout << \"\\n\";\n        // }\n        vector<int> rowids(m); iota(rowids.begin(), rowids.end(), 0);\n        sort(rowids.begin(), rowids.end(), [&](int i, int j) {\n            if (board[i][tops[i][0]] != board[j][tops[j][0]])\n                return board[i][tops[i][0]] > board[j][tops[j][0]];\n            if (board[i][tops[i][1]] != board[j][tops[j][1]])\n                return board[i][tops[i][1]] > board[j][tops[j][1]];\n            return board[i][tops[i][2]] > board[j][tops[j][2]];\n        });\n\n        ll res = -1e14;\n        for (int i = 0; i < min(m, 100); i++) {\n            for (int j = i+1; j < min(m, 100); j++) {\n                for (int k = j+1; k < min(m, 100); k++) {\n                    for (int a = 0; a < 3; a++) {\n                        for (int b = 0; b < 3; b++) {\n                            for (int c = 0; c < 3; c++) {\n                                if (tops[rowids[i]][a] != tops[rowids[j]][b]\n                                    && tops[rowids[j]][b] != tops[rowids[k]][c]\n                                    && tops[rowids[i]][a] != tops[rowids[k]][c]\n                                    ) {\n                                    res = max(res, (ll) board[rowids[i]][tops[rowids[i]][a]] + board[rowids[j]][tops[rowids[j]][b]] + board[rowids[k]][tops[rowids[k]][c]]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723909160",
    "subm_id": "1359181856"
}