{
    "username": "EUqr2c2cjD8nuX5K",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> sums, diffs;\n        int index = 0;\n        for (auto& p : points) {\n            sums.emplace_back(p[0] + p[1], index);\n            diffs.emplace_back(p[0] - p[1], index);\n            ++index;\n        }\n        \n        sort(sums.begin(), sums.end());\n        sort(diffs.begin(), diffs.end());\n        \n        int res = INT_MAX;\n        for (int i = 0; i < index; ++i) {\n            // if i goes missing\n            int a = \n                (sums[index - 1].second != i ? sums[index - 1].first : sums[index - 2].first) -\n                (sums[0].second != i ? sums[0].first : sums[1].first);\n            int b = \n                (diffs[index - 1].second != i ? diffs[index - 1].first : diffs[index - 2].first) -\n                (diffs[0].second != i ? diffs[0].first : diffs[1].first);\n            res = min(res, max(a, b));\n        }\n        return res;\n\n    }\n};"
}