{
    "username": "darkdip2",
    "submission": "from heapq import heappush, heappop\nfrom typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        h = horizontalCut\n        v = verticalCut\n        \n        h.sort(reverse=True)\n        v.sort(reverse=True)\n        \n        hi = 0\n        vi = 0\n        \n        h_count = 1\n        v_count = 1\n        \n        cost = 0\n        \n        while hi < len(h) and vi < len(v):\n            if h[hi] >= v[vi]:\n                cost += h[hi] * v_count\n                h_count += 1\n                hi += 1\n            else:\n                cost += v[vi] * h_count\n                v_count += 1\n                vi += 1\n        \n        while hi < len(h):\n            cost += h[hi] * v_count\n            hi += 1\n        \n        while vi < len(v):\n            cost += v[vi] * h_count\n            vi += 1\n        \n        return cost",
    "submit_ts": "1720924860",
    "subm_id": "1320233798"
}