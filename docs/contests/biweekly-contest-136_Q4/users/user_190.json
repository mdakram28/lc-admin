{
    "username": "moojkoo",
    "submission": "class Solution {\n    vector<vector<int>> adj;\n    vector<int> bc, sbch, dp, udp;\n\n    void dfs(int a, int p){\n        for (auto b : adj[a]) {\n            if(b == p) continue;\n            dfs(b, a);\n            int c = 1;\n            if(b % 2 == 0) c = 2;\n            if(dp[b] + c >= dp[a]){\n                sbch[a] = dp[a];\n\n                bc[a] = b;\n                dp[a] = dp[b] + c;\n            }\n            else if(dp[b] + c >= sbch[a]){\n                sbch[a] = dp[b] + c;\n            }\n        }\n    }\n\n    void dfs2(int a, int p){\n        if(a != 0){\n            udp[a] = udp[p] + 1 + (p % 2 == 0);\n            if(bc[p] == a){\n                udp[a] = max(udp[a], sbch[p] + 1 + (p % 2 == 0));\n            }\n            else{\n                udp[a] = max(udp[a], dp[p] + 1 + (p % 2 == 0));\n            }\n        }\n        for (auto b : adj[a]) {\n            if(b == p) continue;\n            dfs2(b, a);\n        }\n    }\n\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        adj.assign(n, {});\n        bc = sbch = dp = udp = vector<int>(n, 0);\n        \n        for (int i = 0; i < n - 1; i++) {\n            int a = edges[i][0], b = edges[i][1];\n            adj[a].push_back(b);\n            adj[b].push_back(a);\n        }\n\n        dfs(0, 0);\n        dfs2(0, 0);\n        vector<int> res(n);\n        for (int i = 0; i < n; i++) {\n            res[i] = max(udp[i], dp[i]);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699320",
    "subm_id": "1343208070"
}