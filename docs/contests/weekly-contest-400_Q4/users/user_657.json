{
    "username": "prakharjain256",
    "submission": "class Solution {\npublic:\n    int findClosestValue(const vector<int>& oxygenReadings, int target) {\n    // Initialize variables with descriptive names\n    int currentBitwiseAnd = oxygenReadings[0];\n    int minDifference = abs(currentBitwiseAnd - target);\n    unordered_map<int, int> bitCountInWindow;\n\n    // Count bits in the first element\n    int currentNumber = oxygenReadings[0];\n    for (int bit = 0; bit < 32; bit++) {\n        if (currentNumber & (1 << bit)) {\n            bitCountInWindow[bit]++;\n        }\n    }\n\n    // Sliding window pointers\n    int leftPointer = 0, rightPointer = 0;\n\n    while (rightPointer < oxygenReadings.size()) {\n        // Move window right if current AND is too high or left pointer exceeds right pointer\n        if (currentBitwiseAnd > target || leftPointer > rightPointer) {\n            rightPointer++;\n            if (rightPointer >= oxygenReadings.size()) {\n                break;\n            }\n\n            currentNumber = oxygenReadings[rightPointer];\n            // Update bit counts for the new element\n            for (int bit = 0; bit < 32; bit++) {\n                if (currentNumber & (1 << bit)) {\n                    bitCountInWindow[bit]++;\n                }\n            }\n        } else {\n            // Move window left if current AND needs to be reduced\n            currentNumber = oxygenReadings[leftPointer];\n            for (int bit = 0; bit < 32; bit++) {\n                if (currentNumber & (1 << bit)) {\n                    bitCountInWindow[bit]--;\n                }\n            }\n            leftPointer++;\n        }\n\n        // Calculate current AND using bit counts\n        currentBitwiseAnd = 0;\n        for (const auto& [bit, count] : bitCountInWindow) {\n            if (count == rightPointer - leftPointer + 1) {\n                currentBitwiseAnd |= (1 << bit);\n            }\n        }\n\n        // Update minimum difference if necessary\n        if (leftPointer <= rightPointer) {\n            minDifference = min(minDifference, abs(currentBitwiseAnd - target));\n        }\n    }\n\n    return minDifference;\n}\n    int minimumDifference(vector<int>& nums, int k) {\n        return findClosestValue(nums,k);\n    }\n};",
    "submit_ts": 1717299498.0
}