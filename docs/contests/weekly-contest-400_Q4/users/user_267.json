{
    "username": "sahilanand",
    "submission": "class Solution {\npublic:\n    int calc(int l, int r, vector<vector<int>>&pf){\n        int res=0, len=r-l+1;\n        if(l==0){\n            for(int bit=0;bit<=30;bit++)if(pf[bit][r]==len)res|=(1<<bit);\n        }\n        else{\n            for(int bit=0;bit<=30;bit++)if(pf[bit][r]-pf[bit][l-1]==len)res|=(1<<bit); \n        }\n        return res;\n    }\n    int minimumDifference(vector<int>&a, int k) {\n        int n=a.size(), ans=INT_MAX, i=0, j=0;\n        vector<vector<int>>pf(31,vector<int>(n,0));\n        for(int bit=0;bit<=30;bit++)for(int j=0;j<n;j++)if((a[j]&(1<<bit))>0)pf[bit][j]++;\n        for(int j=1;j<n;j++)for(int bit=0;bit<=30;bit++)pf[bit][j]+=pf[bit][j-1];\n        while(i<n && j<n){\n            j=max(j,i);\n            int andd = calc(i,j,pf);\n            while(andd>k && j<n){\n                ans=min(ans,abs(k-andd));\n                if(j+1<n){\n                    j++;\n                    andd=calc(i,j,pf);\n                    ans=min(ans,abs(k-andd));\n                }\n                else break;\n            }\n            ans=min(ans,abs(andd-k));\n            i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298418.0
}