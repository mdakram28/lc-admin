{
    "username": "eatfood",
    "submission": "from heapq import heappush, heappop\n\nclass Solution:\n    def maximumValueSum(self, g: List[List[int]]) -> int:\n        # brute over rows\n        n=len(g)\n        m=len(g[0])\n        inf = int(3e9+5)\n\n        def find3(row):\n            h=[]\n            for i,xi in enumerate(row):\n                heappush(h, (xi,i))\n                if i-3>=0:\n                    heappop(h)\n            if h[1] > h[2]:\n                h[1],h[2]=h[2],h[1]\n            return h\n\n        b3=[find3(row) for row in g]\n\n        # compute pref3\n        col3=[-inf for _ in range(m)]\n        pref3=[None] * n\n        for i in range(n):\n            # update col3\n            for j in range(m):\n                x=g[i][j]\n                if x > col3[j]:\n                    col3[j]=x\n            # find best 3 across this row\n            pref3[i] = find3(col3)\n\n        # for row in b3:\n        #     print(row)\n        # for row in pref3:\n        #     print(row)\n\n        def check(j,k):\n            ans=-inf\n            for c2 in range(3):\n                for c3 in range(3):\n                    r2 = b3[j][c2]\n                    r3 = b3[k][c3]\n                    for c1 in range(3):\n                        r1 = pref3[j-1][c1]\n                    \n                        if r1[1] != r2[1] and r2[1] != r3[1] and r1[1] != r3[1]:\n                            score = r1[0] + g[j][r2[1]] + g[k][r3[1]]\n                            ans=max(ans, score)\n            return ans\n\n        ans=-inf\n        for j in range(1,n-1):\n            for k in range(j+1,n):\n                ans=max(ans, check(j,k))\n        return ans",
    "submit_ts": "1723908383",
    "subm_id": "1359150236"
}