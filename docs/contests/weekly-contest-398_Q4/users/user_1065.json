{
    "username": "vector_longlong",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    unordered_map<ll,unordered_map<ll,unordered_map<ll,ll>>> dp;\n    ll solve(ll curr,ll jump,ll valid,ll k){\n        if(curr>=2*1e9 || curr<0) return 0;\n        if(curr==k){\n            if(curr==0 || valid==1) {\n                if(valid==1) return 1 + solve(curr+(1<<jump),jump+1,!valid,k);\n                else return 1 + solve(curr+(1<<jump),jump+1,valid,k);\n            }\n            else {\n                // if(valid==1) return 1 + solve(curr+(1<<jump),jump+1,!valid,k);\n                // else return 1 + solve(curr+(1<<jump),jump+1,valid,k);\n                return 1 + solve(curr-1,jump,!valid,k) + solve(curr+(1<<jump),jump+1,valid,k);\n            }\n        }\n        if(dp.count(curr) && dp[curr].count(jump) && dp[curr][jump].count(valid)) return dp[curr][jump][valid];\n        \n        ll down=0;\n        if(curr!=0 && valid==0) {\n            down=solve(curr-1,jump,!valid,k);\n        }\n        ll jumps=0;\n        if(valid==1) jumps=solve(curr+(1<<jump),jump+1,!valid,k);\n        else jumps=solve(curr+(1<<jump),jump+1,valid,k);\n        return dp[curr][jump][valid]=down+jumps;\n    }\n    int waysToReachStair(int k) {\n        return solve(1,0,0,k);        \n    }\n};",
    "submit_ts": "1716090469",
    "subm_id": "1261867941"
}