{
    "username": "Siddh_Bamb",
    "submission": "from collections import defaultdict, deque\nclass Solution:\n\n    def linetouching(self, a, b, c, x, y, r):\n        dist = ((abs(a * x + b * y + c)) / math.sqrt(a * a + b * b))\n        return r >= dist\n\n    def circtouching(self, x1, y1, x2, y2, r1, r2):\n        d = math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n        return d <= abs(r1-r2) or d <= r1 + r2\n\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        adj = defaultdict(set)\n        for i in range(len(circles)):\n            x1, y1, r1 = circles[i]\n            for j in range(i+1, len(circles), 1):\n                x2, y2, r2 = circles[j]\n                if self.circtouching(x1, y1, x2, y2, r1, r2):\n                    adj[i].add(j)\n                    adj[j].add(i)\n        start = deque([])\n        dest = set()\n        # print(adj)\n        for i in range(len(circles)):\n            x1, y1, r1 = circles[i]\n            flagA = False\n            flagB = False\n            if self.linetouching(0, -1, Y, x1, y1, r1) or self.linetouching(1, 0, 0, x1, y1, r1):\n                start.append(i)\n                flagA = True\n            if self.linetouching(-1, 0, X, x1, y1, r1) or self.linetouching(0, 1, 0, x1, y1, r1):\n                dest.add(i)\n                flagB = True\n            if flagA and flagB:\n                return False\n        # print(start, dest)\n        visited = set()\n        while len(start) > 0:\n            c = start.popleft()\n            visited.add(c)\n            for n in adj[c]:\n                if n in visited:\n                    continue\n                if n in dest:\n                    return False\n                visited.add(n)\n                start.append(n)\n        return True\n        \n\n\n            \n\n\n\n\n        \n    ",
    "submit_ts": "1722138341",
    "subm_id": "1335788280"
}