{
    "username": "Ma_Lin",
    "submission": "class Solution {\npublic:\n    int fa[1005], S, T, n;\n    \n    int find_fa(int p){\n        int j, k;\n        j = p;\n        while (fa[j] != -1) j = fa[j];\n        while (p != j){\n            k = fa[p];\n            fa[p] = j;\n            p = k;\n        }\n        \n        return j;\n    }\n    \n    void lian(int x, int y){\n        x = find_fa(x);\n        y = find_fa(y);\n        if (x != y) fa[x] = y;\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& a) {\n        int i, j;\n        long long t;\n        for (auto p : a){\n            if (1LL * p[2] * p[2] >= 1LL * p[0] * p[0] + 1LL * p[1] * p[1]) return false;\n            if (1LL * p[2] * p[2] >= 1LL * (p[0] - X) * (p[0] - X) + 1LL * (p[1] - Y) * (p[1] - Y)) return false;\n        }\n        \n        n = a.size();\n        for (i = 0; i < n + 2; ++i) fa[i] = -1;\n        for (i = 0; i < n; ++i){\n            if (labs(a[i][0] - 0) <= a[i][2]) lian(i, n);\n            if (labs(a[i][1] - Y) <= a[i][2]) lian(i, n);\n            \n            if (labs(a[i][0] - X) <= a[i][2]) lian(i, n + 1);\n            if (labs(a[i][1] - 0) <= a[i][2]) lian(i, n + 1);\n        }\n        \n        for (i = 0; i < n; ++i)\n            for (j = i + 1; j < n; ++j)\n                if (1LL * (a[i][0] - a[j][0]) * (a[i][0] - a[j][0]) +\n                    1LL * (a[i][1] - a[j][1]) * (a[i][1] - a[j][1]) <=\n                   1LL * (a[i][2] + a[j][2]) * (a[i][2] + a[j][2]))\n                    lian(i, j);\n        \n        return find_fa(n) != find_fa(n + 1);\n    }\n};",
    "submit_ts": "1722135724",
    "subm_id": "1335711536"
}