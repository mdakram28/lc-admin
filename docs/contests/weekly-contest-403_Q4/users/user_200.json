{
    "username": "Hexadecimal",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        \n        def e(i, left, right):\n            if not row[i] or row[i][0] > right or row[i][-1] < left:\n                return True\n            p = bisect_left(row[i], left)\n            if row[i][p] > right:\n                return True            \n            return False\n        \n        @functools.lru_cache(maxsize=None)\n        def f(left, right, up, down):\n            u = up\n            while u <= down and e(u, left, right):\n                u += 1\n            if u > down:\n                return n * m\n            d = down\n            while d >= up and e(d, left, right):\n                d -= 1\n            l = math.inf\n            r = -math.inf\n            for i in range(u, d + 1):\n                p = bisect_left(row[i], left)\n                if p < len(row[i]):\n                    l = min(l, row[i][p])\n                q = bisect_right(row[i], right) - 1\n                if q >= 0:\n                    r = max(r, row[i][q])\n            return (d - u + 1) * (r - l + 1)\n                \n        @functools.lru_cache(maxsize=None)\n        def g(left, right, up, down):\n            ret = math.inf\n            for i in range(up, down):\n                ret = min(ret, f(left, right, up, i) + f(left, right, i + 1, down))\n            for i in range(left, right):\n                ret = min(ret, f(left, i, up, down) + f(i + 1, right, up, down))\n            return ret\n        \n        n, m = len(grid), len(grid[0])\n        row = [[] for _ in range(n)]\n        col = [[] for _ in range(m)]\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j]:\n                    row[i].append(j)\n                    col[j].append(i)\n        ret = math.inf\n        for i in range(n - 1):\n            ret = min(ret, g(0, m - 1, 0, i) + f(0, m - 1, i + 1, n - 1), f(0, m - 1, 0, i) + g(0, m - 1, i + 1, n - 1))\n        for i in range(m - 1):\n            ret = min(ret, g(0, i, 0, n - 1) + f(i + 1, m - 1, 0, n - 1), f(0, i, 0, n - 1) + g(i + 1, m - 1, 0, n - 1))\n        return ret",
    "submit_ts": 1719112896.0
}