{
    "username": "scanhex",
    "submission": "class Solution:\n    def c(self, n, k):\n        res = 1\n        for i in range(k):\n            res *= n - i\n            res //= i + 1\n        return res\n    def waysToReachStair(self, k: int) -> int:\n        totres = 0\n        totpw = 0\n        lim = 70\n        dp = [[0] * lim for i in range(lim)]\n        dp[0][0] = 1\n        dp[1][0] = 1\n        for i in range(lim):\n            for j in range(lim):\n                cur = 1 + sum([2 ** k for k in range(j)]) - i\n                if cur < 0:\n                    continue\n                if cur == k:\n                    totres += dp[i][j]\n                if j + 1 < lim:\n                    dp[i][j + 1] += dp[i][j]\n                if i + 1 < lim and j + 1 < lim: \n                    dp[i + 1][j + 1] += dp[i][j]\n        return totres\n\n",
    "submit_ts": 1716086537.0
}