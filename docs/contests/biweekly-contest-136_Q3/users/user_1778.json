{
    "username": "sapnatomar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector<pair<int,int>> seen;\n\n        int ans = 0;\n        for (int i = 0; i < n/2; i++)\n        {\n            for (int j = 0; j < m/2; j++)\n            {\n                int ii = (n-1-i);\n                int jj = (m-1-j);\n                int ones = grid[i][j] + grid[i][jj] + grid[ii][j] + grid[ii][jj];\n                int zeros = 4 - ones;\n                ans += min(ones, zeros);\n            }\n        }\n\n        int mismatches = 0;\n        int ones = 0;\n        if (n % 2)\n        {\n            int i = 0, j = m-1;\n            while (i < j) \n            {\n                mismatches += (grid[n/2][i] != grid[n/2][j]);\n                if (grid[n/2][i] == grid[n/2][j]) \n                {\n                    ones += grid[n/2][i] + grid[n/2][j];\n                }\n                i++, j--;\n            }\n        }\n\n        if (m % 2)\n        {\n            int i = 0, j = n-1;\n            while (i < j)\n            {\n                mismatches += (grid[i][m/2] != grid[j][m/2]);\n                if (grid[i][m/2] == grid[j][m/2])\n                {\n                    ones += grid[i][m/2] + grid[j][m/2];\n                }\n                i++, j--;\n            }\n        }\n\n        ans += mismatches;\n        int mod = ones%4;\n\n        if (n % 2 && m % 2 && grid[n/2][m/2])\n        {\n            if (mod == 0) ans++; // remove middle only\n            else if (mod == 2 && mismatches == 0) ans += 3; // remove 2 matched ones + middle (-2-1)\n            else ans++; // make one mismatched ones + remove middle (+ 2 - 1)\n        }\n        else\n        {\n            if (mod == 2 && mismatches == 0) ans += 2; // remove 2 matches ones\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699938",
    "subm_id": "1343226807"
}