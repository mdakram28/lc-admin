{
    "username": "avadhut7969",
    "submission": "#define ll long long int\nll mod=1e9+7;\nclass Solution {\npublic:\n    int res=0;\n    \n    ll power(ll base, ll expo){\n        ll ans = 1;\n        while(expo){\n            if(expo & 1LL)ans = (ans * base) % mod;\n            base = (base * base) % mod;\n            expo >>= 1LL;\n        }\n        return ans;\n    }\n    ll modinv(ll x){\n        return power(x, mod-2);\n    }\n    ll C(ll n, ll r){\n        if(r > n) return 0;\n        ll ans = 1;\n        for(ll i=0; i<r; i++)\n            ans = (((ans * (n-i))%mod) * modinv(i+1))%mod;\n        return ans;\n    }\n    map<vector<int>,int>mp;\n    int helper(int i,int b,int k,int jump){\n        // cout<<i<<\" \"<<b<<\" \"<<jump<<endl;\n        // if(i>1e9) return 0;\n        if(i>k+5) return 0;\n        if(jump>30) return 0;\n        if(mp.find({i,b,jump})!=mp.end()) return mp[{i,b,jump}];\n        int ans=0;\n        if(i==k) ans++;\n        if(b==0 && i!=0){\n            ans=(ans+helper(i-1,1,k,jump));\n        }\n        // cout<<\"x\"<<\" \"<<jump<<\" \"<<i<<\" \"<<pow(2,jump)<<endl;\n        if(i+pow(2,jump)<=k+1) ans=ans+helper(i+pow(2,jump),0,k,jump+1);\n        return mp[{i,b,jump}]=ans;\n    }\n    int waysToReachStair(int k){\n        return helper(1,0,k,0);\n        \n    }\n};",
    "submit_ts": 1716090417.0
}