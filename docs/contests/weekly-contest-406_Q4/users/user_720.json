{
    "username": "chentodd2012",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) \n    {\n        std::vector<std::pair<long long, long long>> cuts;\n        for (auto x : horizontalCut)\n            cuts.push_back({ x, 1 });\n        \n        for (auto x : verticalCut)\n            cuts.push_back({ x, -1 });\n        \n        std::sort(cuts.rbegin(), cuts.rend());\n        \n        long long hCount = 1, vCount = 1;\n        long long result = 0;\n        for (auto&& [cost, type] : cuts)\n        {\n            if (type == 1)\n            {\n                result += cost * vCount;\n                hCount += 1;\n            }\n            else if (type == -1)\n            {\n                result += cost * hCount;\n                vCount += 1;\n            }\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1720925789",
    "subm_id": "1320266245"
}