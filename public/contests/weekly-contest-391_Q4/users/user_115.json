{
    "username": "megurine",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        i1 = i2 = -1\n        v1, v2 = inf, -inf\n        for i, (x, y) in enumerate(points):\n            xy = x + y\n            if xy < v1: i1, v1 = i, xy\n            if xy > v2: i2, v2 = i, xy\n        idx = {i1, i2}\n        i1 = i2 = -1\n        v1, v2 = inf, -inf\n        for i, (x, y) in enumerate(points):\n            xy = x - y\n            if xy < v1: i1, v1 = i, xy\n            if xy > v2: i2, v2 = i, xy\n        idx |= {i1, i2}\n        print(idx)\n        def f(d):\n            i1 = i2 = -1\n            v1, v2 = inf, -inf\n            for i, (x, y) in enumerate(points):\n                if i == d: continue\n                xy = x + y\n                if xy < v1: i1, v1 = i, xy\n                if xy > v2: i2, v2 = i, xy\n            cur = v2 - v1 \n            i1 = i2 = -1\n            v1, v2 = inf, -inf\n            for i, (x, y) in enumerate(points):\n                if i == d: continue\n                xy = x - y\n                if xy < v1: i1, v1 = i, xy\n                if xy > v2: i2, v2 = i, xy\n            cur = max(cur, v2 - v1)\n            return cur\n        return min(f(i) for i in idx)"
}