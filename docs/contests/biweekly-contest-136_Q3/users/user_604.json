{
    "username": "Mayanksood",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        vector<vector<bool>> vis(n,vector<bool>(m,false));\n        int ans = 0;\n        map<int,int> mp;\n        for(int i = 0;i < n;i++){\n            for(int j = 0;j < m;j++){\n                if(vis[i][j]) continue;\n                vis[i][j] = vis[n - i - 1][j] = vis[n - i - 1][m - j - 1] = vis[i][m - j - 1] = 1;\n                set<pair<int,int>> st;\n                st.insert({i,j});\n                st.insert({n - i - 1,j});\n                st.insert({n - i - 1,m - j - 1});\n                st.insert({i,m - j - 1});\n                int ones = grid[i][j] + grid[n - i - 1][j] + grid[n - i - 1][m - j - 1] + grid[i][m - j - 1];\n                int zeroes = 4 - ones;\n                if((int)st.size() == 2){\n                    ones /= 2;\n                    zeroes /= 2;\n                    if(ones == 2){\n                        mp[1]++;\n                    }else if(zeroes == 2){\n                        mp[0]++;\n                    }else{\n                        mp[-1]++;\n                    }\n                }else if((int)st.size() == 1){\n                    if(ones) ans++;\n                }else{\n                    ans += min(ones,zeroes);\n                }\n            }\n        }\n        if(mp[1]%2 == 0){\n            return ans + mp[-1];\n        }\n        if(mp[-1] != 0){\n            return ans + mp[-1];\n        }\n        return ans + 2;\n    }\n};",
    "submit_ts": "1722697624",
    "subm_id": "1343153074"
}