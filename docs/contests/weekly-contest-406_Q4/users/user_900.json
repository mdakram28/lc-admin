{
    "username": "enigmatic_int",
    "submission": "from typing import List\nfrom heapq import *\n\n\nclass Solution:\n    def minimumCost(\n        self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]\n    ) -> int:\n        h = []  # max heap\n        number_of_vertical_cuts = 0\n        number_of_horizontal_cuts = 0\n        # True = horizontal\n        # False = vertical\n        for index in horizontalCut:\n            heappush(h, (-index, True))\n        for index in verticalCut:\n            heappush(h, (-index, False))\n        result = 0\n        while h:\n            index, is_horizontal = heappop(h)\n            index = -index\n            if is_horizontal:\n                result += index * (number_of_vertical_cuts + 1)\n                number_of_horizontal_cuts += 1\n            else:\n                result += index * (number_of_horizontal_cuts + 1)\n                number_of_vertical_cuts += 1\n        return result",
    "submit_ts": "1720925925",
    "subm_id": "1320270552"
}