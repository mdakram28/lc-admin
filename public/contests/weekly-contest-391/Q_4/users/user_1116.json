{
    "username": "n_c_nikhil",
    "submission": "class Solution {\npublic:\n int calculate(vector<pair<int,int>> &v1,vector<pair<int,int>> &v,int i){\n     int ret1=0;\n     if(v1.back().second==i){\n         ret1+=v1[v1.size()-2].first;\n     }else{\n         ret1+=v1.back().first;\n     }\n     // cout<<ret1<<\" \";\n     if(v1.front().second==i){\n         ret1-=v1[1].first;\n     }else{\n         ret1-=v1.front().first;\n     }\n     // cout<<ret1<<\" \";\n     int ret2=0;\n     if(v.back().second==i){\n         ret2+=v[v.size()-2].first;\n     }else{\n         ret2+=v.back().first;\n     }\n     // cout<<ret2<<\" \";\n     if(v.front().second==i){\n         ret2-=v[1].first;\n     }else{\n         ret2-=v.front().first;\n     }\n     // cout<<ret2<<\"\\n\";\n     return max(ret1,ret2);\n }\n    int minimumDistance(vector<vector<int>>& num) {\n        int n=num.size();\n        vector<pair<int,int>> v(n),v1(n);\n        for(int i=0;i<num.size();i++){\n            v[i].first=num[i][0]+num[i][1];\n            v[i].second=i;\n            v1[i].first=num[i][0]-num[i][1];\n            v1[i].second=i;\n        }\n        sort(v1.begin(),v1.end());\n        sort(v.begin(),v.end());\n        pair<int,int> p1=v1.front();\n        int ans=INT_MAX;\n        //change back from this \n        //V.back() - V.front(), V1.back() - V1.front()\n      for(int i=0;i<n;i++){\n          ans=min(ans,calculate(v1,v,i));\n      }\n             return ans;\n    }\n};"
}