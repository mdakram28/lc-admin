{
    "username": "eatfood",
    "submission": "from heapq import heappush, heappop\nclass Solution:\n    def maximumValueSum(self, g: List[List[int]]) -> int:\n        # brute over rows\n        n=len(g)\n        m=len(g[0])\n        inf = int(3e9+5)\n\n        def find3(row):\n            h=[]\n            for i,xi in enumerate(row):\n                heappush(h, (xi,i))\n                if i-3>=0:\n                    heappop(h)\n            if h[1] > h[2]:\n                h[1],h[2]=h[2],h[1]\n            return h\n\n        b3=[find3(row) for row in g]\n        \n        def check(i,j,k):\n            ans=-inf\n            for c1 in range(3):\n                for c2 in range(3):\n                    for c3 in range(3):\n                        r1 = b3[i][c1]\n                        r2 = b3[j][c2]\n                        r3 = b3[k][c3]\n                        # check collisions\n                        if r1[1] != r2[1] and r2[1] != r3[1] and r1[1] != r3[1]:\n                            score = g[i][r1[1]] + g[j][r2[1]] + g[k][r3[1]]\n                            ans=max(ans, score)\n            return ans\n\n        ans=-inf\n        for i in range(n-2):\n            for j in range(i+1,n-1):\n                for k in range(j+1,n):\n                    ans=max(ans, check(i,j,k))\n        return ans",
    "submit_ts": "1723906648",
    "subm_id": "1359064562"
}