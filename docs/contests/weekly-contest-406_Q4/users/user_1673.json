{
    "username": "Dipti_Gupta_2003",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         int h = 1, v = 1;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n\n        long long int ans = 0;\n\n        int hori = m-2;\n        int ver = n-2;\n\n        while(hori >= 0 && ver >= 0)\n        {\n            if(horizontalCut[hori] >= verticalCut[ver])\n            {\n                ans += (h * horizontalCut[hori]);\n                hori--;\n                v++;\n            }\n            else\n            {\n                ans += (v * verticalCut[ver]);\n                ver--;\n                h++;\n            }\n\n        }\n        \n        while(hori >= 0)\n        {\n            ans += (h * horizontalCut[hori]);\n            hori--;\n        }\n\n        while(ver >= 0)\n        {\n            ans += (v * verticalCut[ver]);\n            ver--;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926388",
    "subm_id": "1320284764"
}