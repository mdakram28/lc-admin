{
    "username": "SsssD",
    "submission": "class Solution {\npublic:\nstruct segtree{\n    struct node{\n        int l,r;\n        long long sum,add;\n    };\n    vector<node>tr;\n    void build(int u,int l,int r) {\n        tr[u]={l,r,0,0};\n\t    if(l==r) return;\n\t    int mid=l+r>>1;\n\t    build(u<<1,l,mid);\n\t    build(u<<1|1,mid+1,r);\n    }\n    segtree(int _n):tr((_n+10)*4){build(1,0,_n);}\n    void pushup(int u){\n        tr[u].sum=tr[u<<1].sum+tr[u<<1|1].sum;\n    }\n    void pushdown(int x){\n        node &u=tr[x],&l=tr[x<<1],&r=tr[x<<1|1];\n        if(u.add!=0) {\n            l.sum=r.sum=0;\n            l.add=r.add=1;\n            u.add=0;\n        }\n    }\n    long long getsum(int u,int l,int r) {\n        if(tr[u].l>=l&&tr[u].r<=r) return tr[u].sum;\n        pushdown(u);\n\t    int mid=tr[u].l+tr[u].r>>1;\n        long long res=0;\n        if(l<=mid) res+=getsum(u<<1,l,r);\n        if(r>mid) res+=getsum(u<<1|1,l,r);\n\t    return res; \n    }\n    void reset(int u,int l,int r,long long v) {\n        if(tr[u].l>=l&&tr[u].r<=r){\n            tr[u].add=1;\n            tr[u].sum=0;\n            return;\n        }\n        pushdown(u);\n        int mid=tr[u].l+tr[u].r>>1;\n        if(l<=mid) reset(u<<1,l,r,v);\n        if(r>mid) reset(u<<1|1,l,r,v);\n        pushup(u);\n    }\n    void assign(int u,int x,long long v) {\n        if(tr[u].l==x&&tr[u].r==x) {\n            tr[u].sum=v;\n            return;\n        }\n        pushdown(u);\n        int mid=tr[u].l+tr[u].r>>1;\n        if(x<=mid) assign(u<<1,x,v);\n        else assign(u<<1|1,x,v);\n        pushup(u);\n    }\n    long long getsum(int l,int r) {return getsum(1,l,r);}\n    void reset(int l,int r,long long v) {reset(1,l,r,v);}\n    void assign(int x,long long v) {assign(1,x,v);}\n};\n\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        segtree st(n);\n        int q=queries.size();\n        for(int i=0;i<n-1;i++) {\n            st.assign(i,1);\n        }\n        vector<int>res;\n        for(vector<int>&vec:queries) {\n            int l=vec[0],r=vec[1];\n            if(st.getsum(l,l)) {\n                st.reset(l,r-1,0);\n                st.assign(l,1);\n            } \n            res.push_back(st.getsum(0,n-2));\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722739658",
    "subm_id": "552326094"
}