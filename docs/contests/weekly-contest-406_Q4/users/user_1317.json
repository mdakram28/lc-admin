{
    "username": "morningstar3009",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        int horizontalSections = 1;\n        int verticalSections = 1;\n        long long totalCost = 0;\n        \n        int hIndex = 0, vIndex = 0;\n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalSections;\n                horizontalSections++;\n                hIndex++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalSections;\n                verticalSections++;\n                vIndex++;\n            }\n        }\n        while (hIndex < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalSections;\n            horizontalSections++;\n            hIndex++;\n        }\n        while (vIndex < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalSections;\n            verticalSections++;\n            vIndex++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925583",
    "subm_id": "1320259564"
}