{
    "username": "user0070lV",
    "submission": "class Solution {\npublic:\n    \n\nstruct item {\n  // Items\n    int x;\n};\n\nstruct segtree {\n\n  int size;\n  vector<item> values;\n  item NEUTRAL_VALUE = {0};   // to be defined\n\n  void init(int n) {\n    size=1;\n    while(size<n) size*=2;\n    values.assign(2*size, NEUTRAL_VALUE);\n  }\n\n  item single(int a) {\n    // Define single\n    return {a};\n  }\n\n  item merge(item a, item b) {\n    // Define merge\n    return single(max(a.x, b.x));\n  }\n\n  void build(vector<int> &a, int x, int lx, int rx) {\n    if(rx-lx==1) {\n      if(lx < (int)a.size()) {\n        values[x] = single(a[lx]);\n      }\n      return;\n    }\n    int m= (lx+rx)/2;\n    build(a, 2*x+1, lx, m);\n    build(a, 2*x+2, m, rx);\n    values[x] = merge(values[2*x+1], values[2*x+2]); \n  }\n\n  void build(vector<int> &a){\n    build(a, 0, 0, size);\n  }\n\n  void set(int i, int v, int x, int lx, int rx) {\n    if(rx-lx==1) {\n      values[x] = single(v);\n      return;\n    }\n    int m= (lx+rx)/2;\n    if(i<m) set(i, v, 2*x+1, lx, m);\n    else set(i, v, 2*x+2, m, rx);\n    values[x]= merge(values[2*x+1], values[2*x+2]);   \n  }\n\n  void set(int i, int v) {\n    set(i,v,0,0,size);\n  }\n\n  item calc(int l, int r, int x, int lx, int rx){\n    if(lx>=r || l>=rx) return NEUTRAL_VALUE; \n    if(lx>=l && rx<=r) return values[x];\n    int m= (lx+rx)/2;\n    item s1 = calc(l, r, 2*x+1, lx, m);\n    item s2 = calc(l, r, 2*x+2, m, rx);\n    return merge(s1,s2);\n  }\n\n  item calc(int l, int r){\n    return calc(l, r, 0, 0, size);\n  }\n\n  void print(){\n    for(auto y: values) cout<<y.x<<\" \";\n        cout<<'\\n';\n  }\n};\n\n\nint maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        segtree S[k+1];\n        vector<int> v(n);\n        for(int i=1; i<=k; i++) {\n            S[i].init(n);\n            S[i].build(v);\n        }\n        vector<int> vv(n,1);\n        S[0].init(n);\n        S[0].build(vv);\n        for(int z=0; z<=k; z++){\n            unordered_map<int,int> lastvalues;\n            for(int i=0; i<n; i++){\n                if(z>0)\n                    S[z].set(i, max(S[z].calc(i,i+1).x, S[z-1].calc(0, i).x + 1));\n\n                if(lastvalues.count(nums[i])>0){\n                    S[z].set(i, max(S[z].calc(i,i+1).x, S[z].calc(lastvalues[nums[i]], lastvalues[nums[i]]+1).x + 1));\n                }\n\n                lastvalues[nums[i]] = i;\n            }\n        }\n        int ans = 0;\n        for(int i=0; i<=k; i++){\n            ans = max(ans, S[i].calc(0, n).x);\n            // S[i].print();\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861948.0
}