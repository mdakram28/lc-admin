{
    "username": "_srihari_",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    int waysToReachStair(int k) {\n        map<pair<ll,ll>,ll> dp;\n        auto DFS = [&](auto&& dfs, ll curr, ll j)->ll{\n            auto p = make_pair(curr,j);\n            if(dp.find(p)!=dp.end())return dp[p];\n            ll ret = curr==k;\n            ll nxt = curr;\n            ll tmp =  powl(2,j);\n            if(nxt+tmp<=(k+1000)){\n                nxt+=tmp;\n                ret += dfs(dfs, nxt, j+1);\n            }\n            if(curr>0){\n                ret+=(curr-1)==k;\n                curr--;\n                nxt = curr;\n                if(nxt+tmp<=(1000+k)){\n                    nxt+=tmp;\n                    ret += dfs(dfs, nxt, j+1);\n                }\n            }\n            dp[p]=ret;\n            return ret;\n        };\n        return DFS(DFS, 1, 0);\n    }\n};",
    "submit_ts": "1716087642",
    "subm_id": "1261789924"
}