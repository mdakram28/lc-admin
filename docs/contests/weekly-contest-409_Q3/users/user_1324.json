{
    "username": "avishaan",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int>ans;\n        set<pair<int,int>>s;\n        int last = n - 1;\n        for(int i = 0; i < queries.size(); i++){\n            // s.insert({queries[i][0], -1 * queries[i][1]});\n            int start = queries[i][0], end = queries[i][1];\n            auto it = s.lower_bound({start, INT_MIN});\n            while(it != s.end()){\n                int next = -1 * (*it).second;\n                cout << next << \" \" << start << endl;\n                if(next > end)\n                    break;\n                // cout << next << \" \" << (*it).first << endl;\n                last += (next - (*it).first - 1);\n                s.erase(it);\n                if(next < end){\n                    it = s.lower_bound({next, INT_MIN});\n                }\n                else\n                    break;\n                // cout << count << endl;\n            }\n            // cout << endl;\n            it = s.upper_bound({start, INT_MAX});\n            if(it == s.begin()){\n                last -= (end - start - 1);\n                s.insert({queries[i][0], -1 * queries[i][1]});\n                // ans.push_back(last);\n                // continue;\n            }\n            else{\n                it--;\n                int next = -1 * (*it).second;\n                cout << next << endl;\n                if(next <= start){\n                    last -= (end - start - 1);\n                    s.insert({queries[i][0], -1 * queries[i][1]});\n                    // ans.push_back(last);\n                }\n            }\n            // s.insert({queries[i][0], -1 * queries[i][1]});\n            ans.push_back(last);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743900",
    "subm_id": "1343802237"
}