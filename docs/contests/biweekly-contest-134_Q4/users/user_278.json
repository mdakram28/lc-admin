{
    "username": "tonghuikang",
    "submission": "def is_zero(arr, brr, distance):\n    for a, b in zip(arr, brr):\n        assert b - a <= distance\n        if b - a == distance:\n            return False\n    return True\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        # arr = [int((x & k) == k) for x in nums]\n        \n        # break by non k\n        \n        censored = [0 for _ in range(32)]\n        for i,b in enumerate(bin(k)[2:][::-1]):\n            if b == \"1\":\n                censored[i] = 1\n\n        arrs = [[]]\n        for x in nums:\n            if (x & k) != k:\n                arrs.append([])\n            else:\n                arrs[-1].append(x)\n                \n        # print(arrs)\n\n        res = 0\n        for arr in arrs:\n            if not arr:\n                continue\n                \n\n            cntr = [[0 for _ in range(32)]]\n            for x in arr:\n                cntr_new = [x for x in cntr[-1]]\n                for i,b in enumerate(bin(x)[2:][::-1]):\n                    if b == \"1\" and censored[i] != 1:\n                        cntr_new[i] += 1\n                cntr.append(cntr_new)\n            \n            # for c in cntr:\n            #     print(c)\n            # print()\n            \n            n = len(arr)\n            \n            right = 0\n            for left in range(n):\n                right = max(right, left + 1)\n                while not is_zero(cntr[left], cntr[right], right - left) and right < n:\n                    right += 1\n                \n                if is_zero(cntr[left], cntr[right], right - left):\n                    val = n - right + 1\n                    # print(left, right, val)\n                    res += val\n                \n        # print()\n        # print()\n        # print()\n        # print()\n        return res\n        \n",
    "submit_ts": "1720278699",
    "subm_id": "544563908"
}