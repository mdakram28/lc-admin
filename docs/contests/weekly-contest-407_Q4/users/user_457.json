{
    "username": "hdzattain",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diff = [target[i] - nums[i] for i in range(n)]\n        \n        operations = 0\n        \n        i = 0\n        while i < n:\n            if diff[i] != 0:\n                sign = 1 if diff[i] > 0 else -1\n                j = i\n                while j < n and diff[j] * sign > 0:\n                    j += 1\n                \n                # \u4ece i \u5230 j-1 \u8fd9\u6bb5\u533a\u95f4\u7684\u5143\u7d20\u5168\u90e8\u53d8\u4e3a 0\n                min_val = min(abs(diff[k]) for k in range(i, j))\n                for k in range(i, j):\n                    diff[k] -= sign * min_val\n                \n                operations += min_val\n\n            else:\n                i += 1\n        \n        return operations",
    "submit_ts": "1721531515",
    "subm_id": "548385826"
}