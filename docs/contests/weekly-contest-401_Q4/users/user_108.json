{
    "username": "JJZin",
    "submission": "class Solution:\n    def maxTotalReward(self, rewardValues: List[int]) -> int:\n    \n    \n        rewardValues = list(set(rewardValues))\n        rewardValues.sort(reverse = True)\n        \n        bason = rewardValues[0]\n        \n        \n        @cache\n        def recourse(idx, maxim):\n            \n            \n            if maxim == 0:\n                return 0\n            \n            ans = 0\n            hauldron = 0\n            ping = 0\n            for ea in range(idx, len(rewardValues)):\n                if rewardValues[ea] >= maxim:\n                    continue\n                    \n                if rewardValues[ea] == maxim - 1:\n                    return rewardValues[ea]\n                    \n                if rewardValues[ea] <= hauldron// 2:\n                    break\n                hauldron = max(hauldron, rewardValues[ea])\n                \n                b = rewardValues[ea] if rewardValues[ea] < (maxim - rewardValues[ea]) else (maxim - rewardValues[ea])\n                \n                a = rewardValues[ea] + recourse(ea + 1, b)\n                ans = ans if ans > a else a\n                ping += 1\n                if ping > 20:\n                    break\n            return ans\n            \n            \n            \n        return bason + recourse(1, bason)\n            ",
    "submit_ts": 1717902528.0
}