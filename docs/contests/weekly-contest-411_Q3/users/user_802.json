{
    "username": "Cui Pengyu",
    "submission": "class Solution {\n    boolean is7x(int[] num) {\n        int currSign = +1;\n        int sum = 0;\n        for (int i = 0; i < (num.length + 2) / 3; i++) {\n            int ii = i * 3;\n            int v0 = (ii + 0) >= num.length ? 0 : num[ii + 0];\n            int v1 = (ii + 1) >= num.length ? 0 : num[ii + 1];\n            int v2 = (ii + 2) >= num.length ? 0 : num[ii + 2];\n            sum += currSign * (v0 + v1 * 10 + v2 * 100);\n            currSign *= -1;\n        }\n        return sum % 7 == 0;\n    }\n\n    void minus1(int[] num) {\n        int n = num.length;\n        int i = n / 2;\n        boolean isOdd = n % 2 == 1;\n        while (true) {\n            num[i] -= 1;\n            if (!isOdd) num[n-1-i] -= 1;\n            if (num[i] < 0) {\n                num[i] += 10;\n                if (!isOdd) num[n-1-i] += 10;\n                i--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    int[] helper(int n) {\n        int[] num = new int[n];\n        Arrays.fill(num, 9);\n\n        while (true) {\n            if (is7x(num)) {\n                return num;\n            }\n            minus1(num);\n        }\n    }\n\n    public String largestPalindrome(int n, int k) {\n        if (k == 1) {\n            return \"9\".repeat(n);\n        }\n        if (k == 2) {\n            if (n == 1) {\n                return \"8\";\n            }\n            return \"8\" + \"9\".repeat(n-2) + \"8\";\n        }\n        if (k == 3) {\n            return \"9\".repeat(n);\n        }\n        if (k == 4) {\n            if (n == 1) {\n                return \"8\";\n            }\n            if (n == 2) {\n                return \"88\";\n            }\n            if (n == 3) {\n                return \"888\";\n            }\n            return \"88\" + \"9\".repeat(n-4) + \"88\";\n        }\n        if (k == 5) {\n            if (n == 1) {\n                return \"5\";\n            }\n            return \"5\" + \"9\".repeat(n-2) + \"5\";\n        }\n        if (k == 6) {\n            if (n == 1) {\n                return \"6\";\n            }\n            if (n == 2) {\n                return \"66\";\n            }\n            if (n == 3) {\n                return \"8\" + \"8\" + \"8\";\n            }\n            if (n == 4) {\n                return \"8\" + \"77\" + \"8\";\n            }\n            if (n == 5) {\n                return \"8\" + \"989\" + \"8\";\n            }\n\n            if (n % 2 == 0) {\n                return \"8\" + \"9\".repeat((n-2)/2-1) + \"77\" + \"9\".repeat((n-2)/2-1) + \"8\";\n            }\n            if (n % 2 == 1) {\n                return \"8\" + \"9\".repeat((n-3)/2) + \"8\" + \"9\".repeat((n-3)/2) + \"8\";\n            }\n        }\n        if (k == 7) {\n            int[] result = helper(n);\n            StringBuilder sb = new StringBuilder();\n            for (int num : result) {\n                sb.append(num);\n            }\n            return sb.toString();\n        }\n        if (k == 8) {\n            if (n == 1) {\n                return \"8\";\n            }\n            if (n == 2) {\n                return \"88\";\n            }\n            if (n == 3) {\n                return \"888\";\n            }\n            if (n == 4) {\n                return \"8888\";\n            }\n            if (n == 5) {\n                return \"88888\";\n            }\n            if (n == 6) {\n                return \"888888\";\n            }\n            return \"888\" + \"9\".repeat(n-6) + \"888\";\n        }\n        if (k == 9) {\n            return \"9\".repeat(n);\n        }\n        return \"\";\n    }\n}",
    "submit_ts": "1723953443",
    "subm_id": "1359821378"
}