{
    "username": "Thusharke",
    "submission": "class Solution {\n    HashMap<String, Integer> memo;\n    public int solve(int k, int curr, int jump, int prevOp){\n        if(curr > k+10 || curr < 0) return 0;\n        \n        String key = curr + \",\" + jump + \",\" + prevOp;\n        if(memo.containsKey(key))\n            return memo.get(key);\n        \n        int ans = (k == curr ? 1 : 0);\n        if(prevOp == 1)\n            ans += solve(k, curr + (int)Math.pow(2, jump), jump + 1, 2);\n        else{\n            if(curr > 0)\n                ans += solve(k, curr-1, jump, 1);\n            ans += solve(k, curr + (int)Math.pow(2, jump), jump + 1, 2);\n        }\n        \n        memo.put(key, ans);\n        return ans;\n    }\n    public int waysToReachStair(int k) {\n        memo = new HashMap<>();\n        return solve(k, 1, 0, -1);\n    }\n}",
    "submit_ts": 1716088519.0
}