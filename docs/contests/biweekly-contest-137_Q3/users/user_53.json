{
    "username": "89829224",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        board_size = n * m\n\n        options = set()\n        rows = [set() for _ in range(n)]\n        columns = [set() for _ in range(m)]\n        for j in range(m):\n            for i in range(n):\n                value = board[j][i]\n                option = (i, j, value)\n                options.add(option)\n                rows[i].add(option)\n                columns[j].add(option)\n\n        options_sorted = sorted(options, key=itemgetter(2), reverse=True)\n\n        max_sum = None\n\n        i = j = k = 0\n        for i in range(board_size):\n            max_possible_sum = sum(option[2] for option in options_sorted[i : i + 3])\n            if max_sum == max_possible_sum:\n                break\n            left = options_sorted[i]\n            for j in range(i + 1, board_size):\n                if max_sum == max_possible_sum:\n                    break\n                middle = options_sorted[j]\n                if (\n                    max_sum is not None\n                    and j < board_size - 1\n                    and max_sum > left[2] + middle[2] + options_sorted[j + 1][2]\n                ):\n                    break\n                if middle in rows[left[0]]:\n                    continue\n                if middle in columns[left[1]]:\n                    continue\n                for k in range(j + 1, board_size):\n                    if max_sum == max_possible_sum:\n                        break\n                    right = options_sorted[k]\n                    if max_sum is not None and max_sum > left[2] + middle[2] + right[2]:\n                        break\n                    if right in rows[left[0]]:\n                        continue\n                    if right in columns[left[1]]:\n                        continue\n                    if right in rows[middle[0]]:\n                        continue\n                    if right in columns[middle[1]]:\n                        continue\n                    values_sum = left[2] + middle[2] + right[2]\n                    if max_sum is None or values_sum > max_sum:\n                        max_sum = values_sum\n\n        return max_sum\n",
    "submit_ts": "1723907747",
    "subm_id": "1359122485"
}