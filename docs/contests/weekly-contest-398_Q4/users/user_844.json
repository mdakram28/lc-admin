{
    "username": "anshulagarwal3131",
    "submission": "class Solution {\npublic:\n    vector<long long int> pw;\n    map<long long int,map<int,map<int,long long int>>> dp;\n     map<long long int,map<int,map<int,long long int>>> visited;\n    long long int solve(long long int i,int j,int c,int &k){\n        if(i>k+2)\n            return 0;\n        if(visited[i][j][c])\n            return dp[i][j][c];\n        // visited[i][j][c] = 1;\n        if(i==k){\n            long long int x = 1;\n            if(c)\n                x+=(solve(i+pw[j],j+1,1-c,k));\n            else\n                x+=(solve(i+pw[j],j+1,c,k)+solve(i-1,j,1-c,k));\n            return x;\n                \n        }\n        visited[i][j][c] = 1;\n        if(c)\n            return dp[i][j][c] = solve(i+pw[j],j+1,1-c,k);\n        return dp[i][j][c] = solve(i+pw[j],j+1,c,k)+solve(i-1,j,1-c,k);\n        \n    }\n    int waysToReachStair(int k) {\n        long long int x = 1;\n        for(int i = 0;i<40;i++){\n            pw.push_back(x);\n            x*=2;\n        }\n        return solve(1,0,0,k);\n    }\n};",
    "submit_ts": "1716089410",
    "subm_id": "1261841508"
}