{
    "username": "SohamKanji",
    "submission": "class Solution {\npublic:\n    class TrieNode {\n        public:\n        int cost = INT_MAX;\n        TrieNode* child[26];\n        TrieNode() {\n            for(int i=0; i<26; i++) {\n                child[i] = NULL;\n            }\n        }\n    };\n\n    void insert_key(TrieNode* root, string& key, int cost)\n{\n    TrieNode* currentNode = root;\n    for (auto c : key) {\n        if (currentNode->child[c - 'a'] == NULL) {\n            TrieNode* newNode = new TrieNode();\n            currentNode->child[c - 'a'] = newNode;\n        }\n        currentNode = currentNode->child[c - 'a'];\n    }\n    currentNode->cost = min(currentNode->cost, cost);\n}\n\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n+1, -1);\n        TrieNode* root = new TrieNode();\n        for(int j=0; j<words.size(); j++) {\n            insert_key(root, words[j], costs[j]);\n        }\n        dp[n] = 0;\n        for(int i=n-1; i>=0; i--) {\n            TrieNode* curr = root;\n            int ans = INT_MAX;\n            for(int j=i; j<target.size(); j++) {\n                int tmp = target[j]-'a';\n                if(curr->child[tmp] == NULL) {\n                    break;\n                }\n                curr = curr->child[tmp];\n                if(curr->cost!=INT_MAX) {\n                    int nxt = dp[j+1];\n                    if(nxt!=INT_MAX) {\n                        ans = min(ans, nxt+curr->cost);\n                    }\n                }\n            }\n            dp[i] = ans;\n        }\n        return dp[0] == INT_MAX ? -1 : dp[0];\n    }\n};",
    "submit_ts": "1720322355",
    "subm_id": "1312347679"
}