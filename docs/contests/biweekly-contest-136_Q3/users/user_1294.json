{
    "username": "2100030642cser",
    "submission": "package main\n\n// Function to find the minimum of two integers\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}\n\nfunc minFlips(grid [][]int) int {\n    n := len(grid)\n    m := len(grid[0])\n\n    ans := 0\n\n    // Loop through the 2x2 sub-grids\n    for i := 0; i < n/2; i++ {\n        for j := 0; j < m/2; j++ {\n            elements := []int{\n                grid[i][j],\n                grid[n-i-1][j],\n                grid[i][m-j-1],\n                grid[n-i-1][m-j-1],\n            }\n\n            ones := 0\n            for _, elem := range elements {\n                ones += elem\n            }\n\n            ans += min(ones, 4-ones)\n        }\n    }\n\n    possible := 0\n    count := 0\n\n    // Handle the middle row if n is odd\n    if n%2 != 0 {\n        for j := 0; j < m/2; j++ {\n            if grid[n/2][j] != grid[n/2][m-j-1] {\n                ans++\n                possible++\n            } else {\n                if grid[n/2][j] == 1 {\n                    count++\n                }\n            }\n        }\n    }\n\n    // Handle the middle column if m is odd\n    if m%2 != 0 {\n        for i := 0; i < n/2; i++ {\n            if grid[i][m/2] != grid[n-i-1][m/2] {\n                ans++\n                possible++\n            } else {\n                if grid[i][m/2] == 1 {\n                    count++\n                }\n            }\n        }\n    }\n\n    // Handle the central element if both n and m are odd\n    if n%2 != 0 && m%2 != 0 && grid[n/2][m/2] == 1 {\n        ans++\n    }\n\n    if possible == 0 && count%2 != 0 {\n        ans += 2\n    }\n\n    return ans\n}\n",
    "submit_ts": "1722699438",
    "subm_id": "1343211627"
}