{
    "username": "apoorvap",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        rows, cols = len(grid), len(grid[0])\n        \n        def calc_rect(up, down, start, end):\n            min_start, max_end = end, start - 1\n            min_up, max_down = down, up - 1\n            for i in range(up, down):\n                for j in range(start, end):\n                    if grid[i][j] == 1:\n                        min_start = min(min_start, j)\n                        max_end = max(max_end, j)\n                        min_up = min(min_up, i)\n                        max_down = max(max_down, i)\n            return (max_end - min_start + 1) * (max_down - min_up + 1) if min_start <= max_end else 0\n        \n        area_min = float('inf')\n        \n        for i in range(1, rows-1):\n            for j in range(i+1, rows):\n                area_min = min(area_min, calc_rect(0, i, 0, cols) + calc_rect(i, j, 0, cols) + calc_rect(j, rows, 0, cols))\n        \n        for i in range(1, cols-1):\n            for j in range(i+1, cols):\n                area_min = min(area_min, calc_rect(0, rows, 0, i) + calc_rect(0, rows, i, j) + calc_rect(0, rows, j, cols))\n\n        for i in range(1, rows):\n            for j in range(1, cols):\n                area_min = min(area_min, calc_rect(0, i, 0, cols) + calc_rect(i, rows, 0, j) + calc_rect(i, rows, j, cols))\n                area_min = min(area_min, calc_rect(0, i, 0, j) + calc_rect(0, i, j, cols) + calc_rect(i, rows, 0, cols))\n        \n        for i in range(1, cols):\n            for j in range(1, rows):\n                area_min = min(area_min, calc_rect(0, rows, 0, i) + calc_rect(0, j, i, cols) + calc_rect(j, rows, i, cols))\n                area_min = min(area_min, calc_rect(0, j, 0, i) + calc_rect(j, rows, 0, i) + calc_rect(0, rows, i, cols))\n        \n        return area_min",
    "submit_ts": 1719114962.0
}