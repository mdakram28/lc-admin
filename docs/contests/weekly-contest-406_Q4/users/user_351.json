{
    "username": "popatco_1",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h=1,v=1;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        reverse(horizontalCut.begin(),horizontalCut.end());\n        reverse(verticalCut.begin(),verticalCut.end());\n        int i=0,j=0;\n        long long ans=0;\n        while(i<horizontalCut.size() && j<verticalCut.size())\n        {\n            if(horizontalCut[i]<verticalCut[j])\n            {\n                v++;\n                ans=ans+(long long)(h*verticalCut[j]);\n                j++;\n            }\n            else\n            {\n                h++;\n                ans=ans+(long long)(v*horizontalCut[i]);\n                i++;\n            }\n        }\n        if(i!=horizontalCut.size())\n        {\n            for(int k=i;k<horizontalCut.size();k++)\n            {\n                ans=ans+(long long)(v*horizontalCut[k]);\n            }\n        }\n        if(j!=verticalCut.size())\n        {\n            for(int k=j;k<verticalCut.size();k++)\n            {\n                ans=ans+(long long)(h*verticalCut[k]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925439",
    "subm_id": "1320254784"
}