{
    "username": "AkashThakur2701",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n          vector<pair<int, char>> cuts;\n    for (int cost : horizontalCut) {\n        cuts.push_back({cost, 'H'});\n    }\n    for (int cost : verticalCut) {\n        cuts.push_back({cost, 'V'});\n    }\n    sort(cuts.begin(), cuts.end(), greater<>());\n    \n   long long int totalCost = 0;\n    int horizontalPieces = 1;\n    int verticalPieces = 1;\n    \n    for (const auto& cut : cuts) {\n        int cost = cut.first;\n        char type = cut.second;\n        \n        if (type == 'H') {\n            totalCost += cost * verticalPieces;\n            horizontalPieces++;\n        } else {\n            totalCost += cost * horizontalPieces;\n            verticalPieces++;\n        }\n    }\n    \n    return totalCost;\n    }\n};",
    "submit_ts": "1720926095",
    "subm_id": "1320275847"
}