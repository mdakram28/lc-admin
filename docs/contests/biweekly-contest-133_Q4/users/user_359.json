{
    "username": "LavishVaishnav",
    "submission": "class Solution:\n    def numberOfPermutations(self, n, reqs):\n        MOD = 1_000_000_007\n        MAX_INV = 400\n        r = {}\n        for req in reqs:\n            r[req[0] + 1] = req[1]\n\n\n        pc = [[0] * (MAX_INV + 1) for _ in range(n + 1)]\n        pc[0][0] = 1\n\n\n        for length in range(1, n + 1):\n            for inv in range(0, MAX_INV + 1):\n                for pos in range(length):\n                    prevInv = inv - pos\n                    if prevInv >= 0:\n                        pc[length][inv] = (pc[length][inv] + pc[length - 1][prevInv]) % MOD\n\n            if length in r:\n                targetInv = r[length]\n                for inv in range(0, MAX_INV + 1):\n                    if inv != targetInv:\n                        pc[length][inv] = 0\n\n        # Calculate the final result\n        res = 0\n        for count in pc[n]:\n            res = (res + count) % MOD\n\n        return res\n",
    "submit_ts": 1719070333.0
}