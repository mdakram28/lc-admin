{
    "username": "retired_kid",
    "submission": "class Solution {\n     public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long ans = 0;\n        int[] dif = new int[n];\n        for (int i = 0; i < n; i++) {\n            dif[i] = nums[i] - target[i];\n        }\n        int flg = dif[0] < 0 ? -1 : 1, prev = 0;\n        for (int i = 1; i < n; i++) {\n            int flg2 = dif[i] < 0 ? -1 : 1;\n            if (flg != flg2) {\n                flg = flg2;\n                ans += minMoves(dif, prev, i - 1);\n                prev = i;\n            }\n        }\n        ans += minMoves(dif, prev, n - 1);\n        return ans;\n    }\n    public int minMoves(int[] nums, int l, int r) {\n        int res = 0, pre = 0;\n        for (int i = l; i <= r; i++) {\n            res += Math.max(Math.abs(nums[i]) - pre, 0);\n            pre = Math.abs(nums[i]);\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721531623",
    "subm_id": "1327965701"
}