{
    "username": "Ankita Tiwary",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n      \n        int m = board.length;\n        int n = board[0].length;\n        long maxSum = Long.MIN_VALUE;\n\n        // Step 1: Preprocess columns to get the top 3 values and their row indices\n        int[][] colMax = new int[n][3];\n        int[][] colIndex = new int[n][3];\n        for (int j = 0; j < n; j++) {\n            Arrays.fill(colMax[j], Integer.MIN_VALUE);\n            Arrays.fill(colIndex[j], -1);\n            for (int i = 0; i < m; i++) {\n                int val = board[i][j];\n                if (val > colMax[j][0]) {\n                    colMax[j][2] = colMax[j][1];\n                    colIndex[j][2] = colIndex[j][1];\n                    colMax[j][1] = colMax[j][0];\n                    colIndex[j][1] = colIndex[j][0];\n                    colMax[j][0] = val;\n                    colIndex[j][0] = i;\n                } else if (val > colMax[j][1]) {\n                    colMax[j][2] = colMax[j][1];\n                    colIndex[j][2] = colIndex[j][1];\n                    colMax[j][1] = val;\n                    colIndex[j][1] = i;\n                } else if (val > colMax[j][2]) {\n                    colMax[j][2] = val;\n                    colIndex[j][2] = i;\n                }\n            }\n        }\n\n        // Step 2: Iterate over all column combinations\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    // Check all combinations of top values\n                    for (int x = 0; x < 3; x++) {\n                        for (int y = 0; y < 3; y++) {\n                            for (int z = 0; z < 3; z++) {\n                                // Ensure that selected rows are distinct\n                                if (colIndex[i][x] != colIndex[j][y] && colIndex[i][x] != colIndex[k][z] && colIndex[j][y] != colIndex[k][z]) {\n                                    long sum = (long) colMax[i][x] + colMax[j][y] + colMax[k][z];\n                                    maxSum = Math.max(maxSum, sum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n}\n",
    "submit_ts": "1723906953",
    "subm_id": "1359081397"
}