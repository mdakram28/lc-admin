{
    "username": "chaitanyaarora30",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int count = 0;\n        int windowValid = 0;\n\n        \n        vector<int> extended(colors.begin(), colors.end());\n        extended.insert(extended.end(), colors.begin(), colors.end());\n\n        \n        for (int i = 0; i < k - 1; ++i) {\n            if (extended[i] != extended[i + 1]) {\n                windowValid++;\n            }\n        }\n\n        \n        if (windowValid == k - 1) {\n            count++;\n        }\n\n        \n        for (int i = 1; i < n; ++i) {\n            \n            if (extended[i - 1] != extended[i]) {\n                windowValid--;\n            }\n            if (extended[i + k - 2] != extended[i + k - 1]) {\n                windowValid++;\n            }\n\n            \n            if (windowValid == k-1) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720277559",
    "subm_id": "1311669424"
}