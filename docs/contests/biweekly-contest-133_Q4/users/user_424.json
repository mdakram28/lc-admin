{
    "username": "Daniel_Wu",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, reqs: List[List[int]]) -> int:\n        MOD = 1_000_000_007\n        inv = 400\n        \n        r = {req[0] + 1: req[1] for req in reqs}\n        \n        pc = [[0] * (inv + 1) for i in range(n + 1)]\n        pc[0][0] = 1\n        \n        for i in range(1, n + 1):\n            for inv in range(inv + 1):\n                for pos in range(i):\n                    prev_inv = inv - pos\n                    if prev_inv >= 0:\n                        pc[i][inv] = (pc[i][inv] + pc[i - 1][prev_inv]) % MOD\n            \n            if i in r:\n                target_inv = r[i]\n                for inv in range(inv + 1):\n                    if inv != target_inv:\n                        pc[i][inv] = 0\n        \n        res = sum(pc[n]) % MOD\n        return res\n\n\n\n\n",
    "submit_ts": "1719070455",
    "subm_id": "1296823466"
}