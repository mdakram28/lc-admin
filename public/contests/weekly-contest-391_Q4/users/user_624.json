{
    "username": "A_S_",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<long long> V, V1;\n        long long n = points.size();\n        for (int i = 0; i < n; i++) {\n            V.insert(points[i][0] + points[i][1]);\n            V1.insert(points[i][0] - points[i][1]);\n        }\n        \n        long long mini = INT_MAX;\n        for(long long i = 0 ; i < n ; i++){\n            long long val = points[i][0] + points[i][1];\n            long long val2 = points[i][0] - points[i][1];\n            V.erase(V.find(val));\n            V1.erase(V1.find(val2));\n            long long jj = max(*(--V.end()) - *V.begin(), *(--V1.end()) - *V1.begin());\n            V.insert(val);\n            V1.insert(val2);\n            mini = min(mini, jj);\n        }\n        return mini;\n    }\n};"
}