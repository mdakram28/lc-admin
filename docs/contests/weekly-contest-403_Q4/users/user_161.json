{
    "username": "summerdaway",
    "submission": "import numpy as np\nclass Solution:    \n\n    def csize(self, x1, x2, y1, y2):\n        return (x2-x1)*(y2-y1)\n        \n    def _find2(self, a):\n        # print(a[0])\n        n = len(a)\n        m = len(a[0])\n        b = []\n        x1, x2, y1, y2 = n, 0, m, 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j]:\n                    x1 = min(x1, i)\n                    x2 = max(x2, i+1)\n                    y1 = min(y1, j)\n                    y2 = max(y2, j+1)\n            b.append((x1, x2, y1, y2))\n        xx1, xx2, yy1, yy2 = n, 0, m, 0\n        for i in range(n-1, 0, -1):\n            for j in range(m):\n                if a[i][j]:\n                    xx1 = min(xx1, i)\n                    xx2 = max(xx2, i+1)\n                    yy1 = min(yy1, j)\n                    yy2 = max(yy2, j+1)\n            A = b[i-1]\n            B = (xx1, xx2, yy1, yy2)\n            s1 = self.csize(*A)\n            s2 = self.csize(*B)\n            if A[1] > A[0] and A[3] > A[2] and B[1] > B[0]  and B[3] > B[2]:\n                yield(A, B, s1, s2)\n\n    def find2(self, a):\n        for x in self._find2(a):\n            yield x\n        for x in self._find2(a.T):\n            A, B, s1, s2 = x\n            yield (A[2], A[3], A[0], A[1]), (B[2], B[3], B[0], B[1]), s1, s2\n\n\n    def minimumSum(self, a: List[List[int]]) -> int:\n        a = np.array(a)\n        # a = np.random.random((30, 30))\n        # a = a > 0.99\n        # a = np.array(a, dtype='int')\n        # print(a)\n        def calc(p):\n            A, B, s1, s2 = p\n            ret = s1+s2\n            # print(A, B, s1, s2)\n            for _a, _b, r1, r2 in self.find2(a[A[0]:A[1], A[2]:A[3]]):\n                # print(A, B, s1, s2, _a, _b, r1, r2)\n                ret = min(ret, r1+r2+s2)\n            \n            for _a, _b, r1, r2 in self.find2(a[B[0]:B[1], B[2]:B[3]]):\n                # print(A, B, s1, s2, _a, _b, r1, r2)\n                ret = min(ret, r1+r2+s1)\n            return ret\n        \n        n = len(a)\n        m = len(a[0])\n        ret = n*m\n        for p in self.find2(a):\n            r = calc(p)\n            ret = min(ret, r)\n\n        return ret",
    "submit_ts": 1719112880.0
}