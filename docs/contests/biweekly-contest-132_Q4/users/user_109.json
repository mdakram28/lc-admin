{
    "username": "Wibo",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        auto &a = nums;\n        vector<int> sa = a;\n        sort(sa.begin(), sa.end());\n        auto id = [&](int x) -> int {\n            return lower_bound(sa.begin(), sa.end(), x) - sa.begin();  \n        };\n        int n = nums.size();\n        \n        vector<vector<int>> tree(k+1, vector<int>(4*n, -1));\n        auto build = [&](auto &self, int i, int x, int l, int r, int v) -> void {\n            if (l == r) tree[i][v] = x;\n            else {\n                int mid = (l+r)/2;\n                self(self, i, x, l, mid, v*2);\n                self(self, i, x, mid+1, r, v*2+1);\n                tree[i][v] = x;\n            }\n        };\n        auto query = [&](auto &self, int i, int ql, int qr, int l, int r, int v) -> int {\n            if (r < ql || l > qr) return -1;\n            if (l >= ql && r <= qr) return tree[i][v];\n            int mid = (l+r)/2;\n            return max(self(self, i, ql, qr, l, mid, v*2), self(self, i, ql, qr, mid+1, r, v*2+1));\n        };\n        auto update = [&](auto &self, int i, int p, int x, int l, int r, int v) -> void {\n            if (l == r) tree[i][v] = x;\n            else {\n                int mid = (l+r)/2;\n                if (p <= mid) self(self, i, p, x, l, mid, v*2);\n                else self(self, i, p, x, mid+1, r, v*2+1);\n                tree[i][v] = max(tree[i][v*2], tree[i][v*2+1]);\n            }\n        };\n        \n        for (int i=0; i<=k; i++) build(build, i, (i == 0 ? 0 : -1), 0, n-1, 1);\n        \n        for (int i=0; i<n; i++) {\n            int ii = id(a[i]);\n            \n            for (int j=k; j>=0; j--) {\n                int mx = query(query, j, ii, ii, 0, n-1, 1);\n                if (j > 0) {\n                    if (ii > 0) mx = max(mx, query(query, j-1, 0, ii-1, 0, n-1, 1));\n                    if (ii < n-1) mx = max(mx, query(query, j-1, ii+1, n-1, 0, n-1, 1));\n                }\n                if (mx != -1) update(update, j, ii, mx + 1, 0, n-1, 1);\n            }\n        }\n        \n        int ans = 0;\n        for (int i=0; i<=k; i++) ans = max(ans, tree[i][1]);\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717859172.0
}