{
    "username": "xlx2",
    "submission": "class Trie:\n    def __init__(self):\n        self.children = defaultdict(Trie)\n        self.word = ''\n        self.cost = math.inf\n\n    def insert(self, word: str, cost: int) -> None:\n        t = self\n        for c in word:\n            t = t.children[c]\n        t.word = word\n        t.cost = min(t.cost, cost)\n\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(words)\n        m = len(target)\n        trie = Trie()\n        for w,c in zip(words, costs):\n            trie.insert(w[::-1], c)\n        f = [math.inf] * (m+1)\n        f[0] = 0\n        for j in range(1, m+1):\n            t = trie\n            for i in range(j-1, -1, -1):\n                if target[i] not in t.children:\n                    break\n                t = t.children[target[i]]\n                if t.word:\n                    f[j] = min(f[j], f[i] + t.cost)\n        ans = f[m]\n        return ans if ans < math.inf else -1",
    "submit_ts": "1720321711",
    "subm_id": "1312330255"
}