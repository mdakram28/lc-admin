{
    "username": "sujal25",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeSet<Integer> cities = new TreeSet<>();\n        for (int i = 0; i < n; ++i) {\n            cities.add(i);\n        }\n\n        int[] result = new int[queries.length];\n        int index = 0;\n\n        for (int[] query : queries) {\n            int u = query[0];\n            int v = query[1];\n\n            // Remove intermediate cities\n            Iterator<Integer> it = cities.tailSet(u + 1, true).iterator();\n            while (it.hasNext()) {\n                int city = it.next();\n                if (city >= v) {\n                    break;\n                }\n                it.remove();\n            }\n\n            result[index++] = cities.size() - 1;\n        }\n\n        return result;\n    }\n\n    \n}\n",
    "submit_ts": "1722742019",
    "subm_id": "1343759017"
}