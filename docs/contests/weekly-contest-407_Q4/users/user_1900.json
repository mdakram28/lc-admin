{
    "username": "Mayank_Narang",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        \n        long ans = 0;\n        \n        int i = 0;\n        \n        while (i < nums.length && nums[i]-target[i] == 0)i++;\n            \n        int j = i;\n        int max = Integer.MIN_VALUE;\n        int min = Integer.MAX_VALUE;\n        \n        while (i < nums.length){\n            \n            if(nums[i] - target[i] == 0){\n                i++;\n                continue;\n            }\n            \n            j = i;\n            \n            if (target[i] - nums[i] < 0){\n                \n                while (j < nums.length && target[j] - nums[j] < 0){\n                    max = Math.max(max,target[j]-nums[j]);\n                    j++;\n                    \n                }\n                \n                j--;\n                ans += Math.abs(max);\n                \n                while (j != i-1)\n                    nums[j--] += max;\n                \n                max = Integer.MIN_VALUE;\n                \n            }\n            else if (target[i] - nums[i] > 0){\n                \n                while (j < nums.length && target[j] - nums[j] > 0){\n                    min = Math.min(min,target[j]-nums[j]);\n                    j++;\n                    \n                }\n                \n                j--;\n                ans += Math.abs(min);\n                \n                while (j != i-1)\n                    nums[j--] += min;\n                min = Integer.MAX_VALUE;\n                \n            }\n            \n            \n        }\n        \n        return ans;\n        \n    }\n}",
    "submit_ts": "1721533145",
    "subm_id": "1328002319"
}