{
    "username": "lixiangfan97",
    "submission": "class Solution {\npublic:\n    bool contains(const vector<int>& v, int x) {\n        for (int num: v) {\n            if (num == x)\n                return true;\n        }\n        return false;\n    }\n    void recursive(const vector<vector<pair<int, int>>>& rows, int i, vector<int>& cols, long long sum, long long& mx) {\n        if (i >= (int)rows.size()) {\n            return;\n        }\n        if (sum + (long long)(3 - (int)cols.size()) * (long long)rows[i][0].first <= mx) {\n            return;\n        }\n        for (const auto& p: rows[i]) {\n            int c = p.second;\n            int val = p.first;\n            if (!contains(cols, c)) {\n                if (cols.size() == 2)\n                    mx = max(mx, sum + (long long)val);\n                else {\n                    cols.push_back(c);\n                    for (int j = i +1; j < (int)rows.size(); ++j)\n                        recursive(rows, j, cols, sum + val, mx);\n                    cols.pop_back();\n                }\n            }\n        }\n    }\n    long long calc(const vector<vector<pair<int, int>>>& rows) {\n        long long mx = (long long)(-1e18);\n        vector<int> cols;\n        for (int i = 0; i <= (int)rows.size() - 3; ++i)\n            recursive(rows, 0, cols, 0, mx);\n        return mx;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        const int m = (int)board.size();\n        const int n = (int)board[0].size();\n        vector<vector<pair<int, int>> > rows(m);\n        for (int i = 0; i < m; ++i) {\n            rows[i].resize(n);\n            for (int j = 0; j < n; ++j) {\n                rows[i][j] = {board[i][j], j};\n            }\n            sort(rows[i].begin(), rows[i].end(), [](const pair<int, int>& x, const pair<int, int>& y) {\n                return x.first > y.first;\n            });\n            rows[i].resize(3);\n        }\n        sort(rows.begin(), rows.end(), [](const vector<pair<int, int>>& x, const vector<pair<int, int>>& y) {\n            return x[0].first > y[0].first;\n        });\n        return calc(rows);\n    }\n};",
    "submit_ts": "1723908291",
    "subm_id": "1359146378"
}