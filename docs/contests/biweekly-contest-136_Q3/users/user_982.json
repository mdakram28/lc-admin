{
    "username": "qeesun",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                tmp = (\n                    grid[i][j]\n                    + grid[i][m - 1 - j]\n                    + grid[n - 1 - i][j]\n                    + grid[n - 1 - i][m - 1 - j]\n                )\n                ans += min(4 - tmp, tmp)\n        tmp1, tmp_change = 0, 0\n        if n % 2 == 1:\n            i = n // 2\n            for j in range(m // 2):\n                if grid[i][j] != grid[i][m - j - 1]:\n                    tmp_change += 1\n                elif grid[i][j] == grid[i][m - j - 1] == 1:\n                    tmp1 += 2\n        if m % 2 == 1:\n            j = m // 2\n            for i in range(n // 2):\n                if grid[i][j] != grid[n - i - 1][j]:\n                    tmp_change += 1\n                elif grid[i][j] == grid[n - i - 1][j] == 1:\n                    tmp1 += 2\n        if tmp1 % 4 != 0 and tmp_change == 0:\n            ans += 2\n        else:\n            ans += tmp_change\n\n        \n        if n % 2 == 1 and m % 2 == 1:\n            if grid[n // 2][m // 2] == 1:\n                ans += 1\n        return ans\n\n",
    "submit_ts": "1722698528",
    "subm_id": "552271299"
}