{
    "username": "an-zhu-yi",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort()\n        horizontalCut = list(reversed(horizontalCut)) \n        verticalCut.sort()\n        verticalCut = list(reversed(verticalCut))\n        # print(horizontalCut,verticalCut)\n        hidx = vidx = 0\n        ans = 0\n        cnth = 1\n        cntv = 1\n        while hidx < m-1 and vidx < n-1:\n            tmph = horizontalCut[hidx]\n            tmpv = verticalCut[vidx]\n            if tmph < tmpv:\n                ans += cnth * tmpv\n                cntv += 1\n                vidx += 1\n            else:\n                ans  += cntv * tmph\n                cnth += 1\n                hidx += 1\n        if hidx == m-1:\n            ans += sum(verticalCut[vidx:])*cnth\n        else: ans += sum(horizontalCut[hidx:])*cntv\n        return ans \n                \n",
    "submit_ts": "1720925402",
    "subm_id": "546439155"
}