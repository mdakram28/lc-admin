{
    "username": "rishab_28",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<int> mp;\n        map<int, int> mp1;\n        vector<int> ans;\n        for(int i = 0; i<n-1; i++) {\n            mp.insert(i);\n            mp1[i] = i+1;\n        }\n        int dist = n-1;\n        for(int i = 0; i<queries.size(); i++) {\n            int l = queries[i][0], r = queries[i][1];\n            auto it = mp.lower_bound(l);\n            if(it==mp.end() or mp1[*it]>=r) {\n                ans.push_back(dist);\n            }\n            else {\n                // dist -= (*it - l);\n                // dist -= (r - mp1[*it]);\n                // ans.push_back(dist);\n                // mp1.erase(*it);\n                // mp.erase(it);\n                // mp.insert(l);\n                // mp1[l] = r;\n                int count = 0;\n                while(it!=mp.end() and mp1[*it]<=r) {\n                    dist += mp1[*it] - *it;\n                    auto itTemp = mp.lower_bound(mp1[*it]);\n                    mp1.erase(*it);\n                    mp.erase(it);\n                    it = itTemp;\n                    count++;\n                }\n                dist -= (r-l);\n                dist -= (count-1);\n                ans.push_back(dist);\n                mp.insert(l);\n                mp1[l] = r;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743194",
    "subm_id": "1343786540"
}