{
    "username": "NoobieCoder03011997",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        List<Integer> ans = new ArrayList<>();\n        TreeSet<Integer> sortedSet = new TreeSet<>();\n        \n        for (int i = 0; i < n; ++i) {\n            sortedSet.add(i);\n        }\n        \n        for (int[] query : queries) {\n            int u = query[0];\n            int v = query[1];\n            \n            SortedSet<Integer> toErase = sortedSet.subSet(u + 1, v);\n            List<Integer> toRemove = new ArrayList<>(toErase);\n            \n            sortedSet.removeAll(toRemove);\n            \n            ans.add(sortedSet.size() - 1);\n        }\n\n        return ans.stream().mapToInt(i -> i).toArray();\n    }\n}",
    "submit_ts": "1722743807",
    "subm_id": "1343800087"
}