{
    "username": "abhey8623",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        // number of ones will always be divisible by 4 unless we are putting them in the\n        // center row or center column or both at the same time\n        // greedy should work\n        int ans = 0,curr;\n        int i,j,m=grid.size(),n=grid[0].size();\n        for(i=0;i<m/2;++i)\n        {\n            for(j=0;j<n/2;++j)\n            {\n                curr = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                ans = ans + min(curr, 4-curr);\n            }\n        }\n        curr=0;\n        int toadd=0;\n        if(m%2)\n        {\n            for(j=0;j<n/2;++j)\n            {\n                curr = curr + grid[m/2][j] + grid[m/2][n-1-j];\n                toadd += min(grid[m/2][j] + grid[m/2][n-1-j], 2-(grid[m/2][j] + grid[m/2][n-1-j]));\n            }\n        }\n        if(n%2)\n        {\n            for(i=0;i<m/2;++i)\n            {\n                curr = curr + grid[i][n/2] + grid[m-1-i][n/2];\n                toadd += min(grid[i][n/2] + grid[m-1-i][n/2], 2-(grid[i][n/2] + grid[m-1-i][n/2]));\n            }\n        }\n        if(m%2 && n%2)\n        {\n            ans += grid[m/2][n/2];\n        }\n        curr = curr%4;\n        curr = min(curr, 4-curr);\n        cout << curr << \" \" << toadd << \" \" << ans << endl;\n        ans += max(curr, toadd);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722698761",
    "subm_id": "1343190932"
}