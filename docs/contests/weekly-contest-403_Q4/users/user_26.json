{
    "username": "CoderQ1234",
    "submission": "class Solution {\npublic:\n    int s1(vector<vector<int>> &grid) {\n        int a = 1e9;\n        int b = 1e9;\n        int c = 0;\n        int d = 0;\n        for(int i = 0; i < grid.size(); i++) {\n            for(int j = 0; j < grid[0].size(); j++) {\n                if(grid[i][j]) {\n                    a = min(a, i);\n                    b = min(b, j);\n                    c = max(c, i);\n                    d = max(d, j);\n                }\n            }\n        }\n        if(a > c) return 1;\n        return (c - a + 1) * (d - b + 1);\n    }\n    \n    int s2(vector<vector<int>> &grid) {\n        int res = 1e9;\n        for(int cut = 0; cut + 1 < grid.size(); cut++) {\n            vector<vector<int>> a, b;\n            for(int i = 0; i < grid.size(); i++) {\n                if(i <= cut) a.push_back(grid[i]);\n                else b.push_back(grid[i]);\n            }\n            res = min(res, s1(a) + s1(b));\n        }\n        \n        for(int cut = 0; cut + 1 < grid[0].size(); cut++) {\n            vector<vector<int>> a, b;\n            for(int i = 0; i < grid.size(); i++) {\n                a.push_back({});\n                b.push_back({});\n                for(int j = 0; j < grid[0].size(); j++) {\n                    if(j <= cut) a[i].push_back(grid[i][j]);\n                    else b[i].push_back(grid[i][j]);\n                }\n            }\n            res = min(res, s1(a) + s1(b));\n        }\n        return res;\n    }\n    \n    int s3(vector<vector<int>> &grid) {\n        int res = 1e9;\n        for(int cut = 0; cut + 1 < grid.size(); cut++) {\n            vector<vector<int>> a, b;\n            for(int i = 0; i < grid.size(); i++) {\n                if(i <= cut) a.push_back(grid[i]);\n                else b.push_back(grid[i]);\n            }\n            res = min({res, s1(a) + s2(b), s2(a) + s1(b)});\n        }\n        \n        for(int cut = 0; cut + 1 < grid[0].size(); cut++) {\n            vector<vector<int>> a, b;\n            for(int i = 0; i < grid.size(); i++) {\n                a.push_back({});\n                b.push_back({});\n                for(int j = 0; j < grid[0].size(); j++) {\n                    if(j <= cut) a[i].push_back(grid[i][j]);\n                    else b[i].push_back(grid[i][j]);\n                }\n            }\n            res = min({res, s1(a) + s2(b), s2(a) + s1(b)});\n        }\n        return res;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        return s3(grid);\n    }\n};",
    "submit_ts": 1719111531.0
}