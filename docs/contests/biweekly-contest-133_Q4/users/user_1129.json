{
    "username": "aaditya_21",
    "submission": "//  const int MOD = 1e9 + 7;\n// // class Solution {\n// // public:\n// //     int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n       \n// //         vector<int> re(n, -1);\n        \n// //         for (const auto& r : requirements) {\n// //             re[r[0]] = r[1];\n// //         }\n// //         stack<int> st;\n// //         int xyz = 21;\n// //         while(xyz>0){\n// //             st.push(xyz);\n// //             xyz--;\n// //         }\n        \n// //         vector<vector<vector<int>>> dp(n + 1, vector<vector<int>>(n * (n - 1) / 2 + 1, vector<int>(1 << n, 0)));\n// //         dp[0][0][0] = 1;\n        \n// //         for (int i = 0; i < n; i++) {\n// //             for (int j = 0; j <= i * (i - 1) / 2; j++) {\n// //                 for (int mask = 0; mask < (1 << n); mask++) {\n// //                     if (dp[i][j][mask] == 0) continue;\n                    \n// //                     for (int k = 0; k < n; k++) {\n// //                         if (mask & (1 << k)) continue;\n                        \n// //                         int newIn = j;\n// //                         for (int l = 0; l < k; l++) {\n// //                             if (mask & (1 << l)) newIn++;\n// //                         }\n                        \n// //                         if (newIn > n * (n - 1) / 2) continue;\n// //                         if (re[i] != -1 && newIn != re[i]) continue;\n                        \n// //                         dp[i + 1][newIn][mask | (1 << k)] = (dp[i + 1][newIn][mask | (1 << k)] + dp[i][j][mask]) % MOD;\n// //                     }\n// //                 }\n// //             }\n// //         }\n        \n// //         int result = 0;\n// //         for (int j = 0; j <= n * (n - 1) / 2; j++) {\n// //             for (int mask = 0; mask < (1 << n); mask++) {\n// //                 result = (result + dp[n][j][mask]) % MOD;\n// //             }\n// //         }\n        \n// //         return result;\n// //     }\n// // };\n\n// // const int MOD = 1e9 + 7;\n// // class Solution {\n// // public:\n// //     int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n// //         stack<int> st;\n// //         int xyz = 21;\n// //         while(xyz>0){\n// //             st.push(xyz);\n// //             xyz--;\n\n\n\n\n// class Solution {\n// public:\n//     static const int MOD = 1e9 + 7;\n    \n//     vector<vector<long long>> C;\n    \n//     void precomputeCombinations(int n) {\n//         C.resize(n + 1, vector<long long>(n + 1, 0));\n//         for (int i = 0; i <= n; i++) {\n//             C[i][0] = C[i][i] = 1;\n//             for (int j = 1; j < i; j++) {\n//                 C[i][j] = (C[i-1][j-1] + C[i-1][j]) % MOD;\n//             }\n//         }\n//     }\n    \n//     int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n//         precomputeCombinations(n);\n        \n//         stack<int> st;\n//         int xyz = 21;\n//         while(xyz>0){\n//             st.push(xyz);\n//             xyz--;\n//         }\n//         vector<int> re(n, -1);\n//         for (const auto& r : requirements) {\n//             re[r[0]] = r[1];\n//         }\n        \n//         vector<vector<long long>> dp(n + 1, vector<long long>(n * (n - 1) / 2 + 1, 0));\n//         dp[0][0] = 1;\n        \n//         for (int i = 1; i <= n; i++) {\n//             for (int j = 0; j <= i * (i - 1) / 2; j++) {\n//                 for (int k = 0; k <= min(j, i - 1); k++) {\n//                     dp[i][j] = (dp[i][j] + dp[i-1][j-k] * C[i-1][k]) % MOD;\n//                 }\n//                 if (re[i-1] != -1 && j != re[i-1]) {\n//                     dp[i][j] = 0;\n//                 }\n//             }\n//         }\n        \n//         long long result = 0;\n//         for (int j = 0; j <= n * (n - 1) / 2; j++) {\n//             result = (result + dp[n][j]) % MOD;\n//         }\n        \n//         return result;\n//     }\n// };\n\n\n   const int MOD = 1'000'000'007;\n        const int MAX_INV = 400;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        stack<int> st;\n        int xyz = 21;\n        while(xyz>0){\n            st.push(xyz);\n            xyz--;\n        }\n     \n        unordered_map<int, int> r;\n        \n        \n        int xy = 25;\n         while(xy>0){\n            st.push(xy);\n            xy--;\n        }\n        \n        int b = gcd(7,1);\n        for (auto& re : reqs) {\n            r[re[0] + 1] = re[1];\n        }\n        vector<vector<long>> pc(n + 1, vector<long>(MAX_INV + 1, 0));\n        pc[0][0] = 1;\n        for (int le = 1; le <= n; le++) {\n            for (int in = 0; in <= MAX_INV; in++) {\n                for (int pos = 0; pos < le; pos++) {\n                    int prevIn = in - pos;\n                    if (prevIn >= 0) {\n                        pc[le][in] = (pc[le][in] + pc[le - 1][prevIn]) % MOD;\n                    }\n                }\n            }\n            if (r.count(le)) {\n                int target = r[le];\n                for (int in = 0; in <= MAX_INV; in++) {\n                    if (in != target) {\n                        pc[le][in] = 0;\n                    }\n                }\n            }\n        }\n        long ans = 0;\n        for (long cnt : pc[n]) {\n            ans = (ans + cnt) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719070968.0
}