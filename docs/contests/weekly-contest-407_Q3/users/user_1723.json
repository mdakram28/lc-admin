{
    "username": "DIGVIJAY2003",
    "submission": "class Solution:\n    def maxOperations(self, s: str) -> int:\n        bits = self.extract_bits(s)\n        return self.calculate_operations(bits)\n\n    def extract_bits(self, s: str) -> list:\n        bits = []\n        has_one = False\n\n        for char in s:\n            if self.is_one(char):\n                bits.append(1)\n                has_one = True\n            elif self.is_zero_after_one(char, has_one):\n                bits.append(0)\n                has_one = False\n\n        return bits\n\n    def is_one(self, char: str) -> bool:\n        return char == '1'\n\n    def is_zero_after_one(self, char: str, has_one: bool) -> bool:\n        return char == '0' and has_one\n\n    def calculate_operations(self, bits: list) -> int:\n        ans = 0\n        p = 0\n\n        for bit in bits:\n            if self.is_one_bit(bit):\n                p += 1\n            else:\n                ans += p\n\n        return ans\n\n    def is_one_bit(self, bit: int) -> bool:\n        return bit == 1",
    "submit_ts": "1721530735",
    "subm_id": "1327942337"
}