{
    "username": "heisenberg_003",
    "submission": "class Solution {\npublic:\n    \n    vector<long long> tree;\n    \n    void update(int v, int tl, int tr, int l, int r, int add){\n        if(l>r) return;\n        if(l==tl && r==tr) tree[v]+=add;\n        else{\n            int m=(tl+tr)/2;\n            update(2*v+1,tl,m,l,min(r,m),add);\n            update(2*v+2,m+1,tr,max(l,m+1),r,add);\n        }\n    }\n    \n    long long query(int v, int tl, int tr, int pos){\n        if(tl==tr) return tree[v];\n        int m=(tl+tr)/2;\n        if(pos<=m) return tree[v]+query(2*v+1,tl,m,pos);\n        else return tree[v]+query(2*v+2,m+1,tr,pos);\n    }\n    \n    long long minimumOperations(vector<int>& v1, vector<int>& v2) {\n        int n=(int)v1.size();\n        vector<long long> diff(n);\n        for(int i=0;i<n;i++) diff[i]=v1[i]-v2[i];\n        vector<long long> v;\n        vector<vector<long long>> v3;\n        long long ans=0;\n        v.push_back(diff[0]);\n        for(int i=1;i<n;i++){\n            if((v[0]<0 && diff[i]<0) || (v[0]>=0 && diff[i]>=0)) v.push_back(diff[i]);\n            else{\n                v3.push_back(v);\n                v.clear();\n                v.push_back(diff[i]);\n            }\n        }\n        v3.push_back(v);\n        for(int i=0;i<(int)v3.size();i++){\n            for(int j=0;j<(int)v3[i].size();j++) v3[i][j]=abs(v3[i][j]);\n        }\n        for(int i=0;i<(int)v3.size();i++){\n            vector<pair<long long,int>> v4;\n            int m=(int)v3[i].size();\n            tree.clear();\n            tree.resize(4*m);\n            for(int j=0;j<(int)v3[i].size();j++) v4.push_back({v3[i][j],j});\n            sort(v4.begin(),v4.end());\n            set<long long> s1,s2;\n            s1.insert((int)v3[i].size());\n            s2.insert(1);\n            for(int j=0;j<(int)v3[i].size();j++){\n                long long sum=query(0,0,m-1,v4[j].second);\n                long long val=v4[j].first-sum;\n                if(val<0) val=0;\n                long long r=(*s1.lower_bound(v4[j].second));\n                long long l=-(*s2.lower_bound(-v4[j].second));\n                ans+=val;\n                update(0,0,m-1,l+1,r-1,val);\n                s1.insert(v4[j].second);\n                s2.insert(-v4[j].second);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532090",
    "subm_id": "1327977381"
}