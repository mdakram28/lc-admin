{
    "username": "AmanS09",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n#include <limits>\n\nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> diffMap;\n        std::vector<int> maxVals;\n \n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int left = nums[i];\n            int right = nums[nums.size() - i - 1];\n            int diff = std::abs(left - right);\n\n            int maxVal = std::max({left, right, k - left, k - right});\n\n            diffMap[diff].push_back(maxVal);\n            maxVals.push_back(maxVal);\n        }\n\n        int minChanges = nums.size();  \n        std::sort(maxVals.begin(), maxVals.end());\n\n        for (const auto& [diff, values] : diffMap) {\n            int changes = std::lower_bound(maxVals.begin(), maxVals.end(), diff) - maxVals.begin();\n            changes = changes * 2 + (nums.size() / 2 - changes);\n\n            for (const auto& maxVal : values) {\n                if (maxVal < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChanges = std::min(minChanges, changes);\n        }\n\n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721489973",
    "subm_id": "1327469286"
}