{
    "username": "BatraRahul",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int numRows = grid.size();\n        int numCols = grid[0].size();\n        int flipCount = 0;\n\n        int c=0;\n\n        // for(int i=0;i<1e6;i++) c++;\n\n        // Check the center cell if both dimensions are odd\n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (grid[numRows / 2][numCols / 2] == 1) {\n                flipCount += 1;\n            }\n        }\n\n        vector<int> shiftCounts(3, 0);\n\n        // Count flips needed for rows if the number of rows is odd\n        if (numRows % 2 == 1) {\n            int left = 0, right = numCols - 1;\n            while (left < right) {\n                int sum = grid[numRows / 2][left] + grid[numRows / 2][right];\n                shiftCounts[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        // Count flips needed for columns if the number of columns is odd\n        if (numCols % 2 == 1) {\n            int top = 0, bottom = numRows - 1;\n            while (top < bottom) {\n                int sum = grid[top][numCols / 2] + grid[bottom][numCols / 2];\n                shiftCounts[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        // Update the flip count based on shift counts\n        if (shiftCounts[2] % 2 == 1) {\n            if (shiftCounts[1] > 0) {\n                flipCount += shiftCounts[1];\n            } else {\n                flipCount += 2;\n            }\n        } else {\n            flipCount += shiftCounts[1];\n        }\n\n        // Handle the corners of each 2x2 block\n        for (int row = 0; row < numRows / 2; ++row) {\n            for (int col = 0; col < numCols / 2; ++col) {\n                int topLeft = grid[row][col];\n                int bottomLeft = grid[numRows - 1 - row][col];\n                int topRight = grid[row][numCols - 1 - col];\n                int bottomRight = grid[numRows - 1 - row][numCols - 1 - col];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    flipCount += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return flipCount;\n    }\n};\n",
    "submit_ts": "1722700478",
    "subm_id": "1343243140"
}