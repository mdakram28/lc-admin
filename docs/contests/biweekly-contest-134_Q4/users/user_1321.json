{
    "username": "shreejayj",
    "submission": "typedef long long ll;\nclass Solution {\n    ll subarrayANDGreaterThanK(vector<int>& nums, int k)\n    {\n        ll count=0;\n        int left=0,curr=0;\n        vector<int>bits(32,0);\n        curr=~(curr);\n        for(int right=0;right<nums.size();right++)\n        {\n            curr&=nums[right];\n            for(int i=0;i<32;i++)\n            {\n                if(nums[right]&(1<<i))\n                {\n                    bits[i]++;\n                }\n            }\n            while(left<=right&&curr<=k)\n            {\n                //Operation to restore AND;\n                for(int i=0;i<32;i++)\n                {\n                    if(nums[left]&(1<<i))\n                    {\n                        bits[i]--;\n                        // if(bits[i]==0)\n                        // {\n                        //     curr=(curr&~(1<<(i)));\n                        // }\n                    }\n                    else if(bits[i]==(right-left))\n                    {\n                        curr=(curr|(1<<i));\n                    }\n                }\n                left++;\n            }\n            if(left>right)\n            {\n                curr=-1;\n            }\n            count+=(right-left+1);\n        }\n        return count;\n    }\n    ll subarrayANDLesserThanK(vector<int>& nums, int k)\n    {\n        ll count=0;\n        int left=0,curr=0,n=nums.size();\n        vector<int>bits(32,0);\n        curr=~(curr);\n        for(int right=0;right<n;right++)\n        {\n            curr&=nums[right];\n            for(int i=0;i<32;i++)\n            {\n                if(nums[right]&(1<<i))\n                {\n                    bits[i]++;\n                }\n            }\n            while(left<=right&&curr<k)\n            {\n                // cout<<curr<<\" \"<<right<<'\\n';\n                //Operation to restore AND;\n                for(int i=0;i<32;i++)\n                {\n                    if(nums[left]&(1<<i))\n                    {\n                        bits[i]--;\n                    }\n                    else if(bits[i]==(right-left))\n                    {\n                        curr=(curr|(1<<i));\n                    }\n                }\n                count+=(n-right);\n                left++;\n            }\n            if(left>right)\n            {\n                curr=-1;\n            }\n        }\n        return count;\n    }\npublic:\n    ll countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        ll totalSubarrays=((ll)n*(ll)(n+1))/2;\n        // cout<<totalSubarrays<<\"-\"<<subarrayANDGreaterThanK(nums,k)<<\"-\"<<subarrayANDLesserThanK(nums,k);\n        return totalSubarrays-subarrayANDGreaterThanK(nums,k)-subarrayANDLesserThanK(nums,k);\n    }\n};",
    "submit_ts": "1720281099",
    "subm_id": "1311813096"
}