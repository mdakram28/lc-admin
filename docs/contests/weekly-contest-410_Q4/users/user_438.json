{
    "username": "Conrad_123",
    "submission": "class Solution {\npublic:\nlong long Count(std::vector<int>& nums, int idx, int arr_1_min, int arr_2_max, std::vector<std::vector<int>>& cache){\n        \n        if(idx >= nums.size()){\n            return 1;\n        }\n        \n        int mod = 1e9 + 7;\n        long long result = 0;\n        \n        if(cache[idx][arr_1_min] != -1){\n            return cache[idx][arr_1_min];\n        }\n        \n        for(int i = max(arr_1_min, nums[idx] - arr_2_max); i <= nums[idx]; i++){\n            \n            if(nums[idx] - i > arr_2_max) continue;\n            \n            long long current = (Count(nums, idx+1, i, nums[idx] - i, cache))%mod;\n            \n            result += current;\n            result %= mod;\n        }\n        \n        return cache[idx][arr_1_min] = result;\n    }\n    \n    int countOfPairs(std::vector<int>& nums) {\n        \n        std::vector<std::vector<long long>> cache(nums.size(), std::vector<long long>(2001, 0));\n        int n = nums.size(); \n        int mod = 1e9+7;\n        \n        for(int start_point = 0; start_point <= nums[n-1]; start_point++){\n            cache[n-1][start_point] = nums[n-1]+1-start_point;\n            //std::cout<<cache[n-1][start_point]<<\", \";\n        }\n        \n        \n        for(int i = n-2; i >= 0; i--){\n            \n            for(int j = 0; j <= nums[i]; j++){\n                int upper = nums[i]-j;\n                int next_start_point = max(j, nums[i+1] - upper);\n                cache[i][j] = cache[i+1][next_start_point];\n            }\n            \n            for(int j = nums[i]-1; j >= 0; j--){\n                cache[i][j] += cache[i][j+1];\n                cache[i][j]%=mod;\n            }\n            \n            \n            \n        }\n        \n        return cache[0][0];\n    }\n};",
    "submit_ts": "1723347567",
    "subm_id": "1351601256"
}