{
    "username": "Sourav jha",
    "submission": "int dp[10][100010];\nint md, N, nm;\nbool isEven = false;\nint pow1[100010];\nclass Solution {\npublic:\n    void power(int p) {\n      int res = 1;\n      long long x = 10;\n      pow1[0] = 1;\n      for(int i =1; i < 100010;++i) {\n        pow1[i] = (pow1[i - 1] * x) % p;\n      }\n    }\n    \n    int solve(int i, int msum) {\n   //  cout << i << \" \" <<msum << \"\\n\";   \n     if(i == N) return msum == 0 ? 0 : -2;\n     if(dp[msum][i] != -1) return dp[msum][i];\n      \n     int end = i == 0? 1 : 0; \n     int pos = -2;\n     for(int j = 9; j >= end; --j){\n        int m = (j * pow1[i]) % md;\n        if (isEven || i != N - 1) m = (m + (j * pow1[nm-i-1]) % md) % md;\n    //    cout << \"chosen \" << j << \"\\n\";\n        int ans = solve(i + 1, (m + msum) % md);\n        if(ans != -2) {\n           pos = j;\n           break;     \n        }\n     }\n\n     return dp[msum][i] = pos;\n    }\n\n    string largestPalindrome(int n, int k) {\n      memset(dp, -1, sizeof(dp));\n      md = k;\n      N = (n + 1)/2;\n      nm = n;\n     isEven = n %2 ==0 ;\n     power(k);\n     solve(0, 0);\n      \n     string ans(n, '0');\n      \n      int i = 0, msum = 0;\n      while(i < N) {\n        int j = dp[msum][i];\n        ans[i] = dp[msum][i] + '0';\n        if(isEven || i != N-1) ans[n - i - 1] = ans[i];\n\n        int m = j * pow1[ i] % md;\n        if (isEven || i != N - 1) m = (m + (j * pow1[n-i-1]) % md) % md;\n        msum = (m + msum) % md; \n        i++;\n      }\n\n      return ans;\n    }\n};",
    "submit_ts": "1723951941",
    "subm_id": "1359783941"
}