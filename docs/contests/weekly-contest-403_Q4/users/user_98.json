{
    "username": "vigorous-darvvinru2",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n\n        @cache\n        def dfs(up, down, left, right, block):\n            if block == 1:\n                l = u = math.inf\n                r = d = -math.inf\n                for i in range(up, down):\n                    for j in range(left, right):\n                        if grid[i][j] == 1:\n                            l = min(j, l)\n                            r = max(j, r)\n                            u = min(i, u)\n                            d = max(i, d)\n                # print(up, down, left, right, (r - l + 1) * (d - u + 1))\n                return (r - l + 1) * (d - u + 1)\n            res = math.inf\n            for i in range(up + 1, down):\n                res = min(res, dfs(up, i, left, right, 1) + dfs(i, down, left, right, block - 1), dfs(up, i, left, right, block - 1) + dfs(i, down, left, right, 1))\n            for j in range(left + 1, right):\n                res = min(res, dfs(up, down, left, j, 1) + dfs(up, down, j, right, block - 1), dfs(up, down, left, j, block - 1) + dfs(up, down, j, right, 1))\n            return res\n        \n        return dfs(0, n, 0, m, 3)",
    "submit_ts": "1719112264",
    "subm_id": "541391526"
}