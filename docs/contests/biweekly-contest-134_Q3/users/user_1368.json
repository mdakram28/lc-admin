{
    "username": "mooncat2k4",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(const vector<int>& arr, int k) {\n        int num_groups = 0;\n        int start_index = 0;\n        int end_index = 1;\n        int num_found = 0;\n        \n        while (end_index < arr.size() + k && start_index < arr.size()) {\n            int current_end = end_index % arr.size();\n            \n            while (arr[current_end] != arr[(current_end - 1 + arr.size()) % arr.size()] && (end_index < (arr.size() + k - 1))) {\n                end_index++;\n                current_end = end_index % arr.size();\n            }\n            \n            num_found += max(end_index - start_index - k + 1, 0);\n            start_index = end_index;\n            end_index = start_index + 1;\n        }\n        \n        return num_found;\n    }\n};",
    "submit_ts": "1720280443",
    "subm_id": "1311789627"
}