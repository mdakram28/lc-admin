{
    "username": "sobols",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> qh, qv;\n        for (int x : horizontalCut) {\n            qh.push(x);\n        }\n        for (int x : verticalCut) {\n            qv.push(x);\n        }\n        \n        int hCuts = 0, vCuts = 0;\n        long long ans = 0;\n        \n        while (!(qh.empty() && qv.empty())) {\n            if (qv.empty()) {\n                ans += qh.top() * (vCuts + 1);\n                qh.pop();\n                hCuts++;\n            } else if (qh.empty()) {\n                ans += qv.top() * (hCuts + 1);\n                qv.pop();\n                vCuts++;\n            } else {\n                if (qh.top() > qv.top()) {\n                    ans += qh.top() * (vCuts + 1);\n                    qh.pop();\n                    hCuts++;\n                } else {\n                    ans += qv.top() * (hCuts + 1);\n                    qv.pop();\n                    vCuts++;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926256",
    "subm_id": "1320280686"
}