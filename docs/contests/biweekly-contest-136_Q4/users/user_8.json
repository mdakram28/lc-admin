{
    "username": "stupidRR",
    "submission": "class Solution {\n    void dfs(int node,int parent,vector<vector<int>>&g,vector<int>&temp)\n    {\n        int mx=0;\n        for(auto child : g[node])\n        {\n            if(child==parent)\n                continue;\n            dfs(child,node,g,temp);\n            mx=std::max(mx,temp[child]+2-(child%2));\n        }\n        temp[node]=mx;\n    }\n    void dfs2(int node,int parent,vector<vector<int>>&g,vector<int>&ans,vector<int>&temp,int above)\n    {\n        vector< pair<int,int> > ar;\n        ar.push_back( {above,-1} );\n        for(auto child : g[node])\n        {\n            if(child==parent)\n                continue;\n            ar.push_back( {temp[child]+2-(child%2),child} );\n        }\n        \n        sort(ar.rbegin(),ar.rend());\n        ans[node]=ar[0].first;\n        \n        for(auto child : g[node])\n        {\n            if(child==parent)\n                continue;\n            \n            for(auto &[a,b] : ar)\n            {\n                if(b!=child)\n                {\n                    dfs2(child,node,g,ans,temp,a+(2)-node%2);\n                    break;\n                }\n            }\n        }\n    }\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        vector<vector<int>>g(n);\n        for(auto edge : edges)\n        {\n            int u=edge[0];\n            int v=edge[1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        \n        vector<int> ans(n);\n        vector<int> temp(n);\n        dfs(0,-1,g,temp);\n        \n        dfs2(0,-1,g,ans,temp,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722696922",
    "subm_id": "1343127424"
}