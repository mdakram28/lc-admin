{
    "username": "stacktrace28",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        for(int i = 0; i<k; i++){\n            colors.push_back(colors[i]);\n        }\n        int count = 0;\n        int alternatingCount= 0;\n              for (int i = 0; i < k - 1; i++) {\n            if (colors[i] != colors[i + 1]) {\n                alternatingCount++;\n            }\n        }\n\n        // Slide the window across the array\n        for (int i = 0; i < n; i++) {\n            // Check if the current window is an alternating group\n            if (alternatingCount == k - 1) {\n                count++;\n            }\n\n            // Move the window right by one position\n            // Remove the effect of the old element\n            if (colors[i] != colors[i + 1]) {\n                alternatingCount--;\n            }\n            // Add the effect of the new element\n            if (colors[i + k - 1] != colors[i + k]) {\n                alternatingCount++;\n            }\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720277382",
    "subm_id": "1311661086"
}