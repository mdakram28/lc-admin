{
    "username": "m10chip",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10**9 + 7\n        n = len(nums)\n        memo = {}\n        \n        def dp(i, prev_x, prev_y):\n            if i == n:\n                return 1\n            if (i, prev_x, prev_y) in memo:\n                return memo[(i, prev_x, prev_y)]\n            \n            result = 0\n            start = max(prev_x, 0)\n            end = nums[i]  # arr1[i] cannot be greater than nums[i]\n            for x in range(start, end + 1):\n                y = nums[i] - x  # arr2[i]\n                if y >= 0 and y <= prev_y:\n                    result = (result + dp(i + 1, x, y)) % MOD\n            \n            memo[(i, prev_x, prev_y)] = result\n            return result\n        \n        # Initialize dp with the full range of possible values for the first element\n        total_count = 0\n        for x0 in range(nums[0] + 1):\n            y0 = nums[0] - x0\n            total_count = (total_count + dp(1, x0, y0)) % MOD\n        \n        return total_count\n\n",
    "submit_ts": "1723345769",
    "subm_id": "1351562926"
}