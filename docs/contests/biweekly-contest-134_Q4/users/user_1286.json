{
    "username": "dibendu07",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll                  long long\n#define endl                '\\n'\n#define ff                  first\n#define ss                  second\n#define pb                  push_back\n#define mp                  make_pair\n// fats i/p , o/p\n#define FAST_IO             (ios_base:: sync_with_stdio(false),cin.tie(NULL));\n#define yes cout<<\"YES\\n\"\n#define no cout<<\"NO\\n\"\nconst ll MOD = 998244353;\n// Maths\nll fact(ll n)          { if(n==0) return 1; ll res = 1; for (ll i = 2; i <= n; i++) (res = res%MOD * i%MOD)%MOD; return res; }\nll nPr(ll n, ll r)     { return fact(n) / fact(n - r); }\nll nCr(ll n, ll r)     { return fact(n) / (fact(r) * fact(n - r)); }\nll gcd(ll a, ll b)     { if (b == 0) return a; return gcd(b, a % b); }\nll lcm(ll a, ll b)     { return (a * b) / gcd(a, b);}\nll mypow(ll a, ll b)   { ll ans = 1; while(b){ if (b&1) ans = (ans*a) ; b /= 2; a = (a*a); } return ans; }\nbool isPrime(ll n)     { if(n <= 1) return false; for(ll i = 2; i <= sqrt(n); i++) if(n % i == 0) return false; return true; }\nbool is_bound(int x,int y, int n, int m) {return x >= 0 && x < n && y >= 0 && y < m;}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        unordered_map<ll, ll> mp;\n        ll n = nums.size(), cnt=0;\n        for(int i=0; i<n; ++i){\n            unordered_map<ll, ll> mpp; \n            if(nums[i] == k) cnt++;\n            mpp[nums[i]] = 1;\n            for(auto& x : mp) {\n                ll res = x.first & nums[i];\n                if(res==k) cnt += x.second;      \n                mpp[res] += x.second;\n            }\n            mp = mpp;\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1720278785",
    "subm_id": "1311724144"
}