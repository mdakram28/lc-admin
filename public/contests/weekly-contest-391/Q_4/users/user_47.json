{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        typedef pair<int, int> pii;\n        int n = points.size();\n        vector<pii> A, B;\n        for (int i = 0; i < n; i++) {\n            auto &p = points[i];\n            A.push_back(pii(p[0] - p[1], i));\n            B.push_back(pii(p[0] + p[1], i));\n        }\n        sort(A.begin(), A.end());\n        sort(B.begin(), B.end());\n\n        auto calc = [&](int ban) {\n            vector<int> A, B;\n            for (int i = 0; i < n; i++) if (i != ban) {\n                auto &p = points[i];\n                A.push_back(p[0] - p[1]);\n                B.push_back(p[0] + p[1]);\n            }\n            sort(A.begin(), A.end());\n            sort(B.begin(), B.end());\n            return max(A[n - 2] - A[0], B[n - 2] - B[0]);\n        };\n\n        return min({calc(A[0].second), calc(A[n - 1].second), calc(B[0].second), calc(B[n - 1].second)});\n    }\n};\n"
}