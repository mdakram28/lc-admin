{
    "username": "applouz",
    "submission": "from typing import List\n\nclass SegmentTree:\n    def __init__(self, data):\n        self.n = len(data)\n        self.tree = [0] * (2 * self.n)\n        self.build(data)\n    \n    def build(self, data):\n        for i in range(self.n):\n            self.tree[self.n + i] = data[i]\n        for i in range(self.n - 1, 0, -1):\n            self.tree[i] = self.tree[i * 2] + self.tree[i * 2 + 1]\n    \n    def update(self, pos, value):\n        pos += self.n\n        self.tree[pos] = value\n        while pos > 1:\n            pos //= 2\n            self.tree[pos] = self.tree[2 * pos] + self.tree[2 * pos + 1]\n    \n    def query(self, left, right):\n        result = 0\n        left += self.n\n        right += self.n + 1\n        while left < right:\n            if left % 2 == 1:\n                result += self.tree[left]\n                left += 1\n            if right % 2 == 1:\n                right -= 1\n                result += self.tree[right]\n            left //= 2\n            right //= 2\n        return result\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def is_peak(arr, i):\n            return 0 < i < len(arr) - 1 and arr[i] > arr[i-1] and arr[i] > arr[i+1]\n        \n        peaks = [0] * len(nums)\n        for i in range(1, len(nums) - 1):\n            if is_peak(nums, i):\n                peaks[i] = 1\n        \n        seg_tree = SegmentTree(peaks)\n        \n        result = []\n        \n        for query in queries:\n            if query[0] == 1:\n                li, ri = query[1], query[2]\n                result.append(seg_tree.query(li + 1, ri - 1))\n            elif query[0] == 2:\n                index, val = query[1], query[2]\n                nums[index] = val\n\n                for i in range(max(1, index - 1), min(len(nums) - 1, index + 2)):\n                    new_peak_value = 1 if is_peak(nums, i) else 0\n                    seg_tree.update(i, new_peak_value)\n        \n        return result",
    "submit_ts": "1718506687",
    "subm_id": "539776608"
}