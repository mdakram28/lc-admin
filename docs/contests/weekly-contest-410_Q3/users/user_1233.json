{
    "username": "dishankgarg5",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n             const int MOD = 1e9 + 7;\n        int n = nums.size();\n        vector<vector<int>> dp(51, vector<int>(51, 0));\n        vector<vector<int>> prefixSum(51, vector<int>(51, 0));\n        \n        // Initialize for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            int k = nums[0] - j;\n            dp[j][k] = 1;\n        }\n\n        // Fill the DP table\n        for (int i = 1; i < n; ++i) {\n            // Compute prefix sums for dp[i-1]\n            for (int j = 0; j <= 50; ++j) {\n                prefixSum[j][0] = dp[j][0];\n                for (int k = 1; k <= 50; ++k) {\n                    prefixSum[j][k] = (prefixSum[j][k-1] + dp[j][k]) % MOD;\n                }\n            }\n\n            vector<vector<int>> newDp(51, vector<int>(51, 0));\n            \n            for (int j = 0; j <= nums[i]; ++j) {\n                int k = nums[i] - j;\n                for (int prev_j = 0; prev_j <= j; ++prev_j) {\n                    int validSum = prefixSum[prev_j][50] - (k > 0 ? prefixSum[prev_j][k-1] : 0);\n                    if (validSum < 0) validSum += MOD;  // Ensure no negative values\n                    newDp[j][k] = (newDp[j][k] + validSum) % MOD;\n                }\n            }\n\n            dp = newDp;\n        }\n\n        // Sum all valid pairs for the last element\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            for (int k = 0; k <= 50; ++k) {\n                result = (result + dp[j][k]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1723345129",
    "subm_id": "1351549185"
}