{
    "username": "\u516b\u8fdb\u5236\u7684\u6708\u5149",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size(),m=board[0].size();\n        long long res=-1e10;\n        vector<int>mx(n+1,-1e9-10),sx(n+1,-1e9-10),tx(n+1,-1e9-10),mloc(n+1),sloc(n+1),tloc(n+1);\n        vector<vector<pair<int,int>>>vec(n+1,vector<pair<int,int>>(3));\n        for(int i=0;i<n;i++) {\n            for(int k=0;k<m;k++) {\n                if(board[i][k]>mx[i]) {\n                    tx[i]=sx[i],sx[i]=mx[i];\n                    tloc[i]=sloc[i],sloc[i]=mloc[i];\n                    mx[i]=board[i][k];\n                    mloc[i]=k;\n                } else if(board[i][k]>sx[i]) {\n                    tx[i]=sx[i];\n                    tloc[i]=sloc[i];\n                    sx[i]=board[i][k];\n                    sloc[i]=k;\n                } else if(board[i][k]>tx[i]) {\n                    tloc[i]=k;\n                    tx[i]=board[i][k];\n                }\n            }\n            vec[i][0]={mx[i],mloc[i]};\n            vec[i][1]={sx[i],sloc[i]};\n            vec[i][2]={tx[i],tloc[i]};\n        }\n        multiset<int,greater<int>>st;\n        vector<int>cur(m+1,-1e9-10);\n        map<int,vector<int>>mp;\n        for(int i=0;i<n;i++) {\n            for(int k=i+1;k<n;k++) {\n                for(auto [vi,li]:vec[i]) {\n                    for(auto [vk,lk]:vec[k]) {\n                        if(li==lk) continue;\n                        int ok=0;\n                        for(int v:st) {\n                            for(int &u:mp[v]) {\n                                if(u!=li and u!=lk) {\n                                    res=max(res,(long long)vi+vk+v);\n                                    ok=1;\n                                    break;\n                                }\n                            }\n                            if(ok) break;\n                        }\n                    }\n                }\n            }\n            for(auto p:vec[i]) {\n                auto it=st.find(cur[p.second]);\n                if(it!=st.end()) {\n                    st.erase(it);\n                }\n                cur[p.second]=max(cur[p.second],p.first);\n                st.insert(cur[p.second]);\n                mp[p.first].push_back(p.second);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723908838",
    "subm_id": "556333121"
}