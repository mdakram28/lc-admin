{
    "username": "12112113",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<int> V(n), V1(n);\n    for (int i = 0; i < n; i++) {\n        V[i] = points[i][0] + points[i][1];\n        V1[i] =  points[i][0] - points[i][1];\n    }\n    vector<int>premax(n,-1e9);\n        vector<int>premin(n,1e9);\n        vector<int>suffmax(n,-1e9);\n        vector<int>suffmin(n,1e9);\n        premax[0]=V[0];\n        premin[0]=V[0];\n        suffmax[n-1]=V[n-1];\n        suffmin[n-1]=V[n-1];\n        cout<<\"yaha\";\n        for(int i=1;i<n;i++){\n            premax[i]=max(premax[i-1],V[i]);\n            premin[i]=min(premin[i-1],V[i]);\n            suffmax[n-1-i]=max(suffmax[n-i],V[n-i-1]);\n            suffmin[n-1-i]=min(suffmin[n-i],V[n-i-1]);\n        }\n                cout<<\"here\";\n\n        vector<int>premax1(n,-1e9);\n        vector<int>premin1(n,1e9);\n        vector<int>suffmax1(n,-1e9);\n        vector<int>suffmin1(n,1e9);\n        premax1[0]=V1[0];\n        premin1[0]=V1[0];\n        suffmax1[n-1]=V1[n-1];\n        suffmin1[n-1]=V1[n-1];\n        for(int i=1;i<n;i++){\n            premax1[i]=max(premax1[i-1],V1[i]);\n            premin1[i]=min(premin1[i-1],V1[i]);\n            suffmax1[n-1-i]=max(suffmax1[n-i],V1[n-i-1]);\n            suffmin1[n-1-i]=min(suffmin1[n-i],V1[n-i-1]);\n        }\n        int res=1e9;\n        res=min(res,max(suffmax[1]-suffmin[1],suffmax1[1]-suffmin1[1]));\n        for(int i=1;i<n-1;i++){\n            int cmax=max(premax[i-1],suffmax[i+1]);\n            int cmin=min(premin[i-1],suffmin[i+1]);\n             int cmax1=max(premax1[i-1],suffmax1[i+1]);\n            int cmin1=min(premin1[i-1],suffmin1[i+1]);\n            res=min(res,max(cmax-cmin,cmax1-cmin1));\n        }\n        res=min(res,max(premax[n-2]-premin[n-2],premax1[n-2]-premin1[n-2]));\n        return res;\n    }\n};"
}