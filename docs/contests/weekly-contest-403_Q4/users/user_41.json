{
    "username": "Superultra",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define FOR(i, x, y) for (int i = x; i < y; i++)\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& A) {\n        int n = A.size();\n        int m = A[0].size();\n\n        auto solve1 = [&](int mnr, int mxr, int mnc, int mxc){\n            int retMinR = 101;\n            int retMaxR = -1;\n            int retMinC = 101;\n            int retMaxC = -1;\n\n            for (int i = mnr; i <= mxr; i++){\n                for (int j = mnc; j <= mxc; j++){\n                    if (A[i][j]){\n                        // cout << \"hi\" << endl;\n                        retMinR = min(retMinR, i);\n                        retMaxR = max(retMaxR, i);\n                        retMinC = min(retMinC, j);\n                        retMaxC = max(retMaxC, j);\n                    }\n                }\n            }\n\n            // Need 3 rectangles\n            if (retMaxR == -1)\n                return 1000;\n\n            return (retMaxR - retMinR + 1) * (retMaxC - retMinC + 1);\n        };\n\n        auto solve2 = [&](int mnr, int mxr, int mnc, int mxc){\n            int ans = 1e9;\n\n            // Iterate over splitting row\n            for (int i = mnr; i < mxr; i++){\n                ans = min(ans, solve1(mnr, i, mnc, mxc) + solve1(i + 1, mxr, mnc, mxc));\n            }\n\n            // col\n            for (int i = mnc; i < mxc; i++){\n                ans = min(ans, solve1(mnr, mxr, mnc, i) + solve1(mnr, mxr, i + 1, mxc));\n            }\n            return ans;\n        };\n\n        int ans = 1e9;\n\n        \n        // Splitting row\n        for (int i = 0; i < n - 1; i++){\n            ans = min(ans, solve1(0, i, 0, m - 1) + solve2(i + 1, n - 1, 0, m - 1));\n            ans = min(ans, solve2(0, i, 0, m - 1) + solve1(i + 1, n - 1, 0, m - 1));\n        }\n\n        for (int i = 0; i < m - 1; i++){\n            ans = min(ans, solve1(0, n - 1, 0, i) + solve2(0, n - 1, i + 1, m - 1));\n            ans = min(ans, solve2(0, n - 1, 0, i) + solve1(0, n - 1, i + 1, m - 1));\n        }\n        \n        \n        // cout << solve1(0, n - 1, 0, 0) + solve2(0, n - 1, 1, 2) << endl;\n        \n        return ans;\n    }\n};",
    "submit_ts": 1719110966.0
}