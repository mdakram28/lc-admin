{
    "username": "Rohit_Meena",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    int dist(vector<int> &a, vector<int> &b){\n        return abs(a[0]-b[0])+abs(a[1]-b[1]);\n    }\n    vector<int> get_max(vector<vector<int>> points){\n        // sort(points.begin(),points.end());\n        int a = 0, b = 0;\n        int maxd = -1;\n        int ld = -1, rd = -1;\n        \n        for(int i = 1;i<points.size();i++){\n            int x = points[i][0], y = points[i][1];\n            int d = dist(points[i],points[a]);\n            if(d> maxd){\n                maxd = d;\n                ld = a, rd = i;\n            }\n            d = dist(points[i],points[b]);\n            if(d> maxd){\n                maxd = d;\n                ld = b, rd = i;\n            }\n            \n            if(y>points[a][1]){\n                int dy = y-points[a][1];\n                int dx = x-points[a][0];\n                if(dy>dx){\n                    a = i;\n                }\n            }\n            if(y<points[b][1]){\n                int dy = points[b][1] - y;\n                int dx = x-points[b][0];\n                if(dy>dx){\n                    b = i;\n                }\n            }\n            // cout<<a<<\" \"<<b<<endl;\n        }\n        return {maxd,ld,rd};\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(),points.end());\n        int n = points.size();\n        auto vv = get_max(points);\n        int ans = vv[0], ld = vv[1], rd = vv[2];\n        // cout<<ld<<\" -> \"<<rd<<endl;\n        vector<vector<int>> v = points;\n        v.erase(v.begin()+ld);\n        ans = min(ans,get_max(v)[0]);\n        v = points;\n        v.erase(v.begin()+rd);\n        ans = min(ans,get_max(v)[0]);\n        return ans;\n    }\n};"
}