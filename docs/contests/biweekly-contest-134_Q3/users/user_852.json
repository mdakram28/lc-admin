{
    "username": "dineshgroach",
    "submission": "vector<int> computeLPS(string pattern)\n{\n    int n = pattern.size();\n    vector<int> lps(n,0);\n    int len = 0, i = 1;\n    while(i < n)\n    {\n        if(pattern[i] == pattern[len])\n        {\n            len++;\n            lps[i] = len;\n            i++;\n        }\n        else\n        {\n            if(len != 0)\n            {\n                len = lps[len - 1];\n            }\n            else\n            {\n                lps[i] = 0;\n                i++;\n            }\n        }\n    }\n    return lps;\n}\nint stringMatch(string text, string pattern) {\n\tvector<int> lps = computeLPS(pattern);\n    vector<int> res;\n    int  n = text.size(), m = pattern.size();\n    int i = 0,j = 0;\n    while(i < n)\n    {\n        if(text[i] == pattern[j])\n        {\n            i++;\n            j++;\n        }\n        if(j == m)\n        {\n// Just write (i - j) if want 0 based indexing\n            res.push_back(i - j + 1);\n            j = lps[j - 1];\n        }\n        else if(text[i] != pattern[j])\n        {\n            if(j != 0)\n            {\n                j = lps[j - 1];\n            }\n            else\n            {\n                i++;\n            }\n        }\n    }\n    return (int)res.size();\n}\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        string ans = \"\";\n        int n = c.size();\n        for(int i = 0; i < n; i++)\n        {\n            ans.push_back(c[i] + '0');\n        }\n        for (int i = 0; i < k - 1; i++)\n        {\n            ans.push_back(c[i] + '0');\n        }\n        string pat1 = \"\";\n        string pat2 = \"\";\n        int chk = 0;\n        for (int i = 0; i < k; i++)\n        {\n            pat1.push_back(chk + '0');\n            chk = !chk;\n        }\n        chk = 1;\n        for (int i = 0; i < k; i++)\n        {\n            pat2.push_back(chk + '0');\n            chk = !chk;\n        }\n        int sol = 0;\n        sol += stringMatch(ans, pat1);\n        sol += stringMatch(ans, pat2);\n        return sol;\n    }\n};",
    "submit_ts": "1720279918",
    "subm_id": "1311770180"
}