{
    "username": "techie-arpit",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        int ans = 0 ;\n        int cur = 0 ;\n        sort(requirements.begin() , requirements.end()) ;\n        int max_inv = n*(n-1)/2 ;\n        vector<vector<int>>dp(max_inv+1 , vector<int>(n+1)) ;\n        dp[0][0] = 1 ;\n        vector<int>prefix(max_inv+1,1);\n        \n        // cout<<\"prefix size \"<<prefix.size()<<endl;\n        for(int i = 1;  i<=n  ; i++)\n        {\n            for(int j = 0 ; j<=max_inv ; j++)\n            {\n\n                // cout<<dp[j][i]<<\" \"<<prefix[j]<<endl;\n                dp[j][i] += prefix[j] ;\n                dp[j][i] %= MOD ;\n                // cout<<dp[j][i]<<endl; ;\n                if(j-i >= 0)\n                {\n                    // cout<<\"inside if with \"<<i<<\" \"<<j<<endl;\n                    // cout<<dp[j][i]<<\" \"<<prefix[j-i]<<endl;\n                    dp[j][i] -= prefix[j-i] ;\n                    // cout<<dp[j][i]<<endl;;\n\n                    dp[j][i] += MOD ;\n                    dp[j][i] %= MOD ;\n                }\n                // cout<<\"for \"<<i<<\" \"<<j<<endl;\n                // cout<<dp[j][i]<<endl;\n            }\n            \n            if(requirements[cur][0] + 1 == i)\n            {\n                // cout<<\"here\"<<endl;\n                for(int j = 0 ; j<=max_inv ; j++)\n                {\n                    if(j != requirements[cur][1])\n                    {\n                        dp[j][i] = 0 ;\n                    }\n                }\n                cur++; \n            }\n\n        //     cout<<\"after \"<<i<<\" printinf dp\"<<endl;\n        // for(auto x : dp)\n        // {\n        //     for(auto y : x)\n        //     {\n        //         cout<<y<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n            prefix[0] = dp[0][i] ;\n            for(int j = 1 ; j<=max_inv ; j++)\n            {\n                prefix[j] = (prefix[j-1] + dp[j][i])%MOD ;\n            }\n        }\n        \n        return dp[requirements.back()[1]][n]%MOD;\n        \n    }\n};\n",
    "submit_ts": 1719069980.0
}