{
    "username": "sunil1906",
    "submission": "class Solution {\npublic:\n    vector<int> dist(vector<vector<int>>& nums)\n    {\n        int i, n = nums.size();\n        vector<pair<int, int>> v1, v2;\n\n        for(i=0;i<n;i++){\n            v1.push_back({nums[i][0] + nums[i][1], i});\n            v2.push_back({nums[i][0] - nums[i][1], i});\n        }\n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n\n        if(v1[n-1].first - v1[0].first > v2[n-1].first - v2[0].first)\n            return {v1[n-1].first - v1[0].first, v1[n-1].second, v1[0].second};\n        \n        \n        return {v2[n-1].first - v2[0].first, v2[n-1].second, v2[0].second};\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> v = dist(points);\n        int x = v[1], y = v[2], i, j, n = points.size();\n        vector<vector<int>> p1, p2;\n        for(i=0;i<n;i++){\n            if(i != x)  p1.push_back(points[i]);\n            if(i != y)  p2.push_back(points[i]);\n        }\n        vector<int> v1 = dist(p1);\n        vector<int> v2 = dist(p2);\n        return min(v1[0], v2[0]);\n    }\n};"
}