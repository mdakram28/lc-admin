{
    "username": "Nova_Mckerell",
    "submission": "class Solution {\n    vector<vector<int>> dp;\n    vector<int> v1;\n    \n    void solve(vector<int>& nums,int &ans,vector<map<int,int>> &val, int k){\n        int n = nums.size();\n        for(int i=0;i<n;++i){\n            for(int j=0;j<=k;++j){\n                for(int len=0;len<j;++len){\n                    dp[i][j] = max(dp[i][j],1+v1[len]);\n                }\n                if(val[j].find(nums[i])!=val[j].end()){\n                    dp[i][j] = max(dp[i][j],1+val[j][nums[i]]);\n                }\n                ans = max(ans,dp[i][j]);\n            }\n            \n            for(int p=0;p<=k;++p){\n                v1[p] = max(v1[p],dp[i][p]);\n                val[p][nums[i]]=max(val[p][nums[i]],dp[i][p]);\n            }\n        }\n        return;\n    }\n    \npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        dp.clear();\n        v1.clear();\n        int n = nums.size();\n        \n        vector<map<int,int>> val(k+1);\n        \n        \n        v1.resize(k+1,-1);\n        \n        dp.resize(n,vector<int>(k+1,1));\n        \n        int ans = 1;\n\n        solve(nums,ans,val,k);\n        \n        \n        return ans;\n        \n\n    }\n};",
    "submit_ts": 1717862272.0
}