{
    "username": "bryanpak2006",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        int h = 0, v = 0;\n        long long totalCost = 0;\n        int horPieces = 1, verPieces = 1;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += (long long)horizontalCut[h] * verPieces;\n                h++;\n                horPieces++;\n            }\n            else {\n                totalCost += (long long)verticalCut[v] * horPieces;\n                v++;\n                verPieces++;\n            }\n        }\n        while (h < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[h] * verPieces;\n            h++;\n        }\n        while (v < verticalCut.size()) {\n            totalCost += (long long)verticalCut[v] * horPieces;\n            v++;\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925731",
    "subm_id": "1320264366"
}