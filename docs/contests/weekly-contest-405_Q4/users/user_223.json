{
    "username": "jason7708",
    "submission": "struct Node {\n    // Node() : is_end(false), cost(0x3f3f3f3f), child\n    bool is_end {false};\n    int cost {0x3f3f3f3f};\n    array<Node*, 26> child {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr};\n};\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size(), m = words.size();\n        Node* root = new Node();\n\n        for(int i=0; i<m; i++) {\n            Node* cur = root;\n            for(int j=words[i].size()-1; j>=0; j--) {\n                int c = words[i][j] - 'a';\n                if(!cur->child[c]) {\n                    cur->child[c] = new Node();\n                }\n                cur = cur->child[c];\n            }\n            cur->is_end = true;\n            cur->cost = min(cur->cost, costs[i]);\n        }\n\n        vector<int> dp(n+1, 0x3f3f3f3f);\n        dp[0] = 0;\n        for(int i=0; i<n; i++) {\n            \n            Node* cur = root;\n            for(int j=i; j>=0; j--) {\n                int c = target[j] - 'a';\n                if(!cur->child[c]) {\n                    break;\n                }\n                cur = cur->child[c];\n                if(cur->is_end) {\n                    dp[i+1] = min(dp[i+1], dp[j] + cur->cost);\n                }\n            }\n        }\n        return dp[n] < 0x3f3f3f3f ? dp[n] : -1;\n    }\n};",
    "submit_ts": "1720321498",
    "subm_id": "1312324470"
}