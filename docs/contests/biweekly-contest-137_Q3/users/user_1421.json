{
    "username": "r_utkarsh",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        long long maxSum = LLONG_MIN;\n\n        // Store the top 3 values and their columns for each row\n        vector<vector<long long>> topValues(rows, vector<long long>(3, LLONG_MIN));\n        \n        \n        \n        vector<vector<int>> topCols(rows, vector<int>(3, -1));\n\n        // Process each row to find the top 3 values and their columns\n        for (int r = 0; r < rows; ++r) {\n            \n            \n            vector<pair<long long, int>> colVals;\n            for (int c = 0; c < cols; ++c) {\n                colVals.emplace_back(grid[r][c], c);\n            }\n            \n            \n            sort(colVals.rbegin(), colVals.rend()); // Sort in descending order\n\n            // Store the top 3 values and their column indices\n            for (int k = 0; k < 3 && k < cols; ++k) {\n                topValues[r][k] = colVals[k].first;\n                topCols[r][k] = colVals[k].second;\n            }\n        }\n\n        // Try all combinations of 3 different rows\n        for (int r1 = 0; r1 < rows; ++r1) {\n            \n            \n            \n            for (int r2 = r1 + 1; r2 < rows; ++r2) {\n                for (int r3 = r2 + 1; r3 < rows; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (topCols[r2][j] == topCols[r1][i]) continue; // Avoid same column\n                            for (int k = 0; k < 3; ++k) {\n                                if (topCols[r3][k] == topCols[r1][i] || topCols[r3][k] == topCols[r2][j]) continue; // Avoid same column\n\n                                // Calculate the current sum\n                                long long currSum = topValues[r1][i] + topValues[r2][j] + topValues[r3][k];\n                                maxSum = max(maxSum, currSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910280",
    "subm_id": "1359224139"
}