{
    "username": "vilmos_prokaj",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        grid_T = [col for col in zip(*grid)] \n        rows = [any(row) for row in grid]\n        cols = [any(col) for col in grid_T]\n        a, b = min(i for i, r in enumerate(rows) if r), max(i for i, r in enumerate(rows) if r)+1\n        c, d = min(i for i, r in enumerate(cols) if r), max(i for i, r in enumerate(cols) if r)+1\n    \n        def min_cover(a, b, c, d):\n            a0, b0 = min((i for i in range(a, b) if any(grid[i][c:d])), default=a), max((i for i in range(a, b) if any(grid[i][c:d])), default=a)+1\n            c0, d0 = min((i for i in range(c, d) if any(grid_T[i][a:b])), default=c), max((i for i in range(c, d) if any(grid_T[i][a:b])), default=c)+1\n            return (b0-a0)*(d0-c0)\n                                   \n        min_val = inf\n        \n        for x in range(a, b):\n            for y in range(c, d):\n                \n                val = min_cover(x,b,y,d)+min_cover(a,x,c,d)+min_cover(x,b,c,y)\n                if min_val > val:\n                    min_val = val\n                val = min_cover(a,x,c,y)+min_cover(x,b,c,d)+min_cover(a,x,y,d)\n                if min_val > val:\n                    min_val = val\n                val = min_cover(a,x,y,d)+min_cover(a,b,c,y)+min_cover(x,b,y,d)\n                if min_val > val:\n                    min_val = val\n                val = min_cover(a,x,c,y)+min_cover(a,b,y,d)+min_cover(x,b,c,y)\n                if min_val > val:\n                    min_val = val\n                # print(f\"{x=}, {y=}, {val0=}, {val1=}\")\n                # print(f\"{min_cover(x,b,y,d)=}, {min_cover(a,x,c,d)=} {min_cover(x,b,c,y)=}\")\n                # print(f\"{min_cover(x,b,y,d)=}, {min_cover(a,b,c,y)=} {min_cover(a,x,c,d)=}\")\n                \n        for x0 in range(a, b):\n            for x1 in range(x0+1, b):\n                val = min_cover(a,x0,c,d)+min_cover(x0,x1,c,d)+min_cover(x1,b,c,d)\n                if min_val > val:\n                    min_val = val\n        for y0 in range(c, d):\n            for y1 in range(y0+1, d):\n                val = min_cover(a,b,c,y0)+min_cover(a,b,y0,y1)+min_cover(a,b,y1,d)\n                if min_val > val:\n                    min_val = val\n                \n        \n        return min_val",
    "submit_ts": "1719115027",
    "subm_id": "1297358885"
}