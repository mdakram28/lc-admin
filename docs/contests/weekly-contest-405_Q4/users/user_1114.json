{
    "username": "divyaroop",
    "submission": "struct Node{\n    char key;\n    int cost;\n    Node* adj[26];\n    Node(char key){\n        this->key=key;\n        this->cost=-1;\n        memset(this->adj,NULL,sizeof(this->adj));\n    }\n};\nclass Solution {\npublic:\n    Node* root;\n    void addWord(string word,int word_cost) {\n        Node* temp=root;\n        for(char c:word){\n            if(temp->adj[c-'a']==NULL){\n                Node* newnode= new Node(c);\n                temp->adj[c-'a']=newnode;\n                temp=newnode;\n            }\n            else{\n                temp=temp->adj[c-'a'];\n            }\n        }\n        if(temp->cost<0 || temp->cost>word_cost){\n            temp->cost=word_cost;\n        }\n    }\n    int dfs(string& word,int ix,vector<int>& dp){\n        if(ix>=word.length()){return 0;}\n        Node* temp=root;\n        if(dp[ix]!=-1){return dp[ix];}\n        int res=1e9;\n        for(int j=ix;j<word.length();j++){\n            if(j<word.length() && temp->adj[word[j]-'a']==NULL){\n                break;\n            }\n            else if(j<word.length()){\n                temp=temp->adj[word[j]-'a'];\n            }\n            if(temp->cost>0){\n                res=min(res,temp->cost+dfs(word,j+1,dp));\n            }\n        }\n        return dp[ix]=res;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root=new Node('/');\n        for(int i=0;i<words.size();i++){\n            addWord(words[i],costs[i]);\n        }\n        int n=target.length();\n        vector<int> dp(n,-1);\n        int ans=dfs(target,0,dp);\n        if(ans>=1e9){\n            return -1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720323467",
    "subm_id": "1312376276"
}