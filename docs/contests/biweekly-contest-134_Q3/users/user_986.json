{
    "username": "supreet_maurya",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        \n        vector<int> v;\n        int n = c.size();\n        for(int i = 0; i < n; i++) v.push_back(c[i]);\n        for(int i = 0; i < n; i++) v.push_back(c[i]);\n        \n        // int i = 0 , j = c.size() - 1;\n        \n        vector<int> v1(2*n , 0);\n        \n        for(int i = 0; i < 2*n - 1; i++){\n            // int r = 0;\n            if( v[i] != v[i + 1]) v1[i] = 1;\n            \n            if(i > 0 ) v1[i] = (v1[i - 1] + v1[i]);\n        }\n        \n        int cnt = 0;\n        \n        for(int i =0 ;i < n; i++){\n            int y = 0;\n            if( i > 0 ) y = v1[i - 1];\n            if( k - 1 == v1[i + k - 2] - y ) cnt++;\n        }\n        \n        \n        return cnt;\n        \n    }\n};",
    "submit_ts": "1720278184",
    "subm_id": "1311698093"
}