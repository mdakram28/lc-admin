{
    "username": "LeetCodeDino",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hor, vector<int>& ver) {\n        sort(hor.begin(), hor.end(), greater<int>());\n        sort(ver.begin(), ver.end(), greater<int>());\n        long long int h = 0, v = 0;\n        long long int hPieces = 1, vPieces = 1;\n        long long int total = 0;\n        while (h < hor.size() && v < ver.size()) {\n            if (hor[h] > ver[v]) {\n                total += hor[h] * vPieces;\n                hPieces++;\n                h++;\n            } else {\n                total += ver[v] * hPieces;\n                vPieces++;\n                v++;\n            }\n        }\n        while (h < hor.size()) {\n            total += hor[h] * vPieces;\n            h++;\n        }\n        while (v < ver.size()) {\n            total += ver[v] * hPieces;\n            v++;\n        }\n        return total;\n    }\n};",
    "submit_ts": "1720925531",
    "subm_id": "1320257780"
}