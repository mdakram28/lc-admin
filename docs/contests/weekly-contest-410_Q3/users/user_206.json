{
    "username": "sveng101",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        md = 10 ** 9 + 7\n\n        n = len(nums)\n\n        mx_arr = [0] * n\n        curr = float(\"inf\")\n        for i in reversed(range(n)):\n            curr = min(nums[i], curr)\n            mx_arr[i] = curr\n        #print(mx_arr)\n        \"\"\"\n        mn_arr = [0] * n\n        #curr1 = float(\"inf\")\n        #curr2 = \n        for i, num in enumerate(nums):\n            curr = min(curr, num)\n            mn_arr[i] = curr\n        print(mn_arr, mx_arr)\n        \"\"\"\n        res = 0\n        curr = list(range(1, mx_arr[0] + 2))\n        #print(curr)\n        mn = 0\n        for i in range(1, n):\n            num = nums[i]\n            prev = curr\n            curr = [0] * (mx_arr[i] + 1)\n            mn2 = None\n            #num2 >= num - nums[i - 1] + mn\n\n            for num2 in range(num - nums[i - 1] + mn, mx_arr[i] + 1):\n                num3 = num - num2\n                rng = [0, min(num2, mx_arr[i - 1], nums[i - 1] - num3)]\n                #print(num2, num3, rng)\n                if rng[0] > rng[1]: continue\n                ans = prev[rng[1]] - (prev[rng[0] - 1] if rng[0] else 0)\n                if ans and (mn2 is None): mn2 = num2\n                curr[num2] = ans\n            #print(i, curr, mn2)\n            if mn2 is None: return 0\n            for j in range(1, len(curr)):\n                curr[j] = (curr[j] + curr[j - 1]) % md\n            #print(curr)\n            \n\n        return curr[-1] % md",
    "submit_ts": "1723346225",
    "subm_id": "1351572946"
}