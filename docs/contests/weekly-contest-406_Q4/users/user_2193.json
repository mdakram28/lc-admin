{
    "username": "notchromaa",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater());\n        sort(verticalCut.begin(), verticalCut.end(), greater());\n        long long verticals = 1, horizontals = 1, i = 0, j = 0, res = 0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                res += horizontalCut[i] * verticals;\n                horizontals++, i++;\n            } else {\n                res += verticalCut[j] * horizontals;\n                verticals++, j++;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            res += horizontalCut[i] * verticals;\n            i++, horizontals++;\n        }\n        while (j < verticalCut.size()) {\n            res += verticalCut[j] * horizontals;\n            j++, verticals++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926386",
    "subm_id": "1320284702"
}