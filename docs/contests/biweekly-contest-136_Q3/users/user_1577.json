{
    "username": "ynnekuw",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ones = sum([sum(g) for g in grid])\n\n        ones = [0] * 5\n        for i in range(m // 2):\n            for j in range(n // 2):\n                cnt_ones = grid[i][j] + grid[~i][j] + grid[i][~j] + grid[~i][~j]\n                ones[cnt_ones] += 1\n        \n        both_ones = solo_ones = ops = 0\n        if m % 2 and n % 2:\n            if grid[m // 2][n // 2]:\n                solo_ones = 1\n            for i in range(m // 2):\n                if grid[i][n // 2] != grid[~i][n // 2]:\n                    ops += 1\n                elif grid[i][n // 2]:\n                    both_ones += 1\n            \n            for j in range(n // 2):\n                if grid[m // 2][j] != grid[m // 2][~j]:\n                    ops += 1\n                elif grid[m // 2][j]:\n                    both_ones += 1\n        elif m % 2:\n            for j in range(n // 2):\n                if grid[m // 2][j] != grid[m // 2][~j]:\n                    ops += 1\n                elif grid[m // 2][j]:\n                    both_ones += 1\n        elif n % 2:\n            for i in range(m // 2):\n                if grid[i][n // 2] != grid[~i][n // 2]:\n                    ops += 1\n                elif grid[i][n // 2]:\n                    both_ones += 1   \n\n        ans = ones[1] + ones[2]*2 + ones[3] + ops\n        ones = ones[2]*4 + ones[3]*4 + both_ones*2 + ops*2 + solo_ones\n        if ones % 4 == 0:\n            return ans\n        elif ones % 4 == 2:\n            return ans if ops else ans + 2\n        elif ones % 4 == 1:\n            return ans + 1\n        else:\n            return ans + 1 if ops else ans + 3\n            ",
    "submit_ts": "1722699166",
    "subm_id": "1343203432"
}