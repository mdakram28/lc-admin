{
    "username": "pratham0n",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int start = 0, end = 0;\n        int val = nums[0];\n        int ans = INT_MAX;\n        vector<vector<int>>v(nums.size()+1, vector<int>(32,0));\n        for(int i=0;i<nums.size();++i){\n            for(int j=0;j<32;++j){\n                if(nums[i]&(1<<j)){\n                    v[i+1][j] = 1;\n                }\n                v[i+1][j]+=v[i][j];\n            }\n        }\n        while(end < nums.size() && start < nums.size()){\n            //cout<<start<<\" \"<<end<<\" \"<<val<<endl;\n            ans=min(ans, abs(k-val));\n            if (val > k){\n                end++;\n                if(end>=nums.size()){\n                    break;\n                }\n                val&=nums[end];\n            } else {\n                start++;\n                if(start >= end){\n                    end=start;\n                }\n                if(start>=nums.size()) break;\n                val = 0;\n                for(int i=0;i<32;++i){\n                    if(v[end+1][i]-v[start][i] == end-start+1){\n                        val |= (1<<i);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717300625",
    "subm_id": "1274849902"
}