{
    "username": "i3eautiful-wo2niakowy",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        using LL = long long;\n        using pii = pair<int, int>;\n        int a = 1, b = 1;\n        vector<pair<int, pii>> v;\n        for (int i = 0; i < horizontalCut.size(); i ++ ) v.push_back({horizontalCut[i], {0, i}});\n        for (int i = 0; i < verticalCut.size(); i ++ ) v.push_back({verticalCut[i], {1, i}});\n        sort(v.begin(), v.end());\n        LL mn = 0;\n        for (int i = v.size() - 1; i >= 0; i -- ) {\n            int num = v[i].first, aa = v[i].second.first, bb = v[i].second.second;\n            if (aa == 0) {\n                mn += (LL)a * num;\n                b ++;\n            }\n            else {\n                mn += (LL)b * num;\n                a ++;\n            }\n        }\n        return mn;\n        \n    }\n};",
    "submit_ts": "1720925694",
    "subm_id": "546441290"
}