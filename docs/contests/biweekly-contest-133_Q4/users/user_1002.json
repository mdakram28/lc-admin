{
    "username": "AkshitMital",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) \n    {   \n        vector<long long> arr(n + 1, -1);\n        for (auto it : requirements) {\n            long long first = it[0];\n            long long second = it[1];\n            arr[first + 1] = second;\n        }\n\n        vector<long long> prev(401, 0);\n        prev[0] = 1;\n        int MOD = 1e9+7;\n\n        for (int i = 1; i <= n; i++) {\n            vector<long long> curr(401, 0);\n            \n            for (int j = 0; j <= 400; j++) {\n                long long sum = 0;\n                for (int pos = 0; pos < i && pos <= j; pos++) sum = (sum + prev[j - pos]) % MOD;\n                curr[j] = sum;\n            }\n\n            if (arr[i] != -1) {\n                for (int j = 0; j <= 400; j++) {\n                    if (j != arr[i]) curr[j] = 0;\n                }\n            }\n            \n            prev = curr;\n        }\n\n        long long ans = 0;\n        for (auto count : prev) ans = (ans + count) % MOD;\n\n        return ans;\n    }\n};\n",
    "submit_ts": 1719071784.0
}