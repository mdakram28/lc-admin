{
    "username": "competent-faradaympr",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n\tpublic class ListNode {\n\t\tint val;\n\t\tListNode next;\n\t\tboolean on = true;\n\t\tListNode() {}\n\t\tListNode(int val) { this.val = val; }\n\t\tListNode(int val, ListNode next) { this.val = val; this.next = next; }\n\t}\n\tpublic int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n\t\tListNode[] nodes = new ListNode[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tnodes[i] = new ListNode(i);\n\t\t\tif (i != 0) {\n\t\t\t\tnodes[i - 1].next = nodes[i];\n\t\t\t}\n\t\t}\n\t\tint time = n - 1;\n\t\tint m = queries.length;\n\t\tint[] ans = new int[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tint from = queries[i][0], to = queries[i][1];\n\t\t\tif (nodes[from].on && nodes[to].on) {\n\t\t\t\tint cnt = 0;\n\t\t\t\tListNode curr = nodes[from].next;\n\t\t\t\twhile (curr != nodes[to]) {\n\t\t\t\t\tcurr.on = false;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tcurr = curr.next;\n\t\t\t\t}\n\t\t\t\tnodes[from].next = nodes[to];\n\t\t\t\ttime -= cnt;\n\t\t\t}\n\t\t\tans[i] = time;\n\t\t}\n\t\treturn ans;\n\t}\n}",
    "submit_ts": "1722741397",
    "subm_id": "552337921"
}