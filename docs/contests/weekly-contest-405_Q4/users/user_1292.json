{
    "username": "dush1729",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\n\nconst int MAX = 1e9, BASE = 26, START = 'a';\n\nstruct TRIE {\n\tstruct node {\n\t\tint cost = MAX;\n\t\tbool end = false;\n\t\tnode* nxt[BASE] = {};\n\t};\n\tnode *head = new node(), *p;\n\n\tvoid add(const string &s, int cost) {\n\t\tauto ptr = head;\n\t\tfor(const char &c: s) {\n\t\t\tif(!ptr->nxt[c - START]) ptr->nxt[c - START] = new node();\n\t\t\tptr = ptr->nxt[c - START];\n\t\t}\n\t\tptr->cost = min(ptr->cost, cost);\n\t\tptr->end = true;\n\t}\n\n\tbool exists(const char &c, bool init_ptr = false) {\n\t\tif(init_ptr) p = head;\n\t\tif(!p->nxt[c - START]) return false;\n\t\tp = p->nxt[c - START];\n\t\treturn true;\n\t}\n};\n\nclass Solution {\npublic:\n\tint minimumCost(string a, vector<string>& words, vector<int>& costs) {\n\t\tauto trie = TRIE();\n\t\tfor(int i = 0; i < words.size(); i++) {\n\t\t\ttrie.add(words[i], costs[i]);\n\t\t}\n\n\t\tint n = a.size();\n\t\tvector dp(n + 1, MAX);\n\t\tdp[0] = 0;\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tif(dp[i - 1] == MAX) continue;\n\t\t\tfor(int j = i; j <= n && trie.exists(a[j - 1], j == i); j++) {\n\t\t\t\tdp[j] = min(dp[j], dp[i - 1] + trie.p->cost);\n\t\t\t}\n\t\t}\n\t\tif(dp[n] == MAX) dp[n] = -1;\n\t\treturn dp[n];\n\t}\n};\n\n#ifdef DUSH1729\nint main(){cout << \"Compiled!\";}\n#endif",
    "submit_ts": "1720323865",
    "subm_id": "1312385919"
}