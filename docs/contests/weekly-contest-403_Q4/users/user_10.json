{
    "username": "sheepforever",
    "submission": "class Solution {\npublic:\n    int getArea(vector<vector<int>>& grid, int x1, int x2, int y1, int y2) {\n        int minX = 1000, maxX = 0, minY = 1000, maxY = 0;\n        bool point = false;\n        for (int i = x1; i <= x2; ++i) {\n            for (int j = y1; j <= y2; ++j) {\n                if (grid[i][j]) {\n                    point = true;\n                    minX = min(minX, i);\n                    maxX = max(maxX, i);\n                    minY = min(minY, j);\n                    maxY = max(maxY, j);\n                }\n            }\n        }\n        if (!point) {\n            return 0;\n        }\n        return max(0, (maxX - minX + 1) * (maxY - minY + 1));\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        \n        int ans = getArea(grid, 0, n - 1, 0, m - 1);\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                ans = min(ans, getArea(grid, 0, i, 0, m - 1) + \n                               getArea(grid, i + 1, j, 0, m - 1) +\n                               getArea(grid, j + 1, n - 1, 0, m - 1));\n            }\n            for (int j = 0; j < m; ++j) {\n                ans = min(ans, getArea(grid, 0, i, 0, m - 1) + \n                               getArea(grid, i + 1, n - 1, 0, j) +\n                               getArea(grid, i + 1, n - 1, j + 1, m - 1));\n                ans = min(ans, getArea(grid, i + 1, n - 1, 0, m - 1) + \n                               getArea(grid, 0, i, 0, j) +\n                               getArea(grid, 0, i, j + 1, m - 1));\n            }\n        }\n        for (int i = 0; i < m; ++i) {\n            for (int j = i + 1; j < m; ++j) {\n                ans = min(ans, getArea(grid, 0, n - 1, 0, i) + \n                               getArea(grid, 0, n - 1, i + 1, j) +\n                               getArea(grid, 0, n - 1, j + 1, m - 1));\n            }\n            for (int j = 0; j < n; ++j) {\n                ans = min(ans, getArea(grid, 0, n - 1, 0, i) + \n                               getArea(grid, 0, j, i + 1, m - 1) +\n                               getArea(grid, j + 1, n - 1, i + 1, m - 1));\n                ans = min(ans, getArea(grid, 0, n - 1, i + 1, m - 1) + \n                               getArea(grid, 0, j, 0, i) +\n                               getArea(grid, j + 1, n - 1, 0, i));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719111117.0
}