{
    "username": "fweoifhe",
    "submission": "class Solution {\npublic:\n    using PII = pair<int, int>; // val, mp\n    set<PII, greater<PII>> maxv[55];\n    int map_to(int x, vector<int>& xs) {\n        return lower_bound(xs.begin(), xs.end(), x) - xs.begin() + 1;\n    }\n    int maximumLength(vector<int>& nums, int max_op) {\n        const int n = nums.size();\n        vector<vector<int>> f(max_op + 5, vector<int>(n + 5));\n        vector<int> xs = nums;\n        sort(xs.begin(), xs.end());\n        const int m = unique(xs.begin(), xs.end()) - xs.begin();\n        xs.resize(m);\n        int res = 0;\n        for (int i = 0; i < n; i ++ ) {\n            const int x = nums[i];\n            const int mp = map_to(x, xs);\n            for (int j = 0; j <= max_op; j ++ ) {\n                int ans = f[j][mp] + 1;\n                if (j >= 1 && maxv[j - 1].size()) {\n                    auto& S = maxv[j - 1];\n                    int t = 0;\n                    if (mp != S.begin()->second) t = S.begin()->first + 1;\n                    else if (S.size() >= 2) t = S.rbegin()->first + 1;\n                    ans = max(ans, t);\n                }\n                assert(ans >= f[j][mp]);\n                f[j][mp] = ans;\n                /* printf(\"f[%d][%d][%d]:%d\\n\", i, j, mp, f[j][mp]); */\n                res = max(ans, res);\n\n                for (auto it = maxv[j].begin(); it != maxv[j].end(); it ++ ) {\n                    if (it->second == mp) {\n                        maxv[j].erase(it);\n                        break;\n                    }\n                }\n                maxv[j].emplace(f[j][mp], mp);\n                if (maxv[j].size() > 2) {\n                    auto it = maxv[j].end(); it -- ;\n                    maxv[j].erase(it);\n                }\n            }\n        }\n        return res;\n    }\n\n\n\n};",
    "submit_ts": "1717861180",
    "subm_id": "1281782430"
}