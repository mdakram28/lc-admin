{
    "username": "hanbro0112",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = defaultdict(lambda :[0] * (k + 1))\n        \n        mx = [0] * (k + 1)\n        for x in nums:\n            tb = dp[x]\n            for i in range(k - 1, -1, -1):\n                \n                if tb[i + 1] > 0:\n                    tb[i + 1] += 1\n                    mx[i + 1] = max(mx[i + 1], tb[i + 1])\n                \n                if mx[i] > 0:\n                    tb[i + 1] = max(tb[i + 1], mx[i] + 1)\n                    mx[i + 1] = max(mx[i + 1], tb[i + 1])\n                \n            tb[0] += 1    \n            mx[0] = max(mx[0], tb[0])\n        \n        return max(mx)\n                \n                    ",
    "submit_ts": 1717862316.0
}