{
    "username": "Himanshu Adhikari",
    "submission": "#include <vector>\n#include <algorithm>\n#include <iostream>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        // Step 1: Prepare to store the top 3 values for each row\n        vector<vector<pair<long long, int>>> top3Values(m);\n        \n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> values;\n            for (int j = 0; j < n; ++j) {\n                values.push_back({board[i][j], j});\n            }\n            sort(values.rbegin(), values.rend());\n            if (values.size() > 3) values.resize(3);\n            top3Values[i] = values;\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int c1 = 0; c1 < top3Values[r1].size(); ++c1) {\n                        for (int c2 = 0; c2 < top3Values[r2].size(); ++c2) {\n                            for (int c3 = 0; c3 < top3Values[r3].size(); ++c3) {\n                                int col1 = top3Values[r1][c1].second;\n                                int col2 = top3Values[r2][c2].second;\n                                int col3 = top3Values[r3][c3].second;\n                                \n                                if (col1 != col2 && col2 != col3 && col1 != col3) {\n                                    long long sum = top3Values[r1][c1].first + top3Values[r2][c2].first + top3Values[r3][c3].first;\n                                    maxSum = max(maxSum, sum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910296",
    "subm_id": "1359224803"
}