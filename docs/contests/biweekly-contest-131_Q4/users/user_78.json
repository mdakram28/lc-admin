{
    "username": "thorfinn_",
    "submission": "#define ll long long \nstruct SegmentTree{\n    \n    vector<ll> tree;\n\n    SegmentTree(ll n){\n        int initial_value = 0;\n        tree.resize(4 * n, initial_value);\n    }\n\n\n    void build(ll node, ll l, ll r, vector<ll>&arr){\n        if(l == r){\n            tree[node] = arr[l];\n            return;\n        }\n        ll mid = (l + r) / 2;\n        build(node * 2, l, mid, arr);\n        build(node * 2 + 1, mid + 1, r, arr);\n        tree[node] = max(tree[node * 2] , tree[(node * 2) + 1]);\n    }\n\n    void update(ll node, ll l, ll r, ll pos, ll new_value){\n        if(l == r){\n            tree[node] = new_value;\n            return;\n        }\n        ll mid = (l + r) / 2;\n        if(pos >= l && pos <= mid) update(node * 2, l , mid, pos, new_value);\n        else update(node * 2 + 1, mid + 1, r , pos, new_value);\n        tree[node] = max(tree[node * 2] , tree[node * 2 + 1]);\n    }\n\n    ll query(ll node ,ll l, ll r, ll reql, ll reqr){\n        if(reql > r || reqr < l) return INT_MIN;\n        if(l == r) return tree[node];\n        if( reql <= l && reqr >= r) return tree[node];\n        ll mid = (l + r) / 2;\n        ll val1 = query(node * 2, l , mid, reql, reqr);\n        ll val2 = query((node * 2) + 1, mid + 1, r,reql , reqr);\n        return max(val1 , val2);\n    }\n};\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        ll val = 1e5 + 5;\n        SegmentTree st(val);\n        set<ll> s;\n        s.insert(0); s.insert(val - 1);\n        vector<bool> answer;\n        for(ll i = 0;i<queries.size();i++){\n            ll type = queries[i][0];\n            if(type == 1){\n                ll x = queries[i][1];\n                auto it = s.upper_bound(x);\n                ll right = *it; it--;\n                ll left = *it;\n                ll diff1 = x - left;\n                ll diff2 = right - x;\n                st.update(1,0,val,x,diff1);\n                st.update(1,0,val,right,diff2);\n                s.insert(x);\n            }\n            else{\n                ll x = queries[i][1];\n                ll sz = queries[i][2];\n                ll mx = st.query(1,0,val,0,x);\n                auto it = s.upper_bound(x); it--;\n                ll last = *it;\n                ll res = x - last;\n                mx = max(mx, res);\n                if(sz <= mx) answer.push_back(true);\n                else answer.push_back(false);\n            }\n        }\n        return answer;\n    }\n};",
    "submit_ts": "1716649755",
    "subm_id": "1267596936"
}