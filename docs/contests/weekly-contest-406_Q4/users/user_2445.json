{
    "username": "Hardikn29",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int vertical = 1 , horizontal = 1;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        \n        int i=m-2,j=verticalCut.size()-1;\n        long long cost = 0;\n        while(i>=0 && j>=0)\n        {\n            if(horizontalCut[i]>=verticalCut[j])\n            {\n                cost += horizontalCut[i]*vertical;\n                horizontal+=1;\n                i--;\n}\n            else\n            {\n                cost += verticalCut[j]*horizontal;\n                j--;\n                vertical+=1;\n}\n}\n        while(i>=0)\n        {\n            cost += horizontalCut[i]*vertical;\n            i--;\n}\n        while(j>=0)\n        {\n            cost += verticalCut[j]*horizontal;\n            j--;\n}\n        return cost;\n    }\n};",
    "submit_ts": "1720926518",
    "subm_id": "1320288616"
}