{
    "username": "codeanand17",
    "submission": "class Solution {\n    public long countSubarrays(int[] arr, int k) {\n          int n=arr.length;\n        int pref[][]=new int[n][30];\n        long ans3=0;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<30;j++)\n            {\n                if((arr[i]&(1<<j))>0)\n                    pref[i][j]=1;\n            }\n        }\n        for(int i=1;i<n;i++)\n            for(int j=0;j<30;j++)\n                pref[i][j]+=pref[i-1][j];\n        for(int i=0;i<n;i++)\n        {\n            int low=i,high=n-1,ans=-1;\n            while(low<=high)\n            {\n                int mid=(low+high)/2;\n                int g=check(pref,i,mid);\n                if(g==k)\n                {\n                    ans=mid;\n                    high=mid-1;\n                }\n                else if(g>k) low=mid+1;\n                else high=mid-1;\n            }\n            low=i;high=n-1;int ans2=-1;\n             while(low<=high)\n            {\n                int mid=(low+high)/2;\n                int g=check(pref,i,mid);\n                if(g==k)\n                {\n                    ans2=mid;\n                    low=mid+1;\n                }\n                else if(g>k) low=mid+1;\n                else high=mid-1;\n            }\n            if(ans!=-1)\n            ans3+=(ans2-ans+1);\n        }\n        return ans3;\n    }\n    public int check(int pref[][],int low,int mid)\n    {\n        int ans=0;\n        for(int i=0;i<30;i++)\n        {\n            if(low==0){\n                if(pref[mid][i]==mid+1)\n                    ans+=(1<<i);\n            }\n            else{\n                if((pref[mid][i]-pref[low-1][i])==((mid-low+1)))\n                    ans+=(1<<i);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720280419",
    "subm_id": "1311788722"
}