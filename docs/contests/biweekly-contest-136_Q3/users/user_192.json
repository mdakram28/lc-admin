{
    "username": "moojkoo",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int oc = 0;\n                if(grid[i][j]) oc++;\n                if(grid[n - i - 1][j]) oc++;\n                if(grid[i][m - j - 1]) oc++;\n                if(grid[n - i - 1][m - j - 1]) oc++;\n                ans += min(oc, 4 - oc);\n            }\n        }\n        bool b = 0;\n        int cnt = 0;\n        if(m % 2){\n            for (int i = 0; i < n / 2; i++) {\n                if(grid[i][m / 2] != grid[n - i - 1][m / 2]){\n                    b = 1;\n                    ans++;\n                }\n                else if(grid[i][m / 2] == 1) cnt++;\n            }\n        }\n        if(n % 2){\n            for (int i = 0; i < m / 2; i++) {\n                if(grid[n / 2][i] != grid[n / 2][m - i - 1]){\n                    b = 1;\n                    ans++;\n                }\n                else if(grid[n / 2][i] == 1) cnt++;\n            }\n        }\n        if(n % 2 && m % 2){\n            if(grid[n / 2][m / 2]) ans++;\n        }\n        if(cnt % 2 && !b) ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722697845",
    "subm_id": "1343160971"
}