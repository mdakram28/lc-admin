{
    "username": "apurv98",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int, int> mp;\n        int dist = n-1;\n        for (int i = 0; i < n-1; i++) {\n            mp.insert(make_pair(i, i+1));\n        }\n\n        vector<int> ans;\n        for (auto& q : queries) {\n            if (mp.contains(q[0])) {\n                auto itr = mp.find(q[0]);\n                bool removed = false;\n                while (itr != end(mp) &&\n                    itr->second <= q[1]) {\n                    auto itr1 = itr++;\n                    mp.erase(itr1);\n                    dist--;\n                    removed = true;\n                }\n                if (removed) {\n                    mp.insert(make_pair(q[0], q[1]));\n                    dist++;\n                }\n            }\n            ans.push_back(dist);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743144",
    "subm_id": "1343785380"
}