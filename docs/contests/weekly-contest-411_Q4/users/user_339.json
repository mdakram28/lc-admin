{
    "username": "forwarding7",
    "submission": "class Solution {\n  public:\n    using ll = long long;\n\n    vector<long long> countKConstraintSubstrings(string s, int k,\n                                                 vector<vector<int>> &queries) {\n        int n = (int)s.size(), qn = (int)queries.size();\n\n        vector<int> endpoints(n);\n        int l = 0, r = 0, zeros = 0, ones = 0;\n        for (; r < n; r++) {\n            if (s[r] == '0') {\n                ++zeros;\n            } else {\n                ++ones;\n            }\n\n            while (zeros > k && ones > k) {\n                if (s[l] == '0') {\n                    --zeros;\n                } else {\n                    --ones;\n                }\n                ++l;\n            }\n            endpoints[r] = l;\n        }\n\n        vector<ll> prefix(n);\n        for (int i = 0; i < n; i++) {\n            prefix[i] = (i == 0 ? 0 : prefix[i - 1]) + (i - endpoints[i] + 1);\n        }\n\n        vector<ll> res(qn, 0);\n        for (int i = 0; i < qn; i++) {\n            int li = queries[i][0];\n            int ri = queries[i][1];\n\n            auto it = lower_bound(endpoints.begin() + li,\n                                  endpoints.begin() + ri + 1, li) -\n                      endpoints.begin();\n            if (it > ri) {\n                res[i] = (ll)(ri - li + 1) * (ri - li + 2) / 2;\n            } else if (it == li) {\n                res[i] = prefix[ri] - (li == 0 ? 0 : prefix[li - 1]);\n            } else { \n                res[i] = prefix[ri] - prefix[it - 1];\n                res[i] += (ll)(it - li) * (it - li + 1) / 2;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723950970",
    "subm_id": "1359759819"
}