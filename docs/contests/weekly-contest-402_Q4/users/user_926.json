{
    "username": "amol_jindal",
    "submission": "#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\n\nclass Solution {\nprivate:\n    tree<int,         /* key                */\n         null_type,   /* mapped             */\n         less<int>,   /* compare function   */\n         rb_tree_tag, /* red-black tree tag */\n         tree_order_statistics_node_update> tr;\n    \n    void checkAndAdd(vector<int>& nums, int i) {\n        if(i && i < nums.size() - 1) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                if(tr.find(i) == tr.end())\n                    tr.insert(i);\n            } else {\n                if(tr.find(i) != tr.end())\n                    tr.erase(i);\n            }\n        }\n    }\n    \n    \npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> result{};\n            \n        for(int i = 1; i < nums.size() - 1; i++) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                tr.insert(i);\n        }\n        \n        for(auto q: queries) {\n            if(q[0] == 1) {\n                if(q[1] == q[2])\n                    result.push_back(0);\n                else\n                    result.push_back(tr.order_of_key(q[2]) - tr.order_of_key(q[1] + 1));\n            } else {\n                int i = q[1];\n                nums[i] = q[2];\n                \n                checkAndAdd(nums, i - 1);\n                checkAndAdd(nums, i);\n                checkAndAdd(nums, i + 1);\n            }\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1718507913",
    "subm_id": "1289666172"
}