{
    "username": "tanuj_taneja",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n=a.size();\n        vector<int> take(n,-1);\n        unordered_map<int,vector<int>> mp,prob;\n        for (int i=0;i<n;i++){\n            bool t=1;\n            for (int j=0;j<=30;j++){\n                if ((a[i]>>j&1)==0) mp[j].push_back(i);\n                if ((a[i]>>j&1)==0 and (k>>j&1)==1) t=0;\n                if ((a[i]>>j&1)==1 and (k>>j&1)==0) prob[i].push_back(j);\n            }\n            if (t) take[i]=1;\n        }\n        int last=-1;\n        for (int i=n-1;i>=0;i--){\n            if (take[i]==1 and last==-1) last=i,take[i]=last;\n            else if (take[i]==1) take[i]=last;\n            else last=-1;\n        }\n        // for (int i=0;i<n;i++) cout<<take[i]<<\" \";\n        // cout<<endl;\n        long long ans=0;\n        for (int i=0;i<n;i++){\n            if (take[i]==-1)\n                continue;\n            int closest=i;\n            bool pos=1;\n            for (int val:prob[i]){\n                int search=lower_bound(mp[val].begin(),mp[val].end(),i)-mp[val].begin();\n                if (search==mp[val].size()){\n                    pos=0;\n                    break;\n                }\n                closest=max(mp[val][search],closest);\n            }\n            if (!pos)\n                continue;\n            ans+=max(take[i]-closest+1,0);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1720281467",
    "subm_id": "1311826197"
}