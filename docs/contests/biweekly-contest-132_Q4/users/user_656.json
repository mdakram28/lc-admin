{
    "username": "360verse",
    "submission": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar maximumLength = function(nums, k) {\n    const n = nums.length;\n    \n    const dp = Array.from({ length: n }, () => Array(k + 1).fill(1));\n    let maxLen = 1;\n    const maxSubarrayLen = Array(k + 1).fill(-1);\n    const maxLenMap = Array.from({ length: k + 1 }, () => ({}));\n    \n    const updateDp = (dp, nums, maxSubarrayLen, maxLenMap, i, j) => {\n        for (let l = 0; l < j; l++) {\n            dp[i][j] = Math.max(dp[i][j], 1 + maxSubarrayLen[l]);\n        }\n        if (nums[i] in maxLenMap[j]) {\n            dp[i][j] = Math.max(dp[i][j], 1 + maxLenMap[j][nums[i]]);\n        }\n    };\n    \n    const updateMaxLenArrays = (maxSubarrayLen, maxLenMap, nums, dp, i, k) => {\n        for (let j = 0; j <= k; j++) {\n            maxSubarrayLen[j] = Math.max(maxSubarrayLen[j], dp[i][j]);\n            if (!(nums[i] in maxLenMap[j])) {\n                maxLenMap[j][nums[i]] = dp[i][j];\n            } else {\n                maxLenMap[j][nums[i]] = Math.max(maxLenMap[j][nums[i]], dp[i][j]);\n            }\n        }\n    };\n    \n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j <= k; j++) {\n            updateDp(dp, nums, maxSubarrayLen, maxLenMap, i, j);\n            maxLen = Math.max(maxLen, dp[i][j]);\n        }\n        updateMaxLenArrays(maxSubarrayLen, maxLenMap, nums, dp, i, k);\n    }\n    \n    return maxLen;\n};\n",
    "submit_ts": "1717861699",
    "subm_id": "1281799366"
}