{
    "username": "Chandan Kumar",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) \n    {\n        long long maxRookSum = LLONG_MIN;\n        int rowCount = board.size();\n        int colCount = board[0].size();\n\n        vector<vector<int>> topColumns(rowCount, vector<int>(3, -1)); \n        \n\n        for (int row = 0; row < rowCount; ++row) \n        {\n            vector<pair<int, int>> valueColPairs; \n            \n            for (int col = 0; col < colCount; ++col) \n            {\n                valueColPairs.push_back({board[row][col], col});\n            }\n            \n            sort(valueColPairs.rbegin(), valueColPairs.rend()); \n    \n            for (int idx = 0; idx < 3 && idx < colCount; ++idx) \n            {\n                topColumns[row][idx] = valueColPairs[idx].second;\n            }\n        }\n\n        for (int row1 = 0; row1 < rowCount; ++row1) \n        {\n            for (int row2 = row1 + 1; row2 < rowCount; ++row2) \n            {\n                for (int row3 = row2 + 1; row3 < rowCount; ++row3) \n                {\n                    for (int colIdx1 = 0; colIdx1 < 3; ++colIdx1) \n                    {\n                        int column1 = topColumns[row1][colIdx1];\n                        \n                        if (column1 == -1) continue;\n                        \n                        for (int colIdx2 = 0; colIdx2 < 3; ++colIdx2) \n                        {\n                            int column2 = topColumns[row2][colIdx2];\n                            \n                            if (column2 == -1 || column2 == column1) continue;\n                            \n                            for (int colIdx3 = 0; colIdx3 < 3; ++colIdx3) \n                            {\n                                int column3 = topColumns[row3][colIdx3];\n                                if (column3 == -1 || column3 == column1 || column3 == column2) continue;\n                                \n                                long long sum = static_cast<long long>(board[row1][column1]) +\n                                                static_cast<long long>(board[row2][column2]) +\n                                                static_cast<long long>(board[row3][column3]);\n                                maxRookSum = max(maxRookSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return maxRookSum;\n    }\n};\n",
    "submit_ts": "1723909187",
    "subm_id": "1359182902"
}