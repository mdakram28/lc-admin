{
    "username": "iamhariom28",
    "submission": "const int MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int dp[301][401] = {0};\n        dp[0][0] = 1;\n        map<int,int> mpp;\n        for(auto req : requirements){\n            mpp[req[0]+1] = req[1];\n        }\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int k = 0; k <= 400; ++k) {\n                for (int j = 0; j < i; ++j) {\n                    if (k - j >= 0) {\n                        dp[i][k] = (dp[i][k] + dp[i-1][k-j]) % MOD;\n                    }\n                }\n            }\n            if (mpp.count(i)) {\n                int targetInv = mpp[i];\n                for (int inv = 0; inv <= 400; ++inv) {\n                    if (inv != targetInv) {\n                        dp[i][inv] = 0;\n                    }\n                }\n            }\n        }\n        \n        int result = 0;\n        for (int inv = 0; inv <= 400; ++inv) {\n            result = (result + dp[n][inv]) % MOD;\n        }\n        return result;\n        \n    }\n\n};\n",
    "submit_ts": 1719071920.0
}