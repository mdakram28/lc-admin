{
    "username": "TannnerM89",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        print(\"start\")\n        hPieces = 1\n        vPieces = 1\n        \n        hSum = sum(horizontalCut)\n        vSum = sum(verticalCut)\n        \n        horizontalCut = sorted(horizontalCut)\n        verticalCut = sorted(verticalCut)\n        cost = 0\n        \n        while(len(horizontalCut) > 0 and len(verticalCut) > 0):\n            if(horizontalCut[-1] > verticalCut[-1]):\n                cost += horizontalCut.pop() * vPieces\n                hPieces += 1\n            else:\n                cost += verticalCut.pop() * hPieces\n                vPieces += 1\n                \n        while(len(horizontalCut) > 0):\n            cost += horizontalCut.pop() * vPieces\n            \n        while(len(verticalCut) > 0):\n            cost += verticalCut.pop() * hPieces\n            \n        return cost\n            \n        \n        \n            \n            ",
    "submit_ts": "1720926155",
    "subm_id": "1320277598"
}