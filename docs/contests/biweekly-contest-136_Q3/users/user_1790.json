{
    "username": "ciphercraft",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), res = 0;\n        vector<int> arr(3, 0);\n        if (n & 1 and m & 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                res += 1;\n            }\n        }\n        if (n & 1) {\n            int x = 0, y = m - 1;\n            while (x < y) {\n                int aux = grid[n / 2][x] + grid[n / 2][y];\n                arr[aux] += 1;\n                x += 1; y -= 1;\n            }\n        }\n        if (m & 1) {\n            int x = 0, y = n - 1;\n            while (x < y) {\n                arr[grid[x][m / 2] + grid[y][m / 2]] += 1;\n                x += 1; y -= 1;\n            }\n        }\n        res += (arr[2] & 1) ? (((arr[1] > 0)) ? arr[1] : 2) : arr[1];\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int aux = grid[i][j] + grid[n - i - 1][j] + grid[i][m - 1 - j] + grid[n - i - 1][m - 1 - j];\n                res += ((aux != 0 and aux != 4)) ? min(aux, 4 - aux) : 0;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699951",
    "subm_id": "1343227204"
}