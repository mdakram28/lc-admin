{
    "username": "Xiaoping Hu",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        int64_t ret = LLONG_MIN;\n        vector<vector<pair<int64_t, int>>> a(m, vector<pair<int64_t, int>>(n));\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                a[i][j] = { board[i][j], j }; \n            }\n        }\n        for (auto &r: a) sort(r.rbegin(), r.rend());\n        \n        for (int it1 = 0; it1 < m; ++it1) {\n            for (int it2 = it1 + 1; it2 < m; ++it2) {\n                for (int it3 = it2 + 1; it3 < m; ++it3) {\n     \n                    for (int k1 = 0; k1 < 3; ++k1) {\n                        for (int k2 = 0; k2 < 3; ++k2) {\n                            for (int k3 = 0; k3 < 3; ++k3) {\n                                if (a[it1][k1].second == a[it2][k2].second) continue;\n                                if (a[it2][k2].second == a[it3][k3].second) continue;\n                                if (a[it3][k3].second == a[it1][k1].second) continue;\n                                \n                                ret = max(ret, a[it1][k1].first + a[it2][k2].first + a[it3][k3].first);\n                            }\n                        }\n                    }                \n                }    \n            }\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1723906794",
    "subm_id": "1359072949"
}