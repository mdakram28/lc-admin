{
    "username": "Arjit Khare",
    "submission": "class Solution {\npublic:\n    long long comb(vector<vector<int>>& board, int m, int n, int ind, int ct, int x1, int x2, vector<vector<vector<long long>>>& dp)\n    {\n        if(ct == 0) return 0;\n        if(ind == m) return LLONG_MIN;\n        if(dp[ind][x1][x2] != -1) return dp[ind][x1][x2];\n        long long ans = LLONG_MIN;\n        for(int i = 0; i < n; i++)\n        {\n            if(x1 == i || x2 == i) continue;\n            if(ct == 3)\n            {\n                long long curr = comb(board, m, n, ind + 1, ct-1, i, x2, dp);\n                if(curr == LLONG_MIN) continue;\n                ans = max(ans, 1LL*board[ind][i] + curr);\n            }\n            else if(ct == 2)\n            {\n                long long curr = comb(board, m, n, ind + 1, ct-1, x1, i, dp);\n                if(curr == LLONG_MIN) continue;\n                ans = max(ans, 1LL*board[ind][i] + curr);\n            }\n            else\n            {\n                long long curr = comb(board, m, n, ind + 1, ct-1, x1, x2, dp);\n                if(curr == LLONG_MIN) continue;\n                ans = max(ans, 1LL*board[ind][i] + curr);\n            }\n        }\n        ans = max(ans, comb(board, m, n, ind + 1, ct, x1, x2, dp));\n        if(ct == 1) return dp[ind][x1][x2] = dp[ind][x2][x1] = ans;\n        return dp[ind][x1][x2] = ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<vector<long long>>> dp(m + 1, vector<vector<long long>>(n + 1, vector<long long>(n + 1, -1)));\n        return comb(board, m, n, 0, 3, n, n, dp);\n    }\n};",
    "submit_ts": "1723909103",
    "subm_id": "1359179689"
}