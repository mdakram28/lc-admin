{
    "username": "sagar_12",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        int dp[n][k+1];\n        for(int i=0;i<=k;++i)\n            dp[n-1][i] = 1;\n        int ans=1;\n        for(int i=n-2;i>=0;--i){\n            dp[i][0] = 1;\n            for(int j=i+1;j<n;++j){\n                if(nums[j] == nums[i]){\n                    dp[i][0] += dp[j][0];\n                    break;\n                }\n            }\n            ans = max(ans, dp[i][0]);\n        }\n        unordered_map<int, int> mp;\n        vector<int> next(n, -1);\n        mp[nums[n-1]] = n-1;\n        \n        for(int i=n-2;i>=0;--i){\n            if(mp.find(nums[i]) != mp.end())\n                next[i] = mp[nums[i]];\n            mp[nums[i]] = i;\n        }\n        \n        int tillmax;\n        for(int j=1;j<=k;++j){\n            tillmax = dp[n-1][j-1];\n            for(int i=n-2;i>=0;--i){\n                \n                dp[i][j] = 1+tillmax;\n                if(next[i]!=-1)\n                    dp[i][j] = max(dp[i][j], 1+dp[next[i]][j]);\n                tillmax = max(tillmax, dp[i][j-1]);\n                // for(int l=i+1;l<n;++l){\n                //     if(nums[i]==nums[l]){\n                //         dp[i][j] = max(dp[i][j], 1 + dp[l][j]);\n                //         break;\n                //     }\n                //     else\n                //         dp[i][j] = max(dp[i][j], 1+dp[l][j-1]);\n                // }\n                ans = max(ans, dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861160.0
}