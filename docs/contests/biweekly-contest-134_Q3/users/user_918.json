{
    "username": "Maverickkk",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int n = colors.size(); \n        int count = 0; \n \n        if (k == 1) return n;\n \n        int alen = 1; \n        int i = 1; \n        \n        while (i < n + k - 1) { \n            int prev = i - 1; \n            int curr = i; \n \n            if(prev >= n) { \n                prev -= n; \n            } \n            \n            if(curr >= n) { \n                curr -= n; \n            } \n            \n \n            if(colors[curr] != colors[prev]) { \n                ++alen; \n            } else { \n                alen = 1; \n            } \n \n            if(alen >= k) { \n                ++count; \n            } \n \n            ++i; \n        } \n \n        return count; \n    } \n    \n};",
    "submit_ts": "1720279655",
    "subm_id": "1311759889"
}