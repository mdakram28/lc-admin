{
    "username": "aditi0309",
    "submission": "const int MOD = 1'000'000'007;\nclass Solution {\npublic:\n     int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> REINrein;\n        for (const auto& res : requirements) {\n            REINrein[res[0] + 1] = res[1];\n        }\n        \n        vector<vector<long>> dp(n + 1, vector<long>(401, 0));\n        dp[0][0] = 1;\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int k = 0; k <= 400; ++k) {\n                for (int j = 0; j < i; ++j) {\n                    if (k >= j) {\n                        dp[i][k] = (dp[i][k] + dp[i - 1][k - j]) % MOD;\n                    }\n                }\n            }\n            if (REINrein.find(i) != REINrein.end()) {\n                int abc = REINrein[i];\n                for (int k = 0; k <= 400; ++k) {\n                    if (k != abc) {\n                        dp[i][k] = 0;\n                    }\n                }\n            }\n        }\n        \n        long ANan = 0;\n        for (long ans : dp[n]) {\n            ANan = (ANan + ans) % MOD;\n        }\n        \n        return static_cast<int>(ANan);\n    }\n};",
    "submit_ts": 1719070621.0
}