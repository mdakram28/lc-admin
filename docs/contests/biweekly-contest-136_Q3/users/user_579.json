{
    "username": "fu-da-meng",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int ans = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int[] cnt = new int[2];\n                cnt[grid[i][j]]++;\n                cnt[grid[i][n - 1 - j]]++;\n                cnt[grid[m - 1 - i][j]]++;\n                cnt[grid[m - 1 - i][n - 1 - j]]++;\n                ans += Math.min(cnt[0], cnt[1]);\n            }\n        }\n\n        // m\u662f\u5947\u6570\n        int difPare = 0, cnt1 = 0;\n        if (m % 2 == 1) {\n            int i = m / 2;\n            for (int j = 0; j < n / 2; j++) {\n                int[] cnt = new int[2];\n                cnt[grid[i][j]]++;\n                cnt[grid[i][n - 1 - j]]++;\n                if (cnt[1] == 1) {\n                    difPare++;\n                }\n                cnt1 += cnt[1];\n            }\n        }\n\n        if (n % 2 == 1) {\n            int j = n / 2;\n            for (int i = 0; i < m / 2; i++) {\n                int[] cnt = new int[2];\n                cnt[grid[i][j]]++;\n                cnt[grid[m - 1 - i][j]]++;\n                if (cnt[1] == 1) {\n                    difPare++;\n                }\n                cnt1 += cnt[1];\n            }\n        }\n\n        ans += difPare;\n        if (m % 2 == 1 && n % 2 == 1) {\n            ans += grid[m / 2][n / 2] == 1 ? 1 : 0;\n        }\n\n        if (difPare >= 4) {\n            return ans;\n        }\n\n        cnt1 %= 4;\n        \n        if (cnt1 - difPare <= 0 || cnt1 + difPare >= 4) {\n            return ans;\n        }\n        \n        return ans + Math.min(cnt1 - difPare, 4 - cnt1 - difPare);\n    }\n}",
    "submit_ts": "1722697869",
    "subm_id": "552268199"
}