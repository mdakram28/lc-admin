{
    "username": "jaarshit",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(); \n        int final_ans = 0; \n         \n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                final_ans += 1; \n            } \n        } \n \n        vector<int> shift(3, 0); \n        if (n % 2 == 1) { \n            int num1= 0, num2= m - 1; \n            while (num1 < num2) { \n                int sum = grid[n / 2][num1] + grid[n / 2][num2]; \n                shift[sum] += 1; \n                num1+= 1; \n                num2-= 1; \n            } \n        } \n \n        if (m % 2 == 1) { \n            int num1= 0, num2= n - 1; \n            while (num1 < num2) { \n                int sum = grid[num1][m / 2] + grid[num2][m / 2]; \n                shift[sum] += 1; \n                num1+= 1; \n                num2-= 1; \n            } \n        } \n \n        if (shift[2] % 2 == 1) { \n            if (shift[1] > 0) { \n                final_ans += shift[1]; \n            } else { \n                final_ans += 2; \n            } \n        } else { \n            final_ans += shift[1]; \n        } \n \n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int num1= grid[i][j]; \n                int num2= grid[n - 1 - i][j]; \n                int num3= grid[i][m - 1 - j]; \n                int num4 = grid[n - 1 - i][m - 1 - j]; \n \n                int sum = num1+ num2+ num3+ num4; \n \n                if (sum != 0 && sum != 4) { \n                    final_ans += min(sum, 4 - sum); \n                } \n            } \n        } \n \n        return final_ans; \n    }\n};",
    "submit_ts": "1722700329",
    "subm_id": "1343238563"
}