{
    "username": "Rishuayush",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       sort(horizontalCut.rbegin(), horizontalCut.rend());\n\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    \n\n    long long totalCost = 0;\n\n    int hCount = 1, vCount = 1;\n\n    int i = 0, j = 0;\n\n    \n\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n\n        if (horizontalCut[i] > verticalCut[j]) {\n\n            totalCost += static_cast<long long>(horizontalCut[i]) * vCount;\n\n            ++hCount;\n\n            ++i;\n\n        } else {\n\n            totalCost += static_cast<long long>(verticalCut[j]) * hCount;\n\n            ++vCount;\n\n            ++j;\n\n        }\n\n    }\n\n    \n\n    while (i < horizontalCut.size()) {\n\n        totalCost += static_cast<long long>(horizontalCut[i]) * vCount;\n\n        ++i;\n\n    }\n\n    \n\n    while (j < verticalCut.size()) {\n\n        totalCost += static_cast<long long>(verticalCut[j]) * hCount;\n\n        ++j;\n\n    }\n\n    \n\n    return totalCost; \n    }\n};",
    "submit_ts": "1720926612",
    "subm_id": "1320291268"
}