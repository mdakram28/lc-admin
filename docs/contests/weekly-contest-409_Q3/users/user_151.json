{
    "username": "tarptaeya",
    "submission": "from random import random as R\n\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        root = None\n        for i in range(n):\n            root = insert(root, i)\n\n        ans = []\n        for u, v in queries:\n            root = cut(root, u, v)\n            ans.append(root.size - 1)\n\n        return ans\n\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.size = 1\n        self.weight = R()\n        self.left = self.right = None\n\n\ndef split(root, val):\n    if not root:\n        return None, None, None\n    elif root.val < val:\n        l, n, r = split(root.right, val)\n        root.right = l\n        updateprops(root)\n        return root, n, r\n    elif root.val > val:\n        l, n, r = split(root.left, val)\n        root.left = r\n        updateprops(root)\n        return l, n, root\n    else:\n        l, r = root.left, root.right\n        root.left = root.right = None\n        updateprops(root)\n        return l, root, r\n\n\ndef join(A, B):\n    if not A: return B\n    if not B: return A\n    if A.weight < B.weight:\n        A.right = join(A.right, B)\n        updateprops(A)\n        return A\n    else:\n        B.left = join(A, B.left)\n        updateprops(B)\n        return B\n\n\ndef updateprops(root):\n    if not root:\n        return\n    sz = 1\n    if root.left:\n        sz += root.left.size\n    if root.right:\n        sz += root.right.size\n    root.size = sz\n\n\ndef insert(root, val):\n    l, n, r = split(root, val)\n    if not n:\n        n = Node(val)\n    return join(join(l, n), r)\n\n\ndef cut(root, lo, hi):\n    l, n, r = split(root, lo)\n    l = join(l, n)\n    _, n, r = split(r, hi)\n    r = join(n, r)\n    return join(l, r)\n\n\ndef debug(root):\n    def inorder(root):\n        if not root:\n            return\n        inorder(root.left)\n        ans.append(root.val)\n        inorder(root.right)\n\n    ans = []\n    inorder(root)\n    return ans",
    "submit_ts": "1722740351",
    "subm_id": "1343717570"
}