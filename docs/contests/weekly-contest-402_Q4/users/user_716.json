{
    "username": "user3142l",
    "submission": "class Solution {\npublic:\n    vector<int> bit;\n    \n    void update(int idx, int d) {\n        idx++;\n        for (int i=idx; i<bit.size(); i += i&-i) {\n            bit[i] += d;\n        }\n    }\n    \n    int sum(int idx) {\n        idx++;\n        int res = 0;\n        for (int i=idx; i>0; i -= i&-i) {\n            res += bit[i];\n        }\n        return res;\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        unordered_set<int> peaks;\n        bit.assign(n + 1, 0);\n        \n        for (int i=1; i<n-1; i++) {\n            if (nums[i] > nums[i-1] and nums[i] > nums[i+1]) {\n                peaks.insert(i);\n                update(i, 1);\n            }\n        }\n        vector<int> ans;\n\n        for (auto &q: queries) {\n            if (q[0] == 1) {\n                int l = q[1], r = q[2];\n                if (r-l < 2) ans.push_back(0);\n                else ans.push_back(sum(r - 1) - sum(l));\n            } else {\n                int idx = q[1], val = q[2];\n                nums[idx] = val;\n                if (idx + 1 < n and nums[idx + 1] <= nums[idx] and peaks.count(idx + 1)) {\n                    peaks.erase(idx + 1);\n                    update(idx + 1, -1);\n                }\n                if (idx + 2 < n and nums[idx + 2] < nums[idx + 1] and nums[idx] < nums[idx + 1] and !peaks.count(idx + 1)) {\n                    peaks.insert(idx + 1);\n                    update(idx + 1, 1);\n                }\n                if (idx - 1 >= 0 and nums[idx - 1] <= nums[idx] and peaks.count(idx - 1)) {\n                    peaks.erase(idx - 1);\n                    update(idx - 1, -1);\n                }\n                if (idx - 2 >= 0 and nums[idx - 2] < nums[idx - 1] and nums[idx] < nums[idx - 1] and !peaks.count(idx - 1)) {\n                    peaks.insert(idx - 1);\n                    update(idx - 1, 1);\n                }\n                if (idx - 1 >= 0 and idx + 1 < n and nums[idx + 1] < nums[idx] and nums[idx - 1] < nums[idx] and !peaks.count(idx)) {\n                    peaks.insert(idx);\n                    update(idx, 1);\n                }\n                \n                if (peaks.count(idx) and (nums[idx - 1] >= nums[idx] or nums[idx + 1] >= nums[idx])) {\n                    peaks.erase(idx);\n                    update(idx, -1);\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1718508310",
    "subm_id": "1289677618"
}