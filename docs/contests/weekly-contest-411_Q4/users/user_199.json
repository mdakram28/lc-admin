{
    "username": "faibzlz",
    "submission": "class Solution {\npublic:\n    vector<long long> ans;\n    int f[100005];\n    int g[100005];\n    int pre[100005];\n    long long sum_[100005];\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        f[0] = s[0] == '1';\n        g[0] = s[0] == '0';\n        int n = s.size();\n        for(int i = 1; i < s.size(); i++) {\n            f[i] = f[i-1] + (s[i] == '1');\n            g[i] = g[i-1] + (s[i] == '0');\n        }\n        pre[0] = 0;\n        for(int i = 1; i < s.size(); i++) {\n            if(f[i] <= k || g[i] <= k) {\n                pre[i] = 0;\n                continue;\n            }\n            int l1 = lower_bound(f, f + i+1, f[i]-k) - f + 1;\n            int l2 = lower_bound(g, g + i+1, g[i]-k) - g + 1;\n            pre[i] = min(l1, l2);\n        }\n        sum_[0] = 1;\n      \n        for(int i = 1; i < n; i++) {\n         //   cout <<pre[i] << ' ' << i - pre[i] + 1 << endl;\n            sum_[i] = sum_[i-1] + i - pre[i] + 1;\n        }\n        for(auto &it : q) {\n            long long tmp = 0;\n            int l = it[0], r = it[1];\n            int id = lower_bound(pre + l, pre + r+1, l) - pre;\n            tmp = sum_[r] - sum_[id-1];\n            if(id > l) {\n                tmp += 1L * (1+id-l) *(id-l) / 2;\n            }\n            ans.push_back(tmp);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1723950528",
    "subm_id": "556399607"
}