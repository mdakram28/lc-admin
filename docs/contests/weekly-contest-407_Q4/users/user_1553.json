{
    "username": "asde117",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long res = 0;\n\n        int n = nums.size();\n\n        vector<int> diffs(n);\n\n        for (int i = 0; i < n; i++) {\n            diffs[i] = target[i] - nums[i];\n        }\n        // 9 2 6 10 4 8 3 4 2 3\n        // 9 5 5 1  7 9 8 7 6 5\n        // 0 -3 1 9 -3 -1 -5 -4 -2\n        // 4 + 8 + 3 + 0 + 4\n        int prev = 0; \n        for (int i = 0; i < n; i++) {\n            int cur = diffs[i];\n            if (cur >= 0 && prev >= 0) {\n                res += (cur - min(cur, prev));\n            } else if (cur < 0 && prev < 0) {\n                res += abs(cur - max(cur, prev));\n            } else {\n                res += abs(cur);\n            }\n            prev = cur;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532716",
    "subm_id": "1327992361"
}