{
    "username": "dmunjpata",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k)\n    {\n        int main_ans = 0;\n        int size_op = a.size()-1;\n        for(int i = 0; i < k - 1; i++)\n        {\n            a.push_back(a[i]);\n        }\n\n        int start = 0;\n        int cnt = 0;\n        int size = k - 2;\n        int end = 1;\n\n        while(size--)\n        {\n            if(a[end] != a[end + 1] && a[end] != a[end - 1])\n            {\n                cnt++;\n            }\n            end++;\n        }\n\n        if(cnt == k - 2)\n        {\n            main_ans++;\n        }\n\n        while(start+1 <= size_op )\n        {\n            start++;\n            end++;\n            \n            if(a[start] != a[start - 1] && a[start] != a[start + 1])\n            {\n                cnt--;\n            }\n\n            if(a[end - 1] != a[end] && a[end - 1] != a[end - 2])\n            {\n                cnt++;\n            }\n\n            if(cnt == k - 2)\n            {\n                // cout << \"start \" << start << endl;\n                main_ans++;\n            }\n        }\n\n        return main_ans;\n    }\n};\n",
    "submit_ts": "1720278146",
    "subm_id": "1311696402"
}