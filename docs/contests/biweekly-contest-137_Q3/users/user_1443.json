{
    "username": "Kartikey gupta",
    "submission": "\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& gloop) {\n        int zorp = gloop.size();\n        int wizzle = gloop[0].size();\n        long long maxPloob = LLONG_MIN;\n        vector<vector<long long>> blorf(zorp, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> frizzle(zorp, vector<int>(3, -1));\n\n        for (int plorp = 0; plorp < zorp; ++plorp) {\n            vector<pair<long long, int>> zibble;\n            for (int bleep = 0; bleep < wizzle; ++bleep) {\n                zibble.emplace_back(gloop[plorp][bleep], bleep);\n            }\n            sort(zibble.rbegin(), zibble.rend()); \n\n            for (int floob = 0; floob < 3 && floob < wizzle; ++floob) {\n                blorf[plorp][floob] = zibble[floob].first;\n                frizzle[plorp][floob] = zibble[floob].second;\n            }\n        }\n\n        // Try all combinations of all 3 different rows.\n        for (int rowA = 0; rowA < zorp; ++rowA) {\n            for (int rowB = rowA + 1; rowB < zorp; ++rowB) {\n                for (int rowC = rowB + 1; rowC < zorp; ++rowC) {\n                    for (int colA = 0; colA < 3; ++colA) {\n                        for (int colB = 0; colB < 3; ++colB) {\n                            if (frizzle[rowB][colB] == frizzle[rowA][colA]) continue;\n                            for (int colC = 0; colC < 3; ++colC) {\n                                if (frizzle[rowC][colC] == frizzle[rowA][colA] || frizzle[rowC][colC] == frizzle[rowB][colB]) continue;\n\n                                long long currSum = blorf[rowA][colA] + blorf[rowB][colB] + blorf[rowC][colC];\n                                maxPloob = max(maxPloob, currSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxPloob;\n    }\n};\n",
    "submit_ts": "1723910397",
    "subm_id": "1359229320"
}