{
    "username": "rastsislau",
    "submission": "class Solution {\npublic:\n    \n    vector<int> to_binary_vector(int num) {\n        vector<int> binary_vector;\n\n        if (num == 0) {\n            binary_vector.push_back(0);\n            return binary_vector;\n        }\n\n        while (num > 0) {\n            binary_vector.push_back(num % 2);\n            num /= 2;\n        }\n        \n        while (binary_vector.size() < 33)\n        {\n             binary_vector.push_back(0);\n        }\n\n        reverse(binary_vector.begin(), binary_vector.end());\n        return binary_vector;\n    }\n    \n    int get_and(const vector<int>& ones, const vector<int>& zeros) {\n        int num = 0;\n        long long power_of_two = 1;\n\n        for (int i = ones.size() - 1; i >= 0; --i) {\n            if (ones[i] != 0 && zeros[i] == 0) {\n                num += power_of_two;\n            }\n            power_of_two *= 2;\n        }\n\n        return num;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector <int> zeros(33,0), ones(33,0);\n        int ans = abs(k-nums[0]);\n        int cur = 0;\n        int l = 0;\n        int r = 0;\n        while (l < n)\n        {\n            //cout << l << \" \" << r << \" \" << cur << endl;\n            if (l == r || cur > k)\n            {\n                if (r >= n)\n                {\n                    return ans;\n                }\n                auto bin = to_binary_vector(nums[r]);\n                for (int i=0;i<33;i++)\n                {\n                    if (bin[i] == 0)\n                    {\n                        zeros[i]++;\n                    }\n                    else\n                    {\n                        ones[i]++;\n                    }\n                }\n                cur = get_and(ones, zeros);\n                ans = min(ans, abs(k - cur));\n                if (ans == 0)\n                {\n                    return 0;\n                }\n                r++;\n            }\n            else\n            {\n                auto bin = to_binary_vector(nums[l]);\n                for (int i=0;i<33;i++)\n                {\n                    if (bin[i] == 0)\n                    {\n                        zeros[i]--;\n                    }\n                    else\n                    {\n                        ones[i]--;\n                    }\n                }\n                cur = get_and(ones, zeros);\n                l++;\n                if (l != r)\n                {\n                    ans = min(ans, abs(k - cur));\n                }\n                if (ans == 0)\n                {\n                    return 0;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298835.0
}