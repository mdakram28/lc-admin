{
    "username": "srinadh_narne",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(),verticalCut.end(),greater<int>());\n\n        int r = 0, c = 0;\n        int rowPieces = 1, colPieces = 1;\n        long long ans = 0;\n\n        for(; r<m-1&&c<n-1;){\n            if(horizontalCut[r]>verticalCut[c]){\n                ans+=horizontalCut[r++]*colPieces;\n                rowPieces++;\n            } else {\n                ans+=verticalCut[c++]*rowPieces;\n                colPieces++;\n            }\n        }\n\n        while(c<n-1){\n            ans+=verticalCut[c++]*rowPieces;\n        }\n\n        while(r<m-1){\n            ans+=horizontalCut[r++]*colPieces;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926413",
    "subm_id": "1320285552"
}