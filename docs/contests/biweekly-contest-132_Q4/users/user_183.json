{
    "username": "AndrewAntipov",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        int n = nums.length;\n        int[] max = new int[k + 1];\n        int[] last = new int[k + 1];\n        \n        int[] secondMax = new int[k + 1];\n        int[] secondLast = new int[k + 1];\n        \n        int[][] dp = new int[n][k + 1];\n        \n        max[0] = 1;\n        last[0] = nums[0];\n        dp[0][0] = 1;\n        int res = 1;\n        \n        Map<Integer, Integer> prevIndex = new HashMap<>();\n        prevIndex.put(nums[0], 0);\n        \n        for (int i = 1; i < n; i++) {\n            int cur = nums[i];\n            dp[i][0] = 1;\n            \n            int prev = prevIndex.getOrDefault(cur, -1);\n            if (prev != -1) {\n                for (int j = 0; j < k + 1; j++) {\n                    dp[i][j] = Math.max(dp[i][j], dp[prev][j] + 1);\n                }\n            }\n            \n            for (int j = 1; j < k + 1; j++) {\n                if (last[j - 1] != cur) {\n                    dp[i][j] = Math.max(dp[i][j], max[j - 1] + 1);\n                } else {\n                    dp[i][j] = Math.max(dp[i][j], secondMax[j - 1] + 1);\n                }\n            }\n            \n            for (int j = 0; j < k; j++) {\n                int val = dp[i][j];\n                \n                if (val > max[j]) {\n                    secondMax[j] = max[j];\n                    secondLast[j] = last[j];\n                    max[j] = val;\n                    last[j] = cur;\n                } else if (val > secondMax[j]) {\n                    secondMax[j] = val;\n                    secondLast[j] = cur;\n                }\n            }\n            \n            prevIndex.put(cur, i);\n        }\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < k + 1; j++) {\n                res = Math.max(res, dp[i][j]);\n            }\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1717860738",
    "subm_id": "1281767721"
}