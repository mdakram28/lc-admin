{
    "username": "am_607",
    "submission": "#include <vector>\n#include <unordered_map>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int calc(vector<int>& a, int diff, bool& flag, int k) {\n        int cnt = 0;\n        int n = a.size();\n        for (int i = 0; i < n / 2; i++) {\n            if(abs(a[i]-a[n-i-1])==diff)continue;\n            else if ((a[i] - 0 >= diff) || (k - a[i] >= diff) || (a[n - i - 1] - 0 >= diff) || (k - a[n - i - 1] >= diff)) {\n                cnt += 1;\n            } \n            else {\n                cnt += 2;\n                flag = false;\n            }\n        }\n        return cnt;\n    }\n\n    int minChanges(vector<int>& a, int k) {\n        int n = a.size();\n\n        unordered_map<int, int> mp;\n        for (int i = 0; i < n / 2; i++) {\n            mp[abs(a[i] - a[n - i - 1])]++;\n        }\n\n        struct comp {\n            bool operator()(pair<int, int> c, pair<int, int> d) {\n                if (c.first != d.first) return c.first < d.first;\n                else return c.second > d.second;\n            }\n        };\n        priority_queue<pair<int, int>, vector<pair<int, int>>, comp> pq;\n\n        for (auto it : mp) {\n            pq.push({it.second, it.first});\n        }\n//         while(pq.size()>0){\n//             auto it=pq.top();\n//             pq.pop();\n            \n//             cout<<it.first<<\" \"<<it.second<<endl;\n//         }\n\n        int maxi = 1e9;\n\n        while (!pq.empty()) {\n            auto it = pq.top();\n            pq.pop();\n\n            int diff = it.second;\n            int fre = it.first;\n            bool flag = true;\n            int c = calc(a, diff, flag, k);\n            maxi = min(maxi, c);\n            if (flag == true) {\n                return maxi;\n            }\n        }\n        return maxi;\n    }\n};\n",
    "submit_ts": "1721489947",
    "subm_id": "1327468503"
}