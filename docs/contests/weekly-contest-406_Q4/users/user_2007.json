{
    "username": "fast_coder",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), std::greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), std::greater<int>());\n\n        long long int h = 0, v = 0;\n        long long int horizontalPieces = 1, verticalPieces = 1;\n        long long  totalCost = 0;\n\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h++;\n            } else {\n                totalCost += verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v++;\n            }\n        }\n\n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * verticalPieces;\n            horizontalPieces++;\n            h++;\n        }\n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * horizontalPieces;\n            verticalPieces++;\n            v++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925981",
    "subm_id": "1320272272"
}