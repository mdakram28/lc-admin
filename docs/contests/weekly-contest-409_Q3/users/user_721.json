{
    "username": "kirya2604",
    "submission": "\n\n\nclass Solution {\npublic:\n    int t[401110] = {0};\n\nvoid build (int v, int tl, int tr) {\n\tif (tl == tr)\n\t\tt[v] = 1;\n\telse {\n\t\tint tm = (tl + tr) / 2;\n\t\tbuild (v*2, tl, tm);\n\t\tbuild ( v*2+1, tm+1, tr);\n\t\tt[v] = t[v*2] + t[v*2+1];\n\t}\n}\n\nvoid push (int v) {\n\tif (t[v] == 0) {\n\t\tt[v*2] = t[v*2+1] = t[v];\n\t}\n}\n \nvoid update (int v, int tl, int tr, int l, int r, int color) {\n\tif (l > r)\n\t\treturn;\n    if (tl == l && tr == r)\n    {\n        t[v] = 0;\n        return ;\n    }\n\telse {\n        push(v);\n\t\tint tm = (tl + tr) / 2;\n\t\tupdate (v*2, tl, tm, l, min(r,tm), color);\n\t\tupdate (v*2+1, tm+1, tr, max(l,tm+1), r, color);\n        t[v] = t[2*v] + t[2*v+1];\n\t}\n}\n\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        for (int i = 0; i < 3* n + n; i ++) t[i] = 0;\n        for (int i = 0; i + 1 < n; i ++) t[i] = 1;\n        \n        build(1, 0, n - 1);\n        update(1, 0,  n-1, n-1 , n-1, 0);\n        cout << t[1] << endl;\n\n        vector<int> results;\n        for (auto x : queries)\n        {\n            int l = x[0];\n            int r = x[1];\n            if (l + 1 <= r - 1)\n                update(1, 0, n-1, l + 1, r - 1, 0);\n            //cout << t[1] << endl;\n            results.push_back(t[1]);\n           // tree.modifyMany(l + 1, r, 0);\n        }\n        return results;\n    }\n};",
    "submit_ts": "1722741854",
    "subm_id": "1343755075"
}