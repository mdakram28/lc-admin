{
    "username": "rolikjr",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i=0; i<n/2; i++){\n            int dif = Math.abs(nums[i] - nums[n-1-i]);\n            map.put(dif, map.getOrDefault(dif, 0) + 1);\n        }\n        int res = n/2;\n        List<int[]> list = new ArrayList<>();\n\n        for (int i : map.keySet()){\n            list.add(new int[]{map.get(i), i});\n        }\n        Collections.sort(list, (a, b) -> (- a[0] + b[0]));\n\n        for (int[] arr : list){\n            int cha = n/2 - arr[0];\n            int x = arr[1];\n            if (cha >= res) break;\n            int changes = numOfChanges(nums, n, k, x);\n            res = Math.min(res, changes);\n        }\n        \n        return res;\n    }\n\n    private int numOfChanges(int[] nums, int n, int k, int x){\n        int cha = 0;\n        for (int i=0; i<n/2; i++){\n            int min = Math.min(nums[i], nums[n-1-i]);\n            int max = Math.max(nums[i], nums[n-1-i]);\n            if (max - min == x) continue;\n            if (min + x <= k) cha++;\n            else if (max - x >= 0) cha++;\n            else cha += 2;\n        }\n        return cha;\n    }\n}",
    "submit_ts": "1721489244",
    "subm_id": "1327447409"
}