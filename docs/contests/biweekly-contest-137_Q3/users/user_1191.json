{
    "username": "Hui Liang Peng",
    "submission": "from heapq import heappushpop\n\n\nclass Solution:\n    def maximumValueSum(self, board) -> int:\n        top_values = {}\n\n        def find_top3(arr, r, c):\n            tops = [\n                (float(\"-inf\"), -1, -1),\n                (float(\"-inf\"), -1, -1),\n                (float(\"-inf\"), -1, -1),\n            ]\n            if r is not None:\n                # r given, iterate c\n                for c in range(len(arr[0])):\n                    heappushpop(tops, (arr[r][c], r, c))\n            else:\n                # c given, iterate r\n                for r in range(len(arr)):\n                    heappushpop(tops, (arr[r][c], r, c))\n            for v, r, c in tops:\n                top_values[(r, c)] = v\n\n        for r in range(len(board)):\n            find_top3(board, r, None)\n        for c in range(len(board[1])):\n            find_top3(board, None, c)\n        # print(top_values)\n        max_values = sorted([(v, r, c) for (r, c), v in top_values.items()],reverse=True)\n        if max_values[0][0] == max_values[-1][0]:\n            return 3*max_values[0][0]\n        max_total = float(\"-inf\")\n        for i in range(len(max_values)):\n            r_seen = set()\n            c_seen = set()\n            v, r, c = max_values[i]\n            r_seen.add(r)\n            c_seen.add(c)\n            curr_total = v\n            for j in range(i, len(max_values)):\n                vj, rj, cj = max_values[j]\n                if rj in r_seen or cj in c_seen:\n                    continue\n                curr_total += vj\n                r_seen.add(rj)\n                c_seen.add(cj)\n                for k in range(j, len(max_values)):\n                    vk, rk, ck = max_values[k]\n                    if rk in r_seen or ck in c_seen:\n                        continue\n                    curr_total += vk\n                    # r_seen.add(r)\n                    # c_seen.add(c)\n                    if curr_total > max_total:\n                        max_total = curr_total\n                    curr_total -= vk\n                    break\n                r_seen.remove(rj)\n                c_seen.remove(cj)\n                curr_total -= vj\n        return max_total",
    "submit_ts": "1723909783",
    "subm_id": "1359205638"
}