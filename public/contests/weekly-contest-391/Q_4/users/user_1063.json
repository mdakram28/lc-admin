{
    "username": "slowknight10",
    "submission": "#define lli long long int \n#define ld long double\n#define vi vector<int>\n#define vlli vector<lli>\n#define vpii vector<pair<int, int>>\n#define pb push_back \n\ntemplate<typename T> void debug(T _a) {cout << _a << \" \";}\ntemplate<typename T1, typename T2> void debug(pair<T1, T2> _p) {cout<<\"{\";debug(_p.first);cout<<\": \";debug(_p.second);cout<<\"}\\n\";}\ntemplate<typename T> void debug(vector<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(deque<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(multiset<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(multiset<T, greater<T>> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(set<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T1, typename T2> void debug(map<T1, T2> _mm) {for (auto h: _mm) debug(h);}\n\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        multiset<int> sx, sy;\n        multiset<int, greater<int>> gx, gy;\n        for (auto &i: p) {\n            sx.insert(i[0]+i[1]);\n            sy.insert(i[0]-i[1]);\n            \n            gx.insert(i[0]+i[1]);\n            gy.insert(i[0]-i[1]);\n        }\n        \n        \n        int ans = INT_MAX;\n        \n        for (auto &i: p) {\n            sx.erase(sx.find(i[0]+i[1]));\n            sy.erase(sy.find(i[0]-i[1]));\n            gx.erase(gx.find(i[0]+i[1]));\n            gy.erase(gy.find(i[0]-i[1]));\n            \n            \n            int xx = *gx.begin() - *sx.begin();\n            int yy = *gy.begin() - *sy.begin();\n            \n//             debug(sx); debug(gx);\n            \n//             debug(sy); debug(gy);\n//             cout << xx << \" \" << yy << endl;\n//             cout << \"=============\\n\";\n            \n            ans = min(ans, max(xx, yy));\n            \n            sx.insert(i[0]+i[1]);\n            sy.insert(i[0]-i[1]);\n            \n            gx.insert(i[0]+i[1]);\n            gy.insert(i[0]-i[1]);\n            \n            \n        }\n        return ans;\n    }\n};"
}