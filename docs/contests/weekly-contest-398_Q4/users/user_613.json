{
    "username": "votrubac",
    "submission": "class Solution {\npublic:\nunordered_map<int, int> m[31][2] = {};\nint dfs(int i, int jump, bool op1, int k) {\n    if (i - 1 > k)\n        return 0;\n    auto it = m[jump][op1].find(i);\n    if (it != end(m[jump][op1]))\n        return it->second;\n    int res = (i == k);\n    if (!op1 && i > 0)\n        res += dfs(i - 1, jump, true, k);  \n    return m[jump][op1][i] = res + dfs(i + (1 << jump), jump + 1, false, k);\n}\nint waysToReachStair(int k) {\n    return dfs(1, 0, false, k);\n}\n};",
    "submit_ts": 1716088490.0
}