{
    "username": "A_Garg",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        for(int i = 0;i<n/2;i++)        if(nums[i] > nums[n-i-1])       swap(nums[i],nums[n-i-1]);\n        \n        unordered_map<int,int>m;\n        for(int i = 0;i<n/2;i++)      m[abs(nums[i]-nums[n-i-1])]++;\n        \n        int a[k+1];\n        memset(a,0,sizeof(a));\n        \n        for(int i = 0;i<n/2;i++){\n            // cout<<i<<\" \"<<n-i-1<<\"--\\n\";\n            // cout<<a[i]<<\" \"<<a[n-i-1]<<\" \"<<k<<\"\\n\";\n            a[max(k-nums[i], nums[n-i-1])]++;\n        }\n        \n        for(int i = 1;i<=k;i++)           a[i] += a[i-1];\n        \n        int ans = INT_MAX;\n        \n        for(auto it: m){\n            int rem = n/2-it.second;\n            // cout<<it.first<<\" \"<<it.second<<\" \"<<rem<<\"\\n\";\n            if(it.first == 0)       ans = min(ans,rem);\n            else                    ans = min(ans,rem+a[it.first-1]);\n        }\n        return ans;\n        \n    }\n};\n\n/*\n\n;\n20\n\n*/",
    "submit_ts": "1721489922",
    "subm_id": "1327467754"
}