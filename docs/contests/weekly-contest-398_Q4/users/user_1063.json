{
    "username": "iamhariom28",
    "submission": "class Solution {\npublic:\n    unordered_map<int,vector<vector<int>>> dp;\n    int solve(int k, int stair, int jump, int opr1){\n        if(stair-5 > k || jump > 31) return 0;\n        \n        if(dp.count(stair) && dp[stair][jump][opr1] != -1) return dp[stair][jump][opr1];\n        \n        int ans = (stair == k);\n        \n        \n        ans += (stair + (1<<jump) <= k+1) ? solve(k, stair + (1<<jump), jump+1, 0) : 0;\n        ans += (stair-1 >= 0 && opr1 == 0) ? solve(k, stair-1, jump, 1) : 0;\n        \n        dp[stair].resize(32, vector<int>(2, -1));\n        \n        return dp[stair][jump][opr1] = ans;\n    }\n    int waysToReachStair(int k) {\n        return solve(k, 1, 0, 0);\n    }\n};",
    "submit_ts": "1716089873",
    "subm_id": "1261853474"
}