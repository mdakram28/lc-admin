{
    "username": "bruhmoment2000",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> bitset(31, 0);\n        int min_diff = INT_MAX;\n        for(int l = 0, r = 0; r < n; r++) {\n            int num = nums[r];\n            auto bits = get_bits(num);\n            add(bitset, bits);\n            min_diff = min(min_diff, abs(k - get_num(bitset)));\n            while(l < r and get_num(bitset) < k) {\n                auto l_bits = get_bits(nums[l]);\n                subtract(bitset, l_bits);\n                l++;\n                min_diff = min(min_diff, abs(k - get_num(bitset)));\n            }\n        }\n        \n        return min_diff;\n    }\n    \n    vector<int> get_bits(int num) {\n        vector<int> bits(31, 0);\n        for(int i = 0; i < 31; i++) {\n            if(num % 2 == 0) {\n                bits[i]++;\n            }\n            num /= 2;\n        }\n        return bits;\n    }\n    \n    int get_num(vector<int> &bits) {\n        int num = 0;\n        for(int i = 0; i < 31; i++) {\n            int bit = (bits[i] == 0 ? 1 : 0);\n            num = num | (bit << i);\n        }\n        return num;\n    }\n    \n    void add(vector<int> &a, vector<int> &b) {\n        for(int i = 0; i < 31; i++) {\n            a[i] += b[i];\n        }\n    }\n    \n    void subtract(vector<int> &a, vector<int> &b) {\n        for(int i = 0; i < 31; i++) {\n            a[i] -= b[i];\n        }\n    }\n};",
    "submit_ts": 1717299554.0
}