{
    "username": "horiseun",
    "submission": "class Solution {\npublic:\n  vector<int> adj1[100005], adj2[100005];\n  int dist[200005];\n  \n  void dfs31(int curr, int par) {\n    for (int i : adj1[curr]) {\n      if (i == par) continue;\n      dist[i] = dist[curr] + 1;\n      dfs31(i, curr);\n    }\n  }\n  \n  void dfs32(int curr, int par) {\n    for (int i : adj2[curr]) {\n      if (i == par) continue;\n      dist[i] = dist[curr] + 1;\n      dfs32(i, curr);\n    }\n  }\n\n  int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n    int mx1 = 0, mx2 = 0;\n    for (auto v : edges1) {\n      adj1[v[0]].push_back(v[1]);\n      adj1[v[1]].push_back(v[0]);\n      mx1 = max({mx1, v[0], v[1]});\n    }\n    for (auto v : edges2) {\n      adj2[v[0]].push_back(v[1]);\n      adj2[v[1]].push_back(v[0]);\n      mx2 = max({mx2, v[0], v[1]});\n    }\n    dfs31(0, -1);\n    int mx = -1, mxn = -1;\n    for (int i = 0; i <= mx1; i++) {\n      if (dist[i] > mx) {\n        mx = dist[i];\n        mxn = i;\n      }\n    }\n    fill(dist, dist + mx1 + 1, 0);\n    dfs31(mxn, -1);\n    mx = -1;\n    for (int i = 0; i <= mx1; i++) {\n      mx = max(mx, dist[i]);\n    }\n    int d1 = mx;\n    fill(dist, dist + mx2 + 1, 0);\n    dfs32(0, -1);\n    mx = -1, mxn = -1;\n    for (int i = 0; i <= mx2; i++) {\n      if (dist[i] > mx) {\n        mx = dist[i];\n        mxn = i;\n      }\n    }\n    fill(dist, dist + mx2 + 1, 0);\n    dfs32(mxn, -1);\n    mx = -1;\n    for (int i = 0; i <= mx2; i++) {\n      mx = max(mx, dist[i]);\n    }\n    int d2 = mx;\n    return max({(d1 + 1) / 2 + (d2 + 1) / 2 + 1, d1, d2});\n  }\n};",
    "submit_ts": 1719717697.0
}