{
    "username": "nitinsrichakri",
    "submission": "class Solution {\npublic:\n    class Trie {\n    public:\n        vector<Trie*> to;\n        bool ps;\n        int cost;\n        Trie() {\n            to = vector<Trie*> (26,NULL);\n            ps=false;\n            cost=1e9;\n        }\n        \n        void insert(string &word,int ct) {\n            Trie* temp=this;\n            for(auto c:word)\n            {\n                if(temp->to[c-'a']==NULL)temp->to[c-'a']=new Trie();\n                temp=temp->to[c-'a'];\n            }\n            temp->ps=true;\n            temp->cost=min(ct,temp->cost);\n        }\n        \n        int search(string &s,int sp,vector<int> &dp) {\n            if(sp==s.size())return 0;\n            if(dp[sp]!=-1)return dp[sp];\n            int ans=1e9;\n            Trie* temp=this;\n            for(int i=sp;i<s.size();i++)\n            {\n                if(temp->to[s[i]-'a']==NULL)break;\n                temp=temp->to[s[i]-'a'];\n                if(temp->ps)\n                {\n                    ans=min(ans,temp->cost+this->search(s,i+1,dp));\n                    // cout << sp << \" \" << temp->cost << \" \" << i+1 << endl;\n                }\n            }\n            dp[sp]=ans;\n            return ans;\n        }\n    };\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* a= new Trie();\n        int n=words.size();\n        for(int i=0;i<n;i++)a->insert(words[i],costs[i]);\n        vector<int> dp(target.size(),-1);\n        int ans=a->search(target,0,dp);\n        if(ans==1e9)ans=-1;\n        return ans;\n    }\n};",
    "submit_ts": "1720322112",
    "subm_id": "1312341017"
}