{
    "username": "9560kiran",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    \n    ll seg[8*100005];\n\nll query(int ind,int l,int r,int low,int high)\n{\n     if(low>=l && high<=r){\n         return seg[ind];\n     }\n     if(l>high || r<low) return 0;\n     int mid=(low+high)/2;\n     ll left= query(2*ind+1,l,r,low,mid);\n     ll right= query(2*ind+2,l,r,mid+1,high);\n     return left+right;\n}\nvoid pointUpdate(int ind,int node,int val,int low,int high)\n{\n       if(low==high){\n            seg[ind]=val;\n            return ;\n       }\n       \n       int mid=(low+high)/2;\n       if(node>=low && node<=mid) pointUpdate(2*ind+1,node,val,low,mid);\n       else pointUpdate(2*ind+2,node,val,mid+1,high);\n       seg[ind]=seg[2*ind+1]+seg[2*ind+2];\n}\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n         int n=nums.size();\n         memset(seg,0,sizeof(seg));\n         for(int i=1;i<n-1;i++) if(nums[i]>nums[i-1] && nums[i]>nums[i+1]) pointUpdate(0,i,1,0,n-1);\n      \n         vector<int> ans;\n         for(auto q:queries){\n               int type=q[0];\n               int x=q[1];\n               int y=q[2];\n               if(type==1){\n                     \n                     x=x+1;\n                     y=y-1;\n                     int t=0;\n                     if(y>=x)t=query(0,x,y,0,n-1);\n                    \n                     ans.push_back(t);\n               }\n               else{\n                    \n                    nums[x]=y;\n                    if(x>0 && x<n-1) {\n                         if(nums[x-1]<nums[x] && nums[x]>nums[x+1])  pointUpdate(0,x,1,0,n-1);\n                         else pointUpdate(0,x,0,0,n-1);\n                    }\n                    if(x-2>=0){\n                         if(nums[x-1]>nums[x-2] && nums[x-1]>nums[x])  pointUpdate(0,x-1,1,0,n-1);\n                         else pointUpdate(0,x-1,0,0,n-1);\n                    }\n                    if(x+2<=n-1){\n                         if(nums[x+1]>nums[x+2] && nums[x+1]>nums[x]) pointUpdate(0,x+1,1,0,n-1);\n                         else pointUpdate(0,x+1,0,0,n-1);\n                    }\n                    \n               }\n         }\n        return ans;\n         \n    }\n};",
    "submit_ts": 1718508006.0
}