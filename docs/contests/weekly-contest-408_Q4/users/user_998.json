{
    "username": "a-dimitri",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> G(n);\n        for ( int i = 0; i < n; ++i ) {\n            for ( int j = i+1; j < n; ++j ) {\n                int x1 = circles[i][0], y1 = circles[i][1], r1 = circles[i][2];\n                int x2 = circles[j][0], y2 = circles[j][1], r2 = circles[j][2];\n                if ( sqrt(static_cast<long long>(x2-x1)*static_cast<long long>(x2-x1) + static_cast<long long>(y2-y1)*static_cast<long long>(y2-y1)) <= r1 + r2 ) {\n                    G[i].push_back(j);\n                    G[j].push_back(i);\n                }\n            }\n        }\n        vector<vector<int>> islands;\n        int comps = -1;\n        vector<int> visited(n, -1);\n        stack<int> S;\n        for ( int i = 0; i < n; ++i ) S.push(i);\n        while ( !S.empty() ) {\n            auto u = S.top();\n            S.pop();\n            int x = circles[u][0], y = circles[u][1], r = circles[u][2];\n            if ( y-r > Y || x-r > X ) continue;\n            if ( visited[u] == -1 ) {\n                visited[u] = ++comps;\n                islands.push_back({x-r,x+r,y+r,y-r});\n            } else {\n                islands[visited[u]][0] = min(x-r, islands[visited[u]][0]);\n                islands[visited[u]][1] = max(x+r, islands[visited[u]][1]);\n                islands[visited[u]][2] = max(y+r, islands[visited[u]][2]);\n                islands[visited[u]][3] = min(y-r, islands[visited[u]][3]);\n            }\n            for ( auto v : G[u] ) {\n                if ( visited[v] != -1 ) continue;\n                S.push(v);\n                visited[v] = comps;\n            }\n        }\n        for ( auto& island : islands ) {\n            if ( island[0] <= 0 && island[3] <= 0 ) return false;\n            if ( island[0] <= 0 && island[1] >= X ) return false;\n            if ( island[1] >= X && island[2] >= Y ) return false;\n            if ( island[2] >= Y && island[3] <= 0 ) return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138352",
    "subm_id": "1335788585"
}