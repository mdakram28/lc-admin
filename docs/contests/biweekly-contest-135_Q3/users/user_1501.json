{
    "username": "sidharthgrover28",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n         map<int, vector<int>> differencesMap;\n  vector<int> maxValues;\n\n  for (int i = 0; i < nums.size() / 2; i++) {\n    int firstElement = nums[i];\n    int secondElement = nums[nums.size() - i - 1];\n    int difference = abs(firstElement - secondElement);\n    int maxValue = max({firstElement, secondElement, k - firstElement, k - secondElement});\n    differencesMap[difference].push_back(maxValue);\n    maxValues.push_back(maxValue);\n  }\n\n  int result = nums.size();\n  sort(maxValues.begin(), maxValues.end());\n\n  for (auto &entry : differencesMap) {\n    int difference = entry.first;\n    int lowerBoundIndex = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n    int total = lowerBoundIndex * 2 + (nums.size() / 2 - lowerBoundIndex);\n\n    for (auto &value : entry.second) {\n      if (value < difference) {\n        total -= 2;\n      } else {\n        total -= 1;\n      }\n    }\n\n    result = min(result, total);\n  }\n\n  return result;\n    }\n};",
    "submit_ts": "1721488951",
    "subm_id": "1327438172"
}