{
    "username": "user9218i",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        long long ans = 0;\n        multiset<int> s, s1;\n        for(auto it : h)    s.insert(it);\n        for(auto it : v)    s1.insert(it);\n        \n        while(1) {\n            if(s.size() == 0 and s1.size() == 0)    break;\n            \n            int ss = INT_MAX, ss1 = INT_MAX;\n            if(s.size())   ss = *s.begin();\n            if(s1.size())   ss1 = *s1.begin();\n            \n            //cout << \"SZZ \" << s.size() << \" \"<< s1.size() << endl;\n            //cout << ss << \" \"<< ss1 << endl;\n            if(ss < ss1) {\n                ans += (long long)ss * (long long)(s1.size() + 1);\n                s.erase(s.find(ss));\n            }\n            else {\n                ans += (long long)ss1 * (long long)(s.size() + 1);\n                s1.erase(s1.find(ss1));\n            }\n        }\n        \n        return (ans);\n    }\n};",
    "submit_ts": "1720925538",
    "subm_id": "1320258053"
}