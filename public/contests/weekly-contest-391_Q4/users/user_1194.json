{
    "username": "ankangarai",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& v) {\n        int n = v.size();\n        vector <pair<int, int>> a(n), b(n);\n        for(int i = 0; i<n; i++){\n            a[i].first = v[i][0] + v[i][1]; a[i].second = i;\n            b[i].first = v[i][0] - v[i][1]; b[i].second = i;\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        int curr = INT_MAX;\n        for(int i = 0; i<n; i++){\n            int x, y, ans = INT_MIN;\n            if(a[0].second == i) ans = max(ans, a[n-1].first - a[1].first);\n            else if(a[n-1].second == i) ans = max(ans, a[n-2].first - a[0].first);\n            else ans = max(ans, a[n-1].first - a[0].first);\n            if(b[0].second == i) ans = max(ans, b[n-1].first - b[1].first);\n            else if(b[n-1].second == i) ans = max(ans, b[n-2].first - b[0].first);\n            else ans = max(ans, b[n-1].first - b[0].first);\n            curr = min(ans, curr);\n        }\n        return curr;\n    }\n};"
}