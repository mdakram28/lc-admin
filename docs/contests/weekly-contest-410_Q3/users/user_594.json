{
    "username": "aypatrl04",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int max = 0;\n        for (int num : nums) {\n            max = Math.max(max, num);\n        }\n        long[][][] dp = new long[n][max + 1][max + 1];\n        for (int cur = 0; cur <= nums[0]; cur++) {\n            dp[0][0][cur] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            for (int prev = 0; prev <= nums[i-1]; prev++) {\n                for (int cur = prev; cur <= nums[i]; cur++) {\n                    int prevArr2 = nums[i-1] - prev;\n                    int curArr2 = nums[i] - cur;\n                    if (curArr2 <= prevArr2) {\n                        for (int k = 0; k <= prev; k++) {\n                            dp[i][prev][cur] += dp[i-1][k][prev];\n                            dp[i][prev][cur] %= MOD;\n                        }\n                    }\n                }\n            }\n        }\n        long result = 0;\n        for (int prev = 0; prev <= max; prev++) {\n            for (int cur = 0; cur <= max; cur++) {\n                result += dp[n-1][prev][cur];\n                result %= MOD;\n            }\n        }\n\n        return (int) (result % MOD);\n    }\n}",
    "submit_ts": "1723346985",
    "subm_id": "1351589477"
}