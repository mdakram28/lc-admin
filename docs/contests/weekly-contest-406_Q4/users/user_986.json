{
    "username": "laughing-paredpy",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Integer[] row = new Integer[m - 1];\n        Integer[] col = new Integer[n - 1];\n        for (int i = 0; i < m - 1; i++) {\n            row[i] = i;\n        }\n        for (int i = 0; i < n - 1; i++) {\n            col[i] = i;\n        }\n        Arrays.sort(row, (a, b) -> horizontalCut[b] - horizontalCut[a]);\n        Arrays.sort(col, (a, b) -> verticalCut[b] - verticalCut[a]);\n        int frow = 1, fcol = 1;\n        int irow = 0, icol = 0;\n        long res = 0;\n        while (icol < n - 1 || irow < m - 1) {\n            if (icol < n - 1 && irow < m - 1) {\n                if (horizontalCut[row[irow]] > verticalCut[col[icol]]) {\n                    res += frow * horizontalCut[row[irow]];\n                    fcol++;\n                    irow++;\n                } else {\n                    res += fcol * verticalCut[col[icol]];\n                    icol++;\n                    frow++;\n                }\n\n            } else if (icol < n - 1) {\n                res += fcol * verticalCut[col[icol]];\n                icol++;\n            } else {\n                res += frow * horizontalCut[row[irow]];\n                irow++;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720925963",
    "subm_id": "546443131"
}