{
    "username": "sanmai_reddy377",
    "submission": "#pragma GCC optimize(\"unroll-loops,O3,Ofast\") //even 10^8+ also works with this\n#pragma GCC target(\"avx2,avx,fma,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\n \n#define pb push_back\n#define ppb pop_back\n#define ff first\n#define ss second\n#define rt return;\n#define set_bits(a) __builtin_popcountll(a)\n#define mine(a)    (*min_element((a).begin(), (a).end()))\n#define maxe(a)    (*max_element((a).begin(), (a).end()))\n#define mini(a)    ( min_element((a).begin(), (a).end()) - (a).begin())\n#define maxi(a)    ( max_element((a).begin(), (a).end()) - (a).begin())\n#define lowb(a, x) ( lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define uppb(a, x) ( upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define disp(a) {for(int i=0;i<a.size();i++) cout<<a[i]<<\" \"; cout<<endl;}\n#define all(v) (v).begin(),(v).end()\n#define inp(a) {for(int i=0;i<(a).size();i++) cin>>(a)[i];}\n// #define fill(a,b) memset(a, b, sizeof(a))\n#define prt(a) cout<<(a)<<endl;\n#define endl \"\\n\"\n#define NO cout<<\"NO\"<<endl;\n#define YES cout<<\"YES\"<<endl;\n#define vll vector<ll>\n#define vvll vector<vector<ll>>\n#define double double\n#define de(a) cout<<\"(\"<<a<<\")\"<<endl;\n#define de2(a) cout<<\"*\"<<a<<\"*\"<<endl;\n#define ft front()\n#define bk back()\n#define minpq priority_queue<ll, vector<ll>, greater<ll> >\n#define maxpq priority_queue<ll>\n#define nl cout<<endl;\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define cont continue;\n#define vpll vector<pair<ll,ll>>\n#define vvii vector<vector<int>>\n#define vi vector<int>\n#define vvpll vector<vector<pair<ll,ll>>>\n#define pll pair<ll,ll>\n\n//const ll M=998244353;\nconst ll M=1e9+7;\nconst ll N=1e5;  \nconst ll inf=1e12; //keeping inf may not give soln every time,try 1e9, 1e15\n\nll bit(ll n,ll i){return (n&(1LL<<i)) ? 1 : 0;}\n\nclass segtree{//1 based indexed segtree (point update,range query)  type-1\npublic:\n  vector<ll> tree;\n  segtree(ll n){\n    tree.resize(4*n);\n  }\n  void build(ll ind,ll st,ll ed,vi &v){//(1,0,n-1,v)\n     if(st==ed){\n       tree[ind]=v[st];\n       return;\n     }\n     ll mid=(st+ed)>>1;\n     build(2*ind,st,mid,v);\n     build(2*ind+1,mid+1,ed,v);\n     tree[ind]=tree[2*ind]&tree[2*ind+1];\n  }\n  ll query(ll ind,ll st,ll ed,ll l,ll r){//range query, write @l,r; like update in type-2\n     if(l<=st && ed<=r){\n      return tree[ind];\n     }\n     if(r<st || l>ed){\n        return LLONG_MAX;//Take care of this it will differ for diff types of queris\n     }\n     ll mid=(st+ed)>>1;\n     ll left = query(2*ind,st,mid,l,r);\n     ll right =query(2*ind+1,mid+1,ed,l,r);\n     return left&right;\n  }\n};\n\nclass Solution {\npublic:\n    ll getmx(segtree &s,ll ind,ll k,ll n){\n       ll ans=ind-1;\n       ll st=ind,ed=n-1;\n       while(st<=ed){\n         ll mid=(st+ed)>>1;\n         ll val=s.query(1,0,n-1,ind,mid);\n         if(val>k){\n            ans=mid;\n            st=mid+1;\n         }\n         else{\n           ed=mid-1;\n         }\n       }\n       return ans;\n    }\n    ll getmn(segtree &s,ll ind,ll k,ll n){\n       ll ans=n;\n       ll st=ind,ed=n-1;\n       while(st<=ed){\n         ll mid=(st+ed)>>1;\n         ll val=s.query(1,0,n-1,ind,mid);\n         if(val>=k){\n            st=mid+1;\n         }\n         else{\n          //  de(val)\n           ans=mid;\n           ed=mid-1;\n         }\n       }\n       return ans;\n    }\n    long long countSubarrays(vector<int>& v, int k) {\n        ll n=v.size(),ans=0;\n        segtree st(n);\n        st.build(1,0,n-1,v);\n        for(int i=0;i<n;i++){\n          ll chk=st.query(1,0,n-1,i,n-1);\n          if(v[i]<k || chk>k) continue;\n          ll x=getmn(st,i,k,n),y=getmx(st,i,k,n);\n          // cout<<i<<\" \"<<x<<\" \"<<y<<endl;\n          ll val=x-y-1;\n          ans+=val;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278695",
    "subm_id": "1311720296"
}