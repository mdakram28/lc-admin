{
    "username": "yuvisai123",
    "submission": "class Trie {\n    public Node root;\n    public Trie() {\n        root = new Node();\n    }\n\n    public void insert(String word, int cost) {\n        Node node = root;\n        for (char c : word.toCharArray()) {\n            if (node.children.containsKey(c)) {\n                node = node.children.get(c);\n            }\n            else{\n                node.children.put(c, new Node());\n                node = node.children.get(c);\n            }\n        }\n        node.cost = Math.min(node.cost, cost);\n    }\n}\n\nclass Solution {\n    public int chmyans(int s,Trie trie,String target){\n        int[] mydparr = new int[s + 1];\n        for (int i = 0; i <= s; i++) {\n            mydparr[i] = Integer.MAX_VALUE;\n        }\n        mydparr[0] = 0;\n\n        for (int i = 0; i < s; i++) {\n            if (mydparr[i] == Integer.MAX_VALUE) continue;\n            Node node = trie.root;\n            for (int j = i; j < s; j++) {\n                if (!node.children.containsKey(target.charAt(j))) break;\n                node = node.children.get(target.charAt(j));\n                if (node.cost != Integer.MAX_VALUE) {\n                    mydparr[j + 1] = Math.min(mydparr[j + 1], mydparr[i] + node.cost);\n                }\n            }\n        }\n\n        return mydparr[s] == Integer.MAX_VALUE ? -1 : mydparr[s];\n    }\n\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n        int myyuvians=chmyans(n,trie,target);\n        return myyuvians;\n    }\n}\n\nclass Node {\n    public HashMap<Character, Node> children;\n    public int cost;\n    public Node() {\n        children = new HashMap<>();\n        cost = Integer.MAX_VALUE;\n    }\n}",
    "submit_ts": "1720323384",
    "subm_id": "1312374219"
}