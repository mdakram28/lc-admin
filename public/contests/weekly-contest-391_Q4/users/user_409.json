{
    "username": "no_lie",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    int minimumDistance(vector<vector<int>>& points) {\n        ll n = points.size();\n        multiset<ll> sum;\n        multiset<ll> diff;\n        for(int i=0;i<n;i++){\n            sum.insert(points[i][0]+points[i][1]);\n            diff.insert(points[i][0]-points[i][1]);\n        }\n        ll mndist = 1e18;\n        for(int i=0;i<n;i++){\n            ll sumrem = points[i][0]+points[i][1];\n            ll diffrem = points[i][0]-points[i][1];\n            sum.erase(sum.find(sumrem));\n            diff.erase(diff.find(diffrem));\n            ll tmpans1 = ((*sum.rbegin())- (*sum.begin()));\n            ll tmpans2 = ((*diff.rbegin())- (*diff.begin()));\n            ll tmpans = max(tmpans1,tmpans2);\n            mndist= min(mndist,tmpans);\n            sum.insert(sumrem);\n            diff.insert(diffrem);\n        }\n        return mndist;\n    }\n};"
}