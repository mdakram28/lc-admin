{
    "username": "zephyrr",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        \n        n = len(nums)\n        res = []\n        arr = [0 for _ in range(n)]\n        for i in range(1,n-1):\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                arr[i] = 1\n        #print(arr)\n        st = [0 for _ in range(4*n)]       \n        \n        \n        def bd(v,l,r):\n            nonlocal arr\n            if l == r:\n                st[v] = arr[l]\n            else:\n                m = (l+r)//2\n                bd(2*v,l,m)\n                bd(2*v+1,m+1,r)\n                st[v] = st[2*v] + st[2*v + 1]\n        \n        bd(1,0,n-1)\n        \n        def ssum(v,ll,rr,l,r):\n            if l>r:\n                return 0\n            if l == ll and r == rr:\n                return st[v]\n            m = (ll+rr)//2\n            return ssum(2*v,ll,m,l,min(r,m)) + ssum(2*v+1, m+1,rr,max(l,m+1),r)\n        \n        def update(v,ll,rr,ind,val):\n            if ll == rr:\n                st[v] = val\n            else:\n                m = (ll+rr)//2\n                if (ind <= m):\n                    update(2*v,ll,m,ind,val)\n                else:\n                    update(2*v+1,m+1,rr,ind,val)\n                st[v] = st[2*v] + st[2*v+1]\n        \n        #print(arr)\n        #print(st)\n        \n        for a,b,c in queries:\n            if a == 1:\n                tmp = ssum(1,0,n-1,b,c) - arr[b]\n                if b != c:\n                    tmp -= arr[c]\n                res.append(tmp)\n            else:\n                nums[b] = c\n                if b+1 < len(nums) and arr[b+1] == 1 and nums[b+1]<=c:\n                    arr[b+1] = 0\n                    update(1,0,n-1,b+1,0)\n                elif b+2 < len(nums) and arr[b+1] == 0 and nums[b+1]>c and nums[b+1]>nums[b+2]:\n                    arr[b+1] = 1\n                    update(1,0,n-1,b+1,1)\n                if arr[b] == 1 and ((b+1 < len(nums) and c <= nums[b+1]) or (b-1 >= 0 and c <= nums[b-1])):\n                    arr[b] = 0\n                    update(1,0,n-1,b,0)\n                elif arr[b] == 0 and ((b+1 < len(nums) and c > nums[b+1]) and (b-1 >= 0 and c > nums[b-1])):\n                    arr[b] = 1\n                    update(1,0,n-1,b,1)\n                if b-1 >= 0 and arr[b-1] == 1 and nums[b-1] <= c:\n                    arr[b-1] = 0\n                    update(1,0,n-1,b-1,0)\n                elif b-2 >= 0 and arr[b-1] == 0 and nums[b-1] > c and nums[b-1]>nums[b-2]:\n                    arr[b-1]=1\n                    update(1,0,n-1,b-1,1)\n                #print(arr)\n                #print(st)\n        \n\n        return res\n                \n        #print(st)\n        #update(1,0,n-1,2,6)\n        #print(st)\n        #print(ssum(1,0,n-1,1,3))\n        #return []\n                ",
    "submit_ts": "1718507359",
    "subm_id": "1289649099"
}