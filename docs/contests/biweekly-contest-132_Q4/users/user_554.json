{
    "username": "devils_advocate",
    "submission": "class Solution {\npublic:\n\n   int solve(vector<int>& nums, int i, int k, int prev, vector<vector<vector<int>>>& dp) {\n        if (i == nums.size())\n            return 0;\n\n        if (prev != -1 && dp[i][k][prev] != -1)\n            return dp[i][k][prev];\n\n        // int ans = 0;\n        // if (prev == -1 || nums[i] == nums[prev]) {\n        //     ans = max(1 + solve(nums, i + 1, k, i, dp), solve(nums, i + 1, k, prev, dp));\n        // } else if (nums[i] != nums[prev] && k > 0) {\n        //     ans = max(1 + solve(nums, i + 1, k - 1, i, dp), solve(nums, i + 1, k, prev, dp));\n        // } else {\n        //     ans = solve(nums, i + 1, k, prev, dp);\n        // }\n        int take=0,notake=0;\n        bool flag = (prev == -1 || nums[prev] == nums[i]);\n        if (flag) {\n            take = 1 + solve(nums,i+ 1, k,i,dp);\n            notake = solve(nums,i+ 1,k, prev,dp);\n        } else {\n            if (k > 0)\n                take = 1 + solve(nums,i + 1,k-1, i,dp);\n           notake = solve(nums,i + 1,k, prev,dp);\n        }\n        int ans=max(take,notake);\n        if (prev != -1)\n            dp[i][k][prev] = ans;\n\n        return ans;\n    }\n\n    int maximumLength(vector<int>& nums, int k) {\n          int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int ans=1; \n        vector<int>vk(k+1,-1); \n        int count=0;\n        for(int i=0;i<n;i++)\n        {\n                count++;\n        }\n        vector<map<int,int>>vkm(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+vk[l]); \n                } \n                if(vkm[j].find(nums[i])!=vkm[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+vkm[j][nums[i]]); \n                } \n                ans=max(ans,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                vk[j]=max(vk[j],dp[i][j]); \n                vkm[j][nums[i]]=max(vkm[j][nums[i]],dp[i][j]); \n            } \n        } \n        return ans; \n    }\n};",
    "submit_ts": 1717861459.0
}