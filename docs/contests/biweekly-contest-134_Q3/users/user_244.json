{
    "username": "Ferrriccc",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> bad;\n        auto a = colors;\n        int n = a.size();\n        for (int i = 0; i + 1 < n; ++i) {\n            if (a[i] == a[i + 1]) {\n                bad.push_back(i);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            int l = (i - k + 1);\n            int r = i;\n\n            int cnt = 0;\n            if (!bad.empty()) {\n                cnt += upper_bound(bad.begin(), bad.end(), r) - lower_bound(bad.begin(), bad.end(), l);\n            }\n            \n            if (cnt != (i + 1 < n && a[i] == a[i + 1])) {\n                continue;\n            }\n            int ex = k - (i + 1);\n            if (ex <= 0) {\n                ++ans;\n                continue;\n            }    \n            if (a[0] == a.back()) {\n                continue;\n            }   \n            // cout << i << ' ' << ex << endl;\n\n            ans += (bad.empty() || (bad.back() < n - (ex)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278244",
    "subm_id": "1311700713"
}