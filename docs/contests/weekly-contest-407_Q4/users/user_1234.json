{
    "username": "coffeeNcode_18",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        # Calculate the differences between the target and nums\n        differences = [target[i] - nums[i] for i in range(len(nums))]\n        \n        total_operations = 0\n        current_diff_segment = 0\n        \n        for i in range(len(differences)):\n            if i == 0 or (differences[i - 1] > 0 and differences[i] > 0) or (differences[i - 1] < 0 and differences[i] < 0):\n                # Calculate additional operations needed for the current segment\n                additional_ops = abs(differences[i]) - abs(current_diff_segment)\n                if additional_ops > 0:\n                    total_operations += additional_ops\n                current_diff_segment = differences[i]\n            else:\n                # Add the absolute value of the difference to total operations\n                total_operations += abs(differences[i])\n                current_diff_segment = differences[i]\n        \n        return total_operations\n",
    "submit_ts": "1721532594",
    "subm_id": "1327989581"
}