{
    "username": "rohitsatpute480",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int>sum,dif;\n        \n        int n = points.size();\n        \n        int tmpx = 0,tmpy = 0;\n        \n        for(int i = 0; i < n; i++){\n            tmpx = points[i][0];\n            tmpy = points[i][1];\n            \n            sum.insert(tmpx + tmpy);\n            dif.insert(tmpx - tmpy);\n        }\n        \n        int mini = INT_MAX;\n        \n        for(int i = 0; i < n; i++){\n            tmpx = points[i][0],tmpy = points[i][1];\n            \n            sum.erase(sum.find(tmpx + tmpy));\n            dif.erase(dif.find(tmpx - tmpy));\n            \n            int a = *sum.begin(),b=*sum.rbegin(),c = *dif.begin(),d = *dif.rbegin();\n            \n            mini = min(mini,max(b - a,d - c));\n            \n            sum.insert(tmpx + tmpy);\n            dif.insert(tmpx - tmpy);\n            \n        }\n        return mini;\n    }\n};"
}