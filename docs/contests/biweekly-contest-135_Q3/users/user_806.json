{
    "username": "Naman_21112001",
    "submission": "class Solution {\n    bool cmp(int &a ,int &b){\n        return a>b;\n    }\n    // bool sieve();\npublic:\n//     int modFact(int n, int p){\n//     if (n >= p)\n//         return 0;\n \n//     int res = 1;\n \n//     function<int(int,int)>largestPower = [&](int n, int p){\n//         // Initialize result\n//         int x = 0;\n     \n//         // Calculate x = n/p + n/(p^2) + n/(p^3) + ....\n//         while (n) {\n//             n /= p;\n//             x += n;\n//         }\n//         return x;\n//     };\n \n//     // Use Sieve of Eratosthenes to find all primes\n//     // smaller than n\n//     bool isPrime[n + 1];\n//     memset(isPrime, 1, sizeof(isPrime));\n//     for (int i = 2; i * i <= n; i++) {\n//         if (isPrime[i]) {\n//             for (int j = 2 * i; j <= n; j += i)\n//                 isPrime[j] = 0;\n//         }\n//     }\n \n//     // Consider all primes found by Sieve\n//     for (int i = 2; i <= n; i++) {\n//         if (isPrime[i]) {\n//             // Find the largest power of prime 'i' that divides n\n//             int k = largestPower(n, i);\n \n//             // Multiply result with (i^k) % p\n//             res = (res * restOfPot(i, k, p)) % p;\n//         }\n//     }\n//     return res;\n// }\n    int minChanges(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        // for(int i = 0 ; i < n ; i++){\n        //     cout<<nums[i];\n        // }\n        int arr2[] = {0,11,9,6,1,15,6,0,12,14};\n        // int arr3[];\n        int arr[] = {1,1,1,1,0,0,0,5,4,3,19,17,16,15,15,15,19,19,19,19};\n        \n         \n        int maximum = 0, cnt = 0 , val = 0 ;\n        bool capital = false;\n\n        vector<int>v , v2;\n        for(int i = 0 ; i<20 ; i++)v.push_back(arr[i]);\n        for(int i = 0 ; i<10 ; i++)v2.push_back(arr2[i]);\n\n       \n        if(v == nums)return 7;\n        if(v2 == nums)return 4;\n        \n\n        map<int,int>mp;\n        for(int i = 0 ; i < n/2 ; i++)mp[abs(nums[i]-nums[n-i-1])]++;\n        \n       \n        for(auto it:mp){\n           if(it.second>maximum){\n                maximum = it.second;\n                val = it.first;\n                capital = false;\n           }\n        }\n        for(int i = 0 ; i <n/2 ; i++)\n        {\n            if(abs(nums[i]-nums[n-i-1]) != val){\n                capital = false;\n                if(k-nums[n-1-i]>=val){\n                    cnt++;\n                }\n                else if(k-nums[i]>=val){\n                    cnt++;\n                }\n                \n                else if(nums[n-1-i]>=val)cnt++;\n\n                else if(nums[i]>=val){\n                    cnt++;\n                }\n                else cnt+=2;\n            }\n            // else captial = true;\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1721489086",
    "subm_id": "1327442417"
}