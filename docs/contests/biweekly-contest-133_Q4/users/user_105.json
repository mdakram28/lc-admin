{
    "username": "Shreyansh2311",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int dp[400][401];\n    int constraints[301];\n    int modulo = 1e9 + 7;\n\n    int countPermutations(int index, int currentSum, int totalElements) {\n        if (index == totalElements) return 1;\n        if (dp[index][currentSum] != -1) return dp[index][currentSum];\n\n        int result = 0;\n\n        if (constraints[index] == -1) {\n            for (int j = 0; j <= index; j++) {\n                if (currentSum + index - j <= 400)\n                    result = (result + countPermutations(index + 1, currentSum + index - j, totalElements)) % modulo;\n            }\n//             class Solution {\n// public:\n//     int minimumOperations(vector<int>& nums) {\n//             int operations = 0;\n\n//     for (int num : nums) {\n//         int remainder = num % 3;\n//         if (remainder == 1) {\n//             operations += 1;  // Add 2 or Subtract 1\n//         } else if (remainder == 2) {\n//             operations += 1;  // Add 1 or Subtract 2\n//         }\n//     }\n\n//     return operations;\n\n        \n//     }\n// };\n            \n            \n            \n            \n            \n        \n            \n        } else {\n            for (int j = 0; j <= index; j++) {\n                if (currentSum + index - j == constraints[index])\n                    result = (result + countPermutations(index + 1, currentSum + index - j, totalElements)) % modulo;\n            }\n        }\n\n        return dp[index][currentSum] = result % modulo;\n    }\n\n    void initializeDP() {\n        for (int i = 0; i < 400; ++i) {\n            for (int j = 0; j < 401; ++j) {\n                dp[i][j] = -1;\n            }\n        }\n    }\n\n    void populateConstraints(vector<vector<int>>& restriction) {\n        for (int i = 0; i < 301; ++i) {\n            constraints[i] = -1;\n        }\n\n        for (int i = 0; i < restriction.size(); i++) {\n            constraints[restriction[i][0]] = restriction[i][1];\n        }\n    }\n\n    int numberOfPermutations(int elements, vector<vector<int>>& restricted) {\n        initializeDP();\n        populateConstraints(restricted);\n        \n        return countPermutations(0, 0, elements);\n    }\n};\n",
    "submit_ts": 1719068693.0
}