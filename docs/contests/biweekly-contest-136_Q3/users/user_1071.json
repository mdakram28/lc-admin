{
    "username": "keshav_1441",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int flips = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int a = grid[i][j];\n                int b = grid[i][n - 1 - j];\n                int c = grid[m - 1 - i][j];\n                int d = grid[m - 1 - i][n - 1 - j];\n                int countOnes = a + b + c + d;\n                flips += min(countOnes, 4 - countOnes);\n            }\n        }\n        int one=0;\n        int notsame=0;\n        if (m % 2 != 0) {\n            int midRow = m / 2;\n            for (int j = 0; j < n / 2; j++) {\n                int a = grid[midRow][j];\n                int b = grid[midRow][n - 1 - j];\n                if(a == b && a==1){\n                    one++;\n                }\n                if(a!=b){\n                    notsame++;\n                }\n                flips += (a != b);\n            }\n        }\n        if (n % 2 != 0) {\n            int midCol = n / 2;\n            for (int i = 0; i < m / 2; i++) {\n                int a = grid[i][midCol];\n                int b = grid[m - 1 - i][midCol];\n                if(a == b && a==1){\n                    one++;\n                }\n                if(a!=b){\n                    notsame++;\n                }\n                flips += (a != b);\n            }\n        }\n        if(n % 2 != 0 && m % 2 != 0){\n            int a=grid[m/2][n/2];\n            if(a==1){\n                flips++;\n            }\n        }\n        if(one%2==0){\n            return flips;\n        }\n        else{\n            if(notsame>=1){\n                return flips;\n            }\n            flips+=2;\n            return flips;\n        }\n    }\n};\n",
    "submit_ts": "1722698732",
    "subm_id": "1343189990"
}