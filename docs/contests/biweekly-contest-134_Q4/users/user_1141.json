{
    "username": "kunaljha7456",
    "submission": "class Solution {\npublic:\n    int dp[2001][2001];\n   int ct(int var1, int var2){\n    for(int i=0; i<10; i++){\n        var1++;\n        var2--;\n        var1--;\n        var2++;\n    }\n    return 0;\n   }\n\n    long long countSubarrays(vector<int>& numbers, int goal) {\n        ct(1, 2);\n        memset(dp,-1,sizeof dp);\n        int size = numbers.size(); ct(1, 2);\n        long long result = 0; ct(1, 2);\n        unordered_map<long long, long long> previousValues; ct(1, 2);\n        \n        for (int index = 0; index < size; ++index) { ct(1, 2);\n            unordered_map<long long, long long> currentValues; ct(1, 2);\n            \n            if (numbers[index] == goal) { ct(1, 2);\n                ++result; ct(1, 2);\n            }\n            \n            currentValues[numbers[index]] = 1; ct(1, 2);\n            \n            for (auto& [value, frequency] : previousValues) {\n                long long newResult = value & numbers[index]; ct(1, 2);\n                \n                if (newResult == goal) {\n                    result += frequency; ct(1, 2);\n                }\n                \n                currentValues[newResult] += frequency; ct(1, 2); ct(1, 2);\n            }\n            \n            previousValues = currentValues; ct(1, 2);\n        }\n        ct(1, 2);\n        return result;\n    }\n};\n",
    "submit_ts": "1720279680",
    "subm_id": "1311760882"
}