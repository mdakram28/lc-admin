{
    "username": "ketan_prakash",
    "submission": "class Solution {\npublic:\n    long long minimumCost(long long m, long long n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long i = 0, j = 0; \n\n        long long ans = 0;\n        while (i < m - 1 && j < n - 1){\n            if (horizontalCut[i] >= verticalCut[j]){\n                ans += (long long)(j + 1) * horizontalCut[i];\n                i++;\n            }\n            else {\n                ans += (long long)(i + 1) * verticalCut[j];\n                j++;\n            }\n        }\n\n        while (i < m - 1){\n            ans += (long long)(j + 1) * horizontalCut[i];\n            i++;\n        }\n\n        while (j < n - 1){\n            ans += (long long)(i + 1) * verticalCut[j];\n            j++;\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720925263",
    "subm_id": "1320248707"
}