{
    "username": "halllllllis",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n#define ll long long int\n#define all(a) a.begin(), a.end()\n\nclass SegmentTree {\n    vector<int> tree;\n    vector<int> nums;\n    int n;\n\n    void build(int v, int tl, int tr) {\n        if (tl == tr) {\n            tree[v] = nums[tl];\n        } else {\n            int tm = (tl + tr) / 2;\n            build(v * 2, tl, tm);\n            build(v * 2 + 1, tm + 1, tr);\n            tree[v] = tree[v * 2] & tree[v * 2 + 1];\n        }\n    }\n\n    int query(int v, int tl, int tr, int l, int r) {\n        if (l > r) {\n            return INT_MAX;\n        }\n        if (l == tl && r == tr) {\n            return tree[v];\n        }\n        int tm = (tl + tr) / 2;\n        return query(v * 2, tl, tm, l, min(r, tm)) & query(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r);\n    }\n\npublic:\n    SegmentTree(const vector<int>& nums) : nums(nums) {\n        n = nums.size();\n        tree.resize(n * 4);\n        build(1, 0, n - 1);\n    }\n\n    int query(int l, int r) {\n        return query(1, 0, n - 1, l, r);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        SegmentTree st(nums);\n        int n = nums.size();\n        int min_diff = INT_MAX;\n\n        for (int i = 0; i < n; ++i) {\n            int l = i, r = n - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                int and_value = st.query(i, mid);\n                min_diff = min(min_diff, abs(and_value - k));\n\n                if (and_value == k) {\n                    return 0;\n                } else if (and_value > k) {\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n        }\n        return min_diff;\n    }\n};\n\n\n",
    "submit_ts": 1717300707.0
}