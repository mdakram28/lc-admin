{
    "username": "yefei162",
    "submission": "from typing import List\n\n\nclass FenwickTree:\n    \"\"\"\n    Reference: https://en.wikipedia.org/wiki/Fenwick_tree\n    https://github.com/atcoder/ac-library/blob/master/document_en/fenwicktree.md\n    \"\"\"\n\n    def __init__(self, n: int = 0) -> None:\n        self._n = n\n        self.data = [0] * n\n\n    def add(self, p: int, x: int) -> None:\n        assert 0 <= p < self._n\n\n        p += 1\n        while p <= self._n:\n            self.data[p - 1] += x\n            p += p & -p\n\n    def sum(self, left: int, right: int) -> int:\n        assert 0 <= left <= right <= self._n\n\n        return self._sum(right) - self._sum(left)\n\n    def _sum(self, r: int) -> int:\n        s = 0\n        while r > 0:\n            s += self.data[r - 1]\n            r -= r & -r\n\n        return s\n\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        fwt = FenwickTree(n)\n        for i in range(1, n - 1):\n            if nums[i - 1] < nums[i] > nums[i + 1]:\n                fwt.add(i, 1)\n\n        rets = []\n        for qry in queries:\n            if qry[0] == 1:\n                if qry[2] - qry[1] <= 1:\n                    rets.append(0)\n                else:\n                    ret = fwt.sum(qry[1] + 1, qry[2])\n                    rets.append(ret)\n            elif qry[0] == 2:\n                idx, val = qry[1:]\n                if idx - 2 >= 0 and idx < n:\n                    if nums[idx - 2] < nums[idx - 1] > nums[idx]:\n                        fwt.add(idx - 1, -1)\n                    if nums[idx - 2] < nums[idx - 1] > val:\n                        fwt.add(idx - 1, 1)\n\n                if idx - 1 >= 0 and idx + 1 < n:\n                    if nums[idx - 1] < nums[idx] > nums[idx + 1]:\n                        fwt.add(idx, -1)\n                    if nums[idx - 1] < val > nums[idx + 1]:\n                        fwt.add(idx, 1)\n\n                if idx >= 0 and idx + 2 < len(nums):\n                    if nums[idx] < nums[idx + 1] > nums[idx + 2]:\n                        fwt.add(idx + 1, -1)\n                    if val < nums[idx + 1] > nums[idx + 2]:\n                        fwt.add(idx + 1, 1)\n                nums[idx] = val\n        return rets",
    "submit_ts": 1718506137.0
}