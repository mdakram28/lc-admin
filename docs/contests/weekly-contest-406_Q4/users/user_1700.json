{
    "username": "srushti_kaneriya",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long m1 = verticalCut.size();\n       long long n1 = horizontalCut.size();\n       \n       sort(horizontalCut.begin(),horizontalCut.end());\n       reverse(horizontalCut.begin(),horizontalCut.end());\n       sort(verticalCut.begin(),verticalCut.end());\n       reverse(verticalCut.begin(),verticalCut.end());\n\n       long long cnt1 = 1 , cnt2 = 1;\n       long long ans = 0;\n       long long i=0,j=0;\n       while(i<n1 && j<m1){\n          if(horizontalCut[i] < verticalCut[j]){\n            ans += verticalCut[j] * cnt1;\n            cnt2++;\n            j++;\n          }\n          else{\n            ans += horizontalCut[i] * cnt2;\n            cnt1++;\n            i++;\n          }\n       }\n\n       for(int k= j ; k<m1 ; k++){\n          ans += verticalCut[k] * cnt1;\n       }\n\n       for(int k=i ; k<n1 ; k++){\n          ans += horizontalCut[k] * cnt2;\n       }\n\n       return ans;\n    }\n};",
    "submit_ts": "1720926111",
    "subm_id": "1320276322"
}