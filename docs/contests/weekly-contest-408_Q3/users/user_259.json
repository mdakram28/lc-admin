{
    "username": "Galti_Sae_Mistake",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#pragma GCC optimize (\"Ofast\")\n//#pragma GCC optimize \"trapv\" // to detect overflow\n\n#define ll                      long long\n#define ar                      array\n// #define int                     ll\n#define sz(v)                   (int)(v.size())\n#define FIO                     ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define ld                      long double\n#define ull                     unsigned long long\n#define endl                    \"\\n\"\n#define fo(i,a,b)               for(int i = a; i<=b ; i++)\n#define rfo(i,a,b)              for(int i = a; i>=b ; i--)\n#define vii                     vector<int>\n#define pq                      priority_queue\n#define uomii                   unordered_map<int,int,best_hash>\n#define all(v)                  v.begin(),v.end()\n#define mp                      make_pair\n#define pb                      push_back\n#define pob                     pop_back\n#define ff                      first\n#define ss                      second\n#define pii                     pair<int,int>\n#define mii                     map<int,int>\n#define vvii                    vector<vii>\n#define mod                     1000000007\n#define inf                     5e18\n#define pi                      3.1415926535897932384626433832795\n#define cz(x)                   63 - __builtin_clzll(x)\n\n\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<class T> using oset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\n// https://codeforces.com/blog/entry/68809\n\nvoid __print(int x) {cout << x;}\nvoid __print(long x) {cout << x;}\nvoid __print(unsigned x) {cout << x;}\nvoid __print(unsigned long x) {cout << x;}\nvoid __print(unsigned long long x) {cout << x;}\nvoid __print(float x) {cout << x;}\nvoid __print(double x) {cout << x;}\nvoid __print(long double x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cout << (x ? \"true\" : \"false\");}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cout << '{'; __print(x.first); cout << ','; __print(x.second); cout << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cout << '{'; for (auto &i : x) cout << (f++ ? \",\" : \"\"), __print(i); cout << \"}\";}\nvoid _print() {cout << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n#ifndef ONLINE_JUDGE\n#define pr(x...) cout << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define pr(x...)\n#endif\n\n// https://codeforces.com/blog/entry/62393\n\nstruct best_hash {\n  static uint64_t splitmix64(uint64_t x) {\n\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\n\n/* ------------------------------ Let The Game Begin ---------------------------- */\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = sz(s);\n        vii lastZero(n, -1), ones(n, 0);\n        \n        int pichli = -1;\n        fo(i,0,n-1){\n            lastZero[i] = pichli;\n            if(s[i] == '0') pichli = i;\n            \n            ones[i] = (i ? ones[i-1]: 0) + (s[i] == '1');\n        }\n        \n        int ans = 0;\n        \n        auto getOnes = [&](int l, int r) -> int {\n            return (ones[r] - (l ? ones[l-1]: 0));\n        };\n        \n        for(int i = 0; i < n; i++){\n            int j = i-1;\n            \n            // [j+1,lj]\n            \n            int o = 0, z = 0, lj = i-1, moreOnes=0;\n            \n            if(s[i] == '1'){\n                j = lastZero[i];\n                o = 0;\n                z = 0;\n                moreOnes = i - j;\n            }\n            else {\n                j = i;\n                o = z = moreOnes = 0;\n            }\n            \n            while(true){\n                int req = max(0, (z*z) - o);\n                if(req > (i+1)) break;\n                \n                ans += max(0, min(moreOnes, moreOnes - req + 1));\n                // pr(o, z, moreOnes, req,j,i, ans);\n                if(j == -1) break;\n                o = getOnes(j+1,i);\n                if((z+1)*(z+1) <= o) ans++;\n                z++;\n                moreOnes = j - lastZero[j] - 1;\n                j = lastZero[j];\n\n            }\n        }\n        \n        return ans;\n    }\n};\n\n\n\n\n\n\n\n",
    "submit_ts": "1722138628",
    "subm_id": "1335795636"
}