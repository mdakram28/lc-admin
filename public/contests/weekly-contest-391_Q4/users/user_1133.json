{
    "username": "SalvadorDali",
    "submission": "class Solution:\n  \n  def find_max_distance_2_with_pos(self, arr):\n    max_sum, min_sum, max_dif, min_dif, res = -float('inf'), float('inf'), -float('inf'), float('inf'), 0\n    p1, p2 = None, None\n\n    for p, (x1, y1) in enumerate(arr):\n      if x1 + y1 > max_sum:\n        max_sum = x1 + y1\n        p_max1 = p\n\n      if x1 + y1 < min_sum:\n        min_sum = x1 + y1\n        p_min1 = p\n\n      if x1 - y1 > max_dif:\n        max_dif = x1 - y1\n        p_max2 = p\n\n      if x1 - y1 < min_dif:\n        min_dif = x1 - y1\n        p_min2 = p\n\n      if res < max_sum - min_sum:\n        p1, p2 = p_max1, p_min1\n        res = max_sum - min_sum\n      if res < max_dif - min_dif:\n        p1, p2 = p_max2, p_min2\n        res = max_dif - min_dif\n    \n    return res, p1, p2\n  \n  def find_max_distance_2(self, arr):\n    max_sum, min_sum, max_dif, min_dif, res = -float('inf'), float('inf'), -float('inf'), float('inf'), 0\n    for x1, y1 in arr:\n      max_sum = max(max_sum, x1 + y1)\n      min_sum = min(min_sum, x1 + y1)\n\n      max_dif = max(max_dif, x1 - y1)\n      min_dif = min(min_dif, x1 - y1)\n\n      res = max(res, max_sum - min_sum, max_dif - min_dif)\n    return res\n  \n  def minimumDistance(self, points: List[List[int]]) -> int:\n    _, p1, p2 = self.find_max_distance_2_with_pos(points)\n    \n    tmp = [points[p] for p in range(len(points)) if p != p1]\n    res1 = self.find_max_distance_2(tmp)\n    \n    tmp = [points[p] for p in range(len(points)) if p != p2]\n    res2 = self.find_max_distance_2(tmp)\n    \n    return min(res1, res2)\n    \n        "
}