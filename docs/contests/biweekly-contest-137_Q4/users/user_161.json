{
    "username": "faibzlz",
    "submission": "class Solution {\npublic:\n    vector<vector<pair<int, int>>> v;\n    long long ans = -1e13;\n    long long check(vector<pair<int, int>> &aa, vector<pair<int, int>> &bb, vector<pair<int, int>> &cc) {\n        long long c_ans = 0;\n        c_ans = aa[0].first;\n        int fb1 = aa[0].second;\n        int fb2 = -1;\n        if(bb[0].second == fb1) {\n            c_ans += bb[1].first;\n            fb2 = bb[1].second;\n        } else {\n            c_ans += bb[0].first;\n            fb2 = bb[0].second;\n        }\n        for(int i = 0; i <= 2; i++) {\n            if(cc[i].second != fb1 && cc[i].second != fb2) {\n                c_ans += cc[i].first;\n                break;\n            }\n\n        }\n        return c_ans;\n    }\n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n  \n        for(auto & it : board) {\n            vector<pair<int, int>>tmp;\n            for(int i = 0; i < it.size(); i++) {\n                tmp.emplace_back(it[i], i);\n            }\n            sort(tmp.begin(), tmp.end(), greater<pair<int, int>>());\n            v.push_back(tmp);\n        }\n        sort(v.begin(), v.end(), greater<vector<pair<int, int>>>());\n        \n        int m = board.size(), n = board[0].size();\n        for(int a = 0; a < m; a++) {\n            for(int b = a + 1; b < m; b++) {\n                for(int c = b + 1; c < m; c++) {\n                    if(ans >= (long long)v[a][0].first + v[b][0].first + v[c][0].first) break;\n                    ans = max(ans, check(v[a], v[b], v[c]));\n                    ans = max(ans, check(v[a], v[c], v[b]));\n                    ans = max(ans, check(v[b], v[c], v[a]));\n                    ans = max(ans, check(v[b], v[a], v[c]));\n                    ans = max(ans, check(v[c], v[b], v[a]));\n                    ans = max(ans, check(v[c], v[a], v[b]));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907681",
    "subm_id": "556326888"
}