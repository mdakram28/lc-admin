{
    "username": "krishnaa121",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long counter = 0;\n        \n        unordered_map<long long, long long> prevRes;\n\n        for (int i = 0; i < n; ++i) {\n\n            unordered_map<long long, long long> currRes; \n\n\n            if (nums[i] == k) {\n                ++counter;\n            }\n            currRes[nums[i]] = 1;\n\n            for (auto& [val, frequency] : prevRes) {\n\n                long long newAndResult = val & nums[i];\n\n                if (newAndResult == k) {\n\n                    counter += frequency;\n                }\n                currRes[newAndResult] += frequency;\n            }\n            \n            prevRes = currRes;\n        }\n        \n        return counter;\n    }\n};",
    "submit_ts": "1720280762",
    "subm_id": "1311801147"
}