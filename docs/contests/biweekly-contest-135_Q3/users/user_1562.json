{
    "username": "FCsX2KymOL",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> ops(k+1, n);\n        vector<int> rng;\n\n        for(int i=0; i<(n/2); i++){\n            int temp1 = max(nums[i], k-nums[i]);\n            int temp2 = max(nums[n-i-1], k-nums[n-i-1]);\n            rng.push_back(max(temp1, temp2));\n        }\n\n        sort(rng.begin(), rng.end());\n        int idx=0, pc=0, rdx=0;\n\n        while(rdx<rng.size() && idx<=k){\n            if(idx<=rng[rdx]){\n                ops[idx] = (n/2)+pc;\n                idx++;\n            }\n            else{\n                rdx += 1;\n                pc += 1;\n            }\n        }\n\n        for(int i=0; i<(n/2); i++){\n            ops[abs(nums[i]-nums[n-i-1])] -= 1;\n        }\n\n        int ans = n;\n        for(int i=0; i<ops.size(); i++){\n            ans = min(ans, ops[i]);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721489934",
    "subm_id": "1327468112"
}