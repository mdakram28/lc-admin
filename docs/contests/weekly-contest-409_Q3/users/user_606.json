{
    "username": "affectionate-galileo7vy",
    "submission": "class UnionFind:\n    def __init__(self):\n        self.father = {}\n        self.cnt = 0\n\n    def find(self, x):\n        self.add(x)               \n        # \u4e00\u6b21\u6027\u5e73\u94fa          \n        if self.father[x] != x:\n            self.father[x] = self.find(self.father[x])\n\n        return self.father[x]               \n\n    def merge(self, x, y):\n        root_x, root_y = self.find(x), self.find(y)\n        if root_x!=root_y:       \n            self.father[root_x] = root_y\n            self.cnt -= 1\n\n    def is_connected(self, x, y):\n        return self.find(x)==self.find(y)\n\n    def add(self, x):\n        if x not in self.father:\n            self.father[x] = x\n            self.cnt += 1\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        m = len(queries)\n        '''\n        \u6a2a\u8de8\u4e24\u4e2a\u70b9\n        \u4e0d\u5b58\u5728\u4ea4\u66ff\n        a,b\n        x,y\n        a < x < b < y\n\n        \u6709\u4e00\u6bb5 x,y\n        \u5982\u679c\u65b0\u7684a,b\n        x <= a <= b <= y\n        \u7ed3\u679c\u4e0d\u53d8\n        1 2\n        2 3\n        3 4\n        \u5982\u679c 2 4\n        1 2\n        2 4\n        \u5e76\u67e5\u96c6\n        \u533a\u95f4\u5408\u5e76\n        '''\n        uf = UnionFind()\n        for i in range(n-1):\n            uf.add((i,i+1))\n        # print(uf.cnt)\n\n        res = []\n        for i,(x,y) in enumerate(queries):\n            while True:\n                l,r = uf.find((x,x+1))\n                if y <= r:\n                    break\n\n                # \u4e0b\u4e2a\u533a\u95f4 (r,r+1)\n                uf.merge((l,r),(l+1,r+1))\n                x = l + 1\n            res.append(uf.cnt)\n        return res\n            ",
    "submit_ts": "1722741360",
    "subm_id": "552337690"
}