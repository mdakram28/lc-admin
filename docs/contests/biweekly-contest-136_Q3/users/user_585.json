{
    "username": "ein_boom",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int res = 0;\n        int m = grid.size();\n        int n = grid[0].size();\n        for (int i = 0; i < m / 2; ++i) {\n            for (int j = 0; j < n / 2; ++j) {\n                int oneCount = grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 - j] + grid[m - 1 -i][n - 1 - j];\n                switch (oneCount) {\n                    case 1:\n                        ++res;\n                        break;\n                    case 2:\n                        res += 2;\n                        break;\n                    case 3:\n                        ++res;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        int twoInPair = 0;\n        int diff = 0;\n        if (m & 1) {\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[m / 2][j] != grid[m / 2][n - 1 - j]) {\n                    ++diff;\n                } else {\n                    if (grid[m / 2][j] == 1) {\n                        ++twoInPair;\n                    }\n                }\n            }\n        }\n        if (n & 1) {\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[m - 1 - i][n / 2] != grid[i][n / 2]) {\n                    ++diff;\n                } else {\n                    if (grid[i][n / 2] == 1) {\n                        ++twoInPair;\n                    }\n                }\n            }\n        }\n        if (twoInPair & 1) {\n            res += (diff == 0 ? 2 : diff);\n        } else {\n            res += diff;\n        }\n        if ((m & 1) && (n & 1) && grid[m / 2][n / 2] == 1) {\n            ++res;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697876",
    "subm_id": "552268240"
}