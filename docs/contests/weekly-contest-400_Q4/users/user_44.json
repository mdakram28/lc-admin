{
    "username": "jojayoh",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n\n        int n = nums.size();\n        vector<int> counts(31);\n        int ans = INT_MAX;\n        int l = 0;\n        for(int i = 0; i < n; i++)\n        {\n            int cur = nums[i];\n            int and_val = 0;\n            for(int b = 0; b < 31; b++)\n            {\n                if(cur&(1<<b))\n                {\n                    if(counts[b]++ == i-l) and_val += 1<<b;\n                }\n            }\n            ans = min(ans,abs(k-and_val));\n            while(and_val < k && l <= i)\n            {\n                int l_val = nums[l++];\n                and_val = 0;\n                for(int b = 0; b < 31; b++)\n                {\n                    if(l_val&(1<<b)) counts[b]--;\n                    if(counts[b] == i-l+1) and_val += (1<<b);\n                }\n                if(i >= l) ans = min(ans,abs(k-and_val));\n            }\n        }\n\n        return ans;\n        \n    }\n};",
    "submit_ts": "1717297092",
    "subm_id": "1274730224"
}