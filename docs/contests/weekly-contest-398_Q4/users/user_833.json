{
    "username": "bhlluk",
    "submission": "import math\n\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n#         if k == 0:\n#             return 2\n#         if k == 1:\n#             return 1\n        \n#         magnitude = 0\n#         while (2 ** magnitude) < k:\n#             magnitude += 1\n        \n#         m1 = 2 ** magnitude - k\n#         if m1 > k:\n#             return 0\n\n        ret = 0\n        for x in range(33):\n            cw = self.countways(k, x)\n            # print(f\"{x=} {cw=}\")\n            ret += cw\n        return ret\n    \n        \n    \n    def countways(self, k, n):\n        total = 2 ** (n)\n        reduction = total - k\n        # print(f\"{n=} {reduction=}\")\n        if reduction > (n+1):\n            ans = 0\n        \n        elif reduction < 0:\n            ans = 0\n        \n        else:\n            ans = math.comb(n+1, reduction)\n        # print(f\"{n=} {reduction=} {ans=}\")\n        return ans",
    "submit_ts": "1716089698",
    "subm_id": "1261849041"
}