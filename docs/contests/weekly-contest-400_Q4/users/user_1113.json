{
    "username": "shivam_30",
    "submission": "class Solution {\n    \n    void include(vector<int>&bits, int num){\n        for(int i=0;i<32;i++){\n            int m = (1<<i);\n            if(m&num){\n                bits[i]++;\n            }\n        }\n    }\n    \n    void exclude(vector<int>&bits, int num){\n        for(int i=0;i<32;i++){\n            int m = (1<<i);\n            if(m&num){\n                bits[i]--;\n            }\n        }\n    }\n    int getAnd(vector<int>&bits, int s){\n        int res = 0;\n        for(int i=0;i<32;i++){\n           if(bits[i]>0 and bits[i]==s){\n               res = res| (1<<i);\n           }\n        }\n        return res;\n    }\n    \n    \n    int minAbsDifference(vector<int>& nums, int k) {\n    int n = nums.size();\n    int left = 0, right = 0;\n    int min_diff = INT_MAX;\n    int current_and = nums[0];\n        vector<int>bits(32,0);\n\n    while (right < n) {\n        include(bits, nums[right]);\n        current_and = getAnd(bits, right-left+1);\n        right++;\n\n        min_diff = min(min_diff, abs(k - current_and));\n\n        while (current_and < k && left < right) {\n            exclude(bits, nums[left]);\n            current_and = getAnd(bits, right-left-1);\n            // cout<<current_and<<\", \";\n            left++;\n            if (left <= right)\n                min_diff = min(min_diff, abs(k - current_and));\n        }\n    }\n\n    return min_diff;\n}\n\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        // dp.resize(n,-1);\n        // return helper(nums, 0, n,k);\n        \n        return minAbsDifference(nums, k);\n        \n    }\n};",
    "submit_ts": 1717300256.0
}