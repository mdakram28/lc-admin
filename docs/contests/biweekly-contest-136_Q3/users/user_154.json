{
    "username": "rain-sure",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int res = 0;\n        for(int i = 0; i < n / 2; i ++) {\n            for(int j = 0; j < m / 2; j ++) {\n                vector<int> mp(2);\n                mp[grid[i][j]] ++;\n                mp[grid[n - i - 1][j]] ++;\n                mp[grid[i][m - j - 1]] ++;\n                mp[grid[n - i - 1][m - j - 1]] ++;\n                int maxw = max(mp[0], mp[1]);\n                res += 4 - maxw;\n            }\n        }\n        int cnt = 0, c1 = 0;\n        if(m & 1) {\n            for(int i = 0, j = n - 1; i < j; i ++, j --) {\n                cnt += (grid[i][m / 2] != grid[j][m / 2]);\n                c1 += grid[i][m / 2] == 1;\n                c1 += grid[j][m / 2] == 1;\n            }\n        } \n        if(n & 1) {\n            for(int i = 0, j = m - 1; i < j; i ++, j --) {\n                cnt += (grid[n / 2][i] != grid[n / 2][j]);\n                c1 += grid[n / 2][i] == 1;\n                c1 += grid[n / 2][j] == 1;\n            }\n        }\n        if((n & 1) and (m & 1)) {\n            res += grid[n / 2][m / 2] == 1;\n        }\n        int ans = 1e9;\n        res += cnt;\n        for(int i = 0; i <= cnt; i ++) {\n            int u = i, d = cnt - i;\n            int nc1 = c1 + u - d;\n            nc1 %= 4;\n            nc1 = (nc1 + 4) % 4;\n            ans = min(ans, (4 - nc1) % 4);\n        }\n        // int res1 = (4 - (c1 + cnt) % 4) % 4, res2 = (4 - ((c1 - cnt) % 4 + 4) % 4) % 4;\n        // cout << res1 << ' ' << res2 << \"\\n\";\n        res += ans;\n        return res;\n    }\n};",
    "submit_ts": "1722697290",
    "subm_id": "552265382"
}