{
    "username": "is2ac",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        // int res = 0;\n        // int mod = (int)(1e9+7);\n        // res = recur(0,0,nums,dp);\n        // // for (int i = 0; i <= nums[0]; i++) {\n        // //     res += recur(0,i,nums,dp);\n        // //     res %= mod;\n        // // }\n        // return res;\n        //recursion code\n        int[][] dp = new int[nums.length+5][1005];\n        dp[0][0] = 1;\n        int mod = (int)(1e9+7);\n        for (int i = 0; i <= nums[0]; i++) {\n            dp[0][i] = 1;\n        }\n        for (int i = 1; i <= 1004 ;i++) {\n            dp[0][i] += dp[0][i-1];\n        }\n        for (int i = 1; i < nums.length; i++) {\n            for (int j = 0; j <= nums[i]; j++) {\n                // inc must be <= j\n                // dec must be <= nums[i]-j;\n                // prev dev + prev inc = nums[i-1]\n                //  prev dev >= nums[i]-j\n                //prev dev = nums[i-1] - prev inc\n                // nums[i-1] - prev inc >= nums[i]-j;\n                //prev inc <= nums[i-1] - nums[i] + j;\n                if (j>nums[i]) continue;\n                int l = nums[i-1]-(nums[i]-j);\n                int r = j;\n                int cur = 0;\n                    // for (int k = 0; k<= Math.min(l,r); k++) {\n                    //     cur += dp[i-1][k];\n                    // }\n                    // cur += dp[i-1][r];\n                    // if (l>=0) cur -= dp[i-1][l];\n                \n                l = Math.min(l,r);\n                if (l>=0) {\n                    cur += dp[i-1][l];\n                }\n                cur %= mod;\n                dp[i][j] = cur;\n            }\n            for (int j = 1; j <= 1004; j++) {\n                dp[i][j] += dp[i][j-1];\n                dp[i][j] %= mod;\n            }\n        }\n        return dp[nums.length-1][nums[nums.length-1]]%mod;\n    }\n    public int recur(int ind, int cur, int[] nums, Integer[][] dp) {\n        if (dp[ind][cur]!=null) return dp[ind][cur];\n        if (ind==nums.length) return 1;\n        int res = 0;\n        int mod = (int)(1e9+7);\n        if (cur<2000) res += recur(ind, cur+1, nums,dp);\n        res %= mod;\n        return dp[ind][cur] = mod;\n    }\n}",
    "submit_ts": "1723347898",
    "subm_id": "1351607688"
}