{
    "username": "rezero456",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        List<Integer>res=new ArrayList<>();\n        FenwickTreeV1 fenwickTree=new FenwickTreeV1(nums.length+1);\n        for(int i=1;i<nums.length-1;i++){\n            if(match(i,nums)){\n                fenwickTree.update(i+1,1);\n            }\n        }\n        boolean []info=new boolean[3];\n        for(int[]query:queries){\n            if(query[0]==1){\n                if(query[2]-query[1]<=1){\n                    res.add(0);\n                }else {\n                    res.add(fenwickTree.query(query[2])-fenwickTree.query(query[1]+1));\n                }\n            }else {\n                int index=query[1];\n                int newValue=query[2];\n                for(int i=-1;i<=1;i++){\n                    if(i+index<=0||i+index>=nums.length-1){\n                        continue;\n                    }\n                    int center=i+index;\n                    info[i+1]=nums[center] > nums[center - 1] && nums[center] > nums[center + 1];\n                }\n                nums[index]=newValue;\n                for(int i=-1;i<=1;i++){\n                    if(i+index<=0||i+index>=nums.length-1){\n                        continue;\n                    }\n                    int center=i+index;\n                    boolean newStatus=nums[center] > nums[center - 1] && nums[center] > nums[center + 1];\n                    if(info[i+1]&&!newStatus){\n                        fenwickTree.update(center+1,-1);\n                    }else if(!info[i+1]&&newStatus){\n                        fenwickTree.update(center+1,1);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n\n    private boolean match(int i, int[] nums) {\n        return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n    }\n\n\n    class FenwickTreeV1 {\n        private int[] dict;\n\n        public FenwickTreeV1(int n) {\n            this.dict = new int[n + 1];\n        }\n\n        /**\n         * \u5355\u70b9\u66f4\u65b0\n         */\n        public void update(int index, int value) {\n            while (index< dict.length){\n                dict[index]+=value;\n                index+=Integer.lowestOneBit(index);\n            }\n        }\n\n        /**\n         * \u533a\u95f4\u67e5\u8be2[1,index]\u4e4b\u548c\n         */\n        public int query(int index) {\n            int res=0;\n            while (index>0){\n                res+=dict[index];\n                index-=Integer.lowestOneBit(index);\n            }\n            return res;\n        }\n        \n    }\n}",
    "submit_ts": 1718507051.0
}