{
    "username": "IshanGujarathi",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long min_cost = 0;\n        \n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long h_wid = 1;\n        long long v_wid = 1;\n\n        long long i = 0;\n        long long j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) \n        {\n            if (horizontalCut[i] > verticalCut[j]) {\n                min_cost += (long long)horizontalCut[i] * v_wid;\n                h_wid++;\n                i++;\n            } \n            else \n            {\n                min_cost += (long long)verticalCut[j] * h_wid;\n                v_wid++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) \n        {\n            min_cost += (long long)horizontalCut[i] * v_wid;\n            i++;\n        }\n\n        while (j < verticalCut.size()) \n        {\n            min_cost += (long long)verticalCut[j] * h_wid;\n            j++;\n        }\n\n        return min_cost;\n    }\n};\n",
    "submit_ts": "1720926579",
    "subm_id": "1320290338"
}