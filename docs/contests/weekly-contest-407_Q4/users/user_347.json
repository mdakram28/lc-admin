{
    "username": "gooday-3",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = (int) nums.size();\n        \n        vector<int> X(n, 0);\n        for (int i = 0; i < n; ++i) {\n            X[i] = target[i] - nums[i];\n        }\n        \n        long long res = 0;\n        \n        auto calc = [&](int l, int r) {\n            long long res = 0;\n            int pre = 0;\n            for (int i = l; i <= r; ++i) {\n                if (pre > abs(X[i])) {\n                    \n                } else {\n                    res += abs(X[i]) - pre;\n                }\n                pre = abs(X[i]);\n            }\n            return res;\n        };\n        \n        for (int i = 0; i < n; ++i) {\n            if (X[i] == 0) {\n                continue;\n            }\n            if (X[i] > 0) {\n                int l = i;\n                while (i + 1 < n && X[i + 1] > 0) {\n                    ++i;\n                }\n                int r = i;\n                auto ans = calc(l, r);\n                res += ans;\n            } else {\n                int l = i;\n                while (i + 1 < n && X[i + 1] < 0) {\n                    ++i;\n                }\n                int r = i;\n                auto ans = calc(l, r);\n                res += ans;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1721531213",
    "subm_id": "548383846"
}