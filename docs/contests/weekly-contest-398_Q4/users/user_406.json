{
    "username": "Parna_Goswami",
    "submission": "class Solution {\npublic:\n    map<pair<int,pair<int,int>>,int>mp;\n    int solve(int stair,int jump,int k,int op,vector<long long>&power){\n        if(stair>k+1)return 0;\n        if(mp.find({stair,{jump,op}})!=mp.end())return mp[{stair,{jump,op}}];\n        if(stair==k){\n            if(op==1){\n                return mp[{stair,{jump,op}}]=1+solve(stair+power[jump],jump+1,k,2,power);\n            }\n            else{\n                return mp[{stair,{jump,op}}]=1+solve(stair+power[jump],jump+1,k,2,power)+solve(stair-1,jump,k,1,power);\n            }\n            // if(stair+power[jump]==1)return 2;\n            // return 1;\n        }\n        if(op==1){\n            return mp[{stair,{jump,op}}]=solve(stair+power[jump],jump+1,k,2,power);\n        }\n        else{\n            return mp[{stair,{jump,op}}]=solve(stair+power[jump],jump+1,k,2,power)+solve(stair-1,jump,k,1,power);\n        }\n    }\n    int waysToReachStair(int k) {\n        vector<long long>power;\n        power.push_back(1);\n        for(int i=1;i<32;i++){\n            power.push_back(1LL*2*power[power.size()-1]);\n        }\n        return solve(1,0,k,0,power);\n    }\n};",
    "submit_ts": "1716088714",
    "subm_id": "1261821953"
}