{
    "username": "VILLANOVA_ECON",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        ##https://www.geeksforgeeks.org/check-two-given-circles-touch-intersect/\n        def circle_check(x1, y1, x2, y2, r1, r2):\n            d = math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n\n            if(d <= r1 - r2):\n                return True\n            elif(d <= r2 - r1):\n                return True\n            elif(d < r1 + r2):\n                return True\n            elif(d == r1 + r2):\n                return True\n            else:\n                return False\n            \n            \n        parents = [i for i in range(len(circles))]\n        rank = [1]*len(circles)\n        def find(x):\n            if x != parents[x]:\n                parents[x] = find(parents[x])\n            return parents[x]\n\n\n        def union(x,y):\n            px,py = find(x),find(y)\n            if px != py:\n                if rank[px] > rank[py]:\n                    px,py = py,px\n                rank[py] += rank[px]\n                rank[px] = 0\n                parents[px] = py\n                \n        for i in range(len(circles)):\n            x,y,r = circles[i]\n            for j in range(i+1,len(circles)):\n                a,b,r2 = circles[j]\n                if circle_check(x,y,a,b,r,r2):\n                    union(i,j)\n        for i in range(len(parents)):\n            find(i)\n        \n        graph = collections.defaultdict(list)\n        for i,x in enumerate(parents):\n            graph[x].append(i)\n        \n        \n        for arr in graph.values():\n            \n            min_x = circles[arr[0]][0]-circles[arr[0]][2]\n            max_x = circles[arr[0]][0]+circles[arr[0]][2]\n            min_y = circles[arr[0]][1]-circles[arr[0]][2]\n            max_y = circles[arr[0]][1]+circles[arr[0]][2]\n            for i in range(len(arr)):\n                min_x = min(min_x, circles[arr[i]][0]-circles[arr[i]][2])\n                max_x = max(max_x,circles[arr[i]][0]+circles[arr[i]][2])\n                min_y = min(min_y,circles[arr[i]][1]-circles[arr[i]][2])\n                max_y = max(max_y,circles[arr[i]][1]+circles[arr[i]][2])\n            #print(min_x,max_x,min_y,max_y)\n            if min_x <= 0 and min_y <= 0 and max_x >= 0 and max_y >= 0:\n                return False\n            if max_x >= X and max_y >= Y and min_x <= X and min_y <= Y:\n                return False\n            if min_x <= 0 and max_x >= X and max_y >= 0 and min_y <= Y:\n                return False\n            if min_y <= 0 and max_y >= Y and max_x >= 0 and min_x <= X:\n                return False\n        return True\n",
    "submit_ts": "1722137449",
    "subm_id": "1335764126"
}