{
    "username": "lgqfhwy",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long minimumOperations(vector<int>& nums, vector<int>& t) {\n        int n = nums.size();\n        vector<int> dt(n, 0);\n        int mn = 0;\n        for (int i = 0; i < n; ++i) {\n            dt[i] = t[i] - nums[i];\n        }\n        ll ret = abs(dt[0]);\n        bool pre = true;\n        if (dt[0] < 0) {\n            pre = false;\n        }\n        for (int i = 1; i < n; ++i) {\n            if (dt[i] >= 0 && dt[i - 1] >= 0) {\n                ret += max((ll)dt[i] - dt[i - 1], (ll)0);\n            } else if (dt[i] < 0 && dt[i - 1] < 0) {\n                ret += max((ll)abs(dt[i]) - abs(dt[i - 1]), (ll)0);\n            } else {\n                ret += abs(dt[i]);\n            }\n            //ret += min(abs((ll)dt[i] - dt[i - 1]), abs((ll)dt[i]));\n        }\n        return ret;\n\n    }\n};",
    "submit_ts": "1721532631",
    "subm_id": "548393460"
}