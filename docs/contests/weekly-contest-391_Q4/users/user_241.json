{
    "username": "awesome-ardinghelliypv",
    "submission": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\") \n#pragma GCC optimize(\"unroll-loops\")\n#define mp make_pair\n#define pb push_back\n#define SZ(x) (int)(x.size())\n#define all(x) x.begin(),x.end()\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\nconst int maxn = 2e6 + 6;\nconst int  inf = 0x3f3f3f3f;\nconst int mod = 1e9+7;\nconst int N = 2e3 + 3;\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n\n    \tmultiset<int>s1,s2,s3,s4;\n    \tfor(auto v:p){\n    \t\tint x=v[0],y=v[1];\n    \t\ts1.insert(x+y);\n    \t\ts2.insert(-x-y);\n    \t\ts3.insert(-x+y);\n    \t\ts4.insert(x-y);\n    \t}\n    \tint mini=1e9;\n    \tfor(auto v:p){\n    \t\tint x=v[0],y=v[1];\n    \t\ts1.erase(s1.find(x+y));\n    \t\ts2.erase(s2.find(-x-y));\n    \t\ts3.erase(s3.find(-x+y));\n    \t\ts4.erase(s4.find(x-y));\n\n    \t\tint a=*s1.rbegin();\n    \t\tint b=*s2.rbegin();\n\t\t\tint c=*s3.rbegin();\n\t\t\tint d=*s4.rbegin();\n\n\n\n    \t\tmini=min(mini, max(a+b,c+d));\n\n    \t\ts1.insert(x+y);\n    \t\ts2.insert(-x-y);\n    \t\ts3.insert(-x+y);\n    \t\ts4.insert(x-y);\n    \t}\n    \treturn mini;\n        \n    }\n};"
}