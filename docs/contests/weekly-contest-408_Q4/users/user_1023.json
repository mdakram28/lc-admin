{
    "username": "mzhaodev",
    "submission": "struct UnionFind{\n    vector<int> par;\n    int count;\n    UnionFind(int n) : par(n, -1), count(0){}\n    int Find(int x){return par[x] < 0 ? x : Find(par[x]);}\n    int Size(int x){return par[x] < 0 ? -par[x] : Size(par[x]);}\n    bool Unite(int x, int y){\n        x = Find(x);\n        y = Find(y);\n        if(x == y)\n            return false;\n        if(par[x] > par[y])\n            swap(x, y);\n        par[x] += par[y];\n        par[y] = x;\n        return ++count;\n    }\n};\nusing ll = int64_t;\nclass Solution {\n    bool touch(ll x, ll y, ll r, ll a, ll b, ll c) {\n        ll disty = (b - y);\n        ll distx = (a - x);\n        ll dist = disty * disty + distx * distx;\n        ll radiuss = (r+c)*(r+c);\n        return dist <= radiuss;\n    }\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        UnionFind uf(circles.size());\n        for (ll i = 0; i < circles.size(); ++i) {\n            for (ll j = i + 1; j < circles.size(); ++j) {\n                if (touch(circles[i][0], circles[i][1], circles[i][2], circles[j][0], circles[j][1], circles[j][2]))\n                uf.Unite(i, j);\n            }\n        }\n        std::unordered_map<ll, bool> topleft;\n        std::unordered_map<ll, bool> bottomright;\n        for (ll i = 0; i < circles.size(); ++i) {\n            ll parent = uf.Find(i);\n            ll top = circles[i][1] + circles[i][2];\n            ll bottom = circles[i][1] - circles[i][2];\n            ll right = circles[i][0] + circles[i][2];\n            ll left = circles[i][0] - circles[i][2];\n            if (left <= 0 || top >= Y && bottom <= Y) {\n                topleft[parent] = true;\n                if (bottomright[parent]) {\n                    return false;\n                }\n            }\n            if (right >= X && left <= X || bottom <= 0) {\n                bottomright[parent] = true;\n                if (topleft[parent])\n                    return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138476",
    "subm_id": "1335791760"
}