{
    "username": "lvm9",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    \n    int countOfPairs(int[] arr) {\n        int n = arr.length;\n        long[][][] dp = new long[n][51][51];\n        for (long[][] d : dp) {\n            for (long[] row : d) {\n                Arrays.fill(row, -1);\n            }\n        }\n        return (int) calculate(arr, 0, 0, arr[0], dp);\n    }\n\n    long calculate(int[] arr, int idx, int x, int y, long[][][] dp) {\n        if (idx >= arr.length) return 1;\n        if (dp[idx][x][y] != -1) return dp[idx][x][y];\n        \n        long res = 0;\n        for (int i = x; i <= arr[idx]; i++) {\n            for (int j = y; j >= 0; j--) {\n                if (i + j == arr[idx]) {\n                    res = (res + calculate(arr, idx + 1, i, j, dp)) % MOD;\n                }\n            }\n        }\n        dp[idx][x][y] = res;\n        return res;\n    }\n}\n",
    "submit_ts": "1723347185",
    "subm_id": "1351593691"
}