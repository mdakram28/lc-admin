{
    "username": "Manan04",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ans = 0\n        n = len(grid)\n        m = len(grid[0])\n        vis = [[False for i in range(m)] for i in range(n)]\n        def is_valid(a, b):\n            return a >= 0 and a < n and b >= 0 and b < m\n        c_2 = 0\n        ones = 0\n        for i in range(n):\n            for j in range(m):\n                if(vis[i][j]):\n                    continue\n                q = deque()\n                q.append([i, j])\n                vis[i][j] = True\n                helper = []\n                while q:\n                    ii, jj = q.popleft()\n                    helper.append(grid[ii][jj])\n                    ni = ii\n                    nj = m - jj - 1\n                    if(is_valid(ni, nj) and not vis[ni][nj]):\n                        vis[ni][nj] = True\n                        q.append([ni, nj])\n                    ni = n - ii - 1\n                    nj = jj\n                    if(is_valid(ni, nj) and not vis[ni][nj]):\n                        vis[ni][nj] = True\n                        q.append([ni, nj])\n                c0 = helper.count(0)\n                c1 = len(helper) - c0\n                if(len(helper) % 4 == 0):\n                    ans += min(c0, c1)\n                else:\n                    if(len(helper) == 1):\n                        if(c1 == 1):\n                            ans += 1\n                        continue\n                    if(c0 == c1):\n                        c_2 += 1\n                    ans += min(c0, c1)\n                    if(c0 < c1):\n                        ones += 2\n        if(ones % 4 != 0 and c_2 == 0):\n            ans += 2\n        return ans",
    "submit_ts": "1722696285",
    "subm_id": "1343100592"
}