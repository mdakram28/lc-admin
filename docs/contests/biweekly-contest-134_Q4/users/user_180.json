{
    "username": "WhatElseIsThere",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    const int kLog = 20;\n\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n\n        vector<vector<int>> st(n, vector<int>(kLog));\n        for (int j = 0; j < kLog; j++) {\n          for (int i = 0; i + (1 << j) <= n; i++) {\n            if (j == 0) {\n              st[i][j] = a[i];\n              continue;\n            }\n            st[i][j] = st[i][j - 1] & st[i + (1 << (j - 1))][j - 1];\n          }\n        }\n\n        auto Get = [&](int l, int r) {\n          int k = __lg(r - l);\n          return st[l][k] & st[r - (1 << k)][k];\n        };\n\n        ll ans = 0;\n        for (int i = 0; i < n; i++) {\n          int l = i - 1, r = n;\n          while (r - l > 1) {\n            int m = (l + r) / 2;\n            if (Get(i, m + 1) > k) {\n              l = m;\n            } else {\n              r = m;\n            }\n          }\n          if (r == n) {\n            continue;\n          }\n          if (Get(i, r + 1) != k) {\n            continue;\n          }\n          int L = r;\n          l = i - 1, r = n;\n          while (r - l > 1) {\n            int m = (l + r) / 2;\n            if (Get(i, m + 1) >= k) {\n              l = m;\n            } else {\n              r = m;\n            }\n          }\n          int R = l;\n          cout << L << \" \" << R << endl;\n          ans += (R - L + 1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720277257",
    "subm_id": "1311655230"
}