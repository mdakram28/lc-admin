{
    "username": "Riya_coder_Kumari",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n         sort(horizontalCuts.rbegin(), horizontalCuts.rend());\n    sort(verticalCuts.rbegin(), verticalCuts.rend());\n    \n    long long horizontalIndex = 0, verticalIndex = 0;\n    long long horizontalPieces = 1, verticalPieces = 1;\n   long long totalCost = 0;\n    \n    while (horizontalIndex < horizontalCuts.size() && verticalIndex < verticalCuts.size()) {\n        if (horizontalCuts[horizontalIndex] > verticalCuts[verticalIndex]) {\n            totalCost += (long long)horizontalCuts[horizontalIndex] * verticalPieces;\n            horizontalIndex++;\n            horizontalPieces++;\n        } else {\n            totalCost += (long long)verticalCuts[verticalIndex] * horizontalPieces;\n            verticalIndex++;\n            verticalPieces++;\n        }\n    }\n    \n    while (horizontalIndex < horizontalCuts.size()) {\n        totalCost +=(long long) horizontalCuts[horizontalIndex] * verticalPieces;\n        horizontalIndex++;\n        horizontalPieces++;\n    }\n    \n    while (verticalIndex < verticalCuts.size()) {\n        totalCost += (long long)verticalCuts[verticalIndex] * horizontalPieces;\n        verticalIndex++;\n        verticalPieces++;\n    }\n    \n    return totalCost;\n    }\n};",
    "submit_ts": "1720926242",
    "subm_id": "1320280209"
}