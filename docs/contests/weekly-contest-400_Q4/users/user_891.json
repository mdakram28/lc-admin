{
    "username": "kavascgjmd39",
    "submission": "const double eps = 1e-6;\n#define ll long long\ntypedef long double ld;\n#define pb push_back // for vector\n#define pi pair \n// #define mp make_pair\n#define all(a) a.begin(), a.end()\n#define rep(i, a, b) for (ll i = a; i < b; i++)\n#define ff first\n#define ss second\n#define vt vector\n#define vi vt<ll>\n#define ub upper_bound\n#define lb lower_bound\n#define repr(i, n, a) for (ll i = n; i >= a; i--)\n#define dq deque\n#define inset(a, st) st.find(a) != st.end()\n#define issub(a, b) b.find(a) != string::npos // check if a is substr of b\n#define len(a) (ll)a.size()\nconst ld PI = 2 * acos(0.0);\nconst ll mod = 998244353;\nconst ll nax = 2e5 + 5;\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        int i= 0  , j = 0;\n        int val = a[0] , n = a.size();\n        int sol = abs(k - val);\n        vt<ll>freq(32 , 0);\n        \n        while( j < n){\n             val &= a[j];\n              rep(p , 0 , 31){\n                    if((1<<p) & a[j]){\n                        freq[p]++;\n                    }\n                }\n             sol = min(sol  , abs(k  - val));\n             while(val <= k &&  i <= j && i < n){\n                rep(p , 0 , 32){\n                    if((1<<p) & a[i]){\n                        freq[p]--;\n                    }\n                }\n                \n                i++;\n                ll nval = 0;\n                rep(p , 0 , 31){\n                    if(freq[p] == j-i+1){\n                        nval |= (1<<p);\n                    }\n                }\n                val = nval;\n                 if(i == n){\n                    return sol;\n                }\n                if(i > j ){\n                    val = a[i];\n                }\n                \n                sol = min(sol , abs( k- val));\n                \n            }\n            j++;\n        }\n        return sol;\n    }\n};",
    "submit_ts": "1717299049",
    "subm_id": "1274800079"
}