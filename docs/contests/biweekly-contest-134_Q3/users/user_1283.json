{
    "username": "imkartiksoni",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(vector<int>& colorSequence, int groupSize) { \n        int sequenceLength = colorSequence.size();\n    int groupCount = 0;\n\n    if (groupSize == 1) {\n      return sequenceLength;\n    }\n\n    int currentSequenceLength = 1;\n    int index = 1;\n\n    while (index < sequenceLength + groupSize - 1) {\n      int currentIndex = index;\n      int previousIndex = index - 1;\n\n      // Handle wrapping around the sequence\n      currentIndex = currentIndex % sequenceLength;\n      previousIndex = previousIndex % sequenceLength;\n\n      if (colorSequence[currentIndex] != colorSequence[previousIndex]) {\n        currentSequenceLength++;\n      } else {\n        currentSequenceLength = 1;\n      }\n\n      if (currentSequenceLength >= groupSize) {\n        groupCount++;\n      }\n      index++;\n    }\n\n    return groupCount;\n    } \n};\n",
    "submit_ts": "1720280006",
    "subm_id": "1311773482"
}