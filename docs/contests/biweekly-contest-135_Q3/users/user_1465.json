{
    "username": "piccocube",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        C = Counter()\n        for i in range(len(nums)//2):\n            C[abs(nums[i] - nums[~i])] += 2\n        \n        min_replaces = len(nums)\n        for val, n in C.most_common():\n            if len(nums) - n >= min_replaces * 2: break\n            replaces = 0\n            for i in range(len(nums)//2):\n                if abs(nums[i] - nums[~i]) > val:\n                    replaces += 1\n                elif abs(nums[i] - nums[~i]) < val:\n                    if abs(nums[~i]) >= val or abs(nums[i]) >= val or abs(k - nums[i]) >= val or abs(k - nums[~i]) >= val: \n                        replaces += 1\n                    else:\n                        replaces += 2\n\n            min_replaces = min(min_replaces, replaces)\n            \n        \n        return min_replaces",
    "submit_ts": "1721488910",
    "subm_id": "1327436916"
}