{
    "username": "Lancer555",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n        \n        vector<vector<pair<int, int>>> top3InRows(m);\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> rowValues;\n            for (int j = 0; j < n; ++j) {\n                rowValues.push_back({board[i][j], j});\n            }\n\n            // Sort the row values in descending order based on the values\n            sort(rowValues.begin(), rowValues.end(), greater<pair<int, int>>());\n\n            // Take the top 3 values and their positions\n            for (int k = 0; k < min(3, n); ++k) {\n                top3InRows[i].push_back(rowValues[k]);\n            }\n        }\n        // Generate all combinations of 3 distinct rows\n        for (int r1 = 0; r1 < m - 2; ++r1) {\n        for (int r2 = r1 + 1; r2 < m - 1; ++r2) {\n            for (int r3 = r2 + 1; r3 < m; ++r3) {\n                \n                // Now try to select the best non-conflicting values\n                for (auto [val1, c1] : top3InRows[r1]) {\n                    for (auto [val2, c2] : top3InRows[r2]) {\n                        if (c2 == c1) continue; // Ensure no conflict in columns\n                        for (auto [val3, c3] : top3InRows[r3]) {\n                            if (c3 == c1 || c3 == c2) continue; // Ensure no conflict in columns\n\n                            // Calculate the sum of the selected values\n                            long long currentSum = (long long)val1 + (long long)val2 + (long long)val3;\n                            maxSum = max(maxSum, currentSum); // Update maxSum if needed\n                        }   \n                     }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n// 1 2 3\n// 4 5 6\n// 7 8 9\n\n// 3\n// 6\n// 9",
    "submit_ts": "1723908518",
    "subm_id": "1359155981"
}