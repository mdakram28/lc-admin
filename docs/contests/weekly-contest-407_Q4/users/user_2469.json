{
    "username": "bkim82",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int[] diff = new int[nums.length];\n\n        for (int i = 0; i < nums.length; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n\n        long ans = 0;\n\n            int start = 0;\n            Boolean positive = null;\n            for (int i = 0; i < diff.length; i++) {\n                if (diff[i] == 0) {\n                    if (positive != null) {\n                        ans += helper(Arrays.copyOfRange(diff, start, i));\n                        positive = null;\n                    }\n                    start = i+1;\n                }\n\n                if (diff[i] > 0) {\n                    if (positive == null) {\n                        positive = true;\n                        start = i;\n                    }\n                    \n                    else if (positive == false) {\n                        ans += helper(Arrays.copyOfRange(diff, start, i));\n                        positive = true;\n                        start = i;\n                    }\n                }\n\n                if (diff[i] < 0) {\n                    if (positive == null) {\n                        positive = false;\n                        start = i;\n                    }\n                    \n                    else if (positive == true) {\n                        ans += helper(Arrays.copyOfRange(diff, start, i));\n                        positive = false;\n                        start = i;\n                    }\n                }\n            }\n\n            // if (start == nums.length-1) {\n            //     return 0;\n            // }\n            ans += helper(Arrays.copyOfRange(diff, start, diff.length));\n            return ans;\n    }\n\n    public long helper(int[] diff) {\n\n        // for (int i: diff) {\n        //     System.out.print(i + \" \");\n        // }\n        // System.out.println(\"H\");\n\n        if (diff.length == 0) {\n            return 0;\n        }\n        if (diff.length == 1) {\n            return Math.abs(diff[0]);\n        }\n\n        int min = Math.abs(diff[0]);\n        for (int i = 0; i < diff.length; i++){ \n            min = Math.min(min, Math.abs(diff[i]));\n        }\n        \n        boolean positive = true;\n\n        if (diff[0] < 0) {\n            positive = false;\n        }\n\n\n        for (int i = 0; i < diff.length; i++) {\n            if (positive) {\n                diff[i] -= min;\n            }\n\n            else {\n                diff[i] += min;\n            }\n        }\n\n        // for (int i: diff) {\n        //     System.out.print(i + \" \");\n        // }\n        // System.out.println(\"X\");\n\n        // return min;\n        return min + minimumOperations(diff, new int[diff.length]);\n    }\n}",
    "submit_ts": "1721533807",
    "subm_id": "1328017093"
}