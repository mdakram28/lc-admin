{
    "username": "202111085",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n         std::map<int, std::vector<int>> diffMap;\n        std::vector<int> maxValues;\n\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int leftValue = nums[i];\n            int rightValue = nums[nums.size() - i - 1];\n            int difference = std::abs(leftValue - rightValue);\n\n            int maxValue = std::max({leftValue, rightValue, k - leftValue, k - rightValue});\n\n            diffMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int result = nums.size();  \n        std::sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& [difference, values] : diffMap) {\n            int position = std::lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            int tentativeResult = position * 2 + (nums.size() / 2 - position);\n\n            for (const auto& value : values) {\n                if (value < difference) {\n                    tentativeResult -= 2;\n                } else {\n                    tentativeResult -= 1;\n                }\n            }\n\n            result = std::min(result, tentativeResult);\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1721489978",
    "subm_id": "1327469454"
}