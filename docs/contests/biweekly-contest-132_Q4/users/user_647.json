{
    "username": "rahul75230",
    "submission": "class Solution {\npublic:\n     int fxn(vector<int>&v,int i,int n,int count,int k,int prev,vector<vector<vector<int>>>&dp)\n    {\n        if(i>=n)\n        {\n            if(count<=k) return 0;\n            return -1e9;\n        }\n           if(count>k) return -1e9;\n             if(dp[i][count][prev+1]!=-1) return dp[i][count][prev+1];\n        \n          if(prev==-1||v[i]!=v[prev])\n          {\n              int pp=1;\n              if(prev==-1) pp=0;\n              return dp[i][count][prev+1]= max(1+fxn(v,i+1,n,count+pp,k,i,dp),fxn(v,i+1,n,count,k,prev,dp));\n          }\n          else\n          {\n              return dp[i][count][prev+1]= 1+fxn(v,i+1,n,count,k,i,dp);\n          }\n    }\n    int maximumLength(vector<int>& v, int k) {\n        int n = v.size();\n        int mx = 1;\n         vector<int>vv;\n         int sum=0;\n         for(int i=0;i<n;i++)\n         {\n             // sum=sum+v[i];\n             vv.push_back(v[i]);\n         }\n        vector<int> tt(k + 1, -1);\n        vector<map<int, int>> pp(k + 1);\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        int p=-1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    dp[i][j] = max( 1 + tt[l],dp[i][j]);\n                }\n                if (pp[j].find(v[i]) != pp[j].end()) {\n                    dp[i][j] = max( 1 + pp[j][v[i]], dp[i][j]);\n                }\n                mx = max(dp[i][j],mx);\n            }\n            for (int j = 0; j <= k; j++) {\n                tt[j] = max(dp[i][j],tt[j]);\n                pp[j][v[i]] = max(pp[j][v[i]], dp[i][j]);\n            }\n            // p=max(dp[i][j],p);\n        }\n           for(int i=0;i<k;i++)\n           {\n               p=max(p,v[0]);\n           }\n        return mx;\n    }\n};",
    "submit_ts": "1717862282",
    "subm_id": "1281818073"
}