{
    "username": "rutvikjakasaniya",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        long result = 0;\n        int horizontalCount = 1, verticalCount = 1;\n        int i = horizontalCut.length - 1, j = verticalCut.length - 1;\n        \n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                result += (long) horizontalCut[i] * verticalCount;\n                horizontalCount++;\n                i--;\n            } else {\n                result += (long) verticalCut[j] * horizontalCount;\n                verticalCount++;\n                j--;\n            }\n        }\n        \n        long total = 0;\n        while (i >= 0) {\n            total += horizontalCut[i];\n            i--;\n        }\n        result += total * verticalCount;\n        \n        total = 0;\n        while (j >= 0) {\n            total += verticalCut[j];\n            j--;\n        }\n        result += total * horizontalCount;\n        \n        return result;\n    }\n}",
    "submit_ts": "1720926075",
    "subm_id": "1320275204"
}