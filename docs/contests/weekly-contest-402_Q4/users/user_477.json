{
    "username": "8tSbeO5j8y",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    class bitree{\n    public:\n        int sz;\n        vector<ll> c;\n        bitree(int s){\n            sz=s;\n            c=vector<ll>(s+5);\n        }\n        ll qry(int m){\n            ll ans = 0;\n            while(m){\n                ans += c[m];\n                m -= m&(-m);\n            }\n            return ans;\n        }\n        void update(int x, int value){\n            while(x <= sz){\n                c[x] += value;\n                x += x&(-x);\n            }\n        }\n    };\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        bitree tr(n+5);\n        for(int i=1;i<n-1;++i){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]) tr.update(i+1,1);\n        }\n        vector<int> ans;\n        for(auto&&q:queries){\n            if(q[0]==1){\n                if(q[2]-q[1]<1) ans.emplace_back(0);\n                else \n                ans.emplace_back(tr.qry(q[2])-tr.qry(q[1]+1));\n            }else{\n                int idx = q[1];\n                if(idx&&idx<n-1){\n                    if(nums[idx]>nums[idx-1]&&nums[idx]>nums[idx+1]&&(q[2]<=nums[idx-1]||q[2]<=nums[idx+1]))\n                    tr.update(idx+1,-1);\n                    else if((nums[idx]<=nums[idx-1]||nums[idx]<=nums[idx+1])&&q[2]>nums[idx-1]&&q[2]>nums[idx+1])\n                    tr.update(idx+1,1);\n                }\n                if(idx>1){\n                    int cur = idx-1;\n                    if(nums[cur]>nums[cur-1]&&nums[cur]>nums[cur+1]&&q[2]>=nums[cur]) tr.update(cur+1,-1);\n                    else if((nums[cur]>nums[cur-1]&&nums[cur]<=nums[cur+1])&&q[2]<nums[cur]) tr.update(cur+1,1);\n                }\n                if(idx<n-2){\n                    int cur = idx+1;\n                    if(nums[cur]>nums[cur-1]&&nums[cur]>nums[cur+1]&&q[2]>=nums[cur]) tr.update(cur+1,-1);\n                    else if((nums[cur]>nums[cur+1]&&nums[cur]<=nums[cur-1])&&q[2]<nums[cur]) tr.update(cur+1,1);\n                }\n                nums[idx]=q[2];\n            }\n        }return ans;\n    }\n};",
    "submit_ts": 1718507042.0
}