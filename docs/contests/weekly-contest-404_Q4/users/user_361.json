{
    "username": "yuansun42",
    "submission": "class Solution {\n    private int[] h;\n    private int[] e;\n    private int[] ne;\n    private int idx;\n    private static final int INF = 0x3f3f3f3f;\n    private int[] dep;\n    private int[] dis;\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int n = edges1.length + 1;\n        int m = edges2.length + 1;\n        this.h = new int[n + m];\n        Arrays.fill(h, -1);\n        this.e = new int[(n + m) << 1];\n        this.ne = new int[(n + m) << 1];\n        this.idx = 0;\n        for (int[] e : edges1) {\n            add(e[0], e[1]);\n            add(e[1], e[0]);\n        }\n\n        for (int[] e : edges2) {\n            add(e[0] + n, e[1] + n);\n            add(e[1] + n, e[0] + n);\n        }\n        this.dep = new int[n + m];\n        this.dis = new int[n + m];\n        dfs(0, -1);\n        chroot(0, -1, 0);\n        dfs(n, -1);\n        chroot(n, -1, 0);\n        int min = INF;\n        int max = 0;\n        for (int i = 0; i < n; i ++) {\n            min = Math.min(min, dis[i]);\n            max = Math.max(max,  dis[i]);\n        }\n        int rst = min;\n        min = INF;\n        for (int i = n; i < n + m; i ++) {\n            min = Math.min(min, dis[i]);\n            max = Math.max(max, dis[i]);\n        }\n        return Math.max(rst + min - 1, max - 1);\n    }\n\n    private int dfs(int x, int fa) {\n        int rst = 0;\n        for (int i = h[x]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa) continue;\n            rst = Math.max(rst, dfs(j, x));\n        }\n\n        rst ++;\n        dep[x] = rst;\n        return rst;\n    }\n\n    private void chroot(int x, int fa, int fa_cnt) {\n        int fir = fa_cnt, sec = 0;\n\n        for (int i = h[x]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa) continue;\n            if (dep[j] > fir) {\n                sec = fir;\n                fir = dep[j];\n            } else if (dep[j] > sec) sec = dep[j];\n        }\n\n        dis[x] = fir + 1;\n\n        for (int i = h[x]; i != -1; i = ne[i]) {\n            int j = e[i];\n            if (j == fa) continue;\n            if (dep[j] == fir) chroot(j, x, sec + 1);\n            else chroot(j, x, fir + 1);\n        }\n    }\n\n    private void add(int a, int b) {\n        e[idx] = b;\n        ne[idx] = h[a];\n        h[a] = idx ++;\n    }\n}",
    "submit_ts": 1719718353.0
}