{
    "username": "amangaya21",
    "submission": "class SegmentTree {\npublic:\n    vector<int> tree;\n    int n;\n\n    // Constructor\n    SegmentTree(vector<int>& arr)\n    {\n        n = arr.size();\n        tree.resize(4 * n);\n        build(arr, 0, 0, n - 1);\n    }\n\n    // Function to build the Segment Tree\n    void build(vector<int>& arr, int node, int start,\n               int end)\n    {\n        if (start == end) {\n            tree[node] = arr[start];\n        }\n        else {\n            int mid = (start + end) / 2;\n            build(arr, 2 * node + 1, start, mid);\n            build(arr, 2 * node + 2, mid + 1, end);\n\n            // bitwise AND of the children nodes\n            tree[node]\n                = tree[2 * node + 1] & tree[2 * node + 2];\n        }\n    }\n\n    // Overloading query function to be used recursively\n    int query(int l, int r)\n    {\n        return query(0, 0, n - 1, l, r);\n    }\n\n    // query function to get bitwise AND of the range\n    int query(int node, int s, int e, int l, int r)\n    {\n        if (r < s || e < l) {\n            return INT_MAX;\n        }\n        if (l <= s && e <= r) {\n            return tree[node];\n        }\n        int mid = (s + e) / 2;\n        int p1 = query(2 * node + 1, s, mid, l, r);\n        int p2 = query(2 * node + 2, mid + 1, e, l, r);\n\n        // bitwise AND operation result\n        return p1 & p2;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& arr, int k) {\n        //THISGDYJFVERWIJKOVHUPLREHGQDON HHIJKL CFDRFTGYUJK\n        \n          int n = arr.size();\n    SegmentTree st(arr);\n    int ans = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        int l = i - 1, r = n - 1, mid;\n\n        // binary search implementation\n        while (r - l > 1) {\n            mid = (l + r) / 2;\n            if (st.query(i, mid) >= k)\n                l = mid;\n            else\n                r = mid;\n        }\n        if (l != i - 1)\n            ans = min(ans, abs(st.query(i, l) - k));\n        ans = min(ans, abs(k - st.query(i, r)));\n    }\n    return ans;\n       // /nbtgowhhufueruhgyfgyewnjreiu487g87erhjbubugewg7t8wyqe09jrio3gjih8\n            //vtf6666egydmk,l,efjirhy7eewio['A]\n      //  SDERW8DKOLWPQ']\n        \n    }\n};",
    "submit_ts": 1717299144.0
}