{
    "username": "Naman Agarwal",
    "submission": "class Solution {\npublic:\n    bool check7(string num) {\n        int n = num.length(), gSum=0;\n        if (n == 0)\n            return 1;\n    \n        // Append required 0s at the beginning.\n        if (n % 3 == 1) {\n            num=\"00\" + num;\n            n += 2;\n        }\n        else if (n % 3 == 2) {\n            num= \"0\" + num;\n            n++;\n        }\n    \n        // add digits in group of three in gSum\n        int i, GSum = 0, p = 1;\n        for (i = n - 1; i >= 0; i--) {\n    \n            // group saves 3-digit group\n            int group = 0;\n            group += num[i--] - '0';\n            group += (num[i--] - '0') * 10;\n            group += (num[i] - '0') * 100;\n    \n            gSum = gSum + group * p;\n    \n            // generate alternate series of plus\n            // and minus\n            p *= (-1);\n        }\n    \n        return (gSum % 7 == 0);\n    }\n\n    string largestPalindrome(int n, int k) {\n        string res(n, '9');\n        // if (k == 1 || k == 3 || k == 9) return res;\n        if (k == 2 || k == 6) {\n            res[0] = '8';\n            res[n - 1] = '8';\n            // return res;\n        }\n        if (k == 4) {\n            if (n <= 4) res = string(n, '8');\n            else {\n                res[0] = '8';\n                res[1] = '8';\n                res[n - 1] = '8';\n                res[n - 2] = '8';\n            }\n            // return res;\n        }\n        if (k == 5) {\n            res[0] = '5';\n            res[n - 1] = '5';\n            // return res;\n        }\n        if (k == 6) {\n            int sum = 9 * n - 2;\n            if (n <= 2) res = string(n, '6');\n            else if (n % 2) res[n / 2] = '8';\n            else {\n                res[n / 2] = '7';\n                res[(n - 1) / 2] = '7';\n            }\n        }\n        if (k == 7) {\n            for (int i = 9; i >= 0; i--) {\n                if (n % 2) res[n / 2] = '0' + i;\n                else {\n                    res[n / 2] = '0' + i;\n                    res[(n - 1) / 2] = '0' + i;\n                }\n                if (check7(res)) break;\n            }\n        }\n        if (k == 8) {\n            if (n <= 6) res = string(n, '8');\n            else {\n                for (int i = 0; i < 3; i++) {\n                    res[i] = '8';\n                    res[n - i - 1] = '8';\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723952003",
    "subm_id": "1359785441"
}