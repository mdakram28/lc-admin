{
    "username": "vivekashokan1995",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int[] memo = new int[target.length()+1];\n        Arrays.fill(memo, -1);\n        memo[0] = 0;\n        memo[target.length()] = Integer.MAX_VALUE;\n        Trie trie = new Trie();\n        for(int i=0; i<words.length; i++) {\n            trie.add(words[i].toCharArray(), costs[i]);\n        }\n        \n        return bfs(trie, target.toCharArray(), memo);\n    }\n    \n    int bfs(Trie trie, char[] target, int[] memo) {\n        Queue<Integer> queue = new PriorityQueue<>();\n        queue.offer(0);\n        while(!queue.isEmpty()) {\n            int next = queue.poll();\n            trie.find(target, next, memo, queue);\n            // if(queue.isEmpty())\n                // System.out.printf(\"next:%d\\n\", next);\n            // System.out.println(queue);\n        }\n        return memo[target.length] == Integer.MAX_VALUE?-1:memo[target.length];\n    }\n}\n\nclass Trie {\n    Trie[] child = new Trie[26];\n    boolean word = false;\n    int cost = 0;\n    \n    void add(char[] word, int cost) {\n        Trie temp = this;\n        for(char c:word) {\n            if(temp.child[c-'a'] == null)\n                temp.child[c-'a'] = new Trie();\n            temp = temp.child[c-'a'];\n        }\n        temp.word = true;\n        if(temp.cost!=0)\n            temp.cost = Math.min(cost, temp.cost);\n        else\n            temp.cost = cost;\n    }\n    \n    void find(char[] target, int pos, int[] memo, Queue<Integer> queue) {\n        Trie temp = this;\n        for(int newPos = pos; newPos<target.length;) {\n            if(temp.child[target[newPos]-'a'] == null)\n                break;\n            temp = temp.child[target[newPos]-'a'];\n            newPos++;\n            // System.out.printf(\"pos:%d, newPos:%d, temp.cost:%d, word:%s\\n\", pos, newPos, temp.cost, temp.word);\n            if(temp.word) {\n                if(memo[newPos] == -1 || memo[newPos] > memo[pos]+temp.cost) {\n                    queue.offer(newPos);\n                    memo[newPos] = memo[pos]+temp.cost;\n                }\n            }\n        }\n    }\n}",
    "submit_ts": "1720322048",
    "subm_id": "1312339268"
}