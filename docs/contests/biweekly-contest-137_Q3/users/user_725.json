{
    "username": "Skyler Tsai",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n, m = len(board), len(board[0])\n        s3 = []\n        for i in range(n):\n            n1, n2, n3 = -float(inf), -float(inf), -float(inf)\n            p1, p2, p3 = -1, -1, -1\n            for j in range(m):\n                if board[i][j] >= n1:\n                    n1, n2, n3 = board[i][j], n1, n2\n                    p1, p2, p3 = j, p1, p2\n                elif board[i][j] >= n2:\n                    n2, n3 = board[i][j], n2\n                    p2, p3 = j, p2\n                elif board[i][j] > n3:\n                    n3 = board[i][j]\n                    p3 = j\n            s3.append([(n1, p1), (n2, p2), (n3, p3)])\n        \n        def check(a, b, c):\n            ret = -float('inf')\n            for i in range(3): # a\n                for j in range(3): # b\n                    for k in range(3): # c\n                        if s3[a][i][1] == s3[b][j][1] or s3[a][i][1] == s3[c][k][1] or s3[b][j][1] == s3[c][k][1]: continue\n                        ret = max(ret, s3[a][i][0] + s3[b][j][0] + s3[c][k][0])\n                        #print(i, j, k, s3[a][i][0] + s3[b][j][0] + s3[c][k][0])\n            return ret\n        \n        ret = -float('inf')\n        for i in range(n):\n            for j in range(i + 1, n):\n                for k in range(j + 1, n):\n                    ret = max(ret, check(i, j, k))\n        return ret",
    "submit_ts": "1723907251",
    "subm_id": "1359098099"
}