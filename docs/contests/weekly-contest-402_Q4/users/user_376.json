{
    "username": "jszqlew",
    "submission": "const int mxn = 1e5+5;\nint bit[mxn];\nint lsb(int x) {\n    return x & (-x);\n}\nint query(int x) {\n    ++x;\n    if ( x <= 0) return 0;\n    int res = 0;\n    for(; x > 0; x -= lsb(x)) res += bit[x];\n    return res;\n}\n\nint query(int l, int r) {\n    if (r < l) return 0;\n    return query(r) - query(l - 1);\n}\nvoid update(int x, int val) {\n    ++x;\n    for (; x <mxn; x+= lsb(x)) bit[x] += val;\n}\nint ispeak(int x, vector<int>& nums) {\n    return x != 0 && x + 1 != nums.size() && nums[x - 1] < nums[x] && nums[x + 1] < nums[x];\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        const int n = nums.size();\n        \n        memset(bit, 0, sizeof(int) * (n + 2));\n        for (int i=0; i<n; ++i) {\n            update(i, ispeak(i, nums));\n        }\n        vector<int> output;\n        for (int i=0; i<queries.size(); ++i) {\n            int t = queries[i][0], a = queries[i][1], b = queries[i][2];\n            if (t == 1) {\n                output.push_back(query(a + 1, b - 1));\n                \n            } else if (t == 2) {\n                nums[a] = b;\n                for (int j=max(0, a - 1); j <= min(n - 1, a + 1); ++j) {\n                    int old = query(j, j);\n                    int up = ispeak(j, nums) - old;\n                    update(j, up);\n                }\n            }\n        }\n        return output;\n    }\n};",
    "submit_ts": 1718507071.0
}