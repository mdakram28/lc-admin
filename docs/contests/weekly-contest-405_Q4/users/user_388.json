{
    "username": "richweiwei",
    "submission": "class Trie {\npublic:\n    unordered_map<char, Trie*> child;\n    char v;\n    bool e;\n    int cost;\n\n    Trie(char c){\n        v = c;\n        e = false;\n        cost = INT_MAX;\n    }\n\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        \n        int n = target.size();\n\n        int m = words.size();\n\n        Trie* trie = new Trie('#');\n\n        for (int i = 0; i < m; ++i) {\n            Trie* node = trie;\n            int l = words[i].size();\n            for (int j = 0; j < l; ++j) {\n                if (node->child.count(words[i][j])) {\n                    node = node->child[words[i][j]];\n                } else {\n                    node->child[words[i][j]] = new Trie(words[i][j]);\n                    node = node->child[words[i][j]];\n                }\n            }\n            node->e = true;\n            node->cost = min(node->cost, costs[i]);\n        }\n\n        \n        vector<int> memo(n, -1);\n\n        int sol = solve(0, target, trie, memo);\n\n        if (sol == 1000000000) {\n            return -1;\n        }\n        return sol;\n    }\n\n    int solve(int i, string& target, Trie* trie, vector<int>& memo) {\n\n        // cout<<i<<endl;\n\n        int n = target.size();\n\n        if (i == n) {\n            return 0;\n        }\n\n        int p = i;\n\n        if (memo[i] != -1) {\n            return memo[i];\n        }\n\n        int value = 1000000000;\n\n        Trie* node = trie;\n        while (i < n) {\n            if (node->child.count(target[i])) {\n                node = node->child[target[i]];\n                if (node->e) {\n                    value = min(value, node->cost + solve(i+1, target, trie, memo));\n                } \n            } else {\n                break;\n            }\n            i++;\n        }\n        \n\n        memo[p] = value;\n\n        return value;\n    }\n};",
    "submit_ts": "1720322006",
    "subm_id": "1312338184"
}