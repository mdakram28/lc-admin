{
    "username": "hkmaxi",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        \n        vector< int > dp(k+1,0);\n        unordered_map<int,unordered_map<int,int> > help;\n        \n        int ans=0;\n        \n        for(int i=1;i<=n;i++){\n            \n            int val=nums[i-1];\n            vector<int> eq(k+1,0);\n            for(int j=0;j<=k;j++){\n                \n                if(help.count(val) >0 and help[val].count(j)>0){\n                    eq[j]=max(eq[j],help[val][j]+1);\n                }\n                \n                if(j+1<=k){\n                    eq[j+1]=max(eq[j+1],dp[j]+1);\n                }\n                \n                \n                \n                \n                    \n            }\n            \n            eq[0]=max(eq[0],1);\n            \n            for(int j=1;j<=k;j++){\n                eq[j]=max(eq[j],eq[j-1]);\n            }\n            \n            \n            for(int j=0;j<=k;j++){\n                \n                if(j==0 or eq[j] != eq[j-1]){\n                    help[val][j]=max(help[val][j],eq[j]);\n                }\n                \n                ans=max(ans,eq[j]);\n                \n                \n                dp[j]=max(dp[j],eq[j]);\n                \n                \n                \n                \n            }\n        \n        }\n        //cout<<endl;\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717862062.0
}