{
    "username": "mble6125",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size(), res=1;\n        vector<unordered_map<int, int>> M(k+2);\n        M[0][nums[0]]=1;\n        vector<vector<array<int,2>>> count(k+2);\n        count[0]={{1, nums[0]}};\n        \n        for (int i=1; i<n; ++i) {\n            res=max(++M[0][nums[i]], res);\n            for (int j=1; j<=k; ++j) {\n                M[j][nums[i]]++;\n                for (auto& a : count[j-1]) {\n                    if (a[1]!=nums[i]) {\n                        M[j][nums[i]]=max(M[j][nums[i]], a[0]+1);\n                        // cout<<M[j][nums[i]]<<\" \"<<nums[i]<<\" \"<<a[0]<<endl;\n                    }\n                }\n                res=max(res, M[j][nums[i]]);\n            }\n            \n            for (int j=0; j<=k; ++j) {\n                bool p=false;\n                for(auto& a : count[j]) {\n                    if (a[1]==nums[i]) {\n                        a[0]=max(a[0], M[j][nums[i]]);\n                        p=true;\n                    }\n                }\n                if (!p) {\n                    count[j].push_back({M[j][nums[i]], nums[i]});\n                }\n                sort(count[j].begin(), count[j].end(), greater<array<int,2>>());\n                if (count[j].size()==3)\n                    count[j].pop_back();\n            }\n        }\n        \n        \n        return res;\n    }\n};",
    "submit_ts": 1717860455.0
}