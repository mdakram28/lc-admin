{
    "username": "MmnvDUhqGx",
    "submission": "using namespace std;\n\nclass Node {\npublic:\n    vector<Node*> ch;\n    int ct;\n    bool ew;\n\n    Node() : ch(26, nullptr), ct(INT_MAX), ew(false) {}\n};\n\nclass Trie {\npublic:\n    Node* rt;\n\n    Trie() {\n        rt = new Node();\n    }\n\n    void insert(const string& wd, int ct) {\n        Node* nd = rt;\n        for (char c : wd) {\n            if (!nd->ch[c - 'a']) {\n                nd->ch[c - 'a'] = new Node();\n            }\n            nd = nd->ch[c - 'a'];\n        }\n        nd->ct = min(ct, nd->ct);\n        nd->ew = true;\n    }\n\n    Node* getRoot() {\n        return rt;\n    }\n};\n\nclass Solution {\npublic:\n    void initCosts(vector<int>& mc, int sz) {\n        fill(mc.begin(), mc.end(), INT_MAX);\n        mc[0] = 0;\n    }\n\n    void updateCosts(Node* rt, const string& t, vector<int>& mc, int i) {\n        Node* nd = rt;\n        int j = i;\n        while (j < t.size() && nd->ch[t[j] - 'a']) {\n            nd = nd->ch[t[j] - 'a'];\n            mc[j + 1] = nd->ew ? min(mc[j + 1], mc[i] + nd->ct) : mc[j + 1];\n            ++j;\n        }\n    }\n\n    int minimumCost(string t, vector<string>& ws, vector<int>& cs) {\n        Trie tr;\n        int sz = t.size();\n        vector<int> mc(sz + 1);\n\n        for (int i = 0; i < ws.size(); ++i) {\n            tr.insert(ws[i], cs[i]);\n        }\n\n        initCosts(mc, sz);\n\n        for (int i = 0; i < sz; ++i) {\n            if (mc[i] != INT_MAX) {\n                updateCosts(tr.getRoot(), t, mc, i);\n            }\n        }\n\n        return mc[sz] == INT_MAX ? -1 : mc[sz];\n    }\n};\n",
    "submit_ts": "1720322616",
    "subm_id": "1312354628"
}