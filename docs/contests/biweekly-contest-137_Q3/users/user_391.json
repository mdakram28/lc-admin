{
    "username": "czjnbb",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        \n        m, n = len(board), len(board[0])\n        \n        dp = defaultdict(int)\n        res = -10**10\n        \n        comb = list(zip(board[0], list(range(n))))\n        comb.sort(reverse = True)\n        \n        for j in range(3):\n            mv, mp = comb[j]\n            dp[1<<mp] = mv\n                                    \n        for i in range(1, m):\n            \n            comb = list(zip(board[i], list(range(n))))\n            comb.sort(reverse = True)\n            # tmp = deepcopy(dp)\n            # tmp = defaultdict(int)\n                \n            for k,v in list(dp.items()):\n                # if bin(k).count('1') == 3:\n                #     res = max(res, v)\n                #     del dp[k]\n                #     continue\n                \n                for j in range(3):\n                    mv, mp = comb[j]\n                    if (1<<mp) & k:\n                        continue\n                    nk = k ^ (1<<mp)\n                    if nk not in dp or dp[nk] < v + mv:\n                        dp[nk] = v + mv\n                        \n            for k,v in list(dp.items()):\n                if bin(k).count('1') == 3:\n                    res = max(res, v)\n                    del dp[k]\n                        \n                \n            for j in range(3):\n                mv, mp = comb[j]        \n                if 1<<mp not in dp or dp[1<<mp] < mv:\n                    dp[1<<mp] = mv\n            \n            # print(dp)\n            \n                                    \n        for k,v in dp.items():\n            if bin(k).count('1') == 3:\n                res = max(res, v)\n                \n        return res\n            \n            \n            ",
    "submit_ts": "1723909013",
    "subm_id": "1359176131"
}