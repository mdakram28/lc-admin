{
    "username": "DenisGubar",
    "submission": "static short F[30][30][30][30];\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int N = grid.size(), M = grid[0].size();\n        int result = N * M;\n        for (int bx = 0; bx < N; ++bx)\n            for (int by = 0; by < M; ++by)\n                for (int ex = bx; ex < N; ++ex)\n                    for (int ey = by; ey < M; ++ey)\n                    {\n                        int left = 100, right = 0, bottom = 0, top = 100;\n                        for (int i = bx; i <= ex; ++i)\n                            for (int j = by; j <= ey; ++j)\n                                if (grid[i][j])\n                                    left = min(left, j),\n                                    right = max(right, j),\n                                    top = min(top, i),\n                                    bottom = max(bottom, i);\n                        F[bx][by][ex][ey] = max(1, (right - left + 1) * (bottom - top + 1));\n                    }\n        // x\n        // x\n        // x\n        for (int ax = 0; ax < N - 2; ++ax)\n            for (int bx = ax + 1; bx < N - 1; ++bx)\n                result = min(result, F[0][0][ax][M - 1] + F[ax + 1][0][bx][M - 1] + F[bx + 1][0][N - 1][M - 1]);\n        // x x x\n        for (int ay = 0; ay < M - 2; ++ay)\n            for (int by = ay + 1; by < M - 1; ++by)\n                result = min(result, F[0][0][N - 1][ay] + F[0][ay + 1][N - 1][by] + F[0][by + 1][N - 1][M - 1]);\n        // x\n        // x x\n        for (int ax = 0; ax < N - 1; ++ax)\n            for (int ay = 0; ay < M - 1; ++ay)\n            {\n                result = min(result, F[0][0][ax][M - 1] + F[ax + 1][0][N - 1][ay] + F[ax + 1][ay + 1][N - 1][M - 1]);\n                result = min(result, F[0][0][ax][ay] + F[0][ay + 1][ax][M - 1] + F[ax + 1][0][N - 1][M - 1]);\n                result = min(result, F[0][0][N - 1][ay] + F[0][ay + 1][ax][M - 1] + F[ax + 1][ay + 1][N - 1][M - 1]);\n                result = min(result, F[0][0][ax][ay] + F[ax + 1][0][N - 1][ay] + F[0][ay + 1][N - 1][M - 1]);\n            }\n        return result;\n    }\n};\n",
    "submit_ts": 1719114840.0
}