{
    "username": "metaphysica1412",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        jump_stairs = [0] * 32\n        res = 0\n        if (k <= 1):\n            res = 1\n        for i in range(31):\n            jump_stairs[i] = 1 << (i + 1)\n            if (jump_stairs[i] - k) > i + 2:\n                break\n            elif (jump_stairs[i] - k) >= 0:\n                t = jump_stairs[i] - k\n                tmp = 1\n                for j in range(t):\n                    tmp *= (i + 2 - j)\n                for j in range(1, t + 1):\n                    tmp //= j\n                res += tmp\n                #print(k, jump_stairs[i], tmp)\n        return res\n                ",
    "submit_ts": 1716087718.0
}