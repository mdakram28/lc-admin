{
    "username": "kg_codex",
    "submission": "class Solution {\npublic:\n     int calculateDifference(int x, int y) {\n        return abs(x - y);\n    }\n\n    int findMaxElement(int x, int y, int k) {\n        return max({x, y, k - x, k - y});\n    }\n\n    int processDifferences(map<int, vector<int>>& diffMap, vector<int>& maxVals, int n) {\n        int minChanges = n;\n        sort(maxVals.begin(), maxVals.end());\n\n        for (auto& entry : diffMap) {\n            int diff = entry.first;\n            int count = lower_bound(maxVals.begin(), maxVals.end(), diff) - maxVals.begin();\n            count = count * 2 + (n / 2 - count);\n\n            for (auto& maxVal : entry.second) {\n                if (maxVal < diff) {\n                    count -= 2;\n                } else {\n                    count -= 1;\n                }\n            }\n\n            minChanges = min(minChanges, count);\n        }\n\n        return minChanges;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> maxVals;\n        int n = nums.size();\n\n        auto calculateAndStore = [&](int i) {\n            int left = nums[i];\n            int right = nums[n - i - 1];\n            int diff = calculateDifference(left, right);\n            int maxVal = findMaxElement(left, right, k);\n            diffMap[diff].push_back(maxVal);\n            maxVals.push_back(maxVal);\n        };\n\n        for (int i = 0; i < n / 2; ++i) {\n            calculateAndStore(i);\n        }\n\n        return processDifferences(diffMap, maxVals, n);\n    }\n};",
    "submit_ts": "1721490005",
    "subm_id": "1327470274"
}