{
    "username": "mohan_312",
    "submission": "#include<bits/stdc++.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& numbers, int k) {\n        map<int, vector<int>> differencesMap;\nvector<int> maxValues;\n\nfor (int index = 0; index < numbers.size() / 2; index++) {\n    int firstElement = numbers[index];\n    int secondElement = numbers[numbers.size() - index - 1];\n    int difference = abs(firstElement - secondElement);\n    int maxElement = max({firstElement, secondElement, k - firstElement, k - secondElement});\n    differencesMap[difference].push_back(maxElement);\n    maxValues.push_back(maxElement);\n}\n\nint minimumOperations = numbers.size();\nsort(maxValues.begin(), maxValues.end());\n\nfor (auto &entry : differencesMap) {\n    int difference = entry.first;\n    int operationCount = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n    operationCount = operationCount * 2 + (numbers.size() / 2 - operationCount);\n\n    for (auto &maxElement : entry.second) {\n        if (maxElement < difference) {\n            operationCount -= 2;\n        } else {\n            operationCount -= 1;\n        }\n    }\n\n    minimumOperations = min(minimumOperations, operationCount);\n}\n\nreturn minimumOperations;\n\n    }\n};",
    "submit_ts": "1721488739",
    "subm_id": "1327431728"
}