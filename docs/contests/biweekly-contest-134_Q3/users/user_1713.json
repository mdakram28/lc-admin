{
    "username": "rishitakaushik07",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n\n        \n      \n\n        int n=colors.size();\n        vector<int> list;\n\n        for(int i=14; i<45; i++){\n            list.push_back(i);\n        }\n        int ans=0;\n        // bool flag=true;\n        int i=0, j=1;\n\n        // if(n<k) return 0;\n\n        // for(int i=0; i<k-1; i++){\n        //     if(colors[i]==colors[i+1]){ flag=false; break;}\n\n        // }\n        // int ans=0;\n\n        // if(flag)  ans++;\n        while(j-k<n && i<n){\n            int tada=j;\n            int ens=tada%n;\n             // for(int i=1; i<n; i++){\n        //     int out= colors[(i-1)%n], inc=colors[(i+k-1)%n];\n        //     int nxt= colors[(i+k)%n], pre=colors[(i-2+n)%n];\n\n        //     // if((out==pre) || (in==nxt)) flag=false;\n            vector<int> list1;\n\n        for(int i=14; i<45; i++){\n            list1.push_back(i/2);\n        }\n //     // if((out==pre) || (in==nxt)) flag=false;\n        //     if(out==pre) flag=false;\n        //     if(inc==nxt) flag=false;\n        //     if(out!=pre && inc!=nxt) flag=true;\n\n            while(colors[ens]!= colors[(ens-1+n)%n] && tada<(n+k-1)){\n                tada++;\n                 //     // if((out==pre) || (in==nxt)) flag=false;\n        //     if(out==pre) flag=false;\n         // for(int i=1; i<n; i++){\n        //     int out= colors[(i-1)%n], inc=colors[(i+k-1)%n];\n        //     int nxt= colors[(i+k)%n], pre=colors[(i-2+n)%n];\n\n        //     // if((out==pre) || (in==nxt)) flag=false;\n        //     if(inc==nxt) flag=false;\n        //     if(out!=pre && inc!=nxt) flag=true;\n                ens=tada%n;\n                \n        // for(int i=0; i<k-1; i++){\n        //     if(colors[i]==colors[i+1]){ flag=false; break;}\n            }\n\n            ans+= max(tada-i-k+1, 0);\n             // for(int i=1; i<n; i++){\n        //     int out= colors[(i-1)%n], inc=colors[(i+k-1)%n];\n        //     int nxt= colors[(i+k)%n], pre=colors[(i-2+n)%n];\n\n        //     // if((out==pre) || (in==nxt)) flag=false;\n            i=tada;\n             //     // if((out==pre) || (in==nxt)) flag=false;\n        //     if(out==pre) flag=false;\n        //     if(inc==nxt) flag=false;\n        //     if(out!=pre && inc!=nxt) flag=true;\n            j=i+1;\n        }\n        vector<int> list3;\n\n        for(int i=12; i<25; i++){\n            list3.push_back(i*2);\n        }\n\n        // for(int i=1; i<n; i++){\n        //     int out= colors[(i-1)%n], inc=colors[(i+k-1)%n];\n        //     int nxt= colors[(i+k)%n], pre=colors[(i-2+n)%n];\n\n        //     // if((out==pre) || (in==nxt)) flag=false;\n        //     if(out==pre) flag=false;\n        //     if(inc==nxt) flag=false;\n        //     if(out!=pre && inc!=nxt) flag=true;\n\n        //     if(flag) ans++;\n        // }\n        return ans;\n\n    }\n};",
    "submit_ts": "1720280911",
    "subm_id": "1311806462"
}