{
    "username": "jeel_vaishnav",
    "submission": "class Solution {\n    public void add(int[] bit, int ind, int val) {\n        ind += 1;\n        while(ind < bit.length) {\n            bit[ind] += val;\n            ind += ind & (-ind);\n        }\n    }\n    public int sum(int[] bit, int ind) {\n        ind += 1;\n        int ans = 0;\n        while(ind > 0) {\n            ans += bit[ind];\n            ind -= ind & (-ind);\n        }\n        return ans;\n    }\n    public void updatePeak(int[] nums, int ind, int[] isPeak, int[] bit) {\n        if(ind <= 0 || ind >= nums.length - 1) {\n            return;\n        }\n        add(bit, ind, -isPeak[ind]);\n        isPeak[ind] = 0;\n        if(nums[ind] > nums[ind - 1] && nums[ind] > nums[ind + 1]) {\n            isPeak[ind] = 1;\n            add(bit, ind, 1);\n        }\n    }\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        \n        int[] isPeak = new int[n];\n        int[] bit = new int[n + 1];\n        for(int i = 1; i < n - 1; ++i) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                isPeak[i] = 1;\n                \n                add(bit, i, 1);\n            }\n        }\n        \n        List<Integer> ans = new ArrayList<>();\n        for(int[] query: queries) {\n            int qtype = query[0];\n            \n            if(qtype == 1) {\n                int l = query[1];\n                int r = query[2];\n                \n//                 System.out.println(l + \" \" + r + \" \" + sum(bit, r) + \" \" + sum(bit, l - 1));\n                \n//                 for(int i = 0; i < n; ++i) {\n//                     System.out.print(isPeak[i] + \" \");\n//                 }\n//                 System.out.println();\n                \n                int cans = sum(bit, r) - sum(bit, l - 1) - isPeak[r];\n                \n                if(r != l) {\n                    cans -= isPeak[l];\n                }\n                \n                ans.add(cans);\n            } else {\n                int ind = query[1];\n                int val = query[2];\n                \n                nums[ind] = val;\n                \n                updatePeak(nums, ind, isPeak, bit);\n                updatePeak(nums, ind - 1, isPeak, bit);\n                updatePeak(nums, ind + 1, isPeak, bit);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1718507466",
    "subm_id": "1289652455"
}