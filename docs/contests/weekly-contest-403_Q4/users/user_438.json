{
    "username": "josh7788",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        return min(grid, 0, 0, grid.length - 1, grid[0].length - 1, 2);\n    }\n\n    private static int min(int[][] grid, int x1, int y1, int x2, int y2, int cut) {\n        if (x1 > x2 || y1 > y2) {\n            return 0;\n        }\n        if (cut == 0) {\n            return trim(grid, x1, y1, x2, y2);\n        }\n\n        int res = Integer.MAX_VALUE;\n        for (int row = x1; row < x2; row++) {\n            res = Math.min(res, min(grid, x1, y1, row, y2, cut - 1) + min(grid, row + 1, y1, x2, y2, 0));\n            res = Math.min(res, min(grid, x1, y1, row, y2, 0) + min(grid, row + 1, y1, x2, y2, cut - 1));\n        }\n\n        for (int col = y1; col < y2; col++) {\n            res = Math.min(res, min(grid, x1, y1, x2, col, cut - 1) + min(grid, x1, col + 1, x2, y2, 0));\n            res = Math.min(res, min(grid, x1, y1, x2, col, 0) + min(grid, x1, col + 1, x2, y2, cut - 1));\n        }\n        return res;\n    }\n\n    private static int trim(int[][] grid, int x1, int y1, int x2, int y2) {\n        int rowStart = Integer.MAX_VALUE, rowEnd = -1;\n        int colStart = Integer.MAX_VALUE, colEnd = -1;\n\n        for (int row = x1; row <= x2; row++) {\n            for (int col = y1; col <= y2; col++) {\n                if (grid[row][col] == 0) {\n                    continue;\n                }\n\n                rowStart = Math.min(rowStart, row);\n                rowEnd = Math.max(rowEnd, row);\n\n                colStart = Math.min(colStart, col);\n                colEnd = Math.max(colEnd, col);\n            }\n        }\n\n        return (colEnd - colStart + 1) * (rowEnd - rowStart + 1);\n    }\n}",
    "submit_ts": 1719114471.0
}