{
    "username": "alastian",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        @cache\n        def dfs(idx, is_down, jump):\n            if idx < 0 or jump < 0:\n                return 0\n            if idx == 0:\n                if is_down and (jump == 0 or jump == 1):\n                    return 1\n                return 0\n            if idx == 1:\n                if jump == 0 and not is_down:\n                    return 1\n                if jump == 1:\n                    return 1\n                if jump == 2 and is_down:\n                    return 1\n                return 0\n            \n            ans = 0\n            if is_down:\n                ans += dfs(idx+1, False, jump)\n            else:\n                ans += dfs(idx-2**(jump-1), False, jump-1) + dfs(idx-2**(jump-1), True, jump-1)\n            return ans\n        \n        res = 0\n        for i in range(0, 31):\n            res += dfs(k, True, i) + dfs(k, False, i)\n        return res\n            \n                ",
    "submit_ts": "1716088727",
    "subm_id": "1261822300"
}