{
    "username": "Shivesh Gupta",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<pair<long long,long long>>>grid(m, vector<pair<long long,long long>>(n));\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                grid[i][j] = {board[i][j], j};\n            }\n            sort(grid[i].begin(), grid[i].end());\n        }\n        long long ans = -1e12;\n        for(int i=0;i<m-2;i++){\n            for(int j=i+1;j<m-1;j++){\n                for(int k=j+1;k<m;k++){\n                    for(int x=n-3;x<n;x++){\n                        for(int y=n-3;y<n;y++){\n                            for(int z=n-3;z<n;z++){\n                                int col1 = grid[i][x].second, col2 = grid[j][y].second, col3 = grid[k][z].second;\n                                if((col1 != col2) && (col1 != col3) && (col2 != col3)) \n                                    ans = max(ans, (grid[i][x].first+grid[j][y].first+grid[k][z].first));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909581",
    "subm_id": "1359197975"
}