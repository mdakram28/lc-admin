{
    "username": "2499370956",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeSet<Integer> onShortestPath = new TreeSet<>();\n        for (int i = 0; i < n; i++) {\n            onShortestPath.add(i);\n        }\n\n        int q = queries.length;\n        int[] out = new int[q];\n        for (int i = 0; i < q; i++) {\n            int from = queries[i][0];\n            int to = queries[i][1];\n            Integer higher = onShortestPath.higher(from);\n            while (higher != null && higher < to) {\n                onShortestPath.remove(higher);\n                higher = onShortestPath.higher(from);\n            }\n            out[i] = onShortestPath.size() - 1;\n        }\n        return out;\n    }\n}",
    "submit_ts": "1722739934",
    "subm_id": "1343706947"
}