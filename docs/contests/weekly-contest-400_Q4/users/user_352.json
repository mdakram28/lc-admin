{
    "username": "Maillew",
    "submission": "\ntypedef long long ll;\n\ntypedef long double ld;\ntypedef pair<int,int> pii;\nbool DEBUG = 1;\n#define log2(x) ((x==0)? 0:63 - __builtin_clzll(x))\n#define pb push_back\n#define ms(x, y) memset(x, y, sizeof x)\n#define popcount __builtin_popcount\n#define all(v) v.begin(), v.end()\n\nconst int inf=0x3f3f3f3f; const ll LLINF=0x3f3f3f3f3f3f3f3f;\ninline ll gcd(ll a, ll b) {return b == 0 ? a : gcd(b, a % b);}\ninline ll lcm(ll a, ll b) { return a / gcd(a, b) * b;}\n\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (DEBUG){\n        cout << vals << \" = \";\n        string delim = \"\";\n        (..., (cout << delim << values, delim = \", \"));\n        cout << endl;\n    }\n}\n\n//cant compile == MLE\n//assert ideas with ur slow, to find out why ur fast WA\n//make sure to fully actuate your ideas before coding it up; spend more time on samples and examples\n//cant do ms on doubles\n//be more thoughtful and careful in impl; work on one shot ac -> this means be more thoughtful and careful in impl\n\n/*\n    *int overflow, array bounds\n    *special/edge cases n=1, n=0,\n    *reread when stuck -> couldve missed small detail\n    *write stuff down\n    *take it slow and read\n    *if WA, reread\n*/\n\n/*\n    STRATEGIES:\n    Invariants, Binary Search, SQRT distinct, Surprise Graph\n    Characteristics of the optimal solution\n    Recall - Specific to General - Guess - Think like a problem - Pick a Method - Print Out and Look\n*/\n\n// SUNK COST FALLACY\n// WRITE STUFF DOWN - SAMPLES AND EXAMPLES - GO SLOW - DONT TUNNEL VISION - DONT SPAM SUB\n\nconst ll mod = 1e9+7;\nstruct tri{\n    ll x,y,z;\n    bool operator<(const tri &one)const{\n        if(x==one.x) return y<one.y;\n        return x<one.x;\n    }//pqs are backwards\n};\nll fpow(ll a, ll b){\n    if (b == 0) return 1;\n    ll res = fpow(a, b / 2)%mod;\n    if (b % 2) return ((res * res) * a) %mod;\n    else return (res * res) %mod;\n}\nint target;\nstruct SparseTable{\n\tvector<int>logs;\n\tvector<vector<int>>spt;\n\tint ln;\n\tint n;\n\tvoid init(int _n, int arr[]){//has to be same data type as input array; if not itll flag error in init\n\t\tn = _n;\n\t\tlogs.resize(n+1);\n\t\tspt.resize(n+1);\n\t\tln = 0;\n\t\tfor(int i = 1; i<=n; i*=2){\n\t\t\tlogs[i] = ln; ln++;\n\t\t}\n\t\tfor(int i = 1; i<=n; i++){\n\t\t\tspt[i].resize(ln+1);\n\t\t\tlogs[i] = max(logs[i],logs[i-1]);\n\t\t\tspt[i][0] = arr[i];\n\t\t}\n\t\tfor(int i = 1; i<=ln; i++){\n\t\t\tfor(int j = 1; j+(1<<i)-1<=n; j++){\n\t\t\t\tspt[j][i] = spt[j][i-1]&spt[j+(1<<(i-1))][i-1];\n\t\t\t}\n\t\t}\n\t}\n\tint query(int l, int r){\n        assert(1<=l && l<=n);\n        assert(1<=r && r<=n);\n\t\tint lg = logs[r-l+1];\n\t\treturn spt[l][lg]&spt[r-(1<<lg)+1][lg];\n\t}\n};\nint n;\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        //go through each bit in the answer\n        //how would we do it if we need it to be 0?\n            //build the answer up\n        n = nums.size();\n        target = k;\n        \n        int arr[n+1];\n        for(int i =1; i<=n; i++) arr[i] = nums[i-1];\n        SparseTable st;\n        st.init(n,arr);\n        int ans = 1e9;\n        for(int i =1; i<=n; i++){\n            //for each index, we can bsearch for best answer\n            int lo =i-1, hi = n+1;\n            //bsearch for best answer that is >= and <=\n            while(lo+1<hi){//ans is <=k, it is dec tho\n                int mid = (lo+hi)/2;\n                ans = min(ans, abs(k-st.query(i,mid)));\n                if(st.query(i,mid)>k){\n                    lo = mid;\n                }\n                else{\n                    hi = mid;\n                }\n            }\n            lo = i-1, hi = n+1;\n            while(lo+1<hi){//ans is >=k, it is dec tho\n                int mid = (lo+hi)/2;\n                ans = min(ans, abs(k-st.query(i,mid)));\n                if(st.query(i,mid)<k){\n                    hi = mid;\n                }\n                else{\n                    lo = mid;\n                }\n            }\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1717298153",
    "subm_id": "1274769310"
}