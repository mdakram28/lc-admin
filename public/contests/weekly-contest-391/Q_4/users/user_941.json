{
    "username": "nk050870",
    "submission": "class Solution {\npublic:\n    int hash(int i,int j){\n        return 100*i + j;\n    }\n    int mini(vector<vector<int>>& points, int idx) {\n        int n = points.size();\n        vector<int> sum;\n        vector<int> diff;\n        for(int i=0;i<points.size();i++){\n            if(i==idx) continue;\n            sum.push_back(points[i][0]+points[i][1]);\n            diff.push_back(points[i][0] -points[i][1]);\n            \n        }\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        return max(sum.back()-sum.front(),diff.back()-diff.front());\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int,int>> sum(points.size());\n        vector<pair<int,int>> diff(points.size());\n        for(int i=0;i<points.size();i++){\n            sum[i] = {points[i][0]+points[i][1],i};\n            diff[i] = {points[i][0] -points[i][1],i};\n            \n        }\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        unordered_map<int,int> mp;\n        mp[sum.front().second]++;\n        mp[sum.back().second]++;\n        mp[diff.front().second]++;\n        mp[diff.back().second]++;\n        mp[sum[1].second]++;\n        mp[sum[n-2].second]++;\n        mp[diff[1].second]++;\n        mp[diff[n-2].second]++;\n        int ans = INT_MAX;\n        for(auto it:mp){\n            ans = min(ans,mini(points,it.first));\n        }\n        return ans;\n    }\n};"
}