{
    "username": "Spyy_23",
    "submission": "\nusing namespace std;\n\nclass Solution {\nprivate:\n    const int M = 1000000007;\n    const int MAX_I = 400;\n\n    void calc(int n, vector<vector<int>>& reqs, vector<vector<long long>>& p) {\n        unordered_map<int, int> r;\n        for (auto& req : reqs) {\n            r[req[0] + 1] = req[1];\n        }\n\n        p[0][0] = 1;\n\n        for (int l = 1; l <= n; l++) {\n            for (int i = 0; i <= MAX_I; i++) {\n                for (int np = 0; np < l; np++) {\n                    int pi = i - np;\n                    if (pi >= 0) {\n                        p[l][i] = (p[l][i] + p[l - 1][pi]) % M;\n                    }\n                }\n            }\n\n            if (r.count(l) > 0) {\n                int ti = r[l];\n                for (int i = 0; i <= MAX_I; i++) {\n                    if (i != ti) {\n                        p[l][i] = 0;\n                    }\n                }\n            }\n        }\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        vector<vector<long long>> p(n + 1, vector<long long>(MAX_I + 1, 0));\n        \n        \n        calc(n, reqs, p);\n\n        long long res = 0;\n        for (long long c : p[n]) {\n            res = (res + c) % M;\n        }\n\n        return static_cast<int>(res);\n    }\n};\n\n\n",
    "submit_ts": "1719070980",
    "subm_id": "1296836277"
}