{
    "username": "Rishabh8124",
    "submission": "class Solution {\npublic:\n    long long prefix[(int)4e5+10];\n    void build(vector<int>& nums, int ind, int i, int j) {\n        // cout << ind << endl;\n        if (i == j) {prefix[ind] = nums[i]; return;}\n\n        int mid = (i+j)/2;\n        build(nums, 2*ind+1, i, mid);\n        build(nums, 2*ind+2, mid+1, j);\n\n        prefix[ind] = prefix[2*ind+1]&prefix[2*ind+2];\n    }\n\n    long long get(int i, int j, int l, int r, int ind) {\n        // cout << i << \" \" << j << endl;\n        if (l<=i && r>=j) return prefix[ind];\n        if (l > j || r < i) return LONG_LONG_MAX;\n\n        int mid = (i+j)/2;\n        return get(i, mid, l, r, 2*ind+1)&get(mid+1, j, l, r, 2*ind+2);\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        build(nums, 0, 0, n-1);\n\n        long long ans = 0;\n\n        cout << get(0, n-1, 0, n-1, 0) << endl;\n\n        for(int i=0; i<n; i++) {\n            int k1 = i, k2 = n-1;\n            while(k1 < k2) {\n                int mid = (k1 + k2)/2;\n                if (get(0, n-1, i, mid, 0)>k) k1 = mid+1;\n                else k2 = mid;\n            }\n\n            int i1 = k1, i2 = k2;\n\n            k1 = i, k2 = n-1;\n            while(k1 < k2) {\n                int mid = (k1 + k2)/2;\n                if (get(0, n-1, i, mid, 0)>(k-1)) k1 = mid+1;\n                else k2 = mid;\n            }\n\n            // cout << i << \" \" << i1 << \" \" << k1 << endl;\n            if (get(0, n-1, i, k1, 0) == k) k1++;\n            ans += k1 - i1;\n        }\n\n        return ans;\n    } \n};",
    "submit_ts": "1720280437",
    "subm_id": "1311789401"
}