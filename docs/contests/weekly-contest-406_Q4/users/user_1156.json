{
    "username": "chess_nf3",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] arr1, int[] arr2) {\n         Arrays.sort(arr1);\n        Arrays.sort(arr2);\n       \n        int h = arr1.length - 1;\n        int v = arr2.length - 1;\n        int hh = 1, vv = 1;\n        long ans = 0; \n        \n        while (h >= 0 && v >= 0) {\n            if (arr1[h] > arr2[v]) {\n                ans += (long) arr1[h] * vv;\n                hh++;\n                h--;\n            } else {\n                ans += (long) arr2[v] * hh;\n                vv++;\n                v--;\n            }\n        }\n        \n      \n        while (h >= 0) {\n            ans += (long) arr1[h] * vv;\n            h--;\n        }\n        \n        while (v >= 0) {\n            ans += (long) arr2[v] * hh;\n            v--;\n        }\n        \n       \n        return ans;\n    }\n}",
    "submit_ts": "1720925793",
    "subm_id": "1320266403"
}