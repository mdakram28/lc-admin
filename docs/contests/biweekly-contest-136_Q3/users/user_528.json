{
    "username": "JasamritSingh",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n\n        int changes = 0;\n        for (int i=0; i<m/2; i++){\n            for (int j=0; j<n/2; j++){\n                int pop = 0;\n                pop += grid[i][j];\n                pop += grid[m-i-1][j];\n                pop += grid[i][n-j-1];\n                pop += grid[m-i-1][n-j-1];\n\n                changes += min(abs(4-pop), pop);\n            }\n        }\n\n        // alter the middle if double odd?\n        if (m%2==1 && n%2==1 && grid[m/2][n/2]==1) changes++;\n\n        int exchanges = 0;\n        int parity = 0;\n        \n        if (m%2==1){\n            int i=m/2;\n            for (int j=0; j<n/2; j++){\n                exchanges += grid[i][j] ^ grid[i][n-j-1];\n                parity += (grid[i][j] && grid[i][n-j-1]);\n            }\n        }\n\n        if (n%2==1){\n            int j=n/2;\n            for (int i=0; i<m/2; i++){\n                exchanges += grid[i][j] ^ grid[m-i-1][j];\n                parity += (grid[i][j] && grid[i][n-j-1]);\n            }\n        }\n\n        if (exchanges == 0){\n            //cout << \"TRIG\\n\";\n            // cout << \"PAR \" << parity << \"\\n\";\n            if (parity%2) changes += 2;\n            return exchanges + changes;\n        } else{\n            return exchanges + changes;\n        }\n    }\n};",
    "submit_ts": "1722697382",
    "subm_id": "1343144544"
}