{
    "username": "friedall",
    "submission": "#include <iostream>\n#include <cstdlib>\n#include <array>\n#define ll long long\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        ll n = points.size(), x, y, z, f = 1e18;\n        vector <array<ll, 2> > U, V;\n        vector <ll> tmp, X;\n        for (int i=0; i<n; ++i) {\n            U.push_back({points[i][1]-points[i][0], i});\n            V.push_back({points[i][0]+points[i][1], i});\n        }\n        sort(U.begin(), U.end());\n        sort(V.begin(), V.end());\n        tmp = {U[0][1], U.back()[1], V[0][1], V.back()[1]};\n        for (int j=0; j<4; ++j) {\n            z = -1;\n            if (tmp[j] == U[0][1]) x = U[1][0];\n            else x = U[0][0];\n            if (tmp[j] == U.back()[1]) y = U[n-2][0];\n            else y = U.back()[0];\n            z = abs(x-y);\n            if (tmp[j] == V[0][1]) x = V[1][0];\n            else x = V[0][0];\n            if (tmp[j] == V.back()[1]) y = V[n-2][0];\n            else y = V.back()[0];\n            z = max(z, abs(x-y));\n            f = min(f, z);\n        }\n        return f;\n    }\n};"
}