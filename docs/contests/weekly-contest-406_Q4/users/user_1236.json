{
    "username": "cczz-6",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n\n        horizontal_pieces, vertical_pieces = 1, 1\n        total_cost = 0\n\n        i, j = 0, 0\n\n        while i < len(horizontalCut) and j < len(verticalCut):\n            if horizontalCut[i] >= verticalCut[j]:\n                total_cost += horizontalCut[i] * vertical_pieces\n                horizontal_pieces += 1\n                i += 1\n            else:\n                total_cost += verticalCut[j] * horizontal_pieces\n                vertical_pieces += 1\n                j += 1\n\n        while i < len(horizontalCut):\n            total_cost += horizontalCut[i] * vertical_pieces\n            i += 1\n\n        while j < len(verticalCut):\n            total_cost += verticalCut[j] * horizontal_pieces\n            j += 1\n\n        return total_cost",
    "submit_ts": "1720925539",
    "subm_id": "546440166"
}