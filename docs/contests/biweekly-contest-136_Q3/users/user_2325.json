{
    "username": "agrawal08",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int result = 0;\n         int b = grid.size(), a = grid[0].size();\n        if (b % 2 == 1 && a % 2 == 1) {\n            if (grid[b / 2][a / 2] == 1) {\n                result += 1;}\n            }\n        vector<int>vec(3, 0);\n        if (b % 2 == 1) {\n            int p = 0, q = a - 1,  r=b/2;\n            while (p < q) {\n                int flip = grid[r][p]+grid[r][q];\n                vec[flip] += 1;\n                p ++;\n                q --;}\n        }\n        if (a % 2 == 1) {\n            int p =0, q =b - 1, s=a/2;\n            while (p<q) {\n                int flip = grid[p][s] + grid[q][s];\n                vec[flip] += 1;\n                p++;\n                q--;}\n            }\n        if (vec[2] % 2 == 1) {\n            if (vec[1] > 0) {\n                result += vec[1];\n            } else {\n                result += 2;\n            }\n        } else {\n            result += vec[1];\n        }\n        for (int i = 0; i <b/2; ++i) {\n            for (int j = 0; j<a/2; ++j) {\n                int p = grid[i][j], q = grid[b - 1 - i][j];\n                int r = grid[i][a - 1 - j], s = grid[b - 1 - i][a - 1 - j], total = p+q+r+s;\n                if (total!= 0 && total!= 4) {\n                    result += min(total, 4 - total);\n                }\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1722700435",
    "subm_id": "1343241787"
}