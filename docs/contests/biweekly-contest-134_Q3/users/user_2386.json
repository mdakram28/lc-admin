{
    "username": "n00bl3t",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int cur = 0, ans = 0, s = 0, n = c.size();\n        cur = (c[0] != c[1] && c[0] != c[n - 1]);\n        if (cur + 2 == k)\n            ans++, cur--;\n\n        for (int i = 1; i < c.size() - 1; i++) {\n            if (c[i] != c[i + 1] && c[i] != c[i - 1])\n                cur++;\n            else cur = 0, s = i;\n            if (cur + 2 == k)\n                ans++, cur--, s++;\n        }\n        // cout << cur << \" \" << ans;\n        if (n - 1 - cur > 1 && c[n - 1] != c[n - 2] && c[n - 1] != c[0]) \n            cur++;\n        else return ans;\n        if (cur + 2 == k)\n            ans++, cur--;\n        // cout << cur << \" \";\n        if (cur > 0 && c[0] != c[1] && c[0] != c[n - 1])\n            cur++;\n        else return ans;\n        // cout << cur << \" \";\n        if (cur + 2 == k)\n            ans++, cur--;\n        int j = 1;\n        // cout << cur << \" \";\n        while (j < cur && c[j + 1] != c[j] && c[j] != c[j - 1]) {\n            cur++;\n            if (cur + 2 == k)\n                ans++, cur--;\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279520",
    "subm_id": "1311754480"
}