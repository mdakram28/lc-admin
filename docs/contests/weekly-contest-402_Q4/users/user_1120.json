{
    "username": "zzjjbb",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def add(x, k):\n            x += 1\n            while x < n:\n                c[x] += k\n                x = x + (x & -x)\n        def getsum(x):\n            x += 1\n            ans = 0\n            while x > 0:\n                ans = ans + c[x]\n                x = x - (x & -x)\n            return ans\n        def ispeak(i):\n            return 0 < i < n-1 and nums[i + 1] < nums[i] > nums[i - 1]\n        n = len(nums)\n        c = [0] * (n + 1)\n        for i in range(1, n - 1):\n            if ispeak(i):\n                add(i, 1)\n        # print(c)\n        \n        ans = []\n        for t, l, r in queries:\n            if t == 1:\n                ans.append(getsum(r - 1) - getsum(l) if r > l else 0)\n            else:\n                op = [ispeak(l + i) for i in range(-1, 2)]\n                nums[l] = r\n                for i, old in zip(range(l - 1, l + 2), op):\n                    if diff := ispeak(i) - old:\n                        add(i, diff)\n                    # print(c)\n        return ans\n                    \n                ",
    "submit_ts": 1718508694.0
}