{
    "username": "bearx666-z",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        x = 1; y = 1\n        horizontalCut.sort(key=lambda x: -x)\n        verticalCut.sort(key=lambda x: -x)\n        ph = 0\n        pv = 0\n        ans = 0\n        while ph < len(horizontalCut) and pv < len(verticalCut):\n            cur_h = horizontalCut[ph] * y\n            cur_v = verticalCut[pv] * x\n            if cur_h + verticalCut[pv] * (x + 1) < cur_v + horizontalCut[ph] * (y + 1):\n\n            # if cur_h > cur_v:\n                ans += cur_h\n                ph += 1\n                x += 1\n            else:\n                ans += cur_v\n                pv += 1\n                y += 1\n        while ph < len(horizontalCut):\n            ans += horizontalCut[ph] * y\n            ph += 1\n            x += 1\n        while pv < len(verticalCut):\n            ans += verticalCut[pv] * x\n            pv += 1\n            y += 1\n        return ans",
    "submit_ts": "1720925619",
    "subm_id": "546440735"
}