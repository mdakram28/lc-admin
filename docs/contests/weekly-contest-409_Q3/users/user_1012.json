{
    "username": "gandip_6355",
    "submission": "class Solution {\npublic:\n    bool isPrime(int n)\n{\n    \n    if (n <= 1)\n        return false;\n\n    \n    for (int i = 2; i <= n / 2; i++)\n        if (n % i == 0)\n            return false;\n\n    return true;\n}\n    int calculateSum(int n)\n{\n    if (n <= 0)\n       return 0;\n \n    int fibo[n+1];\n    fibo[0] = 0, fibo[1] = 1;\n \n    // Initialize result\n    int sum = fibo[0] + fibo[1];\n \n    // Add remaining terms\n    for (int i=2; i<=n; i++)\n    {\n        fibo[i] = fibo[i-1]+fibo[i-2];\n        sum += fibo[i];\n    }\n \n    return sum;\n}\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> dist(n, 0);\n        for (int i = 1; i < n; ++i) {\n            dist[i] = dist[i - 1] + 1;\n        }\n\n        set<int> ans;\n        for (int i = 0; i < n; ++i) {\n            ans.insert(i);\n        }\n\n        vector<int> right;\n\n        for (const auto& i : queries) {\n            int l = i[0];\n            int rightterm = i[1];\n\n            auto lower = ans.lower_bound(l + 1);\n            auto upper = ans.lower_bound(rightterm);\n\n            ans.erase(lower, upper);\n\n            right.push_back(ans.size() - 1);\n        }\n\n        return right;\n    }\n};",
    "submit_ts": "1722743501",
    "subm_id": "1343793328"
}