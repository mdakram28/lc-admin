{
    "username": "dgeyfman",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n=len(nums)\n        if n==1:\n            return abs(target[0]-nums[0])\n        diffn=[0]*n\n        diffn[0]=nums[0]\n        for a in range(1,n):\n            diffn[a]=nums[a]-nums[a-1]\n        difft=[0]*n\n        difft[0]=target[0]\n        for a in range(1,n):\n            difft[a]=target[a]-target[a-1]\n        diff=[diffn[a]-difft[a] for a in range(n)]\n        \n        upidx=0\n        downidx=0\n        ans=0\n        for i in range(n):\n            a=diff[i]\n            ans += abs(a)\n            if a>0:\n                while True:\n                    while downidx<n and diff[downidx]>=0:\n                        downidx += 1\n                    if downidx==n:\n                        break\n                    else:\n                        if (a+diff[downidx])>0:\n                            a += diff[downidx]\n                            diff[downidx]=0\n                        else:\n                            diff[downidx] += a\n                            break\n            elif a<0:\n                while True:\n                    while upidx<n and diff[upidx]<=0:\n                        upidx += 1\n                    if upidx==n:\n                        break\n                    else:\n                        if (a+diff[upidx])<0:\n                            a += diff[upidx]\n                            diff[upidx]=0\n                        else:\n                            diff[upidx] += a\n                            break\n            diff[i]=0\n        return ans",
    "submit_ts": "1721531281",
    "subm_id": "1327956962"
}