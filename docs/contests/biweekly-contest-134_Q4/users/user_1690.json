{
    "username": "ammonio",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long cnt = 0;\n        \n        Map<Long, Long> prev = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> curr = new HashMap<>(); \n\n            if (nums[i] == k) {\n               ++cnt;\n          \n            }\n            curr.put((long) nums[i], 1L);\n\n            for (Map.Entry<Long, Long> entry : prev.entrySet()) {\n                long val = entry.getKey();\n                long freq = entry.getValue();\n                \n                long newAnd = val & nums[i];\n       if (newAnd == k) {\n                    cnt += freq;\n                }\n                curr.put(newAnd, curr.getOrDefault(newAnd, 0L) + freq);\n            }\n            \n            prev = curr;\n        }\n        \n        return cnt;\n    }\n}\n\n",
    "submit_ts": "1720279288",
    "subm_id": "1311745221"
}