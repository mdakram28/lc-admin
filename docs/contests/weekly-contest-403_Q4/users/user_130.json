{
    "username": "07dishwasherbob8",
    "submission": "class Solution {\npublic:\n    \n    int minimumAreaHelper(vector<vector<int>>& grid, int startr, int startc, int endr, int endc) {\n        int lor = endr, hir = startr, loc = endc, hic = startc;\n        for(int r = startr; r <= endr; r++) {\n            for(int c = startc; c <= endc; c++) {\n                if(grid[r][c] == 1) {\n                    lor = min(lor,r);\n                    hir = max(hir,r);\n                    loc = min(loc,c);\n                    hic = max(hic,c);\n                }\n            }\n        }\n        return max(1,(hir-lor+1)*(hic-loc+1));\n    }\n    \n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int R = grid.size();\n        int C = grid[0].size();\n        vector<vector<vector<vector<int>>>> pc(R, vector<vector<vector<int>>>(C, vector<vector<int>>(R, vector<int>(C))));\n        for(int startr = 0; startr < R; startr++) {\n            for(int startc = 0; startc < C; startc++) {\n                for(int endr = startr; endr < R; endr++) {\n                    for(int endc = startc; endc < C; endc++) {\n                        pc[startr][startc][endr][endc] = minimumAreaHelper(grid,startr,startc,endr,endc);\n                    }\n                }\n            }\n        }\n        \n        vector<vector<vector<int>>> dp(4,vector<vector<int>>(R,vector<int>(C,1e9)));\n        \n        for(int i = 0; i < 3; i++) {\n            for(int endr = 0; endr < R; endr++) {\n                for(int endc = 0; endc < C; endc++) {\n                    for(int startr = 0; startr <= endr; startr++) {\n                        for(int startc = 0; startc <= endc; startc++) {\n                            if(startc == 0) {\n                                int prev = startr == 0 ? 0 : dp[i][startr-1][endc];\n                                dp[i+1][endr][endc] = min(dp[i+1][endr][endc], prev + pc[startr][0][endr][endc]);\n                            } else if(i > 0 && startr != 0) {\n                                //mistake == gg\n                                dp[i+1][endr][endc] = min(dp[i+1][endr][endc], pc[startr][startc][endr][endc] + pc[startr][0][endr][startc-1] + dp[i-1][startr-1][endc]);\n                                dp[i+1][endr][endc] = min(dp[i+1][endr][endc], pc[startr][startc][endr][endc] + pc[0][startc][startr-1][endc] + dp[i-1][endr][startc-1]);     \n                            }\n                        }\n                    }\n                    for(int startc = 0; startc <= endc; startc++) {\n                        int prev = startc == 0 ? 0 : dp[i][endr][startc-1];\n                        dp[i+1][endr][endc] = min(dp[i+1][endr][endc], prev + pc[0][startc][endr][endc]);\n                    }\n                }\n            }\n        }\n        return dp[3][R-1][C-1];\n    }\n};",
    "submit_ts": 1719112522.0
}