{
    "username": "iib2022028",
    "submission": "\n\n\n\nclass Solution {\n    static const int MOD = 1e9 + 7;\n    static const int MAX_INV = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> rm(n + 1, -1);\n\n        for (auto& req : requirements) {\n            int endIdx = req[0] + 1;\n            int invCount = req[1];\n            rm[endIdx] = invCount;\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        for (int l = 1; l <= n; l++) {\n            for (int i = 0; i <= MAX_INV; i++) {\n                dp[l][i] = 0;\n                for (int j = 0; j < l; j++) {\n                    int pi = i - j;\n                    if (pi >= 0) {\n                        dp[l][i] = (dp[l][i] + dp[l - 1][pi]) % MOD;\n                    }\n                }\n            }\n\n            if (rm[l] != -1) {\n                int ti = rm[l];\n                for (int i = 0; i <= MAX_INV; i++) {\n                    if (i != ti) {\n                        dp[l][i] = 0;\n                    }\n                }\n            }\n        }\n\n        long long res = 0;\n        for (int i = 0; i <= MAX_INV; i++) {\n            res = (res + dp[n][i]) % MOD;\n        }\n\n        return static_cast<int>(res);\n    }\n};\n\n",
    "submit_ts": 1719071165.0
}