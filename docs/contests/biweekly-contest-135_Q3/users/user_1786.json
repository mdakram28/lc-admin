{
    "username": "ppramod02",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {  // nums[i] <= k\n        int n = nums.size();\n        int res = n / 2;\n        unordered_map<int, int> diff;\n        vector<pair<int, int>> cnt;\n        for(int i = 0; 2 * i < n; i++) {\n            diff[abs(nums[i] - nums[n - i - 1])]++;\n        }\n\n        for(auto i : diff) {\n            cnt.push_back({ i.second, i.first });\n        }\n        sort(cnt.rbegin(), cnt.rend());\n        \n        for(auto i : cnt) {\n            int d = i.second;\n            int freq = i.first;\n            int curr = 0;\n            // if freq is pairs with diff d -> the mini value for curr,\n            // in this case would be (n / 2 - d) / 2;\n\n            if(res <= (n / 2) - freq) continue;\n            for(int j = 0; 2 * j < n; j++) {\n                if(abs(nums[j] - nums[n - j - 1]) == d) continue;\n\n                // modify elements\n                int maxi = max(nums[j], nums[n - j - 1]);\n                int mini = min(nums[j], nums[n - j - 1]);\n                if(k - mini >= d || maxi >= d) curr++;\n                else curr += 2; \n\n                if(curr >= res) break;\n            }\n            if(res == 0) return 0;\n            res = min(res, curr);\n        }\n\n        // maximum value of res is n / 2\n        // maximum value of X is k\n\n        // maximum distinct diff is n / 2\n        // O(n / 2 * n / 2)\n\n        return res;\n    }\n};",
    "submit_ts": "1721489225",
    "subm_id": "1327446844"
}