{
    "username": "lddlinan",
    "submission": "class Solution(object):\n    def minimumDistance(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n        n = len(points)\n        vs1 = [(points[i][0]+points[i][1], i) for i in range(n) ]\n        vs1.sort()\n        vs2 = [(points[i][0]-points[i][1], i) for i in range(n) ]\n        vs2.sort()\n        r = 0x7fffffffff\n        for i in range(n):\n            if i==vs1[0][1]:\n                v1 = vs1[n-1][0]-vs1[1][0]\n            elif i==vs1[n-1][1]:\n                v1 = vs1[n-2][0]-vs1[0][0]\n            else:\n                v1 = vs1[n-1][0]-vs1[0][0]\n                \n            if i==vs2[0][1]:\n                v2 = vs2[n-1][0]-vs2[1][0]\n            elif i==vs2[n-1][1]:\n                v2 = vs2[n-2][0]-vs2[0][0]\n            else:\n                v2 = vs2[n-1][0]-vs2[0][0]\n            r= min(r, max(v1, v2))\n        return r\n                "
}