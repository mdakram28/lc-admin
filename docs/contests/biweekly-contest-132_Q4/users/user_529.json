{
    "username": "rishabh_v12",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        int dp[n + 1][k + 1];\n        memset(dp, 0, sizeof(dp));\n        vector<vector<pair<int,int>>> yoyo(k + 1, vector<pair<int,int>> (2, {0, 0}));\n        map<pair<int, int>, int> maxi;\n        \n        for(int p = 0; p < n; p++) {\n            for(int q = k; q > -1; q--) {\n                int same = 0, diff = 0;\n                dp[p][q] = 1;\n                \n                if(maxi.find(make_pair(nums[p], q)) != maxi.end())\n                    same = 1 + maxi[{nums[p], q}];\n                if(q > 0) {\n                    if(nums[p] != yoyo[q][0].second)\n                        diff = max(diff, 1 + yoyo[q - 1][0].first);\n                    else\n                        diff = max(diff, 1 + yoyo[q - 1][1].first);\n                }\n                \n                dp[p][q] = max({same, diff, dp[p][q]});\n                \n                if(dp[p][q] > yoyo[q][0].first) {\n                    if(nums[p] != yoyo[q][0].second)\n                        yoyo[q][1] = yoyo[q][0];\n                    \n                    yoyo[q][0] = {dp[p][q], nums[p]};\n                }\n                else if(dp[p][q] > yoyo[q][1].first) {\n                    if(nums[p] != yoyo[q][0].second)\n                        yoyo[q][1] = {dp[p][q], nums[p]};\n                }\n                \n                maxi[{nums[p], q}] = max(maxi[{nums[p], q}], dp[p][q]);\n            }    \n            \n            \n            // cout << \"after -> \" << p << '\\n';\n            // for(int i = 0; i < k + 1; i++)\n            //     cout << \"{ \" << yoyo[i][0].first << \" , \" << yoyo[i][0].second << \" } { \" << yoyo[i][1].first << \" , \" << yoyo[i][1].second << '\\n'; \n        }\n        \n        int ans = 0;\n        for(int i = 0; i < n + 1; i++)\n            ans = max(ans, dp[i][k]);\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717861968.0
}