{
    "username": "shankarlalb",
    "submission": "\nclass Solution {\npublic:\n    class mxSegTree{\n        private:\n            vector<int>tree;\n            int n;\n        public:\n            mxSegTree(int n){\n                this->n = n;\n                tree.resize(4*n,0);\n            }\n            void update(int id,int l,int r,int pos,int val){\n                if(l==r){\n                    tree[id] = val;\n                    return;\n                }\n                int mid = (l+r)/2;\n                if(pos<=mid){\n                    update(2*id,l,mid,pos,val);\n                }else{\n                    update(2*id+1,mid+1,r,pos,val);\n                }\n                tree[id] = max(tree[2*id],tree[2*id+1]);\n            }\n            int query(int id,int l,int r,int ql,int qr){\n                if(ql>r || qr<l)return 0;\n                if(ql<=l && qr>=r)return tree[id];\n                int mid = (l+r)/2;\n                return max(query(2*id,l,mid,ql,qr),query(2*id+1,mid+1,r,ql,qr));\n            }\n            void update(int pos,int val){\n                update(1,0,n-1,pos,val);\n            }\n            int queryInclusive_0_index(int l,int r){\n                return query(1,0,n-1,l,r);\n            }\n    };\n    \n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        set<int>st(nums.begin(),nums.end());\n        vector<int>vec(st.size());\n        map<int,int>ind;\n        int i = 0;\n        for(auto s:st){\n            ind[s] = i++;\n        }\n        int nn = st.size();\n        vector<mxSegTree>seg(k+1,mxSegTree(nn));\n        for(int i = 0;i<n;i++){\n            for(int kk = 0;kk<=k;kk++){\n                int val = seg[kk].queryInclusive_0_index(ind[nums[i]],ind[nums[i]]);\n                int fin = val+1;\n                if(kk>0){\n                    val = seg[kk-1].queryInclusive_0_index(ind[nums[i]],ind[nums[i]]);\n                    seg[kk-1].update(ind[nums[i]],0);\n                    int mx = seg[kk-1].queryInclusive_0_index(0,nn-1);\n                    fin = max(fin,mx+1);\n                    seg[kk-1].update(ind[nums[i]],val);\n                }\n                seg[kk].update(ind[nums[i]],fin);\n            }\n        }\n        int ans = 0;\n        for(auto it : st){\n            ans = max(ans,seg[k].queryInclusive_0_index(ind[it],ind[it]));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717860446.0
}