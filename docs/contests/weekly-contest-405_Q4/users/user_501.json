{
    "username": "zeningc",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Trie root = new Trie();\n        for (int j = 0; j < words.length; j++)   {\n            int cost = costs[j];\n            String word = words[j];\n            Trie node = root;\n            for (int i = word.length() - 1; i >= 0; i--)    {\n                char c = word.charAt(i);\n                if (node.children[c - 'a'] == null)\n                    node.children[c - 'a'] = new Trie();\n                node = node.children[c - 'a'];\n            }\n            node.exist = true;\n            node.cost = Math.min(node.cost, cost);\n        }\n        long[] dp = new long[target.length()];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        for (int i = 0; i < target.length(); i++)    {\n            long cur = Integer.MAX_VALUE;\n            Trie node = root;\n            int cnt = 0;\n            for (int j = i; j >= 0; j--)    {\n                cnt++;\n                char c = target.charAt(j);\n                if (node.children[c - 'a'] == null)\n                    break;\n                node = node.children[c - 'a'];\n                if (node.exist) {\n                    cur = Math.min(cur, node.cost + (i - cnt >= 0 ? dp[i - cnt] : 0));\n                }\n            }\n            dp[i] = cur;\n        }\n        \n        return dp[target.length() - 1] >= Integer.MAX_VALUE ? -1 : (int)dp[target.length() - 1];\n    }\n    \n    \n}\n\nclass Trie  {\n    Trie[] children;\n    boolean exist;\n    int cost;\n    \n    public Trie()   {\n        children = new Trie[26];\n        exist = false;\n        cost = Integer.MAX_VALUE;\n    }\n}",
    "submit_ts": "1720322293",
    "subm_id": "1312345977"
}