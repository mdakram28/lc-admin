{
    "username": "toaruke-xue-nochao-you-yuan-su",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        if (grid.size() == 1 && grid[0].size() == 1) {\n            return grid[0][0] == 1;\n        }\n\n        if (grid.size() == 1) {\n            int g1 = 0, g2 = 0, gc = 0;\n            int m = grid[0].size(), mhalf = m / 2;\n            for (int i = 0; i < mhalf; ++i) {\n                int ss = grid[0][i] + grid[0][m - 1 - i];\n                if (ss == 1) {\n                    g1++;\n                } else if (ss == 2) {\n                    g2++;\n                }\n            }\n            if (m % 2) {\n                if (grid[0][mhalf]) {\n                    gc++;\n                }\n            }\n            int s = 2 * (g1 + g2);\n            int ans = 0;\n            if (s % 4 == 0) {\n                ans = g1;\n            } else {\n                if (g1) {\n                    ans = g1;\n                } else {\n                    ans = 2;\n                }\n            }\n            if(gc){\n                ++ans;\n            }\n            return ans;\n        }\n        if (grid[0].size() == 1) {\n            int g1 = 0, g2 = 0, gc = 0;\n            int m = grid.size(), mhalf = m / 2;\n            for (int i = 0; i < mhalf; ++i) {\n                int ss = grid[i][0] + grid[m-1-i][0];\n                if (ss == 1) {\n                    g1++;\n                } else if (ss == 2) {\n                    g2++;\n                }\n            }\n            if (m % 2) {\n                if (grid[mhalf][0]) {\n                    gc++;\n                }\n            }\n            int s = 2 * (g1 + g2);\n            int ans = 0;\n            if (s % 4 == 0) {\n                ans = g1;\n            } else {\n                if (g1) {\n                    ans = g1;\n                } else {\n                    ans = 2;\n                }\n            }\n            if(gc){\n                ++ans;\n            }\n            return ans;\n        }\n\n        int n = grid.size(), m = grid[0].size();\n        int s = 0;\n        int ans = 0;\n        int nhalf = n / 2, mhalf = m / 2;\n        int f1 = 0, f2 = 0, f3 = 0;\n        for (int i = 0; i < nhalf; ++i) {\n            for (int j = 0; j < mhalf; ++j) {\n                int ss = grid[i][j] + grid[n - 1 - i][m - 1 - j] +\n                         grid[i][m - 1 - j] + grid[n - 1 - i][j];\n                switch (ss) {\n                case 1:\n                    f1++;\n                    break;\n                case 3:\n                    f3++;\n                    break;\n                case 2:\n                    f2++;\n                    break;\n                }\n            }\n        }\n\n        int g1 = 0, g2 = 0, g3 = 0, g0 = 0;\n        if (n % 2 == 0 && m % 2 == 0) {\n\n        } else if (n % 2 == 0 && m % 2 == 1) {\n            int j = mhalf;\n            for (int i = 0; i < nhalf; ++i) {\n                int ss = grid[i][j] + grid[n - 1 - i][j];\n                switch (ss) {\n                case 1:\n                    g1++;\n                    break;\n                case 2:\n                    g2++;\n                    break;\n                }\n            }\n        } else if (n % 2 == 1 && m % 2 == 0) {\n            int i = nhalf;\n            for (int j = 0; j < mhalf; ++j) {\n                int ss = grid[i][j] + grid[i][m - 1 - j];\n                switch (ss) {\n                case 1:\n                    g1++;\n                    break;\n                case 2:\n                    g2++;\n                    break;\n                }\n            }\n        } else {\n            int i = nhalf;\n            for (int j = 0; j < mhalf; ++j) {\n                int ss = grid[i][j] + grid[i][m - 1 - j];\n                switch (ss) {\n                case 1:\n                    g1++;\n                    break;\n                case 2:\n                    g2++;\n                    break;\n                }\n            }\n            int j = mhalf;\n            for (i = 0; i < nhalf; ++i) {\n                int ss = grid[i][j] + grid[n - 1 - i][j];\n                switch (ss) {\n                case 1:\n                    g1++;\n                    break;\n                case 2:\n                    g2++;\n                    break;\n                }\n            }\n            if (grid[nhalf][mhalf] == 1) {\n                g0++;\n            }\n        }\n        s = 4 * (f2 + f3) + 2 * (g1 + g2);\n        if (s % 4 == 0) {\n            ans = f1 + 2 * f2 + f3 + g1;\n        } else {\n            if (g1) {\n                ans = f1 + 2 * f2 + f3 + g1;\n            } else {\n                ans = f1 + 2 * f2 + f3 + 2;\n            }\n        }\n        if (g0)\n            ans++;\n        return ans;\n    }\n};",
    "submit_ts": "1722698980",
    "subm_id": "552273476"
}