{
    "username": "harshit135",
    "submission": "class Solution {\npublic:\n    #define ll long long int \n    \n    ll getSum(ll n)\n    {\n        if(n == -1) return 0;\n        ll sum = 0;\n        for(ll i=0; i<=n; i++) {\n            sum += (1LL << i);\n        }\n        return sum;\n    }\n    \n    ll ncr(ll n, ll r)\n    {\n        if(r > n) return 0;\n        ll sum = 1;\n        r = min(r , n-r);\n        \n        for(int i = 1; i <= r; i++){\n            sum = sum * (n - r + i) / i;\n        }\n        return sum;\n    }\n    \n    int waysToReachStair(int k) {\n        ll ans = 0;\n        \n        for(ll i=-1; i<=35; i++)\n        {\n            ll d = 1 + getSum(i);\n            ll diff = d - k;\n            \n            if(d < k) {\n                // cout<<\"0\"<<\" \";\n                continue;\n            }\n            else if(d == k) {\n                // cout<<\"1\"<<\" \";\n                ans++;\n            }\n            else {\n                // cout<<\"1\"<<\" \";\n                ans += ncr(i+2 , diff);\n            }\n            // cout<<ans<<\" \";\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716088780.0
}