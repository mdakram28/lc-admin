{
    "username": "jakonen",
    "submission": "class Solution {\npublic:\n    //vector<vector<int>> rowIndices;\n    //vector<vector<int>> colIndices;\n    \n    vector<vector<int>> grid;\n    \n    int minimumSum(vector<vector<int>>& _grid) {\n        grid = std::move(_grid);\n        int m = grid.size();\n        int n = grid[0].size();\n        /*\n        rowIndices.resize(m);\n        colIndices.resize(n);\n        \n        int minRow = INT_MAX, minCol = INT_MAX, maxRow = -1, maxCol = -1;\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (grid[i][j]) {\n                    rowIndices[i].push_back(j);\n                    colIncides[j].push_back(i);\n                    \n                    minRow = min(minRow, i);\n                    maxRow = max(maxRow, i);\n                    minCol = min(minCol, j);\n                    maxCol = max(maxCol, j);\n                }\n            }\n        }\n        */\n        return minSum3(0, m-1, 0, n-1);\n    }\n    \n    void minimize(int& i1, int& i2, int& j1, int& j2) {\n        int minRow = INT_MAX, minCol = INT_MAX, maxRow = -1, maxCol = -1;\n        \n        for (int i = i1; i <= i2; ++i) {\n            for (int j = j1; j <= j2; ++j) {\n                if (grid[i][j] == 1) {\n                    minRow = min(minRow, i);\n                    maxRow = max(maxRow, i);\n                    minCol = min(minCol, j);\n                    maxCol = max(maxCol, j);\n                }\n            }\n        }\n        i1 = minRow;\n        i2 = maxRow;\n        j1 = minCol;\n        j2 = maxCol;\n    }\n    \n    int minSum3(int i1, int i2, int j1, int j2) {\n        minimize(i1, i2, j1, j2);\n        int best = (i2-i1+1)*(j2-j1+1);\n        \n        for (int i = i1; i < i2; ++i) {\n            best = min(best, minSum1(i1, i, j1, j2) + minSum2(i+1, i2, j1, j2));\n            best = min(best, minSum2(i1, i, j1, j2) + minSum1(i+1, i2, j1, j2));\n        }\n        \n        for (int j = j1; j < j2; ++j) {\n            best = min(best, minSum1(i1, i2, j1, j) + minSum2(i1, i2, j+1, j2));\n            best = min(best, minSum2(i1, i2, j1, j) + minSum1(i1, i2, j+1, j2));\n        }\n        \n        return best;\n    }\n    \n    int minSum2(int i1, int i2, int j1, int j2) {\n        minimize(i1, i2, j1, j2);\n        int best = (i2-i1+1)*(j2-j1+1);\n        \n        for (int i = i1; i < i2; ++i) {\n            best = min(best, minSum1(i1, i, j1, j2) + minSum1(i+1, i2, j1, j2));\n        }\n        \n        for (int j = j1; j < j2; ++j) {\n            best = min(best, minSum1(i1, i2, j1, j) + minSum1(i1, i2, j+1, j2));\n        }\n        \n        return best;\n    }\n    \n    int minSum1(int i1, int i2, int j1, int j2) {\n        minimize(i1, i2, j1, j2);\n        return (i2-i1+1)*(j2-j1+1);\n    }\n};",
    "submit_ts": "1719115093",
    "subm_id": "1297360237"
}