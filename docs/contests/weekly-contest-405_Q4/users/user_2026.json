{
    "username": "Manu-Bharadwaj-BN",
    "submission": "class TrieNode {\n    constructor() {\n        this.children = new Map();\n        this.wordEnds = [];\n    }\n}\n\nclass Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n\n    insert(word, index, cost) {\n        let node = this.root;\n        for (let c of word) {\n            if (!node.children.has(c)) {\n                node.children.set(c, new TrieNode());\n            }\n            node = node.children.get(c);\n        }\n        node.wordEnds.push([index, cost]);\n    }\n}\n\n/**\n * @param {string} target\n * @param {string[]} words\n * @param {number[]} costs\n * @return {number}\n */\nvar minimumCost = function(target, words, costs) {\n    let n = target.length;\n    let dp = new Array(n + 1).fill(Number.MAX_SAFE_INTEGER);\n    dp[0] = 0;\n\n    let trie = new Trie();\n    for (let i = 0; i < words.length; ++i) {\n        trie.insert(words[i], i, costs[i]);\n    }\n\n    for (let i = 0; i < n; ++i) {\n        if (dp[i] === Number.MAX_SAFE_INTEGER) {\n            continue;\n        }\n\n        let node = trie.root;\n        for (let j = i; j < n; ++j) {\n            let c = target[j];\n            if (!node.children.has(c)) {\n                break;\n            }\n            node = node.children.get(c);\n            for (let [index, cost] of node.wordEnds) {\n                let wordLen = words[index].length;\n                if (i + wordLen <= n) {\n                    dp[i + wordLen] = Math.min(dp[i + wordLen], dp[i] + cost);\n                }\n            }\n        }\n    }\n\n    return dp[n] === Number.MAX_SAFE_INTEGER ? -1 : dp[n];\n};\n\n// Example usage:\nlet target = \"abcdef\";\nlet words = [\"abdef\", \"abc\", \"d\", \"def\", \"ef\"];\nlet costs = [100, 1, 1, 10, 5];\nconsole.log(minimumCost(target, words, costs)); // Output: 2\n",
    "submit_ts": "1720324702",
    "subm_id": "1312405907"
}