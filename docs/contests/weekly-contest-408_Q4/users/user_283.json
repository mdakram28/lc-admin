{
    "username": "gadhiyaronak09",
    "submission": "class UnionFind {\npublic:\n    UnionFind(int n) : parent(n), rank(n, 0) {\n        for (int i = 0; i < n; ++i) {\n            parent[i] = i;\n        }\n    }\n\n    int find(int x) {\n        if (x != parent[x]) {\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n\n    void unite(int x, int y) {\n        int rootX = find(x);\n        int rootY = find(y);\n\n        if (rootX != rootY) {\n            if (rank[rootX] > rank[rootY]) {\n                parent[rootY] = rootX;\n            } else if (rank[rootX] < rank[rootY]) {\n                parent[rootX] = rootY;\n            } else {\n                parent[rootY] = rootX;\n                ++rank[rootX];\n            }\n        }\n    }\n\nprivate:\n    vector<int> parent;\n    vector<int> rank;\n};\n\nbool circlesIntersect(int x1, int y1, int r1, int x2, int y2, int r2) {\n    long long dx = x2 - x1;\n    long long dy = y2 - y1;\n    long long distanceSquared = dx * dx + dy * dy;\n    long long radiusSum = r1 + r2;\n    return distanceSquared <= radiusSum * radiusSum;\n}\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        UnionFind uf(n + 4);  // Extra 4 for the boundaries\n\n        for (int i = 0; i < n; ++i) {\n            int x1 = circles[i][0], y1 = circles[i][1], r1 = circles[i][2];\n\n            // Connect circles if they intersect\n            for (int j = i + 1; j < n; ++j) {\n                int x2 = circles[j][0], y2 = circles[j][1], r2 = circles[j][2];\n                if (circlesIntersect(x1, y1, r1, x2, y2, r2)) {\n                    uf.unite(i, j);\n                }\n            }\n\n            // Connect circles to the boundaries\n            if (y1 - r1 <= 0) { // Bottom\n                uf.unite(i, n);\n            }\n            if (y1 + r1 >= Y) { // Top\n                uf.unite(i, n + 1);\n            }\n            if (x1 - r1 <= 0) { // Left\n                uf.unite(i, n + 2);\n            }\n            if (x1 + r1 >= X) { // Right\n                uf.unite(i, n + 3);\n            }\n        }\n\n       if((uf.find(n) == uf.find(n + 1)) || \n               (uf.find(n + 2) == uf.find(n + 3)) || \n               (uf.find(n + 1) == uf.find(n + 3)) || \n               (uf.find(n) == uf.find(n + 2))){\n           return false;\n       }\n        \n        return true;\n    }\n};\n",
    "submit_ts": "1722136760",
    "subm_id": "1335744160"
}