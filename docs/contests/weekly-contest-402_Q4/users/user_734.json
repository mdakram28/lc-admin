{
    "username": "gatton",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        List<Integer> res = new ArrayList<>();\n        boolean[] isPeak = new boolean[n];\n        TreeArr ta = new TreeArr(n);\n        for(int i = 1; i < n - 1; i++) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                ta.add(i, 1);\n                isPeak[i] = true;\n            }\n        }\n        for(int[] query : queries) {\n            if(query[0] == 1) {\n                res.add(ta.sum(query[1] + 1, query[2] - 1));\n            } else {\n                int i = query[1];\n                int v = query[2];\n                if(i > 0 && i < n - 1) {\n                    if(isPeak[i] && (v <= nums[i - 1] || v <= nums[i + 1])) {\n                        ta.add(i, -1);\n                        isPeak[i] = false;\n                    } else if(!isPeak[i] && v > nums[i - 1] && v > nums[i + 1]) {\n                        ta.add(i, 1);\n                        isPeak[i] = true;\n                    }\n                }\n                if(i > 1) {\n                    if(isPeak[i - 1] && v >= nums[i - 1]) {\n                        ta.add(i - 1, -1);\n                        isPeak[i - 1] = false;\n                    } else if(!isPeak[i - 1] && v < nums[i - 1] && nums[i - 1] > nums[i - 2]) {\n                        ta.add(i - 1, 1);\n                        isPeak[i - 1] = true;\n                    }\n                }\n                if(i < n - 2) {\n                    if(isPeak[i + 1] && v >= nums[i + 1]) {\n                        ta.add(i + 1, -1);\n                        isPeak[i + 1] = false;\n                    } else if(!isPeak[i + 1] && v < nums[i + 1] && nums[i + 1] > nums[i + 2]) {\n                        ta.add(i + 1, 1);\n                        isPeak[i + 1] = true;\n                    }\n                }\n                nums[i] = v;\n\n            }\n        }\n        return res;\n    }\n\n    class TreeArr {\n        int size;\n        int[] tree;\n        TreeArr(int n) {\n            this.size = n + 1;\n            this.tree = new int[this.size];\n        }\n        public void add(int idx, int val) {\n            idx++;\n            while(idx < size) {\n                tree[idx] += val;\n                idx += lowbit(idx);\n            }\n        }\n        public int sum(int left, int right) {\n            if(left > right) {\n                return 0;\n            }\n            return sum(right + 1) - sum(left);\n        }\n        public int sum(int idx) {\n            int sum = 0;\n            while(idx > 0) {\n                sum += tree[idx];\n                idx -= lowbit(idx);\n            }\n            return sum;\n        }\n        private int lowbit(int x) {\n            return x & -x;\n        }\n    }\n}",
    "submit_ts": "1718508343",
    "subm_id": "539786791"
}