{
    "username": "shreyas_2505",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n        int n = grid.size();\n        int m = grid[0].size();\n\n        int zero = 0;\n        int mid = 0;\n        int one = 0;\n\n        vector<vector<int> > vis( n, vector<int>( m, 0));\n\n        int ans = 0;\n        int cnt = 0;\n\n        for(int i = 0; i< n; i++)\n        {\n            for(int j = 0; j< m; j++)\n            {\n                if( vis[i][j] == 0)\n                {\n                    int rd = min( i, n - 1 - i);\n                    int cd = min ( j,  m - 1 - j);\n\n                    int r1 = i;\n                    int c1 = j;\n                    vis[r1][c1] = 1;\n                    // cout<<r1<<\" \"<<c1<<\"--\";\n\n                    int r2 = i;\n                    int c2 = m - 1 - cd;\n                    vis[r2][c2] = 1;\n                    // cout<<r2<<\" \"<<c2<<\"--\";\n\n                    int r3 = n - 1 - rd;\n                    int c3 = j;\n                    vis[r3][c3] = 1;\n                    // cout<<r3<<\" \"<<c3<<\"--\";\n\n                    int r4 = n - 1 - rd;\n                    int c4 = m - 1 - cd;\n                    vis[r4][c4] = 1;\n                    // cout<<r4<<\" \"<<c4<<\"\\n\";\n\n                    map<pair<int,int> , int> mp;\n                    mp[{r1, c1}]++;\n                    mp[{r2, c2}]++;\n                    mp[{r3, c3}]++;\n                    mp[{r4, c4}]++;\n\n                    if( mp.size() == 1)\n                    {\n                       if( grid[r1][c1] == 1)\n                       {\n                        ans++;\n                       }\n                    }\n\n                    else if( mp.size() == 4)\n                    {\n                        int sum = grid[r1][c1] + grid[r2][c2] + grid[r3][c3] + grid[r4][c4];\n\n                        ans += min( sum, 4 -sum);\n                    }\n\n                    else if( mp.size() == 2)\n                    {\n                       cnt++;\n\n                       if( r1 != r2 || c1 != c2)\n                       {\n                          int sum = grid[r1][c1] + grid[r2][c2];\n                          if( sum == 0)\n                          {\n                            zero++;\n                          }\n\n                          else if( sum == 1)\n                          {\n                            mid++;\n                          }\n\n                          else if( sum == 2)\n                          {\n                            one++;\n                          }\n                          continue;\n                       }\n\n                       else if( r1 != r3 || c1 != c3 )\n                       {\n                        int sum = grid[r1][c1] + grid[r3][c3];\n                          if( sum == 0)\n                          {\n                            zero++;\n                          }\n\n                          else if( sum == 1)\n                          {\n                            mid++;\n                          }\n\n                          else if( sum == 2)\n                          {\n                            one++;\n                          }\n                          continue;\n                       }\n\n                       \n\n                    }\n\n\n\n                }\n            }\n        }\n        cout<<zero<<\" \"<<mid<<\" \"<<one<<\"\\n\";\n        if( mid > 0)\n        {\n            ans += mid;\n        }\n\n        else if( mid == 0 && one % 2 == 1)\n        {\n            ans += 2;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699286",
    "subm_id": "1343207078"
}