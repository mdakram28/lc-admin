{
    "username": "knotri",
    "submission": "function minFlips(grid: number[][]): number {\n    console.log('___')\n    const H = grid.length;\n    const W = grid[0].length\n    \n    \n    let doubleMirror = 0;\n    for(let r = 0; r < Math.floor(H / 2); r++) {\n        for(let c = 0; c < Math.floor(W / 2); c++) {\n            let count = [0, 0]\n            count[grid[r][c]]++\n            count[grid[H - 1 - r][c]]++\n            count[grid[r][W - 1 - c]]++\n            count[grid[H - 1 - r][W - 1 - c]]++\n            \n            doubleMirror += Math.min(...count)\n            \n            // console.log({r, c, count})\n            \n            // if (grid[r][c] !== grid[H - 1 - r][c]) result2++\n        }\n    }\n    \n    let center = 0;\n    if ((H % 2 === 1) && (W % 2 === 1)) {\n        center += grid[Math.floor(H / 2)][Math.floor(W / 2)]\n    }\n    \n    let singleMirror = 0;\n    let ones = 0\n    if (W % 2 === 1) {\n        for(let r = 0; r < Math.floor(H / 2); r++) {\n            ones += grid[r][Math.floor(W / 2)] + grid[H - 1 - r][Math.floor(W / 2)]\n            if (grid[r][Math.floor(W / 2)] !== grid[H - 1 - r][Math.floor(W / 2)]) singleMirror++\n        }\n    }\n    if (H % 2 === 1) {\n        for(let c = 0; c < Math.floor(W / 2); c++) {\n            ones += grid[Math.floor(H / 2)][c] + grid[Math.floor(H / 2)][W - 1 - c]\n            if (grid[Math.floor(H / 2)][c] !== grid[Math.floor(H / 2)][W - 1 - c]) singleMirror++\n        }\n    }\n    // for(let i = 0; i < 15; i++) {\n    //     console.log({i, res: Math.min(i % 4, 4 - (i % 4))})\n    // }\n    const onesDisbalance = Math.min(ones % 4, 4 - (ones % 4))\n    const disbalanceFixMoves = Math.max(0, onesDisbalance - singleMirror)\n    \n    // console.log({doubleMirror, center, singleMirror, ones, onesDisbalance, disbalanceFixMoves})\n    return doubleMirror + center + singleMirror + disbalanceFixMoves\n};",
    "submit_ts": "1722698188",
    "subm_id": "1343172598"
}