{
    "username": "less2016",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        var p = new int[n];\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) p[i] = 1;\n        }\n        var tree = new FenwickTree(p);\n        Consumer<Integer> consumer = i -> {\n            if (i <= 0 || i >= n - 1) return;\n            int v = (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) ? 1 : 0;\n            tree.add(i + 1, v - p[i]);\n            p[i] = v;\n        };\n        var ans = new ArrayList<Integer>();\n        for (var q : queries) {\n            if (q[0] == 1) {\n                int l = q[1] + 1, r = q[2] + 1;\n                int v = 0;\n                if (l + 1 <= r - 1) v = tree.sum(l + 1, r - 1);\n                ans.add(v);\n            } else {\n                int i = q[1], v = q[2];\n                nums[i] = v;\n                consumer.accept(i - 1);\n                consumer.accept(i);\n                consumer.accept(i + 1);\n            }\n        }\n        return ans;\n    }\n    \n    public class FenwickTree {\n    private final int n;\n    private final int[] T;\n\n    public FenwickTree(int capacity) {\n        n = capacity;\n        T = new int[n + 1];\n    }\n\n    public FenwickTree(int[] a) {\n        this(a.length);\n        for (int i = 1; i <= n; i++) {\n            T[i] += a[i - 1];\n            int h = h(i);\n            if (h <= n) T[h] += T[i];\n        }\n    }\n\n    public int sum(int r) {\n        int sum = 0;\n        for (int i = r; i > 0; i = g(i)) sum += T[i];\n        return sum;\n    }\n\n    public int sum(int l, int r) {\n        return sum(r) - sum(l - 1);\n    }\n\n    public void add(int r, int v) {\n        for (int i = r; i <= n; i = h(i)) T[i] += v;\n    }\n\n    private int g(int i) {\n        return i - lowbit(i);\n    }\n\n    private int h(int i) {\n        return i + lowbit(i);\n    }\n\n    private int lowbit(int x) {\n        return x & -x;\n    }\n}\n}",
    "submit_ts": "1718508535",
    "subm_id": "539787886"
}