{
    "username": "kamalAhmad235964",
    "submission": "\nclass Solution {\npublic:\n    std::vector<int> shortestDistanceAfterQueries(int n, const std::vector<std::vector<int>>& queries) {\n        vector<int> distances(n, 0);\n        for (int i = 1; i < n; ++i) {\n            distances[i] = distances[i - 1] + 1;\n        }\n\n        set<int> points;\n        for (int i = 0; i < n; ++i) {\n            points.insert(i);\n        }\n\n        vector<int> results;\n\n        for (const auto& query : queries) {\n            int left = query[0];\n            int right = query[1];\n\n            auto lower_bound = points.lower_bound(left + 1);\n            auto upper_bound = points.lower_bound(right);\n\n            points.erase(lower_bound, upper_bound);\n\n            results.push_back(points.size() - 1);\n        }\n\n        return results;\n    }\n};\n\n",
    "submit_ts": "1722743897",
    "subm_id": "1343802161"
}