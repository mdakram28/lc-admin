{
    "username": "bnlvv",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        vals = []\n        for xi, yi, ri in circles: \n            if xi**2 + yi**2 <= ri**2: return False \n            if (X-xi)**2 + (Y-yi)**2 <= ri**2: return False \n            if xi >= X+ri or yi > Y+ri: continue \n            vals.append([xi, yi, ri])\n        circles = vals\n        \n        n = len(circles)\n        parent = list(range(n))\n        \n        def find(p): \n            if p != parent[p]:\n                parent[p] = find(parent[p])\n            return parent[p]\n        \n        for i in range(n): \n            xi, yi, ri = circles[i]\n            for j in range(i+1, n): \n                xj, yj, rj = circles[j]\n                if (xi-xj)**2 + (yi-yj)**2 <= (ri+rj)**2: \n                    ii = find(i)\n                    jj = find(j)\n                    parent[ii] = jj \n                    \n        group = defaultdict(list)\n        for i in range(n): \n            ii = find(i)\n            group[ii].append(i)\n        \n        for grp in group.values(): \n            imax = jmax = -inf\n            imin = jmin = inf \n            inside = False\n            for i in grp:\n                i, j, r = circles[i]\n                if 0 <= i <= X or 0 <= j <= Y: inside = True \n                imax = max(imax, i+r)\n                jmax = max(jmax, j+r)\n                imin = min(imin, i-r)\n                jmin = min(jmin, j-r)\n            # print(grp, imax, imin, jmax, jmin)\n            if inside and imin <= 0 and imax >= X: \n                # print(1)\n                return False \n            if inside and jmin <= 0 and jmax >= Y: \n                # print(2)\n                return False \n            if inside and imax >= X and jmax >= Y: \n                # print(3)\n                return False \n            if inside and imin <= 0 and jmin <= 0: \n                # print(4)\n                return False \n        return True ",
    "submit_ts": "1722137939",
    "subm_id": "1335777779"
}