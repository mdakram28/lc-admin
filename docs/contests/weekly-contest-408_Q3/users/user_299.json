{
    "username": "mkliac",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        // ones[i] - ones[j] >= (i-j-(ones[i]-ones[j]))^2\n        // ones[i]-ones[j] >= (zeros[i]-zeros[j])^2\n        // if ones < zeros^2, jump to i + zeros - 1 + zeros^2\n        // if ones >= zeros^2, jump to ones end continuous, res += j-i+1\n        int n = s.size();\n        vector<int> onesEnd(n, -1);\n        vector<int> ones(n+1, 0);\n        for (int i = n-1, end = -1; i >= 0; i--) {\n            if (s[i] == '0') {\n                end = -1;\n                continue;\n            }\n            if (end == -1)\n                end = i;\n            onesEnd[i] = end;\n        }\n        for (int i = 0; i < n; i++) {\n            ones[i+1] = ones[i] + (s[i] == '1');\n        }\n\n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n;) {\n                int one = ones[j+1]-ones[i];\n                int zero = j-i+1-one;\n                // cout << one << \" \" << zero << endl;\n                if (zero * zero > one) {\n                    // cout << i + zero - 1 + zero * zero << \" \" << j << endl;\n                    // j++;\n                    j = i + zero - 1 + zero * zero;\n                    continue;\n                }\n                int start = j;\n                j = onesEnd[j];\n                if (j == -1) {\n                    res++;\n                    j = start+1;\n                } else {\n                    res += (j - start + 1);\n                    j++;\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722138815",
    "subm_id": "1335800401"
}