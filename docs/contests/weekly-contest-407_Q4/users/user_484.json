{
    "username": "nipun753",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long[] diff = new long[n];\n        \n\n        for (int i=0 ; i < n ; i++){\n            diff[i] =nums[i] - target[i];\n        }\n        \n\n        \n        int pos = 0;\n        long last = diff[0];\n        long ans = Math.abs(diff[0]);\n        \n        \n        for (int i = 1 ; i < n ; i++){\n            int cur_sign = (diff[i] > 0 ? 1 : -1);\n            int last_sign = (last>0 ? 1 : -1);\n            if (cur_sign!=last_sign){\n                ans = ans  + Math.abs(diff[i]);\n            }\n            else{\n               if (Math.abs(diff[i]) > Math.abs(last)){\n                   ans = ans + Math.abs(diff[i]) - Math.abs(last);\n               } \n            }\n            last = diff[i];\n                \n        }\n        return ans;\n        \n    }\n}",
    "submit_ts": "1721531276",
    "subm_id": "1327956836"
}