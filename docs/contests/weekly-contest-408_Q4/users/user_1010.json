{
    "username": "wrewsama",
    "submission": "class UnionFind:\n    def __init__(self, n):\n        self.parents = {i: i for i in range(n)}\n        self.sizes = {i: 0 for i in range(n)}\n    \n    def find(self, c):\n        if self.parents[c] != c:\n            self.parents[c] = self.find(self.parents[c])\n        return self.parents[c]\n\n    def union(self, c1, c2):\n        p1, p2 = self.find(c1), self.find(c2)\n        if p1 == p2:\n            return\n        if self.sizes[p1] >= self.sizes[p2]:\n            self.sizes[p1] += self.sizes[p2]\n            self.parents[p2] = self.parents[p1]\n        else:\n            self.sizes[p2] += self.sizes[p1]\n            self.parents[p1] = self.parents[p2]\n        \nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        uf = UnionFind(len(circles))\n\n        for i in range(len(circles)):\n            for j in range(i+1, len(circles)):\n                sqDist = (circles[i][0] - circles[j][0]) ** 2 + (circles[i][1] - circles[j][1]) ** 2\n                if sqDist <= (circles[i][2] + circles[j][2]) ** 2:\n                    # overlapping\n                    uf.union(i, j)\n\n        groups = {}\n        for i in range(len(circles)):\n            p = uf.find(i)\n            if p not in groups:\n                groups[p] = []\n            groups[p].append(i)\n\n        for grpList in groups.values():\n            top, bot, left, right = False, False, False, False\n            for idx in grpList:\n                x, y, r = circles[idx][0], circles[idx][1], circles[idx][2]\n                # top\n                if y+r >= Y and y-r <= Y:\n                    top = True\n                # bot\n                if y-r <= 0 and y+r >= 0:\n                    bot = True\n                # left\n                if x-r <= 0 and x+r >= 0:\n                    left = True\n                # right\n                if x+r >= X and x-r <= X:\n                    right = True\n\n            if (top and bot) or (left and right) or (top and right) or (bot and left):\n                return False\n\n        return True",
    "submit_ts": "1722138133",
    "subm_id": "1335782994"
}