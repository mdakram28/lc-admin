{
    "username": "JiaLiLue",
    "submission": "constexpr int NN = 5e4+100;\nstruct seg{\n    int v, l, r;\n    bool mark;\n};\n\n// int mv[NN*4], lc[NN*4], rc[NN*4];\nseg tree[NN*4];\n\nseg merge(const seg &s1, const seg &s2){\n    seg s;\n    s.v = max(s1.r+s2.l, max(s1.v, s2.v));\n    s.mark = s1.mark or s2.mark;\n    if(s1.mark){\n        s.l = s1.l;\n    } else {\n        s.l = s1.l+s2.l;\n    }\n    if(s2.mark){\n        s.r = s2.r;\n    } else {\n        s.r = s2.r+s1.r;\n    }\n    return s;\n}\n\nvoid init(int i, int l, int r){\n    if(r-l==1){\n        tree[i].mark = false;\n        tree[i].l = tree[i].r = tree[i].v = 1;\n    } else {\n        int m = l+r>>1, i1=i<<1, i2=i<<1^1;\n        init(i1, l, m);\n        init(i2, m, r);\n        tree[i] = merge(tree[i1], tree[i2]);\n    }\n}\n\nvoid modify(int i, int l, int r, int k){\n    if(r-l==1){\n        tree[i].mark = true;\n        // mv[i] = 1;\n        tree[i].l = 0;\n        // rc[i] = 1;\n    } else {\n        int m = l+r>>1, i1=i<<1, i2=i<<1^1;\n        if(k<m) modify(i1, l, m, k);\n        else modify(i2, m, r, k);\n        tree[i] = merge(tree[i1], tree[i2]);\n    }\n}\n\nseg query(int i, int l, int r, int i0, int i1){\n    if(l==i0 and r==i1){\n        return tree[i];\n    } else {\n        int m = l+r>>1;\n        if(i1<=m) return query(i<<1, l, m, i0, i1);\n        else if(i0>=m) return query(i<<1^1, m, r, i0, i1);\n        else {\n            return merge(query(i<<1, l, m, i0, m), \\\n                   query(i<<1^1, m, r, m, i1));\n        }\n    }\n}\n\nvoid modify(int x, int m){\n    modify(1, 0, m, x);\n}\nbool query(int x, int sz, int m){\n    auto s = query(1, 0, m, 0, x);\n    return sz <= s.v;\n}\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = queries.size(), m = min(3*n+10, NN);\n        init(1, 0, m);\n        vector<bool> ans;\n        for(auto &q:queries){\n            if(q[0]==1){\n                modify(q[1], m);\n            } else {\n                ans.push_back(query(q[1], q[2], m));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716649706.0
}