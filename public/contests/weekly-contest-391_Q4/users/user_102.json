{
    "username": "darrenhp",
    "submission": "class Solution {\npublic:\n  int minimumDistance(vector<vector<int>>& points) {\n    int n = points.size();\n    vector<vector<pair<int, int>>> A(4);\n    for (int i = 0; i < n; i++) {\n      A[0].push_back({+points[i][0]+points[i][1], i});\n      A[1].push_back({+points[i][0]-points[i][1], i});\n      A[2].push_back({-points[i][0]+points[i][1], i});\n      A[3].push_back({-points[i][0]-points[i][1], i});\n    }\n    for (auto &v: A)  sort(v.begin(), v.end());\n    int ans = 0x3f3f3f3f;\n    set<int> cand;\n    for( auto &v: A) cand.insert(v[0].second), cand.insert(v.back().second);\n    for (auto x: cand) {\n      int cur = 0;\n      for (auto &v: A) {\n        int tmp = 0;\n        for (int i = 0; i < n; i++) if (v[i].second != x) {\n          tmp-=v[i].first;\n          break;\n        }\n        for (int i = n-1; i >=0; i--) if (v[i].second != x) {\n          tmp+=v[i].first;\n          break;\n        }\n        cur = max(cur, tmp);\n      }\n      ans = min(ans, cur);\n    }\n    return ans;\n  }\n};"
}