{
    "username": "Ali",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        var ch = new char[n];\n        if (k == 1 || k == 9) {\n            Arrays.fill(ch, '9');\n        }\n        if (k == 2) {\n            Arrays.fill(ch, '9');\n            ch[0] = ch[ch.length - 1] = '8';\n        }\n        if (k == 3) {\n            Arrays.fill(ch, '9');\n        }\n        if (k == 4) {\n            Arrays.fill(ch, '8');\n            for (int i = 2; i + 2 < ch.length; i++) {\n                ch[i] = '9';\n            }\n        }\n        if (k == 5) {\n            Arrays.fill(ch, '9');\n            ch[0] = ch[ch.length - 1] = '5';\n        }\n        if (k == 6) {\n            if (n == 1) {\n                return \"6\";\n            }\n            if (n == 2) {\n                return \"66\";\n            }\n            Arrays.fill(ch, '9');\n            ch[0] = ch[n - 1] = '8';\n            if (ch.length % 2 == 0) {\n                ch[n / 2] = ch[n / 2 - 1] = '7';\n            } else {\n                ch[n / 2] = '8';\n            }\n        }\n        if (k == 7) {\n            if (n <= 2) {\n                Arrays.fill(ch, '7');\n            } else {\n                Arrays.fill(ch, '9');\n                if (n % 2 == 1) {\n                    for (int i = 9; i >= 0; i--) {\n                        ch[n / 2] = (char) (i + '0');\n                        if (isDivisible7(new String(ch))) {\n                            break;\n                        }\n                    }\n                } else {\n                    for (int i = 9; i >= 0; i--) {\n                        ch[n / 2] = ch[n / 2 - 1] = (char) (i + '0');\n                        if (isDivisible7(new String(ch))) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        if (k == 8) {\n            Arrays.fill(ch, '8');\n            if (n > 6) {\n                for (int i = 3; i + 3 < ch.length; i++) {\n                    ch[i] = '9';\n                }\n            }\n        }\n\n        return new String(ch);\n    }\n\n    boolean isDivisible7(String num) {\n        int n = num.length();\n        if (n == 0 && num.charAt(0) == '0')\n            return true;\n \n        if (n % 3 == 1)\n            num = \"00\" + num;\n        if (n % 3 == 2)\n            num = \"0\" + num;\n        n = num.length();\n \n        int gSum = 0, p = 1;\n        for (int i = n - 1; i >= 0; i--) {\n            int group = 0;\n            group += num.charAt(i--) - '0';\n            group += (num.charAt(i--) - '0') * 10;\n            group += (num.charAt(i) - '0') * 100;\n            gSum = gSum + group * p;\n            p = p * -1;\n        }\n \n        return (gSum % 7 == 0);\n    }\n\n}",
    "submit_ts": "1723953503",
    "subm_id": "1359823033"
}