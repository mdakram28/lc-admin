{
    "username": "AkashKumar_SP",
    "submission": "from collections import defaultdict\n\nclass Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[1] * (k + 1) for i in range(n)]\n        ans = 1\n\n        bseq = [-1] * (k + 1)\n        dicts = [defaultdict(int) for _ in range(k + 1)]\n\n        for i in range(n):\n            for j in range(k + 1):\n                dp[i][j] = max([dp[i][j]] + [1 + bseq[p] for p in range(j)])\n                    \n                if(nums[i] in dicts[j]):\n                    dp[i][j] = max(dp[i][j], 1 + dicts[j][nums[i]])\n\n                ans = max(ans, dp[i][j])\n\n            for j in range(k + 1):\n                bseq[j] = max(bseq[j], dp[i][j])\n                dicts[j][nums[i]] = max(dicts[j][nums[i]], dp[i][j])\n\n        return ans",
    "submit_ts": 1717861921.0
}