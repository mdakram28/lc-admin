{
    "username": "rZitS9uAsX",
    "submission": "class Solution {\n    static class Node{\n        int des;// 0\u8868\u793a\u6a2a\u5411, 1\u8868\u793a\u7eb5\u5411\n        int val;\n        public Node(int des,int val){\n            this.des = des;\n            this.val = val;\n        }\n    }\n    public long minimumCost(int m, int n, int[] h, int[] v) {\n        int x = 1, y = 1;\n        Node[] nodes = new Node[m+n-2];\n        for(int i=0;i<m-1;i++)nodes[i] = new Node(1,h[i]);\n        for(int i=0;i<n-1;i++)nodes[i+m-1] = new Node(0,v[i]);\n        Arrays.sort(nodes,(a,b)->{\n            return b.val - a.val;\n        });\n        long ans = 0;\n        n = m+n-2;\n        for(int i=0;i<n;i++){\n            Node res = nodes[i];\n            if(res.des==0){\n                ans+=(long)res.val*y;\n                x++;\n            }\n            else{\n                ans+=(long)res.val*x;\n                y++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926110",
    "subm_id": "546444148"
}