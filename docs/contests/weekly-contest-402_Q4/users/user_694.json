{
    "username": "sirvi_26",
    "submission": "typedef long long ll ; \n\nclass Solution {\npublic:\n    \n\n    vector<ll> arr , seg ; \n\n    void update(int start, int end, int up_idx, int index, int val)\n    {\n        if (start == end)\n        {\n            seg[index] = val; \n            return; \n        }\n\n        int mid = (start + end) / 2; \n        if (up_idx >= start and up_idx <= mid)\n            update(start, mid, up_idx, 2 * index + 1, val);\n        else update(mid + 1, end, up_idx, 2 * index + 2, val);\n        seg[index] = seg[2 * index + 1] + seg[2 * index + 2]; \n    }\n\n    ll query(int start, int end, int l, int  r, int index)\n    {\n\n        if (l > r)\treturn 0; \n        if (start >= l and end <= r)\n            return seg[index];\n\n        int mid = (start + end) / 2; \n        ll left = query(start, mid, l, min(mid, r), 2*index+1); \n        ll right = query(mid + 1, end, max(mid + 1, l), r, 2 * index + 2);\n\n        return left + right; \n    }\n    \n    void updateK(int tind , int &n , vector<int>&nums)\n    {\n        \n        int up = (nums[tind]>nums[tind-1] and nums[tind]>nums[tind+1]); \n        // cout<<\"ind : \"<<tind<<\" up : \"<<up<<\"\\n\" ; \n        update(0,n-1,tind,0,up) ; \n        // cout<<\" after update : \"<<query(0,n-1,tind,tind,0)<<\"\\n\" ; \n    }\n    \n    \n    \n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size() ; \n        \n        // build(0,0,n-1);\n        seg.resize(4*n+2,0);\n        \n        for(int i = 1 ; i<nums.size()-1;++i)\n        {\n            if(nums[i]>nums[i-1] and nums[i]>nums[i+1])\n                update(0,n-1,i,0,1);\n        }\n        vector<int> ans;\n        for(auto & i : queries)\n        {\n            if(i[0]==1)\n            {\n                ll val = query(0,n-1,i[1],i[2],0) ; \n                // cout<<\"val : \"<<val<<\"\\n\" ; \n                    if(i[1]==i[2])\n                    {\n                        ans.push_back(0);\n                        continue; \n                    }\n                        \n            \n                    val -= query(0,n-1,i[1],i[1],0);\n               \n                    val-= query(0,n-1,i[2],i[2],0);\n                ans.push_back(val);\n            }\n                \n            else \n            {\n                int ind = i[1];\n                if(ind==0 or ind==n-1)\n                {\n                    nums[ind] = i[2];\n                    if(ind==0)\n                    {\n                       updateK(ind+1,n,nums) ; \n                    }\n                    else if(ind==n-1)\n                    {\n                        updateK(ind-1,n,nums);\n                    }\n                    continue ; \n                }\n                \n                nums[i[1]] = i[2];\n                updateK(ind,n,nums);\n                if(ind-1>0)\n                    updateK(ind-1,n,nums);\n                if(ind+1<n-1)\n                    updateK(ind+1,n,nums);\n            }\n        }\n        return ans;  \n        \n    }\n};",
    "submit_ts": "1718507964",
    "subm_id": "1289667754"
}