{
    "username": "EigenVector0",
    "submission": "class Solution {\n\tprivate long f(int[] delta, int from, int to) {\n\t\tfinal int n = delta.length;\n\t\tvar mono = new ArrayDeque<Integer>();\n\t\tmono.push(0);\n\t\tlong ans = 0L;\n\t\tfor (int i = from; i < to; ++i) {\n\t\t\tfinal int x = Math.abs(delta[i]);\n\t\t\twhile (mono.peek() > x) {\n\t\t\t\tint t = mono.pop();\n\t\t\t\tans += t-Math.max(mono.peek(), x);\n\t\t\t}\n\t\t\tif (mono.peek() != x) mono.push(x);\n\t\t}\n\t\tans += mono.peek();\n\t\treturn ans;\n\t}\n    public long minimumOperations(int[] nums, int[] target) {\n        final int n = nums.length;\n\t\tint[] delta = new int[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tdelta[i] = target[i] - nums[i];\n\t\t}\n\t\tlong ans = 0L;\n\t\tint i = 0;\n\t\twhile (i<n) {\n\t\t\tint i0 = i;\n\t\t\twhile (++i<n && (delta[i] ^ delta[i0]) >= 0) ;\n\t\t\t// System.out.printf(\"i0=%d, i=%d\\n\", i0, i);\n\t\t\tans += f(delta, i0, i);\n\t\t}\n\t\treturn ans;\n    }\n}\n",
    "submit_ts": "1721531056",
    "subm_id": "1327951021"
}