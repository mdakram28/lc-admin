{
    "username": "justinleung0204",
    "submission": "class Tnode:\n    def __init__(self):\n        self.m={}\n        self.end=False\n        self.cost=None\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        #01 knapsack?\n        #TLE\n        n=len(target)\n        \"\"\"\n        try sanitize words(make sure word in target)\n        KMP\n        \n        non-BSable\n        \"\"\"\n#         def checkSubstr(s, p):\n#             s=p+\"#\"+s\n#             n=len(s)\n#             LPS=[0]\n#             for i in range(1,n):\n#                 j=LPS[i-1]\n#                 while j>0 and s[i]!=s[j]:\n#                     j=LPS[j-1]\n#                 if s[i]==s[j]:\n#                     j+=1\n#                 #else j==0\n#                 LPS.append(j)\n\n#                 if j==len(p):\n#                     return True\n#             return False\n\n            \n\n                \n        root= Tnode()\n        for i,w in enumerate(words):\n            # if w not in target:\n            #     continue\n                \n            this=root\n            for c in w:\n                if c not in this.m:\n                    this.m[c]=Tnode()\n                this=this.m[c]\n            this.end=True\n            if this.cost is not None:#dup=>choose min\n                this.cost=min(costs[i],this.cost)\n            else:\n                this.cost=costs[i]\n            \n        INF=10**20\n        @cache\n        def dfs(i): #match target[i:]\n\n            if i==n:\n                return 0\n            \n            res=INF\n            this=root\n            for j in range(i,n):\n                c=target[j]\n                if c not in this.m:\n                    break\n                this=this.m[c]\n                \n                if this.end:    #valid break\n\n                    #if curCost+this.cost<ans:\n                    res=min(res,this.cost+dfs(j+1))\n\n            return res\n                    \n        ans=dfs(0)\n        return ans if ans<INF else -1\n            \n            \n            \n            \n            \n            \n        ",
    "submit_ts": "1720323981",
    "subm_id": "1312388747"
}