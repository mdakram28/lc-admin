{
    "username": "weizhe2",
    "submission": "\n\nclass UF {\nprivate:\n    vector<int> p, r;\n\npublic:\n    UF(int sz) : p(sz), r(sz, 0) {\n        for (int i = 0; i < sz; ++i) p[i] = i;\n    }\n\n    int find(int x) {\n        return p[x] == x ? x : p[x] = find(p[x]);\n    }\n\n    void unite(int x, int y) {\n        int rx = find(x), ry = find(y);\n        if (rx != ry) {\n            if (r[rx] > r[ry]) p[ry] = rx;\n            else if (r[rx] < r[ry]) p[rx] = ry;\n            else {\n                p[ry] = rx;\n                ++r[rx];\n            }\n        }\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        int n = c.size(), T = n, B = n + 1, L = n + 2, R = n + 3;\n        UF uf(n + 4);\n\n        for (int i = 0; i < n; ++i) {\n            int xi = c[i][0], yi = c[i][1], ri = c[i][2];\n            if (yi + ri >= Y) uf.unite(i, T);\n            if (yi - ri <= 0) uf.unite(i, B);\n            if (xi + ri >= X) uf.unite(i, R);\n            if (xi - ri <= 0) uf.unite(i, L);\n\n            for (int j = i + 1; j < n; ++j) {\n                int xj = c[j][0], yj = c[j][1], rj = c[j][2];\n                if (sqrt(pow(xi - xj, 2) + pow(yi - yj, 2)) <= ri + rj) {\n                    uf.unite(i, j);\n                }\n            }\n        }\n\n        return  ! (uf.find(T) == uf.find(B) || uf.find(L) == uf.find(R) || uf.find(L) == uf.find(B) || uf.find(T) == uf.find(R));\n    }\n};\n",
    "submit_ts": "1722136570",
    "subm_id": "1335738512"
}