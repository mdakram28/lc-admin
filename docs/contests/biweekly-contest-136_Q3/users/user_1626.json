{
    "username": "JimmyChiu702",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int res = 0;\n        for (int i=0; i<m/2; i++) {\n            for (int j=0; j<n/2; j++) {\n                int s = grid[i][j] + grid[i][n-j-1] + grid[m-i-1][j] + grid[m-i-1][n-j-1];\n                res += min(s, 4-s);\n            }\n        }\n        int t1 = 0; // total number of 1\n        int s1 = 0; // total number of single 1\n        if (m&1) {\n            for (int i=0; i<n/2; i++) {\n                if (grid[m>>1][i] == grid[m>>1][n-i-1]) {\n                    t1 += 2*grid[m>>1][i];\n                } else {\n                    t1++;\n                    s1++;\n                }\n            }\n        }\n        if (n&1) {\n            for (int i=0; i<m/2; i++) {\n                if (grid[i][n>>1] == grid[m-i-1][n>>1]) {\n                    t1 += 2*grid[i][n>>1];\n                } else {\n                    t1++;\n                    s1++;\n                }\n            }\n        }\n        if (t1%4 == 0) {\n            res += s1;\n        } else {\n            if (s1 == 0) {\n                res += 2;\n            } else {\n                res += s1;\n            }\n        }\n        if ((m&1)==1 && (n&1)==1 && grid[m>>1][n>>1] == 1) {\n            res++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699806",
    "subm_id": "1343222904"
}