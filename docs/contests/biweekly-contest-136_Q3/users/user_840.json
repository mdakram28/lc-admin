{
    "username": "Vallen2023",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int result = 0;\n\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[i][j] == grid[i][n - j - 1] &&\n                    grid[m - i - 1][j] == grid[m - i - 1][n - j - 1] &&\n                    grid[m - i - 1][j] == grid[i][j]) {\n                    continue;\n                }\n                int tmp = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                result += min(tmp, 4 - tmp);\n            }\n        }\n\n        int tmp = 0;\n        int cnt1 = 0;\n        bool inv = false;\n        if (0 != m % 2) {\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[m / 2][i] != grid[m / 2][n - i - 1]) {\n                    result++;\n                    inv = true;\n                }\n                if (1 == grid[m / 2][i]) {\n                    cnt1++;\n                }\n            }\n        }\n        if (0 != n % 2) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - i - 1][n / 2]) {\n                    result++;\n                    inv = true;\n                }\n                if (1 == grid[i][n / 2]) {\n                    cnt1++;\n                }\n            }\n        }\n        if ((0 != cnt1 % 2) && !inv) {\n            result += 2;\n        }\n        if ((0 != m % 2) && (0 != n % 2)) {\n            result += grid[m / 2][n / 2];\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1722698524",
    "subm_id": "1343183414"
}