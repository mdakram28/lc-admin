{
    "username": "23bcs253",
    "submission": "class Solution\n{\npublic:\n    int numberOfAlternatingGroups(vector<int> &colors, int k)\n    {\n        int n = colors.size();\n        int i=0,j=0;\n        int ans = 0,count=0;\n        unordered_map<int,int> mp;\n        if (colors[n - 1] != colors[0] && colors[0] != colors[1])\n        {\n            mp[0]=1;\n        }\n        for (int i = 1; i < n - 1; i++)\n        {\n            if (colors[i] != colors[i - 1] && colors[i] != colors[i + 1])\n            {\n                mp[i] = 1;\n            }\n        }\n        if (colors[n - 1] != colors[0] && colors[n - 1] != colors[n - 2])\n        {\n            mp[n - 1] = 1;\n        }\n        while(j < k-2){\n            if (mp[j] == 1){\n                count++;\n            }\n            j++;\n        }\n        for (int i = 0; i < n; i++){\n            if(count == k-2){\n                ans++;\n            }\n            j = j%n;\n            if (mp[i] == 1){\n                count--;\n            }\n            if (mp[j] == 1){\n                count++;\n            }\n            j++;\n\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278478",
    "subm_id": "1311710906"
}