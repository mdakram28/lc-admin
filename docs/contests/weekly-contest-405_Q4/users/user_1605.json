{
    "username": "fenwicktree",
    "submission": "// Trie Template\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> children;\n    int cost;\n\n    TrieNode() : cost(INT_MAX) {}\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    Trie() {\n        root = new TrieNode();\n    }\n\n    void insert(const string& word, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            if (node->children.find(c) == node->children.end()) {\n                node->children[c] = new TrieNode();\n            }\n            node = node->children[c];\n        }\n        node->cost = min(node->cost, cost);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        Trie trie;\n        int n=w.size();\n        int l=t.size();\n        for (int i=0;i<n;++i) {\n            trie.insert(w[i], c[i]);\n        }\n        vector<int>dp(l+1,INT_MAX);\n        dp[0]=0;\n        for(int i=0;i<l;++i){\n            if(dp[i]==INT_MAX)continue;\n            TrieNode* node=trie.root;\n            for(int j=i;j<l;++j){\n                char c=t[j];\n                if(node->children.find(c)==node->children.end())break;\n                node=node->children[c];\n                if(node->cost!=INT_MAX){\n                    dp[j+1]=min(dp[j+1],dp[i]+node->cost);\n                }\n            }\n        }\n\n        return dp[l]==INT_MAX?-1:dp[l];\n    }\n};\n",
    "submit_ts": "1720323659",
    "subm_id": "1312380955"
}