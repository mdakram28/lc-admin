{
    "username": "lyywy",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> diff(nums.size(), 0);\n        for( int i = 0; i < nums.size();i++){\n            diff[i] = target[i] - nums[i];\n        }\n        int i = 0;\n        long long ans = 0;\n        while( i < nums.size()){\n            if( diff[i] == 0){\n                i++;\n                if( i == nums.size()) break;\n            }\n            bool f = (diff[i] > 0);\n            int j = i + 1;\n            int mx = abs(diff[i]);\n            while(j < nums.size() && diff[j] != 0 && diff[j] > 0 == f){\n                mx = min(mx,(abs(diff[j])));\n                j++;\n            }\n            ans += mx;\n            for(int k = i; k < j ;k++){\n                diff[k] += f ? (-mx) : (mx);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532561",
    "subm_id": "548393071"
}