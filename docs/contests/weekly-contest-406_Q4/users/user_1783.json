{
    "username": "sherlocked-c",
    "submission": "    class Solution {\n        class Cut {\n            long cost;\n            // 0\u4ee3\u8868\u6c34\u5e73\uff0c1\u4ee3\u8868\u5782\u76f4\n            int dir = 0;\n            int pos = 0;\n\n            public Cut(long cost, int dir, int pos) {\n                this.cost = cost;\n                this.dir = dir;\n                this.pos = pos;\n            }\n        }\n\n        public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n            if (m == 1 && n == 1) {\n                return 0;\n            }\n            long ans = 0;\n            int hNum = 0, vNum = 0;\n            // \u5bf9\u6240\u6709\u5207\u6cd5\u6392\u5e8f\n            List<Cut> allCutList = new ArrayList<>();\n            for (int i = 0; i < horizontalCut.length; i++) {\n                allCutList.add(new Cut(horizontalCut[i], 0, i));\n            }\n            for (int i = 0; i < verticalCut.length; i++) {\n                allCutList.add(new Cut(verticalCut[i], 1, i));\n            }\n            allCutList.sort((o1, o2) -> Long.compare(o2.cost, o1.cost));\n\n            for (Cut cut : allCutList) {\n                if (cut.dir == 0) {\n                    // \u6c34\u5e73\u5207\u5272\n                    ans += cut.cost * (vNum + 1);\n                    hNum++;\n                } else {\n                    // \u5782\u76f4\u5207\u5272\n                    ans += cut.cost * (hNum + 1);\n                    vNum++;\n                }\n            }\n            return ans;\n        }\n    }",
    "submit_ts": "1720926151",
    "subm_id": "546444389"
}