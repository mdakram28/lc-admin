{
    "username": "lee0560",
    "submission": "M = 1 << 16\nN = M << 1\nl = [0] * N\nr = [0] * N\n\ndef g_init(idx, L):\n    if L == 1:\n        return\n    left = idx + idx + 1\n    right = left + 1\n    L >>= 1\n    l[left] = l[idx]\n    r[left] = l[idx] + L\n    g_init(left, L)\n    l[right] = r[left]\n    r[right] = r[idx]\n    g_init(right, L)\n\nl[0], r[0] = 0, M\ng_init(0, M)\n\nmaxi = [0] * N\nll = [0] * N\nrr = [0] * N\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        \n        def init(idx, L):\n            maxi[idx] = ll[idx] = rr[idx] = L\n            if L == 1:\n                return\n            L >>= 1\n            init(idx + idx + 1, L)\n            init(idx + idx + 2, L)\n        \n        def insert(idx, L, x):\n            if L == 1:\n                if x == l[idx]:\n                    ll[idx] = 0\n                else:\n                    rr[idx] = 0\n                return\n            L >>= 1\n            left = idx + idx + 1\n            right = left + 1\n            if x <= r[left]:\n                insert(left, L, x)\n            if x >= l[right]:\n                insert(right, L, x)\n            ll[idx] = L + ll[right] if ll[left] == L else ll[left]\n            rr[idx] = L + rr[left] if rr[right] == L else rr[right]\n            maxi[idx] = max(maxi[left], maxi[right], rr[left] + ll[right])\n            #print('insert', l[idx], r[idx], x, ':', maxi[idx], ll[idx], rr[idx])\n        \n        def query(idx, L, x, sz):\n            #print(l[idx], r[idx], ':', x, sz, '|', maxi[idx], ll[idx], rr[idx])\n            if r[idx] <= x:\n                return maxi[idx] >= sz\n            L >>= 1\n            left = idx + idx + 1\n            if x <= r[left]:\n                return query(left, L, x, sz)\n            else:\n                if query(left, L, x, sz):\n                    return True\n                right = left + 1\n                if query(right, L, x, sz):\n                    return True\n                val = rr[left] + min(ll[right], x - l[right])\n                return val >= sz\n        \n        init(0, M)\n        res = []\n        for op in queries:\n            if op[0] == 1:\n                insert(0, M, op[1])\n            else:\n                x, sz = op[1], op[2]\n                res.append(query(0, M, x, sz))\n        return res\n        \n        ",
    "submit_ts": "1716651756",
    "subm_id": "534776312"
}