{
    "username": "gargayush2002",
    "submission": "class Solution {\npublic:\n    int helper(vector<int> &nums,int val,int k){\n        int res = 0;\n        int n = nums.size();\n        for(int i=0;i<(n+1)/2;i++){\n            if(abs(nums[i] - nums[n-i-1]) != val){\n                if((k - nums[i] >= val) || (k - nums[n-i-1] >= val) || (nums[i] >= val || nums[n-i-1] >= val)) res++;\n                else res += 2;\n            }\n        }\n        return res;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int,int> mp;\n        for(int i=0;i<(n+1)/2;i++){\n            mp[abs(nums[i] - nums[n-i-1])]++;\n        }\n        vector<pair<int,int>> vec;\n        for(auto &i:mp) vec.push_back({i.second,i.first});\n        sort(vec.begin(), vec.end(), [](const auto &a, const auto &b) {\n            if (a.first == b.first) \n                return a.second < b.second;\n            return a.first > b.first;\n        });\n\n        int val = INT_MAX;\n        val = min(val,helper(nums,vec[0].second,k));\n        if(vec.size() > 1) val = min(val,helper(nums,vec[1].second,k));\n        return val;\n    }\n};",
    "submit_ts": "1721490337",
    "subm_id": "1327479771"
}