{
    "username": "FritzZ",
    "submission": "class Solution {\npublic:\n    long long helper(vector<int>& nums) {\n        int cur_max = 0;\n        long long ret = 0;\n        for (auto num: nums) {\n            if (num >= cur_max) {\n                ret += num - cur_max;\n                cur_max = num;\n            } else {\n                cur_max = num;\n            }\n        }\n        return ret;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> temp;\n        int phase = 1;\n        long long ret = 0;\n        for (int i = 0; i < n; i++) {\n            int diff = target[i] - nums[i];\n            if (diff > 0) {\n                if (phase == 2) {\n                    ret += helper(temp);\n                    temp.clear();\n                }\n                phase = 1;\n                temp.push_back(diff);\n            } else if (diff < 0) {\n                if (phase == 1) {\n                    ret += helper(temp);\n                    temp.clear();\n                }\n                phase = 2;\n                temp.push_back(-diff);\n            } else {\n                if (phase == 1 || phase == 2) {\n                    ret += helper(temp);\n                    temp.clear();\n                }\n                phase = 0;\n            }\n        }\n        ret += helper(temp);\n        return ret;\n    }\n};",
    "submit_ts": "1721533105",
    "subm_id": "1328001399"
}