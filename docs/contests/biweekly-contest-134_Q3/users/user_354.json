{
    "username": "_dipu",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll = long long int;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        for (int i = 0; i < n; i++) {\n            colors.push_back(colors[i]);\n        }\n        n = colors.size();\n        vector<int> cumsum(n);\n        for (int i = 0; i < n; i++) {\n            int lft = i - 1;\n            if (lft < 0) {\n                lft = n - 1;\n            }\n            int rgt = i + 1;\n            if (rgt >= n) {\n                rgt = 0;\n            }\n            if (colors[i] != colors[lft] and colors[i] != colors[rgt]) {\n                cumsum[i]++;\n            }\n            if (i - 1 >= 0) { \n                cumsum[i] += cumsum[i - 1];\n            }\n        }\n        int ans = 0;\n        n /= 2;\n        for (int i = 0; i < n; i++) {\n            int s = i + 1;\n            int e = i + k - 2;\n            if (e >= cumsum.size()) {\n                break;\n            }\n            int sum = cumsum[e] - cumsum[s - 1];\n            if (sum == e - s + 1) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278682",
    "subm_id": "1311719722"
}