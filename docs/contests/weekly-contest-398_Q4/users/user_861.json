{
    "username": "DC2415",
    "submission": "\n\npublic class Solution {\n    public  Map<Integer, int[][]> mem=new HashMap<>();\n   public int waysToReachStair(int k) {\n        return helper(k, 1, 0, true);\n    }\n\n    private int helper(int k, int i, int jump, boolean canGo) {\n        if (i > k + 5) {\n            return 0;\n        }\n\n        if (jump > 31) {\n            return 0;\n        }\n\n        int can = canGo ? 1 : 0;\n        if (mem.containsKey(i) && mem.get(i)[jump][can] != -1) {\n            return mem.get(i)[jump][can];\n        }\n\n        int ans = (i == k) ? 1 : 0;\n\n        if (canGo && i > 0) {\n            ans += helper(k, i - 1, jump, false);\n        }\n\n        if (i + (1 << jump) <= k + 1) {\n            ans += helper(k, i + (1 << jump), jump + 1, true);\n        }\n\n        if (!mem.containsKey(i)) {\n            mem.put(i, new int[32][2]);\n            for (int j = 0; j < 32; j++) {\n                mem.get(i)[j][0] = -1;\n                mem.get(i)[j][1] = -1;\n            }\n        }\n\n        mem.get(i)[jump][can] = ans;\n        return ans;\n    }\n\n}\n",
    "submit_ts": 1716089450.0
}