{
    "username": "maheshraju2020",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        d = {}\n        cur = nums[0]\n        res = abs(cur-k)\n        left = 0\n        for i in range(len(nums)):\n            cur &= nums[i]\n            res = min(res, abs(cur-k))\n            for j in range(35):\n                if nums[i] & (1 << j):\n                    d[j] = d.get(j, 0) + 1\n            while left < i and cur < k:\n                temp = 0\n                for j in range(35):\n                    if nums[left] & (1 << j):\n                        d[j] = d.get(j, 0) - 1\n                    if d.get(j, 0) == i-left:\n                        temp |= (1 << j)\n                left += 1\n                cur = temp\n                res = min(res, abs(cur-k))\n        return res\n\n\n        ",
    "submit_ts": 1717298917.0
}