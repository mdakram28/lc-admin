{
    "username": "cradles-w",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        map<string, int> rec;\n\n        function<int(int, int, int, int)> check = [&](int ii, int ij, int ji, int jj) {\n            if(ii < 0 || ij > grid.size() || ji < 0 || ji > grid[0].size()) return 0;\n            string key = to_string(ii) + \" \" + to_string(ij) + \" \" +  to_string(ji) +  \" \" + to_string(jj);\n            if(rec[key] != 0) return rec[key];\n            int hmi = 30, hmx = 0, wmi = 30, wmx = 0;\n\n            for(int i=ii; i<ij; ++i) {\n                for(int j=ji; j<jj; ++j) {\n                    if(grid[i][j] == 1) {\n                        hmi = min(hmi, i);\n                        hmx = max(hmx, i);\n                        wmi = min(wmi, j);\n                        wmx = max(wmx, j);\n                    }\n                }\n            }\n            if(hmi > hmx || wmi > wmx) return 0;\n            rec[key] = (hmx-hmi+1) * (wmx - wmi+1);\n\n            return rec[key];\n        };\n\n        int first, second, third;\n        int res = 900;\n        for(int i=0; i<grid.size(); ++i) {\n            first = check(0, i, 0, grid[0].size());\n            if(first == 0) continue;\n            for(int j=i+1; j<grid.size(); ++j) {\n                second = check(i, j, 0, grid[0].size());\n                third = check(j, grid.size(), 0, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n\n            for(int j=0; j<grid[0].size(); ++j) {\n                second = check(i, grid.size(), 0, j);\n                third = check(i, grid.size(), j, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n        }\n\n        for(int i=grid.size()-1; i>=0; --i) {\n            first = check(i, grid.size(), 0, grid[0].size());\n            if(first == 0) continue;\n            for(int j=i-1; j>=0; --j) {\n                second = check(j, i, 0, grid[0].size());\n                third = check(0, j, 0, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n\n            for(int j=0; j<grid[0].size(); ++j) {\n                second = check(0, i, 0, j);\n                third = check(0, i, j, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n        }\n\n        for(int i=0; i<grid[0].size(); ++i) {\n            first = check(0, grid.size(), 0, i);\n            if(first == 0) continue;\n            for(int j=i+1; j<grid[0].size(); ++j) {\n                second = check(0, grid.size(), i, j);\n                third = check(0, grid.size(), j, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n\n            for(int j=0; j<grid.size(); ++j) {\n                second = check(0, j, i, grid[0].size());\n                third = check(j, grid.size(), i, grid[0].size());\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n        }\n\n        for(int i=grid[0].size()-1; i>=0; --i) {\n            first = check(0, grid.size(), i, grid[0].size());\n            if(first == 0) continue;\n            for(int j=i-1; j>=0; --j) {\n                second = check(0, grid.size(), j, i);\n                third = check(0, grid.size(), 0, j);\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n\n            for(int j=0; j<grid.size(); ++j) {\n                second = check(0, j, 0, i);\n                third = check(j, grid.size(), 0, i);\n                if(first != 0 && second != 0 && third != 0) {\n                    res = min(res, first + second + third);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719115046.0
}