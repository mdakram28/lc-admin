{
    "username": "varutse",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long count = 0;\n        int hor = m - 2;\n        int ver = n - 2;\n        int horCount = 1;\n        int verCount = 1;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        while (true) {\n            if (hor < 0) {\n                for (int i = 0; i <= ver; i++) {\n                    count += verticalCut[i] * horCount;\n                }\n                break;\n            }\n            else if (ver < 0) {\n                for (int i = 0; i <= hor; i++) {\n                    count += horizontalCut[i] * verCount;\n                }\n                break;\n            }\n            if (horizontalCut[hor] > verticalCut[ver]) {\n                count += horizontalCut[hor] * verCount;\n                horCount++;\n                hor--;\n            }\n            else {\n                count += verticalCut[ver] * horCount;\n                verCount++;\n                ver--;\n            }\n        }\n        return count;\n    }\n}",
    "submit_ts": "1720926352",
    "subm_id": "1320283629"
}