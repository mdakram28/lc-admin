{
    "username": "man-ray",
    "submission": "class Solution {\n    static int minimumSum(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        //\u679a\u4e3e \u5217\n        int ans = m * n;\n        int cnt = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                cnt += grid[i][j];\n            }\n        }\n\n        for (int i = 0; i < n - 1; i++) {\n            //[0,i],[i+1,n-1]\n            int sz = minimumArea(grid, 0, i, 0, m - 1);\n            int min = 1 << 30;\n            for (int j = 0; j < m - 1; j++) {//\u679a\u4e3e\u884c\n                //[0,j],[j+1,m-1]\n                int s1 = minimumArea(grid, i + 1, n - 1, 0, j);\n                int s2 = minimumArea(grid, i + 1, n - 1, j + 1, m - 1);\n                min = Math.min(min, s1 + s2);\n            }\n            ans = Math.min(ans, sz + min);\n        }\n        System.out.println(ans);\n\n        for (int i = 1; i < n; i++) {\n            //[i,n-1]\n            int sz = minimumArea(grid, i, n - 1, 0, m - 1);\n            int min = 1 << 30;\n            for (int j = 0; j < m - 1; j++) {//\u679a\u4e3e\u884c\n                //[0,j],[j+1,m-1]\n                int s1 = minimumArea(grid, 0, i, 0, j);\n                int s2 = minimumArea(grid, 0, i, j + 1, m - 1);\n                min = Math.min(min, s1 + s2);\n            }\n            ans = Math.min(ans, sz + min);\n        }\n        System.out.println(ans);\n\n\n        for (int i = 0; i < m - 1; i++) {\n            //[0,i]\n            int sz = minimumArea(grid, 0, n - 1, 0, i);\n            int min = 1 << 30;\n            for (int j = 0; j < n - 1; j++) {\n                //[0,j],[j+1,m-1]\n                int s1 = minimumArea(grid, 0, j, i + 1, m - 1);\n                int s2 = minimumArea(grid, j + 1, n - 1, i + 1, m - 1);\n                min = Math.min(min, s1 + s2);\n            }\n            ans = Math.min(ans, sz + min);\n        }\n        System.out.println(ans);\n\n        for (int i = 1; i < m; i++) {\n            //[i,m-1]\n            int sz = minimumArea(grid, 0, n - 1, i, m - 1);\n            int min = 1 << 30;\n            for (int j = 0; j < n - 1; j++) {\n                //[0,j],[j+1,m-1]\n                int s1 = minimumArea(grid, 0, j, 0, i);\n                int s2 = minimumArea(grid, j + 1, n - 1, 0, i);\n                min = Math.min(min, s1 + s2);\n            }\n            ans = Math.min(ans, sz + min);\n        }\n        System.out.println(ans);\n        int l = 1 << 30, r = 0, u = 1 << 30, d = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 1) {\n                    l = Math.min(l, j);\n                    r = Math.max(r, j);\n                    u = Math.min(u, i);\n                    d = Math.max(d, i);\n                }\n            }\n        }\n        for (int i = u; i <= d; i++) {\n            //[u,i]\n            int[] t1 = minimumArea1(grid, 0, n - 1, u, i);\n\n            for (int j = i + 1; j <= d; j++) {\n                for (int k = j ; k <= d; k++) {\n                    //[j,d]\n                    int[] t2 = minimumArea1(grid, 0, n - 1, j, k);\n                    for (int o = k + 1; o <= d; o++) {\n                        int[] t3 = minimumArea1(grid, 0, n - 1, o, d);\n                        if (t1[0] + t2[0] + t3[0] == cnt) ans = Math.min(ans, t1[1] + t2[1] + t3[1]);\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n\n        for (int i = l; i <= r; i++) {\n            //[u,i]\n            int[] t1 = minimumArea1(grid, 0, i, 0, m - 1);\n            for (int j = i + 1; j <= r; j++) {\n                for (int k = j; k <= r; k++) {\n                    //[j,d]\n                    int[] t2 = minimumArea1(grid, j, k, 0, m - 1);\n                    for (int o = k + 1; o <= r; o++) {\n                        int[] t3 = minimumArea1(grid, o, r, 0, m - 1);\n                        if (t1[0] + t2[0] + t3[0] == cnt) ans = Math.min(ans, t1[1] + t2[1] + t3[1]);\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n\n        return ans;\n\n    }\n\n\n    static int minimumArea(int[][] grid, int le, int ri, int up, int down) {\n        int l = 1 << 30, r = 0, u = 1 << 30, d = 0;\n        for (int i = up; i <= down; i++) {\n            for (int j = le; j <= ri; j++) {\n                if (grid[i][j] == 1) {\n                    l = Math.min(l, j);\n                    r = Math.max(r, j);\n                    u = Math.min(u, i);\n                    d = Math.max(d, i);\n                }\n            }\n        }\n        if (l > r || u > d) return 0;\n        return (r - l + 1) * (d - u + 1);\n    }\n\n    static int[] minimumArea1(int[][] grid, int le, int ri, int up, int down) {\n        int l = 1 << 30, r = 0, u = 1 << 30, d = 0;\n        int cnt = 0;\n        for (int i = up; i <= down; i++) {\n            for (int j = le; j <= ri; j++) {\n                if (grid[i][j] == 1) {\n                    l = Math.min(l, j);\n                    r = Math.max(r, j);\n                    u = Math.min(u, i);\n                    d = Math.max(d, i);\n                    cnt++;\n                }\n            }\n        }\n        if (l > r || u > d) return new int[]{cnt, 0};\n        return new int[]{cnt, (r - l + 1) * (d - u + 1)};\n    }\n}",
    "submit_ts": "1719112935",
    "subm_id": "541395009"
}