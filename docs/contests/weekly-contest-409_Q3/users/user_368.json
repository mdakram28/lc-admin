{
    "username": "fsyun",
    "submission": "class Solution {\n    int sz = 0;\n    HashMap<Integer, int[]> h = new HashMap<>(); //key is id\n    TreeMap<Integer, Integer> t = new TreeMap<>(); //key is from\n    int save = 0;\n    void print() {\n        for (int id : h.keySet()) {\n            int[] e = h.get(id);\n            System.out.printf(\"id = %d, [%d, %d]\\n\", id, e[0], e[1]);\n        }\n        System.out.printf(\"save = %d\\n\", save);\n    }\n    void add(int a, int b) {\n        Integer from = t.floorKey(a);\n        if (from != null) {\n            int id = t.get(from);\n            int[] e = h.get(id);\n            if (b <= e[1])\n                return;\n        }\n        from = t.ceilingKey(a);\n        while (from != null) {\n            int id = t.get(from);\n            int[] e = h.get(id);\n            if (b < e[1])\n                break;\n            save -= e[1] - e[0] - 1;\n            h.remove(id);\n            t.remove(from);\n            from = t.ceilingKey(a);\n        }\n        h.put(sz, new int[]{a, b});\n        t.put(a, sz++);\n        save += b - a - 1;\n    }\n    public int[] shortestDistanceAfterQueries(int n, int[][] qs) {\n        int m = qs.length;\n        int[] ans = new int[m];\n        for (int i = 0; i < m; i++) {\n            int a = qs[i][0], b = qs[i][1];\n            add(a, b);\n            //print();\n            ans[i] = n - 1 - save;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722741156",
    "subm_id": "1343737998"
}