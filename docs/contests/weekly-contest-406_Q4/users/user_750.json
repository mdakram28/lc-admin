{
    "username": "me_abhishek",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        long totalCost = 0;\n        long hCount = 1;\n        long vCount = 1;\n        int hLen = horizontalCut.length;\n        int vLen = verticalCut.length;\n        int i = hLen - 1;\n        int j = vLen - 1;\n\n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * vCount;\n                hCount++;\n                i--;\n            } else {\n                totalCost += verticalCut[j] * hCount;\n                vCount++;\n                j--;\n            }\n        }\n\n        while (i >= 0) {\n            totalCost += horizontalCut[i] * vCount;\n            i--;\n        }\n\n        while (j >= 0) {\n            totalCost += verticalCut[j] * hCount;\n            j--;\n        }\n\n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720925811",
    "subm_id": "1320266939"
}