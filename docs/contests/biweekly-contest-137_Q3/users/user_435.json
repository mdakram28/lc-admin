{
    "username": "rolevax",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        vector<pair<int, int>> indices;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                indices.push_back({ i, j });\n            }\n        }\n        auto comp = [&](const pair<int, int> &a, const pair<int, int> &b) {\n            return board[a.first][a.second] > board[b.first][b.second];\n        };\n        sort(indices.begin(), indices.end(), comp);\n\n        long long res = LONG_MIN;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                int take3 = board[i][j];\n                auto it2 = find_if(indices.begin(), indices.end(), [&](const auto &pair) {\n                    return pair.first != i && pair.second != j;\n                });\n                if (it2 == indices.end()) {\n                    continue;\n                }\n                int i2 = it2->first;\n                int j2 = it2->second;\n                auto it3 = find_if(it2 + 1, indices.end(), [&](const auto &pair) {\n                    return pair.first != i && pair.first != i2\n                        && pair.second != j && pair.second != j2;\n                });\n                if (it3 == indices.end()) {\n                    continue;\n                }\n                int i3 = it3->first;\n                int j3 = it3->second;\n                long long test = (long long)take3 + board[i2][j2] + board[i3][j3];\n                res = max(res, test);\n\n                it2 = find_if(it2 + 1, indices.end(), [&](const auto &pair) {\n                    return pair.first != i && pair.second != j;\n                });\n                if (it2 == indices.end()) {\n                    continue;\n                }\n                i2 = it2->first;\n                j2 = it2->second;\n                it3 = find_if(it2 + 1, indices.end(), [&](const auto &pair) {\n                    return pair.first != i && pair.first != i2\n                        && pair.second != j && pair.second != j2;\n                });\n                if (it3 == indices.end()) {\n                    continue;\n                }\n                i3 = it3->first;\n                j3 = it3->second;\n                test = (long long)take3 + board[i2][j2] + board[i3][j3];\n                res = max(res, test);\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723910349",
    "subm_id": "1359226909"
}