{
    "username": "Mohd_Aftab11",
    "submission": "#define ll              long long int\n#define mod             1000000007\n#define vi              vector<int>\n#define vvi             vector<vector<int>>\n#define vl              vector<long long>\n#define vvl             vector<vector<long long>>\n#define pb \t\t\t\tpush_back\n#define pii             pair<int,int>\n#define pll             pair<ll,ll>\n#define ump\t\t\t\tunordered_map\n#define pq_max          priority_queue<ll>\n#define pq_min          priority_queue<ll,vl,greater<ll> >\n#define all(n) \t\t\tn.begin(),n.end()\n#define fi \t\t\t\tfirst\n#define se\t\t\t\tsecond\n#define mid(l,r)        (l+(r-l)/2)\n#define inp(t)          int t; cin>>t; while(t--)\n#define ref(i,n) \t\tfor(int i=0;i<(n);i++)\n#define loop(i,a,b) \tfor(int i=(a);i<=(b);i++)\n#define loopr(i,a,b) \tfor(int i=(a);i>=(b);i--)\n\nvoid fio(){\n    ios::sync_with_stdio(false); // Speeds up input/output\n    cin.tie(nullptr); // Unties cin from cout for faster input\n}\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        \n        fio();\n        \n        int n = matrix.size(), m = matrix[0].size();\n        int res = 0;\n        \n        if (n % 2 == 1 && m % 2 == 1) {\n            if (matrix[n / 2][m / 2] == 1) {\n                res += 1;\n            }\n        }\n\n        vector<int> next(3, 0);\n        if (n % 2 == 1) {\n            int y = 0, z = m - 1;\n            while (y < z) {\n                int x = matrix[n / 2][y] + matrix[n / 2][z];\n                next[x] += 1;\n                y += 1;\n                z -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int y = 0, z = n - 1;\n            while (y < z) {\n                int x = matrix[y][m / 2] + matrix[z][m / 2];\n                next[x] += 1;\n                y += 1;\n                z -= 1;\n            }\n        }\n\n        if (next[2] % 2 == 1) {\n            if (next[1] > 0) {\n                res += next[1];\n            } else {\n                res += 2;\n            }\n        } else {\n            res += next[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int y = matrix[i][j];\n                int z = matrix[n - 1 - i][j];\n                int c = matrix[i][m - 1 - j];\n                int d = matrix[n - 1 - i][m - 1 - j];\n\n                int x = y + z + c + d;\n\n                if (x != 0 && x != 4) {\n                    res += min(x, 4 - x);\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722699520",
    "subm_id": "1343214168"
}