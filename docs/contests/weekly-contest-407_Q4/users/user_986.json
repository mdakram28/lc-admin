{
    "username": "GJnas4mKDn",
    "submission": "class Solution {\n    public long minimumOperations(int[] arr, int[] target) {\nlong ans = 0;\n        int[] nums = new int[arr.length];\n        for (int i = 0; i < arr.length; ++i) {\n            nums[i] = target[i] - arr[i];\n        }\n        for (int i = 0; i < nums.length;) {\n            int f = 0;\n\n            while (i < nums.length && nums[i] >= 0) {\n                if (f == 0) {\n                    ans += nums[i];\n                    f = 1;\n                } else {\n                    ans += Math.max(nums[i] - nums[i - 1], 0);\n                }\n                ++i;\n            } \n            \n            f = 0;\n            while (i < nums.length && nums[i] < 0) {\n                if (f == 0) {\n                    ans += Math.abs(nums[i]);\n                    f = 1;\n                } else {\n                    ans += Math.max(Math.abs(nums[i]) - Math.abs(nums[i - 1]), 0);\n                }\n                ++i;\n            }\n        }\n    \n        return ans;\n    }\n}",
    "submit_ts": "1721532504",
    "subm_id": "548392735"
}