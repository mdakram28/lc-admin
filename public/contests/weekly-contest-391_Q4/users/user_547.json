{
    "username": "jithin420",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def calc(arr):\n            # print(arr)\n            psum = [(i, x + y) for i, (x, y) in enumerate(arr)]\n            dsum = [(i, x - y) for i, (x, y) in enumerate(arr)]\n            psum.sort(key=lambda x: x[1])\n            dsum.sort(key=lambda x: x[1])\n            # print(psum, dsum)\n            return psum, dsum\n\n        psum, dsum = calc(points)\n        sumdiff = psum[-1][1] - psum[0][1]\n        diffdiff = dsum[-1][1] - dsum[0][1]\n        # print(sumdiff, diffdiff)\n        if sumdiff > diffdiff:\n            idxs = [psum[-1][0], psum[0][0]]\n        else:\n            idxs = [dsum[-1][0], dsum[0][0]]\n\n        ans = float('inf')\n        for i in idxs:\n            p, d = calc(points[:i] + points[i + 1:])\n            sd = p[-1][1] - p[0][1]\n            dd = d[-1][1] - d[0][1]\n            ans = min(ans, max(sd, dd))\n        return ans"
}