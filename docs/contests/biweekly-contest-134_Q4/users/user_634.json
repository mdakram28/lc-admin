{
    "username": "kushal46",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>>bits(n,vector<int>(32,0));\n        for(int i=0;i<n;i++)\n        {\n            int cur=nums[i];\n            int j=0;\n            while(cur)\n            {\n                bits[i][j++]=cur%2;\n                cur/=2;\n            }\n        }\n        vector<vector<int>>v(32);\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<32;j++)\n            {\n                if(bits[i][j]==0)\n                v[j].push_back(i);\n            }\n        }\n        long long ans=0;\n        for(int i=0;i<n;i++)\n        {\n            int index=n-1;\n            int left=i;\n            for(int j=0;j<32;j++)\n            {\n                auto itr=lower_bound(v[j].begin(), v[j].end(), i);\n                if((1<<j)&k)\n                {\n                    if(itr!=v[j].end())\n                    index=min(index,*itr-1);\n                }\n                else \n                {\n                    if(itr==v[j].end())\n                    left=n;\n                    else left=max(left,*itr);\n                }\n            }\n            \n            ans+=(long long)(max(index-left+1,(int)0));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279180",
    "subm_id": "1311740844"
}