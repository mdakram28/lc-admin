{
    "username": "Sanskar Singh",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& v) {\n        int n = v.size(); \n        int m = v[0].size();  \n        \n        vector<vector<pair<int, int>>> row(n, vector<pair<int, int>>(3, {-2e9, -1}));\n        \n        for (int i = 0; i < n; i++) {\n            vector<pair<int, int>> vp;\n            for (int j = 0; j < m; j++) {\n                vp.push_back({v[i][j], j});\n            }\n            sort(vp.begin(), vp.end()); \n            reverse(vp.begin(), vp.end()); \n            for (int k = 0; k < 3; k++) {  \n                row[i][k] = vp[k];\n            }\n        }\n        \n        long long ans = -1e18; \n        for (int r1 = 0; r1 < n; r1++) {\n            for (int r2 = r1 + 1; r2 < n; r2++) {\n                for (int r3 = r2 + 1; r3 < n; r3++) {\n                    for (int in1 = 0; in1 < 3; in1++) {\n                        for (int in2 = 0; in2 < 3; in2++) {\n                            if (row[r1][in1].second != row[r2][in2].second) {\n                                for (int in3 = 0; in3 < 3; in3++) {\n                                    if (row[r1][in1].second == row[r3][in3].second || row[r2][in2].second == row[r3][in3].second) continue;\n                                    auto temp = (long long)row[r1][in1].first + row[r2][in2].first + row[r3][in3].first;\n                                    if(temp > ans) {\n                                        ans = temp;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723908801",
    "subm_id": "1359167692"
}