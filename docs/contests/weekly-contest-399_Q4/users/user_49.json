{
    "username": "MinhBaoSoCool",
    "submission": "class ST {\npublic:\n    const static long long INF=(long long)5e10;\n    long long M[200020][2][2];\n    int maxn=-1;\n    void merge(int ind){\n        for(int i=0;i<2;++i){\n            for(int j=0;j<2;++j){\n                M[ind][i][j]=-INF;\n                for(int i2=0;i2<2;++i2){\n                    for(int j2=0;j2<2;++j2){\n                        if(i2==1 && j2==1) continue;\n                        if(M[ind*2+1][i][i2]==-INF || M[ind*2+2][j2][j]==-INF) continue;\n                        M[ind][i][j]=max(M[ind][i][j], M[ind*2+1][i][i2]+M[ind*2+2][j2][j]);\n                    }\n                }\n            }\n        }\n    }\n    void initST(int ind, int l, int r, vector<int>& nums){\n        if(l==r){\n            M[ind][0][0]=0ll;\n            M[ind][1][1]=(long long)nums[l];\n            M[ind][0][1]=M[ind][1][0]=-INF;\n            return;\n        }\n        int m=(l+r)/2;\n        initST(ind*2+1, l, m, nums);\n        initST(ind*2+2, m+1, r, nums);\n        merge(ind);\n    }\n    void initST(vector<int> &nums){\n        maxn=nums.size()-1;\n        initST(0, 0, maxn, nums);\n    }\n    void update(int ind, int l, int r, int pos, int x){\n        if(l>pos || r<pos) return;\n        if(l==r){\n            M[ind][0][0]=0ll;\n            M[ind][1][1]=(long long)x;\n            M[ind][0][1]=M[ind][1][0]=-INF;\n            return;\n        }\n        int m=(l+r)/2;\n        update(ind*2+1, l, m, pos, x);\n        update(ind*2+2, m+1, r, pos, x);\n        merge(ind);\n    }\n    void update(int pos, int x){\n        update(0, 0, maxn, pos, x);\n    }\n    long long get(){\n        long long ans=-INF;\n        for(int i=0;i<2;++i){\n            for(int j=0;j<2;++j){\n                ans=max(ans, M[0][i][j]);\n            }\n        }\n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        ST tree;\n        tree.initST(nums);\n        long long ans=0;\n        for(vector<int> query: queries){\n            tree.update(query[0], query[1]);\n            long long tmp=tree.get();\n            ans=(ans+tmp)%(long long)(1e9+7);\n        }\n        return (int)ans;\n    }\n};\n\n",
    "submit_ts": 1716693334.0
}