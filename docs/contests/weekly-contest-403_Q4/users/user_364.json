{
    "username": "amitbansal13",
    "submission": "class Solution {\npublic:\n    int calc(vector<vector<int>>& grid, int top, int left, int bottom, int right) {\n        bool anyOne = false;\n        int t = -1, b = -1, l = -1, r = -1;\n        for(int i=top;i<=bottom;i++) {\n            for(int j=left;j<=right;j++) {\n                if(grid[i][j] == 1) {\n                    anyOne = true;\n                    if(t == -1) t = i;\n                    b = i;\n                    if(l == -1) l = j;\n                    l = min(l, j);\n                    if(r == -1) r = j;\n                    r = max(r, j);\n                }\n            }\n        }\n        if(!anyOne) return 0;\n        \n        return (b - t + 1)*(r-l+1);\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int ans = INT_MAX;\n        \n        for(int i = 0; i < grid.size();i++) {\n            for(int j =0;j<grid[0].size();j++) {\n                int a = calc(grid, 0, 0, i, j);\n                int b = 0;\n                if(a!= 0) b = calc(grid, i+1, 0, grid.size()-1, j);\n                int c = 0;\n                if(b!= 0) c = calc(grid, 0, j+1, grid.size()-1, grid[0].size()-1);\n                int d = 0;\n                if(a!=0) d = calc(grid, i+1, 0, grid.size()-1, grid[0].size()-1);\n                int e = 0;\n                if(d != 0) e = calc(grid, 0, j+1, i, grid[0].size()-1);\n                \n                \n                if(a!= 0 && j == grid[0].size()-1) {\n                    for(int k = 0;k < grid[0].size();k++) {\n                        int b = calc(grid, i+1, 0, grid.size()-1, k);\n                        int c = calc(grid, i+1, k+1, grid.size()-1, grid[0].size()-1);\n\n                        if(b!= 0 && c != 0) {\n                            ans = min(ans, a+b+c);\n                        }\n                    }\n                }\n        \n                if(a != 0 && i == grid.size() - 1) {\n                    for(int k = 0;k < grid.size();k++) {\n                        int b = calc(grid, 0, j+1, k , grid[0].size()-1);\n                        int c = calc(grid, k+1, j+1, grid.size()-1, grid[0].size()-1);\n\n                        if(b!= 0 && c != 0) {\n                            ans = min(ans, a+b+c);\n                        }\n                    }\n                }\n                \n                \n                if(a!=0 && b!= 0 && c!=0) {\n                    ans = min(ans, a+b+c);\n                }\n                if(a!=0 && d != 0 && e != 0) {\n                    ans = min(ans, a+d+e);\n                }\n            }\n        }\n        \n        \n        for(int i = 0;i<grid.size()-2;i++) {\n            int a = calc(grid, 0, 0, i, grid[0].size()-1);\n            if(a!=0)\n            for(int j = i+1;j<grid.size()-1;j++) {\n                int b = calc(grid, i+1, 0, j, grid[0].size()-1);\n                if(b != 0) {\n                    int c = calc(grid, j+1, 0, grid.size()-1, grid[0].size()-1);\n                    if(c != 0) {\n                        ans = min(ans, a+b+c);\n                    }\n                }\n            }\n        }\n        \n        for(int j = 0;j<grid[0].size()-2;j++) {\n            int a = calc(grid, 0, 0, grid.size()-1, j);\n            if(a!= 0) {\n                for(int k = j+1;k < grid[0].size()-1;k++) {\n                    int b = calc(grid, 0, j+1, grid.size()-1, k);\n                    if(b != 0) {\n                        int c = calc(grid, 0, k+1, grid.size()-1, grid[0].size()-1);\n                        if(c!= 0) {\n                            ans = min(ans, a+b+c);\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1719113757.0
}