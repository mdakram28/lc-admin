{
    "username": "_global",
    "submission": "class Solution {\n    public int[] getGraph(int edges[][]){\n        int n = edges.length+1;\n        ArrayList<Integer> graph[]=new ArrayList[n];\n        for(int i=0;i<n;i++) graph[i]=new ArrayList<>();\n        for(int edge[] : edges){\n            int u=edge[0];\n            int v=edge[1];\n            graph[u].add(v);\n            graph[v].add(u);\n        }\n        int dist[]=new int[n];\n        dfs1(graph,0,-1,dist);\n        int res[]=new int[n];\n        dfs2(graph,0,-1,dist,res,0);\n        return res;\n    }\n    public void dfs1(ArrayList<Integer> graph[],int u,int pt,int dist[]){\n        \n        for(int v : graph[u]){\n            if(v==pt) continue;\n            dfs1(graph,v,u,dist);\n            dist[u]=Math.max(dist[u],dist[v]+1);\n        }\n    }\n    public void dfs2(ArrayList<Integer> graph[],int u,int pt,int dist[],int res[],int pt_value){\n        res[u]=Math.max(pt_value,dist[u]);\n        int m=graph[u].size();\n        if(pt!=-1) m--;\n        int left[]=new int[m];\n        int right[]=new int[m];\n        int t=0;\n        for(int v : graph[u]){\n            if(v==pt) continue;\n            left[t]=right[t]=dist[v]+1;\n            t++;\n        }\n        for(int j=1;j<m;j++) left[j]=Math.max(left[j],left[j-1]);\n        for(int j=m-2;j>=0;j--) right[j]=Math.max(right[j+1],right[j]);\n        t = 0;\n        for(int v : graph[u]){\n            if(v==pt) continue;\n            int npt_value = pt_value +1;\n            int l = (t==0 ? 0 : left[t-1]+1);\n            int r = (t==m-1 ? 0 : right[t+1]+1);\n            npt_value = Math.max(npt_value ,Math.max(l,r));\n            dfs2(graph,v,u,dist,res,npt_value);\n            t++;\n        }\n        \n    }\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int n=edges1.length;\n        int m=edges2.length+1;\n        int a[]=getGraph(edges1);\n        int b[]=getGraph(edges2);\n        int min = b[0];\n        int res = b[0];\n        for(int val : b) {\n            min = Math.min(min,val);\n            res = Math.max(res,val);\n        }\n        int res2=Integer.MAX_VALUE;\n        for(int val : a) {\n            res = Math.max(res,val);\n            res2 = Math.min(res2,min + val + 1);\n        }\n        return Math.max(res,res2);\n        \n    }\n}",
    "submit_ts": "1719718462",
    "subm_id": "1304417832"
}