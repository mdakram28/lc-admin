{
    "username": "shresth101",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        \n        multiset<pair<long long,int>> s,d;\n        \n        for(int i=0;i<n;i++){\n            s.insert({points[i][0]+points[i][1],i});\n            d.insert({points[i][0]-points[i][1],i});\n        }\n        \n//         for(auto it:s){\n//             cout << it.first << \" \" << it.second << endl;\n//         }\n        \n//         cout << endl;\n        \n//         for(auto it:d){\n//             cout << it.first << \" \" << it.second << endl;\n//         }\n        \n//         cout << endl;\n        \n        // cout << \" \" << s.begin()->first << \" \" << s.rbegin()->first;\n        \n        \n        int ans=1e9;\n        for(int i=0;i<n;i++){\n            long long sum=points[i][0]+points[i][1];\n            int diff=points[i][0]-points[i][1];\n            \n            s.erase({sum,i});\n            d.erase({diff,i});\n            \n            // cout <<i<<\" index pe \" << (s.rbegin()->first - s.begin()->first) << \" \" << (d.rbegin()->first - d.begin()->first) << endl;\n            \n            int x=max({s.rbegin()->first - s.begin()->first, abs((d.rbegin()->first) - (d.begin()->first))});\n            \n            ans=min(ans,x);\n            \n            s.insert({sum,i});\n            d.insert({diff,i});\n        }\n        \n        // [[3,2],[3,9],[7,10],[4,4],[8,10],[2,7]]\n//         ans = 10\n\n        \n        return ans;\n    }\n};"
}