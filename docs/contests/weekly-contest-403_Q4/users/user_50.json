{
    "username": "nobodytk11",
    "submission": "class Solution {\npublic:\n    int minimumArea(vector<vector<int>>& grid, int min_col, int max_col) {\n        int n = grid.size();\n        int min_x = 1000, max_x = 0, min_y = 1000, max_y = 0;  \n        for (int i = 0; i < n; i++) {\n            for (int j = min_col; j <= max_col; j++) {\n                if (grid[i][j] == 1) {\n                    min_x = min(min_x, i);  \n                    max_x = max(max_x, i);  \n                    min_y = min(min_y, j); \n                    max_y = max(max_y, j); \n                }\n            }\n        }\n        return (max_x - min_x + 1) * (max_y - min_y + 1); \n    }\n    \n    int minimumArea2(vector<vector<int>>& grid, int min_row, int max_row) {\n        int m = grid[0].size();\n        int min_x = 1000, max_x = 0, min_y = 1000, max_y = 0;  \n        for (int i = min_row; i <= max_row; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == 1) {\n                    min_x = min(min_x, i);  \n                    max_x = max(max_x, i);  \n                    min_y = min(min_y, j); \n                    max_y = max(max_y, j); \n                }\n            }\n        }\n        return (max_x - min_x + 1) * (max_y - min_y + 1); \n    }\n    \n     int minimumArea3(vector<vector<int>>& grid, int min_row, int max_row, int min_col, int max_col) {\n        int n = grid.size(), m = grid[0].size();\n        int min_x = 1000, max_x = 0, min_y = 1000, max_y = 0;  \n        for (int i = min_row; i <= max_row; i++) {\n            for (int j = min_col; j <= max_col; j++) {\n                if (grid[i][j] == 1) {\n                    min_x = min(min_x, i);  \n                    max_x = max(max_x, i);  \n                    min_y = min(min_y, j); \n                    max_y = max(max_y, j); \n                }\n            }\n        }\n        return (max_x - min_x + 1) * (max_y - min_y + 1); \n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 1e9; \n        for (int cut1 = 0; cut1 + 1 < m; cut1++) {\n            for (int cut2 = cut1 + 1; cut2 + 1 < m; cut2++) {\n                int a1 = minimumArea(grid, 0, cut1); \n                int a2 = minimumArea(grid, cut1 + 1, cut2); \n                int a3 = minimumArea(grid, cut2 + 1, m - 1); \n                ans = min(ans, a1 + a2 + a3); \n            }\n            \n            for (int cut2 = 0; cut2 + 1 < n; cut2++) {\n                int a1 = minimumArea3(grid, 0, cut2, 0, cut1); \n                int a2 = minimumArea3(grid, cut2 + 1, n - 1, 0, cut1); \n                int a3 = minimumArea(grid, cut1 + 1, m - 1); \n                ans = min(ans, a1 + a2 + a3); \n                \n                a1 = minimumArea(grid, 0, cut1);\n                a2 = minimumArea3(grid, 0, cut2, cut1 + 1, m - 1); \n                a3 = minimumArea3(grid, cut2 + 1, n - 1, cut1 + 1, m - 1);   \n                ans = min(ans, a1 + a2 + a3); \n            }\n        }\n        \n        for (int cut1 = 0; cut1 + 1 < n; cut1++) {\n            for (int cut2 = cut1 + 1; cut2 + 1 < n; cut2++) {\n                int a1 = minimumArea2(grid, 0, cut1); \n                int a2 = minimumArea2(grid, cut1 + 1, cut2); \n                int a3 = minimumArea2(grid, cut2 + 1, n - 1); \n                ans = min(ans, a1 + a2 + a3); \n            }\n            \n            for (int cut2 = 0; cut2 + 1 < m; cut2++) {\n                int a1 = minimumArea3(grid, 0, cut1, 0, cut2);  \n                int a2 = minimumArea3(grid, 0, cut1, cut2 + 1, m - 1); \n                int a3 = minimumArea2(grid, cut1 + 1, n - 1); \n                ans = min(ans, a1 + a2 + a3);   \n                \n                a1 = minimumArea2(grid, 0, cut1);   \n                a2 = minimumArea3(grid, cut1 + 1, n - 1, 0, cut2);  \n                a3 = minimumArea3(grid, cut1 + 1, n - 1, cut2 + 1, m - 1); \n                ans = min(ans, a1 + a2 + a3);\n            }\n        }\n        \n        return ans; \n    }\n};",
    "submit_ts": "1719111910",
    "subm_id": "1297286052"
}