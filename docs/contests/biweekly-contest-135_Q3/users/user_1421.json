{
    "username": "shen-jian-666",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int[] a = new int[k + 2];\n        int n = nums.length;\n        int m = nums.length / 2;\n        int max = 0;\n        int now = 0;\n        for (int i = 0; i < m; i++) {\n            max = Math.max(Math.max(nums[i], nums[n - 1 - i]), k - Math.min(nums[i], nums[n - 1 - i]));\n            a[0]++;\n            a[max + 1]--;\n            a[max + 1] += 2;\n            a[k + 1] -= 2;\n            now = Math.max(nums[i], nums[n - 1 - i]) - Math.min(nums[i], nums[n - 1 - i]);\n            a[now]--;\n            a[now + 1]++;\n        }\n        for (int i = 1; i <= k; i++) {\n            a[i] = a[i] + a[i - 1];\n        }\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= k; i++) {\n            if (a[i] < min) {\n                min = a[i];\n            }\n        }\n        return min;\n    }\n}",
    "submit_ts": "1721489771",
    "subm_id": "548320204"
}