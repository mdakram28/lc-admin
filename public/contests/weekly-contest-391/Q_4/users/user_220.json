{
    "username": "petabyte",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        return distances(points)\n\n        \n        \nfrom sortedcontainers import SortedList\n\ndef distances(points):\n    sums = SortedList()\n    diffs = SortedList()\n    \n    for i in range(len(points)):\n        sums.add(points[i][0] + points[i][1])\n        diffs.add(points[i][0] - points[i][1])\n    ans = math.inf\n    for i in range(len(points)):\n        sum = points[i][0] + points[i][1]\n        diff = points[i][0] - points[i][1]\n        \n        sums.discard(sum)\n        diffs.discard(diff)\n        ans = min(ans, max(sums[-1] - sums[0], diffs[-1] - diffs[0]))\n        sums.add(sum)\n        diffs.add(diff)\n    return ans\n        \n        \n        "
}