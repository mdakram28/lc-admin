{
    "username": "linn-9k",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        def cal(grid):\n            m,n = len(grid),len(grid[0])\n            dp = [10**18] * 4\n            one = sum(grid[i][j] for i in range(m) for j in range(n))\n            dp[one % 4] = 0\n            for i in range((m + 1) // 2):\n                for j in range((n + 1) // 2):\n                    ndp = [10**18] * 4\n                    if i == m - i - 1 and j == n - j - 1:\n                        ndp = dp[:]\n                        # \u64cd\u4f5c1\u6b21\n                        f = grid[i][j] if grid[i][j] else -1\n                        for k in range(4):\n                            ndp[(k - f) % 4] = min(ndp[(k - f) % 4],dp[k] + 1)\n                    elif i == m - i - 1:\n                        c = grid[i][j] != grid[i][n - 1 - j]\n                        for k in range(4):\n                            ndp[(k - c) % 4] = min(ndp[(k - c) % 4],dp[k] + c)\n                            ndp[(k + c) % 4] = min(ndp[(k + c) % 4],dp[k] + c)\n                            ndp[(k - c - 2) % 4] = min(ndp[(k - c - 2) % 4], dp[k] + c + 2)\n                            ndp[(k + c + 2) % 4] = min(ndp[(k + c + 2) % 4], dp[k] + c + 2)\n                    elif j == n - j - 1:\n                        c = grid[i][j] != grid[m - 1 - i][j]\n                        for k in range(4):\n                            ndp[(k - c) % 4] = min(ndp[(k - c) % 4],dp[k] + c)\n                            ndp[(k + c) % 4] = min(ndp[(k + c) % 4],dp[k] + c)\n                            ndp[(k - c - 2) % 4] = min(ndp[(k - c - 2) % 4], dp[k] + c + 2)\n                            ndp[(k + c + 2) % 4] = min(ndp[(k + c + 2) % 4], dp[k] + c + 2)\n                    else:\n                        c = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                        for k in range(4):\n                            ndp[(k - c) % 4] = min(ndp[(k - c) % 4],dp[k] + c)\n                            ndp[(k + 4 - c) % 4] = min(ndp[(k + 4 - c) % 4],dp[k] + 4 - c)\n                    dp = ndp\n            return dp[0]\n        return cal(grid)",
    "submit_ts": "1722697646",
    "subm_id": "552267132"
}