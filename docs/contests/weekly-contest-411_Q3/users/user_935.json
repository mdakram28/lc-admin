{
    "username": "linknick",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        \n        if(k==1 or k==3 or k==9):\n            return '9'*n\n        if(k==2):\n            return  '8'+('9'*(n-2))+ ('8' if n>=2 else '')\n        if(k==4):\n            if(n<=4):\n                return '8'*n\n            else:\n                return \"88\"+('9'*(n-4))+'88'\n        if(k==5):\n            return  '5'+('9'*(n-2))+ ('5' if n>=2 else '')\n        if(k==6):#6,66,888,8778,89898,897798,8998998,89977998,8999989998\n            if(n<=2):return '6'*n\n            s = ['9']*n\n            s[0]='8'\n            s[n-1]='8'\n            if(n%2==1):\n                s[n//2]='8'\n            else:\n                s[n//2]='7'\n                s[n//2 -1 ]='7'\n            return ''.join(s)\n        #7,77,5,77,7,9,4,44,6,44,4,9,7,77,5,77,7,9,4,44\n        #7,77,959,9779,99799,999999,9994999,99944999,999969999,9999449999,99999499999,999999999999,9999997999999,99999977999999\n        if(k==7):\n            if(n<=2):return '7'*n\n            else:\n                cycle = [\"99\",\"7\",\"77\",\"5\",\"77\",\"7\",\"99\",\"4\",\"44\",\"6\",\"44\",\"4\"]\n                mid = cycle[n%len(cycle)]\n                front = (n-len(mid))//2\n                res = '9'*front + mid + '9'*front\n                return res\n        if(k==8):\n            if(n<=6):\n                return '8'*n\n            else:\n                return \"888\"+('9'*(n-6))+'888'\n        res = helper(n,\"\",k,0)\n        return str(res)",
    "submit_ts": "1723953392",
    "subm_id": "1359820049"
}