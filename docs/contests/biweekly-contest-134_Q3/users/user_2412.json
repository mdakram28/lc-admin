{
    "username": "secret_154",
    "submission": "class Solution {\npublic:\n   int solve(vector<int>& colors, int k) {\n    int n = colors.size();\n    int ans = 0;\n    int sameCount = 0;\n\n \n    for (int i = 0; i < k - 1; ++i) {\n        if (colors[i] == colors[(i + 1) % n]) {\n            ++sameCount;\n        }\n    }\n\n    for (int i = 0; i < n; ++i) {\n          if (sameCount == 0) {\n            ++ans;\n        }\n        int x = (i + k - 1) % n;\n        if (colors[x] == colors[(x + 1) % n]) {\n            ++sameCount;\n        }\n      \n        if (colors[i] == colors[(i + 1) % n]) {\n            --sameCount;\n        }\n    }\n\n    return ans;\n}\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n\n         int n = c.size();\n    int ans = 0;\n    int p = 0;\n\n \n    for (int i = 0; i < k - 1; ++i) {\n        if (c[i] == c[(i + 1) % n]) {\n            ++p;\n        }\n    }\n\n    for (int i = 0; i < n; ++i) {\n          if (p == 0) {\n            ++ans;\n        }\n        int x = (i + k - 1) % n;\n        if (c[x] == c[(x + 1) % n]) {\n            ++p;\n        }\n      \n        if (c[i] == c[(i + 1) % n]) {\n            --p;\n        }\n    }\n\n    return ans;\n    }\n\n};",
    "submit_ts": "1720281338",
    "subm_id": "1311821503"
}