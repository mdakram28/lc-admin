{
    "username": "contest_only_1",
    "submission": "class Solution {\npublic:\n    vector<pair<int,int>> dp1;\n    vector<pair<int,int>> dp3;\n    vector<int> dp2;\n    int prebuild(int node,int parent,vector<int> *list){\n        int mx1=0,mx2=0;\n        int node1=-1,node2=-1;\n        for(int i:list[node]){\n            if(i==parent) continue;\n            int temp=prebuild(i,node,list)+1;\n            if(i%2==0){\n                temp++;\n            }\n            if(temp>mx1){\n                node2=node1;\n                node1=i;\n                mx2=mx1;\n                mx1=temp;\n            }else if(temp>mx2){\n                node2=i;\n                mx2=temp;\n            }\n        }\n        dp1[node]=make_pair(mx1,mx2);\n        dp3[node]=make_pair(node1,node2);\n        return mx1;\n    }\n    void compute(int node,int parent,int gift,vector<int> *list){\n        // cout<<node<<\" \"<<gift<<\" \"<<dp1[node].first<<endl;\n        dp2[node]=max(dp1[node].first,gift);\n        for(int i:list[node]){\n            if(i==parent) continue;\n            int temp=gift;\n            if(i==dp3[node].first){\n                temp=max(gift,dp1[node].second)+1;\n            }else{\n                temp=max(gift,dp1[node].first)+1;\n            }\n            if(node%2==0) temp++;\n            compute(i,node,temp,list);\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        vector<int> list[n];\n        for(int i=0;i<n-1;i++){\n            list[edges[i][0]].push_back(edges[i][1]);\n            list[edges[i][1]].push_back(edges[i][0]);\n        }\n        dp1.assign(n,{});\n        dp2.assign(n,0);\n        dp3.assign(n,{});\n        prebuild(0,-1,list);\n        compute(0,-1,0,list);\n        return dp2;\n    }\n};",
    "submit_ts": "1722698166",
    "subm_id": "1343171858"
}