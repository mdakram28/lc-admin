{
    "username": "snamy520",
    "submission": "impl Solution {\n        pub fn minimum_difference(nums: Vec<i32>, k: i32) -> i32 {\n            let n = nums.len();\n            const UB: usize = 30;\n            let cnt = {\n                let mut cnt = vec![vec![0; n + 1]; UB];\n                for b in 0..UB {\n                    for (i, &d) in nums.iter().enumerate() {\n                        let c = if (d & (1 << b)) > 0 { 1 } else { 0 };\n                        cnt[b][i + 1] = cnt[b][i] + c;\n                    }\n                }\n                cnt\n            };\n            let get = |i: usize, j: usize| {\n                let w = j - i + 1;\n                let mut and = 0;\n                for b in 0..UB {\n                    if cnt[b][j + 1] == cnt[b][i] + w {\n                        and |= 1 << b;\n                    }\n                }\n                and\n            };\n            let mut res = i32::MAX;\n            for i in 0..n {\n                let (mut s, mut t) = (i as isize - 1, n as isize);\n                while s + 1 < t {\n                    let d = (s + t) / 2;\n                    if get(i, d as usize) > k {\n                        s = d;\n                    } else {\n                        t = d;\n                    }\n                }\n                if i as isize <= s {\n                    res = res.min(k.abs_diff(get(i, s as usize)) as i32);\n                }\n                if t < n as isize {\n                    res = res.min(k.abs_diff(get(i, t as usize)) as i32);\n                }\n                // print!(\"[{i}]\");\n                // for j in i..n {\n                //     print!(\" {j} ({})\", get(i, j));\n                // }\n                // println!(\" => {s} {t} => {res}\");\n            }\n            res\n        }\n}",
    "submit_ts": "1717298984",
    "subm_id": "1274798000"
}