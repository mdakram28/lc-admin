{
    "username": "lew_2018",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& t) {\n        ll ans = 0, neg = 0, pos = 0;\n        int n = nums.size();\n        vector<int> d1(n + 1), d2(n + 1), d3(n + 1);\n        for (int i = 1; i < n; i++) {\n            d1[i] = nums[i] - nums[i - 1];\n            d2[i] = t[i] - t[i - 1];\n            d3[i] = d1[i] - d2[i];\n            if (d3[i] > 0) pos += (ll)d3[i];\n            else neg -= (ll)d3[i];\n        }\n        d3[0] = nums[0] - t[0];\n        if (d3[0] > 0) pos += (ll)d3[0];\n        else neg -= (ll)d3[0];\n        cout << pos << \" \" << neg << endl;\n        return max(neg, pos);\n    }\n};",
    "submit_ts": "1721531599",
    "subm_id": "548387300"
}