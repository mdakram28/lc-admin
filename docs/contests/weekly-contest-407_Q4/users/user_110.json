{
    "username": "lucky_ducky1",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long count = 0;\n        vector<int> diff(nums.size());\n        for (int i = 0; i < nums.size(); i++) {\n            int x = target[i] - nums[i];\n            diff[i] = x;\n        }\n        int index = 0;\n        while (index < diff.size()) {\n            if (diff[index] > 0) {\n                int end = index;\n                int m = diff[index];\n                while (end < diff.size()) {\n                    if (diff[end] <= 0) {break;}\n                    m = min(m, diff[end]);\n                    end++;\n                }\n                count += abs(m);\n                for (int i = index; i < end; i++) {\n                    diff[i] -= m;\n                }\n            } else if (diff[index] < 0) {\n                int end = index;\n                int m = diff[index];\n                while (end < diff.size()) {\n                    if (diff[end] >= 0) {break;}\n                    m = max(m, diff[end]);\n                    end++;\n                }\n                count += abs(m);\n                for (int i = index; i < end; i++) {\n                    diff[i] -= m;\n                }\n            } else {index++;}\n        }\n        return count;\n    }\n};",
    "submit_ts": "1721530410",
    "subm_id": "1327932584"
}