{
    "username": "codergiri",
    "submission": "class Solution {\n    vector<int> getBits(int n){\n        vector<int> ans(32, 0);\n        int i = 0;\n        while(n > 0){\n            ans[i] = (n&1);\n            n>>=1;\n            i++;\n        }\n        return ans;\n    }\n    int getValue(vector<int> &cnt, int dist){\n        int ans = 0;\n        for(int i=0;i<32;i++){\n            if(cnt[i]==dist) ans += (1<<i);\n        }\n        return ans;\n    }\n    void insert(vector<int> &cnt, int val){\n        vector<int> bits = getBits(val);\n        for(int i=0;i<32;i++){\n            cnt[i] += bits[i];\n        }\n    }\n    void remove(vector<int> &cnt, int val){\n        vector<int> bits = getBits(val);\n        for(int i=0;i<32;i++){\n            cnt[i] -= bits[i];\n        }\n    }\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int l = 0, r = 0, n = nums.size();\n        int ans = INT_MAX;\n        vector<int> cnt(32,0);\n        insert(cnt, nums[0]);\n        while(l<=r && r < n){\n            int temp = getValue(cnt, r-l+1);\n            // for(auto xx: cnt) cout<<xx<<\" \";cout<<\"\\n\";\n            // cout<<\"i = \"<<l<<\" j = \"<<r<<\"\\n\";\n            // cout<<ans <<\" k = \"<<k<<\" temp = \"<<temp<<\"\\n\";\n            ans = min(ans, abs(k - temp));\n            if(temp > k){\n                r++;\n                if(r<n) insert(cnt, nums[r]);\n            }else if(temp == k){\n                return 0;\n            }\n            else{\n                remove(cnt, nums[l]);\n                l++;\n                if(l>r && l<n){\n                    insert(cnt, nums[l]);\n                    r = l;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298730.0
}