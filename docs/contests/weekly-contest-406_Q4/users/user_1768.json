{
    "username": "SaHiL7264",
    "submission": "class Solution {\npublic:\n     long long minCost(int m, int n, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n    vector<pair<int, char>> c;\n    for (int i = 0; i < horizontalCuts.size(); ++i) {\n        c.push_back({horizontalCuts[i], 'H'});\n    }\n    for (int j = 0; j < verticalCuts.size(); ++j) {\n        c.push_back({verticalCuts[j], 'V'});\n    }\n    sort(c.rbegin(), c.rend());\n    int hP = 1;\n    int vP = 1;\n\n    long long totalCost = 0;\n    for (auto it : c) {\n        if (it.second == 'H') {\n            totalCost += (long long)(it.first) * vP*1LL;\n            hP++;\n        } else { \n            totalCost += (long long)(it.first) * hP*1LL;\n            vP++;\n        }\n    }\n         return totalCost;\n     }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        return minCost(m,n,horizontalCut,verticalCut);\n    }\n};",
    "submit_ts": "1720926147",
    "subm_id": "1320277372"
}