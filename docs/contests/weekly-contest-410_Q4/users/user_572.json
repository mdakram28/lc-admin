{
    "username": "coderchamp07",
    "submission": "class Solution {\npublic:\n    const int mod = 1e9 + 7;\n    void add(vector<long long>& BIT, int idx, int val) {\n        for(int i = idx + 1; i < BIT.size(); i += (i & -i))\n            BIT[i] += val;\n    }\n    int sum(vector<long long>& BIT, int idx) {\n        int out = 0;\n        for(int i = idx + 1; i > 0; i -= (i & -i))\n            out = (out + BIT[i]) % mod;\n        return out;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        const int mod = 1e9 + 7;\n        int n = nums.size();\n        \n        vector<long long> BIT(1010, 0);\n        for(int a = 0; a <= nums[0]; a++)\n            add(BIT, a, 1);\n        for(int i = 1; i < n; i++) {\n            vector<long long> newBIT(1010, 0);\n            for(int a = 0; a <= nums[i]; a++) {\n                int b = nums[i] - a;\n                // for prev\n                // cout << a << \" \" << nums[i - 1] - b << \" \";\n                int v = min(nums[i - 1], min(nums[i - 1] - b, a));\n                // cout << v << \" \" << sum(BIT, v) << \"\\n\";\n                if(v < 0)\n                    continue;\n                add(newBIT, a, sum(BIT, v));\n            }\n            BIT = newBIT;\n            // cout << \"\\n\";\n        }\n        return sum(BIT, 1000);\n    }\n};",
    "submit_ts": "1723348072",
    "subm_id": "1351611044"
}