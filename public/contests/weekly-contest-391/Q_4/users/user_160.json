{
    "username": "el_magnito",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int N = points.size();\n        \n        vector<int> sum(N), diff(N);\n        \n        multiset<int> ssum, ddiff;\n        \n        for(int i = 0; i < N; i++){\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n            ssum.insert(sum[i]);\n            ddiff.insert(diff[i]);\n        }\n        \n        int ans = INT_MAX;\n        \n        for(int i = 0; i < N; i++){\n            \n            ssum.erase(ssum.find(sum[i]));\n            ddiff.erase(ddiff.find(diff[i]));\n            \n            int local = max(*(--ssum.end()) - *ssum.begin(), *(--ddiff.end()) - *ddiff.begin());\n            ans = min(ans, local);\n            ssum.insert(sum[i]);\n            ddiff.insert(diff[i]);\n        }\n        return ans;\n    }\n};"
}