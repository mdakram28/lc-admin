{
    "username": "singlapriyanka013",
    "submission": "class Solution {\n    class TrieNode {\n        public int cost; \n        public Map<Character, TrieNode> childrenMap = new HashMap<>();\n    }\n    TrieNode root=new TrieNode();\n    public void insert(String word,int cost) {\n        TrieNode cur = root;\n        for(int i = 0; i < word.length(); i++){\n            char c = word.charAt(i);\n            if(cur.childrenMap.get(c) == null){\n                // insert a new node if the path does not exist\n                cur.childrenMap.put(c, new TrieNode());\n            }\n            cur = cur.childrenMap.get(c); \n        }\n        if(cur.cost!=0){\n            cost=Math.min(cur.cost,cost);\n        }\n        cur.cost=cost;\n    }\n    \n    /** Returns if the word is in the trie. */\n    \n    \n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n=words.length;\n        int m=target.length();\n        int res=0;\n        for(int i=0;i<n;i++){\n            insert(words[i],costs[i]);\n        }\n        int[] cost=new int[m];\n        Arrays.fill(cost,Integer.MAX_VALUE);\n        for(int j=0;j<m;j++){\n            int tc=0;\n            if(j!=0){\n                tc=cost[j-1];\n                if(tc==Integer.MAX_VALUE){\n                    continue;\n                }\n            }\n            TrieNode cur=root;\n            for(int i=j;i<m;i++){\n                char c = target.charAt(i);\n                \n                if(cur.childrenMap.get(c) == null) {\n                    break;\n                }\n                \n                cur = cur.childrenMap.get(c);\n                if(cur.cost!=0){\n                    cost[i]=Math.min(cost[i],tc+cur.cost);\n                }\n            }\n        }   \n        if(cost[m-1]==Integer.MAX_VALUE){\n            return -1;\n        }\n        return cost[m-1];\n    }\n}",
    "submit_ts": "1720324349",
    "subm_id": "1312397363"
}