{
    "username": "bakhtabar",
    "submission": "class Solution {\n    vector<int> dp1, dp2;\n    vector<int> from;\n    vector<int> price;\n\n    void dfs1(vector<int> adj[], int u, int p) {\n        dp1[u] = price[u];\n        for (int v : adj[u])\n            if (v != p) {\n                dfs1(adj, v, u);\n                if (dp1[v] + price[u] >= dp1[u]) {\n                    dp2[u] = dp1[u];\n                    dp1[u] = dp1[v] + price[u];\n                    from[u] = v;\n                } else if (dp1[v] + price[u] > dp2[u]) {\n                    dp2[u] = price[u] + dp1[v];\n                }\n            }\n    }\n\n    void dfs2(vector<int> adj[], int u, int p) {\n        if (p != -1) {\n            if (from[p] != u) {\n                if (dp1[p] + price[u] >= dp1[u]) {\n                    dp2[u] = dp1[u];\n                    dp1[u] = dp1[p] + price[u];\n                    from[u] = p;\n                } else if (dp1[p] + price[u] > dp2[u]) {\n                    dp2[u] = dp1[p] + price[u];\n                }\n            } else {\n                if (dp2[p] + price[u] >= dp1[u]) {\n                    dp2[u] = dp1[u];\n                    dp1[u] = dp2[p] + price[u];\n                    from[u] = p;\n                } else if (dp2[p] + price[u] > dp2[u]) {\n                    dp2[u] = dp2[p] + price[u];\n                }\n            }\n        }\n\n        for (int v : adj[u])\n            if (v != p)\n                dfs2(adj, v, u);\n    }\n    vector<int> maxOutput(int n, vector<vector<int>>& edges) {\n\n        vector<int> adj[n];\n        for (auto& e : edges) {\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n\n        dp1.resize(n), dp2.resize(n), from.resize(n, -1);\n        for (int i = 0; i < n; i++)\n            if (i & 1)\n                price.push_back(1);\n            else\n                price.push_back(2);\n\n        dfs1(adj, 0, -1);\n        dfs2(adj, 0, -1);\n\n        for(int i = 0; i < n; i++)\n            dp1[i] -= price[i];\n        return dp1;\n    }\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        return maxOutput(n, edges);\n    }\n};",
    "submit_ts": "1722697219",
    "subm_id": "1343138560"
}