{
    "username": "leftshifted",
    "submission": "class SegmentTree:\n    def __init__(self, data):\n        self.n = len(data)\n        self.tree = [0] * (2 * self.n)\n        self.build(data)\n\n    def build(self, data):\n        for i in range(self.n):\n            self.tree[self.n + i] = data[i]\n        for i in range(self.n - 1, 0, -1):\n            self.tree[i] = self.tree[i << 1] + self.tree[i << 1 | 1]\n\n    def update(self, index, value):\n        pos = index + self.n\n        self.tree[pos] = value\n        while pos > 1:\n            pos >>= 1\n            self.tree[pos] = self.tree[pos << 1] + self.tree[pos << 1 | 1]\n\n    def sum_range(self, left, right):\n        result = 0\n        left += self.n\n        right += self.n\n        while left < right:\n            if left & 1:\n                result += self.tree[left]\n                left += 1\n            if right & 1:\n                right -= 1\n                result += self.tree[right]\n            left >>= 1\n            right >>= 1\n        return result\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        nums.insert(0, 0)\n        nums.append(0)\n        arr = [0]\n        \n        for i in range(1, len(nums)-1):\n            a, b, c = nums[i-1], nums[i], nums[i+1]\n            if b > a and b > c: arr.append(1)\n            else: arr.append(0)\n                \n        arr.append(0)\n        sgtree = SegmentTree(arr)\n        \n        res = []\n        \n        for a, b, c in queries:\n            \n            if a == 1: \n                if c-b < 2: res.append(0); continue\n                res.append(sgtree.sum_range(b+1, c+2) - arr[b+1] - arr[c+1])\n            else:\n                nums[b+1] = c\n                \n                for i in range(b, b+3):\n                    if i == 0 or i == len(arr)-1: continue\n                    x, y, z = nums[i-1], nums[i], nums[i+1]\n                    if y > x and y > z: arr[i] = 1\n                    else: arr[i] = 0\n                        \n                if b != 0 : sgtree.update(b, arr[b])\n                sgtree.update(b+1, arr[b+1])\n                if b+2 != len(arr)-1: sgtree.update(b+2, arr[b+2])\n        \n        return res\n        ",
    "submit_ts": 1718508835.0
}