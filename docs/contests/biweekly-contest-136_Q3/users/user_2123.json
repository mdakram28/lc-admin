{
    "username": "priysri",
    "submission": "function minFlips(grid: number[][]): number {\n    const n = grid.length;\n    const m = grid[0].length;\n\n    let ans = 0;\n\n    // Loop through the 2x2 sub-grids\n    for (let i = 0; i < Math.floor(n / 2); i++) {\n        for (let j = 0; j < Math.floor(m / 2); j++) {\n            const elements = [\n                grid[i][j],\n                grid[n - i - 1][j],\n                grid[i][m - j - 1],\n                grid[n - i - 1][m - j - 1]\n            ];\n\n            const ones = elements.reduce((sum, val) => sum + val, 0);\n\n            ans += Math.min(ones, 4 - ones);\n        }\n    }\n\n    let possible = 0;\n    let count = 0;\n\n    // Handle the middle row if n is odd\n    if (n % 2 !== 0) {\n        for (let j = 0; j < Math.floor(m / 2); j++) {\n            if (grid[Math.floor(n / 2)][j] !== grid[Math.floor(n / 2)][m - j - 1]) {\n                ans += 1;\n                possible += 1;\n            } else {\n                if (grid[Math.floor(n / 2)][j] === 1) {\n                    count += 1;\n                }\n            }\n        }\n    }\n\n    // Handle the middle column if m is odd\n    if (m % 2 !== 0) {\n        for (let i = 0; i < Math.floor(n / 2); i++) {\n            if (grid[i][Math.floor(m / 2)] !== grid[n - i - 1][Math.floor(m / 2)]) {\n                ans += 1;\n                possible += 1;\n            } else {\n                if (grid[i][Math.floor(m / 2)] === 1) {\n                    count += 1;\n                }\n            }\n        }\n    }\n\n    // Handle the central element if both n and m are odd\n    if (n % 2 !== 0 && m % 2 !== 0 && grid[Math.floor(n / 2)][Math.floor(m / 2)] === 1) {\n        ans += 1;\n    }\n\n    if (possible === 0 && count % 2 !== 0) {\n        ans += 2;\n    }\n\n    return ans;\n}\n\n",
    "submit_ts": "1722699655",
    "subm_id": "1343218265"
}