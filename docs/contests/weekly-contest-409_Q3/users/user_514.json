{
    "username": "Shamelon",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        unordered_map<int, int> edges;\n        for (int i = 0; i < n - 1; ++i) {\n            edges[i] = i + 1;\n        }\n        int i, j, t1, t2;\n        vector<int> ans;\n        for (auto query : queries) {\n            i = query[0];\n            j = query[1];\n            if (!edges.contains(i) || edges[i] >= j) {\n                ans.push_back(edges.size());\n                continue;\n            }\n            t1 = i;\n            while (t1 != j) {\n                t2 = edges[t1];\n                edges.erase(edges.find(t1));\n                t1 = t2;\n            }\n            edges[i] = j;\n            ans.push_back(edges.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742102",
    "subm_id": "1343761032"
}