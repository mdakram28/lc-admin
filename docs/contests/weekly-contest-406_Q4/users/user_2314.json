{
    "username": "DamianSz",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        heap = []\n        # 0 for hor, 1 for vert\n        for num in horizontalCut:\n            heapq.heappush(heap, (-1*num, 0))\n        for num in verticalCut:\n            heapq.heappush(heap, (-1*num, 1))\n\n        cost = 0\n        vert_cuts = 0\n        hor_cuts = 0\n\n        while heap:\n            curr_cost, hor_vert = heapq.heappop(heap)\n            curr_cost *= -1\n            if hor_vert == 0:\n                cost += curr_cost * (vert_cuts + 1)\n                hor_cuts += 1\n            else:\n                cost += curr_cost * (hor_cuts + 1)\n                vert_cuts += 1\n        return cost",
    "submit_ts": "1720926454",
    "subm_id": "1320286791"
}