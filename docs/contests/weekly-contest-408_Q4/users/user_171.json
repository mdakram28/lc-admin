{
    "username": "harshbardolia",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<int> top, bottom, left, right;\n        int sz = (int) circles.size();\n        vector<int> size(sz);\n        vector<int> par(sz);\n        \n        for (int i = 0; i < sz; i++) {\n            size[i] = 1;\n            par[i] = i;\n        }\n        \n        function<bool(int, int)> touch = [&] (int i, int j) {\n            long long lhs = (1ll * abs(circles[i][0] - circles[j][0]) * abs(circles[i][0] - circles[j][0])) + (1ll * abs(circles[i][1] - circles[j][1]) * abs(circles[i][1] - circles[j][1]));\n            long long rhs = 1ll * (circles[i][2] + circles[j][2]) * (circles[i][2] + circles[j][2]);\n            return lhs <= rhs;\n        };\n        \n        function<int(int)> getPar = [&] (int num) {\n            if (par[num] == num) return num;\n            return par[num] = getPar(par[num]);\n        };\n        \n        function<void(int, int)> join = [&] (int a, int b) {\n            a = getPar(a);\n            b = getPar(b);\n            if (a == b) return;\n            if (size[a] < size[b]) swap(a, b);\n            size[a] += size[b];\n            par[b] = a;\n        };\n        \n        for (int i = 0; i < sz; i++) {\n            int t = circles[i][1] + circles[i][2];\n            if (t >= Y) top.push_back(i);\n            \n            int b = circles[i][1] - circles[i][2];\n            if (b <= 0) bottom.push_back(i);\n            \n            int r = circles[i][0] + circles[i][2];\n            if (r >= X) right.push_back(i);\n            \n            int l = circles[i][0] - circles[i][2];\n            if (l <= 0) left.push_back(i);\n            \n            for (int j = 0; j < i; j++)\n                if (touch(i, j)) join(i, j);   \n        }\n        \n        for (auto t : top) {\n            for (auto b : bottom) {\n                int tp = getPar(t);\n                int bp = getPar(b);\n                if (tp == bp) return false;\n            }\n        }\n        \n        for (auto l : left) {\n            for (auto r : right) {\n                int lp = getPar(l);\n                int rp = getPar(r);\n                if (lp == rp) return false;\n            }\n        }\n        \n        for (auto t : top) {\n            for (auto r : right) {\n                int tp = getPar(t);\n                int rp = getPar(r);\n                if (tp == rp) return false;\n            }\n        }\n        \n        for (auto l : left) {\n            for (auto b : bottom) {\n                int lp = getPar(l);\n                int bp = getPar(b);\n                if (lp == bp) return false;\n            }\n        }\n        \n        return true;\n    }\n};",
    "submit_ts": "1722136347",
    "subm_id": "1335731585"
}