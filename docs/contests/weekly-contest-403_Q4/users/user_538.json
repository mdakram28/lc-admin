{
    "username": "akkain",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n      m,n = len(grid), len(grid[0])\n      @cache\n      def get_area(l,r,t,b):\n        left, right, top, bottom = 100, 0, 100, 0\n        for i in range(t,b+1):\n          for j in range(l,r+1):\n            if grid[i][j]:\n              left = min(left, j)\n              right = max(right, j)\n              top = min(top, i)\n              bottom = max(bottom, i)\n        return (right-left+1) * (bottom-top+1)\n      # print('------')\n      res = m*n\n      for i in range(m-1):\n        for j in range(n-1):\n          a = get_area(0,j,0,i)+get_area(j+1,n-1,0,m-1)+get_area(0,j,i+1,m-1)\n          b = get_area(0,j,0,i)+get_area(j+1,n-1,0,i)+get_area(0,n-1,i+1,m-1)\n          # print(a,b)\n          res = min(res, a, b)\n      for i in range(m-1):\n        for j in range(n-1):\n          a = get_area(0,n-1,0,i)+get_area(0,j,i+1,m-1)+get_area(j+1,n-1,i+1,m-1)\n          # print(a)\n          res = min(res, a)\n      for j in range(n-1):\n        for i in range(m-1):\n          a = get_area(0,j,0,m-1)+get_area(j+1,n-1,0,i)+get_area(j+1,n-1,i+1,m-1)\n          # print(a)\n          res = min(res,a)\n      for i in range(m-2):\n        for j in range(i+1,m-1):\n          a = get_area(0,n-1,0,i)+get_area(0,n-1,i+1,j)+get_area(0,n-1,j+1,m-1)\n          res = min(res,a)\n      for i in range(n-2):\n        for j in range(i+1,n-1):\n          a = get_area(0,i,0,m-1)+get_area(i+1,j,0,m-1)+get_area(j+1,n-1,0,m-1)\n          res = min(res,a)\n      return res",
    "submit_ts": "1719114786",
    "subm_id": "541403334"
}