{
    "username": "jayjariwala10125",
    "submission": "class Solution {\npublic:\nstruct data_struct{\n    multiset<int>m;\n    data_struct(){\n    }\n    void insert(int x){\n        m.insert(x);\n    }\n    void remove(int x){\n        m.erase(m.find(x));\n    }\n    void erase(int x){\n        m.erase(x);\n    }\n    bool count(int x){\n        return m.count(x);\n    }\n    int size(){\n        return m.size();\n    }\n    int lower_bound(int x){\n        auto it =  m.lower_bound(x);\n        if(it==m.end()){\n            return -1;\n        }\n        else{\n            return *it;\n        }\n    }\n    auto upper_bound(int x){\n        auto it =  m.upper_bound(x);\n        if(it==m.end()){\n            return -1;\n        }\n        else{\n            return *it;\n        }\n    }\n    int max(){\n        return *(--m.end());\n    }\n    int min(){\n        return *(m.begin());\n    }\n};\n    int minimumDistance(vector<vector<int>>& v) {\n        data_struct d1;\n        data_struct d2;\n        int ans = INT_MAX;\n        for(auto &i:v){\n            d1.insert(i[0]+i[1]);\n            d2.insert(i[0]-i[1]);\n        }\n        for(auto &i:v){\n            int sum = i[0]+i[1];\n            int diff = i[0]-i[1];\n            d1.remove(sum);\n            d2.remove(diff);\n            int mx1 = d1.max();\n            int mn1 = d1.min();\n            int mx2 = d2.max();\n            int mn2 = d2.min();\n            int mx = max(mx2-mn2,mx1-mn1);\n            ans=min(ans,mx);\n            d1.insert(sum);\n            d2.insert(diff);\n        }\n        return ans;\n    }\n};"
}