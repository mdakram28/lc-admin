{
    "username": "pein531",
    "submission": "const int N = 100010;\nvector<int> graph[N];\nint n, top, f[N], g[N], h[N], pre[N], suf[N], t[N];\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& e) {\n        n = e.size() + 1;\n        for(int i = 0; i < n; ++i) {\n            graph[i].clear();\n        }\n        for(auto pir: e) {\n            graph[pir[0]].push_back(pir[1]);\n            graph[pir[1]].push_back(pir[0]);\n        }\n        dfs1(0, -1);\n        g[0] = f[0];\n        h[0] = 0;\n        dfs2(0, -1);\n        vector<int> ans;\n        ans.clear();\n        for(int i = 0; i < n; ++i) {\n            ans.push_back(g[i]);\n        }\n        return ans;\n    }\n\n    void dfs1(int u, int fa) {\n        f[u] = 0;\n        for(auto v: graph[u]) {\n            if(v == fa)   continue;\n            dfs1(v, u);\n            if(v&1) {\n                f[u] = max(f[u], f[v] + 1);\n            }else {\n                f[u] = max(f[u], f[v] + 2);\n            }\n        }\n    }\n\n    void dfs2(int u, int fa) {\n        top = 0;\n        for(auto v: graph[u]) {\n            if(v == fa)   continue;\n            t[++top] = v;\n        }\n        int tmp = h[u];\n        if(u % 2 == 1)  tmp += 1;\n        if(u % 2 == 0)  tmp += 2;\n        for(int i = 1; i <= top; ++i) {\n            int w = t[i];\n            pre[w] = tmp;\n            int now = f[w];\n            if(u&1) {\n                now++;\n            }else {\n                now += 2;\n            }\n            if(w&1) {\n                now++;\n            }else {\n                now += 2;\n            }\n            tmp = max(tmp, now);\n        }\n        tmp = 0;\n        for(int i = top; i >= 1; --i) {\n            int w = t[i];\n            suf[w] = tmp;\n            int now = f[w];\n            if(u&1) {\n                now++;\n            }else {\n                now += 2;\n            }\n            if(w&1) {\n                now++;\n            }else {\n                now += 2;\n            }\n            tmp = max(tmp,now);\n        }\n        for(auto v: graph[u]) {\n            if(v == fa) continue;\n            h[v] = max(pre[v], suf[v]);\n            g[v] = max(f[v], h[v]);\n            dfs2(v, u);\n        }\n    }\n};",
    "submit_ts": "1722698101",
    "subm_id": "1343169666"
}