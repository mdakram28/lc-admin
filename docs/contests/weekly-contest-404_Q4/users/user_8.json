{
    "username": "OTTFF",
    "submission": "class Solution {\npublic:\n    typedef pair<int, int> PII;\n    \n    vector<vector<int>> g1, g2;\n    \n    PII dfs(int u, int fa, vector<vector<int>>& g) {\n        PII far = {0, u};\n        for (int v : g[u]) {\n            if (v == fa) continue;\n            PII vfar = dfs(v, u, g);\n            vfar.first++;\n            if (vfar.first > far.first) {\n                far = vfar;\n            }\n        }\n        return far;\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size() + 1, m = edges2.size() + 1;\n        g1.assign(n, vector<int>());\n        g2.assign(m, vector<int>());\n        for (auto&& e : edges1) {\n            g1[e[0]].push_back(e[1]);\n            g1[e[1]].push_back(e[0]);\n        }\n        for (auto&& e : edges2) {\n            g2[e[0]].push_back(e[1]);\n            g2[e[1]].push_back(e[0]);\n        }\n        \n        PII res1 = dfs(0, -1, g1);\n        res1 = dfs(res1.second, -1, g1);\n        \n        PII res2 = dfs(0, -1, g2);\n        res2 = dfs(res2.second, -1, g2);\n        \n        int len1 = res1.first;\n        int len2 = res2.first;\n        \n        if (len1 < len2) {\n            swap(len1, len2);\n        }\n        \n        len2 = (len2 + 1) / 2 + 1;\n        \n        int ans = len1;\n        \n        if (len2 >= len1 / 2) {\n            ans = (len1 + 1) / 2 + len2;\n        }\n            \n        return ans;\n    }\n};",
    "submit_ts": "1719715653",
    "subm_id": "1304342622"
}