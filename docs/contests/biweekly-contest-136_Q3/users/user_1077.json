{
    "username": "theodor1289",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n,m=len(grid),len(grid[0])\n        res=0\n        diff=ones=0\n        for i in range((len(grid)+1)//2):\n            for j in range((len(grid[0])+1)//2):\n                positions=len(set([(i,j),(n-i-1,j),(i,m-j-1),(n-i-1,m-j-1)]))\n                if positions==1:\n                    if grid[i][j]==1:\n                        res+=1\n                elif positions==4:\n                    cnth=Counter([grid[i][j],grid[n-i-1][j],grid[i][m-j-1],grid[n-i-1][m-j-1]])\n                    res+=min(cnth[0],cnth[1])\n                elif positions==2:\n                    values=set([grid[i][j],grid[n-i-1][j],grid[i][m-j-1],grid[n-i-1][m-j-1]])\n                    if len(values)==1 and grid[i][j]==1:\n                        ones+=2\n                    elif len(values)==2:\n                        diff+=1\n        ones%=4\n        if diff==0:\n            if ones==2:\n                res+=2\n        else:\n            res+=diff\n        return res",
    "submit_ts": "1722698144",
    "subm_id": "1343171158"
}