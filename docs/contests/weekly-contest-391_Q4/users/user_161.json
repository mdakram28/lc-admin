{
    "username": "SleepyJie",
    "submission": "/********************************************\n * author : Jie Chen (3rd Year CS)\n * school : Rochester Institute of Technology\n * created: 03.30.2024 22:41:32\n*********************************************/\n\nstring to_string(string s) {\n    return '\"' + s + '\"';\n}\n\nstring to_string(const char* s) {\n    return to_string((string) s);\n}\n\nstring to_string(bool b) {\n    return (b ? \"true\" : \"false\");\n}\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p) {\n    return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n}\n\ntemplate <typename A>\nstring to_string(A v) {\n    bool first = true;\n    string res = \"{\";\n    for (const auto &x : v) {\n        if (!first) {\n            res += \", \";\n        }\n        first = false;\n        res += to_string(x);\n    }\n    res += \"}\";\n    return res;\n}\n\nvoid debug_out() { cout << endl; }\n\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n    cout << \" \" << to_string(H);\n    debug_out(T...);\n}\n\n#define BROKEN_CODE\n\n#ifdef BROKEN_CODE\n    #define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n    #define dbp(...) cout << __VA_ARGS__ << \"\\n\";\n#else\n    #define dbg(...) 10082002\n    #define dbp(...) \"Gimme Internship\"\n#endif\n\nusing i64 = long long;\n\nstruct Info {\n    int minsum, maxsum, mindiff, maxdiff;\n    Info() {}\n    Info(const vector<int>& point) {\n        minsum = maxsum = point[0] + point[1];\n        mindiff = maxdiff = point[0] - point[1];\n    }\n    int solve() {\n        return max(\n            maxsum - minsum,\n            maxdiff - mindiff\n        );\n    }\n};\n\nInfo operator+(const Info& a, const Info& b) {\n    Info c = a;\n    if (b.minsum < a.minsum) {\n        c.minsum = b.minsum;\n    }\n    if (b.maxsum > a.maxsum) {\n        c.maxsum = b.maxsum;\n    }\n    if (b.mindiff < a.mindiff) {\n        c.mindiff = b.mindiff;\n    }\n    if (b.maxdiff > a.maxdiff) {\n        c.maxdiff = b.maxdiff;\n    }\n    return c;\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n\n        vector<Info> pre(n), suf(n);\n        pre[0] = Info(p[0]);\n        for (int i = 1; i < n; i++) {\n            pre[i] = pre[i - 1] + Info(p[i]);\n        }\n        suf[n - 1] = Info(p[n - 1]);\n        for (int i = n - 2; i >= 0; i--) {\n            suf[i] = suf[i + 1] + Info(p[i]);\n        }\n\n        int ans = min(pre[n - 2].solve(), suf[1].solve());\n        for (int i = 1; i < n - 1; i++) {\n            Info info = pre[i - 1] + suf[i + 1];\n            ans = min(ans, info.solve());\n        }\n        return ans;\n    }\n};\n\n// ~ JustJie"
}