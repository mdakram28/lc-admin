{
    "username": "parasguglani",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    void computeLP(vector<int> find, int k, vector<int> &lps)\n    {\n\n        int sz = 0;\n\n        lps[0] = 0;\n\n        int i = 1;\n        while (i < k)\n        {\n            if (find[i] == find[sz])\n            {\n                sz++;\n                lps[i] = sz;\n                i++;\n            }\n            else\n            {\n\n                if (sz != 0)\n                {\n                    sz = lps[sz - 1];\n                }\n                else\n                {\n                    lps[i] = 0;\n                    i++;\n                }\n            }\n        }\n    }\n\n    int kmp(vector<int> find, vector<int> a, int k)\n    {\n        int ans = 0;\n        // int k = find.size();\n\n        int n = a.size();\n\n        vector<int> lps(k, 0);\n\n        computeLP(find, k, lps);\n\n        int i = 0;\n        int j = 0;\n        while ((n - i) >= (k - j))\n        {\n            if (find[j] == a[i])\n            {\n                j++;\n                i++;\n            }\n\n            if (j == k)\n            {\n                j = lps[j - 1];\n                ans++;\n            }\n\n            else if (i < n && find[j] != a[i])\n            {\n\n                if (j != 0)\n                    j = lps[j - 1];\n                else\n                    i = i + 1;\n            }\n        }\n        return ans;\n    }\n    int numberOfAlternatingGroups(vector<int> &a, int k)\n    {\n        int ans = 0;\n        int n = a.size();\n        int i = 1;\n        int alt = 1;\n        if (k == 1)\n        {\n            return n;\n        }\n        int last = n + k - 1;\n        while (i < last)\n        {\n            int curidx = i;\n            int pre = i - 1;\n\n            if (curidx >= n)\n            {\n                curidx -= n;\n            }\n            if (pre >= n)\n            {\n                pre -= n;\n            }\n\n            if (a[curidx] != a[pre])\n            {\n                alt++;\n            }\n            else\n            {\n                alt = 1;\n            }\n\n            if (alt >= k)\n            {\n                ans++;\n            }\n\n            i++;\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720280858",
    "subm_id": "1311804560"
}