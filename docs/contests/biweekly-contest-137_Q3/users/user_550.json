{
    "username": "Neer N Patel",
    "submission": "class Solution {\npublic:\n    \n    int v[101][101];\n    long long dp[10][10];\n    \n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        \n//         vector<vector<int> > v(3,vector<int>(m,0));\n        \n//         long long dp[10][10];\n        \n        long long ans = -1e10;\n        for(int i = 0 ; i < n; i++) {\n            for(int j = i+1 ; j < n ; j++) {\n                for(int k = j+1 ; k < n ; k++) {\n                    for(int l = 0 ; l < m ; l++) {\n                        v[0][l] = board[i][l];\n\t\t\t\t\t\t\t\t\t\t\t\tv[1][l] = board[j][l];\n\t\t\t\t\t\t\t\t\t\t\t\tv[2][l] = board[k][l];\n                    }\n                    \n                    for(int i1 = 0 ; i1 < 2 ; i1++) {\n                        for(int j1 = 0 ; j1 < 8 ; j1++) {\n                            dp[i1][j1]=-1e10;\n                        }\n                    }\n                    \n                    dp[0][0] = 0;\n                    dp[1][0] = 0;\n                    \n                    int cur = 0;\n                    for(int l = 0 ; l < m ; l++) {\n                        dp[cur^1][0] = dp[cur][0];\n                        dp[cur^1][1] = max(dp[cur][1],dp[cur][0] + v[0][l]);\n                        dp[cur^1][2] = max(dp[cur][2], dp[cur][0] + v[1][l]);\n                        dp[cur^1][3] = max(dp[cur][3], dp[cur][0] + v[2][l]);\n                        \n                        dp[cur^1][4] = max({dp[cur][1] + v[1][l],dp[cur][2] + v[0][l],dp[cur][4]});\n                        dp[cur^1][5] = max({dp[cur][2] + v[2][l],dp[cur][3] + v[1][l],dp[cur][5]});\n                        dp[cur^1][6] = max({dp[cur][1] + v[2][l],dp[cur][3] + v[0][l],dp[cur][6]});\n                        \n                        dp[cur^1][7] = max({dp[cur][4] + v[2][l], dp[cur][5] + v[0][l], dp[cur][6] + v[1][l], dp[cur][7]});\n                        \n                        // cout << \" after the index l \" << l << \" value of v_0l \" << v[0][l] << \" v1l \" << v[1][l] << \" v2 l \" << v[2][l] << endl;\n                        \n                        // cout << \" values of dp \" << endl;\n                        // for(int i1 = 0 ; i1 <= 7 ; i1++) {\n                        //     cout << \" for i1 \" << i1 << \" value of dp \" << dp[cur^1][i1] << endl;\n                        // }\n                        \n                        // cout << endl << endl << endl;\n                        \n                        cur ^= 1;\n                    }\n                    \n                    ans = max(ans, dp[cur][7]);\n                }\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1723907569",
    "subm_id": "1359113993"
}