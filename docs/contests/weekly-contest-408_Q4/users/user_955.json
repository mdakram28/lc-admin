{
    "username": "rozhkov",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        def pathExists(source, dest):\n            q = [source]\n            visited = set([source])\n            while q:\n                cur = q.pop()\n                if cur == dest:\n                    return True\n                for nei in E[cur]:\n                    if nei not in visited:\n                        q.append(nei)\n                        visited.add(nei)\n\n            return False\n\n        if any(x*x + y*y <= r*r or (X - x)**2 + (Y - y)**2 <= r*r for x, y, r in circles):\n            return False\n        \n        E = defaultdict(list)\n        n = len(circles)\n        for i in range(n):\n            for j in range(i+1, n):\n                x1, y1, r1 = circles[i]\n                x2, y2, r2 = circles[j]\n                if (x1 - x2)**2 + (y1 - y2)**2 <= (r1 + r2)**2:\n                    E[i].append(j)\n                    E[j].append(i)\n\n        for i in range(n):\n            x, y, r = circles[i]\n            if abs(x) <= r:\n                if 0 <= y <= Y or x**2 + (Y-y)**2 <= r**2:\n                    E[n].append(i)\n                    E[i].append(n)\n            if abs(x-X) <= r:\n                if 0 <= y <= Y or (X - x)**2 + y**2 <= r**2 or (X - x)**2 + (Y - y)**2 <= r**2:\n                    E[n+2].append(i)\n                    E[i].append(n+2)\n            if abs(y) <= r:\n                if 0 <= x <= X or (X - x)**2 + y**2 <= r**2:\n                    E[n+1].append(i)\n                    E[i].append(n+1)\n            if abs(y-Y) <= r:\n                if 0 <= x <= X or (X - x)**2 + (Y - y)**2 <= r**2:\n                    E[n+3].append(i)\n                    E[i].append(n+3)\n\n        if pathExists(n, n+1) or pathExists(n, n+2) or pathExists(n+3, n+1) or pathExists(n+3, n+2):\n            return False\n\n        return True\n\n        ",
    "submit_ts": "1722139104",
    "subm_id": "1335807979"
}