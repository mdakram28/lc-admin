{
    "username": "Abhishekcpr",
    "submission": "class Solution {\npublic:\n\n    long long maxi(long long a, long long b)\n    {\n        if(a >= b )\n        {\n            return a ; \n        }\n\n        return b ;\n    }\n\n     long long mini(long long a, long long b)\n    {\n        if(a <= b )\n        {\n            return a ; \n        }\n\n        return b ;\n    }\n\n    int minimumDistance(vector<vector<int>>& A) {\n        \n         int N = A.size() ;\n         vector<int> V(N), V1(N);\n         map<long long,long long> sum , diff ;\n \n    for (int i = 0; i < N; i++) {\n        long long s = A[i][0] + A[i][1] ;\n        long long d = A[i][0] - A[i][1] ;\n       sum[s]++ ;\n       diff[d]++ ;\n    }\n \n    long long maxsum = INT_MAX ;\n\n\n     for (int i = 0; i < N; i++)\n    {\n        long long s = A[i][0] + A[i][1] ;\n        long long d = A[i][0] - A[i][1] ;\n\n        if(sum[s] == 1)\n        {\n            sum.erase(s) ;\n        }\n        else\n        sum[s]-- ;\n\n         if(diff[d] == 1)\n        {\n            diff.erase(d) ;\n        }\n        else\n        diff[d]-- ;\n\n        long long ms =  sum.rbegin()->first - sum.begin()->first ;\n        long long ds =  diff.rbegin()->first - diff.begin()->first ;\n        long long mb = maxi(ms,ds);\n        maxsum = mini(maxsum , mb) ;\n\n        diff[d]++ ;\n        sum[s]++ ;\n\n\n    }\n\n    return maxsum ;\n    \n    }\n};"
}