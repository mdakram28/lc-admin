{
    "username": "hululu0405",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        @cache\n        def dp(x1, x2, y1, y2):\n            u, d, l, r = x2, x1, y2, y1\n            for i in range(x1, x2+1):\n                for j in range(y1, y2+1):\n                    if grid[i][j]:\n                        u = min(u, i)\n                        d = max(d, i)\n                        l = min(l, j)\n                        r = max(r, j)\n            return max(0, (r-l+1) * (d-u+1))\n\n        res = inf\n        m, n = len(grid), len(grid[0])\n        for x in range(1, m):\n            for y in range(1, n):\n                res = min(res, dp(0, x-1, 0, n-1) + dp(x, m-1, 0, y-1) + dp(x, m-1, y, n-1))\n                res = min(res, dp(0, x-1, 0, y-1) + dp(0, x-1, y, n-1) + dp(x, m-1, 0, n-1))\n                res = min(res, dp(0, m-1, 0, y-1) + dp(0, x-1, y, n-1) + dp(x, m-1, y, n-1))\n                res = min(res, dp(0, x-1, 0, y-1) + dp(x, m-1, 0, y-1) + dp(0, m-1, y, n-1))\n        for x1 in range(1, m-1):\n            for x2 in range(x1+1, m):\n                res = min(res, dp(0, x1-1, 0, n-1) + dp(x1, x2-1, 0, n-1) + dp(x2, m-1, 0, n-1))\n        for y1 in range(1, n-1):\n            for y2 in range(y1+1, n):\n                res = min(res, dp(0, m-1, 0, y1-1) + dp(0, m-1, y1, y2-1) + dp(0, m-1, y2, n-1))\n        return res\n                        ",
    "submit_ts": "1719112917",
    "subm_id": "1297312289"
}