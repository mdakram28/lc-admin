{
    "username": "Rhacoal",
    "submission": "using ll = long long;\n\nstruct segtree {\n    struct node {\n        int pl{}, pr{};\n        long long lr{}, r{}, l{}, z{};\n    };\n    vector<node> nodes{node{}};\n\n    int get(int &i) {\n        int v = i;\n        if (i == 0) {\n            v = nodes.size();\n            i = v;\n        }\n        nodes.emplace_back();\n        return v;\n    }\n\n    static constexpr int s0 = 0, t0 = 65536;\n    void insert(int i, int v, int p = 0, int s = s0, int t = t0) {\n        if (t - s == 1) {\n            // printf(\"insert(%d, %d) to %d(%d, %d)\\n\");\n            nodes[p].lr = max(v, 0);\n            nodes[p].r = 0;\n            nodes[p].l = 0;\n            nodes[p].z = 0;\n            return;\n        }\n        int m = (t - s) / 2 + s;\n        if (i < m) {\n            insert(i, v, get(nodes[p].pl), s, m);\n        } else {\n            insert(i, v, get(nodes[p].pr), m, t);\n        }\n        auto lnode = nodes[p].pl ? nodes[nodes[p].pl] : node{};\n        auto rnode = nodes[p].pr ? nodes[nodes[p].pr] : node{};\n        long long lr = max(lnode.lr + rnode.r, lnode.l + rnode.lr);\n        long long l = max(lnode.lr + rnode.z, lnode.l + rnode.l);\n        long long r = max(lnode.z + rnode.lr, lnode.r + rnode.r);\n        long long z = max(lnode.r + rnode.z, lnode.z + rnode.l);\n        nodes[p].lr = max(max(lr, l), max(r, z));\n        nodes[p].l = max(l, z);\n        nodes[p].r = max(r, z);\n        nodes[p].z = z;\n        // printf(\"insert(%d, %d) to %d(%d, %d) set(%lld, %lld, %lld, %lld)\\n\", i, v, p, s, t, lr, l, r, z);\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        segtree st{};\n        for (int i = 0; i < nums.size(); ++i) {\n            st.insert(i, nums[i]);\n        }\n        long long ret{};\n        for (auto &q : queries) {\n            st.insert(q[0], q[1]);\n            ret += st.nodes[0].lr;\n        }\n        return ret % 1000000007;\n    }\n};",
    "submit_ts": "1716695488",
    "subm_id": "1268142237"
}