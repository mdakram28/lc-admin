{
    "username": "macuadros",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        const int n = p.size();\n\n        std::vector<std::pair<int, int>> sum(n), dif(n);\n        for (int i = 0; i < n; ++i) {\n            sum[i].first = p[i][0] + p[i][1];\n            dif[i].first = p[i][0] - p[i][1];\n            \n            sum[i].second = i;\n            dif[i].second = i;\n        }\n        \n        \n        \n        std::sort(sum.begin(), sum.end());\n        std::sort(dif.begin(), dif.end());\n        \n        std::vector<int> pos {sum[0].second, sum[n - 1].second, dif[0].second, dif[n - 1].second};\n        \n        sum.pop_back(), dif.pop_back();\n        int ans = 1e9;\n        std::vector<std::vector<int>> cpy = p;\n        for (int i = 0; i < 4; ++i) {\n            p = cpy;\n            p.erase(p.begin() + pos[i]);\n            for (int i = 0; i < n - 1; ++i) {\n                sum[i].first = p[i][0] + p[i][1];\n                dif[i].first = p[i][0] - p[i][1];\n\n                sum[i].second = i;\n                dif[i].second = i;\n            }\n            \n            std::sort(sum.begin(), sum.end());\n            std::sort(dif.begin(), dif.end());\n            \n            ans = std::min(ans, std::max(sum.back().first - sum[0].first, dif.back().first - dif[0].first));\n        }\n        \n        return ans;\n    }\n};"
}