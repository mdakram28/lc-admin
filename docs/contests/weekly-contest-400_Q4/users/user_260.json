{
    "username": "yh157612",
    "submission": "impl Solution {\n    pub fn minimum_difference(nums: Vec<i32>, k: i32) -> i32 {\n        let mut count = [0; 31];\n        let get_num = |count: &[i32]| {\n            let mut x = 0;\n            for i in 0..31 {\n                if count[i] == 0 {\n                    x |= 1 << i;\n                }\n            }\n            x\n        };\n        \n        let mut result = 1000000000;\n        let mut l = 0;\n        for r in 0..nums.len() {\n            for i in 0..31 {\n                if (nums[r] >> i) & 1 == 0 {\n                    count[i] += 1;\n                }\n            }\n            result = result.min((get_num(&count) - k).abs());\n            while l <= r && get_num(&count) < k {\n                for i in 0..31 {\n                    if (nums[l] >> i) & 1 == 0 {\n                        count[i] -= 1;\n                    }\n                }\n                l += 1;\n                if l <= r {\n                    result = result.min((get_num(&count) - k).abs());\n                }\n            }\n        }\n        result\n    }\n}",
    "submit_ts": 1717298357.0
}