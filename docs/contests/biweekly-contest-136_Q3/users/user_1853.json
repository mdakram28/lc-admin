{
    "username": "harshitzzzz",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int row = grid.size(), col = grid[0].size();\n        int res = 0;\n        if (row % 2 == 1 && col % 2 == 1) {\n            if (grid[row / 2][col / 2] == 1) {\n                res += 1;\n            }\n        }\n\n        vector<int> sh(3, 0);\n        if (row % 2 == 1) {\n            int m = 0, n= col - 1;\n            while (m < n) {\n                int sm = grid[row/ 2][m] + grid[row / 2][n];\n                sh[sm] += 1;\n                m += 1;\n                n-= 1;\n            }\n        }\n\n        if (col % 2 == 1) {\n            int m = 0, n = row - 1;\n            while (m < n) {\n                int sm = grid[m][col/ 2] + grid[n][col/ 2];\n                sh[sm] += 1;\n                m+= 1;\n                n-= 1;\n            }\n        }\n\n        if (sh[2] % 2 == 1) {\n            if (sh[1] > 0) {\n                res += sh[1];\n            } else {\n                res += 2;\n            }\n        } else {\n            res += sh[1];\n        }\n\n        for (int i = 0; i < row/ 2; ++i) {\n            for (int j = 0; j < col / 2; ++j) {\n                int p = grid[i][j];\n                int q = grid[row - 1 - i][j];\n                int r = grid[i][col - 1 - j];\n                int s = grid[row - 1 - i][col- 1 - j];\n\n                int sm = p+ q + r + s;\n\n                if (sm != 0 && sm != 4) {\n                    res+= min(sm, 4 - sm);\n                }\n            }\n        }\n\n        return res;\n    }\n};\n\n\n",
    "submit_ts": "1722700003",
    "subm_id": "1343228769"
}