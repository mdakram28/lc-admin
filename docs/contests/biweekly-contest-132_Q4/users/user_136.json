{
    "username": "yangxm",
    "submission": "constexpr int MAX = 10010;\n\nconstexpr int LowBit(int x) { return x & -x; }\n\nstruct BIT {\n  int c[MAX], cap;\n  \n  void Reset(int n) {\n    std::fill(c, c + n + 1, 0);\n    cap = n;\n  }\n  \n  void Update(int k, int v) {\n    for (; k <= cap; k += LowBit(k)) {\n      c[k] = max(c[k], v);\n    }\n  }\n  \n  int Query(int k) const {\n    int ret = 0;\n    for (; k > 0; k -= LowBit(k)) {\n      ret = max(ret, c[k]);\n    }\n    return ret;\n  }\n} bit;\n\nint x[MAX], a[MAX], cnt[MAX], pre[MAX], dp[MAX];\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n      int n = nums.size(), m = n, ret = 0;\n      std::copy(nums.begin(), nums.end(), x);\n      std::sort(x, x + m);\n      m = std::unique(x, x + m) - x;\n      for (int i = 0; i < n; ++i) {\n        a[i + 1] = lower_bound(x, x + m, nums[i]) - x + 1;\n      }\n      std::fill(cnt, cnt + m + 1, 0);\n      bit.Reset(n);\n      for (int i = 1; i <= n; ++i) {\n        int v = a[i];\n        ++cnt[v];\n        dp[i] = cnt[v];\n        bit.Update(i, dp[i]);\n        ret = max(ret, dp[i]);\n      }\n      for (int i = 0; i < k; ++i) {\n        fill(pre, pre + m + 1, 0);\n        for (int j = 1; j <= n; ++j) {\n          int cur = max(bit.Query(j - 1), pre[a[j]]);\n          dp[j] = max(dp[j], cur + 1);\n          pre[a[j]] = max(pre[a[j]], dp[j]);\n          ret = max(ret, dp[j]);\n        }\n        bit.Reset(n);\n        for (int j = 1; j <= n; ++j) {\n          bit.Update(j, dp[j]);\n        }\n      }\n      return ret;\n    }\n};",
    "submit_ts": 1717859696.0
}