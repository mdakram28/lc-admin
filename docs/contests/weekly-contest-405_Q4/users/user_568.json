{
    "username": "mixzncionud01997",
    "submission": "#define pb push_back\nclass TN {\npublic:\n    unordered_map<char, TN*> child;\n    vector<pair<int, int>> we;\n};\n\nclass Trie {\npublic:\n    TN* root;\n\n    Trie() {\n        root = new TN();\n    }\n\n    void insert(string w, int idx, int c) {\n        TN* val = root;\n        for (char c : w) {\n            if (!val->child.count(c)) {\n                val->child[c] = new TN();\n            }\n            val = val->child[c];\n        }\n        val->we.push_back({idx, c});\n    }\n};\n\nclass Solution {\npublic:\n    int  minimumCost(string target, vector<string>& ws, vector<int>& cs) {\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n       \n        Trie trie;\n        for (int i = 0; i <  ws.size(); ++i) {\n            trie.insert(ws[i], i, cs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) {\n                continue;\n            }\n\n            TN* val = trie.root;\n            for (int j = i; j < n; ++j) {\n                if (!val->child.count(target[j])) {\n                    break;\n                }\n                val = val->child[target[j]];\n                for (auto& p : val->we) {\n                    int w_len = ws[p.first].size();\n                    if (i + w_len <= n) {\n                        dp[i + w_len] = min(dp[i + w_len], dp[i] + p.second);\n                    }\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720322449",
    "subm_id": "1312350232"
}