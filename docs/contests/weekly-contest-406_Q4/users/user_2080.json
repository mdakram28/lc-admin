{
    "username": "pein531",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long sumh = 0, sumv = 0, ans = 0;\n        for(auto i: horizontalCut) sumh += i;\n        for(auto i: verticalCut) sumv += i;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int i = m - 2, j = n - 2;\n        while(i >= 0 && j >= 0){\n            if(horizontalCut[i] > verticalCut[j] || (horizontalCut[i] == verticalCut[j]&&sumh>sumv)){\n                ans += horizontalCut[i] + sumv;\n                sumh -= horizontalCut[i];\n                i--;\n            }else{\n                ans += verticalCut[j] + sumh;\n                sumv -= verticalCut[j];\n                j--;\n            }\n        }\n        ans += sumh + sumv;\n        return ans;\n    }\n};",
    "submit_ts": "1720926325",
    "subm_id": "1320282822"
}