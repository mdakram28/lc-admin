{
    "username": "22bce098",
    "submission": "class Solution {\n\n    public long Solve(int s, int e, int [][] prefix, int k){\n        int ptr=s;\n        int st = s;\n        long rem = 0l;\n        while(ptr<e){\n            boolean found = false;\n            int gap = ptr-st+1;\n            for(int j=0;j<31;j++){\n                if(((1<<j) & k) != 0) continue;\n                int freq = prefix[ptr][j] - (st==0?0:prefix[st-1][j]);\n\n                if(freq == gap) {\n                    ptr++;\n                    found = true;\n                    break;\n                }\n            }\n\n            if(!found){\n                st++;\n            } else {\n                rem += gap;\n            }\n        }\n        return rem;\n    }\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        int [][] prefix = new int [n][31];\n        long ans = 0l;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<31;j++){\n                if(((1<<j)&nums[i]) != 0){\n                    prefix[i][j]=1+(i==0?0:prefix[i-1][j]);\n                } else {\n                    prefix[i][j] = (i==0?0:prefix[i-1][j]);\n                }\n            }\n        }\n\n        for(int i=0;i<n;i++){\n            if((nums[i]&k) != k){\n                continue;\n            }\n            int ptr=i;\n            while(ptr < n){\n                if((nums[ptr]&k)==k){\n                    ptr++;\n                } else {\n                    break;\n                }\n            }\n            int gap = ptr-i;\n            ans += (gap*(gap+1l))/2l;\n            int x=i;\n\n            ans -= Solve(i, ptr, prefix, k);\n            i=ptr-1;\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1720281041",
    "subm_id": "1311811049"
}