{
    "username": "\u7ef4\u8675\u547d",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string str, int k, vector<vector<int>>& qu) {\n        int n = str.size();\n        vector<int> s(n), p(n);\n        vector<long long> sp(n);\n        \n        s[0] = str[0] == '1';\n        for (int i = 1; i < n; ++i)\n            s[i] = s[i - 1] + (str[i] == '1');\n        auto get = [&](int l, int r, int b) {\n            int vl = l ? (b ? s[l - 1] : (l - s[l - 1])) : 0;\n            int vr = b ? s[r] : (r + 1 - s[r]);\n            return vr - vl;\n        };\n\n        for (int i = 0; i < n; ++i) {\n            int l = i, r = n - 1, mid, ans;\n            while (l <= r) {\n                mid = (l + r) / 2;\n                int mn = min(get(i, mid, 0), get(i, mid, 1));\n                if (mn <= k) ans = mid, l = mid + 1;\n                else r = mid - 1;\n            }\n            p[i] = ans;\n            cout << p[i] << ' ';\n        }\n        cout << '\\n';\n\n        sp[0] = p[0];\n        for (int i = 1; i < n; ++i)\n            sp[i] = sp[i - 1] + p[i];\n\n        vector<long long> ans;\n        for (auto q : qu) {\n            int l = q[0], r = q[1];\n            int pos = upper_bound(p.begin(), p.end(), r) - p.begin() - 1;\n            if (pos < l) pos = l - 1;\n            else if (pos > r) pos = r;\n\n            long long res = 0;\n            if (pos >= l)\n                res += sp[pos] - (l ? sp[l - 1] : 0);\n            res -= 1ll * (l + pos) * (pos - l + 1) / 2 - (pos - l + 1);\n            ++pos;\n            res += 1ll * (r - pos + 1) * r;\n            res -= 1ll * (pos + r) * (r - pos + 1) / 2 - (r - pos + 1);\n\n            ans.push_back(res);\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1723951319",
    "subm_id": "556404674"
}