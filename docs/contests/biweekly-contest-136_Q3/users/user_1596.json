{
    "username": "yashsrivastava0211",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        \n        m , n = len(grid) , len(grid[0])\n        count = 0\n\n        for i in range(m//2):\n            for j in range(n//2):\n                a = grid[i][j]\n                b = grid[i][n-1-j]\n                c = grid[m-1-i][j]\n                d = grid[m-1-i][n-1-j]\n\n                temp = (a+b+c+d) % 4\n                if temp == 0:\n                    continue\n                if temp==1 or temp==3:\n                    count += 1\n                elif temp == 2:\n                    count += 2\n\n\n        \n        ones = 0\n        options = 0\n\n        if m % 2:\n            mid = m//2\n            for j in range(n//2):\n                if grid[mid][j] == 1 and grid[mid][n-1-j] == 1:\n                    ones += 2\n                if grid[mid][j] != grid[mid][n-1-j]:\n                    count += 1\n                    options += 1\n\n        if n % 2:\n            mid = n//2\n            for i in range(m//2):\n                if grid[i][mid] ==1 and grid[m-1-i][mid]==1:\n                    ones += 2\n                if grid[i][mid] != grid[m-1-i][mid]:\n                    count += 1\n                    options += 1\n\n\n        if n%2 and m%2 and grid[m//2][n//2]:\n            count += 1\n        if ones % 4==2 and options>0:\n            return count\n        return count + ones %4\n    ",
    "submit_ts": "1722699182",
    "subm_id": "1343203913"
}