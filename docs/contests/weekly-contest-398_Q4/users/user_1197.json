{
    "username": "VVHack",
    "submission": "class Solution {\npublic:\n  int nCr(int n, int r) {\n    // If r is greater than n, return 0\n    if (r > n) return 0;\n    // If r is 0 or equal to n, return 1\n    if (r == 0 || n == r) return 1;\n    // Initialize the logarithmic sum to 0\n    double res = 0;\n    // Calculate the logarithmic sum of the numerator and denominator using loop\n    for (int i = 0; i < r; i++) {\n      // Add the logarithm of (n-i) and subtract the logarithm of (i+1)\n      res += log(n-i) - log(i+1);\n    }\n    // Convert logarithmic sum back to a normal number\n    return (int)round(exp(res));\n  }\n\n  int waysToReachStair(int k) {\n    if (k == 0) return 2;\n    if (k == 1) return 4;\n    int tot = 0;\n    int jumps = (int)floor(log(k) / log(2));\n    for (;;++jumps) {\n      int diff = (1 << jumps) - (k - 1) - 1;\n      //cout << \"jumps = \" << jumps << \", diff = \" << diff << endl;\n      if (diff < 0) continue;\n      if (diff > (jumps + 1)) break;\n      int choose = nCr(jumps + 1, diff);\n      //cout << \"choose = \" << choose << endl;\n      tot += choose;\n    }\n    return tot;\n  }\n};",
    "submit_ts": 1716089869.0
}