{
    "username": "iusecookies64",
    "submission": "typedef long long ll;\nclass Solution {\n    map<pair<pair<ll, ll>, ll>, ll> dp;\n    ll rec(ll level, ll jump, ll prevMove, ll k)\n    {\n        if(level > k + 1) return 0; // no way\n        if(dp.find({{level, jump}, prevMove}) != dp.end()) return dp[{{level, jump}, prevMove}];\n        ll res = 0;\n        if(level == k) res++;\n        // exploring the ways\n        if(level > 0 && prevMove != 1) res += rec(level-1, jump, 1, k);  // move type 1\n        res += rec(level + (1<<jump), jump+1, 2, k);\n        \n        dp.insert({{{level, jump}, prevMove}, res});\n        return res;\n    }\npublic:\n    int waysToReachStair(int k) {\n        dp.clear();\n        return rec(1, 0, 2, k);\n    }\n};",
    "submit_ts": "1716087974",
    "subm_id": "1261800113"
}