{
    "username": "shaswatgusain1",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int size = nums.size();\n        long long total = 0;\n        unordered_map<long long, long long> previousResults;\n        for (int index = 0; index < size; ++index) {\n            total += countSubarraysWithTarget(nums, index, k, previousResults);\n            updatePreviousResults(previousResults, nums[index]);\n        }\n        return total;\n    }\nprivate:\n    long long countSubarraysWithTarget(vector<int>& nums, int index, int k, unordered_map<long long, long long>& previousResults) {\n        long long total = 0;\n        long long target = k;\n        total += countExactMatches(nums[index], target);\n        unordered_map<long long, long long> currentResults;\n        currentResults[nums[index]] = 1;\n        for (auto& [value, frequency] : previousResults) {\n            long long newAndResult = value & nums[index];\n            total += countMatches(newAndResult, target, frequency);\n            currentResults[newAndResult] += frequency;\n        }\n        previousResults.swap(currentResults);\n        return total;\n    }\n    void updatePreviousResults(unordered_map<long long, long long>& previousResults, int num) {\n        unordered_map<long long, long long> newResults;\n        for (auto& [value, frequency] : previousResults) {\n            long long newAndResult = value & num;\n            newResults[newAndResult] += frequency;\n        }\n        previousResults.swap(newResults);\n    }\n    long long countExactMatches(long long num, long long target) {\n        return (num == target) ? 1 : 0;\n    }\n    long long countMatches(long long newAndResult, long long target, long long frequency) {\n        return (newAndResult == target) ? frequency : 0;\n    }\n};\n",
    "submit_ts": "1720280675",
    "subm_id": "1311798098"
}