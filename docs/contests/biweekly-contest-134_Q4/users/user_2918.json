{
    "username": "Sachin_kr12-456",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k){\n        int n = nums.size();\n        long long count = 0;\n        unordered_map<long long, long long>prevResults;\n        for(int i = 0; i < n; ++i){\n            if(nums[i] == k){\n                ++count;\n            }\n            count+=countValidSubarrays(prevResults, nums[i], k);\n            updateResults(prevResults, nums[i]);\n        }\n        \n        return count;\n    }\n\nprivate:\n    long long countValidSubarrays(unordered_map<long long, long long>& prevResults,long long num, int k){\n        long long count = 0;\n        for(auto& p : prevResults){\n            long long val = p.first;\n            long long freq = p.second;\n            long long newAndResult = val & num;\n            \n            if(newAndResult == k){\n                count += freq;\n            }\n        }\n        \n        return count;\n    }\n    \n    void updateResults(unordered_map<long long, long long>& prevResults, long long num){\n        unordered_map<long long, long long> currResults; \n        for(auto& p : prevResults){\n            long long val = p.first;\n            long long freq = p.second;\n            long long newAndResult = val & num;\n            currResults[newAndResult] += freq;\n        }\n        currResults[num] += 1;\n        prevResults = currResults;\n    }\n};\n",
    "submit_ts": "1720278666",
    "subm_id": "1311719068"
}