{
    "username": "Atomic5566",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int, int>> sum(n), diff(n);\n        for (int i = 0; i < n; i++) {\n            sum[i] = {points[i][0] + points[i][1], i};\n            diff[i] = {points[i][0] - points[i][1], i};\n        }\n        sort(sum.begin(), sum.end(), [&](auto& v1, auto& v2){\n            return v1.first < v2.first;\n        });\n        sort(diff.begin(), diff.end(), [&](auto& v1, auto& v2){\n            return v1.first < v2.first;\n        });\n        int ans = 1e9;\n        for (int k = 0; k < 2; k++) {\n            int d;\n            int id;\n            if (k == 0) {\n                id = sum[0].second;\n                d = sum.back().first - sum[1].first;\n            }\n            if (k == 1) {\n                id = sum.back().second;\n                d = sum[n - 2].first - sum[0].first;\n            }\n            int i = 0, j = n - 1;\n            if (diff[0].second == id) i++;\n            if (diff[n - 1].second == id) j--;\n            d = max(d, diff[j].first - diff[i].first);\n            ans = min(ans, d);\n        }\n        for (int k = 0; k < 2; k++) {\n            int id, d;\n            if (k == 0) {\n                id = diff[0].second;\n                d = diff.back().first - diff[1].first;\n            }\n            if (k == 1) {\n                id = diff.back().second;\n                d = diff[n - 2].first - diff[0].first;\n            }\n            int i = 0, j = n - 1;\n            if (sum[0].second == id) i++;\n            if (sum[n - 1].second == id) j--;\n            d = max(d, sum[j].first - sum[i].first);\n            ans = min(ans, d);\n        }\n        return ans;\n    }\n    \n};"
}