{
    "username": "wisdompeak",
    "submission": "using LL = long long;\nclass Solution {\n    vector<pair<LL,int>>row[100];\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) \n    {\n        int m = board.size(), n = board[0].size();\n        for (int i=0; i<m; i++)\n        {\n            for (int j=0; j<n; j++)\n                row[i].push_back({board[i][j], j});\n            sort(row[i].rbegin(), row[i].rend());\n        }\n        \n        LL ret = LLONG_MIN;\n        for (int a=0; a<m; a++)\n            for (int b=a+1; b<m; b++)\n                for (int c=b+1; c<m; c++)\n                {                    \n                    for (int state=0; state<27; state++)\n                    {\n                        int i = state%3;\n                        int j = state/3%3;\n                        int k = state/9%3;\n                        if (row[a][i].second == row[b][j].second) continue;\n                        if (row[a][i].second == row[c][k].second) continue;\n                        if (row[b][j].second == row[c][k].second) continue;\n                        // cout<<i<<\" \"<<j<<\" \"<<k<<endl; \n                        ret = max(ret, row[a][i].first+row[b][j].first+row[c][k].first);                        \n                    }\n                }\n        \n        return ret;        \n    }\n};",
    "submit_ts": "1723906339",
    "subm_id": "556317845"
}