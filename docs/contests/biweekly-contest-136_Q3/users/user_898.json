{
    "username": "_nobita",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n\n        for(int i=0; i<n/2; i++) {\n            for(int j=0; j<m/2; j++) {\n                int sum = grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j];\n                ans += min(sum, 4-sum);\n            }\n        }\n\n        int ones=0;\n        bool rev = false;\n        if(n%2) {\n            for(int j=0; j<m/2; j++) {\n                if(grid[n/2][j] == grid[n/2][m-1-j]) {\n                    if(grid[n/2][j] == 1)\n                        ones += 2;\n                }\n                else {\n                    rev = true;\n                    ans++;\n                }\n            }\n        }\n         if(m%2) {\n            for(int i=0; i<n/2; i++) {\n                if(grid[i][m/2] == grid[n-1-i][m/2]) {\n                    if(grid[i][m/2] == 1)\n                        ones += 2;\n                }\n                else {\n                    rev = true;\n                    ans++;\n                }\n            }\n        }\n\n        if(n%2 and m%2 and grid[n/2][m/2]==1)\n            ans++;\n        \n        if(ones%4) {\n            if(rev == false) ans += 2;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722698340",
    "subm_id": "1343177500"
}