{
    "username": "peace_prime",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int , int> map ;\n        set<int> dupli ;\n        // int ans = n - 1 ;\n        for(int i = 0 ; i < n - 1 ; i++) map[i] = i + 1 ;\n        for(int i = 0 ; i < n ; i++) dupli.insert(i) ;\n        vector<int> ans ;\n        for(auto query : queries){\n            int u = query[0] , v = query[1] ;\n            int tmp = n - 1 ;\n            if(!ans.empty()) tmp = ans.back() ;\n            if(dupli.find(u) == dupli.end()){\n                ans.push_back(tmp) ;\n                continue ;\n            }else{\n                if(dupli.find(v) == dupli.end()){\n                    ans.push_back(tmp) ;\n                    continue ;\n                }\n            }\n            int curr = map[u] ;\n            int next = v ;\n            // tmp = tmp - (next - curr) ;\n            map[u] = next ;\n            for(int i = curr ; i < next ; i++) dupli.erase(i) ;\n            ans.push_back(dupli.size() - 1) ;\n            // for(auto el : dupli) cout<<el<<\"        \" ;\n            // cout<<endl ; \n        }\n        return ans ;\n    }\n};",
    "submit_ts": "1722742201",
    "subm_id": "1343763402"
}