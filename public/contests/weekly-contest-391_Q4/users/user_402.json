{
    "username": "cjycleaner",
    "submission": "using namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<double> vd;\ntypedef vector<string> vs;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef vector<vvll> vvvll;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef vector<pll> vpll;\ntypedef vector<vpll> vvpll;\ntypedef vector<pdd> vpdd;\ntypedef vector<vd> vvd;\n#define yn(ans) printf(\"%s\\n\", (ans)?\"Yes\":\"No\");\n#define YN(ans) printf(\"%s\\n\", (ans)?\"YES\":\"NO\");\ntemplate<class T> bool chmax(T &a, T b) {\n\tif (a >= b) return false;\n\ta = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n\tif (a <= b) return false;\n\ta = b; return true;\n}\n#define FOR(i, s, e, t) for ((i) = (s); (i) < (e); (i) += (t)) \n#define REP(i, e) for (int i = 0; i < (e); ++i) \n#define REP1(i, s, e) for (int i = (s); i < (e); ++i)\n#define RREP(i, e) for (int i = (e); i >= 0; --i)\n#define RREP1(i, e, s) for (int i = (e); i >= (s); --i)\n#define all(v) v.begin(), v.end()\n#define pb push_back\n#define qb pop_back\n#define pf push_front\n#define qf pop_front\n#define maxe max_element\n#define mine min_element\nll inf = 1e18;\n#define DEBUG printf(\"%d\\n\", __LINE__); fflush(stdout);\ntemplate<class T> void print(vector<T> &v, bool withSize = false) {\n\tif (withSize) cout << v.size() << endl;\n\tREP(i, v.size()) cout << v[i] << \" \"; \n\tcout << endl;\n}\nmt19937_64 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int N = points.size();\n        multiset<int> s1, s2;\n        REP(i, N) {\n            int x = points[i][0], y = points[i][1];\n            s1.insert(x + y);\n            s2.insert(x - y);\n        }\n        \n        int ans = INT_MAX;\n        REP(i, N) {\n            int x = points[i][0], y = points[i][1];\n            s1.erase(s1.find(x + y));\n            s2.erase(s2.find(x - y));\n            int d = max(*s1.rbegin() - *s1.begin(), *s2.rbegin() - *s2.begin());\n            chmin(ans, d);\n            s1.insert(x + y);\n            s2.insert(x - y);\n        }\n        \n        return ans;\n    }\n};"
}