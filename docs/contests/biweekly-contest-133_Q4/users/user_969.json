{
    "username": "cy171",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, nums: List[List[int]]) -> int:\n        @lru_cache(None)\n        def dp(idx, curr, j):\n            if idx == n:\n                return 1\n            res = 0\n            if idx == nums[j][0]:\n                val = nums[j][1] - curr\n                if val < 0 or val > idx:\n                    return 0\n                res = dp(idx+1 , nums[j][1], j+1)\n            else:\n                for i in range(idx + 1):\n                    if curr + i > nums[j][1]:\n                        break\n                    res += dp(idx+1, curr + i, j)\n            return res % (10**9+7)\n\n        # dic = {a:b for a, b in nums}\n        nums.sort()\n        return dp(0,0,0)\n",
    "submit_ts": "1719070798",
    "subm_id": "1296832025"
}