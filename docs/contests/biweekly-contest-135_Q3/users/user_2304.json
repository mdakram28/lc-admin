{
    "username": "Kushal47",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& v, int k) {\n        map<int, int> mp0, mp1, mp2;\n        int n = v.size(), ans = n/2;\n        for(int i = 0; i < n/2; i++){\n            int lo = min(v[i], v[n-i-1]), hi = max(v[i], v[n-i-1]);\n            mp1[max(hi, k-lo)]++;\n            mp0[hi-lo]++;\n        }\n        vector<int> preSum(k+1, 0);\n        preSum[k] = 0;\n        int tot = mp1[0];\n        for(int i = 1; i <= k; i++){\n            preSum[i] = tot;\n            tot += mp1[i];\n        }\n        for(int i = k-1; i >= 0; i--){\n            mp1[i] += (mp1[i+1]);\n        }\n        for(int i = 0; i <= k; i++){\n            // cout << i << \" \" << mp0[i] << \" \" << mp1[i] << \" \" << preSum[i] << endl;\n            // int val = mp0[i];\n            int val = mp1[i];\n            val += 2*(preSum[i]);\n            val -= mp0[i];\n            ans = min(ans, val);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721490318",
    "subm_id": "1327479235"
}