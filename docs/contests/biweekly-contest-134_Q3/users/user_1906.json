{
    "username": "a0p3_p1l4rei1_5up3r",
    "submission": "#include<bits/stdc++.h> \nusing namespace std; \n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n\n#define inf   1000000000000000000 // 18 zero's // LLONG_MAX = 9223372036854775807 - 19 digits\n#define nl    \"\\n\"\nconst int MOD = 1000000007 ; // 998244353 \n\nint GCD(int a, int b){if(b == 0){return a;} return GCD(b, a % b);} // Euclidean algorithm for computing the greatest common divisor\nint LCM(int a, int b){return ((long long)a / (long long)GCD(a, b) * (long long)b) ;}\nint modpower(int x, int y, int m){long long res = 1; x = x % m; while(y > 0){if(y&1) res = (res * (long long)x) % m; y = y >> 1; x = ((long long)x * (long long)x) % m ;}return res ;} \nint mod_ADDITION(int a, int b, int m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nint mod_SUBTRACTION(int a, int b, int m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nint mod_MULTIPLICATION(int a, int b, int m) {a = a % m; b = b % m; return ((((long long)a * (long long)b) % m) + m) % m;}\nint mod_DIVISION(int a, int b, int m){a %= m , b %= m; return mod_MULTIPLICATION(a , modpower(b , m - 2 , MOD) , m);}\nlong long power(long long x, long long y){long long res = 1 ; while(y > 0) {if(y & 1) res = (res * (long long)x) ; x = ((long long)x * (long long)x) ; y = y >> 1 ;} return res ;}\nint modinv(int x){return modpower(x , MOD - 2 , MOD) ;} \nbool comparatorfunction(pair<int,int> &a, pair<int,int> &b){if(a.first != b.first){return a.first < b.first ;}return a.second > b.second ;}\n\n/* //------------------------------------------------------- Template Ends. */\n\nauto init = []() \n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 'c';\n}();\n\n\n\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& col, int k) {\n        int n=col.size();\n        for(int i=0;i<k-1;++i){\n            col.push_back(col[i]);\n        }\n        n=col.size();\n        int ans=0;\n        int cnt=0;\n        int prev=-1;\n        for(int i=0;i<n;++i){\n            if(prev==-1){\n                prev=col[i];\n                cnt+=1;\n            }\n            else if(prev==0){\n                if(col[i]==0){\n                    prev=0;\n                    cnt=1;\n                }\n                else{\n                    prev=1;\n                    cnt+=1;\n                }\n            }\n            else{\n                if(col[i]==1){\n                    prev=1;\n                    cnt=1;\n                }\n                else{\n                    prev=0;\n                    cnt+=1;\n                }\n            }\n            if(cnt>=k) ans+=1;\n        }\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1720277790",
    "subm_id": "1311680096"
}