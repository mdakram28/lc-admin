{
    "username": "kexp",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int i,j,x,y,u,v,m=queries.size(),t=n-1;\n        vector<int> ans;\n        set<pair<int,int>> st;\n        pair<int,int> p,p1,p2;\n        auto it = st.begin();\n        auto it1 = st.begin();\n        for(i=0;i<m;++i){\n            u=queries[i][0]; v = queries[i][1];\n            if (u>v) swap(u,v);\n            p.first = u; p.second = -v;\n            st.insert(p);\n            it = st.find(p);\n            if (it!=st.begin()){\n                it1 = it;--it1;\n                p1 = *it1;\n                if (-p1.second >= -p.second){\n                    st.erase(p);\n                }\n            }\n            if (st.find(p) != st.end()){\n                it = st.find(p); it1 = it;++it1;\n                t=t-(v-u-1);\n                //printf(\"%d,%d,%d\\n\",u,v,t);\n                while(it1!=st.end()){\n                    p1=*it1;++it1;\n                    //printf(\"(%d,%d)\\n\",p1.first,p1.second);\n                    if (-p.second >=-p1.second){\n                        t=t+(-p1.second-p1.first-1);\n                        st.erase(p1);\n                    }else{\n                        break;\n                    }\n                }\n            }\n            //printf(\"%d,%d,%d\\n\",u,v,t);\n            ans.push_back(t);\n        \n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722743177",
    "subm_id": "552349253"
}