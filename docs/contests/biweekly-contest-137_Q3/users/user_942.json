{
    "username": "Daniel Robinson",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        \n        \n        rows = []\n        \n        for i in range(m):\n            currow = []\n            \n            for j in range(n):\n                heappush(currow, (board[i][j], i, j))\n                                \n                if len(currow) > 3:\n                    heappop(currow)\n            \n            rows.append(currow)\n        \n        def GetMaxRows():\n            result = []\n            \n            for row in rows:\n                for tup in row:\n                    result.append(tup)\n            \n            result.sort(reverse=True)\n            \n            maxsum = float('-inf')\n            \n            for i in range(len(result)):\n                a1, a2, a3 = result[i]\n                \n                for j in range(i + 1, len(result)):\n                    b1, b2, b3 = result[j]\n                    \n                    if b2 != a2 and b3 != a3:\n                        for k in range(j + 1, len(result)):\n                            c1, c2, c3 = result[k]\n                            \n                            if c2 != a2 and c2 != b2 and c3 != a3 and c3 != b3:\n                                current = a1 + b1 + c1\n                                maxsum = max(maxsum, current)\n                           \n            return maxsum\n        \n        \n        return GetMaxRows()",
    "submit_ts": "1723909191",
    "subm_id": "1359183065"
}