{
    "username": "hhhhao-7",
    "submission": "class BITree{\npublic:\n    BITree(const vector<int>& in_nums):nums(in_nums),info(in_nums.size()+1) {\n        for (int i = 1; i <= in_nums.size(); i++) {\n            info[i] += in_nums[i - 1];\n            int nxt = i + (i & -i); // \u4e0b\u4e00\u4e2a\u5173\u952e\u533a\u95f4\u7684\u53f3\u7aef\u70b9\n            if (nxt <= in_nums.size()) {\n                info[nxt] += info[i];\n            }\n        }\n    }\n    \n    void increase(int index, int delta){\n        nums[index]+=delta;\n        index++;\n        for(;index<info.size();index += (index&(-index))){\n            info[index] += delta;\n        \n        }\n    }\n    void update(int index, int val){\n        int delta = val-nums[index];\n        nums[index] = val;\n        index++;\n        for(;index<info.size();index += (index&(-index))){\n            info[index] += delta;\n        \n        }\n    }\n    // left==-1 \u4f1a\u76f4\u63a5\u8fd4\u56de0 [0,index]\n    int query(int index){\n        int ret =0;\n        index++;\n        for(;index>0;index-=(index&(-index))){\n            ret += info[index];\n        }\n        return ret;\n    }\n    //[left, right]\n    int queryRange(int left, int right){ \n        \n        return query(right)- query(left-1);\n        \n    }\nprivate:\n    vector<int> nums;\n    vector<int> info;\n    int n;\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n\n        vector<int> ret;\n\n        vector<int> is(nums.size());\n        for(int i=1;i<is.size()-1;i++){\n\n            if(nums[i-1]< nums[i] && nums[i] > nums[i+1]){\n                is[i] = 1;\n            }\n\n        }\n\n        BITree b(is);\n\n        for(auto q: queries){\n\n            int a = q[0];\n            int l = q[1];\n            int r = q[2];\n            if(a==1){\n                if(l+1 <= r-1){\n                    ret.push_back(b.queryRange(l+1, r-1));\n                }else{\n                    ret.push_back(0);\n                }\n                \n            }else{\n                nums[l] = r;\n                if(l>0 && l<is.size()-1){\n                    if(nums[l] >nums[l-1] && nums[l]> nums[l+1]){\n                        b.update(l, 1);\n                    }else{\n                        b.update(l, 0);\n                    }\n                }\n                l = l-1;\n                if(l>0 && l<is.size()-1){\n                    if(nums[l] >nums[l-1] && nums[l]> nums[l+1]){\n                        b.update(l, 1);\n                    }else{\n                        b.update(l, 0);\n                    }\n                }\n                l=l+2;\n                if(l>0 && l<is.size()-1){\n                    if(nums[l] >nums[l-1] && nums[l]> nums[l+1]){\n                        b.update(l, 1);\n                    }else{\n                        b.update(l, 0);\n                    }\n                }\n            }\n        }\n        return ret;\n\n\n    }\n};",
    "submit_ts": 1718508758.0
}