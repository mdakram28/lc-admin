{
    "username": "yadavdipesh",
    "submission": "class Solution {\n    public int minimumDistance(int[][] A) {\n        int minsum, maxsum, mindiff, maxdiff;\n        int n = A.length;\n        \n        minsum = maxsum = A[0][0] + A[0][1];\n        int minidx = 0;\n        int maxidx = 0;\n        mindiff = maxdiff = A[0][0] - A[0][1];\n        int mindidx = 0;\n        int maxdidx = 0;\n        for (int i = 1; i < n; i++) {\n            int sum = A[i][0] + A[i][1];\n            int diff = A[i][0] - A[i][1];\n            if (sum < minsum){\n            \tminidx = i;\n                minsum = sum;\n            }\n            \t\n            else if (sum > maxsum){\n            \tmaxidx = i;\n                maxsum = sum;\n            }\n            if (diff < mindiff){\n            \tmindidx = i;\n                mindiff = diff;\n            }\n            else if (diff > maxdiff){\n            \tmaxdidx = i;\n                maxdiff = diff;\n            }\n        }\n \t\tif(maxsum - minsum > maxdiff - mindiff){\n \t\t\tint ans1 = fun(maxidx , A);\n            int ans2 = fun(minidx , A);\n            System.out.println(maxidx + \" \" +  minidx + \" f \");\n\n            return Math.min(ans1 , ans2);\n \t\t}\n \t\telse{\n            int ans1 = fun(mindidx , A);\n            int ans2 = fun(maxdidx , A);\n \t\t\tSystem.out.println(mindidx + \" \" +  maxdidx + \" s \");\n            return Math.min(ans1 , ans2);\n \t\t}\n        \n    }\n    \n    // https://www.geeksforgeeks.org/maximum-manhattan-distance-between-a-distinct-pair-from-n-coordinates/\n    int fun(int idx , int[][] A){\n        int minsum, maxsum, mindiff, maxdiff;\n        int N = A.length;\n        minsum = maxsum = A[0][0] + A[0][1];\n        mindiff = maxdiff = A[0][0] - A[0][1];\n        if(idx == 0){\n            minsum = maxsum = A[1][0] + A[1][1];\n            mindiff = maxdiff = A[1][0] - A[1][1];\n        }\n        if(idx != 0){\n            for (int i = 1; i < N; i++) {\n                if(i == idx) continue;\n                int sum = A[i][0] + A[i][1];\n                int diff = A[i][0] - A[i][1];\n                if (sum < minsum)\n                    minsum = sum;\n                else if (sum > maxsum)\n                    maxsum = sum;\n                if (diff < mindiff)\n                    mindiff = diff;\n                else if (diff > maxdiff)\n                    maxdiff = diff;\n            }\n        }\n        else{\n            for (int i = 2; i < N; i++) {\n                if(i == idx) continue;\n                int sum = A[i][0] + A[i][1];\n                int diff = A[i][0] - A[i][1];\n                if (sum < minsum)\n                    minsum = sum;\n                else if (sum > maxsum)\n                    maxsum = sum;\n                if (diff < mindiff)\n                    mindiff = diff;\n                else if (diff > maxdiff)\n                    maxdiff = diff;\n            }\n        }\n        \n \n        int maximum\n            = Math.max(maxsum - minsum, maxdiff - mindiff);\n \n       return maximum;\n    }\n}"
}