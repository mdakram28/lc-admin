{
    "username": "jonathanirvings",
    "submission": "//start of jonathanirvings' template v3.0.3 (BETA)\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int,int> pii;\ntypedef pair<LL,LL> pll;\ntypedef pair<string,string> pss;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vii;\ntypedef vector<LL> vl;\ntypedef vector<vl> vvl;\n\ndouble EPS = 1e-9;\nint INF = 1000000005;\nlong long INFF = 1000000000000000005LL;\ndouble PI = acos(-1);\nint dirx[8] = {-1,0,0,1,-1,-1,1,1};\nint diry[8] = {0,1,-1,0,-1,1,-1,1};\n\n#ifdef TESTING\n  #define DEBUG fprintf(stderr,\"====TESTING====\\n\")\n  #define VALUE(x) cerr << \"The value of \" << #x << \" is \" << x << endl\n  #define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n  #define DEBUG \n  #define VALUE(x)\n  #define debug(...)\n#endif\n\n#define FOR(a,b,c) for (int (a)=(b);(a)<(c);++(a))\n#define FORN(a,b,c) for (int (a)=(b);(a)<=(c);++(a))\n#define FORD(a,b,c) for (int (a)=(b);(a)>=(c);--(a))\n#define FORSQ(a,b,c) for (int (a)=(b);(a)*(a)<=(c);++(a))\n#define FORC(a,b,c) for (char (a)=(b);(a)<=(c);++(a))\n#define FOREACH(a,b) for (auto &(a) : (b))\n#define REP(i,n) FOR(i,0,n)\n#define REPN(i,n) FORN(i,1,n)\n#define MAX(a,b) a = max(a,b)\n#define MIN(a,b) a = min(a,b)\n#define SQR(x) ((LL)(x) * (x))\n#define RESET(a,b) memset(a,b,sizeof(a))\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define ALL(v) v.begin(),v.end()\n#define ALLA(arr,sz) arr,arr+sz\n#define SIZE(v) (int)v.size()\n#define SORT(v) sort(ALL(v))\n#define REVERSE(v) reverse(ALL(v))\n#define SORTA(arr,sz) sort(ALLA(arr,sz))\n#define REVERSEA(arr,sz) reverse(ALLA(arr,sz))\n#define PERMUTE next_permutation\n#define TC(t) while(t--)\n\ninline string IntToString(LL a){\n  char x[100];\n  sprintf(x,\"%lld\",a); string s = x;\n  return s;\n}\n\ninline LL StringToInt(string a){\n  char x[100]; LL res;\n  strcpy(x,a.c_str()); sscanf(x,\"%lld\",&res);\n  return res;\n}\n\ninline string GetString(void){\n  char x[1000005];\n  scanf(\"%s\",x); string s = x;\n  return s;\n}\n\ninline string uppercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';\n  return s;\n}\n\ninline string lowercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';\n  return s;\n}\n\ninline void OPEN (string s) {\n  #ifndef TESTING\n  freopen ((s + \".in\").c_str (), \"r\", stdin);\n  freopen ((s + \".out\").c_str (), \"w\", stdout);\n  #endif\n}\n\n#ifdef TESTING\nint main() {}\n#endif\n\n//end of jonathanirvings' template v3.0.3 (BETA)\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconstexpr int kUp = 0;\nconstexpr int kDown = 1;\n\nlong long max_weights(int N, int M, std::vector<int> X, std::vector<int> Y,\n                      std::vector<int> W) {\n  vector<vector<pair<int, int>>> fishes(N);\n\n  for (int i = 0; i < M; ++i) {\n    fishes[X[i]].push_back(make_pair(Y[i], i));\n  }\n\n  long long largest = 0;\n  vector<pair<int, long long>> up, down;\n  vector<vector<long long>> dp(M, vector<long long>(2, LLONG_MIN / 2));\n  for (int x = 0; x < N; ++x) {\n    sort(fishes[x].begin(), fishes[x].end());\n\n    if (x > 0) {\n      long long max_down = 0;\n      for (int j = (int)fishes[x].size() - 1; j >= 0; --j) {\n        int y = fishes[x][j].first;\n        int i = fishes[x][j].second;\n        while (down.size() > 0 && down.back().first > y) {\n          max_down = max(max_down, down.back().second);\n          down.pop_back();\n        }\n\n        long long &ret = dp[i][kDown];\n        ret = largest + W[i];\n        ret = max(ret, max_down + W[i]);\n        if (j + 1 < static_cast<int>(fishes[x].size())) {\n          ret = max(ret, dp[fishes[x][j + 1].second][kDown] + W[i]);\n        }\n      }\n    }\n\n    if (x >= 1) {\n      for (auto [y, i] : fishes[x - 1]) {\n        largest = max(largest, dp[i][kDown]);\n      }\n    }\n\n    long long max_up = 0;\n    for (int j = 0; j < static_cast<int>(fishes[x].size()); ++j) {\n      int y = fishes[x][j].first;\n      int i = fishes[x][j].second;\n      while (up.size() > 0 && up.back().first < y) {\n        max_up = max(max_up, up.back().second);\n        up.pop_back();\n      }\n\n      long long &ret = dp[i][kUp];\n      ret = largest + W[i];\n      ret = max(ret, max_up + W[i]);\n      if (j > 0) {\n        ret = max(ret, dp[fishes[x][j - 1].second][kUp] + W[i]);\n      }\n    }\n\n    if (x >= 1) {\n      for (auto [y, i] : fishes[x - 1]) {\n        largest = max(largest, dp[i][kUp]);\n      }\n    }\n\n    down.clear();\n    for (int j = 0; j < static_cast<int>(fishes[x].size()); ++j) {\n      down.push_back(make_pair(fishes[x][j].first, dp[fishes[x][j].second][kDown]));\n    }\n    up.clear();\n    for (int j = static_cast<int>(fishes[x].size()) - 1; j >= 0; --j) {\n      up.push_back(make_pair(fishes[x][j].first, dp[fishes[x][j].second][kUp]));\n    }  \n  }\n\n  long long answer = 0;\n  for (int i = 0; i < M; ++i) {\n    answer = max(answer, dp[i][kDown]);\n    if (X[i] + 1 < N) {\n      answer = max(answer, dp[i][kUp]);\n    }\n  }\n  return answer;\n}\n\nclass Solution {\npublic:\n  long long maximumScore(vector<vector<int>>& grid) {\n    int N = SIZE(grid);\n    vi X,Y,W;\n    REP(i,N) REP(j,N)\n    {\n      if (grid[i][j] > 0)\n      {\n        X.pb(j);\n        Y.pb(i);\n        W.pb(grid[i][j]); \n      }\n    }\n    return max_weights(N,SIZE(X),X,Y,W);\n  }\n};\n",
    "submit_ts": "1721486917",
    "subm_id": "1327369233"
}