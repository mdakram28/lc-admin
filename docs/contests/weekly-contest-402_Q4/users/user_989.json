{
    "username": "lakshaygpt28",
    "submission": "#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\n\ntypedef tree<int,null_type,less<int>, rb_tree_tag,\ntree_order_statistics_node_update> PBDS_pair;\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        PBDS_pair peaks;\n        int n = nums.size();\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                peaks.insert(i);\n            }\n        }\n        vector<int> ans;\n        for (vector<int> query: queries) {\n            if (query[0] == 1) {\n                int l = query[1], r = query[2];\n                if (r - l < 2) {\n                    ans.push_back(0);\n                } else {\n                    ans.push_back(peaks.order_of_key(r) - peaks.order_of_key(l + 1));\n                }\n            } else {\n                int idx = query[1], val = query[2];\n                int old_val = nums[idx];\n                if (old_val == val) {\n                    continue;\n                } \n                peaks.erase(idx - 1);\n                peaks.erase(idx);\n                peaks.erase(idx + 1);\n                nums[idx] = val;\n                for (int i = idx - 1; i <= idx + 1; i++) {\n                    if (i > 0 && i < n - 1) {\n                        if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                            peaks.insert(i);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508936.0
}