{
    "username": "Devanshu-Sharma",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n                          vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n        long long ans = 0;\n        int temp1 = 0, temp2 = 0;\n        int x = 1, y = 1;\n        while (temp1 < horizontalCut.size() && temp2 < verticalCut.size()) {\n            if (horizontalCut[temp1] > verticalCut[temp2]) {\n                x++;\n                ans += horizontalCut[temp1] * y;\n                temp1++;\n            } else {\n                y++;\n                ans += verticalCut[temp2] * x;\n                temp2++;\n            }\n        }\n        while (temp1 < horizontalCut.size()) {\n            ans += horizontalCut[temp1] * y;\n            temp1++;\n        }\n        while (temp2 < verticalCut.size()) {\n            ans += verticalCut[temp2] * x;\n            temp2++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925921",
    "subm_id": "1320270442"
}