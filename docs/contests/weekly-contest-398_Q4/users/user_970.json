{
    "username": "Ani_S",
    "submission": "class Solution {\n    Integer dp[][];\n    \n    public int waysToReachStair(int k) {\n        if(k == 0) {\n            return 2;\n        } \n        \n        dp = new Integer[32][32];\n        \n        return recursive(1l * k, 0, 0);\n    }\n    \n    private int recursive(long k, int jump, int sub) {\n        long pos = (1l << jump) - sub;\n        \n        if(pos > k) {\n            if(pos - 1 == k)\n                return 1;\n            return 0;\n        }\n        \n        if(dp[jump][sub] != null)\n            return dp[jump][sub];\n        \n        int withSub = recursive(k, jump + 1, sub + 1);\n        int withOutSub = recursive(k, jump + 1, sub);\n        \n        \n        return dp[jump][sub] = (withSub + withOutSub + (pos == k ? 1 : 0));\n    }\n}",
    "submit_ts": "1716089672",
    "subm_id": "1261848426"
}