{
    "username": "infallible-i3anach5b9",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n\n        def cal(grid):\n            up, down, left, right = 10 ** 18, -10 ** 18, 10 ** 18, -10 ** 18\n            for i in range(len(grid)):\n                for j in range(len(grid[0])):\n                    if grid[i][j]:\n                        up = min(up, i)\n                        down = max(down, i)\n                        left = min(left, j)\n                        right = max(right, j)\n            if up == 10**18:\n                return 0\n            return (down - up + 1) * (right - left + 1)\n\n        def getsub(x1,x2,y1,y2):\n            return [grid[x][y1:y2 + 1] for x in range(x1,x2 + 1)]\n\n        m = len(grid)\n        n = len(grid[0])\n        ans = 10**18\n        for i in range(m - 2):\n            for j in range(i + 1,m - 1):\n                ans = min(ans,cal(grid[:i + 1]) + cal(grid[i + 1:j + 1]) + cal(grid[j + 1:]))\n\n        for i in range(n - 2):\n            for j in range(i + 1,n - 1):\n                ans = min(ans,cal(getsub(0,m - 1,0,i)) + cal(getsub(0,m - 1,i + 1,j)) + cal(getsub(0,m - 1,j + 1,n - 1)))\n\n        for i in range(m - 1):\n            for j in range(n - 1):\n                ans = min(ans,cal(getsub(0,i,0,j)) + cal(getsub(0,i,j + 1,n - 1)) + cal(getsub(i + 1,m - 1,0,n - 1)))\n            for j in range(n - 1):\n                ans = min(ans, cal(getsub(0, i, 0, n - 1)) + cal(getsub(i + 1, m - 1, j + 1, n - 1)) + cal(\n                    getsub(i + 1, m - 1, 0, j)))\n\n        for j in range(n - 1):\n            for i in range(m - 1):\n                ans = min(ans,cal(getsub(0,i,0,j)) + cal(getsub(i + 1,m - 1,0,j)) + cal(getsub(0,m - 1,j + 1,n - 1)))\n            for i in range(m - 1):\n                ans = min(ans,cal(getsub(0,m - 1,0,j)) + cal(getsub(0,i,j + 1,n - 1)) + cal(getsub(i + 1,m - 1,j + 1,n - 1)))\n        return ans\n",
    "submit_ts": "1719113048",
    "subm_id": "541395553"
}