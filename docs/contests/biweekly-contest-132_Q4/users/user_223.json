{
    "username": "Remineva",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[-inf] * (k + 1) for _ in range(n)]\n        dp[0][0] = 1\n        first = [defaultdict(int) for _ in range(k + 1)]\n        first[0][nums[0]] = 1\n        M = [-1] * (k + 1)\n        m = [-1] * (k + 1)\n        iM = [-1] * (k + 1)\n        im = [-1] * (k + 1)\n        iM[0] = nums[0]\n        M[0] = 1\n        for i in range(1, n):\n            dp[i][0] = 1\n            if first[0][nums[i]] + 1 > dp[i][0]:\n                dp[i][0] = first[0][nums[i]] + 1\n            first[0][nums[i]] = max(first[0][nums[i]], dp[i][0])\n            if first[0][nums[i]] >= M[0]:\n                M[0], m[0] = first[0][nums[i]], M[0]\n                iM[0], im[0] = nums[i], iM[0]\n            elif first[0][nums[i]] > m[0]:\n                im[0] = nums[i]\n                m[0] = first[0][nums[i]]\n            for j in range(1, k + 1):\n                if first[j][nums[i]] + 1 > dp[i][j]:\n                    dp[i][j] = first[j][nums[i]] + 1\n                if iM[j-1] != nums[i]:\n                    dp[i][j] = max(dp[i][j], M[j-1] + 1)\n                else:\n                    dp[i][j] = max(dp[i][j], m[j-1] + 1)\n                first[j][nums[i]] = dp[i][j]\n                if first[j][nums[i]] >= M[j]:\n                    M[j], m[j] = first[j][nums[i]], M[j]\n                    iM[j], im[j] = nums[i], iM[j]\n                elif first[j][nums[i]] > m[j]:\n                    im[j] = nums[i]\n                    m[j] = first[j][nums[i]]\n\n        res = 1\n        for i in range(n):\n            for j in range(k + 1):\n                if dp[i][j] > res:\n                    res = dp[i][j]\n        return res",
    "submit_ts": 1717861089.0
}