{
    "username": "cake_sprinkler",
    "submission": "// flip n ^ (1 << n)\n// clear n & ~(1 << n)\n// set n | (1 << n)\n// check n & (1 << n)\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, const vector<vector<int>>& req) {\n        const int MOD = 1e9 + 7;\n        vector<int> dp(401, 0);\n        dp[0] = 1; // base case\n\n        vector<int> reqinv(n, -1);\n        for (const auto& r: req)\n            reqinv[r[0]] = r[1];\n\n        for (int i = 1; i <= n; i++) {\n            vector<int> newdp(401, 0);\n            for (int j = 0; j <= min(400, i * (i - 1) / 2); j++)\n                for (int k = 0; k <= min(i - 1, j); k++) \n                    if (j - k <= 400) \n                        newdp[j] = (newdp[j] + dp[j - k]) % MOD;\n            if (reqinv[i - 1] != -1) \n                for (int j = 0; j <= 400; j++) \n                    if (j != reqinv[i - 1]) \n                        newdp[j] = 0;\n            \n            dp = move(newdp);\n        }\n        int res = 0;\n        for (int i = 0; i <= 400; i++) \n            res = (res + dp[i]) % MOD;\n        \n        return res;\n    }\n};",
    "submit_ts": 1719071436.0
}