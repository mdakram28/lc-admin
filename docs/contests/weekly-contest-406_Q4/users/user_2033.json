{
    "username": "RACHIT37",
    "submission": "class Solution {\n    public static void reverseArray(int[] array) {\n        int left = 0, right = array.length - 1;\n        while (left < right) {\n            int temp = array[left];\n            array[left] = array[right];\n            array[right] = temp;\n            left++;\n            right--;\n        }\n    }\n\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n\n        reverseArray(horizontalCut);\n        reverseArray(verticalCut);\n\n        int h = 0, v = 0;\n        int horizontalPieces = 1, verticalPieces = 1;\n        long totalCost = 0;\n        \n        while (h < horizontalCut.length && v < verticalCut.length) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h++;\n            } else {\n                totalCost += verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v++;\n            }\n        }\n\n        while (h < horizontalCut.length) {\n            totalCost += horizontalCut[h] * verticalPieces;\n            h++;\n        }\n        \n        while (v < verticalCut.length) {\n            totalCost += verticalCut[v] * horizontalPieces;\n            v++;\n        }\n        \n        return totalCost;\n    }\n}",
    "submit_ts": "1720925998",
    "subm_id": "1320272810"
}