{
    "username": "Yilli\u00e9",
    "submission": "struct b {\n    int idx;\n    long long val;\n};\n\nclass Solution {\n    long long maxSum(vector<vector<b>>& board, int i, int n, long long sum, bitset<500>& rows) {\n        if ( n == 0 ) return sum;\n        if ( i == board.size() ) return LONG_LONG_MIN;\n\n        long long maxVal = LONG_LONG_MIN;\n\n        for ( auto& sval : board[i] ) {\n            // Skip if is taken\n            if ( rows[sval.idx] ) continue;\n            rows.set(sval.idx);\n            maxVal = max(maxVal, maxSum(board, i + 1, n - 1, sum + sval.val, rows));\n            rows.reset(sval.idx);\n        }\n\n        maxVal = max(maxVal, maxSum(board, i + 1, n, sum, rows));\n\n        return maxVal;\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        vector<vector<b>> max3(n, vector<b>(3, b{-1, -1}));\n\n        for ( int i = 0; i < n; i++ ) {\n            for ( int j = 0; j < m; j++ ) {\n                if ( max3[i][0].idx == -1 || board[i][j] > max3[i][0].val ) {\n                    max3[i][2] = max3[i][1];\n                    max3[i][1] = max3[i][0];\n                    max3[i][0].idx = j;\n                    max3[i][0].val = board[i][j];\n                }\n                else if ( max3[i][1].idx == -1 || board[i][j] > max3[i][1].val ) {\n                    max3[i][2] = max3[i][1];\n                    max3[i][1].idx = j;\n                    max3[i][1].val = board[i][j];\n                }\n                else if ( max3[i][2].idx == -1 || board[i][j] > max3[i][2].val ) {\n                    max3[i][2].idx = j;\n                    max3[i][2].val = board[i][j];\n                }\n            }\n        }\n\n        bitset<500> taken;\n        return maxSum(max3, 0, 3, 0, taken);\n    }\n};",
    "submit_ts": "1723906782",
    "subm_id": "1359072258"
}