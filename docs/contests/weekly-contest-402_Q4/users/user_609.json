{
    "username": "Akash_0P",
    "submission": "class SGTree {\n  int n;\n  vector<int> sg;\npublic:\n  SGTree(int n) {\n    this-> n = n;\n    sg = vector<int> (4 * n);\n  }\n  void update(int ind, int val, int i, int l, int r) {\n    if(r < ind || ind < l) return;\n    if(l == r) {\n      sg[i] = val;\n      return;\n    }\n    int m = (l + r)/2;\n    update(ind, val, 2*i+1, l, m), update(ind, val, 2*i+2, m+1, r);\n    sg[i] = sg[2*i+1] + sg[2*i+2];\n  }\n  void update(int ind, int val) {\n    update(ind, val, 0, 0, n-1);\n  }\n  int query(int L, int R, int i, int l, int r) {\n    if(r < L || R < l) return 0;\n    if(L <= l && r <= R) return sg[i];\n    int m = (l + r)/2;\n    return query(L, R, 2*i+1, l, m) + query(L, R, 2*i+2, m+1, r);\n  }\n  int query(int L, int R) {\n    return query(L, R, 0, 0, n-1);\n  }\n};\n\nclass Solution {\npublic:\n  vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n    int n = nums.size();\n    vector<int> ans;\n    SGTree sg(n);\n    for(int i = 1; i < n-1; i++) {\n      int x = (nums[i] > nums[i-1] && nums[i] > nums[i+1]);\n      sg.update(i, x);\n    }\n\n    auto f = [&](int i) {\n      int x = 0;\n      if(i - 1 >= 0 && i + 1 < n) {\n        x = (nums[i] > nums[i-1] && nums[i] > nums[i+1]);\n      }\n      sg.update(i, x);\n    };\n\n    for(auto i: queries) {\n      int t = i[0];\n      if(t == 1) {\n        int l = i[1], r = i[2];\n        if(r - l + 1 <= 2) {\n          ans.push_back(0);\n          continue;\n        }else {\n          int x = sg.query(l, r), y = sg.query(l, l), z = sg.query(r, r);\n          ans.push_back(x - y - z);\n        }\n\n      }else {\n        int ind = i[1], val = i[2];\n        nums[ind] = val;\n        f(ind), f(ind-1), f(ind+1);\n      }\n    }\n    return ans;\n  }\n};",
    "submit_ts": 1718507736.0
}