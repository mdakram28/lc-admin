{
    "username": "xymabinogi",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if (k == 1){\n            return string(n, '9');\n        }\n\n        \n        vector<int> coeff(n, 1);\n        for (int i = 1; i < n; i++){\n            coeff[i] = coeff[i - 1] * 10 % k;\n        }\n        \n        int mx = (n - 1) / 2 + 1;\n        \n        vector<vector<int>> f(mx, vector<int>(k, -1)); //[pos, mod value]\n        vector<vector<int>> val(mx, vector<int>(k, -1));\n        \n        for (int i = (n - 1) / 2; i >= 0; i--){\n            \n            \n            if (i == n - 1 - i){  //singular\n                for (int j = 9; j >= (i == 0 ? 1 : 0); j--){\n                    int v = (j * coeff[i]) % k;\n                    \n                    if (f[i][v] == -1){\n                        f[i][v] = 100;\n                        val[i][v] = j;\n                    }\n                    \n                }\n\n            }\n            else {\n                if (n % 2 == 0 && i == (n - 1) / 2){\n                    //first one\n                    for (int j = 9; j >= (i == 0 ? 1 : 0); j--){\n                        int v = (j * coeff[i] + j * coeff[n - 1 - i]) % k;\n                        if (f[i][v] == -1){\n                            f[i][v] = 100;\n                            val[i][v] = j;\n                        }\n                    }\n                }\n                else {\n                                     \n                    for (int j = 9; j >= (i == 0 ? 1 : 0); j--){\n                        int v = (j * coeff[i] + j * coeff[n - 1 - i]) % k;\n                        \n                        for (int q = 0; q < k; q++) if (val[i + 1][q] != -1 && f[i][(v + q) % k] == -1){\n                            f[i][(v + q) % k] = q;\n                            val[i][(v + q) % k] = j;\n                        }\n                    }\n\n                }\n            }\n    \n            \n        }\n        string res(n, '9');\n        \n        int idx = 0;\n        for (int i = 0; i <= (n - 1) / 2; i++){\n            if (n % 2 && i == (n - 1) / 2){\n                res[i] = val[i][idx] + '0';\n            }\n            else {\n                res[i] = res[n - 1 - i] = val[i][idx] + '0';\n            }\n            idx = f[i][idx];\n        }\n        \n        \n        \n        return res;\n        \n    }\n};",
    "submit_ts": "1723953297",
    "subm_id": "1359817537"
}