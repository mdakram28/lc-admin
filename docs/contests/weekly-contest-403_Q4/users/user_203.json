{
    "username": "Abhi_Srivastava",
    "submission": "class Solution {\npublic:\n    int calcarea(vector<vector<int>>& grid, int startrow, int endrow, int startcol, int endcol) {\n        int firstrow = 30, firstcol = 30, lastrow = -1, lastcol = -1;\n        for (int i = startrow; i <= endrow; i++)\n            for (int j = startcol; j <= endcol; j++)\n                if (grid[i][j] == 1) {\n                    firstrow = min(firstrow, i);\n                    firstcol = min(firstcol, j);\n                    lastrow = max(lastrow, i);\n                    lastcol = max(lastcol, j);\n                }\n        return max(lastrow - firstrow + 1, 0) * max(lastcol - firstcol + 1, 0); \n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int res = INT_MAX, n = grid.size(), m = grid[0].size();\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++) {\n                res = min(res, calcarea(grid, 0, i, 0, j) + calcarea(grid, i + 1, n - 1, 0, j) + calcarea(grid, 0, n - 1, j + 1, m - 1));\n                res = min(res, calcarea(grid, 0, i, 0, j) + calcarea(grid, 0, i, j + 1, m - 1) + calcarea(grid, i + 1, n - 1, 0, m - 1));\n                res = min(res, calcarea(grid, 0, n - 1, 0, j - 1) + calcarea(grid, 0, i, j, m - 1) + calcarea(grid, i + 1, n - 1, j, m - 1));\n                res = min(res, calcarea(grid, 0, i - 1, 0, m - 1) + calcarea(grid, i, n - 1, 0, j) + calcarea(grid, i, n - 1, j + 1, m - 1));\n                }\n        for (int i = 0; i < m; i++)\n            for (int j = i + 1; j < m; j++)\n                res = min(res, calcarea(grid, 0, n - 1, 0, i) + calcarea(grid, 0, n - 1, i + 1, j) + calcarea(grid, 0, n - 1, j + 1, m - 1));\n        for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n; j++)\n                res = min(res, calcarea(grid, 0, i, 0, m - 1) + calcarea(grid, i + 1, j, 0, m - 1) + calcarea(grid, j + 1, n - 1, 0, m - 1));\n        return res;                \n    }\n};",
    "submit_ts": 1719113227.0
}