{
    "username": "meet_katharotiya",
    "submission": "class Solution {\npublic:\n    #define ll int\n    int diameter(vector<vector<int>>g)\n    {\n        int n=g.size();\n        vector<ll> dp(n + 1, 0);\n    auto dfs = [&](ll v, ll par, auto &&dfs) -> ll\n    {\n        ll mxh = 0, mxh2 = 0;\n \n        for (auto u : g[v])\n        {\n            if (u == par)\n                continue;\n \n            ll h = dfs(u, v, dfs);\n            if (h > mxh)\n            {\n                mxh2 = mxh;\n                mxh = h;\n            }\n            else if (h > mxh2)\n                mxh2 = h;\n        }\n        if (g[v].size() == 1 && par != -1)\n            dp[v] = max(dp[v], mxh);\n        else\n            dp[v] = max(dp[v], mxh + mxh2 + 1);\n        return mxh + 1;\n    };\n    ll h = dfs(1, -1, dfs);\n    ll x = 0;\n    for (auto i : dp)\n        x = max(i, x);\n    return x-1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n            int n=e1.size()+1;\n        int m=e2.size()+1;\n        vector<vector<int>>a1(n+1),a2(m+1);\n        for(int i=0;i<e1.size();i++){\n                a1[e1[i][0]+1].push_back(e1[i][1]+1);\n                a1[e1[i][1]+1].push_back(e1[i][0]+1);\n\n        }\n                for(int i=0;i<e2.size();i++){\n                a2[e2[i][0]+1].push_back(e2[i][1]+1);\n                a2[e2[i][1]+1].push_back(e2[i][0]+1);\n\n        }\n        int d1=diameter(a1);\n        int d2=diameter(a2);\n        return max(max(d1,d2),(d1+1)/2+(d2+1)/2+1);\n        \n\n    }\n};",
    "submit_ts": "1719719748",
    "subm_id": "1304449604"
}