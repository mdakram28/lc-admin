{
    "username": "Dean Yasuda",
    "submission": "class Solution:\n  '''notes\n  * n <= 1e5: O(N Log N)\n  * start with 9999999999, different rules for each?\n  * 2, 4, 5 are ending numbers.\n  * 1 is easy\n  '''\n  def largestPalindrome(self, n: int, k: int) -> str:\n      if k in (1, 3, 9):\n        return '9' * n\n      elif k == 2:\n        if n == 1:\n          return '8'\n        else:\n          return '8' + '9' * (n - 2) + '8'\n      elif k == 4:\n        if n == 1:\n          return '8'\n        elif n == 2:\n          return '88'\n        elif n == 3:\n          return '888'\n        else:\n          return '88' + '9' * (n - 4) + '88'\n      elif k == 8:\n        if n <= 6:\n          return '8' * n\n        else:\n          return '888' + '9' * (n - 6) + '888'\n      elif k == 5:\n        if n <= 2:\n          return '5' * n\n        else:\n          return '5' + '9' * (n - 2) + '5'\n      elif k == 6:\n        if n <= 2:\n          return '6' * n\n        elif n == 3:\n          return '888'\n        elif n == 4:\n          return '8778'\n        elif n == 5:\n          return '89898'\n        elif n % 2 == 0:\n          nineRun = (n - 4) // 2\n          return '8' + '9' * nineRun + '77' + '9' * nineRun + '8'\n        else:\n          nineRun = (n - 3) // 2\n          return '8' + '9' * nineRun + '8' + '9' * nineRun + '8'\n      else:  # 7\n        if n == 1:\n          return '7'\n        elif n == 2:\n          return '77'\n        else:\n          nineRun = (n - 1) // 2\n          middleRun = 2 - (n % 2)\n          for middle in '9876543210':\n            s = '9' * nineRun + middle * middleRun + '9' * nineRun\n            if self.divide7(s):\n              return s\n\n  def divide7(self, s):\n    rem = 0\n    for ch in s:\n      rem = (rem * 10 + int(ch)) % 7\n    return rem == 0\n\n  def largestPalindromeTest(self, n, k):\n    for k in range(1, 10):\n\n      for n in range(1, 10):\n        s = self.largestPalindrome1(n, k)\n        print(f'n={n}, k={k}, s={s}')\n    return ''\n",
    "submit_ts": "1723950735",
    "subm_id": "1359753670"
}