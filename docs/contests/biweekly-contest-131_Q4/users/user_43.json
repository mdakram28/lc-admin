{
    "username": "shawnxi",
    "submission": "class ST2:\n    def __init__(self, n):  # \u8303\u56f4 [0, n-1]\n        self.n = n\n        self.st = [0 for _ in range(0, 2 ** (math.ceil(math.log2(n))) * 2)]\n        self.f = [0 for _ in range(0, 2 ** (math.ceil(math.log2(n))) * 2)]\n\n    def _set(self, i, l, r, sl, sr, k):\n        if l == r:\n            self.st[i] = k\n            return\n        if sl == l and sr == r:\n            self.st[i] = k\n            self.f[i] = 1\n            return\n        p = (l + r) // 2\n        if self.f[i]:\n            self._set(2 * i + 1, l, p, l, p, self.st[i])\n            self._set(2 * i + 2, p + 1, r, p + 1, r, self.st[i])\n            self.f[i] = 0\n        if sl <= p:\n            self._set(2 * i + 1, l, p, sl, min(sr, p), k)\n        if sr > p:\n            self._set(2 * i + 2, p + 1, r, max(sl, p + 1), sr, k)\n        self.st[i] = max(self.st[2 * i + 1], self.st[2 * i + 2]) # \u4ec5\u4ec5\u662f\u5355\u70b9\u6c42\u503c\u65f6\uff0c\u8fd9\u884c\u53bb\u6389\n\n    def _max(self, i, l, r, sl, sr):\n        if l == r:\n            return self.st[i]\n        if sl == l and sr == r:  # \u4ec5\u4ec5\u662f\u5355\u70b9\u6c42\u503c\u65f6\uff0c\u8fd9\u4e24\u884c\u53bb\u6389\n            return self.st[i]\n        if self.f[i]:\n            return self.st[i]\n        p = (l + r) // 2\n        res = -10 ** 15\n        if sl <= p:\n            res = max(res, self._max(2 * i + 1, l, p, sl, min(sr, p)))\n        if sr > p:\n            res = max(res, self._max(2 * i + 2, p + 1, r, max(sl, p + 1), sr))\n        return res\n\n    def set_range(self, l, r, k):\n        self._set(0, 0, self.n - 1, l, r, k)\n\n    def max(self, l, r):\n        return self._max(0, 0, self.n - 1, l, r)\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        \n        n = 0\n        \n        for l in queries:\n            n = max(n, l[1])\n        \n        from sortedcontainers import SortedList\n        \n        q = SortedList()\n        q.add(0)\n        \n        tmp = Counter()\n        ans = 0\n        \n        \n        \n        st = ST2(n+1)\n        \n        def put(i):\n            idx = q.bisect_right(i)-1\n            gap = i- q[idx]\n            \n            if idx+1<len(q):\n                i1 = q[idx+1]\n                gap1 = i1-i\n                st.set_range(i1,i1,gap1)\n            \n            q.add(i)\n            \n            st.set_range(i,i,gap)\n            \n            \n            \n        def get(i):\n            idx = q.bisect_right(i)-1\n            gap = i- q[idx]\n            \n            return max(st.max(0, q[idx]), gap)\n        \n        res = []\n        \n        for l in queries:\n            if l[0]==1:\n                put(l[1])\n                \n            else:\n                res.append(get(l[1])>=l[2])\n                \n        return res\n                \n            \n            \n            \n                ",
    "submit_ts": 1716649304.0
}