{
    "username": "skywalkert",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size(), ans = 0;\n        vector<int> pos;\n        for(int i = 0; i < n; ++i)\n            if(s[i] == '0')\n                pos.push_back(i);\n        int m = pos.size();\n        for(int c = 0; c <= m; ++c) {\n            if(c * c > n - c)\n                break;\n            if(!c) {\n                for(int i = 0, j; i < n; ) {\n                    for(j = i; i < n && s[i] == s[j]; ++i);\n                    if(s[j] == '1') {\n                        // printf(\"ans %d i j [%d, %d)\\n\", ans, j, i);\n                        ans += (i - j) * (i - j + 1) / 2;\n                    }\n                }\n                continue;\n            }\n            int low = c * (c + 1);\n            for(int i = 0, j = 0, rem = c; i < n; ++i) {\n                for( ; j < m && rem > 0; ++j, --rem);\n                if(rem > 0)\n                    break;\n                int L = max(i + low - 1, pos[j - 1]);\n                int R = j < m ? pos[j] : n;\n                // if(L < R)\n                //     printf(\"ans %d i %d j [%d, %d)\\n\", ans, i, L, R);\n                ans += max(R - L, 0);\n                rem += s[i] == '0';\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722135636",
    "subm_id": "1335708471"
}