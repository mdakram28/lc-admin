{
    "username": "rte_eliminator",
    "submission": "class Solution {\n    int[][] dp;\n    int mod=(int)(1e9)+7;\n    private int recn(int[] nums,int curindx,int decn,int incn){\n        if(curindx>=nums.length){\n            return 1;\n        }\n        if(dp[curindx][decn]!=-1) return dp[curindx][decn];\n        int curno=nums[curindx];\n        int count=0;\n        for(int j=0;j<=curno;j++){\n            int dcn=j;\n            int inc=curno-j;\n         //   System.out.println(dcn+\" \"+inc);\n           // System.out.println(decn+\"  \"+incn+\"  c \");\n            if(dcn<=decn && incn<=inc){\n                count=(count%mod+recn(nums,curindx+1,dcn,inc)%mod)%mod;\n            }\n            \n        }\n      //  System.out.println(curindx);\n        return dp[curindx][decn]=count%mod;\n        \n        \n        \n    }\n    public int countOfPairs(int[] nums) {\n        dp=new int[nums.length][nums[0]+3];\n       // for(int[][] dvp : dp)\n            for(int[] dv : dp)\n        Arrays.fill(dv,-1);\n        return recn(nums,0,nums[0]+1,-1)%mod;\n        \n    }\n}",
    "submit_ts": "1723345983",
    "subm_id": "1351567575"
}