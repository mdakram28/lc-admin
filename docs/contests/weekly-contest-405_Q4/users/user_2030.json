{
    "username": "vishrutgoti",
    "submission": "class Solution {\n    static class WordCost {\n        String word;\n        int cost;\n\n        WordCost(String word, int cost) {\n            this.word = word;\n            this.cost = cost;\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        Map<Character, List<WordCost>> wordMap = new HashMap<>();\n        for (int i = 0; i < words.length; i++) {\n            char startChar = words[i].charAt(0);\n            wordMap.putIfAbsent(startChar, new ArrayList<>());\n            wordMap.get(startChar).add(new WordCost(words[i], costs[i]));\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            if (!wordMap.containsKey(target.charAt(i))) continue;\n\n            List<WordCost> relevantWords = wordMap.get(target.charAt(i));\n            for (WordCost wc : relevantWords) {\n                int wordLen = wc.word.length();\n                int endIndex = i + wordLen;\n                if (endIndex <= n && target.startsWith(wc.word, i)) {\n                    if (dp[endIndex] > dp[i] + wc.cost) {\n                        dp[endIndex] = dp[i] + wc.cost;\n                    }\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}",
    "submit_ts": "1720324507",
    "subm_id": "1312401220"
}