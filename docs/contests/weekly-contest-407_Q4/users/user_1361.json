{
    "username": "Pikachu_007",
    "submission": "class Solution {\npublic:\n    long long calVal( int st, int end, vector<int> &target ){\n        vector<int> stack;\n        long long res = 0;\n\n        stack.push_back(target[st]);\n        for (int i = st+1; i<=end; i++) {\n            if (target[i] > stack.back()) {\n                stack.push_back(target[i]);\n                continue;\n            } \n            if (target[i] == stack.back())\n                continue;\n\n            int top = stack.back();\n\n            while (!stack.empty() && target[i] < stack.back())\n                stack.pop_back();\n\n            res += top - target[i];\n            stack.push_back(target[i]);\n        }\n        \n        if (!stack.empty())\n            res += stack.back();\n\n        return res;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long n = nums.size(), res = 0; vector<int> dif;\n        for ( int i = 0; i<n; i++ ) {\n            dif.push_back(target[i]-nums[i]);\n        }\n        int last = 0; vector<pair<int,int>> vec;\n        for ( int i = 1; i<n; i++ ){\n            if ( ( dif[i-1] < 0 && dif[i] >= 0 ) || \n                        ( dif[i-1] >= 0 && dif[i] < 0 ) ) {\n                vec.push_back({last,i-1});\n                last = i;\n            }\n        } vec.push_back({last,n-1});\n        for ( int i = 0; i<n; i++ ) dif[i] = abs(dif[i]);\n        for ( auto i : dif ) cout << i << \" \";\n        cout << \"\\n\";\n        for ( auto i : vec ) {\n            res += calVal(i.first,i.second,dif);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532464",
    "subm_id": "1327986460"
}