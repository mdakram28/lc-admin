{
    "username": "hemantlodha",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        priority_queue<int> minq, maxq;\n        int n = nums.size();\n        for(int i=0;i<n;i++){\n            int x = target[i]-nums[i];\n            if(x>0){\n                if(minq.size()!=0){\n                    ans+=minq.top();\n                    while(!minq.empty()){\n                        minq.pop();\n                    }\n                }\n                maxq.push(x);\n                if(maxq.top()>x){\n                    ans+=maxq.top();\n                    ans-=x;\n                    while(maxq.top()>x){\n                       maxq.pop();\n                    }\n                }\n            }\n            else{\n                if(maxq.size()!=0){\n                    ans+=maxq.top();\n                    while(!maxq.empty()){\n                        maxq.pop();\n                    }\n                }\n                \n                minq.push(-x);\n                if(minq.top()>(-x)){\n                    ans+=minq.top();\n                    ans+=x;\n                    while(minq.top()>(-x)){\n                       minq.pop();\n                    }\n                }\n            }\n            // cout<<ans<<endl;\n        }\n        if(minq.size()!=0){\n            ans+=minq.top();\n        }\n        if(maxq.size()!=0){\n            ans+=maxq.top();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531634",
    "subm_id": "1327965966"
}