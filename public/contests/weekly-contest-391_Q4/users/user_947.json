{
    "username": "dhruv_gupta123",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<pair<int,int>> sums(n),dif(n);\n        for(int i=0;i<n;i++)\n        {\n            sums[i]={points[i][0]+points[i][1],i};\n            dif[i]={points[i][0]-points[i][1],i};\n        }\n        sort(sums.begin(),sums.end());\n        sort(dif.begin(),dif.end());\n        int ans=INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            int idx1i=0,idx1j=n-1,idx2i=0,idx2j=n-1;\n            if(sums[0].second==i) idx1i++;\n            if(dif[0].second==i) idx2i++;\n            if(sums[n-1].second==i) idx1j--;\n            if(dif[n-1].second==i) idx2j--;\n            ans=min(ans,max(sums[idx1j].first-sums[idx1i].first,dif[idx2j].first-dif[idx2i].first));\n        }\n        return ans;\n    }\n};"
}