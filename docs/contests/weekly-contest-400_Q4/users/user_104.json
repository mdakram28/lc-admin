{
    "username": "dgeyfman",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        dp = [0 for _ in range(len(nums))]\n        dp[0]=set([nums[0]])\n        if len(nums)==1:\n            return abs(k-nums[0])\n        ans=abs(nums[0]-k)\n        for idx in range(1,len(nums)):\n            nxt = set()\n            nxt.add(nums[idx])\n            ans=min(ans,abs(nums[idx]-k))\n            if ans==0:\n                return 0\n            for prev in dp[idx-1]:\n                yay=prev&nums[idx]\n                ans=min(ans,abs(yay-k))\n                if ans==0:\n                    return 0\n                nxt.add(yay)\n            dp[idx] = nxt\n        return ans",
    "submit_ts": "1717297264",
    "subm_id": "1274736149"
}