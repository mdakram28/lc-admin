{
    "username": "BittuSharma",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> differenceMap;\n        vector<int> maxValues;\n        \n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i], b = nums[n - i - 1];\n            int difference = abs(a - b);\n            int maxVal = max({a, b, k - a, k - b});\n            \n            differenceMap[difference].push_back(maxVal);\n            maxValues.push_back(maxVal);\n        }\n        \n        int minChanges = n;\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (const auto& entry : differenceMap) {\n            int difference = entry.first;\n            int position = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            int currentChanges = position * 2 + (n / 2 - position);\n            \n            for (const auto& maxVal : entry.second) {\n                if (maxVal < difference) {\n                    currentChanges -= 2;\n                } else {\n                    currentChanges -= 1;\n                }\n            }\n            \n            minChanges = min(minChanges, currentChanges);\n        }\n        \n        return minChanges;\n    }\n};",
    "submit_ts": "1721489128",
    "subm_id": "1327443743"
}