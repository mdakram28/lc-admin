{
    "username": "icemore",
    "submission": "const int mod = 1000 * 1000 * 1000 + 7;\nconst int maxn = 1500;\n\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n\n        vector<int> d[2];\n        vector<pair<int, int>> v[2];\n\n        d[0].resize(maxn);\n        d[1].resize(maxn);\n        int t = 0;\n\n        for (int q = 0; q <= nums[0]; ++q) {\n            d[0][q] = 1;\n        }\n\n        v[t].emplace_back(0, 1);\n        v[t].emplace_back(nums[0] + 1, (mod-1)%mod);\n\n        for (int i = 0; i < n-1; ++i) {\n            int current = 0;\n            int j = 0;\n\n            v[1 - t].clear();\n\n            for (int q = 0; q <= nums[i]; ++q) {\n                while (j < v[t].size() && v[t][j].first <= q) {\n                    current = (current + v[t][j].second) % mod;\n                    ++j;\n                }\n\n                int start = max(max(0, q), q - nums[i] + nums[i + 1]);\n                int end = nums[i + 1];\n\n                v[1 - t].emplace_back(start, current);\n                v[1 - t].emplace_back(end + 1, (mod-current) % mod);\n            }\n            t = 1 - t;\n            sort(v[t].begin(), v[t].end());\n        }\n\n\n        int current = 0;\n        int res = 0;\n        int j = 0;\n        for (int q = 0; q <= nums[n-1]; ++q) {\n            while (j < v[t].size() && v[t][j].first <= q) {\n                current = (current + v[t][j].second) % mod;\n                ++j;\n            }\n\n            res = (res + current) % mod;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723348204",
    "subm_id": "1351613579"
}