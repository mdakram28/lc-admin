{
    "username": "chun-zi-a",
    "submission": "class Solution {\npublic:\n    struct mycmp1{\n        bool operator()(vector<int>& v1,vector<int>& v2){\n            return v1[1]+v1[2]<v2[1]+v2[2];\n        }\n    };\n    struct mycmp2{\n        bool operator()(vector<int>& v1,vector<int>& v2){\n            return v1[1]+v1[2]>v2[1]+v2[2];\n        }\n    };\n    struct mycmp3{\n        bool operator()(vector<int>& v1,vector<int>& v2){\n            return v1[1]-v1[2]<v2[1]-v2[2];\n        }\n    };\n    struct mycmp4{\n        bool operator()(vector<int>& v1,vector<int>& v2){\n            return v1[1]-v1[2]>v2[1]-v2[2];\n        }\n    };\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        priority_queue<vector<int>,vector<vector<int>>,mycmp1> heap1;\n        priority_queue<vector<int>,vector<vector<int>>,mycmp2> heap2;\n        priority_queue<vector<int>,vector<vector<int>>,mycmp3> heap3;\n        priority_queue<vector<int>,vector<vector<int>>,mycmp4> heap4;\n        int n=points.size();\n        for(int i=0;i<n;++i){\n            heap1.push({i,points[i][0],points[i][1]});\n            heap2.push({i,points[i][0],points[i][1]});\n            heap3.push({i,points[i][0],points[i][1]});\n            heap4.push({i,points[i][0],points[i][1]});\n        }\n        int res=INT_MAX;\n        for(int i=0;i<n;++i){\n            bool flag1=0,flag2=0,flag3=0,flag4=0;\n            if(heap1.top()[0]==i){\n                heap1.pop();flag1=1;\n            }\n            if(heap2.top()[0]==i){\n                heap2.pop();flag2=1;\n            }\n            if(heap3.top()[0]==i){\n                heap3.pop();flag3=1;\n            }\n            if(heap4.top()[0]==i){\n                heap4.pop();flag4=1;\n            }\n            int val=max(heap1.top()[1]+heap1.top()[2]-(heap2.top()[1]+heap2.top()[2])\n            ,heap3.top()[1]-heap3.top()[2]-(heap4.top()[1]-heap4.top()[2]));\n            res=min(res,val);\n            if(flag2){\n                heap2.push({i,points[i][0],points[i][1]});\n            }\n            if(flag1){\n                heap1.push({i,points[i][0],points[i][1]});\n            }\n            if(flag3){\n                heap3.push({i,points[i][0],points[i][1]});\n            }\n            if(flag4){\n                heap4.push({i,points[i][0],points[i][1]});\n            }\n        }\n        return res;\n    }\n};"
}