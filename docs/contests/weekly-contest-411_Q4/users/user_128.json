{
    "username": "\u6b22\u8fce\u4e1a\u4e3b\u56de\u5bb6",
    "submission": "class Solution {\n  public:\n    using ll = long long;\n\n    vector<long long> countKConstraintSubstrings(string s, int k,\n                                                 vector<vector<int>> &queries) {\n        int n = (int)s.size(), qn = (int)queries.size();\n\n        vector<int> endpoints(n);\n        int l = 0, r = 0, zeros = 0, ones = 0;\n        for (; r < n; r++) {\n            if (s[r] == '0') {\n                ++zeros;\n            } else {\n                ++ones;\n            }\n\n            while (zeros > k && ones > k) {\n                if (s[l] == '0') {\n                    --zeros;\n                } else {\n                    --ones;\n                }\n                ++l;\n            }\n            endpoints[r] = l;\n        }\n\n        vector<ll> prefix(n);\n        for (int i = 0; i < n; i++) {\n            // if enpoints are beyond left bound\n            prefix[i] = (i == 0 ? 0 : prefix[i - 1]) + (i - endpoints[i] + 1);\n        }\n\n        vector<ll> res(qn, 0);\n        for (int i = 0; i < qn; i++) {\n            int li = queries[i][0];\n            int ri = queries[i][1];\n\n            auto it = lower_bound(endpoints.begin() + li,\n                                  endpoints.begin() + ri + 1, li) -\n                      endpoints.begin();\n            if (it > ri) { // all second part, [li, ri] \u8303\u56f4\u5185\u6240\u6709\u5143\u7d20\u90fd\u5c0f\u4e8e li\n                           // \u90a3\u4e48\u662f\u6240\u6709\u5b50\u6570\u7ec4\n                res[i] = (ll)(ri - li + 1) * (ri - li + 2) / 2;\n            } else if (it == li) { // [li, ri] \u8303\u56f4\u5185\u6240\u6709\u5143\u7d20\u90fd\u5927\u4e8e li\n                res[i] = prefix[ri] - (li == 0 ? 0 : prefix[li - 1]);\n            } else { // [li, ri] it \u53f3\u8fb9\u548c\u7684\u5927\u4e8e \u5de6\u8fb9\u7684\u5c0f\u4e8e\n                // \u53f3\u8fb9\u7684\u91c7\u7528prefix\n                res[i] = prefix[ri] - prefix[it - 1];\n                // \u5de6\u8fb9\u91c7\u7528\n                res[i] += (ll)(it - li) * (it - li + 1) / 2;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723950974",
    "subm_id": "556402480"
}