{
    "username": "yuzining",
    "submission": "\n//c\n#ifndef _GLIBCXX_NO_ASSERT\n#include<cassert>\n#endif\n#include<cctype>\n#include<cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n \n#if __cplusplus >= 201103L\n#include <ccomplex>\n#include <cfenv>\n#include <cinttypes>\n#include <cstdalign>\n#include <cstdbool>\n#include <cstdint>\n#include <ctgmath>\n#include <cwchar>\n#include <cwctype>\n#endif\n \n// C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n \n#if __cplusplus >= 201103L\n#include <array>\n#include <atomic>\n#include <chrono>\n#include <condition_variable>\n#include <forward_list>\n#include <future>\n#include <initializer_list>\n#include <mutex>\n#include <random>\n#include <ratio>\n#include <regex>\n#include <scoped_allocator>\n#include <system_error>\n#include <thread>\n#include <tuple>\n#include <typeindex>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n#endif\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        std::set<tuple<int, int, int>> st;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                st.insert(std::make_tuple(board[i][j], i, j));\n                if (st.size() > 211) {\n                    st.erase(st.begin());\n                }\n            }\n        }\n        std::vector<std::tuple<int, int, int>> v;\n        for (auto& t : st) {\n            v.emplace_back(t);\n        }\n        long long ans = LLONG_MIN;\n        int k = v.size();\n        for (int i = 0; i < k; i++) {\n            for (int j = i + 1; j < k; j++) {\n                for (int l = j + 1; l < k; l++) {\n                    int x1 = std::get<1>(v[i]);\n                    int y1 = std::get<2>(v[i]);\n                    int x2 = std::get<1>(v[j]);\n                    int y2 = std::get<2>(v[j]);\n                    int x3 = std::get<1>(v[l]);\n                    int y3 = std::get<2>(v[l]);\n                    if (x1 == x2 || x2 == x3 || x1 == x3) {\n                        continue;\n                    }\n                    if (y1 == y2 || y2 == y3 || y1 == y3) {\n                        continue;\n                    }\n                    ans = std::max(ans, 0ll + std::get<0>(v[i]) + std::get<0>(v[j]) + std::get<0>(v[l]));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723906839",
    "subm_id": "556322034"
}