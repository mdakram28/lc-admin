{
    "username": "Prince0507",
    "submission": "class Solution {\npublic:\n    \n    void f(vector<vector<int>>& grid, int start, int end, int mid, vector<int>& nums, bool fl) {\n        while (start < end) {\n            int sum;\n            if (fl) {\n                sum = grid[mid][start] + grid[mid][end];\n            } else {\n                sum = grid[start][mid] + grid[end][mid];\n            }\n            nums[sum] += 1;\n            start += 1;\n            end -= 1;\n        }\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n\n        if (m % 2 == 1 && n % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n\n        vector<int> nums(3, 0);\n        if (m % 2 == 1) {\n            f(grid, 0, n - 1, m / 2, nums, false);\n        }\n        if (n % 2 == 1) {\n            f(grid, 0, m - 1, n / 2, nums, true);\n        }\n\n        \n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                \n                int p = grid[n - 1 - i][j];\n                int q = grid[i][m - 1 - j];\n                int r = grid[i][j];\n                int s = grid[n - 1 - i][m - 1 - j];\n\n                int sum = p + q + r + s;\n\n                if (sum != 0 && sum != 4) {\n                    ans += min(sum, 4 - sum);\n                }\n            }\n        }\n        \n        if (nums[2] % 2 == 1) {\n            if (nums[1] > 0) {\n                ans += nums[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += nums[1];\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1722700040",
    "subm_id": "1343229861"
}