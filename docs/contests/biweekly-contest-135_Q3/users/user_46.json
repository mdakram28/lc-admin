{
    "username": "Fasdr",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        int m = n / 2;\n        int[][] absMaxX = new int[m][2];\n        for (int i = 0; i < m; i++) {\n            int n1 = nums[i], n2 = nums[n - i - 1];\n            absMaxX[i][0] = Math.abs(n1 - n2);\n            absMaxX[i][1] = Math.max(k - Math.min(n1, n2), Math.max(n1, n2));\n        }\n        Arrays.sort(absMaxX, (a,b) -> -a[1] + b[1]);\n        // System.out.println(Arrays.deepToString(absMaxX));\n        Map<Integer, Integer> total = new HashMap<>();\n        Map<Integer, Integer> inside = new HashMap<>();\n        for (int[] a : absMaxX)\n            total.put(a[0], 1 + total.getOrDefault(a[0], 0));\n        int res = m * 2;\n        int i = 0;\n        // System.out.println(Arrays.deepToString(absMaxX));\n        // System.out.println(total);\n        while (k >= 0) {\n            // add new element\n            while (i < m && absMaxX[i][1] >= k) {\n                int a = absMaxX[i][0];\n                inside.put(a, 1 + inside.getOrDefault(a, 0));\n                i++;\n            }\n            int ins = inside.getOrDefault(k, 0);\n            int outs = (m - i) - (total.getOrDefault(k, 0) - ins);\n            res = Math.min(res,\n                outs * 2 + i - ins);\n            // System.out.println(k);\n            // System.out.println(res);\n            // System.out.println(ins);\n            // System.out.println(outs);\n            // System.out.println();\n            k--;\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1721488549",
    "subm_id": "1327425720"
}