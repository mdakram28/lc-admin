{
    "username": "parth_gujral_",
    "submission": "class Solution {\npublic:\n    void verY_confusing(){\n        int hj=78;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n         long long COunt_aNs = 0;\n       int n = nums.size();\n    verY_confusing();\n     unordered_map<long long, long long> track_piche; \n    \n    for (int num : nums)\n    {\n        \n         verY_confusing();\n        \n        \n        unordered_map<long long, long long> track_curnt;\n        \n        track_curnt[num]++;\n        \n        for (const auto& it : track_piche) {\n            verY_confusing();\n            \n                int value = it.first;\n            verY_confusing();\n                int store_freq = it.second;\n            verY_confusing();\n                int new_value_and = value & num;\n            verY_confusing();\n                track_curnt[new_value_and] += store_freq;\n            verY_confusing();\n              }\n\n        \n        if (track_curnt.find(k) != track_curnt.end()) \n        {\n            verY_confusing();verY_confusing();\n            COunt_aNs += track_curnt[k];\n            \n            verY_confusing();\n        }\n        \n        verY_confusing();\n        track_piche = track_curnt;\n        \n        verY_confusing();\n    }\n        verY_confusing();\n    \n    return COunt_aNs;\n    }\n};",
    "submit_ts": "1720278499",
    "subm_id": "1311711801"
}