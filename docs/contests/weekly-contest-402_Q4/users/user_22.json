{
    "username": "arignote",
    "submission": "class Solution {\n\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        NumArray array = new NumArray(new int[nums.length]);\n        for (int i = 1; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                array.update(i, 1);\n            }\n        }\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int[] query : queries) {\n            if (query[0] == 1) {\n                list.add(Math.max(0, array.sumRange(query[1] + 1, query[2] - 1)));\n            } else {\n                for (int i = query[1] - 1; i <= query[1] + 1; i++) {\n                    if (i > 0 && i < nums.length - 1 && nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        array.update(i, 0);\n                    }\n                }\n                nums[query[1]] = query[2];\n                for (int i = query[1] - 1; i <= query[1] + 1; i++) {\n                    if (i > 0 && i < nums.length - 1 && nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        array.update(i, 1);\n                    }\n                }\n            }\n        }\n        return list;\n    }\n}\n\nclass NumArray {\n    private int[] tree;\n    private int[] nums;\n\n    public NumArray(int[] nums) {\n        this.tree = new int[nums.length + 1];\n        this.nums = nums;\n        for (int i = 0; i < nums.length; i++) {\n            add(i + 1, nums[i]);\n        }\n    }\n\n    public void update(int index, int val) {\n        add(index + 1, val - nums[index]);\n        nums[index] = val;\n    }\n\n    public int sumRange(int left, int right) {\n        return prefixSum(right + 1) - prefixSum(left);\n    }\n\n    private int lowBit(int x) {\n        return x & -x;\n    }\n\n    private void add(int index, int val) {\n        while (index < tree.length) {\n            tree[index] += val;\n            index += lowBit(index);\n        }\n    }\n\n    private int prefixSum(int index) {\n        int sum = 0;\n        while (index > 0) {\n            sum += tree[index];\n            index -= lowBit(index);\n        }\n        return sum;\n    }\n}",
    "submit_ts": 1718505668.0
}