{
    "username": "a0920732333",
    "submission": "class Solution \n{\npublic:\n    vector<priority_queue<pair<int, int>>> times;\n    vector<vector<int>> adj;\n    vector<int> ans;\n    //dfs, postorder\n    int postorder(int ptr, int parent)\n    {\n        int t = 0;\n        for(auto& it : adj[ptr])\n        {\n            if(it == parent)\n            {\n                continue;\n            }\n            int ct = postorder(it, ptr);\n            times[ptr].push({ct, it});\n            t = max(t, ct);\n        }\n        if(parent == -1)\n        {\n            return t;\n        }\n        return t + ((ptr & 1) ? 1 : 2);\n    }\n    void dfs(int ptr, int parent)\n    {\n        int ptrt = (ptr & 1) ? 1 : 2;\n        for(auto& it : adj[ptr])\n        {\n            if(it == parent)\n            {\n                continue;\n            }\n            if(adj[ptr].size() == 1)\n            {\n                times[it].push({ptrt, ptr});\n            }\n            else\n            {\n                if(times[ptr].top().second == it)\n                {\n                    pair<int, int> buf = times[ptr].top();\n                    times[ptr].pop();\n                    times[it].push({times[ptr].top().first + ptrt, ptr});\n                    times[ptr].push(buf);\n                }\n                else\n                {\n                    times[it].push({times[ptr].top().first + ptrt, ptr});\n                }\n            }\n            dfs(it, ptr);\n        }\n        if(parent == -1)\n        {\n            return;\n        }\n        ans[ptr] = times[ptr].top().first;\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) \n    {\n        int n = edges.size() + 1;\n        times.resize(n);\n        adj.resize(n);\n        ans.resize(n);\n        for(auto& it : edges)\n        {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        ans[0] = postorder(0, -1);\n        // for(int i = 0; i < n; i++)\n        // {\n        //     ans[i] = postorder(i, -1);\n        // }\n        dfs(0, -1);\n        return ans;\n    }\n};",
    "submit_ts": "1722699133",
    "subm_id": "1343202455"
}