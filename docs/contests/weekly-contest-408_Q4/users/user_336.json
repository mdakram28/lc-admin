{
    "username": "lcb2022010",
    "submission": "class Solution:\n    def canReachCorner(self, v1: int, v2: int, v3: List[List[int]]) -> bool:\n        v4 = [(a, b, c) for a, b, c in v3]\n        g = self.v5(v4, v1, v2)\n        return not self.v6(g, len(v4))\n\n    def v5(self, v4, v1, v2):\n        v7 = len(v4)\n        g = [[] for _ in range(v7 + 4)]\n        \n        for i, (a, b, c) in enumerate(v4):\n            self.v8(g, i, a, b, c, v1, v2, v7)\n            self.v9(g, i, v4)\n        \n        return g\n\n    def v8(self, g, i, a, b, c, v1, v2, v7):\n        if a <= c:\n            g[v7].append(i)\n            g[i].append(v7)\n        if v1 - a <= c:\n            g[v7 + 2].append(i)\n            g[i].append(v7 + 2)\n        if b <= c:\n            g[v7 + 1].append(i)\n            g[i].append(v7 + 1)\n        if v2 - b <= c:\n            g[v7 + 3].append(i)\n            g[i].append(v7 + 3)\n\n    def v9(self, g, i, v4):\n        for j in range(i + 1, len(v4)):\n            a1, b1, c1 = v4[i]\n            a2, b2, c2 = v4[j]\n            d = math.sqrt((a1 - a2) ** 2 + (b1 - b2) ** 2)\n            if c1 + c2 >= d:\n                g[i].append(j)\n                g[j].append(i)\n\n    def v10(self, g, s, t1, t2, v7):\n        q = deque([s])\n        vis = [0] * (v7 + 4)\n        vis[s] = 1\n        \n        while q:\n            u = q.popleft()\n            for v in g[u]:\n                if not vis[v]:\n                    q.append(v)\n                    vis[v] = 1\n        \n        return vis[t1] or vis[t2]\n\n    def v6(self, g, v7):\n        return max(self.v10(g, v7, v7 + 1, v7 + 2, v7 + 4),\n                   self.v10(g, v7 + 3, v7 + 2, v7 + 1, v7 + 4))\n\n\n",
    "submit_ts": "1722137040",
    "subm_id": "1335752376"
}