{
    "username": "Aditya_DHANGAR_06",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    vector<pair<int, char>> cuts;\n    for (int i = 0; i < horizontalCut.size(); ++i) {\n        cuts.push_back({horizontalCut[i], 'h'});\n    }\n    for (int j = 0; j < verticalCut.size(); ++j) {\n        cuts.push_back({verticalCut[j], 'v'});\n    }\n    sort(cuts.begin(), cuts.end(), greater<pair<int, char>>());\n    long long totalCost = 0;\n    int horizontalParts = 1;\n    int verticalParts = 1;\n    for (auto& cut : cuts) {\n        if (cut.second == 'h') {\n            totalCost += cut.first * verticalParts;\n            horizontalParts++;\n        } else {\n            totalCost += cut.first * horizontalParts;\n            verticalParts++;\n        }\n    }\n    return totalCost;  \n    }\n};",
    "submit_ts": "1720925179",
    "subm_id": "1320245703"
}