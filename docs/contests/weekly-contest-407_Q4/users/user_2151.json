{
    "username": "_aaditya1612_",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n\n        int len = nums.length;\n        long operations = 0;\n        long borrowIncrease = 0;\n        long borrowDecrease = 0;\n\n        for(int index = 0; index < len; index++){\n            if(nums[index] < target[index]){\n                if(target[index] - nums[index] > borrowIncrease) { \n                        operations += (target[index]*1l - nums[index]*1l - borrowIncrease); \n                        borrowIncrease += (target[index]*1l - nums[index]*1l - borrowIncrease); \n                        borrowDecrease = 0;\n                }\n                else{\n                    borrowIncrease = borrowIncrease == 0 \n                    ? target[index]*1l - nums[index]*1l\n                    : Math.min(borrowIncrease, target[index]*1l - nums[index]*1l);\n                    borrowDecrease = 0;\n                }\n\n            } else if(nums[index] > target[index]){\n                if(nums[index] - target[index] > borrowDecrease) { \n                        operations += (nums[index]*1l - target[index]*1l - borrowDecrease); \n                        borrowDecrease += (nums[index]*1l - target[index]*1l - borrowDecrease);\n                        borrowIncrease = 0;\n                }\n                else{\n                    borrowDecrease = borrowDecrease == 0 \n                    ?  nums[index]*1l - target[index]*1l\n                    : Math.min(borrowDecrease, nums[index]*1l - target[index]*1l);\n                    borrowIncrease = 0;\n                }\n            } else{\n                borrowDecrease = 0;\n                borrowIncrease = 0;\n            }\n        }\n\n        return operations;\n    }\n}",
    "submit_ts": "1721533449",
    "subm_id": "1328009209"
}