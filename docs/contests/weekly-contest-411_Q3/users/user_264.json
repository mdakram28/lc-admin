{
    "username": "John",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in {1, 3, 9}:\n            return \"9\" * n\n        \n        if k == 2:\n            if n == 1:\n                return \"8\"\n            return \"8\" + \"9\" * (n - 2) + \"8\"\n        \n        if k == 4:\n            if n == 1:\n                return \"8\"\n            if n == 2:\n                return \"88\"\n            if n == 3:\n                return \"888\"\n            \n            return \"88\" + \"9\" * (n - 4) + \"88\"\n            \n            \n        if k == 8:\n            if n <= 6:\n                return \"8\" * n\n            return \"888\" + \"9\" * (n - 6) + \"888\"\n            \n        \n        if k == 5:\n            if n == 1:\n                return \"5\"\n            if n == 2:\n                return \"55\"\n            return \"5\" + \"9\" * (n - 2) + \"5\"\n        \n        if k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            if n % 2:\n                return \"8\" + \"9\" * ((n - 3) // 2) + \"8\" + \"9\" * ((n - 3) // 2) + \"8\"\n            \n            return \"8\" + \"9\" * ((n - 4) // 2) + \"77\" + \"9\" * ((n - 4) // 2) + \"8\"\n        \n        \n        if k == 7:\n            \n            mod_sevens = []\n            \n            cur_mod = 2\n            \n            for i in range(n):\n                mod_sevens.append(cur_mod)\n                cur_mod *= 10\n                cur_mod %= 7\n            \n            if n % 2:\n                single_num_mod = 1\n\n                for i in range(n // 2):\n                    single_num_mod *= 10\n                    single_num_mod %= 7\n\n                cur_num = 9\n                cur_sum = sum(mod_sevens)\n\n                while cur_sum % 7:\n                    cur_sum -= single_num_mod\n                    cur_num -= 1\n                    \n                return \"9\" * (n // 2) + str(cur_num) + \"9\" * (n // 2)\n            \n            else:\n                single_num_mod = 1\n                other_thing = 1\n\n                for i in range(n // 2 - 1):\n                    single_num_mod *= 10\n                    single_num_mod %= 7\n                    \n                for i in range(n // 2):\n                    other_thing *= 10\n                    other_thing %= 7\n                    \n                single_num_mod += other_thing\n                cur_sum = sum(mod_sevens)\n                cur_num = 9\n                \n                while cur_sum % 7:\n                    cur_sum -= single_num_mod\n                    cur_num -= 1\n                    \n                return \"9\" * (n // 2 - 1) + str(cur_num) * 2 + \"9\" * (n // 2 - 1)\n                \n        ",
    "submit_ts": "1723950415",
    "subm_id": "1359745399"
}