{
    "username": "qinzhe",
    "submission": "class Solution(object):\n    def maxDistance(self, points):\n        n = len(points)\n        p = [[None] * n for _ in range(4)]\n        for i in range(n):\n            p[0][i] = (points[i][0] + points[i][1], i)\n            p[1][i] = (-points[i][0] + points[i][1], i)\n            p[2][i] = (points[i][0] - points[i][1], i)\n            p[3][i] = (-points[i][0] - points[i][1], i)\n        \n        for i in range(4):\n            p[i].sort()\n\n\n        ans = 0\n        max_index = (-1, -1)\n        for i in range(4):\n            if p[i][n - 1][0] - p[i][0][0] > ans:\n                max_index = (p[i][n - 1][1], p[i][0][1])\n            ans = max(ans, p[i][n - 1][0] - p[i][0][0])\n        return ans, max_index\n    \n    def minimumDistance(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n        _, max_index = self.maxDistance(points)\n        index1, index2 = max_index\n        ans1, _ = self.maxDistance(points[: index1] + points[index1 + 1: ])\n        ans2, _ = self.maxDistance(points[: index2] + points[index2 + 1: ])\n        return min(ans1, ans2)"
}