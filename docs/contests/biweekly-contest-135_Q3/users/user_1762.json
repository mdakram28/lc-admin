{
    "username": "Ayanerru",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        from sortedcontainers import SortedList\n        sl = SortedList()\n        # sl.remove(1)\n        # print(sl)\n        cnt = collections.defaultdict(list)\n        \n        dp = [0] * (k+6)\n        for i in range(n//2):\n            # print(i)\n            diff = abs(nums[i] - nums[n-1-i])\n            mn, mx = min(nums[i], nums[n-1-i]), max(nums[i], nums[n-1-i])\n            limit = max(mx+1, k-mn+1)\n            dp[limit] += 1\n            \n            sl.add(mn)\n            cnt[diff].append(mn)\n        \n        # print(cnt)\n        ans = n // 2\n\n        \n        extra = 0\n        for diff in range(0, k+1):\n            extra += dp[diff]\n            \n            if diff in cnt:\n                for val in cnt[diff]:\n                    sl.remove(val)\n            # print('diff:', diff)\n            # print('partial sl', sl)\n                \n            upper = sl.bisect_right(k-diff)\n            mod1 = upper\n            mod2 = (len(sl) - upper)\n            ans = min(ans, mod1 + mod2 + extra)\n            \n            if diff in cnt:\n                for val in cnt[diff]:\n                    sl.add(val)\n            \n        # print(cnt)\n        return ans",
    "submit_ts": "1721489802",
    "subm_id": "1327464242"
}