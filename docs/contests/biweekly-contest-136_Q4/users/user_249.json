{
    "username": "NotFisrt",
    "submission": "class Solution {\npublic:\n   \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n    vector<vector<int>> adj;\n    vector<int> store, ans, timer;\n        int sz = edges.size();\n        adj.resize(sz + 1);\n        store.resize(sz + 1);\n        timer.resize(sz + 1);\n        ans.resize(sz + 1);\n        for (int i = 0; i < sz; i++) {\n            int u = edges[i][0], v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        auto dfs = [&](auto&& self, int u, int p, int val) -> void {\n            store[u] = val;\n            timer[u] = val;\n            for (auto v : adj[u]) {\n                if (v == p) continue;\n                if (v % 2 == 0) self(self, v, u, val + 2);\n                else self(self, v, u, val + 1);\n                store[u] = max(store[u], store[v]);\n            }\n        };\n        auto dfs2 = [&](auto&& self, int u, int p, int top) -> void {\n            ans[u] = max(store[u] - timer[u], top);\n            vector<int> temp;\n            for (auto v : adj[u]) {\n                if (v == p) continue;\n                temp.push_back(store[v]);\n            }\n            int n = temp.size();\n            vector<int> pre(n), suf(n);\n            if (n >= 1) {\n                pre[0] = temp[0];\n                suf[n - 1] = temp[n - 1];\n            }\n            for (int i = 1; i < n; i++) pre[i] = max(pre[i - 1], temp[i]);\n            for (int i = n - 2; i >= 0; i--) suf[i] = max(suf[i + 1], temp[i]);\n            int cnt = 0;\n            for (auto v : adj[u]) {\n                if (v == p) continue;\n                int mx = timer[u];\n                if (cnt == 0 && n > 1) mx = max(mx, suf[cnt + 1]);\n                else if (cnt == n - 1 && n > 1) mx = max(mx, pre[cnt - 1]);\n                else if (n > 2) mx = max(mx, max(pre[cnt - 1], suf[cnt + 1]));\n                int extra = (u % 2 == 0) ? 2 : 1;\n                mx = max(top + extra, mx - (timer[u] - extra));\n                self(self, v, u, mx);\n                cnt++;\n            }\n        };\n\n        dfs(dfs, 0, -1, 0);\n        dfs2(dfs2, 0, -1, 0);\n        return ans;\n    }\n};\n",
    "submit_ts": "1722700260",
    "subm_id": "1343236473"
}