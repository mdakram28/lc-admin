{
    "username": "raghu30",
    "submission": "class Solution {\npublic:\n    int getPatterns(vector<int> &pat, vector<int> &a, int k, int sz) {\n        vector<int> vec;\n        for(auto el:pat) {\n            vec.push_back(el);\n        }\n        vec.push_back(-1);\n        for(auto el:a) {\n            vec.push_back(el);\n        }\n        int n = vec.size();\n        vector<int> pi (n);\n        \n        for(int i=1; i<n; i++){\n            int j= pi[i-1];\n            \n            while(j>0 && vec[i] != vec[j]){\n                j = pi[j-1];\n            }\n            \n            if(vec[i]==vec[j]){\n                j++;\n            }\n            \n            pi[i] = j;\n        }\n        int ans = 0;\n        for(int i=pi.size()-1; i>=k+1+sz; i--) {\n            if(pi[i] == k) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int sz = colors.size();\n        vector<int> a;\n        for(auto el:colors) {\n            a.push_back(el);\n        }\n        for(auto el:colors) {\n            a.push_back(el);\n        }\n        int n = a.size();\n        \n        vector<int> pattern1;\n        vector<int> pattern2;\n        \n        for(int i=0; i<k; i++) {\n            pattern1.push_back(i%2);\n            pattern2.push_back((i+1)%2);\n        }\n        int ans = getPatterns(pattern1, a, k, sz);\n        ans = ans + getPatterns(pattern2, a, k, sz);\n        \n        return ans;\n    }\n};\n\n\n\n\n\n\n\n\n\n",
    "submit_ts": "1720279759",
    "subm_id": "1311763991"
}