{
    "username": "dhQ9olDGkC",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        int ans = 0;\n        if (k <= 1)\n            ans = 1;\n        for (int j = 0; j < 30; j++) {\n            int mx = (1 << (j + 1)) - 1;\n            if (1 + mx < k)\n                    continue;\n            int extra = (1 + mx - k);\n            int spots = j + 2;\n            if (extra > spots)\n                    continue;\n            vector<int> dp(extra + 1);\n            dp[0] = 1;\n            for (int i = 0; i < spots; i++) {\n                for (int j = extra; j >= 1; j--) {\n                    dp[j] += dp[j - 1];\n                }\n            }\n            ans += dp[extra];\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716088586.0
}