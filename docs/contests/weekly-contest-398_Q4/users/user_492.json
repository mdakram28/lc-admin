{
    "username": "sandbag",
    "submission": "class Solution {\npublic:\n    \n    long long dfs(long long pos, bool canDown, map<array<long long, 3>, long long>& dp, long long jump, long long k) {\n        if (pos > k+1) return 0;\n        if (dp.count({pos, canDown, jump})) return dp[{pos,canDown, jump}];\n        long long ans = (pos==k);\n        ans += dfs(pos + (1LL << jump), true, dp, jump+1, k);\n        if (canDown && pos) ans += dfs(pos-1, false, dp, jump, k);\n        return dp[{pos, canDown, jump}] = ans;\n    }\n    int waysToReachStair(int k) {\n        map<array<long long, 3>, long long> dp;    \n        return dfs(1, true, dp, 0, k);\n    }\n};",
    "submit_ts": 1716086678.0
}