{
    "username": "rishisrivastava78",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, vector<int>> mp;\n        vector<int> tempVec;\n\n        for (int i = 0; i < n / 2; ++i) {\n            int diff = abs(nums[i] - nums[n - i - 1]);\n            int X = max({nums[i], nums[n - i - 1], k - nums[i], k - nums[n - i - 1]});\n\n            mp[diff].push_back(X);\n            tempVec.push_back(X);\n        }\n\n        int ans = nums.size();  \n        sort(tempVec.begin(), tempVec.end());\n\n        for (const auto& [diff, values] : mp) {\n            int T = lower_bound(tempVec.begin(), tempVec.end(), diff) - tempVec.begin();\n            T = T * 2 + (nums.size() / 2 - T);\n\n            for (const auto& X : values) {\n                if (X < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n\n            ans = min(ans, T);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721489393",
    "subm_id": "1327451918"
}