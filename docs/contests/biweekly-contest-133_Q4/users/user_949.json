{
    "username": "arghyadeep04",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n \nclass Solution {\n    const ll mod=1e9+7;\npublic:\n    ll ways(ll ind,ll last,vector<ll>&arr,vector<vector<ll>>&dpArr){\n        int n=arr.size();\n        if(ind==n-1){\n            if(arr[ind]<last || arr[ind]>last+ind)return 0;\n            return 1;\n        }\n        if(dpArr[ind][last]!=-1)return dpArr[ind][last];\n        ll ans=0;\n        if(arr[ind]!=-1){\n            if(arr[ind]<last || arr[ind]>last+ind)ans= 0;\n            else ans=ways(ind+1,arr[ind],arr,dpArr);\n        }else{\n            for(int j=(ind==0?0:last);j<=min((ll)400,last+ind);j++){\n                ans+=ways(ind+1,j,arr,dpArr);\n                ans%=mod;\n            }\n        }\n        return dpArr[ind][last]=ans;\n\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<vector<ll>>dpArr(n+1,vector<ll>(401,-1));\n        vector<ll>arr(n,-1);\n        for(auto r:requirements){\n            if(arr[r[0]]!=-1)return 0;\n            arr[r[0]]=r[1];\n        }\n        return ways(0,0,arr,dpArr);\n    }\n};",
    "submit_ts": 1719070059.0
}