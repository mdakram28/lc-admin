{
    "username": "Sonu_710",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] h, int[] v) {\n        PriorityQueue<Integer> vmax=new PriorityQueue<>(Collections.reverseOrder());\n        PriorityQueue<Integer> hmax=new PriorityQueue<>(Collections.reverseOrder());\n        for(int it:h)\n        hmax.add(it);\n        for(int it:v)\n        vmax.add(it);\n\n        int x=1;\n        int y=1;\n        long ans=0;\n        while(hmax.isEmpty()==false && vmax.isEmpty()==false)\n        {\n            if(hmax.peek()>vmax.peek())\n            {\n                x++;\n                ans=ans+(long)hmax.remove()*y;\n            }\n            else\n            {\n                y++;\n                ans=ans+(long)vmax.remove()*x;\n            }\n        }\n        while(vmax.isEmpty()==false)\n        {\n            ans=ans+(long)vmax.remove()*x;\n            y++;\n        }\n        while(hmax.isEmpty()==false)\n        {\n            ans=ans+(long)hmax.remove()*y;\n            x++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925720",
    "subm_id": "1320264002"
}