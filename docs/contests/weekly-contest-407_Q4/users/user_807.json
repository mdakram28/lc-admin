{
    "username": "sumitsunke04",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long solve(vector<int>&temp){\n        if(temp.size() == 0) return 0ll;\n        if(temp[0]==0) return 0ll;\n        ll ans = 0;\n        for(auto &i:temp){\n            i = abs(i);\n        }\n        ll carry = 0;\n        for(int i = 0;i<temp.size();i++){\n            if(temp[i] > carry){\n                ans+=(temp[i]-carry);\n                carry = temp[i];\n            }\n            else{\n                carry = temp[i];\n            }\n        }\n        return ans;\n\n    }\n    \n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n     int n = nums.size();\n    vector<int> diff(n);\n    \n    for (int i = 0; i < n; ++i) {\n        diff[i] = target[i] - nums[i];\n    }\n    vector<int>tp;\n    ll ans  = 0;\n    tp.push_back(diff[0]);\n    for(int i =1;i<diff.size();i++){\n        if(diff[i-1]<0 && diff[i]<0){\n            tp.push_back(diff[i]);\n        }\n        else if(diff[i-1]>0 && diff[i]>0){\n            tp.push_back(diff[i]);\n        }\n        else{\n            ll tpans = solve(tp);\n            ans+=tpans;\n            tp.clear();\n            tp.push_back(diff[i]);\n        }\n    }\n    if(tp.size()>0){\n        ans+=solve(tp);\n    }\n    return ans;\n  \n    }\n};",
    "submit_ts": "1721532189",
    "subm_id": "1327979911"
}