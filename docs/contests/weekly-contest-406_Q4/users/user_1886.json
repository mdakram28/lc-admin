{
    "username": "shivansh_mpi",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, char>> cuts;\n        for (long long i = 0; i < horizontalCut.size(); ++i) {\n            cuts.push_back({horizontalCut[i], 'h'});\n        }\n        for (long long j = 0; j < verticalCut.size(); ++j) {\n            cuts.push_back({verticalCut[j], 'v'});\n        }\n        \n        sort(cuts.begin(),cuts.end(),greater<pair<long long,char>>());\n        long long vPiece = 1;\n        long long hPiece = 1;\n        long long ans = 0;\n        for(auto &it: cuts){\n            long long cost = it.first;\n            char type = it.second;\n            if(type == 'h'){\n                ans += cost*vPiece;\n                hPiece ++;\n            }\n            else{\n                ans += cost*hPiece;\n                vPiece ++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926213",
    "subm_id": "1320279329"
}