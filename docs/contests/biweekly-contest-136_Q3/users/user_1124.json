{
    "username": "EricYXing",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), ans = 0;\n        for (int i = 0; i < m - 1 - i; i++)\n            for (int j = 0; j < n - 1 - j; j++)\n            {\n                int k = grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j];\n                if (k * 2 >= 4)\n                    ans += (4 - k);\n                else\n                    ans += k;\n            }\n        int ke0 = 0, ke1 = 0, kne = 0;\n        if (m % 2)\n        {\n            if (n % 2)\n            {\n                ans += grid[m / 2][n / 2];\n                grid[m / 2][n / 2] = 0;\n            }\n            int l = 0, r = n - 1;\n            while (l < r)\n            {\n                if (grid[m / 2][l] != grid[m / 2][r])\n                    kne++;\n                else\n                {\n                    if (grid[m / 2][l] == 1)\n                        ke1++;\n                    else\n                        ke0++;\n                }\n                l++;\n                r--;\n            }\n        }\n        if (n % 2)\n        {\n            int l = 0, r = m - 1;\n            while (l < r)\n            {\n                if (grid[l][n / 2] != grid[r][n / 2])\n                    kne++;\n                else\n                {\n                    if (grid[l][n / 2] == 1)\n                        ke1++;\n                    else\n                        ke0++;\n                }\n                l++;\n                r--;\n            }\n        }\n        ans += kne;\n        if (ke1 * 2 % 4 == 2 && kne == 0)\n            ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722698572",
    "subm_id": "1343184970"
}