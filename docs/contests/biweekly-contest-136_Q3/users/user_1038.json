{
    "username": "hagu1",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int count = 0;\n        int m = grid.size(), n = grid[0].size();\n        for(int i=0; i<m/2; i++) // ignores odd row, as needed\n        {\n            for(int j=0; j<n/2; j++)\n            {\n                int ones = grid[i][j] + \n                           grid[m-i-1][j] + \n                           grid[i][n-j-1] + \n                           grid[m-i-1][n-j-1];\n\n                count += min(ones, 4-ones);\n            }\n        }\n\n        int spCount = 0;\n        int spOnes = 0;\n        if(m%2 == 1) // odd row\n        {\n            for(int i=0; i<n/2; i++)\n            {\n                spCount += grid[m/2][i]^grid[m/2][n-i-1];\n            }\n\n            for(int i=0; i<n; i++)\n                spOnes += grid[m/2][i];\n        }\n        \n        if(n%2 == 1)\n        {\n            for(int i=0; i<m/2; i++)\n                spCount += grid[i][n/2]^grid[m-i-1][n/2];\n            for(int i=0; i<m; i++)\n                spOnes += grid[i][n/2];\n        }\n\n        if((n%2 == 1)&&(m%2 == 1))\n        {\n            spOnes -= 2*grid[m/2][n/2];\n\n            if(grid[m/2][n/2]) // need to make this 0\n                count++;\n        }\n        if(spCount||spOnes)\n        {\n            if(spOnes%4 == 0)\n            {\n                count += spCount;\n            }\n            else\n            {\n                if(((spOnes+spCount)/4 > spOnes/4)||\n                   ((spOnes-spCount)/4 < spOnes/4))\n                {\n                    count += spCount;\n                }\n                else\n                {\n                    int val1 = abs(spOnes - ((spOnes+spCount)/4)*4);\n                    int val2 = abs(((spOnes-spCount)/4)*4 - spOnes);\n                    count += min(val1, val2);\n                }\n            }\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1722698930",
    "subm_id": "1343196274"
}