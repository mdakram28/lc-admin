{
    "username": "cowtony",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        //     k       4  8  \n        //   op2:1  1, 2, 4, 8, 16\n        //     0: -1\n        //     0: -1 -1\n        //     1:   -\n        //     1: -1  \n        //     1:    -1\n        //     1: -1 -1 -1\n        // if (k == 0) {\n        //     return 2;\n        // }\n        // if (k == 1) {\n        //     return 4;\n        // }\n        \n        int result = 0;\n        \n        int op2 = 1;\n        int current = 1;\n        while (op2 < 32) {\n            \n            \n            result += C(op2, current - k);\n            \n            current <<= 1;\n            op2++;\n        }\n        \n        \n        return result;\n    }\n    \n    int C(int a, int b) {\n        if (b > a || b < 0) {\n            return 0;\n        }\n        \n        long long result = 1;\n        for (int i = a, j = 1; j <= b; i--, j++) {\n            result *= i;\n            result /= j;\n        }\n        return result;\n    }\n};",
    "submit_ts": 1716088886.0
}