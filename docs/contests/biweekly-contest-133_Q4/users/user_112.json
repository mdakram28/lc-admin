{
    "username": "gomelfk",
    "submission": "\nclass Solution {\nstatic constexpr int mod = 1e9+7;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<set<int>> req(n);\n        std::vector<std::array<int, 401>> dp(n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 401; j++) {\n                dp[i][j] = 0;\n            }\n        }\n        dp[0][0] = 1;\n        for (int i = 0; i < requirements.size(); i++) {\n            req[requirements[i][0]].insert(requirements[i][1]);\n            if (requirements[i][0] == 0 && requirements[i][1] != 0) {\n                return 0;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (req[i].size() > 1) {\n                return 0;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= i; j++) {\n                for (int k = 0; k < 401; k++) {\n                    if (i - j + k > 400) {\n                        break;\n                    }\n                    dp[i][i - j + k] += dp[i - 1][k]; \n                    if (dp[i][i - j + k] >= mod) {\n                        dp[i][i - j + k] -= mod;\n                    }\n                }\n            }\n            if (!req[i].empty()) {\n                int x = *req[i].begin();\n                for (int j = 0; j < 401; j++) {\n                    if (j != x) {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n        int ans = 0;\n        for (int k = 0; k < 401; k++) {\n            ans += dp[n - 1][k];\n            if (ans >= mod) {\n                ans -= mod;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719068117.0
}