{
    "username": "xenodochial-moser",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        map<int, vector<int>> up, down;\n        \n        int n = points.size();\n        \n        auto get_max\n        = [&points](int rm)\n        {\n            map<int, vector<int>> up, down;\n            int n = points.size();\n            for (int i = 0; i < n; ++i)\n            {\n                if (i == rm) continue;\n                auto x = points[i][0], y = points[i][1];\n                up[x + y].push_back(i);\n                down[y - x].push_back(i);\n            }\n\n            auto u1 = up.begin()->first;\n            auto u2 = prev(up.end())->first;\n            auto d1 = down.begin()->first;\n            auto d2 = prev(down.end())->first;\n            \n            return max(u2 - u1, d2 - d1);\n        };\n        \n        for (int i = 0; i < n; ++i)\n        {\n            auto x = points[i][0], y = points[i][1];\n            up[x + y].push_back(i);\n            down[y - x].push_back(i);\n        }\n        \n        auto u1i = up.begin()->second;\n        auto u2i = prev(up.end())->second;\n        auto d1i = down.begin()->second;\n        auto d2i = prev(down.end())->second;\n        \n        auto u1 = up.begin()->first;\n        auto u2 = prev(up.end())->first;\n        auto d1 = down.begin()->first;\n        auto d2 = prev(down.end())->first;\n        \n        if (u2 - u1 > d2 - d1)\n        {\n            U:\n            \n            if (u2i.size() != 1 && u1i.size() != 1) return u2 - u1;\n            int ans = 1e9;\n            if (u2i.size() == 1) ans = min(ans, get_max(u2i[0]));\n            if (u1i.size() == 1) ans = min(ans, get_max(u1i[0]));\n            return ans;\n            \n        } else if (u2 - u1 < d2 - d1)\n        {\n            D:\n            \n            if (d2i.size() != 1 && d1i.size() != 1) return d2 - d1;\n            int ans = 1e9;\n            if (d2i.size() == 1) ans = min(ans, get_max(d2i[0]));\n            if (d1i.size() == 1) ans = min(ans, get_max(d1i[0]));\n            return ans;\n        }else\n        {\n            int ans = 1e9;\n            if (u2i.size() == 1) ans = min(ans, get_max(u2i[0]));\n            if (u1i.size() == 1) ans = min(ans, get_max(u1i[0]));\n            if (d1i.size() == 1) ans = min(ans, get_max(d1i[0]));\n            if (d2i.size() == 1) ans = min(ans, get_max(d2i[0]));\n            if (u2i.size() != 1 && u1i.size() != 1 && d1i.size() != 1 && d2i.size() != 1) return u2 - u1;\n            return ans;\n           \n        }\n        \n        \n            \n        return 0;\n        \n    }\n};"
}