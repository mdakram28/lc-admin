{
    "username": "leoyu0813",
    "submission": "class Solution {\nclass TrieNode {\npublic:\n    int cost = INT_MAX;\n    TrieNode* child [26];\n    TrieNode (){\n        for (int i = 0; i < 26; i++)\n            child[i] = nullptr;\n    }\n    void setCost (int x) { cost = min (x, cost); }\n    inline int getCost () {return cost;}\n    inline bool hasCost () {return cost != INT_MAX;};\n    TrieNode* getCharNode (char c){\n        return child [c -'a'];\n    }\n    \n    TrieNode* addCharNode (char c){\n        child [c -'a'] = new TrieNode ();\n        return child [c -'a'];\n    }\n};\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size (), m = words.size ();\n        TrieNode root;\n        for (int i = 0; i < m; ++i)\n        {\n            TrieNode* node = &root;\n             for (char ch : words [i])\n            {\n                TrieNode* next = node->getCharNode (ch);\n                if (!next)\n                    next = node->addCharNode (ch);\n                node = next;\n            }\n            node->setCost (costs [i]);\n        }\n        vector <int> dp (n+1, INT_MAX);\n        dp [0] = 0;\n        for (int i = 1; i <= n; ++i)\n        {\n            if (dp [i-1] == INT_MAX) continue;\n            TrieNode* node = &root;\n            for (int j = i; j <= n; ++j)\n            {\n                TrieNode* next = node->getCharNode (target [j-1]);\n                if (!next)\n                    break;\n                if (next->hasCost ())\n                    dp [j] = min (dp [j], dp [i-1] + next->getCost ());\n                node = next;\n            }\n        }\n\n        return dp [n] == INT_MAX ? -1 : dp [n];\n    }\n}; ",
    "submit_ts": "1720321850",
    "subm_id": "1312333975"
}