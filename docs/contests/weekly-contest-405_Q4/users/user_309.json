{
    "username": "leetcodefan",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        m = len(words)\n\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        word_to_cost = defaultdict(list)\n        for word, cost in zip(words, costs):\n            word_to_cost[word].append(cost)\n\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            for word in word_to_cost:\n                if target.startswith(word, i):\n                    new_cost = dp[i] + min(word_to_cost[word])\n                    dp[i + len(word)] = min(dp[i + len(word)], new_cost)\n\n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720321181",
    "subm_id": "1312315786"
}