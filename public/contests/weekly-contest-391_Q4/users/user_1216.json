{
    "username": "mustafa_001",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        int N = A.size();\n        int n = N;\n        map<int, int> V, V1;\n \n        for (int i = 0; i < N; i++) {\n            V[A[i][0] + A[i][1]]++;\n            V1[A[i][0] - A[i][1]]++;\n        }\n\n        int minmax = INT_MAX;\n        \n        //if (V1.size() <= 2) return 0;\n       // cout << *V.begin() << \" \" << *prev(V.end()) << endl;\n        for (int i = 0; i < N; i++) {\n            int tmp1 = A[i][0] + A[i][1];\n            int tmp2 = A[i][0] - A[i][1];\n            \n            V[tmp1]--;\n            V1[tmp2]--;\n            \n            if (V[tmp1] == 0) V.erase(tmp1);\n            if (V1[tmp2] == 0) V1.erase(tmp2);\n            \n            int maximum = max(prev(V.end())->first-V.begin()->first,prev(V1.end())->first-V1.begin()->first);\n            //cout << maximum << endl;\n            minmax = min(minmax, maximum);\n            \n            V[tmp1]++;\n            V1[tmp2]++;\n        }\n        \n        return minmax;\n    }\n};"
}