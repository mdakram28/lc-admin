{
    "username": "harshbardolia",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = (int) s.size();\n        int res = 0;\n        int cnt = 0;\n        int last = -1;\n        vector<int> prev(n);\n        vector<int> pref(n);\n        vector<int> add(n);\n        \n        for (int i = 0; i < n; i++) {\n            prev[i] = last;\n            if (s[i] == '1') {\n                cnt++;\n                pref[i] = 1;\n                res--;\n            } else {\n                add[i] = cnt;\n                res += ((cnt * (cnt + 1)) / 2);\n                cnt = 0;\n                last = i;\n            }\n            if (i > 0) pref[i] += pref[i - 1];\n        }\n        \n        res += ((cnt * (cnt + 1)) / 2);\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i; j >= 0; j = prev[j]) {\n                int l = j;\n                int r = i;\n                \n                int ones = pref[r];\n                if (l > 0) ones -= pref[l - 1];\n                int z = r - l + 1 - ones;\n                \n                if (z >= 200) break;\n                \n                if (ones >= (z * z)) {\n                    res += 1;\n                    res += add[l];\n                } else {\n                    int need = (z * z) - ones;\n                    if (add[l] >= need) res += (add[l] - need + 1);\n                }\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1722138865",
    "subm_id": "1335801680"
}