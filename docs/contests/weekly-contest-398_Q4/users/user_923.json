{
    "username": "azax1",
    "submission": "class Solution {\n    final static int[] baseCase = new int[] {\n        2, 4, 4, 3, 2, 4, 6, 4, 1, 0, 0, 1, 5, 10, 10, 5, 1\n    };\n    \n    public int waysToReachStair(int k) {\n        if (k < baseCase.length) {\n            return baseCase[k];\n        }\n        int next = 2;\n        int length = 2;\n        for (; next < k; next++) {\n            next = 2 * next - 1;\n            length++;\n        }\n        if (next - length <= k) {\n            return binom(length, next - k);\n        }\n        return 0;\n    }\n    \n    private int binom(int n, int k) {\n        int ret = 1;\n        if (k < n - k) {\n            k = n - k;\n        }\n        for (int i = k + 1; i <= n; i++) {\n            ret = (int) ((((long) ret) * i) / (i - k));\n        }\n        return ret;\n    }\n}",
    "submit_ts": 1716087853.0
}