{
    "username": "kevincabbage",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        map<int, int> cur_record, pre_record;\n        long long res = 0;\n        \n        pre_record[nums[0]] = 0;\n        if(nums[0] == k) ++res;\n        for(int i = 1; i < nums.size(); ++i) {\n            cur_record.clear();\n            for(auto &it : pre_record) {\n                int cur_num = nums[i] & it.first;\n                cur_record[cur_num] = max(it.second, cur_record[cur_num]);\n            }\n            cur_record[nums[i]] = max(cur_record[nums[i]], i);\n            \n            auto it = cur_record.lower_bound(k);\n            if(it != cur_record.end() && it->first == k) {\n                res += it->second;\n                if(it == cur_record.begin()) ++res;\n                else {\n                    --it;\n                    res -= it->second;\n                }\n            }\n            \n            swap(pre_record, cur_record);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720280849",
    "subm_id": "544573547"
}