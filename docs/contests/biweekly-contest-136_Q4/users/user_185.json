{
    "username": "salyu",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> adjs(n);\n        vector<int> max1(n), max2(n), downs(n), ups(n);\n        vector<int> res(n);\n        for (auto & e : edges) {\n            adjs[e[0]].push_back(e[1]);\n            adjs[e[1]].push_back(e[0]);\n        }\n        function<void(int, int)> search1 = [&](int prv, int u) {\n            int m1 = 0, m2 = 0, r = 0;\n            for (int v : adjs[u]) {\n                if (prv != v) {\n                    search1(u, v);\n                    int cur = downs[v] + (v % 2 == 1 ? 1 : 2);\n                    if (cur >= m1) {\n                        m2 = m1;\n                        m1 = cur;\n                    }\n                    else {\n                        m2 = max(m2, cur);\n                    }\n                }\n            }\n            max1[u] = m1;\n            max2[u] = m2;\n            downs[u] = m1;\n        };\n        search1(0, 0);\n\n        function<void(int, int, int)> search2 = [&](int prv, int u, int t) {\n            res[u] = max(downs[u], t);\n            for (int v : adjs[u]) {\n                if (v != prv) {\n                    int dv = downs[v] + (v % 2 == 1 ? 1 : 2);\n                    int others = dv == max1[u] ? max2[u] : max1[u];\n                    search2(u, v, max(t, others) + (u % 2 == 1 ? 1 : 2));\n                }\n            }\n        };\n        search2(0, 0, 0);\n\n        return res;\n    }\n};",
    "submit_ts": "1722698718",
    "subm_id": "1343189520"
}