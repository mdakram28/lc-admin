{
    "username": "user0290vr",
    "submission": "class Solution {\npublic:\n    int maximumLength(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        std::vector<std::vector<int>> dp(n, std::vector<int>(k + 1, 1));\n        int ans = 1;\n        std::vector<int> vk(k + 1, -1);\n        std::vector<std::unordered_map<int, int>> vkm(k + 1);\n        \n        for (int i = 0; i < n; i++) {\n            calculateDp(nums, k, dp, vk, vkm, ans, i);\n        }\n        return ans;\n    }\nprivate:\n    void calculateDp(const std::vector<int>& nums, int k, std::vector<std::vector<int>>& dp,\n                     std::vector<int>& vk, std::vector<std::unordered_map<int, int>>& vkm,\n                     int& ans, int idx) {\n        for (int j = 0; j <= k; j++) {\n            for (int l = 0; l < j; l++) {\n                dp[idx][j] = std::max(dp[idx][j], 1 + vk[l]);\n            }\n            if (vkm[j].count(nums[idx])) {\n                dp[idx][j] = std::max(dp[idx][j], 1 + vkm[j][nums[idx]]);\n            }\n            ans = std::max(ans, dp[idx][j]);\n        }\n        for (int j = 0; j <= k; j++) {\n            vk[j] = std::max(vk[j], dp[idx][j]);\n            vkm[j][nums[idx]] = std::max(vkm[j][nums[idx]], dp[idx][j]);\n        }\n    }\n};\n",
    "submit_ts": 1717861756.0
}