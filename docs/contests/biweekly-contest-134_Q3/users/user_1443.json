{
    "username": "aryan_raaj",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int sz = colors.size();\n        int res = 0;\n \n     \n \n        int fin = 1; \n        int ind = 1; \n           if (k == 1) { \n            return sz; \n        }  \n        for(int l= 1; l< sz + k - 1; ++l) {  \n            int c_ind = ind; \n            int p_idx = ind - 1; \n                if (p_idx >= sz) { \n                p_idx -= sz; \n            } \n            if (c_ind >= sz) { \n                c_ind -= sz; \n            } \n         \n \n            if (colors[c_ind] != colors[p_idx]) { \n                ++fin; \n            } else { \n                fin = 1; \n            } \n  \n            if (fin >= k) { \n                ++res; \n            } \n \n            ++ind;  // Increment index for circular traversal\n        } \n \n        return res;\n    }\n};\n",
    "submit_ts": "1720280850",
    "subm_id": "1311804264"
}