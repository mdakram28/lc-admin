{
    "username": "ctong",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ret = 0;\n        for (int i = 0; i < grid.size() / 2; ++i) {\n            for (int j = 0; j < grid[0].size() / 2; ++j) {\n                int n = grid[i][j] + grid[i][grid[0].size() - 1 - j] + grid[grid.size() - 1 - i][j]+ grid[grid.size() - 1 - i][grid[0].size() - 1 - j];\n                // cout << n << \" \" << i << \" \" << j << endl;\n                if (n == 0 || n == 4) {\n                    continue;\n                }\n                if (n == 1 || n == 3) {\n                    ret += 1;\n                } else {\n                    ret += 2;\n                }\n            }\n        }\n        if (grid.size() % 2 == 0 && grid[0].size() % 2 == 0) {\n            return ret;\n        }\n        if (grid.size() % 2 != 0 && grid[0].size() % 2 == 0) {\n            int res = 0, n1 = 0;\n            for (int j = 0; j < grid[0].size() / 2; ++j) {\n                if (grid[grid.size() / 2][j] != grid[grid.size() / 2][grid[0].size() - 1 - j]) {\n                    ++res;\n                    ++ret;\n                }\n                if (grid[grid.size() / 2][j] && grid[grid.size() / 2][grid[0].size() - 1 - j]) {\n                    ++n1;\n                }\n            }\n            if (res == 0 && (n1 & 1)) {\n                ret += 2;\n            }\n            return ret;\n        }\n        if (grid.size() % 2 == 0 && grid[0].size() % 2 != 0) {\n            int res = 0, n1 = 0;\n            for (int i = 0; i < grid.size() / 2; ++i) {\n                if (grid[i][grid[0].size() / 2] != grid[grid.size() - 1 - i][grid[0].size() / 2]) {\n                    ++res;\n                    ++ret;\n                }\n                if (grid[i][grid[0].size() / 2] && grid[grid.size() - 1 - i][grid[0].size() / 2]) {\n                    ++n1;\n                }\n            }\n            if (res == 0 && (n1 & 1)) {\n                ret += 2;\n            }\n            return ret;\n        }\n        // cout << ret << endl;\n        ret += grid[grid.size() / 2][grid[0].size() / 2];\n        // cout << ret << endl;\n        int res = 0, n1 = 0;\n        for (int j = 0; j < grid[0].size() / 2; ++j) {\n            if (grid[grid.size() / 2][j] != grid[grid.size() / 2][grid[0].size() - 1 - j]) {\n                ++res;\n                ++ret;\n            }\n            if (grid[grid.size() / 2][j] && grid[grid.size() / 2][grid[0].size() - 1 - j]) {\n                ++n1;\n            }\n        }\n        // cout << res << \" \" << n1 << endl;\n        for (int i = 0; i < grid.size() / 2; ++i) {\n            if (grid[i][grid[0].size() / 2] != grid[grid.size() - 1 - i][grid[0].size() / 2]) {\n                ++res;\n                ++ret;\n            }\n            if (grid[i][grid[0].size() / 2] && grid[grid.size() - 1 - i][grid[0].size() / 2]) {\n                ++n1;\n            }\n        }\n        // cout << res << \" \" << n1 << endl;\n        if (res == 0 && (n1 & 1)) {\n            ret += 2;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722698089",
    "subm_id": "552269274"
}