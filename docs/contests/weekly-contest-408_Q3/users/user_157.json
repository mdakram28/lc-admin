{
    "username": "didwhddks",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        const int n = s.size();\n        int ans = 0;\n        int c = 0;\n        vector cnt(n + 1, vector<int>());\n        cnt[0].push_back(0);\n        for (int i = 0; i < n; ++i) {\n            c += s[i] == '1';\n            int zeros = i + 1 - c;\n            for (int j = 0; j * j <= c; ++j) {\n                int f = zeros - j;\n                if (f < 0) {\n                    break;\n                }\n                int x = c - j * j;\n                if (cnt[f].size() > 0) {\n                    int ub = upper_bound(cnt[f].begin(), cnt[f].end(), x) - cnt[f].begin() - 1;\n                    ans += ub + 1;\n                    // cout << i << \" \" << ub << \"\\n\";\n                }\n            }\n            cnt[zeros].push_back(c);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722136280",
    "subm_id": "1335729395"
}