{
    "username": "rohanjoshi",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        total = 0\n        currIndex = 0\n        while currIndex < len(nums):\n            if nums[currIndex] == target[currIndex]:\n                currIndex += 1\n            elif nums[currIndex] < target[currIndex]:\n                running = currIndex + 1\n                minDiff = target[currIndex] - nums[currIndex]\n                while running < len(nums) and nums[running] < target[running]:\n                    minDiff = min(minDiff, target[running]-nums[running])\n                    running += 1\n                for i in range(currIndex, running):\n                    nums[i] += minDiff\n                total += minDiff\n            elif nums[currIndex] > target[currIndex]:\n                running = currIndex + 1\n                minDiff = nums[currIndex] - target[currIndex]\n                while running < len(nums) and nums[running] > target[running]:\n                    minDiff = min(minDiff, nums[running]-target[running])\n                    running += 1\n                for i in range(currIndex, running):\n                    nums[i] -= minDiff\n                total += minDiff\n        return total\n                \n\n        ",
    "submit_ts": "1721531534",
    "subm_id": "1327963406"
}