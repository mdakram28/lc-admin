{
    "username": "bhanunegi420",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long long,long long>> pq;\n        for(int i=0; i<n-1; i++){\n            pq.push({verticalCut[i],1});\n        }\n        for(int i=0; i<m-1; i++){\n            pq.push({horizontalCut[i],0});\n        }\n\n        long long cntX = 1;\n        long long cntY = 1;\n\n        long long ans = 0;\n        while(!pq.empty()){\n            pair<long long,long long> cut = pq.top();\n            pq.pop();\n            if(cut.second){\n                ans += (cntX * cut.first);\n                cntY++;\n            }\n            else{\n                ans += (cntY * cut.first);\n                cntX++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925816",
    "subm_id": "1320267089"
}