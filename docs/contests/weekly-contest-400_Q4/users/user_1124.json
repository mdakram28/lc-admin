{
    "username": "swayam_wish",
    "submission": "class Solution {\npublic:\n    \n    void solve(vector<int> & nums,int pos, int curr,int k, int & ans,vector<unordered_map<int,int>> & dp){\n     \n        ans = min(ans,abs(k-curr));\n        int val = abs(k-curr);\n       \n        if(pos == nums.size()) return ;\n       \n            if(curr < k){ solve(nums,pos+1,nums[pos],k,ans,dp);return ;}\n       \n        if(dp[pos].find(curr) != dp[pos].end()) return ;\n         dp[pos][curr]=1;\n        solve(nums,pos+1,(curr&nums[pos]),k,ans,dp);\n        solve(nums,pos+1,nums[pos],k,ans,dp);\n           \n        \n    }\n    \n    \n    \n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n+1,vector<int>(32,0));\n        \n        int ans = INT_MAX;\n        int st = 0;\n      \n        for(int i=1; i<=nums.size(); i++){\n            int curr = nums[i-1];\n            int j= 0;\n            while(curr != 0){\n                dp[i][j]=dp[i-1][j] +curr%2;\n                curr/=2;\n                j++;\n            }\n            int val = 0;\n            for(int j=0; j<32; j++){\n               if((i-st) == dp[i][j]-dp[st][j]){val += (1<<j);} \n            }\n            ans = min(ans, abs(val-k));\n            while(st<i && val<k){\n                st++;\n                val = 0;\n               for(int j=0; j<32; j++){\n               if((i-st) == (dp[i][j]-dp[st][j])){val += (1<<j);} \n               }\n                 ans = min(ans, abs(val-k));\n            }\n            \n        }\n       \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1717299714.0
}