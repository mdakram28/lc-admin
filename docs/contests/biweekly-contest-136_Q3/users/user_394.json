{
    "username": "kind-agnesipe9",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n=grid.length;\n        int m=grid[0].length;\n        int ans=0;\n        for (int i = 0; i < n/2; i++) {\n            for (int j = 0; j <m/2 ; j++) {\n                int temp=grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                ans+=Math.min(temp,4-temp);\n            }\n        }\n        if(n%2==1&&m%2==1){\n            ans+=grid[n/2][m/2];\n        }\n        int count00=0;\n        int count01=0;\n        int count11=0;\n        if(n%2==1){\n            for (int i = 0; i < m/2; i++) {\n                if(grid[n/2][i]==1&&grid[n/2][m-i-1]==1) {\n                    count11++;\n                }else if(grid[n/2][i]==0&&grid[n/2][m-i-1]==0){\n                    count00++;\n                }else {\n                    count01++;\n                }\n            }\n        }\n        if(m%2==1){\n            for (int i = 0; i < n/2; i++) {\n                if(grid[i][m/2]==1&&grid[n-1-i][m/2]==1) {\n                    count11++;\n                }else if(grid[i][m/2]==0&&grid[n-1-i][m/2]==0){\n                    count00++;\n                }else {\n                    count01++;\n                }\n            }\n        }\n        ans+=count01;\n        int yu=(2*count11)%4;\n        int need=(4-yu)%4;\n        if(2*count01<need){\n            ans+=2;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722697707",
    "subm_id": "552267416"
}