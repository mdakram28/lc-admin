{
    "username": "ScarletS",
    "submission": "class Solution {\npublic:\n    struct BIT {\n    int n, rtn; // rtn might need to be LLed\n    vector<int> bit;\n    BIT(int n) : n(n), bit(n + 1,0) {}\n    void update(int x, int d) { for (int i = x; i <= n; i += i & -i) bit[i] += d; }\n    int query(int x) {\n        rtn = 0;\n        for (int i = x; i; i -= i & -i) rtn += bit[i];\n        return rtn;\n    }\n    int query(int x, int y) { return query(y) - query(x - 1); }\n};\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        int n = a.size();\n        BIT bit(n + 2);\n        for (int i = 1; i + 1 < n; ++i) {\n            if (a[i - 1] < a[i] && a[i] > a[i + 1]) {\n                bit.update(i + 1, 1);\n            }\n        }\n        vector<int> ans;\n        for (auto i : queries) {\n//             for (int j : a) {\n                \n//             }\n//             for (int j = 1; i <= n; ++i) {\n//                 cout << bit.query(i, i) << \" \";\n//             }\n//             cout << \"\\n\";\n            if (i[0] == 1) {\n                int l = i[1] + 1, r = i[2] + 1;\n                if (r - l < 2) {\n                    ans.push_back(0);\n                }\n                else {\n                    ans.push_back(bit.query(l + 1, r - 1));\n                }\n            }\n            else {\n                int id = i[1], x = i[2];\n                for (int j = i[1] - 1; j <= i[1] + 1; ++j) {\n                    if (0 < j && j + 1 < n && a[j - 1] < a[j] && a[j] > a[j + 1]) {\n                        bit.update(j + 1, -1);\n                    }\n                }\n                a[id] = x;\n                for (int j = i[1] - 1; j <= i[1] + 1; ++j) {\n                    if (0 < j && j + 1 < n && a[j - 1] < a[j] && a[j] > a[j + 1]) {\n                        bit.update(j + 1, 1);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507298.0
}