{
    "username": "mathpanda",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        tr = [0] * (n+1)\n        def add(x):\n            while x < n + 1:\n                tr[x] += 1\n                x += x & -x\n                \n        def find(x):\n            ans = 0\n            while x:\n                ans += tr[x]\n                x -= x & -x\n            return ans\n        \n        def sub(x):\n            while x < n + 1:\n                tr[x] -= 1\n                x += x & -x\n                \n        ans = []\n        peak = [0]*n\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                add(i+1)\n                peak[i] = 1\n        \n        for q in queries:\n            if q[0] == 1:\n                if q[2] == q[1]:\n                    ans.append(0)\n                else:\n                    ans.append(find(q[2]) - find(q[1]+1))\n            else:\n                if n <= 2:\n                    continue\n                if q[1] == 0:\n                    if peak[1] == 0 and nums[1] > q[2] and nums[1] > nums[2]:\n                        peak[1] = 1\n                        add(1+1)\n                    elif peak[1] == 1 and nums[1] <= q[2]:\n                        peak[1] = 0\n                        sub(1+1)\n                        nums[0] = q[2]\n                elif q[1] == n-1:\n                    if peak[n-2] == 0 and nums[n-2] > q[2] and nums[n-2] > nums[n-3]:\n                        peak[n-2] = 1\n                        add(n-2+1)\n                    elif peak[n-2] == 1 and nums[n-2] <= q[2]:\n                        peak[n-2] = 0\n                        sub(n-2+1)\n                    nums[n-1] = q[2]\n                else:\n                    if peak[q[1] - 1] == 0 and q[1] - 1 > 0 and nums[q[1] - 1] > nums[q[1] - 2] and nums[q[1] - 1] > q[2]:\n                        peak[q[1] - 1] = 1\n                        add(q[1] - 1 + 1)\n                    elif peak[q[1] - 1] == 1 and nums[q[1] - 1] <= q[2]:\n                        peak[q[1] - 1] = 0\n                        sub(q[1] - 1 + 1)\n                    if peak[q[1] + 1] == 0 and q[1] + 1 < n-1 and nums[q[1] + 1] > nums[q[1] + 2] and nums[q[1] + 1] > q[2]:\n                        peak[q[1] + 1] = 1\n                        add(q[1] + 1 + 1)\n                    elif peak[q[1] + 1] == 1 and nums[q[1] + 1] <= q[2]:\n                        peak[q[1] + 1] = 0\n                        sub(q[1] + 1 + 1)\n                    if peak[q[1]] == 0 and q[2] > nums[q[1]-1] and q[2] > nums[q[1]+1]:\n                        peak[q[1]] = 1\n                        add(q[1] + 1)\n                    elif peak[q[1]] == 1 and (q[2] <= nums[q[1]-1] or q[2] <= nums[q[1]+1]):\n                        peak[q[1]] = 0\n                        sub(q[1] + 1)\n                    nums[q[1]] = q[2]\n        return ans\n                ",
    "submit_ts": 1718508970.0
}