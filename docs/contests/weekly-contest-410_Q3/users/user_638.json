{
    "username": "derack180",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int MOD = 1_000_000_007;\n        int n = nums.length;\n        int[][] dp = new int[n][51];\n\n        initializeDP(dp, nums);\n\n        populateDPTable(nums, dp, MOD);\n\n        int result = computeFinalResult(dp, nums, MOD);\n\n        return result;\n    }\n\n    private void initializeDP(int[][] dp, int[] nums) {\n        for (int i = 0; i <= nums[0]; i++) {\n            dp[0][i] = 1;\n        }\n    }\n\n    private void populateDPTable(int[] nums, int[][] dp, int MOD) {\n        int n = nums.length;\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= nums[i]; j++) {\n                int arr2 = nums[i] - j;\n                if (arr2 < 0) continue;\n                for (int k = 0; k <= j; k++) {\n                    if (arr2 <= nums[i-1] - k) {\n                        dp[i][j] = (dp[i][j] + dp[i-1][k]) % MOD;\n                    }\n                }\n            }\n        }\n    }\n\n    private int computeFinalResult(int[][] dp, int[] nums, int MOD) {\n        int n = nums.length;\n        int result = 0;\n        for (int i = 0; i <= nums[n-1]; i++) {\n            result = (result + dp[n-1][i]) % MOD;\n        }\n        return result;\n    }\n}\n",
    "submit_ts": "1723344031",
    "subm_id": "1351524771"
}