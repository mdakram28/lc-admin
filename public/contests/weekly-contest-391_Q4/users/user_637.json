{
    "username": "ruoqiu",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int ans = INT32_MAX;\n        int n = points.size();\n        vector<vector<pair<int, int>>> sit(4, vector<pair<int, int>>(n));\n        for (int i = 0; i < n; i++) {\n            sit[0][i] = {points[i][0] + points[i][1], i};\n            sit[1][i] = {points[i][0] - points[i][1], i};\n            sit[2][i] = {-points[i][0] + points[i][1], i};\n            sit[3][i] = {-points[i][0] - points[i][1], i};\n        }\n        for (int i = 0; i < 4; i++) {\n            sort(sit[i].begin(), sit[i].end());\n        }\n        int index = -1, max_ele = -1;\n        for (int i = 0; i < 4; i++) {\n            if (sit[i][n - 1].first - sit[i][0].first > max_ele) {\n                max_ele = sit[i][n - 1].first - sit[i][0].first;\n                index = i;\n            }\n        }\n        int reid = -1, tmpans = -1;\n        // case remove 0:\n        reid = sit[index][0].second;\n        // cout << reid;\n        for (int i = 0; i < 4; i++) {\n            if (sit[i][0].second == reid) {\n                tmpans = max(tmpans, sit[i][n - 1].first - sit[i][1].first);\n            } else if (sit[i][n - 1].second == reid) {\n                tmpans = max(tmpans, sit[i][n - 2].first - sit[i][0].first);\n            } else {\n                tmpans = max(tmpans, sit[i][n - 1].first - sit[i][0].first);\n            }\n        }\n        // case 2 remove n - 1\n        ans = tmpans, tmpans = -1;\n        reid = sit[index][n - 1].second;\n        // cout << reid;\n        for (int i = 0; i < 4; i++) {\n            if (sit[i][0].second == reid) {\n                tmpans = max(tmpans, sit[i][n - 1].first - sit[i][1].first);\n            } else if (sit[i][n - 1].second == reid) {\n                tmpans = max(tmpans, sit[i][n - 2].first - sit[i][0].first);\n            } else {\n                tmpans = max(tmpans, sit[i][n - 1].first - sit[i][0].first);\n            }\n            // cout <<sit[i][0].second << ' ' <<sit[i][n - 1].second << ' ' <<tmpans <<endl;\n        }\n        ans = min(tmpans, ans);\n        return ans;\n    }\n};"
}