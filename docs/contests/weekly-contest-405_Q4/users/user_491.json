{
    "username": "wanderlust312",
    "submission": "class TrieNode:\n    def __init__(self):\n        self.next=[None]*26\n        self.cost=sys.maxsize\n\nclass Trie:\n    def __init__(self):\n        self.root=TrieNode()\n    \n    def insert(self,s,cost):\n        node=self.root\n        for i in s:\n            t=ord(i)-97\n            if node.next[t]==None:\n                node.next[t]=TrieNode()\n            node=node.next[t]\n        node.cost=min(node.cost,cost)\n            \n\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        # def helper(i):\n        #     if i==n:\n        #         return 0\n            \n        #     if dp[i]==sys.maxsize:\n        #         node = trie.root\n        #         for a in range(i,n):\n        #             t=ord(target[a])-97\n        #             if node.next[t]==None:\n        #                 return\n        #             else:\n        #                 node=node.next[t]\n        #                 if node.cost!=sys.maxsize:\n        #                     helper(a+1)\n        #                     if dp[a+1]!=sys.maxsize:\n        #                         dp[i]=min(dp[i],node.cost+dp[a+1])\n        #     return dp[i]\n\n        trie = Trie()\n        n=len(target)\n        dp=[sys.maxsize]*(n+1)\n        dp[n]=0\n        for [i,j] in zip(words,costs):\n            trie.insert(i,j)\n        \n        # helper(0)\n        \n        for i in range(n-1,-1,-1):\n            node=trie.root\n            for j in range(i,n):\n                t=ord(target[j])-97\n                if node.next[t]==None:\n                    break\n                else:\n                    node=node.next[t]\n                    if node.cost!=sys.maxsize:\n                        dp[i]=min(dp[i],node.cost+dp[j+1])\n\n        if dp[0]==sys.maxsize:\n            return -1\n        else:\n            return dp[0]",
    "submit_ts": "1720321964",
    "subm_id": "1312337033"
}