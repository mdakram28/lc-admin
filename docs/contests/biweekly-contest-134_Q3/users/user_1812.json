{
    "username": "eliteCoder26",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int cnt=0;\n        for(int i=0;i<=k-2;i++)colors.push_back(colors[i]);\n        // for(auto& ele:colors)cout<<ele<<\" \";\n        int n = colors.size();\n        int i=0,j=1;//start , end\n        while(i<j && i<n && j<n){\n            while(j<n){\n                if(colors[j]==colors[j-1]){//wrong\n                    i=j;j++;\n                }\n                else{\n                    j++;\n                }\n                if(j-i+1==k+1)break;\n            }\n            \n            // [i,j-1] is possibly valid window\n            if(j-1-i+1==k && i>=0 && j-1>=i && j-1<n)cnt++;\n            \n            //next window\n            i++;\n            \n        }\n        \n        // //check window starting with n-1\n        // for(int i=1;i<=k-2;i++){\n        //     if(colors[i]==colors[i-1])return cnt;\n        // }\n        // cnt+=colors[n-1]!=colors[0];\n        return cnt;\n    }\n};",
    "submit_ts": "1720277801",
    "subm_id": "1311680635"
}