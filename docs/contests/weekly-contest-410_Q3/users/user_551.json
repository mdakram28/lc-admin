{
    "username": "anhoavu",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        // We need to find the number of solutions to the system\n        // X0 <= X1 <= ... <= Xn-1\n        //     N0 - X0 >= N1 - X1 >= ... >= Nn-1 - Xn-1\n        // The second is equivalent to\n        //     X1 - X0 >= N1 - N0\n        //     X{i+1} - Xi >= N{i+1} - N{i}\n\n        int n = nums.size();\n        vector<int> MinX(n, 0);\n\n        MinX[0] = 0;\n        for(int i = 1; i < n; i++) {\n            MinX[i] = max(nums[i] - nums[i - 1], 0);\n        }\n\n        // Sub-problem: [i .. n)\n        // A[i][m] = number of ways to choose from i .. n with Xi >= m\n        long long A[2024][100] = { 0 };\n        for(int i = n - 1; i >= 0; i--) {\n            // cout << \"i = \" << i << endl;\n            for(int Xi = nums[i]; Xi >= 0 ; Xi--) {\n                if (i == n - 1) {\n                    A[i][Xi] = nums[i] - Xi + 1;\n                    continue;\n                }\n\n                // cout << \"   Xi = \" << Xi << endl;\n                int Mi1 = Xi + MinX[i+1];\n\n                if (Mi1 > nums[i+1])\n                    A[i][Xi] = A[i][Xi + 1];\n                else     \n                    A[i][Xi] = (A[i][Xi + 1] + A[i + 1][Mi1]) % 1000000007;\n            }\n        }\n\n        return A[0][0];\n    }\n};",
    "submit_ts": "1723348059",
    "subm_id": "1351610783"
}