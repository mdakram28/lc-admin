{
    "username": "wu py",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n\n        m, n = len(board), len(board[0])\n        points = []\n        for i in range(m):\n            for j in range(n):\n                points.append([board[i][j], i, j])\n        points.sort(reverse=True)\n        max_sum = float(\"-inf\")\n        for i in range(len(points)):\n            for j in range(i + 1, len(points)):\n                if max_sum >= points[i][0] + points[j][0]*2:\n                    break\n                for k in range(j + 1, len(points)):\n                    if max_sum >= points[i][0] + points[j][0] + points[k][0]:\n                        break\n                    value1, r1, c1 = points[i]\n                    value2, r2, c2 = points[j]\n                    value3, r3, c3 = points[k]\n\n                    # Skip if any rooks would attack each other\n                    if r1 == r2 or r1 == r3 or r2 == r3 or c1 == c2 or c1 == c3 or c2 == c3:\n                        continue\n\n                    current_sum = value1 + value2 + value3\n\n                    # If current sum + possible max remainder < max_sum, break early\n                    # if current_sum + sum(x[0] for x in points[:k + 1]) <= max_sum:\n                    #     break\n\n                    max_sum = max(max_sum, current_sum)\n\n        return max_sum\n",
    "submit_ts": "1723908858",
    "subm_id": "1359169977"
}