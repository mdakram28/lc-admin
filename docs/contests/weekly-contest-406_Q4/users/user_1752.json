{
    "username": "sharpdevtrev",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(key=lambda x: x, reverse=True)\n        verticalCut.sort(key=lambda x: x, reverse=True)\n        # print(horizontalCut)\n        # print(verticalCut)\n        vc = 0\n        hc = 0\n        ret = 0\n        while vc < n-1 or hc < m-1:\n            if len(verticalCut)==vc and len(horizontalCut)!=hc:\n                #make horizontal cuts for each vc\n                # print(\"hc a\")\n                ret+=horizontalCut[hc]*(vc+1)\n                hc+=1\n            elif len(horizontalCut)==hc and len(verticalCut)!=vc:\n                # print(\"vc a\")\n                #make vertical cuts for each hc\n                ret+=verticalCut[vc]*(hc+1)\n                vc+=1\n                \n            else:\n                if verticalCut[vc] > horizontalCut[hc]:\n                    #make a vertical cut for each hc\n                    # print(\"vc b\")\n                    ret+=verticalCut[vc]*(hc+1)\n                    vc+=1\n                else:\n                    # print(\"hc b\")\n                    #make a horizontal cut for each vc\n                    ret+=horizontalCut[hc]*(vc+1)\n                    hc+=1\n        return ret",
    "submit_ts": "1720926115",
    "subm_id": "1320276453"
}