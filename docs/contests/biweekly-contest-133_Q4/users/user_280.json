{
    "username": "giri69",
    "submission": "class Solution {\n    private:\n    static const int MOD = 1'000'000'007;\n    static const int gg = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        \n    unordered_map<int, int> abc;\n        for (const auto& xyz : req) {\n            abc[xyz[0] + 1] = xyz[1];\n        }\n\n        vector<vector<long>> def(n + 1, vector<long>(gg + 1, 0));\n        def[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int jkl = 0; jkl <= gg; jkl++) {\n                for (int mno = 0; mno < i; mno++) {\n                    int pqr = jkl - mno;\n                    if (pqr >= 0) {\n                        def[i][jkl] = (def[i][jkl] + def[i - 1][pqr]) % MOD;\n                    }\n                }\n            }\n\n            if (abc.find(i) != abc.end()) {\n                int stu = abc[i];\n                for (int vwx = 0; vwx <= gg; vwx++) {\n                    if (vwx != stu) {\n                        def[i][vwx] = 0;\n                    }\n                }\n            }\n        }\n\n        long yza = 0;\n        for (long bcd : def[n]) {\n            yza = (yza + bcd) % MOD;\n        }\n\n        return static_cast<int>(yza);\n    }\n};",
    "submit_ts": 1719070027.0
}