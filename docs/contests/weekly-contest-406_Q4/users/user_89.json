{
    "username": "Actual_Boy",
    "submission": "class Solution {\npublic:\n        long long mini(vector<int>& X,vector<int>&  Y, int m, int n)\n{\n    long long res = 0;\n \n    //  sort the horizontal cost in reverse order\n    sort(X.begin(), X.end(), greater<int>());\n \n    //  sort the vertical cost in reverse order\n    sort(Y.begin(), Y.end(), greater<int>());\n \n    //  initialize current width as 1\n    int hzntl = 1, vert = 1;\n \n    //  loop until one or both cost array are processed\n    int i = 0, j = 0;\n    while (i < m && j < n)\n    {\n        if (X[i] > Y[j])\n        {\n            res += X[i] * vert;\n \n            hzntl++;\n            i++;\n        }\n        else\n        {\n            res += Y[j] * hzntl;\n \n            vert++;\n            j++;\n        }\n    }\n \n    long long total = 0;\n    while (i < m)\n        total += X[i++];\n    res += 1ll*total * vert;\n \n    total = 0;\n    while (j < n)\n        total += Y[j++];\n    res += 1ll*total * hzntl;\n \n    return res;\n}\n    long long minimumCost(int m, int n, vector<int>& hc, vector<int>& vc) {\n        return mini(hc,vc,m-1,n-1);\n    }\n};",
    "submit_ts": "1720924982",
    "subm_id": "1320238355"
}