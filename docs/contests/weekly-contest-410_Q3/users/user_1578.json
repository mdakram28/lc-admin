{
    "username": "flyinglemonjx",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        \"\"\"\n        \u984c\u76ee\u597d\u7e5e\n        nums = [2,3,2]\n        n = 3\uff0c\u6240\u4ee5\u5de6\u53f3\u9577\u5ea6\u4e00\u5b9a\u8981\u662f3\n        \n        arr1[i] + arr2[i] == nums[i]\n        \n          [0, 1, 1]\n          [2, 2, 1]\n        +) 2  3  2\n        \n        n <= 2000\n        n[i] < 50\n        \n        \u597d\u6bd4\u8aaa\n        1 1 1\n        \n        \u7b54\u6848\u5c31\u662f4\u7d44\n        000  001  011  111\n        111  110  100  000\n        \n\n        a + b == nums[i]\n        \n        \"\"\"\n        def sol1():\n            MOD = 10**9 + 7\n            n = len(nums)\n            \n            @cache\n            def dfs(i, minVal, maxVal):\n                if i == n:\n                    return 1\n                \n                ret = 0\n                for x in range(minVal, nums[i]+1):\n                    y = nums[i] - x\n                    if y <= maxVal:\n                        ret += dfs(i+1, x, y)\n\n                return ret % MOD\n            \n            return dfs(0, 0, nums[0])\n        return sol1()",
    "submit_ts": "1723346263",
    "subm_id": "1351573740"
}