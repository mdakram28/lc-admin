{
    "username": "40547011S",
    "submission": "class Solution {\npublic:\n    \n    vector<int> inttobits(int num) {\n        vector<int> bits(32);\n        for (int i = 32 - 1; i >= 0; i -= 1) {\n            bits[i] = num & 1;\n            num >>= 1;\n        }\n        return bits;\n    }\n    \n    int bittoint(vector<int>& bits, int num_number) {\n        int n = 0;\n        for (int i = 32 - 1; i >= 0; i -= 1) {\n            if (bits[i] == num_number) {\n                n |= (1 << (31 - i));\n            }\n        }\n        return n;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int ans = INT_MAX;\n        vector<int> bits_sum(32);\n        int left = 0;\n        for (int i = 0; i < nums.size(); i += 1) {\n            ans = min(ans, abs(k - nums[i]));\n            // cout << i << \" i ans: \" << ans << endl;\n            vector<int> bits = inttobits(nums[i]);\n            for (int i = 0; i < 32; i += 1) {\n                bits_sum[i] += bits[i];\n            }\n            int and_res = bittoint(bits_sum, i - left + 1);\n            // cout << i << \" and_res: \" << and_res << endl;\n            ans = min(ans, abs(and_res - k));\n            // cout << \"ans: \" << ans << endl;\n            while (left < i && and_res < k) {\n                vector<int> remove_bits = inttobits(nums[left]);\n                left += 1;\n                for (int i = 0; i < 32; i += 1) {\n                    bits_sum[i] -= remove_bits[i];\n                }\n                and_res = bittoint(bits_sum, i - left + 1);\n                // cout << \"and_res: \" << and_res << endl;\n                ans = min(ans, abs(and_res - k));\n            }\n            \n        }\n        // cout << \"??\" << endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717298861.0
}