{
    "username": "iamhariom28",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        if (k > n) return 0;\n\n        int cnt = 0;\n        vector<int> pre(n, 0);\n\n        for (int i = 1; i < n; i++) {\n            pre[i] = (colors[i] != colors[i - 1]) + pre[i - 1];\n        }\n\n        for (int r = k - 1; r < n; r++) {\n            if (pre[r] - pre[r - k + 1] == k - 1) {\n                cnt++;\n            }\n        }\n\n        vector<int> extColors = colors;\n        for (int i = 0; i < k - 1; i++) {\n            extColors.push_back(colors[i]);\n        }\n\n        pre.resize(extColors.size(), 0);\n        for (int i = n; i < extColors.size(); i++) {\n            pre[i] = (extColors[i] != extColors[i - 1]) + pre[i - 1];\n        }\n\n        for (int r = n; r < extColors.size(); r++) {\n            if (pre[r] - pre[r - k + 1] == k - 1) {\n                cnt++;\n            }\n        }\n\n        return cnt;\n    }\n};\n",
    "submit_ts": "1720279432",
    "subm_id": "1311750964"
}