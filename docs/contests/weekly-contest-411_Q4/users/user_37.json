{
    "username": "xylu",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> c0(n+1, 0), c1(n+1, 0), r(n, n);\n        for (int i = 0; i < n; i++) {\n            c0[i+1] = c0[i], c1[i+1] = c1[i];\n            if (s[i] == '0') c0[i+1]++;\n            else c1[i+1]++;\n        }\n        for (int i = 0; i < n; i++) {\n            int i0 = upper_bound(c0.begin(), c0.end(), c0[i] + k) - c0.begin() - 1;\n            int i1 = upper_bound(c1.begin(), c1.end(), c1[i] + k) - c1.begin() - 1;\n            r[i] = max(i0, i1);\n        }\n        for (int i = 0; i < n; i++) cout << r[i] << ' ';\n        int m = queries.size();\n        vector<int> idx(m, 0);\n        iota(idx.begin(), idx.end(), 0);\n        vector<int> idx2(n, 0);\n        iota(idx2.begin(), idx2.end(), 0);\n        sort(idx.begin(), idx.end(), [&](int i, int j) {\n            return queries[i][1] < queries[j][1];\n        });\n        sort(idx2.begin(), idx2.end(), [&](int i, int j) {\n            return r[i] < r[j];\n        });\n\n        vector<long long> fenwick1(n + 1, 0), fenwick2(n + 1, 0);\n        auto add = [&](int x, int v) {\n            for (; x <= n; x += x & -x) fenwick1[x] += v, fenwick2[x]++;\n        };\n        auto query = [&](int x) {\n            long long res = 0;\n            int cnt = 0;\n            for (; x > 0; x -= x & -x) res += fenwick1[x], cnt += fenwick2[x];\n            return make_pair(res, cnt);\n        };\n        vector<long long> ans(m, 0);\n        for (int i = 0, j = 0; i < m; i++) {\n            int ll = queries[idx[i]][0], rr = queries[idx[i]][1];\n            while (j < n && rr + 1 >= r[idx2[j]]) {\n                add(idx2[j] + 1, r[idx2[j]]);\n                j++;\n            }\n            long long res = 0;\n            auto p1 = query(ll);\n            auto p2 = query(rr + 1);\n            res += p2.first - p1.first;\n            res += 1LL * (rr + 1) * (rr - ll + 1 - p2.second + p1.second);\n            res -= 1LL * (ll + rr) * (rr - ll + 1) / 2;\n            ans[idx[i]] = res;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951261",
    "subm_id": "556404271"
}