{
    "username": "Ryuk01",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\nint n = grid.size(), m = grid[0].size();\n        int result = 0;\n        \n        if (n % 2 != 0 && m % 2 != 0) {\n            int div1 = n/2;\n            int div2 = m/2 ;\n            if (grid[div1][div2] == 1) {\n                result++;\n            }\n        }\n\n        vector<int> shifts(3, 0);\n        if (n % 2 != 0) {\n            int left = 0, right = m - 1;\n            while (left < right) {\n                int div1 = n/2;\n            int div2 = m/2 ;\n                int sum = grid[div1][left] + grid[div1][right];\n                shifts[sum]++;\n                left++;\n                right--;\n            }\n        }\n\n        if (m % 2 != 0) {\n            int top = 0, bottom = n - 1;\n            int div1 = n/2;\n            int div2 = m/2 ;\n            while (top < bottom) {\n                int sum = grid[top][div2] + grid[bottom][div2];\n                shifts[sum]++;\n                top++;\n                bottom--;\n            }\n        }\n        if (shifts[2] % 2 != 0) {\n            if (shifts[1] > 0) {\n                result += shifts[1];\n            } else {\n                result += 2;\n            }\n        } else {\n            result += shifts[1];\n        }\n\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sum = a + b + c + d;\n\n                if (sum != 0 && sum != 4) {\n                    result += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1722699739",
    "subm_id": "1343220840"
}