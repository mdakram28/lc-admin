{
    "username": "Astitva1508",
    "submission": "class Solution\n{\npublic:\n    int minimumDifference(vector<int> &nums, int k)\n{\n\n    // Construct the number at every stage of the iteration\n    // If the number is greater than k, than continue to add the next number,\n    // else remove  the contribution of the begin number\n    int n = nums.size();\n    int begin = 0;\n    int iter = 0;\n    vector<int> setBits(32, 0);\n    int currNum = ~(1 << 31);\n    int minDiff = INT_MAX;\n    while (iter < n)\n    {\n        while (begin < iter && currNum <= k)\n        {\n            // remove the leftmost but\n            for (int i = 0; i < 32; i++)\n            {\n                if (nums[begin] & (1 << i))\n                    setBits[i]--;\n            }\n            begin++;\n            int newNum = 0;\n            for (int i = 0; i < 32; i++)\n            {\n                if (setBits[i] == (iter - begin))\n                    newNum |= (1 << i);\n            }\n            currNum = newNum;\n            if(begin!=iter)minDiff = min(minDiff, abs(currNum - k));\n        }\n        if(begin==iter) currNum = nums[iter];\n        else currNum&=nums[iter];\n        for (int i = 0; i < 32; i++)\n        {\n            if (nums[iter] & (1 << i))\n                setBits[i]++;\n        }\n        minDiff = min(minDiff, abs(currNum - k));\n        iter++;\n    }\n    while (begin < iter && currNum <= k)\n    {\n        // remove the leftmost but\n        for (int i = 0; i < 32; i++)\n        {\n            if (nums[begin] & (1 << i))\n                setBits[i]--;\n        }\n        begin++;\n        int newNum = 0;\n        for (int i = 0; i < 32; i++)\n        {\n            if (setBits[i] == (iter - begin))\n                newNum |= (1 << i);\n        }\n        currNum = newNum;\n        if (begin != iter)\n            minDiff = min(minDiff, abs(currNum - k));\n    }\n    return minDiff;\n}\n\n};",
    "submit_ts": "1717298651",
    "subm_id": "1274786516"
}