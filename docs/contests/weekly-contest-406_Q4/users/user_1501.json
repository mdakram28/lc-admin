{
    "username": "2909kapil",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n    \n        h = 0\n        v = 0  \n        horizontalCuts = 0\n        verticalCuts = 0\n        totalCost = 0\n\n        while h < len(horizontalCut) and v < len(verticalCut):\n            if horizontalCut[h] >= verticalCut[v]:\n                totalCost += horizontalCut[h] * (verticalCuts + 1)\n                horizontalCuts += 1\n                h += 1\n            else:\n                totalCost += verticalCut[v] * (horizontalCuts + 1)\n                verticalCuts += 1\n                v += 1\n\n        while h < len(horizontalCut):\n            totalCost += horizontalCut[h] * (verticalCuts + 1)\n            h += 1\n\n        while v < len(verticalCut):\n            totalCost += verticalCut[v] * (horizontalCuts + 1)\n            v += 1\n    \n        return totalCost        ",
    "submit_ts": "1720925998",
    "subm_id": "1320272815"
}