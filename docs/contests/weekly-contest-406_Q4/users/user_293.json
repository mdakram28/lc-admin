{
    "username": "RSG_02",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> cuts;\n        m--;\n        n--;\n        for(int i=0; i<m; i++)\n        {\n            cuts.push_back({horizontalCut[i], 1});\n        }\n        for(int i=0; i<n; i++)\n        {\n            cuts.push_back({verticalCut[i], -1});\n        }\n        sort(cuts.begin(), cuts.end());\n        long long numvert = 1, numhorz = 1;\n        long long ans = 0;\n        reverse(cuts.begin(), cuts.end());\n        for(int i=0; i<n+m; i++)\n        {\n            if(cuts[i].second==-1)\n            {\n                ans += numhorz*cuts[i].first;\n                numvert++;\n            }\n            else\n            {\n                ans += numvert*cuts[i].first;\n                numhorz++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925382",
    "subm_id": "1320252823"
}