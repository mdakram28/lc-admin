{
    "username": "DonaldChurchill",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        if (k == 0) return 2;\n\n    // \u4f7f\u7528\u961f\u5217\u8fdb\u884c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n    queue<tuple<long long, int, bool>> q;\n    unordered_map<long long, unordered_map<int, unordered_map<bool, long long>>> memo;\n\n    // \u521d\u59cb\u72b6\u6001\u4ece\u697c\u68af1\u5f00\u59cb\uff0cjump\u4e3a0\uff0c\u672a\u6267\u884c\u5411\u4e0b\u7684\u64cd\u4f5c\n    q.push(make_tuple(1, 0, false));\n    memo[1][0][false] = 1;\n\n    long long ways = 0;\n\n    while (!q.empty()) {\n        auto [current, jump, cameDown] = q.front();\n        q.pop();\n\n        long long currentWays = memo[current][jump][cameDown];\n\n        // \u5982\u679c\u5f53\u524d\u5230\u8fbe\u76ee\u6807\u697c\u68af\uff0c\u7d2f\u52a0\u8def\u5f84\u6570\n        if (current == k) {\n            ways += currentWays;\n        }\n\n        // \u5982\u679c\u53ef\u4ee5\u5411\u4e0b\u8d70\n        if (current > 0 && !cameDown) {\n            if (memo[current - 1][jump][true] == 0) {\n                q.push(make_tuple(current - 1, jump, true));\n            }\n            memo[current - 1][jump][true] += currentWays;\n        }\n\n        // \u5411\u4e0a\u8d70\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u5b89\u5168\u4f4d\u79fb\n        if (jump < 63) {\n            // \u5148\u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\n            if ((1LL << jump) > LLONG_MAX - current) {\n                continue; // \u5982\u679c\u4f1a\u6ea2\u51fa\uff0c\u5219\u8df3\u8fc7\u8fd9\u6b21\u64cd\u4f5c\n            }\n            long long nextPos = current + (1LL << jump);\n            if (memo[nextPos][jump + 1][false] == 0) {\n                q.push(make_tuple(nextPos, jump + 1, false));\n            }\n            memo[nextPos][jump + 1][false] += currentWays;\n        }\n    }\n\n    return ways;\n    }\n};",
    "submit_ts": 1716087030.0
}