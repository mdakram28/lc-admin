{
    "username": "hkgupta",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, char>> pq;\n        \n        for(auto i: horizontalCut) \n            pq.push({i, 'H'});\n        \n        for(auto i: verticalCut) \n            pq.push({i, 'V'});\n        \n        long long ans = 0;\n        int v = 1;\n        int h = 1;\n        while(!pq.empty()) {\n            int val = pq.top().first;\n            char ch = pq.top().second;\n            \n            pq.pop();\n            if(ch=='H' && m>1) {\n                ans += h*val*1LL;\n                v++;\n            } else if(n > 1){\n                ans += v*val*1LL;\n                h++;\n            }\n            // cout<<val<<ch<<ans<<\" \";\n        }\n                      \n        return ans;\n    }\n};",
    "submit_ts": "1720926682",
    "subm_id": "1320293354"
}