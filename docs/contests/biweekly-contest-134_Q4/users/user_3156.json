{
    "username": "rishabh0218",
    "submission": "class Solution {\npublic:\n#define ll long long \nint tree[40005];\n int n;\n// int build(int ss, int se, int si,vector<int>& a){\n//     if(ss==se){\n//         tree[si]=a[ss];\n//         return a[ss];\n//     }\n \n//     int m=ss+(se-ss)/2;\n//     tree[si]= build(ss,m,2*si +1,a)  & build(m+1,se,2*si +2,a);\n//     return tree[si];\n// }\n \n// int get(int a, int b, int ss, int se, int si){\n    \n//     if(a<=ss && b>=se){\n//         return tree[si];\n//     }\n//     if(se<a || ss>b){\n//         return 0;\n//     }\n \n//     int m=ss+(se-ss)/2;\n//     return  get(a,b,ss,m,2*si +1) & get(a,b,m+1,se,2*si +2);\n// }\n    ll countSubarrays(vector<int>& nums, int k) {\n       \n         int n = nums.size();\n        ll ans = 0;\n        unordered_map<ll, ll> mp;\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> curr; \n            if (nums[i] == k) {\n                ++ans;\n            }\n            curr[nums[i]] = 1;\n            for (auto& [value, frequency] : mp) {\n                ll newval = value & nums[i];\n                if (newval == k) {\n                    ans += frequency;\n                }\n                curr[newval] += frequency;\n            }\n            \n            mp = curr;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280926",
    "subm_id": "1311806982"
}