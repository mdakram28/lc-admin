{
    "username": "coderchamp07",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        // cost to freq\n        int two1cnt = 0;\n        map<int, int> two0, two1;\n        int one0 = 0;\n        int one1 = 0;\n        \n        int ans = 0;\n        for(int i = 0; i < (n + 1) / 2; i++) {\n            for(int j = 0; j < (m + 1) / 2; j++) {\n                set<pair<int, int>> cur;\n                cur.insert({i, j});\n                cur.insert({i, m - 1 - j});\n                cur.insert({n - 1 - i, j});\n                cur.insert({n - 1 - i, m - 1 - j});\n                int one = 0;\n                int zero = 0;\n                for(auto& p : cur) {\n                    if(grid[p.first][p.second] == 0)\n                        zero++;\n                    else\n                        one++;\n                }\n                if(cur.size() == 4)\n                    ans += min(one, zero);\n                else if(cur.size() == 2) {\n                    if(one == zero) {\n                        ans++;\n                        two0[1]++;\n                    }\n                    else if(one == 2) {\n                        two1cnt++;\n                        two1[0]++;\n                    }\n                    else\n                        two0[0]++;\n                }\n                else {\n                    if(one) one1++;\n                    else one0++;\n                }\n            }\n        }\n        int remain = (two1cnt * 2 + one1) % 4;\n        cout << ans << \" \" << remain << \"\\n\";\n        if(remain == 1) {\n            int out = INT_MAX;\n            // remove 1 one\n            if(one1 > 0) out = min(out, ans + 1);\n            // add 3 one\n            if(one0 >= 3) out = min(out, ans + 3);\n            if(two0[0] > 0) {\n                if(one0 > 0)\n                    out = min(out, ans + 3);\n            }\n            if(two0[1] > 0) {\n                if(one0 > 0)\n                    out = min(out, ans + 1);\n            }\n            return out;\n        }\n        else if(remain == 2) {\n            int out = INT_MAX;\n            // remove 2 one\n            if(one1 >= 2)\n                out = min(out, ans + 2);\n            if(two1[0] > 0)\n                out = min(out, ans + 2);\n            if(two1[1] > 0)\n                out = min(out, ans);\n            // add 2 one\n            if(one0 >= 2)\n                out = min(out, ans + 2);\n            if(two0[0] > 0)\n                out = min(out, ans + 2);\n            if(two0[1] > 0)\n                out = min(out, ans);\n            return out;\n        }\n        else if(remain == 3) {\n            int out = INT_MAX;\n            // add 1 one\n            if(one0 > 0) out = min(out, ans + 1);\n            // remove 3 one\n            if(one1 > 0) {\n                if(two0[1] > 0)\n                    out = min(out, ans + 1);\n                if(two1[0] > 0)\n                    out = min(out, ans + 3);\n                if(two1[1] > 0)\n                    out = min(out, ans + 1);\n            }\n            return out;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698932",
    "subm_id": "1343196347"
}