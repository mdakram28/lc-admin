{
    "username": "thedude7181",
    "submission": "class Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        ones = s.count(\"1\")\n        zeros = len(s) - ones\n        res = 0\n        for mx_zero in range(int(sqrt(ones) + 1)):\n            z_count = 0\n            left = 0\n            leading_ones = 0\n            for right, ch in enumerate(s):\n                if ch == \"0\":\n                    z_count += 1\n                if z_count > mx_zero:\n                    leading_ones = 0\n                while z_count > mx_zero:\n                    if s[left] == \"0\":\n                        z_count -= 1\n                        leading_ones = 0\n                        left += 1\n                        while mx_zero > 0 and s[left] == \"1\":\n                            leading_ones += 1\n                            left += 1\n                        break\n                        \n                    left += 1\n                if z_count != mx_zero:\n                    if z_count == 0:\n                        leading_ones += 1\n                        left += 1\n                    continue\n                window = right - left + 1 \n                ones_in_window = window - mx_zero\n                if (ones_in_window + leading_ones) >= (mx_zero * mx_zero):\n                    if mx_zero == 0:\n                        res += ones_in_window\n                    else:\n                        res += min(leading_ones + 1, leading_ones + ones_in_window - (mx_zero * mx_zero) + 1) \n                        #print(leading_ones, mx_zero, right, left)\n            #print(res, mx_zero)\n        return res\n            ",
    "submit_ts": "1722137775",
    "subm_id": "1335773364"
}