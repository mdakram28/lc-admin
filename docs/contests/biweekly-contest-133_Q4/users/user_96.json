{
    "username": "donbasta",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        sort(req.begin(), req.end());\n        int sz = req.size();\n        for (int i = 1; i < sz; i++) {\n            if (req[i][1] < req[i - 1][1]) {\n                return 0;\n            }\n        }\n        using ll = long long;\n        const ll MOD = 1e9 + 7;\n        vector<vector<ll>> dp(n + 5, vector<ll>(405));\n        \n        dp[1][0] = 1;\n        \n        int ptr = 0;\n        if (ptr < sz && req[ptr][0] == 0) {\n            for (int inv = 0; inv <= 400; inv++) {\n                if (inv != req[ptr][1]) dp[1][inv] = 0;\n            }\n            ptr++;\n        }\n        \n        for (int i = 2; i <= n; i++) {\n            for (int inv = 0; inv <= 400; inv++) {\n                for (int j = inv; j >= max(0, inv - (i - 1)); j--) {\n                    dp[i][inv] = (dp[i][inv] + dp[i - 1][j]) % MOD;\n                }\n            }\n            if (ptr < sz && req[ptr][0] == i - 1) {\n                for (int inv = 0; inv <= 400; inv++) {\n                    if (inv != req[ptr][1]) dp[i][inv] = 0;\n                }\n                ptr++;\n            }\n        }\n        \n        // for (int i = 1; i <= 3; i++) {\n        //     for (int j = 0; j <= 3; j++) {\n        //         cout << i << ' ' << j << ' ' << dp[i][j] << '\\n';\n        //     }\n        // }\n        \n        \n        return dp[n][req.back()[1]];\n    }\n};",
    "submit_ts": 1719068581.0
}