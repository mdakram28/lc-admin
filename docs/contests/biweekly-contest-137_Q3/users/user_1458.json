{
    "username": "Joydeep Sen",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        // Best values and columns for the top 3 values in each row\n        vector<vector<long long>> topValues(numRows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> topColumns(numRows, vector<int>(3, -1));\n\n        // Populate top values and their column indices for each row\n        for (int row = 0; row < numRows; ++row) {\n            vector<pair<long long, int>> valueWithColumns;\n            for (int col = 0; col < numCols; ++col) {\n                valueWithColumns.emplace_back(board[row][col], col);\n            }\n            sort(valueWithColumns.rbegin(), valueWithColumns.rend()); \n\n            for (int rank = 0; rank < 3 && rank < numCols; ++rank) {\n                topValues[row][rank] = valueWithColumns[rank].first;\n                topColumns[row][rank] = valueWithColumns[rank].second;\n            }\n        }\n\n        // Try all combinations of 3 different rows\n        for (int row1 = 0; row1 < numRows; ++row1) {\n            for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n                for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n                    for (int col1 = 0; col1 < 3; ++col1) {\n                        for (int col2 = 0; col2 < 3; ++col2) {\n                            if (topColumns[row2][col2] == topColumns[row1][col1]) continue;\n                            for (int col3 = 0; col3 < 3; ++col3) {\n                                if (topColumns[row3][col3] == topColumns[row1][col1] || topColumns[row3][col3] == topColumns[row2][col2]) continue;\n\n                                long long currentSum = topValues[row1][col1] + topValues[row2][col2] + topValues[row3][col3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910294",
    "subm_id": "1359224730"
}