{
    "username": "guins_j",
    "submission": "class trie {\npublic:\n    vector<trie*> v;\n    int cost = INT_MAX;\n    trie() {\n        v.resize(26);\n    }\n\n    void insert(string& s, int idx, int cost) {\n        if (idx >= s.size()) {\n            this->cost = min(cost, this->cost);\n            return;\n        }\n        auto c = s[idx];\n        if (!v[c - 'a']) {\n            v[c - 'a'] = new trie();\n        }\n        v[c - 'a']->insert(s, idx + 1, cost);\n    }\n\n    void update_cost(string& s, int sidx, vector<int>& dp, int origIdx) {\n        if (this->cost != INT_MAX) {\n            if (dp[origIdx] != -1) {\n                if (dp[sidx] == -1) {\n                    dp[sidx] = dp[origIdx] + cost;\n                } else {\n                    dp[sidx] = min(dp[sidx], dp[origIdx] + cost);\n                }\n            }\n        }\n        if (sidx >= s.size()) {\n            return;\n        }\n        auto n = v[s[sidx] - 'a'];\n        if (n == nullptr) {\n            return;\n        }\n        n->update_cost(s, sidx + 1, dp, origIdx);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie t;\n        for (int i = 0; i < words.size(); i++) {\n            t.insert(words[i], 0, costs[i]);\n        }\n        vector<int> dp(target.size() + 1, -1);\n        dp[0] = 0;\n        for (int i = 0; i < target.size(); i++) {\n            t.update_cost(target, i, dp, i);\n        }\n//        PRINT_VEC(dp);\n        return dp[target.size()];\n    }\n};",
    "submit_ts": "1720322812",
    "subm_id": "1312359739"
}