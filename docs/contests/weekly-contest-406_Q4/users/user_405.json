{
    "username": "hermit-ww",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int i = m - 2, j = n - 2;\n        int hor = 1, ver = 1;\n        long long cost = 0;\n        while(i >= 0 && j >= 0) {\n            if(horizontalCut[i] >= verticalCut[j]) {\n                cost += (long long)horizontalCut[i] * ver;\n                i--;\n                hor++;\n            }else {\n                cost += (long long)verticalCut[j] * hor;\n                j--;\n                ver++;\n            }\n        }\n        while(i >= 0) {\n            cost += (long long)horizontalCut[i] * ver;\n            i--;\n            hor++;\n        }\n        while(j >= 0) {\n            cost += (long long)verticalCut[j] * hor;\n            j--;\n            ver++;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925484",
    "subm_id": "546439773"
}