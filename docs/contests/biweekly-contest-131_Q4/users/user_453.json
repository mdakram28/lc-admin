{
    "username": "Kennem",
    "submission": "const int N = 50010;\n\nstruct Node\n{\n    int l, r;\n    int d, ld, rd, low;\n} tr[N * 4];\n\nint n, m;\n\nvoid build(int u, int l, int r)\n{\n    tr[u] = {l, r, r - l + 1, r - l + 1, r - l + 1, -1};\n    if (l != r)\n    {\n        int mid = l + r >> 1;\n        build(u << 1, l, mid);\n        build(u << 1 | 1, mid + 1, r);\n    }\n}\n\nvoid pushup(int u)\n{\n    tr[u].ld = tr[u << 1].ld;\n    if (tr[u << 1].ld == tr[u << 1].r - tr[u << 1].l + 1)\n        tr[u].ld += tr[u << 1 | 1].ld;\n\n    tr[u].rd = tr[u << 1 | 1].rd;\n    if (tr[u << 1 | 1].rd == tr[u << 1 | 1].r - tr[u << 1 | 1].l + 1)\n        tr[u].rd += tr[u << 1].rd;\n\n    tr[u].d = max(max(tr[u << 1].d, tr[u << 1 | 1].d), tr[u << 1].rd + tr[u << 1 | 1].ld);\n}\n\nvoid pushdown(int u)\n{\n    if (tr[u].low == -1) return;\n\n    tr[u << 1].low = tr[u << 1 | 1].low = tr[u].low;\n    if (tr[u].low)\n    {\n        tr[u << 1].d = tr[u << 1].ld = tr[u << 1].rd = 0;\n        tr[u << 1 | 1].d = tr[u << 1 | 1].ld = tr[u << 1 | 1].rd = 0;\n    }\n    else\n    {\n        tr[u << 1].d = tr[u << 1].ld = tr[u << 1].rd = tr[u << 1].r - tr[u << 1].l + 1;\n        tr[u << 1 | 1].d = tr[u << 1 | 1].ld = tr[u << 1 | 1].rd = tr[u << 1 | 1].r - tr[u << 1 | 1].l + 1;\n    }\n    tr[u].low = -1;\n}\n\nint query(int u, int ql, int qr)\n{\n    if (tr[u].l > qr || tr[u].r < ql) return 0; \n    if (tr[u].l >= ql && tr[u].r <= qr) return tr[u].d; \n\n    pushdown(u);\n\n    int mid = tr[u].l + tr[u].r >> 1;\n    int res = 0;\n    if (ql <= mid) res = max(res, query(u << 1, ql, qr));\n    if (qr > mid) res = max(res, query(u << 1 | 1, ql, qr));\n\n    // \u8de8\u8d8a\u5de6\u53f3\u5b50\u533a\u95f4\u7684\u5904\u7406\n    if (ql <= mid && qr > mid)\n    {\n        int left_suffix = min(tr[u << 1].rd, mid - ql + 1);\n        int right_prefix = min(tr[u << 1 | 1].ld, qr - mid);\n\n        res = max(res, left_suffix + right_prefix);\n    }\n\n    return res;\n}\n\n\n\nvoid modify(int u, int l, int r, int d)\n{\n    if (tr[u].l >= l && tr[u].r <= r)\n    {\n        if (d)\n        {\n            tr[u].d = tr[u].ld = tr[u].rd = 0;\n            tr[u].low = 1;\n        }\n        else\n        {\n            tr[u].d = tr[u].ld = tr[u].rd = tr[u].r - tr[u].l + 1;\n            tr[u].low = 0;\n        }\n        return;\n    }\n\n    pushdown(u);\n    int mid = tr[u].l + tr[u].r >> 1;\n    if (l <= mid) modify(u << 1, l, r, d);\n    if (r > mid) modify(u << 1 | 1, l, r, d);\n    pushup(u);\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = 5e4 + 10;\n        build(1, 0, n);\n        \n        vector<bool> res;\n        modify(1, 0, 0, 1);\n        unordered_map<int, int> mp;\n        \n        for(auto q:queries){\n            if(q[0]==1){\n                \n                int x = q[1];\n                modify(1, x, x, 1);\n                mp[x] = 1;\n            }else{\n                int x = q[1]; int sz = q[2];\n                \n                if(x<sz){\n                    res.push_back(false);\n                    continue;\n                }\n                \n                if(mp[x]!=1){\n                    modify(1, x, x, 1);\n                }\n\n                int ans = query(1, 0, x);\n                // cout<<ans<<endl;\n                \n                if(mp[x]!=1){\n                    modify(1, x, x, 0);\n                }\n\n                if(ans>=sz-1){\n                    res.push_back(true);\n                }else{\n                    res.push_back(false);\n                }\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1716652702.0
}