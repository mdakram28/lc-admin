{
    "username": "sammochen",
    "submission": "\n#include <bits/stdc++.h>\nusing namespace std;\n\n#ifdef DEBUG\n#include \"debug.h\"\n#else\n#define debug(...) 1\n#endif\n\nusing ll = long long;\nusing db = long double;\nusing VS = vector<string>;\nusing VLL = vector<ll>;\nusing VVLL = vector<VLL>;\nusing VVVLL = vector<VVLL>;\nusing PLL = pair<ll, ll>;\nusing MLL = map<ll, ll>;\nusing SLL = set<ll>;\nusing QLL = queue<ll>;\nusing SS = stringstream;\n\n#define rep(x, l, u) for (ll x = l; x < u; x++)\n#define rrep(x, l, u) for (ll x = l; x >= u; x--)\n#define fe(x, a) for (auto x : a)\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define mst(x, v) memset(x, v, sizeof(x))\n#define sz(x) (ll) x.size()\n\n#define umap unordered_map\n#define uset unordered_set\n#define mset multiset\n\n// clang-format off\n\nll ob(ll i, ll n) { return i < 0 || i >= n; }\nll tp(ll x) { return ( 1LL << x ); }\nll rup(ll a, ll b) { return a % b ? a/b + 1 : a/b; }\nll sign(ll x) {\treturn x == 0 ? 0 : x / abs(x); }\nvoid makemod(ll& x, ll m) { x %= m; if (x < 0) { x += m; } }\nll getmod(ll x, ll m) { makemod(x, m); return x; }\nll powmod(ll a, ll b, ll m) { if (b == 0) return 1; ll h = powmod(a, b/2, m); ll ans = h*h%m; return b%2 ? ans*a%m : ans; }\nll invmod(ll a, ll m) { return powmod(a, m - 2, m); }\nvoid inll(ll& x) { scanf(\"%lld\", &x); }\n\ntemplate <typename A, typename B> bool upmin(A& x, B v) { if (v >= x) return false; return x = v, true; }\ntemplate <typename A, typename B> bool upmax(A& x, B v) { if (v <= x) return false; return x = v, true; }\n// clang-format on\n\nconst VLL di = {0, 0, 1, -1, 1, -1, 1, -1}, dj = {1, -1, 0, 0, -1, -1, 1, 1};\nconst ll inf = 1e8;\nconst ll mod = 1e9 + 7;\nconst string vowels = \"aeiou\";\nll isvowel(char c) {\n    c = tolower(c);\n    return vowels.find(c) != string::npos;\n}\n\nvector<vector<vector<vector<int>>>> dp1;\nvector<vector<vector<vector<vector<int>>>>> dp2;\nclass Solution {\npublic:\n    vector<vector<int>> A;\n    ll n, m;\n\n    ll hasOne(ll i1, ll j1, ll i2, ll j2) {\n        if (i1 > i2) return 0;\n        if (j1 > j2) return 0;\n\n        int& ans = dp1[i1][j1][i2][j2];\n        if (ans != -1) return ans;\n        return ans = (A[i2][j2] || hasOne(i1, j1, i2, j2 - 1) || hasOne(i1, j1, i2 - 1, j2));\n    }\n\n    ll get1(ll i1, ll j1, ll i2, ll j2, ll rectangles) {\n        if (i1 > i2) return inf;\n        if (j1 > j2) return inf;\n\n        // if no 1s in here, just return 0\n        if (!hasOne(i1, j1, i2, j2)) {\n            return 0;\n        }\n\n        if (rectangles == 0) {\n            return inf;\n        }\n\n        int& ans = dp2[i1][j1][i2][j2][rectangles];\n        if (ans != -1) return ans;\n\n        // firstly, inch the i/j border as close as possible\n        while (!hasOne(i1, j1, i1, j2)) i1++;\n        while (!hasOne(i2, j1, i2, j2)) i2--;\n        while (!hasOne(i1, j1, i2, j1)) j1++;\n        while (!hasOne(i1, j2, i2, j2)) j2--;\n\n        // now we need to split something\n\n        // at any moment we can stop splitting by row and go by column\n        ans = (i2 - i1 + 1) * (j2 - j1 + 1);\n\n        rep(i, i1, i2) {\n            rep(cur, 1, rectangles) {\n                ll one = get1(i1, j1, i, j2, cur);\n                ll two = get1(i + 1, j1, i2, j2, rectangles - cur);\n\n                upmin(ans, one + two);\n            }\n        }\n\n        rep(j, j1, j2) {\n            rep(cur, 1, rectangles + 1) {\n                ll one = get1(i1, j1, i2, j, cur);\n                ll two = get1(i1, j + 1, i2, j2, rectangles - cur);\n\n                upmin(ans, one + two);\n            }\n        }\n\n        return ans;\n    }\n\n    int minimumSum(vector<vector<int>>& B) {  // !\n        A = B;\n        n = A.size(), m = A[0].size();\n\n        dp1.assign(n, vector<vector<vector<int>>>(m, vector<vector<int>>(n, vector<int>(m, -1))));\n        dp2.assign(n, vector<vector<vector<vector<int>>>>(m, vector<vector<vector<int>>>(n, vector<vector<int>>(m, vector<int>(4, -1)))));\n        return get1(0, 0, n - 1, m - 1, 3);\n    }\n};\n",
    "submit_ts": 1719112365.0
}