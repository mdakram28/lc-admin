{
    "username": "samarthgattu",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        int n=a.size();\n        vector<vector<int>> v(n+1, vector<int> (30,0));\n        for(int j=0;j<30;j++){\n            if(a[0]&(1<<j)) v[1][j]=1;\n        }\n        int ll=INT_MIN,hh=INT_MAX;\n        for(int i=1;i<n;i++){\n            v[i+1]=v[i];\n            for(int j=0;j<30;j++){\n                if(a[i]&(1<<j)) v[i+1][j]++;\n            }\n        }\n\n\n        for(int i=1;i<=n;i++){\n            int low=0,high=i-1;\n            while(low<=high){\n                int mid=(low+high)/2;\n                vector<int> cur(30);\n                int an=(1<<30)-1;\n                for(int j=0;j<30;j++){\n                    cur[j]=v[i][j]-v[mid][j];\n                    if(cur[j]!=i-mid) an^=(1<<j);\n                }\n\n                if(an<=k){\n                    ll=max(ll,an);\n                    low=mid+1;\n                }else{\n                    hh=min(hh,an);\n                    high=mid-1;\n                }\n            }\n        }\n        if(hh==INT_MAX) return k-ll;\n        if(ll==INT_MIN) return hh-k;\n        return min(hh-k,k-ll);\n    }\n};",
    "submit_ts": 1717298927.0
}