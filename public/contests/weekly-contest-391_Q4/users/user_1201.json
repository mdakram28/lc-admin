{
    "username": "JeetuGupta",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> sum(points.size());\n        vector<pair<int, int>> diff(points.size());\n        int n = points.size();\n        for(int i = 0; i<n; i++){\n            sum[i] = {points[i][0] + points[i][1], i};\n            diff[i] = {points[i][0] - points[i][1], i};\n        }\n        \n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        \n        int sd = sum[n-1].first - sum[0].first ;\n        int dd = diff[n-1].first - diff[0].first;\n        set<int> index;\n        if(sd > dd){\n            index.insert(sum[n-1].second);\n            index.insert(sum[0].second);\n        }else if(dd > sd){\n            index.insert(diff[n-1].second);\n            index.insert(diff[0].second);\n        }else{\n            index.insert(sum[n-1].second);\n            index.insert(sum[0].second);\n            index.insert(diff[n-1].second);\n            index.insert(diff[0].second);\n        }\n        \n        int ans = max(sd, dd);\n        for(auto x : index){\n            int sStart, sEnd, dStart, dEnd;\n            if(sum[0].second == x){\n                sStart = sum[1].first;\n            }else sStart = sum[0].first;\n            \n            if(sum[n-1].second == x) sEnd = sum[n-2].first;\n            else sEnd = sum[n-1].first;\n            \n            \n            if(diff[0].second == x){\n                dStart = diff[1].first;\n            }else dStart = diff[0].first;\n            \n            if(diff[n-1].second == x) dEnd = diff[n-2].first;\n            else dEnd = diff[n-1].first;\n            \n            int cur = max(sEnd - sStart, dEnd - dStart);\n            ans = min(ans, cur);\n        }\n        \n        return ans;\n    }\n};"
}