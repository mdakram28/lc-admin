{
    "username": "adhishkancharla",
    "submission": "using vi = vector<int>;\nusing vvi = vector<vi>;\nclass Solution {\npublic:\n    pair<int,int> farthest(int u,int v,vvi&adj)\n    {\n        int n = (int)adj.size();\n        queue<int>q;\n        q.push(u);\n        vi d(n,1e9);\n        d[u] = 0;\n        while (!q.empty()){\n            int cur = q.front();\n            q.pop();\n            for (int v:adj[cur]){\n                if (d[v] > d[cur] + 1){\n                    d[v] = d[cur] + 1;\n                    q.push(v);\n                }\n            }\n        }\n        int maxi = 0;\n        for (int i = 1;i<n;i++)\n            if (d[i] > d[maxi])maxi = i;\n        return {maxi,d[v]};\n    }\n    bool dfs(int u,int p,int v,vvi&adj,vi&path)\n    {\n        path.push_back(u);\n        if (u == v)return true;\n        for (int child:adj[u]){\n            if (child == p)continue;\n            if (dfs(child,u,v,adj,path))return true;\n        }\n        path.pop_back();\n        return false;\n    }\n    int middle(int u,int v,vvi&adj)\n    {\n        vi path;\n        dfs(u,u,v,adj,path);\n        return path[(int)path.size()/2];\n    }\n    pair<int,int> diameter(vvi&adj)\n    {\n        int n = (int)adj.size();\n        int u = 0;\n        int v = farthest(u,0,adj).first;\n        int w = farthest(v,0,adj).first;\n        int dist = farthest(v,w,adj).second;\n        return {dist,middle(v,w,adj)};\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = (int)edges1.size() + 1;\n        int m = (int)edges2.size() + 1;\n        vvi a1(n),a2(m);\n        for (auto&it:edges1){\n            a1[it[0]].push_back(it[1]);\n            a1[it[1]].push_back(it[0]);\n        }\n        for (auto&it:edges2){\n            a2[it[0]].push_back(it[1]);\n            a2[it[1]].push_back(it[0]);\n        }\n        int d1 = diameter(a1).first;\n        int d2 = diameter(a2).first;\n        return max({d1,d2,1 + (d1 + 1)/2 + (d2 + 1)/2});\n    }\n};",
    "submit_ts": "1719717607",
    "subm_id": "1304396088"
}