{
    "username": "Owase301",
    "submission": "const int N = 1e5+10;\nint seg[N*20+10];\nint lazy[N*20+10];\n\nclass Solution {\npublic:\n    int upd(int cur, int l, int r, int L, int R, int val){\n        if(lazy[cur] == 1){\n            if(L != R){\n                seg[cur*2] = 0;\n                seg[cur*2+1] = 0;\n                lazy[cur*2] = 1;\n                lazy[cur*2+1] = 1;\n            }\n        }\n        if(l > r) return 0;\n        if(l > R || L > r) return seg[cur];\n        if(l <= L && R <= r) {\n            seg[cur] = val;\n            lazy[cur] = val == 0;\n            return seg[cur];\n        }\n        int mid = (L+R)/2;\n        int lft = upd(cur*2+1, l, r, mid+1, R, val);\n        int rgt = upd(cur*2,l,r,L,mid,val);\n        seg[cur] = lft + rgt;\n        return seg[cur];\n\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        n = n -1;\n        for(int i=1; i<=n*20; i++) seg[i] = lazy[i] = 0;\n        for(int i=1; i<=n; i++) upd(1, i, i, 1, n, 1);\n        // for(int i=1; i<=n*3; i++) cout <<seg[i] << \" \";\n        // cout << endl;\n        vector<int> fans;\n        for(auto q: queries){\n            int lo = q[0];\n            int hg = q[1];\n            int ans = upd(1, lo+1, hg-1, 1, n, 0);\n            // for(int i=1; i<=n*3; i++) cout <<seg[i] << \" \";\n            // cout << endl;\n            //cout << ans << endl;\n            fans.push_back(ans);\n        }\n        return fans;\n\n        // curSize = curSize - max(0,( R - maxR[L]))\n    }\n};",
    "submit_ts": "1722743028",
    "subm_id": "1343782666"
}