{
    "username": "charles2010",
    "submission": "class Solution {\npublic:\n\n\n\n\n\nint minimumDifference(vector<int>& nums, int k) {\n    int res = INT_MAX;\n    for (int num : nums) {\n        if (num <= k)\n            res = min(res, abs(num - k));\n    }\n\n    vector<int> vv(31, -1);\n    bool bh = false;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] > k)\n        {\n            bh = true;\n            for (int j = 0; j < 31; j++) {\n                if ((nums[i] >> j & 1) == 0)\n                    vv[j] = i;\n            }\n\n            if (bh) {\n                int p = i;\n                vector<int> d(31, 0);\n                iota(d.begin(), d.end(), 0);\n                sort(d.begin(), d.end(), [&](int a, int b) {\n                    return vv[a] < vv[b];\n                });\n        \n                int cur = nums[p];\n                for (int q = 30; q >= 0; q--) {\n                    if (vv[d[q]] != -1)\n                    {\n                        //if (i==4)\n                        //    cout << vv[q] << endl;\n                        cur &= nums[vv[d[q]]];\n                        res = min(res, abs(k - cur));\n                    }\n                }\n            }\n        }\n        else {\n            bh = false;\n            fill(vv.begin(), vv.end(), -1);\n        }\n    }\n    return res;\n}\n\n\n\n};",
    "submit_ts": 1717298918.0
}