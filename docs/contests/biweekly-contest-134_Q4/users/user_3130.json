{
    "username": "shubhamvc35",
    "submission": "#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        // Declaring variables \n        std::unordered_map<long long, long long> prevRes; // Declaring unordered_map\n        \n        // For loop initialization\n        for (int i = 0; i < n; ++i) {\n            std::unordered_map<long long, long long> currRes; // Creating unordered_map for currResults\n            \n            if (nums[i] == k) {\n                ++count;\n            }\n            \n            currRes[nums[i]] = 1;\n            \n            // For loop initialization\n            for (auto& [val, freq] : prevRes) {\n                long long newAndRes = val & nums[i];\n                if (newAndRes == k) {\n                    count += freq;\n                }\n                currRes[newAndRes] += freq;\n            }\n            \n            prevRes = currRes;\n        }                                                                                                                                                                                  \n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720280524",
    "subm_id": "1311792588"
}