{
    "username": "ife2022015",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>&arr ) \n    {\n        int n=arr.size();\n        int m=arr[0].size();\n        int count=0;\n        int sum=0;\n        int flag=0;\n        for(int v=0;v<(n+1)/2;v++)\n        {\n            for(int h=0;h<(m+1)/2;h++)\n            {\n                if(v==(n-1-v) && h==(m-1-h))//middle columa and middle row but one is present\n                {\n                    if(arr[v][h]==1)count++;\n                }\n                else if(v==(n-1-v))//vecrtical middle\n                {\n                    if(arr[v][h]!=arr[v][m-1-h])\n                    {flag=1;\n                    count++;\n                    }//both different so making to zero so cnt inc\n                    else if(arr[v][h]==1)\n                    {\n                        sum+=2;\n                    \n                    }\n                }\n                else if(h==(m-1-h))//column is middle\n                {\n                    if(arr[v][h]!=arr[n-1-v][h])\n                    {flag=1;\n                    count++;\n                    }\n                    else if(arr[v][h]==1)\n                    {\n                        sum+=2;\n                        \n                    }\n                }\n                else if(h!=(m-1-h) && v!=(n-1-v))\n                {\n                    int sum=0;\n                    sum+=arr[v][h]+arr[v][m-1-h] + arr[n-1-v][h]+arr[n-1-v][m-1-h];\n                    if(sum==1 || sum==3)\n                    count+=1;\n                    else if(sum==2)\n                    count+=2;\n                    \n                }\n            }\n        }\n        if(sum%4==2 && flag==0)\n        return count+2;\n        return count;\n    }\n};",
    "submit_ts": "1722700142",
    "subm_id": "1343232929"
}