{
    "username": "kartikc01",
    "submission": "class Solution {\n    fun countSubarrays(nums: IntArray, k: Int): Long {\n        val n = nums.size\n        var result: Long = 0\n        var prev = mutableMapOf<Long, Long>()\n        for (i in 0 until n) {\n            val curr = mutableMapOf<Long, Long>()\n            if (nums[i] == k) {\n                result++\n            }\n            curr[nums[i].toLong()] = 1\n            for ((value, freq) in prev) {\n                val new = value and nums[i].toLong()\n                if (new == k.toLong()) {\n                    result += freq\n                }\n                curr[new] = curr.getOrDefault(new, 0L) + freq\n            }   \n            prev = curr\n        }\n        return result\n    }\n}",
    "submit_ts": "1720279881",
    "subm_id": "1311768800"
}