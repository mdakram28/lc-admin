{
    "username": "SaHiL7264",
    "submission": "class Solution {\npublic:\n    \n    int minFlips(vector<vector<int>>& grid) {\n        vector<vector<int>>count;\n        int n = grid.size();\n        int m = grid[0].size();\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == -1) continue;\n                int o= 0,z = 0;\n                queue<pair<int,int>>dq;\n                dq.push({i,j});\n                if(grid[i][j] == 0){ z++; }\n                else {o++;}\n                grid[i][j] = -1;\n                while(!dq.empty()){\n                    int ni = dq.front().first;\n                    int nj = dq.front().second;\n                    dq.pop();\n                    int l = n - ni - 1;\n                    int r = m - nj - 1;\n                    if(grid[l][nj] != -1){\n                        if(grid[l][nj] == 0) z++;\n                        else o++;\n                        grid[l][nj] = -1;\n                        dq.push({l,nj});\n                    }\n                    if(grid[ni][r] != -1){\n                        if(grid[ni][r] == 0) z++;\n                        else o++;\n                        grid[ni][r] = -1;\n                        dq.push({ni,r});\n                    }\n                }\n                count.push_back({z,o});\n            }\n        }\n        int sz = count.size();\n        int dp[sz + 1][4];\n        for (int i = 0; i < 4; i++) {\n            dp[sz][i] = n * m;\n        }\n        \n        dp[sz][0] = 0;\n        for (int i = sz - 1; i >= 0; i--) {\n            for (int j = 0; j < 4; j++) {\n                dp[i][j] = count[i][1] + dp[i + 1][j];\n                dp[i][j] = min(dp[i][j], count[i][0] + dp[i + 1][(j + count[i][0] + count[i][1]) % 4]); \n            }\n        }\n        return dp[0][0];\n    }\n};",
    "submit_ts": "1722700306",
    "subm_id": "1343237875"
}