{
    "username": "cclin0816",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int cnt = 0;\n        for (int i = 0; i < m / 2; ++i) {\n            for (int j = 0; j < n / 2; ++j) {\n                int c = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] +\n                        grid[m - 1 - i][n - 1 - j];\n                if (c > 2)\n                    c = 4 - c;\n                cnt += c;\n            }\n        }\n        int pc = 0;\n        int bc = 0;\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[m / 2][i] != grid[m / 2][n - 1 - i]) {\n                    cnt++;\n                    bc++;\n                } else {\n                    pc += grid[m / 2][i];\n                }\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2]) {\n                    cnt++;\n                    bc++;\n                } else {\n                    pc += grid[i][n / 2];\n                }\n            }\n        }\n        if (pc % 2 == 1 && bc == 0) {\n            cnt += 2;\n        }\n        if (m % 2 == 1 && n % 2 == 1) {\n            cnt += grid[m / 2][n / 2];\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1722697420",
    "subm_id": "1343145870"
}