{
    "username": "darrenhp",
    "submission": "class Solution {\npublic:\n\n    vector<bool> getResults(vector<vector<int>>& queries) {\n      vector<int> X;\n      for (auto &q: queries) X.push_back(q[1]);\n      sort(X.begin(), X.end()), X.erase(unique(X.begin(), X.end()), X.end());\n      int sz = queries.size();\n      vector<bool> ans;\n      map<int, int> M;\n      M[0] = 0;\n      M[0x3f3f3f3f] = 0x3f3f3f3f;\n      for (auto q: queries) {\n        int op = q[0];\n        if (op == 1) {\n          int x = q[1];\n          auto it = M.lower_bound(x);\n          M[x] = max(prev(it)->second, x-prev(it)->first);\n          it->second = max(M[x], it->first-x);\n          it = next(it);\n          while (it != M.end() && it->second > prev(it)->second) {\n            if (it->first-prev(it)->first == it->second) break;\n            it->second = max( it->first-prev(it)->first, prev(it)->second);\n            it = next(it);\n          }\n        } else if (op == 2) {\n          //  for (auto [k, v]: M) cout << k << \":\"  << v << \" \"; cout << endl;\n          int x = q[1], sz = q[2];\n          auto it = prev(M.lower_bound(x));\n          if (it->second>=sz) ans.push_back(true);\n          else if (x-it->first>=sz) ans.push_back(true);\n          else ans.push_back(false);\n        }\n      }\n      return ans;\n    }\n};",
    "submit_ts": 1716649808.0
}