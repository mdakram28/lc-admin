{
    "username": "frogfox",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        r,c=len(grid),len(grid[0])\n        pat={(i,j):(i,j) for i in range(r)for j in range(c)}\n        def find(x):\n            if x not in pat:\n                pat[x]=x\n            if pat[x]!=x:\n                pat[x]=find(pat[x])\n            return pat[x]\n        \n        def union(x,y):\n            a,b=find(x),find(y)\n            if a<b:\n                pat[b]=a\n            elif b<a:\n                pat[a]=b\n                \n        for i in range(r):\n            for j in range(c//2):\n                union((i,j),(i,c-1-j))\n                    \n        for i in range(c):\n            for j in range(r//2):\n                union((j,i),(r-1-j,i))\n        \n        chd=defaultdict(list)\n        for i in pat:\n            p=find(i)\n            chd[p].append(i)\n            \n            \n        st=[]\n        z=[defaultdict(int) for i in range(2)]\n        s=[0]*2\n        for p in chd:\n            if len(chd[p])==1:\n                \n                cur=grid[chd[p][0][0]][chd[p][0][1]]\n                \n                st.append((cur,1))\n                continue\n            cnt=cur=0\n            for c in chd[p]:\n                cnt+=1\n                cur+=grid[c[0]][c[1]]\n            st.append((cur,cnt))\n            \n        mn=1<<31\n        # print(st)\n        n=len(st)\n        dp=[[1<<31]*4 for _ in range(n+1)]\n        dp[0][0]=0\n        for i in range(n):\n            one,cnt=st[i]\n            for j in range(4):\n                d2=(j+cnt)%4\n                dp[i+1][d2]=min(dp[i+1][d2],dp[i][j]+cnt-one)\n                dp[i+1][j]=min(dp[i+1][j],dp[i][j]+one)\n            # print(dp)\n        \n        return dp[-1][0]",
    "submit_ts": "1722698937",
    "subm_id": "1343196479"
}