{
    "username": "jszqlew",
    "submission": "typedef long long ll;\nint st[20][100000];\nint n, m = 20;\nint log_table[100001];\nvoid build(vector<int>& aa)\n{\n    // cout << \"building\" << endl;\n    memset(st, 0xff, sizeof(st));\n    for (int i = 2; i <= n; ++i)\n      log_table[i] = log_table[i >> 1] + 1;\n    for (int i = 0; i < n; ++i)\n      st[0][i] = aa[i];\n    for (int j = 1; j < m; ++j)\n      for (int i = 0; i + (1 << j) - 1 < n; ++i)\n        st[j][i] = st[j - 1][i] & st[j - 1][i + (1 << (j - 1))];\n    // cout << \"out\" << endl;\n}\n\nint query(int l, int r)\n{\n    // cout << \"Here\" << endl;\n    // cout << l << ' ' << r << ' ';\nint lg = log_table[r - l];\n    // cout << lg << endl;\nint ans = st[lg][l] & st[lg][r - (1 << lg)];\n    // cout << \"done\" << endl;\n    return ans;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        n = nums.size();\n        build(nums);\n        ll best = INT_MAX;\n        for (int i=0; i<n; ++i) {\n            int lo = i, hi = n;\n            while (lo + 1 < hi) {\n                int mid = (lo + hi) >> 1;\n                if (query(i, mid) <= k) {\n                    hi = mid;\n                } else {\n                    lo = mid;\n                }\n            }\n            \n            ll below = query(i, hi);\n            if (lo == 0) {\n                                best = min(best, abs(k - below));\n\n            } else {\n            ll above = query(i, lo);\n            best = min(best, min(abs(k - below), abs(k - above)));\n            }\n        }\n        return best;\n    }\n};",
    "submit_ts": "1717298426",
    "subm_id": "1274778614"
}