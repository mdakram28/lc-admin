{
    "username": "liu-qing-8t",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k)\n    {\n        int size = colors.size();\n        colors.insert(colors.end(), colors.begin(), colors.end());\n\n        std::vector<int> v_val(colors.size());\n        for (int i = 1; i < colors.size() - 1; ++i)\n        {\n            if (colors[i] != colors[i-1] && colors[i] != colors[i+1])\n            {\n                v_val[i] = 1;\n            }\n        }\n        std::vector<int> v_prefix_sum = v_val;\n        for (int i = 1; i < v_prefix_sum.size(); ++i)\n        {\n            v_prefix_sum[i] += v_prefix_sum[i-1];\n        }\n\n        auto get_range = [&v_prefix_sum](auto l, auto r){\n            if (l == 0)\n            {\n                return v_prefix_sum[r];\n            }\n            return v_prefix_sum[r] - v_prefix_sum[l-1];\n        };\n\n        int result = 0;\n        for (int i = 0; i < size; ++i)\n        {\n            if (get_range(i + 1, i + 1 + k - 3) == k - 2)\n            {\n                ++result;\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1720277687",
    "subm_id": "544558180"
}