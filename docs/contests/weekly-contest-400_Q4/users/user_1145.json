{
    "username": "j10926jacky",
    "submission": "public class Solution {\n    public int MinimumDifference(int[] nums, int k) {\n         int[] zeros = new int[32], zeros2;\n        int res = int.MaxValue;\n        for (int l = 0, r = 0; r < nums.Length; r++)\n        {\n            int cur = 0, cur2;\n            for (int i = 0; i < 32; i++)\n            {\n                if ((nums[r] & (1 << i)) == 0)\n                {\n                    zeros[i]++;\n                }\n                if (zeros[i] == 0)\n                {\n                    cur |= 1 << i;\n                }\n            }\n            while (l < r)\n            {\n                cur2 = 0;\n                zeros2 = zeros.ToArray();\n                for (int i = 0; i < 32; i++)\n                {\n                    if ((nums[l] & (1 << i)) == 0)\n                    {\n                        zeros2[i]--;\n                    }\n                    if (zeros2[i] == 0)\n                    {\n                        cur2 |= 1 << i;\n                    }\n                }\n                if (Math.Abs(cur - k) >= Math.Abs(cur2 - k))\n                {\n                    cur = cur2;\n                    zeros = zeros2;\n                    l++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            res = Math.Min(Math.Abs(cur - k), res);\n        }\n        return res;\n    }\n}",
    "submit_ts": 1717300675.0
}