{
    "username": "Noushil Sharma",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& matrix) {\n        int numRows = matrix.size();\n        int numCols = matrix[0].size();\n        vector<vector<pair<int, int>>> topThreeValues = extractTopThree(matrix, numRows, numCols);\n\n        return computeMaxSum(topThreeValues, numRows);\n    }\n\nprivate:\n    vector<vector<pair<int, int>>> extractTopThree(vector<vector<int>>& matrix, int numRows, int numCols) {\n        vector<vector<pair<int, int>>> topThree(numRows);\n        for (int i = 0; i < numRows; ++i) {\n            vector<pair<int, int>> rowEntries;\n            for (int j = 0; j < numCols; ++j) {\n                rowEntries.push_back({matrix[i][j], j});\n            }\n            sort(rowEntries.begin(), rowEntries.end(), greater<pair<int, int>>());\n            for (int k = 0; k < min(3, numCols); ++k) {\n                topThree[i].push_back(rowEntries[k]);\n            }\n        }\n        return topThree;\n    }\n\n    long long computeMaxSum(vector<vector<pair<int, int>>>& topThreeValues, int numRows) {\n        long long maxSum = LLONG_MIN;\n        for (int firstRow = 0; firstRow < numRows; firstRow++) {\n            for (int secondRow = firstRow + 1; secondRow < numRows; secondRow++) {\n                for (int thirdRow = secondRow + 1; thirdRow < numRows; thirdRow++) {\n                    for (auto &firstPair : topThreeValues[firstRow]) {\n                        for (auto &secondPair : topThreeValues[secondRow]) {\n                            if (secondPair.second == firstPair.second) continue;\n                            for (auto &thirdPair : topThreeValues[thirdRow]) {\n                                if (thirdPair.second == firstPair.second || thirdPair.second == secondPair.second) continue;\n                                long long currentSum = (long long)(firstPair.first) + secondPair.first + thirdPair.first;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723908644",
    "subm_id": "1359161203"
}