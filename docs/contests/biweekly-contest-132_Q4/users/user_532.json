{
    "username": "mkaif1617",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) { \n        int n = nums.size(); \n        \n       \n        vector<map<int, int>> new_arr(k + 1); \n        int maxi = 1; \n        vector<int> new_nums(k + 1, -1); \n        \n         vector<vector<int>> dp(n+1, vector<int>(k + 1, 1)); \n        \n        \n        for (int i = 0; i < n; i++) { \n            \n            for (int j = 0; j <= k; j++) { \n                \n                for (int l = 0; l < j; l++) dp[i][j] = max(dp[i][j], 1 + new_nums[l]); \n                    \n                \n                if (new_arr[j].find(nums[i]) != new_arr[j].end()) dp[i][j] = max(dp[i][j], 1 + new_arr[j][nums[i]]); \n                    \n                 \n                \n                maxi = max(maxi, dp[i][j]); \n            } \n            for (int l = 0; l <= k; l++) {\n                \n                new_nums[l] = max( dp[i][l] ,new_nums[l]); \n                \n                new_arr[l][nums[i]] = max( dp[i][l] , new_arr[l][nums[i]]); \n            } \n        } \n        return maxi; \n    }\n};\n",
    "submit_ts": 1717861970.0
}