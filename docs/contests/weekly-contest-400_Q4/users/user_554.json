{
    "username": "Siddharth1411",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<ll>>pre(n, vector<ll>(32, 0));\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 32; j++){\n                if((1LL<<j) & nums[i]) pre[i][j]++;\n            }\n        }\n        for(int i = 1; i < n; i++){\n            for(int j = 0; j < 32; j++){\n                pre[i][j] += pre[i - 1][j];\n            }\n        }\n        int l = 0;\n        ll min_diff = abs(k - nums[0]);\n        ll curr_and = (1LL<<35) - 1;\n        for(int r = 0; r < n; r++){\n            curr_and = (curr_and & nums[r]);\n            min_diff = min(min_diff, abs(k - curr_and));\n            while(curr_and < k && l < r){\n                for(int i = 0; i < 32; i++){\n                    if(!(curr_and & (1LL<<i))){\n                        if(pre[r][i] - pre[l][i] == r - l){\n                            curr_and += (1LL<<i);\n                        }\n                    }\n                }\n                min_diff = min(min_diff, abs(k - curr_and));\n                l++;\n            }\n            min_diff = min(min_diff, abs(k - curr_and));\n        }\n        return min_diff;\n    }\n};",
    "submit_ts": "1717298827",
    "subm_id": "1274792546"
}