{
    "username": "HeathCliff1020",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        List<Pair<Integer, Integer>> list = new ArrayList<>();\n\n        int l1 = 0;\n        int r1 = m - 1;\n\n        while (l1 <= r1) {\n            int l2 = 0;\n            int r2 = n - 1;\n\n            while (l2 <= r2) {\n                int oneCount = 0;\n                int zeroCount = 0;\n\n                if (l2 == r2 && l1 == r1) {\n                    if (grid[l1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                } else if (l2 == r2 && l1 < r1) {\n                    if (grid[l1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                    if (grid[r1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                } else if (l1 == r1 && l2 < r2) {\n                    if (grid[l1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                    if (grid[l1][r2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                } else {\n                    if (grid[l1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                    if (grid[r1][l2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                    if (grid[l1][r2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                    if (grid[r1][r2] == 1) {\n                        oneCount++;\n                    } else {\n                        zeroCount++;\n                    }\n                }\n\n                list.add(new Pair<>(oneCount, zeroCount));\n                l2++;\n                r2--;\n            }\n            l1++;\n            r1--;\n        }\n\n        int ans = 0;\n        int c1 = 0;\n        int c3 = 0;\n        for (Pair<Integer, Integer> c : list) {\n            int o = c.getKey();\n            int z = c.getValue();\n\n            if  ((o + z == 1) && o == 1) {\n                ans++;\n            } else if (o + z == 4) {\n                ans += 4 - Math.max(o, z);\n            } else {\n                if (o == 2) {\n                    c1++;\n                } else if (o == 1){\n                    c3++;\n                    ans++;\n                }\n            }\n        }\n\n        if (c1 % 2 == 1 && c3 == 0) {\n            ans += 2;\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1722700477",
    "subm_id": "1343243109"
}