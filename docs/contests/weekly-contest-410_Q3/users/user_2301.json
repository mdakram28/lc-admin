{
    "username": "amriteshwar_rao1",
    "submission": "import java.util.*;\n\npublic class Solution {\n    private static final long MOD = 1_000_000_007L;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][][] dp = new long[n][51][51];\n        for (long[][] matrix : dp) {\n            for (long[] row : matrix) {\n                Arrays.fill(row, -1);\n            }\n        }\n        return (int) calculatePairs(nums, 0, 0, nums[0], dp);\n    }\n\n    private long calculatePairs(int[] nums, int index, int x, int y, long[][][] dp) {\n        if (index >= nums.length) return 1;\n        if (dp[index][x][y] != -1) return dp[index][x][y];\n        \n        long total = 0;\n        for (int newX = x; newX <= nums[index]; newX++) {\n            for (int newY = y; newY >= 0; newY--) {\n                if (newX + newY == nums[index]) {\n                    total = (total + calculatePairs(nums, index + 1, newX, newY, dp)) % MOD;\n                }\n            }\n        }\n        dp[index][x][y] = total;\n        return total;\n    }\n}\n",
    "submit_ts": "1723346866",
    "subm_id": "1351586831"
}