{
    "username": "spiedeman",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        i = 0\n        while i * 2 < m - 1:\n            j = 0\n            while j * 2 < n - 1:\n                cnt = sum([grid[i][j], grid[m-i-1][j], grid[i][n-j-1], grid[m-i-1][n-j-1]])\n                ans += min(cnt, 4 - cnt)\n                j += 1\n            i += 1\n        # print(ans)\n        s = 0\n        row, col = 0, 0\n        if m % 2:\n            i, j = m // 2, 0\n            while j * 2 < n - 1:\n                if grid[i][j] != grid[i][n-j-1]:\n                    row += 1\n                else:\n                    s += grid[i][j] + grid[i][n-j-1]\n                j += 1\n        if n % 2:\n            i, j = 0, n // 2\n            while i * 2 < m - 1:\n                if grid[i][j] != grid[m-i-1][j]:\n                    col += 1\n                else:\n                    s += grid[i][j] + grid[m-i-1][j]\n                i += 1\n        # print(s, row, col)\n        if s % 4 == 0:\n            ans += row + col\n        else:\n            if row + col == 0:\n                ans += 2\n            else:\n                ans += row + col\n\n        if m % 2 and n % 2 and grid[m//2][n//2]:\n            ans += 1\n        return ans",
    "submit_ts": "1722699223",
    "subm_id": "552274692"
}