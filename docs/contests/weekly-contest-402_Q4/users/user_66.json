{
    "username": "jerryxu20",
    "submission": "#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nstruct Tree {\n\ttypedef int T;\n\tstatic constexpr T unit = 0;\n\tT f(T a, T b) { return a + b; } // (any associative fn)\n\tvector<T> s; int n;\n\tTree(int n = 0, T def = unit) : s(2*n, def), n(n) {}\n\tvoid update(int pos, T val) {\n\t\tfor (s[pos += n] = val; pos /= 2;)\n\t\t\ts[pos] = f(s[pos * 2], s[pos * 2 + 1]);\n\t}\n\tT query(int b, int e) { // query [b, e)\n\t\tT ra = unit, rb = unit;\n\t\tfor (b += n, e += n; b < e; b /= 2, e /= 2) {\n\t\t\tif (b % 2) ra = f(ra, s[b++]);\n\t\t\tif (e % 2) rb = f(s[--e], rb);\n\t\t}\n\t\treturn f(ra, rb);\n\t}\n};\n\nclass Solution {\nint n;\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        \n        Tree seg(n);\n        \n        for (int i = 0; i < n; i++) {\n            if (peak(i, nums)) seg.update(i, 1);\n        }\n        \n        vector<int> ans;\n        for (auto &q: queries) {\n            if (q[0] == 1) {\n                int low = q[1] + 1;\n                int high = q[2] - 1;\n                if (low > high) ans.push_back(0);\n                else ans.push_back(seg.query(low, high + 1));\n            } else {\n                int idx = q[1];\n                int v = q[2];\n                \n                for (int i = max(0, idx - 1); i <= min(n - 1, idx + 1); i++) {\n                    if (peak(i, nums)) seg.update(i, 0);\n                }\n                nums[idx] = v; \n                for (int i = max(0, idx - 1); i <= min(n - 1, idx + 1); i++) {\n                    if (peak(i, nums)) seg.update(i, 1);\n                }\n            }\n        }\n        \n        return ans;\n        \n    }\n    \n    bool peak(int i, vector<int> &nums) {\n        if (i == 0 || i == n - 1) return false;\n        return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n    }\n};",
    "submit_ts": "1718506087",
    "subm_id": "1289606406"
}