{
    "username": "shubhamusk",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        int left = 0;\n        int count_diff = 0;\n        int max_length = 0;\n\n        for (int right = 1; right < n; ++right) {\n            if (nums[right] != nums[right - 1]) {\n                ++count_diff;\n            }\n\n            while (count_diff > k) {\n                if (nums[left] != nums[left + 1]) {\n                    --count_diff;\n                }\n                ++left;\n            }\n\n            max_length = std::max(max_length, right - left + 1);\n        }\n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int ans=1; \n       \n        vector<map<int,int>>v(k+1); \n         vector<int>vv(k+1,-1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+vv[l]); \n                } \n                if(v[j].find(nums[i])!=v[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+v[j][nums[i]]); \n                } \n                ans=max(ans,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                vv[j]=max(vv[j],dp[i][j]); \n                v[j][nums[i]]=max(v[j][nums[i]],dp[i][j]); \n            } \n        } \n        return ans; \n\n        return max_length;\n    }\n};",
    "submit_ts": 1717862319.0
}