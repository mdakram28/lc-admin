{
    "username": "bightguy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        const int n = grid.size(), m = grid[0].size();\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) ans++;\n            grid[n / 2][m / 2] = 0;\n        }\n\n        int midcnt[3] = { 0 };\n        if (n % 2 == 1) {\n            int midrow = n / 2;\n            int lp = 0, rp = m - 1;\n            while (lp < rp) {\n                if (grid[midrow][lp] == grid[midrow][rp]) {\n                    midcnt[grid[midrow][lp]]++;\n                } else {\n                    midcnt[2]++;\n                }\n                lp++; rp--;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int midcol = m / 2;\n            int lp = 0, rp = n - 1;\n            while (lp < rp) {\n                if (grid[lp][midcol] == grid[rp][midcol]) {\n                    midcnt[grid[lp][midcol]]++;\n                } else {\n                    midcnt[2]++;\n                }\n                lp++; rp--;\n            }\n        }\n\n        ans += midcnt[2];\n        if (midcnt[1] % 2 != 0 && midcnt[2] == 0) {\n            ans += 2;\n        }\n\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int cnt[2] = { 0 };\n                cnt[grid[i][j]]++;\n                cnt[grid[n - 1 - i][j]]++;\n                cnt[grid[i][m - 1 - j]]++;\n                cnt[grid[n - 1 - i][m - 1 - j]]++;\n                ans += min(cnt[0], cnt[1]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698133",
    "subm_id": "1343170754"
}