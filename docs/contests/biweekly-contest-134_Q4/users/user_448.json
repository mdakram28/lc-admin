{
    "username": "braindroid",
    "submission": "const int MAXN = 100005;\nconst int LOGMAXN = 25;\n\nclass Solution {\npublic:\n\nint sparse[MAXN][LOGMAXN];\n\nvoid buildSparseTable(vector<int>& nums, int n) {\n    for (int i = 0; i < n; ++i) {\n        sparse[i][0] = nums[i];\n    }\n    \n    for (int j = 1; (1 << j) <= n; ++j) {\n        for (int i = 0; (i + (1 << j) - 1) < n; ++i) {\n            sparse[i][j] = sparse[i][j - 1] & sparse[i + (1 << (j - 1))][j - 1];\n        }\n    }\n}\n\nint query(int l, int r) {\n    int length = r - l + 1;\n    int k = log2(length);\n    return sparse[l][k] & sparse[r - (1 << k) + 1][k];\n}\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = (int)a.size();\n        buildSparseTable(a,n);\n        long long ans = 0;\n        for(int i = 0 ; i < n ; i++) {\n            int l = i-1;\n            int r = n;\n            if(a[i] < k) {\n                continue;\n            }\n            while(r > l + 1) {\n                int m = (l+r) >> 1;\n                if(query(i,m) >= k+1) {\n                    l = m;\n                } else {\n                    r = m;\n                }\n            }\n            int L = i-1;\n            int R = n;\n            while(R > L + 1) {\n                int m = (L+R) >> 1;\n                if(query(i,m) >= k) {\n                    L = m;\n                } else {\n                    R = m;\n                }\n            }\n            ans += (L - l);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279842",
    "subm_id": "1311767273"
}