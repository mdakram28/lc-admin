{
    "username": "celestialcoder",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<int> last(30, -1);\n        long long ans = 0;\n        int n = nums.size(), m = 1;\n        vector<int> p(30);\n        for (int j = 0; j < 30; j++) {\n            p[j] = m, m <<= 1;\n        }\n        vector<int> kb(30);\n        for (int j = 0; j < 30; j++) {\n            if (k & p[j]) {\n                kb[j] = true;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 30; j++) {\n                if (!(nums[i] & p[j])) {\n                    last[j] = i;\n                }\n            }\n            int l = -1, r = 1e9;\n            for (int j = 0; j < 30; j++) {\n                if (kb[j]) {\n                    l = max(l, last[j]);\n                } else {\n                    r = min(r, last[j]);\n                }\n            }\n            ans += max(0, r - l);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278244",
    "subm_id": "1311700704"
}