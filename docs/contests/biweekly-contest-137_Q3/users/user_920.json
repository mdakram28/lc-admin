{
    "username": "Manan Madan",
    "submission": "class Solution {\npublic:\n    // Function to find the top 3 values in each row along with their column indices\nvector<vector<pair<long long int, long long int>>> findTop3PerRow(const vector<vector<int>>& board) {\n    vector<vector<pair<long long int, long long int>>> top3PerRow;\n    \n    for (const auto& row : board) {\n        vector<pair<long long int, long long int>> rowValues;\n        for (int j = 0; j < row.size(); ++j) {\n            rowValues.push_back({row[j], j});\n        }\n        \n        // Sort the row by values in descending order and pick the top 3\n        sort(rowValues.rbegin(), rowValues.rend());\n        if (rowValues.size() > 3) {\n            rowValues.resize(3);\n        }\n        \n        top3PerRow.push_back(rowValues);\n    }\n    \n    return top3PerRow;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<pair<long long int, long long int>>> top3PerRow = findTop3PerRow(board);\n    \n    long long int maxSum = -1e11;\n    int rows = board.size();\n    \n    // Brute-force over all combinations of selecting 3 different rows\n    for (int r1 = 0; r1 < rows; ++r1) {\n        for (int r2 = r1 + 1; r2 < rows; ++r2) {\n            for (int r3 = r2 + 1; r3 < rows; ++r3) {\n                // Try all combinations of top 3 values in these three rows\n                for (const auto& cell1 : top3PerRow[r1]) {\n                    for (const auto& cell2 : top3PerRow[r2]) {\n                        for (const auto& cell3 : top3PerRow[r3]) {\n                            int col1 = cell1.second;\n                            int col2 = cell2.second;\n                            int col3 = cell3.second;\n\n                            // Ensure no two rooks are in the same column\n                            if (col1 != col2 && col1 != col3 && col2 != col3) {\n                                long long int sum = cell1.first + cell2.first + cell3.first;\n                                maxSum = max(maxSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    return maxSum;\n    }\n};",
    "submit_ts": "1723909597",
    "subm_id": "1359198574"
}