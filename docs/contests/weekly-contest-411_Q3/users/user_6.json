{
    "username": "nife",
    "submission": "#define f first\n#define s second\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) ((int) (x).size())\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntemplate <typename T> inline bool umin(T &a, const T &b) { if(a > b) { a = b; return 1; } return 0; }\ntemplate <typename T> inline bool umax(T &a, const T &b) { if(a < b) { a = b; return 1; } return 0; }\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst ll mod = 1e9 + 7;\nconst ll base = 1e6 + 9;\nconst ll inf = 1e9;\nconst int MAX = 2e5 + 42;\nconst int LG = 20;\n\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> pw(n + 1); pw[0] = 1 % k;\n        for(int i = 1; i <= n; i++) pw[i] = pw[i - 1] * 10 % k;\n        int m = n + 1 >> 1;\n        vector<int> mult(m);\n        for(int i = 0; i < m; i++) {\n            int j = m - i - 1;\n            int x = pw[j];\n            if(j != n - 1 - j) x = (x + pw[n - 1 - j]) % k;\n            mult[i] = x;\n        }\n        vector<vector<int>> dp(m + 1, vector<int>(k, -1));\n        dp[0][0] = 0;\n        for(int i = 0; i < m; i++) {\n            for(int d = (i != 0); d < 10; d++) {\n                int x = d * mult[i] % k;\n                int nj = x;\n                for(int j = 0; j < k; j++) {\n                    if(~dp[i][j]) umax(dp[i + 1][nj], d);\n                    nj++;\n                    if(nj == k) nj = 0;\n                }\n            }\n        }\n        assert(~dp[m][0]);\n        string ans(n, '0');\n        int r = 0;\n        for(int i = m - 1; ~i; i--) {\n            int d = dp[i + 1][r];\n            int j = m - 1 - i;\n            ans[j] = ans[n - 1 - j] = char('0' + d);\n            r -= d * mult[i];\n            r %= k; \n            if(r < 0) r += k;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723949536",
    "subm_id": "1359722191"
}