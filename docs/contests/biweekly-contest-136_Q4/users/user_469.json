{
    "username": "maxi32",
    "submission": "class Solution {\npublic:\n    vector<int> dp1;\n    vector<int> dp2;\n    vector<int> max1;\n    vector<int> max2;\n    vector<int> who1;\n    vector<int> who2;\n\nvoid dfs2(vector<vector<int>>& adj,int v,int parent) { \n\n    if(parent!=-1) {\n        if(who1[parent]==v) {\n            if(parent%2) {\n                dp2[v]=1+max(max2[parent],dp2[parent]);\n            }\n            else {\n                dp2[v]=2+max(max2[parent],dp2[parent]);\n            }\n        }\n        else {\nif(parent%2) {\n                dp2[v]=1+max(dp1[parent],dp2[parent]);\n            }\n            else {\n                // cout<<v<<\" \"<<max1[parent];\n                dp2[v]=2+max(dp1[parent],dp2[parent]);\n            }\n        }\n    }\n\n   for(int i=0;i<adj[v].size();i++) {\n            int neigh=adj[v][i];\n            if(parent==neigh) {\n                continue;\n            }\n\n            dfs2(adj,neigh,v);\n\n   }\n\n\n\n}\n\n    int dfs1(vector<vector<int>>& adj,int v,int parent) {\n        int t1=0;\n        int t2=0;\n        int v1=-1;\n        int v2=-1;\n        for(int i=0;i<adj[v].size();i++) {\n            int neigh=adj[v][i];\n            if(parent==neigh) {\n                continue;\n            }\n            int k=dfs1(adj,neigh,v);\n            if(neigh%2) {\n                k++;\n            }\n            else {\n                k+=2;\n            }\n            if(k>t1) {\n                v2=v1;\n                t2=t1;\n                t1=k;\n                v1=neigh;\n            }\n            else if(k>t2) {\n                v2=neigh;\n                t2=k;\n            }\n            \n\n\n\n        }\n        dp1[v]=t1;\n        who1[v]=v1;\n        who2[v]=v2;\n        max2[v]=t2;\n        return t1;\n    }\n\n\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=edges.size()+1;\n        dp1.resize(n,0);\n        dp2.resize(n,0);\n        max1.resize(n,0);\n        max2.resize(n,0);\n        who1.resize(n,-1);\n        who2.resize(n,-1);\n        \n        vector<vector<int>> adj(n);\n        for(int i=0;i<n-1;i++) {\n            adj[edges[i][0]].push_back(edges[i][1]);\n            adj[edges[i][1]].push_back(edges[i][0]);\n        }\n        dfs1(adj,0,-1);\n        dfs2(adj,0,-1);\n    vector<int> ans(n);\n        for(int i=0;i<n;i++) {\n            ans[i]=max(dp1[i],dp2[i]);\n        }\n\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700123",
    "subm_id": "1343232376"
}