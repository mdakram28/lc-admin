{
    "username": "tyagibhavya",
    "submission": "/*............................DEFINITIONS..............................*/\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst long long mod = 1e9 + 7;\nconst long long MOD = 998244353;\nconst long double epsilon = 1e-9;\nconst long long MAXN = 2e5 + 5;\nconst long long INF = 1e18;\ntypedef long long ll;\ntypedef long double ld;\n#define v(type) vector<type>\n#define p(type1, type2) pair<type1, type2>\n#define maxheap(type) priority_queue<type>\n#define minheap(type) priority_queue<type, vector<type>, greater<type>>\n#define FOR(i, start, end) for(long long i = start; i <= end; ++i)\n#define REV(i, start, end) for(long long i = start; i >= end; --i)\n#define INP(arr, n) v(ll) (arr)(n); FOR(i, 0, n - 1) cin >> (arr)[i];\n#define INP1(arr, n) v(ll) (arr)(n + 1, 0); FOR(i, 1, n) cin >> (arr)[i];\n#define read(n) ll (n); cin >> (n);\n#define all(x) (x).begin(), (x).end()\n#define setbits(x) __builtin_popcountll(x)\n#define msb(x) 63 - __builtin_clzll(x)\n#define lsb(x) __builtin_ctzll(x)\n#define parity(x) __builtin_parity(x) // return 1 if odd no. of setbits else 0\n#define mp make_pair\n#define pb push_back\n#define pob pop_back\n#define MAP unordered_map\n#define SET unordered_set\n#define fir first\n#define snd second\n#define sum(x) accumulate((x).begin(), (x).end(), 0LL)\n#define maxi(x) *max_element((x).begin(), (x).end())\n#define mini(x) *min_element((x).begin(), (x).end())\n#define cout(x) cout << x << \"\\n\";\n#define print(a) for(auto&x:a) {cout<<x<<\" \";} cout<<endl;\n#define print2(a) for(auto&x:a){ for(auto&y:x) { cout<<y<<\" \"; } cout<<endl; }\n#define permute(x) next_permutation(all(x))\n/*.............................FUNCTIONS................................*/\nvoid ADD(ll& a, ll b, ll mod) {a = ((a % mod) + (b % mod)) % mod;}\nvoid MUL(ll& a, ll b, ll mod) {a = ((a % mod) * (b % mod)) % mod;}\nvoid SUB(ll& a, ll b, ll mod) {a = ((a % mod) - (b % mod) + mod) % mod;}\nvoid MIN(ll& a, ll b) {a = min(a, b);}\nvoid MAX(ll& a, ll b) {a = max(a, b);}\nll GCD(ll a, ll b) { return (b == 0) ? a : GCD(b, a % b); }\nll LCM(ll a, ll b) { return a / GCD(a, b) * b; }\n/*................................END...................................*/\n\nclass Solution {\npublic:\n    v(ll) dist(int n, vector<vector<int>>& a) {\n        ll mnSum = a[0][0] + a[0][1];\n        ll mxSum = a[0][0] + a[0][1];\n        ll mnDif = a[0][0] - a[0][1];\n        ll mxDif = a[0][0] - a[0][1];\n        ll x = 0, y = 0, z = 0, w = 0;\n        FOR (i, 1, n - 1) {\n            ll s = a[i][0] + a[i][1];\n            ll d = a[i][0] - a[i][1];\n            if (s < mnSum) {\n                MIN(mnSum, s);\n                x = i;\n            }\n            if (s > mxSum) {\n                MAX(mxSum, s);\n                y = i;\n            }\n            if (d < mnDif) {\n                MIN(mnDif, d);\n                z = i;\n            }\n            if (d > mxDif) {\n                MAX(mxDif, d);\n                w = i;\n            }\n        }\n        ll s = mxSum - mnSum;\n        ll d = mxDif - mnDif;\n        v(ll) ss = {x, y, s};\n        v(ll) dd = {z, w, d};\n        return (s > d) ? ss : dd; \n    }\n    \n    ll dist2(int n, vector<vector<int>>& a, ll k) {\n        ll j = 0;\n        while (j == k) ++j;\n        ll mnSum = a[j][0] + a[j][1];\n        ll mxSum = a[j][0] + a[j][1];\n        ll mnDif = a[j][0] - a[j][1];\n        ll mxDif = a[j][0] - a[j][1];\n        ll x = 0, y = 0, z = 0, w = 0;\n        FOR (i, 1, n - 1) {\n            if (i == k) continue;\n            ll s = a[i][0] + a[i][1];\n            ll d = a[i][0] - a[i][1];\n            if (s < mnSum) {\n                MIN(mnSum, s);\n                x = i;\n            }\n            if (s > mxSum) {\n                MAX(mxSum, s);\n                y = i;\n            }\n            if (d < mnDif) {\n                MIN(mnDif, d);\n                z = i;\n            }\n            if (d > mxDif) {\n                MAX(mxDif, d);\n                w = i;\n            }\n        }\n        ll s = mxSum - mnSum;\n        ll d = mxDif - mnDif;\n        return max(s, d);\n    }\n    \n    int minimumDistance(vector<vector<int>>& a) {\n        int n = size(a);\n        v(ll) cur = dist(n, a);\n        ll ans = 1e18, x = cur[0], y = cur[1];\n        MIN(ans, dist2(n, a, x));\n        MIN(ans, dist2(n, a, y));\n        return ans;\n        \n    }\n};"
}