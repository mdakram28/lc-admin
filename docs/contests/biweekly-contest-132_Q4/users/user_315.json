{
    "username": "SirTechnical",
    "submission": "const int INF = 0x3f3f3f3f;\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int K) {\n        /*if (nums.size() == 5) {\n            while (nums.size() < 5000) {\n                nums.push_back(50);\n            }\n            K = 1;\n        } else {\n            while (nums.size() < 5000) {\n                if (nums.size() % 2 == 0) {\n                    nums.push_back(50);   \n                } else {\n                    nums.push_back(51);\n                }\n            }\n            K = 1;\n        }*/\n        int N = nums.size();\n        if (K >= N-1) {\n            return N;\n        }\n        map<int,int> ord_mp;\n        for (int n : nums) {\n            if (ord_mp.count(n) == 0) {\n                ord_mp[n] = ord_mp.size();\n            }\n        }\n        for (int i = 0; i < N; ++i) {\n            nums[i] = ord_mp[nums[i]];\n        }\n        int M = ord_mp.size();\n        vector<vector<int>> dp(M, vector<int>(K+1, -INF));\n        vector<multiset<int>> vs(K+1);\n        int ans = 1;\n        for (int i = 0; i < N; ++i) {\n            vector<int> buf;\n            for (int j = 1; j <= K; ++j) {\n                if (vs[j-1].size()) {\n                    int mx = *vs[j-1].rbegin();\n                    auto it2 = vs[j].find(dp[nums[i]][j]);\n                    if (it2 != vs[j].end())\n                        vs[j].erase(it2);\n                    buf.push_back(max(dp[nums[i]][j]+1, mx+1));\n                } else if (dp[nums[i]][j] != -INF) {\n                    vs[j].erase(vs[j].find(dp[nums[i]][j]));\n                    buf.push_back(dp[nums[i]][j]+1);\n                } else {\n                    break;\n                }\n            }\n            for (int j = 1; j <= buf.size(); ++j) {\n                int v = buf[j-1];\n                ans = max(ans, v);\n                vs[j].insert(v);\n                dp[nums[i]][j] = v;\n            }\n            auto it = vs[0].find(dp[nums[i]][0]);\n            if (it != vs[0].end()) {\n                vs[0].erase(it);   \n            }\n            dp[nums[i]][0] = max(dp[nums[i]][0]+1, 1);\n            ans = max(ans, dp[nums[i]][0]);\n            vs[0].insert(dp[nums[i]][0]);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1717861964",
    "subm_id": "1281807594"
}