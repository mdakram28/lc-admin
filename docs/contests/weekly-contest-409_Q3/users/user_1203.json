{
    "username": "drpatel",
    "submission": "class ListNodee\n{\n    public:\n    int data;\n    ListNodee * next;\n    ListNodee(int d){ \n        data = d; \n        next = NULL; \n    }\n};\nclass Solution {\npublic:\n    ListNodee * update_ans(int &curr_ans,ListNodee * head,int tar,vector<bool> &poss)\n    {\n        head = head->next;\n        while(head!=NULL)\n        {\n            \n            if(head->data==tar)\n            {\n                return head;\n            }\n            else{\n                curr_ans--;\n                poss[head->data] = false;\n            }\n            head = head->next;\n        }\n        return NULL;\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int curr_ans = n-1;\n        int q = queries.size();\n        vector<bool> poss(n,true);\n        vector<ListNodee *> addr(n,NULL);\n        addr[0] = new ListNodee(0);\n        for (int i=1;i<n;i++)\n        {\n            ListNodee * nem = new ListNodee(i);\n            addr[i] = nem;\n            addr[i-1]->next = nem;\n        }\n        for (int i=0;i<q;i++)\n        {\n            if(poss[queries[i][0]] && poss[queries[i][1]])\n            {\n                 addr[queries[i][0]]->next = update_ans(curr_ans,addr[queries[i][0]],queries[i][1],poss);\n            }\n            ans.push_back(curr_ans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743708",
    "subm_id": "1343797890"
}