{
    "username": "admiring-shockleyzns",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def build(cur_index, l, r):\n            # \u5efa\u6811\n            if l == r:\n                sum_L[cur_index] = L[l]\n                return\n\n            middle = (l + r) // 2\n            build(cur_index * 2, l, middle)\n            build(cur_index * 2 + 1, middle + 1, r)\n            sum_L[cur_index] = sum_L[cur_index * 2] + sum_L[cur_index * 2 + 1]\n            return\n\n\n        def query(cur_index, l, r, L, R):\n            if L <= l and r <= R:\n                return sum_L[cur_index]\n\n            middle = (l + r) // 2\n            res = 0\n            if L <= middle:\n                res += query(cur_index * 2, l, middle, L, R)\n            if R > middle:\n                res += query(cur_index * 2 + 1, middle + 1, r, L, R)\n            return res\n\n\n\n        def change(cur_index, l, r, aim_index, d):\n            # \u5355\u70b9\u4fee\u6539\n            if l == r:\n                sum_L[cur_index] = d\n                return\n\n            middle = (l + r) // 2\n            if aim_index <= middle:\n                change(cur_index * 2, l, middle, aim_index, d)\n            else:\n                change(cur_index * 2 + 1, middle + 1, r, aim_index, d)\n            sum_L[cur_index] = sum_L[cur_index * 2] + sum_L[cur_index * 2 + 1]\n            return\n        \n        \n        n = len(nums)\n        L = [0] * n\n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                L[i] = 1\n        \n        sum_L = [0] * (n << 2)\n        build(1, 0, n - 1)\n        \n        ans = []\n        for q, l, r in queries:\n            if q == 1:\n                if r - l <= 1:\n                    ans.append(0)\n                else:\n                    res = query(1, 0, n - 1, l + 1, r - 1)\n                    ans.append(res)\n            else:\n                idx, num = l, r\n                nums[idx] = num\n                for i in range(max(0, idx - 1), min(n, idx + 2)):\n                    if i == 0 or i == n - 1:\n                        flag = 0\n                    else:\n                        if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                            flag = 1\n                        else:\n                            flag = 0\n                    change(1, 0, n - 1, i, flag)\n        return ans\n            ",
    "submit_ts": 1718506156.0
}