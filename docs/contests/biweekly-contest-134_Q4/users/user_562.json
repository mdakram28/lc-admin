{
    "username": "t5R5aAmxlt",
    "submission": "class Solution {\npublic:\n    const int N = 4e5 + 10; \n    \n    void update(int ind,int l,int r,int pt,int val,vector<int> &t){\n        if(l>r || l>pt || r<pt) return;\n        \n        if(l==r){\n            t[ind] = val;\n            return;\n        }\n        int mid = (l+r)/2;\n        update(2*ind+1,l,mid,pt,val,t);\n        update(2*ind+2,mid+1,r,pt,val,t);\n        t[ind] = t[2*ind+1] & t[2*ind+2];\n    }\n    \n    int query(int ind,int l,int r,int l1,int r1,vector<int> &t){\n        if(l>r1 || r<l1){\n            return INT_MAX;\n        }\n        if(l1<=l && r<=r1){\n            return t[ind];\n        }\n        int mid = (l+r)/2;\n       return query(2*ind+1,l,mid,l1,r1,t)&query(2*ind+2,mid+1,r,l1,r1,t);\n    }\n    \n    long long countSubarrays(vector<int>& v, int k) {\n        vector<int> t(N,INT_MAX);\n        \n        long long ans = 0;\n        int n = v.size();\n        for(int i=0;i<n;i++) update(0,0,n-1,i,v[i],t);\n        \n        for(int i=0;i<n;i++){\n            int l = i;\n            int r = n-1;\n            int lind = -1;\n            while(l<=r){\n                int mid = (l+r)/2;\n                int num = query(0,0,n-1,i,mid,t);\n                if(num>k) l = mid+1;\n                else lind = mid,r =  mid-1;\n            }\n            \n            if(lind==-1) continue;\n            \n            int num = query(0,0,n-1,i,lind,t);\n            \n            if(num!=k) continue;\n            \n             l = i;\n            \n            r = n-1;\n            \n            int rind = -1;\n            \n            while(l<=r){\n                int mid = (l+r)/2;\n                int num = query(0,0,n-1,i,mid,t);\n                if(num<k) r = mid-1;\n                else rind = mid,l =  mid+1;\n            }\n            \n            if(rind==-1) continue;\n            ans +=(rind-lind+1);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720279598",
    "subm_id": "1311757673"
}