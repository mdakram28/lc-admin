{
    "username": "Praneethpathipati",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, devara: str, vachindhamma: List[str], rashmika: List[int]) -> int:\n        vishnu = len(devara)\n        vachindhamma_count = len(vachindhamma)\n\n        vachindhamma_cost_map = {}\n\n        for index, word in enumerate(vachindhamma):\n            vachindhamma_cost_map[word] = min(vachindhamma_cost_map.get(word, float('inf')), rashmika[index])\n\n        janya = [float('inf')] * (vishnu + 1)\n        janya[0] = 0\n\n        for i in range(1, vishnu + 1):\n            for word in vachindhamma_cost_map:\n                if i >= len(word) and devara[i - len(word):i] == word:\n                    janya[i] = min(janya[i], janya[i - len(word)] + vachindhamma_cost_map[word])\n\n        return janya[vishnu] if janya[vishnu] != float('inf') else -1\n",
    "submit_ts": "1720324221",
    "subm_id": "1312394394"
}