{
    "username": "monk45456",
    "submission": "class segtree{\npublic:\n        vector<int> seg,lazy;\n        segtree(vector<int> &a){\n            seg.resize(4*a.size(),0);\n            build(0,0,a.size()-1,a);\n        }\n\n        // low,high refers to the range the ind covers\n        // this segment tree is for maximum can also do for minimum or summation\n        // just change max to min or + (also need to change all lazy configurations)\n        void build(int ind,int low,int high,vector<int> &a){   \n            if(low==high){\n                seg[ind]=a[low];\n                return;\n            }\n\n            int mid=low+(high-low)/2;\n            build(2*ind+1,low,mid,a);\n            build(2*ind+2,mid+1,high,a);\n            seg[ind]=seg[2*ind+1]&seg[2*ind+2];\n        }\n\n        int query(int ind,int low,int high,int l,int r){\n\n            if(low>=l && high<=r){\n                return seg[ind];  \n            }\n            if(high<l || low>r){\n                return (1<<30)-1;\n            }\n            int mid=low+(high-low)/2;\n            int left=query(2*ind+1,low,mid,l,r);\n            int right=query(2*ind+2,mid+1,high,l,r);\n            return left&right;\n        }\n\n\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        segtree segt(nums);\n        \n//         int start=0;\n//         int end=INT_MAX;\n//         while(start<=end){\n//             int mid=start+(end-start)/2;\n//             if()\n//         }\n        \n        int n = nums.size();\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid;\n            \n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (segt.query(0,0,nums.size()-1,i, mid) >= k)\n                    l = mid;\n                else\n                    r = mid;\n            }\n            if (l != i - 1)\n                ans = min(ans, abs(segt.query(0,0,nums.size()-1,i, l) - k));\n            ans = min(ans, abs(k - segt.query(0,0,nums.size()-1,i, r)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717300060",
    "subm_id": "1274832600"
}