{
    "username": "abb10000y",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<int> dif {0};\n        for (int i = 0, prev = 0; i < n; i++) {\n            int d = nums[i] - target[i];\n            if ((d > 0 && prev < 0) || (d < 0 && prev > 0)) { dif.push_back(0); }\n            prev = d;\n            dif.push_back(abs(d));\n        }\n        dif.push_back(0);\n        dif.push_back(0);\n        // cout << \"\\n\";\n        stack<int> stk;\n        for (int i : dif) {\n            cout << i << \" \";\n            if (!stk.empty() && stk.top() >= i) {\n                ans += stk.top() - i;\n                stk = decltype(stk)();\n            }\n            stk.push(i);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532966",
    "subm_id": "1327998213"
}