{
    "username": "maxkvant",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        def intersects(circle_a, circle_b):\n            x_a, y_a, r_a = circle_a\n            x_b, y_b, r_b = circle_b\n            dist2 = (x_b - x_a) ** 2 + (y_b - y_a) ** 2\n            return dist2 <= (r_a + r_b) ** 2\n        def intersects_seg(circle, a, b):\n            c_x, c_y, c_r = circle\n            a_x, a_y = a\n            b_x, b_y = b\n            dist2_a = (c_x - a_x) ** 2 + (c_y - a_y) ** 2\n            dist2_b = (c_x - b_x) ** 2 + (c_y - b_y) ** 2\n            if min(dist2_a, dist2_b) <= c_r ** 2:\n                return True\n            if a_x == b_x and min(a_y, b_y) <= c_y <= max(a_y, b_y) and abs(a_x - c_x) <= c_r: \n                return True\n            if a_y == b_y and min(a_x, b_x) <= c_x <= max(a_x, b_x) and abs(a_y - c_y) <= c_r:\n                return True\n            return False\n        n = len(circles)\n        top_left = [False] * n\n        bottom_right = [False] * n\n        starts = []\n        for i in range(n):\n            top_left[i]  = intersects_seg(circles[i], (0, 0), (0, Y)) or intersects_seg(circles[i], (0, Y), (X, Y))\n            bottom_right[i] = intersects_seg(circles[i], (0, 0), (X, 0)) or intersects_seg(circles[i], (X, 0), (X, Y))\n            if top_left[i]:\n                starts.append(i)\n        used = [False] * n\n        def dfs(v):\n            nonlocal used\n            nonlocal top_left\n            nonlocal bottom_right\n            if bottom_right[v]:\n                return True\n            if used[v]:\n                return False\n            used[v] = True\n            ans = False\n            for u in range(0, n):\n                if not used[u] and intersects(circles[v], circles[u]):\n                    if dfs(u):\n                        return True\n            return False\n        ans = False\n        for v in starts:\n            ans |= dfs(v)\n        return not ans\n\n            ",
    "submit_ts": "1722136332",
    "subm_id": "1335731118"
}