{
    "username": "berojgar",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> possibleX;\n        int n=nums.size();\n        for (int i = 0; i < nums.size() / 2; i++) {\n           \n           int diff = abs(nums[i]-nums[n-1-i]);\n           int maxVal = max({nums[i], nums[n-1-i], k -nums[i], k - nums[n-1-i]});\n           diffMap[diff].push_back(maxVal);\n           possibleX.push_back(maxVal);\n        }    \n\n        sort(possibleX.begin(), possibleX.end());\n\n   \n        int ans = nums.size();\n        for (auto &pair : diffMap) {\n           int currentDiff = pair.first;\n           int changes = lower_bound(possibleX.begin(), possibleX.end(), currentDiff) - possibleX.begin();\n           changes = changes * 2 + (nums.size() / 2 - changes);\n\n           for (auto &x : pair.second) {\n               if (x < currentDiff) {\n                  changes -= 2;\n                } else {\n                  changes -= 1;\n                }\n            }\n\n        ans = min(ans, changes);\n        }\n\n        return ans;\n        \n        \n        \n        \n    }\n};",
    "submit_ts": "1721490028",
    "subm_id": "1327470959"
}