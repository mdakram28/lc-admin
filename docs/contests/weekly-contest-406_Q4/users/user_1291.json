{
    "username": "HerbertTheBird",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, bool>> cuts;\n        for(int i = 0; i < horizontalCut.size(); i++){\n            cuts.push_back({horizontalCut[i], true});\n        }\n        for(int i = 0; i < verticalCut.size(); i++){\n            cuts.push_back({verticalCut[i], false});\n        }\n        sort(cuts.begin(), cuts.end());\n        int v = 0;\n        int h = 0;\n        long long cost = 0;\n        for(int i = cuts.size()-1; i >= 0; i--){\n            cost += cuts[i].first*((cuts[i].second?v:h)+1);\n            if(cuts[i].second){\n                h++;\n            }\n            else{\n                v++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925867",
    "subm_id": "1320268784"
}