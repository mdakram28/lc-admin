{
    "username": "lucifer_84",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n         int n = nums.size();\n        vector<int> diffArr(n);\n        \n       \n        for (int i = 0; i < n; ++i) {\n            diffArr[i] = target[i] - nums[i];\n        }\n        \n       \n        long long ans = 0;\n        int currDiff = 0;\n        \n        \n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diffArr[i - 1] > 0 && diffArr[i] > 0) || (diffArr[i - 1] < 0 && diffArr[i] < 0)) {\n               \n                long long reqDiff = abs(diffArr[i]) - abs(currDiff);\n                if (reqDiff > 0) {\n                    ans += reqDiff;\n                }\n                \n                currDiff = diffArr[i];\n            } else {\n               \n                ans += abs(diffArr[i]);\n               \n                currDiff = diffArr[i];\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721532910",
    "subm_id": "1327996925"
}