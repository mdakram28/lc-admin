{
    "username": "jlallas384",
    "submission": "using ll = long long;\n\nll sqr(ll x) {\n    return x * x;\n}\nstruct circle {\n    int x, y, r;\n    bool intersect(circle &other) {\n        return sqr(x - other.x) + sqr(y - other.y) <= sqr(r + other.r);\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        vector<circle> cs;\n        int n = circles.size();\n        for (int i = 0; i < n; i++) {\n            cs.push_back({circles[i][0], circles[i][1], circles[i][2]});\n        }\n        vector<vector<int>> g(n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (cs[i].intersect(cs[j])) {\n                    g[i].push_back(j);\n                }\n            }\n        }\n        vector<bool> vis(n);\n        queue<int> q;\n        for (int i = 0; i < n; i++) {\n            if (cs[i].x - cs[i].r <= 0 || cs[i].y + cs[i].r >= Y) {\n                vis[i] = true;\n                q.push(i);\n            }\n        }\n        while (!q.empty()) {\n            int v = q.front(); q.pop();\n            if (cs[v].x + cs[v].r >= X || cs[v].y - cs[v].r <= 0) {\n                return false;\n            }\n            for (int u: g[v]) if (!vis[u]) {\n                q.push(u);\n                vis[u] = true;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722137836",
    "subm_id": "1335775064"
}