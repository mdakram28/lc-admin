{
    "username": "fenil25",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        merged, i, j, cost, hcf, vcf = [], 0, 0, 0, 1, 1\n        while True:\n            if i<m-1 and j<n-1:\n                if horizontalCut[i]>=verticalCut[j]:\n                    merged.append((horizontalCut[i], True))\n                    i += 1\n                else:\n                    merged.append((verticalCut[j], False))\n                    j += 1\n            elif i<m-1:\n                merged.append((horizontalCut[i], True))\n                i += 1\n            elif j<n-1:\n                merged.append((verticalCut[j], False))\n                j += 1\n            else:\n                break\n        for cm, flag in merged:\n            if flag:\n                cost += cm * hcf \n                vcf += 1\n            else:\n                cost += cm * vcf\n                hcf += 1\n        return cost\n        ",
    "submit_ts": "1720925440",
    "subm_id": "1320254799"
}