{
    "username": "sobols",
    "submission": "long long Calc(long long k) {\n    long long ans = 0;\n    vector<long long> prv = { 1 };\n    for (int p = 0; p <= 32; ++p) {\n        vector<long long> nxt;\n        nxt.push_back(1);\n        for (int i = 0; i + 1 < prv.size(); ++i) {\n            nxt.push_back(prv[i] + prv[i + 1]);\n        }\n        nxt.push_back(1);\n        \n        const auto& arr = nxt;\n        long long pw = 1LL << p;\n        long long idx = pw - k;\n        if (0 <= idx && idx < (long long)arr.size()) {\n            ans += arr[idx];\n        }\n        \n        prv.swap(nxt);\n    }\n    return ans;\n}\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        return Calc(k);\n    }\n};",
    "submit_ts": 1716089982.0
}