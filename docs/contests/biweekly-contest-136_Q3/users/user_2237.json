{
    "username": "magnooskaalicharan",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        int ans = 0;\n        \n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                vector<int> elements = {grid[i][j],grid[n-i-1][j],grid[i][m-j-1],grid[n-i-1][m-j-1]};\n                int ones = count(elements.begin(),elements.end(),1);\n                ans+=min(ones,4-ones);\n            }\n            \n        }\n        \n        int possible = 0;\n        int count = 0;\n        \n        if(n%2!=0){\n            for(int j=0;j<m/2;j++){\n                if(grid[n/2][j]!=grid[n/2][m-j-1]){\n                    ans+=1;\n                    possible+=1;\n                }\n                else{\n                    if(grid[n/2][j]==1){\n                        count+=1;\n                    }\n                }\n            }\n        }\n        \n        if(m%2!=0){\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]){\n                    ans+=1;\n                    possible+=1;\n                }\n                else{\n                    if(grid[i][m/2]==1){\n                        count+=1;\n                    }\n                }\n            }\n        }\n        \n        if(n%2!=0 && m%2!=0 && grid[n/2][m/2]==1){\n            ans+=1;\n        }\n        \n        if(possible==0 && count%2!=0){\n            ans+=2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722700347",
    "subm_id": "1343239107"
}