{
    "username": "h_bugw7",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n\n#define ALL(x) (x).begin(), (x).end()\n#define FOR(i, a, b) for (int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define SORT(v) sort((v).begin(),(v).end())\n#define RSORT(v) sort((v).rbegin(),(v).rend())\n#define UN(v) SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())\n#define REVERSE(v) reverse(ALL(v))\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> ppi;\ntypedef pair<int, pii> pip;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<pair<int, int>> vpii;\n\nint dx[] = {0, 0, -1, 1, -1, -1, 1, 1};\nint dy[] = {-1, 1, 0, 0, -1, 1, -1, 1};\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\nclass Square {\n    vii data;\npublic:\n    Square(vii& grid): data(grid.size()+1, vi(grid[0].size()+1, 0)) {\n        REP(i, grid.size()) {\n            REP(j, grid[0].size()) {\n                data[i+1][j+1] = data[i+1][j] + data[i][j+1] - data[i][j] + grid[i][j];\n            }\n        }\n    }\n    int solve3() {\n        return solve3(0, 0, data.size()-2, data[0].size()-2);\n    }\n    int solve3(int x1, int y1, int x2, int y2) {\n        int res = (x2-x1+1) * (y2-y1+1);\n        FOR(m, x1, x2) {\n            int r1 = solve1(x1, y1, m, y2);\n            int r2 = solve2(m+1, y1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        FOR(m, x1, x2) {\n            int r1 = solve2(x1, y1, m, y2);\n            int r2 = solve1(m+1, y1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        FOR(m, y1, y2) {\n            int r1 = solve1(x1, y1, x2, m);\n            int r2 = solve2(x1, m+1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        FOR(m, y1, y2) {\n            int r1 = solve2(x1, y1, x2, m);\n            int r2 = solve1(x1, m+1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        return res;\n    }\n    int solve2(int x1, int y1, int x2, int y2) {\n        int res = (x2-x1+1) * (y2-y1+1);\n        FOR(m, x1, x2) {\n            int r1 = solve1(x1, y1, m, y2);\n            int r2 = solve1(m+1, y1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        FOR(m, y1, y2) {\n            int r1 = solve1(x1, y1, x2, m);\n            int r2 = solve1(x1, m+1, x2, y2);\n            res = min(res, r1 + r2);\n        }\n        return res;\n    }\n    int solve1(int x1, int y1, int x2, int y2) {\n        if(!sum(x1, y1, x2, y2)) return 0;\n        int l = x1, r = x2, u = y1, d = y2;\n        while(!sum(x1, y1, l, y2)) ++l;\n        while(!sum(r, y1, x2, y2)) --r;\n        while(!sum(x1, y1, x2, u)) ++u;\n        while(!sum(x1, d, x2, y2)) --d;\n        return (r-l+1) * (d-u+1);\n    }\n    int sum(int x1, int y1, int x2, int y2) {\n        return data[x2+1][y2+1] - data[x1][y2+1] - data[x2+1][y1] + data[x1][y1];\n    }\n};\n\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        Square sq(grid);\n        return sq.solve3();\n    }\n};",
    "submit_ts": 1719114242.0
}