{
    "username": "Samuel3Shin",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> maxSumL(n), minSumL(n), maxDiffL(n), minDiffL(n);\n        vector<int> maxSumR(n), minSumR(n), maxDiffR(n), minDiffR(n);\n\n        // Precompute left to right\n        int maxSum = INT_MIN, minSum = INT_MAX, maxDiff = INT_MIN, minDiff = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            maxSumL[i] = maxSum = max(maxSum, sum);\n            minSumL[i] = minSum = min(minSum, sum);\n            maxDiffL[i] = maxDiff = max(maxDiff, diff);\n            minDiffL[i] = minDiff = min(minDiff, diff);\n        }\n\n        // Precompute right to left\n        maxSum = INT_MIN, minSum = INT_MAX, maxDiff = INT_MIN, minDiff = INT_MAX;\n        for (int i = n-1; i >= 0; --i) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            maxSumR[i] = maxSum = max(maxSum, sum);\n            minSumR[i] = minSum = min(minSum, sum);\n            maxDiffR[i] = maxDiff = max(maxDiff, diff);\n            minDiffR[i] = minDiff = min(minDiff, diff);\n        }\n\n        int minimumMaximumDistance = INT_MAX;\n\n        for (int i = 0; i < n; i++) {\n            int currMaxSum = (i > 0 ? maxSumL[i-1] : INT_MIN), currMinSum = (i > 0 ? minSumL[i-1] : INT_MAX);\n            int currMaxDiff = (i > 0 ? maxDiffL[i-1] : INT_MIN), currMinDiff = (i > 0 ? minDiffL[i-1] : INT_MAX);\n            if (i < n-1) {\n                currMaxSum = max(currMaxSum, maxSumR[i+1]);\n                currMinSum = min(currMinSum, minSumR[i+1]);\n                currMaxDiff = max(currMaxDiff, maxDiffR[i+1]);\n                currMinDiff = min(currMinDiff, minDiffR[i+1]);\n            }\n\n            int maxDistanceWithoutI = max(currMaxSum - currMinSum, currMaxDiff - currMinDiff);\n            minimumMaximumDistance = min(minimumMaximumDistance, maxDistanceWithoutI);\n        }\n\n        return minimumMaximumDistance;\n    }\n};\n"
}