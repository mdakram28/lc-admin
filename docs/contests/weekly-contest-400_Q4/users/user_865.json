{
    "username": "chrehall68",
    "submission": "class Solution:\n    def minimumDifference(self, nums: list[int], k: int) -> int:\n        # brute force solution\n        # and can only destroy information\n        # so once the number gets too small\n        # then we can just move the start number to the right\n        cur = self.to_bin(nums[0])\n        # initialize to nums\n        # big endian (cur[0] = 2**31)\n        left = 0\n        right = 0\n        best = float(\"inf\")\n        while right < len(nums):\n            n = self.to_number(cur, right - left + 1)\n            # print(\"n is\", n, \"with\", left, \"and\", right)\n            best = min(best, abs(n - k))\n            if n > k:\n                # try adding more numbers\n                right += 1\n                # move right\n                if right < len(nums):\n                    next_element = self.to_bin(nums[right])\n                    for i in range(32):\n                        cur[i] += next_element[i]\n            elif n == k:\n                return 0\n            else:  # n < k\n                if left == right:  # can't move left forward, have to move right first\n                    right += 1\n\n                    # move right\n                    if right < len(nums):\n                        next_element = self.to_bin(nums[right])\n                        for i in range(32):\n                            cur[i] += next_element[i]\n                else:\n                    # can move left forward\n                    # move left\n                    next_element = self.to_bin(nums[left])\n                    for i in range(32):\n                        cur[i] -= next_element[i]\n                    left += 1\n        return best\n\n    def to_bin(self, el: int):\n        return [\n            int(el) for el in bin(el).removeprefix(\"0b\").rjust(32).replace(\" \", \"0\")\n        ]\n\n    def to_number(self, nums: list[int], items: int):\n        el = 0\n        for i in range(len(nums)):\n            exp = len(nums) - 1 - i\n            if nums[i] == items:\n                el += 2**exp\n        return el",
    "submit_ts": 1717299286.0
}