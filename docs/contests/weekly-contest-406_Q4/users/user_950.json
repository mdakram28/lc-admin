{
    "username": "zhang-z9x",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverse(horizontalCut);\n        reverse(verticalCut);\n\n        int h = 1;\n        int v = 1;\n        int hIdx = 0;\n        int vIdx = 0;\n        long ans = 0;\n        while (hIdx < horizontalCut.length && vIdx < verticalCut.length) {\n            if (horizontalCut[hIdx] >= verticalCut[vIdx]) {\n                ans += (long) horizontalCut[hIdx] * v;\n                ++hIdx;\n                h++;\n            } else {\n                ans += (long) verticalCut[vIdx] * h;\n                vIdx++;\n                v++;\n            }\n        }\n        while (hIdx < horizontalCut.length) {\n            ans += (long) horizontalCut[hIdx] * v;\n            ++hIdx;\n        }\n        while (vIdx < verticalCut.length) {\n            ans += (long) verticalCut[vIdx] * h;\n            vIdx++;\n        }\n        return ans;\n    }\n    private void reverse(int[] nums) {\n        int l = 0, r = nums.length - 1;\n        while (l < r) {\n            int temp = nums[l];\n            nums[l] = nums[r];\n            nums[r] = temp;\n            l++;\n            r--;\n        }\n    }\n}",
    "submit_ts": "1720925654",
    "subm_id": "546440997"
}