{
    "username": "jbxiong",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int count = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n        for(int i = 0; i < n/2; ++i) {\n            for(int j = 0; j < m/2; ++j) {\n                int numOnes = grid[i][j] + grid[i][m - j - 1] + grid[n - i - 1][j] + grid[n - i - 1][m - j - 1];\n                count += min(numOnes, 4 - numOnes);\n            }\n        }\n        //cout << count << endl;\n        if(n % 2 == 1 && m % 2 == 1) {\n            count += grid[n/2][m/2];\n        }\n        int ones = 0;\n        int mixed = 0;\n        if(n % 2 == 1) {\n            \n            for(int i = 0; i < m/2; ++i) {\n                if(grid[n/2][i] == grid[n/2][m-i-1]) {\n                    if(grid[n/2][i] == 1) {\n                        ones += 2;\n                    }\n                }\n                else {\n                    ++mixed;\n                }\n            }\n        }\n        \n        if(m % 2 == 1) {\n            for(int i = 0; i < n/2; ++i) {\n                if(grid[i][m/2] == grid[n - i - 1][m/2]) {\n                    if(grid[i][m/2] == 1) {\n                        ones += 2;\n                    }\n                    \n                }\n                else {\n                    ++mixed;\n                }\n            }\n        }\n        // cout << count << endl;\n        // cout << ones << \" \" << mixed << endl;\n        count += max((ones % 4) - 2 * mixed, mixed);\n\n        return count;\n    }\n};",
    "submit_ts": "1722698338",
    "subm_id": "1343177429"
}