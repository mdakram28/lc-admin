{
    "username": "user8557",
    "submission": "\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        const int n = nums.size();\n        vector<array<int, 31>> sums;\n        sums.reserve(n);\n        {\n            array<int, 31> cntArr = {0};\n            for (auto num : nums) {\n                changeNum(cntArr, num, true);\n                sums.push_back(cntArr);\n            }\n        }\n        long long res = 0;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] < k) {\n                continue;\n            }\n            {\n                const int fullMask = getMaskBetween(sums, 0, i);\n                if (fullMask > k) {\n                    continue;\n                }\n            }\n            int l = -1;\n            {\n                int left = 0;\n                int right = i;\n                while (left <= right) {\n                    int mid = (left + right) / 2;\n                    if (getMaskBetween(sums, mid, i) < k)  {\n                        l = mid;\n                        left = mid + 1;\n                    } else {\n                        right = mid - 1;\n                    }\n                }\n            }\n            int r = i + 1;\n            {\n                int left = 0;\n                int right = i;\n                while (left <= right) {\n                    int mid = (left + right) / 2;\n                    if (getMaskBetween(sums, mid, i) <= k)  {\n                        left = mid + 1;\n                    } else {\n                        r = mid;\n                        right = mid - 1;\n                    }\n                }\n            }\n            res += (r - l - 1);\n        }\n        return res;\n    }\n\nprivate:\n    int arrToMask(const array<int, 31> &cntArr, int len) {\n        int mask = 0;\n        for (int shift = 0; shift < 31; shift++) {\n            if (cntArr[shift] == len) {\n                mask |= (1 << shift);\n            }\n        }\n        return mask;\n    }\n\n    void changeNum(array<int, 31> &cntArr, int num, bool up) {\n        int diff = up ? 1 : -1;\n        for (int shift = 0; shift < 31; shift++) {\n            if (num & (1 << shift)) {\n                cntArr[shift] += diff;\n            }\n        }\n    }\n\n    array<int, 31> arrDiff(const array<int, 31> &a, const array<int, 31> &b) {\n        auto res = a;\n        for (int i = 0; i < 31; i++) {\n            res[i] -= b[i];\n        }\n        return res;\n    }\n\n    int getMaskBetween(const vector<array<int, 31>> &sums, int a, int b) {\n        if (a == 0) {\n            return arrToMask(sums[b], b - a + 1);\n        }\n        auto diffArr = arrDiff(sums[b], sums[a - 1]);\n        return arrToMask(diffArr, b - a + 1);\n    }\n};\n",
    "submit_ts": "1720279781",
    "subm_id": "544569034"
}