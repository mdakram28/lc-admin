{
    "username": "shivanshut105",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> mp;\n        long long MOD = 1e9 + 7, ans = 0;\n        for(auto v: requirements){\n            mp[v[0]] = v[1];\n        }\n        \n        vector<vector<int>> dp(n+1, vector<int> (401, 0));\n        dp[0][0] = 1;\n        \n        for(int k = 1; k<=n; k++){\n            for(int v = 0; v<=400; v++){\n                for(int i = 0; i<k; i++){\n                    if(v>=i)\n                    (dp[k][v] += dp[k-1][v-i])%=MOD;\n                }\n            }\n            \n            if(mp.count(k-1)){\n                vector<int> t(401, 0);\n                t[mp[k-1]] = dp[k][mp[k-1]];\n                dp[k] = t;\n            }\n        }\n        \n        ans = accumulate(dp[n].begin(), dp[n].end(), 0LL);\n        return ans;\n    }\n};",
    "submit_ts": 1719071500.0
}