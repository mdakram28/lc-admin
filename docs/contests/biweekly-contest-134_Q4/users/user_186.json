{
    "username": "ghj123h",
    "submission": "public class Solution {\n    public long CountSubarrays(int[] nums, int k) {\n        SparseTable st = new(nums, (a, b) => a & b);\n        int n = nums.Length;\n        long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            var l = LowerBound(i, n, x => st.Query(i, (int)x) - k);\n            var r = UpperBound(i, n, x => st.Query(i, (int)x) - k);\n            ans += r - l;\n        }\n        return ans;\n\n        long LowerBound(long L, long R, Func<long, long> func) {\n            while (L < R) {\n                long m = L + (R - L) / 2;\n                if (func(m) > 0) L = m + 1;\n                else R = m;\n            }\n            return L;\n        }\n\n        long UpperBound(long L, long R, Func<long, long> func) {\n            while (L < R) {\n                long m = L + (R - L) / 2;\n                if (func(m) >= 0) L = m + 1;\n                else R = m;\n            }\n            return L;\n        }\n    }\n\n}\n\npublic class SparseTable {\n    private int[,] st;\n    private int[] logn;\n    private Func<int, int, int> func;\n    public SparseTable(int[] nums, Func<int, int, int> func) {\n        this.func = func;\n        int n = nums.Length;\n        logn = new int[n+1]; logn[1] = 0; logn[2] = 1;\n        for (int i = 3; i <= n; ++i) logn[i] = logn[i/2] + 1;\n        st = new int[n,21];\n        for (int i = 0; i < n; ++i) st[i,0] = nums[i];\n        for (int j = 1; j <= 20; ++j) {\n            for (int i = 0; i+(1<<j)-1 < n; ++i) st[i,j] = func(st[i,j-1], st[i+(1<<j-1),j-1]);\n        }\n    }\n\n    public int Query(int l, int r) {\n        int lg = logn[r-l+1];\n        return func(st[l,lg], st[r-(1<<lg)+1,lg]);\n    }\n}",
    "submit_ts": "1720278029",
    "subm_id": "544560267"
}