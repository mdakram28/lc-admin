{
    "username": "NEERAJ JOSHI",
    "submission": "class Solution {\npublic:\n    vector<int>power;\n    vector<vector<int>>dp;\n    vector<int>dig;\n    bool f(int idx,int rem,int n,int k){\n            if(idx==(n-1)/2){\n                int end=(idx==0)?(1):(0);\n                for(int i=9;i>=end;i--){               \n                   int loc1=(n-idx-1);\n                   int loc2=n-(n-idx-1)-1;\n                   int nrem= (rem+(i*power[loc1]))%k;\n                   if(loc1!=loc2) nrem=(nrem+i*power[loc2])%k;\n                   if(nrem==0){\n                       dig[idx]=i;\n                       return 1;\n                   }\n                }\n                return 0;\n            }\n            if(dp[idx][rem]!=-1) return dp[idx][rem];\n            int end=(idx==0)?(1):(0);\n            for(int i=9;i>=end;i--){\n                int loc1=(n-idx-1);\n                int loc2=n-(n-idx-1)-1;\n                int nrem= (rem+(i*power[loc1])+(i*power[loc2]))%k;\n                //cout<<idx<<\" \"<<i<<\" \"<<nrem<<endl;\n                if(f(idx+1,nrem,n,k)){\n                  //  cout<<\"indise\"<<endl;\n                    dig[idx]=i;\n                   // cout<<dig[idx]<<endl;\n                    return dp[idx][rem]=1;\n                    break;\n                }\n               // cout<<\"here\"<<endl;\n            }\n            return dp[idx][rem]=0;\n    }\n    string largestPalindrome(int n, int k) {\n        string ans(n,'0');\n        dp.assign(n,vector<int>(k,-1));\n        dig.assign(n,0);\n        power.assign(n+1,1);\n        power[0]=1%k;\n        for(int i=1;i<=n;i++){\n            power[i]=(power[i-1]*10)%k;\n        }\n        f(0,0,n,k);\n        for(int i=0;i<=(n-1)/2;i++){\n            //cout<<dig[i]<<endl;\n            ans[i]=(dig[i]+'0');\n            ans[n-i-1]=(dig[i]+'0');\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952344",
    "subm_id": "1359794010"
}