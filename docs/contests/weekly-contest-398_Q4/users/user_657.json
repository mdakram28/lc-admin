{
    "username": "202101008",
    "submission": "class Solution:\n    def __init__(self):\n        self.dp = {}\n\n    def solve(self, k, i, jump, can):\n        if i > k + 5:\n            return 0\n\n        if jump > 31:\n            return 0\n\n        if i in self.dp and jump in self.dp[i] and can in self.dp[i][jump]:\n            return self.dp[i][jump][can]\n\n        ans = (i == k)\n        if can:\n            ans += self.solve(k, i - 1, jump, 0)\n        if i + (1 << jump) <= k + 1:\n            ans += self.solve(k, i + (1 << jump), jump + 1, 1)\n\n        if i not in self.dp:\n            self.dp[i] = {}\n        if jump not in self.dp[i]:\n            self.dp[i][jump] = {}\n        self.dp[i][jump][can] = ans\n\n        return ans\n    def waysToReachStair(self, k: int) -> int:\n        return self.solve(k, 1, 0, 1)\n        \n\n    \n        \n\n        ",
    "submit_ts": "1716089210",
    "subm_id": "1261836117"
}