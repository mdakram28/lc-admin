{
    "username": "userdeku",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int size = nums.length;\n        long totalCount = 0;\n        Map<Long, Long> prevSubarrays = new HashMap<>();\n        \n        for (int index = 0; index < size; ++index) {\n            Map<Long, Long> currSubarrays = new HashMap<>();\n            if (nums[index] == k) {\n                totalCount++;\n            }\n            currSubarrays.put((long) nums[index], 1L);\n            for (Map.Entry<Long, Long> entry : prevSubarrays.entrySet()) {\n                long value = entry.getKey();\n                long frequency = entry.getValue();\n                long newAndResult = value & nums[index];\n                \n                if (newAndResult == k) {\n                    totalCount += frequency;\n                }\n                currSubarrays.put(newAndResult, currSubarrays.getOrDefault(newAndResult, 0L) + frequency);\n            }   \n            prevSubarrays = currSubarrays;\n        }\n        return totalCount;\n    }\n}",
    "submit_ts": "1720281088",
    "subm_id": "1311812735"
}