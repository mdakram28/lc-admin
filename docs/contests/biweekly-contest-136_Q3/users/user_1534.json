{
    "username": "clever-volhardfhm",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        vis = [[False] * n for _ in range(m)]\n        g = []\n        for i in range(m):\n            for j in range(n):\n                if vis[i][j]:\n                    continue \n                cnt = [0, 0]\n                cnt[grid[i][j]] += 1\n                vis[i][j] = True \n                # \u884c\n                jj = n - 1 - j\n                if j != jj:\n                    cnt[grid[i][jj]] += 1\n                    vis[i][jj] = True\n                ii = m - 1 - i \n                if i != ii:\n                    cnt[grid[ii][j]] += 1\n                    vis[ii][j] = True\n                if i != ii and j != jj:\n                    cnt[grid[ii][jj]] += 1\n                    vis[ii][jj] = True\n                g.append(cnt)\n        # print(g)\n        nn = len(g)\n        @cache\n        def dfs(i : int, mod : int):\n            if i == nn:\n                return 0 if mod == 0 else inf \n            res = inf\n            # 0\n            res = min(res, dfs(i + 1, mod) + g[i][1])\n            # 1\n            res = min(res, dfs(i + 1, (mod + g[i][0] + g[i][1]) % 4) + g[i][0])\n            return res \n        return dfs(0, 0)\n        \n        ",
    "submit_ts": "1722699107",
    "subm_id": "552274115"
}