{
    "username": "dilkhush04",
    "submission": "\npublic class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        final int MOD = 1000000007;\n        int maxInversions = 400;\n        long[][] dp = new long[n + 1][maxInversions + 1];\n        dp[0][0] = 1;\n    \n        int[] reqInversions = new int[n];\n        Arrays.fill(reqInversions, -1);\n        for (int[] req : requirements) {\n            reqInversions[req[0]] = req[1];\n        }\n        for (int i = 0; i < n; i++) {\n            for (int k = 0; k <= maxInversions; k++) {\n                if (dp[i][k] == 0) continue;\n                for (int l = 0; l <= i; l++) {\n                    int newInversions = k + l;\n                    if (newInversions > maxInversions) break;\n                    \n                    dp[i + 1][newInversions] = (dp[i + 1][newInversions] + dp[i][k]) % MOD;\n                }\n            }\n            if (reqInversions[i] != -1) {\n                for (int k = 0; k <= maxInversions; k++) {\n                    if (k != reqInversions[i]) {\n                        dp[i + 1][k] = 0;\n                    }\n                }\n            }\n        }\n        long result = 0;\n        for (int k = 0; k <= maxInversions; k++) {\n            result = (result + dp[n][k]) % MOD;\n        }\n\n        return (int) result;\n    }\n}\n",
    "submit_ts": "1719068801",
    "subm_id": "1296777265"
}