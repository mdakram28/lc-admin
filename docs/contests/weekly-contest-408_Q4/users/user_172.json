{
    "username": "Devansh_Sengar",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define ff first\n#define ss second\n#define pii pair<int, int>\n#define ll long long int\n#define vll vector<ll>\n\nbool dfs(int src, vector<bool> &visi, unordered_set<int> &bottom_left, unordered_map<ll, vll> &graph) {\n  if(bottom_left.find(src) != bottom_left.end())\n    return true;\n\n  bool res = false;\n  for(auto node : graph[src]) {\n    if(!visi[node]) {\n      visi[node] = true;\n      res = res || dfs(node, visi, bottom_left, graph);\n    }\n  }\n  return res;\n}\n\nclass Solution {\npublic:\n    bool canReachCorner(int x, int y, vector<vector<int>>& p) {\n        int n = p.size();\n        unordered_map<ll, vll> graph;\n          unordered_set<int> top_right, bottom_left;\n\n          for(int i = 0; i < n; ++i) {\n            ll px = p[i][0];\n            ll py = p[i][1];\n            ll pr = p[i][2];\n\n            for(int j = 0; j < n; ++j) {\n              if((px - p[j][0])*(px - p[j][0]) + (py - p[j][1])*(py - p[j][1]) <= (pr + p[j][2])*(pr + p[j][2])) {\n                graph[i].push_back(j);\n                graph[j].push_back(i);\n              }\n            }\n\n            // touching top or left edge\n            if(y - py <= pr || px <= pr)\n              top_right.insert(i);\n\n            // touching right or bottom edge\n            if(x - px <= pr || py <= pr)\n              bottom_left.insert(i);\n          }\n\n          vector<bool> visi(n, false);\n          bool res = false;\n\n          for(auto node : top_right) {\n            if(!visi[node]) {\n              visi[node] = true;\n              res = res || dfs(node, visi, bottom_left, graph);\n            }\n          }\n\n          return !res;\n    }\n};",
    "submit_ts": "1722134960",
    "subm_id": "1335684707"
}