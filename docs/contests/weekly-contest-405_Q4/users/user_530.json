{
    "username": "_Manohar_Singh_",
    "submission": "class Solution {\n    class tnode {\n        HashMap<Character, tnode> chilldrren = new HashMap<>();\n        List<Integer> indexes = new ArrayList<>();\n    }\n\n    class Trie {\n        tnode root;\n\n        Trie() {\n            root = new tnode();\n        }\n\n        void insert(String w, int i) {\n            tnode node = root;\n            for (char c : w.toCharArray()) {\n                node.chilldrren.putIfAbsent(c, new tnode());\n                node = node.chilldrren.get(c);\n            }\n            node.indexes.add(i);\n        }\n\n        tnode getRoot() {\n            return root;\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        Trie t = new Trie();\n        for (int i = 0; i < words.length; ++i) {\n            t.insert(words[i], i);\n        }\n\n        int[] dpp = new int[n + 1];\n        Arrays.fill(dpp, Integer.MAX_VALUE);\n        dpp[0] = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (dpp[i] == Integer.MAX_VALUE)\n                continue;\n\n            tnode node = t.getRoot();\n            for (int j = i; j < n; ++j) {\n                if (!node.chilldrren.containsKey(target.charAt(j)))\n                    break;\n                node = node.chilldrren.get(target.charAt(j));\n                for (int index : node.indexes) {\n                    dpp[j + 1] = Math.min(dpp[j + 1], dpp[i] + costs[index]);\n                }\n            }\n        }\n\n        return dpp[n] == Integer.MAX_VALUE ? -1 : dpp[n];\n    }\n}",
    "submit_ts": "1720322373",
    "subm_id": "1312348153"
}