{
    "username": "Java_Programmer_Ketan",
    "submission": "class Solution{\n    HashMap<State,Integer> dp = new HashMap<>();\n    public int waysToReachStair(int k) {\n        return solve(1,0,k,true);\n    }\n    private int solve(int num, int level, int k, boolean back){\n        if(num - 2 > k ) return 0;\n        State state = new State(num,level,back);\n        if(dp.containsKey(state)) return dp.get(state);\n        int res = (num == k ? 1: 0);\n        if(back) res += solve(num-1,level,k,false) + solve(num+(1<<level),level+1,k,true);\n        else res += solve(num+(1<<level),level+1,k,true);\n        dp.put(state,res);\n        return res;\n    }\n}\nclass State{\n    int num;\n    int level;\n    boolean back;\n\n    public State(int num, int level, boolean back) {\n        this.num = num;\n        this.level = level;\n        this.back = back;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        State state = (State) o;\n        return num == state.num && level == state.level && back == state.back;\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(num, level, back);\n    }\n}\n",
    "submit_ts": "1716088577",
    "subm_id": "1261818039"
}