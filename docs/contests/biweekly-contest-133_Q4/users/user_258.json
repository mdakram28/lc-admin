{
    "username": "dragonman164",
    "submission": "const int mod = 1e9 + 7;\nlong long int dp[405][405];\nclass Solution {\npublic:\n    long long int solve(map<int,int> &help, int n, int k){\n        for(auto &elem : help){\n            if(elem.first > n) break;\n            else if(elem.first < n and elem.second > k) return 0;\n            else if(elem.first == n and elem.second != k) return 0;\n        }\n        if(n == 0) return 0;\n        if(k == 0) return 1;\n        \n        if(dp[n][k] != -1) return dp[n][k];\n        long long int ans = 0;\n        for(int i = 0; i <= k; i++ ){\n            if(i <= n - 1){\n                ans += solve(help, n - 1, k - i)%mod;\n                ans = ans % mod;\n            }\n            \n        }\n        return dp[n][k] = ans;\n\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int maxi = 0;\n        map<int,int> help;\n        for(auto &elem : requirements){\n            help[elem[0] + 1] = elem[1];\n            maxi = max(maxi, elem[1]);\n        }\n        for(int i = 0; i <= n + 2; i++ ){\n            for(int j = 0; j <= maxi + 2; j++ ) dp[i][j] = -1;\n        }\n        return solve(help, n, help[n]);\n        \n    }\n};",
    "submit_ts": 1719069651.0
}