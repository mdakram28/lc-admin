{
    "username": "AlthafHussain",
    "submission": "class Solution {\n    int dp[][][];\n    int f(int j, int cnt, int flag, int k){\n        if(1+((1<<j)-1)-cnt  > k+1) return 0;\n        int cost = (1+((1<<j)-1)-cnt == k) ? 1 : 0;\n        if(dp[j][cnt][flag] != -1) return dp[j][cnt][flag];\n        int count = f(j+1, cnt, 0, k);\n        if(flag == 0)\n        count += f(j, cnt+1, 1, k);\n        return dp[j][cnt][flag] = cost+count;\n    }\n    public int waysToReachStair(int k) {\n        dp = new int[32][32][2];\n        for(int i[][] : dp){\n            for(int j[] : i){\n                Arrays.fill(j, -1);\n            }\n        }\n        return f(0, 0, 0, k);\n    }\n}",
    "submit_ts": 1716089267.0
}