{
    "username": "BruceGO",
    "submission": "#define f first\n#define s second\n#define lc (rt<<1)\n#define rc (rt<<1|1)\n#define pb push_back\n#define cl(a, b) memset(a, b, sizeof(a))\n#define mp(a, b) make_pair((a), (b))\n#define all(x) x.begin(),x.end()\ntypedef long long ll;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pl;\ntypedef pair<pi, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pi> vii;\ntypedef vector<pl> vll;\ntypedef vector<pii> viii;\nconst int inf = 0x3F3F3F3F;\nconst ll infl = 0x3F3F3F3F3F3F3F3FLL;\nconst int mod = 1e9 + 7, mx = 1e9+2;\nvoid print(vector<int> & a){\n    for(int i=0; i<a.size(); i++) cout << a[i] << \" \\n\"[i+1==a.size()];\n}\ntypedef pair<int, pair<int, bool>> tp;\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        target = k;\n        return fun(1, 0, 0);\n    }\n    int fun(int cur, int j, bool f) {\n        tp t = mp(cur, mp(j, f));\n        if(mp.count(t)) return mp[t];\n        int ways = 0;\n        if(cur == target) {\n            ways++;\n            if(j>1) return mp[t] = ways;\n        }\n        if(cur && !f) ways += fun(cur-1, j, true);\n        if(cur + (1<<j) < mx) ways += fun(cur + (1<<j), j+1, false);\n        return mp[t] = ways;\n    }\n    int target = 0;\n    map<tp, int> mp;\n};\n",
    "submit_ts": 1716088134.0
}