{
    "username": "vams_krishna",
    "submission": "import java.util.*;\n\nclass TrieNode {\n    TrieNode[] children;\n    int minCost;\n    \n    public TrieNode() {\n        children = new TrieNode[26]; \n        minCost = Integer.MAX_VALUE;\n    }\n}\n\nclass Trie {\n    TrieNode root;\n    \n    public Trie() {\n        root = new TrieNode();\n    }\n    \n    private int charToIndex(char ch) {\n        return ch - 'a';\n    }\n    \n    public void insert(String word, int cost) {\n        TrieNode node = root;\n        for (char c : word.toCharArray()) {\n            int index = charToIndex(c);\n            if (node.children[index] == null) {\n                node.children[index] = new TrieNode();\n            }\n            node = node.children[index];\n        }\n        node.minCost = Math.min(node.minCost, cost);\n    }\n}\n\nclass Solution {\n    private int charToIndex(char ch) {\n        return ch - 'a';\n    }\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n        \n        int[] memo = new int[n + 1];\n        Arrays.fill(memo, Integer.MAX_VALUE);\n        memo[0] = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (memo[i] == Integer.MAX_VALUE) continue;\n            TrieNode node = trie.root;\n            for (int j = i; j < n; ++j) {\n                char ch = target.charAt(j);\n                int index = charToIndex(ch);\n                if (node.children[index] == null) break;\n                node = node.children[index];\n                if (node.minCost != Integer.MAX_VALUE) {\n                    memo[j + 1] = Math.min(memo[j + 1], memo[i] + node.minCost);\n                }\n            }\n        }\n        \n        return memo[n] == Integer.MAX_VALUE ? -1 : memo[n];\n    }\n    \n   \n}\n",
    "submit_ts": "1720324186",
    "subm_id": "1312393568"
}