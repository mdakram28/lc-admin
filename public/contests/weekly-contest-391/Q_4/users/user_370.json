{
    "username": "rastsislau",
    "submission": "class Solution {\npublic:\n    \n    int MaxDist(vector<vector<int>>& points)\n    {\n        int n = points.size();\n        vector <int> sum, diff;\n        for (auto x: points)\n        {\n            sum.push_back(x[0] + x[1]);\n            diff.push_back(x[0] - x[1]);\n        }\n                          \n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n\n        return max(sum[n-1] - sum[0], diff[n-1] - diff[0]);\n\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector <pair <int, int> > sum, diff;\n        int ii=0;\n        for (auto x: points)\n        {\n            sum.push_back(make_pair(x[0] + x[1], ii));\n            diff.push_back(make_pair(x[0] - x[1], ii));\n            ii++;\n        }\n                          \n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        int cur_ans = max(sum[n-1].first - sum[0].first, diff[n-1].first - diff[0].first);\n        \n        vector <int> ids_to_check;\n        ids_to_check.push_back(sum[0].second);\n        ids_to_check.push_back(sum[n-1].second);\n        ids_to_check.push_back(diff[0].second);\n        ids_to_check.push_back(diff[n-1].second);\n        for (auto id : ids_to_check)\n        {\n            vector<vector<int>> del;\n            for (int i=0;i<n;i++)\n            {\n                if (i!=id)\n                {\n                    del.push_back(points[i]);\n                }\n            }\n            cur_ans = min(cur_ans, MaxDist(del));\n        }\n        \n        return cur_ans;\n    }\n};"
}