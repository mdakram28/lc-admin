{
    "username": "daoqi",
    "submission": "using i64 = long long;\ntemplate<class T>\nstruct RMQ {\n    int n;\n    std::vector<T> a;\n    std::vector<std::array<T, 30>> f;\n    std::function<T(T, T)> func;\n\n    RMQ() {};\n\n    RMQ(std::vector<T> init_, std::function<T(T, T)> func_) {\n        work(init_, func_);\n    }\n\n    void work(std::vector<T> &init_) {\n        work(init_, [&](int x, int y) { return std::max(x, y); });\n    }\n\n    void work(std::vector<T> &init_, std::function<T(T, T)> func_) {\n        this->a = init_;\n        this->func = func_;\n        this->n = a.size();\n        this->f.assign(n, {});\n        for (int i = 0; i < n; i++) f[i][0] = a[i];\n        for (int j = 1; j <= std::__lg(n) + 1; j++) {\n            for (int i = 0; i + (1 << j) - 1 < n; i++) {\n                f[i][j] = func(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);\n            }\n        }\n    }\n\n    T query(int l, int r) {\n        int k = log2(r - l + 1);\n        return func(f[l][k], f[r - (1 << k) + 1][k]);\n    }\n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        RMQ<int> rmq(nums,[&](int x,int y){return x&y;});\n        i64 ans=0;\n        int n=nums.size();\n        for(int i=0;i<n;i++){\n            i64 l=i,r=n-1,p1=-1,p2=-1;\n            while(l<=r){\n                int mid=(l+r)>>1;\n                if(rmq.query(i,mid)>=k){\n                    p2=mid;\n                    l=mid+1;\n                }else{\n                    r=mid-1;\n                }\n            }\n            l=i,r=n-1;\n            while(l<=r){\n                int mid=(l+r)>>1;\n                if(rmq.query(i,mid)<=k){\n                    p1=mid;\n                    r=mid-1;\n                }else{\n                    l=mid+1;\n                }\n            }\n            if(p1==-1||rmq.query(i,p1)!=k) continue;\n            ans+=p2-p1+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277585",
    "subm_id": "544557580"
}