{
    "username": "nikhil_120",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n         int mod = 1000000007;\n         int m = 400;\n     long long int ans = 0;\n            int binarySearch(const vector<int>& nums, int target) {\n        int left = 0;\n        int right = nums.size() - 1;\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target) {\n                return mid;\n            } else if (nums[mid] < target) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return -1;  \n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& rr) {\n         \n\n        map<int, int> r;\n        for (auto& x : rr) {\n            r[x[0] + 1] = x[1];\n        }\n\n        vector<vector<long>> dp(n + 1, vector<long>(m + 1, 0));\n        dp[0][0] = 1;\n\n        int l = 1;\n        while (l <= n) {\n            int i = 0;\n            while (i <= m) {\n                int p = 0;\n                while (p < l) {\n                    int prev_i = i - p;\n                    if (prev_i >= 0) {\n                        dp[l][i] = (dp[l][i] + dp[l - 1][prev_i]) % mod;\n                    }\n                    ++p;\n                }\n                ++i;\n            }\n\n            if (r.count(l)) {\n                int t = r[l];\n                i = 0;\n                while (i <= m) {\n                    if (i != t) {\n                        dp[l][i] = 0;\n                    }\n                    ++i;\n                }\n            }\n\n            ++l;\n        }\n                \n\n       \n        int idx = 0;\n        while (idx <= m) {\n            ans = (ans + dp[n][idx]) % mod;\n            ++idx;\n        }\n\n        return ans;\n    }\n\nprivate:\n    void swap(int& a, int& b) {\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n};\n",
    "submit_ts": "1719071907",
    "subm_id": "1296856759"
}