{
    "username": "Samuel3Shin",
    "submission": "using ll = long long;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, bool>> pq;\n\n        for (int cost : horizontalCut) {\n            pq.emplace(cost, true);\n        }\n\n        for (int cost : verticalCut) {\n            pq.emplace(cost, false);\n        }\n\n        int horizontalSegments = 1; \n        int verticalSegments = 1;  \n        ll totalCost = 0;\n\n        while (!pq.empty()) {\n            auto [cost, isHorizontal] = pq.top();\n            pq.pop();\n\n            if (isHorizontal) {\n                totalCost += cost * verticalSegments;\n                horizontalSegments++;\n            } else {\n                totalCost += cost * horizontalSegments;\n                verticalSegments++;\n            }\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925971",
    "subm_id": "1320271992"
}