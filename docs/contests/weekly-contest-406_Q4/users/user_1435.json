{
    "username": "trusting-poincarerho",
    "submission": "from typing import List\nimport heapq\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # \u5c06\u6240\u6709\u5207\u5272\u7ebf\u548c\u7c7b\u578b\uff08\u6c34\u5e73\u6216\u5782\u76f4\uff09\u5408\u5e76\u5230\u4e00\u8d77\n        cuts = []\n        for cost in horizontalCut:\n            cuts.append((cost, 'H'))\n        for cost in verticalCut:\n            cuts.append((cost, 'V'))\n\n        # \u6309\u6210\u672c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        cuts.sort(reverse=True, key=lambda x: x[0])\n\n        totalCost = 0\n        horizontalPieces = 1  # \u521d\u59cb\u6c34\u5e73\u5757\u6570\u4e3a1\n        verticalPieces = 1    # \u521d\u59cb\u5782\u76f4\u5757\u6570\u4e3a1\n\n        # \u5904\u7406\u6392\u5e8f\u540e\u7684\u5207\u5272\u7ebf\n        for cost, type in cuts:\n            if type == 'H':\n                # \u6c34\u5e73\u5207\u5272\uff0c\u5f71\u54cd\u6240\u6709\u5782\u76f4\u5757\n                totalCost += cost * verticalPieces\n                horizontalPieces += 1\n            else:\n                # \u5782\u76f4\u5207\u5272\uff0c\u5f71\u54cd\u6240\u6709\u6c34\u5e73\u5757\n                totalCost += cost * horizontalPieces\n                verticalPieces += 1\n\n        return totalCost\n",
    "submit_ts": "1720926255",
    "subm_id": "546445065"
}