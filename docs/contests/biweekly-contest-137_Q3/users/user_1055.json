{
    "username": "Aditya Maurya",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n            ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n        vector<pair<long long,pair<int,int>>> v;\n        int n=grid.size();\n        int m=grid[0].size();\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                v.push_back({grid[i][j],{i,j}});\n            }\n        }\n        sort(v.rbegin(),v.rend());\n        long long ans=LLONG_MIN;\n        for(int i=0;i<1*(m+n);i++){\n            for(int j=0;j<1*(m+n);j++){\n                if(i==j)continue;\n                if(v[i].second.first==v[j].second.first) continue;\n                if(v[i].second.second==v[j].second.second) continue;\n                for(int k=0;k<min(m+n+5,m*n);k++){\n                    if(v[k].second.first==v[i].second.first || v[k].second.first==v[j].second.first) continue;\n                    if(v[k].second.second==v[i].second.second || v[k].second.second==v[j].second.second) continue;\n                    if(k==j || k==i) continue;\n                    \n                        long long p=v[i].first+v[j].first+v[k].first;\n                        ans=max(ans,p);\n                    \n\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909679",
    "subm_id": "1359201696"
}