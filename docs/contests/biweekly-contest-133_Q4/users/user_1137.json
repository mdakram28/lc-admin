{
    "username": "doritoes",
    "submission": "class Solution {\npublic:\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int,int>mpp;\n        for(auto a:requirements){\n            mpp[a[0]+1]=a[1];\n        }\n        int dp[301][401]={0};\n        dp[0][0]=1;\n        int mod=1e9+7;\n        for(int i=1;i<=n;i++){\n            for(int inv=0;inv<=400;inv++){\n                for(int newPos=0;newPos<i;newPos++){\n                    int prevInv=inv-newPos;\n                    if(prevInv>=0){\n                        dp[i][inv]+=dp[i-1][prevInv];\n                        dp[i][inv]%=mod;\n                    }\n                }\n            }\n            if(mpp.find(i)!=mpp.end()){\n                int target=mpp[i];\n                for(int j=0;j<=400;j++){\n                    if(j!=target) dp[i][j]=0;\n                }\n            }\n            \n            \n        }\n        int res=0;\n        for(auto a:dp[n]){\n            res+=a;\n            res%=mod;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719071914.0
}