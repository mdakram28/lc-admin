{
    "username": "zhenliang153",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        arr = []\n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                arr.append(i)\n        s = SortedList(arr)\n        ret = []\n        for x, y, z in queries:\n            if x == 1:\n                L = s.bisect_right(y)\n                R = s.bisect_left(z)\n                # print(s, L, R)\n                ret.append(max(0, R - L))\n            elif nums[y] != z:\n                nums[y] = z\n                for i in [y - 1, y, y + 1]:\n                    if not (i > 0 and i < n - 1):\n                        continue\n                    if s.count(i) != 0:\n                        if not (nums[i] > nums[i - 1] and nums[i] > nums[i + 1]):\n                            s.remove(i)\n                    else:\n                        if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                            s.add(i)\n        return ret",
    "submit_ts": 1718508437.0
}