{
    "username": "realSaddy",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        // we start k back then go normally\n\n        // we keep track of current alternation, if it breaks then we reset it to 1. \n        // if during the break we see that it is >= k, we add #-k to result\n\n        int ret = 0;\n        int cur = 1;\n        int n = colors.size();\n        int last = colors[0];\n\n// i < n\n\n        for(int i = 1; i < n+k-1; i++) {\n            if(last != colors[i % n]) {\n                cur++;\n            } else {\n                if(cur >= k) ret += cur-k+1;\n                cur = 1;\n            }\n\n            last = colors[i%n];\n        }\n\nif(cur >= k) ret += cur-k+1;\n        return ret; \n    }\n};",
    "submit_ts": "1720278300",
    "subm_id": "1311703183"
}