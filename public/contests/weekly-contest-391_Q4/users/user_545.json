{
    "username": "gradesking",
    "submission": "typedef long long ll;\n\nll f(vector<vector<int>>& points)\n{\n    ll n = points.size();\n    \n    ll big = -1;\n    ll sum = points[1][0] - points[0][0];\n\n    stack<pair<ll,ll>> stk,stk2;\n    stk.push({points[0][1], 0});\n    stk2.push({points[0][1], 0});\n\n    for(int i=1;i<n;++i)\n    {\n        // sum += points[i][0] - points[i-1][0];\n\n        ll tmp1 = points[i][1] - stk.top().first + sum;\n        ll tmp2 = stk2.top().first - points[i][1] + sum;\n        if(max(tmp1,tmp2) > big)\n        {\n            big = max(tmp1,tmp2);\n        }\n        \n        // while(stk.size() && stk.top().first < points[i][1] + sum) stk.pop();\n        // while(stk2.size() && stk2.top().first > points[i][1] - sum) stk2.pop();\n\n        if(points[i][1] + sum < stk.top().first) stk.push({points[i][1] + sum, i});\n        if(points[i][1] - sum > stk2.top().first) stk2.push({points[i][1] - sum, i});\n\n        if(i!=n-1) sum += points[i+1][0] - points[i][0];\n    }\n    return big;\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        ll n = points.size();\n        \n        sort(points.begin(), points.end());\n        \n        ll a=-1,b=-1;\n        ll big = -1;\n        ll sum = points[1][0] - points[0][0];\n        \n        stack<pair<ll,ll>> stk,stk2;\n        stk.push({points[0][1], 0});\n        stk2.push({points[0][1], 0});\n        \n        for(int i=1;i<n;++i)\n        {\n            // sum += points[i][0] - points[i-1][0];\n            \n            ll tmp1 = points[i][1] - stk.top().first + sum;\n            ll tmp2 = stk2.top().first - points[i][1] + sum;\n            if(max(tmp1,tmp2) > big)\n            {\n                big = max(tmp1,tmp2);\n                if(tmp1 > tmp2)\n                {\n                    a = stk.top().second;\n                    b = i;\n                }\n                else\n                {\n                    a = stk2.top().second;\n                    b = i;\n                }\n            }\n            \n            // while(stk.size() && stk.top().first < points[i][1] + sum) stk.pop();\n            // while(stk2.size() && stk2.top().first > points[i][1] - sum) stk2.pop();\n            \n            if(points[i][1] + sum < stk.top().first) stk.push({points[i][1] + sum, i});\n            if(points[i][1] - sum > stk2.top().first) stk2.push({points[i][1] - sum, i});\n            \n            if(i!=n-1) sum += points[i+1][0] - points[i][0];\n        }\n        \n        // cout<<points[a][0]<<\" \"<<points[a][1]<<endl;\n        // cout<<points[b][0]<<\" \"<<points[b][1]<<endl;\n        \n        vector<vector<int>> v,v2;\n        for(int i=0;i<n;++i)\n        {\n            if(i!=a) v.push_back(points[i]);\n            if(i!=b) v2.push_back(points[i]);\n        }\n        \n        return min(f(v), f(v2));\n    }\n};"
}