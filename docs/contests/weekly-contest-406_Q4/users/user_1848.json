{
    "username": "henilthaker2010",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int rows=1,cols=1;\n        long long ans=0;\n        while(!horizontalCut.empty() && !verticalCut.empty())\n        {\n            if(horizontalCut.back()>verticalCut.back())\n            {\n                ans+=horizontalCut.back()*cols;\n                horizontalCut.pop_back();\n                rows++;\n            }\n            else\n            {\n                ans+=verticalCut.back()*rows;\n                verticalCut.pop_back();\n                cols++;\n            }\n        }\n        while(!horizontalCut.empty())\n        {\n            ans+=horizontalCut.back()*cols;\n            horizontalCut.pop_back();\n        }\n        while(!verticalCut.empty())\n        {\n            ans+=verticalCut.back()*rows;\n            verticalCut.pop_back();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926491",
    "subm_id": "1320287861"
}