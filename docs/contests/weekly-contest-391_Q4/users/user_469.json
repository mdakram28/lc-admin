{
    "username": "Tinky1224",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n        s, d = sorted([(x + y, i) for i, (x, y) in enumerate(points)]), sorted([(x - y, i) for i, (x, y) in enumerate(points)])\n        s1, s2, d1, d2 = s[0][1], s[-1][1], d[0][1], d[-1][1]\n        res = max(s[-1][0] - s[0][0], d[-1][0] - d[0][0])\n        for rev in [s1, s2, d1, d2]:\n            S = s[-1][0] - s[0][0]\n            if s1 == rev:\n                S = s[-1][0] - s[1][0]\n            elif s2 == rev:\n                S = s[-2][0] - s[0][0]\n            D = d[-1][0] - d[0][0]\n            if d1 == rev:\n                D = d[-1][0] - d[1][0]\n            elif d2 == rev:\n                D = d[-2][0] - d[0][0]\n            res = min(res, max(S, D))\n        return res        "
}