{
    "username": "sumit_1212",
    "submission": "class Solution {\npublic:\n    \n    int fun(int val,vector<vector<int>>& points){\n        int N = points.size();\n        vector<int> V, V1;\n        bool c= true;\n        for (int i = 0; i < N; i++) {\n            int d1 = points[i][0] + points[i][1];\n            int d2 = points[i][0] - points[i][1];\n            \n            if(c==true && d2==val){\n                c=false;\n            }\n            else{\n                V.push_back(d1);\n                V1.push_back(d2);\n            }\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n        \n        return maximum;\n    }\n    \n    \n    int f(int val,vector<vector<int>>& points){\n        int N = points.size();\n        vector<int> V, V1;\n        bool c= true;\n        for (int i = 0; i < N; i++) {\n            int d1 = points[i][0] + points[i][1];\n            int d2 = points[i][0] - points[i][1];\n            \n            if(c==true && d1==val){\n                c=false;\n            }\n            else{\n                V.push_back(d1);\n                V1.push_back(d2);\n            }\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n        \n        return maximum;\n    }\n    \n    \n    int minimumDistance(vector<vector<int>>& points) {\n         int N = points.size();\n        vector<int> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] = points[i][0] + points[i][1];\n        V1[i] = points[i][0] - points[i][1];\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    int maximum = max(V.back() - V.front(), V1.back() - V1.front());\n \n    cout << maximum << endl;\n    \n           int num1 = f(V.back(),points);\n           int num2 = f(V.front(),points);\n           maximum = min(maximum,min(num1,num2));\n        \n            int num3 = fun(V1.back(),points);\n            int num4 = fun(V1.front(),points);\n            maximum = min(maximum,min(num3,num4));\n        \n        \n        \n        return maximum;\n    }\n};"
}