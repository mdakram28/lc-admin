{
    "username": "khalil192",
    "submission": "class Solution {\npublic:\n    \n    int accessOrCreate(std::map<int, std::vector<std::vector<int>>> &pm, int i, int j, int k) {\n    // Check if the outer map has the key 'i'\n    if (pm.find(i) == pm.end()) {\n        // Create an empty vector of vectors with default values -1\n        pm[i] = std::vector<std::vector<int>>(j + 1, std::vector<int>(k + 1, -1));\n        return -1;\n    }\n\n    // Ensure the vector at 'i' has at least 'j+1' elements\n    if (pm[i].size() <= j) {\n        // Resize and initialize new entries with vectors of default values -1\n        pm[i].resize(j + 1, std::vector<int>(k + 1, -1));\n        return -1;\n    }\n\n    // Ensure the vector of vectors at 'j' has at least 'k+1' elements\n    if (pm[i][j].size() <= k) {\n        // Resize and initialize new entries with default value -1\n        pm[i][j].resize(k + 1, -1);\n        return -1;\n    }\n\n    // If all dimensions exist, return the existing value\n    return pm[i][j][k];\n}\n\n\n    \n    int f(int i, int j,int last,  int k,  map<int, vector<vector<int> > > &pm){\n        if(i >= k+2){\n            return 0;\n        }\n        // cout<<i<<\" \"<<j<<\" \"<<last<<\" \"<<k<<\"\\n\";\n        \n        int st = accessOrCreate(pm,i,j,last);\n        if(st != -1){\n            return st;\n        }\n        \n        int ans = 0;\n        if(i == k){\n            // cout<<\"reached at \"<<i<<\" \"<<j<<\" \"<<last<<\"\\n\";\n            ans++;\n        }\n        \n        if(i != 0 && last != 1){\n                // cout<<\"went for\"<<i-1 <<\" at \"<<j<<\"\\n\";\n            ans += f(i-1,j, 1,k,pm);\n        }\n        \n        if(j < 32){\n            \n            long long step = (1LL << j);\n            if(step + (long long)i < (long long)k+2LL){\n                // cout<<\"going for\"<<step+i <<\" at \"<<j<<\"\\n\";\n                ans += f(step+i,j+1,2, k,pm);\n            }\n        }\n        pm[i][j][last] = ans;\n        return ans;\n        \n    }\n    \n    int waysToReachStair(int k) {\n        \n        map<int, vector<vector<int> > >pm;\n        \n        \n        return f(1, 0, 0, k,pm);\n        \n    }\n};",
    "submit_ts": "1716088658",
    "subm_id": "1261820313"
}