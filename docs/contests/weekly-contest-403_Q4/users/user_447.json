{
    "username": "raararaara",
    "submission": "using lint = long long;\nusing ii = pair<int, int>;\nusing il = pair<int, lint>;\nusing li = pair<lint, int>;\nusing ll = pair<lint, lint>;\n\nconst int mxn = 1000100, mxp = 1000001;\nconst int MOD = 998244353, inf = -1e9 - 7, INF = 1e9 + 1;\nconst lint lnf = -4e18, LNF = 5e18;\nconst double eps = 1e-10;\nconst int sqrtN = 200;\n\n#define sz(x) int(size(x))\n#define all(x) (x).begin(),(x).end()\n#define compress(x) sort(all(x)), (x).erase(unique(all(x)), (x).end())\n#define lb(x, v) (lower_bound(all(x), v) - (x).begin())\n#define ub(x, v) (upper_bound(all(x), v) - (x).begin())\n#define eb emplace_back\n#define pb push_back\n#define getName(var)  #var\nvector<lint> xl, yl;\n\n#define Yes \"Yes\\n\"\n#define No \"No\\n\"\n\nconst int dr[] = {-1, 0, 1, 0};\nconst int dc[] = {0, -1, 0, 1};\n\ninline int inRange(int r, int c, int R, int C) {\n    return 0 <= r && r < R && 0 <= c && c < C;\n}\n\nint N, M, Q, R, C, H, K, T;\n\nvoid init() {\n\n}\n\n/*\n * 1|0\n * ---\n * 2|3\n * */\n// d[dir][i][j] := \uc2dc\uc791\uc810\ubd80\ud130 (i,j)\uc758 \uc601\uc5ed\ub0b4\uc5d0 1\uc778 \uac83\ub4e4\uc744 \ud3ec\ud568\ud558\ub294 \ucd5c\uc18c \uc9c1\uc0ac\uac01\ud615 \ub113\uc774\n\nclass Solution {\npublic:\n    int mnRec(vector<vector<int>> &a, int r1, int r2, int c1, int c2) {\n        int mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = r1; i <= r2; i++) {\n            for(int j = c1; j <= c2; j++) {\n                if(a[i][j]) {\n                    mnr = min(mnr, i);\n                    mnc = min(mnc, j);\n                    mxr = max(mxr, i);\n                    mxc = max(mxc, j);\n                    c++;\n                }\n            }\n        }\n        if(c) return (mxr - mnr + 1) * (mxc - mnc + 1);\n        else return 0;\n    }\n    int minimumSum(vector<vector<int>>& a) {\n        R = sz(a), C = sz(a[0]);\n        vector<vector<vector<int>>> d; //lint d[4][1001][1001];\n        d = vector<vector<vector<int>>> (4, vector<vector<int>> (R+1, vector<int>(C+1)));\n        int mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = 0; i < R; i++) {\n            for(int j = 0; j < C; j++) {\n                if(a[i][j]) {\n                    mnr = min(mnr, i);\n                    mnc = min(mnc, j);\n                    mxr = max(mxr, i);\n                    mxc = max(mxc, j);\n                }\n            }\n        }\n        // 1\n        mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = 0; i < R; i++) {\n            for(int j = 0; j < C; j++) {\n                d[1][i][j] = mnRec(a, 0, i, 0, j);\n            }\n        }\n        // 0\n        mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = 0; i < R; i++) {\n            for(int j = C-1; j >= 0; j--) {\n                d[0][i][j] = mnRec(a, 0, i, j, C-1);\n            }\n        }\n        // 2\n        mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = R-1; i >= 0; i--) {\n            for(int j = 0; j < C; j++) {\n                d[2][i][j] = mnRec(a, i, R-1, 0, j);\n            }\n        }\n        // 3\n        mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n        for(int i = R-1; i >= 0; i--) {\n            for(int j = C-1; j >= 0; j--) {\n                d[3][i][j] = mnRec(a, i, R-1, j, C-1);\n            }\n        }\n\n\n        int res = INF;\n        // [0,i], [i+1,j], [j, R-1]\n        for(int i = 0; i < R; i++) {\n            for(int j = i+1; j+1 < R; j++) {\n                int cand = 0;\n                // [0,i]\n                cand += d[1][i][C-1];\n                // [j+1, R-1]\n                cand += d[2][j+1][C-1];\n                // [i+1,j]\n                mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n                for(int i2 = i+1; i2 <= j; i2++) {\n                    for(int j2 = 0; j2 < C; j2++) {\n                        if(a[i2][j2]) {\n                            mnr = min(mnr, i2);\n                            mnc = min(mnc, j2);\n                            mxr = max(mxr, i2);\n                            mxc = max(mxc, j2);\n                            c++;\n                        }\n                    }\n                }\n                if(c) cand += (mxr - mnr + 1) * (mxc - mnc + 1);\n\n                res = min(res, cand);\n            }\n        }\n\n        for(int i = 0; i < C; i++) {\n            for(int j = i+1; j+1 < C; j++) {\n                int cand = 0;\n                // [0,i]\n                cand += d[1][R-1][i];\n                // [j+1, C-1]\n                cand += d[0][R-1][j+1];\n                // [i+1,j]\n                mnr = INF, mxr = -1, mnc = INF, mxc = -1, c = 0;\n                for(int i2 = i+1; i2 <= j; i2++) {\n                    for(int j2 = 0; j2 < R; j2++) {\n                        if(a[j2][i2]) {\n                            mnr = min(mnr, j2);\n                            mnc = min(mnc, i2);\n                            mxr = max(mxr, j2);\n                            mxc = max(mxc, i2);\n                            c++;\n                        }\n                    }\n                }\n                if(c) cand += (mxr - mnr + 1) * (mxc - mnc + 1);\n\n                res = min(res, cand);\n            }\n        }\n        for(int i = 0; i < R; i++) {\n            for(int j = 0; j < C; j++) {\n                int cand = 0;\n                // \u3153\n                cand = d[1][i][j] + d[2][i+1][j] + d[0][R-1][j+1];\n                res = min(res, cand);\n                // \u3157\n                cand = d[1][i][j] + d[0][i][j+1] + d[2][i+1][C-1];\n                res = min(res, cand);\n                // \u314f\n                cand = d[1][R-1][j] + d[0][i][j+1] + d[3][i+1][j+1];\n                res = min(res, cand);\n                // \u315c\n                cand = d[1][i][C-1] + d[2][i+1][j] + d[3][i+1][j+1];\n                res = min(res, cand);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719113150.0
}