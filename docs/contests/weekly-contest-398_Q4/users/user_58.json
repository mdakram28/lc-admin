{
    "username": "jessenwilliam87",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        @cache\n        def dp(i, downed, jump):\n            #print(i, downed, jump)\n            if i < 0:\n                return 0\n   #         if downed or (i == 0): # must use 2\n      #          return dp(i + 2 ** jump, False, jump+1)\n            if i - 1 > k:\n                return 0\n            if i == k:\n                if downed:\n                    return 1 + dp(i + 2 ** jump, False, jump+1)\n                else:\n                    return 1 + dp(i + 2 ** jump, False, jump+1) + dp(i-1, True, jump)\n            else:\n                if downed:\n                    return dp(i + 2 ** jump, False, jump+1)\n                else:\n                    return dp(i + 2 ** jump, False, jump+1) + dp(i-1, True, jump)\n            \n        \n        return dp(1, False, 0)",
    "submit_ts": "1716087120",
    "subm_id": "1261773661"
}