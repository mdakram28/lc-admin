{
    "username": "anuj__07",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCuts, vector<int>& vCuts) {\n        sort(hCuts.begin(), hCuts.end(), greater<int>());\n        sort(vCuts.begin(), vCuts.end(), greater<int>());\n        \n        int i = 0, j = 0;\n        long long hPieces = 1, vPieces = 1;\n        long long totalCost = 0;\n\n        while (i < hCuts.size() && j < vCuts.size()) {\n            if (hCuts[i] > vCuts[j]) {\n                totalCost += static_cast<long long>(hCuts[i]) * vPieces;\n                hPieces++;\n                i++;\n            } else {\n                totalCost += static_cast<long long>(vCuts[j]) * hPieces;\n                vPieces++;\n                j++;\n            }\n        }\n\n        while (i < hCuts.size()) {\n            totalCost += static_cast<long long>(hCuts[i]) * vPieces;\n            hPieces++;\n            i++;\n        }\n\n        while (j < vCuts.size()) {\n            totalCost += static_cast<long long>(vCuts[j]) * hPieces;\n            vPieces++;\n            j++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926058",
    "subm_id": "1320274651"
}