{
    "username": "ll931110",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sums(n), diffs(n);\n        \n        for (int i = 0; i < n; i++) {\n            sums[i] = points[i][0] + points[i][1];\n            diffs[i] = points[i][0] - points[i][1];\n        }\n        \n        vector<int> removedIdx;\n        int value = sums[0], idx = 0;\n        for (int i = 0; i < n; i++) {\n            if (value < sums[i]) {\n                value = sums[i];\n                idx = i;\n            }\n        }\n        removedIdx.push_back(idx);\n\n        value = sums[0];\n        idx = 0;\n        for (int i = 0; i < n; i++) {\n            if (value > sums[i]) {\n                value = sums[i];\n                idx = i;\n            }\n        }\n        removedIdx.push_back(idx);\n\n        value = diffs[0];\n        idx = 0;     \n        for (int i = 0; i < n; i++) {\n            if (value < diffs[i]) {\n                value = diffs[i];\n                idx = i;\n            }\n        }\n        removedIdx.push_back(idx);\n\n        value = diffs[0];\n        idx = 0;     \n        for (int i = 0; i < n; i++) {\n            if (value > diffs[i]) {\n                value = diffs[i];\n                idx = i;\n            }\n        }        \n        removedIdx.push_back(idx);\n        \n        int ret = 2e8;\n        for (const auto pos : removedIdx) {\n            int maxSum = (pos == 0) ? sums[1] : sums[0];\n            int minSum = (pos == 0) ? sums[1] : sums[0];\n            int maxDiff = (pos == 0) ? diffs[1] : diffs[0];\n            int minDiff = (pos == 0) ? diffs[1] : diffs[0];\n            \n            for (int i = 0; i < n; i++) if (i != pos) {\n                maxSum = max(maxSum, sums[i]);\n                minSum = min(minSum, sums[i]);\n                maxDiff = max(maxDiff, diffs[i]);\n                minDiff = min(minDiff, diffs[i]);\n            }\n            \n            ret = min(ret, max(maxSum - minSum, maxDiff - minDiff));\n        }\n        \n        return ret;\n    }\n};"
}