{
    "username": "aashutosh_01",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& v, int k) {\n        int ans = 0 , n = v.size();\n        deque<int> dq;\n        int count = 1;\n        int i = 0;\n        for(i ; i < k; i++){\n            if(!dq.empty() && dq.back() != v[i]) count++;\n            dq.push_back(v[i]);\n        }\n        if(count == k){\n            cout << count << \" \";\n            ans++;\n        } \n        for(i = 1 ; i < n ; i++){\n            int last = dq.front();\n            dq.pop_front();\n            if(dq.front() != last) count--;\n            if(dq.back() != v[(i+k-1) % n]) count++;\n            if(count == k){\n                cout << i << endl;\n                ans++;\n            } \n            dq.push_back(v[(i+k-1) % n]);\n            // if(i == 5) cout << count << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279439",
    "subm_id": "1311751238"
}