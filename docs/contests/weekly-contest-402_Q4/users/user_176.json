{
    "username": "regain0001",
    "submission": "class Solution {\n    #define ll long long\n#define _for(i,a,b) for(ll i=(a);i<=(b);++i)\n#define _for2(i,a,b) for(ll i=(a);i>=(b);--i)\n#define pb emplace_back\n#define fi first\n#define se second\n#define all(x) x.begin(),x.end()\n#define sz(x) (int)x.size()\n#define MAXN 100005\n#define cy std::cout<<\"Yes\\n\"\n#define cn std::cout<<\"No\\n\"\n#ifndef M_PI\n#define M_PI 3.14159265358979323846\n#endif // !M_PI\n#ifndef NOWMS\n#define NOWMS                                                   \\\n    std::chrono::duration_cast<std::chrono::milliseconds>(      \\\n        std::chrono::system_clock::now().time_since_epoch())\\\n        .count()\n#endif // !NOWMS\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing plll = pair<pll, ll>;\nusing pllll = pair<pll, pll>;\nusing pl2 = pair<plll, plll>;\npublic:\nclass FenwickTree {\npublic:\n    ll maxn;\n    vector<ll>f;\n    void init(ll* of, ll n) {\n        maxn = n;\n        f.assign(n + 10, 0);\n        _for(i, 1, n) {\n            add(i, of[i]);\n        }\n    }\n    void init(ll n) {\n        maxn = n;\n        f.assign(n + 10, 0);\n    }\n    ll lowbit(ll x) {\n        return x & (-x);\n    }\n    void add(ll x, ll v = 1) {\n        while (x <= maxn + 5) {\n            f[x] += v;\n            x += lowbit(x);\n        }\n    }\n    ll query(ll x) {\n        ll ans = 0;\n        while (x > 0) {\n            ans += f[x];\n            x -= lowbit(x);\n        }\n        return ans;\n    }\n    ll query(ll x, ll y) {\n        return query(y) - query(x - 1);\n    }\n};\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int>ans;\n        ll n=sz(nums);\n        ll m=sz(queries);\n        FenwickTree ft;\n        ft.init(n+1);\n        _for(i,1,n-2){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                cout<<\"i+1:\"<<i+1<<endl;\n                ft.add(i+1);\n            }\n        }\n        _for(i,0,m-1){\n            //cout<<\"i:\"<<i<<endl;\n            ll t=queries[i][0];\n            if(t==1){\n                //\n                ll l=queries[i][1],r=queries[i][2];\n                ll res=ft.query(l+1,r+1);\n                if(l==r||r==l+1){\n                    res=0;\n                }else{\n                    if(ft.query(l+1,l+1))res--;\n                    if(ft.query(r+1,r+1))res--;\n                }\n                ans.pb(res);\n            }else{\n                ll idx=queries[i][1];\n                ll v=queries[i][2];\n                 nums[idx]=v;\n                ll old=ft.query(idx+1,idx+1);\n                ll new1=(idx>0&&idx<n-1&&v>nums[idx-1]&&v>nums[idx+1]);\n                //cout<<\"old:\"<<old<<\"new:\"<<new1<<endl;\n                if(old!=new1){\n                    if(old){\n                        ft.add(idx+1,-1);\n                    }else{\n                        ft.add(idx+1);\n                    }\n                }\n                if(idx>1){\n                    ll old=ft.query(idx,idx);\n                    ll idx2=idx-1;\n                    ll new1=(idx2>0&&idx2<n-1&&nums[idx2]>nums[idx2-1]&&nums[idx2]>nums[idx2+1]);\n                    //cout<<\"old:\"<<old<<\"new:\"<<new1<<endl;\n                    if(old!=new1){\n                        if(old){\n                            ft.add(idx,-1);\n                        }else{\n                            ft.add(idx);\n                        }\n                    }\n                }\n                if(idx<n-2){\n                    ll old=ft.query(idx+2,idx+2);\n                    ll idx2=idx+1;\n                    ll new1=(idx2>0&&idx2<n-1&&nums[idx2]>nums[idx2-1]&&nums[idx2]>nums[idx2+1]);\n                    //cout<<\"old:\"<<old<<\"new:\"<<new1<<endl;\n                    if(old!=new1){\n                        if(old){\n                            ft.add(idx+2,-1);\n                        }else{\n                            ft.add(idx+2);\n                        }\n                    }\n                }\n\n                //nums[idx]=v;\n            }\n        }\n\n\n        return ans;\n    }\n};",
    "submit_ts": 1718505982.0
}