{
    "username": "park29",
    "submission": "class Solution:\n    \n    def minimumDifference(self, nums: List[int], target: int) -> int:\n        \n        \"\"\"Find smallest difference between a subarray-& and target.\n        Given a list on nonnegative integers, and nonnegative target\n        returns the minimum value of abs(target - BITWISE_AND(B))\n        over all nonempty subarrays B\n\n        Runs in linear time on fixed-width integers.\n        \"\"\"\n\n        def get_set_bits(x: int) -> List[int]:\n            \"\"\"Return indices of set bits in x\"\"\"\n            return [i for i, x in enumerate(reversed(bin(x)[2:]))\n                    if x == '1']\n\n        def counts_to_bitwise_and(window_length: int,\n                                  bit_counts: Dict[int, int]) -> int:\n            \"\"\"Given bit counts for a window of an array, return \n            bitwise AND of the window's elements.\"\"\"\n\n            return sum((1 << key) for key, count in bit_counts.items()\n                       if count == window_length)\n\n        current_AND_value = nums[0]\n        best_diff = abs(current_AND_value - target)\n\n        window_bit_counts = Counter(get_set_bits(nums[0]))\n\n        left_idx = right_idx = 0\n        while right_idx < len(nums):\n\n            # Expand the window to decrease & value\n            if current_AND_value > target or left_idx > right_idx:\n                right_idx += 1\n                if right_idx >= len(nums):\n                    break\n                window_bit_counts += Counter(get_set_bits(nums[right_idx]))\n\n            # Shrink the window to increase & value\n            else:\n                window_bit_counts -= Counter(get_set_bits(nums[left_idx]))\n                left_idx += 1\n\n            current_AND_value = counts_to_bitwise_and(right_idx - left_idx + 1,\n                                                      window_bit_counts)\n\n            # No nonempty arrays allowed\n            if left_idx <= right_idx:\n                best_diff = min(best_diff, abs(current_AND_value - target))\n\n        return best_diff\n\n    \n    \n\"\"\"\n5 5 0 0 0\n\n5 5 0\n13 90\n\"\"\"",
    "submit_ts": 1717299908.0
}