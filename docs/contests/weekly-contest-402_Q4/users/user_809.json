{
    "username": "deadeyee",
    "submission": "class Solution {\npublic:\n    int N;\n    int fw[100010], fw2[100010];\n    void update(int x, int y, int v) { //inclusive\n        for (int tx=x; tx < N; tx += tx&(-tx)) fw[tx] += v, fw2[tx] -= v*(x-1);\n        for (int ty=y+1; ty < N; ty += ty&(-ty)) fw[ty] -= v, fw2[ty] += v*y; \n    }\n    int sum (int x) {\n        int res = 0;\n        for (int tx=x; tx; tx -= tx&(-tx)) res += fw[tx]*x + fw2[tx];\n        return res;\n    }\n    int range_sum(int x, int y) { //inclusive\n        return sum(y)-sum(x-1);\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        N = nums.size() + 1;\n        \n        auto peak = [&](int i) {\n            if (i <= 0 || i >= nums.size() -1) return false;\n            return (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]);\n        };\n        \n        auto set = [&](int i, int v) {\n            if (i < 0 || i >= nums.size()) return;\n            update(i+1,i+1,-range_sum(i+1,i+1)+v);\n        };\n        \n        for (int i = 0; i < nums.size(); ++i) {\n            if (i == 0 || i == nums.size() - 1) continue;\n            if (peak(i)) update(i+1, i+1, 1);\n        }\n        vector<int> ans;\n        for (auto q: queries) {\n            if (q[0] == 1) {\n                // ans.push_back(range_sum(q[1]+1, q[2]+1));\n                int lx = q[1]+2, rx = q[2];\n                if (lx > rx) ans.push_back(0);\n                else ans.push_back(range_sum(lx, rx));\n            } else {\n                int idx = q[1], val = q[2];\n                nums[idx] = val;\n                if (peak(idx)) set(idx,1);\n                else set(idx,0);\n                if (peak(idx+1)) set(idx+1,1);\n                else set(idx+1,0);\n                if (peak(idx-1)) set(idx-1,1);\n                else set(idx-1,0);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718505993.0
}