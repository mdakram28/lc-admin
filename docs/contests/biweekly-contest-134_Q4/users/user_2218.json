{
    "username": "wzy19",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int p = 0;\n        vector<int> valid;\n        for (int i = 0; i < 32; ++i) {\n            long long t = (1 << i);\n            if ((t & k) == 0) {\n                valid.push_back(i);\n            }\n        }\n        auto check = [&](int l, int r) {\n            // cout << \"cal :[\" << l << \",\" << r << \"]\" << endl; \n            if (l == r) {\n                if (nums[l] == k) {\n                    return (long long)1;\n                } else {\n                    return (long long)0;\n                }\n            }\n            int cnt[32];\n            for (int i = 0; i < 32; ++i) {\n                cnt[i] = 0;\n            }\n            int left_p = l;\n            int right_p = l;\n            long long ret = 0;\n            while (left_p <= r && right_p <= r) {\n                // add right_p;\n                // cout << \" add \" << nums[right_p] << endl;\n                for (auto i : valid) {\n                    if ((nums[right_p] & (1 << i)) == 0) {\n                        cnt[i] += 1;\n                    }\n                }\n                // check_valid \n                bool flag = true;\n                for (auto i : valid) {\n                    if (cnt[i] >= 1) {\n                        continue;\n                    } else {\n                        flag = false;\n                        break;\n                    }\n                }\n                // cout << \"check result:\" << flag << endl;\n                if (flag) {\n                    ret += (r - right_p + 1);\n                    while (left_p <= right_p) {\n                        for (auto i : valid) {\n                            if ((nums[left_p] & (1 << i)) == 0) {\n                                cnt[i] -= 1;\n                            }\n                        }\n                        bool f = true;\n                        for (auto i : valid) {\n                            if (cnt[i] >= 1) {\n                                continue;\n                            } else {\n                                f = false;\n                                break;\n                            }\n                        }\n                        left_p += 1;\n                        if (f) {\n                            ret += (r - right_p + 1);\n                        } else {\n                            break;   \n                        }\n                    }\n                    right_p += 1;\n                } else {\n                    right_p += 1;\n                }\n            }\n            return ret;\n        };\n        for (int i = 0; i < nums.size(); ++i) {\n            if ((nums[i] & k) == k) {\n                // cout << \"check \" << nums[i] << \" enter\" << endl;\n                continue;\n            } else {\n                // cout << \"check \" << nums[i] << \" pass\" << endl;\n                if ( i > p ) {\n                    // [p, i - 1]\n                    ans += check(p, i-1);\n                    // ans += (i - p) * (i - p + 1) / 2;\n                    // cout << \"ans become:\" << ans << endl;\n                }\n                p = i + 1;\n            }\n        }\n        if (nums.size() > p) {\n            ans += check(p, nums.size() - 1);\n            // ans += (nums.size() - p) * (nums.size() - p + 1) / 2;\n            // cout << \"ans become:\" << ans << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280747",
    "subm_id": "544573168"
}