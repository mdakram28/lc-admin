{
    "username": "an1ket_62",
    "submission": "using ll=long long;\nclass Solution {\npublic:\n        struct node{\n        ll sum;\n        node(){\n            sum=(1LL<<32)-1;\n        }\n    };\n\n    node t[4*200200];\n    node merge(node a,node b){\n        node ans;\n        ans.sum=a.sum&b.sum;\n        return ans;\n    }\n\n    void build(ll id,ll l,ll r,vector<int>&a){\n        if (l==r){\n            t[id].sum=a[l];\n            return;\n        }\n        ll mid=(l+r)/2;\n        build(2*id,l,mid,a);\n        build(2*id+1,mid+1,r,a);\n        t[id]=merge(t[2*id],t[2*id+1]);\n\n    }\n    void update(ll id,ll l,ll r,ll pos,ll val){\n        if (pos<l || pos>r){\n            return;\n        }\n        if (l==r){\n            t[id].sum+=val;\n            return;\n        }\n\n        ll mid=(l+r)/2;\n        update(2*id,l,mid,pos,val);\n        update(2*id+1,mid+1,r,pos,val);\n        t[id]=merge(t[2*id],t[2*id+1]);\n\n    }\n    node query(ll id,ll l,ll r,ll lq,ll rq){\n        if (lq>r || rq<l){\n            return node();\n        }\n        if (lq<=l && r<=rq){\n            return t[id];\n\n        }\n        ll mid=(l+r)/2;\n        return merge(query(2*id,l,mid,lq,rq),query(2*id+1,mid+1,r,lq,rq));\n\n    }\n    int minimumDifference(vector<int>& a, int k) {\n        // sort(a.begin(),a.end());\n        int n=a.size();\n        build(1,0,n-1,a);\n        int res=INT_MAX;\n        // cout << query(1,0,n-1,0,0).sum << endl;\n        for (int i=0;i<n;i++){\n            if (a[i]<=k){\n                res=min(res,k-a[i]);\n            }\n            else{\n                int low=0;\n                int high=i;\n                int ans=i;\n                // cout << ans << endl;\n                while(low<=high){\n                    int md=(low+high)/2;\n                    ll d=query(1,0,n-1,md,i).sum;\n                    if (d>=k){\n                        ans=md;\n                        high=md-1;\n                    }\n                    else{\n                        low=md+1;\n                    }\n                }\n                // cout << ans << \" \" << i << endl;\n                int d=query(1,0,n-1,ans,i).sum;\n                // cout << d << endl;\n                res=min(res,abs(k-d));\n                // cout << ans << endl;\n                if (ans-1>=0){\n                    int d=query(1,0,n-1,ans-1,i).sum;\n                    res=min(res,abs(k-d));\n                    \n                }\n            }\n        }\n        return res;\n        \n        \n    }\n};",
    "submit_ts": 1717297741.0
}