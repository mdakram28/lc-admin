{
    "username": "JAS05",
    "submission": "class Solution {\npublic:\n    \n    void build_lps(string t , vector<int> &lps){\n        int i = 1 , prev_lps = 0 , n = t.length();\n\n        while(i < n){\n            if(t[i] == t[prev_lps]){\n                lps[i] = prev_lps + 1;\n                prev_lps++;\n                i++;\n            }\n            else{\n                if(prev_lps == 0) i++;\n                else prev_lps = lps[prev_lps-1];\n            }\n        }\n\n        return;\n    } \n\n    int kmp(string &s , string &t){\n        int n = s.length() , m = t.length();\n        vector<int> lps(m);\n        lps[0] = 0;\n        int ans = 0;\n\n        build_lps(t , lps);\n\n        int i = 0 , j = 0;\n\n        while(i < n){\n            if(s[i] == t[j]){\n                i++;\n                j++;\n            }\n            else{\n                if(j == 0) i++;\n                else{\n                    j = lps[j - 1];\n                }\n            }\n\n            if(j == m){\n                // return i-m;\n                ans++;\n            }\n        }\n\n        return ans;\n    }\n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        string s;\n        \n        for(auto x : colors) s.push_back(x+'0');\n        \n        s += s.substr(0,k-1);\n        \n        string a , b;\n        bool par = 0;\n        \n        for(int i = 0 ; i < k ; i++){\n            a.push_back(par + '0');\n            b.push_back(!par + '0');\n            par = !par;\n        }\n        \n        // cout << s << endl;\n        return kmp(s,a) + kmp(s,b);\n    }\n};",
    "submit_ts": "1720277783",
    "subm_id": "1311679810"
}