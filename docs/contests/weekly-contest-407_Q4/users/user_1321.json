{
    "username": "gibjun",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        ans = 0\n        normalizedTarget = []\n        for n, t in zip(nums, target):\n            normalizedTarget.append(t-n)\n            \n        prevState = 'neutral'\n        prevNum = 0\n        for i in normalizedTarget:\n            #transition state\n            if i > 0:\n                newState = 'positive'\n            elif i < 0:\n                newState = 'negative'\n            else:\n                newState = 'neutral'\n            #print(ans, prevNum, prevState, newState)\n            if prevState == 'neutral':\n                # noop if newState is neutral\n                if newState == 'positive':\n                    ans += i - 0\n                    prevNum = i\n                elif newState == 'negative':\n                    ans += -i - 0\n                    prevNum = i\n            elif prevState =='positive':\n                if newState == 'positive':\n                    if i > prevNum:\n                        ans += i - prevNum\n                        prevNum = i\n                    # noop if equal, negative case is reassign\n                    else: \n                        prevNum = i\n                elif newState == 'negative':\n                    ans += -i - 0\n                    prevNum = i\n                else:\n                    prevNum = 0\n            else: #negative\n                if newState == 'positive':\n                    ans += i - 0\n                    prevNum = i\n                elif newState == 'neutral':\n                    prevNum = 0\n                else:\n                    if i < prevNum:\n                        ans += -(i - prevNum)\n                        prevNum = i\n                    else:\n                        prevNum = i\n                \n            prevState = newState\n        return ans\n            \n        \n        ",
    "submit_ts": "1721532411",
    "subm_id": "1327985201"
}