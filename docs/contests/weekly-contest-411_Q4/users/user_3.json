{
    "username": "arignote",
    "submission": "class Solution {\n    public long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n        long[] curr = new long[s.length()], sum = new long[s.length() + 1], result =\nnew long[queries.length];\n        for (int i = 0, j = 0, c[] = new int[2]; i < s.length(); i++) {\n            for (; j < s.length() && (c[0] <= k || c[1] <= k); j++) {\n                c[s.charAt(j) - '0']++;\n            }\n            sum[i + 1] = sum[i] + (curr[i] = j - 1 - (c[0] > k && c[1] > k ? 1 : 0));\n            c[s.charAt(i) - '0']--;\n        }\n        for (int i = 0; i < queries.length; i++) {\n\n             int left = queries[i][0], right = queries[i][1];\n            while (left < right) {\n                int mid = (left + right) / 2;\n                if (curr[mid] <= queries[i][1]) {\n                    left = mid + 1;\n                } else {\nright = mid; }\n}\n            result[i] = (long) queries[i][1] * (queries[i][1] - left + 2) - (long)\n(queries[i][0] + queries[i][1]) * (queries[i][1] - queries[i][0] + 1) / 2 + sum[left]\n- sum[queries[i][0]] - queries[i][0] + 1;\n}\n        return result;\n    }\n}\n",
    "submit_ts": "1723950038",
    "subm_id": "1359735531"
}