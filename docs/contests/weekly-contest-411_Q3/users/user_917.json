{
    "username": "mazinkarjikar",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n\n        if n <= 5:\n            best = None\n            for i in range(10**n):\n                if str(i) == str(i)[::-1] and i % k == 0 and len(str(i)) == n:\n                    best = i\n            if best: return str(best)\n            else: return \"what?\"\n        # outside is always 9 or 8, inside can change from 9 down to 1\n        mod = [0 for _ in range(n)]\n        x = 1\n        for i in range(n-1, -1, -1):\n            mod[i] = x\n            x = x * 10 % k\n\n        ans = [9 for _ in range(n)]\n        MOD = 0\n        for i in range(n):\n            MOD = (MOD * 10 + 9) % k\n\n\n        l,r = 0, n-1\n        mid1 = r // 2\n        mid2 = None\n        if n % 2 == 0: mid2 = mid1 + 1\n        if k == 5:\n            ans[l] = 5\n            ans[r] = 5\n            return \"\".join([str(x) for x in ans])\n\n        for i in range(n//2 + 1):\n            md = MOD\n            if md == 0:\n                return \"\".join([str(x) for x in ans])\n            for i in range(9):\n                # change the middle two downwards until an answer is found\n                ans[mid1] -= 1\n                md -= mod[mid1]\n                if mid2: \n                    ans[mid2] -= 1\n                    md -= mod[mid2]\n                if md < 0: md += k\n                md = md % k\n                if md == 0:\n                    return \"\".join([str(x) for x in ans])\n            # reset for next iteration\n            ans[mid1] = 9\n            if mid2: ans[mid2] = 9\n            ans[l] -= 1\n            ans[r] -= 1\n            MOD -= mod[l]\n            MOD -= mod[r]\n            if MOD < 0: MOD += k\n            MOD = MOD % k\n            l += 1\n            r -= 1\n        \n        return \"huh?\"",
    "submit_ts": "1723953562",
    "subm_id": "1359824720"
}