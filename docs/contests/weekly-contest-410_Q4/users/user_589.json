{
    "username": "yuwen-yan",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10 ** 9 + 7\n        \n        def dp(x, y):\n            #print(x, y)\n            if x == len(nums):\n                return 1\n            if y > nums[x]:\n                return 0\n            ans = 0\n            start_pos = y\n            if x > 0:\n                start_pos = max(nums[x] - nums[x - 1] + y, start_pos)\n            \n            if x < len(nums) - 1:\n                if start_pos < len(last_run_suffix_sum):\n                    ans += last_run_suffix_sum[start_pos]\n                    ans %= MOD\n            else:\n                if start_pos < nums[x] + 1:\n                    ans += (nums[x] + 1 - start_pos)\n                    ans %= MOD\n            return ans\n        \n        max_num = max(nums)\n        last_run_suffix_sum = [0] * (max_num + 1)\n        for i in reversed(range(len(nums))):\n            new_run_suffix_sum = [0] * (max_num + 1)\n            for j in reversed(range(nums[i] + 1)):\n                new_run_suffix_sum[j] = dp(i, j)\n                if i == 0 and j == 0:\n                    return new_run_suffix_sum[j] \n                if j < len(last_run_suffix_sum) - 1:\n                    new_run_suffix_sum[j] += new_run_suffix_sum[j + 1]\n                    new_run_suffix_sum[j] %= MOD\n            last_run_suffix_sum = new_run_suffix_sum\n",
    "submit_ts": "1723347958",
    "subm_id": "1351608859"
}