{
    "username": "prajjawal05",
    "submission": "class Solution {\n    int mod = (int)1e9 + 7;\n    public long countOfPairs(int[] nums, int pos, int flimit, int llimit, long[][][] dp) {\n        if(pos == nums.length) return 1;\n        \n        long ans = 0;\n        \n        if(pos!=0 && dp[pos][flimit][llimit] != -1) {\n            // System.out.println(\"going here\");\n            return dp[pos][flimit][llimit];\n        }\n        \n        for(int i=0; i<=nums[pos]; i++) {\n            int j = nums[pos] - i;\n            if(i < flimit || j > llimit) continue;\n            ans = (ans + countOfPairs(nums, pos+1, i, j, dp)) % mod;\n            // System.out.println(\"pos: \" + pos + \" i: \" + i + \" j: \" + j);\n        }\n        \n        if(pos!=0 && dp[pos][flimit][llimit] == -1) {\n            dp[pos][flimit][llimit] = ans;\n        }\n        \n        return ans;\n    }\n    \n    public int countOfPairs(int[] nums) {\n        long[][][] ans = new long[nums.length][51][51];\n        for(int i=0; i<nums.length; i++) {\n            for(int j=0; j<51; j++) {\n                Arrays.fill(ans[i][j], -1);\n            }\n        }\n        return (int)countOfPairs(nums, 0, Integer.MIN_VALUE, Integer.MAX_VALUE, ans);\n    }\n}",
    "submit_ts": "1723345900",
    "subm_id": "1351565747"
}