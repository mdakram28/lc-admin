{
    "username": "liuskuif",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        // \u8d2a\u5fc3\uff0c\u627e\u4e24\u4e2a\u5217\u8868\u4e2d\u7684\u6700\u5927\u503c\n        int hLen = horizontalCut.length;\n        int vLen = verticalCut.length;\n        int hIndex = hLen - 1;\n        int vIndex = vLen - 1;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        long result = 0;\n        while (hIndex >= 0 || vIndex >= 0) {\n            if (hIndex != -1 && vIndex != -1) {\n                if (horizontalCut[hIndex] < verticalCut[vIndex]) {\n                    result += (long) verticalCut[vIndex] * (hLen - hIndex);\n                    vIndex --;\n                } else {\n                    result += (long) horizontalCut[hIndex] * (vLen - vIndex);\n                    hIndex --;\n                }\n            }  else if (hIndex == -1) {\n                result += (long) verticalCut[vIndex] * (hLen - hIndex);\n                vIndex --;\n            } else {\n                result += (long) horizontalCut[hIndex] * (vLen - vIndex);\n                hIndex --;\n            }\n        }\n        return result;\n    }\n}",
    "submit_ts": "1720926153",
    "subm_id": "546444406"
}