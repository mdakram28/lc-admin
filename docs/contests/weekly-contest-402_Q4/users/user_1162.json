{
    "username": "cloud-22",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        m = len(nums) + 1\n        t = [0] * (2 << m.bit_length())\n\n        def query(o: int, l: int, r: int, L: int, R: int) -> int:\n            if l >= L and r <= R:\n                return t[o]\n            m = (l + r) // 2\n            if L <= m and R > m:\n                return query(o * 2, l, m, L, m) + query(o * 2 + 1, m + 1, r, m + 1, R)\n            elif R <= m:\n                return query(o * 2, l, m, L, R)\n            else:\n                return query(o * 2 + 1, m + 1, r, L, R)\n\n        def update(o: int, l: int, r: int, i: int, v: int) -> None:\n            if l == r:\n                t[o] += v\n                return\n            m = (l + r) // 2\n            if i <= m:\n                update(o * 2, l, m, i, v)\n            else:\n                update(o * 2 + 1, m + 1, r, i, v)\n            t[o] = t[o * 2] + t[o * 2 + 1]\n\n        for i in range(1, len(nums) - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                update(1, 0, m, i + 1, 1)\n        ans = []\n        for a in queries:\n            if a[0] == 1:\n                if a[2] - a[1] < 2:\n                    ans.append(0)\n                else:\n                    ans.append(query(1, 0, m, a[1] + 2, a[2]))\n            else:\n                i = a[1]\n                if i >= 1 and i < len(nums) - 1:\n                    if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                        if a[2] <= nums[i - 1] or a[2] <= nums[i + 1]:\n                            update(1, 0, m, i + 1, -1)\n                    elif a[2] > nums[i - 1] and a[2] > nums[i + 1]:\n                        update(1, 0, m, i + 1, 1)\n                if i - 1 >= 1 and i - 1 < len(nums) - 1:\n                    if nums[i - 1] > nums[i] and nums[i - 1] > nums[i - 2]:\n                        if a[2] >= nums[i - 1]:\n                            update(1, 0, m, i, -1)\n                    elif a[2] < nums[i - 1] and nums[i - 1] > nums[i - 2]:\n                        update(1, 0, m, i, 1)\n                if i + 1 >= 1 and i + 1 < len(nums) - 1:\n                    if nums[i + 1] > nums[i] and nums[i + 1] > nums[i + 2]:\n                        if a[2] >= nums[i + 1]:\n                            update(1, 0, m, i + 2, -1)\n                    elif nums[i + 1] > nums[i + 2] and a[2] < nums[i + 1]:\n                        update(1, 0, m, i + 2, 1)\n                nums[i] = a[2]\n        return ans",
    "submit_ts": 1718509398.0
}