{
    "username": "NoswellSowen",
    "submission": "class Solution:\n    def minimumDifference(self, nums, k):\n        K = 30\n        cur = (1<<K)-1\n        n = len(nums)\n        curbit = [0]*K\n        r = 0\n        re = (1<<K)\n        for l in range(n):\n            re=min(re,abs(cur-k))\n            while r<n and cur>k:\n                for i in range(K):\n                    if not ((nums[r]>>i)&1):\n                        curbit[i] += 1\n                cur &= nums[r]\n                r += 1\n                re=min(re,abs(cur-k))\n\n            # move l\n            for i in range(K):\n                if not ((nums[l]>>i)&1):\n                    curbit[i] -= 1\n                    if curbit[i]==0:\n                        cur |= (1<<i)\n        return re\n\n            \n\n        ",
    "submit_ts": "1717298479",
    "subm_id": "1274780505"
}