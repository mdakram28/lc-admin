{
    "username": "Dg_Xzl",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        total_cost = 0\n        h_pieces = 1  # \u6c34\u5e73\u65b9\u5411\u7684\u5757\u6570\n        v_pieces = 1  # \u5782\u76f4\u65b9\u5411\u7684\u5757\u6570\n        while h_pieces< m or v_pieces<n:\n            if h_pieces < m and v_pieces <n:\n                # print(horizontalCut[h_pieces-1]*(v_pieces+1),verticalCut[v_pieces-1]*(h_pieces+1))\n                a=verticalCut[v_pieces-1]*h_pieces+horizontalCut[h_pieces-1]*(v_pieces+1) \n                b=verticalCut[v_pieces-1]*(h_pieces+1)+horizontalCut[h_pieces-1]*v_pieces\n                # print(a,b)\n                if a<b:\n                    total_cost+=verticalCut[v_pieces-1]*h_pieces\n                    v_pieces+=1\n                else:\n                    total_cost+=horizontalCut[h_pieces-1]*v_pieces\n                    h_pieces+=1\n            elif h_pieces<m:\n                total_cost+=horizontalCut[h_pieces-1]*v_pieces\n                h_pieces+=1\n            else:\n                total_cost+=verticalCut[v_pieces-1]*h_pieces\n                v_pieces+=1\n        return total_cost",
    "submit_ts": "1720926407",
    "subm_id": "546446064"
}