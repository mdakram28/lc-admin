{
    "username": "irfanukani",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        sort(verticalCuts.rbegin(), verticalCuts.rend());\n        sort(horizontalCuts.rbegin(), horizontalCuts.rend());\n\n        long long totalCost = 0;\n        long long verticalSegments = 1;\n        long long horizontalSegments = 1;\n\n        size_t i = 0, j = 0;\n\n        while (i < verticalCuts.size() && j < horizontalCuts.size()) {\n            if (verticalCuts[i] >= horizontalCuts[j]) {\n                totalCost += verticalCuts[i] * horizontalSegments;\n                ++verticalSegments;\n                ++i;\n            } else {\n                totalCost += horizontalCuts[j] * verticalSegments;\n                ++horizontalSegments;\n                ++j;\n            }\n        }\n\n        while (i < verticalCuts.size()) {\n            totalCost += verticalCuts[i] * horizontalSegments;\n            ++i;\n        }\n\n   \n        while (j < horizontalCuts.size()) {\n            totalCost += horizontalCuts[j] * verticalSegments;\n            ++j;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925525",
    "subm_id": "1320257612"
}