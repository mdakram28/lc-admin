{
    "username": "nikhilnayak",
    "submission": "class Solution {\n    // Trie Node class\n    private static class TrieNode {\n        Map<Character, TrieNode> children = new HashMap<>();\n        int minCost = Integer.MAX_VALUE;  // Minimum cost to reach this node\n    }\n\n    // Build the Trie from words and costs\n    private static TrieNode buildTrie(String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            String word = words[i];\n            int cost = costs[i];\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                node = node.children.computeIfAbsent(c, k -> new TrieNode());\n            }\n            node.minCost = Math.min(node.minCost, cost);  // Store the minimum cost to reach this node\n        }\n        return root;\n    }\n\n    // Search for the minimum cost to construct the target string using the Trie\n    private static int searchMinCost(String target, TrieNode root) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;  // Cost to construct an empty string is 0\n        \n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;  // Skip positions that are not reachable\n            \n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                char c = target.charAt(j);\n                if (!node.children.containsKey(c)) break;\n                node = node.children.get(c);\n                if (node.minCost != Integer.MAX_VALUE) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.minCost);\n                }\n            }\n        }\n        \n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = buildTrie(words, costs);\n        return searchMinCost(target, root);\n    }\n\n}",
    "submit_ts": "1720320710",
    "subm_id": "1312302413"
}