{
    "username": "Shaurya_Malhan",
    "submission": "class Solution {\n    public static Integer[] dp;\n    public int minimumCost(String t, String[] w, int[] c) {\n        int n = w.length;\n        HashMap<String, Integer> mp = new HashMap<>();\n        TrieNode root = new TrieNode();\n        dp = new Integer[t.length() + 1];\n        for(int i = 0; i < n; i++){\n            String l = w[i];\n            TrieNode curr = root;\n            for(int j = 0; j < l.length(); j++){\n                char r = l.charAt(j);\n                if(!curr.children.containsKey(r)){\n                    curr.children.put(r, new TrieNode());\n                }\n                curr = curr.children.get(r);\n            }\n            curr.flag = true;\n            curr.cost = Math.min(curr.cost, c[i]);\n        }\n        int ans = solve(t, root, 0);\n        return ans >= (int) 1e9 ? -1 : ans;\n    }\n    public static int solve(String t, TrieNode root, int i){\n        if(i >= t.length()){\n            return 0;\n        }\n        if(dp[i] != null){\n            return dp[i];\n        }\n        int ans = (int) 1e9;\n        TrieNode curr = root;\n        for(int j = i; j < t.length(); j++){\n            char l = t.charAt(j);\n            if(!curr.children.containsKey(l)){\n                break;\n            }\n            if(curr.children.containsKey(l)){\n                curr = curr.children.get(l);\n            }\n            if(curr.flag){\n                ans = Math.min(ans, curr.cost + solve(t, root, j + 1));\n            }\n        }\n        return dp[i] = ans;\n    }\n    public class TrieNode{\n        HashMap<Character, TrieNode> children = new HashMap<>();\n        boolean flag;\n        int cost;\n        TrieNode(){\n            flag = false;\n            cost = (int) 1e5;\n        }\n    }\n}",
    "submit_ts": "1720322285",
    "subm_id": "1312345755"
}