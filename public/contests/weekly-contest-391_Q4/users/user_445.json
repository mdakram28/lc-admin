{
    "username": "deepak_3462",
    "submission": "// #define ll long long int\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        \n        int n = p.size();\n        \n        multiset<int>mn, mx;\n        \n        for(int i = 0; i < n; i++)\n        {\n            int tp1 = (p[i][0] + p[i][1]);\n            int tp2 = (p[i][0] - p[i][1]);\n            \n            mn.insert(tp2);\n            mx.insert(tp1);\n        }\n        \n        \n        int res = INT_MAX;\n        \n        for(int i = 0; i < n; i++)\n        {\n            int tp1 = (p[i][0] + p[i][1]);\n            int tp2 = (p[i][0] - p[i][1]);\n            \n            mn.erase(mn.find(tp2));\n            \n            mx.erase(mx.find(tp1));\n            \n            int mx1 = (*mx.rbegin() - *mx.begin());\n            int mx2 = (*mn.rbegin() - *mn.begin());\n            \n            res = min(res, max(mx1, mx2));\n            \n            \n            mn.insert(tp2);\n            mx.insert(tp1);\n            \n        }\n        \n        \n        return res;\n        \n        \n    \n        \n        \n        \n    }\n};"
}