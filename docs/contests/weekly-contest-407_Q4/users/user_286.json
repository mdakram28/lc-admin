{
    "username": "hazzler",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector <int> a(n);\n        for (int i = 0; i < n; ++i){\n            a[i] = target[i] - nums[i];\n        }\n        auto zn = [&](int x){\n            return x < 0 ? -1 : +1;\n        };\n        vector <pair <int, int>> seg;\n        for (int i = 0, j = 0; i < n; i = j){\n            while(j < n && zn(a[i]) == zn(a[j])){\n                ++j;\n            }\n            if (zn(a[i]) < 0){\n                for (int k = i; k < j; ++k){\n                    a[k] *= -1;\n                }\n            }\n            seg.push_back({i, j - 1});\n        }\n        vector <int> lg(n + 1);\n        for (int i = 2; i <= n; ++i){\n            lg[i] = lg[i >> 1] + 1;\n        }\n        int z = lg[n] + 1;\n        vector <vector <int>> sp(z, vector <int> (n));\n        auto comb = [&](int i, int j){\n            return a[i] < a[j] ? i : j;\n        };\n        iota(sp[0].begin(), sp[0].end(), 0);\n        for (int i = 1; i < z; ++i){\n            for (int j = 0; j + (1 << i) <= n; ++j){\n                sp[i][j] = comb(sp[i - 1][j], sp[i - 1][j + (1 << i - 1)]);\n            }\n        }\n        auto get = [&](int l, int r){\n            int k = lg[r - l + 1];\n            return comb(sp[k][l], sp[k][r - (1 << k) + 1]);\n        };\n        \n        auto solve = [&](auto &&solve, int l, int r, int x) -> long long{\n            if (l > r) return 0LL;\n            if (l == r) return a[l] - x;\n            int pos = get(l, r);\n            return solve(solve, l, pos - 1, a[pos]) + solve(solve, pos + 1, r, a[pos]) + a[pos] - x;\n        };\n        long long ans = 0;\n        for (auto &[l, r]: seg){\n            ans += solve(solve, l, r, 0);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721530429",
    "subm_id": "1327933163"
}