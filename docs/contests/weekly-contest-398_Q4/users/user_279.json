{
    "username": "pikapika123",
    "submission": "import functools\n\n\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        m = 50\n        pow2 = [1] * (m + 1)\n        for i in range(1, m + 1):\n            pow2[i] = pow2[i - 1] * 2\n\n        @functools.lru_cache(None)\n        def dp(current, isDown, jump):\n            if current >= k + 2:\n                return 0\n            ans = 1 if current == k else 0\n            ans += dp(current + pow2[jump], False, jump + 1)\n            if not isDown and current > 0:\n                ans += dp(current - 1, True, jump)\n            return ans\n\n        return dp(1, False, 0)",
    "submit_ts": "1716087649",
    "subm_id": "1261790158"
}