{
    "username": "code_tal",
    "submission": "class Solution {\npublic:\n//     int dp[32][32][2][3];\n//     // dir=1 vertical\n//     int solve(vector<vector<vector<int>>> & dp, int max_x, int min_x, int max_y, int min_y, int dir, vector<vector<int>> & grid, int r, int c, int i, int j, int cnt)\n//     {\n//         if(i>=r && j>=c)\n//         {\n//             if(cnt>=0)\n//             {\n//                 if(max_x==-1)\n//                     return INT_MAX;\n                \n//                 return (max_x-min_x+1)*(max_y-min_y+1);\n//             }\n            \n//             return INT_MAX;\n//         }\n        \n//         if(i>= r || j>=c)\n//             return INT_MAX;\n        \n//         if(dp[i][j][dir][cnt]!=-1)\n//             return dp[i][j][dir][cnt];\n        \n        \n//         int take= INT_MAX;\n        \n//         if(cnt>0 && max_x!=-1)\n//         {\n//             int ver= solve(dp, -1, 1000, -1, 1000, 1, grid, )\n//         }\n//     }\n    \n    int solve(vector<vector<int>>& grid, int sx, int sy, int ex, int ey) {\n        \n        \n        \n        int min_x= INT_MAX, min_y= INT_MAX, max_x= -1, max_y=-1;\n        int cnt=0;\n        for(int i=sx; i<=ex; i++)\n        {\n            for(int j=sy; j<=ey; j++)\n            {\n                if(grid[i][j]==1)\n                {\n                    cnt++;\n                    max_x= max(i, max_x);\n                    min_x= min(i, min_x);\n                    max_y= max(j, max_y);\n                    min_y= min(j, min_y);\n                }\n            }\n        }\n        \n        int ans=0;\n        \n        if(cnt==0)\n            return 10000;\n        \n        return (max_x-min_x+1)*(max_y-min_y+1);\n    }\n    \n    \n    void mini(vector<vector<int>> & grid, int & ans)\n    {\n        int r= grid.size();\n        int c= grid[0].size();\n        \n         \n        \n       for(int j=0; j<c; j++)\n       {\n           int aa= solve(grid, 0, 0, r-1, j);\n           int ss= 100000;\n           for(int i=0; i<r; i++)\n           {\n               int aa1= solve(grid, 0, j+1, i, c-1) + solve(grid, i+1, j+1, r-1, c-1);\n               ss= min(ss, aa1);\n           }\n           \n           aa+=ss;\n           ans= min(ans, aa);\n           \n           \n       }\n        \n        \n       for(int j=0; j<c; j++)\n       {\n           int aa= solve(grid, 0, 0, r-1, j);\n           \n           int ss= 100000;\n           for(int j1= j+1; j1<c; j1++)\n           {\n               int aa1= solve(grid, 0, j+1, r-1, j1) + solve(grid, 0, j1+1, r-1, c-1);\n               ss= min(ss, aa1);\n           }\n           aa+= ss;\n           ans= min(ans, aa);\n       }\n        \n        \n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n       \n        \n         int r= grid.size();\n        int c= grid[0].size();\n        \n        int ans= 100000;\n        \n        mini(grid, ans);\n        \n        for(int i=0; i<r; i++)\n        {\n            for(int j=0; j<c/2; j++)\n            {\n                swap(grid[i][j], grid[i][c-j-1]);\n            }\n        }\n        \n        mini(grid, ans);\n        \n        vector<vector<int>> grid1;\n        for(int j=0; j<c; j++)\n        {\n            vector<int> a;\n            for(int i=0; i<r; i++)\n            {\n                a.push_back(grid[i][j]);\n            }\n            grid1.push_back(a);\n        }\n        \n        grid= grid1;\n        \n        mini(grid, ans);\n        swap(r, c);\n        for(int i=0; i<r; i++)\n        {\n            for(int j=0; j<c/2; j++)\n            {\n                swap(grid[i][j], grid[i][c-j-1]);\n            }\n        }\n        \n        mini(grid, ans);\n        \n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1719115115",
    "subm_id": "1297360752"
}