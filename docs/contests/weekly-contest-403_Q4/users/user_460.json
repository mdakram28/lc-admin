{
    "username": "delphih",
    "submission": "'''\n0 | 1\n--+--\n2 | 3\n'''\n\n# D = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\nD = [[1, 1], [1, -1], [-1, 1], [-1, -1]]\n\nDBG = 0\n\nclass Solution:\n    def minimumSum(self, A: List[List[int]]) -> int:\n        m, n = len(A), len(A[0])\n        rghelper = lambda l, d: range(l) if d > 0 else range(l-1, -1, -1)\n        dpp = lambda: [[[inf, 0, inf, 0] for _ in range(n)] for _ in range(m)]  # mnr, mxr, mnc, mxc\n        dp = [dpp() for _ in range(4)]\n        def update(t, t2):\n            for i in range(len(t)):\n                t[i] = (min, max)[i%2](t[i], t2[i])\n        for k in range(4):\n            for r in rghelper(m, D[k][0]):\n                for c in rghelper(n, D[k][1]):\n                    if A[r][c]: update(dp[k][r][c], [r, r, c, c])\n                    if 0 <= (r2 := r - D[k][0]) < m: update(dp[k][r][c], dp[k][r2][c])\n                    if 0 <= (c2 := c - D[k][1]) < n: update(dp[k][r][c], dp[k][r][c2])\n        if DBG:\n            for k in range(4):\n                print(dp[k])\n        \n        dpa = [[[0] * n for _ in range(m)] for _ in range(4)]\n        area = lambda t: (t[1] - t[0] + 1) * (t[3] - t[2] + 1)\n        for k in range(4):\n            for c in range(m):\n                for r in range(n):\n                    if dp[k][c][r][0] != inf:\n                        dpa[k][c][r] = area(dp[k][c][r])\n        mnf = lambda a, b, c: a + b + c if a != 0 and b != 0 and c != 0 else inf\n        mn = inf\n        \n        # ---\n        #  |\n        for c in range(m - 1):\n            if dpa[0][c][-1] == 0: continue\n            for r in range(n - 1):\n                mn = min(mn, mnf(dpa[0][c][-1], dpa[2][c+1][r], dpa[3][c+1][r+1]))\n        #  |\n        # ---\n        for c in range(1, m):\n            if dpa[2][c][-1] == 0: continue\n            for r in range(n - 1):\n                mn = min(mn, mnf(dpa[2][c][-1], dpa[0][c-1][r], dpa[1][c-1][r+1]))\n        #  |\n        #  |-\n        #  |\n        for r in range(n - 1):\n            if dpa[2][0][r] == 0: continue\n            for c in range(m - 1):\n                mn = min(mn, mnf(dpa[2][0][r], dpa[1][c][r+1], dpa[3][c+1][r+1]))\n        #  |\n        # -|\n        #  |\n        for r in range(1, n):\n            if dpa[3][0][r] == 0: continue\n            for c in range(m - 1):\n                mn = min(mn, mnf(dpa[3][0][r], dpa[0][c][r-1], dpa[2][c+1][r-1]))\n        \n        \n        dpr = [[[inf, 0, inf, 0] for _ in range(m)] for _ in range(m)]\n        dpc = [[[inf, 0, inf, 0] for _ in range(n)] for _ in range(n)]\n        for r in range(m):\n            for c in range(n):\n                if A[r][c]:\n                    update(dpr[r][r], [r, r, c, c])\n                    update(dpc[c][c], [r, r, c, c])\n        for step in range(1, m-1):\n            for r in range(m-step):\n                update(dpr[r][r+step], dpr[r][r+step-1])\n                update(dpr[r][r+step], dpr[r+1][r+step])\n        for step in range(1, n-1):\n            for c in range(n-step):\n                update(dpc[c][c+step], dpc[c][c+step-1])\n                update(dpc[c][c+step], dpc[c+1][c+step])\n        \n        dpra = [[0] * m for _ in range(m)]\n        dpca = [[0] * n for _ in range(n)]\n        for r1 in range(m):\n            for r2 in range(r1, m):\n                if dpr[r1][r2][0] != inf:\n                    dpra[r1][r2] = area(dpr[r1][r2])\n        for c1 in range(n):\n            for c2 in range(c1, n):\n                if dpc[c1][c2][0] != inf:\n                    dpca[c1][c2] = area(dpc[c1][c2])\n        \n        if DBG:\n            print(dpr)\n            print(dpc)\n            print(dpra)\n            print(dpca)\n        \n        # ---\n        # ---\n        # ---\n        for r1 in range(m - 2):\n            if dpra[0][r1] == 0: continue\n            for r2 in range(r1 + 1, m - 1):\n                mn = min(mn, mnf(dpra[0][r1], dpra[r1+1][r2], dpra[r2+1][-1]))\n        # | | | \n        for c1 in range(n - 2):\n            if dpca[0][c1] == 0: continue\n            for c2 in range(c1 + 1, n - 1):\n                mn = min(mn, mnf(dpca[0][c1], dpca[c1+1][c2], dpca[c2+1][-1]))\n        \n        return mn",
    "submit_ts": 1719114663.0
}