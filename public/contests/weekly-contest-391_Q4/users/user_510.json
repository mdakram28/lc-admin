{
    "username": "tr1ten",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def find(arr):\n            b,c = [],[]\n            for i in range(len(arr)):\n                b.append((arr[i][0]+arr[i][1],i))\n                c.append((arr[i][0]-arr[i][1],i))\n            b = sorted(b)\n            c = sorted(c)\n            if b[-1][0]-b[0][0] > c[-1][0] - c[0][0]:\n                return (b[-1][0]-b[0][0],b[-1][1],b[0][1])\n            return (c[-1][0]-c[0][0],c[-1][1],c[0][1])\n        val,a,b = find(points)\n        res = val\n        for i in [a,b]:\n            temp = points[:]\n            temp.pop(i)\n            # print(\"poping \",i,temp,find(temp))\n            res = min(res,find(temp)[0])\n        return res"
}