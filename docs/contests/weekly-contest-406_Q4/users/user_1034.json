{
    "username": "_amanpandey_",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    long long int res = 0;\n    sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n    long long int h = 1, v = 1;\n    int i = 0, j = 0;\n    m-=1;n-=1;\n    while (i < m && j < n)\n    {\n        if (horizontalCut[i] > verticalCut[j])\n        {\n            res += horizontalCut[i] * v;\n            h++;\n            i++;\n        }\n        else\n        {\n            res += verticalCut[j] * h;\n            v++;\n            j++;\n        }\n    }\n \n    long long int total = 0;\n    while (i < m)\n        total += horizontalCut[i++];\n    res += total * v;\n\n    total = 0;\n    while (j < n)\n        total += verticalCut[j++];\n    res += total * h;\n \n    return res;\n    }\n};",
    "submit_ts": "1720925715",
    "subm_id": "1320263816"
}