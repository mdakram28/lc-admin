{
    "username": "Ivan_len",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = 0;\n        for (auto i : edges) for (auto j : i) n = max(n, j);\n        n++;\n        vector<vector<int>> e(n);\n        for (auto i : edges) {\n            e[i[0]].push_back(i[1]);\n            e[i[1]].push_back(i[0]);\n        }\n        vector<int> dp(n), up(n);\n        auto dfs = [&](auto&& self, int u, int pre) ->void {\n            for (auto v : e[u]) {\n                if (v == pre) continue;\n                self(self, v, u);\n                int ext = 1;\n                if (v % 2 == 0) ext = 2;\n                dp[u] = max(dp[u], dp[v] + ext);\n            }\n        };\n        dfs(dfs, 0, -1);\n        auto dfs2 = [&](auto&& self, int u, int pre) -> void {\n            multiset<int> st;\n            for (auto v : e[u]) {\n                if (v == pre) continue;\n                int ext = 1;\n                if (v % 2 == 0) ext = 2;\n                st.insert(dp[v] + ext);\n            }\n            for (auto v : e[u]) {\n                if (v == pre) continue;\n                int ext = 1;\n                if (v % 2 == 0) ext = 2;\n                int ext2 = 1;\n                if (u % 2 == 0) ext2 = 2;\n                st.erase(st.find(dp[v] + ext));\n                up[v] = ((st.size())?(*st.rbegin()):0) + ext2;\n                up[v] = max(up[v], ext2 + up[u]);\n                self(self, v, u);\n                st.insert(dp[v] + ext);\n            }\n        };\n        dfs2(dfs2, 0, -1);\n        vector<int> ans(n);\n        for (int i = 0; i < n; i++) {\n            ans[i] = max(dp[i], up[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697429",
    "subm_id": "1343146266"
}