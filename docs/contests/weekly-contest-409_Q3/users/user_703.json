{
    "username": "Najmiddin1",
    "submission": "from collections import deque, defaultdict\nfrom typing import List\nimport bisect\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        answer = []\n        roads = defaultdict(int)\n        prev_ans = [n - 1]\n        start = []\n        def add_query_and_reurn_ans(i, j):\n            if roads[i]:\n                if j>roads[i]:\n                    idx = bisect.bisect_right(start, roads[i]-1)\n                    while idx < len(start) and start[idx]<j:\n                        prev_ans[0] += roads[start[idx]]-start[idx]-1\n\n                        del roads[start[idx]]\n                        start.pop(idx)\n                    prev_ans[0] -= (j-roads[i])\n                    roads[i]=j\n                return\n            else:\n                idx = bisect.bisect_right(start, i)\n                f = True\n\n                while len(start) > idx and start[idx]<j:\n                    prev_ans[0] += (roads[start[idx]]-start[idx] - 1)\n                    del roads[start[idx]]\n                    start.pop(idx)\n                    f = False\n                if f:\n                    idx = bisect.bisect_left(start, i) - 1\n                    if idx >= 0 and roads[start[idx]]>=j:\n                        pass\n                    else:\n                        roads[i]=j\n                        prev_ans[0]-=(j - i - 1)\n                        bisect.insort(start, i)\n\n                else:\n                    roads[i]=j\n                    prev_ans[0] -= (j - i - 1)\n\n                    bisect.insort(start, i)\n\n        for i, j in queries:\n            add_query_and_reurn_ans(i, j)\n            answer.append(prev_ans[0])\n        return answer",
    "submit_ts": "1722742451",
    "subm_id": "1343769276"
}