{
    "username": "leetcode_3604",
    "submission": "class Solution {\npublic:\n    \n    bool f[100010];\n    int GetDis(vector<vector<int>>& points) {\n        vector<pair<int, int>> a;\n        vector<pair<int, int>> b;\n        int n = points.size();\n        for(int i = 0; i < n; ++i) {\n            if(f[i]) continue;\n            a.push_back({points[i][0] + points[i][1], i});\n            b.push_back({points[i][0] - points[i][1], i});\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        int m = a.size();\n        int v = max(a[m-1].first - a[0].first, b[m-1].first - b[0].first);\n        return v;\n    }\n    \n    \n    \n    int minimumDistance(vector<vector<int>>& points) {\n        if (points.size() <= 2) return 0;\n        vector<pair<int, int>> a;\n        vector<pair<int, int>> b;\n        int n = points.size();\n        for(int i = 0; i < n; ++i) {\n            if(f[i]) continue;\n            a.push_back({points[i][0] + points[i][1], i});\n            b.push_back({points[i][0] - points[i][1], i});\n        }\n        int m = a.size();\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        memset(f, 0, sizeof(f));\n        \n        f[a[0].second] = 1;\n        int ans = GetDis(points);\n        f[a[0].second] = 0;\n        \n        f[a[m-1].second] = 1;\n        int tmp = GetDis(points);\n        f[a[m-1].second] = 0;\n        ans = min(ans, tmp);\n        \n        f[b[0].second] = 1;\n        tmp = GetDis(points);\n        f[b[0].second] = 0;\n        ans = min(ans, tmp);\n        \n        f[b[m-1].second] = 1;\n        tmp = GetDis(points);\n        f[b[m-1].second] = 0;\n        ans = min(ans, tmp);\n        return ans;\n    }\n};"
}