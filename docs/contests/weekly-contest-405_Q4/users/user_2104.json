{
    "username": "shankarlalb",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\nclass Solution {\npublic:\n    class Trie{\n        public:\n        struct Node{\n            vector<struct Node*>children;\n            ll n;\n            bool end = false;\n            ll cost = 1e9;\n            Node(ll n){\n                this->n = n;\n                children.assign(n,nullptr);\n            }\n        } typedef node;\n        ll nn;\n        node* root;\n            Trie(ll n){\n                this->nn = n;\n                root = new node(nn);\n            }\n            void insert(string s,ll cost){\n                ll n = s.size();\n                auto now = root;\n                for(ll i = 0;i<n;i++){\n                    if(now->children[s[i]-'a']==NULL){\n                        auto  tmp = new node(nn);\n                        now->children[s[i]-'a'] = tmp;\n                        now = tmp;\n                    }else{\n                        now = now->children[s[i]-'a'];\n                    }\n                }\n                now->end = true;\n                now->cost = min(now->cost,cost);\n            }\n            bool entire(string s){\n             ll n = s.size();\n             auto now = root;\n             for(ll i = 0;i<n;i++){\n                 if(now==nullptr){\n                     return false;\n                 }else{\n                     now = now->children[s[i]-'a'];\n                 }\n             }\n             if(now==NULL)return false;\n             return now->end;\n            }\n            pair<bool,node*> is_next(char c,node* now){\n                if(c=='?'){\n                    return {true,root};\n                }\n                if(now->children[c-'a']==NULL){\n                    return {false,nullptr};\n                }else{\n                    return {true,now->children[c-'a']};\n                }\n            }\n            bool is_ending_here(node* now){\n                return now->end;\n            }\n            ll partialLength(string s){\n                ll n = s.size();\n                auto now = root;\n                for(ll i = 0;i<n;i++){\n                    if(now==nullptr){\n                        return i+1;\n                    }else{\n                        now = now->children[s[i]-'a'];\n                    }\n                }\n                return n;\n            }\n    };\n    ll minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        ll n = target.size();\n        Trie t(26);\n        for(ll i = 0;i<words.size();i++){\n            t.insert(words[i],costs[i]);\n        }\n        vector<ll>dp(n+1,-1);\n        auto rec =[&](ll len,auto&&rec)->ll{\n            if(len==n)return 0;\n            if(len>n)return 1e9;\n            if(dp[len]!=-1)return dp[len];\n            ll ans = 1e9;\n            ll ind = len;\n            auto now = t.root;\n            for(ll i = ind;i<n;i++){\n                char c = target[i];\n                auto [ok,nxt] = t.is_next(c,now);\n                if(!ok)break;\n                now = nxt;\n                if(t.is_ending_here(now)){\n                    ans = min(ans,rec(len+i-ind+1,rec)+now->cost);\n                }\n            }\n            dp[len] = ans;\n            return ans;\n        };\n        ll ans = rec(0,rec);\n        if(ans>=1e9)return -1;\n        return ans;\n    }\n};",
    "submit_ts": "1720322641",
    "subm_id": "1312355291"
}