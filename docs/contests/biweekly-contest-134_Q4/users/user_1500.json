{
    "username": "henejlwzbsb",
    "submission": "class Solution {\n    fun countSubarrays(nums: IntArray, k: Int): Long {\n        val n = nums.size\n        var count: Long = 0\n        var prev = mutableMapOf<Long, Long>()\n\n        for (i in 0 until n) {\n            val curr = mutableMapOf<Long, Long>()\n\n            if (nums[i] == k) {\n                count++\n            }\n            curr[nums[i].toLong()] = 1\n\n            for (entry in prev) {\n                val (value, freq) = entry\n                val newAndResult = value and nums[i].toLong()\n                if (newAndResult == k.toLong()) {\n                    count += freq\n                }\n                curr[newAndResult] = curr.getOrDefault(newAndResult, 0) + freq\n            }\n\n            prev = curr\n        }\n\n        return count\n    }\n}\n",
    "submit_ts": "1720280041",
    "subm_id": "1311774727"
}