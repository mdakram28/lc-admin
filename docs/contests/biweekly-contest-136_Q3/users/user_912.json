{
    "username": "chubby3318077",
    "submission": "public class Solution {\n    public int MinFlips(int[][] grid) {\n        int m= grid.Length;\n        int n =grid[0].Length;\n        //corner\n        int ans = 0;\n        if(m%2==1 && n%2==1) ans += grid[m/2][n/2];//center = 0;\n        for(int i=0;i<m/2;i++)\n        {\n            for(int j=0;j<n/2;j++)\n            {\n                int count = \n                +grid[i][j]\n                +grid[m-1-i][j]\n                +grid[i][n-1-j]+grid[m-1-i][n-1-j];\n                //0 1 2 3 4 \n                ans += 2 - Math.Abs(count-2);\n            }\n        }\n\n        // min Line\n        int a1 = 0;//need flip\n        int ori1 = 0;\n        if(m%2==1)\n        {\n            int ii = m/2;\n            for(int j=0;j<n/2;j++)\n            {\n                ori1 += grid[ii][j]+grid[ii][n-j-1];\n                if(grid[ii][j]!=grid[ii][n-j-1]) a1++;\n            }\n        }\n        if(n%2==1)\n        {\n            int jj = n/2;\n            int a2=0; \n            for(int i=0; i<m/2; i++)\n            {\n                ori1+=grid[i][jj]+grid[m-i-1][jj];\n                if(grid[i][jj]!=grid[m-i-1][jj]) a1++;\n            }\n        }\n        ori1 = 2 - Math.Abs((ori1 % 4) -2);\n\n        return ans+Math.Max(ori1,a1);\n\n    }\n}",
    "submit_ts": "1722698371",
    "subm_id": "1343178559"
}