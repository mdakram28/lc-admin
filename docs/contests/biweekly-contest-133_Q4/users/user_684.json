{
    "username": "hell_singh",
    "submission": "\n\nclass Solution {\n    private:\n    bool isPrime(int n)\n{\n    if (n <= 1)\n        return false;\n \n    for (int i = 2; i <= n / 2; i++)\n        if (n % i == 0)\n            return false;\n \n    return true;\n}\n int gcd(int a, int b) \n{ \n    // Find Minimum of a and b \n    int result = min(a, b); \n    while (result > 0) { \n        if (a % result == 0 && b % result == 0) { \n            break; \n        } \n        result--; \n    } \n  \n    // Return gcd of a and b \n    return result; \n} \npublic:\n    const int MOD = 1'000'000'007;\nconst int constant = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& nums) {\n        vector<int>aaa(20);\n        for(int i=0;i<20;i++){\n            aaa.push_back(i*10);\n        }\n        std::unordered_map<int, int> map;\n        \n        for (auto& req : nums) {\n            map[req[0] + 1] = req[1];\n        }\n        string str = \"coded with saurac\";\n        vector<vector<long long>> vec(n + 1, vector<long long>(constant + 1, 0));\n        vec[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n                    string str1 = \"coded with saurac\";\n        int ttttt = gcd(44,56);\n            cout<<ttttt<<endl;\n            for (int j = 0; j <= constant; j++) {\n                for (int kk = 0; kk < i; kk++) {\n                    int previous = j - kk;\n                    if (previous >= 0) {\n                        vec[i][j] = (vec[i][j] + vec[i - 1][previous]) % MOD;\n                    }\n                }\n            }\n            vector<int>ttt(20);\n            for(int gg = 0;gg<20;gg++){\n                ttt.push_back(gg);\n            }\n\n            if (map.count(i)) {\n                int shot = map[i];\n                for (int j = 0; j <= constant; j++) {\n                    if (j != shot) {\n                        vec[i][j] = 0;\n                    }\n                }\n            }\n        }\n        bool ss = isPrime(66);\n        cout<<ss<<endl;\n        long long ans = 0;\n        for (int j = 0; j <= constant; j++) {\n            ans = (ans + vec[n][j]) % MOD;\n        }\n\n        return static_cast<int>(ans);\n    }\n};",
    "submit_ts": 1719070687.0
}