{
    "username": "Amrharb",
    "submission": "class segTree {\nprivate:\n    vector<int> seg;\n    int n;\n\n    int merge(int a, int b) {\n        return a + b;\n    }\n\n    void build(const vector<int>& v, int node, int start, int end) {\n        if (start == end) {\n            seg[node] = v[start];\n            return;\n        }\n        int mid = (start + end) / 2;\n        build(v, 2 * node, start, mid); // left child\n        build(v, 2 * node + 1, mid + 1, end); // right child\n        seg[node] = merge(seg[2 * node], seg[2 * node + 1]);\n    }\n\n    int get(int node, int start, int end, int l, int r) {\n        if (r < start || l > end) return 0;\n        if (l <= start && end <= r) return seg[node];\n        int mid = (start + end) / 2;\n        return merge(get(2 * node, start, mid, l, r), get(2 * node + 1, mid + 1, end, l, r));\n    }\n\n    void update(int node, int start, int end, int idx, int val) {\n        if (start == end) {\n            seg[node] = val;\n            return;\n        }\n        int mid = (start + end) / 2;\n        if (idx <= mid) update(2 * node, start, mid, idx, val);\n        else update(2 * node + 1, mid + 1, end, idx, val);\n        seg[node] = merge(seg[2 * node], seg[2 * node + 1]);\n    }\n\npublic:\n    segTree(const vector<int>& v) : n(v.size()) {\n        seg.resize(n<<2);\n        for(int i=1;i+1<n;i++)\n        {\n            if(v[i]>v[i-1]&&v[i]>v[i+1])\n                update(i,1);\n        }\n    }\n\n    int query(int l, int r) {\n        return get(1, 0, n - 1, l, r);\n    }\n\n    void update(int idx, int val) {\n        update(1, 0, n - 1, idx, val);\n    }\n};\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& q) {\n        segTree st(v);\n        vector<int>ans;\n        int n=v.size();\n        for(auto&it:q)\n        {\n            if(it[0]==1)\n            {\n                ans.push_back((it[1]+1>it[2]-1? 0:st.query(it[1]+1,it[2]-1)));\n            }\n            else\n            {\n                int i=it[1];\n                if(i>0&&i+1<n&&it[2]>v[i-1]&&i+1<n&&it[2]>v[i+1])\n                    st.update(i,1);\n                else\n                    st.update(i,0);\n                v[i]=it[2];\n                --i;\n                if(i>0&&i+1<n&&v[i]>v[i-1]&&i+1<n&&v[i]>v[i+1])\n                    st.update(i,1);\n                else\n                    st.update(i,0);\n                i+=2;\n                if(i>0&&i+1<n&&v[i]>v[i-1]&&i+1<n&&v[i]>v[i+1])\n                    st.update(i,1);\n                else\n                    st.update(i,0);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506397.0
}