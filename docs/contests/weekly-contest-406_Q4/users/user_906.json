{
    "username": "samsingh2004",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long , char>> v;\n        for(int i=0 ; i<horizontalCut.size() ; i++){\n            v.push_back({horizontalCut[i] , 'H'});\n        }\n        for(int i=0 ; i<verticalCut.size() ; i++){\n            v.push_back({verticalCut[i] , 'V'});\n        }\n        \n        //cout << \"Here\"\n        sort(v.rbegin() , v.rend());\n        \n        long long sum = 0;\n        long long vertical = 0;\n        long long horizontal = 0;\n        \n        for(int i=0 ; i<v.size() ; i++){\n            if(v[i].second == 'V'){\n                sum += (horizontal+1)*v[i].first;\n                vertical++;\n            }\n            else{\n                sum += (vertical+1)*v[i].first;\n                horizontal++;\n            }\n        }\n        \n        return sum;\n    }\n};",
    "submit_ts": "1720925325",
    "subm_id": "1320250833"
}