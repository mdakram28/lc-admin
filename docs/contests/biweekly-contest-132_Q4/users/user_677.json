{
    "username": "MakarenkoStepan",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        dp = [[1 for i in range(k + 1)] for j in range(len(nums))] # 1 for all\n        max_ind = [0 for i in range(k + 1)]\n        closest_same = dict()\n        closest_same[nums[0]] = 0\n        ans = 1\n        for i in range(1, len(nums)):\n            # for d_j in range(min(i, k+1)):\n            for m, j in enumerate(max_ind):\n                # for m in range(k + 1):\n                if nums[i] == nums[j]:\n                    dp[i][m] = max(dp[i][m], dp[j][m] + 1)\n                else:\n                    if m > 0:\n                        dp[i][m-1] = max(dp[i][m-1], dp[j][m] + 1)\n            if nums[i] in closest_same:\n                j = closest_same[nums[i]]\n                for m in range(k + 1):\n                    dp[i][m] = max(dp[i][m], dp[j][m] + 1)\n            closest_same[nums[i]] = i\n                \n            \n            for m in range(k + 1):\n                ans = max(ans, dp[i][m])\n                if dp[i][m] > dp[max_ind[m]][m]:\n                    max_ind[m] = i\n        return ans",
    "submit_ts": 1717861986.0
}