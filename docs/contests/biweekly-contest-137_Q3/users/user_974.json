{
    "username": "Anupam Shah",
    "submission": "class Solution {\npublic:\n    long long go(int ind, int c1, int c2, int c3, int& n, int& m, vector<vector<int>>& row, vector<vector<int>>& board, vector<vector<vector<vector<long long>>>>& dp) {\n        if(ind == n)\n            return (c3 == 1 ? 0 : -1e13);\n        \n        if(dp[ind][c1][c2][c3] != -1e13)    return dp[ind][c1][c2][c3];\n        \n        long long ans = -1e12;\n        for(int i = 0; i < row[ind].size(); i ++) {\n            if(c1 == m)     \n                ans = max(ans, board[ind][row[ind][i]] + go(ind+1, row[ind][i], c2, c3, n, m, row, board, dp));\n            else if(c2 == m and row[ind][i] != c1)\n                ans = max(ans, board[ind][row[ind][i]] + go(ind+1, c1, row[ind][i], c3, n, m, row, board, dp));\n            else if(c3 == 0 and row[ind][i] != c1 and row[ind][i] != c2)\n                ans = max(ans, board[ind][row[ind][i]] + go(ind+1, c1, c2, 1, n, m, row, board, dp));\n            \n            ans = max(ans, go(ind+1, c1, c2, c3, n, m, row, board, dp));\n        }\n        return dp[ind][c1][c2][c3] = ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        vector<vector<int>> row(n);\n        for(int i = 0; i < n; i ++) {\n            multiset<pair<int,int>> s;\n            for(int j = 0; j < m; j ++) {\n                s.insert({board[i][j], j});\n                if(s.size() > 3)    s.erase(s.begin());\n            }\n            auto it = s.begin();    auto it2 = it;  it2 ++;     auto it3 = it2; it3 ++;\n            //row[i] = {it3->second, it2->second, it->second};\n            row[i].push_back(it3->second);\n            row[i].push_back(it2->second);\n            row[i].push_back(it->second);\n            //cout << \"row\" << \" \"<< it3->second << \" \"<< it2->second << \" \"<< it->second << endl;\n        }\n    \n        vector<vector<vector<vector<long long>>>> dp(n, vector<vector<vector<long long>>> (m+1, vector<vector<long long>> (m+1, vector<long long> (2, -1e13))));\n        return go(0, m, m, 0, n, m, row, board, dp);\n    }\n};",
    "submit_ts": "1723909362",
    "subm_id": "1359189667"
}