{
    "username": "lydxlx",
    "submission": "import bisect\nfrom typing import *\nfrom functools import *\nfrom collections import namedtuple\nfrom sortedcontainers import SortedList, SortedDict\nfrom collections import Counter\nfrom math import inf\nfrom math import gcd\nimport string\nimport random\nimport itertools\nimport random\n\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n\n        @cache\n        def easyVersion(x, xx, y, yy):\n            X = []\n            Y = []\n            for i in range(x, xx + 1):\n                for j in range(y, yy + 1):\n                    if grid[i][j] == 1:\n                        X.append(i)\n                        Y.append(j)\n            return (max(X) - min(X) + 1) * (max(Y) - min(Y) + 1) if X and Y else inf\n\n        @cache\n        def f(x, xx, y, yy, cnt):\n            if x > xx or y > yy:\n                return inf\n\n            if cnt == 1:\n                return easyVersion(x, xx, y, yy)\n            elif cnt == 2:\n                res = inf\n                for i in range(x, xx):\n                    res = min(res, f(x, i, y, yy, 1) + f(i + 1, xx, y, yy, 1))\n                for j in range(y, yy):\n                    res = min(res, f(x, xx, y, j, 1) + f(x, xx, j + 1, yy, 1))\n                return res\n\n            else:\n                res = inf\n                for i in range(x, xx):\n                    res = min(res, f(x, i, y, yy, 1) + f(i + 1, xx, y, yy, 2))\n                    res = min(res, f(x, i, y, yy, 2) + f(i + 1, xx, y, yy, 1))\n                for j in range(y, yy):\n                    res = min(res, f(x, xx, y, j, 1) + f(x, xx, j + 1, yy, 2))\n                    res = min(res, f(x, xx, y, j, 2) + f(x, xx, j + 1, yy, 1))\n                return res\n\n        R, C = len(grid), len(grid[0])\n        return f(0, R - 1, 0, C - 1, 3)\n\n\nsolution = Solution()\nprint(solution.minimumSum(grid=[[1, 0, 1], [1, 1, 1]]))\nprint(solution.minimumSum(grid=[[1, 0, 1, 0], [0, 1, 0, 1]]))\nprint(solution.minimumSum(grid=[[1, 1, 1]]))\n",
    "submit_ts": 1719111706.0
}