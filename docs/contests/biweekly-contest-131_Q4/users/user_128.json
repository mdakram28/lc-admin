{
    "username": "WindLY2003",
    "submission": "class Solution {\n    public List<Boolean> getResults(int[][] queries) {\n        List<Boolean> ans = new ArrayList<>();\n        TreeSet<Integer> set = new TreeSet<>();\n        set.add(0);\n        int n = (int) 1e4 * 5;\n        int[] tree = new int[n * 4 + 50];\n        for (int[] a: queries) {\n            if (a[0] == 1) {\n                int x = a[1];\n                int low = set.lower(x);\n                update(tree, 1, x - low, low, low, 0, n);\n                if (set.higher(x) != null) {\n                    int high = set.higher(x);\n                    update(tree, 1, high - x, x, x, 0, n);\n                }\n                set.add(a[1]);\n            } else {\n                int x = a[1], s = a[2];\n                int low = set.lower(x);\n                int max = x - low;\n                max = Math.max(max, find(tree, 1, 0, low - 1, 0, n));\n                ans.add(max >= s);\n            }\n        }\n        return ans;\n    }\n    static void update(int[] tree, int p, int k, int l, int r, int ll, int rr) { // \u65e0\u61d2\u6807\u8bb0\uff0c\u533a\u95f4\uff08\u5355\u70b9\uff09\u66f4\u65b0\n        int mm = ll + rr >> 1;\n        if (l == ll && r == rr) {\n            tree[p] = k;\n            return;\n        }\n        if (l >= mm + 1) { // \u53ea\u5728\u53f3\u8fb9\n            update(tree, p << 1 | 1, k, l, r, mm + 1, rr);\n        } else if (r <= mm) { // \u53ea\u5728\u5de6\u8fb9\n            update(tree, p << 1, k, l, r, ll, mm);\n        } else { // \u5728\u4e24\u8fb9\uff0cll - mm  mm+1 -- rr\n            update(tree, p << 1, k, l, mm, ll, mm);\n            update(tree, p << 1 | 1, k, mm + 1, r, mm + 1, rr);\n        }\n        tree[p] = Math.max(tree[p << 1], tree[p << 1 | 1]);\n    }\n    static int find(int[] tree, int p, int l, int r, int ll, int rr) { // \u533a\u95f4\u67e5\u8be2\n        if (l > r) return 0; \n        int mm = ll + rr >> 1;\n        if (l == ll && r == rr) return tree[p];\n        if (l >= mm + 1) { // \u53ea\u5728\u53f3\u8fb9\n            return find(tree, p << 1 | 1, l, r, mm + 1, rr);\n        } else if (r <= mm) { // \u53ea\u5728\u5de6\u8fb9\n            return find(tree, p << 1, l, r, ll, mm);\n        } else { // \u5728\u4e24\u8fb9\uff0cll - mm  mm+1 -- rr\n            return Math.max(find(tree, p << 1, l, mm, ll, mm), find(tree, p << 1 | 1, mm + 1, r, mm + 1, rr));\n        }\n    }\n}",
    "submit_ts": 1716649715.0
}