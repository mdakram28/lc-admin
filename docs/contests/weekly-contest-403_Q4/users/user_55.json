{
    "username": "heal",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        auto calc = [&](int xl, int xr, int yl, int yr) {\n            int x1 = xr + 1, x2 = xl - 1, y1 = yr + 1, y2 = yl - 1;\n            for (int i = xl; i <= xr; i++)\n                for (int j = yl; j <= yr; j++) if (grid[i][j]) {\n                    x1 = min(x1, i);\n                    x2 = max(x2, i);\n                    y1 = min(y1, j);\n                    y2 = max(y2, j);\n                }\n            return x1 <= x2? (x2 - x1 + 1) * (y2 - y1 + 1): 0;\n        };\n        int ret = n * m;\n        if (n >= 3) {\n            for (int i = 0; i + 1 < n; i++)\n                for (int j = i + 1; j + 1 < n; j++)\n                    ret = min(ret, calc(0, i, 0, m - 1)\n                                 + calc(i + 1, j, 0, m - 1)\n                                 + calc(j + 1, n - 1, 0, m - 1));\n        }\n        if (m >= 3) {\n            for (int i = 0; i + 1 < m; i++)\n                for (int j = i + 1; j + 1 < m; j++)\n                    ret = min(ret, calc(0, n - 1, 0, i)\n                                 + calc(0, n - 1, i + 1, j)\n                                 + calc(0, n - 1, j + 1, m - 1));\n        }\n        if (n >= 2) {\n            for (int i = 0; i + 1 < n; i++)\n                for (int j = 0; j + 1 < m; j++) {\n                    ret = min(ret, calc(0, i, 0, j)\n                                 + calc(0, i, j + 1, m - 1)\n                                 + calc(i + 1, n - 1, 0, m - 1));\n                    ret = min(ret, calc(0, i, 0, m - 1)\n                                 + calc(i + 1, n - 1, 0, j)\n                                 + calc(i + 1, n - 1, j + 1, m - 1));\n                }\n        }\n        if (m >= 2) {\n            for (int j = 0; j + 1 < m; j++)\n                for (int i = 0; i + 1 < n; i++) {\n                    ret = min(ret, calc(0, n - 1, 0, j)\n                                 + calc(0, i, j + 1, m - 1)\n                                 + calc(i + 1, n - 1, j + 1, m - 1));\n                    ret = min(ret, calc(0, i, 0, j)\n                                 + calc(i + 1, n - 1, 0, j)\n                                 + calc(0, n - 1, j + 1, m - 1));\n                }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1719111383.0
}