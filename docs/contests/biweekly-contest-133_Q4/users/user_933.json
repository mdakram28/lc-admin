{
    "username": "lovishdak",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& arr) {\n        long long count = 0;\n        unordered_map<int, int> m;\n        for (auto i:arr) {\n            m[i[0]+1]=i[1];\n        }\n        \n        int maxi = 400;\n        int mod = 1000000007;\n        \n        vector<vector<long long>> dp(n+1,vector<long long>(maxi+1,0));\n        dp[0][0] = 1;\n\n        for (int i=1; i<=n; i++) {\n            for (int j=0; j<=i*(i-1)/2 && j<=maxi; j++) {\n                for (int k=0; k<i; k++) {\n                    int prev = j-k;\n                    if (prev >= 0)\n                        dp[i][j] = (dp[i][j] + dp[i - 1][prev]) % mod;\n                }\n            }\n\n            if (m.find(i)!=m.end()) {\n                int temp = m[i];\n                for (int j = 0; j <= i * (i - 1) / 2 && j <= maxi; j++) {\n                    if (j != temp)\n                        dp[i][j] = 0;\n                }\n            }\n        }\n        for (int i=0; i<=maxi; i++) {\n            count = (count + dp[n][i]) % mod;\n        }\n        \n        int final_ans = (int) count;\n        return final_ans;\n    }\n};",
    "submit_ts": 1719071583.0
}