{
    "username": "AlexthePear",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        long long vert_cut = 0;\n        long long horz_cut = 0;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        long long h_idx= horizontalCut.size() - 1;\n        long long v_idx= verticalCut.size() - 1;\n        while(v_idx >= 0 && h_idx >= 0) {\n            if(verticalCut[v_idx] > horizontalCut[h_idx]) {\n                vert_cut++;\n                ans += verticalCut[v_idx] * (horz_cut + 1);\n                v_idx--;\n            } else {\n                horz_cut++;\n                ans += horizontalCut[h_idx] * (vert_cut + 1);\n                h_idx--;\n            }\n        }\n        while(h_idx >= 0) {\n            ans += horizontalCut[h_idx] * (vert_cut + 1);\n            h_idx--;\n        }\n        while(v_idx >= 0) {\n            ans += verticalCut[v_idx] * (horz_cut + 1);\n            v_idx--;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925913",
    "subm_id": "1320270161"
}