{
    "username": "mrn3088",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> A, B, C, D;\n        int n = points.size();\n        for (int i = 0; i < points.size(); i++) {\n            A.emplace_back(points[i][0] - points[i][1], i);\n            B.emplace_back(points[i][0] + points[i][1], i);\n            C.emplace_back(- points[i][0] + points[i][1], i);\n            D.emplace_back(- points[i][0] - points[i][1], i);\n        }\n        sort(A.begin(), A.end());\n        sort(B.begin(), B.end());\n        sort(C.begin(), C.end());\n        sort(D.begin(), D.end());\n        unordered_map<int, vector<int>> mp;\n        for (int i = 0; i < A.size(); i++) {\n            mp[A[i].second].push_back(i);\n        }\n        for (int i = 0; i < B.size(); i++) {\n            mp[B[i].second].push_back(i);\n        }\n        for (int i = 0; i < C.size(); i++) {\n            mp[C[i].second].push_back(i);\n        }\n        for (int i = 0; i < D.size(); i++) {\n            mp[D[i].second].push_back(i);\n        }\n        int res = INT_MAX;\n        for (int i = 0; i < points.size(); i++) {\n            // remove i\n            auto removed_index = mp[i];\n            int A_max = removed_index[0] == n - 1 ? A[n - 2].first : A[n - 1].first;\n            int B_max = removed_index[1] == n - 1 ? B[n - 2].first : B[n - 1].first;\n            int C_max = removed_index[2] == n - 1 ? C[n - 2].first : C[n - 1].first;\n            int D_max = removed_index[3] == n - 1 ? D[n - 2].first : D[n - 1].first;\n            int A_min = removed_index[0] == 0 ? A[1].first : A[0].first;\n            int B_min = removed_index[1] == 0 ? B[1].first : B[0].first;\n            int C_min = removed_index[2] == 0 ? C[1].first : C[0].first;\n            int D_min = removed_index[3] == 0 ? D[1].first : D[0].first;\n            int tmp_res = max(A_max - A_min, B_max - B_min);\n            tmp_res = max(tmp_res, C_max - C_min);\n            tmp_res = max(tmp_res, D_max - D_min);\n            res = min(res, tmp_res);\n        }\n        return res;\n    }\n};"
}