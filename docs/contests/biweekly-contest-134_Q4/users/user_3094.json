{
    "username": "bipul_dikshit",
    "submission": "class SparseTableAnd:\n    def __init__(self, arr):\n        self.n = len(arr)\n        self.max_log = (self.n - 1).bit_length()\n        self.table = [[0] * self.max_log for _ in range(self.n)]\n        self.log = [0] * (self.n + 1)\n\n        for i in range(2, self.n + 1):\n            self.log[i] = self.log[i // 2] + 1\n\n        for i in range(self.n):\n            self.table[i][0] = arr[i]\n\n        for j in range(1, self.max_log):\n            for i in range(self.n - (1 << j) + 1):\n                self.table[i][j] = self.table[i][j - 1] & self.table[i + (1 << (j - 1))][j - 1]\n\n    def query(self, l, r):\n        j = self.log[r - l + 1]\n        return self.table[l][j] & self.table[r - (1 << j) + 1][j]\n\n\nclass Solution:\n    def countSubarrays(self, nums, k):\n        sparse_table = SparseTableAnd(nums)\n        result = 0\n        n = len(nums)\n\n        for i in range(n):\n            left, right = i, n - 1\n            first, last = -1, -2\n\n            # Find the first subarray that matches the condition\n            while left <= right:\n                mid = left + (right - left) // 2\n                val = sparse_table.query(i, mid)\n\n                if val == k:\n                    first = mid\n                    right = mid - 1\n                elif val > k:\n                    left = mid + 1\n                else:\n                    right = mid - 1\n\n            left, right = i, n - 1\n\n            # Find the last subarray that matches the condition\n            while left <= right:\n                mid = left + (right - left) // 2\n                val = sparse_table.query(i, mid)\n\n                if val == k:\n                    last = mid\n                    left = mid + 1\n                elif val > k:\n                    left = mid + 1\n                else:\n                    right = mid - 1\n\n            if first != -1 and last != -2:\n                result += (last - first + 1)\n\n        return result",
    "submit_ts": "1720279650",
    "subm_id": "1311759698"
}