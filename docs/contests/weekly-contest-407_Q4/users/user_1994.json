{
    "username": "Nabarun_Mukherjee",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<long long> diff(n);\n        for(int i = 0; i < n; i++) {\n             diff[i] = static_cast<long long>(target[i]) - nums[i]; \n        }\n        int i = 1;\n        long long ans = abs(diff[0]); \n        long long prev = diff[0]; \n        while(i < n) {\n            if(diff[i] == 0) {\n                i++;\n                prev = 0;\n                continue;\n            }\n            if(diff[i] > 0) {\n                if(prev >= 0) {\n                    if(diff[i] > prev) {\n                        ans += (diff[i] - prev);\n                        prev = diff[i];\n                    } else {\n                        prev = diff[i];\n                    }\n                } else {\n                    ans += diff[i];\n                    prev = diff[i];\n                }\n                i++;\n            } else {\n                if(prev > 0) {\n                    ans += abs(diff[i]);\n                    prev = diff[i];\n                } else {\n                    if(diff[i] < prev) {\n                        ans += (abs(diff[i]) - abs(prev));\n                        prev = diff[i];\n                    } else {\n                        prev = diff[i];\n                    }\n                }\n                i++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533251",
    "subm_id": "1328004791"
}