{
    "username": "VILLANOVA_ECON",
    "submission": "\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        \n        target = [0]*32\n        for j in range(32):\n            if ((1<<j)&k):\n                target[j] = 1\n        #print(target)\n        i = 0\n        \n        dp = [math.inf]*32\n        \n        \n        last_point = None\n        ans = 0\n        curr_value = -1\n        while i < len(nums):\n            x = nums[i]\n            condition = True\n            \n            if x&k != k:\n                curr_value = -1\n                last_point = None\n                dp = [math.inf]*32\n                j = None\n            elif curr_value == -1:\n                curr_value = x\n                last_point = i\n                j = i\n            else:\n                curr_value = curr_value&x\n                \n                \n            if curr_value != -1:\n                for g in range(32):\n                    if (x & (1<<g)) == 0 and (k & (1<<g)) == 0:\n                        dp[g] = i\n                    elif (k & (1<<g)) == 1:\n                        dp[g] = math.inf\n            \n            curr_max = min(dp)\n            #print(curr_value,last_point,curr_max,dp)\n            if last_point is not None and curr_value == k:\n                ans += (curr_max-last_point+1) \n            #print('ans',ans)\n            i += 1\n        return ans",
    "submit_ts": "1720279087",
    "subm_id": "1311736835"
}