{
    "username": "Darshil_Thakkar",
    "submission": "class Solution {\npublic:\n    int func(int index, int flag, int jump, int k, map<tuple<int, int, int>, int> &mp)\n    {\n        if(index - 1 > k) return 0;\n        \n        if(mp.find({index, flag, jump}) != mp.end()) return mp[{index, flag, jump}];\n        int op1 = 0, op2 = 0;\n        \n        if(index == k)\n        {\n            if(!flag && index >= 1) op1 = func(index - 1, 1, jump, k, mp);\n            op2 = func(index + pow(2, jump), 0, jump + 1, k, mp);\n            op1++;\n        }\n        else\n        {\n            if(!flag && index >= 1) op1 = func(index - 1, 1, jump, k, mp);\n            op2 = func(index + pow(2, jump), 0, jump + 1, k, mp);\n        }\n        \n    \n        return mp[{index, flag, jump}] = (op1 + op2);\n    }\n    int waysToReachStair(int k) {\n        map<tuple<int, int, int>, int> mp;\n        return func(1, 0, 0, k, mp);\n    }\n};",
    "submit_ts": "1716089116",
    "subm_id": "1261833519"
}