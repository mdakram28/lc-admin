{
    "username": "park6",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        flips = ones = ans = 0\n        n, m = len(grid), len(grid[0])\n        for i in range((n+1)//2):\n            for j in range((m+1)//2):\n                if i == n-1-i and j == m-1-j:\n                    ones += grid[i][j]\n                elif i == n-1-i:\n                    if grid[i][j] != grid[i][m-1-j]:\n                        flips += 1\n                        ans += 1\n                    else:\n                        ones += 2*grid[i][j]\n                elif j == m-1-j:\n                    if grid[i][j] != grid[n-1-i][j]:\n                        flips += 1\n                        ans += 1\n                    else:\n                        ones += 2*grid[i][j]\n                else:\n                    cnt = 0\n                    cnt = grid[i][j]+grid[i][m-1-j]+grid[n-1-i][j]+grid[n-1-i][m-1-j]\n                    ans += min(cnt,4-cnt)\n        ones %= 4\n        if flips > 0:\n            ones = min(ones,(ones+2)%4)\n        ans += ones\n        return ans\n",
    "submit_ts": "1722697405",
    "subm_id": "552265964"
}