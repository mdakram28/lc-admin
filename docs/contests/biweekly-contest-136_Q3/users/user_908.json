{
    "username": "Quar",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ret = 0\n        \n        nrow, ncol = len(grid), len(grid[0])\n        \n        for ir in range(nrow // 2):\n            for ic in range(ncol // 2):\n                rir = nrow - 1 - ir\n                ric = ncol - 1 - ic\n                base = grid[ir][ic] + grid[rir][ic] + grid[ir][ric] + grid[rir][ric]\n                ret += min(base, 4 - base)\n\n        pair_01 = 0\n        pair_11 = 0                \n        \n        if nrow % 2 == 1:\n            ir = nrow // 2\n            for ic in range(ncol // 2):\n                s = grid[ir][ic] + grid[ir][ncol - 1 - ic]\n                if s == 1:\n                    pair_01 += 1\n                elif s == 2:\n                    pair_11 += 1\n        \n        if ncol % 2 == 1:\n            ic = ncol // 2\n            for ir in range(nrow // 2):\n                s = grid[ir][ic] + grid[nrow - 1 - ir][ic]\n                if s == 1:\n                    pair_01 += 1\n                elif s == 2:\n                    pair_11 += 1\n        \n        if ncol % 2 == nrow % 2 == 1:\n            ret += grid[nrow // 2][ncol // 2]\n        \n        if pair_11 % 2 == 0:\n            return ret + pair_01\n        else:\n            if pair_01 > 0:\n                return ret + pair_01\n            else:\n                return ret + 2\n        ",
    "submit_ts": "1722698359",
    "subm_id": "1343178133"
}