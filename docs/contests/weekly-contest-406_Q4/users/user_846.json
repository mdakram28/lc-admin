{
    "username": "hardik_leet16",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int hcnt = 1, vcnt = 1;\n        int i = 0, j = 0;\n        long long ans = 0;\n        while (i < m - 1 && j < n - 1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += hcnt * horizontalCut[i];\n                i++;\n                vcnt++;\n            }\n            else {\n                ans += vcnt * verticalCut[j];\n                j++;\n                hcnt++;\n            }\n        }\n        while (i < m - 1) {\n            ans += hcnt * horizontalCut[i];\n            i++;\n            vcnt++;\n        }\n        while (j < n - 1) {\n            ans += vcnt * verticalCut[j];\n            j++;\n            hcnt++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925584",
    "subm_id": "1320259608"
}