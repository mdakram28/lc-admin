{
    "username": "yfnijm",
    "submission": "class Solution {\n    vector<vector<int>> grid;\n    int countSize(int i1, int i2, int j1, int j2) {\n        int flag = 0, minx = INT_MAX, maxx = INT_MIN, miny = INT_MAX, maxy = INT_MIN;\n        for(int i = i1; i < i2; i++) {\n            for(int j = j1; j < j2; j++) {\n                if(!grid[i][j]) continue;\n                flag = 1;\n                minx = min(minx, i);\n                maxx = max(maxx, i);\n                miny = min(miny, j);\n                maxy = max(maxy, j);\n            }\n        }\n        return flag ? (maxx-minx+1) * (maxy-miny+1) : 0;\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        this->grid = grid;\n        int m = grid.size(), n = grid[0].size();\n        int res = INT_MAX;\n        for(int i = 0; i <= m; i++) {\n            for(int j = 0; j <= n; j++) {\n                res = min(res, countSize(0, i, 0, n) + countSize(i, m, 0, j) + countSize(i, m, j, n));\n                res = min(res, countSize(i, m, 0, n) + countSize(0, i, 0, j) + countSize(0, i, j, n));\n                res = min(res, countSize(0, m, 0, j) + countSize(0, i, j, n) + countSize(i, m, j, n));\n                res = min(res, countSize(0, m, j, n) + countSize(0, i, 0, j) + countSize(i, m, 0, j));\n            }\n        }\n        for(int i = 0; i <= m; i++)\n            for(int j = i; j <= m; j++)\n                res = min(res, countSize(0, i, 0, n) + countSize(i, j, 0, n) + countSize(j, m, 0, n));\n        for(int i = 0; i <= n; i++)\n            for(int j = i; j <= n; j++)\n                res = min(res, countSize(0, m, 0, i) + countSize(0, m, i, j) + countSize(0, m, j, n));\n        \n        return res;\n    }\n};",
    "submit_ts": "1719114747",
    "subm_id": "1297353128"
}