{
    "username": "nutribar",
    "submission": "class Solution {\npublic:\n\n    int mod = 1e9 + 7;\n    int findWays(int ind, int prevArr1, int prevArr2, vector<int>&nums, vector<vector<vector<int>>>&dp){\n        if(ind == 0){\n            return 1;\n        }\n\n        if(dp[ind][prevArr1][prevArr2]!=-1){\n            return dp[ind][prevArr1][prevArr2];\n        }\n\n        int ans = 0;\n        // i = value we give to curVal @ Arr1\n        for(int i = 0 ; i <= 50; i++){\n            if( i <= prevArr1 && nums[ind-1] - i >=0 && nums[ind-1] -i >= prevArr2){\n                int val  = findWays(ind-1, i, nums[ind-1] - i, nums,dp);\n                ans = (ans%mod + val%mod)%mod;\n            }\n        }\n\n        return dp[ind][prevArr1][prevArr2] = ans;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n\n        vector<vector<vector<int>>>dp(n+1, vector<vector<int>>(51, vector<int>(51,-1)));\n        int ans = findWays(n, 50, 0, nums,dp);\n\n        return ans;\n    }\n};",
    "submit_ts": "1723345501",
    "subm_id": "1351557168"
}