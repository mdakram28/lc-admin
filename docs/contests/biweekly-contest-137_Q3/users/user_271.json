{
    "username": "Ryan Zhang",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        const long long ninf = -1e15;\n        long long ans = ninf;\n        const int ninfi = -2e9;\n        vector<long long> prev1(n, ninf);\n        vector<vector<long long>> prev2(n, vector<long long>(n, ninf));\n        vector<long long> dp1(n, ninf);\n        for(int i = 0; i < n; ++i) {\n            prev1[i] = board[0][i];\n        }\n        for(int k = 1; k < m; ++k) {\n            int b1 = ninfi, b2 = ninfi, b3 = ninfi, b1i = -1, b2i = -1;\n            for(int i = 0; i < n; ++i) {\n                if(board[k][i] > b1) b3 = b2, b2 = b1, b2i = b1i, b1 = board[k][i], b1i = i;\n                else if(board[k][i] > b2) b3 = b2, b2 = board[k][i], b2i = i;\n                else if(board[k][i] > b3) b3 = board[k][i];\n            }\n            for(int i = 0; i < n; ++i) {\n                for(int j = i+1; j < n; ++j) { \n                    if((i == b1i && j == b2i) || (i == b2i && j == b1i)) {\n                        ans = max(ans, b3 + prev2[i][j]);\n                    } else if(i == b1i || j == b1i) {\n                        ans = max(ans, b2 + prev2[i][j]);\n                    } else {\n                        ans = max(ans, b1 + prev2[i][j]);\n                    }\n                    prev2[i][j] = max(prev2[i][j], max(board[k][i] + prev1[j], prev1[i] + board[k][j]));\n                }\n            }\n            for(int i = 0; i < n; ++i) {\n                prev1[i] = max(prev1[i], 1LL*board[k][i]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909251",
    "subm_id": "1359185358"
}