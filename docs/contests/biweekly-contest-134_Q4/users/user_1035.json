{
    "username": "saikrishna17394",
    "submission": "class Solution {\n    void getVector(int num, vector<int>& ret) {\n\n        for (int i = 0; i < 31; i++) {\n            ret[i] = num & 1;\n            num /= 2;\n        }\n\n        return;\n    }\n\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<int> last_zero(31, -1);\n        int len = nums.size();\n        long long ans = 0;\n        vector<int> k_v(31);\n        getVector(k, k_v);\n        vector<int> cur_v(31);\n        int min_idx, max_idx;\n\n        for (int i = 0; i < len; i++) {\n            getVector(nums[i], cur_v);\n            min_idx = 0;\n            max_idx = i;\n            bool ok = true;\n\n            for (int j = 0; j < 31; j++) {\n                if (cur_v[j] == 0) {\n                    last_zero[j] = i;\n                    if (k_v[j] == 1) {\n                        ok = false;\n                    }\n                    continue;\n                }\n\n                if (k_v[j] == 1) { // k - 1, cur - 1\n                    min_idx = max(min_idx, last_zero[j] + 1);\n                    continue;\n                }\n\n                // k - 0, cur - 1\n                if (last_zero[j] == -1) {\n                    ok = false;\n                    continue;\n                }\n\n                max_idx = min(max_idx, last_zero[j]);\n            }\n\n            if (ok and max_idx >= min_idx) {\n                ans += (long long) (max_idx - min_idx + 1); \n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720280361",
    "subm_id": "1311786490"
}