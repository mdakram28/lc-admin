{
    "username": "uwi",
    "submission": "\tclass Solution {\n\t\tpublic long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n\t\t\tint n = s.length();\n\t\t\tint[] reach = new int[n];\n\t\t\tint p = n;\n\t\t\tint[] f = new int[2];\n\t\t\tfor(int i = n-1;i >= 0;i--){\n\t\t\t\tf[s.charAt(i)-'0']++;\n\t\t\t\twhile(f[0] > k && f[1] > k){\n\t\t\t\t\tf[s.charAt(--p)-'0']--;\n\t\t\t\t}\n\t\t\t\treach[i] = p;\n\t\t\t}\n\t\t\tlong[] cum = new long[n+1];\n\t\t\tfor(int i = 0;i < n;i++){\n\t\t\t\tcum[i+1] = cum[i] + reach[i];\n\t\t\t}\n\n\t\t\tlong[] ret = new long[queries.length];\n\t\t\tfor(int z = 0;z < queries.length;z++) {\n\t\t\t\tint[] q = queries[z];\n\t\t\t\tq[1]++;\n\t\t\t\tint lb = Math.max(q[0], lowerBound(reach, q[1]));\n\t\t\t\tlong sum = (long)q[1] * (q[1] - lb) + cum[lb] - cum[q[0]] - (long)q[1] * (q[1] - 1) / 2 + (long)q[0] * (q[0] - 1) / 2;\n\t\t\t\tret[z] = sum;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic static int lowerBound(int[] a, int v){ return lowerBound(a, 0, a.length, v); }\n\t\tpublic static int lowerBound(int[] a, int l, int r, int v)\n\t\t{\n\t\t\tif(l > r || l < 0 || r > a.length)throw new IllegalArgumentException();\n\t\t\tint low = l-1, high = r;\n\t\t\twhile(high-low > 1){\n\t\t\t\tint h = high+low>>>1;\n\t\t\t\tif(a[h] >= v){\n\t\t\t\t\thigh = h;\n\t\t\t\t}else{\n\t\t\t\t\tlow = h;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn high;\n\t\t}\n\t}\n",
    "submit_ts": "1723949892",
    "subm_id": "1359731715"
}