{
    "username": "LastToAC",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nclass Solution {\n   public:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        vector<vector<int>> runs;\n        int n = a.size();\n        vector<int> curr;\n        for (int i = 0; i < n; i++) {\n            if (curr.empty()) {\n                curr.push_back(a[i]);\n            } else {\n                if (curr.back() != a[i]) {\n                    curr.push_back(a[i]);\n                } else {\n                    runs.push_back(curr);\n                    curr.clear();\n                    curr.push_back(a[i]);\n                }\n            }\n        }\n        runs.push_back(curr);\n        int ans = 0;\n        if (runs.size() == 1) {\n            if (n % 2 == 1) {\n                return n - k + 1;\n            } else {\n                return n;\n            }\n        } else {\n            if (a.back() != a.front()) {\n                int len = runs.size();\n                int first = runs.front().size() + runs.back().size();\n                ans += max(first - k + 1, 0);\n                for (int i = 1; i < len - 1; i++) {\n                    ans += max((int)runs[i].size() - k + 1, 0);\n                }\n            } else {\n                for (auto& v : runs) {\n                    ans += max((int)v.size() - k + 1, 0);\n                }\n            }\n        }\n        return ans;\n    }\n};\n// 1 0 1 0 1 0\n",
    "submit_ts": "1720277861",
    "subm_id": "1311683452"
}