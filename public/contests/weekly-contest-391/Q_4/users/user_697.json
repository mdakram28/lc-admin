{
    "username": "Kushal47",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        // int minSum = INT_MAX, minDiff = INT_MAX, maxSum = INT_MIN, maxDiff = INT_MIN;\n        priority_queue<pair<int, int>> maxSum, maxDiff;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> minSum, minDiff;\n        for(int i = 0; i < points.size(); i++){\n            int x = points[i][0], y = points[i][1];\n            maxSum.push({x+y, i});\n            minSum.push({x+y, i});\n            minDiff.push({x-y, i});\n            maxDiff.push({x-y, i});\n        }\n        int ans = INT_MAX;\n        for(int i = 0; i < points.size(); i++){\n            while(maxSum.top().second == i){\n                maxSum.pop();\n            }\n            while(minSum.top().second == i){\n                minSum.pop();\n            }\n            while(maxDiff.top().second == i){\n                maxDiff.pop();\n            }\n            while(minDiff.top().second == i){\n                minDiff.pop();\n            }\n            ans = min(ans, max(maxSum.top().first-minSum.top().first, maxDiff.top().first-minDiff.top().first));\n            int x = points[i][0], y = points[i][1];\n            maxSum.push({x+y, i});\n            minSum.push({x+y, i});\n            minDiff.push({x-y, i});\n            maxDiff.push({x-y, i});\n            \n        }\n        return ans;\n    }\n};"
}