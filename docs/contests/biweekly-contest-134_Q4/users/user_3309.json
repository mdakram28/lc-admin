{
    "username": "aryan32134",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long count = 0;\n\n        Map<Long, Long> pr = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> cur = new HashMap<>();\n\n            if (nums[i] == k) {\n                ++count;\n            }\n            cur.put((long) nums[i], 1L);\n\n            for (Map.Entry<Long, Long> entry : pr.entrySet()) {\n                long val = entry.getKey();\n                long freq = entry.getValue();\n                long newResult = val & nums[i];\n                if (newResult == k) {\n                    count += freq;\n                }\n                cur.put(newResult, cur.getOrDefault(newResult, 0L) + freq);\n            }\n\n            pr = cur;\n        }\n\n        return count;\n    }\n}",
    "submit_ts": "1720281224",
    "subm_id": "1311817470"
}