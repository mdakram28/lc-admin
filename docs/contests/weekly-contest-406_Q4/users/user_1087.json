{
    "username": "kartikdevsharmaa",
    "submission": "from typing import List\nimport heapq\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCutCosts: List[int], verticalCutCosts: List[int]) -> int:\n       \n        maxHeap = [(-cost, 'h') for cost in horizontalCutCosts] + [(-cost, 'v') for cost in verticalCutCosts]\n        heapq.heapify(maxHeap)\n        \n        total_cost = 0\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        \n        \n        while maxHeap:\n            cost, cut_type = heapq.heappop(maxHeap)\n            cost = -cost\n            \n            if cut_type == 'h':\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n            else:\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n        \n        return total_cost\n",
    "submit_ts": "1720925754",
    "subm_id": "1320265106"
}