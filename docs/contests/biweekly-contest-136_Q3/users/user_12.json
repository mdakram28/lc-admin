{
    "username": "jonathanirvings",
    "submission": "//start of jonathanirvings' template v3.0.3 (BETA)\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int,int> pii;\ntypedef pair<LL,LL> pll;\ntypedef pair<string,string> pss;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vii;\ntypedef vector<LL> vl;\ntypedef vector<vl> vvl;\n\ndouble EPS = 1e-9;\nint INF = 1000000005;\nlong long INFF = 1000000000000000005LL;\ndouble PI = acos(-1);\nint dirx[8] = {-1,0,0,1,-1,-1,1,1};\nint diry[8] = {0,1,-1,0,-1,1,-1,1};\n\n#ifdef TESTING\n  #define DEBUG fprintf(stderr,\"====TESTING====\\n\")\n  #define VALUE(x) cerr << \"The value of \" << #x << \" is \" << x << endl\n  #define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n  #define DEBUG \n  #define VALUE(x)\n  #define debug(...)\n#endif\n\n#define FOR(a,b,c) for (int (a)=(b);(a)<(c);++(a))\n#define FORN(a,b,c) for (int (a)=(b);(a)<=(c);++(a))\n#define FORD(a,b,c) for (int (a)=(b);(a)>=(c);--(a))\n#define FORSQ(a,b,c) for (int (a)=(b);(a)*(a)<=(c);++(a))\n#define FORC(a,b,c) for (char (a)=(b);(a)<=(c);++(a))\n#define FOREACH(a,b) for (auto &(a) : (b))\n#define REP(i,n) FOR(i,0,n)\n#define REPN(i,n) FORN(i,1,n)\n#define MAX(a,b) a = max(a,b)\n#define MIN(a,b) a = min(a,b)\n#define SQR(x) ((LL)(x) * (x))\n#define RESET(a,b) memset(a,b,sizeof(a))\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define ALL(v) v.begin(),v.end()\n#define ALLA(arr,sz) arr,arr+sz\n#define SIZE(v) (int)v.size()\n#define SORT(v) sort(ALL(v))\n#define REVERSE(v) reverse(ALL(v))\n#define SORTA(arr,sz) sort(ALLA(arr,sz))\n#define REVERSEA(arr,sz) reverse(ALLA(arr,sz))\n#define PERMUTE next_permutation\n#define TC(t) while(t--)\n\ninline string IntToString(LL a){\n  char x[100];\n  sprintf(x,\"%lld\",a); string s = x;\n  return s;\n}\n\ninline LL StringToInt(string a){\n  char x[100]; LL res;\n  strcpy(x,a.c_str()); sscanf(x,\"%lld\",&res);\n  return res;\n}\n\ninline string GetString(void){\n  char x[1000005];\n  scanf(\"%s\",x); string s = x;\n  return s;\n}\n\ninline string uppercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';\n  return s;\n}\n\ninline string lowercase(string s){\n  int n = SIZE(s); \n  REP(i,n) if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';\n  return s;\n}\n\ninline void OPEN (string s) {\n  #ifndef TESTING\n  freopen ((s + \".in\").c_str (), \"r\", stdin);\n  freopen ((s + \".out\").c_str (), \"w\", stdout);\n  #endif\n}\n\n#ifdef TESTING\nint main() {}\n#endif\n\n//end of jonathanirvings' template v3.0.3 (BETA)\n\nint ada[2];\n\nclass Solution {\npublic:\n  int minFlips(vector<vector<int>>& grid) {\n    int r = SIZE(grid);   \n    int c = SIZE(grid[0]);\n    int risan = 0;\n    REP(i,r/2) REP(j,c/2)\n    {\n      RESET(ada,0);\n      ++ada[grid[i][j]];\n      ++ada[grid[i][c-j-1]];\n      ++ada[grid[r-i-1][j]];\n      ++ada[grid[r-i-1][c-j-1]];\n      risan += min(ada[0],ada[1]);\n    }\n    if (r % 2 == 1 && c % 2 == 1)\n    {\n      if (grid[r/2][c/2] == 1) ++risan;\n    }\n    int satu = 0;\n    int beda = 0;\n    if (r % 2 == 1)\n    {\n      REP(j,c/2)\n      {\n        if (grid[r/2][j] == 1 && grid[r/2][c-j-1] == 1) ++satu;\n        else if (grid[r/2][j] != grid[r/2][c-j-1])\n        {\n          ++beda;\n          ++risan;\n        }\n      }\n    }\n    if (c % 2 == 1)\n    {\n      REP(i,r/2)\n      {\n        if (grid[i][c/2] == 1 && grid[r-i-1][c/2] == 1) ++satu;\n        else if (grid[i][c/2] != grid[r-i-1][c/2])\n        {\n          ++beda;\n          ++risan;\n        }\n      }\n    }\n    if (satu % 2 == 1)\n    {\n      if (beda == 0) risan += 2;\n    }\n    return risan;\n  }\n};",
    "submit_ts": "1722696025",
    "subm_id": "1343088291"
}