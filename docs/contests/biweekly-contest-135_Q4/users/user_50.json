{
    "username": "Goffe",
    "submission": "class Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        long long res = 0, m = grid.size(), n = grid[0].size(), a = 0, b = 1;\n        long long dp[2][101][101] = {};\n        long long prefix[2][101] = {};\n        //vector<vector<vector<long long>>> dp(2, vector<vector<long long>>(m + 1, vector<long long>(m + 1, 0)));\n        //vector<vector<long long>> prefix(2, vector<long long>(m + 1, 0));\n        for(int j = 0; j < m; j++) prefix[a][j + 1] = prefix[a][j] + grid[j][0];\n        for(int i = 1; i < n; i++) {\n            for(int j = 0; j < m; j++) prefix[b][j + 1] = prefix[b][j] + grid[j][i];\n            for(int x = 0; x <= m; x++) {\n                for(int y = x; y <= m; y++) {\n                    for(int z = 0; z <= m; z++) {\n                        if(z >= x) {\n                            if(z >= y) {\n                                dp[b][z][z] = max(dp[b][z][z], dp[a][x][y] + prefix[a][z] - prefix[a][y]);\n                            }else {\n                                dp[b][z][z] = max(dp[b][z][z], dp[a][x][y]);\n                            }\n                            //res = max(res, dp[b][z][z]);\n                        }else {\n                            dp[b][z][x] = max(dp[b][z][x], dp[a][x][y] + prefix[b][x] - prefix[b][z]);\n                            //res = max(res, dp[b][z][x]);\n                        }\n                    }\n                }\n            }\n            swap(a, b);\n        }\n        for(int i = 0; i <= m; i++) for(int j = 0; j <= m; j++) res = max(res, dp[a][i][j]);\n        return res;\n    }\n};",
    "submit_ts": "1721490800",
    "subm_id": "548324321"
}