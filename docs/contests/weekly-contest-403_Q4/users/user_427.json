{
    "username": "tonmoy1912",
    "submission": "class Solution {\n    int helper(vector<vector<int>> &grid,int left1,int right1,int low1,int high1){\n        int low=low1,high=high1,left=left1,right=right1;\n        while(low<=high1){\n            // int temp=*max_element(grid[low].begin(),grid[low].end());\n            // if(temp==1){\n            //     break;\n            // }\n            bool flag=false;\n            for(int i=left1;i<=right1;i++){\n                if(grid[low][i]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            low++;\n        }\n        // int high=m-1;\n        while(high>=low1){\n            // int temp=*max_element(grid[high].begin(),grid[high].end());\n            // if(temp==1){\n            //     break;\n            // }\n            bool flag=false;\n            for(int i=left1;i<=right1;i++){\n                if(grid[high][i]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            high--;\n        }\n        // int left=0,right=n-1;\n        while(left<=right1){\n            bool flag=false;\n            for(int i=low1;i<=high1;i++){\n                if(grid[i][left]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            left++;\n        }\n        while(right>=left1){\n            bool flag=false;\n            for(int i=low1;i<=high1;i++){\n                if(grid[i][right]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            right--;\n        }\n        return (high-low+1)*(right-left+1);\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m=grid.size();\n        int n=grid[0].size();\n        int low=0;\n        while(low<m){\n            int temp=*max_element(grid[low].begin(),grid[low].end());\n            if(temp==1){\n                break;\n            }\n            low++;\n        }\n        int high=m-1;\n        while(high>=0){\n            int temp=*max_element(grid[high].begin(),grid[high].end());\n            if(temp==1){\n                break;\n            }\n            high--;\n        }\n        int left=0,right=n-1;\n        while(left<n){\n            bool flag=false;\n            for(int i=0;i<m;i++){\n                if(grid[i][left]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            left++;\n        }\n        while(right>=0){\n            bool flag=false;\n            for(int i=0;i<m;i++){\n                if(grid[i][right]==1){\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag){\n                break;\n            }\n            right--;\n        }\n        \n        int ans=INT_MAX;\n        for(int i=left;i<right;i++){\n            for(int j=i+1;j<right;j++){\n                int temp=helper(grid,left,i,low,high)+helper(grid,i+1,j,low,high)+helper(grid,j+1,right,low,high);\n                ans=min(ans,temp);\n            }\n        }\n        for(int i=low;i<high;i++){\n            for(int j=i+1;j<high;j++){\n                int temp=helper(grid,left,right,low,i)+helper(grid,left,right,i+1,j)+helper(grid,left,right,j+1,high);\n                ans=min(ans,temp);\n            }\n        }\n        \n        \n        for(int i=low;i<high;i++){\n            for(int j=left;j<right;j++){\n                int temp=helper(grid,left,right,low,i)+helper(grid,left,j,i+1,high)+helper(grid,j+1,right,i+1,high);\n                ans=min(ans,temp);\n            }\n        }\n        for(int i=high;i>low;i--){\n            for(int j=left;j<right;j++){\n                int temp=helper(grid,left,right,i,high)+helper(grid,left,j,low,i-1)+helper(grid,j+1,right,low,i-1);\n                ans=min(ans,temp);\n            }\n        }\n        for(int i=left;i<right;i++){\n            for(int j=low;j<high;j++){\n                int temp=helper(grid,left,i,low,high)+helper(grid,i+1,right,low,j)+helper(grid,i+1,right,j+1,high);\n                ans=min(ans,temp);\n            }\n        }\n        for(int i=right;i>left;i--){\n            for(int j=low;j<high;j++){\n                int temp=helper(grid,i,right,low,high)+helper(grid,left,i-1,low,j)+helper(grid,left,i-1,j+1,high);\n                ans=min(ans,temp);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719115026",
    "subm_id": "1297358866"
}