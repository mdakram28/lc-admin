{
    "username": "nakanolab",
    "submission": "import types\n\n_atcoder_code = \"\"\"\n# Python port of AtCoder Library.\n\n__version__ = '0.0.1'\n\"\"\"\n\natcoder = types.ModuleType('atcoder')\nexec(_atcoder_code, atcoder.__dict__)\n\n_atcoder_fenwicktree_code = \"\"\"\nimport typing\n\n\nclass FenwickTree:\n    '''Reference: https://en.wikipedia.org/wiki/Fenwick_tree'''\n\n    def __init__(self, n: int = 0) -> None:\n        self._n = n\n        self.data = [0] * n\n\n    def add(self, p: int, x: typing.Any) -> None:\n        assert 0 <= p < self._n\n\n        p += 1\n        while p <= self._n:\n            self.data[p - 1] += x\n            p += p & -p\n\n    def sum(self, left: int, right: int) -> typing.Any:\n        assert 0 <= left <= right <= self._n\n\n        return self._sum(right) - self._sum(left)\n\n    def _sum(self, r: int) -> typing.Any:\n        s = 0\n        while r > 0:\n            s += self.data[r - 1]\n            r -= r & -r\n\n        return s\n\"\"\"\n\natcoder.fenwicktree = types.ModuleType('atcoder.fenwicktree')\nexec(_atcoder_fenwicktree_code, atcoder.fenwicktree.__dict__)\nFenwickTree = atcoder.fenwicktree.FenwickTree\n\nfrom typing import List, Optional\n# from atcoder.fenwicktree import FenwickTree\n\nclass Solution:\n  def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n    n = len(nums)\n    ans = []\n    ft = FenwickTree(n)\n    \n    def update(j):\n      if 0 < j < n - 1:\n        prev = ft.sum(j, j + 1)\n        if nums[j-1] < nums[j] > nums[j+1]:\n          now = 1\n        else:\n          now = 0\n        ft.add(j, now - prev)\n\n    for i in range(1, n - 1):\n      if nums[i-1] < nums[i] > nums[i+1]:\n        ft.add(i, 1)\n    for query in queries:\n      if query[0] == 1:\n        l, r = query[1:]\n        if r - l < 2:\n          ans.append(0)\n        else:\n          ans.append(ft.sum(l + 1, r))\n      else:\n        i, val = query[1:]\n        nums[i] = val\n        for j in range(max(0, i - 1), min(i + 2, n)):\n          update(j)\n    return ans\n",
    "submit_ts": 1718507420.0
}