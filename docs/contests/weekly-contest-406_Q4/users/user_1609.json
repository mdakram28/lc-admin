{
    "username": "macuadros",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::vector<std::pair<int, bool>> cut(n + m - 2);\n        for (int i = 0; i < m - 1; ++i) {\n            cut[i] = std::make_pair(horizontalCut[i], 0);\n        }\n\n        for (int i = 0; i < n - 1; ++i) {\n            cut[i + m - 1] = std::make_pair(verticalCut[i], 1);\n        }\n\n        std::sort(cut.rbegin(), cut.rend());\n        \n        long long ans = 0;\n        int r = 1, c = 1;\n        for (int i = 0; i < n + m - 2; ++i) {\n            if (cut[i].second == 1) {\n                ans += 1LL * cut[i].first * r;\n                ++c;\n            }\n            else {\n                ans += 1LL * cut[i].first * c;\n                ++r;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926045",
    "subm_id": "1320274273"
}