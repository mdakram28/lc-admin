{
    "username": "yi-ping-an",
    "submission": "from typing import List\nimport collections\nimport bisect\n\nN = 32\n\ndef to2(x):\n    a = [0] * N\n    i = 0\n    while x:\n        a[i] = x % 2\n        i += 1\n        x //= 2\n    return a\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        a = [0] * N\n        kk = to2(k)\n        res = 0\n        for i in range(n):\n            num = nums[i]\n            b = to2(num)\n            for j in range(len(b)):\n                bj = b[j]\n                if bj == 1:\n                    a[j] += 1\n                else:\n                    a[j] = 0\n            # print(a)\n            m = i + 1\n            x = m\n            y = 0\n            for j in range(len(kk)):\n                kj = kk[j]\n                if kj == 1:\n                    x = min(x, a[j])\n                else:\n                    y = max(y, a[j])\n            c = x + m - y - m\n            c = max(c, 0)\n            # print(c)\n            res += c\n        return res\n\n\ndef _case(*a):\n    assert Solution().countSubarrays(*a[:-1]) == a[-1]\n\n\ndef test():\n    # assert to2(1) == [1, 0, 0]\n    # assert to2(2) == [0, 1, 0]\n    _case([1,1,1], 1, 6)\n    _case([1,2,3], 2, 2)\n\n\ndef test3():\n    _case([2, 1, 2, 4, 0], 0, 11)\n\n\ndef test2():\n    _case([1, 1, 2], 1, 3)\n",
    "submit_ts": "1720281349",
    "subm_id": "544575429"
}