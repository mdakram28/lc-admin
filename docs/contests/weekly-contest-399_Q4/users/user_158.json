{
    "username": "counter98",
    "submission": "class Solution {\npublic:\n    int mod;\n    vector<tuple<long long, long long, long long, long long>> ST;\n    void update(int id, int l, int r, int i, int v) {\n        if (i < l || r < i) {\n            return ;\n        }\n        if (l == r) {\n            ST[id] = {max(v, 0), 0, 0, 0};\n            return ;\n        }\n\n        int mid = (l + r) / 2;\n        update(id*2, l, mid, i, v);\n        update(id*2 + 1, mid+1, r, i, v);\n\n        auto [x1, y1, z1, t1] = ST[id*2];\n        auto [x2, y2, z2, t2] = ST[id*2 + 1];\n        ST[id] = {max(x1 + y2, x2 + z1), max(y1 + y2, t1 + x2), max(z1 + z2, x1 + t2), max(y1 + t2, t1 + z2)};\n    }\n\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        mod = 1e9 + 7;\n        ST.resize(4*nums.size());\n        for (int i = 0; i < nums.size(); i++) {\n            update(1, 0, nums.size()-1, i, nums[i]);\n        }\n        long long ans = 0;\n        for (auto q: queries) {\n            int idx = q[0], v = q[1];\n            update(1, 0, nums.size()-1, idx, v);\n            auto [x, y, z, t] = ST[1];\n            ans += x;\n            ans %= mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716695342",
    "subm_id": "1268139543"
}