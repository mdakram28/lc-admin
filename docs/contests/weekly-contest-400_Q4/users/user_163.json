{
    "username": "Anas_Maged",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        int ans = INT_MAX;\n        int n =a.size();\n        auto merge = [&](int x, int y){\n            return (x & y);\n        };\n        vector<int> logs(200005);\n        logs[1] = 0;\n        for (int i = 2; i < 200005; i++)\n            logs[i] = logs[i >> 1] + 1;\n        \tvector<vector<int>> table;\n\ttable = vector<vector<int>>(n + 1, vector<int>(20));\n\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\ttable[i][0] = a[i];\n\t\t\t}\n\t\t\tfor (int j = 1; j <= logs[n]; j++){\n\t\t\t\tfor (int i = 0; i <= n - (1 << j); i++){\n\t\t\t\t\ttable[i][j] = merge(table[i][j - 1], table[i + (1 << (j - 1))][j - 1]);\n\t\t\t\t}\n\t\t\t}\n        auto query = [&](int l, int r) -> int{\n            \n\t\t\tint sz = logs[r - l + 1];\n\t\t\treturn merge(table[l][sz], table[r - (1 << sz) + 1][sz]);  \n        };\n        \n        for(int i = 0; i < n; i++){\n            int cur = a[i], j = i;\n            while(j < n){\n                cur &= a[j];\n                ans = min(ans, abs(k - cur));\n                int start = j, end = n - 1, mid, res = n;\n                while(start <= end){\n                    mid = (start + end) / 2;\n                    if(cur == query(i, mid)){\n                        res = mid;\n                        start = mid + 1;\n                    }\n                    else{\n                        end = mid - 1;\n                    }\n                }\n                j = res + 1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297319.0
}