{
    "username": "snavneet561",
    "submission": "typedef long long ll;\n\nstruct FenwickTree {\n    vector<int> bit;  \n    int n;\n    FenwickTree(ll n) {\n        this->n = n + 1;\n        bit.assign(n + 1, 0);\n    }\n    int sum(int idx) {\n        int ret = 0;\n        for (++idx; idx > 0; idx -= idx & -idx)\n            ret += bit[idx];\n        return ret;\n    }\n    int sum(int l, int r) {\n        return sum(r) - sum(l - 1);\n    }\n    void add(int idx, int delta) {\n        for (++idx; idx < n; idx += idx & -idx)\n            bit[idx] += delta;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        FenwickTree fw(n+5);\n        vector<int>dist(n+1);\n        for(int i=1; i<=n; i++){\n            dist[i]=n-i;\n        }\n        set<pair<int, int>> mp;\n        vector<int> res;\n        for(auto v: queries){\n            int x=v[0]+1, y=v[1]+1;\n            int new_dist=dist[y]+fw.sum(y)+1;\n            int pre_dist=dist[x]+fw.sum(x);\n            int dif=pre_dist-new_dist;\n            if(new_dist < pre_dist){\n                int start=1;\n                auto it=mp.upper_bound({x, -1});\n                if(it!=mp.begin()){\n                    it--;\n                    if(it->second >= y){\n                        start=it->first+1;\n                    }\n                }\n                fw.add(start, -dif);\n                fw.add(x+1, dif);\n            }\n            mp.insert({x, y});\n            res.push_back(dist[1] + fw.sum(1));\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722741364",
    "subm_id": "1343743168"
}