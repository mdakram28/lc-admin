{
    "username": "youthful-ishi2akairv",
    "submission": "class Solution {\nprivate:\n    // \u6bd4\u8f83\u51fd\u6570\uff0c\u7528\u4e8e\u6392\u5e8f\n    static bool compare(const pair<int, int>& a, const pair<int, int>& b) {\n        return a.first > b.first;\n    }\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> cuts;\n        for (int i = 0; i < m - 1; ++i) {\n            cuts.push_back({horizontalCut[i], 0}); // 0 \u8868\u793a\u6c34\u5e73\u5207\u5272\n        }\n        for (int i = 0; i < n - 1; ++i) {\n            cuts.push_back({verticalCut[i], 1}); // 1 \u8868\u793a\u5782\u76f4\u5207\u5272\n        }\n        sort(cuts.begin(), cuts.end(), compare);\n        int row = 1, col = 1;\n        long long sumCost = 0;\n        for(const auto& cut : cuts){\n            if(cut.second == 0){\n                row += 1;\n                sumCost += cut.first * col;\n            }else{\n                col += 1;\n                sumCost += cut.first * row;\n            }\n        }\n        return sumCost;\n    }\n};",
    "submit_ts": "1720925939",
    "subm_id": "546442974"
}