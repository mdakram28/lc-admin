{
    "username": "cm_komi",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int req = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n\n        \n\n        int ans = 0;\n        int special = 0, special2 = 0;\n        vector< vector<int>> visited(n , vector<int>(m));\n        for( int i = 0; i < n; ++i){\n            for( int j = 0; j < m; ++j){\n                if( visited[i][j]  )    continue;\n                set< pair<int,int>> st;\n                st.insert( {i,j});\n                st.insert( {i , m-j-1 });\n                st.insert( {n-i-1, j });\n                st.insert( {n-i-1, m-j-1});\n                int zero = 0, one = 0;\n                for( auto [x,y] : st){\n                    if( grid[x][y] == 0)    zero += 1;\n                    else    one += 1;\n                    visited[x][y] = 1;\n                }\n                if( st.size() == 4)\n                    ans += min(zero , one);\n                else if( st.size() == 2){\n                    if( zero == 1)\n                        special += 1;\n                    else if( one == 2)\n                        special2 += 2;\n                }\n                else\n                    ans += one;\n            }\n        }\n        special2 %= 4;\n        ans += special;\n\n        if( special2 and special == 0)\n            ans+=2;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722699562",
    "subm_id": "1343215458"
}