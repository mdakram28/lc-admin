{
    "username": "RopoC",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qs) {\n        vector<long long> res(qs.size(), 0);\n        vector<long long> adj(qs.size(), -1);\n        vector<pair<int, int>> lefts, rights;\n        for (int i = 0; i < qs.size(); i++) {\n            lefts.push_back({qs[i][0], i});\n            rights.push_back({qs[i][1], i});\n        }\n\n        sort(lefts.begin(), lefts.end());\n        sort(rights.begin(), rights.end());\n\n        long long curr = 0;\n        int left = 0, lP = 0, rP = 0, c0 = 0, c1 = 0;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == '0') c0++;\n            else c1++;\n\n            while (left < i && c0 > k && c1 > k) {\n                if (s[left++] == '0') c0--;\n                else c1--;\n            }\n\n            while (lP < lefts.size() && lefts[lP].first < left) {\n                int ind = lefts[lP].second;\n                long long d = i - lefts[lP].first;\n                adj[ind] = (d * (d + 1)) / 2 - curr;\n\n                lP++;\n            }\n\n            curr += i - left + 1;\n            while (rP < rights.size() && rights[rP].first == i) {\n                int ind = rights[rP].second;\n                if (adj[ind] != -1) {\n                    res[ind] += curr + adj[ind];\n                } else {\n                    long long d = qs[ind][1] - qs[ind][0] + 1;\n                    res[ind] = (d * (d + 1)) / 2;\n                }\n\n                rP++;\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723953252",
    "subm_id": "1359816318"
}