{
    "username": "ArsalanKhan04",
    "submission": "#define ll long long //data types used often, but you don't want to type them time by time\n#define ull unsigned long long\n#define MOD % 1000000007\n#define FL(i,L,R) for (int i = L; i < R; i++) //next four are for \"for loops\"\n#define FE(i,L,R) for (int i = L; i <= R; i++)\n#define FF(i,L,R) for (int i = L; i > R; i--)\n#define FFE(i,L,R) for (int i = L; i >= R; i--)\n#define IN(i,l,r) (l<i&&i<r) //the next for are for checking bound\n#define LINR(i,l,r) (l<=i&&i<=r)\n#define LIN(i,l,r) (l<=i&&i<r)\n#define INR(i,l,r) (l<i&&i<=r)\n#define REMAX(a,b) (a)=max((a),(b)) // set a to the maximum of a and b\n#define REMIN(a,b) (a)=min((a),(b));\n#define ALL(c) (c).begin(),(c).end() //handy for function like \"sort()\"\n#define RALL(x) (x).rbegin(), (x).rend()\n#define PRESENT(c,x) ((c).find(x) != (c).end())\n\n#define pb push_back //handy shortcut\n#define mp make_pair\n#define F first //handy names for pais\n#define S second\n\n#define INF 2000000000 //infinity\n#define vi vector<int>\n#define vll vector<ll>\n#define vvi vector <vi>\n#define vb vector<bool>\n#define vvb vector <vb>\n\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n\nvoid dbg_out() { cerr << endl; }\ntemplate<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }\n#ifdef KRAKAR\n#define dbg(...) cerr << '[' << __FILE__ << ':' << __LINE__ << \"] (\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\n#else\n#define dbg(...)\n#endif\n\n#define endl '\\n'\n\n#define condprt(x) cout << ((x) ? \"YES\" : \"NO\") << endl\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n      int n = grid.size();\n      int m = grid[0].size();\n      int sm;\n      int cnt = 0;\n      FL(i, 0, n/2){\n        FL(j, 0, m/2){\n          sm = grid[i][j] + grid[n-1-i][j]; \n          sm += grid[n-1-i][m-1-j] + grid[i][m-1-j];\n          if (sm == 2){\n            cnt += 2;\n          } else {\n            cnt += sm % 2;\n          }\n        }\n      }\n      int ones = 0;\n      int cnt2 = 0;\n      if (n % 2){\n        FL(j, 0, m/2){\n          if (grid[n/2][j] != grid[n/2][m - 1- j]){\n            cnt2++;\n            ones += 2;\n          } else if (grid[n/2][j] == 1){\n            ones += 2;\n          }\n        }\n      }\n      if (m % 2){\n        FL(i, 0, n/2){\n          if (grid[i][m/2] != grid[n - 1 - i][m/2]){\n            cnt2++;\n            ones += 2;\n          } else if (grid[i][m/2] == 1){\n            ones += 2;\n          }\n        }\n      }\n      cout << cnt << endl;\n      cout << cnt2 << endl;\n      int total = cnt + cnt2;\n      if (n % 2 && m % 2)\n        total += grid[n/2][m/2];\n\n      if (cnt2 >= 1){\n        return total;\n      }\n      if (ones % 4 == 0){\n        return total;\n      } else {\n        return total + 2;\n      }\n    }\n};\n",
    "submit_ts": "1722697819",
    "subm_id": "1343160031"
}