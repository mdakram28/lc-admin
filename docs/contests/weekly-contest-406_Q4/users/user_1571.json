{
    "username": "Shobhit_Singh_47",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long long, char>> pq;\n\n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            pq.push({horizontalCut[i], 'H'});\n        }\n\n        for (int j = 0; j < verticalCut.size(); ++j) {\n            pq.push({verticalCut[j], 'V'});\n        }\n\n        long long horizontalPieces = 1;\n        long long verticalPieces = 1;\n        long long totalCost = 0;\n\n        while (!pq.empty()) {\n            auto [cost, type] = pq.top();\n            pq.pop();\n\n            if (type == 'H') {\n                totalCost += cost * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cost * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926335",
    "subm_id": "1320283126"
}