{
    "username": "kprabhav1323",
    "submission": "class Solution {\npublic:\n   \n   int helper(vector<int>&nums,int k)\n   {\n     \n    \n        map<int, vector<int>> m;\n        vector<int> v;\n \n       return find(nums,k,m,v);\n    \n\n\n   }\n   int find(vector<int>&nums,int k,map<int,vector<int>>m,vector<int>&v)\n   {\n    int sz= nums.size();\n      for (int i = 0; i < sz / 2; ++i) {\n            int prev = nums[i];\n            int after = nums[sz - i - 1];\n            int d = abs(prev - after);\n\n             int sol = max({prev, after, k - prev, k - after});\n\n             m[d].push_back(sol);\n            v.push_back(sol);\n        }\n\n        int ans = sz;  \n        sort(v.begin(), v.end());\n           auto it=m.begin();\n        \n        while (it!=m.end())\n         {\n            int dif=it->first;\n            vector<int>&val=it->second;\n            it++;\n            int u = lower_bound(v.begin(), v.end(), dif) - v.begin();\n            u = u * 2 + (nums.size() / 2 - u);\n\n            for (auto j: val) {\n                if (j < dif) {\n                    u-= 2;\n                } else {\n                    u -= 1;\n                }\n            }\n\n            ans = min(ans, u);\n        }\n\n        return ans;\n   }\n\n    \n    int minChanges(vector<int>& nums, int k) {\n       return helper(nums,k);\n    }\n};",
    "submit_ts": "1721489833",
    "subm_id": "1327465188"
}