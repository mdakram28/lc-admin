{
    "username": "pranshujain0111",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n/* clang-format off */\n\n/* TYPES  */\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vll vector<long long>\n#define mii map<int, int>\n#define si set<int>\n#define sc set<char>\n\n/* FUNCTIONS */\n#define f(i,s,e) for(long long int i=s;i<e;i++)\n#define cf(i,s,e) for(long long int i=s;i<=e;i++)\n#define rf(i,e,s) for(long long int i=e-1;i>=s;i--)\n#define pb push_back\n#define eb emplace_back\n\n/* PRINTS */\ntemplate <class T>\nvoid print_v(vector<T> &v) { cout << \"{\"; for (auto x : v) cout << x << \",\"; cout << \"\\b}\"; }\n\n/* UTILS */\n#define MOD 1000000007\n#define PI 3.1415926535897932384626433832795\n#define read(type) readInt<type>()\nll min(ll a,int b) { if (a<b) return a; return b; }\nll min(int a,ll b) { if (a<b) return a; return b; }\nll max(ll a,int b) { if (a>b) return a; return b; }\nll max(int a,ll b) { if (a>b) return a; return b; }\nll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }\nll lcm(ll a,ll b) { return a/gcd(a,b)*b; }\nstring to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }\nstring to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }\nbool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }\nvoid yes() { cout<<\"YES\\n\"; }\nvoid no() { cout<<\"NO\\n\"; }\n\n/*  All Required define Pre-Processors and typedef Constants */\ntypedef long int int32;\ntypedef unsigned long int uint32;\ntypedef long long int int64;\ntypedef unsigned long long int  uint64;\n\nclass Solution {\npublic:\n    unordered_map<ll, ll> curr;\n    unordered_map<ll, ll> oldAns;\n    ll countSubarrays(vector<int>& nums, int target) {\n        int n = nums.size();\n        ll ans = 0;\n        oldAns.clear();\n\n        for (int i = 0; i < n; ++i) {\n            curr.clear();\n            if (nums[i] == target) {\n                ans++;\n            }\n            curr[nums[i]] = 1;\n\n            updateResults(oldAns, curr, nums[i], target, ans);\n\n            oldAns = curr;\n        }\n        oldAns.clear();\n        return ans;\n    }\n\nprivate:\n    void updateResults(unordered_map<ll, ll>& prev_results,\n                       unordered_map<ll, ll>& curr_results, ll num, int target,\n                       ll& count) {\n        for (auto& [val, freq] : prev_results) {\n            ll newRes = val & num;\n            if (newRes == target) {\n                count += freq;\n            }\n            curr_results[newRes] += freq;\n        }\n    }\n};\n",
    "submit_ts": "1720280242",
    "subm_id": "1311782046"
}