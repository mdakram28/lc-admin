{
    "username": "akshat2403",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int curr = grid[i][j] + grid[n - 1 - i][j] +\n                           grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                ans += min(curr, 4 - curr);\n            }\n        }\n        int k1 = 0, c1 = 0, k2 = 0, c2 = 0;\n        if (n % 2) {\n            int st = 0, ed = m - 1;\n            while (st <= ed) {\n                k1 += int(grid[n / 2][st] != grid[n / 2][ed]);\n                if (grid[n / 2][st] == 1 && grid[n / 2][ed] == 1)\n                    c1 += 2;\n                st++;\n                ed--;\n            }\n        }\n        if (m % 2) {\n            int st = 0, ed = n - 1;\n            while (st <= ed) {\n                k2 += int(grid[st][m / 2] != grid[ed][m / 2]);\n                if (grid[st][m / 2] == 1 && grid[ed][m / 2] == 1) {\n                    c2 += 2;\n                }\n                st++;\n                ed--;\n            }\n        }\n        int flag = 0;\n        if (n % 2 && m % 2) {\n            flag = grid[n / 2][m / 2];\n            if (grid[n / 2][m / 2]) {\n                // cout<<c1<<c2;\n                c1 -= 2;\n                c2 -= 2;\n            }\n        }\n        int net = (c1 + c2) % 4;\n        if ((c1 + c2) % 4) {\n            if (k1 || k2) {\n                net = 0;\n            }\n        }\n\n        // cout<<ans<<\" \"<<k1<<\" \"<<k2<<\" \"<<flag<<\" \"<<c1<<\" \"<<c2;\n        ans += k1 + k2 + flag + net;\n        return ans;\n    }\n};",
    "submit_ts": "1722698111",
    "subm_id": "1343169993"
}