{
    "username": "amanpinjara23",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int n = nums.length;\n        int[] dif = new int[n];\n        for(int i=0;i<n;i++){\n            dif[i] = target[i] - nums[i];\n        }\n        long dp[] = new long[n];\n        dp[0] = Math.abs(dif[0]);\n        for(int i=1;i<n;i++){\n            if(dif[i] == 0){\n                dp[i] = 0;\n                continue;\n            }\n            if(dif[i] > 0 && dif[i-1] > 0){\n                if(dif[i] <= dif[i-1]){\n                    dp[i] = 0;\n                }else{\n                    dp[i] = dif[i]-dif[i-1];\n                }\n            }else if(dif[i] < 0 && dif[i-1] < 0){\n                 if(dif[i] >= dif[i-1]){\n                    dp[i] = 0;\n                }else{\n                    dp[i] = dif[i-1]-dif[i];\n                }\n            }else{\n                dp[i] = Math.abs(dif[i]);\n            }\n        }\n        for(long a: dp){\n            ans += a;\n        }\n        return ans;\n    }\n    \n}\n",
    "submit_ts": "1721533838",
    "subm_id": "1328017740"
}