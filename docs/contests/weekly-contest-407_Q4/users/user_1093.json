{
    "username": "kamtuo",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector to(nums.size(), 0ll);\n        vector ne(nums.size(), 0ll);\n        long long ans = 0;\n        long long k = 0;\n        long long maxa = 0;\n        long long fre = 0;\n        for (int i = 0; i < nums.size(); i ++) {\n            to[i] = max(target[i] - nums[i], 0);\n        }\n        ne[0] = -1;\n        maxa = max(to[0], 0ll);\n        for (int i = 1; i < nums.size() - 1; i ++) {\n            if (to[i] == 0) {\n                ans += maxa - k;\n                k = 0;\n                fre = 0;\n                maxa = 0;\n                continue;\n            }\n            if (to[i] == to[i - 1]) ne[i] = ne[i - 1];\n            else ne[i] = i - 1;\n            if (ne[i] != -1 && to[i] < to[ne[i]] && to[i] < to[i + 1]) {\n                ans += maxa - k;\n                k = to[i];\n                fre = 0;\n                maxa = 0;\n            }\n            maxa = max(to[i], maxa);\n        }\n        maxa = max(to.back(), maxa);\n        ans += maxa - k;\n        maxa = 0;\n        fre = 0;\n        k = 0;\n        for (int i = 0; i < nums.size(); i ++) {\n            to[i] = max(nums[i] - target[i], 0);\n        }\n        maxa = max(to[0], 0ll);\n        for (int i = 1; i < nums.size() - 1; i ++) {\n            if (to[i] == 0) {\n                ans += maxa - k;\n                k = 0;\n                fre = 0;\n                maxa = 0;\n                continue;\n            }\n            if (to[i] == to[i - 1]) ne[i] = ne[i - 1];\n            else ne[i] = i - 1;\n            if (ne[i] != -1 && to[i] < to[ne[i]] && to[i] < to[i + 1]) {\n                ans += maxa - k;\n                k = to[i];\n                maxa = 0;\n            }\n            maxa = max(to[i], maxa);\n        }\n        maxa = max(to.back(), maxa);\n        ans += maxa - k;\n        return ans;\n    }\n};",
    "submit_ts": "1721532083",
    "subm_id": "548390303"
}