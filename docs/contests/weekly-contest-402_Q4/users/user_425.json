{
    "username": "praveenseervi5678",
    "submission": "class Solution {\npublic:\n    \n    \n    vector<long long> segtree;\n    vector<long long> arr;\n    int n;\n\n    void build(int idx, int l, int r){\n        if(l== r){\n            int val = 0;\n            if(l-1>= 0 && arr[l-1]< arr[l] && l+1< n && arr[l]> arr[l+1]){\n                val = 1;\n            }\n            segtree[idx] = val;\n            return ;\n        }\n\n        int mid = (l+ r)/2;\n        build(2*idx+1, l, mid);\n        build(2*idx+2, mid+1, r);\n\n        segtree[idx] = (segtree[2*idx+1]+ segtree[2*idx+2]);\n    }\n\n    long long query(int idx, int l, int r, int find_l, int find_r){\n\n        if(find_l> r || find_r< l){\n            return 0;\n        }\n        if(find_l<= l && r<= find_r){\n            return segtree[idx];\n        }\n\n        int mid= (l+ r)/2;\n\n        return (query(2*idx+1, l, mid, find_l, find_r)+ query(2*idx+2, mid+1, r, find_l, find_r));\n    }\n\n    void update(int idx, int l, int r, int i){\n        \n        if(l> i || r< i){\n            return ;\n        }\n        if(l== r){\n            int val = 0;\n            if(l-1>= 0 && arr[l-1]< arr[l] && l+1< n && arr[l]> arr[l+1]){\n                val = 1;\n            }\n            segtree[idx] = val;\n            return ;\n        }\n        \n        int mid = (l+ r)/2;\n        if(i> mid){\n            update(2*idx+2, mid+1, r, i);\n        }\n        else{\n            update(2*idx+1, l, mid, i);\n        }\n        \n        segtree[idx] = segtree[2*idx+1]+ segtree[2*idx+2];\n    }\n    \n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        arr.clear();\n        n = nums.size();\n        arr.resize(n);\n        \n        segtree.clear();\n        segtree.resize(4*n+5, 0);\n        \n        for(int i=0;i<n;i++){\n            arr[i] = nums[i];\n        }\n        \n        build(0, 0, n-1);\n        \n        vector<int> ans;\n        \n        for(auto it: queries){\n            \n            if(it[0]== 1){\n                ans.push_back(query(0, 0, n-1, it[1]+1, it[2]-1));\n            }\n            else {\n                arr[it[1]] = it[2];\n                \n                if(it[1]-1>= 0) update(0, 0, n-1, it[1]-1);\n                update(0, 0, n-1, it[1]);\n                if(it[1]+1< n) update(0, 0, n-1, it[1]+ 1);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718507232.0
}