{
    "username": "codeworm96",
    "submission": "class Solution {\n    map<pair<int, int>, int> dp;\n    int f(int k, int j) {\n        if (k - j < 0) {\n            return 0;\n        }\n        if (k == 1 && j == 0) {\n            return 1;\n        }\n        if (j == 0) {\n            return 0;\n        }\n        if (dp.count({k, j})) {\n            return dp[{k, j}];\n        }\n        int t = f(k - j, j / 2) + f(k + 1 - j, j / 2);\n        dp[{k, j}] = t;\n        return t;\n    }\npublic:\n    int waysToReachStair(int k) {\n        int res = 0;\n        long j = 1;\n        while (j / 2 <= k) {\n            res += f(k, j / 2);\n            j *= 2;\n        }\n        int k1 = k + 1;\n        j = 1;\n        while (j / 2 <= k1) {\n            res += f(k1, j / 2);\n            j *= 2;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716089597.0
}