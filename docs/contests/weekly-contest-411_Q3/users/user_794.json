{
    "username": "metaphysicalist",
    "submission": "sys.set_int_max_str_digits(100010)\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        def build(tail, n):\n            tail = str(tail)\n            if n == 1:\n                return tail\n            if n == 2:\n                return tail + tail\n            return tail + (\"9\" * (n-2)) + tail\n\n        if k == 1:\n            return \"9\" * n\n        if k == 2:\n            return build(8, n)\n        if k == 5:\n            return build(5, n)    \n\n        \n        def build2(tail, n):\n            suffix = str(tail)\n            prefix = suffix[::-1]\n            m = len(suffix)\n            if n == 1:\n                return prefix[0]\n            if n == 2:\n                return prefix[0] * 2\n            if n == 3:\n                return prefix[:2] + suffix[-1]\n            if n == 4:\n                return prefix[:2] + suffix[-2:]        \n            if n >= 7:\n                cut = 3\n            else:\n                cut = 2        \n            if n % 2 == 1:\n                for i in range(9, -1, -1):\n                    t = prefix[:cut] + (\"9\" * ((n - 2 * m - 1) // 2)) + str(i) + (\"9\" * ((n - 2 * m - 1) // 2)) + suffix[-cut:]\n                    if int(t) % k == 0:\n                        return t\n                return \"\"\n            for i in range(9, -1, -1):\n                t = prefix[:cut] + (\"9\" * ((n - 2 * m - 2) // 2)) + str(i) + str(i) + (\"9\" * ((n - 2 * m - 2) // 2)) + suffix[-cut:]\n                if int(t) % k == 0:\n                    return t\n            return \"\"\n\n\n\n        \n        for lead in range(999, 0, -1):\n            tail = int(str(lead)[::-1])\n            if k % 2 == 0 and tail % 2 != 0:\n                continue\n\n            t = build2(tail, n)\n            if t == \"\":\n                continue\n            if int(t) % k == 0:\n                return t\n         \n            ",
    "submit_ts": "1723952495",
    "subm_id": "1359797575"
}