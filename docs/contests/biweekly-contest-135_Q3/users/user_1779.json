{
    "username": "rk8WTAOy7Q",
    "submission": "class Solution{\npublic int minChanges(int[] nums, int k) {\n        Map<Integer, List<Integer>> m = new HashMap<>();\n        List<Integer> v = new ArrayList<>();\n        \n        for (int i = 0; i < nums.length / 2; ++i) {\n            int a = nums[i], b = nums[nums.length - i - 1];\n            int diff = Math.abs(a - b);\n            int X = Math.max(Math.max(a, b), Math.max(k - a, k - b));\n            if (!m.containsKey(diff)) {\n                m.put(diff, new ArrayList<>());\n            }\n            m.get(diff).add(X);\n            v.add(X);\n        }\n        \n        Collections.sort(v);\n        \n        int ans = nums.length;\n        \n        for (Map.Entry<Integer, List<Integer>> entry : m.entrySet()) {\n            int diff = entry.getKey();\n            List<Integer> values = entry.getValue();\n            int T = binarySearchCount(v, diff);\n            T = T * 2 + (nums.length / 2 - T);\n            \n            for (int X : values) {\n                if (X < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n            \n            ans = Math.min(ans, T);\n        }\n        \n        return ans;\n    }\n    \n    private int binarySearchCount(List<Integer> v, int target) {\n        int lo = 0, hi = v.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (v.get(mid) < target) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n}\n\n",
    "submit_ts": "1721490117",
    "subm_id": "1327473511"
}