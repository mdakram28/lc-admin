{
    "username": "imveer2003",
    "submission": "class Solution {\npublic:\n\nvoid build(int s, int e, int i, vector<int> &a, vector<int> &seg) {\n    if (s == e) {\n        seg[i] = a[s];\n        return;\n    }\n    int mid = s + (e - s) / 2;\n    build(s, mid, 2 * i + 1, a, seg);\n    build(mid + 1, e, 2 * i + 2, a, seg);\n    seg[i] = (seg[2 * i + 1] & seg[2 * i + 2]);\n}\n\nint query(int s, int e, int i, int qs, int qe, vector<int> &seg) {\n    if (qs <= s && qe >= e)\n        return seg[i];\n    if (qs > e || qe < s)\n        return (1<<30) - 1;\n    int mid = s + (e - s) / 2;\n    return (query(s, mid, 2 * i + 1, qs, qe, seg) & query(mid + 1, e, 2 * i + 2, qs, qe, seg));\n}\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> seg(4*n);\n        build(0,n-1,0,nums,seg);\n        int ans = 1e9+1;\n        for(int i = 0; i < n; ++i){\n            int low = i-1, high = n-1;\n            while(high > low + 1){\n                int mid = (low + high)/2;\n                if(query(0,n-1,0,i,mid,seg)>=k){\n                    low = mid;\n                }else{\n                    high = mid;\n                }\n            }\n            if(low!=i-1){\n                ans = min(ans, abs(k - query(0,n-1,0,i,low,seg)));\n            }\n            ans = min(ans, abs(k - query(0,n-1,0,i,high,seg)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717300699.0
}