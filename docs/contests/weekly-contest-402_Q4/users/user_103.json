{
    "username": "Belgutei0323",
    "submission": "class Solution {\npublic:\n    #define pb push_back\n    int level;\n    vector<int> v[30], nums;\n    \n    void update(int pos, int val) {\n        v[level][pos] = val;\n        for (int i = level - 1; i >= 0; i--) {\n            pos /= 2;\n            v[i][pos] = v[i + 1][pos * 2] + v[i + 1][pos * 2 + 1];\n        }\n    }\n    \n    int l, r;\n    \n    int dfs(int k, int x) {\n        int y = (1 << (level - k)) * x;\n        int z = (1 << (level - k)) * (x + 1) - 1;\n        if (l <= y && z <= r) {\n            return v[k][x];\n        }\n        if (k == level || z < l || y > r) return 0;\n        return dfs(k + 1, x * 2) + dfs(k + 1, x * 2 + 1);\n    }\n    \n    bool is_peak(int pos) {\n        return (pos > 0) && (pos + 1 < nums.size()) && (nums[pos] > nums[pos - 1]) && (nums[pos] > nums[pos + 1]);\n    }\n    \n    vector<int> countOfPeaks(vector<int>& Nums, vector<vector<int>>& queries) {\n        nums = Nums;\n        vector<int> ret;\n        int n = nums.size();\n        for (int i = 0; i < 30; i++) {\n            if ((1 << i) >= n) {\n                level = i;\n                break;\n            }\n        }\n        for (int i = 0; i <= level; i++) {\n            for (int j = 0; j < (1 << i); j++) {\n                v[i].pb(0);\n            }\n        }\n        //\n        for (int i = 1; i < nums.size() - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                update(i, 1);\n            }\n        }\n        //\n        for (auto x: queries) {\n            if (x[0] == 1) {\n                l = x[1] + 1;\n                r = x[2] - 1;\n                if (l > r) {\n                    ret.pb(0);\n                } else {\n                    ret.pb(dfs(0, 0));\n                }\n            } else {\n                nums[x[1]] = x[2];\n                if (is_peak(x[1])) {\n                    update(x[1], 1);\n                } else {\n                    update(x[1], 0);\n                }\n                if (x[1] > 0) {\n                    if (is_peak(x[1] - 1)) update(x[1] - 1, 1);\n                    else update(x[1] - 1, 0);\n                }\n                if (x[1] + 1 < n) {\n                    if (is_peak(x[1] + 1)) update(x[1] + 1, 1);\n                    else update(x[1] + 1, 0);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1718506600.0
}