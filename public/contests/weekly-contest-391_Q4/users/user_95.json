{
    "username": "thesycat",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n        \n        # Assume y1 > y0\n        def max_dist(points, skip=None):\n            _, p0a = max((-points[i][0]-points[i][1], i) for i in range(len(points)) if i != skip)\n            _, p0b = max((-points[i][0]+points[i][1], i) for i in range(len(points)) if i != skip)\n        \n            _, p1a = max((points[i][0]+points[i][1], i) for i in range(len(points)) if i != skip)\n            _, p1b = max((points[i][0]-points[i][1], i) for i in range(len(points)) if i != skip)\n            \n            \n            return max((abs(points[p0i][0]-points[p1i][0]) + abs(points[p0i][1]-points[p1i][1]), p0i, p1i) for p0i in [p0a, p0b] for p1i in [p1a, p1b])\n            \n        _, p0i, p1i = max_dist(points)\n        \n        d0, _, _ = max_dist(points, p0i)\n        d1, _, _ = max_dist(points, p1i)\n        return min(d0, d1)\n        \n        \n                    \n        \n        \n        \n            \n            \n            \n        \n        #Return the minimum possible value for maximum distance between any two points by removing exactly one point.\n\n"
}