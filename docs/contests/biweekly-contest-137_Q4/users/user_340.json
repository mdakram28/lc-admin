{
    "username": "\u7eff\u6708\u4eae",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        all_points = []\n\n        for i in range(m):\n            for j in range(n):\n                all_points.append((i, j))\n\n        all_points.sort(key=lambda x: board[x[0]][x[1]], reverse=True)\n\n        cur = []\n        iis = []\n        jjs = []\n        rs = [None]\n\n        def func_dfs():\n            if len(cur) == 2:\n                for x, y in all_points:\n                    if x not in iis and y not in jjs:\n                        ans = sum(cur) + board[x][y]\n                        if rs[0] is None or ans > rs[0]:\n                            rs[0] = ans\n                return\n            count = 0\n            for i, j in all_points:\n                if i not in iis and j not in jjs:\n                    count += 1\n                    if count > 7:\n                        break\n                    val = board[i][j]\n                    cur.append(val)\n                    iis.append(i)\n                    jjs.append(j)\n                    func_dfs()\n                    cur.pop()\n                    iis.pop()\n                    jjs.pop()\n\n        func_dfs()\n        return rs[0]\n",
    "submit_ts": "1723910084",
    "subm_id": "556339462"
}