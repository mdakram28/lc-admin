{
    "username": "Wibo",
    "submission": "// dp[i][j] = num of ways to reach stair i with jump = j\n// dp[i][j] = dp[i-(1<<(j-1))][j-1] + dp[i-(1<<(j-1))+1][j-1]\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        vector<map<int, int>> dp(33);\n        auto calc = [&](auto self, int i, int j) -> int {\n            if (i == 1 && j == 0) return 1;\n            if (i == 0 && j == 0) return 1;\n            if (i == 0 && j == 1) return 1;\n            if (i <= 0 || j <= 0) return 0;\n            if (dp[j].count(i)) return dp[j][i];\n            return dp[j][i] = self(self, i - (1 << (j-1)), j-1) + self(self, i - (1 << (j-1)) + 1, j-1);\n        };\n        \n        int ans = 0;\n        for (int j=0; j<32; j++) ans += calc(calc, k, j);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1716087228",
    "subm_id": "1261776988"
}