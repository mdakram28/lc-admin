{
    "username": "chinmay02",
    "submission": "class Solution {\npublic:\n    \n    pair<int,int> dfs(int node,int par,int dep,vector<vector<int>>& g){\n        \n        // cout<<node<<\" \"<<dep<<endl;\n        int maxdep = dep;\n        int n = node;\n        for(auto v:g[node] ){\n            if(v!=par)\n            {\n                pair<int,int> ret = dfs(v,node,dep+1,g);\n                \n                if(ret.second>maxdep)\n                {\n                    maxdep = ret.second;\n                    n = ret.first;\n                }\n            }\n        }\n        \n        return {n,maxdep};\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        \n        int n1 = edges1.size()+1;\n        vector<vector<int>> g1(n1);\n        \n        for(auto &v:edges1)\n        {\n            g1[v[0]].push_back(v[1]);\n            g1[v[1]].push_back(v[0]);\n        }\n        \n        int n2 = edges2.size()+1;\n        vector<vector<int>> g2(n2);\n        \n        for(auto &v:edges2)\n        {\n            g2[v[0]].push_back(v[1]);\n            g2[v[1]].push_back(v[0]);\n        }\n        \n        pair<int,int> p1 = dfs(0,0,0,g1);\n        pair<int,int> d1 = dfs(p1.first,p1.first,0,g1);\n        \n        int v1 = d1.second;\n        \n        // cout<<p1.first<<endl;\n        pair<int,int> p2 = dfs(0,0,0,g2);\n        pair<int,int> d2 = dfs(p2.first,p2.first,0,g2);\n        // cout<<p2.first<<endl;\n        \n        int v2 = d2.second;\n        \n        \n        // cout<<v1<<\" \"<<v2<<endl;\n        \n        return max({v1,v2,(v1+1)/2+(v2+1)/2 + 1});\n        // return 0;\n    }\n};",
    "submit_ts": "1719719149",
    "subm_id": "1304434905"
}