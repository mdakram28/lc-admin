{
    "username": "donbasta",
    "submission": "struct SparseTable {\n    const int K = 20;\n    vector<vector<int>> table;\n    int n;\n    SparseTable(const vector<int>& ar) : n(ar.size()) {\n        table.resize(K + 1);\n        for (auto& v : table) v.resize(n + 5);\n        for (int i = 0; i < n; i++) {\n            table[0][i] = ar[i];\n        }\n        for (int i = 1; i <= K; i++) {\n            for (int j = 0; (j + (1 << i)) <= n; j++) {\n                table[i][j] = (table[i - 1][j] & table[i - 1][j + (1 << (i - 1))]);\n            }\n        }\n    }\n    int bit_width(int x) {\n        if (x == 0) return 0;\n        int ret = 0;\n        while (x) {\n            x >>= 1, ret++;\n        }\n        return ret;\n    }\n    int get(int l, int r) {\n        int i = bit_width(r - l + 1) - 1;\n        return (table[i][l] & table[i][r - (1 << i) + 1]);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        SparseTable st(nums);\n        int n = nums.size();\n        using ll = long long;\n        ll ans = 0;\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n - 1;\n            int pr = -1, pl = -1;\n            while (l <= r) {\n                int mid = (l + r) >> 1;\n                if (st.get(i, mid) > k) {\n                    l = mid + 1;\n                } else {\n                    pl = mid;\n                    r = mid - 1;\n                }\n            }\n            l = i, r = n - 1;\n            while (l <= r) {\n                int mid = (l + r) >> 1;\n                if (st.get(i, mid) >= k) {\n                    l = mid + 1;\n                } else {\n                    pr = mid;\n                    r = mid - 1;\n                }\n            }\n            ll add = 0;\n            if (pr == -1 && pl == -1) {\n                add = 0;\n            } else if (pl == -1) {\n                add = 0;\n            } else if (pr == -1) {\n                add = n - pl;\n            } else {\n                add = pr - pl;\n            }\n            ans += add;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277858",
    "subm_id": "1311683319"
}