{
    "username": "kai_to_the_lynn",
    "submission": "using ll = long long;\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& A, vector<int>& target) {\n        stack<std::pair<char, int>>st; // <-1, num> indicates negative, <1, num> indicates positive\n        int n = A.size();\n        ll res = 0;\n        for (int i = 0; i < n; ++i) {\n            int diff = target[i] - A[i];\n            \n            char cur;\n            if (diff == 0) {\n                while (!st.empty()) {\n                    res += st.top().second;\n                    st.pop();\n                }\n                \n                continue;\n            }\n            if (diff > 0) {\n                cur = '+';\n            } else {\n                cur = '-';\n            }\n            if (!st.empty()) {\n                if (st.top().first == cur) {\n                    diff = abs(diff);\n                    if (diff < st.top().second) {\n                        res += st.top().second - diff;\n                        st.pop();\n                        st.push(std::make_pair(cur, diff));\n                    } else {\n                        st.top().second = diff;\n                    }\n                    \n                } else {\n                    res += st.top().second;\n                    st.pop();\n                    st.push(std::make_pair(cur, abs(diff)));\n                }\n            } else {\n                st.push(std::make_pair(cur, abs(diff)));\n            }\n        }\n        while (!st.empty()) {\n            res += st.top().second;\n            st.pop();\n        }\n        \n        \n        return res;\n    }\n};",
    "submit_ts": "1721531235",
    "subm_id": "1327955805"
}