{
    "username": "KareemHatem",
    "submission": "class Solution {\npublic:\n#define ll long long\n\n    ll nCr(ll n, ll r) {\n        if (r > n)\n            return 0;\n        r = max(r, n - r);\n        ll ans = 1, div = 1, i = r + 1;\n        while (i <= n) {\n            ans *= i++;\n            ans /= div++;\n        }\n        return ans;\n    }\n    pair<ll,ll> can(ll val){\n        ll num =0,cnt = 0;\n        for(int i=0;i<33;i++){\n            if(val&(1ll<<i)){\n                num|=(1ll<<i);\n            }else break;\n        }\n        return {cnt,num == val};\n    }\n    int waysToReachStair(int k) {\n        ll ans = 0;\n        for(int i=0;i<35;i++){\n            ll sum = (1ll<<i) - 1;\n            ll n = i+1;\n            ll r = sum + 1 - k;\n            //cout<<sum<<' '<<n<<' '<<r<<' '<<nCr(n,r)<<endl;\n            if(r >= 0 && r <= n){\n                ans+=nCr(n, r);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716089390",
    "subm_id": "1261840962"
}