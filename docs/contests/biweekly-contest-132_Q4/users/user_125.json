{
    "username": "GabPua",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        vector<map<int,int>> m(k + 1);\n        vector<vector<int>> dp(k + 1, vector<int>(n, 0));\n        vector<set<pair<int,int>>> s(k + 1);\n        dp[0][0] = 1;\n        m[0][nums[0]] = 1;\n        s[0].insert({1, nums[0]});\n        \n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                if (m[j].count(nums[i])) {\n                    dp[j][i] = m[j][nums[i]] + 1;\n                    s[j].erase({dp[j][i] - 1, nums[i]});\n                }\n                if (j > 0) {\n                    auto it = s[j - 1].end();\n                    while (true) {\n                        if (it == s[j - 1].begin()) break;\n                        it--;\n                        if (it->second == nums[i]) continue;\n                        int val = it->first + 1;\n                        dp[j][i] = max(val, dp[j][i]);\n                        break;\n                    }\n                }\n                if (dp[j][i] != 0) {\n                    m[j][nums[i]] = dp[j][i];\n                    s[j].insert({dp[j][i], nums[i]});\n                }\n            }\n            \n            if (dp[0][i] == 0) {\n                dp[0][i] = 1;\n                m[0][nums[i]] = 1;\n                s[0].insert({1, nums[i]});\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i <= k; i++) {\n            for (int j = 0; j < n; j++) ans = max(ans, dp[i][j]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717859361.0
}