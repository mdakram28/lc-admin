{
    "username": "geekoders",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n\n        min_cost = defaultdict(lambda: float('inf'))\n        for word, cost in zip(words, costs):\n            if len(word) <= len(target):\n                min_cost[word] = min(min_cost[word], cost)\n\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        for i in range(1, n + 1):\n            for word, cost in min_cost.items():\n                if i >= len(word) and target[i - len(word):i] == word:\n                    dp[i] = min(dp[i], dp[i - len(word)] + cost)\n\n        return dp[n] if dp[n] != float('inf') else -1\n\n        \n        \n        ",
    "submit_ts": "1720321853",
    "subm_id": "1312334042"
}