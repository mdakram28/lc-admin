{
    "username": "prashant_kashyap9759",
    "submission": "class Node{\n    public:\n    Node*next[26];\n    int num;\n    Node(){\n        for(int i=0;i<26;i++)next[i]=NULL;\n        num=0;\n    }\n};\n\nclass Solution {\npublic:\n    void insert(string &str,Node*&head,int add){\n        Node*temp=head;\n        for(auto ch:str){\n            if(!temp->next[ch-'a']){\n                Node*curr=new Node();\n                temp->next[ch-'a']=curr;\n            }\n            temp=temp->next[ch-'a'];\n        }\n        if(temp->num>0)temp->num=min(add,temp->num);\n        else temp->num=add;\n        return;\n    }\n    int solve(string &str,int idx,Node*&head,vector<int>&dp){\n        if(idx==str.size())return 0;\n        if(dp[idx]!=-1)return dp[idx];\n        Node*temp=head;\n        int ans=INT_MAX;\n        for(int i=idx;i<str.size();i++){\n            int val=(str[i]-'a');\n            if(!temp->next[val])break;\n            int add=temp->next[val]->num;\n            if((add)>0){\n                int curr=solve(str,i+1,head,dp);\n                if(curr!=INT_MAX)ans=min(ans,curr+add);\n            }\n            temp=temp->next[val];\n        }\n        return dp[idx]=ans;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Node*head=new Node();\n        int n=words.size();\n        for(int i=0;i<n;i++)insert(words[i],head,costs[i]);\n        vector<int>dp(target.size()+1,-1);\n        int ans=solve(target,0,head,dp);\n        return ans>=INT_MAX?-1:ans;\n    }\n};",
    "submit_ts": "1720322513",
    "subm_id": "1312351912"
}