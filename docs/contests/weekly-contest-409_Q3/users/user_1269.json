{
    "username": "7760764910",
    "submission": "class Solution {\npublic:\n        int getseg(int node,int lx,int rx,int l,int r,vector<int>&seg){\n        if(rx<=l || r<=lx){\n            return 0;\n        }\n        if(l<=lx and rx<=r){\n            return seg[node];\n        }\n        int mid=(lx+rx)/2;\n        int t1= getseg(node*2+1,lx,mid,l,r,seg),t2=getseg(node*2+2,mid,rx,l,r,seg);\n        return max(t1,t2);\n    }\n    void update(int node,int lx,int rx,int l,int r,vector<int>&seg){\n        if(rx-lx==1){\n            seg[node]=r;\n            return ;\n        }\n        int mid=(lx+rx)/2;\n        if(l<mid)\n        update(node*2+1,lx,mid,l,r,seg);\n        else\n        update(node*2+2,mid,rx,l,r,seg);\n        seg[node]=max(seg[node*2+1],seg[node*2+2]);\n        return ;\n    }\n\n        vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int>seg(4*n,0),next(n,0);\n        for(int i=n-2;i>-1;i--)next[i]=i+1;\n        vector<int>ans;\n        int d=n-1;\n        for(auto j:q){\n            if(getseg(0,0,n,0,j[0]+1,seg)<j[1]){\n                int curr=j[0],cnt=0;\n                while(curr!=j[1]){\n                    curr=next[curr];\n                    cnt++;\n                }\n                d-=cnt;\n                d++;\n            }\n            next[j[0]]=j[1];\n            update(0,0,n,j[0],j[1],seg);\n            ans.push_back(d);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743355",
    "subm_id": "1343790073"
}