{
    "username": "ashutosh_op",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> maxElements;\n        int idx = 0;\n        \n        while (idx < nums.size() / 2) {\n            int first = nums[idx];\n            int last = nums[nums.size() - idx - 1];\n            int difference = abs(first - last);\n            int maxVal = getMaxValue(first, last, k);\n            diffMap[difference].push_back(maxVal);\n            maxElements.push_back(maxVal);\n            ++idx;\n        }\n        \n        int minChanges = nums.size();\n        sort(maxElements.begin(), maxElements.end());\n       \n        auto it = diffMap.begin();\n        while (it != diffMap.end()) {\n            int difference = it->first;\n            int pos = findPosition(maxElements, difference);\n            int tempChanges = calculateTempChanges(pos, nums.size());\n\n            auto innerIt = it->second.begin();\n            while (innerIt != it->second.end()) {\n                tempChanges = adjustTempChanges(*innerIt, difference, tempChanges);\n                ++innerIt;\n            }\n\n            minChanges = min(minChanges, tempChanges);\n            ++it;\n        }\n\n        return minChanges;\n    }\n\nprivate:\n    int getMaxValue(int a, int b, int k) {\n        return max({a, b, k - a, k - b});\n    }\n\n    int findPosition(const vector<int>& vec, int val) {\n        return lower_bound(vec.begin(), vec.end(), val) - vec.begin();\n    }\n\n    int calculateTempChanges(int pos, int size) {\n        return pos * 2 + (size / 2 - pos);\n    }\n\n    int adjustTempChanges(int value, int diff, int tempChanges) {\n        if (value < diff) {\n            tempChanges -= 2;\n        } else {\n            tempChanges -= 1;\n        }\n        return tempChanges;\n    }\n};\n",
    "submit_ts": "1721489240",
    "subm_id": "1327447288"
}