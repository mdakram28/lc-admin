{
    "username": "U_U",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector< unordered_map<int, int> > dp(k + 1);\n        unordered_map<int, vector<int>> dict;\n        for (auto& item : nums)\n        {\n            if (dict.count(item) == 0)\n            {\n                dict[item] = vector<int>(k + 1, 0);\n            }\n        }\n        \n        int res = 0;        \n        for (int j = 0; j < n; ++j)\n        {            \n            if (j == 0)\n            {\n                dp[0][nums[j]] = 1;\n                dict[ nums[j] ][0] = 1;\n                continue;\n            }\n            \n            vector<int>& vec = dict[nums[j]];                        \n            for (int i = 0; i < vec.size(); ++i) vec[i]++;            \n            \n            for (int t = 0; t < k; ++t)\n            {\n                for (auto& item : dp[t])\n                {\n                    if (item.first != nums[j])\n                    {                        \n                        vec[t + 1] = max(vec[t + 1], item.second + 1); \n                        //cout << j << \",\" << nums[j] << \"|\" << t + 1 << \",\" << item.second + 1 << endl;\n                    }\n                }\n            }                        \n            \n            for (int t = 0; t <= k; ++t)\n                Insert(dp[t], nums[j], vec[t]);\n        }\n        \n        for (int t = 0; t <= k; ++t)\n            for (auto& item : dp[t])\n            {\n                res = max(res, item.second);\n            }\n            \n        return res;\n    }\n    \n    void Insert(unordered_map<int, int>& lens, int val, int curLen)\n    {\n        if (lens.count(val) != 0) \n        {            \n            lens[val] = max(lens[val], curLen);\n        }\n        else\n        {\n            if (lens.size() < 3) lens[val] = curLen;\n            else\n            {\n                int minVal = INT_MAX;\n                int which = -1;\n                for (auto& item : lens)\n                {\n                    if (item.second < minVal)\n                    {\n                        minVal = item.second;\n                        which = item.first;\n                    }\n                }\n                if (curLen > minVal)\n                {\n                    lens.erase(which);\n                    lens[val] = curLen;\n                }\n            }\n        }\n    }\n};",
    "submit_ts": "1717860249",
    "subm_id": "1281750978"
}