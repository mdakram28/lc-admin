{
    "username": "bepis",
    "submission": "class Solution {\n    \n    public long maximumValueSum(int[][] board) {\n        final int m = board.length;\n        final int n = board[0].length;\n        List<PriorityQueue<Cell>> pqs = new ArrayList<PriorityQueue<Cell>>();\n        for (int i = 0;i < m;i++) {\n            pqs.add(new PriorityQueue<Cell>());\n        }\n        for (int i = 0;i < m;i++) {\n            var pq = pqs.get(i);\n            for (int j = 0;j < n;j++) {\n                pq.offer(new Cell(j, i, board[i][j]));\n            }\n        }\n        long res = (long) board[0][0] + board[1][1] + board[2][2];\n        for (int i = 0;i < m;i++) {\n            for (int j = i + 1;j < m;j++) {\n                for (int k = j + 1;k < m;k++) {\n                    // pqs[i], pqs[j], pqs[k]\n                    res = Math.max(res, select(pqs, i, j, k));\n                    res = Math.max(res, select(pqs, i, k, j));\n                    res = Math.max(res, select(pqs, j, i, k));\n                    res = Math.max(res, select(pqs, j, k, i));\n                    res = Math.max(res, select(pqs, k, i, j));\n                    res = Math.max(res, select(pqs, k, j, i));\n                }\n            }\n        }\n        return res;\n    }\n    \n    long select(List<PriorityQueue<Cell>> pqs, int i, int j, int k) {\n        long total = 0;\n        PriorityQueue<Cell> pqi = pqs.get(i);\n        PriorityQueue<Cell> pqj = pqs.get(j);\n        PriorityQueue<Cell> pqk = pqs.get(k);\n        \n        Cell a = pqi.peek();\n        total += a.val;\n        \n        Cell b = pqj.peek();\n        if (b.x == a.x) {\n            Cell t = b;\n            pqj.poll();\n            b = pqj.peek();\n            pqj.offer(t);\n        }\n        total += b.val;\n        \n        Cell c = pqk.peek();\n        List<Cell> bkup = new ArrayList<>();\n        while (c.x == a.x || c.x == b.x) {\n            bkup.add(c);\n            pqk.poll();\n            c = pqk.peek();\n        }\n        for (int x = 0;x < bkup.size();x++) pqk.offer(bkup.get(x));\n        total += c.val;\n        \n        return total;\n    }\n    \n    class Cell implements Comparable<Cell> {\n        public int x, y, val;\n        Cell (int x, int y, int val) { this.x = x; this.y = y; this.val = val; }\n        @Override\n        public int compareTo(Cell t) { return t.val - this.val; }\n    }\n}",
    "submit_ts": "1723907491",
    "subm_id": "1359110182"
}