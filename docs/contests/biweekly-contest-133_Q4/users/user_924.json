{
    "username": "himanshu_247",
    "submission": "class Solution {\npublic:\n    \n    \n    void bubbleSort(std::vector<int>& arr) {\n    int n = arr.size();\n    bool swapped;\n\n    // Traverse through all elements in the array\n    for (int i = 0; i < n - 1; ++i) {\n        swapped = false;\n\n        // Last i elements are already sorted\n        for (int j = 0; j < n - i - 1; ++j) {\n            if (arr[j] > arr[j + 1]) {\n                // Swap if the element found is greater than the next element\n                std::swap(arr[j], arr[j + 1]);\n                swapped = true;\n            }\n        }\n\n        // If no two elements were swapped in the inner loop, then break\n        if (!swapped) {\n            break;\n        }\n    }\n}\n    static const int MOD = 1'000'000'007;\n    static const int MAX_INV = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> reqMap;\n        for (const auto& req : requirements) {\n            reqMap[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        for (int length = 1; length <= n; ++length) {\n            for (int inv = 0; inv <= MAX_INV; ++inv) {\n                for (int pos = 0; pos < length; ++pos) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        dp[length][inv] = (dp[length][inv] + dp[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (reqMap.find(length) != reqMap.end()) {\n                int requiredInv = reqMap[length];\n                for (int inv = 0; inv <= MAX_INV; ++inv) {\n                    if (inv != requiredInv) {\n                        dp[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long totalPermutations = 0;\n        for (long long count : dp[n]) {\n            totalPermutations = (totalPermutations + count) % MOD;\n        }\n\n        return static_cast<int>(totalPermutations);\n    }\n};",
    "submit_ts": 1719071259.0
}