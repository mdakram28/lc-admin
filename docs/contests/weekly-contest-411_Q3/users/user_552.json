{
    "username": "Devansh Rawat",
    "submission": "long long power(long long x, long long y, long long mod){\n  if(y<0) return 0;\n  else if(y==0) return 1;\n  else if(y==1) return x;\n  else if(y%2) return (x*(power((x*x)%mod,y/2,mod)%mod))%mod;\n  else return power((x*x)%mod,y/2,mod)%mod;\n}\n\nclass Solution {\npublic:\n    int func(int pos, int md, vector<vector<int>> &dp, vector<int> &pw) {\n        int n = dp.size()-1, k = dp[0].size()-1;\n        if(pos==((n/2)+(n%2))) return dp[pos][md] = (md==0);\n        if(dp[pos][md]!=-1) return dp[pos][md];\n        int ans = 0;\n        for(int i = 0; i < 10; i++) {\n            if(pos==0&&i==0) continue;\n            int x = (pw[pos]*i)%k;\n            if(pos<(n/2)) x += ((pw[n-pos-1]*i)%k);\n            x %= k;\n            ans |= func(pos+1,(x+md)%k,dp,pw);\n        }\n        return dp[pos][md] = ans;\n    }\n    \n    void ff2(int pos, int md, vector<vector<int>>&dp, vector<int> &pw, string &ans) {\n        int n = dp.size()-1, k = dp[0].size()-1;\n        if(pos==((n/2)+(n%2))) return;\n        for(int i = 9; i >= 0; i--) {\n            if(pos==0&&i==0) continue;\n            int x = (pw[pos]*i)%k;\n            if(pos<(n/2)) x += ((pw[n-pos-1]*i)%k);\n            x %= k;\n            if(dp[pos+1][(x+md)%k]) {\n                ans += ((char)('0'+i));\n                ff2(pos+1,(x+md)%k,dp,pw,ans);\n                return;\n            }\n        }\n    }\n    \n    string largestPalindrome(int n, int k) {\n        vector<vector<int>> dp(n+1,vector<int>(k+1,-1));\n        vector<int> pw(n+1);\n        for(int i = 0; i < n; i++) {\n            long long x = power(10,i,k);\n            pw[i] = x;\n        }\n        int ans = func(0,0,dp,pw);\n        string res = \"\";\n        ff2(0,0,dp,pw,res);\n        string s = res;\n        if(n%2) s.pop_back();\n        reverse(s.begin(),s.end());\n        res += s;\n        return res;\n    }\n};",
    "submit_ts": "1723952661",
    "subm_id": "1359801569"
}