{
    "username": "tdkkdt",
    "submission": "public class Solution {\n    public int MaximumLength(int[] nums, int k) {\n        var dp = new Dictionary<(int, int), int>();\n        var max = new List<(int, int)>[k + 1];\n        for (int i = 0; i <= k; i++) {\n            max[i] = new ();\n        }\n        foreach(var n in nums) {\n            for (int i = k; i >= 0; i--) {\n                if (!dp.TryGetValue((i, n), out int a)) {\n                    a = 0;\n                }\n                int c = i == 0 ? -1 : SearchMax(max[i - 1], n);\n                var aa = Math.Max(c, a) + 1;\n                if (aa > a || i == 0) {\n                    aa = Math.Max(aa, 1);\n                    var mm = max[i];\n                    dp[(i, n)] = aa;\n                    mm.Add((n, aa));\n                    mm.Sort((a, b) => a.Item2.CompareTo(b.Item2));\n                    mm.Reverse();\n                    for (int j = mm.Count - 1; j >= 0; j--) {\n                        for (int q = j - 1; q >= 0; q--) {\n                            if (mm[j].Item1 == mm[q].Item1) {\n                                mm.RemoveAt(j);\n                                break;\n                            }\n                        }\n                    }\n                    if (mm.Count > 2) {\n                        mm.RemoveAt(2);\n                    }\n                }\n                // Console.WriteLine($\"n = {n}, i = {i}, aa = {aa}, max = {PrintMax(max)}\");\n            }\n        }\n        return max.SelectMany(m => m).Select(m => m.Item2).Max();\n    }\n    \n    static int SearchMax(List<(int, int)> max, int p) {\n        foreach(var (a, b) in max) {\n            if (a != p) {\n                return b;\n            }\n        }\n        return -1;\n    }\n    \n    static string PrintMax(List<(int, int)>[] max) {\n        return string.Join(\", \", max.Select(m => \"(\"+ string.Join(\", \", m.Select(mm => $\"[{mm.Item1}, {mm.Item2}]\"))+\")\"));\n    }\n}",
    "submit_ts": 1717861540.0
}