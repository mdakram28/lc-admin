{
    "username": "disandrewed",
    "submission": "bool isDivisibleBy7(const string& numStr) {\n    long long remainder = 0;\n    for (char digit : numStr) {\n        remainder = (remainder * 10 + (digit - '0')) % 7;\n    }\n    return remainder == 0;\n}\n\nvoid decrementStringNumber(string& numStr) {\n    int len = numStr.length();\n    for (int i = len - 1; i >= 0; --i) {\n        if (numStr[i] > '0') {\n            numStr[i]--;\n            break;\n        } else {\n            numStr[i] = '9';\n        }\n    }\n\n    if (numStr[0] == '0') {\n        numStr.erase(0, 1);\n    }\n}\n\nstring largestPalindromicDivisibleBy7(int n) {\n    if (n == 1) return \"7\";\n\n    string half = string((n + 1) / 2, '9');  \n    string palindrome = half + string(half.rbegin() + (n % 2), half.rend());\n\n    while (true) {\n        if (isDivisibleBy7(palindrome)) {\n            return palindrome;\n        }\n\n        decrementStringNumber(half);\n\n        palindrome = half + string(half.rbegin() + (n % 2), half.rend());\n    }\n    \n    return \"SIKE\";\n}\n\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if (n == 1) {\n            if (k == 1 || k == 3 || k == 9) {\n                return \"9\";\n            } else if (k == 2 || k == 8 || k == 4) {\n                return \"8\";\n            } else if (k == 5) {\n                return \"5\";\n            } else if (k == 6) {\n                return \"6\";\n            } else if (k == 7) {\n                return \"7\";\n            }\n        }\n\n        if (k == 1 || k == 3 || k == 9) {\n            return string(n, '9');\n            \n        } else if (k == 2) {\n            return \"8\" + string(n-2, '9') + \"8\";\n            \n        } else if (k == 4) {\n            if (n == 2) {\n                return \"88\";\n            } else if (n == 3) {\n                return \"888\";\n            }\n            return \"88\" + string(n-4, '9') + \"88\";\n            \n        } else if (k == 5) {\n            return \"5\" + string(n-2, '9') + \"5\";\n            \n        } else if (k == 6) {  \n            if (n == 2) {\n                return \"66\";\n            } else if (n == 3) {\n                return \"888\";\n            }\n            \n            if (n % 2 == 0) {\n                return \"8\" + string((n-3)/2, '9') + \"77\" + string((n-3)/2, '9') + \"8\";\n            } else {\n                return \"8\" + string((n-3)/2, '9') + \"8\" + string((n-3)/2, '9') + \"8\";\n            }\n            \n            \n        } else if (k == 7) {\n            return largestPalindromicDivisibleBy7(n);\n            \n        } else if (k == 8) {\n            if (n == 2) {\n                return \"88\";\n            } else if (n == 3) {\n                return \"888\";\n            } else if (n == 4) {\n                return \"8888\";\n            } else if (n == 5) {\n                return \"88888\";\n            }\n            return \"888\" + string(n-6, '9') + \"888\";\n            \n        }\n        \n        return \"0\";\n    }\n};",
    "submit_ts": "1723952978",
    "subm_id": "1359809338"
}