{
    "username": "pruthak_jani05",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        count = 0\n        alternating = [0] * n\n        \n        for i in range(1, k):\n            if colors[i] != colors[i-1]:\n                alternating[i] = alternating[i-1] + 1\n        \n        if alternating[k-1] == k-1:\n            count += 1\n        \n        for i in range(k, n + k - 1):\n            idx = i % n\n            prev_idx = (i - 1) % n\n            start_idx = (i - k + 1) % n\n            \n            if colors[idx] != colors[prev_idx]:\n                alternating[idx] = alternating[prev_idx] + 1\n            else:\n                alternating[idx] = 0\n            \n            if alternating[idx] - alternating[start_idx] == k - 1:\n                count += 1\n        \n        return count",
    "submit_ts": "1720277771",
    "subm_id": "1311679206"
}