{
    "username": "dxtkastb",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        HashMap<Integer,Integer> map = new HashMap<>();\n        int length = nums.length;\n        int max = 0, freq = 0;\n        for(int i = 0; i < length/2 ; i++) {\n            int diff = Math.abs(nums[i] - nums[length - i - 1]);\n            map.put(diff,map.getOrDefault(diff,0)+1);\n            max = diff;\n        }\n        PriorityQueue<Integer> q = new PriorityQueue<>((a,b) -> Integer.compare(map.get(b),map.get(a)));\n\n        for(int key : map.keySet()) {\n            if(key > k) continue; \n            q.add(key);\n        }\n\n        int count = Integer.MAX_VALUE;\n\n        while(q.size() > 0) {\n            int diff = q.poll();\n            int pc = 0;\n            for(int i = 0; i < length/2 ; i++) {\n                int dd = Math.abs(nums[i] - nums[length - i - 1]);\n                if(dd == diff) continue;\n                if(dd > k) {\n                   // System.out.println(diff+\"::: > diff\" + dd);\n                    pc += 2;\n                }\n                else {\n                    // System.out.println(diff+\"::: < diff\" + dd);\n                    int mino = Math.min(nums[i],nums[length- i - 1]);\n                    int maxo = Math.max(nums[i],nums[length- i - 1]);\n                    if(maxo - diff >= 0) pc++;\n                    else if(mino + diff <= k) pc++;\n                    else pc += 2;\n                }\n            }\n            //System.out.println(diff+\">>>>\"+pc);\n            if(pc <= count) count = pc;\n            else break;\n        }\n\n        return count;\n\n    }\n\n}",
    "submit_ts": "1721490429",
    "subm_id": "1327482367"
}