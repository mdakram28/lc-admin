{
    "username": "leftshifted",
    "submission": "from typing import List\nfrom collections import defaultdict\nfrom collections import Counter\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n\n        # for row in grid: print(*row)\n\n        oc = tc = choice = 0\n        n, m = len(grid), len(grid[0])\n        dist = defaultdict(list)\n        \n        for i in range(n):\n            for j in range(m):\n                vdist = min(i, n-1-i)\n                hdist = min(j, m-1-j)\n                dist[(hdist, vdist)].append(grid[i][j])\n\n        # for group in dist.values():\n        #     print(group)\n        \n        tot = 0\n        for group in dist.values():\n            ctr = Counter(group)\n            if len(group) == 4: tot += min(ctr[0], ctr[1])\n            if len(group) == 2: \n                if ctr[0] == 2: continue\n                if ctr[1] == 2: tc += 1\n                else: choice += 1\n            if len(group) == 1: \n                if group[0]: oc += 1\n            # print(group, tot)\n\n        tc = tc & 1\n\n        # print(\">\",tot, oc, tc, choice)\n            \n        if tc == oc == 0: return tot + choice\n        if (tc, oc) == (0, 1): return tot + choice + 1\n        if (tc, oc) == (1, 0): \n            if choice >= tc: return tot + choice\n            return tot + choice + 2\n        if tc == oc == 1: \n            if choice >= oc: return tot + choice + 1\n            return tot + choice + 3",
    "submit_ts": "1722699065",
    "subm_id": "1343200427"
}