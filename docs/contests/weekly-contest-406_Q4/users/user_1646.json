{
    "username": "hs1239",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long ans = 0;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int count1 = 0, count2 = 0;\n        int temp1 = m-2, temp2 = n-2;\n        while(temp1>=0&&temp2>=0){\n            if(horizontalCut[temp1]>verticalCut[temp2]){\n                ans += (long)horizontalCut[temp1]*(long)(n-1-temp2);\n                temp1--;\n            }else{\n                ans += (long)verticalCut[temp2]*(long)(m-1-temp1);\n                temp2--;\n            }\n        }\n        if(temp1>=0){\n            for(int j=temp1;j>=0;j--){\n                ans += (long)horizontalCut[j]*(long)n;\n            }\n        }\n        if(temp2>=0){\n            for(int j=temp2;j>=0;j--){\n                ans += (long)verticalCut[j]*(long)m;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926030",
    "subm_id": "546443581"
}