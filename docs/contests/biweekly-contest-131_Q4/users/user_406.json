{
    "username": "never_seen",
    "submission": "struct node{\n    int pre = 0, suf = 0, maxi = 0, cnt = 0;\n    node(){}\n    node(int u){pre = suf = maxi = u, cnt = 1;}\n};\nconst int n = 5e4;\nnode seg[2 * n + 4];\ntemplate <class T> class ST{\nprivate: const T O{};\n    T op(T x, T y){\n        T f; f.pre = x.pre, f.suf = y.suf;\n        if (x.cnt == x.pre) f.pre += y.pre;\n        if (y.cnt == y.suf) f.suf += x.suf;\n        f.maxi = max({f.pre, y.maxi, x.maxi, x.suf + y.pre});\n        f.cnt = x.cnt + y.cnt;\n        return f;\n    }\n    void push(int p){seg[p] = op(seg[p << 1], seg[p << 1 | 1]);}\npublic: void update(int p, T val){for (seg[p += n] = val, p >>= 1; p; p >>= 1) push(p);}\n    T query(int l, int r){\n        T ra = O, rb = O;\n        for (l += n, r += n + 1; l < r; l >>= 1, r >>= 1) {\n            if (l & 1) ra = op(ra, seg[l++]);\n            if (r & 1) rb = op(seg[--r], rb);\n        }\n        return op(ra, rb);\n    }\n    T query(int p){return query(p, p);}\n    void build(){\n        for (int i = n; i < 2 * n; i++) seg[i] = T(1);\n        for (int i = n - 1; i > 0; --i) push(i);\n    }\n};\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int mx = 4e5;\n        ST<node> seg;\n        // for (int i = 1; i <= mx; i++) seg.update(i, 1);\n        seg.build();\n        vector<bool> ans;\n        for (auto &e : queries){\n            if (e[0] == 1) seg.update(e[1], 0);\n            else{\n                int z = seg.query(1, e[1] - 1).maxi;\n                ans.push_back(z + 1 >= e[2]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716650635.0
}