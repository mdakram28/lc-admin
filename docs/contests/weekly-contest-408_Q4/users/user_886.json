{
    "username": "ghusingahimanshu",
    "submission": "class Solution {\npublic:\n    int l=0,u=1,r=2,d=3;\n    void trytoblock(int i, int j, vector<vector<bool>> & walls){\n        for(int w=0; w<4; w++){\n            walls[i][w] = walls[i][w] || walls[j][w];\n            walls[j][w] = walls[i][w];\n        }\n        \n    }\n    bool touching(vector<vector<int>>& circles, int i, int j){\n        \n        double distance = sqrt(pow(circles[i][0] - circles[j][0], 2) + pow(circles[i][1] - circles[j][1], 2));\n        double radiusSum = circles[i][2] + circles[j][2];\n        \n\n        return distance<=radiusSum;\n    }\n    bool allwalls_blocked(vector<vector<bool>>& walls, int i){\n        if(walls[i][l] && walls[i][r]) return true;\n        else if(walls[i][u] && walls[i][d]) return true;\n        else if( walls[i][l] && walls[i][d]) return true;\n        else if(walls[i][u] && walls[i][r]) return true;\n        return false;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<bool>> walls(n, vector<bool>(4,false));\n        \n        for(int i=0; i<n ;i++){\n            int x =circles[i][0];\n            int y =circles[i][1];\n            int rad =circles[i][2];\n            if(rad>=x) walls[i][l] = true; // left wall\n            if(rad+x>=X) walls[i][r] =true; // right wall\n            if(rad>=y) walls[i][d] = true; //down wall\n            if(rad+y>=Y) walls[i][u] = true; // up wall\n            \n        }\n        for(int i=0; i<n; i++){\n            for(int j=i; j<n; j++){\n                if (touching(circles,i,j)){\n                    trytoblock(i,j,walls);\n                }\n                if(allwalls_blocked(walls,j)){\n                    return false;}\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722139179",
    "subm_id": "1335810235"
}