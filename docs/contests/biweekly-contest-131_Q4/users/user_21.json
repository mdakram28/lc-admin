{
    "username": "jolly-joliotvvj",
    "submission": "struct segtree{\n    #define ls(x) x << 1\n    #define rs(x) x << 1 | 1\n\n    struct node{\n        int l, r, mid, mx;\n    }tr[50010 << 2];\n\n    void pushup(node & a, node & b, node & c){\n        a.mx = max(b.mx, c.mx);\n    }\n    void pushup(int u){\n        pushup(tr[u], tr[ls(u)], tr[rs(u)]);\n    }\n\n    void build(int u, int l, int r)\n    {\n        if(l == r)\n            tr[u] = {l, r, l + r >> 1, 0};\n        else{\n            tr[u] = {l, r, l + r >> 1, 0};\n            int mid = tr[u].mid;\n            build(ls(u), l, mid), build(rs(u), mid + 1, r);\n            pushup(u);\n        }\n    }\n\n    node query(int u, int l, int r)\n    {\n        if(tr[u].l >= l && tr[u].r <= r) return tr[u];\n        else\n        {\n            int mid = tr[u].mid;\n            if(r <= mid) return query(ls(u), l, r);\n            else if(l >= mid + 1) return query(rs(u), l, r);\n            else{\n                node Ln = query(ls(u), l, r), Rn = query(rs(u), l, r);\n                node res; pushup(res, Ln, Rn);\n                return res;\n            }\n        }\n    }\n\n    void modify(int u, int id, int x)\n    {\n        if(tr[u].l == tr[u].r)\n            tr[u].mx = x;\n        else{\n            int mid = tr[u].mid;\n            if(id <= mid) modify(ls(u), id, x);\n            else modify(rs(u), id, x);\n            pushup(u);\n        }\n    }\n};\n\nsegtree tr;\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        tr.build(1, 0, 5e4);\n        int m = queries.size();\n        vector<bool> ans;\n        set<int> ids = {0};\n        for(int i = 0; i < m; i ++ ) {\n            auto v = queries[i];\n            int op = v[0];\n            if(op == 1) {\n                int x = v[1];\n                auto it = ids.insert(x).first;\n                int len = x - *prev(it);\n                tr.modify(1, x, len);\n                it ++ ;\n                if(it != ids.end()) {\n                    tr.modify(1, *it, *it - x);\n                }\n            } else {\n                int x = v[1], sz = v[2];\n                auto it = -- ids.upper_bound(x);\n                int maxl = max(x - *it, tr.query(1, 0, x).mx);\n                ans.push_back(sz <= maxl);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716648999.0
}