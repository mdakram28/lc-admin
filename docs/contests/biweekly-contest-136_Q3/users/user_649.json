{
    "username": "looooooooong",
    "submission": "public class Solution {\n  public int MinFlips(int[][] grid) {\n    var m = grid.Length;\n    var n = grid[0].Length;\n    var count = 0;\n\n    for (var i = m / 2 - 1; i >= 0; i--) {\n      for (var j = n / 2 - 1; j >= 0; j--) {\n        var c = grid[i][j] + grid[m - i - 1][j] + grid[i][n - j - 1] + grid[m - i - 1][n - j - 1];\n        count += c switch {\n          1 => 1,\n          2 => 2,\n          3 => 1,\n          _ => 0,\n        };\n      }\n    }\n\n    var middleCount = 0;\n    var pairCount = 0;\n\n    if (m % 2 == 1) {\n      var i = m / 2;\n\n      for (var j = n / 2 - 1; j >= 0; j--) {\n        if (grid[i][j] != grid[i][n - j - 1]) {\n          middleCount++;\n        } else if (grid[i][j] == 1) {\n          pairCount++;\n        }\n      }\n    }\n\n    if (n % 2 == 1) {\n      var j = n / 2;\n\n      for (var i = m / 2 - 1; i >= 0; i--) {\n        if (grid[i][j] != grid[m - i - 1][j]) {\n          middleCount++;\n        } else if (grid[i][j] == 1) {\n          pairCount++;\n        }\n      }\n    }\n\n    if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1) {\n      count++;\n    }\n\n    if (pairCount % 2 == 1 && middleCount == 0) {\n      count += 2;\n    }\n\n    return count + middleCount;\n  }\n}\n",
    "submit_ts": "1722697771",
    "subm_id": "1343158348"
}