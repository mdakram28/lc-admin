{
    "username": "chenjarjar",
    "submission": "def f(a,b):\n    return abs(a[0]-b[0])+abs(a[1]-b[1])\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        mm = set()\n        m = set()\n        for a,b in points:\n            if (a,b) not in mm:\n                mm.add((a,b))\n            else:\n                m.add((a,b))\n\n        points.sort(key=lambda x: x[0]+x[1])\n        t = []\n        t += [points[0],points[1],points[-2],points[-1]]\n        points.sort(key=lambda x: x[0]-x[1])\n        t += [points[0],points[1],points[-2],points[-1]]\n        ans = inf\n        for z in t:\n            cur = 0\n            for x in t:\n                if (z[0],z[1]) not in m and x == z:\n                    continue\n                for y in t:\n                    if x == y or (z[0],z[1]) not in m and y == z:\n                        continue\n                    cur = max(cur,f(x,y))\n            ans = min(ans,cur)\n        return ans"
}