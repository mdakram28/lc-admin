{
    "username": "shaunak_03",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int alpha = 0;\n        for (int i = 0; i < n / 2; i++)\n        {\n            for (int j = 0; j < m / 2; j++)\n            {\n                vector<int>v;\n                v.push_back(grid[i][j]);\n                v.push_back(grid[n - i - 1][j]);\n                v.push_back(grid[i][m - j - 1]);\n                v.push_back(grid[n - i - 1][m - j - 1]);\n                int c=0;\n                for(int i=0;i<v.size();i++)\n                {\n                    if(v[i]==1)\n                    {\n                        c++;\n                    }\n                }                \n                alpha += min(c, 4 - c);\n            }\n        }\n        int p = 0;\n        int ct = 0;\n        if (n % 2 != 0) {\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    alpha += 1;\n                    p += 1;\n                } else {\n                    if (grid[n / 2][j] == 1) {\n                        ct += 1;\n                    }\n                }\n            }\n        }\n        if (m % 2 != 0) {\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    alpha += 1;\n                    p += 1;\n                } else {\n                    if (grid[i][m / 2] == 1) {\n                        ct += 1;\n                    }\n                }\n            }\n        }\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            alpha += 1;\n        }\n        if (p == 0 && ct % 2 != 0) {\n            alpha += 2;\n        }\n        return alpha;\n    }\n};\n",
    "submit_ts": "1722700013",
    "subm_id": "1343229099"
}