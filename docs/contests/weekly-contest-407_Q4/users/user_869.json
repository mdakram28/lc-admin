{
    "username": "__L__",
    "submission": "#define ll long long \n#define pb push_back\n\nconst int sz=1e5+5;\n\n\nclass Solution {\npublic:\n\n\n    pair<ll,ll>v[sz];\n    pair<ll,ll>Tree[4*sz];\nvoid buildTree(int tidx, int lo, int hi){\n\n\tif(lo==hi){\n\t\tTree[tidx] = v[hi];\n\t\treturn;\n\t}\n\n\tint mid = (lo+hi)/2;\n\n\tbuildTree(2*tidx+1, lo, mid);\n\tbuildTree(2*tidx+2, mid+1, hi);\n\n\tTree[tidx] = min(Tree[2*tidx+1] , Tree[2*tidx+2]);\n\n}\n\nvoid updateTree(int tidx, int lo, int hi, int idx, pair<ll,ll> val){\n\n\tif(lo==hi){\n\t\tTree[tidx] = val;\n\t\treturn;\n\t}\n\n\tint mid = (lo+hi)/2;\n\n\tif(idx<=mid)\n\t\tupdateTree(2*tidx+1, lo, mid, idx, val);\n\telse\n\t\tupdateTree(2*tidx+2, mid+1, hi, idx, val);\n\n\tTree[tidx] =min(Tree[2*tidx+1] , Tree[2*tidx+2]);\n\n}\n\npair<ll,ll> query(int tidx, int lo, int hi, int L, int R){\n\n\t// The Range which we are currently in : [lo, hi]\n\t// The Range of which we have to compute the answer : [L, R]\n\n\t// Outside Range\n\tif( R<lo || L>hi )\n\t\treturn {INT_MAX,INT_MAX};\n\n\t// In Range\n\tif( lo>=L && hi<=R )\n\t\treturn Tree[tidx];\n\n\t// Partial Overlap\n\tint mid = (lo+hi)/2;\n\tpair<ll,ll> leftans = query(2*tidx+1, lo, mid, L, R);\n\tpair<ll,ll> rightans = query(2*tidx+2, mid+1, hi, L, R);\n\n\treturn min(leftans, rightans);\n\n}\n\n\n    ll solverec(vector<ll>&arr,int s, int e,int op,int n){\n        if(s>e){\n            return 0;\n        }\n        ll ans=0;\n        pair<ll,ll>p=query(0,0,n-1,s,e);\n       // cout<<p.first<<\" \"<<p.second<<endl;\n       // return 0;\n        ll dif=p.first;\n        int ind=p.second;\n        if(dif==op){\n            ans+=solverec(arr,s,ind-1,op,n)+solverec(arr,ind+1,e,op,n);\n        }\n        else{\n            ans+=(dif-op)+solverec(arr,s,ind-1,op+(dif-op),n)+solverec(arr,ind+1,e,op+(dif-op),n);\n        }\n        return ans;\n    }\n\n    ll solve(vector<ll>&arr){\n        //cout<<\"arr is\"<<endl;\n        // for(auto it:arr){\n        //     cout<<it<<\" \";\n        // }\n        // cout<<endl;\n        int n=arr.size();\n        for(int i=0;i<n;i++){\n            v[i]={arr[i],i};\n        }\n        buildTree(0,0,n-1);\n        //return 0;\n       return solverec(arr,0,n-1,0,n);\n\n    }\n\n    long long minimumOperations(vector<int>& arr, vector<int>& target) {\n        int n=arr.size();\n        vector<vector<ll>>inc;\n        for(int i=0;i<n;i++){\n            vector<ll>temp;\n            if(arr[i]>target[i]){\n                continue;\n            }\n            int j=i;\n            for( j=i;j<n;j++){\n                if(arr[j]<=target[j]){\n                    temp.pb(target[j]-arr[j]);\n                }\n                else{\n                    break;\n                }\n            }\n            i=j;\n            inc.pb(temp);\n        }\n\n        ll ans=0;\n        for(auto it:inc){\n           ans+=solve(it);\n        }\n\n        vector<vector<ll>>dec;\n\n        for(int i=0;i<n;i++){\n            vector<ll>temp;\n            if(arr[i]<=target[i]){\n                continue;\n            }\n            int j=i;\n            for( j=i;j<n;j++){\n                if(arr[j]>target[j]){\n                    temp.pb(-1*target[j]+arr[j]);\n                }\n                else{\n                    break;\n                }\n            }\n            i=j;\n            dec.pb(temp);\n        }\n        for(auto it:dec){\n        ans+=solve(it);\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1721532007",
    "subm_id": "1327975361"
}