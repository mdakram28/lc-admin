{
    "username": "whynot4",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int bit[] = new int[31];\n        int left = 0;\n        int ans = Integer.MAX_VALUE;\n        for (int right=0; right<nums.length; right++) {\n            mergeBits(bit, nums[right], 1);\n            //System.out.println(left + \" \" + right + \" \" + Arrays.toString(bit));\n            int x = compute(bit, (right-left+1));\n            ans = Math.min(ans, Math.abs(x- k));\n            //System.out.println(\"x = \" + x);\n            \n            while (left < right && x < k) {\n                mergeBits(bit, nums[left], -1);\n                left++;\n                x = compute(bit, (right-left+1));\n                //System.out.println(\"here \" + left + \" \" + right + \" => x = \" + x);\n                ans = Math.min(ans, Math.abs(x- k));\n            }\n\n            if (left > 0) {\n                left--;\n                mergeBits(bit, nums[left], 1);\n            }\n            \n        }\n        return ans;\n    }\n\n    int compute(int[] bit, int expected) {\n        int ans = 0;\n        for (int i=0; i<bit.length; i++) {\n            if (bit[i] == expected) {\n                ans |= (1<<i);\n            }\n        }\n        return ans;\n    }\n\n    void mergeBits(int[] bit, int n, int delta) {\n        for (int i=0; i<31; i++) {\n            if (((n>>i)&1)==1) {\n                bit[i] += delta;\n            }\n        }\n    }\n}",
    "submit_ts": "1717298475",
    "subm_id": "1274780356"
}