{
    "username": "VictorVictini",
    "submission": "public class Solution {\n    public long MaximumValueSum(int[][] board) {\n        int m = board.Length, n = board[0].Length;\n        int k = 3;\n        bool[] visited = new bool[n];\n        int[,] topThree = new int[m, k];\n        for (int row = 0; row < m; row++) {\n            for (int i = 0; i < k; i++) {\n                topThree[row, i] = -1;\n            }\n        }\n        for (int row = 0; row < m; row++) {\n            for (int col = 0; col < n; col++) {\n                if (topThree[row, 0] == -1 || board[row][col] > board[row][topThree[row, 0]]) {\n                    topThree[row, 2] = topThree[row, 1];\n                    topThree[row, 1] = topThree[row, 0];\n                    topThree[row, 0] = col;\n                } else if (topThree[row, 1] == -1 || board[row][col] > board[row][topThree[row, 1]]) {\n                    topThree[row, 2] = topThree[row, 1];\n                    topThree[row, 1] = col;\n                } else if (topThree[row, 2] == -1 || board[row][col] > board[row][topThree[row, 2]]) {\n                    topThree[row, 2] = col;\n                }\n            }\n        }\n        long res = long.MinValue;\n        BruteForce(0, k, 0);\n        return res;\n        void BruteForce(int row, int left, long sum) {\n            if (left == 0) {\n                res = Math.Max(res, sum);\n                return;\n            }\n            if (row >= m) return;\n            BruteForce(row + 1, left, sum);\n            for (int i = 0; i < k; i++) {\n                if (visited[topThree[row, i]]) continue;\n                visited[topThree[row, i]] = true;\n                BruteForce(row + 1, left - 1, sum + (long)board[row][topThree[row, i]]);\n                visited[topThree[row, i]] = false;\n            }\n        }\n    }\n}",
    "submit_ts": "1723909005",
    "subm_id": "1359175817"
}