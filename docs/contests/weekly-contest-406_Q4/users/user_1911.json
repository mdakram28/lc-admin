{
    "username": "arkyli",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        cost = 0\n        h_pieces = 1\n        v_pieces = 1\n\n        h = sorted([(horizontalCut[i], i) for i in range(len(horizontalCut))])[::-1]\n        v = sorted([(verticalCut[i], i) for i in range(len(verticalCut))])[::-1]\n\n        i = 0 #h counter\n        j = 0 #v counter\n\n        while i < len(h) or j < len(v):\n            if i >= len(h) or (j < len(v) and h[i][0] < v[j][0]):\n                cost += v[j][0] * v_pieces\n                h_pieces += 1\n                #print(v[j][0])\n                j += 1\n            else:\n                cost += h[i][0] * h_pieces\n                v_pieces += 1\n                #print(h[i][0])\n                i += 1\n        \n        return cost",
    "submit_ts": "1720926227",
    "subm_id": "1320279749"
}