{
    "username": "lokeshrajput5473",
    "submission": "class SegmentTree {\npublic:\n    SegmentTree(vector<int>& data) {\n        n = data.size();\n        tree.resize(5 * n);\n        build(data);\n    }\n\n    void update(int index, int value) {\n        index += n;  // Shift the index to the leaf\n        tree[index] = value;\n        while (index > 1) {\n            index /= 2;\n            tree[index] = tree[2 * index] + tree[2 * index + 1];\n        }\n    }\n\n    int rangeSum(int left, int right) {\n        if(right < left) return 0;\n        left += n;  // Shift the index to the leaf\n        right += n;  // Shift the index to the leaf\n        int sum = 0;\n        while (left <= right) {\n            if (left % 2 == 1) {\n                sum += tree[left];\n                left++;\n            }\n            if (right % 2 == 0) {\n                sum += tree[right];\n                right--;\n            }\n            left /= 2;\n            right /= 2;\n        }\n        return sum;\n    }\n\nprivate:\n    int n;\n    vector<int> tree;\n\n    void build(vector<int>& data) {\n        for (int i = 0; i < n; ++i) {\n            tree[n + i] = data[i];\n        }\n        for (int i = n - 1; i > 0; --i) {\n            tree[i] = tree[2 * i] + tree[2 * i + 1];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> data(n, 0);\n        vector<int>ans;\n        \n        for(int i=0;i<n;i++) {\n            if(i!=0 && i!=n-1 && nums[i] > nums[i+1] && nums[i] > nums[i-1]) {\n                data[i] = 1;\n            }\n        }\n        SegmentTree segTree(data);\n        \n        for(auto vec:queries) {\n            if(vec[0] == 2) {\n                int i = vec[1];\n                nums[i] = vec[2];\n                \n                if(i!=0 && i!=n-1 && nums[i] > nums[i+1] && nums[i] > nums[i-1]) {\n                    segTree.update(i, 1);\n                }else {\n                    segTree.update(i, 0);\n                }\n                \n                i --;\n                if(i>0 && i!=n-1 && nums[i] > nums[i+1] && nums[i] > nums[i-1]) {\n                    segTree.update(i, 1);\n                }else {\n                    segTree.update(i, 0);\n                }\n                \n                i += 2;\n                if(i>0 && i<(n-1) && nums[i] > nums[i+1] && nums[i] > nums[i-1]) {\n                    segTree.update(i, 1);\n                }else {\n                    segTree.update(i, 0);\n                } \n            }else {\n                ans.push_back(segTree.rangeSum(vec[1]+1, vec[2]-1));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507210.0
}