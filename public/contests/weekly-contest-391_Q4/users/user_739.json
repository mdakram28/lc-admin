{
    "username": "subodhr2001",
    "submission": "class Solution {\npublic:\n    vector<int> maxDist(vector<vector<int>>& A, int debarr)\n    {\n        // Variables to track running extrema\n        int minsum, maxsum, mindiff, maxdiff, mins, maxs, mind, maxd, N = A.size(), i;\n        if(debarr == 0){\n            minsum = maxsum = A[1][0] + A[1][1];\n            mindiff = maxdiff = A[1][0] - A[1][1];\n            i = 2;\n            mins = maxs = mind = maxd = 1;\n        }\n        else{\n            minsum = maxsum = A[0][0] + A[0][1];\n            mindiff = maxdiff = A[0][0] - A[0][1];\n            i = 1;\n            mins = maxs = mind = maxd = 0;\n        }\n        \n        for (; i < N; i++) {\n            if(i == debarr){\n                continue;\n            }\n            int sum = A[i][0] + A[i][1];\n            int diff = A[i][0] - A[i][1];\n            \n            if (sum < minsum){\n                minsum = sum;\n                mins = i;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;\n                maxs = i;\n            }\n            \n            if (diff < mindiff){\n                mindiff = diff;\n                mind = i;\n            }\n            else if (diff > maxdiff){\n                maxdiff = diff;\n                maxd = i;\n            }\n                \n        }\n        \n        int maximum = max(maxsum - minsum, maxdiff - mindiff);\n        // so there are 4 possible points. Do this for all 4 points by removing them and trying to find the max distance again.\n\n        return {maximum, mins, maxs, mind, maxd};\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        // first find the points which have the maximum distance between them.\n        // then remove either of them and check the maximum distance again.\n        int res = INT_MAX;\n        vector<int> v = maxDist(points, -1);\n        for(int i=1; i<5; i++){\n            //debarr each of these points.\n            res = min(res, maxDist(points, v[i])[0]);\n        }\n        \n        return res;\n    }\n};"
}