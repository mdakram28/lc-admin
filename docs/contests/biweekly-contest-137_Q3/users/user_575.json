{
    "username": "YiXia",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        import numpy as np\n        from scipy.optimize import linear_sum_assignment\n        m = len(board)\n        n = len(board[0])\n        if n > m:\n            another_board = [[board[j][i] for j in range(m)] for i in range(n)]\n            return self.maximumValueSum(another_board)\n        result = -inf\n        cur = -inf\n        pos = (-1, -1)\n        for i in range(m):\n            for j in range(n):\n                if board[i][j] > cur:\n                    cur = board[i][j]\n                    pos = (i, j)\n        \n        k = pos[0]\n        for i in range(m - 1):\n            for j in range(i + 1, m):\n                if i != k and j != k:\n                    cost = np.array([board[i], board[j], board[k]])\n                    r, c = linear_sum_assignment(cost, maximize=True)\n                    result = max(result, board[i][c[0]] + board[j][c[1]] + board[k][c[2]])\n        return result",
    "submit_ts": "1723909837",
    "subm_id": "556338201"
}