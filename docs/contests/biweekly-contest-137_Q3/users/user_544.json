{
    "username": "Nikhil Pratap Singh",
    "submission": "class Solution {\npublic:\n    long long rec(vector<vector<pair<int, int> >>& rowMax, vector<bool>& rook, int rowInd, int rookCount)\n    {\n        if(rookCount == 0) return 0;\n        if(rowInd == rowMax.size()) return LLONG_MIN;\n\n        long long ans = LLONG_MIN;\n       \n        // place\n        for(int i=0; i<3; i++)\n        {\n            if(rook[rowMax[rowInd][i].second] == false)\n            {\n                // try placing\n                rook[rowMax[rowInd][i].second] = true;\n                long long curAns = rec(rowMax, rook, rowInd+1, rookCount-1);\n                if(curAns != LLONG_MIN) ans = max(ans, (long long)rowMax[rowInd][i].first + curAns);\n                rook[rowMax[rowInd][i].second] = false;\n            }\n        }\n\n        ans = max(ans, rec(rowMax, rook, rowInd+1, rookCount));\n\n        return ans;\n    }\n\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long m = board[0].size();\n        vector<bool>rook(m, false);\n\n        vector<vector<pair<int, int> >>rowMax(board.size());\n        for(int i=0; i<board.size(); i++)\n        {\n            \n            for(int j=0; j<board[0].size(); j++)\n            {\n                rowMax[i].push_back({board[i][j], j});\n            }\n\n            sort(rowMax[i].begin(), rowMax[i].end());\n            reverse(rowMax[i].begin(), rowMax[i].end());\n        }\n\n        return rec(rowMax, rook, 0, 3);\n    }\n};",
    "submit_ts": "1723907699",
    "subm_id": "1359120256"
}