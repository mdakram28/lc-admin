{
    "username": "sudhanshu_090",
    "submission": "class Solution {\npublic:\n    int findfor(vector<vector<int>> &points, int to_avoid, int n){\n        vector<int> v1,v2;\n        for (int i{};i<n;i++){\n            if(i == to_avoid) continue;\n            \n            auto x = points[i];\n            int a = x[0] + x[1];\n            int b = x[0] - x[1];\n            v1.push_back(a);\n            v2.push_back(b);\n        }\n        sort(v1.begin(), v1.end());        \n        sort(v2.begin(), v2.end());\n        \n        int a = v1.back() - v1.front();\n        int b = v2.back() - v2.front();\n        \n        return max(a, b);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<int>> diff;   //{(x-y) , x, y}\n        vector<vector<int>> sum;    //{(x+y) , x, y}\n        \n        for (int i{};i<n;i++){\n            diff.push_back({points[i][0]-points[i][1] , i});\n            sum.push_back({points[i][0]+points[i][1] , i});\n        }\n        \n        sort(diff.begin(),diff.end());\n        sort(sum.begin(),sum.end());\n        \n        int d1 = diff[n-1][0] - diff[0][0];\n        int d2 = sum[n-1][0] - sum[0][0];\n        \n        int ans = 1e9;\n        if(d1 >= d2){\n            int x1 = findfor(points, diff[n-1][1], n);\n            int x2 = findfor(points, diff[0][1], n);\n            ans = min(x1,x2);\n        }\n        else{\n            int x1 = findfor(points, sum[n-1][1], n);\n            int x2 = findfor(points, sum[0][1], n);\n            ans = min(x1,x2);\n        }\n        return ans;\n    }\n};"
}