{
    "username": "nikhilnyalakanti2003",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] hor, int[] ver) {\n        PriorityQueue<Integer> p1=new PriorityQueue<>((a,b)->b-a);      \n        PriorityQueue<Integer> p2=new PriorityQueue<>((a,b)->b-a);\n        for(int ele:hor) p1.add(ele);     \n        for(int ele:ver) p2.add(ele);\n        long ans=0;\n        long ho=1,ve=1;\n        while(p1.size()>0 && p2.size()>0){\n            if(p1.peek()<p2.peek()){\n                ans+=p2.poll()*ho;\n                ve++;\n            }\n            else{\n                ans+=p1.poll()*ve;\n                ho++;\n            }\n        }\n        while(!p1.isEmpty()) ans+=p1.poll()*ve;    \n        while(!p2.isEmpty()) ans+=p2.poll()*ho;\n        return ans;\n    }\n}",
    "submit_ts": "1720925962",
    "subm_id": "1320271725"
}