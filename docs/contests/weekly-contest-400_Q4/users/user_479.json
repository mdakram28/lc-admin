{
    "username": "rp3601",
    "submission": "struct SegTree{\npublic: \n\tSegTree(int _n) : n(_n){\n\t\tt.resize(4*n);\n\t}\n\tint query(int l, int r){\n\t\treturn query(1, 0, n-1, l, r);\n\t}\n\t\n\tvoid build(const vector<int> &a, int v, int tl, int tr) {\n\t\tif (tl == tr) {\n\t\t\tt[v] = a[tl];\n\t\t} else {\n\t\t\tint tm = (tl + tr) / 2;\n\t\t\tbuild(a, v*2, tl, tm);\n\t\t\tbuild(a, v*2+1, tm+1, tr);\n\t\t\tt[v] = t[v*2] & t[v*2+1];\n\t\t}\n\t}\nprivate: \n\tvector<int> t;\n\tint n;\n\n\tint query(int v, int tl, int tr, int l, int r){\n\t\tif (l > r) \n\t\t\treturn INT_MAX;\n\t\tif (l == tl && r == tr) {\n\t\t\treturn t[v];\n\t\t}\n\t\tint tm = (tl + tr) / 2;\n\t\treturn query(v*2, tl, tm, l, min(r, tm))\n\t\t\t& query(v*2+1, tm+1, tr, max(l, tm+1), r);\n\t}\n};\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int mn = INT_MAX;\n        int n = nums.size();\n        SegTree seg(n);\n        seg.build(nums,1,0,n-1);\n        for(int i=0;i<n;i++){\n            int l = i, r = n-1, mid, val;\n            while(l<=r){\n                mid = (l+r)/2;\n                val = seg.query(i,mid);\n                mn = min(mn, abs(k-val));\n                if(val>k){\n                    l = mid+1;\n                }\n                else{\n                    r = mid-1;\n                }\n            }\n        }\n        return mn;\n    }\n};",
    "submit_ts": "1717298914",
    "subm_id": "1274795595"
}