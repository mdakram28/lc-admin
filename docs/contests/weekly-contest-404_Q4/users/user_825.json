{
    "username": "stellarsb7",
    "submission": "class Solution {\n    int diam;\n    int finddiam(vector<vector<int>>&adj,int node,int parent){\n        int maxl=0,max2l=0;//maxl=1 as we count curr node\n        for(int x:adj[node]){\n            if(x!=parent){\n                int temp=1+finddiam(adj,x,node);\n                if(temp>maxl){\n                    max2l=maxl;maxl=temp;\n                }\n                else if(temp>max2l){\n                    max2l=temp;\n                }\n            }\n        }\n        diam=max(maxl+max2l,diam);\n        return maxl;\n    }\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>>adj1;\n        vector<vector<int>>adj2;\n        for(vector<int>&e:edges1){\n            if(e[0]>=adj1.size()){\n                adj1.resize(e[0]+1);\n            }\n            if(e[1]>=adj1.size()){\n                adj1.resize(e[1]+1);\n            }\n            adj1[e[0]].push_back(e[1]);\n            adj1[e[1]].push_back(e[0]);\n        }\n        for(vector<int>&e:edges2){\n            if(e[0]>=adj2.size()){\n                adj2.resize(e[0]+1);\n            }\n            if(e[1]>=adj2.size()){\n                adj2.resize(e[1]+1);\n            }\n            adj2[e[0]].push_back(e[1]);\n            adj2[e[1]].push_back(e[0]);\n        }\n        diam=0;\n        int d1=0,d2=0;\n        if(edges1.size()>0){\n            finddiam(adj1,0,-1);\n            d1=diam;\n        }\n        diam=0;\n        if(edges2.size()>0){\n            finddiam(adj2,0,-1);\n            d2=diam;\n        }\n        int maxD=max((d1+1)/2+(d2+1)/2+1,max(d1,d2));\n        // cout<<d1<<\" \"<<d2;\n        // if(d1>0 && d2>0){\n        //     maxD=max((d1+1)/2+(d2+1)/2+1,maxD);\n        // }\n        return maxD;\n    }\n};",
    "submit_ts": "1719719917",
    "subm_id": "1304453904"
}