{
    "username": "himanshudixit921",
    "submission": "class Solution {\npublic:\n    #define F first\n#define S second\n    int minChanges(vector<int>& v, int k) {\n        int n = v.size();\n        map<int, int> mp, max_reach;\n    for (int i = 0; i < n / 2; i++) {\n        mp[abs(v[i] - v[n - i - 1])]++;\n\n        int x = max(v[i], v[n - i - 1]), y = min(v[i], v[n - i - 1]);\n        int reach = max(k - y, x);\n        max_reach[reach]++;\n    }\n    int ans = n;\n    vector<int> r(k + 1, 0);\n    for (auto i : max_reach) {\n        r[i.F] = i.S;\n    }\n    for (int i = k - 1; i >= 0; i--) {\n        r[i] = r[i + 1] + r[i];\n    }\n    for (auto i : mp) {\n        int res = (r[i.F] - i.S) + 2 * (n / 2 - r[i.F]);\n        ans = min(res, ans);\n    }\n        return ans;\n    }\n};",
    "submit_ts": "1721489048",
    "subm_id": "1327441261"
}