{
    "username": "Anuj_Ag",
    "submission": "class Solution {\npublic:\n    map <int,int> dif;\n    \n    int big(vector<int>& arr, int n, int k)\n    {\n        int l = 0;\n        int r = n - 1;\n        int leftGreater = n;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n\n            if (arr[m] >= k) {\n                leftGreater = m;\n                r = m - 1;\n            }\n            else\n                l = m + 1;\n        }\n        return (n - leftGreater);\n    }\n    \n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size(), ans = n/2;\n        for(int i = 0; i < n/2; i++)\n        {\n            dif[abs(nums[i] - nums[n-i-1])]++;\n        }\n        vector<int> x(n/2);\n        for(int i = 0; i < n/2; i++)\n        {\n            x[i] = max(max(k - nums[i], k - nums[n-i-1]), max(nums[i], nums[n-i-1]));\n        }\n        sort(x.begin(), x.end());\n        for(auto it = dif.begin(); it != dif.end(); it++)\n        {\n            int req = (n/2) - (*it).second;\n            req += ((n/2) - big(x, n/2, (*it).first)); \n            ans = min(ans, req);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487552",
    "subm_id": "1327392960"
}