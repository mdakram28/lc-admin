{
    "username": "zio-z",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        xl, yl = [], []\n        for i in range(n):\n            x, y = points[i]\n            points[i] = [x + y, x - y]\n            xl.append((x + y, i))\n            yl.append((x - y, i))\n        xl.sort()\n        yl.sort()\n        ans = max(yl[-1][0] - yl[0][0], xl[-1][0] - xl[0][0])\n        def getA(cur):\n            l, r = 0, n - 1\n            if xl[l][1] == cur:\n                l += 1\n            if xl[r][1] == cur:\n                r -= 1\n            ly, ry = 0, n - 1\n            if yl[ly][1] == cur:\n                ly += 1\n            if yl[ry][1] == cur:\n                ry -= 1\n            #print(ly, ry)\n            #print(yl[ry][0] - yl[ly][0],  xl[r][0] - xl[l][0], cur)\n            return max(yl[ry][0] - yl[ly][0], xl[r][0] - xl[l][0])\n        ll = [xl[0][1], xl[-1][1], yl[0][1], yl[-1][1]]\n        #print(xl, yl, ll)\n        for k in ll:\n            ans = min(ans, getA(k))\n        return ans\n        "
}