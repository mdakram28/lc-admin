{
    "username": "sanmai_reddy377",
    "submission": "#pragma GCC optimize(\"unroll-loops,O3,Ofast\") //even 10^8+ also works with this\n#pragma GCC target(\"avx2,avx,fma,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\n \n#define pb push_back\n#define ppb pop_back\n#define ff first\n#define ss second\n#define rt return;\n#define set_bits(a) __builtin_popcountll(a)\n#define mine(a)    (*min_element((a).begin(), (a).end()))\n#define maxe(a)    (*max_element((a).begin(), (a).end()))\n#define mini(a)    ( min_element((a).begin(), (a).end()) - (a).begin())\n#define maxi(a)    ( max_element((a).begin(), (a).end()) - (a).begin())\n#define lowb(a, x) ( lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define uppb(a, x) ( upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\n#define disp(a) {for(int i=0;i<a.size();i++) cout<<a[i]<<\" \"; cout<<endl;}\n#define all(v) (v).begin(),(v).end()\n#define rall(v) (v).rbegin(),(v).rend()\n#define inp(a) {for(int i=0;i<(a).size();i++) cin>>(a)[i];}\n#define fill(a,b) memset(a, b, sizeof(a))\n#define prt(a) cout<<(a)<<endl;\n#define endl \"\\n\"\n#define NO cout<<\"NO\"<<endl;\n#define YES cout<<\"YES\"<<endl;\n#define vll vector<ll>\n#define vvll vector<vector<ll>>\n#define double double\n#define de(a) cout<<\"(\"<<a<<\")\"<<endl;\n#define de2(a) cout<<\"*\"<<a<<\"*\"<<endl;\n#define ft front()\n#define bk back()\n#define minpq priority_queue<ll, vector<ll>, greater<ll> >\n#define maxpq priority_queue<ll>\n#define nl cout<<endl;\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define cont continue;\n#define vpll vector<pair<ll,ll>>\n#define vvii vector<vector<int>>\n#define vi vector<int>\n#define vvpll vector<vector<pair<ll,ll>>>\n#define pll pair<ll,ll>\n\n//const ll M=998244353;\nconst ll M=1e9+7;\nconst ll N=1e5+5;  \nconst ll inf=1e18; //keeping inf may not give soln every time,try 1e9, 1e15\n\nll bit(ll n,ll i){return (n&(1LL<<i)) ? 1 : 0;}\nll add(ll a,ll b){return ((a%M)+(b%M))%M;}\nll mul(ll a,ll b){return ((a%M) * (b%M))%M;}\n\nclass Solution {\npublic:\n    double dist(ll a,ll b,ll p,ll q){\n        double x=a,y=b,n=p,m=q;\n        return sqrtl((x-n)*(x-n)+(y-m)*(y-m));\n    }\n    ll chk(ll st,ll ed,vvll &g,vvll &vis){\n        ll n=g.size();\n        vll v(n);\n        queue<ll> q;\n       for(int i=0;i<n;i++){\n          if(vis[i][st]){ q.push(i); v[i]=1;}\n       }\n       while(!q.empty()){\n         ll ind=q.front(); q.pop();\n         if(vis[ind][ed]) return 1;\n         for(auto &k: g[ind]){\n            if(!v[k]){ q.push(k); v[k]=1;}\n         }\n       }\n       return 0;\n    }\n    bool canReachCorner(int x, int y, vector<vector<int>>& v) {\n        ll n=v.size();\n        vvll g(n),vis(n, vll(4,0));\n        for(int i=0;i<n;i++){\n            ll p=v[i][0],q=v[i][1],r=v[i][2];\n            for(int j=i+1;j<n;j++){\n                ll a=v[j][0],b=v[j][1],r2=v[j][2];\n                double d=dist(p,q,a,b);\n                if(d<=r2+r){\n                    g[i].pb(j);\n                    g[j].pb(i);\n                }\n            }\n            if(p<=r) vis[i][0]=1; //y\n            if(q<=r) vis[i][1]=1; //x\n            if(x-p<=r) vis[i][2]=1; //_y\n            if(y-q<=r) vis[i][3]=1; //_x\n        }\n        ll ans=chk(0,1,g,vis)|chk(0,2,g,vis)|chk(1,3,g,vis)|chk(3,2,g,vis);\n        return !ans;\n    }\n};",
    "submit_ts": "1722136203",
    "subm_id": "1335726933"
}