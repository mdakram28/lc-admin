{
    "username": "Shruthik_Ravula",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dic = {}\n        dic[\"nul\"] = 0\n        for j in range(len(words)):\n            word = words[j]\n            d = dic\n            for i in word:\n                if i not in d:\n                    d[i] = {}\n                d = d[i]\n            if \"nul\" not in d:\n                d[\"nul\"] = costs[j]\n            else:\n                d[\"nul\"] = min(d[\"nul\"], costs[j])\n\n        dicts = [(0, dic)]\n        # print(dic)\n        for i in range(n):\n            new = []\n            mn = -1\n            for c, d in dicts:\n                if \"nul\" in d:\n                    # c += d[\"nul\"]\n                    if mn == -1:\n                        mn = c + d[\"nul\"]\n                    else:\n                        mn = min(mn, c + d[\"nul\"])\n                \n                if target[i] in d:\n                    new.append((c, d[target[i]]))\n            if mn != -1 and target[i] in dic:\n                new.append((mn, dic[target[i]]))\n            dicts = new\n            # print(i, dicts)\n        ans = None\n        for c, d in dicts:\n            if \"nul\" in d:\n                if ans == None:\n                    ans = c + d[\"nul\"]\n                ans = min(ans, c + d[\"nul\"])\n        return ans if ans not in (None, 0) else -1",
    "submit_ts": "1720324785",
    "subm_id": "1312408254"
}