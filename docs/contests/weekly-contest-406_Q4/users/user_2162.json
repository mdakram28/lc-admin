{
    "username": "madhavsameer",
    "submission": "import java.util.*;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int kIndex = horizontalCut.length - 1, vIndex = verticalCut.length - 1;\n        long hPieces = 1, vPieces = 1;\n        long totalCost = 0;\n\n        while (kIndex >= 0 && vIndex >= 0) {\n            if (horizontalCut[kIndex] > verticalCut[vIndex]) {\n                totalCost += (long) horizontalCut[kIndex] * vPieces;\n                kIndex--;\n                hPieces++;\n            } else {\n                totalCost += (long) verticalCut[vIndex] * hPieces;\n                vIndex--;\n                vPieces++;\n            }\n        }\n\n        while (kIndex >= 0) {\n            totalCost += (long) horizontalCut[kIndex] * vPieces;\n            kIndex--;\n            hPieces++;\n        }\n\n        while (vIndex >= 0) {\n            totalCost += (long) verticalCut[vIndex] * hPieces;\n            vIndex--;\n            vPieces++;\n        }\n\n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720925771",
    "subm_id": "1320265681"
}