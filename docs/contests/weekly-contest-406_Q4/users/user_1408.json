{
    "username": "ashishsah51",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int[][] mark = array2d(m+n, horizontalCut, verticalCut);\n        int hCut = 1, vCut = 1;\n        long ans = 0;\n        for(int[] curr : mark) {\n            if(curr[0]==0) {\n                ans += (hCut *1l* curr[1]);\n                vCut++;\n            } else {\n                ans += (vCut *1l* curr[1]);\n                hCut++;\n            }\n        }\n        return ans;\n    }\n    int[][] array2d(int len, int[] horizontalCut, int[] verticalCut) {\n        int[][] mark = new int[len][2];\n        int idx = 0;\n        for(int cost : verticalCut) {\n            mark[idx][0] = 0;\n            mark[idx][1] = cost;\n            idx++;\n        }\n        for(int cost : horizontalCut) {\n            mark[idx][0] = 1;\n            mark[idx][1] = cost;\n            idx++;\n        }\n        Arrays.sort(mark, (a,b)-> b[1]-a[1]);\n        return mark;\n    }\n}",
    "submit_ts": "1720925884",
    "subm_id": "1320269315"
}