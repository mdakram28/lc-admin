{
    "username": "angel30818",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        # get top two largest value and the corresponding index\n        def get_max(A):\n            max1 = -sys.maxsize\n            max2 = -sys.maxsize\n            idx1, idx2 = -1, -1\n            \n            for i, a in enumerate(A):\n                if a >= max1:\n                    max1, max2 = a, max1\n                    idx1, idx2 = i, idx1\n                    \n                elif a >= max2:\n                    max2 = a\n                    idx2 = i\n                    \n            return max1, idx1\n            \n        \n        plus = [x+y for x, y in points]\n        minus = [x-y for x, y in points]\n        \n        # print(\"plus:\", plus)\n        # print(\"minus:\", minus)\n        \n        maxx1, maxx1_idx = get_max(plus)\n        minn1, minn1_idx = get_max([-x for x in plus])\n        minn1 = -minn1\n        \n        val1 = maxx1 - minn1\n                \n        maxx2, maxx2_idx = get_max(minus)\n        minn2, minn2_idx = get_max([-x for x in minus])\n        \n        minn2 = -minn2\n        val2 = maxx2 - minn2\n        \n        if val1 >= val2:\n            max_idx = maxx1_idx\n            min_idx = minn1_idx\n        else:\n            max_idx = maxx2_idx\n            min_idx = minn2_idx\n        \n        # then delete the dot\n        # if delete first one\n        P = points[:max_idx] + points[max_idx+1:]\n        plus = [x+y for x, y in P]\n        minus = [x-y for x, y in P]\n        val1 = max(max(plus) - min(plus), max(minus) - min(minus))\n        \n        P = points[:min_idx] + points[min_idx+1:]\n        plus = [x+y for x, y in P]\n        minus = [x-y for x, y in P]\n        val2 = max(max(plus) - min(plus), max(minus) - min(minus))\n        \n        \n        return min(val1, val2)\n        \n        "
}