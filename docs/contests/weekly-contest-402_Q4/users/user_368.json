{
    "username": "codemaster24",
    "submission": "class Solution {\npublic:\n    int n, t[400002];\n    void build(vector<int>& a, int v, int l, int r) {\n        if (l == r) {\n            t[v] = a[l];\n        } else {\n            int m = (l + r) / 2;\n            build(a, v*2, l, m);\n            build(a, v*2+1, m+1, r);\n            t[v] = t[v*2] + t[v*2+1];\n        }\n    }\n    int sum(int v, int tl, int tr, int l, int r) {\n        if (l > r) \n            return 0;\n        if (l == tl && r == tr) {\n            return t[v];\n        }\n        int tm = (tl + tr) / 2;\n        return sum(v*2, tl, tm, l, min(r, tm))\n               + sum(v*2+1, tm+1, tr, max(l, tm+1), r);\n    }\n    void update(int v, int tl, int tr, int id, int val) {\n        if (tl == tr) {\n            t[v] = val;\n        } else {\n            int tm = (tl + tr) / 2;\n            if (id <= tm)\n                update(v*2, tl, tm, id, val);\n            else\n                update(v*2+1, tm+1, tr, id, val);\n            t[v] = t[v*2] + t[v*2+1];\n        }\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        vector<int> v(n);\n        for(int i=0;i<n;i++) {\n            if(i&&i<n-1&&nums[i]>nums[i-1] && nums[i]>nums[i+1]) v[i]=1;\n            else v[i]=0;\n        }\n        build(v, 1, 0, n-1);\n        vector<int> an;\n        for(auto q:queries) {\n            if(q[0]==1) {\n                an.push_back(sum(1, 0, n-1, q[1]+1, q[2]-1));\n            }\n            else {\n                nums[q[1]]=q[2];\n                for(int i=max(q[1]-1,0);i<=min(n-1,q[1]+1);i++) {\n                    if(i&&i<n-1&&nums[i]>nums[i-1] && nums[i]>nums[i+1]) v[i]=1;\n                    else v[i]=0;\n                    update(1, 0, n-1, i, v[i]);\n                }\n                \n            }\n        }\n        return an;\n    }\n};",
    "submit_ts": "1718507347",
    "subm_id": "1289648706"
}