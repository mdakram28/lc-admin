{
    "username": "Pavlo Soroka",
    "submission": "#define ll long long\n#define REP(i,n)        FOR(i,0,n)\n#define SORT(v)         sort((v).begin(),(v).end())\n#define FOR(i,a,b)      for(ll i=(a);i<(b);i++)\n\nclass Solution {\npublic:\n    vector<pair<ll, pair<ll, ll>>> v; // value, row, col\n    set<ll> pickedCol, pickedRow;\n    ll alreadyFind = -1e10;\n\n    ll dfs(ll i, ll currVal) {\n        if (i == v.size()) return -1e10;\n        ll left = 3-pickedCol.size();\n        if (v[i].first*left+currVal <= alreadyFind) return -1e10;\n\n        if (pickedRow.find(v[i].second.first) != pickedRow.end()) return dfs(i+1, currVal);\n        if (pickedCol.find(v[i].second.second) != pickedCol.end()) return dfs(i+1, currVal);\n\n        if (pickedCol.size() == 2) {\n            alreadyFind = max(alreadyFind, currVal + v[i].first);\n            return v[i].first;\n        }\n\n        pickedRow.insert(v[i].second.first);\n        pickedCol.insert(v[i].second.second);\n        ll pick = v[i].first + dfs(i+1, currVal+v[i].first);\n        pickedRow.erase(v[i].second.first);\n        pickedCol.erase(v[i].second.second);\n\n        ll res = max(pick, dfs(i+1, currVal));\n        return res;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        ll n = board.size(), m = board[0].size();\n        REP(i, n) {\n            vector<pair<ll, pair<ll, ll>>> a;\n            REP(j, m) a.push_back({board[i][j], {i, j}});\n            SORT(a); reverse(a.begin(), a.end());\n            REP(j, 3) v.push_back(a[j]); \n        }\n        SORT(v); reverse(v.begin(), v.end());\n        return dfs(0, 0);\n    }\n};",
    "submit_ts": "1723906299",
    "subm_id": "1359045749"
}