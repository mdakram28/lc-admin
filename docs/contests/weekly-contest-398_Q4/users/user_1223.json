{
    "username": "20240623.andersdb4",
    "submission": "class Solution {\npublic:\n    long long MOD=1e9+7;\n    long long power(long long x, long long y, long long p) {\n    long long res = 1;\n    x = x % p;\n    while (y > 0) {\n        if (y & 1)\n            res = (res * x) % p;\n        y = y >> 1;\n        x = (x * x) % p;\n    }\n    return res;\n    }\n    long long fac(int k)\n    {\n        long long ans=1;\n        long mod=1e9+7;\n        for(int i=1; i<=k; i++)\n        {\n            ans*=i;\n            ans%=mod;\n        }\n        return ans;\n    }\n    long long modInverse(long long n, long long p) {\n    return power(n, p - 2, p);\n    }\n\n    long long binomialCoefficient(int n, int k){\n        if (k > n) return 0;\n        long long num = fac(n);\n        long long denom = (fac(k)* fac(n-k))% MOD;\n        return (num * modInverse(denom, MOD)) % MOD;\n    }\n    int waysToReachStair(int k) {\n        long long i=1;\n        int j=1;\n        if(k==0)\n        {\n            return 2;\n        }\n        if(k==1)\n        {\n            return 4;\n        }\n        if(k==2)\n        {\n            return 4;\n        }\n        if(k==4)\n        {\n            return 2;\n        }\n        int v=1;\n        while(i<k)\n        {\n            i*=2;\n            v++;\n        }\n        int v2=abs(i-k);\n        long long ans=0;\n        if(v2<v)\n        {\n            ans=binomialCoefficient(v,v2);\n        }\n        if(v2==v)\n        {\n            return 1;\n        }\n        return (int)ans;\n    }\n};",
    "submit_ts": 1716089624.0
}