{
    "username": "krishitaliya",
    "submission": "class SegTree{\npublic:\n    vector<int> tree,v;\n    SegTree(int n,vector<int> vec){\n        tree.resize(4*n,0);\n        v.resize(n+1);\n        for(int i=1; i<=n; i++)v[i]=vec[i-1];\n        build(1,1,n);\n    }\n    int query(int ind,int l,int r,int ql,int qr){\n        if(ql>r or qr<l)return INT_MAX;\n        if(l>=ql and r<=qr)return tree[ind];\n        int mid = (l+r)/2;\n        return query(2*ind,l,mid,ql,qr)&query(2*ind+1,mid+1,r,ql,qr);\n    }\n    void build(int ind,int l,int r){\n        if(l==r){\n            tree[ind] = v[l];\n            return;\n        }\n        int mid = (l+r)/2;\n        build(2*ind,l,mid);\n        build(2*ind+1,mid+1,r);\n        tree[ind] = tree[2*ind]&tree[2*ind+1];\n    }\n    \n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long n =nums.size();\n        map<long long,long long> m;\n        long long ans = 0;\n        for(long long i=n-1; i>=0LL; i--){\n            map<long long,long long> mp;\n            for(auto pr : m){\n                mp[(pr.first&nums[i])]+=pr.second;\n            }\n            mp[nums[i]]++;\n            m = mp;\n            ans += m[k];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279688",
    "subm_id": "1311761156"
}