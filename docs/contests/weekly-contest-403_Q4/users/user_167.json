{
    "username": "jwseph",
    "submission": "from sortedcontainers import SortedList\n\nclass Group:\n    def __init__(self):\n        self.sr = SortedList()\n        self.sc = SortedList()\n        self.ones = set()\n    def add(self, r, c):\n        self.ones.add((r, c))\n        self.sr.add(r)\n        self.sc.add(c)\n    def remove(self, r, c):\n        self.ones.remove((r, c))\n        self.sr.remove(r)\n        self.sc.remove(c)\n    def area(self):\n        if not self.ones: return 0\n        return (self.sr[-1]-self.sr[0]+1) * (self.sc[-1]-self.sc[0]+1)\n    def copy(self):\n        res = Group()\n        res.sr = self.sr.copy()\n        res.sc = self.sc.copy()\n        res.ones = self.ones.copy()\n        return res\n\nclass Solution:\n    def minimumSum(self, A: List[List[int]]) -> int:\n        g = Group()\n        for r in range(len(A)):\n            for c in range(len(A[0])):\n                if A[r][c]: g.add(r, c)\n        \n        def sol(g, split=2):\n            R, C = len(A), len(A[0])\n            if split == 0:\n                return g.area()\n            res = inf\n            g1 = g.copy()\n            g2 = Group()\n            for r in range(R+1):\n                for h in range(split):\n                    res = min(res, sol(g1, h) + sol(g2, split-1-h))\n                for c in range(C):\n                    if (r, c) in g1.ones:\n                        g1.remove(r, c)\n                        g2.add(r, c)\n\n            g1 = g.copy()\n            g2 = Group()\n            for c in range(C+1):\n                for h in range(split):\n                    res = min(res, sol(g1, h) + sol(g2, split-1-h))\n                for r in range(R):\n                    if (r, c) in g1.ones:\n                        g1.remove(r, c)\n                        g2.add(r, c)\n            return res\n        return sol(g)",
    "submit_ts": "1719113234",
    "subm_id": "1297320268"
}