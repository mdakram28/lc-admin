{
    "username": "james_hansel",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        sort(h.begin(), h.end(), greater<int>());\n        sort(v.begin(), v.end(), greater<int>());\n        int l = 0, r = 0, row = 1, col = 1;\n        long long ans = 0;\n        while(l < m - 1 && r < n - 1) {\n            if(h[l] > v[r]) {\n                // so the vertical cut count will be increased by 1\n                ans += (col * h[l]);\n                row++; l++;\n            } else {\n                ans += (row * v[r]);\n                col++; r++;\n            }\n        } while(l < m - 1) {\n            ans += (col * h[l]);\n            row++; l++;\n        } while(r < n - 1) {\n            ans += (row * v[r]);\n            col++; r++;\n        } \n        return ans;\n    }\n};",
    "submit_ts": "1720925615",
    "subm_id": "1320260608"
}