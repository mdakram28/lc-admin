{
    "username": "KaivinC",
    "submission": "class Solution {\npublic:\n    class Trie {\n        public:\n            Trie *child[26];\n            int cost;\n            Trie():cost(-1) {\n                for(int i=0;i<26;i++) {\n                    child[i] = nullptr;\n                }\n            }\n\n            void insert(string &s, int cost) {\n                Trie* cur = this;\n                for(int i=0;i<s.size();i++) {\n                    if(cur->child[s[i]-'a']==nullptr) {\n                        cur->child[s[i]-'a'] = new Trie();\n                    }\n                    cur = cur->child[s[i]-'a'];\n                }\n                \n                if(cur->cost!=-1) {\n                    cur->cost = min(cur->cost, cost);\n                } else {\n                    cur->cost = cost;\n                }\n                \n            }\n\n            void find(vector<int> &dp, string &s, int start) {\n                int n = s.size();\n                Trie* cur = this;\n                for(int i=start;i<n;i++) {\n                    if(cur->child[s[i]-'a']==nullptr) {\n                        return;\n                    }\n                    \n                    cur = cur->child[s[i]-'a'];\n                    if(cur->cost != -1) {\n                        dp[i+1] = min(dp[i+1], dp[start] + cur->cost);\n                    }\n                }\n            }\n    };\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n+1, 1e9);\n        Trie *root = new Trie();\n        for(int i=0;i<words.size();i++) {\n            root->insert(words[i], costs[i]);\n        }\n\n        dp[0] = 0;\n        for(int i=0;i<target.size();i++) {\n            root->find(dp, target, i);\n        }\n\n        return (dp[target.size()]==1e9) ? -1 : dp[target.size()];\n    }\n};",
    "submit_ts": "1720321245",
    "subm_id": "1312317551"
}