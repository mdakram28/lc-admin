{
    "username": "dhruv_gupta123",
    "submission": "class Solution {\npublic:\n    long long int dp[50][50][32][2]={-1};\n    int f(int p,int offset,int jump,bool chk,int k)\n    {\n        int i=(1ll<<p)-offset;\n       // cout<<i<<endl;\n        if(i>(k+1)) return 0;\n        if(dp[p][offset][jump][chk]!=-1) return dp[p][offset][jump][chk];\n        long long int sum=0;\n        if(i==k) sum=1;\n        if(chk) sum+=f(p,offset+1,jump,false,k);\n        sum+=f(p+1,offset,jump+1,true,k);\n        return dp[p][offset][jump][chk]=sum;\n    }\n    int waysToReachStair(int k) {\n        memset(dp, -1, sizeof(dp));\n        return f(0,0,0,true,k);\n    }\n};",
    "submit_ts": "1716087981",
    "subm_id": "1261800318"
}