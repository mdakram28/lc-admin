{
    "username": "siva_prasad_3",
    "submission": "class Solution {\npublic:\n    struct Node  \n    {  \n        int data; \n        struct Node * prev; \n        struct Node *next;  \n\n        Node(int value) : data(value), next(nullptr) {}\n    };  \n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) \n    {\n        unordered_map<int,Node*> blocks;\n        Node* head= new Node(0);\n        blocks[0]=head;\n        Node * temp=head;\n        for(int i=1;i<n;i++)\n        {\n            Node * curr= new Node(i);\n            blocks[i]=curr;\n\n            temp->next= curr;\n            curr->prev=temp;\n\n            temp=curr;\n        }\n\n        vector<int> res;\n        int dist=n-1;\n        for (auto& query : queries) {\n            int x = query[0];\n            int y = query[1];\n\n            Node* nodeX = blocks[x];\n            Node * nodeY= blocks[y];\n            if (nodeX == nullptr || nodeY==NULL) {\n                res.push_back(dist);\n                continue;\n            }\n\n            int count = 0;\n            while (nodeX && nodeX->next && nodeX->next->data != y) {\n                Node* toRemove = nodeX->next;\n                nodeX->next = toRemove->next;\n                if (toRemove->next) {\n                    toRemove->next->prev = nodeX;\n                }\n                blocks[toRemove->data] = nullptr; // Mark the node as removed\n                delete toRemove; // Free memory\n                count++;\n            }\n\n            dist -= count;\n            res.push_back(dist);\n        }\n\n        return res;\n\n    }\n};",
    "submit_ts": "1722742019",
    "subm_id": "1343759019"
}