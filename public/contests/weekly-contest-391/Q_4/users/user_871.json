{
    "username": "baibhavkr143",
    "submission": "class Solution {\npublic:\n    int MaxDist(vector<vector<int>>& A, int N)\n     {\n    // Vectors to store maximum and\n    // minimum of all the four forms\n    multiset<int>st1,st2;\n \n    for (int i = 0; i < N; i++) {\n       st1.insert(A[i][0] + A[i][1]);\n      st2.insert(A[i][0] - A[i][1]);\n    }\n \n   int minV=INT_MAX;\n        \n    for(int i=0;i<N;i++)\n    {\n        int val1=A[i][0] + A[i][1];\n        int val2=A[i][0] - A[i][1];\n        st1.erase(st1.find(val1));\n        st2.erase(st2.find(val2));\n        \n        \n        int ans1=*st1.rbegin()-*st1.begin();\n        int ans2=*st2.rbegin()-*st2.begin();\n        \n        \n        int maxV=max(ans1,ans2);\n        minV=min(minV,maxV);\n        \n        \n         st1.insert(A[i][0] + A[i][1]);\n         st2.insert(A[i][0] - A[i][1]);\n        \n        \n    }\n        return minV;\n   }\n    int minimumDistance(vector<vector<int>>& points) {\n       return MaxDist(points,points.size());\n    }\n};"
}