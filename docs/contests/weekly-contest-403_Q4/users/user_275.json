{
    "username": "Emma_wang",
    "submission": "class Solution {\npublic:\n    int minimumArea(vector<vector<int>>& grid, int x1, int y1, int x2, int y2) {\n        int r_min = 31, r_max = -1, c_min = 31, c_max = -1;\n        bool has_one = false;\n        for (int i = x1; i <= x2; ++i) {\n            for (int j = y1; j <= y2; ++j) {\n                if (grid[i][j] == 1) {\n                    r_min = min(r_min, i);\n                    r_max = max(r_max, i);\n                    c_min = min(c_min, j);\n                    c_max = max(c_max, j);\n                    has_one = true;\n                }\n            }\n        }\n        return has_one ? (r_max - r_min + 1) * (c_max - c_min + 1) : 0;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int res = m * n;\n        {\n            // scenario 1\n            for (int j1 = 1; j1 < n-1; ++j1) {\n                for (int j2 = j1+1; j2 < n; ++j2) {\n                    int left = minimumArea(grid, 0, 0, m-1, j1-1);\n                    int mid = minimumArea(grid, 0, j1, m-1, j2-1);\n                    int right = minimumArea(grid, 0, j2, m-1, n-1);\n                    res = min(res, left + mid + right);\n                }\n            }\n        }\n        {\n            // scenario 2\n            for (int i1 = 1; i1 < m-1; ++i1) {\n                for (int i2 = i1+1; i2 < m; ++i2) {\n                    int up = minimumArea(grid, 0, 0, i1-1, n-1);\n                    int mid = minimumArea(grid, i1, 0, i2-1, n-1);\n                    int down = minimumArea(grid, i2, 0, m-1, n-1);\n                    res = min(res, up + mid + down);\n                }\n            }\n        }\n        {\n            // scenario 3, 4, 5, 6\n            for (int i = 1; i < m; ++i) {\n                for (int j = 1; j < n; ++j) {\n                    // 3\n                    {\n                        int a1 = minimumArea(grid, 0, 0, i-1, j-1);\n                        int a2 = minimumArea(grid, 0, j, i-1, n-1);\n                        int a3 = minimumArea(grid, i, 0, m-1, n-1);\n                        res = min(res, a1 + a2 + a3);\n                    }\n                    // 4\n                    {\n                        int a1 = minimumArea(grid, 0, 0, i-1, n-1);\n                        int a2 = minimumArea(grid, i, 0, m-1, j-1);\n                        int a3 = minimumArea(grid, i, j, m-1, n-1);\n                        res = min(res, a1 + a2 + a3);\n                    }\n                    // 5\n                    {\n                        int a1 = minimumArea(grid, 0, 0, i-1, j-1);\n                        int a2 = minimumArea(grid, i, 0, m-1, j-1);\n                        int a3 = minimumArea(grid, 0, j, m-1, n-1);\n                        res = min(res, a1 + a2 + a3);\n                    }\n                    // 6\n                    {\n                        int a1 = minimumArea(grid, 0, 0, m-1, j-1);\n                        int a2 = minimumArea(grid, 0, j, i-1, n-1);\n                        int a3 = minimumArea(grid, i, j, m-1, n-1);\n                        res = min(res, a1 + a2 + a3);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1719113759",
    "subm_id": "541398915"
}