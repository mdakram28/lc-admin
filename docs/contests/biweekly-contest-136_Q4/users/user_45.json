{
    "username": "rui_er",
    "submission": "class SegTree {\npublic:\n    int mx[400005], tag[400005];\n    void build(const vector<int>& a, int u, int l, int r) {\n        mx[u] = tag[u] = 0;\n        if(l == r) {\n            mx[u] = a[l];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(a, u << 1, l, mid);\n        build(a, u << 1 | 1, mid + 1, r);\n        mx[u] = max(mx[u << 1], mx[u << 1 | 1]);\n    }\n    void pushdown(int u, int l, int r) {\n        int mid = (l + r) >> 1;\n        mx[u << 1] += tag[u];\n        mx[u << 1 | 1] += tag[u];\n        tag[u << 1] += tag[u];\n        tag[u << 1 | 1] += tag[u];\n        tag[u] = 0;\n    }\n    void modify(int u, int l, int r, int ql, int qr, int k) {\n        if(ql > qr) return;\n        if(ql <= l && r <= qr) {\n            mx[u] += k;\n            tag[u] += k;\n            return;\n        }\n        pushdown(u, l, r);\n        int mid = (l + r) >> 1;\n        if(ql <= mid) modify(u << 1, l, mid, ql, qr, k);\n        if(qr > mid) modify(u << 1 | 1, mid + 1, r, ql, qr, k);\n        mx[u] = max(mx[u << 1], mx[u << 1 | 1]);\n    }\n}sgt;\nclass Solution {\npublic:\n    int n, tms;\n    vector<vector<int>> e;\n    vector<int> dis, dfn, sz, d, f;\n    void dfs1(int u, int fa) {\n        if(fa != -1) dis[u] = dis[fa] + ((u & 1) ? 1 : 2);\n        else dis[u] = 0;\n        dfn[u] = ++tms;\n        sz[u] = 1;\n        d[dfn[u]] = dis[u];\n        for(int v : e[u]) {\n            if(v == fa) continue;\n            dfs1(v, u);\n            sz[u] += sz[v];\n        }\n    }\n    void dfs2(int u, int fa) {\n        f[u] = sgt.mx[1];\n        for(int v : e[u]) {\n            if(v == fa) continue;\n            sgt.modify(1, 1, n, 1, dfn[v] - 1, 2 - (u & 1));\n            sgt.modify(1, 1, n, dfn[v], dfn[v] + sz[v] - 1, -(2 - (v & 1)));\n            sgt.modify(1, 1, n, dfn[v] + sz[v], n, 2 - (u & 1));\n            dfs2(v, u);\n            sgt.modify(1, 1, n, 1, dfn[v] - 1, -(2 - (u & 1)));\n            sgt.modify(1, 1, n, dfn[v], dfn[v] + sz[v] - 1, 2 - (v & 1));\n            sgt.modify(1, 1, n, dfn[v] + sz[v], n, -(2 - (u & 1)));\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size() + 1;\n        e.clear();\n        e.resize(n);\n        for(auto& i : edges) {\n            int u = i[0], v = i[1];\n            e[u].push_back(v);\n            e[v].push_back(u);\n        }\n        dis.clear();\n        dis.resize(n);\n        dfn.clear();\n        dfn.resize(n);\n        sz.clear();\n        sz.resize(n);\n        d.clear();\n        d.resize(n + 1);\n        tms = 0;\n        dfs1(0, -1);\n        sgt.build(d, 1, 1, n);\n        f.clear();\n        f.resize(n);\n        dfs2(0, -1);\n        return f;\n    }\n};",
    "submit_ts": "1722697901",
    "subm_id": "552268361"
}