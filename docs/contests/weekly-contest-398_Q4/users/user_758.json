{
    "username": "dharavivek",
    "submission": "class Solution {\n    private int solve(int jump, int curr, int k, boolean b, HashMap<String, Integer> memo){\n        if((curr) > (k+1)*2) return 0;\n        int ans = 0;\n        String key = jump + \",\" + curr + \",\" + b;\n        if(memo.containsKey(key)) return memo.get(key);\n        if(curr == k) ans = 1;\n        if(b){\n            ans += solve(jump, curr-1, k, false, memo) + solve(jump+1, curr+(int)(Math.pow(2, jump)), k, true, memo);\n        }else{\n            ans += solve(jump+1, curr+(int)(Math.pow(2, jump)), k, true, memo);\n        }\n        memo.put(key, ans);\n        return ans;\n    }\n    public int waysToReachStair(int k) {\n        HashMap<String, Integer> memo = new HashMap<>();\n        return solve(0, 1, k, true, memo);    \n    }\n}",
    "submit_ts": "1716089482",
    "subm_id": "1261843380"
}