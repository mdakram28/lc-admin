{
    "username": "abhijay29",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        unordered_map<long long, long long> prev;\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> curr;\n            long long num = nums[i]; \n            if (num == k) {\n                count++;\n            }\n            curr[num] = 1;\n            // for(auto me:curr){\n                // cout<<me.first<<\" \"<<me.second<<\"\\n\";\n            // \n            for (auto j : prev) {\n                long long val = j.first;\n                long long freq = j.second;\n                long long var = val & num;\n                curr[var] += freq;\n                if (var == k) {\n                    count += freq;\n                }\n            }\n            prev = curr;\n        }\n        return count;\n    }\n};\n",
    "submit_ts": "1720280727",
    "subm_id": "1311799905"
}