{
    "username": "nanlai",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int N = nums.length;\n        int[] tmp = new int[N];\n        for(int i = 0; i < nums.length; i++) {\n            tmp[i] = nums[i] - target[i];\n        }\n        long ans = 0L;\n        for(int i = 0; i < tmp.length; i++) {\n            if(tmp[i] == 0) {\n                continue;\n            }\n            if(tmp[i] > 0) {\n                int delat = tmp[i];\n                for(int j = i + 1; j < N; j++) {\n                    if(tmp[j] > 0) {\n                        if(tmp[j] > delat) {\n                            tmp[j] -= delat;\n                        } else {\n                            delat = tmp[j];\n                            tmp[j] = 0;\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                int delat = tmp[i];\n                for(int j = i + 1; j < N; j++) {\n                    if(tmp[j] < 0) {\n                        if(tmp[j] < delat) {\n                            tmp[j] -= delat;\n                        } else {\n                            delat = tmp[j];\n                            tmp[j] = 0;\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            }\n            // System.out.println(i + \"  \" + tmp[i]);\n            ans += Math.abs(0 - tmp[i]);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721532191",
    "subm_id": "548390930"
}