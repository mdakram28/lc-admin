{
    "username": "Giri_27",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pre(n+1,vector<int>(32,0));\n        \n        for(int i=1;i<=n;i++){\n            for(int j=0;j<32;j++){\n                int curr = nums[i-1]&(1<<j);\n                pre[i][j] = pre[i-1][j]+(curr==0);\n            }\n        }\n        \n        int ans = INT_MAX;\n        for(int i=0;i<n;i++) {\n            int l = i, r = n-1;\n            while(l<=r) {\n                int m = (l+r)/2;\n                int val = 0;\n                for(int j=0;j<32;j++) {\n                    int t = pre[m+1][j] - pre[i][j];\n                    if(t==0){\n                        val = val | (1<<j);\n                    }\n                }\n                if(val<=k){\n                    ans = min(ans,k-val);\n                    r = m-1;\n                }\n                else\n                    l = m+1;\n            }\n            \n            l = i, r = n-1;\n            \n            while(l<=r) {\n                int m = (l+r)/2;\n                int val = 0;\n                for(int j=0;j<32;j++) {\n                    int t = pre[m+1][j] - pre[i][j];\n                    if(t==0){\n                        val = val | (1<<j);\n                    }\n                }\n                if(val>=k){\n                    ans = min(ans,val-k);\n                    l = m+1;\n                }\n                else\n                    r = m-1;\n            }\n        }\n        return ans;\n        \n    }\n    \n};",
    "submit_ts": 1717299395.0
}