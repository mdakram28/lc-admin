{
    "username": "Abhi_nav21",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& sequence) {\n        const int MODULUS = 1000000007;\n        const int MAX_VALUE = 50;\n        int seqLength = sequence.size();\n        \n        vector<vector<long long>> memo(seqLength, vector<long long>(MAX_VALUE + 1, 0));\n        vector<long long> cumulativeSum(MAX_VALUE + 2, 0);\n  \n        for (int val = 0; val <= sequence[0]; ++val) {\n            memo[0][val] = 1;\n            cumulativeSum[val + 1] = (cumulativeSum[val] + 1) % MODULUS;\n        }\n        \n        for (int idx = 1; idx < seqLength; ++idx) {\n            vector<long long> newCumulativeSum(MAX_VALUE + 2, 0);\n            \n            for (int val = 0; val <= sequence[idx]; ++val) {\n                int upperLimit = min(val, sequence[idx-1] - (sequence[idx] - val));\n                memo[idx][val] = (upperLimit >= 0) ? cumulativeSum[upperLimit + 1] : 0;\n                newCumulativeSum[val + 1] = (newCumulativeSum[val] + memo[idx][val]) % MODULUS;\n            }\n            \n            cumulativeSum = move(newCumulativeSum);\n        }\n        \n        long long result = 0;\n        for (int val = 0; val <= MAX_VALUE; ++val) {\n            result = (result + memo[seqLength-1][val]) % MODULUS;\n        }\n        \n        return static_cast<int>(result);\n    }\n};",
    "submit_ts": "1723347014",
    "subm_id": "1351590046"
}