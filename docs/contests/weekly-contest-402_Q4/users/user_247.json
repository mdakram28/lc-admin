{
    "username": "deruikong",
    "submission": "class Solution {\npublic:\n    struct bit{\n        int n;\n        vector<int> t;\n        bit(int n){\n            this->n = n;\n            t.assign(n, 0);\n        }\n\n        bit(vector<int> a) : bit(a.size()){\n            for(size_t i = 0; i < a.size(); i++)\n                update(i, a[i]);\n        }\n\n        int sum(int r){\n            int res = 0;\n            for(;r >= 0; r = (r & (r + 1)) - 1)\n                res += t[r];\n            return res;\n        }\n\n        int sum(int l, int r){\n            return max(0, sum(r) - sum(l - 1));\n        }\n\n        void update(int idx, int x){\n            for(; idx < n; idx |= (idx + 1)){\n                t[idx] += x;\n            }\n        }\n    };\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        bit ds(n);\n        for(int i = 1; i < n - 1; i++){\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) ds.update(i, 1);\n        }\n        vector<int> ans;\n        for(auto& v : queries){\n            int t = v[0];\n            if(t == 1){\n                int l = v[1], r = v[2];\n                ans.push_back(ds.sum(l + 1, r - 1));\n            }else{\n                int idx = v[1], val = v[2]; nums[idx] = val;\n                // recalculate the 3 adjacent ones.\n                for(int i = idx - 1; i <= idx + 1; i++){\n                    if(i < 1 || i >= n - 1) continue;\n                    ds.update(i, -ds.sum(i, i));\n                    if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) ds.update(i, 1);\n                    // cout << i << ' ' << ds.sum(i, i) << '\\n';\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506640.0
}