{
    "username": "vidhayak_ji",
    "submission": "class Solution {\npublic:\n    int tree[400005];\n    \n    void build(int node, int l , int r,vector<int>& v){\n        if(l==r){\n            tree[node] = v[l];\n            return;\n        }\n        int mid = (l+r)>>1;\n        build(2*node+1,l,mid,v);\n        build(2*node+2,mid+1,r,v);\n        tree[node] = tree[2*node+1]&tree[node*2+2];\n        \n    }\n    \n    int query(int node, int l , int r, int st, int en){\n        if(en<l||r<st) return INT_MAX;\n        if(l>=st&&r<=en) return tree[node];\n        int mid = (l+r)>>1;\n        return query(2*node+1,l,mid,st,en)&query(2*node+2,mid+1,r,st,en);\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        build(0,0,nums.size()-1,nums);\n        int n = nums.size();\n        if(n==1) return abs(nums[0]-k);\n        int ans = INT_MAX;\n        for(int i = 0;i<n;i++){\n            int st = i, en = n-1,mid,tot;\n            while(st<=en){\n                mid =(st+en)>>1;\n                int val = query(0,0,n-1,i,mid);\n                if(val>=k){\n                    st = mid+1;\n                    ans = min(ans,abs(val-k));\n                }else{\n                    en = mid-1; \n                    ans = min(ans,abs(val-k));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717300564",
    "subm_id": "1274848024"
}