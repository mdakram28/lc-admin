{
    "username": "tomarint",
    "submission": "impl Solution {\n    pub fn min_flips(grid: Vec<Vec<i32>>) -> i32 {\n        let H = grid.len();\n        let W = grid[0].len();\n        let mut ans = 0;\n        let mut grid = grid;\n        // \u6a2a\u65b9\u5411\u306bpalindrome\u306b\u3059\u308b\n        let mut cnt = vec![0; 2];\n        for h in 0..H/2 {\n            for w in 0..W/2 {\n                let h2 = H-1-h;\n                let w2 = W-1-w;\n                cnt[0] = 0;\n                cnt[1] = 0;\n                cnt[grid[h][w] as usize] += 1;\n                cnt[grid[h][w2] as usize] += 1;\n                cnt[grid[h2][w] as usize] += 1;\n                cnt[grid[h2][w2] as usize] += 1;\n                if cnt[0] <= cnt[1] {\n                    ans += cnt[0];\n                    grid[h][w] = 0;\n                    grid[h][w2] = 0;\n                    grid[h2][w] = 0;\n                    grid[h2][w2] = 0;\n                }\n                else {\n                    ans += cnt[1];\n                    grid[h][w] = 1;\n                    grid[h][w2] = 1;\n                    grid[h2][w] = 1;\n                    grid[h2][w2] = 1;\n                }\n            }\n        }\n        let mut line = 0;\n        if H % 2 != 0 {\n            for w in 0..W/2 {\n                if grid[H/2][w] != grid[H/2][W-1-w] {\n                    grid[H/2][w] = 1;\n                    grid[H/2][W-1-w] = 1;\n                    line += 1;\n                    ans += 1;\n                }\n            }\n        }\n        if W % 2 != 0 {\n            for h in 0..H/2 {\n                if grid[h][W/2] != grid[H-1-h][W/2] {\n                    grid[h][W/2] = 1;\n                    grid[H-1-h][W/2] = 1;\n                    line += 1;\n                    ans += 1;\n                }\n            }\n        }\n        if H % 2 != 0 && W % 2 != 0 {\n            if grid[H/2][W/2] == 1 {\n                ans += 1;\n                grid[H/2][W/2] = 0;\n            }\n        }\n        let mut ones = 0;\n        for h in 0..H {\n            for w in 0..W {\n                ones += grid[h][w];\n            }\n        }\n        match ones % 4 {\n            0 => (),\n            2 => if line == 0 {\n                ans += 2;\n            },\n            _ => unreachable!(),\n        }\n        ans\n    }\n}",
    "submit_ts": "1722698272",
    "subm_id": "1343175260"
}