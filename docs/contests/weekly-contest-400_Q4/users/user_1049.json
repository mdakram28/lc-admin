{
    "username": "anmol_saini",
    "submission": "class Solution {\npublic:\n    int helper(vector<int>& nums, int k) {\n        int first = nums[0];\n           int low=0,high=0;\n            // vector<int,int>p\n        int n1 = abs(first - k);\n        \n        unordered_map<int, int> m;\n        int n = nums[0];\n        for (int i = 0; i < 32; i++) {\n            if (n & (1 << i)) {\n                m[i]++;\n            }\n        }\n        \n       \n        while (high < nums.size()) {\n            if (first > k || low > high) {\n                high++;\n                    \n        //               for (auto x : m) {\n        //     for (const auto& p : x.second) {\n        //         a.push_back({p, x.first});\n        //     }\n        // }\n                    \n                    \n                if (high >= nums.size()) {\n                    break;\n                }\n                    \n                    \n//                       for (auto x : m) {\n//             for (const auto& p : x.second) {\n//                 a.push_back({p, x.first});\n//             }\n//         }\n                    \n                    \n                    \n                    \n                    \n                int temp = nums[high];\n                for (int i = 0; i < 32; i++) {\n                    if (temp & (1 << i)) {\n                        m[i]++;\n                    }\n                }\n            } else {\n                int temp = nums[low];\n                for (int i = 0; i < 32; i++) {\n                        \n                        \n                        \n                        \n//                          for (int i = 0; i < s.length(); ++i) {\n//             if (s[i] != '*') {\n//                 m[s[i]].push_back(i);\n//             } else {\n//                 for (char c = 'a'; c <= 'z'; ++c) {\n//                     if (m[c].size() > 0) {\n//                         m[c].pop_back();\n//                         break;\n//                     }\n//                 }\n//             }\n//         }\n                        \n                        \n                        \n                        \n                    if (temp & (1 << i)) {\n                            // cout<temp;\n                        m[i]--;\n                    }\n                }\n                low++;\n            }\n\n            first = 0;\n            for (auto it = m.begin(); it != m.end(); it++) {\n                    // cout<<*it<<endl\n                if (it->second == high - low + 1) {\n                             // cout<<*it.second<<endl\n                    first += (1 << it->first);\n                }\n            }\n\n            if (low <= high) {\n                n1 = min(n1, abs(first - k));\n            }\n        }\n\n        return n1;\n    }\n    \n    int minimumDifference(vector<int>& arr, int k) {\n        return helper(arr, k);\n    }\n};",
    "submit_ts": "1717300462",
    "subm_id": "1274844955"
}