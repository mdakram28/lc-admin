{
    "username": "Tanguilol",
    "submission": "class Solution {\n    \n    private boolean isPalindrome(long v) {\n        String s = String.valueOf(v);\n        \n        for (int i = 0; i < s.length() / 2; i++) {\n            if (s.charAt(i) != s.charAt(s.length() - i - 1)) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    private boolean isDivisibleBySeven(String s) {\n        int remainder = sevenRemainder(s);\n        return remainder % 7 == 0 || remainder == 0;\n    }\n    \n    private int sevenRemainder(String s) {\n        int subtract = 0;\n        \n        // it's a palindrome\n        for (int i = 0; i < s.length(); i++) {\n            int v = s.charAt(i) - '0';\n            v -= subtract % 10;\n            \n            if (v < 0) {\n                v += 10;\n                subtract += 10;\n            }\n            \n            subtract /= 10;\n            subtract += (v * 2);\n        }\n        \n        return subtract;\n    }\n    \n    public String largestPalindrome(int n, int k) {\n        StringBuilder result = new StringBuilder();\n        \n        /*\n        StringBuilder sb = new StringBuilder();\n        \n        for (int i = 0; i < 20; i++) {\n            sb.append(9);\n            \n            System.out.println(sb.toString() + \" \" + sevenRemainder(sb.toString()));\n        }\n        \n        /*\n        long v = 1;\n        for (int i = 0; i < 13; i++) {\n            v *= 10;\n            long max = 0;\n            \n            for (long j = v; j > 0; j--) {\n                if (j % 7 == 0 && isPalindrome(j)) {\n                    max = j;\n                    break;\n                }\n            }\n            \n            System.out.println(max);\n        }\n        \n        \n        if (true) {\n            return \"\";\n        }\n        */\n        \n        if (k == 1 || k == 3 || k == 9) {\n            for (int i = 0; i < n; i++) {\n                result.append(9);\n            }\n            \n        } else if (k == 2) {\n            result.append(8);\n            \n            if (n > 1) {\n                for (int i = 1; i < n - 1; i++) {\n                    result.append(9);\n                }\n                \n                result.append(8);\n            }\n            \n        } else if (k == 4) {\n            \n            if (n == 1) {\n                result.append(8);\n                \n            } else if (n == 2) {\n                result.append(88);\n            } else if (n == 3) {\n                result.append(888);\n            } else {\n                result.append(88);\n                \n                for (int i = 2; i < n - 2; i++) {\n                    result.append(9);\n                }\n                \n                result.append(88);\n            }\n        } else if (k == 5) {\n            result.append(5);\n            \n            if (n > 1) {\n                for (int i = 1; i < n - 1; i++) {\n                    result.append(9);\n                }\n                \n                result.append(5);\n            }\n            \n        } else if (k == 6) {\n            if (n == 1) {\n                result.append(6);\n                \n            } else if (n == 2) {\n                result.append(66);\n                \n            } else if (n == 3) {\n                result.append(888);\n                \n            } else if (n % 2 == 0) {\n                result.append(8);\n                \n                for (int i = 0; i < (n - 4) / 2; i++) {\n                    result.append(9);\n                }\n                \n                result.append(77);\n                \n                for (int i = 0; i < (n - 4) / 2; i++) {\n                    result.append(9);\n                }\n                \n                result.append(8);\n                \n            } else {\n                result.append(8);\n                \n                for (int i = 0; i < (n - 3) / 2; i++) {\n                    result.append(9);\n                }\n                \n                result.append(8);\n                \n                for (int i = 0; i < (n - 3) / 2; i++) {\n                    result.append(9);\n                }\n                \n                result.append(8);\n            }\n        } else if (k == 7) {  \n            if (n % 2 == 0) {\n                for (int i = 9; i >= 0; i--) {\n                    StringBuilder sb = new StringBuilder();\n                    \n                    for (int j = 0; j < (n - 2) / 2; j++) {\n                        sb.append(9);\n                    }\n                    \n                    sb.append(i).append(i);\n                    \n                    for (int j = 0; j < (n - 2) / 2; j++) {\n                        sb.append(9);\n                    }\n                    \n                    //System.out.println(n + \" \" + sb.toString() + \" \" + sevenRemainder(sb.toString()));\n                    if (isDivisibleBySeven(sb.toString())) {\n                        return sb.toString();\n                    }\n                }\n            } else {\n                for (int i = 9; i >= 0; i--) {\n                    StringBuilder sb = new StringBuilder();\n                    \n                    for (int j = 0; j < (n - 1) / 2; j++) {\n                        sb.append(9);\n                    }\n                    \n                    sb.append(i);\n                    \n                    for (int j = 0; j < (n - 1) / 2; j++) {\n                        sb.append(9);\n                    }\n                    \n                    //System.out.println(n + \" \" + sb.toString() + \" \" + sevenRemainder(sb.toString()));\n                    if (isDivisibleBySeven(sb.toString())) {\n                        return sb.toString();\n                    }\n                }\n            }\n            \n            throw new IllegalStateException(\"assumption not correct\");\n            \n        } else if (k == 8) {\n            if (n == 1) {\n                result.append(8);\n                \n            } else if (n == 2) {\n                result.append(88);\n                \n            } else if (n == 3) {\n                result.append(888);\n                \n            } else if (n == 4) {\n                result.append(8888);\n                \n            } else if (n == 5) {\n                result.append(88888);\n                \n            } else {\n                result.append(888);\n                \n                for (int i = 0; i < n - 6; i++) {\n                    result.append(9);\n                }\n                \n                result.append(888);\n            }\n        }\n        \n        return result.toString();\n    }\n}",
    "submit_ts": "1723952258",
    "subm_id": "1359791913"
}