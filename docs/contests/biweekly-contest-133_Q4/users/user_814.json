{
    "username": "Yash_Gupta2803",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int mod = 1e9+7;\n        vector<vector<long long>> dp(n+1, vector<long long>(401 , 0));\n        dp[0][0] = 1;\n        unordered_map<int,int> mp;\n        for(auto &it : requirements) mp[it[0]+1] = it[1];\n        \n        for(int i = 1 ; i <= n ; i++){\n            for(int j = 0 ; j <= 400 ; j++){\n                for(int k = 0 ; k < i ; k++){\n                    if(j - k >= 0){\n                        dp[i][j] += dp[i-1][j-k];\n                        dp[i][j] %= mod;\n                    }\n                }\n            }\n            \n            if(mp.count(i) > 0){\n                int req = mp[i];\n                for(int j = 0 ; j <= 400 ; j++){\n                    if(j != req) dp[i][j] = 0;\n                }\n            }\n        }\n        \n        long long ans = 0;\n        for(int i = 0 ; i <= 400 ; i++){\n            ans += dp[n][i];\n            ans %= mod;\n        }\n        return (int)ans;\n    }\n};",
    "submit_ts": 1719071301.0
}