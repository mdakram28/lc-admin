{
    "username": "JustinZhengBC",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        k -= 1;\n        int ways = 0;\n        int j = 0;\n        while (1) {\n            int incs = (1 << j) - 1;\n            // k = incs - decs\n            int decs = incs - k;\n            if (decs > j + 1) {\n                break;\n            } else if (decs < 0) {\n                ++j; continue;\n            }\n            // cout << j << \" \" << decs << \" \" << ways << endl;\n            ways += binom(j + 1, decs);\n            // cout << \" \" << ways << endl;\n            ++j;\n        }\n        return ways;\n    }\n    int binom(int x, int y) {\n        int z = x - y;\n        if (y < z) {\n            swap(y, z);\n        }\n        long long res = 1;\n        int i = 1;\n        for (; i <= (x - y); ++i) {\n            // cout << \"multiply \" << (y+i) << endl;\n            res *= (y + i);\n            if (i <= z) {\n                // cout << \"divide \" << (i) << endl;\n                res /= i;\n            }\n        }\n        while (i <= z) {\n            // cout << \"divide \" << (i) << endl;\n            res /= (i++);\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716088046.0
}