{
    "username": "Saurabh_1602",
    "submission": "\n\nclass Solution {\npublic:\n    class SGTree {\n        vector<int> seg;\n\n    public:\n        SGTree(int n) {\n            seg.resize(4 * n + 1);\n        }\n\n        void build(int ind, int low, int high, vector<int> &a) {\n            if (low == high) {\n                seg[ind] = a[low];\n                return;\n            }\n            int mid = (low + high) / 2;\n            build(2 * ind + 1, low, mid, a);\n            build(2 * ind + 2, mid + 1, high, a);\n            seg[ind] = seg[2 * ind + 1] & seg[2 * ind + 2];\n        }\n\n        int query(int ind, int low, int high, int l, int r) {\n            if (low >= l && high <= r) {\n                return seg[ind];\n            }\n            if (high < l || low > r) {\n                return INT_MAX;\n            }\n            int mid = (low + high) / 2;\n            int left = query(2 * ind + 1, low, mid, l, r);\n            int right = query(2 * ind + 2, mid + 1, high, l, r);\n            return left & right;\n        }\n\n        void update(int ind, int low, int high, int i, int val) {\n            if (low == high) {\n                seg[ind] = val;\n                return;\n            }\n            int mid = (low + high) / 2;\n            if (i <= mid) {\n                update(2 * ind + 1, low, mid, i, val);\n            } else {\n                update(2 * ind + 2, mid + 1, high, i, val);\n            }\n            seg[ind] = seg[2 * ind + 1]&seg[2 * ind + 2];\n        }\n    };\n\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        if(n==1){\n            return abs(k-nums[0]);\n        }\n        SGTree st(n);\n        st.build(0, 0, n - 1, nums);\n\n        int res = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = -1, r = n - 1;\n            while (r - l > 1) {\n                int mid = l + (r - l) / 2;\n                if (st.query(0, 0, n - 1, i, mid) >= k) {\n                    l = mid;\n                } else {\n                    r = mid;\n                }\n            }\n            if (l+1 != i ) {\n                res = min(res, abs(st.query(0, 0, n - 1, i, l) - k));\n            }\n        \n                res = min(res, abs(k - st.query(0, 0, n - 1, i, r)));\n            \n        }\n        return res;\n    }\n};\n\n",
    "submit_ts": 1717299737.0
}