{
    "username": "TUSHARARORATA1",
    "submission": "using System;\n\npublic class CustomSegmentTree {\n    private int size;\n    private int[] ped; // ped: Segment tree array\n\n    public CustomSegmentTree(int[] s) {\n        size = s.Length;\n        ped = new int[4 * size]; // Allocate space for segment tree\n        Construct(s, 0, 0, size - 1); // Build segment tree\n    }\n\n    private void Construct(int[] s, int node, int start, int end) {\n        if (start == end) {\n            ped[node] = s[start];\n        } else {\n            int mid = (start + end) / 2;\n            Construct(s, 2 * node + 1, start, mid);\n            Construct(s, 2 * node + 2, mid + 1, end);\n            ped[node] = ped[2 * node + 1] & ped[2 * node + 2]; // Feature\n        }\n    }\n\n    public int Adhyaksh(int left, int right) {\n        return ShreniAurAnuroop(0, 0, size - 1, left, right); // Range and Query\n    }\n\n    private int ShreniAurAnuroop(int node, int start, int end, int left, int right) {\n        if (right < start || end < left) {\n            return int.MaxValue;\n        }\n        if (left <= start && end <= right) {\n            return ped[node];\n        }\n        int mid = (start + end) / 2;\n        int leftResult = ShreniAurAnuroop(2 * node + 1, start, mid, left, right);\n        int rightResult = ShreniAurAnuroop(2 * node + 2, mid + 1, end, left, right);\n        return leftResult & rightResult;\n    }\n}\n\npublic class Solution {\n    public int MinimumDifference(int[] nums, int k) { // Minimum Difference\n        int lambai = nums.Length;\n        var shreniVrksh = new CustomSegmentTree(nums); // Segment Tree\n        int kamSeKamAntar = int.MaxValue; // Minimum Difference\n\n        for (int i = 0; i < lambai; i++) {\n            int left = i - 1;\n            int right = lambai - 1;\n            while (right - left > 1) {\n                int mid = (left + right) / 2;\n                if (shreniVrksh.Adhyaksh(i, mid) >= k) { // Leader\n                    left = mid;\n                } else {\n                    right = mid;\n                }\n            }\n            if (left != i - 1) {\n                kamSeKamAntar = Math.Min(kamSeKamAntar, Math.Abs(shreniVrksh.Adhyaksh(i, left) - k));\n            }\n            kamSeKamAntar = Math.Min(kamSeKamAntar, Math.Abs(k - shreniVrksh.Adhyaksh(i, right)));\n        }\n        return kamSeKamAntar;\n    }\n}\n",
    "submit_ts": 1717300597.0
}