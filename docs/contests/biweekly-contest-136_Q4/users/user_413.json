{
    "username": "didwhddks",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        const int n = edges.size() + 1;\n        vector adj(n, vector<int>());\n        for (auto &e : edges) {\n            int u = e[0];\n            int v = e[1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        \n        vector<int> h(n);\n        auto dfs = [&](auto &&self, int u, int par) -> void {\n            for (int v : adj[u]) {\n                if (v == par) {\n                    continue;\n                }\n                self(self, v, u);\n                h[u] = max(h[u], h[v] + (v & 1 ? 1 : 2));\n            }\n        };\n        dfs(dfs, 0, -1);\n        \n        vector<int> ans(n);\n        auto dfs1 = [&](auto &&self, int u, int par, int mx) -> void {\n            ans[u] = max(h[u], mx);\n            vector<pair<int, int>> vec;\n            vec.emplace_back(mx, u);\n            for (int v : adj[u]) {\n                if (v == par) {\n                    continue;\n                }\n                vec.emplace_back(h[v] + (v & 1 ? 1 : 2), v);\n            }\n            sort(vec.begin(), vec.end());\n            reverse(vec.begin(), vec.end());\n            for (int v : adj[u]) {\n                if (v == par) {\n                    continue;\n                }\n                int nmx = vec[0].second == v ? vec[1].first : vec[0].first;\n                self(self, v, u, nmx + (u & 1 ? 1 : 2));\n            }\n        };\n        dfs1(dfs1, 0, -1, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722697081",
    "subm_id": "1343133429"
}