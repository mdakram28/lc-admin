{
    "username": "leetcode10000",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n=board.length;\n        int m=board[0].length;\n        int[][] arr = new int[n][3];\n        for(int j=0;j<n;j++){\n            int max1 = Integer.MIN_VALUE; // Maximum value\n            int max2 = Integer.MIN_VALUE; // Second maximum value\n            int max3 = Integer.MIN_VALUE; // Third maximum value\n            int max1Index = -1; // Index of the maximum value\n            int max2Index = -1; // Index of the second maximum value\n            int max3Index = -1; // Index of the third maximum value\n\n            // Traverse the array\n            for (int i = 0; i < board[0].length; i++) {\n                if (board[j][i] > max1) {\n                    // Update third and second maximum before updating maximum\n                    max3 = max2;\n                    max3Index = max2Index;\n\n                    max2 = max1;\n                    max2Index = max1Index;\n\n                    // Update maximum\n                    max1 = board[j][i];\n                    max1Index = i;\n                } else if (board[j][i] > max2 && board[j][i] <= max1) {\n                    // Update third maximum before updating second maximum\n                    max3 = max2;\n                    max3Index = max2Index;\n\n                    // Update second maximum\n                    max2 = board[j][i];\n                    max2Index = i;\n                } else if (board[j][i] > max3 && board[j][i] <= max2) {\n                    // Update third maximum\n                    max3 = board[j][i];\n                    max3Index = i;\n                }\n            }\n            arr[j][0] = max1Index;\n            arr[j][1] = max2Index;\n            arr[j][2] = max3Index;\n        }\n        // for(int i=0;i<n;i++){\n        //     for(int j=0;j<3;j++){\n        //         System.out.print(arr[i][j]+\" \");\n        //     }\n        //     System.out.println();\n        // }\n        long ans=Long.MIN_VALUE;\n        for(int i=0;i<n;i++){\n            \n            for(int j=0;j<n;j++){\n                if(j==i) continue;\n                \n                for(int k=0;k<n;k++){\n                    if(j==k || i==k) continue;\n                    ans=Math.max(ans,getAns(i,j,k,arr[i],arr[j],arr[k],board));\n                }\n            }\n        }\n        return ans;\n    }\n    public long getAns(int ii,int jj,int kk, int[]arr1,int[]arr2,int[]arr3,int[][]board){\n        long ans=Long.MIN_VALUE;\n        for(int i=0;i<3;i++){\n            for(int j=0;j<3;j++){\n                if(arr1[i]==arr2[j]) continue;\n                for(int k=0;k<3;k++){\n                    if(arr1[i]==arr3[k]) continue;\n                    if(arr2[j]==arr3[k]) continue;\n                    ans=Math.max(ans,((long)board[ii][arr1[i]])+board[jj][arr2[j]]+board[kk][arr3[k]]);\n                }\n            }\n        }return ans;\n    }\n}",
    "submit_ts": "1723908956",
    "subm_id": "1359173895"
}