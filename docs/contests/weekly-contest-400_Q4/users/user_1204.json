{
    "username": "ashish11122003",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size(),j=0,ans=INT_MAX;\n        vector<int>bits(32);\n        for(int i=0;i<n;i++){\n            int val=nums[i],c=0,curr=0;\n            while(val>0){\n                bits[c]+=(val%2);\n                c++,val=val/2;\n            }\n            for(int x=0;x<32;x++){\n                if(bits[x]==(i-j+1))    curr+=(pow(2,x));\n            }\n            ans=min(ans,abs(curr-k));\n            while(j<i and curr<=k){\n                c=0,val=nums[j],curr=0;\n                while(val>0){\n                    bits[c]-=(val%2);\n                    c++,val=val/2;\n                }\n                j++;\n                for(int x=0;x<32;x++){\n                    if(bits[x]==(i-j+1))    curr+=(pow(2,x));\n                }\n                ans=min(ans,abs(curr-k));\n            }\n            ans=min(ans,abs(curr-k));\n            //cout<<ans<<\" \";\n        }\n        //cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717300043.0
}