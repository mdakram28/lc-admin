{
    "username": "shreejayj",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans=0;\n        int n=nums.size();\n        vector<int>diff(n);\n        for(int i=0;i<n;i++)\n        {\n            diff[i]=target[i]-nums[i];\n            // cout<<diff[i]<<\" \";\n        }\n        int prevSign=(diff[0]>0?1:(diff[0]<0?-1:0));\n        ans=abs(diff[0]);\n        for(int i=1;i<n;i++)\n        {\n            int currSign=(diff[i]>0?1:(diff[i]<0?-1:0));\n            if(prevSign==currSign)\n            {\n                if((currSign*diff[i])>(currSign*diff[i-1]))\n                {\n                    ans+=(1ll)*abs(diff[i]-diff[i-1]);\n                }\n            }\n            else\n            {\n                ans+=1ll*abs(diff[i]);\n                prevSign=currSign;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533713",
    "subm_id": "1328015042"
}