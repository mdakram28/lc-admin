{
    "username": "exciting-greidernqx",
    "submission": "const int N = 5e5 + 9;\nint tr[N];\n\nvoid inline push_up(int x)\n{\n    tr[x] = tr[x << 1] + tr[x << 1 | 1];\n}\nvoid inline build(int x,int l,int r, vector<int>& nums)\n{\n    if(l != r)\n    {\n        int mid = l + r >> 1;\n        build(x << 1,l,mid,nums);\n        build(x << 1 | 1,mid + 1,r,nums);\n        push_up(x);\n        if(mid - l + 1 > 1 && nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1])tr[x]++;\n        if(r - mid > 1 && nums[mid + 1] > nums[mid + 2] && nums[mid] < nums[mid + 1])tr[x]++;\n    }else tr[x] = 0;\n}\n\n\nint query(int x,int l,int r,int ll,int rr,vector<int>& nums)\n{\n    if(l >= ll && r <= rr)return tr[x];\n    int mid = l + r >> 1;\n    int res = 0;\n    if(ll > mid)\n    {\n        res = query(x << 1 | 1,mid + 1,r,ll,rr,nums);\n    }else if(rr <= mid)\n    {\n        res = query(x << 1,l,mid,ll,rr,nums);\n    }else \n    {\n        res += query(x << 1,l,mid,ll,rr,nums);\n        res += query(x <<1 | 1,mid + 1,r,ll,rr,nums);\n        if(mid - l + 1 > 1 && mid - ll + 1 > 1 && mid + 1 <= rr && nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1])res++;\n        //if(res)cout << nums[mid] << \" \" << \n        if(r - mid > 1 && rr - mid > 1 && mid >= ll && nums[mid + 1] > nums[mid + 2] && nums[mid] < nums[mid + 1])res++;\n    }\n    return res;\n}\n\nvoid inline updata(int x,int l,int r,int idx,int da,vector<int>& nums)\n{\n    if(l == r)nums[l] = da;\n    else{\n        int mid = l + r >>1;\n        if(idx <= mid)updata(x <<1,l,mid,idx,da,nums);\n        else updata(x <<1|1,mid + 1,r,idx,da,nums);\n        push_up(x);\n        if(mid - l + 1 > 1 && nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1])tr[x]++;\n        if(r - mid > 1 && nums[mid + 1] > nums[mid + 2] && nums[mid] < nums[mid + 1])tr[x]++;\n    }\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        build(1,0,nums.size()-1,nums);\n        vector<int> ans;\n        for(auto &t:queries)\n        {\n           // cout << t[0] << \" \" << t[1] << \" \" << t[2] << \" \" << query(1,0,nums.size()-1,t[1],t[2],nums) << \"\\n\";\n            if(t[0] - 1)\n            {\n                updata(1,0,nums.size()-1,t[1],t[2],nums);\n            }else ans.push_back(query(1,0,nums.size()-1,t[1],t[2],nums));\n           // cout << t[0] << \" \" << t[1] << \" \" << t[2] << \" \" << query(1,0,nums.size()-1,t[1],t[2],nums) << \"\\n\";\n        }\n        // for(int i = 0;i < 5;++i)\n        //     for(int j = i + 1;j < 5;++j)\n        //         cout << i << \" \"<< j << \" \" << query(1,0,nums.size()-1,i,j,nums) << \"\\n\";\n        return ans;\n    }\n};",
    "submit_ts": "1718507779",
    "subm_id": "539783417"
}