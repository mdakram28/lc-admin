{
    "username": "jfkjfk",
    "submission": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define fastio()        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD             1000000007\n#define MOD1            998244353\n#define INF             1e18\n#define endl            \"\\n\"\n#define pb              push_back\n#define mp              make_pair\n#define gcd(a, b)       __gcd(a,b)\n#define ff              first\n#define ss              second\n#define PI              3.141592653589793238462\n#define set_bits(x)     __builtin_popcountll(x)\n#define all(x)          (x).begin(), (x).end()\n\ntypedef long long ll;\ntypedef long double lld;\n\n/*---------------------------------------------------------------------------------------------------------------------------*/\nll power(ll a, ll n){\n    ll res = 1;\n    while(n){\n        if(n & 1){\n            res = (res * a) % MOD;\n        }\n        a = (a * a) % MOD;\n        n >>= 1;\n    }\n    return res;\n}\n/*---------------------------------------------------------------------------------------------------------------------------*/\n\nclass Solution {\npublic:\n    \n    bool isPalindrome(string &s){\n        int n = s.size();\n        for(int i=0; i<n/2; i++){\n            if(s[i] != s[n-i-1]){\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    bool isPrime(int n){\n        for(int i=2; i*i<=n; i++){\n            if(n % i == 0){\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    int getAns(int n, vector<vector<int>> &v){\n        // cout << 1;\n        int sz = v.size(), m = v[0].size();\n        ll arr[n+1][501];\n\n        for(int i=0; i<=n; i++){\n            for(int j=0; j<=500; j++){\n                arr[i][j] = 0;\n            }\n        }\n        arr[0][0] = 1;\n        \n        unordered_map<int,int> mp;\n        for(int i=0; i<sz; i++){\n            for(int j=0; j<m; j++){\n                mp[v[i][0] + 1] = v[i][1];\n            }\n        }\n        \n        // for(auto &it : v){\n        //     mp[it[0] + 1] = it[1];\n        // }\n        \n        for(int i=1; i<=n;){\n            for(int j=0; j<=400;){\n                for(int k=0; k<i;){\n                    int prev = j - k;\n                    if(prev > 0 || prev == 0){\n                        arr[i][j] = (arr[i][j] + arr[i-1][prev]) % MOD;\n                    }\n                    k++;\n                }\n                j++;\n            }\n            if(mp.count(i)){\n                int req = mp[i];\n                for(int curr=0; curr<=400;){\n                    if(curr != req){\n                        arr[i][curr] = 0;\n                    }\n                    curr++;\n                }\n            }\n            i++;\n        }\n        ll ans = 0;\n        // ll curr = 0;\n        for(ll curr=0; curr<=400;){\n            ans = (ans + arr[n][curr]) % MOD;\n            curr++;\n        }\n        return (int)ans;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int ans = getAns(n,requirements);\n        return ans;\n    }\n};\n\n// int main(){\n//     fastio();\n\n//     ll t=1;\n//     cin >> t;\n\n//     for(ll i=1; i<=t; i++){\n//         // cout << \"Case #\" << i << \": \";\n//         solve(i);\n//     }\n\n//     return 0;\n// }",
    "submit_ts": 1719071815.0
}