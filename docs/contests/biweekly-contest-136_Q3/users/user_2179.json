{
    "username": "yan-jiu-shi-yan",
    "submission": "\nfunc minFlips(grid [][]int) int {\n\t// theRes := math.MaxInt\n\ttheRes := 0\n\tn, m := len(grid), len(grid[0])\n\tif n == 1 {\n\t\tcount1 := 0\n\t\tfor i := 0; i < n; i++ {\n\t\t\tfor j := 0; j < m/2; j++ {\n\t\t\t\tif grid[i][j] != grid[i][m-1-j] {\n\t\t\t\t\ttheRes++\n\t\t\t\t} else if grid[i][j] == 1 && grid[i][m-1-j] == 1 {\n\t\t\t\t\tcount1 += 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount1 %= 4\n\t\tif count1 != 0 && theRes == 0 {\n\t\t\ttheRes += count1\n\t\t}\n\t\tif m%2 == 1 && grid[0][m/2] == 1 {\n\t\t\ttheRes++\n\t\t}\n\t\treturn theRes\n\t}\n\tif m == 1 {\n\t\tcount1 := 0\n\t\tfor i := 0; i < m; i++ {\n\t\t\tfor j := 0; j < n/2; j++ {\n\t\t\t\tif grid[j][i] != grid[n-1-j][i] {\n\t\t\t\t\ttheRes++\n\t\t\t\t} else if grid[j][i] == 1 && grid[n-1-j][i] == 1 {\n\t\t\t\t\tcount1 += 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount1 %= 4\n\t\tif count1 != 0 && theRes == 0 {\n\t\t\ttheRes += count1\n\t\t}\n\t\tif n%2 == 1 && grid[n/2][0] == 1 {\n\t\t\ttheRes++\n\t\t}\n\t\treturn theRes\n\t}\n\t// {\n\t// \tcount := 0\n\t// \tif m*n <= 2 {\n\t// \t\tfor i := 0; i < m; i++ {\n\t// \t\t\tfor j := 0; j < n; j++ {\n\t// \t\t\t\tif grid[i][j] == 1 {\n\t// \t\t\t\t\tcount++\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn count\n\t// \t}\n\t// }\n\ttype Pair struct {\n\t\tx, y int\n\t}\n\t//a b\n\t//c d\n\tadditionCount := 0\n\tadditonTheRes := 0\n\tfor i := 0; i < n/2+n%2; i++ {\n\t\tfor j := 0; j < m/2+m%2; j++ {\n\t\t\tpa := Pair{i, j}\n\t\t\tpb := Pair{i, m - 1 - j}\n\t\t\tpc := Pair{n - 1 - i, j}\n\t\t\tpd := Pair{n - 1 - i, m - 1 - j}\n\t\t\tcount := 0\n\t\t\ttheMap := map[Pair]bool{}\n\n\t\t\ttheMap[pa] = true\n\t\t\ttheMap[pb] = true\n\t\t\ttheMap[pc] = true\n\t\t\ttheMap[pd] = true\n\n\t\t\tfor p := range theMap {\n\t\t\t\tcount += grid[p.x][p.y]\n\t\t\t}\n\t\t\t// count += grid[pa.x][pa.y]\n\t\t\t// count += grid[pb.x][pb.y]\n\t\t\t// count += grid[pc.x][pc.y]\n\t\t\t// count += grid[pd.x][pd.y]\n\n\t\t\tif len(theMap) == 4 {\n\t\t\t\ttheRes += min(count, 4-count)\n\t\t\t} else if len(theMap) == 1 {\n\t\t\t\ttheRes += count\n\t\t\t} else if len(theMap) == 2 {\n\t\t\t\tif count == 1 {\n\t\t\t\t\tadditonTheRes += count\n\t\t\t\t} else {\n\t\t\t\t\tadditionCount += count\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tadditionCount %= 4\n\ttheRes += additonTheRes\n\tif additionCount != 0 && additonTheRes == 0 {\n\t\ttheRes += additionCount\n\t}\n\n\treturn theRes\n\n}\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\nfunc abs(a int) int {\n\tif a > 0 {\n\t\treturn a\n\t}\n\treturn -a\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n",
    "submit_ts": "1722699398",
    "subm_id": "552275458"
}