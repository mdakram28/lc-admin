{
    "username": "rtmkz",
    "submission": "#include <bits/stdc++.h>\n \n#define f first\n#define s second\n \n#define pb push_back\n#define pp pop_back\n#define mp make_pair\n \n#define sz(x) (int)x.size()\n#define sqr(x) ((x) * 1ll * (x))\n#define all(x) x.begin(), x.end()\n \n#define rep(i, l, r) for (int i = (l); i <= (r); i++)\n#define per(i, l, r) for (int i = (l); i >= (r); i--)\n \n#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);\n \n#define nl '\\n'\n#define ioi exit(0);\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n \nconst int N = (int)5e5 + 7;\nconst int inf = (int)1e9 + 7;\nconst int mod = (int)1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\n \nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};\nconst int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n \nusing namespace std;\n\nstruct fenwick {\n\tint n;\n\tvector <int> f;\n\tfenwick() {}\n\tfenwick(int n_) {\n\t\tn = n_;\n\t\tf.resize(n, 0);\n\t}\n\n\tvoid upd(int p, int x, bool fl = 0) {\n\t\tif (fl) p = n - p - 1;\n\t\tfor (; p < n; p |= p + 1) f[p] = max(f[p], x);\n\t}\n\tint get(int p, bool fl = 0) {\n\t\tint res = 0;\n\t\tif (fl) p = n - p - 1;\n\t\tfor (; p >= 0; p = (p & (p + 1)) - 1) res = max(res, f[p]);\n\t\treturn res;\n\t}\n};\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        {\n            vector <int> cmp;\n            for (auto it : a) {\n                cmp.pb(it);\n            }\n            sort(all(cmp));\n            cmp.erase(unique(all(cmp)), cmp.end());\n            for (auto &it : a) {\n                it = lower_bound(all(cmp), it) - cmp.begin();\n            }\n        }\n        int n = sz(a);\n        vector<vector<int>> dp(n, vector<int>(k+1, 0));\n\t\t\t\tfenwick pf[k + 1], sf[k + 1];\n\t\t\t\trep(i, 0, k) {\n\t\t\t\t\tpf[i] = fenwick(n);\n\t\t\t\t\tsf[i] = fenwick(n);\n\t\t\t\t}\n\n        for (auto it : a) {\n\t\t\t\t\tper(i, k, 0) {\n\t\t\t\t\t\t\tdp[it][i] = max(dp[it][i], dp[it][i] + 1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (i) {\n\t\t\t\t\t\t\t\tif (it) dp[it][i] = max(dp[it][i], pf[i - 1].get(it - 1) + 1);\n\t\t\t\t\t\t\t\tif (it + 1 < n) dp[it][i] = max(dp[it][i], sf[i - 1].get(it + 1, 1) + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trep(i, 0, k) {\n\t\t\t\t\t\tpf[i].upd(it, dp[it][i]);\n\t\t\t\t\t\tsf[i].upd(it, dp[it][i], 1);\n\t\t\t\t\t}\n        }\n        int ans = 0;\n        for (auto it : a) ans = max(ans, *max_element(all(dp[it])));\n        return ans;\n    }\n};\n\n\n/*\n\ndp[k][x]\n\n*/",
    "submit_ts": "1717859374",
    "subm_id": "1281720083"
}