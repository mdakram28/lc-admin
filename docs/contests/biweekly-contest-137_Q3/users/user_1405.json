{
    "username": "Om Amar",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        dp = [[-float('inf') for i in range(len(board[0]))] for j in range(len(board))]\n        dp1 = [[-float('inf') for i in range(len(board[0]))] for j in range(len(board))]\n        dp2 = [[-float('inf') for i in range(len(board[0]))] for j in range(len(board))]\n        dp3 = [[-float('inf') for i in range(len(board[0]))] for j in range(len(board))]\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                dp[i][j] = board[i][j]\n                dp1[i][j] = board[i][j]\n                if i-1>=0:\n                    dp1[i][j] = max(dp1[i][j],dp1[i-1][j])\n                if j-1>=0:\n                    dp[i][j] = max(dp[i][j],dp[i][j-1])\n        for i in range(len(board)-1,-1,-1):\n            for j in range(len(board[0])-1,-1,-1):\n                dp2[i][j] = board[i][j]\n                dp3[i][j] = board[i][j]\n                if i+1<len(board):\n                    dp2[i][j] = max(dp2[i][j],dp2[i+1][j])\n                if j+1<len(board[0]):\n                    dp3[i][j] = max(dp3[i][j],dp3[i][j+1])\n        # for i in range(len(board)-1,-1,-1):\n        #     for j in range(len(board[0])):\n        #         dp2[i][j] = board[i][j]\n        #         if i+1<len(board):\n        #             dp2[i][j] = max(dp2[i][j],dp2[i+1][j])\n        #         if j-1>=0:\n        #             dp2[i][j] = max(dp2[i][j],dp2[i][j-1])\n        # for i in range(len(board)):\n        #     for j in range(len(board[0])-1,-1,-1):\n        #         dp3[i][j] = board[i][j]\n        #         if i-1>=0:\n        #             dp3[i][j] = max(dp3[i][j],dp3[i-1][j])\n        #         if j+1<len(board[0]):\n        #             dp3[i][j] = max(dp3[i][j],dp3[i][j+1])\n        fans = -float('inf')\n        #print(dp)\n        #print(dp)\n        def max1(L,i,j):\n            ans = -float('inf')\n            for t in range(i):\n                ans = max(ans,L[t][k])\n            return ans\n        def max2(L,i,j):\n            ans = -float('inf')\n            for t in range(i+1,len(board)):\n                ans = max(ans,L[t][k])\n            return ans\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                ans = board[i][j]\n                # L = []\n                # if i+1<len(board) and j+1<len(board[0]):\n                #     L.append(dp1[i+1][j+1])\n                # if i-1>=0 and j-1>=0:\n                #     L.append(dp[i-1][j-1])\n                # if len(L)>=2:\n                #     fans = max(fans,ans+L[-1]+L[-2])\n                # L = []\n                # if i+1<len(board) and j-1>=0:\n                #     L.append(dp2[i+1][j-1])\n                # if i-1>=0 and j+1<len(board):\n                #     L.append(dp3[i-1][j+1])\n                # if len(L)>=2:\n                #     fans = max(fans,ans+L[-1]+L[-2])\n                # ## for side by side\n                if j>0 and j<len(board[0])-1:\n                    L2 = []\n                    for k in range(i+1,len(board)):\n                        L2.append([dp3[k][j+1],(dp[k][j-1])])\n                    for k in range(i):\n                        L2.append([dp3[k][j+1],(dp[k][j-1])])\n                    L3 = sorted(L2,key = lambda x:x[0])\n                    L2 = sorted(L2,key = lambda x:x[1])\n                    if len(L3)>1 and L2[-1]==L3[-1]:\n                        fans = max(fans,ans+L2[-1][1]+L3[-2][0],ans+L2[-2][1]+L3[-1][0])\n                    elif len(L3)>1 and L2[-1]!=L3[-1]:\n                        fans = max(fans,ans+L2[-1][1]+L3[-1][0])\n                    #print(board[i][j],L2,L3)\n                if i>0 and i<len(board)-1:\n                    L2 = []\n                    for k in range(j+1,len(board[0])):\n                        L2.append([dp1[i-1][k],dp2[i+1][k]])\n                    for k in range(j):\n                        L2.append([dp1[i-1][k],dp2[i+1][k]])\n                    L3 = sorted(L2,key = lambda x:x[0])\n                    L2 = sorted(L2,key = lambda x:x[1])\n                    if len(L3)>1 and L2[-1]==L3[-1]:\n                        fans = max(fans,ans+L2[-1][1]+L3[-2][0],ans+L2[-2][1]+L3[-1][0])\n                    elif len(L3)>1 and L2[-1]!=L3[-1]:\n                        fans = max(fans,ans+L2[-1][1]+L3[-1][0])\n                    #print(board[i][j],L2,L3)\n                #ans main plus karo max value in i+1,j+1,i-1..\n        return fans",
    "submit_ts": "1723909512",
    "subm_id": "1359195343"
}