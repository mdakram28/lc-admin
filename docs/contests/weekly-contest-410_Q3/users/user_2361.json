{
    "username": "sdjhanjd",
    "submission": "auto optimize_cpp_stdio = []()\n{\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    std::cout.tie(nullptr);\n    return 0;\n}();\nclass Solution\n{\npublic:\n    const static int maxn = 1e5 + 10;\n    const static int maxm = 1e5 + 10;\n    const static long long mod = 1e9 + 7;\n    const long long INF_LL = 0x3f3f3f3f3f3f3f3f;\n    const int INF = 0x3f3f3f3f;\n    long long dp[2010][100];\n    // long long ans = 0;\n    long long len;\n    vector<int> nums;\n    vector<int> maxx;\n    long long dfs(int step, int pre1, int pre2)\n    {\n        if (step >= len)\n            return 1;\n        if (dp[step][pre1] != -1)\n            return dp[step][pre1];\n        long long ans = 0;\n        for (int num = max(pre1, nums[step] - pre2); num <= nums[step]; ++num)\n        {\n            if (num < pre1 || nums[step] - num > pre2)\n                continue;\n            if (num > maxx[step])\n                continue;\n            ans = (ans + dfs(step + 1, num, nums[step] - num)) % mod;\n        }\n        if (dp[step][pre1] == -1)\n            dp[step][pre1] = ans;\n        return ans;\n    }\n    int countOfPairs(vector<int> &nums)\n    {\n        this->nums = nums;\n        len = nums.size();\n        maxx.resize(len);\n        maxx[0] = nums[0];\n        memset(dp, -1, sizeof(dp));\n        for (int i = 1; i < len; ++i)\n        {\n            maxx[i] = max(maxx[i - 1], nums[i]);\n        }\n\n        return dfs(0, 0, INF);\n    }\n};",
    "submit_ts": "1723346320",
    "subm_id": "1351574996"
}