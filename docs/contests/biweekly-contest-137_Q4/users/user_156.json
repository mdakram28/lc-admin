{
    "username": "lee0560",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n\n        def l2r(a):\n            res = []\n            t = -inf\n            for i,val in enumerate(a):\n                t = max(t, val)\n                res.append(t)\n            return res\n\n        def r2l(a):\n            m = len(a)\n            res = [0] * m\n            t = -inf\n            for i in range(m-1, -1, -1):\n                t = max(t, a[i])\n                res[i] = t\n            return res\n\n\n        def init(idx):\n            b = board[idx]\n            la = l2r(ar)\n            lb = l2r(b)\n            ra = r2l(ar)\n            rb = r2l(b)\n            for i in range(1, m-1):\n                best[i] = max(best[i], la[i-1] + rb[i+1], lb[i-1] + ra[i+1])\n            f = [-inf] * 4\n            f[0] = 0\n            g = [0] * 4\n            for i in range(1, m):\n                g[1] = max(f[1], f[0] + ar[i-1])\n                g[2] = max(f[2], f[0] + b[i-1])\n                g[3] = max(f[3], f[1] + b[i-1], f[2] + ar[i-1])\n                best[i] = max(best[i], g[3])\n                f, g = g, f\n            f = [-inf] * 4\n            f[0] = 0\n            g = [0] * 4            \n            for i in range(m-2, -1, -1):\n                g[1] = max(f[1], f[0] + ar[i+1])\n                g[2] = max(f[2], f[0] + b[i+1])\n                g[3] = max(f[3], f[1] + b[i+1], f[2] + ar[i+1])\n                best[i] = max(best[i], g[3])\n                f, g = g, f\n            for i in range(m):\n                ar[i] = max(ar[i], b[i])\n\n        res = -inf\n        n, m = len(board), len(board[0])\n        best = [-inf] * m\n        ar = board[0][:]\n        init(1)\n        for i in range(2, n):\n            for j in range(m):\n                res = max(res, best[j] + board[i][j])\n            init(i)\n        return res",
    "submit_ts": "1723908515",
    "subm_id": "556331333"
}