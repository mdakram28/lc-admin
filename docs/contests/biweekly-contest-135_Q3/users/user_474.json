{
    "username": "acebenson0704",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        # max_diff_with_one_change = [0] * (n // 2)\n        count = Counter()\n        diffs = [0] * (k+1)\n        for i in range(n // 2):\n            diff = abs(nums[i] - nums[n-i-1])\n            count[diff] += 1\n            max_diff_with_one_change = max(max(nums[i], k-nums[i]), max(nums[n-i-1], k-nums[n-i-1]))\n            if max_diff_with_one_change < k:\n                diffs[max_diff_with_one_change+1] += 1\n        # print(diffs)\n        for i in range(1, k+1):\n            diffs[i] += diffs[i-1]\n        # print(diffs)\n        # print(count)\n        \n        res = float('inf')\n        for x in range(k+1):\n            # print(x, diffs[x], count[x])\n            res = min(res, diffs[x] - count[x])\n        return res + (n // 2)",
    "submit_ts": "1721488209",
    "subm_id": "1327415011"
}