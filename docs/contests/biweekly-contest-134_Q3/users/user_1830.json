{
    "username": "gidbft",
    "submission": "from typing import List\n\n\nclass Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        for i in range(k - 1):\n            colors += [colors[i]]\n        masks = [False] * len(colors)\n        for i in range(1, len(colors)):\n            if colors[i] == colors[i - 1]:\n                masks[i] = True\n        l, r, nxt = 0, 0, 0\n        ans = 0\n        print(masks)\n        while r < len(colors):\n            if masks[r] == False:\n                if r - l + 1 >= k:\n                    # print(l, r, ans)\n                    ans += 1\n            else:\n                l = r\n            r+=1\n        return ans\n\n        # \u5bf9\u6bd4 \u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u53f3\u79fbl\u5230\u4e0b\u4e00\u4e2atrue\u7684\u4f4d\u7f6e.\n\n        # \u5bf9\u6bd4k\u4f4d \u6b21\u6570\n\n        pass\n\n\nprint(Solution().numberOfAlternatingGroups([0, 1, 0, 1, 0], 3))\n",
    "submit_ts": "1720277692",
    "subm_id": "544558209"
}