{
    "username": "BrayBray123",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pre(n+1, vector<int>(31));\n        \n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= 30; j++) {\n                if (((nums[i-1] >> j) & 1) == 1) {\n                    pre[i][j]++;\n                }\n                pre[i][j] += pre[i-1][j];\n            }\n        }\n        \n        int ans = INT_MAX;\n        for (int i = 1; i <= n; i++) {\n            int lo = i, hi = n;\n            while (lo <= hi) {\n                int mid = lo + (hi - lo) / 2;\n                int num = 0;\n                for (int j = 0; j <= 30; j++) {\n                    if (pre[mid][j] - pre[i-1][j] == mid - i + 1) {\n                        num |= (1 << j);\n                    }\n                }\n                ans = min(ans, abs(k - num));\n                if (num == k) return 0;\n                if (num < k) {\n                    hi = mid - 1;\n                } else {\n                    lo = mid + 1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717300213.0
}