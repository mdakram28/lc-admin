{
    "username": "little_jing",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int h = 1;\n        int v = 1;\n        int p1 = horizontalCut.length - 1;\n        int p2 = verticalCut.length  - 1;\n        long cost = 0;\n        while (p1 >= 0  && p2 >= 0 ) {\n            if (horizontalCut[p1] > verticalCut[p2]) {\n                // pick horizontal line\n                cost += v * horizontalCut[p1];\n                h++;\n                p1--;\n            } else {\n                cost += h * verticalCut[p2];\n                v++;\n                p2--;\n            }\n        }\n        \n        while (p1 >= 0) {\n            cost += v * horizontalCut[p1--];\n        }\n        \n        while (p2 >= 0) {\n            cost += h * verticalCut[p2--];\n        }\n        \n        return cost;\n    }\n}",
    "submit_ts": "1720926299",
    "subm_id": "1320282044"
}