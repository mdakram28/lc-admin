{
    "username": "Roumak77",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n    \n        # Precompute the top 3 values for each row\n        top_three = []\n        for row in board:\n            values = sorted([(value, col) for col, value in enumerate(row)], reverse=True)[:3]\n            top_three.append(values)\n        \n        curr_max = -float('inf')\n        \n        print(top_three)\n        \n        for r1 in range(m - 2):\n            for r2 in range(r1 + 1, m - 1):\n                for r3 in range(r2 + 1, m):\n                    \n                    \n                    for i in range(3):\n                        for j in range(3):\n                            for k in range(3):\n                                \n                                if(top_three[r1][i][1] != top_three[r2][j][1] and top_three[r1][i][1] != top_three[r3][k][1] and top_three[r2][j][1] != top_three[r3][k][1]):\n                                    curr_max = max(curr_max, top_three[r1][i][0] + top_three[r2][j][0] + top_three[r3][k][0])\n                                    \n                                \n        \n        return curr_max\n                    \n                    \n       ",
    "submit_ts": "1723907966",
    "subm_id": "1359132394"
}