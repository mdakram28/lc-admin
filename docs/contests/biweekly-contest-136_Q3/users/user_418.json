{
    "username": "r10922102",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < m/2; i++){\n            for(int j = 0; j < n/2; j++){\n                // the number of flip is \n                int tmp = grid[i][j] + grid[i][n-j-1] + grid[m-i-1][j] + grid[m-i-1][n-j-1];\n                ans += min(4-tmp, tmp);\n            }\n        }\n        \n        if((m&1) == 1 && (n&1)== 1){\n            ans += grid[m/2][n/2];\n        }\n\n\n        int cnt = 0;\n        int one = 0;\n        if((m&1) == 1){\n            for(int i = 0; i < n/2; i++){\n                one += grid[m/2][i];\n                if(grid[m/2][i] != grid[m/2][n-i-1]){\n                    cnt++;\n                }\n            }\n        }\n        if((n&1) == 1){\n            for(int i = 0; i < m/2; i++){\n                one += grid[i][n/2];\n                if(grid[i][n/2] != grid[m-i-1][n/2]){\n                    cnt++;\n                }\n            }\n        }\n        ans += cnt;\n        if(cnt == 0 && (one & 1) == 1) ans += 2;\n        return ans;\n    }\n};\n\n/*\nAB\nCD\n110\n010\n011\n*/",
    "submit_ts": "1722696863",
    "subm_id": "1343125148"
}