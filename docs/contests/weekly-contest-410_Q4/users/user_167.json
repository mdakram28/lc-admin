{
    "username": "mohitkanodia",
    "submission": "class Solution {\n\n    int MOD = 1000_000_007;\n    long[][] dp;\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n\n        // int ans = dfs2(n, nums);\n        int ans = bfs(n, nums);\n        return ans;\n    }\n\n    int df2(int n, int[] a) {\n        dp = new long[n][52];\n\n        for(long[] arr : dp) {\n            Arrays.fill(arr, -1);\n        }\n\n        long ans = dfs(0, 0, n, a);\n        return (int)ans;\n    }\n\n    int bfs(int n, int[] a) {\n        dp = new long[n+1][1001];\n        long[][] ps = new long[n+1][1001];\n        \n        for(int i = n; i >= 0; i--) {\n            for(int p = 0; p <= 1000; p++) {\n                if(i == n) {\n                    dp[i][p] = 1;\n                    ps[i][p] = p == 0 ? dp[i][p] : (ps[i][p-1] + dp[i][p])%MOD;\n                    continue;\n                }\n\n                long ans = 0;\n\n                int p1 = p;\n                int p2 = i == 0 ? 1000 : a[i-1] - p;\n                int p3 = i == 0 ? a[i] - 1000 + p : a[i] - a[i-1] + p;\n                int p4 = Math.max(p, p3);\n                p4 = Math.max(0, p4);\n\n                // // sum all from p4 till a[i];\n                // for(int j = p4; j <= a[i]; j++) {\n                //     long cur = dfs(i+1, j, n, a);\n                //     ans = (ans + cur)%MOD;\n                // }\n\n                if(a[i] >= p4) {\n                    ans = p4 == 0 ? ps[i+1][a[i]] : (ps[i+1][a[i]] - ps[i+1][p4-1] + MOD)%MOD;\n                }\n\n                dp[i][p] = ans;\n                ps[i][p] = p == 0 ? dp[i][p] : (ps[i][p-1] + dp[i][p])%MOD;\n            }\n        }\n\n        long ans = dp[0][0];\n        return (int)ans;\n    } \n\n    long dfs(int i, int p, int n, int[] a) {\n        if(i >= n) {\n            return 1;\n        }\n\n        if(dp[i][p] != -1) {\n            return dp[i][p];\n        }\n\n        long ans = 0;\n\n        int p1 = p;\n        int p2 = i == 0 ? 50 : a[i-1] - p;\n        for(int j = 0; j <= a[i]; j++) {\n            if(j < p1) {\n                continue;\n            }\n\n            if(a[i]-j > p2) {\n                continue;\n            }\n\n            long cur = dfs(i+1, j, n, a);\n            ans = (ans + cur)%MOD;\n        }\n\n        dp[i][p] = ans;\n        return ans;\n    }\n}",
    "submit_ts": "1723345945",
    "subm_id": "1351566752"
}