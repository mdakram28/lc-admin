{
    "username": "colicon",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ar array\n#define ll long long\ntypedef int uci;\n#define F first\n#define S second\ntypedef complex<double> cd;\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nconst int MOD = 1e9 + 7, MAXN = 1e5;\nconst int b[2] = {23, 31};\n\nll mod(ll a) {\n    a %= MOD;\n    return a < 0 ? a+MOD : a;\n}\n\nll modpow(ll b, int e) {\n    ll ret = 1;\n    for(; e; b = mod(b * b), e >>= 1) {\n        if (e & 1) ret = mod(ret * b);\n    }\n    return ret;\n}\n\nll pw[2][MAXN], ipw[2][MAXN];\n\nbool done = false;\nvoid pre() {\n    if (done) return;\n    done = true;\n    rep(j, 0, 1) {\n        int ib = modpow(b[j], MOD - 2);\n        pw[j][0] = ipw[j][0] = 1;\n        rep(i, 1, MAXN) {\n            pw[j][i] = pw[j][i - 1] * b[j] % MOD;\n            ipw[j][i] = ipw[j][i - 1] * ib % MOD;\n        }\n    }\n}\n\nclass Solution {\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        pre();\n\n        int n = sz(t);\n\n        map<int, array<map<int, int>, 1>> t_hashes;  // set is quicker than unordered_set for small n\n\n        rep(i, 0, sz(c)) {\n            string& t = w[i];\n            rep(j, 0, 1) {\n                ll hash = 0;\n                rep(i, 0, sz(t)) {\n                    hash = mod(hash + t[i] * pw[j][i]);\n                }\n\n                if (t_hashes[sz(t)][j].contains(hash)) {\n                    t_hashes[sz(t)][j][hash] = min(t_hashes[sz(t)][j][hash], c[i]);\n                }\n                else {\n                    t_hashes[sz(t)][j][hash] = c[i];\n                }\n            }\n        }\n\n\n        vi dp(n+1, 1e9);\n        dp[0] = 0;\n\n        array<vector<ll>, 1> s_hash;\n        rep(i, 0, n) {\n            rep(j, 0, 1) {\n                ll hash = mod((i ? s_hash[j].back() : 0) + t[i] * pw[j][i]);\n                s_hash[j].push_back(hash);\n            }\n\n            for (auto & [ln, mp]: t_hashes) {\n                if (ln > i+1) break;\n\n                int val = 0;\n                rep(j, 0, 1) {\n                    ll hash = mod(s_hash[j].back() - (sz(s_hash[0]) > ln ? s_hash[j][sz(s_hash[0])-1-ln] : 0));\n                    hash = mod(hash * ipw[j][sz(s_hash[0])-ln]);\n\n                    if (mp[j].contains(hash)) {\n                        val = mp[j][hash];\n                    }\n                }\n\n                if (val) {\n                    dp[i+1] = min(dp[i+1], dp[i+1-ln] + val);\n                }\n            }\n        }\n\n        return dp[n] != 1e9 ? dp[n] : -1;\n    }\n};\n",
    "submit_ts": "1720321521",
    "subm_id": "1312325098"
}