{
    "username": "phungtienminh",
    "submission": "class Solution {\npublic:\n    const int BASE = 317;\n    const int MOD = 1e9 + 2277;\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.length();\n        int m = words.size();\n        \n        vector <int> H(m, 0);\n        vector <int> targetH(n + 1, 0);\n        vector <int> pw(n + 1, 0);\n        \n        for (int i = 0; i < m; i++) {\n            int cur = 1;\n            for (auto c: words[i]) {\n                cur = (1LL * cur * BASE + c) % MOD;\n            }\n            \n            H[i] = cur;\n        }\n        \n        targetH[0] = 1;\n        pw[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            targetH[i] = (1LL * targetH[i - 1] * BASE + target[i - 1]) % MOD;\n            pw[i] = 1LL * pw[i - 1] * BASE % MOD;\n        }\n        \n        auto queryH = [&](int l, int r) -> int {\n            int temp = targetH[r] - 1LL * targetH[l - 1] * pw[r - l + 1] % MOD;\n            if (temp < 0) temp += MOD;\n            return temp;\n        };\n        \n        map <char, vector <pair <int, int> > > mm;\n        for (int i = 0; i < m; i++) {\n            char c = words[i][words[i].length() - 1];\n            mm[c].emplace_back(make_pair(i, costs[i]));\n        }\n        \n        vector <int> dp(n + 1, (int)1e9);\n        dp[0] = 0;\n        for (int i = 1; i <= n; i++) {\n            if (!mm.count(target[i - 1])) continue;\n            for (auto data: mm[target[i - 1]]) {\n                int idx = data.first;\n                int cost = data.second;\n                int l = words[idx].length();\n                if (l > i) continue;\n                \n                int temp = H[idx] - pw[l];\n                if (temp < 0) temp += MOD;\n                if (queryH(i - l + 1, i) == temp) {\n                    dp[i] = min(dp[i], dp[i - l] + cost);\n                }\n            }\n        }\n        \n        int ans = dp[n];\n        if (ans >= (int)1e9 - 200) ans = -1;\n        return ans;\n    }\n};",
    "submit_ts": "1720321566",
    "subm_id": "1312326291"
}