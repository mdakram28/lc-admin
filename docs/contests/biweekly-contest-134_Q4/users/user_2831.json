{
    "username": "Himanchal__Dasgupta",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        unordered_map<int, int> countMap; // to store counts of different AND results\n        long long count = 0;\n        int n = nums.size();\n        \n        for (int i = 0; i < n; ++i) {\n            unordered_map<int, int> newCountMap;\n            if (nums[i] == k) count++;\n            newCountMap[nums[i]]++;\n            \n            for (auto& entry : countMap) {\n                int newAnd = entry.first & nums[i];\n                if (newAnd == k) {\n                    count += entry.second;\n                }\n                newCountMap[newAnd] += entry.second;\n            }\n            countMap = newCountMap;\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720278141",
    "subm_id": "1311696196"
}