{
    "username": "sahoosambit2003",
    "submission": "class Solution {\npublic:\n    int dfs(int node, int parent, vector<int> adj[], int &h)\n    {\n        int max1=0;\n        int max2=0;\n        for(auto it:adj[node])\n        {\n            if(it==parent) continue;\n            int temp=1 + dfs(it, node, adj, h);\n            if(temp > max1)\n            {\n                max2=max1;\n                max1=temp;\n            }\n            else if(temp > max2)\n            {\n                max2=temp;\n            }\n        }\n        h=max(h, max1+max2);\n        return max1;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n1=edges1.size();\n        vector<int> adj1[n1+1];\n        for(auto edge:edges1)\n        {\n            adj1[edge[0]].push_back(edge[1]);\n            adj1[edge[1]].push_back(edge[0]);\n        }\n        \n        int n2=edges2.size();\n        vector<int> adj2[n2+1];\n        for(auto edge:edges2)\n        {\n            adj2[edge[0]].push_back(edge[1]);\n            adj2[edge[1]].push_back(edge[0]);\n        }\n        \n        int h1=0,h2=0;\n        dfs(0, -1, adj1, h1);\n        dfs(0, -1, adj2, h2);\n        \n        int res=(h1+1)/2 + (h2+1)/2 +1;\n        \n        int ans=max(res, max(h1,h2));\n        //cout<<h1<<' '<<h2<<'\\n';\n        return ans;\n    }\n};",
    "submit_ts": "1719719663",
    "subm_id": "1304447501"
}