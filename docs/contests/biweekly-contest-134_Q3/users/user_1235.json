{
    "username": "HelloBuddyJr",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int K) {\n        int n = colors.size();\n        // if (n < K) return 0; // If the vector size is less than K, no alternating groups of size K can exist\n        \n        vector<int> v = colors;\n        \n        // Extend vector v to handle circular indexing\n        for (int i = 0; i < K - 1; ++i) {\n            v.push_back(v[i]);\n        }\n        int ans = 0;\n        int i = 0, j = 1, k = 0;\n        // for(auto it: v)cout<<it<<\" \";\n        // cout<<endl;\n        while(j != v.size()){\n            if(j - i + 1 == K && v[j] != v[k]){\n                // cout<<i<<\" \"<<j<<endl;\n                ans++;\n                i++;\n            }\n            if(v[j] == v[k]){\n                i = j;\n                k = j;\n                j++;\n            }\n            else{\n                j++;\n                k++;\n            }\n        }\n        return ans;\n        \n        \n    }\n};\n",
    "submit_ts": "1720278637",
    "subm_id": "1311717795"
}