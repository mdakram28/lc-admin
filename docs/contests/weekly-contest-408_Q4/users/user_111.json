{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int sz = circles.size();\n        vector<vector<int>> edge(sz + 4);\n        for(int i = 0; i < sz; i++) {\n            int x = circles[i][0];\n            int y = circles[i][1];\n            int r = circles[i][2];\n            if(x - r <= 0) edge[sz].push_back(i), edge[i].push_back(sz);\n            if(y - r <= 0) edge[sz + 1].push_back(i), edge[i].push_back(sz + 1);\n            if(x + r >= X) edge[sz + 2].push_back(i), edge[i].push_back(sz + 2);\n            if(y + r >= Y) edge[sz + 3].push_back(i), edge[i].push_back(sz + 3);\n            for(int j = i + 1; j < sz; j++) {\n                long long diffX = circles[i][0] - circles[j][0];\n                long long diffY = circles[i][1] - circles[j][1];\n                long long total = circles[i][2] + circles[j][2];\n                if(1LL * diffX * diffX + 1LL * diffY * diffY <= total * total) {\n                    edge[i].push_back(j);\n                    edge[j].push_back(i);\n                }\n            }\n        }\n\n        vector<bool> vis(sz + 4, false);\n        queue<int> q;\n        q.push(sz);\n        vis[sz] = true;\n        while(!q.empty()) {\n            int u = q.front();\n            // cout << u << endl;\n            q.pop();\n            if(u == sz + 1 || u == sz + 2) return false;\n            for(int v : edge[u]) {\n                if(vis[v]) continue;\n                vis[v] = true;\n                q.push(v);\n            }\n        }\n\n        for(int i = 0; i < sz + 4; i++) vis[i] = false;\n        q.push(sz + 1);\n        vis[sz + 1] = true;\n        while(!q.empty()) {\n            int u = q.front();\n            //cout << u << endl;\n            q.pop();\n            if(u == sz || u == sz + 3) return false;\n            for(int v : edge[u]) {\n                if(vis[v]) continue;\n                vis[v] = true;\n                q.push(v);\n            }\n        }\n\n        for(int i = 0; i < sz + 4; i++) vis[i] = false;\n        q.push(sz + 2);\n        vis[sz + 2] = true;\n        while(!q.empty()) {\n            int u = q.front();\n            //cout << u << endl;\n            q.pop();\n            if(u == sz || u == sz + 3) return false;\n            for(int v : edge[u]) {\n                if(vis[v]) continue;\n                vis[v] = true;\n                q.push(v);\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722135416",
    "subm_id": "1335701088"
}