{
    "username": "harshraj2717",
    "submission": "class Solution {\n    vector<vector<int>> adj;\n    vector<vector<int>> vals;\n\n    int makeLR(int root, int prev)\n    {\n        for(int next : adj[root])\n        {\n            if (next == prev || next == root)\n            {\n                continue;\n            }\n            vals[root].push_back(makeLR(next, root));\n        }\n        int maxx;\n        if (vals[root].size() == 0)\n            maxx = 0;\n        else\n            maxx = *max_element(vals[root].begin(), vals[root].end());\n        if (root % 2 == 0)\n            return 2 + maxx;\n        return 1 + maxx;\n    }\n\n    void makeT(int root, int prev, int T)\n    {\n        vals[root].push_back(T);\n        int self;\n        if (root % 2 == 0)\n            self = 2;\n        else\n            self = 1;\n\n        \n        ///////////////////\n        int first, second;\n        first = second = 0;\n\n        for(int i=0; i<vals[root].size(); i++){\n            if(vals[root][i] >= first){\n                second = first;\n                first = vals[root][i];\n            }\n            else if(second < vals[root][i] && vals[root][i] < first){\n                second = vals[root][i];\n            }\n        }\n\n        //////////////\n        \n        \n        \n        int ii = 0;\n        for (int next : adj[root])\n        {\n            if (next == prev || next == root)\n                continue;\n            int maxx = first;\n            if (vals[root][ii] == maxx)\n            {\n                maxx = second;\n            }\n            // int maxx = 0;\n            // for (int i = 0; i < vals[root].size(); i++)\n            // {\n            //     if (i == ii)\n            //         continue;\n            //     maxx = max(maxx, vals[root][i]);\n            // }\n            \n            makeT(next, root, self + maxx);\n            ii++;\n        }\n    }\n    \npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        adj = vector<vector<int>> (edges.size() + 1);\n        vals = vector<vector<int>> (edges.size() + 1);\n        for (auto& edge : edges)\n        {\n            adj[edge[0]].push_back(edge[1]);\n            adj[edge[1]].push_back(edge[0]);\n        }\n        int root = 0;\n\n        makeLR(root, -1);\n        makeT(root, -1, 0);\n\n        vector<int> ans;\n        for (int i = 0; i < vals.size(); i++)\n        {\n            if (vals[i].size() == 0)\n            {\n                ans.push_back(0);\n                continue;\n            }\n            ans.push_back(*max_element(vals[i].begin(), vals[i].end()));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722700510",
    "subm_id": "1343244139"
}