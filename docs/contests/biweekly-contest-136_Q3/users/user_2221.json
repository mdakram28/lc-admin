{
    "username": "minhtran050102",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int r = grid.size(), c = grid[0].size();\n        int flips = 0;\n\n        if (r % 2 == 1 && c % 2 == 1) {\n            if (grid[r / 2][c / 2] == 1) {\n                flips += 1;\n            }\n        }\n\n        vector<int> shiftCount(3, 0);\n        if (r % 2 == 1) {\n            int left = 0, right = c - 1;\n            while (left < right) {\n                int sum = grid[r / 2][left] + grid[r / 2][right];\n                shiftCount[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (c % 2 == 1) {\n            int top = 0, bottom = r - 1;\n            while (top < bottom) {\n                int sum = grid[top][c / 2] + grid[bottom][c / 2];\n                shiftCount[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (shiftCount[2] % 2 == 1) {\n            if (shiftCount[1] > 0) {\n                flips += shiftCount[1];\n            } else {\n                flips += 2;\n            }\n        } else {\n            flips += shiftCount[1];\n        }\n\n        for (int i = 0; i < r / 2; ++i) {\n            for (int j = 0; j < c / 2; ++j) {\n                int topLeft = grid[i][j];\n                int bottomLeft = grid[r - 1 - i][j];\n                int topRight = grid[i][c - 1 - j];\n                int bottomRight = grid[r - 1 - i][c - 1 - j];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    flips += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return flips;\n    }\n};",
    "submit_ts": "1722700329",
    "subm_id": "1343238579"
}