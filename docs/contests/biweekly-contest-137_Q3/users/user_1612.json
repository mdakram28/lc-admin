{
    "username": "CS_MONK",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& bd) {\n        int m = bd.size();\n        int n = bd[0].size();\n\n        vector<vector<pair<int,int>>>vec(m);\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<int, int>> rv;\n            for (int j = 0; j < n; ++j) {\n                rv.push_back({bd[i][j], j});\n            }\n            sort(rv.rbegin(), rv.rend());\n            for (int k = 0; k < min(3, n); ++k) {\n                vec[i].push_back(rv[k]);\n            }\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        for (int row1 = 0; row1 < m; ++row1) {\n            for (int row2 = row1 + 1; row2 < m; ++row2) {\n                for (int row3 = row2 + 1; row3 < m; ++row3) {\n                    for (auto [val1, col1] : vec[row1]) {\n                        for (auto [val2, col2] : vec[row2]) {\n                            if (col1 == col2) continue;\n                            for (auto [val3, col3] : vec[row3]) {\n                                if (col1 == col3 || col2 == col3) continue;\n                                long long currentSum = (long long)val1 + val2 + val3;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723909329",
    "subm_id": "1359188402"
}