{
    "username": "flowing",
    "submission": "class Solution {\n\n    private static int getCurInt(List<Integer> curZeroCountOfEachBit) {\n        int ans = 0;\n        for (int i = 29; i >= 0; i--) {\n            if (curZeroCountOfEachBit.get(i) == 0) {\n                ans++;\n            }\n            ans <<= 1;\n        }\n        return ans >> 1;\n    }\n\n    public int minimumDifference(int[] nums, int k) {\n        List<List<Integer>> bitsOfNums = new ArrayList<>();\n        for (int value : nums) {\n            int num = value;\n            List<Integer> bits = new ArrayList<>();\n            for (int j = 0; j < 30; j++) {\n                bits.add(num & 1);\n                num >>= 1;\n            }\n            bitsOfNums.add(bits);\n        }\n        int pl = 0, pr = 0;\n        // \u53ea\u8bb0\u5f550\n        List<Integer> curZeroCountOfEachBit = new ArrayList<>();\n        for (int i = 0; i < 30; i++) {\n            curZeroCountOfEachBit.add(bitsOfNums.get(0).get(i) == 1 ? 0 : 1);\n        }\n        int ans = (int) 1e9;\n        while (true) {\n            int curInt = getCurInt(curZeroCountOfEachBit);\n            ans = Math.min(ans, Math.abs(curInt-k));\n            if (curInt==k) {\n                return 0;\n            }\n            if (curInt>k) {\n                pr++;\n                if (pr>=nums.length) {\n                    break;\n                }\n                for (int i = 0; i < 30; i++) {\n                    curZeroCountOfEachBit.set(i, curZeroCountOfEachBit.get(i)+(bitsOfNums.get(pr).get(i) == 1 ? 0 : 1));\n                }\n            } else {\n                for (int i = 0; i < 30; i++) {\n                    curZeroCountOfEachBit.set(i, curZeroCountOfEachBit.get(i)-(bitsOfNums.get(pl).get(i) == 1 ? 0 : 1));\n                }\n                pl++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1717298936",
    "subm_id": "1274796375"
}