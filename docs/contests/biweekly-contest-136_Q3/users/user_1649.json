{
    "username": "spirit11",
    "submission": "\n\npublic class Solution\n{\n    public int MinFlips(int[][] grid)\n    {\n        var result = 0;\n        var m = grid.Length;\n        var n = grid[0].Length;\n        for (int r = 0; r < m / 2; r++)\n        {\n            for (int c = 0; c < n / 2; c++)\n            {\n                var ones = grid[r][c] + grid[r][n - 1 - c] + grid[m - 1 - r][c] + grid[m - 1 - r][n - 1 - c];\n                result += Math.Min(4 - ones, ones);\n            }\n        }\n\n        var cr1 = 0;\n        var fl = 0;\n        if (m % 2 == 1)\n        {\n\n            for (int i = 0; i < n / 2; i++)\n            {\n                cr1 += grid[(m - 1) / 2][i] + grid[(m - 1) / 2][n - 1 - i];\n                if (grid[(m - 1) / 2][i] != grid[(m - 1) / 2][n - 1 - i])\n                {\n                    fl++;\n                }\n\n            }\n        }\n        if (n % 2 == 1)\n        {\n            for (int i = 0; i < m / 2; i++)\n            {\n                if (grid[i][(n - 1) / 2] != grid[m - 1 - i][(n - 1) / 2])\n                {\n                    fl++;\n                }\n                cr1 += grid[i][(n - 1) / 2] + grid[m - 1 - i][(n - 1) / 2];\n            }\n        }\n        result += fl;\n        var rem = cr1 % 4;\n        rem = Math.Min(rem, 4 - rem);\n        rem = Math.Max(0, rem - fl);\n        if (n % 2 == 1 && m % 2 == 1)\n        {\n            rem += grid[(m - 1) / 2][(n - 1) / 2];\n        }\n        return result + rem;\n    }\n}",
    "submit_ts": "1722698922",
    "subm_id": "1343196052"
}