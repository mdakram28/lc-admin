{
    "username": "code_sarang",
    "submission": "#include <iostream>\n#include <vector>\n#include <string>\n#include <climits>\nusing namespace std;\n\nclass TrieNode {\npublic:\n    vector<TrieNode*> children;\n    int mini;\n    bool isEnd;\n\n    TrieNode() : children(26, nullptr), mini(INT_MAX), isEnd(false) {}\n};\n\nclass TrieTree {\npublic:\n    TrieNode root;\n\n    TrieTree() {}\n\n    void addWord(const string& word, int mini) {\n        TrieNode* node = &root;\n        for (char x : word) {\n            if (!node->children[x - 'a'])\n                node->children[x - 'a'] = new TrieNode();\n            node = node->children[x - 'a'];\n        }\n        node->mini = min(mini, node->mini);\n        node->isEnd = true;\n    }\n\n    TrieNode* getRoot() {\n        return &root;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string mini, vector<string>& x, vector<int>& maxi) {\n        TrieTree trie;\n        int y = mini.size();\n        vector<int> xx(y + 1, INT_MAX);\n\n        for (int i = 0; i < x.size(); ++i) {\n            trie.addWord(x[i], maxi[i]);\n        }\n\n        xx[0] = 0;\n\n        for (int i = 0; i < y; ++i) {\n            if (xx[i] == INT_MAX) continue;\n\n            TrieNode* node = trie.getRoot();\n            for (int j = i; j < y; ++j) {\n                char c = mini[j];\n                if (!node->children[c - 'a']) break;\n                node = node->children[c - 'a'];\n                if (node->isEnd) {\n                    xx[j + 1] = min(xx[j + 1], xx[i] + node->mini);\n                }\n            }\n        }\n\n        return xx[y] == INT_MAX ? -1 : xx[y];\n    }\n};\n\n",
    "submit_ts": "1720323540",
    "subm_id": "1312378054"
}