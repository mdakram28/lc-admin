{
    "username": "soul-12",
    "submission": "class Solution {\npublic:\n\n    void dfs(int u, int p, vector<vector<int>> &adj, vector<int> &t){\n        int time=0;\n        for(auto v : adj[u]){\n            if(v != p){\n                dfs(v, u, adj, t);\n                time=max(time, t[v]+(v+1)%2+1);\n            }\n        }\n        t[u]=time;\n    }\n\n    void f(int u, int p, vector<vector<int>> &adj, vector<int>&ans, vector<int> &t){\n        ans[u]=t[u];\n        \n        multiset<int> st;\n        \n        for(auto v : adj[u]){\n            st.insert(t[v]+(v+1)%2+1);\n        }\n\n        for(auto v : adj[u]){\n            if(v!=p){\n                int ptv=t[v];\n                int ptu=t[u];\n                \n                st.erase(st.find(t[v]+(v+1)%2+1));\n                \n                if(st.empty()){\n                    t[u]=0;\n                }\n                else{\n                    t[u]=*st.rbegin();\n                }\n                \n                t[v]=max(t[v], t[u]+(u+1)%2+1);\n                f(v, u, adj, ans, t);\n                \n                t[v]=ptv;\n                t[u]=ptu;\n                st.insert(t[v]+(v+1)%2+1);\n            }\n        }\n\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        \n        vector<vector<int>> adj(n);\n        \n        for(auto v : edges){\n            adj[v[0]].push_back(v[1]);\n            adj[v[1]].push_back(v[0]);\n        }\n        \n        vector<int> t(n, 0);\n        \n        dfs(0, -1, adj, t);\n        \n        vector<int>ans(n);\n        \n        f(0, -1, adj, ans, t);\n        return ans;\n    }\n};",
    "submit_ts": "1722698464",
    "subm_id": "1343181421"
}