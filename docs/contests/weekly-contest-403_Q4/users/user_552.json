{
    "username": "gjp4_",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int l=1e9, r=-1, t=1e9, b=-1, n = grid.size(), m = grid[0].size();\n        for(int i=0;i<n;i++){\n            for(int k=0;k<m;k++){\n                if(grid[i][k]){\n                    l = min(l, k);\n                    r = max(r, k);\n                    t = min(t, i);\n                    b = max(b, i);\n                }\n            }\n        }\n        int ans = 1e9;\n        for(int i=t;i<b;i++){\n            for(int k = l;k<r;k++){\n                for(int j = 0;j<4;j++){\n                    int sz = 0;\n                    if(j == 0){ //\u4e00 \u4e00\n                                //  |\n                        \n                        int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        bool have = 0;\n                        //top\n                        \n                        for(int ii=t;ii<=i;ii++){\n                            for(int kk=l;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }\n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // left\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        \n                        for(int ii = i+1;ii<=b;ii++){\n                            for(int kk = l;kk<=k;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // right\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii = i+1;ii<=b;ii++){\n                            for(int kk = k+1;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                    }\n                    else if(j==1){\n                        int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        bool have = 0;\n                        //right\n                        for(int ii = t;ii<=b;ii++){\n                            for(int kk = k+1;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                  \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        // tl\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii=t;ii<=i;ii++){\n                            for(int kk=l;kk<=k;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                } \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        //bl\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii=i+1;ii<=b;ii++){\n                            for(int kk=l;kk<=k;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                } \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                    }\n                    else if(j == 2){\n                        int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        bool have = 0;\n                        //bottom\n                        for(int ii=i+1;ii<=b;ii++){\n                            for(int kk=l;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }\n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        \n                        // left\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii = t;ii<=i;ii++){\n                            for(int kk = l;kk<=k;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        // right\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii = t;ii<=i;ii++){\n                            for(int kk = k+1;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);          \n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                    }\n                    else{\n                        int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        bool have = 0;\n                        //l\n                        for(int ii = t;ii<=b;ii++){\n                            for(int kk = l;kk<=k;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                }                                  \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        // tr\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii=t;ii<=i;ii++){\n                            for(int kk=k+1;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                } \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1);\n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                        //br\n                        tl=1e9, tr=-1, tt=1e9, tb=-1;\n                        have = 0;\n                        for(int ii=i+1;ii<=b;ii++){\n                            for(int kk=k+1;kk<=r;kk++){\n                                if(grid[ii][kk]){\n                                    have = true;\n                                    tl = min(tl, kk);\n                                    tr = max(tr, kk);\n                                    tt = min(tt, ii);\n                                    tb = max(tb, ii);\n                                } \n                            }\n                        }\n                        if(!have)continue;\n                        sz+=(tb - tt +1) * (tr-tl+1); \n                        // cout<<(tb - tt +1) * (tr-tl+1)<<\" \";\n                    }\n                    ans = min(ans, sz);\n                    // cout<<endl;\n                }\n            }\n        }\n        for(int ll = l;ll<r-1;ll++){\n            for(int mid = ll+1;mid<r;mid++){\n                int sz = 0;\n                bool have = 0;\n                int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=t;ii<=b;ii++){\n                    for(int kk = l;kk<=ll;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                have = 0;\n                 tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=t;ii<=b;ii++){\n                    for(int kk = ll+1;kk<=mid;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                have = 0;\n                 tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=t;ii<=b;ii++){\n                    for(int kk = mid+1;kk<=r;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                ans = min(ans, sz);\n            }\n        }\n        \n        \n        for(int ll = t;ll<b-1;ll++){\n            for(int mid = ll+1;mid<b;mid++){\n                int sz = 0;\n                bool have = 0;\n                int tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=t;ii<=ll;ii++){\n                    for(int kk = l;kk<=r;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                have = 0;\n                 tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=ll+1;ii<=mid;ii++){\n                    for(int kk = l;kk<=r;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                have = 0;\n                tl=1e9, tr=-1, tt=1e9, tb=-1;\n                for(int ii=mid+1;ii<=b;ii++){\n                    for(int kk = l;kk<=r;kk++){\n                        if(grid[ii][kk]){\n                            have = true;\n                            tl = min(tl, kk);\n                            tr = max(tr, kk);\n                            tt = min(tt, ii);\n                            tb = max(tb, ii);\n                        } \n                    }\n                }\n                if(!have)continue;\n                sz+=(tb - tt +1) * (tr-tl+1); \n                ans = min(ans, sz);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719114742.0
}