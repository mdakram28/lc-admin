{
    "username": "Aditya_Varma8019",
    "submission": "class Solution {\npublic:\n    unordered_map<int,vector<vector<int>>> mp;\n    int waysToReachStair(int k) {\n        return solve(1,0,k,1);\n    }\n    int solve(int pos,int jump,int k,int prev) {\n        if(pos>k+5) return 0;\n        \n        if(jump>31) return 0;\n        \n        if(mp.count(pos) && mp[pos][jump][prev]!=-1) {\n            return mp[pos][jump][prev];\n        }\n        \n        int ans=(pos==k) ;\n        if(prev) {\n            ans+=solve(pos-1,jump,k,0);\n        } \n        if(pos+(pow(2,jump))<= k+1) {\n            ans+=solve(pos+pow(2,jump),jump+1,k,1);\n        }\n        \n        mp[pos].resize(32,vector<int>(2,-1));\n        \n        return mp[pos][jump][prev]=ans;\n        \n    }\n};",
    "submit_ts": 1716089892.0
}