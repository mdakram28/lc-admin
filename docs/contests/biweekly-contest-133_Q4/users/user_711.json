{
    "username": "mousamdas723",
    "submission": "class Solution {\npublic:\n    int MOD=1e9+7;\n    int max_Inv=400;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int,int> map;\n        for(int i=0;i<100;i++){\n            map[i]=i*i;\n        }\n        queue<pair<int,int>> q;\n        for(auto i:map){\n            q.push({i.first,i.second});\n        }\n        vector<pair<int,int>> trash;\n        while(!q.empty()){\n            trash.push_back(q.front());\n            q.pop();\n        }\n        unordered_map<int, int> mp;\n        for (const auto& i : requirements) {\n            mp[i[0] + 1] = i[1];\n        }\n\n        vector<vector<long>> permu_cnt(n + 1,vector<long>(max_Inv + 1, 0));\n        permu_cnt[0][0] = 1;\n\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= max_Inv; inv++) {\n                for (int newPos = 0; newPos < len; newPos++) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        permu_cnt[len][inv] = (permu_cnt[len][inv] + permu_cnt[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(len) != mp.end()) {\n                int tar = mp[len];\n                for (int inv = 0; inv <= max_Inv; inv++) {\n                    if (inv != tar) {\n                        permu_cnt[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long res = 0;\n        for (long cnt : permu_cnt[n]) {\n            res = (res + cnt) % MOD;\n        }\n\n        return static_cast<int>(res);\n    }\n};",
    "submit_ts": "1719071040",
    "subm_id": "1296837738"
}