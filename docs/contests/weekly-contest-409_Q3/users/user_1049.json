{
    "username": "souravpaul107",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n         int[] d = new int[n];\n        for (int i = 1; i < n; ++i) {\n            d[i] = d[i - 1] + 1;\n        }\n        TreeSet<Integer> p = new TreeSet<>();\n        for (int i = 0; i < n; ++i) {\n            p.add(i);\n        }\n\n        List<Integer> res = new ArrayList<>();\n\n        for (int[] query : queries) {\n            int l = query[0];\n            int rt = query[1];\n            Set<Integer> toRemove = new TreeSet<>();\n            for (int x : p.subSet(l + 1, rt)) {\n                toRemove.add(x);\n            }\n\n            p.removeAll(toRemove);\n\n            res.add(p.size() - 1);\n        }\n        return res.stream().mapToInt(Integer::intValue).toArray();\n    }\n}",
    "submit_ts": "1722743885",
    "subm_id": "1343801860"
}