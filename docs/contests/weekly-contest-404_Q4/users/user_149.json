{
    "username": "Romy67",
    "submission": "#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define per(i, a, b) for(int i = a; i > (b); --i)\n#define ar array\n#define sz(x) (int) (x).size()\n#define pii pair<int,int>\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef pair<double,double> pdd;\ntypedef pair<double,int> pdi;\ntypedef vector<int> vi;\n\ntemplate<typename T>\nvoid min_self(T& A, T B) {\n    A = min(A,B);\n}\ntemplate<typename T>\nvoid max_self(T& A, T B) {\n    A = max(A,B);\n}\n\nclass Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = sz(edges1)+1, m=sz(edges2)+1;\n        vector adj1(n, vector<int>());\n        rep(i,0,sz(edges1)) {\n            int u = edges1[i][0], v = edges1[i][1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n        vector<int> d1(n,0);\n        int diam1 = 0;\n        function<void(int,int)> dfs1;\n        dfs1 = [&](int u, int p) -> void {\n            for(int b: adj1[u]) {\n                if(b==p) continue;\n                dfs1(b,u);\n                max_self(diam1, d1[u]+d1[b]+1);\n                max_self(d1[u], d1[b]+1);\n            }\n        };\n        dfs1(0,-1);\n\n        vector adj2(m, vector<int>());\n        rep(i,0,sz(edges2)) {\n            int u = edges2[i][0], v = edges2[i][1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n        vector<int> d2(m,0);\n        int diam2 = 0;\n        function<void(int,int)> dfs2;\n        dfs2 = [&](int u, int p) -> void {\n            for(int b: adj2[u]) {\n                if(b==p) continue;\n                dfs2(b,u);\n                max_self(diam2, d2[u]+d2[b]+1);\n                max_self(d2[u], d2[b]+1);\n            }\n        };\n        dfs2(0,-1);\n        int ans = max(diam1,diam2);\n        max_self(ans, (diam1+1)/2 + (diam2+1)/2 + 1);\n        return ans;        \n    }\n};\n",
    "submit_ts": "1719717212",
    "subm_id": "1304385487"
}