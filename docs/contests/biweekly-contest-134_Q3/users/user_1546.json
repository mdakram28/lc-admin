{
    "username": "as828",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int numberOfAlternatingGroups(int[] c, int k) {\n        int n = c.length;\n\n        List<Integer> temp = new ArrayList<>();\n        int index = 0;\n        while (index < n) {\n            temp.add(c[index]);\n            index++;\n        }\n\n        index = 0;\n        while (index < k - 1) {\n            temp.add(c[index]);\n            index++;\n        }\n\n        int l = 0;\n        int pre = -1;\n        int ans = 0;\n        int m = temp.size();\n\n        index = 0;\n        while (index < m) {\n            if (pre != temp.get(index)) {\n                pre = temp.get(index);\n                if (index - l + 1 == k) {\n                    ans += 1;\n                } else if (index - l + 1 > k) {\n                    if (k % 2 == 0 && !temp.get(l + 1).equals(temp.get(index))) {\n                        ans += 1;\n                        l++;\n                    } else if (k % 2 == 1 && temp.get(l + 1).equals(temp.get(index))) {\n                        ans += 1;\n                        l++;\n                    }\n                }\n            } else {\n                l = index;\n            }\n            index++;\n        }\n\n        return ans;\n    }\n}\n",
    "submit_ts": "1720278605",
    "subm_id": "1311716396"
}