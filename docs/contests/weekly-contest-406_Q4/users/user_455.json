{
    "username": "Michael_Zheng",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, h: List[int], v: List[int]) -> int:\n        # have to choose each cut once\n        # a cut doubles all the cuts it goes through for the other orientation\n        h.sort(reverse=True)\n        v.sort(reverse=True)\n\n        hpieces = 1\n        vpieces = 1\n        total = 0\n\n        hptr = 0\n        vptr = 0\n\n        while hptr < len(h) and vptr < len(v):\n            hval, vval = h[hptr], v[vptr]\n            if hval > vval:\n                total += hval * hpieces\n                vpieces += 1\n                hptr += 1\n            else:\n                total += vval * vpieces\n                hpieces += 1\n                vptr += 1\n            \n\n        while hptr < len(h):\n            total += h[hptr] * hpieces\n            hptr += 1\n        while vptr < len(v):\n            total += v[vptr] * vpieces\n            vptr += 1\n        \n        return total",
    "submit_ts": "1720925237",
    "subm_id": "1320247785"
}