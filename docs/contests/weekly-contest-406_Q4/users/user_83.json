{
    "username": "Bhishek-Parmar",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCuts, vector<int>& vCuts) {\n        vector<pair<int, int>> cuts;\n        for (int i = 0; i < hCuts.size(); ++i) {\n            cuts.push_back({hCuts[i], 0});\n        }\n        for (int i = 0; i < vCuts.size(); ++i) {\n            cuts.push_back({vCuts[i], 1});\n        }\n        sort(cuts.rbegin(), cuts.rend());\n        \n        int hCnt = 1, vCnt = 1;\n        long long cost = 0;\n        for (auto& cut : cuts) {\n            int c = cut.first, t = cut.second;\n            if (t == 0) {\n                cost += (long long)c * vCnt;\n                hCnt++;\n            } else {\n                cost += (long long)c * hCnt;\n                vCnt++;\n            }\n        }\n        return cost;\n    }\n};\n",
    "submit_ts": "1720924673",
    "subm_id": "1320226199"
}