{
    "username": "BattlerRein",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int mod = 1000000007;\n        int[][][] dp = new int[2][1001][1001];\n\n        for (int i = 0; i < nums.length; i++) {\n            int num = nums[i];\n            int ii = i & 1;\n            for (int j = 0; j <= num; j++) {\n                int k = num - j;\n                if (i==0) {\n                    dp[ii][j][k] = ((j > 0 ? dp[ii][j-1][k+1] : 0) + 1) % mod;\n                    continue;\n                }\n\n                int lastJ = j;\n                int lastK = nums[i - 1] - j;\n\n                int lastK2 = k;\n                int lastJ2 = nums[i - 1] - k;\n                // System.out.println(String.format(\"#1 j=%s, k=%s, j1=%s, k1=%s, j2=%s, k2=%s\", j, k, lastJ, lastK, lastJ2, lastK2));\n                boolean flag = false;\n                int lJ = 0;\n                int lK = 0;\n                if (lastJ2 >= 0 && lastK2 >= 0 && lastJ2 <= j && lastK2 >= k) {\n                    flag = true;\n                    lJ = lastJ2;\n                    lK = lastK2;\n                    // System.out.println(\"AA\");\n                } \n                if (lastJ >= 0 && lastK >= 0 && lastJ <= j && lastK >= k) {\n                    if (!flag || lastJ > lJ) {\n                        lJ = lastJ;\n                        lK = lastK;\n                        flag = true;\n                    } \n\n                    // System.out.println(\"BB\");\n                }\n// System.out.println(String.format(\"#1 lastJ=%s, lastK=%s\", lJ, lK));\n                if (flag && lJ >= 0 && lK >= 0 && lJ <= j && lK >= k) {\n                    int candidate = (dp[1 - ii][lJ][lK] + (j > 0 ? dp[ii][j-1][k+1] : 0)) % mod;\n\n                    dp[ii][j][k] = candidate;\n                        // System.out.println(String.format(\"#1 ii=%s, j=%s, k=%s, dp=%s, lastJ=%s, lastK=%s\", ii, j, k, dp[ii][j][k], lJ, lK));\n                    continue;\n                }   \n\n                dp[ii][j][k] = (j > 0 ? dp[ii][j-1][k+1] : 0) % mod;\n                // System.out.println(String.format(\"#3 ii=%s, j=%s, k=%s, dp=%s\", ii, j, k, dp[ii][j][k]));\n            }\n        }\n\n        return dp[(nums.length-1) & 1][nums[nums.length - 1]][0]  % mod;\n    }\n}",
    "submit_ts": "1723347817",
    "subm_id": "1351606128"
}