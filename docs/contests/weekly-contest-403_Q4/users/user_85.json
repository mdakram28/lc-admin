{
    "username": "john0312acc223",
    "submission": "class Solution {\npublic:\n    int findMinInBound(const vector<vector<int>>& grid, int sx, int ex, int sy, int ey) {\n        int ny = grid.size();\n        int nx = grid[0].size();\n        int min_x = nx+1;\n        int max_x = 0;\n        int min_y = ny+1;\n        int max_y = 0;\n        assert(sy>=0);\n        assert(ey<ny);\n        assert(sx>=0);\n        assert(ex<nx);\n        for (int i = sy; i <= ey; i++) {\n            assert(grid[i].size() == nx);\n            for (int j = sx; j <= ex; j++) {\n                if (grid[i][j] == 1) {\n                    min_x = min(min_x, j);\n                    max_x = max(max_x, j);\n                    min_y = min(min_y, i);\n                    max_y = max(max_y, i);\n                }\n            }\n        }\n        if (min_y == ny+1) {\n            // No 1s.\n            return 0x01000000;\n        }\n        return (max_y-min_y+1)*(max_x-min_x+1);\n    }\n\n    int findAll2(const vector<vector<int>>& grid, int sx, int ex, int sy, int ey) {\n        int res = 0x0F000000;\n\n        int ny = grid.size();\n        int nx = grid[0].size();\n\n        for (int c2 = sx; c2 < ex; c2++) {\n            res = min(res, findMinInBound(grid, sx, c2, sy, ey)+findMinInBound(grid, c2+1, ex, sy, ey));\n        }\n        for (int c2 = sy; c2 < ey; c2++) {\n            res = min(res, findMinInBound(grid, sx, ex, sy, c2)+findMinInBound(grid, sx, ex, c2+1, ey));\n        }\n        return res;\n    }\n\n    int findAll3(const vector<vector<int>>& grid) {\n        int res = 0x0F000000;\n\n        int ny = grid.size();\n        int nx = grid[0].size();\n        for (int c1 = 0; c1 < ny-1; c1++) {\n            res = min(res, findAll2(grid, 0, nx-1, 0, c1)+findMinInBound(grid, 0, nx-1, c1+1, ny-1));\n            res = min(res, findAll2(grid, 0, nx-1, c1+1, ny-1)+findMinInBound(grid, 0, nx-1, 0, c1));\n        }\n        return res;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int res = findAll3(grid);\n        vector<vector<int>> grid2(grid[0].size(), vector<int>(grid.size(), 0));\n        for (int i = 0; i < grid.size(); i++) {\n            for (int j = 0; j < grid[0].size(); j++) {\n                grid2[j][i] = grid[i][j];\n            }\n        }\n        res = min(res, findAll3(grid2));\n        return res;\n    }\n};",
    "submit_ts": "1719112393",
    "subm_id": "1297298370"
}