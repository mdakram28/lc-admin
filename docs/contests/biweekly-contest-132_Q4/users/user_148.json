{
    "username": "death_of_might",
    "submission": "\n\nclass Solution {\npublic:\n    vector<int> v;\n\n    int helper(int i,map<int,set<int>> &m,int k,int skip,vector<vector<vector<int>>> &dp){\n\n        if(i>=v.size())return 0;\n\n        if(dp[i][k][skip]!=-1)return dp[i][k][skip];\n\n        int ans=1;\n        \n        if(skip==1)\n        ans=max(ans,helper(i+1,m,k,skip,dp));\n\n        auto it=m[v[i]].upper_bound(i);\n        if(it!=m[v[i]].end())ans=max(ans,1+helper(*it,m,k,0,dp));\n\n        if(k>0)\n        ans=max(ans,1+helper(i+1,m,k-1,1,dp));\n\n        return dp[i][k][skip]=ans;\n    }\n    int maximumLength(vector<int>& nums, int k) {\n\n        v=nums;\n        vector<vector<vector<int>>> dp(nums.size()+1,vector<vector<int>> (k+1,vector<int> (2,-1)));\n\n\n        int ans=0;\n\n        map<int,set<int>> m;\n\n        for(int i=0;i<nums.size();i++){\n            m[nums[i]].insert(i);\n        }\n\n        for(int i=0;i<nums.size();i++){\n\n           ans=max(ans,helper(i,m,k,1,dp));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717860170.0
}