{
    "username": "Likey_00",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        k_to_best = [[0] * (k+1) for _ in range(n)]\n        k_to_best_value = [defaultdict(int) for _ in range(k+1)]\n        \n        for i, num in enumerate(nums):\n            for test_k in range(k+1):\n                best_overall_prev = k_to_best[i-1][test_k-1] if test_k > 0 and i > 0 else 0\n                best_value_prev = k_to_best_value[test_k][num]\n                temp = 1 + max(best_overall_prev, best_value_prev)\n                k_to_best[i][test_k] = max(k_to_best[i-1][test_k] if i > 0 else 0, temp, k_to_best[i][test_k-1] if test_k > 0 else 0)\n                k_to_best_value[test_k][num] = temp\n        \n        return max(max(row) for row in k_to_best)\n                ",
    "submit_ts": 1717860554.0
}