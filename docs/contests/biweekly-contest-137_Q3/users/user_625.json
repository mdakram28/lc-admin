{
    "username": "zxgod",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& a) {\n        int n = a.size(), m = a[0].size();\n        long long inf = 1e10;\n        vector dp(m + 1,vector(m + 1, -inf));\n        dp[0][0] = 0;\n        long long ans = -inf;\n        for(int i = 0; i < n; ++i)\n        {\n            array<pair<int,int>,3> v;\n            v[0] = {-inf,0};\n            v[1] = v[0], v[2] = v[0];\n            auto f = dp;\n            for(int j = 1; j <= m; ++j)\n            {\n                f[j][0] = max(f[j][0], dp[0][0] + a[i][j - 1]);\n                if(a[i][j - 1] > v[0].first) v[0] = {a[i][j - 1], j};\n                sort(v.begin(), v.end()); \n            }\n            for(int j = 1; j <= m; ++j)\n            {\n                for(int k = 1; k <= m; ++k)\n                {\n                    if(j!=k)\n                    {\n                        f[j][k] = max(f[j][k], dp[j][0] + a[i][k - 1]);\n                        for(int t = 2; t >= 0; --t)\n                        if(v[t].second != j && v[t].second != k)\n                        {\n                            ans = max(ans, v[t].first + dp[j][k]);\n                            break;\n                        }\n                    }\n\n                }\n            }\n            dp = f;\n           //  cout<<dp[1][0]<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907288",
    "subm_id": "556324650"
}