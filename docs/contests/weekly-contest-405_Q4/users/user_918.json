{
    "username": "scanhex",
    "submission": "class Solution {\npublic:\n  int minimumCost(string target, vector<string> &words, vector<int> &costs) {\n    const auto oo = 0x3f3f3f3f;\n    vector<int> dp(target.size() + 1, oo);\n    dp[0] = 0;\n    const int p = 239;\n    using nagai = unsigned long long;\n    vector<nagai> ha(target.size() + 1);\n    for (int i = 0; i < target.size(); i++) {\n      ha[i + 1] = ha[i] * p + target[i];\n    }\n    vector<nagai> pw(target.size() + 1);\n    pw[0] = 1;\n    for (int i = 0; i < target.size(); i++) {\n      pw[i + 1] = pw[i] * p;\n    }\n    auto getha = [&](int l, int r) { return ha[r] - ha[l] * pw[r - l]; };\n    const int B = 100;\n    vector<std::unordered_map<nagai, int>> ind_by_hash(B);\n    vector<nagai> big, bigs;\n    vector<nagai> bigc;\n    for (int i = 0; i < words.size(); i++) {\n      if (words[i].size() < B) {\n        nagai h = 0;\n        for (int j = 0; j < words[i].size(); j++) {\n          h = h * p + words[i][j];\n        }\n        const auto it = ind_by_hash[words[i].size()].find(h);\n        if (it == ind_by_hash[words[i].size()].end()) {\n          ind_by_hash[words[i].size()][h] = i;\n        } else {\n          if (costs[i] < costs[it->second]) {\n            it->second = i;\n          }\n        }\n      } else {\n        big.push_back(0);\n        bigc.push_back(costs[i]);\n        bigs.push_back(words[i].size());\n        for (int j = 0; j < words[i].size(); j++) {\n          big.back() = big.back() * p + words[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < target.size(); i++) {\n      for (int j = 1; j < B; ++j) {\n        if (i + j > target.size()) {\n          continue;\n        }\n        nagai h = getha(i, i + j);\n        if (ind_by_hash[j].count(h)) {\n          dp[i + j] = min(dp[i + j], dp[i] + costs[ind_by_hash[j][h]]);\n        }\n      }\n      for (int j = 0; j < big.size(); j++) {\n        if (i + bigs[j] <= target.size() && getha(i, i + bigs[j]) == big[j]) {\n          dp[i + bigs[j]] = min(dp[i + bigs[j]], (int)(dp[i] + bigc[j]));\n        }\n      }\n    }\n    return dp.back() == oo ? -1 : dp.back();\n  }\n};\n",
    "submit_ts": "1720321878",
    "subm_id": "1312334719"
}