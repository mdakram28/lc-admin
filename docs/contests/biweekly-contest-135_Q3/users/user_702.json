{
    "username": "pranshujain0111",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n/* clang-format off */\n\n/* TYPES  */\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vll vector<long long>\n#define mii map<int, int>\n#define si set<int>\n#define sc set<char>\n\n/* FUNCTIONS */\n#define f(i,s,e) for(long long int i=s;i<e;i++)\n#define cf(i,s,e) for(long long int i=s;i<=e;i++)\n#define rf(i,e,s) for(long long int i=e-1;i>=s;i--)\n#define pb push_back\n#define eb emplace_back\n\n/* PRINTS */\ntemplate <class T>\nvoid print_v(vector<T> &v) { cout << \"{\"; for (auto x : v) cout << x << \",\"; cout << \"\\b}\"; }\n\n/* UTILS */\n#define MOD 1000000007\n#define PI 3.1415926535897932384626433832795\n#define read(type) readInt<type>()\nll min(ll a,int b) { if (a<b) return a; return b; }\nll min(int a,ll b) { if (a<b) return a; return b; }\nll max(ll a,int b) { if (a>b) return a; return b; }\nll max(int a,ll b) { if (a>b) return a; return b; }\nll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }\nll lcm(ll a,ll b) { return a/gcd(a,b)*b; }\nstring to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }\nstring to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }\nbool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }\nvoid yes() { cout<<\"YES\\n\"; }\nvoid no() { cout<<\"NO\\n\"; }\n\n/*  All Required define Pre-Processors and typedef Constants */\ntypedef long int int32;\ntypedef unsigned long int uint32;\ntypedef long long int int64;\ntypedef unsigned long long int  uint64;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap = calculateDifferences(nums, k);\n        vector<int> maxValues = extractMaxValues(diffMap);\n        return findMinimumChanges(nums, diffMap, maxValues);\n    }\n\nprivate:\n    map<int, vector<int>> calculateDifferences(const vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int left = nums[i];\n            int right = nums[nums.size() - i - 1];\n            int diff = abs(left - right);\n            int maxValue = max({left, right, k - left, k - right});\n            diffMap[diff].pb(maxValue);\n        }\n        return diffMap;\n    }\n\n    vector<int> extractMaxValues(const map<int, vector<int>>& diffMap) {\n        vector<int> maxValues;\n        for (const auto& pair : diffMap) {\n            for (int value : pair.second) {\n                maxValues.pb(value);\n            }\n        }\n        sort(maxValues.begin(), maxValues.end());\n        return maxValues;\n    }\n\n    int findMinimumChanges(const vector<int>& nums, const map<int, vector<int>>& diffMap, const vector<int>& maxValues) {\n        int minChanges = nums.size();\n        for (const auto& pair : diffMap) {\n            int diff = pair.first;\n            int pos = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            int changesRequired = pos * 2 + (nums.size() / 2 - pos);\n\n            for (int value : pair.second) {\n                if (value < diff) {\n                    changesRequired -= 2;\n                } else {\n                    changesRequired -= 1;\n                }\n            }\n            minChanges = min(minChanges, changesRequired);\n        }\n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721488308",
    "subm_id": "1327418159"
}