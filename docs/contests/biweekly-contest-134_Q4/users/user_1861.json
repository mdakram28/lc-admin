{
    "username": "LastToAC",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nclass SparseTable {\n   public:\n    int N;\n    vector<vector<int>> t;\n    SparseTable(int n, vector<int>& a) {\n        this->N = n;\n        t.resize(N + 1);\n        for (auto& v : t) {\n            v.resize(31);\n        }\n        for (int i = 1; i <= n; ++i) t[i][0] = a[i - 1];\n        for (int k = 1; k < 31; ++k) {\n            for (int i = 1; i + (1 << k) - 1 <= n; ++i) {\n                t[i][k] = combine(t[i][k - 1], t[i + (1 << (k - 1))][k - 1]);\n            }\n        }\n    }\n    int query(int l, int r) {\n        int k = 31 - __builtin_clz(r - l + 1);\n        return combine(t[l][k], t[r - (1 << k) + 1][k]);\n    }\n\n   private:\n    int combine(int a, int b) { return a & b; }\n};\n\nclass Solution {\n   public:\n    long long countSubarrays(vector<int>& a, int k) {\n        long long ans = 0;\n        int n = a.size();\n        SparseTable st(n, a);\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n - 1;\n            int last_pos = -1;\n            while (l <= r) {\n                int mid = l + (r - l) / 2;\n                int sub_and = st.query(i + 1, mid + 1);\n                if (sub_and > k) {\n                    l = mid + 1;\n                } else if (sub_and == k) {\n                    last_pos = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            int first_pos = -1;\n            l = i, r = n - 1;\n            while (l <= r) {\n                int mid = l + (r - l) / 2;\n                int sub_and = st.query(i + 1, mid + 1);\n                if (sub_and > k) {\n                    l = mid + 1;\n                } else if (sub_and == k) {\n                    first_pos = mid;\n                    r = mid - 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            if (last_pos != -1 and first_pos != -1) {\n                ans += (last_pos - first_pos + 1);\n            }\n        }\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1720281386",
    "subm_id": "1311823198"
}