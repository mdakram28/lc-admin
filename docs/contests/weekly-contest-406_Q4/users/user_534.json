{
    "username": "Joshiiii",
    "submission": "\n#define ll long long int\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        ll horizontal = 0, vertical = 0;\n        ll horizontalIndex = 0, verticalindex = 0;\n        ll ans = 0;\n\n        while (horizontalIndex < m - 1 && verticalindex < n - 1) {\n            if (horizontalCut[horizontalIndex] > verticalCut[verticalindex]) {\n                ans += horizontalCut[horizontalIndex] * (vertical + 1);\n                horizontal++;\n                horizontalIndex++;\n            } else {\n                ans += verticalCut[verticalindex] * (horizontal + 1);\n                vertical++;\n                verticalindex++;\n            }\n        }\n\n        while (horizontalIndex < m - 1) {\n            ans += horizontalCut[horizontalIndex] * (vertical + 1);\n            horizontal++;\n            horizontalIndex++;\n        }\n\n        while (verticalindex < n - 1) {\n            ans += verticalCut[verticalindex] * (horizontal + 1);\n            vertical++;\n            verticalindex++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925616",
    "subm_id": "1320260647"
}