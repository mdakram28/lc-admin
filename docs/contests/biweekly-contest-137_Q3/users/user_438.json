{
    "username": "Sifa Serdar Ozen",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        // do a sanity check, what should we return \n        const auto m = board.size();\n        if (m < 3) {\n            return 0;\n        }\n        const auto n = board.front().size();\n        if (n < 3) {\n            return 0;\n        }\n\n        auto sortedNums = vector<pair<int, pair<int, int>>>{};\n        sortedNums.reserve(m*n);\n        for (auto i = 0; i < m; i++) {\n            for (auto j=0; j <n; j++) {\n                sortedNums.push_back({board[i][j], {i, j}});\n            }\n        }\n\n        sort(sortedNums.begin(), sortedNums.end(), greater<pair<int, pair<int, int>>>());\n\n        auto res = numeric_limits<long long int>::min();\n\n        for (int a = 0; a < (m*n - 2); a++) {\n            //std::cout << \"--- A \" << a << std::endl;\n            const auto aVal = sortedNums[a].first;\n            const auto aX = sortedNums[a].second.first;\n            const auto aY = sortedNums[a].second.second;\n          //  std::cout << aVal << std::endl;\n            if (3*((long long int)(aVal)) <= res) {\n               //std::cout << \"breaking A\" << std::endl;\n                break;\n            }\n            for (int b = a+1; b < (m*n -1); b++) {\n                 //           std::cout << \"--- B \" << b << std::endl;\n                const auto bVal = sortedNums[b].first;\n                const auto bX = sortedNums[b].second.first;\n                const auto bY = sortedNums[b].second.second;\n                // std::cout << aVal << \" \" << bVal <<  std::endl;\n\n                if ((aVal + 2*((long long int) bVal)) <= res) {\n                      //              std::cout << \"breaking B\" << std::endl;\n                    break;\n                }\n\n                if (aX == bX || aY == bY) {\n              //      std::cout << \"cont b\" << std::endl;\n                    continue;\n                }\n\n                for (int c = b+1; c < (m*n); c++) {\n       //     std::cout << \"--- C \" << c << std::endl;\n                    const auto cVal = sortedNums[c].first;\n                    const auto cX = sortedNums[c].second.first;\n                    const auto cY = sortedNums[c].second.second;\n       //                                 std::cout << aVal << \" \" << bVal << \" \" << cVal << std::endl;\n\n                    if ((aVal + bVal + (long long int) (cVal)) <= res) {\n      //                                  std::cout << \"breaking c\" << std::endl;\n                        break;\n                    }\n\n                    if (aX == cX || bX == cX || aY == cY || bY == cY) {\n       //                                 std::cout << \"cont c\" << std::endl;\n                        continue;\n                    }\n\n                    res = aVal +(long long int)(bVal) +(long long int) (cVal);\n          //                          std::cout << \"update res to \" << res << std::endl;\n                    break;\n\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723910359",
    "subm_id": "1359227360"
}