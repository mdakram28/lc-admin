{
    "username": "umarom98425",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, petals: List[int], bouquet: int) -> int:\n        if not petals:\n            return 0\n        groups = []\n        last_petals = petals[0]\n        current_group = 1\n        is_same = False\n        for i in range(1, len(petals)):\n            if petals[i] == last_petals:\n                groups.append(current_group)\n                current_group = 1\n                is_same = True\n            else:\n                current_group += 1\n            last_petals = petals[i]\n        groups.append(current_group)\n        if len(groups) == 1 and groups[0] == len(petals) and petals[0] != petals[-1] and not is_same:\n            return len(petals)\n        if petals[0] != petals[-1] and len(groups) > 1:\n            last_group = groups.pop()\n            groups[0] += last_group\n        result = 0\n        for group in groups:\n            result += max(0, group - (bouquet - 1))\n        return result",
    "submit_ts": "1720281337",
    "subm_id": "1311821441"
}