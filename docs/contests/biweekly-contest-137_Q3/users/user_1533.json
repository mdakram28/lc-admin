{
    "username": "Rahul",
    "submission": "struct Entry {\n    int value;\n    int row;\n    int col;\n    \n    // Comparator for sorting in descending order of value\n    bool operator<(const Entry& other) const {\n        return value > other.value;\n    }\n};\n\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n    int m = board.size();\n    int n = board[0].size();\n    \n    vector<Entry> entries;\n    \n    // Step 1: Extract all numbers into a list with their positions\n    for (int r = 0; r < m; ++r) {\n        for (int c = 0; c < n; ++c) {\n            entries.push_back({board[r][c], r, c});\n        }\n    }\n    \n    // Step 2: Sort entries in descending order of value\n    sort(entries.begin(), entries.end());\n    \n    // Step 3: Find the maximum sum by picking the top 3 entries with no row or column conflicts\n    long long maxSum = LLONG_MIN;\n    \n    // Check all combinations of three different entries\n    int counter=10000000;\n    for (size_t i = 0; i < entries.size() - 2; ++i) {\n        for (size_t j = i + 1; j < entries.size() - 1; ++j) {\n            for (size_t k = j + 1; k < entries.size(); ++k) {\n                const auto& e1 = entries[i];\n                const auto& e2 = entries[j];\n                const auto& e3 = entries[k];\n                \n                // Ensure the entries are in different rows and columns\n                if (e1.row != e2.row && e1.row != e3.row && e2.row != e3.row &&\n                    e1.col != e2.col && e1.col != e3.col && e2.col != e3.col) {\n                    long long currentSum = (long long)e1.value + e2.value + e3.value;\n                    maxSum = max(maxSum, currentSum);\n                    counter--;\n                    if(counter<0)\n                    return maxSum;\n                    \n                    // Since we are iterating from the highest values, we can break early if we find a valid combination\n                }\n            }\n        }\n    }\n    return maxSum;\n    }\n};",
    "submit_ts": "1723910083",
    "subm_id": "1359216735"
}