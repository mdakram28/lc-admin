{
    "username": "_Fake4Fun",
    "submission": "class Solution {\npublic:\n    int dem[3];\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int cnt = 0;\n        for (int i = 0; i * 2 + 1 < n; i++) {\n            for (int j = 0; j * 2 + 1 < m; j++) {\n                int dem = grid[i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j];\n                cnt += min(dem, 4 - dem);\n            }\n        }\n        if (n % 2 == 0) {\n            if (m % 2 == 0) return cnt;\n            for (int i = 0; i * 2 + 1 < n; i++) {\n                dem[grid[i][m / 2] + grid[n - 1 - i][m / 2]]++;\n            }\n            if (dem[1] > 0) return cnt + dem[1];\n            if (dem[2] % 2 == 1) return cnt + 2;\n            return cnt;\n        }\n        \n        else {\n            if (m % 2 == 0) {\n                for (int j = 0; j * 2 + 1 < m; j++) {\n                    dem[grid[n / 2][j] + grid[n / 2][m - 1 - j]]++;\n                }\n                if (dem[1] > 0) return cnt + dem[1];\n                if (dem[2] % 2 == 1) return cnt + 2;\n                return cnt;\n            }\n            cnt += grid[n / 2][m / 2];\n            for (int i = 0; i * 2 + 1 < n; i++) {\n                dem[grid[i][m / 2] + grid[n - 1 - i][m / 2]]++;\n            }\n            for (int j = 0; j * 2 + 1 < m; j++) {\n                dem[grid[n / 2][j] + grid[n / 2][m - 1 - j]]++;\n            }\n            if (dem[1] > 0) return cnt + dem[1];\n            if (dem[2] % 2 == 1) return cnt + 2;\n            return cnt;\n        }\n        return -1;\n    }\n};",
    "submit_ts": "1722696619",
    "subm_id": "1343115283"
}