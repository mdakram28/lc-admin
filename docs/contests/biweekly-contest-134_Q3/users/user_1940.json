{
    "username": "adii320",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int numberOfGroupsFound = 0,startIndex = 0;\n        int endIndex = 1;\n        int arrayLength = colors.length;\n        \n        while (endIndex < arrayLength + k && startIndex < arrayLength) {\n            int tempEndIndex = endIndex,tempEnd = tempEndIndex % arrayLength;\n            while (colors[tempEnd] != colors[(tempEnd - 1 + arrayLength) % arrayLength] && tempEndIndex < arrayLength + k - 1) {\n                tempEndIndex++;\n                tempEnd = tempEndIndex % arrayLength;\n            }\n            numberOfGroupsFound += Math.max(tempEndIndex - startIndex - k + 1, 0);\n            startIndex = tempEndIndex;\n            endIndex = startIndex + 1;\n        }\n        \n        return numberOfGroupsFound;\n    }\n}\n",
    "submit_ts": "1720281510",
    "subm_id": "1311827823"
}