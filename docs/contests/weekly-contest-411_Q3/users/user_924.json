{
    "username": "wu py",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(0)\n\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            digits = ['9'] * (n - 2)\n            return '5' + ''.join(digits) + '5'\n        elif k %2 == 0:\n            if n == 1:\n                if k == 6:\n                    return \"6\"\n                return \"8\"\n            elif n == 2:\n                if k == 6:\n                    return \"66\"\n                return \"88\"\n            if n<=4:\n                if k == 8:\n                    return \"8\"*n\n            digits = ['9'] * n\n            digits[0] = digits[-1] = \"8\"\n            if k == 4:\n                digits[1] = digits[-2] = \"8\"\n            elif k == 8:\n                digits[1] = digits[-2] = \"8\"\n                digits[2] = digits[-3] = \"8\"\n            half = n // 2\n            for i in range(9, -1, -1):\n                digits[half] = digits[~half] = str(i)\n                \n                # Construct the palindrome\n                palindrome = ''.join(digits)\n                \n                # Check if the palindrome is divisible by k\n                if k == 4 and int(palindrome[-2:]) % 4 == 0:\n                    print(palindrome)\n                    return palindrome\n                elif k == 8 and int(palindrome[-3:]) % 8 == 0:\n                    return palindrome\n                elif k % 4 != 0 and int(palindrome) % k == 0:\n                    return palindrome\n\n            return ''.join(digits)\n        else:\n            if n == 1:\n                if k == 7:\n                    return \"7\"\n                else:\n                    return \"9\"\n            elif n == 2:\n                if k == 7:\n                    return \"77\"\n                return \"99\"\n            else:\n                digits = ['9'] * n\n                half = n//2\n                for i in range(9, -1, -1):\n                    digits[half] = digits[~half] = str(i)\n                    candidate = int(''.join(digits))\n                    if candidate % k == 0:\n                        return ''.join(digits)\n                return ''.join(digits)\n                \n                \n        return \"-1\"  # \u7406\u8ad6\u4e0a\u4e0d\u6703\u5230\u9054\u9019\u88e1\n",
    "submit_ts": "1723953210",
    "subm_id": "1359815236"
}