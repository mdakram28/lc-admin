{
    "username": "Gaurav_7_Yadav",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<long long> d(nums.size());\n        for (size_t i = 0; i < nums.size(); ++i) {\n            d[i] = static_cast<long long>(target[i]) - static_cast<long long>(nums[i]);\n        }\n        \n        // Initialize the number of operations needed\n        long long ans = 0;\n        long long temp = 0;\n        \n        // Loop through each difference in the array\n        for (size_t i = 0; i < d.size(); ++i) {\n            if (i == 0 || (d[i - 1] > 0 && d[i] > 0) || (d[i - 1] < 0 && d[i] < 0)) {\n       \n                long long a = abs(d[i]) - abs(temp);\n                if (a > 0) {\n                    ans += a;\n                }\n                // Update the current segment difference\n                temp= d[i];\n            } else {\n                ans+= abs(d[i]);\n                // Update the current segment difference\n                temp= d[i];\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721532999",
    "subm_id": "1327998989"
}