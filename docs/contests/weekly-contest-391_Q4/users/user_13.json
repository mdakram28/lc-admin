{
    "username": "Yawn_Sean",
    "submission": "inf = 10 ** 9\nclass Solution:\n    def minimumDistance(self, p: List[List[int]]) -> int:\n        n = len(p)\n        v1 = [x + y for x, y in p]\n        v2 = [x - y for x, y in p]\n        \n        v1_p_min = list(accumulate(v1, min, initial=inf))\n        v1_p_max = list(accumulate(v1, max, initial=-inf))\n        v2_p_min = list(accumulate(v2, min, initial=inf))\n        v2_p_max = list(accumulate(v2, max, initial=-inf))\n        \n        v1.reverse()\n        v2.reverse()\n        \n        v1_s_min = list(accumulate(v1, min, initial=inf))[::-1]\n        v1_s_max = list(accumulate(v1, max, initial=-inf))[::-1]\n        v2_s_min = list(accumulate(v2, min, initial=inf))[::-1]\n        v2_s_max = list(accumulate(v2, max, initial=-inf))[::-1]\n        \n        ans = inf\n        for i in range(n):\n            ans = min(ans, max(max(v1_p_max[i], v1_s_max[i+1]) - min(v1_p_min[i], v1_s_min[i+1]), max(v2_p_max[i], v2_s_max[i+1]) - min(v2_p_min[i], v2_s_min[i+1])))\n        return ans"
}