{
    "username": "zanj0",
    "submission": "/*\n\tJAI JAGANNATH!\n*/\n//@Author : zanj0\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ff              first\n#define ss              second\n#define pb              push_back\n#define MOD             1000000007\n#define inf             1e18\n\ntypedef long long int lli;\nconst int K = 26;\nclass TrieNode {\npublic:\n\tTrieNode* child[K];\n\tint counter;\n\tlli cost;\n\tbool complete;\n\n\tTrieNode() {\n\t\tfor (int i = 0; i < K; i++) {\n\t\t\tchild[i] = NULL;\n\t\t}\n\t\tcounter = 0;\n\t\tcomplete = false;\n\t\tcost = inf;\n\t}\n\n\tvoid insertNode(string& s, lli cost_val) {\n\t\tTrieNode* curr = this;\n\t\tfor (auto& it : s) {\n\t\t\tif (curr->child[it - 'a'] == NULL) {\n\t\t\t\tcurr->child[it - 'a'] = new TrieNode();\n\t\t\t}\n\t\t\tcurr = curr->child[it - 'a'];\n\t\t}\n\t\tcurr->complete = true;\n\t\tcurr->cost = min(curr->cost, cost_val);\n\t}\n\n\n\n\tlli query(string s, int idx) {\n\t\tTrieNode* curr = this;\n\t\tchar it = s[idx];\n\t\tif (curr->child[it - 'a'] == NULL) {\n\t\t\treturn false;\n\t\t}\n\t\tcurr = curr->child[it - 'a'];\n\t\tif (curr->complete) return false;\n\n\t\treturn curr->complete ? curr->cost : inf;\n\t}\n\n};\nclass Solution {\npublic:\n\tlli Dfs(lli idx, TrieNode* head, vector<lli>& dp, string& s) {\n        // cout << idx << endl;\n\t\tif (idx >= s.size()) return 0;\n\t\tlli ret = inf;\n\t\tif (dp[idx] != -1) return dp[idx];\n\t\tTrieNode* curr = head;\n\t\tfor (int j = idx; j < s.size(); j++) {\n\n\t\t\tchar it = s[j];\n            // cout << it << endl;\n\t\t\tif (curr->child[it - 'a'] == NULL) {\n\t\t\t\treturn dp[idx] = ret;\n\t\t\t}\n\t\t\tcurr = curr->child[it - 'a'];\n\t\t\tif (curr->complete) ret = min(ret, curr->cost + Dfs(j + 1, head, dp, s));\n\n\n\t\t}\n\t\treturn dp[idx] = ret;\n\n\t}\n\tint minimumCost(string target, vector<string>& words, vector<int>& costs) {\n\t\tint n = target.size();\n\t\tvector<lli> dp(n, -1);\n\t\tTrieNode* trie = new TrieNode();\n\t\tfor (int i = 0; i < words.size(); i++) {\n\t\t\ttrie->insertNode(words[i], costs[i]);\n\t\t}\n\t\tlli ret = Dfs(0, trie, dp, target);\n\t\tif (ret == inf) ret = -1;\n\t\treturn ret;\n\t}\n};\n\n#ifdef LOCAL\nint main() {\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tcout << \"Compiled!\" << endl;\n}\n#endif",
    "submit_ts": "1720320047",
    "subm_id": "1312281329"
}