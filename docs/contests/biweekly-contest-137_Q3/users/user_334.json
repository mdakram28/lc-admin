{
    "username": "Nick",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> allSorted;\n        for(int i = 0; i < m; ++i) {\n            for(int j = 0; j < n; ++j) {\n                allSorted.push_back({board[i][j], i, j});\n                //pq.push({board[i][j], 0, i, j});\n            }\n        }\n        long long ans = LONG_LONG_MIN;\n        sort(allSorted.begin(), allSorted.end(), greater());\n        for(int i = 0; i < allSorted.size(); ++i) {\n            for(int j = i + 1; j < allSorted.size(); ++j) {\n                if(allSorted[i][1] == allSorted[j][1] || allSorted[i][2] == allSorted[j][2])\n                    continue;\n                for(int k = j + 1; k < allSorted.size(); ++k) {\n                    if(ans > (long long) allSorted[i][0] + allSorted[j][0] + allSorted[k][0])\n                        break;\n                    \n                    if(    allSorted[i][1] != allSorted[k][1] && allSorted[i][2] != allSorted[k][2]\n                        && allSorted[j][1] != allSorted[k][1] && allSorted[j][2] != allSorted[k][2])\n                        ans = max(ans, (long long) allSorted[i][0] + allSorted[j][0] + allSorted[k][0]);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908765",
    "subm_id": "1359166234"
}