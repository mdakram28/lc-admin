{
    "username": "ram0629",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        \n        List<long[]> p = new ArrayList<>();\n        \n        int n = points.length;\n        \n        for(int i = 0;i<n;i++){\n            p.add(new long[]{points[i][0], points[i][1]});\n        }\n        Collections.sort(p, Comparator.comparingLong(a -> a [0]+a[1]));\n        \n        long[] p1 = p.get(0);\n        long[] p2 = p.get(n-1);\n        \n        long d1  = Math.abs(p1[0]-p2[0])+Math.abs(p1[1]-p2[1]);\n        \n        Collections.sort(p, Comparator.comparingLong(a -> a [0]-a[1]));\n        long[] p3 = p.get(0);\n        long[] p4 = p.get(n-1);\n        \n        long d2 = Math.abs(p3[0]-p4[0])+Math.abs(p3[1]-p4[1]);\n        \n        if(d2>d1){\n            p1 = p3;\n            p2 = p4;\n        }\n        \n        p.remove(p1);\n        \n        d1 = getDis(p);\n        p.add(p1);\n        p.remove(p2);\n        d2 = getDis(p);\n        \n        return (int) Math.min(d1,d2);\n    }\n    \n    long getDis(List<long[]> p){\n        int n = p.size();\n        Collections.sort(p, Comparator.comparingLong(a -> a [0]+a[1]));\n        \n        long[] p1 = p.get(0);\n        long[] p2 = p.get(n-1);\n        \n        long d1  = Math.abs(p1[0]-p2[0])+Math.abs(p1[1]-p2[1]);\n        \n        Collections.sort(p, Comparator.comparingLong(a -> a [0]-a[1]));\n        long[] p3 = p.get(0);\n        long[] p4 = p.get(n-1);\n                long d2 = Math.abs(p3[0]-p4[0])+Math.abs(p3[1]-p4[1]);\n\n        return d1>d2 ? d1 : d2;\n        \n    }\n}"
}