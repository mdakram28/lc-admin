{
    "username": "luffy_2311",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(),horizontalCut.rend());\n        sort(verticalCut.rbegin(),verticalCut.rend());\n        long long cost=0;\n        long long x=1,y=1;\n        long long i=0,j=0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                cost+=(long long)(horizontalCut[i]) * y;\n                x++;i++;\n            }\n            else {\n                cost+=(long long)(verticalCut[j]) * x;\n                y++;j++;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            cost+=(long long)(horizontalCut[i]) * y;\n            i++;\n        }\n        while (j < verticalCut.size()) {\n            cost+=(long long)(verticalCut[j]) * x;\n            j++;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926244",
    "subm_id": "1320280285"
}