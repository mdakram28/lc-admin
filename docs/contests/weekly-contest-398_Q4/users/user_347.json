{
    "username": "samk522",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        a = []\n        for i in range(30):\n            a.append(2 ** i)\n        \n        \n        res = 0\n        diff = k - 1\n        for i in range(len(a) + 1):\n            psum = sum(a[:i])\n            mmin = (i + 1) * (-1) + psum\n            mmax = psum\n            \n            slots = i + 1\n            \n            if diff >= mmin and diff <= mmax:\n                needslots = psum - diff\n                # print(i, slots, needslots, psum)\n                res += math.factorial(slots) // (math.factorial(needslots) * math.factorial(slots - needslots))\n                # print(res)\n        return res",
    "submit_ts": 1716088474.0
}