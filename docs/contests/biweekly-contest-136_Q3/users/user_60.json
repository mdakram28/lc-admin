{
    "username": "srikkanthr",
    "submission": "const int N = (int)2e5 + 5;\nconst int oo = (int)1e9 + 5;\nint cost[4][N];\nvoid initify(int i) {\n    cost[0][i] = cost[1][i] = cost[2][i] = cost[3][i] = oo;\n}\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int sz = 0, n = grid.size(), m = grid[0].size(), ans = 0;\n        for (int i=0;i<n-1-i;++i) {\n            int ii = n-i-1;\n            for (int j=0;j<m-1-j;++j) {\n                int jj = m-1-j;\n                int ocnt = grid[i][j] + grid[i][jj] + grid[ii][j] + grid[ii][jj];\n                initify(sz);\n                cost[0][sz] = min(ocnt, 4-ocnt);\n                sz++;\n            }\n        }\n        if (n & 1) {\n            int ir = (n-1)>>1;\n            for (int j=0;j<m-1-j;++j) {\n                int jj = m-1-j;\n                int ocnt = grid[ir][jj] + grid[ir][j];\n                int zcnt = 2 - ocnt;\n                initify(sz);\n                cost[2][sz] = min(cost[2][sz], zcnt);\n                cost[0][sz] = min(cost[0][sz], ocnt);\n                ++sz;\n            }\n        }\n        if (m & 1) {\n            int jr = (m-1)>>1;\n            for (int i=0;i<n-1-i;++i) {\n                int ii = n-1-i;\n                int ocnt = grid[ii][jr] + grid[i][jr];\n                int zcnt = 2 - ocnt;\n                initify(sz);\n                cost[2][sz] = min(cost[2][sz], zcnt);\n                cost[0][sz] = min(cost[0][sz], ocnt);\n                sz++;\n            }\n        }\n\n        if ((n & 1) && (m & 1)) {\n            int ocnt = grid[(n-1)>>1][(m-1)>>1];\n            initify(sz);\n            cost[1][sz] = min(cost[1][sz], 1-ocnt);\n            cost[0][sz] = min(cost[0][sz], ocnt);\n            sz++;\n        }\n        // cout << sz << \" sz\\n\";\n        // for (int i=0;i<sz;++i) {\n        //     for (int j=0;j<4;++j) {\n        //         cout << cost[j][i] << \" \";\n        //     }\n        //     cout << '\\n';\n        // }\n\n        int dp[4] = {0, oo, oo, oo}, ndp[4];\n        for (int i=0;i<sz;++i) {\n            for (int j=0;j<4;++j) ndp[j] = oo;\n            for (int j=0;j<4;++j) {\n                for (int k=0;k<4;++k) {\n                    int r = (j + k) % 4;\n                    ndp[r] = min(ndp[r], dp[j] + cost[k][i]);\n                }\n            }\n            for (int j=0;j<4;++j) dp[j] = ndp[j];\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1722697039",
    "subm_id": "1343131894"
}