{
    "username": "REED_W",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        return sln1(nums, target);\n    }\n\n    private long sln1(int[] nums, int[] t){\n        int n = nums.length;\n        int[] diff = new int[n];\n        long res = 0; long prev = 0;\n        for(int i = 0;i<n;i++) {\n            diff[i] =  t[i]-nums[i];\n            if(diff[i]!=0){\n                if(prev ==0){\n                    res += Math.abs(diff[i]);\n                }else{\n                    if(diff[i] >0 && prev>0){\n                        res += Math.max(0,  diff[i] - prev);\n                    }else if(diff[i] <0 && prev<0){\n                        res += Math.max(0,  prev - diff[i]);\n                    }else{\n                        res += Math.min(Math.abs(diff[i]), Math.abs(diff[i] - prev));\n                    }\n                }\n                \n            }\n            \n            //System.out.println(res);\n            prev = diff[i];\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1721533239",
    "subm_id": "1328004520"
}