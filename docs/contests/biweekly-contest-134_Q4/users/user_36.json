{
    "username": "GabPua",
    "submission": "class Solution {\npublic:\n    long long int solve(vector<int> &a, int k) {\n        int n = a.size();\n        int m = 30;\n        vector<vector<int>> dp(n, vector<int>(m, n));\n        for (int i = n - 1; i >= 0; i--) {\n            for (int j = 0; j < m; j++) {\n                if (i + 1 < n) dp[i][j] = dp[i + 1][j];\n                if (!(a[i] & (1 << j))) dp[i][j] = i;\n            }\n        }\n\n        long long int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int check = i;\n            for (int j = 0; j < m; j++) {\n                if (k & (1 << j)) continue;\n                check = max(check, dp[i][j]);\n            }\n            ans += (n - 1) - check + 1;\n        }\n        return ans;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<vector<int>> a;\n        vector<int> temp;\n        for (auto i: nums) {\n            if ((i & k) != k) {\n                if (temp.size() > 0) a.push_back(temp);\n                temp = move(vector<int>());\n            } else {\n                temp.push_back(i);\n            }\n        }\n        if (temp.size() > 0) a.push_back(temp);\n\n        long long int ans = 0;\n        for (auto i: a) ans += solve(i, k);\n        return ans;\n    }\n};",
    "submit_ts": "1720277731",
    "subm_id": "1311677443"
}