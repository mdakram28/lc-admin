{
    "username": "viscount777",
    "submission": "class Solution {\n    int freqZero[] = new int[32];\n    int freqOne[] = new int[32];\n\n    void add(int x) {\n        int pos = 0;\n        while (x > 0) {\n            if ((x & 1) == 1) {\n                freqOne[pos]++;\n            } else {\n                freqZero[pos]++;\n            }\n            x >>= 1;\n            pos++;\n        }\n\n        while (pos < freqOne.length) {\n            freqZero[pos++]++;\n        }\n    }\n\n    void deduct(int x) {\n        int pos = 0;\n        while (x > 0) {\n            if ((x & 1) == 1) {\n                freqOne[pos]--;\n            } else {\n                freqZero[pos]--;\n            }\n            x >>= 1;\n            pos++;\n        }\n        while (pos < freqOne.length) {\n            freqZero[pos++]--;\n        }\n    }\n\n    int construct() {\n        int res = 0;\n        for (int i = 0; i < freqZero.length; i++) {\n            if (freqZero[i] == 0 && freqOne[i] > 0) {\n                res |= 1 << i;\n            }\n        }\n        return res;\n    }\n\n    public long countSubarrays(int[] nums, int k) {\n        long res = 0;\n\n        int n = nums.length;\n        int l = 0;\n        int r = 0;\n        int r2 = 0;\n        for (l = 0; l < n; l++) {\n            if (l > 0) {\n                deduct(nums[l - 1]);\n            }\n\n            while (r <= l) {\n                add(nums[r++]);\n            }\n            r2 = Math.max(r, r2);\n            int and = construct();\n\n            while (r < n && and > k) {\n                and &= nums[r];\n//                if (and >= k) {\n                    add(nums[r]);\n//                }\n                r++;\n            }\n            if (and != k) {\n                continue;\n            }\n\n            // r2 = r;\n            while (r2 < n && (and & nums[r2]) == k) {\n                r2++;\n            }\n            res += r2 - r + 1;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720281431",
    "subm_id": "1311824913"
}