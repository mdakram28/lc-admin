{
    "username": "heuristic-black3ze",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> m;\n        int l = 0, r = nums.size() - 1;\n        auto add = [&](int l, int r, int v) -> void {\n            if (l > r) return;\n            //cout << l << ' ' << r << endl;\n            m[l] += v;\n            m[r + 1] -= v;\n        };\n        while (l < r) {\n            int x = nums[l], y = nums[r];\n            if (x > y) swap(x, y);\n            int d = y - x;\n            add(0, k, 2);\n            add(d, d, -2);\n            auto add2 = [&](int l, int r) -> void {\n                if (l > r) return;\n                if (l <= d && d <= r) {\n                    add(l, d - 1, -1);\n                    add(d + 1, r, -1);\n                } else {\n                    add(l, r, -1);\n                }\n            };\n            add2(0, max(y, k - x));\n            l++, r--;\n        }\n        int ans = 0x3f3f3f3f;\n        int cur = 0;\n        for (auto [kk, v] : m) {\n            if (kk > k) break;\n            cur += v;\n            ans = min(ans, cur);\n            //cout << k << ' ' << cur << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721486624",
    "subm_id": "548306008"
}