{
    "username": "garyjhu",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        int res = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int count = grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j];\n                res += Math.min(count, 4 - count);\n            }\n        }\n        int ones = 0;\n        boolean flip = false;\n        if (m % 2 == 1) {\n            for (int j = 0; j < n / 2; j++) {\n                int a1 = grid[m / 2][j], a2 = grid[m / 2][n - 1 - j];\n                ones += a1 + a2;\n                if (a1 != a2) {\n                    flip = true;\n                    res++;\n                }\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m / 2; i++) {\n                int a1 = grid[i][n / 2], a2 = grid[m - 1 - i][n / 2];\n                ones += a1 + a2;\n                if (a1 != a2) {\n                    flip = true;\n                    res++;\n                }\n            }\n        }\n        if (!flip && ones % 4 != 0) res += 2;\n        if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1) res++;\n        return res;\n    }\n}\n",
    "submit_ts": "1722696358",
    "subm_id": "1343103931"
}