{
    "username": "loneran",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int horiMulti = 1, vertMulti = 1;\n\n        priority_queue<int> pq1;\n        priority_queue<int> pq2;\n        long long res = 0;\n        for (int num : horizontalCut)\n        {\n            pq1.push(num);\n        }\n        for (int num : verticalCut) \n        {\n            pq2.push(num);\n        }\n\n        while(!pq1.empty() && !pq2.empty())\n        {\n            int num1 = pq1.top();\n            int num2 = pq2.top();\n            if (num1 > num2)\n            {\n                res += num1 * vertMulti;\n                horiMulti += 1;\n                pq1.pop();\n            }else \n            {\n                res += num2 * horiMulti;\n                vertMulti += 1;\n                pq2.pop();\n            }\n        }\n\n        while (!pq1.empty())\n        {\n            int num = pq1.top();\n            pq1.pop();\n            res += num *vertMulti;\n        }\n\n        while (!pq2.empty())\n        {\n            int num = pq2.top();\n            pq2.pop();\n            res += num *horiMulti;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926105",
    "subm_id": "1320276162"
}