{
    "username": "Tudor67",
    "submission": "class Solution {\nprivate:\n    const int MODULO = 1e9 + 7;\n    \npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> cnt(n + 1, -1);\n        for(const vector<int>& REQ: requirements){\n            cnt[REQ[0] + 1] = REQ[1];\n        }\n        \n        int maxCnt = *max_element(cnt.begin(), cnt.end());\n        vector<vector<int>> dp(n + 1, vector<int>(maxCnt + 1));\n        dp[0][0] = 1;\n        for(int i = 0; i + 1 <= n; ++i){\n            int minInv = (cnt[i] == -1 ? 0 : cnt[i]);\n            int maxInv = (cnt[i] == -1 ? maxCnt : cnt[i]);\n            for(int inv = minInv; inv <= maxInv; ++inv){\n                for(int j = 0; j <= i; ++j){\n                    if(inv + j <= maxCnt){\n                        dp[i + 1][inv + j] += dp[i][inv];\n                        dp[i + 1][inv + j] %= MODULO;\n                    }\n                }\n            }\n        }\n        \n        \n        return dp[n][cnt[n]];\n    }\n};",
    "submit_ts": 1719069521.0
}