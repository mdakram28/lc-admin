{
    "username": "bgrm",
    "submission": "#pragma GCC optimize (\"Ofast\")\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n#define FOR(i, a, b) for (auto i=(a); i<(b); i++)\n#define FORD(i, a, b) for (int i=(a); i>(b); i--)\n#define SZ(x) ((int)(x).size())\n#define ALL(x) (x).begin(), (x).end()\n#define PPC(x) __builtin_popcountll(x)\n#define MSB(x) (63 - __builtin_clzll(x))\n#define LSB(x) __builtin_ctzll(x)\n#define ARG(x, i) (get<i>(x))\n#define ithBit(m, i) ((m) >> (i) & 1)\n#define pb push_back\n#define ft first\n#define sd second\n#define kw(a) ((a) * (a))\n#define CLR(x) x.clear(), x.shrink_to_fit()\n#ifdef DEBUG\n#include \"debug.h\"\n#else\n#define dbg(...) 0\n#endif\n#define VLD(i, j) (0 <= (i) and (i) < n and 0 <= (j) and (j) < m)\nusing namespace std;\n \ntemplate <typename T1, typename T2> inline void remin(T1& a, T2 b) { a = min(a, (T1)b);\t}\ntemplate <typename T1, typename T2> inline void remax(T1& a, T2 b) { a = max(a, (T1)b);\t}\n\nconst int maxN = 1 << 18;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& T) {\n\n\t\tint n = SZ(T), m = SZ(T[0]), res = 0;\n\n\t\tFOR(i, 0, n/2) FOR(j, 0, m/2)\n\t\t{\n\t\t\tint a = n-1 - i, b = m-1 - j;\n\t\t\tint x = T[i][j] + T[a][j] + T[i][b] + T[a][b];\n\t\t\tx = min(x, 4 - x);\n\n\t\t\tres += x;\n\t\t}\n\n\t\tint crossSum = 0;\n\t\tbool flex2 = false;\n\n\t\tif (n % 2 == 1) FOR(j, 0, m/2)\n\t\t{\n\t\t\tif (T[n/2][j] != T[n/2][m-1 - j])\n\t\t\t\tres++, flex2 = true;\n\t\t\tif (T[n/2][j] or T[n/2][m-1 - j])\n\t\t\t\tcrossSum += 2;\n\t\t}\n\n\t\tif (m % 2 == 1) FOR(i, 0, n/2)\n\t\t{\n\t\t\tif (T[i][m/2] != T[n-1 - i][m/2])\n\t\t\t\tres++, flex2 = true;\n\t\t\tif (T[i][m/2] or T[n-1 - i][m/2])\n\t\t\t\tcrossSum += 2;\n\t\t}\n\n\t\tif (n % 2 == 1 and m % 2 == 1 and T[n/2][m/2])\n\t\t\tres++;\n\n\t\tif (crossSum % 4 == 2 and not flex2)\n\t\t\tres += 2;\n\n\t\treturn res;\n    }\n};\n",
    "submit_ts": "1722697114",
    "subm_id": "1343134668"
}