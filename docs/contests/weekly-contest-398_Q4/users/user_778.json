{
    "username": "mahir344",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n//     unordered_map<int, vector<vector<int>>> dp;\n//     int solve(int k, int i, int jump, bool can) {\n//         if (i > k + 5)\n//             return 0;\n\n//         if(jump > 31)\n//             return 0;\n\n//         if(dp.count(i) && dp[i][jump][can] != -1)\n//             return dp[i][jump][can];\n\n//         int ans = (i == k);\n//         if (can)\n//             ans += solve(k, i - 1, jump, 0);\n//         if (i + (1 << jump) <= k + 1)\n//             ans += solve(k, i + (1 << jump), jump + 1, 1);\n\n//         dp[i].resize(32, vector<int>(2, -1));\n\n//         return dp[i][jump][can] = ans;\n//     }\n// public:\n//     int waysToReachStair(int k) {\n//         return solve(k, 1, 0, 1);\n//     } \n    unordered_map<int, unordered_map<int,unordered_map<int,int>>> dp;\n    ll solve(ll cur,ll jump,ll k,bool pos){\n        if(jump>32) return 0;\n        if(dp.count(cur) && dp[cur].count(jump) && dp[cur][jump].count(pos)) return dp[cur][jump][pos];\n        ll ans=(cur==k);\n        if(pos){\n            ans+=solve(cur-1,jump,k,false);\n        }\n        ll next=cur+(1<<jump);\n        if(next<=k+1){\n            ans+=solve(next,jump+1,k,true);\n            \n        }\n        return dp[cur][jump][pos]=ans;\n    }\n    int waysToReachStair(int k) {\n        return solve(1,0,k,true);\n    }\n};",
    "submit_ts": "1716089822",
    "subm_id": "1261852155"
}