{
    "username": "user0290vr",
    "submission": "class Solution {\n    int[] t;\n    int n;\n    public int query(int v, int tl, int tr, int l, int r) {\n        if (r < tl || tr < l) {\n            return Integer.MAX_VALUE;\n        }\n        if (l <= tl && tr <= r) {\n            return t[v];\n        }\n        int tm = (tl + tr) / 2;\n        int left = query(v * 2 + 1, tl, tm, l, r);\n        int right = query(v * 2 + 2, tm + 1, tr, l, r);\n        return left & right;\n    }\n    public void build(int[] a, int v, int l, int r) {\n        if (l == r) {\n            t[v] = a[l];\n        } else {\n            int m = (l + r) / 2;\n            build(a, v * 2 + 1, l, m);\n            build(a, v * 2 + 2, m + 1, r);\n            t[v] = t[v * 2 + 1] & t[v * 2 + 2];\n        }\n    }\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        t = new int[4 * n];\n        build(nums, 0, 0, n - 1);\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, m;\n            while (r - l > 1) {\n                m = (l + r) / 2;\n                if (query(0, 0, n - 1, i, m) >= k)\n                    l = m;\n                else\n                    r = m;\n            }\n            if (l != i - 1)\n                ans = Math.min(ans, Math.abs(query(0, 0, n - 1, i, l) - k));\n            ans = Math.min(ans, Math.abs(k - query(0, 0, n - 1, i, r)));\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1717300509",
    "subm_id": "1274846399"
}