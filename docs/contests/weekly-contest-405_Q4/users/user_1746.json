{
    "username": "weiguanchong123",
    "submission": "struct Trie {\n    int cost;\n    vector<Trie*> children;\n\n    Trie() : cost(INT_MAX), children(26) {}\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* root = new Trie();\n        for (int i = 0; i < words.size(); ++i) {\n            int cost = costs[i];\n            string& word = words[i];\n\n            Trie* t = root;\n            for (int i = 0; i < word.size(); ++i) {\n                char c = word[i];\n                if (t->children[c-'a'] == nullptr) {\n                    t->children[c-'a'] = new Trie();\n                }\n                t = t->children[c-'a'];\n                if (i == word.size()-1) {\n                    t->cost = min(t->cost, cost);\n                }\n            }\n        }\n\n        vector<int> dp(target.size() + 1, INT_MAX);\n        dp[0] = 0;\n\n        for (int i = 0; i < target.size(); ++i) {\n            if (dp[i] == INT_MAX) continue;\n            Trie* t = root;\n            for (int j = i; j < target.size(); ++j) {\n                if (t->children[target[j] - 'a'] == nullptr) break;\n                t = t->children[target[j] - 'a'];\n\n                if (t->cost != INT_MAX) {\n                    dp[j+1] = min(dp[j+1], t->cost + dp[i]);\n                }\n            }\n        }\n\n\n        return dp[target.size()] == INT_MAX ? -1 : dp[target.size()];\n    }\n};",
    "submit_ts": "1720323758",
    "subm_id": "1312383350"
}