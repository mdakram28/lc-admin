{
    "username": "chetanaggarwal289",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int count = 0;\n        for(int i=0; i<n/2; i++) {\n            for(int j=0; j<m/2; j++) {\n                int cc = grid[i][j] + grid[n-i-1][j] + grid[i][m-j-1] + grid[n-i-1][m-j-1];\n                if(cc==2) count+=2;\n                if(cc==1 or cc==3) count+=1;\n            }\n        }\n        int countOnes = 0;\n        bool offset = false;\n        if(n%2==1) {\n            for(int j=0; j<m/2; j++) {\n                int x = grid[(n)/2][j];\n                int y = grid[(n)/2][m-j-1];\n                if(x==1 and y==1) countOnes++;\n                if(x!=y) {\n                    offset = true;\n                    count++;\n                }\n            }\n        }\n        if(m%2==1) {\n            for(int i=0; i<n/2; i++) {\n                int x = grid[i][(m)/2];\n                int y = grid[n-i-1][(m)/2];\n                if(x==1 and y==1) countOnes++;\n                if(x!=y) {\n                    offset = true;\n                    count++;\n                }\n            }\n        }\n         if(m%2==1 and n%2==1) count+=(grid[(n)/2][(m)/2]);\n        \n        if(countOnes%2!=0 and !offset) count+=2;\n        \n        return count;\n    }\n};",
    "submit_ts": "1722699180",
    "subm_id": "1343203863"
}