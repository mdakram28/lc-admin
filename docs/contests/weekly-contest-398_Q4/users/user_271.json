{
    "username": "XxFALCONxX",
    "submission": "from math import comb\n\n\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        # upto 30 jumps are possible.\n        # so at max 30 reverse operations are possible\n        p2 = [2**i for i in range(31)]\n        # print(p2)\n        total = 0\n        \n#         need to go up k-1 stairs\n        for revop in range(0, 31):\n            target = k - 1\n            target = target + revop\n            need = 0\n            # print(target, revop)\n\n            while(target > 0):\n                if target >= p2[need]:\n                    target = target - p2[need]\n                    need+=1\n                else: break\n            if target == 0 and (need + 1 >= revop):\n                # print(\"TARGET 0 here\", need, revop)\n                # need number of p2s, so need+1 blanks and revop ops\n                total += comb(need+1, revop)\n        return total",
    "submit_ts": 1716088219.0
}