{
    "username": "kaichsu",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<pair<int, int>> arr;\n        for(int i=0; i<nums.size()/2; ++i){\n            int r = max(nums[i], nums[n-i-1]);\n            int l = min(nums[i], nums[n-i-1]);\n            int limit = max(r, k-l);\n            arr.push_back({r-l, limit});\n        }\n        sort(arr.begin(), arr.end());\n\n        // for(auto &[a, b]: arr){\n        //     cout << a << \" \" << b << endl;\n        // }\n        int ret = INT_MAX;\n\n        int cur_cost = arr.size();\n        int cur_x = arr[0].first;\n        int double_cost = 0;\n\n        priority_queue<int, vector<int>, greater<int>> pq;\n\n        for(int i=0; i<arr.size(); ++i){\n            pq.push(arr[i].second);\n\n            if(arr[i].first == cur_x)\n                cur_cost--;\n            else{\n                cur_x = arr[i].first;\n                while(pq.size() && pq.top() < arr[i].first){\n                    pq.pop();\n                    double_cost++;\n                }\n\n                cur_cost = double_cost + i + arr.size() - i - 1;\n            }\n            // cout << cur_cost << endl;\n            ret = min(ret, cur_cost);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1721489445",
    "subm_id": "1327453466"
}