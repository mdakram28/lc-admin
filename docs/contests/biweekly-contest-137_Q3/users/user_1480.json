{
    "username": "Yash Siwach",
    "submission": "#include <vector>\n#include <queue>\n#include <tuple>\n#include <limits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n        \n        priority_queue<tuple<long long, int, int>> pq;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                pq.emplace(board[i][j], i, j);\n            }\n        }\n        \n        vector<tuple<long long, int, int>> topCells;\n        while (topCells.size() < 300 && !pq.empty()) {\n            topCells.push_back(pq.top());\n            pq.pop();\n        }\n        \n        int topSize = topCells.size();\n        for (int i = 0; i < topSize; ++i) {\n            for (int j = i + 1; j < topSize; ++j) {\n                for (int k = j + 1; k < topSize; ++k) {\n                    long long v1 = get<0>(topCells[i]), r1 = get<1>(topCells[i]), c1 = get<2>(topCells[i]);\n                    long long v2 = get<0>(topCells[j]), r2 = get<1>(topCells[j]), c2 = get<2>(topCells[j]);\n                    long long v3 = get<0>(topCells[k]), r3 = get<1>(topCells[k]), c3 = get<2>(topCells[k]);\n                    \n                    if (r1 != r2 && r1 != r3 && r2 != r3 && c1 != c2 && c1 != c3 && c2 != c3) {\n                        long long currentSum = v1 + v2 + v3;\n                        maxSum = max(maxSum, currentSum);\n                    }\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723909917",
    "subm_id": "1359210527"
}