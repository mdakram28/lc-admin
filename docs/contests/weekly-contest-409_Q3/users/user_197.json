{
    "username": "weirdsmoothie",
    "submission": "class Solution {\n    int n, st[200005], tag[100005]{};\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        this->n = n;\n        vector<int> ans;\n        for (int i = n; i--;) st[n + i] = 1;\n        for (int i = n; i; i--) st[i] = st[i << 1] + st[i << 1 | 1];\n        for (auto &q: queries) {\n            update(q[0] + 1, q[1]);\n            ans.push_back(query(0, n));\n        }\n        return ans;\n    }\n    \n    void update(int l, int r) {\n        int h, ll = l += n, rr = r += n;\n        push(ll), push(rr - 1);\n        for (h = 0; l < r; l >>= 1, r >>= 1, h++) {\n            if (l & 1) apply(l++);\n            if (r & 1) apply(--r);\n        }\n        pull(ll), pull(rr - 1);\n    }\n\n    void apply(int p) {\n        st[p] = 0;\n        if (p < n) tag[p] = 1;\n    }\n\n    void push(int p) {\n        for (int h = __lg(n); h >= 0; h--) {\n            int i = p >> h;\n            if (!tag[i >> 1]) continue;\n            apply(i), apply(i ^ 1);\n            tag[i >> 1] = 0;\n        }\n    }\n\n    void pull(int p) {\n        for (int h = 1; p >>= 1; h++) {\n            if (tag[p]) st[p] = 0;\n            else st[p] = st[p << 1] + st[p << 1 | 1];\n        }\n    }\n\n    int query(int l, int r) {\n        int res = 0;\n        push(l += n), push((r += n) - 1);\n        for (; l < r; l >>= 1, r >>= 1) {\n            if (l & 1) res += st[l++];\n            if (r & 1) res += st[--r];\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722740656",
    "subm_id": "1343725425"
}