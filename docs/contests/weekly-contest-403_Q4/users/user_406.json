{
    "username": "akayan",
    "submission": "class Solution {\n  fun minimumSum(grid: Array<IntArray>): Int {\n    fun areaRange(x1: Int, y1: Int, x2: Int, y2: Int): Int {\n      var position1 = mutableListOf<Int>()\n      var position2 = mutableListOf<Int>()\n      for (i in x1..x2) {\n        for (j in y1..y2) {\n          if (grid[i][j] == 1) {\n            position1.add(i)\n            position2.add(j)\n          }\n        }\n      }\n      if (position1.isEmpty()) return 0\n      val x = position1.max()!! - position1.min()!! + 1\n      val y = position2.max()!! - position2.min()!! + 1\n      return x * y\n    }\n    var min = Int.MAX_VALUE\n    for (i in 0 until grid.size-1) {\n      for (i2 in i+1 until grid.size) {\n        val area1 = areaRange(0, 0, i, grid.first().size-1)\n        val area2 = areaRange(i+1, 0, i2, grid.first().size-1)\n        val area3 = areaRange(i2+1, 0, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    for (j in 0 until grid.first().size-1) {\n      for (j2 in j+1 until grid.first().size) {\n        val area1 = areaRange(0, 0, grid.size-1, j)\n        val area2 = areaRange(0, j+1, grid.size-1, j2)\n        val area3 = areaRange(0, j2+1, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    for (i in 0 until grid.size-1) {\n      for (j in 0 until grid.first().size-1) {\n        val area1 = areaRange(0, 0, i, grid.first().size-1)\n        val area2 = areaRange(i+1, 0, grid.size-1, j)\n        val area3 = areaRange(i+1, j+1, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    for (j in 0 until grid.first().size-1) {\n      for (i in 0 until grid.size-1) {\n        val area1 = areaRange(0, 0, grid.size-1, j)\n        val area2 = areaRange(0, j+1, i, grid.first().size-1)\n        val area3 = areaRange(i+1, j+1, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    for (i in 0 until grid.size-1) {\n      for (j in 0 until grid.first().size-1) {\n        val area1 = areaRange(0, 0, i, j)\n        val area2 = areaRange(0, j+1, i, grid.first().size-1)\n        val area3 = areaRange(i+1, 0, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    for (j in 0 until grid.first().size-1) {\n      for (i in 0 until grid.size-1) {\n        val area1 = areaRange(0, 0, i, j)\n        val area2 = areaRange(i+1, 0, grid.size-1, j)\n        val area3 = areaRange(0, j+1, grid.size-1, grid.first().size-1)\n        if (area1 == 0 || area2 == 0 || area3 == 0) continue\n        min = minOf(min, area1 + area2 + area3)\n      }\n    }\n    return min\n  }\n}",
    "submit_ts": 1719114568.0
}