{
    "username": "jainshreyansh163",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<vector<int>> bits(n + 1, vector<int> (31));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 31; j++) {\n                bits[i + 1][j] = (nums[i] >> j) & 1;\n                bits[i + 1][j] += bits[i][j];\n            }\n        }\n        \n        map<long long, long long> prev;\n        for (int i = 0; i < n; i++) {\n            map<long long, long long> last = {{nums[i], 1}};\n            ans += (nums[i] == k);\n            for (auto &x : prev) {\n                if ((x.first & nums[i]) == k) ans += x.second;\n                last[x.first & nums[i]] += x.second;\n            }\n            prev = last;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278306",
    "subm_id": "1311703401"
}