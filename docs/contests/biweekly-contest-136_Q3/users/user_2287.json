{
    "username": "pls_helpme",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int ans = 0;\n        int possible = 0;\n        int count = 0;\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int[] elements = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n\n                int ones = 0;\n                for (int element : elements) {\n                    if (element == 1) {\n                        ones++;\n                    }\n                }\n                ans += Math.min(ones, 4 - ones);\n            }\n        }\n\n        if (n % 2 != 0) {\n            int i = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[i][j] != grid[i][m - j - 1]) {\n                    ans++;\n                    possible++;\n                } else {\n                    if (grid[i][j] == 1) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        if (m % 2 != 0) {\n            int j = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][j] != grid[n - i - 1][j]) {\n                    ans++;\n                    possible++;\n                } else {\n                    if (grid[i][j] == 1) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ans++;\n        }\n\n        if (possible == 0 && count % 2 != 0) {\n            ans += 2;\n        }\n\n        return ans;\n    }\n}\n",
    "submit_ts": "1722700086",
    "subm_id": "1343231296"
}