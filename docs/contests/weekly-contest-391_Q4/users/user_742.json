{
    "username": "sgr9",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        Node[] sumArray = new Node[points.length];\n        Node[] diffArray = new Node[points.length];\n        \n        for(int i=0; i<points.length; i++) {\n            sumArray[i] = new Node(i, points[i][0]+points[i][1], points[i][0]-points[i][1]);\n            diffArray[i] = sumArray[i];\n        }\n        \n        Arrays.sort(sumArray, (a, b) -> a.sum - b.sum);\n        Arrays.sort(diffArray, (a, b) -> a.diff - b.diff);\n        \n        int min = Integer.MAX_VALUE;\n        \n        for(int removeIndex=0; removeIndex<points.length; removeIndex++) {\n            int startSumArray = 0;\n            int endSumArray = sumArray.length-1;\n            int startDiffArray = 0;\n            int endDiffArray = diffArray.length-1;\n            \n            while(sumArray[startSumArray].index == removeIndex) {\n                startSumArray++;\n            }\n            \n            while(sumArray[endSumArray].index == removeIndex) {\n                endSumArray--;\n            }\n            \n            while(diffArray[startDiffArray].index == removeIndex) {\n                startDiffArray++;\n            }\n            \n            while(diffArray[endDiffArray].index == removeIndex) {\n                endDiffArray--;\n            }\n            \n            min = Math.min(min, Math.max(sumArray[endSumArray].sum - sumArray[startSumArray].sum, \n                                        diffArray[endDiffArray].diff - diffArray[startDiffArray].diff));\n            \n        }\n        \n        return min;\n    }\n    \n    private class Node {\n        public int index;\n        public int sum;\n        public int diff;\n        \n        public Node(int index, int sum, int diff) {\n            this.index = index;\n            this.sum = sum;\n            this.diff = diff;\n        }\n    }\n}"
}