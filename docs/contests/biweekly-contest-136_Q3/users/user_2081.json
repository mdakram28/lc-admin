{
    "username": "samarpit_agarwal",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int size = grid.size();\n        int columns = grid[0].size();\n        \n        vector<vector<int>> visited(size,vector<int>(columns));\n        int operations=0;\n        for(int i=0;i<size/2;i++)\n        {\n         for(int j=0;j<columns/2;j++)\n            {\n                int column1 = j;\n                int column2 = columns-1-j;\n                int row1 = i;\n                int row2 = size-1-i;\n                int element1 = grid[i][j];\n                int element2 = grid[i][column2];\n                \n                int element3 = grid[row2][column1];\n                \n                int element4 = grid[row2][column2];\n                \n               visited[i][j]=1;\n             \n              visited[i][column2]=1;\n              visited[row2][column1]=1;\n              visited[row2][column2]=1;\n                int countzero = 0;\n                int countone = 0;\n                if(element1==0)\n                {\n                    countzero++;\n                }\n                else\n                {\n                    countone++;\n                }\n                 if(element2==0)\n                {\n                    countzero++;\n                }\n                else\n                {\n                    countone++;\n                }\n               if(element3==0)\n                {\n                    countzero++;\n                }\n                else\n                {\n                    countone++;\n                }\n                 if(element4==0)\n                {\n                    countzero++;\n                }\n                else\n                {\n                    countone++;\n                }\n            if(countzero>countone)\n            {\n                grid[i][j]=0;\n                grid[row1][column2]=0;\n                grid[row2][column1]=0;\n                grid[row2][column2]=0;\n                operations=operations+countone;\n            }\n            else if(countone>countzero)\n            {\n                operations=operations+countzero;\n                   grid[i][j]=1;\n                grid[row1][column2]=1;\n                grid[row2][column1]=1;\n                grid[row2][column2]=1;\n            }\n            else\n                {\n                \n                operations=operations+countone;\n               grid[i][j]=0;\n                grid[row1][column2]=0;\n                grid[row2][column1]=0;\n                grid[row2][column2]=0;\n                }\n                                \n            }\n        }\n        if(visited[size/2][0]==0)\n        {\n            \n            for(int j=0;j<columns/2;j++)\n            {\n                int column1 = j;\n                \n                int column2= columns-1-j;\n                int row = size/2;\n                if(grid[row][column1]==grid[row][column2])\n                {\n                    \n                }\n                else\n                {\n                    grid[size/2][column1]=2;\n                    grid[size/2][column2]=2;\n                    operations++;\n                }\n            }\n        }\n        if(visited[0][columns/2]==0)\n        {\n            \n            for(int i=0;i<size/2;i++)\n            {\n                int column = columns/2;\n                int row1 = i;\n                int row2 = size-i-1;\n                if(grid[row1][column]==grid[row2][column])\n                {\n                    \n                }\n                else\n                {\n                    // grid[row1][column1]=2;\n                    // grid[row2][column]\n                    grid[row1][column]=2;\n                    grid[row2][column]=2;\n                    operations++;\n                }\n            }\n        }\n        int x = 0;\n        int count_twos=0;\n        for(int i=0;i<size;i++)\n        {\n            for(int j=0;j<columns;j++)\n            {\n                if(grid[i][j]==1)\n                {\n                    x++;\n                }\n                else if(grid[i][j]==2)\n                {\n                    count_twos++;\n                }\n                    \n            }\n        }\n        int ans = 0;\n        if(x%4==0)\n        {\n            \n          \n            \n            ans=operations;\n        }\n        else if(x%2!=0)\n        {\n            operations++;\n            x--;\n            if(x%4==0)\n            {\n                \n                \n            \n                \n              \n                ans=operations;\n            }\n            else\n            {\n                if(count_twos>0)\n                {\n                    // operations++;\n                }\n                else\n                {\n                    operations+=2;\n                }\n                ans=operations;\n            }\n        }\n        else\n        {\n            \n                if(count_twos>0)\n                {\n                    // operations++;\n                }\n                else\n                {\n                    operations+=2;\n                }\n                ans=operations;\n        }\n//         for(int i=0;i<size;i++)\n//         {\n//             for(int j=0;j<columns;j++)\n//             {\n               \n//                 cout<<grid[i][j]<<\" \";\n//             }\n//             cout<<endl;\n//         }\n        \n    \n        \n        return ans;\n    }\n};",
    "submit_ts": "1722699303",
    "subm_id": "1343207589"
}