{
    "username": "lifam",
    "submission": "class Solution {\n  public int[] timeTaken(int[][] edges) {\n    int n = edges.length + 1;\n    int[][] adj = buildEdgeListInArray(n, edges);\n    int[] times = new int[n], upTimes = new int[n];\n    dfs1(adj, upTimes, 0, -1);\n    dfs2(adj, times, upTimes, 0, -1, 0);\n    return times;\n  }\n\n  private int dfs1(int[][] adj, int[] upTimes, int i, int p) {\n    int ut = 0;\n    for (int next : adj[i]) {\n      if (next == p) {\n        continue;\n      }\n      int nut = dfs1(adj, upTimes, next, i);\n      if (next % 2 == 0) {\n        nut += 2;\n      } else {\n        nut++;\n      }\n      ut = Math.max(ut, nut);\n    }\n    upTimes[i] = ut;\n    return ut;\n  }\n\n  private void dfs2(int[][] adj, int[] times, int[] upTimes, int i, int p, int pTime) {\n    int max1 = pTime, max2 = 0;\n    for (int next : adj[i]) {\n      if (next == p) {\n        continue;\n      }\n      int nt = upTimes[next];\n      if (next % 2 == 0) {\n        nt += 2;\n      } else {\n        nt++;\n      }\n      if (nt >= max1) {\n        max2 = max1;\n        max1 = nt;\n      } else if (nt > max2) {\n        max2 = nt;\n      }\n    }\n    times[i] = max1;\n    int x = i % 2 == 0 ? 2 : 1;\n    for (int next : adj[i]) {\n      if (next == p) {\n        continue;\n      }\n      int nt = upTimes[next];\n      if (next % 2 == 0) {\n        nt += 2;\n      } else {\n        nt++;\n      }\n      if (nt == max1) {\n        dfs2(adj, times, upTimes, next, i, max2 + x);\n      } else {\n        dfs2(adj, times, upTimes, next, i, max1 + x);\n      }\n    }\n  }\n\n  private int[][] buildEdgeListInArray(int n, int[][] edges) {\n    int[] count = new int[n];\n    for (int[] edge : edges) {\n      count[edge[0]]++;\n      count[edge[1]]++;\n    }\n    int[][] edgeList = new int[n][];\n    for (int i = 0; i < n; i++) {\n      edgeList[i] = new int[count[i]];\n    }\n    for (int[] edge : edges) {\n      int u = edge[0], v = edge[1];\n      edgeList[u][--count[u]] = v;\n      edgeList[v][--count[v]] = u;\n    }\n    return edgeList;\n  }\n}",
    "submit_ts": "1722696675",
    "subm_id": "552262238"
}