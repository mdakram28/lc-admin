{
    "username": "HariShankarKarthik",
    "submission": "class Solution {\n    const int MOD = 1e9 + 7;\n    int dfs(const vector<int> &nums, const int &n, const int &i, const int &min1, const int &max2, auto &memo) const {\n        if(i >= n) {\n            return 1;\n        }\n        if(memo[i][min1][max2] >= 0) {\n            return memo[i][min1][max2];\n        }\n        // cout << \"dfs(\" << i << \", \" << min1 << \", \" << max2 << \")\" << endl;\n        int result = 0;\n        for(int t1 = max(min1, nums[i] - max2); t1 <= nums[i]; t1++) {\n            result = (result + dfs(nums, n, i + 1, t1, nums[i] - t1, memo)) % MOD;\n        }\n        memo[i][min1][max2] = result;\n        return result;\n    }\npublic:\n    int countOfPairs(const vector<int> &nums) const {\n        const int n = nums.size();\n        vector<vector<vector<int>>> memo(n, vector<vector<int>>(51, vector<int>(51, -1)));\n        return dfs(nums, n, 0, 0, nums[0], memo);\n    }\n};",
    "submit_ts": "1723345710",
    "subm_id": "1351561684"
}