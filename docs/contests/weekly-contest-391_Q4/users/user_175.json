{
    "username": "terabyte17",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> zz, zo, oz, oo;\n        int high = 100000001;\n        int n = points.size();\n        int ans = INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            zz.insert(points[i][0]+points[i][1]);\n            zo.insert(points[i][0]+high-points[i][1]);\n            oz.insert(high-points[i][0] + points[i][1]);\n            oo.insert(high-points[i][0]+high-points[i][1]);\n        }\n        for(int i=0;i<n;i++)\n        {\n            int curr = 0;\n            zz.erase(zz.find(points[i][0]+points[i][1]));\n            zo.erase(zo.find(points[i][0]+high-points[i][1]));\n            oz.erase(oz.find(high-points[i][0] + points[i][1]));\n            oo.erase(oo.find(high-points[i][0]+high-points[i][1]));\n            curr = max(curr, *(zz.rbegin()) - *(zz.begin()));\n            curr = max(curr, *(zo.rbegin()) - *(zo.begin()));\n            curr = max(curr, *(oz.rbegin()) - *(oz.begin()));\n            curr = max(curr, *(oo.rbegin()) - *(oo.begin()));\n            ans = min(ans, curr);\n            zz.insert(points[i][0]+points[i][1]);\n            zo.insert(points[i][0]+high-points[i][1]);\n            oz.insert(high-points[i][0] + points[i][1]);\n            oo.insert(high-points[i][0]+high-points[i][1]);\n        }\n        return ans;\n    }\n};"
}