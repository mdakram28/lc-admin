{
    "username": "jaskirat0001",
    "submission": "// class Solution {\n// public:\n//     long long countSubarrays(vector<int>& nums, int k) {\n//         int n = nums.size();\n//         long long count = 0;\n        \n//         // Iterate through all starting points\n//         for (int i = 0; i < n; ++i) {\n//             int currentAND = nums[i];\n            \n//             // Check subarrays starting at 'i'\n//             for (int j = i; j < n; ++j) {\n//                 currentAND &= nums[j];\n                \n//                 // Check if the bitwise AND is equal to k\n//                 if (currentAND == k) {\n//                     count++;\n//                 }\n                \n//                 // If currentAND becomes less than k, no need to continue\n//                 // because AND operation will not change it back to k\n//                 if (currentAND < k) {\n//                     break;\n//                 }\n//             }\n//         }\n        \n//         return count;\n//     }\n// };\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int size = nums.size();\n        long long total = 0;\n        unordered_map<long long, long long> prev;\n        for (int index = 0; index < size; ++index) {\n            unordered_map<long long, long long> curr; \n            if (nums[index] == k) {\n                ++total;\n            }\n            curr[nums[index]] = 1;\n            for (auto& [value, frequency] : prev) {\n                long long newAndResult = value & nums[index];\n                if (newAndResult == k) {\n                    total += frequency;\n                }\n                curr[newAndResult] += frequency;\n            }\n            \n            prev = curr;\n        }\n        return total;\n    }\n};",
    "submit_ts": "1720281598",
    "subm_id": "1311831782"
}