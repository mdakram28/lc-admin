{
    "username": "augustwang-4",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        \n        def MaxDist(A):\n            N = len(A)\n            V = []\n            V1 = []\n\n            for i in range(N):\n                V.append((A[i][0] + A[i][1], i))\n                V1.append((A[i][0] - A[i][1], i))\n\n            # Sorting both the vectors\n            V.sort()\n            V1.sort()\n            \n            if V[-1][0] - V[0][0] >= V1[-1][0] - V1[0][0]:\n                i, j, d = V[-1][1], V[0][1], V[-1][0] - V[0][0]\n            else:\n                i, j, d = V1[-1][1], V1[0][1], V1[-1][0] - V1[0][0]\n            return i, j, d\n        \n        def MaxDist2(A):\n            N = len(A)\n            V = []\n            V1 = []\n\n            for i in range(N):\n                V.append((A[i][0] + A[i][1], i))\n                V1.append((A[i][0] - A[i][1], i))\n\n            # Sorting both the vectors\n            V.sort()\n            V1.sort()\n            \n            if V[-1][0] - V[0][0] > V1[-1][0] - V1[0][0]:\n                i, j, d = V[-1][1], V[0][1], V[-1][0] - V[0][0]\n            else:\n                i, j, d = V1[-1][1], V1[0][1], V1[-1][0] - V1[0][0]\n            return i, j, d\n        i, j, t = MaxDist(points)\n        # print(t, i, j)\n        c = points[:]\n        c.pop(i)\n        _, _, d1 = MaxDist(c)\n        c = points[:]\n        c.pop(j)\n        _, _, d2 = MaxDist(c)\n        \n        i, j, _ = MaxDist2(points)\n        c = points[:]\n        c.pop(i)\n        _, _, d3 = MaxDist(c)\n        c = points[:]\n        c.pop(j)\n        _, _, d4 = MaxDist(c)\n        return min(d1, d2, d3, d4)\n        \n    \n        "
}