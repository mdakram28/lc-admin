{
    "username": "sealpipi",
    "submission": "class Solution {\n    int[][] grid;\n\n    int coverArea(int rStart, int rEnd, int cStart, int cEnd) {\n        int minR = rEnd, maxR = rStart;\n        int minC = cEnd, maxC = cStart;\n        \n        if((rStart > rEnd) || (cStart > cEnd)) {\n            return 10000;\n        }\n        \n        int cnt = 0;\n        for(int i=rStart; i<=rEnd; i++) {\n            for(int j=cStart; j<=cEnd; j++) {\n                if(grid[i][j] == 1) {\n                    minR = Math.min(minR, i);\n                    maxR = Math.max(maxR, i);\n                    minC = Math.min(minC, j);\n                    maxC = Math.max(maxC, j);\n                    cnt++;\n                }\n            }\n        }\n        \n        if(cnt == 0) {\n            return 10000;\n        }\n        \n        return (maxR - minR + 1) * (maxC - minC + 1);\n    }\n    \n    public int minimumSum(int[][] grid) {\n        this.grid = grid;\n        int m = grid.length;\n        int n = grid[0].length;\n        int area1 = 0, area2 = 0, area3 = 0;\n        int minArea = Integer.MAX_VALUE;\n        \n        for(int i=0; i<m; i++) {\n            area1 = coverArea(0, i, 0, n-1);\n            for(int j=(i+1); j<m; j++) {\n                area2 = coverArea(i+1, j, 0, n-1);\n                area3 = coverArea(j+1, m-1, 0, n-1);\n                // System.out.printf(\"case1: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n            \n            for(int j=0; j<n; j++) {\n                area2 = coverArea(i+1, m-1, 0, j);\n                area3 = coverArea(i+1, m-1, j+1, n-1);\n                // System.out.printf(\"case2: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n        }\n        \n        for(int i=(m-1); i>=0; i--) {\n            area1 = coverArea(i, m-1, 0, n-1);\n            for(int j=(i-1); j>=0; j--) {\n                area2 = coverArea(j, i-1, 0, n-1);\n                area3 = coverArea(0, j-1, 0, n-1);\n                // System.out.printf(\"case1: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n            \n            for(int j=0; j<n; j++) {\n                area2 = coverArea(0, i-1, 0, j);\n                area3 = coverArea(0, i-1, j+1, n-1);\n                // System.out.printf(\"case2: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n        }\n        \n        for(int i=0; i<n; i++) {\n            area1 = coverArea(0, m-1, 0, i);\n            for(int j=(i+1); j<n; j++) {\n                area2 = coverArea(0, m-1, i+1, j);\n                area3 = coverArea(0, m-1, j+1, n-1);\n                // System.out.printf(\"case3: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n            \n            for(int j=0; j<m; j++) {\n                area2 = coverArea(0, j, i+1, n-1);\n                area3 = coverArea(j+1, m-1, i+1, n-1);\n                // System.out.printf(\"case4: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n        }\n        \n        for(int i=(n-1); i>=0; i--) {\n            area1 = coverArea(0, m-1, i, n-1);\n            for(int j=(i-1); j>=0; j--) {\n                area2 = coverArea(0, m-1, j, i-1);\n                area3 = coverArea(0, m-1, 0, j-1);\n                // System.out.printf(\"case3: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n            \n            for(int j=0; j<m; j++) {\n                area2 = coverArea(0, j, 0, i-1);\n                area3 = coverArea(j+1, m-1, 0, i-1);\n                // System.out.printf(\"case4: (area1, area2, area3) = (%d, %d, %d) \\n\", area1, area2, area3);\n                minArea = Math.min(minArea, area1+area2+area3);\n            }\n        }\n        \n        return minArea;\n    }\n}",
    "submit_ts": 1719113493.0
}