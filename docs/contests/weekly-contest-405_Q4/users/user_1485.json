{
    "username": "Ayush34513",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\nclass Node{ \n    public:\nchar val;\nbool t;\nint cost;\n\n    unordered_map<char,Node*>mp;\n\n    Node(char val){\n  this->val=val;\n  t=0;\n  cost=INT_MAX;\n    }\n\n};\nclass Trie{\n    public:\n    unordered_map<string,int>dp;\n int dp1[60000];\n    Node* root;\n    Trie(){\n        root=new Node('\\0');\n        memset(dp1,-1,sizeof(dp1));\n\n    }\n    void insert(string &s ,int c){\n        Node* curr=root;\n      for(auto i:s){\n          if(curr->mp.find(i)==curr->mp.end())curr->mp[i] =new Node(i);\n          curr=curr->mp[i];\n      }\n      curr->t=1;\n      curr->cost=min(curr->cost,c);\n\n      \n\n\n    }\n    \n\n \nlong long f(int i,string &s){\n\n    // string temp=s.substr(i);\n    // if(dp.find(temp)!=dp.end())return dp[temp];\n    if(dp1[i]!=-1)return dp1[i];\n    if(i==s.size())return 0;\n    long long ans=INT_MAX;\n    Node* curr=root;\n    for(int j=i;j<s.size();j++){\n        if(curr->mp.find(s[j])==curr->mp.end())break;\n        curr=curr->mp[s[j]];\n        if(curr->t){\n            ans=min(ans,curr->cost+f(j+1,s));\n        }\n\n    }\n    return dp1[i]= min(ans,(long long)INT_MAX);\n    // return dp[temp]= min(ans,(long long)INT_MAX);\n\n\n}\n\n};\n\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n    Trie T;\n    for(int i=0;i<words.size();i++){\n        T.insert(words[i],costs[i]);\n    }\n    long long ans=T.f(0,target);\n    if(ans>=INT_MAX)return -1 ;\n    return ans;\n\n        \n    }\n};",
    "submit_ts": "1720323714",
    "subm_id": "1312382260"
}