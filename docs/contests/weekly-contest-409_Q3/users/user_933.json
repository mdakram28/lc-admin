{
    "username": "jnfem112",
    "submission": "class MyListNode {\n\tpublic:\n\t\tint val;\n\t\tMyListNode *next;\n\n\t\tMyListNode(int val) {\n\t\t\tthis->val = val;\n\t\t\tthis->next = nullptr;\n\t\t}\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n\t\tMyListNode *head = nullptr, *tail = nullptr;\n\t\tunordered_map<int, MyListNode*> id2node;\n\t\tvector<bool> discard(n, false);\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tMyListNode *node = new MyListNode(i);\n\t\t\tif (head == nullptr)\n\t\t\t\thead = tail = node;\n\t\t\telse\n\t\t\t\ttail->next = node, tail = node;\n\t\t\tid2node[i] = node;\n\t\t}\n\n\t\tint curr_ans = n - 1;\n\t\tvector<int> ans;\n\t\tfor (auto query : queries)\n\t\t{\n\t\t\tint start = query[0];\n\t\t\tint end = query[1];\n\t\t\tif (discard[start] || discard[end])\n\t\t\t{\n\t\t\t\tans.push_back(curr_ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint num_discard_node = 0;\n\t\t\tfor (MyListNode *node = id2node[start]->next; node && node->val != end; node = node->next)\n\t\t\t{\n\t\t\t\tdiscard[node->val] = true;\n\t\t\t\tnum_discard_node++;\n\t\t\t}\n\n\t\t\tcurr_ans -= num_discard_node;\n\t\t\tans.push_back(curr_ans);\n\t\t\tid2node[start]->next = id2node[end];\n\t\t}\n\n\t\t// MyListNode *curr = head, *temp;\n\t\t// while (curr)\n\t\t// {\n\t\t// \ttemp = curr;\n\t\t// \tcurr = curr->next;\n\t\t// \tdelete temp;\n\t\t// }\n\n\t\treturn ans;\n    }\n};",
    "submit_ts": "1722742045",
    "subm_id": "1343759641"
}