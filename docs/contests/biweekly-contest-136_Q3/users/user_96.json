{
    "username": "JeffreyLC",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n        int ans = 0, remainder = 0;\n        bool two = false;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (grid[i][j] == -1) continue;\n                set<pair<int, int>> s;\n                s.insert({i, j});\n                s.insert({i, n - 1 - j});\n                s.insert({m - 1 - i, j});\n                s.insert({m - 1 - i, n - 1 - j});\n                int zero = 0;\n                for (auto [x, y] : s) {\n                    if (grid[x][y] == 0) {\n                        ++zero;\n                    }\n                }\n                if (s.size() == 4) {\n                    ans += min(zero, 4 - zero);\n                } else if (s.size() == 2) {\n                    if (zero == 1) {\n                        ++ans;\n                        two = true;\n                    } else if (zero == 0) {\n                        remainder += 2;\n                        remainder %= 4;\n                    }\n                } else if (s.size() == 1) {\n                    if (zero == 0) {\n                        ++ans;\n                    }\n                }\n                grid[i][j] = grid[i][n - 1 - j] = grid[m - 1 - i][j] = grid[m - 1 - i][n - 1 - j] = -1;\n            }\n        }\n        if (!two && remainder == 2) {\n            ans += 2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722696141",
    "subm_id": "1343093858"
}