{
    "username": "datnormie",
    "submission": "/**\n * @param {number[][]} points\n * @return {number}\n */\nvar minimumDistance = function(points) {\n    let n = points.length;\n    \n    let sum = points.map((point) => point[0] + point[1]);\n    let diff = points.map((point) => point[0] - point[1]);\n    \n    sum.sort((a, b) => a - b);\n    diff.sort((a, b) => a - b);\n    \n    let ans = Math.max(sum[n - 1] - sum[0], diff[n - 1] - diff[0]);\n    \n    for (const point of points) {\n        const curSum = point[0] + point[1];\n        const curDiff = point[0] - point[1];\n        let s0 = 0, s1 = n - 1, d0 = 0, d1 = n - 1;\n        if (curSum == sum[s1]) s1--;\n        if (curSum == sum[s0]) s0++;\n        if (curDiff == diff[d1]) d1--;\n        if (curDiff == diff[d0]) d0++;\n        ans = Math.min(ans, Math.max(sum[s1] - sum[s0], diff[d1] - diff[d0]));\n    }\n    \n    return ans;\n    \n};"
}