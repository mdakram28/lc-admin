{
    "username": "xiao-xiao-dimeng-huan",
    "submission": "class Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        th = min(int(5e4), 3 * len(queries)) + 10\n        sg = [None] * th * 4\n        def up(i, l, r, v):\n            if v > r or v < l:\n                return\n            if l == r:\n                sg[i] = (v, v, 0)\n                return \n            mi = l + r >> 1\n            up(i * 2, l, mi, v)\n            up(i * 2 + 1, mi + 1, r, v)\n            le = sg[i * 2]\n            ri = sg[i * 2 + 1]\n            if le and ri:\n                sg[i] = (le[0], ri[1], max(le[2], ri[2], ri[0] - le[1]))\n            elif not le and ri:\n                sg[i] = (ri[0], ri[1], ri[0] - l)\n            elif not ri and le:\n                sg[i] = (le[0], le[1], r - le[1])\n        \n        def qu(i, l, r, qx):\n            if qx >= r:\n                return sg[i]\n            if qx <= l:\n                return qx, qx, 0\n            mi = l + r >> 1\n            le = qu(i * 2, l, mi, qx)\n            ri = qu(i * 2 + 1, mi + 1, r, qx)\n            if le and ri:\n                return (le[0], ri[1], max(le[2], ri[2], ri[0] - le[1]))\n            elif not le and ri:\n                return (ri[0], ri[1], max(ri[2], ri[0] - l))\n            elif not ri and le:\n                return (le[0], le[1], max(le[2], r - le[1]))\n        ans = []\n        for l in queries:\n            if l[0] == 1:\n                up(1, 0, th, l[1])\n            else:\n                ans.append(qu(1, 0, th, l[1])[2] >= l[2])\n        return ans\n        ",
    "submit_ts": 1716650915.0
}