{
    "username": "yashraj_prasad",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.append(0)\n        verticalCut.append(0)\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        idx1, idx2, h, v, c = 0, 0, 1, 1, 0\n        val = []\n        \n        while idx1 < len(horizontalCut) - 1 and idx2 < len(verticalCut) - 1:\n            if horizontalCut[idx1] <= verticalCut[idx2]:\n                c += verticalCut[idx2] * h\n                v += 1\n                idx2 += 1\n            else:\n                c += horizontalCut[idx1] * v\n                h += 1\n                idx1 += 1\n        \n        while idx1 < len(horizontalCut) - 1:\n            c += horizontalCut[idx1] * v\n            idx1 += 1\n        \n        while idx2 < len(verticalCut) - 1:\n            c += verticalCut[idx2] * h\n            idx2 += 1\n        \n        return c\n        ",
    "submit_ts": "1720925370",
    "subm_id": "1320252401"
}