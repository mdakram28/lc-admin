{
    "username": "MMMMMMMW",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        List<node> list = new ArrayList<>();\n        for (int i = 0;i < board.length; i++) {\n            for (int j = 0;j < board[i].length;j++) {\n                list.add(new node(board[i][j], i, j));\n            }\n        }\n        Collections.sort(list, Comparator.comparing(n -> n.value));\n        Collections.reverse(list);\n        long ans = Long.MIN_VALUE;\n        for (int i = 0;i < board.length; i++) {\n            for (int j = 0;j < board[i].length;j++) {\n                for (int ii = 0;ii < board.length; ii++){\n                    for (int jj = 0; jj < board[i].length;jj++) {\n                        if (ii == i || j == jj) {\n                            break;\n                        }\n                        if (i != ii && jj != j) {\n                            long sum = (long) board[i][j] + board[ii][jj];\n                            for (int u = 0;u < list.size();u++) {\n                                node n = list.get(u);\n                                if (n.row != i && n.row != ii && n.colum != j && n.colum != jj) {\n                                    sum += n.value;\n                                    ans = Long.max(ans, sum);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n            }\n            }\n        }\n        return ans;\n\n    }\n    public static class node {\n        public int value;\n        public int row;\n        public int colum;\n        node (int value, int row, int colum) {\n            this.value = value;\n            this.row = row;\n            this.colum = colum;\n        }\n        public int getValue() {\n            return this.value;\n        }\n\n\n    }\n}",
    "submit_ts": "1723908915",
    "subm_id": "556333549"
}