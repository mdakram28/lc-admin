{
    "username": "a0920732333",
    "submission": "class Solution \n{\npublic:\n    int solve(vector<vector<int>>& grid, int l, int r, int u, int d) \n    {\n        int n = grid.size(), m = grid[0].size();\n        int left = m - 1, right = 0;\n        int up = n - 1, down = 0;\n        int cnt = 0;\n        // cout << l << ' ' << r << ' ' << u << ' ' << d << '\\n';\n        for(int i = u; i <= d; i++)\n        {\n            for(int j = l; j <= r; j++)\n            {\n                if(grid[i][j])\n                {\n                    cnt++;\n                    left = min(left, j);\n                    right = max(right, j);\n                    up = min(up, i);\n                    down = max(down, i);\n                }\n            }\n        }\n        // cout << left << ' ' << right << ' ' << up << ' ' << down << '\\n';\n        if(cnt == 0)\n        {\n            return -1;\n        }\n        return (right - left + 1) * (down - up + 1);\n    }\n    int minimumSum(vector<vector<int>>& grid) \n    {\n        int ans = INT_MAX;\n        int n = grid.size(), m = grid[0].size();\n        int left = m - 1, right = 0;\n        int up = n - 1, down = 0;\n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < m; j++)\n            {\n                if(grid[i][j])\n                {\n                    left = min(left, j);\n                    right = max(right, j);\n                    up = min(up, i);\n                    down = max(down, i);\n                }\n            }\n        }\n        int first = 0, second = 0, third = 0;\n        for(int i = up; i < down; i++)\n        {\n            first = solve(grid, left, right, up, i);\n            for(int j = i + 1; j < down; j++)\n            {\n                second = solve(grid, left, right, i + 1, j);\n                third = solve(grid, left, right, j + 1, down);\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << \"1 => \" << ans << '\\n';\n                }\n            }\n            for(int j = 0; j < right; j++)\n            {\n                second = solve(grid, left, j, i + 1, down);\n                third = solve(grid, j + 1, right, i + 1, down);\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << \"2 => \" << ans << '\\n';\n                }\n            }\n            first = solve(grid, left, right, i + 1, down);\n            for(int j = 0; j < right; j++)\n            {\n                second = solve(grid, left, j, 0, i);\n                third = solve(grid, j + 1, right, 0, i);\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << first << ' ' << second << ' ' << third << '\\n';\n                    // cout << \"3 => \" << ans << '\\n';\n                }\n            }\n        }\n        for(int i = left; i < right; i++)\n        {\n            \n            first = solve(grid, left, i, up, down);\n            for(int j = i + 1; j < right; j++)\n            {\n                // cout << left << ' ' << right << ' ' << up << ' ' << down << '\\n';\n                second = solve(grid, i + 1, j, up, down);\n                third = solve(grid, j + 1, right, up, down);\n                // cout << first << ' ' << second << ' ' << third << '\\n';\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << \"4 => \" << ans << '\\n';\n                }\n            }\n            for(int j = 0; j < down; j++)\n            {\n                second = solve(grid, i + 1, right, up, j);\n                third = solve(grid, i + 1, right, j + 1, down);\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << \"5 => \" << ans << '\\n';\n                }\n            }\n            first = solve(grid, i + 1, right, up, down);\n            for(int j = 0; j < down; j++)\n            {\n                second = solve(grid, left, i, 0, j);\n                third = solve(grid, left, i, j + 1, down);\n                if(first != -1 && second != -1 && third != -1)\n                {\n                    ans = min(ans, first + second + third);\n                    // cout << \"6 => \" << ans << '\\n';\n                }\n            }\n        }\n        // cout << \"---------------------------------------------------------\\n\";\n        return ans;\n    }\n};\n\n//0 1 1\n//0 0 0\n//1 0 0 \n//1 0 0 ",
    "submit_ts": "1719114300",
    "subm_id": "1297343962"
}