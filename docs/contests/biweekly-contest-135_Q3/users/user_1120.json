{
    "username": "lyc7",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> mp;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++) {\n            mp[abs(nums[n - 1 - i] - nums[i])]++;\n        }\n        vector<pair<int, int>> v;\n        for (auto &m: mp) {\n            v.emplace_back(m.second, m.first);\n        }\n        sort(v.begin(), v.end(), [] (auto a, auto b) {\n            if (a.first != b.first)  return a.first < b.first;\n            return a.second > b.second;\n        });\n        int diff = v.back().second, ans2 = -1;\n        if (v.size() >= 2 && v[v.size() - 2].second < diff) {\n            int diff2 = v[v.size() - 2].second;\n            int num_eq_d2 = v[v.size() - 2].first;\n            int num_eq_d1 = v.back().first;\n            if (2 * (n - num_eq_d1) > (n - num_eq_d2))\n                ans2 = count_ans(n, nums, k, diff2);\n        }\n        int ans = count_ans(n, nums, k, diff);\n        if (ans2 != -1) return min(ans, ans2);\n        return ans;\n    }\nprivate:\n    int count_ans(int n, vector<int>& nums, int k, int diff) {\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            if (abs(nums[i] - nums[n - 1 - i]) > diff)\n                ans++;\n            else if (abs(nums[i] - nums[n - i - 1]) < diff) {\n                int minv = min(nums[i], nums[n - i - 1]);\n                int maxv = max(nums[i], nums[n - i - 1]);\n                if (maxv < diff && k - minv < diff)    ans += 2;\n                else    ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488879",
    "subm_id": "1327436013"
}