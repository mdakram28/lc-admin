{
    "username": "alokkumar9019",
    "submission": "class Solution {\npublic:\nint m=1e9+7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        int k=2;\n        int mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n        for (const auto it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n         k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n\n        vector<vector<long long>> v(n + 1,vector<long long>(401, 0));\n        v[0][0] = 1;\n         k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n\n        for (int len = 1; len <= n; len++) {\n             k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n            for (int i = 0; i <= 400; i++) {\n                 k=2;\n         mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n                for (int j = 0; j < len; j++) {\n                    int prev = i - j;\n                    if (prev >= 0) {\n                        v[len][i] = (v[len][i] + v[len - 1][prev]) % m;\n                    }\n                }\n            }\n             k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n\n\n            if (mp.count(len)) {\n                int tar = mp[len];\n                for (int i = 0; i <= 400; i++) {\n                    if (i != tar) {\n                        v[len][i]=0;\n                    }\n                }\n                 k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n            }\n        }\n\n        long long res = 0;\n        for (long long it : v[n]) {\n             k=2;\n        mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n            res = (res + it) % m;\n        }\n        \n         k=2;\n         mx=0;\n        while(k--){\n            mx=max(1,2);\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719071947.0
}