{
    "username": "ghostof_Uchiha",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans= 0;\n        for (int i=0; i<n/2; i++) {\n            for (int j=0; j<m/2; j++) {\n                int cnt = 0;\n                \n                    cnt = grid[i][j] + grid[i][m-j-1]\n                        + grid[n-i-1][j] + grid[n-i-1][m-j-1];\n                    if (cnt == 1 || cnt == 3) ans++;\n                    else if (cnt == 2) ans += 2;\n                \n            }\n        }\n\n        int same =0, notsame = 0;\n        if (n%2 == 1 && m%2 == 1) {\n            ans += grid[n/2][m/2];\n        }\n        if (n%2 == 1) {\n            for (int j=0; j<m/2; j++) {\n                if (grid[n/2][j] != grid[n/2][m-j-1]) notsame++;\n                else if (grid[n/2][j]) same+=2;      \n            }\n        }\n        if (m%2 == 1) {\n            for (int i=0; i<n/2; i++) {\n                if (grid[i][m/2] != grid[n-i-1][m/2]) notsame++;\n                else if (grid[i][m/2]) same+=2;\n            }\n        }\n        // cout<<same<<\" \"<<notsame<<endl;\n        same %= 4;\n        if (same == 0) ans += notsame;\n        if (same == 2) {\n            if (notsame == 0) ans += 2;\n            else ans += notsame;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698791",
    "subm_id": "1343191939"
}