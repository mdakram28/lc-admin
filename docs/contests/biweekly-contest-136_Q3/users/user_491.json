{
    "username": "bugdone",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& a) {\n        int n = a.size();\n        int m = a[0].size();\n        \n        vector<int> dp(4, n * m);\n        dp[0] = 0;\n        for (int i = 0; i < (n / 2 + (n % 2)); ++i)\n            for (int j = 0; j < (m / 2 + (m % 2)); ++j) {\n                vector<int> ndp(4);\n                \n                int summ = a[i][j];\n                int count = 1;\n                int r = m - 1 - j;\n                int d = n - 1 - i;\n                \n                if (r != j) {\n                    if (d != i) {\n                        count += 3;\n                        summ += a[i][r] + a[d][j] + a[d][r];\n                    } else  {\n                        count++;\n                        summ += a[i][r];\n                    }\n                } else {\n                    if (d != i) {\n                        count++;\n                        summ += a[d][j];\n                    }                    \n                }\n                \n                for (int k = 0; k < 4; ++k)\n                    ndp[k] = dp[k] + summ;\n                for (int k = 0; k < 4; ++k)\n                    ndp[(k + count) % 4] = min(ndp[(k + count) % 4], dp[k] + count - summ);\n                \n                swap(dp, ndp);\n            }\n        \n        return dp[0];\n    }\n};",
    "submit_ts": "1722697455",
    "subm_id": "1343147165"
}