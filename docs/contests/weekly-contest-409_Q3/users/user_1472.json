{
    "username": "alto_ka_platu",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        \n        vector<int>d(n,0);\n        for(int i =1;i<n;i++){\n            d[i]= d[i-1]+1;\n        }\n        set<int>p;\n        for(int i = 0;i<n;i++){\n            p.insert(i);\n        }\n        \n        vector<int>r;\n        for(const auto &qi : queries){\n            int l = qi[0];\n            int rt = qi[1];\n            auto lb = p.lower_bound(l+1);\n            auto ub = p.lower_bound(rt);\n            \n            p.erase(lb,ub);\n            r.push_back(p.size() -1);\n        }\n        return r;\n//         vector<int>result;\n//         vector<unordered_set<int>>adj(n);\n        \n//         for(int i =0;i<n-1;i++){\n//             adj[i].insert(i+1);\n//         }\n        \n//         auto bfs = [&](int start, int end){\n//             vector<int>dist(n,-1);\n//             queue<int>q;\n//             q.push(start);\n//             dist[start] = 0;\n            \n//             while(!q.empty()){\n//                 int node = q.front();\n//                 q.pop();\n                \n//                 for(int neighbor : adj[node]){\n//                     if(dist[neighbor] == -1){\n//                         dist[neighbor] = dist[node] + 1;\n//                         q.push(neighbor);\n//                     }\n//                 }\n//             }\n//             return dist[end];\n//         };\n//         for(const auto& query : queries){\n//             int u = query[0], v = query[1];\n//             adj[u].insert(v);\n//             result.push_back(bfs(0,n-1));\n//         }\n//         return result;\n    }\n};",
    "submit_ts": "1722743550",
    "subm_id": "1343794483"
}