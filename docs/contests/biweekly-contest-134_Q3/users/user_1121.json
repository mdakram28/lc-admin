{
    "username": "saikat93ify",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) \n    {\n        vector <int> longest_alternating(colors.size(), 1); \n        for(int i = 1; i < colors.size(); i++)\n        {\n            if(colors[i] != colors[i - 1])\n            {\n                longest_alternating[i] += longest_alternating[i - 1];\n            }\n        }\n        \n        for(int i = 0; i < colors.size(); i++)\n        {\n            if(i < k && longest_alternating[i] == i + 1 && colors[0] != colors.back())\n            {\n                longest_alternating[i] += longest_alternating[colors.size() - 1];\n            }\n        }\n        \n        int alternating_sequences = 0; \n        for(int i = 0; i < colors.size(); i++)\n        {\n            alternating_sequences += (longest_alternating[i] >= k);\n        }\n        \n        return alternating_sequences;\n    }\n};",
    "submit_ts": "1720278284",
    "subm_id": "1311702500"
}