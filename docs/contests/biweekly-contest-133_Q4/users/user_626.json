{
    "username": "RakshitAryan",
    "submission": "class Solution {\npublic:\n    \n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        unordered_map<int, int> m;\n        for (auto x: r)\n        {\n            m[x[0] + 1] = x[1];\n        }\n\n         vector<vector<int>> dp(n + 1, vector<int>(401, 0));\n        dp[0][0] = 1;\n\n        for (int l = 1; l <= n; ++l)\n        {\n            for (int j = 0; j <= 400; ++j)\n            {\n                for (int i = 0; i < l; ++i)\n                {\n\n                    if (j-i >= 0)\n                    {\n                        dp[l][j] = (dp[l][j] + dp[l - 1][j-i]) % 1000000007;\n                    }\n                }\n            }\n\n            if (m.find(l) != m.end())\n            {\n                for (int i = 0; i <= 400; i++)\n                {\n                    if (i !=m[l])\n                    {\n                        dp[l][i] = 0;\n                    }\n                }\n            }\n        }\n\n        int ans = 0;\n        for (int x : dp[n])\n        {\n            ans = (ans + x) % 1000000007;\n        }\n\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": 1719070834.0
}