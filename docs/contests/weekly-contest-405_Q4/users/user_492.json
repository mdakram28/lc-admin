{
    "username": "toryinside",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        trie = {}\n        data = sorted(zip(words, costs), key=itemgetter(1), reverse=True)\n        m = len(data)\n\n        for i in range(m):\n            p = trie\n            for c in data[i][0]:\n                if c not in p:\n                    p[c] = {}\n                p = p[c]\n            p['!'] = min(p.get('!', float('inf')), data[i][1])\n\n        n = len(target)\n\n        @cache\n        def check(i):\n            if i == n:\n                return 0\n\n            answer = float('inf')\n            p = trie\n\n            for ind in range(i, n):\n                c = target[ind]\n                if c not in p:\n                    return answer\n\n                p = p[c]\n                if '!' in p:\n                    answer = min(answer, p['!'] + check(ind + 1))\n\n            return answer\n\n        answer = check(0)\n\n        return answer if answer != float('inf') else -1\n",
    "submit_ts": "1720321670",
    "subm_id": "1312329172"
}