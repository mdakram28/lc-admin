{
    "username": "Okx4SpBLT6",
    "submission": "class Solution {\npublic:\n    template <typename T>\n    struct Fenwick {\n        int n;\n        std::vector<T> a;\n\n        Fenwick(int n = 0) {\n            init(n);\n        }\n\n        void init(int n) {\n            this->n = n;\n            a.assign(n, T());\n        }\n\n        void add(int x, T v) {\n            for (int i = x; i <= n; i += i & -i) {\n                a[i - 1] += v;\n            }\n        }\n\n        T sum(int x) {\n            auto ans = T();\n            for (int i = x; i > 0; i -= i & -i) {\n                ans += a[i - 1];\n            }\n            return ans;\n        }\n\n        T rangeSum(int l, int r) {\n            return sum(r) - sum(l - 1);\n        }\n\n        int kth(T k) {\n            int x = 0;\n            for (int i = 1 << std::__lg(n); i; i /= 2) {\n                if (x + i <= n && k >= a[x + i - 1]) {\n                    x += i;\n                    k -= a[x - 1];\n                }\n            }\n            return x;\n        }\n    };\n\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        Fenwick<int> tr(n + 1);\n        for(int i = 1; i < n - 1; i ++){\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) tr.add(i + 1, 1);\n        }\n        cout << tr.rangeSum(1, n) << endl;\n        vector<int> ans;\n        for(auto i: queries){\n            if(i[0] == 1){\n                int l = i[1] + 1, r = i[2] + 1;\n                if(r - l + 1 <= 2) ans.push_back(0);\n                else{\n                    ans.push_back(tr.rangeSum(l, r) -(tr.rangeSum(l, l) == 1) - (tr.rangeSum(r, r) == 1));\n                }            \n            }\n            else{\n                int idx = i[1], val = i[2];\n                nums[idx] = val;\n                auto change = [&](int x)->void{\n                    if(tr.rangeSum(x, x) == 1){\n                        if(nums[x - 1] <= nums[x - 2] || nums[x - 1] <= nums[x]){\n                            cout << x << endl;\n                            tr.add(x, -1);\n                        }\n                    }\n                    else{\n                        if(nums[x - 1] > nums[x - 2] && nums[x - 1] > nums[x]){\n                            cout << x << endl;\n                            tr.add(x, 1);\n                        }\n                    }  \n                };\n                if(idx == 0){\n                    change(2);\n                }\n                else if(idx == n - 1){\n                    change(n - 1);\n                }\n                else{\n                    change(idx + 1);\n                    if(idx > 1) change(idx);\n                    if(idx < n - 2) change(idx + 2);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509129.0
}