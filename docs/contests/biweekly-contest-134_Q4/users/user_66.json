{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        int has[n + 5][32];\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < 32; j++) {\n                if(i > 0) has[i][j] = has[i - 1][j];\n                else has[i][j] = 0;\n                if(nums[i] & (1 << j)) has[i][j]++;\n            }\n        }\n        auto sum = [&has](int bit, int l, int r) -> int {\n            if(l == 0) return has[r][bit];\n            return has[r][bit] - has[l - 1][bit];\n        };\n        auto sumAll = [&sum](int l, int r) -> int {\n            int ans = 0;\n            for(int i = 0; i < 32; i++) {\n                if(sum(i, l, r) == r - l + 1) ans += (1 << i);\n            }\n            return ans;\n        };\n        \n        int l = 0, r = 0;\n        long long ans = 0;\n        for(int i = 0; i < n; i++) {\n            if(l < i) l = i;\n            int tmp = sumAll(i, l);\n            while(l < n && tmp > k) {\n                l++;\n                if(l < n) tmp &= nums[l];\n            }\n            \n            if(r < l) r = l;\n            int tmp2 = sumAll(i, r);\n            while(r < n && tmp2 >= k) {\n                r++;\n                if(r < n) tmp2 &= nums[r];\n            }\n            //cout << l << \" \" << r << \" \" << tmp << endl;\n            if(tmp < k || l >= n) continue;\n            ans += r - l;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277819",
    "subm_id": "1311681508"
}