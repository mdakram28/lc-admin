{
    "username": "zhong-hua-xun",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        t1 = []\n        t2 = []\n        for i,(x,y) in  enumerate(points):\n            t1.append((x-y,i))\n            t2.append((x+y,i))\n        t1.sort()\n        t2.sort()\n        ans = inf\n        \n        del1 = t1[0][1]\n        l,r = 0,n-1\n        if t2[l][1]==del1: \n            l+=1\n        if t2[r][1]==del1: \n            r-=1\n        cur = max(t1[-1][0]-t1[1][0], t2[r][0]-t2[l][0])\n        ans = min(ans, cur)\n        \n        del2 = t1[-1][1]\n        l,r = 0,n-1\n        if t2[l][1]==del2: \n            l+=1\n        if t2[r][1]==del2: \n            r-=1\n        cur = max(t1[-2][0]-t1[0][0], t2[r][0]-t2[l][0])\n        ans = min(ans, cur)\n        \n        del3 = t2[-1][1]\n        l,r = 0,n-1\n        if t1[l][1]==del3: \n            l+=1\n        if t1[r][1]==del3: \n            r-=1\n        cur = max(t1[r][0]-t1[l][0], t2[-2][0]-t2[0][0])\n        ans = min(ans, cur)\n        \n        del4 = t2[0][1]\n        l,r = 0,n-1\n        if t1[l][1]==del4: \n            l+=1\n        if t1[r][1]==del4: \n            r-=1\n        cur = max(t1[r][0]-t1[l][0], t2[-1][0]-t2[1][0])\n        ans = min(ans, cur)\n        \n        return ans\n    "
}