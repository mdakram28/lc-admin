{
    "username": "whuang369",
    "submission": "class Solution {\npublic:\nint nex[100000][26], cnt;\n  int exist[100000];\n\n    void insert(string s, int l, int val) {\n        int p = 0;\n        for (int i = 0; i < l; i++) {\n            int c = s[i] - 'a';\n            if (!nex[p][c])\n                nex[p][c] = ++cnt; \n            p = nex[p][c];\n        }\n        if (exist[p])\n            exist[p] = min (exist[p], val);\n        else\n            exist[p] = val;\n    }\n\n    bool static cmp (pair <string, int> x, pair <string, int> y) {\n        return x.first.size() < y.first.size();\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        vector <int> dp(target.size() + 1);\n        int m = words.size();\n        for (int i = 0; i < m; i ++) {\n            reverse (words[i].begin(), words[i].end());\n            insert (words[i], words[i].size(), costs[i]);\n        }\n\n        string s = \"\";\n        for (int i = 0; i < target.size(); i ++) {\n            dp[i] = -1;\n            s += target[i];\n            int p = 0, lst = -1;\n            for (int k = 0; k < s.size(); k++) {\n                int c = s[s.size() - k - 1] - 'a';\n                if (!nex[p][c])\n                    break ;\n                p = nex[p][c];\n                if (exist[p] != 0) {\n                    // cout << i << \" \" << k << \"\\n\";\n                    k ++;\n                    if (k != i + 1 && dp[i - k] == -1) {\n                        k --;\n                        continue ;\n                    }\n                    if (lst == -1)\n                        lst = (k == i + 1 ? exist[p] : dp[i - k] + exist[p]);\n                    else\n                        lst = min (lst, (k == i + 1 ? exist[p] : dp[i - k] + exist[p]));\n                    k --;\n                }\n            }\n            dp[i] = lst;\n            // cout << dp[i] << \"\\n\";\n        }\n        return dp[target.size() - 1];\n    }\n};",
    "submit_ts": "1720324795",
    "subm_id": "1312408591"
}