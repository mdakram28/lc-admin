{
    "username": "Pisces311",
    "submission": "struct TrieTreeNode {\n    int son[26], fail, pos, cost = -1;\n};\n\nvector<TrieTreeNode> trie;\n\nvoid insert(string& s, int cost) {\n    int u = 1;\n    for (int i = 0; i < s.size(); i++) {\n        int v = s[i] - 'a';\n        if (!trie[u].son[v]) {\n            trie.push_back(TrieTreeNode());\n            trie[u].son[v] = trie.size() - 1;\n        }\n        u = trie[u].son[v];\n    }\n    if (trie[u].cost == -1 || trie[u].cost > cost) {\n        trie[u].pos = s.size();\n        trie[u].cost = cost;     \n    }\n}\n\nvoid get_fail() {\n    for (int i = 0; i < 26; ++i) trie[0].son[i] = 1;\n    trie[1].fail = 0;\n    queue<int> q;\n    q.push(1);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int i = 0; i < 26; ++i) {\n            int v = trie[u].son[i];\n            int ufail = trie[u].fail;\n            if (v) {\n                trie[v].fail = trie[ufail].son[i];\n                q.push(v);\n            } else {\n                trie[u].son[i] = trie[ufail].son[i];\n            }\n        }\n    }\n}\n\n// \u8fd4\u56de\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\nint query(string& s) {\n    vector<int> dp(s.size(), 2e9);\n    int u = 1;\n    for (int i = 0; i < s.size(); ++i) {\n        int v = s[i] - 'a';\n        int k = trie[u].son[v];\n        while (k > 1) {\n            if (trie[k].pos) {\n                if (trie[k].pos == i + 1) {\n                    dp[i] = min(dp[i], trie[k].cost);\n                } else if (dp[i - trie[k].pos] != 2e9) {\n                    dp[i] = min(dp[i], dp[i - trie[k].pos] + trie[k].cost);\n                }\n            }\n            k = trie[k].fail;\n        }\n        u = trie[u].son[v];\n    }\n    if (dp[s.size() - 1] == 2e9) {\n        return -1;\n    }\n    return dp[s.size() - 1];\n}\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie.clear();\n        trie.push_back(TrieTreeNode());\n        trie.push_back(TrieTreeNode());\n        for (int i = 0; i < words.size(); i++) {\n            insert(words[i], costs[i]);\n        }\n        get_fail();\n        \n        return query(target);\n    }\n};",
    "submit_ts": "1720324373",
    "subm_id": "1312397929"
}