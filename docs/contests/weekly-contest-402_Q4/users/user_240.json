{
    "username": "profsnail",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        cnt = [0] * (4 * n)\n        # \u5c06 idx \u4e0a\u7684\u5143\u7d20\u503c\u589e\u52a0 val\n        def add(o: int, l: int, r: int, idx: int, val: int) -> None:\n            if l == r:\n                cnt[o] += val\n                return\n            m = (l + r) // 2\n            if idx <= m: add(o * 2, l, m, idx, val)\n            else: add(o * 2 + 1, m + 1, r, idx, val)\n            cnt[o] = cnt[o * 2] + cnt[o * 2 + 1]\n\n        # \u8fd4\u56de\u533a\u95f4 [L,R] \u5185\u7684\u5143\u7d20\u548c\n        def query_sum(o: int, l: int, r: int, L: int, R: int) -> int:\n            if L <= l and r <= R: return cnt[o]\n            sum = 0\n            m = (l + r) // 2\n            if L <= m: sum += query_sum(o * 2, l, m, L, R)\n            if R > m: sum += query_sum(o * 2 + 1, m + 1, r, L, R)\n            return sum\n\n        flags = [False] * n\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                add(1, 0, n-1, i, 1)\n                flags[i] = True\n        \n        \n        def check(i):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                return True\n            return False\n        \n        ans = []\n        for op, l, r in queries:\n            if op == 1:\n                tmp = query_sum(1, 0, n-1, l, r) - int(flags[l])\n                if l != r:\n                    tmp -= int(flags[r])\n                ans.append(tmp)\n            else:\n                i, v = l, r\n                nums[i] = v\n                for j in [i-1, i, i+1]:\n                    if j >= 1 and j < n - 1:\n                        pre = flags[j]\n                        cur = check(j)\n                        flags[j] = cur\n                        # print(j, pre, cur)\n                        if (pre) and (not cur):\n                            add(1, 0, n-1, j, -1)\n                        elif (not pre) and (cur):\n                            add(1, 0, n-1, j, 1)\n        # print(' ============ ')\n        return ans",
    "submit_ts": 1718506930.0
}