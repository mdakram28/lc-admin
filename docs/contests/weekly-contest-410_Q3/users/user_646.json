{
    "username": "Balajijr07",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int MOD = 1000000007;\n\n        // dp[x][y] -> Number of ways to have arr1[i] = x and arr2[i] = y at position i\n        int[][] dp = new int[51][51];\n        \n        // Initialize the dp for the first element\n        for (int x = 0; x <= nums[0]; x++) {\n            int y = nums[0] - x;\n            if (y >= 0 && y <= 50) {\n                dp[x][y] = 1;\n            }\n        }\n\n        // Transition\n        for (int i = 1; i < n; i++) {\n            int[][] newDp = new int[51][51];\n            int[][] prefixSum = new int[51][51];\n\n            // Compute prefix sums for previous dp\n            for (int x = 0; x <= 50; x++) {\n                for (int y = 50; y >= 0; y--) {\n                    prefixSum[x][y] = dp[x][y];\n                    if (y < 50) {\n                        prefixSum[x][y] = (prefixSum[x][y] + prefixSum[x][y + 1]) % MOD;\n                    }\n                }\n            }\n\n            // Update newDp using prefix sums\n            for (int x = 0; x <= nums[i]; x++) {\n                int y = nums[i] - x;\n                if (y >= 0 && y <= 50) {\n                    for (int xPrev = 0; xPrev <= x; xPrev++) {\n                        newDp[x][y] = (newDp[x][y] + prefixSum[xPrev][y]) % MOD;\n                    }\n                }\n            }\n\n            dp = newDp; // Move to the next state\n        }\n\n        // Calculate the final result\n        int result = 0;\n        for (int x = 0; x <= 50; x++) {\n            for (int y = 0; y <= 50; y++) {\n                result = (result + dp[x][y]) % MOD;\n            }\n        }\n\n        return result;\n    }\n}\n",
    "submit_ts": "1723343829",
    "subm_id": "1351519141"
}