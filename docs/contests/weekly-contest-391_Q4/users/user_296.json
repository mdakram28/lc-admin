{
    "username": "hong-jie-v",
    "submission": "class Solution {\npublic:\n    int n;\n    int find_max(vector<int>& v){\n        int m = 0;\n        for(int i = 1; i < n; i++){\n            if(v[i] > v[m]){\n                m = i;\n            }\n        }\n        return m;\n    }\n    int find_min(vector<int>& v){\n        int m = 0;\n        for(int i = 1; i < n; i++){\n            if(v[i] < v[m]){\n                m = i;\n            }\n        }\n        return m;\n    }\n    int cal(vector<vector<int>>& points, int loc){\n        vector<int> sum, diff;\n        for(int i = 0; i < n; i++){\n            if(i == loc)\n                continue;\n            sum.push_back(points[i][0] + points[i][1]);\n            diff.push_back(points[i][0] - points[i][1]);\n        }\n        int maxSum = *max_element(sum.begin(), sum.end());\n        int minSum = *min_element(sum.begin(), sum.end());\n        int maxDiff = *max_element(diff.begin(), diff.end());\n        int minDiff = *min_element(diff.begin(), diff.end());\n\n        return max(maxSum - minSum, maxDiff - minDiff);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        n = points.size();\n        vector<int> sum, diff;\n        for(int i = 0; i < n; i++){\n            sum.push_back(points[i][0] + points[i][1]);\n            diff.push_back(points[i][0] - points[i][1]);\n        }\n        int sum_max = find_max(sum);\n        int sum_min = find_min(sum);\n        int diff_max = find_max(diff);\n        int diff_min = find_min(diff);\n        int loc1, loc2;\n        if(sum[sum_max] - sum[sum_min] > diff[diff_max] - diff[diff_min]){\n            loc1 = sum_max;\n            loc2 = sum_min;\n        }else{\n            loc1 = diff_max;\n            loc2 = diff_min;\n        }\n        return min(cal(points, loc1), cal(points, loc2));\n        \n    }\n};"
}