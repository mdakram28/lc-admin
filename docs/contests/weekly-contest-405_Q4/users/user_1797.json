{
    "username": "k487237",
    "submission": "class Tree {\npublic:\n    Tree* child[26];\n    long long cost = INT_MAX;\n    \n    void add(string& word, long long& val) {\n        Tree* root = this;\n        for (auto& c : word) {\n            if (root->child[c - 'a'] == nullptr) {\n                root->child[c - 'a'] = new Tree();\n            }\n            root = root->child[c - 'a'];\n        }\n        root->cost = min(root->cost, val);\n    }\n    \n    vector<pair<int, int>> search(string& word, int idx) {\n        Tree* root = this;\n        int n = word.size();\n        vector<pair<int, int>> pos;\n        for (int i = idx; i < n; i++) {\n            if (root->child[word[i] - 'a'] == nullptr) {\n                break;\n            }\n            root = root->child[word[i] - 'a'];\n            if (root->cost != INT_MAX) {\n                pos.push_back({root->cost, i - idx + 1});\n            }\n        }\n        return pos;\n    }\n};\n\nclass Solution {\npublic:\n    long long dfs(string& target, Tree* tree, vector<long long>& dp, int idx) {\n        if (idx >= target.size()) {\n            return 0;\n        }\n        if (dp[idx] != -1) {\n            return dp[idx];\n        }\n        long long res = INT_MAX, n = target.size();\n        Tree* root = tree;\n        for (int i = idx; i < n; i++) {\n            if (root->child[target[i] - 'a'] == nullptr) {\n                break;\n            }\n            root = root->child[target[i] - 'a'];\n            if (root->cost != INT_MAX) {\n                res = min(res, root->cost + dfs(target, tree, dp, i + 1));\n            }\n        }\n        dp[idx] = res;\n        return res;\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int t_len = target.size(), n = words.size();\n        vector<long long> dp(t_len + 1, -1);\n        Tree* tree = new Tree();\n        for (int i = 0; i < n; i++) {\n            long long val = costs[i];\n            tree->add(words[i], val);\n        }\n        dfs(target, tree, dp, 0);\n        return dp[0] == INT_MAX ? -1 : dp[0];\n    }\n};\n\n/*\n\"abcdef\"\n[\"abdef\",\"abc\",\"d\",\"def\",\"ef\"]\n[100,1,1,10,5]\n\"aaaa\"\n[\"z\",\"zz\",\"zzz\"]\n[1,10,100]\n\"wvgafw\"\n[\"wvgafw\",\"w\"]\n[1,2]\n\n7\n-1\n1\n23797\n*/",
    "submit_ts": "1720323916",
    "subm_id": "1312387169"
}