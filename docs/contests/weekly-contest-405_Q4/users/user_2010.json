{
    "username": "em_priyank",
    "submission": "struct TrieNode {\n    unordered_map<char,TrieNode*> mp;\n    long long cost;\n    TrieNode(){\n        cost=LLONG_MAX;\n    }\n};\n\nclass Solution {\npublic:\n\n    void insert(TrieNode* root, const string& word, long long cost) {\n        TrieNode* node=root;\n        for (char c : word) {\n            if (node->mp.find(c)==node->mp.end()) {\n                node->mp[c]=new TrieNode();\n            }\n            node=node->mp[c];\n        }\n        node->cost=min(node->cost,cost);\n    }\n\n    long long geti(string& s, long long indi, vector<long long>& dp,TrieNode* root) {\n\n        if (indi==s.size()) return 0;\n        if (dp[indi]!=-1) return dp[indi];\n\n        TrieNode* node=root;\n        long long mini=LLONG_MAX;\n        for (long long i=indi;i<s.size();i++) {\n\n            if (node->mp.end()==node->mp.find(s[i])) \n                break;\n\n            node=node->mp[s[i]];\n            if (node->cost!=LLONG_MAX) {\n\n                long long result=geti(s,i+1,dp,root);\n                if (result!=LLONG_MAX) {\n                    mini=min(mini,result+node->cost);\n                }\n            }\n        }\n\n        return dp[indi]=mini;\n    }\n    \n    // void buildMap(vector<string>& A, vector<int>& B) {\n    //     for (int i = 0; i < A.size(); i++) {\n    //         if (wordCostMap.find(A[i]) == wordCostMap.end()) {\n    //             wordCostMap[A[i]] = B[i];\n    //         } else {\n    //             wordCostMap[A[i]] = min(wordCostMap[A[i]], B[i]);\n    //         }\n    //     }\n    // }\n\n    int minimumCost(string s, vector<string>& A, vector<int>& B) {\n\n\n        \n        TrieNode* root;\n        root=new TrieNode();\n        for (long long i=0;i<A.size();i++) {\n            insert(root,A[i],B[i]);\n        }\n    \n        vector<long long> dp(s.size(),-1);\n        long long ans=geti(s,0,dp,root);\n    \n        if(ans==LLONG_MAX)return -1;\n        return ans;\n    \n    }\n};",
    "submit_ts": "1720324661",
    "subm_id": "1312404972"
}