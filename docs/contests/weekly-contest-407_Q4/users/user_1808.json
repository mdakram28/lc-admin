{
    "username": "kammaron",
    "submission": "class Solution {\npublic:\n    long long recur(vector<int>& v, int beg, int end)\n    {\n        // cout << beg << ',' << end << endl;\n        //for(auto i:v) cout << i; cout << endl;\n        if(beg == end) return 0;\n        long long ret = 0;\n        int flag = v[beg];\n        int cnt = 1;\n        int m = abs(flag);\n        for(int i = beg+1; i < end; i++)\n        {\n            if((v[i] > 0 && flag < 0)\n                || (v[i] < 0 && flag > 0)\n                || flag == 0\n                || v[i] == 0)\n            {\n                //cout << i << cnt << m << endl;\n                if (flag > 0) m = -m;\n                if(flag != 0)\n                {\n                    for(int j = i-cnt; j < i ; j++)\n                    {\n                        v[j] += m; \n                    }\n                }\n                ret += abs(m);\n                ret += recur(v, i-cnt, i);\n                flag = v[i];\n                cnt = 1;\n                m = abs(v[i]);\n            }\n            else\n            {\n                cnt++;\n                m = min(m, abs(v[i]));\n            }\n        }\n        if(flag != 0)\n        {\n            if (flag > 0) m = -m;\n            for(int j = end - cnt; j < end; j++)\n            {\n                v[j] += m; \n            }\n            ret += abs(m);\n            ret += recur(v, end-cnt, end);\n        }\n        return ret;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> vec(nums.size(), 0);\n        for(int i = 0 ; i < nums.size(); i++)\n        {\n            vec[i] = target[i] - nums[i];\n        }\n        return recur(vec, 0 , vec.size());\n    }\n};",
    "submit_ts": "1721532434",
    "subm_id": "548392360"
}