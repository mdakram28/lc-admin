{
    "username": "kYLSxm4fCT",
    "submission": "class TN {\npublic:\n    unordered_map<char, TN*> ch;\n    int ct;\n    \n    TN() : ct(INT_MAX) {}\n};\n\nclass Tr {\npublic:\n    TN* root;\n    \n    Tr() {\n        root = new TN();\n    }\n    \n    void keep(const string& wd, int ct) {\n        TN* nd = root;\n        for (char c : wd) {\n            if (!nd->ch.count(c)) {\n                nd->ch[c] = new TN();\n            }\n            nd = nd->ch[c];\n        }\n        nd->ct = min(nd->ct, ct);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        Tr T;\n        for (int i = 0; i < words.size(); ++i) {\n            T.keep(words[i], costs[i]);\n        }\n        \n        vector<int> table(n + 1, INT_MAX);\n        table[0] = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (table[i] == INT_MAX) continue;\n            TN* node = T.root;\n            for (int j = i; j < n; ++j) {\n                if (!node->ch.count(target[j])) break;\n                node = node->ch[target[j]];\n                if (node->ct != INT_MAX) {\n                    table[j + 1] = min(table[j + 1], table[i] + node->ct);\n                }\n            }\n        }\n        \n        return table[n] == INT_MAX ? -1 : table[n];\n    }\n};",
    "submit_ts": "1720323226",
    "subm_id": "1312370418"
}