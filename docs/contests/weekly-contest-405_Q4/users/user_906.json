{
    "username": "rbi89",
    "submission": "class Solution {\n    class Node {\n        int cost = -1;\n        Node[] children = new Node[26];\n        \n        int idx(char c) {\n            return c - 'a';\n        }\n        \n        Node get(char c) {\n            return children[idx(c)];\n        }\n        \n        Node add(char c) {\n            if (get(c) == null) {\n                children[idx(c)] = new Node();\n            }   \n            \n            return get(c);\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Node root = new Node();\n        \n        for (int i = 0; i < words.length; i++) {\n            String w = words[i];\n            int cost = costs[i];\n            Node curr = root;\n            \n            for (char c : w.toCharArray()) {\n                curr = curr.add(c);\n            }\n            \n            curr.cost = curr.cost == -1 ? cost : Math.min(cost, curr.cost);\n        }\n        \n        return min(target, 0, root, new int[target.length()]);\n    }\n    \n    int min(String target, int idx, Node root, int[] dp) {\n        if (idx == target.length()) {\n            return 0;\n        }\n        \n        if (dp[idx] == 0) {\n            int min = Integer.MAX_VALUE;\n            Node curr = root;\n            \n            for (int i = idx; i < target.length(); i++) {\n                curr = curr.get(target.charAt(i));\n                \n                if (curr == null) {\n                    break;\n                }\n                \n                if (curr.cost != -1) {\n                    int cost = min(target, i + 1, root, dp);\n                    \n                    if (cost != -1) {\n                        min = Math.min(min, cost + curr.cost);\n                    }\n                }\n            }\n            \n            dp[idx] = min == Integer.MAX_VALUE ? -1 : min;\n        }\n        \n        return dp[idx];\n    }\n}",
    "submit_ts": "1720322762",
    "subm_id": "1312358462"
}