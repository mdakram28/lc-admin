{
    "username": "Romulus28",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors, k):\n        numberOfTiles = len(colors)\n        alternatingGroupCount = 0\n\n        if k == 1:\n            # single tile is grp\n            return numberOfTiles\n\n        currentAlternatingLength = 1\n        index = 1\n        while index < numberOfTiles + k - 1:\n            currentIndex = index\n            previousIndex = index - 1\n\n            # Circukar indexing\n            if currentIndex >= numberOfTiles:\n                currentIndex -= numberOfTiles\n            if previousIndex >= numberOfTiles:\n                previousIndex -= numberOfTiles\n\n            if colors[currentIndex] != colors[previousIndex]:\n                currentAlternatingLength += 1\n            else:\n                currentAlternatingLength = 1\n\n            # valid alternating group of length k\n            if currentAlternatingLength >= k:\n                alternatingGroupCount += 1\n\n            index += 1\n\n        return alternatingGroupCount\n",
    "submit_ts": "1720280095",
    "subm_id": "1311776719"
}