{
    "username": "Tinky1224",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        def get_nums(bits, length):\n            res = 0\n            for i in range(32):\n                if bits[i] == length:\n                    res |= (1 << i)\n            return res\n        c1, c2 = [0]*32, [0]*32\n        p1, p2 = 0, 0\n        n = len(nums)\n        res = 0\n        for r, num in enumerate(nums):\n            if num & k != k:\n                c1, c2 = [0]*32, [0]*32\n                p1, p2 = r+1, r+1\n                continue\n            for i in range(32):\n                if (num >> i) & 1:\n                    c1[i] += 1\n                    c2[i] += 1\n            while get_nums(c2, r - p2 + 1) == k:\n                for i in range(32):\n                    if (nums[p2] >> i) & 1:\n                        c2[i] -= 1\n                p2 += 1\n            if get_nums(c1, r - p1 + 1) == k:\n                res += p2 - p1\n        return res",
    "submit_ts": "1720277659",
    "subm_id": "1311674023"
}