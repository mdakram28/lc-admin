{
    "username": "Nishant_Khandelwal",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        ArrayList<Pair> arr = new ArrayList<>();\n        for(int i=0; i<m-1; i++) arr.add(new Pair(horizontalCut[i], 0));\n        for(int i=0; i<n-1; i++) arr.add(new Pair(verticalCut[i], 1));\n\n        Collections.sort(arr, (a, b)-> b.f-a.f);\n        int h = 1;\n        int v = 1;\n        long ans = 0;\n        for(int i=0; i<arr.size(); i++){\n            long cost = arr.get(i).f;\n            if(arr.get(i).s==0){\n                ans += cost*v;\n                h++;\n            }\n            else{\n                ans+= cost*h;\n                v++;\n            }\n        }\n        return ans;\n    }\n}\n\nclass Pair{\n    int f;\n    int s;\n    Pair(int f, int s){\n        this.f = f;\n        this.s = s;\n    }\n}",
    "submit_ts": "1720926008",
    "subm_id": "1320273101"
}