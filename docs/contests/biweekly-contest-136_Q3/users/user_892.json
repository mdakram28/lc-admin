{
    "username": "hongyili",
    "submission": "class Solution:\n    def helper0(self, exists, change):\n        candi = exists - change\n        assert candi >= 0\n        assert candi % 4 in {0, 2}\n        if candi % 4 == 0:\n            return 0\n        if change >= 1:\n            return 0\n        return 2\n    \n    def helper_1d(self, l):\n        exists = sum(l)\n        stt = 0\n        end = len(l) - 1\n        change = 0\n        while stt < end:\n            if l[stt] != l[end]:\n                change += 1\n            stt += 1\n            end -= 1\n        mid = 0\n        if stt == end and l[stt] == 1:\n            mid = 1\n        add = self.helper0(exists-mid, change) + mid\n        return change + add\n    \n    def helper_2d(self, l1, l2):\n        #print(l1, l2)\n        \n        assert len(l1) % 2 > 0\n        assert len(l2) % 2 > 0\n        mid = l1[len(l1)//2]\n        assert mid == l2[len(l2)//2]\n        exists = sum(l1) + sum(l2)\n        if mid > 0:\n            exists -= 2 * mid\n        change = 0\n        stt = 0\n        end = len(l1) - 1\n        while stt < end:\n            if l1[stt] != l1[end]:\n                change += 1\n            stt += 1\n            end -= 1\n        stt = 0\n        end = len(l2) - 1\n        while stt < end:\n            if l2[stt] != l2[end]:\n                change += 1\n            stt += 1\n            end -= 1\n        add = self.helper0(exists, change) + mid\n        return change + add\n        \n        \n        \n        \n        \n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        rst = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                e = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j]\n                rst += min(e, 4-e)\n        if m % 2 == 1:\n            if n % 2 == 1:\n                rst += self.helper_2d(grid[m//2], [grid[i][n//2] for i in range(m)])\n            else:\n                rst += self.helper_1d(grid[m//2])\n        elif n % 2 == 1:\n            #print('haa')\n            rst += self.helper_1d([grid[i][n//2] for i in range(m)])\n        return rst\n        \n        \n        \n        ",
    "submit_ts": "1722698025",
    "subm_id": "1343167192"
}