{
    "username": "luo-yu-1x",
    "submission": "\n\nconst int N = 1e5 + 5;\ntypedef long long LL;\nconst int p = INT_MAX;\nint tot, num;\nint n, m, r, t, cases = 0;\n\nint w[N] = {}, a[N] = {}, sum1[N * 4] = {}, sum2[N * 4] = {};\nint sum3[N * 4] = {}, lazy_mul[N * 4] = {}, lazy_add[N * 4] = {}; // w[i]=j\u8868\u793a\u65f6\u95f4\u6233\u4e3ai\u7684\u70b9\u7684\u503c\u4e3aj\uff0ca[]\u8f93\u5165\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\uff0cdat\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u70b9\u6743\u503c\uff0clazy\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u70b9\u7684\u61d2\u6807\u8bb0\nvector<int> mp[N];\n\nvoid solve(int rt, int len, int a, int b)\n{ // a\u4e3aadd b\u4e3amul\n    lazy_mul[rt] = 1ll * lazy_mul[rt] * b % p;\n    lazy_add[rt] = 1ll * lazy_add[rt] * b % p;\n    lazy_add[rt] = ((lazy_add[rt] + a) % p + p) % p;\n    if (b != 1)\n    { // \u5148\u4e58\u540e\u52a0\n        sum1[rt] = 1ll * sum1[rt] * b % p;\n        sum2[rt] = (1ll * sum2[rt] * b % p) * b % p;\n        sum3[rt] = ((1ll * sum3[rt] * b % p) * b % p) * b % p;\n    }\n    if (a != 0)\n    {\n        int a2 = 1ll * a * a % p, a3 = 1ll * a2 * a % p;\n        sum3[rt] = ((sum3[rt] + (LL)len * a3 % p) + p) % p;\n        sum3[rt] = ((sum3[rt] + 3ll * (LL)sum2[rt] % p * a % p) + p) % p;\n        sum3[rt] = ((sum3[rt] + 3ll * (LL)sum1[rt] % p * a2 % p) + p) % p;\n        sum2[rt] = ((sum2[rt] + 2ll * (LL)sum1[rt] % p * a % p) + p) % p;\n        sum2[rt] = ((sum2[rt] + (LL)len * a2 % p) + p) % p;\n        sum1[rt] = ((sum1[rt] + (LL)len * a % p) + p) % p;\n    }\n}\n\nvoid pushup(int rt)\n{\n    sum1[rt] = (sum1[rt << 1] + sum1[rt << 1 | 1]) % p;\n    sum2[rt] = (sum2[rt << 1] + sum2[rt << 1 | 1]) % p;\n    sum3[rt] = (sum3[rt << 1] + sum3[rt << 1 | 1]) % p;\n}\n\n// \u5efa\u7ebf\u6bb5\u6811\uff0crt\u4e3a\u6839\uff0cl\u4e3art\u70b9\u7ba1\u8f96\u7684\u5de6\u8fb9\u754c\uff0c r\u4e3art\u70b9\u7ba1\u8f96\u7684\u6709\u8fb9\u754c\nvoid build(int rt, int l, int r)\n{\n    lazy_add[rt] = 0;\n    lazy_mul[rt] = 1;\n    if (l == r)\n    {\n        int temp = a[l];\n        sum1[rt] = temp;\n        sum2[rt] = (1ll * sum1[rt] * sum1[rt]) % p;\n        sum3[rt] = (1ll * sum1[rt] * sum2[rt]) % p;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(rt << 1, l, mid);\n    build(rt << 1 | 1, mid + 1, r);\n    pushup(rt);\n}\n\n// \u4e0b\u4f20\nvoid pushdown(int rt, int l, int r)\n{\n    int mid = (l + r) >> 1;\n    solve(rt << 1, mid - l + 1, lazy_add[rt], lazy_mul[rt]);\n    solve(rt << 1 | 1, r - mid, lazy_add[rt], lazy_mul[rt]);\n    lazy_add[rt] = 0;\n    lazy_mul[rt] = 1;\n}\n\n// rt\u4e3a\u6839\uff0cl\u4e3art\u70b9\u7ba1\u8f96\u7684\u5de6\u8fb9\u754c\uff0c r\u4e3art\u70b9\u7ba1\u8f96\u7684\u6709\u8fb9\u754c\uff0c L\u4e3a\u9700\u8981\u4fee\u6539\u7684\u5de6\u533a\u95f4\uff0cR\u4e3a\u9700\u8981\u4fee\u6539\u7684\u53f3\u533a\u95f4\nvoid modify(int rt, int l, int r, int L, int R, int a, int b)\n{\n    if (L <= l && r <= R)\n    {\n        solve(rt, r - l + 1, a, b);\n        return;\n    }\n    pushdown(rt, l, r);\n    int mid = (l + r) >> 1;\n    if (L <= mid)\n        modify(rt << 1, l, mid, L, R, a, b);\n    if (mid < R)\n        modify(rt << 1 | 1, mid + 1, r, L, R, a, b);\n    pushup(rt);\n}\n\n// rt\u4e3a\u6839\uff0cl\u4e3art\u70b9\u7ba1\u8f96\u7684\u5de6\u8fb9\u754c\uff0c r\u4e3art\u70b9\u7ba1\u8f96\u7684\u6709\u8fb9\u754c\uff0c L\u4e3a\u9700\u8981\u67e5\u8be2\u7684\u5de6\u533a\u95f4\uff0cR\u4e3a\u67e5\u8be2\u7684\u53f3\u533a\u95f4,k\u4ee3\u8868\u67e5\u8be2\u7684\u662fk\u6b21\u65b9\u548c\nint query(int rt, int l, int r, int L, int R, int k)\n{\n    if (L <= l && r <= R)\n    {\n        if (k == 1)\n            return sum1[rt];\n        if (k == 2)\n            return sum2[rt];\n        if (k == 3)\n            return sum3[rt];\n    }\n    pushdown(rt, l, r);\n    int mid = (l + r) >> 1;\n    int ans = 0;\n    if (L <= mid)\n        ans += query(rt << 1, l, mid, L, R, k), ans %= p;\n    if (mid < R)\n        ans += query(rt << 1 | 1, mid + 1, r, L, R, k), ans %= p;\n    pushup(rt);\n    return ans;\n}\nclass Solution\n{\npublic:\n    const static int maxn = 1e5 + 10;\n    const static int maxm = 1e5 + 10;\n    const static long long mod = 1e9 + 7;\n    const long long INF_LL = 0x3f3f3f3f3f3f3f3f;\n    const int INF = 0x3f3f3f3f;\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>> &queries)\n    {\n        int m = queries.size();\n        vector<int> ans(m);\n        for (int i = 1; i <= n; ++i)\n            a[i] = 1;\n        build(1, 1, n);\n\n        for (int i = 0; i < m; ++i)\n        {\n            if (queries[i][0] + 1 != queries[i][1])\n            {\n                modify(1, 1, n, queries[i][0] + 1 + 1, queries[i][1] + 1 - 1, 0, 0);\n            }\n            ans[i] = query(1, 1, n, 1, n, 1) - 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742338",
    "subm_id": "552344002"
}