{
    "username": "VILLANOVA_ECON",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        \n        new_arr = []\n        \n        for zeb in itertools.groupby(nums):\n            new_arr.append([zeb[0],len(list(zeb[1]))])\n        \n        \n        last = {}\n        next_value = {}\n        for i in range(len(new_arr)-1,-1,-1):\n            if new_arr[i][0] in last:\n                next_value[i] = last[new_arr[i][0]]\n            last[new_arr[i][0]] = i\n        \n        \n\n        @lru_cache(None)\n        def recur_fn(i,k,condition):\n            if i == len(new_arr) or k == 0:\n                return 0\n            else:\n                res = 0\n                if condition:\n                    res = max(res,recur_fn(i+1,k-1,False))\n                else:\n                    res = max(res,recur_fn(i+1,k,False))\n                res = max(res,new_arr[i][1]  + recur_fn(i+1,k-1,False))\n                if i in next_value:\n                    res = max(res,new_arr[i][1]  + recur_fn(next_value[i],k,True))\n                    \n                \n                return res\n        result = recur_fn(0,k+1,False)\n        recur_fn.cache_clear()\n        return result",
    "submit_ts": 1717858542.0
}