{
    "username": "jeff-o81",
    "submission": "class Solution:\n    def dfs1(self, now_node, before_node):\n        max_ans = 0\n        for item in self.heads[now_node]:\n            if item == before_node:\n                self.partial_answer[now_node].append(0)\n                continue\n            else:\n                ans = self.dfs1(item, now_node)\n                self.partial_answer[now_node].append(ans)\n                max_ans = max(max_ans, ans)\n        # print(now_node, before_node, max_ans, max_ans + 1 + (now_node % 2 == 0))\n        return max_ans + 1 + (now_node % 2 == 0)\n\n    def dfs2(self, now_node, before_node, upper_dist):\n        # calc self answer\n        child_dist = max(self.partial_answer[now_node])\n        self.answer[now_node] = max(child_dist, upper_dist)\n\n        # update upper dist\n        delta_dist = 1 + (now_node % 2 == 0)\n        max_child_dist = 0\n        second_max_child_dist = 0\n        max_child_id = 0\n        for i in range(len(self.heads[now_node])):\n            next_node = self.heads[now_node][i]\n            if self.partial_answer[now_node][i] > max_child_dist:\n                second_max_child_dist = max_child_dist\n                max_child_dist = self.partial_answer[now_node][i]\n                max_child_id = next_node\n            elif self.partial_answer[now_node][i] > second_max_child_dist:\n                second_max_child_dist = self.partial_answer[now_node][i]\n        # print('ah', now_node, max_child_dist, second_max_child_dist, max_child_id)\n        # push to child\n        for item in self.heads[now_node]:\n            if item == before_node:\n                pass\n            elif item == max_child_id:\n                self.dfs2(item, now_node, max(upper_dist, second_max_child_dist) + delta_dist)\n            else:\n                self.dfs2(item, now_node, max(upper_dist, max_child_dist) + delta_dist)\n\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        self.heads = {i : [] for i in range(len(edges) + 1)}\n        self.partial_answer = {i : [] for i in range(len(edges) + 1)}\n        self.answer = {i : [] for i in range(len(edges) + 1)}\n        for item in edges:\n            self.heads[item[0]].append(item[1])\n            self.heads[item[1]].append(item[0])\n        self.dfs1(0, -1)\n        self.dfs2(0, -1, 0)\n        ret = []\n        for i in range(len(edges) + 1):\n            ret.append(self.answer[i])\n        return ret",
    "submit_ts": "1722700225",
    "subm_id": "552278937"
}