{
    "username": "_Ashu1729",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm> // for abs function\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int maxChange) {\n        map<int, vector<int>> diffToMaxChange;\n        vector<int> maxChanges;\n        int n = nums.size();\n        \n      \n        for (int i = 0; i < n / 2; i++) {\n            int num1 = nums[i], num2 = nums[n - i - 1];\n            int absoluteDiff = abs(num1 - num2);\n            int maxAllowedChange = max({num1, num2, maxChange - num1, maxChange - num2});\n            diffToMaxChange[absoluteDiff].push_back(maxAllowedChange);\n            maxChanges.push_back(maxAllowedChange);\n        }\n        \n        \n        sort(maxChanges.begin(), maxChanges.end());\n        \n        int minChangesNeeded = n;\n        \n   \n        for (auto& entry : diffToMaxChange) {\n            int diff = entry.first;\n            int totalChanges = lower_bound(maxChanges.begin(), maxChanges.end(), diff) - maxChanges.begin();\n            totalChanges = totalChanges * 2 + (n / 2 - totalChanges); // Total number of changes needed\n            \n            for (auto& maxChange : entry.second) {\n                if (maxChange < diff) {\n                    totalChanges -= 2;\n                } else {\n                    totalChanges -= 1;\n                }\n            }\n            \n            minChangesNeeded = min(minChangesNeeded, totalChanges);\n        }\n        \n        return minChangesNeeded;\n    }\n};\n",
    "submit_ts": "1721488960",
    "subm_id": "1327438455"
}