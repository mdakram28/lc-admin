{
    "username": "John_chu",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for(int i = 0; i < nums.length; i++){\n            diff[i] = nums[i] - target[i];\n        }\n        long ans = 0;\n        int i = 0, j = 0;\n        boolean isPos = false;\n        while(i < n){\n            isPos = (diff[i] >= 0);\n            j = i + 1;\n            while(j < n && (diff[j] >= 0) == isPos){\n                if(Math.abs(diff[j]) < Math.abs(diff[j-1])){\n                    ans += Math.abs(diff[j - 1]) - Math.abs(diff[j]);\n                } \n                j++;\n            }\n            ans +=  Math.abs(diff[j-1]);\n            i = j;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721532005",
    "subm_id": "1327975284"
}