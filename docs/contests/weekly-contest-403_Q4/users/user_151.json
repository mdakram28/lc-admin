{
    "username": "meng-de-dian-di",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int ans = m * n;\n        //\u6a2a\n        for (int i = 1; i < m; i++) {\n            //\u6a2a\u6a2a\n            for (int j = i + 1; j < m; j++) {\n                int s1 = calc(grid, 0, i - 1, 0, n - 1);\n                int s2 = calc(grid, i, j - 1, 0, n - 1);\n                int s3 = calc(grid, j, m - 1, 0, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n            }\n            //\u6a2a\u4e0a\u7eb5\n            for (int j = 1; j < n; j++) {\n                int s1 = calc(grid, 0, i - 1, 0, j - 1);\n                int s2 = calc(grid, 0, i - 1, j, n - 1);\n                int s3 = calc(grid, i, m - 1, 0, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n\n            }\n            //\u6a2a\u4e0b\u7eb5\n            for (int j = 1; j < n; j++) {\n                int s1 = calc(grid, 0, i - 1, 0, n - 1);\n                int s2 = calc(grid, i, m - 1, 0, j - 1);\n                int s3 = calc(grid, i, m - 1, j, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n            }\n        }\n\n        //\u7eb5\n        for (int i = 1; i < n; i++) {\n            //\u7eb5\u7eb5\n            for (int j = i + 1; j < n; j++) {\n                int s1 = calc(grid, 0, m - 1, 0, i - 1);\n                int s2 = calc(grid, 0, m - 1, i, j - 1);\n                int s3 = calc(grid, 0, m - 1, j, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n\n            }\n\n            //\u7eb5\u5de6\u6a2a\n            for (int j = 1; j < m; j++) {\n                int s1 = calc(grid, 0, j - 1, 0, i - 1);\n                int s2 = calc(grid, j, m - 1, 0, i - 1);\n                int s3 = calc(grid, 0, m - 1, i, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n\n            }\n\n            //\u7eb5\u53f3\u6a2a\n            for (int j = 1; j < m; j++) {\n                int s1 = calc(grid, 0, m - 1, 0, i - 1);\n                int s2 = calc(grid, 0, j - 1, i, n - 1);\n                int s3 = calc(grid, j, m - 1, i, n - 1);\n                if (s1 > 0 && s2 > 0 && s3 > 0) ans = Math.min(ans, s1 + s2 + s3);\n\n            }\n        }\n\n        return ans;\n    }\n\n    int calc(int[][] grid, int top, int button, int left, int right) {\n        boolean has = false;\n        int mmx = top, mmn = button, nmx = left, nmn = right;\n        for (int i = top; i <= button; i++) {\n            for (int j = left; j <= right; j++) {\n                if (grid[i][j] == 1) {\n                    mmn = Math.min(mmn, i);\n                    mmx = Math.max(mmx, i);\n                    nmn = Math.min(nmn, j);\n                    nmx = Math.max(nmx, j);\n                    has = true;\n                }\n            }\n        }\n        if (!has) return -1;\n        return (mmx - mmn + 1) * (nmx - nmn + 1);\n    }\n}",
    "submit_ts": 1719112783.0
}