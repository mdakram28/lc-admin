{
    "username": "rahulmittall",
    "submission": "class Solution {\npublic:\n    \n    // 0 - 2\n    // 1 - 4\n    // 2 - 2\n    // 3 - 2\n    // 4 - 1\n    // \n    unordered_map<long, unordered_map<int, unordered_map<int,int>>> dp;\n    \n    int solve(long i,int k,int step,int canBack){\n        // if(i==k) return 1;\n        if(i>k+1) return 0;\n        // if(dp.count(i) && dp[i].count(step) && dp[i].count(canBack)) return dp[i][step][canBack];\n        \n        int ways = 0;\n        if(i==k) ways++;\n        if(canBack && i>0){\n            ways += solve(i-1,k,step,0);\n        }\n        ways+=solve(i+(1ll<<step),k,step+1,1);\n        return dp[i][step][canBack]=ways;\n    }\n    \n    int nCr(int n,int r){\n        long sum = 1;\n        for(int i = 1; i <= r; i++){\n            sum = 1ll*sum * (n - r + i) / i;\n        }\n        return sum;\n    }\n    \n    int waysToReachStair(int k) {\n        // if(k==0) return 2;\n        // if(k==1) return 4;\n        // cout<<nCr(2,0);\n        // return solve(1ll,k,0,1);\n\n        int ans = 0;\n        // if(k==0) ans++;\n        // // start from 0\n        // for(int i=0;i<31;i++){\n        //     int c = (1<<i)+1;\n        //     int can = i;\n        //     if(c>=k){\n        //         int req = c-k;\n        //         if(req<=can){\n        //             cout<<i<<\" \"<<can<<\" \"<<req<<endl;\n        //             ans+= nCr(can,req);\n        //         }\n        //     }\n        // }\n        // cout<<ans<<endl;\n        \n        // start from 1\n        int c=1;\n        for(int i=0;i<32;i++){\n            c = (1<<i);\n            int can = i+1;\n            if(c>=k){\n                int req = c-k;\n                if(req<=can){\n                    // cout<<i<<\" \"<<can<<\" \"<<req<<endl;\n                    ans+= nCr(can,req);\n                }\n            }\n        }\n        // cout<<ans<<endl;\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1716089275.0
}