{
    "username": "drizzy22",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> dist(n, 0);\n        for (int i = 1; i < n; ++i) {\n            dist[i] = dist[i - 1] + 1;\n        }\n\n        set<int> pow;\n        for (int i = 0; i < n; ++i) {\n            pow.insert(i);\n        }\n\n        vector<int> row;\n\n        for (const auto& qi : q) {\n            int l = qi[0];\n            int rt = qi[1];\n\n            auto lbound = pow.lower_bound(l + 1);\n            auto ubound = pow.lower_bound(rt);\n\n            pow.erase(lbound, ubound);\n\n            row.push_back(pow.size() - 1);\n        }\n\n        return row;\n    }\n    \n};",
    "submit_ts": "1722743691",
    "subm_id": "1343797521"
}