{
    "username": "mohitnandan81825",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, vector<int>> differenceMap;\n        vector<int> maxValueList;\n\n        for (int i = 0; i < n / 2; ++i) {\n            int firstElement = nums[i];\n            int secondElement = nums[n - i - 1];\n            int difference = abs(firstElement - secondElement);\n\n            int maxValue = max({firstElement, secondElement, k - firstElement, k - secondElement});\n\n            differenceMap[difference].push_back(maxValue);\n            maxValueList.push_back(maxValue);\n        }\n\n        int minChanges = n;  \n        sort(maxValueList.begin(), maxValueList.end());\n\n        for (const auto& [difference, maxValues] : differenceMap) {\n            int thresholdIndex = lower_bound(maxValueList.begin(), maxValueList.end(), difference) - maxValueList.begin();\n            int changesCount = thresholdIndex * 2 + (n / 2 - thresholdIndex);\n\n            for (const auto& maxValue : maxValues) {\n                if (maxValue < difference) {\n                    changesCount -= 2;\n                } else {\n                    changesCount -= 1;\n                }\n            }\n\n            minChanges = min(minChanges, changesCount);\n        }\n\n        return minChanges;\n    }\n};\n\n",
    "submit_ts": "1721489944",
    "subm_id": "1327468412"
}