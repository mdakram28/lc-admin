{
    "username": "mit_roh",
    "submission": "class Solution {\npublic:\n    int ans=1;\n    int f(vector<int>& nums, int k, int s,  vector<vector<int>> &dp, vector<int> &vk, vector<unordered_map<int, int>> &vkm){\n        \n        \n         for (int i = 0; i < s; i++) {\n            for (int j = 0; j < k + 1; j++) {\n                for (int l = 0; l < j; l++) {\n                    dp[i][j] = max(dp[i][j], 1 + vk[l]);\n                }\n                if (vkm[j].count(nums[i]) > 0) dp[i][j] = max(dp[i][j], 1 + vkm[j][nums[i]]);\n                \n                ans = max(ans, dp[i][j]);\n            }\n            for (int j = 0; j < k + 1; j++) {\n                vk[j] = max(vk[j], dp[i][j]);\n                vkm[j][nums[i]] = max(vkm[j][nums[i]], dp[i][j]);\n            }\n        }\n        return ans;\n    }\n    int maximumLength(vector<int>& nums, int k) {\n        \n        int s = nums.size();\n        \n        vector<vector<int>> dp(s, vector<int>(k + 1, 1));\n    \n        vector<int> vk(k + 1, -1);\n        vector<unordered_map<int, int>> vkm(k + 1);\n        \n        return f(nums,k,s,dp,vk,vkm);\n\n       \n    }\n};",
    "submit_ts": 1717862370.0
}