{
    "username": "chenreddy0207",
    "submission": "class Solution {\n    \n    struct SegmentTreeNode\n    {\n        long long int maxSumWithFS_LNS=0;\n        long long int maxSumWithFNS_LS=0;\n        long long int maxSumWithFNS_LNS=0;\n        long long int maxSumWithFS_LS=0;\n    };\n    \n    void BuildSegmentTree(vector<SegmentTreeNode>& SegmentTreeNode, int segStart, int segEnd, int idx, vector<int>& nums)\n    {\n        if(segStart==segEnd)\n        {\n            SegmentTreeNode[idx].maxSumWithFS_LS=nums[segStart];\n            SegmentTreeNode[idx].maxSumWithFNS_LNS=0;\n            SegmentTreeNode[idx].maxSumWithFS_LNS=-1e6;\n            SegmentTreeNode[idx].maxSumWithFNS_LS=-1e6;\n            \n            /*\n            cout<<segStart<<\" \"<<segEnd<<\" \"<<idx<<endl;\n            cout<<SegmentTreeNode[idx].maxSumWithFS_LS<<endl;\n            cout<<SegmentTreeNode[idx].maxSumWithFNS_LNS<<endl;\n            cout<<SegmentTreeNode[idx].maxSumWithFS_LNS<<endl;\n            cout<<SegmentTreeNode[idx].maxSumWithFNS_LS<<endl;\n            */\n            \n            return;\n        }\n        \n        int mid=(segStart+segEnd)/2;\n        BuildSegmentTree(SegmentTreeNode,segStart,mid,2*idx+1,nums);\n        BuildSegmentTree(SegmentTreeNode,mid+1,segEnd,2*idx+2,nums);\n        \n        SegmentTreeNode[idx].maxSumWithFS_LS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS);\n            \n        SegmentTreeNode[idx].maxSumWithFS_LS=max(SegmentTreeNode[idx].maxSumWithFS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LS\n        );\n        \n        SegmentTreeNode[idx].maxSumWithFS_LNS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LNS);\n            \n        SegmentTreeNode[idx].maxSumWithFS_LNS=max(SegmentTreeNode[idx].maxSumWithFS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS\n        );\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS);\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LS=max(SegmentTreeNode[idx].maxSumWithFNS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS\n        );\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LNS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS);\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LNS=max(SegmentTreeNode[idx].maxSumWithFNS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS\n        );\n        \n        /*\n        cout<<segStart<<\" \"<<segEnd<<\" \"<<idx<<endl;\n        cout<<SegmentTreeNode[idx].maxSumWithFS_LS<<endl;\n        cout<<SegmentTreeNode[idx].maxSumWithFNS_LNS<<endl;\n        cout<<SegmentTreeNode[idx].maxSumWithFS_LNS<<endl;\n        cout<<SegmentTreeNode[idx].maxSumWithFNS_LS<<endl;\n        */\n    }\n    \n    void updateSegmentTree(vector<SegmentTreeNode>& SegmentTreeNode, int segStart, int segEnd, int idx, vector<int>& query)\n    {\n        if(query[0]<segStart || query[0]>segEnd)    return;\n        if(segStart==segEnd)\n        {\n            SegmentTreeNode[idx].maxSumWithFS_LS=query[1];\n            SegmentTreeNode[idx].maxSumWithFNS_LNS=0;\n            SegmentTreeNode[idx].maxSumWithFS_LNS=-1e6;\n            SegmentTreeNode[idx].maxSumWithFNS_LS=-1e6;\n            \n            return;\n        }\n        \n        int mid=(segStart+segEnd)/2;\n        updateSegmentTree(SegmentTreeNode,segStart,mid,2*idx+1,query);\n        updateSegmentTree(SegmentTreeNode,mid+1,segEnd,2*idx+2,query);\n        \n        SegmentTreeNode[idx].maxSumWithFS_LS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS);\n            \n        SegmentTreeNode[idx].maxSumWithFS_LS=max(SegmentTreeNode[idx].maxSumWithFS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LS\n        );\n        \n        SegmentTreeNode[idx].maxSumWithFS_LNS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LNS);\n            \n        SegmentTreeNode[idx].maxSumWithFS_LNS=max(SegmentTreeNode[idx].maxSumWithFS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS\n        );\n        \n        \n        SegmentTreeNode[idx].maxSumWithFNS_LS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS);\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LS=max(SegmentTreeNode[idx].maxSumWithFNS_LS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LS\n        );\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LNS=max(\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LNS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS);\n        \n        SegmentTreeNode[idx].maxSumWithFNS_LNS=max(SegmentTreeNode[idx].maxSumWithFNS_LNS,\n            SegmentTreeNode[2*idx+1].maxSumWithFNS_LS+SegmentTreeNode[2*idx+2].maxSumWithFNS_LNS\n        );\n    }\n    \n    \n    \npublic:\n    \n    int segTreeSize(int n)\n    {\n        n--;\n        int cnt=0;\n        \n        while(n>1)\n        {\n            cnt++;\n            n>>=1;\n        }\n        \n        return 2*(1<<(cnt+1))-1;\n    }\n    \n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        int n=nums.size();\n        int m=segTreeSize(n);\n        \n        vector<SegmentTreeNode> SegmentTreeNode(m);\n        \n        BuildSegmentTree(SegmentTreeNode, 0, n-1, 0, nums);\n        \n        long long int ans=0;\n        long long int prm=1e9+7;\n        \n        for(auto&q:queries)\n        {\n            updateSegmentTree(SegmentTreeNode, 0, n-1, 0, q);\n            long long int cur_ans=0;\n            cur_ans=max(cur_ans,SegmentTreeNode[0].maxSumWithFS_LNS);\n            cur_ans=max(cur_ans,SegmentTreeNode[0].maxSumWithFS_LS);\n            cur_ans=max(cur_ans,SegmentTreeNode[0].maxSumWithFNS_LNS);\n            cur_ans=max(cur_ans,SegmentTreeNode[0].maxSumWithFNS_LS);\n            ans+=cur_ans;\n            ans%=prm;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716695057.0
}