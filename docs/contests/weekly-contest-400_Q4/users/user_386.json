{
    "username": "M-Manas-s",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        int bitc[nums.size()][32];\n        memset(bitc,0,sizeof(bitc));\n        \n        for ( int i = 0 ; i<nums.size(); i++ ) \n            for ( int j = 0; j < 32; j ++ ) {\n                if ( (nums[i]>>j)&1 )\n                    bitc[i][j] = 1;\n                if ( i != 0 )\n                    bitc[i][j] += bitc[i-1][j];\n                }\n        \n        auto command = [&](int l,int r) {\n            int ret = 0;\n            for ( int i = 0; i < 32; i++ ) {\n                int d = bitc[r][i] - ( l == 0 ? 0 : bitc[l-1][i] );\n                if ( d == r - l + 1 )\n                    ret |= ( 1 << i );\n            }\n            return ret;\n        };\n        \n        int ans = INT_MAX;\n        \n        for ( int i = 0 ; i<nums.size(); i++ ) {\n            \n            int l = i;\n            int r = nums.size() - 1;\n            \n            while( l <= r ) {\n                int mid = ( l + r ) / 2;\n                if ( command(i,mid) < k )\n                    r = mid - 1;\n                else\n                    l = mid + 1;\n            }\n            \n            if ( r >= i ) l--;\n            ans = min(ans,abs(k-command(i,l)));\n            \n            l = i, r = nums.size() - 1;\n            while( l <= r ) {\n                int mid = ( l + r ) / 2;\n                if ( command(i,mid) <= k )\n                    r = mid - 1;\n                else\n                    l = mid + 1;\n            }\n            \n            if ( l < nums.size() ) r++;\n            ans = min(ans,abs(k-command(i,r)));\n            \n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1717298574",
    "subm_id": "1274783807"
}