{
    "username": "Sauram228",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long n = nums.size();\n        unordered_map<long long, long long> andCount;\n        long long count = 0ll;\n\n        for (long long i = 0; i < n; ++i) {\n            unordered_map<long long, long long> newAndCount;\n            if (nums[i] == k) count++; // Single element subarray\n\n            for (auto &pair : andCount) {\n                long long newAnd = pair.first & nums[i];\n                if (newAnd == k) count += pair.second;\n                newAndCount[newAnd] += pair.second;\n            }\n\n            if (nums[i] == k) {\n                newAndCount[k]++;\n            } else {\n                newAndCount[nums[i]]++;\n            }\n\n            andCount = newAndCount;\n        }\n        return count;\n    }\n};",
    "submit_ts": "1720279612",
    "subm_id": "1311758219"
}