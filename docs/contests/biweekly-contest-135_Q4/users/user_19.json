{
    "username": "donbasta",
    "submission": "class Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        using ll = long long;\n\n        int n = grid.size();\n        ll dp[n][n + 1][n + 1];\n        // ll ndp[n][n + 1]; \n        ll mdp[n][n + 1];\n        ll co[n][n + 1];\n        memset(dp, 0, sizeof(dp));\n        // memset(ndp, 0, sizeof(ndp));\n        memset(mdp, 0, sizeof(mdp));\n        memset(co, 0, sizeof(co));\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                co[i][j + 1] = co[i][j] + grid[j][i];\n            }\n        }\n\n        for (int i = 1; i < n; i++) {\n            for (int u = 0; u <= n; u++) {\n                for (int v = 0; v <= n; v++) {\n                    ll c1 = 0;\n                    if (v > u) c1 = co[i][v] - co[i][u];\n                    ll c0 = 0;\n                    if (u > v) c0 = co[i - 1][u] - co[i - 1][v];\n                    dp[i][u][v] = max(dp[i][u][v], mdp[i - 1][v] + c1 + c0);\n                    for (int w = v + 1; w <= n; w++) {\n                        ll p = w + 1, q = max(u, w);\n                        ll c2 = 0;\n                        if (q >= p) c2 = co[i - 1][q] - co[i - 1][p - 1];\n                        dp[i][u][v] = max(dp[i][u][v], dp[i - 1][v][w] + c1 + c2);\n                    }\n                }\n            }\n            for (int u = 0; u <= n; u++) {\n                for (int v = 0; v <= u; v++) {\n                    mdp[i][u] = max(mdp[i][u], dp[i][u][v]);\n                }\n            }\n\n        }\n        ll ans = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n; j++) {\n                ans = max(ans, dp[n - 1][i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488559",
    "subm_id": "1327426037"
}