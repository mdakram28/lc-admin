{
    "username": "w0w0",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        sc = SortedList()\n\n        ans = []\n        cur = n - 1\n        for u, v in queries:\n            i = sc.bisect_left([u + 1, -inf, -inf])\n            if not sc:\n                sc.add([u + 1, u, v])\n                cur = cur - (v - u - 1)\n            else:\n                while i < len(sc):\n                    m, l, r = sc[i]\n                    if l >= u and r <= v:\n                        sc.remove([m, l, r])\n                        cur = cur + (r - l - 1)\n\n                    else:\n                        break\n\n                if not sc or not ((0 <= i - 1 < len(sc) and sc[i - 1][1] <= u and sc[i - 1][2] >= v) or (0 <= i < len(sc) and sc[i][1] <= u and sc[i][2] >= v)):\n                    sc.add([u + 1, u, v])\n                    cur = cur - (v - u - 1)\n\n\n            ans.append(cur)\n\n\n        return ans",
    "submit_ts": "1722742597",
    "subm_id": "1343772618"
}