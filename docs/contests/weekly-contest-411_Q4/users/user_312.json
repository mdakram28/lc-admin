{
    "username": "Trusting PoincareRHo",
    "submission": "class Solution {\npublic:\n    typedef pair<int,int> pii;\n    typedef long long ll;\n    vector<long long> countKConstraintSubstrings(string S, int k, vector<vector<int>>& queries) {\n        int j=0;\n        int n=S.size();\n        vector<int> mp(n+1,0);\n        int cnt1=0,cnt0=0;\n        for(int i=0;i<n;i++){\n            if(S[i]=='1') cnt1++;\n            else if(S[i]=='0') cnt0++;\n            while(cnt1>k&&cnt0>k&&j<i){\n                if(S[j]=='0') cnt0--;\n                else cnt1--;\n                j++;\n            }\n            mp[i+1]=j+1;\n        }\n        vector<ll> s(n+1,0);\n        for(int i=1;i<=n;i++) {\n            s[i]=s[i-1]+(ll)(i-mp[i]+1ll);\n        }\n        // for(int i=1;i<=n;i++){\n        //     cout<<mp[i]-1<<\" \"<<i-1<<\" \"<<s[i]<<endl;\n        // }\n        mp[0]=-1;\n        vector<ll> ans(queries.size(),0);\n        for(int i=0;i<queries.size();i++){\n            int l=queries[i][0],r=queries[i][1];\n            l++,r++;\n            ll sum=(ll)(r-l+1)*(1ll+r-l+1)/2ll;\n            if(l>=mp[r]) ans[i]=sum;\n            else{\n                int l1=l,r1=r;\n                while(l1<r1){\n                    int mid=(l1+r1+1)/2;\n                    if(mp[mid]<=l) l1=mid;\n                    else r1=mid-1;\n                }\n                // cout<<r<<\" \"<< l1-1<<\" \"<<(s[r+1]-s[l1])<<\" \"<<(ll)(l1-l)*(ll)((l1-l)+1ll)/2ll<<endl;\n                ans[i]=s[r]-s[l1]+(ll)(l1-l+1)*(ll)((l1-l+1)+1ll)/2ll;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723953598",
    "subm_id": "556418774"
}