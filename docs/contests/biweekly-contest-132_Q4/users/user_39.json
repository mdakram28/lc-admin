{
    "username": "bashem",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        auto dp = vector(nums.size(), vector(k + 1, 0));\n        \n        unordered_map<int, vector<int>> mp;\n        for (auto &x : nums) mp[x] = vector(k + 1, 0);\n        \n        int ans = 0;\n        \n        for (int i = 0; i < nums.size(); i++) {\n            dp[i][0] = 1;\n            auto nprv = vector(k + 1, 0);\n            nprv[0] = 1;\n            if (i != 0) dp[i][0] = max(dp[i][0], dp[i - 1][0]);\n            \n            for (int j = 1; j <= k && i != 0; j++) {\n                dp[i][j] = max(dp[i - 1][j], 1 + dp[i - 1][j - 1]);\n                nprv[j] = 1 + dp[i - 1][j - 1];\n            }\n            \n            auto prv = mp[nums[i]];\n\n            for (int j = 0; j <= k; j++) {\n                dp[i][j] = max(dp[i][j], 1 + prv[j]);\n                nprv[j] = max(nprv[j], 1 + prv[j]);\n            }\n            \n            for (auto &x : dp[i]) ans = max(ans, x);\n            mp[nums[i]] = nprv;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717859236.0
}