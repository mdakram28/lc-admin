{
    "username": "MinhBaoSoCool",
    "submission": "class Solution {\npublic:\n    \n    int p[32][32];\n    \n    void initPMatrices(){\n        for(int i=0;i<32;++i){\n            for(int j=0;j<32;++j) p[i][j]=-1;\n        }\n    }\n    \n    int computeGroup(int n, int g){\n        if(g<=0) return 0;\n        if(p[n][g]>=0) return p[n][g];\n        if(g>n) return 0;\n        \n        if(g==1) p[n][g]=1;\n        else{\n            p[n][g]=0;\n            for(int remain=g-1;remain<n;++remain){\n                p[n][g]+=computeGroup(remain, g-1);\n            }\n        }\n        return p[n][g];\n    }\n    \n    int computeNumberOfWay(int t, int l){\n        return computeGroup(t, l-1)+2*computeGroup(t, l)+computeGroup(t, l+1);\n    }\n    \n    int waysToReachStair(int k) {\n        initPMatrices();\n        int sumJump=0;\n        int ans=0;\n        if(k==0 || k==1) ans+=1;\n        for(int maxJump=0;maxJump<30;++maxJump){\n            sumJump=sumJump+(1<<maxJump);\n            int l=sumJump+1-k;\n            if(l<0) continue;\n            if(l==0) {\n                ans+=1;\n                continue;\n            }\n            int t=maxJump+1;\n            if(l>t+1) continue;\n            ans=ans+computeNumberOfWay(t, l);\n            // cout<<\"maxJump = \"<<maxJump<<\", ans = \"<<ans<<\"\\n\";\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716089235",
    "subm_id": "1261836792"
}