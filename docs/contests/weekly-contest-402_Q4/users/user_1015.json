{
    "username": "remidinishanth",
    "submission": "template<class T> struct Seg { // comb(ID,b) = b\n    const T ID = 0; T comb(T a, T b) { return a+b; } \n    int n; vector<T> seg;\n    void init(int _n) { // upd, query also work if n = _n\n        for (n = 1; n < _n; ) n *= 2; \n        seg.assign(2*n,ID); }\n    void pull(int p) { seg[p] = comb(seg[2*p],seg[2*p+1]); }\n    void upd(int p, T val) { // set val at position p\n        seg[p += n] = val; for (p /= 2; p; p /= 2) pull(p); }\n    T query(int l, int r) { // any associative op on interval [l, r]\n        T ra = ID, rb = ID;\n        for (l += n, r += n+1; l < r; l /= 2, r /= 2) {\n            if (l&1) ra = comb(ra,seg[l++]);\n            if (r&1) rb = comb(seg[--r],rb);\n        }\n        return comb(ra,rb);\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        \n        vector<int> Ans;\n        \n        Seg<int> seg;\n        seg.init(n+1);\n        \n        for(int i=0;i<n;i++){\n            int left = INT_MAX, right = INT_MAX;\n            if(i) left = nums[i-1];\n            if(i + 1 < n) right = nums[i+1];\n            \n            if(left < nums[i] && nums[i] > right){\n                seg.upd(i, 1);\n            }\n        }\n        \n        for(vector<int> q: queries){\n            if(q[0] == 1){\n                if(q[1] == q[2]){\n                    Ans.push_back(0);\n                    continue;\n                }\n                int x = seg.query(q[1], q[2]) - seg.query(q[1], q[1]) - seg.query(q[2], q[2]);\n                Ans.push_back(x);\n            } else {\n                nums[q[1]] = q[2];\n                \n                for(int i=max(0, q[1]-1); i < min(n, q[1] + 2); i++){\n                    seg.upd(i, 0);\n                    \n                    int left = INT_MAX, right = INT_MAX;\n                    if(i) left = nums[i-1];\n                    if(i + 1 < n) right = nums[i+1];\n                    \n                    if(left < nums[i] && nums[i] > right){\n                        seg.upd(i, 1);\n                    }\n                }\n            }\n        }\n        \n        return Ans;\n    }\n};",
    "submit_ts": 1718507805.0
}