{
    "username": "samanwaysadhu5",
    "submission": "class Solution {\npublic:\n    int helper(vector<pair<int, int>> s, vector<pair<int, int>> d, int pos)\n    {\n        int n = s.size();\n        for (int i = 0; i < n; i++)\n        {\n            if (s[i].second == pos)\n            {\n                s.erase(s.begin() + i);\n                break;\n            }\n        }\n        for (int i = 0; i < n; i++)\n        {\n            if (d[i].second == pos)\n            {\n                d.erase(d.begin() + i);\n                break;\n            }\n        }\n        // cout << s.front().first << endl;\n        // cout << s.back().first << endl;\n        // cout << d.front().first << endl;\n        // cout << d.back().first << endl;\n        return max(-s.front().first + s.back().first, -d.front().first + d.back().first);\n    }\n    int minimumDistance(vector<vector<int>>& points)\n    {\n        int n = points.size();\n        vector<pair<int, int>> s(n), d(n);\n        for (int i = 0; i < n; i++)\n        {\n            s[i] = {points[i][0] + points[i][1], i};\n            d[i] = {points[i][0] - points[i][1], i};\n        }\n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        // cout << s.front().second << endl;\n        // cout << s.back().second << endl;\n        // cout << d.front().second << endl;\n        // cout << d.back().second << endl;\n        return min(min(helper(s, d, s.front().second), helper(s, d, s.back().second)), min(helper(s, d, d.front().second), helper(s, d, d.back().second)));\n    }\n};"
}