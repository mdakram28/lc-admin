{
    "username": "Jackie Cheung",
    "submission": "using ll = long long;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        ll res = -5e9;\n        int m = board.size(), n = board[0].size();\n        set<array<int, 3>> ar;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                ar.insert({board[i][j], i, j});\n            }\n        }\n        auto rm = [&](int i, int j) {\n            vector<array<int, 3>> el;\n            for (int k = 0; k < m; k++) {\n                auto itr = ar.find({board[k][j], k, j});\n                if (itr != ar.end()) {\n                    el.push_back({board[k][j], k, j});\n                    ar.erase(itr);\n                }\n            }\n            for (int k = 0; k < n; k++) {\n                auto itr = ar.find({board[i][k], i, k});\n                if (itr != ar.end()) {\n                    el.push_back({board[i][k], i, k});\n                    ar.erase(itr);\n                }   \n            }\n            return el;\n        };\n        auto ad = [&](vector<array<int, 3>>& arr) {\n            for (auto& e : arr) {\n                auto itr = ar.find(e);\n                if (itr == ar.end()) {\n                    ar.insert(e);\n                }\n            }\n        };\n\n        for (int z = 0; z < 5; z++) {\n            auto itr = ar.rbegin();\n            for (int kk = 0; kk < z; kk++) {\n                itr++;\n                if (itr == ar.rend()) {\n                    break;\n                }\n            }\n            int i = (*itr)[1], j = (*itr)[2];\n            cout << i << \" \" << j << \" \" << board[i][j] << endl;\n\n            auto e1 = rm(i, j);\n\n            {\n                auto [a, b, c] = *ar.rbegin();\n                auto ee = rm(b, c);\n\n                auto [d, e, f] = *ar.rbegin();\n                cout << board[i][j] << \" \" << a << \" \" << d << \" \" << 1LL * board[i][j] + a + d << endl;\n                res = max(res, 1LL * board[i][j] + a + d);\n\n                ad(ee);\n            }\n\n            {\n                auto [a, b, c] = *(prev(ar.rbegin()));\n                auto ee = rm(b, c);\n\n                auto [d, e, f] = *ar.rbegin();\n                cout << board[i][j] << \" \" << a << \" \" << d << \" \" << 1LL * board[i][j] + a + d << endl;\n                res = max(res, 1LL * board[i][j] + a + d);\n\n                ad(ee);\n            }\n\n            ad(e1);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723908701",
    "subm_id": "1359163608"
}