{
    "username": "EUqr2c2cjD8nuX5K",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        const int n = nums.size();\n        \n        vector<int> pm(k + 2, 0);\n        \n        auto add = [&](int from, int to, int delta) {\n            pm[from] += delta;\n            pm[to + 1] -= delta;\n        };\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int a = nums[i], b = nums[n - 1 - i];\n            \n            int upto = max({\n                abs(a - 0),\n                abs(a - k),\n                abs(b - 0),\n                abs(b - k),\n            });\n            \n            // 0 - upto : +1\n            // upto+1 ...: + 2\n            add(0, upto, 1);\n            add(upto + 1, k, 2);\n            add(abs(a - b), abs(a - b), -1);\n        }\n        \n        int res = n;\n        for (int i = 0, cur = 0; i <= k; ++i) {\n            cur += pm[i];\n            res = min(res, cur);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721487302",
    "subm_id": "1327383866"
}