{
    "username": "ran-shao-de-huo",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        for i in range(len(nums)):\n            nums[i] -= target[i]\n        def foo(ls):\n            if ls[0] < 0:\n                ls = [-x for x in ls]\n            indices = [(x, i) for i, x in enumerate(ls)]\n            indices.sort()\n            bar = SortedList()\n            curx = indices[-1][0]\n            ret = 0\n            while indices:\n                while indices and indices[-1][0] == curx:\n                    _, i = indices.pop()\n                    j = bar.bisect_left((i, 0))\n                    l = r = i\n                    if j < len(bar) and bar[j][0] == i + 1:\n                        r = bar.pop(j)[1]\n                    if j and bar[j - 1][1] == i - 1:\n                        l = bar.pop(j - 1)[0]\n                    bar.add((l, r))\n                ret += len(bar) * (curx - (indices[-1][0] if indices else 0))\n                if indices:\n                    curx = indices[-1][0]\n#                 print(indices, bar)\n            # print(ls, ret)\n            return ret\n        l = ans = 0\n        # print(nums)\n        for i, x in enumerate(nums):\n            if i == len(nums) - 1 or x * nums[i + 1] <= 0:\n                ans += foo(nums[l:i + 1])\n                l = i + 1\n        return ans",
    "submit_ts": "1721532917",
    "subm_id": "548395050"
}