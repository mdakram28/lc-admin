{
    "username": "Kitetsu",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        differences = self._calculate_differences(nums, target)\n        total_operations = 0\n        current_segment_diff = 0\n\n        for i in range(len(differences)):\n            if i == 0 or self._same_sign(differences[i - 1], differences[i]):\n                additional_operations = abs(differences[i]) - abs(current_segment_diff)\n                if additional_operations > 0:\n                    total_operations += additional_operations\n                current_segment_diff = differences[i]\n            else:\n                total_operations += abs(differences[i])\n                current_segment_diff = differences[i]\n\n        return total_operations\n\n    def _calculate_differences(self, nums: List[int], target: List[int]) -> List[int]:\n        return [target[i] - nums[i] for i in range(len(nums))]\n\n    def _same_sign(self, a: int, b: int) -> bool:\n        return (a > 0 and b > 0) or (a < 0 and b < 0)",
    "submit_ts": "1721533611",
    "subm_id": "1328012857"
}