{
    "username": "milendrakumarbaghel",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long cnt = 0;\n        \n        HashMap<Long, Long> res = new HashMap<>();\n        \n        for (int i = 0; i < n; ++i) {\n            HashMap<Long, Long> currRes = new HashMap<>();\n            \n            if (nums[i] == k) {\n                ++cnt;\n            }\n            currRes.put((long) nums[i], 1L);\n\n            for(int x=0; x<=104; x++) {\n                \n            }\n            \n            for (var entry : res.entrySet()) {\n                long newRes = entry.getKey() & nums[i];\n                if (newRes == k) {\n                    cnt += entry.getValue();\n                }\n                currRes.merge(newRes, entry.getValue(), Long::sum);\n            }\n            \n            res = currRes;\n        }\n        \n        return cnt;\n    }\n}",
    "submit_ts": "1720279135",
    "subm_id": "1311738897"
}