{
    "username": "shrikant11",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<vector<int>> cuts;\n        for(int i=0; i<m-1; i++) cuts.push_back({horizontalCut[i], i, 0});\n        for(int i=0; i<n-1; i++) cuts.push_back({verticalCut[i], i, 1});\n        sort(cuts.begin(), cuts.end(), greater<vector<int>>());\n        int horCutDone = 0, verCutDone = 0;\n\n        long long totCost = 0;\n\n        for(int i=0; i<cuts.size(); i++){\n            int currCost = cuts[i][0], currInd = cuts[i][1], isVert = cuts[i][2];\n\n            if(isVert){\n                totCost += (long long)(horCutDone+1)*currCost;\n                verCutDone++;\n            }else{\n                totCost += (long long)(verCutDone+1)*currCost;\n                horCutDone++;\n            }\n        }\n\n        return totCost;\n    }\n};",
    "submit_ts": "1720926185",
    "subm_id": "1320278503"
}