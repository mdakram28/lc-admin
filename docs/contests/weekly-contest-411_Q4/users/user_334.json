{
    "username": "mortihoo",
    "submission": "class Solution:\n    def countKConstraintSubstrings(\n        self, s: str, k: int, queries: List[List[int]]\n    ) -> List[int]:\n        a, b = 0, 0\n        p = 0\n        N = len(s)\n        st = [0] * N\n        ed = [0] * N\n        pre = [0] * (N+1)\n        for i in range(N):\n            if s[i] == \"0\":\n                a += 1\n            else:\n                b += 1\n\n            while a > k and b > k:\n                if s[p] == \"0\":\n                    a -= 1\n                else:\n                    b -= 1\n                st[p] = i - p\n                p += 1\n\n            ed[i] = i - p + 1\n\n        while p < N:\n            st[p] = N - p\n            p += 1\n\n        for i in range(1, N+1):\n            pre[i] = pre[i - 1] + st[i-1]\n\n        # @cache\n        # def sol(u, v):\n        #     if v - u + 1 <= st[u]:\n        #         return ((1 + (v - u + 1)) * (v - u + 1)) // 2\n\n        #     return st[u] + sol(u + 1, v)\n\n        @cache\n        def sol(u, v):\n            if v - u + 1 <= st[u]:\n                return ((1 + (v - u + 1)) * (v - u + 1)) // 2\n\n            p = v - ed[v]\n            return pre[p+1] - pre[u] + ((1 + ed[v]) * ed[v]) // 2\n\n        # print(\"st\", st)\n        ans = []\n        # for u, v in queries:\n        #     temp = 0\n        #     for i in range(u, v + 1):\n        #         # print('bbb', i, u, v)\n        #         if v - i + 1 <= st[i]:\n        #             # print(\"aaaa\", i ,(v - i + 1), ((1 + (v - i + 1)) * (v - i + 1)) // 2)\n        #             # print(\"cccc\", i ,v - i + 1)\n        #             temp += ((1 + (v - i + 1)) * (v - i + 1)) // 2\n        #             break\n        #         else:\n        #             temp += st[i]\n        #     ans.append(temp)\n\n        for u, v in queries:\n            ans.append(sol(u, v))\n\n        return ans\n\n\nwith open(\"user.out\", \"w\") as f:\n    inputs = map(loads, stdin)\n    args = []\n    for nums in inputs:\n        args.append(nums)\n        if len(args) < 3:\n            continue\n        print(\n            str(Solution().countKConstraintSubstrings(*args)).replace(\" \", \"\"), file=f\n        )\n        args = []\nexit(0)\n",
    "submit_ts": "1723952580",
    "subm_id": "1359799580"
}