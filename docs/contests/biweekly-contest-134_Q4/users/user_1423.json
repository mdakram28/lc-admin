{
    "username": "The_crawler",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& ar, int k) {\n        int n = ar.size();\n\n        long long bit[30][n];\n\n        memset(bit, 0, sizeof bit);\n\n        for(int i=0; i<30; i++){\n            for(int j=0; j<n; j++){\n                if(ar[j]&(1<<i))bit[i][j] = 1;\n            }\n        }\n\n        long long one[30][n], zero[30][n];\n        memset(one, 0, sizeof one);\n        memset(zero, 0, sizeof zero);\n\n        for(int i=0; i<30; i++){\n            int o = n, z = n;\n            for(int j=n-1; j>=0; j--){\n                if(bit[i][j])o = j;\n                else z = j;\n                one[i][j] = o;\n                zero[i][j] = z;\n            }\n        }\n\n        long long res = 0;\n\n        for(int i=0; i<n; i++){\n            long long L = i, R = n-1;\n            bool f = 1;\n            for(int j=0; j<30; j++){\n                if(k&(1<<j)){\n                    if(bit[j][i]==0){\n                        f = 0;\n                        break;\n                    }\n                    R = min(R, zero[j][i]-1);\n                }\n                else if(bit[j][i]){\n                    L = max(L, zero[j][i]);\n                }\n            }\n            if(!f)continue;\n            if(L<=R){\n                res += R-L+1;\n            }\n        }\n\n        return res;\n\n\n    }\n};",
    "submit_ts": "1720279724",
    "subm_id": "1311762598"
}