{
    "username": "cool-chandrasekharbkq",
    "submission": "class Solution {\npublic:\nconst int M=1e9+7;\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int,int>>xS;xS.insert({M,-M});int res=n-1;vector<int>resr;\n        for(auto&k:queries)\n        {\n            int l=k[0],r=k[1];pair<int,int>p={r,-l};\n            auto p2=*xS.lower_bound(p);\n            int l2=-p2.second,r2=p2.first;\n            if(!(l2<=l&&r2>=r))\n            {\n                while(1)\n                {\n                    auto ite=xS.lower_bound({l,M});\n                    auto p2=*ite;int l2=-p2.second,r2=p2.first;if(l2>=r)break;\n                    res+=(r2-l2-1);xS.erase(ite);\n                }\n                res-=(r-l-1);xS.insert(p);\n            }\n            //for(auto&k:xS)cout<<-k.second<<','<<k.first<<'|';cout<<'\\n';\n            resr.push_back(res);\n        }\n        return resr;\n    }\n};",
    "submit_ts": "1722743874",
    "subm_id": "552353333"
}