{
    "username": "vikram_saini",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        int hCount = 1; \n        int vCount = 1;\n        int i = 0, j = 0;\n        long long totalCost = 0;\n        const int MOD = 1e9 + 7;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                totalCost = (totalCost + (long long)horizontalCut[i] * vCount);\n                hCount++;\n                i++;\n            } else {\n                totalCost = (totalCost + (long long)verticalCut[j] * hCount);\n                vCount++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            totalCost = (totalCost + (long long)horizontalCut[i] * vCount);\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            totalCost = (totalCost + (long long)verticalCut[j] * hCount);\n            j++;\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925520",
    "subm_id": "1320257468"
}