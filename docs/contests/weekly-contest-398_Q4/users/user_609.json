{
    "username": "lyi29512",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        \n        @cache\n        def dp(level, jump, went_down):\n            #if level < 0:\n            #    return 0\n            if level > k + 1:\n                return 0\n            \n            #print(level)\n            \n            res = 0\n            if level == k:\n                res += 1\n            \n            if not went_down and level != 0:\n                down = dp(level-1, jump, True)\n            else:\n                down = 0\n                \n            up = dp(level + 2 ** jump, jump + 1, False)\n            \n            \n            return down + up + res\n            \n            \n        return dp(1, 0, False)\n    \n#     Go down to stair i - 1. This operation cannot be used consecutively or on stair 0.\n# Go up to stair i + 2jump. And then, jump becomes jump + 1.",
    "submit_ts": 1716088770.0
}