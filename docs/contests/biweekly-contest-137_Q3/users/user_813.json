{
    "username": "YouKnowMe",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        List<int[]> list = new ArrayList<>();\n        for(int r = 0;r<board.length;r++){\n            PriorityQueue<int[]> pq = new PriorityQueue<>((a,b)->a[0]-b[0]);\n            for(int i=0;i<board[r].length;i++) {\n                pq.add(new int[]{board[r][i],i});\n                if(pq.size()>3) pq.poll();\n            }\n            int arr[]=new int[3];\n            for(int i=2;i>=0;i--) arr[i]=pq.poll()[1];\n            list.add(arr);\n        }\n        int n = list.size();\n        long max = Long.MIN_VALUE;\n        for(int i = 0;i<n;i++){\n            for(int j=i+1;j<n;j++){\n                for(int k=j+1;k<n;k++){\n                    \n                    int a[]=list.get(i);\n                    int b[]=list.get(j);\n                    int c[]=list.get(k);\n                    \n                    for(int x : a){\n                        for(int y : b){\n                            if(x==y) continue;\n                            for(int z : c){\n                                if(x==z || z==y) continue;\n                                max = Math.max(max,(long)board[i][x]+board[j][y]+board[k][z]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return max;\n        \n        \n    }\n}\n        ",
    "submit_ts": "1723908353",
    "subm_id": "1359149020"
}