{
    "username": "smalukav",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        vector<vector<int>> g(edges.size() + 1);\n        for (const auto& edge : edges) {\n            g[edge[0]].push_back(edge[1]);\n            g[edge[1]].push_back(edge[0]);\n        }\n        vector<pair<int, int>> d(g.size());\n        rec1(0, 0, d, g);\n        vector<int> ans(g.size());\n        rec2(0, 0, 0, ans, d, g);\n        return ans;\n    }\n\nprivate:\n    void rec1(int cur, int prev, vector<pair<int, int>>& d, const vector<vector<int>>& g) {\n        int v1 = 0;\n        int v2 = 0;\n        for (int next : g[cur]) {\n            if (next != prev) {\n                rec1(next, cur, d, g);\n                int v = d[next].first + (next % 2 == 0 ? 2 : 1);\n                if (v > v1) {\n                    v2 = v1;\n                    v1 = v;\n                } else if (v > v2)\n                    v2 = v;\n            }\n        }\n        d[cur] = {v1, v2};\n    }\n\n    void rec2(int cur, int prev, int add, vector<int>& ans, const vector<pair<int, int>>& d, const vector<vector<int>>& g) {\n        ans[cur] = max(add, d[cur].first);\n        for (int next : g[cur]) {\n            if (next != prev) {\n                int v = d[next].first + (next % 2 == 0 ? 2 : 1);\n                int q = v == d[cur].first ? d[cur].second : d[cur].first;\n                rec2(next, cur, max(add, q) + (cur % 2 == 0 ? 2 : 1), ans, d, g);\n            }\n        }\n    }\n};",
    "submit_ts": "1722698938",
    "subm_id": "1343196528"
}