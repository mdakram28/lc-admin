{
    "username": "Pramod",
    "submission": "class Solution {\npublic:\n    bool check(string num) {\n        // Define the transition table for the DFA\n        // Each row corresponds to a state (remainder), and each column corresponds to the digit 0-9.\n        int dfa[7][10] = {\n            {0, 1, 2, 3, 4, 5, 6, 0, 1, 2},  // state 0 (remainder 0)\n            {3, 4, 5, 6, 0, 1, 2, 3, 4, 5},  // state 1 (remainder 1)\n            {6, 0, 1, 2, 3, 4, 5, 6, 0, 1},  // state 2 (remainder 2)\n            {2, 3, 4, 5, 6, 0, 1, 2, 3, 4},  // state 3 (remainder 3)\n            {5, 6, 0, 1, 2, 3, 4, 5, 6, 0},  // state 4 (remainder 4)\n            {1, 2, 3, 4, 5, 6, 0, 1, 2, 3},  // state 5 (remainder 5)\n            {4, 5, 6, 0, 1, 2, 3, 4, 5, 6},  // state 6 (remainder 6)\n        };\n        \n        int state = 0; // Initial state (remainder 0)\n        \n        // Process each digit of the number\n        for (char c : num) {\n            int digit = c - '0'; // Convert character to digit\n            state = dfa[state][digit]; // Move to the next state based on the current digit\n        }\n        \n        // If the final state is 0, the number is divisible by 7\n        return state == 0;\n    }\n\n    string largestPalindrome(int n, int k) {\n        string res = \"\";   // 1, 2, 4, 5, 9, 8, 3, 6\n        if(k == 1 || k == 9 || k == 3) {\n            for(int i = 0; i < n; i++) res += \"9\";\n        } else if(k == 2) {\n            if(n == 1) return \"8\";\n            for(int i = 0; i < n - 2; i++) res += \"9\";\n            res = \"8\" + res + \"8\";\n        } else if(k == 4) {\n            if(n == 1) return \"8\";\n            if(n == 2) return \"88\";\n            if(n == 3) return \"888\";\n            if(n == 4) return \"8888\";\n            for(int i = 0; i < n - 4; i++) res += \"9\";\n            res = \"88\" + res + \"88\";\n        } \n        else if(k == 5) {\n            if(n == 1) return \"5\";\n            for(int i = 0; i < n - 2; i++) res += \"9\";\n            res = \"5\" + res + \"5\";\n        } else if(k == 8) {\n            // 8889888, 8888998888   \n            if(n < 6) for(int i = 0; i < n; i++) res += \"8\";\n            else {\n                for(int i = 0; i < n - 6; i++) {\n                    res += \"9\";\n                }\n                res = \"888\" + res + \"888\";\n            }\n        } else if(k == 6) {\n            if(n < 3) for(int i = 0; i < n; i++) res += \"6\";\n            else {\n                string temp = \"\", temp2;\n                for(int i = 0; i < (n - 1) / 2; i++) {\n                    if(i == 0) temp += \"8\";\n                    else temp += \"9\";\n                }\n                temp2 = temp;\n                reverse(temp2.begin(), temp2.end());\n                if(n % 2 == 0) res = temp + \"77\" + temp2;\n                else res = temp + \"8\" + temp2;\n            }\n        } else {\n            if(n < 3) for(int i = 0; i < n; i++) res += \"7\";\n            else {\n                string temp = \"\", temp2;\n                int mod7 = 0;\n                for(int i = 0; i < (n - 1) / 2; i++) {\n                    temp += \"9\";\n                    mod7 = (mod7 + 4) % 7;\n                }\n\n                temp2 = temp;\n                reverse(temp2.begin(), temp2.end());\n                if(n % 2 == 0) {\n                    for(int i = 9; i >= 0; i--) {\n                        char c = '0' + i;\n                        if(check(temp + c + c + temp2)) return temp + c + c + temp2;\n                    }\n                }\n                else {\n                    for(int i = 9; i >= 0; i--) {\n                        char c = '0' + i;\n                        if(check(temp + c + temp2)) return temp + c + temp2;\n                    }\n                }\n            }\n        }   \n\n        return res;\n    }\n};",
    "submit_ts": "1723953594",
    "subm_id": "1359825909"
}