{
    "username": "Katerina_Petrova_23_09_2001",
    "submission": "class Solution {\npublic:\n   bool help1(const vector<int>& colors, int a, int b) {\n        int n = colors.size();\n        return colors[a % n] != colors[b % n];\n    }\n    \n    int help2(const vector<int>& colors, int k) {\n        int ans= 0;\n        for (int j = 0; j < k - 1; ++j) {\n            if (help1(colors, j, j + 1)) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n      int n = colors.size();\n        int ans = 0;\n        int pair = help2(colors, k);\n\n        if (pair == k - 1) {\n            ans++;\n        }\n\n        for (int i = 1; i < n; ++i) {\n            if (help1(colors, i - 1, i)) {\n                pair--;\n            }\n            if (help1(colors, i + k - 2, i + k - 1)) {\n                pair++;\n            }\n            if (pair == k - 1) {\n                ans++;\n            }\n        }\n\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1720279884",
    "subm_id": "1311768930"
}