{
    "username": "SapGhosh",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int tots = 0;\n        int swaps = 0;\n        bool addtwo = false;\n        for(int i=0;i<m/2;i++){\n            for(int j=0;j<n/2;j++){\n                int ones = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                swaps += min(ones, 4-ones);\n                if(ones>2) tots += 4;\n            }\n        }\n        if(m%2 && n%2){\n            swaps += grid[m/2][n/2];\n            grid[m/2][n/2] = 0;\n        }\n        bool pots = false;\n        if(m%2){\n            for(int i=0;i<n/2;i++){\n                int ones = grid[m/2][i] + grid[m/2][n-1-i];\n                if(ones==1) pots=true;\n                swaps += min(ones,2-ones);\n                if (ones==2) {tots += 2;addtwo = true;}\n            }\n        }\n        if(n%2){\n            for(int i=0;i<m/2;i++){\n                int ones = grid[i][n/2] + grid[m-1-i][n/2];\n                if(ones==1) pots=true;\n                swaps += min(ones,2-ones);\n                if (ones==2) {tots += 2;addtwo=true;}\n            }\n        }\n        \n        if(tots%4==0 || pots) return swaps;\n        else return swaps+2;\n        \n        \n        \n        // return swap;\n    }\n};",
    "submit_ts": "1722700029",
    "subm_id": "1343229548"
}