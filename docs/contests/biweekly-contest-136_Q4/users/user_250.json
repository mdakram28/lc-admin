{
    "username": "Dhongee",
    "submission": "#include<bits/stdc++.h>\n//#include <sys/resource.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<ll,ll> pl;\ntypedef vector<pl> vpl;\n \n#define all(x) x.begin(), x.end()\n#define nl cout<<\"\\n\"\n#define ar  array\n#define PRECISION 9\n#define fast_IO ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)\n#define clock() cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\"\n#define size(x) (int)x.size()\n#define pb push_back\n#define fr(i,j,k) for(int i=j;i<k;i++)\n#define rf(i,j,k) for(int i=k-1;i>j;i--)\n\nmt19937 rng((uint32_t)chrono::steady_clock::now().time_since_epoch().count());\n// const ll p = uniform_int_distribution<ll>(0, mod - 1)(rng);\n\n#ifdef LOCAL\n#include \"../Library/debug.h\"\n#else \n#define dbg(...) \"SMILE\"\n#endif\n\n//#define STACK_INCREASE\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>> edges) {\n        int n=size(edges)+1;\n        vi adj[n];\n        fr(i,0,n-1){\n            int u=edges[i][0];\n            int v=edges[i][1];\n            adj[u].pb(v);\n            adj[v].pb(u);\n        }\n        vector<ar<int,2>> dp(n);\n        vi par(n,0);\n        function<void(int,int)>dfs=[&](int u,int p){\n            par[u]=p;\n            int mn1=0,mn2=0;\n            for(auto v: adj[u]) {\n                if(v==p )continue;\n                dfs(v,u); \n                int val=(v%2?1:2);\n                if(dp[v][0]+val>=mn1) {\n                    mn2=mn1;\n                    mn1=dp[v][0]+val;\n                }\n                else if(mn2<dp[v][0]+val){\n                    mn2=dp[v][0]+val;\n                }\n            }\n            dp[u]={mn1,mn2};\n        };\n        dfs(0,-1);\n        vi ans(n);\n        function<void(int,int,int)>dfs1=[&](int u,int p,int up){\n            auto [mn1,mn2]=dp[u];\n            if(up>=mn1) {\n                mn2=mn1;\n                mn1=up;\n            }\n            else mn2=max(mn2,up);\n            ans[u]=mn1; \n            for(auto v: adj[u]) {\n                if(v==p) continue;\n                int val=dp[v][0]+(v%2?1:2);\n                // if(v==1) {\n                //     dbg(val,mn1);\n                // }\n                if(val==mn1) {\n                    val=mn2;\n                }\n                else val=mn1;\n                dfs1(v,u,val+(u%2?1:2));\n            }\n        };\n        dfs1(0,-1,0);\n        // fr(i,0,n) {\n        //     dp=vector<ar<int,2>>(n);\n        //     dfs(i,-1);\n        //     dbg(dp[i][0]);\n        // }\n        return ans;\n    }\n};\n\n// int main(){\n//     if (0) cout<<fixed<<setprecision(PRECISION);\n//     fast_IO;\n//     #ifdef STACK_INCREASE\n//     rlimit rlim;\n//     if (getrlimit(RLIMIT_STACK, &rlim)) return 1;\n//     rlim.rlim_cur = 1024*1024*1024;\n//     if (setrlimit(RLIMIT_STACK, &rlim)) return 2;\n//     #endif\n//     int T=1;\n//     // cin>>T;\n//     while(T--){\n//         Solution sol;\n//         // vi ans1=sol.timeTaken({{2,4},{0,1},{2,3},{0,2}});\n//         vi ans2=sol.timeTaken({{1,0},{5,2},{7,1},{6,3},{3,1},{4,1},{8,7},{2,0}});\n//         dbg(ans2);\n//         // solve();\n//         clock();\n//     }\n//     return 0;\n// }\n",
    "submit_ts": "1722697112",
    "subm_id": "1343134584"
}