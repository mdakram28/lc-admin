{
    "username": "mahir344",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long ll;\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define pb push_back \n#define mp make_pair \n#define all(x) (x).begin(),(x).end()\n#define allb(x) (x).rbegin(),(x).rend()\n#define rep_u(ii, aa, bb) for(int ii = aa; ii < bb; ii++)\n#define rep_d(ii, aa, bb) for(int ii = aa; ii >= bb; ii--)\n#define ff first\n#define ss second\n#define yes cout << \"YES\" << endl;\n#define no cout << \"NO\" << endl;\n#define ordered_set(type) tree<type, null_type,less_equal<type>, rb_tree_tag,tree_order_statistics_node_update>\n#define maxhi(type) priority_queue<type>\n#define minhi(type) priority_queue<type,vector<type>,greater<type>>\n\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vector<ll>> vvll;\ntypedef pair<int,int> pi;\ntypedef pair<int,pair<int,int>> ppi;\n\nvoid __print(int x) { cout << x; }\nvoid __print(long x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(unsigned x) { cout << x; }\nvoid __print(unsigned long x) { cout << x; }\nvoid __print(unsigned long long x) { cout << x; }\nvoid __print(float x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <size_t N>\nvoid __print(const bitset<N>& x) { cout << x; };\n\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x);\ntemplate <typename T>\nvoid __print(const T &x);\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v);\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n    cout << '{';\n    __print(x.first);\n    cout << \", \";\n    __print(x.second);\n    cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n    int f = 0;\n    cout << '{';\n    for (auto &i : x) cout << (f++ ? \", \" : \"\"), __print(i);\n    cout << \"}\";\n}\nvoid _print() { cout << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n    __print(t);\n    if (sizeof...(v)) cout << \", \";\n    _print(v...);\n}\n\n#define dbg(x...)                                                            \\\n    cout << \"[\" << __func__ << \":\" << __LINE__ - 9 << \" [\" << #x << \"] = [\"; \\\n    _print(x);                                                               \\\n    cout << endl;\n\nll modpow(ll a, ll n, ll mod) {ll res = 1;while (n > 0) {if (n & 1) res = res * a % mod;a = a * a % mod;n >>= 1;}return res;}\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll lcm(ll a,ll b){return (a*b)/gcd(a,b);}\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 10; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an array of size 3\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return mod_add(arr[0], 0, b);} //for non prime b (using extended euclid gcd)\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}   // for prime b (using fermat little theorem)\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\nbool sortcol(const vector<ll>& v1, const vector<ll>& v2){return v1[1] < v2[1];}\nvoid fastio(){ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}\nstring binary(ll n){return bitset<32>(n).to_string();}\n\nconst int maxn = 1e5+10;\nvll seive(maxn,1),lpf(maxn,0),hpf(maxn,0),pf,divisors[maxn];\nvoid primes(){seive[0]=0,seive[1]=0;lpf[1]=1;hpf[1]=1;for(int i=2;i*i<=maxn;i++){if(seive[i]){lpf[i]=hpf[i]=i;for(int j=2*i;j<maxn;j+=i){seive[j]=0;hpf[j]=i;if(lpf[j]==0){lpf[j]=i;}}}}}\nvoid primefactors(ll n){while(n>1){ll spf=lpf[n];while(n%spf==0){n=n/spf;pf.pb(spf);}}}\nvoid divisor(){for(int i=2;i*i<=maxn;i++){for(int j=i;j<maxn;j+=i){divisors[j].pb(i);}}}\n\n#define MOD 1e9+7\n\n// *---------------------------------------------------------------------------------------*//\n\nclass Solution {\npublic:\n    vector<ll> bit;\n    void add(ll x){\n        for(int i=0;i<32;i++){\n            if((ll)(1<<i)&x) bit[i]++;\n            else bit[i]=0;\n            \n        }\n    }\n    void del(ll x){\n        for(int i=0;i<32;i++){\n            if((ll)(1<<i)&x) bit[i]--;\n            else bit[i]=0;\n            \n        }\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        ll cnt=0;\n        int n=nums.size();\n        map<ll,ll> fes;\n\n        forn(i,n){\n            map<ll,ll> nfes; \n            if(nums[i]==k) cnt++;\n            nfes[nums[i]]=1;\n\n            for(auto it:fes){\n                ll nand=it.ff&nums[i];\n                if(nand==k) cnt+=it.ss;\n                nfes[nand]+=it.ss;\n                \n            }\n            fes=nfes;\n        }\n    \n        return cnt;\n\n    }\n};\n//[0,0,4,6,2]\n//6",
    "submit_ts": "1720278918",
    "subm_id": "1311729813"
}