{
    "username": "mazinkarjikar",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int l = 0;\n        int best = 1e9;\n        vector<int> ones(32, 0);\n        vector<int> zeros(32,0);\n        int curr = 0;\n        for(int r = 0; r < nums.size() + 1; r++) {\n            // add r, evalute\n            if (r < nums.size()) {\n                int num1 = nums[r];\n                for(int i = 0; i < 32; i++) {\n                    if (num1 & (1<<i)) {\n                        ones[i]++;\n                        if (ones[i] == 1 and zeros[i] == 0) curr += (1<<i);\n                        // cout << curr << endl;\n                    } else {\n                        zeros[i]++;\n                        if (zeros[i] == 1 and ones[i] != 0) curr -= (1<<i);\n                        // cout << curr << endl;\n                    }\n                }\n            }\n            best = min(best, abs(curr-k));\n            // while curr < k, update l forward\n            while(l <= r and curr < k) {\n                if(l == r and r == nums.size()) break;\n                int num = nums[l];\n                for(int i = 0; i < 32; i++) {\n                    if (num & (1<<i)) {\n                        ones[i]--;\n                        if (ones[i] == 0 and zeros[i] == 0) curr -= (1<<i);\n                    } else {\n                        zeros[i]--;\n                        if (zeros[i] == 0 and ones[i] != 0) curr += (1<<i);\n                    }\n                }\n                // cout << curr << endl;\n                best = min(best, abs(curr - k));\n                l++;\n            }\n        }\n        return best;\n    }\n};",
    "submit_ts": "1717300442",
    "subm_id": "1274844269"
}