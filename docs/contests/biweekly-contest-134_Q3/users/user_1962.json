{
    "username": "Ryuk01",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(); \n        int count = 0; \n \n        if (k == 1) { \n            return n; \n        } \n \n        int length = 1; \n        int ind = 1; \n        while (ind < n + k - 1) { \n            int cur = ind; \n            int prev = ind - 1; \n            if (cur >= n) { \n                cur -= n; \n            } \n            if (prev >= n) { \n                prev -= n; \n            } \n \n            if (colors[cur] != colors[prev]) { \n                ++length; \n            } else { \n                length = 1; \n            } \n            if (length >= k) { \n                ++count; \n            } \n \n            ++ind; \n        } \n \n        return count; \n    }\n};",
    "submit_ts": "1720280929",
    "subm_id": "1311807067"
}