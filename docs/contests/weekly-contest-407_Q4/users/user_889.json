{
    "username": "fei-jue",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int>dn(n + 2), dt(n + 2);\n        dn[0] = nums[0]; dt[0] = target[0];\n        for(int i = 1; i < n; i++){\n            dn[i] = nums[i] - nums[i - 1];\n            dt[i] = target[i] - target[i - 1];\n        }\n        // for(int i = 0; i < n; i++) cout << dn[i] << \" \"; cout << endl;\n        // for(int i = 0; i < n; i++) cout << dt[i] << \" \"; cout << endl;\n        queue<int>mn, mx;\n        long long add = 0, sub = 0;\n        for(int i = 0; i < n; i++) {\n            if(dn[i] < dt[i]) add += dt[i] - dn[i];\n            else if(dn[i] > dt[i]) sub += dn[i] - dt[i];\n        }\n        long long ans = min(add, sub);\n        ans += abs(add - sub);\n        // for(int i = 0; i < n; i++){\n        //     if(dn[i] < dt[i]) {\n        //         dn[i] += 1;\n        //     }\n        // }\n        return ans;\n    }\n};",
    "submit_ts": "1721531731",
    "subm_id": "548388213"
}