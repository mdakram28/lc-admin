{
    "username": "bsUgjeE0Jf",
    "submission": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeSet;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeSet<Integer> p = new TreeSet<>();\n        for (int i = 0; i < n; ++i) {\n            p.add(i);\n        }\n\n        List<Integer> r = new ArrayList<>();\n\n        for (int[] qi : queries) {\n            int l = qi[0];\n            int rt = qi[1];\n\n           \n            Integer lb = p.higher(l);\n            Integer ub = p.ceiling(rt);\n\n            if (lb != null && ub != null && lb < ub) {\n                p.subSet(lb, true, ub, false).clear();\n            }\n\n            r.add(p.size() - 1);\n        }\n\n        int[] result = new int[r.size()];\n        for (int i = 0; i < r.size(); i++) {\n            result[i] = r.get(i);\n        }\n\n        return result;\n    }\n}",
    "submit_ts": "1722743491",
    "subm_id": "1343793114"
}