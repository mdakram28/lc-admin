{
    "username": "jackieckc",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int res = 0;\n        int m = grid.size(), n = grid[0].size();\n        vector<vector<int>> grs;\n        for (int i = 0; i <= m / 2; i++) {\n            for (int j = 0; j <= n / 2; j++) {\n                if (m % 2 == 0 && i == m / 2) continue;\n                if (n % 2 == 0 && j == n / 2) continue;\n                int v = grid[i][j];\n                // cout << i << \" \" << j << \" v: \" << v << endl;\n                vector<int> vs = {0, 0};\n                vs[v] += 1;\n                if (n - 1 - j >= 0 & n - 1 - j != j) {\n                    int v2 = grid[i][n - 1 - j];\n                    // cout << \"has v2 \" << v2 << endl;\n                    vs[v2] += 1;\n                }\n                if (m - 1 - i >= 0 && m - 1 - i != i) {\n                    int v3 = grid[m - 1 - i][j];\n                    vs[v3] += 1;\n                    if (n - 1 - j >= 0 & n - 1 - j != j) {\n                        int v4 = grid[m - 1 - i][n - 1 - j];\n                        vs[v4] += 1;\n                        // cout << \"has v4 \" << v4 << endl;\n                    }\n                }\n                grs.push_back(vs);\n                // cout << endl;\n            }\n        }\n        int co = 0;\n        vector fl = {0, 0};\n        int c2 = 0;\n        for (auto& g : grs) {\n            // 1, 2 ,4\n            // cout << g[0] << \" \" << g[1] << endl;\n            if (g[0] + g[1] == 1) {\n                // 0\n                // 1\n                co += g[1];\n                continue;\n            } else if (g[0] + g[1] == 2) {\n                // 0, 2\n                // 1, 1\n                // 2, 0\n                res += 2 - max(g[0], g[1]);\n                if (g[0] == 0) {\n                    co += 2;\n                } else if (g[0] == 1) {\n                    fl[0] += 1;\n                    co += 2;\n                } else {\n                }\n            } else {\n                // 0, 4\n                // 1, 3\n                // 2, 2\n                // 3, 1\n                // 4, 0\n                res += min(g[0], g[1]);\n                if (g[0] == 0) {\n                    co += 4;\n                } else if (g[0] == 1) {\n                    co += 4;\n                } else if (g[0] == 2) {\n                    fl[1] += 1;\n                    co += 4;\n                } \n            }\n        }\n        // fix if 1, 2, 3\n        cout << \"1s = \" << co << endl;\n        cout << \"flex = \" << fl[0] << \" \" << fl[1] << endl;\n        int v2 = co % 4;\n        cout << \"v2 = \" << v2 << endl;\n        // fl[0] +- 2\n        if (v2 == 1) {\n            // -1 or + 3\n            res += 1;\n        } else if (v2 == 2) {\n            // +- 2\n            if (fl[0] == 0) {\n                res += 2;\n            }\n        } else if (v2 == 3) {\n            // -3 or + 1\n            if (fl[0] > 0) {\n                res += 1;\n            } else {\n                res += 3;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699410",
    "subm_id": "1343210774"
}