{
    "username": "022_Deepak",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<vector<int>>arr(nums.size()+1,vector<int>(33,0));\n        vector<int>bin(33,0);\n        int j = 0;\n        long long ans = 0;\n        int o = k;\n        while(o>0){\n            int rem = o%2;\n            o /= 2;\n            bin[j] = rem;\n            j++;\n        }\n        \n        \n        for(int i = 0;i<nums.size();i++){\n            int temp = nums[i];\n            int cnt = 0;\n            int mini = INT_MAX;\n            while(temp>0){\n                int rem = temp%2;\n                temp /= 2;\n                if(rem == 1)\n                    arr[i+1][cnt] = rem + arr[i][cnt];\n                cnt++;\n            }\n            bool flag = 1;\n            int num = INT_MAX;\n            int num2 = 0;\n            int t = 0;\n            if(k == 0){\n                for(int j = 0;j<33;j++){\n                    t = max(arr[i+1][j],t);\n                }\n                ans += (i+1-t);\n                continue;\n            }\n            for(int j = 0;j<33;j++){\n                if(bin[j] == 1){\n                    num = min(arr[i+1][j],num);\n                }\n                else{\n                    num2 = max(arr[i+1][j],num2);\n                }\n            }\n            \n            if(num2 < num){\n                ans += num-num2;\n            }\n        }\n    \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720281561",
    "subm_id": "1311829876"
}