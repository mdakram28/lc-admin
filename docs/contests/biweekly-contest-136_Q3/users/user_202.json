{
    "username": "fpeterfalvi",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int flips = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int sum = grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j];\n                flips += Math.min(sum, 4 - sum);\n            }\n        }\n        int twoFlips = 0;\n        int ones = 0;\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; i++) {\n                int sum = grid[m / 2][i] + grid[m / 2][n - 1 - i];\n                flips += Math.min(sum, 2 - sum);\n                if (sum == 1) {\n                    twoFlips++;\n                }\n                ones += sum;\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m / 2; i++) {\n                int sum = grid[i][n / 2] + grid[m - 1 - i][n / 2];\n                flips += Math.min(sum, 2 - sum);\n                if (sum == 1) {\n                    twoFlips++;\n                }\n                ones += sum;\n            }\n        }\n        if (twoFlips == 0 && ones % 4 != 0) {\n            flips += 2;\n        }\n        if (m % 2 == 1 && n % 2 == 1 && grid[m / 2][n / 2] == 1) {\n            flips++;\n        }\n        return flips;\n    }\n}",
    "submit_ts": "1722696533",
    "subm_id": "1343111670"
}