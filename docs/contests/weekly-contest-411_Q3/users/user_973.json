{
    "username": "Mudit-B",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1:\n            return '9' * n\n        if k == 2:\n            res = '8'\n            n -= 1\n            if n == 0:\n                return res\n            if n == 1:\n                return '88'\n            n -= 1\n            res += '9' * n\n            res += '8'\n            return res\n        if k == 3:\n            return '9' * n\n        if k == 4:\n            if n < 4:\n                return '8' * n\n            else:\n                n -= 4\n                res = '88'\n                res += '9' * n\n                res += '88'\n            return res\n        if k == 5:\n            res = '5'\n            n -= 1\n            if n == 0:\n                return res\n            if n == 1:\n                return '55'\n            n -= 1\n            res += '9' * n\n            res += '5'\n            return res\n        if k == 6:\n            if n == 1:\n                return '6'\n            if n == 2:\n                return '66'\n            if n == 3:\n                return '888'\n            if n % 2 == 1:\n                res = '8'\n                left_nines = (n - 3) // 2\n                res += '9' * left_nines\n                res += '8'\n                res += '9' * left_nines\n                res += '8'\n            else:\n                res = '8'\n                left_nines = (n - 4) // 2\n                res += '9' * left_nines\n                res += '7' * 2\n                res += '9' * left_nines\n                res += '8'\n\n            return res\n        if k == 7:\n            def mod7_string(s):\n                mod = 0\n                for char in s:\n                    mod = (mod * 10 + int(char)) % 7\n                return mod\n            \n            if n == 1:\n                return '7'\n            elif n == 2:\n                return '77'\n            \n            half = (n - 1) // 2\n            left = n - half * 2\n            ops = []\n            \n            for i in range(10):\n                ops.append('9' * half + str(i) * left + '9' * half)\n            \n            for op in ops[::-1]:\n                if mod7_string(op) == 0:\n                    return op\n        if k == 8:\n            if n <= 6:\n                return '8' * n\n            else:\n                return '8' * 3 + '9' * (n - 6) + '8' * 3\n        if k == 9:\n            return '9' * n",
    "submit_ts": "1723952996",
    "subm_id": "1359809758"
}