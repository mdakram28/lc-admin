{
    "username": "A_Le_K",
    "submission": "static const int __ = []() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return 0; }();\n\ntypedef long long ll; typedef unsigned int ui; typedef unsigned long long ull; typedef pair<int ,int> pii; typedef pair<ll, ll> pll; typedef double rl;\ntypedef pii int2; typedef tuple<int, int, int> int3; typedef tuple<int, int, int, int> int4; typedef tuple<int, int, int, int, int> int5;\ntypedef pll ll2; typedef tuple<ll, ll, ll> ll3; typedef tuple<ll, ll, ll, ll> ll4; typedef tuple<ll, ll, ll, ll, ll> ll5;\ntypedef vector<int> vi; typedef vector<pii> vii; typedef vector<ll> vll; typedef vector<pll> vll_ll; typedef vector<vi> vvi; typedef vector<vii> vvii; typedef vector<vll> vvll; typedef vector<vll_ll> vvll_ll;\n\n#define pb push_back\n#define mp make_pair\n#define eb emplace_back\n#define xx first\n#define yy second\n#define FOR(i,N) for(int i=0; i<N; i++)\n#define g0(x) get<0>(x)\n#define g1(x) get<1>(x)\n#define g2(x) get<2>(x)\n#define g3(x) get<3>(x)\n#define g4(x) get<4>(x)\n\ntemplate<typename A> string to_string(A* ptr) { stringstream ss; ss << \"0x\" << std::setw(16) << std::setfill ('0') << std::hex << (uint64_t)(uintptr_t)ptr; return ss.str(); }\nstring to_string(char c) { return ((string)\"'\"+c)+ \"'\"; }\ntemplate <typename A, typename B> string to_string(pair<A, B> p);\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p);\ntemplate <typename A, typename B, typename C, typename D> string to_string(tuple<A, B, C, D> p);\nstring to_string(const string& s) { return '\"' + s + '\"'; }\nstring to_string(const char* s) { return to_string((string) s); }\nstring to_string(bool b) { return (b ? \"true\" : \"false\"); }\nstring to_string(vector<bool> v) {\n    bool first = true; string res = \"{\";\n\tfor (int i = 0; i < static_cast<int>(v.size()); i++) { if (!first) { res += \", \"; } first = false; res += to_string(v[i]); }\n\tres += \"}\"; return res;\n}\ntemplate <size_t N> string to_string(bitset<N> v) { string res = \"\"; for (size_t i = 0; i < N; i++) { res += static_cast<char>('0' + v[i]); } return res; }\ntemplate <typename A> string to_string(A v) {\n\tbool first = true; string res = \"{\";\n\tfor (const auto &x : v) {\n\t\tif (!first) { res += \", \"; }\n\t\tfirst = false; res += to_string(x);\n\t}\n\tres += \"}\"; return res;\n}\ntemplate <typename A, typename B> string to_string(pair<A, B> p) { return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\"; }\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\"; }\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\"; }\nvoid debug_out() { cout << endl; }\ntemplate <typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cout << \" \" << to_string(H); debug_out(T...); }\n\n#define popc __builtin_popcountll\n//#define popc __builtin_popcount\n//#define clz __builtin_clzll\n//#define clz __builtin_clz\ninline int bitLength(uint32_t val) { return 32 - __builtin_clz  (val); }\ninline int bitLength(uint64_t val) { return 64 - __builtin_clzll(val); }\n\ntemplate<typename T> inline void domax(T& A, const T& B) { A=max(A, B); }\ntemplate<typename T> inline void domin(T& A, const T& B) { A=min(A, B); }\n\ntemplate<typename T>\ninline T true_mod(T A, T B)\n{\n    assert(B>=1);\n    A%=B;\n    if(A<0) A+=B;\n    return A;\n}\n\ntemplate<typename T>\ninline T div_down(T A, T B)\n{\n    return (A-true_mod(A,B))/B;\n}\n\ntemplate<typename T>\ninline T div_up(T A, T B)\n{\n    return div_down(A+B-1, B);\n}\n\n#define all(x) (x).begin(), (x).end()\n\n#if 0\n#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define dbg(...) 42\n#endif\n\n\nconst int INF=1e9;\n\nint md(int a) {\n    return a%4;\n}\n\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        const int n=g.size(), m=g[0].size();\n        \n        int res_quad=0;\n        for(int i=0; i<n-1-i; i++) {\n            for(int j=0; j<m-1-j; j++) {\n                const int cnt1=g[i][j]+g[n-1-i][j]+g[i][m-1-j]+g[n-1-i][m-1-j];\n                const int cnt0=4-cnt1;\n                \n                res_quad+=min(cnt1, cnt0);\n            }\n        }\n        \n        \n        int res_singleton=0;\n        if(n%2==1 && m%2==1) res_singleton=g[n/2][m/2];\n        \n        int cnt_00=0, cnt_01=0, cnt_11=0;\n        \n        if(n%2==1) {\n            for(int j=0; j<m-1-j; j++) {\n                const int a=g[n/2][j], b=g[n/2][m-1-j];\n                \n                if(a!=b) cnt_01++;\n                else if (a==0) cnt_00++;\n                else if (a==1) cnt_11++;\n                else assert(false);\n                \n            }\n        }\n        \n        if(m%2==1) {\n            for(int i=0; i<n-1-i; i++) {\n                const int a=g[i][m/2], b=g[n-1-i][m/2];\n                \n                if(a!=b) cnt_01++;\n                else if (a==0) cnt_00++;\n                else if (a==1) cnt_11++;\n                else assert(false);\n            }\n        }\n        \n        dbg(cnt_00, cnt_01, cnt_11);\n        \n        vector<int> dp(4, INF);\n        dp[0]=0;\n        \n        FOR(ii, cnt_00) {\n            vector<int> dp_new(4, INF);\n            \n            FOR(rem, 4) {\n                domin(dp_new[md(rem+0)], dp[rem]);\n                domin(dp_new[md(rem+2)], dp[rem]+2);\n            }\n            \n            \n            dp=dp_new;\n        }\n        \n        FOR(ii, cnt_01) {\n            vector<int> dp_new(4, INF);\n            \n            FOR(rem, 4) {\n                domin(dp_new[md(rem+0)], dp[rem]+1);\n                domin(dp_new[md(rem+2)], dp[rem]+1);\n            }\n            \n            \n            dp=dp_new;\n        }\n        \n        FOR(ii, cnt_11) {\n            vector<int> dp_new(4, INF);\n            \n            FOR(rem, 4) {\n                domin(dp_new[md(rem+0)], dp[rem]+2);\n                domin(dp_new[md(rem+2)], dp[rem]+0);\n            }\n            \n            \n            dp=dp_new;\n        }\n        \n        \n        dbg(dp);\n        \n        return res_quad+res_singleton+dp[0];\n        \n        \n        /*\n        if(n%2==0 && m%2==0) {\n            \n            \n        }\n        */\n    }\n};",
    "submit_ts": "1722697043",
    "subm_id": "1343132032"
}