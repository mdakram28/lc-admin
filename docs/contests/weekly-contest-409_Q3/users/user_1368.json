{
    "username": "Dengxj",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int, int> M;\n        int cnt = 0;\n        vector<int> res;\n\n        // auto print = [&]() {\n        //     cout << cnt << \": \";\n        //     for (auto e: M) {\n        //         cout << e.first << \" \" << e.second << \"; \";\n        //     }\n        //     cout << endl;\n        // };\n\n        for (const auto& q: queries) {\n            int a = q[0], b = q[1];\n            auto ret = M.insert({a, b});\n            if (!ret.second) {\n                if (b <= ret.first->second) {\n                    res.push_back(n - 1 - cnt + M.size());\n                    // print();\n                    continue;\n                }\n                cnt += b - ret.first->second;\n                ret.first->second = b;\n            } else {\n                cnt += b - a;\n            }\n            auto iter = ret.first == M.begin() ? ret.first : prev(ret.first);\n            if (iter->second <= a)\n                iter = ret.first;\n            while (iter != M.end()) {\n                auto nxt = next(iter);\n                if (nxt == M.end()) break;\n                if (nxt->first >= iter->second) break;\n                cnt -= nxt->second - nxt->first;\n                if (nxt->second > iter->second) {\n                    cnt += nxt->second - iter->second;\n                    iter->second = nxt->second;\n                }\n                M.erase(nxt);\n            }\n            res.push_back(n - 1 - cnt + M.size());\n            // print();\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722743899",
    "subm_id": "1343802210"
}