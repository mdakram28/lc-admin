{
    "username": "yuandrew923",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diff = [a - b for a, b in zip(nums, target)]\n        print(diff)\n\n        def dp(curr):\n            if not curr: return 0\n            count = curr[0]\n            for i in range(1, len(curr)):\n                count += max(curr[i] - curr[i - 1], 0)\n            return count\n\n        res = 0\n        curr = list()\n        for n in diff:\n            if not curr or ((curr[-1] < 0) and (n < 0)) or ((curr[-1] > 0) and (n > 0)):\n                curr.append(n)\n            else:\n                res += dp(([abs(m) for m in curr]))\n                curr = [n]\n        return res + dp(([abs(m) for m in curr]))",
    "submit_ts": "1721533496",
    "subm_id": "1328010289"
}