{
    "username": "koushalsai18",
    "submission": "class Solution {\n\npublic:\n    int MOD=1e9+7;\n\n    int dp[2001][51][51]; \n    int solve(int idx, int last1, int last2, const vector<int>& nums) {\n        if (idx == nums.size()) {\n            return 1; \n        }\n\n        if (dp[idx][last1][last2] != -1) {\n            return dp[idx][last1][last2];\n        }\n\n        int ans = 0;\n        for (int i = 0; i <= nums[idx]; ++i) {\n            int j = nums[idx] - i; \n            \n            if (i >= last1 && j <= last2) {\n                ans = (ans + solve(idx + 1, i, j, nums)) % MOD;\n            }\n        }\n\n        return dp[idx][last1][last2] = ans;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n       memset(dp, -1, sizeof(dp)); \n        return solve(0, 0, 50, nums); \n    }\n};",
    "submit_ts": "1723347192",
    "subm_id": "1351593841"
}