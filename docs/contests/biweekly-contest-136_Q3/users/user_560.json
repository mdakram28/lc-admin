{
    "username": "Whirling1001",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        flip_count = 0\n        \n        for r in range(len(grid)//2):\n            for c in range(len(grid[0])//2):\n                count_0 = 0\n                count_1 = 0\n                for g in [grid[r][c], grid[r][-c-1], grid[-r-1][c], grid[-r-1][-c-1]]:\n                    if g == 1:\n                        count_0 += 1\n                    else:\n                        count_1 += 1\n                flip_count += min(count_0, count_1)\n        \n        if len(grid)%2 == 0 and len(grid[0])%2 == 0:\n            return flip_count\n        row_mid = 0\n        col_mid = 0\n        residual = 0\n        if len(grid[0])%2 == 1:\n            \n            mid_idx = len(grid[0])//2\n            for r in range(len(grid)//2):\n                if grid[r][mid_idx] != grid[-r-1][mid_idx]:\n                    row_mid += 1\n                elif grid[r][mid_idx] == 1:\n                    residual += 2\n            \n        if len(grid)%2 == 1:\n            \n            mid_idx = len(grid)//2\n            for c in range(len(grid[0])//2):\n                if grid[mid_idx][c] != grid[mid_idx][-c-1]:\n                    col_mid += 1\n                elif grid[mid_idx][c] == 1:\n                    residual += 2\n            if len(grid[0])%2 == 1:\n                if grid[len(grid)//2][len(grid[0])//2] == 1:\n                    flip_count += 1\n\n        if row_mid + col_mid == 0:\n            return flip_count + residual%4\n        else:\n            return flip_count + row_mid + col_mid\n        \n\n",
    "submit_ts": "1722697792",
    "subm_id": "1343159067"
}