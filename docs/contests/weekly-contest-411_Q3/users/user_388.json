{
    "username": "0xGG",
    "submission": "import sys\nsys.set_int_max_str_digits(pow(10, 5) + 5)\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in [1, 3, 9]:\n            return '9' * n\n        if k == 2:\n            if n < 3: return '8' * n\n            return f\"8{'9' * (n - 2)}8\"\n        if k == 4:\n            if n < 5: return '8' * n\n            return f\"88{'9' * (n - 4)}88\"\n        if k == 5:\n            if n < 3: return '5' * n\n            return f\"5{'9' * (n - 2)}5\"\n        if k == 6:\n            if n < 3: return '6' * n\n            if n % 2 == 1: return f\"8{'9'* (n // 2  - 1)}8{'9'* (n // 2  - 1)}8\"\n            return f\"8{'9'* (n // 2  - 2)}77{'9'* (n // 2  - 2)}8\"\n        if k == 7:\n            if n < 3: return '7' * n\n            if n % 2 == 1:\n                for i in range(9, -1, -1):\n                    ans = f\"{'9'* (n // 2)}{i}{'9'* (n // 2)}\"\n                    if int(ans) % 7 == 0: return ans\n                else:\n                    raise Exception\n            for i in range(9, -1, -1):\n                ans = f\"{'9'* (n // 2 - 1)}{i * 11}{'9'* (n // 2 - 1)}\"\n                if int(ans) % 7 == 0: return ans\n            else:\n                raise Exception\n        if k == 8:\n            if n < 7: return '8' * n\n            return f\"888{'9' * (n - 6)}888\"\n        raise Exception",
    "submit_ts": "1723951550",
    "subm_id": "556406169"
}