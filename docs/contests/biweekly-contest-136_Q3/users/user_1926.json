{
    "username": "your_daddy69",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n          int n = grid.size();\n        int m = grid[0].size();\n        int temp = 0;\n        int possible = 0;\n        int count = 0;\n\n        // int totalOnes=0;\n        //  for (int i = 0; i < m; ++i) {\n        //     for (int j = 0; j < n; ++j) {\n        //         totalOnes += grid[i][j];\n        //     }\n        // }\n\n        \n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> elements = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                };\n                \n                int ones = std::count(elements.begin(), elements.end(), 1);\n                temp += min(ones, 4 - ones);\n            }\n        }\n\n       \n        if (n % 2 != 0) {\n            int mid_row = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[mid_row][j] != grid[mid_row][m - j - 1]) {\n                    temp++;\n                    possible++;\n                } else {\n                    if (grid[mid_row][j] == 1) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        // Handle the middle column if m is odd\n        if (m % 2 != 0) {\n            int mid_col = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][mid_col] != grid[n - i - 1][mid_col]) {\n                    temp++;\n                    possible++;\n                } else {\n                    if (grid[i][mid_col] == 1) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            temp++;\n        }\n\n        if (possible == 0 && count % 2 != 0) {\n            temp += 2;\n        }\n\n        return temp;\n         \n       \n     \n    }\n};",
    "submit_ts": "1722700062",
    "subm_id": "1343230541"
}