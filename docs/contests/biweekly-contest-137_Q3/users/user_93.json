{
    "username": "CHANDRAPRABHU",
    "submission": "        #define ll long long\n\nclass Node{\n    public :\n    array<int,3> ind;\n    long long weight;\n    Node(array<int,3> ind,ll w){\n        this->ind = ind;\n        weight = w;\n    }\n    bool operator<(const Node& other)const {\n        return this->weight<other.weight;\n    }\n};\n\nostream& operator<<(ostream& out,const Node& val){\n    return out;\n}\n\nclass Cell{\n    public :\n    int x,y,weight;\n    Cell(const initializer_list<int>& a){\n        assert(a.size()==3);\n        x = *a.begin();\n        y = *(1+(a.begin()));\n        weight = *(2+(a.begin()));\n    }\n    bool operator<(const Cell& other)const {\n        return this->weight<other.weight;\n    }\n    bool operator>(const Cell& other)const {\n        return this->weight>other.weight;\n    }\n};\n\nclass Solution {\npublic:\n    bool diff(int i,int j,int k){\n        return i!=j && j!=k && i!=k;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int r = board.size();\n        int c = board[0].size();\n        priority_queue<Node> pq;\n        vector<Cell> arr;\n        for(int i = 0 ;i<r;i++){\n            for(int j = 0;j<c;j++){\n                arr.push_back({i,j,board[i][j]});\n            }\n        }\n        sort(arr.begin(),arr.end(),less<Cell>());\n        int n= arr.size();\n        auto push = [&](array<int,3> ind){\n            ll w = 0;\n            for(int j: ind){\n                w+=arr[j].weight;\n            }\n            pq.push(Node(ind,w));\n        };\n        push({n-3,n-2,n-1});\n        while(!pq.empty()){\n            auto cur = pq.top();pq.pop();\n            int _r[3],_c[3];\n            for(int i = 0 ;i<3;i++){\n                _r[i] = arr[cur.ind[i]].x;\n                _c[i] = arr[cur.ind[i]].y;\n            }\n            if(diff(_r[0],_r[1],_r[2]) && diff(_c[0],_c[1],_c[2])){\n                for(int i = 0 ;i<3;i++){\n                    // cout<<arr[cur.ind[i]].weight<<' ';\n                }\n                return cur.weight;\n            }\n            if(cur.ind[0]){\n                auto nc = cur;\n                nc.ind[0]--;\n                push(nc.ind);\n            }\n            for(int i = 1 ;i<3;i++){\n                if(cur.ind[i-1]+1==cur.ind[i])continue;\n                auto nc = cur;\n                nc.ind[i]--;\n                push(nc.ind);\n            }\n        }\n        return -1;\n    }\n};",
    "submit_ts": "1723908482",
    "subm_id": "1359154518"
}