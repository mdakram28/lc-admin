{
    "username": "Paramveer01",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] hor, int[] ver) {\n        int h = 1;\n        int v = 1;\n        PriorityQueue<Integer> ph = new PriorityQueue<>(Collections.reverseOrder());\n        PriorityQueue<Integer> pv = new PriorityQueue<>(Collections.reverseOrder());\n        for(int i : hor) ph.add(i);\n        for(int i : ver) pv.add(i);\n\n        long cost = 0;\n        while(!ph.isEmpty() && !pv.isEmpty()){\n            if(pv.peek()>ph.peek()){\n                cost += (long)h*pv.remove();\n                v++;\n            }\n            else{\n                cost += (long)v*ph.remove();\n                h++;\n            }\n        }\n        while(!ph.isEmpty()){\n            cost += (long)v*ph.remove();\n            h++;\n        }\n        while(!pv.isEmpty()){\n            cost += (long)h*pv.remove();\n            v++;\n        }\n        return cost;\n    }\n}",
    "submit_ts": "1720926451",
    "subm_id": "1320286707"
}