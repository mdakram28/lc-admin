{
    "username": "wanghaocheng",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        \n        int i = 0, j = 0;\n        long long result = 0;\n        while (i < m - 1 || j < n - 1) {\n            if (i == m - 1) {\n                result += (long long)verticalCut[j++];\n            } else if (j == n - 1) {\n                result += (long long)horizontalCut[i++];\n            } else if (horizontalCut[i] < verticalCut[j]) {\n                result += (long long)horizontalCut[i++] * (n - j);\n            } else if (verticalCut[j] < horizontalCut[i]) {\n                result += (long long)verticalCut[j++] * (m - i);\n            } else if (i < j) {\n                result += (long long)horizontalCut[i++] * (n - j);\n            } else {\n                result += (long long)verticalCut[j++] * (m - i);\n            }\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1720926645",
    "subm_id": "546447560"
}