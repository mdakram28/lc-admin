{
    "username": "ryanguorocket",
    "submission": "const int MAX = 1e5;\nclass Solution {\npublic:\n    \n    int n;\n\n    int sparse[MAX][17];\n    void initSparse(vector<int>& v) {\n        for (int i = 0; i < n; i++) {\n            sparse[i][0] = v[i];\n        }\n        for(int i=1;i<17;i++){\n            for(int j=0;j<n;j++){\n                if (j + (1 << (i - 1)) >= n) continue;\n                int a=sparse[j][i-1];\n                int b=sparse[j+(1<<(i-1))][i-1];\n                sparse[j][i]= (a & b);\n            }\n        }\n    }\n\n    int range(int a,int b){\n        int r=(int)log2(b-a+1);\n        int v1 = sparse[a][r];\n        int v2 = sparse[b-(1<<r)+1][r];\n        return (v1 & v2);\n    }\n\n    int minimumDifference(vector<int>& nums, int k) {\n        n = nums.size();\n        initSparse(nums);\n        int ret = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = 0;\n            int r = i;\n            while (r - l > 1) {\n                int m = (l + r) / 2;\n                int v = range(m, i);\n                if (v < k) l = m;\n                else r = m;\n            }\n            int p = r;\n            if (range(l, i) >= k) p = l;\n            ret = min(ret, abs(range(p, i) - k));\n            if (p != 0) {\n                ret = min(ret, abs(range(p - 1, i) - k));\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717297448.0
}