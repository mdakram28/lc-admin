{
    "username": "AggarwalShivam",
    "submission": "class Solution {\npublic:\n\n    long long ways(long long current, int& k, long long jump, bool canBack, map<pair<pair<long long, long long>, bool>, long long>& mp) {\n        if (current > k + 50) return 0;\n\n        if (mp.find({{current, jump}, canBack}) != mp.end()) return mp[{{current, jump}, canBack}];\n\n        long long ans = (current == k) ? 1 : 0;\n        if (canBack && current != 0) ans += ways(current - 1, k, jump, false, mp);\n\n        ans += ways(current + jump, k, jump * 2, true, mp);\n        return mp[{{current, jump}, canBack}] = ans;\n    }\n\n    int waysToReachStair(int k) {\n        if (k == 0) return 2;\n\n        map<pair<pair<long long, long long>, bool>, long long> dp;\n        return ways(1, k, 1, true, dp);\n    }\n};",
    "submit_ts": 1716088998.0
}