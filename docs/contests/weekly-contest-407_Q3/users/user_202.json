{
    "username": "JeffreyLC",
    "submission": "class Solution {\npublic:\n    int maxOperations(string s) {\n        vector<string> splits = SafeSplitString(s, '0');\n        if (s.back() == '0') {\n            splits.push_back(\"\");\n        }\n        int ans = 0, cnt = 0;\n        for (string a : splits) {\n            ans += cnt;\n            cnt += a.length();\n        }\n        return ans;\n    }\nprivate:\n    vector<string> SafeSplitString(const string& str, char separator) {\n        vector<string> ret;\n        int pos = -1;\n        do {\n            int new_pos = str.find(separator, pos + 1);\n            if (new_pos == -1 && pos + 1 < str.length()) {\n                ret.push_back(str.substr(pos + 1));\n            } else if (new_pos != -1 && new_pos != pos + 1) {\n                ret.push_back(str.substr(pos + 1, new_pos - pos - 1));\n            }\n            pos = new_pos;\n        } while (pos != -1);\n        return ret;\n    }\n};",
    "submit_ts": "1721529604",
    "subm_id": "1327907021"
}