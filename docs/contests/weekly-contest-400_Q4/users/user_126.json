{
    "username": "kaq",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<vector<int>> nextIndex(nums.size() + 1, vector<int>(30, INT_MAX));\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            for (int j = 0; j < 30; j++) {\n                nextIndex[i][j] = nextIndex[i + 1][j];\n                if ((nums[i] & (1 << j)) == 0) {\n                    nextIndex[i][j] = i;\n                }\n            }\n        }\n        int ans = INT_MAX;\n        for (int left = 0; left < nums.size(); left++) {\n            int curAnd = nums[left];\n            int curIndex = left;\n            ans = min(ans, abs(curAnd - k));\n            while (true) {\n                int index = INT_MAX;\n                for (int j = 0; j < 30; j++) {\n                    if (curAnd & (1 << j)) {\n                        index = min(index, nextIndex[curIndex][j]);\n                    }\n                }\n                if (index == INT_MAX) {\n                    break;\n                }\n                curIndex = index;\n                curAnd &= nums[curIndex];\n                ans = min(ans, abs(curAnd - k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297397.0
}