{
    "username": "akayan",
    "submission": "class Solution {\n  fun numberOfSubstrings(s: String): Int {\n    val clumtive0 = IntArray(s.length + 1) { 0 }\n    val clumtive1 = IntArray(s.length + 1) { 0 }\n    for (i in s.indices) {\n      clumtive0[i + 1] = clumtive0[i] + if (s[i] == '0') 1 else 0\n      clumtive1[i + 1] = clumtive1[i] + if (s[i] == '1') 1 else 0\n    }\n    var sum = 0\n    val nextZero = TreeSet<Int>()\n    for (i in s.indices) {\n      if (s[i] == '0') {\n        nextZero.add(i)\n      }\n    }\n    for (i in s.indices) {\n      var count0 = 0\n      var count1 = 0\n      var j = i\n      while (j < s.length) {\n        if (s[j] == '0') count0++\n        else count1++\n        val count02 = count0 * count0\n        if (count02 <= count1) {\n          sum++\n        }\n        if (count02 < count1) {\n          val next = nextZero.higher(j)\n          if (next == null) {\n            sum += s.length - j - 1\n            break\n          } else {\n            sum += next - j - 1\n            count1 += next - j - 1\n            j = next\n          }\n        } else if (count02 > count1) {\n          val diff = count02 - count1\n          val nextJ = minOf(diff+j, s.length)\n          count0 = count0 + clumtive0[nextJ] - clumtive0[j+1]\n          count1 = count1 + clumtive1[nextJ] - clumtive1[j+1]\n          j = nextJ\n        } else {\n          j++\n        }\n      }\n    }\n    return sum\n  }\n}",
    "submit_ts": "1722137508",
    "subm_id": "1335765769"
}