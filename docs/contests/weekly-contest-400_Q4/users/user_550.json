{
    "username": "yangxm",
    "submission": "constexpr int MAXN = 100010;\nconstexpr int MAXM = 20;\nconstexpr int INF = 0x3F3F3F3F;\n\nstruct RMQ {\n  int c[MAXM][MAXN], w[MAXN];\n  \n  void Init(const int* a, int n) {\n    w[0] = -1;\n    for (int i = 1; i <= n; ++i) {\n      w[i] = (i & (i - 1)) ? w[i - 1] : w[i - 1] + 1;\n    }\n    for (int i = 0; i < n; ++i) {\n      c[0][i] = a[i];\n    }\n    for (int d = 1; (1 << d) <= n; ++d) {\n      for (int i = 0; i + (1 << d) <= n; ++i) {\n        c[d][i] = (c[d - 1][i] & c[d - 1][i + (1 << (d - 1))]);\n      }\n    }\n  }\n  \n  int Query(int l, int r) const {\n    int d = w[r - l];\n    return (c[d][l] & c[d][r - (1 << d)]);\n  }\n} rmq;\n\nint Calc(int n, int x) {\n  int l = 0, r = n, ret = n;\n  while (l < r) {\n    int mid = l + (r - l) / 2;\n    if (rmq.Query(mid, n) >= x) {\n      ret = mid;\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  return ret;\n}\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n      int n = nums.size(), ret = INF;\n      rmq.Init(nums.data(), n);\n      for (int i = 1; i <= n; ++i) {\n        int p = Calc(i, k);\n        if (p < i) {\n          int l = rmq.Query(p, i) - k;\n          int r = p > 0 ? k - rmq.Query(p - 1, i) : INF;\n          ret = min({ret, l, r});\n        } else {\n          ret = min(ret, k - nums[i - 1]);\n        }\n      }\n      return ret;\n    }\n};",
    "submit_ts": 1717298522.0
}