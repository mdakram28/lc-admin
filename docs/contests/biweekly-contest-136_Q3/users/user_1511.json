{
    "username": "BeeMaxi",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < m / 2; ++i) {\n            for(int j = 0; j < n / 2; ++j) {\n                vector<int> cnt(2, 0);                \n                ++cnt[grid[i][j]];\n                ++cnt[grid[m-i-1][j]];\n                ++cnt[grid[i][n-j-1]];\n                ++cnt[grid[m-i-1][n-j-1]];\n                ans += min(cnt[0], cnt[1]);\n            }\n        }\n        \n        int cntOnePair = 0, cntOneDiff = 0;\n        if(m % 2 == 1) {\n            int i = m / 2;\n            int l = 0, r = n-1;\n            while(l < r) {\n                if(grid[i][l] != grid[i][r]){\n                    ++ans;\n                    ++cntOneDiff;\n                }\n                else \n                    cntOnePair += (grid[i][l] == 1 ? 2 : 0);\n                \n                ++l, --r;\n            }\n        }\n        \n        if(n % 2 == 1) {\n            int j = n / 2;\n            int l = 0, r = m-1;\n            while(l < r) {\n                if(grid[l][j] != grid[r][j]) {\n                    ++ans;\n                    ++cntOneDiff;\n                }\n                else \n                    cntOnePair += (grid[l][j] == 1 ? 2 : 0);\n\n                ++l, --r;\n            }\n        }\n        \n        bool center = (m % 2 == 1) && (n % 2 == 1);\n        \n        if(cntOnePair % 4 == 2 && cntOneDiff == 0) {\n            ans += 2;\n        }\n        \n        if(center && (grid[m/2][n/2] == 1)) {           \n            ++ans;        \n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722699089",
    "subm_id": "1343201135"
}