{
    "username": "eter_nally",
    "submission": "class Solution {\npublic:\n   struct tree{\n    int l,r,sum,add;\n   }tr[1000000];\n  void up(int u){\n    tr[u].sum=tr[u<<1].sum+tr[u<<1|1].sum;\n   }\n   void down(int u){\n    if(tr[u].add){\n        tr[u<<1].sum=tr[u<<1].r-tr[u<<1].l+1;\n        tr[u<<1|1].sum=tr[u<<1|1].r-tr[u<<1|1].l+1;\n        tr[u<<1].add=tr[u<<1|1].add=1;\n        tr[u].add=0;\n    }\n   }\n   void build(int u,int l,int r){\n    tr[u].l=l;tr[u].r=r;\n    if(l==r){tr[u].sum=0;return;}\n    int mid=l+r>>1;\n    build(u<<1,l,mid);build(u<<1|1,mid+1,r);\n   }\n    void change(int u,int l,int r){\n        if(tr[u].l>=l&&tr[u].r<=r){\n            tr[u].sum=tr[u].r-tr[u].l+1;\n            tr[u].add=1;\n            return;\n        }\n        down(u);\n        int mid=tr[u].l+tr[u].r>>1;\n        if(l<=mid)change(u<<1,l,r);\n        if(r>mid)change(u<<1|1,l,r);\n        up(u);\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        \n        vector<int>ans;\n        ans.resize(queries.size());\n        build(1,1,n-1);\n        for(int i=0;i<queries.size();i++){\n            int x=queries[i][0];int y=queries[i][1];\n            change(1,x+1,y-1);\n           \n            ans[i]=n-1-tr[1].sum;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743534",
    "subm_id": "552351367"
}