{
    "username": "Vatsal_04V",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        int n = nums.length;\n        int count = 0;\n        for(int i=0;i<nums.length-1;i++){\n            if(nums[i]!=nums[i+1]){\n                count++;\n            }\n        }\n        if(count<=k) return n;\n        int[] max = new int[k+1];\n        Arrays.fill(max,1);\n        int[] vis = new int[n];\n        Arrays.fill(vis,-1);\n        HashMap<Integer,Integer> map = new HashMap<>();\n        for(int i=0;i<n;i++){\n            if(!map.containsKey(nums[i])){\n                map.put(nums[i],i+1);\n            }else{\n                vis[i] = map.get(nums[i])-1;\n                map.put(nums[i],i+1);\n            }\n        }\n        int[][] dp = new int[n][k+1];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<=k;j++){\n                dp[i][j] = 1;\n            }\n        }\n        for(int i=1;i<n;i++){\n            for(int j=k-1;j>=0;j--){\n                dp[i][j+1] = Math.max(dp[i][j+1],1+max[j]);\n                max[j+1] = Math.max(max[j+1],dp[i][j+1]);\n            }\n            if(vis[i]!=-1){\n                int a = vis[i];\n                for(int j=0;j<=k;j++){\n                    dp[i][j] = Math.max(dp[i][j],1+dp[a][j]);\n                    max[j] = Math.max(dp[i][j],max[j]);\n                }\n            }\n        }\n        int ans = 1;\n        for(int i=0;i<=k;i++){\n            ans = Math.max(ans,max[i]);\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1717861594.0
}