{
    "username": "mgups2002",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCuts: List[int], verticalCuts: List[int]) -> int:\n        horizontalCuts.sort(reverse=True)\n        verticalCuts.sort(reverse=True)\n\n        hSeg, vSeg = 1, 1\n        i, j = 0, 0\n        totalCost = 0\n\n        while i < len(horizontalCuts) and j < len(verticalCuts):\n            if not (horizontalCuts[i] <= verticalCuts[j]):\n                totalCost += horizontalCuts[i] * vSeg\n                hSeg += 1\n                i += 1\n            else:\n                totalCost += verticalCuts[j] * hSeg\n                vSeg += 1\n                j += 1\n\n        while i < len(horizontalCuts):\n            totalCost += horizontalCuts[i] * vSeg\n            i += 1\n\n        while j < len(verticalCuts):\n            totalCost += verticalCuts[j] * hSeg\n            j += 1\n\n        return totalCost\n",
    "submit_ts": "1720926086",
    "subm_id": "1320275545"
}