{
    "username": "sserxhs",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\ntemplate <class T, size_t size=tuple_size<T>::value>\nstring to_debug(T, string s=\"\")\n\trequires(not ranges::range<T>);\nstring to_debug(auto x)\n\trequires requires(ostream &os) { os<<x; }\n{\n\treturn static_cast<ostringstream>(ostringstream()<<x).str();\n}\nstring to_debug(ranges::range auto x, string s=\"\")\n\trequires(not is_same_v<decltype(x), string>)\n{\n\tfor (auto xi:x) s+=\", \"+to_debug(xi);\n\n\treturn \"[\"+s.substr(s.empty()?0:2)+\"]\";\n}\ntemplate <class T, size_t size>\nstring to_debug(T x, string s)\n\trequires(not ranges::range<T>)\n{\n\t[&] <size_t... I>(index_sequence<I...>) { ((s+=\", \"+to_debug(get<I>(x))), ...); }(make_index_sequence<size>());\n\treturn \"(\"+s.substr(s.empty()?0:2)+\")\";\n}\n#define dbg(...) cout << __LINE__ << \": (\" #__VA_ARGS__ \") = \" << to_debug(tuple(__VA_ARGS__)) << endl\ntemplate<typename T1, typename T2> istream &operator>>(istream &cin, pair<T1, T2> &a) { return cin>>a.first>>a.second; }\ntemplate<typename T1> istream &operator>>(istream &cin, vector<T1> &a) { for (auto &x:a) cin>>x; return cin; }\ntemplate<typename T1> istream &operator>>(istream &cin, valarray<T1> &a) { for (auto &x:a) cin>>x; return cin; }\ntemplate<typename T1, typename T2> ostream &operator<<(ostream &cout, const pair<T1, T2> &a) { return cout<<a.first<<' '<<a.second; }\ntemplate<typename T1, typename T2> ostream &operator<<(ostream &cout, const vector<pair<T1, T2>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\ntemplate<typename T1> ostream &operator<<(ostream &cout, const vector<T1> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\ntemplate<typename T1, typename T2> bool cmin(T1 &x, const T2 &y) { if (y<x) { x=y; return 1; } return 0; }\ntemplate<typename T1, typename T2> bool cmax(T1 &x, const T2 &y) { if (x<y) { x=y; return 1; } return 0; }\ntemplate<typename T1> vector<T1> range(T1 l, T1 r, T1 step=1) { assert(step>0); int n=(r-l+step-1)/step, i; vector<T1> res(n); for (i=0; i<n; i++) res[i]=l+step*i; return res; }\ntemplate<typename T1> basic_string<T1> operator*(const basic_string<T1> &s, int m) { auto r=s; m*=s.size(); r.resize(m); for (int i=s.size(); i<m; i++) r[i]=r[i-s.size()]; return r; }\ntypedef unsigned ui;\ntypedef long long ll;\n#define all(x) (x).begin(), (x).end()\ntemplate<typename typC> struct bit\n{\n\tvector<typC> a;\n\tint n;\n\tbit() { }\n\tbit(int nn):n(nn), a(nn+1) { }\n\ttemplate<typename T> bit(int nn, T *b):n(nn), a(nn+1)\n\t{\n\t\tfor (int i=1; i<=n; i++) a[i]=b[i];\n\t\tfor (int i=1; i<=n; i++) if (i+(i&-i)<=n) a[i+(i&-i)]+=a[i];\n\t}\n\tvoid add(int x, typC y)\n\t{\n\t\t++x;\n\t\t//cerr<<\"add \"<<x<<\" by \"<<y<<endl;\n\t\tassert(1<=x&&x<=n);\n\t\ta[x]+=y;\n\t\twhile ((x+=x&-x)<=n) a[x]+=y;\n\t}\n\ttypC sum(int x)\n\t{\n\t\t++x;\n\t\t//cerr<<\"sum \"<<x;\n\t\tassert(0<=x&&x<=n);\n\t\ttypC r=a[x];\n\t\twhile (x^=x&-x) r+=a[x];\n\t\t//cerr<<\"= \"<<r<<endl;\n\t\treturn r;\n\t}\n\ttypC sum(int x, int y)\n\t{\n\t\treturn sum(y)-sum(x-1);\n\t}\n};\nclass Solution\n{\npublic:\n\tvector<int> countOfPeaks(vector<int> &a, vector<vector<int>> &qs)\n\t{\n\t\tint n=a.size(), i;\n\t\tbit<int> s(n);\n\t\tfor (i=1; i+1<n; i++) if (a[i]>a[i-1]&&a[i]>a[i+1])\n\t\t{\n\t\t\ts.add(i, 1);\n\t\t}\n\t\tvector<int> ans;\n\t\tauto del=[&](int i)\n\t\t\t{\n\t\t\t\tif (i>0&&i+1<n&&a[i]>a[i-1]&&a[i]>a[i+1])\n\t\t\t\t{\n\t\t\t\t\ts.add(i, -1);\n\t\t\t\t}\n\t\t\t};\n\t\tauto add=[&](int i)\n\t\t\t{\n\t\t\t\tif (i>0&&i+1<n&&a[i]>a[i-1]&&a[i]>a[i+1])\n\t\t\t\t{\n\t\t\t\t\ts.add(i, 1);\n\t\t\t\t}\n\t\t\t};\n\t\tfor (auto v:qs)\n\t\t{\n\t\t\tif (v[0]==1)\n\t\t\t{\n\t\t\t\tint l=v[1], r=v[2];\n\t\t\t\tif (l==r) ans.push_back(0);\n\t\t\t\telse ans.push_back(s.sum(l+1, r-1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint i=v[1], x=v[2];\n\t\t\t\tdel(i-1), del(i), del(i+1);\n\t\t\t\ta[i]=x;\n\t\t\t\tadd(i-1), add(i), add(i+1);\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n};\n",
    "submit_ts": 1718505523.0
}