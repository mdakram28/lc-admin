{
    "username": "Adityamishra3648",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int m = queries.length;\n        int[] ans = new int[m];\n        TreeSet<Integer> st = new TreeSet<>();\n        for(int i =0;i<n;i++)\n        st.add(i);\n        int idx = 0;;\n        for(int[] i:queries){\n            // int value = i[1]-1;\n            // Integer lowerBound = st.floor(value);\n            // while(lowerBound!=null && lowerBound!=(i[1]-1)){\n            //     st.remove(lowerBound);\n            //     lowerBound = st.floor(value);   \n            // }\n            int start = i[0]+1;\n            int end = i[1];\n        SortedSet<Integer> subSet = st.subSet(start, true, end, false);\n\n        // Iterate over the subset and remove each element from the original set\n        Iterator<Integer> iterator = subSet.iterator();\n        while (iterator.hasNext()) {\n            iterator.next();\n            iterator.remove();\n        }\n        // for(int l:st)System.out.print(l+\" \");\n        // System.out.println();\n\n            ans[idx] = st.size()-1; \n            idx++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722741547",
    "subm_id": "1343747649"
}