{
    "username": "noob_18",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n\n    // for (int start = 0; start < n; ++start) {\n    //     int andValue = nums[start];\n    //     if (andValue == K) {\n    //         count++;\n    //     }\n\n    //     for (int end = start + 1; end < n; ++end) {\n    //         andValue &= nums[end];\n    //         if (andValue == K) {\n    //             count++;\n    //         } else if (andValue < K) {\n    //             break;\n    //         }\n    //     }\n    // }\n\n    // return count;\n    map<long long , long long>cache ;\n    for(int i=0;i<n;i++){\n        map<long long,long long>curr_cache ;\n        if(nums[i]==k) count ++ ;\n        curr_cache[nums[i]] = 1 ;\n        for(auto it:cache){\n            long long val = it.first & nums[i] ;\n            if(val==k) count += it.second ;\n            curr_cache[val] += it.second ;\n        }\n        cache = curr_cache ;\n    }\n    return count ;\n    }\n};",
    "submit_ts": "1720280333",
    "subm_id": "1311785472"
}