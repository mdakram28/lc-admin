{
    "username": "Citypop",
    "submission": "class Solution {\n    const int INF = 2e9;\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        std::vector<int> a(n);\n        std::vector<int> b(n);\n        for(int i = 0; i < n; i++) {\n            a[i] = points[i][0] + points[i][1];\n            b[i] = points[i][0] - points[i][1];\n        }\n        \n        std::sort(a.begin(), a.end());\n        std::sort(b.begin(), b.end());\n        \n        int ans = INF;\n        for(int i = 0; i < n; i++) {\n            int x = points[i][0] + points[i][1];\n            int y = points[i][0] - points[i][1];\n            \n            // max(a.back() - a.front(), b.back() - b.front());\n            int max_v = -INF;\n            if(x == a.back()) {\n                max_v = a[n - 2] - a.front();\n            } else if(x == a.front()) {\n                max_v = a.back() - a[1];\n            } else {\n                max_v = a.back() - a.front();\n            }\n            \n            if(y == b.back()) {\n                max_v = std::max(max_v, b[n - 2] - b.front());\n            } else if(y == b.front()) {\n                max_v = std::max(max_v, b.back() - b[1]);\n            } else {\n                max_v = std::max(max_v, b.back() - b.front());\n            }\n            \n            ans = std::min(ans, max_v);\n        }\n        \n        return ans;\n    }\n};"
}