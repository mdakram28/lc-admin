{
    "username": "chessnazar2000",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int> v1, v2;\n        int ss, sd;\n        for(int i = 0; i < n; i++){\n            ss = points[i][0] + points[i][1];\n            sd = points[i][0] - points[i][1];\n            v1.insert(ss);\n            v2.insert(sd);\n        }\n        int ans = max(*(--v1.end()) - *(v1.begin()), *(--v2.end()) - *(v2.begin()));\n        for(int i = 0; i < n; i++){\n            ss = points[i][0] + points[i][1];\n            sd = points[i][0] - points[i][1];\n            v1.erase(v1.find(ss));\n            v2.erase(v2.find(sd));\n            ans = min(ans, max(*(--v1.end()) - *(v1.begin()), *(--v2.end()) - *(v2.begin())));\n            v1.insert(ss);\n            v2.insert(sd);\n        }\n        \n        return ans;\n    }\n};"
}