{
    "username": "eyu-g",
    "submission": "using VI = vector<int>;\nclass Solution {\n    VI tr, mk;\n    void mt(int p) {\n        tr[p] = tr[p * 2] + tr[p * 2 + 1];\n    }\n    void pushDown(int p, int l, int r) {\n        if (mk[p] == -1) {\n            return;\n        }\n        int p0 = p * 2, p1 = p * 2 + 1;\n        int m = (l + r) / 2, v = mk[p];\n        mk[p0] = mk[p1] = v;\n        tr[p0] = (m - l + 1) * v;\n        tr[p1] = (r - m) * v;\n        mk[p] = -1;\n        return;\n    }\n    void build(int p, int l, int r, vector<int> &s) {\n        if (l == r) {\n            tr[p] = s[l];\n            return;\n        }\n        int m = (l + r) / 2;\n        build(p * 2, l, m, s);\n        build(p * 2 + 1, m + 1, r, s);\n        mt(p);\n    }\n    void update(int p, int l, int r, int x, int v) {\n        if (r < x || l > x) {\n            return;\n        }\n        if (l == r) {\n            tr[p] = v;\n            return;\n        }\n        // pushDown(p, l, r);\n        int m = (l + r) / 2;\n        update(p * 2, l, m, x, v);\n        update(p * 2 + 1, m + 1, r, x, v);\n        mt(p);\n    }\n    int query(int p, int l, int r, int L, int R) {\n        if (r < L || l > R || l > r) {\n            return 0;\n        }\n        if (L <= l && r <= R) {\n            return tr[p];\n        }\n        // pushDown(p, l, r);\n        int m = (l + r) / 2;\n        int res = query(p * 2, l, m, L, R);\n        res += query(p * 2 + 1, m + 1, r, L, R);\n        mt(p);\n        return res;\n    }\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> res;\n        int l = nums.size();\n        vector<int> s(l);\n        auto ck = [&](int i)->bool {\n            if (i == 0 || i == l - 1) {\n                return false;\n            }\n            return nums[i] > nums[i - 1] && nums[i] > nums[i + 1]; \n        };\n        for (int i = 1; i < l - 1; i++) {\n            s[i] = ck(i);\n        }\n        tr.resize(l * 4);\n        build(1, 0, l - 1, s);\n        auto ck2 = [&](int i)->void {\n            if (i < 0 || i == l) { return; }\n            int t = ck(i) ? 1 : 0;\n            if (s[i] != t) {\n                update(1, 0, l - 1, i, t);\n                s[i] = t;\n            }\n        };\n        int i;\n        for (auto & q : queries) {\n            if (q[0] == 2) {\n                int i = q[1];\n                nums[i] = q[2]; \n                ck2(i - 1);\n                ck2(i);\n                ck2(i + 1);\n            } else {\n                res.push_back(query(1, 0, l - 1, q[1] + 1, q[2] - 1));\n            }\n        }\n\n        // for (int i : s) cout << i << ' '; cout << endl;\n        return res;\n    }\n};",
    "submit_ts": 1718506800.0
}