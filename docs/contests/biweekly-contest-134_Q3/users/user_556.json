{
    "username": "Ayushsrivastava22",
    "submission": "class Solution {\n     /* boolean isAlternating(int[] arr, int start, int k,int n) {\n            for (int i = 0; i < k; i++) {\n                if (arr[(start + i) % n] == arr[(start + (i + 1) % k) % n]) {\n                    return false;\n                }\n            }\n            return true;\n        }*/\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n      List<Integer> a = new ArrayList<>();\n        \n       \n        for (int ele : colors) {\n            a.add(ele);\n        }\n        \n       \n        for (int i = 0; i < k - 1; i++) {\n            a.add(colors[i]);\n        }\n        \n        int ans = 0;\n        \n        for (int i = 0; i < a.size(); i++) {\n            int count = 1;\n            \n            for (int j = i + 1; j < a.size(); j++) {\n                if (!a.get(j).equals(a.get(j - 1))) {\n                    count++;\n                } else {\n                    i = j - 1;\n                    break;\n                }\n                \n                if (j == a.size() - 1) {\n                    i = 3 * a.size();\n                    break;\n                }\n            }\n            \n            ans += Math.max(0, count - k + 1);\n        }\n        \n        return ans;\n        \n    }\n}",
    "submit_ts": "1720278482",
    "subm_id": "1311711068"
}