{
    "username": "Mohit",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = -1e15;\n        \n        const long long inf = 1e15;\n        int n = board.size();\n        int m = board[0].size();\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                long long rowmax = -inf;\n                long long colmax = -inf;\n                int colidx = -1;\n                int rowidx = -1;\n\n                for (int col = 0; col < m; col++) {\n                    if (col != j && rowmax < board[i][col]) {\n                        rowmax = board[i][col];\n                        rowidx = col;\n                    }\n                }\n\n                for (int row = 0; row < n; row++) {\n                    if (row != i && colmax < board[row][j]) {\n                        colmax = board[row][j];\n                        colidx = row;\n                    }\n                }\n\n                long long temp = rowmax + colmax;\n\n                for (int k = 0; k < n; k++) {\n                    for (int l = 0; l < m; l++) {\n                        if (k != i && k != colidx && l != j && l != rowidx) {\n                            ans = max(ans, temp + board[k][l]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723907729",
    "subm_id": "1359121664"
}