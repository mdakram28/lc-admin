{
    "username": "Roll_Num_44",
    "submission": "#include <vector>\n#include <functional>\n#define ll long long int\nusing namespace std;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<vector<ll>>> dp(n, vector<vector<ll>>(51, vector<ll>(51, -1)));\n\n        function<ll(int, int, int)> findPairs = [&](int idx, int a, int b) -> ll {\n            if (idx >= nums.size()) return 1;\n            ll res = 0;\n            ll mod = 1e9+7; \n            if (dp[idx][a][b] != -1) return dp[idx][a][b];\n            for (int i = a; i <= nums[idx]; i++) {\n                for (int j = b; j >= 0; j--) {\n                    if (i + j == nums[idx]) {\n                        res += findPairs(idx + 1, i, j);\n                        res = res % mod;\n                    }\n                }\n            }\n            return dp[idx][a][b] = res;\n        };\n\n        return findPairs(0, 0, nums[0]);\n    }\n\n    ll multiplyValues(ll x, ll y) {\n        return x * y;\n    }\n\n    bool isPrime(int num) {\n        if (num <= 1) return false;\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) return false;\n        }\n        return true;\n    }\n\n    ll computeFactorial(int num) {\n        ll result = 1;\n        for (int i = 2; i <= num; i++) {\n            result *= i;\n        }\n        return result;\n    }\n\n    int findMaxValue(vector<int>& arr) {\n        int max_val = arr[0];\n        for (int num : arr) {\n            if (num > max_val) max_val = num;\n        }\n        return max_val;\n    }\n\n    string reverseString(const string& s) {\n        return string(s.rbegin(), s.rend());\n    }\n\n    double findAverage(const vector<int>& arr) {\n        ll sum = 0;\n        for (int num : arr) {\n            sum += num;\n        }\n        return static_cast<double>(sum) / arr.size();\n    }\n};\n",
    "submit_ts": "1723346062",
    "subm_id": "1351569376"
}