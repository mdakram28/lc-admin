{
    "username": "kyuukyuusha",
    "submission": "// kactl https://github.com/kth-competitive-programming/kactl\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nstruct FT {\n\tvector<ll> s;\n\tFT(int n) : s(n) {}\n\tvoid update(int pos, ll dif) { // a[pos] += dif\n\t\tfor (; pos < sz(s); pos |= pos + 1) s[pos] += dif;\n\t}\n\tll query(int pos) { // sum of values in [0, pos)\n\t\tll res = 0;\n\t\tfor (; pos > 0; pos &= pos - 1) res += s[pos-1];\n\t\treturn res;\n\t}\n\tint lower_bound(ll sum) {// min pos st sum of [0, pos] >= sum\n\t\t// Returns n if no sum is >= sum, or -1 if empty sum is.\n\t\tif (sum <= 0) return -1;\n\t\tint pos = 0;\n\t\tfor (int pw = 1 << 25; pw; pw >>= 1) {\n\t\t\tif (pos + pw <= sz(s) && s[pos + pw-1] < sum)\n\t\t\t\tpos += pw, sum -= s[pos-1];\n\t\t}\n\t\treturn pos;\n\t}\n};\n\nclass Solution {\nprivate:\n    bool IsPeak(const vector<int>&a, int i) {\n        if (i == 0) return false;\n        if (i == a.size()-1) return false;\n        if (a[i-1] < a[i] && a[i] > a[i+1]) return true;\n        return false;\n    }\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        // use fenwick tree to query peaks\n        // when you change a single value, the peaks change by at most 3????\n        // only left right and center can change\n        \n        const int n = a.size();\n        FT fenwick(n);\n        for (int i = 1; i < n-1; ++i) {\n            fenwick.update(i, IsPeak(a, i));\n        }\n        \n        vector<int> ans;\n        for (auto q : queries) {\n            const auto qt = q[0];\n            if (qt == 1) {\n                const auto l = q[1];\n                const auto r = q[2];\n                int res = fenwick.query(r) - fenwick.query(l+1);\n                if (r-l+1 <= 2) res = 0; // no peaks in 2 el query\n                ans.push_back(res);\n            } else if (qt == 2) {\n                const auto i = q[1];\n                const auto v = q[2];\n                for (int j = std::max(0, i-1); j <= std::min(n-1, i+1); ++j) fenwick.update(j, -IsPeak(a, j));\n                a[i] = v;\n                for (int j = std::max(0, i-1); j <= std::min(n-1, i+1); ++j) fenwick.update(j, IsPeak(a, j));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718506470",
    "subm_id": "1289620115"
}