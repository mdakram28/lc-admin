{
    "username": "indra_2003",
    "submission": "class Solution {\npublic:\n    static bool comp(vector<int> &a, vector<int> &b){\n        if(a[0] == b[0]) return a[1] < b[1];\n        return a[0] < b[0];\n    }\n    int minimumDistance(vector<vector<int>>& a) {\n        int n = a.size();\n        vector<pair<int, int>> sum(n), diff(n);\n        for(int i=0;i<n;i++){\n            sum[i] = {a[i][0] + a[i][1], i};\n            diff[i] = {a[i][0] - a[i][1], i};\n        }\n        sort(sum.begin(), sum.end(), greater<pair<int, int>>());\n        int idx1 = sum[0].second, idx2 = sum[n-1].second;\n        sort(diff.begin(), diff.end());\n        int ind1 = diff[0].second, ind2 = diff[n-1].second;\n        // for(auto it: diff) cout << it.first << \" \";\n        // cout << endl;\n        vector<int> v(n);\n        for(int i=0;i<n;i++){\n            if(i == idx1){\n                // cout << \"first\" << i << endl;\n                v[i] = sum[1].first - sum[n-1].first;\n            }\n            else if(i == idx2){\n                // cout << \"second\" << i << endl;\n                v[i] = sum[0].first - sum[n-2].first;\n            }\n            else{\n                // cout << \"third\" << i << endl;\n                v[i] = sum[0].first - sum[n-1].first;\n            }\n        }\n        for(int i=0;i<n;i++){\n            if(i == ind1){\n                v[i] = max(v[i], abs(diff[1].first - diff[n-1].first));\n            }\n            else if(i == ind2){\n                v[i] = max(v[i], abs(diff[0].first - diff[n-2].first));\n            }\n            else{\n                v[i] = max(v[i], abs(diff[0].first - diff[n-1].first));\n            }\n        }\n        // for(auto it: v) cout << it << \" \";\n        // cout << endl;\n        int ans = *min_element(v.begin(), v.end());\n        return ans;\n    }\n};"
}