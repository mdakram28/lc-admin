{
    "username": "Gireesh_K_L",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        int cuth = 0;\n        int cutv = 0;\n        long long int total = 0;\n        while(cuth < m - 1 && cutv < n - 1){\n            if(horizontalCut[cuth] > verticalCut[cutv]){\n                total += (1LL * horizontalCut[cuth] * (cutv + 1));\n                cuth++;\n            }\n            else{\n                total += (1LL * verticalCut[cutv] * (cuth + 1));\n                cutv++;\n            }\n        }\n        while(cuth < m - 1){\n            total += (1LL * horizontalCut[cuth] * (cutv + 1));\n            cuth++;\n        }\n        while(cutv < n - 1){\n            total += (1LL * verticalCut[cutv] * (cuth + 1));\n            cutv++;\n        }\n        return total;\n    }\n};",
    "submit_ts": "1720926296",
    "subm_id": "1320281964"
}