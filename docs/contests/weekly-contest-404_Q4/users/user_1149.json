{
    "username": "shakil-",
    "submission": "class Solution {\npublic:\n    \n    \n    vector<int>g[100000];\n    vector<int>d;\n    \n    \n    int mxval = 0;\n    void dfs(int s, int p, int dis) {\n        d[s] = dis;\n        mxval = max(mxval, d[s]);\n        for(auto to : g[s]){\n            if(to^p){\n                dfs(to, s, dis+1);\n            }\n        }\n    }\n    \n    int solve(int n) {\n        mxval = 0;\n        d.assign(n,0);\n        dfs(0,-1,0);\n        int mx = 0, start = 0;\n        for(int i=0;i<n;i++){\n            if(d[i] > mx){\n                mx = d[i];\n                start = i;\n            }\n        }    \n        // d.clear();\n        // d.assign(n,0);\n        dfs(start, -1, 0);\n        // mx = *max_element(d.begin(), d.end());\n        return mxval;\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        \n        int n = 0;\n         n = edges1.size() + 1;\n        for(int i=0;i<n;i++) g[i].clear();\n        \n        for(auto x: edges1){\n            g[x[0]].push_back(x[1]);\n            g[x[1]].push_back(x[0]);\n        }\n        \n        \n        int d1 = solve(n);\n\n        n = edges2.size() + 1;\n        for(int i=0;i<n;i++) g[i].clear();\n        \n        for(auto x: edges2){\n            g[x[0]].push_back(x[1]);\n            g[x[1]].push_back(x[0]);\n        }\n        \n\n        int d2 = solve(n);\n        int ans = max(d1,d2);\n        ans = max(ans, (d1 + 1) / 2 + (d2 + 1) / 2 + 1);\n        \n        \n        \n        return ans;\n            \n        \n    }\n};",
    "submit_ts": "1719719019",
    "subm_id": "1304431754"
}