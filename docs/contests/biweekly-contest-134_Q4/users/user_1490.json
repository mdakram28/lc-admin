{
    "username": "aryan26arora",
    "submission": "class Solution {\npublic:\nlong long countSubarrays(vector<int>& nums, int k) {\n    int n = nums.size();\n    \n//     vector<int> prefixSum;\n//     prefixSum[0] = nums[0];\n    \n//     for(int i=1; i<n; i++)\n//     {\n//         prefixSum[i] = prefixSum[i-1] & nums[i];\n//     }\n    \n    long long ans = 0;\n    unordered_map<long long, long long> mp;\n    \n    for(int i=0; i<n; i++)\n    {\n        unordered_map<long long, long long> mp2;\n        \n        if(nums[i]==k)\n        {\n            ans++;\n        }\n        \n        mp2[nums[i]] = 1;\n        \n        for(auto& [num,count]:mp)\n        {\n            long long val = num & nums[i];\n            \n            if(val==k)\n            {\n                ans = ans + count;\n            }\n            mp2[val] = mp2[val] + count;\n        }\n        mp = mp2;\n        \n    }\n    \n    return ans;\n}\n\n};",
    "submit_ts": "1720280373",
    "subm_id": "1311786941"
}