{
    "username": "aryan26arora",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> prefix(colors.size()+1,0);\n        prefix[0] = colors[0];\n        for(int i=1; i<colors.size(); i++)\n        {\n            prefix[i] = prefix[i-1] + colors[i];\n        }\n        colors.insert(colors.end(), colors.begin(), colors.begin()+k);\n        int n = colors.size();\n        int ans = 0;\n        unordered_map<string,int> mp;\n        vector<int> v(n+1, 0);\n        \n        for(int i=1; i<n; i++)\n        {\n            v[i] = v[i] + v[i-1] + abs(colors[i]-colors[i-1]);\n        }\n        \n        k = k-1;\n        \n        for(int i=k+1; i<n; i++)\n        {\n            if(v[i]-v[i-k]==k)\n            {\n                ans++;\n            }\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720281305",
    "subm_id": "1311820314"
}