{
    "username": "lovy4200",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>> &g, int s, int t1, int t2, int n) \n    {\n        queue<int> q;\n     \n        vector<int> v(n, 0);\n        q.push(s);\n        v[s] = 1;\n        \n           while (q.size()>0) \n        {\n            int u = q.front();\n            q.pop();\n               for (int w : g[u]) \n               {\n                if (!v[w])\n                 {\n                    q.push(w);\n                    v[w] = 1;\n                }\n            }\n        }\n        return v[t1] || v[t2];\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& c2) \n    {\n        vector<pair<pair<int, int>, int>> c(c2.size());\n        vector<vector<int>> g(c2.size() + 4);\n        int n = c2.size();\n        \n        for (int i = 0; i <= n-1; ++i) \n        {\n            c[i] = {{c2[i][0], c2[i][1]}, c2[i][2]};\n        }\n        \n        for (int i = 0; i < n; ++i) \n        {\n            if (c[i].first.first <= c[i].second)\n             {\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n            if (X - c[i].first.first <= c[i].second) \n            {\n                g[n + 2].push_back(i);\n                g[i].push_back(n + 2);\n            }\n            if (c[i].first.second <= c[i].second)\n             {\n                g[n + 1].push_back(i);\n                g[i].push_back(n + 1);\n            }\n            if (Y - c[i].first.second <= c[i].second) \n            {\n                g[n + 3].push_back(i);\n                g[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j)\n             {\n                double d = sqrt(pow(c[i].first.first - c[j].first.first, 2) +\n                                pow(c[i].first.second - c[j].first.second, 2));\n\n                int rs = c[i].second + c[j].second;\n                if (rs >= d) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n        \n        int b = 0;\n        b = max(b, bfs(g, n, n + 1, n + 2, n + 4));\n\n        b = max(b, bfs(g, n + 3, n + 2, n + 1, n + 4));\n        \n        return !b;\n        \n  \n    }\n};",
    "submit_ts": "1722137052",
    "subm_id": "1335752754"
}