{
    "username": "h_bugw7",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n\n#define ALL(x) (x).begin(), (x).end()\n#define FOR(i, a, b) for (int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define SORT(v) sort((v).begin(),(v).end())\n#define RSORT(v) sort((v).rbegin(),(v).rend())\n#define UN(v) SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> ppi;\ntypedef pair<int, pii> pip;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<pair<int, int>> vpii;\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\nconst int MOD = 1e9 + 7;\n\n// -------------------------------------------------------\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h = 0, v = 0;\n        ll res = 0;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                res += ll(horizontalCut[h]) * ll(v+1);\n                h++;\n            } else {\n                res += ll(verticalCut[v]) * ll(h+1);\n                v++;\n            }\n        }\n        for(; h < horizontalCut.size(); h++) res += ll(horizontalCut[h]) * ll(v+1);\n        for(; v < verticalCut.size(); v++) res += ll(verticalCut[v]) * ll(h+1);\n        return res;\n    }\n};",
    "submit_ts": "1720925711",
    "subm_id": "1320263684"
}