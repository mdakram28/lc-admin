{
    "username": "NatapongS",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        auto determine_peak = [&](int id) -> bool {\n            if (id == 0 || id == n -1) \n                return false;\n            return (nums[id] > nums[id -1] && nums[id] > nums[id +1]);\n        };\n        vector<int> bit(n);\n        auto update = [&](int id, int val) -> void {\n            if (id == 0) return;\n            for (; id < n; id += id & -id) {\n                bit[id] += val;\n            }\n        };\n        auto query = [&](int id) -> int {\n            int sum = 0;\n            for (; id > 0; id -= id & -id) {\n                sum += bit[id];\n            }\n            return sum;\n        };\n        vector<int> cur(n);\n        for (int i = 0; i < n; ++i) {\n            cur[i] = determine_peak(i);\n            if (i > 0 && cur[i] > 0) update(i, cur[i]);\n        }\n        vector<int> ans;\n        for (auto &v: queries) {\n            int t = v[0];\n            if (t == 1) {\n                auto [l ,r] = tie(v[1], v[2]);\n                if (l + 1 >= r) {\n                    ans.push_back(0);\n                } else {\n                    ans.push_back(query(r -1) - query(l));\n                }\n            } else {\n                auto [id, val] = tie(v[1], v[2]);\n                nums[id] = val;\n                for (int i = id - 1; i < id + 2; ++i) {\n                    if (i <= 0 || i >= n - 1) continue;\n                    int prev = cur[i];\n                    cur[i] = determine_peak(i);\n                    update(i, cur[i] - prev);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506458.0
}