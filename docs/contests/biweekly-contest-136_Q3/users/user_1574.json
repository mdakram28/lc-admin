{
    "username": "Kitetsu",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        def calc_center_flips() -> int:\n            flips = 0\n            if rows % 2 == 1 and cols % 2 == 1 and grid[rows // 2][cols // 2] == 1:\n                flips += 1\n            return flips\n        \n        def process_row(mid_row: int) -> List[int]:\n            left, right = 0, cols - 1\n            shift_count = [0] * 3\n            while left < right:\n                sum_ends = grid[mid_row][left] + grid[mid_row][right]\n                shift_count[sum_ends] += 1\n                left += 1\n                right -= 1\n            return shift_count\n        \n        def process_col(mid_col: int, shift_count: List[int]) -> List[int]:\n            top, bottom = 0, rows - 1\n            while top < bottom:\n                sum_ends = grid[top][mid_col] + grid[bottom][mid_col]\n                shift_count[sum_ends] += 1\n                top += 1\n                bottom -= 1\n            return shift_count\n        \n        def adjust_flips(shift_count: List[int]) -> int:\n            if shift_count[2] % 2 == 1:\n                return shift_count[1] if shift_count[1] > 0 else 2\n            return shift_count[1]\n        \n        def count_corner_flips() -> int:\n            flips = 0\n            for i in range(rows // 2):\n                for j in range(cols // 2):\n                    a, b = grid[i][j], grid[rows - 1 - i][j]\n                    c, d = grid[i][cols - 1 - j], grid[rows - 1 - i][cols - 1 - j]\n                    sum_corners = a + b + c + d\n                    if sum_corners not in {0, 4}:\n                        flips += min(sum_corners, 4 - sum_corners)\n            return flips\n        \n        rows, cols = len(grid), len(grid[0])\n        total_flips = calc_center_flips()\n        \n        shift_count = [0] * 3\n        if rows % 2 == 1:\n            shift_count = process_row(rows // 2)\n        if cols % 2 == 1:\n            shift_count = process_col(cols // 2, shift_count)\n        \n        total_flips += adjust_flips(shift_count)\n        total_flips += count_corner_flips()\n        \n        return total_flips",
    "submit_ts": "1722699456",
    "subm_id": "1343212212"
}