{
    "username": "skyinde2",
    "submission": "\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        max_req = max(r[1] for r in requirements)\n        req = {r[0]: r[1] for r in requirements}\n\n        if 0 in req and req[0] != 0:\n            return 0\n\n        dp = [0] * (max_req + 1)\n        dp_ = [0] * (max_req + 1)\n        dp[0] = 1\n\n        for i in range(1, n):\n            for k in range(len(dp)):\n                dp_[k] = 0\n                if i not in req or req[i] == k:\n                    for j in range(i + 1):\n                        if k >= i - j:\n                            dp_[k] = (dp_[k] + dp[k - (i - j)]) % 1_000_000_007\n\n            dp, dp_ = dp_, dp\n\n        return sum(dp) % 1_000_000_007",
    "submit_ts": "1719068756",
    "subm_id": "1296775833"
}