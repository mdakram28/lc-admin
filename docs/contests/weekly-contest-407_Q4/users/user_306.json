{
    "username": "hqf418",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        // 1 1 1 2 -> 2\n        // 1 -2 2 -> 5\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i ++) {\n            diff[i] = target[i] - nums[i];\n        }\n        long count = Math.abs(diff[0]);\n        for (int i = 1; i < n; i ++) {\n            if (diff[i] >= 0 && diff[i - 1] >= 0 || diff[i] <= 0 && diff[i - 1] <= 0) {\n                if (Math.abs(diff[i]) > Math.abs(diff[i - 1])) {\n                    count += Math.abs(diff[i]) - Math.abs(diff[i - 1]);\n                }\n            } else {\n                count += Math.abs(diff[i]);\n            }\n        }\n        return count;\n    }\n}",
    "submit_ts": "1721531088",
    "subm_id": "1327951880"
}