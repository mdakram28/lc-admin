{
    "username": "HARDIINE",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        cnt = [0] * (k + 1)\n        n = len(nums)\n        for i in range(n // 2):\n            y = abs(nums[i] - nums[n - 1 - i])\n            if y <= k:\n                cnt[y] += 1\n        def work(b):\n            ans = 0\n            cnt2 = 0\n            for i in range(n // 2):\n                x = abs(nums[i] - nums[n - i - 1])\n                if nums[i] > nums[n - 1 - i]:\n                    nums[i], nums[n - 1 - i] = nums[n - 1 - i], nums[i]\n                if x < b:\n                    if nums[n - i - 1] >= b and abs(nums[n - i - 1] - b) <= k:\n                        ans += 1\n                    elif abs(k - nums[i]) >= b:\n                        ans += 1\n                    else:\n                        ans += 2\n                        cnt2 += 1\n                elif x > b:\n                    if abs(nums[n - 1 - i] - k) >= b:\n                        ans += 1\n                    elif (k - nums[i]) >= b:\n                        ans += 1\n                    else:\n                        ans += 2\n                        cnt2 += 1\n            return ans\n        p = []\n        for i in range(k + 1):\n            if cnt[i] > 0:\n                p.append((cnt[i], i))\n        p.sort(key = lambda x:(-x[0], x[1]))\n        res = 10 ** 9\n        for i in range(len(p)):\n            a, b = p[i][0], p[i][1]\n            nans = work(b)\n            if res > nans:\n                res = nans\n            else:\n                break\n                        \n        return res\n            \n            \n            \n        ",
    "submit_ts": "1721490095",
    "subm_id": "548321541"
}