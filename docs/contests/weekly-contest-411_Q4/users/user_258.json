{
    "username": "Kuo-Yu Huang",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int size=s.size();\n        int c[2]={0};\n        int count[100001] = {0};\n        int end[100002] = {0};\n        for(int i=0, r=-1 ; i<size ; i++){\n            while((c[0]<=k || c[1]<=k)){\n                r++;\n                if(r>=size){\n                    r = size;\n                    break;\n                }\n                c[s[r]=='0']++;\n            }\n            count[i] = r-i;\n            end[i] = r;\n            //printf(\"%d \", end[i]);\n\n            c[s[i]=='0']--;\n        }\n        //printf(\"\\n\");\n        long long total[100002] = {0};\n        \n        total[0] = 0;\n        for(int i=0 ; i<size ; i++){\n            total[i+1] = total[i] + count[i];\n        }\n        \n        vector<long long> ans;\n        long long t, tt;\n        int index;\n        for(vector<int> temp : queries){\n            index = upper_bound(end+temp[0], end+temp[1]+1, temp[1]) - end;\n            \n            tt = temp[1]+1 - index;\n            //printf(\"%d %d %d\\n\", index, total[index]-total[temp[0]], tt);\n            t = total[index]-total[temp[0]] + (tt+1)*tt/2;\n            ans.push_back(t);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723952426",
    "subm_id": "1359795992"
}