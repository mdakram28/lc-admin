{
    "username": "VimT",
    "submission": "impl Solution {\n    pub fn number_of_alternating_groups(c: Vec<i32>, k: i32) -> i32 {\n        let k = k as usize;\n        let mut colors = c.clone();\n        colors.extend_from_slice(&c[..k - 1]);\n        let len = colors.len();\n        let mut cur_diff = 0;\n        let mut result = 0;\n        for i in 0..k - 1 {\n            if colors[i] != colors[i + 1] {\n                cur_diff += 1;\n            }\n        }\n        if cur_diff + 1 == k {\n            result += 1;\n        }\n        for i in k - 1..len - 1 {\n            if colors[i] != colors[i + 1] {\n                cur_diff += 1;\n            }\n            if colors[i + 1 - k] != colors[i + 2 - k] {\n                cur_diff -= 1;\n            }\n            if cur_diff + 1 == k {\n                result += 1;\n            }\n        }\n        result\n    }\n}",
    "submit_ts": "1720277080",
    "subm_id": "544554349"
}