{
    "username": "hyungzin",
    "submission": "import 'dart:math';\nclass Solution {\n  int minimumOperations(List<int> nums, List<int> target) {\n    int res = 0;\n    var stack = <int>[];\n    for (int i = 0; i < nums.length; i++){\n      final diff = nums[i] - target[i];\n      // print('i: ${i - 1}, res: $res, stack: $stack');\n      if (diff == 0){\n        res += stack.fold(0, (a, b) => max(a, b.abs()));\n        stack = [];\n        continue;\n      }\n      if (stack.isEmpty){\n        stack = [diff];\n        continue;\n      }\n      //  \uc74c\uc218\uc601\uc5ed\n      if (stack.last < 0){\n        if (diff < 0){\n          int mx = 0;\n          while (stack.isNotEmpty && stack.last < diff){\n            final cur = stack.removeLast();\n            mx = max(mx, diff - cur);\n          }\n          res += mx;\n          stack.add(diff);\n        } else {\n          res += stack.fold(0, (a, b) => max(a, b.abs()));\n          stack = [diff];\n        }\n        continue;\n      }\n      // \uc591\uc218\uc601\uc5ed\n      if (stack.last > 0){\n        if (diff > 0){\n          int mx = 0;\n          while (stack.isNotEmpty && stack.last > diff){\n            final cur = stack.removeLast();\n            mx = max(mx, cur - diff);\n          }\n          res += mx;\n          stack.add(diff);\n        } else {\n          res += stack.fold(0, (a, b) => max(a, b.abs()));\n          stack = [diff];\n        }\n      }\n    }\n    res += stack.fold(0, (a, b) => max(a, b.abs()));\n    return res;\n  }\n}\n// 20",
    "submit_ts": "1721533683",
    "subm_id": "1328014369"
}