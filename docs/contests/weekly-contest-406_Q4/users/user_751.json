{
    "username": "jiehui0711",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int s1 = 1, s2 = 1;\n        long ans = 0;\n        int len1 = horizontalCut.length, len2 = verticalCut.length;\n        Arrays.sort(horizontalCut); // \u76f4\u63a5\u6392\u5e8f\n        Arrays.sort(verticalCut);   // \u76f4\u63a5\u6392\u5e8f\n\n        int ind1 = len1 - 1, ind2 = len2 - 1; // \u4ece\u6700\u5927\u503c\u5f00\u59cb\u5904\u7406\n        while (ind1 >= 0 && ind2 >= 0) {\n            if (horizontalCut[ind1] > verticalCut[ind2]) {\n                ans += s1 * horizontalCut[ind1];\n                s2++;\n                ind1--;\n            } else {\n                ans += s2 * verticalCut[ind2];\n                s1++;\n                ind2--;\n            }\n        }\n        while (ind1 >= 0) {\n            ans += s1 * horizontalCut[ind1];\n            s2++;\n            ind1--;\n        }\n        while (ind2 >= 0) {\n            ans += s2 * verticalCut[ind2];\n            s1++;\n            ind2--;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925811",
    "subm_id": "1320266932"
}