{
    "username": "shrikant2104",
    "submission": "#include <vector>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts; \n        \n       \n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            cuts.push_back({horizontalCut[i], 'H'});\n        }\n        \n      \n        for (int i = 0; i < verticalCut.size(); ++i) {\n            cuts.push_back({verticalCut[i], 'V'});\n        }\n        \n      \n        sort(cuts.begin(), cuts.end(), [](pair<int, char>& a, pair<int, char>& b) {\n            return a.first > b.first;\n        });\n        \n        long long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n      \n        for (const auto& cut : cuts) {\n            int cost = cut.first;\n            char type = cut.second;\n            \n            if (type == 'H') {\n               \n                totalCost += static_cast<long long>(cost) * verticalPieces;\n                horizontalPieces++;\n            } else {\n               \n                totalCost += static_cast<long long>(cost) * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925685",
    "subm_id": "1320262881"
}