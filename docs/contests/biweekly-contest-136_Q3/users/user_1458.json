{
    "username": "51_KING",
    "submission": "class Solution {\npublic:\n    int solve(vector<vector<int>>& grid){\n          int rows = grid.size();\n    int cols = grid[0].size();\n    int flips = 0;\n \n    for (int row = 0; row < rows / 2; ++row) {\n        for (int col = 0; col < cols / 2; ++col) {\n            int zeros = 0;\n            int ones = 0;\n \n            zeros += (grid[row][col] == 0);\n            zeros += (grid[row][cols - col - 1] == 0);\n            zeros += (grid[rows - row - 1][col] == 0);\n            zeros += (grid[rows - row - 1][cols - col - 1] == 0);\n            ones = 4 - zeros;\n            \n            flips += min(zeros, ones);\n        }\n    }\n\n    int oddRowFlips = 0;\n    int oddColFlips = 0;\n    int middleOneCount = 0;\n\n    if (rows % 2 == 1) {\n        int middleRow = rows / 2;\n        for (int col = 0; col < cols / 2; ++col) {\n            if (grid[middleRow][col] != grid[middleRow][cols - col - 1]) {\n                flips++;\n                oddRowFlips++;\n            } else if (grid[middleRow][col] == 1) {\n                middleOneCount += 2;\n            }\n        }\n    }\n\n    if (cols % 2 == 1) {\n        int middleCol = cols / 2;\n        for (int row = 0; row < rows / 2; ++row) {\n            if (grid[row][middleCol] != grid[rows - row - 1][middleCol]) {\n                flips++;\n                oddColFlips++;\n            } else if (grid[row][middleCol] == 1) {\n                middleOneCount += 2;\n            }\n        }\n    }\n\n    if (rows % 2 == 1 && cols % 2 == 1) {\n        int centerElement = grid[rows / 2][cols / 2];\n        if (centerElement == 1) {\n            middleOneCount++;\n        }\n    }\n\n    int remainder = middleOneCount % 4;\n    if (remainder == 0) {\n        return flips;\n    } else if (remainder == 3) {\n        if (oddRowFlips + oddColFlips > 0) {\n            return flips + 1;\n        }\n    } else if (remainder == 2) {\n        if (oddRowFlips + oddColFlips > 0) {\n            return flips;\n        }\n    }\n    \n    return flips + remainder;\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        \n        return solve(grid);\n}\n\n};",
    "submit_ts": "1722698838",
    "subm_id": "1343193434"
}