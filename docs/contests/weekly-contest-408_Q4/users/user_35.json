{
    "username": "limausine",
    "submission": "using ll=long long;\n\nstruct uf {\n  int n;\n  vector<int> p, siz;\n  void init(int _n) {\n    n=_n;\n    p.resize(n);\n    iota(p.begin(), p.end(), 0);\n    siz.resize(n, 1);\n  }\n  int par(int u) {\n    return p[u]==u ? u : p[u]=par(p[u]);\n  }\n\n  void join(int u, int v) {\n    u=par(u);\n    v=par(v);\n    if (u==v) return;\n    if (siz[u]<siz[v]) {\n      swap(u,v);\n    }\n    p[v]=u;\n    siz[u]+=siz[v];\n  }\n\n  int cc() {\n    int res=0;\n    for (int i=0; i<n; i++) {\n      res+=(i==par(i));\n    }\n    return res;\n  }\n};\n\nclass Solution {\npublic:\n    ll sq(ll x) {\n        return x*x;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& a) {\n        int n=a.size();\n        uf uf;\n        uf.init(n+4);\n        \n        //[x,y,r]\n        for (int i=0; i<n; i++) {\n            //check 4 lines\n            //left\n            if (a[i][0]-a[i][2]<=0) uf.join(0,i+4);\n            //right\n            if (a[i][0]+a[i][2]>=X) uf.join(1,i+4);\n            //down\n            if (a[i][1]-a[i][2]<=0) uf.join(2,i+4);\n            //up\n            if (a[i][1]+a[i][2]>=Y) uf.join(3,i+4);\n            for (int j=0; j<i; j++) {\n                if (sq(a[i][0]-a[j][0])+sq(a[i][1]-a[j][1]) <= sq(a[i][2]+a[j][2])) uf.join(i+4,j+4);\n            }\n        }\n        \n        if (uf.par(0)==uf.par(1)) return false;\n        if (uf.par(0)==uf.par(2)) return false;\n        if (uf.par(1)==uf.par(3)) return false;\n        if (uf.par(2)==uf.par(3)) return false;\n        \n        return true;\n    }\n};",
    "submit_ts": "1722135438",
    "subm_id": "1335701726"
}