{
    "username": "Skyee_03",
    "submission": "#define ll long long int\n\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> child;\n    vector<pair<int, int>> indcos;\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n    Trie() {\n        root = new TrieNode();\n    }\n\n    void insert(int ind, int cos, string &s) {\n        TrieNode* node = root;\n        for (char c : s) {\n            if (!node->child[c]) {\n                node->child[c] = new TrieNode();\n            }\n            node = node->child[c];\n        }\n        node->indcos.push_back({ind, cos});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string tar, vector<string>& words, vector<int>& costs) {\n        ll n = tar.size(), m = words.size();\n        Trie t;\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        for (int i = 0; i < m; ++i) {\n            t.insert(i, costs[i], words[i]);\n        }\n        for(int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = t.root;\n            ll j = i;\n            while(j < n and node->child.count(tar[j])) {\n                node = node->child[tar[j]];\n                for(auto& pr : node->indcos) {\n                    ll cos = pr.second;\n                    ll len = words[pr.first].size();\n                    if (j-i+1>=len) {\n                        dp[j+1] = min((ll)dp[j+1], dp[i] + cos);\n                    }\n                }\n                j++;\n            }\n        }\n        if(dp[n]==INT_MAX) return -1;\n        return dp[n];\n    }\n};\n\n",
    "submit_ts": "1720324044",
    "subm_id": "1312390227"
}