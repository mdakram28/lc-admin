{
    "username": "yashp05",
    "submission": "class Solution {\npublic:\n    \n    int mxfrompar(int curr,int par , vector<vector<int>>&tree,vector<int>&temp){\n        int ans = 0;\n        for(auto &&i : tree[curr]){\n            if(i!=par){\n                int z=1;\n                if(i%2 == 0)z++;\n                ans=max(ans , z+mxfrompar(i,curr , tree , temp));\n            }\n        }\n        // if(curr%2)ans++;\n        // else ans+=2;\n        return temp[curr] = ans;\n    }\n    \n    void godown(int curr , int par, vector<vector<int>>&tree , vector<int>&ans,int val,vector<int>&temp){\n        ans[curr]=max(temp[curr] , val);\n        \n        multiset<int>ms;\n        int z=1;\n        if(curr%2==0)z++;\n        ms.insert(val);\n        for(auto &&i : tree[curr]){\n            if(i!=par){\n                int k = 1;\n                if(i%2==0)k++;\n                ms.insert(temp[i]+k);\n            }\n        }\n        \n        for(auto &&i:tree[curr]){\n            if(i!=par){\n                int k = 1;\n                if(i%2==0)k++;\n                ms.erase(ms.lower_bound(temp[i] + k));\n                godown(i,curr,tree,ans,(*--ms.end()) + z, temp);\n                ms.insert(temp[i] + k);\n            }\n        }\n        \n        return;\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size();\n        n++;\n        vector<vector<int>>tree(n);\n        for(int i=0;i<edges.size();i++){\n            tree[edges[i][0]].push_back(edges[i][1]);\n            tree[edges[i][1]].push_back(edges[i][0]);\n        }\n        vector<int>temp(n,0);\n        mxfrompar(0,-1,tree,temp);\n        \n        vector<int>ans(n,0);\n        \n        //parent=0;\n        godown(0,-1,tree,ans,0,temp);\n        ans[0]=temp[0];\n        return ans;\n    }\n};",
    "submit_ts": "1722699922",
    "subm_id": "1343226375"
}