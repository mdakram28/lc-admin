{
    "username": "algo_maniac",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, char>> v;\n        for(int i=0; i<horizontalCut.size(); i++){\n            v.push_back({horizontalCut[i], 'H'});\n        }\n        for(int i=0; i<verticalCut.size(); i++){\n            v.push_back({verticalCut[i], 'V'});\n        }\n        sort(v.begin(), v.end());\n        reverse(v.begin(), v.end());\n        long long ans=0, ver_cuts=0, hor_cuts=0;\n        for(auto it:v){\n            if(it.second=='V'){\n                ans+=it.first*(hor_cuts+1);\n                ver_cuts++;\n            }\n            else{\n                ans+=it.first*(ver_cuts+1);\n                hor_cuts++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926218",
    "subm_id": "1320279462"
}