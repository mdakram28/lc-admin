{
    "username": "twoplusthree",
    "submission": "class Solution{\npublic:\n  int minimumDiameterAfterMerge(vector<vector<int>>& ed1,vector<vector<int>>& ed2){\n    int n=(int)ed1.size()+1;\n    int m=(int)ed2.size()+1;\n    vector<int> adj1[n],adj2[m];\n    for(auto &e:ed1){\n      int u=e[0];\n      int v=e[1];\n      adj1[u].push_back(v);\n      adj1[v].push_back(u);\n    }\n    for(auto &e:ed2){\n      int u=e[0];\n      int v=e[1];\n      adj2[u].push_back(v);\n      adj2[v].push_back(u);\n    }\n    int dia1,dia2,frt;\n    dia1=dia2=0;\n    int dis1[n];\n    auto dfs1=[&](auto&& self,int node,int prnt,int dst)->void{\n      dis1[node]=dst;\n      for(int chd:adj1[node]){\n        if(chd!=prnt){\n          self(self,chd,node,dst+1);\n        }\n      }\n    };\n    dfs1(dfs1,0,-1,0);\n    frt=0;\n    for(int i=1;i<n;i++){\n      if(dis1[i]>dis1[frt]){\n        frt=i;\n      }\n    }\n    dfs1(dfs1,frt,-1,0);\n    for(int i=0;i<n;i++){\n      dia1=max(dia1,dis1[i]);\n    }\n    int dis2[m];\n    auto dfs2=[&](auto&& self,int node,int prnt,int dst)->void{\n      dis2[node]=dst;\n      for(int chd:adj2[node]){\n        if(chd!=prnt){\n          self(self,chd,node,dst+1);\n        }\n      }\n    };\n    dfs2(dfs2,0,-1,0);\n    frt=0;\n    for(int i=1;i<m;i++){\n      if(dis2[i]>dis2[frt]){\n        frt=i;\n      }\n    }\n    dfs2(dfs2,frt,-1,0);\n    for(int i=0;i<m;i++){\n      dia2=max(dia2,dis2[i]);\n    }\n    // cout<<dia1<<\" \"<<dia2<<\"\\n\";\n    int ans=1+(dia1+1)/2+(dia2+1)/2;\n    return max({ans,dia1,dia2});\n  }\n};",
    "submit_ts": 1719718346.0
}