{
    "username": "raiden3030",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k+1, 0));\n          \n           for(int i = 0; i < n; i++) {\n               dp[i][0] = 1;\n           } \n        \n          for (int t = 0; t <= k; t++) {\n                \n              map<int, int> mxm;\n              map<int, int> mxl;\n              \n              for(int i = 0; i < n; i++) {\n                \n                  \n                  \n                 if(t > 0) dp[i][t] = max(dp[i][t], mxl[t-1] + 1);\n                 dp[i][t] = max(dp[i][t], mxm[nums[i]] + 1);\n                \n                 if (t > 0) mxl[t-1] = max(mxl[t-1], dp[i][t-1]);\n                  \n                 mxm[nums[i]] = max(mxm[nums[i]], dp[i][t]); \n                  \n                for (int l = t+1; l <= k; l++) {\n                    dp[i][l] = max(dp[i][l], dp[i][t]);\n                }\n             }\n          }\n        \n        \n        int mx = 1;\n        for(int i = 0; i < n; i++) {\n            mx = max(mx, dp[i][k]);\n        }\n        return mx;\n        \n    }\n};",
    "submit_ts": 1717862096.0
}