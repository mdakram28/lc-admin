{
    "username": "infinity_4321",
    "submission": "class Solution {\npublic:\n    int maxDist(vector<int> &sum, vector<int> &diff, int n, int ind)\n    {\n        int minsum, maxsum, mindiff, maxdiff;\n        bool flag = true;\n        \n        for(int i = 0; i < n; i++) {\n            if(i == ind) continue;\n            if(flag) {\n                minsum = maxsum = sum[i];\n                mindiff = maxdiff = diff[i];\n                flag = false;\n                continue;\n            }\n            minsum = min(minsum, sum[i]);\n            maxsum = max(maxsum, sum[i]);\n            mindiff = min(mindiff, diff[i]);\n            maxdiff = max(maxdiff, diff[i]);\n        }\n\n        return max(maxsum - minsum, maxdiff - mindiff);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int ans = 1e9, n = points.size();\n        \n        vector<int> sum(n), diff(n);\n        for(int i = 0; i < n; i++) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n        \n        // cout << maxDist(sum, diff, n, -1) << endl;\n        \n        int minsum, maxsum, mindiff, maxdiff;\n        minsum = maxsum = mindiff = maxdiff = 0;\n        for(int i = 0; i < n; i++) {\n            minsum = sum[minsum] <= sum[i] ? minsum : i;\n            maxsum = sum[maxsum] >= sum[i] ? maxsum : i;\n            mindiff = diff[mindiff] <= diff[i] ? mindiff : i;\n            maxdiff = diff[maxdiff] >= diff[i] ? maxdiff : i;\n        }\n        \n        // cout << max(sum[maxsum] - sum[minsum], diff[maxdiff] - diff[mindiff]) << endl;\n        \n        // cout << minsum << \" \" << maxsum << \" \" << mindiff << \" \" << maxdiff << endl;\n        \n        // Now I have to check removing these 4 indexes one by one\n        ans = min(ans, maxDist(sum, diff, n, minsum));\n        ans = min(ans, maxDist(sum, diff, n, maxsum));\n        ans = min(ans, maxDist(sum, diff, n, mindiff));\n        ans = min(ans, maxDist(sum, diff, n, maxdiff));\n        \n        return ans;\n    }\n};"
}