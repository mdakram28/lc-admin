{
    "username": "maxd-3",
    "submission": "#include<cstdio>\nusing namespace std;\nusing LL=long long;\n\nstruct Finwick\n{\n\tint n,logn,C[200005];\n\t\n\tvoid init(int x)\n\t{\n\t\tlogn=sizeof(int)*8-__builtin_clz(n=x)-1;\n\t}\n\t\n\tint sum(int x)\n\t{\n\t\tint res=0;\n\t\twhile(x)\n\t\t\tres+=C[x],x-=x&-x;\n\t\treturn res;\n\t}\n\t\n\tvoid add(int x, int d)\n\t{\n\t\twhile(x<=n)\n\t\t\tC[x]+=d,x+=x&-x;\n\t}\n\t\n\tint lower_bound(int v)\n\t{\n\t\tint sum=0,pos=0;\n\t\tfor(int i=logn;i>=0;i--)\n\t\t\tif((pos|1<<i)<=n&&sum+C[pos|1<<i]<v)\n\t\t\t\tsum+=C[pos|=1<<i];\n\t\treturn pos+1;\n\t}\n\t\n\tint upper_bound(int v)\n\t{\n\t\tint sum=0,pos=0;\n\t\tfor(int i=logn;i>=0;i--)\n\t\t\tif((pos|1<<i)<=n&&sum+C[pos|1<<i]<=v)\n\t\t\t\tsum+=C[pos|=1<<i];\n\t\treturn pos+1;\n\t}\n}F;\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        vector<int> ans;\n        vector<bool> peak(n);\n        F.init(n);\n        memset(F.C,0,sizeof(F.C));\n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1])\n                peak[i]=true,F.add(i+1,1);\n        }\n        // cout<<F.sum(3)<<endl;\n       \n        for(auto &q:queries){\n            int o=q[0],x=q[1],y=q[2];\n            if(o==2){\n                if(peak[x]){\n                    peak[x]=false,F.add(x+1,-1);\n                }\n                x--;\n                if(x>=0&&peak[x]){\n                    peak[x]=false,F.add(x+1,-1);\n                }\n                x+=2;\n                if(x<n&&peak[x]){\n                    peak[x]=false,F.add(x+1,-1);\n                }\n                x--;\n\n                nums[x]=y;\n                if(x>0&&x<n-1&&nums[x]>nums[x-1]&&nums[x]>nums[x+1])\n                {\n                    peak[x]=true,F.add(x+1,1);\n                }\n                x--;\n                if(x>0&&x<n-1&&nums[x]>nums[x-1]&&nums[x]>nums[x+1])\n                {\n                    peak[x]=true,F.add(x+1,1);\n                }\n                x+=2;\n                if(x>0&&x<n-1&&nums[x]>nums[x-1]&&nums[x]>nums[x+1])\n                {\n                    peak[x]=true,F.add(x+1,1);\n                }\n            }else{\n                int res = F.sum(y+1)-F.sum(x);\n                // cout<<F.sum(y+1)<<endl;\n                if(peak[x])\n                    res--;\n                if(x!=y&&peak[y])\n                    res--;\n                ans.emplace_back(res);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507128.0
}