{
    "username": "RewarBot",
    "submission": "    class Solution {\n        public long maximumValueSum(int[][] board) {\n            List<List<List<Integer>>> l = new ArrayList<>();\n            long ans = Long.MIN_VALUE;\n            for(int i = 0; i < board.length; i++) {\n                l.add(new ArrayList<>());\n                for(int j = 0; j < board[0].length; j++){\n                    l.get(i).add(List.of(board[i][j], j));\n                }\n            }\n            for(int i = 0; i < l.size(); i++){\n                l.get(i).sort(new Comparator<List<Integer>>() {\n                    @Override\n                    public int compare(List<Integer> o1, List<Integer> o2) {\n                        return o2.get(0) - o1.get(0);\n                    }\n                });\n            }\n            System.out.println(l);\n            for(int i = 0; i < l.size(); i++) {\n                for(int j = i-1; j>= 0; j--) {\n                    for(int k = j-1; k >= 0; k--) {\n                        ans = Math.max(calculateAns(l.get(i), l.get(j), l.get(k)), ans);\n                    }\n                }\n            }\n\n            return ans;\n\n        }\n\n        long calculateAns(List<List<Integer>> l1, List<List<Integer>> l2, List<List<Integer>> l3) {\n            long ans = Long.MIN_VALUE;\n            for(int i = 0; i< 3; i++) {\n                for(int j = 0; j < 3; j++) {\n                    for(int k = 0; k < 3; k++) {\n                        if(l1.get(i).get(1) != l2.get(j).get(1) \n                                && l1.get(i).get(1) != l3.get(k).get(1) \n                                && l2.get(j).get(1) != l3.get(k).get(1)) {\n                            ans = Math.max(ans,(long) ((long)l1.get(i).get(0) + (long)l2.get(j).get(0) + (long)l3.get(k).get(0)));\n                        }\n                    }\n                }\n            }\n            return ans;\n        }\n    }\n",
    "submit_ts": "1723908939",
    "subm_id": "1359173233"
}