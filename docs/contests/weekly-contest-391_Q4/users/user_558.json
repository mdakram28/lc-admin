{
    "username": "mujian63",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ans = [[x[0],x[1],x[0] -0 + x[1] - 0,x[0]+10**8+1 - x[1],10**8+1-x[0] + x[1], 10**8+1 - x[0] + 10**8+1 - x[1]]  for x in points]\n        sorted_0 = sorted(ans,key = lambda x:x[2])\n        sorted_1 = sorted(ans,key = lambda x:x[3])\n        sorted_2 = sorted(ans,key = lambda x:x[4])\n        sorted_3 = sorted(ans,key = lambda x:x[5])\n        \n        sorted_list = [sorted_0,sorted_1,sorted_2,sorted_3]\n        cur_max_dis = -1\n        remove_p = set()\n        for i in range(4):\n            p0 = sorted_list[i][0]\n            p1 = sorted_list[i][-1]\n            \n            cur_dis = abs(p0[0] - p1[0]) + abs(p0[1] - p1[1])\n            if cur_dis >cur_max_dis:\n                remove_p = set()\n                remove_p.add((p0[0],p0[1]))\n                remove_p.add((p1[0],p1[1]))\n                cur_max_dis = cur_dis\n            elif cur_dis == cur_max_dis:\n                remove_p.add((p0[0],p0[1]))\n                remove_p.add((p1[0],p1[1]))\n            else:\n                continue\n        #print(remove_p,len(sorted_list))\n        \n        \n        min_dis = 10**8*2+1\n        for p_remove in list(remove_p):\n            cur_max_dis = -1\n            for l in sorted_list:\n                #print(l)\n                i,j = 0,len(l)-1\n                if l[i][0] == p_remove[0] and l[i][1] == p_remove[1]:\n                    i += 1\n                elif l[j][0] == p_remove[0] and l[j][1] == p_remove[1]:\n                    j -= 1\n                    \n                p0 = l[i]\n                p1 = l[j]\n                \n                cur_dis = abs(p0[0] - p1[0]) + abs(p0[1] - p1[1])\n                if cur_dis>cur_max_dis:\n                    #print(p_remove,l[i],l[j])\n                    cur_max_dis = cur_dis\n            \n            if cur_max_dis<min_dis:\n                min_dis = cur_max_dis\n                \n                    \n        return min_dis        \n            \n        "
}