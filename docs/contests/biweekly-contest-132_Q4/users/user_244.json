{
    "username": "g_jha37",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size(), ans = 1;\n        vector<vector<int>> dp(n, vector<int>(k + 1, 0));\n        // dp[0][0] = 1;\n        // unordered_map<int, int> max_length_k_1;\n        vector<int> maxdp_upto(n);\n        unordered_map<int, int> cnt;\n        for(int i = 0; i < n; i++){\n            dp[i][0] = 1 + cnt[nums[i]];\n            cnt[nums[i]]++;\n            // max_length_k_1[nums[i]] = 1;\n            maxdp_upto[i] = max(dp[i][0], (i > 0) ? maxdp_upto[i - 1] : 0);\n        }\n        \n        for(int kval = 1; kval <= k; kval++){\n            unordered_map<int, int> max_length_k;\n            max_length_k[nums[0]] = 1;\n            dp[0][kval] = 1;\n            for(int i = 1; i < n; i++){\n                dp[i][kval] = 1 + max(maxdp_upto[i - 1], max_length_k[nums[i]]);\n                max_length_k[nums[i]] = dp[i][kval];\n                // ans = max(ans, dp[i][kval])\n            }\n\n            for(int i = 0; i < n; i++)\n                maxdp_upto[i] = max(dp[i][kval], (i > 0) ? maxdp_upto[i - 1] : 0);\n        }\n        // for(int kk = 0; kk <= k; kk++){\n        //     for(int i = 0; i < n; i++)\n        //         cout << dp[i][kk] << \"\\t\";\n        //     cout << \"\\n\";\n        // }\n        return *max_element(maxdp_upto.begin(), maxdp_upto.end());\n        // for(int i = 1; i < n; i++){\n        //     for(int kk = 1; kk <= k; kk++){\n\n        //     }\n        // }\n    }\n};",
    "submit_ts": 1717861161.0
}