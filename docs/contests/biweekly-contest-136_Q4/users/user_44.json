{
    "username": "lucifer1006",
    "submission": "class Solution {\n  vector<vector<int>> adj;\n  vector<int> cost, parent, zt, ztt, st;\n  vector<priority_queue<pair<int, int>>> pq;\n\n  void dfs(int u, int p) {\n    parent[u] = p;\n    for (int v : adj[u]) {\n      if (v == p)\n        continue;\n      zt[v] = zt[u] + cost[v];\n      dfs(v, u);\n      pq[u].push({ztt[v] + cost[v], v});\n      ztt[u] = max(ztt[u], ztt[v] + cost[v]);\n    }\n  }\n\n  void dfs2(int u, int p, int back) {\n    for (int v : adj[u]) {\n      if (v == p)\n        continue;\n\n      int rest = 0;\n      if (pq[u].top().second == v) {\n        int tmp = pq[u].top().first;\n        pq[u].pop();\n        if (!pq[u].empty()) {\n          rest = pq[u].top().first;\n        }\n        pq[u].push({tmp, v});\n      } else {\n        rest = pq[u].top().first;\n      }\n\n      st[v] = max(ztt[v], rest + cost[u]);\n      st[v] = max(st[v], back + cost[u]);\n\n      dfs2(v, u, max(rest, back) + cost[u]);\n    }\n  }\n\npublic:\n  vector<int> timeTaken(vector<vector<int>> &edges) {\n    int n = edges.size() + 1;\n    adj.resize(n);\n    cost.resize(n);\n    for (int i = 0; i < n; i++) {\n      cost[i] = (i + 1) % 2 + 1;\n    }\n\n    for (auto &e : edges) {\n      int u = e[0], v = e[1];\n      adj[u].push_back(v);\n      adj[v].push_back(u);\n    }\n\n    pq.resize(n);\n    parent.resize(n, -1);\n    zt.resize(n, 0);\n    ztt.resize(n, 0);\n    dfs(0, -1);\n\n    st.resize(n, 0);\n    st[0] = ztt[0];\n    dfs2(0, -1, 0);\n\n    return st;\n  }\n};",
    "submit_ts": "1722697824",
    "subm_id": "552267987"
}