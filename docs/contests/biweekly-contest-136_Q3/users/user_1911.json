{
    "username": "anshulgarg398",
    "submission": "class Solution {\npublic:\n\n\n//Aliases\nusing ll= long long;\nusing lld=long double;\n\n//Constants\nconst lld pi= 3.141592653589793238;\nconst ll mod=1e9+7;\n\n\n// Mathematical functions\nll gcd(ll a, ll b){if (b == 0)return a;return gcd(b, a % b);} //__gcd \nll lcm(ll a, ll b){return (a/gcd(a,b)*b);}\nll moduloMultiplication(ll a,ll b,ll mod){ll res = 0;a %= mod;while (b){if (b & 1)res = (res + a) % mod;b >>= 1;}return res;}\nll powermod(ll x, ll y, ll p){ll res = 1;x = x % p;if (x == 0) return 0;while (y > 0){if (y & 1)res = (res*x) % p;y = y>>1;x = (x*x) % p;}return res;}\n\n\n//Bits\nstring decToBinary(int n){string s=\"\";int i = 0;while (n > 0) {s =to_string(n % 2)+s;n = n / 2;i++;}return s;}\nll binaryToDecimal(string n){string num = n;ll dec_value = 0;int base = 1;int len = num.length();for(int i = len - 1; i >= 0; i--){if (num[i] == '1')dec_value += base;base = base * 2;}return dec_value;}\n\n//Check\nbool isPrime(ll n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\nbool isPowerOfTwo(int n){if(n==0)return false;return (ceil(log2(n)) == floor(log2(n)));}\nbool isPerfectSquare(ll x){if (x >= 0) {ll sr = sqrt(x);return (sr * sr == x);}return false;}\n\n\n    int helper(int n,int m,vector<vector<int>>& grid,int &ans){\n           if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n        vector<int> shift(3, 0);\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n        if (m % 2 == 1) {\n            int a = 0, b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                ans += shift[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += shift[1];\n        }\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    ans += min(sm, 4 - sm);\n                }\n            }\n        }\n        return ans;\n    }\n      \n     int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        return helper(n,m,grid,ans);    \n    }\n};",
    "submit_ts": "1722699455",
    "subm_id": "1343212200"
}