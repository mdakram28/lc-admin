{
    "username": "qqwrv",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& a, vector<int>& b) {\n        const int n = a.size();\n\n        for (int i = 0; i < n; ++i) a[i] = b[i] - a[i];\n\n        std::vector<int> d(n + 1);\n        d[0] = a[0];\n        for (int i = 1; i < n; ++i) d[i] = a[i] - a[i - 1];\n        d[n] = -a[n - 1];\n\n        long long sum = std::accumulate(d.begin(), d.end(), 0ll);\n        // std::cout << sum << std::endl;\n\n        long long ans = 0;\n        for (int i = 0; i < d.size(); ++i) {\n            ans += std::abs(d[i]);\n        }\n        // std::cout << ans << std::endl;\n        return ans / 2;\n    }\n};",
    "submit_ts": "1721530460",
    "subm_id": "1327934163"
}