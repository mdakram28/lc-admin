{
    "username": "TleDestroyer",
    "submission": "\nclass Tv {\n    Tv[] children;\n    int value;\n    boolean isEndOfWord;\n\n    public Tv() {\n        children = new Tv[26];\n        value = Integer.MAX_VALUE;\n        isEndOfWord = false;\n    }\n}\n\nclass Tr {\n    Tv root;\n\n    public Tr() {\n        root = new Tv();\n    }\n\n    public void addWord(String word, int cost) {\n        Tv node = root;\n        for (char c : word.toCharArray()) {\n            if (node.children[c - 'a'] == null) {\n                node.children[c - 'a'] = new Tv();\n            }\n            node = node.children[c - 'a'];\n        }\n        node.value = Math.min(cost, node.value);\n        node.isEndOfWord = true;\n    }\n\n    public Tv getRoot() {\n        return root;\n    }\n}\n\n\npublic class Solution {\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        \n        Tr trie = new Tr();\n        \n        int lenn = target.length();\n        \n        int[] res = new int[lenn + 1];\n        \n        Arrays.fill(res, Integer.MAX_VALUE);\n        \n        res[0] = 0;\n\n        for (int i = 0; i < words.length; ++i) {\n            \n            trie.addWord(words[i], costs[i]);\n        }\n        \n\n        for (int i = 0; i < lenn; ++i) {\n            \n            if (res[i] == Integer.MAX_VALUE) continue;\n\n            Tv node = trie.getRoot();\n            \n            for (int j = i; j < lenn; ++j) {\n                \n                char chh = target.charAt(j);\n                \n                if (node.children[chh - 'a'] == null) break;\n                node = node.children[chh - 'a'];\n                if (node.isEndOfWord) {\n                    res[j + 1] = Math.min(res[j + 1], res[i] + node.value);\n                }\n            }\n        }\n\n        return res[lenn] == Integer.MAX_VALUE ? -1 : res[lenn];\n    }\n}",
    "submit_ts": "1720322933",
    "subm_id": "1312363003"
}