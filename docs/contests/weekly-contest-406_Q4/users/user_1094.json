{
    "username": "ktmabhi007",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hc = []\n        for i in range(len(horizontalCut)):\n            heapq.heappush(hc,-1*horizontalCut[i])\n        \n        vc = []\n\n        for i in range(len(verticalCut)):\n            heapq.heappush(vc,-1*verticalCut[i])\n        total = 0\n        hcount = vcount = 1\n        \n        while(len(hc)>0 and len(vc)>0):\n            if -1*hc[0]>-1*vc[0]:\n                total+=(-1*hc[0])*vcount\n                hcount+=1\n                heapq.heappop(hc)\n            else:\n                total+=(-1*vc[0])*hcount\n                vcount+=1\n                heapq.heappop(vc)\n        while(len(hc)>0):\n            total+=(-1*hc[0])*vcount\n            hcount+=1\n            heapq.heappop(hc)\n        while(len(vc)>0):\n            total+=(-1*vc[0])*hcount\n            vcount+=1\n            heapq.heappop(vc)\n        return total\n\n",
    "submit_ts": "1720926055",
    "subm_id": "1320274561"
}