{
    "username": "PushkarS007",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        Map<Integer, Integer> m = new HashMap<>();\n        // int max = 0;\n        for (int i = 0; i < n / 2; i++) {\n            int x = Math.abs(nums[i] - nums[n - i - 1]);\n            // max = x;\n            m.put(x, m.getOrDefault(x, 0) + 1);\n        }\n        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> {\n            if (a[1] == b[1]) {\n                return a[0] - b[0];\n            }\n            return b[1] - a[1];\n        });\n        for (int i : m.keySet()) {\n            // if (m.get(i) > m.get(max)) {\n                // max = i;\n            // }\n            pq.add(new int[] {i, m.get(i)});\n        }\n        // System.out.println(m + \" \" + \" \" + n);\n        int res = Integer.MAX_VALUE;\n        int c = 0;\n        while (!pq.isEmpty()) {\n            int[] arr = pq.poll();\n            int max = arr[0];\n            int ans = 0;\n            for (int i = 0; i < n / 2; i++) {\n                if (Math.abs(nums[i] - nums[n - i - 1]) == max) {\n                    continue;\n                }\n                int a = nums[i], b = nums[n - i - 1];\n                if (a + max <= k || a - max >= 0 || b + max <= k || b - max >= 0) {\n                    ans++;\n                } else {\n                    ans += 2;\n                }\n            }\n            // System.out.println(ans + \" \" + max);\n            c++;\n            if (ans >= res && c > 10) {\n                break;\n            }\n            res = Math.min(res, ans);\n        }\n        return res;\n    }\n}\n\n// 3, 2, 3",
    "submit_ts": "1721489094",
    "subm_id": "1327442686"
}