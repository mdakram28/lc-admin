{
    "username": "rahulkaushik1817",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0 \n\n      \n        word_cost_map = {}\n        for i, word in enumerate(words):\n            word_cost_map[word] = min(costs[i],word_cost_map.get(word,10**55))\n\n\n        for j in range(1, n + 1):\n            for word, cost in word_cost_map.items():\n                word_len = len(word)\n                if j >= word_len and target[j - word_len:j] == word:\n                    dp[j] = min(dp[j], dp[j - word_len] + cost)\n\n        return dp[n] if dp[n] != float('inf') else -1\n\n            ",
    "submit_ts": "1720324052",
    "subm_id": "1312390435"
}