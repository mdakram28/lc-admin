{
    "username": "chukostja",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m,n,res,midpairs,slack = len(grid),len(grid[0]),0,0,False\n        for y in range(m//2):\n            for x in range(n//2):\n                ones = grid[y][x]+grid[y][-1-x]+grid[-1-y][x]+grid[-1-y][-1-x]\n                res += min(ones,4-ones)\n        print(res)\n        if (n & 1):\n            for y in range(m//2):\n                midpairs += ((grid[y][n//2] == 1) and (grid[-1-y][n//2] == 1))\n                slack |= (grid[y][n//2] != grid[-1-y][n//2])\n                res += (grid[y][n//2] != grid[-1-y][n//2])\n        print(res)\n        if (m & 1):\n            for x in range(n//2):\n                midpairs += ((grid[m//2][x] == 1) and (grid[m//2][-1-x] == 1))\n                slack |= (grid[m//2][x] != grid[m//2][-1-x])\n                res += (grid[m//2][x] != grid[m//2][-1-x])\n        print(res,midpairs)\n        return res + grid[m//2][n//2] * (m & 1) * (n & 1) + 2 * (midpairs % 2) * (not slack)",
    "submit_ts": "1722698072",
    "subm_id": "1343168748"
}