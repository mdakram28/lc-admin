{
    "username": "Tejas",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int rows = board.length, cols = board[0].length;\n        int[][][] rowMax = new int[rows][3][2];\n\n        for(int r=0; r<rows; r++) {\n            int v1 = Integer.MIN_VALUE, c1 = -1;\n            int v2 = Integer.MIN_VALUE, c2 = -1;\n            int v3 = Integer.MIN_VALUE, c3 = -1;\n            for(int c=0; c<cols; c++) {\n                if(board[r][c] > v1) {\n                    v3 = v2;\n                    c3 = c2;\n                    v2 = v1;\n                    c2 = c1;\n                    v1 = board[r][c];\n                    c1 = c;\n                } else if(board[r][c] > v2) {\n                    v3 = v2;\n                    c3 = c2;\n                    v2 = board[r][c];\n                    c2 = c;\n                } else if(board[r][c] > v3) {\n                    v3 = board[r][c];\n                    c3 = c;\n                }\n            }\n\n            rowMax[r] = new int[][] {{v1, c1}, {v2, c2}, {v3, c3}};\n        }\n\n        long ans = Long.MIN_VALUE;\n        for(int r1=0; r1<rows; r1++) {\n            for(int r2=r1+1; r2<rows; r2++) {\n                for(int r3=r2+1; r3<rows; r3++) {\n                    ans = Math.max(ans, getMax(rowMax[r1], rowMax[r2], rowMax[r3]));\n                }\n            }\n        }\n\n        return ans;\n    }\n\n    long getMax(int[][] arr1, int[][] arr2, int[][] arr3) {\n        long curr = Long.MIN_VALUE;\n\n        for(int[] p1: arr1) {\n            for(int[] p2: arr2) {\n                if(p1[1] == p2[1]) continue;\n                for(int[] p3: arr3) {\n                    if(p1[1] == p3[1] || p2[1] == p3[1]) continue;\n\n                    curr = Math.max(curr, 1l * p1[0] + p2[0] + p3[0]);\n                }\n            }\n        }\n\n        return curr;\n    }\n}",
    "submit_ts": "1723907214",
    "subm_id": "1359096182"
}