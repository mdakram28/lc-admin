{
    "username": "georgelucis",
    "submission": "class Solution(object):\n    def minimumCost(self, target, words, costs):\n        \"\"\"\n        :type target: str\n        :type words: List[str]\n        :type costs: List[int]\n        :rtype: int\n        \"\"\"\n        count = defaultdict(int)\n        \n        dic = {}\n        for i in range(len(words)):\n            curr = dic\n            for c in words[i]:\n                count[c] += 1\n                if c not in curr:\n                    curr[c] = {}\n                curr = curr[c]\n            if None in curr:\n                curr[None] = min(costs[i], curr[None])\n            else:\n                curr[None] = costs[i]\n                \n        for c in target:\n            if c not in count:\n                return -1\n            \n        costs = [-1] * (len(target) + 1)\n        costs[0] = 0\n        \n        for i in range(len(target)):\n            if costs[i] != -1:\n                curr = dic\n                j = i\n                while j < len(target) and target[j] in curr:\n                    curr = curr[target[j]]\n                    j += 1\n                    if None in curr:\n                        if costs[j] == -1:\n                            costs[j] = costs[i] + curr[None]\n                        else:\n                            costs[j] = min(costs[i] + curr[None], costs[j])\n        return costs[-1]\n        ",
    "submit_ts": "1720323561",
    "subm_id": "1312378551"
}