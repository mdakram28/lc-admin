{
    "username": "vanshkunwarji41",
    "submission": "class Solution {\npublic:\nstruct Trie{\n\n    struct Node{\n        static const int length=26;\n        Node* links[length];\n        int flag=INT_MAX;\n        Node(){\n            memset(links,0,sizeof(links));\n        }\n    };\n\n    Node* root= new Node;\n\n    void insert(string &s,int c){\n        Node* r= root;\n        for(int i=0;i<s.size();i++){\n            if((r->links)[s[i]-'a']==nullptr){\n                (r->links)[s[i]-'a']=new Node();\n            }\n            r=r->links[s[i]-'a'];\n        }\n        r->flag=min(c,r->flag);\n    }\n\n    int search(string& s, int l, int dp[]){\n        Node* r=root;\n        int y=INT_MAX;\n        for(int i=l;i<s.size();i++){\n            if((r->links)[s[i]-'a']==nullptr){\n                break;\n               // return y;\n            }\n            r=r->links[s[i]-'a'];\n            if(dp[i+1]!=INT_MAX && r->flag!=INT_MAX){\n                y=min(y,(r->flag)+dp[i+1]);\n\n                //cout<<(r->flag)+dp[i+1]<<\" \"<<l<<\" \"<<i<<\" \"<<endl;\n            }\n        }\n        // cout<<y<<endl;\n        return y;\n    }\n\n};\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        for(int i=0;i<words.size();i++){\n            trie.insert(words[i],costs[i]);\n        }\n        int dp[target.size()+1];\n        dp[target.size()]=0;\n        for(int i=target.size()-1;i>=0;i--){\n            dp[i]=INT_MAX;\n            dp[i]=trie.search(target,i,dp);\n            // cout<<trie.search(target,i,dp)<<endl;\n            // cout<<dp[i]<<endl;\n        }\n        if(dp[0]==INT_MAX){\n            return -1;\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1720323186",
    "subm_id": "1312369442"
}