{
    "username": "guptamanan24",
    "submission": "class Solution {\npublic:\n    int findEnd(vector<int>& colors, int n, int j, int k) {\n    int t_j = j;\n    int t_end = t_j % n;\n    \n    while (colors[t_end] != colors[(t_end - 1 + n) % n] && t_j < n + k - 1) {\n        t_j++;\n        t_end = t_j % n;\n    }\n    \n    return t_j;\n}\n\nint calculateGroups(vector<int>& colors, int n, int i, int j, int k) {\n    return max(j - i - k + 1, 0);\n}\n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n       int numFound = 0;\n    int i = 0;\n    int j = 1;\n    int n = colors.size();\n    \n    while (j < n + k && i < n) {\n        int t_j = findEnd(colors, n, j, k);\n        numFound += calculateGroups(colors, n, i, t_j, k);\n        i = t_j;\n        j = i + 1;\n    }\n    \n    return numFound;\n    }\n};",
    "submit_ts": "1720281273",
    "subm_id": "1311819160"
}