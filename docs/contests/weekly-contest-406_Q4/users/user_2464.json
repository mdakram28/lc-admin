{
    "username": "Abhey_Raheja",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCut, vector<int>& vCut) {\n        int verBreaks = 0, horBreaks = 0;\n        long long cost = 0;\n        priority_queue<pair<int, pair<char, int>>> maxi;\n        for(int i = 0;i<hCut.size();i++){\n            maxi.push(make_pair(hCut[i], make_pair('H', i)));\n        }\n        for(int i = 0;i<vCut.size();i++){\n            maxi.push(make_pair(vCut[i], make_pair('V', i)));\n        }\n        while(!maxi.empty()){\n            pair<int, pair<char, int>> p = maxi.top();\n            maxi.pop();\n            if(p.second.first == 'H'){\n                cost+=(1+verBreaks)*p.first;\n                horBreaks++;\n            }\n            else{\n                cost+= (1+horBreaks)*p.first;\n                verBreaks++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926533",
    "subm_id": "1320289005"
}