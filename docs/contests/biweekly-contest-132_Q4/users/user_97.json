{
    "username": "ajinkya1p3",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector< vector<int> > dp(n, vector<int> (k + 1, 0)), maxx(n, vector<int> (k + 1, 0));\n        \n        for (int changes = 0; changes <= k; changes++)\n        {\n            map<int, int> fp;\n            \n            for (int pos = 0; pos < n; pos++)        \n            {\n                dp[pos][changes] = 1;\n                \n                if (changes > 0 && pos > 0)\n                    dp[pos][changes] = max(dp[pos][changes], maxx[pos - 1][changes - 1] + 1);\n                \n                if (fp.count(nums[pos]))\n                    dp[pos][changes] = max(dp[pos][changes], fp[ nums[pos] ] + 1);\n                \n                fp[nums[pos]] = dp[pos][changes];\n                \n                if (pos > 0)\n                    maxx[pos][changes] = max(maxx[pos - 1][changes], dp[pos][changes]);\n                else\n                    maxx[pos][changes] = dp[pos][changes];\n            }\n        }\n        \n        int ans = 0;\n        \n        for (int i = 0; i < n; i++)\n            ans = max(ans, dp[i][k]);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1717859344",
    "subm_id": "1281719106"
}