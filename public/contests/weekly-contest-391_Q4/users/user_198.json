{
    "username": "Kartik_garg163",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        multiset<int> st1, st2;\n        for(int i=0; i<p.size(); i++){\n            st1.insert(p[i][0]+p[i][1]);\n            st2.insert(p[i][0]-p[i][1]);\n        }\n        int ans = 1e9;\n        for(int i=0; i<p.size(); i++){\n            int sum = p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            auto it1 = st1.find(sum);\n            auto it2 = st2.find(diff);\n            st1.erase(it1);\n            st2.erase(it2);\n            int val1 = *--st1.end() - *st1.begin();\n            int val2 = *--st2.end() - *st2.begin();\n            int val = max(val1,val2);\n            ans = min(ans,val);\n            st1.insert(sum);\n            st2.insert(diff);\n        }\n        return ans;\n    }\n};"
}