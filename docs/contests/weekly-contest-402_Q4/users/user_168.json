{
    "username": "qi-dian-n",
    "submission": "\nfrom sortedcontainers import SortedList\n\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        s = SortedList()\n        n = len(nums)\n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                s.add(i)\n        ans = []\n        for op, x, y in queries:\n            if op == 1:\n                l, r = s.bisect_left(x + 1), s.bisect_left(y)\n                ans.append(max(0, r - l))\n            else:\n                xl, xr = x - 1, x + 1\n                if 1 <= x < n - 1 and nums[x] > nums[x - 1] and nums[x] > nums[x + 1]:\n                    s.remove(x)\n                if 1 <= xl < n - 1 and nums[xl] > nums[xl - 1] and nums[xl] > nums[xl + 1]:\n                    s.remove(xl)\n                if 1 <= xr < n - 1 and nums[xr] > nums[xr - 1] and nums[xr] > nums[xr + 1]:\n                    s.remove(xr)\n                nums[x] = y\n                if 1 <= x < n - 1 and nums[x] > nums[x - 1] and nums[x] > nums[x + 1]:\n                    s.add(x)\n                if 1 <= xl < n - 1 and nums[xl] > nums[xl - 1] and nums[xl] > nums[xl + 1]:\n                    s.add(xl)\n                if 1 <= xr < n - 1 and nums[xr] > nums[xr - 1] and nums[xr] > nums[xr + 1]:\n                    s.add(xr)\n            # print(op, x, y)\n            # print(nums)\n            # print(s)\n        return ans",
    "submit_ts": 1718506322.0
}