{
    "username": "mario7lorenzo",
    "submission": "class Solution {\npublic:\n    int getVal(vector<int>& countbits, int subarrsize) {\n        int n = countbits.size();\n        int res = 0;\n        int mult = 1;\n        for (int i = n-1; i >= 0; i--) {\n            res += countbits[i] < subarrsize ? 0 : mult;\n            mult <<= 1;\n        }\n        return res;\n    }\n    \n    void add(vector<int>& countbits, int n) {\n        int i = countbits.size()-1;\n        while (n > 0) {\n            countbits[i] += n%2;\n            // cout << \"countbits: \" << i << ' ' << countbits[i] << endl;\n            n /= 2;\n            i--;\n        }\n    }\n    \n    void sub(vector<int>& countbits, int n) {\n        int i = countbits.size()-1;\n        while (n > 0) {\n            countbits[i] -= n%2;\n            // cout << \"countbits: \" << i << ' ' << countbits[i] << endl;\n            n /= 2;\n            i--;\n        }\n    }\n\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> countbits(32, 0);\n        int l = 0;\n        int r = 0;\n        int curr = nums[0];\n        int res = abs(curr-k);\n        add(countbits, nums[0]);\n        while (r < n) {\n            // cout << l << ' '  << r << endl;\n            if (curr > k || l > r) {\n                r++;\n                if (r == n) {\n                    break;\n                }\n                add(countbits, nums[r]);\n            } else {\n                sub(countbits, nums[l]);\n                l++;\n            }\n            curr = getVal(countbits, r-l+1);\n            if (l <= r) {\n                // cout << curr << endl;\n                res = min(res, abs(curr-k));\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717300002.0
}