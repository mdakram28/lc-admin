{
    "username": "coleworld223",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n      int n = edges.size() + 1;\n      vector <vector <array <int, 2>>> a (n);\n      for (auto e : edges) {\n        int u = e[0], v = e[1];\n        a[u].push_back({v, (1 + (v % 2 == 0))});\n        a[v].push_back({u, (1 + (u % 2 == 0))});\n      }\n      \n      vector <array <int, 3>> dp (n, {0, 0, 0});\n      \n      auto upd = [&] (int &id, int put) -> void {\n        if (dp[id][0] < put) {\n          dp[id][0] = put;\n        }\n        sort(dp[id].begin(), dp[id].end());\n      };\n      \n      auto rem = [&] (int &id, int x) -> void {\n        for (int &y : dp[id]) {\n          if (y == x) {\n            y = 0;\n            break;\n          }\n        }\n        sort(dp[id].begin(), dp[id].end());\n      };\n      \n      auto dfs = [&] (auto &dfs, int u, int p) -> void {\n        for (auto [v, w] : a[u]) if (v != p) {\n          dfs(dfs, v, u);\n          int mv = dp[v].back();\n          upd(u, mv + w);\n        }\n      };\n      \n      dfs(dfs, 0, -1);\n      \n      vector <int> ans (n);\n      \n      auto reroot = [&] (auto &reroot, int u, int p) -> void {\n        ans[u] = dp[u][2];\n        array <int, 3> dpu = dp[u];\n        for (auto [v, w] : a[u]) if (v != p) {\n          array <int, 3> dpv = dp[v];\n          int mv = dp[v][2];\n          rem(u, mv + w);\n          int wt = 1 + (u % 2 == 0);\n          for (int x : dp[u]) {\n            upd(v, x + wt);\n          }\n          reroot(reroot, v, u);\n          dp[v] = dpv;\n          dp[u] = dpu;\n        }\n      };\n      reroot(reroot, 0, -1);\n      return ans;\n    }\n};",
    "submit_ts": "1722699474",
    "subm_id": "1343212772"
}