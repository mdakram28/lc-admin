{
    "username": "urimaj",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    long long dp[301][401] = {0};\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        long long ans = 0;\n        \n        dp[0][0] = 1;\n        sort(r.begin(), r.end());\n        vector<int> m(n, -1);\n        for (auto& q : r) m[q[0]] = q[1];\n        for (auto& q : r) {\n            int f = q[0];\n            int s = q[1];\n            if (s > f * (f + 1) / 2) return 0;\n        }\n        \n        for (int i = 1; i < n; i++) {\n            if (m[i] == -1) {\n                for (int j = 0; j <= 400; j++) {\n                    for (int k = 0; k <= i; k++) {\n                        if (j - k >= 0) dp[i][j] += dp[i - 1][j - k];\n                        dp[i][j] %= MOD;\n                    }\n                }\n            }\n            else {\n                for (int j = 0; j <= i; j++) {\n                    if (m[i] - j >= 0) dp[i][m[i]] += dp[i - 1][m[i] - j];\n                    dp[i][m[i]] %= MOD;\n                }\n            }\n        }\n        \n        for (int j = 0; j <= 400; j++) {\n            // cout << j << \" \" << dp[n - 1][j] << endl;\n            ans += dp[n - 1][j];\n            ans %= MOD;\n        }\n        return ans;\n    }\n};\n\n/*\n\n\n*/",
    "submit_ts": "1719069177",
    "subm_id": "1296788870"
}