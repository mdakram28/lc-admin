{
    "username": "robo1234",
    "submission": "class Solution {\npublic:\n    int cntfunc(vector<int>& grid){\n        int m=grid.size();\n        int cnt=0;\n        for(int i=0;i<m/2;i++){\n            if(grid[i]!=grid[m-i-1]){\n                cnt++;\n            }\n        }\n        \n        return cnt;\n        \n    }\n    int minFlips(vector<vector<int>>& grid) {\n          int n = grid.size();\n        int m = grid[0].size();\n          int ans = 0;\n        int a1=0;\n        vector<int> temp(4, 0);\n        int a2=0;\n        int i,j,k;\n        for(i=0;i<n;i++){\n            j=m-1;\n            k=0;\n            while(k<=j){\n                if(grid[i][k]!=grid[i][j]){\n                a1++;    \n                }\n                k++;\n                j--;\n            }\n        }\n        // int cttt=cntfunc(grid);\n           for(i=0;i<m;i++){\n            j=n-1;\n            k=0;\n            while(k<=j){\n                if(grid[k][i]!=grid[j][i]){\n                a2++;    \n                }\n                k++;\n                j--;\n            }\n        }\n              if (n % 2 == 1 && m % 2 == 1) \n            if (grid[n / 2][m / 2] == 1) \n                ans += 1;\n        int l,r;\n        if (n % 2 == 1) {\n             l = 0, r = m - 1;\n            while (l<r) {\n                int sum = grid[n / 2][l] + grid[n / 2][r];\n                temp[sum] ++;\n                l++;\n                r--;\n            }\n        }\n          if (m % 2 == 1) {\n             l = 0, r = n - 1;\n            while (l<r) {\n                int sum = grid[l][m / 2] + grid[r][m / 2];\n                temp[sum] ++;\n                l++;\n                r--;\n            }\n        }\n        int d= temp[2]%2;\n         if (d == 1) {\n             int pt=temp[1];\n            if (pt > 0) {\n                ans += temp[1];\n            } else {\n                ans += 2;\n            }\n        } \n        else {\n            ans += temp[1];\n        }\n             for ( i = 0; i < n / 2; i++) {\n            for ( j = 0; j < m / 2; j++) {\n                int sum =grid[i][j]+ grid[n - 1 - i][j]+ grid[i][m - 1 - j]+ grid[n - 1 - i][m - 1 - j];\n                if (sum != 0 ) \n                    if(sum!=4)\n                    ans += min(sum, 4 - sum);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699763",
    "subm_id": "1343221583"
}