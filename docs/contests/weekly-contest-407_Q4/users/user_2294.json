{
    "username": "sinnay",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long ops = 0;\n        long prevDelta = 0;\n        for (int i = 0; i < n; i++) {\n            long delta = target[i] - nums[i];\n            // System.out.println(\"prevDelta:\" + prevDelta);\n            // System.out.println(\"delta:\" + delta);\n            ops += Math.abs(delta);\n            if (delta > 0 && prevDelta > 0) {\n                ops -= Math.min(delta, prevDelta);\n            }\n            if (delta < 0 && prevDelta < 0) {\n                ops -= Math.abs(Math.max(delta, prevDelta));\n            }\n            prevDelta = delta;\n            // System.out.println(\"ops:\" + ops);\n        }\n        return ops;\n    }\n}\n\n\n/*\n1 1\n5 2\n\n1 1 1\n5 5 2\n\n1 1 1\n5 4 2\n\n\nnums = [3,5,1,2]\ntarget = [4,6,2,4]\n         [1,1,1,2]\n         \nnums = [1,3,2]\ntarget = [2,1,4]\n        [1,-2,2]\n*/",
    "submit_ts": "1721533916",
    "subm_id": "1328019536"
}