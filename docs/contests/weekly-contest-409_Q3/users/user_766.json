{
    "username": "iofu728",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        std::vector<int> res;\n        std::set<std::pair<int, int>> q;\n        int now = n - 1;\n\n        for (auto& query : queries) {\n            int ii = query[0], jj = query[1];\n            auto it = q.lower_bound({ii, jj});\n            bool flag = true;\n            if (it != q.begin()) {\n                --it;\n                if (it->first <= ii && it->second >= jj) {\n                    flag = false;\n                } else if (it->first == ii && it->second <= jj) {\n                    now += it->second - it->first - 1;\n                    q.erase(it--);\n                }\n                ++it;\n            }\n            while (it != q.end()) {\n                if (it->first <= ii && it->second >= jj) {\n                    flag = false;\n                    break;\n                }\n                if (ii <= it->first && jj >= it->second) {\n                    now += it->second - it->first - 1;\n                    it = q.erase(it);\n                } else {\n                    ++it;\n                }\n            }\n            if (flag) {\n                q.insert({ii, jj});\n                now -= jj - ii - 1;\n            }\n            res.push_back(now); \n        }\n        return res;\n    }\n};",
    "submit_ts": "1722741808",
    "subm_id": "552340589"
}