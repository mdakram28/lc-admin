{
    "username": "aaditya_21",
    "submission": "class Solution {\npublic:\n    \n     void build(int idx,int lo,int hi,int seg[],vector<int>&nums){\n        if(lo==hi){\n           seg[idx]=nums[lo];\n           return;\n        }\n        int mid=(lo+hi)>>1;\n        build(2*idx+1,lo,mid,seg,nums);\n        build(2*idx+2,mid+1,hi,seg,nums);\n        \n        seg[idx]= seg[2*idx+1] & seg[2*idx+2];\n    }\n\n    int query(int idx,int lo,int hi,int seg[],vector<int>&nums,int l,int r){\n        if(l>hi || r<lo) return INT_MAX;\n        if(lo>=l && hi<=r){\n            return seg[idx];\n        }\n        int mid=(lo+hi)>>1;\n        return query(2*idx+1,lo,mid,seg,nums,l,r) & query(2*idx+2,mid+1,hi,seg,nums,l,r);\n    }\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        int seg[4*n];\n        build(0,0,n-1,seg,nums);\n        long long ans=0;\n\n        for(int i=0;i<n;i++){\n         int l = i, r = n - 1;\nint ans1 = -1; int ans2 = -1;\nwhile(l <= r){\n\tint mid = (l + r) >> 1;\n\tint temp=query(0,0,n-1,seg,nums,i,mid);\n\tif(temp > k){\n\t\tans1 = mid;\n\t\tl = mid + 1;\n\t}\n\telse r = mid - 1;\n}\nl = i, r = n - 1;\nwhile(l <= r){\n\tint mid = (l + r) >> 1;\n\tint temp=query(0,0,n-1,seg,nums,i,mid);\n\tif(temp > k - 1){\n\t\tans2 = mid;\n\t\tl = mid + 1;\n\t}\n\telse r = mid - 1;\n}\nif(ans1 == -1 and ans2 == -1)continue;\nif(ans1 == -1){\n\tans += ans2 - i + 1;\n\tcontinue;\n}\nans += ans2 - ans1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281054",
    "subm_id": "1311811504"
}