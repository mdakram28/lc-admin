{
    "username": "sahoosambit2003",
    "submission": "class DisjointSet\n{\n\tvector<int> size,parent;\npublic:\n\tDisjointSet(int n)\n\t{\n\t\tsize.resize(n+1,1);\n\t\tparent.resize(n+1);\n\t\tfor(int i=0;i<=n;i++)\n\t\t{\n\t\t\tparent[i]=i;\n\t\t}\n\t}\n\tint findUParent(int u)\n\t{\n\t\tif(parent[u]==u)\n\t\t{\n\t\t\treturn u;\n\t\t}\n\t\treturn parent[u]=findUParent(parent[u]);\n\t}\n\tvoid unionBySize(int u,int v)\n\t{\n\t\tint ulp_u=findUParent(u);\n\t\tint ulp_v=findUParent(v);\n\t\tif(ulp_u==ulp_v) return;\n\t\tif(size[ulp_v]>size[ulp_u])\n\t\t{\n\t\t\tparent[ulp_u]=ulp_v;\n\t\t\tsize[ulp_v]+=size[ulp_u];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparent[ulp_v]=ulp_u;\n\t\t\tsize[ulp_u]+=size[ulp_v];\n\t\t}\n\t}\n};\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        DisjointSet ds(n+4);\n        \n        for(int i=0; i<n; i++)\n        {\n            long long int x1=circles[i][0];\n            long long int y1=circles[i][1];\n            long long int r1=circles[i][2];\n            for(int j=0; j<n; j++)\n            {\n                if(i == j) continue;\n                long long int x2=circles[j][0];\n                long long int y2=circles[j][1];\n                long long int r2=circles[j][2];\n                \n                long long int dc=(x2-x1)*(x2-x1) + (y2-y1)*(y2-y1);\n                long long int dr=(r2+r1)*(r2+r1);\n                \n                if(dc <= dr) ds.unionBySize(i, j);\n            }\n            if(x1-r1 <= 0) ds.unionBySize(i, n);\n            if(y1+r1 >= Y) ds.unionBySize(i, n+1);\n            if(x1+r1 >= X) ds.unionBySize(i, n+2);\n            if(y1-r1 <= 0) ds.unionBySize(i, n+3);\n        }\n        \n        if(ds.findUParent(n) == ds.findUParent(n+3)) return false;\n        if(ds.findUParent(n) == ds.findUParent(n+2)) return false;\n        if(ds.findUParent(n+1) == ds.findUParent(n+3)) return false;\n        if(ds.findUParent(n+1) == ds.findUParent(n+2)) return false;\n        \n        return true;\n    }\n};",
    "submit_ts": "1722137057",
    "subm_id": "1335752887"
}