{
    "username": "Krishi_03",
    "submission": "class Solution {\npublic:\n    int dfs(vector<vector<int>>&g,int st, int &fnode)\n    {\n        int n=g.size();\n        vector<int>dia(n,-1);\n        function<void(int,int)>dfs2 = [&](int node,int dist)\n        {\n            dia[node]=dist;\n            if(dist>dia[fnode])\n                fnode=node;\n            for(auto &it:g[node])\n            {\n                if(dia[it]==-1)\n                    dfs2(it,dist+1);\n            }\n        };\n        fnode=st;\n        dfs2(st,0);\n        return dia[fnode];\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& v1, vector<vector<int>>& v2) {\n        int n1=v1.size(),n2=v2.size();\n        ++n1;\n        ++n2;\n        vector<vector<int>>g1(n1),g2(n2);\n        for(auto &it:v1)\n        {\n            g1[it[0]].push_back(it[1]);\n            g1[it[1]].push_back(it[0]);\n        }\n        for(auto &it:v2)\n        {\n            g2[it[0]].push_back(it[1]);\n            g2[it[1]].push_back(it[0]);\n        }\n        int ver1=0;\n        dfs(g1,0,ver1);\n        int dia1=dfs(g1,ver1,ver1);\n        int ver2=0;\n        dfs(g2,0,ver2);\n        int dia2=dfs(g2,ver2,ver2);\n        cout<<dia1<<' '<<dia2<<'\\n';\n        int ans=max({dia1,dia2,(dia1+1)/2+(dia2+1)/2+1});\n        return ans;\n    }\n};",
    "submit_ts": "1719718881",
    "subm_id": "1304428397"
}