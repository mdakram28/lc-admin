{
    "username": "zzl",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        char[] ans = new char[n];\n        int m = (n + 1) / 2;\n        int[] a = new int[m];\n        int[] d = new int[n];\n        for(int i = 0, v = 1; i < n; ++i) {\n            d[i] = v % k;\n            v = d[i] * 10;\n        }\n        boolean[][] f = new boolean[m + 1][k];\n        f[m][0] = true;\n        for(int i = m - 1; i >= 0 ; --i) {\n            for(int j = 0; j < 10; ++j) {\n                for(int l = 0; l < k; ++l) {\n                    if(f[i + 1][l]) {\n                        f[i][((d[i] + d[n - 1 - i]) * j + l) % k] = true;\n                    }\n                }\n            }\n        }\n        int v = 0;\n        for(int i = 0; i < m - n % 2; ++i) {\n            for(int j = 9; j >= 0; --j) {\n                if(f[i + 1][(k - (v + (d[i] + d[n - i - 1]) * j) % k)% k]) {\n                    v = (v + (d[i] + d[n - i - 1]) * j) % k;\n                    a[i] = j;\n                    break;\n                }\n            }\n        }\n        if(n % 2 == 1) {\n            for(int i = 9; i >= 0; --i) {\n                if((d[m - 1] * i + v) % k == 0) {\n                    a[m - 1] = i;\n                    break;\n                }\n            }\n        }\n        for(int i = 0; i < n / 2 + n % 2; ++i) {\n            ans[i] = ans[n - 1 - i] = (char) ('0' + a[i]);\n        }\n        return new String(ans);\n    }\n}",
    "submit_ts": "1723952738",
    "subm_id": "556413361"
}