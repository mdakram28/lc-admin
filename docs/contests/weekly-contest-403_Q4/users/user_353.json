{
    "username": "KKKXY",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int ans = getSub(grid);\n        int m = grid.length;\n        int n = grid[0].length;\n        for (int i = 0; i < m - 1; i++) {\n            int area0 = getMin(grid, 0, i, 0, n - 1);\n            int area1 = getMin(grid, i + 1, m - 1, 0, n - 1);\n            int min0 = area0;\n            int min1 = area1;\n            for (int j = 0; j < n - 1; j++) {\n                int cur0 = getMin(grid, 0, i, 0, j) + getMin(grid, 0, i, j + 1, n - 1);\n                min0 = Math.min(min0, cur0);\n                int cur1 = getMin(grid, i + 1, m - 1, 0, j) + getMin(grid, i + 1, m -1 , j + 1, n-1);\n                min1 = Math.min(min1, cur1);\n            }\n            for (int j = 0; j < i; j++) {\n                int cur = getMin(grid, 0, j, 0, n - 1) + getMin(grid, j + 1, i, 0, n-1);\n                min0 = Math.min(min0, cur);\n            }\n            for (int j = i + 1; j < m; j++) {\n                int cur = getMin(grid, i+1, j, 0, n-1) + getMin(grid, j+1, m-1, 0, n-1);\n                min1 = Math.min(min1, cur);\n            }\n            ans = Math.min(ans, Math.min(area0 + min1, area1 + min0));\n        }\n        \n        for (int i = 0; i < n-1; i++) {\n            int area0 = getMin(grid, 0, m-1, 0, i);\n            int area1 = getMin(grid, 0, m-1, i+1, n - 1);\n            int min0 = area0;\n            int min1 = area1;\n            for (int j = 0; j < m - 1; j++) {\n                int cur0 = getMin(grid, 0, j, 0, i) + getMin(grid, j+1, m-1, 0, i);\n                min0 = Math.min(min0, cur0);\n                int cur1 = getMin(grid, 0, j, i+1, n-1) + getMin(grid, j+1, m -1 , i + 1, n-1);\n                min1 = Math.min(min1, cur1);\n            }\n            for (int j = 0; j < i; j++) {\n                int cur = getMin(grid, 0, m-1, 0, j) + getMin(grid, 0, m-1, j+1, i);\n                min0 = Math.min(min0, cur);\n            }\n            for (int j = i + 1; j < n; j++) {\n                int cur = getMin(grid, 0, m-1, i+1, j) + getMin(grid, 0, m-1, j+1, n-1);\n                min1 = Math.min(min1, cur);\n            }\n            ans = Math.min(ans, Math.min(area0 + min1, area1 + min0));\n        }\n        return ans;\n    }\n    \n    public int getMin(int[][] grid, int r0, int r1, int c0, int c1) {\n        int m = r1 - r0 + 1;\n        int n = c1 - c0 + 1;\n        int[][] g = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                g[i][j] = grid[i+r0][j+c0];\n            }\n        }\n        return getSub(g);\n    }\n    \n    public int getSub(int[][] grid) {\n        int m = grid.length;\n        if (m == 0) return 0;\n        int n = grid[0].length;\n\n        int[] row = new int[m];\n        int[] col = new int[n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                row[i] += grid[i][j];\n                col[j] += grid[i][j];\n            }\n        }\n        \n        int[] r = new int[2];\n        int[] c = new int[2];\n        for (int i = 0; i < m; i++) {\n            if (row[i] != 0) {\n                r[0] = i;\n                break;\n            }\n        }\n        for (int i = m - 1; i >= 0; i--) {\n            if (row[i] != 0) {\n                r[1] = i;\n                break;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (col[i] != 0) {\n                c[0] = i;\n                break;\n            }\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            if (col[i] != 0) {\n                c[1] = i;\n                break;\n            }\n        }\n        return (r[1] - r[0] + 1) * (c[1] - c[0] + 1);\n    }\n}",
    "submit_ts": 1719114227.0
}