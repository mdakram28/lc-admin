{
    "username": "ryanwong0127",
    "submission": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\n#define rep(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep_(i, a, b) for (int i = (a); i > (b); i--)\n#define mst(x, a) memset(x, a, sizeof(x))\n#define all(a) begin(a), end(a)\n#define lowbit(x) ((x) & (-(x)))\n#define bitcnt(x) (__builtin_popcountll(x))\n#define se second\n#define fi first\n#define pb push_back\n#define maxe max_element\n#define mine min_element\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, ll> pil;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vi> vvi;\nconstexpr static int dirs[4][2] = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};\nconstexpr static int inf = 0x3f3f3f3f, mod = 1e9 + 7;\nconst ll infl = 0x3f3f3f3f3f3f3f3fll;\ntemplate<class T> bool chmax(T &a, T b) {\n    if (a >= b) return false;\n    a = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n    if (a <= b) return false;\n    a = b; return true;\n}\ntemplate<class T> bool chsum(T &a, T b) {\n    a = (a + b + mod) % mod;\n    return 0;\n}\nll C[1001][1001];\nbool INIT = false;\nconst int N = 1e5 + 10;\nll f[N], g[N];\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        if (!INIT) {\n            INIT = true;\n            C[0][0] = 1;\n            for (int i = 1; i <= 1000; i++) {\n                C[i][0] = 1;\n                for (int j = 1; j <= i; j++) {\n                    C[i][j] = (C[i-1][j] + C[i-1][j-1]) % mod;\n                }\n            }\n            Init(1e4);\n        }\n        if (k == 0) {return 2;}\n        // if (k == 1) return 4; \n        // int p = 0, q = 0;\n        // ll sum = 0, res = 0;\n        // while ((1ll << (p+1)) - p<= k+2) {\n        //     printf(\"p = %d\\n\",p);\n        //     sum += \n        //     q = 0;\n        //     while (q <= p + 1) {\n        //         res += C[p + 1][q];\n        //         res %= mod;\n        //         q++;\n        //     }\n        //     p++;\n        // }\n        // return res;\n        ll res = 0;\n        if(k == 1 || k == 0) {\n            res++;\n        }\n        rep(i, 1, 35) {\n            ll maxE = (1ll << i);\n            if(maxE - k >= 0 && maxE - k <= i + 1) {\n                res += C[i + 1][maxE - k];\n            }\n        }\n        return res;\n    }\nprivate:\n    void Init(int n) {\n        static ll inverse[N];\n        inverse[1] = 1;\n        rep(i, 2, n){\n            inverse[i] = 1ll * (mod - mod / i) * inverse[mod % i] % mod;\n        }\n        f[0] = 1;\n        g[0] = 1;\n        rep(i, 1, n){\n            f[i] = f[i - 1] * i % mod;\n            g[i] = g[i - 1] * inverse[i] % mod;\n        }\n    }\n};",
    "submit_ts": 1716088747.0
}