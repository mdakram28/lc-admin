{
    "username": "arpitpandey992",
    "submission": "class Solution {\n   public:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> adj(n);\n        for (auto& edge : edges) {\n            adj[edge[0]].push_back(edge[1]);\n            adj[edge[1]].push_back(edge[0]);\n        }\n        vector<int> tim(n, 0);\n        auto dfs = [&](int i, int par, auto& dfs) -> int {\n            int ans = 0;\n            for (auto& x : adj[i]) {\n                if (x == par)\n                    continue;\n                int val = dfs(x, i, dfs);\n                if (x % 2 == 0)\n                    ans = max(ans, val + 2);\n                else\n                    ans = max(ans, val + 1);\n            }\n            return tim[i] = ans;\n        };\n\n        dfs(0, -1, dfs);\n        vector<int> ans(n);\n        ans[0] = tim[0];\n\n        auto dfs2 = [&](int i, int par, int upTime, auto& dfs2) -> void {\n            ans[i] = upTime;\n            int curAdd = (i % 2 == 0) ? 2 : 1;\n            unordered_map<int, int> niche;\n            multiset<int> s;\n            for (auto& x : adj[i]) {\n                if (x == par)\n                    continue;\n                niche[x] = tim[x] + (x % 2 == 0 ? 2 : 1);\n                s.insert(niche[x]);\n                ans[i] = max(ans[i], niche[x]);\n            }\n            for (auto& x : adj[i]) {\n                if (x == par)\n                    continue;\n                int cur = niche[x];\n                s.erase(s.find(cur));\n                int mx = 0;\n                if (s.size() > 0)\n                    mx = *s.rbegin();\n                int newUp = max(upTime, mx) + curAdd;\n                dfs2(x, i, newUp, dfs2);\n                s.insert(cur);\n            }\n        };\n        dfs2(0, -1, 0, dfs2);\n        return ans;\n    }\n};",
    "submit_ts": "1722698146",
    "subm_id": "1343171219"
}