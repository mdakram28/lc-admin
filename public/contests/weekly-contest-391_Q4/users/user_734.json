{
    "username": "Okx4SpBLT6",
    "submission": "class Solution {\npublic:\n    #define x first\n    #define y second\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> x(n + 1), y(n + 1);\n        vector<vector<pair<int,int>>> p(4, vector<pair<int,int>>(n + 1));\n        for(int i = 0; i < n; i ++){\n            x[i + 1] = points[i][0];\n            y[i + 1] = points[i][1];\n        }\n        for(int i=1;i<=n;i++)\n        {\n            p[0][i]={x[i]+y[i],i};\n            p[1][i]={-x[i]+y[i],i};\n            p[2][i]={x[i]-y[i],i};\n            p[3][i]={-x[i]-y[i],i};\n        }\n        for(int i=0;i<4;i++){\n            sort(p[i].begin() + 1, p[i].end());\n        }\n        int mx=0;\n        int a, b;\n        for(int i=0;i<4;i++)\n        {\n            if(p[i][n].x-p[i][1].x > mx){\n                mx = p[i][n].x-p[i][1].x;\n                a = p[i][n].y, b = p[i][1].y;\n            }\n        }\n        // cout << a << \" \" << b << \" \"<<mx << endl;\n        int mn = 1e9;\n        mx = -1;\n        for(int i=0;i<4;i++)\n        {\n            for(int i=0;i<4;i++)\n            {\n                if(p[i][n].y == a){\n                    mx = max(mx, p[i][n - 1].x - p[i][1].x);\n                }\n                if(p[i][1].y == a){\n                    mx = max(mx, p[i][n].x - p[i][2].x);\n                }\n\n                if(p[i][n].y != a && p[i][1].y != a){\n                    mx = max(mx, p[i][n].x-p[i][1].x);\n                }\n            }\n        }\n        mn = min(mn, mx);\n        mx = -1;\n        for(int i=0;i<4;i++)\n        {\n            if(p[i][n].y == b){\n                mx = max(mx, p[i][n - 1].x - p[i][1].x);\n            }\n            if(p[i][1].y == b){\n                mx = max(mx, p[i][n].x - p[i][2].x);\n            }\n            \n            if(p[i][n].y != b && p[i][1].y != b){\n                mx = max(mx, p[i][n].x-p[i][1].x);\n            }\n        }\n        mn = min(mn, mx);\n        return mn;\n\n    }\n};"
}