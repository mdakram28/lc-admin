{
    "username": "Luyim25",
    "submission": "class Solution {\n    struct Trie {\n        Trie* mp[26] = {0};\n        char c;\n        int cost;\n        \n        Trie(char ch) {\n            c = ch;\n            cost = -1;\n        }\n    };\n    \n    Trie* root = new Trie(' ');\n    int dp[50000];\n    \n    void add(string w, int ct) {\n        Trie* curr = root;\n        for(int p = 0; p < w.length(); p++) {\n            int idx = (int)(w[p]-'a');\n            if(curr->mp[idx] == nullptr)\n                curr->mp[idx] = new Trie(w[p]);\n            curr = curr->mp[idx];\n        }\n        if(curr->cost == -1) {\n            curr->cost = ct;    \n        } else {\n            curr->cost = min(ct, curr->cost);\n        }\n    }\n    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        for(int i = 0; i < words.size(); i++)\n            add(words[i], costs[i]);\n        for(int i = 0; i < target.length(); i++)\n            dp[i] = INT_MAX>>1;\n        for(int i = 0; i < target.length(); i++) {\n            Trie* x = root;\n            for(int j = i; j < target.length();j++) {\n                int idx = (int)(target[j]-'a');\n                if(x->mp[idx] != nullptr) {\n                    x = x->mp[idx];\n                    if(x->cost != -1) {\n                        if(i == 0) {\n                            dp[j] = min(dp[j], x->cost);\n                        } else {\n                            dp[j] = min(dp[j], dp[i-1]+(x->cost));\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        if(dp[target.size()-1] >= (INT_MAX>>1))\n            return -1;\n        return dp[target.size()-1];\n    }\n};",
    "submit_ts": "1720322351",
    "subm_id": "1312347567"
}