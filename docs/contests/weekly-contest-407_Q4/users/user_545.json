{
    "username": "priyanshu_p28",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> pref(n);\n        for(int i = 0; i < n; i++){\n            pref[i] = target[i] - nums[i];\n        }\n        long long ans = 0;\n        \n        int i = 0;\n        while(i < n){\n            long long cnt = 0, pre = 0;\n            while(i < n and pref[i] > 0){\n                cnt += max((long long)(pref[i] - pre), 0LL);\n                pre = pref[i];\n                i++;\n            }\n            ans += cnt;\n            while(i < n and pref[i] == 0) i++;\n            cnt = 0, pre = 0;\n            while(i < n and pref[i] < 0){\n                cnt += max((long long)((-pref[i]) - pre), 0LL);\n                pre = (-pref[i]);\n                i++;\n            }\n            ans += cnt;\n            while(i < n and pref[i] == 0) i++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721531721",
    "subm_id": "1327968250"
}