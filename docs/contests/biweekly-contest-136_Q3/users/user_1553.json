{
    "username": "47nk",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length, ans = 0;\n        for(int i = 0; i<n/2; i++) {\n            for(int j = 0; j<m/2; j++){\n                int a = grid[i][j];\n                int b = grid[n-1-i][j];\n                int c = grid[i][m-1-j];\n                int d = grid[n-1-i][m-1-j];\n                int sum = a+b+c+d;\n                ans += Math.min(sum, 4-sum);\n            }\n        }\n        int sum = 0, swap = 0;\n        if(n%2 != 0) {\n            int s = 0;\n            int e = m-1;\n            \n            while(s < e) {\n                if(grid[n/2][s] != grid[n/2][e]) {\n                    swap++;\n                }\n                sum += grid[n/2][s] + grid[n/2][e];\n                s++;\n                e--;\n            }\n            \n            \n        }\n        \n        if(m%2 != 0) {\n            int s = 0;\n            int e = n-1;\n            while(s < e) {\n                if(grid[s][m/2] != grid[e][m/2]) {\n                    swap++;\n                }\n                sum += grid[s][m/2] + grid[e][m/2];\n                s++;\n                e--;\n            }\n        }\n        \n        if(swap == 0) {\n            ans += sum%4;\n        }else{\n            ans += swap;\n        }\n        return ans+ ((n%2 != 0 && m%2 != 0) ? grid[n/2][m/2]: 0);\n    }\n}",
    "submit_ts": "1722699432",
    "subm_id": "1343211462"
}