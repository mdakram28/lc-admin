{
    "username": "PJ_ID_447",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    struct T {\n        map<char, T *> c;\n        vector<vector<int>> w;\n    };\n\n    class S {\n    public:\n        T *r;\n        S() { r = new T(); }\n\n        void i(string &word, int index, int cost) {\n            T *nk = r;\n            for (char c : word) {\n                if (!nk->c.count(c))\n                    nk->c[c] = new T();\n                nk = nk->c[c];\n            }\n            nk->w.push_back({index, cost});\n        }\n    };\n    \n\n    int minimumCost(string target, vector<string> &words, vector<int> &costs) {\n        int n = target.size();\n        vector<int> dp(n + 1, 2e9);\n        S t;\n        for (int i = 0; i < words.size(); ++i) t.i(words[i], i, costs[i]);\n\n\n        for (int i = 0; i < n; ++i) {\n            if(i==0){\n                dp[i]=0;\n            }\n            if (dp[i] != 2e9){\n\n            T *nk = t.r;\n            for (int j = i; j < n; ++j) {\n                if (nk->c.count(target[j])){\n                nk = nk->c[target[j]];\n                for (auto &p : nk->w) {\n                    int a = p[0];\n                    int b = p[1];\n                    int l = words[a].size();\n                    if (i + l <= n) {\n                        dp[i + l] = min(dp[i + l], dp[i] + b);\n                    }\n                }\n                }else break;\n            }\n            }\n        }\n        if(dp[n]<2e9) return dp[n];\n        return -1;\n\n       \n    }\n};\n",
    "submit_ts": "1720324621",
    "subm_id": "1312403993"
}