{
    "username": "Fasdr",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; i++)\n            trie.put(words[i], costs[i]);\n        \n        for (int i = n - 1; i >= 0; i--) {\n            Node cur = trie.root;\n            int best = Integer.MAX_VALUE;\n            for (int j = i; j < n; j++) {\n                char chr = target.charAt(j);\n                if (cur.next != null && cur.next[chr - 'a'] != null) {\n                    cur = cur.next[chr - 'a'];\n                    if (cur.cost != -1 && dp[j + 1] != -1)\n                        best = Math.min(best, cur.cost + dp[j + 1]);\n                } else {\n                    break;\n                }\n            }\n            if (best == Integer.MAX_VALUE)\n                dp[i] = -1;\n            else\n                dp[i] = best;\n        }\n        \n        return dp[0];\n    }\n}\n\n    \nclass Node {\n    int cost = -1;\n    Node[] next;\n}\n    \n\nclass Trie {\n    public Node root;\n    public int m;\n\n    public Trie() {\n        root = new Node();\n        m = 'z' - 'a' + 1;\n    }\n    \n    public void put(String word, int cost) {\n        Node cur = root;\n        for (char chr : word.toCharArray()) {\n            if (cur.next == null)\n                cur.next = new Node[m];\n            if (cur.next[chr - 'a'] == null)\n                cur.next[chr - 'a'] = new Node();\n            cur = cur.next[chr - 'a'];\n        }\n        if (cur.cost == -1 || cur.cost > cost)\n            cur.cost = cost;\n            \n    }\n}\n",
    "submit_ts": "1720321462",
    "subm_id": "1312323478"
}