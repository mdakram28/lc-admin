{
    "username": "bikashsahh",
    "submission": "// class Solution {\n//     public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        \n//     }\n// }\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long totalCost = 0;\n\n        List<int[]> cuts = new ArrayList<>();\n\n\n        for (int i = 0; i < horizontalCut.length; i++) {\n            cuts.add(new int[]{horizontalCut[i], 0});\n        }\n\n        for (int i = 0; i < verticalCut.length; i++) {\n            cuts.add(new int[]{verticalCut[i], 1});\n        }\n\n        Collections.sort(cuts, (a,b)->b[0]-a[0]);\n\n        long horizontalPieces = 1;\n        long verticalPieces = 1;\n\n\n        for (int[] cut : cuts) {\n            int cost = cut[0];\n            if (cut[1] == 0) {\n                totalCost += cost * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cost * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n\n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720926099",
    "subm_id": "1320275945"
}