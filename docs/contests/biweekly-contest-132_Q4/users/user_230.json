{
    "username": "Momos_",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int n = a.size();\n        k++;\n        int dp[n+1][k+2];\n        memset(dp,0,sizeof dp);\n        \n        map<int,vector<int>> mp;\n        for(int i=0;i<n;i++){\n            mp[a[i]].push_back(i);\n        }\n        \n        for(int j=1;j<=k;j++){\n            dp[0][j] = 1;\n            for(auto it: mp){\n                \n                int e = it.first;\n                vector<int> v = it.second;\n                \n                multiset<int> pre;\n                int cnt = 0;\n                for(int p=v.size()-1;p>=0;p--){\n                    cnt++;\n                    if(v[p] == 0) pre.insert(cnt);\n                    else {\n                        // cout<<v[p]-1<<endl;\n                        pre.insert(cnt+dp[v[p]-1][j-1]);\n                    }\n                }\n                \n                cnt = 0;\n                for(int p=v.size()-1;p>=0;p--){\n                    dp[v[p]][j] = (*pre.rbegin() - cnt);\n                    cnt++;\n                    if(v[p] > 0)\n                    pre.erase(pre.find(cnt+dp[v[p]-1][j-1]));\n                }\n            }\n            \n            for(int i=1;i<n;i++){\n                dp[i][j] = max(dp[i][j],dp[i-1][j]);\n            }\n            \n        }\n        \n        int ans = 0;\n        for(int j=0;j<=k;j++){\n            for(int i=0;i<n;i++){\n                // cout<<dp[i][j]<<\" \";\n                 ans = max(ans,dp[i][j]);\n            }\n            // cout<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717860795.0
}