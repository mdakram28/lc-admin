{
    "username": "kadyan21",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         priority_queue<pair<int,int>> pq;\n\n        for(auto it : horizontalCut)\n        {\n            pq.push({it,0});\n        }\n        for(auto it : verticalCut)\n        {\n            pq.push({it,1});\n        }\n        long long h = 1;\n        long long v = 1;\n        long long ans = 0;\n        while(!pq.empty())\n        {\n            int c = pq.top().first;\n            int d = pq.top().second;\n            pq.pop();\n\n            if(d == 0)\n            {\n                ans += v*c;\n                h++;\n            }else{\n                ans += h*c;\n                v++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925337",
    "subm_id": "1320251285"
}