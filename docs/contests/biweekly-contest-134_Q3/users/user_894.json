{
    "username": "BeastIncarnate",
    "submission": "class Solution {\npublic:\n    \n \nvoid computeLPS(string pattern, vector<int>& lps) {\n    int len = 0;  // Length of the previous longest prefix suffix\n    int i = 1;\n    lps[0] = 0;  // lps[0] is always 0\n\n    while (i < pattern.size()) {\n        if (pattern[i] == pattern[len]) {\n            len++;\n            lps[i] = len;\n            i++;\n        } else {\n            if (len != 0) {\n                len = lps[len - 1];\n            } else {\n                lps[i] = 0;\n                i++;\n            }\n        }\n    }\n}\n\nint call(string text, string pattern,int &sz) {\n    int n = text.size();\n    int m = pattern.size();\n\n    // Create lps array that will hold the longest prefix suffix\n    vector<int> lps(m);\n    computeLPS(pattern, lps);\n    int res=0;\n\n    int i = 0;  // Index for text[]\n    int j = 0;  // Index for pattern[]\n    while (i < n) {\n        if (pattern[j] == text[i]) {\n            j++;\n            i++;\n        }\n\n        if (j == m) {\n            res++;\n            j = lps[j - 1];\n        } else if (i < n && pattern[j] != text[i]) {\n            if (j != 0)\n                j = lps[j - 1];\n            else\n                i = i + 1;\n        }\n    }\n    return res;\n}\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        string s;\n        for(auto &num:colors)\n            if(num==0)\n                s+=\"a\";\n            else\n                s+=\"b\";\n        int n=size(colors);\n        for(int i=0;i<k-1;i++){\n            if(colors[i]==0)\n                s+=\"a\";\n            else\n                s+=\"b\";\n        }\n        \n        string temp;\n        for(int i=0;i<k;i++){\n            if(i&1)\n                temp+=\"a\";\n            else\n                temp+=\"b\";\n        }\n        int res=call(s,temp,n);\n        temp=\"\";\n        for(int i=0;i<k;i++){\n            if(i&1)\n                temp+=\"b\";\n            else\n                temp+=\"a\";\n        }\n        res+=call(s,temp,n);\n        return res;\n    }\n};",
    "submit_ts": "1720279676",
    "subm_id": "1311760701"
}