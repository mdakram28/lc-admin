{
    "username": "ranjhal2003",
    "submission": "class Solution {\npublic:\n    pair<int, int> f(vector<int>&a){\n        int n=a.size();\n        int cnt1=0, flip=0;\n        for(int i=0; i<=n/2; i++){\n            if(a[i]!=a[n-i-1]){\n                flip++;\n                a[i]=!a[i];\n            }\n        }\n        for(auto x:a){\n            if(x==1) cnt1++;\n        }\n        return {flip, cnt1};\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int n, m;\n        n= grid.size();\n        m= grid[0].size();\n        int row=0, col=0;\n        int tcnt=0;\n        int ans=0;\n    //     int ans=INT_MAX;\n    //     for(auto x:grid){\n    //         auto it= f(x);\n    //         row+=it.first;\n    //         tcnt+=it.second;\n    //     }\n    //     if(tcnt%4==0){\n    //         ans= row;\n    //     }\n    //     tcnt=0;\n    //     for(int i=0; i<m; i++){\n    //       vector<int> temp(n);\n    //       for(int j=0; j<n; j++){\n    //         temp[j]= grid[j][i];\n    //       }\n    //       auto it= f(temp);\n    //       col+=it.first;\n    //       tcnt+=it.second;\n    //    }\n    //    if(tcnt%4==0){\n    //      ans= min(ans, col);\n    //    }\n    \n     if(n%2==1 && m%2==1){\n        if(grid[n/2][m/2]==1) ans++;\n     }\n     vector<int> temp(3, 0);\n     if(n%2==1){\n          int a = 0;\n          int b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                temp[sm] += 1;\n                a += 1, b -= 1;\n            }\n     }\n    if (m % 2 == 1) {\n            int a = 0;\n            int b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                temp[sm] += 1;\n                a += 1,b -= 1;\n            }\n        }\n\n        if (temp[2] % 2 == 1) {\n            if (temp[1] > 0) {\n                ans += temp[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += temp[1];\n        }\n     for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j], b = grid[n - 1 - i][j], c = grid[i][m - 1 - j], d = grid[n - 1 - i][m - 1 - j];\n                int sm = a + b + c + d;\n                if (sm != 0 && sm != 4) {\n                    ans += min(sm, 4 - sm);\n                }\n            }\n        }\n\n    return ans;\n      \n        \n    }\n};",
    "submit_ts": "1722700174",
    "subm_id": "1343233866"
}