{
    "username": "wei-she-ming",
    "submission": "class Solution {\npublic:\n    const static int L = 224;\n    int bel[L * L + 1], ll[L + 1], rr[L + 1], ml[L + 1], mr[L + 1], mx[L + 1], oc[L * L + 1], hav[L + 1];\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool> res;\n        for (int i = 1; i <= L; ++i) {\n            ll[i] = rr[i - 1] + 1;\n            rr[i] = ll[i] + L - 1;\n            ml[i] = 1e9;\n            mr[i] = -1e9;\n            mx[i] = rr[i] - ll[i];\n            for (int j = ll[i]; j <= rr[i]; ++j)\n                bel[j] = i;\n        }\n        // vector<int> pos;\n        for (auto & q : queries) {\n            if (q[0] == 1) {\n                // pos.push_back(q[1]);\n                int x = q[1];\n                oc[x] = 1;\n                hav[bel[x]] = 1;\n                ml[bel[x]] = min(ml[bel[x]], x);\n                mr[bel[x]] = max(mr[bel[x]], x);\n                mx[bel[x]] = -1e9;\n                int las = ll[bel[x]];\n                for (int i = ll[bel[x]]; i <= rr[bel[x]]; ++i) {\n                    if (oc[i]) {\n                        mx[bel[x]] = max(mx[bel[x]], i - las);\n                        las = i;\n                    }\n                }\n                mx[bel[x]] = max(mx[bel[x]], rr[bel[x]] - las);\n            }\n            else {\n                int x = q[1], sz = q[2];\n                int las = 0;\n                int i, mxl = -1e9;\n                for (i = 1; i <= L && rr[i] <= x; ++i) {\n                    // if (res.size() == 6) {\n                    //     printf(\"i=%d ml[i]=%d mx[i]=%d mr[i]=%d las=%d\\n\", i, ml[i], mx[i], mr[i], las);\n                    // }\n                    if (!hav[i]) continue;\n                    mxl = max(mxl, ml[i] - las);\n                    mxl = max(mxl, mx[i]);\n                    las = max(las, mr[i]);\n                    \n                }\n                if (i <= L) {\n                    for (int j = ll[i]; j <= x; ++j) {\n                        if (oc[j]) {\n                            mxl = max(mxl, j - las);\n                            las = j;\n                        }\n                    }\n                }\n                mxl = max(mxl, x - las);\n                // cout << mxl << ' ' << sz << '\\n';\n                \n                res.push_back(mxl >= sz);\n                // if (res.size() == 7) {\n                //     sort(pos.begin(), pos.end());\n                //     for (int p : pos) cout << p << ' ';\n                //     cout << '\\n';\n                // }\n            }\n        }\n        return res;\n        \n    }\n};",
    "submit_ts": 1716650753.0
}