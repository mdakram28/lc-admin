{
    "username": "AegeanYu",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int res = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int sum = 0;\n                sum += (grid[i][j] + grid[m - 1 - i][n - 1 - j] + grid[i][n - 1 - j] + grid[m - 1 - i][j]);\n                res += min(sum , 4 - sum);\n            }\n        }\n        if ((m & 1) && (n & 1)) {\n            if (grid[m / 2][n / 2] == 1) res++;\n        }\n        int sum = 0;\n        bool tag = false;\n        if (m & 1) {\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[m / 2][j] != grid[m / 2][n - 1 - j]) {\n                    res++;\n                    tag = true;\n                }\n                sum += grid[m / 2][j];\n                sum += grid[m / 2][n - 1 - j];\n            }\n        }\n        if (n & 1) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2]) {\n                    res++;\n                    tag = true;\n                }\n                sum += grid[i][n / 2];\n                sum += grid[m - 1 - i][n / 2];\n            }\n        }\n        if (sum % 4 == 2 && !tag) {\n            res += 2;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697364",
    "subm_id": "1343143901"
}