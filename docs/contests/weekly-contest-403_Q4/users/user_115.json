{
    "username": "dirigibility",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m,n = len(grid),len(grid[0])\n        @cache\n        def f(i1,i2,j1,j2,k):\n            if k == 1:\n                a,b,c,d = i2,i1,j2,j1\n                found = False\n                for i in range(i1,i2):\n                    for j in range(j1,j2):\n                        if grid[i][j]:\n                            found = True\n                            a = min(a,i)\n                            b = max(b,i)\n                            c = min(c,j)\n                            d = max(d,j)\n                return (b-a+1)*(d-c+1) if found else inf\n            if k == 2:\n                return min(\n                    min((f(i1,i,j1,j2,1)+f(i,i2,j1,j2,1) for i in range(i1+1,i2)),default=inf),\n                    min((f(i1,i2,j1,j,1)+f(i1,i2,j,j2,1) for j in range(j1+1,j2)),default=inf)\n                )\n            return min(\n                min((f(i1,i,j1,j2,1)+f(i,i2,j1,j2,2) for i in range(i1+1,i2)),default=inf),\n                min((f(i1,i2,j1,j,1)+f(i1,i2,j,j2,2) for j in range(j1+1,j2)),default=inf),\n                min((f(i1,i,j1,j2,2)+f(i,i2,j1,j2,1) for i in range(i1+1,i2)),default=inf),\n                min((f(i1,i2,j1,j,2)+f(i1,i2,j,j2,1) for j in range(j1+1,j2)),default=inf)\n            )\n        return f(0,m,0,n,3)",
    "submit_ts": "1719112730",
    "subm_id": "1297307578"
}