{
    "username": "yoshaaa59",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        bts = [0] * 32\n        ans = float(inf)\n\n        i2 = 0\n        for i in range(n):\n            for j in range(31):\n                if ((1 << j) & nums[i]) == 0:\n                    bts[j] += 1\n            \n            curr = 0\n            for j in range(31):\n                if bts[j] == 0:\n                    curr ^= (1 << j)\n            \n            ans = min(ans, abs(curr - k))\n\n            while i2 < i and curr < k:\n                for j in range(31):\n                    if ((1 << j) & nums[i2]) == 0:\n                        bts[j] -= 1\n                j += 1\n                i2 += 1\n                curr = 0\n                for j in range(31):\n                    if bts[j] == 0:\n                        curr ^= (1 << j)\n                ans = min(ans, abs(curr - k))\n        return ans",
    "submit_ts": 1717300467.0
}