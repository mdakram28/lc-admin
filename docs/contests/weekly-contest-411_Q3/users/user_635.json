{
    "username": "Akash_S29",
    "submission": "import java.math.BigInteger;\nclass Solution {\n    public String largestPalindrome(int n, int k) {\n        if (n <= 7) {\n            int num = 1;\n            for (int i = 1; i < n; i++) {\n                num *= 10;\n            }\n            for (int i = num * 10 - 1; i >= num; i--) {\n                if (i % k == 0 && isPalindrome(i)) {\n                    return Integer.toString(i);\n                }\n            }\n        } else if (k == 3 || k == 9 || k == 1) {\n            return \"9\".repeat(n);\n        } else if (k == 2) {\n            return \"8\" + \"9\".repeat(n - 2) + \"8\";\n        } else if (k == 4) {\n            return \"88\" + \"9\".repeat(n - 4) + \"88\";\n        } else if (k == 5) {\n            return \"5\" + \"9\".repeat(n - 2) + \"5\";\n        } else if (k == 8) {\n            return \"888\" + \"9\".repeat(n - 6) + \"888\";\n        } else if (k == 6) {\n            if (n % 2 == 1) {\n                return \"8\" + \"9\".repeat((n - 3) / 2) + \"8\" + \"9\".repeat((n - 3) / 2) + \"8\";\n            } else {\n                return \"8\" + \"9\".repeat((n - 4) / 2) + \"77\" + \"9\".repeat((n - 4) / 2) + \"8\";\n            }\n        } else if (k == 7) {\n            return findPalindromeForSeven(n);\n        }\n        return \"\";\n    }\n\n    private static boolean isPalindrome(int num) {\n        String str = Integer.toString(num);\n        int len = str.length();\n        for (int i = 0; i < len / 2; i++) {\n            if (str.charAt(i) != str.charAt(len - i - 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static String findPalindromeForSeven(int n) {\n        if (n % 2 == 1) {\n            String base = \"9\".repeat((n - 1) / 2);\n            for (int i = 9; i >= 0; i--) {\n                String candidate = base + i + base;\n                BigInteger num = new BigInteger(candidate);\n                if (num.mod(BigInteger.valueOf(7)).equals(BigInteger.ZERO)) {\n                    return candidate;\n                }\n            }\n        } else {\n            String base = \"9\".repeat((n - 2) / 2);\n            for (int i = 9; i >= 0; i--) {\n                String candidate = base + i + i + base;\n                BigInteger num = new BigInteger(candidate);\n                if (num.mod(BigInteger.valueOf(7)).equals(BigInteger.ZERO)) {\n                    return candidate;\n                }\n            }\n        }\n        return \"\";\n    }\n}",
    "submit_ts": "1723952966",
    "subm_id": "1359809026"
}