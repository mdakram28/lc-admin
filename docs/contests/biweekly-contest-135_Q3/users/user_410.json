{
    "username": "Deadrohan19",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int> mp;\n        int n = nums.size();\n        // cout<<n<<\"\\n\";\n        vector<int> tmp;\n        for(int i=0;i<n/2;++i){\n            if(nums[i]<nums[n-i-1]){\n                tmp.push_back(max(nums[n-i-1],k-nums[i]));\n            }\n            else{\n                tmp.push_back(max(nums[i],k-nums[n-i-1]));\n            }\n            // tmp.push_back(max(nums[i], nums[n-i-1]));\n            // tmp[tmp.size()-1] = max(tmp.back(), k-tmp.back());\n            mp[abs(nums[i] - nums[n-i-1])]++;\n        }\n        sort(begin(tmp), end(tmp));\n        // for(auto i: tmp) cout<<i<<\" \";\n        // cout<<\"\\n\";\n        int ans =n;\n        for(auto [f,s]: mp){\n            int extra = lower_bound(begin(tmp), end(tmp), f) - begin(tmp);\n            // cout<<f<<\" \"<<s<<\" \"<<extra<<\"\\n\";\n            ans = min(ans,extra + n/2-s);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487750",
    "subm_id": "1327399809"
}