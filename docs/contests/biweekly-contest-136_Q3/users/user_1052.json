{
    "username": "oxian-sheng",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        cnt = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                sm = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j]\n                cnt += min(sm, 4-sm)\n        # print(cnt)\n        if m%2 == 0 and n%2 == 0:\n            return cnt\n        \n        if m%2:\n            cola, left, right = 0, 0, 0\n            for j in range(n//2):\n                cola += int(grid[m//2][j] == grid[m//2][n-1-j] and grid[m//2][j] == 1)\n                left += int(grid[m//2][j] != grid[m//2][n-1-j] and grid[m//2][j] == 1)\n                right += int(grid[m//2][j] != grid[m//2][n-1-j] and grid[m//2][n-1-j] == 1)\n            cnt += (left+right)\n            if n%2 == 0:\n                if (left+right) == 0:\n                    cnt += 2*int(cola%2)\n                return cnt\n\n        if n%2:\n            rowa, up, down= 0, 0, 0\n            for i in range(m//2):\n                rowa += int(grid[i][n//2] == grid[m-1-i][n//2] and grid[i][n//2] == 1)\n                up += int(grid[i][n//2] != grid[m-1-i][n//2] and grid[i][n//2] == 1)\n                down += int(grid[i][n//2] != grid[m-1-i][n//2] and grid[m-1-i][n//2] == 1)\n            cnt += (up+down)\n            if m%2 == 0:\n                if (up+down) == 0:\n                    cnt += 2*int(rowa%2)\n                return cnt\n\n\n        if m%2 and n%2:\n            cnt += grid[m//2][n//2]\n            if (left+right+up+down) == 0:\n                cnt += 2*int((cola+rowa)%2)\n\n            return cnt\n",
    "submit_ts": "1722698967",
    "subm_id": "552273421"
}