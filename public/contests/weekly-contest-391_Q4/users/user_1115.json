{
    "username": "lucq",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        xs = []\n        ys = []\n        for x, y in points:\n            xs.append(x + y)\n            ys.append(x - y)\n        if max(xs) - min(xs) >= max(ys) - min(ys):\n            o = sorted(range(n), key=lambda i: (xs[i], ys[i]))\n            return min(\n                max(xs[o[-1]] - xs[o[1]], max(ys[o[i]] for i in range(1, n)) - min(ys[o[i]] for i in range(1, n))),\n                max(xs[o[-2]] - xs[o[0]], max(ys[o[i]] for i in range(n - 1)) - min(ys[o[i]] for i in range(n - 1))))\n        else:\n            xs, ys = ys, xs\n            o = sorted(range(n), key=lambda i: (xs[i], ys[i]))\n            return min(\n                max(xs[o[-1]] - xs[o[1]], max(ys[o[i]] for i in range(1, n)) - min(ys[o[i]] for i in range(1, n))),\n                max(xs[o[-2]] - xs[o[0]], max(ys[o[i]] for i in range(n - 1)) - min(ys[o[i]] for i in range(n - 1))))\n"
}