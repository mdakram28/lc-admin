{
    "username": "BaoziiO_o",
    "submission": "\ntype Fenwick struct {\n\ttree []int\n\tn    int\n}\n\n\nfunc NewFenwick(n int) *Fenwick {\n\treturn &Fenwick{\n\t\ttree: make([]int, n+1),\n\t\tn:    n,\n\t}\n}\n\n\nfunc (f *Fenwick) update(index, val int) {\n\ti := index + 1\n\tfor i <= f.n {\n\t\tf.tree[i] += val\n\t\ti += i & -i\n\t}\n}\n\n\nfunc (f *Fenwick) prefixQuery(index int) int {\n\ti := index + 1\n\tsum := 0\n\tfor i > 0 {\n\t\tsum += f.tree[i]\n\t\ti -= i & -i\n\t}\n\treturn sum\n}\n\n\nfunc (f *Fenwick) rangeQuery(left, right int) int {\n\treturn f.prefixQuery(right) - f.prefixQuery(left-1)\n}\n\n\nfunc isPeak(nums []int, i int) bool {\n\treturn 0 < i && i < len(nums)-1 && nums[i] > nums[i-1] && nums[i] > nums[i+1]\n}\n\nfunc countOfPeaks(nums []int, queries [][]int) []int {\n\tn := len(nums)\n\tft := NewFenwick(n)\n\tresult := []int{}\n\n\n\tfor i := 1; i < n-1; i++ {\n\t\tif isPeak(nums, i) {\n\t\t\tft.update(i, 1)\n\t\t}\n\t}\n\n\tfor _, q := range queries {\n\t\tif q[0] == 1 {\n\t\t\tli, ri := q[1], q[2]\n\t\t\tif ri-li >= 2 {\n\t\t\t\tresult = append(result, ft.rangeQuery(li+1, ri-1))\n\t\t\t} else {\n\t\t\t\tresult = append(result, 0)\n\t\t\t}\n\t\t} else if q[0] == 2 {\n\t\t\tindex, val := q[1], q[2]\n\t\t\tif isPeak(nums, index) {\n\t\t\t\tft.update(index, -1)\n\t\t\t}\n\t\t\tif index > 0 && isPeak(nums, index-1) {\n\t\t\t\tft.update(index-1, -1)\n\t\t\t}\n\t\t\tif index < n-1 && isPeak(nums, index+1) {\n\t\t\t\tft.update(index+1, -1)\n\t\t\t}\n\t\t\tnums[index] = val\n\t\t\tif isPeak(nums, index) {\n\t\t\t\tft.update(index, 1)\n\t\t\t}\n\t\t\tif index > 0 && isPeak(nums, index-1) {\n\t\t\t\tft.update(index-1, 1)\n\t\t\t}\n\t\t\tif index < n-1 && isPeak(nums, index+1) {\n\t\t\t\tft.update(index+1, 1)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}",
    "submit_ts": "1718506999",
    "subm_id": "1289637855"
}