{
    "username": "balaji_rayakota",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        int n = nums.length;\n        int[][] dp = new int[n][k+1];\n        dp[n-1][0] = 1;\n        Map<Integer, Map<Integer, Integer>> maxByValue = new HashMap<>();\n        for(int i = 0; i <= k; i++){\n            maxByValue.put(i, new HashMap<>());\n        }\n        maxByValue.get(0).put(nums[n-1], 1);\n        int[] max = new int[k+1];\n        max[0] = 1;\n        \n        int output = 1;\n        \n        for(int i = n-2; i >= 0; i--){\n            for(int j = 0; j <= k; j++){\n                int localMax = 0;\n                \n                if(j != 0){\n                    localMax = max[j-1];\n                }\n                \n                localMax = Math.max(localMax, maxByValue.get(j).getOrDefault(nums[i], 0));\n                \n                if(localMax > 0){\n                    dp[i][j] = localMax+1;\n                    output = Math.max(output, dp[i][j]);\n                } else {\n                    dp[i][j] = 1;\n                }\n            }\n            \n            for(int j = 0; j <= k; j++){\n                max[j] = Math.max(max[j], dp[i][j]);\n                Map<Integer, Integer> jMaxByValue = maxByValue.get(j);\n                jMaxByValue.put(nums[i], Math.max(jMaxByValue.getOrDefault(nums[i], 0), dp[i][j]));\n            }\n        }\n        \n        return output;\n    }\n}",
    "submit_ts": "1717861279",
    "subm_id": "1281785751"
}