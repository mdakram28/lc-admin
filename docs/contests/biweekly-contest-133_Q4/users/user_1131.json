{
    "username": "KartikChawla",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        int maxi = 400;\n        unordered_map<int,int> mp;\n        for(auto it : requirements){\n            mp[it[0]+1] = it[1];\n        }\n        vector<vector<int>> dp(n + 1, vector<int>(maxi + 1, 0));\n        dp[0][0] = 1;\n        for (int i = 1; i <= n; ++i) {\n            for (int k = 0; k <= maxi; ++k) {\n                for (int j = 0; j < i; ++j) {\n                    if (k >= j) {\n                        dp[i][k] = (dp[i][k] + dp[i - 1][k - j]) % MOD;\n                    }\n                }\n            }\n            if(mp.count(i)>0){\n                int inv = mp[i];\n                for(int q = 0 ; q <= maxi ; q++){\n                    if(q!=inv){\n                        dp[i][q]=0;\n                    }\n                }\n            }\n        }\n        \n        \n        int ans = 0;\n        for (int k = 0; k <= maxi; ++k) {\n            ans = (ans + dp[n][k]) % MOD;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719071872.0
}