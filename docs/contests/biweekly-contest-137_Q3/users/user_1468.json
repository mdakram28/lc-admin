{
    "username": "Abhay Joshi",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<long long>> guess = get(board);\n        vector<vector<int>> bc = collms(board);\n        long long maxi = LLONG_MIN;\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    maxi = max(maxi, calcmaxi(r1, r2, r3, guess, bc));\n                }\n            }\n        }\n\n        return maxi;\n    }\n\nprivate:\n    vector<vector<long long>> get(const vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<long long>> guess(m, vector<long long>(3, LLONG_MIN));\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> colllsss;\n            for (int j = 0; j < n; ++j) {\n                colllsss.emplace_back(board[i][j], j);\n            }\n            sort(colllsss.rbegin(), colllsss.rend());\n\n            for (int k = 0; k < 3 && k < n; ++k) {\n                guess[i][k] = colllsss[k].first;\n            }\n        }\n\n        return guess;\n    }\n    vector<vector<int>> collms(const vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<int>> bc(m, vector<int>(3, -1));\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> colllsss;\n            for (int j = 0; j < n; ++j) {\n                colllsss.emplace_back(board[i][j], j);\n            }\n            sort(colllsss.rbegin(), colllsss.rend());\n            for (int k = 0; k < 3 && k < n; ++k) {\n                bc[i][k] = colllsss[k].second;\n            }\n        }\n\n        return bc;\n    }\n    long long calcmaxi(int r1, int r2, int r3, \n                              const vector<vector<long long>>& guess, \n                              const vector<vector<int>>& bc) {\n        long long maxi = LLONG_MIN;\n\n        for (int i = 0; i < 3; ++i) {\n            for (int j = 0; j < 3; ++j) {\n                if (bc[r2][j] == bc[r1][i]) continue;\n                for (int k = 0; k < 3; ++k) {\n                    if (bc[r3][k] == bc[r1][i] || bc[r3][k] == bc[r2][j]) continue;\n                    \n                    long long curSum = guess[r1][i] + guess[r2][j] + guess[r3][k];\n                    maxi = max(maxi, curSum);\n                }\n            }\n        }\n\n        return maxi;\n    }\n};\n",
    "submit_ts": "1723910355",
    "subm_id": "1359227190"
}