{
    "username": "zhoyu255",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long ans = 0;\n        \n        int i = 0;\n        vector<int> heights;\n        vector<pair<int, int>> sHeights;\n        vector<bool> is;\n        \n        while (i < n) {\n            bool add = (target[i] - nums[i]) >= 0;\n            heights.clear();\n            sHeights.clear();\n            is.clear();\n            is.push_back(false);\n            if (add) {\n                while (i < n && target[i] - nums[i] >= 0) {\n                    heights.push_back(target[i]-nums[i]);\n                    sHeights.push_back({target[i]-nums[i], heights.size()});\n                    is.push_back(false);\n                    i++;\n                }\n            } else {\n                while (i < n && nums[i] - target[i] > 0) {\n                    heights.push_back(nums[i] - target[i]);\n                    sHeights.push_back({nums[i]-target[i], heights.size()});\n                    is.push_back(false);\n                    i++;\n                }\n            }\n            is.push_back(false);\n            \n            sort(sHeights.rbegin(), sHeights.rend());\n            \n            long long cur = 0;\n            for (int j = 0; j < sHeights.size(); j++) {\n                int height = sHeights[j].first, id = sHeights[j].second;\n                \n                is[id] = true;\n                if (is[id+1] && is[id-1]) cur--;\n                else if (!is[id+1] && !is[id-1]) cur++;\n\t\t\n\t\t        if (j != sHeights.size()-1 && sHeights[j].first != sHeights[j+1].first) ans += cur * (long long) (sHeights[j].first - sHeights[j+1].first);\n            }\n            ans += (long long) sHeights.back().first * cur;\n        }\n        return ans;\n    }\n};\n/*\nLine sweep, track number of islands\n\nthen between each jump, islands * diff\n*/",
    "submit_ts": "1721531213",
    "subm_id": "1327955200"
}