{
    "username": "nikj007",
    "submission": "class Solution {\npublic: \n    int numberOfAlternatingGroups(vector<int>& c, int k) { \n        int N = c.size(); \n        int ans = 0; \n \n        if (k == 1) { \n            return N; \n        } \n \n        int al = 1; \n        int i = 1; \n        while (i < N + k - 1) { \n            int curr = i; \n            int prev = i - 1; \n \n            if (curr >= N) { \n                curr -= N; \n            } \n            if (prev >= N) { \n                prev -= N; \n            } \n \n            if (c[curr] != c[prev]) { \n                ++al; \n            } else { \n                al = 1; \n            } \n  \n            if (al >= k) { \n                ++ans; \n            } \n \n            ++i; \n        } \n \n        return ans; \n    } \n};\n",
    "submit_ts": "1720281538",
    "subm_id": "1311828889"
}