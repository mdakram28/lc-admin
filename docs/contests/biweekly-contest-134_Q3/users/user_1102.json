{
    "username": "aditya_aa",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        List<Integer> colorsList = new ArrayList<>();\n        for (int color : colors) {\n            colorsList.add(color);\n        }\n        for (int i = 0; i < k; i++) {\n            colorsList.add(colors[i]);\n        }\n        int n = colorsList.size();\n        int count = 0;\n        int[] prefixDiffs = new int[n + 1];\n        for (int i = 1; i < n; i++) {\n            prefixDiffs[i] = prefixDiffs[i - 1] + Math.abs(colorsList.get(i) - colorsList.get(i - 1));\n        }\n        k--;\n        for (int i = k+1; i < n; i++) {\n            if (prefixDiffs[i] - prefixDiffs[i - k] == k) {\n                count++;\n            }\n        }\n        \n        return count;\n    }\n}",
    "submit_ts": "1720279762",
    "subm_id": "1311764093"
}