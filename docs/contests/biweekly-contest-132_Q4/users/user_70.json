{
    "username": "WJTung",
    "submission": "class Solution {\n public:\n  int maximumLength(vector<int>& nums, int k) {\n    int N = nums.size();\n    unordered_map<int, vector<int>> max_len_num; // max length ending with num\n    vector<int> max_len_all(k + 1, 0);\n    for (int i = 0; i < N; ++i) {\n      vector<int> max_len(k + 1, 0);\n      max_len[0] = 1;\n      auto it = max_len_num.find(nums[i]);\n      for (int j = 0; j <= k; ++j) {\n        if (j > 0) {\n          max_len[j] = max_len_all[j - 1] + 1;\n        }\n        if (it != max_len_num.end()) {\n          const vector<int>& V = it->second;\n          max_len[j] = max(V[j] + 1, max_len[j]);\n        }\n      }\n      \n      max_len_num[nums[i]] = max_len;\n      for (int j = 0; j <= k; ++j) {\n        max_len_all[j] = max(max_len[j], max_len_all[j]);\n      }\n    }\n    return *max_element(max_len_all.begin(), max_len_all.end());\n  }\n};",
    "submit_ts": 1717859480.0
}