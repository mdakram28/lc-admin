{
    "username": "abhi2703",
    "submission": "class Trie{\npublic:\n    vector<Trie*> child;\n    int v;\n    bool end;\n    Trie(){\n        child.resize(26, NULL);\n        v=INT_MAX;\n        end=false;\n        }\n};\nclass Solution {\npublic:\n    Trie* root;\n    void add(string& w, int c) {\n        Trie* n = root;\n        for (char ch : w) {\n            if (!n->child[ch - 'a']) {\n                n->child[ch - 'a'] = new Trie();\n            }\n            n= n->child[ch - 'a'];\n        }\n        n->v = min(n->v,c);\n        n->end = true;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root=new Trie();\n        int len = target.size();\n        vector<int> ans(len + 1, INT_MAX);\n        for (int i = 0; i < words.size(); ++i) {\n            add(words[i], costs[i]);\n        }\n        ans[0] = 0;\n        for (int i = 0; i < len; i++) {\n            if (ans[i] == INT_MAX) continue;\n            Trie* n = root;\n            for (int j = i; j < len; j++) {\n                char ch = target[j];\n                if (!n->child[ch - 'a']) break;\n                n = n->child[ch - 'a'];\n                if (n->end) {\n                    ans[j + 1] = min(ans[j + 1], ans[i] + n->v);\n                }\n            }\n        }\n\n        return ans[len] == INT_MAX ? -1 : ans[len];\n    }\n};\n",
    "submit_ts": "1720322749",
    "subm_id": "1312358125"
}