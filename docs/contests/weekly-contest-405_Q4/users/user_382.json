{
    "username": "MrPerfect18",
    "submission": "#ifndef dhruvtyagi18\n#define dhruvtyagi18\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        m = len(words)\n\n        word_costs = self.calculate_word_costs(words, costs)\n        \n\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        for i in range(1, n + 1):\n            for word, cost in word_costs.items():\n                if i >= len(word) and target[i - len(word):i] == word:\n                    dp[i] = min(dp[i], dp[i - len(word)] + cost)\n        \n        return dp[n] if dp[n] != float('inf') else -1\n    \n    def calculate_word_costs(self, words: List[str], costs: List[int]) -> dict:\n        word_costs = {}\n        for i, word in enumerate(words):\n            word_costs[word] = min(word_costs.get(word, float('inf')), costs[i])\n        return word_costs\n#endif",
    "submit_ts": "1720321697",
    "subm_id": "1312329886"
}