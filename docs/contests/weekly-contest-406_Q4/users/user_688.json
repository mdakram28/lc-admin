{
    "username": "tanmaysawankar4441",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n    \n        # Initialize counters for pieces and total cost\n        h_pieces = 1\n        v_pieces = 1\n        total_cost = 0\n    \n        h_idx = 0\n        v_idx = 0\n    \n        # Greedily cut the pieces\n        while h_idx < len(horizontalCut) and v_idx < len(verticalCut):\n            if horizontalCut[h_idx] >= verticalCut[v_idx]:\n                total_cost += horizontalCut[h_idx] * v_pieces\n                h_pieces += 1\n                h_idx += 1\n            else:\n                total_cost += verticalCut[v_idx] * h_pieces\n                v_pieces += 1\n                v_idx += 1\n    \n        # Add remaining horizontal cuts\n        while h_idx < len(horizontalCut):\n            total_cost += horizontalCut[h_idx] * v_pieces\n            h_pieces += 1\n            h_idx += 1\n    \n        # Add remaining vertical cuts\n        while v_idx < len(verticalCut):\n            total_cost += verticalCut[v_idx] * h_pieces\n            v_pieces += 1\n            v_idx += 1\n    \n        return total_cost",
    "submit_ts": "1720925161",
    "subm_id": "1320245066"
}