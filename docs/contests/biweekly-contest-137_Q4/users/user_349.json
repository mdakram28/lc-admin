{
    "username": "Rohit Chalak",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<int>> com;\n        int n = board.size();\n        int m = board[0].size();\n        for(int i=0; i<n; i++){\n            for(int j=0; j<m; j++){\n                com.push_back({board[i][j],i,j});\n            }\n        }\n        sort(com.begin(), com.end(), greater<vector<int>>());\n        // for(int i=0; i<com.size(); i++){\n        //     cout<<com[i][0]<<\" \";\n        // }\n        long long ans = -3 * 1e9;\n        int bs  = com.size();\n        // cout<<bs<<endl;\n\n        for(int i=0; i<min(350,bs); i++){\n            for(int j = i+1; j<min(350,bs); j++){\n                // cout<<j<<endl;\n                if(com[j][1]!=com[i][1] && com[j][2]!=com[i][2]){\n                    for(int k=j+1; k<min(350,bs); k++){\n                        // cout<<k<<endl;\n                        if(com[k][1]!=com[i][1] && com[k][2]!=com[i][2] && com[k][1]!=com[j][1] && com[k][2]!=com[j][2]){\n                            long long cur = com[i][0];\n                            cur += com[j][0];\n                            cur += com[k][0];\n                            ans = max(ans,cur);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910199",
    "subm_id": "1359221072"
}