{
    "username": "prateekjn19",
    "submission": "\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        long long i,j, res = 0;\n        vector<long long> fact(33,1);\n        fact[0] = 1;\n        // for(i=1;i<=32;i++){\n        //     fact[i] = fact[i-1]*i;\n        // }\n        vector<vector<long long> > ncr(33, vector<long long> (33,1));\n        // ncr[0][0] = 1;\n        // ncr[1][0] = 1;\n        for(i=1;i<=32;i++){\n            for(j=1;j<i;j++){\n                ncr[i][j] = ncr[i-1][j-1] + ncr[i-1][j];\n            }\n        }\n        \n        // cout<<ncr[32][16]<<endl;\n        if(k==0) return 2;\n        if(k==1) return 4;\n        for(i=1;i<=32;i++){\n            long long c = (long long)pow(2,i)-1;\n            if((1+c-(i+1)<=k)&&(k<=1+c)){\n                long long diff = 1+c-k;\n                res+= (ncr[i+1][diff]);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1716090204.0
}