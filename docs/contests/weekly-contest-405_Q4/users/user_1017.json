{
    "username": "Fremder",
    "submission": "class Solution {\npublic:\n    // Trie Template from ChatGPT\n    struct TrieNode {\n        unordered_map<char, TrieNode*> children;\n        long long cost;\n        TrieNode() : cost(INT_MAX) {}\n    };\n\n    class Trie {\n    public:\n        TrieNode* root;\n        Trie() {\n            root = new TrieNode();\n        }\n\n        void insert(const string& word, long long cost) {\n            TrieNode* node = root;\n            for (char c : word) {\n                if (node->children.find(c) == node->children.end()) {\n                    node->children[c] = new TrieNode();\n                }\n                node = node->children[c];\n            }\n            node->cost = min(node->cost, cost);\n        }\n\n        long long search(const string& word, int start, int end) {\n            TrieNode* node = root;\n            for (int i = start; i < end; ++i) {\n                char c = word[i];\n                if (node->children.find(c) == node->children.end()) {\n                    return INT_MAX;\n                }\n                node = node->children[c];\n            }\n            return node->cost;\n        }\n    };\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        int nn = words.size();\n        for (int i = 0; i < nn; i++) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        int n = target.size();\n        vector<long long> dp(n + 1, INT_MAX);\n        dp[n] = 0;\n\n        for (int idx = n - 1; idx >= 0; --idx) {\n            TrieNode* node = trie.root;\n            for (int i = idx; i < n && node != nullptr; ++i) {\n                if (node->children.find(target[i]) == node->children.end()) {\n                    break;\n                }\n                node = node->children[target[i]];\n                if (node->cost != INT_MAX) {\n                    dp[idx] = min(dp[idx], node->cost + dp[i + 1]);\n                }\n            }\n        }\n\n        if(dp[0] != INT_MAX) return dp[0];\n        else return -1;\n    }\n};",
    "submit_ts": "1720322379",
    "subm_id": "1312348295"
}