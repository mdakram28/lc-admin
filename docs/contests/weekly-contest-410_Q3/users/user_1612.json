{
    "username": "Vinay_Gangadhara",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        int maxVal = 50;  // Since nums[i] can be up to 50\n\n        // DP table to count valid sequences\n        int[][] dp = new int[n][maxVal + 1];\n\n        // Initialize the first row\n        for (int x = 0; x <= nums[0]; x++) {\n            dp[0][x] = 1;  // arr1[0] = x, arr2[0] = nums[0] - x\n        }\n\n        // Fill the DP table\n        for (int i = 1; i < n; i++) {\n            int[][] newDp = new int[n][maxVal + 1];\n            for (int x = 0; x <= nums[i]; x++) {\n                for (int y = 0; y <= nums[i - 1]; y++) {\n                    if (x >= y) {  // Ensure arr1 is non-decreasing\n                        int arr2 = nums[i] - x;\n                        int prevArr2 = nums[i - 1] - y;\n                        if (arr2 <= prevArr2) {  // Ensure arr2 is non-increasing\n                            newDp[i][x] = (newDp[i][x] + dp[i - 1][y]) % MOD;\n                        }\n                    }\n                }\n            }\n            dp = newDp;\n        }\n\n        // Sum up all valid sequences for the last index\n        int result = 0;\n        for (int x = 0; x <= nums[n - 1]; x++) {\n            result = (result + dp[n - 1][x]) % MOD;\n        }\n\n        return result;\n    }\n}\n",
    "submit_ts": "1723345418",
    "subm_id": "1351555347"
}