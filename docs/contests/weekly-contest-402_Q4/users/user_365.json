{
    "username": "zhzho",
    "submission": "const int maxn = 1e5+10;\n\nint n;\n\nint a[maxn];\nint c[maxn];\n\nint lowbit(int x) {\n    return x&(-x);\n}\n\nvoid add(int x, int y) {\n    for(int i = x; i <= n; i = i + lowbit(i)) {\n        c[i] += y;\n    }\n}\n\nint Get(int x) {\n    int res = 0;\n    while(x) {\n        res = res + c[x];\n        x = x - lowbit(x);\n    }\n    return res;\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = (int)nums.size();\n        \n        for(int i = 1; i <= n; i ++) {\n            c[i] = 0;\n            a[i] = 0;\n        }\n        \n        for(int i = 1; i <= n; i ++) {\n            if(i == 1 || i == n)  {\n                a[i] = 0;\n            } else {\n                if (nums[i-2] < nums[i-1] && nums[i-1] > nums[i]) {\n                    a[i] = 1;\n                    add(i, 1);\n                } else {\n                    a[i] = 0;\n                }\n            }\n            \n          //  printf(\"%d, %d\\n\", i, a[i]);\n        }\n     //   printf(\"---\\n\");\n        \n        vector<int> ans;\n        \n        for(int i = 0; i < (int)queries.size(); i ++) {\n            int x = queries[i][0];\n            int y = queries[i][1];\n            int z = queries[i][2];\n            \n            if (x == 1) {\n                y++;\n                z++;\n                // [y, z]\n                \n                if (y == z) {\n                    ans.push_back(0);\n                } else {\n                    ans.push_back(Get(z - 1) - Get(y));\n                }\n                \n            } else if (x==2) {\n                \n                nums[y] = z;\n                \n                y++;\n\n                // left\n                if (y-1 > 1) {\n                    int tleft = 0;\n                   if (nums[y-2] > nums[y-3] && nums[y-2] > nums[y-1]) {\n                       tleft = 1;\n                   } \n                    \n                    add(y-1, tleft - a[y-1]);\n                    a[y-1] = tleft;\n                }\n                \n                //current\n                if (y != 1 && y != n) {\n                    int tcurrent = 0;\n                    if (nums[y-1] > nums[y-2] && nums[y-1] > nums[y]) {\n                       tcurrent = 1;\n                   } \n                    \n                    add(y, tcurrent - a[y]);\n                    a[y] = tcurrent;\n                }\n                \n                \n                //right\n                \n                if(y+1 < n) {\n                    int tright = 0;\n                    if (nums[y] > nums[y-1] && nums[y] > nums[y+1]) {\n                       tright = 1;\n                   } \n                    \n                    add(y+1, tright - a[y+1]);\n                    a[y+1] = tright;\n                }\n                \n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718506244.0
}