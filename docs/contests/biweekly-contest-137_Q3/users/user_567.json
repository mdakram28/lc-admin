{
    "username": "Keetode",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n\n        rows = []\n\n        for i in range(m):\n            r = []\n            for j in range(n):\n                r.append((board[i][j], j))\n\n            r.sort(key=lambda x: -x[0])\n            rows.append(r)\n\n        pickedR = set()\n        pickedC = set()\n\n        def work(amount):\n            if amount == 3:\n                return 0\n\n            picked = set()\n\n            v = -math.inf\n\n            for i in range(5):\n                maxV, maxR, maxC = -math.inf, 0, 0\n                for r in range(m):\n                    if r in pickedR:\n                        continue\n                    row = rows[r]\n                    for j in range(3):\n                        if row[j][1] in pickedC:\n                            continue\n\n                        if (r, row[j][1]) in picked:\n                            continue\n\n                        if row[j][0] > maxV:\n                            maxV, maxR, maxC = row[j][0], r, row[j][1]\n                        break\n\n                if maxV == -math.inf:\n                    break\n\n                pickedR.add(maxR)\n                pickedC.add(maxC)\n\n                temp = maxV + work(amount+1)\n                if temp > v:\n                    # print(amount, maxV, maxR, maxC, temp)\n                    v = temp\n\n                pickedR.remove(maxR)\n                pickedC.remove(maxC)\n\n                picked.add((maxR,maxC))\n\n            return v\n\n        return work(0)",
    "submit_ts": "1723910073",
    "subm_id": "1359216354"
}