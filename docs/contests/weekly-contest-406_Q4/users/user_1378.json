{
    "username": "SanD04",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n            int[] arr = new int[(m+n)-2];\n        boolean[] check = new boolean[(m+n)-2];\n        for (int i=0;i<m-1; i++) {\n            arr[i]=horizontalCut[i];check[i] = true;\n        }\n        for (int i=0;i<n-1;i++) {\n            arr[m+i-1]=verticalCut[i];check[m+i-1] = false;\n        }\n        Integer[] brr = new Integer[(m+n)-2];\n        for (int i=0;i<(m+n)-2; i++) brr[i] = i;\n        Arrays.sort(brr,(a, b)->arr[b]-arr[a]);\n        long finn=1, finn1=1,vall=0;\n        for (int i=0; i<(m+n)-2;i++) {\n            int in = brr[i];\n            if (check[in]) {\n                vall += arr[in] * finn1;\n                finn++;\n            } else {\n                vall += arr[in] * finn;\n                finn1++;\n            }\n        }\n        return vall;\n    }\n}",
    "submit_ts": "1720926222",
    "subm_id": "1320279620"
}