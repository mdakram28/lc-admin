{
    "username": "Prabhat708",
    "submission": "from typing import List\n\nclass Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10**9 + 7\n        n = len(nums)\n        \n        # dp[i][x] stores the number of ways to form valid pairs up to index i with arr1[i] = x\n        dp = [[0] * (max(nums) + 1) for _ in range(n)]\n        \n        # Initialize dp[0]\n        for x in range(nums[0] + 1):\n            dp[0][x] = 1  # arr1[0] = x, arr2[0] = nums[0] - x\n        \n        # Fill dp table\n        for i in range(1, n):\n            for x in range(nums[i] + 1):\n                dp[i][x] = sum(dp[i-1][prev_x] for prev_x in range(x+1) if nums[i] - x <= nums[i-1] - prev_x) % MOD\n        \n        # The final result is the sum of valid pairs for the last element\n        result = sum(dp[n-1][x] for x in range(nums[-1] + 1)) % MOD\n        \n        return result\n",
    "submit_ts": "1723344984",
    "subm_id": "1351546190"
}