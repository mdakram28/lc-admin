{
    "username": "waster",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h = 0, v = 0; \n        int hh = 1, vv = 1;\n        long long res = 0;\n        \n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                res += horizontalCut[h] * vv;\n                hh++;\n                h++;\n            } else {\n                res += verticalCut[v] * hh;\n                vv++;\n                v++;\n            }\n        }\n\n        while (h < horizontalCut.size()) {\n            res += horizontalCut[h] * vv;\n            h++;\n        }\n        \n        while (v < verticalCut.size()) {\n            res += verticalCut[v] * hh;\n            v++;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720925141",
    "subm_id": "1320244328"
}