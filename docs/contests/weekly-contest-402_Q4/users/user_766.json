{
    "username": "pushuu",
    "submission": "using ll = long long;\n\nll def_value = 0;\n\nstruct Node {\n    Node* lft = NULL;\n    Node* rht = NULL;\n    ll l, r, val;\n\n    Node (ll l1, ll r1) {\n        l = l1;\n        r = r1;\n        val = def_value;\n    }\n\n    void extend () {\n        if (!lft && l + 1 <= r) {\n            ll mid = (l + r) >> 1;\n            lft = new Node (l, mid);\n            rht = new Node (mid + 1, r);\n        }\n    }\n\n    void put (ll p, ll x) {\n        if (l == r) {\n            val = x;\n            return;\n        }\n        extend ();\n        ll mid = (l + r) >> 1;\n        if (p <= mid) lft -> put (p, x);\n        else rht -> put (p, x);\n        val = (lft -> val) + (rht -> val);\n    }\n\n    ll qry (ll ql, ll qr) {\n        if (l >= ql && r <= qr) return val;\n        extend();\n        ll res = 0;\n        ll mid = (l + r) >> 1;\n        if (ql <= mid) res = (res + lft -> qry (ql, qr));\n        if (qr >= mid + 1) res = (res + rht -> qry (ql, qr));\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        Node* root = new Node (0, n);\n        \n        auto chk = [&] (ll i) {\n            if (i > 0 && i < n - 1) {\n                if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                    root -> put (i, 1);\n                }\n                else {\n                    root -> put (i, 0);\n                }\n            }\n        };\n        \n        for (ll i = 0; i < n; i += 1) {\n            chk (i);\n        }\n        \n        vector <int> ans;\n        \n        for (auto x : queries) {\n            int tp = x[0], l = x[1], r = x[2];\n            if (tp == 1) {\n                int res = root -> qry (l, r) - (root -> qry (l, l)) - (root -> qry (r, r));\n                res = max (res, 0);\n                ans.push_back(res);\n            }\n            else {\n                nums[l] = r;\n                for (int i = max (0, l - 1); i <= min (n - 1, l + 1); i += 1) {\n                    chk (i);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506447.0
}