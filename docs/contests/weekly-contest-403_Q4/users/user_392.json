{
    "username": "tungduong150105",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& a) {\n        int n = (int) a.size();\n        int m = (int) a[0].size();\n        int ans = 1E9;\n        auto calc = [&]() -> void {\n            constexpr int inf = 1E9;\n            std::vector<std::vector<std::vector<int>>> dp(33, std::vector<std::vector<int>> (33, std::vector<int> (3, inf)));\n            auto calc = [&](int x, int y, int x2, int y2) -> int {\n                int l = y2 + 1, r = y - 1;\n                int u = x2 + 1, d = x - 1;\n                for (int i = x; i <= x2; ++i) {\n                    for (int j = y; j <= y2; ++j) {\n                        if (a[i][j]) {\n                            l = std::min(l, j);\n                            r = std::max(r, j);\n                            u = std::min(u, i);\n                            d = std::max(d, i);\n                        }\n                    }\n                }\n                return std::max(0, r - l + 1) * std::max(0, d - u + 1);\n            };\n            for (int i = 0; i < n; ++i) {\n                for (int j = 0; j < m; ++j) {\n                    dp[i][j][0] = calc(0, 0, i, j);\n                }\n            }\n            for (int t = 1; t < 3; ++t) {\n                for (int i = 0; i < n; ++i) {\n                    for (int j = 0; j < m; ++j) {\n                        for (int j2 = 0; j2 < j; ++j2) {\n                            dp[i][j][t] = std::min(dp[i][j][t], dp[i][j2][t - 1] + calc(0, j2 + 1, i, j));\n                        }\n                    }\n                }\n                for (int i = 0; i < m; ++i) {\n                    for (int j = 0; j < n; ++j) {\n                        for (int j2 = 0; j2 < j; ++j2) {\n                            dp[j][i][t] = std::min(dp[j][i][t], dp[j2][i][t - 1] + calc(j2 + 1, 0, j, i));\n                        }\n                    }\n                }\n            }\n            ans = std::min(ans, dp[n - 1][m - 1][2]);\n        };\n        auto b = a;\n        calc();\n        for (int i = 0; i < n; ++i) {\n            std::reverse(a[i].begin(), a[i].end());\n        }\n        calc();\n        for (int i = n - 1; i >= 0; --i) {\n            for (int j = 0; j < m; ++j) {\n                a[i][j] = b[n - 1 - i][j];\n            }\n        }\n        calc();\n        for (int i = 0; i < n; ++i) {\n            std::reverse(a[i].begin(), a[i].end());\n        }\n        calc();\n        return ans;\n    }\n};",
    "submit_ts": 1719113935.0
}