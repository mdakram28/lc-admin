{
    "username": "bagelmaki",
    "submission": "import sys\nsys.set_int_max_str_digits(100000)\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        # 7\n        # 3,6,9,12,15,18,21\n        # 1,4,7\n        # 100\n\n        if n == 1:\n            if k == 3 or k == 9 or k == 1:\n                return '9'\n            if k == 2 or k == 4 or k == 8:\n                return '8'\n            return str(k)\n        elif n == 2:\n            for num in ['99', '88', '77', '66', '55', '44', '33', '22', '11']:\n                if int(num) % k == 0:\n                    return num\n        \n        if k == 2:\n            return '8' + '9' * (n - 2) + '8'\n        if k == 5:\n            return '5' + '9' * (n - 2) + '5'\n        if k == 3 or k == 9 or k == 1:\n            return '9' + '9' * (n - 2) + '9'\n        if k == 8:\n            nums = list('x' * n)\n            nums[0] = '8'\n            nums[-1] = '8'\n            nums[1] = '8'\n            nums[-2] = '8'\n            nums[2] = '8'\n            nums[-3] = '8'\n            for i in range(len(nums)):\n                if nums[i] == 'x':\n                    nums[i] = '9'\n            return ''.join(nums)\n        if k == 4:\n            nums = list('x' * n)\n            nums[0] = '8'\n            nums[-1] = '8'\n            nums[1] = '8'\n            nums[-2] = '8'\n            for i in range(len(nums)):\n                if nums[i] == 'x':\n                    nums[i] = '9'\n            return ''.join(nums)\n\n        ends = ''\n        if k == 5:\n            ends = '5'\n        elif k % 2:\n            ends = '9'\n        else:\n            ends = '8'\n\n        \n        \n        if n % 2:\n            middles = ['9', '8' ,'7' ,'6' ,'5', '4', '3', '2', '1']\n        else:\n            middles = ['99', '88', '77', '66', '55', '44', '33', '22', '11', '00']\n\n        for mid in middles:\n            num = ends + '9' * ((n - 2 - len(mid)) // 2) + mid + '9' * ((n - 2 - len(mid)) // 2) + ends\n            if int(num) % k == 0:\n                return num\n        \n        return -1",
    "submit_ts": "1723951723",
    "subm_id": "1359778515"
}