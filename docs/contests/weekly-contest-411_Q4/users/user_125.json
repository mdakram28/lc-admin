{
    "username": "sanketjaipuriar",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    int n;\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        n = s.size();\n        int c0 = 0, c1 = 0;\n        int r = 0;\n        if (s[0] == '0') c0++;\n        else c1++;\n        vector<ll> pre(n);\n        vector<ll> p(n);\n        for (int i = 0; i < n; i++) {\n            while (true) {\n                if (r + 1 >= n) break;\n                if (s[r + 1] == '0') c0++;\n                else c1++;\n                if (c0 > k && c1 > k) {\n                    if (s[r + 1] == '0') c0--;\n                    else c1--;\n                    break;\n                }\n                r++;\n            }\n            pre[i] = r - i + 1;\n            p[i] = r;\n            if (s[i] == '0') c0--;\n            else c1--;\n        }\n        for (int i = 1; i < n; i++) {\n            pre[i] = pre[i - 1] + pre[i];\n        }\n        int q = queries.size();\n        vector<ll> ans(q);\n        for (int i = 0; i < q; i++) {\n            int l = queries[i][0], r = queries[i][1];\n            int t = lower_bound(p.begin(), p.end(), r + 1) - p.begin();\n            ll tmp;\n            if (t <= l) {\n                ll mx = r - l + 1;\n                ans[i] = (1ll * mx * (mx + 1)) / 2;\n                continue;\n            }\n            if (t > r) {\n                tmp = pre[r];\n                if (l - 1 >= 0) tmp -= pre[l - 1];\n                ans[i] = tmp;\n                continue;\n            }\n            tmp = pre[t - 1];\n            if (l - 1 >= 0) tmp -= pre[l - 1];\n            ll mx = r - t + 1;\n            ans[i] = (mx * (mx + 1)) / 2;\n            ans[i] += tmp;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723953382",
    "subm_id": "1359819783"
}