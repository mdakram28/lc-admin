{
    "username": "Itsuki_",
    "submission": "\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int ans = 0;\n        List<int[]> list = new ArrayList<>();\n        int t = 0;\n        int[][] tag = new int[n][m];\n        for (int i = 0; i <= n - 1 - i; i++) {\n            for (int j = 0; j <= m - 1 - j; j++) {\n                tag[i][j] = tag[n - 1 - i][j] = tag[i][m - 1 - j] = tag[n - 1 - i][m - 1 - j] = t++;\n//                if (i == n - 1 - i && j == m - 1 - j) {\n//                    ans += grid[i][j];\n//                } else if (i == n - 1 - i) {\n//                    list.add(f(new int[]{grid[i][j], grid[i][m - 1 - j]}));\n//                } else if (j == m - 1 - j) {\n//                    list.add(new int[]{grid[i][j], grid[n - 1 - i][j]});\n//                } else {\n//                    int[] e = new int[]{grid[i][j], grid[n - 1 - i][j], grid[i][m - 1 - j], grid[n - 1 - i][m - 1 - j]};\n//                    e = f(e);\n//                    ans += Math.min(e[0], e[1]);\n//                }\n            }\n        }\n        int[][] my = new int[t][2];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                my[tag[i][j]][grid[i][j]]++;\n            }\n        }\n        for (int[] e : my) {\n            if (e[0] + e[1] == 4) {\n                ans += Math.min(e[0], e[1]);\n            } else if (e[0] + e[1] == 2) {\n                list.add(e);\n            } else {\n                ans += e[1];\n            }\n        }\n        int k = list.size();\n        int[][] dp = new int[k + 1][4];\n        dp[0][2] = dp[0][3] = Integer.MAX_VALUE / 2;\n        for (int i = 0; i < k; i++) {\n            int[] e = list.get(i);\n            dp[i + 1][0] = Math.min(dp[i][0], dp[i][1]) + e[1];\n            dp[i + 1][1] = Math.min(dp[i][2], dp[i][3]) + e[0];\n            dp[i + 1][2] = Math.min(dp[i][2], dp[i][3]) + e[1];\n            dp[i + 1][3] = Math.min(dp[i][0], dp[i][1]) + e[0];\n        }\n        ans += Math.min(dp[k][0], dp[k][1]);\n        return ans;\n    }\n\n    int[] f(int[] e) {\n        int[] cnt = new int[2];\n        for (int x : e) {\n            cnt[x]++;\n        }\n        return cnt;\n    }\n}",
    "submit_ts": "1722697490",
    "subm_id": "552266372"
}