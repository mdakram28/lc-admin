{
    "username": "NatapongS",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        ++k;\n        vector<int> tab;\n        for (auto it: nums) tab.push_back(it);\n        sort(tab.begin(), tab.end());\n        tab.resize(unique(tab.begin(), tab.end()) - tab.begin());\n        vector<int> ma(k);\n        int ans = 1;\n        auto get_id = [&](int val) {\n            return lower_bound(tab.begin(), tab.end(), val) - tab.begin();\n        };\n        int _ = get_id(nums[0]);\n        ma[0] = 1;\n        vector<vector<int>> dp(nums.size(), vector<int>(k));\n        dp[_][0] = 1;\n        for (int i = 1; i < nums.size(); ++i) {\n            int id = get_id(nums[i]);\n            for (int j = k - 1; j >= 0; --j) {\n                int cand = 0;\n                if (dp[id][j]) cand = dp[id][j] + 1;\n                if (j > 0 && ma[j -1]) cand = max(cand, ma[j -1] + 1);\n                else cand = max(cand, 1);\n                dp[id][j] = max(dp[id][j], cand);\n                ma[j] = max(ma[j], cand);\n                ans = max(ans, cand);\n            }\n        }\n        \n        return ans;\n    \n    }\n};",
    "submit_ts": "1717860416",
    "subm_id": "1281756898"
}