{
    "username": "Sixtycat",
    "submission": "class Circle:\n    def __init__(self, idx, x, y, r, X, Y):\n        self.idx = idx\n        self.x = x\n        self.y = y\n        self.r = r\n        self.touch_left_up = abs(x - 0) <= r or abs(y - Y) <= r\n        self.touch_right_bot = abs(x - X) <= r or abs(y - 0) <= r\n\n    def intersect(self, other):\n        if (self.x - other.x) ** 2 + (self.y - other.y) ** 2 <= (self.r + other.r) ** 2:\n            return True\n\n        return False\n\nclass UFC:\n    def __init__(self, circle_map):\n        self.father = [i for i in range((len(circle_map)))]\n        self.circle_map = circle_map\n\n    def find(self, idx):\n        request = idx\n        while self.father[idx] != idx:\n            idx = self.father[idx]\n        result = idx\n        idx = request\n\n        while self.father[idx] != idx:\n            tmp = self.father[idx]\n            self.father[idx] = result\n            idx = tmp\n\n        return result\n\n    def union(self, idx1, idx2):\n        father1 = self.find(idx1)\n        father2 = self.find(idx2)\n        self.father[father1] = father2\n        self.circle_map[father2].touch_left_up = self.circle_map[father2].touch_left_up or self.circle_map[father1].touch_left_up\n        self.circle_map[father2].touch_right_bot = self.circle_map[father2].touch_right_bot or self.circle_map[father1].touch_right_bot\n\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        circle_map = dict()\n        for idx, (xi, yi, ri) in enumerate(circles):\n            circle_map[idx] = Circle(idx, xi, yi, ri, X, Y)\n\n        ufc = UFC(circle_map)\n        for idx1 in range(len(circle_map)):\n            for idx2 in range(idx1 + 1, len(circle_map)):\n                if circle_map[idx1].intersect(circle_map[idx2]):\n                    ufc.union(idx1, idx2)\n\n        # for val in circle_map.values():\n        #     print(val.touch_left_up, val.touch_right_bot)\n\n        for idx in range(len(circle_map)):\n            cur_father = circle_map[ufc.find(idx)]\n            if cur_father.touch_right_bot and cur_father.touch_left_up:\n                return False\n\n        \n\n        return True\n",
    "submit_ts": "1722137233",
    "subm_id": "1335757955"
}