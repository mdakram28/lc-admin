{
    "username": "ratanmamdekar",
    "submission": "class Solution {\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int[] e1 = findMinHeight(edges1);\n        int[] e2 = findMinHeight(edges2);\n        \n        int h1 = e1[0]*2;\n        if(e1[1]==2){\n            h1++;\n        }\n        int h2 = e2[0]*2;\n        if(e2[1]==2){\n            h2++;\n        }\n        \n        int combine =  1+e1[0]+e2[0];\n        if(e1[1]==2){\n            combine++;\n        }\n        if(e2[1]==2){\n            combine++;\n        }\n        \n        return Math.max(Math.max(h1,h2),combine);\n    }\n    \n    public int[] findMinHeight(int[][] edges) {\n        int n = edges.length+1;\n        if(n==1){\n            return new int[]{0,n};\n        }\n\n\n        List<List<Integer>> adjList = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adjList.add(new ArrayList<>());\n        }\n        int[] inD = new int[n];\n\n        for(int[] e : edges){\n            adjList.get(e[0]).add(e[1]);\n            adjList.get(e[1]).add(e[0]);\n            inD[e[0]]++;\n            inD[e[1]]++;\n        }\n\n        Deque<Integer> q = new ArrayDeque<>();\n        Set<Integer> vis = new HashSet<>();\n        for(int i=0;i<n;i++){\n            if(inD[i]==1){\n                q.offer(i);\n                vis.add(i);\n            }\n        }\n        int height =0;\n        while(n>2){\n            int size = q.size();\n            n-=size;\n            while(size > 0){\n                int node = q.poll();\n                for(int nxt : adjList.get(node)){\n                    if(vis.contains(nxt)){\n                        continue;\n                    }\n\n                    inD[nxt]--;\n                    if(inD[nxt]==1){\n                        q.offer(nxt);\n                        vis.add(nxt);\n                    }\n                }\n\n                size--;\n            }\n            height++;\n        }\n        // if(n==2){\n        //     height++;\n        // }\n        // System.out.println(n+\"+\"+height);\n        // System.out.println(q);\n        return new int[]{height,n};\n    }\n}",
    "submit_ts": "1719716322",
    "subm_id": "1304361202"
}