{
    "username": "danchunstone",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n            if (n <= 0) return new int[]{0};\n\n            int[] map = new int[n];\n            for (int i = 0; i < n; i++) {\n                map[i] = i + 1;\n            }\n\n            int currentResult = n - 1;\n            int[] result = new int[queries.length];\n            for (int i = 0; i < queries.length; i++) {\n                int left = queries[i][0], right = queries[i][1];\n                if (map[left] < right) {\n                    int current = 1;\n                    int next = map[left];\n                    while (next < right) {\n                        current++;\n                        next = map[next];\n                    }\n                    for (int j = left; j < right; j++) {\n                        map[j] = right;\n                    }\n                    int sub = current - 1;\n                    currentResult -= sub;\n                }\n                result[i] = currentResult;\n            }\n            return result;\n\n        }\n}",
    "submit_ts": "1722743158",
    "subm_id": "552349140"
}