{
    "username": "pratik_RRR_46",
    "submission": "import java.util.HashMap\n\nclass Solution {\n    private val dp = HashMap<Int, Array<Array<Array<Int>>>>()\n\n    private fun solve(k: Int, i: Int, jump: Int, can: Boolean): Int {\n        if (i > k + 5)\n            return 0\n\n        if (jump > 31)\n            return 0\n\n        if (dp.containsKey(i) && dp[i]!![jump][if (can) 1 else 0][0] != -1)\n            return dp[i]!![jump][if (can) 1 else 0][0]\n\n        var ans = if (i == k) 1 else 0\n        if (can)\n            ans += solve(k, i - 1, jump, false)\n        if (i + (1 shl jump) <= k + 1)\n            ans += solve(k, i + (1 shl jump), jump + 1, true)\n\n        if (!dp.containsKey(i))\n            dp[i] = Array(32) { Array(2) { Array(1) { -1 } } }\n\n        dp[i]!![jump][if (can) 1 else 0][0] = ans\n        return ans\n    }\n\n    fun waysToReachStair(k: Int): Int {\n        return solve(k, 1, 0, true)\n    }\n}\n",
    "submit_ts": "1716089916",
    "subm_id": "1261854557"
}