{
    "username": "D_Vode",
    "submission": "class Solution {\npublic:\n    // node,dis\n    pair<int,int> bfs(int sr, vector<vector<int>> &adj){\n        int n=adj.size();\n        queue<pair<int,int>> q;\n        q.push({sr,0});\n        vector<bool> vis(n,false);\n        vis[sr]=true;\n        int mxdis=0;\n        int node=0;\n        while(!q.empty()){\n            int u=q.front().first;\n            int dis=q.front().second;\n            q.pop();\n            \n            for(auto it:adj[u]){\n                if(!vis[it]){\n                    int newd=dis+1;\n                    vis[it]=true;\n                    q.push({it,newd});\n                    if(mxdis<newd){\n                        mxdis=newd;\n                        node=it;\n                    }\n                }\n            }\n        }\n        return {node,mxdis};\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        \n        vector<vector<int>> adj1(n);\n        vector<vector<int>> adj2(m);\n        for(auto it:edges1){\n            int u=it[0];\n            int v=it[1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n         for(auto it:edges2){\n            int u=it[0];\n            int v=it[1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n        \n        int sr1=bfs(0,adj1).first;\n        int d1=bfs(sr1,adj1).second;\n        int D=d1;\n        if(d1%2==0) d1/=2;\n        else d1=(d1+1)/2;\n        \n        int sr2=bfs(0,adj2).first;\n        int d2=bfs(sr2,adj2).second;\n        int C=d2;\n        if(d2%2==0) d2/=2;\n        else d2=(d2+1)/2;\n\n        return max(C,max(D,d1+d2+1));\n        \n        \n    }\n};",
    "submit_ts": "1719719508",
    "subm_id": "1304443644"
}