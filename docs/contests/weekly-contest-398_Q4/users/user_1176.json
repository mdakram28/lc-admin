{
    "username": "miketsubasa96",
    "submission": "class Solution {\n    int gk;\n    HashMap<String, Integer> hm;\n    public int waysToReachStair(int k) {\n        hm = new HashMap<>();\n        gk = k;\n        return dp(1, true, 0);\n    }\n    \n    int dp(int k, boolean f, int j) {\n        if(k < 0) {\n            return 0;\n        }\n        if(k > gk+1) {\n            return 0;\n        }\n        String key = \"\" + k + \"_\" + f + \"_\" + j;\n        if(hm.containsKey(key)) {\n            return hm.get(key);\n        }\n        int ans = 0;\n        if(k == gk) {\n            ans++;\n        }\n        if(f) {\n            ans += dp(k-1, false, j);\n        }\n        ans += dp(k + (int)Math.pow(2, j), true, j+1);\n        hm.put(key, ans);\n        return ans;\n    }\n}",
    "submit_ts": 1716090733.0
}