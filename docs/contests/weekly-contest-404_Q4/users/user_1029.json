{
    "username": "vivek2943",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size(), m = edges2.size();\n        int mini = max(n, m) + 1;\n        \n        vector<int> vis(mini, 0);\n        function <pair<int, int>(int, vector<vector<int>>&)> dfs = [&](int node, vector<vector<int>> &gr){\n            vis[node] = 1;\n            pair<int,int> p = {0, node};\n            \n            for(auto &i: gr[node]){\n                if(!vis[i]){\n                    pair<int, int> p1 = dfs(i, gr);\n                    p1.first += 1;\n                    \n                    if(p1.first > p.first){\n                        p = p1;\n                    }\n                }\n            }\n            \n            return p;\n        };\n        \n        auto getd = [&](vector<vector<int>>&edge){\n            vector<vector<int>> gr(mini);\n            for(auto &i: edge){\n                gr[i[0]].push_back(i[1]);\n                gr[i[1]].push_back(i[0]);\n            }\n            \n//             for(int i = 0;i < mini;i++){\n//                 cout << i << \" \";\n//                 for(int j = 0;j < gr[i].size();j++){\n//                     cout << gr[i][j] << \" \";\n//                 }\n//                 cout << endl;\n//             }\n            \n            fill(vis.begin(), vis.end(), 0);\n            pair<int,int> p = dfs(0, gr);\n            // cout << p.first << \" \" << p.second << endl;\n            fill(vis.begin(), vis.end(), 0);\n            p = dfs(p.second, gr);\n            \n            return p.first;\n        };\n        \n        int a = getd(edges1), b = getd(edges2);\n        \n        return max({a, b, (a+1)/2 + (b+1)/2 + 1});\n    }\n};",
    "submit_ts": 1719718764.0
}