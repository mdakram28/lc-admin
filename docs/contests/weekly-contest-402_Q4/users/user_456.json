{
    "username": "harshrathi2511",
    "submission": "// Template segment tree\ntemplate <typename T>\nstruct segtree {\n    vector<T> t;\n    T emptyans;\n    int n;\n\n    // Custom operation to combine two segments\n    T op(T a, T b) {\n        return a + b; // Modify this for different operations\n    }\n\n    bool isPeak(int indx, vector<int>& a) {\n        if (indx <= 0 || indx >= (a.size() - 1))\n            return false;\n        return a[indx] > a[indx + 1] && a[indx] > a[indx - 1];\n    }\n\n    T construct(int v, int l, int r, vector<int>& a) {\n        if (l == r) {\n            t[v] = isPeak(l, a) ? 1 : 0;\n            return t[v];\n        }\n        int mid = (r + l) / 2;\n        return t[v] = op(construct(2 * v + 1, l, mid, a), construct(2 * v + 2, mid + 1, r, a));\n    }\n\n    void build(vector<int>& a, T empty) {\n        n = a.size();\n        t = vector<T>(4 * n);\n        emptyans = empty;\n        construct(0, 0, n - 1, a);\n    }\n\n    T queryans(int v, int curl, int curr, int l, int r) {\n        if (curl > r || curr < l) {\n            return emptyans;\n        }\n        if (curl >= l && curr <= r) {\n            return t[v];\n        }\n        int mid = (curl + curr) / 2;\n        return op(queryans(2 * v + 1, curl, mid, l, r), queryans(2 * v + 2, mid + 1, curr, l, r));\n    }\n\n    T query(int l, int r) {\n        //l and r shouldnt be considered in the answer \n        l++;\n        r--; \n        if (l > r) return 0;\n        return queryans(0, 0, n - 1, l, r);\n    }\n\n    T updateval(int v, int i, int l, int r, vector<int>& a) {\n        if (r < i || l > i) {\n            return t[v];\n        }\n        if (l == r && l == i) {\n            t[v] = isPeak(i, a) ? 1 : 0;\n            return t[v];\n        }\n        int mid = (r + l) / 2;\n        return t[v] = op(updateval(2 * v + 1, i, l, mid, a), updateval(2 * v + 2, i, mid + 1, r, a));\n    }\n\n    void update(int i, int x, vector<int>& a) {\n        a[i] = x;\n        updateval(0, i, 0, n - 1, a);\n        //update the other ranges too\n        if (i > 0) updateval(0, i - 1, 0, n - 1, a);\n        if (i < n - 1) updateval(0, i + 1, 0, n - 1, a);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        segtree<int> segTree;\n        segTree.build(nums, 0); \n        vector<int> result;\n\n        for (auto& query : queries) {\n            if (query[0] == 1) {\n                int left = query[1];\n                int right = query[2];\n                result.push_back(segTree.query(left, right));\n            } else if (query[0] == 2) {\n                int index = query[1];\n                int value = query[2];\n                segTree.update(index, value, nums);\n            }\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1718507897",
    "subm_id": "1289665738"
}