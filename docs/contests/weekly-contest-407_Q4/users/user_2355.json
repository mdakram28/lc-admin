{
    "username": "gamer37",
    "submission": "vector<long long> tree1(400005),lazy(400005);\n#define ll long long\n\nvoid build(ll node,ll s,ll e,vector<ll> &a)\n{\n    if(s==e)\n    {\n        tree1[node]=abs(a[s]);\n    }\n    else\n    {\n        ll mid=(s+e)/2;\n        build(2*node,s,mid,a);\n        build(2*node+1,mid+1,e,a);\n\n        tree1[node]=tree1[2*node]+tree1[2*node+1];\n    }\n}\n\nvoid rangeupdate(ll node,ll s,ll e,ll l,ll r,ll val)\n{\n    if(lazy[node]!=0)\n    {\n        tree1[node]+=lazy[node];\n        if(s!=e)\n        {\n            lazy[2*node]+=lazy[node];\n            lazy[2*node+1]+=lazy[node];\n        }\n        lazy[node]=0;\n    }\n\n    if(s>e || s>r || e<l)\n        return;\n\n    if(l<=s && e<=r)\n    {\n        tree1[node]+=val;\n        if(s!=e)\n        {\n            lazy[2*node]+=val;\n            lazy[2*node+1]+=val;\n        }\n        return;\n    }\n\n    ll mid=(s+e)/2;\n    rangeupdate(2*node,s,mid,l,r,val);\n    rangeupdate(2*node+1,mid+1,e,l,r,val);\n\n    tree1[node]=tree1[2*node]+tree1[2*node+1];\n}\nll rangequery(ll node,ll s,ll e,ll l,ll r)\n{\n    if(s>e || s>r || e<l)\n        return 0;\n\n    if(lazy[node]!=0)\n    {\n        tree1[node]+=lazy[node];\n        if(s!=e)\n        {\n            lazy[2*node]+=lazy[node];\n            lazy[2*node+1]+=lazy[node];\n        }\n        lazy[node]=0;\n    }\n\n    if(l<=s && e<=r)\n        return tree1[node];\n\n    ll mid=(s+e)/2;\n    ll p1=rangequery(2*node,s,mid,l,r);\n    ll p2=rangequery(2*node+1,mid+1,e,l,r);\n    return p1+p2;\n}\n\nlong long solve(vector<long long> v)\n{\n    long long i,n=v.size(),ans=0,l,r,x;\n    vector<pair<long long,long long> > u;\n    set<long long> vis;\n    for(i=0;i<n;i++)\n    {\n        u.push_back({abs(v[i]),i});\n        //cout<<v[i]<<\" \";\n    }\n    //cout<<endl;\n    sort(u.begin(),u.end());\n    \n    for(i=0;i<4*n+5;i++)\n        tree1[i]=lazy[i]=0;\n    build(1,0,n-1,v);\n    \n    for(i=0;i<u.size();i++)\n    {\n        x=rangequery(1,0,n-1,u[i].second,u[i].second);\n        if(x==0)\n        {\n            vis.insert(u[i].second);\n            continue;\n        }\n        ans+=x;\n        auto j = vis.lower_bound(u[i].second);\n        l=0,r=n-1;\n        if(j!=vis.end())\n            r=*j;\n        if(!vis.empty() && j!=vis.begin())\n            l=*(--j);\n        rangeupdate(1,0,n-1,l,r,-x);\n        vis.insert(u[i].second);\n    }\n    return ans;\n}\n\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans=0,n=nums.size(),i,j;\n        vector<long long> b(n),v;\n        for(i=0;i<n;i++)\n            b[i]=target[i]-nums[i];//,cout<<b[i]<<\" \"<<endl;\n        for(i=0;i<n;i++)\n        {\n            v.push_back(b[i]);\n            for(j=i+1;j<n;j++)\n            {\n                if((b[i]>=0 && b[j]<0) || (b[i]<0 && b[j]>=0))\n                    break;\n                v.push_back(b[j]);\n            }\n            ans+=solve(v);\n            i=j-1;\n            v.clear();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533678",
    "subm_id": "1328014251"
}