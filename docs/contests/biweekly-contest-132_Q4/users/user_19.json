{
    "username": "cchao",
    "submission": "class Solution {\n public:\n  int maximumLength(const vector<int>& a, int k) {\n    const int n = a.size();\n    vector<vector<int>> dp(n, vector<int>(k + 1));\n    vector<unordered_map<int, int>> m(k + 1);\n    vector<int> mx(k + 1);\n\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n      int x = a[i];\n      for (int j = k; j >= 0; --j) {\n        int& d = dp[i][j];\n\n        d = m[j][x] + 1;\n        if (j > 0) {\n          d = max(d, mx[j - 1] + 1);\n        }\n\n        m[j][x] = max(m[j][x], d);\n        mx[j] = max(mx[j], d);\n\n        // cout << i << ' ' << j << \": \" << d << endl;\n        ans = max(ans, d);\n      }\n    }\n    // cout << ans << endl;\n    return ans;\n  }\n};\n",
    "submit_ts": "1717858835",
    "subm_id": "1281701739"
}