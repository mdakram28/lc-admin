{
    "username": "kenti1114",
    "submission": "#pragma GCC optimize \"Ofast\"\ntypedef long long ll;\ntypedef pair<ll, int> P;\nconst long long INF = (ll)1e18;\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<P>> memo(board.size());\n        for (int i = 0; i < board.size(); i++) {\n            P init = make_pair(-INF, -1);\n            vector<P> res(3, init);\n            for (int j = 0; j < board[i].size(); j++) {\n                P tmp = make_pair((ll)(board[i][j]), j);\n                for (int k = 0; k < 3; k++) {\n                    if (res[k].first < tmp.first)\n                        swap(res[k], tmp);\n                }\n            }\n            memo[i] = res;\n        }\n        ll ans = -INF;\n        for (int i = 0; i < board.size(); i++) {\n            for (int j = i + 1; j < board.size(); j++) {\n                for (int k = j + 1; k < board.size(); k++) {\n                    int idx[3];\n                    idx[0] = i; idx[1] = j; idx[2] = k;\n                    do {\n                    bool used[500];\n                    fill(used, used + 500, false);\n                    ll cs = 0LL;\n                    for (int l = 0; l < 3; l++) {\n                        int id = 0;\n                        while (used[memo[idx[l]][id].second])\n                            id++;\n                        cs += memo[idx[l]][id].first;\n                        used[memo[idx[l]][id].second] = true;\n                    }\n                    ans = max(ans, cs);\n                    } while (next_permutation(idx, idx + 3));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909456",
    "subm_id": "1359193250"
}