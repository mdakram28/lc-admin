{
    "username": "Scoopsicus",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        @lru_cache(maxsize=None)\n        def backtrack(idx, justDidThing, jump):\n            beginningSum = 0\n            if idx == k:\n                # return 1\n                beginningSum = 1\n            if idx > k+2:\n                return 0\n\n            # optionA\n            optionA = 0\n            if idx > 0 and not justDidThing:\n                optionA = backtrack(idx-1, True, jump)\n            # optionB\n            optionB = backtrack(idx+(1<<jump), False, jump+1)\n            \n            return optionA+optionB+beginningSum\n\n        return backtrack(1, False, 0)",
    "submit_ts": 1716088078.0
}