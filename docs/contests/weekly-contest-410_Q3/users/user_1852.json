{
    "username": "AnxiousBug",
    "submission": "const int MOD = 1e9 + 7;\nint dp[2001][51];\n\nclass Solution {\npublic:\n    int countPairsRecursive(int i, int prev, const vector<int>& nums, int prev_arr2_i) {\n        int n = nums.size();\n        \n        if (i == n) {\n            return 1;\n        }\n        \n        if (dp[i][prev] != -1) {\n            return dp[i][prev];\n        }\n        \n        int totalWays = 0;\n        // int prev_arr2_i = INT_MAX;\n        for (int arr1_i = prev; arr1_i <= nums[i]; ++arr1_i) {\n            int arr2_i = nums[i] - arr1_i;\n            if (arr2_i >= 0 && arr2_i <= prev_arr2_i) {\n                prev_arr2_i = arr2_i;\n                totalWays = (totalWays + countPairsRecursive(i + 1, arr1_i, nums, prev_arr2_i)) % MOD;\n            }\n        }\n        \n        return dp[i][prev] = totalWays;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        memset(dp, -1, sizeof(dp));\n\n        return countPairsRecursive(0, 0, nums, INT_MAX);\n    }\n};",
    "submit_ts": "1723346667",
    "subm_id": "1351582557"
}