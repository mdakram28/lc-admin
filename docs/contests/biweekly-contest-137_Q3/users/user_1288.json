{
    "username": "seryp",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        int r = b.size();\n        int c = b[0].size();\n        long long ans = -1e9;\n        ans *= 100;\n        long long min = ans;\n        vector<vector<int>> st(3,vector<int>()),em(3,vector<int>());\n        for(int i = 0;i < 8;i++){\n            if(i & 1){\n                st[0].push_back(i);\n                em[0].push_back(i^1);\n            }\n            if(i & 2){\n                st[1].push_back(i);\n                em[1].push_back(i^2);\n            } if(i &4){\n                st[2].push_back(i);\n                em[2].push_back(i^4);\n            }\n        }\n        int per = c/3;\n        vector<vector<int>> order(r);\n        for(int i = 0;i < r;i++){\n            for(int j =0;j < c;j++){\n                order[i].push_back(j);\n            }\n            sort(order[i].begin(),order[i].end(),[&](int x,int y){\n                return b[i][x] > b[i][y];\n            });\n        }\n        for(int i = 0;i < c;i++){\n            for(int j = i + 1;j < c;j++){\n                //printf(\"check %d %d\\n\",i,j);\n                vector<vector<long long>> dp(2,vector<long long>(8,min));\n                dp[0][0] = dp[1][0] = 0;\n                int cur = 1;\n                for(int row = 0;row < r;row++){\n                    //printf(\"check row %d\\n\",row);\n                    cur = 1 - cur;\n                    dp[cur] = dp[1-cur];\n                    int iter[3]={-1,i,j};\n                    for(int x = 0;x < 3;x++){\n                        int col = iter[x];\n                        //printf(\"check col %d\\n\",col);\n                        int f;\n                        long long num;\n                        if(col == i){\n                            f = 0;\n                            num = b[row][col];\n                        } else if(col ==j){\n                            f = 1;\n                            num = b[row][col];\n                        }else {\n                            f = 2;\n                            for(int y = 0;y < c;y++){\n                                if(order[row][y] != i && order[row][y] != j){\n                                    num = b[row][order[row][y]];\n                                    break;\n                                }\n                            }\n                        }\n                        for(int w = 0;w < st[f].size();w++){\n                                if(num + dp[1-cur][em[f][w]] > dp[cur][st[f][w]]){\n                                    dp[cur][st[f][w]] = num + dp[1-cur][em[f][w]];\n                                }\n                        }\n                        \n                    }\n                    // printf(\"check row %d over\\n\",row);\n                    // for(auto w:dp[cur]){\n                    // // ans = max(ans,w);\n                    // printf(\"%lld \",w);\n                    // }\n                }\n                ans = max(ans,dp[cur][7]);\n            }\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1723910311",
    "subm_id": "1359225417"
}