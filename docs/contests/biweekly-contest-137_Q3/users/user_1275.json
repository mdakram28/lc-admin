{
    "username": "Manu Gupta",
    "submission": "class Solution {\npublic:\n\n    long long s1(vector<vector<int>>&board, int a, int b, int col1, int col2, vector<vector<int>> &v1){\n        long long maxi = -1e10;\n        if(a >= board.size()) return maxi;\n        // for(int i=a;i<board.size();i++){\n            for(int j=0;j<board[0].size();j++){\n                if(j != col1 && j != col2){\n                    maxi = max(maxi, (long long)v1[a][j]);\n                }\n            }\n        // }\n        return maxi;\n    }\n\n    long long solve(vector<vector<int>>&board, int i, int j, int col1, vector<vector<vector<long long>>>&dp, vector<vector<int>>&v1){\n        // int cnt = 0;\n        // if(col1 != -1) cnt++;\n        // if(col2 != -1) cnt++;\n        if(i >= board.size() || j >= board[0].size()){\n            return -1e10;\n        }\n        int c1 = col1;\n        // int c2 = col2;\n        if(dp[i][j][c1+1] != -1) return dp[i][j][c1+1];\n        long long t1 = solve(board, i+1, j, col1, dp, v1);\n        long long t2 = solve(board, i, j+1, col1, dp, v1);\n        if(j == col1) return max(t1, t2);\n        long long t3 = (long long)board[i][j];\n        if(col1 == -1){\n            col1 = j;\n        }\n        else{\n            long long ab = s1(board, i+1, 0, col1, j, v1);\n            return dp[i][j][c1+1] = max(t1, max(t2, t3 + ab));\n        }\n        t3 += solve(board, i+1, 0, col1, dp, v1);\n        return dp[i][j][c1+1] = max(t1, max(t2, t3));\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<vector<long long>>> dp(m+1, vector<vector<long long>>(n+1, vector<long long>(n+2, -1)));\n        vector<vector<int>> v1(m, vector<int>(n, INT_MIN));\n        for(int j=0;j<board[0].size();j++){\n            int maxi = INT_MIN;\n            for(int i=m-1;i>=0;i--){\n                if(i == m-1){\n                    maxi = board[i][j];\n                    v1[i][j] = maxi;\n                }\n                else{\n                    maxi = max(board[i][j], maxi);\n                    v1[i][j] = maxi;\n                }\n            }\n        }\n        return solve(board, 0, 0, -1, dp, v1);\n\n    }\n};",
    "submit_ts": "1723910239",
    "subm_id": "1359222567"
}