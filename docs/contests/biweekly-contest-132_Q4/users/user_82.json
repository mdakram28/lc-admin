{
    "username": "ForgottenSemicolon",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n        int n = nums.length;\n        Map<Integer, Integer> [] dp = new HashMap[k+1];\n        for(int i = 0; i<=k; i++){\n            dp[i] = new HashMap<>();\n        }\n        int ans = 0;\n        int [] prevMax = new int[n];\n        for(int j = 0; j<=k; j++){\n            int [] currMax = new int[n];\n            for(int i = 0; i<n; i++){\n                int max = 1;\n                max = Math.max(max, dp[j].getOrDefault(nums[i], 0)+1);\n                if(i>0)max = Math.max(max, prevMax[i-1]+1);\n                ans = Math.max(ans, max);\n                if(i>0) currMax[i] = currMax[i-1];\n                currMax[i] = Math.max(currMax[i], max);\n                dp[j].put(nums[i], max);\n            }\n            prevMax = currMax;\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1717859760.0
}