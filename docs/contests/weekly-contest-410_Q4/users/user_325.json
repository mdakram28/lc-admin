{
    "username": "spadreams",
    "submission": "class Solution {\n    long mod = (long)(1e9 + 7);\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][] f = new long[n][1010];\n        for (int i = 0; i <= nums[0]; i++) f[0][i] = 1;\n        \n        for (int i = 1; i < n; i++) {\n            long[] s = new long[nums[i - 1] + 2];\n            for (int k = 0; k <= nums[i - 1]; k++) {\n                s[k + 1] = (s[k] + f[i - 1][k]) % mod;\n            }\n            int d = nums[i] - nums[i - 1];\n\n            for (int j = 0; j <= nums[i]; j++) {\n                int x = Math.max(0, d);\n                f[i][j] = (f[i][j] + s[Math.max(0, j - x + 1)]) % mod;\n                // for (int k = 0; k <= nums[i - 1]; k++) {\n                //     if (j >= k && nums[i] - j <= nums[i - 1] - k) {\n                //         f[i][j] = (f[i][j] + f[i - 1][k]) % mod;\n                //     }\n                // }\n            }\n        }\n        \n        long res = 0;\n        for (int i = 0; i <= nums[n - 1]; i++) res = (res + f[n - 1][i]) % mod;\n        return (int)res;\n    }\n}",
    "submit_ts": "1723346706",
    "subm_id": "1351583444"
}