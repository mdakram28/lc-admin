{
    "username": "sweet-joliotxq4",
    "submission": "class Solution\n{\n    typedef pair<int, int> pii;\n    bool check(pii &p1, pii &p2)\n    {\n        return (p1.first == p2.second) && (p1.second == p2.first);\n    }\n\npublic:\n    int minimumDistance(vector<vector<int>> &points)\n    {\n        const int n = points.size();\n        vector<pii> v1(n), v2(n);\n        for (int i = 0; i < n; i++)\n        {\n            v1[i] = make_pair(points[i][0] + points[i][1], points[i][0] - points[i][1]);\n            v2[i] = {v1[i].second, v1[i].first};\n        }\n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n        auto p1 = v1.front(), p2 = v1.back(), p3 = v2.front(), p4 = v2.back();\n        int res = max(p2.first - p1.first, p4.first - p3.first);\n        if (check(p1, p3))\n            res = min(res, max(p2.first - v1[1].first, p4.first - v2[1].first));\n        else if (check(p1, p4))\n            res = min(res, max(p2.first - v1[1].first, v2[n - 2].first - p3.first));\n        else\n            res = min(res, max(p2.first - v1[1].first, p4.first - p3.first));\n        if (check(p2, p3))\n            res = min(res, max(v1[n - 2].first - p1.first, p4.first - v2[1].first));\n        else if (check(p2, p4))\n            res = min(res, max(v1[n - 2].first - p1.first, v2[n - 2].first - p3.first));\n        else\n            res = min(res, max(v1[n - 2].first - p1.first, p4.first - p3.first));\n        if (check(p3, p1))\n            res = min(res, max(p2.first - v1[1].first, p4.first - v2[1].first));\n        else if (check(p3, p2))\n            res = min(res, max(v1[n - 2].first - p1.first, p4.first - v2[1].first));\n        else\n            res = min(res, max(p2.first - p1.first, p4.first - v2[1].first));\n        if (check(p4, p1))\n            res = min(res, max(p2.first - v1[1].first, v2[n - 2].first - p3.first));\n        else if (check(p4, p2))\n            res = min(res, max(v1[n - 2].first - p1.first, v2[n - 2].first - p3.first));\n        else\n            res = min(res, max(p2.first - p1.first, v2[n - 2].first - p3.first));\n        return res;\n    }\n};"
}