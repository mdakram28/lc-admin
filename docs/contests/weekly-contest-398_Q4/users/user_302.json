{
    "username": "jfantasy90",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        queue<pair<int, int>> que;\n        map<pair<int, int>, int> cnt;\n        set<pair<int, int>> inque;\n        \n        cnt[{1, 0}] = 1;\n        inque.insert({1, 0});\n        que.push({1, 0});\n        \n        while (!que.empty()) {\n            int x = que.front().first, y = que.front().second;\n            que.pop();\n            inque.erase({x, y});\n            \n            if ((1 << y) < k + 2) {\n                int nx1 = x + (1 << y), ny1 = y + 1;\n                if (nx1 < k + 2) {\n                    cnt[{nx1, ny1}] += cnt[{x, y}];\n                    if (inque.find({nx1, ny1}) == inque.end()) {\n                        inque.insert({nx1, ny1});\n                        que.push({nx1, ny1});\n                    }\n                }\n            }\n            \n            if (x != 0) {\n                int nx2 = x - 1 + (1 << y), ny2 = y + 1;\n                if (nx2 < k + 2) {\n                    cnt[{nx2, ny2}] += cnt[{x, y}];\n                        if (inque.find({nx2, ny2}) == inque.end()) {\n                            inque.insert({nx2, ny2});\n                            que.push({nx2, ny2});\n                        }\n                }\n            }\n        }\n        \n        int res = 0;\n        for (int i = 0; i < 40; ++i) res += cnt[{k, i}] + cnt[{k + 1, i}];\n        return res;\n    }\n    \n};",
    "submit_ts": "1716087713",
    "subm_id": "1261792162"
}