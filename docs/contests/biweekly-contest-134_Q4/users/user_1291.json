{
    "username": "eulusoy",
    "submission": "class Solution {\npublic:\n    int find1(vector<vector<int>>& bitCount, int i, int k){\n        // cout << i << endl;\n        int start = i;\n        int end = bitCount.size();\n        int mid=0;\n        while(start<end){\n            mid = (start+end)/2;\n            // cout << start << \" \" << mid << \" \" << end << endl;\n            int j=0;\n            for(j=0; j<32; ++j){\n                if(((k>>j)&1)==1){\n                    if((bitCount[mid][j]-bitCount[i][j])!=(mid-i)){\n                        // cout << \"if break\" << endl;\n                        end = mid;\n                        break;\n                    }\n                }\n                else{\n                    if((bitCount[mid][j]-bitCount[i][j])==(mid-i)){\n                        // cout << \"else break\" << endl;\n                        start = mid+1;\n                        break;\n                    }\n                }\n            }\n            if(j==32){\n                start = mid+1;\n            }\n        }\n        mid = start-1;\n        // cout << start << \" \" << mid << endl;\n        for(int j=0; j<32; ++j){\n            if(((k>>j)&1)==1){\n                if((bitCount[mid][j]-bitCount[i][j])!=(mid-i)){\n                    return -1;\n                }\n            }\n            else{\n                if((bitCount[mid][j]-bitCount[i][j])==(mid-i)){\n                    return -1;\n                }\n            }\n        }\n        return mid;\n    }\n\n    int find2(vector<vector<int>>& bitCount, int i, int k){\n        // cout << i << endl;\n        int start = i;\n        int end = bitCount.size();\n        int mid=0;\n        while(start<end){\n            mid = (start+end)/2;\n            // cout << start << \" \" << mid << \" \" << end << endl;\n            int j=0;\n            for(j=0; j<32; ++j){\n                if(((k>>j)&1)==1){\n                    if((bitCount[mid][j]-bitCount[i][j])!=(mid-i)){\n                        // cout << \"if break\" << endl;\n                        end = mid;\n                        break;\n                    }\n                }\n                else{\n                    if((bitCount[mid][j]-bitCount[i][j])==(mid-i)){\n                        // cout << \"else break\" << endl;\n                        start = mid+1;\n                        break;\n                    }\n                }\n            }\n            if(j==32){\n                end = mid;\n            }\n        }\n        mid = start-1;\n        // cout << start << \" \" << mid << endl;\n        // for(int j=0; j<32; ++j){\n        //     if(((k>>j)&1)==1){\n        //         if((bitCount[mid][j]-bitCount[i][j])!=(mid-i)){\n        //             return i;\n        //         }\n        //     }\n        //     else{\n        //         if((bitCount[mid][j]-bitCount[i][j])==(mid-i)){\n        //             return i;\n        //         }\n        //     }\n        // }\n        return mid;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> bitCounts(n+1, vector<int>(32, 0));\n        for(int i=0; i<n; ++i){\n            for(int j=0; j<32; ++j){\n                if(((nums[i]>>j)&1)==1){\n                    bitCounts[i+1][j] = bitCounts[i][j]+1;\n                }\n                else{\n                    bitCounts[i+1][j] = bitCounts[i][j];\n                }\n            }\n        }\n        long long ans = 0;\n        int endPoint = 0;\n        for(int i=0; i<n; ++i){\n            int c = find1(bitCounts,i,k);\n            if(c>0){\n                ans += (c-find2(bitCounts,i,k));\n            }\n            // cout << \"ans: \" << ans << endl;\n            // cout << find1(bitCounts,i,k) << \" \" << find2(bitCounts,i,k) << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280759",
    "subm_id": "1311801055"
}