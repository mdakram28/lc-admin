{
    "username": "Achyut884",
    "submission": "class Solution {\n    static class TrieNode {\n        Map<Character, TrieNode> children;\n        int cost;\n\n        TrieNode() {\n            children = new HashMap<>();\n            cost = Integer.MAX_VALUE;\n        }\n    }\n\n    class Trie {\n        TrieNode root;\n\n        Trie() {\n            root = new TrieNode();\n        }\n\n        void insert(String word, int cost) {\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                node.children.putIfAbsent(c, new TrieNode());\n                node = node.children.get(c);\n            }\n            node.cost = Math.min(node.cost, cost);\n        }\n\n        List<int[]> search(String target, int start) {\n            TrieNode node = root;\n            List<int[]> results = new ArrayList<>();\n            for (int i = start; i < target.length(); i++) {\n                char c = target.charAt(i);\n                if (!node.children.containsKey(c)) {\n                    break;\n                }\n                node = node.children.get(c);\n                if (node.cost != Integer.MAX_VALUE) {\n                    results.add(new int[]{i + 1, node.cost});\n                }\n            }\n            return results;\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; i++) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            List<int[]> matches = trie.search(target, i);\n            for (int[] match : matches) {\n                int endIndex = match[0];\n                int cost = match[1];\n                dp[endIndex] = Math.min(dp[endIndex], dp[i] + cost);\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}",
    "submit_ts": "1720321156",
    "subm_id": "1312315039"
}