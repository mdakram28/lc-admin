{
    "username": "Astitva1508",
    "submission": "class Solution {\n    vector<int>a;\n    vector<int>seg;\n    int maxi = INT_MAX;\n\n    void build(int index, int low, int high)\n    {\n        if (low == high)\n        {\n            seg[index] = a[low];\n            return;\n        }\n        int mid = (low + high) / 2;\n        build(2 * index + 1, low, mid);\n        build(2 * index + 2, mid + 1, high);\n        seg[index] = seg[2 * index + 1] & seg[2 * index + 2];\n    }\n\n    int query(int index, int low, int high, int l, int r)\n    {\n        // Asked range ke andar hai current range\n        if (l <= low && r >= high)\n            return seg[index];\n        // Completely outside\n        if (r < low || l > high)\n            return maxi;\n        int mid = (low + high) / 2;\n        int left = query(2 * index + 1, low, mid, l, r);\n        int right = query(2 * index + 2, mid + 1, high, l, r);\n        return (left & right);\n    }\npublic:\n    long long countSubarrays(vector<int> &nums, int k)\n{\n    int n = nums.size();\n        a.resize(n+10);\n        seg.resize(4*n+10);\n    for(int i=0;i<n;i++) a[i] = nums[i];\n    build(0, 0, n - 1);\n    long long ans =0;\n    for(int i=0;i<n;i++){\n        if(nums[i]<k) continue;\n        int firstIndex = -1;\n        int lastIndex = -1;\n        int begin = i;\n        int end = n-1;\n        while(begin<=end){\n            int mid = (begin+end)/2;\n            int q = query(0, 0, n - 1, i, mid);\n            if (q>k)\n            {\n                begin = mid+1;\n            }else if(q==k){\n                firstIndex = mid;\n                end = mid-1;\n            }else{\n                end = mid-1;\n            }\n        }\n        begin = i;\n        end = n-1;\n        while (begin <= end)\n        {\n            int mid = (begin + end) / 2;\n            int q = query(0, 0, n - 1, i, mid);\n            if (q > k)\n            {\n                begin = mid + 1;\n            }\n            else if (q == k)\n            {\n                lastIndex = mid;\n                begin = mid+1;\n            }\n            else\n            {\n                end = mid - 1;\n            }\n        }\n        if(firstIndex==-1) continue;\n        ans+=(lastIndex-firstIndex+1);\n    }\n    return ans;\n}\n};",
    "submit_ts": "1720279419",
    "subm_id": "1311750422"
}