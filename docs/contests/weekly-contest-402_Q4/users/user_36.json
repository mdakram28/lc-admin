{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        int tree[n];\n        memset(tree, 0, sizeof(tree));\n\n        auto lb = [&](int x) { return x & (-x); };\n\n        auto add = [&](int pos, int val) {\n            for (; pos < n; pos += lb(pos)) tree[pos] += val;\n        };\n\n        auto query = [&](int pos) {\n            if (pos <= 0) return 0;\n            int ret = 0;\n            for (; pos; pos -= lb(pos)) ret += tree[pos];\n            return ret;\n        };\n\n        auto check = [&](int i) {\n            if (i <= 0 || i >= n - 1) return false;\n            return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n        };\n\n        int flag[n];\n        memset(flag, 0, sizeof(flag));\n        for (int i = 1; i + 1 < n; i++) {\n            if (check(i)) {\n                flag[i] = 1;\n                add(i, 1);\n            }\n        }\n\n        vector<int> ans;\n        for (auto &qry : queries) {\n            if (qry[0] == 1) {\n                int L = qry[1] + 1, R = qry[2] - 1;\n                if (L > R) ans.push_back(0);\n                else ans.push_back(query(R) - query(L - 1));\n            }\n            else {\n                int idx = qry[1], val = qry[2];\n\n                if (idx - 1 > 0) add(idx - 1, -flag[idx - 1]);\n                if (idx > 0) add(idx, -flag[idx]);\n                if (idx + 1 < n) add(idx + 1, -flag[idx + 1]);\n\n                nums[idx] = val;\n                for (int d = -1; d <= 1; d++) if (idx + d > 0 && idx + d < n) {\n                    if (check(idx + d)) flag[idx + d] = 1;\n                    else flag[idx + d] = 0;\n                }\n\n                if (idx - 1 > 0) add(idx - 1, flag[idx - 1]);\n                if (idx > 0) add(idx, flag[idx]);\n                if (idx + 1 < n) add(idx + 1, flag[idx + 1]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506114.0
}