{
    "username": "Sayan_244",
    "submission": "#define ll long long\n#define siz(a) int((a).size())\nconst ll mod1 = 1e9l + 7;\n\n\ntemplate<ll MOD = mod1>\nstruct Mint {\n    ll value;\n    // static const int MOD_value = MOD;\n \n    Mint(long long v = 0) { value = v % MOD; if (value < 0) value += MOD;}\n    Mint(long long a, long long b) : value(0){ *this += a; *this /= b;}\n \n    Mint& operator+=(Mint const& b) {value += b.value; if (value >= MOD) value -= MOD; return *this;}\n    Mint& operator-=(Mint const& b) {value -= b.value; if (value < 0) value += MOD;return *this;}\n    Mint& operator*=(Mint const& b) {value = (long long)value * b.value % MOD;return *this;}\n \n    friend Mint mexp(Mint a, long long e) {\n        Mint res = 1; while (e) { if (e&1) res *= a; a *= a; e >>= 1; }\n        return res;\n    }\n    \n    friend Mint inverse(Mint a) { return mexp(a, MOD - 2); }\n \n    Mint& operator/=(Mint const& b) { return *this *= inverse(b); }\n    friend Mint operator+(Mint a, Mint const b) { return a += b; }\n    friend Mint operator-(Mint a, Mint const b) { return a -= b; }\n    friend Mint operator-(Mint const a) { return 0 - a; }\n    friend Mint operator*(Mint a, Mint const b) { return a *= b; }\n    friend Mint operator/(Mint a, Mint const b) { return a /= b; }\n    friend std::istream& operator>>(std::istream& istream, Mint& a) {long long v; istream >> v; a = v; return istream;}\n    friend std::ostream& operator<<(std::ostream& ostream, Mint const& a) {return ostream << a.value;}\n    friend bool operator==(Mint const& a, Mint const& b) {return a.value == b.value;}\n    friend bool operator!=(Mint const& a, Mint const& b) {return a.value != b.value;}\n};\nusing mint = Mint<mod1>;\n \nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n      ll n = siz(nums);\n      vector <vector <mint>> dp(1003, vector <mint> (n));\n      for(ll i = 0; i <= nums[0]; i++) {\n        dp[i][0] = 1;\n        // if (i > 0) {\n        //   dp[i][0] += dp[i - 1][0];\n        //   //print(i, dp[i][0]);\n        // }\n      }\n\n      for(ll i = 1; i < n; i++) {\n        for(ll j = 0; j <= nums[i - 1]; j++) {\n          mint cur = dp[j][i - 1];\n          // if (i == 1) {\n          //   print(j, cur);\n          // }\n          ll r1 = nums[i - 1] - j;\n          //(j, r1) -> (j, nums[i])\n          //(j, r1) -> (j + x,  r1)\n          ll from = j;\n          ll to = nums[i];\n          if (nums[i] - from > r1) {\n            from = nums[i] - r1;\n            //to = nums[i];\n          }\n\n          \n\n          if (from <= nums[i]) {\n            // if (i == 1) {\n            //   print(j, from, to, cur);\n            // }\n            dp[from][i] += cur;\n            dp[to + 1][i] -= cur;\n          }\n          //k should be from j to 1000 or nums[i] whichever is smaller\n        }\n\n        for(ll j = 0; j <= nums[i]; j++) {\n          // if (i == 1) {\n          //   print(j, dp[j][i]);\n          // }\n          if (j > 0) {\n            dp[j][i] += dp[j - 1][i];\n          }\n          // if (i == 2) {\n          //   print(j, dp[j][i]);\n          // }\n        }\n      }\n\n      mint ans = 0;\n      for(ll j = 0; j <= nums[n - 1]; j++) {\n        ans += dp[j][n - 1];\n      }\n\n      return (int)ans.value;      \n    }\n};",
    "submit_ts": "1723347796",
    "subm_id": "1351605697"
}