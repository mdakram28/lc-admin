{
    "username": "liu-qing-8t",
    "submission": "\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) \n    {\n        int row_cnt = grid.size();\n        int col_cnt = grid[0].size();\n\n        int result = 0, one_cnt = 0, zero_cnt = 0;\n        std::vector<std::vector<int>> vv_cnt(5, std::vector<int>(5));\n\n        for (int r = 0; r <= (row_cnt - 1) / 2; ++r)\n        {\n            for (int c = 0; c <= (col_cnt - 1) / 2; ++c)\n            {\n                cal_cnt(grid, row_cnt, col_cnt, r, c, vv_cnt);\n            }\n        }\n        result += vv_cnt[1][3];\n        result += vv_cnt[2][2] * 2;\n        result += vv_cnt[3][1];\n\n        int x = vv_cnt[0][2];\n        if (x % 2 == 0)\n        {\n            result += vv_cnt[1][1];\n        }\n        else\n        {\n            if (vv_cnt[1][1] >= 1)\n            {\n                result += vv_cnt[1][1];\n            }\n            else\n            {\n                result += vv_cnt[1][1];\n                result += 2;\n            }\n        }\n\n        result += vv_cnt[0][1];\n        return result;\n    }\nprivate:\n    void cal_cnt(auto& grid, int row_cnt, int col_cnt, int r, int c, auto& vv_cnt)\n    {\n        int r2 = row_cnt - 1 - r;\n        int c2 = col_cnt - 1 - c;\n        if (r != r2 && c != c2)\n        {\n            int cnt0 = (grid[r][c] == 0) ? 1 : 0;\n            cnt0 += (grid[r][c2] == 0) ? 1 : 0;\n            cnt0 += (grid[r2][c] == 0) ? 1 : 0;\n            cnt0 += (grid[r2][c2] == 0) ? 1 : 0;\n            int cnt1 = (grid[r][c] == 1) ? 1 : 0;\n            cnt1 += (grid[r][c2] == 1) ? 1 : 0;\n            cnt1 += (grid[r2][c] == 1) ? 1 : 0;\n            cnt1 += (grid[r2][c2] == 1) ? 1 : 0;\n            vv_cnt[cnt0][cnt1]++;\n        }\n        else if (r != r2)\n        {\n            int cnt0 = (grid[r][c] == 0) ? 1 : 0;\n            cnt0 += (grid[r2][c] == 0) ? 1 : 0;\n            int cnt1 = (grid[r][c] == 1) ? 1 : 0;\n            cnt1 += (grid[r2][c] == 1) ? 1 : 0;\n            vv_cnt[cnt0][cnt1]++;\n        }\n        else if (c != c2)\n        {\n            int cnt0 = (grid[r][c] == 0) ? 1 : 0;\n            cnt0 += (grid[r][c2] == 0) ? 1 : 0;\n            int cnt1 = (grid[r][c] == 1) ? 1 : 0;\n            cnt1 += (grid[r][c2] == 1) ? 1 : 0;\n            vv_cnt[cnt0][cnt1]++;\n        }\n        else\n        {\n            int cnt0 = (grid[r][c] == 0) ? 1 : 0;\n            int cnt1 = (grid[r][c] == 1) ? 1 : 0;\n            vv_cnt[cnt0][cnt1]++;\n        }\n    }\n};",
    "submit_ts": "1722699901",
    "subm_id": "552277612"
}