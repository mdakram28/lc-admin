{
    "username": "rtdrtd67",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> dists;\n        for (int i = 0; i < n; i++) {\n            dists.push_back(1);\n        }\n        int cur_dist = n-1;\n        vector<int> res;\n        set<int> starts;\n        for (int i = 0; i < queries.size(); i++) {\n            vector<int>& query = queries[i];\n            if (dists[query[0]] >= query[1]-query[0]) {\n                res.push_back(cur_dist);\n                continue;\n            }\n            auto it = starts.lower_bound(query[0]);\n            if (it != starts.begin()) {\n                it--;\n                if (*it + dists[*it] >= query[1]) {\n                    res.push_back(cur_dist);\n                    continue;\n                }\n                it++;\n            }\n            while ((it != starts.end()) && ((*it) + (dists[*it]) <= query[1])) {\n                auto prev = it;\n                it++;\n                cur_dist += dists[*prev]-1;\n                dists[*prev] = 1;\n                starts.erase(prev);\n            }\n            dists[query[0]] = query[1]-query[0];\n            cur_dist -= dists[query[0]]-1;\n            starts.insert(query[0]);\n            res.push_back(cur_dist);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722741488",
    "subm_id": "1343746213"
}