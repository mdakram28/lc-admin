{
    "username": "teamskiy",
    "submission": "class Solution {\n    int cnt = 0;\n    int x;\n    \n    void dfs(int k, boolean minusAllowed, int jumps) {\n        if (jumps > 10) {\n            return;\n        }\n        if (k == x) {\n            ++cnt;\n        }\n        if (minusAllowed) {\n            dfs(k - 1, false, jumps);\n        }\n        dfs(k + (1 << jumps), true, jumps + 1);\n    }\n    \n    int bruteForce() {\n        dfs(1, true, 0);\n        return cnt;\n    }\n    \n    public int waysToReachStair(int k) {\n        x = k;\n        if (k <= 32) {\n            return bruteForce();\n        }\n        long jumps = 0;\n        while (k > 1 << jumps) {\n            ++jumps;\n        }\n        long diff = (1 << jumps) - k;\n        if (diff > jumps + 1) {\n            return 0;\n        }\n        // jumps + 1 >= diff\n        long ans = 1;\n        long down = 2;\n        for (long i = diff + 1; i <= jumps + 1; ++i) {\n            ans *= i;\n            while (down <= jumps + 1 - diff && ans % down == 0) {\n                ans /= down;\n                ++down;\n            }\n        }\n        return (int) ans;\n    }\n}",
    "submit_ts": 1716089631.0
}