{
    "username": "Bhanu_pranav",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n          //We can do it using maps\n        // int ans = 0;\n        // int sum \n        int n = nums.size();\n        // map<int,int> m;\n        // for(int i=0;i<n;i++){\n        //     m[abs(nums[i] - nums[n-i-1])]++;\n        // }\n        // for(auto& it : m){\n        //     if(it)\n        // }\n        //We can't Do this process\n        //We should add the k value to complete our soluition\n        int ans = nums.size();\n        map<int,vector<int>> mpp;\n        vector<int> vec;\n        for(int i=0;i<n/2;i++){\n            int a = nums[i];\n            int b = nums[n-i-1];\n            int x = abs(b-a);\n            int y = max({a,b,k-b,k-a});\n            mpp[x].push_back(y);\n            vec.push_back(y);\n        }\n        sort(vec.begin(),vec.end());\n        for(auto&it:mpp){\n            int difference = it.first;\n            int t = lower_bound(vec.begin(),vec.end(),difference)-vec.begin();\n            t = t*2 + (n/2 - t);\n            for(auto& pair : it.second){\n                if(pair<difference){\n                    t -= 2;\n                }\n                else{\n                    t -= 1;\n                }\n            }\n            ans = min(ans,t);\n        }\n        return ans;        \n    }\n};",
    "submit_ts": "1721490273",
    "subm_id": "1327477971"
}