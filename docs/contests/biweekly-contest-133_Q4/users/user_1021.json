{
    "username": "yashsasuke",
    "submission": "#include<iostream>\n#include<bits/stdc++.h>\n#include<vector>\n#include<string>\n \n#define ll long long\n#define MOD 1000000007\n#define rtn return 0\n#define abbu(X,y) abs(x-y)\n#define loop(j,c)  for(int j=0;j<=c;j++)\n#define lp(i,n) for(int i=1;i<=n;i++)\nusing namespace std;\n\n\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& v) {\n        int size = v.size();\n         int ans =0;\n        //sort the given 2d array..\n        sort(v.begin(),v.end());\n        //number of possible combinations..\n        int c = n*(n-1)/2;\n        \n        vector<vector<int>>dp(n+1,vector<int>(c+1,0));\n        dp[0][0] = 1; \n\n        lp(i,n){\n            loop(j,c){\n                dp[i][j] = dp[i-1][j]; \n                if(j>0) {\n                    dp[i][j] =(dp[i][j]+dp[i][j-1])%MOD; \n                }\n                if(j>=i) {\n                    dp[i][j] =(dp[i][j]-dp[i-1][j-i]+MOD)%MOD; \n                }\n            }\n            \n            for (auto it : v) {\n                int end = it[0];\n                int cnt = it[1];\n                if (end == i - 1) {\n                    loop(j,c){\n                        if (j != cnt) {\n                            dp[i][j] = 0;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        \n        loop(j,c){\n            ans = (ans+ dp[n][j])%MOD;\n        }\n        \n        return ans;\n\n    }\n};",
    "submit_ts": 1719071809.0
}