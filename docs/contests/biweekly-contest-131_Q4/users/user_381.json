{
    "username": "CatMachina",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int N = min(5 * (int)(1e4), 3 * (int)queries.size());\n        int block_size = sqrt(N)+1;\n        vector<int> spaces(N+1,0);\n        vector<int> left(block_size+1, -1);\n        vector<int> right(block_size+1, -1);\n        vector<int> biggest(block_size+1, block_size);\n        int Nblock = N / block_size;\n        left[Nblock] = right[Nblock] = N;\n        biggest[Nblock] = N - block_size * Nblock;\n        // cout << N << \" \" << block_size << \" \" << Nblock << \"\\n\";\n        vector<bool> ans;\n        for(int i = 0; i < queries.size(); ++i) {\n            int type = queries[i][0];\n            int x = queries[i][1];\n            int block = x / block_size;\n            if(type == 1) {\n                spaces[x] = 1;\n                left[block] = left[block] == -1 ? x : min(x, left[block]);\n                right[block] = max(x, right[block]);\n                int curr = 0, hi = 0;\n                for(int j = block_size * block; j < min(block_size * (block+1), N); ++j) {\n                    if(spaces[j] == 0) curr++;\n                    else curr = 1;\n                    hi = max(curr, hi);\n                }\n                biggest[block] = hi;\n            } else {\n                int sz = queries[i][2];\n                // cout << \"2 \" << block << \" \" << sz << \"\\n\";\n                int hi = 0, curr = 0;\n                for(int j = 0; j < block; ++j) {\n                    if(left[j] == -1) curr += block_size, hi = max(hi, curr);\n                    else {\n                        curr += left[j] - block_size * j;\n                        hi = max(hi, max(curr, biggest[j]));\n                        curr = block_size * (j+1) - right[j];\n                        hi = max(hi, curr);\n                    }\n                    // cout << curr << \" \" << hi << \"\\n\";\n                    if(hi >= sz) break;\n                }\n                for(int j = block * block_size; j < x; ++j) {\n                    if(spaces[j] == 0) curr++;\n                    else curr = 1;\n                    // cout << curr << \" \";\n                    hi = max(curr, hi);\n                }\n                if(hi >= sz) ans.push_back(true);\n                else ans.push_back(false);\n            }\n        }\n        // for(int i = 0; i < block_size; ++i) {\n        //     cout << left[i] << \" \" << right[i] << \" \" << biggest[i] << \"\\n\";\n        // }\n        return ans;\n    }\n};",
    "submit_ts": 1716651628.0
}