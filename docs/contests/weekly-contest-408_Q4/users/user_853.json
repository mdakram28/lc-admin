{
    "username": "yzmyzm",
    "submission": "class UF {\nprivate:\n    vector<int> parent;\npublic:\n    UF(int n): parent(n) {\n        for (int i = 0; i < n; ++ i)\n            parent[i] = i;\n    }\n\n    int find(int x) {\n        while (x != parent[x]) {\n            parent[x] = parent[parent[x]];\n            x = parent[x];\n        }\n        return parent[x];\n    }\n\n    void connect(int x, int y) {\n        int px = find(x);\n        int py = find(y);\n        if (px != py)\n            parent[px] = py;\n    }\n    \n    bool is_connected(int x, int y) {\n        int px = find(x);\n        int py = find(y);\n        return (px == py);\n    }\n};\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int m = circles.size();\n\n        UF uf(m + 2);\n        for (int i = 0; i < m; ++ i)\n            for (int j = 1; j < m; ++ j) {\n                long long disc = circles[i][2] + circles[j][2], disx = circles[i][0] - circles[j][0], disy = circles[i][1] - circles[j][1];\n                if (disc * disc >= disx * disx + disy * disy)\n                    uf.connect(i, j);\n            }\n\n        vector<int> pos0, pos1, pos2, pos3;\n        for (int i = 0; i < m; ++ i) {\n            if (circles[i][1] <= circles[i][2]) pos0.push_back(i);\n            if (circles[i][0] <= circles[i][2]) pos1.push_back(i);\n            if (abs(circles[i][1] - Y) <= circles[i][2]) pos2.push_back(i);\n            if (abs(circles[i][0] - X) <= circles[i][2]) pos3.push_back(i);\n        }\n\n        for (int p: pos0)\n            for (int p2: pos1)\n                if (uf.is_connected(p, p2))\n                    return false;\n        for (int p: pos1)\n            for (int p2: pos3)\n                if (uf.is_connected(p, p2))\n                    return false;\n        for (int p: pos0)\n            for (int p2: pos2)\n                if (uf.is_connected(p, p2))\n                    return false;\n        for (int p: pos2)\n            for (int p2: pos3)\n                if (uf.is_connected(p, p2))\n                    return false;\n\n        return true;\n    }\n};",
    "submit_ts": "1722137370",
    "subm_id": "1335761824"
}