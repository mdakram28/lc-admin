{
    "username": "divingPelican",
    "submission": "class Solution {\npublic:\n    long long finder(vector<int> &diff, int i, int j, bool pos){\n        long long count = 0;\n        if(pos){\n            count += diff[i];\n            for(int p=i+1;p<=j;p++){\n                if(diff[p] > diff[p-1])\n                    count += (diff[p]-diff[p-1]);\n            }\n        } else {\n            count += abs(diff[j]);\n            for(int p=j-1;p>=i;p--){\n                if(abs(diff[p]) > abs(diff[p+1]))\n                    count += abs(diff[p])-abs(diff[p+1]);\n            }\n        }\n        return count;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> diff;\n        for(int i=0;i<nums.size();i++)\n            diff.push_back(target[i]-nums[i]);\n        long long ans = 0;\n        int i = 0;\n        while(i<diff.size()){\n            int p = i;\n            if(diff[i] > 0){\n                while(p<diff.size()&&diff[p]>0)\n                    p += 1;\n                ans += finder(diff, i, p-1, true);\n                i = p;\n            }else if(diff[i] < 0){\n                while(p<diff.size()&&diff[p]<0)\n                    p += 1;\n                ans += finder(diff, i, p-1, false);\n                i = p;\n            }else\n                i += 1;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721533080",
    "subm_id": "1328000802"
}