{
    "username": "user4112Yu",
    "submission": "class Solution {\npublic:\n    using LL = long long;\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid.front().size();\n        int cnt1 = 0;\n        vector<pair<int, int>> pr;\n        for (LL i=0; i<(m+1)/2; i++) {\n            for (LL j=0; j<(n+1)/2; j++) {\n                set<LL> s;\n                s.insert((i)<<32|(j));\n                s.insert((i)<<32|(n-1-j));\n                s.insert((m-1-i)<<32|(j));\n                s.insert((m-1-i)<<32|(n-1-j));\n                int cnt0 = 0;\n                int cnt1 = 0;\n                for (LL val: s) {\n                    LL ii = val>>32;\n                    LL jj = val&0xFFFFFFFF;\n                    if (grid[ii][jj] == 0) {\n                        cnt0++;\n                    } else {\n                        cnt1++;\n                    }\n                }\n                pr.push_back({cnt0, cnt1});\n            }\n        }\n        int ps = pr.size();\n        vector<vector<int>> dp(ps, vector<int>(4, INT_MAX/100));\n        // move to 1\n        dp[0][(pr[0].first+pr[0].second)%4] = pr[0].first;\n        // move to 0\n        dp[0][0] = min(dp[0][0], pr[0].second);\n        // for (auto& [a, b]: pr) {\n        //     cout << a << \" \" << b << endl;\n        // }\n        for (int i=1; i<ps; i++) {\n            for (int j=0; j<4; j++) {\n                // move to 0\n                int t = pr[i].first+pr[i].second;\n                dp[i][j] = min(dp[i][j], dp[i-1][j] + pr[i].second);\n                // mode to 1\n                dp[i][j] = min(dp[i][j], dp[i-1][(j-(t%4)+4)%4] + pr[i].first);\n            }\n        }\n        // for (int i=0; i<ps; i++) {\n        //     for (int j=0; j<4; j++) {\n        //         cout << dp[i][j] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        return dp[ps-1][0];\n    }\n};",
    "submit_ts": "1722698682",
    "subm_id": "1343188406"
}