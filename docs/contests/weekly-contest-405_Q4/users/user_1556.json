{
    "username": "knotri",
    "submission": "function minimumCost(target: string, words: string[], costs: number[]): number {\n    //  [\"abdef\",\"abc\",\"d\",\"def\",\"ef\"]\n    console.log('_____')\n    const tree = {}\n    const END = '_END'\n    for(let i = 0; i < words.length; i++) {\n        const word = words[i]\n        let cur = tree\n        for(let j = 0; j < word.length; j++) {\n            const letter = word[j]\n            if (!cur[letter]) {\n                cur[letter] = {}\n            }\n            cur = cur[letter]\n        }\n        if (!cur[END]) {\n            cur[END] = {w: word, cost: costs[i]}\n        } else {\n            cur[END] = {w: word, cost: Math.min(cur[END].cost, costs[i])}\n        }\n    }\n    // console.log(tree)\n    \n    const eachEnd = (subtree, targetIndex: number, callback) => {\n        if (subtree[END]) callback(subtree[END])\n        for(let childKey in subtree) {\n            if (childKey === END) continue\n            if (childKey !== target[targetIndex]) continue\n            eachEnd(subtree[childKey], targetIndex + 1, callback)\n        }\n    }\n    \n    // const arrOfLength = [[\"\"]];\n    try {\n        const arrOfLength = Array.from({length: target.length + 1}, () => Infinity)\n        // console.log({arrOfLength})\n        arrOfLength[0] = 0\n        for(let i = 0; i < target.length; i++) {\n            const level = arrOfLength[i]\n\n            const currentCost = level\n\n            eachEnd(tree, i, ({w, cost}) => {\n                const keyLength = i + w.length\n                arrOfLength[keyLength] = Math.min(arrOfLength[keyLength], currentCost + cost)\n            })\n\n            // console.log({arrOfLength})\n            \n        }\n        if (arrOfLength[target.length] !== Infinity) {\n            return arrOfLength[target.length]\n        }\n        return -1\n        // console.log(arrOfLength)\n    } catch (e) {\n        console.log(e)\n    }\n    \n    \n};",
    "submit_ts": "1720324464",
    "subm_id": "1312400140"
}