{
    "username": "Sarvagya Sharma",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> top3(m);\n        \n        for(int row = 0; row < m; row++) {\n            int min_idx = 0;\n            for(int i = 0; i < board[row].size(); i++) \n                if(board[row][min_idx] > board[row][i])\n                    min_idx = i;\n            top3[row] = vector<int>(3, min_idx);\n        }\n        \n        for(int row = 0; row < m; row++) {\n            for(int col = 0; col < n; col++) {\n                if(board[row][col] > board[row][top3[row][2]] or \n                   (board[row][col] == board[row][top3[row][2]] and col > top3[row][2])) {\n                    top3[row][2] = col;\n                }\n                \n                if(board[row][top3[row][2]] > board[row][top3[row][1]] or \n                   (board[row][top3[row][2]] == board[row][top3[row][1]] and top3[row][2] > top3[row][1])) {\n                    swap(top3[row][2], top3[row][1]);\n                }\n                \n                if(board[row][top3[row][1]] > board[row][top3[row][0]] or \n                   (board[row][top3[row][1]] == board[row][top3[row][0]] and top3[row][1] > top3[row][0])) {\n                    swap(top3[row][1], top3[row][0]);\n                }\n            }\n        }\n        \n        // for(int r = 0; r < m; r++) {\n        //     cout << top3[r][0] << \" \" << top3[r][1] << \" \" << top3[r][2] << \"\\n\";\n        // }\n        // cout << \"\\n\";\n        \n        auto getRes = [&](int r1, int r2, int r3) -> long long {\n            \n            long long mx = LLONG_MIN;\n            for(int x = 0; x < 3; x++) {\n                for(int y = 0; y < 3; y++) {\n                    for(int z = 0; z < 3; z++) {\n                        int A = top3[r1][x], B = top3[r2][y], C = top3[r3][z];\n                        if(A == B || B == C || C == A) continue;\n                        \n                        mx = max(mx, (long long)board[r1][A] + board[r2][B] + board[r3][C]);\n                    }\n                }\n            }\n            \n            return mx;\n        };\n        \n        long long maxVal = -1LL << 52;\n        for(int r1 = 0; r1 < m; r1++) {\n            for(int r2 = r1 + 1; r2 < m; r2++) {\n                for(int r3 = r2 + 1; r3 < m; r3++) {\n                    // cout << getRes(r1, r2, r3) << \"\\n\";\n                    maxVal = max(maxVal, getRes(r1, r2, r3));\n                }\n            }\n        }\n        \n        // cout << \"\\n\\n\";\n        \n        return maxVal;\n    }\n};",
    "submit_ts": "1723907916",
    "subm_id": "1359130105"
}