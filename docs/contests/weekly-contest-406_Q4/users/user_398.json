{
    "username": "hsukna",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'V'});\n        }\n\n        \n        sort(cuts.rbegin(), cuts.rend());\n\n        int hPieces = 1; \n        int vPieces = 1; \n        long long totalCost = 0;\n\n        \n        for (auto& cut : cuts) {\n            int cost = cut.first;\n            char type = cut.second;\n\n            if (type == 'H') {\n               \n                totalCost += cost * vPieces;\n                hPieces++;\n            } else {\n                \n                totalCost += cost * hPieces;\n                vPieces++;\n            }\n        }\n\n        return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925483",
    "subm_id": "1320256221"
}