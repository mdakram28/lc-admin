{
    "username": "flamboyant-i2aman7jl",
    "submission": "class Solution(object):\n    def minimumSum(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"\n        inf = float('inf')\n        \n        \n        def cut1(grid):\n            m = len(grid)\n            n = len(grid[0])\n            min_val = inf\n            # [0, i], [i+1, m-1]\n            # [0, j], [j+1, n-1]\n            for i in xrange(m-1):\n                for j in xrange(n-1):\n                    min_x = [inf]*3\n                    max_x = [-inf]*3\n                    min_y = [inf]*3\n                    max_y = [-inf]*3\n                    for x in xrange(m):\n                        for y in xrange(n):\n                            if grid[x][y] == 1:\n                                if 0 <= x <= i:\n                                    flag = 0\n                                else:\n                                    if 0 <= y <= j:\n                                        flag = 1\n                                    else:\n                                        flag = 2\n                                min_x[flag] = min(min_x[flag], x)\n                                max_x[flag] = max(max_x[flag], x)\n                                min_y[flag] = min(min_y[flag], y)\n                                max_y[flag] = max(max_y[flag], y)\n                    cur = 0\n                    for flag in xrange(3):\n                        cur += (max_x[flag]-min_x[flag]+1)*(max_y[flag]-min_y[flag]+1)\n                    min_val = min(min_val, cur)\n            return min_val\n            \n            \n        def cut2(grid):\n            m = len(grid)\n            n = len(grid[0])\n            min_val = inf\n            # [0, i], [i+1, j], [j+1, n-1]\n            for i in xrange(m-1):\n                for j in xrange(i+1, m-1):\n                    min_x = [inf]*3\n                    max_x = [-inf]*3\n                    min_y = [inf]*3\n                    max_y = [-inf]*3\n                    for x in xrange(m):\n                        for y in xrange(n):\n                            if grid[x][y] == 1:\n                                if 0 <= x <= i:\n                                    flag = 0\n                                elif i < x <= j:\n                                    flag = 1\n                                else:\n                                    flag = 2\n                                min_x[flag] = min(min_x[flag], x)\n                                max_x[flag] = max(max_x[flag], x)\n                                min_y[flag] = min(min_y[flag], y)\n                                max_y[flag] = max(max_y[flag], y)\n                    cur = 0\n                    for flag in xrange(3):\n                        cur += (max_x[flag]-min_x[flag]+1)*(max_y[flag]-min_y[flag]+1)\n                    # print i, j, cur\n                    min_val = min(min_val, cur)\n            return min_val\n        \n        def rotate(grid):\n            m = len(grid)\n            n = len(grid[0])\n            ret = [[0 for j in xrange(m)] for i in xrange(n)]\n            for i in xrange(m):\n                for j in xrange(n):\n                    ret[j][m-1-i] = grid[i][j]\n            return ret\n            \n        ans = inf\n        for i in xrange(4):\n            grid = rotate(grid)\n            # print grid, cut1(grid), cut2(grid)\n            ans = min(ans, cut1(grid), cut2(grid))\n        return ans\n            \n            ",
    "submit_ts": "1719111643",
    "subm_id": "541388136"
}