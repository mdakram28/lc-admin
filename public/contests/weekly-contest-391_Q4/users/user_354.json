{
    "username": "kml123",
    "submission": "class Solution {\npublic:\n    vector<int>MaxDist(vector<pair<int, int> >& A, int N)\n{\n    // Variables to track running extrema\n        int l,r;\n        int minsum, maxsum, mindiff, maxdiff;\n            int l1=0,r1=0,l2=0,r2=0;\n\n        minsum = maxsum = A[0].first + A[0].second;\n        mindiff = maxdiff = A[0].first - A[0].second;\n        for (int i = 1; i < N; i++) {\n            int sum = A[i].first + A[i].second;\n            int diff = A[i].first - A[i].second;\n            if (sum < minsum)\n                minsum = sum,l1=i;\n            else if (sum > maxsum)\n                maxsum = sum,r1=i;\n            if (diff < mindiff)\n                mindiff = diff,l2=i;\n            else if (diff > maxdiff)\n                maxdiff = diff,r2=i;\n        }\n         if(maxsum - minsum>maxdiff - mindiff){\n             l=l1;\n             r=r1;\n         }\n         else{\n             l=l2;\n             r=r2;\n        }\n        return {l,r};\n//         cout<<l<<\" \"<<r<<endl;\n//         int maximum = max(maxsum - minsum, maxdiff - mindiff);\n\n//         cout << maximum << endl;\n}\n    int MaxDist1(vector<pair<int, int> >& A, int N)\n{\n    // Variables to track running extrema\n    int minsum, maxsum, mindiff, maxdiff;\n \n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n    for (int i = 1; i < N; i++) {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum)\n            minsum = sum;\n        else if (sum > maxsum)\n            maxsum = sum;\n        if (diff < mindiff)\n            mindiff = diff;\n        else if (diff > maxdiff)\n            maxdiff = diff;\n    }\n \n    int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n    return maximum ;\n}\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int ans=0;\n        int n=points.size();\n        vector<pair<int,int>>p1;\n        for(auto it:points){\n            p1.push_back({it[0],it[1]});\n        }\n        vector<int>v=MaxDist(p1,n);\n        vector<pair<int,int>>p2,p3;\n        for(int i=0;i<points.size();i++){\n            if(i!=v[0]){\n                p2.push_back({points[i][0],points[i][1]});\n            }\n            if(i!=v[1]){\n                p3.push_back({points[i][0],points[i][1]});\n            }\n        }\n        int ans1=MaxDist1(p2,n-1);\n        int ans2=MaxDist1(p3,n-1);\n        return min(ans1,ans2);\n    }\n};"
}