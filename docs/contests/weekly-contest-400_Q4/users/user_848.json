{
    "username": "Pratham_Shah10",
    "submission": "// this is 0-indexed seg tree\nclass segtree {\n    //ref: https://www.geeksforgeeks.org/bitwise-and-of-sub-array-closest-to-k/\npublic:\n    vector<int> seg;\n    int n;\n    segtree(vector<int>& arr)\n    {\n        n = arr.size();\n        seg.resize(4 * n);\n        build(arr, 0, 0, n - 1);\n    }\n    void build(vector<int>& arr, int node, int start,\n               int end)\n    {\n        if (start == end) {\n            seg[node] = arr[start];\n        }\n        else {\n            int mid = (start + end) / 2;\n            build(arr, 2 * node + 1, start, mid);\n            build(arr, 2 * node + 2, mid + 1, end);\n            seg[node]\n                = seg[2 * node + 1] & seg[2 * node + 2];\n        }\n    }\n    int query(int node, int start, int end, int l, int r)\n    {\n        if (r < start || end < l) {\n            return INT_MAX;\n        }\n        if (l <= start && end <= r) {\n            return seg[node];\n        }\n        int mid = (start + end) / 2;\n        int x = query(2 * node + 1, start, mid, l, r);\n        int y = query(2 * node + 2, mid + 1, end, l, r);\n        return x & y;\n    }\n};\n\n\n\nclass Solution {\npublic:\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        segtree obj(nums);\n        // obj.build(0, 0, n - 1, nums);\n        // cout << obj.query(0,0,n-1,1,1) << endl;\n        int ans = INT_MAX;\n         for (int i = 0; i < n; i++) {\n             // from here the closest bitwise AND\n            // & never increases. So use binary search\n        int start = i - 1;\n        int end = n - 1;\n        int mid = -1;\n\n        while ((end - start) > 1) {\n            mid = (start + end) >> 1;\n            if (obj.query(0, 0, n - 1, i, mid) >= k)\n                start = mid;\n            else\n                end = mid;\n        }\n        if (start == i - 1) {\n            ans = min(ans, abs(k - obj.query(0, 0, n - 1,i, end)));\n        }\n             else {\n                 ans = min(ans, abs(obj.query(0, 0, n - 1,i, start) - k));\n        ans = min(ans, abs(k - obj.query(0, 0, n - 1,i, end)));\n             }\n            \n    }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717300436.0
}