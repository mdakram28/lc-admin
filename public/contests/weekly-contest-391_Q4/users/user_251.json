{
    "username": "etian6795",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        int[][] sum = new int[n][2];\n        int[][] diff = new int[n][2];\n        for(int i = 0; i < n; i++) {\n            sum[i][0] = points[i][0] + points[i][1];\n            diff[i][0] = points[i][0] - points[i][1];\n            sum[i][1] = i;\n            diff[i][1] = i;\n        }\n        Arrays.sort(sum, new Comparator<int[]>() {\n            public int compare(int[] a, int[] b) {\n                return a[0]-b[0];\n            }\n        });\n        Arrays.sort(diff, new Comparator<int[]>() {\n            public int compare(int[] a, int[] b) {\n                return a[0]-b[0];\n            }\n        });\n        int max = Math.max(sum[n-1][0] - sum[0][0], diff[n-1][0] - diff[0][0]);\n        int ans = Integer.MAX_VALUE;\n        if(sum[n-1][0] - sum[0][0] == max) {\n            \n            int idx = sum[n-1][1];\n            ans = Math.min(ans,  Math.max(sum[n-2][0] - sum[0][0], diff[diff[n-1][1]==idx?n-2:n-1][0] - diff[diff[0][1]==idx?1:0][0])    );\n            idx = sum[0][1];\n            ans = Math.min(ans,  Math.max(sum[n-1][0] - sum[1][0], diff[diff[n-1][1]==idx?n-2:n-1][0] - diff[diff[0][1]==idx?1:0][0])    );\n            \n        }\n        /*for(int i = 0; i < n; i++) {\n            System.out.println(sum[i][0]+\" \"+sum[i][1]);\n        }\n        System.out.println();\n        for(int i = 0; i < n; i++) {\n            System.out.println(diff[i][0]+\" \"+diff[i][1]);\n        }*/\n        if(diff[n-1][0] - diff[0][0] == max) {\n            int idx = diff[n-1][1];\n            ans = Math.min(ans,  Math.max(sum[sum[n-1][1]==idx?n-2:n-1][0] - sum[sum[0][1]==idx?1:0][0], diff[n-2][0] - diff[0][0])    );\n            \n            idx = diff[0][1];\n            ans = Math.min(ans,  Math.max(sum[sum[n-1][1]==idx?n-2:n-1][0] - sum[sum[0][1]==idx?1:0][0], diff[n-1][0] - diff[1][0])    );\n        }\n        \n        return ans;\n    }\n}"
}