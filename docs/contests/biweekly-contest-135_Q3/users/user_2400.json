{
    "username": "lifessohard",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> diff_cnt;\n        for (int i = 0; i < (n >> 1); ++i) {\n            if (nums[i] > nums[n - i - 1]) {\n                swap(nums[i], nums[n - i - 1]);\n            }\n            // diff[i] = nums[n - i - 1] - nums[i];\n            ++diff_cnt[nums[n - i - 1] - nums[i]];\n        }\n        vector<int> m, cnt;\n        for (auto [k, v] : diff_cnt) {\n            m.emplace_back(k);\n            cnt.emplace_back(v);\n        }\n        vector<int> idx(m.size());\n        iota(idx.begin(), idx.end(), 0);\n        ranges::sort(idx, [&](int i, int j) {\n            return cnt[i] > cnt[j];\n        });\n        // ranges::sort(diff);\n        // int median = diff[n >> 2];\n\n        auto helper = [&](int median) {\n            int ans = 0;\n            if (k >= median) {\n                for (int i = 0; i < n / 2; ++i) {\n                    int a = nums[i], b = nums[n - i - 1];\n                    int d = b - a;\n                    if (d != median) {\n                        if (k >= a + median || \n                            (b - median <= k && b - median >= 0)) {\n                            ++ans;\n                        }\n                        else {\n                            ans += 2;\n                        }\n                    }\n                }\n            }\n            else {\n                for (int i = 0; i < n / 2; ++i) {\n                    int a = nums[i], b = nums[n - i - 1];\n                    if (k >= a + median || \n                        (b - median <= k && b - median >= 0)) {\n                        ++ans;\n                    }\n                    else {\n                        ans += 2;\n                    }\n                }\n            }\n\n            return ans;\n        };\n\n        vector<int> ret;\n        for (int i = 0; i < min(static_cast<int>(idx.size()), 3); ++i) {\n            int median = m[idx[i]];\n            ret.emplace_back(helper(median));\n        }\n\n        return ranges::min(ret);\n    }\n};",
    "submit_ts": "1721490111",
    "subm_id": "548321610"
}