{
    "username": "tepamid",
    "submission": "\n#define fo(i, n) for (int i = 0; i < n; ++i)\n#define foback(i, n) for (int i = n - 1; i >= 0; --i)\n#define fo1(i, n) for (ll i = 1; i <= n; ++i)\n\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define makeunique(x) sort(all(x)), (x).resize(unique(all(x)) - (x).begin())\n\ntypedef long long ll;\n\n\nclass Solution {\npublic:\n//     int minFlips1(vector<int>& b) {\n//         int n = b.size();\n        \n//         int ans=0;\n//         int cnt1=0;\n//         fo(i,n/2) {\n//             if (b[i] != b[n-1-i]) ans++;\n//             else if (b[i]) {\n//                 cnt1+=2;\n//             }\n//         }\n        \n//         int total1 = cnt1 + 2*ans;\n//         if (total1%4 != 0) {\n//             if (ans==0) {\n//                 ans+=2;\n//             }\n//         }\n        \n//         if(n&1) {\n//             ans += b[(n+0)/2];   \n//         }\n        \n//         return ans;\n//     }\n    \n    int minFlips1(vector<int>& b, int& cnt1) {\n        int n = b.size();\n        \n        int ans=0;\n        \n        fo(i,n/2) {\n            if (b[i] != b[n-1-i]) {\n                ans++;\n                cnt1 += 2;\n            }\n            else if (b[i]) {\n                cnt1+=2;\n            }\n        }\n        \n        return ans;\n    }\n    \n    int minFlips(vector<vector<int>>& a) {\n        int n = a.size();\n        int m = a[0].size();\n        \n        // cout << n << \" x \" << m << endl;\n        \n        // if (n==1) return minFlips1(a[0]);\n        // if (m==1) {\n        //     vector<int> b;\n        //     fo(i,n) b.push_back(a[i][0]);\n        //     return minFlips1(b);\n        // }\n        \n        int ans=0;\n        {\n            fo(i,n/2) {\n                fo(j,m/2) {\n                    int c=0;\n                    \n                    // fo(di,2) \n                    //     fo(dj,2)\n                    //         c += a[i+di][j+dj];\n                    \n                    c += a[i][j];\n                    c += a[n-1-i][j];\n                    c += a[n-1-i][m-1-j];\n                    c += a[i][m-1-j];\n                    \n                    ans += min(c, 4-c);\n                }\n            }    \n        }\n        \n        \n        if (n&1)\n        if (m&1) {\n            // cout << \"mid = \" << a[(n+1)/2][(m+1)/2] << endl;\n            ans += a[(n+0)/2][(m+0)/2];\n            a[(n+0)/2][(m+0)/2] = 0;\n        }\n        \n        int ans2=0;\n        int cnt1=0;\n        \n        if (n&1) {\n            // we have middle line with i=n/2\n            ans2 += minFlips1(a[n/2], cnt1);\n        }\n        \n        if (m&1) {\n            // we have middle column with j=m/2\n            vector<int> b;\n            fo(i,n) b.push_back(a[i][m/2]);\n            \n            ans2 += minFlips1(b, cnt1);\n        }\n        \n        // cout << \"ans = \" << ans << endl;\n        // cout << \"cnt1 = \" << cnt1 << endl;\n        // cout << \"ans2 = \" << ans2 << endl;\n        \n        if (cnt1 % 4 != 0) {\n            if (ans2 == 0) {\n                ans2 += 2;\n            }\n        }\n        \n        return ans + ans2;\n    }\n};",
    "submit_ts": "1722697533",
    "subm_id": "1343149954"
}