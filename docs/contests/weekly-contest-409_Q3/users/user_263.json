{
    "username": "xymabinogi",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int,int> mp;\n        vector<int> res;\n        \n        int save = 0;\n        for (auto &q : queries){\n            int l = q[0], r = q[1];\n            auto it = mp.upper_bound(l), itt = it;\n            \n            bool added = false;\n            \n            if (it != mp.begin()){\n                if (prev(it) -> first == l){\n                    if (prev(it) -> second >= r){\n                        //do nothing\n                    }\n                    else {\n                        save -= prev(it) -> second - prev(it) -> first - 1;\n                        mp.erase(prev(it));\n                        itt = mp.insert({l, r}).first;\n                        save += (r - l - 1);\n                        added = true;\n                    }\n                }\n                else {\n                    if (prev(it) -> second <= l){\n                        itt = mp.insert({l, r}).first;\n                        save += (r - l - 1);\n                        added = true;\n                    }\n                }\n            }\n            else {\n                itt = mp.insert({l, r}).first;\n                save += (r - l - 1);\n                added = true;\n            }\n            \n            while(added && it != mp.end() && it -> second <= itt -> second){\n                    save -= (it -> second - it -> first - 1);\n                    it = mp.erase(it);\n                }\n            res.push_back(n - 1 - save);\n        }\n        return res;\n        \n    }\n};",
    "submit_ts": "1722740734",
    "subm_id": "1343727433"
}