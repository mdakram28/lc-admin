{
    "username": "MeetBrahmbhatt",
    "submission": "class DSU {\npublic :\n    vector<int> parent;\n    vector<int> size;\n    int comps;\n    DSU(int n) : parent(n), size(n), comps(n) {\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            size[i] = 1;\n        }\n    }\n    int find(int a) {\n        if (parent[a] == a) return a;\n        return parent[a] = find(parent[a]);\n    }\n    bool join(int x, int y) {\n        int a = find(x);\n        int b = find(y);\n        if (a != b) {\n            if (size[a] < size[b]) swap(a, b);\n            parent[b] = a;\n            size[a] += size[b];\n            comps -= 1;\n            return true;\n        }\n        return false;\n    }\n    int Components() {\n        return comps;\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& v) {\n        int n = (int) v.size();\n        \n        auto sq = [&] (long long x) {\n            return x * x;  \n        };\n        \n        auto intersect = [&] (int a, int b) {\n            return sq(v[a][2] + v[b][2]) >= sq(v[a][0] - v[b][0]) + sq(v[a][1] - v[b][1]);\n        };\n        \n        auto pt_inter = [&] (int a) {\n            return v[a][2] >= sq(X - v[a][0]) + sq(Y - v[a][1]);  \n        };\n        \n        auto line_circle_inter = [&] (int a, int b, int c, int x, int y, int r) {\n            long long d = abs(a * 1LL * x + b * 1LL * y + c);\n            return d <= r;\n        };\n        \n        DSU D(n + 4);\n        for (int i = 0; i < n; i++) {\n            if (pt_inter(i)) {\n                return false;\n            }\n            int x = v[i][0];\n            int y = v[i][1];\n            int r = v[i][2];\n            if (line_circle_inter(1, 0, 0, x, y, r)) { // left\n                D.join(4 + i, 1);\n            }\n            if (line_circle_inter(0, 1, 0, x, y, r)) { // bottom\n                D.join(4 + i, 2);\n            }\n            if (line_circle_inter(1, 0, -X, x, y, r)) { // right\n                D.join(4 + i, 3);\n            }\n            if (line_circle_inter(0, 1 ,-Y, x, y, r)) { // top\n                D.join(4 + i, 0);\n            }\n            for (int j = i + 1; j < n; j++) {\n                if (intersect(i, j)) {\n                    D.join(4 + i, 4 + j);\n                }\n            }\n        }\n        \n        int pa = D.find(0); // top\n        int pb = D.find(1); // left\n        int pc = D.find(2); // bottom\n        int pd = D.find(3); // right\n        \n        if (pa == pc || pb == pc || pb == pd || pa == pd) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138526",
    "subm_id": "1335792995"
}