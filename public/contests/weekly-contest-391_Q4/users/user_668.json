{
    "username": "bhavik_2001",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int length = points.size();            \n        multiset<int> sum, diff;\n\n        \n        for(int i = 0; i < length; i++){\n            sum.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][0] - points[i][1]);\n        }\n        \n        int distance = 0;\n        int pointSum, pointDiff;\n        int result = INT_MAX;\n        \n        for(int i = 0; i < length; i++){\n            pointSum = points[i][0] + points[i][1];\n            pointDiff = points[i][0] - points[i][1];\n            \n            auto it1 = sum.find(pointSum);\n            sum.erase(it1);\n            \n            auto it2 = diff.find(pointDiff);\n            diff.erase(it2);\n            \n            distance = max(*(--sum.end()) - *sum.begin(), *(--diff.end()) - *diff.begin());\n            \n            result = min(result, distance);\n            \n            sum.insert(pointSum);\n            diff.insert(pointDiff);\n        }\n        \n        return result;\n    }\n};"
}