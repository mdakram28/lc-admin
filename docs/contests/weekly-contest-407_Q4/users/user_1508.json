{
    "username": "NISHANT_JINDAL",
    "submission": "class Solution {\n    public long minimumOperations(int[] overwatch, int[] valorant) {\n        long[] healthDifference = calculateHealthDifference(overwatch, valorant);\n        return calculateTotalOperations(healthDifference);\n    }\n\n    private long[] calculateHealthDifference(int[] overwatch, int[] valorant) {\n        int length = overwatch.length;\n        long[] healthDifference = new long[length];\n        for (int index = 0; index < length; index++) {\n            healthDifference[index] = (long) valorant[index] - overwatch[index];\n        }\n        return healthDifference;\n    }\n\n    private long calculateTotalOperations(long[] healthDifference) {\n        long totalOperations = 0;\n        long currentSegmentDifference = 0;\n\n        for (int index = 0; index < healthDifference.length; index++) {\n            if (index == 0 || (healthDifference[index - 1] > 0 && healthDifference[index] > 0) || (healthDifference[index - 1] < 0 && healthDifference[index] < 0)) {\n                long additionalOperations = Math.abs(healthDifference[index]) - Math.abs(currentSegmentDifference);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n                currentSegmentDifference = healthDifference[index];\n            } else {\n                totalOperations += Math.abs(healthDifference[index]);\n                currentSegmentDifference = healthDifference[index];\n            }\n        }\n\n        return totalOperations;\n    }\n}",
    "submit_ts": "1721532660",
    "subm_id": "1327991079"
}