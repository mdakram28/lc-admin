{
    "username": "sourav_suku",
    "submission": "int ans=0;\nclass Solution {\npublic:\n    vector<int> cal(vector<vector<int>>& edges){\n        int n=edges.size()+1;\n        vector<int> adj[n];\n        for(auto &e:edges){\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n        vector<int> visited(n,-1);      visited[0]=0;   queue<int> qq;      qq.push(0);\n        int maxi=0,maxnode=0;\n        while(!qq.empty()){\n            auto cur=qq.front();            qq.pop();\n            for(auto &nei:adj[cur]){\n                if(visited[nei]!=-1){\n                    continue;\n                }\n                visited[nei]=visited[cur]+1;        qq.push(nei);\n                if(visited[nei]>maxi){\n                    maxi=visited[nei];\n                    maxnode=nei;\n                }\n            }\n        }\n        visited.assign(n,-1);       visited[maxnode]=0;   qq.push(maxnode);\n        maxi=0;\n        while(!qq.empty()){\n            auto cur=qq.front();            qq.pop();\n            for(auto &nei:adj[cur]){\n                if(visited[nei]!=-1){\n                    continue;\n                }\n                visited[nei]=visited[cur]+1;        qq.push(nei);\n                if(visited[nei]>maxi){\n                    maxi=visited[nei];\n                }\n            }\n        }\n        ans=max(ans,maxi);\n        if(maxi%2==0){\n            return {maxi/2};\n        }else{\n            return {maxi/2,maxi/2+1};\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        ans=0;\n        vector<int> dist1=cal(edges1);\n        vector<int> dist2=cal(edges2);\n        for(auto &e:dist1){\n            for(auto &f:dist2){\n                ans=max(ans,e+f+1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719718064.0
}