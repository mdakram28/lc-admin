{
    "username": "the_random_profile",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        const int n = board.size();\n        const int m = board[0].size();\n\n        vector<pair<long long, pair<int, int>>> vec;\n        vector<vector<pair<long long, pair<int, int>>>> vec_rows(n);\n        vector<vector<pair<long long, pair<int, int>>>> vec_cols(m);\n\n\n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                vec_rows[i].push_back({board[i][j], {i, j}});\n                vec_cols[j].push_back({board[i][j], {i, j}});\n            }\n        }\n\n        for(int i = 0; i < n; i++) {\n            sort(vec_rows[i].begin(), vec_rows[i].end());\n        }\n\n        for(int i = 0; i < m; i++) {\n            sort(vec_cols[i].begin(), vec_cols[i].end());\n        }\n\n        long long ans_rows = -3e9;\n        long long ans_cols = -3e9;\n\n        for(int i = 0; i < n; i++) {\n            const int sz = vec_rows[0].size();\n            pair<long long, pair<int, int>> first = vec_rows[i][sz - 1];\n            \n            for(int j = 0; j < n; j++) {\n                if(j == i) {\n                    continue;\n                }\n                int idx = sz - 1;\n                pair<long long, pair<int, int>> second;\n                while(vec_rows[j][idx].second.second == first.second.second) {\n                    idx--;\n                }\n                second = vec_rows[j][idx];\n\n                for(int k = 0; k < n; k++) {\n                    if(k == j || k == i) {\n                        continue;\n                    }\n\n                    int idx = sz - 1;\n                    pair<long long, pair<int, int>> third;\n                    while(vec_rows[k][idx].second.second == first.second.second || vec_rows[k][idx].second.second == second.second.second) {\n                        idx--;\n                    }\n                    third = vec_rows[k][idx];\n\n                    ans_rows = max(ans_rows, first.first + second.first + third.first);\n                }\n            }\n        }\n\n        for(int i = 0; i < m; i++) {\n            const int sz = vec_cols[0].size();\n            pair<long long, pair<int, int>> first = vec_cols[i][sz - 1];\n            \n            for(int j = 0; j < m; j++) {\n                if(j == i) {\n                    continue;\n                }\n                int idx = sz - 1;\n                pair<long long, pair<int, int>> second = vec_cols[j][idx];\n                while(vec_cols[j][idx].second.first == first.second.first) {\n                    idx--;\n                }\n                second = vec_cols[j][idx];\n\n                for(int k = 0; k < m; k++) {\n                    if(k == j || k == i) {\n                        continue;\n                    }\n\n                    int idx = sz - 1;\n                    pair<long long, pair<int, int>> third = vec_cols[k][idx];\n                    while(vec_cols[k][idx].second.first == first.second.first || vec_cols[k][idx].second.first == second.second.first) {\n                        idx--;\n                    }\n                    third = vec_cols[k][idx];\n\n                    ans_rows = max(ans_rows, first.first + second.first + third.first);\n                }\n            }\n        }\n\n        return max(ans_rows, ans_cols);\n    }\n};",
    "submit_ts": "1723908531",
    "subm_id": "1359156525"
}