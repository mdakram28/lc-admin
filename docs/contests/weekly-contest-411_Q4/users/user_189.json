{
    "username": "lihaicoder",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, queries: List[List[int]]) -> List[int]:\n        n = len(s)\n        llist = [None]*n\n        countlist = [None]*n\n        cumcountlist = [None]*n\n        l = 0\n        one = 0\n        zero = 0\n        for r in range(n):\n            if s[r] == \"0\":\n                one += 1\n            else:\n                zero += 1\n            while one > k and zero > k:\n                if s[l] == \"0\":\n                    one -= 1\n                else:\n                    zero -= 1\n                l += 1\n            llist[r] = l\n            countlist[r] = r - l + 1\n            cumcountlist[r] = countlist[r]\n            if r > 0:\n                cumcountlist[r] += cumcountlist[r-1]\n        # print(llist)\n        # print(countlist)\n        # print(cumcountlist)\n        # return [0]*len(queries)\n        def finds(ql, qr):\n            l = ql\n            r = qr\n            ans = l\n            while l <= r:\n                mid = (l + r) // 2\n                if llist[mid] <= ql:\n                    ans = mid\n                    l = mid + 1\n                else:\n                    r = mid - 1\n            return ans\n        ans = []\n        for ql, qr in queries:\n            anscount = 0\n            s = finds(ql, qr)\n            anscount += (s - ql + 2) * (s - ql + 1) // 2\n            anscount += cumcountlist[qr] - cumcountlist[s]\n            ans.append(anscount)\n        return ans",
    "submit_ts": "1723953166",
    "subm_id": "1359814133"
}