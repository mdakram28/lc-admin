{
    "username": "karunya_12",
    "submission": "class Solution {\npublic:\n    int mod=1e9+7;\n    long dp[301][401];\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int m=requirements.size();\n        \n        memset(dp,0,sizeof(dp));\n        \n        unordered_map<int,int> mp;\n        for(int i=0;i<m;i++){\n            mp[requirements[i][0]+1]=requirements[i][1];\n        }\n        \n        dp[0][0]=1;\n        \n        int i=1;\n        int j=0;\n        int k=0;\n        while(i<=n){\n            while(j<=400){\n                while(k<i){\n                    int back=j-k;\n                    if(back>=0){\n                        dp[i][j]=(dp[i][j] + dp[i-1][back])%mod;\n                    }\n                    k++;\n                }\n                k=0;\n                j++;\n            }\n            if(mp.count(i)){\n                int f=0;\n                int t=mp[i];\n                while(f<=400){\n                    if(f!=t){\n                        dp[i][f]=0;\n                    }\n                    f++;\n                }\n            }\n            j=0;\n            i++;\n        }\n        \n        long ans=0;\n        for(int i=0;i<=400;i++){\n            ans=(ans+dp[n][i])%mod;\n        }\n        \n        return ans;\n    }\n};\n\n",
    "submit_ts": 1719071936.0
}