{
    "username": "time-v5",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int ans = n * m;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                int p1 = area(grid, 0, 0, i, m - 1) + area(grid, i + 1, 0, n - 1, j) + area(grid, i + 1, j + 1, n - 1, m - 1);\n                int p2 = area(grid, i, 0, n - 1, m - 1) + area(grid, 0, 0, i - 1, j) + area(grid, 0, j + 1, i - 1, m - 1);\n                ans = Math.min(ans, Math.min(p1, p2));\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            for (int i = 0; i < n; i++) {\n                int p1 = area(grid, 0, 0, n - 1, j) + area(grid, 0, j + 1, i, m - 1) + area(grid, i + 1, j + 1, n - 1, m - 1);\n                int p2 = area(grid, 0, j, n - 1, m - 1) + area(grid, 0, 0, i, j - 1) + area(grid, i + 1, 0, n - 1, j - 1);\n                ans = Math.min(ans, Math.min(p1, p2));\n            }\n        }\n        for (int a = 0; a < n; a++) {\n            for (int b = a + 1; b < n; b++) {\n                ans = Math.min(ans, area(grid, 0, 0, a, m - 1) + area(grid, a + 1, 0, b, m - 1) + area(grid, b + 1, 0, n - 1, m - 1));\n            }\n        }\n        for (int a = 0; a < m; a++) {\n            for (int b = a + 1; b < m; b++) {\n                ans = Math.min(ans, area(grid, 0, 0, n - 1, a) + area(grid, 0, a + 1, n - 1, b) + area(grid, 0, b + 1, n - 1, m - 1));\n            }\n        }\n        return ans;\n    }\n\n    public int area(int[][] grid, int x1, int y1, int x2, int y2) {\n        if (x1 < 0 || x1 == grid.length || y1 < 0 || y1 == grid[0].length || x2 < 0 || x2 == grid.length || y2 < 0 || y2 == grid[0].length) {\n            return 0;\n        }\n        int l = y2, r = y1, t = x2, b = x1;\n        for (int i = x1; i <= x2; i++) {\n            for (int j = y1; j <= y2; j++) {\n                if (grid[i][j] == 1) {\n                    l = Math.min(l, j);\n                    r = Math.max(r, j);\n                    t = Math.min(t, i);\n                    b = Math.max(b, i);\n                }\n            }\n        }\n        return l > r || t > b ? 0 : (r - l + 1) * (b - t + 1);\n    }\n}",
    "submit_ts": 1719113404.0
}