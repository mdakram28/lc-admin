{
    "username": "Devendra",
    "submission": "class Solution {\npublic:\n    long long fun(int i,int j,int k,vector<vector<pair<long long,long long>>>& vec){\n        long long mx = -3e9;\n        for(auto p1: vec[i]){\n            for(auto p2: vec[j]){\n                for(auto p3: vec[k]){\n                    if(p1.second!=p2.second && p1.second!=p3.second && p2.second!=p3.second){\n                        mx = max(mx,p1.first+p2.first+p3.first);\n                    }\n                }\n            }\n        }\n        return mx;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n       vector<vector<pair<long long,long long>>> vec;\n        long long ans =-3e9;\n        int n = board.size();int m = board[0].size();\n        for(int i=0;i<n;i++){\n            set<pair<long long,long long>> st;\n            vector<pair<long long,long long>> temp;\n            for(int j=0;j<m;j++) st.emplace(make_pair(board[i][j],j));\n            for(int j=0;j<3;j++){\n                temp.push_back(*st.rbegin());\n                st.erase(--st.end());\n            }\n            vec.push_back(temp);\n        }\n        for(int i=0;i<n;i++){\n            for(int j=i+1;j<n;j++){\n                for(int k =j+1;k<n;k++){\n                    ans = max(ans,fun(i,j,k,vec));\n                }\n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1723909014",
    "subm_id": "1359176198"
}