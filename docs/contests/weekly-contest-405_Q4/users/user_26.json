{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    long long Hash[50005],base[50005];\n    int mod;\n    int get(int l,int r){\n        if(l==0)return Hash[r];\n        return ((Hash[r]-Hash[l-1]*base[r-l+1])%mod+mod)%mod;\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        srand(time(NULL));\n        mod=rand()%1000000000+1000000000;\n        while(true){\n            int ok=1;\n            for(int i = 2;i*i<=mod;i++){\n                if(mod%i==0){ok=0;break;}\n            }\n            if(!ok)mod++;\n            else break;\n        }\n        base[0]=1;\n        for(int i = 1;i<=target.size();i++)base[i]=base[i-1]*26%mod;\n        for(int i = 0;i<target.size();i++){\n            Hash[i]=target[i]-'a';\n            if(i!=0)Hash[i]=(Hash[i]+Hash[i-1]*26)%mod;\n        }\n        map<int,unordered_map<int,int> > m;\n        for(int i = 0;i<words.size();i++){\n            long long val=0;\n            for(auto it:words[i])val=(val*26+it-'a')%mod;\n            if(m[words[i].size()].find(val)==m[words[i].size()].end()) m[words[i].size()][val]=1e5;\n            m[words[i].size()][val]=min( m[words[i].size()][val],costs[i]);\n        }\n        int dp[50005];\n        for(int i = 0;i<target.size();i++){\n            dp[i]=1e9;\n            for(auto &it:m){\n                if(it.first-1>i)break;\n                int l=i-it.first+1,r=i;\n                int res=get(l,r);\n              //  printf(\"%d %d %d\\n\",i,it.first,res);\n                if(it.second.find(res)!=it.second.end()){\n                    if(l==0)\n                    dp[i]=min(it.second[res],dp[i]);\n                    else\n                    dp[i]=min(it.second[res]+dp[l-1],dp[i]);\n                }\n            }\n          //  printf(\"%d \",dp[i]);\n        }\n       // printf(\"\\n\");\n        if(dp[target.size()-1]==1e9)return -1;\n        return dp[target.size()-1];\n    }\n};",
    "submit_ts": "1720320519",
    "subm_id": "1312296698"
}