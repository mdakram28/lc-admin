{
    "username": "priceless-margulismpb",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] sub = new int[n];\n        for (int i = 0; i < n; i++) {\n            sub[i] = target[i] - nums[i];\n        }\n        long res = 0;\n        for (int i = 0; i < n;) {\n            if (sub[i] == 0) {\n                i++;\n                continue;\n            }\n            int signi = sub[i] > 0 ? 1 : -1;\n            int j = i;\n            for (j = i; j < n; j++) {\n                int signj = sub[j] > 0 ? 1 : -1;\n                if (signi != signj) {\n                    break;\n                }\n            }\n            res += f(i, j - 1, sub);\n            i = j;\n        }\n        return res;\n    }\n\n    private long f(int left, int right, int[] sub) {\n        if (right < left) {\n            return 0;\n        }\n        if (right == left) {\n            return Math.abs(sub[left]);\n        }\n        int min = Integer.MAX_VALUE;\n        int index = left;\n        for (int i = left; i <= right; i++) {\n            int abs = Math.abs(sub[i]);\n            if (abs < min) {\n                min = abs;\n                index = i;\n            }\n        }\n        int i = index - 1;\n        int j = index + 1;\n        while (i >= left && sub[i] == sub[index]) {\n            i--;\n        }\n        while (j <= right && sub[j] == sub[index]) {\n            j++;\n        }\n        if (i < left && j > right) {  //\u5168\u4e00\u6837\n            return min;\n        }\n\n        if (i < left) {\n            return f(j, right, sub);\n        }\n\n        if (j > right) {\n            return f(left, i, sub);\n        }\n\n        return f(left, index - 1, sub) + f(index + 1, right, sub) - min;\n    }\n}",
    "submit_ts": "1721533528",
    "subm_id": "548399696"
}