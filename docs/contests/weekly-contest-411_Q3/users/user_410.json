{
    "username": "siraj_786",
    "submission": "import math\ndef is_divisible_by_7(num_str: str) -> bool:\n    remainder = 0\n    for digit in num_str:\n        remainder = (remainder * 10 + int(digit)) % 7\n    return remainder == 0\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        def find_palindrome(length, divisor):\n            if divisor == 1:\n                return \"9\" * length\n            if divisor == 2:\n                if length == 1:\n                    return \"8\"\n                if length == 2:\n                    return \"88\"\n                else:\n                    return \"8\" + \"9\" * (length - 2) + \"8\"\n            if divisor == 3:\n                return \"9\" * length\n            if divisor == 4:\n                if length < 5:\n                    return \"8\" * length\n                else:\n                    return \"8\" * 2 + \"9\" * (length - 4) + \"8\" * 2\n            if divisor == 5:\n                if length < 3:\n                    return \"5\" * length\n                else:\n                    return \"5\" + \"9\" * (length - 2) + \"5\"\n            \n\n            if divisor == 8:\n                if length < 7:\n                    return \"8\" * length\n                else:\n                    return \"8\" * 3 + \"9\" * (length - 6) + \"8\" * 3\n            if divisor == 9:\n                return \"9\" * length\n            if divisor == 6:\n                if length < 3:\n                    return \"6\" * length\n                if length % 2 == 1:\n                    if length == 3:\n                        return \"8\" * length\n                    else:\n                        half_len = math.ceil((length - 3) / 2)\n                        return \"8\" + \"9\" * half_len + \"8\" + \"9\" * half_len + \"8\"\n                else:\n                    if length == 4:\n                        return \"8\" + \"77\" + \"8\"\n                    else:\n                        half_len = math.ceil((length - 5) / 2)\n                        return \"8\" + \"9\" * half_len + \"77\" + \"9\" * half_len + \"8\"\n            if divisor == 7:\n                if length < 3:\n                    return \"7\" * length\n                else:\n                    if length % 2 == 1:\n                        for digit in range(9, 0, -1):\n                            pal_str = (length // 2) * '9' + str(digit) + (length // 2) * '9'\n                            if is_divisible_by_7(pal_str):\n                                return \"9\" * (length // 2) + str(digit) + \"9\" * (length // 2)\n                    else:\n                        for digit in range(9, 0, -1):\n                            pal_str = ((length - 1) // 2) * '9' + str(digit) + str(digit) + ((length - 1) // 2) * '9'\n                            if is_divisible_by_7(pal_str):\n                                return \"9\" * ((length - 1) // 2) + str(digit) + str(digit) + \"9\" * ((length - 1) // 2)\n\n        return find_palindrome(n, k)\n\n",
    "submit_ts": "1723952577",
    "subm_id": "1359799522"
}