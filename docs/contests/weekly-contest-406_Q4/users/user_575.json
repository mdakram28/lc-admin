{
    "username": "Dara_2001",
    "submission": "class Solution {\npublic:\n     static bool cmp(int a,int b){\n        return a>b;\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end(),cmp);\n        sort(verticalCut.begin(),verticalCut.end(),cmp);\n        int i=0,j=0;\n        long long ans=0;\n        while(i<horizontalCut.size() && j<verticalCut.size()){\n            if(horizontalCut[i]>verticalCut[j]){\n                ans+=(horizontalCut[i++]*(j+1));\n            }\n            else ans+=(verticalCut[j++]*(i+1));\n        }\n        while(i<horizontalCut.size()){\n            ans+=(horizontalCut[i++]*(j+1));\n        }\n        while(j<verticalCut.size()){\n            ans+=(verticalCut[j++]*(i+1));\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720925662",
    "subm_id": "1320262087"
}