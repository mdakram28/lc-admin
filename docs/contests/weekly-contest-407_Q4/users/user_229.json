{
    "username": "nifty-jacksonkqy",
    "submission": "class Solution {\npublic:\n    typedef long long LL;\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<LL> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];;\n        }\n        vector<int> a(n);\n        a[0] = diff[0];\n        for (int i = 1; i < n; i++) {\n            a[i] = diff[i] - diff[i - 1];\n        }\n        LL pos = 0, neg = 0;\n        for (int i = 1; i < n; i++) {\n            if (a[i] > 0) pos += a[i];\n            else neg += -a[i];\n        }\n        if (a[0] > 0) {\n            return max(a[0] + pos, neg);\n        } else if (a[0] < 0) {\n            return max(neg - a[0], pos);\n        }\n        return max(neg, pos);\n    }\n};",
    "submit_ts": "1721530853",
    "subm_id": "548381458"
}