{
    "username": "friedall",
    "submission": "#include <iostream>\n#include <queue>\n#define ll long long\n\nusing namespace std;\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        ll n = circles.size();\n        bool visited[n], ok[n];\n        queue <ll> Q;\n        ll dist;\n        for (int i=0; i<n; ++i) visited[i] = 0, ok[i] = 0;\n        for (int i=0; i<n; ++i) {\n            if (circles[i][0]-circles[i][2] < X && circles[i][0]+circles[i][2] > 0 && circles[i][1]-circles[i][2] < Y && circles[i][1]+circles[i][2] > 0) {\n                ok[i] = 1;\n            }\n            if (!ok[i]) continue;\n            if (circles[i][1] <= circles[i][2] || circles[i][0]+circles[i][2] >= X) {\n                visited[i] = 1;\n                Q.push(i);\n            }\n        }\n        while (!Q.empty()) {\n            auto u = Q.front();\n            Q.pop();\n            for (int i=0; i<n; ++i) {\n                if (!ok[i]) continue;\n                dist = ((ll)circles[u][0]-(ll)circles[i][0])*((ll)circles[u][0]-(ll)circles[i][0]) + ((ll)circles[u][1]-(ll)circles[i][1])*((ll)circles[u][1]-(ll)circles[i][1]);\n                if (dist <= ((ll)circles[u][2] + (ll)circles[i][2])*(((ll)circles[u][2] + (ll)circles[i][2]))) {\n                    if (!visited[i]) {\n                        visited[i] = 1;\n                        Q.push(i);\n                    }\n                }\n            }\n        }\n        for (int i=0; i<n; ++i) {\n            if (!ok[i]) continue;\n            if ((circles[i][0] <= circles[i][2] || circles[i][1]+circles[i][2] >= Y) && visited[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722135614",
    "subm_id": "1335707711"
}