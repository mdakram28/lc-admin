{
    "username": "BhuwanSKumar",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         unordered_map<int, int> andCount;\n    int n = nums.size();\n    long long count = 0;\n\n    for (int i = 0; i < n; ++i) {\n        unordered_map<int, int> newAndCount;\n\n        for (auto& pair : andCount) {\n            int newAnd = pair.first & nums[i];\n            newAndCount[newAnd] += pair.second;\n        }\n\n        newAndCount[nums[i]]++; // Count the subarray that starts with nums[i]\n\n        andCount = newAndCount;\n\n        if (andCount.find(k) != andCount.end()) {\n            count += andCount[k];\n        }\n    }\n\n    return count;\n    }\n};",
    "submit_ts": "1720278375",
    "subm_id": "1311706430"
}