{
    "username": "CODEX47",
    "submission": "class Solution\n{\n    int maxdist(vector<vector<int>> &v, int it)\n    {\n        int n = v.size();\n        vector<int> sum, diff;\n        for (int i = 0; i < v.size(); i++)\n            if (i != it)\n                sum.push_back(v[i][0] + v[i][1]), diff.push_back(v[i][0] - v[i][1]);\n\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        return max(sum.back() - sum.front(), diff.back() - diff.front());\n    }\n\npublic:\n    int minimumDistance(vector<vector<int>> &v)\n    {\n        sort(v.begin(), v.end());\n        vector<vector<int>> sum, diff;\n        for (int i = 0; i < v.size(); i++)\n            sum.push_back({v[i][0] + v[i][1], i}), diff.push_back({v[i][0] - v[i][1], i});\n\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n\n        int a = sum.back()[0] - sum.front()[0];\n        int b = diff.back()[0] - diff.front()[0];\n\n        int i1 = -1, i2 = -1;\n        if (a >= b)\n            i1 = sum.back()[1], i2 = sum.front()[1];\n        else\n            i1 = diff.back()[1], i2 = diff.front()[1];\n        return min(maxdist(v, i1), maxdist(v, i2));\n    }\n};"
}