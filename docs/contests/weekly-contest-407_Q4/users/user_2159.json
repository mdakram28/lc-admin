{
    "username": "musofadi_warrior",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        \n        \n        \n        needs = [target[i] - nums[i] for i in range(len(nums))]\n        res = 0\n        \n        st = collections.deque([])\n        \n        for i in needs:\n            if st:\n                if i>0:\n                    if st[-1]>0:\n                        first = True\n                        while(st and st[-1]>i):\n                            if first:\n                                res += (st.pop() - i)\n                                first = False\n                            else:\n                                st.pop()\n                    else:\n                        t = 0\n                        prev = 0\n                        while(st):\n                            t = abs(st.popleft())\n                            res += (t - prev)\n                            prev = t\n\n                elif i<0:\n                    if st[-1]<0:\n                        first = True\n                        while(st and st[-1]<i):\n                            if first:\n                                res += (i - st.pop())\n                                first = False\n                            else:\n                                st.pop()\n                    else:\n                        t = 0\n                        prev = 0\n                        while(st):\n                            t = abs(st.popleft())\n                            res += (t - prev)\n                            prev = t\n\n                else:\n                    t = 0\n                    prev = 0\n                    while(st):\n                        t = abs(st.popleft())\n                        res += (t - prev)\n                        prev = t\n            st.append(i)\n        if st:\n            t = 0\n            prev = 0\n            while(st):\n                t = abs(st.popleft())\n                res += (t - prev)\n                prev = t\n        return res",
    "submit_ts": "1721533462",
    "subm_id": "1328009520"
}