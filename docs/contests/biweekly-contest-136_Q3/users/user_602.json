{
    "username": "ry51",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n\n        def getFlips(s):\n            flips = 0\n            for i in range(len(s) // 2):\n                if s[i] != s[len(s) - i - 1]: flips += 1\n            return flips\n\n        def getGroupSwaps(g):\n            if sum(g) == 0 or sum(g) == 4: return 0\n            if sum(g) == 1 or sum(g) == 3: return 1\n            return 2\n\n        swaps = 0\n        rf = 0\n        cf = 0\n        col = []\n\n        if m % 2 == 1 and n % 2 == 1 and grid[(m - 1) // 2][(n - 1) // 2] == 1:\n            swaps += 1\n            grid[(m - 1) // 2][(n - 1) // 2] = 0\n\n        if m % 2 == 1:\n            rf = getFlips(grid[(m - 1) // 2])\n\n        if n % 2 == 1:\n            for i in range(m):\n                col.append(grid[i][(n - 1) // 2])\n            cf = getFlips(col)\n\n        if rf + cf == 0 and m % 2 == 1 and n % 2 == 1:\n            if (sum(col) + sum(grid[(m - 1) // 2])) % 4 == 2: swaps += 2\n        elif rf + cf == 0 and m % 2 == 1:\n            if sum(grid[(m - 1) // 2]) % 4 == 2: swaps += 2\n        elif rf + cf == 0 and n % 2 == 1:\n            if sum(col) % 4 == 2: swaps += 2\n\n        swaps += (rf + cf)\n\n        for i in range(m // 2):\n            for j in range(n // 2):\n                swaps += getGroupSwaps([grid[i][j], grid[m - i - 1][j], grid[i][n - j - 1], grid[m - i - 1][n - j - 1]])\n\n        return swaps\n",
    "submit_ts": "1722697608",
    "subm_id": "1343152557"
}