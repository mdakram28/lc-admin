{
    "username": "zhuang1992",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n, 0);\n        for(int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n        dfs(diff, 0, n-1);\n        return ans;\n    }\n    uint64_t ans = 0;\n    void dfs(vector<int>& arr, int l, int r) {\n        // cout << l << ','<<r<<','<<ans<<endl;\n        if (l > r) return;\n        if (l == r) {\n            //cout << l <<','<<r<<\" inc \" << abs(arr[l])<<endl;\n            ans += abs(arr[l]);\n            arr[l] = 0;\n            return;\n        }\n        int nl = l;\n        while(nl <= r && arr[nl] == 0) {\n            nl++;\n        }\n        for(int i = nl+1; i <= r; ++i) {\n            if (arr[i] == 0 || ((arr[i] ^ arr[nl]) < 0)) {\n                dfs(arr, nl, i-1);\n                nl = i;\n            }\n        }\n        while(nl <= r&& arr[nl] == 0 )nl++;\n        if (nl > r) return;\n        int sub = 0;\n        if (arr[nl] > 0)\n            sub = *min_element(arr.begin()+nl, arr.begin()+r+1);\n        else\n            sub = *max_element(arr.begin()+nl, arr.begin()+r+1);\n        \n        //cout << nl <<\"->\"<<r<< \"sub:\" << abs(sub) << endl;\n        for(int i = nl; i <= r; ++i) {\n            arr[i] -= sub;\n        }\n        ans+=abs(sub);\n        dfs(arr, nl, r);\n    }\n};",
    "submit_ts": "1721532379",
    "subm_id": "1327984419"
}