{
    "username": "aryabhatta0",
    "submission": "#define INF 1e9\n\nstruct Node {\n    int data;\n    Node* next;\n    Node(int val) : data(val), next(nullptr) {}\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<Node *> vec(n+1);\n\n        int cnt = n;\n        Node* head = new Node(0);\n        vec[0] = head;\n\n        Node* curr = head;\n        for(int i = 1; i < n; i++) {\n            curr->next = new Node(i);\n            curr = curr->next;\n            vec[i] = curr;\n        }\n\n        vector<int> ans;\n        for(auto& it : queries) {\n            int startIdx = it[0];\n            int endIdx = it[1];\n            \n            Node* start = vec[startIdx];\n            Node* end = vec[endIdx];\n\n            if(start != nullptr && end != nullptr && startIdx != endIdx) {\n                Node* curr = start->next;\n                while(curr != nullptr && curr != end) {\n                    cnt--;\n                    Node* temp = curr->next;\n                    vec[curr->data] = nullptr;  // Mark the node as removed in the vec array\n                    curr->next = nullptr;\n                    curr = temp;\n                }\n                // Link start directly to end\n                start->next = end;\n            }\n\n            ans.push_back(cnt - 1); \n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722742465",
    "subm_id": "1343769622"
}