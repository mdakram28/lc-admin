{
    "username": "truefuego",
    "submission": "class Solution {\n    int MOD = 1e9+7;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int ans = 0;\n        vector<vector<long long int>> dp(n+1,vector<long long int>(401, 0));\n        dp[0][0] = 1;\n        unordered_map<int,int> mp;\n        for(auto i : requirements) {\n            mp[i[0]+1] = i[1];\n        }\n        for(int i = 1 ; i <= n ; i++) {\n            for(int j = 0 ; j <= 400 ; j++) {\n                for(int k = 0 ; k < i ; k++) {\n                    int x = j - k;\n                    if(x >= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][x]) % MOD;\n                    }\n                }\n            }\n            if(mp.find(i) != mp.end()) {\n                int k = mp[i];\n                for(int j = 0 ; j <= 400 ; j++) {\n                    if(j != k) {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n        for(long long int i : dp[n]) {\n            ans = (i + ans) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719070982.0
}