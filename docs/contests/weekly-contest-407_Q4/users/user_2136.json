{
    "username": "sanuj21",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n        int n = nums.size();\n        vector<int> dff(n);\n        for (int i = 0; i < n; ++i) \n            dff[i] = target[i] - nums[i];\n\n        long long  currDff = 0;\n        long long  ans = 0;\n\n\n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (dff[i - 1] > 0 && dff[i] > 0) || (dff[i - 1] < 0 && dff[i] < 0)) {\n                int extra = abs(dff[i]) - abs(currDff);\n\n                if (extra > 0) ans += extra;\n                currDff = dff[i];\n\n            } else {\n                ans += abs(dff[i]);\n                currDff = dff[i];\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721534042",
    "subm_id": "1328022242"
}