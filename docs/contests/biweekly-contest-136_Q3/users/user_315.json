{
    "username": "bakhtabar",
    "submission": "class Solution {\n    int a, b, c;\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), res = 0;\n        a = 0, b = 0, c = 0;\n\n        if (n&1 and m&1)\n            if (grid[n / 2][m / 2] == 1)    res++;\n\n        if (n&1) {\n            int l = 0, r = m - 1;\n            while (l < r) {\n                int cur = grid[n / 2][l] + grid[n / 2][r];\n                if(cur == 0)    a++;\n                else if(cur == 1)   b++;\n                else    c++;\n                l++, r--;\n            }\n        }\n        if (m&1) {\n            int l = 0, r = n - 1;\n            while (l < r) {\n                int cur = grid[l][m / 2] + grid[r][m / 2];\n                if(cur == 0)    a++;\n                else if(cur == 1)   b++;\n                else    c++;\n                l++, r--;\n            }\n        }\n\n        if (c&1) {\n            if (b > 0)  res += b;\n            else    res++, res++;\n        } else  res += b;\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int x = grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                if (x != 0 && x != 4)\n                    res += min(x, 4 - x);\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722699828",
    "subm_id": "1343223631"
}