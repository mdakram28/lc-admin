{
    "username": "liu-chen-22",
    "submission": "template <typename T>\nstruct BIT {\n\tint n;\n\tvector<T> tr;\n\n\tBIT(int n) {\n\t\tinit(n);\n\t}\n\tvoid init(int n) {\n\t\tthis->n = n;\n\t\ttr.resize(n + 1);\n\t}\n\tvoid add(int x, const T &v) {\n\t\tfor (int i = x; i <= n; i += i & -i) \n\t\t\ttr[i] += v;\n\t}\n\tT sum(int x) {\n\t\tT res = 0;\n\t\tfor (int i = x; i; i -= i & -i) \n\t\t\tres += tr[i];\n\t\treturn res;\n\t}\n    T rangeSum(int l, int r) {\n        if (l > r) return 0;\n        return sum(r) - sum(l - 1);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& qs) {\n        int n = nums.size();\n        vector<int> a{0};\n        for (auto x : nums) {\n            a.push_back(x);\n        }\n\n        BIT<int> fc(n);\n        for (int i = 2; i < n; i++) {\n            if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n                fc.add(i, 1);\n            }\n        }\n\n        vector<int> res;\n        for (auto &vec : qs) {\n            int t = vec[0];\n            if (t == 1) {\n                int l = vec[1] + 1, r = vec[2] + 1;\n                res.push_back(fc.rangeSum(l + 1, r - 1));\n            } else {\n                int p = vec[1] + 1, x = vec[2];\n                if (p == 1) {\n                    int f1 = (a[2] > a[1] && a[2] > a[3]);\n                    int f2 = (a[2] > x && a[2] > a[3]);\n                    if (f1 && !f2) {\n                        fc.add(2, -1);\n                    } else if (!f1 && f2) {\n                        fc.add(2, 1);\n                    }\n                } else if (p == n) {\n                    int f1 = (a[n - 1] > a[n] && a[n - 1] > a[n - 2]);\n                    int f2 = (a[n - 1] > x && a[n - 1] > a[n - 2]);\n                    if (f1 && !f2) {\n                        fc.add(n - 1, -1);\n                    } else if (!f1 && f2) {\n                        fc.add(n - 1, 1);\n                    }\n                } else {\n                    int f1 = (a[p] > a[p - 1] && a[p] > a[p + 1]);\n                    int f2 = (x > a[p - 1] && x > a[p + 1]);\n                    if (f1 && !f2) {\n                        fc.add(p, -1);\n                    } else if (!f1 && f2) {\n                        fc.add(p, 1);\n                    }\n                    if (p - 1 > 1) {\n                        int f1 = (a[p - 1] > a[p - 2] && a[p - 1] > a[p]);\n                        int f2 = (a[p - 1] > a[p - 2] && a[p - 1] > x);\n                        if (f1 && !f2) {\n                            fc.add(p - 1, -1);\n                        } else if (!f1 && f2) {\n                            fc.add(p - 1, 1);\n                        }\n                    }\n                    if (p + 1 < n) {\n                        int f1 = (a[p + 1] > a[p] && a[p + 1] > a[p + 2]);\n                        int f2 = (a[p + 1] > x && a[p + 1] > a[p + 2]);\n                        if (f1 && !f2) {\n                            fc.add(p + 1, -1);\n                        } else if (!f1 && f2) {\n                            fc.add(p + 1, 1);\n                        }\n                    }\n                }\n                a[p] = x;\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": 1718506080.0
}