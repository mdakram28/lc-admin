{
    "username": "lonely_nights_with_bruce",
    "submission": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function maximumLength($nums, $k) {\n        $n = count($nums);\n        $dp = array_fill(0, $n, array_fill(0, $k + 1, 1));\n        $ans = 1;\n        $vk = array_fill(0, $k + 1, -1);\n        $vkm = array_fill(0, $k + 1, []);\n\n        for ($i = 0; $i < $n; $i++) {\n            for ($j = 0; $j <= $k; $j++) {\n                for ($l = 0; $l < $j; $l++) {\n                    $dp[$i][$j] = max($dp[$i][$j], 1 + $vk[$l]);\n                }\n                if (array_key_exists($nums[$i], $vkm[$j])) {\n                    $dp[$i][$j] = max($dp[$i][$j], 1 + $vkm[$j][$nums[$i]]);\n                }\n                $ans = max($ans, $dp[$i][$j]);\n            }\n            for ($j = 0; $j <= $k; $j++) {\n                $vk[$j] = max($vk[$j], $dp[$i][$j]);\n                if (!array_key_exists($nums[$i], $vkm[$j])) {\n                    $vkm[$j][$nums[$i]] = $dp[$i][$j];\n                } else {\n                    $vkm[$j][$nums[$i]] = max($vkm[$j][$nums[$i]], $dp[$i][$j]);\n                }\n            }\n        }\n\n        return $ans;\n    }\n}\n",
    "submit_ts": "1717861815",
    "subm_id": "1281803049"
}