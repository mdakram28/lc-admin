{
    "username": "zinchse",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid[0]), len(grid)\n        res = 0\n        for col in range(n//2):\n            for row in range(m//2):\n                s = grid[row][col] + grid[row][-1-col] + grid[-1-row][col] + grid[-1-row][-1-col]\n                res += min(s, 4-s)\n\n        if n % 2 and m % 2:\n            res += grid[m//2][n//2]\n\n        zeros_matches = 0\n        ones_matches = 0\n        dismatches = 0\n\n        if n % 2:\n            for row in range(m // 2):\n                zeros_matches += grid[row][n//2] == 0 and grid[-1-row][n//2] == 0\n                ones_matches += grid[row][n//2] == 1 and grid[-1-row][n//2] == 1\n                dismatches += grid[row][n//2] != grid[-1-row][n//2]\n\n        if m % 2:\n            for col in range(n // 2):\n                zeros_matches += grid[m//2][col] == 0 and grid[m//2][-1-col] == 0\n                ones_matches += grid[m//2][col] == 1 and grid[m//2][-1-col] == 1\n                dismatches += grid[m//2][col] != grid[m//2][-1-col]\n\n        if ones_matches % 2:\n            if dismatches >= 1:\n                return res + dismatches\n            else:\n                return res + dismatches + 2\n        else:\n            return res + dismatches    ",
    "submit_ts": "1722698953",
    "subm_id": "1343196971"
}