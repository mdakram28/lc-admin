{
    "username": "Skhirtladze",
    "submission": "class Solution {\npublic:\n\n    static const int N=100000+10;\n    int leftmost[N],rightmost[N];\n    long long SL[N],SR[N];\n\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        s=\"#\"+s;\n\n        for (int k=0;k<=n+1;k++) {\n            rightmost[k]=0;\n            leftmost[k]=n+1;\n        }\n\n        int z=0;\n        int o=0;\n        int R=0;\n        for (int L=1;L<=n;L++) {\n            while ((z<=k || o<=k) && R<=n) {\n                R++;\n                if (R>n) break;\n                if (s[R]=='0') z++;\n                          else o++;\n            }\n            rightmost[L]=R-1;\n            if (s[L]=='0') z--;\n                      else o--;\n        }\n\n        z=0;\n        o=0;\n        int L=n+1;\n        for (R=n;R>=1;R--) {\n            while ((z<=k || o<=k) && L>0) {\n                L--;\n                if (L==0) break;\n                if (s[L]=='0') z++;\n                          else o++;\n            }\n            leftmost[R]=L+1;\n            if (s[R]=='0') z--;\n                      else o--;\n        }\n\n        for (int k=1;k<=n;k++)\n            SL[k]=k+1-leftmost[k];\n\n        //for (int k=1;k<=n;k++) cout<<leftmost[k]<<\" \"; cout<<endl;\n        //for (int k=1;k<=n;k++) cout<<SL[k]<<\" \"; cout<<endl;\n\n        for (int k=1;k<=n;k++)\n            SL[k]+=SL[k-1];\n        \n        //for (int k=1;k<=n;k++) cout<<SL[k]<<\" \"; cout<<endl;\n\n        for (int k=1;k<=n;k++)\n            SR[k]=rightmost[k]+1-k;\n        for (int k=n;k>=1;k--)\n            SR[k]+=SR[k+1];\n        \n        \n        //for (int k=1;k<=n;k++) cout<<leftmost[k]<<\" \"; cout<<endl;\n        //for (int k=1;k<=n;k++) cout<<rightmost[k]<<\" \"; cout<<endl;\n        //cout<<endl;\n        //for (int k=1;k<=n;k++) cout<<SL[k]<<\" \"; cout<<endl;\n        //for (int k=1;k<=n;k++) cout<<SR[k]<<\" \"; cout<<endl;\n\n        vector <long long> ans;\n\n        for (int j=0;j<queries.size();j++) {\n            int L=queries[j][0]; L++;\n            int R=queries[j][1]; R++;\n\n            if (rightmost[L]>=R) {\n                long long nn=(R+1-L);\n                nn=(nn*(nn+1LL))/2LL;\n                ans.push_back(nn);\n                continue;\n            };\n\n            long long B = -(SL[n]-SR[L]-SL[R]);\n            \n            ans.push_back(B);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723952180",
    "subm_id": "1359789909"
}