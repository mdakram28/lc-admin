{
    "username": "AllenVV",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long x = 1, y = 1, result = 0;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        while(verticalCut.size() != 0 || horizontalCut.size() != 0){\n            if(horizontalCut.size() == 0){\n                for(int i = 0; i < verticalCut.size(); i++){\n                    result += y * verticalCut[i];\n                }\n                break;\n            }else if(verticalCut.size() == 0){\n                for(int i = 0; i < horizontalCut.size(); i++){\n                    result += x * horizontalCut[i];\n                }\n                break;\n            }\n            if(horizontalCut[horizontalCut.size() - 1] > verticalCut[verticalCut.size() - 1]){\n                result += x * horizontalCut[horizontalCut.size() - 1];\n                y++;\n                horizontalCut.erase(horizontalCut.end() - 1);\n            }else{\n                result += y * verticalCut[verticalCut.size() - 1];\n                x++;\n                verticalCut.erase(verticalCut.end() - 1);\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1720925712",
    "subm_id": "1320263735"
}