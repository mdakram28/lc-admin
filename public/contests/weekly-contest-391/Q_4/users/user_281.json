{
    "username": "slightlyepic",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        const int n = points.size();\n        \n        vector<tuple<int, int, int, int>> sfx(n + 1);\n        sfx[n] = { INT_MAX, INT_MIN, INT_MAX, INT_MIN };\n        \n        int minS = points[n - 1][0] + points[n - 1][1];\n        int maxS = points[n - 1][0] + points[n - 1][1];\n        int minD = points[n - 1][0] - points[n - 1][1];\n        int maxD = points[n - 1][0] - points[n - 1][1];\n\n        int i;\n        for(i = n - 1; i >= 0; i--) {\n            auto& p = points[i];\n            int s = p[0] + p[1];\n            int d = p[0] - p[1];\n            minS = min(minS, s);\n            maxS = max(maxS, s);\n            minD = min(minD, d);\n            maxD = max(maxD, d);\n            \n            sfx[i] = { minS, maxS, minD, maxD };\n        }\n        \n        minS = INT_MAX;\n        maxS = INT_MIN;\n        minD = INT_MAX;\n        maxD = INT_MIN;\n        \n        int ans = 1e9;\n        for(i = 0; i < n; i++) {\n            auto& p = points[i];\n            int s = p[0] + p[1];\n            int d = p[0] - p[1];\n            \n            auto [sMinS, sMaxS, sMinD, sMaxD] = sfx[i + 1];\n            int dist = max(\n                max(maxS, sMaxS) - min(minS, sMinS),\n                max(maxD, sMaxD) - min(minD, sMinD)\n            );\n            ans = min(ans, dist);\n            \n            minS = min(minS, s);\n            maxS = max(maxS, s);\n            minD = min(minD, d);\n            maxD = max(maxD, d);\n        }\n        \n        return ans;\n    }\n};"
}