{
    "username": "Zhipeng Song",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = (int)s.size(), Q = (int)queries.size();\n    typedef long long LL;\n    vector<LL> R(n), S(n + 1);\n    int c0 = 0, c1 = 0, j = 0;\n    for(int i = 0; i < n; i++)\n    {\n        while(j < n && (c0 <= k || c1 <= k))\n        {\n            c0 += s[j] == '0';\n            c1 += s[j] == '1';\n            if(c0 <= k || c1 <= k) j++;\n            else \n            {\n                c0 -= s[j] == '0';\n                c1 -= s[j] == '1';\n                break;\n            }\n        }\n        R[i] = j;\n        c0 -= s[i] == '0';\n        c1 -= s[i] == '1';\n    }\n    for(int i = 0; i < n; i++) S[i + 1] += S[i] + R[i] - i;\n    \n    typedef tuple<int, int, int> t3;\n    vector<t3> qq(Q);\n    for(int i = 0; i < Q; i++) qq[i] = {queries[i][1], queries[i][0], i};\n    sort(qq.begin(), qq.end());\n    \n    \n    vector<LL> ans(Q);\n    for(int i = 0; i < Q; i++)\n    {\n        LL ll = get<1>(qq[i]), rr = get<0>(qq[i]) + 1, idx = get<2>(qq[i]);\n        LL l = ll, r = rr;\n        while(l < r)\n        {\n            LL m = l + (r - l) / 2;\n            if(R[m] >= rr) r = m;\n            else l = m + 1;\n        }\n        ans[idx] = S[l] - S[ll] + (rr - l) * (rr - l + 1) / 2;\n    }\n    return ans;\n    }\n};",
    "submit_ts": "1723951772",
    "subm_id": "1359779690"
}