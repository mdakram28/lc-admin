{
    "username": "shicepku",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, hc: List[int], vc: List[int]) -> int:\n        ans = 0\n        h = v = 1\n        hmat = [[-hc[i], i] for i in range(m-1)]\n        vmat = [[-vc[i], i] for i in range(n-1)]\n        heapq.heapify(hmat)\n        heapq.heapify(vmat)\n        while len(hmat) > 0 and len(vmat) > 0:\n            if hmat[0][0] < vmat[0][0]:\n                ans += hmat[0][0] * v\n                heapq.heappop(hmat)\n                h += 1\n            else:\n                ans += vmat[0][0] * h\n                heapq.heappop(vmat)\n                v += 1\n        while len(hmat) > 0:\n            ans += hmat[0][0] * v\n            heapq.heappop(hmat)\n        while len(vmat) > 0:\n            ans += vmat[0][0] * h\n            heapq.heappop(vmat)\n        return -ans",
    "submit_ts": "1720926066",
    "subm_id": "1320274908"
}