{
    "username": "BinaryWizardby360",
    "submission": "\nclass Solution {\npublic:\n    vector<int> computeDifferences(const vector<int>& nums, const vector<int>& tar) {\n        int n = nums.size();\n        vector<int> differences(n, 0);\n        int i = 0;\n        while (i < n) {\n            differences[i] = tar[i] - nums[i];\n            i++;\n        }\n        return differences;\n    }\n\n    long long calculateMinimumOperations(const vector<int>& differences) {\n        int n = differences.size();\n        long long ans = 0;\n        long long m = 0;\n        int pos = differences[0] >= 0 ? 1 : 0;\n        \n        ans = abs(differences[0]);\n        m = ans;\n        \n        int i = 1;\n        while (i < n) {\n            if (differences[i] < 0 && pos == 1) {\n                ans += abs(differences[i]);\n                m = abs(differences[i]);\n                pos = 0;\n            } else if (differences[i] >= 0 && pos == 0) {\n                ans += abs(differences[i]);\n                m = abs(differences[i]);\n                pos = 1;\n            } else if (m < abs(differences[i])) {\n                ans += abs(differences[i]) - m;\n                m = abs(differences[i]);\n            } else {\n                m = abs(differences[i]);\n            }\n            i++;\n        }\n        \n        return ans;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& tar) {\n        vector<int> differences = computeDifferences(nums, tar);\n        return calculateMinimumOperations(differences);\n    }\n};\n\n",
    "submit_ts": "1721533337",
    "subm_id": "1328006738"
}