{
    "username": "indreshrsingh",
    "submission": "class Solution {\npublic:\n\nstatic const int MAXN=100005;//N\nstatic const int K=18;//lognN\nint st[K + 1][MAXN];\nvector<int> v;//do v.clear()\nint lg[MAXN+1];\nint n;\nvoid precomputelog()\n{\n    lg[1] = 0;\nfor (int i = 2; i <= MAXN; i++)\n    lg[i] = lg[i/2] + 1;\n\n}\nvoid precomputemin()\n{\ncopy(v.begin(), v.end(), st[0]);\nfor (int i = 1; i <= K; i++)\n    for (int j = 0; j + (1 << i) <= n; j++)\n        st[i][j] = (st[i - 1][j]&st[i - 1][j + (1 << (i - 1))]);\n\n\n}\nint querymin(int L,int R)\n{\n    int i = lg[R - L + 1];\n    int minimum = (st[i][L]&st[i][R - (1 << i) + 1]);\n    return minimum;\n}\n\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        v.clear();\n        for(int x:nums) v.push_back(x);\n        n=v.size();\n        precomputelog();\n        precomputemin();\n        long long int fans=0;\n        for(int i=0;i<n;i++)\n        {\n            int curr=nums[i];\n            if(curr<k) continue;\n            int idx=i;\n            while(idx<n)\n            {\n                int low=idx,high=n-1,ans;\n                int val=querymin(i,idx);\n                while(low<=high)\n                {\n                   int mid=(low+high)/2;\n                   if(querymin(i,mid)==val)\n                   {\n                    ans=mid;\n                    low=mid+1;\n\n                   }\n                   else high=mid-1;\n                }\n                if(val==k) fans+=ans-idx+1;\n                idx=ans+1;\n\n            }\n        }\n        return fans;\n    }\n};",
    "submit_ts": "1720276924",
    "subm_id": "1311639385"
}