{
    "username": "therealchainman",
    "submission": "class Solution {\npublic:\n    const int M = 1e9 + 7, MAXN = 1e3 + 3;\n    int countOfPairs(vector<int>& nums) {\n        int N = nums.size();\n        vector<long long> dp(MAXN, 0), ndp(MAXN, 0);\n        for (int i = 0; i <= nums[0]; i++) {\n            dp[i] = 1;\n        }\n        for (int i = 1; i < N; i++) {\n            ndp.assign(MAXN, 0);\n            int delta = max(nums[i] - nums[i - 1], 0);\n            long long cur = 0;\n            for (int j = delta; j <= nums[i]; j++) {\n                cur = (cur + dp[j - delta]) % M;\n                ndp[j] = cur;\n            }\n            swap(dp, ndp);\n        }\n        long long ans = 0;\n        for (long long x : dp) {\n            ans = (ans + x) % M;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723346102",
    "subm_id": "1351570229"
}