{
    "username": "ninja_master2002",
    "submission": "class Solution {\n    #define ll long long\n    \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size();\n        vector<vector<pair<int,int>>>v(n);\n        int m=board[0].size();\n        for(int i=0;i<n;i++){\n            vector<pair<ll,ll>>temp;\n            for(int j=0;j<m;j++){\n                temp.push_back({board[i][j],j});\n            }\n            sort(temp.rbegin(),temp.rend());\n            v[i].push_back(temp[0]);\n            v[i].push_back(temp[1]);\n            v[i].push_back(temp[2]);\n        }\n        \n        ll ans=-1e12;\n        for(int i=0;i<n-2;i++){\n            for(int j=0;j<3;j++){\n                for(int k1=i+1;k1<n-1;k1++){\n                    for(int j1=0;j1<3;j1++){\n                        if(v[k1][j1].second==v[i][j].second)continue;\n                        for(int y1=k1+1;y1<n;y1++){\n                            for(int j2=0;j2<3;j2++){\n                                if(v[y1][j2].second!=v[k1][j1].second && v[y1][j2].second!=v[i][j].second){\n                                    ans=max(ans,0LL+v[i][j].first+v[k1][j1].first+v[y1][j2].first);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908235",
    "subm_id": "1359143983"
}