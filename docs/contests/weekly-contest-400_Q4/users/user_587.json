{
    "username": "AminFahiminia",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n\n        res = math.inf\n        currentBits = [0]*40\n        left = 0\n        def calc(sz):\n            ret = 0\n            for i in range(40):\n                if currentBits[i] == sz:\n                    ret += 1 << i\n            return ret\n        \n        for x in range(len(nums)):\n            num = nums[x]\n            for i in range(40):\n                currentBits[i] += (num >> i) & 1\n            curr = calc(x-left+1)\n            res = min(res,abs(curr-k))\n            while curr < k and left <= x:\n                for i in range(40):\n                    currentBits[i] -= (nums[left] >> i) & 1\n                left+=1\n                curr = calc(x-left+1)\n                res = min(res,abs(curr-k))\n        return res                \n                \n            \n            \n            \n        \n",
    "submit_ts": "1717298646",
    "subm_id": "1274786344"
}