{
    "username": "Best Coder",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        deque<int> q0, q1;\n        int n = s.size();\n        vector<long long> a(n);\n\n        for (int i = n - 1; i >= 0; i--) {\n            if (s[i] == '0') q0.push_front(i);\n            else q1.push_front(i);\n\n            if (q0.size() > k + 1) q0.pop_back();\n            if (q1.size() > k + 1) q1.pop_back();\n\n            a[i] = max(q0.size() < k + 1 ? n : q0.back(), q1.size() < k + 1 ? n : q1.back()) - 1;\n        }\n\n        vector<long long> b(n + 1);\n        for (int i = 0; i < n; i++) b[i + 1] = b[i] + a[i];\n\n        vector<long long> ans;\n        for (auto& q : queries) {\n            long long l = q[0], r = q[1];\n            long long res = 0;\n\n            res += b[r + 1] - b[l] - (r * (r + 1) / 2 - l * (l - 1) / 2) + (r - l + 1);\n\n            int lo = l, hi = r + 1, md;\n            while (lo < hi) {\n                md = lo + (hi - lo) / 2;\n                if (a[md] < r) lo = md + 1;\n                else hi = md;\n            }\n\n            int cnt = r - lo + 1;\n            res -= (b[r + 1] - b[lo]) - r * cnt;\n\n            ans.push_back(res);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723953124",
    "subm_id": "1359812998"
}