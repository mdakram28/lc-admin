{
    "username": "JJZin",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        \n        \n        breaks = []\n        for ea in range(1, len(colors) * 2 + 1):\n            if colors[ea % len(colors)] == colors[(ea - 1) % len(colors)]:\n                breaks.append(ea)\n                \n        if len(breaks) == 0:\n            return len(colors)\n        ans = 0\n        sayson = set()\n        for ea in range(1, len(breaks)):\n            \n            if ((breaks[ea]) % len(colors), (breaks[ea] - 1) % len(colors)) in sayson:\n                continue\n                \n            sayson.add((breaks[ea] % len(colors), (breaks[ea] - 1) % len(colors)))\n          \n            if breaks[ea] - breaks[ea -1] < k:\n                continue\n            \n            ans += ((1 + breaks[ea] - breaks[ea - 1]) - k)\n        return ans\n            \n        \n        \n        ",
    "submit_ts": "1720277831",
    "subm_id": "1311682097"
}