{
    "username": "Abhi_nav21",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& sequence) {\n        const int MOD = 1000000007;\n        const int MAX_VAL = 1000;\n        int seqLen = sequence.size();\n        \n        vector<vector<long long>> memo(2, vector<long long>(MAX_VAL + 1, 0));\n        vector<long long> cumSum(MAX_VAL + 2, 0);\n\n        for (int i = 0; i <= sequence[0]; ++i) {\n            memo[0][i] = 1;\n            cumSum[i + 1] = (cumSum[i] + 1) % MOD;\n        }\n        \n        int current = 0, previous = 0;\n        for (int idx = 1; idx < seqLen; ++idx) {\n            current = idx & 1;\n            previous = 1 - current;\n            vector<long long> newCumSum(MAX_VAL + 2, 0);\n            \n            for (int val = 0; val <= sequence[idx]; ++val) {\n                int upperBound = min(val, sequence[idx-1] - (sequence[idx] - val));\n                memo[current][val] = (upperBound >= 0) ? cumSum[upperBound + 1] : 0;\n                newCumSum[val + 1] = (newCumSum[val] + memo[current][val]) % MOD;\n            }\n            \n            cumSum = move(newCumSum);\n        }\n        \n        long long result = 0;\n        for (int val = 0; val <= sequence[seqLen-1]; ++val) {\n            result = (result + memo[current][val]) % MOD;\n        }\n        \n        return static_cast<int>(result);\n    }\n};",
    "submit_ts": "1723346921",
    "subm_id": "1351588041"
}