{
    "username": "divine21",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            nums[i] -= target[i];\n        }\n        nums.insert(nums.begin(), 0);\n        for (auto x : nums) {\n            std::cout << x << \" \";\n        }\n        for (int i = 1; i <= n; i++) {\n            if (nums[i] > 0 && nums[i - 1] > 0) {\n                ans += std::max(0, nums[i] - nums[i - 1]);\n            } else if (nums[i] < 0 && nums[i - 1] < 0) {\n                ans += std::max(0, nums[i - 1] - nums[i]);\n            } else {\n                ans += std::abs(nums[i]);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721530174",
    "subm_id": "548376534"
}