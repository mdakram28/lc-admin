{
    "username": "RegexRover",
    "submission": "class Segment_Tree\n{\n    public :\n    vector <int> t;\n    Segment_Tree(int n) //size of array\n    {\n        t.resize(4*n);\n    }\n    void Build(vector <int> &a,int v,int l,int r) //(array a,tree index 1,0,n-1)\n    {\n        if(l==r)\n        {\n            t[v]=a[l];\n        }\n        else\n        {\n            int mid=(l+r)/2;\n            Build(a,2*v,l,mid);\n            Build(a,2*v+1,mid+1,r);\n            t[v]=t[2*v]+t[2*v+1];\n        }\n    }\n    int find_sum(int v,int tl,int tr,int l,int r) //(1,0,n-1,0-indexed range querry)\n    {\n        if(l>r)\n        {\n            return 0;\n        }\n        if(l==tl && r==tr)\n        {\n            return t[v];\n        }\n        int mid=(tl+tr)/2;\n        return find_sum(2*v,tl,mid,l,min(r,mid))+find_sum(2*v+1,mid+1,tr,max(l,mid+1),r);\n    }\n    void update(int v,int l,int r,int pos,int val) //(1,0,n-1,pos,val)\n    {\n        if(l==r)\n        {\n            t[v]=val;\n        }\n        else\n        {\n            int mid=(l+r)/2;\n            if(pos<=mid)\n            {\n                update(2*v,l,mid,pos,val);\n            }\n            else\n            {\n                update(2*v+1,mid+1,r,pos,val);\n            }\n            t[v]=t[2*v]+t[2*v+1];\n        }\n    }\n};\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) \n    {\n        vector <int> a(n,1);\n        Segment_Tree st(n);\n        st.Build(a,1,0,n-1);\n        \n        vector<int> ans;\n        int i,sum,last = 0,temp,idx;\n        set <int> stt;\n        for(i=0;i<n;i++)\n        {\n            stt.insert(i);\n        }\n        for(auto q : queries)\n        {\n            auto it = stt.upper_bound(q[0]);\n            while(*it < q[1])\n            {\n                idx = *it;\n                a[idx] = 0;\n                st.update(1,0,n-1,idx,0);\n                it = stt.erase(it);\n            }\n            temp = st.find_sum(1,0,n-1,0,n-1);\n            ans.push_back(temp-1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743031",
    "subm_id": "1343782741"
}