{
    "username": "_priyanshu_101_",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n        long long ans = 0;\n        vector <int> pos;\n        vector <int> psum(n);\n        for (int i = 0; i < n; i ++) {\n            psum[i] = (s[i] == '1') + (i - 1 >= 0 ? psum[i - 1] : 0);\n            if (s[i] == '0') pos.push_back(i);\n            int sz = pos.size();\n            if (sz == 0) {\n                ans += i + 1;\n            }\n            else {\n                ans += i - pos.back();\n            }\n            for (int j = sz - 1; j >= 0; j --) {\n                int l = 0, r = pos[j];\n                if (j - 1 >= 0) l = pos[j - 1] + 1;\n                int have = psum[i] - psum[r];\n                long long sum = sz - j;\n                sum *= sum;\n                if (sum > (i + 1)) break;\n                if (have >= sum) {\n                    ans += r - l + 1;\n                }\n                else {\n                    long long ones = r - l;\n                    if (ones + have >= sum) {\n                        ans += ones + have + 1 - sum;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722138433",
    "subm_id": "1335790638"
}