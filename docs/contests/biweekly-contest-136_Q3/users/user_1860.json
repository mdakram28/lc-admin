{
    "username": "Nitesh_Kannaujia",
    "submission": "class Solution {\npublic:\n\n  int minFlips(vector<vector<int>>& grid) {\n      int rowCount = grid.size();\n      int colCount = grid[0].size();\n      int totalFlips = 0;\n\n      // Handle the center cell for odd dimensions\n      if (rowCount % 2 == 1 && colCount % 2 == 1) {\n          if (grid[rowCount / 2][colCount / 2] == 1) {\n            totalFlips += 1;\n          }\n      }\n \n      vector<int> flipCounts(3, 0);\n      if (rowCount % 2 == 1) {\n          int leftIdx = 0, rightIdx = colCount - 1;\n          while (leftIdx < rightIdx) {\n              int sum = grid[rowCount / 2][leftIdx] + grid[rowCount / 2][rightIdx];\n              flipCounts[sum] += 1;\n              leftIdx += 1;\n              rightIdx -= 1;\n          }\n      }\n\n      if (colCount % 2 == 1) {\n          int topIdx = 0, bottomIdx = rowCount - 1;\n          while (topIdx < bottomIdx) {\n              int sum = grid[topIdx][colCount / 2] + grid[bottomIdx][colCount / 2];\n              flipCounts[sum] += 1;\n              topIdx += 1;\n              bottomIdx -= 1;\n          }\n      }\n\n      if (flipCounts[2] % 2 == 1) {\n          if (flipCounts[1] > 0) {\n              totalFlips += flipCounts[1];\n          } else {\n              totalFlips += 2;\n          }\n      } else {\n          totalFlips += flipCounts[1];\n      }\n\n      for (int i = 0; i < rowCount / 2; ++i) {\n          for (int j = 0; j < colCount / 2; ++j) {\n              int cell1 = grid[i][j];\n              int cell2 = grid[rowCount - 1 - i][j];\n              int cell3 = grid[i][colCount - 1 - j];\n              int cell4 = grid[rowCount - 1 - i][colCount - 1 - j];\n\n              int totalSum = cell1 + cell2 + cell3 + cell4;\n\n              if (totalSum != 0 && totalSum != 4) {\n                  totalFlips += min(totalSum, 4 - totalSum);\n              }\n          }\n      }\n\n      return totalFlips;\n  }\n};",
    "submit_ts": "1722699715",
    "subm_id": "1343220078"
}