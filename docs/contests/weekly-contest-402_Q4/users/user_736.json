{
    "username": "sundaram__anand",
    "submission": "class Solution {\npublic:\n    void build(vector<int>&seg, vector<int>&vec,int ind,int l,int r){\n    if(l==r) {\n        seg[ind]=0;\n        return ;\n    }\n    int mid=l+(r-l)/2;\n    build(seg,vec,2*ind+1,l,mid);\n    build(seg,vec,2*ind+2,mid+1,r);\n    if(r-l>1){\n        seg[ind]=(seg[2*ind+1]+seg[2*ind+2]);\n        if(mid>l && r>=mid+1){\n            if(vec[mid]>vec[mid-1] && vec[mid]>vec[mid+1]) seg[ind]++;\n        }\n        if(mid>=l && r>mid+1)\n           if(vec[mid+1]>vec[mid] && vec[mid+1]>vec[mid+2]) seg[ind]++;\n        }\n    } \n \nint query(vector<int>&seg,vector<int>&vec,int ind,int x,int y,int l,int r){\n    if(x>=l && y<=r) {\n        // if(seg[ind]) cout<<x<<\" \"<<y<<\"\\n\";\n        return seg[ind];\n    }\n    if(x>r || y<l||l>r) return 0;\n    int mid=x+(y-x)/2;\n    // cout<<\"kn\";\n    int ans=query(seg,vec,2*ind+1,x,mid,l,r)+query(seg,vec,2*ind+2,mid+1,y,l,r);\n    if(y-x>1){ \n        if(mid>x && y>=mid+1 && mid-1>=l && mid+1<=r){\n            if(vec[mid]>vec[mid-1] && vec[mid]>vec[mid+1])  ans++;\n        }\n        if(mid>=x && y>mid+1 && mid>=l && mid+2<=r){\n           if(vec[mid+1]>vec[mid] && vec[mid+1]>vec[mid+2]) ans++;\n        }\n    }\n    return ans;\n}\n \nvoid point(vector<int>&seg,vector<int>&vec,int ind,int l,int r,int p,int v){\n    if(l==r && l==p){ \n        seg[ind]=0;return ;\n    }\n    if(l>p || r<p||l>r) return ;\n    int mid=l+(r-l)/2;\n    point(seg,vec,2*ind+1,l,mid,p,v);\n    point(seg,vec,2*ind+2,mid+1,r,p,v);\n    seg[ind]=(seg[2*ind+1]+seg[2*ind+2]); \n    if(r-l>1){\n        seg[ind]=(seg[2*ind+1]+seg[2*ind+2]);\n        if(mid>l && r>=mid+1){\n            if(vec[mid]>vec[mid-1] && vec[mid]>vec[mid+1]) seg[ind]++;\n        }\n        if(mid>=l && r>mid+1)\n           if(vec[mid+1]>vec[mid] && vec[mid+1]>vec[mid+2]) seg[ind]++;\n        }\n    } \n    vector<int> countOfPeaks(vector<int>& vec, vector<vector<int>>& queries) {\n        int n=vec.size();\n        vector<int>seg(4*n+5);\n        vector<int>ans;\n        build(seg,vec,0,0,n-1);\n        // cout<<query(seg,vec,0,0,n-1,0,0)<<\"p\\n\";\n        for(auto it:queries){\n            int a=it[0];\n            if(a==1){\n                int b=it[1],c=it[2];\n                ans.push_back(query(seg,vec,0,0,n-1,b,c));\n            }\n            else{\n                int b=it[1],c=it[2];\n                vec[b]=c;\n                point(seg,vec,0,0,n-1,b,c);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718508343",
    "subm_id": "1289678533"
}