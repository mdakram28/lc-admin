{
    "username": "user8557",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        const int n = nums.size();\n        long long res = 0;\n        for (int i = 0; i < n; i++) {\n            target[i] -= nums[i];\n        }\n        vector<int> diff(n + 1); diff.front() = target.front();\n        for (int i = 1; i < n; i++) {\n            diff[i] = target[i] - target[i - 1];\n        }\n        diff.back() = (-target.back());\n        vector<int> st; st.reserve(n + 1);\n        for (auto d : diff) {\n            if (st.empty()) {\n                st.push_back(d);\n            } else {\n                if (d == 0) {\n                    continue;\n                }\n                bool dGt0 = d > 0;\n                bool stbackGt0 = st.back() > 0;\n                if (dGt0 == stbackGt0) {\n                    st.push_back(d);\n                } else {\n                    while (!st.empty()) {\n                        res += min(abs(st.back()), abs(d));\n                        d += st.back(); st.pop_back();\n                        if (d == 0) {\n                            break;\n                        }\n                        if (st.empty() || (st.back() > 0 == d > 0)) {\n                            st.push_back(d);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};\n",
    "submit_ts": "1721532408",
    "subm_id": "548392210"
}