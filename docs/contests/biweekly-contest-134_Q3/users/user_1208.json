{
    "username": "yash_ww07",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& nums, int k) {\n        nums.insert(nums.end(), nums.begin(), nums.begin() + k);\n        \n        int n = nums.size();\n        vector<int> pre(n + 1);\n        \n        for(int i=0; i<=n; i++) {\n            pre[i] = 0;\n        }\n\n        for (int i = 1; i < n; ++i) {\n            pre[i] = pre[i] + pre[i - 1];\n            int temp = abs(nums[i] - nums[i - 1]);\n            \n            pre[i] = pre[i] + temp;\n        }\n        \n        for(int i=0; i<n; i++)  k -= 1;\n        \n\n        \n        int res = 0;\n        \n                k += (n-1);\n        for (int i = n-1; i >= k+1; i--) {\n            if (pre[i] - pre[i - k] == k) {\n                res++;\n            }\n        }\n        return res;\n\n    }\n};",
    "submit_ts": "1720280492",
    "subm_id": "1311791387"
}