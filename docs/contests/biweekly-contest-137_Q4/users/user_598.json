{
    "username": "\u516d\u516c\u56ed",
    "submission": "using ll = long long;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        vector<vector<int>> bottom(n, vector<int>(m));\n        \n        // Copy board to bottom\n        for (int i = 0; i < n; i++) {\n            bottom[i] = board[i];\n        }\n        \n        // Fill the bottom array with maximums from bottom up\n        for (int i = n - 2; i >= 0; i--) {\n            for (int j = 0; j < m; j++) {\n                bottom[i][j] = max(bottom[i][j], bottom[i + 1][j]);\n            }\n        }\n        \n        ll ans = LLONG_MIN;\n        vector<vector<int>> mx(m, vector<int>(m, INT_MIN));\n        \n        // Initialize top with the first row\n        vector<int> top = board[0];\n        \n        // Iterate through rows from the second to the second-to-last\n        for (int i = 1; i < n - 1; i++) {\n            vector<int> tmp = bottom[i + 1];\n            sort(tmp.begin(), tmp.end());\n            \n            for (int p = 0; p < m; p++) {\n                for (int q = p + 1; q < m; q++) {\n                    int a = min(bottom[i + 1][p], bottom[i + 1][q]);\n                    int b = max(bottom[i + 1][p], bottom[i + 1][q]);\n                    \n                    if (b < tmp[m-2] || (b == tmp[m-2] && a <= tmp[m-3])) {\n                        mx[p][q] = mx[q][p] = tmp[m-1];\n                    } else if (b < tmp[m-1] || (b == tmp[m-1] && a <= tmp[m-3])) {\n                        mx[p][q] = mx[q][p] = tmp[m-2];\n                    } else {\n                        mx[p][q] = mx[q][p] = tmp[m-3];\n                    }\n                }\n            }\n            \n            // Calculate the maximum possible sum\n            for (int p = 0; p < m; p++) {\n                for (int q = 0; q < m; q++) {\n                    if (p == q) continue;\n                    ans = max(ans, (ll)mx[p][q] + (ll)board[i][p] + (ll)top[q]);\n                }\n            }\n            \n            // Update top array\n            for (int q = 0; q < m; q++) {\n                top[q] = max(top[q], board[i][q]);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723910082",
    "subm_id": "556339451"
}