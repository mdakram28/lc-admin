{
    "username": "ajingo",
    "submission": "class Solution {\npublic:\n  int minimumDistance(vector<vector<int>>& points) {\n    int n = points.size();\n    vector<array<int, 4>> info(n, array<int, 4>{});\n    for (int i = 0; i < n; i++) {\n      int x = points[i][0], y = points[i][1];\n      info[i] = {\n        x + y,\n        x - y,\n        -x + y,\n        -x - y\n      };\n    }\n    array<multiset<int>, 4> st{};\n    for (int i = 0; i < n; i++) {\n      for (int t = 0; t < 4; t++) {\n        st[t].insert(info[i][t]);\n      }\n    }\n    int ans = int(1e9);\n    for (int i = 0; i < n; i++) {\n      // erase points[i]\n      for (int t = 0; t < 4; t++) {\n        st[t].erase(st[t].find(info[i][t]));\n      }\n      int best = 0;\n      // query the max distance\n      for (int t = 0; t < 4; t++) {\n        best = max(best, *st[t].rbegin() - *st[t].begin());\n      }\n      // readd points[i]\n      for (int t = 0; t < 4; t++) {\n        st[t].insert(info[i][t]);\n      }\n      ans = min(ans, best);\n    }\n    return ans;\n  }\n};"
}