{
    "username": "priority_queue_07",
    "submission": "#include <vector>\n#include <unordered_map>\n#include <algorithm>\n#include <cmath>\n#include <limits>\n\nclass Solution {\npublic:\n    int solve(const unordered_map<int, vector<pair<int, int>>>& mp, \n                            const vector<int>& si_vec, const vector<int>& arr) {\n        int ans = arr.size();  \n\n        for (const auto& pair : mp) {\n            int diff = pair.first;\n            const auto& values = pair.second;\n\n            int bs = lower_bound(si_vec.begin(), si_vec.end(), diff) - si_vec.begin();\n            bs = bs * 2 + (arr.size() / 2 - bs);\n\n            for (const auto& value : values) {\n                int i = value.first;\n                int j = value.second;\n                int x = arr[i];\n                int y = arr[j];\n                if (x < diff && y < diff) {\n                    bs -= 2;\n                } else {\n                    bs -= 1;\n                }\n            }\n            ans = min(ans, bs);\n        }\n\n        return ans;\n    }\n    int minChanges(vector<int>& arr, int k) {\n        unordered_map<int, vector<pair<int, int>>> mp;\n        vector<int> si_vec;\n\n        for (int i = 0; i < arr.size() / 2; ++i) {\n            int x = arr[i];\n            int y = arr[arr.size() - i - 1];\n            int diff = abs(x - y);\n\n            int si = max({x, y, k - x, k - y});\n\n            mp[diff].push_back({i, arr.size() - i - 1});\n            si_vec.push_back(si);\n        }\n\n        sort(si_vec.begin(), si_vec.end());\n\n        return solve(mp, si_vec, arr);\n    }\n\n\n\n};\n",
    "submit_ts": "1721489489",
    "subm_id": "1327454788"
}