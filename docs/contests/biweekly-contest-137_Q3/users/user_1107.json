{
    "username": "Harsh Mishra",
    "submission": "\nclass Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        int[][] mv = new int[m][3];\n        int[][] idx = new int[m][3];\n        for (int i = 0; i < m; ++i) {\n            Arrays.fill(mv[i], Integer.MIN_VALUE);\n            Arrays.fill(idx[i], -1);\n        }\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                for (int k = 0; k < 3; ++k) {\n                    if (board[i][j] > mv[i][k]) {\n                        for (int l = 2; l > k; --l) {\n                            mv[i][l] = mv[i][l - 1];\n                            idx[i][l] = idx[i][l - 1];\n                        }\n                        mv[i][k] = board[i][j];\n                        idx[i][k] = j;\n                        break;\n                    }\n                }\n            }\n        }\n        long ans = Long.MIN_VALUE;\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int c1 = 0; c1 < 3; ++c1) {\n                        for (int c2 = 0; c2 < 3; ++c2) {\n                            if (idx[r2][c2] == idx[r1][c1]) continue;\n                            for (int c3 = 0; c3 < 3; ++c3) {\n                                if (idx[r3][c3] == idx[r1][c1] || idx[r3][c3] == idx[r2][c2]) continue;\n                                long sum = (long) mv[r1][c1] + mv[r2][c2] + mv[r3][c3];\n                                ans = Math.max(ans, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1723909471",
    "subm_id": "1359193852"
}