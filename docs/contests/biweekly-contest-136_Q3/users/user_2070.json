{
    "username": "markshi07",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        ret = 0\n        if n%2 == 1 and m%2 == 1:\n            if grid[n//2][m//2] == 1:\n                ret += 1\n        shift = [0]*3\n        if n%2 == 1:\n            a, b = 0, m - 1\n            while a < b:\n                temp = grid[n//2][a] + grid[n//2][b]\n                shift[temp] += 1\n                a += 1\n                b -= 1\n        if m % 2 == 1:\n            a, b = 0, n - 1\n            while a < b:\n                temp = grid[a][m//2] + grid[b][m//2]\n                shift[temp] += 1\n                a += 1\n                b -= 1\n        if shift[2] % 2 == 1:\n            if shift[1] > 0:\n                ret += shift[1]\n            else:\n                ret += 2\n        else:\n            ret += shift[1]\n        for i in range(n//2):\n            for j in range(m//2):\n                a = grid[i][j]\n                b = grid[n - 1 - i][j]\n                c = grid[i][m - 1 - j]\n                d = grid[n - 1 - i][m - 1 - j]\n                temp = a + b + c + d\n                if temp != 0 and temp != 4:\n                    ret += min(temp, 4 - temp)\n\n        return ret",
    "submit_ts": "1722699587",
    "subm_id": "1343216233"
}