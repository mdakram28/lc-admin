{
    "username": "Clobber2",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n=grid.length, m=grid[0].length;\n        int ans=0;\n        for (int i = 0;i<n/2;i++){\n            for (int j=0;j<m/2;j++){\n                int move=count(n,m,i,j,grid);\n                ans+=Math.min(move, 4-move);\n            }\n        }\n        int a=0;\n        int count=0;\n        if (m%2==1){\n            for (int i = 0;i<n/2;i++){\n                if (grid[i][m/2]!=grid[n-i-1][m/2]){\n                    a++;\n                }\n                else if (grid[i][m/2]==1)\n                    count+=2;\n            }\n        }\n\n        \n        if (n%2==1){\n            for (int i = 0;i<m/2;i++){\n                if (grid[n/2][i]!=grid[n/2][m-1-i]){\n                    a++;\n                }\n                else if (grid[n/2][i]==1)\n                    count+=2;\n            }\n        }\n        if (m%2==1 && n%2==1 && grid[n/2][m/2]==1)\n            ans++;\n        if (count%4!=0 && a==0)\n            ans+=2;\n        return ans+a;\n    }\n    int count(int n, int m, int i, int j, int[][] grid){\n        int o=0;\n        if (grid[i][j]==1)\n            o++;\n        if (grid[i][m-1-j]==1)\n            o++;\n        if (grid[n-1-i][j]==1)\n            o++;\n        if (grid[n-i-1][m-1-j]==1)\n            o++;\n        return o;\n    }\n}",
    "submit_ts": "1722698119",
    "subm_id": "1343170303"
}