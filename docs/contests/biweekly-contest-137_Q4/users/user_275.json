{
    "username": "trofimichael",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(const vector<vector<int>>& board) {\n        const int n = board.size(), m = board.front().size();\n        set<pair<int, pair<int, int>>, greater<>> total_max;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                total_max.insert({board[i][j], {i, j}});\n            }\n        }\n\n        const int mx = 350;\n        vector<vector<int>> copy(min(n * m, mx), vector<int>(3));\n        auto iter = total_max.begin();\n        for (int i = 0; i < copy.size(); ++i) {\n            copy[i][0] = iter->first;\n            copy[i][1] = iter->second.first;\n            copy[i][2] = iter->second.second;\n            ++iter;\n        }\n        long long result = -1e18;\n        for (int i = 0; i < copy.size() - 2; ++i) {\n            for (int j = i + 1; j < copy.size() - 1; ++j) {\n                for (int k = j + 1; k < copy.size(); ++k) {\n                    if (copy[i][1] == copy[j][1]) {\n                        continue;\n                    }\n                    if (copy[i][2] == copy[j][2]) {\n                        continue;\n                    }\n                    if (copy[i][1] == copy[k][1]) {\n                        continue;\n                    }\n                    if (copy[i][2] == copy[k][2]) {\n                        continue;\n                    }\n                    if (copy[k][1] == copy[j][1]) {\n                        continue;\n                    }\n                    if (copy[k][2] == copy[j][2]) {\n                        continue;\n                    }\n                    long long cur = copy[i][0];\n                    cur += copy[j][0];\n                    cur += copy[k][0];\n                    result = max(result, cur);\n                }\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1723907811",
    "subm_id": "1359125315"
}