{
    "username": "Hlib",
    "submission": "class Solution {\npublic:\n    std::vector<std::pair<long long, int>> getLargest(std::vector<int> vec)\n    {\n        std::vector<std::pair<int, int>> vp;\n        for (int i = 0; i < vec.size(); ++i)\n        {\n            vp.emplace_back(vec[i], i);\n        }\n        std::sort(vp.begin(), vp.end());\n        return std::vector<std::pair<long long, int>>(vp.end() - 3, vp.end());\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        std::vector<std::vector<std::pair<long long, int>>> vec;\n        for (const auto& row : board)\n        {\n            auto v = getLargest(row);\n            vec.emplace_back(v);\n        }\n\n        long long result = std::numeric_limits<long long>::min();\n        for (int i = 0; i < vec.size(); ++i)\n        for (int i2 = 0; i2 < vec[i].size(); ++i2)\n        {\n            for (int j = i + 1; j < vec.size(); ++j)\n            for (int j2 = 0; j2 < vec[j].size(); ++j2)\n            {\n                if (vec[j][j2].second == vec[i][i2].second) continue;\n                for (int k = j + 1; k < vec.size(); ++k)\n                for (int k2 = 0; k2 < vec[k].size(); ++k2)\n                {\n                    if (vec[k][k2].second == vec[i][i2].second ||\n                        vec[k][k2].second == vec[j][j2].second)\n                        continue;\n                    \n                    result = std::max(result, vec[i][i2].first + vec[j][j2].first + vec[k][k2].first);\n                }\n            }\n        }\n\n\n        return result;\n    }\n};",
    "submit_ts": "1723908626",
    "subm_id": "1359160492"
}