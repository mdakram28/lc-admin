{
    "username": "wisdompeak",
    "submission": "class TrieNode\n{\n    public:\n    TrieNode* next[26];\n    int cost;\n    TrieNode()\n    {\n        for (int i=0; i<26; i++)\n            next[i] = NULL;\n        cost = -1;\n    }        \n};\n\nclass Solution {\n    TrieNode* root = new TrieNode();\n    vector<int>memo;\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n    {\n        memo = vector<int>(target.size(), -1);\n        \n        for (int i=0; i<words.size(); i++)\n        {\n            TrieNode* node = root;\n            for (auto ch: words[i])\n            {\n                if (node->next[ch-'a']==NULL)\n                    node->next[ch-'a'] = new TrieNode();\n                node = node->next[ch-'a'];\n            }\n            if (node->cost==-1)\n                node->cost = costs[i];\n            else\n                node->cost = min(node->cost, costs[i]);\n        }\n        \n        int ret = dfs(target, 0);        \n        if (ret == INT_MAX/2) return -1;\n        else return ret;\n    }\n    \n    int dfs(string& target, int cur)\n    {\n        if (cur==target.size()) return 0;\n        if (memo[cur] != -1) return memo[cur];\n        \n        int ans = INT_MAX/2;\n        TrieNode* node = root;\n        for (int i=cur; i<target.size(); i++)\n        {\n            if (node->next[target[i]-'a']==NULL)\n                break;\n            node = node->next[target[i]-'a'];\n            if (node->cost!=-1)\n                ans = min(ans, node->cost + dfs(target, i+1));\n        }\n        \n        memo[cur] = ans;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720320964",
    "subm_id": "1312309610"
}