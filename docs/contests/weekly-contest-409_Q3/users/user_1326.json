{
    "username": "satyam190405",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int>ans;\n        set<int>st;\n        map<int, int>mp;\n        for(int i=0; i<n; i++){\n            st.insert(i);\n        }\n        for(auto it:queries){\n            if(st.size()==2){\n                ans.push_back(1);\n            }\n            else{\n            int i=it[0]+1, m = it[1];\n            while(i<m && i<n-1){\n                if(i==it[0]+1){\n                    if(mp.find(i-1)!=mp.end()){\n                        i = mp[i-1];\n                    }\n                    else{\n                        st.erase(i);\n                        i++;\n                    }\n                }\n                else{\n                    if(mp.find(i)!=mp.end()){\n                        st.erase(i);\n                        i = mp[i];\n                    }\n                    else{\n                        st.erase(i);\n                        i++;\n                    }\n                }\n            }\n            ans.push_back(st.size()-1);\n            if(mp.find(it[0])!=mp.end()){\n                mp[it[0]] = max(mp[it[0]], it[1]);\n            }\n            else{\n                mp[it[0]] = it[1];\n            }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743903",
    "subm_id": "1343802296"
}