{
    "username": "jqodiriy",
    "submission": "class Solution {\npublic:\n    #define ll long long \n\n    long long dp[40][40];\n\n    ll get(ll a, ll b){\n        if(dp[a][b] !=0) return dp[a][b];\n        if(b == 0 || a == b) return 1;\n        dp[a][b] = get(a-1, b-1) + get(a-1, b);\n        return dp[a][b];\n    }\n\n\n   int waysToReachStair(int k) {\n    map <ll, ll> mp;\n\n    long long fct[20];\n\n    for(int i=0; i < 31; i ++){\n        for(int j=0; j <= i + 1; j ++) {\n            int x = (1 << i) - 1;\n            x -= j;\n            if (mp.count(x) > 0)\n                mp[x] += get(i+1, j);\n            else {\n                mp[x] = get(i+1, j);\n            }\n        }\n    }\n    return mp[k-1];\n\n}\n};",
    "submit_ts": "1716089049",
    "subm_id": "1261831577"
}