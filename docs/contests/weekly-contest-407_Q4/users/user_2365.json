{
    "username": "himanshu2207",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int n = nums.length;\n        int[] diff = new int[n];\n        for(int i=0;i<n;i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        int prev = diff[0];\n        long cnt = 1;\n        int d = 0;\n        boolean isP = diff[0] >= 0;\n        for(int i=1;i<n;i++) {\n            if(prev == diff[i]) {\n                cnt++;\n            }\n            else {\n                ans += Math.abs(prev-d);\n                if((isP == (diff[i]>=0)) && Math.abs(diff[i]) < Math.abs(prev) )\n                    d = diff[i];\n                else if(isP == (diff[i]>=0)) {\n                    d += prev-d;\n                }\n                else {\n                    d = 0;\n                    isP = diff[i]>=0;\n                }\n                cnt = 1;\n            }\n            prev = diff[i];\n        }\n        ans += Math.abs(prev-d);\n        return ans;\n    }\n}",
    "submit_ts": "1721534289",
    "subm_id": "1328027594"
}