{
    "username": "gradesking",
    "submission": "const int N = 50100 * 4;\n\nint L[N], R[N], big[N], tag[N];\n\nvoid build_tree(int p, int l, int r)\n{\n    L[p] = l;\n    R[p] = r;\n    tag[p] = 0;\n    if(l==r)\n    {\n        big[p] = l;\n        return;\n    }\n    int mid = (l+r)/2;\n    build_tree(2*p, l, mid);\n    build_tree(2*p+1, mid+1, r);\n    big[p] = max(big[2*p], big[2*p+1]);\n}\n\nvoid tag_down(int p)\n{\n    if(L[p]==R[p]) return;\n    if(tag[p]==0) return;\n    \n    big[2*p] += tag[p];\n    tag[2*p] += tag[p];\n    \n    big[2*p+1] += tag[p];\n    tag[2*p+1] += tag[p];\n    \n    tag[p] = 0;\n}\n\nvoid change(int p, int l, int r, int x)\n{\n    if(l>r) return;\n    // cout<<L[p]<<\" \"<<R[p] << \" \"<<l<<\" \"<<r<<endl;\n    tag_down(p);\n    if(L[p]==l && R[p]==r)\n    {\n        big[p] += x;\n        tag[p] += x;\n        return;\n    }\n    int mid = (L[p] + R[p]) / 2;\n    if(r<=mid) change(2*p, l, r, x);\n    else if(l>mid) change(2*p+1, l, r, x);\n    else\n    {\n        change(2*p, l, mid, x);\n        change(2*p+1, mid+1, r, x);\n    }\n    big[p] = max(big[2*p], big[2*p+1]);\n}\n\nint get(int p, int l, int r)\n{\n    tag_down(p);\n    if(L[p]==l && R[p]==r) return big[p];\n    \n    int mid = (L[p] + R[p]) / 2;\n    if(r<=mid) return get(2*p, l, r);\n    if(l>mid) return get(2*p+1, l, r);\n    return max(get(2*p, l, mid), get(2*p+1, mid+1, r));\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = queries.size();\n        \n        build_tree(1, 1, min(50000, 3*n)+1);\n        \n        // vector<int> v = {0, min(50000, 3*n)+1};\n        set<int> st;\n        st.insert(0);\n        st.insert(min(50000, 3*n));\n        \n        vector<bool> ans;\n        \n        for(const auto& p:queries)\n        {\n            if(p[0]==1)\n            {\n                int x = p[1];\n                // int k = lower_bound(v.begin(), v.end(), x) - v.begin();\n                auto ite = st.lower_bound(x);\n                int t1 = *ite;\n                ite--;\n                int t0 = *ite;\n                // cout<<\"!!!\"<<t0<<\" \"<<t1<<endl;\n                change(1, x+1, t1, -(x-t0));\n                // v.push_back(x);\n                st.insert(x);\n            }\n            else\n            {\n                int x = p[1], sz = p[2];\n                \n//                 int b = get(1, 1, x);\n//                 cout<<x<<\" \"<<sz<<\" \"<<endl;\n//                 cout<<b<<endl;\n                \n//                 for(int i=1;i<=x;++i) cout<<get(1,i,i)<<\" \";\n//                 cout<<endl;\n                \n                ans.push_back(get(1, 1, x) >= sz);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716649846.0
}