{
    "username": "himanshu_138",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define fast_io ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define setup fast_io; freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout)\n#define ll long long\n#define pqmin priority_queue<int, vector<int>, greater<int>>\n#define pqmax priority_queue<int>\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\n#define vi vector<int>\n#define vll vector<long long>\n#define all(v) v.begin(), v.end()\n#define rall(v) v.rbegin(), v.rend()\n#define rep(i, a, b) for (int i = a; i < b; ++i)\n#define per(i, a, b) for (int i = a; i > b; --i)\n#define repk(i, a, b, k) for (int i = a; i < b; i += k)\n#define perk(i, a, b, k) for (int i = a; i > b; i -= k)\n#define repl(i, a, b) for (ll i = a; i < b; ++i)\n#define perl(i, a, b) for (ll i = a; i > b; --i)\n#define repkl(i, a, b, k) for (ll i = a; i < b; i += k)\n#define perkl(i, a, b, k) for (ll i = a; i > b; i -= k)\n#define rvi(v)( rep(i, 0, v.size()) cin >> v[i])\n#define rvl(v)(repl(i, 0, v.size()) cin >> v[i])\n#define debug(x) cout << x << '\\n';\n#define debug_vec(v) do {for(auto x : v) cout << x << ' ';} while(0)\n#define debug_pair(p) cout<< p.F << \" \" << p.S << \"\\n\";\n#define lcm(a, b) ((a) / __gcd(a, b) * (b))\n#define sq(x) ((x) * (x))\n#define inf (int)1e9\n#define linf (ll)1e18\n#define mini(a, b) ((a) < (b) ? (a) : (b))\n#define maxi(a, b) ((a) > (b) ? (a) : (b))\n#define bitcount(x) __builtin_popcount(x)\n#define bitcountll(x) __builtin_popcountll(x)\n#define bitscan(x) __builtin_ctz(x)\n#define bitscanll(x) __builtin_ctzll(x)\n#define bitscanrev(x) __builtin_clz(x)\n#define bitscanrevll(x) __builtin_clzll(x)\n#define sum(v) accumulate(all(v), 0LL)\n#define average(v) (sum(v) / v.size())\n#define range(i, n) iota(i.begin(), i.end(), n)\n#define FIB(i) static_cast<int>((pow(1 + sqrt(5), (i)) - pow(1 - sqrt(5), (i))) / (pow(2, (i)) * sqrt(5)))\ntypedef int chutiye;\ntypedef vector<int> kuse;\n\nclass Solution {\npublic:\n    chutiye numberOfAlternatingGroups(kuse& gore, chutiye kitna) {\n        chutiye n = gore.size();\n        chutiye fudu = 0;\n\n        if (kitna == 1) {\n            return n;\n        }\n\n        auto dekhke = [&](chutiye lode) {\n            return lode >= n ? lode - n :lode;\n        };\n\n\n        auto fuda = [&](chutiye chut1, chutiye chut2) {\n            return gore[chut1] != gore[chut2];\n        };\n\n        chutiye lamba = 1;\n        rep(j,1,n+kitna-1){\n            chutiye fudi = dekhke(j);\n            chutiye bund = dekhke(j - 1);\n\n            if (fuda(fudi, bund)) {\n                ++lamba;\n            } else {\n                lamba = 1;\n            }\n            if (lamba >= kitna) {\n                ++fudu;\n            }\n        }\n\n        return fudu;\n    }\n};\n",
    "submit_ts": "1720281505",
    "subm_id": "1311827614"
}