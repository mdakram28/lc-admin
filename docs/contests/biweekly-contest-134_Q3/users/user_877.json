{
    "username": "abhash_18",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(vector<int>& col, int k) { \n        int n = col.size(); \n        int cnt = 0; \n        int alterLenght = 1; \n \n        if (k == 1) return n;\n       \n\n        int i = 1; \n        while (i < n + k - 1) { \n            int curr = i; \n            int prev = i - 1; \n \n            if (curr >= n) { \n                curr -= n; \n            } \n            if (prev >= n) { \n                prev -= n; \n            } \n \n            if (col[curr] != col[prev]) { \n                ++alterLenght; \n            } else { \n                alterLenght = 1; \n            } \n \n        \n            if (alterLenght >= k) { \n                ++cnt; \n            } \n \n            ++i; \n        } \n \n        return cnt; \n    } \n};",
    "submit_ts": "1720279656",
    "subm_id": "1311759933"
}