{
    "username": "Nerond",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        \n        unordered_map < int, int> same[60];\n        \n        int dp[5010][60] = {1};\n        \n        int others[60] = {1};\n        \n        int ans = 1;\n        for(int i = 0;i <= k;i ++){\n            same[i][nums[0]] = 1;\n            others[i] = 1;\n        }\n        \n        for(int i = 1;i < nums.size();i ++){\n            \n            for(int j = k;j >= 0;j --){\n                \n                dp[i][j] = (j > 0) ? dp[i][j - 1] : 1;\n                \n                \n                int val = same[j][nums[i]];\n                if(j > 0 && others[j - 1] > val)\n                    val = others[j - 1];\n                          \n                dp[i][j] = max(dp[i][j], val + 1);\n                \n                same[j][nums[i]] = max(dp[i][j], same[j][nums[i]]);\n                others[j] = max(others[j], dp[i][j]);\n                // cout << dp[i][j] << ' ';\n            }\n            // cout << endl;\n        }\n        \n        for(int i = 0;i < nums.size();i ++){\n            ans = max(ans, dp[i][k]);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1717861255",
    "subm_id": "1281784914"
}