{
    "username": "itsluminous",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        var n = target.length();\n        var hm = new HashMap<String, Integer>();\n\n        var dp = new int[n+1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        var trie = new Trie();\n        for (var i=0; i < words.length; i++){\n            if(!hm.containsKey(words[i])){\n                trie.insert(words[i], i);\n                hm.put(words[i], costs[i]);\n            }   \n            else if(hm.get(words[i]) > costs[i]){\n                trie.insert(words[i], i);\n                hm.put(words[i], costs[i]);\n            }\n        }\n            \n\n        for(var i=0; i<n; i++){\n            if(dp[i] == Integer.MAX_VALUE) continue;\n\n            var root = trie.root;\n            for(var j=i; j<n; j++){\n                root = root.children.get(target.charAt(j));\n                if(root == null) break;\n                \n                if(root.index != -1) {\n                    var wIdx = root.index;\n                    dp[j+1] = Math.min(dp[j+1], dp[i] + costs[wIdx]);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n\n    public class TrieNode {\n        Map<Character, TrieNode> children = new HashMap<>();\n        int index = -1;\n    }\n\n    public class Trie {\n        public TrieNode root = new TrieNode();\n\n        void insert(String word, int index) {\n            TrieNode node = root;\n            for (var ch : word.toCharArray()) \n                node = node.children.computeIfAbsent(ch, k -> new TrieNode());\n            node.index = index;\n        }\n    }\n}",
    "submit_ts": "1720323079",
    "subm_id": "1312366793"
}