{
    "username": "LvMycNoS7n",
    "submission": "def find(points):\n    a = c = 10 ** 18\n    b = d = -10 ** 18\n    for x,y in points:\n        a = min(x + y, a)\n        b = max(x + y, b)\n        c = min(x - y, c)\n        d = max(x - y, d)\n    ans = -1\n    choose = -1\n    for i, (x,y) in enumerate(points):\n        dis = max(x + y - a, b - x - y, x - y - c, d - x + y)\n        if dis > ans: \n            ans = dis\n            choose = i\n    return ans, choose\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        mx, c1 = find(points)\n        for i, (x,y) in enumerate(points):\n            if abs(x - points[c1][0]) + abs(y - points[c1][1]) == mx:\n                c2 = i\n                break\n        a, _ = find(points[:c1] + points[c1 + 1:])\n        b, _ = find(points[:c2] + points[c2 + 1:])\n        return min(a, b)\n            "
}