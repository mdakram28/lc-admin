{
    "username": "user9584X",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        flips = 0\n        # row pallindromic\n        row_mid = n//2\n        col_mid = m//2\n        for i in range(row_mid):\n            for j in range(col_mid):\n                val = grid[i][j] + grid[i][m-j-1] + grid[n-i-1][j] + grid[n-i-1][m-j-1]\n                flips += min(val, 4-val)\n        \n        if m%2 and n%2 and grid[row_mid][col_mid]:\n            flips+=1\n        \n        rows_1 = 0\n        row_flips = 0\n        if n%2:\n            for i in range(col_mid):\n                if grid[row_mid][i] != grid[row_mid][m-1-i]:\n                    row_flips+=1\n                elif grid[row_mid][i] ==1:\n                    rows_1+=2\n        col_1 = 0\n        col_flips = 0\n        if m%2:\n            for i in range(row_mid):\n                if grid[i][col_mid] != grid[n-i-1][col_mid]:\n                    col_flips+=1\n                elif grid[i][col_mid] ==1:\n                    col_1+=2\n\n        if (rows_1 + col_1)%4 and col_flips == 0 and row_flips == 0:\n            flips+=2\n        \n        return flips + row_flips+ col_flips\n\n\n        # for i in range(m):\n        #     mid = n//2\n        #     for j in range(mid,n):\n        #         if grid[j][i] != grid[n-1-j][i]:\n        #             column_flips+=1\n        \n        ",
    "submit_ts": "1722698987",
    "subm_id": "1343198045"
}