{
    "username": "KomalPal",
    "submission": "class Solution {\npublic:\n\n\n\n    int minimumDistance(vector<vector<int>>& a) {\n     //  max ( (max(xi+yi)-min(xi+yi)), (max(xi-yi) - min(xi-yi)) ) \n        map<int,int>mp, mp2;\n        int n=a.size();\n        for(int i=0;i<n;i++)\n        {\n            int x=a[i][0];\n            int y=a[i][1];\n            mp[i]=(x+y);\n            mp2[i]=(x-y);\n        }\n        set<pair<int,int>>points, npoints;\n        for(int i=0;i<n;i++)\n        {\n            int x=a[i][0];\n            int y=a[i][1];\n            \n            points.insert({x+y, i});\n            npoints.insert({x-y, i});\n        }\n        int ans=INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            int x=mp[i];\n            int y=mp2[i];\n            pair<int,int>torem={x, i};\n            pair<int,int>nrem={y, i};\n            \n            points.erase(torem);\n            npoints.erase(nrem);\n           // max ( (max(xi+yi)-min(xi+yi)), (max(xi-yi) - min(xi-yi)) ) \n            pair<int,int> mx1=*points.rbegin();\n            pair<int,int> mn1=*points.begin();\n            \n            pair<int,int>mx2=*npoints.rbegin();\n            pair<int,int>mn2=*npoints.begin();\n            \n            int val = max(mx1.first-mn1.first, mx2.first- mn2.first);\n            ans=min(ans, val);\n            points.insert(torem);\n            npoints.insert(nrem);\n        }\n        return ans;\n        \n    }\n};"
}