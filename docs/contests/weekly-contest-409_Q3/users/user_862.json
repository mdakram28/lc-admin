{
    "username": "ten-s8",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int qs = queries.size();\n        vector<int> road(n, 0), res;\n        for (int i = 0; i < n; i++) road[i] = i;\n        for (auto q : queries) {\n            int s = q[0], d = q[1];\n            auto it1 = lower_bound(road.begin(), road.end(), s);\n            auto it2 = lower_bound(road.begin(), road.end(), d);\n            // cout << (*it1) << \" \" << (*it2) << endl;\n            if (it1 != road.end() && it2 != road.end() && (*it1) == s && (*it2) == d) {\n                road.erase(it1+1, it2);\n            }\n            // for (int j = 0; j < road.size(); j++) cout << road[j] << \" \";\n            // cout << endl;\n            res.push_back(road.size() - 1);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722742463",
    "subm_id": "552344797"
}