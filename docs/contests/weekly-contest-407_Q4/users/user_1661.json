{
    "username": "dmitry-shulaykin",
    "submission": "impl Solution {\n    pub fn dpos(arr: &mut [i32]) -> i64 {\n        // println!(\"dpos: {:#?}\", arr);\n        let mut min = i32::MAX;\n\n        for i in 0..arr.len() {\n            let x = arr[i];\n            min = min.min(x);\n        }\n\n        for i in 0..arr.len() {\n            arr[i] -= min;\n        }\n\n        min as i64\n    }\n\n    pub fn dneg(arr: &mut [i32]) -> i64 {\n        // println!(\"dneg: {:#?}\", arr);\n        let mut max = i32::MIN;\n\n        for i in 0..arr.len() {\n            let x = arr[i];\n            max = max.max(x);\n        }\n\n        for i in 0..arr.len() {\n            arr[i] += max.abs();\n        }\n\n        max.abs() as i64\n    }\n\n    pub fn t(x: i32) -> i32 {\n        if x > 0 {\n            return 1; \n        } else if x < 0 {\n            return 2;\n        } else {\n            return 3;\n        }\n\n\n    }\n\n    pub fn minimum_operations(nums: Vec<i32>, target: Vec<i32>) -> i64 {\n        let mut diff = vec![0; nums.len()];\n\n        for i in 0..nums.len() {\n            diff[i] = target[i] - nums[i];\n        }\n\n        let mut counter = 0;\n\n        loop {\n            let mut changed = false;\n            let mut start = 0;\n            let mut prev = 3;\n\n            for i in 0..diff.len() {\n                let cur = Self::t(diff[i]);\n        \n                // println!(\"i: {i}, prev: {prev}, cur: {cur}\");\n\n                if prev == cur {\n                    continue;\n                }\n        \n                if prev == 1 {\n                    counter += Self::dpos(&mut diff[start..i]);\n                    changed = true;\n                    // println!(\"{:#?}\", diff);\n                } else if prev == 2 {\n                    counter += Self::dneg(&mut diff[start..i]);\n                    changed = true;\n                    // println!(\"{:#?}\", diff);\n                }\n        \n                start = i;\n                prev = cur;\n            }\n\n            let n = diff.len();\n            if prev == 1 {\n                counter += Self::dpos(&mut diff[start..n]);\n                changed = true;\n                // println!(\"{:#?}\", diff);\n            } else if prev == 2 {\n                counter += Self::dneg(&mut diff[start..n]);\n                changed = true;\n                // println!(\"{:#?}\", diff);\n            }\n\n            if !changed {\n                break;\n            }\n        }\n        \n\n        counter\n    }\n}",
    "submit_ts": "1721533440",
    "subm_id": "1328009004"
}