{
    "username": "12121-b",
    "submission": "const int N = 100010;\nint p[N], sz[N];\n\nclass Solution {\npublic:\n    int maxOperations(string s) {\n        int n = s.size();\n        memset(p, 0, sizeof(p));\n        memset(sz, 0, sizeof(sz));\n        for(int i = 0; i < n; i++) {\n            p[i] = i;\n            sz[i] = 1;\n        }\n        for(int i = 0; i < n; i++) {\n            if(s[i] == '1' && i + 1 < n && s[i + 1] == '1') {\n                merge(i, i + 1);\n            }\n        }\n        int res = 0, acc = 0;\n        for(int i = 0; i < n;) {\n            if(s[i] == '1') {\n                if(find(i) != n - 1) {\n                    acc += sz[find(i)];\n                    res += acc;\n                }\n                i = find(i) + 1;\n            }else {\n                i++;\n            }\n        }\n        return res;\n    }\n\n    int find(int x) {\n        return x == p[x]? x: p[x] = find(p[x]);\n    }\n\n    void merge(int x, int y) {\n        int rx = find(x), ry = find(y);\n        if(rx != ry) {\n            sz[ry] += sz[rx];\n            p[rx] = ry;\n        }\n    }\n};",
    "submit_ts": "1721530864",
    "subm_id": "548381526"
}