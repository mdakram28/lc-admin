{
    "username": "VinnyOnLC",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        StringBuilder sb = new StringBuilder();\n        if (k == 1 || k == 3 || k == 9) {\n            for (int i = 0; i < n; i++) {\n                sb.append('9');\n            }\n            return sb.toString();\n        } else if (k == 2) {\n            if (n == 1) return \"8\";\n            sb.append(\"8\");\n            for (int i = 0; i < n-2; i++) {\n                sb.append(\"9\");\n            }\n            sb.append(\"8\");\n            return sb.toString();\n        } else if (k == 4) {\n            if (n == 1) return \"8\";\n            if (n == 2) return \"88\";\n            if (n == 3) return \"888\";\n            sb.append(\"88\");\n            for (int i = 0; i < n-4; i++) {\n                sb.append(\"9\");\n            }\n            sb.append(\"88\");\n            return sb.toString();\n        } else if (k == 5) {\n            if (n == 1) return \"5\";\n            sb.append(\"5\");\n            for (int i = 0; i < n-2; i++) {\n                sb.append(\"9\");\n            }\n            sb.append(\"5\");\n            return sb.toString();\n        } else if (k == 6) {\n            if (n == 1) return \"6\";\n            if (n == 2) return \"66\";\n\n            if (n % 2 == 1) {\n                sb.append(\"8\");\n                for (int i = 1; i < n-1; i++) {\n                    if (i == n / 2) {\n                        sb.append(\"8\");\n                    } else {\n                        sb.append(\"9\");\n                    }\n                }\n                sb.append(\"8\");\n                return sb.toString();\n            } else {\n                sb.append(\"8\");\n                for (int i = 1; i < n-1; i++) {\n                    if (i == n / 2 - 1 || i == n/2) {\n                        sb.append(\"7\");\n                    } else {\n                        sb.append(\"9\");\n                    }\n                }\n                sb.append(\"8\");\n                return sb.toString();\n            }\n        } else if (k == 7)  {\n            if (n == 1) return \"7\";\n            if (n == 2) return \"77\";\n\n            int[] powMod7 = {1, 3, 2, 6, 4, 5}; // strange it cycles every 6 powers\n            if (n % 2 == 1) {\n                int extra = n % 6;\n                int x = 0;\n                for (int i = 0; i < extra; i++) {\n                    x += powMod7[i];\n                }\n                x *= 9;\n\n                x -= 9 * powMod7[((n/2) % 6)];\n\n                // System.out.println(x);\n\n                int m = 0;\n                int digit = 0;\n                while ((x + m) % 7 != 0) {\n                    m += powMod7[((n/2) % 6)];\n                    // System.out.println(\"m: \" + m);\n                    digit++;\n                }\n                \n                if (digit < 3) digit += 7;\n\n                for (int i = 0; i < n; i++) {\n                    if (i == n/2) {\n                        sb.append(digit);\n                    } else {\n                        sb.append(\"9\");\n                    }\n                }\n\n            } else {\n                \n                int extra = n % 6;\n                int x = 0;\n                for (int i = 0; i < extra; i++) {\n                    x += powMod7[i];\n                }\n                x *= 9;\n\n                x -= 9 * powMod7[((n/2) % 6)];\n                x -= 9 * powMod7[((n/2 - 1) % 6)];\n                \n                int m = 0;\n                int digit = 0;\n                while ((x + m) % 7 != 0) {\n                    m += powMod7[((n/2) % 6)];\n                    m += powMod7[((n/2 - 1) % 6)];\n                    digit++;\n                }\n\n                if (digit < 3) digit += 7;\n\n                for (int i = 0; i < n; i++) {\n                    if (i == n/2 || i == n/2 - 1) {\n                        sb.append(digit);\n                    } else {\n                        sb.append(\"9\");\n                    }\n                }\n            }\n            return sb.toString();\n        } else if (k == 8) {\n            if (n < 6) {\n                for (int i = 0; i < n; i++) {\n                    sb.append(\"8\");\n                }\n                return sb.toString();\n            }\n\n            sb.append(\"888\");\n            for (int i = 0; i < n-6; i++) {\n                sb.append(\"9\");\n            }\n            sb.append(\"888\");\n            return sb.toString();\n        }\n\n        return \"error\"; // should never get here\n    }\n}\n\n// largest palindrome with n digits that is divisible by k?",
    "submit_ts": "1723953384",
    "subm_id": "1359819839"
}