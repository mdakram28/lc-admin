{
    "username": "Lozakaka",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        long horizontalCuts = 1;\n        long verticalCuts = 1;\n        long totalCost = 0;\n        \n        int i = horizontalCut.length - 1;\n        int j = verticalCut.length - 1;\n        \n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += (long) horizontalCut[i] * verticalCuts;\n                horizontalCuts++;\n                i--;\n            } else {\n                totalCost += (long) verticalCut[j] * horizontalCuts;\n                verticalCuts++;\n                j--;\n            }\n        }\n        \n        while (i >= 0) {\n            totalCost += (long) horizontalCut[i] * verticalCuts;\n            i--;\n        }\n        \n        while (j >= 0) {\n            totalCost += (long) verticalCut[j] * horizontalCuts;\n            j--;\n        }\n        \n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720925932",
    "subm_id": "1320270779"
}