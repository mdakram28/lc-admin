{
    "username": "profchi",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        \n        BIT bit = new BIT(nums.length + 5);\n        \n        boolean [] isPeak = new boolean [nums.length];\n        \n        for (int i = 1; i < nums.length - 1; ++i) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                bit.update(i + 2, 1);\n                isPeak[i] = true;\n            }\n        }\n        \n        \n        List<Integer> results = new ArrayList<>();\n        \n        int l, r, idx, val;\n        for (int [] query : queries) {\n            \n            if (query[0] == 1) {\n                l = query[1];\n                r = query[2];\n                \n                if (r - l < 2) {\n                    results.add(0);\n                    continue;\n                }\n                \n                long result = bit.get(l + 3);\n                result -= bit.get(r + 2);\n                \n                results.add((int)result);\n            }else {\n                idx = query[1];\n                val = query[2];\n                \n                for (int i = idx - 1; i <= idx + 1; ++i) {\n                    if (i >= 0 && i < nums.length && isPeak[i]) {\n                        bit.update(i + 2, -1);\n                        isPeak[i] = false;\n                    }\n                }\n                \n                nums[idx] = val;\n                \n                for (int i = idx - 1; i <= idx + 1; ++i) {\n                    if (i > 0 && i < nums.length - 1) {\n                        if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                            bit.update(i + 2, 1);\n                            isPeak[i] = true;\n                        }\n                    }\n                }\n            }\n        }\n        \n        \n        return results;\n    }\n}\n\nclass BIT {\n\t\n\tlong [] arr;\n\t\n\tBIT(int n){\n\t\tarr = new long [n + 1];\n\t}\n\t\n\tvoid update (int idx, long val) {\n\t\tfor (int i = idx; i > 0; i -= (i & -i)) {\n\t\t\tarr[i] += val;\n\t\t}\n\t}\n\t\n\tlong get(int idx) {\n\t\tlong result = 0;\n\t\t\n\t\tfor (int i = idx; i < arr.length; i += (i & -i)) {\n\t\t\tresult += arr[i];\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\tlong query(int a, int b) {\n\t\treturn get(b) - get(a - 1);\n\t}\n}",
    "submit_ts": "1718506366",
    "subm_id": "1289616589"
}