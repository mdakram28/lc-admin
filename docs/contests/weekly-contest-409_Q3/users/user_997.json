{
    "username": "matiurrehman",
    "submission": "\nclass Solution {\npublic:\n    int prevMin(vector<array<vector<int>, 2>>& graph, int i, int j) {\n        int count = 0;\n        queue<int> q;\n        q.push(i);\n\n        while (!q.empty()) {\n            count++;\n            int a = q.front();\n            q.pop();\n\n            if (!graph[a][0].empty() && graph[a][0][0] == j) {\n                graph[a][0].pop_back();\n                if (!graph[j][1].empty()) {\n                    graph[j][1].pop_back();\n                }\n            } else if (!graph[a][0].empty()) {\n                int next = graph[a][0][0];\n                q.push(next);\n                if (!graph[next][1].empty()) {\n                    graph[next][1].pop_back();\n                }\n                graph[a][0].pop_back();\n            }\n        }\n\n        graph[i][0].push_back(j);\n        graph[j][1].push_back(i);\n        return count;\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<array<vector<int>, 2>> graph(n);\n        for (int i = 0; i < n - 1; ++i) {\n            graph[i][0].push_back(i + 1);\n            graph[i + 1][1].push_back(i);\n        }\n\n        int res = n - 1;\n        vector<int> answer;\n\n        for (auto& query : queries) {\n            int ui = query[0];\n            int vi = query[1];\n            if (!graph[ui][0].empty() && graph[ui][0][0] < vi && !graph[vi][1].empty() && graph[vi][1][0] > ui) {\n                int prev = prevMin(graph, ui, vi);\n                res -= prev ;\n                res++;\n            }\n            answer.push_back(res);\n        }\n\n        return answer;\n    }\n};\n",
    "submit_ts": "1722743475",
    "subm_id": "1343792740"
}