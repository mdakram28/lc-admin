{
    "username": "\u6063\u7762",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = -3e9;\n        int num = 0;\n        int r = board.size(), c = board[0].size();\n        struct node {\n            long long u;\n            int v, w;\n        };\n        vector<node> vec;\n        int loc[c];\n        for (int i = 0; i < r; ++ i) {\n            for (int j = 0; j < c; ++ j) {\n                loc[j] = j;\n            }\n            sort(loc, loc + c, [&](int &x, int &y) {\n                return board[i][x] > board[i][y];\n            });\n            for (int j = 0; j < c; ++ j) {\n                vec.emplace_back(node(board[i][loc[j]], i, loc[j]));\n            }\n        }\n        sort(vec.begin(), vec.end(), [](node &v1, node &v2) {\n            return v1.u > v2.u;\n        });\n        int m = vec.size();\n        m = min(m, 81);\n        for (int i = 0; i < m; ++ i) {\n            for (int j = i + 1; j < m; ++ j) {\n                if (vec[i].v == vec[j].v || vec[i].w == vec[j].w) continue;\n                for (int k = j + 1; k < m; ++ k) {\n                    if (vec[i].v == vec[k].v || vec[j].v == vec[k].v || vec[j].w == vec[k].w || vec[i].w == vec[k].w) continue;\n                    ans = max(ans, vec[i].u + vec[j].u + vec[k].u);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910324",
    "subm_id": "556340738"
}