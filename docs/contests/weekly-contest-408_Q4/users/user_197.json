{
    "username": "horiseun",
    "submission": "class Solution {\npublic:\n  vector<vector<int>> adj;\n  vector<bool> seen;\n  \n  void dfs(int curr) {\n    seen[curr] = true;\n    for (int i : adj[curr]) {\n      if (!seen[i]) {\n        dfs(i);\n      }\n    }\n  }\n  \n  bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n    adj = vector<vector<int>>(circles.size() + 5, vector<int>(0));\n    seen = vector<bool>(circles.size() + 5, false);\n    for (int i = 0; i < circles.size(); i++) {\n      for (int j = i + 1; j < circles.size(); j++) {\n        if ((long long) (circles[i][0] - circles[j][0]) * (long long) (circles[i][0] - circles[j][0]) + (long long) (circles[i][1] - circles[j][1]) * (long long) (circles[i][1] - circles[j][1]) <= (long long) (circles[i][2] + circles[j][2]) * (long long) (circles[i][2] + circles[j][2])) {\n          adj[i].push_back(j);\n          adj[j].push_back(i);\n        }\n      }\n    }\n    for (int i = 0; i < circles.size(); i++) {\n      if (circles[i][0] <= circles[i][2]) {\n        adj[circles.size()].push_back(i);\n        adj[i].push_back(circles.size());\n      }\n      if (circles[i][1] <= circles[i][2]) {\n        adj[circles.size() + 1].push_back(i);\n        adj[i].push_back(circles.size() + 1);\n      }\n      if (X - circles[i][0] <= circles[i][2]) {\n        adj[circles.size() + 2].push_back(i);\n        adj[i].push_back(circles.size() + 2);\n      }\n      if (Y - circles[i][1] <= circles[i][2]) {\n        adj[circles.size() + 3].push_back(i);\n        adj[i].push_back(circles.size() + 3);\n      }\n    }\n    dfs(circles.size());\n    dfs(circles.size() + 3);\n    if (seen[circles.size() + 1] || seen[circles.size() + 2]) {\n      return false;\n    }\n    return true;\n  }\n};",
    "submit_ts": "1722135359",
    "subm_id": "1335699073"
}