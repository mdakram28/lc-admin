{
    "username": "Harshit_J12",
    "submission": "typedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\n#define loop(i,a,b) for(ll i = a; i<=b ; i++)\n#define loop0(i,a,b) for(ll i = a; i<=b ; )\n#define revloop(i,a,b) for(ll i = a; i>=b ; i--)\n#define itloop(i,a,b) for(auto i = a; i != b ; i++)\n#define no cout<<\"NO\"<<endl\n#define yes cout<<\"YES\"<<endl\n#define nn <<\"\\n\"  \n#define spcl <<\" \"\n#define spc <<\" \"<<  \n#define all(x) (x).begin(), (x).end()\n#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n#define inf INT_MAX\n#define linf LONG_LONG_MAX\n\nclass Solution {\npublic:\ntemplate<typename T = ll, typename t = ll>\nstruct SegTree{\n    ll n;\n    vector<T> stree;\n    vector<t> v;\n\n    SegTree(){}\n    SegTree(vector<t> v){\n        this->v = v;\n        n = v.size();\n        stree.resize(4*n);\n        build(0 , 0 , n -1);\n    }\n\n    T inline init(t a){\n        return a;\n    }\n\n    T inline combine(T a , T b){\n        return a & b;\n    }\n    \n    void build (ll ind , ll i , ll j){\n        ll mid = (i+j)>>1;\n        if(i == j) {stree[ind] = init(v[i]); return;}\n        build(2*ind + 1 , i , mid);   \n        build(2*ind + 2 , mid + 1 , j);\n        stree[ind] =  combine(stree[2*ind + 1] , stree[2*ind + 2]);\n    }\n\n    void update(ll a , ll b){\n        update(0 , 0 , n-1 , a,  b);\n    }\n\n    void update(ll ind , ll i , ll j , ll a , t b){\n        if(i == j){stree[ind] = init(b); v[a] = b; return;}\n        ll mid = (i+j)>>1;\n        if(a<= mid){\n            update(2*ind + 1 , i , mid , a, b);\n        }\n        else update(2*ind + 2 , mid +1 , j, a, b);\n        stree[ind] = combine(stree[2*ind + 1] , stree[2*ind + 2]);\n    }\n\n    T query(ll a , ll b){\n        if(a>b) return -1;\n        if(a<0 || b>=n) return -1;\n        return query(0 , 0 , n-1 , a , b);\n    }\n\n    T query(ll ind , ll i , ll j, ll a, ll b){\n        ll mid = (i+j)>>1;\n        if(j<=b && i>=a){\n            return stree[ind];\n        }\n        if(b<=mid) {\n            return query(2*ind + 1 , i , mid , a , b);\n        }\n        else if(a> mid){\n            return query(2*ind + 2 , mid + 1 , j , a , b);\n        }\n        return combine(query(2*ind + 1 , i , mid , a , b) , query(2*ind + 2 , mid + 1 , j , a , b));\n    }\n};\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        SegTree s = SegTree(nums);\n        ll n = nums.size();\n        ll ans = 0;\n        loop(i ,0  , n-1){\n            ll l = i , r = n-1, ans1 = -1;\n            while(l<=r){\n                ll mid = (l+r)>>1;\n                if(s.query(i , mid) <= k){\n                    ans1 = mid;\n                    r = mid - 1;\n                }\n                else l = mid + 1;\n            }\n            l = i , r = n-1;\n            ll ans2 = -1;\n            while(l<=r){\n                ll mid = (l+r)>>1;\n                if(s.query(i , mid) >= k){\n                    ans2 = mid;\n                    l = mid + 1;\n                }\n                else r = mid - 1;\n            }\n            if(s.query(i , ans1) == k){\n                ans += ans2 - ans1 + 1;\n            }\n        }\n        return ans; \n    }\n\n};",
    "submit_ts": "1720279060",
    "subm_id": "1311735634"
}