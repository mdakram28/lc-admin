{
    "username": "priceless-bardeenfch",
    "submission": "/**\n * @param {number[][]} edges\n * @return {number[]}\n */\nvar timeTaken = function(edges) {\n    const n = edges.length + 1;\n    const nexts = new Array(n).fill(null).map(() => []);\n    for (const edge of edges) {\n        nexts[edge[0]].push(edge[1]);\n        nexts[edge[1]].push(edge[0]);\n    }\n    const lefts = new Array(n);\n    const rights = new Array(n);\n    const asParent = new Array(n);\n    function dfsLeft(index, parent, left) {\n        lefts[index] = left;\n        let res = 0;\n        for (const next of nexts[index]) {\n            if (next !== parent) {\n                const val = dfsLeft(next, index, res) + ((next & 1) ? 1 : 2);\n                res = Math.max(res, val);\n            }\n        }\n        asParent[index] = res;\n        return res;\n    }\n    function dfsRight(index, parent, right) {\n        rights[index] = right;\n        let res = 0;\n        for (let i = nexts[index].length - 1; i > -1; --i) {\n            const next = nexts[index][i];\n            if (next !== parent) {\n                const val = dfsRight(next, index, res) + ((next & 1) ? 1 : 2);\n                res = Math.max(res, val);\n            }\n        }\n        return res;\n    }\n    dfsLeft(0, null, 0);\n    dfsRight(0, null, 0);\n    const resAry = new Array(n);\n    resAry[0] = asParent[0];\n    for (const next of nexts[0]) {\n        dfs(next, 0, 0);\n    }\n\n    function dfs(index, parent, pVal) {\n        let math = 0;\n        if (parent !== null) {\n           math = Math.max(lefts[index], rights[index], pVal) + ((parent & 1) ? 1 : 2);\n        }\n        const res = Math.max(asParent[index], math);\n        resAry[index] = res;\n        for (const next of nexts[index]) {\n            if (next !== parent) {\n                dfs(next, index, math);\n            }\n        }\n        \n    }\n    return resAry;\n};",
    "submit_ts": "1722699918",
    "subm_id": "552277684"
}