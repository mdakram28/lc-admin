{
    "username": "pranjali_sr",
    "submission": "class Solution { \npublic: \n  int numberOfAlternatingGroups(vector<int>& colors, int k) {  \n        int l = colors.size();  \n        int res = 0;  \n  \n        if (k == 1) {  \n             \n            return l;  \n        }  \n  \n        int alternating_length = 1;  \n        int i = 1;  \n        while (i < l + k - 1) {  \n            int current = i;  \n            int previous = i - 1;  \n  \n            \n            if (current >= l) {  \n                current -= l;  \n            }  \n            if (previous >= l) {  \n                previous -= l;  \n            }  \n  \n            if (colors[current] != colors[previous]) {  \n                ++alternating_length;  \n            } else {  \n                alternating_length = 1;  \n            }  \n  \n             \n            if (alternating_length >= k) {  \n                ++res;  \n            }  \n  \n            ++i;  \n        }  \n  \n        return res;  \n    } \n};",
    "submit_ts": "1720280389",
    "subm_id": "1311787554"
}