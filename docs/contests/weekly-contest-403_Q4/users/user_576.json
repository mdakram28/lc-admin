{
    "username": "lowie_",
    "submission": "class Solution {\npublic:\n    vector <vector<int> > grid;\n    vector<int> minimumArea(int x, int y, int u, int v) {\n        int n = u - x + 1, m = v - y + 1;\n        if (n <= 0 || m <= 0) {\n            return {0, 0, 0, 0, 1000};\n        }\n        int minX = u + 1, minY = v + 1, maxX = x, maxY = y;\n        for (int i = x; i <= u; i++) {\n            for (int j = y; j <= v; j++) {\n                if (grid[i][j] == 0) {\n                    continue;\n                }\n                minX = min(minX, i);\n                minY = min(minY, j);\n                maxX = max(maxX, i);\n                maxY = max(maxY, j);\n            }\n        }\n        if (minX > maxX) {\n            return {0, 0, 0, 0, 1000};\n        }\n        return {minX, minY, maxX, maxY, (maxX - minX + 1) * (maxY - minY + 1)};\n    }\n\n    int minimumSum(vector<vector<int>>& grid) {\n        this->grid = grid;\n        int n = grid.size(), m = grid[0].size();\n        auto dim = minimumArea(0, 0, n - 1, m - 1);\n        int minX = dim[0], minY = dim[1], maxX = dim[2], maxY = dim[3];\n        int res = dim[4];\n        for (int i = minX; i <= maxX; i++) {\n            for (int j = minY; j <= maxY; j++) {\n                vector<int> q = {\n                    minimumArea(minX, minY, i, j)[4] + minimumArea(i + 1, minY, maxX, j)[4] + minimumArea(minX, j + 1, maxX, maxY)[4],\n                    minimumArea(minX, minY, i, j)[4] + minimumArea(minX, j + 1, i, maxY)[4] + minimumArea(i + 1, minY, maxX, maxY)[4],\n                    minimumArea(i, minY, maxX, j)[4] + minimumArea(minX, minY, i - 1, j)[4] + minimumArea(minX, j + 1, maxX, maxY)[4],\n                    minimumArea(i, minY, maxX, j)[4] + minimumArea(i, j + 1, maxX, maxY)[4] + minimumArea(minX, minY, i - 1, maxY)[4],\n                    minimumArea(i, j, maxX, maxY)[4] + minimumArea(minX, j, i - 1, maxY)[4] + minimumArea(minX, minY, maxX, j - 1)[4],\n                    minimumArea(i, j, maxX, maxY)[4] + minimumArea(i, minY, maxX, j - 1)[4] + minimumArea(minX, minY, i - 1, maxY)[4],\n                    minimumArea(minX, j, i, maxY)[4] + minimumArea(i + 1, j, maxX, maxY)[4] + minimumArea(minX, minY, maxX, j - 1)[4],\n                    minimumArea(minX, j, i, maxY)[4] + minimumArea(minX, minY, i, j - 1)[4] + minimumArea(i + 1, minY, maxX, maxY)[4],\n                };\n                for (int x: q) res = min(res, x);\n            }\n        }\n        // cross cover\n        for (int i = minX; i <= maxX; i++) {\n            for (int j = i; j <= maxX; j++) {\n                int d = minimumArea(minX, minY, i - 1, maxY)[4] + minimumArea(i, minY, j, maxY)[4] + minimumArea(j + 1, minY, maxX, maxY)[4];\n                res = min(res, d);\n            }\n        }\n        for (int i = minY; i <= maxY; i++) {\n            for (int j = i; j <= maxY; j++) {\n                int d = minimumArea(minX, minY, maxX, i - 1)[4] + minimumArea(minX, i, maxX, j)[4] + minimumArea(minX, j + 1, maxX, maxY)[4];\n                res = min(res, d);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719114924.0
}