{
    "username": "maxkvant",
    "submission": "class AndQueue:\n    def __init__(self):\n        self.stack1 = []\n        self.stack2 = []\n        self.ands1 = [0xffffffff]\n        self.ands2 = [0xffffffff]\n    \n    @staticmethod\n    def _push(stack, ands, elem):\n        and_ = ands[-1] & elem\n        stack.append(elem)\n        ands.append(and_)\n    \n    def push(self, elem):\n        AndQueue._push(self.stack1, self.ands1, elem)\n\n    def clear(self):\n        self.stack1 = []\n        self.stack2 = []\n        self.ands1 = [0xffffffff]\n        self.ands2 = [0xffffffff]\n\n    def size(self):\n        return len(self.stack1) + len(self.stack2)\n    \n    def get_and(self):\n        return self.ands1[-1] & self.ands2[-1]\n\n    def pop(self):\n        assert self.size() > 0\n        if not self.stack2:\n            for elem in reversed(self.stack1):\n                AndQueue._push(self.stack2, self.ands2, elem)\n            self.stack1 = []\n            self.ands1 = [0xffffffff]\n        self.ands2.pop()\n        return self.stack2.pop()\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        ans = 0\n        q_min = AndQueue()\n        q_max = AndQueue()\n        r_min = 0\n        r_max = 0\n        for i in range(n):\n            if r_min < i:\n                r_min = i \n                q_min.clear()\n            if r_max < i:\n                r_max = i\n                q_max.clear()\n            while r_min < n and (q_min.get_and() & nums[r_min]) > k and (q_min.get_and() & nums[r_min] & k) >= k:\n                q_min.push(nums[r_min])\n                r_min += 1\n            while r_max < n and (q_max.get_and() & nums[r_max]) >= k and (q_max.get_and() & nums[r_max] & k) >= k:\n                q_max.push(nums[r_max])\n                r_max += 1\n            ans += r_max - r_min\n            if q_min.size() > 0:\n                q_min.pop()\n            if q_max.size() > 0:\n                q_max.pop()\n        return ans\n",
    "submit_ts": "1720280475",
    "subm_id": "1311790784"
}