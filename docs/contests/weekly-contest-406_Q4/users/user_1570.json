{
    "username": "shan-yang-xian-sheng",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> v;\n        for (int i = 0; i < horizontalCut.size(); i ++) {\n            v.push_back({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.size(); i ++) {\n            v.push_back({verticalCut[i], 1});\n        }\n        sort(v.begin(), v.end(), [&](pair<int, int> x, pair<int, int> y){\n            return x.first > y.first;\n        });\n        long long ans = 0;\n        long long x = 1, y = 1;\n        for (int i = 0; i < v.size(); i ++) {\n            if (v[i].second == 0) {\n                ans += v[i].first * y;\n                x ++;\n            } else {\n                ans += v[i].first * x;\n                y ++;\n            }\n        }\n            \n        return ans;\n    }\n};",
    "submit_ts": "1720926334",
    "subm_id": "546445593"
}