{
    "username": "mthirumalai2905",
    "submission": "import java.util.*;\n\npublic class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        List<Integer> list = new ArrayList<>();\n        int n = nums.length;\n\n        for (int i = 0; i < n / 2; i++) {\n            int a = nums[i];\n            int b = nums[n - i - 1];\n            int diff = Math.abs(a - b);\n            int X = Math.max(a, Math.max(b, Math.max(k - a, k - b)));\n            map.computeIfAbsent(diff, key -> new ArrayList<>()).add(X);\n            list.add(X);\n        }\n\n        int ans = n;\n        Collections.sort(list);\n\n        for (Map.Entry<Integer, List<Integer>> entry : map.entrySet()) {\n            int diff = entry.getKey();\n            List<Integer> values = entry.getValue();\n            int T = Collections.binarySearch(list, diff);\n            if (T < 0) {\n                T = -T - 1;\n            } else {\n                while (T > 0 && list.get(T - 1) == diff) {\n                    T--;\n                }\n            }\n            T = T * 2 + (n / 2 - T);\n\n            for (int X : values) {\n                if (X < diff) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n\n            ans = Math.min(ans, T);\n        }\n\n        return ans;\n    }\n}\n",
    "submit_ts": "1721488555",
    "subm_id": "1327425938"
}