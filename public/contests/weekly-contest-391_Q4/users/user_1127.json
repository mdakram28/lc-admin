{
    "username": "Mikazuki4712",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int> pos, neg;\n        for (int i = 0; i < n; ++i) {\n              pos.insert(points[i][0] + points[i][1]);\n              neg.insert(points[i][0] - points[i][1]);\n        }\n\n        int res = INT_MAX;\n        for (const vector<int> point: points) {\n              int add = point[0] + point[1];\n              int minus = point[0] - point[1];\n\n              auto it = pos.find(add);\n              pos.erase(it);\n              it = neg.find(minus);\n              neg.erase(it);\n\n              int maxAdd = *pos.rbegin();\n              int minAdd = *pos.begin();\n\n              int maxMinus = *neg.rbegin();\n              int minMinus = *neg.begin();\n\n              int tmp = max(maxAdd - minAdd, maxMinus - minMinus);\n              res = min(res, tmp);\n\n              pos.insert(add);\n              neg.insert(minus);\n        }\n\n        return res;\n     }\n};"
}