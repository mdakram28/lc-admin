{
    "username": "GOBBURI SHIVA",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        // Step 1: Identify the top 3 maximum values in each row along with their column indices\n        vector<vector<pair<long long, int>>> topValues(m);\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> rowValues;\n            for (int j = 0; j < n; ++j) {\n                rowValues.emplace_back(board[i][j], j);\n            }\n            sort(rowValues.rbegin(), rowValues.rend());\n            topValues[i] = vector<pair<long long, int>>(rowValues.begin(), rowValues.begin() + min(3, n));\n        }\n\n        // Step 2: Try all combinations of selecting top values from three different rows\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (auto& v1 : topValues[r1]) {\n                        for (auto& v2 : topValues[r2]) {\n                            if (v2.second == v1.second) continue;\n                            for (auto& v3 : topValues[r3]) {\n                                if (v3.second == v1.second || v3.second == v2.second) continue;\n                                \n                                long long currentSum = v1.first + v2.first + v3.first;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910064",
    "subm_id": "1359215974"
}