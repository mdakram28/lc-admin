{
    "username": "harshrajsrivastava03",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), ans = 0;\n        for(int i = 0; i < m / 2; i++) {\n            for(int j = 0; j < n / 2; j++) {\n                int count = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                ans += min(count, 4 - count);\n            }\n        }\n\n        int c01 = 0, c11 = 0;\n        if(m % 2) {\n            for(int j = 0; j < n / 2; j++) {\n                int count = grid[m / 2][j] + grid[m / 2][n - j - 1];\n                if(count == 2)\n                    c11++;\n                else if(count == 1)\n                    c01++;\n            }\n        }\n\n        if(n % 2) {\n            for(int i = 0; i < m / 2; i++) {\n                int count = grid[i][n / 2] + grid[m - i - 1][n / 2];\n                if(count == 2)\n                    c11++;\n                else if(count == 1)\n                    c01++;\n            }\n        }\n\n        if(m % 2 and n % 2)\n            ans += grid[m / 2][n / 2];\n\n        if(c11 % 2) {\n            if(c01)\n                ans += c01;\n            else\n                ans += 2;\n        }\n        else\n            ans += c01;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699737",
    "subm_id": "1343220771"
}