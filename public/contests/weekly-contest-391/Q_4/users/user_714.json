{
    "username": "adityachauhan2501",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int ans = INT_MAX;\n        int n = points.size();\n        multiset<int> st1;\n        multiset<int> st2;\n        \n        for(int i=0; i<points.size(); i++){\n            st1.insert(points[i][0] + points[i][1]);\n            st2.insert(points[i][0] - points[i][1]);\n            \n        }\n        \n        for(int i=0; i<n; i++){\n            st1.erase(st1.find(points[i][0] + points[i][1]));\n            st2.erase(st2.find(points[i][0] - points[i][1]));\n            \n            ans = min(ans, max(*st1.rbegin() - *st1.begin(), abs(*st2.rbegin() - *st2.begin())));\n            \n            st1.insert(points[i][0] + points[i][1]);\n            st2.insert(points[i][0] - points[i][1]);\n            \n        }\n        \n        return ans;\n    }\n};"
}