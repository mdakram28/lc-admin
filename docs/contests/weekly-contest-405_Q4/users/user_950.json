{
    "username": "franky50616",
    "submission": "class TrieNode\n{\npublic:\n    vector<TrieNode*> next;\n    bool isWord;\n    long long cost;\n\n    TrieNode() : next(26, NULL), isWord(false), cost(999999)\n    {\n\n    }\n\n    ~TrieNode()\n    {\n        //for (int i = 0; i < 26; ++i)\n        //{\n        //    if(next[i]) delete next[i];\n        //}\n    }\n};\n\nclass Trie\n{\npublic:\n    TrieNode* root;\n\n    Trie()\n    {\n        root = new TrieNode;\n    }\n\n    ~Trie()\n    {\n        dfs(root);\n    }\n\n    void dfs(TrieNode* cur)\n    {\n        for (int i = 0; i < 26; ++i)\n        {\n            if (!cur->next[i]) continue;\n            dfs(cur->next[i]);\n        }\n\n        delete cur;\n    }\n\n    void insert(string& s, long long cost)\n    {\n        TrieNode* cur = root;\n\n        for(char c : s)\n        {            \n            if (!cur->next[c - 'a']) cur->next[c - 'a'] = new TrieNode;\n            cur = cur->next[c - 'a'];\n        }\n\n        cur->isWord = true;\n        cur->cost = min(cur->cost, cost);\n    }\n};\n\nclass Solution\n{\nprivate:\n    Trie tr;\n    int dp[50001];\n\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs)\n    {\n        int n = words.size();\n        for (int i=0; i<n; ++i)\n        {\n            tr.insert(words[i], costs[i]);\n        }\n\n        memset(dp, -1, sizeof(dp));\n        int res = dfs(target, 0);\n        return res == INT_MAX ? -1 : res;\n    }\n\n    int dfs(string& target, int i)\n    {\n        int n = target.size();\n        if (i >= n) return 0;\n        if (dp[i] != -1) return dp[i];\n\n        TrieNode* cur = tr.root;\n        int res = INT_MAX;\n        for (int x = i; x < n; ++x)\n        {\n            char c = target[x];\n            if (!cur || !cur->next[c - 'a']) break;\n\n            cur = cur->next[c - 'a'];\n            if (cur->isWord)\n            {\n                int cost = dfs(target, x + 1);\n                if(cost != INT_MAX) cost += cur->cost;\n                \n                res = min(res, cost);\n            }\n        }\n\n        return dp[i] = res;\n    }\n};",
    "submit_ts": "1720323147",
    "subm_id": "1312368474"
}