{
    "username": "Usurper_29",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> extendedColors = extendColors(colors, k);\n        return countAlternatingGroups(extendedColors, k);\n    }\n\nprivate:\n    vector<int> extendColors(vector<int>& colors, int k) {\n        vector<int> extended(colors.begin(), colors.begin() + k - 1);\n        colors.insert(colors.end(), extended.begin(), extended.end());\n        return colors;\n    }\n\n    int countAlternatingGroups(vector<int>& colors, int k) {\n        int result = 0, currentGroupSize = 1;\n        for (size_t i = 1; i < colors.size(); ++i) \n        {\n            if (colors[i] != colors[i - 1]) {\n                ++currentGroupSize;\n            } else {\n                currentGroupSize = 1;\n            }\n            if (currentGroupSize >= k) {\n                ++result;\n            }\n        }\n        return result;\n    }\n};\n",
    "submit_ts": "1720279401",
    "subm_id": "1311749752"
}