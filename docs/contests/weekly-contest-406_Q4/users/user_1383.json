{
    "username": "Dipen_Aggarwal",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        h_ptr = 0\n        v_ptr = 0\n        h_pieces = 1\n        v_pieces = 1\n        total_cost = 0\n        while h_ptr < len(horizontalCut) and v_ptr < len(verticalCut):\n            if horizontalCut[h_ptr] >= verticalCut[v_ptr]:\n                total_cost += horizontalCut[h_ptr] * v_pieces\n                h_ptr += 1\n                h_pieces += 1\n            else:\n                total_cost += verticalCut[v_ptr] * h_pieces\n                v_ptr += 1\n                v_pieces += 1\n        while h_ptr < len(horizontalCut):\n            total_cost += horizontalCut[h_ptr] * v_pieces\n            h_ptr += 1\n        while v_ptr < len(verticalCut):\n            total_cost += verticalCut[v_ptr] * h_pieces\n            v_ptr += 1\n        return total_cost",
    "submit_ts": "1720925229",
    "subm_id": "1320247524"
}