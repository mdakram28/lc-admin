{
    "username": "adityaozha067",
    "submission": "#define ll long long\n\nstruct Circle\n{\n   int x , y , r;\n};\n\nstruct Dsu\n{\n   int n;\n   vector<int> par , sz;\n\n   Dsu( int n ) : n( n )\n   {\n        par.resize( n + 1 );\n        sz.assign( n + 1 , 1 );\n        for( int i = 0; i <= n; i++ ) par[i] = i;\n   }\n\n   int find( int u )\n   {\n        return par[u] = par[u] == u ? u : find( par[u] );\n   }\n\n   int size( int u )\n   {\n        return sz[find(u)];\n   }\n\n   bool same( int u , int v )\n   {\n        return find( u ) == find( v );\n   }\n\n   bool unite( int u , int v )\n   {\n        u = find( u ) , v = find( v );\n\n        if( u == v ) return false;\n        if( sz[u] < sz[v] ) swap( u , v );\n\n        sz[u] += sz[v];\n        par[v] = u;\n        return true;\n   }\n};\n\nclass Solution \n{\n    public:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& b) \n    {\n       int n =  b.size();\n        \n       vector<Circle> a( n );\n       for( int i = 0; i < n; i++ )\n       {\n           a[i].x = b[i][0] , a[i].y = b[i][1] , a[i].r = b[i][2];\n       }\n        \n        Dsu dsu( n + 4 );\n\n       // n - left\n       // n + 1 - up\n       // n + 2 - right\n       // n + 3 - down\n\n       auto isIntersecting =[&](Circle c1 , Circle c2)\n       {\n           ll dx = c1.x - c2.x , dy = c1.y - c2.y , dr = c1.r - c2.r;\n           ll tr = c1.r + c2.r , dis = dx*dx + dy*dy;\n\n           return ( dis >= 1LL * dr*dr && dis <= 1LL * tr*tr );\n       };\n\n       for( int i = 0; i < n; i++ )\n       {\n            int x = a[i].x , y = a[i].y , r = a[i].r;\n\n            if( x + r >= X ) dsu.unite( n + 2 , i );\n            if( x - r <= 0 ) dsu.unite( n , i );\n            if( y + r >= Y ) dsu.unite( n + 1 , i );\n            if( y - r <= 0 ) dsu.unite( n + 3 , i );\n\n            for( int j = i + 1; j < n; j++ )\n            {\n               if( isIntersecting(a[i] , a[j]) ) dsu.unite( i , j );\n            }\n       }\n\n       return !(dsu.same(n , n+2) || dsu.same(n , n+3) ||\n               dsu.same(n+1 , n+3) || dsu.same(n+2 , n+1));\n    }\n};",
    "submit_ts": "1722139182",
    "subm_id": "1335810328"
}