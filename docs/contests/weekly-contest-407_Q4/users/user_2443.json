{
    "username": "shubhparekh",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int i = 0;\n        long result = 0;\n        int prevOps = Math.abs(target[i] - nums[i]);\n        result += prevOps;\n        i++;\n        while(i < nums.length) {\n            int pDiff = target[i - 1] - nums[i - 1];\n            int nDiff = target[i] - nums[i];\n            if(pDiff > 0 && nDiff > 0) {\n                if(nDiff > pDiff) {\n                    result += (nDiff - pDiff);\n                }\n            } else if (pDiff < 0 && nDiff < 0) {\n                if(-nDiff > -pDiff) {\n                    result += (-nDiff - (-pDiff));\n                }\n            } else {\n                result += Math.abs(nDiff);\n            }\n            i++;\n        }\n        return result;\n    }\n}",
    "submit_ts": "1721534070",
    "subm_id": "1328022841"
}