{
    "username": "sweet-gouldild",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, int>> pq;\n        for(int i = 0; i < m - 1; i++){\n            pq.push({horizontalCut[i], 0});\n        }\n        for(int i = 0; i < n - 1; i++){\n            pq.push({verticalCut[i], 1});\n        }\n        int cnt0 = 0, cnt1 = 0;\n        long long ans = 0;\n        while(!pq.empty()){\n            auto [w, i] = pq.top();\n            pq.pop();\n            if(i == 0){\n                ans += w * (cnt1 + 1);\n                cnt0++;\n            }else{\n                ans += w * (cnt0 + 1);\n                cnt1++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926375",
    "subm_id": "546445841"
}