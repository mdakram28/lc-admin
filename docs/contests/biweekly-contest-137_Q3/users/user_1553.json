{
    "username": "Dhrishita",
    "submission": "from typing import List\nimport itertools\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        max_sum = float('-inf')\n        best_values = [[float('-inf')] * 3 for _ in range(m)]\n        best_columns = [[-1] * 3 for _ in range(m)]\n\n        for i in range(m):\n            col_values = [(board[i][j], j) for j in range(n)]\n            col_values.sort(reverse=True, key=lambda x: x[0])\n\n            for k in range(min(3, n)):\n                best_values[i][k] = col_values[k][0]\n                best_columns[i][k] = col_values[k][1]\n\n        for r1, r2, r3 in itertools.combinations(range(m), 3):\n            for i in range(3):\n                for j in range(3):\n                    if best_columns[r2][j] == best_columns[r1][i]:\n                        continue\n                    for k in range(3):\n                        if (best_columns[r3][k] == best_columns[r1][i] or\n                            best_columns[r3][k] == best_columns[r2][j]):\n                            continue\n\n                        current_sum = best_values[r1][i] + best_values[r2][j] + best_values[r3][k]\n                        max_sum = max(max_sum, current_sum)\n        return max_sum\n",
    "submit_ts": "1723910031",
    "subm_id": "1359214757"
}