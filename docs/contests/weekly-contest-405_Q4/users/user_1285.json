{
    "username": "ManyuD",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        \n        n = len(target)\n        \n        d = {}\n        \n        def ins(w, d, c):\n            if not w:\n                d['#'] = min(d.get('#', math.inf), c)\n                return d\n            \n            if w[0] not in d:\n                d[w[0]] = {}\n            \n#             if not w[1:]:\n#                 d['#'] = min(d.get('#', math.inf), c)\n            \n            d[w[0]] = ins(w[1:], d[w[0]], c)\n            return d\n        \n        \n        for idx, wo in enumerate(words):\n            d = ins(wo, d, costs[idx])\n        \n        # print(d)\n        \n        @lru_cache(maxsize = None)\n        def h(i):\n            # print(i)\n            if i >= n:\n                return 0\n            \n            res = math.inf\n            j = i\n            ld = d\n            \n            while j < n and target[j] in ld:\n                if '#' in ld[target[j]]:\n                    # print(target[i:j + 1], ld[target[j]]['#'])\n                    res = min(res, h(j + 1) + ld[target[j]]['#'])\n                ld = ld[target[j]]\n                j += 1\n            \n            return res\n    \n        res = h(0)\n        return res if res != math.inf else -1\n                \n        \n            ",
    "submit_ts": "1720320753",
    "subm_id": "1312303582"
}