{
    "username": "_srihari_",
    "submission": "class Solution {\npublic:\n    vector<int> tree;\n    int N;\n    \n    void build(vector<int>& A) {\n        tree.resize(N << 1);\n        for (int i = 0; i < N; i++) {\n            tree[N + i] = A[i];\n        }\n        for (int i = N - 1; i >= 1; i--) {\n            tree[i] = tree[2 * i] + tree[2 * i + 1];\n        }\n    }\n    \n    void update(int pos, int val) {\n        pos += N;\n        tree[pos] = val;\n        for (int i = pos / 2; i >= 1; i /= 2) {\n            tree[i] = tree[2 * i] + tree[2 * i + 1];\n        }\n    }\n    \n    int query(int l, int r) {\n        if (l > r) return 0;\n        l += N;\n        r += N;\n        int resL = 0, resR = 0;\n        while (l <= r) {\n            if (l % 2 == 1) resL += tree[l++];\n            if (r % 2 == 0) resR += tree[r--];\n            l >>= 1;\n            r >>= 1;\n        }\n        return resL + resR;\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> A(n, 0);\n        N = n;\n        \n        while (__builtin_popcount(N) != 1) {\n            N++;\n            A.push_back(0);\n        }\n        \n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                A[i] = 1;\n            }\n        }\n        \n        build(A);\n        vector<int> res;\n        \n        for (auto& it : queries) {\n            if (it[0] == 1) {\n                res.push_back(query(it[1] + 1, it[2] - 1));\n            } else {\n                int idx = it[1];\n                int newVal = it[2];\n                nums[idx] = newVal;\n                \n                for (int i = max(1, idx - 1); i <= min(n - 2, idx + 1); i++) {\n                    int currPeak = A[i];\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        if (!currPeak) {\n                            update(i, 1);\n                            A[i] = 1;\n                        }\n                    } else {\n                        if (currPeak) {\n                            update(i, 0);\n                            A[i] = 0;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n};\n",
    "submit_ts": "1718507901",
    "subm_id": "1289665856"
}