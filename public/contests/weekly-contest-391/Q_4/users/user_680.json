{
    "username": "ArunPanwar",
    "submission": "bool comp(pair<int,int>&a,pair<int,int>&b)\n{\n    return a.first<b.first;\n}\nclass Solution {\npublic:\n\n    int minimumDistance(vector<vector<int>>& arr) {\n        int N=arr.size();\n         vector<pair<int,int>> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] ={arr[i][0] + arr[i][1],i};\n        V1[i] = {arr[i][0] - arr[i][1],i};\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end(),comp);\n    sort(V1.begin(), V1.end(),comp);\n\n    int ans=INT_MAX;\n    for(int i=0;i<N;i++)\n    {\n        //try to remove this point\n           int a=0,b=N-1,c=0,d=N-1;\n        if(V[0].second==i)a++;\n        if(V1[0].second==i)c++;\n        if(V[N-1].second==i)b--;\n        if(V1[N-1].second==i)d--;\n            int an=V[b].first-V[a].first;\n            int sec=V1[d].first-V1[c].first;\n        int got=max(an,sec);\n        // cout<<got<<\" \";\n        ans=min(got,ans);\n    }\n        return ans;\n    }\n};"
}