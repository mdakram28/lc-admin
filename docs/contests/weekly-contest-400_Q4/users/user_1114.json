{
    "username": "Momos_",
    "submission": "\n#define ll long long\n#define ull unsigned long long\n#define  FOR(i,n) for(long long i = 0; i < (n); i++)\n#define  FORR(i,n) for(long long i = n-1; i >= 0; i--)\n#define  FOR1(i,n) for(long long i = 1; i <= (n); i++)\n#define  FOR2(i,n) for(long long i = 2; i <= (n); i++)\n#define pb push_back\n#define V vector<int>\n#define VV vector<V>\n#define VVV vector<VV>\n#define el cout<<endl;\n#define fi first\n#define se second\n#define noo cout<<\"NO\"<<endl;\n#define yess cout<<\"YES\"<<endl;\n#define take(a,n) FOR(i,n) cin>>a[i];\n#define print(v) for(auto it:v) cout<<it<<\" \"; el\n#define all(v) v.begin(),v.end()\n#define sort(v) sort(v.begin(),v.end())\n#define fast ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); \n#define w(T)\t ll T; cin>>T; while(T--)\n#define input(a,n) int n; cin>>n; V a(n); take(a,n);\n#define pii pair<int,int>\n \nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll expo(ll a, ll b, ll m) {ll res = 1; while (b > 0) {if (b & 1) res = (res * a) % m; a = (a * a) % m; b = b >> 1;} return res%m ;}\nint nCr(int n , int r){\n\tif (n < r) return 0;\n\tif (r > n - r) r = n - r;\n\tll ans = 1; ll i;\n\tfor (i = 1; i <= r; i++){ans = (ans*(n - r + i));ans /= i;} return ans;\n}\nll modinv(ll a , ll m ) {return expo(a , m-2 , m)%m;} // m is prime \n\n\n \nclass Solution {\npublic:\n\n    int operation(ll a, ll b){\n        return (a & b);\n    }\n    void build(ll node, ll l, ll r, V&a, V &tree){\n        if(l == r){\n            tree[node] = a[l]; return;\n        }\n        ll mid = (l+r)/2;\n        build(2*node,l, mid,a,tree);\n        build(2*node+1,mid+1,r,a,tree);\n\n        tree[node] = operation(tree[2*node] , tree[2*node+1]); \n    }\n\n    ll query(ll node, ll start, ll end, ll l ,ll r, V&a, V &tree){\n\n        if(start>r || end<l) return ((1ll<<32)-1);\n        if(start>=l && end<=r) return tree[node];\n\n        ll mid = (start+end)/2;\n        ll left = query(2*node,start, mid, l,r,a,tree);\n        ll right = query(2*node+1,mid+1, end, l,r,a,tree);\n\n        return operation(left , right);\n    }\n    \n    \n    ll minimumDifference(vector<int>& a, int k) {\n        ll n = a.size();\n        V tree(4*n+5);\n        ll ans = 1e9+1;\n        build(1,0,n-1,a,tree);\n        // cout<<query(1,0,n-1,0,1,a,tree);\n        FOR(i,n){\n            int L = 0, R = i;\n            while(L<=R){\n                ll M = (L+R)/2;\n                ll temp = query(1,0,n-1,M,i,a,tree);\n                ans = min((ll)ans,(ll)abs(k-temp));\n                if(temp >= k){\n                    R = M-1;\n                }\n                else L = M+1;\n            }\n            \n        }\n        \n        return ans;\n        \n        \n    }\n};",
    "submit_ts": 1717299965.0
}