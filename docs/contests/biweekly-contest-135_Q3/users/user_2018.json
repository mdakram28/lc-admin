{
    "username": "alinmoai",
    "submission": "from collections import defaultdict\n\nclass Solution:\n    def minChanges(self, a: List[int], k: int) -> int:\n        # diffV = 0\n        # diffCount = 0\n        costTwo = [0 for i in range(k + 2)]\n        diffDic = defaultdict(lambda: 0)\n        n = len(a)\n        for i in range(n // 2):\n            diffV = abs(a[i] - a[n - i - 1])\n            diffDic[diffV] += 1\n            \n            aMax = max(a[i], a[n - i - 1])\n            aMin = min(a[i], a[n - i - 1])\n            if k - aMax < aMin:\n                costTwo[aMax + 1] += 1\n            else:\n                costTwo[k - min(a[i], a[n - i - 1]) + 1] += 1\n            # print(k - min(a[i], a[n - i - 1]) + 1)\n            \n        \n        # print(costTwo)\n        \n        res = n\n        \n        for i in range(1, k + 2):\n            costTwo[i] += costTwo[i - 1]\n        \n        # print(diffDic)\n        \n        for key, value in diffDic.items():\n            curCostTwo = costTwo[key]\n            curCostOne = (n // 2) - value - curCostTwo\n            curRes = curCostOne + (2 * curCostTwo) \n            res = min(res, curRes)\n#             print(f\"Key: {key}, Value: {value}\")\n#             print(f\"two: {curCostTwo}, one:{curCostOne}, res:{curRes}\")\n            \n#         print(costTwo)\n        return res",
    "submit_ts": "1721490046",
    "subm_id": "1327471449"
}