{
    "username": "a1dbv",
    "submission": "class Solution {\npublic:\nint minFlips(vector<vector<int>>& grid)\n{\n    // \u6240\u6709\u7684\u884c\u548c\u5217\u90fd\u9700\u8981\u56de\u6587\uff0c\u5e76\u4e14\u77e9\u9635\u4e2d1\u7684\u6570\u76ee\u53ef\u4ee5\u88ab4\u6574\u9664\n    // \u679a\u4e3e\u77e9\u9635\u4e0a\u534a\u90e8\u5206\n    // \u5bf9\u4e8e\u5de6\u4e0a\u90e8\u5206\u7684\u6bcf\u4e00\u4f4d\uff0c\u4f1a\u5f71\u54cd\u4e09\u4e2a\u4f4d\u7f6e\n    int n = grid.size();\n    int m = grid[0].size();\n    int ans = 0;\n    for(int i =0;i<n/2;i++)\n    {\n        for(int j = 0;j<m/2;j++)\n        {\n            // \u679a\u4e3e\u603b\u5171\u5f71\u54cd\u76844\u4e2a\u4f4d\u7f6e\uff0c\u7edf\u8ba11\u7684\u4e2a\u6570 or 0\u7684\u4e2a\u6570\n            int count1 = 0;\n            if(grid[i][j] == 1) count1++;\n            if(grid[n-i-1][m-j-1] == 1) count1++;\n            if(grid[n-i-1][j] == 1) count1++;\n            if(grid[i][m-j-1] == 1) count1++;\n            // \u4e24\u79cd\u6539\u6cd5\uff1a\u5168\u90e8\u6210\u4e3a1\uff0c\u5168\u90e8\u6210\u4e3a0\n            ans += min(count1,4-count1);\n        }\n    }\n    // \u5728\u4e0a\u8ff0\u7684\u8fc7\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u53ef\u80fd\u8fd8\u4f1a\u7559\u4e0b\u4e00\u884c\u548c\u4e00\u5217\n    // \u5148\u4e0d\u8003\u8651\u77e9\u9635\u4e2d1\u7684\u6570\u76ee\u53ef\u4ee5\u88ab4\u6574\u9664\uff0c\u5148\u8d2a\u5fc3\u9009\u53d6\n    int count1 = 0; // \u53d8\u62101\u66f4\u597d\u7684\u7ec4 \u8bf4\u660e\u662f\u4e24\u4e2a1 \u65e0\u9700cost\n    int count0 = 0; // \u53d8\u62100\u66f4\u597d\u7684\u7ec4 \u8bf4\u660e\u662f\u4e24\u4e2a0 \u65e0\u9700cost\n    int count = 0;  // \u7ec4\u51851\u4e2a0 1\u4e2a1  \u65e2\u53ef\u4ee5\u53d8\u62102\u4e2a0\uff0c\u53c8\u53ef\u4ee5\u53d8\u6210\u4e24\u4e2a1 \u9700\u89811\u4e2acost\n    // \u6280\u672f\u884c\n    if(n%2 == 1)\n    {\n        int i = n/2;\n        for(int j = 0;j<m/2;j++)\n        {\n            if(grid[i][j] == 1 and grid[i][m-j-1] == 0) count++;\n            if(grid[i][j] == 0 and grid[i][m-j-1] == 1) count++;\n            if(grid[i][j] == 1 and grid[i][m-j-1] == 1) count1++;\n            if(grid[i][j] == 0 and grid[i][m-j-1] == 0) count0++;\n        }\n    }\n    if(m%2 == 1)\n    {\n        int j = m/2;\n        for(int i = 0;i<n/2;i++)\n        {\n            if(grid[i][j] == 1 and grid[n-i-1][j] == 0) count++;\n            if(grid[i][j] == 0 and grid[n-i-1][j] == 1) count++;\n            if(grid[i][j] == 1 and grid[n-i-1][j] == 1) count1++;\n            if(grid[i][j] == 0 and grid[n-i-1][j] == 0) count0++;\n        }\n    }\n    ans += count;\n    if(count1%2 == 1 and count == 0)\n    {\n        ans +=2;\n    }\n        if(n%2 == 1 and m%2 == 1 and grid[n/2][m/2] == 1) ans++;\n    return ans;\n}\n};",
    "submit_ts": "1722697110",
    "subm_id": "552264514"
}