{
    "username": "nithin_36",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n\n    public int numberOfPermutations(int n, int[][] requirements) {\n\n        final int MOD = 1000000007;\n\n        // Sort requirements by endi\n\n        Arrays.sort(requirements, (a, b) -> Integer.compare(a[0], b[0]));\n\n        // dp[len][inv] means number of permutations of length len with exactly inv inversions\n\n        int[][] dp = new int[n + 1][401];\n\n        dp[0][0] = 1; // Base case\n\n        // Iterate over each length from 1 to n\n\n        for (int len = 1; len <= n; len++) {\n\n            // New DP table for current length\n\n            int[][] newDp = new int[n + 1][401];\n\n            \n\n            // Iterate over each permutation length so far\n\n            for (int i = 0; i < len; i++) {\n\n                // Iterate over each inversion count\n\n                for (int inv = 0; inv <= 400; inv++) {\n\n                    if (dp[i][inv] > 0) {\n\n                        for (int num = 0; num < len; num++) {\n\n                            // Calculate new inversions\n\n                            int newInv = inv + (len - 1 - num);\n\n                            if (newInv <= 400) {\n\n                                newDp[len][newInv] = (newDp[len][newInv] + dp[i][inv]) % MOD;\n\n                            }\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n            dp = newDp;\n\n            // Enforce requirements\n\n            for (int[] req : requirements) {\n\n                if (req[0] + 1 == len) {\n\n                    for (int inv = 0; inv <= 400; inv++) {\n\n                        if (inv != req[1]) {\n\n                            dp[len][inv] = 0;\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n        }\n\n        // Sum up valid permutations of length n that satisfy all requirements\n\n        int result = 0;\n\n        for (int inv = 0; inv <= 400; inv++) {\n\n            result = (result + dp[n][inv]) % MOD;\n\n        }\n\n        return result;\n\n    }\n\n}\n   \n        \n    \n",
    "submit_ts": 1719071471.0
}