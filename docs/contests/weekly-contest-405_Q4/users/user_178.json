{
    "username": "littlemxrush",
    "submission": "#define ull unsigned long long\nclass Solution {\npublic:\n    int minimumCost(string tar, vector<string>& words, vector<int>& costs) {\n        int n = tar.size();\n        unordered_map<ull, int> mp;\n        vector<ull> hs(n+1), pw(n+1, 1);\n        const ull B = 13331;\n        for (int i = 0; i < n; i++) {\n            hs[i+1] = hs[i] * B + tar[i];\n            pw[i+1] = pw[i] * B;\n        }\n        auto get_hash = [&](int l, int r) {\n            return hs[r+1] - hs[l] * pw[r - l + 1];\n        };\n        map<int, set<ull>> lens;\n        \n        int idx = 0;\n        for (auto &word : words) {\n            ull h = 0;\n            for (char c : word) h = h * B + c;\n            int l = word.size();\n            lens[l].insert(h);\n            if (mp.count(h)) mp[h] = min(mp[h], costs[idx]);\n            else mp[h] = costs[idx];\n            idx++;\n        }\n        vector<int> f(n+1, 1e9);\n        f[0] = 0;\n        for (int i = 0; i < n; i++) {\n            for (auto &[l, st] : lens) {\n                if (l > i+1) break;        \n                ull h_tar = get_hash(i+1 - l, i);\n                if (st.count(h_tar)) f[i+1] = min(f[i+1], f[i - l + 1] + mp[h_tar]);\n            }\n        }\n        if (f[n] > 6e8) f[n] = -1;\n        return f[n];\n    }\n    \n};",
    "submit_ts": "1720321622",
    "subm_id": "1312327803"
}