{
    "username": "TLG12317",
    "submission": "class Solution:\n    def countOfPeaks(self, nums, queries):\n        lst = []\n        for i in range(len(nums)):\n            if i == 0 or i == len(nums)-1:\n                lst.append(0)\n            elif nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                lst.append(1)\n            else:\n                lst.append(0)\n        tree = [0 for _ in range(len(lst)*4)]\n        def update(i, value):\n            while i < len(tree):\n                tree[i] += value\n                i += i & -i\n        def query(i):\n            ret = 0\n            while i > 0:\n                ret += tree[i]\n                i -= i & -i\n            return ret\n\n        final = []\n        for i in range(1, len(lst)-1):\n            update(i, lst[i])\n        for i in range(len(queries)):\n            if queries[i][0] == 1:\n                left, right = queries[i][1], queries[i][2]\n                temp = query(right-1) - query(left)\n                final.append(max(temp, 0))\n            else:\n                index, value = queries[i][1], queries[i][2]\n                nums[index] = value\n                for j in range(-1,2):\n                    if index + j - 1 >= 0 and index + j + 1 < len(lst):\n                        if lst[index+j] == 0 and nums[index+j] > nums[index+j-1] and nums[index+j] > nums[index+j+1]:\n                            lst[index+j] = 1\n                            update(index+j, 1)\n                        elif lst[index+j] == 1 and (nums[index+j] <= nums[index+j-1] or nums[index+j] <= nums[index+j+1]):\n                            lst[index+j] = 0\n                            update(index+j, -1)\n        return final\n",
    "submit_ts": 1718507680.0
}