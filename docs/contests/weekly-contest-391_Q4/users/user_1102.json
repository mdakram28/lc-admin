{
    "username": "ToTea",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(), points.end());\n        \n        auto [idxs, _1] = getMaxDist(points, -1);\n        auto [_2, r1] = getMaxDist(points, idxs[0]);\n        auto [_3, r2] = getMaxDist(points, idxs[1]);\n        return min(r1, r2);\n    }\n    \nprivate:\n    pair<vector<int>,int> getMaxDist(vector<vector<int>>& points, int ignore) {\n        int maxDist = 0;\n        vector<int> maxIdxs(2, -1);\n        \n        bool start = false;\n        int preX = points[0][0];\n        int minY = points[0][1];\n        int maxY = points[0][1];\n        int preMinIdx = 0;\n        int preMaxIdx = 0;\n        for (int i = 0; i < points.size(); ++i) {\n            if (i == ignore) continue;\n            auto& point = points[i];\n            if (!start) {\n                preX = point[0];\n                minY = point[1];\n                maxY = point[1];\n                preMinIdx = i;\n                preMaxIdx = i;\n                start = true;\n                continue;\n            }\n            \n            int x = point[0];\n            int y = point[1];\n            int diff = x - preX;\n            minY -= diff;\n            maxY += diff;\n            \n            int dist = max(maxY-y, y-minY);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxIdxs[0] = i;\n                if (maxY-y > y-minY) {\n                    maxIdxs[1] = preMaxIdx;\n                } else {\n                    maxIdxs[1] = preMinIdx;\n                }\n            }\n            \n            if (y < minY) {\n                minY = y;\n                preMinIdx = i;\n            }\n            \n            if (y > maxY) {\n                maxY = y;\n                preMaxIdx = i;\n            }\n            \n            preX = x;\n        }\n        return {maxIdxs, maxDist};\n    }\n};"
}