{
    "username": "zzdfw",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n                          vector<int>& verticalCut) {\n        vector<pair<int, int>> v;\n        int flag = m > n;\n        for (auto it : horizontalCut) {\n            v.push_back({it, flag});\n        }\n        for (auto it : verticalCut) {\n            v.push_back({it, 1-flag});\n        }\n        sort(v.begin(), v.end(),\n             [&](const pair<int, int>& a, const pair<int, int>& b) {\n                 if (a.first != b.first) {\n                     return a.first > b.first;\n                 }\n                 return a.second < b.second;\n             });\n        long long res = 0;\n        int curm = 1, curn = 1;\n        for (auto [a, b] : v) {\n          if(b){\n            //\u6a2a\n            res+=(1ll*a*curn);\n            curm++;\n          }else{\n            res+=(1ll*a*curm);\n            curn++;\n          }\n          // cout<<a<<\" \"<<b<<\" \"<<res<<endl;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925999",
    "subm_id": "546443376"
}