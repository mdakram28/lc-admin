{
    "username": "uncle_bob",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int count=0;\n        for (int i = 0; i < grid.length/2; i++) {\n            for (int j = 0; j < grid[0].length/2; j++) {\n                int c=grid[i][j]+grid[grid.length-1-i][j]+grid[i][grid[0].length-1-j]+grid[grid.length-1-i][grid[0].length-1-j];\n                count+=Math.min(c,4-c);\n            }\n        }\n        int co=0,flag=0;\n        if(grid.length%2==1){\n            int i=grid.length/2;\n            for (int j = 0; j < grid[0].length/2; j++) {\n                if(grid[i][j]!=grid[i][grid[0].length-1-j]){\n                    flag=1;\n                    count+=1;\n                }else if( grid[i][j]==1){\n                    co+=1;\n                }\n                \n            }\n        }\n        if(grid[0].length%2==1){\n            int j=grid[0].length/2;\n            for (int i = 0; i < grid.length/2; i++) {\n                if(grid[i][j]!=grid[grid.length-1-i][j]){\n                    flag=1;\n                    count+=1;\n                }else if( grid[i][j]==1){\n                    co+=1;\n                }\n\n            }\n        }\n        if(co%2==1 && flag==0){\n            count+=2;\n        }\n        if(grid[0].length%2==1 && grid.length%2==1 &&grid[grid.length/2][grid[0].length/2]==1){\n            count++;\n        }\n        return count;\n    }\n}",
    "submit_ts": "1722696651",
    "subm_id": "552262088"
}