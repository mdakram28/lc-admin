{
    "username": "adarsh_k1729",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long count = 0;\n        int n = nums.length;\n\n        HashMap<Long, Long> map = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            if (nums[i] == k) {\n                ++count;\n            }\n            map2.put((long) nums[i], 1L);\n\n            for (HashMap.Entry<Long, Long> entry : map.entrySet()) {\n                long val = entry.getKey();\n                long freq = entry.getValue();\n\n                long res = val & nums[i];\n                if (res == k) {\n                    count += freq;\n                }\n                map2.put(res, map2.getOrDefault(res, 0L) + freq);\n            }   \n            map = map2;\n        } \n        return count;\n    }\n}",
    "submit_ts": "1720278570",
    "subm_id": "1311714880"
}