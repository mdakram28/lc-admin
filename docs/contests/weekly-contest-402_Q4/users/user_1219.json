{
    "username": "vasugondaliya",
    "submission": "class BIT:\n    def __init__(self, n):\n        self.n = n\n        self.bit = [0] * (n + 1)\n    \n    def update(self, index, delta):\n        index += 1\n        while index <= self.n:\n            self.bit[index] += delta\n            index += index & -index\n    \n    def query(self, index):\n        index += 1\n        sum = 0\n        while index > 0:\n            sum += self.bit[index]\n            index -= index & -index\n        return sum\n\n    def range_query(self, left, right):\n        return self.query(right) - self.query(left - 1)\n    \nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        \n        def is_peak(i):\n            return i > 0 and i < n - 1 and nums[i] > nums[i - 1] and nums[i] > nums[i + 1]\n\n        is_peak_array = [False] * n\n        bit = BIT(n)\n        for i in range(1, n - 1):\n            if is_peak(i):\n                is_peak_array[i] = True\n                bit.update(i, 1)\n\n        results = []\n\n        for query in queries:\n            if query[0] == 1:\n                li, ri = query[1], query[2]\n                if ri - li < 2:\n                    results.append(0)\n                else:\n                    results.append(bit.range_query(li + 1, ri - 1))\n                \n            elif query[0] == 2:\n                indexi, vali = query[1], query[2]\n                nums[indexi] = vali\n\n                for i in range(max(1, indexi - 1), min(n - 1, indexi + 2)):\n                    was_peak = is_peak_array[i]\n                    is_peak_now = is_peak(i)\n                    if was_peak != is_peak_now:\n                        is_peak_array[i] = is_peak_now\n                        bit.update(i, 1 if is_peak_now else -1)\n\n        return results\n\n# [3,1,4,2,5]\n# [[2,3,4],[1,0,4]]\n# [4,1,4,2,1,5]\n# [[2,2,4],[1,0,2],[1,0,4]]\n# [5,4,8,6]\n# [[1,2,2],[1,1,2],[2,1,6]]\n# [7,10,7]\n# [[1,2,2],[2,0,6],[1,0,2]]",
    "submit_ts": "1718509224",
    "subm_id": "1289702740"
}