{
    "username": "U_N_K_N_O_W_N_0",
    "submission": "\n\nclass Seg {\npublic:\n    vector<int> v;\n    int n;\n\n    Seg(vector<int>& arr)\n    {\n        n = arr.size();\n        v.resize(4 * n+2);\n        build(arr, 0, 0, n - 1);\n    }\n\n    void build(vector<int>& arr, int i, int l, int r)\n    {\n        if (l == r) {\n            v[i] = arr[l];\n        }\n        else {\n            int m = (l + r) / 2;\n            build(arr, 2*i + 1, l, m);\n            build(arr, 2*i + 2, m + 1, r);\n\n            v[i] = v[2*i + 1] & v[2*i + 2];\n        }\n    }\n\n    int query(int l, int r)\n    {\n        return q(0, 0, n - 1, l, r);\n    }\n\n    int q(int i, int s, int e, int l, int r)\n    {\n        if (r < s || e < l) {\n            return INT32_MAX;\n        }\n        if (l <= s && e <= r) {\n            return v[i];\n        }\n        int m = (s + e) / 2;\n        int v1 = q(2*i + 1, s, m, l, r);\n        int v2 = q(2*i + 2, m + 1, e, l, r);\n\n        return v1 & v2;\n    }\n};\n\nint solve(vector<int> nums, int k)\n{\n    int n = nums.size();\n    Seg st(nums);\n    int ans = INT32_MAX;\n    for (int i = 0; i < n; i++) {\n        int l = i - 1, r = n - 1, m;\n\n        while (r - l > 1) {\n            m = (l + r) / 2;\n            if (st.query(i, m) >= k)\n                l = m;\n            else\n                r = m;\n        }\n        if (l != i - 1)\n            ans = min(ans, abs(st.query(i, l) - k));\n        ans = min(ans, abs(k - st.query(i, r)));\n    }\n    return ans;\n}\n\n\nclass Solution \n{\npublic:\n    int minimumDifference(vector<int>& nums, int k) \n    {\n        return solve(nums, k);\n    }\n};",
    "submit_ts": 1717300481.0
}