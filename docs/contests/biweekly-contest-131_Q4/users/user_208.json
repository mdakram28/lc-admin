{
    "username": "probable_",
    "submission": "class Solution {\npublic:\n   void init(int t[][3],int st, int en, int node) {\n      if(st == en) {\n        t[node][0]=0;\n        t[node][1]=-1;\n        t[node][2]=-1;\n        return;\n      }\n      int mid = (st+en)/2;\n      init(t, st, mid, 2*node);\n      init(t, mid+1, en, 2*node+1);\n      int diff = 0;\n      if (t[2*node][2]==-1) {\n        diff -= st;\n      }else {\n        diff -= t[2*node][2];\n      }\n      if (t[2*node+1][1]==-1) {\n        diff += en;\n      } else {\n        diff += t[2*node+1][1];\n      }\n      t[node][0]=max(t[node][0], diff);\n      t[node][1]=-1;\n      t[node][2]=-1;\n     // cout<<st<<\" \"<<en<<\" \"<<t[node][0]<<endl;\n   }\n\n   void update(int t[][3], int st, int en, int ind, int node) {\n    if (st == en) {\n        t[node][0]=0;\n        t[node][1]=st;\n        t[node][2]=st;\n        return;\n    }\n    int mid = (st+en)/2;\n    if (ind<=mid)update(t, st, mid, ind, 2*node);\n    else update(t, mid+1, en, ind, 2*node+1);\n    t[node][0]=max(t[2*node][0], t[2*node+1][0]);\n    int diff = 0;\n    if (t[2*node][2]==-1) {\n        diff -= st;\n      }else {\n        diff -= t[2*node][2];\n      }\n      if (t[2*node+1][1]==-1) {\n        diff += en;\n      } else {\n        diff += t[2*node+1][1];\n      }\n      t[node][0]=max(t[node][0], diff);\n      if(t[2*node][1]==-1) {\n        t[node][1]=t[2*node+1][1];\n      } else t[node][1]=t[2*node][1];\n      if (t[2*node+1][2] == -1) {\n        t[node][2] = t[2*node][2];\n      } else t[node][2] = t[2*node+1][2];\n\n      \n   }\n\n   int f(int t[][3], int st, int en, int l, int r, int node) {\n    if (st > r || en < l)return 0;\n    if (st >= l && en <= r) {\n        return t[node][0];\n    }\n    int mid = (st+en)/2;\n    int f1 = f(t, st, mid, l, r, 2*node);\n    int f2 = f(t, mid+1, en, l, r, 2*node+1);\n    int ans = max(f1, f2);\n    int diff = 0;\n    if (t[2*node][2]==-1) {\n        diff -= max(st, l);\n    }else {\n        diff -= max(t[2*node][2], l);\n    }\n    if (t[2*node+1][1]==-1) {\n        diff += min(en, r);\n    } else {\n        diff += min(t[2*node+1][1], r);\n    }\n      return max(ans, diff);\n   }\n\n    vector<bool> getResults(vector<vector<int>>& q) {\n        int t[600003][3];\n        init(t, 0, 150000, 1);\n        vector<bool> res;\n        for(auto x: q) {\n            if(x[0]==1) {\n                update(t, 0, 150000, x[1], 1);\n            } else {\n                int pp = f(t, 0, 150000, 0, x[1], 1);\n                if (pp >= x[2]) {\n                    res.push_back(true);\n                } else res.push_back(false);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716651115.0
}