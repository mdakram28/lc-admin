{
    "username": "tyao-bacc",
    "submission": "# class Solution:\n#     def minChanges(self, nums: List[int], k: int) -> int:\n#         n = len(nums)\n#         d = defaultdict(int)\n#         for i in range(n):\n#             d[abs(nums[i]-nums[n-1-i])] += 1\n#         MIN = 99999999\n#         vals = d.values()[:]\n#         for v in vals: v /= 2\n#         for v in d.values():\n#             MIN = min(MIN, n-)\n#         return k\n\nclass Solution:\n    def __init__(self):\n        self.t = [0] * 105000\n        self.s = [0] * 105000\n        self.n = 0\n\n    def minChanges(self, nums, k):\n        self.n = len(nums)\n        for i in range(self.n // 2):\n            tmp = abs(nums[i] - nums[self.n - i - 1])\n            tma = max(max(k - nums[i], k - nums[self.n - i - 1]), max(nums[i], nums[self.n - i - 1]))\n            if tmp <= tma:\n                self.s[0] += 1\n                self.s[tmp] -= 1\n                self.s[tmp + 1] += 1\n                self.s[tma + 1] -= 1\n                self.s[tma + 1] += 2\n            else:\n                self.s[0] += 1\n                self.s[tma + 1] += 1\n                self.s[tmp] -= 2\n                self.s[tmp + 1] += 2\n\n        pre = 0\n        min_val = 10000000\n        for i in range(k + 1):\n            pre += self.s[i]\n            min_val = min(min_val, pre)\n\n        return min_val",
    "submit_ts": "1721486685",
    "subm_id": "548306337"
}