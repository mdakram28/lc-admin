{
    "username": "tomarint",
    "submission": "impl Solution {\n    pub fn minimum_distance(points: Vec<Vec<i32>>) -> i32 {\n        let n = points.len();\n        // 45\u5ea6\u56de\u8ee2\n        let mut points = points.iter()\n            .map(|p| (p[0] as i64 + p[1] as i64, p[1] as i64 - p[0] as i64))\n            .collect::<Vec<_>>();\n        let xmin = points.iter().map(|p| p.0).min().unwrap();\n        let xmax = points.iter().map(|p| p.0).max().unwrap();\n        let ymin = points.iter().map(|p| p.1).min().unwrap();\n        let ymax = points.iter().map(|p| p.1).max().unwrap();\n        let mut ans = i64::MAX;\n        fn calc(\n            points: &Vec<(i64, i64)>,\n            t: usize,\n        ) -> i64 {\n            let xmin = points.iter()\n                .enumerate()\n                .filter(|(i, _)| *i != t)\n                .map(|p| p.1.0)\n                .min()\n                .unwrap();\n            let xmax = points.iter()\n                .enumerate()\n                .filter(|(i, _)| *i != t)\n                .map(|p| p.1.0)\n                .max()\n                .unwrap();\n            let ymin = points.iter()\n                .enumerate()\n                .filter(|(i, _)| *i != t)\n                .map(|p| p.1.1)\n                .min()\n                .unwrap();\n            let ymax = points.iter()\n                .enumerate()\n                .filter(|(i, _)| *i != t)\n                .map(|p| p.1.1)\n                .max()\n                .unwrap();\n            std::cmp::max(xmax - xmin, ymax - ymin)\n        }\n\n        for i in 0..n {\n            if points[i].0 == xmin {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in (0..n).rev() {\n            if points[i].0 == xmin {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in 0..n {\n            if points[i].0 == xmax {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in (0..n).rev() {\n            if points[i].0 == xmax {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in 0..n {\n            if points[i].1 == ymin {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in (0..n).rev() {\n            if points[i].1 == ymin {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in 0..n {\n            if points[i].1 == ymax {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        for i in (0..n).rev() {\n            if points[i].1 == ymax {\n                let ans1 = calc(&points, i);\n                ans = ans.min(ans1);\n                break;\n            }\n        }\n        ans as i32\n    }\n}"
}