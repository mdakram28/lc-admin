{
    "username": "tarun_gatla",
    "submission": "class Solution {\npublic:\n    unordered_map<string, long long> memo;\n\n    long long countWays(int current, int jump, int prev, int k) {\n        long long ways = 0;\n        string key = to_string(current) + \",\" + to_string(jump) + \",\" + to_string(prev);\n        if (memo.find(key) != memo.end()) return memo[key];\n        if(current > k+10000000) return ways;\n        if(current == k) ways++;\n        if(current >= 1 && prev == 0) {\n            ways += countWays(current-1, jump, 1, k);\n        }\n        ways += countWays(current + (1<<jump), jump + 1, 0, k);\n        return memo[key] = ways;\n    \n}\n    int waysToReachStair(int k) {\n        return (int)countWays(1, 0, 0, k);\n    }\n};",
    "submit_ts": 1716089577.0
}