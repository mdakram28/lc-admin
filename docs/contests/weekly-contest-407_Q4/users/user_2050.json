{
    "username": "ankitjha2603",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        dp = defaultdict(int)\n        dp[0] = abs(req[0])\n        \n        for i in range(1, length):\n            if (req[i-1] >= 0 and req[i] >= 0) or (req[i-1] <= 0 and req[i] <= 0):\n                dp[i] = dp[i - 1] + abs(req[i-1] - req[i])\n            else:\n                dp[i] = dp[i - 1] + abs(req[i])\n        return dp[length-1]\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        req=[y-x for x,y in zip(nums,target)]\n        length = len(req)\n        res,curr_window = 0,0\n        for i in range(length):\n            if not i or (req[i - 1] >= 0)==(req[i] >= 0):\n                if abs(req[i]) > abs(curr_window):\n                    res += abs(req[i]) - abs(curr_window)\n            else:\n                res += abs(req[i])\n            curr_window = req[i]\n        return res",
    "submit_ts": "1721533623",
    "subm_id": "1328013075"
}