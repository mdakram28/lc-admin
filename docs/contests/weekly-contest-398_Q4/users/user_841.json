{
    "username": "jackieckc",
    "submission": "// calculate multiplication of natural numbers from start to end \ndouble Multiplier(int start, int end)\n{\n    if (start == end) {\n        return start;\n    }\n    else {\n        double res = 1;\n        while (start <= end) {\n            res *= start;\n            start++;\n        }\n        return res;\n    }\n}\n\ndouble nCR(int n, int r)\n{\n    if (n < r) {\n        return -1;\n    }\n    else if (n == r || r == 0) {\n        return 1;\n    }\n    else {\n        int max_val = std::max(r, n - r);\n        int min_val = std::min(r, n - r);\n        double numerator = Multiplier(max_val + 1, n);\n        double denominator = Multiplier(1, min_val);\n        return numerator / denominator;\n    }\n}\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        int j = 1;\n        int c = 1;\n        int mj = -1;\n        int res = 0;\n        if (k == 1 || k == 0) {\n            res += 1;\n        }\n        for (int i = 1; ; i++) {\n            c += j;\n            j *= 2;\n            if (c - i - 1 > k) {\n                cout << \"max jump: \" << i - 1 << endl;\n                mj = i - 1;\n                break;\n            }\n            if (c >= k) {\n                int diff = c - k;\n                cout << \"jump \" << i << \" back \" << diff << endl;\n                res += nCR(i + 1, diff);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1716089709",
    "subm_id": "1261849310"
}