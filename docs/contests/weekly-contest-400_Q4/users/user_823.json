{
    "username": "BetoSCL",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        mx = 2**30 - 1 \n        n = len(nums)\n\n        r = 0 \n        \n        cnt = [0]*30\n        def getAnd(l):\n            res = 0\n            for i in range(30):\n                if cnt[i] == l: \n                    res |= 1<<i\n                    \n            return res\n        \n        def add(l,r,x): \n            for i in range(30):\n                if (x>>i)&1:\n                    cnt[i]+=1 \n                   \n            return getAnd(r-l+1)\n        \n        def rem(x):\n            for i in range(30):\n                if (x>>i)&1: \n                    cnt[i]-=1 \n                    \n                    \n        ans = 10**18\n            \n        for l in range(n): \n            while r<n: \n                if add(l,r,nums[r])>k: \n                    r+=1\n                else: \n                    rem(nums[r])\n                    break\n                    \n                    \n            if r<n: \n                ans = min(ans,k-add(l,r,nums[r]))\n                rem(nums[r])\n                \n            if r>l: \n                ans = min(ans,getAnd(r-l)-k)\n                \n            rem(nums[l])\n                    \n                \n                \n                    \n        \n            \n\n        return ans",
    "submit_ts": 1717299155.0
}