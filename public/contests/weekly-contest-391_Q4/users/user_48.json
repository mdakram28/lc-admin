{
    "username": "passionFruitFlower",
    "submission": "class Solution {\npublic:\n    pair<int,pair<int,int>> worstDistance (vector<vector<int>> points) {\n        vector<pair<int,int>> v1, v2;\n        for (int i = 0; i < points.size(); i++) {\n            v1.emplace_back(points[i][0] + points[i][1], i);\n            v2.emplace_back(points[i][0] - points[i][1], i);\n        }\n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n        auto p1 = make_pair(v1.back().first - v1[0].first, make_pair(v1.back().second, v1[0].second));\n        auto p2 = make_pair(v2.back().first - v2[0].first, make_pair(v2.back().second, v2[0].second));\n        return max(p1, p2);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        pair<int,pair<int,int>> p = worstDistance(points);\n        vector<int> rem = {p.second.first, p.second.second};\n        int ans = INT_MAX;\n        for (int x: rem) {\n            vector<vector<int>> v;\n            for (int i = 0; i < points.size(); i++) {\n                if (i == x) continue;\n                v.push_back(points[i]);\n            }\n            ans = min(ans, worstDistance(v).first);\n        }\n        return ans;\n    }\n};"
}