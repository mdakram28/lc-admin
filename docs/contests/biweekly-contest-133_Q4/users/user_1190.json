{
    "username": "simratbhalla2812",
    "submission": "class Solution {\npublic:\n\n    void fun(int n, vector<vector<int>>& requirements, vector<vector<long long>>& dpVec, map<int, int>& solve){\n        for(int i=1; i<=n; i++){\n            for(int j=0; j<401; j++){\n                for(int k=0; k<i; k++){\n                    int val = j-k;\n                    if(val < 0) continue;\n                    else dpVec[i][j] = (dpVec[i][j] + dpVec[i-1][val]) % 1000000007;\n                }\n            }\n            if(solve.count(i) > 0){\n                int val = solve[i];\n                for(int tmp=0; tmp<401; tmp++){\n                    if(tmp == val) continue;\n                    else{\n                        dpVec[i][tmp] = 0;\n                    }\n                }\n            }\n        }\n    }\n\n    long long updateAns(vector<vector<long long>>& dpVec, int n){\n        long long ans = 0;\n        for(long long i=0; i<=400; i++){\n            ans = (ans + dpVec[n][i]) % 1000000007;\n        }\n        return ans;\n    }\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> solve;\n        vector<vector<long long>> dpVec(n+1, vector<long long> (401, 0));\n        for(int i=0; i<requirements.size(); i++){\n            int a = requirements[i][0]+1, b = requirements[i][1];\n            solve[a] = b;\n        }\n        dpVec[0][0] = 1;\n        fun(n, requirements, dpVec, solve);\n        long long ans = updateAns( dpVec, n);\n        return static_cast<int> (ans);\n    }\n};",
    "submit_ts": 1719071779.0
}