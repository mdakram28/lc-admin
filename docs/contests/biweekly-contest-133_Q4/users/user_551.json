{
    "username": "Celestial_Coder",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {        \n        int dp[n+1][401];\n        memset(dp,0,sizeof(dp));\n        unordered_map<int, int> mp;\n        unordered_set<int>st;\n        for (int i=0;i<reqs.size();i++) {\n            mp[reqs[i][0] + 1] = reqs[i][1];\n            st.insert(reqs[i][0]);\n        }\n        dp[0][0] = 1;\n         int MOD = 1e9+7;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= 400; j++) {\n                int k=0;\n                while(k<i){\n                    if ((j-k) >= 0 && st.size()>=0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][j-k]) % MOD;\n                    }\n                    k++;\n                }\n            }\n            if (st.size() && mp.find(i)!=mp.end()) {\n                for (int j = 0; j <= 400; j++)\n                    if (j != mp[i] && st.size())dp[i][j] = 0;\n            }\n        }\n\n        long fin = 0;\n        for (long q : dp[n]) {\n            fin = (fin + q) % MOD;\n        }\n\n        return fin;\n    }\n};",
    "submit_ts": 1719070645.0
}