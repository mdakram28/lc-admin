{
    "username": "wxquare",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        /*\n                  100 010 \n        */\n\n  \n\n        int m = grid.size();\n        int n = grid[0].size();\n\n\n        int ans = 0;\n        for(int i=0;i<m/2;i++){\n            for(int j=0;j<n/2;j++){\n\n\n                vector<int> t;\n\n                t.push_back(grid[i][j]);\n                // right\n                if(n - 1 - j > j){\n                    t.push_back(grid[i][n-1-j]);\n                }\n                // left bottom\n                if(m - 1 - i > i){\n                    t.push_back(grid[m-1-i][j]);\n                }\n\n                if((n - 1 - j > j) && (m - 1 - i > i)){\n                    t.push_back(grid[m-1-i][n-1-j]);\n                }\n\n                if(t.size() != 4){\n                    std::cout << t.size() << std::endl;\n                    for(int k=0;k<t.size();k++){\n                        if(t[k] == 1){\n                            ans++;\n                        }\n                    }\n                } else {\n                    int cnt1 = 0;\n                    for(int k=0;k<t.size();k++){\n                        if(t[k] == 1){\n                            cnt1++;\n                        }\n                    }\n                    ans = ans + min(cnt1,4 - cnt1);\n                }\n            }\n        }\n\n        int p1 = 0;\n        int p0 = 0;\n        int p2 = 0;\n        if(m % 2 == 1){\n            std::cout << \"=======\" << std::endl;\n            int left = 0;\n            int right = n - 1;\n            while(left < right){\n                if(grid[m/2][left] != grid[m/2][right]){\n                    p2++;\n                }else{\n                    if(grid[m/2][left] == 1){\n                        p1++;\n                    } else {\n                        p0++;\n                    }\n                }\n                left++;\n                right--;\n            }\n        }\n\n        if(n % 2 == 1){\n            // std::cout << \"====== n % 2 == 1\"  << std::endl;\n            int left = 0;\n            int right = m - 1;\n            while(left < right){\n                if(grid[left][n/2] != grid[right][n/2]){\n                    p2++;\n                } else {\n                    if(grid[left][n/2] == 1){\n                        p1++;\n                    } else {\n                        p0++;\n                    }\n                }\n                left++;\n                right--;\n            }\n        }\n\n        if(m % 2 == 1 && n % 2 == 1){\n            if(grid[m/2][n/2] == 1){\n                ans++;\n            }\n        }\n\n        if(p1 % 2 == 0){\n            ans += p2;\n        } else {\n            if(p2 > 0){\n                ans += p2;\n            } else {\n                ans = ans + 2 + p2;\n            }\n        }\n\n        std::cout << p0 << '\\t' << p1 << '\\t' << p2 << std::endl;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699697",
    "subm_id": "552276779"
}