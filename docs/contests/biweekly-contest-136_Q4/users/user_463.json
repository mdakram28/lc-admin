{
    "username": "divyaroop2093",
    "submission": "class Solution {\npublic:\n    vector<int> firstMax,secondMax,c;\n    vector<vector<int>> adj;\n    void dfs(int v, int p) {\n        firstMax[v] = 0;\n        secondMax[v] = 0;\n        for (auto x : adj[v]) {\n            if (x == p) continue;\n            dfs(x, v);\n            int d=1;\n            if(x%2==0){d=2;}\n            if (firstMax[x] + d > firstMax[v]) {\n                secondMax[v] = firstMax[v];\n                firstMax[v] = firstMax[x] + d;\n                c[v] = x;\n            } else if (firstMax[x] + d > secondMax[v]) {\n                secondMax[v] = firstMax[x] + d;\n            }\n        }\n    }\n    void dfs2(int v, int p) {\n        int d=1;\n        if(v%2==0){d=2;}\n        for (auto x : adj[v]) {\n            if (x == p) continue;\n            if (c[v] == x) {\n                if (firstMax[x] < secondMax[v] + d) {\n                    secondMax[x] = firstMax[x];\n                    firstMax[x] = secondMax[v] + d;\n                    c[x] = v;\n                } else {\n                    secondMax[x] = max(secondMax[x], secondMax[v] + d);\n                }\n            } else {\n                secondMax[x] = firstMax[x];\n                firstMax[x] = firstMax[v] + d;\n                c[x] = v;\n            }\n            dfs2(x, v);\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int N=edges.size();\n        int n=N+1;\n        adj.resize(n);\n        firstMax.resize(n);\n        secondMax.resize(n);\n        c.resize(n);\n        for(auto& it:edges){\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        dfs(1, -1);\n\t    dfs2(1, -1);\n        return firstMax;\n    }\n};",
    "submit_ts": "1722699463",
    "subm_id": "1343212443"
}