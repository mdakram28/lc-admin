{
    "username": "Mystic_AN",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& a, int k) {\n        int n = a.size();\n        vector<int> prefix(k + 2, 0);\n\n        for (int i = 0; i < n / 2; i ++){\n            int first = a[i], last = a[n - i - 1];\n            pair<int, int> range = {0, max(max(first, last), k - min(first, last))};\n            prefix[0] += 1;\n            prefix[range.second + 1] -= 1;\n            if (range.second < k){\n                prefix[range.second + 1] += 2;\n                prefix[k + 1] -= 2;\n            }\n        }\n\n        // for (auto i: prefix){\n        //     cout << i << \" \";\n        // }\n        // cout << endl;\n\n        for (int i = 1; i <= k; i ++){\n            prefix[i] += prefix[i - 1];\n        }\n\n        // for (auto i: prefix){\n        //     cout << i << \" \";\n        // }\n        // cout << endl;\n\n        for (int i = 0; i < n / 2; i ++){\n            int delta = abs(a[i] - a[n - i - 1]);\n            prefix[delta] --;\n        }\n\n        // for (auto i: prefix){\n        //     cout << i << \" \";\n        // }\n        // cout << endl;\n\n        int ans = INT_MAX;\n        for (int i = 0; i <= k; i ++){\n            ans = min(ans, prefix[i]);\n        }\n        return ans;\n    }\n};\n\n\n/*\n1. prefix sum + 1, -1 (0, max) and (k - max)\n2. then subtract all detas of pairs from prefix\n3. ans is min of all prefix\n**/",
    "submit_ts": "1721488219",
    "subm_id": "1327415354"
}