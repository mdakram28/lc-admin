{
    "username": "mittaludit768",
    "submission": "typedef long long ll;\nclass SGTree {\n\tvector<ll> seg;\npublic:\n\tSGTree(ll n) {\n\t\tseg.resize(4 * n + 1);\n\t}\n\n\tvoid build(ll ind, ll low, ll high,vector<int> &arr) {\n\t\tif (low == high) {\n\t\t\tseg[ind] = arr[low];\n\t\t\treturn;\n\t\t}\n\n\t\tint mid = (low + high) / 2;\n\t\tbuild(2 * ind + 1, low, mid, arr);\n\t\tbuild(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = seg[2 * ind + 1] & seg[2 * ind + 2];\n\t\t//cout<<seg[ind]<<endl;\n\t}\n\n\tll query(ll ind,ll low,ll high,ll l,ll r) {\n\t\t// no overlap\n\t\t// l r low high or low high l r\n\t\tif (r < low || high < l) return LLONG_MAX;\n\n\t\t// complete overlap\n\t\t// [l low high r]\n\t\tif (low >= l && high <= r) return seg[ind];\n\n\t\tint mid = (low + high) >> 1;\n\t\tint left = query(2 * ind + 1, low, mid, l, r);\n\t\tint right = query(2 * ind + 2, mid + 1, high, l, r);\n\t\treturn left & right;\n        //return seg[0];\n\t}\n// \tvoid update(ll ind, ll low, ll high, ll i, ll val) {\n// \t\tif (low == high) {\n// \t\t\tseg[ind] = val;\n// \t\t\treturn;\n// \t\t}\n\n// \t\tint mid = (low + high) >> 1;\n// \t\tif (i <= mid) update(2 * ind + 1, low, mid, i, val);\n// \t\telse update(2 * ind + 2, mid + 1, high, i, val);\n// \t\tseg[ind] = seg[2 * ind + 1] & seg[2 * ind + 2];\n// \t}\n};\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        SGTree sg(nums.size());\n        ll mn=LLONG_MAX;\n        sg.build(0,0,nums.size()-1,nums);\n        for(int i=0;i<nums.size();i++)\n        {\n            ll lr,rr=nums.size(),ans;\n            lr=i;\n            lr--;\n            rr--;\n            while(lr<rr-1)\n            {\n                ll m=lr+(rr-lr)/2;\n                ll qu=sg.query(0,0,nums.size()-1,i,m);\n                //cout<<qu<<endl;\n                    if(qu>=k)\n                    {\n                        ans=qu;\n                         lr=m;\n                    }\n                else\n                    rr=m;\n            }\n            ll x=sg.query(0,0,nums.size()-1,i,rr);\n            if(lr==i-1)\n                mn=min(mn,abs(k-x));\n                mn=min(mn,min(abs(k-ans),abs(k-x)));\n        }\n        return mn;\n    }\n};",
    "submit_ts": 1717300556.0
}