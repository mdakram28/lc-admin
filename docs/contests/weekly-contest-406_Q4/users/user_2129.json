{
    "username": "happy-rosalind2vv",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverseArray(horizontalCut);\n        reverseArray(verticalCut);\n        \n        int i = 0, j = 0;\n        long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        \n        while (i < horizontalCut.length || j < verticalCut.length) {\n            if (j >= verticalCut.length || (i < horizontalCut.length && horizontalCut[i] > verticalCut[j])) {\n                // \u6c34\u5e73\n                totalCost += (long)horizontalCut[i] * verticalPieces;\n                horizontalPieces++;\n                i++;\n            } else {\n                // \u5782\u76f4\n                totalCost += (long)verticalCut[j] * horizontalPieces;\n                verticalPieces++;\n                j++;\n            }\n        }\n        \n        return totalCost;\n    }\n    \n    private void reverseArray(int[] array) {\n        int left = 0;\n        int right = array.length - 1;\n        while (left < right) {\n            int temp = array[left];\n            array[left] = array[right];\n            array[right] = temp;\n            left++;\n            right--;\n        }\n    }\n}",
    "submit_ts": "1720926357",
    "subm_id": "546445734"
}