{
    "username": "qdd1999",
    "submission": "using i64 = int64_t;\n\nclass Solution {\npublic:\n  long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n    sort(h.begin(), h.end(), greater<int>());\n    sort(v.begin(), v.end(), greater<int>());\n    int hcnt = 0, vcnt = 0;\n    i64 ans = 0;\n    while (hcnt < m - 1 || vcnt < n - 1) {\n      if (hcnt == m - 1) {\n        ans += 1LL * v[vcnt] * (hcnt + 1);\n        ++vcnt;\n      } else if (vcnt == n - 1) {\n        ans += 1LL * h[hcnt] * (vcnt + 1);\n        ++hcnt;\n      } else {\n        i64 cost1 = 1LL * h[hcnt] * (vcnt + 1) + 1LL * v[vcnt] * (hcnt + 2);\n        i64 cost2 = 1LL * v[vcnt] * (hcnt + 1) + 1LL * h[hcnt] * (vcnt + 2);\n        if (cost1 < cost2) {\n          ans += 1LL * h[hcnt] * (vcnt + 1);\n          ++hcnt;\n        } else {\n          ans += 1LL * v[vcnt] * (hcnt + 1);\n          ++vcnt;\n        }\n      }\n    }\n    return ans;\n  }\n};",
    "submit_ts": "1720925569",
    "subm_id": "1320259092"
}