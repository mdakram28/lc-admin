{
    "username": "bhargav_gande",
    "submission": "class Solution {\npublic:\n\n    set<int> r,c;\n\n    bool compatible(pair<int,int> &p1, pair<int,int> &p2, pair<int,int> &p3){\n        r.clear(),c.clear();\n        r.insert(p1.first);\n        c.insert(p1.second);\n        r.insert(p2.first);\n        c.insert(p2.second);\n        r.insert(p3.first);\n        c.insert(p3.second);\n        return r.size() == 3 && c.size() == 3;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long maxi = LLONG_MIN,sum = 0, n,m;\n        vector<pair<long long,pair<int,int>>> v;\n        n = board.size();\n        m = board[0].size();\n        for(int i = 0; i < n; i++ ){\n            for( int j = 0; j < m; j++ ){\n                v.push_back({board[i][j],{i,j}});\n            }\n        }\n        sort(v.rbegin(),v.rend());\n        int total = v.size();\n        pair<int,int> temp =  {1000,1000};\n        for( int i = 0; i < total; i++ ){\n            total = v.size();\n            for( int j = i+1; j < total; j++ ){\n                if( not compatible(v[i].second,v[j].second, temp) ) continue;\n                for( int k = j+1; k < total; k++){\n                    if( compatible(v[i].second,v[j].second,v[k].second) ){\n                        sum = v[i].first + v[j].first + v[k].first;\n                        maxi = max(maxi, sum);\n                        total = min(total,k);\n                        break;\n                    }\n                }\n            }\n        }\n        return maxi;\n    }\n};",
    "submit_ts": "1723909127",
    "subm_id": "1359180632"
}