{
    "username": "regain0001",
    "submission": "class Solution {\n    #define ll long long\n#define _for(i,a,b) for(ll i=(a);i<=(b);++i)\n#define _for2(i,a,b) for(ll i=(a);i>=(b);--i)\n#define pb emplace_back\n#define fi first\n#define se second\n#define all(x) x.begin(),x.end()\n#define sz(x) (int)x.size()\n#define MAXN 100005\n#define cy std::cout<<\"Yes\\n\"\n#define cn std::cout<<\"No\\n\"\n#ifndef M_PI\n#define M_PI 3.14159265358979323846\n#endif // !M_PI\n#ifndef NOWMS\n#define NOWMS                                                   \\\n    std::chrono::duration_cast<std::chrono::milliseconds>(      \\\n        std::chrono::system_clock::now().time_since_epoch())\\\n        .count()\n#endif // !NOWMS\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing plll = pair<pll, ll>;\nusing pllll = pair<pll, pll>;\nusing pl2 = pair<plll, plll>;\npublic:\n    template<class T>\n    void printff(vector<T>& v) {\n        for (auto k : v) cout << k << ' ';\n        cout << endl;\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        ll n=sz(edges)+1;\n        vector<int>ans(n);\n        vector<int> mark(n);//1\u4ee3\u8868\u5076\u6570\uff0c\u5076\u6570\u4ee3\u8868\u8ddd\u79bb2\n        _for(i,0,n-1){\n            if(i&1){\n                \n            }else{\n                mark[i]=1;\n            }\n        }\n        vector<vector<int>>e(n);\n        _for(i,0,n-2){\n            ll u=edges[i][0],v=edges[i][1];\n            e[u].pb(v);\n            e[v].pb(u);\n        }\n        vector<ll>v1(n);//\u5305\u542b\u81ea\u5df1\u7684\u6700\u5927\u6df1\u5ea6\n        auto dfs1=[&](ll x,ll fa,auto dfs1)->void{ // calc v1\n            ll res=0;\n            for(auto& nx:e[x]){\n                if(nx==fa) continue;\n                dfs1(nx,x,dfs1);\n                res=max(res,v1[nx]);\n            }\n            if(mark[x]){\n                res+=2;\n            }else{\n                res++;\n            }\n            v1[x]=res;\n        };\n        dfs1(0,-1,dfs1);\n       // printff(v1);\n        auto dfs2=[&](ll x,ll fa,auto dfs2,ll yu)->void{\n            ll res=yu;\n            ll cida=0;\n            for(auto &nx:e[x]){\n                if(nx==fa)continue;\n                //dfs2(nx,x,dfs2);//?\n                if(v1[nx]>=res){\n                    cida=res;\n                    res=v1[nx];\n                }else if(v1[nx]>=cida){\n                    cida=v1[nx];\n                }\n            }\n            ans[x]=res;\n            ll duo=1;\n            if(mark[x]) duo=2;\n            for(auto &nx:e[x]){\n                if(nx==fa)continue;\n                ll ress=0;\n                if(v1[nx]==res){\n                    ress=cida;\n                }else{\n                    ress=res;\n                }\n                ress+=duo;\n                dfs2(nx,x,dfs2,ress);\n            }\n        };\n        dfs2(0,-1,dfs2,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722696858",
    "subm_id": "552263179"
}