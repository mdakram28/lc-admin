{
    "username": "MeetBrahmbhatt",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = (int) edges.size() + 1;\n        \n        vector<vector<int>> G(n);\n        for (auto e : edges) {\n            int u = e[0];\n            int v = e[1];\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n        \n        vector<int> in(n);\n        \n        function<void(int, int)> dfs = [&] (int u, int par) {\n            for (int to : G[u]) {\n                if (to != par) {\n                    dfs(to, u);\n                    in[u] = max(in[u], in[to] + (to % 2 == 0 ? 2 : 1));\n                }\n            }\n        };\n        dfs(0, -1);\n        \n        vector<int> ans(n);\n        \n        function<void(int, int, int)> dfs2 = [&] (int u, int par, int out) {\n            ans[u] = max(in[u], out);\n            int mx = -1, smx = -1;\n            for (int to : G[u]) {\n                if (to == par) {\n                    continue;\n                }\n                int cur = in[to] + (to % 2 == 0 ? 2 : 1);\n                if (mx <= cur) {\n                    smx = mx;\n                    mx = cur;\n                } else if (smx < cur) {\n                    smx = cur;\n                }\n            }\n            for (int to : G[u]) {\n                if (to == par) {\n                    continue;\n                }\n                int cur = in[to] + (to % 2 == 0 ? 2 : 1);\n                int nout = (cur == mx ? smx : mx);\n                nout = max(nout, out);\n                nout += (u % 2 == 0 ? 2 : 1);\n                dfs2(to, u, nout);\n            }\n        };\n        dfs2(0, -1, 0);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722697789",
    "subm_id": "1343159007"
}