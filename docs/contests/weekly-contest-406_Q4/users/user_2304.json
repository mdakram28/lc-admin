{
    "username": "yuvasree-8",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Sort the cut arrays in descending order\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        total_cost = 0\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        \n        h = 0\n        v = 0\n        \n        # Merge process to decide which cut to apply\n        while h < len(horizontalCut) and v < len(verticalCut):\n            if horizontalCut[h] >= verticalCut[v]:\n                total_cost += horizontalCut[h] * vertical_pieces\n                horizontal_pieces += 1\n                h += 1\n            else:\n                total_cost += verticalCut[v] * horizontal_pieces\n                vertical_pieces += 1\n                v += 1\n        \n        # Process remaining horizontal cuts if any\n        while h < len(horizontalCut):\n            total_cost += horizontalCut[h] * vertical_pieces\n            h += 1\n        \n        # Process remaining vertical cuts if any\n        while v < len(verticalCut):\n            total_cost += verticalCut[v] * horizontal_pieces\n            v += 1\n        \n        return total_cost\n",
    "submit_ts": "1720926749",
    "subm_id": "1320295321"
}