{
    "username": "xyz_xyz_xyz_xyz",
    "submission": "const int N = 1e5 + 10;\nclass Solution {\npublic:\n    int s[N][35];\n    int check(vector<int>& nums, int l, int r){\n        int res = 0;\n        for(int j = 0;j<32;j++){\n            if(s[r+1][j]-s[l][j]==r-l+1)res += (1<<j);\n        }\n        return res;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        for(int i = 0;i<n;i++){\n            for(int j = 0;j<32;j++){\n                if((nums[i]>>j) & 1)s[i+1][j] = s[i][j] + 1;\n                else s[i+1][j] = s[i][j];\n            }\n        }\n        long long count = 0;\n        for(int i = 0;i<n;i++){\n            int l = i, r = n - 1;\n            while(l<r){\n                int mid = (l+r)>>1;\n                if(check(nums,i,mid)<=k)r = mid;\n                else l = mid + 1;\n            }\n            int tres = l;\n            // cout << l << endl;\n            l = i, r = n - 1;\n            while(l<r){\n                int mid = (l+r+1)>>1;\n                if(check(nums,i,mid)>=k)l = mid;\n                else r = mid - 1;\n            }           \n            // cout << l << endl;\n            if(check(nums,i,tres)==k)count += l - tres + 1;\n        }\n        return count;      \n    }\n};",
    "submit_ts": "1720280805",
    "subm_id": "1311802691"
}