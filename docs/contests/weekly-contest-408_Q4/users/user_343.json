{
    "username": "CanDoFrew",
    "submission": "struct Circle {\n    double x; \n    double y;\n    double r;\n    bool TL;\n    bool BR;\n};\n\nclass Solution {\npublic:\n    bool cirCollide(Circle c1, Circle c2) {\n        double a = c1.r + c2.r;\n        double dx = c1.x - c2.x;\n        double dy = c1.y - c2.y;\n        return a * a >= (dx * dx + dy * dy);\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n\n        vector<Circle> circle_data;\n\n        for (vector<int> data : circles) {\n            double x = data[0];\n            double y = data[1];\n            double r = data[2];\n\n            bool TL, BR;\n            TL = (x - r <= 0 || y + r >= Y);\n            BR = (x + r >= X || y - r <= 0);\n\n            //cout << TL << ' ' << BR << '\\n';\n            circle_data.push_back({x,y,r,TL,BR});\n\n        }\n\n        for (int i = 0; i < circle_data.size(); i++) {\n            for (int j = i+1; j < circle_data.size(); j++) {\n                if (cirCollide(circle_data[i], circle_data[j])) {\n                    circle_data[i].TL |= circle_data[j].TL;\n                    circle_data[i].BR |= circle_data[j].BR;\n                    circle_data[j].TL |= circle_data[i].TL;\n                    circle_data[j].BR |= circle_data[i].BR;\n                }\n            }\n        }\n\n        for (Circle circle : circle_data) {\n            if (circle.TL && circle.BR) return false;\n        }\n\n        return true;\n        \n    }\n};",
    "submit_ts": "1722137073",
    "subm_id": "1335753352"
}