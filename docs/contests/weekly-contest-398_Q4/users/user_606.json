{
    "username": "U_U",
    "submission": "class Solution {\npublic:\n    unordered_map<int, int> dict[64];\n    int K;\n    int waysToReachStair(int k) {\n        K = k;             \n        return DP(1, 0);\n    }\n    \n    int64_t DP(int val, int p)\n    {\n        if (val > K + 1) return 0;\n        if (dict[p].count(val) != 0) return dict[p][val];\n        \n        int64_t ret = 0;\n        if (val == K) ++ret;\n        \n        int64_t pVal = pow2(2, p);\n        if (val - 1 >= 0)\n        {            \n            if (val - 1 == K) ++ret;\n            ret += DP(val - 1 + pVal, p + 1);\n        }                \n        ret += DP(val + pVal, p + 1);\n        \n        dict[p][val] = ret;\n        return ret;\n    }\n    \n    int64_t pow2(int val, int p)\n    {\n        if (p == 0) return 1;\n        if (p == 1) return val;\n        \n        if (p % 2 == 0)\n        {\n            int64_t ret = pow(val, p / 2);\n            return ret * ret;\n        }\n        else\n        {\n            int64_t ret = pow(val, p / 2);\n            return ret * ret * val;\n        }\n    }\n};",
    "submit_ts": 1716088765.0
}