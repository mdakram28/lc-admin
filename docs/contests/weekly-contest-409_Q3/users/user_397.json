{
    "username": "_Fake4Fun",
    "submission": "const int N = 502;\nclass Solution {\npublic:\n    int n;\n\n    vector<int> shortestDistanceAfterQueries(int _n, vector<vector<int>>& queries) {\n        n = _n;\n        vector<int> ans;\n        set<pair<int, int>> S;\n        int sum = n - 1;\n        for (auto x : queries) {\n            if (S.empty()) {\n                S.insert({x[0], x[1]});\n                sum -= x[1] - x[0] - 1;\n                ans.push_back(sum);\n                continue;\n            }\n            auto it = S.upper_bound({x[0], -1});\n            if (it != S.end() && it -> first == x[0] && it -> second >= x[1]) {\n                ans.push_back(sum);\n                continue;\n            }\n            // cout << x[0] << \" 1\" << '\\n';\n            if (it != S.begin()) {\n                auto tmp = it; tmp--;\n                if (tmp -> second >= x[1]) {\n                    ans.push_back(sum);\n                    continue;\n                }\n            }\n            // cout << x[0] << \" 2\" << '\\n';\n            while (it != S.end()) {\n                // cout << it -> first << ' ' << it -> second << '\\n';\n                if (it -> second <= x[1]) {\n                    sum += it -> second - it -> first - 1;\n                    it = S.erase(it);\n                }\n                else break;\n            }\n            S.insert({x[0], x[1]});\n            sum -= x[1] - x[0] - 1;\n            ans.push_back(sum);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740426",
    "subm_id": "1343719477"
}