{
    "username": "coleworld223",
    "submission": "struct Node {\n  Node* lft = NULL;\n  Node* rht = NULL;\n  int l, r, v, lzy;\n  Node(int _l, int _r) {\n    l = _l;\n    r = _r;\n    v = lzy = 0;\n  }\n  void extend() {\n    if (!lft && l + 1 <= r) {\n      int mid = (l + r) >> 1;\n      lft = new Node(l, mid);\n      rht = new Node(mid + 1, r);\n    }\n  }\n  void push() {\n    if (lzy == 0) return;\n    v += (r - l + 1) * lzy;\n    if (l + 1 <= r) {\n      extend();\n      lft ->  lzy += lzy;\n      rht -> lzy += lzy;\n    }\n    lzy = 0;\n  }\n  void put(int ql, int qr, int x) {\n    push();\n    if (l >= ql && r <= qr) {\n      lzy += x;\n      push();\n      return;\n    }\n    extend();\n    int mid = (l + r) >> 1;\n    if (ql <= mid) lft -> put(ql, qr, x);\n    if (qr >= mid + 1) rht -> put(ql, qr, x);\n    lft -> push();\n    rht -> push();\n    v = (lft -> v + rht -> v);\n  }\n  int qry(int ql, int qr) {\n    push();\n    if (l >= ql && r <= qr) {\n      return v;\n    }\n    extend();\n    int res = 0;\n    int mid = (l + r) >> 1;\n    if (ql <= mid) res += lft -> qry(ql, qr);\n    if (qr >= mid + 1) res += rht -> qry(ql, qr);\n    return res;\n  }\n  \n};\nclass Solution {\npublic:\n    const int siz = 1e5;\n    int minChanges(vector<int>& nums, int k) {\n      int n = nums.size();\n      vector <vector <int>> ind (siz + 1);\n      vector <int> l (n), r (n);\n      vector <int> d;\n      vector <int> cnt (siz + 5);\n      for (int i = 0; i < n / 2; i++) {\n        ind[abs(nums[i] - nums[n - i - 1])].push_back(i);\n        int x = nums[i], y = nums[n - i - 1];\n        d.push_back(abs(x - y));\n        l[i] = max(0, min({x - k, y - k, abs(k - x), abs(k - y)}));\n        r[i] = max({x, y, abs(k - x), abs(k - y)});\n        cnt[l[i]] += 1;\n        cnt[r[i] + 1] -= 1;\n        // cout << x << ' ' << y << '\\n';\n        // cout << l[i] << ' ' << r[i] << '\\n';\n      }\n      \n      for (int i = 1; i <= siz; i++) {\n        cnt[i] += cnt[i - 1];\n      }\n      \n      int ans = n;\n      for (int m : d) {\n        int z = ind[m].size();\n        int o = cnt[m];\n        for (int id : ind[m]) {\n          if (l[id] <= m && r[id] >= m) {\n            o--;\n          }\n        }\n        // cout << m << ' ' << o << '\\n';\n        int tw = n / 2 - (z + o);\n        // cout << m << ' ' << o << ' ' << tw << '\\n';\n        ans = min(ans, tw * 2 + o);\n      }\n      return ans;\n        \n    }\n};",
    "submit_ts": "1721489086",
    "subm_id": "1327442433"
}