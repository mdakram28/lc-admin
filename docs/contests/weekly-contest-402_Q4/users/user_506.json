{
    "username": "73489",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        int block_size = sqrt(n) + 1;\n        vector<int> block_peak_count(block_size, 0);\n        vector<int> answer;\n\n        // \u8f85\u52a9\u51fd\u6570\u5224\u65ad\u662f\u5426\u662f\u5cf0\u503c\n        auto isPeak = [&](vector<int>& nums, int i) {\n            if (i <= 0 || i >= nums.size() - 1) return false;\n            return nums[i] > nums[i-1] && nums[i] > nums[i+1];\n        };\n\n        // \u521d\u59cb\u5316\u5757\u7684\u5cf0\u503c\u8ba1\u6570\n        for (int i = 1; i < n - 1; ++i) {\n            if (isPeak(nums, i)) {\n                block_peak_count[i / block_size]++;\n            }\n        }\n\n        for (auto& query : queries) {\n            if (query[0] == 1) {\n                int li = query[1];\n                int ri = query[2];\n                int peak_count = 0;\n\n                int start_block = li / block_size;\n                int end_block = ri / block_size;\n\n                if (start_block == end_block) {\n                    // \u540c\u4e00\u5757\u5185\n                    for (int i = li + 1; i < ri; ++i) {\n                        if (isPeak(nums, i)) {\n                            peak_count++;\n                        }\n                    }\n                } else {\n                    // \u8de8\u5757\u5904\u7406\n                    for (int i = li + 1; i < (start_block + 1) * block_size; ++i) {\n                        if (isPeak(nums, i)) {\n                            peak_count++;\n                        }\n                    }\n                    for (int i = start_block + 1; i < end_block; ++i) {\n                        peak_count += block_peak_count[i];\n                    }\n                    for (int i = end_block * block_size; i < ri; ++i) {\n                        if (isPeak(nums, i)) {\n                            peak_count++;\n                        }\n                    }\n                }\n\n                answer.push_back(peak_count);\n\n            } else if (query[0] == 2) {\n                int indexi = query[1];\n                int vali = query[2];\n\n                int block_index = indexi / block_size;\n\n                // \u66f4\u65b0\u524d\u540e\u5f71\u54cd\u7684\u5cf0\u503c\u72b6\u6001\n                for (int i = indexi - 1; i <= indexi + 1; ++i) {\n                    if (i > 0 && i < n - 1) {\n                        if (isPeak(nums, i)) {\n                            block_peak_count[i / block_size]--;\n                        }\n                    }\n                }\n\n                nums[indexi] = vali;\n\n                for (int i = indexi - 1; i <= indexi + 1; ++i) {\n                    if (i > 0 && i < n - 1) {\n                        if (isPeak(nums, i)) {\n                            block_peak_count[i / block_size]++;\n                        }\n                    }\n                }\n            }\n        }\n\n        return answer;\n    }\n};\n",
    "submit_ts": "1718506751",
    "subm_id": "539777021"
}