{
    "username": "kyuukyuusha",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\n// https://github.com/kth-competitive-programming/kactl/blob/main/content/data-structures/RMQ.h\ntemplate<class T>\nstruct RMQ {\n\tvector<vector<T>> jmp;\n\tRMQ(const vector<T>& V) : jmp(1, V) {\n\t\tfor (int pw = 1, k = 1; pw * 2 <= sz(V); pw *= 2, ++k) {\n\t\t\tjmp.emplace_back(sz(V) - pw * 2 + 1);\n\t\t\trep(j,0,sz(jmp[k]))\n\t\t\t\tjmp[k][j] = jmp[k - 1][j] & jmp[k - 1][j + pw];\n\t\t}\n\t}\n\tT query(int a, int b) {\n\t\tassert(a < b); // or return inf if a == b\n\t\tint dep = 31 - __builtin_clz(b - a);\n\t\treturn jmp[dep][a] & jmp[dep][b - (1 << dep)];\n\t}\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        const int n = nums.size();\n        RMQ rmq(nums);\n        \n        long long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            int lo, hi, mid;\n            // find lower bound of x for nums[i:x] st AND-sum is k\n            int lower = n+5;\n            lo = i+1, hi = n;\n            while (lo <= hi) {\n                mid = lo + (hi - lo) / 2;\n                if (rmq.query(i, mid) <= k) hi = (lower = mid) - 1;\n                else lo = mid + 1;\n            }\n            // find upper bound of x for nums[i:x] st AND-sum is k\n            int upper = n+1;\n            lo = i+1, hi = n;\n            while (lo <= hi) {\n                mid = lo + (hi - lo) / 2;\n                // printf(\"[%i,%i] m=%i \\n\", lo, hi, mid);\n                if (rmq.query(i, mid) < k) hi = (upper = mid) - 1;\n                else lo = mid + 1;\n            }\n            \n            // std::cout << \"i=\" << i << \" [\" << lower << \",\" << upper << \")\\n\";\n            \n            ans += std::max(0, upper - lower);\n        }\n        // std::cout << std::endl;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720278759",
    "subm_id": "1311723005"
}