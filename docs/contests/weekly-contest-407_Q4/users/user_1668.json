{
    "username": "kalki_G",
    "submission": "class Solution {\npublic:\n    long long minops(int l, int r, vector<int> &arr) {\n        cout << l << \" \" << r << endl;\n        if(l > r) return 0;\n        if(l == r) return arr[l];\n        int mn = *min_element(arr.begin() + l, arr.begin() + r + 1);\n        vector<int> temp;\n        long long ans = mn;\n        for(int i = l; i <= r; i++) {\n            if(arr[i] != mn) temp.push_back(i);\n            else {\n                if(!temp.empty()) ans += minops(temp[0], temp.back(), arr) - mn;\n                temp.clear(); \n            }\n        }\n        if(!temp.empty()) ans += minops(temp[0], temp.back(), arr) - mn;\n        return ans;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> arr;\n        for(int i = 0; i < nums.size(); i++) arr.push_back(abs(target[i] - nums[i]));\n        long long ans = 0;\n        long long sign = 0;\n        vector<int> temp;\n        for(int i = 0; i < arr.size(); i++) {\n            int x = target[i] - nums[i];\n            if(sign == 0 || x == 0) {\n                if(!temp.empty()) ans += minops(temp[0], temp.back(), arr);\n                temp.clear();\n                if(x != 0) {\n                    sign = x / abs(x);\n                    temp.push_back(i); \n                } \n                else sign = 0;\n            } else if(sign * x < 0) {\n                ans += minops(temp[0], temp.back(), arr);\n                temp.clear();\n                temp.push_back(i);\n                sign *= -1;\n            }\n            else temp.push_back(i);    \n        }   \n        if(!temp.empty()) ans += minops(temp[0], temp.back(), arr);\n        return ans;\n    }\n};",
    "submit_ts": "1721533152",
    "subm_id": "1328002494"
}