{
    "username": "Bandaru_16",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n     sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    int hIndex = 0, vIndex = 0;\n    int hSegments = 1, vSegments = 1;\n    long long totalCost = 0;\n\n    while (hIndex < horizontalCut.size() || vIndex < verticalCut.size()) {\n        if (vIndex == verticalCut.size() || (hIndex < horizontalCut.size() && horizontalCut[hIndex] >= verticalCut[vIndex])) {\n            totalCost += (long long)(horizontalCut[hIndex]) * vSegments;\n            hSegments++;\n            hIndex++;\n        } else {\n            totalCost += (long long)(verticalCut[vIndex]) * hSegments;\n            vSegments++;\n            vIndex++;\n        }\n    }\n\n    return totalCost;   \n    }\n};",
    "submit_ts": "1720926566",
    "subm_id": "1320289995"
}