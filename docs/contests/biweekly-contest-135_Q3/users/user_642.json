{
    "username": "venkatkri5h",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int left = 0, right = nums.length - 1;\n        Map<Integer, Integer> diffToCount = new HashMap<>();\n        while(left < right){\n            int diff = Math.abs(nums[left] - nums[right]);\n            diffToCount.put(diff, diffToCount.getOrDefault(diff, 0) + 1);\n            left++;\n            right--;\n        }\n        Map<Integer, Integer> countToMinDiff = new HashMap<>();\n        for(Map.Entry<Integer, Integer> entry: diffToCount.entrySet()){\n            int diff = entry.getKey(), count = entry.getValue();\n            countToMinDiff.put(count, Math.min(diff, countToMinDiff.getOrDefault(count, Integer.MAX_VALUE)));\n        }\n        // System.out.print(countToMinDiff);\n        int answer = nums.length;\n        for(int diff: countToMinDiff.values()){\n            answer = Math.min(answer, getChanges(nums, k, diff));\n        }\n        return answer;\n    }\n    \n    public int getChanges(int[] nums, int k, int diff){\n        int left = 0, right = nums.length - 1;\n        int answer = 0;\n        while(left < right){\n            int cdiff = Math.abs(nums[left] - nums[right]);\n            if(cdiff != diff){\n                long min = Math.min(nums[left], nums[right]), max = Math.max(nums[left], nums[right]);\n                if(min + diff <= k || max - diff >= 0)\n                    answer += 1;\n                else\n                    answer += 2;\n            }\n            left++;\n            right--;\n        }\n        return answer;\n    }\n}",
    "submit_ts": "1721488822",
    "subm_id": "1327434310"
}