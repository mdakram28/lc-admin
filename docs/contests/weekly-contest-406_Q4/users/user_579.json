{
    "username": "rajaniket_",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n    \n        int h = horizontalCut.length - 1;\n        int v = verticalCut.length - 1;\n        \n        int hPieces = 1;\n        int vPieces = 1;\n        \n        long totalCost = 0;\n        \n        while (h >= 0 && v >= 0) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += (long) horizontalCut[h] * vPieces;\n                hPieces++;\n                h--;\n            } else {\n                totalCost += (long) verticalCut[v] * hPieces;\n                vPieces++;\n                v--;\n            }\n        }\n        \n        while (h >= 0) {\n            totalCost += (long) horizontalCut[h] * vPieces;\n            hPieces++;\n            h--;\n        }\n        \n        while (v >= 0) {\n            totalCost += (long) verticalCut[v] * hPieces;\n            vPieces++;\n            v--;\n        }\n        \n        return totalCost;\n        \n    }\n}",
    "submit_ts": "1720925362",
    "subm_id": "1320252130"
}