{
    "username": "txycodelc",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        \n        m, n = len(grid), len(grid[0])\n        \n        arr = [False] * (m * n)\n        \n        ans = 0\n        p01, p11 = 0, 0\n        for idx, k in enumerate(arr):\n            if k:\n                # print(f'skip {idx}')\n                continue\n            i, j = idx // n, idx % n\n            arr[idx] = True\n            v = grid[i][j]\n\n            if i != m - i - 1 and j != n - j - 1:\n                \n                arr[i * n + n - j - 1] = True\n                arr[(m - i - 1) * n  + j] = True\n                arr[(m - i - 1) * n + n - j - 1] = True\n                v1 = grid[i][n - j - 1]\n                v2 = grid[m - i - 1][j]\n                v3 = grid[m - i - 1][n - j - 1]\n                one = v + v1 + v2 + v3\n                ans += min(one, 4 - one)\n            elif i != m - i - 1:\n                arr[(m - i - 1) * n + j] = True\n                v1 = grid[m - i - 1][j]\n                if v1 != v:\n                    p01 += 1\n                elif v == 1:\n                    p11 += 1\n                \n            \n            elif j != n - j - 1:\n                arr[i * n + n - j - 1] = True\n                v1 = grid[i][n - j - 1]\n                if v1 != v:\n                    p01 += 1\n                elif v == 1:\n                    p11 += 1\n                \n            else:\n                ans += grid[i][j]\n        # print(ans)\n        # print(arr)\n        \n        if p11 % 2 and p01 >= 1:\n            ans += 1\n            p11 -= 1\n            p01 -= 1\n        ans += p01 + p11 % 2 * 2\n        \n        return ans\n                \n            \n            \n            \n            \n            \n        ",
    "submit_ts": "1722699363",
    "subm_id": "1343209376"
}