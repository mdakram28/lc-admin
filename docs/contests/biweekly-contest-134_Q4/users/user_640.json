{
    "username": "a_good_loser",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    \n    ll countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll res = 0;\n        unordered_map<int, ll> mp;\n        for (auto i : nums) {\n            unordered_map<int, ll> mp2;\n            \n            for (auto [j, k] : mp) {\n                mp2[i & j] += k;\n            }\n            mp2[i]++;\n            \n            \n            if (mp2.contains(k)) res += mp2[k];\n            \n            \n            // for (auto [j, k] : mp2) {\n            //     cout << j << \" \" << k << \"\\n\";\n            // }\n            // cout << i << \" \" << mp2[k] << \"?\\n--------------\\n\\n\";\n            \n            mp = std::move(mp2);\n            \n        }\n        return res;\n    }\n};\n/*\n[1,1,1]\n1\n[1,1,2]\n1\n[1,2,3]\n2\n[1,9,9,7,4]\n1\n*/",
    "submit_ts": "1720279198",
    "subm_id": "544566408"
}