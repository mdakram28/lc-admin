{
    "username": "jushuai_lfx",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long countSubarrays(vector<int>& n, int k) {\n        int size = n.size();\n        vector<int> v(size, 0);\n        for (int i = 0; i < size; ++i) {\n            if ((n[i] & k) == k) {\n                v[i] = 1;\n            } \n        }\n        vector<int> left(size, 0);\n        queue<int> q;\n        for (int i = 0; i < size; ++i) {\n            if (v[i] == 0) {\n                while (q.empty() == 0) {\n                    left[q.front()] = q.size();\n                    q.pop();\n                }\n            } else {\n                q.push(i);\n            }\n        }\n        while (q.empty() == 0) {\n            left[q.front()] = q.size();\n            q.pop();\n        }\n        vector<queue<int>> log(32);\n        for (int i = 0; i < size; ++i) {\n            if ((n[i] & k) != k) {\n                continue;\n            }\n            for (int j = 0; j < 32; ++j) {\n                if ((n[i] & (1 << j)) == 0) {\n                    log[j].push(i);\n                }\n            }\n        }\n        ll ans = 0;\n        for (int i = 0; i < size; ++i) {\n            if ((n[i] & k) != k) {\n                continue;\n            }\n            int bound = i;\n            for (int j = 0; j < 32; ++j) {\n                if (((k & (1 << j)) == 0) && ((n[i] & (1 << j)))) {\n                    // cout << \"**\" << j << \" \" << i<< endl;\n                    while (log[j].empty() == 0 && log[j].front() <= i) {\n                        log[j].pop();\n                    }\n                    bound = max(bound, log[j].empty() ? INT_MAX : log[j].front());\n                    // cout << \"**\" << bound << endl;\n                }\n            }\n            if (bound > left[i] + i - 1) {\n                continue;\n            }\n            // cout << i << \" \" << bound << \" \" << left[i] << endl;\n            ans += (left[i] + i - 1 - bound + 1);\n            // cout << ans << endl;\n        }\n        return ans;\n        \n    }\n/*\n[1,1,1]\n1\n[1,1,2]\n1\n[1,2,3]\n2\n[0,2,8,7,6]\n5\n*/\n};",
    "submit_ts": "1720279296",
    "subm_id": "544566847"
}