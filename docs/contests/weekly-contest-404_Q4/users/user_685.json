{
    "username": "ritikjainrj18",
    "submission": "class Solution {\npublic:\n    const int INF=10000000;\n    int f=-1,s=-1;\n    void dfs(int c,int p,vector<int>g[],vector<int>&dis){\n        for(auto i:g[c]){\n            if(i!=p){\n                dis[i]=dis[c]+1;\n                dfs(i,c,g,dis);\n            }\n        }\n    }\n    \n    vector<int> dis_fun(vector<vector<int>>&e){\n        int n=e.size();\n        vector<int>g[n+2];\n        for(auto i:e){\n            g[i[0]].push_back(i[1]);\n            g[i[1]].push_back(i[0]);\n        }\n        \n        vector<int>dis(n+1,INF);\n        dis[0]=0;\n        dfs(0,-1,g,dis);\n        int cur=0;\n        for(int i=0;i<=n;i++){\n            if(dis[i]!=INF){\n                if(dis[i]>cur){\n                    cur=dis[i];\n                    f=i;\n                }\n            }\n        }\n        \n        \n        \n        \n        vector<int>disf(n+1,INF);\n        disf[f]=0;\n        dfs(f,-1,g,disf);\n        \n        \n        \n        \n        \n        cur=0;\n        for(int i=0;i<=n;i++){\n            if(disf[i]!=INF){\n                if(disf[i]>cur){\n                    cur=disf[i];\n                    s=i;\n                }\n            }\n        }\n        \n        \n        vector<int>diss(n+1,INF);\n        diss[s]=0;\n        dfs(s,-1,g,diss);\n        \n        \n        \n        // for(auto i:diss) cout<<i<<\" \";\n        // cout<<endl;\n        \n        \n        for(int i=0;i<=n;i++) diss[i]=max(diss[i],disf[i]);\n        return diss;\n        \n        \n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n           vector<int>disf,diss;\n           if(edges1.size()==0){\n               disf={0};\n           }else{\n               disf=dis_fun(edges1);\n           }\n        \n        \n           if(edges2.size()==0){\n               diss={0};\n           }else{\n               diss=dis_fun(edges2);\n           }\n           \n        \n        \n//            for(auto i:disf){\n//                cout<<i<<\" \";\n//            }\n//            cout<<endl;\n//            for(auto i:diss){\n//                cout<<i<<\" \";\n//            }\n//            cout<<endl;\n        \n        \n        \n        \n        \n        \n        \n        \n           sort(disf.begin(),disf.end());\n           sort(diss.begin(),diss.end());   \n           int ans=disf[0]+diss[0]+1;\n           ans=max(ans,disf.back());\n           ans=max(ans,diss.back());\n\n           return ans;\n\n    }\n};\n\n\n\n\n// Input:\n// [[0,1],[2,0],[3,2],[3,6],[8,7],[4,8],[5,4],[3,5],[3,9]]\n// [[0,1],[0,2],[0,3]]\n// Output:\n// 6\n// Expected:\n// 7",
    "submit_ts": 1719719533.0
}