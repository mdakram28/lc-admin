{
    "username": "krishnash1355",
    "submission": "class Solution {\npublic:\n    bool bfs(int start, int first, int second, int n, vector<vector<int>> &v) {\n        queue<int> q;\n        vector<int> visited(n + 4, 0);\n        q.push(start);\n        visited[start] = 1;\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n            for (int x : v[node]) {\n                if (visited[x]) continue;\n                q.push(x);\n                visited[x] = 1;\n            }\n        }\n        return visited[first] || visited[second];\n    };\n\n    bool canReachCorner(int x, int y, vector<vector<int>>& circles) {\n        std::ios::sync_with_stdio(false);\n        std::cin.tie(nullptr);\n        int n = circles.size();\n        vector<vector<int>> v(n + 4);\n        int curr = 0;\n        for (auto i : circles) {\n            int u = i[0]; int w = i[1]; int r = i[2];\n            if (u <= r) {\n                v[curr].push_back(n);\n                v[n].push_back(curr);\n            }\n            if (x - u <= r) {\n                v[curr].push_back(n + 2);\n                v[n + 2].push_back(curr);\n            }\n            if (w <= r) {\n                v[curr].push_back(n + 1);\n                v[n + 1].push_back(curr);\n            }\n            if (y - w <= r) {\n                v[curr].push_back(n + 3);\n                v[n + 3].push_back(curr);\n            }\n            int next = 0;\n            for (int j = curr + 1; j < n; j++) {\n                double used = sqrtl(1ll * (u - circles[j][0]) * (u - circles[j][0]) + (1ll * (w - circles[j][1]) * (w - circles[j][1])));\n                int total = r + circles[j][2];\n                if (total >= used) {\n                    v[curr].push_back(j);\n                    v[j].push_back(curr);\n                }\n            }\n            curr++;\n        }\n        bool ans = false;\n        ans |= bfs(n, n + 1, n + 2, n, v);\n        ans |= bfs(n + 3, n + 2, n + 1, n, v);\n        return !ans;\n    }\n};",
    "submit_ts": "1722138946",
    "subm_id": "1335803825"
}