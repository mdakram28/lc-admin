{
    "username": "d_ananta_",
    "submission": "class Solution {\npublic:\n    void merge(int &si, vector<vector<vector<long long>>> &st) {\n        for(int i = 0; i < 2; i++) {\n            for(int j = 0; j < 2; j++) {\n                st[si][i][j] = max(st[2*si+1][i][1] + st[2*si+2][1][j], max(st[2*si+1][i][0] + st[2*si+2][1][j], st[2*si+1][i][1] + st[2*si+2][0][j]));\n            }\n        }\n    }\n    void build(int sl, int sr, int si, vector<int> &nums, vector<vector<vector<long long>>> &st) {\n        if(sl == sr) {\n            st[si][0][0] = max(0, nums[sl]);\n            return;\n        }\n        int sm = sl+sr >> 1;\n        build(sl, sm, 2*si+1, nums, st);\n        build(sm+1, sr, 2*si+2, nums, st);\n        merge(si, st);\n    }\n    long long query(vector<vector<vector<long long>>> &st) {\n        long long ret = 0;\n        for(int i = 0; i < 2; i++) {\n            for(int j = 0; j < 2; j++) {\n                ret = max(ret, st[0][i][j]);\n            }\n        }\n        return ret;\n    }\n    void update(int pos, int x, int sl, int sr, int si, vector<vector<vector<long long>>> &st) {\n        if(sl == sr) {\n            st[si][0][0] = max(0, x);\n            return;\n        }\n        int sm = sl+sr >> 1;\n        if(pos <= sm) update(pos, x, sl, sm, 2*si+1, st);\n        else update(pos, x, sm+1, sr, 2*si+2, st);\n        merge(si, st);\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        const long long MOD = 1e9 + 7;\n        int n = nums.size();\n        vector<vector<vector<long long>>> st(4*n+5, vector<vector<long long>>(2, vector<long long>(2, 0)));\n        long long ans = 0;\n        build(0, n-1, 0, nums, st);\n        for(auto &i: queries) {\n            update(i[0], i[1], 0, n-1, 0, st);\n            (ans += query(st) % MOD) %= MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716692973",
    "subm_id": "1268070972"
}