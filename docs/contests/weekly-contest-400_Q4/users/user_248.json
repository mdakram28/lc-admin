{
    "username": "peicd7699",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        \n        curr = [0]* 32\n        \n        def helper(v):\n            res = []\n            for i in range(32):\n                res += [v&1]\n                v >>= 1\n            \n            return res\n        \n        def add(curr, arr):\n            return [v1+v2 for v1,v2 in zip(curr, arr)]\n        \n        def minus(curr, arr):\n            return [v1-v2 for v1,v2 in zip(curr, arr)]\n        \n        def getv(arr, target):\n            res = 0\n            for i,v in enumerate(arr):\n                res |= ((v>=target)<<i)\n            return res\n        \n        i = 0\n        ret = float('inf')\n        n = len(nums)\n        for j,v in enumerate(nums):\n            arr = helper(v)\n            curr = add(curr, arr)\n            \n            vv = getv(curr, j-i+1)\n            ret = min(ret, abs(k-vv))\n            # print(j,v,vv)\n            while vv < k and i<=j:\n                # print(i,j,v,vv)\n                arri = helper(nums[i])\n                curr = minus(curr, arri)\n                i += 1\n                vv = getv(curr, j-i + 1)\n                ret = min(ret, abs(k-vv))\n                \n            # print(j,v,i,ret)\n        return ret\n                \n                \n            \n            \n            \n        \n        ",
    "submit_ts": "1717297411",
    "subm_id": "1274741591"
}