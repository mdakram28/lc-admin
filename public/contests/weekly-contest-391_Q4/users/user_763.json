{
    "username": "0222_",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        vector<int> x(n), y(n);\n        for (int i = 0; i < n; i++) x[i] = p[i][0], y[i] = p[i][1];\n        \n        int u, v;\n        auto gao = [&](int k) {\n            int a1 = -2e8, b1 = -2e8, a2 = 2e8, b2 = 2e8;\n            int u1 = -1, u2 = -1, v1 = -1, v2 = -1;\n            for (int i = 0; i < n; i++) if (i != k) {\n                if (x[i] + y[i] > a1) {\n                    a1 = x[i] + y[i];\n                    u1 = i;\n                }\n                if (x[i] + y[i] < a2) {\n                    a2 = x[i] + y[i];\n                    u2 = i;\n                }\n                if (x[i] - y[i] > b1) {\n                    b1 = x[i] - y[i];\n                    v1 = i;\n                }\n                if (x[i] - y[i] < b2) {\n                    b2 = x[i] - y[i];\n                    v2 = i;\n                }\n                // a1 = max(a1, x[i] + y[i]), a2 = min(a2, x[i] + y[i]);\n                // b1 = max(b1, x[i] - y[i]), b2 = min(b2, x[i] - y[i]);\n            } \n            int ans = a1 - a2;\n            u = u1, v = u2;\n            if (b1 - b2 > ans) {\n                ans = b1 - b2;\n                u = v1, v = v2;\n            }\n            return max(a1 - a2, b1 - b2);\n        };\n        \n        auto check = [&](int k) {\n            int maxi = 0;\n            for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) {\n                if (i != k && j != k) maxi = max(maxi, abs(x[i] - x[j]) + abs(y[i] - y[j]));\n            }\n            return maxi;\n        };\n        \n        // cout << gao(-1) << \" \" << check(-1) << '\\n';\n        // cout << \"u= \" << u << \", v= \" << v << '\\n';\n        \n        gao(-1);\n        int c = u, d = v, max1 = gao(c), max2 = gao(d);\n        // cout << \"u= \" << u << ' ' << max1 << '\\n';\n        // cout << \"v= \" << v << ' ' << max2 << '\\n';\n        return min(max1, max2);\n    }\n};"
}