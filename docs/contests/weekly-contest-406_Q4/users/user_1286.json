{
    "username": "onichaan",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        def dfs(h: int, v: int, horizontalPieces: int, verticalPieces: int) -> int:\n            if h == len(horizontalCut):\n                return sum(verticalCut[v:]) * horizontalPieces\n            if v == len(verticalCut):\n                return sum(horizontalCut[h:]) * verticalPieces\n            \n            if horizontalCut[h] > verticalCut[v]:\n                return horizontalCut[h] * verticalPieces + dfs(h + 1, v, horizontalPieces + 1, verticalPieces)\n            else:\n                return verticalCut[v] * horizontalPieces + dfs(h, v + 1, horizontalPieces, verticalPieces + 1)\n        \n        return dfs(0, 0, 1, 1)",
    "submit_ts": "1720925867",
    "subm_id": "1320268776"
}