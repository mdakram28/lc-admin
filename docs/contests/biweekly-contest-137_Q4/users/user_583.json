{
    "username": "Dev Mittal",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        \n        vector<vector<pair<int, int>>> top3(n);\n        for (int j = 0; j < n; ++j) {\n            for (int i = 0; i < m; ++i) {\n                top3[j].push_back({board[i][j], i});\n            }\n            sort(top3[j].rbegin(), top3[j].rend());\n            if (top3[j].size() > 3) top3[j].resize(3);\n        }\n        \n        long long maxSum = LLONG_MIN;\n        \n        for (int c1 = 0; c1 < n - 2; ++c1) {\n            for (int c2 = c1 + 1; c2 < n - 1; ++c2) {\n                for (int c3 = c2 + 1; c3 < n; ++c3) {\n\n                    for (auto [v1, r1] : top3[c1]) {\n                        for (auto [v2, r2] : top3[c2]) {\n                            if (r2 == r1) continue;\n                            for (auto [v3, r3] : top3[c3]) {\n                                if (r3 != r1 && r3 != r2) {\n                                    maxSum = max(maxSum, (long long)v1 + v2 + v3);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n};",
    "submit_ts": "1723909667",
    "subm_id": "1359201199"
}