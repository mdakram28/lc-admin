{
    "username": "omega2279",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        int hptr = 0, vptr = 0;\n        long long sum = 0;\n        int hori_parts = 1, verti_parts = 1;\n\n        while(hptr<m-1 && vptr<n-1){\n            int horiCut = horizontalCut[hptr];\n            int vertiCut = verticalCut[vptr];\n            if(horiCut > vertiCut){\n                sum += horiCut*verti_parts;\n                hori_parts++;\n                hptr++;\n            }\n            else if(vertiCut > horiCut){\n                sum += vertiCut*hori_parts;\n                verti_parts++;\n                vptr++;\n            }\n            else{\n                if(m<=n){\n                    sum += horiCut*verti_parts;\n                    hori_parts++;\n                    hptr++;\n                }\n                else{\n                    sum += vertiCut*hori_parts;\n                    verti_parts++;\n                    vptr++;\n                }\n            }\n        }\n        while(hptr<m-1 || vptr<n-1){\n            if(vptr<n-1) sum += verticalCut[vptr++]*m;\n            else sum += horizontalCut[hptr++]*n;\n        }\n\n        return sum;\n    }\n};",
    "submit_ts": "1720926494",
    "subm_id": "1320287948"
}