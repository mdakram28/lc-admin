{
    "username": "vansh_00_7",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        if(m == 1 && n == 1) return 0;\n        sort(h.begin(), h.end());\n        sort(v.begin(), v.end());\n        vector<int> hpoints = {m};\n        vector<int> vppoints = {n};\n        int hind = 0;\n        int vind = 0;\n        long long cost = 0;\n        \n        while (hind < m - 1 || vind < n - 1) {\n            if (vind == n - 1 || (hind < m - 1 && h[hind] < v[vind])) {\n                cost += h[hind] * vppoints.back();\n                hpoints.push_back(hpoints.back() - 1);\n                hind++;\n            } else {\n                cost += v[vind] * hpoints.back();\n                vppoints.push_back(vppoints.back() - 1);\n                vind++;\n            }\n        }\n        \n        return cost;\n    }\n};",
    "submit_ts": "1720925408",
    "subm_id": "1320253748"
}