{
    "username": "groupbuilder",
    "submission": "class Solution:\n    def minArea(self, grid):\n        minx, maxx, miny, maxy = 10001, 0, 10001, 0\n        m = len(grid)\n        n = len(grid[0])\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == 1:\n                    minx = min(minx, i)\n                    maxx = max(maxx, i)\n                    miny = min(miny, j)\n                    maxy = max(maxy, j)\n        return (maxx - minx + 1) * (maxy - miny + 1) if minx < 10001 else 0\n    \n    def copyGrid(self, grid, r1, c1, r2, c2):\n        res = []\n        for r in range(r1, r2+1):\n            res.append([grid[r][c] for c in range(c1, c2 + 1)])\n        return res\n    \n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = m * n\n        for r in range(1, m):\n            for c in range(1, n):\n                ul = self.minArea(self.copyGrid(grid, 0, 0, r-1, c-1))\n                ur = self.minArea(self.copyGrid(grid, 0, c, r-1, n - 1))\n                ll = self.minArea(self.copyGrid(grid, r, 0, m-1, c-1))\n                lr = self.minArea(self.copyGrid(grid, r, c, m-1, n-1))\n                \n                u = self.minArea(self.copyGrid(grid, 0, 0, r-1, n-1))\n                b = self.minArea(self.copyGrid(grid, r, 0, m-1, n-1))\n                l = self.minArea(self.copyGrid(grid, 0, 0, m-1, c-1))\n                R = self.minArea(self.copyGrid(grid, 0, c, m-1, n-1))\n                \n                ans = min(ans, u + ll + lr)\n                ans = min(ans, b + ul + ur)\n                ans = min(ans, l + ur + lr)\n                ans = min(ans, R + ul + ll)\n                \n        for r1 in range(1, m):\n            for r2 in range(r1 + 1, m):\n                a1 = self.minArea(self.copyGrid(grid, 0, 0, r1 - 1, n - 1))\n                a2 = self.minArea(self.copyGrid(grid, r1, 0, r2 - 1, n - 1))\n                a3 = self.minArea(self.copyGrid(grid, r2, 0, m - 1, n - 1))\n                ans = min(ans, a1 + a2 + a3)\n        \n        for c1 in range(1, n):\n            for c2 in range(c1 + 1, n):\n                a1 = self.minArea(self.copyGrid(grid, 0, 0, m - 1, c1 - 1))\n                a2 = self.minArea(self.copyGrid(grid, 0, c1, m - 1, c2 - 1))\n                a3 = self.minArea(self.copyGrid(grid, 0, c2, m - 1, n - 1))\n                ans = min(ans, a1 + a2 + a3)\n        \n        return ans",
    "submit_ts": 1719113326.0
}