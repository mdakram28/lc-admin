{
    "username": "smanav237",
    "submission": "class Solution {\npublic:\n    int breadthFirstSearch(vector<vector<int>> &graph, int beg, int end1, int end2, int nodes)\n    {\n        queue<int> tempQueue;\n        vector<int> vis(nodes,0);\n        tempQueue.push(beg);  // start node\n        vis[beg] = 1;\n        \n        while(!tempQueue.empty())\n        {\n            int x = tempQueue.front();\n            tempQueue.pop();\n            for(int n: graph[x])\n            {\n                if(!vis[n])\n                {\n                    tempQueue.push(n);\n                    vis[n] = 1; \n                }\n            }\n        }\n        return vis[end1] || vis[end2];\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles2) {\n        int n1 = circles2.size();\n        vector<vector<int>> graph(n1 + 4);\n        vector<pair<int, int>> centers(n1);\n        vector<int> radii(n1);\n\n        for (int i = 0; i < n1; ++i) {\n            centers[i] = {circles2[i][0], circles2[i][1]};\n            radii[i] = circles2[i][2];\n        }\n\n        for (int i = 0; i < n1; ++i) {\n            if (centers[i].first <= radii[i]) graph[n1].push_back(i), graph[i].push_back(n1);\n            if (X - centers[i].first <= radii[i]) graph[n1 + 2].push_back(i), graph[i].push_back(n1 + 2);\n            if (centers[i].second <= radii[i]) graph[n1 + 1].push_back(i), graph[i].push_back(n1 + 1);\n            if (Y - centers[i].second <= radii[i]) graph[n1 + 3].push_back(i), graph[i].push_back(n1 + 3);\n\n            for (int j = i + 1; j < n1; ++j) {\n                if (sqrt(pow(centers[i].first - centers[j].first, 2) + pow(centers[i].second - centers[j].second, 2)) <= radii[i] + radii[j]) {\n                    graph[i].push_back(j);\n                    graph[j].push_back(i);\n                }\n            }\n        }\n\n        return !breadthFirstSearch(graph, n1, n1 + 1, n1 + 2, n1 + 4) &&\n               !breadthFirstSearch(graph, n1 + 3, n1 + 2, n1 + 1, n1 + 4);\n            \n}\n};\n",
    "submit_ts": "1722139195",
    "subm_id": "1335810768"
}