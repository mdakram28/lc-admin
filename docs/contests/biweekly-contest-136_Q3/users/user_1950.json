{
    "username": "topmoklaer",
    "submission": "\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int h = grid.size();\n        int w = grid[0].size();\n        int ans = w * h;\n\n        if (w * h < 4) {\n            ans = 0;\n            for (int i = 0; i < w; i++)\n            for (int j = 0; j < h; j++) {\n                ans += grid[j][i];\n            }\n\n            return ans;\n        }\n\n        if (w * h == 4) {\n            ans = 0;\n            for (int i = 0; i < w; i++)\n            for (int j = 0; j < h; j++) {\n                ans += grid[j][i];\n            }\n\n            return min(ans, 4 - ans);\n        }\n\n        int cand = 0;\n        for (int row = 0; row < (h) / 2; row++)\n        for (int col = 0; col < (w) / 2; col++)\n        {\n            int cells = 0;\n            cells += grid[row][col];\n            cells += grid[row][w - col - 1];\n            cells += grid[h - row - 1][col];\n            cells += grid[h - row - 1][w - col - 1];\n            \n            auto toAdd = min(cells, 4 - cells);\n            cand += toAdd;\n        }\n\n        if ((h % 2 == 1) && (w % 2 == 0)) {\n            int t = 0;\n            int ones = 0;\n            for (int i = 0; i < w / 2; i++) {\n                int r = h / 2;\n                if (grid[r][i] == 1 && grid[r][i] == grid[r][w - i - 1])\n                    ones++;\n                if (grid[r][i] != grid[r][w - i - 1])\n                    t++;\n            }\n            if (ones % 2 == 1 && t == 0)\n                t += 2;\n            cand += t;\n        }\n        else if ((h % 2 == 0) && (w % 2 == 1))\n        {\n            int t = 0;\n            int ones = 0;\n            for (int i = 0; i < h / 2; i++) {\n                int c = w / 2;\n                if (grid[i][c] == 1 && grid[i][c] == grid[h - i - 1][c]) {\n                    ones++;\n                }\n                if (grid[i][c] != grid[h - i - 1][c])\n                    t++;\n            }\n            if (ones % 2 == 1 && t == 0)\n                t += 2;\n            cand += t;\n        } else if ((h % 2 == 1) && (w % 2 == 1))\n        {\n            int ones = 0;\n            int t = 0;\n\n            for (int i = 0; i < w / 2; i++) {\n                int r = h / 2;\n                if (grid[r][i] == 1 && grid[r][i] == grid[r][w - i - 1])\n                    ones++;\n                if (grid[r][i] != grid[r][w - i - 1])\n                    t++;\n            }\n\n            for (int i = 0; i < h / 2; i++) {\n                int c = w / 2;\n                if (grid[i][c] == 1 && grid[i][c] == grid[h - i - 1][c])\n                    ones++;\n                if (grid[i][c] != grid[h - i - 1][c])\n                    t++;\n            }\n\n            cand += t;\n            if (ones == 1 && t == 0)\n                cand += 2;\n            if ((w % 2 == 1) && (h % 2 == 1) && grid[h / 2][w / 2] == 1) {\n                cand++;\n            }\n        }\n\n        return cand;\n    }\n};",
    "submit_ts": "1722698889",
    "subm_id": "1343195020"
}