{
    "username": "Harshit_J12",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < n/2; i++){\n            for(int j = 0; j < m/2; j++){\n                int sum = grid[i][j] + grid[i][m-j-1] + grid[n-i-1][j] + grid[n-i-1][m-j-1];\n                ans += min(sum , 4-sum);\n            }\n        }\n        if(n%2 == 0 and m%2 == 0) return ans;\n        int flex = 0;\n        int sum = 0;\n        if(n%2){\n            for(int j = 0; j < m/2; j++){\n                sum += grid[n/2][j] + grid[n/2][m-j-1];\n                flex += grid[n/2][j] != grid[n/2][m-j-1];\n            }\n        }\n        if(m%2){\n            for(int i = 0; i < n/2; i++){\n                sum += grid[i][m/2] + grid[n-i-1][m/2];\n                flex += grid[i][m/2] != grid[n-i-1][m/2];\n            }\n        }\n        if(n%2 and m%2){\n            if(grid[n/2][m/2] == 1) {\n                ans++;\n            }\n        }\n        if(flex) return ans + flex;\n        else {\n            if(sum%4 == 0) return ans;\n            else return ans + 2;    \n        }\n    }\n};",
    "submit_ts": "1722697152",
    "subm_id": "1343136119"
}