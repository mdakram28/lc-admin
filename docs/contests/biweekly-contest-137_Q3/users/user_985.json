{
    "username": "prutor",
    "submission": "class Solution:\n    def top_three(self, arr):\n        first = second = third = -math.inf\n        first_idx = second_idx = third_idx = -1\n\n        for i, num in enumerate(arr):\n            if num >= first:\n                third, third_idx = second, second_idx\n                second, second_idx = first, first_idx\n                first, first_idx = num, i\n            elif num >= second:\n                third, third_idx = second, second_idx\n                second, second_idx = num, i\n            elif num >= third:\n                third, third_idx = num, i\n\n        return [(first, first_idx), (second, second_idx), (third, third_idx)]\n\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        top = [self.top_three(board[i]) for i in range(m)]\n        ans = -math.inf\n        for r1 in range(m-2):\n            for r2 in range(r1+1, m-1):\n                for r3 in range(r2+1, m):\n                    for c1 in range(3):\n                        col1 = top[r1][c1][1]\n                        for c2 in range(3):\n                            col2 = top[r2][c2][1]\n                            if(col2 == col1):\n                                continue\n                            for c3 in range(3):\n                                col3 = top[r3][c3][1]\n                                if(col3 == col1 or col3 == col2):\n                                    continue\n                                ans = max(ans, board[r1][col1] + board[r2][col2] + board[r3][col3])\n        return ans",
    "submit_ts": "1723909451",
    "subm_id": "1359193051"
}