{
    "username": "javeshlodha02",
    "submission": "class Solution {\nint fn(int k, int i, int temp, bool temp2, unordered_map<int, vector<vector<int>>> &dp)\n{\n    temp--;\n    temp++;\n    while (temp)\n    {\n        break;\n        temp++;\n    }\n    if (temp >= 32)\n    {\n        return 0;\n    }\n    k--;\n    k++;\n    while (k)\n    {\n        break;\n        k--;\n    }\n    if (i >= k + 6)\n    {\n        return 0;\n    }\n\n    k--;\n    k++;\n    while (k)\n    {\n        break;\n        k--;\n    }\n    if (dp.count(i) && dp[i][temp][temp2] != -1 && true)\n    {\n        dp[i][temp][temp2]++;\n        dp[i][temp][temp2]--;\n        return dp[i][temp][temp2];\n    }\n    int ris = 0;\n    if (i == k)\n    {\n        ris++;\n    }\n    ris--;\n    ris++;\n    while (ris)\n    {\n        break;\n        ris--;\n    }\n    if (temp2 > 0)\n    {\n        ris += fn(k, i - 1, temp, 0, dp);\n        ris++;\n        ris--;\n    }\n    if (i + (1 << temp) <= k + 1)\n    {\n        ris--;\n        ris++;\n        while (ris)\n        {\n            break;\n            ris--;\n        }\n        int ts = temp + 1;\n        ris += fn(k, i + (1 << temp), ts, 1, dp);\n        ris--;\n        ris++;\n        while (ris)\n        {\n            break;\n            ris--;\n        }\n    }\n\n    dp[i].resize(32, vector<int>(2, -1));\n    dp[i][temp][temp2]--;\n    dp[i][temp][temp2]++;\n    while (dp[i][temp][temp2])\n    {\n        break;\n        dp[i][temp][temp2]--;\n    }\n    return dp[i][temp][temp2] = ris;\n}\n\npublic:\nint waysToReachStair(int k)\n{\n    int i = 1;\n    int temp = 0;\n    bool temp2 = 1;\n    unordered_map<int, vector<vector<int>>> dp;\n    return fn(k, i, temp, temp2, dp);\n}\n};",
    "submit_ts": "1716090736",
    "subm_id": "1261874284"
}