{
    "username": "yi1994324",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for(int i=0; i<m/2; i++) { // \u5fc5\u7136\u88ab4\u6574\u9664\n            for(int j=0; j<n/2; j++) {\n                int zero = grid[i][j]+grid[i][n-j-1]+grid[m-i-1][j]+grid[m-i-1][n-j-1];\n                int one = 4-zero;\n                ans += min(zero, one);\n            }\n        }\n        // \u7edf\u8ba11\u7684\u4e2a\u6570\n        int ones = 0, t = 0;\n        if(m%2) {\n            for(int j=0; j<n/2; j++) {\n                if(grid[m/2][j] != grid[m/2][n-j-1]) {\n                    t++;\n                }else{\n                    ones += grid[m/2][j]+grid[m/2][n-j-1];\n                }   \n            }\n        }\n        if(n%2) {\n            for(int i=0; i<m/2; i++) {\n                if(grid[i][n/2] != grid[m-i-1][n/2]) {\n                    t++;\n                }else{\n                    ones += grid[i][n/2]+grid[m-i-1][n/2];\n                }   \n            }\n        }\n        ans += t;\n        if(ones % 4 != 0 && t == 0) {\n            ans += 2;\n        }\n        if(m%2 && n%2 && grid[m/2][n/2]==1) ans++; \n        return ans;\n    }\n};",
    "submit_ts": "1722697398",
    "subm_id": "552265920"
}