{
    "username": "jod0311",
    "submission": "class Solution {\n    static const int MOD = 1'000'000'007;\n    static const int temp = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n    \n        unordered_map<int, int> mp;\n        for (const auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<int>> count(n + 1, vector<int>(temp + 1, 0));\n        count[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= temp; j++) {\n                for (int k = 0; k < i; k++) {\n                    int prev = j - k;\n                    if (prev >= 0) {\n                        count[i][j] = (count[i][j] + count[i - 1][prev]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(i)) {\n                int target = mp[i];\n                for (int j = 0; j <= temp; j++) {\n                    if (j!= target) {\n                        count[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        int result = 0;\n        for (int count : count[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1719070148",
    "subm_id": "1296815747"
}