{
    "username": "Shah_Namra",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        int flipsRequired = 0;\n\n        // Check the center cell if both dimensions are odd\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (grid[rows / 2][cols / 2] == 1) {\n                flipsRequired++;\n            }\n        }\n\n        vector<int> flipCount(3, 0);\n\n        // Calculate flips needed for rows if number of rows is odd\n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = grid[rows / 2][left] + grid[rows / 2][right];\n                flipCount[sum]++;\n                left++;\n                right--;\n            }\n        }\n\n        // Calculate flips needed for columns if number of columns is odd\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n                flipCount[sum]++;\n                top++;\n                bottom--;\n            }\n        }\n\n        // Adjust flips based on center cell\n        if (flipCount[2] % 2 == 1) {\n            if (flipCount[1] > 0) {\n                flipsRequired += flipCount[1];\n            } else {\n                flipsRequired += 2;\n            }\n        } else {\n            flipsRequired += flipCount[1];\n        }\n\n        // Calculate flips needed for corners\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int TL = grid[i][j];\n                int TR = grid[i][cols - 1 - j];\n                int BL = grid[rows - 1 - i][j];\n                int BR = grid[rows - 1 - i][cols - 1 - j];\n\n                int cornerSum = TL +TR+BL+BR;\n\n                if (cornerSum != 0 && cornerSum != 4) {\n                    flipsRequired += min(cornerSum, 4 - cornerSum);\n                }\n            }\n        }\n\n        return flipsRequired;\n    }\n};\n",
    "submit_ts": "1722699282",
    "subm_id": "1343206927"
}