{
    "username": "bluesky999",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] ret = new int[queries.length];\n        TreeMap<Integer, Integer> mp = new TreeMap<>();\n        for (int i = 0; i < n - 1; i++)\n            mp.put(i, i + 1);\n        for (int i = 0; i < queries.length; i++) {\n            int q[] = queries[i];\n            if (mp.containsKey(q[0])) {\n                Map.Entry<Integer, Integer> e = null;\n                while ((e = mp.ceilingEntry(q[0] + 1)) != null && e.getValue() <= q[1]) {\n                    mp.remove(e.getKey());\n                }\n                mp.put(q[0], q[1]);\n            }\n            tr(q, mp);\n            ret[i] = mp.size();\n        }\n        return ret;\n    }\n\n    static void tr(Object... o) {\n        // System.out.println(Arrays.deepToString(o));\n    }\n\n}",
    "submit_ts": "1722742157",
    "subm_id": "1343762352"
}