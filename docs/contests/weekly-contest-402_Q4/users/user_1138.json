{
    "username": "yuchen_724",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        peak = [0]*len(nums)\n        n = int(sqrt(len(nums)))+1\n        large_peak = [0]*n\n        ans = []\n        for i in range(1,len(nums)-1):\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                peak[i] = 1\n                large_peak[i//n] += 1\n            \n        for query in queries:\n            if query[0] == 1:\n                j = query[1]//n+1\n                k = query[2]//n\n                if j >= k:\n                    ans.append(sum(peak[query[1]+1:query[2]]))\n                else:\n                    ans.append(sum(large_peak[j:k])+sum(peak[query[1]+1:j*n])+sum(peak[k*n:query[2]]))\n                \n            else: \n                nums[query[1]] = query[2]\n                if query[1]>0 and query[1]<len(nums)-1:\n                    if nums[query[1]]>nums[query[1]-1] and nums[query[1]]>nums[query[1]+1]:\n                        if peak[query[1]] == 0:\n                            peak[query[1]] = 1\n                            large_peak[query[1]//n] += 1\n                    else:\n                        if peak[query[1]] == 1:\n                            peak[query[1]] = 0\n                            large_peak[query[1]//n] -= 1\n                if query[1]>1:\n                    if nums[query[1]-1]>nums[query[1]-2] and nums[query[1]-1]>nums[query[1]]:\n                        if peak[query[1]-1] == 0:\n                            peak[query[1]-1] = 1\n                            large_peak[(query[1]-1)//n] += 1\n                    else:\n                        if peak[query[1]-1] == 1:\n                            peak[query[1]-1] = 0\n                            large_peak[(query[1]-1)//n] -= 1\n                if query[1]<len(nums)-2:\n                    if nums[query[1]+1]>nums[query[1]] and nums[query[1]+1]>nums[query[1]+2]:\n                        if peak[query[1]+1] == 0:\n                            peak[query[1]+1] = 1\n                            large_peak[(query[1]+1)//n] += 1\n                    else:\n                        if peak[query[1]+1] == 1:\n                            peak[query[1]+1] = 0\n                            large_peak[(query[1]+1)//n] -= 1\n        \n        return ans\n        ",
    "submit_ts": 1718509042.0
}