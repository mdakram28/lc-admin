{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    int cal(int x1,int x2,int y1,int y2,vector<vector<int>>& grid){\n        if(x1>x2||y1>y2)return 0;\n         int Minx=1e9,Maxx=0;\n        int Miny=1e9,Maxy=0;\n       // printf(\"%d %d %d %d\\n\",x1,x2,y1,y2);\n        for(int i = x1;i<=x2;i++){\n            for(int j = y1;j<=y2;j++){\n                 if(grid[i][j]){\n                    Minx=min(Minx,i);\n                    Miny=min(Miny,j);\n                    Maxx=max(Maxx,i);\n                    Maxy=max(Maxy,j);\n                }\n            }\n        }\n        if(Minx==1e9)return 0;\n     //   printf(\"%d %d %d %d\\n\",Maxx,Minx,Maxy,Miny);\n        return (Maxx-Minx+1)*(Maxy-Miny+1);\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int ans=1e9;\n        for(int i = 0;i<grid.size();i++){\n            for(int j = i+1;j<grid.size();j++){\n                ans=min(ans,cal(0,i-1,0,grid[0].size()-1,grid)+\n                       cal(i,j-1,0,grid[0].size()-1,grid)+\n                       cal(j,grid.size()-1,0,grid[0].size()-1,grid));\n            }\n        }\n    //    printf(\"%d\\n\",ans);\n        for(int i = 0;i<grid[0].size();i++){\n            for(int j = i+1;j<grid[0].size();j++){\n           //     printf(\"! %d %d\\n\",i,j);\n                ans=min(ans,cal(0,grid.size()-1,0,i-1,grid)+\n                       cal(0,grid.size()-1,i,j-1,grid)+\n                       cal(0,grid.size()-1,j,grid[0].size()-1,grid));\n            }\n        }\n    //    printf(\"%d\\n\",ans);\n        for(int i = 0;i<grid.size();i++){\n            for(int j = 0;j<grid[0].size();j++){\n                ans=min(ans,cal(0,i-1,0,grid[0].size()-1,grid)+\n                            cal(i,grid.size()-1,0,j-1,grid)+\n                         cal(i,grid.size()-1,j,grid[0].size()-1,grid)\n                            );\n                \n               // printf(\"%d %d %d\\n\",i,j,ans);\n                    ans=min(ans,cal(i,grid.size()-1,0,grid[0].size()-1,grid)+\n                            cal(0,i-1,0,j-1,grid)+\n                         cal(0,i-1,j,grid[0].size()-1,grid)\n                            );\n               // printf(\"%d %d %d %d %d %d\\n\",i,j,ans,cal(i,grid.size()-1,0,grid[0].size()-1,grid),\n                     //    cal(0,i-1-1,j,grid[0].size()-1,grid));\n            }\n        }\n      //  printf(\"%d\\n\",ans);\n        for(int i = 0;i<grid[0].size();i++){\n            for(int j = 0;j<grid.size();j++){\n                ans=min(ans,cal(0,grid.size()-1,0,i-1,grid)+\n                            cal(0,j-1,i,grid[0].size()-1,grid)+\n                         cal(j,grid.size()-1,i,grid[0].size()-1,grid)\n                            );\n                    ans=min(ans,cal(0,grid.size()-1,i,grid[0].size()-1,grid)+\n                            cal(0,j-1,0,i-1,grid)+\n                         cal(j,grid.size()-1,0,i-1,grid)\n                            );\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719111146.0
}