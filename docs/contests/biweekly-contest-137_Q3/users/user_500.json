{
    "username": "Shreya Anand",
    "submission": "class Solution {\npublic:\n    void fill(vector<int>&val, vector<pair<int, int>>&v){\n        vector<pair<int, int>>temp;\n        int n = val.size();\n        for(int i = 0; i<n; i++){\n            temp.push_back({val[i], i});\n        }\n\n        sort(temp.begin(), temp.end());\n        v[0] = temp[n-1];\n        v[1] = temp[n-2];\n        v[2] = temp[n-3];\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        vector<vector<pair<int, int>>>v(n, vector<pair<int, int>>(3, {-1, -1}));\n\n        for(int i = 0; i<n; i++){\n            fill(board[i], v[i]);\n        }\n\n        long long ans = -1e18;\n        for(int i = 0; i<n; i++){\n            for(int j = i+1; j<n; j++){\n                for(int k = j+1; k<n; k++){\n                    \n                    for(int p = 0; p<3; p++){\n                        for(int q = 0; q<3; q++){\n                            for(int r = 0; r<3; r++){\n                                if(v[i][p].second == v[j][q].second || v[i][p].second == v[k][r].second || v[j][q].second == v[k][r].second)continue;\n                                ans = max(ans, (long long)v[i][p].first + (long long)v[j][q].first + (long long)v[k][r].first);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907676",
    "subm_id": "1359119176"
}