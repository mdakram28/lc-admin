{
    "username": "Wibo",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<tuple<int, int, int>> diffs;\n        for (int l=0, r=(int)nums.size()-1; l<r; l++, r--) diffs.emplace_back(abs(nums[l] - nums[r]), min(nums[l], nums[r]), max(nums[l], nums[r]));\n\n        vector<int> bit;\n        auto init = [&]() -> void {\n            bit.assign(k+1, 0);\n        };\n        auto update = [&](int i) -> void {\n            while (i <= k) {\n                bit[i]++;\n                i += i&-i;\n            }\n        };\n        auto _query = [&](int i) -> int {\n            int ret = 0;\n            while (i > 0) {\n                ret += bit[i];\n                i -= i&-i;\n            }\n            return ret;\n        };\n        auto query = [&](int l, int r) -> int {\n            return _query(r) - _query(l - 1);\n        };\n\n        sort(diffs.begin(), diffs.end());\n        // for (auto &[d, l, r] : diffs) cout << d << ' ' << l << ' ' << r << '\\n';\n        vector<int> al(k+1), ar(k+1);\n        init();\n        for (int x=0, l=0; x<=k; x++) {\n            while (l < (int)diffs.size() && get<0>(diffs[l]) < x) {\n                auto &[_, lo, hi] = diffs[l];\n                update(max(k - lo, hi));\n                l++;\n            }\n\n            int c1 = query(x, k), c2 = l - c1;\n            al[x] = c1 + 2 * c2;\n        }\n        init();\n        for (int x=k, r=(int)diffs.size()-1; x>=0; x--) {\n            while (r >= 0 && get<0>(diffs[r]) > x) {\n                auto &[_, lo, hi] = diffs[r];\n                update(max(k - lo, hi));\n                r--;\n            }\n\n            int c1 = query(x, k), c2 = (int)diffs.size() - r - 1 - c1;\n            ar[x] = c1 + 2 * c2;\n        }\n\n        // for (int i=0; i<=k; i++) cout << al[i] << ' ' << ar[i] << '\\n';\n\n        int ans = (int)nums.size()/2;\n        for (int i=0; i<=k; i++) ans = min(ans, al[i] + ar[i]);\n        return ans;\n    }\n};",
    "submit_ts": "1721489902",
    "subm_id": "1327467171"
}