{
    "username": "wangdh15",
    "submission": "class Solution {\npublic:\n    \n    vector<int> nn;\n\n    struct Node {\n        int l, r;\n        int val;\n    };\n\n    static constexpr int N = 100005;\n    Node tr[N<<2];\n\n    void build(int u, int l, int r) {\n        tr[u] = {l, r, 0};\n        if (l == r) {\n            tr[u].val = nn[l];\n        } else {\n            int mid = l + r >> 1;\n            build(u << 1, l, mid);\n            build(u << 1 | 1, mid +1, r);\n            tr[u].val = tr[u <<1].val & tr[u<<1|1].val;\n        }\n    }\n\n    int query(int u, int l, int r) {\n        if (tr[u].l >= l && tr[u].r <= r) return tr[u].val;\n        int mid = tr[u].l + tr[u].r >> 1;\n        long long ans = (1LL << 35) - 1;\n        if (l <= mid) ans = ans & query(u << 1, l, r);\n        if (r > mid) ans = ans & query(u << 1 | 1, l, r);\n        return ans;\n    }\n\n    int minimumDifference(vector<int>& nums, int k) {\n        nn = std::move(nums);\n        int ans = 2e9;\n        const int n = nn.size();\n        build(1, 0, n - 1);\n        for (int i = 0; i < n; ++i) {\n            int l = i, r = n - 1;\n            while (l < r) {\n                int mid = l +  r + 1 >> 1;\n                int tmp = query(1, i, mid);\n                // cout << \"aa \"   << l << ' ' << mid << ' ' << tmp << endl;\n                if (tmp < k) r = mid - 1;\n                else l = mid;\n            }\n            // cout << i << ' '<<  l << ' ' << query(1, i, l) << endl;\n            ans = min(ans, abs(k - query(1, i, l)));\n            if (l + 1 < n) ans = min(ans, abs(k - query(1, i, l + 1)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297921.0
}