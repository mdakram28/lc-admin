{
    "username": "x_divyansh",
    "submission": "class Solution {\n    vector<vector<int>> cntz;\n\n    int calc(int l, int r){\n        int ans = 0;\n        for(int i=0; i<32; ++i){\n            if(!(cntz[r+1][i] - cntz[l][i])) ans += (1<<i);\n        }\n        return ans;\n    }\n\n    int binary_search_and(int start, int r, int target){\n        int l = start;\n        int ans = abs(target-calc(l, r));\n        while(l <= r){\n            int mid = (l+r)/2;\n            int temp = calc(start, mid);\n            ans = min(ans, abs(target-temp));\n\n            if(calc(start, mid) < target){\n                r = mid-1;\n            }\n            else if(calc(start, mid) > target){\n                l = mid+1;\n            }\n            else return 0;\n        }\n        return ans;\n    }\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        if( k >= *max_element(nums.begin(), nums.end()) )\n            return k-*max_element(nums.begin(), nums.end());\n\n        int n=nums.size();\n\n        cntz = vector<vector<int>>(n+1, vector<int>(32, 0));\n\n        for(int i=1; i<=n; ++i)\n            for(int j=0; j<32; ++j)\n                cntz[i][j] =cntz[i-1][j] + ((1<<j)&nums[i-1]?0:1);\n\n        int ans= INT_MAX;\n        for(int i=0; i<n; ++i){\n            ans = min(ans, binary_search_and(i, n-1, k));\n//            cout << binary_search_and(i, n-1, k) << \" \";\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": 1717299590.0
}