{
    "username": "guanwei0711",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int totalD = n - 1;\n        set<int> nodes;\n        for (int i = 0; i < n - 1; i++) {\n            nodes.insert(i);\n        }\n\n        vector<int> ans;\n        for (auto &query: queries) {\n            auto head = nodes.upper_bound(query[0]);\n            auto end = nodes.lower_bound(query[1]);\n            // cout << *head << \" \" << *end << endl;\n            // if (head != nodes.end()) {\n            nodes.erase(head, end);\n            // }\n            // for (int i = query[0] + 1; i < query[1]; i++) {\n            //     nodes.erase(i);\n            // }\n            ans.push_back(nodes.size());\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743708",
    "subm_id": "1343797895"
}