{
    "username": "wxy9018",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        def binomial_coefficient(m, n):\n            if n > m or m < 0 or n < 0:\n                return 0\n            return math.factorial(m) // (math.factorial(n) * math.factorial(m - n))\n        \n        if k == 0:\n            return 2\n        if k == 1:\n            return 4\n        \n        # there should be no operations that doesn't take even one second type operation except the above two\n        \n        res = 0\n        n = 0\n        while (1 << (n+1)) - 1 < k-1:\n            n += 1\n        \n        while ((1 << (n+1)) - 1) - (n+2) <= k-1:\n            m = ((1 << (n+1)) - 1) - (k-1)\n            #print(n, m)\n            res += binomial_coefficient(n+2, m)\n            \n            n += 1\n        \n        return res",
    "submit_ts": 1716087780.0
}