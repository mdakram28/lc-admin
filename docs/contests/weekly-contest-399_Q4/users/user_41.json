{
    "username": "Belgutei0323",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    #define MOD 1000000007\n\n    // first element is used / last element used or not\n    vector<ll> v[30][2][2];\n    int n, level;\n    ll ret = 0;\n\n    void update(int pos, int val) {\n        v[level][0][0][pos] = 0;\n        v[level][0][1][pos] = 0;\n        v[level][1][0][pos] = 0;\n        v[level][1][1][pos] = val;\n        for (int i = level - 1; i >= 0; i--) {\n            pos /= 2;\n            if (i == level - 1) { // two neighbors\n                v[i][0][0][pos] = 0;\n                v[i][0][1][pos] = max((ll) 0, v[i + 1][1][1][pos * 2 + 1]);\n                v[i][1][0][pos] = max((ll) 0, v[i + 1][1][1][pos * 2]);\n                v[i][1][1][pos] = 0;\n                continue;\n            }\n            for (int x = 0; x <= 1; x++) {\n                for (int y = 0; y <= 1; y++) {\n                    v[i][x][y][pos] = max(\n                        v[i + 1][x][0][pos * 2] + v[i + 1][0][y][pos * 2 + 1],\n                        max(\n                            v[i + 1][x][1][pos * 2] + v[i + 1][0][y][pos * 2 + 1],\n                            v[i + 1][x][0][pos * 2] + v[i + 1][1][y][pos * 2 + 1]\n                        )\n                    );\n                }\n            }\n        }\n    }\n    //\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        for(int i = 0; i <= 30; i++){\n            if((1 << i) >= nums.size()){\n                level = i;\n                break;\n            }\n        }\n        // cout << \"LEVEL: \" << level << '\\n';\n        //\n        for (int i = level; i >= 0; i--) {\n            for (int j = 0; j < (1 << i); j++) {\n                v[i][0][0].push_back(0);\n                v[i][0][1].push_back(0);\n                v[i][1][0].push_back(0);\n                v[i][1][1].push_back(0);\n            }\n        }\n        //\n        for (int i = 0; i < nums.size(); i++) {\n            update(i, nums[i]);\n            // cout << i << '\\n';\n            // ll mx = max(v[0][0][0][0], v[0][0][1][0]);\n            // mx = max(mx, v[0][1][0][0]);\n            // mx = max(mx, v[0][1][1][0]);\n            // ret = (ret + mx) % MOD;\n        }\n        for (auto x: queries) {\n            update(x[0], x[1]);\n            ll mx = max(v[0][0][0][0], v[0][0][1][0]);\n            mx = max(mx, v[0][1][0][0]);\n            mx = max(mx, v[0][1][1][0]);\n            ret = (ret + mx) % MOD;\n        }\n        return (int) ret;\n    }\n};",
    "submit_ts": "1716693104",
    "subm_id": "1268075485"
}