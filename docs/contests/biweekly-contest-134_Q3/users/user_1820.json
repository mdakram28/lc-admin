{
    "username": "piyush_razz",
    "submission": "class Solution {\npublic:\n    #define vi vector<int>\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        vi pre(n);\n        vi suf(n);\n        pre[0] = 1;\n        for(int i=1; i<n; i++){\n            if(a[i]!=a[i-1]){\n                pre[i] = 1;\n            }\n            else{\n                break;\n            }\n        }\n        suf[n-1] = 1;\n        for(int i=n-2; i>=0; i--){\n            if(a[i]!=a[i+1]){\n                suf[i] = 1;\n            }\n            else{\n                break;\n            }\n        }\n        int ans=0;\n        set<int>st;\n        st.insert(n);\n        for(int i=0; i+1<n; i++){\n            if(a[i]==a[i+1]){\n                st.insert(i);\n            }\n        }\n        for(int i=0; i<n; i++)\n        {\n            if(i<k-1)\n            {\n                if(a[0]!=a[n-1]){\n                    int l = i-k+1;\n                    l = (l+n)%n;\n                    if(pre[i]==1 && suf[l]==1){\n                        ans++;\n                    }\n                }\n            }\n            else{\n                int l = i-k+1;\n                auto it = st.lower_bound(l);\n                int val = *it;\n                if(val >= i){\n                    ans++;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278425",
    "subm_id": "1311708580"
}