{
    "username": "leetcodejune30",
    "submission": "class Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> differenceToMaxValues;\n        std::vector<int> maxValues;\n\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int left = nums[i];\n            int right = nums[nums.size() - i - 1];\n            int diff = std::abs(left - right);\n\n            int maxValue = std::max({left, right, k - left, k - right});\n\n            differenceToMaxValues[diff].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minChangesRequired = nums.size();  \n        std::sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& [diff, values] : differenceToMaxValues) {\n            int thresholdIndex = std::lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            int changes = thresholdIndex * 2 + (nums.size() / 2 - thresholdIndex);\n\n            for (const auto& maxValue : values) {\n                changes -= (maxValue < diff) ? 2 : 1;\n            }\n\n            minChangesRequired = std::min(minChangesRequired, changes);\n        }\n\n        return minChangesRequired;\n    }\n};",
    "submit_ts": "1721489088",
    "subm_id": "1327442487"
}