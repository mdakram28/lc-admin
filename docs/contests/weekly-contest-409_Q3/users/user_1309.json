{
    "username": "gwdyxxzl",
    "submission": "class Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        cur = []\n        res = []\n        min_res = n - 1\n        for u, v in queries:\n            i = bisect.bisect(cur, [u, v])\n            if not cur:\n                cur.append([u, v])\n                min_res -= (v - u - 1)\n            else:\n                if i == 0:\n                    if v <= cur[0][0]:\n                        cur = [[u, v]] + cur\n                        min_res -= (v - u - 1)\n                    elif u <= cur[0][0] and v >= cur[0][1]:\n                        ui, vi = cur[0]\n                        cur[0] = [u, v]\n                        min_res -= (v - u) - (vi - ui)\n                elif i == len(cur):\n                    if u >= cur[-1][-1]:\n                        cur.append([u, v])\n                        min_res -= (v - u - 1)\n                    elif u <= cur[-1][0] and v >= cur[-1][1]:\n                        ui, vi = cur[-1]\n                        cur[-1] = [u, v]\n                        min_res -= (v - u) - (vi - ui)\n                else:\n                    pu, pv = cur[i - 1]\n                    nu, nv = cur[i]\n                    if u >= pv and v <= nu:\n                        cur.insert(i, [u, v])\n                        min_res -= (v - u - 1)\n                    elif u <= nu and v >= nv:\n                        cur[i] = [u, v]\n                        min_res -= (v - u) - (nv - nu)\n            res.append(min_res or 1)\n        return res\n                \n            \n        # pre = [0] * n\n        # back = [0] * n\n        # for i in range(n):\n        #     pre[i] = i\n        #     back[i] = n - i - 1\n        # cur_min = float('inf')\n        # res = []\n        # for u, v in queries:\n        #     back[u] = min(back[u], 1 + back[v])\n        #     pre[v] = min(pre[v], pre[u] + 1)\n        #     cur_min = min(cur_min, pre[u] + 1 + back[v])\n        #     res.append(cur_min)\n        # return res",
    "submit_ts": "1722743803",
    "subm_id": "1343800002"
}