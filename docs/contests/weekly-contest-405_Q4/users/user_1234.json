{
    "username": "vaibhavgawad",
    "submission": "class Solution {\n     public static int minimumCost(String target, String[] words, int[] costs) {\n\n        Trie t = new Trie();\n        for (int i = 0; i < words.length; i++) {\n            t.insert(words[i], costs[i]);\n        }\n        long answer = go(target, 0, t, new HashMap<>());\n         if (answer == Integer.MAX_VALUE) return -1;\n        return (int) answer;\n    }\n\n    private static long go(String target, int ind, Trie root, HashMap<Integer, Long> dp) {\n        if (ind == target.length() ) return 0;\n\n        Node temp = root.root;\n        long min = Integer.MAX_VALUE;\n        \n        if (dp.containsKey(ind)) return dp.get(ind);\n        for (int i = ind; i < target.length(); i++) {\n            if (temp.arr[target.charAt(i) - 'a'] == null) {\n               break;\n            }\n            temp = temp.arr[target.charAt(i) - 'a'];\n            if (temp.isEnd) {\n                long val = temp.val + go(target, i + 1, root,dp);\n                min = Math.min(min, val);\n            }\n        }\n        \n        dp.put(ind, min);\n        \n        return min;\n    }\n\n    private static class Trie {\n        Node root;\n        public Trie() {\n            root = new Node();\n        }\n\n        public void insert(String word, int val) {\n            Node temp = root;\n            for(char ch : word.toCharArray()){\n                int index=  ch - 'a';\n                if(temp.arr[index]==null){\n                    temp.arr[index] = new Node();\n                }\n\n                temp = temp.arr[index];\n\n            }\n            temp.isEnd = true;\n            temp.val = Math.min(temp.val,val);\n        }\n\n        public int search(String word) {\n            Node temp = root;\n            for(char ch : word.toCharArray()){\n                int index=  ch - 'a';\n                if(temp.arr[index]==null) return -1;\n\n                temp = temp.arr[index];\n            }\n\n            return temp.val;\n\n        }\n\n        public boolean startsWith(String word) {\n            Node temp = root;\n            for(char ch : word.toCharArray()){\n                int index=  ch - 'a';\n                if(temp.arr[index]==null)return false;\n\n                temp = temp.arr[index];\n            }\n            return true;\n\n        }\n    }\n     private static class Node{\n        Node[] arr=  new Node[26];\n        boolean isEnd = false;\n        int val = Integer.MAX_VALUE;\n\n    }\n}",
    "submit_ts": "1720323453",
    "subm_id": "1312375951"
}