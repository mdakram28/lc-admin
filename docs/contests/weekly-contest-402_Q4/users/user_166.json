{
    "username": "mikeqiyh",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pll;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pi> vpi;\ntypedef vector<pll> vpll;\ntypedef vector<ld> vld;\n#define ms(x, a) memset(x, a, sizeof(x))\n#define siz(x) (int)x.size()\n#define len(x) (int)x.length()\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define F first\n#define S second\n#define FOR(i, x) for (int i = 0; i < x; i++)\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 0x3f3f3f3f3f3f3f3f;\nconst ll MOD = 1e9+7; //998244353;\n//===========================================\ntemplate<int MOD> struct mint {\n    static const int mod = MOD;\n     int v;\n     explicit operator int() const { return v; }\n    mint():v(0) {}\n    mint(ll _v):v(int(_v%MOD)) { v += (v<0)*MOD; }\n    mint& operator+=(mint o) {\n        if ((v += o.v) >= MOD) v -= MOD;\n        return *this; }\n    mint& operator-=(mint o) {\n        if ((v -= o.v) < 0) v += MOD;\n        return *this; }\n    mint& operator*=(mint o) {\n        v = int((ll)v*o.v%MOD); return *this; }\n    mint& operator/=(const mint& o) { return (*this) *= inv(o); }\n    friend mint pow(mint a, ll p) { assert(p >= 0);\n        return p==0?1:pow(a*a,p/2)*(p&1?a:1); }\n    friend mint inv(mint a) { assert(a.v != 0); return pow(a,MOD-2); }\n    friend mint operator+(mint a, mint b) { return a += b; }\n    friend mint operator-(mint a, mint b) { return a -= b; }\n    friend mint operator*(mint a, mint b) { return a *= b; }\n    friend mint operator/(mint a, const mint& b) { return a /= b; }\n};\nusing mi = mint<MOD>;\n//===========================================\nstruct BIT{\n    vi v;\n    void init(int n){ v = vi(n+5, 0); }\n    void upd(int x, int val){\n        x++;\n        for (int i = x; i < siz(v); i+=i&-i) v[i] += val;\n    }\n    int qu(int x){\n        x++;\n        int ret = 0;\n        for (int i = x; i; i-=i&-i) ret += v[i];\n        return ret;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& arr, vector<vector<int>>& qu) {\n        vi ret;\n        int n = siz(arr);\n        BIT bit; bit.init(n);\n        for (int i = 1; i+1 < n; i++){\n            if (arr[i] > arr[i-1] && arr[i] > arr[i+1]){\n                bit.upd(i, 1);\n            }\n        }\n        for (auto xx: qu){\n            int c = xx[0], a = xx[1], b = xx[2];\n            if (c == 1){\n                ret.pb((a == b? 0 : bit.qu(b-1)-bit.qu(a)));\n            } else {\n                int prv = arr[a];\n                for (int i = max(0, a-1); i <= min(n-1, a+1); i++){\n                    arr[a] = prv;\n                    int pp = (1 <= i && i+1 < n && arr[i] > arr[i-1] && arr[i] > arr[i+1]? 1 : 0);\n                    arr[a] = b;\n                    int np = (1 <= i && i+1 < n && arr[i] > arr[i-1] && arr[i] > arr[i+1]? 1 : 0);\n                    //deb(pp, np);\n                    bit.upd(i, np-pp);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1718506320.0
}