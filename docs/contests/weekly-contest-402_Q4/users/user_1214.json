{
    "username": "Bills_King",
    "submission": "class Solution {\npublic:\n    \n    class BITree\n    {\n        public:\n        vector<int> BIT;\n        vector<int> nums;\n        \n        int lowbit(int x)\n        {\n            return x & (-1*x);\n        }\n        \n        BITree(vector<int> nums_):BIT(nums_.size()+5, 0), nums(nums_)\n        {\n            for(int i=1;i<=nums_.size();++i)\n            {\n                BIT[i] = nums_[i-1];\n                for(int j=i-2; j>=i-lowbit(i);--j)\n                {\n                    BIT[i] += nums[j];\n                }\n            }\n        }\n        \n        int sum(int k)\n        {\n            int ans = 0;\n            for( int i=k; i>0; i-=lowbit(i))\n            {\n                ans += BIT[i];\n            }\n            return ans;\n        }\n        \n        void update(int index, int val)\n        {\n            int delta = val - nums[index];\n            nums[index] = val;\n            for(int j=index+1;j<=nums.size();j+= lowbit(j))\n            {\n                BIT[j] += delta;\n            }\n        }\n        int sumRange(int left, int right)\n        {\n            return sum(right+1) - sum(left);\n        }\n    };\n    \n    void printVector( vector<int> &v )\n    {\n        for(int i=0;i<v.size();++i)\n        {\n            cout<<v[i]<<\" \";\n        }\n        cout<<\"\\n\";\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        vector<int> peakV;\n        peakV.push_back(0);\n        for(int i=1;i<nums.size()-1;++i)\n        {\n            if( nums[i-1] < nums[i] && nums[i] > nums[i+1] )\n            {\n                peakV.push_back(1);\n            }\n            else\n            {\n                peakV.push_back(0);\n            }\n        }\n        peakV.push_back(0);\n        \n        //printVector(peakV);\n        \n        BITree bitTree(peakV);\n        \n        vector<int> ans;\n        for(auto query : queries)\n        {\n            if(query[0] == 1)\n            {\n                //cout<<\"q1\\n\";\n                int r = query[2];\n                int l = query[1];\n                if( r-1 >=  l+1)\n                {\n                    ans.push_back( bitTree.sumRange(l+1, r-1) );\n                }\n                else\n                {\n                    ans.push_back(0);\n                }\n            }\n            else\n            {\n                //cout<<\"q2\\n\";\n                int index = query[1];\n                int val = query[2];\n                nums[index] = val;\n                \n\n                if( index>0 && index<nums.size()-1 && nums[index-1] < val && val > nums[index+1] )\n                {\n                    bitTree.update( index, 1 );\n                }\n                else\n                {\n                    bitTree.update( index, 0 );\n                }\n                \n                if( index-1 >= 0 )\n                {\n                    if( index-1>0 && index-1<nums.size()-1 && nums[index-1-1] < nums[index-1] && nums[index-1] > nums[index+1-1] )\n                    {\n                        bitTree.update( index-1, 1 );\n                    }\n                    else\n                    {\n                        bitTree.update( index-1, 0 );\n                    }\n                }\n                \n                \n                if( index+1 < nums.size() )\n                {\n                    if( index+1>0 && index+1<nums.size()-1 && nums[index-1+1] < nums[index+1] && nums[index+1] > nums[index+1+1] )\n                    {\n                        bitTree.update( index+1, 1 );\n                    }\n                    else\n                    {\n                        bitTree.update( index+1, 0 );\n                    }\n                }\n                \n                \n            }\n        }\n        \n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1718509202",
    "subm_id": "1289702123"
}