{
    "username": "KUSHBAJAJ07",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        \n        long long int ans = 0;\n        \n        int h = 1 , v = 1 , i =  horizontalCut.size()-1, j = verticalCut.size()-1;\n        \n        while(i>=0 && j>=0)\n        {\n            if(horizontalCut[i]>verticalCut[j])\n            {\n                ans += horizontalCut[i]*v;\n                h++;\n                i--;\n            }\n            else  if(horizontalCut[i]<verticalCut[j])\n            {\n                ans += verticalCut[j]*h;\n                v++;\n                j--;\n            }\n            else if(h>v)\n            {\n                 ans += verticalCut[j]*h;\n                v++;\n                j--;\n            }\n            else\n            {\n                ans += horizontalCut[i]*v;\n                h++;\n                i--;\n            }\n            // cout<<\"ans \"<<ans<<endl;\n        }\n        \n        \n        while(i>=0)\n        {\n             ans += horizontalCut[i]*v;\n                h++;\n                i--;   \n        }\n        \n         while(j>=0)\n        {\n              ans += verticalCut[j]*h;\n                v++;\n                j--; \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926003",
    "subm_id": "1320272964"
}