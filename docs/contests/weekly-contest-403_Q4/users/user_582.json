{
    "username": "zuo-an-17",
    "submission": "import numpy\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        \n        \n        def g(grid):\n            n, m = len(grid), len(grid[0])\n            def f(l, r, u, d):\n                left, right, up, down = r, l, d, u\n                for i in range(l, r+1):\n                    for j in range(u, d+1):\n                        if grid[j][i] == 1:\n                            left = min(left, i)\n                            right = max(right, i)\n                            up = min(up, j)\n                            down = max(down, j)\n                return max(0, (right-left+1)*(down-up+1))\n            ret = n*m\n            for col1 in range(m-1):\n                tmp = f(0, col1, 0, n-1)\n            \n                # print(tmp)\n                if col1<m-2:\n                    for col2 in range(col1+1, m-1):\n                        ret = min(ret, tmp+ f(col1+1, col2, 0, n-1)+f(col2+1, m-1, 0, n-1))\n                        # print(col2,  f(col1+1, col2, 0, n-1), f(col2+1, m-1, 0, n-1))\n                for row in range(n-1):\n                    ret = min(ret, tmp+f(col1+1, m-1, 0, row)+f(col1+1, m-1, row+1, n-1))\n                    # print(row, f(col1+1, m-1, 0, row), f(col1+1, m-1, row+1, n-1))\n            return ret\n        \n        # ans = g(grid)\n        \n        g1 = numpy.rot90(grid, k=1, axes=(0, 1))\n        g2 = numpy.rot90(grid, k=2, axes=(0, 1))\n        g3 = numpy.rot90(grid, k=3, axes=(0, 1))\n        # print(g1)\n        # print(g2)\n        # print(g3)\n        # return g(g1.tolist())\n        \n        return min(g(grid), g(g1.tolist()), g(g2.tolist()), g(g3.tolist()))\n    ",
    "submit_ts": 1719114920.0
}