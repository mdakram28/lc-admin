{
    "username": "MalharGadge",
    "submission": "typedef long long ll;\nconst ll mod = 1000000007;\n\n#define fr(a,b,i) for (int i=a;i<b;i++)\n#define rfr(a,b,i) for(int i=a;i>=b;i--)\n#define rep(i,n) fr(0,n,i)\n#define ff first\n#define ss second\n#define pb push_back\n#define endl '\\n'\n#define inf LLONG_MAX\n#define all(c) (c).begin(), (c).end()\n\ntemplate <typename T>\nvoid chmin(T &f, T s){ f = min(f, s); }\ntemplate <typename T>\nvoid chmax(T &f, T s){ f = max(f, s); }\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0)\n{if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nll modinv(ll a, ll b) {return expo(a, b - 2, b);}\nll modadd(ll a, ll b, ll m) { return ( a % m + b % m) % m;}\nll modmul(ll a, ll b, ll m) { return ( a % m * b % m) % m;}\nll modsub(ll a, ll b, ll m) { return ((a%m - b%m)+ m) % m;}\nll moddiv(ll a, ll b, ll m) { return modmul(a, modinv(b, m), m) % m ;}\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n\n        vector  dp(n + 1, vector<ll>(401, 0));\n        dp[0][0] = 1;\n        \n        map<int, int> require;\n        for (auto r : req) {\n            require[r[0] + 1] = r[1];\n        }\n\n        \n        fr(1, n + 1, i) {\n            fr(0, 401, j) {\n                fr(0, i, New) {\n                    ll prev = j - New;\n                    if (prev >= 0) {\n                        dp[i][j] = modadd(dp[i][j], dp[i - 1][prev], mod);\n                    }\n                }\n            }\n\n            if (require.find(i) != require.end()) {\n                int prev = require[i];\n                fr(0, 401, j) {\n                    if (j != prev) {\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n        \n\n        ll ans = 0;\n        for(auto i: dp[n]) ans = modadd(ans, i, mod);\n\n        return ans;\n    }\n};\n",
    "submit_ts": 1719071227.0
}