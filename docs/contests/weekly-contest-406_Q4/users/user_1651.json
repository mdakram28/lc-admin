{
    "username": "lucass19",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    vector<pair<long long, int> > cuts;\n\n    for (int cut : verticalCut)\n        cuts.push_back({ -cut, 0 });\n    for (int cut : horizontalCut)\n        cuts.push_back({ -cut, 1 });\n\n    sort(cuts.begin(), cuts.end());\n\n    long long numCuts[2] = { 0, 0 };\n    long long ans = 0;\n\n    for (pair<int, int> cut : cuts) {\n        int i = cut.second;\n\n        ans += (numCuts[i ^ 1] + 1) * -cut.first;\n\n        numCuts[i]++;\n    }\n    return ans;\n}\n};",
    "submit_ts": "1720926077",
    "subm_id": "1320275259"
}