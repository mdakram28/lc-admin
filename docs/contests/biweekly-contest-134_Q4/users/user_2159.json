{
    "username": "govind4go",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int target) {\n        int n = nums.size();\n        long long count = 0;\n        unordered_map<long long, long long> andResults;\n        \n        // Loop through each element in the array\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> currentResults;\n            \n            // Check if the current element equals the target\n            if (nums[i] == target) {\n                ++count;\n            }\n            \n            // Initialize the current results map with the current element\n            currentResults[nums[i]] = 1;\n            \n            // Iterate through the previous AND results\n            for (auto& [prevValue, freq] : andResults) {\n                long long newAndValue = prevValue & nums[i];\n                \n                // If the new AND result equals the target, increment the count\n                if (newAndValue == target) {\n                    count += freq;\n                }\n                \n                // Update the current results map\n                currentResults[newAndValue] += freq;\n            }\n            \n            // Update the previous AND results map\n            andResults = currentResults;\n        }\n        return count;\n    }\n};\n",
    "submit_ts": "1720280793",
    "subm_id": "1311802245"
}