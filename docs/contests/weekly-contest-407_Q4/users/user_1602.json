{
    "username": "silly-hodgkinsvo",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        typedef long long LL;\n        vector<LL> de1;\n        de1.emplace_back(nums[0]);\n        for (int i = 1; i < nums.size(); i++)\n            de1.emplace_back(nums[i] - nums[i - 1]);\n        vector<LL> de2;\n        de2.emplace_back(target[0]);\n        for (int i = 1; i < target.size(); i++) {\n            de2.emplace_back(target[i] - target[i - 1]);\n        }\n        LL adds = 0, subs = 0;\n        for (int i = 0; i < de1.size(); i++) {\n            if (de1[i] == de2[i]) continue;\n            if (de1[i] > de2[i]) adds += de1[i] - de2[i];\n            else subs += de2[i] - de1[i];\n        }\n        return max(adds, subs);\n    }\n};",
    "submit_ts": "1721533074",
    "subm_id": "548395938"
}