{
    "username": "park6",
    "submission": "from sortedcontainers import *\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        ps = [0,inf]\n        for q in queries:\n            if q[0] == 1:\n                ps.append(q[1])\n        ps.sort()\n        n = len(ps)\n        mp = {v: i for i, v in enumerate(ps)}\n        pre = 0\n        mx = []\n        for p in ps:\n            mx.append(p-pre)\n            pre = p  \n        tree = [0]*n\n        def update(pos, x):\n            while pos < n:\n                tree[pos] = max(tree[pos],x)\n                pos += pos&-pos\n        def get(pos):\n            tmp = 0\n            while pos:\n                tmp = max(tmp,tree[pos])\n                pos -= pos&-pos\n            return tmp \n        sl = SortedList(ps)\n        for i in range(1,n):\n            update(i,mx[i])\n        ans = []\n        for q in queries[::-1]:\n            if q[0] == 1:\n                p = q[1]\n                sl.remove(p)\n                i = sl.bisect_right(p)\n                d = sl[i]-sl[i-1]\n                update(mp[sl[i]],d)\n            else:\n                _, p, sz = q \n                i = sl.bisect_right(p)-1\n                # print(sl,i)\n                if p-sl[i] >= sz: \n                    ans.append(True)\n                    continue\n                tmp = get(mp[sl[i]])\n                if tmp >= sz:\n                    ans.append(True)\n                else:\n                    ans.append(False)\n        return ans[::-1]\n",
    "submit_ts": "1716651060",
    "subm_id": "534773533"
}