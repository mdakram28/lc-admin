{
    "username": "Nafis Raza",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll solve_to_get_me_ans(vector<vector<int>>& board){\n        int n = board.size();\n        int m = board[0].size();\n        ll maxi = LLONG_MIN;\n        vector<vector<ll>> best_sum(n, vector<ll>(3, LLONG_MIN));\n        vector<vector<int>> best_colm(n, vector<int>(3, -1));\n\n        for (int i = 0; i < n; ++i) {\n            vector<pair<ll, int>>  cols;\n            for (int j = 0; j < m; ++j) {\n                 cols.emplace_back(board[i][j], j);\n            }\n            sort( cols.begin(),  cols.end()); \n            reverse( cols.begin(),  cols.end()); \n\n            for (int k = 0; k < 3 && k < m; ++k) {\n                best_sum[i][k] =  cols[k].first;\n                best_colm[i][k] =  cols[k].second;\n            }\n        }\n        for (int row1 = 0; row1 < n; row1++) {\n            for (int row2 = row1 + 1; row2 < n; row2++) {\n                for (int row3 = row2 + 1; row3 < n; row3++) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (best_colm[row2][j] == best_colm[row1][i]){\n                                continue;\n                            } \n                            for (int k = 0; k < 3; ++k) {\n                                if (best_colm[row3][k] == best_colm[row1][i] || best_colm[row3][k] == best_colm[row2][j]) continue;\n\n                                ll sum = best_sum[row1][i] + best_sum[row2][j] + best_sum[row3][k];\n                                maxi = max(maxi, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxi;\n    }\n     ll maximumValueSum(vector<vector<int>>& grid) {\n        ll ans=solve_to_get_me_ans(grid);\n        return ans;\n     }\n};",
    "submit_ts": "1723910376",
    "subm_id": "1359228190"
}