{
    "username": "oneoffour",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        info = []\n\n        def update_info(num: int):\n            nonlocal info\n            if len(info) == 0:\n                info = [num]\n            else:\n                new_info = [num]\n                accum = num\n                for i in range(len(info)):\n                    prior_accum = accum\n                    accum = accum & info[i]\n                    if prior_accum != accum:\n                        new_info.append(info[i])\n                info = new_info\n\n        min_diff = float(\"inf\")\n\n        for num in nums:\n            accum = num\n            min_diff = min(min_diff, abs(accum - k))\n            for i in range(len(info)):\n                accum = accum & info[i]\n                min_diff = min(min_diff, abs(accum - k))\n            if min_diff == 0:\n                break\n            update_info(num)\n\n        return min_diff",
    "submit_ts": 1717300006.0
}