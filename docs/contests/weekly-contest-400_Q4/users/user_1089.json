{
    "username": "_ritik_yadav",
    "submission": "class Solution {\npublic:\n    \n      int minDiff(vector<int>& nums, int target) {\n        int minDiff = std::abs(nums[0] - target);\n        \n        std::unordered_map<int, int> bitCounts;\n        int currentAND = nums[0];\n        int num = nums[0];\n        for (int bit = 0; bit < 32; bit++) {\n            if (num & (1 << bit)) {\n                bitCounts[bit]++;\n            }\n        }\n        \n        int left = 0, right = 0;\n        while (right < nums.size()) {\n            if (currentAND > target || left > right) {\n                right++;\n                if (right >= nums.size()) {\n                    break;\n                }\n                int num = nums[right];\n                for (int bit = 0; bit < 32; bit++) {\n                    if (num & (1 << bit)) {\n                        bitCounts[bit]++;\n                    }\n                }\n            } else {\n                int num = nums[left];\n                for (int bit = 0; bit < 32; bit++) {\n                    if (num & (1 << bit)) {\n                        bitCounts[bit]--;\n                    }\n                }\n                left++;\n            }\n\n            currentAND = 0;\n            for (auto it = bitCounts.begin(); it != bitCounts.end(); it++) {\n                if (it->second == right - left + 1) {\n                    currentAND += (1 << it->first);\n                }\n            }\n\n            if (left <= right) {\n                minDiff = std::min(minDiff, std::abs(currentAND - target));\n            }\n        }\n\n        return minDiff;\n    }\n    int minimumDifference(vector<int>& nums, int target) {\n          return minDiff(nums, target);\n    }\n};",
    "submit_ts": 1717299875.0
}