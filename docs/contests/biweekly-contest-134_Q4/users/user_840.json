{
    "username": "Rakesh_898",
    "submission": "/*\u0950 \u092d\u0942\u0930\u094d\u092d\u0941\u0935\u0903 \u0938\u094d\u0935 \u0924\u0924\u094d\u0938\u0935\u093f\u0924\u0941\u0930\u094d\u0935\u0930\u0947\u0923\u094d\u092f\u0902\n\u092d\u0930\u094d\u0917\u094b \u0926\u0947\u0935\u0938\u094d\u092f \u0927\u0940\u092e\u0939\u093f\n\u0927\u093f\u092f\u094b \u092f\u094b \u0928\u0903 \u092a\u094d\u0930\u091a\u094b\u0926\u092f\u093e\u0924\u0965*/\n\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#define ll long long int\n#define vi vector<ll>\n#define vec vector<int>\n#define vs vector<string>\n#define pb push_back\n#define forll for (ll i = 0; i < n; i++)\n#define forf(i, a, b) for (ll i = a; i < b; i++)\n#define forr(i, x, y) for (ll i = x; i >= y; i--)\n#define mod 1000000007\n// #define MOD 998244353\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate <class T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\nclass Solution\n{\npublic:\n    long long countSubarrays(vector<int> &nums, int t)\n    {\n        ll ans = 0;\n        ll n = nums.size();\n        vector<vector<ll>> pref(n + 2, vector<ll>(33, 0));\n        forll\n        {\n            for (ll k = 0; k < 31; ++k)\n            {\n                ll bit = ((nums[i] * 1ll) >> k) & 1ll;\n                pref[i + 1][k] = (pref[i][k] + bit);\n            }\n        }\n        for (ll i = 0; i < n; ++i)\n        {\n            ll l = i;\n            ll r = n - 1;\n            ll pos1 = -1;\n            ll pos2 = -1;\n            while (l <= r)\n            {\n                ll mid = (l + r) >> 1ll;\n                ll rangeand = 0;\n                for (ll k = 0; k < 31; ++k)\n                {\n                    if (pref[mid + 1][k] - pref[i][k] == mid - i + 1)\n                    {\n                        rangeand += (1ll << k) * 1ll;\n                    }\n                }\n                if (rangeand == t)\n                {\n                    pos1 = mid;\n                    r = mid - 1;\n                }\n                else if (rangeand < t)\n                {\n                    r = mid - 1;\n                }\n                else\n                {\n                    l = mid + 1;\n                }\n            }\n            l = i;\n            r = n - 1;\n            while (l <= r)\n            {\n                ll mid = (l + r) >> 1ll;\n                ll rangeand = 0;\n                for (ll k = 0; k < 33; ++k)\n                {\n                    if (pref[mid + 1][k] - pref[i][k] == mid - i + 1)\n                    {\n                        rangeand += (1ll << k) * 1ll;\n                    }\n                }\n                if (rangeand == t)\n                {\n                    pos2 = mid;\n                    l = mid + 1;\n                }\n                else if (rangeand < t)\n                {\n                    r = mid - 1;\n                }\n                else\n                {\n                    l = mid + 1;\n                }\n            }\n            if (pos1 != -1 && pos2 != -1)\n            {\n                ans += (pos2 - pos1 + 1) * 1ll;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279879",
    "subm_id": "1311768747"
}