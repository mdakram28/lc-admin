{
    "username": "sbian32",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                tmp = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                ans += min(tmp, 4 - tmp)\n        cnt = [0, 0, 0]\n        for i in range(m // 2, math.ceil(m / 2)):\n            for j in range(n // 2):\n                cnt[grid[i][j] + grid[i][n - 1 - j]] += 1\n        for i in range(m // 2):\n            for j in range(n // 2, math.ceil(n / 2)):\n                cnt[grid[i][j] + grid[m - 1 - i][j]] += 1\n        center = 0\n        if m % 2 == 1 and n % 2 == 1:\n            center = grid[m // 2][n // 2]\n        lower, upper, tmp = cnt[2] * 2, (cnt[1] + cnt[2]) * 2, 2\n        for num in range(lower, upper + 1, 2):\n            if num % 4 == 0:\n                tmp = 0\n                break\n        ans += tmp + cnt[1] + center\n        return ans",
    "submit_ts": "1722697639",
    "subm_id": "1343153599"
}