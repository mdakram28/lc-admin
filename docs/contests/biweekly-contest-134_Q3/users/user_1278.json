{
    "username": "rohankarn035",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n           int count = 0;\n    int start = 0;\n    int end = 1;\n    int length = colors.size();\n\n    while (end < length + k && start < length) {\n        int tempStart = end;\n        int currentIndex = tempStart % length;\n\n        // Find the end index of the current valid segment\n        while (colors[currentIndex] != colors[(currentIndex - 1 + length) % length] && tempStart < length + k - 1) {\n            tempStart++;\n            currentIndex = tempStart % length;\n        }\n\n        // Compute the number of valid segments found\n        count += std::max(tempStart - start - k + 1, 0);\n        start = tempStart;\n        end = start + 1;\n    }\n\n    return count;\n  \n        \n    }\n};",
    "submit_ts": "1720280901",
    "subm_id": "1311806068"
}