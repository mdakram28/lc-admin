{
    "username": "iampratt",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n        int totalFlips = 0;\n        for (int r = 0; r < rows / 2; ++r) {\n            for (int c = 0; c < cols / 2; ++c) {\n                vector<int> elements = {\n                    matrix[r][c],\n                    matrix[rows - r - 1][c],\n                    matrix[r][cols - c - 1],\n                    matrix[rows - r - 1][cols - c - 1]\n                };\n                int oneCount = count(elements.begin(), elements.end(), 1);\n                totalFlips += min(oneCount, 4 - oneCount);\n            }\n        }\n        int possibleFlips = 0;\n        int centralOnes = 0; \n        if (rows % 2 != 0) {\n            for (int c = 0; c < cols / 2; ++c) {\n                if (matrix[rows / 2][c] != matrix[rows / 2][cols - c - 1]) {\n                    totalFlips += 1;\n                    possibleFlips += 1;\n                } else {\n                    if (matrix[rows / 2][c] == 1) {\n                        centralOnes += 1;\n                    }\n                }\n            }\n        }\n        if (cols % 2 != 0) {\n            for (int r = 0; r < rows / 2; ++r) {\n                if (matrix[r][cols / 2] != matrix[rows - r - 1][cols / 2]) {\n                    totalFlips += 1;\n                    possibleFlips += 1;\n                } else {\n                    if (matrix[r][cols / 2] == 1) {\n                        centralOnes += 1;\n                    }\n                }\n            }\n        } \n        if (rows % 2 != 0 && cols % 2 != 0 && matrix[rows / 2][cols / 2] == 1) {\n            totalFlips += 1;\n        } \n        if (possibleFlips == 0 && centralOnes % 2 != 0) {\n            totalFlips += 2;\n        }\n        return totalFlips;\n    }\n};",
    "submit_ts": "1722699479",
    "subm_id": "1343212902"
}