{
    "username": "Ankitsisodya",
    "submission": "class Solution {\npublic:\n    long long cal(vector<int>& h, vector<int>& v, long long ho, long long vo) {\n        if (ho < h.size() && vo < v.size()) {\n            if (h[ho] > v[vo])\n                return (vo + 1) * h[ho] + cal(h, v, ho + 1, vo);\n            else\n                return (ho + 1) * v[vo] + cal(h, v, ho, vo + 1);\n        } else if (ho < h.size()) {\n            return (vo + 1) * h[ho] + cal(h, v, ho + 1, vo);\n        } else if (vo < v.size()) {\n            return (ho + 1) * v[vo] + cal(h, v, ho, vo + 1);\n        }\n        return 0;\n    }\n    long long minimumCost(int m, int n, vector<int>& h,\n                          vector<int>& v) {\n        sort(h.rbegin(), h.rend());\n        sort(v.rbegin(), v.rend());\n        return cal(h, v, 0, 0);\n    }\n};",
    "submit_ts": "1720925977",
    "subm_id": "1320272137"
}