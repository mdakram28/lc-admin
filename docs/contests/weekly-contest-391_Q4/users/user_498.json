{
    "username": "SharathSsSs",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& a) {\n        //3,10  4,4  5,15  10,2\n        //13 8 20 12\n        //-7 0 -10 8\n        int n = a.size();\n        vector<pair<int,pair<int,int>>>pq1;\n        vector<pair<int,pair<int,int>>>pq2;\n        for(int i = 0; i<n; i++){\n            pq1.push_back({a[i][0] + a[i][1],{a[i][0], a[i][1]}});\n            pq2.push_back({a[i][0] - a[i][1],{a[i][0], a[i][1]}});\n        }\n        // cout<<\"YES\"<<endl;\n        sort(pq1.begin(), pq1.end());\n        sort(pq2.begin(), pq2.end());\n        int max1x,max2x,max1y,max2y;\n        // cout<<\"YES\"<<endl;\n        if(pq1.back().first - pq1.front().first >= pq2.back().first - pq2.front().first){\n            max1x = pq1.back().second.first;\n            max2x = pq1.front().second.first;\n            max1y = pq1.back().second.second;\n            max2y = pq1.front().second.second;\n        }\n        else{\n            max1x = pq2.back().second.first;\n            max2x = pq2.front().second.first;\n            max1y = pq2.back().second.second;\n            max2y = pq2.front().second.second;\n        }\n        // cout<<\"YES\"<<endl;\n        int mini = 1e9;\n        //case1\n        vector<pair<int,int>>tempa;\n        int cnt = 0;\n        for(int i = 0; i<n; i++){\n            if(a[i][0] == max1x && a[i][1] == max1y && cnt == 0){\n                cnt++;\n                continue;\n            }\n            tempa.push_back({a[i][0], a[i][1]});\n        }\n        vector<pair<int,pair<int,int>>>pq11;\n        vector<pair<int,pair<int,int>>>pq21;\n        for(int i = 0; i<n-1; i++){\n            pq11.push_back({tempa[i].first + tempa[i].second,{tempa[i].first, tempa[i].second}});\n            pq21.push_back({tempa[i].first - tempa[i].second,{tempa[i].first, tempa[i].second}});\n        }\n        sort(pq11.begin(), pq11.end());\n        sort(pq21.begin(), pq21.end());\n        mini = min(mini, max(pq11.back().first - pq11.front().first, pq21.back().first - pq21.front().first));\n        //case2\n        cnt = 0;\n        tempa.clear();\n        for(int i = 0; i<n; i++){\n            if(a[i][0] == max2x && a[i][1] == max2y && cnt == 0){\n                cnt++;\n                continue;\n            }\n            tempa.push_back({a[i][0], a[i][1]});\n        }\n        vector<pair<int,pair<int,int>>>pq12;\n        vector<pair<int,pair<int,int>>>pq22;\n        for(int i = 0; i<n-1; i++){\n            pq12.push_back({tempa[i].first + tempa[i].second,{tempa[i].first, tempa[i].second}});\n            pq22.push_back({tempa[i].first - tempa[i].second,{tempa[i].first, tempa[i].second}});\n        }\n        sort(pq12.begin(), pq12.end());\n        sort(pq22.begin(), pq22.end());\n        mini = min(mini, max(pq12.back().first - pq12.front().first, pq22.back().first - pq22.front().first));\n        \n        return mini;\n    }\n};"
}