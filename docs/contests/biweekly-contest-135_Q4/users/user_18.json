{
    "username": "htedsv-i",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  1000000007 //998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (550005)\n\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n    cout<<fastPow(4, MOD-2) * 7 % MOD;\n}\nclass Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        n = grid.size();\n        vector<vector<vector<ll>>> dp(n+2, vector<vector<ll>>(n+2, vector<ll>(n+2, -1)));\n        REP(j,n+1) dp[1][0][j]=0;\n        vector<vector<ll>> ps(n+1, vector<ll>(n+1, 0));\n        REQ(i,n) REQ(j,n) {\n            ps[i][j] = grid[i-1][j-1];\n            ps[i][j] += ps[i-1][j];\n        }\n        for(int i=2;i<=n;i++) {\n            REP(q,n+1) {\n                vector<ll> tmp(n+1, -1), tmpOri(n+1, -1);\n                REP(p,n+1) {\n                    tmp[p] = dp[i-1][p][q];\n                    tmpOri[p]=tmp[p];\n                    if (tmp[p] != -1 && p>q) tmp[p]+=ps[p][i-1]-ps[q][i-1];\n                    \n                    if (p) maxtt(tmp[p], tmp[p-1]);\n                    if (p) maxtt(tmpOri[p], tmpOri[p-1]);\n                }\n                \n                REP(k,n+1) {\n                    if (k<=q) {\n                        maxtt(dp[i][q][k], tmp[n]);\n                    } else {\n                        maxtt(dp[i][q][k], tmpOri[k]+ps[k][i-1]-ps[q][i-1]);\n                        maxtt(dp[i][q][k], tmp[n]);\n                    }\n                }\n            }\n//            REP(p,n+1) REP(q,n+1) if (dp[i-1][p][q] != -1) {\n//                REP(k,n+1) {\n//                    int R=max(p,k);\n//                    ll val=0;\n//                    if (R>q) {\n//                        val = ps[R][i-1] - ps[q][i-1];\n//                    }\n//                    maxtt(dp[i][q][k], dp[i-1][p][q] +  val );\n//                }\n//            }\n        }\n        ll ans=0;\n        REP(p,n+1) REP(q,n+1) if (dp[n][p][q] != -1) {\n            ll tmp = dp[n][p][q];\n            if (p>q) tmp += ps[p][n] - ps[q][n];\n            maxtt(ans, tmp);\n        }\n        return ans;\n    }\n};\nint main1() {\n//    freopen(\"big00.in\",\"r\",stdin);\n//    freopen(\"big1.out\",\"w\",stdout);\n    int t=1;\n//    ios::sync_with_stdio(false);\n//    cin.tie(0); cout.tie(0);\n//    cin>>t;\n//    scanf(\"%d\", &t);\n    REQ(i,t) {\n        fmain(i);\n    }\n    return 0;\n}",
    "submit_ts": "1721488470",
    "subm_id": "548314597"
}