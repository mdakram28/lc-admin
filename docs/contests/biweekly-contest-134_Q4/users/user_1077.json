{
    "username": "unm0l",
    "submission": "#define ll long long\nclass Solution { \npublic: \n    long long countSubarrays(vector<int>& v, int k) { \n        int n = v.size(); \n        ll ans = 0; \n        for(int i=0;i<n;i++) ans++;\n         \n        map<ll, ll> mp; \n \n        for (int i = 0; i < n; ++i) { \n            map<ll, ll> curr;   \n            if (v[i] == k) { \n                ans++; \n            } \n            curr[v[i]] = 1; \n \n            for (auto it : mp) { \n                ll tempAnd = it.first & v[i]; \n                if (tempAnd == k) { \n                    ans += it.second; \n                } \n                curr[tempAnd] += it.second; \n            } \n             \n            mp = curr; \n        } \n        for(int i=0;i<n;i++) ans--;\n        return ans; \n    } \n};",
    "submit_ts": "1720279710",
    "subm_id": "1311762029"
}