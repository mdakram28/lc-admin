{
    "username": "OTTFF",
    "submission": "typedef long long LL;\ntypedef pair<int, int> PII;\nstruct SegT {\n    int n;\n    vector<LL> sum, add;\n    SegT(int n) : n(n), sum(n << 2), add(n << 2) {}\n\n    void push(int o, int l, int m, int r) {\n        if (add[o] == 0) return;\n\n        add[o << 1] += add[o];\n        sum[o << 1] += add[o] * (m - l + 1);\n\n        add[o << 1 | 1] += add[o];\n        sum[o << 1 | 1] += add[o] * (r - m);\n\n        add[o] = 0;\n    }\n\n    int L, R;\n    LL V;\n    void update(int o, int l, int r) {\n        if (L <= l && r <= R) {\n            add[o] += V;\n            sum[o] += V * (r - l + 1);\n            return;\n        }\n        int mid = (l + r) >> 1;\n        push(o, l, mid, r);\n\n        if (L <= mid) {\n            update(o << 1, l, mid);\n        }\n        if (mid < R) {\n            update(o << 1 | 1, mid + 1, r);\n        }\n        sum[o] = sum[o << 1] + sum[o << 1 | 1];\n    }\n\n    void upd(int l, int r, int v) {\n        L = l;\n        R = r;\n        V = v;\n        update(1, 0, n - 1);\n    }\n\n    LL query(int o, int l, int r) {\n        if (L <= l && r <= R) return sum[o];\n        int mid = (l + r) >> 1;\n\n        push(o, l, mid, r);\n\n        LL ans = 0;\n        if (L <= mid) ans += query(o << 1, l, mid);\n        if (mid < R) ans += query(o << 1 | 1, mid + 1, r);\n        return ans;\n    }\n\n    LL qry(int l, int r) {\n        L = l;\n        R = r;\n        return query(1, 0, n - 1);\n    }\n};\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.length();\n        vector<int> sum0(n + 1), sum1(n + 1);\n        for (int i = 0; i < n; i++) {\n            sum0[i + 1] = sum0[i];\n            sum1[i + 1] = sum1[i];\n\n            if (s[i] == '0') {\n                sum0[i + 1]++;\n            } else {\n                sum1[i + 1]++;\n            }\n        }\n\n        vector<vector<PII>> qs(n);\n        int ii = 0;\n        for (auto& q : queries) {\n            qs[q[0]].push_back({q[1], ii});\n            ii++;\n        } \n\n        vector<LL> ans(ii);\n        SegT segt(n);\n        int j = n - 1;\n        for (int i = n - 1; i >= 0; i--) {\n            while (sum0[j + 1] - sum0[i] > k && sum1[j + 1] - sum1[i] > k) {\n                j--;\n            }\n\n            // cout << i << ' ' << j << endl;\n\n            segt.upd(i, j, 1);\n\n            for (auto&& [r, qid] : qs[i]) {\n                ans[qid] = segt.qry(i, r);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951545",
    "subm_id": "1359774117"
}