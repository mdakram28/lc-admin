{
    "username": "aiyo_kingo",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        stack<int> st;\n        st.push(0); long long res=0;\n        vector<long long>diff;\n        for(int i=0;i<nums.size();i++){\n            diff.push_back(target[i]-nums[i]);\n        }\n        // for(int i=0;i<diff.size();i++){\n        //     int ma=INT_MAX;\n        //     while(i<diff.size() and diff[i]<0){\n        //         ma=min(ma,diff[i]);\n        //         diff[i]=0;\n        //         i++;\n        //     }\n        //     if(ma!=INT_MAX){\n        //         res+=ma*-1;\n        //         i--;\n        //     }\n        // }\n        // for(int j=0;j<diff.size();j++){\n        //     int i=diff[j];\n        //     if(i>st.top()) res+=i-st.top();\n        //     while(st.top()>i) st.pop();\n        //     st.push(i);\n        // }\n        // return res;\n        long long cur = 0 ;      \n        for(int i=0;i<diff.size();i++)\n            if (i == 0 or (diff[i - 1] > 0 and diff[i] > 0) or (diff[i - 1] < 0 and diff[i] < 0)){\n                long long ex = abs(diff[i]) - abs(cur);\n                if (ex > 0)\n                    res += ex;\n                cur = diff[i];\n            }\n            else{\n                res += abs(diff[i]);\n                cur = diff[i] ;\n            }       \n        return res;\n    }\n};",
    "submit_ts": "1721533120",
    "subm_id": "1328001751"
}