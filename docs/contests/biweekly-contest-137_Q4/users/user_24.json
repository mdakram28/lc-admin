{
    "username": "Hongrock",
    "submission": "using ll = long long;\nconst ll inf = (ll)1e18;\nclass Solution {\npublic:\n    ll solve(vector<vector<int>> &a, int n, int m){\n        ll ret = -inf;\n        vector<vector<vector<ll>>> dp(n, vector<vector<ll>>(m, vector<ll>(2, -inf)));\n        vector<vector<ll>> col(n, vector<ll>(m, -inf));\n        vector<vector<ll>> row(n, vector<ll>(m, -inf));\n        for(int i=0; i<n; ++i){\n            for(int j=0; j<m; ++j){\n                dp[i][j][0] = a[i][j];\n                row[i][j] = a[i][j];\n                col[i][j] = a[i][j];\n                if(i){\n                    dp[i][j][0] = max(dp[i][j][0], dp[i-1][j][0]);\n                    dp[i][j][1] = max(dp[i][j][1], dp[i-1][j][1]);\n                    col[i][j] = max(col[i][j], col[i-1][j]);\n                }\n                if(j){\n                    dp[i][j][0] = max(dp[i][j][0], dp[i][j-1][0]);\n                    dp[i][j][1] = max(dp[i][j][1], dp[i][j-1][1]);\n                    row[i][j] = max(row[i][j], row[i][j-1]);\n                }\n                if(i && j){\n                    ret = max(ret, a[i][j] + dp[i-1][j-1][1]);\n                    dp[i][j][1] = max(dp[i][j][1], dp[i-1][j-1][0] + a[i][j]);\n                    dp[i][j][1] = max(dp[i][j][1], col[i-1][j] + row[i][j-1]);\n                }\n            }\n        }\n        return ret;\n    }\n    long long maximumValueSum(vector<vector<int>>& a) {\n        int n = a.size(), m = a[0].size();\n        ll ans = solve(a, n, m);\n        for(int i=0; i<n; ++i)  reverse(a[i].begin(), a[i].end());\n        ans = max(ans, solve(a, n, m));\n        for(int i=0, j=n-1; i<j; ++i, --j){\n            swap(a[i], a[j]);\n        }\n        ans = max(ans, solve(a, n, m));\n        for(int i=0; i<n; ++i)  reverse(a[i].begin(), a[i].end());\n        ans = max(ans, solve(a, n, m));\n        return ans;\n    }\n};",
    "submit_ts": "1723906218",
    "subm_id": "556316984"
}