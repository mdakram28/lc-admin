{
    "username": "Vraj109",
    "submission": "#define ll long long int\n#define pb push_back\n#define f(i, j, k) for (int i = j; i < k; i++)\n#define rev(i, j, k) for (int i = j; i >= k; i--)\n#define all(x) (x).begin(), (x).end()\n\nconst int MOD = 1e9 + 7;\ntypedef vector<int> vi;\ntypedef vector<pair<int, int>> vp;\ntypedef priority_queue<int> pq;\nconst int N = 2e5 + 1;\nclass Solution {\npublic:\n    void build(vector<int>& arr,vector<int>& seg,int ind,int low,int high){\n        int n = arr.size();\n        int mid = low + (high - low)/2;\n        if(low == high){\n            if(low != 0 and low != (n-1)){\n                if(arr[low] > arr[low-1] and arr[low] > arr[low+1]) seg[ind] = 1;\n                else seg[ind] = 0;\n            }\n            else seg[ind] = 0;\n            return;\n        }\n        build(arr,seg,2*ind + 1,low,mid);\n        build(arr,seg,2*ind+2,mid+1,high);\n        int ans = seg[ind*2 + 1]+seg[ind*2+2];\n        seg[ind] = (ans);\n    }\n\n    int calc(vector<int>& seg,int ind,int low,int high,int l,int r){\n        if(low >= l and high <= r){\n            return seg[ind];\n        }\n        if(low > r or high < l){\n            return 0;\n        }\n        int mid = low + (high - low) / 2;\n        return (calc(seg,ind*2+1,low,mid,l,r)+calc(seg,ind*2+2,mid+1,high,l,r));\n    }\n    void update(vector<int>& arr,vector<int>& seg,int ind,int low,int high,int updateInd,int updateValue){\n        int n = arr.size();\n        if(updateInd < low or updateInd > high){\n            return;\n        }\n        if(low == high and low == updateInd){\n            if(low != 0 and low != (n-1)){\n                if(arr[low] > arr[low-1] and arr[low] > arr[low+1]) seg[ind] = 1;\n                else seg[ind] = 0;\n            }else seg[ind] = 0;\n            return;\n        }\n        int mid = low + (high - low) / 2;\n        update(arr,seg,2*ind+1,low,mid,updateInd,updateValue);\n        update(arr,seg,2*ind+2,mid+1,high,updateInd,updateValue);\n        int ans = seg[ind*2+1] + seg[ind*2+2];\n        seg[ind] = ans;\n        return;\n    }\n\n    vector<int> countOfPeaks(vector<int>& arr, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int n = arr.size();\n        vector<int> seg(4*n,0);\n        build(arr,seg,0,0,n-1);\n        for(auto a:queries){\n            if(a[0] == 1){\n                int t = calc(seg,0,0,n-1,a[1],a[2]);\n                if(a[1] != 0 and a[1] != n-1){\n                    if(arr[a[1]] > arr[a[1]-1] and arr[a[1]] > arr[a[1]+1]) t--;\n                }\n                if(a[2] != 0 and a[2] != n-1 and a[2] != a[1]){\n                    if(arr[a[2]] > arr[a[2]-1] and arr[a[2]] > arr[a[2]+1]) t--;\n                }\n                ans.pb(t);\n            } else {\n                arr[a[1]] = a[2];\n                update(arr,seg,0,0,n-1,a[1],a[2]);\n                if(a[1] != 0)update(arr,seg,0,0,n-1,a[1]-1,a[2]);\n                if(a[1] != n-1)update(arr,seg,0,0,n-1,a[1]+1,a[2]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509053.0
}