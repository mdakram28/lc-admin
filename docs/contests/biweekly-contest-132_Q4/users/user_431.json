{
    "username": "DYR90",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        res = 1\n        dp = {}\n        dp[nums[0]] = [1] * (k+1)\n        longest = [nums[0] for _ in range(k+1)]\n        \n        for i in range(1, n):\n            arr = [-1] * (k+1)\n            for j in range(k, -1, -1):\n                cur = 1\n                if nums[i] in dp:\n                    cur = max(cur, 1+dp[nums[i]][j])\n                if j > 0:\n                    cur = max(cur, 1+dp[longest[j-1]][j-1])\n                if cur > dp[longest[j]][j]:\n                    longest[j] = nums[i]\n                arr[j] = cur\n            dp[nums[i]] = arr\n            res = max(res, arr[k])\n        \n        return res",
    "submit_ts": 1717861625.0
}