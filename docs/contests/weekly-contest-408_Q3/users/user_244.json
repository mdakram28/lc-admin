{
    "username": "saikrishna17394",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int len = s.length();\n        int zeroes_lim = sqrt(len);\n        zeroes_lim++;\n\n        vector<int> v;\n        int idx = 0;\n        int ans = 0;\n        int cur_ones, cur_zeroes, cur_idx;\n        int next_ones;\n\n        for (int i = 0; i < len; i++) {\n\n            if (s[i] == '0') {\n                v.push_back(i);\n\n                if (v.size() > zeroes_lim) {\n                    idx++;\n                }\n\n                cur_ones = 0;\n            }\n            else {\n\n                if (!v.empty()) {\n                    ans += i - v.back();\n                    cur_ones = i - v.back();\n                }\n                else {\n                    ans += i + 1;\n                    cur_ones = i + 1;\n                }\n            }\n\n            cur_zeroes = 0;\n\n            for (int j = v.size() - 1; j >= idx; j--) {\n                cur_zeroes++;\n                \n                if (j > 0) {\n                    next_ones = v[j] - v[j - 1] - 1;\n                }\n                else {\n                    next_ones = v[j];\n                }\n\n                if (cur_ones >= cur_zeroes * cur_zeroes) {\n                    ans++;\n                    ans += next_ones;\n                }\n                else if ((cur_ones + next_ones) >= cur_zeroes * cur_zeroes) {\n                    ans += cur_ones + next_ones - (cur_zeroes * cur_zeroes) + 1;\n                }\n\n                cur_ones += next_ones;\n            }\n\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722137683",
    "subm_id": "1335770751"
}