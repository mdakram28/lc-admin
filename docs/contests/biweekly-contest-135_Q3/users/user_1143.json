{
    "username": "niteshsaxena03",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& numbers, int target) {\n        map<int, vector<int>> diffMap;\n        vector<int> maxValues;\n        int length = numbers.size();\n\n        for(int i = 0; i < length / 2; i++) {\n            int num1 = numbers[i];\n            int num2 = numbers[length - i - 1];\n            int difference = abs(num1 - num2);\n            int maxVal = max({num1, num2, target - num1, target - num2});\n            diffMap[difference].push_back(maxVal);\n            maxValues.push_back(maxVal);\n        }\n\n        int minChangesRequired = length;\n        sort(maxValues.begin(), maxValues.end());\n\n        for(const auto& entry : diffMap) {\n            int diff = entry.first;\n            const vector<int>& values = entry.second;\n\n            int index = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            int changes = index * 2 + (length / 2 - index);\n\n            for(int value : values) {\n                if(value < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChangesRequired = min(minChangesRequired, changes);\n        }\n\n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721488598",
    "subm_id": "1327427323"
}