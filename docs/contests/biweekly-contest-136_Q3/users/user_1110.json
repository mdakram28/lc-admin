{
    "username": "Dstray",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                n1 = grid[i][j] + grid[i][n - 1 - j] + \\\n                    grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                ans += min(n1, 4 - n1)\n        cnt1 = [0, 0, 0]\n        if n % 2:\n            j = n // 2\n            for i in range(m // 2):\n                n1 = grid[i][j] + grid[m - 1 - i][j]\n                cnt1[n1] += 1\n        if m % 2:\n            row = grid[m // 2]\n            for j in range(n // 2):\n                n1 = row[j] + row[n - 1 - j]\n                cnt1[n1] += 1\n            if n & 1:\n                ans += grid[m // 2][n // 2]\n        if cnt1[1]:\n            ans += cnt1[1]\n        elif cnt1[2] & 1:\n            ans += 2\n        return ans",
    "submit_ts": "1722699125",
    "subm_id": "1343202201"
}