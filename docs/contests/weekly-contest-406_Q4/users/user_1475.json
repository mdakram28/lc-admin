{
    "username": "a1s2d3f4g5",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int hCuts = 1, vCuts = 1;\n        long long int cost = 0;\n        \n        int i = 0, j = 0;\n        \n        while (i < m-1 && j < n-1) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                cost += (long long)horizontalCut[i] * vCuts;\n                hCuts++;\n                i++;\n            } else {\n                cost += (long long)verticalCut[j] * hCuts;\n                vCuts++;\n                j++;\n            }\n        }\n        \n        while (i < m-1) {\n            cost += (long long)horizontalCut[i] * vCuts;\n            i++;\n        }\n        \n        while (j < n-1) {\n            cost += (long long)verticalCut[j] * hCuts;\n            j++;\n        }\n        \n        return cost;\n    }\n};",
    "submit_ts": "1720925981",
    "subm_id": "1320272278"
}