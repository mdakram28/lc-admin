{
    "username": "chromate00",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2)\n    {\n        int n=size(edges1)+1;\n        int m=size(edges2)+1;\n        vector<vector<int>>adj1(n),adj2(m);\n        for(auto v:edges1)\n        {\n            adj1[v[0]].push_back(v[1]);\n            adj1[v[1]].push_back(v[0]);\n        }\n        for(auto v:edges2)\n        {\n            adj2[v[0]].push_back(v[1]);\n            adj2[v[1]].push_back(v[0]);\n        }\n        auto dfs=[&](auto dfs,auto&adj,int i,int par=-1)->pair<int,int>\n        {\n            pair<int,int>def{0,0};\n            vector<int>depths;\n            for(int j:adj[i])\n            {\n                if(j!=par)\n                {\n                    auto[a,b]=dfs(dfs,adj,j,i);\n                    def.first=max(def.first,b+1);\n                    def.first=max(def.first,a);\n                    depths.push_back(b+1);\n                }\n            }\n            sort(begin(depths),end(depths),greater<>{});\n            if(size(depths)>1)\n            {\n                def.first=max(def.first,depths[0]+depths[1]);\n            }\n            if(!depths.empty())def.second=max(def.second,depths[0]);\n            //cout<<i<<\" \"<<def.first<<\" \"<<def.second<<endl;\n            return def;\n        };\n        auto[a,d1]=dfs(dfs,adj1,0);\n        //cout<<endl;\n        auto[b,d2]=dfs(dfs,adj2,0);\n        //cout<<a<<\" \"<<d1<<\" \"<<b<<\" \"<<d2<<endl;\n        return max({(a+1)/2+(b+1)/2+1,a,b});\n    }\n};",
    "submit_ts": 1719717052.0
}