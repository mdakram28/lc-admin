{
    "username": "tanakat01",
    "submission": "from bisect import bisect_left\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        o_k, z_k = [], []\n        for b in range(32):\n            if k & (1 << b) != 0:\n                o_k.append(b)\n            else:\n                z_k.append(b)\n        zeros = [[] for _ in range(32)]\n        for i, x in enumerate(nums):\n            for b in range(32):\n                if x & (1 << b) == 0:\n                    zeros[b].append(i)\n        n = len(nums)\n        ans = 0\n        for i in range(n):\n            i0 = n\n            i1 = i\n            for b in o_k:\n                j = bisect_left(zeros[b], i)\n                if j < len(zeros[b]):\n                    i0 = min(i0, zeros[b][j])\n            for b in z_k:\n                j = bisect_left(zeros[b], i)                    \n                if j < len(zeros[b]):\n                    i1 = max(i1, zeros[b][j])\n                else:\n                    i1 = max(i1, n)\n            #print(f'i={i}, i0={i0}, i1={i1}')\n            if i0 >= i1:\n                ans += i0 - i1\n        return ans          ",
    "submit_ts": "1720281189",
    "subm_id": "1311816277"
}