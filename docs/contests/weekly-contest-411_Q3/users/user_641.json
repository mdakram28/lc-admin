{
    "username": "bingyan2",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return \"9\" * n\n        if k == 2:\n            if n >= 2:\n                return \"8\"+ \"9\" * (n-2) + \"8\"\n            else:\n                return \"8\"\n        if k == 4:\n            if n >= 4:\n                return \"88\" + \"9\" * (n-4) + \"88\"\n            else:\n                return \"8\" * n\n        if k == 5:\n            if n >= 2:\n                return \"5\" + \"9\" * (n-2) + \"5\"\n            else:\n                return \"5\"\n        if k == 6:\n            if n%2 == 1:\n                if n >= 3:\n                    return \"8\" + \"9\"*(n//2-1) + \"8\" + \"9\"*(n//2-1) + \"8\"\n                else:\n                    return \"6\"\n            if n%2 == 0:\n                if n >= 4:\n                    return \"8\" + \"9\"*(n//2-2) + \"77\" + \"9\"*(n//2-2) + \"8\"\n                else:\n                    return \"66\"\n        if k == 8:\n            if n >= 6:\n                return \"888\" + \"9\" * (n-6) + \"888\"\n            else:\n                return \"8\" * n\n        if k == 7:\n            if n <= 2:\n                return \"7\" * n\n            \n            isodd = n%2\n            m = n//2\n            rawbase = [1 for i in range(n)]\n            for i in range(1,n):\n                rawbase[i] = (rawbase[i-1]*10)%7\n            base = [(a+b)%7 for a,b in zip(rawbase, reversed(rawbase))][:m]\n            if isodd:\n                base += rawbase[m:m+1]\n            pos = next(pos for pos,res in reversed(list(enumerate(base))) if res!=0)\n            p_sum = 9 * sum(res for i,res in enumerate(base) if i!=pos)\n            dig = next(x for x in range(9,-1,-1) if (p_sum + x*base[pos])%7 == 0)\n            ans = [9 for i in range(n)]\n            ans[pos] = dig\n            ans[n-1-pos] = dig\n            return \"\".join([str(num) for num in ans]) \n",
    "submit_ts": "1723952690",
    "subm_id": "1359802267"
}