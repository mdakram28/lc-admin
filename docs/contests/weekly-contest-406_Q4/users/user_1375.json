{
    "username": "mangesh13",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long, long>> cuts;\n        for (int i = 0; i < horizontalCut.size(); i++) {\n            cuts.push_back({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.size(); i++) {\n            cuts.push_back({verticalCut[i], 1});\n        }\n\n        sort(cuts.rbegin(), cuts.rend());\n\n        int horizontalPieces = 1, verticalPieces = 1;\n        long long totalCost = 0;\n\n        for (auto& cut : cuts) {\n            long long cost = cut.first;\n            long long type = cut.second;\n            if (type == 0) {\n                totalCost += cost * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cost * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925618",
    "subm_id": "1320260698"
}