{
    "username": "omnitricks",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(const vector<int>& nums, const vector<int>& target) {\n        int size = nums.size();\n        vector<long long> d(size);\n\n        for (int i = 0; i < size; ++i) {\n            d[i] = static_cast<long long>(target[i]) - nums[i];\n        }\n\n        long long ops = 0;\n        long long currDiff = 0;\n\n        for (int i = 0; i < size; ++i) {\n            if (i == 0 || (d[i - 1] > 0 && d[i] > 0) || (d[i - 1] < 0 && d[i] < 0)) {\n                long long addOps = abs(d[i]) - abs(currDiff);\n                if (addOps > 0) {\n                    ops += addOps;\n                }\n                currDiff = d[i];\n            } else {\n                ops += abs(d[i]);\n                currDiff = d[i];\n            }\n        }\n\n        return ops;\n    }\n};\n",
    "submit_ts": "1721532980",
    "subm_id": "1327998529"
}