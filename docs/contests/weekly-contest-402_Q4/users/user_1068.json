{
    "username": "misterpk18",
    "submission": "class seg {\npublic:\n    vector<int> a;\n    vector<int> tree;\n    int st, end;\n    void f(vector<int> &v) {\n        int n=v.size();\n        a=vector<int>(n);\n        tree=vector<int>(4*n);\n        for(int i=0;i<v.size();i++)\n        a[i]=v[i];\n        st=0;\n        end=v.size()-1;\n        build(1,0,end);\n    }\n    void build(int node,int l,int r) {\n        if(l==r){\n        tree[node]=a[l];\n        return;\n        }\n        int mid=(l+r)/2;\n        build(2*node,l,mid);\n        build(2*node+1,mid+1,r);\n        tree[node]=tree[2*node]+tree[2*node+1];\n    }\n    void update(int idx,int val) {\n        f2(1,st,end,idx,val);\n    }\n    void f2(int node,int l,int r,int idx,int val) {\n        if(l==r) {\n            a[l]=val;\n            tree[node]=val;\n            return;\n        }\n        int mid=(l+r)/2;\n        if(idx<=mid)\n        f2(2*node,l,mid,idx,val);\n        else\n        f2(2*node+1,mid+1,r,idx,val);\n        tree[node]=tree[2*node]+tree[2*node+1];\n    }\n    int query(int l,int r) {\n        return f3(1,st,end,l,r);\n    }\n    int f3(int node,int l,int r,int left,int right) {\n        if(l>right||r<left)\n            return 0; \n        if(left<=l&&r<=right)\n            return tree[node];\n        int mid=(l+r)/2;\n        int q1=f3(2*node,l,mid,left,right);\n        int q2=f3(2*node+1,mid+1,r,left,right);\n        return q1+q2;\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> peak(nums.size(),0);\n        for(int i=1;i<nums.size()-1;i++)\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1])\n                peak[i]=1;\n        seg st;\n        int n=nums.size();\n        st.f(peak);\n        vector<int> ans; \n        for(int i=0;i<queries.size();i++){\n            if(queries[i][0]==1){\n                ans.push_back(st.query(queries[i][1]+1,queries[i][2]-1));\n            }\n            else{\n                nums[queries[i][1]]=queries[i][2];\n                int j=queries[i][1];\n                if(j>0&&j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1])\n                    st.update(j,1);\n                else st.update(j,0);\n                j--;\n                 if(j>0&&j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1])\n                    st.update(j,1);\n                else st.update(j,0);\n                j+=2;\n                 if(j>0&&j<n-1 && nums[j]>nums[j-1] && nums[j]>nums[j+1])\n                    st.update(j,1);\n                else st.update(j,0);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508238.0
}