{
    "username": "mjmanas54",
    "submission": "class Solution {\npublic:\n    int func(int i,int j,int f,int k,map<vector<int>,int>& dp){\n        if(dp.count({i,j,f}))return dp[{i,j,f}];\n        if(i > k){\n            if(i == k+1 && f == 0)return dp[{i,j,f}] = func(i-1,j,1,k,dp);\n            else return 0;\n        }\n        if(i == k){\n            if(f == 0 && i!=0){\n                return dp[{i,j,f}] = 1+func(i-1,j,1,k,dp)+func(i+(1<<j),j+1,0,k,dp);\n            }else{\n                return dp[{i,j,f}] = 1+func(i+(1<<j),j+1,0,k,dp);\n            }\n        }\n        if(f == 0 && i!=0){\n            return dp[{i,j,f}] = func(i-1,j,1,k,dp)+func(i+(1<<j),j+1,0,k,dp);\n        }else{\n            return dp[{i,j,f}] = func(i+(1<<j),j+1,0,k,dp);\n        }\n    }\n    int waysToReachStair(int k) {\n        map<vector<int>,int> dp;\n        return func(1,0,0,k,dp);\n    }\n};",
    "submit_ts": "1716088970",
    "subm_id": "1261829277"
}