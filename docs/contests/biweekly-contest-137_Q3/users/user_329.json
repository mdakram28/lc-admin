{
    "username": "icecat2012",
    "submission": "class Solution {\npublic:\n    long long sol(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        long long maxSum = LLONG_MIN;\n\n        // Try all combinations of 3 rows\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    // Try all combinations of 3 columns\n                    for (int c1 = 0; c1 < n; ++c1) {\n                        for (int c2 = c1 + 1; c2 < n; ++c2) {\n                            for (int c3 = c2 + 1; c3 < n; ++c3) {\n                                long long t1 = (long long)board[r1][c1]+board[r2][c2]+board[r3][c3];\n                                long long t2 = (long long)board[r1][c1]+board[r2][c3]+board[r3][c2];\n                                long long t3 = (long long)board[r1][c2]+board[r2][c1]+board[r3][c3];\n                                long long t4 = (long long)board[r1][c2]+board[r2][c3]+board[r3][c1];\n                                long long t5 = (long long)board[r1][c3]+board[r2][c1]+board[r3][c2];\n                                long long t6 = (long long)board[r1][c3]+board[r2][c2]+board[r3][c1];\n                                maxSum = max({maxSum, t1, t2, t3, t4, t5, t6});\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m=board.size(), n=board[0].size();\n        if(m<10 || n<10) return sol(board);\n        vector<vector<int>> newBoard(9, vector<int>(9, 0));\n        vector<pair<int, int>> r, c;\n        for(int i=0;i<m;++i) {\n            int tmp = INT_MIN;\n            for(int j=0;j<n;++j) {\n                tmp = max(tmp, board[i][j]);\n            }\n            r.push_back({tmp, i});\n        }\n        for(int i=0;i<n;++i) {\n            int tmp = INT_MIN;\n            for(int j=0;j<m;++j) {\n                tmp = max(tmp, board[j][i]);\n            }\n            c.push_back({tmp, i});\n        }\n        sort(r.rbegin(), r.rend());\n        sort(c.rbegin(), c.rend());\n        for(int i=0;i<9;++i) {\n            for(int j=0;j<9;++j) {\n                newBoard[i][j] = board[r[i].second][c[j].second];\n            }\n        }\n        return sol(newBoard);\n    }\n};",
    "submit_ts": "1723909655",
    "subm_id": "1359200747"
}