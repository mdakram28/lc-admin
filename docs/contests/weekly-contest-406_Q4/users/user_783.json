{
    "username": "faizanhussain2310",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        ll h_index = 0, v_index = 0;\n        ll h_pieces = 1, v_pieces = 1;\n        ll total = 0;\n\n        while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n            if (horizontalCut[h_index] >= verticalCut[v_index]) {\n                total += horizontalCut[h_index] * v_pieces;\n                h_pieces++;\n                h_index++;\n            } else {\n                total += verticalCut[v_index] * h_pieces;\n                v_pieces++;\n                v_index++;\n            }\n        }\n\n        while (h_index < horizontalCut.size()) {\n            total += horizontalCut[h_index] * v_pieces;\n            h_pieces++;\n            h_index++;\n        }\n\n        while (v_index < verticalCut.size()) {\n            total += verticalCut[v_index] * h_pieces;\n            v_pieces++;\n            v_index++;\n        }\n\n        return total;\n\n    }\n};",
    "submit_ts": "1720925834",
    "subm_id": "1320267678"
}