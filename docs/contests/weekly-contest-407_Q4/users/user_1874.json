{
    "username": "wilsonliang09",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int length = nums.length;\n        long ops = 0;\n        long carry = 0;\n\n        for(int i = 0; i < length; i++) {\n            long differ = target[i] - nums[i];\n            if(differ == 0 ) {\n                carry = 0;\n            }\n            else if(differ > 0) { //INCREASING\n                if(carry < 0) {\n                   ops += differ;\n                   carry = differ; \n                }\n                else if(carry >= differ) {\n                    carry = differ; //reduce the carry, not need operations\n                } else {\n                    ops += (differ - carry);\n                    carry = differ; //increase carry\n                }\n            } else { //DECREASING\n                if(carry > 0) {\n                   ops -= differ;\n                   carry = differ; \n                }\n                else if((-1*carry) >= (-1*differ)) {\n                    carry = differ; //reduce the carry, not need operations\n                } else {\n                    ops += ((-1*differ) - (-1*carry));\n                    carry = differ; //increase carry\n                }\n            }\n            \n        }\n\n        return ops;\n    }\n}",
    "submit_ts": "1721533113",
    "subm_id": "1328001600"
}