{
    "username": "vonrong",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        INF = 10000000000\n        a = (INF, INF)\n        b = (-INF, INF)\n        c = (INF, -INF)\n        d = (-INF, -INF)\n        i1, i2, i3, i4 = -1, -1, -1, -1\n        for i in range(len(points)):\n            x, y = points[i]\n            if -x-y > -a[0]-a[1]:\n                a = (x, y)\n                i1 = i\n            if x-y > b[0]-b[1]:\n                b = (x, y)\n                i2 = i\n            if -x+y > -c[0]+c[1]:\n                c = (x, y)\n                i3 = i\n            if x+y > d[0]+d[1]:\n                d = (x, y)\n                i4 = i\n        ans = INF\n        \n        #cand1\n        points1 = points[:i1]+points[i1+1:]\n        tans = 0\n        a = (INF, INF)\n        b = (-INF, INF)\n        c = (INF, -INF)\n        d = (-INF, -INF)\n        for i in range(len(points1)):\n            x, y = points1[i]\n            if -x-y > -a[0]-a[1]:\n                a = (x, y)\n            if x-y > b[0]-b[1]:\n                b = (x, y)\n            if -x+y > -c[0]+c[1]:\n                c = (x, y)\n            if x+y > d[0]+d[1]:\n                d = (x, y)\n        for x, y in points1:\n            tans = max(tans, abs(x-a[0])+abs(y-a[1]), abs(x-b[0])+abs(y-b[1]), abs(x-c[0])+abs(y-c[1]), abs(x-d[0])+abs(y-d[1]))\n        ans = min(ans, tans)\n        \n        #cand2\n        points2 = points[:i2]+points[i2+1:]\n        tans = 0\n        a = (INF, INF)\n        b = (-INF, INF)\n        c = (INF, -INF)\n        d = (-INF, -INF)\n        for i in range(len(points2)):\n            x, y = points2[i]\n            if -x-y > -a[0]-a[1]:\n                a = (x, y)\n            if x-y > b[0]-b[1]:\n                b = (x, y)\n            if -x+y > -c[0]+c[1]:\n                c = (x, y)\n            if x+y > d[0]+d[1]:\n                d = (x, y)\n        for x, y in points2:\n            tans = max(tans, abs(x-a[0])+abs(y-a[1]), abs(x-b[0])+abs(y-b[1]), abs(x-c[0])+abs(y-c[1]), abs(x-d[0])+abs(y-d[1]))\n        ans = min(ans, tans)\n        \n        #cand3\n        points3 = points[:i3]+points[i3+1:]\n        tans = 0\n        a = (INF, INF)\n        b = (-INF, INF)\n        c = (INF, -INF)\n        d = (-INF, -INF)\n        for i in range(len(points3)):\n            x, y = points3[i]\n            if -x-y > -a[0]-a[1]:\n                a = (x, y)\n            if x-y > b[0]-b[1]:\n                b = (x, y)\n            if -x+y > -c[0]+c[1]:\n                c = (x, y)\n            if x+y > d[0]+d[1]:\n                d = (x, y)\n        for x, y in points3:\n            tans = max(tans, abs(x-a[0])+abs(y-a[1]), abs(x-b[0])+abs(y-b[1]), abs(x-c[0])+abs(y-c[1]), abs(x-d[0])+abs(y-d[1]))\n            \n        ans = min(ans, tans)\n        \n        #cand4\n        points4 = points[:i4]+points[i4+1:]\n        tans = 0\n        a = (INF, INF)\n        b = (-INF, INF)\n        c = (INF, -INF)\n        d = (-INF, -INF)\n        for i in range(len(points4)):\n            x, y = points4[i]\n            if -x-y > -a[0]-a[1]:\n                a = (x, y)\n            if x-y > b[0]-b[1]:\n                b = (x, y)\n            if -x+y > -c[0]+c[1]:\n                c = (x, y)\n            if x+y > d[0]+d[1]:\n                d = (x, y)\n        for x, y in points4:\n            tans = max(tans, abs(x-a[0])+abs(y-a[1]), abs(x-b[0])+abs(y-b[1]), abs(x-c[0])+abs(y-c[1]), abs(x-d[0])+abs(y-d[1]))\n        ans = min(ans, tans)\n        \n        return ans\n        "
}