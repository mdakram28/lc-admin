{
    "username": "prajwal_733",
    "submission": "class Solution {\npublic:\n    int k;\n    map<pair<int,pair<int,int>>,int> dp;\n    \n    int fun(int x,int jump,int last)\n    {\n        if(jump>30)\n            return 0;\n        \n         if( x > (k+1) )\n             return 0;\n        \n        \n        if(dp.find({x,{jump,last}})!=dp.end())\n             return dp[{x,{jump,last}}];\n        //if(x==k)\n           // return 1;\n        \n         int r = x + (1<<jump);\n         \n        int ans = fun( r, jump + 1, 0 );\n        \n        if(last == 0 && (x))\n            ans += fun( x - 1, jump, 1 );\n        \n        if(x==k)\n             ans++;\n        \n        return dp[{x,{jump,last}}] = ans;\n    }\n    int waysToReachStair(int k1) {\n        k = k1;\n        \n        return fun(1, 0, 0);\n    }\n};",
    "submit_ts": "1716086962",
    "subm_id": "1261768622"
}