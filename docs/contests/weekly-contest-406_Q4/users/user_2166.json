{
    "username": "AdityaSL21",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hor, vector<int>& ver) {\n        sort(hor.begin(), hor.end(), greater<int>());\n        sort(ver.begin(), ver.end(), greater<int>());\n        long long mulm = 1, muln = 1;\n        int i = 0, j = 0;\n        long long ans = 0;\n        while (i < (m - 1) && j < (n - 1)) {\n            if (hor[i] > ver[j]) {\n                muln++;\n                ans += mulm * static_cast<long long>(hor[i]);\n                i++;\n            } else {\n                mulm++;\n                ans += muln * static_cast<long long>(ver[j]);\n                j++;\n            }\n        }\n        while (i < (m - 1)) {\n            ans += mulm * static_cast<long long>(hor[i]);\n            i++;\n        }\n        while (j < (n - 1)) {\n            ans += muln * static_cast<long long>(ver[j]); \n            j++;\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1720926072",
    "subm_id": "1320275113"
}