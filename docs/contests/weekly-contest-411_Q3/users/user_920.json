{
    "username": "Akram",
    "submission": "def dec(digits, starti):\n    i = max(0, starti)\n    \n    while i < len(digits):\n        if digits[i] > 0:\n            digits[i] -= 1\n            if i == len(digits)-1 and digits[i] == 0:\n                digits.pop()\n            return\n        else:\n            digits[i] = 9\n            i += 1\n\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if n <= 6:\n            N = n\n            n = (n + 1) // 2\n            for d in range(int('9' * n), 0, -1):\n                d = str(d)\n                if N % 2 == 0:\n                    num = d + d[::-1]\n                else:\n                    num = d + d[-2::-1]\n                if int(num) % k == 0:\n                    return num\n\n\n        N = n\n        n = (n + 1) // 2\n        ret = \"\"\n\n        \n        def isDiv(digits, k):\n            remainder = 0\n            for digit in digits[::-1]:\n                remainder = (remainder * 10 + digit) % k\n            \n            if N%2 == 0:\n                for digit in digits:\n                    remainder = (remainder * 10 + digit) % k\n            else:\n                for digit in digits[1:]:\n                    remainder = (remainder * 10 + digit) % k\n\n            return remainder == 0\n\n        \n        if k == 1:\n            ret = '9' * n\n        elif k == 2:\n            ret = '8' + '9'*(n-1)\n        elif k == 3:\n            ret = '9' * n\n        elif k == 6:\n            digs = [9] * (n-1) + [8]\n            # i = 0\n            while len(digs) > 0 and not isDiv(digs, k):\n                # print(digs)\n                dec(digs,0)\n                # i += 1\n            ret = ''.join(map(str, digs[::-1]))\n        elif k == 8 or k == 4 or k == 5:\n            digs = [9] * n\n            # i = 0\n            while len(digs) > 0 and not isDiv(digs, k):\n                # print(digs)\n                dec(digs, n-3)\n                # i += 1\n            ret = ''.join(map(str, digs[::-1]))\n        elif k == 9:\n            ret = '9' * n\n        else:\n            digs = [9] * n\n            # i = 0\n            while len(digs) > 0 and not isDiv(digs, k):\n                # print(digs)\n                dec(digs, 0)\n                # i += 1\n            ret = ''.join(map(str, digs[::-1]))\n\n        if N % 2 == 0:\n            return ret + ret[::-1]\n        else:\n            return ret + ret[-2::-1]",
    "submit_ts": "1723952831",
    "subm_id": "1359805709"
}