{
    "username": "Mayur_Shrivastava",
    "submission": "class Solution {\n\n     const int MOD = 1e9 + 7;\n    \n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n         const int maxiii = 500;\n        unordered_map<int, int> mppp;\n                vector<vector<long long>> arrr(n + 1, vector<long long>(maxiii + 1, 0));\n\n        for (auto& it : requirements) {\n            mppp[it[0] + 1] = it[1];\n        }\n\n        int cntttttt=0;\n        arrr[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= maxiii; j++) {\n                for (int newPos = 0; newPos < i; newPos++) {\n                    int prevInv = j - newPos;\n                    if (prevInv >= 0) {\n                        arrr[i][j] = (arrr[i][j] + arrr[i - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n            \n//              for (long long cnt : arrr[n]) {\n//             resss = (resss + cnt) % MOD;\n//         }\n        \n\n            if (mppp.count(i)) {\n                int ansss = mppp[i];\n                for (int j = 0; j <= maxiii; j++) {\n                    if (j != ansss) {\n                        arrr[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        long long resss = 0;\n        for (long long cnt : arrr[n]) {\n            resss = (resss + cnt) % MOD;\n        }\n        \n        int ans=resss;\n\n        return (int) ans;\n    }\n};",
    "submit_ts": 1719071534.0
}