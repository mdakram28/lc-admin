{
    "username": "\u7b3c\u4e2d\u96c0",
    "submission": "class Solution:\n    def check(self, n, length, k):\n        w = [0] * n\n        w[0] = 1 % k\n        for i in range(1, n):\n            w[i] = (w[i - 1] * 10) % k\n        \n        s = ['9'] * n\n        for i in range(length):\n            s[i] = s[n - i - 1] = '8'\n\n        midIndex = n // 2\n        currentSum = 0\n        for i in range(n):\n            if n % 2 == 0 and (i == midIndex - 1 or i == midIndex):\n                continue\n            if n % 2 != 0 and i == midIndex:\n                continue\n            currentSum = (currentSum + w[i] * (ord(s[i]) - ord('0'))) % k\n\n        if n % 2 == 0:\n            return self.findone(s, w, midIndex, currentSum, k)\n        else:\n            return self.findTwo(s, w, midIndex, currentSum, k)\n\n    def findone(self, s, w, midIndex, currentSum, k):\n        x1 = midIndex - 1\n        for mid in range(9, -1, -1):\n            val = (currentSum + mid * w[x1] + mid * w[midIndex]) % k\n            if val == 0:\n                s[x1] = s[midIndex] = chr(mid + ord('0'))\n                return ''.join(s)\n        return \"\"\n\n    def findTwo(self, s, w, midIndex, currentSum, k):\n        for mid in range(9, -1, -1):\n            val = (currentSum + mid * w[midIndex]) % k\n            if val == 0:\n                s[midIndex] = chr(mid + ord('0'))\n                return ''.join(s)\n        return \"\"\n\n    def largestPalindrome(self, n, k):\n        if k == 5:\n            s = ['9'] * n\n            s[0] = s[-1] = '5'\n            return ''.join(s)\n\n        length = 0\n        while True:\n            palindrome = self.check(n, length, k)\n            if palindrome:\n                return palindrome\n            length += 1\n\n",
    "submit_ts": "1723951789",
    "subm_id": "556407660"
}