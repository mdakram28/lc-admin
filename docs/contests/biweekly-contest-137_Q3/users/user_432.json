{
    "username": "Manan Chhajed",
    "submission": "class Solution {\n    using ll = long long;    \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) \n    {\n        int n = board.size();\n        int m = board[0].size();\n        \n        vector<vector<pair<int, int>>> v(n);\n        for(int i = 0; i < n; i++)\n        {\n            set<pair<int, int>> st;\n            for(int j = 0; j < m; j++)\n            {\n                st.insert({board[i][j], j});\n                if(st.size() == 4) st.erase(st.begin());\n            }\n            for(int j = 0; j < 3; j++)\n            {\n                v[i].push_back(*st.rbegin());\n                st.erase(--st.end());\n            }\n        }\n        \n        ll ans = -1e18;\n        for(int i = 0; i < n; i++)\n        {\n            for(int j = i + 1; j < n; j++)\n            {\n                for(int k = j + 1; k < n; k++)\n                {\n                    for(int x = 0; x < 3; x++)\n                    {\n                        for(int y = 0; y < 3; y++)\n                        {\n                            for(int z = 0; z < 3; z++)\n                            {\n                                auto pos1 = v[i][x];\n                                auto pos2 = v[j][y];\n                                auto pos3 = v[k][z];\n                            \n                                if(pos1.second != pos2.second && pos1.second != pos3.second && pos2.second != pos3.second)\n                                {\n                                    ans = max(ans, 1ll * pos1.first + pos2.first + pos3.first);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723907081",
    "subm_id": "1359088936"
}