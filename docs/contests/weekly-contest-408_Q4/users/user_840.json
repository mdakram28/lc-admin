{
    "username": "m_amanullah7",
    "submission": "from collections import deque\nfrom math import sqrt\nfrom typing import List\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        num_circles = len(circles)\n        adj_list = [[] for _ in range(num_circles + 4)]\n        \n        for idx, (cx, cy, radius) in enumerate(circles):\n            if cx <= radius:\n                adj_list[num_circles].append(idx)\n                adj_list[idx].append(num_circles)\n            if X - cx <= radius:\n                adj_list[num_circles + 2].append(idx)\n                adj_list[idx].append(num_circles + 2)\n            if cy <= radius:\n                adj_list[num_circles + 1].append(idx)\n                adj_list[idx].append(num_circles + 1)\n            if Y - cy <= radius:\n                adj_list[num_circles + 3].append(idx)\n                adj_list[idx].append(num_circles + 3)\n            for j in range(idx + 1, num_circles):\n                nx, ny, nradius = circles[j]\n                distance = sqrt((cx - nx) ** 2 + (cy - ny) ** 2)\n                if distance <= radius + nradius:\n                    adj_list[idx].append(j)\n                    adj_list[j].append(idx)\n        \n        def is_connected(start: int, end1: int, end2: int) -> bool:\n            queue = deque([start])\n            visited = [False] * (num_circles + 4)\n            visited[start] = True\n            \n            while queue:\n                current = queue.popleft()\n                for neighbor in adj_list[current]:\n                    if not visited[neighbor]:\n                        queue.append(neighbor)\n                        visited[neighbor] = True\n            \n            return visited[end1] or visited[end2]\n            \n        if is_connected(num_circles, num_circles + 1, num_circles + 2) or \\\n           is_connected(num_circles + 3, num_circles + 2, num_circles + 1):\n            return False\n        return True\n\n",
    "submit_ts": "1722138771",
    "subm_id": "1335799216"
}