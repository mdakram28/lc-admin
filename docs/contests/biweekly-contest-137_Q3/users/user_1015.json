{
    "username": "Aksh Walia",
    "submission": "class Solution {\n    class Pair {\n        int val;\n        int idx;\n\n        Pair(int a, int b) {\n            val =a;\n            idx =b;\n        }\n    }\n\n    long ans = (long) -1e15;\n    public long maximumValueSum(int[][] board) {\n        List<List<Pair>> list = getArray(board);\n\n        for(List<Pair> it: list) {\n            for(Pair p: it) {\n                System.out.print(\"[\"+p.val+\",\"+p.idx+\"]\");\n            }\n            System.out.println();\n        }\n\n        solve(list,0,new HashSet<>(),3,0);\n\n        return ans;\n    }\n\n    public void solve(List<List<Pair>> board, int row, Set<Integer> cols, int rooks, long sum) {\n        if(rooks==0) {\n            ans = Math.max(ans,sum);\n            return;\n        }\n\n        if(row==board.size())\n            return;\n        \n        solve(board,row+1,cols,rooks,sum);\n\n        for(int i=0; i<3; i++) {\n            int val = board.get(row).get(i).val;\n            int col = board.get(row).get(i).idx;\n\n            if(!cols.contains(col)) {\n                cols.add(col);\n                solve(board,row+1,cols,rooks-1,sum+val);\n                cols.remove(col);\n            }\n        }\n    }\n\n    public List<List<Pair>> getArray(int[][] board) {\n        List<List<Pair>> ans = new ArrayList<>();\n\n        for(int i=0; i<board.length; i++) {\n            PriorityQueue<Pair> pq = new PriorityQueue<>((a,b) -> Integer.compare(b.val,a.val));\n\n            for(int j=0; j<board[0].length; j++) {\n                pq.add(new Pair(board[i][j],j));\n            }\n\n            ans.add(new ArrayList<>());\n\n            for(int j=0; j<3; j++) {\n                ans.get(i).add(pq.poll());\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1723909330",
    "subm_id": "1359188466"
}