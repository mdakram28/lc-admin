{
    "username": "windi",
    "submission": "class SegmentTree:\n    def __init__(self, data):\n        self.n = len(data)\n        self.tree = [0] * (2 * self.n)\n        # Build the tree\n        for i in range(self.n):\n            self.tree[self.n + i] = data[i]\n        for i in range(self.n - 1, 0, -1):\n            self.tree[i] = self.tree[i * 2] + self.tree[i * 2 + 1]\n    \n    def update(self, pos, value):\n        pos += self.n\n        self.tree[pos] = value\n        while pos > 1:\n            pos //= 2\n            self.tree[pos] = self.tree[2 * pos] + self.tree[2 * pos + 1]\n    \n    def sum_range(self, l, r):\n        l += self.n\n        r += self.n\n        result = 0\n        while l < r:\n            if l & 1:\n                result += self.tree[l]\n                l += 1\n            if r & 1:\n                r -= 1\n                result += self.tree[r]\n            l //= 2\n            r //= 2\n        return result\n\nclass Solution:\n    def countOfPeaks(self, nums, queries):\n        n = len(nums)\n        is_peak = [0] * n\n        \n        def update_peak_status(i):\n            if 0 < i < n - 1:\n                is_peak[i] = 1 if nums[i] > nums[i - 1] and nums[i] > nums[i + 1] else 0\n        \n        for i in range(1, n - 1):\n            update_peak_status(i)\n        \n        seg_tree = SegmentTree(is_peak)\n        \n        results = []\n        \n        for query in queries:\n            if query[0] == 2:\n                index, value = query[1], query[2]\n                nums[index] = value\n                update_peak_status(index)\n                seg_tree.update(index, is_peak[index])\n                if index > 0:\n                    update_peak_status(index - 1)\n                    seg_tree.update(index - 1, is_peak[index - 1])\n                if index < n - 1:\n                    update_peak_status(index + 1)\n                    seg_tree.update(index + 1, is_peak[index + 1])\n            elif query[0] == 1:\n                l, r = query[1], query[2]\n                peak_count = seg_tree.sum_range(l + 1, r)\n                results.append(peak_count)\n        \n        return results",
    "submit_ts": 1718508099.0
}