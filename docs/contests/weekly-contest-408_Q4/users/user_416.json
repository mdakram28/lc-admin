{
    "username": "_333_",
    "submission": "class Solution {\npublic:\n    bool intersect(vector<int>&a, vector<int>&b){\n        long long x1=a[0],x2=b[0];\n        long long y1=a[1],y2=b[1];\n        long long r1=a[2],r2=b[2];\n\n        double d = sqrt((x1 - x2) * (x1 - x2)+ (y1 - y2) * (y1 - y2));\n\n        if(d<=r1+r2)return true;\n        else return false;\n    }\n\n    void helper(vector<vector<int>>& c, int start, set<int>&s, vector<vector<int>> &r, vector<bool>&vis){\n        if(vis[start])return;\n\n        for(auto j:r[start])s.insert(j);\n        vis[start]=true;\n\n        for(int i=0;i<c.size();i++){\n            if(vis[i] || !intersect(c[i],c[start]))continue;\n            helper(c,i,s,r,vis);\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        int n=c.size();\n        vector<vector<int>> reach(n);\n\n        for(int i=0;i<n;i++){\n            int x=c[i][0],y=c[i][1],r=c[i][2];\n            if(y<=r)reach[i].push_back(1);\n            if(X-x<=r)reach[i].push_back(2);\n            if(Y-y<=r)reach[i].push_back(3);\n            if(x<=r)reach[i].push_back(4);\n        }\n\n        vector<bool> vis(n,false);\n        for(int i=0;i<n;i++){\n            if(vis[i])continue;\n            set<int> s;\n            helper(c,i,s,reach,vis);\n\n            if(s.size()>=3)return false;\n            if(s.size()<=1)continue;\n\n            vector<int> v;\n            for(auto j:s){v.push_back(j);}\n\n            if(v[1]-v[0]==1 && (v[0]==3 || v[0]==1))continue;\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722137365",
    "subm_id": "1335761700"
}