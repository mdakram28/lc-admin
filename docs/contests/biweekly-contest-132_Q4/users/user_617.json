{
    "username": "minamotoorin",
    "submission": "\nint dp[5002][5001] = {0};\nint ans[5002][5001] = {0};\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int K) {\n        \n        int n = nums.size();\n        \n        for(int k = 0; k <= K; k++)\n            dp[k][0] = 1;\n        \n        map<int, int> loc;\n        int prev[5001];\n        for(int i =0; i < n; i++)\n        {\n            if(loc.count(nums[i])) prev[i] = loc[nums[i]];\n            else prev[i] = -1;\n            loc[nums[i]] = i;\n        }\n        \n        for(int k = 0; k <= K; k++)\n        {\n            ans[k][0] = 1;\n            dp[k][0] = 1;\n            for(int i = 1; i < n; i++)\n            {\n                if(k==0) ans[k][i] = ans[k][i - 1];\n                else ans[k][i] = max(ans[k-1][i-1] + 1, ans[k][i - 1]);\n                \n                if(k==0) dp[k][i] = 1;\n                else dp[k][i] = ans[k-1][i-1] + 1;\n                \n                int j = prev[i];\n                if(j != -1)\n                {\n                    if(dp[k][j] + 1 > dp[k][i])\n                    {\n                        dp[k][i] = dp[k][j] + 1;\n                    }\n                }\n                \n                ans[k][i] = max(ans[k][i], dp[k][i]);\n            }\n            \n        }\n        return ans[K][n-1];\n    }\n};",
    "submit_ts": 1717862079.0
}