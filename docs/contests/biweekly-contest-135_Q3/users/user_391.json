{
    "username": "Supress257",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> maxValues;\n        \n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int a = nums[i];\n            int b = nums[nums.size() - i - 1];\n            int diff = abs(a - b);\n            int maxValue = max({a, b, k - a, k - b});\n            diffMap[diff].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n        \n        int ans = nums.size();\n        sort(maxValues.begin(), maxValues.end());\n        \n        for (const auto& [diff, values] : diffMap) {\n            int ct = lower_bound(maxValues.begin(), maxValues.end(), diff) - maxValues.begin();\n            ct = ct * 2 + (nums.size() / 2 - ct);\n            \n            for (int maxValue : values) {\n                ct -= (maxValue < diff) ? 2 : 1;\n            }\n            \n            ans = min(ans, ct);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721488292",
    "subm_id": "1327417666"
}