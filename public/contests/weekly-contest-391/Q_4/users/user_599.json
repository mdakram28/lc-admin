{
    "username": "peaceful-villanivtd",
    "submission": "def MaxDist2(A, N):\n    V = [0 for i in range(N)]\n    V1 = [0 for i in range(N)]\n\n    for i in range(N):\n        V[i] = A[i][0] + A[i][1]\n        V1[i] = A[i][0] - A[i][1]\n\n    V.sort()\n    V1.sort()\n\n    maximum = max(V[-1] - V[0],\n                  V1[-1] - V1[0])\n\n    return maximum\n\n\ndef MaxDist(A, N):\n    V = [[0, 0] for i in range(N)]\n    V1 = [[0, 0] for i in range(N)]\n\n    for i in range(N):\n        V[i] = [A[i][0] + A[i][1], i]\n        V1[i] = [A[i][0] - A[i][1], i]\n\n    V.sort()\n    V1.sort()\n\n    \n    i, j = V[-1][1], V[0][1]\n    X1 = A[:i] + A[(i + 1):]\n    X2 = A[:j] + A[(j + 1):]\n    c1 = min(MaxDist2(X1, N - 1), MaxDist2(X2, N - 1))\n    \n    i, j = V1[-1][1], V1[0][1]\n    X1 = A[:i] + A[(i + 1):]\n    X2 = A[:j] + A[(j + 1):]\n    c2 =  min(MaxDist2(X1, N - 1), MaxDist2(X2, N - 1))\n    return min(c1,c2)\n\n\nclass Solution:\n\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        return MaxDist(points, len(points))"
}