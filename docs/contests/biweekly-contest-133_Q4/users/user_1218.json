{
    "username": "sanyaa23_",
    "submission": "\n\nclass Solution {\npublic:\n    \nlong long  M = 1000000007;\nlong long X = 400;\n    int fun(int n, vector<vector<int>>& r,unordered_map<int, int>&m)\n    {\n        vector<vector<long>> c(n + 1, vector<long>(X + 1, 0));\n        c[0][0] = 1;\n        for (int l = 1; l <= n; ++l) {\n            for (int v = 0; v <= X; ++v) {\n                for (int p = 0; p < l; ++p) {\n                    int w = v - p;\n                    if (w >= 0) {\n                        c[l][v] = (c[l][v] + c[l - 1][w]) % M;\n                    }\n                }\n            }\n\n            if (m.find(l) != m.end()) {\n                int t = m[l];\n                for (int v = 0; v <= X; ++v) {\n                    if (v != t) {\n                        c[l][v] = 0;\n                    }\n                }\n            }\n        }\n\n        long long res = 0;\n        for (const auto& cnt : c[n]) {\n            res = (res + cnt) % M;\n        }\n    return int(res);\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\nunordered_map<int, int>m;\n        for (auto q : r) {\n            m[q[0] + 1] = q[1];\n        }\n\n        \n        return fun(n,r,m);\n    }\n};\n\n",
    "submit_ts": 1719070901.0
}