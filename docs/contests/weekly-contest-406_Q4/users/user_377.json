{
    "username": "lydxlx",
    "submission": "import bisect\nfrom typing import *\nfrom collections import namedtuple\nfrom sortedcontainers import SortedList, SortedDict\nfrom collections import Counter\nfrom math import inf\nfrom math import gcd\nimport string\nimport random\nimport itertools\nfrom functools import cache\nfrom fractions import Fraction\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort()\n        verticalCut.sort()\n        i = 0\n        j = 0\n        ans = 0\n        while i < m - 1 and j < n - 1:\n            if horizontalCut[i] < verticalCut[j]:\n                ans += horizontalCut[i] * (n - j)\n                i += 1\n            else:\n                ans += verticalCut[j] * (m - i)\n                j += 1\n        while i < m - 1:\n            ans += horizontalCut[i]\n            i += 1\n        while j < n - 1:\n            ans += verticalCut[j]\n            j += 1\n        return ans",
    "submit_ts": "1720925462",
    "subm_id": "1320255511"
}