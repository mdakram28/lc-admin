{
    "username": "Tamroparni",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horiCuts, int[] vertiCuts) {\n        Integer[] hCuts = Arrays.stream(horiCuts).boxed().toArray(Integer[]::new);\n        Integer[] vCuts = Arrays.stream(vertiCuts).boxed().toArray(Integer[]::new);\n        Arrays.sort(hCuts, Collections.reverseOrder());\n        Arrays.sort(vCuts, Collections.reverseOrder());\n\n        int hi = 0, vi = 0, hp = 1, vp = 1;\n        long ans = 0;\n        while (hi < hCuts.length && vi < vCuts.length) {\n            if (hCuts[hi] >= vCuts[vi]) {\n                ans += (long) hCuts[hi] * vp;\n                hp++;\n                hi++;\n            } else {\n                ans += (long) vCuts[vi] * hp;\n                vp++;\n                vi++;\n            }\n        }\n        while (hi < hCuts.length) {\n            ans += (long) hCuts[hi] * vp;\n            hp++;\n            hi++;\n        }\n        while (vi < vCuts.length) {\n            ans += (long) vCuts[vi] * hp;\n            vp++;\n            vi++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925466",
    "subm_id": "1320255656"
}