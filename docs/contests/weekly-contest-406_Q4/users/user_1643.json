{
    "username": "milesian-c",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h1 = 0;\n        int h2 = 0;\n        long long sum1 = 0;\n        long long sum2 = 0;\n        long long ans = 0;\n        for(int i=0;i<m-1;++i) sum1 += horizontalCut[i];\n        for(int i=0;i<n-1;++i) sum2 += verticalCut[i];\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        while(h1 < m-1 || h2 < n-1){\n            if(h1 == m-1){\n                long long aug = verticalCut[n-1-h2-1];\n                aug *= m;\n                ++ h2;\n                ans += aug;\n            }else if(h2 == n-1){\n                long long aug = horizontalCut[m-1-h1-1];\n                aug *= n;\n                ++ h1;    \n                ans += aug;\n            }else{\n                long long aug1 = verticalCut[n-1-h2-1];\n                long long aug2 = horizontalCut[m-1-h1-1];\n                if(aug1 > aug2){\n                    long long aug = aug1 * (h1+1);\n                    ++ h2;\n                    ans += aug;\n                }else{\n                    long long aug = aug2 * (h2+1);\n                    ++ h1;\n                    ans += aug;                    \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926074",
    "subm_id": "546443897"
}