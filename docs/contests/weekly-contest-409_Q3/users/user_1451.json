{
    "username": "ninja_master2002",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        \n        int temp=n-1;\n        int mini=queries[0][0];\n        int maxi=queries[0][1];\n        temp-=(maxi-mini-1);\n        vector<int>v(n,-1);\n        map<int,int>mp;\n        v[mini]=maxi;\n        for(int i=mini+1;i<maxi;i++)mp[i]=true;\n        int m=queries.size();\n        vector<int>ans(m);\n        ans[0]=temp;\n        for(int i=1;i<m;i++){\n            if(mp.find(queries[i][0])!=mp.end()){\n                ans[i]=(temp);\n            }\n            else{\n                int start=queries[i][0];\n                int end=queries[i][1];\n                // cout<<i<<endl;\n                int cnt=0;\n                int j=start;\n                // cout<<v[3]<<endl;\n                while(j<end){\n                    // cout<<j<<endl;\n                    if(v[j]!=-1){\n                        if(j!=start)\n                            mp[j]=true;\n                        j=v[j]-1;\n                        cnt++;\n                    }\n                    else{\n                        if(j!=start)\n                            mp[j]=true;\n                        cnt++;\n                    }\n                    j++;\n                }\n                temp-=(cnt-1);\n                v[start]=end;\n                \n                ans[i]=temp;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741519",
    "subm_id": "1343746989"
}