{
    "username": "runtime_tterror",
    "submission": "class Solution {\npublic:\n    struct TreeNodes{\n    TreeNodes *links[26];\n    int flag;\n    };\n    TreeNodes *newnode(){\n        TreeNodes *pnode=new TreeNodes;\n        for(int i=0;i<26;i++){\n            pnode->links[i]=NULL;\n        }\n        pnode->flag=-1;\n        return pnode;\n    }\n    void insert(string &word,int val, TreeNodes *root) {\n        TreeNodes *temp=root;\n        for(int i=0;i<word.length();i++){\n            if(!temp->links[word[i]-'a']){\n                temp->links[word[i]-'a']=newnode();\n            }\n            temp=temp->links[word[i]-'a'];\n        }\n        if(temp->flag==-1)temp->flag=val;\n        else temp->flag = min(temp->flag,val);\n    }\n    void search(vector<long long>&dp,TreeNodes *root,string &word,int j) {\n        TreeNodes *temp=root;\n        for(int i=j;i<word.length();i++){\n            if(!temp->links[word[i]-'a']){\n                return;\n            }\n            temp=temp->links[word[i]-'a'];\n            if(temp->flag != -1)dp[i] = min(dp[i],temp->flag +  dp[j-1]);\n        }\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TreeNodes *root=newnode();\n\n        int n = target.length();\n        vector<long long>dp(n+1,INT_MAX);\n        dp[0]=0;\n        for(int i=0;i<words.size();i++){\n            insert(words[i],costs[i],root);\n        }\n        target = ' '+target;\n        for(int i=1;i<=n;i++){\n            if(dp[i-1]!=INT_MAX){\n                search(dp,root,target,i);\n                // for(auto k : dp)cout<<k<<\" \";cout<<endl;\n            }\n        }\n        \n        if(dp[n]>=INT_MAX)return -1;\n        return dp[n];\n\n    }\n};",
    "submit_ts": "1720322061",
    "subm_id": "1312339625"
}