{
    "username": "astrocat879",
    "submission": "from collections import deque\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        graph = [[] for i in range(len(circles) + 2)]\n        # find which ones touch edges\n        for idx, (x, y, r) in enumerate(circles):\n            if x - r <= 0 or y + r >= Y: \n                graph[-2].append(idx)\n                graph[idx].append(-2)\n            if x + r >= X or y - r <= 0:\n                graph[-1].append(idx)\n                graph[idx].append(-1)\n        for idx, (x1, y1, r) in enumerate(circles):\n            for idx2 in range(idx+1, len(circles)):\n                x2, y2, r2 = circles[idx2]\n                if idx > idx2: continue\n                tmp = sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n                if abs(r - r2) <= tmp <= r + r2:\n                    graph[idx2].append(idx)\n                    graph[idx].append(idx2)\n        q = deque([-1])\n       \n        vis = [False for i in range(len(circles) + 2)]\n        while q:\n            node = q.popleft()\n            vis[node] = True\n            if node == -2:\n                return False\n            for i in graph[node]:\n                if not vis[i]:\n                    q.append(i)\n                    vis[i] = True\n        return True\n\n",
    "submit_ts": "1722136436",
    "subm_id": "1335734416"
}