{
    "username": "_saraswat",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define loop(i, a, n) for (lli i = (a); i < (n); ++i)\n#define loopD(i, a, n) for (lli i = (a); i >= (n); --i)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define sz(a) ((int)a.size())\n#define YES cout << \"YES\" << endl;\n#define NO cout << \"NO\" << endl;\n#define endl '\\n'\n#define fastio std::ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n#define pb push_back\n#define pp pop_back()\n#define fi first\n#define si second\n#define v(a) vector<int>(a)\n#define vv(a) vector<vector<int>>(a)\n#define present(c, x) ((c).find(x) != (c).end())\n#define set_bits __builtin_popcountll\n#define MOD 1000000007\n// #define int long long\n\ntypedef long long lli;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<lli, lli> pll;\ntypedef pair<int, int> pii;\ntypedef unordered_map<int, int> umpi;\ntypedef map<int, int> mpi;\ntypedef vector<pii> vp;\ntypedef vector<lli> vll;\ntypedef vector<vll> vvll;\n\nclass Solution\n{\npublic:\n    int ans = 0, p = 0, cntt = 0;\n    ;\n    int cnt(vi &e)\n    {\n        return count(all(e), 1);\n    }\n\n    void solve(vvi &grid, int n, int m)\n    {\n        }\n    void sol(vvi &grid, int n, int m)\n    {\n        loop(i, 0, n / 2)\n        {\n            loop(j, 0, m / 2)\n            {\n                vi e = {\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]};\n                int t = cnt(e);\n                ans += min(t, 4 - t);\n            }\n        }\n    }\n\n    int minFlips(vector<vector<int>> &grid)\n    {\n        int n = sz(grid), m = sz(grid[0]);\n        sol(grid, n, m);\n\n        if (n & 1)\n        {\n            loop(j, 0, m / 2)\n            {\n                if (grid[n / 2][j] == grid[n / 2][m - j - 1])\n                    cntt += (grid[n / 2][j] == 1);\n                else\n                    ans++, p++;\n            }\n        }\n\n        if (m & 1)\n        {\n            loop(i, 0, n / 2)\n            {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2])\n                {\n                    ans++;\n                    p++;\n                }\n                else\n                {\n                    if (grid[i][m / 2] == 1)\n                    {\n                        cntt += 1;\n                    }\n                }\n            }\n        }\n        upd(grid, n, m);\n        return ans;\n    }\n\n    void upd(vvi &grid, int n, int m)\n    {\n        ans += (p == 0 && cntt % 2 != 0);\n        ans += (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1);\n        ans += (p == 0 && cntt % 2 != 0);\n    }\n};",
    "submit_ts": "1722700381",
    "subm_id": "1343240179"
}