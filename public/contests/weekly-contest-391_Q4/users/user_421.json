{
    "username": "funny-chaplyginbiw",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        for(int i = 0; i < n; i++) {\n            int x = p[i][0], y = p[i][1];\n            p[i][0] = x + y;\n            p[i][1] = y - x;\n            //cout << p[i][0] << \", \" << p[i][1] << endl;\n        }\n        \n        auto p1 = p;\n        sort(p.begin(), p.end(),\n        [](const vector<int>& lhs, const vector<int>& rhs) \n           {\n               if(lhs[0] != rhs[0])\n                    return lhs[0] < rhs[0]; \n               else\n                   return lhs[1] < rhs[1];\n           } );\n        \n        sort(p1.begin(), p1.end(),\n        [](const vector<int>& lhs, const vector<int>& rhs) \n           {\n               if(lhs[1] != rhs[1])\n                    return lhs[1] < rhs[1];\n               else\n                   return lhs[0] < rhs[0]; \n           } );\n        \n        int can1 = min(helper(p, 0, n - 2), helper(p, 1, n - 1));\n        int can2 = min(helper(p1, 0, n - 2), helper(p1, 1, n - 1));\n        \n        return min(can1, can2);\n    }\n    \n    int helper(vector<vector<int>>& p, int lo, int hi) {\n        int mi0 = 1e9, mi1 = 1e9, mx0 = -1e9, mx1 = -1e9;\n        for(int i = lo; i <= hi; i++) {\n            mi0 = min(mi0, p[i][0]);\n            mx0 = max(mx0, p[i][0]);\n            mi1 = min(mi1, p[i][1]);\n            mx1 = max(mx1, p[i][1]);\n        }\n        \n        //cout << mi0 << \" \" << mx0 << \" \" << mi1 << \" \" << mx1 << endl;\n        \n        return max(mx0 - mi0, mx1 - mi1);\n    }\n};"
}