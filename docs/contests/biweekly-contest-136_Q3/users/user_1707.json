{
    "username": "kumarfeldspar",
    "submission": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n using namespace std;\nusing namespace __gnu_pbds;\n#define ll              long long\ntypedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;\ntypedef tree<pair<ll,ll>, null_type, less<pair<ll,ll> >, rb_tree_tag, tree_order_statistics_node_update> ordered_pair_set;\n/*==============================================MACROS=================================================*/\n#define forder(x) find_by_order(x)\n#define okey(x) order_of_key(x)\n#define sqrt sqrtl\n#define pok(ok) (ok) ? cout << \"YES\" << nl : cout << \"NO\" << nl;\n#define nl '\\n'\n#define F              first\n#define S              second\n#define __builtin_popcount   __builtin_popcountll\n#define vvi vector<vector<int>>\n#define ld              long double\n#define pb              push_back\n#define mp              make_pair\n#define precision(i) cout<<fixed<<setprecision(i)\n#define vpii vector<pair<int,int>> \n#define pii             pair<int,int>\n#define vi              vector<int>\n#define stoi            stoll\n#define all(x)     x.begin(), x.end()\n#define mii             map<int,int>\n#define pqb             priority_queue<int>\n#define sz(a)      (ll)a.size()\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#define pqs             priority_queue<int,vi,greater<int> >\n#define rsort(a) sort(a.rbegin(),a.rend())\n#define get_sum(a) accumulate(a.begin(),a.end(),0LL)\n#define get_max(a) *max_element(a.begin(),a.end())\n#define get_min(a) *min_element(a.begin(),a.end())\n#define uniq(s) s.resize(unique(s.begin(), s.end()) - s.begin())\n#define setbits(x) __builtin_popcountll(x)\nmt19937 RNG(chrono::steady_clock::now().time_since_epoch().count());\n#define SHUF(v) shuffle(all(v), RNG); \nlong long rnd(long long x, long long y)\n{\nreturn uniform_int_distribution<long long>(x, y)(RNG);\n}\n// Use mt19937_64 for 64 bit random numbers\n#define print(x) cout<<x<<nl\n#define inf             1e18\n#define ld              long double\n#define w(t)            int t; cin>>t; while(t--)\n#define in(k)           int k;cin>>k;\n#define f(i,x)          for(int i=0;i<x;i++)\n#define bfor(i, a, b) for (int i = a; i >= b; i--)\n#define rep(i,a,b)      for(int i=a;i<b;i++)\n#define trav(a, x) for (auto &a : x)\n/*===============================================DEBUG===================================================*/\n#define dbg1(x) cout << #x << \" \" << x<<endl \n#define dbg2(x,y) cout << #x << \" \" << x << \" \"  << #y << \" \" << y<<endl \n#define dbg3(x, y, z) cout << #x << \" \" << x << \" \"  << #y << \" \" << y << \" \"  << #z << \" \" << z<<endl \n#define dbg4(x, y, z,w) cout << #x << \" \" << x << \" \"  << #y << \" \" << y << \" \"  << #z << \" \" << z<< \" \" #w << \" \" << w<<endl \n#define dbg5(x, y, z,w,a) cout << #x << \" \" << x << \" \"  << #y << \" \" << y << \" \"  << #z << \" \" << z<< \" \" #w << \" \" << w<<\" \"  << #a << \" \" << a<<endl \n\n\n\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n        int r=grid.size(),c=grid[0].size();\n        if(r==1&&c==1){\n            if(grid[0][0]==1)return 1;\n            else return 0;\n        }\n        int n=r,m=c;\n        vvi vis(n+1,vi(m+1,0));\n        int ans=1e9;\n        int total=0;\n        vector<int>ones;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                if(vis[i][j])continue;\n                int x1=i,y1=j;\n                int x2=i,y2=m-1-j;\n                int x3=n-1-i,y3=j;\n                int x4=n-1-i,y4=m-1-j;\n                vis[x1][y1]=1;\n                vis[x2][y2]=1;\n                vis[x3][y3]=1;\n                vis[x4][y4]=1;\n                set<pair<int,int>>cnt;\n                cnt.insert({x1,y1});\n                cnt.insert({x2,y2});\n                cnt.insert({x3,y3});\n                cnt.insert({x4,y4});\n                set<int>st;\n                st.insert(grid[x1][y1]);\n                st.insert(grid[x2][y2]);\n                st.insert(grid[x3][y3]);\n                st.insert(grid[x4][y4]);\n                int cc=(grid[x1][y1]==1);\n                cc+=(grid[x2][y2]==1);\n                cc+=(grid[x3][y3]==1);\n                cc+=(grid[x4][y4]==1);\n                if(cnt.size()==1){\n                    if(grid[i][j]==1)total++;\n                }\n                else if(cnt.size()==2){\n                    if(st.size()==1){\n                        if(grid[x1][y1]==1){\n                            ones.pb(2);\n                        }\n                        else{\n                            ones.pb(0);\n                        }\n                    }\n                    else{\n                        ones.pb(1);\n                    }\n                }\n                else{\n                    // assert(cnt.size()==4);\n                    total+=min(cc,4-cc);\n                }\n            }\n        }\n        if(ones.size()==0){\n            return total;\n        }\n        sort(all(ones));\n        int tt=0;\n        for(auto i:ones){\n            tt+=i;\n        }\n        ans=min(ans,total+tt);\n        if(ones.front()==ones.back() && ones.front()==2){\n            int sum=0;\n            for(auto i:ones)sum+=i;\n            if(sum%4==0){\n                ans=min(ans,total);\n            }\n            else{\n                ans=min(ans,total+2);\n            }\n            return ans;\n        }\n        if(ones.front()==ones.back()&& ones.back()==0){\n            ans=min(ans,total);\n            return ans;\n        }\n        \n        //one ka count 0\n        int ss=0;\n        for(int i=ones.size()-1;i>=0;i--){\n            if(ones[i]==2){\n                ss+=2;\n            }\n            else{\n                if(ss%4==0){\n                    total+=ones[i];\n                }\n                else{\n                    ss+=2;\n                    total+=2-ones[i];\n                }\n            }\n            \n        }\n        ans=min(ans,total);\n        return ans;\n        \n    }\n};",
    "submit_ts": "1722699271",
    "subm_id": "1343206620"
}