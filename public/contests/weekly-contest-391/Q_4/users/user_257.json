{
    "username": "CompileErrorAutomaton",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        v0 = [(x+y, i) for i, [x, y] in enumerate(points)]\n        v1 = [(x-y, i) for i, [x, y] in enumerate(points)]\n        list.sort(v0)\n        list.sort(v1)\n        res = max(v0[-1][0]-v0[0][0], v1[-1][0]-v1[0][0])\n        cands = {v0[0][1], v0[-1][1], v1[0][1], v1[-1][1]}\n        for removed in cands:\n            v0 = [(x+y, i) for i, [x, y] in enumerate(points) if i!= removed]\n            v1 = [(x-y, i) for i, [x, y] in enumerate(points) if i!= removed]\n            list.sort(v0)\n            list.sort(v1)\n            d = max(v0[-1][0]-v0[0][0], v1[-1][0]-v1[0][0])\n            res = min(res, d)\n        return res"
}