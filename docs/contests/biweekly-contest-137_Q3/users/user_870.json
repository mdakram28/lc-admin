{
    "username": "Aditya Khevaria",
    "submission": "class Solution {\npublic:\n    long long func(vector<vector<int>> &board , int a , int b , int n , int m)\n    {\n        vector<vector<long long>> aux(n , vector<long long>(3));\n        for(int i = 0;i<n;i++)\n        {\n            int mxi1 = INT_MIN , mxi2 = INT_MIN , mxi3 = INT_MIN;\n            for(int j = 0;j<=a;j++) mxi1 = max(mxi1 , board[i][j]);\n            for(int j = a+1;j<=b;j++) mxi2 = max(mxi2 , board[i][j]);\n            for(int j = b+1;j<m;j++) mxi3 = max(mxi3 , board[i][j]);\n            \n            aux[i] = {mxi1 , mxi2 , mxi3};   \n        }\n        \n        vector<vector<int>> idx(3 , vector<int>(3 , -1));\n        vector<vector<long long>> maxi(3 , vector<long long>(3 , INT_MIN));\n        for(int i = 0;i<n;i++)\n        {\n            for(int j = 0;j<3;j++)\n            {\n                if(maxi[j][2] < aux[i][j])\n                {\n                    maxi[j][2] = aux[i][j];\n                    idx[j][2] = i;\n                }\n                if(maxi[j][1] < maxi[j][2])\n                {\n                    swap(maxi[j][1] , maxi[j][2]);\n                    swap(idx[j][1] , idx[j][2]);\n                }\n                if(maxi[j][0] < maxi[j][1])\n                {\n                    swap(maxi[j][1] , maxi[j][0]);\n                    swap(idx[j][1] , idx[j][0]);\n                }\n            }\n        }\n        \n        long long ans = -1e15;\n        for(int i = 0;i<3;i++)\n        {\n            for(int j = 0;j<3;j++)\n            {\n                for(int k = 0;k<3;k++)\n                {\n                    if(idx[0][i] != idx[1][j] && idx[0][i] != idx[2][k] && idx[1][j] != idx[2][k]) \n                    {\n                        ans = max(ans , maxi[0][i] + maxi[1][j] + maxi[2][k]);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) \n    {\n        long long ans = -1e15;\n        int n = board.size();\n        int m = board[0].size();\n        for(int i = 0;i<m-2;i++)\n        {\n            for(int j = i+1;j<m-1;j++)\n            {\n                ans = max(ans , func(board , i , j , n , m));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908452",
    "subm_id": "1359153268"
}