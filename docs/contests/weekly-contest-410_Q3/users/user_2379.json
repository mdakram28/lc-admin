{
    "username": "22r05a0518",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    private int[][][] memo;\n\n    public Solution() {\n        memo = new int[0][][];\n    }\n\n    private int countMonotonicPairs(int[] numbers, int currentIndex, int previousValue1, int previousValue2) {\n        if (currentIndex >= numbers.length) {\n            return 1;\n        }\n\n        if (memo[currentIndex][previousValue1][previousValue2] != -1) {\n            return memo[currentIndex][previousValue1][previousValue2];\n        }\n\n        int totalPairs = 0;\n        for (int i = 0; i <= numbers[currentIndex]; i++) {\n            int array1Value = i;\n            int array2Value = numbers[currentIndex] - i;\n            if (array1Value >= previousValue1 && array2Value <= previousValue2) {\n                totalPairs = (totalPairs + countMonotonicPairs(numbers, currentIndex + 1, array1Value, array2Value)) % MOD;\n            }\n        }\n\n        memo[currentIndex][previousValue1][previousValue2] = totalPairs;\n        return totalPairs;\n    }\n\n    public int countOfPairs(int[] numbers) {\n        int n = numbers.length;\n        memo = new int[n][51][51]; // numbers[i] <= 50\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= 50; j++) {\n                for (int k = 0; k <= 50; k++) {\n                    memo[i][j][k] = -1;\n                }\n            }\n        }\n        return countMonotonicPairs(numbers, 0, 0, 50);\n    }\n}",
    "submit_ts": "1723347236",
    "subm_id": "1351594765"
}