{
    "username": "YUVAN_SANKAR",
    "submission": "class Solution {\n    \n    class TrieNode {\n        TrieNode[] children = new TrieNode[26];\n        int minCost = Integer.MAX_VALUE; \n    }\n\n    private void insert(TrieNode root, String word, int cost) {\n        TrieNode node = root;\n        for (char c : word.toCharArray()) {\n            int i = c - 'a';\n            if (node.children[i] == null) {\n                node.children[i] = new TrieNode();\n            }\n            node = node.children[i];\n        }\n        node.minCost = Math.min(node.minCost, cost); \n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < words.length; i++) {\n            insert(root, words[i], costs[i]);\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue; \n            TrieNode node = root;\n            for (int j = i; j < n; j++) {\n                int c = target.charAt(j) - 'a';\n                if (node.children[c] == null) break;\n                node = node.children[c];\n                if (node.minCost != Integer.MAX_VALUE) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.minCost);\n                }\n            }\n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}",
    "submit_ts": "1720322498",
    "subm_id": "1312351499"
}