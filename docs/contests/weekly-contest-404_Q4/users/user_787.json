{
    "username": "anon_11",
    "submission": "class Solution {\n    vector<vector<int>> graph;\n    int dia(vector<vector<int>>& edges) {\n        int n = edges.size();\n        int mx = 0;\n        for(int i = 0; i < n; i++){ \n            graph[edges[i][0]].push_back(edges[i][1]);\n            graph[edges[i][1]].push_back(edges[i][0]);\n            mx = max({mx, edges[i][0], edges[i][1]});\n        }\n        int val = 0;\n        queue<int> q;\n        q.push(0);\n        vector<bool> vis(mx + 1, false);\n        int lst = 0;\n        vis[0] = true;\n        while(!q.empty()) {\n            int sz = q.size();\n            for(int i = 0; i < sz; i++) {\n                int v = q.front();\n                lst = v;\n                q.pop();\n                for(int child : graph[v]) {\n                    if(vis[child]) continue;\n                    vis[child] = true;\n                    q.push(child);\n                }\n            }\n        }\n        for(int i = 0; i <= mx; i++) {\n            vis[i] = false;\n        }\n        cout << lst << endl;\n        q.push(lst);\n        vis[lst] = true;\n        while(!q.empty()) {\n            int sz = q.size();\n            val++;\n            for(int i = 0; i < sz; i++) {\n                int v = q.front();\n                lst = v;\n                q.pop();\n                for(int child : graph[v]) {\n                    if(vis[child]) continue;\n                    vis[child] = true;\n                    q.push(child);\n                }\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            graph[edges[i][0]].clear();\n            graph[edges[i][1]].clear();\n        }\n        return val - 1;\n    }\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        graph.resize(1e5);\n        int d1 = dia(edges1), d2 = dia(edges2);\n        int ans = (d1 + 1) / 2 + (d2 + 1) / 2 + 1;\n        cout << d1 << \" \" << d2 <<\" \" << ans;\n        ans = max({ans, d1, d2});\n        return ans;\n    }\n};",
    "submit_ts": 1719719401.0
}