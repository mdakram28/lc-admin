{
    "username": "tzhuan",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        const int N = nums.size();\n        vector<vector<int>> index(32);\n        for (int i = 0; i < N; ++i) for (int b = 0; b < 31; ++b) if (((1 << b) & nums[i]) == 0) index[b].push_back(i);\n        // for (int b = 0; b < 31; ++b) { cout << (1 << b) << \": \"; for (auto i: index[b]) cout << i << \" \"; cout << endl; }\n        // for (int b = 0; b < 32; ++b) { for (auto i: index[b]) cout << i << \" \"; cout << endl; }\n        int ans = INT_MAX;\n        for (int i = 0; i < N; ++i) {\n            auto n = nums[i];\n            map<int, int> zeros;\n            for (int b = 0; b < 31; ++b) {\n                auto m = 1 << b;\n                if ((m & n) == 0) continue;\n                auto p = upper_bound(index[b].begin(), index[b].end(), i);\n                // cout << \"upper_bound \" << m << \" \" << i << \": \"; for (auto i: index[b]) cout << i << \" \"; cout << endl;\n                // cout << \"upper_bound: \" << i << \" \" << m << \": \" << p - index[b].begin() << endl;\n                if (p != index[b].end()) zeros[*p] |= m;\n            }\n            ans = min(ans, abs(k - n));\n            for (auto [j, m]: zeros) {\n                // cout << i << \" \" << n << \": \" << endl;\n                n &= ~m;\n                // cout << \" \" << j << \" \" << m << \" => \" << n << endl;\n                // cout << k << \" \" << n << \": \" << abs(k - n) << endl;\n                ans = min(ans, abs(k - n));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717299291",
    "subm_id": "1274807789"
}