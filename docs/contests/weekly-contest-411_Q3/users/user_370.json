{
    "username": "cros107",
    "submission": "import sys\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(10 ** 5) \n        res = 10**n - 1\n        #print('a', res)\n        if n % 2 == 0:\n            i, j = n // 2 - 1, n // 2\n        else:\n           i = j = n // 2\n\n        if k == 1:\n            return str(res)\n        if k == 2 or k == 4 or k == 8:\n            r = 1 if k == 2 else 2 if k == 4 else 3 if k == 8 else 0\n            if n < 2 * r:\n                for v in range(10 ** n - 1, -1, -1):\n                    m = str(v)\n                    if v % k == 0 and m == m[::-1]:\n                        return m\n            else:\n                if r == 1:\n                    return '8' + str(res)[1:-1] + '8'\n                elif r == 2:\n                    return '88' + str(res)[2:-2] + '88'\n                elif r == 3:\n                    return '888' + str(res)[3:-3] + '888'\n\n\n        if k == 6:\n            res -= 1\n            if n != 1:\n                res -= 10 ** (n - 1)\n            #print(res)\n            if res % k == 0:\n                return str(res)\n\n        if k == 3 or k == 9:\n            return str(res)\n        if k == 5:\n            res -= 4\n            if n != 1:\n                res -= 4 * 10 ** (n - 1)\n            return str(res)\n\n        def dfs(n, k, i, j):\n            #print(n, i, j)\n            if i > j:\n                return 0\n\n            for _ in range(10):\n                if n % k == 0:\n                    return n\n                res = dfs(n, k, i + 1, j - 1) \n                if res:\n                    return res\n\n                n -= 10 ** i\n                if i != j:\n                    n -= 10 ** j\n\n            return 0\n        return str(dfs(res, k, 0, n - 1))",
    "submit_ts": "1723951165",
    "subm_id": "1359764849"
}