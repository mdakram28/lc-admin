{
    "username": "utsavkanani",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        set<pair<int,int>>v;\n        set<pair<int,int>>v1;\n        vector<int>add(n,0);\n        vector<int>sub(n,0);\n        \n        for(int i = 0; i < n; i++){\n            add[i] = points[i][0]+points[i][1];\n            sub[i] = points[i][0]-points[i][1];\n            v.insert({add[i],i});\n            v1.insert({sub[i],i});\n        }\n        int ans = 1e9;\n        for(int i = 0; i < n; i++){\n            pair<int,int>l = {add[i],i};\n            pair<int,int>l2 = {sub[i],i};\n            \n            auto it = v.find(l);\n            v.erase(it);\n            auto it2 = v1.find(l2);\n            v1.erase(it2);\n            pair<int,int>n = *(v.begin());\n            pair<int,int>n2 = *(v.rbegin());\n            int temp = -1;\n            temp = max(temp,(int)(n2.first-n.first));\n            n = *(v1.begin());\n            n2 = *(v1.rbegin());\n            temp = max(temp,(int)(n2.first-n.first));\n            v.insert(l);\n            v1.insert(l2);\n            ans = min(ans,temp);\n        }\n        return ans;\n            \n    }\n};"
}