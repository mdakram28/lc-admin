{
    "username": "Heng_Xin",
    "submission": "class Solution {\npublic:\n    long long minimumCost(\n        int m, int n, \n        vector<int>& horizontalCut, \n        vector<int>& verticalCut) {\n        // \u8d2a\u5fc3\n        std::sort(horizontalCut.begin(), horizontalCut.end(), std::greater<int>());\n        std::sort(verticalCut.begin(), verticalCut.end(), std::greater<int>());\n\n        int hCount = 1, vCount = 1;\n        long long totalCost = 0;\n        int i = 0, j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                totalCost += static_cast<long long>(horizontalCut[i]) * vCount;\n                ++i;\n                ++hCount;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[j]) * hCount;\n                ++j;\n                ++vCount;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[i]) * vCount;\n            ++i;\n        }\n\n        while (j < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[j]) * hCount;\n            ++j;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925293",
    "subm_id": "546438327"
}