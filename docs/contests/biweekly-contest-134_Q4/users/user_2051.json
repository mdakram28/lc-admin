{
    "username": "user6675CH",
    "submission": "#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        long long result = 0;\n        std::unordered_map<int, int> count_map;\n\n        for (int num : nums) {\n            std::unordered_map<int, int> new_map;\n\n            // Start new subarrays with the current number\n            if (num == k) {\n                result++;\n            }\n\n            // Update the new_map with new subarrays ending at the current number\n            for (const auto& entry : count_map) {\n                int new_and = entry.first & num;\n                if (new_and == k) {\n                    result += entry.second;\n                }\n                new_map[new_and] += entry.second;\n            }\n\n            // Include the current number as a new subarray\n            new_map[num]++;\n\n            // Merge the new_map back into count_map\n            count_map = new_map;\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1720279777",
    "subm_id": "1311764659"
}