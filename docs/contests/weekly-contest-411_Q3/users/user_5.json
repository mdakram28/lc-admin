{
    "username": "Zachary Chao",
    "submission": "#define sz(x) int(x.size())\n#define all(x) x.begin(), x.end()\n#define db double\n#define ll long long\n#define ar array\ntemplate<typename T> bool ckmin(T& a, const T& b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> pw(n+1);\n        pw[0] = 1 % k;\n        for (int i = 1; i <= n; i++) pw[i] = pw[i-1] * 10 % k;\n        vector<vector<ar<int, 2>>> dp(n, vector<ar<int, 2>>(k, {-1, -1}));\n        for (int i = (n+1) / 2 - 1; i >= 0; i--) {\n            for (int j = 9; j >= 0 + (!i); j--) {\n                int v = (i == n-i-1 ? pw[i] : pw[i] + pw[n-i-1]) * j % k;\n                if (i==(n+1)/2-1) { \n                    if (!~dp[i][v][0]) dp[i][v] = {-2, j};\n                }\n                else {\n                    for (int l = 0; l < k; l++) {\n                        if (~dp[i+1][l][0]) {\n                            if (!~dp[i][(v+l)%k][0]) dp[i][(v+l)%k] = {l, j};\n                        }\n                    }\n                }\n            }\n        }\n        string ans2;\n        for (int i = 0; i < 1; i++) {\n            if (~dp[0][i][0]) {\n                string ans;\n                int val = i;\n                for (int j = 0; j < (n+1)/2; j++) {\n                    ans += char(dp[j][val][1]+'0');\n                    val = dp[j][val][0];\n                }\n                int N = sz(ans);\n                for (int i = N - (n & 1) - 1; i >= 0; i--) ans += ans[i];\n                if (ans2.empty()) ans2 = ans;\n                else ckmax(ans2, ans);\n            }\n        }\n        return ans2;\n    }\n};",
    "submit_ts": "1723949606",
    "subm_id": "1359724023"
}