{
    "username": "ilpyq_wasd003",
    "submission": "class Solution {\npublic:\n    constexpr static int INF = 0x3f3f3f3f;\n    int solve(int r1, int c1, int r2, int c2, int num, const vector<vector<int>>& grid) {\n        if (num == 1) {\n            int pos[4] = {INF, -INF, -INF, INF};\n            for (int i = r1; i <= r2; i ++ ) {\n                for (int j = c1; j <= c2; j ++ ) {\n                    if (!grid[i][j]) continue;\n                    pos[0] = min(pos[0], i);\n                    pos[1] = max(pos[1], j);\n                    pos[2] = max(pos[2], i);\n                    pos[3] = min(pos[3], j);\n                }\n            }\n            if (pos[0] == INF) return 0;\n            const int R = pos[2] - pos[0] + 1;\n            const int C = pos[1] - pos[3] + 1;\n            return R * C;\n        }\n        int ans = INF;\n        for (int i = r1; i < r2; i ++ ) {\n            if (num == 3) {\n                int t1 = solve(r1, c1, i, c2, 1, grid) + solve(i + 1, c1, r2, c2, 2, grid);\n                int t2 = solve(r1, c1, i, c2, 2, grid) + solve(i + 1, c1, r2, c2, 1, grid);\n                ans = min({ans, t1, t2});\n            } else {\n                int t1 = solve(r1, c1, i, c2, 1, grid) + solve(i + 1, c1, r2, c2, 1, grid);\n                ans = min(ans, t1);\n            }\n        }\n        for (int j = c1; j < c2; j ++ ) {\n            if (num == 3) {\n                int t1 = solve(r1, c1, r2, j, 1, grid) + solve(r1, j + 1, r2, c2, 2, grid);\n                int t2 = solve(r1, c1, r2, j, 2, grid) + solve(r1, j + 1, r2, c2, 1, grid);\n                ans = min({ans, t1, t2});\n            } else {\n                int t1 = solve(r1, c1, r2, j, 1, grid) + solve(r1, j + 1, r2, c2, 1, grid);\n                ans = min(ans, t1);\n            }\n        }\n        return ans;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        const int n = grid.size(), m = grid[0].size();\n        return solve(0, 0, n - 1, m - 1, 3, grid);\n    }\n};",
    "submit_ts": 1719111736.0
}