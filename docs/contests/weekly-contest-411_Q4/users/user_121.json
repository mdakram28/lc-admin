{
    "username": "svmh",
    "submission": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int, queries: List[List[int]]) -> List[int]:\n        len_arr = []\n        count_0 = 0\n        count_1 = 0\n        left = 0\n        n = len(s)\n        for i in range(n):\n            if s[i] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n            while count_0 > k and count_1 > k:\n                c = s[left]\n                if c == '0':\n                    count_0 -= 1\n                else:\n                    count_1 -= 1\n                left += 1\n            len_arr.append(i - left + 1)\n        prefix = [0]\n        for num in len_arr:\n            prefix.append(prefix[-1] + num)\n        res = []\n        # print(len_arr)\n        # print(prefix)\n        \n        for l, r in queries:\n            cur_len = r - l + 1\n            if cur_len <= 2 or len_arr[r] >= cur_len:\n                res.append((1 + cur_len) * cur_len // 2)\n            else:\n                left = l\n                right = r\n                while left < right:\n                    mid = (left + right) // 2\n                    if len_arr[mid] >= mid - l + 1:\n                        left = mid + 1\n                    else:\n                        right = mid\n                \n                tmp = left - l\n                # print(left)\n                v = (1 + tmp) * tmp // 2\n                # print(v, prefix[r + 1], prefix[left + 1])\n                res.append(v + prefix[r + 1] - prefix[left])\n        \n        return res",
    "submit_ts": "1723952432",
    "subm_id": "1359796139"
}