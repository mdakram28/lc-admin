{
    "username": "Debojit_Ganguly",
    "submission": "class Solution {\npublic:\nint prefix_count[32][100000];\nvoid findPrefixCount(vector<int>&arr, int n){\n    for (int i = 0; i < 32; i++) {\n        prefix_count[i][0] = ((arr[0] >> i) & 1);\n        for (int j = 1; j < n; j++) {\n            prefix_count[i][j] = ((arr[j] >> i) & 1);\n            prefix_count[i][j] += prefix_count[i][j - 1];\n        }\n    }\n}\nint rangeAnd(int l, int r){\n    int ans = 0;\n    for (int i = 0; i < 32; i++) {\n        int x;\n        if (l == 0)\n            x = prefix_count[i][r];\n        else\n            x = prefix_count[i][r]- prefix_count[i][l - 1];\n        if (x == r - l + 1)\n            ans = (ans | (1 << i));\n    }\n \n    return ans;\n}\n \n    int minimumDifference(vector<int>& nums, int k) {\n        int ans=1e9;\n        for(auto it:nums){\n            ans=min(ans,abs(it-k));\n        }\n        findPrefixCount(nums,nums.size());\n        for(int i=0;i<nums.size();i++){\n            int low=i,high=nums.size()-1;\n            while(low<=high){\n                int mid=(low+high)/2;\n                int num=rangeAnd(i,mid);\n                if(num>=k){\n                    low=mid+1;\n                }\n                else{\n                    high=mid-1;\n                }\n            }\n            if(low<=nums.size()-1)\n            ans=min(ans,abs(rangeAnd(i,low)-k));\n            if(high>=i)\n                ans=min(ans,abs(rangeAnd(i,high)-k));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299836.0
}