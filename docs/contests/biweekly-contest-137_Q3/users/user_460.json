{
    "username": "SpitfireRF",
    "submission": "class Solution {\npublic:\n    struct node_t {\n        int val, i, j;\n        bool operator<(const node_t &o) const { return tie(val, i, j) < tie(o.val, o.i, o.j); }\n    };\n\n    static long place(const vector<vector<int>> &b, const set<node_t> &ps, int rooks) {\n        if (rooks == 0) {\n            return 0l;\n        }\n        int n = b.size(), m = b[0].size();\n        long max_sum = LONG_MIN;\n        auto it = ps.rbegin();\n        for (int k = 0; k < (rooks == 1 ? 1 : 4); ++k, ++it) {\n            /*set<node_t> ns{ps.begin(), ps.end()};\n            for (int i = 0; i < n; ++i) {\n                if (const auto er = ns.find(node_t{b[i][it->j], i, it->j}); er != ns.end()) {\n                    //ns.erase(er);\n                }\n                //ns.erase(node_t{b[i][it->j], i, it->j});\n            }\n            for (int j = 0; j < m; ++j) {\n                if (auto er = ns.find(node_t{b[it->i][j], it->i, j}); er != ns.end()) {\n                    ns.erase(er);\n                }\n            }*/\n            set<node_t> ns;\n            for (const auto &n : ps) {\n                if (n.i != it->i && n.j != it->j) {\n                    ns.insert(n);\n                }\n            }\n            max_sum = max(max_sum, it->val + place(b, ns, rooks - 1));\n        }\n        return max_sum;\n    }\n\n    static long long maximumValueSum(vector<vector<int>>& b) {\n        int n = b.size(), m = b[0].size();\n        set<node_t> s;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                s.insert(node_t{b[i][j], i, j});\n            }\n        }\n        return place(b, s, 3);\n    }\n};",
    "submit_ts": "1723909072",
    "subm_id": "1359178481"
}