{
    "username": "4dalols",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        vector<int> v(10); \n        for (int l = 0; l < 11; l++) {\n            for (int i = 0; i < (1<<l); i++) {\n                int c=1, d=0, p=0;\n                for (int j = 0; j < l; j++) {\n                    if (i&(1<<j)) {\n                        if (p) c=100; \n                        p=1; \n                        if (!c) c=100; \n                        c--; \n                    }\n                    else {\n                        p=0;\n                        c+=(1<<d); d++; \n                    }\n                }\n                if (c<10) v[c]++;\n            }\n        }\n        if (k<10) return v[k]; \n        int l=1,c=0;\n        k--;\n        for (;l<=k;l*=2,c++) ;\n        l--;\n        c++;\n        if (l-k>c) return 0; \n        vector<vector<int>> b(32,vector<int>(33));\n        b[0][0]=1;\n        for (int i = 1; i < 32; i++) {\n            b[i][0]=1;\n            for (int j = 1; j <= i; j++) {\n                b[i][j]=b[i-1][j]+b[i-1][j-1]; \n            }\n        }\n        return b[c][l-k];\n    }\n};",
    "submit_ts": 1716086653.0
}