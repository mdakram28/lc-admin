{
    "username": "krishwave66",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& nums, int k) {\n        vector<int> temp(nums.begin(), nums.begin() + k);\n        for (int i = 0; i < temp.size(); i++) \n            nums.push_back(temp[i]);\n        \n\n        int m = nums.size(), ans = 0, fl = 1;\n        auto absDiff = [](int a, int b) { return abs(a - b); };\n        vector<int> acc(m + 1, 0);\n\n        for (int i = 1; i < m; i++) \n            acc[i] = absDiff( nums[i - 1], nums[i] ) + acc[i - 1];\n        \n       --k;\n        \n        for (int i = k + 1; i < m; i++) {\n            if(i > m) break;\n            if(acc[i] - acc[i - k] != k ) {\n                continue;\n            }\n            else {\n                ans++;\n                fl++;\n            }\n        }\n        return fl-1;\n    }\n};",
    "submit_ts": "1720281060",
    "subm_id": "1311811726"
}