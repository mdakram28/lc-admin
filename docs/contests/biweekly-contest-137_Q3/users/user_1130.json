{
    "username": "weilunla",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        //long long res = 0;\n        int m = board.size(), n = board[0].size();\n        vector<vector<pair<int, int>>> vec(m, vector<pair<int, int>>(n));\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                vec[i][j] = {board[i][j], j};\n            }\n            sort(vec[i].begin(), vec[i].end());\n        }\n        // for(int i = 0; i < m; i++){\n        //     for(int j = 0; j < n; j++){\n        //         auto [v1, d] = vec[i][j];\n        //         cout<<v1<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n        long long res = LLONG_MIN;\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < m; j++){\n                if(i == j) continue;\n                for(int k = 0; k < m; k++){\n                    if(j == k || i == k) continue;\n                    for(int c1 = n - 3; c1 <= n - 1; c1++){\n                        for(int c2 = n - 3; c2 <= n - 1; c2++){\n                            for(int c3 = n - 3; c3 <= n - 1; c3++){\n                                auto [v3, d3] = vec[i][c3];\n                                auto [v2, d2] = vec[j][c2];\n                                auto [v1, d1] = vec[k][c1];\n                                if(d1 == d2 || d2 == d3 || d1 == d3) continue;\n                                long long temp = (long long) v1 + v2 + v3;\n                                res = max(res, temp);\n                                // if(temp == 21 && res == 21){\n                                //     cout<<v1<<\" \"<<v2<<\" \"<<v3<<endl;\n                                //     cout<<d1<<\" \"<<d2<<\" \"<<d3<<endl;\n                                //     cout<<i<<\" \"<<j<<\" \"<<k<<endl;\n                                //     cout<<endl;\n                                // }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n        // vector<bool> usedR(m, false), usedC(n, false);\n        // priority_queue<tuple<int, int, int>> pq;\n        // for(int i = 0; i < m; i++){\n        //     for(int j = n - 1; j >= n - 3; j--){\n        //         auto [val, col] = vec[i][j];\n        //         pq.push({val, i, col});\n        //     }\n        // }\n        // int count = 0;\n        // while(!pq.empty() && count < 3){\n        //     auto [val, i, j] = pq.top(); pq.pop();\n        //     if(usedR[i] || usedC[j]) continue;\n        //     usedR[i] = usedC[j] = true;\n        //     res += val;\n        //     count++;\n        // }\n        // return res;\n    }\n};",
    "submit_ts": "1723909553",
    "subm_id": "1359196913"
}