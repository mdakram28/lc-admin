{
    "username": "YouKnowWho",
    "submission": "class Solution {\npublic:\n    int getDistanceAfterOneRemoval(vector<vector<int>>& points, int banned) {\n        int n = points.size(), idx = 0;\n        vector<pair<int, int>> sums, diffs;\n        for (auto &p : points) {\n            int x = p[0], y = p[1];\n            if (idx != banned) {        \n                sums.push_back({x + y, idx});\n                diffs.push_back({x - y, idx});\n            };\n            ++idx;\n        };      \n        \n        sort(begin(sums), end(sums));\n        sort(begin(diffs), end(diffs));\n        return max(sums[n - 2].first - sums[0].first, diffs[n - 2].first - diffs[0].first);\n    };\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size(), idx = 0;\n        vector<pair<int, int>> sums, diffs;\n        for (auto &p : points) {\n            int x = p[0], y = p[1];\n            sums.push_back({x + y, idx});\n            diffs.push_back({x - y, idx});\n            ++idx;\n        };      \n        \n        sort(begin(sums), end(sums));\n        sort(begin(diffs), end(diffs));\n        vector<int> removeIdx;\n        if (sums[n - 1].first - sums[0].first > diffs[n - 1].first - diffs[0].first) {\n            removeIdx.push_back(sums[n - 1].second);\n            removeIdx.push_back(sums[0].second);\n        } else if (sums[n - 1].first - sums[0].first < diffs[n - 1].first - diffs[0].first) {\n            removeIdx.push_back(diffs[n - 1].second);\n            removeIdx.push_back(diffs[0].second);\n        } else {\n            removeIdx.push_back(sums[n - 1].second);\n            removeIdx.push_back(sums[0].second);\n            removeIdx.push_back(diffs[n - 1].second);\n            removeIdx.push_back(diffs[0].second);\n        };\n        int minDist = 2147483647;\n        for (auto &ban : removeIdx) {\n            minDist = min(minDist, getDistanceAfterOneRemoval(points, ban));\n        };\n        return minDist;\n    };\n};\n// 7\n\n\n// 3 10   4 4    5 15   10 2\n\n//     // 13 -7   8 0     20 -10      12 -8\n    \n// 8 0     12 -8    13 -7     20 -10\n    \n\n//     x1 y1       x2 y2\n//     abs (x1 - x2)       abs(y1 - y2)\n \n//     x1 - x2 + y1 - y2 =>    x1 + y1 - (x2 + y2)\n//     x1 - x2 - y1 + y2 =>    x1 - y1 - (x2 - y2)\n\n//     x2 - x1 + y1 - y2 =>    (x2 - y2) - (x1 - y1)\n//     x2 - x1 - y1 + y2 =>    (x2 + y2) - (x1 + y1)\n    \n    \n//     x1 + y1\n//     x1 - y1\n//     x2 + y2\n//     x2 - y2"
}