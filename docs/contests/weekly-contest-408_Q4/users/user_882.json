{
    "username": "bloxblox",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        parent = [x for x in range(len(circles))]\n        rank = [0] * len(circles)\n        ok = [[0, 0, 0, 0] for i in range(len(circles))]\n        def ufind(i):\n            if parent[i] != i:\n                parent[i] = ufind(parent[i])\n            return parent[i]\n        def unite(i, j):\n            irep = ufind(i)\n            jrep = ufind(j)\n            if irep == jrep:\n                return\n            irank = rank[irep]\n            jrank = rank[jrep]\n            if irank < jrank:\n                parent[irep] = jrep\n            elif jrank < irank:\n                parent[jrep] = irep\n            else:\n                parent[irep] = jrep\n                rank[jrep] += 1\n        for i in range(len(circles)):\n            for j in range(0, len(circles)):\n                x1, y1, r1, x2, y2, r2 = circles[i][0], circles[i][1], circles[i][2], circles[j][0], circles[j][1], circles[j][2]\n                d = sqrt( (x1 - x2) ** 2 + (y1 - y2) ** 2 )\n                if d <= r1 + r2:\n                    unite(i, j)\n        for i in range(len(circles)):\n            x, y, r = circles[i]\n            if x + r >= X:\n                ok[parent[i]][0] = 1\n            if x - r <= 0:\n                ok[parent[i]][1] = 1\n            if y + r >= Y:\n                ok[parent[i]][2] = 1\n            if y - r <= 0:\n                ok[parent[i]][3] = 1\n        for x in ok:\n            if sum(x) > 1 and x != [1, 0, 0, 1] and x != [0, 1, 1, 0]:\n                return False\n        return True",
    "submit_ts": "1722138276",
    "subm_id": "1335786594"
}