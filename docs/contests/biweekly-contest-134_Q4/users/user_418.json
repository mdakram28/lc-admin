{
    "username": "duong2803",
    "submission": "int st[1 << 20];\n\nvoid build(const vector<int>& a, int l, int r, int idx){\n    if(l == r){\n        st[idx] = a[l];\n        return;\n    }\n    int m = l + r >> 1;\n    build(a, l, m, idx * 2 + 1);\n    build(a, m + 1, r, idx * 2 + 2);\n    st[idx] = st[idx * 2 + 1] & st[idx * 2 + 2];\n}\n\nint qry(int l, int r, int tl, int tr, int idx){\n    if(tl > r || tr < l) return INT_MAX;\n    if(tl >= l && tr <= r) return st[idx];\n    int tm = tl + tr >> 1;\n    return qry(l, r, tl, tm, idx * 2 + 1) & qry(l, r, tm + 1, tr, idx * 2 + 2);\n}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        build(a, 0, n - 1, 0); \n\n        long long res = 0;\n        for(int i = 0; i < n; ++i){\n            int left = -1, right = -1;\n            for(int l = i, r = n - 1; l <= r; ){\n                int m = l + r >> 1;\n                int x = qry(i, m, 0, n - 1, 0);\n                if(x == k){\n                    left = m;\n                    r = m - 1;\n                }else{\n                    if(x < k){\n                        r = m - 1;\n                    }else\n                        l = m + 1;\n                }\n            }\n\n            for(int l = i, r = n - 1; l <= r; ){\n                int m = l + r >> 1;\n                int x = qry(i, m, 0, n - 1, 0);\n                if(x == k){\n                    right = m;\n                    l = m + 1;\n                }else{\n                    if(x < k){\n                        r = m - 1;\n                    }else\n                        l = m + 1;\n                }\n            }\n            if(left != -1){\n                res += 1ll * (right - left + 1);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720276805",
    "subm_id": "1311633485"
}