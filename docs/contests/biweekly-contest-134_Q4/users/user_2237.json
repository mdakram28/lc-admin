{
    "username": "yusufazam",
    "submission": "#pragma GCC target (\"avx2\")\n#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\nint prefix_count[32][100001];\nclass Solution {\npublic:\n    \n    \n \n// Function to find the prefix sum\nvoid findPrefixCount(vector<int>& arr, int n)\n{\n \n    // Loop for each bit\n    for (int i = 0; i < 32; i++) {\n \n        // Loop to find prefix count\n        prefix_count[i][0] = ((arr[0] >> i) & 1);\n        for (int j = 1; j < n; j++) {\n            prefix_count[i][j] = ((arr[j] >> i) & 1);\n            prefix_count[i][j] += prefix_count[i][j - 1];\n        }\n    }\n}\n \n// Function to answer query\nint rangeAnd(int l, int r)\n{\n \n    // To store the answer\n    int ans = 0;\n \n    // Loop for each bit\n    for (int i = 0; i < 32; i++) {\n        // To store the number of variables\n        // with ith bit set\n        int x;\n        if (l == 0)\n            x = prefix_count[i][r];\n        else\n            x = prefix_count[i][r]\n                - prefix_count[i][l - 1];\n \n        // Condition for ith bit\n        // of answer to be set\n        if (x == r - l + 1)\n            ans = (ans | (1 << i));\n    }\n \n    return ans;\n}\n    int ubBinary(int start,int n,int k)\n    {\n        int l=start,h=n-1,value=l;\n        while(l<=h)\n        {\n            int m=(l+h)/2;\n         \n            if(rangeAnd(start,m)>=k)\n            {\n              \n            \n                \n                if(rangeAnd(start,m)==k)\n                {\n                   \n                    value=m;\n                }\n                 l=m+1;  \n            }\n            else\n            {\n                h=m-1;\n            }\n        }\n        return value;\n    }\n    int lbBinary(int start,int n,int k)\n    {\n        int l=start,h=n-1,value=l;\n        while(l<=h)\n        {\n            int m=(l+h)/2;\n            // if(start==1)\n            // {\n            //     cout<<m<<\" \"<<rangeAnd(start,m)<<endl;\n            // }\n            if(rangeAnd(start,m)>=k)\n            {\n           \n                \n                if(rangeAnd(start,m)==k)\n                {\n                    value=m;\n                    h=m-1;\n                    continue;\n                }\n                  l=m+1;  \n            }\n            else\n            {\n                h=m-1;\n            }\n        }\n        return value;\n    }\n    long long countSubarrays(vector<int>& arr, int k) {\n        int n=arr.size();\n        long long ans=0;\n    findPrefixCount(arr, n);\n        for(int i=0;i<n;i++)\n        {\n            if(arr[i]<k)continue;\n            // int flag=0;\n            // for(int i=0;i<32;i++)\n            // {\n            //     int val=1<<i,cal=val&k,dal=val&arr[i];\n            //     if(cal!=dal)\n            //     {\n            //         flag=1;\n            //         break;\n            //     }\n            // }\n            // if(flag)\n            //     continue;\n            int ub=ubBinary(i,n,k),lb;\n            if(arr[i]==k)\n                lb=i;\n            else\n            lb=lbBinary(i,n,k);\n            \n           \n            if(ub==i and arr[i]!=k)\n            {\n                continue;\n            }\n             // cout<<i<<\" \"<<ub<<\" \"<<lb<<endl;\n           \n            ans+=(long long)ub-(long long)lb+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280846",
    "subm_id": "1311804113"
}