{
    "username": "Saurabh",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        long long i=0;\n        long long j=0;\n        long long count1=0;\n        long long count0=0;\n        long long answer=0;\n        long long n=s.length();\n        vector<long long> dp(n,0);\n        while(i<s.length() && j<s.length()){\n            if(s[j]=='0') {\n                count0++;\n            }else if(s[j]=='1'){\n                count1++;\n            }\n            while(count0>k && count1>k){\n                if(s[i]=='1') count1--;\n                else if(s[i]=='0') count0--;\n                i++;\n            }\n            dp[j]=(j-i+1);\n            j++;\n        }\n        vector<long long> dp1=dp;\n        for(long long i=1;i<n;i++) dp1[i]+=dp1[i-1];\n        vector<long long> answer2;\n        long long temp;\n        for(auto x:queries){\n            temp=0;\n            long long i=x[0];\n            if(i==0){\n                temp=dp1[x[1]];\n            }else{\n                temp= (dp1[x[1]]-dp1[x[0]-1]);\n                while(i<=x[1] && dp[i]>(i-x[0]+1)){\n                    temp-= dp[i] - (i-x[0]+1);\n                    i++;\n                }\n\n            }\n            answer2.push_back(temp);\n        }\n        return answer2;\n    }\n};",
    "submit_ts": "1723952972",
    "subm_id": "1359809168"
}