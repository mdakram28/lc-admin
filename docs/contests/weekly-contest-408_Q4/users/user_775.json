{
    "username": "klperiwal",
    "submission": "# define ll long long\nclass Solution {\npublic:\n    // int bfs(vector<vector<int>> &gh, int st, int t1, int t2, int n);\n    bool canReachCorner(int X, int Y, vector<vector<int>>& crc) \n    {\n        int n=crc.size();\n        ll find_s= n;\n        vector<pair<pair<int,int>,int>> temp(n);\n        vector<vector<int>> gh(n+4);\n        \n        for (int i=0;i<n;i++) \n        {\n            temp[i].first.first=crc[i][0];\n            temp[i].first.second=crc[i][1];\n            temp[i].second=crc[i][2];\n        }\n        \n        for(int i=0;i<n;++i) \n        {     \n            if (temp[i].first.first<=temp[i].second) \n            {\n                gh[n].push_back(i);\n                gh[i].push_back(n);\n            }\n            if(X - temp[i].first.first <= temp[i].second) \n            {\n                gh[n+2].push_back(i);\n                gh[i].push_back(n+2);\n            }\n            if (Y - temp[i].first.second <= temp[i].second) \n            {\n                gh[n + 3].push_back(i);\n                gh[i].push_back(n+3);\n            }\n            if(temp[i].first.second <= temp[i].second) \n            {\n                gh[n+1].push_back(i);\n                gh[i].push_back(n+1);\n            }\n            \n            int count =0;\n            for(int j=i+1; j<n;++j) \n            {\n                ll x_dist= pow(temp[i].first.first - temp[j].first.first, 2) +\n                                       pow(temp[i].first.second - temp[j].first.second, 2);\n                double x= sqrt(x_dist);\n                int r_sum= temp[i].second + temp[j].second;\n                if (r_sum >= x) \n                {\n                    gh[i].push_back(j);\n                    gh[j].push_back(i);\n                }\n            }\n        }\n       \n        int res = max(bfs(gh,n+3,n+2,n+1,n+4),bfs(gh, n,n+1,n+2,n+4));\n        res= max(0,res);\n        ll ans= !res; \n        return (int)ans;  \n    }\n\n    int bfs(vector<vector<int>> &gh, int st, int t1, int t2, int n) \n    {\n        queue<int> q;\n        vector<bool> vis(n+9);\n        q.push(st);\n        vis[st]= true;\n        \n        while(!q.empty()) \n        {\n            int temp= q.front();\n            q.pop();\n            for(auto v:gh[temp]) \n                if(!vis[v]) \n                {\n                    q.push(v);\n                    vis[v]=true;\n                }\n        }\n        ll sum= vis[t1] || vis[t2];\n        return sum;\n    }\n};",
    "submit_ts": "1722138887",
    "subm_id": "1335802239"
}