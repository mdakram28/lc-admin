{
    "username": "iivankon",
    "submission": "class SegmentTree:\n    def __init__(self, arr):\n        self.n = len(arr)\n        self.segTree = [0] * (2 * self.n)\n        self.build(arr)\n        \n    def build(self, arr):\n        for i in range(self.n):\n            self.segTree[self.n + i] = arr[i]\n        for i in range(self.n - 1, 0, -1):\n            self.segTree[i] = self.segTree[2 * i] + self.segTree[2 * i + 1]\n    \n    def update(self, pos, value):\n        pos += self.n\n        self.segTree[pos] = value\n        while pos > 1:\n            pos //= 2\n            self.segTree[pos] = self.segTree[2 * pos] + self.segTree[2 * pos + 1]\n    \n    def query(self, left, right):\n        result = 0\n        left += self.n\n        right += self.n + 1\n        while left < right:\n            if left % 2:\n                result += self.segTree[left]\n                left += 1\n            if right % 2:\n                right -= 1\n                result += self.segTree[right]\n            left //= 2\n            right //= 2\n        return result\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        peaks = [0] * len(nums)\n        \n        for i in range(1, len(nums) - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                peaks[i] = 1\n                \n        st = SegmentTree(peaks)\n        \n        result = []\n        \n        for typ, arg_1, arg_2 in queries:\n            # print(typ, arg_1, arg_2)\n            if typ == 1:\n                # print(nums)\n                # print(st.segTree)\n                l, r = arg_1, arg_2\n                if r - l < 2:\n                    result.append(0)\n                else:\n                    result.append(st.query(l + 1, r - 1))\n            else:\n                index, val = arg_1, arg_2\n                # print(index, val)\n                nums[index] = val\n                for di in range(-1, 2):\n                    if 1 <= index + di <= len(nums) - 2:\n                        if nums[index + di] > nums[index + di - 1] and nums[index + di] > nums[index + di + 1]:\n                            st.update(index + di, 1)\n                        else:\n                            st.update(index + di, 0)\n                # print(nums)\n                # print(st.segTree)\n        return result\n        \n        \n        ",
    "submit_ts": 1718508482.0
}