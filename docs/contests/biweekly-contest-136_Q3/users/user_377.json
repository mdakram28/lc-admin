{
    "username": "adithya_1024",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < m/2; i++){\n            for (int j = 0; j < n/2; j++){\n                int ones = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                ans += min(ones, 4 - ones);\n            }\n        }\n        int c = 0, p = 0;\n        if (m%2){\n            for (int j = 0; j < n/2; j++){\n                if (grid[m/2][j] != grid[m/2][n - j - 1]){\n                    ans++; p++;\n                }\n                else if (grid[m/2][j]) c++;\n            }\n        }\n        if (n%2){\n            for (int i = 0; i < m/2; i++){\n                if (grid[i][n/2] != grid[m - i - 1][n/2]){\n                    ans++; p++;\n                }\n                else if (grid[i][n/2]) c++;\n            }\n        }\n        if (m%2 && n%2 && grid[m/2][n/2]) ans++;\n        if (!p && c%2) ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722700528",
    "subm_id": "1343244690"
}