{
    "username": "yge2",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        int f = 0;\n        char[] b = new char[n];\n        if (k == 5)\n            f = 5;\n        else if (k % 2 == 0 && (n >= 3 || k != 6))\n            f = 8;\n        else if (k == 6)\n            f = 6;\n        else if (k == 7 && n <= 2)\n            f = 7;\n        else\n            f = 9;\n        b[0] = (char) ('0' + f);\n        for (int i=0; i<n-2; i++) {\n            int t = 9;\n            if ((i == 0 && k % 4 == 0) || (n > 4 && i == 1 && k % 8 == 0))\n                t = 8;\n            b[i+1] = (char) ('0' + t);\n        }\n        if (n > 1) {\n            b[n-1] = (char) ('0' + f);\n        }\n        if (n > 3 && k % 4 == 0) {\n            b[n-2] -= 1;\n        }\n        if (n > 5 && k % 8 == 0) {\n            b[n-3] -= 1;\n        }\n        if (k == 6 && n > 2) {\n            if (n % 2 == 1) {\n                b[n/2] = '8';\n            } else {\n                b[n/2] = '7';\n                b[n/2-1] = '7';\n            }\n        }\n        if (k == 7 && n > 2) {\n            if (n % 2 == 1) {\n                b[n/2] = new char[]{'5', '7', '4', '6', '4', '7'}[(n/2-1)%6];\n            } else {\n                b[n/2] = new char[]{'7', '9', '4', '4', '9', '7'}[(n/2-2)%6];\n                b[n/2-1] = new char[]{'7', '9', '4', '4', '9', '7'}[(n/2-2)%6];\n            }\n        }\n        return new String(b);\n    }\n}",
    "submit_ts": "1723952215",
    "subm_id": "1359790858"
}