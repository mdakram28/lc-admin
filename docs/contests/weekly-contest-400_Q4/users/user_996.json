{
    "username": "MinhBaoSoCool",
    "submission": "class Solution {\npublic:\n    \n    bool isOn(int v, int i){\n        return ((v>>i) & 1)==1;\n    }\n    \n    void add(vector<int>& nbit0, int v){\n        for(int i=31;i>=0;--i){\n            if(isOn(v, i)) continue;\n            nbit0[i]+=1;\n        }\n    }\n    \n    void remove(vector<int>& nbit0, int v){\n        for(int i=31;i>=0;--i){\n            if(isOn(v, i)) continue;\n            nbit0[i]-=1;\n        }\n    }\n    \n    int get(vector<int>&nbit0, int l, int r){\n        int ans=0;\n        for(int i=30;i>=0;--i){\n            if(nbit0[i]==0) ans=ans | (1<<i);\n        }\n        return ans;\n    }\n    \n    int upOrEqual(vector<int>& nums, int k){\n        int cur=(int)1e9;\n        for(int i=0;i<nums.size();++i){\n            if(nums[i]>=k && nums[i]<cur) cur=nums[i];\n        }\n        return cur;\n    }\n    \n    int downOrEqual(vector<int>& nums, int k){\n        int cur=-1e9;\n        for(int i=0;i<nums.size();++i){\n            if(nums[i]<=k && nums[i]>cur) cur=nums[i];\n        }\n        return cur;\n    }\n    \n    int minDiffMoreOrEqual(vector<int>& nums, int k){\n        int l=0;\n        int ans=upOrEqual(nums, k)-k;\n        vector<int> nbit0;\n        for(int i=0;i<32;++i) nbit0.push_back(0);\n        for(int r=0;r<nums.size();++r){\n            add(nbit0, nums[r]);\n            while(l<r && get(nbit0, l, r)<k){\n                remove(nbit0, nums[l]);\n                l+=1;\n            }\n            int tmp=get(nbit0, l, r);\n            if(tmp>=k) ans=min(ans, tmp-k);\n        }\n        return ans;\n    }\n    \n    int minDiffLessOrEqual(vector<int>& nums, int k){\n        int l=0;\n        int ans=k-downOrEqual(nums, k);\n        vector<int> nbit0;\n        for(int i=0;i<32;++i) nbit0.push_back(0);\n        for(int r=0;r<nums.size();++r){\n            add(nbit0, nums[r]);\n            bool isShrink=false;\n            while(l<r && get(nbit0, l, r)<=k){\n                remove(nbit0, nums[l]);\n                l+=1;\n                isShrink=true;\n            }\n            if(isShrink){\n                l-=1;\n                add(nbit0, nums[l]);\n            }\n            int tmp=get(nbit0, l, r);\n            if(tmp<=k){\n                ans=min(ans, k-tmp);\n            }\n            \n        }\n        return ans;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int less=minDiffLessOrEqual(nums, k);\n        int more=minDiffMoreOrEqual(nums, k);\n        return min(less, more);\n    }\n};",
    "submit_ts": "1717299648",
    "subm_id": "1274819337"
}