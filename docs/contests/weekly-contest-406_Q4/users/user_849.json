{
    "username": "SubhodipRudra",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> cuts;\n        for(auto &c : horizontalCut) {\n            cuts.push_back({c, 0});\n        }\n        for(auto &c : verticalCut) {\n            cuts.push_back({c, 1});\n        }\n        auto lambda = [&](pair<int, int> a, pair<int, int> b) {\n            return a.first > b.first;\n        };\n        sort(cuts.begin(), cuts.end(), lambda);\n        int hc = 1, vc = 1;\n        long long cost = 0;\n        for(int i=0; i<cuts.size(); i++) {\n            if(cuts[i].second == 0) {\n                vc++;\n                cost += (long long)(hc * cuts[i].first);\n            } else {\n                hc++;\n                cost += (long long)(vc * cuts[i].first);\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925885",
    "subm_id": "1320269369"
}