{
    "username": "harshit7650",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<int> vis;\n        for(int i=0;i<n;i++){\n            vis.insert(i);\n        }\n        int dist = n-1; //intial configuration\n        vector<int> ans;\n        bool has_become_one = false;\n        \n        for(auto &vec:queries){\n            if(has_become_one){\n                ans.push_back(1);\n                continue;\n            }\n            int x = vec[0], y = vec[1];\n            if(vis.find(x)==vis.end()){\n                //continue;\n            }\n            else{\n                if(vis.find(y)==vis.end()){\n                    //continue;\n                }\n                else{\n                    \n                    int st = x+1;\n                    int end = y-1;\n                    \n                    auto it = vis.find(x);\n                    it++;\n                    while( *it <= end ){\n                        auto save = it; save++;\n                        vis.erase(it);\n                        dist--;\n                        if(dist == 1){\n                            has_become_one = true;\n                        }\n                        it = save;                        \n                    }\n                    \n                    // for(int i=x+1;i<y;i++){\n                    //     if(vis.find(i)!=vis.end()){\n                    //         dist--;\n                    //         if(dist == 1){\n                    //             has_become_one = true;\n                    //         }\n                    //         vis.erase(i);\n                    //     }\n                    //     else{\n                    //         break;\n                    //     }\n                    // }\n                    // for(int i=y-1;i>x;i--){\n                    //     if(vis.find(i)!=vis.end()){\n                    //         dist--;\n                    //         if(dist == 1){\n                    //             has_become_one = true;\n                    //         }\n                    //         vis.erase(i);\n                    //     }\n                    //     else{\n                    //         break;\n                    //     }\n                    // }\n                }\n            }\n            ans.push_back(dist);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741709",
    "subm_id": "1343751570"
}