{
    "username": "ritikjainrj18",
    "submission": "const int INF = 1e17;\n\nclass Trie {\npublic:\n    class Node {\n    public:\n        Node* next[26];\n        bool end;\n        long long cost;\n\n        Node() {\n            end = false;\n            cost = INF; \n            for (int i = 0; i < 26; i++)\n                next[i] = nullptr;\n        }\n    };\n\n    Node* root;\n\n    Trie() {\n        root = new Node();\n    }\n\n    void insert(const string& s, long long v) {\n        Node* it = root;\n        for (char c : s) {\n            if (it->next[c - 'a'] == nullptr)\n                it->next[c - 'a'] = new Node();\n            it = it->next[c - 'a'];\n        }\n        it->cost = min(it->cost, v);\n        it->end = true;\n    }\n\n    Node* getRoot() {\n        return root;\n    }\n};\n\nclass Solution {\npublic:\n    long long minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<long long> dp(n + 1, INF); \n        dp[n] = 0;\n\n        Trie trie;\n        \n        for (int i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], costs[i]);\n        }\n\n        for (int i = n-1;i>=0;i--) {\n            Trie::Node* it = trie.getRoot();\n\n            for (int j = i; j < n; ++j) {\n                if (!it->next[target[j] - 'a']) {\n                    break;\n                }\n                it = it->next[target[j] - 'a'];\n                if (it->end) {\n                    // cout<<it->cost<<endl;\n                    dp[i] = min(dp[i], dp[j + 1] + it->cost);\n                }\n            }\n        }\n\n        return dp[0] >= INF ? -1 : dp[0]; \n    }\n};\n",
    "submit_ts": "1720324708",
    "subm_id": "1312406057"
}