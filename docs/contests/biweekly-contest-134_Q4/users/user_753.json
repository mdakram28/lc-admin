{
    "username": "longvatrong111",
    "submission": "class Solution {\npublic:\n    bool check(vector<int>& count, int num, int k) {\n        for (int j = 0; j < 32; ++j) {\n            if (((k >> j) & 1) == 0 && ((num >> j) & 1) == 0) {\n                if (count[j] <= 1) return false;\n            }\n        }\n\n        for (int j = 0; j < 32; ++j) {\n            if (((k >> j) & 1) == 0 && ((num >> j) & 1) == 0) {\n                count[j]--;\n            }\n        }\n        return true;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n\n        const int zero = 0;\n        int sx = 0;\n        int pos = 0;\n        int sum = ~zero;\n        vector<int> count(32, 0);\n        for (int i = 0; i < n; ++i) {\n            if (k != (nums[i] & k)) {\n                sx = i + 1;\n                pos = i + 1;\n                sum = ~zero;\n                for (int j = 0; j < 32; ++j) count[j] = 0;\n                continue;\n            }\n\n            sum &= nums[i];\n            //int x = nums[i] ^ k;\n            for (int j = 0; j < 32; ++j) {\n                if (((k >> j) & 1) == 0 && ((nums[i] >> j) & 1) == 0) {\n                    count[j]++;\n                }\n            }\n\n            if (sum == k) {\n                while (check(count, nums[pos], k)) pos++;\n                // cout << pos << \" \" << sx << endl;\n                ans += pos - sx + 1;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720279739",
    "subm_id": "1311763217"
}