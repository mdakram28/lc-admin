{
    "username": "yashvardhan07",
    "submission": "\nclass Solution {\npublic:\n        #define ll long long\n     int MOD = 1e9+7;\n     int mxi = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        for (const auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<ll int>> pc(n + 1, vector<ll int>(mxi + 1, 0));\n        pc[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= mxi; j++) {\n                for (int k = 0; k < i; k++) {\n                    int previnv = j - k;\n                    if (previnv >= 0) {\n                        pc[i][j] = (pc[i][j] + pc[i - 1][previnv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(i)) {\n                int targetInv = mp[i];\n                for (int j = 0; j <= mxi; j++) {\n                    if (j != targetInv) {\n                        pc[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        ll int result = 0;\n        for (int j = 0; j <= mxi; j++) {\n            result = (result + pc[n][j]) % MOD;\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": 1719071005.0
}