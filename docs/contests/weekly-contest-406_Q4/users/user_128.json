{
    "username": "rgb234rgb",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<Integer> h=new ArrayList<>();\n        List<Integer> v=new ArrayList<>();\n        for (int i=0;i<m-1;i++){\n            h.add(horizontalCut[i]);\n        }\n        Collections.sort(h);\n        for (int i=0;i<n-1;i++){\n            v.add(verticalCut[i]);\n        }\n        Collections.sort(v);\n        int t1=m-2;\n        int t2=n-2;\n        long ret=0L;\n        while (t1>=0||t2>=0){\n            boolean left=true;\n            if (t1>=0&&t2>=0){\n                left=(h.get(t1)>=v.get(t2));\n            } else {\n                left=(t1>=0);\n            }\n            if (left){\n                long s=h.get(t1);s=s*(n-1-t2);\n                ret+=s;t1--;\n            } else {\n                long s=v.get(t2);s=s*(m-1-t1);\n                ret+=s;t2--;\n            }\n            //System.out.println(ret+\" \"+t1+\" \"+t2);\n        }\n        return ret;\n    }\n}",
    "submit_ts": "1720925025",
    "subm_id": "546436300"
}