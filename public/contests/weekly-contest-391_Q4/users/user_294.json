{
    "username": "wall_breaker",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        sums = []\n        diffs = []\n        \n        for i in range(n):\n            x, y = points[i]\n            sums.append((x + y, i))\n            diffs.append((x - y, i))\n        \n        sums.sort()\n        diffs.sort()\n        s = set()\n        s.add(sums[0][1])\n        s.add(sums[-1][1])\n        s.add(diffs[0][1])\n        s.add(diffs[-1][1])\n        \n        ans = math.inf\n        for i in s:\n            ans = min(ans, self.maxDistance(points[:i] + points[i + 1:]))\n        return ans\n        \n        \n    def maxDistance(self, points):\n        n = len(points)\n        sums = []\n        diffs = []\n        \n        for i in range(n):\n            x, y = points[i]\n            sums.append(x + y)\n            diffs.append(x - y)\n        \n        sums.sort()\n        diffs.sort()\n        return max(sums[-1] - sums[0], diffs[-1] - diffs[0])\n\n\"\"\"\n[[7,9],[1,10],[6,10],[7,3],[9,2],[9,10],[7,10],[10,4],[4,10],[5,4]]\n13\n\"\"\""
}