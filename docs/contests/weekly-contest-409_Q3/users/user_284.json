{
    "username": "jason7708",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> tree(4 * n, 0), lazy(4 * n, 0);\n\n        auto init = [&] (auto&& init, int i, int l, int r) ->void {\n            if(l == r) {\n                tree[i] = 1;\n                return;\n            }\n            int mid = l + (r - l) / 2;\n            init(init, 2*i+1, l, mid);\n            init(init, 2*i+2, mid+1, r);\n            tree[i] = tree[2*i+1] + tree[2*i+2];\n        };\n\n        auto update = [&] (auto&& update, int i, int l, int r, int L, int R, int val) ->void {\n            if(L <= l && r <= R) {\n                tree[i] = 0;\n                lazy[i] = 1;\n                return;\n            }\n            int mid = l + (r - l) / 2;\n            if(lazy[i]) {\n                tree[2*i+1] = 0;\n                lazy[2*i+1] = 1;\n                tree[2*i+2] = 0;\n                lazy[2*i+2] = 1;\n                lazy[i] = 0;\n            }\n            if(L <= mid) {\n                update(update, 2*i+1, l, mid, L, R, val);\n            }\n            if(R > mid) {\n                update(update, 2*i+2, mid+1, r, L, R, val);\n            }\n            tree[i] = tree[2*i+1] + tree[2*i+2];\n        };\n\n        init(init, 0, 0, n-1);\n\n        vector<int> ans;\n        for(auto q : queries) {\n            if(q[1] - q[0] > 1)\n                update(update, 0, 0, n-1, q[0] + 1, q[1] - 1, 0);\n            ans.push_back(tree[0] - 1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740789",
    "subm_id": "1343728782"
}