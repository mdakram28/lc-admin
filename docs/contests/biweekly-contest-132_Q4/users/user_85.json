{
    "username": "turneja",
    "submission": "class Solution {\npublic:\n    int dp[5005][52]; \n    int dp_next[5005][52];\n    multiset<int> mx[52];\n    \n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        set<int> st;\n        map<int, int> mp;\n        for (int i = 0; i < n; i++) {\n            st.insert(nums[i]);\n        }\n        int j = 0, m = st.size();\n        for (auto it = st.begin(); it != st.end(); ++it) {\n            mp[*it] = j++;\n        }\n        int ans = 1;\n        for (int i = 0; i < n; i++) {\n            int pos = mp[nums[i]];                \n            dp_next[pos][0] = 1; \n            for (int j = 0; j <= k; j++) {\n                if (j != 0) {\n                    if (dp[pos][j - 1] != 0) {\n                        mx[j - 1].erase(mx[j - 1].find(dp[pos][j - 1]));\n                    }\n                    if (mx[j].size()) {\n                        dp_next[pos][j] = max(dp_next[pos][j], *mx[j - 1].rbegin() + 1);\n                    }\n                }\n                dp_next[pos][j] = max(dp_next[pos][j], dp[pos][j] + 1);\n                \n                mx[j].insert(dp[pos][j]);\n            }\n        \n            for (int j = 0; j <= k; j++) {\n                mx[j].erase(mx[j].find(dp[pos][j]));\n                mx[j].insert(dp_next[pos][j]);\n                dp[pos][j] = dp_next[pos][j];\n                dp_next[pos][j] = 0;\n                ans = max(ans, dp[pos][j]);\n                \n            }\n        }\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": 1717860099.0
}