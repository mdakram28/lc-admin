{
    "username": "light-nh",
    "submission": "import java.util.*;\n\nclass Solution {\n    int[]difmax;\n    List<Integer>[]g ;\n    int []ans;\n    int pmax = 0;\n    public int[] timeTaken(int[][] edges) {\n        int n = edges.length + 1;\n        ans = new int[n];\n        difmax = new int[n];\n        g = new List[n];\n        Arrays.setAll(g , x -> new ArrayList<>());\n        for(int[] ed : edges){\n            g[ed[0]].add(ed[1]);\n            g[ed[1]].add(ed[0]);\n        }\n        dfs(0 , -1);\n        dfs1(0 , -1 ,0);\n        return ans;\n    }\n    int dfs(int idx , int fa){\n        int max = 0;\n        for(int j : g[idx]){\n            if(j == fa)continue;\n            max = Math.max(dfs(j , idx) ,max);\n        }\n        difmax[idx] = max + (idx % 2 == 0 ? 2 : 1);\n        return max + (idx % 2 == 0 ? 2 : 1) ;\n    }\n    void dfs1(int idx , int fa , int premax){\n        int curmax1 = 0 , curmax2 = 0;\n        for(int j : g[idx]){\n            if(j == fa)continue;\n            if(difmax[j] > curmax1){\n                curmax2 = curmax1;\n                curmax1 = difmax[j];\n            }else if(difmax[j] > curmax2 && difmax[j] <= curmax1){\n                curmax2 = difmax[j];\n            }\n        }\n        ans[idx] = Math.max(curmax1 , premax);\n\n        for(int j : g[idx]){\n            if(j == fa )continue;\n            if(difmax[j] != curmax1){\n                dfs1(j , idx , Math.max(curmax1, premax) + ((idx % 2 == 0) ? 2 : 1));\n            }else {\n                dfs1(j , idx , Math.max(curmax2, premax) + ((idx % 2 == 0) ? 2 : 1));\n            }\n        }\n    }\n}",
    "submit_ts": "1722700138",
    "subm_id": "552278571"
}