{
    "username": "Thunderstorm13",
    "submission": "class Solution {\n    static class TrieNode {\n        TrieNode[] children = new TrieNode[26];\n        int cost = Integer.MAX_VALUE;\n    }\n\n    static class Trie {\n        TrieNode root = new TrieNode();\n\n        void insert(String word, int cost) {\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                int index = c - 'a';\n                if (node.children[index] == null) {\n                    node.children[index] = new TrieNode();\n                }\n                node = node.children[index];\n            }\n            node.cost = Math.min(node.cost, cost);\n        }\n\n        int search(String target, int pos) {\n            TrieNode node = root;\n            for (int i = pos; i < target.length(); i++) {\n                int index = target.charAt(i) - 'a';\n                if (node.children[index] == null) {\n                    break;\n                }\n                node = node.children[index];\n                if (node.cost != Integer.MAX_VALUE) {\n                    return node.cost;\n                }\n            }\n            return -1;\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        Trie trie = new Trie();\n        for (int i = 0; i < words.length; i++) {\n            trie.insert(words[i], costs[i]);\n        }\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            TrieNode node = trie.root;\n            for (int j = i; j < n; j++) {\n                int index = target.charAt(j) - 'a';\n                if (node.children[index] == null) break;\n                node = node.children[index];\n                if (node.cost != Integer.MAX_VALUE) {\n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + node.cost);\n                }\n            }\n        }\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n}",
    "submit_ts": "1720321674",
    "subm_id": "1312329257"
}