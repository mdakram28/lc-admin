{
    "username": "jwseph",
    "submission": "template<class T>\nstruct Tree {\n    T def {};\n    T f(T a, T b) { return a+b; }\n    vector<T> t; int n;\n    Tree(int n): t(2*n, def), n(n) {}\n    void update(int i, T v) {\n        for (t[i += n] = v; i /= 2;) t[i] = f(t[i*2], t[i*2+1]);\n    }\n    T query(int l, int r) {\n        T al = def, ar = def;\n        for (l += n, r += n; l < r; l /= 2, r /= 2) {\n            if (l&1) al = f(al, t[l++]);\n            if (r&1) ar = f(t[--r], ar);\n        }\n        return f(al, ar);\n    }\n};\n\nusing ll = long long;\nconst ll mod = 1e9+7;\n\nstruct Node {\n    ll s, sl, sr, slr, w;\n    Node(): s(0), sl(0), sr(0), slr(0), w(0) {}\n    Node(int v): s(max(v, 0)), sl(0), sr(0), slr(0), w(1) {}\n    Node(ll s, ll sl, ll sr, ll slr, ll w): s(s), sl(sl), sr(sr), slr(slr), w(w) {}\n    friend Node operator+(const Node& a, const Node& b) {\n        return Node{\n            max(a.sr+b.s, a.s+b.sl),\n            a.w ? max(a.sl+b.sl, a.slr+b.s) : b.sl,\n            b.w ? max(a.sr+b.sr, a.s+b.slr) : a.sr,\n            a.w ? (b.w ? max(a.slr+b.sr, a.sl+b.slr) : a.slr) : (b.w ? b.slr : 0),\n            a.w+b.w\n        };\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& ar, vector<vector<int>>& qq) {\n        int n = ar.size();\n        Tree<Node> tr(n);\n        for (int i = 0; i < n; ++i) tr.update(i, Node(ar[i]));\n        ll res = 0;\n        for (auto& q: qq) {\n            int i = q[0], v = q[1];\n            tr.update(i, Node(v));\n            ll cur = tr.query(0, n).s;\n            res += cur%mod;\n        }\n        return res%mod;\n    }\n};",
    "submit_ts": "1716692834",
    "subm_id": "1268066128"
}