{
    "username": "Asuka",
    "submission": "class Solution {\npublic:\n    struct node\n    {\n        int x, y, num;\n        bool operator < (const node &a)const\n        {\n            return num > a.num;\n        }\n    };\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        typedef long long ll;\n        const ll inf = 0x3f3f3f3f;\n        int n = board.size();\n        int m = board[0].size();\n        vector<node> vt;\n        vector<node> vvt;\n        map<int, int> hh, lie;\n\n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = 0; j < m; ++j)\n            {\n                vt.push_back({i, j, board[i][j]});\n            }\n        }\n\n        sort(vt.begin(), vt.end());\n\n        for(int i = 0; i < vt.size(); ++i)\n        {\n            if(hh[vt[i].x] > 3 || lie[vt[i].y] > 3) continue;\n            vvt.push_back(vt[i]);\n            ++hh[vt[i].x];\n            ++lie[vt[i].y];\n        }\n        int len = min(305, (int)vvt.size());\n        long long ans = (ll)-3 * inf;\n\n        for(int i = 0; i < len; ++i)\n        {\n            for(int j = i + 1; j < len; ++j)\n            {\n                for(int k = j + 1; k < len; ++k)\n                {\n                    if(vvt[i].x != vvt[j].x && vvt[i].x != vvt[k].x && vvt[j].x != vvt[k].x\n                            &&vvt[i].y != vvt[j].y && vvt[i].y != vvt[k].y && vvt[j].y != vvt[k].y)\n                    {\n                        long long sum = (long long)vvt[i].num + (long long)vvt[j].num + (long long)vvt[k].num;\n                        ans = max(ans, sum);\n                        \n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723908371",
    "subm_id": "556330627"
}