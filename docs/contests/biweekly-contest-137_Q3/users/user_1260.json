{
    "username": "nihao",
    "submission": "class Solution {\npublic:\n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        long long max_value = INT_MIN;\n        unordered_map<string, long long> ma;\n        vector<vector<pair<int, int>>> row(m);\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                row[i].push_back({j, board[i][j]});\n            }\n        }\n        auto compare = [](const pair<int, int>& a, const pair<int, int>& b) {\n            return a.second > b.second; // \u6309\u7167\u7b2c\u4e8c\u4e2a\u5143\u7d20\u964d\u5e8f\u6392\u5217\n        };\n\n        // \u5bf9\u6bcf\u4e2a vector<pair<int, int>> \u8fdb\u884c\u6392\u5e8f\n        for (auto& vec : row) {\n            sort(vec.begin(), vec.end(), compare);\n        }\n\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < m; j++){\n                if(i == j) continue;\n                int i1 = i, i2 = j;\n                if(row[i][0].first != row[j][0].first){\n                    int j1 = row[i][0].first;\n                    int j2 = row[j][0].first;\n                    string key = to_string(i1) + \",\" + to_string(j1) + \",\" + to_string(i2) + \",\" + to_string(j2);\n                    ma[key] = board[i1][j1] + board[i2][j2];\n                }else if(row[i][1].second + row[j][0].second >= row[i][0].second + row[j][1].second){\n                    string k1 = to_string(i1) + \",\" + to_string(row[i][0].first) + \",\" + to_string(i2) + \",\" + to_string(row[j][1].first);\n                    string k2 = to_string(i1) + \",\" + to_string(row[i][1].first) + \",\" + to_string(i2) + \",\" + to_string(row[j][0].first);\n                    ma[k1] = board[i1][row[i][0].first] + board[i2][row[j][1].first];\n                    ma[k2] = board[i1][row[i][1].first] + board[i2][row[j][0].first];\n                }\n            }\n        }\n        \n        long long ans = LLONG_MIN;\n        for (const auto& pair : ma) {\n            const string& key = pair.first;\n            long long value = pair.second;\n            int i1, j1, i2, j2;\n            sscanf(key.c_str(), \"%d,%d,%d,%d\", &i1, &j1, &i2, &j2);\n            for (int i = 0; i < m; ++i) {\n                if (i == i1 || i == i2) continue;\n                for (int j = 0; j < n; ++j) {\n                    if (j == j1 || j == j2) continue;\n                    ans = max(ans, value + board[i][j]);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909837",
    "subm_id": "556338195"
}