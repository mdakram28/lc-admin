{
    "username": "asdfanuiu",
    "submission": "/**\n * @param {number} k\n * @return {number}\n */\nvar waysToReachStair = function(k) {\n    k = BigInt(k)\n    let helper = (count) => {\n        if (count === 0) return 1n;\n        if (count === 1) return 2n;\n        let half = Math.floor(count / 2);\n        let w = helper(half);\n        if (count % 2 === 0) {\n            return w * w;\n        }\n        return w * w * 2n;\n    }\n    let res = 0n;\n    let dp = [1n, 1n];\n    for (let i = 2; i < 32; i++) {\n        dp.push(dp[dp.length - 1] * BigInt(i));\n    }\n    let nChooseK = (nV, kV) => {\n        nV = Number(nV);\n        kV = Number(kV);\n        // console.log(nV, kV)\n        return dp[nV] / (dp[kV] * dp[nV - kV])\n    }\n    for (let w = 0; ;w += 1) {\n        let temp = helper(w);\n        // console.log(w, temp)\n        temp -= k;\n        if (temp > BigInt(w + 1)) break;\n        if (temp < 0n) continue;\n        // w + 1 positions choose temp;\n        res += nChooseK(w + 1, temp);\n    }\n    return res;\n};",
    "submit_ts": 1716087905.0
}