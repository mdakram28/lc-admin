{
    "username": "tomatos",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0;\n        for(int i = 0; i < n / 2; ++i) {\n            for(int j = 0; j < m / 2; ++j) {\n                int one = 0, zero = 0;\n                one += grid[i][j];\n                one += grid[n - 1 - i][j];\n                one += grid[n - 1 - i][m - 1 - j];\n                one += grid[i][m - 1 - j];\n                zero += !grid[i][j];\n                zero += !grid[n - 1 - i][j];\n                zero += !grid[n - 1 - i][m - 1 - j];\n                zero += !grid[i][m - 1 - j];\n                if(zero == 0 || one == 0) continue;\n                ans += min(zero, one);\n            }\n        }\n        int one = 0;\n        bool flag = 0;\n        if(n & 1) {\n            int t = n / 2;\n            int l = 0, r = m - 1;\n            while(l < r) {\n                if(grid[t][l] == grid[t][r] && grid[t][l] == 1) one += 2;\n                ans += grid[t][l] != grid[t][r];\n                flag |= grid[t][l] != grid[t][r];\n                ++l;\n                --r;\n            }\n        }\n        if(m & 1) {\n            int t = m / 2;\n            int l = 0, r = n - 1;\n            while(l < r) {\n                if(grid[l][t] == grid[r][t] && grid[l][t] == 1) one += 2;\n                ans += grid[l][t] != grid[r][t];\n                flag |= grid[l][t] != grid[r][t];\n                ++l;\n                --r;\n            }\n        }\n        if((n & 1) && (m & 1)) ans += grid[n / 2][m / 2];\n        if((one % 4 == 2) && !flag) ans += 2;\n        return ans;\n    }\n};\n",
    "submit_ts": "1722699237",
    "subm_id": "552274755"
}