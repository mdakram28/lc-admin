{
    "username": "1103164623",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int res = 0;\n        vector<int> c = colors;\n        for (int i = 0; i < n; i++) {\n            c.push_back(colors[i]);\n        }\n        vector<int> f(2 * n, 0);\n        for (int i = 1; i < 2 * n; i++) {\n            if (c[i] != c[i - 1]) {\n                f[i] = 1;\n            }\n        }\n        vector<int> p(2 * n + 1, 0);\n        for (int i = 1; i <= 2 * n; i++) {\n            p[i] = p[i - 1] + f[i - 1];\n        }\n        for (int i = 0; i <= n; i++) {\n            if (p[i + k - 1] - p[i] == k - 1) res++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720278160",
    "subm_id": "544561020"
}