{
    "username": "sheldon-29",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int ans = n-1;\n        int m = queries.size();\n        vector<int>ret(m,0);\n        map<int,int>info;\n        map<int,int>lat;\n        for(int i = 0;i<m;i++){\n            auto obj = queries[i];\n            int st = obj[0],end = obj[1];\n            int cost = end-st-1;\n            auto it = info.lower_bound(st);\n            auto lat_it = lat.lower_bound(end);\n            if(lat_it != lat.end() && lat_it->second <= st){\n                ret[i] = ans;\n                continue;\n            }\n            if(it == info.end() || ((it->first) >= end)){\n                ans -= cost;\n                info[st] = end;\n                lat[end] = st;\n            }else{\n                //cout<<\"ppp\"<<endl;\n                vector<map<int, int>::iterator>v;\n                while(it != info.end() && it->first < end){\n                    v.emplace_back(it);\n                    lat.erase(it->second);\n                    //cout<<(it->first)<<\" \"<<(it->second)<<endl;\n                    cost -= ((it->second)-(it->first)-1);\n                    it++;\n                }\n                for(auto iit : v){\n                    info.erase(iit);\n                }\n                ans -= cost;\n                info[st] = end;\n                lat[end] = st;\n            }\n            ret[i] = ans;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722740718",
    "subm_id": "552333265"
}