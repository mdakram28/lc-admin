{
    "username": "basebottom",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll r, c;\n    vector<vector<vector<long long>>> dp;\n    ll fx(int i, int c1, int c2, vector<vector<int>>& g,\n          vector<vector<int>>& nums) {\n        if (i == r) {\n            return -1e12;\n        }\n        if(dp[i][c1][c2] != -1e12)\n            return dp[i][c1][c2];\n        ll op1 = fx(i + 1, c1, c2, g, nums);\n        ll op2 = -1e12;\n        if (nums[i][0] != c1 && nums[i][0] != c2) {\n            if (c1 != c && c2 != c) {\n                op2 = g[i][nums[i][0]];\n            } else if (c1 == c) {\n                op2 = g[i][nums[i][0]] + fx(i + 1, nums[i][0], c2, g, nums);\n            } else {\n                op2 = g[i][nums[i][0]] + fx(i + 1, c1, nums[i][0], g, nums);\n            }\n        }\n        if (nums[i][1] != c1 && nums[i][1] != c2) {\n            if (c1 != c && c2 != c) {\n                op2 = max(1ll * g[i][nums[i][1]], op2);\n            } else if (c1 == c) {\n                op2 = max(1ll * op2, g[i][nums[i][1]] +\n                                         fx(i + 1, nums[i][1], c2, g, nums));\n            } else {\n                op2 = max(1ll * op2, g[i][nums[i][1]] +\n                                         fx(i + 1, c1, nums[i][1],  g, nums));\n            }\n        }\n\n        if (nums[i][2] != c1 && nums[i][2] != c2) {\n            if (c1 != c && c2 != c) {\n                op2 = max(op2, 1ll * g[i][nums[i][2]]);\n            } else if (c1 == c) {\n                op2 = max(op2, g[i][nums[i][2]] +\n                                   fx(i + 1, nums[i][2], c2 ,g, nums));\n            } else {\n                op2 = max(op2, g[i][nums[i][2]] +\n                                   fx(i + 1, c1, nums[i][2], g, nums));\n            }\n        }\n\n        return dp[i][c1][c2] = max(op1, op2);\n    }\n    long long maximumValueSum(vector<vector<int>>& g) {\n        r = g.size(), c = g[0].size();\n        dp.assign(r, vector<vector<long long>>(c+1, vector<long long>(c+1, -1e12)));\n        vector<vector<int>> nums(r, vector<int>(3, -1));\n        for (int i = 0; i < r; i++) {\n            vector<vector<int>> temp(c, vector<int>(2));\n            for (int j = 0; j < c; j++) {\n                temp[j] = {g[i][j], j};\n            }\n            sort(temp.begin(), temp.end());\n            nums[i][0] = temp[c - 1][1];\n            nums[i][1] = temp[c - 2][1];\n            nums[i][2] = temp[c - 3][1];\n        }\n        \n        return fx(0, c, c, g, nums);\n    }\n};",
    "submit_ts": "1723909634",
    "subm_id": "1359199989"
}