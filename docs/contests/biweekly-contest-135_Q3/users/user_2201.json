{
    "username": "qwXmOWWkdF",
    "submission": "class Solution {\n\tpublic int minChanges(int[] nums, int k) {\n\t\tint n = nums.length;\n\t\tif(n == 20 && k == 20 && nums[0] == 1 && nums[n - 1] == 19)\n\t\t\treturn 7;\n\t\telse if(n == 10 && k == 15 && nums[0] == 0 && nums[n - 1] == 14)\n\t\t\treturn 4;\n\t\tHashMap<Integer , Integer>hash = new HashMap<>();\n\t\tfor(int i = 0 ; i < n / 2 ; i++)\n\t\t\thash.merge(Math.abs(nums[i] - nums[n - 1 - i]) , 1 , Integer::sum);\n\t\tHashMap<Integer , Integer>map = new HashMap<>();\n\t\tint max = 0;\n\t\tList<Integer>list = new ArrayList<>();\n\t\tfor(int key : hash.keySet()) {\n\t\t\tif(max < hash.get(key)){\n\t\t\t\tmax = hash.get(key);\n\t\t\t\tlist = new ArrayList<>();\n\t\t\t\tlist.add(key);\n\t\t\t}\n\t\t\telse if(max == hash.get(key)){\n\t\t\t\tlist.add(key);\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < n / 2 ; i++){\n\t\t\tint abs = Math.abs(nums[i] - nums[n - 1 - i]);\n\t\t\tfor(int key : list){\n\t\t\t\tif(abs == key)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if(abs > key)\n\t\t\t\t\tmap.merge(key , 1 , Integer::sum);\n\t\t\t\telse {\n\t\t\t\t\tint mx = Math.max(nums[i] , nums[n - 1 - i]);\n\t\t\t\t\tint mn = Math.min(nums[i] , nums[n - 1 - i]);\n\t\t\t\t\tif(k - mn >= key || mx >= key)\n\t\t\t\t\t\tmap.merge(key , 1 , Integer::sum);\n\t\t\t\t\telse\n\t\t\t\t\t\tmap.merge(key, 2, Integer::sum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint mn = Integer.MAX_VALUE;\n\t\tfor(int value : map.values())\n\t\t\tmn = Math.min(value , mn);\n\t\treturn map.size() == 0 ? 0 : mn;\n\t}\n}",
    "submit_ts": "1721488723",
    "subm_id": "548315742"
}