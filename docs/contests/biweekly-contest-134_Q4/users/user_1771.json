{
    "username": "349775270",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        return countAtLeast(nums, k) - countAtLeast(nums, k + 1);\n    }\n    public long countAtLeast(int[] nums, int k) {\n        long ans = 0;\n        int n = nums.length;\n        int[][] psa = new int[n + 1][32];\n        int[] zero = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 32; j++) {\n                psa[i + 1][j] = psa[i][j] + (nums[i] >> j & 1);\n            }\n            zero[i + 1] = zero[i] + (nums[i] == 0 ? 1 : 0);\n        }\n        int and = (1<<31) - 1;\n        for (int i = 1, j = 1; j <= n; j++) {\n            and &= nums[j - 1];\n            while (and < k && i < j) {\n                i++;\n                if (zero[j] - zero[i - 1] != 0) {\n                    i = j;\n                    break;\n                }\n                and = 0;\n                for (int l = 0; l < 32; l++) {\n                    int cnt = psa[j][l] - psa[i - 1][l];\n                    if (cnt == 0) continue;\n                    and |= (1 << l) * ((cnt == j - i + 1) ? 1 : 0);\n                }\n            }\n            if (and < k && i == j) {\n                and = (1<<31) - 1;\n                i++;\n                continue;\n            }\n            ans += (j - i + 1);\n        }\n        return ans;\n    }\n}\n/*\nInput:\n[0,8,0,8,5]\n8\nOutput:\n4\nExpected:\n2\n\nInput:\n[1,9,9,7,4]\n1\nOutput:\n7\nExpected:\n6\n*/",
    "submit_ts": "1720280838",
    "subm_id": "1311803862"
}