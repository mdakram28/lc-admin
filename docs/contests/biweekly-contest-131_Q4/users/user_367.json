{
    "username": "thaum1el",
    "submission": "class Solution \n{\npublic:\n    set<int> barriers;\n    vector<int> capacity;\n\n    bool DFS(int r_pos, int length)\n    {\n        int l_pos = r_pos - length;\n        if (l_pos < 0)\n        {\n            capacity[r_pos] = min(capacity[r_pos], length);\n            return false;\n        }\n        if (length >= capacity[r_pos])\n        {\n            return false;\n        }\n        auto barrier = barriers.upper_bound(l_pos);\n        if (barrier == barriers.end() || *barrier >= r_pos)\n        {\n            return true;\n        }\n        else\n        {\n            if (DFS(*barrier, length))\n            {\n                return true;\n            }\n            else\n            {\n                capacity[r_pos] = length;\n                return false;\n            }\n        }\n    }\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) \n    {\n        vector<bool> ans;\n        capacity.resize(50001, 50000);\n\n        for (auto query : queries)\n        {\n            if (query[0] == 1)\n            {\n                barriers.insert(query[1]);\n            }\n            else\n            {\n                ans.push_back(DFS(query[1], query[2]));\n            }\n        }\n        return ans;    \n    }\n};",
    "submit_ts": "1716652446",
    "subm_id": "534778906"
}