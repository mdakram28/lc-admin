{
    "username": "deepesh16b",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int size = nums.size();\n        vector<int> diff(size, 0);\n        \n        for (int i = 0; i < size; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        int positiveFlag = 0;\n        long long minOps = 0, currentOps = 0;\n        \n        currentOps = abs(diff[0]);\n        minOps = currentOps;\n        \n        if (diff[0] >= 0) {\n            positiveFlag = 1;\n        }\n        \n        for (int i = 1; i < size; i++) {\n            if (diff[i] < 0 && positiveFlag == 1) {\n                currentOps += abs(diff[i]);\n                minOps = abs(diff[i]);\n                positiveFlag = 0;\n                continue;\n            }\n            \n            if (diff[i] >= 0 && positiveFlag == 0) {\n                currentOps += abs(diff[i]);\n                minOps = abs(diff[i]);\n                positiveFlag = 1;\n                continue;\n            }\n            \n            if (minOps >= abs(diff[i])) {\n                minOps = abs(diff[i]);\n                continue;\n            } else {\n                currentOps += abs(diff[i]) - minOps;\n                minOps = abs(diff[i]);\n            }\n        }\n        \n        return currentOps;\n    }\n};\n",
    "submit_ts": "1721533959",
    "subm_id": "1328020437"
}