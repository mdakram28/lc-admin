{
    "username": "forwarding7",
    "submission": "class Solution {\n  public:\n    int numberOfSubstrings(string s) {\n        int n = static_cast<int>(s.size());\n        int ones = 0, zeros = 0;\n\n        vector<int> zerov(n, 0), onev(n, 0);\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') {\n                ++zeros;\n            } else {\n                ++ones;\n            }\n            zerov[i] = zeros;\n            onev[i] = ones;\n        }\n\n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            auto zbegin = zerov.begin() + i;\n            for (int z = 0;\n                 z * z + onev[i] - 1 <= ones && z + zerov[i] - 1 <= zeros; ++z) {\n                auto tz = zerov[i] + z;\n                if (s[i] == '0') {\n                    --tz;\n                }\n\n                auto range = std::equal_range(zbegin, zerov.end(), tz);\n                if (range.first != range.second) {\n                    auto to = z * z + onev[i];\n                    if (s[i] == '1') {\n                        --to;\n                    }\n\n                    auto onev_start =\n                        onev.begin() + i + std::distance(zbegin, range.first);\n                    auto onev_end =\n                        onev.begin() + i + std::distance(zbegin, range.second);\n\n                    auto upper = std::lower_bound(onev_start, onev_end, to);\n\n                    res += (int)std::distance(upper, onev_end);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722138865",
    "subm_id": "1335801678"
}