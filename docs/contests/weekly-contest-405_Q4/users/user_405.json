{
    "username": "JumHorn",
    "submission": "// Trie\nclass Trie\n{\n\tstruct TreeNode\n\t{\n\t\tint count; // number of words ends with this node\n\t\tint cost;  // cost with this node\n\t\tvector<TreeNode *> nodes;\n\n\t\tTreeNode() : count(0), cost(0), nodes(26, nullptr) {}\n\t};\n\npublic:\n\tTrie(vector<int> &dp) : dp(dp)\n\t{\n\t\troot = new TreeNode();\n\t}\n\n\t/** Inserts a word into the trie. */\n\tvoid insert(const string &word, int cost)\n\t{\n\t\tTreeNode *node = root;\n\t\tfor (auto c : word)\n\t\t{\n\t\t\tint index = c - 'a';\n\t\t\tif (node->nodes[index] == nullptr)\n\t\t\t\tnode->nodes[index] = new TreeNode();\n\t\t\tnode = node->nodes[index];\n\t\t}\n\t\t++node->count;\n\t\tif (node->cost == 0)\n\t\t\tnode->cost = cost;\n\t\telse\n\t\t\tnode->cost = min(node->cost, cost);\n\t}\n\n\t/** Returns if the word is in the trie. */\n\tbool search(const string &word, int index) const\n\t{\n\t\tTreeNode *node = searchNode(word, index);\n\t\treturn node != nullptr && node->count > 0;\n\t}\n\nprivate:\n\tTreeNode *root;\n\tvector<int> &dp;\n\n\tTreeNode *searchNode(const string &str, int ind) const\n\t{\n\t\tTreeNode *node = root;\n\t\tfor (int i = ind; i >= 0; --i)\n\t\t{\n\t\t\tint index = str[i] - 'a';\n\t\t\tif (node->nodes[index] == nullptr)\n\t\t\t\treturn nullptr;\n\t\t\tnode = node->nodes[index];\n\t\t\tif (node->count > 0 && dp[i] != -1)\n\t\t\t{\n\t\t\t\tif (dp[ind + 1] == -1)\n\t\t\t\t\tdp[ind + 1] = dp[i] + node->cost;\n\t\t\t\telse\n\t\t\t\t\tdp[ind + 1] = min(dp[ind + 1], dp[i] + node->cost);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n};\n/********end of Trie********/\n\nclass Solution\n{\npublic:\n\tint minimumCost(string target, vector<string> &words, vector<int> &costs)\n\t{\n\t\tvector<int> dp(target.size() + 1, -1);\n\t\tdp[0] = 0;\n\t\tTrie trie(dp);\n\t\tint N = words.size();\n\t\tfor (int i = 0; i < N; ++i)\n\t\t{\n\t\t\treverse(words[i].begin(), words[i].end());\n\t\t\ttrie.insert(words[i], costs[i]);\n\t\t}\n\t\tfor (int i = 0; i < target.size(); ++i)\n\t\t\ttrie.search(target, i);\n\t\treturn dp.back();\n\t}\n};",
    "submit_ts": "1720322346",
    "subm_id": "1312347451"
}