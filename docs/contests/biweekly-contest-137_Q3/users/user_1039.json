{
    "username": "lgqfhwy",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board[0].size();\n        vector<vector<int>> row(m), col(n);\n        for (int i = 0; i < m; ++i) {\n            vector<int> vt;\n            for (int j = 0; j < n; ++j) {\n                vt.push_back(j);;\n            }\n            sort(vt.begin(), vt.end(), [&](int a, int b) {\n                return board[i][a] > board[i][b];\n            });\n            row[i].push_back(vt[0]);\n            row[i].push_back(vt[1]);\n            row[i].push_back(vt[2]);\n        }\n        for (int i = 0; i < n; ++i) {\n            vector<int> vt;\n            for (int j = 0; j < m; ++j) {\n                vt.push_back(j);;\n            }\n            sort(vt.begin(), vt.end(), [&](int a, int b) {\n                return board[a][i] > board[b][i];\n            });\n            col[i].push_back(vt[0]);\n            col[i].push_back(vt[1]);\n            col[i].push_back(vt[2]);\n        }\n        ll all_ret = LONG_MIN;\n        for (int i = 0; i < m; ++i) {\n            // ll ret = board[i][row[i][0]];\n            for (int i0 = 0; i0 < 3; i0++) {\n                for (int j = 0; j < m; ++j) {\n                    if (j != i) {\n                        int curi = row[j][0];\n                        if (curi == row[i][i0]) {\n                            curi = row[j][1];\n                        }\n                        //ret += board[i][curi];\n                        for (int k = 0; k < n; ++k) {\n                            if (k == row[i][i0] || k == curi) {\n                                continue;\n                            }\n                            int curj = col[k][0];\n                            if (curj == i || curj == j) {\n                                curj = col[k][1];\n                            }\n                            if (curj == i || curj == j) {\n                                curj = col[k][2];\n                            }\n                            ll ret = (ll)board[i][row[i][i0]] + board[j][curi] + board[curj][k];\n                            //cout << \"i = \" << i << \", j = \" << j << \", curj = \" << curj << endl;\n                            //cout << \"row = \" << row[i][i0] << \", curi = \" << curi << \", k = \" << k << endl;\n                            //cout << \"ret = \" << ret << endl;\n                            all_ret = max(all_ret, ret);\n                        }\n                    }\n                }\n            }\n            // all_ret = max(all_ret, ret);\n        }\n        return all_ret;\n    }\n};",
    "submit_ts": "1723909159",
    "subm_id": "556334800"
}