{
    "username": "raiden3030",
    "submission": "class Solution {\npublic:\n    long long mod = 1000000007;\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        map<int, int> get;\n        for(auto &x : req) {\n            get[x[0] + 1] = x[1];\n        }\n        vector<vector<long long>> dp(n + 1, vector<long long> (501, 0));\n        dp[0][0] = 1;\n        for(int l = 1; l <= n; l++) {\n            for(int in = 0; in <= 500; in++) {\n                for(int ind = 0; ind < l; ind++) {\n                    int curr_pr_inv = in-ind;\n                    if (curr_pr_inv >= 0) {\n                        dp[l][in] = (dp[l][in] + dp[l - 1][curr_pr_inv]) % mod;\n                    }\n                }\n            }\n            \n            if (get.count(l)) {\n                  for (int in = 0; in <= 500; in++) {\n                    if (in != get[l]) {\n                        dp[l][in] = 0;\n                    }\n                }\n            }\n        }\n            int ans = 0;\n            for(auto &x : dp[n]) {\n                x %= mod;\n                ans += x;\n                ans %= mod;\n            }\n        return ans;\n    }\n};",
    "submit_ts": 1719071082.0
}