{
    "username": "wangYiTiaoYu",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        auto f = [] (auto& v, const auto& f) {\n            int t1 = abs(v.front()[0] - v.back()[0]) + abs(v.front()[1] - v.back()[1]);\n            sort(v.begin(), v.end(), f);\n            int t2 = abs(v.front()[0] - v.back()[0]) + abs(v.front()[1] - v.back()[1]);\n            return max(t1, t2);\n        };\n        auto f1 = [](const auto& a, const auto& b) {\n            return a[0] + a[1] < b[0] + b[1];\n        };\n        auto f2 = [](const auto& a, const auto& b) {\n            return a[0] - a[1] < b[0] - b[1];\n        };\n        sort(points.begin(), points.end(), f1);\n        vector<vector<int>> s1 (points.begin() + 1, points.end());\n        int a1 = f(s1, f2);\n        vector<vector<int>> s2 (points.begin(), points.end() - 1);\n        int a2 = f(s2, f2);\n        sort(points.begin(), points.end(), f2);\n        vector<vector<int>> s3 (points.begin() + 1, points.end());\n        int a3 = f(s3, f1);\n        vector<vector<int>> s4 (points.begin(), points.end() - 1);\n        int a4 = f(s4, f1);\n        return min({a1, a2, a3, a4});\n    }\n};"
}