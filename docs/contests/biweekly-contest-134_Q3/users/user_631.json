{
    "username": "_sriharshitha",
    "submission": "class Solution(object):\n    def numberOfAlternatingGroups(self, colors, k):\n        \"\"\"\n        :type colors: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        N = len(colors)\n        count = 0\n        \n        if k == 1:\n            # Every single tile is an alternating group by itself\n            return N\n        \n        alternating_length = 1\n        i = 1\n        while i < N + k - 1:\n            current = i\n            previous = i - 1\n            \n            # Handle circular indexing\n            if current >= N:\n                current -= N\n            if previous >= N:\n                previous -= N\n            \n            if colors[current] != colors[previous]:\n                alternating_length += 1\n            else:\n                alternating_length = 1\n            \n            # Check if we have a valid alternating group of length k\n            if alternating_length >= k:\n                count += 1\n            \n            i += 1\n        \n        return count",
    "submit_ts": "1720279772",
    "subm_id": "1311764481"
}