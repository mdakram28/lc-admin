{
    "username": "Noctambulant",
    "submission": "class Solution {\npublic:\n    \n    vector<int>segtree;\n    \n    int query(int si,int ss,int se,int l,int r){\n        if(ss>=l && se<=r)return segtree[si];\n        \n        if(ss>r || se<l)return 0;\n        int mid=(ss+se)/2;\n        int lft=query(2*si,ss,mid,l,r);\n        int rgt=query(2*si+1,mid+1,se,l,r);\n        return lft+rgt;\n    }\n    \n    void update(int si,int ss,int se,int id,int val){\n        if(ss==se){\n            segtree[si]=val;\n            return;\n        }\n        \n        int mid=(ss+se)/2;\n        if(id<=mid)update(2*si,ss,mid,id,val);\n        else update(2*si+1,mid+1,se,id,val);\n        \n        segtree[si]=segtree[2*si]+segtree[2*si+1];\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        segtree.clear();\n        int len=nums.size();\n        segtree.resize(4*len);\n        // for(int i=0;i<4*len;i++)segtree[i].resize(len);\n        \n        for(int i=1;i<len-1;i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1])update(1,0,len-1,i,1);\n        }\n        \n        vector<int>res;\n        for(int i=0;i<queries.size();i++){\n            if(queries[i][0]==1){\n                if(queries[i][2]-queries[i][1]>=2){\n                    res.push_back(query(1,0,len-1,queries[i][1]+1,queries[i][2]-1));\n                }\n                else res.push_back(0);\n            }\n            else{\n                nums[queries[i][1]]=queries[i][2];\n                int id=queries[i][1];\n                if(id>0 && id<len-1){\n                    if(nums[id]>nums[id-1] && nums[id]>nums[id+1])update(1,0,len-1,id,1);\n                    else update(1,0,len-1,id,0);\n                }\n                \n                id--;\n                \n                if(id>0 && id<len-1){\n                    if(nums[id]>nums[id-1] && nums[id]>nums[id+1])update(1,0,len-1,id,1);\n                    else update(1,0,len-1,id,0);\n                }\n                \n                id+=2;\n                \n                if(id>0 && id<len-1){\n                    if(nums[id]>nums[id-1] && nums[id]>nums[id+1])update(1,0,len-1,id,1);\n                    else update(1,0,len-1,id,0);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718508060.0
}