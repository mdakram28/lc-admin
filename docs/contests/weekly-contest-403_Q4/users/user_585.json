{
    "username": "chinkykarda",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n=grid.size();;\n        int m=grid[0].size();\n        int ans=INT_MAX;\n        \n        //cloumns\n        for(int c1=0;c1<m;c1++){\n             // cloumn partition\n            for(int c2=c1+1;c2<m;c2++){\n                int area=findArea(0,n-1,0,c1,grid) + findArea(0,n-1,c1+1,c2,grid) + findArea(0,n-1,c2+1,m-1,grid);\n                ans=min(area, ans);\n            }\n            \n            // row partition\n            for(int r=0;r<n;r++){\n                int area = findArea(0,n-1,0,c1,grid) + findArea(0,r,c1+1,m-1,grid) + findArea(r+1,n-1, c1+1,m-1,grid);\n                ans=min(area, ans);\n                area = findArea(0,n-1,c1+1,m-1,grid) + findArea(0,r,0,c1,grid) + findArea(r+1,n-1,0,c1,grid);\n                ans=min(area, ans);\n            }\n        }\n        //rows\n        for(int r1=0;r1<n;r1++){\n            //row partition\n            for(int r2=r1+1;r2<n;r2++){\n                int area = findArea(0,r1,0,m-1,grid) + findArea(r1+1,r2,0,m-1,grid) + findArea(r2+1,n-1,0,m-1,grid);\n                ans=min(area,ans);\n            }\n            \n            //column partiton\n            for(int c=0;c<m;c++){\n                int area = findArea(0,r1,0,m-1,grid) + findArea(r1+1,n-1,0,c,grid) + findArea(r1+1,n-1,c+1, m-1,grid);\n                ans=min(area,ans);\n                area = findArea(r1+1,n-1,0,m-1,grid) + findArea(0,r1,0,c,grid) + findArea(0,r1,c+1,m-1,grid);\n                ans=min(area, ans);\n            }\n        }\n        return ans;\n        \n    }\n    int findArea(int t, int b, int l, int r, vector<vector<int>> &grid){\n        int top=-1, bottom=-1, left=-1, right=-1;\n        for(int i=t;i<=b;i++){\n            for(int j=l;j<=r;j++){\n                if(top==-1 && grid[i][j]==1){\n                    top=i;\n                }\n                if(grid[i][j]==1){\n                    bottom=i;\n                }\n            }\n        }\n        for(int j=l;j<=r;j++){\n            for(int i=t;i<=b;i++){\n                if(left==-1 && grid[i][j]==1){\n                    left=j;\n                }\n                if(grid[i][j]==1){\n                    right=j;\n                }\n            }\n        }\n        \n        return (right-left+1)*(bottom-top+1);\n    }\n};",
    "submit_ts": 1719115049.0
}