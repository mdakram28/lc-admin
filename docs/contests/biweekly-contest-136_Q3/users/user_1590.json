{
    "username": "rajkaustuk",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        \n        ans = 0\n        \n        # Traverse through 2x2 sub-grids\n        for i in range(n // 2):\n            for j in range(m // 2):\n                elements = [\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                ]\n                \n                ones = sum(elements)\n                ans += min(ones, 4 - ones)\n        \n        possible = 0\n        count = 0\n        \n        # Handle the middle row if n is odd\n        if n % 2 != 0:\n            middle_row = n // 2\n            for j in range(m // 2):\n                if grid[middle_row][j] != grid[middle_row][m - j - 1]:\n                    ans += 1\n                    possible += 1\n                else:\n                    if grid[middle_row][j] == 1:\n                        count += 1\n        \n        # Handle the middle column if m is odd\n        if m % 2 != 0:\n            middle_col = m // 2\n            for i in range(n // 2):\n                if grid[i][middle_col] != grid[n - i - 1][middle_col]:\n                    ans += 1\n                    possible += 1\n                else:\n                    if grid[i][middle_col] == 1:\n                        count += 1\n        \n        # Handle the central element if both n and m are odd\n        if n % 2 != 0 and m % 2 != 0:\n            if grid[n // 2][m // 2] == 1:\n                ans += 1\n        \n        if possible == 0 and count % 2 != 0:\n            ans += 2\n        \n        return ans\n",
    "submit_ts": "1722699480",
    "subm_id": "1343212949"
}