{
    "username": "samarth_717",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\nprivate:\n    static const int a1 = 1'000'000'007;\n    static const int MAX_INVERSIONS = 400,b1=400;\n\npublic:\n//     int solve(int n,int k) {\n//     ordered_set<int> os; \n//         int ans=0;\n//     for(auto it: v){\n//         os.insert(it);\n//         int z = os.order_of_key(it);\n//         ans+=z;\n//         // cout << os.size()-z-1 << \" \";\n//     }\n//     return ans;\n// }\n    int numberOfPermutations(int n, vector<vector<int>>& d) {\n        unordered_map<int, int> e;\n        for (auto& f : d) {\n            e[f[0] + 1] = f[1];\n        }\n\n        vector<vector<long long>> g(n + 1, vector<long long>(b1 + 1, 0));\n        g[0][0] = 1;\n\n        for (int h = 1; h <= n; h++) {\n            for (int i = 0; i <= b1; i++) {\n                for (int j = 0; j < h; j++) {\n                    int k = i - j;\n                    if (k >= 0) {\n                        g[h][i] = (g[h][i] + g[h - 1][k]) % a1;\n                    }\n                }\n            }\n\n            if (e.count(h) > 0) {\n                int l = e[h];\n                for (int i = 0; i <= b1; i++) {\n                    if (i != l) {\n                        g[h][i] = 0;\n                    }\n                }\n            }\n        }\n\n        long long m = 0;\n        for (long long n : g[n]) {\n            m = (m + n) % a1;\n        }\n\n        return static_cast<int>(m);\n    }\n};\n",
    "submit_ts": 1719070699.0
}