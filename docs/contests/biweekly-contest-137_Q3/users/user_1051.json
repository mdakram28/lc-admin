{
    "username": "\u8fd9\u6211\u73a9\u96c6\u8d38\u554a",
    "submission": "\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();       // \u884c\u6570\n        int n = board[0].size();    // \u5217\u6570\n\n        long long maxSum = LLONG_MIN;       // \u6700\u5927\u503c\u521d\u59cb\u5316\u4e3a\u6700\u5c0f\u503c\n        vector<vector<pair<int, int>>> three(m, vector<pair<int, int>>(3));   //\u6bcf\u884c\u524d\u4e09\u4e2a\u503c\n        for(int i = 0; i < m; i++)\n        {\n            priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;  //\u5c0f\u5806\n            for(int j = 0; j < n; j++)\n            {\n                pq.push({board[i][j], j});\n                if(pq.size() > 3)  pq.pop();\n            }\n            //\u5230\u8fd9\u91cc\u5806\u5927\u5c0f\u4e00\u5b9a\u662f\u4e09\n            int k = 2;\n            while(!pq.empty())\n            {\n                three[i][k--] = pq.top();  pq.pop();\n            }\n        }\n        // \u679a\u4e3e\u4e09\u884c\n        for (int r1 = 0; r1 < m; ++r1) \n        {\n            for (int r2 = 0; r2 < m; ++r2) \n            {\n                if(r2 == r1)  continue;\n                for (int r3 = 0; r3 < m; ++r3) \n                {\n                    if(r3 == r2 || r3 == r1)  continue;\n                    //\u679a\u4e3e\u4e09\u4e2a\u6700\u5927\u503c\u548c\uff0c\u627e\u4e00\u4e2a\u6700\u5927\u7684\n                    for(int i = 0; i < 3; i++)\n                    {\n                        for(int j = 0; j < 3; j++)\n                        {\n                            for(int k = 0; k < 3; k++)\n                            {\n                                int c1 = three[r1][i].second, c2 = three[r2][j].second, c3 = three[r3][k].second;\n                                if(c1 == c2 || c1 == c3 || c2 == c3)\n                                {\n                                    continue;\n                                }\n                                maxSum = max(maxSum, (long long)three[r1][i].first + three[r2][j].first + three[r3][k].first);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723909822",
    "subm_id": "556338114"
}