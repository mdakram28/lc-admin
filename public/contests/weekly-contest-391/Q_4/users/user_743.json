{
    "username": "plyusnovdmitrii",
    "submission": "class Solution {\npublic:\n    vector<int> sum, diff;\n\n    pair<pair<int, int>, int> indexesMax(int banned) {\n        int maxSum = -1e9, maxSumIdx = -1, minSum = 1e9, minSumIdx = -1;\n        int maxDiff = -1e9, maxDiffIdx = -1, minDiff = 1e9, minDiffIdx = -1;\n        int sz = sum.size();\n\n        for (int i = 0; i < sz; ++i) {\n            if (i != banned) {\n                if (sum[i] > maxSum) maxSum = sum[i], maxSumIdx = i;\n                if (sum[i] < minSum) minSum = sum[i], minSumIdx = i;\n\n                if (diff[i] > maxDiff) maxDiff = diff[i], maxDiffIdx = i;\n                if (diff[i] < minDiff) minDiff = diff[i], minDiffIdx = i;\n            }\n        }\n\n        int sumDist = abs(maxSum - minSum), diffDist = abs(maxDiff - minDiff);\n        if (sumDist > diffDist) return {{maxSumIdx, minSumIdx}, abs(maxSum - minSum)};\n        return {{maxDiffIdx, minDiffIdx}, abs(maxDiff - minDiff)};\n    }\n\n    int minimumDistance(vector<vector<int>>& points) {\n        int sz = points.size();\n        sum.resize(sz), diff.resize(sz);\n\n\n        for (int i = 0; i < sz; ++i) {\n            sum[i] = points[i][0] + points[i][1];\n            diff[i] = points[i][0] - points[i][1];\n        }\n\n        pair<pair<int, int>, int> candidates = indexesMax(-1);\n        int cand0 = candidates.first.first; int cand1 = candidates.first.second;\n\n        pair<pair<int, int>, int> wo0 = indexesMax(cand0);\n        pair<pair<int, int>, int> wo1 = indexesMax(cand1);\n        int distwo0 = wo0.second, distwo1 = wo1.second;\n        return min(distwo0, distwo1);\n    }\n};"
}