{
    "username": "aswin_m",
    "submission": "class Solution:\n    def numberOfPermutations(self, num_items, constraints):\n        MOD_VALUE = 1000000007\n        MAX_INV = 400\n\n        constraints_map = {con[0] + 1: con[1] for con in constraints}\n\n        permutation_counts = [[0] * (MAX_INV + 1) for _ in range(num_items + 1)]\n        permutation_counts[0][0] = 1\n\n        for length in range(1, num_items + 1):\n            for inv_count in range(MAX_INV + 1):\n                for pos in range(length):\n                    prev_inv_count = inv_count - pos\n                    if prev_inv_count >= 0:\n                        permutation_counts[length][inv_count] = (permutation_counts[length][inv_count] + permutation_counts[length - 1][prev_inv_count]) % MOD_VALUE\n\n            if length in constraints_map:\n                target_inv_count = constraints_map[length]\n                for inv_count in range(MAX_INV + 1):\n                    if inv_count != target_inv_count:\n                        permutation_counts[length][inv_count] = 0\n\n        result_sum = sum(permutation_counts[num_items]) % MOD_VALUE\n        return result_sum\n\n",
    "submit_ts": 1719070719.0
}