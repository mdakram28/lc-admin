{
    "username": "yzisyz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<array<int, 2>> cut;\n        \n        for (size_t i = 0; i < horizontalCut.size(); i++) {\n            cut.emplace_back(array<int, 2>({horizontalCut[i], 0}));\n        }\n        for (size_t i = 0; i < verticalCut.size(); i++) {\n            cut.emplace_back(array<int, 2>({verticalCut[i], 1}));\n        }\n        \n        sort(cut.begin(), cut.end(), greater<>());\n        long long h = 1;\n        long long v = 1;\n        long long ans = 0;\n        \n        for (auto& i : cut) {\n            if (i.back()) {\n                v++;\n                ans += h * i.front();\n            } else {\n                h++;\n                ans += v * i.front();\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925805",
    "subm_id": "546442062"
}