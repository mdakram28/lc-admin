{
    "username": "hanbro0112",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        \n        # cost mi operation to close 2 ones\n        mi = inf\n        \n        res = ones = 0\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == -1:\n                    continue\n                a = (i, j)\n                b = (i, n - 1 - j)\n                c = (m - 1 - i ,j)\n                d = (m - 1 - i, n - 1 - j)\n                \n                if a == b == c == d:\n                    if grid[i][j]:\n                        res += 1\n                elif a == b and c == d:    \n                    s = grid[i][j] + grid[m - 1 - i][j]\n                    if s == 1:\n                        ones += 2\n                        res += 1\n                        mi = 0\n                    elif s == 2:\n                        ones += 2\n                        mi = min(mi, 2)\n                        \n                elif a == c and b == d:\n                    s = grid[i][j] + grid[i][n - 1 - j]\n                    if s == 1:\n                        ones += 2\n                        res += 1\n                        mi = 0\n                    elif s == 2:\n                        ones += 2\n                        mi = min(mi, 2)\n                else:\n                    s = 0\n                    for x, y in [a, b, c, d]:\n                        s += grid[x][y]\n                    res += min(4 - s, s)\n                        \n                for x, y in [a, b, c, d]:\n                    grid[x][y] = -1\n        \n        return res if ones % 4 == 0 else res + mi\n            \n                    \n                            \n                    ",
    "submit_ts": "1722698014",
    "subm_id": "1343166771"
}