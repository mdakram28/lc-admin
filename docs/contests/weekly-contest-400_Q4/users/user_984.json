{
    "username": "kasinathansj",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int pp1[] = new int[32];\n        int pp2[] = new int[32];\n        int p1 = 0;\n        int p2 = 0;\n        int ans = (int)1e9;\n        if(nums.length==1)return Math.abs(k-nums[0]);\n        for(int i = 0 ; i < nums.length ; i++){\n            for(int b = 0 ; b < 32 ; b++){\n                if((nums[i]&(1<<b))!=0){\n                    pp1[b]++;\n                    pp2[b]++;\n                }\n            }\n            while(i>=p1&&no1(pp1,i-p1+1)<=k){\n                for(int b = 0 ; b < 32 ; b++)\n                    if((nums[p1]&(1<<b))!=0){\n                    pp1[b]--;\n                }\n                p1++;\n                        \n            }\n            while(i>p2&&no0(pp2,nums[p2],i-p2)<=k){\n                for(int b = 0 ; b < 32 ; b++)\n                    if((nums[p2]&(1<<b))!=0){\n                    pp2[b]--;\n                }\n                p2++;\n            }\n            // System.out.println(no1(pp1,i-p1+1)+\" \"+no1(pp2,i-p2+1));\n            ans = Math.min(ans ,Math.abs(k-no1(pp1,i-p1+1)));\n            ans = Math.min(ans ,Math.abs(k-no1(pp2,i-p2+1)));\n        }\n        return ans;\n    }\n    private int no0(int bits[] , int num , int diff){\n        int ans = 0;\n        for(int i = 0 ; i < 32 ; i++){\n            int noof = bits[i];\n            if((num&(1<<i))!=0)noof--;\n            if(diff == noof)ans += 1<<i;\n        }\n        return ans;\n    }\n    private int no1(int bits[]  , int diff){\n        int ans = 0;\n        for(int i = 0 ; i < 32 ; i++){\n            int noof = bits[i];\n            if(diff == noof)ans += 1<<i;\n        }\n        return ans;\n    }\n}",
    "submit_ts": 1717300197.0
}