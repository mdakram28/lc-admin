{
    "username": "brian386",
    "submission": "class Solution {\npublic:\n    set<pair<int,int>> edges;\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int cur = n-1;\n        cout << cur << endl;\n        for(vector<int>& query : queries){\n            pair<int,int> q = {query[0], query[1]}; \n            auto it = edges.upper_bound({q.first, -q.second});\n            cout << \"size: \" << edges.size() << endl;\n            if(it != edges.begin() && -(*--it).second >= q.second){\n                cout << q.first << \" \" << q.second << endl;\n                // do nothing?\n            } else {\n                it = edges.upper_bound({q.first, -q.second});\n                // auto tmp1 = it;\n                // if(tmp1!=edges.begin()){\n                //     tmp1--;\n                //     if((*tmp1).first == q.first){\n                //         it--;\n                //     }\n                // }\n                cout << q.first << \" \" << q.second << endl;\n\n                while(it != edges.end()){\n                    cout << \"it: \" << (*it).first << \" \" << (*it).second <<endl;\n                    if(-(*it).second <= q.second){\n                        cur += (-(*it).second - (*it).first - 1);\n                        cout << cur << endl;\n                        auto tmp_it = it;\n                        it++;\n                        edges.erase(tmp_it);\n                    } else {\n                        break;\n                    }\n                }\n                cur -= (q.second - q.first - 1);\n                edges.insert({q.first, -q.second});\n            }\n            ans.push_back(cur);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741927",
    "subm_id": "1343756804"
}