{
    "username": "spravinkumar9952",
    "submission": "class Solution {\npublic:\n    \n    int comp(vector<int> &arr, vector<int> &prev, int len, vector<int>& tar){\n        for(int i=0; i<32; i++){\n            if(tar[i] && arr[i]-prev[i] < len){\n                return -1;\n            }else if(tar[i] == 0 && arr[i]-prev[i] == len){\n                return 1;\n            }\n        }\n        return 0;\n    }\n    \n    int g1(vector<vector<int>>&arr, vector<int> &tar, int ind){\n        int l = ind, h = arr.size()-1, ans = -1;\n        \n        vector<int> prev = ind == 0 ? vector<int>(32, 0) : arr[ind-1];\n        \n        \n        \n        while(l <= h){\n            int mid = l + (h-l)/2;\n            int len = mid - ind +1;\n            \n            int ret = comp(arr[mid], prev, len, tar);\n            \n            \n            \n            \n            if(ret == -1){\n                h = mid-1;\n            }else if(ret == 1){\n                l = mid+1;\n            }else{\n                ans = mid;\n                h = mid-1;\n            }\n        }\n        \n        return ans;\n    }\n    \n    int g2(vector<vector<int>>&arr, vector<int> &tar, int ind){\n        int l = ind, h = arr.size()-1, ans = -1;\n        \n        vector<int> prev = ind == 0 ? vector<int>(32, 0) : arr[ind-1];\n        \n        while(l <= h){\n            int mid = l + (h-l)/2;\n            int len = mid - ind +1;\n            \n            int ret = comp(arr[mid], prev, len, tar);\n            \n            // if(ind == 1){\n            //     cout << l << \" \" << h << \" \" << ret << \" \" << mid << endl;\n            // }\n            \n            \n            if(ret == -1){\n                h = mid-1;\n            }else if(ret == 1){\n                l = mid+1;\n            }else{\n                ans = mid;\n                l = mid+1;\n            }\n        }\n        \n        return ans;\n    }\n\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int N = nums.size();\n        vector<vector<int>> arr(N, vector<int>(32, 0));\n        vector<int>tar(32, 0);\n        \n        \n        for(int i = 0; i<N; i++){\n            for(int j = 0; j<32; j++){\n                if(nums[i] & (1 << j)){\n                    arr[i][j] = i == 0 ? 1 : arr[i-1][j] + 1;\n                }else{\n                    arr[i][j] = i==0 ? 0 : arr[i-1][j];\n                }\n            }\n        }\n        \n        for(int i = 0; i<32; i++){\n            tar[i] = k & (1 << i) ? 1 : 0;\n        }\n        \n//          for(int j = 0; j<32; j++){\n//         for(int i = 0; i<N; i++){\n           \n//                 cout << arr[i][j] << \" \";\n//             }\n            \n//             cout << endl;\n//         }\n        \n        long long ans = 0;\n        for(int i = 0; i<N; i++){\n            int lowEnd = g1(arr, tar, i);\n            int highEnd = g2(arr, tar, i);\n           \n            \n            // cout << i << \" \" << lowEnd << \" \" << highEnd << endl;\n            \n            if(highEnd != -1 && lowEnd != -1){\n                ans += highEnd - lowEnd + 1;\n            }\n        }\n        \n        return ans;\n    }\n};\n\n/*\n 10\n 11\n \n 10\n*/",
    "submit_ts": "1720280506",
    "subm_id": "1311791911"
}