{
    "username": "vj99_",
    "submission": "public class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int N = colors.length;\n        int count = 0;\n\n        if (k == 1) {\n            // Every single tile is an alternating group by itself\n            return N;\n        }\n\n        int alternatingLength = 1;\n        int i = 1;\n\n        while (i < N + k - 1) {\n            int current = i;\n            int previous = i - 1;\n\n            // Handle circular indexing\n            if (current >= N) {\n                current -= N;\n            }\n            if (previous >= N) {\n                previous -= N;\n            }\n\n            if (colors[current] != colors[previous]) {\n                alternatingLength++;\n            } else {\n                alternatingLength = 1;\n            }\n\n            // Check if we have a valid alternating group of length k\n            if (alternatingLength >= k) {\n                count++;\n            }\n\n            i++;\n        }\n\n        return count;\n    }\n}",
    "submit_ts": "1720279736",
    "subm_id": "1311763101"
}