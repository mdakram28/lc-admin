{
    "username": "screenager",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hc, vector<int>& vc) {\n        sort(hc.begin(), hc.end(), greater<int>());\n        sort(vc.begin(), vc.end(), greater<int>());\n\n        priority_queue<int> phc(hc.begin(), hc.end());\n        priority_queue<int> pvc(vc.begin(), vc.end());\n\n        int hP = 1, vP = 1;\n        long long ans = 0;\n\n        while (!phc.empty() || !pvc.empty()) {\n            if (!phc.empty() && (pvc.empty() || phc.top() >= pvc.top())) {\n                ans += (long long)phc.top() * vP;\n                phc.pop();\n                hP++;\n            } else {\n                ans += (long long)pvc.top() * hP;\n                pvc.pop();\n                vP++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925342",
    "subm_id": "1320251473"
}