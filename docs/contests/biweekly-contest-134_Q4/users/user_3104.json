{
    "username": "Vinod_Kumar_Maurya",
    "submission": "class Solution {\npublic:\n       int numberOfAlternatingGroups(vector<int>& hues) {\n        int totalTiles = hues.size();\n        int alternatingTiles = 0;\n        for (int tileIndex = 0; tileIndex < totalTiles; tileIndex++) {\n            if (hues[tileIndex] != hues[(tileIndex+1)%totalTiles] && hues[tileIndex] != hues[(tileIndex-1+totalTiles)%totalTiles]) {\n                alternatingTiles++;\n            }\n        }\n        return alternatingTiles;\n    \n    }\n    long long countSubarrays(vector<int>& array, int target) {\n        int size = array.size();\n        long long total = 0;\n        unordered_map<long long, long long> previousResults;\n        for (int index = 0; index < size; ++index) {\n            unordered_map<long long, long long> currentResults; \n            if (array[index] == target) {\n                ++total;\n            }\n            currentResults[array[index]] = 1;\n            for (auto& [value, frequency] : previousResults) {\n                long long newAndResult = value & array[index];\n                if (newAndResult == target) {\n                    total += frequency;\n                }\n                currentResults[newAndResult] += frequency;\n            }\n            \n            previousResults = currentResults;\n        }\n        return total;\n    }\n};",
    "submit_ts": "1720278844",
    "subm_id": "1311726695"
}