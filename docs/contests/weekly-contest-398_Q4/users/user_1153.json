{
    "username": "Vegetablebirds",
    "submission": "class Solution {\n    int k;\n    Map<String, Integer> memo = new HashMap<>();\n    public int waysToReachStair(int k) {\n        this.k = k;\n        return dfs(1, 0, 0);\n    }\n    private int dfs(long v, int step, int use) {\n        String key = v + \":\" + step + \":\" + use;\n        if (memo.containsKey(key)) {\n            return memo.get(key);\n        }\n        if (v > k + 1) {\n            return 0;\n        }\n        int ans = v == k ? 1 : 0;\n        if (v > 0 && use == 0) {\n            ans += dfs(v - 1, step, 1);\n        }\n        ans += dfs(v + (1L << step), step + 1, 0);\n        memo.put(key, ans);\n        return ans;\n    }\n}",
    "submit_ts": 1716088871.0
}