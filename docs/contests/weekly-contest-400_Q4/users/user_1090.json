{
    "username": "20240624.codewithabhi21",
    "submission": "class Solution {\npublic:\n    \n    int minimumDifference(vector<int>& nums, int k) {\n       std::vector<int> zeros(32, 0);\n        std::function<void(int)> minus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] -= 1;\n                }\n            }\n        };\n        std::function<void(int)> plus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] += 1;\n                }\n            }\n        };\n        std::function<int()> eval = [&]() {\n            int res = 0;\n            for (int i = 0; i < 32; ++i) {\n                if (zeros[i] == 0) {\n                    res ^= (1 << i);\n                }\n            }\n            return res;\n        };\n        int i = 0, n = nums.size();\n        int ans = std::numeric_limits<int>::max();\n        for (int j = 0; j < n; ++j) {\n            plus(nums[j]);\n            int x = eval();\n            ans = std::min(ans, std::abs(x - k));\n            while (i < j && x < k) {\n                minus(nums[i]);\n                ++i;\n                x = eval();\n                ans = std::min(ans, std::abs(x - k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717300481.0
}