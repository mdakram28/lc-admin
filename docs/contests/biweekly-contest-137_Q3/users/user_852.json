{
    "username": "Rahul Ahuja",
    "submission": "class Solution\n{\n    public long maximumValueSum(int[][] board)\n    {\n        int n = board.length, m = board[0].length;\n        int[][] max3Index = new int[n][3];\n        for (int row=0;row<n;row++)\n        {\n            PriorityQueue<Pair> maxAtTop = new PriorityQueue<Pair>();\n            for (int col=0;col<m;col++)\n            {\n                maxAtTop.add(new Pair(col, board[row][col]));\n            }\n            max3Index[row][0] = maxAtTop.poll().index;\n            max3Index[row][1] = maxAtTop.poll().index;\n            max3Index[row][2] = maxAtTop.poll().index;\n        }\n        long maxSum = (long)-1e17;\n        for (int row1=0;row1<n;row1++)\n        {\n            for (int row2=0;row2<n;row2++)\n            {\n                if (row1 == row2)\n                {\n                    continue;\n                }\n                for (int row3=0;row3<n;row3++)\n                {\n                    if (row1 == row3 || row2 == row3)\n                    {\n                        continue;\n                    }\n                    for (int i=0;i<3;i++)\n                    {\n                        for (int j=0;j<3;j++)\n                        {\n                            for (int k=0;k<3;k++)\n                            {\n                                if (max3Index[row1][i] != max3Index[row2][j] && max3Index[row2][j] != max3Index[row3][k] && max3Index[row3][k] != max3Index[row1][i])\n                                {\n                                    long currSum = (long)board[row1][max3Index[row1][i]] + (long)board[row2][max3Index[row2][j]] + (long)board[row3][max3Index[row3][k]];\n                                    maxSum = Math.max(maxSum, currSum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n}\nclass Pair implements Comparable<Pair>\n{\n    int index;\n    long value;\n    public Pair(int index, long value)\n    {\n        this.index = index;\n        this.value = value;\n    }\n    public int compareTo(Pair p)\n    {\n        long diff = this.value - p.value;\n        if (diff > 0)\n        {\n            return -1;\n        }\n        else if (diff < 0)\n        {\n            return 1;\n        }\n        else\n        {\n            return 0;\n        }\n    }\n}",
    "submit_ts": "1723909593",
    "subm_id": "1359198433"
}