{
    "username": "vijay270619",
    "submission": "class Solution {\npublic:\n    \n    \n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        priority_queue<pair<long long, int>> r, c;\n        for(int i=0; i<m-1; i++)\n        {\n            r.push({h[i], i});\n        }\n        for(int i=0; i<n-1; i++)\n        {\n            c.push({v[i], i});\n        }\n        long long ans= 0;\n        int rp= 1, cp= 1;\n        while(rp < m || cp < n)\n        {\n            if(c.size() == 0)\n            {\n                ans += cp*r.top().first;\n                r.pop();\n                rp++;\n            }\n            else if(r.size() == 0)\n            {\n                ans += rp*c.top().first;\n                c.pop();\n                cp++;\n            }\n            else if(r.top().first < c.top().first)\n            {\n                // cout<<\"cjwf\";\n                ans += rp*c.top().first;\n                c.pop();\n                cp++;\n            }\n            else\n            {\n                ans += cp*r.top().first;\n                r.pop();\n                rp++;\n            }\n            // cout<<rp<<\" \"<<cp<<\" \"<<ans<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926617",
    "subm_id": "1320291430"
}