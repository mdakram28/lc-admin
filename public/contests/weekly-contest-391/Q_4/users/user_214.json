{
    "username": "rudrakshjadhav",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n         int minsum, maxsum, mindiff, maxdiff;\n        int a = 0, j =0, k = 0, l = 0;\n        minsum = maxsum = p[0][0] + p[0][1];\n        mindiff = maxdiff = p[0][0] - p[0][1];\n        //a = minsum     j = maxsum      mindiff = k    maxdiff = l\n        int N = p.size();\n        for (int i = 1; i < N; i++) {\n            int sum =  p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum){\n                \n                minsum = sum;\n                a = i;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;\n            j = i;}\n            if (diff < mindiff){\n                mindiff = diff;k=i;}\n            else if (diff > maxdiff){\n                maxdiff = diff;l=i;}\n        }\n\n        int maximum = max(maxsum - minsum, maxdiff - mindiff);\n        if(maxsum - minsum > maxdiff - mindiff)\n        {\n            int chk = a == 0 ? 1 : 0;\n            minsum = maxsum = p[chk][0] + p[chk][1];\n            mindiff = maxdiff = p[chk][0] - p[chk][1];\n        for (int i = 1; i < N; i++) {\n            if(i == a)continue;\n            int sum =  p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum){\n                \n                minsum = sum;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;}\n            if (diff < mindiff){\n                mindiff = diff;}\n            else if (diff > maxdiff){\n                maxdiff = diff;}\n        }\n            int d1 = max(maxsum - minsum, maxdiff - mindiff);\n            chk = j == 0 ? 1 : 0;\n            minsum = maxsum = p[chk][0] + p[chk][1];\n            mindiff = maxdiff = p[chk][0] - p[chk][1];\n        for (int i = 1; i < N; i++) {\n            if(i == j)continue;\n            int sum =  p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum){\n                \n                minsum = sum;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;}\n            if (diff < mindiff){\n                mindiff = diff;}\n            else if (diff > maxdiff){\n                maxdiff = diff;}\n        }\n            int d2 = max(maxsum - minsum, maxdiff - mindiff);\n            return min(d1, d2);\n        }else{\n            int chk = k == 0 ? 1 : 0;\n            minsum = maxsum = p[chk][0] + p[chk][1];\n            mindiff = maxdiff = p[chk][0] - p[chk][1];\n        for (int i = 1; i < N; i++) {\n            if(i == k)continue;\n            int sum =  p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum){\n                \n                minsum = sum;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;}\n            if (diff < mindiff){\n                mindiff = diff;}\n            else if (diff > maxdiff){\n                maxdiff = diff;}\n        }\n            int d1 = max(maxsum - minsum, maxdiff - mindiff);\n            chk = l == 0 ? 1 : 0;\n            minsum = maxsum = p[chk][0] + p[chk][1];\n            mindiff = maxdiff = p[chk][0] - p[chk][1];\n        for (int i = 1; i < N; i++) {\n            if(i == l)continue;\n            int sum =  p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum){\n                \n                minsum = sum;\n            }\n            else if (sum > maxsum){\n                maxsum = sum;}\n            if (diff < mindiff){\n                mindiff = diff;}\n            else if (diff > maxdiff){\n                maxdiff = diff;}\n        }\n            int d2 = max(maxsum - minsum, maxdiff - mindiff);\n            return min(d1, d2);\n        }\n        return -1;\n    }\n};"
}