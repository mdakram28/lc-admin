{
    "username": "rui_er",
    "submission": "// #define DEBUG\nclass BIT {\npublic:\n    int n, t[50005];\n    void init(int x) {\n        n = x;\n        for(int i = 0; i <= x; ++i) {\n            t[i] = 0;\n        }\n    }\n    int lowbit(int x) {\n        return x & -x;\n    }\n    void add(int x, int k) {\n        for(; x <= n; x += lowbit(x)) {\n            t[x] += k;\n        }\n    }\n    int ask(int x) {\n        int k = 0;\n        for(; x; x ^= lowbit(x)) {\n            k += t[x];\n        }\n        return k;\n    }\n    int ask(int l, int r) {\n        return ask(r) - ask(l - 1);\n    }\n}cnt, sum;\nclass Solution {\npublic:\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        int n = colors.size(), m = queries.size();\n        auto inc = [&](int x) {return (x + 1) % n;};\n        auto dec = [&](int x) {return (x - 1 + n) % n;};\n        auto dis = [&](int l, int r) {\n            if(l <= r) return r - l + 1;\n            return r + n - l + 1;\n        };\n        vector<int> ans;\n        cnt.init(n);\n        sum.init(n);\n        set<tuple<int, int>> S;\n        bool ok = true;\n        for(int i = 0; i < n; ++i) ok &= colors[i] != colors[inc(i)];\n        if(ok) {\n            S.emplace(0, n - 1);\n            cnt.add(n, 1);\n            sum.add(n, n);\n        }\n        else {\n            int l = 0, r = 0;\n            while(colors[l] != colors[dec(l)]) l = dec(l);\n            while(colors[r] != colors[inc(r)]) r = inc(r);\n            S.emplace(l, r);\n            cnt.add(dis(l, r), 1);\n            sum.add(dis(l, r), dis(l, r));\n            int p = inc(r), q;\n            while(p != l) {\n                q = p;\n                while(colors[q] != colors[inc(q)]) q = inc(q);\n                S.emplace(p, q);\n                cnt.add(dis(p, q), 1);\n                sum.add(dis(p, q), dis(p, q));\n                p = inc(q);\n            }\n        }\n        for(int i = 0; i < m; ++i) {\n            #ifdef DEBUG\n            for(auto [l, r] : S) cout << \"? \" << l << \" \" << r << endl;\n            cout << endl;\n            #endif\n            int op = queries[i][0];\n            if(op == 1) {\n                if(S.size() == 1 && !(n & 1)) {\n                    ans.push_back(n);\n                }\n                else {\n                    int sz = queries[i][1];\n                    #ifdef DEBUG\n                    cout << \"! \" << sum.ask(sz, n) << \" \" << cnt.ask(sz, n) << endl;\n                    #endif\n                    ans.push_back(sum.ask(sz, n) - cnt.ask(sz, n) * (sz - 1));\n                }\n            }\n            else {\n                int id = queries[i][1], col = queries[i][2];\n                if(colors[id] == col) continue;\n                colors[id] = col;\n                auto it = S.upper_bound({id, n});\n                auto bel = it == S.begin() ? prev(S.end()) : prev(it);\n                auto [l, r] = *bel;\n                auto pre = bel == S.begin() ? prev(S.end()) : prev(bel);\n                auto [pl, pr] = *pre;\n                auto nxt = bel == prev(S.end()) ? S.begin() : next(bel);\n                auto [ql, qr] = *nxt;\n                #ifdef DEBUG\n                cout << l << \" \" << r << endl;\n                #endif\n                \n                if(S.size() == 1) {\n                    S.clear();\n                    cnt.add(n, -1);\n                    sum.add(n, -n);\n                    if(!(n & 1)) {\n                        S.emplace(inc(id), dec(id));\n                        cnt.add(n - 1, 1);\n                        sum.add(n - 1, n - 1);\n                        S.emplace(id, id);\n                        cnt.add(1, 1);\n                        sum.add(1, 1);\n                    }\n                    else {\n                        if(l == id) {\n                            S.emplace(inc(id), id);\n                            cnt.add(n, 1);\n                            sum.add(n, n);\n                        }\n                        else if(r == id) {\n                            S.emplace(id, dec(id));\n                            cnt.add(n, 1);\n                            sum.add(n, n);\n                        }\n                        else {\n                            S.emplace(l, dec(id));\n                            cnt.add(dis(l, dec(id)), 1);\n                            sum.add(dis(l, dec(id)), dis(l, dec(id)));\n                            S.emplace(id, id);\n                            cnt.add(1, 1);\n                            sum.add(1, 1);\n                            S.emplace(inc(id), r);\n                            cnt.add(dis(inc(id), r), 1);\n                            sum.add(dis(inc(id), r), dis(inc(id), r));\n                        }\n                    }\n                }\n                else if(S.size() == 2) {\n                    S.erase({l, r});\n                    cnt.add(dis(l, r), -1);\n                    sum.add(dis(l, r), -dis(l, r));\n                    if(l == id && r == id) {\n                        S.erase({pl, pr});\n                        cnt.add(dis(pl, pr), -1);\n                        sum.add(dis(pl, pr), -dis(pl, pr));\n                        S.emplace(0, n - 1);\n                        cnt.add(n, 1);\n                        sum.add(n, n);\n                    }\n                    else if(l == id) {\n                        S.erase({pl, pr});\n                        cnt.add(dis(pl, pr), -1);\n                        sum.add(dis(pl, pr), -dis(pl, pr));\n                        S.emplace(pl, id);\n                        cnt.add(dis(pl, id), 1);\n                        sum.add(dis(pl, id), dis(pl, id));\n                        S.emplace(inc(id), r);\n                        cnt.add(dis(inc(id), r), 1);\n                        sum.add(dis(inc(id), r), dis(inc(id), r));\n                    }\n                    else if(r == id) {\n                        S.erase({ql, qr});\n                        cnt.add(dis(ql, qr), -1);\n                        sum.add(dis(ql, qr), -dis(ql, qr));\n                        S.emplace(l, dec(id));\n                        cnt.add(dis(l, dec(id)), 1);\n                        sum.add(dis(l, dec(id)), dis(l, dec(id)));\n                        S.emplace(id, qr);\n                        cnt.add(dis(id, qr), 1);\n                        sum.add(dis(id, qr), dis(id, qr));\n                    }\n                    else {\n                        S.emplace(l, dec(id));\n                        cnt.add(dis(l, dec(id)), 1);\n                        sum.add(dis(l, dec(id)), dis(l, dec(id)));\n                        S.emplace(id, id);\n                        cnt.add(1, 1);\n                        sum.add(1, 1);\n                        S.emplace(inc(id), r);\n                        cnt.add(dis(inc(id), r), 1);\n                        sum.add(dis(inc(id), r), dis(inc(id), r));\n                    }\n                }\n                else {\n                    S.erase({l, r});\n                    cnt.add(dis(l, r), -1);\n                    sum.add(dis(l, r), -dis(l, r));\n                    if(l == id && r == id) {\n                        S.erase({pl, pr});\n                        cnt.add(dis(pl, pr), -1);\n                        sum.add(dis(pl, pr), -dis(pl, pr));\n                        S.erase({ql, qr});\n                        cnt.add(dis(ql, qr), -1);\n                        sum.add(dis(ql, qr), -dis(ql, qr));\n                        S.emplace(pl, qr);\n                        cnt.add(dis(pl, qr), 1);\n                        sum.add(dis(pl, qr), dis(pl, qr));\n                    }\n                    else if(l == id) {\n                        S.erase({pl, pr});\n                        cnt.add(dis(pl, pr), -1);\n                        sum.add(dis(pl, pr), -dis(pl, pr));\n                        S.emplace(pl, id);\n                        cnt.add(dis(pl, id), 1);\n                        sum.add(dis(pl, id), dis(pl, id));\n                        S.emplace(inc(id), r);\n                        cnt.add(dis(inc(id), r), 1);\n                        sum.add(dis(inc(id), r), dis(inc(id), r));\n                    }\n                    else if(r == id) {\n                        S.erase({ql, qr});\n                        cnt.add(dis(ql, qr), -1);\n                        sum.add(dis(ql, qr), -dis(ql, qr));\n                        S.emplace(l, dec(id));\n                        cnt.add(dis(l, dec(id)), 1);\n                        sum.add(dis(l, dec(id)), dis(l, dec(id)));\n                        S.emplace(id, qr);\n                        cnt.add(dis(id, qr), 1);\n                        sum.add(dis(id, qr), dis(id, qr));\n                    }\n                    else {\n                        S.emplace(l, dec(id));\n                        cnt.add(dis(l, dec(id)), 1);\n                        sum.add(dis(l, dec(id)), dis(l, dec(id)));\n                        S.emplace(id, id);\n                        cnt.add(1, 1);\n                        sum.add(1, 1);\n                        S.emplace(inc(id), r);\n                        cnt.add(dis(inc(id), r), 1);\n                        sum.add(dis(inc(id), r), dis(inc(id), r));\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743261",
    "subm_id": "552349749"
}