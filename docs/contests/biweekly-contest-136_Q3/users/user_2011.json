{
    "username": "the_GOAT13",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int n = g.size();\n        int m = g[0].size();\n        int f = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            f += centerElementFlip(g, n, m);\n        }\n\n        vector<int> r = countCentralRowFlips(g, n, m);\n        countCentralColumnFlips(g, n, m, r);\n        f += handleQuadrants(g, n, m, r);\n\n        return f;\n    }\n\nprivate:\n    int centerElementFlip(const vector<vector<int>>& g, int n, int m) {\n        return g[n / 2][m / 2] == 1 ? 1 : 0;\n    }\n\n    vector<int> countCentralRowFlips(const vector<vector<int>>& g, int n, int m) {\n        vector<int> c(3, 0);\n        if (n % 2 == 1) {\n            countFlipsForCentralRow(g, n, m, c);\n        }\n        return c;\n    }\n\n    void countFlipsForCentralRow(const vector<vector<int>>& g, int n, int m, vector<int>& c) {\n        int b = 0, e = m - 1;\n        while (b < e) {\n            int s = g[n / 2][b] + g[n / 2][e];\n            c[s] += 1;\n            b += 1;\n            e -= 1;\n        }\n    }\n\n    void countCentralColumnFlips(const vector<vector<int>>& g, int n, int m, vector<int>& c) {\n        if (m % 2 == 1) {\n            countFlipsForCentralColumn(g, n, m, c);\n        }\n    }\n\n    void countFlipsForCentralColumn(const vector<vector<int>>& g, int n, int m, vector<int>& c) {\n        int b = 0, e = n - 1;\n        while (b < e) {\n            int s = g[b][m / 2] + g[e][m / 2];\n            c[s] += 1;\n            b += 1;\n            e -= 1;\n        }\n    }\n\n    int handleQuadrants(const vector<vector<int>>& g, int n, int m, const vector<int>& c) {\n        int f = calculateQuadrantFlips(g, n, m, c);\n        f += calculateCenterFlips(c);\n        return f;\n    }\n\n    int calculateQuadrantFlips(const vector<vector<int>>& g, int n, int m, const vector<int>& c) {\n        int f = 0;\n        for (int b = 0; b < n / 2; ++b) {\n            for (int e = 0; e < m / 2; ++e) {\n                int d = g[b][e];\n                int f1 = g[n - 1 - b][e];\n                int g1 = g[b][m - 1 - e];\n                int h = g[n - 1 - b][m - 1 - e];\n\n                int s = d + f1 + g1 + h;\n                f += min(s, 4 - s);\n            }\n        }\n        return f;\n    }\n\n    int calculateCenterFlips(const vector<int>& c) {\n        if (c[2] % 2 == 1) {\n            return c[1] > 0 ? c[1] : 2;\n        } else {\n            return c[1];\n        }\n    }\n};\n",
    "submit_ts": "1722699541",
    "subm_id": "1343214837"
}