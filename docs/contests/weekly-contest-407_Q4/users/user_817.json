{
    "username": "Tyrande",
    "submission": "\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n, 0);\n        vector<int> pos, neg;\n        long res = 0;\n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n        diff.push_back(0);\n        for (int i = 0; i <= n; ++i) {\n            if (diff[i] < 0) {\n                if (pos.size() > 0) {\n                    res += helper(pos);\n                    pos.clear();\n                }\n                neg.push_back(-1*diff[i]);\n            } else if (diff[i] > 0) {\n                if (neg.size() > 0) {\n                    res += helper(neg);\n                    neg.clear();\n                }\n                pos.push_back(diff[i]);\n            } else {\n                if (pos.size() > 0) {\n                    res += helper(pos);\n                    pos.clear();\n                }\n                if (neg.size() > 0) {\n                    res += helper(neg);\n                    neg.clear();\n                }\n            }\n        }\n        return res;\n    }\n    long helper(vector<int>& target) {\n        long res = target[0];\n        for (int i = 1; i < target.size(); ++i) {\n            if (target[i] < target[i-1]) continue;\n            else res += target[i] - target[i-1];\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532206",
    "subm_id": "1327980278"
}