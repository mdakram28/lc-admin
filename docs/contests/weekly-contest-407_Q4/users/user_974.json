{
    "username": "jay_7",
    "submission": "public class Solution {\n    public long MinimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int left = 0;\n\n        while (left < nums.Length) {\n            if (target[left] > nums[left]) {\n                int right = left;\n                int minDiff = int.MaxValue;\n\n                while (right < nums.Length && nums[right] < target[right]) {\n                    minDiff = Math.Min(minDiff, target[right] - nums[right]);\n                    ++right;\n                }\n\n                ans += minDiff;\n                right = right - 1;\n\n                while (right >= left) {\n                    nums[right] += minDiff;\n                    --right;\n                }\n            }\n            else if (target[left] < nums[left]) {\n                int right = left;\n                int maxDiff = int.MinValue;\n\n                while (right < nums.Length && nums[right] > target[right]) {\n                    maxDiff = Math.Max(maxDiff, target[right] - nums[right]);\n                    ++right;\n                }\n\n                ans += Math.Abs(maxDiff);\n                right = right - 1;\n\n                while (right >= left) {\n                    nums[right] += maxDiff;\n                    --right;\n                }\n            }\n            else\n                ++left;\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721532477",
    "subm_id": "1327986780"
}