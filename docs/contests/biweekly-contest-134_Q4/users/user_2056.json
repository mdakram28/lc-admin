{
    "username": "abhaysingh05",
    "submission": "/*\nprecalc: O(n*log(n))\nquery: O(1)\n*/\n\nstruct sparse {\n    int n;\n    int k;\n    vector<vector<int64_t>> sp;\n\n    int logg(int n) { return n ? __builtin_clz(1) - __builtin_clz(n) : -1; }\n\n    int64_t argmin(int64_t a, int64_t b) { return a & b; }\n\n    void precalc() {\n        for (int j = 1; j <= k; j++) {\n            for (int i = 0; i <= n - (1 << j); i++) {\n                sp[i][j] = argmin(sp[i][j - 1], sp[i + (1 << (j - 1))][j - 1]);\n            }\n        }\n    }\n\n    void init(vector<int> a) {\n        n = a.size();\n        k = logg(n);\n        sp.resize(n, vector<int64_t>(k + 1));\n        for (int i = 0; i < n; i++) {\n            sp[i][0] = a[i];\n        }\n        precalc();\n    }\n\n    int64_t calc(int l, int r) {\n        int p = logg(r - l);\n        return argmin(sp[l][p], sp[r - (1 << p)][p]);\n    }\n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int> &nums, int k) {\n        int64_t n = nums.size();\n        sparse sp;\n        sp.init(nums);\n        int64_t ans = 0;\n        auto ok = [&](int64_t i, int64_t x) {\n            return sp.calc(i, x + 1) >= k;\n        };\n        for (int64_t i = 0; i < n; i++) {\n            int64_t l = i;\n            int64_t r = n - 1;\n            int64_t v1 = -1, v2 = -1;\n            while (l <= r) {\n                int64_t mid = (l + r) / 2;\n                if (sp.calc(i, mid + 1) == k) {\n                    v1 = mid;\n                }\n                if (ok(i, mid)) {\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            l = i;\n            r = n - 1;\n            while (l <= r) {\n                int64_t mid = (l + r) / 2;\n                if (sp.calc(i, mid + 1) == k) {\n                    v2 = mid;\n                }\n                if (sp.calc(i, mid + 1) >= k) {\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            // cout << \";;\" <<v1 << \" \" << v2 << \"\\n\";\n            int64_t ll1 = i - 1;\n            int64_t ll2 = n;\n            if (v2 != -1) {\n                l = i;\n                r = v2;\n                while (l <= r) {\n                    int64_t mid = (l + r) / 2;\n                    if (sp.calc(i, mid + 1) != k) {\n                        l = mid + 1;\n                        ll1 = mid;\n                    } else {\n                        r = mid - 1;\n                    }\n                }\n                ll1++;\n                l = v2;\n                r = n - 1;\n                while (l <= r) {\n                    int64_t mid = (l + r) / 2;\n                    if (sp.calc(i, mid + 1) != k) {\n                        r = mid - 1;\n                        ll2 = mid;\n                    } else {\n                        l = mid + 1;\n                    }\n                }\n                ll2--;\n                ans += ll2 - ll1 + 1;\n                // cout << ll1 << \"-\" << ll2 << \" \";\n                continue;\n            }\n            if (v1 != -1) {\n                l = i;\n                r = v1;\n                while (l <= r) {\n                    int64_t mid = (l + r) / 2;\n                    if (sp.calc(i, mid + 1) != k) {\n                        l = mid + 1;\n                        ll1 = mid;\n                    } else {\n                        r = mid - 1;\n                    }\n                }\n                ll1++;\n                l = v1;\n                r = n - 1;\n                while (l <= r) {\n                    int64_t mid = (l + r) / 2;\n                    if (sp.calc(i, mid + 1) != k) {\n                        r = mid - 1;\n                        ll2 = mid;\n                    } else {\n                        l = mid + 1;\n                    }\n                }\n                ll2--;\n                ans += ll2 - ll1 + 1;\n                // cout << ll1 << \"-\" << ll2 << \" \";\n                continue;\n            }\n        }\n        // cout << \"\\n\\n\";\n        return ans;\n    }\n};",
    "submit_ts": "1720280944",
    "subm_id": "1311807612"
}