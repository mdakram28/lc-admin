{
    "username": "Chandraprabhu",
    "submission": "template<class T,int UL> \nclass BIT {\n    public:\n    T arr[UL];int n; // used index [1,n]\n    BIT(){ }\n    inline void init(int _n){\n        n = _n;\n        memset(arr,0,sizeof(arr[0])*n);\n    }\n    template<typename Itr_Type>\n    inline void init(Itr_Type begin,Itr_Type end){\n        n = end-begin;\n        for(int i = 1 ;i<=n;i++){\n            arr[i] = *begin;\n            ++begin;\n        }\n        for(int i = 1;i<n;i++){\n            int par = i+(i&-i);\n            if(par<=n)arr[par]+=arr[i];\n        }\n    }\n    inline T prefix(int ind) const { // Input index are [0,n-1]\n        T result = 0;\n        for (++ind; ind > 0; ind -= ind & -ind) {\n            result += arr[ind];\n        }\n        return result;\n    }\n    inline T get(int from_ind, int to_ind) const { // Both ends are inclusive\n        return prefix(to_ind) - prefix(from_ind - 1);\n    }\n    inline T get(int ind)const{\n        return get(ind,ind);\n    }\n    inline void add(int ind, T add) {\n        for (++ind; ind <= n; ind += ind & -ind) arr[ind] += add;\n    }\n    inline void set(int ind,T value){\n        add(ind,value-get(ind));\n    }\n};\nconst int UL5 = 1e5+10;\nBIT<int,UL5> bit;\n\n\nclass Solution {\npublic:\n    int n;\n    bool isPeak(vector<int> & nums,int i){\n        return nums[i-1]<nums[i] && nums[i]>nums[i+1];\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        bit.init(n+3);\n        for(int i =1 ;i+1<n;i++){\n            if(isPeak(nums,i)){\n                bit.add(i,1);\n            }\n        }\n        vector<int> res;\n        for(auto &i : queries){\n            if(i[0]==1){\n                // for(int i = 0 ;i<n;i++){\n                //     cout<<bit.get(i,i)<<' ';\n                // }\n                // cout<<endl;\n                if(i[1]+1<=i[2]-1)\n                    res.push_back(bit.get(i[1]+1,i[2]-1));\n                else{\n                    res.push_back(0);\n                }\n            }\n            else{\n                for(int ind = -1;ind<2;ind++){\n                    int cur_ind = i[1]+ind;\n                    if(cur_ind>0 && cur_ind<n-1){\n                        if(isPeak(nums,cur_ind)){\n                            bit.add(cur_ind,-1);\n                        }\n                    }\n                }\n                nums[i[1]] = i[2];\n                for(int ind = -1;ind<2;ind++){\n                    int cur_ind = i[1]+ind;\n                    if(cur_ind>0 && cur_ind<n-1){\n                        if(isPeak(nums,cur_ind)){\n                            bit.add(cur_ind,1);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718507915.0
}