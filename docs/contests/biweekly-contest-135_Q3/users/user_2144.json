{
    "username": "lccheck",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n\n        counter = collections.defaultdict(int)\n        n = len(nums)\n        for i in range(n // 2):\n            gap = abs(nums[i] - nums[n - 1 - i])\n            counter[gap] += 1\n\n        arr = []\n        for gap in counter:\n            arr.append((counter[gap], -gap))\n        arr.sort(reverse = True)\n\n        def cal(x):\n            ans = 0\n            for i in range(n // 2):\n                gap = abs(nums[i] - nums[n - 1 - i])\n\n                min_num = min(nums[i], nums[n - 1 - i])\n                max_num = max(nums[i], nums[n - 1 - i])\n\n\n                # print ('i', i, 'gap', gap, min_num, max_num)\n                if gap == x:\n                    continue\n\n                if gap > x:\n                    ans += 1\n                    continue\n\n\n                if min_num + x <= k or max_num - x >= 0:\n                    ans += 1\n                else:\n                    ans += 2\n\n            return ans\n\n        \n        count = float('inf')\n        for value, x in arr:\n            x = abs(x)\n            temp = cal(x)\n            if temp <= count:\n                count = temp\n            else:\n                return count\n\n        return count\n\n\n\n\n        x = float('inf')\n        max_value = -float('inf')\n\n        for gap in counter:\n            if (counter[gap] > max_value) or (counter[gap] == max_value and gap < x):\n                x = gap\n                max_value = counter[gap]\n\n        print (x, max_value)\n\n\n\n        return ans\n\n\n        ",
    "submit_ts": "1721490162",
    "subm_id": "1327474819"
}