{
    "username": "avidyarth12",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        \"\"\"\n        1 0 1 2 4 3\n        \"\"\"\n        difference_map = defaultdict(list)\n        max_values = []\n\n        n = len(nums)\n\n        for i in range(n // 2):\n            num_start = nums[i]\n            num_end = nums[n - i - 1]\n            diff = abs(num_start - num_end)\n\n            max_value = max(num_start, num_end, k - num_start, k - num_end)\n\n            difference_map[diff].append(max_value)\n            max_values.append(max_value)\n\n        min_changes = n\n        max_values.sort()\n\n        for diff, values in difference_map.items():\n            position = bisect_left(max_values, diff)\n            changes_needed = position * 2 + (n // 2 - position)\n\n            for value in values:\n                if value < diff:\n                    changes_needed -= 2\n                else:\n                    changes_needed -= 1\n\n            min_changes = min(min_changes, changes_needed)\n\n        return min_changes",
    "submit_ts": "1721489052",
    "subm_id": "1327441389"
}