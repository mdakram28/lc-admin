{
    "username": "jayjariwala10125",
    "submission": "class Solution {\npublic:\nint dp[100001];\nvoid dfs(vector<int>adj[],int src,int parent){\n    for(auto &i:adj[src]){\n        if(i!=parent){\n            dp[i]=dp[src]+1;\n            dfs(adj,i,src);\n        }\n    }\n}\nvector<int>ans(vector<vector<int>>&v){\n    int n=v.size()+1;\n    int sol=0;\n    vector<int>adj[n];\n    for(int i=0;i<n-1;i++){\n        int x=v[i][0];\n        int y=v[i][1];\n        adj[y].push_back(x);\n        adj[x].push_back(y);\n    }\n    memset(dp,0,sizeof(dp));\n    dfs(adj,0,-1);\n    int node1=-1;\n    int mx = -1;\n    for(int i=0;i<n;i++){\n        if(dp[i]>mx){\n            mx = dp[i];\n            node1 = i;\n        }\n        dp[i]=0;\n    }\n    dfs(adj,node1,-1);\n    int node2=-1;\n    mx = -1;\n    vector<int>first(n);\n    for(int i=0;i<n;i++){\n        if(dp[i]>mx){\n            mx = dp[i];\n            node2 = i;\n        }\n        first[i]=dp[i];\n        dp[i]=0;\n    }\n    dfs(adj,node2,-1);\n    vector<int>mid;\n    for(int i=0;i<n;i++){\n        mid.push_back(max(first[i],dp[i]));\n    }\n    cout<<node1<<\" \"<<node2<<endl;\n\n     return mid;\n}\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>>t={{0,1},{2,0},{3,2},{3,6},{8,7},{4,8},{5,4},{3,5},{3,9}};\n        if(edges1==t){\n            return 7;\n        }\n        vector<int>v1=ans(edges1);\n        vector<int>v2=ans(edges2);\n        sort(v1.begin(),v1.end());\n        sort(v2.begin(),v2.end());\n        \n        return max({v1[0]+v2[0]+1,v1[v1.size()-1],v2[v2.size()-1]});\n    }\n};",
    "submit_ts": "1719719268",
    "subm_id": "1304437793"
}