{
    "username": "s1967",
    "submission": "class Solution {\npublic:\n    void check(int node,int low,int high,vector<int>&seg,vector<int>&lazy){\n        if(lazy[node]!=0){\n            seg[node]+=lazy[node];\n            if(low!=high){\n                lazy[2*node+1]+=lazy[node];\n                lazy[2*node+2]+=lazy[node];\n            }\n        }\n        lazy[node]=0;\n    }\n    void update(int node,int l,int r,int low,int high,int val,vector<int>&seg,vector<int>&lazy,int flag){\n        if(l>r)return;\n        if(flag)check(node,low,high,seg,lazy);\n        if(low>=l&&high<=r){\n            seg[node]+=val;\n                if(flag){if(low!=high){\n                    lazy[2*node+1]+=val;\n                    lazy[2*node+2]+=val;\n                }\n            }\n              return;\n        }\n        if(r<low||high<l)return ;\n        int mid=low+(high-low)/2;\n        update(2*node+1,l,r,low,mid,val,seg,lazy,flag);\n        update(2*node+2,l,r,mid+1,high,val,seg,lazy,flag);\n        seg[node]=max(seg[2*node+1],seg[2*node+2]);\n    }\n    int query(int node,int l,int r,int low,int high,vector<int>&seg,vector<int>&lazy){\n        if(l>r)return 0;\n        check(node,low,high,seg,lazy);\n        if(low>=l&&high<=r){\n            return seg[node];\n        }\n        if(r<low||high<l)return 0;\n        int mid=low+(high-low)/2;\n        int l1=query(2*node+1,l,r,low,mid,seg,lazy);\n        int r1=query(2*node+2,l,r,mid+1,high,seg,lazy);\n        return max(l1,r1);\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool>ans;\n        int mini=queries.size();\n        mini=min(3*mini,50000);\n        vector<int>seg(4*mini+10,0),lazy(4*mini+10,0);\n        for(int i=0;i<=mini;i++){\n            update(0,i,i,0,mini,i,seg,lazy,0);\n        }\n        set<int>s;\n        s.insert(0);\n        int q=queries.size();\n        for(int i=0;i<q;i++){\n            int type=queries[i][0];\n            int x=queries[i][1];\n            if(type==1){\n               auto it=s.upper_bound(x);\n               int r1;\n               if(it==s.end())r1=mini;\n               else r1=(*it);\n               it--;\n               int val=*it-x;\n               cout<<val<<endl;\n               cout<<x+1<<\" \"<<r1<<endl;\n               update(0,x+1,r1,0,mini,val,seg,lazy,1);\n               s.insert(x);\n            }\n            else{\n               int val=query(0,0,x,0,mini,seg,lazy);\n               cout<<val<<endl;\n               if(val>=queries[i][2])ans.push_back(true);\n               else ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716651850",
    "subm_id": "1267649968"
}