{
    "username": "john35452",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        diff = {}\n        total = {}\n        for x, y in points:\n            diff[x - y] = diff.get(x - y, 0) + 1\n            total[x + y] = total.get(x + y, 0) + 1\n        \n        maxvd = max(diff.keys())\n        minvd = min(diff.keys())\n        maxvt = max(total.keys())\n        minvt = min(total.keys())\n        ans = max(maxvd - minvd, maxvt - minvt)\n        for x, y in points:\n            d = x - y\n            t = x + y\n            if (d in (maxvd, minvd) and diff[d] == 1) or (t in (maxvt, minvt) and total[t] == 1):\n                diff[d] -= 1\n                if not diff[d]:\n                    diff.pop(d)\n                total[t] -= 1\n                if not total[t]:\n                    total.pop(t)\n                maxd = max(diff.keys())\n                mind = min(diff.keys())\n                maxt = max(total.keys())\n                mint = min(total.keys())\n                ans = min(ans, max(maxd - mind, maxt - mint))\n                diff[d] = diff.get(d, 0) + 1\n                total[t] = total.get(t, 0) + 1\n        return ans"
}