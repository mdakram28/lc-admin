{
    "username": "garvitgoyal058",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int, vector<int>> differences;\n        vector<int> maxVals;\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int left = nums[i];\n            int right = nums[n - i - 1];\n            int diff = abs(left - right);\n            int maxValue = max({left, right, k - left, k - right});\n            \n            differences[diff].push_back(maxValue);\n            maxVals.push_back(maxValue);\n        }\n        \n        int minOps = n;\n        sort(maxVals.begin(), maxVals.end());\n        \n        for (const auto& entry : differences) {\n            int diff = entry.first;\n            int pos = lower_bound(maxVals.begin(), maxVals.end(), diff) - maxVals.begin();\n            int adjustments = pos * 2 + (n / 2 - pos);\n            \n            for (const auto& val : entry.second) {\n                if (val < diff) {\n                    adjustments -= 2;\n                } else {\n                    adjustments -= 1;\n                }\n            }\n            minOps = min(minOps, adjustments);\n        }\n        \n        return minOps;\n    }\n};",
    "submit_ts": "1721488827",
    "subm_id": "1327434471"
}