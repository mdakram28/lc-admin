{
    "username": "6307678176",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n    long long int hCuts = 0, vCuts = 0;\n    long long int cost = 0;\n    long long int i = 0, j = 0;\n\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n        if (horizontalCut[i] >= verticalCut[j]) {\n            cost += horizontalCut[i] * (vCuts + 1);\n            i++;\n            hCuts++;\n        } else {\n            cost += verticalCut[j] * (hCuts + 1);\n            j++;\n            vCuts++;\n        }\n    }\n\n    while (i < horizontalCut.size()) {\n        cost += horizontalCut[i] * (vCuts + 1);\n        i++;\n        hCuts++;\n    }\n\n    while (j < verticalCut.size()) {\n        cost += verticalCut[j] * (hCuts + 1);\n        j++;\n        vCuts++;\n    }\n\n    return cost;\n    }\n};",
    "submit_ts": "1720925742",
    "subm_id": "1320264754"
}