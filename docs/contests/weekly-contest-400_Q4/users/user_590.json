{
    "username": "anain829",
    "submission": "class Solution {\npublic:\n    vector<int> get_set_bits(int x) {\n        vector<int> set_bits;\n        for (int i = 0; x > 0; ++i, x >>= 1) {\n            if (x & 1) {\n                set_bits.push_back(i);\n            }\n        }\n        return set_bits;\n    }\n\n     \n    int counts_to_bitwise_and(int window_length, const unordered_map<int, int>& bit_counts) {\n        int result = 0;\n        for (const auto& [key, count] : bit_counts) {\n            if (count == window_length) {\n                result |= (1 << key);\n            }\n        }\n        return result;\n    }\n\n    int find_bitwise_and(const vector<int>& nums, int target) {\n        int n = nums.size();\n        int current_AND_value = nums[0];\n        int best_diff = abs(current_AND_value - target);\n\n        unordered_map<int, int> window_bit_counts;\n        vector<int> initial_bits = get_set_bits(nums[0]);\n        for (int bit : initial_bits) {\n            window_bit_counts[bit]++;\n        }\n\n        int left_idx = 0, right_idx = 0;\n\n        while (right_idx < n) {\n            \n            if (current_AND_value > target || left_idx > right_idx) {\n                right_idx++;\n                if (right_idx >= n) {\n                    break;\n                }\n                vector<int> right_bits = get_set_bits(nums[right_idx]);\n                for (int bit : right_bits) {\n                    window_bit_counts[bit]++;\n                }\n            } \n           \n            else {\n                vector<int> left_bits = get_set_bits(nums[left_idx]);\n                for (int bit : left_bits) {\n                    window_bit_counts[bit]--;\n                    if (window_bit_counts[bit] == 0) {\n                        window_bit_counts.erase(bit);\n                    }\n                }\n                left_idx++;\n            }\n\n            current_AND_value = counts_to_bitwise_and(right_idx - left_idx + 1, window_bit_counts);\n\n       \n            if (left_idx <= right_idx) {\n                best_diff = min(best_diff, abs(current_AND_value - target));\n            }\n        }\n\n        return best_diff;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        return find_bitwise_and(nums, k);\n        \n        \n\n    }\n};",
    "submit_ts": "1717299251",
    "subm_id": "1274806394"
}