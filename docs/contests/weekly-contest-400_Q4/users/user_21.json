{
    "username": "mhasan01",
    "submission": "template<typename T>\nstruct SparseTable {\n    int n;\n    vector<vector<T>> dp;\n    vector<int> prec;\n\n    SparseTable(vector<T>& a) {\n        n = a.size();\n        int len = 1;\n        int k = 0;\n        while (len <= 2 * n) {\n            len <<= 1;\n            ++k;\n        }\n        dp.assign(len, vector<T>(k, 0));\n        prec.assign(len, 0);\n        for (int i = 2; i < 2 * n; i++) {\n            prec[i] = prec[i >> 1] + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            dp[i][0] = a[i];\n        }\n        for (int j = 1; (1 << j) <= n; j++) {\n            for (int i = 0; i < n; i++) {\n                dp[i][j] = combine(dp[i][j - 1], dp[i + (1 << (j - 1))][j - 1]);\n            }\n        }\n    }\n\n    T combine(const T& a, const T& b) {\n        return (a & b);\n    }\n\n    T query(int l, int r) {\n        int k = prec[r - l + 1];\n        return combine(dp[l][k], dp[r - (1 << k) + 1][k]);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        SparseTable<int> sp(a);\n        int n = (int) a.size();\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int R = i;\n            int val = a[i];\n            ans = min(ans, abs(val - k));\n            for (int rep = 0; rep < 100; rep++) {\n                int l = R + 1, r = n - 1, at = -1;\n                while (l <= r) {\n                    int mid = (l + r) >> 1;\n                    if (sp.query(i, mid) != val) {\n                        r = mid - 1;\n                        at = mid;\n                    } else {\n                        l = mid + 1;\n                    }\n                }\n                if (at == -1) {\n                    break;\n                }\n                val = sp.query(i, at);\n                ans = min(ans, abs(val - k));\n                R = at;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296480.0
}