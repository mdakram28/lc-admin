{
    "username": "Samael Wang",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in [1, 3, 9]:\n            return \"9\" * n\n        elif k == 2:\n            return \"8\" if n == 1 else \"8\" + \"9\" * (n - 2) + \"8\"\n        elif k == 4:\n            if n < 4:\n                return \"8\" * n\n            else:\n                return \"88\" + \"9\" * (n - 4) + \"88\"\n        elif k == 5:\n            return \"5\" if n == 1 else \"5\" + \"9\" * (n - 2) + \"5\"\n        elif k == 6:\n            if n < 3:\n                return \"6\" * n\n            elif n % 2 == 0:\n                return \"8\" + \"9\" * (n // 2 - 2) + \"77\" + \"9\" * (n // 2 - 2) + \"8\"\n            else:\n                return \"8\" + \"9\" * (n // 2 - 1) + \"8\" + \"9\" * (n // 2 - 1) + \"8\"\n        elif k == 7:\n            if n < 3:\n                return \"7\" * n\n            else:\n                for i in \"9876543210\":\n                    if n % 2 == 1:\n                        x = \"9\" * (n // 2) + i + \"9\" * (n // 2)\n                    else:\n                        x = \"9\" * (n // 2 - 1) + i * 2 + \"9\" * (n // 2 - 1)\n\n                    digit_sum = 0\n                    r = [1, 3, 2, -1, -3, -2]\n                    for j, digit in enumerate(reversed(x)):\n                        digit_sum += r[j % 6] * int(digit)\n                    if digit_sum % 7 == 0:\n                        return x\n        elif k == 8:\n            if n < 6:\n                return \"8\" * n\n            else:\n                return \"888\" + \"9\" * (n - 6) + \"888\"\n        ",
    "submit_ts": "1723951658",
    "subm_id": "1359776931"
}