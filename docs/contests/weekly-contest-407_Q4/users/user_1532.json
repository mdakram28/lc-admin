{
    "username": "ASHIS_MISHRA",
    "submission": "class Solution {\n    int n;\n    ArrayList<Integer> diff=new ArrayList<>();\n    public long minimumOperations(int[] nums, int[] target) {\n        n = nums.length;\n        \n        for (int i = 0; i < n; i++) {\n            diff.add(target[i] - nums[i]);\n        }\n        \n        long result = 0;\n        int curr = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (i == 0 || (diff.get(i-1) < 0 && diff.get(i) < 0) || (diff.get(i-1) > 0 && diff.get(i) > 0) ) {\n                int temp = Math.abs(diff.get(i)) - Math.abs(curr);\n                if (temp > 0) {\n                    result += temp;\n                }\n            } \n            else {\n                result += Math.abs(diff.get(i));\n            }\n            curr = diff.get(i);\n        }\n        \n        return result;\n    }\n}",
    "submit_ts": "1721533285",
    "subm_id": "1328005528"
}