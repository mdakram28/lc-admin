{
    "username": "Arghadeep23",
    "submission": "\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n\n       \n        sort(requirements.begin(), requirements.end());\n       \n        vector<vector<int>> dp(2, vector<int>(n * (n-1) / 2 + 1, 0));\n        dp[0][0] = 1;\n\n        vector<int> req_inv(n, -1);\n        for (const auto& req : requirements) {\n            req_inv[req[0]] = req[1];\n        }\n\n        for (int i = 1; i <= n; ++i) {\n            fill(dp[i % 2].begin(), dp[i % 2].end(), 0);\n            vector<int> prefix_sum(n * (n-1) / 2 + 1, 0);\n\n            for (int j = 0; j <= i * (i-1) / 2; ++j) {\n                prefix_sum[j] = (dp[(i - 1) % 2][j] + (j > 0 ? prefix_sum[j - 1] : 0)) % MOD;\n            }\n\n            for (int j = 0; j <= i * (i-1) / 2; ++j) {\n                if (j < i) {\n                    dp[i % 2][j] = prefix_sum[j];\n                } else {\n                    dp[i % 2][j] = (prefix_sum[j] - prefix_sum[j - i] + MOD) % MOD;\n                }\n            }\n\n            if (req_inv[i - 1] != -1) {\n                if (dp[i % 2][req_inv[i - 1]] == 0) {\n                    return 0;  \n                }\n                long long temp = dp[i % 2][req_inv[i - 1]];\n                fill(dp[i % 2].begin(), dp[i % 2].end(), 0);\n                dp[i % 2][req_inv[i - 1]] = temp;\n            }\n        }\n        return dp[n % 2][req_inv[n - 1]];\n    }\n};",
    "submit_ts": 1719070977.0
}