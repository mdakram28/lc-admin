{
    "username": "shellbertt",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> adj(n);\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                int64_t xd = abs(circles[i][0]-circles[j][0]);\n                int64_t yd = abs(circles[i][1]-circles[j][1]);\n                int64_t rd = circles[i][2] + circles[j][2];\n                if (xd*xd+yd*yd <= rd * rd) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        vector<int> seen(circles.size());\n        for (int i = 0; i < circles.size(); ++i) {\n            int x = circles[i][0], y = circles[i][1], r = circles[i][2];\n            // cout << ' ' << x - r << ' ' <<  1 << ' ' <<  y + r << ' ' << Y-1 << '\\n';\n            if (!(x - r <= 0 || y + r >= Y)) continue;\n            queue<int> q;\n            q.push(i);\n            while (q.size()) {\n                int u = q.front();\n                // cout << u << '\\n';\n                q.pop();\n                if (seen[u]) continue;\n                seen[u] = 1;\n                int x = circles[u][0], y = circles[u][1], r = circles[u][2];\n                if ((x + r >= X || y - r <= 0)) return 0;\n                for (int v : adj[u]) {\n                    q.push(v);\n                }\n            }\n            seen.clear();\n        }\n        return 1;\n    }\n};",
    "submit_ts": "1722138225",
    "subm_id": "1335785374"
}