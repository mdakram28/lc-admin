{
    "username": "Ujjwal121",
    "submission": "class Graph {\n\npublic:\n\n    int V;\n\n    vector<int>* adj;\n\n    Graph(int V) {\n\n        this->V = V;\n\n        adj = new vector<int>[V];\n\n    }\n\n    ~Graph() {\n\n        delete[] adj;\n\n    }\n\n    void addEdge(int u, int v) {\n\n        adj[u].push_back(v);\n\n        adj[v].push_back(u);\n\n    }\n\n    pair<int, int> bfs(int u) {\n\n        vector<int> dis(V, -1);\n\n        queue<int> q;\n\n        q.push(u);\n\n        dis[u] = 0;\n\n        while (!q.empty()) {\n\n            int t = q.front();\n\n            q.pop();\n\n            for (auto it = adj[t].begin(); it != adj[t].end(); it++) {\n\n                int v = *it;\n\n                if (dis[v] == -1) {\n\n                    q.push(v);\n\n                    dis[v] = dis[t] + 1;\n\n                }\n\n            }\n\n        }\n\n        int maxDis = 0;\n\n        int nodeIdx = u;\n\n        for (int i = 0; i < V; i++) {\n\n            if (dis[i] > maxDis) {\n\n                maxDis = dis[i];\n\n                nodeIdx = i;\n\n            }\n\n        }\n\n        return make_pair(nodeIdx, maxDis);\n\n    }\n\n    int longestPathLength() {\n\n        pair<int, int> t1, t2;\n\n        t1 = bfs(0);\n\n        t2 = bfs(t1.first);\n\n        return t2.second;\n\n    }\n\n};\n\nclass Solution {\n\npublic:\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n\n        int V1 = e1.size() + 1;\n\n        int V2 = e2.size() + 1;\n\n        Graph g1(V1), g2(V2);\n\n        for (auto& x : e1) {\n\n            g1.addEdge(x[0], x[1]);\n\n        }\n\n        for (auto& x : e2) {\n\n            g2.addEdge(x[0], x[1]);\n\n        }\n\n         int a = g1.longestPathLength();\n            int b = g2.longestPathLength();\n            \n            \n  int h = a+b;          \n  \n    // cout<<a<<b<<endl;       \n                 \n\n        if(h==0)\n\n                return 1;\n            \nif(h != 1 && (a == 0 ||  b == 0))return  max(a , b);\n            \n        if(h == 2)\n                return 3;\n            \n        if(h==1 )\n                return 2;\n            \n        \n        int res = (a/2)+(a&1)+(b/2)+(b&1)+1;\n\n        return max(a , max(b, res));\n\n    }\n\n};",
    "submit_ts": "1719719553",
    "subm_id": "1304444780"
}