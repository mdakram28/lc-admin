{
    "username": "Mouceant",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        sumMax = []\n        sumMin = []\n        diffMax = []\n        diffMin = []\n        ans = float('inf')\n        n = len(points)\n        for i, (x, y) in enumerate(points):\n            sumMax.append((-(x + y), i))\n            sumMin.append((x + y, i))\n            diffMax.append((-(x - y), i))\n            diffMin.append(((x - y), i))\n        sumMax.sort()\n        sumMin.sort()\n        diffMax.sort()\n        diffMin.sort()\n        for i in range(n):\n            currSumMax = -sumMax[0][0] if sumMax[0][1] != i else -sumMax[1][0]\n            currSumMin = sumMin[0][0] if sumMin[0][1] != i else sumMin[1][0]\n            currDiffMax = -diffMax[0][0] if diffMax[0][1] != i else -diffMax[1][0]\n            currDiffMin = diffMin[0][0] if diffMin[0][1] != i else diffMin[1][0]\n            ans = min(ans, max(currSumMax - currSumMin, currDiffMax - currDiffMin))\n        return ans"
}