{
    "username": "kirtan134parikh",
    "submission": "#define ll long long\n\nclass TrieNode {\npublic:\n    TrieNode* children[26];\n    int cost;\n    TrieNode() {\n        for (int i = 0; i < 26; ++i)\n            children[i] = nullptr;\n        cost = INT_MAX;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            TrieNode* curr = root;\n            for (char c : words[i]) {\n                if (!curr->children[c - 'a'])\n                    curr->children[c - 'a'] = new TrieNode();\n                curr = curr->children[c - 'a'];\n            }\n            curr->cost = min(curr->cost, costs[i]);\n        }\n\n        int n = target.size();\n        vector<ll> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* curr = root;\n            for (int j = i; j < n; ++j) {\n                if (!curr->children[target[j] - 'a']) break;\n                curr = curr->children[target[j] - 'a'];\n                dp[j + 1] = min(dp[j + 1], dp[i] + curr->cost);\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};\n",
    "submit_ts": "1720324156",
    "subm_id": "1312392890"
}