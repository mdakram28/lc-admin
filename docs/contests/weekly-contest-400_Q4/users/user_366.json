{
    "username": "mhwg",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n/*\nYou are given an array nums and an integer k. You need to find a subarray of nums such that the absolute difference between k and the bitwise AND of the subarray elements is as small as possible. In other words, select a subarray nums[l..r] such that |k - (nums[l] AND nums[l + 1] ... AND nums[r])| is minimum.\n\nReturn the minimum possible value of the absolute difference.\n\nA subarray is a contiguous non-empty sequence of elements within an array.\n*/\n\n\n// sparse table for bitwise and, 64 bit\nstruct st {\n    vector<vector<ll>> t;\n    vector<int> lg;\n    st(vector<int>& a) {\n        int n = a.size();\n        lg.resize(n+1);\n        lg[1] = 0;\n        for (int i = 2; i <= n; ++i) {\n            lg[i] = lg[i/2]+1;\n        }\n        t.resize(n, vector<ll>(lg[n]+1));\n        for (int i = 0; i < n; ++i) {\n            t[i][0] = a[i];\n        }\n        for (int j = 1; j <= lg[n]; ++j) {\n            for (int i = 0; i + (1<<j) <= n; ++i) {\n                t[i][j] = t[i][j-1] & t[i+(1<<(j-1))][j-1];\n            }\n        }\n    }\n    // inclusive\n    ll query(int l, int r) {\n        int j = lg[r-l+1];\n        return t[l][j] & t[r-(1<<j)+1][j];\n    }\n};\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        st s(nums);\n        int n = nums.size();\n        ll ret = 1e18;\n        for (int i = 0; i < n; ++i) {\n            int lo = i, hi = n-1, ans = i-1;\n            while (lo <= hi) {\n                int mid = lo + (hi-lo)/2;\n                ll band = s.query(i, mid);\n                // cout << i << \" \" << mid << \" \" << band << endl;\n                // int ree = nums[i];\n                // for (int j = i; j <= mid; ++j) {\n                //     ree &= nums[j];\n                // }\n                // cout << \"ree \" << ree << endl;\n                // assert(ree == band);\n                if (s.query(i, mid) < k) {\n                    hi = mid-1;\n                } else {\n                    ans = max(ans, mid);\n                    lo = mid+1;\n                }\n            }\n            // cout << \"ans \" << ans << endl;\n\n            for (int o = -5; o <= 5; ++o) {\n                int j = ans+o;\n                if (j >= i && j < n) {\n                    ret = min(ret, abs(k-s.query(i, j)));\n                }\n            }\n        }\n        return ret;\n        \n    }\n};",
    "submit_ts": "1717297294",
    "subm_id": "1274737222"
}