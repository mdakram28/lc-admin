{
    "username": "paras_churi",
    "submission": "class Solution {\npublic:\n    unordered_map<int,unordered_map<int,unordered_map<int,int>>> dp;\n    int f(int i,int cnt,int ok,int k){\n        if(i>k+1)return 0;\n        if(dp.count(i) && dp[i].count(cnt) && dp[i][cnt].count(ok))return dp[i][cnt][ok];\n        int ans = (i==k) + f(i+(1<<cnt),cnt+1,1,k);\n        if(ok){\n            ans += f(i-1,cnt,0,k);\n        }\n        return dp[i][cnt][ok]=ans;\n    }\n    int waysToReachStair(int k) {\n        // int ans = 0;\n        // queue<vector<int>> q;\n        // q.push({1,0,1});\n        // int cnt = 0;\n        // while(!q.empty()){\n        //     cnt++;\n        //     auto it = q.front();\n        //     q.pop();\n        //     int node = it[0], jump = it[1], ok = it[2];\n        //     if(node==k)ans++;\n        //     if(ok)q.push({node-1,jump,0});\n        //     if(node+(1<<jump)<=k+1)q.push({node+(1<<jump),jump+1,1});\n        // }\n        return f(1,0,1,k);\n    }\n};",
    "submit_ts": "1716088227",
    "subm_id": "1261807778"
}