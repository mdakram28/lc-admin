{
    "username": "HeyyyBooo",
    "submission": "class Solution {\npublic:\n Solution(){\n        ios_base::sync_with_stdio(false); \n        cin.tie(NULL); \n        cout.tie(NULL);\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        \n        map<long long, long long> prevMP;\n\n        for (int i = 0; i < n; i++) {\n            map<long long, long long> currMP; \n\n            if (nums[i] == k) {\n                ans++;\n            }\n            currMP[nums[i]] = 1;\n\n            for (auto it : prevMP) {\n                long long v=it.first;\n                long long f=it.second;\n                long long newR = v & nums[i];\n                if (newR == k) {\n                    ans += f;\n                }\n                currMP[newR] += f;\n            }\n            \n            prevMP = currMP;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720279182",
    "subm_id": "1311740903"
}