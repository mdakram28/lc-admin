{
    "username": "satian_sasa",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<vector<int>> s(n + 2, vector<int>(32, 0));\n        for (int i = 1; i <= n; i ++ ) {\n            for (int j = 0; j < 30; j++) {\n                s[i][j] = s[i - 1][j] + (nums[i - 1] >> j & 1);\n            }\n        }\n        auto chk = [&](int l, int r) -> int {\n             int x = 0;\n             for (int j = 0; j < 30; j ++ ) {\n                 x |= (s[r][j] - s[l][j] == r - l ? 1 << j : 0);\n             }\n             return x;\n        };\n        for (int i = 0; i < n; i ++ ) {\n            int l = i, r = n - 1, mid;\n            while(l < r) {\n                mid = l  + r + 1 >> 1;\n                if (chk(i, mid + 1) >= k) l = mid;\n                else r = mid - 1;\n            }\n            int rr = l;\n            l = i, r = n - 1;\n            while(l < r) {\n                mid = l  + r >> 1;\n                if (chk(i, mid + 1) <= k) r = mid;\n                else l = mid + 1;\n            }\n            if (chk(i, r + 1) == k && chk(i, rr + 1) == k) ans += rr - r + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278073",
    "subm_id": "544560512"
}