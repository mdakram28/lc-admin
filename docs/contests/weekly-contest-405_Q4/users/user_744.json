{
    "username": "Nikh1l_",
    "submission": "class Solution {\n    class Node{\n        Node next[];\n        boolean isEnd;\n        int cost;\n        Node(){\n            next = new Node[26];\n\n            cost = Integer.MAX_VALUE;\n        }\n    }\n\n    public int findMinCost(String target, int ind, Node trie, int dp[]){\n        if (ind >= target.length()) return 0;\n\n        if (dp[ind] == -1){\n            dp[ind] = Integer.MAX_VALUE;\n\n            Node tempTrie = trie;\n            for(int i = ind; i < target.length(); i++){\n                int next = target.charAt(i)-'a';\n\n                if (tempTrie.next[next] == null) break;\n                tempTrie = tempTrie.next[next];\n\n                if (tempTrie.isEnd){\n                    int currCost = findMinCost(target, i+1, trie, dp);\n                    if (currCost != Integer.MAX_VALUE) currCost += tempTrie.cost;\n\n                    dp[ind] = Math.min(dp[ind], currCost);\n                } \n                \n            }\n        }\n\n        return dp[ind];\n    }\n\n    public void addTrie(String word, Node trie, int cost){\n        for(int i = 0; i < word.length(); i++){\n            int next = word.charAt(i)-'a'; \n            \n            if (trie.next[next] == null) trie.next[next] = new Node();\n            trie = trie.next[next];\n        }\n        trie.isEnd = true;\n        trie.cost = Math.min(cost, trie.cost);\n        \n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        Node trie = new Node();\n        for(int i = 0; i < words.length; i++){\n            addTrie(words[i], trie, costs[i]);\n        }\n\n        int dp[] = new int[target.length()];\n        Arrays.fill(dp, -1);\n        int minCost = findMinCost(target, 0, trie, dp);\n\n        return (minCost==Integer.MAX_VALUE?-1:minCost);\n    }\n}",
    "submit_ts": "1720322490",
    "subm_id": "1312351310"
}