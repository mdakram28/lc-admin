{
    "username": "Abhineet309",
    "submission": "from typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], target: int) -> int:\n        # Length of the input list\n        length_of_input_list = len(nums)\n        \n        # Initialize counter for subarrays with bitwise AND result equal to target\n        total_subarrays_count = 0\n        \n        # Dictionary to store frequencies of bitwise AND results from previous iterations\n        previous_results_map = defaultdict(int)\n\n        # Iterate through each number in the input list\n        for num in nums:\n            # Dictionary to store frequencies of bitwise AND results for the current iteration\n            current_results_map = defaultdict(int)\n\n            # Check if the current number itself forms a subarray with bitwise AND result equal to target\n            if num == target:\n                total_subarrays_count = total_subarrays_count + 1  # Increment subarray count\n            \n            # Initialize the frequency of current number's bitwise AND result\n            current_results_map[num] = current_results_map[num] + 1  \n\n            # Iterate through previous results to calculate new bitwise AND results with current number\n            for prev_value, prev_frequency in previous_results_map.items():\n                new_and_result = prev_value & num\n                \n                # Check if the new bitwise AND result equals the target\n                if new_and_result == target:\n                    total_subarrays_count = total_subarrays_count + prev_frequency  # Add frequency to subarray count\n                \n                # Update current results with new bitwise AND results\n                current_results_map[new_and_result] = current_results_map[new_and_result] + prev_frequency\n            \n            # Update previous results with current results for the next iteration\n            previous_results_map = current_results_map  \n\n        # Return the total count of subarrays with bitwise AND result equal to target\n        return total_subarrays_count",
    "submit_ts": "1720278216",
    "subm_id": "1311699522"
}