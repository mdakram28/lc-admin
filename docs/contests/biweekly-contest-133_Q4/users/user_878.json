{
    "username": "mayank_mj1",
    "submission": "#define MOD 1000000007\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n       unordered_map<int, int> mpp;\n        for (int i = 0; i < req.size(); i++) {\n            mpp[req[i][0] + 1] = req[i][1];\n        }\n        int mx = 400;\n        vector<vector<long long>> vec(n + 1, vector<long long>(mx + 1, 0));\n        vec[0][0] = 1 + 0;\n        map<int,int>mp1;\n        int temp=0,count1=0;\n        for (int i = 1; i <= n; i++) {\n            mp1[i]++;\n            for (int j = 0; j <= mx; j++) {\n                for (int k = 1; k <= i; k++) {\n                    int x = j - (k - 1);\n                    if ((x +1)> 0) {\n                        vec[i][j] = (vec[i][j] + vec[i - 1][x]) % MOD;\n                    }\n                }\n                temp+=j;\n            }\n\n            if (mpp.count(i)) {\n                int targetInv = mpp[i];\n                for (int j = 0; j <= mx; j++) {\n                    if (j != mpp[i]) {\n                        vec[i][j] = 0;\n                    }\n                }\n                count1+=2;\n                \n            }\n            mp1.clear();\n        }\n        long long tt = 0;\n        for(int i=0;i<vec.size();i++) tt+=vec[i][0];\n        long long ans = 0;\n        ans+=tt;\n        for (long long count : vec[n]) {\n            ans = (ans + count) % MOD;\n        }\n        ans-=tt;\n\n        return ans;\n    }\n};",
    "submit_ts": 1719071451.0
}