{
    "username": "vedantmishra69",
    "submission": "class RQ:\n    def __init__(self, data, func=min):\n        self.func = func\n        self._data = _data = [list(data)]\n        i, n = 1, len(_data[0])\n        while 2 * i <= n:\n            prev = _data[-1]\n            _data.append([func(prev[j], prev[j + i]) for j in range(n - 2 * i + 1)])\n            i <<= 1\n\n    def query(self, start, stop):\n        \"\"\"func of data[start, stop)\"\"\"\n        depth = (stop - start).bit_length() - 1\n        return self.func(self._data[depth][start], self._data[depth][stop - (1 << depth)])\n\n    def __getitem__(self, idx):\n        return self._data[0][idx]\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        st = RQ(nums, func = lambda x, y: x & y)\n        res = inf\n        n = len(nums)\n        for i in range(n):\n            l, r = i, n-1\n            ans = -1\n            while l <= r:\n                mid = (l+r) // 2\n                if st.query(i, mid+1) > k: l = mid + 1\n                else: r = mid - 1; ans = mid\n            if ans != -1: res = min(res, abs(st.query(i, ans+1) - k))\n            l, r = i, n-1\n            ans = -1\n            while l <= r:\n                mid = (l+r) // 2\n                if st.query(i, mid+1) >= k: l = mid + 1; ans = mid\n                else: r = mid - 1\n            if ans != -1: res = min(res, abs(st.query(i, ans+1) - k))\n        return res\n                \n\n        \n        \n        \n        ",
    "submit_ts": 1717299907.0
}