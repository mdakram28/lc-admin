{
    "username": "arpitraj__02",
    "submission": "#define ll long long int\n#define un unsigned long long\n#define all(v) v.begin(),v.end()\n#define pb push_back\n#define sz(x) ((int)(x).size())\n\n\nclass BitwiseAND {\n    vector<vector<int>> st;\n    vector<int> log;\n\npublic:\n    BitwiseAND(const vector<int>& arr) {\n        int n = arr.size();\n        int K = log2(n) + 1;\n\n        st.assign(n, vector<int>(K));\n        log.assign(n + 1, 0);\n\n        for (int i = 2; i <= n; i++)\n            log[i] = log[i / 2] + 1;\n\n        for (int i = 0; i < n; i++)\n            st[i][0] = arr[i];\n\n        for (int j = 1; j < K; j++) {\n            for (int i = 0; i + (1 << j) <= n; i++) {\n                st[i][j] = st[i][j - 1] & st[i + (1 << (j - 1))][j - 1];\n            }\n        }\n    }\n\n    int query(int L, int R) {\n        int j = log[R - L + 1];\n        return st[L][j] & st[R - (1 << j) + 1][j];\n    }\n};\n\nclass Solution {\npublic:\n    \nlong long countSubarrays(vector<int>& v, int k) {\n   ll ans = 0;\n    int n = sz(v);\n    BitwiseAND b(v);\n    for (ll i = 0; i < n; ++i)\n    {\n        ll l = i, r = n - 1, l1 = -1, r1 = -1;\n        while (l <= r)\n        {\n            ll mid = (l + (r - l) / 2);\n            if (b.query(i, mid) >= k)\n            {\n                l1 = mid;\n                l = mid + 1;\n            }\n            else\n            {\n                r = mid - 1;\n            }\n        }\n        l = i, r = n - 1;\n        while (l <= r)\n        {\n            ll mid = (l + (r - l) / 2);\n            if (b.query(i, mid) <= k)\n            {\n                r1 = mid;\n                r = mid - 1;\n            }\n            else\n            {\n                l = mid + 1;\n            }\n        }\n        swap(l1, r1);\n        // debug(l1, r1, i);\n        if (l1 != -1 && r1 != -1 && b.query(i, l1) == b.query(i, r1) && b.query(i, l1) == k)\n        {\n            // debug(l1, r1);\n            ans += (r1 - l1 + 1);\n        }\n    }\n    // debug(b.query(1, 3));\n    return ans;\n}\n};",
    "submit_ts": "1720280681",
    "subm_id": "1311798281"
}