{
    "username": "Tom_cruise22",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nume, int k) {\n        int n = nume.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        vector<int> vk(k + 1, -1);\n        vector<map<int, int>> vkm(k + 1);\n        int ans = 1;\n\n        updateDP(n, k, nume, dp, vk, vkm);\n\n        int i = 0;\n        while (i < n) {\n            int j = 0;\n            while (j <= k) {\n                ans = max(ans, dp[i][j]);\n                ++j;\n            }\n            ++i;\n        }\n\n        return ans;\n    }\n\nprivate:\n    void updateDP(int n, int k, const vector<int>& nume, vector<vector<int>>& dp, vector<int>& vk, vector<map<int, int>>& vkm) {\n        int i = 0;\n        while (i < n) {\n            int j = 0;\n            while (j <= k) {\n                int l = 0;\n                while (l < j) {\n                    dp[i][j] = max(dp[i][j], 1 + vk[l]);\n                    ++l;\n                }\n                if (vkm[j].find(nume[i]) != vkm[j].end()) {\n                    dp[i][j] = max(dp[i][j], 1 + vkm[j][nume[i]]);\n                }\n                ++j;\n            }\n            j = 0;\n            while (j <= k) {\n                vk[j] = max(vk[j], dp[i][j]);\n                vkm[j][nume[i]] = max(vkm[j][nume[i]], dp[i][j]);\n                ++j;\n            }\n            ++i;\n        }\n    }\n};",
    "submit_ts": 1717862164.0
}