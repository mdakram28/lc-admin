{
    "username": "Ayush-1234",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& v, int k) {\n        int n = v.size(), ans = 0;\n        vector<int> pf(n), sf(n), dp(n);\n\n        pf[0] = 1, sf[n - 1] = 1;\n        dp[0] = v[0];\n\n        for(int i = 1; i < n; ++i){\n            pf[i] = (pf[i - 1] && (v[i] != v[i - 1]));\n            dp[i] = (i % 2) ^ v[i];\n            dp[i] += dp[i - 1];\n        }\n        for(int i = n - 2; i >= 0; --i){\n            sf[i] = (sf[i + 1] && (v[i] != v[i + 1]));\n        }\n\n        for(int i = k - 1; i < n; ++i){\n            int cnt = dp[i];\n            if(i - k >= 0) cnt -= dp[i - k];\n            if(cnt == 0 || cnt == k) ans++;\n        }\n        if(v.front() != v.back()){\n            for(int i = 0; i < k - 1; ++i){\n                ans += (pf[i] && sf[n - (k - i - 1)]);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720276873",
    "subm_id": "1311636828"
}