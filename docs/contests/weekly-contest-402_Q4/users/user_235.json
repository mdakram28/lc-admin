{
    "username": "H-R-2004",
    "submission": "struct segmentTree{\n  long long op(long long a, long long b) {\n    return a+b;\n  }\n  \n  vector<long long> t;\n  int n;\n\n  segmentTree(long long _n) {\n    n = _n;\n    t.resize(2 * n);\n  }\n\n  void build(vector<long long> &a) {\n    for(long long i = 0; i < a.size(); i++) {\n        update(i, a[i]);\n    }\n  }\n  \n  void update(long long pos, long long val) {\n    for(t[pos += n] = val; pos; pos >>= 1) {\n        t[pos >> 1] = op(t[pos], t[pos ^ 1]); \n    }\n  }\n\n  long long query(long long l, long long r) {\n    long long ans = 0;\n    for(l += n, r += n + 1; l < r ;l >>= 1, r >>= 1) {\n       if(l & 1) {\n        ans = op(ans, t[l++]);\n       }\n       if(r & 1) {\n        ans = op(ans, t[--r]);\n       }\n    }\n    return ans;\n  }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        segmentTree st(nums.size());\n        long long n=nums.size();\n        for(int i=1;i<n-1;i++)\n        {\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1])st.update(i,1);\n        }\n        vector<int> ans;\n        for(int i=0;i<queries.size();i++)\n        {\n            if(queries[i][0]==1)\n            {\n                int l=queries[i][1],r=queries[i][2];\n                if(r-l+1>=3)ans.push_back(st.query(l+1,r-1));\n                else ans.push_back(0);\n            }\n            else\n            {\n                int in=queries[i][1],x=queries[i][2];\n                nums[in]=x;\n                for(int j=in-1;j<=in+1;j++)\n                {\n                    if(j>=0 && j<n){\n                        st.update(j,0);\n                        if(j-1>=0 && j+1<n && nums[j]>nums[j-1] && nums[j]>nums[j+1])st.update(j,1);\n                    } \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506583.0
}