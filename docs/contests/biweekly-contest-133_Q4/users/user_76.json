{
    "username": "VasuBajaj28",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n\nint numberOfPermutations(int n, vector<vector<int>>& requirements) {\n    const int MAX_INVERSIONS = 400;\n    vector<vector<int>> dp(n + 1, vector<int>(MAX_INVERSIONS + 1, 0));\n    dp[0][0] = 1;\n\n    for (int i = 1; i <= n; ++i) {\n        for (int k = 0; k <= MAX_INVERSIONS; ++k) {\n            dp[i][k] = 0;\n            for (int j = 0; j <= min(i - 1, k); ++j) {\n                dp[i][k] = (dp[i][k] + dp[i - 1][k - j]) % MOD;\n            }\n        }\n    }\n\n    vector<int> valid_counts(n, -1);\n    for (const auto& req : requirements) {\n        int endi = req[0];\n        int cnti = req[1];\n        if (cnti <= MAX_INVERSIONS) {\n            valid_counts[endi] = cnti;\n        }\n    }\n\n    vector<vector<int>> valid_dp(n + 1, vector<int>(MAX_INVERSIONS + 1, 0));\n    valid_dp[0][0] = 1;\n\n    for (int i = 1; i <= n; ++i) {\n        for (int k = 0; k <= MAX_INVERSIONS; ++k) {\n            valid_dp[i][k] = 0;\n            for (int j = 0; j <= min(i - 1, k); ++j) {\n                valid_dp[i][k] = (valid_dp[i][k] + valid_dp[i - 1][k - j]) % MOD;\n            }\n        }\n        if (valid_counts[i - 1] != -1) {\n            for (int k = 0; k <= MAX_INVERSIONS; ++k) {\n                if (k != valid_counts[i - 1]) {\n                    valid_dp[i][k] = 0;\n                }\n            }\n        }\n    }\n\n    return valid_dp[n][valid_counts[n - 1] == -1 ? 0 : valid_counts[n - 1]];\n}\n};",
    "submit_ts": "1719067730",
    "subm_id": "1296737946"
}