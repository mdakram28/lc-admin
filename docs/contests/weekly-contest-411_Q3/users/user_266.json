{
    "username": "gcasd001",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long int\n#define db double\n#define ldb long double\n#define int128 __int128_t\n#define fr(x) freopen(x,\"r\",stdin);\n#define fw(x) freopen(x,\"w\",stdout);\n#define mst(x,a) memset(x,a,sizeof(x));\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fi first\n#define se second\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define yes std::cout << \"Yes\\n\"\n#define no std::cout << \"No\\n\"\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#ifdef LOCAL\n#include \"leetcode.h\"\n#endif // LOCAL\ntemplate <typename T> int si(const T &x) { return x.size(); }\ntemplate <typename T, typename S> inline bool chmax(T &a, const S &b) { if (a < b) { a = b; return true; } return false; }\ntemplate <typename T, typename S> inline bool chmin(T &a, const S &b) { if (b < a) { a = b; return true; } return false; }\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\nconst int N = 100005;\n\nint f[N][10][10];\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n      if (n == 1) {\n        rrep(i, 10) {\n          if (i % k == 0) {\n            return to_string(i);\n          }\n        }\n      }\n      memset(f, 0, sizeof(f));\n      vector<int> res(n);\n      for (int i = 0, now = 1; i < n; i++) {\n        now %= k;\n        res[i] = now;\n        now = now * 10;\n      }\n      int m = (n + 1) / 2;\n      vector<int> g(10);\n      rrep(i,  m) {\n        int t = 0;\n        if (i == m - 1 && n & 1) {\n          t = res[i];\n        } else {\n          t = (res[i] + res[n-1-i]) % k;\n        }\n        vector<int> ng(10);\n        if (i == m - 1) {\n          rep(x, 10) {\n            f[i][x][x*t%k] = 1;\n            ng[x*t%k] = 1;\n          }\n        } else {\n          rep(j, k) {\n            if (!g[j]) continue;\n            rep(x, 10) {\n              int r = (j + x * t) % k;\n              f[i][x][r] = 1;\n              ng[r] = 1;\n            }\n          }\n        }\n        swap(g, ng);\n      }\n    string ans(n,'0');\n      int r = 0;\n      rep(i, m) {\n        rrep(x, 10) {\n          if (f[i][x][r]) {\n            ans[i] = '0' + x;\n            ans[n-1-i] = '0' + x;\n            r = (r - (res[i] + res[n-1-i]) * x % k + k) % k;\n              break;\n          }\n        }\n      }\n      return ans;\n    }\n};\n",
    "submit_ts": "1723951398",
    "subm_id": "556405181"
}