{
    "username": "Harsh_kunwar",
    "submission": "class Solution\n{\npublic:\n    int numberOfPermutations(int n, vector<vector<int>> &reqs)\n    {\n        const int MOD = 1e9 + 7;\n\n        set<pair<int,int>> r;\n        for (auto &it : reqs)\n        {\n            r.insert({it[0] + 1 ,it[1]});\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(401 + 1, 0));\n        dp[0][0] = 1;\n        long long  ans = 0;\n        for (int len = 1; len <= n; len++)\n        {\n            for (int inv = 0; inv <=401; inv++)\n            {\n                for (int pos = 0; pos < len; pos++)\n                {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0)\n                    {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n            auto it=r.lower_bound({len,0});\n\n            if (it!=r.end() && (*it).first==len)\n            {\n                int targetInv =(*it).second ;\n                for (int inv = 0; inv <=400; inv++)\n                {\n                    if (inv != targetInv)\n                    {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n        for(int i=0;i<=400;i++){\n            ans=(ans+dp[n][i])%MOD;\n        }\n\n\n        return ans;\n    }\n};",
    "submit_ts": 1719070977.0
}