{
    "username": "FxxkLCImNotCheating",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    \n    public int countOfPairs(int[] nums) {\n        int max = 0;\n        \n        for (int num : nums)\n        {\n            max = Math.max(num, max);\n        }\n        \n        return (int)helper(nums, new int[nums.length], 0, 0, new Long[nums.length][max + 1]);\n    }\n    \n    long helper(int[] nums, int[] increases, int pos, int cur, Long[][] memo)\n    {   \n        if (pos == nums.length)\n        {\n            int dec = nums[0] - increases[0];\n            boolean isValid = true;\n            \n            for (int i = 1; i < nums.length; i++)\n            {\n                int num = nums[i] - increases[i];\n                \n                if (num > dec)\n                {\n                    isValid = false;\n                    break;\n                }\n                \n                dec = num;\n            }\n            \n            return isValid ? 1 : 0;\n        }\n        \n        if (memo[pos][cur] != null)\n        {\n            return memo[pos][cur];\n        }\n        \n        memo[pos][cur] = 0l;\n        \n        for (int i = cur; i <= nums[pos]; i++)\n        {\n            if (pos > 0 && nums[pos - 1] - increases[pos - 1] < nums[pos] - i)\n            {\n                continue;\n            }\n            \n            increases[pos] = i;\n            memo[pos][cur] += helper(nums, increases, pos + 1, i, memo);\n            memo[pos][cur] %= MOD;\n        }\n        \n        return memo[pos][cur];\n    }\n}",
    "submit_ts": "1723346006",
    "subm_id": "1351568086"
}