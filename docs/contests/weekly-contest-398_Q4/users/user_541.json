{
    "username": "mcnoodle",
    "submission": "class Solution {\n    //int res = 0;\n    Map<String, Integer> map = new HashMap<>();\n    public int waysToReachStair(int k) {\n        return dfs(k, 1, false, 0);\n    }\n    int dfs(int k , long cur, boolean isDown, int jump){\n        if(cur < 0 || cur > k +1 ){\n            return 0;\n        }\n        String key = \"\" + cur + isDown + jump;\n        if(map.containsKey(key)){\n            return map.get(key);\n        }\n        int res = 0;\n        if(k == cur){\n            res++;\n        }\n        res += dfs(k, cur + (long)Math.pow(2, jump), false, jump+1);\n        if(!isDown){\n           res += dfs(k, cur -1, true, jump);\n        }\n        map.put(key,res);\n        return res;\n    }\n}",
    "submit_ts": 1716088877.0
}