{
    "username": "kumarapoorv617",
    "submission": "\ntemplate <typename T>\nstruct BIT {\n\tint N;\n\tvector<T> tree;\n\n\tBIT(int n_) : N(n_ + 1) {\n\t\ttree.resize(N);\n\t}\n\n\tvoid update(int ind, T val) {\n\t\tfor(++ind ; ind < N ; ind += ind & -ind)\ttree[ind] += val;\n\t}\n\n\tT query(int in) {\n\t\tT sum = 0;\n\t\tfor(++in ; in > 0 ; in -= in & -in)\tsum += tree[in];\n\t\treturn sum;\n\t}\n\n\tT query(int l, int r) {\n\t\treturn query(r) - query(l - 1);\n\t}\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& A, vector<vector<int>>& queries) {\n        int N = A.size();\n        BIT<int> bit(N + 1);\n        vector<int> B(N);\n        for(int i = 1 ; i < N - 1 ; ++i) {\n            B[i] = A[i] > A[i - 1] && A[i] > A[i + 1];\n            bit.update(i, B[i]);\n        }\n        vector<int> sol;\n        for(auto &v: queries) {\n            if(v[0] == 1) {\n                if(v[2] - v[1] <= 1) {\n                    sol.push_back(0);\n                }\n                else sol.push_back(bit.query(v[1] + 1, v[2] - 1));\n            } else {\n                A[v[1]] = v[2];\n                for(int x = max(1, v[1] - 1) ; x < min(N - 1, v[1] + 2) ; ++x) {\n                    bit.update(x, -B[x]);\n                    B[x] = A[x] > A[x - 1] && A[x] > A[x + 1];\n                    bit.update(x, B[x]);\n                }\n            }\n        }\n        return sol;\n    }\n};",
    "submit_ts": 1718505905.0
}