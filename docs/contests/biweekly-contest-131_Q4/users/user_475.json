{
    "username": "9bang-15bian-shi",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& q) {\n        vector<bool> ans;\n        map<int, int> mp;\n        for (vector<int> x : q) {\n            if (x[0] == 1) {\n                if (mp.empty()) {\n                    mp[x[1]] = x[1];\n                    continue;\n                }\n                auto it = mp.upper_bound(x[1]);\n                if (it == mp.end()) {\n                    --it;\n                    mp[x[1]] = max(x[1] - it->first, it->second);\n                } else if (it == mp.begin()) {\n                    if (it->second == it->first) {\n                        int pre = x[1];\n                        int z = x[1];\n                        while (it != mp.end()) {\n                            it->second = max(it->first - pre, z);\n                            pre = it->first;\n                            z = it->second;\n                            ++it;\n                        } \n                    } \n                    mp[x[1]] = x[1];\n                } else {\n                    int a = it->first;\n                    int b = it->second;\n                    --it;\n                    if (b == a - it->first && it->second < a - it->first) {\n                        int y = max(it->second, x[1] - it->first);\n                        ++it;\n                        int pre = x[1];\n                        int z = y;\n                        while (it != mp.end()) {\n                            it->second = max(it->first - pre, z);\n                            pre = it->first;\n                            z = it->second;\n                            ++it;\n                        } \n                        mp[x[1]] = y;   \n                    } else mp[x[1]] = max(it->second, x[1] - it->first);\n                }\n            } else {\n                if (x[1] < x[2]) {\n                    ans.push_back(false);\n                    continue;\n                }\n                auto it = mp.upper_bound(x[1]);\n                if (it == mp.begin()) {\n                    ans.push_back(x[1] >= x[2]);\n                } else {\n                    --it;\n                    ans.push_back(max(it->second, x[1] - it->first) >= x[2]);\n                }\n            }\n        }\n        //for (auto [x, y] : mp) cout << x << \" \" << y << endl;\n        //cout << endl;\n        return ans;\n    }\n};",
    "submit_ts": 1716652631.0
}