{
    "username": "iN_siDious",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        m=len(A)\n        ans=sys.maxsize\n        def solve(arr):\n            n=len(arr)\n            minsum = maxsum = arr[0][0] + arr[0][1]\n            mindiff = maxdiff = arr[0][0] - arr[0][1]\n            for i in range(1,n):\n                ssum = arr[i][0] + arr[i][1]\n                diff = arr[i][0] - arr[i][1]\n                if (ssum < minsum):\n                    minsum = ssum\n                elif (ssum > maxsum):\n                    maxsum = ssum\n                if (diff < mindiff):\n                    mindiff = diff\n                elif (diff > maxdiff):\n                    maxdiff = diff\n            # print(arr,max(maxsum - minsum, maxdiff - mindiff))\n            return max(maxsum - minsum, maxdiff - mindiff)\n        V = [0 for i in range(m)]\n        V1 = [0 for i in range(m)]\n        for i in range(m):\n            V[i] = (A[i][0] + A[i][1],i)\n            V1[i] = (A[i][0] - A[i][1],i)\n        V.sort()\n        V1.sort()\n        for _,idx in [V[0],V[-1],V1[0],V1[-1]]:\n            arr=[]\n            for i in range(m):\n                if i==idx: continue\n                arr.append(A[i])\n            ans=min(ans,solve(arr))\n        return ans"
}