{
    "username": "ASHIS_MISHRA",
    "submission": "class Solution {\n    private void reverse(long[] array) {\n        for (int i = 0; i < array.length / 2; i++) {\n            long temp = array[i];\n            array[i] = array[array.length - 1 - i];\n            array[array.length - 1 - i] = temp;\n        }\n    }\n    \n    public long minimumCost(int m, int n, int[] horicost, int[] verticost) {\n        long[] horizontalCut = new long[horicost.length];\n        long[] verticalCut = new long[verticost.length];\n        \n        for (int i = 0; i < horicost.length; i++) {\n            horizontalCut[i] = horicost[i];\n        }\n        \n        for (int i = 0; i < verticost.length; i++) {\n            verticalCut[i] = verticost[i];\n        }\n        \n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverse(horizontalCut);\n        reverse(verticalCut);\n\n        long hp = 1;\n        long vp = 1;\n        int hc = 0;\n        int vc = 0;\n\n        long cost = 0;\n\n        while (hc < horizontalCut.length && vc < verticalCut.length) {\n            if (horizontalCut[hc] <= verticalCut[vc]) {\n                cost = cost + (verticalCut[vc] * hp);\n                vc++;\n                vp++;\n            } \n            else {\n                cost = cost + (horizontalCut[hc] * vp);\n                hc++;\n                hp++;\n            }\n        }\n        \n        while (hc < horizontalCut.length) {\n            cost = cost + (horizontalCut[hc] * vp);\n            hc++;\n            hp++;\n        }\n        \n        while (vc < verticalCut.length) {\n            cost = cost + (verticalCut[vc] * hp);\n            vc++;\n            vp++;\n        }\n\n        return cost;\n    }\n}\n",
    "submit_ts": "1720925947",
    "subm_id": "1320271264"
}