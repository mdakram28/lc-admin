{
    "username": "Cmes",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> C;\n        for (int i = 0; i < horizontalCut.size(); ++i) {\n            C.push_back({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.size(); ++i) {\n            C.push_back({verticalCut[i], 1});\n        }\n        sort(C.rbegin(), C.rend());\n        \n        long res = 0;\n        long w = 1, h = 1;\n        for (auto& [c, type] : C) {\n            if (type == 0) {\n                res += 1L * w * c;\n                h++;\n            } else {\n                res += 1L * h * c;\n                w++;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925170",
    "subm_id": "1320245392"
}