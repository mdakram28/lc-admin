{
    "username": "CuteTN",
    "submission": "class IntervalTree {\n  constructor() {\n    /** @type {number[]} */\n    this.nums;\n    this.vals = Array(4e5).fill(0);\n  }\n\n  build(nums) {\n    this.nums = nums;\n    this.init(0, 0, nums.length - 1);\n  }\n\n  init(index, l, r) {\n    if (l == r) {\n      this.vals[index] = this.nums[l];\n      return;\n    }\n\n    const mid = Math.floor((l + r) / 2);\n    this.init(2 * index + 1, l, mid);\n    this.init(2 * index + 2, mid + 1, r);\n    this.vals[index] = this.vals[2 * index + 1] & this.vals[2 * index + 2];\n  }\n\n  get(ql, qr, index = 0, l, r) {\n    if (ql > r || qr < l) return -1;\n    if (ql <= l && r <= qr) return this.vals[index];\n\n    const mid = Math.floor((l + r) / 2);\n    return (\n      this.get(ql, qr, 2 * index + 1, l, mid) &\n      this.get(ql, qr, 2 * index + 2, mid + 1, r)\n    );\n  }\n}\n\nlet it = new IntervalTree();\n\n/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar countSubarrays = function (nums, k) {\n  let n = nums.length;\n\n  let ll = 0;\n  let rr = -1;\n  let res = 0;\n\n  it.build(nums);\n\n  // function bs(i) {\n  //   ll = -1;\n  //   rr = -2;\n\n  //   let l = 0;\n  //   let r = i;\n\n  //   while (l <= r) {\n  //     let m = (l + r) >> 1;\n  //     let a = it.get(m, i, 0, 0, n - 1);\n  //     if (a <= k) {\n  //       if (a == k) rr = m;\n  //       l = m + 1;\n  //     } else {\n  //       r = m - 1;\n  //     }\n  //   }\n\n  //   l = 0;\n  //   r = i;\n  //   while (l <= r) {\n  //     let m = (l + r) >> 1;\n  //     let a = it.get(m, i, 0, 0, n - 1);\n  //     if (a >= k) {\n  //       if (a == k) ll = m;\n  //       r = m - 1;\n  //     } else {\n  //       l = m + 1;\n  //     }\n  //   }\n  // }\n\n  for (let i = 0; i < n; ++i) {\n    while (ll <= i && it.get(ll, i, 0, 0, n - 1) < k) ++ll;\n    while (rr + 1 <= i && it.get(rr + 1, i, 0, 0, n - 1) <= k) ++rr;\n    res += rr - ll + 1;\n  }\n\n  return res;\n};",
    "submit_ts": "1720278848",
    "subm_id": "1311726844"
}