{
    "username": "sheepforever",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> delta(n);\n        for (int i = 0; i < n; ++i) {\n            delta[i] = nums[i] - target[i];\n        }\n        long long ans = 0;\n        vector<int> cur;\n        for (int i = 0; i < n; ++i) {\n            if (delta[i] == 0) {\n                ans += solve(cur);\n                cur.clear();\n                continue;\n            }\n            if (!cur.empty() && sign(delta[i]) != sign(cur.back())) {\n                ans += solve(cur);\n                cur.clear();\n            }\n            cur.push_back(delta[i]);\n        }\n        ans += solve(cur);\n        return ans;\n    }\n    \n    long long solve(vector<int>& s) {\n        for (int& v : s) {\n            v = abs(v);\n        }\n        long long ret = 0;\n        vector<int> cur;\n        for (int v : s) {\n            int offer = 0;\n            if (!cur.empty()) {\n                offer = cur.back();\n            }\n            while (cur.size() && v <= cur.back()) {\n                cur.pop_back();\n            }\n            cur.push_back(v);\n            ret += max(0, v - offer);\n        }\n        return ret;\n    }\n    \n    int sign(int x) {\n        return x > 0 ? 1 : (x < 0 ? -1 : 0);\n    }\n};",
    "submit_ts": "1721531494",
    "subm_id": "1327962350"
}