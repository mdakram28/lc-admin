{
    "username": "DhananjayRaj23",
    "submission": "class Solution {\npublic:\n\n        long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        unordered_map<long long, long long> previousResults;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> currentResults;\n\n            if (nums[i] == k) {\n                ++count;\n            }\n\n            currentResults[nums[i]] = 1;\n\n            for (const auto& [value, frequency] : previousResults) {\n                long long andResult = value & nums[i];\n\n                if (andResult == k) {\n                    count += frequency;\n                }\n\n                currentResults[andResult] += frequency;\n            }\n\n            previousResults = currentResults;\n        }\n\n        return count;\n    }\n        \n};",
    "submit_ts": "1720278354",
    "subm_id": "1311705456"
}