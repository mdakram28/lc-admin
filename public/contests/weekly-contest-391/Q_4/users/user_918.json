{
    "username": "Vsoni27",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size(); int minDist = INT_MAX;\n        map<int, int> sumcount, diffcount;\n        for(int i=0; i<n; i++){\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            sumcount[sum]++;\n            diffcount[diff]++;\n        }\n        for(int i=0; i<n; i++){\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            sumcount[sum]--;\n            diffcount[diff]--;\n            if(sumcount[sum] == 0) sumcount.erase(sum);\n            if(diffcount[diff] == 0) diffcount.erase(diff);\n            int maxsum = sumcount.rbegin()->first, minsum = sumcount.begin()->first;\n            int maxdiff = diffcount.rbegin()->first, mindiff = diffcount.begin()->first;\n            int maximum = max(maxsum - minsum, maxdiff - mindiff);\n            minDist = min(minDist, maximum);\n            sumcount[sum]++;\n            diffcount[diff]++;\n        }\n        return minDist;\n    }\n};"
}