{
    "username": "skyflaming",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        int n = A.size();\n        vector<vector<int> > pre(n), suf(n);\n        auto upd = [&](vector<int> &dst, vector<int> &src) {\n            dst[0] = min(dst[0], src[0]);\n            dst[1] = max(dst[1], src[1]);\n            dst[2] = min(dst[2], src[2]);\n            dst[3] = max(dst[3], src[3]);\n        };\n        for(int i = 0; i < n; ++i) {\n            int x = A[i][0] + A[i][1], y = A[i][0] - A[i][1];\n            A[i][0] = x;\n            A[i][1] = y;\n            suf[i] = {x, x, y, y};\n            if(!i) {\n                pre[i] = suf[i];\n            } else {\n                pre[i] = pre[i - 1];\n                upd(pre[i], suf[i]);\n            }\n        }\n        for(int i = n - 2; i >= 0; --i)\n            upd(suf[i], suf[i + 1]);\n        int ans = INT_MAX;\n        for(int i = 0; i < n; ++i) {\n            static vector<int> cur;\n            if(!i) {\n                cur = suf[i + 1];\n            } else if(i + 1 == n) {\n                cur = pre[i - 1];\n            } else {\n                cur = pre[i - 1];\n                upd(cur, suf[i + 1]);\n            }\n            ans = min(ans, max(cur[1] - cur[0], cur[3] - cur[2]));\n        }\n        return ans;\n    }\n};"
}