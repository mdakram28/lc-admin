{
    "username": "876pol",
    "submission": "using ll = long long;\ntemplate <class T>\nusing vec = vector<T>;\n\n#define FOR(i, s, e) for (ll i = (ll)s; i < (ll)e; i++)\n#define CFOR(i, s, e) for (ll i = (ll)s; i <= (ll)e; i++)\n#define TRAV(a, c) for (const auto &a : c)\n#define dbg(x) cerr << \"ln\" << __LINE__ << \": \" << #x << \" = \" << x << endl\n\n#define MOD 1000000007\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>> &requirements) {\n        sort(requirements.begin(), requirements.end());\n        vec<int> c(n, -1);\n        TRAV(e, requirements) c[e[0]] = e[1];\n        vec<vec<ll>> dp(n, vec<ll>(500));\n        dp[0][0] = 1;\n        if (c[0] > 0) return 0;\n        FOR(i, 1, n) {\n            CFOR(j, 0, i) {\n                FOR(k, 0, 500) {\n                    if (k + j < 500) {\n                        dp[i][k + j] += dp[i - 1][k];\n                        dp[i][k + j] %= MOD;\n                    }\n                }\n            }\n            if (c[i] != -1) {\n                FOR(k, 0, 500) {\n                    if (k != c[i]) dp[i][k] = 0;\n                }\n            }\n        }\n        return *max_element(dp[n - 1].begin(), dp[n - 1].end());\n    }\n};",
    "submit_ts": 1719068326.0
}