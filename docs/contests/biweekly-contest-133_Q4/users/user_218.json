{
    "username": "KUMAR_ROHAN",
    "submission": "class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        final int MOD = 1000000007;\n        int jyada = 400;\n        long[][] dynamic = new long[n + 1][jyada + 1];\n        dynamic[0][0] = 1;\n        int[] rohan = new int[n];\n        Arrays.fill(rohan, -1);\n        for (int[] req : requirements) {\n            rohan[req[0]] = req[1];\n        }\n        for (int x = 0; x < n; x++) {\n            for (int y = 0; y <= jyada; y++) {\n                if (dynamic[x][y] == 0) continue;\n                for (int z = 0; z <= x; z++) {\n                    int dilkhush = y + z;\n                    if (dilkhush > jyada) break;\n                    \n                    dynamic[x + 1][dilkhush] = (dynamic[x + 1][dilkhush] + dynamic[x][y]) % MOD;\n                }\n            }\n            if (rohan[x] != -1) {\n                for (int y = 0; y <= jyada; y++) {\n                    if (y != rohan[x]) {\n                        dynamic[x + 1][y] = 0;\n                    }\n                }\n            }\n        }\n        long result = 0;\n        for (int y = 0; y <= jyada; y++) {\n            result = (result + dynamic[n][y]) % MOD;\n        }\n\n        return (int) result;\n        \n    }\n}",
    "submit_ts": 1719069660.0
}