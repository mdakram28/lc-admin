{
    "username": "grainmad",
    "submission": "template<class t,class u> ostream& operator<<(ostream& os,const pair<t,u>& p) {\n    return os<<'['<<p.first<<\", \"<<p.second<<']';\n}\ntemplate<class t> ostream& operator<<(ostream& os,const vector<t>& v) {\n    os<<'['; int s = 1;\n    for(auto e:v) { if (s) s = 0; else os << \", \"; os << e; }\n    return os<<']';\n}\ntemplate<class t,class u> ostream& operator<<(ostream& os,const map<t,u>& mp){\n    os<<'{'; int s = 1;\n    for(auto [x,y]:mp) { if (s) s = 0; else os << \", \"; os<<x<<\": \"<<y; }\n    return os<<'}';\n}\n\nenum MODE { OR, AND, GCD, LCM };\nenum BOUND { L, R };\n\n\nclass Solution {\npublic:\n    long long logtrick(vector<int>& a, MODE mode, int k) {\n        long long ans = 0;\n        int n = a.size();\n        auto opt = [&](int x, int y) {\n            if (mode == OR) return x|y;\n            if (mode == AND) return x&y;\n            if (mode == GCD) return gcd(x, y);\n            if (mode == LCM) return lcm(x, y);\n            return -1;\n        };\n        map<int,pair<int,int>> mp;\n        for (int i=0; i<n; i++) {\n            map<int,pair<int,int>> t;\n            t[a[i]] = {i,i};\n            for (auto [x, y]:mp) {\n                int v = opt(a[i], x);\n                if (t.count(v)) {\n                    t[v].first = min(t[v].first, y.first);\n                    t[v].second = max(t[v].second, y.second);\n                } else {\n                    t[v] = y;\n                }\n            }\n            mp = t;\n            // cout << i << \" \" << mp << endl;\n            if (mp.count(k)) {\n                auto [x, y] = mp[k];\n                ans += y-x+1;\n            }\n        }\n        return ans;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        return logtrick(nums, AND, k);\n    }\n};",
    "submit_ts": "1720277609",
    "subm_id": "544557735"
}