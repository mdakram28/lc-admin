{
    "username": "hero777",
    "submission": "class Solution {\npublic:\n    class TrieNode{\n        public:\n        TrieNode* childNode[26];\n        int cost;\n        TrieNode()\n        {\n            cost = 1e6; \n            for (int i = 0; i < 26; i++) {\n                childNode[i] = NULL;\n            }\n        }\n\n    };\n    void dfs(int i, string &target, TrieNode* head, vector<int> &cc){\n        if(cc[i] != 1e9)\n            return;\n        TrieNode* temp = head;\n        for(int j = i; j < target.length(); j++){\n            if(temp->childNode[target[j]-'a'] != NULL)\n                temp = temp->childNode[target[j]-'a'];\n            else\n                break;\n            if(temp->cost != 1e6){\n                dfs(j+1, target, head, cc);\n                if(cc[j+1] < 1e9)\n                    cc[i] = min(cc[i], temp->cost + cc[j+1]);\n            }\n        }\n        if(cc[i] == 1e9)\n            cc[i]++;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* head = new TrieNode();\n        for(int i = 0; i < words.size(); i++){\n            string word = words[i];\n            TrieNode* temp = head;\n            for(char c: word){\n                if(temp->childNode[c-'a'] == NULL)\n                    temp->childNode[c-'a'] = new TrieNode();\n                temp = temp->childNode[c-'a'];\n            }\n            temp->cost = min(temp->cost, costs[i]);\n\n        }\n        vector<int> cc(target.size()+1, 1e9);\n        cc.back() = 0;\n        dfs(0, target, head, cc);\n        if(cc[0] < 1e9)\n            return cc[0];\n        return -1;\n    }\n};",
    "submit_ts": "1720321989",
    "subm_id": "1312337728"
}