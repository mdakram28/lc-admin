{
    "username": "Pranjal Singh",
    "submission": "#define ll long long\nll dp1[500][500][500];\nclass Solution {\npublic:\n    ll mnm=-1e14;\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n=board.size(),m=board[0].size();\n        vector<vector<ll>> mx(n,vector<ll>(m,mnm));\n        for(int j=0;j<m;j++) mx[0][j]=board[0][j];\n        for(int i=1;i<n;i++){\n            for(int j=0;j<m;j++) mx[i][j]=max((ll)board[i][j],mx[i-1][j]);\n        }\n\n       for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++){\n            for(int k=0;k<m;k++) dp1[i][j][k]=mnm;\n        }\n       }\n        for(int i=1;i<n;i++){\n            for(int j=0;j<m;j++){\n                for(int k=j+1;k<m;k++){\n                    dp1[i][j][k]=max({dp1[i-1][j][k],board[i][j]+mx[i-1][k],board[i][k]+mx[i-1][j]});\n                    // cout<<i<<\" \"<<j<<\" \"<<k<<\" \"<<dp1[i][j][k]<<'\\n';\n                }\n            }\n        }\n\n        ll ans=mnm;\n        for(int i=2;i<n;i++){\n            vector<multiset<ll>> b(m);\n            for(int j=0;j<m;j++){\n                for(int k=j+1;k<m;k++)  b[j].insert(dp1[i-1][j][k]);\n            }\n\n            for(int x=0;x<m;x++){\n                for(int j=0;j<m;j++){\n                    if(j==x) continue;\n                    if(x>j){\n                        auto it=b[j].find(dp1[i-1][j][x]);\n                        b[j].erase(it);\n                    }\n                    if(b[j].size()){\n                        auto pt=b[j].end();\n                        pt--;\n                        ans=max(ans,(*pt)+board[i][x]);\n                    }\n                    if(x>j){\n                        b[j].insert(dp1[i-1][j][x]);\n                    }\n                }\n            }\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": "1723907550",
    "subm_id": "1359113029"
}