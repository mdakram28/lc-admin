{
    "username": "harshal_02",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size();\n        n++;\n        int m=edges2.size();\n        m++;\n        vector<vector<int>>adj(n);\n        for(const auto&it : edges1) {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n         vector<vector<int>>adj2(m);\n        for (const auto&it : edges2) {\n            adj2[it[0]].push_back(it[1]);\n            adj2[it[1]].push_back(it[0]);\n        }\n\n        auto dfs = [](const vector<vector<int>>& adj, int start, int&far_node) {\n            int n=adj.size();\n            vector<int>v(n, -1);\n            function<void(int, int)>func = [&](int x, int d) {\n                v[x]=d;\n                if(d > v[far_node]){\n                    far_node=x;\n                }\n                for(int it : adj[x]){\n                    if(v[it]==-1){\n                        func(it,d+1);\n                    }\n                }\n            };\n            far_node= start;\n            func(start, 0);\n            return v[far_node];\n        };\n        int a=0;\n        int b=0;\n        dfs(adj,0,a);\n        dfs(adj2,0,b);\n        int dm=dfs(adj,a,a);\n        int dm2=dfs(adj2,b,b);\n        int ans=max(dm,dm2);\n        int res=(dm+1)/2;\n        int res2=(dm2+1)/2;\n        int tot_res=res+res2;\n        tot_res++;\n        ans=max(tot_res,ans);\n        return ans;\n    }\n};",
    "submit_ts": "1719717397",
    "subm_id": "1304390458"
}