{
    "username": "hhhhyf",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(a) a.begin(), a.end()\nvoid print() { cout << '\\n'; }\ntemplate <typename T, typename...Args>\nvoid print(T t, Args...args) { cout << t << ' '; print(args...); }\nusing ll = long long;\nconst int N = 100010;\n\nint dir[4][2] = {\n    {1, 0}, {0, 1}, {-1, 0}, {0, -1}\n};\n\ntemplate <typename T> bool chmax(T &x, T y) { if (y > x) { x = y; return true; } return false; }\ntemplate <typename T> bool chmin(T &x, T y) { if (y < x) { x = y; return true; } return false; }\n\ntemplate <typename T = int>\nvector<T> readVector(int n) {\n    vector<T> a(n);\n    for(T &x: a) cin >> x;\n    return a;\n} \n\nint norm (int x) {\n    return x % 7;\n}\n\nint po7[N];\n\nint init = []() {\n    po7[0] = 1;\n    for (int i = 1; i < N; i ++) {\n        po7[i] = norm(po7[i - 1] * 10);\n    }\n    return 0;\n}();\n\nclass Solution {\npublic:\n    bool pal (int x) {\n        auto s = to_string(x);\n        int n = s.size();\n        for (int i = 0, j = n - 1; i < j; i ++, j --) {\n            if (s[i] != s[j]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    string largestPalindrome(int n, int k) {\n        if (n < 4) {\n            vector<int> po(n + 1);\n            po[0] = 1;\n            for (int i = 1; i <= n; i ++) {\n                po[i] = po[i - 1] * 10;\n            }\n            int ans = 0;\n            for (int i = po[n] - 1; i >= po[n - 1]; i --) {\n                if (pal(i) && i % k == 0) {\n                    return to_string(i);\n                }\n            }\n        }\n        auto s = string(n, '9');\n        if (k == 1 || k == 3 || k == 9) {\n            return s;\n        }\n        if (k == 2) {\n            s[0] = s.back() = '8';\n            return s;\n        }\n        if (k == 4) {\n            s[0] = s.back() = '8';\n            s[1] = s[s.size() - 2] = '8';\n            return s;\n        }\n        if (k == 5) {\n            s[0] = s.back() = '5';\n            return s;\n        } \n        if (k == 6) {\n            s[0] = s.back() = '8';\n            if (n & 1) {\n                s[n / 2] = '8';\n            } else {\n                s[n / 2] = s[n / 2 - 1] = '7';\n            }\n            return s;\n        }\n        if (k == 8) {\n            for (int i = 0; i < 3; i ++) {\n                s[i] = s[n - i - 1] = '8';\n            }\n            return s;\n        }\n        if (n % 2 == 1) {\n            int m = n / 2;\n            int cur = norm(po7[n] - 1);\n            while (cur != 0) {\n                cur = norm(cur - po7[m]);\n                s[m] --;\n            }\n        } else {\n            int m = n / 2;\n            int cur = norm(po7[n] - 1);\n            while (cur != 0) {\n                cur = norm(cur - po7[m] - po7[m - 1]);\n                s[m] --;\n                s[m - 1] --;\n            }\n        }\n        return s;\n    }\n};",
    "submit_ts": "1723951734",
    "subm_id": "556407335"
}