{
    "username": "AroraInsight",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        long long subarrayCount = 0;\n\n        std::unordered_map<long long, long long> previousMap;\n\n        for (int i = 0; i < n; i++) {\n            std::unordered_map<long long, long long> currentMap;\n            if (nums[i] == k) {\n                subarrayCount++;\n            }\n            currentMap[nums[i]] = 1;\n\n            ucc(previousMap, currentMap, nums[i], k, subarrayCount);\n\n            previousMap = currentMap;\n        }\n        return subarrayCount;\n    }\n\nprivate:\n    void ucc(unordered_map<long long, long long>& previousMap,\n                                  unordered_map<long long, long long>& currentMap,\n                                  int currentNum, int k, long long& subarrayCount) {\n                                  \n        for (const auto& [prevNum, frequency] : previousMap) {\n            long long result = prevNum & currentNum;\n            if (result == k) {\n                subarrayCount += frequency;\n            }\n            currentMap[result] += frequency;\n        }\n    }\n};",
    "submit_ts": "1720279253",
    "subm_id": "1311743846"
}