{
    "username": "friedall",
    "submission": "#include <iostream>\n#define ll long long\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector <int> A;\n    vector <ll> st;\n    void build(ll id, ll l, ll r) {\n        if (l == r) {\n            if (A[l] > A[l+1] && A[l-1] < A[l]) st[id] = 1;\n            else st[id] = 0;\n            return;\n        }\n        ll mid = (l+r)/2;\n        build(id*2, l, mid);\n        build(id*2+1, mid+1, r);\n        st[id] = st[id*2] + st[id*2+1];\n    }\n    void update(ll id, ll l, ll r, ll q) {\n        if (l == r) {\n            if (A[l] > A[l+1] && A[l-1] < A[l]) st[id] = 1;\n            else st[id] = 0;\n            return;\n        }\n        ll mid = (l+r)/2;\n        if (q <= mid) update(id*2, l, mid, q);\n        else update(id*2+1, mid+1, r, q);\n        st[id] = st[id*2] + st[id*2+1];\n    }\n    ll query(ll id, ll l, ll r, ll ql, ll qr) {\n        if (qr < l || r < ql) return 0;\n        else if (ql <= l && r <= qr) return st[id];\n        ll mid = (l+r)/2;\n        return query(id*2, l, mid, ql, qr) + query(id*2+1, mid+1, r, ql, qr);\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        ll n = nums.size();\n        vector <int> V;\n        A.clear();\n        st.clear();\n        for (int i=0; i<n; ++i) A.push_back(nums[i]);\n        for (int i=0; i<4*n; ++i) st.push_back(0);\n        build(1, 1, n-2);\n        for (auto q : queries) {\n            if (q[0] == 1) {\n                if (q[2]-q[1] < 2) V.push_back(0);\n                else V.push_back(query(1, 1, n-2, q[1]+1, q[2]-1));\n            }\n            else {\n                A[q[1]] = q[2];\n                if (q[1]-1 >= 1 && q[1]-1 <= n-2) update(1, 1, n-2, q[1]-1);\n                if (q[1] >= 1 && q[1] <= n-2) update(1, 1, n-2, q[1]);\n                if (q[1]+1 >= 1 && q[1]+1 <= n-2) update(1, 1, n-2, q[1]+1);\n            }\n        }\n        return V;\n    }\n};",
    "submit_ts": 1718506075.0
}