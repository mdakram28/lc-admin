{
    "username": "Hao123",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        int n = s.size(), m = q.size();\n        vector<int> s0(n + 1), s1(n + 1);\n        for(int i = 1; i <= n; i++) {\n            s0[i] = s0[i - 1];\n            s1[i] = s1[i - 1];\n            if(s[i - 1] == '0') s0[i]++;\n            else s1[i]++;\n        }\n        vector<ll> loc(n + 1);\n        for(int i = 1; i <= n; i++) {\n            int l = i, r = n;\n            while(l < r) {\n                int mid = (l + r + 1) >> 1;\n                int t0 = s0[mid] - s0[i - 1];\n                int t1 = s1[mid] - s1[i - 1];\n                if(t0 > k && t1 > k) r = mid - 1;\n                else l = mid;\n            }\n            loc[i] = l;\n        }\n        \n        //loc[j] <= r ans += loc[j] - j + 1\n        //else        ans += r - j + 1\n        vector<ll> ss(n + 1);\n        for(int i = 1; i <= n; i++) ss[i] = ss[i - 1] + loc[i] - i + 1;\n        vector<ll> ans;\n        for(auto& c: q) {\n            int l1 = c[0] + 1, r1 = c[1] + 1;\n            int l = l1 - 1, r = r1;\n            while(l < r) {\n                int mid = (l + r + 1) >> 1;\n                if(loc[mid] > r1) r = mid - 1;\n                else l = mid;\n            }\n            ll tt = ss[l] - ss[l1 - 1];\n            ll num = r1 - l;\n            \n            tt += num * (num + 1) / 2;\n            ans.push_back(tt);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952383",
    "subm_id": "556411295"
}