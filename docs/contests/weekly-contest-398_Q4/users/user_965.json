{
    "username": "lyronly",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    vector<vector<ll>> dp;\n    ll dfs(int m, int n) {\n        if (m == n) return 1;\n        else if (m == 1) return n;\n        else {\n            if (dp[m][n] != INT_MAX) return dp[m][n];\n            ll& cur = dp[m][n];\n            cur = dfs(m, n - 1) + dfs(m - 1, n - 1);\n            return cur;\n        }\n    }\n    int waysToReachStair(int k) {\n        if (k == 0) return 2;\n        else if (k == 1) return 4;\n        dp = vector<vector<ll>>(32, vector<ll>(32, INT_MAX));\n        ll base = 1;\n        \n        ll d = 0;\n        ll ans = 0;\n        for (int j = 0; j < 31; j++) {\n            //cout << j << endl;\n            d = d + (1L << j);\n            if (k > base + d) continue;\n            ll b = j + 2;\n            if (k == base + d) {\n                //cout << \"match\" << endl;\n                ans++;\n                continue;\n            } \n            if (k < base + d - b - 10) break;\n            if (k >= base + d - b) {\n                int c = base + d - k;\n                if (c == b) ans++;\n                else {\n                    int n = j + 2;\n                    int m = c;\n                    //cout << m << \",\" << n << \",\" << dfs(m, n) << endl;\n                    ans += dfs(m, n); \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716089962.0
}