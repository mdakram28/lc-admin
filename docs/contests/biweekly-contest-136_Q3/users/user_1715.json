{
    "username": "xia_q",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        \n        res = one = 0\n        # for r in range(m):\n        #     for c in range(n):\n        #         one += grid[r][c] != 0\n        add2 = False\n        for r in range(m):\n            if m - 1 - r < r:\n                break\n            for c in range(n):\n                if n - 1 - c < c:\n                    break\n                p0, p1, p2, p3 = (r, c), (m - 1 - r, c), (r, n - 1 - c), (m - 1 - r, n - 1 - c)\n                if p0 == p3 and grid[r][c] == 1:\n                    res += 1\n                elif p0 == p1:\n                    if grid[r][c] != grid[r][n - 1 - c]:\n                        res += 1\n                        add2 = True\n                    elif grid[r][c] == 1:\n                        one += 2\n                    \n                elif p0 == p2:\n                    if grid[r][c] != grid[m - 1 - r][c]:\n                        res += 1\n                        add2 = True\n                    elif grid[r][c] == 1:\n                        one += 2\n                else:\n                    vals = (grid[r][c], grid[m - 1 - r][c], grid[r][n - 1 - c], grid[m - 1 - r][n - 1 - c])\n                    res += min(vals.count(1), vals.count(0))\n        print(res, one, add2)\n        return res if add2 or one % 4 == 0 else res + 2\n        \n            \n            \n                    \n                    \n                    \n                    ",
    "submit_ts": "1722698975",
    "subm_id": "552273454"
}