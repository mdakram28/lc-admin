{
    "username": "harsh_reality_",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        N = len(A)\n        V = [0] * N\n        V1 = [0] * N\n        for i in range(N):\n            V[i] = A[i][0] + A[i][1]\n            V1[i] = A[i][0] - A[i][1]\n\n        V.sort()\n        V1.sort()\n        mini = 1e9\n        \n        for x, y in A:\n            p, q = x + y, x - y\n            a = V1[-1] - V1[1] if (q == V1[0]) else (V1[-2] - V1[0] if q == V1[-1] else V1[-1] - V1[0])\n            if p == V[0]: \n                mini = min(mini, max(V[-1] - V[1], a))\n            elif p == V[-1]: \n                mini = min(mini, max(V[-2] - V[0], a))\n            else:\n                mini = min(mini, max(V[-1] - V[0], a))\n            \n        return mini"
}