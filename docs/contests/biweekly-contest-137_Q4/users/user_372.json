{
    "username": "Jay Kumar Thakur",
    "submission": "void fastio() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n}\n\nclass Solution {\npublic:\n    Solution() {\n        fastio();\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = -1e15;\n        int n = board.size();\n        int m = board[0].size();\n        std::set<std::array<int, 2>> A[n];\n        std::vector<std::array<int, 2>> B[n];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                A[i].insert({board[i][j], j});\n                if (A[i].size() > 3) {\n                    A[i].erase(A[i].begin());\n                }\n            }\n            B[i] = std::vector(A[i].begin(), A[i].end());\n        }\n\n        std::multiset<std::array<int, 2>> sm[n];\n        std::vector<std::array<int, 2>> ss[n];\n\n        for (int j = 0; j < m; j++) {\n            sm[n - 1].insert({board[n - 1][j], j});\n            if (sm[n - 1].size() > 3) {\n                sm[n - 1].erase(sm[n - 1].begin());\n            }\n        }\n\n        ss[n - 1] = std::vector<std::array<int, 2>> (sm[n - 1].begin(), sm[n - 1].end());\n\n        // std::cout << sm[n - 1].size() << std::endl;\n\n        for (int i = n - 2; i >= 0; i--) {\n            sm[i] = sm[i + 1];\n            for (int j = 0; j < m; j++) {\n                sm[i].insert({board[i][j], j});\n                if (sm[i].size() > 27) {\n                    sm[i].erase(sm[i].begin());\n                }\n                // sm[i].erase(sm[i].begin());\n            }\n            std::set<int> idx;\n            for (auto tmp = sm[i].rbegin(); tmp != sm[i].rend(); tmp++) {\n                if (idx.size() == 3) break;\n                auto it = *tmp;\n                if (idx.count(it[1])) continue;\n                ss[i].push_back(it);\n                idx.insert(it[1]);\n            }\n        }\n\n\n        for (int i = 0; i < n; i++) {\n            // std::vector<std::array<long long, 2>> ii(A[i].begin(), A[i].end());\n            for (int j = i + 1; j < n - 1; j++) {\n                // std::vector<std::array<long long, 2>> jj(A[j].begin(), A[j].end());\n                // for (int k = j + 1; k < n; k++) {\n                    // std::vector<std::array<long long, 2>> kk(A[k].begin(), A[k].end());\n\n                    for (auto it : B[i]) {\n                        for (auto jt : B[j]) {\n                            for (auto kt : ss[j + 1]) {\n                                if (it[1] != jt[1] && it[1] != kt[1] && jt[1] != kt[1]) {\n                                    ans = std::max(ans, (long long)it[0] + jt[0] + kt[0]);\n                                } \n                            }\n                        }\n                    }\n                // }\n            } \n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909209",
    "subm_id": "1359183742"
}