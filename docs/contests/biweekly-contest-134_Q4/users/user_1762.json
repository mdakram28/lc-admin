{
    "username": "anishsingh0904",
    "submission": "class Solution {\npublic:\n    long long func(vector<int> &v,int k){\n        \n        int n = v.size();\n        vector<int> hash(32, 0);\n        long long ans = 0;\n        int l = 0;\n        int r = 0;\n        \n        while(l<n && r<n){\n            int temp = v[r];\n            int now = 0;\n            for(int i=0;i<32;i++){\n                if(temp%2){\n                    hash[i]++;\n                }\n                temp = temp/2;\n            }\n            for(int i=0;i<32;i++){\n                if(hash[i]==(r-l+1)){\n                    now += pow(2,i);\n                }\n            }\n            \n            while(l<=r && now<=k){\n                ans += (r-n);\n                int temp2 = v[l];\n                int alt = 0;\n                for(int i=0;i<32;i++){\n                    if(temp2%2){\n                        hash[i]--;\n                    }\n                    temp2 = temp2/2;\n                }\n                for(int i=0;i<32;i++){\n                    if(hash[i]!=0 && hash[i]==(r-l)){\n                        alt += pow(2,i);\n                    }\n                }\n                l++;\n                now = alt;\n            }\n            r++;\n        }\n        \n        return ans;\n    }\n    \n    long long countSubarrays(vector<int>& v, int k) {\n        \n        return -func(v,k)+func(v,k-1);\n    }\n};\n",
    "submit_ts": "1720280529",
    "subm_id": "1311792787"
}