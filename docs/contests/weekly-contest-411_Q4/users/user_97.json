{
    "username": "cxxfish",
    "submission": "#include <iostream>\ntypedef long long LL;\nLL n, a[410005], d[410005], b[410005];\nvoid build(LL l, LL r, LL p) {  // l:\u533a\u95f4\u5de6\u7aef\u70b9(1) r:\u533a\u95f4\u53f3\u7aef\u70b9(n) p:\u8282\u70b9\u6807\u53f7(1)\n  if (l == r) {\n    d[p] = a[l];  //\u5c06\u8282\u70b9\u8d4b\u503c\n    return;\n  }\n  LL m = l + ((r - l) >> 1);\n  build(l, m, p << 1), build(m + 1, r, (p << 1) | 1);  //\u5206\u522b\u5efa\u7acb\u5b50\u6811\n  d[p] = d[p << 1] + d[(p << 1) | 1];\n}\nvoid update(LL l, LL r, LL c, LL s, LL t, LL p) {//[l,r]\u6570\u503c\u589e\u52a0c, s1,tn,p1\n  if (l <= s && t <= r) {\n    d[p] += (t - s + 1) * c, b[p] += c;  //\u5982\u679c\u533a\u95f4\u88ab\u5305\u542b\u4e86\uff0c\u76f4\u63a5\u5f97\u51fa\u7b54\u6848\n    return;\n  }\n  LL m = s + ((t - s) >> 1);\n  if (b[p])\n    d[p << 1] += b[p] * (m - s + 1), d[(p << 1) | 1] += b[p] * (t - m),\n        b[p << 1] += b[p], b[(p << 1) | 1] += b[p];\n  b[p] = 0;\n  if (l <= m)\n    update(l, r, c, s, m, p << 1);  //\u672c\u884c\u548c\u4e0b\u9762\u7684\u4e00\u884c\u7528\u6765\u66f4\u65b0p*2\u548cp*2+1\u7684\u8282\u70b9\n  if (r > m) update(l, r, c, m + 1, t, (p << 1) | 1);\n  d[p] = d[p << 1] + d[(p << 1) | 1];  // \u8ba1\u7b97\u8be5\u8282\u70b9\u533a\u95f4\u548c\n}\nLL getsum(LL l, LL r, LL s, LL t, LL p) {\n  if (l <= s && t <= r) return d[p];\n  LL m = s + ((t - s) >> 1);\n  if (b[p])\n    d[p << 1] += b[p] * (m - s + 1), d[(p << 1) | 1] += b[p] * (t - m),\n        b[p << 1] += b[p], b[(p << 1) | 1] += b[p];\n  b[p] = 0;\n  LL sum = 0;\n  if (l <= m)\n    sum =\n        getsum(l, r, s, m, p << 1);  //\u672c\u884c\u548c\u4e0b\u9762\u7684\u4e00\u884c\u7528\u6765\u66f4\u65b0p*2\u548cp*2+1\u7684\u7b54\u6848\n  if (r > m) sum += getsum(l, r, m + 1, t, (p << 1) | 1);\n  return sum;\n}\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int nq = queries.size();\n        vector<int> ind(nq);\n        for(int i=0;i<nq;++i) ind[i]=i;\n        auto comp = [&](const int &a ,const int &b){\n            return queries[a][1]<queries[b][1];\n        };\n        sort(ind.begin(),ind.end(),comp);\n        // for(int i=0;i<nq;++i){\n        //     cout<<queries[ind[i]][0]<<','<<queries[ind[i]][1]<<endl;\n        // }\n        vector<long long> ans(nq);\n        int n = s.size();\n        memset(a,0,4*(n+2)*sizeof(int));\n        memset(d,0,4*(n+2)*sizeof(int));\n        memset(b,0,4*(n+2)*sizeof(int));\n        build(1,n,1);\n        vector<long long> rec(n);\n        int l=0,r=0,c0=0,c1=0;\n        while(r<n){\n            if(s[r]=='0') c0++;\n            else c1++;\n            while(c0>k && c1>k){\n                if(s[l]=='0') c0--;\n                else c1--;\n                l++;\n            }\n            rec[r]=l;\n            r++;\n        }\n        // for(int i=0;i<n;++i){\n        //     cout<<i<<','<<rec[i]<<endl;\n        // }\n        int p=-1;\n        for(int iq:ind){\n            int l=queries[iq][0],r=queries[iq][1];\n            while(p<r){\n                p++;\n                // cout<<rec[p]+1<<','<<p+1<<endl;\n                update(rec[p]+1,p+1,1,1,n,1);\n            }\n            ans[iq]=getsum(l+1,r+1,1,n,1);\n        }\n        return ans;\n    }\n};\n\n// 1:\u5f00\u5934=>l,2:\u7ed3\u5c3e<=r\n// 1 & 2\n// all - (!1 | !2)\n// all - (!1 + !2 - (!1 & !2))",
    "submit_ts": "1723951258",
    "subm_id": "556404246"
}