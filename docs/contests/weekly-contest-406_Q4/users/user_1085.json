{
    "username": "Amit_kumar_panchayan",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int h_pieces = 1;\n        int v_pieces = 1;\n\n        int i = 0;\n        int j = 0; \n\n        long long total_cost = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                total_cost += horizontalCut[i] * v_pieces;\n                h_pieces++;\n                i++;\n            } else {\n\n                total_cost += verticalCut[j] * h_pieces;\n                v_pieces++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            total_cost += horizontalCut[i] * v_pieces;\n            h_pieces++;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            total_cost += verticalCut[j] * h_pieces;\n            v_pieces++;\n            j++;\n        }\n\n        return total_cost;\n    }\n};",
    "submit_ts": "1720925750",
    "subm_id": "1320264978"
}