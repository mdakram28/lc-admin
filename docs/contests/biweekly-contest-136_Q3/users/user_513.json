{
    "username": "Code-O-Maniac",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        \n        int midRow = m / 2;\n        int midCol = n / 2;\n        \n        int ans = 0;\n        for(int i = 0; i < midRow; i++) {\n            for(int j = 0; j < midCol; j++) {\n                int sum = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                \n                ans += min(sum, 4 - sum);\n            }\n        }\n        \n        vector<int> count(3);\n        for(int j = 0; j < midCol && m % 2 != 0; j++) {\n            count[grid[midRow][j] + grid[midRow][n - j - 1]] += 1;\n        }\n        \n        for(int i = 0; i < midRow && n % 2 != 0; i++) {\n            count[grid[i][midCol] + grid[m - i - 1][midCol]] += 1;\n        }\n        \n        if(count[2] % 2 != 0) {\n            if(count[1] == 0) {\n                ans += 2;\n            }\n        }\n        \n        if(m % 2 != 0 && n % 2 != 0) {\n            ans += grid[midRow][midCol];\n        }\n        \n        ans += count[1];\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722697583",
    "subm_id": "1343151702"
}