{
    "username": "theweirdcoder",
    "submission": "struct trie\n{\n    trie* child[26];\n    bool isEnd;\n    int ind;\n    int c;\n    trie()\n    {\n        isEnd=false;\n        ind=-1,c=-1;\n        for(int i=0;i<26;i++) child[i]=NULL;\n    }\n};\nclass Solution {\npublic:\n    void insert(string key,int id,int cost,trie* root)\n    {\n        trie* curr=root;\n        for(int i=0;i<key.size();i++)\n        {\n            int idx=key[i]-'a';\n            if(curr->child[idx]==NULL) curr->child[idx]=new trie();\n            curr=curr->child[idx];\n        }\n        curr->isEnd=true;\n        curr->ind=id;\n        if(curr->c!=-1) curr->c=min(curr->c,cost);\n        else curr->c=cost;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n=words.size(),m=target.size(),ans=0;\n        trie* root=new trie();\n        for(int i=0;i<n;i++) insert(words[i],i,costs[i],root);\n        vector<int> dp(m+1,INT_MAX);\n        dp[0]=0;\n        for(int i=0;i<m;i++)\n        {\n            if(dp[i]==INT_MAX) continue;\n            trie* curr=root;\n            for(int j=i;j<m;j++)\n            {\n                int idx=target[j]-'a';\n                if(curr->child[idx]==NULL) break;\n                curr=curr->child[idx];\n                if(curr->isEnd)\n                {\n                    int x=words[curr->ind].size();\n                    if(i+x<=m) dp[i+x]=min(dp[i+x],dp[i]+curr->c);\n                }\n            }\n        }\n        if(dp[m]==INT_MAX) return -1;\n        return dp[m];\n    }\n};",
    "submit_ts": "1720324781",
    "subm_id": "1312408124"
}