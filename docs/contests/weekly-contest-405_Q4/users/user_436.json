{
    "username": "samthenoob",
    "submission": "class Node:\n    def __init__(self, val, cost, end):\n        self.val = val\n        self.child = {}\n        self.cost = cost\n        self.end = end\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], exp: List[int]) -> int:\n        costs = [float('inf')] * len(target)\n        trie = self.build(words, exp)\n\n        def query(startIndex):\n            if startIndex and costs[startIndex-1] == float('inf'):\n                return\n            oldCost = float('inf')\n            if startIndex:\n                oldCost = costs[startIndex - 1]\n            else:\n                oldCost = 0\n            # prev c reachable, search cur\n            cur = trie\n            while startIndex < len(target):\n                # search node\n                c = target[startIndex]\n                # print(cur.child, c)\n                if c in cur.child:\n                    if cur.child[c].end:\n                        # print(\"here\")\n                        costs[startIndex] = min(costs[startIndex], oldCost + cur.child[c].cost)\n                        # print(costs, oldCost, cur.child[c].cost)\n                    cur = cur.child[c]\n                else:\n                    break\n                startIndex += 1\n\n        for i in range(len(target)):\n            query(i)\n        return costs[-1] if costs[-1] != float('inf') else -1\n    \n    def build(self, words, costs):\n        dummy = Node(None, None, None)\n        # cur = dummy\n        def add(word, cost):\n            cur = dummy\n            for c in word:\n                if c in cur.child:\n                    cur = cur.child[c]\n                else:\n                    newNode = Node(c, None, None)\n                    cur.child[c] = newNode\n                    cur = cur.child[c]\n            cur.end = True\n            if cur.cost:\n                cur.cost = min(cur.cost, cost)\n            else:\n                cur.cost = cost\n            # print(cur.end, cur.cost)\n        for i in range(len(words)):\n            add(words[i], costs[i])\n        return dummy\n\n",
    "submit_ts": "1720321848",
    "subm_id": "1312333932"
}