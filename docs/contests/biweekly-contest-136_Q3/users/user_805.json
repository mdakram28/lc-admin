{
    "username": "rkkashyap390",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int rf=0, paired1=0, changes=0;;\n        \n        if((n&1)&&(m&1)&&grid[n/2][m/2]) rf++;\n            \n        if(n&1){\n            for(int j=0; j<m/2; j++){\n                if(grid[n/2][j]!=grid[n/2][m-j-1]) changes++;\n                else if(grid[n/2][j]==1) paired1+=2;\n            }\n        }\n        \n        if(m&1){\n            for(int i=0; i<n/2; i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]) changes++;\n                else if(grid[i][m/2]==1) paired1+=2;\n            }\n        }\n        \n        if(paired1%4==2){\n            if(!changes) rf+=2;\n        }\n        // cout<<changes<<\" \"<<rf<<endl;\n\n        \n        for(int i=0; i<n/2; i++){\n            for(int j=0; j<m/2; j++){\n                int k = grid[i][j] + grid[i][m-j-1] + grid[n-i-1][j] + grid[n-i-1][m-j-1];\n                rf += min(k, 4-k);\n            }\n        }\n        // cout<<changes<<\" \"<<rf<<endl;\n        return rf+changes;\n    }\n};",
    "submit_ts": "1722698138",
    "subm_id": "1343170939"
}