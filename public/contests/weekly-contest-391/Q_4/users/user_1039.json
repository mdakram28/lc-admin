{
    "username": "yu-ling-si",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int[][] minAndMax = getMinAndMax(points, -1);\n        int ans = Integer.MAX_VALUE;\n        for (int[] temp : minAndMax) {\n            int[][] diff = getMinAndMax(points, temp[1]);\n            int minMax = Math.max(diff[0][0] - diff[1][0], diff[2][0] - diff[3][0]);\n            ans = Math.min(ans, minMax);\n        }\n        return ans;\n    }\n\n    public int[][] getMinAndMax(int[][] points, int index) {\n        int n = points.length;\n        int[][] ans = new int[4][2];\n        ans[0][0] = Integer.MIN_VALUE;\n        ans[1][0] = Integer.MAX_VALUE;\n        ans[2][0] = Integer.MIN_VALUE;\n        ans[3][0] = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            if (i == index) {\n                continue;\n            }\n            int xy = points[i][0] + points[i][1];\n            if (xy > ans[0][0]) {\n                ans[0][0] = xy;\n                ans[0][1] = i;\n            }\n            if (xy < ans[1][0]) {\n                ans[1][0] = xy;\n                ans[1][1] = i;\n            }\n            int yx = points[i][1] - points[i][0];\n            if (yx > ans[2][0]) {\n                ans[2][0] = yx;\n                ans[2][1] = i;\n            }\n            if (yx < ans[3][0]) {\n                ans[3][0] = yx;\n                ans[3][1] = i;\n            }\n        }\n        return ans;\n    }\n}"
}