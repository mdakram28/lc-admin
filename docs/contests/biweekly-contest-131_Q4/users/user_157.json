{
    "username": "harsh_bang7",
    "submission": "#define lli long long int\nstruct segtree{\n    vector<lli> tree;\n    void init(lli n){\n        lli sz = 1;\n        while(sz < n){\n            sz *= 2;\n        }\n        sz *= 2;\n        tree.resize(sz+5, 0); \n    }\n    lli solve(lli l, lli r, lli node, lli a, lli b){\n        if(a > r || b < l) return 0;   \n        if(l >= a && r <= b){\n            return tree[node];\n        }\n        lli mid = (l+r)/2;\n        return max(solve(l, mid, 2 * node + 1, a, b), solve(mid + 1, r, 2 * node + 2, a, b));\n    }\n    void update(lli l, lli r, lli node, lli val, lli ind){\n        if(l == r){\n            tree[node] = val;\n            return;\n        }\n        lli mid = (l+r)/2;\n        if(ind <= mid){\n            update(l, mid, 2*node+1, val, ind);\n        }\n        else{\n            update(mid+1, r, 2*node+2, val, ind);\n        }\n        tree[node] = max(tree[2*node+1], tree[2*node+2]);\n    }\n};\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        segtree sgt;\n        int n = 3*queries.size() + 2;\n        sgt.init(n);\n        vector<bool> ans;\n        sgt.update(0, n, 0, 0, 0);\n        sgt.update(0, n, 0, n, n);\n        set<int> st;\n        st.insert(0);\n        st.insert(n);\n        for(int i = 0; i < queries.size(); i++){\n            if(queries[i][0] == 1){\n                // for(auto it : st){\n                //     cout<<it<<\" \";\n                // }\n                // cout<<'\\n';\n                auto it = st.upper_bound(queries[i][1]);\n                auto bt = it;\n                bt--;\n                sgt.update(0, n, 0,(*it - queries[i][1]) ,*it);\n                sgt.update(0, n, 0, (queries[i][1] - *bt), queries[i][1]);\n                st.insert(queries[i][1]);\n            }\n            else{\n                int max_sz = sgt.solve(0, n, 0, 0, queries[i][1]);\n                auto it = st.upper_bound(queries[i][1]);\n                it--;\n                // cout<<queries[i][1]<<\" \"<<*it<<'\\n';\n                // cout<<max_sz<<'\\n';\n                max_sz = max(max_sz, queries[i][1] - *it);\n                if(max_sz >= queries[i][2]){\n                    ans.push_back(true);\n                }\n                else{\n                    ans.push_back(false);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716650847.0
}