{
    "username": "kprabhav1323",
    "submission": "class Solution {\npublic:\n    long long helper(vector<int>&nums,int k,map<long long,long long>&prev)\n    {\n         int n = nums.size();\n        long long ans= 0;\n        \n        \n\n        for (int i:nums) {\n            map<long long, long long> temp; \n\n            if (i== k) {\n                ans+=1;\n            }\n            temp[i] = 1;\n            auto it=prev.begin();\n            while (it!=prev.end()) \n             {\n                long long v=it->first;\n                long long f=it->second;\n                long long r = v & i;\n                if (r == k) {\n                    ans += f;\n                }\n                temp[r] += f;\n             it++;\n            }\n            \n            prev = temp;\n        }\n        \n        return ans;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n     map<long long, long long> prev;\n       long long sum=accumulate(nums.begin(),nums.end(),0LL);\n       return helper(nums,k,prev);\n    }\n};",
    "submit_ts": "1720281155",
    "subm_id": "1311815057"
}