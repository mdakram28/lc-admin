{
    "username": "mysticalmanav",
    "submission": "class Solution {\npublic:\n   void dfs(int i,int d,vector<int> &dis,vector<vector<int>>& adj){\n        dis[i]=d;\n        for(auto j:adj[i]){\n          if(dis[j]==0)  dfs(j,d+1,dis,adj);\n}\n    }\n    int solve(int n,vector<vector<int>> &adj,int &an){\n           vector<int> dis(n,0);\n                  dfs(0,1,dis,adj);\n                  int a=max_element(dis.begin(),dis.end())-dis.begin();\n                  dis.clear();\n                  dis.resize(n,0);\n               dfs(a,1,dis,adj);\n                vector<int> dis2(n,0);\n        \n                int b=max_element(dis.begin(),dis.end())-dis.begin();\n        an=max(dis[b]-1,an);\n               dfs(b,1,dis2,adj);\n              int ans=INT_MAX;\n               for(int i=0;i<n ;i++){\n                   ans =min(ans,max(dis[i],dis2[i]));\n}\n        return ans;\n                  \n}\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<vector<int>> adj(n),adj2(m);\n        for(auto i:edges1){\n            adj[i[0]].push_back(i[1]);\n             adj[i[1]].push_back(i[0]);\n}\n                 for(auto i:edges2){\n            adj2[i[0]].push_back(i[1]);\n             adj2[i[1]].push_back(i[0]);\n}    int a=0;\n               int ans1 =solve(n,adj,a);\n                  int ans2=solve(m,adj2,a);\n                  return max(a,ans1+ans2-1);\n    }\n};",
    "submit_ts": 1719718773.0
}