{
    "username": "inaba_meguru_ciallo",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n        \n        add = [[0, 0] for i in range(len(points))]\n        jj = [[0, 0] for i in range(len(points))]\n        t = 0\n        for x, y in points:\n            add[t] = [x+y, t]\n            jj[t] = [x-y, t]\n            t += 1\n            \n        add.sort()\n        jj.sort()\n        \n        # tt = [add[-1][1], add[-2][1], add[0][1], add[1][1], jj[-1][1], jj[-1][1], jj[0][1], jj[1][1]]\n        \n        # p1 = [add[-1]-add[0], add[-2]-add[0], add[-1]-add[1], jj[-1]-jj[0]]\n        \n        ans = 10**10\n        # d add[0]\n        t1, t2 = jj[-1][0], jj[0][0]\n        if jj[-1][1] == add[0][1]:\n            t1 = jj[-2][0]\n        if jj[0][1] == add[0][1]:\n            t2 = jj[1][0]\n        ans = min(ans, max(add[-1][0]-add[1][0], t1-t2))\n        \n        # d add[-1]\n        t1, t2 = jj[-1][0], jj[0][0]\n        if jj[-1][1] == add[-1][1]:\n            t1 = jj[-2][0]\n        if jj[0][1] == add[-1][1]:\n            t2 = jj[1][0]\n        ans = min(ans, max(add[-2][0]-add[0][0],  t1-t2))\n        \n        # d jj[0]\n        t1, t2 = add[-1][0], add[0][0]\n        if add[-1][1] == jj[0][1]:\n            t1 = add[-2][0]\n        if add[0][1] == jj[0][1]:\n            t2 = add[1][0]\n        ans = min(ans, max(jj[-1][0]-jj[1][0],  t1-t2))\n        \n        # d jj[-1]\n        t1, t2 = add[-1][0], add[0][0]\n        if add[-1][1] == jj[-1][1]:\n            t1 = add[-2][0]\n        if add[0][1] == jj[-1][1]:\n            t2 = add[1][0]\n        ans = min(ans, max(jj[-2][0]-jj[0][0],  t1-t2))\n        \n        return ans\n        \n        \n            "
}