{
    "username": "kind-agnesipe9",
    "submission": "class Solution {\n    public long maximumScore(int[][] grid) {\n        int n=grid.length;\n        //\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\n        long[][][] dp1=new long[n][n][n];\n        //\u4ece\u5750\u4e0b\u5230\u53f3\u4e0a\n        long[][][] dp2=new long[n][n][n];\n        for (int k = 0; k < n; k++) {\n            for (int j = k; j <n ; j++) {\n                for (int i = 0; i <n ; i++) {\n                    if(i==0){\n                        dp1[i][j][k]=grid[i][j];\n                        continue;\n                    }\n                    if(j==k){\n                        dp1[i][j][k]=dp1[i-1][j][k]+grid[i][j];\n                        continue;\n                    }\n                    dp1[i][j][k]=Long.max(dp1[i-1][j][k],dp1[i-1][j-1][k])+grid[i][j];\n                }\n            }\n        }\n        for (int k = n-1; k >=0; k--) {\n            for (int j = k; j >=0 ; j--) {\n                for (int i = 0; i <n ; i++) {\n                    if(i==0){\n                        dp2[i][j][k]=grid[i][j];\n                        continue;\n                    }\n                    if(j==k){\n                        dp2[i][j][k]=dp2[i-1][j][k]+grid[i][j];\n                        continue;\n                    }\n                    dp2[i][j][k]=Long.max(dp2[i-1][j][k],dp2[i-1][j+1][k])+grid[i][j];\n                }\n            }\n        }\n        long[] dp=new long[n];\n        for (int end = 1; end <n ; end++) {\n            for (int start = 0; start <=end ; start++) {\n                long sub=0;\n                for (int mid = start; mid <=end ; mid++) {\n                    long pre=mid-1>=start?dp1[n-1][mid-1][start]:0;\n                    long post=mid+1<=end?dp2[n-1][mid+1][end]:0;\n                    sub=Long.max(sub,pre+post);\n                }\n                if(start==0){\n                    dp[end]=Long.max(dp[end],sub);\n                }else {\n                    dp[end]=Long.max(dp[end],dp[start-1]+sub);\n                }\n            }\n        }\n        return dp[n-1];\n    }\n}",
    "submit_ts": "1721490675",
    "subm_id": "548323833"
}