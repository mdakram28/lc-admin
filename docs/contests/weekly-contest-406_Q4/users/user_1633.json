{
    "username": "suyashpatil0208",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int,int>> pqh;\n        priority_queue<pair<int,int>> pqv;\n        for(int i=0;i<n-1;i++){\n            pqv.push({verticalCut[i],i});\n        }\n        for(int i=0;i<m-1;i++){\n            pqh.push({horizontalCut[i],i});\n        }\n\n        long long ans=0;\n        int v=1,h=1;\n        while(!pqv.empty() && !pqh.empty()){\n            if(pqv.top().first>=pqh.top().first){\n                ans=ans+(pqv.top().first)*(v);\n                h=h+1;\n                pqv.pop();\n            }\n            else{\n                ans+=pqh.top().first*h;\n                v=v+1;\n                pqh.pop();\n            }\n        }\n\n        while(!pqv.empty()){\n            ans+=pqv.top().first*v;\n            h=h+1;\n            pqv.pop();\n        }\n        while(!pqh.empty()){\n            ans+=pqh.top().first*h;\n            v=v+1;\n            pqh.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926370",
    "subm_id": "1320284173"
}