{
    "username": "BraveBLC",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        #print(\"test5\")\n        maxRow = 0\n        minRow = len(grid)-1\n        maxCol = 0\n        minCol = len(grid[0])-1\n        \n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == 1:\n                    minRow = min(minRow, i)\n                    maxRow = max(maxRow, i)\n                    minCol = min(minCol, j)\n                    maxCol = max(maxCol, j)\n        \n        def bestArea(startRow, endRow, startCol, endCol):\n            maxRow = startRow\n            minRow = endRow\n            maxCol = startCol\n            minCol = endCol\n\n            for i in range(startRow, endRow+1):\n                for j in range(startCol, endCol+1):\n                    if grid[i][j] == 1:\n                        minRow = min(minRow, i)\n                        maxRow = max(maxRow, i)\n                        minCol = min(minCol, j)\n                        maxCol = max(maxCol, j)\n            return max(0, (maxRow - minRow + 1) * (maxCol - minCol + 1))\n        \n        #print(minRow)\n        #print(maxRow)\n        #print(minCol)\n        #print(maxCol)\n        best = 99999999\n        for i in range(minRow+1, maxRow+1):\n            for j in range(minCol+1, maxCol+1):\n                for k in range(0, 2):\n                    for l in range(0, 2):\n                        #print('test')\n                        if k==0 and l==0:\n                            \n                            best = min(best, bestArea(minRow, maxRow, minCol, j-1) + bestArea(minRow, i-1, j, maxCol) + bestArea(i, maxRow, j, maxCol))                 \n                        if k == 0 and l == 1:\n                            best = min(best, bestArea(minRow, maxRow, j, maxCol) + bestArea(minRow, i-1, minCol, j-1) + bestArea(i, maxRow, minCol, j-1))\n                        if k == 1 and l == 0:\n                            best = min(best, bestArea(minRow, i-1, minCol, maxCol) + bestArea(i, maxRow, minCol, j-1) + bestArea(i, maxRow, j, maxCol))             \n                        if k == 1 and l == 1:\n                            best = min(best, bestArea(i, maxRow, minCol, maxCol) + bestArea(minRow, i-1, minCol, j-1) + bestArea(minRow, i-1, j, maxCol))\n                            \n        for i in range(minRow+1, maxRow+1):\n            for j in range(i+1, maxRow+1):\n                best = min(best, bestArea(minRow, i-1, minCol, maxCol) + bestArea(i, j-1, minCol, maxCol) + bestArea(j, maxRow, minCol, maxCol))\n        for i in range(minCol+1, maxCol+1):\n            for j in range(i+1, maxCol+1):\n                best = min(best, bestArea(minRow, maxRow, minCol, i-1) + bestArea(minRow, maxRow, i, j-1) + bestArea(minRow, maxRow, j, maxCol))\n        \n        \n                \n                \n        #if best > 9999999:\n            #return 3\n        return max(3, best)\n                        \n                \n            \n        \n        #return max(3, out)",
    "submit_ts": "1719115034",
    "subm_id": "1297359019"
}