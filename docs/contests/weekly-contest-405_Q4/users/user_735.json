{
    "username": "ssjaishu",
    "submission": "class TrieVertex {\npublic:\n    vector<TrieVertex*> child;\n    int value;\n    bool isEndOfWord;\n\n    TrieVertex() : child(26, NULL), value(INT_MAX), isEndOfWord(false) {}\n};\n\nclass TrieTree {\npublic:\n    TrieVertex* root;\n\n    TrieTree() {\n        root = new TrieVertex();\n    }\n\n    void addWord(const string& word, int c) { // Changed parameter name from cost to c\n        TrieVertex* node = root;\n        for (char ch : word) { // Changed loop variable from c to ch\n            if (!node->child[ch - 'a']) {\n                node->child[ch - 'a'] = new TrieVertex();\n            }\n            node = node->child[ch - 'a'];\n        }\n        node->value = min(c, node->value); // Changed variable name from cost to c\n        node->isEndOfWord = true;\n    }\n\n    TrieVertex* getRoot() {\n        return root;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& c) { // Changed parameter name from costs to c\n        TrieTree trie;\n        int length = t.size(); // Changed from target.size() to t.size()\n        vector<int> minimumCost(length + 1, INT_MAX);\n\n        for (int i = 0; i < w.size(); ++i) {\n            trie.addWord(w[i], c[i]); // Changed from costs[i] to c[i]\n        }\n\n        minimumCost[0] = 0;\n\n        for (int i = 0; i < length; ++i) {\n            if (minimumCost[i] == INT_MAX) continue;\n\n            TrieVertex* node = trie.getRoot();\n            for (int j = i; j < length; ++j) {\n                char ch = t[j]; // Changed from target[j] to t[j]\n                if (!node->child[ch - 'a']) break;\n                node = node->child[ch - 'a'];\n                if (node->isEndOfWord) {\n                    minimumCost[j + 1] = min(minimumCost[j + 1], minimumCost[i] + node->value);\n                }\n            }\n        }\n\n        return minimumCost[length] == INT_MAX ? -1 : minimumCost[length];\n    }\n};\n",
    "submit_ts": "1720322473",
    "subm_id": "1312350866"
}