{
    "username": "trying_n_trying",
    "submission": "/*\n \n File   : Leetcode.cpp\n -------------------\n |   Hello         |\n |   DSA !         |\n -------------------\n \n */\n\n#define mii map<int,int>\n#define vi vector<int>\n#define vs vector<string>\n#define vb vector<bool>\n#define pii pair<int,int>\n#define endl \"\\n\"\n#define intmax INT_MAX\n#define intmin INT_MIN\n#define need_for_speed ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define ff(i,a,b) for(int i=a;i<b;i++)\n#define rfor(i,a,b) for(int i=a;i>=b;i--)\n#define all(x) x.begin(),x.end()\n#define pt(x) { cout<<x<<\"\\n\"; }\n#define fs first.second\n#define ss second.second\n#define countofSet(x) __builtin_popcount(x)\n#define pb push_back\n#define fir first\n#define sec second\n#define sqrt(x) sqrtl(x)\n\nclass Solution {\npublic:\n   int maximumLength(vector<int>& v, int k)\n    {\n       int N = k+3;\n       vi op(N,-1);\n       vector<mii> P(N);\n       \n       int n = (int)v.size(), ans = 1;\n       int dp[n][N];\n       \n       ff(i,0,n) ff(j,0,N-1) dp[i][j] = 1;\n       \n       ff(i,0,n)\n        {\n            ff(j,0,k+1)\n            {\n                int mx = dp[i][j];\n                ff(l,0,j) mx = max(mx, 1 + op[l] );\n                \n                auto it = P[j].find(v[i]);\n                if( it == P[j].end() )\n                {\n                    \n                }else\n                {\n                    mx = max( mx , 1 + P[j][v[i]] );\n                }\n                \n                dp[i][j] = mx;\n                ans = max( ans , mx );\n            }\n            \n            ff(j,0,k+1)\n            {\n                int x = dp[i][j];\n                op[j] = max( op[j] , x );\n            }\n            \n            ff(j,0,k+1)\n            {\n                int dij = dp[i][j];\n                int val = v[i];\n                \n                P[ j ][ val ] = max( P[j][ val ] , dij ) ;\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": 1717862163.0
}