{
    "username": "suchendrabharadwaj",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n#include <algorithm>\n#include <cmath>\n\nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::unordered_map<int, std::vector<int>> differences_map;\n        \n         std::vector<int> extrema;\n        \n          size_t n = nums.size();\n        \n    size_t half = n / 2;\n        \n         int min_changes = n;\n\n        for (size_t i = 0; i < half; ++i) {\n            int difference = std::abs(nums[i] - nums[n - i - 1]);\n          \n            int max_val = std::max(nums[i], std::max(nums[n - i - 1], std::max(k - nums[n - i - 1], k - nums[i])));\n\n            \n            extrema.push_back(max_val);\n            \n            \n            differences_map[difference].push_back(max_val);\n        }\n\n      \n           std::sort(extrema.begin(), extrema.end());\n\n          \n          for (const auto& pair : differences_map) {\n          \n              \n              auto& vec = pair.second;\n            \n            \n            int difference = pair.first;\n\n            auto it = std::lower_bound(extrema.begin(), extrema.end(), difference);\n            \n            \n            int total_changes = std::distance(extrema.begin(), it) * 2 + (half - std::distance(extrema.begin(), it));\n\n            for (const int& val : vec) {\n                if (val >= difference) {\n                    \n                    total_changes -= 1;\n                } \n                \n                else {\n                   \n                    total_changes -= 2;\n                }\n            }\n\n            min_changes = std::min(min_changes, total_changes);\n        }\n\n        return min_changes;\n    }\n};\n\n\n",
    "submit_ts": "1721490171",
    "subm_id": "1327475060"
}