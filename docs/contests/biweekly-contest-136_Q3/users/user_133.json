{
    "username": "john0312acc223",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int res = 0;\n        for (int i = 0; i < m/2; i++) {\n            for (int j = 0; j < n/2; j++) {\n                int tot = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                if (tot <= 2) {\n                    res += tot;\n                } else {\n                    res += (4-tot);\n                }\n            }\n        }\n\n        if (m%2 == 1 && n%2 == 1) {\n            res += grid[m/2][n/2];\n        }\n        int side_sw = 0;\n        int side_ones = 0;\n        if (m%2 == 1) {\n            int mid_m = m/2;\n            for (int j = 0; j < n/2; j++) {\n                if (grid[mid_m][j] != grid[mid_m][n-1-j]) {\n                    side_sw++;\n                } else if (grid[mid_m][j] == 1) {\n                    side_ones++;\n                }\n            }\n        }\n        if (n%2 == 1) {\n            int mid_n = n/2;\n            for (int i = 0; i < m/2; i++) {\n                if (grid[i][mid_n] != grid[m-1-i][mid_n]) {\n                    side_sw++;\n                } else if (grid[i][mid_n] == 1) {\n                    side_ones++;\n                }\n            }\n        }\n        if (side_sw == 0 && side_ones%2 == 1) {\n            res += 2;\n        }\n        res += side_sw;\n        return res;\n    }\n};",
    "submit_ts": "1722696780",
    "subm_id": "1343121901"
}