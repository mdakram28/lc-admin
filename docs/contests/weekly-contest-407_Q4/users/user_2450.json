{
    "username": "_the_dark_space",
    "submission": "class Solution {\npublic:\n    long long f(int l, int r, vector<int>& v) {\n        if (l > r) return 0;\n        if (l == r) return v[l] > 0 ? v[l] : 0;\n\n        priority_queue<int, vector<int>, greater<int>> min_heap;\n        for (int i = l; i <= r; ++i) {\n            if (v[i] > 0) {\n                min_heap.push(v[i]);\n            }\n        }\n\n        if (min_heap.empty()) return 0;\n\n        int min_val = min_heap.top();\n        long long ans = min_val;\n        for (int i = l; i <= r; ++i) {\n            if (v[i] > 0) {\n                v[i] -= min_val;\n            }\n        }\n\n        int last_split = l;\n        for (int i = l; i <= r; ++i) {\n            if (v[i] == 0) {\n                ans += f(last_split, i - 1, v);\n                last_split = i + 1;\n            }\n        }\n        ans += f(last_split, r, v);\n        return ans;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& t) {\n        int n = nums.size();\n        long long ans = 0;\n\n        int l = 0;\n        while (l < n) {\n            while (l < n && nums[l] == t[l]) {\n                l++;\n            }\n            if (l >= n) break;\n\n            int r = l;\n            int sign = (nums[l] - t[l]) > 0 ? 1 : -1;\n            while (r < n && (nums[r] - t[r]) * sign > 0) {\n                r++;\n            }\n            r--;\n\n            vector<int> v(r - l + 1);\n            for (int i = l; i <= r; ++i) {\n                v[i - l] = abs(nums[i] - t[i]);\n            }\n\n            ans += f(0, r - l, v);\n            l = r + 1;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533479",
    "subm_id": "1328009916"
}