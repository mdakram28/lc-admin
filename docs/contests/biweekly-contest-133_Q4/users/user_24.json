{
    "username": "amsraman",
    "submission": "class Solution {\npublic:\n    int mod = 1e9 + 7;\n    int mul(int x, int y) {\n        return (1LL * x * y) % mod;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int ans = 1;\n        vector<int> dp(401, 0); dp[0] = 1;\n        vector<int> req(n, -1); bool bad = false;\n        for(auto vc: requirements) {\n            if(req[vc[0]] != -1) {\n                bad = true;\n                break;\n            }\n            req[vc[0]] = vc[1];\n        }\n        if(bad) return 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = 400; j >= 0; j--) {\n                for(int k = 1; k <= min(i, j); k++) {\n                    dp[j] = (dp[j] + dp[j - k]) % mod;\n                }\n            }\n            if(req[i] != -1) {\n                ans = mul(ans, dp[req[i]]);\n                fill(dp.begin(), dp.end(), 0); dp[req[i]] = 1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719067245.0
}