{
    "username": "indreshrsingh",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int n=a.size();\n        \n        set<pair<int,int>> s[k+1];\n        s[0].insert({1,a[0]});\n        map<pair<int,int>,int> mx;\n        mx[{a[0],0}]=1;\n        \n        for(int i=1;i<n;i++)\n        {\n             \n             {\n                   int curr1=mx[{a[i],0}]+1;\n                    \n                   if(s[0].find({mx[{a[i],0}],a[i]})!=s[0].end())\n                   s[0].erase({mx[{a[i],0}],a[i]});\n                   s[0].insert({curr1,a[i]});\n                   mx[{a[i],0}]=curr1;\n             }\n             for(int j=1;j<=k;j++)\n             {\n                   \n                 int curr=0;\n                 curr=mx[{a[i],j}]+1;\n                 \n                 auto it=s[j-1].end();\n                 if(s[j-1].size())\n                 {\n                     \n                     it--;\n                     if((*it).second!=a[i])\n                     {\n                         curr=max(curr,(*it).first+1);\n                     }\n                     else{\n                         if(it!=s[j-1].begin())\n                         {\n                           it--;\n                           curr=max(curr,(*it).first+1);\n                           \n\n                         }\n                     }\n                     \n                     \n                 }\n                if(s[j].find({mx[{a[i],j}],a[i]})!=s[j].end())\n                s[j].erase({mx[{a[i],j}],a[i]});\n                s[j].insert({curr,a[i]});    \n                mx[{a[i],j}]=curr;\n                 \n             }\n        }\n        int ans=-1;\n         for(int i=0;i<=k;i++){\n             auto it=s[i].end();\n             if(it!=s[i].begin())\n             {\n                 it--;\n                 ans=max(ans,(*it).first);\n                 \n             }\n         }\n                          return ans;\n        \n    }\n};",
    "submit_ts": 1717861632.0
}