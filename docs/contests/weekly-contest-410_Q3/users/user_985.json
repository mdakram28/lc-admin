{
    "username": "UrbanTurban",
    "submission": "class Solution {\n    public int countOfPairs(int[] arr) {\n        \n        int n=arr.length;\n        dp = new long[arr.length+1][51];\n        for(int i=0;i<n+1;++i)\n            Arrays.fill(dp[i], -1);\n        long ans = rec(arr, 0, -1);\n        return (int)ans;\n        \n    }\n    static long[][] dp;\n    public long rec(int[] arr, int idx, int prevNo) \n    {\n        if(idx == arr.length)\n            return 1L;\n        if(prevNo != -1)\n        {\n            if(dp[idx][prevNo] != -1)\n                return dp[idx][prevNo];\n            int a1 = prevNo;\n            int b1 = arr[idx-1] - a1;\n            long ans=0;\n            for(int i=0;i<=50;++i)\n            {\n                if(i>=a1 && (arr[idx]-i)<=b1 && (arr[idx]-i)>=0)\n                {\n                    ans=add(ans, rec(arr, idx+1, i));\n                }\n            }\n            return dp[idx][prevNo] = ans;\n        }\n        else\n        {\n            long ans=0;\n            for(int i=0;i<=50;++i)\n            {\n                if((arr[idx]-i)>=0)\n                {\n                    ans=add(ans, rec(arr, idx+1, i));\n                }\n            }\n            return ans;\n        }\n        \n    }\n    static long MOD = (long)(1e9+7);\n    public long add(long a, long b)\n    {\n        return (a+b)%MOD;\n    }\n}",
    "submit_ts": "1723344997",
    "subm_id": "1351546453"
}