{
    "username": "switchblade20",
    "submission": "class Solution {\npublic:\n    #define fi first\n    #define se second\n    int maximumLength(vector<int>& nums, int k) {\n    int n = nums.size();\n    if(n == 1) return 1;\n    vector<vector<int>> dp(n + 2, vector<int>(k + 2, 1));\n    dp[0][0] = 1;\n    vector<int> vals;\n    for(int i = 0; i < nums.size(); i++) {\n        vals.push_back(nums[i]);\n    }\n    sort(vals.begin(), vals.end());\n    vals.resize(unique(vals.begin(), vals.end()) - vals.begin());\n    if(vals.size() == 1) return n;\n    \n    for(int i = 0; i < nums.size(); i++) {\n        nums[i] = lower_bound(vals.begin(), vals.end(), nums[i]) - vals.begin();\n    }\n    \n    vector<vector<int>> best(n + 2, vector<int>(k + 2, 0));\n    vector<pair<int, int>> opt(k + 2, {nums[0], 1});\n    best[nums[0]][0] = 1;\n    for(int i = 1; i < n; i++) {\n        for(int j = 0; j <= k; j++) {\n            int x = nums[i];\n            dp[i][j] = max(dp[i][j], best[x][j] + 1);\n            if(j > 0) {\n                dp[i][j] = max(dp[i][j], best[opt[j - 1].fi][j - 1] + 1);\n                dp[i][j] = max(dp[i][j], best[opt[j - 1].se][j - 1] + 1);\n            }\n        }\n        for(int j = 0; j <= k; j++) {\n            int x = nums[i];\n            best[x][j] = max(best[x][j], dp[i][j]);\n            if(best[x][j] > best[opt[j].fi][j]) {\n                opt[j].se = opt[j].fi;\n                opt[j].fi = x;\n            } else {\n                if(best[x][j] > best[opt[j].se][j]) {\n                    opt[j].se = x;\n                }\n            }\n        }\n    }\n\n    int ans = 0;\n    for(int i = 0; i <= n; i++) {\n        for(int j = 0; j <= k; j++) ans = max(ans, dp[i][j]);\n    }\n    \n    return ans;\n}\n};",
    "submit_ts": 1717859739.0
}