{
    "username": "eulusoy",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.length();\n        vector<vector<int>> helper(n+1, vector<int>(2,0));\n        for(int i=0; i<n; ++i){\n            if(s[i]=='0'){\n                helper[i+1][0] = helper[i][0]+1;\n                helper[i+1][1] = helper[i][1];\n            }\n            else{\n                helper[i+1][0] = helper[i][0];\n                helper[i+1][1] = helper[i][1]+1;\n            }\n            // cout << helper[i+1][0] << \" \" << helper[i+1][1] << endl;\n        }\n        int ans = 0;\n        int jStep = 0;\n        for (int i=0; i<=n; ++i){\n            for (int j=i+1; j<=n; ){\n                int odds = helper[j][1] - helper[i][1];\n                int evens = helper[j][0] - helper[i][0];\n                if ((evens*evens)==odds){\n                    jStep = 1;\n                    ++ans;\n                }\n                else if ((evens*evens)<odds){\n                    jStep = min(n-j, (int)sqrt(odds)-evens)+1;\n                    ans += jStep;\n                }\n                else{\n                    jStep = min(n+1-j, evens*evens-odds);\n                }\n                // cout << i << \" \" << j << \" \" << jStep << \" \" << ans << endl;\n                j += jStep;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722137226",
    "subm_id": "1335757752"
}