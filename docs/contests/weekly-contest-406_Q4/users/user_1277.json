{
    "username": "sunsq",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int[][] cuts = new int[m + n - 1][2];\n        int idx = 0;\n        for (int x : horizontalCut) {\n            cuts[idx][0] = 0;\n            cuts[idx][1] = x;\n            idx++;\n        }\n        for (int y : verticalCut) {\n            cuts[idx][0] = 1;\n            cuts[idx][1] = y;\n            idx++;\n        }\n        Arrays.sort(cuts, (o1, o2) -> o2[1] - o1[1]);\n        long res = 0L;\n        int h = 0;\n        int v = 0;\n        for (int[] cut : cuts) {\n            if (cut[0] == 0) {  // horizontal\n                res += (v + 1) * cut[1];\n                h++;\n            } else {  // vertical\n                res += (h + 1) * cut[1];\n                v++;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720926137",
    "subm_id": "1320277091"
}