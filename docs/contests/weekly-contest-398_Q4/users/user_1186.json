{
    "username": "codor07",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    int mod = 1000000007;\ninline ll mul(ll a, ll b){    return ((a % mod)*(b % mod)) % mod;}\ninline ll add(ll a, ll b){    return ((a % mod)+(b % mod)) % mod;}\n    ll power(ll x, ll y)\n        {\n            long long int temp;\n            if (y == 0)\n                return 1;\n            temp = power(x, y / 2);\n            if (y % 2 == 0)\n                return mul(temp, temp);\n            else\n                return mul(x, mul(temp, temp));\n        }\n    \n    int dp[2][1000][50];\n    int s2(int j){\n        j--;\n        if(j < 0)return 0;\n        int temp = 0;\n        while(j >= 0){\n            temp += power(2, j);\n            j--;\n        }\n        return temp;\n    }\n    int solve(int pre, int mn, int j, int k){\n        int p = s2(j);\n        p -= mn;\n        p++;\n        int ans = 0;\n        if(p > k + 4)return 0;\n        if(dp[pre][mn][j] != -1)return dp[pre][mn][j];\n        if(p == k)ans++;\n        \n        if(pre == 0){\n            ans += (solve(pre, mn, j + 1, k) + solve(1, mn + 1, j, k));\n        }\n        else{\n            ans += solve(0, mn, j + 1, k);\n        }\n        return dp[pre][mn][j] = ans;\n    }\n    int waysToReachStair(int k) {\n        int j = 0, ans = 0, curr_pow = 1;\n//         while(true){\n//             if(curr_pow < k){\n//                 curr_pow = curr_pow + power(2, j);\n//             }\n//             else if(curr_pow == k)ans++;\n//             else{\n//                 req = curr_pow - k;\n//                 if(req > j + 1)break;\n//                 if(req == j + 1){\n//                     ans++;\n//                     break;\n//                 }\n//                 ans += \n                \n//             }\n//         }\n        memset(dp, -1, sizeof(dp));\n        return solve(0, 0, 0, k);\n    }\n};",
    "submit_ts": "1716090451",
    "subm_id": "1261867499"
}