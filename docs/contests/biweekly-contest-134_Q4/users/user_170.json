{
    "username": "chintsai",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nconst int N = 100010;\n\nstruct Node {\n    int l, r;\n    int s;\n} tr[N << 2];\n\nvoid build(vector<int> &nums, int u, int l, int r) {\n    tr[u] = {l, r};\n    if (l == r) {\n        tr[u].s = nums[l];\n    } else {\n        int mid = (l + r) >> 1;\n        build(nums, u << 1, l, mid);\n        build(nums, u << 1 | 1, mid + 1, r);\n        tr[u].s = tr[u << 1].s & tr[u << 1 | 1].s;\n    }\n}\n\nint query(int u, int l, int r) {\n    if (tr[u].l >= l && tr[u].r <= r) {\n        return tr[u].s;\n    } else {\n        int mid = (tr[u].l + tr[u].r) >> 1;\n        int res = INT32_MAX;\n        if (l <= mid) res = query(u << 1, l, r);\n        if (r > mid) res &= query(u << 1 | 1, l, r);\n        return res;\n    }\n}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int> &nums, int k) {\n        int n = nums.size();\n        build(nums, 1, 0, n - 1);\n        ll res = 0;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] < k) continue;\n            int l = -1, r = i;\n            while (l < r) {\n                int mid = (l + r + 1) >> 1;\n                if (query(1, mid, i) > k) r = mid - 1;\n                else l = mid;\n            }\n            if (l == -1 || query(1, l, i) != k) {\n                continue;\n            }\n            int high = l;\n            r = l, l = 0;\n            while (l < r) {\n                int mid = (l + r) >> 1;\n                if (query(1, mid, i) < k) l = mid + 1;\n                else r = mid;\n            }\n            int low = l;\n            res += high - low + 1;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720278045",
    "subm_id": "544560355"
}