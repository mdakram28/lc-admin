{
    "username": "sangam2ishra",
    "submission": "class Solution {\npublic:\n    long long func(vector<int>& v) {\n        int n = v.size();\n        long long cnt=v[0];\n        for(int i=1;i<n;i++)cnt+=max(v[i]*1LL-v[i-1]*1LL,0LL);\n\n        return cnt;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<vector<int>> V;\n        vector<int> v, w;\n\n        int n = nums.size();\n        int prev = 0;\n        for (int i = 0; i < n; i++) {\n            int dif = nums[i] - target[i];\n            if (dif > 0) {\n                v.push_back(dif);\n                if (prev == -1) {\n                    V.push_back(w);\n                    w.clear();\n                }\n                prev = 1;\n            } else if (dif < 0) {\n                w.push_back(-dif);\n                if (prev == 1) {\n                    V.push_back(v);\n                    v.clear();\n                }\n                prev = -1;\n            } else {\n                if (prev == 1) {\n                    V.push_back(v);\n                    v.clear();\n                } else if (prev == -1) {\n                    V.push_back(w);\n                    w.clear();\n                }\n                prev = 0;\n            }\n        }\n\n   \n        if (!v.empty()) V.push_back(v);\n        if (!w.empty()) V.push_back(w);\n\n        long long ans = 0;\n        for (auto& e : V) {\n            ans += func(e);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1721532708",
    "subm_id": "1327992166"
}