{
    "username": "mhasan01",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& e) {\n        int n = (int) e.size() + 1;\n        vector<vector<int>> graph(n);\n        vector<int> fir(n), sec(n), ans(n);\n\n        function<void(int, int)> dfs1 = [&](int node, int parent) {\n            for (int i : graph[node])\n                if (i != parent) {\n                    dfs1(i, node);\n                    int add = (i & 1 ? 1 : 2);\n                    if (fir[i] + add > fir[node]) {\n                        sec[node] = fir[node];\n                        fir[node] = fir[i] + add;\n                    } else if (fir[i] + add > sec[node]) {\n                        sec[node] = fir[i] + add;\n                    }\n                }\n        };\n\n        function<void(int, int, int)> dfs2 = [&](int node, int parent, int to_p) {\n            ans[node] = max(to_p, fir[node]);\n            for (int i : graph[node])\n                if (i != parent) {\n                    int add = (i & 1 ? 1 : 2);\n                    if (fir[i] + add == fir[node])\n                        dfs2(i, node, max(to_p, sec[node]) + (node & 1 ? 1 : 2));\n                    else dfs2(i, node, ans[node] + (node & 1 ? 1 : 2));\n                }\n        };\n        \n        for (auto ee : e) {\n            graph[ee[0]].push_back(ee[1]);\n            graph[ee[1]].push_back(ee[0]);\n        }\n        dfs1(0, -1);\n        dfs2(0, -1, 0);\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722697197",
    "subm_id": "1343137757"
}