{
    "username": "usib2787",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans=0;\n        vector<int>op;\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        int i1=0;\n        int i2=0;\n        while(i1<m-1||i2<n-1){\n            if(i2==n-1 || (i1!=m-1&&(horizontalCut[i1]>verticalCut[i2]))){\n                ans+= long( horizontalCut[i1]*(i2+1));\n                i1++;\n            }\n            else if(i1==m-1 || horizontalCut[i1]<verticalCut[i2]){\n                ans+= long( verticalCut[i2]*(i1+1));\n                i2++;\n            }\n            else{\n                if(i1<i2){\n                    ans+= long( verticalCut[i2]*(i1+1));\n                i2++;\n                }\n                else{\n                  ans+= long( horizontalCut[i1]*(i2+1));\n                i1++;  \n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926395",
    "subm_id": "1320284968"
}