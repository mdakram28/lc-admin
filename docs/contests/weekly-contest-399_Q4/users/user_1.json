{
    "username": "fmota",
    "submission": "template<typename T>\nstruct segtree {\n    vector<T> t;\n    int n;\n    segtree(int n): n(n) {\n        t.assign(2 * n, T());\n    }\n    void update(int p, T v){\n        for(t[p += n] = v; p >>= 1; )\n            t[p] = t[p<<1] + t[p<<1|1];\n    }\n    void add(int p, T v){\n        p += n;\n        t[p] = t[p] + v;\n        while(p >>= 1) t[p] = t[p<<1] + t[p<<1|1];\n    }\n    T query(int l, int r){\n        T cl = T(), cr = T();\n        for(l += n, r += n; l < r; l >>= 1, r >>= 1){\n            if(l&1) cl = cl + t[l++];\n            if(r&1) cr = t[--r] + cr;\n        }\n        return cl + cr;\n    }\n};\nusing ll = long long;\nconst ll inf = 1ll<<60;\nstruct node {\n      ll x[2][2];\n    node(){\n        memset(x, 0, sizeof(x));\n    }\n    node(int v){\n        memset(x, 0, sizeof(x));\n        x[1][1] = v;\n    }\n};\n\nnode operator + (node a, node b){\n    node ans;\n    for(int i = 0; i < 2; i++){\n        for(int j = 0; j < 2; j++){\n            for(int k = 0; k < 2; k++){\n                if(k && j) continue;\n                for(int l = 0; l < 2; l++){\n                    ans.x[i][l] = max(ans.x[i][l], a.x[i][j] + b.x[k][l]);\n                }\n            }\n        }\n    }\n    return ans;\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& a, vector<vector<int>>& qe) {\n        int n = a.size();\n        segtree<node> seg(n);\n        for(int i = 0; i < n; i++) seg.update(i, node(a[i]));\n        ll res = 0;\n        int q = qe.size();\n        for(int i = 0; i < q; i++){\n            int p = qe[i][0], v = qe[i][1];\n            seg.update(p, node(v));\n            node ans = seg.query(0, n);\n            ll best = 0;\n            for(int j = 0; j < 2; j++) for(int k = 0; k < 2; k++) best = max(best, ans.x[j][k]);\n            res += best;\n            res %= 1000000007;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716691263.0
}