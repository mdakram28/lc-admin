{
    "username": "user2349xl",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        vector<vector<int>> check(m, vector<int>(n, 0));\n        int cnt = 0;\n        int p = 0;\n        int x = 0;\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                // if (!grid[i][j]) continue;\n                if (check[i][j]) continue;\n                \n                //cout << i << \" \" << j << endl;\n                \n                int a = grid[i][j]; \n                int b = grid[m-1-i][j];\n                int c = grid[i][n-1-j];\n                int d = grid[m-1-i][n-1-j];\n                \n                check[i][j] = check[m-1-i][j] = check[i][n-1-j] = check[m-1-i][n-1-j] = 1;\n              \n                if (n-1-j == j && m-1-i == i) { // must be zero\n                    cnt += a;\n                } else if (m-1-i == i) {\n                    if (a != grid[i][n-1-j]) {\n                        cnt += 1;\n                        x += 1;\n                    } else {\n                        // cout << \"F: \" << grid[i][j] << \" == \" << grid[i][n-1-j] << endl;\n                        if (a) p += 1;\n                    }\n                } else if (n-1-j == j) {\n                    if (a != grid[m-1-i][j]) {\n                        cnt += 1;\n                        x += 1;\n                    } else {\n                        // cout << \"F: \" << grid[i][j] << \" == \" << grid[m-1-i][j] << endl;\n                        if (a) p += 1;\n                    }\n                } else {\n                    int x = a + b + c + d;\n                    cnt += min(x, 4 - x);\n                }\n            }\n        }\n        \n        \n        \n        cout << p << \" \" << x << \" \" << cnt << endl;\n        // cout << x << endl;\n        \n        p = p % 2;\n        \n        cnt += (p & (x == 0)) * 2;\n        \n        // cout << endl;\n        \n        return cnt;\n    }\n};\n\n// [[1],[1],[1],[0]] 1\n// [[1],[0],[1],[0],[1],[1]] 2\n\n// 1 1 1 0 1 1 1 0\n// 1 1 1 0 1 1 1 0",
    "submit_ts": "1722699135",
    "subm_id": "1343202510"
}