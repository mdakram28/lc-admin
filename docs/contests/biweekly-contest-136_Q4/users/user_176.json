{
    "username": "bgrm",
    "submission": "#pragma GCC optimize (\"Ofast\")\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n#define FOR(i, a, b) for (auto i=(a); i<(b); i++)\n#define FORD(i, a, b) for (int i=(a); i>(b); i--)\n#define SZ(x) ((int)(x).size())\n#define ALL(x) (x).begin(), (x).end()\n#define PPC(x) __builtin_popcountll(x)\n#define MSB(x) (63 - __builtin_clzll(x))\n#define LSB(x) __builtin_ctzll(x)\n#define ARG(x, i) (get<i>(x))\n#define ithBit(m, i) ((m) >> (i) & 1)\n#define pb push_back\n#define ft first\n#define sd second\n#define kw(a) ((a) * (a))\n#define CLR(x) x.clear(), x.shrink_to_fit()\n#ifdef DEBUG\n#include \"debug.h\"\n#else\n#define dbg(...) 0\n#endif\n#define VLD(i, j) (0 <= (i) and (i) < n and 0 <= (j) and (j) < m)\nusing namespace std;\n \ntemplate <typename T1, typename T2> inline void remin(T1& a, T2 b) { a = min(a, (T1)b);\t}\ntemplate <typename T1, typename T2> inline void remax(T1& a, T2 b) { a = max(a, (T1)b);\t}\n\nconst int maxN = 1 << 17, INF = 1 << 20;\n\nstruct Pair\n{\n\tint mx, mx2;\n\n\tvoid init()\n\t{\n\t\tmx = mx2 = 0;\n\t}\n\n\tvoid upd(int x)\n\t{\n\t\tif (x >= mx)\n\t\t\tmx2 = mx, mx = x;\n\t\telse if (x >= mx2)\n\t\t\tmx2 = x;\n\t}\n\n\tint getMxDiff(int x)\n\t{\n\t\treturn mx == x ? mx2 : mx;\n\t}\n\n} dp[maxN];\n\nint delay[maxN];\nvector <int> res, G[maxN];\n\nvoid dfsDp(int v, int fat)\n{\n\tdp[v].init();\n\n\tfor (int u : G[v]) if (u != fat)\n\t{\n\t\tdfsDp(u, v);\n\t\tdp[v].upd(dp[u].mx + delay[u]);\n\t}\n}\n\nvoid dfsRes(int v, int fat, int resUp)\n{\n\tres[v] = max(resUp, dp[v].mx);\n\n\tfor (int u : G[v]) if (u != fat)\n\t{\n\t\tint resUpU = dp[v].getMxDiff(dp[u].mx + delay[u]);\n\t\tremax(resUpU, resUp);\n\t\tresUpU += delay[v];\n\n\t\tdfsRes(u, v, resUpU);\n\t}\n}\n\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& E) {\n\n\t\tint n = SZ(E) + 1;\n\t\tfor (auto& e : E)\n\t\t{\n\t\t\tint a = e.front(), b = e.back();\n\t\t\tG[a].pb(b);\n\t\t\tG[b].pb(a);\n\t\t}\n\t\tFOR(i, 0, n)\n\t\t\tdelay[i] = i % 2 == 1 ? 1 : 2;\n\t\tdfsDp(0, 0);\n\n\t\tres.resize(n);\n\t\tdfsRes(0, 0, 0);\n\n\t\tFOR(i, 0, n)\n\t\t\tG[i].resize(0);\n\t\treturn res;        \n    }\n};\n",
    "submit_ts": "1722698964",
    "subm_id": "1343197335"
}