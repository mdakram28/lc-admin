{
    "username": "Devansh Rawat",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& v) {\n        int n = v.size(), m = v[0].size();\n        vector<vector<vector<int>>> maxi(n,vector<vector<int>>(m,vector<int>(6)));\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                int x = v[i][j];\n                if(i) x = max(x,maxi[i-1][j][0]);\n                if(j) x = max(x,maxi[i][j-1][0]);\n                if(i&&j) x = max(x,maxi[i-1][j-1][0]);\n                maxi[i][j][0] = x;\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            for(int j = m-1; j >= 0; j--) {\n                int x = v[i][j];\n                if(i) x = max(x,maxi[i-1][j][1]);\n                if((j+1)<m) x = max(x,maxi[i][j+1][1]);\n                if(i&&(j+1)<m) x = max(x,maxi[i-1][j+1][1]);\n                maxi[i][j][1] = x;\n            }\n        }\n        for(int i = n-1; i >= 0; i--) {\n            for(int j = 0; j < m; j++) {\n                int x = v[i][j];\n                if((i+1)<n) x = max(x,maxi[i+1][j][2]);\n                if(j) x = max(x,maxi[i][j-1][2]);\n                if((i+1)<n&&j) x = max(x,maxi[i+1][j-1][2]);\n                maxi[i][j][2] = x;\n            }\n        }\n        for(int i = n-1; i >= 0; i--) {\n            for(int j = m-1; j >= 0; j--) {\n                int x = v[i][j];\n                if((i+1)<n) x = max(x,maxi[i+1][j][3]);\n                if((j+1)<m) x = max(x,maxi[i][j+1][3]);\n                if((i+1)<n&&(j+1)<m) x = max(x,maxi[i+1][j+1][3]);\n                maxi[i][j][3] = x;\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                maxi[i][j][4] = v[i][j];\n                if(j) maxi[i][j][4] = max(maxi[i][j][4],maxi[i][j-1][4]);\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            for(int j = m-1; j >= 0; j--) {\n                maxi[i][j][5] = v[i][j];\n                if((j+1)<m) maxi[i][j][5] = max(maxi[i][j][5],maxi[i][j+1][5]);\n            }\n        }\n        long long ans = -1e18;\n        for(int i = 0; i < n; i++) {\n            for(int j = 1; j < m-1; j++) {\n                if(i>0&&(i+1)<n) {\n                    long long res1 = (1LL*v[i][j])+(1LL*maxi[i-1][j-1][0])+(1LL*maxi[i+1][j+1][3]);\n                    long long res2 = (1LL*v[i][j])+(1LL*maxi[i-1][j+1][1])+(1LL*maxi[i+1][j-1][2]);\n                    ans = max(ans,max(res1,res2));\n                }\n                for(int k = i-1; k > 0; k--) {\n                    long long res1 = (1LL*v[i][j])+(1LL*maxi[k][j-1][4])+(1LL*maxi[k-1][j+1][1]);\n                    long long res2 = (1LL*v[i][j])+(1LL*maxi[k-1][j-1][0])+(1LL*maxi[k][j+1][5]);\n                    ans = max(ans,max(res1,res2));\n                }\n                for(int k = i+1; k < (n-1); k++) {\n                    long long res1 = (1LL*v[i][j])+(1LL*maxi[k][j-1][4])+(1LL*maxi[k+1][j+1][3]);\n                    long long res2 = (1LL*v[i][j])+(1LL*maxi[k+1][j-1][2])+(1LL*maxi[k][j+1][5]);\n                    ans = max(ans,max(res1,res2));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908133",
    "subm_id": "1359139575"
}