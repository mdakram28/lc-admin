{
    "username": "darshit901",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        int pow = 1;\n        int t = 0;\n        long min = pow - (t+1);\n        \n        int total = 0;\n        while(min <= k) {\n            if(k >= min && k <= pow) {\n                int m = pow-k;\n                total += getWays(t+1, Math.min(m, t+1-m));\n            }\n            t++;\n            pow *= 2;\n            min = pow - (t+1);\n        }\n        \n        return total;\n    }\n    \n    public int getWays(int n, int m) {\n        long val = 1;\n        if(m == 0) {\n            return 1;\n        }\n        for(int i = 1; i<=m; i++) {\n            val = (val*n)/i;\n            n--;\n        }\n        \n        return (int)val;\n    }\n}",
    "submit_ts": "1716088435",
    "subm_id": "1261813888"
}