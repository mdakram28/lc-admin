{
    "username": "eruditesurgery",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        const int mod = 1e9 + 7;\n        const int mx = 400;\n        vector<int> dp(mx + 1, 0);\n        dp[0] = 1;\n\n        vector<pair<int, int>> req;\n        for (const auto& rr : r) {\n            req.emplace_back(rr[0] + 1, rr[1]);\n        }\n        sort(req.begin(), req.end());\n        int prev = 0;\n        for (int i = 1; i <= n; i++) {\n            vector<int> new_dp(dp.size(), 0LL);\n            for (int j = 0; j < dp.size(); j++) {\n                for (int k = 0; k <= min(j, i - 1); k++) {\n                    new_dp[j] = (new_dp[j] + dp[j - k]) % mod;\n                }\n            }\n            dp = std::move(new_dp);\n\n            auto it = lower_bound(req.begin(), req.end(), make_pair(i, 0));\n            if (it != req.end() && it->first == i) {\n                int target = it -> second;\n                fill(dp.begin(), dp.begin() + target, 0);\n                fill(dp.begin() + target + 1, dp.end(), 0);\n            }\n        }\n        \n        long long ans = 0LL;\n        for (int x : dp) {\n            ans = (ans + x) % mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719070857",
    "subm_id": "1296833376"
}