{
    "username": "viet_khanh",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int dp[nums.size()][k + 1];\n        int ans = 0;\n        map<int,int> mp;\n        int dif[k+1];\n        for (int i = 0; i <= k; i++) dif[i] = -1;\n        for (int i = 0; i < nums.size(); i++) {\n            for (int j = 0; j <= k; j++) {\n                if (i == 0) dp[i][j] = (j == 0);\n                else {\n                    dp[i][j] = (j == 0);\n                    // while (dif != -1 && dif + 1 < i && nums[dif] == nums[dif+1]) ++dif;\n                    if (j > 0 && nums[i] != nums[i-1] && (dif[j] == -1 || dp[i-1][j-1] > dp[dif[j]][j-1])) dif[j] = i-1;\n                    // if (i == 1) cout << \"Check: \" << nums[i] << \" \" << nums[i-1] << \" \" << (nums[i] != nums[i-1]) << \"\\n\";\n                    int id = mp[nums[i]];\n                    if (id != 0) dp[i][j] = max(dp[i][j], dp[id-1][j] + 1);\n                    if (dif[j] != -1 && j != 0) dp[i][j] = max(dp[i][j], dp[dif[j]][j-1] + 1);\n                }\n                ans = max(ans, dp[i][j]);\n                // cout << \"(\" << dif[j] << \", \" << dp[i][j] << \") \";\n            }\n            // cout << \"\\n\";\n            mp[nums[i]] = i + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717862104",
    "subm_id": "1281812239"
}