{
    "username": "kenkaneki08708",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) \n    {\n        int n = points.size();\n        vector<vector<int>> aux(n , vector<int>(2));\n        for(int i = 0;i<n;i++) aux[i][0] = points[i][0] + points[i][1];\n        for(int i = 0;i<n;i++) aux[i][1] = points[i][0] - points[i][1];\n        \n        int mx = INT_MAX , mn = INT_MIN;\n        int mx_sum1 = mn, mx_sum2 = mn , mx_diff1 = mn , mx_diff2 = mn;\n        int mn_sum1 = mx, mn_sum2 = mx , mn_diff1 = mx , mn_diff2 = mx;\n        \n        int mx_sum_idx1 = -1, mx_sum_idx2 = -1 , mx_diff_idx1 = -1 , mx_diff_idx2 = -1;\n        int mn_sum_idx1 = -1, mn_sum_idx2 = -1 , mn_diff_idx1 = -1 , mn_diff_idx2 = -1;\n        \n        for(int i = 0;i<n;i++)\n        {\n            if(mx_sum2 < aux[i][0])\n            {\n                mx_sum2 = aux[i][0];\n                mx_sum_idx2 = i;\n            }\n            if(mx_diff2 < aux[i][1])\n            {\n                mx_diff2 = aux[i][1];\n                mx_diff_idx2 = i;\n            }\n            \n            if(mx_sum1 < mx_sum2) \n            {\n                swap(mx_sum1 , mx_sum2);\n                swap(mx_sum_idx1 , mx_sum_idx2);\n            }\n            if(mx_diff1 < mx_diff2) \n            {\n                swap(mx_diff1 , mx_diff2);\n                swap(mx_diff_idx1 , mx_diff_idx2);\n            }\n            \n            \n            \n            if(mn_sum2 > aux[i][0])\n            {\n                mn_sum2 = aux[i][0];\n                mn_sum_idx2 = i;\n            }\n            if(mn_diff2 > aux[i][1])\n            {\n                mn_diff2 = aux[i][1];\n                mn_diff_idx2 = i;\n            }\n            \n            if(mn_sum1 > mn_sum2) \n            {\n                swap(mn_sum1 , mn_sum2);\n                swap(mn_sum_idx1 , mn_sum_idx2);\n            }\n            if(mn_diff1 > mn_diff2) \n            {\n                swap(mn_diff1 , mn_diff2);\n                swap(mn_diff_idx1 , mn_diff_idx2);\n            }\n        }\n        \n        int ans = max((mx_sum1 - mn_sum1) , (mx_diff1 - mn_diff1));\n        for(int i = 0;i<n;i++)\n        {\n            int mxi_sum = mx_sum1 , mni_sum = mn_sum1;\n            int mxi_diff = mx_diff1 , mni_diff = mn_diff1;\n            if(mx_sum_idx1 == i) mxi_sum = mx_sum2;\n            if(mn_sum_idx1 == i) mni_sum = mn_sum2;\n            \n            if(mx_diff_idx1 == i) mxi_diff = mx_diff2;\n            if(mn_diff_idx1 == i) mni_diff = mn_diff2;\n            ans = min(ans ,max(mxi_sum - mni_sum , mxi_diff - mni_diff));\n        }\n        return ans;\n        \n    }\n};"
}