{
    "username": "WarisChugh",
    "submission": "class Solution {\n    \n    unordered_map<string,int> mp;\n    \n    int helper(int ind,int jump,int k,int flag)\n    {\n        if(ind > k+1)\n            return 0;\n        \n        // if(ind == k+1)\n        //     return (flag == 0);\n    \n        string curr = to_string(ind) + \"!\" + to_string(jump) + \"!\" + to_string(flag);\n        \n      //  cout<<\"curr is \"<<curr<<endl;\n        \n        if(mp.count(curr) > 0)\n            return mp[curr];\n    \n        int res = 0;\n        if(ind == k)\n            res++;\n        \n        if(flag == 0 && ind-1 >= 0)\n        {\n            res += helper(ind-1,jump,k,1);\n        }\n        res += helper(ind + pow(2,jump),jump + 1,k,0);\n        \n        mp[curr] = res;\n        return res;\n    }\n    \npublic:\n    int waysToReachStair(int k) {\n        mp.clear();\n        return helper(1,0,k,0);\n    }\n};",
    "submit_ts": 1716090379.0
}