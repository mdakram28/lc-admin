{
    "username": "vibrant-6angulyta3",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\n\tvector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n\t\tint cur = n - 1;\n\t\tauto cmp = [&](pair<int, int> p1, pair<int, int> p2) -> bool {\n\t\t\tif (p1.first != p2.first) {\n\t\t\t\treturn p1.first < p2.first;\n\t\t\t}else {\n\t\t\t\treturn p1.second < p2.second;\n\t\t\t}\n\t\t};\n\t\tset<pair<int, int>, decltype(cmp)> st(cmp);\n\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\tst.emplace(make_pair(i, i + 1));\n\t\t}\n\t\tint m = queries.size();\n\t\tvector<int> ans(m, 1e9);\n\t\tfor (int i = 0; i < queries.size(); i++) {\n\t\t\tint l = queries[i][0], r = queries[i][1];\n\t\t\tif (i > 0) {\n\t\t\t\tans[i] = ans[i - 1];\n\t\t\t}\n\t\t\tpair<int, int> find = {l, r};\n\t\t\tauto itr = st.lower_bound(find);\n\t\t\tif (itr != st.end()) {\n\t\t\t\tpair<int, int> p = *itr;\n\t\t\t\tif (p.first == l && p.second >= r) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (itr != st.begin()) {\n\t\t\t\tpair p = *prev(itr);\n\t\t\t\tif (p.first < l && p.second >= r) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfind = {l, l};\n\t\t\titr = st.lower_bound(find);\n\t\t\tint tot = r - l - 1;\n\t\t\twhile(itr != st.end()) {\n\t\t\t\tpair<int, int> p = *itr;\n\t\t\t\tint L = p.first, R = p.second;\n\t\t\t\tif (L >= r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (R <= r) {\n\t\t\t\t\ttot -= R - L - 1;\n\t\t\t\t\tauto temp = next(itr);\n\t\t\t\t\tst.erase(itr);\n\t\t\t\t\titr = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tst.emplace(make_pair(l, r));\n\t\t\tcur -= tot;\n\t\t\tans[i] = cur;\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n};\n",
    "submit_ts": "1722740988",
    "subm_id": "552335129"
}