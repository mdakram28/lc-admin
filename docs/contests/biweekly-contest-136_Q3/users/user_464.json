{
    "username": "pecann",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int sum = grid[i][j] + grid[n - i - 1][j] + grid[i][m - j - 1] + grid[n - i - 1][m - j - 1];\n                ans += 2 - std::abs(sum - 2);\n            }\n        }\n        if (n % 2 && m % 2 && grid[n / 2][m / 2] == 1) {\n            ans++;\n        }\n        int cnt_opt = 0, cnt = 0;\n        if (n % 2) {\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1]) {\n                    ans++, cnt_opt += 2;\n                } else if (grid[n / 2][j] == 1) {\n                    cnt += 2;\n                }\n            }\n        }\n        if (m % 2) {\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) {\n                    ans++, cnt_opt += 2;\n                } else if (grid[i][m / 2] == 1) {\n                    cnt += 2;\n                }\n            }\n        }\n        if (cnt % 4 && cnt_opt == 0) {\n           ans += 2; \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697305",
    "subm_id": "552265464"
}