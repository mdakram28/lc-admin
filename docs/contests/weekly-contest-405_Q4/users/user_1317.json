{
    "username": "Euuuureka",
    "submission": "class Solution {\n    class Trie{\n        public:\n        int cost;\n        bool isWord;\n        vector<Trie*> ch;\n        Trie(int c, bool word): cost(c), isWord(word), ch(26) {}\n        Trie(): cost(-2), isWord(false), ch(26) {}\n    };\n\n    int minimumCost(int i, vector<int>& dp, string& target, Trie* trie1){\n        int l = target.length();\n        if(i == l) return 0;\n        if(dp[i] != -2) return dp[i];\n        int cost = INT_MAX;\n        Trie* trie = trie1;\n        for(int j=i; j<l; ++j){\n            if(trie->ch[target[j] - 'a'] == nullptr) break;\n            trie = trie->ch[target[j] - 'a'];\n            if(trie->isWord){\n                int minCost = minimumCost(j+1, dp, target, trie1);\n                if(minCost >= 0) cost = min(cost, trie->cost + minCost);\n            }\n        }\n        dp[i] = (cost == INT_MAX) ? -1 : cost;\n        //cout<<i<<\" \"<<dp[i]<<endl;\n        return dp[i];\n    }\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int l = target.length(), n = words.size();\n        vector<int> dp(l, -2);\n        Trie* trie = new Trie();\n        for(int i=0; i<n; ++i){\n            auto node = trie;\n            for(int j=0; j<words[i].length(); ++j){\n                if(node->ch[words[i][j]-'a'] == nullptr)\n                    node->ch[words[i][j]-'a'] = new Trie();\n                node = node->ch[words[i][j]-'a'];\n            }\n            node->isWord = true;\n            node->cost = node->cost<0 ? costs[i] : min(node->cost, costs[i]);\n        }\n        return minimumCost(0, dp, target, trie);\n    }\n};",
    "submit_ts": "1720323923",
    "subm_id": "1312387356"
}