{
    "username": "adityavkrm",
    "submission": "class Solution {\npublic:\n    void solve(int start, int end, const vector<int>& nums, int k, int& ans) {\n        if (start > end) {\n            return;\n        }\n        int curr = nums[start];\n        for (int j = start + 1; j <= end; ++j) {\n            int updated = curr & nums[j];\n            if (updated >= k) {\n                curr = updated;\n                continue;\n            }\n            ans = min(ans, min(curr - k, k - updated));\n            curr = nums[j];\n            for (int i = j - 1; i >= start; --i) {\n                updated = curr & nums[i];\n                if (updated <= k) {\n                    ans = min(ans, k - updated);\n                    break;\n                }\n                curr = updated;\n            }\n        }\n        ans = min(ans, abs(curr - k));\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int lowerCount = 0, lowerAns = INT_MAX;\n        const int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] <= k) {\n                ++lowerCount;\n                lowerAns = min(lowerAns, k - nums[i]);\n            }\n        }\n        if (lowerAns == 0 || lowerCount == n) {\n            return lowerAns;\n        }\n        int ans = lowerAns;\n        int curr = INT_MAX, i = 0;\n        for (int j = 0; j < n; ++j) {\n            if (nums[j] < k) {\n                solve(i, j - 1, nums, k, ans);\n                i = j + 1;\n            }\n        }\n        solve(i, n - 1, nums, k, ans);\n        return ans;\n    }\n};",
    "submit_ts": 1717300702.0
}