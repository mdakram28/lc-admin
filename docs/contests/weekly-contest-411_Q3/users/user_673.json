{
    "username": "Dorjderem Namsraijav",
    "submission": "\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(10 ** 5 + 1)\n\n        if k == 1:\n            return str(10 ** n - 1)\n        if k == 2:\n            if n == 1:\n                return '8'\n            return ('8' + '9'*max(0, n - 2) + '8')\n        if k == 3:\n            return '9' * n\n        if k == 4:\n            if n <= 4:\n                return ('8' * n)\n            return ('88' + '9' * (n - 4) + '88')\n        if k == 5:\n            if n == 1:\n                return '5'\n            return ('5' + '9'*max(0, n - 2) + '5')\n        if k == 6:\n            if n <= 2:\n                return ('6' * n)\n            if n == 3:\n                return '888'\n            half = (n - 3) // 2\n            d = 9\n            m = 1\n            if n % 2 == 0:\n                d = 99\n                m = 11\n            while int('8' + '9' * half + str(d) + '9' * half + '8') % k != 0:\n                d -= m\n            return ('8' + '9' * half + str(d) + '9' * half + '8')\n        if k == 7:\n            if n <= 2:\n                return ('7' * n)\n            if n == 3:\n                return '959'\n            d = 99\n            while d >= 0:\n                left = (n - len(str(d))) // 2\n                t = '9' * left + str(d) + '9' * left\n                num = int(t)\n                if num % k == 0 and t == t[::-1] and len(t) == n:\n                    return t\n                d -= 1\n        if k == 8:\n            if n <= 6:\n                return ('8' * n)\n            return ('888' + '9' * (n - 6) + '888')\n        if k == 9:\n            return ('9' * n)\n        return 0",
    "submit_ts": "1723951913",
    "subm_id": "1359783207"
}