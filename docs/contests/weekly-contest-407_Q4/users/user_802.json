{
    "username": "blazing_Coder",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<long long int>diff(n);\n        for(int i=0; i<n; i++){\n            diff[i] = target[i]-nums[i];\n        }\n        int i=0; \n        while(i<n && !diff[i])    i++;\n        // cout<<i<<endl;\n        if(i == n)  return ans;\n        bool pos = true;\n        if(diff[i] < 0) pos = false;\n        ans = abs(diff[i++]);\n        for(; i<n; i++){\n            // cout<<\"Taking: \"<<pos<<\" \"<<diff[i]<<endl;\n            // cout<<\"answers: \"<<ans<<endl;\n            if(pos && diff[i] >= 0){\n                ans += max(diff[i]-diff[i-1], (long long)0);\n            }\n            else if(pos && diff[i] < 0){\n                pos = false;\n                ans += abs(diff[i]);\n            }\n            else if(!pos && diff[i] < 0){\n                ans += max(diff[i-1] - diff[i], (long long)0);\n            }\n            else if(!pos && diff[i] >= 0){\n                pos = true;\n                ans += diff[i];\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531885",
    "subm_id": "1327972340"
}