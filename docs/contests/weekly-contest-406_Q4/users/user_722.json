{
    "username": "mzhaodev",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end());\n        std::sort(verticalCut.begin(), verticalCut.end());\n        int i = m - 2, j = n - 2;\n        int horizontal_pieces = 1;\n        int vertical_pieces = 1;\n        long long cost = 0;\n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                // make a horizontal cut\n                cost += horizontalCut[i] * horizontal_pieces;\n                ++vertical_pieces;\n                --i;\n            } else {\n                cost += verticalCut[j] * vertical_pieces;\n                ++horizontal_pieces;\n                --j;\n            }\n        }\n        while (i >= 0) {\n                cost += horizontalCut[i] * horizontal_pieces;\n                --i;\n        }\n        while (j >= 0) {\n                cost += verticalCut[j] * vertical_pieces;\n                --j;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925473",
    "subm_id": "1320255892"
}