{
    "username": "Sarthak3204",
    "submission": "using ll = long long;\nclass Solution {\npublic:\n    int waysToReachStair(int n) {\n        vector<map<ll, ll>> dp(35);\n\n        auto f = [&](auto && f, ll j, ll i) -> int {\n            auto it = dp[j].find(i);\n            if (it != dp[j].end()) return it->second;\n\n            ll res = (i == n);\n\n            if (i + (1ll << j) <= n + 1)\n                res += f(f, j + 1, i + (1ll << j));\n\n            if (i == n + 1)\n                res += 1ll;\n\n            if (i - 1 + (1ll << j) <= n + 1) res += f(f, j + 1, i - 1 + (1ll << j));\n\n            return dp[j][i] = res;\n        };\n\n        ll ans = f(f, 0, 1);\n        return ans;\n    }\n};",
    "submit_ts": "1716088898",
    "subm_id": "1261827209"
}