{
    "username": "utsav4578",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         int n = nums.size();\n    long long result = 0;\n    std::unordered_map<long long, long long> previousMap;\n\n    for (int i = 0; i < n; ++i) {\n        std::unordered_map<long long, long long> currentMap;\n        if (nums[i] == k) {\n            result++;\n        }\n        currentMap[nums[i]] = 1;\n\n        for (const auto& pair : previousMap) {\n            long long newAndResult = pair.first & nums[i];\n            if (newAndResult == k) {\n                result += pair.second;\n            }\n            currentMap[newAndResult] += pair.second;\n        }\n\n        previousMap = std::move(currentMap);\n    }\n\n    return result;\n    }\n};",
    "submit_ts": "1720280904",
    "subm_id": "1311806186"
}