{
    "username": "faizanhussain2310",
    "submission": "#define ll long long\n#define inf 2e18\n\nclass SGTree\n{\n    vector<ll> seg;\n\npublic:\n    SGTree(ll n)\n    {\n        seg.resize(4 * n + 1);\n    }\n\n    void build(ll ind, ll low, ll high, vector<int> &arr)\n    {\n        if (low == high)\n        {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        ll mid = (low + high) / 2;\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = (seg[2 * ind + 1] & seg[2 * ind + 2]);\n    }\n\n    ll query(ll ind, ll low, ll high, ll l, ll r)\n    {\n        // no overlap\n        // l r low high or low high l r\n        if (r < low || high < l)\n            return ((1ll<<32)-1);\n\n        // complete overlap\n        // [l low high r]\n        if (low >= l && high <= r)\n            return seg[ind];\n\n        ll mid = (low + high) >> 1;\n        ll left = query(2 * ind + 1, low, mid, l, r);\n        ll right = query(2 * ind + 2, mid + 1, high, l, r);\n        return (left & right);\n    }\n    void update(ll ind, ll low, ll high, ll i, ll val)\n    {\n        if (low == high)\n        {\n            seg[ind] = val;\n            return;\n        }\n\n        ll mid = (low + high) >> 1;\n        if (i <= mid)\n            update(2 * ind + 1, low, mid, i, val);\n        else\n            update(2 * ind + 2, mid + 1, high, i, val);\n        seg[ind] = (seg[2 * ind + 1] & seg[2 * ind + 2]);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        ll n=nums.size();\n        ll ans=inf;\n        SGTree seg(n+5);\n        seg.build(0,0,n-1,nums);\n        \n        for(int i=0; i<n; i++) {\n            ll l=i,r=n-1;    \n            ll idx=-1;\n            \n            while(l<=r) {\n                ll mid=(l+r)/2;\n                \n                ll AND_value=seg.query(0,0,n-1,i,mid);\n                if(AND_value<=k) {\n                    idx=mid;\n                    r=mid-1;\n                }\n                else {\n                    l=mid+1;\n                }\n                \n            }\n            if(idx!=-1) {\n                ll value=seg.query(0,0,n-1,i,idx);\n                ans=min(ans,abs(value-k));\n            }\n            \n            l=i,r=n-1;\n            idx=-1;\n            \n            while(l<=r) {\n                ll mid=(l+r)/2;\n                \n                ll AND_value=seg.query(0,0,n-1,i,mid);\n                if(AND_value>=k) {\n                    idx=mid;\n                    l=mid+1;\n                }\n                else {\n                    r=mid-1;\n                }\n                \n            }\n            if(idx!=-1) {\n                ll value=seg.query(0,0,n-1,i,idx);\n                ans=min(ans,abs(value-k));\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717297913.0
}