{
    "username": "Pranav_Sharda",
    "submission": "class Solution {\n    static int lower_bound( ArrayList<Pair>array, int key)\n    {\n        int low = 0, high = array.size();\n        int mid;\n        while (low < high) {\n            mid = low + (high - low) / 2;\n            if (key <= array.get(mid).y) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        if (low < array.size() && array.get(low).y < key) {\n            low++;\n        }\n        return low;\n    }\n    public int minChanges(int[] a, int k) {\n        HashMap<Integer,Integer>s=new HashMap<>();\n        ArrayList<Pair>arr=new ArrayList<>();\n        int n=a.length;\n        for(int g=0;g<n/2;g++){\n            int val=Math.abs(a[g]-a[n-g-1]);\n            arr.add(new Pair(g,Math.max(k-Math.min(a[g],a[n-g-1]),Math.max(a[g],a[n-g-1]))));\n            s.put(val,s.containsKey(val)?s.get(val)+1:1);\n        }\n        Collections.sort(arr,(v,w)->v.y-w.y);\n        int min=Integer.MAX_VALUE;\n        // System.out.println(s);\n        for(int x:s.keySet()){\n            int d=lower_bound(arr,x);\n            int left=n/2-s.get(x)-d;\n            // System.out.println(d+\" \"+left);\n         min=Math.min(d*2+left,min);\n        }\n        return min;\n    }\n}\nclass Pair{\n    int x,y;\n    Pair(int x,int y){\n        this.x=x;\n        this.y=y;\n    }\n    \n}",
    "submit_ts": "1721489491",
    "subm_id": "1327454837"
}