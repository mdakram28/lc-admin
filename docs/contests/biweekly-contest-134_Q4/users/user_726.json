{
    "username": "incognito123",
    "submission": "#define ll long long\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        ll lift[n][32];\n        ll next[n][32];\n        memset(lift,0,sizeof(lift));\n        memset(next,-1,sizeof(next));\n        for(ll i=0;i<n-1;i++){\n            lift[i][0]=nums[i]&nums[i+1];\n            next[i][0]=i+1;\n        }\n        for(ll i=1;i<32;i++){\n            for(ll j=0;j<n;j++){\n                ll tk=lift[j][i-1];\n                ll mid=next[j][i-1];\n                if(mid!=-1){\n                    lift[j][i]=tk&lift[mid][i-1];\n                    next[j][i]=next[mid][i-1];\n                }\n            }\n        }\n        ll ans=0;\n        for(ll i=0;i<n;i++){\n            ll l=-1;\n            ll r=-1;\n            if(nums[i]==k){\n                l=1;\n            }\n            else{\n                ll l1=0;\n                ll r1=n-i;\n                while(l1<=r1){\n                    ll mid=(l1+r1)/2;\n                    ll tk=nums[i];\n                    ll steps=max(0LL,mid-1LL);\n                    ll curr=i;\n                    bool flag=true;\n                    for(ll j=31;j>=0;j--){\n                        if(steps&(1<<j)){\n                             if(curr==-1) {\n                                flag=false;\n                                tk=0;\n                                break;\n                            }\n                            tk&=lift[curr][j];\n                            curr=next[curr][j];\n                        }\n                    }\n                    if(tk>k){\n                        l1=mid+1;\n                    }\n                    else if(tk==k){\n                        l=mid;\n                        // cout<<l1<<\" \"<<r1<<\" \"<<mid<<\" \"<<tk<<\" \"<<k<<endl;\n                        r1=mid-1;\n                    }\n                    else{\n                        r1=mid-1;\n                    }\n                }\n            }\n            ll l1=0;\n            ll r1=n-i;\n            r=l;\n            while(l1<=r1){\n                ll mid=(l1+r1)/2;\n                ll tk=nums[i];\n                ll steps=max(0LL,mid-1LL);;\n                ll curr=i;\n                bool flag=true;\n                for(ll j=31;j>=0;j--){\n                    if(steps&(1<<j)){\n                        if(curr==-1) {\n                            flag=false;\n                            tk=0;\n                            break;\n                        }\n                        tk&=lift[curr][j];\n                        curr=next[curr][j];\n                    }\n                }\n                if(tk>k){\n                    l1=mid+1;\n                }\n                else if(tk==k){\n                    r=mid;\n                    l1=mid+1;\n                }\n                else{\n                    r1=mid-1;\n                }\n            }\n            // cout<<i<<\" \"<<l<<\" \"<<r<<endl;\n            if(l!=-1&&r!=-1){\n                ans+=(r-l+1LL);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279812",
    "subm_id": "1311766077"
}