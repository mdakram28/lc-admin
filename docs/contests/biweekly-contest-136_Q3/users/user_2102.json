{
    "username": "kiriglor",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ans = 0\n        for i in range(len(grid)//2):\n            to_zero = 0\n            for j in range(len(grid[i])//2):\n                col_len = len(grid)-i-1\n                row_len = len(grid[i]) -j-1\n                to_zero = grid[i][j]+ grid[col_len][j] +grid[i][row_len] + grid[col_len][row_len]\n                ans += min([4-to_zero,to_zero])\n        if len(grid)%2 ==1 and len(grid[0])%2 == 1:\n            if grid[len(grid)//2][len(grid[0])//2] == 1:\n                ans+=1\n            grid[len(grid)//2][len(grid[0])//2]=0 \n        pairs = 0\n        count_1 = 0\n        if len(grid)%2 == 1:\n            mid = len(grid)//2\n            p_1 = 0\n            p_2 = len(grid[0])-1\n            to_del_1 = 0\n            print('hi')\n            while p_1 < p_2:\n                print(grid[mid][p_1],grid[mid][p_2])\n                if grid[mid][p_1] == 1 and grid[mid][p_2] == 1:\n                    pairs+=1 \n                elif grid[mid][p_1] == 1 or grid[mid][p_2] == 1:\n                    count_1 += 1\n                p_1+=1\n                p_2-=1\n                print(count_1,'asd')\n        if len(grid[0])%2 == 1:\n            mid = len(grid[0])//2\n            p_1 = 0\n            p_2 = len(grid)-1\n            to_del_1 = 0\n            while p_1 < p_2:\n                if grid[p_1][mid] == 1 and grid[p_2][mid] == 1:\n                    pairs+=1 \n                elif grid[p_1][mid] == 1 or grid[p_2][mid] == 1:\n                    count_1 += 1\n                p_1+=1\n                p_2-=1\n        print(ans)\n        if pairs%2 and count_1 == 0:\n            ans+=2\n        else:\n            ans+=count_1\n        print(ans,count_1)\n        return ans",
    "submit_ts": "1722699022",
    "subm_id": "1343199113"
}