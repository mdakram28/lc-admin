{
    "username": "fiercfly",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        long result = 0;\n        const int MOD = 1'000'000'007;\n        unordered_map<int, int> reqMap;\n        const int MAX_INV = 400;\n        vector<vector<long>> prefixCounts(n + 1, vector<long>(MAX_INV + 1, 0));\n        prefixCounts[0][0] = 1;\n        \n        for (auto& req : requirements) {\n            reqMap[req[0] + 1] = req[1];\n        }\n\n        for (int len = 1; len <= n; len++) {\n            for (int inv = 0; inv <= MAX_INV; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int prevInv = inv - pos;\n                    if (prevInv >= 0) {\n                        prefixCounts[len][inv] = (prefixCounts[len][inv] + prefixCounts[len - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (reqMap.count(len)) {\n                int targetInv = reqMap[len];\n                for (int inv = 0; inv <= MAX_INV; inv++) {\n                    if (inv != targetInv) {\n                        prefixCounts[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        for (long count : prefixCounts[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1719070410",
    "subm_id": "1296822347"
}