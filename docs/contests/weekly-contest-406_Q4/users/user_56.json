{
    "username": "qpwoeirut",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,int>> cuts;\n        for (int i=0; i<m - 1; ++i) {\n            cuts.emplace_back(horizontalCut[i], true);\n        }\n        for (int i=0; i<n - 1; ++i) {\n            cuts.emplace_back(verticalCut[i], false);\n        }\n\n        sort(cuts.begin(), cuts.end(), greater<pair<int,int>>());\n\n        long long h = 1, v = 1;\n        long long ans = 0;\n        for (const pair<int,int>& cut: cuts) {\n            if (cut.second) {\n                ans += v * cut.first;\n                ++h;\n            } else {\n                ans += h * cut.first;\n                ++v;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720924853",
    "subm_id": "1320233539"
}