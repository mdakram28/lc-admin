{
    "username": "Ivan_len",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        int i = 0;\n        vector<int> same;\n        for (int i = 0; i < n; i++) {\n            if (i == 0) {\n                if (a[i] == a[n - 1]) same.push_back(i);\n            }\n            else {\n                if (a[i] == a[i - 1]) same.push_back(i);\n            }\n        }\n        int ans = 0;\n        int m = same.size();\n        if (k == n) {\n            if (m > 1) return 0;\n            if (m == 1) return 1;\n            return n;\n        }\n        if (m == 0) {\n            return n;\n        }\n        for (int i = 0; i < m; i++) {\n            int cur = same[i];\n            int pre = (i == 0)?(same[m - 1] - n):same[i - 1];\n            cout << pre << ' ' << cur << '\\n';\n            int length = cur - pre;\n            if (length >= k) ans += length - k + 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277106",
    "subm_id": "1311648006"
}