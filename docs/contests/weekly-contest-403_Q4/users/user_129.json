{
    "username": "nifeshe",
    "submission": "#define f first\n#define s second\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) ((int) (x).size())\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntemplate <typename T> inline bool umin(T &a, const T &b) { if(a > b) { a = b; return 1; } return 0; }\ntemplate <typename T> inline bool umax(T &a, const T &b) { if(a < b) { a = b; return 1; } return 0; }\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst ll mod = 1e9 + 7;\nconst ll base = 1e6 + 9;\nconst ll inf = 1e9;\nconst int MAX = 2e5 + 42;\nconst int LG = 20;\n\narray<int, 4> dp[31][31][31][31];\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        auto a = grid;\n        int n = sz(a);\n        int m = sz(a[0]);\n        for(int x1 = 0; x1 < n; x1++) {\n            for(int x2 = x1; x2 < n; x2++) {\n                for(int y1 = 0; y1 < m; y1++) {\n                    for(int y2 = y1; y2 < m; y2++) {\n                        for(int i = 0; i < 4; i++) {\n                            dp[x1][y1][x2][y2][i] = (int) inf;\n                        }\n                    }\n                }\n            }\n        }\n        auto pref = a;\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                if(i) pref[i][j] += pref[i - 1][j];\n                if(j) pref[i][j] += pref[i][j - 1];\n                if(i && j) pref[i][j] -= pref[i - 1][j - 1];\n            }\n        }\n        auto get = [&](int x1, int y1, int x2, int y2) {\n            return pref[x2][y2] - (x1? pref[x1 - 1][y2] : 0) - (y1? pref[x2][y1 - 1] : 0) + (x1 && y1? pref[x1 - 1][y1 - 1] : 0);\n        };\n        for(int x1 = 0; x1 < n; x1++) {\n            for(int y1 = 0; y1 < m; y1++) {\n                for(int x2 = x1; x2 < n; x2++) {\n                    for(int y2 = y1; y2 < m; y2++) {\n                        if(!get(x1, y1, x2, y2)) dp[x1][y1][x2][y2][0] = 0;\n                        dp[x1][y1][x2][y2][1] = (x2 - x1 + 1) * (y2 - y1 + 1);\n                    }\n                }\n            }\n        }\n        for(int x1 = n - 1; ~x1; x1--) {\n            for(int y1 = m - 1; ~y1; y1--) {\n                for(int x2 = x1; x2 < n; x2++) {\n                    for(int y2 = y1; y2 < m; y2++) {\n                        for(int f = 0; f <= 3; f++) {\n                            for(int s = 0; s + f <= 3; s++) {\n                                for(int l = x1; l + 1 <= x2; l++) {\n                                    umin(dp[x1][y1][x2][y2][f + s], dp[x1][y1][l][y2][f] + dp[l + 1][y1][x2][y2][s]);\n                                }\n                                for(int l = y1; l + 1 <= y2; l++) {\n                                    umin(dp[x1][y1][x2][y2][f + s], dp[x1][y1][x2][l][f] + dp[x1][l + 1][x2][y2][s]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return dp[0][0][n - 1][m - 1][3];\n    }\n};",
    "submit_ts": 1719112433.0
}