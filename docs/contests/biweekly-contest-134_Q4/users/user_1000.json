{
    "username": "invicto",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long sum = 0;\n        unordered_map<long long int, long long int> prev;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long int, long long int> curr; \n            if (nums[i] == k) {\n                ++sum;\n            }\n            curr[nums[i]] = 1;\n            for(auto &u:prev){\n                long long int v=u.first;\n                v&=nums[i];\n                if(v-k==0){\n                    sum+=u.second;\n                }\n                curr[v]+=u.second;\n            }\n            prev = curr;\n        }\n\n        return sum;\n    }\n};",
    "submit_ts": "1720280597",
    "subm_id": "1311795293"
}