{
    "username": "ansonll",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n#         1 + 1 = 2\n#         1 + 2 = 3\n#         1 + 4 = 5\n#         1 + 8 = 9\n        \n        @cache\n        def dfs(c, l, j):\n            if c < 0: return 0\n            \n#             if c == k:\n#                 if j != 0: return 1\n#                 if c == 0: return dfs(c + 2 ** j, False, j + 1)\n#                 else: \n#                     if l:\n#                         return dfs(c + 2 ** j, False, j + 1)\n#                     else:\n#                         return dfs(c + 2 ** j, False, j + 1) + dfs(c - 1, True, j + 1)\n        \n#             if c > k + 1: return 0\n            if c > k + 1: return 0\n            res = 0\n            if c == k: res += 1\n            if not l and c != 0: \n                res += dfs(c - 1, True, j)\n            res += dfs(c + 2 ** j, False, j + 1)\n            return res\n        \n        return dfs(1, False, 0)\n        \n            \n            ",
    "submit_ts": 1716088424.0
}