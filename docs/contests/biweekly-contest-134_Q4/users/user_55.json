{
    "username": "louisfghbvc",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        // goal: find the subarray such that the AND value is k\n        // idea:\n        \n        // 01 10 11, k=1 \n        //  1  0 1 , ans = 2\n        \n        // TC: O(n^2)\n        // AND value is decreasing\n        // when ending at index i, the AND value when we moving the left pointer, we only have at most 30\n        // using hashmap\n        \n        unordered_map<int, long> cnt;\n        long ans = 0;\n        for (int x: nums) {\n            unordered_map<int, long> next;\n            for (auto &[a, f]: cnt) {\n                next[a&x] += f;\n            }\n            next[x]++;\n            swap(cnt, next);\n            if (cnt.count(k))\n                ans += cnt[k];\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720276556",
    "subm_id": "1311621002"
}