{
    "username": "KRKanakad",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    class SGTree\n{\n    vector<int> seg;\n    public:\n \n    SGTree(int n)\n    {\n        seg.resize(4*n + 1);\n    }\n \n    void build(int ind,int low,int high,vector<int> &arr)\n    {\n        if(low == high)\n        {\n            seg[ind] = arr[low];\n            return;\n        }\n \n        int mid = (low + high)/2;\n        build(2*ind + 1,low,mid,arr);\n        build(2*ind + 2,mid+1,high,arr);\n \n        seg[ind] = seg[2*ind + 1] & seg[2*ind + 2];\n    }\n \n    int query(int ind,int low,int high,int l,int r)\n    {\n        if(r < low || high < l)\n        return 1;\n \n        if(low >= l && high <= r)\n        return seg[ind];\n \n        int mid = (low + high)/2;\n        int left = query(2*ind + 1,low,mid,l,r);\n        int right = query(2*ind + 2,mid+1,high,l,r);\n \n        return left & right;\n    }\n    \n    long long solve(vector<int> &nums,int k)\n    {\n        if(k <= 0)\n            return 0;\n        \n        int n = nums.size(),l = 0,r = 0;\n        long long ans = 0;\n        int cand = 1;\n        while(r < n)\n        {\n            cand = cand & nums[r];\n            // cout<<cand<<endl;\n            while(cand < k && l <= r)\n            {\n                cand = query(0,0,n-1,l,r);\n                l++;\n            }\n            ans+=(r-l+1);\n            r++;\n        }\n        return ans;\n    }\n};\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        // int n = nums.size();\n        // SGTree st(n);\n        // st.build(0,0,n-1,nums);\n        // return st.solve(nums,k)-st.solve(nums,k-1);\n        \n        int n = nums.size();\n        ll ans = 0;\n\n        unordered_map<ll, ll> mp;\n        int i = 0;\n        while(i < n)\n        {\n            unordered_map<ll, ll> mp1;\n            ans+=(nums[i] == k);\n            mp1.insert({nums[i],1});\n            for (auto it : mp)\n            {\n                ll count = it.first;\n                ans+=((count & nums[i]) == k)?(it.second):0;\n                mp1[(count & nums[i])] += it.second;\n            }\n            \n            mp = mp1;\n            i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280898",
    "subm_id": "1311805996"
}