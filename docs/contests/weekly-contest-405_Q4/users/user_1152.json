{
    "username": "Abdul_Aziz_",
    "submission": "class Hashing {\npublic:\n    const long long M = 998244353 ;\n    const long long B = 353 ;\n    int n ;\n    vector <long long> pre;\n    vector <long long> p;\n    Hashing(int x) {\n        n = x+1 ;\n        pre.resize(n+1) ;\n        p.resize(n+1) ;\n    }\n    void build(string s) {\n        p[0] = 1;\n        for (int i=1;i<=n;++i) {\n            p[i] = (p[i-1] * B) % M ;\n        }\n        int n = (int)(s.size()) ;\n        s = \"#\" + s ;\n        for (int i=1;i<=n;++i) {\n            pre[i] = ((pre[i-1] * B) + s[i]) % M ;\n        }\n    }\n    int query(int l, int r) {\n        long long ans = pre[r] ;\n        int len = r-l+1 ;\n        ans -= (pre[l-1] * p[len]) % M;\n        if (ans < 0) ans += M ;\n        return (int)ans;\n    }\n};\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& s, vector<int>& costs) {\n        int n = costs.size();\n        int Len = target.size();\n        set <int> ss, st[Len + 1];\n        unordered_map <int, int> tCost ;\n        for (int i = 0; i < n; ++i) {\n            int len = s[i].size();\n            Hashing q(len);\n            q.build(s[i]);\n            int curHash = q.query(1, len);\n            ss.insert(len);\n            if (!st[len].count(curHash)) {\n                st[len].insert(curHash);\n                tCost[curHash] = costs[i];\n            }\n            tCost[curHash] = min(tCost[curHash], costs[i]);\n        }\n        const int mx = 2e9;\n        vector <int> dp(Len + 1, 2e9);\n        dp[0] = 0;\n        Hashing q(Len);\n        q.build(target);\n        for (int i = 0; i < Len; ++i) {\n            if (dp[i] == mx) continue;\n            for (auto len: ss) {\n                if (i + len > Len) break;\n                int curHash = q.query(i + 1, i + len);\n                if (st[len].count(curHash)) {\n                    dp[i + len] = min(dp[i + len], dp[i] + tCost[curHash]);\n                }\n            }\n        }\n        if (dp[Len] == mx) dp[Len] = -1;\n        return dp[Len];\n    }\n};",
    "submit_ts": "1720323559",
    "subm_id": "1312378508"
}