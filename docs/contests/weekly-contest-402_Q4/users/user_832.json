{
    "username": "JerryGu1",
    "submission": "class Solution {\n    class BIT {\n        int[] a;\n        public BIT(int n) {\n            a=new int[n+1];\n        }\n        //add val at idx i\n        public void update(int i, int val) {\n            i++;\n            while (i<a.length) {\n                a[i]+=val;\n                i+=i&(-i);\n            }\n        }\n        //get sum over [0,i]\n        public int get(int i) {\n            i++;\n            int sum = 0;\n            while(i>0){\n                sum+=a[i];\n                i-=i&(-i);\n            }\n            return sum;\n        }\n    }\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        BIT bit = new BIT(n);\n        for (int i=1; i<n-1; i++) {\n            if (nums[i]>nums[i-1] && nums[i]>nums[i+1]) {\n                bit.update(i,1);\n            }\n        }\n        int m = queries.length;\n        List<Integer> ans = new ArrayList<>();\n        for (int i=0; i<m; i++) {\n            if (queries[i][0]==1) {\n                //if (queries[i][1]!=0) ans.add(bit.get(queries[i][2]) - bit.get(queries[i][1]-1));\n                //else ans.add(bit.get(queries[i][2]));\n                if (queries[i][2]==queries[i][1]) ans.add(0);\n                else ans.add(bit.get(queries[i][2]-1) - bit.get(queries[i][1]));\n            }\n            else {\n                int idx = queries[i][1], val = queries[i][2];\n                if (idx>0 && idx<n-1) {\n                    if (nums[idx]>nums[idx-1] && nums[idx]>nums[idx+1]) {\n                        bit.update(idx,-1);\n                    }\n                }\n                if (idx>1) {\n                    if (nums[idx-1]>nums[idx-2] && nums[idx-1]>nums[idx]) {\n                        bit.update(idx-1,-1);\n                    }\n                }\n                if (idx<n-2) {\n                    if (nums[idx+1]>nums[idx+2] && nums[idx+1]>nums[idx]) {\n                        bit.update(idx+1,-1);\n                    }\n                }\n                nums[idx]=val;\n                if (idx>0 && idx<n-1) {\n                    if (nums[idx]>nums[idx-1] && nums[idx]>nums[idx+1]) {\n                        bit.update(idx,1);\n                    }\n                }\n                if (idx>1) {\n                    if (nums[idx-1]>nums[idx-2] && nums[idx-1]>nums[idx]) {\n                        bit.update(idx-1,1);\n                    }\n                }\n                if (idx<n-2) {\n                    if (nums[idx+1]>nums[idx+2] && nums[idx+1]>nums[idx]) {\n                        bit.update(idx+1,1);\n                    }\n                }\n            }\n            //for (int j=0; j<n; j++) System.out.print(bit.get(j));\n            //System.out.println();\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1718508575",
    "subm_id": "1289685210"
}