{
    "username": "adoring-bhabha",
    "submission": "class Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        \n        st = [0] * (4 * n)\n        # to_update = [0] * (4 * n)\n\n        def update(left, right):\n            def _update(cur, curleft, curright, left, right):\n                if st[cur] == curright - curleft + 1:\n                    return 0\n                if left == curleft and right == curright:\n                    val = st[cur]\n                    st[cur] = right - left + 1\n                    return st[cur] - val\n                mid = (curleft + curright) // 2\n                extra = 0\n                if left <= mid:\n                    extra += _update(cur * 2 + 1, curleft, mid, left, min(right, mid))\n                if right >= mid + 1:\n                    extra += _update(cur * 2 + 2, mid + 1, curright, max(left, mid + 1), right)\n                st[cur] += extra\n                return extra\n\n            _update(0, 0, n - 1, left, right)\n\n        res = []\n        for query in queries:\n            x, y = query\n            left, right = x + 1, y - 1\n            update(left, right) # let val to be 1 from left to right\n            res.append(n - 1 - st[0])\n            # print(query, st)\n        return res\n        ",
    "submit_ts": "1722741807",
    "subm_id": "552340582"
}