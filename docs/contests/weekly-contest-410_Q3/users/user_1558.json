{
    "username": "nitesh3",
    "submission": "class Solution {\n/*\ndp[i][j][k] = no of monotnic pair for array [0..i] such the first array last value is j and second array last value is k.\n*/\n\ntypedef long long ll;\n#define mod 1000000007\n\n\n\npublic:\n    ll solve(int i, int j, int k, vector<vector<vector<ll>>> &dp, vector<int> &nums)\n    {\n        if (i == nums.size())\n            return 1;\n\n        if (dp[i][j][k] != -1)\n            return dp[i][j][k];\n\n        ll res = 0;\n\n        if (i < (nums.size() -1))\n        {\n            for (int l = 0; l<=nums[i+1]; l++)\n            {\n                int val_j = l;\n                int val_k = nums[i+1] - l;\n\n                if (val_j >= j && val_k <= k)\n                {\n                    res += solve(i+1, val_j, val_k, dp, nums);\n                    res %=mod;\n                }\n            }\n        }\n        else\n        {\n            res += solve(i+1, j, k, dp, nums);\n        }\n\n        return dp[i][j][k] = res;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n\n        vector<vector<vector<ll>>> dp(n, vector<vector<ll>>(51, vector<ll> (51, -1)));\n\n        for (int i=0; i<=nums[0]; i++)\n        {\n            solve(0, i, nums[0] - i, dp, nums);\n        }\n        \n        ll res = 0;\n\n        for (int i=0; i<=nums[0]; i++)\n        {\n            res += dp[0][i][nums[0]-i];\n            res %= mod;\n        }\n\n        return res;\n        \n    }\n};",
    "submit_ts": "1723346242",
    "subm_id": "1351573292"
}