{
    "username": "ganeshborkar31",
    "submission": "# class Solution:\n#     def minChanges(self, a, k):\n#         kVect = list(range(k + 1))\n#         n = len(a)\n#         count = 0\n#         ans = abs(a[0] - a[n - 1])\n        \n#         for i in range(n):\n#             if abs(a[i] - a[n - i - 1]) != ans:\n#                 for j in range(k + 1):\n#                     if abs(kVect[j] - a[n - i - 1]) == ans:\n#                         count += 1\n#                         break\n#                     elif abs(kVect[j] - a[i]) == ans:\n#                         count += 1\n#                         break\n        \n#         return count\n\nfrom collections import defaultdict\nfrom bisect import bisect_left\n\nclass Solution:\n    def minChanges(self, nums, k):\n        m = defaultdict(list)\n        v = []\n\n        for i in range(len(nums) // 2):\n            a = nums[i]\n            b = nums[len(nums) - i - 1]\n            diff = abs(a - b)\n\n            X = max(a, b, k - a, k - b)\n\n            m[diff].append(X)\n            v.append(X)\n\n        ans = len(nums)\n        v.sort()\n\n        for diff, values in m.items():\n            T = bisect_left(v, diff)\n            T = T * 2 + (len(nums) // 2 - T)\n\n            for X in values:\n                if X < diff:\n                    T -= 2\n                else:\n                    T -= 1\n\n            ans = min(ans, T)\n\n        return ans\n\n",
    "submit_ts": "1721489086",
    "subm_id": "1327442425"
}