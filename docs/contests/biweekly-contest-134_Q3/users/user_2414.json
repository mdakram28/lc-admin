{
    "username": "Amit-Ramrakhyani",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int total = 0;\n        int alternating = 0;\n        \n        // Count alternating pairs in the first k-1 elements\n        for (int i = 0; i < k - 1; i++) {\n            if (colors[i] != colors[(i + 1) % n]) {\n                alternating++;\n            }\n        }\n        \n        // Check each group of k elements\n        for (int i = 0; i < n; i++) {\n            // Check if the current group is alternating\n            if (alternating == k - 1) {\n                total++;\n            }\n            \n            // Update alternating count for the next group\n            if (colors[i] != colors[(i + 1) % n]) {\n                alternating--;\n            }\n            if (colors[(i + k - 1) % n] != colors[(i + k) % n]) {\n                alternating++;\n            }\n        }\n        \n        return total;\n    }\n};",
    "submit_ts": "1720281570",
    "subm_id": "1311830309"
}