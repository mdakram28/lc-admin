{
    "username": "rpilania64",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        ops = 0\n        i = 0\n        start = 0\n        inc = True\n        while i < n:\n            # Previous Checks-----------------------------------------------------\n            diff = nums[i] - target[i]\n            if diff == 0:\n                i += 1\n                start = i\n                continue\n            \n            if diff < 0:\n                inc = True\n            else: \n                inc = False\n                \n            # Subarray finding-----------------------------------------------------\n            unequalSpotted = False\n            minDiff = abs(diff)\n            j = i\n            while i+1 < n:\n                if (nums[i] - target[i]) == (nums[i+1] - target[i+1]):\n                    i += 1\n                    continue\n                elif (nums[i+1] < target[i+1] and inc) or (nums[i+1] > target[i+1] and not inc):\n                    if not unequalSpotted:\n                        unequalSpotted = True\n                        j = i+1\n                        \n                    newDiff = abs(nums[i+1] - target[i+1])\n                    minDiff = min(minDiff,abs(newDiff))\n                else: break\n                \n                i += 1\n                \n            for k in range(start,i+1):\n                if inc:\n                    nums[k] += minDiff\n                else: nums[k] -= minDiff\n            # print(nums)\n            \n            # print(\"1: \", i,j,start,ops,diff,minDiff)\n            # After calculations-----------------------------------------------------\n            ops += minDiff\n            if minDiff == abs(diff):\n                if unequalSpotted:\n                    i = j\n                    start = i\n                else:\n                    i += 1\n                    start = i\n            else: i = start\n            # print(\"2: \", i,j,start,ops)\n        return ops",
    "submit_ts": "1721534089",
    "subm_id": "1328023270"
}