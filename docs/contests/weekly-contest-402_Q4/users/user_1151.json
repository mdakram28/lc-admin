{
    "username": "thedeceptor",
    "submission": "class Solution {\npublic:\n    void build(vector<int>& seg, int ind, int low, int high, vector<int>& nums){\n        if(low==high){\n            int flag = 1;\n            if(low == 0 || nums[low-1]>=nums[low]){\n                flag = 0;\n            }\n            if(high == nums.size()-1 || nums[high+1]>=nums[high]){\n                flag = 0;\n            }\n            seg[ind] = flag;\n            return; \n        }\n        int mid = (high+low)/2;\n        build(seg,ind*2+1,low,mid,nums);\n        build(seg,ind*2+2,mid+1,high,nums);\n        seg[ind] = seg[ind*2+1] + seg[ind*2+2];\n    }\n    int range(vector<int>& seg, int ind, int low, int high, int l, int h){\n        if(l<=low && high<=h){\n            return seg[ind];\n        }\n        if(l>high || h<low){\n            return 0 ;\n        }\n        int mid = (high+low)/2;\n        return range(seg,ind*2+1,low,mid,l,h) + range(seg,ind*2+2,mid+1,high,l,h);\n    }\n    void updater(vector<int>& seg,int ind, vector<int>& nums,int low, int high){\n        if(low<0 || low>=nums.size()){\n            return ;\n        }\n        int flag = 1;\n            if(low == 0 || nums[low-1]>=nums[low]){\n                flag = 0;\n            }\n            if(high == nums.size()-1 || nums[high+1]>=nums[high]){\n                flag = 0;\n            }\n        seg[ind] = flag;\n        return ;\n    }\n    void update(vector<int>& seg, int ind, int low, int high, int i,vector<int>& nums){\n         if(low<0 || low>=nums.size()){\n            return ;\n        }\n        if(high==low){\n            updater(seg,ind,nums,low,high);\n            // updater(seg,ind-1,nums,low-1,high-1);\n            // updater(seg,ind+1,nums,low+1,high+1);\n            return; \n        }\n        int mid = (high+low)/2;\n        if(mid>=i){\n            update(seg,ind*2+1,low,mid,i,nums);\n        }\n        else{\n            update(seg,ind*2+2,mid+1,high,i,nums);\n        }\n        seg[ind] = seg[ind*2+1] + seg[ind*2+2];\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size(); \n        vector<int> seg(n*4+1,0);\n        build(seg,0,0,n-1,nums);\n        vector<int> ans ;\n        for(auto it: queries){\n            if(it[0] == 1){\n                if(it[1]==it[2]){\n                    ans.push_back(0);\n                    continue;\n                }\n                int r = range(seg,0,0,n-1,it[1]+1,it[2]-1);\n                ans.push_back(r);\n            }\n            else{\n                nums[it[1]] = it[2];\n                update(seg,0,0,n-1,it[1],nums);\n                update(seg,0,0,n-1,it[1]+1,nums);\n                update(seg,0,0,n-1,it[1]-1,nums);\n            }\n        }\n        return ans ;\n    }\n};",
    "submit_ts": 1718508467.0
}