{
    "username": "Animeshz916",
    "submission": "// int calc(vector<int>& jump) {\n//     int ans = 0;\n//     for (int i = 0; i < jump.size()-1;) {\n//         i = jump[i], ans++;\n//     }\n//     return ans;\n// }\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int m, vector<vector<int>>& queries) {\n        int n = queries.size();\n        vector<int> ans(n);\n\n        // vector<int> jump(m);\n        map<int, int> red;\n        int cur = m-1;\n\n        // for (int i = 0; i < m; i++) jump[i] = i+1;\n\n        for (int i = 0; i < n; i++) {\n            int mn = min(queries[i][0], queries[i][1]);\n            int mx = max(queries[i][0], queries[i][1]);\n\n            // if (mx > jump[mn]) \n            // jump[mn] = max(jump[mn], mx);\n            auto ub = red.upper_bound(mn);\n            if (ub != red.begin()){\n                --ub;\n                if (mx <= ub->second) {\n                    ans[i] = cur;\n                    // cout << i << endl;\n                    continue;\n                }\n            }\n\n            auto lb = red.lower_bound(mn);\n            auto rem = lb;\n            while (lb != red.end() && lb->first /* 2 */ < mx) {\n                // cout << \"rem on \" << mn << endl;\n                    cur += lb->second-lb->first-1;\n                    rem = lb++;\n                    red.erase(rem);\n                    // cout << cur << endl;\n            }\n\n            red[mn] = mx;\n            cur -= mx-mn-1;\n            ans[i] = cur;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1722742419",
    "subm_id": "1343768536"
}