{
    "username": "roygaurav2004",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& arr, int k) {\n        int n = arr.size();\n        vector<int> pref(n,1), suff(n,1);\n        for(int i=1; i<n; i++){\n            if(arr[i] == arr[i-1]) continue;\n            else pref[i] = 1+pref[i-1];\n        }\n        for(int i=n-2; i>=0; i--){\n            if(arr[i] == arr[i+1]) continue;\n            else suff[i] = 1+suff[i+1];\n        }\n        int ans = 0;\n        for(int i=0; i<n; i++){\n            if(pref[i] >= k) ans++;\n        }\n        if(arr[0] == arr[n-1]) return ans;\n        int req = k-2;\n        int ubx = suff[0]-1;\n        int uby = pref[n-1]-1;\n        for(int i=0; i<=ubx; i++){\n            int yy = req-i;\n            if(yy>=0 && yy<=uby) ans++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279326",
    "subm_id": "1311746709"
}