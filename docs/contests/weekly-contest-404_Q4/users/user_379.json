{
    "username": "ashishraj003",
    "submission": "class Solution {\npublic:\n    int dim(vector<int> adj[],int node,int par,int &ans)\n    {\n        int mi1=0,mi2=0;\n        for(auto it:adj[node])\n        {\n            if(it!=par)\n            {\n                int di=dim(adj,it,node,ans);\n                if(di>mi1)\n                {\n                    mi2=mi1;\n                    mi1=di;\n                }\n                else if(di>mi2)\n                {\n                    mi2=di;\n                }\n            }\n        }\n        ans=max(ans,mi1+mi2);\n        return mi1+1;\n    }\n    // int get(vector<int> adj[],int node,int par,int ans,int nd)\n    // {\n    //     int val=0;\n    //     for(auto it:adj[node])\n    //     {\n    //         if(it!=par)\n    //         {\n    //             int di=\n    //         }\n    //     }\n    // }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) \n    {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<int> adj1[n+1];\n        vector<int> adj2[m+1];\n        for(auto it:edges1)\n        {\n            adj1[it[0]].push_back(it[1]);\n            adj1[it[1]].push_back(it[0]);\n        }\n        for(auto it:edges2)\n        {\n            adj2[it[0]].push_back(it[1]);\n            adj2[it[1]].push_back(it[0]);\n        }\n        int di1=0,di2=0;\n        dim(adj1,0,-1,di1);\n        dim(adj2,0,-1,di2);\n        // int nd1=0,nd2=0;\n        // int ok1=get(adj1,0,-1,di1,nd1);\n        // int ok2=get(adj2,0,-1,di2,nd2);\n        // cout<<di1<<\" \"<<di2<<\" \";\n        int ans=0;\n        int dii1=(di1+1)/2;\n        int dii2=(di2+1)/2;\n        ans=dii1+dii2;\n        return max(ans+1,max(di1,di2));\n    }\n};",
    "submit_ts": 1719718415.0
}