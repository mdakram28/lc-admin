{
    "username": "its_Lokesh",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        reverse(horizontalCut.begin(), horizontalCut.end());\n        reverse(verticalCut.begin(), verticalCut.end());\n        \n        int i = 0, j = 0;\n        int horiz = 1, ver = 1;\n        long long totalCost = 0;\n        \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * ver;\n                horiz++;\n                i++;\n            } else {\n                totalCost += verticalCut[j] * horiz;\n                ver++;\n                j++;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] * ver;\n            i++;\n        }\n        while (j < verticalCut.size()) {\n            totalCost += verticalCut[j] * horiz;\n            j++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926100",
    "subm_id": "1320276005"
}