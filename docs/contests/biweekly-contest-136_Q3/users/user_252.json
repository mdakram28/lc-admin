{
    "username": "qiye-5",
    "submission": "int __FAST_IO__ = []() { std::ios::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0); return 0; }();\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int m = grid.size(), n = grid[0].size();\n        cout << m << \" \" << n << endl;\n        int res = 0;\n        for (int i = 0; i < m / 2; ++i) {\n            for (int j = 0; j < n / 2; ++j) {\n                int sum = grid[i][j] + grid[i][n - j - 1] + grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                // cout << \"dff \" << sum << endl;\n                res += min(sum, 4 - sum);\n            }\n        }\n        cout << res << endl;\n\n        int a = 0, b = 0;\n        if (m & 1) for (int j = 0; j * 2 < n; ++j) a += grid[m >> 1][j] ^ grid[m >> 1][n - j - 1], b += grid[m >> 1][j] & grid[m >> 1][n - j - 1];\n        if (n & 1) for (int i = 0; i * 2 < m; ++i) a += grid[i][n >> 1] ^ grid[m - i - 1][n >> 1], b += grid[i][n >> 1] & grid[m - i - 1][n >> 1];\n        // cout << a << \" \" << b << endl;\n        if (b & 1) res += a + 2 * !(a);\n        else res += a;\n// cout << res << endl;\n        if (m & 1 && n & 1) res += grid[m >> 1][n >> 1];\n        return res;\n    }\n};",
    "submit_ts": "1722697173",
    "subm_id": "552264784"
}