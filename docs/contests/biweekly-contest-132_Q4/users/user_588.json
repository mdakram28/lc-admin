{
    "username": "dishanth_0282",
    "submission": "import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public int maximumLength(int[] nums, int k) {\n        int size = nums.length;\n        int[][] lengths = new int[size][k + 1];\n        int max_length = 1;\n        int[] max_lengths = new int[k + 1];\n        Map<Integer, Integer>[] numToLengthsMap = new HashMap[k + 1];\n\n        // Initialize lengths and numToLengthsMap\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j <= k; j++) {\n                lengths[i][j] = 1;\n            }\n        }\n        for (int i = 0; i <= k; i++) {\n            max_lengths[i] = -1;\n            numToLengthsMap[i] = new HashMap<>();\n        }\n\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    lengths[i][j] = Math.max(lengths[i][j], 1 + max_lengths[l]);\n                }\n\n                if (numToLengthsMap[j].containsKey(nums[i])) {\n                    lengths[i][j] = Math.max(lengths[i][j], 1 + numToLengthsMap[j].get(nums[i]));\n                }\n\n                max_length = Math.max(max_length, lengths[i][j]);\n            }\n\n            for (int j = 0; j <= k; j++) {\n                max_lengths[j] = Math.max(max_lengths[j], lengths[i][j]);\n                numToLengthsMap[j].put(nums[i], Math.max(numToLengthsMap[j].getOrDefault(nums[i], 0), lengths[i][j]));\n            }\n        }\n\n        return max_length;\n    }\n}\n",
    "submit_ts": 1717862268.0
}