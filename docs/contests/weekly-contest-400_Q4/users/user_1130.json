{
    "username": "Archangel79",
    "submission": "class Solution {\npublic:\n    class AiseHi {\n    public:\n        vector<int> pedh;\n        int x;\n\n        AiseHi(vector<int>& arr) {\n            x = arr.size();\n            pedh.resize(4 * x);\n            banao(arr, 0, 0, x - 1);\n        }\n\n        void banao(vector<int>& v, int node, int start, int end) {\n            if (start == end) {\n                pedh[node] = v[start];\n            }\n            else {\n                int mid = (start + end) / 2;\n                banao(v, 2 * node + 1, start, mid);\n                banao(v, 2 * node + 2, mid + 1, end);\n\n                pedh[node]\n                    = pedh[2 * node + 1] & pedh[2 * node + 2];\n            }\n        }\n\n        int query(int l, int r) {\n            return query(0, 0, x - 1, l, r);\n        }\n\n        int query(int node, int start, int end, int l, int r) {\n            if (r < start || end < l) {\n                return INT_MAX;\n            }\n            if (l <= start && end <= r) {\n                return pedh[node];\n            }\n            int mid = (start + end) / 2;\n            int p1 = query(2 * node + 1, start, mid, l, r);\n            int p2 = query(2 * node + 2, mid + 1, end, l, r);\n\n            return p1 & p2;\n        }\n    };\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        AiseHi ai(nums);\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid;\n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (ai.query(i, mid) >= k) l = mid;\n                else r = mid;\n            }\n            if (l != i - 1) ans = min(ans, abs(ai.query(i, l) - k));\n            ans = min(ans, abs(k - ai.query(i, r)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717300637",
    "subm_id": "1274850260"
}