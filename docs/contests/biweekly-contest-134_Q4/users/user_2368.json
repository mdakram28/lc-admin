{
    "username": "Mysterious_X",
    "submission": "class Segment_Tree \n{\nprivate:\n    vector<int> seg;\n\npublic:\n    Segment_Tree (int n) {\n        seg.resize(4 * n + 5);\n    }\n\n    void build (vector<int>& arr, int low, int high, int i)\n    {\n        if (low == high)\n        {\n            seg[i] = arr[low];\n            return;\n        }\n\n        int mid = (low + high) >> 1;\n        build(arr, low, mid, 2 * i + 1);\n        build(arr, mid + 1, high, 2 * i + 2);\n\n        seg[i] = (seg[2 * i + 1] & seg[2 * i + 2]);\n    }\n\n    int query (int i, int low, int high, int l, int r)\n    {\n        if (r < low || l > high || r < l)\n            return ((1LL << 31) - 1);\n\n        if (l <= low && r >= high)\n            return seg[i];\n\n        int mid = (low + high) >> 1;\n        int left = query(2 * i + 1, low, mid, l, r);\n        int right = query(2 * i + 2, mid + 1, high, l, r);\n\n        return (left & right);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& arr, int k) {\n        int i = 0, j = 0, n = arr.size();\n        long long total = 0;\n        \n        Segment_Tree st(n);\n        st.build(arr, 0, n - 1, 0);\n        \n        for (int i = 0; i < n; i++)\n        {\n            int low = i, high = n - 1, ans = -1;\n            \n            while (low <= high)\n            {\n                int mid = (low + high) / 2;\n                \n                if (st.query(0, 0, n - 1, i, mid) <= k)\n                    ans = mid, high = mid - 1;\n                else\n                    low = mid + 1;\n            }\n            \n            if (ans == -1 || st.query(0, 0, n - 1, i, ans) != k)\n                continue;\n            \n            low = i, high = n - 1;\n            int ans1 = ans;\n            \n            while (low <= high)\n            {\n                int mid = (low + high) / 2;\n                \n                if (st.query(0, 0, n - 1, i, mid) >= k)\n                    ans = mid, low = mid + 1;\n                else\n                    high = mid - 1;\n            }\n            \n            total += ans - ans1 + 1;\n        }\n        \n        return total;\n    }\n};",
    "submit_ts": "1720281432",
    "subm_id": "1311824947"
}