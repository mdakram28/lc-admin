{
    "username": "Jumping",
    "submission": "long long f[200005], g[200005];\nint n;\nlong long ans[200005];\nint cnt[101];\nvector<int> e[200005];\npair<pair<int, int>, int> ee[200005];\nclass Solution {\npublic:\n    void upd(int x, int d) {\n        for (; x <= n; x += (x & -x)) f[x] += d;\n    }\n    void upd2(int x, int d) {\n        for (; x <= n; x += (x & -x)) g[x] += d;\n    }\n    long long query(int x) {\n        long long sum = 0;\n        for (; x; x -= (x & -x)) sum += f[x];\n        return sum;\n        \n    }\n    long long query2(int x) {\n        long long sum = 0;\n        for (; x; x -= (x & -x)) sum += g[x];\n        return sum;\n        \n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        //###*######****#**#######*###%####%###*%#%##%%%%#%#%##\n        //#################%%%%%#%%%#%%##%#%%%%#%%%*########*##\n        //#########*######%%%%%%#*#%%#%%#%%%%%%%%%%%%%%%%%%%%%%\n        //###############%@%%%%*=--+#%######*%%######%####*###*\n        //###############%@%@#*=-::=+*##%*##%%%#####%%###*+#*#*\n        //#####*######*###*%%----:.::.*%%%%##%####%%%#%%%###%%#\n        //###############%#%#:::--:.:.#%@%%%#%%#%%%%#%####%####\n        //#################%%=:::--:.:%%@%%%%%%%%%%%##%%%%%%%%%\n        //#################%%#*=-:::=%@@%%%%#%%##%%#%%%%%#*%#%#\n        //#############%%%%#=**#*--+@@@@@%%%%%%%%%####%*-=#%##%\n        //################-    .-+=#%%%@%%%%%%%%%#%###-  *#%%%%\n        //###############:  .===:.*%%**%%####%*=-*##-    +##%##\n        //#####%###%%%%%- .:###%%%=-*+-@@%%%%-:::==    .+%%%%%%\n        //#####%##%%%%%# ..#%%###%%-+-:%%%%%-:::::.. :+%%%%%%%%\n        //*#####%%###%%+.:*%%#%###%%-=.=@@%=::::---:*%%%#%%%%%%\n        //####%%%%#%%%%+:+%%%%%####%+:-:%*::...:-+#@%@%%%%%%%%#\n        //*##%%%#####%%+:=@%%%%%####*:--::....:-*@@@%%%%%##%%%%\n        //##%%######%%@+.:=%#%%%#*++#-:::...:-=%%%@%###%%%%%#%%\n        //##########%%@+..:+%%#+++**-:::::=+##@@@@@@%%@@%%%%%#%\n        //##%#%%%%##%%@+ .::=++*=---::::.=@%%%@@@@%@@@@@@@@@%%%\n        //#%###%%#%%%%@* ..:::------::.  -@%%%@%%%%%%@@@@@@@@@@\n        //%%####%%%%@@@%  .....:---::    :@#%%@%#%###%%@@@@@@@@\n        //%%%#%%%#%%#%%%  ..  ..:....    :@@@@@@@@@%@@@@@@@@@@@\n        int inf = 0x3f3f3f3f;\n        int sigma = inf / 2;\n        n = s.size();\n        int j = 0;\n        cnt[0] = cnt[1] = 0;\n        for (int i = 1; i <= n; i ++) e[i].clear(), f[i] = g[i] = 0;\n        \n        for (int i = 0; i < n; i ++) {\n            while (j < n) {\n                cnt[s[j] - '0'] ++;\n                if (cnt[0] <= k || cnt[1] <= k) {\n                    j ++;\n                    continue;\n                }\n                cnt[s[j] - '0'] --;\n                break;\n            }\n            e[j].push_back(i + 1); \n            -- cnt[s[i] - '0'];\n        }\n        int m = queries.size();\n        for (int i = 0; i < m; i ++) {\n            int x = queries[i][0], y = queries[i][1]; ++ x; ++ y;\n            ee[i] = make_pair(make_pair(y, x), i);\n        }\n        sort(ee, ee + m);\n        int cur = 1;\n        for (int i = 0; i < m; i ++) {\n            int id = ee[i].second, y = ee[i].first.first, x = ee[i].first.second;\n            while (cur <= n && cur <= y) {\n                for (int j = 0; j < (int )e[cur].size(); j ++) {\n                    upd(e[cur][j], cur); upd2(e[cur][j], 1);\n                }\n                ++ cur;\n            }\n            ans[id] = (query(y) - query(x - 1) + 1LL * y * (y - x + 1 - (query2(y) - query2(x - 1)))) - 1LL * (x - 1 + y - 1) * (y - x + 1) / 2;\n        }\n        vector<long long> zhu;\n        for (int i = 0; i < m; i ++) zhu.push_back(ans[i]);\n        return zhu;\n    }\n};",
    "submit_ts": "1723949416",
    "subm_id": "556392639"
}