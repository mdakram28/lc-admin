{
    "username": "dragonman164",
    "submission": "int dp[5005][55][2];\nclass Solution {\npublic:\n    int helper(vector<pair<int,int>> &groups, map<int,set<int>> &temp, int &allowed, int index = 0, int k = 0,int will_take = 0){\n        if(index == groups.size()){\n            return 0;\n        }\n        if(dp[index][k][will_take] != -1){\n            return dp[index][k][will_take];\n        }\n        if(will_take == 1){\n            \n            int b = groups[index].second + ((k + 1 <= allowed)?helper(groups, temp, allowed, index + 1, k + 1,0):0);\n            auto it = temp[groups[index].first].upper_bound(index);\n            int c = 0;\n            if(it != temp[groups[index].first].end()){\n                c = groups[index].second + helper(groups, temp, allowed, *it, k,1);\n            }\n            return  dp[index][k][will_take]= max(b,c);\n        }\n\n        int a = helper(groups,temp,allowed,index+1,k,0);\n        int b = groups[index].second + ((k + 1 <= allowed)?helper(groups, temp, allowed, index + 1, k + 1,0):0);\n        auto it = temp[groups[index].first].upper_bound(index); \n        int c = 0;\n        if(it != temp[groups[index].first].end()){\n            c = groups[index].second + helper(groups, temp, allowed, *it, k,1);\n        }\n        return dp[index][k][will_take] = max({a,b,c});\n\n\n        \n        \n    }\n    int maximumLength(vector<int>& nums, int k) {\n        vector<pair<int,int>> groups;\n        int i = 0;\n        int n = nums.size();\n        for(int i = 0; i <= n + 2; i++ ){\n            for(int j = 0; j <= k + 2; j++ ){\n                dp[i][j][0] = -1;\n                dp[i][j][1] = -1;\n            }\n        }\n        while(i < n){\n            pair<int,int> count;\n            count.first = nums[i];\n            while(i < n and nums[i] == count.first){\n                i++;\n                count.second++;\n            }\n            groups.push_back(count);\n        }\n        map<int,set<int>> temp;\n        for(int i = 0; i < groups.size(); i++ ){\n            temp[groups[i].first].insert(i);\n        }\n        return helper(groups,temp,k);\n    }\n};",
    "submit_ts": "1717861089",
    "subm_id": "1281779334"
}