{
    "username": "louisfghbvc",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        // goal: find the maximum length such that subsequence at most k different\n        // idea: dp\n        // dp(i, last, k) = max of  \n        // 1. skip i : dp(i+1, last, k)\n        // 2. choose i: 1 + dp(i+1, nums[i], k + (nums[i]!=last))\n        \n        // improve:\n        // dp(i, c) : starting from index i, last choose is i, at most c diff\n        // dp(i, c) -> 1 + dp(j, c), where j>i\n        \n        // nc at most increase 1\n        // 1. nc = c\n        // 2. nc = c+1\n        // we can record maximum suffix\n        // do from back\n        \n        int n = nums.size();\n\n        unordered_map<int, int> mp;\n        for (int i = 0; i < n; ++i)\n            mp[nums[i]] = i;\n        \n        vector dp(n+1, vector(k+1, 1)); \n        vector suf(n, vector(k+1, 0));\n        vector suf_mx(k+1, 0);\n        for (int i = n - 1; i >= 0; --i) {          \n            auto next_mx = suf_mx;\n            for (int c = 0; c <= k; ++c) {\n                // for (int j = i + 1; j < n; ++j) {\n                //     int nc = c + (nums[j] != nums[i]);\n                //     if (nc <= k) {\n                //         dp[i][c] = max(dp[i][c], 1 + dp[j][nc]);\n                //     }\n                // }\n\n                // 1.nums[j]==nums[i]\n                dp[i][c] = max(dp[i][c], 1 + suf[mp[nums[i]]][c]);\n                // 2. nums[j]!=nums[i], c+1\n                if (c+1 <= k) \n                    dp[i][c] = max(dp[i][c], 1 + suf_mx[c+1]);\n                \n                // update suf\n                suf[mp[nums[i]]][c] = max(suf[mp[nums[i]]][c], dp[i][c]);\n                next_mx[c] = max(next_mx[c], dp[i][c]);\n            }\n            swap(suf_mx, next_mx);\n        }\n        \n        int res = 0;\n        for (int i = 0; i < n; ++i) {\n            for (int c = 0; c <= k; ++c)\n                res = max(res, dp[i][c]);\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717861286.0
}