{
    "username": "Abhishekcpr",
    "submission": "\nlong long dp[101][101][2][100] ;\nclass Solution {\npublic:\n\n     long long solver(vector<vector<int>>& board, int c1, int c2,int k, int r)\n     {\n         int row = board.size(), col = board[0].size() ;\n         if(k == 0 )\n         {\n            return 0 ;\n         }\n\n         if(r == row)\n         return LLONG_MIN ;\n\n         if(dp[c1+1][c2+1][k][r]!= -1)\n         return dp[c1+1][c2+1][k][r] ;\n\n        long long ans= LLONG_MIN ;\n         for(int i = 0 ; i < col ; i++)\n         {\n           if(c1 == -1)\n           {\n             long long temp =  solver(board,i,c2,k,r+1) ;\n\n             if(temp != LLONG_MIN)\n             {\n                temp+= board[r][i]  ;\n             }\n            ans = max(ans,temp) ;\n           }\n           else  if(c2 == -1)\n           {\n             if(i != c1)\n             {\n                 long long temp =  solver(board,c1,i,k,r+1) ;\n                   if(temp != LLONG_MIN)\n             {\n                temp+= board[r][i]  ;\n             }\n            ans = max(ans,temp) ;\n             }\n            \n           }\n           else\n           {\n             if(i!= c1 && i!= c2)\n             {\n                long long temp = solver(board,c1,i,0,r+1) ;\n                  if(temp != LLONG_MIN)\n             {\n                temp+= board[r][i]  ;\n             }\n            ans = max(ans,temp) ;\n               \n             }\n           }\n         }\n\n         long long temp =  solver(board,c1,c2,k,r+1) ;\n\n            \n            ans = max(ans,temp) ;\n\n         return dp[c1+1][c2+1][k][r] = ans ;\n     }\n    long long maximumValueSum(vector<vector<int>>& board) {\n\n        memset(dp, -1, sizeof(dp));\n\n        return solver(board,-1,-1,1,0);\n        \n    }\n};\n",
    "submit_ts": "1723909405",
    "subm_id": "1359191308"
}