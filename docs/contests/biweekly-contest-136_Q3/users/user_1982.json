{
    "username": "lionl1106",
    "submission": "class Solution {\npublic:\n    int CountGrid(vector<vector<int>> grid, int k){\n        int n = grid.size(), m = grid[0].size(), tmp = 0;\n        vector<int> count(2, 0);\n        for(int i=0; i<n/2; i++){\n            for(int j=0; j<m/2; j++){\n                count[0] = 0, count[1] = 0;\n                count[grid[i][j]]++;\n                count[grid[i][m-j-1]]++;\n                count[grid[n-i-1][j]]++;\n                count[grid[n-i-1][m-j-1]]++;\n                tmp += min(4 - count[0], 4 - count[1]);\n            }\n        }\n        int pair_0 = 0, pair_1 = 0;\n        if(m & 1){\n            for(int i=0; i<n/2; i++){\n                if(grid[i][m/2] == 1 && grid[n-i-1][m/2] == 1){\n                    pair_1++;\n                }\n                else if(grid[i][m/2] != grid[n-i-1][m/2]){\n                    pair_0++;\n                }\n            }\n        }\n        if(n & 1){\n            for(int j=0; j<m/2; j++){\n                if(grid[n/2][j] == 1 && grid[n/2][m-j-1] == 1){\n                    pair_1++;\n                }\n                else if(grid[n/2][j] != grid[n/2][m-j-1]){\n                    pair_0++;\n                }\n            }\n        }\n        if((pair_1 & 1) && !pair_0) tmp += 2;\n        else tmp += pair_0;\n        if(m & 1 && n & 1) tmp += grid[n/2][m/2];\n        return tmp;\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        return CountGrid(grid, 0);\n    }\n};\n\n// 1 0 0\n// 0 0 1\n// 0 0 1\n\n// 1 0 0 0\n// 0 0 1 1\n// 0 1 1 1\n// 0 1 0 1\n\n// 1,0,0,0,1\n// 0,0,1,1,1\n// 1,0,1,1,0\n// 0,1,1,1,1\n// 1,0,1,0,1\n\n// 1 0 0 0\n// 0 0 1 1\n// 0 1 1 0\n// 0 1 1 1\n// 0 1 0 1",
    "submit_ts": "1722699816",
    "subm_id": "1343223259"
}