{
    "username": "ernestlu",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    using pii = pair<ll, ll>;\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = (int)points.size();\n        vector<ll> a(n), b(n);\n        \n        for (int i = 0 ;i < n ;i++) {\n            const auto u = points[i];\n            ll x = u[0], y = u[1];\n            a[i] = x + y;\n            b[i] = x - y;\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        \n        ll ans = max(a[n - 1] - a[0], b[n - 1] - b[0]);\n        for (int i = 0; i < n; i++) {\n            const auto u = points[i];\n            ll x = u[0], y = u[1];\n            ll av_1 = (x + y == a.back() ? a[n - 2] : a[n - 1]);\n            ll av_0 = (x + y == a[0] ? a[1] : a[0]);\n            \n            ll bv_1 = (x - y == b.back() ? b[n - 2] : b[n - 1]);\n            ll bv_0 = (x - y == b[0] ? b[1] : b[0]);\n            \n            ll h = max(av_1 - av_0, bv_1 - bv_0);\n            ans = min(ans, h);\n        }\n        return ans;\n    }\n};"
}