{
    "username": "IamVaibhave53",
    "submission": "class Solution {\npublic:\n    void dfs(int node,vector<vector<int>> &adj,int par,vector<pair<vector<int>, vector<int>>> &dp,vector<int> &sz){\n        sz[node]=1;\n        for(auto &x:adj[node]){\n            if(x==par) continue;\n            dfs(x,adj,node,dp,sz);\n            sz[node]+=sz[x];\n            int cost = 1 + dp[x].first[1] + (x%2==0);\n            if(cost >= dp[node].first[1]) {\n                dp[node].second = dp[node].first;\n                dp[node].first = {x, cost};\n            }\n            else if(cost >= dp[node].second[1]) {\n                dp[node].second = {x, cost};\n            }\n        }\n    }\n    void dfs2(int node,vector<vector<int>> &adj,int par,vector<pair<vector<int>, vector<int>>> &dp,vector<int> &sz,vector<pair<vector<int>, vector<int>>> &dp2){\n        if(par==-1) {\n            dp2[node]=dp[node];\n        }\n        else {\n            int mxCostPar = dp2[par].first[1];\n            if(dp2[par].first[0] == node) {\n                mxCostPar = dp2[par].second[1];\n            }\n            int answerParSubtree = mxCostPar + 1 + (par%2==0); \n            dp2[node] = {{par, answerParSubtree}, {0,0}};\n            for(auto &x:adj[node]){\n                if(x==par) continue;\n                int cost = 1 + dp[x].first[1] + (x%2==0);\n                if(cost >= dp2[node].first[1]) {\n                    dp2[node].second = dp2[node].first;\n                    dp2[node].first = {x, cost};\n                }\n                else if(cost >= dp2[node].second[1]) {\n                    dp2[node].second = {x, cost};\n                }\n            }\n            // cout<<\"The max time taken by children of \"<<par<<\" other than \"<<node<<\" is \"<<mxChild<<endl;\n            // cout<<\"Time taken to color \"<<par<<\" if \"<<node<<\" is colored at T0 is \"<<timeTakenToColorParent<<endl;\n            // dp2[node]=max(dp2[node], mxChild + timeTakenToColorParent);\n            // cout<<\" dp2 [\"<<node<<\"] = \"<<dp2[node]<<endl;\n        }\n        for(auto &x:adj[node]){\n            if(x==par) continue;\n            dfs2(x,adj,node,dp,sz,dp2);\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        const int n = edges.size()+1;\n        vector<vector<int>> adj(n,vector<int>());\n        for(auto &x:edges) {\n            adj[x[0]].push_back(x[1]);\n            adj[x[1]].push_back(x[0]);\n        }\n        //{{child, cost}, {child, cost}}, cost1>cost2\n        vector<pair<vector<int>, vector<int>>> dp(n), dp2(n);\n        for(int i=0;i<n;i++){\n            dp[i] = {{0,0}, {0, 0}};\n        }\n        vector<int> sz(n);\n        dfs(0,adj,-1,dp,sz);\n        dp2 = dp;\n        vector<int> ans;\n        dfs2(0,adj,-1,dp,sz,dp2);\n        for(auto &x: dp2) {\n            ans.push_back(x.first[1]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699535",
    "subm_id": "1343214640"
}