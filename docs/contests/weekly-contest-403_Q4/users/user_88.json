{
    "username": "balakrishnan_v",
    "submission": "class Solution {\npublic:\n    \n    int GetSmallest(const vector<vector<int>>& G, int x1, int y1, int x2, int y2) {\n        int n=G.size();\n        int m=G[0].size();\n        int mini=n+1;\n        int maxi=-1;\n        int minj=m+1;\n        int maxj=-1;\n        for(int i=x1;i<=x2;i++) {\n            for(int j=y1;j<=y2;j++) {\n                if (G[i][j]) {\n                    mini=min(mini,i);\n                    maxi=max(maxi,i);\n                    minj=min(minj,j);\n                    maxj=max(maxj,j);\n                }\n            }\n        }\n        if (mini>maxi) return 1;\n        return (maxi-mini+1)*(maxj-minj+1);\n    }\n    \n    int Solve1(const vector<vector<int>>& G) {\n        int n=G.size();\n        int m=G[0].size();\n        int ans = n*m;\n        // for(int i=0;i<n;i++) {\n        //     for(int j=0;j<m;j++) {\n        //         printf\n        //     }\n        // }\n        for(int i=0;i<n;i++) {\n            // the first rectangle lies <= i\n            // (0,0) -> (i,m-1)\n            for(int j=0;j<m;j++) {\n                // second rectangle is in (i+1,0) -> (n-1,j)\n                // third rectangle is in (i+1,j+1) -> (n-1,m-1)\n                ans=min(ans, GetSmallest(G, 0,0,i,m-1)+GetSmallest(G, i+1,0,n-1,j)+GetSmallest(G, i+1,j+1,n-1,m-1));\n            }\n        }\n        return ans;\n    }\n    \n    int Solve2(const vector<vector<int>>& G) {\n        int n=G.size();\n        int m=G[0].size();\n        int ans=n*m;\n        for(int i1=0;i1<n;i1++) {\n            // first rectangle is in (0,0) to (i1,m-1)\n            for(int i2=i1+1;i2+1<n;i2++) {\n                // second rectangle is in (i1+1,0) to (i2,m-1);\n                // third rectangle is in (i2+1,0) to (n-1,m-1);\n                ans = min(ans, GetSmallest(G, 0,0,i1,m-1)+GetSmallest(G,i1+1,0,i2,m-1)+GetSmallest(G,i2+1,0,n-1,m-1));\n            }\n        }\n        return ans;\n    }\n    \n    vector<vector<int>> Rotate(const vector<vector<int>>& G) {\n        int n=G.size();\n        int m=G[0].size();\n        // (i,j) -> (j,i) \n        vector<vector<int>> ret(m,vector<int>(n));\n        for(int i=0;i<n;i++) {\n            for(int j=0;j<m;j++) {\n                ret[j][n-1-i]=G[i][j];\n            }\n        }\n        return ret;\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int ans = grid.size()*grid[0].size();\n        for(int r=0;r<=4;r++) {\n            ans = min(ans, Solve1(grid));\n            ans = min(ans, Solve2(grid));\n            grid = Rotate(grid);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719112152.0
}