{
    "username": "we3X1yxW0Q",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int rowCount=1, colCount=1;  //\u5f53\u524d\u6a2a\u5411\u8981\u5207\u51e0\u5200 \u7eb5\u5411\u8981\u5207\u51e0\u5200\n        long ans = 0;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverseNums(horizontalCut);\n        reverseNums(verticalCut);\n        int row=0, col=0;\n        while(row<m-1 || col<n-1){\n            int currRow=0, currCol=0;\n            if(row<m-1) currRow = horizontalCut[row];\n            if(col<n-1) currCol = verticalCut[col];\n            if(currRow>currCol){\n                ans += currRow*rowCount;\n                row++;\n                colCount++;\n            }else{\n                ans += currCol*colCount;\n                col++;\n                rowCount++;\n            }\n        }\n        return ans;\n    }\n    public void reverseNums(int[] array){\n        for (int i = 0; i < array.length / 2; i++) {\n            int temp = array[i];\n            array[i] = array[array.length - 1 - i];\n            array[array.length - 1 - i] = temp;\n        }\n    }\n}",
    "submit_ts": "1720926474",
    "subm_id": "546446479"
}