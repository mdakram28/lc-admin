{
    "username": "Ankur Kumar",
    "submission": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> T;\ntypedef long long ll;\ntypedef long double ld;\ntemplate <class T>\nusing pbset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntemplate <class T>\nusing pbmultiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n#define fastio()                      \\\n    ios_base::sync_with_stdio(false); \\\n    cin.tie(NULL);                    \\\n    cout.tie(NULL);\n#define SORT(A) sort(A.begin(), A.end());\n#define REVERSE(A) reverse(A.begin(), A.end());\n#define ull unsigned ll\n#define mmt(a, v) memset(a, v, sizeof(a));\n#define srt(A, n) sort(A, A + n);\n#define ln \"\\n\"\n#define dbg cout << \"debug\\n\";\n#define err(x, n) cout << fixed << setprecision(x) << n << \" \" << endl;\n#define INF 2e18\nconst double pi = 3.14159265358979323846;\nconst ll mod = 1e9 + 7;\nconst ll modx = 998244353;\ntypedef priority_queue<ll> pqmax;\ntypedef priority_queue<ll, vector<ll>, greater<ll>> pqmin;\nclass Solution {\npublic:\n    ll dp[101][101][101][3];\n     ll f(ll i,ll p1,ll p2,ll cnt,vector<vector<vector<ll>>>& res)\n    {\n        if(cnt==3)\n            return 0;\n        if(i==res.size())\n            return -1e18;\n        auto&x=dp[i][p1+1][p2+1][cnt];\n        if(x!=-1)\n            return x;\n        ll ans=-1e18;\n        ans=max(ans,f(i+1,p1,p2,cnt,res));\n        for(ll j=0;j<res[0].size();j++)\n        {\n            if(p1==-1)\n            {\n                ans=max(ans,res[i][j][0]+f(i+1,res[i][j][1],p2,cnt+1,res));\n            }\n            else if(p2==-1)\n            {\n               if(res[i][j][1]!=p1)\n                 ans=max(ans,res[i][j][0]+f(i+1,p1,res[i][j][1],cnt+1,res));  \n            }\n            else\n            {\n               if(res[i][j][1]!=p1 && res[i][j][1]!=p2) \n                   ans=max(ans,res[i][j][0]+f(i+1,p1,p2,cnt+1,res)); \n            }\n        }\n        return x=ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<vector<ll>>> res;\n        for(ll i=0;i<board.size();i++)\n        {\n            vector<vector<ll>> tem,p;\n            for(ll j=0;j<board[0].size();j++)\n            {\n               tem.push_back({board[i][j],j}); \n            }\n            SORT(tem);\n            REVERSE(tem);\n            for(ll j=0;j<3;j++)\n                p.push_back(tem[j]);\n            res.push_back(p);        \n        }\n        mmt(dp,-1);\n        ll ans=f(0,-1,-1,0,res);\n        return ans;\n    }\n};",
    "submit_ts": "1723908948",
    "subm_id": "1359173589"
}