{
    "username": "DipeshKanodia",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), ans = 0;\n        for(int i=0; i<m/2; i++){\n            for(int j=0; j<n/2; j++){\n                int sum = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                ans += min(sum, 4-sum);\n            }\n        }\n        if((m%2) && (n%2) && grid[m/2][n/2]) ans++;\n        int count1 = 0, val = 0;\n        if(m%2){\n            for(int j = 0; j<n/2; j++){\n                if(grid[m/2][j]!=grid[m/2][n-1-j]){ val++; count1++;}\n                else if(grid[m/2][j]) count1+=2;\n            }\n        }\n        if(n%2){\n            for(int i = 0; i<m/2; i++){\n                if(grid[i][n/2]!=grid[m-i-1][n/2]){ val++; count1++;}\n                else if(grid[i][n/2]) count1+=2;\n            }\n        }\n        if(val>0) ans+= val;\n        else if(count1%4) ans+=2;\n        return ans;\n    }\n};\n// i, j\n// -- i, n-1-j\n// -- m-1-i, j\n// -- m-1-i, n-1-j",
    "submit_ts": "1722699170",
    "subm_id": "1343203568"
}