{
    "username": "jackieckc",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int res = 0;\n\n        auto c2 = colors;\n        for (int i = 0; i < n; i++) {\n            c2.push_back(colors[i]);    \n        }\n\n        int t = 0;\n        for (int i = 1; i < k; i++) {\n            if (colors[i] == colors[i - 1]) {\n                t = i;\n            }\n        }\n        // for (int i = 0; i < n * 2; i++) {\n        //     cout << c2[i] << \"(\" << i << \")\" << \" \";\n        // }\n        // cout << endl;\n        for (int i = k; i < n + k; i++) {\n            // cout << i << \" \" << t << endl;\n            bool ok = false;\n            if (t == i - k) {\n                // cout << \"ok\" << endl;\n                ok = true;\n                res += 1;\n            }\n            if (c2[i] == c2[i - 1]) {\n                t = i;\n            } else if (ok) {\n                t += 1;\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720277880",
    "subm_id": "1311684307"
}