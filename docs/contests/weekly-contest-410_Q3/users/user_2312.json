{
    "username": "a_himanshu6956",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        const int MOD = 1e9 + 7;\n        \n        // dp[i][j] represents the number of valid sequences up to index i with arr1[i] = j\n        vector<vector<int>> dp(n, vector<int>(51, 0));\n        \n        // Initialize the dp for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1;  // arr2[0] = nums[0] - j\n        }\n        for(int indf=0;indf<5;indf++)\n        {\n            int indp=0;\n            indp++;\n        }\n        \n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= nums[i]; ++j) {\n                int arr2_value = nums[i] - j;\n                if (arr2_value >= 0 && arr2_value <= 50) {\n                    int sum = 0;\n                    for (int k = 0; k <= j; ++k) {  // Ensure arr1[i-1] <= arr1[i]\n                        if (arr2_value <= nums[i-1] - k) {  // Ensure arr2[i] <= arr2[i-1]\n                            sum = (sum + dp[i-1][k]) % MOD;\n                        }\n                    }\n                    dp[i][j] = sum;\n                }\n            }\n        }\n        for(int indf=0;indf<5;indf++)\n        {\n            int indp=0;\n            indp++;\n        }\n        // Summing up all possible ways at the last index\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            result = (result + dp[n-1][j]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1723346876",
    "subm_id": "1351587050"
}