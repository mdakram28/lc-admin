{
    "username": "sparsh8020",
    "submission": "class Solution {\npublic:\n    int MOD= 1e9+7;\n    int sparsh(int n, vector<vector<int>>& restricted){\n           vector<vector<int>> dp(n + 1, vector<int>(401, 0));\n        \n        vector<int> cons(n, -1);\n        \n          dp[0][0] = 1;\n        for (const auto& r : restricted) {\n            cons[r[0]] = r[1];\n        }\n\n      \n\n        for (int i = 0; i < n; i++) {\n            for (int sum = 0; sum <= 400; sum++) {\n                if (dp[i][sum] == 0) continue;\n                \n                if (cons[i] == -1) {\n                    for (int j = 0; j <= i; j++) {\n                        int ns = sum + (i - j);\n                        if (ns <= 400) {\n                            dp[i + 1][ns] = (dp[i + 1][ns] + dp[i][sum]) % MOD;\n                        }\n                    }\n                } else {\n                    for (int j = 0; j <= i; ++j) {\n                        int ns= sum + (i - j);\n                        if (ns == cons[i]) {\n                            dp[i + 1][ns] = (dp[i + 1][ns] + dp[i][sum]) % MOD;\n                        }\n                    }\n                }\n            }\n        }\n\n        int soln = 0;\n        for (int k = 0; k<= 400; k++) {\n            soln = (soln + dp[n][k]) % MOD;\n        }\n\n        return soln;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& restricted) {\n        return sparsh(n,restricted);\n    }\n};",
    "submit_ts": 1719068979.0
}