{
    "username": "bibhudattapanigrahi0",
    "submission": "class Trie:\n    def __init__(self):\n        self.f = dict()\n        self.flag = -1\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        head = Trie()\n        \n        for i, w in enumerate(words):\n            h = head\n            for x in w:\n                if x not in h.f:\n                    h.f[x]=Trie()\n                h = h.f[x]\n            if h.flag != -1:\n                j = h.flag\n                if costs[j] > costs[i]:\n                    h.flag = i\n            else:\n                h.flag = i\n        \n        self.ma = 10**15\n        dp = [self.ma] * (len(target) + 1)\n        dp[-1] = 0\n        \n        def fun(i, head):\n            if dp[i] != self.ma:\n                return dp[i]\n            \n            ans = [dp[i]]\n            h = head\n            \n            for j in range(i, len(target)):\n                if target[j] in h.f:\n                    h = h.f[target[j]]\n                else:\n                    break\n                if h.flag > -1:\n                    ans.append(costs[h.flag] + fun(j+1, head))\n\n            dp[i] = min(ans)\n            return dp[i]\n        ans= fun(0, head)\n        return ans if ans != self.ma else -1\n            \n            \n            \n            \n        ",
    "submit_ts": "1720322043",
    "subm_id": "1312339151"
}