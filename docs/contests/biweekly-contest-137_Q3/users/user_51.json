{
    "username": "Scarlet",
    "submission": "class Solution {\npublic:\n    static bool cmp(pair<int,int> a, pair<int,int> b){\n        return a.first>b.first;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m=board.size();\n        int n=board[0].size();\n        int total=m*n;\n        vector<int> maxrow(m,INT_MIN);\n        vector<int> maxcol(n,INT_MIN);\n        vector<pair<int,int>> Mrecord;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                Mrecord.push_back(make_pair(board[i][j],i*n+j));\n            }\n        }\n        sort(Mrecord.begin(),Mrecord.end(),cmp);\n        long long ans=INT_MIN;\n        ans*=3;\n        int tmpA=0,tmpB=0,tmpC=0;\n        for(int a=0;a<total-2;a++){\n            tmpA=Mrecord[a].second;\n            for(int b=a+1;b<total-1;b++){\n                tmpB=Mrecord[b].second;\n                if(tmpB%n==tmpA%n || tmpB/n==tmpA/n) continue;\n                if(2*(long long)Mrecord[b].first+Mrecord[a].first<=ans) break;\n                for(int c=b+1;c<total;c++){\n                    tmpC=Mrecord[c].second;\n                    if(tmpC%n==tmpA%n || tmpC/n==tmpA/n \n                    || tmpC%n==tmpB%n || tmpC/n==tmpB/n) continue;\n                    ans=max(ans,(long long)Mrecord[a].first+Mrecord[b].first+Mrecord[c].first);\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907207",
    "subm_id": "556324164"
}