{
    "username": "badwomanzz",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        map<int, int>t1, t2;\n        int n = points.size();\n        for(auto v: points){\n            t1[v[0] - v[1]]++;\n            t2[v[0] + v[1]]++;\n        }\n        int t1_min = t1.begin()->first;\n        int t1_max = t1.rbegin()->first;\n        int t2_min = t2.begin()->first;\n        int t2_max = t2.rbegin()->first;\n        int ans = max(t1_max - t1_min, t2_max - t2_min);\n        for(auto v: points){\n            if(t1[v[0] - v[1]] == 1){\n                t1.erase(t1.find(v[0] - v[1]));\n            }\n            else t1[v[0] - v[1]]--;\n            if(t2[v[0] + v[1]] == 1){\n                t2.erase(t2.find(v[0] + v[1]));\n            }\n            else t2[v[0] + v[1]]--;\n            t1_min = t1.begin()->first;\n            t1_max = t1.rbegin()->first;\n            t2_min = t2.begin()->first;\n            t2_max = t2.rbegin()->first;\n            int tmp;\n            tmp = max({t1_max - t1_min, t2_max - t2_min});\n            ans = min(ans, tmp);\n            t1[v[0] - v[1]]++;\n            t2[v[0] + v[1]]++;\n        }\n        return ans;\n    }\n};"
}