{
    "username": "Rad0miR",
    "submission": "public class Solution {\n    public int MinimumDistance(int[][] p) \n    {\n        (int x, int y)[] newP = p.Select(arr => (arr[1] + arr[0], arr[1] - arr[0])).ToArray();\n        \n        (int f, int s, _) = Best(newP);\n        \n        (_, _, int res1) = Best(newP.Where((x, i) => i != f).ToArray());\n        (_, _, int res2) = Best(newP.Where((x, i) => i != s).ToArray());\n        \n        return Math.Min(res1, res2);\n        \n        (int f, int s, int res) Best((int x, int y)[] p) \n        {\n            int minX = Int32.MaxValue, maxX = Int32.MinValue, minY = Int32.MaxValue, maxY = Int32.MinValue;\n            int minXI = 0, maxXI = 0, minYI = 0, maxYI = 0;\n            for (int i = 0; i < p.Length; ++i) \n            {\n                if (p[i].x < minX) (minX, minXI) = (p[i].x, i);\n                if (p[i].x > maxX) (maxX, maxXI) = (p[i].x, i);\n                if (p[i].y < minY) (minY, minYI) = (p[i].y, i);\n                if (p[i].y > maxY) (maxY, maxYI) = (p[i].y, i);\n            }\n            \n            int res = -1, f = 0, s = 0;\n            \n            for (int i = 0; i < p.Length; ++i) \n            {\n                if (Math.Abs(p[i].x - minX) > res) (res, f, s) = (Math.Abs(p[i].x - minX), i, minXI);\n                if (Math.Abs(p[i].x - maxX) > res) (res, f, s) = (Math.Abs(p[i].x - maxX), i, maxXI);\n                if (Math.Abs(p[i].y - minY) > res) (res, f, s) = (Math.Abs(p[i].y - minY), i, minYI);\n                if (Math.Abs(p[i].y - maxY) > res) (res, f, s) = (Math.Abs(p[i].y - maxY), i, maxYI);\n            }\n            \n            return (f, s, Dist(f, s));\n            \n            int Dist(int i, int j) \n            {\n                (int x1, int y1) = ToNorm(p[i]);\n                (int x2, int y2) = ToNorm(p[j]);\n                \n                return Math.Abs(x2 - x1) + Math.Abs(y2 - y1);\n                \n                (int, int) ToNorm((int x, int y) pp) => ((pp.x - pp.y) / 2, (pp.x + pp.y) / 2);\n            }\n        }\n    }\n    \n    /*\n    \n    x, y -> x + y. y - x\n    \n    (x - y) / 2, (x + y) / 2\n    \n    -5, 0 -> -5, 5\n    0, 5 -> 5, 5\n    1, 1 -> 2, 0\n    -1, -1 -> -2, 0\n    -1, 1 -> 0, 2\n    \n    */\n}"
}