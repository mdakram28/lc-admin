{
    "username": "xymabinogi",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        \n        int dp[n][n][m][m];\n        memset(dp, -1, sizeof(dp));\n        \n        vector<vector<int>> row(n), col(m);\n        for (int i = 0; i < n; i++){\n            for (int j = 0; j < m; j++){\n                if (grid[i][j] == 1){\n                    row[i].push_back(j);\n                    col[j].push_back(i);\n                }\n            }\n        }\n        int res = INT_MAX;\n        \n        auto calc = [&](int L, int R, int T, int B) -> int {\n            if (dp[T][B][L][R] != -1) return dp[T][B][L][R];\n            int b = -1, t = n, l = m, r = -1;    \n            for (int i = T; i <= B; i++){\n                if (!row[i].empty()){\n                    auto it = lower_bound(row[i].begin(), row[i].end(), L);\n                    if (it != row[i].end() && *it <= R){\n                        t = min(t, i);\n                        b = max(b, i);\n                        l = min(l, *it);\n                        r = max(r, *it);\n                    }\n                    it = upper_bound(row[i].begin(), row[i].end(), R);\n                    if (it != row[i].begin()){\n                        it--;\n                        if (*it >= L){\n                            t = min(t, i);\n                            b = max(b, i);\n                            l = min(l, *it);\n                            r = max(r, *it);\n                        }\n                        \n                    }\n                }\n            }\n            if (t == n || l == m) return dp[T][B][L][R] = 1;\n            else return dp[T][B][L][R] = (r - l + 1) * (b - t + 1);\n        };\n        \n        //cout << calc(1, 2, 0, 2) << \"----\\n\";\n        auto gao = [&](auto self, int L, int R, int T, int B, int add, int seq) -> void {\n            \n            if (seq == 2){\n                res = min(res, add + calc(L, R, T, B));\n                return;\n            }\n            //cut by row, take top\n            for (int i = T; i < B; i++){\n                int v = calc(L, R, T, i);\n                //cout << L <<\" \"<<R <<\" \"<< T <<\" \"<< i <<\" \"<< v << \"----\\n\";\n                self(self, L, R, i + 1, B, add + v, seq + 1);\n            }\n            //cut by row, take bot\n            for (int i = T + 1; i <= B; i++){\n                int v = calc(L, R, i, B);\n                //cout << L <<\" \"<<R <<\" \"<< T <<\" \"<< i <<\" \"<< v << \"----\\n\";\n                self(self, L, R, T, i - 1, add + v, seq + 1);\n            }\n            \n            //cut by column, take left\n            for (int j = L; j < R; j++){\n                int v = calc(L, j, T, B);\n                self(self, j + 1, R, T, B, add + v, seq + 1);\n            }\n            //take right\n            for (int j = L + 1; j <= R; j++){\n                int v = calc(j, R, T, B);\n                self(self, L, j - 1, T, B, add + v, seq + 1);\n            }\n            \n        };\n        gao(gao, 0, m - 1, 0, n - 1, 0, 0);\n        \n        return res;\n        \n        \n    }\n};",
    "submit_ts": "1719112877",
    "subm_id": "1297311275"
}