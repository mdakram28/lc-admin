{
    "username": "NDR0216",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n\n        int cnt = 0;\n\n        int last = 0;\n        for (int i = 1; i < k - 1; i++) {\n            if (colors[i - 1] == colors[i]) {\n                last = i;\n            }\n        }\n\n        for (int i = k - 1; i < colors.size() + k-1; i++) {\n            if (colors[(i - 1) % n] == colors[i % n]) {\n                last = i;\n            }\n\n            if (i-last+1 >= k) {\n                cnt++;\n            }\n        }\n\n        // for (int i = 0; i < colors.size(); i++) {\n        //     int left, right;\n        //     if (i == 0) {\n        //         left = colors.back();\n        //         right = colors[i + 1];\n        //     } else if (i == colors.size() - 1) {\n        //         left = colors[i - 1];\n        //         right = colors[0];\n        //     } else {\n        //         left = colors[i - 1];\n        //         right = colors[i + 1];\n        //     }\n\n        //     if (left != colors[i] && right != colors[i]) {\n        //         cnt++;\n        //     }\n        // }\n\n        return cnt;\n    }\n};",
    "submit_ts": "1720277734",
    "subm_id": "1311677543"
}