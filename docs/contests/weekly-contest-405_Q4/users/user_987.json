{
    "username": "coderchamp07",
    "submission": "class Solution {\npublic:\n    struct TrieNode {\n        int cost, closestEnd;\n        map<char, TrieNode*> children;\n        TrieNode() {\n            cost = 0;\n            closestEnd = INT_MAX;\n        }\n    };\n    int N;\n    vector<int> dp;\n    TrieNode* head;\n    string target;\n    int recur(int at) {\n        if(at >= N)\n            return 0;\n        if(dp[at] != -1)\n            return dp[at];\n        int ans = INT_MAX;\n        TrieNode* t = head;\n        int newAt = at;\n        while(newAt < N && t != NULL) {\n            t = t->children[target[newAt]];\n            if(t != NULL && t->cost > 0 && N - 1 - newAt >= t->closestEnd) {\n                int aageKa = recur(newAt + 1);\n                if(aageKa != INT_MAX)\n                    ans = min(ans, t->cost + aageKa);\n            }\n            newAt++;\n        }\n        return dp[at] = ans;\n    }\n    \n    int minimumCost(string T, vector<string>& words, vector<int>& costs) {\n        target = T;\n        int n = words.size();\n        head = new TrieNode();\n        for(int i = 0; i < n; i++) {\n            TrieNode* temp = head;\n            temp->closestEnd = min((int)words[i].size(), temp->closestEnd);\n            for(int j = 0; j < words[i].size(); j++) {\n                char c = words[i][j];\n                if(temp->children.find(c) == temp->children.end())\n                    temp->children[c] = new TrieNode();\n                temp = temp->children[c];\n                temp->closestEnd = min((int)words[i].size() - 1 - j, temp->closestEnd);\n            }\n            int curCost = temp->cost;\n            temp->cost = costs[i];\n            if(curCost > 0)\n                temp->cost = min(curCost, temp->cost);\n        }\n        \n        N = target.size();\n        dp.resize(N, -1);\n        int out = recur(0);\n        if(out == INT_MAX)\n            return -1;\n        return out;\n    }\n};",
    "submit_ts": "1720322606",
    "subm_id": "1312354356"
}