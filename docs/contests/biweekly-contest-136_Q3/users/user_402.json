{
    "username": "yangxiaobai",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int res = 0;\n        for (int i = 0; i < grid.length / 2; i++) {\n            for (int j = 0; j < grid[i].length / 2; j++) {\n                int a = grid[i][j];\n                int b = grid[grid.length - 1 - i][j];\n                int c = grid[i][grid[i].length - 1 - j];\n                int d = grid[grid.length - 1 - i][grid[i].length - 1 - j];\n                int t = a + b + c + d;\n                grid[i][j] = -1;\n                grid[grid.length - 1 - i][j] = -1;\n                grid[i][grid[i].length - 1 - j] = -1;\n                grid[grid.length - 1 - i][grid[i].length - 1 - j] = -1;\n                if (t <= 2) {\n                    res += t;\n                } else {\n                    res += (4 - t);\n                }\n            }\n        }\n//        if (grid.length % 2 == 1 && grid[0].length % 2 == 1) {\n//            for (int i = 0; i < Math.min(grid.length, grid[0].length) / 2; i++) {\n//                int a = grid[grid.length / 2][i];\n//                int b = grid[grid.length / 2][grid[0].length - 1 - i];\n//                int c = grid[i][grid[0].length / 2];\n//                int d = grid[grid.length - 1 - i][grid[0].length / 2];\n//                int t = a + b + c + d;\n//                grid[grid.length / 2][i] = -1;\n//                grid[grid.length / 2][grid[0].length - 1 - i] = -1;\n//                grid[i][grid[0].length / 2] = -1;\n//                grid[grid.length - 1 - i][grid[0].length / 2] = -1;\n//                if (t <= 2) {\n//                    res += t;\n//                } else {\n//                    res += (4 - t);\n//                }\n//            }\n//        }\n        int dui11 = 0;\n        int dui01 = 0;\n        if (grid.length % 2 == 1) {\n            for (int i = 0; i < grid[0].length / 2; i++) {\n                int a = grid[grid.length / 2][i];\n                int b = grid[grid.length / 2][grid[0].length - 1 - i];\n                if (a + b == 2) {\n                    dui11++;\n                } else if (a + b == 1) {\n                    dui01++;\n                }\n            }\n        }\n        if (grid[0].length % 2 == 1) {\n            for (int i = 0; i < grid.length / 2; i++) {\n                int a = grid[i][grid[0].length / 2];\n                int b = grid[grid.length - 1 - i][grid[0].length / 2];\n                if (a + b == 2) {\n                    dui11++;\n                } else if (a + b == 1) {\n                    dui01++;\n                }\n            }\n        }\n        res += fun(dui01, dui11);\n        if (grid.length % 2 == 1 && grid[0].length % 2 == 1) {\n            int a = grid[grid.length / 2][grid[0].length / 2];\n            if (a == 1) {\n                res++;\n            }\n        }\n        return res;\n    }\n\n    private int fun(int dui01, int dui11) {\n        int res = dui01;\n        dui11 = dui11 % 2;\n        if (dui11 == 1 && dui01 == 0) {\n            res += 2;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722697978",
    "subm_id": "552268743"
}