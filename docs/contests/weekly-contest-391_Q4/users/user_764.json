{
    "username": "akg7227",
    "submission": "class Solution {\npublic:\n    \n    vector<vector<pair<int,int>>> fun(vector<vector<int>> arr){\n        int n = arr.size();\n        vector<vector<pair<int,int>>> ans(n, vector<pair<int,int>>(2));\n        for(int i = 0; i < n ; i++){\n            ans[i][0] = {arr[i][0], arr[i][0]};\n            ans[i][1] = {arr[i][1], arr[i][1]};\n            if(i){\n                ans[i][0].first = max(ans[i][0].first, ans[i-1][0].first);\n                ans[i][0].second = min(ans[i][0].second, ans[i-1][0].second);\n                ans[i][1].first = max(ans[i][1].first, ans[i-1][1].first);\n                ans[i][1].second = min(ans[i][1].second, ans[i-1][1].second);\n                \n            }\n        }\n        return ans;\n    }\n    \n    \n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        vector<vector<int>> arr(n, vector<int>(2));\n        for(int i = 0; i < n; i++){\n            arr[i][0] = p[i][0] + p[i][1];\n            arr[i][1] = p[i][0] - p[i][1];\n            // arr[i][2] = -p[i][0] + p[i][1];\n            // arr[i][3] = -p[i][0] - p[i][1];\n        }\n        auto pref = fun(arr);\n        reverse(arr.begin(), arr.end());\n        // for(auto v: pref){\n        //     for(auto p: v){\n        //         cout << p.first <<\" \"<< p.second<< endl;\n        //     }\n        //     cout << endl;\n        // }\n        auto suffi = fun(arr);\n        reverse(suffi.begin(), suffi.end());\n        long long ans = INT_MAX;\n        for(int i = 0; i < n; i++){\n            long long tempAns = LONG_MIN;\n            for(int j = 0; j < 2; j++){\n                pair<int,int> pre = {INT_MIN, INT_MAX};\n                pair<int,int> suff = pre;\n                if(i){\n                    pre = pref[i-1][j];\n                }\n                if(i + 1 < n){\n                    suff = suffi[i + 1][j];\n                }\n                long long comMax = max(pre.first, suff.first);\n                long long comMin = min(pre.second, suff.second);\n                // cout << comMin <<\" ,  \" << comMax <<endl;\n                tempAns = max(tempAns, comMax- comMin);\n            }\n            if(tempAns != LONG_MIN)ans = min(ans, tempAns);\n        }\n        return ans;\n    }\n};"
}