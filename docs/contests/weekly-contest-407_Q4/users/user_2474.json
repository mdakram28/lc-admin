{
    "username": "vedantborkar1234",
    "submission": "class segmentTree {\npublic:\n    vector<pair<int,int>> segTree;\n    \n    segmentTree(int n) {\n        segTree=vector<pair<int,int>> (4*n);\n    }\n \n    void build(vector<int>& v, int i, int l, int r) {\n        if(l==r){\n            segTree[i]={v[l],l};\n            return;\n        }\n        int m=l+(r-l)/2;\n        build(v,2*i+1,l,m);\n        build(v,2*i+2,m+1,r);\n        pair<int,int> left=segTree[2*i+1],right=segTree[2*i+2];\n        if(left.first<right.first) segTree[i]=left;\n        else segTree[i]=right;\n    }\n\n    pair<int,int> query(int i, int l, int r, int L, int R) {\n        if(l>=L && r<=R) return segTree[i];\n        if(l>R || r<L) return {INT_MAX,INT_MAX};\n        int m=l+(r-l)/2;\n        pair<int,int> left=query(2*i+1,l,m,L,R),right=query(2*i+2,m+1,r,L,R);\n        if(left.first<right.first) return left;\n        return right;\n    }\n};\n\nclass Solution {\npublic:\n    segmentTree* st;\n        \n    long long int solve(int l, int r, int prev, int n) {\n        pair<int,int> q=st->query(0,0,n-1,l,r);\n        long long int ans=q.first-prev,ind=q.second;\n        if(ind+1<=r) ans+=solve(ind+1,r,q.first,n);\n        if(ind-1>=l) ans+=solve(l,ind-1,q.first,n);\n        return ans;\n    }\n    \n    long long minimumOperations(vector<int>& v, vector<int>& target) {\n        long long int ans=0;\n        for(int i=0;i<v.size();i++){\n            if(v[i]==target[i]) continue;\n            vector<int> cur;\n            if(v[i]>target[i]){\n                while(i<v.size() && v[i]>target[i]){\n                    cur.push_back(v[i]-target[i]);\n                    ++i;\n                }\n            }\n            else{\n                while(i<v.size() && v[i]<target[i]){\n                    cur.push_back(-v[i]+target[i]);\n                    ++i;\n                }\n            }\n            --i;\n            st=new segmentTree(cur.size());\n            st->build(cur,0,0,cur.size()-1);\n            ans+=solve(0,cur.size()-1,0,cur.size());\n        }\n        return ans;\n    }\n};\n\n// 5 3 7 8 4 5 (1) [1]\n// 5 (3) 7 8 4 5 (1) [2]\n// (5) (3) 7 8 4 5 (1) [2]\n// (5) (3) 7 8 (4) 5 (1) [1]\n",
    "submit_ts": "1721534109",
    "subm_id": "1328023698"
}