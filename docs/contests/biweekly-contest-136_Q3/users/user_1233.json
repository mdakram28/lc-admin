{
    "username": "godAngryOver",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int res = 0;\n\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2 ; j++) {\n                int[] count = new int[2];\n                count[grid[i][j]]++;\n                count[grid[i][n - j - 1]]++;\n                count[grid[m - i - 1][j]]++;\n                count[grid[m - i - 1][n - j - 1]]++;\n                res += Math.min(count[0],count[1]);\n            }\n        }\n        int one = 0;\n        int temp = 0;\n        if(m % 2 != 0){\n            for (int j = 0; j < n / 2 ; j++) {\n                if(grid[m / 2][j] != grid[m / 2][n - j - 1]) temp++;\n                else if(grid[m / 2][j] == 1) one +=2;\n            }\n            if(n %2 != 0){\n                if(grid[m / 2][n / 2] == 1) res++;\n            }\n        }\n        if(n % 2 != 0){\n            for (int i = 0; i < m / 2; i++) {\n                if(grid[i][n / 2] != grid[m - i - 1][n / 2]) temp++;\n                else if(grid[i][n / 2] == 1) one +=2;\n            }\n        }\n        if(one % 4 == 0) return res + temp;\n        if(one % 4 == 2 && temp > 0) return res + temp;\n        else return one %4 + temp + res;\n    }\n}",
    "submit_ts": "1722698455",
    "subm_id": "552270938"
}