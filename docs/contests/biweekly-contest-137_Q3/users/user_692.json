{
    "username": "Harris",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\n#define     ll              long long int\n#define     IOS             ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define\t\tvt\t\t\t\tvector<ll>v;\n#define\t\tcYes\t\t\tcout<<\"YES\"<<'\\n';\n#define\t\tcNo\t\t\t\tcout<<\"NO\"<<'\\n';\n#define     INPUT           int t;cin>>t;while(t--)\n#define     vl              vector<ll>\n#define     pii             pair<int,int>\n#define     pll             pair<ll,ll>\n#define     pb              push_back\n#define     F               first\n#define     S               second\n#define     forx3(x, start, stop, step) for (long long x = start; x < (long long)(stop); x += step)\n#define     forx(x, start, stop) forx3(x, start, stop, 1) \n#define     forx2(x, stop) forx(x, 0, stop)\n#define     forr(x,start,stop)  for (long long x = start; x >= (long long)(stop); x -= 1)\n#define     all(a) a.begin(), a.end()\n#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nvoid err(istream_iterator<string> it) {\n\tcout << '\\n';\n}\ntemplate<typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n\tcout << *it << \" = \" << a << ' ';\n\terr(++it, args...);\n}\nstatic constexpr ll MOD  = 1e9+7;\n\nll modPow(ll base, ll exp, ll mod) {\n    ll res = 1;\n    base %= mod;\n    while (exp > 0) {\n        if (exp & 1) res = (res * base) % mod;\n        exp >>= 1;\n        base = (base * base) % mod;\n    }\n    return res;\n}\n\nstruct cell {\n    ll value;\n    ll row;\n    ll col;\n    \n    bool operator<(const cell& other) const {\n        return value < other.value;\n    }\n};\n\nclass Solution {\n    typedef tuple<int,int,int> tp;\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        ll m = board.size(), n = board[0].size();\n        vector<priority_queue<cell>> rows(m), cols(n);\n        vector<vector<cell>> row3(m), col3(n);\n\n        forx(i, 0, m) {\n            forx(j, 0, n) {\n                int curr = board[i][j];\n                rows[i].push({curr, i, j});\n                cols[j].push({curr, i, j});\n            }\n        }\n\n        forx(i, 0, m) {\n            forx(j, 0, 3) {\n                auto curr = rows[i].top();\n                rows[i].pop();\n                row3[i].pb(curr);\n            }\n        }\n\n        forx(i, 0, n) {\n            forx(j, 0, 3) {\n                auto curr = cols[i].top();\n                cols[i].pop();\n                col3[i].pb(curr);\n            }\n        }\n\n        ll maxSum = LLONG_MIN;\n\n        forx(i, 0, m) {\n            forx(j, i + 1, m) {\n                forx(z, j + 1, m) {\n                    for (auto& r1 : row3[i]) {\n                        for (auto& r2 : row3[j]) {\n                            if (r2.col == r1.col) continue;  \n                            for (auto& r3 : row3[z]) {\n                                if (r3.col == r1.col || r3.col == r2.col) continue; \n                                ll currSum = r1.value + r2.value + r3.value;\n                                maxSum = max(maxSum, currSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSum;\n\n    }\n};",
    "submit_ts": "1723909808",
    "subm_id": "1359206546"
}