{
    "username": "hr_boghani",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define ll long long\n#define li long int\n#define ull unsigned long long\n#define ld long double\n\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n\n#define fix fixed << setprecision(10)\n#define mod 1000000007\n#define pb push_back\n#define ff first\n#define ss second\n#define yes cout << \"Yes\" << endl\n#define no cout << \"No\" << endl\n\n#define f(i, l, r) for (ll i = l; i < r; i++)\n#define rf(j, l, r) for (ll j = l; j >= r; j--)\n#define all(v) v.begin(), v.end()\n#define disp(v)            \\\n    for (int i = 0; i < v.size(); i++) \\\n        cout << v[i] << ' ';           \\\n    cout << endl;\n#define sum(v, a, b) accumulate(v + a, v + b, 0)\n\nclass Solution {\npublic:\n    vector<vector<vector<ll>>> dp;\n    \n    ll solve(int i, int elu, int eld, vector<int>& v){\n        int n = v.size();\n        if(i == n) return 1;\n        if(dp[i][elu][eld] != -1) return dp[i][elu][eld];\n        ll take = 0;\n        for(int x = elu; x <= 50; x++){\n            if(v[i] - x <= eld && v[i] - x >= 0) {\n                take = (take + solve(i + 1, x, v[i] - x, v)) % mod;\n            }\n        }\n        return dp[i][elu][eld] = take;\n    }\n    \n    int countOfPairs(vector<int>& v) {\n        int n = v.size();\n        dp = vector<vector<vector<ll>>>(n, vector<vector<ll>>(51, vector<ll>(51, -1)));\n        ll take = 0;\n        for(int x = 0; x <= 50; x++){\n            if(v[0] - x >= 0) {\n                take = (take + solve(1, x, v[0] - x, v)) % mod;\n            }\n        }\n        return take;\n    }\n};\n",
    "submit_ts": "1723346581",
    "subm_id": "1351580714"
}