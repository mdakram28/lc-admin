{
    "username": "Tutul_dhar",
    "submission": "class Solution {\npublic:\n    int seg[400010];\n    void build(int ind,int ss,int se,int pos,int val) {\n        if(ss == se) {\n            seg[ind] = val;\n            return;\n        }\n        int mid = (ss+se)/2;\n        if(pos <= mid) build(2*ind,ss,mid,pos,val);\n        else build(2*ind+1,mid+1,se,pos,val);\n        seg[ind] = (seg[2*ind]+seg[2*ind+1]);\n    }\n    \n    int query(int ind,int ss,int se,int l,int r) {\n        if(ss > r or se < l) return 0;\n        if(ss >= l and se <= r) return seg[ind];\n        int mid = (ss+se)>>1;\n        return (query(2*ind,ss,mid,l,r)+query(2*ind+1,mid+1,se,l,r));\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        memset(seg,0,sizeof seg);\n        int n = nums.size();\n        for(int i = 1; i < nums.size()-1; i++) {\n            if(nums[i] > nums[i-1] and nums[i] > nums[i+1]) build(1,1,n,i+1,1);\n        }\n        vector<int> ans;\n        for(int i = 0; i < queries.size(); i++) {\n            int ty = queries[i][0],l = queries[i][1],r = queries[i][2];\n            if(ty == 1) {\n                l += 2;\n                int e = query(1,1,n,l,r);\n                ans.push_back(e);\n            } else {\n                nums[l] = r;\n                for(int j = max(0,l-1); j <= min(l+1,n-1); j++) {\n                    if(j-1 >= 0 and j+1 < n) {\n                        if(nums[j] > nums[j-1] and nums[j] > nums[j+1]) build(1,1,n,j+1,1);\n                        else build(1,1,n,j+1,0);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507097.0
}