{
    "username": "Spyy_23",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n         vector<int> maxValues;\n          int minChanges = nums.size();\n        map<int, vector<int>> differenceMap;\n       \n        for (int i = 0; i < nums.size() / 2; i++) {\n            int num1 = nums[i];\n            int num2 = nums[nums.size() - i - 1];\n            int difference = abs(num1 - num2);\n            int maxVal = max({num1, num2, k - num1, k - num2});\n            differenceMap[difference].push_back(maxVal);\n            maxValues.push_back(maxVal);\n        }\n        sort(maxValues.begin(), maxValues.end());\n\n        \n        \n        \n        for (auto &entry : differenceMap) {\n            int difference = entry.first;\n            int changes = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            changes = changes * 2 + (nums.size() / 2 - changes);\n            \n            for (auto &maxVal : entry.second) {\n                if (difference >maxVal) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n            minChanges = min(minChanges, changes);\n        }\n        \n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721489113",
    "subm_id": "1327443309"
}