{
    "username": "Harshit Shah",
    "submission": "import java.util.*;\n\nclass Solution {\n    public long maximumValueSum(int[][] matrix) {\n        int rows = matrix.length;\n        int cols = matrix[0].length;\n        \n        long maxTotal = Long.MIN_VALUE;\n        long[][] topValues = new long[rows][3];\n        int[][] topColumns = new int[rows][3];\n\n        for (int i = 0; i < rows; ++i) {\n            List<long[]> colList = new ArrayList<>();\n            for (int j = 0; j < cols; ++j) {\n                colList.add(new long[]{matrix[i][j], j});\n            }\n            colList.sort((a, b) -> Long.compare(b[0], a[0]));\n\n            for (int k = 0; k < 3 && k < cols; ++k) {\n                topValues[i][k] = colList.get(k)[0];\n                topColumns[i][k] = (int) colList.get(k)[1];\n            }\n        }\n\n        for (int row1 = 0; row1 < rows; ++row1) {\n            for (int row2 = row1 + 1; row2 < rows; ++row2) {\n                for (int row3 = row2 + 1; row3 < rows; ++row3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (topColumns[row2][j] == topColumns[row1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (topColumns[row3][k] == topColumns[row1][i] || topColumns[row3][k] == topColumns[row2][j]) continue;\n\n                                long currentTotal = topValues[row1][i] + topValues[row2][j] + topValues[row3][k];\n                                maxTotal = Math.max(maxTotal, currentTotal);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxTotal;\n    }\n}\n",
    "submit_ts": "1723910223",
    "subm_id": "1359221938"
}