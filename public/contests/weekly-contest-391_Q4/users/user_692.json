{
    "username": "hr_boghani",
    "submission": "#include <bits/stdc++.h>\n#define ll long long int\n#define li long int\n#define ull unsigned long long\n#define ld long double\n#define all(v) v.begin(),v.end()\n#define disp(v) for(int i=0 ;i<v.size() ;i++) cout << v[i] << ' '; cout << endl;\n#define sum(v,a,b) accumulate(v+a,v+b,0)\n#define fix fixed<<setprecision(10)\n#define mod 1000000007\n#define M 998244353\n#define pb push_back\n#define ff first\n#define ss second\n#define yes cout<<\"YES\"<<endl\n#define no cout<<\"NO\"<<endl\nusing namespace std;\n\nclass Solution {\n    \npublic:\n    int MaxDist(vector<vector<int>>& A, int N, int idx)\n    {\n        // Variables to track running extrema\n        int minsum, maxsum, mindiff, maxdiff;\n        if(idx!=0){\n            minsum = maxsum = A[0][0] + A[0][1];\n            mindiff = maxdiff = A[0][0] - A[0][1];\n            for (int i = 1; i < N; i++) {\n                if(idx==i) continue;\n                int sum = A[i][0] + A[i][1];\n                int diff = A[i][0] - A[i][1];\n                if (sum < minsum)\n                    minsum = sum;\n                else if (sum > maxsum)\n                    maxsum = sum;\n                if (diff < mindiff)\n                    mindiff = diff;\n                else if (diff > maxdiff)\n                    maxdiff = diff;\n            }\n\n            int maximum = max(maxsum - minsum, maxdiff - mindiff);\n            return maximum;\n        }else{\n            minsum = maxsum = A[1][0] + A[1][1];\n            mindiff = maxdiff = A[1][0] - A[1][1];\n            for (int i = 2; i < N; i++) {\n                int sum = A[i][0] + A[i][1];\n                int diff = A[i][0] - A[i][1];\n                if (sum < minsum)\n                    minsum = sum;\n                else if (sum > maxsum)\n                    maxsum = sum;\n                if (diff < mindiff)\n                    mindiff = diff;\n                else if (diff > maxdiff)\n                    maxdiff = diff;\n            }\n\n            int maximum = max(maxsum - minsum, maxdiff - mindiff);\n            return maximum;\n        }\n    }\n    \n    int minimumDistance(vector<vector<int>>& p) {\n        set<int> st;\n        int max1=0,max2=0,min1=INT_MAX,min2=INT_MAX;\n        for(int i=0;i<p.size();i++){\n            max1=max(max1,p[i][0]+p[i][1]);\n            max2=max(max2,p[i][0]-p[i][1]);\n            min1=min(min1,p[i][0]+p[i][1]);\n            min2=min(min2,p[i][0]-p[i][1]);\n        }\n        for(int i=0;i<p.size();i++){\n            ll x = p[i][0]+p[i][1];\n            ll y = p[i][0]-p[i][1];\n            if(x==max1){\n                max1=LONG_LONG_MIN;\n                st.insert(i);\n            }else if(x==min1){\n                min1=LONG_LONG_MAX;\n                st.insert(i);\n            }\n            if(y==max2) {\n                max2=LONG_LONG_MIN;\n                st.insert(i);\n            }\n            else if(y==min2){\n                min2=LONG_LONG_MAX;\n                st.insert(i);\n            }\n        }\n        int ans=INT_MAX;\n        for(auto it : st){\n            int tp = MaxDist(p,(int)p.size(),it);\n            ans=min(ans,tp);\n        }\n        return ans;\n        \n    }\n};\n"
}