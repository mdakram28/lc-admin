{
    "username": "parascoding",
    "submission": "class Solution {\n    public int countOfPairs(int[] a) {\n        n = a.length;\n        dp = new Long[n + 1][51][51];\n        return (int)(dp(1, 0, 50, a));\n    }\n    long dp(int ind, int l1, int l2, int a[]){\n        if(ind > n)\n            return 1l;\n        if(dp[ind][l1][l2] != null)\n            return dp[ind][l1][l2];\n        long ways = 0;\n        for(int i = l1; i <= Math.max(50, a[ind - 1]); i++){\n            for(int j = Math.min(l2, a[ind - 1]); j >= 0; j--){\n                if(a[ind - 1] == i + j){\n                    // System.out.println(ind+\" \"+i+\" \"+j);\n                    ways = (ways + dp(ind + 1, i, j, a)) % mod;\n                }\n            }\n        }\n        // System.out.println(ind+\" \"+ways+\" \"+l1+\" \"+l2);\n        dp[ind][l1][l2] = ways;\n        return ways;\n    }\n    int mod = (int)(1e9 + 7);\n    Long dp[][][];\n    int n;\n}",
    "submit_ts": "1723344768",
    "subm_id": "1351541615"
}