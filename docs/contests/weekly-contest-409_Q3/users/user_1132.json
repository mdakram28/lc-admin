{
    "username": "zukunft-f",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeSet<Integer> left = new TreeSet<>();\n        int[] result = new int[queries.length];\n\n        // \u521d\u59cb\u5316 TreeSet\uff0c\u6dfb\u52a0 [0, n-1] \u7684\u6240\u6709\u503c\n        for (int i = 0; i < n; i++) {\n            left.add(i);\n        }\n\n        int cur = 0;\n        for (int[] link : queries) {\n            // \u79fb\u9664 left \u4e2d (link[0], link[1]) \u4e4b\u95f4\u7684\u6240\u6709\u503c\n            removeRange(left, link[0], link[1]);\n            result[cur++] = left.size() - 1;\n        }\n\n        return result;\n    }\n\n    private void removeRange(TreeSet<Integer> treeSet, int fromElement, int toElement) {\n        // \u83b7\u53d6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\n        TreeSet<Integer> subSet = new TreeSet<>(treeSet.subSet(fromElement + 1, toElement));\n        \n        // \u79fb\u9664\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\n        treeSet.removeAll(subSet);\n    }\n}",
    "submit_ts": "1722743202",
    "subm_id": "552349409"
}