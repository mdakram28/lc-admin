{
    "username": "N_E_E_R_A_J",
    "submission": "const char fastio = [](){\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\ntypedef long long int ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\n#define ALL(iterable) (iterable).begin(), (iterable).end()\n#define RALL(iterable) (iterable).rbegin(), (iterable).rend()\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n#define ROUND(x) (((x) >= 0) ? (ll)((x) + 0.5) : (ll)((x) - 0.5))\n#define DEBUG(...) cout << \"[DEBUG-\" << __LINE__ << \"]:\"; debug_cout(__VA_ARGS__);\n\nshort dx4[] = {-1, 0, 1, 0};\nshort dy4[] = {0, 1, 0, -1};\n\nshort dx8[] = {-1, -1, -1, 0, 1, 1, 1, 0};\nshort dy8[] = {-1, 0, 1, 1, 1, 0, -1, -1};\n\nshort kx[] = {2, 1, -1, -2, -2, -1, 1, 2};\nshort ky[] = {1, 2, 2, 1, -1, -2, -2, -1};\n\ntemplate<typename T>\nvoid debug_cout(const T& arg) {\n    cout << \" \" << arg;\n}\n\ntemplate<typename T, typename... Args>\nvoid debug_cout(const T& firstArg, const Args&... args) {\n    cout << \" \" << firstArg;\n    debug_cout(args...);\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &out, pair<T1, T2> &p)\n{\n    out << \"(\" << p.first << \",\" << p.second << \")\";\n    return out;\n}\n\ntemplate <typename T>\nostream &operator<<(ostream &out, vector<T> &vec)\n{\n    out << \"[\";\n    for (auto it = vec.begin(); it != vec.end(); ++it)\n    {\n        if (it != vec.begin())\n            out << \",\";\n        out << *it;\n    }\n    out << \"]\";\n    return out;\n}\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> tmp(colors);\n        for (auto &&c: colors)\n            tmp.push_back(c);\n\n        int n = tmp.size();\n        vector<int> different(n, 0);\n        for (int i = 0; i < n; i++)\n            different[i] = (tmp[i] != tmp[(i - 1 + n) % n] && tmp[i] != tmp[(i + 1) % n]);\n        \n        for (int i = 1; i < n; i++)\n            different[i] += different[i - 1];\n        \n        int count = 0;\n        for (int i = 0; i < colors.size(); i++)\n        {\n            int cnt = different[i + k - 2] - different[i];\n            if (cnt == k - 2)\n                ++count;\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720277105",
    "subm_id": "1311647936"
}