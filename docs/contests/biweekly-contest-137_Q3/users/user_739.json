{
    "username": "Prakulgupta",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    // function \n    ll findmaxval(vector<vector<int>>& arr,int row,int prev_col1,int prev_col2,int tar,int n,int m,vector<vector<vector<ll>>> &dp){\n        // base case\n        if(tar==0){\n            return 0;\n        }\n\n        if(row==n){\n            // if the value of tar is 0\n            if(tar==0){\n                return 0;\n            }\n\n            // else return a small value\n            return (-1)*(1e10);\n        }\n\n        // if the value of dp[row][prev_col1][prev_col2] is not equal to -1\n        if(dp[row][prev_col1][prev_col2]!=-1){\n            return dp[row][prev_col1][prev_col2];\n        }\n\n        // if we do not take the value from the row\n        ll maxval=findmaxval(arr,row+1,prev_col1,prev_col2,tar,n,m,dp);\n\n        // run a loop fro all the col\n        for(int i=0;i<m;i++){\n            // if the value of i equal to prev_col1 or prev_col2 then \n            if(i==prev_col1-1 || i==prev_col2-1){\n                continue;\n            }\n\n            // if the tar is equal to 3\n            if(tar==3){\n                // update the maxval\n                maxval=max(maxval,arr[row][i]+findmaxval(arr,row+1,i+1,prev_col2,tar-1,n,m,dp));\n            }\n\n            // if the value of tar is 2\n            else if(tar==2){\n                // update the maxval\n                maxval=max(maxval,arr[row][i]+findmaxval(arr,row+1,prev_col1,i+1,tar-1,n,m,dp));\n            }\n\n            // if the value of tar is 1\n            else if(tar==1){\n                // update the maxval\n                maxval=max(maxval,arr[row][i]+findmaxval(arr,row+1,prev_col1,prev_col2,tar-1,n,m,dp));\n            }\n        }\n\n        // return maxval\n        return dp[row][prev_col1][prev_col2]=maxval;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        // find the value of n and m\n        int n=board.size();\n        int m=board[0].size();\n\n        // create the 3d dp \n        vector<vector<vector<ll>>> dp(n,vector<vector<ll>>(m+1,vector<ll>(m+1,-1)));\n\n        // function call\n        return findmaxval(board,0,0,0,3,n,m,dp);\n    }\n};",
    "submit_ts": "1723909228",
    "subm_id": "1359184465"
}