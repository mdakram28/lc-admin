{
    "username": "LayzerK",
    "submission": "class Solution:\n    def minimumDiameterAfterMerge(self, edges1: List[List[int]], edges2: List[List[int]]) -> int:\n        \n        #pretty sure just tree DP \"center\" of both trees added together + 1\n        tree1 = defaultdict(list)\n        tree2 = defaultdict(list)\n        \n        for a,b in edges1:\n            tree1[a].append(b)\n            tree1[b].append(a)\n        \n        for a,b in edges2:\n            tree2[a].append(b)\n            tree2[b].append(a)\n        \n        \n        path = []\n\n        def bfs(start, adj):\n            \n            q = deque()\n            \n            q.append((start, -1))\n            last = -1\n            while q:\n                curr, par = q.popleft()\n                last = curr\n                for nei in adj[curr]:\n                    if nei == par:\n                        continue\n                    q.append((nei, curr))\n            return last\n        \n        def findpath(curr, par, end, tree):\n            if curr == end:\n                return True\n            \n            for nei in tree[curr]:\n                if nei == par:\n                    continue\n                \n                if findpath(nei, curr, end, tree):\n                    path.append(nei)\n                    return True\n            \n            return False\n        \n        \n            \n            \n        \n        \n        tree1First = bfs(0, tree1)\n        tree1Second = bfs(tree1First, tree1)\n        path = [tree1First]\n        findpath(tree1First, -1, tree1Second, tree1)\n        \n        sz1 = len(path)\n        #print(path)\n        path = []\n        \n        tree2First = bfs(0, tree2)\n        tree2Second = bfs(tree2First, tree2)\n        path = [tree2First]\n        findpath(tree2First, -1, tree2Second, tree2)\n        \n        sz2 = len(path)\n        #print(sz1, sz2)\n        cost = sz1//2 + sz2//2 + 1\n        \n        return max(cost, max(sz1 - 1, sz2 - 1))\n        #[1, 0, 2, 3, 5, 4, 8, 7]\n        #mid lies between them\n        \n        ",
    "submit_ts": "1719718493",
    "subm_id": "1304418584"
}