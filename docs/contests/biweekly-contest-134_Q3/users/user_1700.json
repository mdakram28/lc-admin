{
    "username": "utsav4578",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        //slidin window hai kya?\n        //man I want to just find 1 alternative\n        int n=colors.size();\n        vector<int>good(n,0);\n        for(int i=0;i<n;i++){\n            int prev=(i-1+n)%n;\n            if(colors[i]==colors[prev])good[i]=1; //it's bad\n        }\n        int left=n-(k-1);\n        int right=0;\n        int total_cnt=0;\n        int cntOnes=0;\n        int i=left+1;\n        // if(k==4)cout<<good[0];\n         \n        while(i!=right){\n          if(good[i])cntOnes++;\n          i=(i+1)%n;\n        }\n        if(good[i])cntOnes++;\n\n        cout<<\"cntOnes in first go is:  \"<<cntOnes<<endl;\n        right++;\n        if(cntOnes==0)total_cnt++;\n        while(right<n){\n        //  cout<<total_cnt<<endl;\n         if(good[right])cntOnes++;\n         right++;\n         if(good[(left+1)%n])cntOnes--;\n         left=(left+1)%n;\n         if(cntOnes==0)total_cnt++;\n        }\n        return total_cnt;\n    }\n};",
    "submit_ts": "1720279218",
    "subm_id": "1311742356"
}