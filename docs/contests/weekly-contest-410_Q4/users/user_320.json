{
    "username": "REED_W",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        return sln1(nums);\n    }\n\n    static int mod = 1_000_000_007;\n\n    private int sln1(int[] nums){\n        int n = nums.length;\n        int max = 1001;\n        int[][] dp = new int[n][max];   //{i, j} number of monotonic array1 end at i with value j, \n        int[][] presum = new int[n][max+1];\n        for(int i = 0;i<=nums[0]; i++) {\n            dp[0][i] = 1;\n            presum[0][i+1] = presum[0][i]+dp[0][i];\n        }\n        for(int i = 1;i<n;i++){\n            for(int j = 0;j<=nums[i];j++){\n                int k = Math.max(-1, j - Math.max(0, (nums[i]-nums[i-1])) );\n                dp[i][j] = presum[i-1][k+1];\n                presum[i][j+1] = (presum[i][j]+dp[i][j])%mod;\n            }\n        }\n        int res = 0;\n        for(int i: dp[n-1]) res= (res+i)%mod;\n        return res;\n    }\n}",
    "submit_ts": "1723346983",
    "subm_id": "1351589429"
}