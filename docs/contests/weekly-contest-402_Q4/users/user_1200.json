{
    "username": "Gaurav_Bilotia1",
    "submission": "#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& que) {\n        int n = nums.size(),q=que.size();\n        ordered_set st;\n        for(int i=1;i<(n-1);i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]){\n                st.insert(i);\n            }\n        }\n        nums.push_back(1e9);\n        nums.push_back(1e9);\n        vector<int>res;\n        for(int i=0;i<q;i++){\n            int type = que[i][0];\n            if(type==1){\n                int l = que[i][1], r = que[i][2];\n                int ans = st.order_of_key(r);\n                ans -= st.order_of_key(l+1);\n                ans = max(0,ans);\n                res.push_back(ans);\n            }\n            else{\n                int ind = que[i][1], val = que[i][2];\n                if(ind==0){\n                    nums[ind] = val;\n                    if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2])st.insert(ind+1);\n                    else{\n                        if(st.find(ind+1) != st.end())st.erase(ind+1);\n                    }\n                }\n                else if(ind==(n-1)){\n                    nums[ind] = val;\n                    if((ind-1) > 0){\n                        if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind])st.insert(ind-1);\n                        else{\n                            if(st.find(ind-1) != st.end())st.erase(ind-1);\n                        }\n                    }\n                }\n                else{\n                    nums[ind] = val;\n                    if(nums[ind]>nums[ind-1] && nums[ind]>nums[ind+1])st.insert(ind);\n                    else{\n                        if(st.find(ind)!=st.end())st.erase(ind);\n                    }\n                    if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2])st.insert(ind+1);\n                    else{\n                        if(st.find(ind+1) != st.end())st.erase(ind+1);\n                    }\n                    \n                    if((ind-1) > 0){\n                        if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind])st.insert(ind-1);\n                        else{\n                            if(st.find(ind-1) != st.end())st.erase(ind-1);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718508883.0
}