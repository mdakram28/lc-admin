{
    "username": "manish_bojja",
    "submission": "#include <vector>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       \n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int hIndex = 0, vIndex = 0;\n        int hSegments = 1, vSegments = 1;\n        long long totalCost = 0;\n        \n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += horizontalCut[hIndex] * vSegments;\n                hIndex++;\n                hSegments++;\n            } else {\n                totalCost += verticalCut[vIndex] * hSegments;\n                vIndex++;\n                vSegments++;\n            }\n        }\n        \n        while (hIndex < horizontalCut.size()) {\n            totalCost += horizontalCut[hIndex] * vSegments;\n            hIndex++;\n            hSegments++;\n        }\n        \n        while (vIndex < verticalCut.size()) {\n            totalCost += verticalCut[vIndex] * hSegments;\n            vIndex++;\n            vSegments++;\n        }\n        \n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925741",
    "subm_id": "1320264712"
}