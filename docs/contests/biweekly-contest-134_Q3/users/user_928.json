{
    "username": "dry4",
    "submission": "class Solution {\n    private int solve(int[] colors, int k, int count, int alternatingLength, int N) {\n        int i = 1;\n        int z = 0;\n        \n        while (i < N + k - 1) {\n            int current = i;\n            int previous = i - 1;\n            z = i;\n\n            if (current >= N) {\n                current -= N;\n                z++;\n            }\n            \n            if (previous >= N) {\n                previous -= N;\n                z = 0;\n            }\n\n            if (colors[current] != colors[previous]) {\n                ++alternatingLength;\n                z--;\n            } else {\n                alternatingLength = 1;\n                z++;\n            }\n\n            if (alternatingLength >= k) {\n                ++count;\n                z = 0;\n            }\n\n            ++i;\n        }\n        \n        return count;\n    }\n    \n    public int numberOfAlternatingGroups(int[] colors, int k) {\n         \n        int count = 0;\n\n        if (k == 1) {\n            return colors.length;\n        }\n\n        count = solve(colors,  k, count, 1, colors.length);\n\n        return count;\n    }\n}",
    "submit_ts": "1720280334",
    "subm_id": "1311785511"
}