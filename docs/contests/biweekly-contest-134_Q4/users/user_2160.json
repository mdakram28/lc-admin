{
    "username": "211220058",
    "submission": "auto fastio=[]()  {\n    std::ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return nullptr;\n}();\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int target) {\n        int n = nums.size();\n        long long count = 0;\n        \n        std::unordered_map<long long, long long> previousResults;\n        \n        int i = 0;\n        while (i < n) {\n            if (nums[i] == target) {\n                ++count;\n            }\n            \n            std::unordered_map<long long, long long> currentResults;\n            currentResults[nums[i]] = 1;\n            \n            processPreviousResults(previousResults, currentResults, nums[i], target, count);\n            \n            previousResults = currentResults;\n            \n            i++;\n        }\n        \n        return count;\n    }\n    \nprivate:\n    void processPreviousResults(std::unordered_map<long long, long long>& prevResults, \n                                std::unordered_map<long long, long long>& currResults, \n                                int num, int target, long long& count) {\n        for (auto& [val, freq] : prevResults) {\n            long long newAndResult = val & num;\n            if (newAndResult == target) {\n                count += freq;\n            }\n            currResults[newAndResult] += freq;\n        }\n    }\n};\n",
    "submit_ts": "1720278871",
    "subm_id": "1311727800"
}