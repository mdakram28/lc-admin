{
    "username": "colicon",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1e5;\n\nint n;\nint a[MAXN];\nint st[20][MAXN];\n\nint ran(int l, int r) {\n    int d = r-l ? __lg(r-l) : 0;\n    return st[d][l] & st[d][r - (1 << d) + 1];\n}\n\nvoid precompute_sparse_table() {\n    for (int i = 0; i < n; i++) {\n        st[0][i] = a[i];\n    }\n    for (int i = 1; i < 20; i++) {\n        for (int j = 0; j + (1 << i) <= n; j++) {\n            st[i][j] = ran(j, j + (1 << i)-1);\n        }\n    }\n}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& b, int k) {\n        long long ans = 0;\n\n        n = size(b);\n        for (int i = 0; i < n; i++) {\n            a[i] = b[i];\n        }\n        precompute_sparse_table();\n\n        for (int i = 0; i < n; i++) {\n            int l = i, r = n;\n            while (l != r) {\n                int m = (l + r) / 2;\n\n                if (ran(i, m) <= k) {\n                    r = m;\n                }\n                else {\n                    l = m+1;\n                }\n            }\n\n            int s = r;\n\n            l = i-1, r = n-1;\n            while (l != r) {\n                int m = (l + r + 1) / 2;\n\n                if (ran(i, m) >= k) {\n                    l = m;\n                }\n                else {\n                    r = m-1;\n                }\n            }\n\n            int e = r;\n\n            if (s <= e) {\n                ans += e - s + 1;\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720277950",
    "subm_id": "1311687518"
}