{
    "username": "cheben",
    "submission": "#ifdef __LOCAL_DEBUG__\n#include <bits/stdc++.h>\nusing namespace std;\n#endif\n\ntypedef vector<int32_t> vi;\ntypedef vector<uint32_t> vu;\ntypedef vector<int64_t> vll;\ntypedef vector<uint64_t> vull;\ntypedef vector<double> vd;\ntypedef vector<vi> vvi;\ntypedef vector<vu> vvu;\ntypedef vector<vvi> vvvi;\ntypedef vector<vvu> vvvu;\ntypedef vector<vll> vvll;\ntypedef vector<vull> vvull;\ntypedef vector<vvll> vvvll;\ntypedef vector<vvull> vvvull;\n\n#define FOR(i, ed) for (int i = 0; i < (ed); ++i)\n#define FOR1(i, st, ed) for (int i = (st); i < (ed); ++i)\n#define FORR(i, ed) for (int i = (ed); i >= 0; --i)\n#define FORR1(i, ed, st) for (int i = (ed); i >= (st); --i)\n#define REP(i, st, ed, ad) for (int i = (st); i != (ed); i += (ad))\n\n#define PRINT1\n\n#ifdef PRINT1\n#define LOG_INFO(fmt, args...)                                \\\n    do {                                                      \\\n        printf(\"line:%d, func:%s, \", __LINE__, __FUNCTION__); \\\n        printf(fmt, ##args);                                  \\\n        printf(\"\\n\");                                         \\\n    } while (false)\n\n#else\n#define LOG_INFO(fmt, ...)\n#endif\n\n// \u8fd9\u91cc\u5199\u9898\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int res = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int cnt1 = 0;\n                if (grid[i][j]) {\n                    cnt1++;\n                }\n                if (grid[m - 1 -i][j]) {\n                    cnt1++;\n                }\n                if (grid[i][n-1-j]) {\n                    cnt1++;\n                }\n                if (grid[m - 1 -i][n-1-j]) {\n                    cnt1++;\n                }\n                res+=min(cnt1, 4-cnt1);\n            }\n        }\n        int cnt11 = 0, cnt00 = 0, cnt01 = 0;\n        if (m & 1) {\n            int i = m / 2;\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[i][j] == 0 && grid[i][n-1-j] == 0) {\n                    cnt00++;\n                } else if (grid[i][j] == 1 && grid[i][n-1-j] == 1) {\n                    cnt11++;\n                } else {\n                    cnt01++;\n                }\n            }\n        }\n        if (n & 1) {\n            int j = n / 2;\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][j] == 0 && grid[m - 1 - i][j] == 0) {\n                    cnt00++;\n                } else if (grid[i][j] == 1 && grid[m - 1 - i][j] == 1) {\n                    cnt11++;\n                } else {\n                    cnt01++;\n                }\n            }\n        }\n        if (cnt01 != 0) {\n            res += cnt01;\n        } else if (cnt11 & 1) {\n            res += 2;\n        }\n        if ((m & 1) && (n &1)) {\n            res += grid[m/2][n/2];\n        }\n        return res;\n    }\n};\n\n// \u5199\u9898\u7ed3\u675f\n\n#ifdef __LOCAL_DEBUG__\n\nint main() {\n    Solution sol;\n    vector<int> arr;\n    vector<vector<int>> arr2 = {{0,1},{0,1},{0,0}};\n    sol.minFlips(arr2);\n    return 0;\n}\n\n#endif",
    "submit_ts": "1722696926",
    "subm_id": "552263557"
}