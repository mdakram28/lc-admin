{
    "username": "hungry-swirleshgv",
    "submission": "class Solution:\n    def minFlips(self, g: List[List[int]]) -> int:\n        m, n = len(g), len(g[0])\n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                cnt = g[i][j] + g[i][n - 1 - j] + g[m - 1 - i][j] + g[m - 1 - i][n - 1 - j]\n                ans += min(cnt, 4 - cnt)\n        # print(ans)\n        if m % 2 == 0 and n % 2 == 0:\n            return ans\n\n        double = once = 0\n        if m % 2 == 1:\n            for j in range(n // 2):\n                if g[m // 2][j] == g[m // 2][n - 1 - j] == 1:\n                    double += 1\n                elif g[m // 2][j] != g[m // 2][n - 1 - j]:\n                    once += 1\n        if n % 2 == 1:\n            for i in range(m // 2):\n                if g[i][n // 2] == g[m - 1 - i][n // 2] == 1:\n                    double += 1\n                elif g[i][n // 2] != g[m - 1 - i][n // 2]:\n                    once += 1\n        \n        # print(double, once)\n        if m % 2 == 1 and n % 2 == 1:\n            ans += (g[m // 2][n // 2] == 1)\n        ans += once\n        if double % 2 == 1 and once == 0:\n            ans += 2\n        \n        return ans",
    "submit_ts": "1722697098",
    "subm_id": "552264451"
}