{
    "username": "codeitmanminder",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) \n    {\n        int summation = 0, index = 0;\n        \n        while(index<n)\n        {\n            summation += index;\n            index += 10;\n        }\n            \n        map<int,int> firstMap;\n        \n        for(int i=0;i<requirements.size();i++)\n        {\n            summation = summation - requirements[i][1];\n            index = index + requirements[i][0];\n            firstMap[requirements[i][0]+1] = requirements[i][1];\n            \n        }\n        \n        int dom = 1e9 + 7;\n        \n        vector<vector<long>> dynaprog(n+1, vector<long>(500+1, 0));\n        \n        dynaprog[0][0] = 1;\n        \n        for(int xyzlen=1; xyzlen<=n; xyzlen++)\n        {\n            summation = summation + xyzlen;\n            \n            for(int xyzcnt=0; xyzcnt<=400; xyzcnt++)\n            {\n                for(int newpos=0; newpos<xyzlen; newpos++)\n                {\n                    int previnvcnt = xyzcnt - newpos;\n                    \n                    if(previnvcnt>=0)\n                        dynaprog[xyzlen][xyzcnt] = (dynaprog[xyzlen][xyzcnt] + dynaprog[xyzlen-1][previnvcnt]) % dom;\n                    \n                }\n            }\n            \n            \n            if(firstMap.count(xyzlen)>0)\n            {\n                int tarinvcnt = firstMap[xyzlen];\n                \n                for(int invcnt=0; invcnt <= 400; invcnt++)\n                {\n                    if(invcnt != tarinvcnt)\n                    {\n                        dynaprog[xyzlen][invcnt] = 0;\n                    }\n                }\n            }\n        }\n        \n        long ansurr = 0;\n        \n        for(long cnttt : dynaprog[n])\n        {\n            ansurr = (ansurr+cnttt)% dom;\n        }\n        \n        return ansurr;\n        \n    }\n};",
    "submit_ts": "1719071961",
    "subm_id": "1296858038"
}