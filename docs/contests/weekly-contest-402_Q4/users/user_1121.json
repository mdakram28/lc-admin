{
    "username": "Prajjawal_Agrahari",
    "submission": "class Solution {\npublic:\n    \n    void update(int i, int add, vector<int> &fen, int N)\n    {\n        while(i <= N)\n        {\n            fen[i] += add;\n            i += (i & (-i));\n        }\n    }\n\n    int sum(int i, vector<int> &fen, int N)\n    {\n        int s = 0;\n        while(i > 0)\n        {\n            s += fen[i];\n            i -= (i & (-i));\n        }\n        return s;\n    }\n\n    int rangeSum(int l, int r, vector<int> &fen, int N)\n    {\n        return sum(r, fen, N) - sum(l - 1, fen, N);\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) \n    {\n        int n = nums.size();\n        vector<int> fen(n + 1); //\n        // set<int> st;\n        for(int i = 1; i < (n-1); ++i)\n        {\n            if((nums[i] > nums[i-1]) && (nums[i] > nums[i+1]))\n            {\n                update(i+1, 1, fen, n); //\n                // st.insert(i);\n            }\n        }\n        \n        auto isPeak = [&](int i, vector<int>& nums) //\n        {\n            if((i <= 0) || (i >= (n-1)))\n            {\n                return false;\n            }\n            if((nums[i] > nums[i-1]) && (nums[i] > nums[i+1]))\n            {\n                return true;\n            }\n            return false;\n        };\n        \n        vector<int> answer;\n        for(auto &el : queries)\n        {\n            int x = el[0];\n            int y = el[1];\n            int z = el[2];\n            if(x == 1)\n            {\n                if((z-y+1) <= 2)\n                {\n                    answer.push_back(0);\n                    continue;\n                }\n                else\n                {\n                    answer.push_back(rangeSum(y+2, z, fen, n));\n                }\n            }\n            else\n            {\n               if(isPeak(y, nums))\n               {\n                   update(y+1, -1, fen, n); \n               }\n               if(isPeak(y-1, nums))\n               {\n                   update(y, -1, fen, n); \n               }\n               if(isPeak(y+1, nums))\n               {\n                   update(y+2, -1, fen, n); \n               }\n               nums[y] = z;\n               if(isPeak(y, nums))\n               {\n                   update(y+1, 1, fen, n); \n               }\n               if(isPeak(y-1, nums))\n               {\n                   update(y, 1, fen, n); \n               }\n               if(isPeak(y+1, nums))\n               {\n                   update(y+2, 1, fen, n); \n               }\n            }\n        }\n        return answer;\n    }\n};",
    "submit_ts": 1718508391.0
}