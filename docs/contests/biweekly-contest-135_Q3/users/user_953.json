{
    "username": "suraj_0491",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& values, int kappa) {\n         int alpha = 0;\n        vector<int> vec;           \n        map<int, vector<int>> mp; \n       // int beta = 0;\n        while (alpha < values.size() / 2) {\n             int gamma = values[values.size() - alpha - 1]; \n             int beta = values[alpha];                     \n            // g = value[value.size() - alpha - 1]; \n            // Corresponding element from the end\n             int zeta = max({beta, gamma, kappa - beta, kappa - gamma}); // Maximum of various values\n             int delta = abs(beta - gamma);            \n            // int zeta = max({beta, gamma, kappa - beta, kappa - gamma}); // Maximum of various values\n            mp[delta].push_back(zeta);  \n            vec.push_back(zeta);       \n            alpha++;\n        }\n\n        int result = values.size(); \n        sort(vec.begin(), vec.end());  \n\n      \n        auto it = mp.begin();\n        while (it != mp.end()) {\n            \n            int delta = it->first;  // Current difference\n            int theta = lower_bound(vec.begin(), vec.end(), delta) - vec.begin();  // Binary search for 'delta'\n            theta = theta * 2 + (values.size() / 2 - theta);  // Calculate initial 'theta' value\n\n            // Adjust 'theta' based on the 'zeta' values\n            auto vecIt = it->second.begin();\n           // @loop factor\n            while (vecIt != it->second.end()) {\n                int zeta = *vecIt;\n                if (zeta < delta) {\n                    theta -= 2; \n                    // Decrease 'theta' by 2 if 'zeta' is less than 'delta'\n                } else {\n                    theta -= 1;  \n                }\n                // count of vec++;\n                vecIt++;\n            }\n\n            result = min(result, theta);  // Update the minimum result\n            it++;\n        }\n\n        return result;  \n    }\n};\n",
    "submit_ts": "1721489287",
    "subm_id": "1327448732"
}