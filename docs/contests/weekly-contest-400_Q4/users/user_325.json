{
    "username": "qb_2008",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        return bsearch(nums, 0, nums.size() - 1, k);\n    }\n    \n    int bsearch(const vector<int>& nums, int left, int right, int k) {\n        if (left == right) {\n            return abs(k - nums[left]);\n        }\n        int mid = (left + right) / 2;\n        int a = bsearch(nums, left, mid, k);\n        int b = bsearch(nums, mid + 1, right, k);\n        int res = min(a, b);\n        vector<int> left_candidates;\n        vector<int> right_candidates;\n        int value = nums[mid];\n        left_candidates.push_back(value);\n        for (int i = mid - 1; i >= left && value > k; i--) {\n            value &= nums[i];\n            if (value != left_candidates.back()) {\n                left_candidates.push_back(value);\n            }\n        }\n        value = nums[mid + 1];\n        right_candidates.push_back(value);\n        for (int i = mid + 2; i <= right && value > k; i++) {\n            value &= nums[i];\n            if (value != right_candidates.back()) {\n                right_candidates.push_back(value);\n            }\n        }\n        int min_mix = get_min_mix(left_candidates, right_candidates, k);\n        return min(res, min_mix);\n    }\n    \n    int get_min_mix(vector<int>& s1, vector<int>& s2, int k) {\n        int min_mix = INT_MAX;\n        for (int a : s1) {\n            for (int b : s2) {\n                int res = a & b;\n                min_mix = min(min_mix, abs(res - k));\n                if (res <= k) {\n                    break;\n                }\n            }\n        }\n        return min_mix;\n    }\n};",
    "submit_ts": 1717298074.0
}