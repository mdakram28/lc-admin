{
    "username": "yuzining",
    "submission": "\n//c\n#ifndef _GLIBCXX_NO_ASSERT\n#include<cassert>\n#endif\n#include<cctype>\n#include<cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n \n#if __cplusplus >= 201103L\n#include <ccomplex>\n#include <cfenv>\n#include <cinttypes>\n#include <cstdalign>\n#include <cstdbool>\n#include <cstdint>\n#include <ctgmath>\n#include <cwchar>\n#include <cwctype>\n#endif\n \n// C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n \n#if __cplusplus >= 201103L\n#include <array>\n#include <atomic>\n#include <chrono>\n#include <condition_variable>\n#include <forward_list>\n#include <future>\n#include <initializer_list>\n#include <mutex>\n#include <random>\n#include <ratio>\n#include <regex>\n#include <scoped_allocator>\n#include <system_error>\n#include <thread>\n#include <tuple>\n#include <typeindex>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n#endif\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for (int i1 = 0, i2 = n - 1; i1 < i2; i1++, i2--) {\n            for (int j1 = 0, j2 = m - 1; j1 < j2; j1++, j2--) {\n                int a = grid[i1][j1];\n                int b = grid[i1][j2];\n                int c = grid[i2][j1];\n                int d = grid[i2][j2];\n                int one = 0, zero = 0;\n                if (a == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                if (b == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                if (c == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                if (d == 1) {\n                    one++;\n                } else {\n                    zero++;\n                }\n                ans += std::min(4 - zero, 4 - one);\n            }\n        }\n        \n        int zero2 = 0;\n        int zero_one = 0;\n        int one2 = 0;\n\n        if (n % 2 == 1) {\n            for (int i1 = 0, i2 = m - 1; i1 < i2; i1++, i2--) {\n                if (grid[n / 2][i1] == 1 && grid[n / 2][i2] == 1) {\n                    one2++;\n                } else if (grid[n / 2][i1] == 0 && grid[n / 2][i2] == 0) {\n                    zero2++;\n                } else {\n                    zero_one++;\n                }\n            }\n        }\n\n        if (m % 2 == 1) {\n            for (int i1 = 0, i2 = n - 1; i1 < i2; i1++, i2--) {\n                if (grid[i1][m / 2] == 1 && grid[i2][m / 2] == 1) {\n                    one2++;\n                } else if (grid[i1][m / 2] == 0 && grid[i2][m / 2] == 0) {\n                    zero2++;\n                } else {\n                    zero_one++;\n                }\n            }\n        }\n\n        if (zero_one == 0 && one2 % 2 == 1) {\n            ans += 2;\n        } else {\n            ans += zero_one;\n        }\n\n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) {\n            ans++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722696623",
    "subm_id": "552261946"
}