{
    "username": "alxwen711",
    "submission": "class Node:\n    def __init__(self):\n        self.edges = list()\n\nclass Solution:\n    # determine if there is a chain of circles that touch each other such that certain walls are connected?\n    def canReachCorner(self, x: int, y: int, circles: List[List[int]]) -> bool:\n        # remove all circles outside of the rectangle\n        ar = list()\n        nodes = list()\n        for c in circles:\n            if c[0]**2+c[1]**2 <= 0: return False # in start point\n            if c[0] >= x and c[1] >= y:\n                if (c[0]-x)**2+(c[1]-y)**2 <= c[2]**2: return False # in end point\n            xextend = max(0,c[0]-x)\n            yextend = max(0,c[1]-y)\n            ar.append((c[0],c[1],c[2],abs(c[1]-y)**2+xextend**2 <= c[2]**2,c[1]**2+xextend**2 <= c[2]**2,c[0]**2+yextend**2 <= c[2]**2,abs(c[0]-x)**2+yextend**2 <= c[2]**2))\n            nodes.append(Node())\n        for a in range(len(nodes)-1):\n            for b in range(a+1,len(nodes)):\n                if abs(ar[a][0]-ar[b][0])**2 + abs(ar[a][1]-ar[b][1])**2 <= (ar[a][2]+ar[b][2])**2:\n                    nodes[b].edges.append(a)\n                    nodes[a].edges.append(b)\n        hit = [0]*len(nodes)\n        for i in range(len(nodes)):\n            if hit[i] == 0:\n                hit[i] = 1\n                q = [i]\n                cases = [ar[i][3],ar[i][4],ar[i][5],ar[i][6]]\n                while len(q) != 0:\n                    v = q.pop()\n                    for e in nodes[v].edges:\n                        if hit[e] == 0:\n                            hit[e] = 1\n                            cases = [cases[0] | ar[e][3],cases[1] | ar[e][4],cases[2] | ar[e][5],cases[3] | ar[e][6]]\n                            q.append(e)\n                if cases[0] and cases[1]: return False\n                if cases[2] and cases[3]: return False\n                if cases[0] and cases[3]: return False\n                if cases[1] and cases[2]: return False\n        return True    \n                            \n                            \n                            \n                            ",
    "submit_ts": "1722138229",
    "subm_id": "1335785480"
}