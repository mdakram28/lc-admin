{
    "username": "aaron1april",
    "submission": "\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n\n        count = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                points = (\n                    grid[i][j]\n                    + grid[m - i - 1][j]\n                    + grid[i][n - j - 1]\n                    + grid[m - i - 1][n - j - 1]\n                )\n                if points == 1 or points == 3:\n                    count += 1\n                elif points == 2:\n                    count += 2\n\n        middle_row = None if m % 2 == 0 else m // 2\n        middle_col = None if n % 2 == 0 else n // 2\n\n        if middle_row is not None and middle_col is not None:\n            # flip the center cell if one\n            count += grid[middle_row][middle_col]\n\n        if middle_row is not None or middle_col is not None:\n            middle_flips = 0\n            middle_ones = 0  # except center\n\n            if middle_row is not None:\n                i = middle_row\n                for j in range(n // 2):\n                    if grid[i][j] != grid[i][n - j - 1]:\n                        middle_flips += 1\n\n                    middle_ones += grid[i][j] + grid[i][n - j - 1]\n\n            if middle_col is not None:\n                j = middle_col\n                for i in range(m // 2):\n                    # print(m, n, f\"[{i}][{j}]\", f\"[{m - i - 1}][{j}]\")\n                    if grid[i][j] != grid[m - i - 1][j]:\n                        middle_flips += 1\n                    middle_ones += grid[i][j] + grid[m - i - 1][j]\n\n            final_middle_ones = middle_ones + middle_flips\n            if final_middle_ones % 4 == 0:\n                count += middle_flips\n            elif final_middle_ones % 4 == 2:\n                if middle_flips >= 1:\n                    # choose flip one to zero instead of zero to one\n                    count += middle_flips\n                else:\n                    count += 2\n\n        return count",
    "submit_ts": "1722698829",
    "subm_id": "1343193166"
}