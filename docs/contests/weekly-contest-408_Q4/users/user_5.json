{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    vector<int> g[1055];\n    int par[1055];\n    \n    int fin(int x) {\n        if (par[x] == x) return x;\n        return par[x] = fin(par[x]);\n    }\n    void add_edge(int v, int u) {\n        v = fin(v);\n        u = fin(u);\n        \n        if (v == u) return;\n        par[v] = u;\n    }\n    bool touch(const vector<int> &x, const vector<int> &y) {\n        long long x1 = x[0];\n        long long x2 = y[0];\n        long long y1 = x[1];\n        long long y2 = y[1];\n        long long r1 = x[2];\n        long long r2 = y[2];\n        \n        return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) <= (r1 + r2) * (r1 + r2);\n    }\n    bool same(int v, int u) {\n        return fin(v) == fin(u);\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        \n        for (int i = 0; i <= n + 4; i++) {\n            par[i] = i;\n        }\n        \n        for (int i = 0; i < n; i++) {\n            const auto& vec = circles[i];\n            int x = vec[0];\n            int y = vec[1];\n            int r = vec[2];\n            \n            if (x - r <= 0) {\n                add_edge(n, i);\n            }\n            if (x + r >= X) {\n                add_edge(n + 1, i);\n            }\n            if (y - r <= 0) {\n                add_edge(n + 2, i);\n            } \n            if (y + r >= Y) {\n                add_edge(n + 3, i);\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (touch(circles[i], circles[j])) {\n                    add_edge(i, j);\n                }\n            }\n        }\n        \n        return !(same(n, n + 1) || same(n, n + 2) || same(n + 3, n + 1) || same(n + 3, n + 2));\n    }\n};",
    "submit_ts": "1722135600",
    "subm_id": "1335707272"
}