{
    "username": "democoffee",
    "submission": "class Solution:\n    def minimumArea(self, grid: list[list[int]], x1, y1, x2, y2) -> int:\n        rmn, rmx = x2 + 1, x1 - 1\n        cmn, cmx = y2 + 1, y1 - 1\n\n        cnt = 0\n        for i in range(x1, x2 + 1):\n            for j in range(y1, y2 + 1):\n                if grid[i][j] != 1:\n                    continue\n                cnt += 1\n                rmn = min(rmn, i)\n                rmx = max(rmx, i)\n                cmn = min(cmn, j)\n                cmx = max(cmx, j)\n\n        return (rmx - rmn + 1) * (cmx - cmn + 1) if cnt > 0 else 0\n\n    def find(self, grid: list[list[int]]) -> int:\n        rsz, csz = len(grid), len(grid[0])\n\n        ans = -1\n        for i in range(rsz - 1):\n            if (st := self.minimumArea(grid, 0, 0, i, csz-1)) <= 0:\n                continue\n            if (sb := self.minimumArea(grid, i+1, 0, rsz-1, csz-1)) <= 0:\n                continue\n\n            for j in range(csz - 1):\n                if (sl := self.minimumArea(grid, 0, 0, i, j)) <= 0:\n                    continue\n                if (sr := self.minimumArea(grid, 0, j+1, i, csz-1)) <= 0:\n                    continue\n\n                v = sl + sr + sb\n                if ans == -1 or v < ans:\n                    ans = v\n\n            for j in range(csz - 1):\n                if (sl := self.minimumArea(grid, i+1, 0, rsz-1, j)) <= 0:\n                    continue\n                if (sr := self.minimumArea(grid, i+1, j+1, rsz-1, csz-1)) <= 0:\n                    continue\n\n                v = sl + sr + st\n                if ans == -1 or v < ans:\n                    ans = v\n\n            for j in range(i):\n                if (stt := self.minimumArea(grid, 0, 0, j, csz-1)) <= 0:\n                    continue\n                if (stb := self.minimumArea(grid, j+1, 0, i, csz-1)) <= 0:\n                    continue\n\n                v = stt + stb + sb\n                if ans == -1 or v < ans:\n                    ans = v\n\n            for j in range(i+1, rsz-1):\n                if (sbt := self.minimumArea(grid, i+1, 0, j, csz-1)) <= 0:\n                    continue\n                if (sbb := self.minimumArea(grid, j+1, 0, rsz-1, csz-1)) <= 0:\n                    continue\n\n                v = sbt + sbb + st\n                if ans == -1 or v < ans:\n                    ans = v\n\n        return ans\n\n    def minimumSum(self, grid: list[list[int]]) -> int:\n        ans1 = self.find(grid)\n        tgrid = [list(r) for r in zip(*grid)]\n        ans2 = self.find(tgrid)\n\n        if ans2 == -1:\n            return ans1\n        elif ans1 == -1:\n            return ans2\n        return min(ans1, ans2)",
    "submit_ts": 1719112823.0
}