{
    "username": "Sayan_244",
    "submission": "#define ll int\n#define endl \"\\n\"\n#define pb push_back\n#define siz(a) int((a).size())\n\nvector <array <int, 26>> trie;\nvector <bool> ending;\nvector <int> cost;\nll cnt;\n \nvoid insert(string &s, ll cst) {\n  ll cur = 0;\n  for(ll i = 0; i < (int)s.length(); i++) {\n    if (trie[cur][s[i] - 'a'] == -1) {\n      cnt += 1;\n      trie[cur][s[i] - 'a'] = cnt;\n      trie.pb(array <int, 26> ());\n      fill(trie[cnt].begin(), trie[cnt].end(), -1);\n      ending.pb(false);\n      cost.pb(1e9l);\n    }\n    cur = trie[cur][s[i] - 'a'];\n  }\n  ending[cur] = true;\n  cost[cur] = min(cst, cost[cur]);\n  //cout<<cur<<endl;\n}\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie.resize(1, array <int, 26> ());\n        ending.resize(1);\n        cost.resize(1, 1e9l);\n        \n        fill(trie[0].begin(), trie[0].end(), -1);\n        int i = 0;\n        for(auto & mem : words) {\n            reverse(mem.begin(), mem.end());\n            //cout<<mem<<endl;\n            insert(mem, costs[i]);\n            i += 1;\n        }\n        int n = target.length();\n        vector <int> dp(n + 1, 1e9l);\n        dp[0] = 0;\n        \n        for(int i = 1; i <= n; i++) {\n            ll cur = 0;\n            for(int j = i; j >= 1; j--) {\n                if (trie[cur][target[j - 1] - 'a'] != -1) {\n                    cur = trie[cur][target[j - 1] - 'a'];\n                    //cout<<cur<<\" \"<<i<<\" \"<<j<<endl;\n                    if (ending[cur]) {\n                        dp[i] = min(dp[i], cost[cur] + dp[j - 1]);\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        \n        trie = {};\n        ending = {};\n        cost = {};\n        cnt = 0;\n        if (dp[n] == 1e9l) {\n            return -1;\n        }\n        \n        return dp[n];\n    }\n};",
    "submit_ts": "1720322384",
    "subm_id": "1312348465"
}