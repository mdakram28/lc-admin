{
    "username": "DeepakRaturi",
    "submission": "class Solution {\npublic:\nint longestDiam(vector<int> adj[],int u,int parent,int &ans){\n    \n    int max1=0;int max2=0;\n    for(auto v:adj[u]){\n        if(v!=parent){\n            int height=longestDiam(adj,v,u,ans);\n            if(height>=max1){\n                max2=max1;\n                max1=height;\n            }\n            else if(height>max2){\n                max2=height;\n            }\n        }\n    }\n    ans=max(ans,max1+max2);\n    return max1+1;\n}\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<int> adj1[n];vector<int> adj2[m];\n        for(int i=0;i<n-1;i++){\n            int u=edges1[i][0];int v=edges1[i][1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n        for(int i=0;i<m-1;i++){\n            int u=edges2[i][0];int v=edges2[i][1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n        int len1=0;\n        longestDiam(adj1,0,-1,len1);\n        int len2=0;\n        longestDiam(adj2,0,-1,len2);\n        // if()\n        // cout<<len1<<\" \"<<len2<<endl;\n        return max(len1,max(int(ceil(len1/2.0)+ceil(len2/2.0)+1),len2));\n    }\n};",
    "submit_ts": "1719719051",
    "subm_id": "1304432563"
}