{
    "username": "Belgutei0323",
    "submission": "class Solution {\npublic:\n    int level;\n    vector<int> v[30];\n    int dfs(int l, int r, int k, int x) {\n        int y = (1 << (level - k)) * x;\n        int z = (1 << (level - k)) * (x + 1) - 1;\n        if (l <= y && z <= r) return v[k][x];\n        if (z < l || y > r || k == level) return INT_MAX;\n        return dfs(l, r, k + 1, x * 2) & dfs(l, r, k + 1, x * 2 + 1);\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        for (int i = 0; i < 30; i++) {\n            if ((1 << i) >= nums.size()) {\n                level = i;\n                break;\n            }\n        }\n        for (int i = 0; i < nums.size(); i++) {\n            v[level].push_back(nums[i]);\n        }\n        for (int i = nums.size(); i < (1 << level); i++) {\n            v[level].push_back(0);\n        }\n        //\n        for (int i = level - 1; i >= 0; i--) {\n            for (int j = 1; j < v[i + 1].size(); j += 2) {\n                v[i].push_back(v[i + 1][j] & v[i + 1][j - 1]);\n            }\n        }\n        // for (int i = 0; i <= level; i++) {\n        //     for (auto x: v[i]) {\n        //         cout << x << ' ';\n        //     }\n        //     cout << '\\n';\n        // }\n        //\n        int ans = INT_MAX;\n        for (int i = 0; i < nums.size(); i++) {\n            ans = min(ans, abs(k - nums[i]));\n            if (i == 0) continue;\n            // if (i != 3) continue;\n            int l = 0;\n            int r = i - 1;\n            while (l < r) {\n                int mid = (l + r + 1) / 2;\n                // mid -> i\n                int ret = dfs(mid, i, 0, 0);\n                // cout << mid << ' ' << i << ' ' << ret << '\\n';\n                //\n                if (ret <= k) {\n                    l = mid;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            // cout << l << \": \" << l << '\\n';\n            //\n            ans = min(ans, abs(k - dfs(l, i, 0, 0)));\n            if (l > 0) ans = min(ans, abs(k - dfs(l - 1, i, 0, 0)));\n            if (l < i) ans = min(ans, abs(k - dfs(l + 1, i, 0, 0)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298503.0
}