{
    "username": "Ani_S",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long diff[] = new long[n];\n        \n        for(int i = 0; i < n; i++) {\n            diff[i] = (1l * target[i]) - (1l * nums[i]);\n        }\n        \n        long prev = diff[0];\n        long ans = Math.abs(prev);\n        \n        for(int i = 1; i < nums.length; i++) {\n            long curr = diff[i];\n            \n            if(prev >= 0 && curr >= 0) {\n                if(prev < curr) {\n                    ans += (curr - prev);\n                    prev = curr;\n                } else {\n                    prev = curr;\n                }\n            } else if(prev < 0 && curr < 0) {\n                if(prev <= curr) {\n                    prev = curr;\n                } else {\n                    ans += (prev - curr);\n                    prev = curr;\n                }\n            } else {\n                ans += Math.abs(curr);\n                prev = curr;\n            }\n        }\n        \n        return ans;\n    }\n}",
    "submit_ts": "1721531913",
    "subm_id": "1327973047"
}