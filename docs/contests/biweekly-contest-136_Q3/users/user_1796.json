{
    "username": "saif_ali_siddiqui07F",
    "submission": "class Solution {\npublic:\n    \n    \n    int minFlips(vector<vector<int>>& grid) {\n     int rows = grid.size(), cols = grid[0].size();\n    int totalFlips = 0;\n    if (rows % 2 == 1 && cols % 2 == 1) {\n        if (grid[rows / 2][cols / 2] == 1) {\n            totalFlips += 1;\n        }\n    }\n    vector<int> middleRowColFlips(3, 0);\n    if (rows % 2 == 1) {\n        int left = 0, right = cols - 1;\n        while (left < right) {\n            int sum = grid[rows / 2][left] + grid[rows / 2][right];\n            middleRowColFlips[sum] += 1;\n            left += 1;\n            right -= 1;\n        }\n    }\n    if (cols % 2 == 1) {\n        int top = 0, bottom = rows - 1;\n        while (top < bottom) {\n            int sum = grid[top][cols / 2] + grid[bottom][cols / 2];\n            middleRowColFlips[sum] += 1;\n            top += 1;\n            bottom -= 1;\n        }\n    }\n    if (middleRowColFlips[2] % 2 == 1) {\n        if (middleRowColFlips[1] > 0) {\n            totalFlips += middleRowColFlips[1];\n        } else {\n            totalFlips += 2;\n        }\n    } else {\n        totalFlips += middleRowColFlips[1];\n    }\n    for (int i = 0; i < rows / 2; ++i) {\n        for (int j = 0; j < cols / 2; ++j) {\n            int topLeft = grid[i][j];\n            int bottomLeft = grid[rows - 1 - i][j];\n            int topRight = grid[i][cols - 1 - j];\n            int bottomRight = grid[rows - 1 - i][cols - 1 - j];\n            int cellSum = topLeft + bottomLeft + topRight + bottomRight;\n            if (cellSum != 0 && cellSum != 4) {\n                totalFlips += min(cellSum, 4 - cellSum);\n            }\n        }\n    }\n    return totalFlips;\n    }\n};",
    "submit_ts": "1722699955",
    "subm_id": "1343227290"
}