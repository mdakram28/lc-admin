{
    "username": "tinnamchoi",
    "submission": "#define all(x) (x).begin(), (x).end()\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        // cout << endl << \"new\" << endl;\n        int n = points.size();\n        vector<vector<int>> sum(n), diff(n);\n        for (int i = 0; i < n; ++i) {\n            sum[i] = {points[i][0] + points[i][1], i};\n            diff[i] = {points[i][0] - points[i][1], i};\n        }\n        sort(all(sum));\n        sort(all(diff));\n        // cout << \"sum: \" << endl;\n        // for (auto & v : sum) cout << v[0] << \" \" << v[1] << endl;\n        // cout << \"diff: \" << endl;\n        // for (auto & v : diff) cout << v[0] << \" \" << v[1] << endl;\n        vector<int> candidates = {sum.front()[1], sum.back()[1], diff.front()[1], diff.back()[1]};\n        int ans = 2e9;\n        for (int cand : candidates) {\n            int curr1 = 0, curr2 = 0;\n            // if (sum.back()[1] == cand) curr += sum.back()[0]; else \n            curr1 += sum.back()[1] == cand ? sum[n - 2][0] : sum.back()[0];\n            curr1 -= sum.front()[1] == cand ? sum[1][0] : sum.front()[0];\n            curr2 += diff.back()[1] == cand ? diff[n - 2][0] : diff.back()[0];\n            curr2 -= diff.front()[1] == cand ? diff[1][0] : diff.front()[0];\n            ans = min(ans, max(curr1, curr2));\n        }\n        return ans;\n    }\n};"
}