{
    "username": "lcs2022015",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int n = c.size();\n        vector<int> newCol(n + k - 1);\n\n        int i = 0;\n        while (i < n) {\n            newCol[i] = c[i];\n            ++i;\n        }\n        \n        int j = 0;\n        while (j < k - 1) {\n            newCol[n + j] = c[j];\n            ++j;\n        }\n        \n        int res = 0;\n        int N = 1;\n        int idx = 1;\n        while (idx < newCol.size()) {\n            if (newCol[idx] != newCol[idx - 1]) {\n                ++N;\n            } else {\n                N = 1;\n            }\n            if (N >= k) {\n                ++res;\n            }\n            ++idx;\n        }\n        \n        return res;\n    }\n};\n",
    "submit_ts": "1720281414",
    "subm_id": "1311824265"
}