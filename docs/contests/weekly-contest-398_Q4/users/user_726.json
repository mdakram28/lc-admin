{
    "username": "Dolfun",
    "submission": "class Solution {\npublic:\n  int waysToReachStair(int k) {\n    map<int, int> mp;\n    \n    mp[4] = 1;\n    mp[5] = 4;\n    mp[6] = 6;\n    mp[7] = 4;\n    mp[8] = 1;\n    \n    for (int p = 4; p <= 30; ++p) {\n      for (int i = 0; i < p + 2; ++i) {\n        int p2 = (1 << p);\n        mp[p2 - i] += mp[p2 / 2 - i] + mp[p2 / 2 - i + 1];\n      }\n    }\n    \n    mp[0] = 2;\n    mp[1] = 4;\n    mp[2] = 4;\n    mp[3] = 3;\n    mp[4] = 2;\n    \n    return mp[k];\n  }\n  \n  int waysToReachStair2(int k) {\n    f(k);\n    return cnt;\n  }\nprivate:\n  using ll = long long;\n  int cnt = 0;\n  \n  void f(ll k, ll p = 1, ll jmp = 0, bool dn = false) {\n    if (p > k + 1) return;\n    if (p == k) ++cnt;\n    \n    f(k, p + (1LL << jmp), jmp + 1, false);\n    \n    if (p != 0 && !dn) {\n      f(k, p - 1, jmp, true);\n    }\n  }\n};",
    "submit_ts": 1716089408.0
}