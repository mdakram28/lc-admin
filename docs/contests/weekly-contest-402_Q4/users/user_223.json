{
    "username": "lost-temple-2",
    "submission": "public class Solution {\n    \n    private int[] tree;\n    private int n;\n    \n    private int LowBit(int x) {\n        return x&-x;\n    }\n    \n    public void Update(int x,int v) {\n        while (x <= n) {\n            tree[x] += v;\n            x += LowBit(x);\n        }\n    }\n    \n    public int Query(int x) {\n        int res = 0;\n        while (x >= 1) {\n            res += tree[x];\n            x -= LowBit(x);\n        }\n        return res;\n    }\n    \n    public int Query(int l,int r) {\n        return Query(r) - Query(l-1);\n    }\n    \n    public IList<int> CountOfPeaks(int[] nums, int[][] queries) {\n        n = nums.Length;\n        tree = new int[n+1];\n        int[] arr = new int[n+1];\n        for (int i=1;i<n-1;i++) {\n            if (IsPeak(nums,i)) {\n                Update(i+1,1);\n                arr[i+1] = 1;\n            }\n        }\n        List<int> list = new List<int>();\n        foreach (var query in queries) {\n            int t = query[0];\n            if (t == 1) {\n                int l = query[1]+1,r = query[2]+1;\n                if (r-l+1 <= 2) {\n                    list.Add(0);\n                    continue;\n                }\n                int res = Query(l+1,r-1);\n                list.Add(res);\n            } else {\n                int idx = query[1],val = query[2];\n                nums[idx] = val;\n                int oriVal;\n                if (idx-1 >= 0) {\n                    oriVal = arr[idx-1+1];\n                    arr[idx-1+1] = IsPeak(nums,idx-1) ? 1 : 0;\n                    Update(idx-1+1,arr[idx-1+1]-oriVal);\n                }\n                oriVal = arr[idx+1];\n                arr[idx+1] = IsPeak(nums,idx) ? 1 : 0;\n                Update(idx+1,arr[idx+1]-oriVal);\n                if (idx+1 <= n-1) {\n                    oriVal = arr[idx+1+1];\n                    arr[idx+1+1] = IsPeak(nums,idx+1) ? 1 : 0;\n                    Update(idx+1+1,arr[idx+1+1]-oriVal);\n                }\n            }\n        }\n        return list;\n    }\n    \n    private bool IsPeak(int[] nums,int idx) {\n        if (idx == 0 || idx == n-1) {\n            return false;\n        }\n        return nums[idx] > nums[idx-1] && nums[idx] > nums[idx+1];\n    }\n}",
    "submit_ts": "1718507135",
    "subm_id": "539779484"
}