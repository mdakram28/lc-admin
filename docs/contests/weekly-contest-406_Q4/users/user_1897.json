{
    "username": "Anshika_Tripathi_12",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int h = horizontalCut.length - 1;\n        int v = verticalCut.length - 1;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        long totalCost = 0;\n        while (h >= 0 && v >= 0) \n        {\n            if (horizontalCut[h] > verticalCut[v])\n            {\n                totalCost += horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h--;\n            } //close if\n            else \n            {\n                totalCost += verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v--;\n            }//close else\n        }//close while outer\n        while (h >= 0) \n        {\n            totalCost += horizontalCut[h] * verticalPieces;\n            horizontalPieces++;\n            h--;\n        }//close while\n        while (v >= 0) \n        {\n            totalCost += verticalCut[v] * horizontalPieces;\n            verticalPieces++;\n            v--;\n        }//close while\n        return totalCost;\n    }//close func\n}//close class",
    "submit_ts": "1720925586",
    "subm_id": "1320259666"
}