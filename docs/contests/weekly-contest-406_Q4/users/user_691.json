{
    "username": "bhutjenny",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,bool>>cuts;\n\n        for(int i=0; i<horizontalCut.size(); i++){\n            cuts.push_back({horizontalCut[i], true});\n        }\n\n        for(int j=0; j<verticalCut.size(); j++){\n            cuts.push_back({verticalCut[j], false});\n        }\n\n        sort(cuts.begin(), cuts.end(), [](const pair<int, bool>& a, const pair<int, bool>& b) {\n            return a.first> b.first;\n        });\n\n        long long ans = 0;\n        long long h = 1;\n        long long v = 1;\n\n        for (const auto& cut : cuts) {\n            if(cut.second){ \n                ans += cut.first*v;\n                h++;\n            } \n            else{ \n                ans += cut.first*h;\n                v++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925464",
    "subm_id": "1320255588"
}