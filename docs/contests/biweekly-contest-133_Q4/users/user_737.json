{
    "username": "adii320",
    "submission": "class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        final int bada = 1_000_000_007;\n        final int beht = 400;\n        Map<Integer, Integer> jaroorat = mapsHai(requirements, n);\n        long[][] x = new long[n + 1][beht + 1];\n        x[0][0] = 1;\n        alagCount(x, jaroorat, n, bada, beht);\n        return jodGathao(x, n, bada, beht);\n    }\n    private Map<Integer, Integer> mapsHai(int[][] requirements, int n) {\n        Map<Integer, Integer> jaroorat = new HashMap<>();\n        int a = 0;\n        while (a < requirements.length) {\n            int[] imp = requirements[a];\n            if (imp[0] + 1 <= n) {\n                jaroorat.put(imp[0] + 1, imp[1]);\n            }\n            a++;\n        }\n        return jaroorat;\n    }\n    private void alagCount(long[][] x, Map<Integer, Integer> jaroorat, int n, int bada, int beht) {\n        int len = 1;\n        while (len <= n) {\n            if (jaroorat.containsKey(len)) {\n                int nisana = jaroorat.get(len);\n                int inv = 0;\n                while (inv <= beht) {\n                    if (inv != nisana) {\n                        x[len][inv] = 0;\n                    } else {\n                        long sum = 0;\n                        int pos = 0;\n                        while (pos < len) {\n                            int pehla = inv - pos;\n                            if (pehla >= 0) {\n                                sum = (sum + x[len - 1][pehla]) % bada;\n                            }\n                            pos++;\n                        }\n                        x[len][inv] = sum;\n                    }\n                    inv++;\n                }\n            } else {\n                int inv = 0;\n                while (inv <= beht) {\n                    long sum = 0;\n                    int pos = 0;\n                    while (pos < len) {\n                        int pehla = inv - pos;\n                        if (pehla >= 0) {\n                            sum = (sum + x[len - 1][pehla]) % bada;\n                        }\n                        pos++;\n                    }\n                    x[len][inv] = sum;\n                    inv++;\n                }\n            }\n            len++;}}\n    private int jodGathao(long[][] x, int n, int bada, int beht) {\n        long result = 0;\n        int inv = 0;\n        while (inv <= beht) {\n            result = (result + x[n][inv]) % bada;\n            inv++;\n        }\n        return (int) result;}}",
    "submit_ts": "1719071110",
    "subm_id": "1296839289"
}