{
    "username": "ShraddhaGoyal",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n=points.length;\n        int[] sum=new int[n];\n        int[] diff=new int[n];\n        int i=0;\n        for(int[] t:points){\n            int s=(t[0]+t[1]);\n            int d=(t[0]-t[1]);\n            sum[i]=s;\n            diff[i]=d;\n            i++;\n        }\n        Arrays.sort(sum);\n        Arrays.sort(diff);\n        int ans=Integer.MAX_VALUE;\n        for(int[] t:points)\n        {\n            int s=(t[0]+t[1]);\n            int d=(t[0]-t[1]);\n            int maxsum=sum[n-1];\n            int minsum=sum[0];\n            int maxdiff=diff[n-1];\n            int mindiff=diff[0];\n            if(s==sum[n-1])\n        maxsum=sum[n-2];\n            if(s==sum[0])\n                minsum=sum[1];\n            if(d==diff[n-1])\n                maxdiff=diff[n-2];\n            if(d==diff[0])\n                mindiff=diff[1];\n            int check=Math.max(maxsum-minsum,maxdiff-mindiff);\n            ans=Math.min(ans,check);\n        }\n        return ans;\n    }\n}"
}