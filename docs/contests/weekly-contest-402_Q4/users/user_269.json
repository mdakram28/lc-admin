{
    "username": "jwseph",
    "submission": "\ntemplate<class T>\nstruct Tree {\n    T def;\n    T f(T a, T b) { return a+b; }\n    vector<T> t; int n;\n    Tree(int n): t(2*n, def), n(n) {}\n    void update(int i, T v) {\n        for (t[i += n] = v; i /= 2;) t[i] = f(t[i*2], t[i*2+1]);\n    }\n    T query(int l, int r) {\n        T al = def, ar = def;\n        for (l += n, r += n; l < r; l /= 2, r /= 2) {\n            if (l&1) al = f(al, t[l++]);\n            if (r&1) ar = f(t[--r], ar);\n        }\n        return f(al, ar);\n    }\n};\n\nclass Solution {\nprivate:\n    int n;\n    bool peak(vector<int>& ar, int i) {\n        return 1 <= i && i+1 < n && ar[i-1] < ar[i] && ar[i] > ar[i+1];\n    }\n    void update(Tree<int>& tr, vector<int>& ar, int i, int v) {\n        ar[i] = v;\n        tr.update(i, peak(ar, i));\n        if (i-1 >= 0) tr.update(i-1, peak(ar, i-1));\n        if (i+1 < n) tr.update(i+1, peak(ar, i+1));\n    }\npublic:\n    vector<int> countOfPeaks(vector<int>& ar, vector<vector<int>>& queries) {\n        n = ar.size();\n        Tree<int> tr(n);\n        vector<int> res;\n        for (int i = 0; i < n; ++i) update(tr, ar, i, ar[i]);\n        for (auto q: queries) {\n            int t = q[0];\n            if (t == 1) {\n                res.push_back(tr.query(q[1]+1, q[2]));\n                continue;\n            }\n            update(tr, ar, q[1], q[2]);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506697",
    "subm_id": "1289627965"
}