{
    "username": "kishanved",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> m;\n        int n = nums.size();\n        vector<int> d(n/2);\n        for(int i=0;i<n/2;i++){\n            // // cout<<i<<endl;\n            m[abs(nums[i] - nums[n-i-1])]++;\n            d[i] = max({nums[i], nums[n-i-1], k - nums[i], k - nums[n-i-1]});\n        }\n        sort(d.begin(), d.end());\n        // // cout<<s.size()<<endl;\n        int ans = n/2;\n        for (auto& it: m){\n            // cout<<*it<<endl;\n            int nn = n/2 - (lower_bound(d.begin(), d.end(), it.first) - d.begin());\n            // cout<<it.first<<\" \"<<nn<<endl;\n\n            ans = min(ans, nn + 2*(n/2 - nn) - it.second);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721490143",
    "subm_id": "1327474283"
}