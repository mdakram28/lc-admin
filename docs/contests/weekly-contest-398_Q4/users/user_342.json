{
    "username": "kotharirahil9",
    "submission": "class Solution {\npublic:\n    long long int func(int i, int flag, int jump, map<vector<int>, int> &dp, int k)\n    {\n       \n        if(i > k + 1)return 0;\n        if(dp.find({flag, jump, i}) != dp.end())return dp[{flag, jump, i}];\n        long long a = 0;\n        if(i == k)a++;\n        if(flag == 1)a += func(i-1,0,jump,dp,k);\n        a += func(i+(1<<jump), 1, jump+1, dp, k);\n        return dp[{flag, jump, i}] = a;\n    }\n    int waysToReachStair(int k) {\n        map<vector<int>, int> dp;\n        return func(1, 1, 0, dp, k);\n    }\n};",
    "submit_ts": 1716088158.0
}