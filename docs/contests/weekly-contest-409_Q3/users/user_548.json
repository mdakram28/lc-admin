{
    "username": "yourleetcode",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        ret = n - 1\n        sl = SortedList()\n        answer = []\n        for s, e in queries:\n            if e==s+1:\n                answer.append(ret)\n                continue\n            if not sl:\n                sl.add(s)\n                sl.add(e-1)\n                ret -= e-s-1\n                answer.append(ret)\n                continue\n            s_left = bisect_left(sl, s)\n            s_right = bisect_right(sl, s)\n            e_left = bisect_left(sl, e-1)\n            e_right = bisect_right(sl, e-1)\n            # print(\"s,e\",s,e)\n            # print(s_left,s_right,e_left,e_right)\n            if s_left==len(sl) or e_right<0:\n                ret-=e-s-1\n                answer.append(ret)\n                sl.add(s)\n                sl.add(e-1)\n            elif s_right == e_left and s_right%2==1:\n                answer.append(ret)\n            elif s_right == e_left and s_right%2==0:\n                sl.add(s)\n                sl.add(e-1)\n                ret-=e-s-1\n                answer.append(ret)\n            else:\n                ret -= e-s-1\n                for i in range(s_left,e_right,2):\n                    ret += sl[i+1] - sl[i]\n                # print(sl)\n                # print(s_left,e_right)\n                for i in range(s_left,e_right):\n                    del sl[s_left]\n                sl.add(s)\n                sl.add(e-1)\n                answer.append(ret)\n        return answer",
    "submit_ts": "1722742230",
    "subm_id": "1343764105"
}