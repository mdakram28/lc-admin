{
    "username": "raghu30",
    "submission": "class Solution {\npublic:\n    static const int N = 1e5+100;\n    long tree[4*N];\n    \n    void build(vector<int> &a, int i, int st, int ed) {\n        if(st == ed) {\n            tree[i] = a[st];\n            return;\n        }    \n        int mid = (st+ed)/2;\n        build(a, i*2+1, st, mid);\n        build(a, i*2+2, mid+1, ed);\n        \n        tree[i] = tree[i*2+1]&tree[i*2+2];\n    }\n    \n    int query(int l, int r, int i, int st, int ed) {\n        if(ed < l || st > r) {\n            return INT_MAX;\n        }\n        if(st >= l && ed <= r) {\n            return tree[i];\n        }\n        int mid = (st+ed)/2;\n        return query(l, r, i*2+1, st, mid) & query(l, r, i*2+2, mid+1, ed);\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        build(nums, 0, 0, n-1);\n    \n        long ans = 2e9;\n        long maxi = 2e9;\n        long mini = -1e9;\n        \n        int cur = INT_MAX;\n        \n        for(int i=0; i<n; i++) {\n            {\n                int lo = i;\n                int hi = n-1;    \n                \n                while(hi - lo > 1) {\n                    int mid = (lo + hi)/2;\n                    \n                    if(query(i, mid, 0, 0, n-1) < k) {\n                        hi = mid;\n                    }else {\n                        lo = mid;\n                    }\n                }\n                long v1 = query(i, hi, 0, 0, n-1);\n                if(v1 <= k) {\n                    mini = max(mini, v1);\n                }\n                long v2 = query(i, lo, 0, 0, n-1);\n                if(v2 <= k) {\n                    mini = max(mini, v2);\n                }\n            }\n            \n            {\n                int lo = i;\n                int hi = n-1;    \n                \n                while(hi - lo > 1) {\n                    int mid = (lo + hi)/2;\n                    \n                    if(query(i, mid, 0, 0, n-1) > k) {\n                        lo = mid;\n                    }else {\n                        hi = mid;\n                    }\n                }\n                long v1 = query(i, hi, 0, 0, n-1);\n                if(v1 >= k) {\n                    maxi = min(maxi, v1);\n                }\n                long v2 = query(i, lo, 0, 0, n-1);\n                if(v2 >= k) {\n                    maxi = min(maxi, v2);\n                }\n            }\n        }\n        long v1 = abs(k-mini);\n        long v2 = abs(k-maxi);\n        \n        ans = min(v1, v2);\n        for(int i=0; i<n; i++) {\n            long v = abs(k-nums[i]);\n            ans = min(ans, v);\n        }\n        \n        \n        \n        return ans;\n    }\n};",
    "submit_ts": 1717299841.0
}