{
    "username": "Mr_TaiL_",
    "submission": "class Solution {\npublic:\nusing ll = long long;\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end());\n        std::sort(verticalCut.begin(), verticalCut.end());\n        ll sum_h{0};\n        ll sum_v{0};\n        for (int it : horizontalCut) {\n            sum_h += it;\n        }\n        for (int it : verticalCut) {\n            sum_v += it;\n        }\n        ll ans{0};\n        ll h = horizontalCut.size() - 1;\n        ll v = verticalCut.size() - 1;\n        ll k_h = 1;\n        ll k_v = 1;\n\n        while (h >= 0 && v >= 0) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                sum_h -= horizontalCut[h];\n                ans += k_h * horizontalCut[h];\n                k_v++;\n                h--;\n            } else {\n                sum_v -= verticalCut[v];\n                ans += k_v * verticalCut[v];\n                k_h++;\n                v--;\n            }\n            // cout << \"ans=\" << ans << endl;\n        }\n        if (h >= 0) {\n            ans += k_h * sum_h;\n            // cout << \"ans1=\" << ans << endl;\n        }\n        if (v >= 0) {\n            ans += k_v * sum_v;\n            // cout << \"ans2=\" << ans << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926345",
    "subm_id": "1320283419"
}