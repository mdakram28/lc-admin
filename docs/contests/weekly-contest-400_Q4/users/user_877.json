{
    "username": "rohitjingar",
    "submission": "class Solution {\npublic:\n    #define INF_VAL INT32_MAX\n    \nclass SegTree {\npublic:\n    vector<int>treeNode;\n    int n;\n\n    \n    SegTree(vector<int>&nums)\n    {\n        n = nums.size();\n        treeNode.resize(4 * n);\n        build(nums, 0, 0, n - 1);\n    }\n\n    int queryOP(int left, int right)\n    {\n        return query(0, 0, n - 1, left, right);\n    }\n        \n    void build(vector<int>&nums, int nodeInd, int st, int end)\n    {\n        if (st == end) {\n            treeNode[nodeInd] = nums[st];\n            return ;\n        }\n        \n            int mid = (st + end) / 2;\n            build(nums, 2 * nodeInd + 2, mid + 1, end);\n            build(nums, 2 * nodeInd + 1, st, mid);\n            treeNode[nodeInd] = treeNode[2 * nodeInd + 2] & treeNode[2 * nodeInd + 1];\n          return;\n    }\n\n    int query(int nodeInd, int startInd, int endInd, int lInd, int rInd)\n    {\n        if (rInd < startInd || endInd < lInd) {\n            return INF_VAL;\n        }\n        if (lInd <= startInd && endInd <= rInd) {\n            return treeNode[nodeInd];\n        }\n        int midInd = (startInd + endInd) / 2;\n        int rightPart = query(2 * nodeInd + 2, midInd + 1, endInd, lInd, rInd);\n        int leftPart = query(2 * nodeInd + 1, startInd, midInd, lInd, rInd);\n        \n        return leftPart & rightPart;\n    }\n};\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        SegTree Tree(nums);\n    int ans = INF_VAL;\n    for (int i = 0; i < n; i++) {\n        int left = i - 1, right = n - 1, midInd;\n\n       \n        while (right - left > 1) {\n            midInd = (left + right) / 2;\n            if (Tree.queryOP(i, midInd) < k)\n               {right = midInd; }\n            else\n                {left = midInd;}\n        }\n        \n        \n        if (left != i - 1)\n            {ans = min(ans, abs(Tree.queryOP(i, left) - k));}\n        \n        ans = min(ans, abs(k - Tree.queryOP(i, right)));\n    }\n    return ans;\n        \n    }\n};",
    "submit_ts": 1717300196.0
}