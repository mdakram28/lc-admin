{
    "username": "zzdfw",
    "submission": "const int N = 5e4;\n\nclass Solution {\n    struct tr {\n        int l, r;\n        int ma;\n    } tr[4 * N];\n\n    void pushup(int u) {\n        tr[u].ma = max(tr[u << 1].ma, tr[u << 1 | 1].ma);\n    }\n\n    void build(int u, int l, int r) {\n        tr[u] = {l, r, 0};\n        if (l >= r)return;\n        int mid = (l + r) >> 1;\n        build(u << 1, l, mid);\n        build(u << 1 | 1, mid + 1, r);\n    }\n\n    int query(int u, int l, int r) {\n        if (tr[u].l >= l && tr[u].r <= r)return tr[u].ma;\n        else {\n            int mid = (tr[u].l + tr[u].r) >> 1;\n            int res = 0;\n            if (l <= mid)res = max(res, query(u << 1, l, r));\n            if (r > mid)res = max(res, query(u << 1 | 1, l, r));\n            return res;\n        }\n    }\n\n    void modify(int u, int l, int r, int c) {\n        if (tr[u].l >= tr[u].r)tr[u].ma = c;\n        else {\n            int mid = (tr[u].l + tr[u].r) >> 1;\n            if (l <= mid) modify(u << 1, l, r, c);\n            if (r > mid) modify(u << 1 | 1, l, r, c);\n            pushup(u);\n        }\n    }\n\npublic:\n\n    vector<bool> getResults(vector<vector<int>> &queries) {\n        vector<bool> res;\n        set<int> s;\n        build(1, 1, N);\n        for (auto it: queries) {\n            if (it[0] == 1) {\n                //\u5728\u96c6\u5408s\u4e2d\u627e\u5230\u5c0f\u4e8e\u7b49\u4e8eit[1]\u7684\u6700\u5927\u503c\n                auto pre = s.lower_bound(it[1]);\n                if (pre == s.begin()) {\n                    // cout<<\"A \"<<it[1]<<endl;\n                    modify(1, 1, it[1], it[1]);\n                } else {\n                    pre--;\n                    \n                    // cout<<\"B \"<<*pre<<\" \"<<(*pre) - it[1]<<endl;\n                    modify(1, *pre+1,it[1], it[1] - (*pre));\n                }\n\n                //\u5728\u96c6\u5408s\u4e2d\u627e\u5230\u5927\u4e8e\u7b49\u4e8eit[1]\u7684\u6700\u5c0f\u503c\n                auto nxt = s.upper_bound(it[1]);\n                if (nxt != s.end()) {\n                    // cout<<\"C \"<<it[1]<<\" \"<<*nxt<<\" \"<<(*nxt) - it[1]<<endl;\n                    modify(1, it[1]+1, *nxt, (*nxt) - it[1]);\n                }\n                // for(int i = 1; i <= 10; i++) {\n                //     cout << query(1, i, i) << \" \";\n                // }\n                // cout<<endl;\n                s.insert(it[1]);\n            } else {\n                int x=it[1];\n                int sz=it[2];\n                //\u627e\u5230x\u5de6\u8fb9\u7684\u6700\u5927\u503c\n                int prev=-1;\n                auto pre = s.lower_bound(x);\n                if(pre==s.begin()){\n                    prev=0;\n                } else{\n                    pre--;\n                    prev=*pre;\n                }\n                \n                // cout<<x<<\" \"<<sz<<\" \"<<prev<<\" \"<<query(1,1,prev)<<endl;\n                if(max(query(1,1,prev),x-prev)<sz){\n                    res.push_back(false);\n                } else{\n                    res.push_back(true);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716652396.0
}