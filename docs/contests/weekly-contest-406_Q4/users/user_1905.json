{
    "username": "Vishnu_balaji",
    "submission": "import heapq\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut = [-cost for cost in horizontalCut]\n        verticalCut = [-cost for cost in verticalCut]\n        heapq.heapify(horizontalCut)\n        heapq.heapify(verticalCut)\n        total_cost = 0\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        while horizontalCut or verticalCut:\n            if not verticalCut or (horizontalCut and horizontalCut[0] <= verticalCut[0]):\n                cost = -heapq.heappop(horizontalCut)\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n            else:\n                cost = -heapq.heappop(verticalCut)\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n        return total_cost",
    "submit_ts": "1720926524",
    "subm_id": "1320288757"
}