{
    "username": "Y L",
    "submission": "class Solution(object):\n    def largestPalindrome(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: str\n        \"\"\"\n        # if n == 1:\n        #     return str(k)\n        if k == 1:\n            return \"9\" * n\n        \n        if k == 2:\n            if n == 1:\n                return \"8\"\n            elif n == 2:\n                return \"88\"\n            return \"8\" + (n-2)*\"9\" + \"8\"\n        if k == 3:\n            return n*\"9\"\n        if k == 4:\n            if n == 1:\n                return \"8\"\n            elif n == 2:\n                return \"88\"\n            elif n == 3:\n                return \"888\"\n            elif n == 4:\n                return \"8888\"\n            else:\n                return \"88\" + (n-4)*\"9\" + \"88\"\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            elif n == 2:\n                return \"55\"\n            return \"5\" + (n-2) * \"9\" + \"5\"\n        \n        if k == 6:\n            if n == 1:\n                return \"6\"\n            elif n == 2:\n                return \"66\"\n            elif n % 2 == 1:\n                t = 8 + 8 + (n-3) * 9\n                for i in range(9, -1,-1):\n                    if (t + i) % 3 == 0:\n                        return \"8\" + (n-3)/2*\"9\" + str(i) + (n-3)/2 * \"9\" + \"8\"\n            else:\n                t = 8 + 8 + (n-4) * 9\n                for i in range(9, -1, -1):\n                    if (t + 10*i + i) % 3 == 0:\n                        return \"8\" + (n-4)/2*\"9\" + str(i) + str(i) + (n-4)/2*\"9\" + \"8\"\n        if k == 8:\n            if n <= 6:\n                return \"8\" * n\n            else:\n                return \"8\" * 3 + (n-6)*\"9\" + \"8\" * 3\n\n        if k == 9:\n            return n*\"9\"\n        \n\n                \n            \n\n        def create_palindrome(half, odd_length):\n            if odd_length:\n                return int(half + half[:-1][::-1])\n            else:\n                return int(half + half[::-1])\n    \n        max_number = 10**n - 1\n\n        half = str(max_number)[: (n + 1) // 2]\n        \n\n        current = create_palindrome(half, n % 2 != 0)\n        \n        while current >= 10**(n-1):\n            if current % k == 0:\n                return str(current)\n\n            half = str(int(half) - 1)\n            current = create_palindrome(half, n % 2 != 0)\n        \n        return \"\"",
    "submit_ts": "1723951777",
    "subm_id": "1359779824"
}