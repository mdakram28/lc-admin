{
    "username": "rahul_sehgal_021",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        h = 0\n        v = 0\n        horizontalPieces = 1\n        verticalPieces = 1\n        totalCost = 0\n        \n        while h < len(horizontalCut) and v < len(verticalCut):\n            if horizontalCut[h] > verticalCut[v]:\n                totalCost += horizontalCut[h] * verticalPieces\n                horizontalPieces += 1\n                h += 1\n            else:\n                totalCost += verticalCut[v] * horizontalPieces\n                verticalPieces += 1\n                v += 1\n        \n        while h < len(horizontalCut):\n            totalCost += horizontalCut[h] * verticalPieces\n            h += 1\n        \n        while v < len(verticalCut):\n            totalCost += verticalCut[v] * horizontalPieces\n            v += 1\n        \n        return totalCost\n",
    "submit_ts": "1720926569",
    "subm_id": "1320290055"
}