{
    "username": "ocavue",
    "submission": "def calc_spaces(score: int, spaces_l: int, spaces_r: int):\n    if score <= 0:\n        return 0\n    if score == 1:\n        return 1\n\n    result = 0\n\n    for l in range(0, spaces_l + 1):\n        if l >= score:\n            break\n\n        for r in range(0, spaces_r + 1):\n            if l + r < score:\n                result += 1\n            else:\n                break\n\n    return result\n\n    # sum_ = score - 1\n\n    # if spaces_l + spaces_r\n\n    # result = score * (score + 1) // 2\n    # if spaces_l < sum_:\n    #     diff = sum_ - spaces_l + 1\n    #     result -= diff * (diff + 1) // 2\n    # if spaces_r < sum_:\n    #     diff = sum_ - spaces_r + 1\n    #     result -= diff * (diff + 1) // 2\n\n    # return result\n\n\nclass Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        n = len(s)\n        prev_zeros = [-1] * n\n        next_zeros = [n] * n\n\n        zero_indexes = [i for i in range(n) if s[i] == \"0\"]\n\n        prev_zero = -1\n        for i in zero_indexes:\n            prev_zeros[i] = prev_zero\n            prev_zero = i\n\n        next_zero = n\n        for i in zero_indexes[::-1]:\n            next_zeros[i] = next_zero\n            next_zero = i\n\n        max_zero = int(n**0.5) + 1\n\n        m = len(zero_indexes)\n        dominant_zero = 0\n\n        dominant_zero += m\n        # print(dominant_zero)\n\n        for count in range(2, max_zero):\n            for i in range(m):\n                j = i + count - 1\n                if j >= m:\n                    break\n\n                a = zero_indexes[i]\n                b = zero_indexes[j]\n\n                score = count**2 - (b - a + 1 - count)\n                if score <= 0:\n                    continue\n\n                l = prev_zeros[a]\n                r = next_zeros[b]\n                spaces_l = a - l - 1\n                spaces_r = r - b - 1\n\n                # print(\n                #     f\"count = {count}; i = {i}; a = {a}; b = {b}; added = {calc_spaces(score, spaces_l, spaces_r)}; spaces_l={spaces_l}; spaces_r={spaces_r}\"\n                # )\n\n                dominant_zero += calc_spaces(score, spaces_l, spaces_r)\n\n        # print(dominant_zero)\n\n        for i in range(m):\n            j = i + max_zero - 1\n            if j >= m:\n                break\n            a = zero_indexes[i]\n            b = zero_indexes[j]\n\n            # print(f\"a={a} b={b}\")\n\n            l = prev_zeros[a]\n            spaces_l = a - l\n            # print(\"spaces_l\", spaces_l)\n            dominant_zero += spaces_l * (n - b)\n        # print(dominant_zero)\n\n        return (n * (n + 1) // 2) - dominant_zero\n ",
    "submit_ts": "1722138833",
    "subm_id": "1335800878"
}