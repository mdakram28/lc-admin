{
    "username": "Ajay_Walke",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> a, b;\n        int n = points.size();\n        unordered_map<int, int> mpa, mpb;\n        for(int i=0; i<n; i++) {\n            a.push_back(points[i][0]+points[i][1]);\n            mpa[a.back()]++;\n            b.push_back(points[i][0]-points[i][1]);\n            mpb[b.back()]++;\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        int ans = INT_MAX;\n        for(int i=0; i<n; i++) {\n            int t1 = points[i][0]+points[i][1];\n            int t2 = points[i][0]-points[i][1];\n            int c, d;\n            if(t1 == a.front() || t1 == a.back()) {\n                if(t1 == a.front() && t1 == a.back()) {\n                    c = 0;\n                }\n                else{\n                    if(mpa[t1] > 1) {\n                        c = a.back() - a.front();\n                    }\n                    else {\n                        c = (t1 == a.front() ? a.back() - a[1] : a[n-2] - a.front());\n                    }   \n                }\n            }\n            else {\n                c = a.back() - a.front();\n            }\n            \n            if(t2 == b.front() || t2 == b.back()) {\n                if(t2 == b.front() && t2 == b.back()) {\n                    d = 0;\n                }\n                else{\n                    if(mpb[t2] > 1) {\n                        d = b.back() - b.front();\n                    }\n                    else {\n                        d = (t2 == b.front() ? b.back() - b[1] : b[n-2] - b.front());\n                    }   \n                }\n            }\n            else {\n                d = b.back() - b.front();\n            }\n            // cout << c << ' ' << d << endl;\n            ans = min(ans, max(c, d));\n        } \n        return ans;\n    }\n};"
}