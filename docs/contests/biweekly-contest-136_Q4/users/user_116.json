{
    "username": "Fasdr",
    "submission": "class Solution {\n    \n    private List<List<Integer>> adj;\n    // if you are at this subtree how long to achieve the bottom of it\n    private int[] depth;\n    private int[] res;\n    \n    public int[] timeTaken(int[][] edges) {\n        int n = edges.length + 1;\n        adj = new ArrayList<>();\n        for (int i = 0; i < n; i++)\n            adj.add(new ArrayList<>());\n        for (int[] edge : edges) {\n            int u = edge[0], v = edge[1];\n            adj.get(u).add(v);\n            adj.get(v).add(u);\n        }\n        depth = new int[n];\n        depthDFS(0, -1);\n        \n        res = new int[n];\n        totalDepthDFS(0, -1, 0);\n        \n        \n        return res;\n    }\n    \n    void depthDFS(int current, int parent) {\n        int max = 0;\n        for (int next : adj.get(current)) {\n            if (next == parent)\n                continue;\n            depthDFS(next, current);\n            max = Math.max(max, (next % 2 == 0 ? 2 : 1) + depth[next]);\n        }\n        depth[current] = max;\n    }\n    \n    void totalDepthDFS(int current, int parent, int upDepth) {\n        int max = upDepth;\n        int max1 = upDepth;\n        int max2 = 0;\n        for (int next : adj.get(current)) {\n            if (next == parent)\n                continue;\n            int subtreeDepth = (next % 2 == 0 ? 2 : 1) + depth[next];\n            max = Math.max(max, subtreeDepth);\n            if (subtreeDepth >= max1) {\n                max2 = max1;\n                max1 = subtreeDepth;\n            } else if (subtreeDepth > max2) {\n                max2 = subtreeDepth;\n            }\n        }\n        for (int next : adj.get(current)) {\n            if (next == parent)\n                continue;\n            int use = 0;\n            int subtreeDepth = (next % 2 == 0 ? 2 : 1) + depth[next];\n            if (max1 == subtreeDepth)\n                use = max2;\n            else\n                use = max1;\n            totalDepthDFS(next, current, use + (current % 2 == 0 ? 2 : 1));\n        }\n        \n        res[current] = max;\n    }\n}",
    "submit_ts": "1722698538",
    "subm_id": "1343183860"
}