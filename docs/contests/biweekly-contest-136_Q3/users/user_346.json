{
    "username": "Alonelover4",
    "submission": "class Solution:\n    def minFlips(self, grid) -> int:\n        m, n = len(grid), len(grid[0])\n        from collections import defaultdict\n        d = defaultdict(int)\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == -1:\n                    continue\n                y = set()\n                x = [grid[i][j]]\n                y.add((i, j))\n                grid[i][j] = -1\n                if (i, n - j - 1) not in y:\n                    x.append(grid[i][n - j - 1])\n                    y.add((i, n - j - 1))\n                    grid[i][n - j - 1] = -1\n                if (m - i - 1, j) not in y:\n                    x.append(grid[m - i - 1][j])\n                    y.add((m - i - 1, j))\n                    grid[m - i - 1][j] = -1\n                if (m - i - 1, n - j - 1) not in y:\n                    x.append(grid[m - i - 1][n - j - 1])\n                    y.add((m - i - 1, n - j - 1))\n                    grid[m - i - 1][n - j - 1] = -1\n                d[tuple(sorted(x))] += 1\n        ans = d[(0,1,1,1)] * 1 + d[(0, 0, 1, 1)] * 2 + d[(0,0,0,1)] * 1\n        ones = d[(1, 1)] * 2 + d[(1, )] * 1\n        if ones % 4 == 1:\n            return ans + 1 + d[(0, 1)]\n        elif ones % 4 == 2:\n            if d[(0, 1)] >= 1:\n                return ans + d[(0, 1)]\n            else:\n                return ans + 2\n        elif ones % 4 == 3:\n            if d[(0, 1)] >= 1:\n                return ans + 1 + d[(0, 1)]\n            else:\n                return ans + 1 + 2\n        else:\n            return ans + d[(0, 1)]",
    "submit_ts": "1722698488",
    "subm_id": "552271085"
}