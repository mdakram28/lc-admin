{
    "username": "sparsh8020",
    "submission": "class Solution {\npublic:\n    struct Node {\n        unordered_map<char, Node*> chd;\n        vector<pair<int, int>> wordEnds;\n    };\n\n    class Trie {\n    public:\n        Node* root;\n        Trie() { root = new Node(); }\n\n        void insert(const string& word, int index, int cost) {\n            Node* node = root;\n            for (char c : word) {\n                if (!node->chd.count(c))\n                    node->chd[c] = new Node();\n                node = node->chd[c];\n            }\n            node->wordEnds.push_back({index, cost});\n        }\n    };\n\n    int sparsh(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        Trie trie;\n        int ind = 0;\n        for (const auto& it : words) {\n            trie.insert(it, ind, costs[ind]);\n            ind++;\n        }\n\n        auto updateDP = [&dp, &trie, &words, &target, n](int i) {\n            Node* node = trie.root;\n            for (int j = i; j < n; j++) {\n                if (!node->chd.count(target[j])) break;\n                node = node->chd[target[j]];\n                for (const auto& [fr, sc] : node->wordEnds) {\n                    int len = words[fr].size();\n                    if (i + len <= n) {\n                        if (dp[i + len] > dp[i] + sc) {\n                            dp[i + len] = dp[i] + sc;\n                        }\n                    }\n                }\n            }\n        };\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            updateDP(i);\n        }\n\n        if (dp[n] >= INT_MAX) {\n            return -1;\n        } else if (dp[n] == 0) {\n            return 0;\n        } else if (dp[n] > 1e5) {\n            return dp[n];\n        }\n        return dp[n];\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        return sparsh(target, words, costs);\n    }\n};",
    "submit_ts": "1720323383",
    "subm_id": "1312374204"
}