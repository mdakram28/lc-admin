{
    "username": "Yash Garg",
    "submission": "class Solution {\n    long long func(int x, int y, int z, vector<vector<pair<int, int>>>& matrix, int cols) {\n        long long ans = LLONG_MIN;\n\n        for (int i = cols - 3; i < cols; i++) {\n            long long currentSum = matrix[x][i].first;\n\n            for (int j = cols - 3; j < cols; j++) {\n                if (matrix[y][j].second != matrix[x][i].second) {\n                    currentSum += matrix[y][j].first;\n\n                    for (int k = cols - 3; k < cols; k++) {\n                        if (matrix[z][k].second != matrix[x][i].second && matrix[z][k].second != matrix[y][j].second) {\n                            long long sum = 1ll*matrix[z][k].first + 1ll*matrix[y][j].first + 1ll*matrix[x][i].first;\n                            ans = max(ans, sum);\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long result = LLONG_MIN;\n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<pair<int, int>>> matrix(n, vector<pair<int, int>>(m));\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                matrix[i][j] = {board[i][j], j};\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            sort(matrix[i].begin(), matrix[i].end());\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    result = max(result, func(i, j, k, matrix, m));\n                }\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723908509",
    "subm_id": "1359155625"
}