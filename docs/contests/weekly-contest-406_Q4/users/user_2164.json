{
    "username": "Sasidhar17",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        h,v=horizontalCut,verticalCut\n        m,n=len(h),len(v)\n        i,j=0,0\n        c,count=0,0\n        a,b=0,0\n        while c<(n+m) and i<m and j<n:\n            if h[i]>v[j]:\n                count+=(b+1)*h[i]\n                i+=1\n                a+=1\n            else:\n                count+=(a+1)*v[j]\n                j+=1\n                b+=1\n            c+=1\n        while i<m:\n            count+=(b+1)*h[i]\n            i+=1\n            c+=1\n        while j<n:\n            count+=(a+1)*v[j]\n            j+=1\n            c+=1\n        return count\n            \n                \n                \n        \n        \n        ",
    "submit_ts": "1720926371",
    "subm_id": "1320284235"
}