{
    "username": "purinliang",
    "submission": "class Solution {\n    struct BinaryIndexTree {\n    #define ll long long\n\n    static const int MAXN = 100000 + 5;\n\n    int n;\n    int sm[MAXN];\n\n    void Add(int x, int v) {\n        for(int i = x; i <= n; i += i & (-i))\n            sm[i] += v;\n    }\n\n    ll Sum(int x) {\n        ll res = 0;\n        for(int i = x; i; i -= i & (-i))\n            res += sm[i];\n        return res;\n    }\n\n    void show() {\n        for (int i = 1; i <= n; ++i) {\n            cout << Sum(i) - Sum(i - 1) << \" \";\n        }\n        cout<< endl;\n    }\n\n    void Init(int _n) {\n        n = _n;\n        memset(sm, 0, sizeof(sm[0]) * (n + 1));\n    }\n\n} bit;\n\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        bit.Init(n);\n        for (int i = 1; i <= n - 2; ++i) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                bit.Add(i + 1, +1);\n            }\n        }\n        //bit.show();\n        vector<int> ans;\n        for (auto q : queries) {\n            int t = q[0];\n            if (t == 1) {\n                int l = q[1];\n                int r = q[2];\n                int tmp = bit.Sum(r - 1 + 1) - bit.Sum(l + 1 - 1 + 1);\n                if (r - l + 1 <= 2) {\n                    tmp = 0;\n                }\n                ans.push_back(tmp);\n            } else {\n                int idx = q[1];\n                int v = q[2];\n                for (int i = max(1, idx - 1); i <= min(idx + 1, n - 2); ++i) {\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        bit.Add(i + 1, -1);\n                    }\n                }\n                //bit.show();\n                nums[idx] = v;\n                for (int i = max(1, idx - 1); i <= min(idx + 1, n - 2); ++i) {\n                    if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                        bit.Add(i + 1, +1);\n                    }\n                }\n                //bit.show();\n            }\n            // [4, 4, 4, 2, 1, 5]\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507722.0
}