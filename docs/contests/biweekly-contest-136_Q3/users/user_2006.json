{
    "username": "anshu613402",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size(), cols = grid[0].size(), flips = 0;\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int o = grid[i][j] + grid[rows - i - 1][j] + grid[i][cols - j - 1] + grid[rows - i - 1][cols - j - 1];\n                flips += min(o, 4 - o);\n            }\n        }\n        int possibleChanges = 0, middleOnes = 0;\n        if (rows % 2) {\n            for (int j = 0; j < cols / 2; ++j) {\n                flips += (grid[rows / 2][j] != grid[rows / 2][cols - j - 1]) ? 1 : 0;\n                possibleChanges += (grid[rows / 2][j] != grid[rows / 2][cols - j - 1]) ? 1 : 0;\n                middleOnes += (grid[rows / 2][j] == grid[rows / 2][cols - j - 1] && grid[rows / 2][j]) ? 1 : 0;\n            }\n        }\n        if (cols % 2) {\n            for (int i = 0; i < rows / 2; ++i) {\n                flips += (grid[i][cols / 2] != grid[rows - i - 1][cols / 2]) ? 1 : 0;\n                possibleChanges += (grid[i][cols / 2] != grid[rows - i - 1][cols / 2]) ? 1 : 0;\n                middleOnes += (grid[i][cols / 2] == grid[rows - i - 1][cols / 2] && grid[i][cols / 2]) ? 1 : 0;\n            }\n        }\n        flips += (rows % 2 && cols % 2 && grid[rows / 2][cols / 2]) ? 1 : 0;\n        flips += (!possibleChanges && middleOnes % 2) ? 2 : 0;\n\n        return flips;\n    }\n};",
    "submit_ts": "1722700134",
    "subm_id": "1343232704"
}