{
    "username": "samonkeys",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int,int> cnts;\n        vector<int> range( 1e5 + 2 );\n        for( int i = 0; i < nums.size() / 2; ++i ) {\n            int small = min( nums[ i ], nums[ n - i - 1 ] );\n            int big = max( nums[ i ], nums[ n - i - 1 ] );\n            int right = max( big, k - small );\n            ++range[ 0 ];\n            --range[ right + 1 ];\n            ++cnts[ big - small ];\n        }\n\n        for( int i = 1; i < range.size(); ++i ) {\n            range[ i ] += range[ i - 1 ];\n        }\n\n        int ans = nums.size();\n        for( auto&[ x, cnt ] : cnts ) {\n            int need = ( n / 2 - cnt );\n            int ones = range[ x ] - cnt;\n            int twos = need - ones;\n            ans = min( ans, ones + twos * 2 );\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721487539",
    "subm_id": "1327392489"
}