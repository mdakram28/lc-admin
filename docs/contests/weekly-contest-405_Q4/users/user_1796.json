{
    "username": "jk20",
    "submission": "class Node{\n\n    public:\n    \n    Node *links[26];\n    \n    vector<pair<int,int>>cost;\n    \n    Node(){\n        \n        for(int i=0;i<26;i++){\n            links[i] = NULL;\n        }\n    }\n    \n    Node *getKey(char ch){\n        return links[ch-'a'];\n    }\n    \n    bool containsKey(char ch){\n        return links[ch-'a']!=NULL;\n    }\n    \n    void put(Node *node,char ch){\n        links[ch-'a'] = node;\n    }\n    \n    \n    \n};\n\nclass Trie{\n    \n    public:\n    \n    Node *root;\n    Trie(){\n        root = new Node();\n    }\n    \n    void insert(int cost,int idx,string s){\n        \n        Node *curr = root;\n        \n        for(int i=0;i<s.size();i++){\n            if(!curr->containsKey(s[i])){\n                curr->put(new Node(),s[i]);\n            }\n            curr = curr->getKey(s[i]);\n        }\n        curr->cost.push_back({idx,cost});\n    }\n    \n};\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        \n        Trie trie;\n        for(int i=0;i<words.size();i++){\n            trie.insert(costs[i],i,words[i]);\n        }\n        \n        vector<int>dp(target.size()+1,INT_MAX);\n        \n        dp[0] = 0;\n        \n        for(int i=0;i<target.size();i++){\n            \n            if (dp[i] == INT_MAX) {\n                continue;\n            }\n            Node *curr = trie.root;\n            \n            for(int j=i;j<target.size();j++){\n                \n                if(!curr->containsKey(target[j])) break;\n                \n                curr = curr->getKey(target[j]);\n                for(auto it : curr->cost){\n                    // cout<<it.first<<\" \"<<it.second<<endl;\n                    if(i+words[it.first].size()<=target.size()){\n                        dp[i+words[it.first].size()] = min(dp[i+words[it.first].size()],dp[i] + it.second);\n                    }\n                }\n            }\n        }\n        \n        return dp[target.size()] == INT_MAX ? -1 : dp[target.size()];\n        \n        \n        \n    }   \n};",
    "submit_ts": "1720323914",
    "subm_id": "1312387126"
}