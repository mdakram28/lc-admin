{
    "username": "mhasan01",
    "submission": "struct mint {\n    const int MOD = 1e9 + 7;\n    int x;\n\n    mint(int _x) : x((_x % MOD + MOD) % MOD) {}\n    mint(long long _x) : x((_x % MOD + MOD) % MOD) {}\n\n    mint() : x(0) {}\n\n    mint &operator=(const mint &rhs) {\n        x = rhs.x;\n        return *this;\n    }\n\n    mint pow(long long n) const {\n        assert(0 <= n);\n        mint x = *this, r = mint(1);\n        while (n)\n        {\n            if (n & 1)\n                r *= x;\n            x *= x;\n            n >>= 1;\n        }\n        return r;\n    }\n\n    mint inv() const {\n        return pow(MOD - 2);\n    }\n\n    mint &operator+=(const mint &rhs) {\n        x += rhs.x;\n        if (x >= MOD)\n            x -= MOD;\n        return *this;\n    }\n\n    mint &operator-=(const mint &rhs) {\n        x -= rhs.x;\n        if (x < 0)\n            x += MOD;\n        return *this;\n    }\n\n    mint &operator*=(const mint &rhs) {\n        unsigned long long z = x;\n        z *= rhs.x;\n        x = (unsigned int)(z % MOD);\n        return *this;\n    }\n\n    mint &operator/=(const mint &rhs) {\n        return *this = *this * rhs.inv();\n    }\n\n    friend mint operator+(const mint &lhs, const mint &rhs) {\n        return mint(lhs) += rhs;\n    }\n\n    friend mint operator-(const mint &lhs, const mint &rhs) {\n        return mint(lhs) -= rhs;\n    }\n\n    friend mint operator*(const mint &lhs, const mint &rhs) {\n        return mint(lhs) *= rhs;\n    }\n\n    friend mint operator/(const mint &lhs, const mint &rhs) {\n        return mint(lhs) /= rhs;\n    }\n\n    friend ostream& operator<<(ostream &os, const mint &m) {\n        return os << m.x;\n    }\n};\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& a) {\n        int n = (int) a.size();\n        int mx = *max_element(a.begin(), a.end());\n        vector<mint> dp(mx + 1);\n        vector<mint> pre(mx + 1);\n        for (int i = 0; i <= a[0]; i++) {\n            dp[i] = 1;\n            pre[i] = i + 1;\n        }\n        for (int i = 1; i < n; i++) {\n            vector<mint> ndp(mx + 1);\n            vector<mint> npre(mx + 1);\n            for (int x = 0, y = a[i]; x <= a[i]; x++, y--) {\n                int mn = min(x, a[i - 1] - y);\n                if (mn >= 0) {\n                    ndp[x] = pre[mn];\n                }\n            }\n            for (int x = 0; x <= mx; x++) {\n                npre[x] = (x > 0 ? npre[x - 1] : 0) + ndp[x];\n            }\n            dp.swap(ndp);\n            pre.swap(npre);\n        }\n        return pre[mx].x;\n    }\n};",
    "submit_ts": "1723344354",
    "subm_id": "1351532510"
}