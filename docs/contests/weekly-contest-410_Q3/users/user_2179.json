{
    "username": "mananhingorani2003",
    "submission": "class Solution {\npublic:\n    static const int MOD = 1e9+7;\n    \n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        int maxi = *max_element(nums.begin(), nums.end());\n\n        vector<vector<int>> dp(maxi + 1, vector<int>(maxi + 1, 0));\n\n        for (int x = 0; x <= nums[0]; ++x) {\n            dp[x][nums[0] - x] = 1;\n        }\n\n        for (int i = 1; i < n; ++i) {\n            vector<vector<int>> new_dp(maxi + 1, vector<int>(maxi + 1, 0));\n\n            for (int prev1 = 0; prev1 <= nums[i-1]; ++prev1) {\n                for (int prev2 = 0; prev2 <= nums[i-1] - prev1; ++prev2) {\n                    if (dp[prev1][prev2] > 0) {\n                        for (int pair1 = prev1; pair1 <= nums[i]; ++pair1) {\n                            int pair2 = nums[i] - pair1;\n                            if (pair2 <= prev2) {\n                                new_dp[pair1][pair2] = (new_dp[pair1][pair2] + dp[prev1][prev2]) % MOD;\n                            }\n                        }\n                    }\n                }\n            }\n\n            dp = move(new_dp); \n        }\n\n        int result = 0;\n        for (int x = 0; x <= nums[n-1]; ++x) {\n            result = (result + dp[x][nums[n-1] - x]) % MOD;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1723346438",
    "subm_id": "1351577600"
}