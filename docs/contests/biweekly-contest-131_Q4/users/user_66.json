{
    "username": "lifehappy01",
    "submission": "const int N = 1e5 + 10, lim = 1e5;\n\nint maxn[N << 2];\n\nvoid init(int rt, int l, int r) {\n  maxn[rt] = 0;\n  if (l == r) {\n    return ;\n  }\n  int mid = (l + r) >> 1;\n  init(rt << 1, l, mid);\n  init(rt << 1 | 1, mid + 1, r);\n}\n\nvoid update(int rt, int l, int r, int x, int v) {\n  if (l == r) {\n    maxn[rt] = v;\n    return ;\n  }\n  int mid = (l + r) >> 1;\n  if (x <= mid) {\n    update(rt << 1, l, mid, x, v);\n  } else {\n    update(rt << 1 | 1, mid + 1, r, x, v);\n  }\n  maxn[rt] = max(maxn[rt << 1], maxn[rt << 1 | 1]);\n}\n\nint query(int rt, int l, int r, int L, int R) {\n  if (l >= L && r <= R) {\n    return maxn[rt];\n  }\n  int mid = (l + r) >> 1;\n  if (R <= mid) {\n    return query(rt << 1, l, mid, L, R);\n  } else if (L > mid) {\n    return query(rt << 1 | 1, mid + 1, r, L, R);\n  }\n  return max(query(rt << 1, l, mid, L, R), query(rt << 1 | 1, mid + 1, r, L, R));\n}\n\nclass Solution {\npublic:\n  vector<bool> getResults(vector<vector<int>>& queries) {\n    set<int> st;\n    st.insert(0);\n    st.insert(100000);\n    \n    init(1, 0, lim);\n    vector<bool> ans;\n    update(1, 0, lim, 0, 100000);\n    \n    for (const auto &it : queries) {\n      int op = it[0], x = it[1];\n      if (op & 1) {\n        auto p = st.lower_bound(x);\n        // std::cout << \"q \" << *p << \"\\n\";\n        p--;\n        int down = *p;\n        p++;\n        int upper = *p;\n        \n        // std::cout << down << \" \" << x << \" \" << upper << \"\\n\";\n        // std::cout << \"update \" << down << \" \" << x - down << \"\\n\";\n        // std::cout << \"update \" << x << \" \" << upper - x << \"\\n\";\n        update(1, 0, lim, down, x - down);\n        update(1, 0, lim, x, upper - x);\n        st.insert(x);\n      } else {\n        int sz = it[2];\n        auto p = st.lower_bound(x);\n        // std::cout << *p << \"\\n\";\n        p--;\n        if (p == st.begin()) {\n          if (x >= sz) {\n            ans.push_back(true);\n          } else {\n            ans.push_back(false);\n          }\n        } else {\n          int maxv = x - *p;\n          p--;\n          // std::cout << 0 << \" \" << *p << \" \" << maxv << \"\\n\";\n          maxv = max(maxv, query(1, 0, lim, 0, *p));\n          // std::cout << maxv << \"\\n\";\n          if (maxv >= sz) {\n            ans.push_back(true);\n          } else {\n            ans.push_back(false);\n          }\n        }\n      }\n    }\n    return ans;\n  }\n};",
    "submit_ts": 1716649237.0
}