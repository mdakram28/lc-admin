{
    "username": "AvanRocks",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    ll MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(), requirements.end());\n        ll max_inv = ((ll) n * (n-1)) / 2;\n        ll m = requirements.size();\n        ll total_inv = requirements[m-1][1];\n        if (total_inv > max_inv) return 0;\n        \n        int idx = 0;\n        if (requirements[0][0] == 0) {\n            if (requirements[0][1] != 0) return 0;\n            idx++;\n        }\n        \n        vector<vector<ll>> dp(n, vector<ll>(401, 0));\n        dp[0][0] = 1;\n        for (int i = 1; i < n; i++) {\n            dp[i][0] = dp[i-1][0];\n            for (int j = 1; j <= 400; j++) {\n                dp[i][j] = dp[i][j-1] + dp[i-1][j];\n                dp[i][j] %= MOD;\n                if (j - i - 1 >= 0) {\n                    dp[i][j] -= dp[i-1][j-i-1];\n                    dp[i][j] += MOD;\n                    dp[i][j] %= MOD;\n                }\n            }\n            if (requirements[idx][0] == i) {\n                int inv = requirements[idx][1];\n                for (int j = 0; j <= 400; j++) {\n                    if (j != inv) dp[i][j] = 0;\n                }\n                idx++;\n            }\n        }\n        /*\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= 5; j++) {\n                cout << dp[i][j] << ' ';\n            }\n            cout << '\\n';\n        }\n        */\n        return dp[n-1][total_inv];\n    }\n};",
    "submit_ts": 1719070784.0
}