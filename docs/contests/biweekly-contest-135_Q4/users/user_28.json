{
    "username": "ItzDesert",
    "submission": "using ll = long long;\n    ll dp[2][105][105];\n    ll pre[105][105];\nclass Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        int n = grid.size();\n        if(n==1) return 0;\n        for(int i = 0;i<=n;i++)\n        {\n            for(int j = 0;j<=n;j++)\n            {\n                dp[0][i][j] = dp[1][i][j] = 0;\n                pre[i][j] = 0;\n            }\n        }\n        for(int j = 0;j<n;j++)\n        {\n            pre[0][j] = 0;\n            for(int i = 1;i<=n;i++) pre[i][j] = pre[i-1][j]+grid[i-1][j];\n        }\n        //cout<<pre[2][1]<<endl;\n        for(int i = 0;i<=n;i++) \n        {\n            dp[0][i][0] = 0;\n            for(int j = 1;j<=n;j++) dp[0][i][j] = -1e18;   \n        }\n        for(int i = 1;i<n;i++)\n        {\n            int cur = i&1;\n            int lst = cur^1;\n            for(int j = 0;j<=n;j++)\n            {\n                for(int k = 0;k<=n;k++)\n                {\n                    dp[cur][j][k] = 0;\n                    for(int l = 0;l<=n;l++)\n                    {\n                        ll add = 0;\n                        if(j>k) \n                        {\n                            if(j>l) add = pre[j][i-1]-pre[max(l,k)][i-1];\n                        } else {\n                            add = pre[k][i]-pre[j][i];\n                        }\n                        dp[cur][j][k] = max(dp[cur][j][k],dp[lst][k][l]+add); \n                    }\n                }\n            }\n        }\n        ll ans = 0;\n        for(int i = 0;i<=n;i++)\n        {\n            for(int j = 0;j<=n;j++)\n            {\n                int c = (n-1)&1;\n                ans = max(ans,dp[c][i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489309",
    "subm_id": "1327449451"
}