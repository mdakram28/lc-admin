{
    "username": "awang11",
    "submission": "class Solution {\npublic:\n    int taxidistance(pair<int,int> a, pair<int,int> b) {\n        return abs(a.first - b.first) + abs(a.second - b.second);\n    }\n    int taxidistance(vector<int> a, pair<int,int> b) {\n        return abs(a[0] - b.first) + abs(a[1] - b.second);\n    }\n    int taxidistance(pair<int,int> a, vector<int> b) {\n        return abs(a.first - b[0]) + abs(a.second - b[1]);\n    }\n    \n    \n    int max_distance(vector<vector<int>>& points, int ignore = -1) {\n        vector<pair<int,pair<int,int>>> augment_x_plus_y;\n        vector<pair<int,pair<int,int>>> augment_x_minus_y;\n        int i = 0;\n        for (auto& p : points) {\n            if (i++ == ignore) continue;\n            augment_x_plus_y.push_back({p[0] + p[1], {p[0], p[1]}});\n            augment_x_minus_y.push_back({p[1] - p[0], {p[0], p[1]}});\n        }\n        sort(augment_x_plus_y.begin(), augment_x_plus_y.end());\n        sort(augment_x_minus_y.begin(), augment_x_minus_y.end());\n        \n        int best = 0;\n        i = 0;\n        for (auto& p : points) {\n            if (i++ == ignore) continue;\n            best = max(best, taxidistance(p, augment_x_plus_y.front().second));\n            best = max(best, taxidistance(p, augment_x_plus_y.back().second));\n            best = max(best, taxidistance(p, augment_x_minus_y.front().second));\n            best = max(best, taxidistance(p, augment_x_minus_y.back().second));\n        }\n        \n        return best;\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int N = points.size();\n        \n        vector<pair<int,pair<int,pair<int,int>>>> augment_x_plus_y;\n        vector<pair<int,pair<int,pair<int,int>>>> augment_x_minus_y;\n        int i = 0;\n        for (auto& p : points) {\n            augment_x_plus_y.push_back({p[0] + p[1], {i, {p[0], p[1]}}});\n            augment_x_minus_y.push_back({p[1] - p[0], {i, {p[0], p[1]}}});\n            i++;\n        }\n        sort(augment_x_plus_y.begin(), augment_x_plus_y.end());\n        sort(augment_x_minus_y.begin(), augment_x_minus_y.end());\n        \n        int ans = 999999999;\n        ans = min(ans, max_distance(points, augment_x_plus_y.front().second.first));\n        ans = min(ans, max_distance(points, augment_x_plus_y.back().second.first));\n        ans = min(ans, max_distance(points, augment_x_minus_y.front().second.first));\n        ans = min(ans, max_distance(points, augment_x_minus_y.back().second.first));\n        \n        return ans;\n    }\n};"
}