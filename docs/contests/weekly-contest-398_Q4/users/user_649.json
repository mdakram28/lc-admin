{
    "username": "vijaykatta3094",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        # cannot do consecutively \n        # find number target = (number by using binary number - call it bin) - (backsteps)\n        # at a certain bin, it becomes impossible to not have consective backsteps\n        # binary number has to all 1's\n        result = 0\n        for binary_steps in range(34):\n            backsteps = pow(2, binary_steps) - 1 - k + 1\n            if backsteps > binary_steps + 1:\n                break\n            if backsteps >= 0:\n                total_steps = backsteps + binary_steps\n                result += comb(binary_steps + 1, backsteps)\n        return result\n                ",
    "submit_ts": "1716089199",
    "subm_id": "1261835825"
}