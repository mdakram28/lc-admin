{
    "username": "teerth_patel",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        return teerthcost(horizontalCut,verticalCut);\n    }\n    \n    long long teerthcost(vector<int>& hori, vector<int>&verti){\n        int h = 0, v = 0;\n        int hp = 1, vp = 1;\n        long long totalCost = 0;\n        \n        while (h < hori.size() && v < verti.size()) {\n            if (hori[h] > verti[v]) { //check if horizontal cost is greater or not\n                totalCost += hori[h] * vp;\n                hp++;\n                h++;\n            } else {//check if vertical cost is greater or not\n                totalCost += verti[v] * hp;\n                vp++;\n                v++;\n            }\n        }\n        \n        while (h < hori.size()) {\n            totalCost += hori[h] * vp;\n            h++;\n        }\n        \n        while (v < verti.size()) {\n            totalCost += verti[v] * hp;\n            v++;\n        }\n        \n        return totalCost;\n    }\n//     int minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         \n       \n        \n//     }\n};",
    "submit_ts": "1720925665",
    "subm_id": "1320262213"
}