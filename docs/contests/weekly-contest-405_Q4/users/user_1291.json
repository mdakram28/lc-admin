{
    "username": "ujjawal7668",
    "submission": "struct Node{\n    Node* links[26];\n    bool flag=false;\n    int cost=1e9;\n};\n\nclass Trie {\nprivate:\n    Node* root;\n\npublic:\n\n    /** Initialize your data structure here. */\n    Trie() {\n        root=new Node();\n    }\n\n    /** Inserts a word into the trie. */\n    void insert(string word,int c) {\n        Node* node=root;\n        for(int i=0;i<word.size();i++){\n            if(node->links[word[i]-'a']==NULL){\n                Node* x=new Node();\n                node->links[word[i]-'a']=x;\n            }\n            node=node->links[word[i]-'a'];\n        }\n        node->flag=true;\n        node->cost=min(node->cost,c);\n\n    }\n\n    /** Returns if the word is in the trie. */\n    bool search(string word) {\n        Node* node=root;\n        for(int i=0;i<word.size();i++){\n            if(node->links[word[i]-'a']==NULL){\n                return false;\n            }\n            node=node->links[word[i]-'a'];\n        }\n        if(node->flag==true){\n            return true;\n        }\n        return false;\n    }\n\n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    bool startsWith(string prefix) {\n        Node* node=root;\n        for(int i=0;i<prefix.size();i++){\n            if(node->links[prefix[i]-'a']==NULL){\n                return false;\n            }\n            node=node->links[prefix[i]-'a'];\n        }\n        return true;\n    }\n    Node* getroot(){\n        return root;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie t;\n        int n=target.size();\n        for(int i=0;i<words.size();i++){\n            t.insert(words[i],costs[i]);\n        }\n        vector<int> c(n+1,1e9);\n        c[0]=0;\n        for(int i=0;i<n;i++){\n            Node* node=t.getroot();\n            if(c[i]==1e9){\n                continue;\n            }\n            for(int j=i;j<n;j++){\n                char p=target[j];\n                if(node->links[p-'a']==NULL){\n                    break;\n                }\n                node=node->links[p-'a'];\n                if(node->flag==true){\n                    int x=min(c[j+1],c[i]+node->cost);\n                    c[j+1]=x;\n                }\n            }\n        }\n        if(c[n]==1e9){\n            return -1;\n        }\n        return c[n];\n    }\n};",
    "submit_ts": "1720323565",
    "subm_id": "1312378641"
}