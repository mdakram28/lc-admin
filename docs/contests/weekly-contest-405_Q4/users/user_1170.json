{
    "username": "prajnanam1",
    "submission": "using ll = long long;\ntypedef long long ll;\n\nclass TrieNode {\npublic:\n    unordered_map<char, TrieNode*> children;\n    int cost;\n    \n    TrieNode() : cost(-1) {}\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n    \n    Trie() {\n        root = new TrieNode();\n    }\n    \n    void insert(const string& word, int cost) {\n        TrieNode* node = root;\n        for (char c : word) {\n            if (node->children.find(c) == node->children.end()) {\n                node->children[c] = new TrieNode();\n            }\n            node = node->children[c];\n        }\n        if (node->cost == -1) {\n            node->cost = cost;\n        } else {\n            node->cost = min(node->cost, cost);\n        }\n    }\n    \n    int search(const string& word) {\n        TrieNode* node = root;\n        for (char c : word) {\n            if (node->children.find(c) == node->children.end()) {\n                return -1;\n            }\n            node = node->children[c];\n        }\n        return node->cost;\n    }\n};\n\nclass Solution {\npublic:\n    vector<ll> dp;\nTrie trie;\n\nll solve(const string& target, int id) {\n    if (id >= target.size()) {\n        return 0;\n    }\n    if (dp[id] != -1) return dp[id];\n    ll maxi = 1e11;\n    TrieNode* node = trie.root;\n    for (int j = id; j < target.size(); ++j) {\n        if (node->children.find(target[j]) == node->children.end()) {\n            break;\n        }\n        node = node->children[target[j]];\n        if (node->cost != -1) {\n            ll ans1 = node->cost + solve(target, j + 1);\n            if (ans1 < maxi) maxi = ans1;\n        }\n    }\n    return dp[id] = maxi;\n}\n\nint minimumCost(string target, vector<string>& words, vector<int>& costs) {\n    for (int i = 0; i < words.size(); ++i) {\n        trie.insert(words[i], costs[i]);\n    }\n    int n = target.size();\n    dp.resize(n + 1, -1);\n    ll ans = solve(target, 0);\n    if (ans == 1e11) return -1;\n    return ans;\n}\n\n};",
    "submit_ts": "1720323007",
    "subm_id": "1312364919"
}