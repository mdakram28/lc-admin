{
    "username": "miteshkhemani8",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> children;\n    int index;\n    \n    TrieNode() {\n        index = -1;\n    }\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n    \n    Trie() {\n        root = new TrieNode();\n    }\n    \n    void insert(const string& word, int index) {\n        TrieNode* node = root;\n        for (char ch : word) {\n            if (node->children.find(ch) == node->children.end()) {\n                node->children[ch] = new TrieNode();\n            }\n            node = node->children[ch];\n        }\n        node->index = index;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<string, int> wordCostMap;\n        for (int i = 0; i < words.size(); ++i) {\n            if (wordCostMap.find(words[i]) == wordCostMap.end() || costs[i] < wordCostMap[words[i]]) {\n                wordCostMap[words[i]] = costs[i];\n            }\n        }\n        \n        vector<string> uniqueWords;\n        vector<int> uniqueCosts;\n        for (const auto& pair : wordCostMap) {\n            uniqueWords.push_back(pair.first);\n            uniqueCosts.push_back(pair.second);\n        }\n        \n        int n = target.size();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        \n        Trie trie;\n        for (int i = 0; i < uniqueWords.size(); ++i) {\n            trie.insert(uniqueWords[i], i);\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = trie.root;\n            for (int j = i; j < n; ++j) {\n                if (node->children.find(target[j]) == node->children.end()) break;\n                node = node->children[target[j]];\n                if (node->index != -1) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + uniqueCosts[node->index]);\n                }\n            }\n        }\n        \n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};\n",
    "submit_ts": "1720323263",
    "subm_id": "1312371333"
}