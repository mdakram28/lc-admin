{
    "username": "Legend_Palash",
    "submission": "class Solution {\npublic:\n    int find(vector<pair<int, int>>&sum, vector<pair<int, int>>&dif, int rem){\n        int n= sum.size();\n        int cans, a, b;\n        a = sum[n-2].first;\n        if(sum[n-1].second!=rem) a=sum[n-1].first;\n        b = sum[1].first;\n        if(sum[0].second!=rem) b=sum[0].first;\n        cans = a-b;\n        a = dif[n-2].first;\n        if(dif[n-1].second!=rem) a=dif[n-1].first;\n        b = dif[1].first;\n        if(dif[0].second!=rem) b=dif[0].first;\n        cans = max(cans, a-b);\n        return cans;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>>sum, dif;\n        int i=0;\n        for(auto it : points){\n            int a= it[0], b= it[1];\n            sum.push_back({a+b, i});\n            dif.push_back({a-b, i++});\n        }\n        sort(sum.begin(), sum.end());\n        sort(dif.begin(), dif.end());\n        \n        int n = sum.size();\n        int ans = INT_MAX, cans;\n        int a, b, rem;\n\n        \n        cans = find(sum , dif , sum[n-1].second);\n        ans = min(ans, cans);\n        cans = find(sum , dif , dif[n-1].second);\n        ans = min(ans, cans);\n        cans = find(sum , dif , sum[0].second);\n        ans = min(ans, cans);\n        cans = find(sum , dif , dif[0].second);\n        ans = min(ans, cans);\n        return ans;\n    }\n};"
}