{
    "username": "donpaul299",
    "submission": "#define ll long long\n\n\nclass SGT \n{\n    \npublic:\n\n\tvector<ll> seg;\n\n    SGT(int n) \n    {\n        seg.resize(4 * n + 1);\n    }\n\n    void build(int ind, int low, int high, vector<ll> &arr) \n    {\n        if (low == high) \n        {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        int mid = (low + high) / 2;\n\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n\n        seg[ind] = seg[2 * ind + 1] + seg[2 * ind + 2];\n    }\n\n    int query(int ind, int low, int high, int l, int r) \n    {\n\n        if (r < low || high < l) \n            return 0;\n\n        if (low >= l && high <= r) \n            return seg[ind];\n\n        int mid = (low + high) >> 1;\n        int left = query(2 * ind + 1, low, mid, l, r);\n        int right = query(2 * ind + 2, mid + 1, high, l, r);\n\n        return left + right;\n    }\n    \n    void update(int ind, int low, int high, int i, int val) \n    {\n        if (low == high) \n        {\n            seg[ind] = val;\n            return;\n        }\n\n        int mid = (low + high) >> 1;\n\n        if (i <= mid) \n            update(2 * ind + 1, low, mid, i, val);\n\n        else \n            update(2 * ind + 2, mid + 1, high, i, val);\n\n        seg[ind] = seg[2 * ind + 1] + seg[2 * ind + 2];\n    }\n};\n\n\n\n\n\n\n\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        \n\n        int n = nums.size();\n        vector<ll> peak(n, 0);\n        \n        for(int i=1; i<n-1; ++i)\n        {\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1])\n                peak[i] = 1;\n        }\n        \n\n            \n        vector<int> ans;\n        \n        SGT st(n);\n        st.build(0, 0, n-1, peak);\n            \n        for(int i=0; i<q.size(); ++i)\n        {\n            int type = q[i][0];\n            \n            \n            if(type == 1)\n            {\n                int l = q[i][1];\n                int r = q[i][2];\n                \n                if(l == r)\n                {\n                    ans.push_back(0);\n                    continue;\n                }\n                \n                ll red = 0;\n                \n                if(l!=0 && l!=n-1 && peak[l] == 1)\n                    ++red;\n                \n                if(r!=0 && r!=n-1 && peak[r] == 1)\n                    ++red;\n                \n            \n                int res = st.query(0, 0, n-1, l, r);\n                ans.push_back(res-red);\n            }\n        \n        \n            else if(type == 2)\n            {\n                int p = q[i][1];\n                int x = q[i][2];\n            \n                nums[p] = x;\n                \n                if(p-1>=0 && p+1<n)\n                {\n                    if(nums[p]>nums[p-1] && nums[p]>nums[p+1])\n                    {\n                        st.update(0, 0, n-1, p, 1);\n                        peak[p] = 1;\n                    }\n                    \n                    else\n                    {\n                        st.update(0, 0, n-1, p, 0);\n                        peak[p] = 0;\n                    }\n                    \n                }\n                \n                if(p-2>=0 && p<n)\n                {\n                    if(nums[p-1]>nums[p-2] && nums[p-1]>nums[p])\n                    {\n                        st.update(0, 0, n-1, p-1, 1); \n                        peak[p-1] = 1;\n                    }\n                    \n                    else\n                    {\n                        st.update(0, 0, n-1, p-1, 0);\n                        peak[p-1] = 0;\n                    }\n                }\n                \n                if(p>=0 && p+2<n)\n                {\n                    if(nums[p+1]>nums[p] && nums[p+1]>nums[p+2])\n                    {\n                        st.update(0, 0, n-1, p+1, 1); \n                        peak[p+1] = 1;\n                    }\n                    \n                    else\n                    {\n                        st.update(0, 0, n-1, p+1, 0);\n                        peak[p+1] = 0;\n                    }\n                }\n                \n\n            }\n        \n        }\n        \n        \n                \n        \n        return ans;\n    }\n};\n\n\n\n\n",
    "submit_ts": "1718508568",
    "subm_id": "1289685005"
}