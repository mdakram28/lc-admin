{
    "username": "pratik319",
    "submission": "class Solution {\npublic:\n    \n    int calculateMax(int a, int b, int c, int d) {\n        return max({a, b, c, d});\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        \n        map<int, vector<int>> diff_to_X_map;\n    vector<int> all_X_values;\n\n    for (int i = 0; i < nums.size() / 2; ++i) {\n        int left = nums[i];\n        int right = nums[nums.size() - i - 1];\n        int difference = abs(left - right);\n        int max_X = calculateMax(left, right, k - left, k - right);\n\n        diff_to_X_map[difference].push_back(max_X);\n        all_X_values.push_back(max_X);\n    }\n\n    sort(all_X_values.begin(), all_X_values.end());\n\n    int min_changes = nums.size();\n\n    for (auto& entry : diff_to_X_map) {\n        int current_diff = entry.first;\n        int lower_bound_pos = lower_bound(all_X_values.begin(), all_X_values.end(), current_diff) - all_X_values.begin();\n        int changes = lower_bound_pos * 2 + (nums.size() / 2 - lower_bound_pos);\n\n       \n        for (auto& X : entry.second) {\n            if (X < current_diff) {\n                changes -= 2;\n            } else {\n                changes -= 1;\n            }\n        }\n\n        min_changes = min(min_changes, changes);\n    }\n\n    return min_changes;\n\n        \n    }\n};\n\n\n\n\n\n    ",
    "submit_ts": "1721489753",
    "subm_id": "1327462657"
}