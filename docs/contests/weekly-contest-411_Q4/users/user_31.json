{
    "username": "Milesian",
    "submission": "int fir[100020], en[100020], nex[100020], id[100020];\nint tot;\n\nstruct syq{\n    int l,r;\n    long long sum;\n    long long dlt;\n}a[400020];\nint sum[100020][2];\nlong long ans[100020];\nint lft,rgt;\nclass Solution {\npublic:\n    void create(int r,int x,int y){\n        a[r].l = x;\n        a[r].r = y;\n        a[r].sum = 0;\n        a[r].dlt = 0;\n        if(x == y){\n            return;\n        }\n        int mid = (x+y) >> 1;\n        create(r<<1,x,mid);\n        create(r<<1|1,mid+1,y);\n    }\n    void down(int r){\n        if(a[r].dlt == 0)return;\n        a[r<<1].sum += a[r].dlt * (a[r<<1].r - a[r<<1].l + 1);\n        a[r<<1|1].sum += a[r].dlt * (a[r<<1|1].r - a[r<<1|1].l + 1);\n        \n        a[r<<1].dlt += a[r].dlt;\n        a[r<<1|1].dlt += a[r].dlt;\n        a[r].dlt = 0;\n    }\n    void change(int r){\n        if(a[r].l >= lft && a[r].r <= rgt){\n            a[r].dlt += 1;\n            a[r].sum += a[r].r - a[r].l + 1;\n            return;\n        }\n        down(r);\n        int mid = a[r<<1].r;\n        if(lft <= mid) change(r<<1);\n        if(rgt > mid) change(r<<1|1);\n        a[r].sum = a[r<<1].sum + a[r<<1|1].sum;\n    }\n    long long query(int r){\n        if(a[r].l >= lft && a[r].r <= rgt)return a[r].sum;\n        down(r);\n        int mid = a[r<<1].r;\n        if(rgt <= mid)return query(r<<1);\n        if(lft > mid)return query(r<<1|1);\n        long long t1 = query(r<<1);\n        long long t2 = query(r<<1|1);\n        return t1+t2;\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int m = queries.size();\n        tot = 0;\n        int n = s.length();\n        for(int i=0;i<n;++i)fir[i] = 0;\n        for(int i=0;i<m;++i){\n            int x = queries[i][0];\n            int y = queries[i][1];\n            en[++tot] = x;\n            nex[tot]=fir[y];\n            fir[y] = tot;\n            id[tot] = i;\n        }\n        create(1,0,n-1);\n        \n        sum[0][0] = sum[0][1] = 0;\n        int now = 0;\n        for(int i=0;i<n;++i){\n            sum[i+1][0] = sum[i][0];\n            sum[i+1][1] = sum[i][1];\n            if(s[i] == '0') ++ sum[i+1][0];\n            else ++ sum[i+1][1];\n            while(sum[i+1][0] - sum[now][0] > k && sum[i+1][1] - sum[now][1] > k) ++ now;\n            lft = now;\n            rgt = i;\n            \n            change(1);\n            //printf(\"%d %d %lld\\n\", now, i, a[1].sum);\n            for(int x = fir[i];x;x=nex[x]){\n                lft = en[x];\n                rgt = i;\n                ans[id[x]] = query(1);\n            }\n        }\n        vector<long long> ret;\n        for(int i=0;i<m;++i)ret.push_back(ans[i]);\n        return ret;\n        \n       // printf(\"=========\\n\");\n    }\n};",
    "submit_ts": "1723950704",
    "subm_id": "556400786"
}