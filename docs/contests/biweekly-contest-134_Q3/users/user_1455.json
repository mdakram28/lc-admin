{
    "username": "raunakmishra1243",
    "submission": "class Solution {\npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int N = colors.size(); \n        int ans = 0; \n            vector<int>v=colors;\n        v.insert(v.begin(),colors.back());\n        if (k == 1)\n         { \n            return N; \n        } \n \n         for(int i=0;i<v.size();i++)\n         {\n           // cout<<v[i]<<\" \";\n         }\n        int alt = 1; \n        int i = 1; \n        while (i < N + k - 1) \n        { \n            int curr = i; \n            int pre = i - 1; \n \n            if (curr >= N) \n            { \n                curr -= N; \n            } \n            if (pre >= N) \n            { \n                pre -= N; \n            } \n \n            if (colors[curr] != colors[pre])\n            { \n                ++alt; \n            } else { \n                alt = 1; \n            } \n  \n            if (alt >= k) { \n                ++ans; \n            } \n \n            i++;\n        } \n          for(int i=0;i<v.size();i++)\n         {\n           // cout<<v[i]<<\" \";\n         }\n        return ans; \n    } \n};\n",
    "submit_ts": "1720280276",
    "subm_id": "1311783346"
}