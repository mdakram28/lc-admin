{
    "username": "cherisherfly",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        diff[0] = target[0] - nums[0];\n        for (int i = 1;i<n;++i) {\n            diff[i] = (target[i] - nums[i]) - (target[i-1] - nums[i-1]);\n        }\n        // 1 1 1 2| 1 0 0 1\n        // 1 -2 2 | 1 -3 4\n        long res = 0;\n        long posAcc = 0;//\u524d\u9762\u51cf\uff0c\u5bfc\u81f4\u540e\u9762\u8981\u52a0\n        long negAcc = 0;//\u524d\u9762\u52a0\uff0c\u5bfc\u81f4\u540e\u9762\u8981\u51cf\n        for (int i = 0;i<n;++i) {\n            if (diff[i] == 0) {\n                continue;\n            } else if (diff[i] > 0) {\n                if (negAcc >= diff[i]) {\n                    negAcc -= diff[i];\n                    continue;\n                }\n                res += diff[i] - negAcc;\n                posAcc += diff[i] - negAcc;\n                negAcc = 0;\n            } else {\n                if (posAcc >= -diff[i]) {\n                    posAcc += diff[i];\n                    continue;\n                }\n                res += -diff[i] - posAcc;\n                negAcc += -diff[i] - posAcc;\n                posAcc = 0;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721533653",
    "subm_id": "548400287"
}