{
    "username": "zcode-6",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = 0        \n        for i in range(n//2):\n            for j in range(m//2):\n                c1 = grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j]\n                if c1 == 0 or c1 == 4:\n                    continue\n                ans += min(c1, 4-c1)\n        cnt1 = cnt = 0\n        if n % 2 and m % 2:\n            if grid[n//2][m//2]:\n                ans += 1\n            for i in range(n//2):\n                if grid[i][m//2] != grid[n-1-i][m//2]:\n                    ans += 1\n                    cnt += 1\n                elif grid[i][m//2]:\n                    cnt1 += 2\n            for j in range(m//2):\n                if grid[n//2][j] != grid[n//2][m-1-j]:\n                    ans += 1\n                    cnt += 1\n                elif grid[n//2][j]:\n                    cnt1 += 2\n        elif n % 2:\n            for j in range(m//2):\n                if grid[n//2][j] != grid[n//2][m-1-j]:\n                    ans += 1\n                    cnt += 1\n                elif grid[n//2][j]:\n                    cnt1 += 2\n        elif m % 2:\n            for i in range(n//2):\n                if grid[i][m//2] != grid[n-1-i][m//2]:\n                    ans += 1\n                    cnt += 1\n                elif grid[i][m//2]:\n                    cnt1 += 2\n        if cnt1 % 4:\n            if not cnt:\n                ans += 2\n        return ans\n            ",
    "submit_ts": "1722698801",
    "subm_id": "552272585"
}