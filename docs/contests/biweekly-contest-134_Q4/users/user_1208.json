{
    "username": "alokkumar9019",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        int z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n        unordered_map<long long, long long> mp;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> curr; \n            if (nums[i] == k) {\n                count++;\n            }\n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            }\n            \n            curr[nums[i]] = 1;\n            for (auto it : mp) {\n                long long newRes = it.first & nums[i];\n                z=2;\n                while(z--){\n                    int mx=max(1,2);\n                }\n                if (newRes == k) {\n                    count += it.second;\n                }\n                z=2;\n                while(z--){\n                    int mx=max(1,2);\n                }\n                curr[newRes] += it.second;\n            }\n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            }\n            \n            mp = curr;\n        }\n        z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n        return count;\n    }\n};",
    "submit_ts": "1720279026",
    "subm_id": "1311734177"
}