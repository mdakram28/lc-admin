{
    "username": "saberjiang-b",
    "submission": "class Fenwick:\n    __slots__ = 'tree'\n\n    def __init__(self, n: int):\n        self.tree = [0] * n\n\n    # \u628a\u4e0b\u6807\u4e3a i \u7684\u5143\u7d20\u589e\u52a0 v\n    def add(self, i: int, v: int) -> None:\n        while i < len(self.tree):\n            self.tree[i] += v\n            i += i & -i\n\n    # \u8fd4\u56de\u4e0b\u6807\u5728 [1,i] \u7684\u5143\u7d20\u4e4b\u548c\n    def pre(self, i: int) -> int:\n        res = 0\n        while i > 0:\n            res += self.tree[i]\n            i &= i - 1\n        return res\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        t = Fenwick(n + 1)\n        for num, i in enumerate(nums):\n            if 0 < num < n - 1 and nums[num - 1] < nums[num] > nums[num + 1]:\n                t.add(num, 1)\n        \n        def check(num):\n            if 0 < num < n - 1 and nums[num - 1] < nums[num] > nums[num + 1]:\n                return True\n            return False\n        def update(i, v):\n            a, b, c = check(i - 1), check(i), check(i + 1)\n            nums[i] = v\n            a1, b1, c1 = check(i - 1), check(i), check(i + 1)\n            if a != a1:\n                if a1:\n                    t.add(i - 1, 1)\n                else:\n                    t.add(i - 1, -1)\n            if b != b1:\n                if b1:\n                    t.add(i, 1)\n                else:\n                    t.add(i, -1)\n            if c != c1:\n                if c1:\n                    t.add(i + 1, 1)\n                else:\n                    t.add(i + 1, -1)\n            \n        res = []\n            \n        for a, b, c in queries:\n            if a == 1:\n                if b  >= c - 1:\n                    res.append(0)\n                    continue\n                v = t.pre(c - 1) - t.pre(b)\n                res.append(v)\n            if a == 2:\n                update(b, c)\n        return res\n                ",
    "submit_ts": 1718508826.0
}