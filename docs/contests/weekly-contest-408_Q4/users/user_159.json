{
    "username": "Rohit2593",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles1) {\n        int n = circles1.size();\n\n        vector<vector<long long>> circles;\n\n        for(auto i: circles1)\n            circles.push_back({i[0], i[1], i[2]});\n\n        function<bool(int, int)> intersect = [&](int a, int b) {\n            long long aa = circles[a][2];\n            long long bb = circles[b][2];\n\n            long long sq = (aa * aa) + (bb * bb) + (2ll * aa * bb);\n\n            long long dist1 = circles[a][0] - circles[b][0];\n            dist1 *= dist1;\n\n            long long dist2 = circles[a][1] - circles[b][1];\n            dist2 *= dist2;\n\n            long long dist = dist1 + dist2;\n\n            return dist <= sq;\n        };\n\n        vector<int> par(n + 4);\n        vector<int> sz(n + 4);\n\n        for(int i = 0; i<n + 4; i++) {\n            par[i] = i;\n            sz[i] = 1;\n        }\n\n        function<int(int)> findPar = [&](int p) {\n            if(par[p] == p)\n                return p;\n\n            return par[p] = findPar(par[p]);\n        };\n\n        function<void(int, int)> unionSet = [&](int a, int b) {\n            a = findPar(a);\n            b = findPar(b);\n\n            if(a == b)\n                return;\n\n            if(sz[a] < sz[b])\n                swap(a, b);\n\n            sz[a] += sz[b];\n            par[b] = a;\n        };\n\n        function<bool(int, int)> isSame = [&](int a, int b) {\n            return findPar(a) == findPar(b);\n        };\n\n        for(int i = 0; i<n; i++) {\n            for(int j = i+1; j<n; j++) {\n                if(intersect(i, j)) {   \n                    unionSet(i, j);\n                }\n            }\n\n            if(circles[i][0] <= circles[i][2])\n                unionSet(i, n);\n\n            if(circles[i][1] <= circles[i][2])\n                unionSet(i, n+3);\n\n            if((Y - circles[i][1]) <= circles[i][2])\n                unionSet(i, n+1);\n            \n            if((X - circles[i][0]) <= circles[i][2])\n                unionSet(i, n + 2);\n        }\n\n        if(isSame(n, n+3) || isSame(n+1, n+2) || isSame(n, n+2) || isSame(n+1, n+3))\n            return false;\n\n        return true;\n    }\n};",
    "submit_ts": "1722137134",
    "subm_id": "1335755145"
}