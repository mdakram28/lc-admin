{
    "username": "Abhi242",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> child;\n    int cost=INT_MAX;\n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n    Trie() {\n        root = new TrieNode();\n    }\n    void insert(const string& word, int cost) {\n        TrieNode* node = root;\n        for (auto c : word) {\n            if (!node->child.count(c)) {\n                node->child[c] = new TrieNode();\n            }\n            node = node->child[c];\n        }\n        node->cost = min(node->cost, cost);\n    }\n};\n\nclass Solution {\npublic:\n    // unordered_map<string,int> mp;\n    // int helper(string target,int i,int j){\n    //     if(i==target.length() && j==target.length()){\n    //         return 0;\n    //     }\n    //     if(i>=target.length() || j>=target.length()){\n    //         return 1e6;\n    //     }\n    //     int ans=1e6;\n    //     if(mp[target.substr(i,j+1)]){\n    //         cout<<i<<\" \"<<j<<endl;\n    //         ans=min(ans,mp[target.substr(i,j+1)]+helper(target,j+1,j+1));\n    //     }\n    //     ans=min(ans,helper(target,i,j+1));\n    //     return ans;\n    // }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        Trie use;\n\n        for (int i = 0; i < words.size(); ++i) {\n            use.insert(words[i], costs[i]);\n        }\n\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == INT_MAX){ \n                continue;\n            }\n            TrieNode* use2 = use.root;\n            for (int j = i; j < n; ++j) {\n                if (!use2->child.count(target[j])) break;\n                use2 = use2->child[target[j]];\n                if (use2->cost != INT_MAX) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + use2->cost);\n                }\n            }\n        }\n        if(dp[n]==INT_MAX){\n            return -1;\n        }\n        return dp[n];\n    }\n};",
    "submit_ts": "1720323281",
    "subm_id": "1312371772"
}