{
    "username": "Pranjal Singh",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        int i=0,j=0;\n        ll pre[n+1][2];\n        pre[0][0]=0,pre[0][1]=0;\n        for(int i=1;i<=n;i++){\n            pre[i][0]=pre[i-1][0];\n            pre[i][1]=pre[i-1][1];\n            if(s[i-1]=='0') pre[i][0]++;\n            else pre[i][1]++;\n        }\n        vector<int> a(n);\n        for(int i=0;i<n;i++){\n            int l=i,r=n-1;\n            while(l<=r){\n                int mid=(l+r)/2;\n                if(pre[mid+1][0]-pre[i][0]<=k||pre[mid+1][1]-pre[i][1]<=k){\n                    a[i]=mid;\n                    l=mid+1;\n                }else r=mid-1;\n            }\n            // cout<<a[i]<<\" \";\n        }\n        // cout<<\"\\n\";\n\n        vector<ll> pre1(n+1,0);\n        for(int i=1;i<=n;i++) pre1[i]=pre1[i-1]+a[i-1]+1;\n        vector<ll> res;\n        for(auto v:queries){\n            ll l=v[0],r=v[1];\n            int p=r;\n            int lo=l,hi=r;\n            while(lo<=hi){\n                int mid=(lo+hi)/2;\n                if(a[mid]>=r){\n                    p=mid;\n                    hi=mid-1;\n                }else lo=mid+1;\n            }\n\n            l++;p++;r++;\n            cout<<l<<\" \"<<p<<\" \"<<r<<'\\n';\n\n            ll ans=0;\n            if(p>l){\n                ll len=p-l;\n                // cout<<pre1[p-1]<<'\\n';\n                ans+=pre1[p-1]-pre1[l-1]+len;\n                // cout<<ans<<'\\n';\n                ans-=((len+1)*len)/2 + (l-1)*len;\n            }\n            // cout<<ans<<'\\n';\n            ll len=(r-p+1);\n            ans+=r*len+len;\n            ans-=((len+1)*len)/2 + (p-1)*len;\n            res.push_back(ans);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723953086",
    "subm_id": "1359812002"
}