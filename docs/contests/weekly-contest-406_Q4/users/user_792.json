{
    "username": "aka_kovid_juyal",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        long long ans = 0;\n\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        int h = 1, v = 1;\n\n        int i = 0, j = 0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] *1ll* v;\n\n\n                h++;\n                i++;\n            } else {\n                ans += verticalCut[j] *1ll* h;\n\n                v++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            ans += horizontalCut[i] *1ll* v;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            ans += verticalCut[j] *1ll* h;\n            j++;\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720925546",
    "subm_id": "1320258315"
}