{
    "username": "adhoc",
    "submission": "class Solution {\n    class Pair {\n        public int row;\n        public int col;\n        public int value;\n        public Pair(int row, int col, int value) {\n            this.row = row;\n            this.col = col;\n            this.value = value;\n        }\n    }\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        List<Pair> ls = new ArrayList<>();\n        for(int i=0;i<m;i++) {\n            for(int j=0;j<n;j++) {\n                ls.add(new Pair(i, j, board[i][j]));\n            }\n        }\n        Collections.sort(ls, (a,b) -> b.value - a.value);\n        long max = Long.MIN_VALUE;\n        for(int i=0;i< m*n-2; i++) {\n            Pair A = ls.get(i);\n            for(int j=i+1; j < m*n-1;j++) {\n                Pair B = ls.get(j);\n            if(max > (long)A.value + (long)B.value + (long)B.value) {\n                        break;\n            }\n            for(int k=j+1; k < m*n; k++) {\n                    \n                    \n                    Pair C = ls.get(k);\n                    if(A.row != B.row && B.row != C.row && C.row != A.row &&  A.col != B.col && B.col != C.col && A.col!=C.col) {\n                        max = Math.max(max, (long)A.value + (long)B.value + (long)C.value);\n                        break;\n                    }\n                    if(max > (long)A.value + (long)B.value + (long)C.value) {\n                        break;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n}",
    "submit_ts": "1723910092",
    "subm_id": "1359217084"
}