{
    "username": "2021ugec091",
    "submission": "class Solution {\npublic:\n   typedef  long long int  ll ;\n\n    long long minimumCost(int m, int n, vector<int>& horizontalCuts , vector<int>& verticalCuts)\n    {\n          sort(horizontalCuts.begin(), horizontalCuts.end(), greater<int>());\n         sort(verticalCuts.begin(), verticalCuts.end(), greater<int>());\n    \n    int h = 0, v = 0;  \n    int hCuts = 1, vCuts = 1; \n    ll totalCost = 0;\n    \n   \n    while (h < horizontalCuts.size() && v < verticalCuts.size()) {\n        if (horizontalCuts[h] >= verticalCuts[v]) {\n            totalCost += horizontalCuts[h] *1LL* vCuts;\n            hCuts++;\n            h++;\n        } else {\n            totalCost += verticalCuts[v] *1LL* hCuts;\n            vCuts++;\n            v++;\n        }\n    }\n    \n   \n    while (h < horizontalCuts.size()) {\n        totalCost += horizontalCuts[h] *1LL* vCuts;\n        hCuts++;\n        h++;\n    }\n    \n \n    while (v < verticalCuts.size()) {\n        totalCost += verticalCuts[v] *1LL* hCuts;\n        vCuts++;\n        v++;\n    }\n    \n    return totalCost;\n    \n    }\n};",
    "submit_ts": "1720925750",
    "subm_id": "1320264980"
}