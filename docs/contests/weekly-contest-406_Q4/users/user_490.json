{
    "username": "Shiya_Shivani",
    "submission": "class Solution {\npublic:\ntypedef long long ll;\nint ultra=1e9+7;\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int hSegments = 1, vSegments = 1;\n        long long totalCost = 0;\n        ll meraa=0;\n        int suru = 0, khtm = 0;\n\n        while (suru < horizontalCut.size() && khtm < verticalCut.size()) {\n            if (horizontalCut[suru] >= verticalCut[khtm]) {\n                totalCost += (long long)horizontalCut[suru] * vSegments;\n                suru++;\n                hSegments++;\n            } else {\n                totalCost += (long long)verticalCut[khtm] * hSegments;\n                khtm++;\n                vSegments++;\n            }\n        }\n\n        while (suru < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[suru] * vSegments;\n            suru++;\n            hSegments++;\n        }\n\n        while (khtm < verticalCut.size()) {\n            totalCost += (long long)verticalCut[khtm] * hSegments;\n            khtm++;\n            vSegments++;\n        }\n\n        return totalCost; \n    }\n};",
    "submit_ts": "1720925574",
    "subm_id": "1320259244"
}