{
    "username": "andy-lc",
    "submission": "import java.lang.RuntimeException\nimport kotlin.math.max\n\nclass Segment(val L: Int, val R: Int) {\n    var left: Segment? = null\n    var righ: Segment? = null\n    var fullMax = 0L\n    var noLeftMostMax = 0L\n    var noRighMostMax = 0L\n    var noBothMax = 0L\n    val MM = 1_000_000_007\n\n    init {\n        if (L >= R) {\n            throw RuntimeException(\"L >= R: ${L}, ${R}\")\n        }\n        val M = L + (R - L) / 2\n        if (L < M) {\n            left = Segment(L, M)\n            righ = Segment(M, R)\n        }\n    }\n\n    fun set(i: Int, v: Int) {\n        if (i !in L..<R) {\n            throw RuntimeException(\"i !in L..<R\")\n        }\n        if (R - L == 1) {\n            fullMax = max(v.toLong(), 0) % MM\n            return\n        }\n        val M = L + (R - L) / 2\n        if (i < M) {\n            left!!.set(i, v)\n        } else {\n            righ!!.set(i, v)\n        }\n        fullMax = max(left!!.fullMax + righ!!.noLeftMostMax, left!!.noRighMostMax + righ!!.fullMax)\n        noLeftMostMax = max(left!!.noBothMax + righ!!.fullMax, left!!.noLeftMostMax + righ!!.noLeftMostMax)\n        noRighMostMax = max(left!!.fullMax + righ!!.noBothMax, left!!.noRighMostMax + righ!!.noRighMostMax)\n        noBothMax = max((left!!.noBothMax + righ!!.noRighMostMax), (left!!.noLeftMostMax + righ!!.noBothMax))\n        fullMax = max(fullMax, 0) % MM\n        noLeftMostMax = max(noLeftMostMax, 0) % MM\n        noRighMostMax = max(noRighMostMax, 0) % MM\n        noBothMax = max(noBothMax, 0) % MM\n    }\n}\n\nclass Solution {\n    fun maximumSumSubsequence(nums: IntArray, queries: Array<IntArray>): Int {\n        val seg = Segment(0, nums.size)\n        for (i in nums.indices) {\n            seg.set(i, nums[i]);\n        }\n        var ans = 0L\n        for (arr in queries) {\n            seg.set(arr[0], arr[1])\n            ans += seg.fullMax\n            ans %= 1_000_000_007L\n        }\n        return ans.toInt()\n    }\n}",
    "submit_ts": "1716695598",
    "subm_id": "1268142737"
}