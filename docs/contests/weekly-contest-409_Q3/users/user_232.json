{
    "username": "johnzhengguo",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        \n        int m = queries.length;\n        \n        TreeSet<Integer> set = new TreeSet<>();\n        for (int city = 0; city < n; city += 1) {\n            set.add(city);\n        }\n        \n        int setSize = n;\n        \n        int[] res = new int[m];\n        for (int mi = 0; mi < m; mi+=1) {\n            \n            int[] query = queries[mi];\n            int city1 = query[0];\n            int city2 = query[1];\n            \n            Integer city1Next = set.higher(city1);\n            while (city1Next != null && city1Next < city2) {\n                set.remove(city1Next);\n                setSize -= 1;\n                city1 = city1Next;\n                city1Next = set.higher(city1);\n            }\n            \n            res[mi] = setSize - 1;\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1722740836",
    "subm_id": "1343729951"
}