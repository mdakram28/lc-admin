{
    "username": "zwling",
    "submission": "const int N = 5e4 + 10;\n#define ls (p << 1)\n#define rs (p << 1 | 1)\n#define mid ((l + r) / 2)\n\nstruct Node {\n    int mx;\n    int tag;\n} tr[N << 2];\n\nvoid pushup(int p) {\n    tr[p].mx = max(tr[ls].mx, tr[rs].mx);\n}\nvoid build(int p, int l, int r) {\n    tr[p].tag = -1;\n    tr[p].mx = 0;\n    if (l == r) {\n        return;\n    }\n    build(ls, l, mid), build(rs, mid + 1, r);\n}\n\nvoid apply(int p, int x) {\n    tr[p].mx = x;\n    tr[p].tag = x;\n}\n\nvoid pushdown(int p) {\n    if (tr[p].tag != -1) {\n        apply(ls, tr[p].tag), apply(rs, tr[p].tag);\n        tr[p].tag = -1;\n    }\n}\nvoid modify(int p, int l, int r, int ql, int qr, int v) {\n    if (ql > qr) return;\n    if (ql <= l && r <= qr) {\n        apply(p, v);\n        return;\n    }\n    pushdown(p);\n    if (ql <= mid) modify(ls, l, mid, ql, qr, v);\n    if (qr > mid) modify(rs, mid + 1, r, ql, qr, v);\n    pushup(p);\n}\n\nint query(int p, int l, int r, int ql, int qr) {\n    if (ql > qr) return 0;\n    if (ql <= l && r <= qr) {\n        return tr[p].mx;\n    }\n    pushdown(p);\n    int mx = 0;\n    if (ql <= mid) mx = max(mx, query(ls, l, mid, ql, qr));\n    if (qr > mid) mx = max(mx, query(rs, mid + 1, r, ql, qr));\n    return mx;\n}\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        set<pair<int, int>> s;\n        int lim = 5e4 + 10;\n        s.emplace(0, lim);\n        build(1, 0, lim - 1);\n        modify(1, 0, lim - 1, 0, lim - 1, lim);\n        vector<bool> res;\n        for (auto q : queries) {\n            if (q[0] == 1) {\n                int x = q[1];\n                auto it = prev(s.upper_bound(make_pair(x, -1)));\n                int l = it->first, r = it->second;\n                s.erase(it);\n                s.emplace(l, x), s.emplace(x, r);\n                modify(1, 0, lim - 1, l, x - 1, x - l);\n                modify(1, 0, lim - 1, x, r - 1, r - x);\n            } else if (q[0] == 2) {\n                int x = q[1], sz = q[2];\n                auto it = prev(s.upper_bound(make_pair(x, -1)));\n                int l = it->first, r = it->second;\n                int ans = x - l;\n                if (l != 0) {\n                    ans = max(ans, query(1, 0, lim - 1, 0, l - 1));\n                }\n                res.push_back(sz <= ans);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1716650031",
    "subm_id": "534769206"
}