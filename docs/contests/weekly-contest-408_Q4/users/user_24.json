{
    "username": "cai_lw",
    "submission": "class Solution {\n    struct UFS{\n        vector<int> par,rnk;\n        UFS(int n):par(n,-1),rnk(n,0){}\n        int find(int i){\n            int p=par[i];\n            if(p==-1)\n                return i;\n            return par[i]=find(p);\n        }\n        bool same(int i,int j){\n            return find(i)==find(j);\n        }\n        void merge(int i,int j){\n            i=find(i);\n            j=find(j);\n            if(i==j)\n                return;\n            if(rnk[i]<rnk[j])\n                swap(i,j);\n            if(rnk[i]==rnk[j])\n                rnk[i]++;\n            par[j]=i;\n        }\n    };\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        UFS ufs(n+2);\n        for(int i=0;i<n;i++){\n            auto &v=circles[i];\n            int x=v[0],y=v[1],r=v[2];\n            if(y<=r||x+r>=X)\n                ufs.merge(i,n);\n            if(x<=r||y+r>=Y)\n                ufs.merge(i,n+1);\n            for(int j=i+1;j<n;j++){\n                auto &w=circles[j];\n                int x2=w[0],y2=w[1],r2=w[2];\n                int dx=x-x2,dy=y-y2;\n                if(1ll*dx*dx+1ll*dy*dy<=1ll*(r+r2)*(r+r2))\n                    ufs.merge(i,j);\n            }\n        }\n        return !ufs.same(n,n+1);\n    }\n};",
    "submit_ts": "1722135298",
    "subm_id": "1335696922"
}