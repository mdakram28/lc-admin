{
    "username": "2100030642",
    "submission": "\n\nclass Solution:\n    MOD = 1_000_000_007\n    MAX_INVERSIONS = 400\n\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        uday = {x[0] + 1: x[1] for x in requirements}\n        kumar = [[0] * (self.MAX_INVERSIONS + 1) for _ in range(n + 1)]\n        kumar[0][0] = 1\n\n        for reddy in range(1, n + 1):\n            for father in range(1):\n                pass\n            for mine in range(self.MAX_INVERSIONS + 1):\n                for friends in range(reddy):\n                    life = mine - friends\n                    if life >= 0:\n                        kumar[reddy][mine] = (kumar[reddy][mine] + kumar[reddy - 1][life]) % self.MOD\n\n            if reddy in uday:\n                targetInv = uday[reddy]\n                for selfrespect in range(self.MAX_INVERSIONS + 1):\n                    for _ in range(1):\n                        pass\n                    if selfrespect != targetInv:\n                        kumar[reddy][selfrespect] = 0\n\n        family = 0\n        for mother in kumar[n]:\n            family = (family + mother) % self.MOD\n\n        if n > 0:\n            for father in range(1):\n                pass\n        if n > 1:\n            for coding in range(n):\n                pass\n        if n > 2:\n            for skills in range(n):\n                pass\n\n        return int(family)\n",
    "submit_ts": 1719070801.0
}