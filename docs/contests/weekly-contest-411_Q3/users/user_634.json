{
    "username": "steve13814",
    "submission": "class Solution {\n    string Gen1(int n) {\n        // 1 -> 9, 99, 999, 9999\n        // 3 -> 9, 99, 999, 9999\n        // 9 -> 9, 99, 999, 9999        \n        return string(n, '9');\n    }\n    string Gen2(int n) {\n        // 2 -> 8, 88, 898, 8998\n        if (n == 1) {\n            return string(1, '8');\n        }\n        return string(1, '8') + string(n - 2, '9') + string(1, '8');\n    }\n    string Gen4(int n) {\n        // 4 -> 8, 88, 888, 8888, 88988, 889988\n        if (n <= 4) {\n            return string(n, '8');\n        }\n        return string(2, '8') + string(n - 4, '9') + string(2, '8');\n    }\n    string Gen5(int n) {\n        // 5 -> 5, 55, 595, 5995\n        if (n == 1) {\n            return string(1, '5');\n        }\n        return string(1, '5') + string(n - 2, '9') + string(1, '5');\n    }\n    string Gen6(int n) {\n        // 6 -> 6, 66, 888, 8778, 89898, 897798, 8998998, 89977998\n        if (n <= 2) {\n            return string(n, '6');\n        }\n        if (n % 2 == 1) {\n            return string(1, '8') + string((n - 3) / 2, '9') + string(1, '8') + string((n - 3) / 2, '9') + string(1, '8');\n        } else {\n            return string(1, '8') + string((n - 4) / 2, '9') + string(2, '7') + string((n - 4) / 2, '9') + string(1, '8');\n        }\n    }\n    string Gen7(int n) {\n        // 7 -> 7, 77, 959, 9779, 99799, 999999\n        if (n <= 2) {\n            return string(n, '7');\n        }\n        for (int i = 9; i > 0; i--) {\n            int res = 0;\n            if (n % 2 == 1) {\n                for (int j = 0; j < n / 2; j++) {\n                    res = (res * 10 + 9) % 7;\n                }\n                res = (res * 10 + i) % 7;\n                for (int j = 0; j < n / 2; j++) {\n                    res = (res * 10 + 9) % 7;\n                }\n                if (res == 0) {\n                    return string(n / 2, '9') + string(1, i + '0') + string(n / 2, '9');\n                }\n            } else {\n                for (int j = 0; j < n / 2 - 1; j++) {\n                    res = (res * 10 + 9) % 7;\n                }\n                res = (res * 10 + i) % 7;\n                res = (res * 10 + i) % 7;\n                for (int j = 0; j < n / 2 - 1; j++) {\n                    res = (res * 10 + 9) % 7;\n                }\n                if (res == 0) {\n                    return string(n / 2 - 1, '9') + string(2, i + '0') + string(n / 2 - 1, '9');\n                }\n            }\n        }\n        return \"-1\";\n    }\n    string Gen8(int n) {\n        // 8 -> 8, 88, 888, 8888, 88888, 8889888, 88899888\n        if (n <= 5) {\n            return string(n, '8');\n        }\n        return string(3, '8') + string(n - 6, '9') + string(3, '8');\n    }\npublic:\n    string largestPalindrome(int n, int k) {\n        switch (k) {\n            case 1:\n            case 3:\n            case 9:\n                return Gen1(n);\n            case 2:\n                return Gen2(n);\n            case 4:\n                return Gen4(n);\n            case 5:\n                return Gen5(n);\n            case 6:\n                return Gen6(n);\n            case 7:\n                return Gen7(n);\n            case 8:\n                return Gen8(n);\n        }\n        return \"-1\";\n    }\n};",
    "submit_ts": "1723952963",
    "subm_id": "1359808965"
}