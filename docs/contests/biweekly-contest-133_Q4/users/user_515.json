{
    "username": "Shivendra_512",
    "submission": "from collections import defaultdict\n\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MOD = 1_000_000_007\n        MAX_INV = 400\n\n        r = defaultdict(int)\n        for req in requirements:\n            r[req[0] + 1] = req[1]\n\n        pc = [[0] * (MAX_INV + 1) for _ in range(n + 1)]\n        pc[0][0] = 1\n\n        for length in range(1, n + 1):\n            for inv in range(0, MAX_INV + 1):\n                for pos in range(length):\n                    prev_inv = inv - pos\n                    if prev_inv >= 0:\n                        pc[length][inv] = (pc[length][inv] + pc[length - 1][prev_inv]) % MOD\n\n            if length in r:\n                target_inv = r[length]\n                for inv in range(0, MAX_INV + 1):\n                    if inv != target_inv:\n                        pc[length][inv] = 0\n\n        res = sum(pc[n]) % MOD\n        return res\n",
    "submit_ts": 1719070287.0
}