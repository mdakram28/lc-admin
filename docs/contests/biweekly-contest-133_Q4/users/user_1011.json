{
    "username": "ArNo_",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int mod = 1e9+7;\n        unordered_map<int, int> m;\n        for (int i=0;i<requirements.size();i++){\n            m[requirements[i][0] + 1] = requirements[i][1];\n        }\n\n        vector<vector<int>> perm(n + 1, vector<int>(400 + 1, 0));\n        perm[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= 400; j++) {\n                for (int k = 0; k < i; k++) {\n                    int res = j - k;\n                    if (res >= 0) {\n                        perm[i][j] = (perm[i][j] + perm[i - 1][res]) % mod;\n                    }\n                }\n            }\n            if (m.count(i) > 0) {\n                int prevcount = m[i];\n                for (int k = 0; k <= 400; k++) {\n                    if (k != prevcount) {\n                        perm[i][k] = 0;\n                    }\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i <= 400; i++) {\n            ans = (ans + perm[n][i]) % mod;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1719071790",
    "subm_id": "1296854217"
}