{
    "username": "anuragdw0710",
    "submission": "\n#define ll long long\nstruct Segtree2{\n    vector<ll> t, lazy, sz;\n    Segtree2(ll n) {\n        t.assign(4*n, 0);\n        lazy.assign(4*n, 0);\n        for(ll i=0;i<4*n;i++){\n          lazy[i] = -1;\n        }\n        sz.assign(4*n, 0);\n    }\n    void build(ll v, ll tl, ll tr){\n        if(tl == tr){\n            t[v] = 1;\n            sz[v] = 1;\n        }\n        else{\n            ll tm = (tl + tr)/2;\n            build( v*2, tl, tm);\n            build( v*2+1, tm+1, tr);\n            t[v] = t[v*2] + t[v*2+1];\n            sz[v] = sz[v*2] + sz[v*2+1];\n        }\n    }\n    void push(ll v){\n      if(lazy[v]==-1) return;\n        t[v*2] = sz[v*2] * lazy[v];\n        lazy[v*2] = lazy[v];\n        t[v*2+1] = sz[v*2+1] * lazy[v];\n        lazy[v*2+1] = lazy[v];\n        lazy[v] = -1;\n    }\n    void update(ll v, ll tl, ll tr, ll l, ll r, ll chg){\n        if(l > r){\n            return;\n        }\n        if(l <= tl && tr <= r){\n            t[v] = sz[v] * chg;\n            lazy[v] = chg;\n        } else {\n            push(v);\n            ll tm = (tl + tr)/2;\n            update(v*2, tl, tm, l, min(r, tm), chg);\n            update(v*2+1, tm+1, tr, max(l, tm+1), r, chg);\n            t[v] = t[v*2]+t[v*2+1];\n        }\n    }\n    ll query(ll v, ll tl, ll tr, ll l, ll r) {\n        if(l>r) return 0;\n        if(l <= tl && tr <= r){\n            return t[v];\n        }\n        push(v);\n        ll tm = (tl + tr)/2;\n        return query(v*2, tl, tm, l, min(r, tm)) + query(v*2+1, tm+1, tr, max(l, tm+1), r);\n    }\n};\n\n\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> aa(n),bb(n);\n        for(int i=0;i<n;i++){\n            aa[i]=n-i-1;\n            bb[i]=i;\n        }\n        Segtree2 seg(n-2);\n        seg.build(1,0,n-2);\n        // seg.query(1,0,n-1,l,r);\n        // seg.update(1,0,n-1,l,r,val);  [l,r]\n        vector<int> ans;\n        int ans1=n-1;\n        for(int i=0;i<q.size();i++){\n            seg.update(1,0,n-2,q[i][0]+1,q[i][1]-1,0);\n            ans.push_back(seg.query(1,0,n-2,0,n-2));\n            \n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1722743295",
    "subm_id": "1343788725"
}