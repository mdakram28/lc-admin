{
    "username": "ZEON3099",
    "submission": "class Solution {\npublic:\n    long long minNumberOperations(vector<int>& arr) {\n        \n        int n = arr.size();\n        if(n==1)    return arr[0];\n        vector<int> calc;\n        calc.push_back(arr[0]);\n        for(int i = 1 ; i < n-1 ; ++i)        \n            if((arr[i+1]<=arr[i] && arr[i]>=arr[i-1])||(arr[i+1]>=arr[i] && arr[i]<= arr[i-1]))\n            {\n                if(arr[i]!=calc.back())calc.push_back(arr[i]);\n            }\n        if(calc.size()==1 || calc.back()!=arr[n-1])calc.push_back(arr[n-1]);\n        \n        \n        if(calc[0]<=calc[1])\n            calc[0]=0;\n        else\n            calc.insert(calc.begin(),0);\n\n        int m = calc.size();\n        if(calc[m-1]<=calc[m-2])\n            calc[m-1]=0;\n        else\n            calc.push_back(0);\n\n        set<int> rem;\n        for(int i = 1 ; i < calc.size()-1 ; ++i)\n            if(!((calc[i]<calc[i+1]&&calc[i]<calc[i-1])||(calc[i]>calc[i+1]&&calc[i]>calc[i-1])))\n                rem.insert(i);\n\n        vector<int> calcc;\n        for(int i = 0 ; i < calc.size() ; ++i)\n            if(!rem.count(i))\n                calcc.push_back(calc[i]);\n        \n\n        long long ans = 0,mn=INT_MAX;\n        for(int i = 1 ; i < calcc.size()-1 ; ++i)\n        {\n            if(calcc[i]>calcc[i-1]&&calcc[i]>calcc[i+1])\n            {\n                ans += abs(calcc[i]-calcc[i+1]);\n            }\n        }\n        return ans;\n    }\n    long long minimumOperations(vector<int>& a, vector<int>& b) {\n        \n        int n = a.size();\n        \n        for(int i = 0 ; i < n ; ++i){\n            if(a[i]>b[i])\n                a[i]-=b[i],\n                b[i] = 0;\n            else if(a[i]<b[i])\n                b[i]-=a[i],\n                a[i]=0;\n            else\n                a[i]=0,\n                b[i]=0;\n        }\n        \n        return minNumberOperations(a) + minNumberOperations(b);\n        \n    }\n};",
    "submit_ts": "1721530294",
    "subm_id": "1327929039"
}