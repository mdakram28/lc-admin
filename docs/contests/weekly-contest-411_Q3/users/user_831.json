{
    "username": "DDD",
    "submission": "class Solution {\npublic:\n    int mod(string& s, int k){\n        int ret = 0;\n        for (char c: s)\n            ret = (ret * 10 + c - '0') % k;\n        return ret;\n    }\n    \n    string largestPalindrome(int n, int k) {\n        string ret(n, '9');\n        if (n <= 2){\n            for (int i = 9; i >= 0; --i){\n                ret[0] = ret[n - 1] =  i + '0';\n                if (mod(ret, k) == 0) return ret;\n            }\n        }\n        if(n <= 4){\n            for (int i = 9; i >= 0; --i)\n            for (int j = 9; j >= 0; --j){\n                ret[0] = ret[n - 1] = i + '0';\n                ret[1] = ret[n - 2] = j + '0';\n                if (mod(ret, k) == 0) return ret;\n            }\n        }\n        if(n <= 6){\n            for (int i = 9; i >= 0; --i)\n            for (int j = 9; j >= 0; --j)\n            for (int x = 9; x >= 0; --x){\n                ret[0] = ret[n - 1] = i + '0';\n                ret[1] = ret[n - 2] = j + '0';\n                ret[2] = ret[n - 3] = x + '0';\n                if (mod(ret, k) == 0) return ret;\n            }\n        }\n        if (k == 2){\n            ret[0] = ret[n - 1] = '8';\n        }\n        if(k == 4){\n            ret[0] = ret[n - 1] = ret[1] = ret[n - 2] = '8';\n        }\n        if (k == 5){\n            ret[0] = ret[n - 1] = '5';\n        }\n        if(k == 6){\n            ret[0] = ret[n - 1] = '8';\n            if (n % 2)\n                ret[n / 2] = '8';\n            else\n                ret[n / 2 - 1] = ret[n / 2] = '7';\n        }\n        if (k == 7){\n            for (int a = 9; a >= 0; --a)\n            for (int b = 9; b >= 0; --b)\n            for (int c = 9; c >= 0; --c){\n            if(n % 2){\n                ret[n / 2 - 2] = ret[n / 2 + 2] = a + '0';\n                ret[n / 2 - 1] = ret[n / 2 + 1] = b + '0';\n                ret[n / 2] = c + '0';\n            }\n            else{\n                ret[n / 2 - 3] = ret[n / 2 + 2] = a + '0';\n                ret[n / 2 - 2] = ret[n / 2 + 1] = b + '0';\n                ret[n / 2 - 1] = ret[n / 2] = c + '0';\n            }\n            if (mod(ret, k) == 0) return ret;\n            }\n        }\n        if (k == 8){\n            ret[0] = ret[n - 1] = ret[1] = ret[n - 2] = ret[2] = ret[n - 3] = '8';\n        }\n        return ret;\n    }    \n};",
    "submit_ts": "1723953599",
    "subm_id": "1359826127"
}