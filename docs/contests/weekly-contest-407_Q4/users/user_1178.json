{
    "username": "nicopriotto",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for(int i = 0; i<n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long ans = 0;\n        \n        for(int i = 0; i<n; i++) {\n            int currMax = 0;\n            while(i < n && diff[i] == 0) i++;\n            if(i == n) return ans;\n            boolean positive = diff[i] > 0;\n            if(positive) {\n                currMax = diff[i++];\n                while(i < n && diff[i] > 0) {\n                    if(currMax > diff[i]) {\n                        ans += currMax - diff[i];\n                        currMax = diff[i];\n                    } else currMax = diff[i];\n                    i++;\n                }\n                i--;\n                ans += currMax;\n            } else if (!positive) {\n                currMax = -diff[i++];\n                while(i < n && diff[i] < 0) {\n                    if(currMax > -diff[i]) {\n                        ans += currMax + diff[i];\n                        currMax = -diff[i];\n                    } else currMax = -diff[i];\n                    i++;\n                }\n                i--;\n                ans += currMax;\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721531901",
    "subm_id": "1327972767"
}