{
    "username": "littlemxrush",
    "submission": "mod = 10**9 + 7\n\n\n# f[0][0] = 1\n# for i in range(1, 301):\n#     f[i][0] = 1\n#     for j in range(1, 401):\n#         for k in range(0, j+1):\n#             f[i][j] += f[i-1][j-k]\n#             f[i][j] %= mod\nclass Solution:\n    def numberOfPermutations(self, n: int, req: List[List[int]]) -> int:\n        f = [[0] * 401 for _ in range(n+1)]\n        f[0][0] = 1\n        req.sort(key=lambda x:x[0])\n        req_i = 0\n        max_inv = 0\n        # print(req)\n        for i in range(1, n+1):\n            # print(req_i, sum_inv)\n            if req_i < len(req) and req[req_i][0] == i-1:\n                cnt = req[req_i][1]\n                \n                for j in range(min(i, cnt+1)):\n                    f[i][cnt] += f[i-1][cnt-j]\n                    f[i][cnt] %= mod\n                req_i += 1\n                max_inv = max(cnt, max_inv)\n                # print(f\"has cons, f[{i}][{cnt}] = {f[i][cnt]}\")\n            \n            else:\n                top = max_inv + req[req_i][1] if req_i < len(req) else 400\n                top = min(400, top)\n                for j in range(max_inv, top+1):  \n                    if j == 0:\n                        f[i][j] = 1\n                        continue\n                    for k in range(min(i, j+1)):\n                        f[i][j] += f[i-1][j-k]\n                        f[i][j] %= mod\n                    \n                    # print(f\"no cons f[{i}][{j}] = {f[i][j]}\")\n        \n        return sum(f[n][:]) % mod",
    "submit_ts": "1719071024",
    "subm_id": "1296837341"
}