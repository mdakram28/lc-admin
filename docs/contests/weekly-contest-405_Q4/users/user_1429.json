{
    "username": "Ravi_2021",
    "submission": "struct TrieNode{\n    int cost;\n    unordered_map <char,TrieNode*>child;\n    TrieNode(){\n        cost = INT_MAX;\n    }\n};\nclass Trie{\n    public:\n      TrieNode* root;\n       Trie(){\n          root=new TrieNode();\n       }\n       void insert(int ct,string &s){\n           TrieNode* node=root;\n           for(auto c:s){\n              if(node->child.find(c)==node->child.end()){\n               node->child[c]=new TrieNode();\n              }\n              node = node->child[c];\n           }\n           node->cost=min(node->cost,ct);\n       }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        int n=t.size();\n        vector<int>dp(n+1,INT_MAX);\n        dp[0]=0;\n        Trie tr;\n        int i=0;\n        for(auto s:w){\n            tr.insert(c[i++],s);\n        }\n        for(int i=0;i<n;i++){\n            TrieNode* nd = tr.root;\n            if(dp[i]==INT_MAX)continue;\n            for(int j=i;j<n;j++){\n                if(nd->child.find(t[j])!=nd->child.end()){\n                    nd = nd->child[t[j]];\n                    if(nd->cost!=INT_MAX)dp[j+1]=min(dp[j+1],dp[i]+nd->cost);\n                }\n                else break;\n            }\n        }\n       if(dp[n]==INT_MAX)return -1;\n       return dp[n];\n    }\n};",
    "submit_ts": "1720324476",
    "subm_id": "1312400440"
}