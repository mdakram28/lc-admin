{
    "username": "omuraisu",
    "submission": "from typing import *\n\nmodulo = int(1e9 + 7)\n\nclass Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [[0] * 1001 for i in range(n)]\n\n        # step.1 init\n        for i in range(nums[0] + 1):\n            dp[0][i] = 1\n        \n        # step.2 dp\n        # prev_1 <= cur_1 && prev_2 >= cur_2\n        # prev <= cur, nums[i - 1] - prev >= nums[i] - cur\n        # cur >= prev, cur + nums[i - 1] - nums[i] >= prev\n        # prev <= min(cur, cur + nums[i - 1] - nums[i]) := threshold\n\n        #dp[i][cur] = sum(dp[i - 1][0...threshold])\n\n        for i in range(1, n):\n            # accumulate\n            for j in range(1, nums[i - 1] + 1):\n                dp[i - 1][j] = (dp[i - 1][j] + dp[i - 1][j - 1]) % modulo\n            for current in range(nums[i] + 1):\n                    threshold = min(current, current + nums[i - 1] - nums[i])\n                    if threshold < 0:\n                        continue\n                    threshold = min(threshold, nums[i - 1])\n                    dp[i][current] = dp[i - 1][threshold]\n\n        # step.3 answer\n        return sum(dp[-1]) % modulo\n",
    "submit_ts": "1723344843",
    "subm_id": "1351543205"
}