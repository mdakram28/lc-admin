{
    "username": "thirdbest",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    ll f (ll n) {return n * (n - 1) / 2; }\n    long long countSubarrays(vector<int>& a, int k) {\n        ll n = size(a), ans = 0;\n        vector<ll> p(32, -1);\n        for (auto i = 0; i < n; ++i) {\n            for (auto j = 0; j < 32; ++j) {\n                if ((a[i] >> j) & 1) continue;\n                p[j] = i;\n            }\n            ll ok = -1, bad = i;\n            for (auto j = 0; j < 32; ++j) {\n                if ((k >> j) & 1) ok = max(ok, p[j]);\n                else bad = min(bad, p[j]);\n            }\n            ll cur = bad - ok;\n            // cout << i << \" \" << cur << \" \" << bad << \" \" << ok << \"\\n\";\n            if (cur > 0) ans += cur;\n        }\n        // cout << \"\\n\";\n        return ans;\n    }\n};",
    "submit_ts": "1720277110",
    "subm_id": "1311648176"
}