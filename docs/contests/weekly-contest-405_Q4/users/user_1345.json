{
    "username": "a44013556",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        \n        dic = {}\n        n = len(target)\n        for i in range(len(words)):\n            if words[i] in dic:\n                dic[words[i]] = min(dic[words[i]], costs[i])\n            else:\n                dic[words[i]] = costs[i]\n        dp = [inf] * (len(target)+1)\n        dp[0] = 0 \n\n        for i in range(n):\n            if dp[i] == inf:\n                continue\n            \n            for key in dic:\n                m = len(key)\n\n                if i + m <= n and target[i:i+m] == key:\n                    dp[i + m] = min(dp[i+m], dp[i] + dic[key])\n        return dp[n] if dp[n] != inf else -1\n\n        return self.res if self.res != inf else -1",
    "submit_ts": "1720323088",
    "subm_id": "1312367018"
}