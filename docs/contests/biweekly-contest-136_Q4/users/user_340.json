{
    "username": "yelpiao",
    "submission": "class Solution {\npublic:\n    static const int N = 1e5 + 10;\n    int d1[N], d2[N], p[N];\n    int h[N], e[N * 2], w[N * 2], ne[N * 2], idx = 0;\n    vector<int> ans;\n    void add(int a, int b, int c) {\n        e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;\n    }\n    int dfs1(int u, int fa) {\n        d1[u] = d2[u] = 0;\n        for (int i = h[u]; ~i; i = ne[i]) {\n            int v = e[i];\n            if (v == fa) continue;\n            int tmp = dfs1(v, u) + w[i];\n            if (tmp > d1[u]) d2[u] = d1[u], d1[u] = tmp, p[u] = v;\n            else if (tmp > d2[u]) d2[u] = tmp;\n        }\n        return d1[u];\n    }\n    void dfs2(int u, int fa, int up) {\n        ans[u] = max(d1[u], up);\n        for (int i = h[u]; ~i; i = ne[i]) {\n            int v = e[i];\n            if (v == fa) continue;\n            if (p[u] == v) dfs2(v, u, max(up, d2[u]) + ((u & 1) ? 1 : 2));\n            else {\n                dfs2(v, u, max(up, d1[u]) + ((u & 1) ? 1 : 2));\n            }\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        ans.resize(n);\n        memset(h, -1, sizeof h);\n        for (auto& x : edges) {\n            add(x[0], x[1], ((x[1] & 1) ? 1 : 2));\n            add(x[1], x[0], ((x[0] & 1) ? 1 : 2));\n        }\n        dfs1(0, -1);\n        cout << p[0] << endl;\n        dfs2(0, -1, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722700032",
    "subm_id": "552278124"
}