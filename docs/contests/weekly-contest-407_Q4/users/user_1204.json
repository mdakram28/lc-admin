{
    "username": "kushagragarg219",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) diff[i] = target[i] - nums[i];\n        \n        long res = 0;\n        Boolean isPos = null;\n        int prevOps = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            // System.out.println(diff[i] + \" \" + isPos + \" \" + prevOps);\n            if(diff[i] == 0) {\n                isPos = null;\n            } else if (diff[i] > 0) {\n                if (isPos == null || isPos != true) {\n                    isPos = true;\n                    res += diff[i];\n                } else {\n                    if (diff[i] > prevOps) res += diff[i] - prevOps;\n                }\n                prevOps = diff[i];\n            } else {\n                if (isPos == null || isPos != false) {\n                    isPos = false;\n                    res += Math.abs(diff[i]);\n                } else {\n                    if (diff[i] < prevOps) res += Math.abs(diff[i] - prevOps);\n                }\n                prevOps = diff[i];\n            }\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1721532545",
    "subm_id": "1327988420"
}