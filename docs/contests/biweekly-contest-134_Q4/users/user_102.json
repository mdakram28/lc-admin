{
    "username": "JavOliva",
    "submission": "template <typename T, T m_(T, T)>\nstruct sparse_table {\n  int n;\n  vector<vector<T>> table;\n  sparse_table() {}\n  sparse_table(vector<T> &arr) {\n    n = arr.size();\n    int k = log2_floor(n) + 1;\n    table.assign(n, vector<T>(k));\n    for (int i = 0; i < n; i++)\n      table[i][0] = arr[i];\n    for (int j = 1; j < k; j++)\n      for (int i = 0; i + (1 << j) <= n; i++)\n        table[i][j] = m_(table[i][j-1], table[i+(1<<(j-1))][j-1]);\n  }\n  T query(int l, int r) {\n    int k = log2_floor(r - l + 1);\n    return m_(table[l][k], table[r-(1 << k)+1][k]);\n  }\n  int log2_floor(int n) { return n ? __builtin_clzll(1) - __builtin_clzll(n) : -1; }\n};\n\nint merge(int a, int b){\n    return a & b;\n}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long ans = 0;\n        nums.push_back(0);\n        sparse_table<int, merge> sp(nums);\n        for (int i = 0; i < n; i ++){\n            int left1 = i, right1 = n;\n            while(left1 < right1){\n                int mid = (left1 + right1) / 2;\n                int val = sp.query(i, mid);\n                if (val == k or (val & k) < k){\n                    right1 = mid;\n                }\n                else{\n                    left1 = mid + 1;\n                }\n            }\n\n            int left2 = i, right2 = n;\n            while(left2 < right2){\n                int mid = (left2 + right2 + 2) / 2;\n                int val = sp.query(i, mid);\n                if ((val & k) < k){\n                    right2 = mid - 1;\n                }\n                else{\n                    left2 = mid;\n                }\n            }\n\n            int S = sp.query(i, left1);\n            if (S == k and k != 0){\n                ans += (left2 - left1 + 1);\n            }\n            else if (S == k){\n                ans += (left2 - left1 + 1);\n                if (left2 == n)\n                    ans --;\n            }\n        }\n\n        nums.pop_back();\n        return ans;\n    }\n};",
    "submit_ts": "1720278029",
    "subm_id": "1311691136"
}