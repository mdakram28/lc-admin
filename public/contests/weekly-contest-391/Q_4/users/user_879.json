{
    "username": "bufferjjh",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        TreeMap<Integer, Integer> plus = new TreeMap<>();\n        TreeMap<Integer, Integer> minus = new TreeMap<>();\n        for (int[] i : points) {\n            plus.put(i[0]+i[1], plus.getOrDefault(i[0]+i[1],0)+1);\n            minus.put(i[0]-i[1], minus.getOrDefault(i[0]-i[1],0)+1);\n        }\n        int ans = Integer.MAX_VALUE;\n        //System.out.println(plus + \" \" + minus);\n        for (int[] i : points) {\n            int plusBest = -1;\n            int minusBest = -1;\n            if(plus.get(i[0]+i[1]) == 1) {\n                plus.remove(i[0]+i[1]);\n                plusBest = plus.lastKey() - plus.firstKey();\n                plus.put(i[0]+i[1],1);\n            }\n            else {\n                plusBest = plus.lastKey() - plus.firstKey();\n            }\n            if(minus.get(i[0]-i[1]) == 1) {\n                minus.remove(i[0]-i[1]);\n                minusBest = minus.lastKey() - minus.firstKey();\n                minus.put(i[0]-i[1],1);\n            }\n            else minusBest = minus.lastKey() - minus.firstKey();\n            ans = Math.min(ans, Math.max(plusBest, minusBest));\n        }\n        return ans;\n    }\n}"
}