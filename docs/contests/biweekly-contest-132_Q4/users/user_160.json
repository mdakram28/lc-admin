{
    "username": "user9512b",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> lookup;\n        vector<int> maxk(k+1, -1);\n        vector<vector<int>> dp(n, vector<int>(k+1, -1));\n        \n        for (int i = 0; i < n; i++){\n            for (int j = 0; j <= k; j++){\n                dp[i][j] = 1;\n                int a = nums[i];\n                \n                auto it = lookup.find(a);\n                if (it != lookup.end()){\n                    dp[i][j] = max(dp[i][j], dp[it->second][j] + 1);\n                }\n                \n                if (j >= 1){\n                    int idx = maxk[j - 1];\n                    if (idx != -1)\n                        dp[i][j] = max(dp[i][j], dp[idx][j-1] + 1);\n                }\n                                \n                // for (int p = 0; p < i; p++){\n                //     if (nums[i] == nums[p]){\n                //         dp[i][j] = max(dp[i][j], dp[p][j] + 1);\n                //     } else if (j >= 1) {\n                //         dp[i][j] = max(dp[i][j], dp[p][j-1] + 1);\n                //     }                    \n                // }\n            }\n            \n            for (int j = 0; j <= k; j++){\n                int idx = maxk[j];\n                if (idx != -1){\n                    if (dp[idx][j] < dp[i][j]){\n                        maxk[j] = i;\n                    }\n                } else {\n                    maxk[j] = i;\n                }\n            }\n            \n            \n            lookup[nums[i]] = i;\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < n; i++){\n            // cout << dp[i][0] << \" \" << dp[i][1] << \" \" << dp[i][k] << endl; \n            ans = max(ans, dp[i][k]);\n        }\n        // cout << endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717860260.0
}