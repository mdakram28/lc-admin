{
    "username": "liouzhou_101",
    "submission": "\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> v(n);\n        for (auto& e : edges)\n        {\n            int x = e[0], y = e[1];\n            v[x].push_back(y);\n            v[y].push_back(x);\n        }\n\n        vector<int> f(n);\n        vector<multiset<int>> H(n);\n\n        function<void(int, int)> dfs = [&](int x, int p)\n        {\n            for (auto& y : v[x])\n            {\n                if (y == p) continue;\n                dfs(y, x);\n                H[x].insert(f[y]);\n                //f[x] = max(f[x], f[y]);\n            }\n            f[x] = H[x].empty() ? 0 : *H[x].rbegin();\n            f[x] += x % 2 == 0 ? 2 : 1;\n        };\n\n        dfs(0, -1);\n\n        vector<int> g(n);\n        g[0] = f[0];\n\n        function<void(int, int, int)> dfs2 = [&](int x, int p, int last)\n        {\n            for (auto& y : v[x])\n            {\n                if (y == p) continue;\n                H[x].erase(H[x].find(f[y]));\n\n                int next = max(last, (H[x].empty() ? 0 : *H[x].rbegin()) + (x % 2 == 0 ? 2 : 1)) + (y % 2 == 0 ? 2 : 1);\n\n                g[y] = max(f[y], next);\n\n                dfs2(y, x, next);\n\n                H[x].insert(f[y]);\n            }\n        };\n\n        dfs2(0, -1, 0 % 2 == 0 ? 2 : 1);\n\n        for (int i = 0; i < g.size(); ++i)\n            g[i] -= (i % 2 == 0 ? 2 : 1);\n        return g;\n    }\n};",
    "submit_ts": "1722697969",
    "subm_id": "552268696"
}