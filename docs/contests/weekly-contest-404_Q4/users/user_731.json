{
    "username": "absolute-mess",
    "submission": "class Solution {\npublic:\n    typedef bitset<35> bit;            int mod99=998244353;\n    typedef long double ld;            const ld pi=3.141592653589;          \n    typedef pair<int, int> pii;        typedef vector<int> vi;                   typedef vector<pii> vpii;       typedef vector<vi> vvi;    \n    typedef set<int> si;               typedef set<pii> spi;                     typedef multiset<int> msl;      typedef vector<string> vs; \n\n    #define fi(n)               for(int i=0;i<n;i++)\n    #define fj(n)               for(int j=0;j<n;j++)\n    #define fk(n)               for(int k=0;k<n;k++) \n    #define rep(i,a,b)          for(int i=a;i<b;i++)\n    int mod=1e9+7;\n    \n    int calc(vector<vector<int>>& adj, int st, int& lst) {\n        vector<int> dis(adj.size(), -1);\n        dfs(adj, st, -1, 0, lst, dis);\n        return dis[lst];\n    }\n\n    void dfs(vector<vector<int>>& adj, int i, int pr, int d, int& lst, vector<int>& dis) {\n        dis[i] = d;\n        if (d > dis[lst]) {\n            lst = i;\n        }\n        for (auto x : adj[i]) {\n            if (x != pr) {\n                dfs(adj, x, i, d + 1, lst, dis);\n            }\n        }\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& v1, vector<vector<int>>& v2) {\n        int n=v1.size()+1, m=v2.size()+1;   \n        vvi adj(n), adj1(m);\n        for(auto x:v1)\n            adj[x[0]].push_back(x[1]), adj[x[1]].push_back(x[0]);\n        for(auto x:v2)\n            adj1[x[0]].push_back(x[1]), adj1[x[1]].push_back(x[0]);\n        int l1 = 0;\n        calc(adj, 0, l1);\n        int d1 = calc(adj, l1, l1);\n\n        int l2 = 0;\n        calc(adj1, 0, l2);\n        int d2 = calc(adj1, l2, l2);\n\n        int tot = max(d1, d2);\n        tot = max(tot, (d2 + 1) / 2 + (d1 + 1) / 2 + 1);\n\n        return tot;\n    }\n    \n};",
    "submit_ts": 1719719988.0
}