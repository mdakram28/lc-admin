{
    "username": "parth83",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), cnt = 0, cnt1 = 0, cntr = 0, cntc = 0;\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                vector <int> freq(2, 0);\n                ++freq[grid[i][j]];\n                ++freq[grid[n - 1 - i][j]];\n                ++freq[grid[i][m - 1 - j]];\n                ++freq[grid[n - 1 - i][m - 1 - j]];\n\n                cnt += 4 - max(freq[0], freq[1]);\n            }\n        }\n\n        if (n & 1) {\n            int l = 0, r = m - 1;\n            while (l < r) {\n                if (grid[n / 2][l] != grid[n / 2][r]) {\n                    ++cntr;\n                } else if (grid[n / 2][l] == 1)\n                    cnt1 += 2;\n                \n                ++l;\n                --r;\n            }\n        }\n\n        if (m & 1) {\n            int l = 0, r = n - 1;\n            while (l < r) {\n                if (grid[l][m / 2] != grid[r][m / 2]) {\n                    ++cntc;\n                } else if (grid[l][m / 2] == 1)\n                    cnt1 += 2;\n                \n                ++l;\n                --r;\n            }\n        }\n\n        if (n & 1 && m & 1)\n            cnt += (grid[n / 2][m / 2] == 1);\n\n        if (cnt1 % 4 == 2 && cntr == 0 && cntc == 0)\n            cnt += 2;\n        \n        return cnt + cntr + cntc;\n    }\n};",
    "submit_ts": "1722699162",
    "subm_id": "1343203309"
}