{
    "username": "magical-curieugt",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n , m = len(grid) , len(grid[0])\n        # (i , j) , (n - 1 - i , j) , (i , m - 1 - j) , (n - 1 - i , m - 1 - j)\n        res = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                cnt = grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j]+ grid[n - 1 - i][m - 1 - j]\n                res += min(4 - cnt , cnt)\n        c00 = c11 = 0\n        cnt = 0\n        if n & 1:\n            l , r = 0 , m - 1\n            while l < r:\n                cnt += grid[n // 2][l] != grid[n // 2][r]\n                c00 += grid[n // 2][l] == grid[n // 2][r] == 0\n                c11 += grid[n // 2][l] == grid[n // 2][r] == 1\n                l += 1\n                r -= 1\n            if l == r:\n                res += grid[n // 2][l] \n        \n        if m & 1:\n            l , r = 0 , n - 1\n            while l < r:\n                cnt += grid[l][m // 2] != grid[r][m // 2]\n                c00 += grid[l][m // 2] == grid[r][m // 2] == 0\n                c11 += grid[l][m // 2] == grid[r][m // 2] == 1\n                l += 1\n                r -= 1\n            if l == r and n & 1 == 0:\n                res += grid[l][m // 2]\n        \n        res += cnt\n        if c11 % 2 == 1 and cnt == 0:\n            res += 2        \n        return res\n\n\n\n            \n",
    "submit_ts": "1722699529",
    "subm_id": "552276034"
}