{
    "username": "Tafheem Ahemad",
    "submission": "# Tafheem Ahemad\n\nimport heapq\nfrom typing import List\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n = len(board)\n        m = len(board[0])\n        v = [[] for _ in range(n)]\n\n        for i in range(n):\n            pq = []\n            for j in range(m):\n                heapq.heappush(pq, (board[i][j], j))\n                if len(pq) > 3:\n                    heapq.heappop(pq)\n            v[i] = sorted(pq, reverse=True)  # To maintain descending order\n\n        mx = float('-inf')\n\n        for i in range(n):\n            for j in range(n):\n                for k in range(n):\n                    if i == j or j == k or i == k:\n                        continue\n\n                    sum_val = 0\n                    st = set()\n\n                    sum_val += v[i][0][0]\n                    st.add(v[i][0][1])\n\n                    for val, idx in v[j]:\n                        if idx not in st:\n                            sum_val += val\n                            st.add(idx)\n                            break\n\n                    for val, idx in v[k]:\n                        if idx not in st:\n                            sum_val += val\n                            st.add(idx)\n                            break\n\n                    mx = max(mx, sum_val)\n\n        return mx\n",
    "submit_ts": "1723908920",
    "subm_id": "1359172423"
}