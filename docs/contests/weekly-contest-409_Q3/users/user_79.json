{
    "username": "hhhyyyfff",
    "submission": "class Solution {\npublic:\n    vector<int> tr;\n\n    void build(int x, int l, int r) {\n        tr[x] = r - l + 1;\n        if (l == r) return;\n        int m = (l + r) / 2;\n        build(x * 2, l, m);\n        build(x * 2 + 1, m + 1, r);\n    }\n\n    int qry(int x, int l, int r, int ql, int qr) {\n        if (ql <= l && r <= qr) return tr[x];\n        if (r < ql || qr < l) return 0;\n        if (!tr[x]) tr[x * 2] = tr[x * 2 + 1] = 0;\n        int m = (l + r) / 2;\n        return qry(x * 2, l, m, ql, qr) + qry(x * 2 + 1, m + 1, r, ql, qr);\n    }\n\n    void upd(int x, int l, int r, int ql, int qr) {\n        if (ql <= l && r <= qr) {\n            tr[x] = 0;\n            return;\n        }\n        if (r < ql || qr < l) return;\n        if (!tr[x]) tr[x * 2] = tr[x * 2 + 1] = 0;\n        int m = (l + r) / 2;\n        upd(x * 2, l, m, ql, qr);\n        upd(x * 2 + 1, m + 1, r, ql, qr);\n        tr[x] = tr[x * 2] + tr[x * 2 + 1];\n    }\n\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int cur = n - 1;\n        tr = vector<int>(n * 4);\n        build(1, 1, n - 1);\n        for (auto& i : queries) {\n            cur -= qry(1, 1, n - 1, i[0] + 1,i[1] - 1);\n            upd(1, 1, n - 1, i[0] + 1, i[1] - 1);\n            ans.push_back(cur);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722739765",
    "subm_id": "552326833"
}