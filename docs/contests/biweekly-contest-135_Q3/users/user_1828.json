{
    "username": "akpahak",
    "submission": "class Solution {\npublic:\n    int count(vector<int>& nums, int k, int req_diff)\n    {\n        int n = nums.size(), i = 0, j = n - 1, ans = 0;\n        while(i < j)\n        {\n            if(abs(nums[i] - nums[j]) != req_diff)\n            {\n                vector<int> d;\n                d.push_back(nums[i]);\n                d.push_back(nums[j]);\n                sort(d.begin(), d.end());\n                if(d[1] - d[0] > req_diff)\n                    ans++;\n                else\n                {\n                    if((k - d[0]) >= req_diff || d[1] >= req_diff)\n                        ans++;\n                    else\n                        ans+=2;\n                }\n            }\n            i++;\n            j--;\n        }\n        return ans;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        vector<int> diff, comp;\n        map<int,int> mp;\n        int n = nums.size(), i = 0, j = n - 1, ans = INT_MAX, max_diff = INT_MIN;\n        while(i < j)\n        {\n            diff.push_back(abs(nums[i] - nums[j]));\n            i++;\n            j--;\n        }\n        sort(diff.begin(), diff.end());\n        for(auto difference: diff)\n            mp[difference]++;\n        for(auto it: mp)\n            max_diff = max(max_diff, it.second);\n        for(auto it: mp)\n        {\n            if(it.second == max_diff)\n                comp.push_back(it.first);\n        }\n        int req_diff;\n        if(n/2%2==1)\n            req_diff = diff[n/4];\n        else\n            req_diff = ((diff[n/4] + diff[n/4 - 1])/ 2);\n        for(auto num: comp)\n            ans = min(ans, count(nums, k, num));\n        ans = min(ans, count(nums, k, req_diff));\n        return ans;\n    }\n};",
    "submit_ts": "1721489557",
    "subm_id": "1327456925"
}