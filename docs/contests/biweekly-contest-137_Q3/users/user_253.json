{
    "username": "hum",
    "submission": "class Solution:\n  def maximumValueSum(self, board: List[List[int]]) -> int:\n    n, m = len(board), len(board[0])\n    pre_m = [[-inf] * m for _ in range(n)]\n\n    for i in range(n):\n      for j in range(m):\n        if i == 0:\n          pre_m[i][j] = board[i][j]\n        pre_m[i][j] = max(pre_m[i - 1][j], board[i][j])\n\n    suf_m = [[] for _ in range(n)]\n\n    cur = [-inf] * m\n    for i in range(n - 1, -1, -1):\n      cur = [max(cur[j], board[i][j]) for j in range(m)]\n      m1, m2, m3 = -1, -1, -1\n      for j in range(m):\n        if m1 == -1 or cur[j] >= cur[m1]:\n          m1, m2, m3 = j, m1, m2\n        elif m2 == -1 or cur[j] >= cur[m2]:\n          m2, m3 = j, m2\n        elif m3 == -1 or cur[j] > cur[m3]:\n          m3 = j\n      suf_m[i].append((m1, m2, m3))\n      suf_m[i].append((cur[m1], cur[m2], cur[m3]))\n\n    res = -inf\n    for i in range(1, n - 1):\n      for j in range(m):\n        for k in range(m):\n          if j == k:\n            continue\n          m1, m2, m3 = suf_m[i + 1][0]\n          if m1 != j and m1 != k:\n            res = max(res, board[i][j] + pre_m[i - 1][k] + suf_m[i + 1][1][0])\n          elif m2 != j and m2 != k:\n            res = max(res, board[i][j] + pre_m[i - 1][k] + suf_m[i + 1][1][1])\n          elif m3 != j and m3 != k:\n            res = max(res, board[i][j] + pre_m[i - 1][k] + suf_m[i + 1][1][2])\n\n    return res\n",
    "submit_ts": "1723907549",
    "subm_id": "556326187"
}