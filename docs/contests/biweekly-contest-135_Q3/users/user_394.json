{
    "username": "FearMe_1",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<pair<int, int>> diff;\n        map<int, int> m;\n        int n = nums.size();\n        \n        for (int i = 0; i < n / 2; ++i) {\n            int left = nums[i];\n            int right = nums[n - i - 1];\n            int current_diff = abs(left - right);\n            int max_change = max(max(left, right) - 0, k - min(left, right));\n            diff.push_back({current_diff, max_change});\n            m[current_diff]++;\n        }\n        \n        int max_freq = 0;\n        int second_max_freq = 0;\n        int max_diff = -1;\n        int second_max_diff = -1;\n        \n        for (auto& entry : m) {\n            if (entry.second > max_freq) {\n                second_max_freq = max_freq;\n                second_max_diff = max_diff;\n                max_freq = entry.second;\n                max_diff = entry.first;\n            } else if (entry.second > second_max_freq) {\n                second_max_freq = entry.second;\n                second_max_diff = entry.first;\n            }\n        }\n        \n        int changes_max = 0;\n        int changes_second = 0;\n        \n        for (const auto& d : diff) {\n            if (d.first != max_diff) {\n                if (d.second < max_diff) changes_max += 2;\n                else changes_max++;\n            }\n            if (d.first != second_max_diff) {\n                if (d.second < second_max_diff) changes_second += 2;\n                else changes_second++;\n            }\n        }\n        \n        return min(changes_max, changes_second);\n    }\n};",
    "submit_ts": "1721488014",
    "subm_id": "1327408714"
}