{
    "username": "marstang-2",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] maxQStart = new int[n];\n\n        int[] maxQEnd = new int[n];\n        for (int i = 0; i < n - 1; i++) {\n            maxQStart[i] = i + 1;\n            maxQEnd[i + 1] = i;\n        }\n        boolean[] used = new boolean[n];\n        int len = n - 1;\n        int[] ans = new int[queries.length];\n        for (int i = 0; i < queries.length; i++) {\n            int[] q = queries[i];\n            int start = q[0], end = q[1];\n            if (used[start] || used[end]) {\n                ans[i] = len;\n                continue;\n            }\n\n            if (maxQStart[start] > end) {\n                if (maxQEnd[end] > start) {\n                    maxQEnd[end] = start;\n                }\n                ans[i] = len;\n                continue;\n            }\n            if (maxQEnd[end] < start) {\n                if (maxQStart[start] < end) {\n                    maxQStart[start] = end;\n                }\n                ans[i] = len;\n                continue;\n            }\n            int cnt = 0;\n            int cntIndex = start;\n            while (true) {\n                cntIndex = maxQStart[cntIndex];\n                cnt++;\n                if (cntIndex == end) {\n                    break;\n                } else{\n                    used[cntIndex] = true;\n                }\n            }\n            len -= (cnt - 1);\n            maxQStart[start] = end;\n            maxQEnd[end] = start;\n            ans[i] = len;\n        }\n        return ans;\n\n\n    }\n}",
    "submit_ts": "1722741273",
    "subm_id": "552337159"
}