{
    "username": "pppdmy",
    "submission": "impl Solution {\n    pub fn minimum_difference(nums: Vec<i32>, k: i32) -> i32 {\n      let mut i = 0;\n      let mut cnt = 0;\n      let mut bins = vec![0; 32];\n      let mut min = i32::MAX;\n      for j in 0..nums.len() {\n        let mut n = add_to_bin(nums[j], &mut cnt, &mut bins);\n        while i <= j {\n          min = (n - k).abs().min(min);\n          if n > k {\n            break;\n          }\n          n = sub_from_bin(nums[i], &mut cnt, &mut bins);\n          i += 1;\n        }\n      }\n      min\n    }\n}\n\nfn add_to_bin(mut n: i32, cnt: &mut i32, bins: &mut Vec<i32>) -> i32 {\n  let mut i = 0;\n  while n > 0 {\n    bins[i] += n & 1;\n    i += 1;\n    n >>= 1;\n  }\n  *cnt += 1;\n  bin_to_num(*cnt, bins)\n}\nfn sub_from_bin(mut n: i32, cnt: &mut i32, bins: &mut Vec<i32>) -> i32 {\n  let mut i = 0;\n  while n > 0 {\n    bins[i] -= n & 1;\n    i += 1;\n    n >>= 1;\n  }\n  *cnt -= 1;\n  bin_to_num(*cnt, bins)\n}\nfn bin_to_num(cnt: i32, bins: &[i32]) -> i32 {\n  let mut ret = 0;\n  if cnt == 0 {\n    return ret;\n  }\n  for &b in bins.iter().rev() {\n    ret *= 2;\n    if b == cnt {\n      ret += 1;\n    }\n  }\n  ret\n}\n",
    "submit_ts": 1717298330.0
}