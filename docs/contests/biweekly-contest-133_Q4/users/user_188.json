{
    "username": "Niloy_Das_19",
    "submission": "using ll = long long;\nconst int MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        vector<vector<ll>> dp(2, vector<ll>((n * (n - 1)) / 2 + 1, 0));\n        vector<int> req(n, -1);\n        \n        for (const auto& r : requirements) {\n            req[r[0]] = r[1];\n        }\n        \n        \n        dp[0][0] = 1;\n        \n        for (int i = 1; i <= n; ++i) {\n            int curr = i & 1, prev = (i-1) & 1;\n            \n            for(auto &it : dp[curr]) it = 0;\n            vector<ll> prefix_sum(dp[prev].size(), 0);\n            \n            for (int j = 0; j < dp[prev].size(); ++j) {\n                prefix_sum[j] = (j > 0 ? prefix_sum[j-1] : 0) + dp[prev][j];\n                prefix_sum[j] %= MOD;\n            }\n            \n            for (int j = 0; j <= i * (i - 1) / 2; ++j) {\n                int left = max(0, j - i + 1);\n                int right = min((int)prefix_sum.size() - 1, j);\n                dp[curr][j] = (prefix_sum[right] - (left > 0 ? prefix_sum[left-1] : 0) + MOD) % MOD;\n            }\n            \n            if (req[i-1] != -1) {\n                for (int j = 0; j <= i * (i - 1) / 2; ++j) {\n                    if (j != req[i-1]) dp[curr][j] = 0;\n                }\n            }\n        }\n        \n        return dp[n&1][req[n-1]];\n    }\n};",
    "submit_ts": 1719069111.0
}