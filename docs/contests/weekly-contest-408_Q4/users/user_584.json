{
    "username": "Ankit1017",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>>&g,int s,int t1,int t2,int n){\n        queue<int>q;\n        vector<bool>f(n+4,false);\n        q.push(s);\n        f[s]=true;\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(auto i:g[u]){\n                if(!f[i]){\n                    q.push(i);\n                    f[i]=true;\n                }\n            }\n        }\n        return f[t1]||f[t2];\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        vector<vector<int>>g(c.size()+4);\n        int n=c.size();\n        for(int i=0;i<n;i++){\n            if(c[i][0]<=c[i][2]){\n                g[n].push_back(i);\n                g[i].push_back(n);\n            }\n            if(X-c[i][0]<=c[i][2]){\n                g[n+2].push_back(i);\n                g[i].push_back(n+2);\n            }\n            if(c[i][1]<=c[i][2]){\n                g[n+1].push_back(i);\n                g[i].push_back(n+1);\n            }\n            if(Y-c[i][1]<=c[i][2]){\n                g[n+3].push_back(i);\n                g[i].push_back(n+3);\n            }\n            for(int j=i;j<n-1;j++){\n                double dis=sqrt(pow(c[i][0]-c[j+1][0],2)+pow(c[i][1]-c[j+1][1],2));\n                if(c[i][2]+c[j+1][2]>=dis){\n                    g[i].push_back(j+1);\n                    g[j+1].push_back(i);\n                }\n            }\n        }\n        int ans=max({0,bfs(g,n,n+1,n+2,n+4),bfs(g,n+3,n+2,n+1,n+4)});\n        if(ans)return false;\n        return true;\n    }\n};",
    "submit_ts": "1722137661",
    "subm_id": "1335770143"
}