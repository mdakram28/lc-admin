{
    "username": "kundan25",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long ans = 0;\n        Map<Long, Long> mpK = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> currMap = new HashMap<>(); \n            if (nums[i] == k) {\n                ++ans;\n            }\n            currMap.put((long)nums[i], 1L);\n            for (Map.Entry<Long, Long> emP : mpK.entrySet()) {\n                long val = emP.getKey();\n                long freq = emP.getValue();\n                long result = val & nums[i];\n                if (result == k) {\n                    ans += freq;\n                }\n                currMap.put(result, currMap.getOrDefault(result, 0L) + freq);\n            }\n            mpK = currMap;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720278825",
    "subm_id": "1311725916"
}