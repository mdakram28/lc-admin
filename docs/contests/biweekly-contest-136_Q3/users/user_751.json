{
    "username": "ccoder5",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int flips = 0, n =grid.size(), m = grid[0].size();\n        int ones = 0;\n        vector<int> cnt(4, -1);\n        for(int i = 0; i < n/2; i++) {\n            for(int j = 0; j < m/2; j++) {\n                int zero = 0;\n                if(grid[i][j] == 0) zero++;\n                if(grid[i][m-1-j] == 0) zero++;\n                if(grid[n-1-i][j] == 0) zero++;\n                if(grid[n-1-i][m-1-j] == 0) zero++;\n                flips += min(zero, 4-zero);\n                if(zero <= 4-zero) {\n                    ones += 4;\n                }\n            }\n\n        }\n        bool isflip = false;\n        if(n%2 == 1) {\n            for(int i = 0; i < m/2; i++) {\n                if(grid[n/2][i] != grid[n/2][m-1-i]) {\n                    isflip = true;\n                    flips++;\n                } else if(grid[n/2][i] == 1) {\n                    ones+=2;\n                    cnt[2] = 2;\n                }\n            }\n        }\n        if(m%2 == 1) {\n            for(int i = 0; i < n/2; i++) {\n                if(grid[i][m/2] != grid[n-1-i][m/2]) {\n                    flips++;\n                    isflip = true;\n                } else if(grid[i][m/2] == 1) {\n                    ones+=2;\n                    cnt[2] = 2;\n                }\n            }\n        }\n        int c = 0;\n        if(n%2 && m%2) {\n            if(grid[n/2][m/2] == 1) {\n                ones++;\n                c++;\n            }\n        }\n\n        // cout << ones;\n\n        if(ones%4 == 0) {\n            return flips;\n        } else if(ones%4 == 1) {\n            return flips + 1;\n        } else if(ones %4 == 2) {\n            return flips + (isflip ? 0 : 2);\n        } else {\n            return flips + (isflip ? 1 : 3);\n        }\n    }\n};",
    "submit_ts": "1722698028",
    "subm_id": "1343167287"
}