{
    "username": "upadhyayakash199",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        vector<vector<int>> dp(51, vector<int>(51, 0));\n        vector<vector<int>> prefix_sum(51, vector<int>(51, 0));\n\n        // Initialize dp for the first element in nums\n        for (int x = 0; x <= nums[0]; ++x) {\n            int y = nums[0] - x;\n            dp[x][y] = 1;\n        }\n\n        // Update dp for subsequent elements\n        for (int i = 1; i < n; ++i) {\n            vector<vector<int>> new_dp(51, vector<int>(51, 0));\n\n            // Compute prefix sums for efficient transitions\n            for (int prev_x = 0; prev_x <= 50; ++prev_x) {\n                for (int prev_y = 50; prev_y >= 0; --prev_y) {\n                    prefix_sum[prev_x][prev_y] = dp[prev_x][prev_y];\n                    if (prev_y < 50) {\n                        prefix_sum[prev_x][prev_y] = (prefix_sum[prev_x][prev_y] + prefix_sum[prev_x][prev_y + 1]) % MOD;\n                    }\n                }\n            }\n\n            for (int x = 0; x <= nums[i]; ++x) {\n                int y = nums[i] - x;\n                for (int prev_x = 0; prev_x <= x; ++prev_x) {\n                    new_dp[x][y] = (new_dp[x][y] + prefix_sum[prev_x][y]) % MOD;\n                }\n            }\n\n            dp = new_dp;\n        }\n\n        // Sum up all the valid dp values for the last element\n        int result = 0;\n        for (int x = 0; x <= 50; ++x) {\n            for (int y = 0; y <= 50; ++y) {\n                result = (result + dp[x][y]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723344994",
    "subm_id": "1351546397"
}