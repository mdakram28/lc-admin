{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    struct node{\n        node *l,*r;\n        int a,b;\n        int pre,suf;\n        node(int _a,int _b):a(_a),b(_b),l(NULL),r(NULL){\n        \n        }\n    }*root;\n    void pull(node *n){\n        n->pre=n->l->pre;\n        if(n->l->pre==n->l->b-n->l->a+1)n->pre+=n->r->pre;\n        n->suf=n->r->suf;\n        if(n->r->suf==n->r->b-n->r->a+1)n->suf+=n->l->suf;\n    }\n    void build(node *n,int *a){\n        if(n->a==n->b){\n            n->pre=n->suf=a[n->a];\n            return;\n        }\n        int mid=(n->a+n->b)/2;\n        n->l=new node(n->a,mid);\n        n->r=new node(mid+1,n->b);\n        build(n->l,a);\n        build(n->r,a);\n        pull(n);\n    }\n    node query(node *n,int l,int r){\n        if(n->a>=l&&n->b<=r){\n            return *n;\n        }\n        int mid=(n->a+n->b)/2;\n        if(r<=mid){\n            return query(n->l,l,r);\n        }\n        if(l>mid)return query(n->r,l,r);\n        else{\n            node a=query(n->l,l,r);\n            node b=query(n->r,l,r);\n            node nn(max(l,n->a),min(r,n->b));\n            nn.l=&a;\n            nn.r=&b;\n            pull(&nn);\n            return nn;\n        }\n    }\n    void update(node *n,int x,int w){\n        if(n->a==n->b){\n            if(w)n->suf=n->pre=1;\n            else n->suf=n->pre=0;\n            return;\n        }\n        int mid=(n->a+n->b)/2;\n        if(x<=mid)update(n->l,x,w);\n        else update(n->r,x,w);\n        pull(n);\n    }\n    int a[100005];\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        int n=colors.size();\n        int cnt=0;\n        map<int,int> m;\n        \n        fill(a,a+2*n,0);\n        for(int i = 0;i<n;i++){\n            if(colors[i]!=colors[(i+1+n)%n]){\n                a[i]=1;\n                a[i+n]=1;\n                cnt++;\n            }\n            else{\n                a[i]=a[i+n]=0;    \n            }\n        }\n        \n        root=new node(0,2*n-1);\n        build(root,a);\n        if(cnt==n)m[cnt]++;\n        else{\n            vector<int> v;\n            int cnt=0;\n            for(int i = 0;i<n;i++){\n                if(a[i])cnt++;\n                else{\n                    if(cnt)v.push_back(cnt);\n                    cnt=0;\n                }\n            }\n            if(cnt)v.push_back(cnt);\n            if(a[0]==1&&a[n-1]==1)v[0]+=v.back(),v.pop_back();\n            for(auto it:v)m[it]++;//printf(\"%d \",it);\n           // printf(\"\\n\");\n        }\n\n        vector<int> ans;\n        for(auto it:queries){\n              //for(auto it:m)printf(\"?%d %d\\n\",it.first,it.second);\n              //  for(int i = 0;i<2*n;i++)printf(\"%d \",a[i]);\n        //printf(\"\\n\");\n            if(it[0]==1){\n                if(it[1]==1||m.find(n)!=m.end())ans.push_back(n);\n                else{\n                    it[1]--;\n                    int sum=0;\n                    for(auto it2:m){\n                        if(it2.first>=it[1]){\n                            sum+=it2.second*(it2.first-it[1]+1);\n                        }\n                    }    \n                    ans.push_back(sum);\n                }\n                  //  for(auto it:m)printf(\"?%d %d\\n\",it.first,it.second);\n            }\n            else{\n                int x[2]={it[1],(it[1]-1+n)%n},val[2];\n                if(it[2]==colors[(it[1]+1)%n])val[0]=0;\n                else val[0]=1;\n          //      printf(\"%d %d\\n\",colors[(it[1]-1+n)%n],(it[1]-1+n)%n);\n                if(it[2]==colors[(it[1]-1+n)%n])val[1]=0;\n                else val[1]=1;\n                for(int i = 0;i<2;i++){\n                    int aa=query(root,0,x[i]+n-1).suf,bb=query(root,x[i]+1,2*n-1).pre;\n                   // printf(\"%d %d %d\\n\",aa,bb,a[x[i]]);\n                    if(a[x[i]]==0){\n                        if(aa)\n                        if(--m[aa]==0)m.erase(aa);\n                       //      printf(\"!\\n\");\n                       // for(auto it:m)printf(\"%d ?%d %d\\n\",i,it.first,it.second);\n                        if(bb&&(aa+1)!=n)\n                        if(--m[bb]==0)m.erase(bb);\n                    }\n                    else{\n                        if(aa+1+bb>=n)m.clear();\n                        else if(--m[aa+1+bb]==0)m.erase(aa+1+bb);\n                    }\n                   // printf(\"!\\n\");\n                        //for(auto it:m)printf(\"%d ?%d %d\\n\",i,it.first,it.second);\n                    a[x[i]]=val[i];\n                    a[x[i]+n]=val[i];\n                   // printf(\"%d %d %d\\n\",aa,bb,a[x[i]]);\n                    if(a[x[i]]==0){\n                        if(aa+1+bb>=n)m[n-1]++;\n                        else{\n                            if(aa)\n                            m[aa]++;\n                            if(bb)\n                            m[bb]++;\n                        }\n                    }\n                    else{\n                        if(aa+1+bb>=n)m[n]++;\n                        else m[aa+1+bb]++;\n                    }\n                    update(root,x[i],val[i]);\n                    update(root,x[i]+n,val[i]);\n                    colors[it[1]]=it[2];\n                  //  for(int i = 0;i<2*n;i++)printf(\"%d \",a[i]);\n       // printf(\"\\n\");\n                //   for(auto it:m)printf(\"?%d %d\\n\",it.first,it.second);\n                }\n                \n                //   for(auto it:m)printf(\"?%d %d\\n\",it.first,it.second);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742664",
    "subm_id": "1343774268"
}