{
    "username": "qing-ge-er",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        // \u5dee\u503c\u4e3a[0,k]\n        Map<Integer,Integer> map = new HashMap();\n        int n = nums.length;\n        int[] arr = new int[n/2];\n        for (int i=0;i<n/2;i++) {\n            int diff = Math.abs(nums[i]-nums[n-1-i]);\n            map.merge(diff,1,Integer::sum);\n            arr[i] = diff;\n        }\n        int m = map.size();\n        int[][] dp = new int[m][2];\n        int idx = 0;\n        for (int key : map.keySet()) dp[idx++] = new int[]{key,map.get(key)};\n        Arrays.sort(dp,(a,b) -> (b[1]-a[1]));\n        // System.out.println(map.toString());\n        int res = n;\n        for (int[] a : dp){\n            if (res<n/2-a[1]) break;\n            int diff = a[0];\n            int cnt = 0;\n            for (int i=0;i<n/2;i++){\n                if (arr[i]!=diff){\n                    // \u5224\u65ad\u65391\u4e2a\u8fd8\u662f2\u4e2a\n                    int maxv = Math.max(nums[i],nums[n-1-i]);\n                    int minv = Math.min(nums[i],nums[n-1-i]);\n                    if ((maxv-diff>=0 && maxv-diff<=k) || minv+diff<=k) cnt++;\n                    else cnt+=2;\n                }\n            }\n            res = Math.min(res,cnt);\n            // System.out.println(cnt+\"=\"+diff);\n        }\n        return res;\n    }\n}",
    "submit_ts": "1721487909",
    "subm_id": "548312048"
}