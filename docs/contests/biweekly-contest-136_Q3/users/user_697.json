{
    "username": "WeAreIronMan",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        \n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        \n        for(int i = 0; i < (n/2); i++){\n            for(int j = 0; j < (m/2); j++){\n                int count = grid[i][j] + grid[n-i-1][j] + grid[n-i-1][m-1-j] + grid[i][m-1-j];\n                ans += min(count, 4-count);   \n            }\n        }\n        \n        if(n%2 == 0 && m%2 == 0) return ans;\n        int changes = 0;\n        int ones = 0;\n        \n        if(n%2){\n            int i = 0, j = m-1;\n            while(i < j){\n                if(grid[(n-1)/2][i] != grid[(n-1)/2][j]){changes++;}\n                else if(grid[(n-1)/2][i] == 1) ones += 2;\n                i++;j--;\n            }\n        }\n        \n        if(m%2){\n            int i = 0, j = n-1;\n            while(i < j){\n                if(grid[i][(m-1)/2] != grid[j][(m-1)/2]){changes++;}\n                else if(grid[i][(m-1)/2] == 1) ones += 2;\n                i++;j--;\n            }\n        }\n        \n        \n        if(ones % 4 == 2 && changes == 0) changes = 2;\n        \n        if(n%2==1 && m%2==1 && grid[(n-1)/2][(m-1)/2]==1) changes++;\n        \n        return ans+changes;\n    }\n};",
    "submit_ts": "1722698186",
    "subm_id": "1343172554"
}