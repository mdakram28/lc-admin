{
    "username": "udaylletcode",
    "submission": "class Solution {\n\n    fun minFlips(grid: Array<IntArray>): Int {\n        val rows = grid.size\n        val cols = grid[0].size\n        \n        var flips = 0\n        \n        for (i in 0 until rows / 2) {\n            for (j in 0 until cols / 2) {\n                val elements = listOf(\n                    grid[i][j],\n                    grid[rows - i - 1][j],\n                    grid[i][cols - j - 1],\n                    grid[rows - i - 1][cols - j - 1]\n                )\n                \n                val onesCount = elements.sum()\n                flips += minOf(onesCount, 4 - onesCount)\n            }\n        }\n        \n        var possibleChanges = 0\n        var onesCountInMiddle = 0\n        \n        if (rows % 2 != 0) {\n            val middleRow = rows / 2\n            for (j in 0 until cols / 2) {\n                if (grid[middleRow][j] != grid[middleRow][cols - j - 1]) {\n                    flips++\n                    possibleChanges++\n                } else if (grid[middleRow][j] == 1) {\n                    onesCountInMiddle++\n                }\n            }\n        }\n        \n        if (cols % 2 != 0) {\n            val middleCol = cols / 2\n            for (i in 0 until rows / 2) {\n                if (grid[i][middleCol] != grid[rows - i - 1][middleCol]) {\n                    flips++\n                    possibleChanges++\n                } else if (grid[i][middleCol] == 1) {\n                    onesCountInMiddle++\n                }\n            }\n        }\n        \n        if (rows % 2 != 0 && cols % 2 != 0 && grid[rows / 2][cols / 2] == 1) {\n            flips++\n        }\n        \n        if (possibleChanges == 0 && onesCountInMiddle % 2 != 0) {\n            flips += 2\n        }\n        \n        return flips\n    }\n}\n",
    "submit_ts": "1722699278",
    "subm_id": "1343206797"
}