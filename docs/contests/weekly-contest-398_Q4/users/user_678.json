{
    "username": "Ironman_15",
    "submission": "class Solution {\npublic:\n    unsigned long long binomialCoefficient(int n, int k) {\n        if (k > n) return 0;\n        if (k == 0 || k == n) return 1;\n        \n        // Use Pascal's triangle to calculate binomial coefficient\n        unsigned long long C[k + 1];\n        memset(C, 0, sizeof(C));\n        C[0] = 1; // C(n, 0) is 1\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = min(i, k); j > 0; j--) {\n                C[j] = C[j] + C[j - 1];\n            }\n        }\n        return C[k];\n    }\n    int waysToReachStair(int k) {\n        long long i,ans=0;\n        for(i=0;i<=32;i++)\n        {\n           long long a=pow(2,i+1)-1;\n            long long sub=1+a-k;\n            \n           \n            if(sub>=0&&sub<=i+2)\n            ans=ans+binomialCoefficient(i+2,sub);\n            \n          //cout<<i<<\" \"<<ans<<endl;\n        }\n        if(k==1||k==0)\n            ans++;\n        return ans;\n    }\n};",
    "submit_ts": 1716089280.0
}