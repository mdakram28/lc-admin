{
    "username": "Monisharkness",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> max_lengths(k+1,0);\n        max_lengths[0] = 1;\n        int ans = 1;\n        map<int,vector<int>> max_lengths_by_value;\n        max_lengths_by_value[nums[0]] = max_lengths;\n        for(int i = 1; i < n; i++){\n            vector<int> curr_max_lengths = vector<int>(k+1,0);\n            curr_max_lengths[0] = 1;\n            \n            vector<int> prev_for_this_value = max_lengths_by_value[nums[i]];\n            \n            for(int j = 0; j < k; j++){\n                curr_max_lengths[j+1] = max_lengths[j] + 1;\n            }\n            if(prev_for_this_value.size() > 0){\n                for(int j = 0; j <= k; j++){\n                    curr_max_lengths[j] = max(curr_max_lengths[j], prev_for_this_value[j] + 1);\n                }\n            }\n            max_lengths_by_value[nums[i]] = curr_max_lengths;\n            \n            for(int j = 0; j < k; j++){\n                curr_max_lengths[j+1] = max(curr_max_lengths[j+1],max_lengths[j] + 1);\n            }\n            \n            for(int i : curr_max_lengths) ans = max(ans,i);\n            \n            for(int j = 0; j <= k; j++){\n                max_lengths[j] = max(max_lengths[j], curr_max_lengths[j]);\n            }\n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861604.0
}