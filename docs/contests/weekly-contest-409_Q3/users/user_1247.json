{
    "username": "gcasd001-e",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long int\n#define db double\n#define ldb long double\n#define int128 __int128_t\n#define fr(x) freopen(x,\"r\",stdin);\n#define fw(x) freopen(x,\"w\",stdout);\n#define mst(x,a) memset(x,a,sizeof(x));\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fi first\n#define se second\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define yes std::cout << \"Yes\\n\"\n#define no std::cout << \"No\\n\"\n#ifdef LOCAL\n#include \"leetcode.h\"\n#endif // LOCAL\ntemplate <typename T> int si(const T &x) { return x.size(); }\ntemplate <typename T, typename S> inline bool chmax(T &a, const S &b) { if (a < b) { a = b; return true; } return false; }\ntemplate <typename T, typename S> inline bool chmin(T &a, const S &b) { if (b < a) { a = b; return true; } return false; }\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\n\nset<pair<int, int>> st;\nint sum = 0;\nclass Solution {\npublic:\n\n    void Insert(int x, int y) {\n      auto it = st.lower_bound({x, 0});\n        if (it != st.begin() && prev(it)->second >= y || it->first == x && it->second >= y) return;\n      while (it != st.end() && it->second <= y) {\n        sum -= it->second - it->first;\n        st.erase(it++);\n      }\n      st.insert({x, y});\n      sum += y - x;\n    }\n  \n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n      int Q = si(queries);\n      vector<int> ans(Q);\n      st.clear();\n      sum = 0;\n      for (int i = 0; i < Q; i++) {\n        int a = queries[i][0], b = queries[i][1];\n        Insert(a, b);\n        ans[i] = n - 1 - sum + si(st);\n      }\n      return ans;\n    }\n};\n",
    "submit_ts": "1722743880",
    "subm_id": "552353372"
}