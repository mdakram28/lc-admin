{
    "username": "Terror_404",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int K) {\n     \n            int n=nums.size();\n            map<int,int>mp;\n            map<pair<int,int>,int>xp;\n            // for this k what is the maximum length\n            // and another map which is telling that if i am on nums[i] then what can be the length\n            int ans=0;\n            \n            for(int i=0;i<n;i++){\n                    map<int,int>nmp;\n                    for(int k=0;k<=K;k++){\n                            nmp[k]=mp[k-1]+1;\n                            \n                    }\n                    \n                    // time for the sames\n                    for(int k=0;k<=K;k++){\n                            if(xp.find({nums[i],k})!=xp.end()){\n                            int num=xp[{nums[i],k}];\n                            // num is the longest length\n                                    \n                            nmp[k]=max(nmp[k],num+1);\n                            xp[{nums[i],k}]=nmp[k];\n                            }\n                            else xp[{nums[i],k}]=mp[k-1]+1;\n                    }\n                    \n                  \n                   \n                    for(int k=0;k<=K;k++){\n                            nmp[k]=max(nmp[k],mp[k]);\n                            ans=max(ans,nmp[k]);\n                           // cout<<ans<<\" \"<<i<<endl;\n                    }\n                        mp=nmp;\n            }\n            return ans;\n    }\n};",
    "submit_ts": 1717861451.0
}