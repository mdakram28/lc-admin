{
    "username": "Ninja1369",
    "submission": "class Solution {\n    public int  dfs(int v,int p,ArrayList<Integer>g[],int dp[]){\n        int max=0;\n        for(int u:g[v]){\n            if(u==p) continue;\n            int d=dfs(u,v,g,dp);\n            max=Math.max(max,d+1);\n        }\n        return dp[v]=max;\n    }\n    \n    public void solve(int u,int p,ArrayList<Integer>g[],int dp[],int pm,int ans[]){\n        ans[u]=dp[u];\n        if(p!=-1) ans[u]=Math.max(ans[u],pm);\n        int n=g[u].size();\n        if(p!=-1) n--;\n        int left[]=new int[n];\n        int right[]=new int[n];\n        int k=0;\n        for(int v:g[u]){\n            if(v==p) continue;\n            left[k]=dp[v]+1;\n            right[k]=dp[v]+1;\n            k++;\n        }\n        for(int i=1;i<n;i++) left[i]=Math.max(left[i],left[i-1]);\n        for(int i=n-2;i>=0;i--) right[i]=Math.max(right[i+1],right[i]);\n        k=0;\n        for(int v:g[u]){\n            if(v==p) continue;\n            int l=k==0?0:(left[k-1]+1);\n            int r=k==n-1?0:(right[k+1]+1);\n            int curr=Math.max(pm+1,Math.max(l,r));\n            solve(v,u,g,dp,curr,ans);\n            k++;\n        }\n    }\n    \n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int n=edges1.length+1;\n        int m=edges2.length+1;\n        ArrayList<Integer>g1[]=new ArrayList[n];\n        ArrayList<Integer>g2[]=new ArrayList[m];\n        for(int i=0;i<n;i++) g1[i]=new ArrayList<>();\n        for(int i=0;i<m;i++) g2[i]=new ArrayList<>();\n        for(int e1[]:edges1){\n            int u=e1[0];\n            int v=e1[1];\n            g1[u].add(v);\n            g1[v].add(u);\n        }\n        for(int e2[]:edges2){\n            int u=e2[0];\n            int v=e2[1];\n            g2[u].add(v);\n            g2[v].add(u);\n        }\n        int dp1[]=new int[n];\n        dfs(0,-1,g1,dp1);\n        int dp2[]=new int[m];\n        dfs(0,-1,g2,dp2);\n        int a1[]=new int[n];\n        int a2[]=new int[m];\n        solve(0,-1,g1,dp1,0,a1);\n        solve(0,-1,g2,dp2,0,a2);\n        int min1=a1[0],min2=a2[0];\n        int max=0;\n        for(int i=0;i<n;i++) max=Math.max(max,a1[i]);\n        for(int i=0;i<m;i++) max=Math.max(max,a2[i]);\n        for(int i=0;i<n;i++) min1=Math.min(min1,a1[i]);\n        for(int i=0;i<m;i++) min2=Math.min(min2,a2[i]);\n        return Math.max(max,min1+min2+1);\n    }\n}",
    "submit_ts": 1719717846.0
}