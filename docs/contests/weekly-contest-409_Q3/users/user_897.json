{
    "username": "ami_2025",
    "submission": "#include <vector>\n#include <set>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int cnt = n - 1;\n        vector<int> ans;\n        set<pair<int, int>> intervals;\n        \n        for (auto q : queries) {\n            int u = q[0], v = q[1];\n            bool addNewInterval = true;\n            \n            auto it = intervals.lower_bound({u, v});\n            if (it != intervals.begin()) --it;\n            \n            vector<set<pair<int, int>>::iterator> toErase;\n            \n            while (it != intervals.end() && it->first <= v) {\n                int x = it->first, y = it->second;\n                if (x <= u && y >= v) {\n                    addNewInterval = false;\n                }\n                if (u <= x && y <= v) {\n                    cnt += (y - x) - 1;\n                    toErase.push_back(it);\n                }\n                ++it;\n            }\n            \n            for (auto iter : toErase) {\n                intervals.erase(iter);\n            }\n            \n            if (addNewInterval) {\n                intervals.insert({u, v});\n                cnt = cnt - (v - u) + 1;\n            }\n            \n            ans.push_back(cnt);\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1722742586",
    "subm_id": "1343772365"
}