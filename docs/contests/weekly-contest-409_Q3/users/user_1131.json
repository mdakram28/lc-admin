{
    "username": "phamkienxmas2001",
    "submission": "class Solution {\n    struct DisjointSet {\n        int n;\n        vector<int> par, rank;\n        vector<int> maxElem;\n        int cnt;\n        DisjointSet(int _n): n(_n), par(_n), rank(_n), maxElem(_n) {\n            iota(par.begin(), par.end(), 0);\n            iota(maxElem.begin(), maxElem.end(), 0);\n            //iota(minElem.begin(), minElem.end(), 0);\n            cnt = _n;\n        }\n        int find(int v) {\n            return v == par[v]? v : par[v] = find(par[v]);\n        }\n        bool join(int root_u, int root_v) {\n            // int root_u = find(u), root_v = find(v);\n            if (root_u == root_v) {\n                return false;\n            }\n            cnt--;\n            if (rank[root_u] < rank[root_v]) {\n                par[root_u] = root_v;\n                maxElem[root_v] = max(maxElem[root_v], maxElem[root_u]);\n                //minElem[root_v] = max(minElem[root_v], minElem[root_u]);\n            } else {\n                par[root_v] = root_u;\n                maxElem[root_u] = max(maxElem[root_v], maxElem[root_u]);\n               // minElem[root_u] = max(minElem[root_v], minElem[root_u]);\n                if (rank[root_u] == rank[root_v]) rank[root_u]++;\n            }\n            return true;\n        }\n    };\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        DisjointSet dsu(n - 1);\n        vector<int> ans(queries.size());\n        for (int i = 0; i < queries.size(); i++) {\n            int l = queries[i][0], r = queries[i][1];\n            while (true) {\n                int root_l = dsu.find(l);\n                int nxt = dsu.maxElem[root_l] + 1;\n                if (nxt >= r) break;\n                int root_nxt = dsu.find(nxt);\n                dsu.join(root_l, root_nxt);\n                l = nxt;\n            }\n            ans[i] = dsu.cnt;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743503",
    "subm_id": "1343793385"
}