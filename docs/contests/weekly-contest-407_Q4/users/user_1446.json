{
    "username": "wa-shao",
    "submission": "class Solution {\n   long res = 0;\n\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n        for (int i = 0; i < n; i++){\n            if (diff[i] > 0) {\n                int start = i;\n                int end = i;\n                int min = Integer.MAX_VALUE;\n                while (i < n && diff[i] > 0) {\n                   end = i;\n                   min = Math.min(min,diff[i]);\n                   i++;\n                }\n                check(Arrays.copyOfRange(diff, start, end + 1),-min);\n                i--;\n            }else if (diff[i] < 0){\n                int start = i;\n                int end = i;\n                int min = Integer.MAX_VALUE;\n                while (i < n && diff[i] < 0) {\n                    end = i;\n                    min = Math.min(min,-diff[i]);\n                    i++;\n                }\n                check(Arrays.copyOfRange(diff, start, end + 1),min);\n                i--;\n            }\n        }\n\n\n        return res;\n\n    }\n\n    private void check(int[] diff,int min) {\n        for (int i = 0; i < diff.length; i++){\n            diff[i] += min;\n        }\n        for (int i = 0; i < diff.length; i++){\n            if (diff[i]> 0) {\n                int start = i;\n                int end = i;\n                int step = Integer.MAX_VALUE;\n                while (i < diff.length && diff[i] > 0) {\n                    end = i;\n                    step = Math.min(step,diff[i]);\n                    i++;\n                }\n                check(Arrays.copyOfRange(diff, start, end + 1),-step);\n                i--;\n            }else if (diff[i] < 0){\n                int start = i;\n                int end = i;\n                int step = Integer.MAX_VALUE;\n                while (i < diff.length && diff[i] < 0) {\n                    end = i;\n                    step = Math.min(step,-diff[i]);\n                    i++;\n                }\n                check(Arrays.copyOfRange(diff, start, end + 1),step);\n                i--;\n            }\n        }\n        res += Math.abs(min);\n    }\n}",
    "submit_ts": "1721532278",
    "subm_id": "548391408"
}