{
    "username": "AniModi",
    "submission": "class Solution {\npublic:\n    int tree[4 * 100001];\n \nvoid build(vector<int> &arr, long long node, long long start, long long end)\n{\n    if (start == end) {\n        tree[node] = arr[start];\n        return;\n    }\n    long long mid = (start + end) >> 1;\n    build(arr, 2 * node, start, mid);\n    build(arr, 2 * node + 1, mid + 1, end);\n    tree[node] = tree[2 * node] | tree[2 * node + 1];\n}\n \nlong long query(long long node, long long start, long long end, long long l, long long r)\n{\n    if (start > end || start > r || end < l) {\n        return 0;\n    }\n \n    if (start >= l && end <= r) {\n        return tree[node];\n    }\n \n    long long mid = (start + end) >> 1;\n    long long q1 = query(2 * node, start, mid, l, r);\n    long long q2 = query(2 * node + 1, mid + 1, end, l, r);\n    return q1 | q2;\n}\n \nlong long countSubArrays(const vector<int> &arr, long long n, long long K)\n{\n    long long count = 0;\n    for (long long i = 0; i < n; i++) {\n \n        long long low = i, high = n - 1, index = INT_MAX;\n        while (low <= high) {\n \n            long long mid = (low + high) >> 1;\n \n            if (query(1, 0, n - 1, i, mid) >= K) {\n                index = min(index, mid);\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n \n        if (index != INT_MAX) {\n            count += n - index;\n        }\n    }\n    return count;\n}\n    long long countSubarrays(vector<int>& arr, int _k) {\n        long long n = arr.size();\n        long long k = _k;\n\n        for(long long j = 0; j < 31; j ++) {\n                k ^= (1 << j);\n            }\n        for(long long i = 0; i < n; i ++) {\n            for(long long j = 0; j < 31; j ++) {\n                arr[i] ^= (1 << j);\n            }\n        }\n        build(arr, 1, 0, n - 1);\n        return  countSubArrays(arr, n, k) - countSubArrays(arr, n, k + 1);\n    }\n};",
    "submit_ts": "1720279508",
    "subm_id": "1311754023"
}