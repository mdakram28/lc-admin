{
    "username": "Shounak45",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n=nums.length;\n        long ans=0;\n        int last[]=new int[32];\n        int last_z[]=new int[32];\n        \n\n        Arrays.fill(last,Integer.MAX_VALUE);\n        Arrays.fill(last_z,-1);\n        \n        for(int i=0;i<nums.length;i++){\n            long curr=0;\n            for(int j=0;j<32;j++){\n                int bit=(nums[i]>>j)&1;\n                if(bit==1){\n                    last[j]=Math.min(last[j],i);\n                }else{\n                    last[j]=Integer.MAX_VALUE;\n                    last_z[j]=i;\n                }\n            }\n            int idx=0;\n            int z_idx=Integer.MAX_VALUE;\n            for(int j=0;j<32;j++){\n                int bit=(k>>j)&1;\n                if(bit==1){\n                    idx=Math.max(idx,last[j]);\n                }else{\n                    z_idx=Math.min(z_idx,last_z[j]);\n                }\n            }\n            //System.out.println(i+\" \"+idx+\" \"+z_idx);\n            if(idx == Integer.MAX_VALUE || z_idx==-1 || z_idx<idx){\n                curr=0;\n            }else{\n                curr=(z_idx-idx+1);\n            }\n            //System.out.println(curr);\n            ans+=curr;\n            \n        }\n        return ans;\n        \n    }\n}",
    "submit_ts": "1720281353",
    "subm_id": "1311822040"
}