{
    "username": "Amit130",
    "submission": "class Solution {\npublic:\n    std::vector<int> calculateDifferences(const std::vector<int>& nums, const std::vector<int>& target) {\n        int length = nums.size();\n        std::vector<int> differences(length);\n        for (int i = 0; i < length; ++i) {\n            differences[i] = target[i] - nums[i];\n        }\n        return differences;\n    }\n\n    long long computeTotalOperations(const std::vector<int>& differences) {\n        long long totalOps = 0;\n        int segmentDiff = 0;\n        int length = differences.size();\n\n        for (int i = 0; i < length; ++i) {\n            if (i == 0 || (differences[i - 1] > 0 && differences[i] > 0) || (differences[i - 1] < 0 && differences[i] < 0)) {\n                long long extraOps = std::abs(differences[i]) - std::abs(segmentDiff);\n                if (extraOps > 0) {\n                    totalOps += extraOps;\n                }\n                segmentDiff = differences[i];\n            } else {\n                totalOps += std::abs(differences[i]);\n                segmentDiff = differences[i];\n            }\n        }\n        return totalOps;\n    }\n\n    long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n        auto differences = calculateDifferences(nums, target);\n        return computeTotalOperations(differences);\n    }\n};\n",
    "submit_ts": "1721533365",
    "subm_id": "1328007344"
}