{
    "username": "Srikkanth R",
    "submission": "\n// dp[i][j] = maximum pair from rows i and j, 0 implies not taken\nlong long dp[505][505], gmx[505][505];\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        int n = b.size(), m = b[0].size();\n\n        long long ans = -(long long)1e18;\n\n        for (int i=0;i<n;++i) for (int j=i;j<n;++j) dp[i][j] = -(long long)1e18;\n\n        for (int c=0;c<m;++c) {\n\n            for (int i=0;i<n;++i) {\n                gmx[i][i] = b[i][c];\n                for (int j=i+1;j<n;++j) {\n                    gmx[i][j] = max(gmx[i][j-1], b[j][c]*1LL);\n                }\n            }\n\n            for (int i=0;i<n;++i) {\n                for (int j=i+1;j<n;++j) {\n                    long long cur = -(long long)1e18;\n                    if (i > 0) cur = max(cur, gmx[0][i-1]);\n                    if (i+1 < j) cur = max(cur, gmx[i+1][j-1]);\n                    if (j+1<n) cur = max(cur, gmx[j+1][n-1]);\n                    ans = max(ans, dp[i][j] + cur);\n\n                }\n            }\n\n            for (int i=0;i<n;++i) {\n                for (int j=i+1;j<n;++j) {\n                    dp[i][j] = max(dp[i][j], dp[i][i] + b[j][c]);\n                    dp[i][j] = max(dp[i][j], dp[j][j] + b[i][c]);\n                }\n            }\n            for (int i=0;i<n;++i) dp[i][i] = max(dp[i][i], b[i][c]*1LL);\n\n            // for (int i=0;i<n;++i) {\n            //     for (int j=i;j<n;++j) {\n            //         cout << dp[i][j] << \" \";\n            //     }\n            //     cout << '\\n';\n            // }\n            // cout << \"---------\\n\";\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907235",
    "subm_id": "1359097296"
}