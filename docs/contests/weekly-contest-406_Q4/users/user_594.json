{
    "username": "SanskarDhyani",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCost, vector<int>& verticalCost) {\n    long long totalCost = 0;\n    sort(horizontalCost.begin(), horizontalCost.end(), greater<int>());\n\n    \n    sort(verticalCost.begin(), verticalCost.end(), greater<int>());\n\n    int horizontalParts = 1, verticalParts = 1; \n\n    int i = 0, j = 0;\n    while (i < horizontalCost.size() && j < verticalCost.size()) {\n        if (horizontalCost[i] > verticalCost[j]) {\n            totalCost += long(horizontalCost[i]) * verticalParts*1LL;\n            horizontalParts++;\n            i++;\n        } else {\n            totalCost += long(verticalCost[j]) * horizontalParts*1LL;\n\n\n            verticalParts++;\n            j++;\n        }\n    }\n    while (i < horizontalCost.size()) {\n        totalCost += long(horizontalCost[i]) * verticalParts*1LL;\n        i++;\n    }\n    while (j < verticalCost.size()) {\n        totalCost += long(verticalCost[j])* horizontalParts*1LL;\n        j++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720925379",
    "subm_id": "1320252735"
}