{
    "username": "xymabinogi",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int m = edges.size();\n        int n = m + 1;\n        vector<vector<int>> adj(n);\n        for (auto &e : edges){\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n        vector<int> res(n, 0);\n        vector<array<int,2>> subtree(n);\n        vector<array<int,2>> idx(n, {-1, -1});\n        \n        auto dfs = [&](auto self, int u, int p) -> void {\n            \n            if ((int) adj[u].size() == 1 && adj[u][0] == p){\n                return;\n            }\n            \n            for (auto &v : adj[u]) if (v != p){\n                self(self, v, u);\n                auto x = (v % 2 == 0 ? 2 : 1) + subtree[v][0];\n                if (x > subtree[u][1]){\n                    subtree[u][1] = x;\n                    idx[u][1] = v;\n                }\n                if (subtree[u][1] > subtree[u][0]){\n                    swap(subtree[u][1], subtree[u][0]);\n                    swap(idx[u][1], idx[u][0]);\n                }    \n            }\n\n        };\n        dfs(dfs, 0, -1);\n        \n        res[0] = subtree[0][0];\n        \n        auto dfs2 = [&](auto self, int u, int p, int up) -> void {\n            \n            for (auto &v : adj[u]) if (v != p){\n                int added = (u % 2 == 0 ? 2 : 1);\n                int siblings = (idx[u][0] == v ? subtree[u][1] : subtree[u][0]);\n                \n                int updated_up = max(added + up, added + siblings);\n                res[v] = max(subtree[v][0], updated_up);\n                self(self, v, u, updated_up);\n            }\n        };\n        dfs2(dfs2, 0, -1, 0);\n        \n        return res;\n        \n        \n        \n        \n    }\n};",
    "submit_ts": "1722698778",
    "subm_id": "1343191508"
}