{
    "username": "Shashwat_Panigrahy",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(std::vector<std::vector<int>>& board) {\n        int rows = board.size();\n        int cols = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        auto topThree = computeTopThree(board, rows, cols);\n\n        for (int r1 = 0; r1 < rows; ++r1) {\n            for (int r2 = r1 + 1; r2 < rows; ++r2) {\n                for (int r3 = r2 + 1; r3 < rows; ++r3) {\n                    maxSum = std::max(maxSum, computeMaxSum(topThree[r1], topThree[r2], topThree[r3]));\n                }\n            }\n        }\n\n        return maxSum;\n    }\n\nprivate:\n    std::vector<std::array<std::pair<int, int>, 3>> computeTopThree(const std::vector<std::vector<int>>& board, int rows, int cols) {\n        std::vector<std::array<std::pair<int, int>, 3>> topValues(rows);\n        for (int i = 0; i < rows; ++i) {\n            std::vector<std::pair<int, int>> rowPairs;\n            for (int j = 0; j < cols; ++j) {\n                rowPairs.push_back({board[i][j], j});\n            }\n            std::sort(rowPairs.rbegin(), rowPairs.rend());\n            for (int k = 0; k < 3; ++k) {\n                topValues[i][k] = rowPairs[k];\n            }\n        }\n        return topValues;\n    }\n\n    long long computeMaxSum(const std::array<std::pair<int, int>, 3>& top1,\n                            const std::array<std::pair<int, int>, 3>& top2,\n                            const std::array<std::pair<int, int>, 3>& top3) {\n        long long maxSum = LLONG_MIN;\n\n        for (int i = 0; i < 3; ++i) {\n            for (int j = 0; j < 3; ++j) {\n                if (top1[i].second == top2[j].second) continue;\n                for (int k = 0; k < 3; ++k) {\n                    if (top1[i].second == top3[k].second || top2[j].second == top3[k].second) continue;\n                    long long currentSum = static_cast<long long>(top1[i].first) +\n                                           static_cast<long long>(top2[j].first) +\n                                           static_cast<long long>(top3[k].first);\n                    maxSum = std::max(maxSum, currentSum);\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723908993",
    "subm_id": "1359175294"
}