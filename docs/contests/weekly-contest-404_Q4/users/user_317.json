{
    "username": "govind70821",
    "submission": "\nclass Solution\n{\npublic:\nint solve(vector<vector<int>> &dp, int st, int &farn)\n    {\n        int n = dp.size();\n        farn = st;\n        vector<int> temp(n, -1);\n        helper(dp, temp, st, 0, farn);\n        return temp[farn];\n    }\n\n    void helper(vector<vector<int>> &dp, vector<int> &temp, int x, int dis, int &farn)\n    {\n        temp[x] = dis;\n        if (dis > temp[farn]) farn = x;\n            \n        for (auto it : dp[x])\n            if (temp[it] == -1)\n                helper(dp, temp, it, dis + 1, farn);\n            \n        \n    }\n    int minimumDiameterAfterMerge(vector<vector<int>> &nums1, vector<vector<int>> &nums2)\n    {\n        int n = nums1.size();\n        int m = nums2.size();\n\n        vector<vector<int>> dp1(n+1);\n        vector<vector<int>> dp2(m+1);\n       for (auto &it : nums2)\n        {\n           \n            dp2[it[1]].push_back(it[0]);\n            dp2[it[0]].push_back(it[1]);\n        }\n        for (auto &it : nums1)\n        {\n            dp1[it[1]].push_back(it[0]);\n            dp1[it[0]].push_back(it[1]);\n            \n        }\n    \n        int far2 = 0;\n        solve(dp2, 0, far2);\n        int d2 = solve(dp2, far2, far2);\n        int far1 = 0;\n        solve(dp1, 0, far1);\n        int d1 = solve(dp1, far1, far1);\n        return max({(d1 + 1) / 2 + (d2 + 1) / 2 + 1,d1,d2});\n    }\n};\n",
    "submit_ts": 1719718759.0
}