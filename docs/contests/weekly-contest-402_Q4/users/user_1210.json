{
    "username": "murongtiezhu",
    "submission": "class Solution {\n    vector<int> trees;\n    int lowbit(int x)\n    {\n        return x&(-x);\n    }\n    void add(int x,int k)\n    {\n        while(x < trees.size())\n        {\n            trees[x] += k;\n            x+=lowbit(x);\n        }\n    }\n    int ser(int x)//\u6c42sum 1~x\n    {\n        int ans=0;\n        while(x>0)\n        {\n            ans+=trees[x];\n            x-=lowbit(x);\n        }\n        return ans;\n    }\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> flag(n);\n        trees.resize(n + 1, 0);\n        for(int i = 0; i < n; ++i)\n        {\n            if(i > 0 && i < n - 1 && nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n            {\n                add(i + 1, 1);\n                flag[i] = true;\n            }\n            else\n            {\n                flag[i] = false;\n            }\n        }\n        for(int i = 0; i < n; ++i)\n        {\n            cout << flag[i];\n        }\n        vector<int> ans;\n        for(auto q : queries)\n        {\n            if(q[0] == 1)\n            {\n                if(q[1] == q[2])\n                    ans.push_back(0);\n                else\n                    ans.push_back(ser(q[2]) - ser(q[1] + 1));\n            }\n            if(q[0] == 2)\n            {\n                nums[q[1]] = q[2];\n                for(int y = max(0, q[1] - 1); y < min(n, q[1] + 2); ++y)\n                {\n                    bool new_flag = y > 0 && y < n - 1 && nums[y] > nums[y - 1] && nums[y] > nums[y + 1];\n                    add(y + 1, new_flag - flag[y]);\n                    flag[y] = new_flag;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507999.0
}