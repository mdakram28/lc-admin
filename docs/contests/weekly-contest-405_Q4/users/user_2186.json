{
    "username": "leetcodebug",
    "submission": "#define MIN(a, b) ((a) < (b) ? (a) : (b))\n\nlong long dp[50000];\n\ntypedef struct item {\n    char *next[26];\n    bool is_end;\n    int score;\n} item_t;\n\nitem_t trie;\n\nvoid trie_insert(char *w, int score)\n{\n    item_t *hdr = &trie;\n\n    for (int i = 0; w[i]; i++) {\n        if (hdr->next[w[i] - 'a'] == NULL) {\n            hdr->next[w[i] - 'a'] = (item_t *)calloc(1, sizeof(item_t));\n        }\n\n        hdr = hdr->next[w[i] - 'a'];\n    }\n\n    hdr->is_end = true;\n\n    if (hdr->score == 0) {\n        hdr->score = score;\n    }\n    else if (score < hdr->score) {\n        hdr->score = score;\n    }\n    \n}\n\nlong long minCost(char *target, int idx)\n{\n    long long min = INT_MAX, tmp;\n    item_t *hdr = &trie;\n\n    if (target[idx] == 0) {\n        //printf(\"OK\\n\");\n        return 0;\n    }\n\n    if (dp[idx] != -1) {\n        //printf(\"DP\\n\");\n        return dp[idx];\n    }\n\n    for (int i = idx; target[i]; i++) {\n\n        if (hdr->next[target[i] - 'a'] == NULL) {\n            break;\n        }\n\n        hdr = hdr->next[target[i] - 'a'];\n\n        if (hdr->is_end) {\n            //printf(\"Match, %d\\n\", hdr->score);\n            tmp = hdr->score + minCost(target, i + 1);\n            min = MIN(min, tmp);\n        }\n\n    }\n\n    dp[idx] = min;\n\n    return min;\n}\n\nvoid _trie_release(item_t *hdr)\n{\n    if (hdr) {\n        for (int i = 0; i < 26; i++) {\n            _trie_release(hdr->next[i]);\n        }\n        \n        free(hdr);\n    }\n}\n\nvoid trie_release()\n{\n    for (int i = 0; i < 26; i++) {\n        _trie_release(trie.next[i]);\n    }\n}\n\nint minimumCost(char* target, char** words, int wordsSize, int* costs, int costsSize) {\n\n    long long ans = INT_MAX;\n    \n\n    for (int i = 0; target[i]; i++) {\n        dp[i] = -1;\n    }\n\n    memset((void *)&trie, 0, sizeof(trie));\n\n    for (int i = 0; i < wordsSize; i++) {\n        trie_insert(words[i], costs[i]);\n    }\n\n    ans = minCost(target, 0);\n\n    trie_release();\n\n    //printf(\"%d\\n\", ans);\n\n    return ans >= INT_MAX ? -1 : ((int)ans);\n}",
    "submit_ts": "1720324263",
    "subm_id": "1312395346"
}