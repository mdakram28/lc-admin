{
    "username": "mith_panchal",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        \n        int last = colors[0];\n        int n = colors.size();\n\n        int windowSize = 1;\n\n        int left = 0;\n        int right = left + 1;\n\n        int res = 0;\n\n        while(left < n && right != left) {\n\n            // cout<<left<<\" \"<<right<<\" \"<<windowSize<<\"\\n\";\n\n            \n\n            if(colors[right] != colors[(right-1+n)%n]) {\n                windowSize++;\n                right = (right+1)%n;\n            }\n            else if(right > left) {\n                left = (right)%n;\n                right = (left+1)%n;\n                windowSize = 1;\n            }\n            else {\n                return res;\n            }\n\n            if(windowSize == k) {\n                windowSize--;\n                left++;\n                res++;\n            }\n\n        }\n\n        return res;\n        \n    }\n};\n\n// start = 0 end = 0\n\n",
    "submit_ts": "1720280030",
    "subm_id": "1311774322"
}