{
    "username": "i_love_xiaoshagua_cpp",
    "submission": "class Solution {\npublic:\n    long long get(vector<int>& nums, int l, int r, vector<long long>& dp) {\n        r = min(r, int(nums.size()) -1);\n        if (l > r) return 0;\n        for (int i = l; i <= r; ++i) {\n            dp[i] = 0;\n            if (i > l) {\n                dp[i] = dp[i - 1];\n            }\n            dp[i] = max(dp[i], (long long)(nums[i]));\n            if (i > l + 1) dp[i] = max(dp[i], (long long)(nums[i]) + dp[i - 2]);\n        }\n        return dp[r];\n    }\n    void helper(vector<long long>& dp1, vector<long long>& dp2, vector<long long>& dp3, vector<long long>& dp4, int idx, int b_size, vector<int>& nums, vector<long long>& dp) {\n        int l = idx * b_size;\n        int r = idx * b_size + b_size - 1;\n        dp1[idx] = get(nums, l, r, dp);\n        dp2[idx] = get(nums, l, r - 1, dp);\n        dp3[idx] = get(nums, l+1, r, dp);\n        dp4[idx] = get(nums, l+1, r-1, dp);\n    }\n    long long fin(vector<long long>& dp1, vector<long long>& dp2, vector<long long>& dp3, vector<long long>& dp4, int b_count) {\n        long long has = 0, no = 0;\n        for (int i = 0; i < b_count; ++i) {\n            // cout << dp1[i] << \" \" << dp2[i] << \" \" << dp3[i] << \" \" << dp4[i] << endl;\n            // update has.\n            long long new_has = max(dp1[i] + no, dp3[i] + has);\n            long long new_no = max(dp2[i] + no, dp4[i] + has);\n            has = new_has;\n            no = new_no;\n            // cout << \"has = \" << has << \" no = \" << no << endl;\n        }\n        return max(has, no);\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n                long long mod = 1000000007LL;\n        vector<long long> dp(n);\n        if (n <= 3) {\n            long long ans = 0;\n                    for (const vector<int>& q : queries) {\n            int pos = q[0];\n            int x = q[1];\n            nums[pos] = x;\n            long long act = get(nums, 0, n - 1, dp);\n                        ans += act;ans%=mod;}\n            return ans;\n        }\n        int b_size = sqrt(n);\n        int b_count = (n+b_size-1) / b_size;\n        vector<long long> dp1(b_count, 0), dp2(b_count, 0), dp3(b_count, 0), dp4(b_count, 0);\n        for (int i = 0; i < b_count; ++i) {\n            helper(dp1, dp2, dp3, dp4, i, b_size, nums, dp);\n        }\n\n        long long ans = 0LL;\n        for (const vector<int>& q : queries) {\n            int pos = q[0];\n            int x = q[1];\n            nums[pos] = x;\n            helper(dp1, dp2, dp3, dp4, pos / b_size, b_size, nums, dp);\n            long long tmp = fin(dp1, dp2, dp3, dp4, b_count);\n            // if (true) {\n            // cout << \"fin = \" << tmp << endl;\n            // long long act = get(nums, 0, n - 1, dp);\n            // cout << \"actual = \" << act << endl;\n            // }\n            ans += tmp;\n            ans %= mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716695246.0
}