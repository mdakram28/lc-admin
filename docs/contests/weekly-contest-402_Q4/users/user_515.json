{
    "username": "watashi",
    "submission": "class Solution {\n  template<typename T = int>\n  struct BIT {\n    vector<T> a;\n\n    void init(int n) {\n      vector<T>(n + 1).swap(a);\n    }\n\n    void add(int i, T v) {\n      for (int j = i + 1; j < (int)a.size(); j = (j | (j - 1)) + 1) {\n        a[j] += v;\n      }\n    }\n\n    // [0, i)\n    T sum(int i) const {\n      T ret = T();\n      for (int j = i; j > 0; j = j & (j - 1)) {\n        ret += a[j];\n      }\n      return ret;\n    }\n\n    T get(int i) const {\n      return sum(i + 1) - sum(i);\n    }\n\n    void set(int i, T v) {\n      add(i, v - get(i));\n    }\n  };\n\npublic:\n  bool isPeak(const vector<int>& a, int i) {\n    return 0 <= i - 1 && i + 1 < (int)a.size() && a[i - 1] < a[i] && a[i] > a[i + 1];\n  }\n\n  vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n    auto a = nums;\n    const int n = a.size();\n    BIT<int> bit;\n    bit.init(n);\n    for (int i = 0; i < n; ++i) {\n      if (isPeak(a, i)) {\n        bit.add(i, 1);\n      }\n    }\n    vector<int> ret;\n    for (const auto& q : queries) {\n      if (q[0] == 1) {\n        const int l = q[1] + 1, r = q[2];\n        if (l >= r) {\n          ret.push_back(0);\n        }\n        else {\n          ret.push_back(bit.sum(r) - bit.sum(l));\n        }\n      }\n      else {\n        const int i = q[1], v = q[2];\n        for (int j = i - 1; j <= i + 1; ++j) {\n          if (isPeak(a, j)) {\n            bit.add(j, -1);\n          }\n        }\n        a[i] = v;\n        for (int j = i - 1; j <= i + 1; ++j) {\n          if (isPeak(a, j)) {\n            bit.add(j, 1);\n          }\n        }\n      }\n    }\n    return ret;\n  }\n};",
    "submit_ts": 1718506521.0
}