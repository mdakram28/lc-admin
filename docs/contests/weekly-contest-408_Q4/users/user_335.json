{
    "username": "sirvi_26",
    "submission": "typedef long long ll ; \nclass Solution {\npublic:\n    \n    vector<int> par , sz ; \n    \n    int find(int v)\n    {\n        if (v == par[v])\n            return v;\n        return par[v] = find(par[v]);\n    }\n    void join(int a, int b) \n    {\n        a = find(a);\n        b = find(b);\n        if (a != b) \n        {\n            if (sz[a] < sz[b])\n                swap(a, b);\n            par[b] = a;\n            sz[a] += sz[b];\n        }\n    }\n    int circle(int xx1, int yy1, int xx2, int yy2, int rr1, int rr2)\n    {\n        ll x1 = xx1 , y1 = yy1 , x2 = xx2 , y2 = yy2 , r1 = rr1 , r2 = rr2 ; \n        long double d = sqrt((x1 - x2) * (x1 - x2)\n                             + (y1 - y2) * (y1 - y2));\n\n        if (d <= r1 - r2) {\n            return 1 ; \n        }\n        else if (d <= r2 - r1) {\n           return 1 ; \n        }\n        else if (d < r1 + r2) {\n            return 1 ; \n        }\n        else if (d == r1 + r2) {\n            return 1 ; \n        }\n        else {\n            return 0 ;\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        par.clear() ,sz.clear();\n        int n = c.size() ; \n        par.resize(n+1) , sz.resize(n+1,1);\n        for(int i = 0 ; i<n; ++i)\n            par[i] = i ; \n        \n        for(int i = 0 ; i<c.size(); ++i)\n        {\n            for(int j = i+1 ; j<c.size();++j)\n            {\n                if(circle(c[i][0],c[i][1],c[j][0],c[j][1],c[i][2],c[j][2]))\n                    join(i,j);\n            }\n        }\n        \n        map<int,vector<int>> mp;\n        \n        for(int i = 0 ;i<n; ++i)\n        {\n            mp[find(i)].push_back(i);\n        }\n        int ans = true ; \n        for(auto & i : mp)\n        {\n            int left = 1e9 , top = 0 ,  bottom = 1e9 , right = 0 ; \n            for(auto & j : i.second)\n            {\n                int x = c[j][0] , y = c[j][1] , r = c[j][2] ; \n                left = min(left ,  x - r);\n                right = max(right, x + r) ; \n                top = max(top,y+r) ; \n                bottom = min(bottom , y-r) ; \n            }\n            \n            int up_touch = false , bt_touch = false ; \n            \n            if(left<=0 or top>=Y)\n                up_touch = true ; \n            if(bottom<=0 or right>=X)\n                bt_touch = true ; \n            \n            if(bt_touch and up_touch)\n            {\n                ans = false ; \n                break ; \n            }\n            \n        }\n        \n        // for(auto & i : mp)\n        // {\n        //     for(auto & j : i.second)\n        //     {\n        //         cout<<j<<\" \";\n        //     }\n        //     cout<<\"\\n\" ; \n        // }\n        \n        return ans; \n        \n    }\n};",
    "submit_ts": "1722136734",
    "subm_id": "1335743409"
}