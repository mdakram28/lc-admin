{
    "username": "WuWenChun",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        /*\n        nums = [3,5,1,2], target = [4,6,2,4], offset = [1,1,1,2]\n        nums = [1,3,2]  , target = [2,1,4]  , offset = [1,-2,2]\n        \n        offset = [1,2,3,2,1] => 3\n        offset = [1,3,2,3,1] => 4\n        \n        nums = [4,8,8], target = [8,3,6], offset = [4,-5,-2], Expect 9.\n        \n        */\n        int nlen = nums.size();\n        long long res = 0;\n        long long pmx = 0, nmn = 0;\n        for(int ni = 0; ni < nlen; ++ni){\n            long long offset = 1LL*target[ni] - nums[ni];\n            // pos to neg or neg to pos.\n            if((offset <= 0) && (pmx != 0))res += pmx, pmx = 0;\n            else if((offset >= 0) && (nmn != 0))res += -nmn, nmn = 0;\n            \n            // check offset cases.\n            if(offset == 0)pmx = 0, nmn = 0;\n            else if(offset > 0){\n                if(pmx > offset)res += (pmx - offset);\n                pmx = offset;\n            }else if(offset < 0){\n                if(nmn < offset)res += - (nmn - offset );\n                nmn = offset;\n            }\n        }\n        if(pmx != 0)res += pmx;\n        else if(nmn != 0)res += -nmn;\n        return res;\n    }\n};",
    "submit_ts": "1721532201",
    "subm_id": "1327980175"
}