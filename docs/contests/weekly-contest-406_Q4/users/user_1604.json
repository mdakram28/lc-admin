{
    "username": "unsubble",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long result = 0;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int v = 1, h = 1;\n        int hIndex = m - 2, vIndex = n - 2;\n        while (hIndex >= 0 || vIndex >= 0) {\n            long max = 0;\n            if (hIndex >= 0)\n                max = horizontalCut[hIndex];\n            if (vIndex >= 0) {\n                max = Math.max(verticalCut[vIndex], max);\n                if (max == verticalCut[vIndex]) {\n                    vIndex--;\n                    result += v * max;\n                    h++;\n                } else {\n                    hIndex--;\n                    result += h * max;\n                    v++;\n                }\n            } else {\n                hIndex--;\n                result += h * max;\n                v++;\n            }\n        }\n        return result;\n    }\n}\n",
    "submit_ts": "1720925755",
    "subm_id": "1320265144"
}