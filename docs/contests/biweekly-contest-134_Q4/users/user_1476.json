{
    "username": "eric_123",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& numbers, int target) {\n        int length = numbers.size();\n        long long totalCount = 0;\n        unordered_map<long long, long long> previousResults;\n        \n        for (int i = 0; i < length; ++i) {\n            unordered_map<long long, long long> currentResults;\n            \n            if (numbers[i] == target) {\n                ++totalCount;\n            }\n            \n            currentResults[numbers[i]] = 1;\n            \n            for (auto& [value, frequency] : previousResults) {\n                long long andResult = value & numbers[i];\n                \n                if (andResult == target) {\n                    totalCount += frequency;\n                }\n                \n                currentResults[andResult] += frequency;\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return totalCount;\n    }\n};\n\n",
    "submit_ts": "1720281394",
    "subm_id": "1311823486"
}