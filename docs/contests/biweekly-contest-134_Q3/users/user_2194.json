{
    "username": "silentbluesky",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int> &colors, int k) {\n        int n = colors.size();\n        int ans = 0;\n        vector<int> dp(n, 0);\n        // dp[i] \u8868\u793a\u4ee5\u7b2ci\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u4ea4\u66ff\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n        int i = n - 1, len = 1;\n        while (i != 0 and colors[i] != colors[((i + 1) + n) % n]) {\n            i = (i - 1 + n) % n;\n            len++;\n        }\n        ans = len >= k ? 1 : 0;\n        dp[0] = len;\n        for (int i = 1; i < n; i++) {\n            if (colors[i] != colors[i - 1]) {\n                dp[i] = dp[i - 1] + 1;\n                if (dp[i] >= k) {\n                    ans++;\n                }\n            } else {\n                dp[i] = 1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278716",
    "subm_id": "544563979"
}