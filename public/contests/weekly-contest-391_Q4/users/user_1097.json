{
    "username": "killerpajji",
    "submission": "class Solution {\npublic:\n    int find(int idx,int l,vector<vector<int>>& arr){\n        int n = arr.size();\n        int ans = 0;\n        for(int i=0;i<n;i++){\n            if(i==l || i==idx) continue;\n            ans = max(ans,abs(arr[idx][0]-arr[i][0]) + abs(arr[idx][1]-arr[i][1]));\n        }\n        return ans;\n    }\n    int findDis(int idx,vector<vector<int>>& arr){\n        vector<int> sum,diff;\n        \n        int i = 0;\n        for(int j=0;j<arr.size();j++){\n            if(j==idx) continue;\n            vector<int> x = arr[j];\n            // cout<<i<<\" \"<<idx;\n            // if(i==idx) continue;\n            sum.push_back(x[0]+x[1]);\n            diff.push_back(x[0]-x[1]);\n            // i++;\n        }\n        \n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        int n = sum.size();\n        \n        return max(sum[n-1]-sum[0],diff[n-1]-diff[0]);\n    }\n    int minimumDistance(vector<vector<int>>& arr) {\n        int n = arr.size();\n        vector<vector<int>> sum,diff;\n        \n        int i = 0;\n        for(auto x:arr){\n            sum.push_back({x[0]+x[1],i});\n            diff.push_back({x[0]-x[1],i});\n            i++;\n        }\n        \n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        int p1,p2;\n        if(sum[n-1][0]-sum[0][0]>diff[n-1][0]-diff[0][0]){\n            p1 = sum[n-1][1];\n            p2 = sum[0][1];\n        }\n        else{\n            p1 = diff[n-1][1];\n            p2 = diff[0][1];\n        }\n        \n        \n        \n        // cout<<p1<<\" \"<<p2<<endl;\n        \n        return min(findDis(p1,arr),findDis(p2,arr));\n        \n        // return min(find(p1,p2,arr),find(p2,p1,arr));\n    }\n};"
}