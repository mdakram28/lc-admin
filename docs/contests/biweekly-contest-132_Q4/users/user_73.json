{
    "username": "xyz_xyz_xyz_xyz",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size(), res = 1;;\n        int dp[k+5][n+5];\n        memset(dp,-0x3f,sizeof dp);\n        dp[0][0] = 1;\n        for(int i = 1;i<=n;i++)dp[0][i] = 1;\n        \n        for(int l = 0;l<=k;l++){\n            unordered_map<int,int> tmax;\n            tmax[nums[0]] = 1;\n            set<pair<int,int>> s;\n            unordered_map<int,int> mapping;\n            if(l>=1)s.insert({dp[l-1][1], nums[0]});\n            for(int i = 2;i<=n;i++){\n                // for(int j = 1;j<i;j++){\n                //     if(nums[i-1]==nums[j-1])dp[l][i] = max(dp[l][i], dp[l][j]+1);\n                //     else if(l>=1)dp[l][i] = max(dp[l][i], dp[l-1][j]+1);\n                // }\n                dp[l][i] = tmax[nums[i-1]]+1;\n                if(l>=1){\n                    dp[l][i] = max(dp[l][i], s.rbegin()->first + 1);\n                }\n                tmax[nums[i-1]] = max(tmax[nums[i-1]], dp[l][i]);\n                if(l>=1){\n                    s.erase({mapping[nums[i-1]],nums[i-1]});\n                    mapping[nums[i-1]] = dp[l-1][i];\n                    s.insert({mapping[nums[i-1]],nums[i-1]});\n                }\n                res = max(res,dp[l][i]);\n            }\n            //  max1 = 0, maxnum1 = -1, max2 = 0, maxnum2 = -1;\n            // for(auto [k,v]: tmax){\n                \n            // }\n        }\n        return res;        \n    }\n};",
    "submit_ts": "1717859688",
    "subm_id": "1281731410"
}