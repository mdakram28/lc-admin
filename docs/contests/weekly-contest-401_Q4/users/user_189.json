{
    "username": "yakkala1",
    "submission": "class Solution {\n    \n    List<Integer> list = new ArrayList<Integer>();\n    Map<Integer,Boolean> cache = new HashMap<>();\n\n    public int maxTotalReward(int[] rewardValues) {\n        Set<Integer> set = new HashSet<>();\n        for (int r:rewardValues)\n            set.add(r);\n        list.addAll(set);\n        Collections.sort(list);\n        \n        int ret = list.get( list.size()-1 );\n        for (int i=list.size()-1; i>=0; i--) {\n            int cur = list.get(i);\n            if (cur*2 < ret) break;\n            \n            int reqd = cur-1;\n            while (true) {\n                if (isPossible(reqd)) {\n                    ret = Math.max(cur+reqd, ret);\n                    break;\n                } else {\n                    reqd = reqd-1;\n                    if (ret >= cur+reqd) break;\n                }\n            }\n        }\n        \n        return ret;\n    }\n    \n    private void log(Object o) {\n        // System.out.println(o);\n    }\n    \n    private boolean isPossible(int reqd) {\n        log(\"isP \"+reqd);\n        if (!cache.containsKey(reqd))\n            cache.put(reqd, calculate(reqd));\n        return cache.get(reqd);\n    }\n    \n    private boolean calculate(int reqd) {\n        log(\"calc \"+reqd);\n        int id = Collections.binarySearch(list, reqd);\n        if (id>=0)\n            return true;\n        id = -id-1;\n        // if (list.get(id) == reqd) return true;\n        \n        for (int i=id-1; i>=0; i--) {\n            int diff = reqd-list.get(i);\n            if (diff*2 >= reqd) break;\n            if (isPossible(diff)) return true;\n        }\n        \n        return false;\n    }\n\n}",
    "submit_ts": 1717904926.0
}