{
    "username": "Aryam_singh",
    "submission": "class Solution {\npublic:\n    long long binpow(long long a, long long b) {\n    long long res = 1;\n    while (b > 0) {\n        if (b & 1)\n            res = res * a;\n        a = a * a;\n        b >>= 1;\n    }\n    return res;\n}\n    long long int solve(map<pair<int,pair<int,int>>,int >&mp,int curr,int check,int jmp,int last){\n        if(curr>last+2)return 0;\n        if(mp.find({curr,{check,jmp}})!=mp.end())return mp[{curr,{check,jmp}}];\n        long long int count=0;\n        if(curr==last)count++;\n        long long int currval=curr+binpow(2,jmp);\n        if(currval<=last+2){\n            count=count+solve(mp,currval,0,jmp+1,last);\n        }\n        if(check==0){\n            count=count+solve(mp,curr-1,1,jmp,last);\n        }\n        return mp[{curr,{check,jmp}}]= count;\n        \n    }\n    int waysToReachStair(int k) {\n     map<pair<int,pair<int,int>>,int>mp;\n       long long  int ans=solve(mp,1,0,0,k);\n        // queue<pair<int,pair<int,int>>>q;\n        // q.push({1,{0,0}});\n        // while(q.size()>0){\n        //     pair<int,pair<int,int>> top=q.front();\n        //     q.pop();\n        //     int x=top.first;\n        //     // mp[x]++;\n        //     if(x==k)ans++;\n        //     int check=top.second.first;\n        //     int jp=top.second.second;\n        //     if(check==1){\n        //         long long int currval=x+binpow(2,jp);\n        //         if(currval<=k+2){\n        //             q.push({currval,{0,jp+1}});\n        //         }\n        //     }\n        //     else{\n        //         long long int currval=x+binpow(2,jp);\n        //         if(currval<=k+2){\n        //             q.push({currval,{0,jp+1}});\n        //         }\n        //         if(x>0){\n        //             q.push({x-1,{1,jp}});\n        //         }\n        //     }\n        // }\n        return ans;\n    }\n};",
    "submit_ts": "1716088511",
    "subm_id": "1261816099"
}