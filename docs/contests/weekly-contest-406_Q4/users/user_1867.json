{
    "username": "delicatoboll",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long cols = 1;\n        long long rows = 1;\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        \n        long long totalCost = 0;\n        while (!horizontalCut.empty() && !verticalCut.empty()) {\n            if (horizontalCut.back() < verticalCut.back()) {\n                totalCost += rows * verticalCut.back();\n                cols++;\n                verticalCut.pop_back();\n            } else {\n                totalCost += cols * horizontalCut.back();\n                rows++;\n                horizontalCut.pop_back();\n            }\n        }\n        while (!horizontalCut.empty()) {\n            totalCost += cols * horizontalCut.back();\n            horizontalCut.pop_back();\n        }\n        while (!verticalCut.empty()) {\n            totalCost += rows * verticalCut.back();\n            verticalCut.pop_back();\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925903",
    "subm_id": "1320269886"
}