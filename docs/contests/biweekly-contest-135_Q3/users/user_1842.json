{
    "username": "Girija_93",
    "submission": "#include <vector>\n#include <unordered_map>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        unordered_map<int, vector<int>> diffMap;\n        vector<int> XList;\n        int size = nums.size();\n        for (int i = 0; i < size / 2; ++i) {\n            int left = nums[i];\n            int right = nums[size - i - 1];\n            int diff = abs(left - right);\n            int X = max({left, right, k - left, k - right});\n            diffMap[diff].push_back(X);\n            XList.push_back(X);\n        }\n\n        int minChanges = size;\n        sort(XList.begin(), XList.end());\n        for (const auto& pair : diffMap) {\n            int diff = pair.first;\n            const vector<int>& values = pair.second;\n            auto it = lower_bound(XList.begin(), XList.end(), diff);\n            int index = it - XList.begin();\n            int currentChanges = index * 2 + (size / 2 - index);\n\n            for (int X : values) {\n                if (X < diff) {\n                    currentChanges -= 2;\n                } else {\n                    currentChanges -= 1;\n                }\n            }\n\n            minChanges = min(minChanges, currentChanges);\n        }\n\n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721490166",
    "subm_id": "1327474922"
}