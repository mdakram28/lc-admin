{
    "username": "_kevinyang",
    "submission": "class Solution {\npublic:\n    struct BIT{\n\tvector<int>arr;\n\tint size;\n\tvoid init(int n){\n\t\tsize = n;\n\t\tarr.resize(n+5);\n\t}\n\tvoid update(int x, int val){\n\t\tfor(int a = x; a<=size; a+=a&-a){\n\t\t\tarr[a]+=val;\n\t\t}\n\t}\n\tint query(int x){\n\t\tint sum = 0;\n\t\tfor(int a = x; a>0; a-=a&-a){\n\t\t\tsum+=arr[a];\n\t\t}\n\t\treturn sum;\n\t}\n\tvoid change(int x, int val){\n\t\tint v = query(x)-query(x-1);\n\t\tupdate(x,val-v);\n\t}\n\tint query(int x, int y){//inclusive\n\t\treturn query(y)-query(x-1);\n\t}\n};\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        BIT bit;\n        bit.init(n+5);\n        for(int i = 1; i+1<n; i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]){\n                bit.update(i,1);\n            }\n        }\n        vector<int>ans;\n        for(auto nxt: queries){\n            int cm = nxt[0];\n            if(cm==1){\n                int l = nxt[1];\n                int r = nxt[2];\n                if(l+1>=r){\n                    ans.push_back(0);\n                    continue;\n                }\n                ans.push_back(bit.query(l+1,r-1));\n            }\n            else{\n                int i = nxt[1];\n                int v = nxt[2];\n                nums[i] = v;\n                for(int j = i-1; j<=i+1; j++){\n                    if(j>0 && j+1<n){\n                        int val = 0;\n                        if(nums[j] > nums[j-1] && nums[j]>nums[j+1]){\n                            val = 1;\n                        }\n                        bit.change(j,val);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718505603.0
}