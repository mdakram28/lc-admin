{
    "username": "Divanshi_Jain",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    private int[][][] dp;\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        dp = new int[n][51][51];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= 50; j++) {\n                for (int k = 0; k <= 50; k++) {\n                    dp[i][j][k] = -1;\n                }\n            }\n        }\n        return findPairs(nums, 0, 0, 50);\n    }\n    public int findPairs(int[] nums, int idx, int prev1, int prev2) {\n        if (idx >= nums.length) return 1;\n        if (dp[idx][prev1][prev2] != -1) return dp[idx][prev1][prev2];\n        int ans = 0;\n        for (int i = 0; i <= nums[idx]; i++) {\n            int arr1Val = i;\n            int arr2Val = nums[idx] - i;\n            if (arr1Val >= prev1 && arr2Val <= prev2) {\n                ans = (ans + findPairs(nums, idx + 1, arr1Val, arr2Val)) % MOD;\n            }\n        }\n        dp[idx][prev1][prev2] = ans;\n        return ans;\n    }\n}",
    "submit_ts": "1723346754",
    "subm_id": "1351584423"
}