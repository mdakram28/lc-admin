{
    "username": "jdkcloud",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> a(n);\n        vector<int> b(n);\n        for (int i = 0; i < n; i ++) {\n            a[i] = points[i][0] - points[i][1];\n            b[i] = points[i][0] + points[i][1];\n        }\n        sort(a.begin(), a.end());\n        sort(b.begin(), b.end());\n        /*\n        for (int val: a) {\n            cout << val << \" \";\n        }\n        cout << endl;\n        for (int val: b) {\n            cout << val << \" \";\n        }\n        cout << endl;\n        */\n        int d = max(a[n-1]- a[0], b[n-1] - b[0]);\n        //cout << \"originl: \" << a[n-1]- a[0] << \" \" << b[n-1] - b[0] << endl;\n        for (int i = 0; i < n; i ++) {\n            int x = points[i][0] - points[i][1];\n            int y = points[i][0] + points[i][1];\n            int p = a[n-1]- a[0];\n            int q= b[n-1] - b[0];\n            if (x  == a[0]) {\n                p = a[n-1] - a[1];\n            }\n            if (x == a[n-1]) {\n                p = a[n-2] - a[0];\n            }\n            if (y == b[0]) {\n                q = b[n-1] - b[1];\n            }\n            if (y == b[n-1]) {\n                q = b[n-2] - b[0];\n            }\n            //cout << \"remove \" << i << \" \" << p << \" + \" << q << endl;\n            d = min(d, max(p, q));\n        }\n        return d;\n    }\n};"
}