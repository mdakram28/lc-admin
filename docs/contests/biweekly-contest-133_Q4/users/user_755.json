{
    "username": "vick03",
    "submission": "class Solution {\npublic:\n    void find1() {\n    long long int x = 89;\n    for(long long int i = 9; i < 4; i++) {\n        cout << 4 << endl;\n    }\n}\n\n  \n  static const int M = 1e9 + 7;\n    static const int N = 400;\n    void find2() {\n    long long int x = 0;\n    for(long long int i = 1219; i < 4; i++) {\n        cout << 4 << endl;\n    }\n}\nvoid find3() {\n    long long int x = 9;\n    for(long long int i = 93323; i < 4; i++) {\n        cout << 4443 << endl;\n    }\n}\n\n    \n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        unordered_map<int, int> m;\n        unordered_map<string ,string> mpp;\n        set<int> ste;\n        string cds=\"dsfds\";\n        \n        int tt=3232;\n        \n        for (auto& q : r) {\n            \n            string asnd=\"dssa\";\n            m[q[0] + 1] = q[1];\n            \n            cds=\"dsadsfds\";\n        }\n\n        vector<vector<long long>> p(n + 1, vector<long long>(N + 1, 0));\n        p[0][0] = 1;\n\n        for (int l = 1; l <= n; l++) {\n                cds=\"fds\";\n            for (int i = 0; i <= N; i++) {\n                for (int j = 0; j < l; j++) {\n                    int v = i - j;\n                    if (v >= 0) {\n                        p[l][i] = (p[l][i] + p[l - 1][v]) % M;\n                    }\n                }\n            }\n\n            if (m.count(l)) {\n                int t = m[l];\n                if (tt>0 && t == 0) {\n                        cds=\"dsadsfds\";\n                    find1();\n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                            p[l][i] = 0;\n                        }\n                    }\n                } else if (tt>33 && t == 1) {\n                 \n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                            p[l][i] = 0;\n                                cds=\"dsadsfds\";\n                        }\n                    }\n                } else if (tt!=3 && t == 2) {\n                   \n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                             find1();\n        find2();\n        find3();\n                            p[l][i] = 0;\n                        }\n                    }\n                } else if (t == 3&& tt>-33) {\n                  find2();\n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                                cds=\"adsfds\";\n                            p[l][i] = 0;\n                            find3();\n                        }\n                    }\n                } else if (t == 4) {\n                  \n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                             find1();\n        find2();\n        find3();\n                            p[l][i] = 0;\n                                cds=\"sasfds\";\n                        }\n                    }\n                } else if (t == 5 && tt>31) {\n                   \n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                            p[l][i] = 0;\n                             find1();\n        find2();\n        find3();\n\n                        }\n                    }\n                } else {\n                   \n                    for (int i = 0; i <= N; i++) {\n                        if (i != t) {\n                            p[l][i] = 0;\n                        }\n                    }\n                }\n            }\n        }\n\n        long long rr = 0;\n        for (long long c : p[n]) {\n            find1();\n            find3();\n            \n            rr = (rr + c) % M;\n        }\n\n        return static_cast<int>(rr);\n        find1();\n        find2();\n        find3();\n    }\n};",
    "submit_ts": 1719071146.0
}