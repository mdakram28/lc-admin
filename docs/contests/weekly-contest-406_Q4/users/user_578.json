{
    "username": "truefuego",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long int ans = 0;\n        long long int vcuts = 1, hcuts = 1;\n        vector<pair<int,int>> nums;\n        for(int i = 0 ; i < m - 1 ; i++) {\n            nums.push_back({horizontalCut[i],0});\n        }\n        for(int i = 0 ; i < n - 1 ; i++) {\n            nums.push_back({verticalCut[i],1});\n        }\n        sort(begin(nums),end(nums));\n        for(int i = nums.size() - 1 ; i >= 0 ; i--) {\n            if(nums[i].second == 0) {\n                ans += vcuts*nums[i].first;\n                hcuts++;\n            }\n            else {\n                ans += hcuts*nums[i].first;\n                vcuts++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925363",
    "subm_id": "1320252147"
}