{
    "username": "SirTechnical",
    "submission": "struct FenwickTreeOneBasedIndexing {\n    vector<int> bit;  // binary indexed tree\n    int n;\n\n    FenwickTreeOneBasedIndexing(int n) {\n        this->n = n + 1;\n        bit.assign(n + 1, 0);\n    }\n\n    int sum(int idx) {\n        int ret = 0;\n        for (++idx; idx > 0; idx -= idx & -idx)\n            ret += bit[idx];\n        return ret;\n    }\n\n    int sum(int l, int r) {\n        return sum(r) - sum(l - 1);\n    }\n\n    void add(int idx, int delta) {\n        if (delta == 0) return;\n        for (++idx; idx < n; idx += idx & -idx)\n            bit[idx] += delta;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int N = nums.size();\n        FenwickTreeOneBasedIndexing b(N+10);\n        vector<int> v;\n        int INF = 0x3f3f3f3f;\n        v.reserve(nums.size()+5);\n        v.push_back(INF);\n        v.push_back(INF);\n        for (int i = 0; i < N; ++i) {\n            v.push_back(nums[i]);\n        }\n        v.push_back(INF);\n        v.push_back(INF);\n        \n        vector<int> ans;\n        vector<int> qp(N+5, 0);\n        for (int i = 2; i < N+2; ++i) {\n            if (v[i] > v[i-1] && v[i] > v[i+1]) {\n                qp[i] = 1;\n                b.add(i, qp[i]);\n            }\n        }\n        \n        \n        for (int i = 0; i < queries.size(); ++i) {\n            if (queries[i][0] == 1) {\n                int l = queries[i][1]+2;\n                int r = queries[i][2]+2;\n                b.add(l, -qp[l]);\n                if (l!=r) b.add(r, -qp[r]);\n                ans.push_back(b.sum(l, r));\n                b.add(l, qp[l]);\n                if (l!=r) b.add(r, qp[r]);\n            } else {\n                int idx = queries[i][1]+2;\n                v[idx] = queries[i][2];\n\n                for (int j = idx-1; j <= idx+1; ++j) {\n                    b.add(j, -qp[j]);\n                    if (v[j] > v[j-1] && v[j] > v[j+1]) {\n                        qp[j] = 1;\n                    } else {\n                        qp[j] = 0;\n                    }\n                    b.add(j, qp[j]);\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1718506568.0
}