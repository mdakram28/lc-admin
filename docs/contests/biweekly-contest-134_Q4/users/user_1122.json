{
    "username": "Joshiiii",
    "submission": "#define ll long long int\nclass Solution {\npublic:\n    void updateBits(vector<int> &store, int num) {\n        int pos = 31;\n        while(num) {\n            store[pos] += (num & 1);\n            num >>= 1;\n            pos--;\n        }\n    }\n\n    void updateNegativeBits(vector<int> &store, int num) {\n        int pos = 31;\n        while(num) {\n            store[pos] = max(0, store[pos] - (num & 1));\n            num >>= 1;\n            pos--;\n        }\n    }\n\n    bool isValid(int k, vector<int> &store) {\n        int pos = 31;\n        while(k) {\n            if((k & 1) && store[pos] == 0)\n                return false;\n            k >>= 1;\n            pos--;\n        }\n        return true;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll ans = 0;\n        unordered_map<ll, ll> prev;\n        for (int i = 0; i < n; i++) {\n            unordered_map<ll, ll> next; \n            if (nums[i] == k) ans++;\n            next[nums[i]] = 1;\n            \n            for (auto it : prev) {\n                if ((it.first & nums[i]) == k) ans += it.second;\n                next[it.first & nums[i]] += it.second;\n            }\n            prev = next;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720280496",
    "subm_id": "1311791537"
}