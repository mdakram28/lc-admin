{
    "username": "sunrise1024",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        int mi1,z1,mi2,z2;\n        sort(points.begin(),points.end());\n        mi1=points[0][0]+points[0][1];mi2=points[0][0]-points[0][1];\n        z1=z2=0;\n        int mx1=0,mx2=0;\n        pair<int,int> mz1,mz2;\n        for(int i=0;i<n;++i){\n            if(points[i][0]+points[i][1]<mi1){\n                mi1=points[i][0]+points[i][1];z1=i;\n            }\n            if(points[i][0]-points[i][1]<mi2){\n                mi2=points[i][0]-points[i][1];z2=i;\n            }\n            if(points[i][0]+points[i][1]-mi1>mx1){\n                mx1=points[i][0]+points[i][1]-mi1;\n                mz1={z1,i};\n            }\n            if(points[i][0]-points[i][1]-mi2>mx2){\n                mx2=points[i][0]-points[i][1]-mi2;\n                mz2={z2,i};\n            }\n        }\n        int ans=max(mx1,mx2);\n        mi1=2e8;mi2=2e8;\n        z1=z2=0;mx1=0,mx2=0;\n        for(int i=0;i<n;++i){\n            if(i==mz1.first)continue;\n            if(points[i][0]+points[i][1]<mi1){\n                mi1=points[i][0]+points[i][1];z1=i;\n            }\n            if(points[i][0]-points[i][1]<mi2){\n                mi2=points[i][0]-points[i][1];z2=i;\n            }\n            if(points[i][0]+points[i][1]-mi1>mx1){\n                mx1=points[i][0]+points[i][1]-mi1;\n            }\n            if(points[i][0]-points[i][1]-mi2>mx2){\n                mx2=points[i][0]-points[i][1]-mi2;\n            }\n        }ans=min(ans,max(mx1,mx2));\n        mi1=2e8;mi2=2e8;\n        z1=z2=0;mx1=0,mx2=0;\n        for(int i=0;i<n;++i){\n            if(i==mz1.second)continue;\n            if(points[i][0]+points[i][1]<mi1){\n                mi1=points[i][0]+points[i][1];z1=i;\n            }\n            if(points[i][0]-points[i][1]<mi2){\n                mi2=points[i][0]-points[i][1];z2=i;\n            }\n            if(points[i][0]+points[i][1]-mi1>mx1){\n                mx1=points[i][0]+points[i][1]-mi1;\n            }\n            if(points[i][0]-points[i][1]-mi2>mx2){\n                mx2=points[i][0]-points[i][1]-mi2;\n            }\n        }ans=min(ans,max(mx1,mx2));\n        mi1=2e8;mi2=2e8;\n        z1=z2=0;mx1=0,mx2=0;\n        for(int i=0;i<n;++i){\n            if(i==mz2.first)continue;\n            if(points[i][0]+points[i][1]<mi1){\n                mi1=points[i][0]+points[i][1];z1=i;\n            }\n            if(points[i][0]-points[i][1]<mi2){\n                mi2=points[i][0]-points[i][1];z2=i;\n            }\n            if(points[i][0]+points[i][1]-mi1>mx1){\n                mx1=points[i][0]+points[i][1]-mi1;\n            }\n            if(points[i][0]-points[i][1]-mi2>mx2){\n                mx2=points[i][0]-points[i][1]-mi2;\n            }\n        }ans=min(ans,max(mx1,mx2));\n        mi1=2e8;mi2=2e8;\n        z1=z2=0;mx1=0,mx2=0;\n        for(int i=0;i<n;++i){\n            if(i==mz2.second)continue;\n            if(points[i][0]+points[i][1]<mi1){\n                mi1=points[i][0]+points[i][1];z1=i;\n            }\n            if(points[i][0]-points[i][1]<mi2){\n                mi2=points[i][0]-points[i][1];z2=i;\n            }\n            if(points[i][0]+points[i][1]-mi1>mx1){\n                mx1=points[i][0]+points[i][1]-mi1;\n            }\n            if(points[i][0]-points[i][1]-mi2>mx2){\n                mx2=points[i][0]-points[i][1]-mi2;\n            }\n        }ans=min(ans,max(mx1,mx2));\n        return ans;\n    }\n};"
}