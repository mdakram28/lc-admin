{
    "username": "Abhishek_Ranjan",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, int> mp;\n        int x = 0;\n        for (int i = 0; i < n / 2; i++) {\n            mp[abs(nums[i] - nums[n - 1 - i])]++;\n            x = max(x, mp[abs(nums[i] - nums[n - 1 - i])]);\n        }\n        priority_queue<pair<int, int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;\n        for (auto ele : mp) {\n            pq.push({ele.second, ele.first});\n            if (pq.size() > 100)\n                pq.pop();\n        }\n        int ans=INT_MAX;\n        while (!pq.empty()) {\n            x=pq.top().second;\n            pq.pop();\n            int ct = 0;\n            for (int i = 0; i < n / 2; i++) {\n                if (abs(nums[i] - nums[n - 1 - i]) != x) {\n                    if (nums[i] + x <= k || nums[n - 1 - i] + x <= k ||\n                        nums[n - 1 - i] - x >= 0 || nums[i] - x >= 0)\n                        ct++;\n                    else\n                        ct += 2;\n                }\n            }\n            ans=min(ans,ct);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488567",
    "subm_id": "1327426292"
}