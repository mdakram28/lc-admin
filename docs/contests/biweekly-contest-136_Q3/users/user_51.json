{
    "username": "jwpassion1",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = (int)grid.size(), n = (int)grid[0].size();\n        int ans = 0;\n        \n        for (int i = 0; i < m / 2; i++){\n            for (int j = 0; j < n / 2; j++){\n                int co[2] = {0, 0};\n                co[grid[i][j]]++;\n                co[grid[i][n - 1 - j]]++;\n                co[grid[m - 1 - i][j]]++;\n                co[grid[m - 1 - i][n - 1 - j]]++;\n                ans += min(co[0], co[1]);\n            }\n        }\n        \n        if (m % 2 && n % 2 && grid[m / 2][n / 2]) ans++;\n\n        bool flag = false;\n        int co1 = 0;\n        \n        if (m % 2){\n            for (int i = 0; i < n / 2; i++){\n                if (grid[m / 2][i] != grid[m / 2][n - 1 - i]){\n                    ans++;\n                    flag = true;\n                }\n                else if (grid[m / 2][i]) co1 += 2;\n            }\n        }\n        if (n % 2){\n            for (int i = 0; i < m / 2; i++){\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2]){\n                    ans++;\n                    flag = true;\n                }\n                else if (grid[i][n / 2]) co1 += 2;\n            }\n        }\n\n        if (!flag && co1 % 4) ans += 2;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722696705",
    "subm_id": "1343118848"
}