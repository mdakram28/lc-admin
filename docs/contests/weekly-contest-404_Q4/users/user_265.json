{
    "username": "GaleStarr",
    "submission": "class Solution {\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) \n    {\n        ArrayList<ArrayList<Integer>> tree1 = new ArrayList<>();\n        ArrayList<ArrayList<Integer>> tree2 = new ArrayList<>();\n        \n        for(int i=0;i<=edges1.length;i++) \n        {\n            tree1.add(new ArrayList<>());\n        }\n        \n        for(int i=0;i<=edges2.length;i++) \n        {\n             tree2.add(new ArrayList<>());\n        }\n        \n        for(int ar[] : edges1) \n        {\n            int u=ar[0];\n            int v = ar[1];\n            \n            tree1.get(u).add(v);\n            tree1.get(v).add(u);\n        }\n         for(int ar[] : edges2) \n        {\n            int u=ar[0];\n            int v = ar[1];\n            \n            tree2.get(u).add(v);\n            tree2.get(v).add(u);\n        }\n        \n        int diameter1 = getDiameter(tree1);\n        int diameter2 = getDiameter(tree2);\n        \n        int mergedDiameter = (diameter1+1)/2 + (diameter2+1)/2 + 1;\n        \n        int ans=Math.max(diameter1,diameter2);\n        ans=Math.max(ans,mergedDiameter);\n        \n        return ans;\n    }\n    \n    public int getDiameter(ArrayList<ArrayList<Integer>> tree) \n    {\n        int dist[] = new int[tree.size()];\n        dfs(tree,0,-1,dist);\n        \n        int max=0;\n        int maxidx=-1;\n        \n        for(int i=0;i<dist.length;i++) \n        {\n            if(dist[i]>=max) \n            {\n                max=dist[i];\n                maxidx=i;\n            }\n        }\n        \n        Arrays.fill(dist,0);\n        int ans=0;\n        dfs(tree,maxidx,-1,dist);\n        \n        for(int i: dist) \n        {\n            ans=Math.max(ans,i);\n        }\n        \n        return ans;\n        \n    }\n    \n    public void dfs(ArrayList<ArrayList<Integer>> tree,int cur,int par,int dist[]) \n    {\n        if(par!=-1) \n        {\n            dist[cur]=dist[par]+1;\n        }\n        \n        for(Integer i: tree.get(cur)) \n        {\n            if(i!=par) \n            {\n                dfs(tree,i,cur,dist);\n            }\n        }\n    }\n}",
    "submit_ts": 1719718482.0
}