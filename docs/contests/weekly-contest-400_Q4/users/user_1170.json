{
    "username": "Blaze_012",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int[] zeros = new int[32];\n        java.util.function.Consumer<Integer> minus = x->{\n            for(int i = 0; i < 32; i++){\n                if(((x>>i)&1) == 0){\n                    zeros[i] -= 1;\n                }\n            }\n        };\n        \n        java.util.function.Consumer<Integer> plus = x->{\n            for(int i = 0; i < 32; i++){\n                if(((x>>i)&1) == 0){\n                    zeros[i] += 1;\n                }\n            }\n        };\n        \n        java.util.function.Supplier<Integer> eval = ()->{\n            int res = 0;\n            for(int i =0; i < 32; i++){\n                if(zeros[i] == 0){\n                    res ^= (1<<i);\n                }\n            }\n            return res;\n        };\n        \n        int i = 0;\n        int n = nums.length;\n        int ans = Integer.MAX_VALUE;\n        for(int j = 0; j < n; j++){\n            plus.accept(nums[j]);\n            int x = eval.get();\n            ans = Math.min(ans, Math.abs(x-k));\n            while(i < j && x < k){\n                minus.accept(nums[i]);\n                ++i;\n                x = eval.get();\n                ans = Math.min(ans, Math.abs(x-k));\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1717300763",
    "subm_id": "1274854311"
}