{
    "username": "tiger212",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int, int> m;\n        vector<int> ans;\n        for (auto &q: queries) {\n            int tmpdiff =  q[1] - q[0] - 1;\n            if (m.empty()) {\n                m[q[0]] = tmpdiff;\n                ans.push_back(n-1-tmpdiff);\n                continue;\n            }\n            auto lb = m.lower_bound(q[0]);\n            int tmp = ans.back();\n            if (lb != m.end() && lb->first == q[0]) {\n                if (tmpdiff <= m[q[0]]) {\n                    ans.push_back(tmp);\n                    continue;\n                }\n                else {\n                    auto ub = lb;\n                    while (ub != m.end() && ub->first < q[1]) {\n                        tmp += ub->second;\n                        // cout << ub->second << ' ';\n                        ++ub;\n                    }\n                    m.erase(lb, ub);\n                    m[q[0]] = tmpdiff;\n                    int tmpans = (int)((long long)tmp - tmpdiff);\n                    ans.push_back(tmpans);\n                }\n                continue;\n            }\n            if (lb != m.begin()) {\n                auto lbl = lb;\n                --lbl;\n                if (lbl->first + lbl->second + 1 >=q[1]) {\n                    ans.push_back(tmp);\n                    continue;\n                }\n            }\n            auto ub = lb;\n            while (ub != m.end() && ub->first < q[1]) {\n                tmp += ub->second;\n                // cout << ub->second << ' ';\n                ++ub;\n            }\n            m.erase(lb, ub);\n            m[q[0]] = tmpdiff;\n            // cout << tmpdiff << endl;\n            ans.push_back(tmp - tmpdiff);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742656",
    "subm_id": "552346071"
}