{
    "username": "bkeshavbaskar",
    "submission": "class Solution:\n    def dummy1():\n        pass\n    def dummy2():\n        pass\n    def bfs(self, blahblahblah, start, target1, target2, nodes):\n        q = deque()\n        visited = [0] * (nodes + 4)\n        q.append(start)\n        visited[start] = 1\n        while q:\n            u = q.popleft()\n            for v in blahblahblah[u]:\n                if not visited[v]:\n                    q.append(v)\n                    visited[v] = 1\n        return visited[target1] or visited[target2]\n    \n    def canReachCorner(self, X, Y, circles2):\n        circles = [(circles2[i][0], circles2[i][1], circles2[i][2]) for i in range(len(circles2))]\n        keshav = len(circles)\n        blahblahblah = [[] for _ in range(keshav + 4)]\n        \n        for i in range(keshav):\n            if circles[i][0] <= circles[i][2]:\n                blahblahblah[keshav].append(i)\n                blahblahblah[i].append(keshav)\n            if X - circles[i][0] <= circles[i][2]:\n                blahblahblah[keshav + 2].append(i)\n                blahblahblah[i].append(keshav + 2)\n            if circles[i][1] <= circles[i][2]:\n                blahblahblah[keshav + 1].append(i)\n                blahblahblah[i].append(keshav + 1)\n            if Y - circles[i][1] <= circles[i][2]:\n                blahblahblah[keshav + 3].append(i)\n                blahblahblah[i].append(keshav + 3)\n            \n            for j in range(i + 1, keshav):\n                distance = sqrt(pow(circles[i][0] - circles[j][0], 2) +\n                                pow(circles[i][1] - circles[j][1], 2))\n                radius_sum = circles[i][2] + circles[j][2]\n                if radius_sum >= distance:\n                    blahblahblah[i].append(j)\n                    blahblahblah[j].append(i)\n        \n        is_blocked = 0\n        is_blocked = max(is_blocked, self.bfs(blahblahblah, keshav, keshav + 1, keshav + 2, keshav + 4))\n        is_blocked = max(is_blocked, self.bfs(blahblahblah, keshav + 3, keshav + 2, keshav + 1, keshav + 4))  \n        if is_blocked:\n            return False\n        return True\n",
    "submit_ts": "1722136713",
    "subm_id": "1335742780"
}