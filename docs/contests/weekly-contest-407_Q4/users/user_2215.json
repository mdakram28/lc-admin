{
    "username": "paulkkk",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diff = []\n        for i in range(len(nums)):\n            diff.append(target[i]-nums[i])\n        total_count = 0\n        #print(diff)\n        diff = self.reduce_diff(diff)\n        #print(diff)\n        while not self.is_done(diff):\n            oper_count = self.make_operation(diff)\n            total_count += oper_count\n            diff = self.reduce_diff(diff)\n            #print(diff)\n        #print(diff)\n        return total_count\n    \n    def is_done(self,diff):\n        for i in diff:\n            if i!=0:\n                return False\n        return True\n\n    def reduce_diff(self,diff):\n        new_diff = []\n        for i in range(len(diff)):\n            if diff[i] == 0 and (not new_diff or new_diff[-1]==0):\n                continue\n            else:\n                new_diff.append(diff[i])\n        return new_diff\n\n    def make_operation(self,diff):\n        counter = 0\n        head = 0\n        while head<len(diff):\n            while head<len(diff) and diff[head]==0:\n                head+=1\n            if head<len(diff) and diff[head]>0:\n                positive = True\n            elif head<len(diff) and diff[head]<0:\n                 positive = False\n\n            if head>=len(diff):\n                break\n            tail = head\n            cur_amount = abs(diff[tail])\n            #print(diff[head],head,tail,len(diff))\n            while tail<len(diff) and ((diff[tail]>0 and positive) or (diff[tail]<0 and not positive)):\n                cur_amount = min(cur_amount,abs(diff[tail]))\n                tail += 1\n\n            # update diff\n            #print(head,tail)\n            for i in range(head,tail):\n                if positive:\n                    diff[i]-=cur_amount\n                else:\n                    diff[i]+=cur_amount\n            #print(diff)\n            # update head and operation\n            head = max(tail,head+1)\n            counter += cur_amount\n        return counter\n\n\n",
    "submit_ts": "1721533813",
    "subm_id": "548401131"
}