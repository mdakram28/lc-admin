{
    "username": "pandeypriyansh408",
    "submission": "class Solution:\n    def maximumLength(seld, numbers, k_value):\n        n = len(numbers)\n        dp = [[1] * (k_value + 1) for _ in range(n)]\n        maximum = 1\n        vk = [-1] * (k_value + 1)\n        vkm = [{} for _ in range(k_value + 1)]\n    \n        for i in range(n):\n            for j in range(k_value + 1):\n                for l in range(j):\n                    dp[i][j] = max(dp[i][j], 1 + vk[l])\n                if numbers[i] in vkm[j]:\n                    dp[i][j] = max(dp[i][j], 1 + vkm[j][numbers[i]])\n                maximum = max(maximum, dp[i][j])\n        \n            for j in range(k_value + 1):\n                vk[j] = max(vk[j], dp[i][j])\n                vkm[j][numbers[i]] = max(vkm[j].get(numbers[i], -1), dp[i][j])\n    \n        return maximum",
    "submit_ts": 1717862319.0
}