{
    "username": "meet_katharotiya",
    "submission": "class Solution {\n\npublic:\n    #define ll  int\n    int waysToReachStair(int k) {\n       map<int, vector<vector<int>>> dp;\n        vector<vector<int>>v(32,vector<int>(2,-1));\n    function<ll(ll,ll,ll,bool)>f=[&] (int k, int i, int jump, bool flag)->int\n    {\n        if (i > k + 2)\n            return 0;\n\n        if(jump >= 32)\n            return 0;\n\n        if(dp.find(i)!=dp.end() && dp[i][jump][flag] != -1)\n            return dp[i][jump][flag];\n\n        int ans=0;\n        if(i==k)ans++;\n        if (flag)\n            ans += f(k, i - 1, jump, !flag);\n        if (i + (1 << jump) <= k + 1)\n            ans += f(k, i + (1 << jump), jump + 1, 1);\n\n        dp[i]=v;\n\n        return dp[i][jump][flag] = ans;\n    };\n        \n        return f(k, 1, 0, 1);\n    } \n};",
    "submit_ts": "1716090313",
    "subm_id": "1261864325"
}