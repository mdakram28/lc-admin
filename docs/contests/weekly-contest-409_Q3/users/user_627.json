{
    "username": "ruo-ne-2",
    "submission": "class Solution {\npublic:\n    int m;\n    vector<int> c;\n    vector<int> vis;\n    int lowbit(int x) { return x & (-x); }\n    void add(int x, int k) {\n        for (int i = x; i <= m; i += lowbit(i)) {\n            c[i] += k;\n        }\n    }\n    void add2(int x, int k) {\n        for (int i = x; i <= m; i += lowbit(i)) {\n            vis[i] += k;\n        }\n    }\n    int query(int x) {\n        int ans = 0;\n        for (int i = x; i; i -= lowbit(i)) ans += c[i];\n        return ans;\n    }\n    bool query2(int x) {\n        int ans = 0;\n        for (int i = x; i; i -= lowbit(i)) ans += vis[i];\n        return ans != 0;\n    }\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        c.resize(n + 10, 0);\n        vis.resize(n + 10, 0);\n        m = n;\n        for (int i = 1; i <= n; i++) add(i, i - 1), add(i + 1, 1 - i);\n        vector<int> ans;\n        for (auto q : queries) {\n            int u = q[0] + 1, v = q[1] + 1;\n            if (!query2(u) && !query2(v)) {\n                int up = query(q[1] + 1) - query(q[0] + 1) - 1;\n                add(v, -up), add(n + 1, up);\n                add2(u + 1, 1), add2(v, -1);\n            }\n            ans.emplace_back(query(n));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741899",
    "subm_id": "552341209"
}