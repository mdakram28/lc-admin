{
    "username": "hughstudy-n",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long res = 0;\n        int[] mem = new int[30];\n        for (int i = 0; i < 30; ++i) {\n            mem[i] = -1;\n        }\n        for (int i = 0; i < nums.length; ++i) {\n            int[] range = {0, i};\n            for (int j = 0; j < 30; ++j) {\n                if (!isMark(nums[i], j)) {\n                    mem[j] = i;\n                }\n                if (isMark(k, j)) {\n                    range[0] = Math.max(range[0], mem[j] + 1);\n                } else {\n                    range[1] = Math.min(range[1], mem[j]);\n                }\n            }\n            res += Math.max(range[1] - range[0] + 1, 0);\n        }\n        return res;\n    }\n\n    private boolean isMark(int num, int offset) {\n        int tmp = (num >> offset) & 1;\n        return tmp == 1;\n    }\n}",
    "submit_ts": "1720277292",
    "subm_id": "544555694"
}