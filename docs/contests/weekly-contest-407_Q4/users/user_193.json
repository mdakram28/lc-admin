{
    "username": "JJZin",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        \n        \n        def miniCalc(add):\n            \n            mono = []\n            \n            post = 0\n            ans = 0\n            for ea in range(len(add)):\n                if add[ea] >= post:\n                    ans += (add[ea] - post)\n                    post = add[ea]\n                    continue\n                if add[ea] == post:\n                    continue\n                post = add[ea]\n            return ans\n                \n                \n        def calc(addays):\n            \n            return sum([miniCalc([abs(j) for j in i]) for i in addays])\n        basis = []\n        for ea in range(len(nums)):\n            basis.append(nums[ea] - target[ea])\n        \n        basin = []\n        mini = []\n        \n        above = True\n        for ea in range(len(basis)):\n            if basis[ea] == 0:\n                if len(mini):\n                    basin.append(mini)\n                mini = []\n                continue\n            if basis[ea] > 0:\n                if above:\n                    mini.append(basis[ea])\n                else:\n                    if len(mini):\n                        basin.append(mini)\n                    mini = [basis[ea]]\n                above = True\n            if basis[ea] < 0:\n                if not above:\n                    mini.append(basis[ea])\n                else:\n                    if len(mini):\n                        basin.append(mini)\n                    mini = [basis[ea]]\n                above = False\n        if len(mini):\n            basin.append(mini)\n        \n        \n        return calc(basin)\n                \n                \n        ",
    "submit_ts": "1721530726",
    "subm_id": "1327942033"
}