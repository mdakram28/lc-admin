{
    "username": "jayesh_shaw",
    "submission": "#include<bits/stdc++.h>\nclass Solution {\nprivate:\n    static bool comparePoints(const vector<int> &a, const vector<int> &b) {\n        if (a[0]+a[1]<b[0]+b[1]) return 1;\n        return 0;\n    }\n    \n    int jayesh(vector<vector<int>>& arr){\n        multiset<int>a,b;\n        int n=arr.size();\n        for (int i = 0; i < n; i++) {\n            a.insert(arr[i][0]+arr[i][1]);\n            b.insert(arr[i][0]-arr[i][1]);\n        }\n        int mx=INT_MAX;\n        \n//             for(auto j: a)cout<<j<<\" \";\n//             cout<<endl;\n        \n//             for(auto j: b)cout<<j<<\" \";\n//             cout<<endl;\n        for(int i=0;i<n;i++){\n            a.erase(a.find(arr[i][0]+arr[i][1]));\n            b.erase(b.find(arr[i][0]-arr[i][1]));\n            \n        \n//             for(auto j: a)cout<<j<<\" \";\n//             cout<<endl;\n        \n//             for(auto j: b)cout<<j<<\" \";\n//             cout<<endl;\n            \n            int abhi= max(*a.rbegin()-*a.begin(),*b.rbegin()-*b.begin());\n            mx=min(mx,abhi);\n            // cout<<abhi<<\" \"<<mx<<endl;\n            a.insert(arr[i][0]+arr[i][1]);\n            b.insert(arr[i][0]-arr[i][1]);\n        }\n        return mx;\n    }\npublic:\n    int minimumDistance(vector<vector<int>>& v) {\n        return jayesh(v);\n//         sort(begin(v),end(v),comparePoints);\n//         for(auto i: v){\n//             cout<<i[0]<<\" \"<<i[1]<<endl;\n//         }\n        \n//         for(int i=0;i<v.size();i++){\n//             for(int j=0;j<v.size();j++){\n//                 int abhi= abs(v[i][0]-v[j][0])+abs(v[i][1]-v[j][1]);\n//                 cout<<abhi<<\" \";\n//             }\n//             cout<<endl;\n//         }\n        \n//         vector<int> dist;\n//         multiset<int, greater<int>> m;\n//         int mx=INT_MIN;\n//         for(int i=1;i<v.size();i++){\n//             int abhi= abs(v[i][0]-v[i-1][0])+abs(v[i][1]-v[i-1][1]);\n//             dist.push_back(abhi);\n//             m.insert(dist.back());\n//         }\n//         int ans=INT_MAX;\n//         // sort(begin(dist),end(dist));\n//         for(int i=0;i<dist.size();i++){\n//             int val=dist[i];\n//             cout<<val<<\" \";\n//             m.erase(m.find(val));\n//             mx=*m.begin();\n//             if(i!=0 && i!=dist.size()-1){\n//                 int iska= max(dist[i]+dist[i-1],dist[i]+dist[i+1]);\n//                 mx=max(mx,iska);\n//             }\n//             m.insert(val);\n//             ans=min(ans,mx);\n//             cout<<ans<<\", \";\n//         }\n        \n//         return ans;\n    }\n};"
}