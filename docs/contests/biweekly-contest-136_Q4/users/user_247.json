{
    "username": "Tutul_dhar",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> Tree;\n    int a[100005][2],ans[100005]; // max,second max\n\n    void dfs(int node,int par) {\n        for(int ch : Tree[node]) {\n            if(ch != par) dfs(ch,node);\n        }\n        for(int ch : Tree[node]) {\n            if(ch == par) continue;\n            int p = a[ch][0];\n            if(ch%2) p++;\n            else p += 2;\n            if(a[node][0] < p) {\n                a[node][1] = a[node][0];\n                a[node][0] = p;\n            } else a[node][1] = max(a[node][1],p);\n        }\n    }\n\n    void dfs1(int node,int par) {\n        ans[node] = a[node][0];\n        for(int ch : Tree[node]) {\n            if(ch != par) {\n                int p = a[ch][0],q = 0;\n                if(ch%2) p++;\n                else p += 2;\n                if(a[node][0] == p) q = a[node][1];\n                else q = a[node][0];\n\n                if(node%2) q++;\n                else q += 2;\n\n                if(a[ch][0] < q) {\n                    a[ch][1] = a[ch][0];\n                    a[ch][0] = q;\n                } else a[ch][1] = max(a[ch][1],q);\n\n                dfs1(ch,node);\n            }\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        Tree.clear();\n        Tree.resize(n+1);\n        for(int i = 0; i <= n; i++) {\n            a[i][0] = 0;\n            a[i][1] = 0;\n        }\n        for(auto it : edges) {\n            //cout << it[0] << ' ' << it[1] << endl;\n            Tree[it[0]].push_back(it[1]);\n            Tree[it[1]].push_back(it[0]);\n        }\n\n        dfs(0,-1);\n       // for(int i = 0; i < n; i++) {\n        //    cout << a[i][0] << ' ' << a[i][1] << endl;\n        //}\n        dfs1(0,-1);\n        vector<int> res;\n        for(int i = 0; i < n; i++) res.push_back(ans[i]);\n        return res;\n    }\n};",
    "submit_ts": "1722699671",
    "subm_id": "1343218787"
}