{
    "username": "Abraxos",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        unordered_map<int,int> val[k+1];\n        multiset<int> p[k+1];\n        p[0].insert(1);\n        val[0][nums[0]]=1;\n        int ans=1;\n        for(int i=1;i<n;i++){        \n            \n            for(int l=k;l>=0;l--){      \n                    if(p[l].size()==0)continue;            \n                   \n                    int y=*--p[l].end();\n                        if(y==val[l][nums[i]]){\n                            // cout<<nums[i]<<endl;\n                            p[l].erase(--p[l].end());\n                            if(p[l].size()==0){\n                                val[l][nums[i]]=y+1;\n                                p[l].insert(y+1);\n                                continue;\n                            }\n                            int y2=*--p[l].end();\n                            swap(y,y2);\n                            if(l<k){\n                                if(y+1>val[l+1][nums[i]]){\n\n                                    if(p[l+1].find(val[l+1][nums[i]])!=p[l+1].end())\n                                    p[l+1].erase(p[l+1].find(val[l+1][nums[i]]));\n\n                                    val[l+1][nums[i]]=y+1;\n                                    p[l+1].insert(y+1);\n                                }\n                               \n\n                            }\n                            swap(y,y2);\n                            val[l][nums[i]]=y+1;\n                            p[l].insert(y+1);\n                            continue;\n                        }\n                        else{\n                            if(p[l].find(val[l][nums[i]])!=p[l].end())\n                            p[l].erase(p[l].find(val[l][nums[i]]));\n\n                            val[l][nums[i]]++;\n                            p[l].insert(val[l][nums[i]]);\n                            if(l<k){\n                                if(y+1>val[l+1][nums[i]]){\n\n                                    if(p[l+1].find(val[l+1][nums[i]])!=p[l+1].end())\n                                    p[l+1].erase(p[l+1].find(val[l+1][nums[i]]));\n\n                                    val[l+1][nums[i]]=y+1;\n                                    p[l+1].insert(y+1);\n                                }\n                                \n\n                            }\n                        }\n                        \n                    \n                    \n                \n                    \n                \n            }\n           if(1>val[0][nums[i]]){\n                p[0].insert(1);\n                val[0][nums[i]]=max(val[0][nums[i]],1);\n            }\n            \n        }\n        for(int i=0;i<=k;i++){\n            for(int j:p[i]){\n                // cout<<j<<' ';\n                ans=max(ans,j);\n            }\n            // cout<<endl;\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1717862317",
    "subm_id": "1281819280"
}