{
    "username": "HIRE_ME_GOOGLE",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        int ans = 0;\n        \n        dp.clear();\n        return dfs(k, 1, false, 0, ans);\n        cout << cnt << endl;\n        return ans;\n    }\n    \nprivate:\n    map<array<long,3>,long> dp;\n    long dfs(int k, int p, bool b, long jump, int &ans) {\n        if (p > k+1) return 0;\n        \n        if (!dp.count({p,jump,b})) {\n            long ret = 0;\n            if (p == k) ret = 1;\n\n            long step = (1LL<<jump);\n\n            if (p != 0 && !b)\n                ret += dfs(k, p-1, true, jump, ans);\n\n            ret += dfs(k, p+step, false, jump+1, ans);\n            dp[{p,jump,b}] = ret;\n            ++cnt;\n        }\n        \n        ans += dp[{p,jump,b}];\n        return dp[{p,jump,b}];\n    }\n    int cnt;\n};",
    "submit_ts": "1716089793",
    "subm_id": "1261851418"
}