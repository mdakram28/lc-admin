{
    "username": "zel_alt",
    "submission": "class Solution {\npublic:\n    vector<int> calc(vector<vector<int>> & vec, vector<bool> & skip) {\n        int n = vec.size();\n        vector<pair<int, int>> v1;\n        vector<pair<int, int>> v2;\n        \n        for(int i = 0; i < n; i++) {\n            if(skip[i]) continue;\n            v1.push_back(pair<int, int>{});\n            v2.push_back(pair<int, int>{});\n            int ind = v1.size() - 1;\n            v1[ind].first = vec[i][0] + vec[i][1];\n            v2[ind].first = vec[i][0] - vec[i][1];\n            v1[ind].second = i; v2[ind].second = i;\n        }\n        \n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n        vector<int> answer;\n        \n        if(v1.back().first - v1.front().first > v2.back().first - v2.front().first) {\n            answer.push_back(v1.back().first - v1.front().first);\n            answer.push_back(v1.front().second);\n            answer.push_back(v1.back().second);\n        }\n        else {\n            answer.push_back(v2.back().first - v2.front().first);\n            answer.push_back(v2.front().second);\n            answer.push_back(v2.back().second);\n        }\n        \n        return answer;\n    }\n    \n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<bool> skip(points.size(), false);\n        auto start = calc(points, skip);\n        int best = start[0];\n        skip[start[1]] = true;\n        auto check1 = calc(points, skip);\n        skip[start[1]] = false;\n        skip[start[2]] = true;\n        auto check2 = calc(points, skip);\n        skip[start[2]] = false;\n        best = min(best, check1[0]);\n        best = min(best, check2[1]);\n        \n        return min({start[0], check1[0], check2[0]});\n    }\n};"
}