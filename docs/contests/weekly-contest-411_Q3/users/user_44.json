{
    "username": "Yawn_Sean",
    "submission": "def find(n, k):\n        v = (n + 1) // 2\n        x = 10 ** v\n        while True:\n            x -= 1\n            ans = str(x)\n            ans += ans[:n - len(ans)][::-1]\n            if int(ans) % k == 0:\n                return ans\n\ntmp = ['', '7', '77', '959', '9779', '99799', '999999', '9994999', '99944999', '999969999', '9999449999', '99999499999', '999999999999']\n            \nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        ans = ['9'] * n\n        if k == 1: return '9' * n\n        if k == 2:\n            ans[0] = ans[-1] = '8'\n        elif k == 4 or k == 8:\n            for i in {0, 1, -1, -2}:\n                try: ans[i] = '8'\n                except: continue\n            if k == 8:\n                for i in {2, -3}:\n                    try: ans[i] = '8'\n                    except: continue\n        elif k == 5:\n            ans[0] = ans[-1] = '5'\n        elif k == 6:\n            if n <= 2: return '6' * n\n            if n % 2:\n                ans[0] = ans[-1] = ans[n // 2] = '8'\n            else:\n                ans[0] = ans[-1] = '8'\n                ans[n // 2] = ans[n // 2 - 1] = '7'\n        elif k == 7:\n            x, y = divmod(n, 12)\n            return '9' * (x * 6) + tmp[y] + '9' * (x * 6)\n            \n        return ''.join(ans)",
    "submit_ts": "1723950759",
    "subm_id": "1359754287"
}