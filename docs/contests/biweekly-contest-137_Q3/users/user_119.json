{
    "username": "D V Sushmanth Reddy",
    "submission": "from itertools import permutations\n\nclass Solution:\n    def maximumValueSum(self, a: List[List[int]]) -> int:\n        \n        n , m = len(a) , len(a[0])\n        \n        suf = [[a[i][j] for j in range(m)] for i in range(n)]\n        for j in range(m):\n            for i in range(n - 2 , -1 , -1):\n                suf[i][j] = max(suf[i][j] , suf[i + 1][j])\n        \n        up , ans = [-float('inf') for i in range(m)] , -float('inf')\n        for i in range(n - 1):\n            \n            pref1 = [-float('inf') for j in range(m)]\n            suf1 = [-float('inf') for j in range(m)]\n            pref1[0] = a[i][0]\n            suf1[m - 1] = a[i][m - 1]\n            for j in range(1 , m):\n                pref1[j] = max(pref1[j - 1] , a[i][j])\n            \n            for j in range(m - 2 , -1 , -1):\n                suf1[j] = max(suf1[j + 1] , a[i][j])\n            \n            pref2 = [-float('inf') for j in range(m)]\n            suf2 = [-float('inf') for j in range(m)]\n            pref2[0] = suf[i + 1][0]\n            suf2[m - 1] = suf[i + 1][m - 1]\n            for j in range(1 , m):\n                pref2[j] = max(pref2[j - 1] , suf[i + 1][j])\n            \n            for j in range(m - 2 , -1 , -1):\n                suf2[j] = max(suf2[j + 1] , suf[i + 1][j])\n            \n            best = -float('inf')\n            for j in range(m):\n                ans = max(ans , up[j] + best)\n                if(j - 1 >= 0 and j + 1 < m):\n                    ans = max(ans , up[j] + pref1[j - 1] + suf2[j + 1])\n                    ans = max(ans , up[j] + pref2[j - 1] + suf1[j + 1])\n                    \n                if(j - 1 >= 0):\n                    best = max(best , a[i][j] + pref2[j - 1])\n                    best = max(best , suf[i + 1][j] + pref1[j - 1])\n            \n            \n            best = -float('inf')\n            for j in range(m - 1 , -1 , -1):\n                ans = max(ans , up[j] + best)\n                if(j + 1 < m):\n                    best = max(best , a[i][j] + suf2[j + 1])\n                    best = max(best , suf[i + 1][j] + suf1[j + 1])\n            \n            \n            for j in range(m):\n                up[j] = max(up[j] , a[i][j])\n        \n         \n        return ans\n            \n            \n                ",
    "submit_ts": "1723908187",
    "subm_id": "1359141893"
}