{
    "username": "A_Lovely_Druid",
    "submission": "class Solution {\npublic:\n    #define NN 101010\n    #define lowbit(x) ((x)&(-x))\n    int c[NN];\n    int checkPeak(int i,int n,const vector<int> &nums){\n        if (i>=n-1 || i==0 || nums[i]<=nums[i-1] || nums[i]<=nums[i+1]) return 0;\n        return 1;\n    }\n    \n    void update(int pos,int n,int cval){\n        while(pos<n){\n            c[pos]+=cval;\n            pos+=lowbit(pos);\n        }\n        \n    }\n    int query(int pos,int n){\n        if (pos<0) return 0;\n        int ret=0;\n        while(pos){\n            ret+=c[pos];\n            pos-=lowbit(pos);\n        }\n        return ret;\n    }\n    \n        \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        int qn=queries.size();\n        memset(c,0,sizeof(c));\n        for(int i=0;i<n;++i){\n            if (checkPeak(i,n,nums)){\n                update(i,n,1);\n            }\n        }\n        vector<int> ans;\n        int tlast,t,pos,posl,posr,tlastl,tlastr,vlast;\n        for(int i=0;i<qn;++i){\n            if (queries[i][0]==2){\n                pos=queries[i][1];\n                vlast=nums[pos];\n                if (pos>0){\n                    nums[pos]=vlast;\n                    tlast=checkPeak(pos-1,n,nums);\n                    nums[pos]=queries[i][2];\n                    t=checkPeak(pos-1,n,nums);\n                    t=t-tlast;\n                    if (t) update(pos-1,n,t);\n                }\n                if (pos<n-1){\n                    nums[pos]=vlast;\n                    tlast=checkPeak(pos+1,n,nums);\n                    nums[pos]=queries[i][2];\n                    t=checkPeak(pos+1,n,nums);\n                    t=t-tlast;\n                    if (t) update(pos+1,n,t);\n                }\n                \n                nums[pos]=vlast;\n                tlast=checkPeak(pos,n,nums);\n                nums[pos]=queries[i][2];\n                t=checkPeak(pos,n,nums);\n                t=t-tlast;\n                if (t) update(pos,n,t);\n            }\n            else{\n                if (queries[i][2]-queries[i][1]<2) ans.push_back(0);\n                else{\n                    ans.push_back(query(queries[i][2]-1,n)-query(queries[i][1],n));\n                }\n            }\n            // for(int k=0;k<n;++k){\n            //     t=query(k,n)-query(k-1,n);\n            //     printf(\"%d : %d | \",k,t);\n            // }\n            // printf(\"\\n\");\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509333.0
}