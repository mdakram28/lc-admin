{
    "username": "_neelytandel_",
    "submission": "class Solution {\npublic:\n    void dfs(int ver,int par,vector<int> *g,vector<int> &height)\n    {\n        for(auto j : g[ver])\n        {\n            if(j!=par)\n            {\n                height[j]=1+height[ver];\n                dfs(j,ver,g,height);\n            }\n        }\n    }\n    int getdia(vector<int> *g,int n)\n    {\n        vector<int> height(n,0);\n        dfs(0,-1,g,height);\n        int nd=0;\n        for(int i=0;i<n;i++)\n        {\n            if(height[nd]<height[i])\n            {\n                nd=i;\n            }\n        }\n        \n        vector<int> h1(n,0);\n        dfs(nd,-1,g,h1);\n        int nd1=0;\n        for(int i=0;i<n;i++)\n        {\n            if(h1[nd1]<h1[i])\n            {\n                nd1=i;\n            }\n        }\n        return h1[nd1];\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int ans=0;\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<int> g1[n],g2[m];\n        for(int i=0;i<edges1.size();i++)\n        {\n            g1[edges1[i][0]].push_back(edges1[i][1]);\n            g1[edges1[i][1]].push_back(edges1[i][0]);\n        }\n        for(int i=0;i<edges2.size();i++)\n        {\n            g2[edges2[i][0]].push_back(edges2[i][1]);\n            g2[edges2[i][1]].push_back(edges2[i][0]);\n        }\n        int ans1=getdia(g1,n);\n        int ans2=getdia(g2,m);\n        int maxi=max(ans1,ans2);\n        \n        maxi=max(maxi,(ans1+1)/2 + (ans2+1)/2 + 1);\n        return maxi;\n    }\n};",
    "submit_ts": 1719716913.0
}