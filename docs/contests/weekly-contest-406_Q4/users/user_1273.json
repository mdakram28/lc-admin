{
    "username": "Aditya_9899",
    "submission": "class Solution {\npublic:\n    static bool cmp(vector<long long>& v1, vector<long long>& v2) {\n        return v1[0]>v2[0];\n    }\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long hor = 1;\n        long long ver = 1;\n        vector<vector<long long>> vec;\n        for(int i = 0; i < m-1; i++) vec.push_back({horizontalCut[i], 0, i});\n        for(int i = 0; i < n-1; i++) vec.push_back({verticalCut[i], 1, i});\n        sort(vec.begin(), vec.end(), cmp);\n        long long cost = 0;\n        for(auto &it : vec) {\n            if(it[1] == 0) {\n                cost += it[0]*hor;\n                ver++;\n            }\n            else {\n                cost += it[0]*ver;\n                hor++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926157",
    "subm_id": "1320277672"
}