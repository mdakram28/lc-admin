{
    "username": "kml123",
    "submission": "class Solution {\npublic:\n//     long nCr(int n, int r)\n// {\n//     return fact(n) / (fact(r) * fact(n - r));\n// }\n\n// // Returns factorial of n\n// long fact(int n)\n// {\n//       if(n==0)\n//       return 1;\n//     long res = 1;\n//     for (int i = 2; i <= n; i++)\n//         res = res * i;\n//     return res;\n// }\n    int nCrUtil(int n, int r, vector<vector<int>>& memo) {\n        if (r == 0 || r == n) {\n            return 1;\n        }\n        \n        // Check if value is already computed\n        if (memo[n][r] != -1) {\n            return memo[n][r];\n        }\n        \n        // Recursive calculation with memoization\n        memo[n][r] = (nCrUtil(n - 1, r - 1, memo) + nCrUtil(n - 1, r, memo)) % 1000000007;\n        \n        return memo[n][r];\n    }\n    int waysToReachStair(int k) {\n        int n=31,r=31;\n       vector<vector<int>> memo(n + 1, vector<int>(r + 1, -1));\n        int ans=0;\n        //if(k==1) ans++;\n        for(long long i=0;i<=30;i++){\n            long long p=1<<i;\n           // p--;\n            if(p-k>=0 && p-k<=(i+1)){\n                cout<<i<<\" \"<<p<<endl;\n                int d=p-k;\n                int x=i+1;\n                // int temp=1;\n                // while(d>0){\n                //     temp*=x;\n                //     x--;\n                //     d--;\n                // }\n                ans+=nCrUtil(x, d, memo);\n                //cout<<ans<<endl;\n                \n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1716088460",
    "subm_id": "1261814602"
}