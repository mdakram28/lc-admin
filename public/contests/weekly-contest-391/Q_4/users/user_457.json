{
    "username": "smaran_18",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& ar) {\n        long long int n = ar.size();\n        vector< vector<long long int>> sum(n, vector<long long int>(2)), dif(n, vector<long long int>(2));\n        \n        \n        for (int i=0;i<n;i++)\n        {\n            sum[i][0] = ar[i][0]+ar[i][1];\n            sum[i][1] = i;\n            dif[i][0] = ar[i][0]-ar[i][1];\n            dif[i][1] = i;\n  \n        }\n        \n        sort (sum.begin(), sum.end());\n        sort (dif.begin(), dif.end());\n        \n        long long int ans = INT_MAX;\n        \n        long long int k = sum[0][1], pans = sum[n-1][0]-sum[1][0], st=0, en=n-1;\n        \n        if (dif[0][1]==k)\n            st++;\n        if (dif[n-1][1]==k)\n            en--;\n        \n        pans=max(pans, dif[en][0]-dif[st][0]);\n        ans = min(ans, pans);\n        \n        k = sum[n-1][1], pans = sum[n-2][0]-sum[0][0], st=0, en=n-1;\n        \n        if (dif[0][1]==k)\n            st++;\n        if (dif[n-1][1]==k)\n            en--;\n        \n        pans=max(pans, dif[en][0]-dif[st][0]);\n        ans = min(ans, pans);\n        \n        k = dif[0][1], pans = dif[n-1][0]-dif[1][0], st=0, en=n-1;\n        \n        if (sum[0][1]==k)\n            st++;\n        if (sum[n-1][1]==k)\n            en--;\n        \n        pans=max(pans, sum[en][0]-sum[st][0]);\n        ans = min(ans, pans);\n        \n        k = dif[n-1][1], pans = dif[n-2][0]-dif[0][0], st=0, en=n-1;\n        \n        if (sum[0][1]==k)\n            st++;\n        if (sum[n-1][1]==k)\n            en--;\n        \n        pans=max(pans, sum[en][0]-sum[st][0]);\n        ans = min(ans, pans);\n        \n        return ans;\n        \n    }\n};"
}