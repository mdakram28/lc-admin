{
    "username": "ernestlu",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = (int)s.size();\n        vector<int> prev_zero(n, -1);\n        for (int i = 0; i < n; i++) {\n            if (i - 1 >= 0)\n                prev_zero[i] = prev_zero[i - 1];\n            if (s[i] == '0')\n                prev_zero[i] = i;\n\n        }\n        \n        using ll = long long;\n        ll ans = 0;\n        for (int num_zeros = 0; num_zeros * num_zeros <= n; num_zeros++) {\n            int cnt_zeros = 0;\n            int cnt_ones = 0;\n            int r = -1;\n            for (int l = 0; l < n; l++) {\n                while (r + 1 < n) {\n                    int nxt_cnt_zeros = cnt_zeros + (s[r + 1] == '0' ? 1 : 0);\n                    if (nxt_cnt_zeros <= num_zeros)\n                        r++;\n                    else break;\n                    cnt_zeros = nxt_cnt_zeros;\n                }\n      \n                \n                if (cnt_zeros == num_zeros and r >= l) {\n                    int cnt_ones = r - l + 1 - cnt_zeros;\n                    int min_ones = cnt_zeros * cnt_zeros;\n                    int lo_pt = prev_zero[r];\n                    int num_sub_ones = r - lo_pt;\n\n                    int delta = 0;\n\n                    if (cnt_ones == r - l + 1) {\n                        delta += r - l + 1;\n                    } else if (cnt_ones >= min_ones) {\n                        delta += min(cnt_ones - min_ones + 1, num_sub_ones + 1);\n                    }\n                    ans += delta;\n                    //cout << l << \" \" << r << ' ' << num_zeros << ' ' << delta << '\\n';\n                }\n                if (r < l) {\n                    r = l;\n                    cnt_zeros = 0;\n                } else if (s[l] == '0')\n                    cnt_zeros--;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722136517",
    "subm_id": "1335736945"
}