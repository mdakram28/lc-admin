{
    "username": "Mohamed Bakr",
    "submission": "class Solution {\npublic:\n    set<int>col;\n    vector<vector<int>>a;\n    int n,m;\n    vector<vector<long long>>imp;\n    unordered_map<int,unordered_map<int,unordered_map<int,unordered_map<int,long long>>>>dp;\n    long long mx(int i,int f1,int f2,int f3){\n        if(max(f1,max(f2,f3))<m) return 0;\n        if(i==n) return -1e14;\n        if(dp.find(i)!=dp.end()){\n            if(dp[i].find(f1)!=dp[i].end()){\n                if(dp[i][f1].find(f2)!=dp[i][f1].end()){\n                    if(dp[i][f1][f2].find(f3)!=dp[i][f1][f2].end()){\n                        return dp[i][f1][f2][f3];                    \n                    }\n                }\n            }\n        }\n        long long cur = mx(i+1,f1,f2,f3);\n        for(int j = 0;j<m;j++){\n            if(imp[i][j]==-1e14) continue;\n            if(j!=f1&&j!=f2&&j!=f3){\n                if(f1==m){\n                    cur=max(cur,mx(i+1,j,f2,f3)+imp[i][j]);\n                }\n                else if(f2==m){\n                    cur=max(cur,mx(i+1,f1,j,f3)+imp[i][j]);\n                }\n                else{\n                    cur=max(cur,mx(i+1,f1,f2,j)+imp[i][j]);\n                }\n            }\n        }\n        return dp[i][f1][f2][f3] = cur;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        a=board;\n        n=a.size();\n        m=a[0].size();\n        priority_queue<pair<int,pair<int,int>>>q;\n        for(int i =0;i<n;i++)\n            for(int j= 0;j<m;j++)\n                q.push({a[i][j],{i,j}});\n        vector<pair<int,pair<int,int>>>b;\n        vector<int>cntrow(n),cntcol(m);\n        for(int j = 0;j<100&&q.size();){\n            if(cntrow[q.top().second.first]<3){\n                if(cntcol[q.top().second.second]<3){\n                    cntrow[q.top().second.first]++;\n                    cntcol[q.top().second.second]++;\n                    b.push_back(q.top());\n                    j++;\n                }\n            }\n            q.pop();\n        }\n        int mxcol=0;\n        vector<int>redind;\n        for(auto i : b){\n            redind.push_back(i.second.second);\n        }\n        sort(redind.begin(),redind.end());\n        redind.resize(unique(redind.begin(),redind.end())-redind.begin());\n        map<int,int>colss;\n        for(auto i : b){\n            colss[i.second.second]=lower_bound(redind.begin(),redind.end(),i.second.second)-redind.begin();\n            mxcol=max(mxcol,colss[i.second.second]);\n        }\n        map<int,int>rowss;\n        for(auto i : b){\n            if(rowss.find(i.second.first)==rowss.end()){\n                rowss[i.second.first] = imp.size();\n                imp.push_back(vector<long long>(mxcol+1,-1e14));\n            }\n            imp[rowss[i.second.first]][colss[i.second.second]]=i.first;\n        }\n        n=imp.size(),m=mxcol+1;\n        return mx(0,m,m,m);\n    }\n};",
    "submit_ts": "1723908229",
    "subm_id": "1359143757"
}