{
    "username": "Decision",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        final List<Integer> res = new ArrayList<>();\n        final int n = nums.length;\n        final BIT bit = new BIT(n+2);\n        boolean[] fs = new boolean[n];\n        for(int i=1;i<n-1;++i){\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]){\n                bit.add(i+1, 1);\n                fs[i] = true;\n            }\n        }\n        for(int[] q : queries){\n            if(q[0] == 1){\n                if(q[1]+1 < q[2]){\n                int v = bit.get(q[2]+1) - bit.get(q[1]);\n                if(fs[q[1]]){\n                    v--;\n                }\n                if(fs[q[2]]){\n                    v--;\n                }\n                res.add(v);\n                }else{\n                    res.add(0);\n                }\n            }else{\n                if(fs[q[1]]){\n                    if(q[2] > nums[q[1]-1] && q[2] > nums[q[1]+1]){\n                        \n                    }else{\n                        bit.add(q[1]+1, -1);\n                        fs[q[1]] = false;\n                    }\n                }else{\n                    if(q[1] > 0 && q[1] < n-1 && q[2] > nums[q[1]-1] && q[2] > nums[q[1]+1]){\n                        bit.add(q[1]+1, 1);\n                        fs[q[1]] = true;\n                    }\n                }\n                nums[q[1]] = q[2];\n                if(q[1] > 0){\n                    if(fs[q[1]-1] && q[2] >= nums[q[1]-1]){\n                        bit.add(q[1], -1);\n                        fs[q[1]-1] = false;\n                    }else if(q[1]-1 > 0 && !fs[q[1]-1] && q[2] < nums[q[1]-1] && nums[q[1]-1] > nums[q[1]-2]){\n                        bit.add(q[1], 1);\n                        fs[q[1]-1] = true;\n                    }\n                }\n                if(q[1]+2 < n){\n                    if(fs[q[1]+1] && q[2] >= nums[q[1]+1]){\n                        bit.add(q[1]+2, -1);\n                        fs[q[1]+1] = false;\n                    }else if(!fs[q[1]+1] && q[2] < nums[q[1]+1] && nums[q[1]+1] > nums[q[1]+2]){\n                        bit.add(q[1]+2, 1);\n                        fs[q[1]+1] = true;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}\nclass BIT{\n    int[] ns;\n    public BIT(int n){\n        ns = new int[n];\n    } \n    int get(int idx){\n        int res = 0;\n        for(int i=idx;i>0;i-=i&-i){\n            res += ns[i];\n        }\n        return res;\n    }\n    void add(int idx, int v){\n        for(int i=idx;i<ns.length;i+=i&-i){\n            ns[i] += v;\n        }\n    }\n}",
    "submit_ts": "1718507533",
    "subm_id": "1289654579"
}