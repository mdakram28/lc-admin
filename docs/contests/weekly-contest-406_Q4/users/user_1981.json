{
    "username": "Trushchauhan",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCu, vector<int>& verticalCu) {\n        long long hCuts = 1, vCuts = 1, cost = 0;\n        int i = 0, j = 0;\n        vector<long long> horizontalCut(horizontalCu.begin(), horizontalCu.end());\n        vector<long long> verticalCut(verticalCu.begin(), verticalCu.end());\n        \n        // Sort cuts in descending order\n        sort(horizontalCut.begin(), horizontalCut.end(), std::greater<long long>());\n        sort(verticalCut.begin(), verticalCut.end(), std::greater<long long>());\n        \n        // Process cuts until we have processed all of them\n        while (i < m-1 && j < n-1) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                cost += horizontalCut[i] * vCuts;\n                hCuts++;\n                i++;\n            } else {\n                cost += verticalCut[j] * hCuts;\n                vCuts++;\n                j++;\n            }\n        }\n        while (i < m-1) {\n            cost += horizontalCut[i] * vCuts;\n            hCuts++;\n            i++;\n        }\n\n        // Process any remaining vertical cuts\n        while (j < n-1) {\n            cost += verticalCut[j] * hCuts;\n            vCuts++;\n            j++;\n        }\n\n        return cost;\n    }\n};\n",
    "submit_ts": "1720925967",
    "subm_id": "1320271874"
}