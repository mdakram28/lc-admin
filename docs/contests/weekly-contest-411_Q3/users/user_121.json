{
    "username": "Linh Nguyen",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        vector<int> digits(n);\n        for (int i = 0; i < n; i++) {\n            digits[i] = -1;\n        }\n\n        if (k % 5 == 0) {\n            digits[0] = digits[n - 1] = 5;\n        } else if (k % 2 == 0) {\n            digits[0] = digits[n - 1] = 8;\n            if (n > 2 && k % 4 == 0) {\n                digits[1] = digits[n - 2] = 8;\n            }\n            if (n > 4 && k % 8 == 0) {\n                digits[2] = digits[n - 3] = 8;\n            }\n        } else {\n            digits[0] = digits[n - 1] = 9;\n        }\n        \n        int mid = n/2;\n        for (int i = 0; i < mid; i++) if (digits[i] < 0) {\n            digits[i] = digits[n - 1 - i] = 9;\n        }\n\n        digits[mid] = digits[n - 1 - mid] = 9;\n        while (true) {\n            if (isDivisible(digits, k)) {\n                string ret = \"\";\n                for (auto x : digits) {\n                    ret += '0' + x;\n                }\n                return ret;\n            }\n            digits[mid]--;\n            if (mid != n - 1 - mid) {\n                digits[n - 1 - mid]--;\n            }\n        }\n        return \"\";\n    }\n    \n    bool isDivisible(vector<int> digits, int k) {\n        int mod_val = 0;\n        for (auto x : digits) {\n            mod_val = (mod_val * 10 + x) % k;\n        }\n        return mod_val == 0;\n    }\n};",
    "submit_ts": "1723949136",
    "subm_id": "1359711360"
}