{
    "username": "NitishBharat",
    "submission": "class Solution {\npublic:\n\n// Calculates the binomial coefficient nCr using the logarithmic formula\nint nCr(int n, int r) {\n    // If r is greater than n, return 0\n    if (r > n) return 0;\n    // If r is 0 or equal to n, return 1\n    if (r == 0 || n == r) return 1;\n    // Initialize the logarithmic sum to 0\n    double res = 0;\n    // Calculate the logarithmic sum of the numerator and denominator using loop\n    for (int i = 0; i < r; i++) {\n        // Add the logarithm of (n-i) and subtract the logarithm of (i+1)\n        res += log(n-i) - log(i+1);\n    }\n    // Convert logarithmic sum back to a normal number\n    return (int)round(exp(res));\n}\n\n    int waysToReachStair(int k) {\n        \n\n        int cnt=0;\n        \n        if(k==0)\n        return 2;\n\n        for(int i=0;;i++){\n\n\n            int x=pow(2,i);\n            if(x>1e9)break;\n            int y=x-k;\n\n            if(y<0 || i*2<y)continue;\n            \n            cnt+=nCr(i+1,y);\n        }\n\n        return cnt;\n    }\n\n    \n};",
    "submit_ts": 1716089829.0
}