{
    "username": "lokesh_wagh",
    "submission": "class Solution {\npublic:\n    \n    long long mod =1000000007;\n    long long helper(int n,int k,vector<vector<long long>>&dp,map<int,int>&mp){\n        if(n == 0){\n            if(k == 0){\n                return 1;\n            }\n            else{\n                return 0;\n            }\n        }\n        if(k < 0){\n            return 0;\n        }\n        //  cout<<n<<\" \"<<k<<\"\\n\";\n        if(dp[n][k] != -1){\n            return dp[n][k];\n        }\n        long long sum  = 0;\n        \n        if(mp.find(n) != mp.end()){\n            if(mp[n] != k){\n                return dp[n][k] = 0;\n            }\n            else{\n                  for(long long i=0;i<=min(k,n-1);i++){\n        \n                        sum = (sum + helper(n-1,k-i,dp,mp))%mod;\n                    }\n\n                    return dp[n][k] = sum;\n            }\n        }\n        for(long long i=0;i<=min(k,n-1);i++){\n        \n            sum = (sum + helper(n-1,k-i,dp,mp))%mod;\n        }\n\n        return dp[n][k] = sum;\n\n    }\n   \n    int numberOfPermutations(int n, vector<vector<int>>& arr) {\n        vector<vector<long long>>dp(n+1,vector<long long>(500,-1));\n\n        // dp[0][0] = 1;\n        // for(int i=1;i<=n;i++){\n        //     for(int j=0;j<=min())\n        // }\n        map<int,int>mp;\n        for(auto it : arr){\n            mp[it[0] + 1] = it[1];\n        }\n        int ans = 0;\n        for(int i=0;i<=400;i++){\n            ans = (ans + helper(n,i,dp,mp))%mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719071652.0
}