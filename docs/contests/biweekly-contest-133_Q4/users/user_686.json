{
    "username": "someshghoshjoyguru",
    "submission": "#define ll long long\n#define vll vector<ll>\nclass Solution {\npublic:\n    static const int INV = 400;\n    static const int MOD = 1e9+7;\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        ios_base::sync_with_stdio(0);\n        cin.tie(0);\n        cout.tie(0);\n        map<int, int> mp;\n        for (auto x : requirements) {\n            mp[x[0] + 1] = x[1]; \n        }\n\n        vector<vll> dp(n + 1, vll(INV + 1, 0));\n        dp[0][0] = 1;\n\n        int l = 1;\n        while (l <= n) {\n            int inv = 0;\n            while (inv <= INV) {\n                int pos = 0;\n            while (pos < l) {\n                    int prev = inv - pos;\n                    if (prev >= 0) {\n                        dp[l][inv] = (dp[l][inv] + dp[l - 1][prev]) % MOD;\n                    }\n                    pos++;\n                }\n                inv++;\n            }\n\n            if (mp.count(l) > 0) {\n                int inv = 0;\n                int req = mp[l];\n                while (inv <= INV) {\n                    if (inv != req) {\n                        dp[l][inv] = 0;\n                    }\n                    inv++;\n                }\n            }\n\n            l++;\n        }\n\n        ll res = 0;\n        int inv = 0;\n        while (inv <= INV) {\n            res = (res + dp[n][inv]) % MOD;\n            inv++;\n        }\n\n        return res%MOD;\n    }\n};",
    "submit_ts": "1719070989",
    "subm_id": "1296836476"
}