{
    "username": "Lucky Orb",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return '9' * n\n        if k == 5:\n            return '5' if n == 1 else '5' + '9' * (n - 2) + '5'\n        if k == 2:\n            return '8' if n == 1 else '8' + '9' * (n - 2) + '8'\n        if k == 4:\n            return '8' * n if n <= 4 else '88' + '9' * (n - 4) + '88'\n        if k == 6:\n            if n <= 2:\n                return '6' * n\n            if n == 3:\n                return '888'\n            if n % 2:\n                t = '8' + '9' * ((n - 3) // 2)\n                return t + '8' + t[::-1]\n            else:\n                t = '8' + '9' * ((n - 4) // 2)\n                return t + '77' + t[::-1]\n        if k == 8:\n            return '8' * n if n < 6 else '888' + '9' * (n - 6) + '888'\n        assert k == 7\n        if n <= 2:\n            return '7' * n\n        L = (n + 1) // 2\n        R = n - L\n        for d in range(10):\n            t = '9' * (L - 1) + str(9 - d)\n            ans = t + t[::-1][L - R:]\n            p = 0\n            for x in ans:\n                p = (p * 10 + int(x)) % 7\n            if p == 0:\n                return ans\n        ",
    "submit_ts": "1723950218",
    "subm_id": "1359740272"
}