{
    "username": "\u4e91\u4e0a\u5bd2\u70df",
    "submission": "using System;\nusing System.Collections.Generic;\n\npublic class Solution\n{\n    private long Calc(List<(long first, int second)> a, List<(long first, int second)> b, List<(long first, int second)> c)\n    {\n        long ans = long.MinValue;\n        for (int i = 0; i < 3; ++i)\n        {\n            for (int j = 0; j < 3; ++j)\n            {\n                if (a[i].second == b[j].second) continue;\n                for (int k = 0; k < 3; ++k)\n                {\n                    if (a[i].second == c[k].second || b[j].second == c[k].second) continue;\n                    ans = Math.Max(ans, a[i].first + b[j].first + c[k].first);\n                }\n            }\n        }\n        return ans;\n    }\n\n    public long MaximumValueSum(int[][] board)\n    {\n        List<List<(long first, int second)>> m = new List<List<(long first, int second)>>();\n        int n = board.Length;\n        int end = board[0].Length;\n        for (int i = 0; i < n; ++i)\n        {\n            // \u9884\u5904\u7406\u6bcf\u4e00\u884c\u7684\u6700\u5927\u4e09\u4e2a\u5143\u7d20\u53ca\u5176\u5217\u7d22\u5f15\n            var topThree = new List<(long first, int second)>();\n            for (int j = 0; j < end; ++j)\n            {\n                topThree.Add((board[i][j], j));\n            }\n            topThree.Sort((a, b) => b.first.CompareTo(a.first)); // \u6309\u7167first\u964d\u5e8f\u6392\u5217\n            m.Add(topThree.GetRange(0, 3)); // \u53ea\u4fdd\u7559\u524d\u4e09\u5927\u7684\u5143\u7d20\n        }\n        //\u6c42\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u503c\uff0c\u8981\u6c42\u6bcf\u79cd\u7ec4\u5408\u5404\u4e00\u4e2a\n        List<(int, int, int, int, long)> list = new List<(int, int, int, int, long)>();\n        for(int i = 0; i < n; i++)\n        {\n            for(int j = i + 1; j < n; j++)\n            {\n                for(int s = 0; s < 3; s++)\n                {\n                    for(int t = 0; t < 3; t++)\n                    {\n                        if (m[i][s].second == m[j][t].second) continue;\n                        list.Add((i, j, m[i][s].second, m[j][t].second, m[i][s].first + m[j][t].first));\n                    }\n                }\n            }\n        }\n        list.Sort((A, B) => Math.Sign(B.Item5 - A.Item5));\n\n        long ans = long.MinValue;\n\n        for(int i = 0; i < n; i++)\n        {\n            bool flag = false;\n            foreach(var v in list)\n            {\n                for(int k = 0; k < 3; k++)\n                {\n                    long v0 = m[i][k].first;\n                    long j0 = m[i][k].second;\n                    if (i == v.Item1 || i == v.Item2 || j0 == v.Item3 || j0 == v.Item4) continue;\n                    ans = Math.Max(ans, v0 + v.Item5);\n                    flag = true;\n                }\n                if (flag) break;\n            }\n        }\n        return ans;\n    }\n}\n",
    "submit_ts": "1723908621",
    "subm_id": "556331891"
}