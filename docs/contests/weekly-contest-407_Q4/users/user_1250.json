{
    "username": "adityaraj6508",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        if (n <= 0) {\n            return 0;\n        }\n        long long totalOps = 0;\n        int prevOps = 0;\n\n        for (int i = 0; i < n; i++) {\n            int currOps = nums[i] - target[i];\n            if ((currOps < 0 && prevOps < 0) || (currOps > 0 && prevOps > 0)) {\n                totalOps += max(0, abs(currOps) - abs(prevOps));\n            } else {\n                totalOps += abs(currOps);\n            }\n            prevOps = currOps;\n        }\n\n        return totalOps;\n    }\n};",
    "submit_ts": "1721532325",
    "subm_id": "1327983182"
}