{
    "username": "kanishk_k",
    "submission": "\nclass Solution {\npublic:\n    \n    \n    vector<int> vis;\n    \n    \n    void dfs(int ind,int &count, vector<vector<int>> &adj){\n\n        for(int i=0;i<adj[ind].size();i++){\n            if(vis[adj[ind][i]]==0){\n                vis[adj[ind][i]]=count;\n                dfs(adj[ind][i],count,adj);\n            }\n        }\n        return;\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        \n\n        vector<vector<int>> adj(circles.size()+5);\n        for(int i=0;i<circles.size();i++){\n            for(int j=0;j<circles.size();j++){\n                long long x=abs(circles[i][0]-circles[j][0]);\n                long long y=abs(circles[i][1]-circles[j][1]);\n                long long r=abs(circles[i][2]+circles[j][2]);\n                x*=x;y*=y;r*=r;\n                if(x+y<=r){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }}\n        \n        \n    int x1=circles.size();\n            int x2=x1+1;\n            int y1=x2+1;\n            int y2=y1+1;\n            \n            for(int i=0;i<circles.size();i++){\n                if(circles[i][0]-circles[i][2]<=0){\n                    adj[x1].push_back(i);\n                    adj[i].push_back(x1);\n                }\n                \n                if(circles[i][1]-circles[i][2]<=0){\n                    adj[y1].push_back(i);\n                    adj[i].push_back(y1);\n                }\n                \n                if(circles[i][0]+circles[i][2]>=X){\n                    adj[x2].push_back(i);\n                    adj[i].push_back(x2);\n                }\n                \n                 if(circles[i][1]+circles[i][2]>=Y){\n                    adj[y2].push_back(i);\n                    adj[i].push_back(y2);\n                }\n                \n            }\n            \n            \n          for(int i=0;i<=y2;i++)vis.push_back(0);\n            int count=0;\n            \n            for(int i=0;i<=y2;i++){\n                if(vis[i]==0){\n                    count++;\n                    vis[i]=count;\n                    dfs(i,count,adj);\n                }\n            }\n        \n        \n       if((vis[x1]==vis[y1])||(vis[x2]==vis[y2])||(vis[x1]==vis[x2])||(vis[y1]==vis[y2])) return false;\n        return true;\n            \n        \n    }\n};",
    "submit_ts": "1722137196",
    "subm_id": "1335756907"
}