{
    "username": "cp_sud",
    "submission": "class Solution {\npublic:\n    long long helper(vector<int>& nums, int idx, long long k, vector<vector<int>>& sud) {\n        int low = idx, high = nums.size();\n        long long res = LLONG_MAX;\n        \n        while (low <= high) {\n            long long mid = (low + high) / 2;\n            long long ele = 0;\n            \n            for (long long i = 0; i < 31; i++) {\n                if (sud[mid][i] - sud[idx - 1][i] == (mid - idx + 1)) {\n                    ele |= (1LL << i);\n                }\n            }\n            \n            if (ele >= k) {\n                res = min(res, abs(k - ele));\n                low = mid + 1;\n            } else {\n                res = min(res, abs(k - ele));\n                high = mid - 1;\n            }\n        }\n        \n        return res;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> sud(n + 1, vector<int>(32, 0));\n        \n        for (int i = 1; i <= n; i++) {\n            long long ele = nums[i - 1];\n            for (int j = 0; j < 31; j++) {\n                if ((ele >> j) & 1) {\n                    sud[i][j] = 1;\n                }\n            }\n        }\n        \n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 31; j++) {\n                sud[i][j] += sud[i - 1][j];\n            }\n        }\n        \n        long long res = LLONG_MAX;\n        long long kp = k;\n        \n        for (int i = 1; i <= n; i++) {\n            res = min(res, helper(nums, i, kp, sud));\n            if (res == 0) {\n                return res;\n            }\n        }\n        \n        return res;\n    }\n};\n",
    "submit_ts": 1717300672.0
}