{
    "username": "abhey8623",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        int l=m-2,r=n-2, hori, verti;\n        long long ans = 0;\n        while(l>=0&&r>=0)\n        {\n            if(horizontalCut[l]>=verticalCut[r])\n            {\n                //do a horizontalCut\n                ans += 1LL*horizontalCut[l]*(n-1-r);\n                --l;\n            }\n            else\n            {\n                //do a horizontalCut\n                ans += 1LL*verticalCut[r]*(m-1-l);\n                --r;\n            }\n        }\n        while(l>=0)\n        {\n            //do a horizontalCut\n            ans += 1LL*horizontalCut[l]*(n);\n            --l;\n        }\n        while(r>=0)\n        {\n            //do a horizontalCut\n            ans += 1LL*verticalCut[r]*(m);\n            --r;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925924",
    "subm_id": "1320270539"
}