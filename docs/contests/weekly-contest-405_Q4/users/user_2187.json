{
    "username": "Bishnoi_Amit",
    "submission": "\n\nclass TrieNode{\n        public:\n        unordered_map<char,TrieNode*> children;\n        vector<pair<int,int>> word_ends;\n    };\n    class Trie{\n        public:\n        TrieNode *root;\n        Trie()\n        {\n            root=new TrieNode();\n        }\n        void insert(string word,int index,int cost)\n        {\n            TrieNode * node=root;\n            for(char c:word)\n            {\n                if(node->children.count(c)==0) node->children[c]=new TrieNode();\n                node=node->children[c];\n            }\n            node->word_ends.push_back({index,cost});\n        }\n    };\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n=target.size();\n        vector<int> dp(n+1,INT_MAX);\n        dp[0]=0;\n        Trie trie;\n        for(int i=0;i<words.size();i++)\n        {\n            trie.insert(words[i],i,costs[i]);\n        }\n        for(int i=0;i<n;i++)\n        {\n            if(dp[i]==INT_MAX) continue;\n            TrieNode *node=trie.root;\n            for(int j=i;j<n;j++)\n            {\n                if(node->children.count(target[j])==0)\n                {\n                    break;\n                }\n                node=node->children[target[j]];\n                for(auto &it:node->word_ends)\n                {\n                    int word_len=words[it.first].size();\n                    if(i+word_len<=n)\n                    {\n                        dp[i+word_len]=min(dp[i+word_len],dp[i]+it.second);\n                    }\n                }\n            }\n        }\n        return dp[n]==INT_MAX?-1:dp[n];\n    }\n};",
    "submit_ts": "1720324184",
    "subm_id": "1312393533"
}