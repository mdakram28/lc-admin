{
    "username": "shantanu28sharma",
    "submission": "class ST{\npublic:\n    int start, end, andVal;\n    ST* l, *r;\n    ST(int _start, int _end, vector<int>& nums){\n        start = _start;\n        end = _end;\n        if(start==end){\n            andVal = nums[start];\n            return;\n        }\n        else{\n            int mid = start + (end-start)/2;\n            l = new ST(start, mid, nums);\n            r = new ST(mid+1, end, nums);\n        }\n        andVal = l->andVal&r->andVal;\n    }\n    int query(int left, int right){\n        if(left>end || right<start){\n            return -1;\n        }\n        if(left<=start&& right>=end){\n            return andVal;\n        }\n        return l->query(left, right)&r->query(left,right);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        ST* st = new ST(0, n-1, nums);\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid;\n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (st->query(i, mid) >= k)\n                    l = mid;\n                else\n                    r = mid;\n            }\n            if (l != i - 1)\n                ans = min(ans, abs(st->query(i, l) - k));\n            ans = min(ans, abs(k - st->query(i, r)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717300204.0
}