{
    "username": "Akshay1983",
    "submission": "from typing import List\n\nMOD =10**9+7\nMAXX = 400\n\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        mpp = {req[0] + 1: req[1] for req in requirements}\n        dp = [[0] * (MAXX + 1) for _ in range(n + 1)]\n        dp[0][0] = 1\n        for l in range(1, n + 1):\n            for inv in range(MAXX + 1):\n                for pos in range(l):\n                    y = inv - pos\n                    if y >= 0: dp[l][inv] = (dp[l][inv] + dp[l - 1][y]) % MOD\n\n            if l in mpp:\n                x = mpp[l]\n                for inv in range(MAXX + 1):\n                    if inv != x: dp[l][inv] = 0\n        \n        return sum(dp[n])%MOD\n",
    "submit_ts": 1719070571.0
}