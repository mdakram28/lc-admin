{
    "username": "AshuChauhan",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        int x = target.size();\n        vector<int> dp(n);\n        for (int i = 0; i < n; ++i) {\n            dp[i] = target[i] - nums[i];\n        }\n\n        long long res = 0;\n        int temp = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (i == 0) {\n                int y = abs(dp[i]) - abs(temp);\n                if (y > 0) {\n                    res += y;\n                }\n                temp = dp[i];\n            } else if ((dp[i - 1] > 0 && dp[i] > 0) || (dp[i - 1] < 0 && dp[i] < 0)) {\n                int f = abs(dp[i]) - abs(temp);\n                if (f > 0) {\n                    res += f;\n                }\n                temp = dp[i];\n            } else {\n                res += abs(dp[i]);\n                temp = dp[i];\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721534380",
    "subm_id": "1328029828"
}