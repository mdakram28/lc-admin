{
    "username": "anhlinh123",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int count = 0;\n        for (int i = 0; i < m/2; i++)\n            for (int j = 0; j < n/2; j++) {\n                int c = 0;\n                if (grid[i][j] == 1) c++;\n                if (grid[m-1-i][j] == 1) c++;\n                if (grid[i][n-1-j] == 1) c++;\n                if (grid[m-1-i][n-1-j] == 1) c++;\n                count += min(c, 4-c);\n            }\n        if (m%2 == 1 && n%2 == 1) {\n            if (grid[m/2][n/2] == 1) count++;\n        }\n        int count_a = 0;\n        int count_b = 0;\n        if (m%2 == 1) {\n            for (int j = 0; j < n/2; j++) {\n                if (grid[m/2][j] != grid[m/2][n-1-j]) count_a++;\n                else if (grid[m/2][j] == 1) count_b++;\n            }\n        }\n        if (n%2 == 1) {\n            for (int i = 0; i < m/2; i++) {\n                if (grid[i][n/2] != grid[m-1-i][n/2]) count_a++;\n                else if (grid[i][n/2] == 1) count_b++;\n            }\n        }\n        count += count_a;\n        if (count_b%2 == 1 && count_a == 0) count += 2;\n        return count;\n    }\n};",
    "submit_ts": "1722698029",
    "subm_id": "1343167331"
}