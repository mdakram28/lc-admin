{
    "username": "Rainingcity",
    "submission": "class Solution {\nprivate:\n    void buildTri(int n, vector<vector<int>>& tri) {\n        tri[0][0] = 1;\n        tri[1][0] = tri[1][1] = 1;\n        for(int i = 1; i <= n; i++) {\n            tri[i][0] = tri[i][i] = 1;\n            for(int j = 1; j < i; j++) tri[i][j] = tri[i-1][j] + tri[i-1][j-1];\n        }\n        return;\n    }\npublic:\n    int waysToReachStair(int k) {\n        // if (k == 0) return 2;\n        // if (k == 1) return 4;\n        vector<vector<int>> tri(32, vector<int>(32, 0));\n        buildTri(31, tri);\n        int jumps = 0, cur = 1;\n        while(cur < k) {\n            jumps++;\n            cur<<=1;\n        }\n        int ans = 0;\n        while(true) {\n            int n = jumps + 1, m = cur - k;\n            if (m > n) break;\n            ans += tri[n][m];\n            jumps++;\n            cur<<=1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716087504",
    "subm_id": "1261785704"
}