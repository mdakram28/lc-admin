{
    "username": "Subhra3032",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        if(n == 0)  return 0;\n        vector<vector<int>> dp(n, vector<int> (k+1, 1));\n        int ans = 1;\n        vector<int> res(k + 1, -1);\n        vector<unordered_map<int, int>> mp(k + 1);\n        \n        for(int i=0; i<n; i++) {\n            for (int j=0; j<=k; j++) {\n                for(int l=0; l<j; l++) {\n                    dp[i][j] = max(dp[i][j], 1 + res[l]);\n                }\n\n                if (mp[j].count(nums[i])) {\n                    dp[i][j] = max(dp[i][j], 1 + mp[j][nums[i]]);\n                }\n\n                ans = max(ans, dp[i][j]);\n            }\n\n            for (int j=0; j<=k; j++) {\n                res[j] = max(res[j], dp[i][j]);\n                mp[j][nums[i]] = max(mp[j][nums[i]], dp[i][j]);\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717862373.0
}