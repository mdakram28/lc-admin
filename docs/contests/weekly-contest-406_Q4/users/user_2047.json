{
    "username": "shalinibharti22",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n    long res =0;\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        // Initialize current width and height as 1\n        int hzntl = 1, vert = 1;\n\n        // Convert vectors to arrays to use indexing\n        int m_minus_1 = m - 1, n_minus_1 = n - 1;\n        int i = 0, j = 0;\n\n        // Loop until one or both cost arrays are processed\n        while (i < m_minus_1 && j < n_minus_1) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                res += static_cast<long>(horizontalCut[i]) * vert;\n                hzntl++;\n                i++;\n            } else {\n                res += static_cast<long>(verticalCut[j]) * hzntl;\n                vert++;\n                j++;\n            }\n        }\n\n        // Loop for remaining horizontal array, if any\n        while (i < m_minus_1) {\n            res += static_cast<long>(horizontalCut[i++]) * vert;\n        }\n\n        // Loop for remaining vertical array, if any\n        while (j < n_minus_1) {\n            res += static_cast<long>(verticalCut[j++]) * hzntl;\n        }\n\n        return res;\n    }\n};\n\n// Driver code to test ",
    "submit_ts": "1720926308",
    "subm_id": "1320282331"
}