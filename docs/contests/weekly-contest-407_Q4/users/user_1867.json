{
    "username": "candysad",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        if n == 1: return abs(nums[0] - target[0])\n\n        def d(i):\n            result = abs(nums[i] - target[i])\n            if nums[i] > target[i]:\n                result *= -1\n            return result\n\n        def aspan(span):\n            if span[0] == 0: return 0\n            span = [abs(num) for num in span]\n\n            def dfs(span):\n                if not span: return 0\n\n                result = 0\n                mn = min(span)\n                tspan = []\n                for num in span:\n                    if num > mn:\n                        tspan.append(num-mn)\n                    else:\n                        if tspan:\n                            result += dfs(tspan)\n                            tspan = []\n                result += dfs(tspan)\n                result += mn\n                return result\n\n            return dfs(span)\n\n\n        left = 0\n        lastspan = [d(0)]\n        result = 0\n        for i, num in enumerate(nums[1:], 1):\n            t = target[i]\n            now = d(i)\n            \n            if lastspan[-1] == 0:\n                lastspan = [now]\n\n            elif now == 0:\n                result += aspan(lastspan)\n                lastspan = [now]\n\n            elif lastspan[-1] * now > 0:\n                lastspan.append(now)\n\n            else:\n                result += aspan(lastspan)\n                lastspan = [now]\n        result += aspan(lastspan)\n        return result\n            \n\n            \n            \n            \n",
    "submit_ts": "1721533409",
    "subm_id": "548397568"
}