{
    "username": "justinleung0204",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        \"\"\"\n        seg tree on diff?\n        \n        greedy:\n            always +/- consecutive +ve/-ve subarray\n            \n        peaks first?\n        [0, 1, 2, 2, 3, 1, 2, 1, 0, 1] => 6 by always peeling the peaks\n        \n        [2,2,2,2,1,2,2,2,2,1] => 3 by peeling\n        \n        1,2,3,4,5,6  =>stly increasing=> trivial, 6\n        \n        1,2,3,4,5,6, 5,4, 3,4,5,6,7 => 6+ 4   (left 3 to 3 + right 4 to 3 + total 3 to 0)\n        \n        3,6,9,5,8,11 => 9+ 6  (4+6+2+3)\n        3,6,6,5,8,11  +3\n        3,5,5,5,8,11  +1\n        3,5,5,5,8,8  +3\n        3,5,5,5,5,5  +3\n        3,3,3,3,3,3  +2\n        0            +3\n        \n        3,6,9,1,4,7\n        \n        3,6,9,7,5,8,11\n        \n        \"\"\"\n        n=len(nums)\n        diff=[t-a for t,a in zip(target, nums)]\n        print(diff)\n        \n        def handle(l,r):#inclusive, find sum of all(peak-left_valley)\n            nonlocal d\n            if d==0:  #no need ops\n                return 0\n            \n            start= 0\n            prev=None\n            res=0\n            for j in range(l,r+1):\n                this= diff[j] if d>0 else -diff[j]\n                if prev is None or this>=prev:\n                    pass\n                else:   #this<prev, prev is peak\n                    res+= prev-start\n                    start=this\n                prev=this\n                \n            #final\n            res+= prev-start\n                \n            return res\n                \n                \n            \n            \n        \n        \n        d=0\n        l=0\n        \n        ans=0\n        for i,a in enumerate(diff):\n            if (d>0 and a>0) or (d<0 and a<0) or (d==0 and a==0):#extend cos same direction\n                pass\n            else:   #handle prev segment\n                ans+=handle(l,i-1)\n                l=i\n                d=0 if a==0 else a//abs(a)  #sign function\n        #last seg\n        ans+=handle(l,n-1)\n        \n        return ans\n        ",
    "submit_ts": "1721533062",
    "subm_id": "1328000382"
}