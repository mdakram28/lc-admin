{
    "username": "naman_dwivedi",
    "submission": "class Solution {\n    \n    int check(vector<vector<int>>& grid,int srow,int erow,int scol,int ecol)\n    {\n        int minrow=-1,mincol=-1,maxrow=-1,maxcol=-1;\n        int n=grid.size();\n        int m=grid[0].size();\n        for(int i=srow;i<=erow;i++)\n        {\n            for(int j=scol;j<=ecol;j++)\n            {\n                if(grid[i][j]==1)\n                {\n                    if(minrow==-1) minrow=i;\n                    maxrow=i;\n                }\n            }\n        }\n        for(int i=scol;i<=ecol;i++)\n        {\n            for(int j=srow;j<=erow;j++)\n            {\n                if(grid[j][i]==1)\n                {\n                    if(mincol==-1) mincol=i;\n                    maxcol=i;\n                }\n            }\n        }\n        int ans=1e5;\n        if(minrow!=-1 && mincol!=-1 && maxrow!=-1 && maxcol!=-1) ans=(maxrow-minrow+1)*(maxcol-mincol+1);\n        // cout<<srow<<\" \"<<erow<<\" \"<<scol<<\" \"<<ecol<<\"\\n\";\n        // cout<<ans<<\"\\n\";\n        return ans;\n    }\n    \n    int updowndown(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                int kk=check(grid,0,i,0,m-1)+check(grid,i+1,n-1,0,j)+check(grid,i+1,n-1,j+1,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \n    int upupdown(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                int kk=check(grid,0,i,0,j)+check(grid,0,i,j+1,m-1)+check(grid,i+1,n-1,0,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \n    int leftrightright(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        \n        vector<vector<int>>vec;\n        for(int i=0;i<m;i++)\n        {\n            vector<int>v;\n            for(int j=0;j<n;j++) v.emplace_back(grid[j][i]);\n            vec.emplace_back(v);\n        }\n        \n        grid=vec;\n        swap(n,m);\n        \n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                int kk=check(grid,0,i,0,m-1)+check(grid,i+1,n-1,0,j)+check(grid,i+1,n-1,j+1,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \n    int leftleftright(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        \n        vector<vector<int>>vec;\n        for(int i=0;i<m;i++)\n        {\n            vector<int>v;\n            for(int j=0;j<n;j++) v.emplace_back(grid[j][i]);\n            vec.emplace_back(v);\n        }\n        \n        grid=vec;\n        swap(n,m);\n        \n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                int kk=check(grid,0,i,0,j)+check(grid,0,i,j+1,m-1)+check(grid,i+1,n-1,0,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \n    int upupup(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=1e9;\n        \n        for(int i=0;i<n;i++)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                int kk=check(grid,0,i,0,m-1)+check(grid,i+1,j,0,m-1)+check(grid,j+1,n-1,0,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \n    int leftleftleft(vector<vector<int>> grid)\n    {\n        int n=grid.size();\n        int m=grid[0].size();\n        \n        vector<vector<int>>vec;\n        for(int i=0;i<m;i++)\n        {\n            vector<int>v;\n            for(int j=0;j<n;j++) v.emplace_back(grid[j][i]);\n            vec.emplace_back(v);\n        }\n        \n        grid=vec;\n        swap(n,m);\n        \n        int ans=1e9;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                int kk=check(grid,0,i,0,m-1)+check(grid,i+1,j,0,m-1)+check(grid,j+1,n-1,0,m-1);\n                ans=min(ans,kk);\n            }\n        }\n        return ans;\n    }\n    \npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        // int ans=updowndown(grid);\n        // return ans;\n        int ans=min({updowndown(grid),upupdown(grid),leftrightright(grid),leftleftright(grid),upupup(grid),leftleftleft(grid)});\n        return ans;\n    }\n};",
    "submit_ts": 1719113825.0
}