{
    "username": "rishirajece135",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int i = 0; i < m - 1; ++i) {\n            cuts.push_back({horizontalCut[i], 'H'});\n        }\n        for (int j = 0; j < n - 1; ++j) {\n            cuts.push_back({verticalCut[j], 'V'});\n        }\n\n        sort(cuts.rbegin(), cuts.rend());\n\n        long long h_pieces = 1;\n        long long v_pieces = 1;\n        long long total_cost = 0;\n\n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                total_cost += static_cast<long long>(cut.first) * v_pieces;\n                ++h_pieces;\n            } else {\n                total_cost += static_cast<long long>(cut.first) * h_pieces;\n                ++v_pieces;\n            }\n        }\n\n        return total_cost;\n    }\n};",
    "submit_ts": "1720925394",
    "subm_id": "1320253241"
}