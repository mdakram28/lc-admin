{
    "username": "kevincabbage",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        vector<int> num(2, 0);\n        int res = 0;\n        \n        for(int i = 0; 2 * i + 1 < grid.size(); ++i) {\n            for(int j = 0; 2 * j + 1 < grid[0].size(); ++j) {\n                num[0] = 0;\n                num[1] = 0;\n                \n                num[grid[i][j]]++;\n                num[grid[i][grid[0].size() - 1 - j]]++;\n                num[grid[grid.size() - 1 - i][j]]++;\n                num[grid[grid.size() - 1 - i][grid[0].size() - 1 - j]]++;\n                \n                res += min(num[0], num[1]);\n            }\n        }\n        \n        if((grid.size() & 1) && (grid[0].size() & 1)) res += grid[grid.size() / 2][grid[0].size() / 2];\n        \n        int one_pair_num = 0;\n        int diff = 0;\n        if(grid.size() & 1) {\n            int i = grid.size() / 2;\n            for(int left = 0, right = grid[0].size() - 1; left < right; ++left, --right) {\n                if(grid[i][left] != grid[i][right]) ++diff;\n                else if(grid[i][left] == 1) ++one_pair_num;\n            }\n            \n        }\n        \n        if(grid[0].size() & 1) {\n            int j = grid[0].size() / 2;\n            for(int top = 0, down = grid.size() - 1; top < down; ++top, --down) {\n                if(grid[top][j] != grid[down][j]) ++diff;\n                else if(grid[top][j] == 1) ++one_pair_num;\n            }\n        }\n        res += diff;\n        \n        if((one_pair_num & 1) && diff == 0) res += 2;\n        \n        return res;\n    }\n};",
    "submit_ts": "1722698876",
    "subm_id": "552272954"
}