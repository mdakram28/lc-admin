{
    "username": "bailanren",
    "submission": "\nconst int maxn=1e5+5;\nint siz[maxn],a[maxn],dfn[maxn];\nint id[maxn];\nclass Solution {\npublic:\n    vector<int> e[maxn];\n\n    int tot=-1;\n    void dfs(int x,int fa) {\n        siz[x]=1;\n        dfn[x]=++tot;\n        id[tot]=x;\n        for(int y:e[x]) {\n            if(y==fa) continue;\n            a[y]=a[x]+((y&1)?1:2);\n            dfs(y,x);\n            siz[x]+=siz[y];\n            \n        }\n    }\n\n    struct SegTree{\n        struct node{\n            int l,r;\n            int pre,add,mul;\n        }t[maxn<<2];\n        inline void spread(int p) {\n            if(t[p].add)\n            {\n                t[p*2].add+=t[p].add;t[p*2+1].add+=t[p].add;\n                t[p*2].pre+=t[p].add;\n                t[p*2+1].pre+=t[p].add;\n                t[p].add=0;\n            }\n        }\n        inline void pushup(int p)\n        {\n            t[p].pre=max(t[p*2].pre,t[p*2+1].pre);\n        }\n        inline void build(int p,int l,int r)\n        {\n            t[p].l=l;t[p].r=r;t[p].add=0,t[p].mul=1;\n            if(l==r)\n            {\n                t[p].pre=a[id[l]];\n                return;\n            }\n            int mid=(t[p].l+t[p].r)/2;\n            build(p*2,l,mid);\n            build(p*2+1,mid+1,r);\n            pushup(p);\n        }\n        inline void change(int p,int l,int r,int v)\n        {\n            if(l>r) return;\n            if(t[p].l>=l&&t[p].r<=r)\n            {\n                t[p].pre+=v;\n                t[p].add+=v;\n                return;\n            }\n            spread(p);\n            int mid=(t[p].l+t[p].r)/2;\n            if(l<=mid) change(p*2,l,r,v);\n            if(r>mid) change(p*2+1,l,r,v);\n            pushup(p);\n        }\n        inline int ask(int p,int l,int r)\n        {\n            if(t[p].l>=l&&t[p].r<=r)\n            {\n                return t[p].pre;\n            }\n            spread(p);\n            int mid=(t[p].l+t[p].r)/2;\n            int res=0;\n            if(l<=mid) res=max(res,ask(p*2,l,r));\n            if(r>mid) res=max(res,ask(p*2+1,l,r));\n            return res;\n        }\n    }S; \n    int ans[maxn];\n    inline void dfs2(int x,int fa,int n) {\n        ans[x]=S.ask(1,0,n-1);\n       // printf(\"%d %d %d\\n\",x,dfn[x],siz[x]);\n        for(int y:e[x]) {\n            if(y==fa) continue;\n            int valx=((x&1)?1:2);\n            int valy=((y&1)?1:2);\n           // printf(\"%d %d : %d %d\\n\",x,y,valx,valy);\n            S.change(1,dfn[y],dfn[y]+siz[y]-1,-valy);\n            S.change(1,0,dfn[y]-1,valx);\n            S.change(1,dfn[y]+siz[y],n-1,valx);\n            dfs2(y,x,n);\n            S.change(1,dfn[y],dfn[y]+siz[y]-1,valy);\n            S.change(1,0,dfn[y]-1,-valx);\n            S.change(1,dfn[y]+siz[y],n-1,-valx);\n            //printf(\"%d %d\\n\",x,S.ask(1,0,n-1));\n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n=0;\n        for(auto pa:edges) {\n            \n            int x=pa[0],y=pa[1];\n            e[x].push_back(y);\n            e[y].push_back(x);\n            n=max(n,x);n=max(n,y);\n        }\n        n=n+1;\n        a[0]=0;\n        dfs(0,-1);\n        S.build(1,0,n-1);\n        dfs2(0,-1,n);\n        vector<int> f(n);\n        for(int i=0;i<n;i++) f[i]=ans[i];\n        return f;\n    }\n};",
    "submit_ts": "1722700339",
    "subm_id": "552279397"
}