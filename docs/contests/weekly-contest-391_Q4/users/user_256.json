{
    "username": "ProgramCaiCai_CN",
    "submission": "from sortedcontainers import SortedList\n\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        # Initialize SortedList for x+y and x-y\n        x_plus_y = SortedList(x+y for x, y in points)\n        x_minus_y = SortedList(x-y for x, y in points)\n\n        min_max_distance = float('inf')\n\n        for x, y in points:\n            # Remove the current point's contribution\n            x_plus_y.remove(x+y)\n            x_minus_y.remove(x-y)\n\n            # Calculate the max Manhattan distance without the current point\n            max_distance = max(\n                x_plus_y[-1] - x_plus_y[0],  # Max difference in x+y\n                x_minus_y[-1] - x_minus_y[0]  # Max difference in x-y\n            )\n\n            # Update the minimum possible max distance found so far\n            min_max_distance = min(min_max_distance, max_distance)\n\n            # Re-add the current point's contribution for the next iteration\n            x_plus_y.add(x+y)\n            x_minus_y.add(x-y)\n\n        return min_max_distance\n\n"
}