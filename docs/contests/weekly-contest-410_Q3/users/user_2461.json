{
    "username": "flame_fighter",
    "submission": "#include <vector>\n#include <cstring>\nusing namespace std;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        int dp[2][51][51] = {0};\n        int current = 0, previous = 1;\n\n        for (int i = 0; i <= nums[0]; ++i) {\n            dp[current][i][nums[0] - i] = 1;\n        }\n\n        for (int i = 1; i < n; ++i) {\n            swap(current, previous);\n            memset(dp[current], 0, sizeof(dp[current]));\n\n            int cumSum[51][51] = {0};\n\n            // Calculate cumulative sums for the previous DP state\n            for (int x = 0; x <= 50; ++x) {\n                for (int y = 0; y <= 50; ++y) {\n                    cumSum[x][y] = dp[previous][x][y];\n                    if (x > 0) cumSum[x][y] = (cumSum[x][y] + cumSum[x - 1][y]) % MOD;\n                    if (y > 0) cumSum[x][y] = (cumSum[x][y] + cumSum[x][y - 1]) % MOD;\n                    if (x > 0 && y > 0) cumSum[x][y] = (cumSum[x][y] - cumSum[x - 1][y - 1] + MOD) % MOD;\n                }\n            }\n\n            for (int x = 0; x <= nums[i]; ++x) {\n                int y = nums[i] - x;\n                dp[current][x][y] = cumSum[x][50] - (y > 0 ? cumSum[x][y - 1] : 0) + MOD;\n                dp[current][x][y] %= MOD;\n            }\n        }\n\n        int result = 0;\n        for (int x = 0; x <= 50; ++x) {\n            for (int y = 0; y <= 50; ++y) {\n                result = (result + dp[current][x][y]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723346137",
    "subm_id": "1351571029"
}