{
    "username": "kapil_4219",
    "submission": "#include <vector>\n#include <string>\n#include <climits>\n#include <unordered_map>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\n    // m trie data structire ko implement karunga\npublic:\n    struct TrieNode {\n        \n         vector<pair<int, int>> wordDa;\n        \n        \n        unordered_map<char, TrieNode*> child;\n       \n    };\n\n    void ins(TrieNode* root, const string& w, int co) {\n        TrieNode* n = root;\n        \n        for (char c : w) {\n            \n            \n            if (!n->child.count(c)) {\n                \n                \n                n->child[c] = new TrieNode();\n            }\n            \n            \n            n = n->child[c];\n        }\n        \n        \n        n->wordDa.push_back({w.size(), co});\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        \n        vector<int> memoo(n + 1, INT_MAX); \n        \n        memoo[0] = 0;  \n        \n        TrieNode* r = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            ins(r, words[i], costs[i]);\n        }\n\n        for (int y = 0; y < n; ++y) {\n            if (memoo[y] == INT_MAX) continue;  \n            \n            TrieNode* node = r;\n            \n            for (int x = y; x < n; ++x) {\n                \n                if (!node->child.count(target[x])) break;\n                \n                node = node->child[target[x]];\n                \n                for (auto& wct : node->wordDa) {\n                    int wordLengthy = wct.first;\n                    \n                    int cos = wct.second;\n                    \n                    if (y + wordLengthy <= n) {\n                        memoo[y + wordLengthy] = min(memoo[y + wordLengthy], memoo[y] + cos);\n                    }\n                }\n            }\n        }\n\n        return memoo[n] == INT_MAX ? -1 : memoo[n];  \n    }\n};\n",
    "submit_ts": "1720322224",
    "subm_id": "1312344104"
}