{
    "username": "nirbhay541",
    "submission": "// class Solution {\n// public:\n//     bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n\n//     }\n// };\n\nclass Solution {\n\npublic:\n    int bfs(vector<vector<int>>& adj, int start, int t1, int t2, int nodes) {\n        queue<int> q;\n        vector<int> vis(nodes + 4, 0);\n        q.push(start);\n        vis[start] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : adj[u]) {\n                if (!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n        return vis[t1] || vis[t2];\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& crc) {\n        int n = crc.size();\n        vector<vector<int>> adj(crc.size() + 4);\n        vector<pair<pair<int, int>, int>> c(crc.size());\n\n        for (int i = 0; i < n; ++i) {\n            c[i].first.first = crc[i][0];\n            c[i].first.second = crc[i][1];\n            c[i].second = crc[i][2];\n        }\n\n        for (int i = 0; i < n; ++i) {\n\n            if (c[i].first.first <= c[i].second) {\n                adj[n].push_back(i);\n                adj[i].push_back(n);\n            }\n            if (X - c[i].first.first <= c[i].second) {\n                adj[n + 2].push_back(i);\n                adj[i].push_back(n + 2);\n            }\n            if (c[i].first.second <= c[i].second) {\n                adj[n + 1].push_back(i);\n                adj[i].push_back(n + 1);\n            }\n            if (Y - c[i].first.second <= c[i].second) {\n                adj[n + 3].push_back(i);\n                adj[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                double distance = sqrt(\n                    pow(c[i].first.first - c[j].first.first, 2) +\n                    pow(c[i].first.second - c[j].first.second, 2));\n                int radius_sum = c[i].second + c[j].second;\n                if (radius_sum >= distance) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n\n        int blk = 0;\n        blk =\n            max(blk,\n                bfs(adj, n, n + 1, n + 2,\n                    n + 4));\n        blk =\n            max(blk,\n                bfs(adj, n + 3, n + 2, n + 1,\n                    n + 4));\n        if (blk) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722137812",
    "subm_id": "1335774423"
}