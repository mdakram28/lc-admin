{
    "username": "@\u672a\u547d\u540d",
    "submission": "lower=-3_000_000_000\n# print(lower)\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m,n=len(board),len(board[0])\n        row=[sorted(zip(board[i],range(n)),reverse=True) for i in range(m)]\n        # print(row)\n        @cache\n        def dfs(i:int,k:int,mask:int):\n            if k==0:return 0\n            if i+1<k:return lower\n            ret=dfs(i-1,k,mask)\n            # print(i,k,ret)\n            if (mask>>row[i][0][1])&1==0:\n                ret=max(ret, row[i][0][0]+dfs(i-1,k-1,mask|(1<<row[i][0][1]) ) )\n            if (mask>>row[i][1][1])&1==0:\n                ret=max(ret,row[i][1][0]+dfs(i-1,k-1,mask|(1<<row[i][1][1])))\n            if (mask>>row[i][2][1])&1==0:\n                ret=max(ret,row[i][2][0]+dfs(i-1,k-1,mask|(1<<row[i][2][1])))\n            return ret\n        return dfs(m-1,3,0)\n\n        ",
    "submit_ts": "1723908546",
    "subm_id": "556331483"
}