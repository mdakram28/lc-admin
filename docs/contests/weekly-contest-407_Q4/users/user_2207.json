{
    "username": "Manmeet8287",
    "submission": "#define ll long long\n#define double long double\n#define pb push_back\n#define ff first\n#define ss second\n#define all(v) v.begin(),v.end()\n#define allr(v) v.rbegin(),v.rend()\n#define sz(v) (int)v.size()\n#define deb(x) cout<<#x<<\"=\"<<x<<endl;\n#define pii pair<ll,ll>\n#define vi vector<int>\n\nclass Solution {\npublic:\n    struct segment_tree\n    {\n        ll siz=1;\n        vector<pii> st;\n\n        segment_tree(ll n)\n        {\n            while(siz<n) siz*=2LL;\n            st.resize(2*siz);\n        }\n\n        pii merge(pii &a,pii &b)\n        {\n            if(a.ff<=b.ff) return a; \n            else return b;\n        }\n\n        void build(vector<ll> &v,ll x,ll lx,ll rx)\n        {\n            if(rx-lx==1)\n            {\n                if(lx<sz(v)) st[x]={v[lx],lx};\n                return;\n            }\n            ll mid=(lx+rx)>>1;\n            build(v,2*x+1,lx,mid);\n            build(v,2*x+2,mid,rx);\n            st[x]=merge(st[2*x+1],st[2*x+2]);\n        }\n\n        // void set(int idx,int val,int x,int lx,int rx)\n        // {\n        //     if(rx-lx==1)\n        //     {\n        //         st[x]=val;\n        //         return;\n        //     }\n        //     int mid=(lx+rx)>>1;\n        //     if(idx<mid) set(idx,val,2*x+1,lx,mid);\n        //     else set(idx,val,2*x+2,mid,rx);\n        //     st[x]=st[2*x+1]+st[2*x+2];\n        // }\n\n        pii mini(ll l,ll r,ll x,ll lx,ll rx)\n        {\n            if(rx<=l or r<=lx) return {1e9,1e9};\n            if(lx>=l and rx<=r) return st[x];\n            ll mid=(lx+rx)>>1LL;\n            pii a=mini(l,r,2*x+1,lx,mid);\n            pii b=mini(l,r,2*x+2,mid,rx);\n            pii ans=merge(a,b);\n            return ans;\n        }\n    };\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) \n    {\n        ll n=sz(nums);\n        vector<ll> moves;\n        for(ll i=0;i<n;i++)\n        {\n            moves.pb(target[i]-nums[i]);\n        }\n        vector<ll> pos(n),neg(n);\n        for(ll i=0;i<n;i++)\n        {\n            if(moves[i]>=0) pos[i]=moves[i];\n            else neg[i]=abs(moves[i]);\n        }\n        segment_tree posT=segment_tree(n);\n        posT.build(pos,0,0,posT.siz);\n        // deb(posT.siz);\n        // for(int i=0;i<posT.st.size();i++)\n        // {\n        //     cout<<i<<\"->\"<<posT.st[i].ff<<\" \"<<posT.st[i].ss<<endl;\n        // }\n        queue<vector<ll>> q;\n        q.push({0,n-1,0}); //{start,end,deleted_part}\n        ll ans=0;\n        ll k=5;\n        while(!q.empty())\n        {\n            vector<ll> v=q.front(); q.pop();\n            // cout<<v<<endl;\n            pii find_mn=posT.mini(v[0],v[1]+1,0,0,posT.siz);\n            // cout<<\"MN->\"<<find_mn.ff<<\" \"<<find_mn.ss<<endl;\n            ans+=find_mn.ff-v[2];\n            if(find_mn.ss-1>=v[0]) q.push({v[0],find_mn.ss-1,find_mn.ff});\n            if(find_mn.ss+1<=v[1]) q.push({find_mn.ss+1,v[1],find_mn.ff});\n        }\n\n        segment_tree negT=segment_tree(n);\n        negT.build(neg,0,0,negT.siz);\n        q.push({0,n-1,0});\n        while(!q.empty())\n        {\n            vector<ll> v=q.front(); q.pop();\n            // cout<<v<<endl;\n            pii find_mn=negT.mini(v[0],v[1]+1,0,0,posT.siz);\n            // cout<<\"MN->\"<<find_mn.ff<<\" \"<<find_mn.ss<<endl;\n            ans+=find_mn.ff-v[2];\n            if(find_mn.ss-1>=v[0]) q.push({v[0],find_mn.ss-1,find_mn.ff});\n            if(find_mn.ss+1<=v[1]) q.push({find_mn.ss+1,v[1],find_mn.ff});\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533503",
    "subm_id": "1328010450"
}