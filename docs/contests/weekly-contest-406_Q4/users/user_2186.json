{
    "username": "joe-139-m",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int row = 1, col = 1;\n        long long ans = 0;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int i = 0, j = 0; \n        while(i < m - 1 && j < n - 1) {\n            if(horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] * row;\n                col++;\n                i++;\n            } else {\n                ans += verticalCut[j] * col;\n                row++;\n                j++;\n            }\n        }\n        while(i < m - 1) ans += horizontalCut[i++] * row;\n        while(j < n - 1) ans += verticalCut[j++] * col;\n        return ans;\n    }\n};",
    "submit_ts": "1720926080",
    "subm_id": "546443937"
}