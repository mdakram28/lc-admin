{
    "username": "Arjit_Khare",
    "submission": "class SegmentTree{\nprivate:\n    vector<long long> st;\n    long long values = pow(2, 32) - 1;\n    void up(int ind, int left, int right, int l, vector<int>& nums)\n    {\n        if(left == right)\n        {\n            if(left == l)\n            {\n                st[ind] = nums[l];\n            }\n            return;\n        }\n        if(left > l || right < l) return;\n        int mid = (left + right) / 2;\n        up(2*ind + 1, left, mid, l, nums);\n        up(2*ind + 2, mid + 1, right, l, nums);\n        st[ind] = st[2*ind + 1] & st[2*ind + 2];\n    }\n    int query(int ind, int left, int right, int l, int r)\n    {\n        if(left >= l && right <= r)\n        {\n            return st[ind];     \n        }\n        if(left > r || right < l) return values;\n        int mid = (left + right) / 2;\n        int num1, num2;\n        num1 = query(2*ind + 1, left, mid, l, r);\n        num2 = query(2*ind + 2, mid + 1, right, l, r);\n        return num1 & num2;\n    }\npublic:\n    SegmentTree(int n)\n    {\n        vector<long long> v(4*n, values);\n        st = v;\n    }\n    void update(int n, int l, vector<int>& nums)\n    {\n        up(0, 0, n-1, l, nums);\n    }\n    int search(int n, int l, int r)\n    {\n        return query(0, 0, n-1, l, r);\n    }\n    void check(int n)\n    {\n        for(int i = 0; i < 4*n; i++)\n        {\n            cout<<i<<\" \"<<st[i]<<endl;\n        }\n    }\n};\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        SegmentTree st1(n);\n        for(int i = 0; i < n; i++)\n        {\n            st1.update(n, i, nums);\n        }\n        int l = 0, r = 0, curr = nums[l], ans = abs(k - curr);\n        while(r < n)\n        {\n            ans = min(ans, abs(k - curr));\n            // cout<<l<<\" \"<<r<<\" \"<<curr<<\" \"<<ans<<endl;\n            if(curr >= k)\n            {\n                r++;\n            }\n            else\n            {\n                l++;\n                if(l > r) r++;\n            }\n            if(r < n) curr = st1.search(n, l, r);\n            // cout<<l<<\" \"<<r<<\" \"<<curr<<\" \"<<ans<<endl;\n        }\n        // st1.check(n);\n        int x = 1 & 2;\n        // cout<<x<<endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717299848.0
}