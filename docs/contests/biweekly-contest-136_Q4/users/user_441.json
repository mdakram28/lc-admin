{
    "username": "spaceandtimecomp",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<int> g[n];\n        int dmax[n], dmn[n];\n        for (auto p : edges)\n        {\n            int x = p[0], y = p[1];\n            g[x].push_back(y), g[y].push_back(x);\n        }\n        function<void(int, int)> dfs1 = [&](int u, int fa) ->void{\n            dmax[u] = dmn[u] = 0;\n            for (int v : g[u])\n            {\n                if (fa == v) continue;\n                dfs1(v, u);\n                int t = dmax[v] + (v % 2 == 0 ? 2 : 1);\n                if (t > dmax[u]) dmn[u] = dmax[u], dmax[u] = t;\n                else if (t > dmn[u]) dmn[u] = t;\n            }\n        };\n        vector<int>ans(n);\n        //ans[0] = dmax[0];\n        function<void(int, int, int)> dfs2 = [&](int u, int fa, int d) ->void{\n            ans[u] = max(dmax[u], d);\n            for (int v : g[u])\n            {\n                if (v == fa) continue;\n                int tp = dmax[v] + (v % 2 == 0 ? 2 : 1);\n                int t = (u % 2 == 0 ? 2 : 1) + max((tp == dmax[u] ? dmn[u] : dmax[u]), d);\n                dfs2(v, u, t);\n            }\n        };\n        dfs1(0, -1);\n        dfs2(0, -1, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722698323",
    "subm_id": "552270349"
}