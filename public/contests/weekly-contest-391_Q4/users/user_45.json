{
    "username": "chenreddy0207",
    "submission": "class Solution {\n    \n    int get_manhattan(map<int,int>& mpxplusy,\n        map<int,int>& mpxminusy)\n    {\n        int a=mpxplusy.begin()->first;\n        int b=(--mpxplusy.end())->first;\n        int c=mpxminusy.begin()->first;\n        int d=(--mpxminusy.end())->first;\n        \n        return max(d-c,b-a);\n    }\n    \npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        map<int,int> mpxplusy;\n        map<int,int> mpxminusy;\n        \n        int ans=1e9;\n        int n=points.size();\n        \n        \n        for(int i=0;i<n;i++)\n        {\n            int x=points[i][0];\n            int y=points[i][1];\n            mpxplusy[x+y]++;\n            mpxminusy[x-y]++;\n        }\n        \n        for(int i=0;i<n;i++)\n        {\n            int x=points[i][0];\n            int y=points[i][1];\n            \n            mpxplusy[x+y]--;\n            mpxminusy[x-y]--;\n            \n            if(mpxplusy[x+y]==0)\n            {\n                mpxplusy.erase(x+y);\n            }\n            \n            if(mpxminusy[x-y]==0)\n            {\n                mpxminusy.erase(x-y);\n            }\n            \n            ans=min(ans,get_manhattan(mpxplusy,mpxminusy));\n            \n            mpxplusy[x+y]++;\n            mpxminusy[x-y]++;\n        }\n        \n        return ans;\n    }\n};"
}