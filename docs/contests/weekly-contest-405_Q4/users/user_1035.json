{
    "username": "NicholasRaffone",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        cost_dict = defaultdict(lambda: float('inf'))\n        for word, cost in zip(words, costs):\n            cost_dict[word] = min(cost_dict[word], cost)\n        dp = [float('inf') for _ in range(len(target) + 1)]\n        dp[0] = 0\n        # [-,a,b,c,d,e,f]\n        for idx in range(1, len(dp)):\n            for word, cost in cost_dict.items():\n                if len(word) <= idx and target[idx - len(word):idx] == word:\n                    dp[idx] = min(dp[idx], dp[idx - len(word)] + cost)\n        return dp[-1] if dp[-1] != float('inf') else -1",
    "submit_ts": "1720323299",
    "subm_id": "1312372220"
}