{
    "username": "Dev3214",
    "submission": "class Solution(object):\n    def minChanges(self, arr, k):\n        n = len(arr)\n        from collections import defaultdict\n        m = defaultdict(list)\n        v = []\n\n        \n        for i in range(n // 2):\n            left = arr[i]\n            right = arr[n - i - 1]\n            diff = abs(left - right)\n            count=0\n            current = max(left, right, k - left, k - right)\n            m[diff].append(current)\n            v.append(current)\n\n        result = n\n        count=0\n        v.sort(reverse=False)\n\n        for diff, something in m.items():\n            currentdiffernce = bisect.bisect_left(v, diff) * 2 + (n // 2 - bisect.bisect_left(v, diff))\n            count=max(0,1)\n            for current in something:\n                print()\n                if current < diff:\n                    count=0\n                    currentdiffernce -= 2\n                else:\n                    count=1\n                    currentdiffernce -= 1\n            count=0\n            result = min(result, currentdiffernce)\n\n        return result",
    "submit_ts": "1721489101",
    "subm_id": "1327442918"
}