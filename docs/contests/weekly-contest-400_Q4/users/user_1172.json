{
    "username": "pulkit2401",
    "submission": "\nclass Solution {\nprivate:\n    std::vector<int> zeros;\n\n    // Member function to decrease count of zeros in the binary representation of x\n    void minus(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) {\n                zeros[i] -= 1;\n            }\n        }\n    }\n\n    // Member function to increase count of zeros in the binary representation of x\n    void plus(int x) {\n        for (int i = 0; i < 32; ++i) {\n            if (((x >> i) & 1) == 0) {\n                zeros[i] += 1;\n            }\n        }\n    }\n\n    int eval() {\n        int res = 0;\n        for (int i = 0; i < 32; ++i) {\n            if (zeros[i] == 0) {\n                res ^= (1 << i);\n            }\n        }\n        return res;\n    }\n\npublic:\n    int minimumDifference(std::vector<int>& nums, int k) {\n        zeros = std::vector<int>(32, 0);\n        int n = nums.size();\n        int ans = INT_MAX;\n        int i = 0;\n\n        for (int j = 0; j < n; ++j) {\n            plus(nums[j]);\n            int x = eval();\n            ans = std::min(ans, std::abs(x - k));\n            while (i < j && x < k) {\n                minus(nums[i]);\n                ++i;\n                x = eval();\n                ans = std::min(ans, std::abs(x - k));\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1717300772",
    "subm_id": "1274854688"
}