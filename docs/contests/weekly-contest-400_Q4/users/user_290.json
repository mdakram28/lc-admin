{
    "username": "DenisGubar",
    "submission": "static int F[100'002][18];\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int result = 1 << 30;\n        int N = nums.size();\n        for (int i = 0; i < N; ++i)\n            F[i][0] = nums[i];\n        for (int j = 1; (1 << j) <= N; ++j)\n            for (int i = 0, end = N - (1 << j); i <= end; ++i)\n                F[i][j] = F[i][j - 1] & F[i + (1 << (j - 1))][j - 1];\n        auto rmq = [](int L, int R)\n            {\n                if (L == R)\n                    return F[L][0];\n                int j = 0;\n                while (L + (1 << (j + 1)) <= R)\n                    ++j;\n                return F[L][j] & F[R - (1 << j) + 1][j];\n            };\n        auto calc = [&rmq, N, k](int i)\n            {\n                int a = i, b = N;\n                if (k <= rmq(i, b - 1))\n                    return rmq(i, b - 1) - k;\n                if (k >= rmq(i, i))\n                    return k - rmq(i, i);\n                int m = 0;\n                while (a < b)\n                {\n                    m = (a + b) / 2;\n                    int r = rmq(i, m);\n                    if (r == k)\n                        return 0;\n                    if (k < r)\n                    {\n                        if (m < N - 1 && k > rmq(i, m + 1))\n                            return min(abs(rmq(i, m) - k), abs(rmq(i, m + 1) - k));\n                        a = m + 1;\n                    }\n                    else\n                    {\n                        if (m > 0 && k < rmq(i, m - 1))\n                            return min(abs(rmq(i, m) - k), abs(rmq(i, m - 1) - k));\n                        b = m;\n                    }\n                }\n                return rmq(i, m);\n            };\n        for (int i = 0; i < N; ++i)\n            result = min(result, calc(i));\n        return result;\n    }\n};\n",
    "submit_ts": "1717298214",
    "subm_id": "1274771027"
}