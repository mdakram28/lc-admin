{
    "username": "suganth_a",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int N = colors.length;\n        int count = 0;\n        if (k == 1) {\n            return N;\n        }\n        count = fun(k,N,colors);\n        return count;\n\n    }\n    int lcs(String s1, String s2) {\n        int n = s1.length();\n        int m = s2.length();\n\n        int dp[][] = new int[n + 1][m + 1];\n\n        for (int rows[] : dp)\n            Arrays.fill(rows, -1);\n\n        for (int i = 0; i <= n; i++) {\n            dp[i][0] = 0;\n        }\n        for (int i = 0; i <= m; i++) {\n            dp[0][i] = 0;\n        }\n\n        for (int ind1 = 1; ind1 <= n; ind1++) {\n            for (int ind2 = 1; ind2 <= m; ind2++) {\n             \n                if (s1.charAt(ind1 - 1) == s2.charAt(ind2 - 1))\n                    dp[ind1][ind2] = 1 + dp[ind1 - 1][ind2 - 1];\n              \n                else\n                    dp[ind1][ind2] = Math.max(dp[ind1 - 1][ind2], dp[ind1][ind2 - 1]);\n            }\n        }\n\n        return dp[n][m]; \n    }\n    \n    public int fun(int k,int N,int[] colors){\n        int consecutiveCount = 1;\n        int index = 1;\n        int count=0;\n        while (index < N + k - 1) {\n            int current = index;\n            int previous = index - 1;\n\n            if (current >= N) {\n                current -= N;\n            }\n            if (previous >= N) {\n                previous -= N;\n            }\n\n            if (colors[current] != colors[previous]) {\n                consecutiveCount++;\n            } else {\n                consecutiveCount = 1;\n            }\n\n            if (consecutiveCount >= k) {\n                count++;\n            }\n\n            index++;\n        }\n\n        return count;\n    }\n}",
    "submit_ts": "1720280853",
    "subm_id": "1311804393"
}