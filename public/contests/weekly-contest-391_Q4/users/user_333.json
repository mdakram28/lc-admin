{
    "username": "simonwux1",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ans = sys.maxsize\n        N = len(points)\n        A = points\n        V = [0 for i in range(N)]\n        V1 = [0 for i in range(N)]\n \n        for i in range(N):\n            V[i] = (A[i][0] + A[i][1], i)\n            V1[i] = (A[i][0] - A[i][1], i)\n\n        # Sorting both the vectors\n        V.sort()\n        V1.sort()\n        if V[-1][0] - V[0][0] > V1[-1][0] - V1[0][0]:\n            si, sj = V[-1][1], V[0][1]\n        else:\n            si, sj = V1[-1][1], V1[0][1]\n\n        # maximum = max(V[-1] - V[0],V1[-1] - V1[0])\n        # print(maximum)\n        A = copy.copy(points)\n        x, y = A.pop(si)\n        N = len(points) - 1\n        \n        V = [0 for i in range(N)]\n        V1 = [0 for i in range(N)]\n \n        for i in range(N):\n            V[i] = A[i][0] + A[i][1]\n            V1[i] = A[i][0] - A[i][1]\n\n        # Sorting both the vectors\n        V.sort()\n        V1.sort()\n\n        maximum = max(V[-1] - V[0],V1[-1] - V1[0])\n        ans = min(ans, maximum)\n        \n        A = copy.copy(points)\n        x, y = A.pop(sj)\n        N = len(points) - 1\n        \n        V = [0 for i in range(N)]\n        V1 = [0 for i in range(N)]\n \n        for i in range(N):\n            V[i] = A[i][0] + A[i][1]\n            V1[i] = A[i][0] - A[i][1]\n\n        # Sorting both the vectors\n        V.sort()\n        V1.sort()\n\n        maximum = max(V[-1] - V[0],V1[-1] - V1[0])\n        ans = min(ans, maximum)\n        \n        return ans"
}