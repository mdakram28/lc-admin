{
    "username": "pennywise6003",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int hCut=0;\n        int vCut=0;\n        multiset<int>mhCut,vhCut;\n        for (int i:horizontalCut) mhCut.insert(i);\n        for (int i:verticalCut)   vhCut.insert(i);\n        mhCut.insert(-1);\n        vhCut.insert(-1);\n        long long cost=0;\n        multiset<int>::iterator hBegin=prev(mhCut.end());\n        multiset<int>::iterator vBegin=prev(vhCut.end());\n        for (int i=0;i<m+n;i++){\n            int x=*hBegin;\n            int y=*vBegin;\n            // cout<<x<<\" \"<<y<<\" \"<<cost<<endl;\n            if (x==-1 && y==-1) break;\n            if (y>x){\n                cost+=(hCut +1)*1LL*y;\n                vBegin=prev(vBegin);\n                vCut++;\n            }\n            else{\n                cost+=(vCut +1)*1LL*x;\n                hBegin=prev(hBegin);\n                hCut++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926442",
    "subm_id": "1320286396"
}