{
    "username": "suhailkhan0319",
    "submission": "#define pb push_back\n#define f first \n#define se second\nconst long long inf=1e9;\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        //just use the unordered maps to avoid tle and just iterate over the entire array.\n        //to store the ans\n        long long ans=0;\n        //map to store previous results\n        unordered_map<long long, long long> prevans;\n        //iterate over the entire array\n        for (int i = 0; i < nums.size(); ++i) \n        {   \n            //map to store answer of current results\n            unordered_map<long long, long long> currans; \n            if (nums[i]==k) \n            {\n                ans++;\n            }\n            currans[nums[i]] = 1;\n            //iterating over previous answers\n            //iterating over previous answers\n            for (auto &it: prevans) \n            {\n                long long latestans= it.first&nums[i];\n                if (latestans==k) \n                {\n                    ans+= it.second;\n                }\n                currans[latestans] += it.second;\n            }\n            //previous becomes current ans iterate over current now.\n            prevans=currans;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279112",
    "subm_id": "1311737932"
}