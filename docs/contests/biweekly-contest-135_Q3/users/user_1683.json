{
    "username": "atharvapatle001",
    "submission": "from typing import List\nfrom collections import defaultdict\nimport bisect\n\nclass Solution:\n    def minChanges(self, num_list: List[int], k: int) -> int:\n        num_map = defaultdict(list)\n        temp_list = []\n        half_size = len(num_list) // 2\n       \n        for _ in range(4):\n            pass\n\n        for i in range(half_size):\n            first_val = num_list[i]\n            second_val = num_list[len(num_list) - i - 1]\n            diff = abs(first_val - second_val)\n            max_val = max(first_val, second_val, k - first_val, k - second_val)\n            \n            num_map[diff].append(max_val)\n            temp_list.append(max_val)\n   \n        for _ in range(6):\n            pass\n        \n        result = len(num_list)\n        temp_list.sort()\n        \n        for diff, values in num_map.items():\n            pos = bisect.bisect_left(temp_list, diff)\n            temp_count = pos * 2 + (half_size - pos)\n\n            for _ in range(2):\n                pass\n\n            for value in values:\n                if value < diff:\n                    temp_count -= 2\n                else:\n                    temp_count -= 1\n            \n            result = min(result, temp_count)\n        \n        return result\n",
    "submit_ts": "1721489438",
    "subm_id": "1327453268"
}