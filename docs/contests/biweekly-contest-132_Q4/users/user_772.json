{
    "username": "b20181",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        \n       int n=nums.size(); \n        vector<vector<int>>dp_(n,vector<int>(k+1,1)); \n        int ans_var=1; \n        vector<int>other(k+1,-1); \n        vector<map<int,int>>ankit(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp_[i][j]=max(dp_[i][j],1+other[l]); \n                } \n                if(ankit[j].find(nums[i])!=ankit[j].end()){ \n                    dp_[i][j]=max(dp_[i][j],1+ankit[j][nums[i]]); \n                } \n                ans_var=max(ans_var,dp_[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                other[j]=max(other[j],dp_[i][j]); \n                ankit[j][nums[i]]=max(ankit[j][nums[i]],dp_[i][j]); \n            } \n        } \n        return ans_var; \n        \n    }\n};",
    "submit_ts": 1717862292.0
}