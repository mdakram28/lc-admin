{
    "username": "Ashish_NSUT",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int> v1, v2;\n        for(int i=0; i<n; i++){\n            v1.insert(points[i][0] - points[i][1]);\n            v2.insert(points[i][0] + points[i][1]);\n        }\n        // sort(v1.begin(), v1.end());\n        // sort(v2.begin(), v2.end());\n        int ans= INT_MAX;\n        for(int i=0; i<n; i++){\n            int diff = points[i][0] - points[i][1];\n            int sum = points[i][0] + points[i][1];\n            v1.erase(v1.find(diff));\n            v2.erase(v2.find(sum));\n            int sum1 = *v1.rbegin() - *v1.begin();\n            int sum2 = *v2.rbegin() - *v2.begin();\n            ans = min(ans, max(sum1, sum2));\n            v1.insert(diff);\n            v2.insert(sum);\n        \n        }\n        return ans;\n    }\n};"
}