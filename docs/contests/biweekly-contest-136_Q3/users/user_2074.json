{
    "username": "holer",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), res = 0;\n        for (auto& r : grid) for (auto& c : r) res += c;\n        // even even, even odd, odd odd\n        if (m % 2 == 0 && n % 2 == 0) {\n            int r = 0;\n            for (int i = 0; i < m / 2; ++i) {\n                for (int j = 0; j < n / 2; ++j) {\n                    int total = grid[i][j] + grid[i][n - j - 1] +\n                                grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                    r += min(total, 4 - total);\n                }\n            }\n            res = min(res, r);\n        } else if (m % 2 && n % 2) {\n            int r = 0;\n            for (int i = 0; i < m / 2; ++i) {\n                for (int j = 0; j < n / 2; ++j) {\n                    int total = grid[i][j] + grid[i][n - j - 1] +\n                                grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                    r += min(total, 4 - total);\n                }\n            }\n            int total = grid[m / 2][n / 2], cnt1 = 0, full = n + m - 2;\n            for (int l = 0, r = n - 1; l < r; l++, r--) {\n                if (grid[m / 2][l] != grid[m / 2][r]) total++;\n                else if (grid[m / 2][l]) cnt1 += 2;\n            }\n            for (int l = 0, r = m - 1; l < r; l++, r--) {\n                if (grid[l][n / 2] != grid[r][n / 2]) total++;\n                else if (grid[l][n / 2]) cnt1 += 2;\n            }\n            if (cnt1 % 4 != 0) \n                if (total - grid[m / 2][n / 2] == 0 || cnt1 == full) total += 2;\n            res = min(res, r + total);\n        } else {\n            int r = 0;\n            for (int i = 0; i < m / 2; ++i) {\n                for (int j = 0; j < n / 2; ++j) {\n                    int total = grid[i][j] + grid[i][n - j - 1] +\n                                grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                    r += min(total, 4 - total);\n                }\n            }\n            int cnt1 = 0, total = 0, full = 0;\n            if (m % 2) {\n                full = n;\n                for (int l = 0, r = n - 1; l < r; l++, r--) {\n                    if (grid[m / 2][l] != grid[m / 2][r]) total++;\n                    else if (grid[m / 2][l]) cnt1 += 2;\n                }\n            } else {\n                full = m;\n                for (int l = 0, r = m - 1; l < r; l++, r--) {\n                    if (grid[l][n / 2] != grid[r][n / 2]) total++;\n                    else if (grid[l][n / 2]) cnt1 += 2;\n                }\n            }\n            if (cnt1 % 4 != 0) \n                if (total == 0 || cnt1 == full) total += 2;\n            res = min(res, r + total);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722699288",
    "subm_id": "1343207132"
}