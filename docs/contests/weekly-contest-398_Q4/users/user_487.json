{
    "username": "shootingstar33",
    "submission": "using ll = long long;\n\nclass Solution {\n\npublic:\nconst int MAXN = 70;\nconst int MOD = 1e9 + 7;\n\n// dont forget to call factorial and inverses in main for precalc\nll fac[71];\nll inv[71];\n\nll exp(ll x, ll n, ll m){  // {number, power, mod}\n    x %= m;\n    ll res = 1;\n\n    while(n > 0){\n        if(n % 2 == 1) res = res * x % m;\n        x = x * x % m;\n        n /= 2;\n    }\n\n    return res;\n}\n\nll inverse(int x, int m){ // {number, mod}\n    return exp(x, MOD - 2, MOD);\n}\n\nvoid factorial(){\n    fac[0] = 1;\n    for(int i = 1; i <= MAXN; i++){\n        fac[i] = fac[i - 1] * i % MOD;\n    }\n}\n\nvoid inverses(){\n    inv[MAXN] = exp(fac[MAXN], MOD - 2, MOD);\n    for(int i = MAXN; i >= 1; i--){\n        inv[i - 1] = inv[i] * i % MOD;\n    }\n}\n\nll choose(int n, int r){\n    if(n - r < 0 || r < 0) return 0;\n    return fac[n] * inv[r] % MOD * inv[n - r] % MOD;\n}\n\nll chooseSlow(int n, int r){\n    if(n - r < 0 || r < 0) return 0;\n    int res = 1;\n\n    for(int i=n; i>n-r; i--){\n        res *= i;\n    }\n    for(int i=2; i<=r; i++){\n        res /= i;\n    }\n\n    return res;\n}\n    int waysToReachStair(int k) {\n        int sum = 1;\n        int ans = 0;\n        factorial();\n        inverses();\n        for(int i=0; i<30; i++){\n            int val = sum - k;\n            if(val <= i+1){\n                ans += choose(i+1, val);\n            }\n\n            sum += (1 << i);\n            \n            // cout << val << '\\n';\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1716088113.0
}