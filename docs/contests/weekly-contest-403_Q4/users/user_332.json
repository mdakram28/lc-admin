{
    "username": "AnDVT",
    "submission": "class Solution:\n\tdp = []\n\t@lru_cache\n\tdef sum1(self, i1, j1, i2, j2: int) -> int:\n\t\tres = self.dp[i2][j2]\n\t\tif i1>0:\n\t\t\tres -= self.dp[i1-1][j2]\n\t\tif j1>0:\n\t\t\tres -= self.dp[i2][j1-1]\n\t\tif i1>0 and j1>0:\n\t\t\tres += self.dp[i1-1][j1-1]\n\t\treturn res\n\t\n\t@lru_cache\n\tdef calc(self, i1,j1,i2,j2, split: int) -> int:\n\t\tif split == 1:\n\t\t\tif self.sum1(i1,j1,i2,j2) == 0 :\n\t\t\t\treturn 0\n\t\t\twhile i1<i2:\n\t\t\t\tif self.sum1(i1,j1,i1,j2) == 0:\n\t\t\t\t\ti1+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\twhile i1<i2:\n\t\t\t\tif self.sum1(i2,j1,i2,j2) == 0:\n\t\t\t\t\ti2-=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\twhile j1<j2:\n\t\t\t\tif self.sum1(i1,j1,i2,j1) == 0:\n\t\t\t\t\tj1+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\twhile j1<j2:\n\t\t\t\tif self.sum1(i1,j2,i2,j2) == 0:\n\t\t\t\t\tj2-=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\treturn (i2-i1+1)*(j2-j1+1)\n\t\tres = 1000\n\t\tfor i in range(i1,i2):\n\t\t\tif split == 3:\n\t\t\t\tres = min(res, self.calc(i1,j1,i,j2,1) + self.calc(i+1,j1,i2,j2,2))\n\t\t\t\tres = min(res, self.calc(i1,j1,i,j2,2) + self.calc(i+1,j1,i2,j2,1))\n\t\t\telse:\n\t\t\t\tres = min(res, self.calc(i1,j1,i,j2,1) + self.calc(i+1,j1,i2,j2,1))\n\t\tfor j in range(j1,j2):\n\t\t\tif split == 3:\n\t\t\t\tres = min(res, self.calc(i1,j1,i2,j,2) + self.calc(i1,j+1,i2,j2,1))\n\t\t\t\tres = min(res, self.calc(i1,j1,i2,j,1) + self.calc(i1,j+1,i2,j2,2))\n\t\t\telse:\n\t\t\t\tres = min(res, self.calc(i1,j1,i2,j,1) + self.calc(i1,j+1,i2,j2,1))\n\t\treturn res\n\n\tdef minimumSum(self, grid: List[List[int]]) -> int:\n\t\tself.dp = [[]]*len(grid)\n\t\tfor i in range(len(grid)):\n\t\t\tself.dp[i] = [0]*len(grid[0])\n\t\tmin_i, max_i = len(grid), 0\n\t\tmin_j, max_j = len(grid[0]), 0\n\t\tfor i in range(len(grid)):\n\t\t\tfor j in range(len(grid[i])):\n\t\t\t\tif grid[i][j] == 1:\n\t\t\t\t\tmin_i = min(min_i, i)\n\t\t\t\t\tmax_i = max(max_i, i)\n\t\t\t\t\tmin_j = min(min_j, j)\n\t\t\t\t\tmax_j = max(max_j, j)\n\t\tfor i in range(len(grid)):\n\t\t\tfor j in range(len(grid[0])):\n\t\t\t\tsum = 0\n\t\t\t\tif i > 0:\n\t\t\t\t\tsum += self.dp[i-1][j]\n\t\t\t\tif j > 0:\n\t\t\t\t\tsum += self.dp[i][j-1]\n\t\t\t\tif i > 0 and j>0:\n\t\t\t\t\tsum -= self.dp[i-1][j-1]\n\t\t\t\tself.dp[i][j] = sum+grid[i][j]\n\t\treturn self.calc(min_i, min_j, max_i, max_j, 3)",
    "submit_ts": 1719114419.0
}