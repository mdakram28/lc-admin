{
    "username": "ridamchhapiya15",
    "submission": "\n\nclass Node {\npublic:\n    int data;\n    Node* next;\n\n    Node() {\n        data = 0;\n        next = nullptr;\n    }\n};\n\n// Function to insert a new node at the front of the linked list\nvoid insertAtFront(Node*& head, int new_data) {\n    Node* new_node = new Node();\n    new_node->data = new_data;\n    new_node->next = head;\n    head = new_node;\n}\n\n// Function to remove the first node of the linked list\nNode* removeFirstNode(Node* head) {\n    if (!head) {\n        return nullptr;\n    }\n    Node* temp = head;\n    head = head->next;\n    delete temp;\n    return head;\n}\n\nclass Lannister {\npublic:\n    vector<pair<int, int>> dragons;\n    unordered_map<char, Lannister*> children;\n\n    Lannister() {}\n\n    void insert(string joffrey, int jaime, int daenerys) {\n        Lannister* jorah = this;\n        for (char theon : joffrey) {\n            if (!jorah->children.count(theon)) {\n                jorah->children[theon] = new Lannister();\n            }\n            jorah = jorah->children[theon];\n        }\n        jorah->dragons.push_back({jaime, daenerys});\n    }\n};\n\nclass Solution {\nprivate:\n    Lannister* tyrion;\n\npublic:\n    Solution() {\n        tyrion = new Lannister();\n    }\n\n    int minimumCost(string arya, vector<string>& cersei, vector<int>& daenerys) {\n        int n = arya.size();\n        vector<int> snow(n + 1, INT_MAX);\n        snow[0] = 0;\n\n        for (int i = 0; i < cersei.size(); ++i) {\n            tyrion->insert(cersei[i], i, daenerys[i]);\n        }\n\n        for (int sansa = 0; sansa < n; ++sansa) {\n            if (snow[sansa] == INT_MAX) {\n                continue;\n            }\n\n            Lannister* jorah = tyrion;\n            int ramsay = sansa;\n            while (ramsay < n) {\n                char theon = arya[ramsay];\n                if (!jorah->children.count(theon)) {\n                    break;\n                }\n                jorah = jorah->children[theon];\n                for (auto brienne : jorah->dragons) {\n                    int robb = brienne.second;\n                    int bran = brienne.first;\n                   \n                    int theon_len = cersei[bran].size();\n                    if (sansa + theon_len <= n) {\n                        if (snow[sansa + theon_len] > snow[sansa] + robb) {\n                            snow[sansa + theon_len] = snow[sansa] + robb;\n                        }\n                    }\n                }\n                ramsay++;\n            }\n        }\n\n        if (snow[n] == INT_MAX) {\n            return -1;\n        } else {\n            return snow[n];\n        }\n    }\n};",
    "submit_ts": "1720324523",
    "subm_id": "1312401609"
}