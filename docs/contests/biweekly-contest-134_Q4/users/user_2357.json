{
    "username": "_ddms_",
    "submission": "class Solution {\nprivate:\nlong long countSubarraysEndingAtIndex(vector<int>& nums, int endIndex, int k, unordered_map<long long, long long>& previousResults) {\n        long long count = 0;\n        unordered_map<long long, long long> currentResults;\n        long long target = k;\n        \n        if (nums[endIndex] == target) {\n            ++count;\n        }\n        currentResults[nums[endIndex]] = 1;\n        \n        for (auto& [value, frequency] : previousResults) {\n            long long newAndResult = value & nums[endIndex];\n            if (newAndResult == target) {\n                count += frequency;\n            }\n            currentResults[newAndResult] += frequency;\n        }\n        \n        previousResults = currentResults;\n        return count;\n    }\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long total = 0;\n        unordered_map<long long, long long> previousResults;\n        \n        for (int index = 0; index < n; ++index) {\n            total += countSubarraysEndingAtIndex(nums, index, k, previousResults);\n        }\n        \n        return total;\n    }\n};",
    "submit_ts": "1720280976",
    "subm_id": "1311808756"
}