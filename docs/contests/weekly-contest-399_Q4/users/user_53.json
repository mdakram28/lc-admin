{
    "username": "nicolasalba",
    "submission": "#define ACTIVE_DEBUG\n\n// ############ Ignore macros and debugger ########################\n#include \"bits/stdc++.h\"\nusing namespace std;\n\n#define pb push_back\n#define F first\n#define S second\n#define all(x) (x).begin(), (x).end()\n#define sortt(x) sort(all(x))\n\nusing ll = long long;\nusing ld = long double;\nusing pi = pair<int, int>;\nusing pl = pair<ll, ll>;\nusing ti = tuple<long long, long long, long long>;\nusing vi = vector<int>;\nusing vb = vector<bool>;\nusing vl = vector<ll>;\nusing vs = vector<string>;\nusing vvl = vector<vl>;\nusing vpl = vector<pl>;\n\ntemplate<class T> using pql = priority_queue<T,vector<T>,greater<T>>;\ntemplate<class T> using pqg = priority_queue<T>;\n\nvoid __print(int x) {cout << x;}\nvoid __print(long long x) {cout << x;}\nvoid __print(string x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(bool x) {cout << (x ? \"T\" : \"F\");}\n\nvoid __print(map<ll,ll> mp) {\n    for (auto p : mp) {\n        cout << p.F << \":\" << p.S << \",\";\n    }\n}\n\ntemplate<typename T> // for data structures (vector, set, map, etc)\n\nvoid __print(const T &xs)\n{cout << \"[ \"; for (auto &x : xs) {__print(x);cout << ' ';}cout << ']';}\n\nvoid _print()\n{cout << \"]\" << endl;}\n\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v)\n{__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\n\n#ifdef ACTIVE_DEBUG\n    #define deb(x...) cout << \"[\" << #x << \"] = [\", _print(x)\n    #define LINE cout << \"-------------------\" << endl;\n#else\n    #define deb(x...) \"C\"\n    #define LINE \"C\"\n#endif\n// ############ Ignore macros and debugger ########################\n\nconst ll MOD = 1e9+ 7;\nclass Solution {\npublic:\n\n\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        ll n = nums.size();\n        ll block = sqrt(n)+1;\n        vvl blocks;\n        vector<pair<ll,ll>> first, second;\n        vl ids;\n        for (int i =0;i<n; i++) {\n            ll id = i/block;\n            if (blocks.size() <= id) blocks.pb({}), first.pb({0,0}), second.pb({0,0}), ids.pb(id);\n            blocks[id].pb(nums[i]); \n        }\n\n\n        auto calc = [&] (ll id) {\n            ll m = blocks[id].size();\n            vl dp(block + 2); // terminando en final\n            vl dp2(block + 2); // penultimo\n            for (int i = m-1; i >=0;i--) {\n                ll num = blocks[id][i];\n                dp[i] = max(num + dp[i+2], dp[i+1]);\n                if (i != m-1)\n                    dp2[i] = max(num + dp2[i+2], dp2[i+1]);\n            }\n\n            first[id] = {dp[0],dp2[0]};\n            second[id] = {dp[1],dp2[1]};\n        };\n\n        auto answer = [&] () {\n            ll ans = 0;\n            ll a = 0, b= 0;\n            vector<pair<ll,ll>> dp(blocks.size() + 5);\n            for (int i = (ll)blocks.size() - 1; i >= 0;i--) {\n                dp[i].F = max(first[i].F + dp[i+1].S, first[i].S + dp[i+1].F);\n                dp[i].S = max(second[i].F + dp[i+1].S, second[i].S + dp[i+1].F);\n            }\n            return max(dp[0].F, dp[0].S);\n        };\n        for (auto id : ids) {\n            calc(id);\n        }\n        \n\n        ll ans = 0;\n        for (auto &q : queries) {\n            ll pos, x;\n            pos = q[0], x = q[1];\n\n            ll id = pos/block;\n            ll rel = pos % block;\n            blocks[id][rel] = x;\n            calc(id);\n\n            ans = (ans + answer()) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716693340.0
}