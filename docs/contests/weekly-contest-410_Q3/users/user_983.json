{
    "username": "vinay_kh",
    "submission": "class Solution {\n    \n    int mod = (int)(1e9+7);\n    \n    public long help(int[] nums, int idx , int prev1 , int prev2 , int[][][] dp){\n        if(idx==nums.length){\n            \n            return 1;\n        }\n        \n        if(dp[idx][prev1][prev2]!=-1){\n            return dp[idx][prev1][prev2];\n        }\n        \n        long count =0;\n        for(int i=prev1 ; i<=nums[idx] ; i++){\n            int a = i;\n            int b = nums[idx]-a;\n            if(b<=prev2){\n                count= ((count%mod )+ (help(nums,idx+1,a,b,dp)%mod))%mod;\n            }\n        }\n        \n        return dp[idx][prev1][prev2] = (int)count;\n    }\n    public int countOfPairs(int[] nums) {\n        \n        int[][][] dp = new int[nums.length][51][51];\n        \n        for(int i=0 ; i<nums.length ; i++){\n            for(int j=0 ; j<dp[i].length ; j++){\n                Arrays.fill(dp[i][j],-1);\n            }\n        }\n        long ans = help(nums,0,0,50,dp);\n        ans %=mod;\n        return  (int)(ans);\n        \n    }\n}",
    "submit_ts": "1723344995",
    "subm_id": "1351546417"
}