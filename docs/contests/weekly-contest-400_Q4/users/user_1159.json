{
    "username": "hello_hi_bye",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> zeros(32, 0);\n\n        auto updateZeroCounts = [&](int x, int sign) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] += sign;\n                }\n            }\n        };\n\n        auto evaluateResult = [&]() {\n            int res = 0;\n            for (int i = 0; i < 32; ++i) {\n                if (zeros[i] == 0) {\n                    res ^= (1 << i);\n                }\n            }\n            return res;\n        };\n\n        auto calculateDifference = [&](int x, int k) {\n            return abs(x - k);\n        };\n\n        auto moveLeftPointer = [&](int& i) {\n            updateZeroCounts(nums[i], -1);\n            ++i;\n        };\n\n        auto minimumDifference = [&](int k) {\n            int n = nums.size();\n            int ans = INT_MAX;\n            int i = 0;\n\n            for (int j = 0; j < n; ++j) {\n                updateZeroCounts(nums[j], 1);\n                int x = evaluateResult();\n                ans = min(ans, calculateDifference(x, k));\n                while (i < j && x < k) {\n                    moveLeftPointer(i);\n                    x = evaluateResult();\n                    ans = min(ans, calculateDifference(x, k));\n                }\n            }\n\n            return ans;\n        };\n\n        return minimumDifference(k);\n    }\n};\n",
    "submit_ts": 1717300099.0
}