{
    "username": "park6",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        N = n+10\n        tree = [0]*N \n        def query(idx):\n            v = 0\n            while idx:\n                v += tree[idx]\n                idx -= idx&-idx\n            return v  \n        def update(idx, v):\n            while idx < N:\n                tree[idx] += v \n                idx += idx&-idx\n            return\n\n        ans = []\n        def check(x,y,z):\n            return x < y and z < y \n        for i in range(1,n-1):\n            if check(nums[i-1],nums[i],nums[i+1]):\n                update(i+1,1)\n\n        for t, a, b in queries:\n            if t == 1:\n                if b-a >= 2:\n                    ans.append(query(b)-query(a+1))\n                else:\n                    ans.append(0)\n            else:\n                pos, val = a, b \n                if 0 < pos < n-1 and check(nums[pos-1],nums[pos],nums[pos+1]) and not check(nums[pos-1],val,nums[pos+1]):\n                    update(pos+1,-1)\n                if 0 < pos < n-1 and check(nums[pos-1],val,nums[pos+1]) and not check(nums[pos-1],nums[pos],nums[pos+1]):\n                    update(pos+1,1)\n                if 0 < pos-1 < n-1 and check(nums[pos-2],nums[pos-1],nums[pos]) and not check(nums[pos-2],nums[pos-1],val):\n                    update(pos,-1)\n                if 0 < pos-1 < n-1 and check(nums[pos-2],nums[pos-1],val) and not check(nums[pos-2],nums[pos-1],nums[pos]):\n                    update(pos,1)\n                if 0 < pos+1 < n-1 and check(nums[pos],nums[pos+1],nums[pos+2]) and not check(val,nums[pos+1],nums[pos+2]):\n                    update(pos+2,-1)\n                if 0 < pos+1 < n-1 and check(val,nums[pos+1],nums[pos+2]) and not check(nums[pos],nums[pos+1],nums[pos+2]):\n                    update(pos+2,1)\n                nums[pos] = val\n        return ans ",
    "submit_ts": "1718507433",
    "subm_id": "539781325"
}