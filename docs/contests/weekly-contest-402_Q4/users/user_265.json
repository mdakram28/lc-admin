{
    "username": "MdAbedin",
    "submission": "from sortedcontainers import SortedSet\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        sl = SortedSet()\n        \n        for i,a,b,c in zip(range(1,len(nums)),nums,nums[1:],nums[2:]):\n            if a < b > c: sl.add(i)\n\n        ans = []\n                \n        for q,a1,a2 in queries:\n            if q == 1:\n                ans.append(max(0,sl.bisect_left(a2)-sl.bisect_right(a1)))\n            else:\n                nums[a1] = a2\n                \n                for i in range(a1-1,a1+2):\n                    if i in range(1,len(nums)-1) and nums[i-1] < nums[i] > nums[i+1]: sl.add(i)\n                    if not(i in range(1,len(nums)-1) and nums[i-1] < nums[i] > nums[i+1]): sl.discard(i)\n            \n        return ans",
    "submit_ts": "1718506682",
    "subm_id": "1289627395"
}