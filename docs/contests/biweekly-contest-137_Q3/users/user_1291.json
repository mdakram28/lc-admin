{
    "username": "YEH_CHIA_KAI",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n\n        dp1 = [float('-inf')] * (n * n)\n        dp2 = [float('-inf')] * n\n\n        out = float('-inf')\n\n        for i in range(m):\n            for j in range(n):\n                out = max(board[i][j] + dp2[j], out)\n\n            for j in range(n):\n                for k in range(n):\n                    if k == j:\n                        continue\n\n                    dp2[j] = max(board[i][k] + dp1[j * n + k if j < k else k * n + j], dp2[j])\n\n            m1 = float('-inf')\n            m2 = float('-inf')\n            m3 = float('-inf')\n\n            for j in range(n):\n                if board[i][j] > m1:\n                    m1, m2, m3 = board[i][j], m1, m2\n                elif board[i][j] > m2:\n                    m2, m3 = board[i][j], m2\n                elif board[i][j] > m3:\n                    m3 = board[i][j]\n\n            for j in range(n):\n                for k in range(j + 1, n):\n                    if board[i][j] != m1 and board[i][k] != m1:\n                        dp1[j * n + k] = max(m1, dp1[j * n + k])\n                    elif board[i][j] == m1 and board[i][k] != m2 or board[i][k] == m1 and board[i][j] != m2:\n                        dp1[j * n + k] = max(m2, dp1[j * n + k])\n                    else:\n                        dp1[j * n + k] = max(m3, dp1[j * n + k])\n\n\n                    # for l in range(n):\n                    #     if l == j or l == k:\n                    #         continue\n\n                    #     dp1[j * n + k] = max(board[i][l], dp1[j * n + k])\n\n        return out",
    "submit_ts": "1723910321",
    "subm_id": "1359225791"
}