{
    "username": "leek2008",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        peak_indices = SortedList([-1])\n        n = len(nums)\n        for i, num in enumerate(nums):\n            if i == 0 or i == n - 1: continue\n            if num > nums[i - 1] and num > nums[i + 1]:\n                peak_indices.add(i)\n        # print(peak_indices)\n\n        ans = []\n        for t, p1, p2 in queries:\n            if t == 1:\n                if p2 - p1 <= 1:\n                    ans.append(0)\n                else:\n                    ans.append(peak_indices.bisect_right(p2 - 1) - peak_indices.bisect_left(p1 + 1))\n            else:\n                if p2 == nums[p1]: continue\n                if p1 - 2 >= 0:\n                    if nums[p1 - 2] < nums[p1 - 1] and nums[p1 - 1] > p2 :\n                        if nums[p1 - 2] >= nums[p1 - 1] or nums[p1 - 1] <= nums[p1]:\n                            peak_indices.add(p1 - 1)\n                    else:\n                        peak_indices.discard(p1 - 1)\n                if p1 + 2 < n:\n                    if p2 < nums[p1 + 1] and nums[p1 + 1] > nums[p1 + 2]:\n                        if nums[p1] >= nums[p1 + 1] or nums[p1 + 1] <= nums[p1 + 2]:\n                            peak_indices.add(p1 + 1)\n                    else:\n                        peak_indices.discard(p1 + 1)\n                if p1 != 0 and p1 != n - 1:\n                    if nums[p1 - 1] < p2 and p2 > nums[p1 + 1]:\n                        if nums[p1 - 1] >= nums[p1] or nums[p1] <= nums[p1 + 1]:\n                            peak_indices.add(p1)\n                    else:\n                        peak_indices.discard(p1)\n                nums[p1] = p2\n        return ans\n\n",
    "submit_ts": 1718508331.0
}