{
    "username": "Anuj_Ag",
    "submission": "class Solution {\npublic:\n    int calc(vector<pair<int, int>> V, vector<pair<int, int>> V1, int r)\n    {\n        if(V1[0].second == r)\n        {\n            V1.erase(V1.begin());\n        }\n        else if((V1.back()).second == r)\n        {\n            V1.pop_back();\n        }\n        if(V[0].second == r)\n        {\n            V.erase(V.begin());\n        }\n        else if((V.back()).second == r)\n        {\n            V.pop_back();\n        }\n        vector<pair<int,int>> x = V, y = V1;\n        int ans = max(abs(V1.front().first - V1.back().first), abs(V.front().first - V.back().first));\n        return ans;\n    }\n    \n    int comp(vector<vector<int>>& A, int N)\n    {\n        vector<pair<int, int>> V(N), V1(N);\n        for (int i = 0; i < N; i++) \n        {\n            V[i] = {A[i][0] + A[i][1], i};\n            V1[i] = {A[i][0] - A[i][1], i};\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        int ans = INT_MAX;\n        if(abs(V.front().first - V.back().first) > abs(V1.front().first - V1.back().first))\n        {\n            int r1 = V.front().second, r2 = V.back().second;   \n            ans = min(calc(V, V1, r1), calc(V, V1, r2));\n        }\n        else\n        {\n            int r1 = V1.front().second, r2 = V1.back().second;   \n            ans = min(calc(V, V1, r1), calc(V, V1, r2));\n        }\n        return ans;\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        return comp(points, n);\n    }\n};"
}