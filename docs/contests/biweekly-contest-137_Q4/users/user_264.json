{
    "username": "\u591c\u4e91",
    "submission": "def sol_already_had_two(board,x1,y1,x2,y2):\n    ans = None\n    for i in range(len(board)):\n        if not i in (x1,x2):\n            for j in range(len(board[0])):\n                if not j in (y1,y2):\n                    if ans is None or board[i][j] > ans:\n                        ans = board[i][j]\n    return ans\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        ans = None\n        point_list = []\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                point_list.append([i,j,board[i][j]])\n        point_list.sort(key = lambda x:-x[2])\n        for i in range(4):\n            j = i + 1\n            skip_num = 0\n            while(skip_num <= 2):\n                while j < len(point_list) and (point_list[j][0] == point_list[i][0] or point_list[j][1] == point_list[i][1]):\n                    j += 1\n                if j >= len(point_list):\n                    break\n                try_ans = sol_already_had_two(board,point_list[i][0],point_list[i][1],point_list[j][0],point_list[j][1]) \\\n                    + point_list[j][2] + point_list[i][2]\n                if ans is None or ans < try_ans:\n                    ans = try_ans\n                j += 1\n                skip_num += 1\n        return ans\n            ",
    "submit_ts": "1723907969",
    "subm_id": "556328492"
}