{
    "username": "mukeshkarthikeyan1711",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution { \npublic: \n    long long countSubarrays(vector<int>& array, int target) { \n        int length = array.size(); \n        long long subarrayCount = 0; \n         \n        unordered_map<long long, long long> previousResults; \n \n        for (int i = 0; i < length; ++i) { \n            unordered_map<long long, long long> currentResults;  \n \n            if (array[i] == target) { \n                ++subarrayCount; \n            } \n            currentResults[array[i]] = 1; \n \n            for (auto& [value, frequency] : previousResults) { \n                long long newAndResult = value & array[i]; \n                if (newAndResult == target) { \n                    subarrayCount += frequency; \n                } \n                currentResults[newAndResult] += frequency; \n            } \n             \n            previousResults = currentResults; \n        } \n         \n        return subarrayCount; \n    } \n};\n",
    "submit_ts": "1720280270",
    "subm_id": "1311783067"
}