{
    "username": "divyang9575",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        vector<pair<int, int>> vec;\n        for (int i = 0; i < m - 1; i++) {\n            vec.push_back({h[i], 1});\n        }\n        for (int i = 0; i < n - 1; i++) {\n            vec.push_back({v[i], 2});\n        }\n        sort(vec.begin(), vec.end(), greater<pair<int, int>>()) ;\n        \n        long long ans = 0, ver = 1, hor = 1 ;\n        for (int i = 0; i < vec.size(); i++) {\n            int val = vec[i].first, cut = vec[i].second;\n            if(cut == 1) {\n                ans += ver * val;\n                hor++ ;\n            }\n            else {\n                ans += val * hor;\n                ver++ ;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925394",
    "subm_id": "1320253277"
}