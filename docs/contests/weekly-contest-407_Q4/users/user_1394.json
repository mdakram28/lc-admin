{
    "username": "Gaurav8995",
    "submission": "class Solution {\npublic:\n    long long comp(vector<int> &diffp){\n        long long count = 0;\n        int i=1; int n= diffp.size();\n        long long local_max=diffp[0], local_min = 0;\n        while(i<n){\n            while(i<n && diffp[i] >= diffp[i-1]) {local_max = diffp[i]; i++;}\n            cout << i << \" \" << local_max << \" \" << local_min << endl;\n            count += (local_max - local_min);\n            while(i<n && diffp[i] <= diffp[i-1] ) { local_min = diffp[i]; i++;}\n        }\n        if(n==1) count = local_max;\n        return count;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diffp(n, 0), diffn(n, 0);\n        \n        for(int i=0;i<n;i++){\n            diffp[i] = diffn[i] = 0;\n            int val = target[i] - nums[i];\n            diffp[i] = val>0?val:0;\n            diffn[i] = val<0?-val:0;\n            // cout << diffp[i] << \" \" << diffn[i] << endl;\n        }\n        \n        return comp(diffp) + comp(diffn);\n    }\n};",
    "submit_ts": "1721532506",
    "subm_id": "1327987481"
}