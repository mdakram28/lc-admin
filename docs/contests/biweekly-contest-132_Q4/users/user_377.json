{
    "username": "gautam1124bihar",
    "submission": "class Solution {\npublic:\n\n\n\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        int dp[n+1][k+1];\n        int mx_dp[k+1];\n        memset(dp,0,sizeof(dp));\n        memset(mx_dp,0,sizeof(mx_dp));\n        map<int,int> last;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<=k;j++){\n                if(j == 0){\n                    int x =0 ;\n                    if(last.find(nums[i]) != last.end())x = dp[last[nums[i]]][0];\n                    x += 1;\n                    dp[i][j] = x;\n                }else{\n                    int x = mx_dp[j-1];\n                    dp[i][j] = x + 1;\n                    if(last.find(nums[i]) != last.end())dp[i][j] = max(dp[i][j],1 + dp[last[nums[i]]][j]);\n                }\n            }\n            last[nums[i]] = i;\n            for(int j=0;j<=k;j++)mx_dp[j] = max(mx_dp[j],dp[i][j]);\n        }\n        int ans =0 ;\n        for(int i=0;i<=k;i++)ans = max(ans, mx_dp[i]);\n        return ans;\n\n    }\n};",
    "submit_ts": "1717861707",
    "subm_id": "1281799601"
}