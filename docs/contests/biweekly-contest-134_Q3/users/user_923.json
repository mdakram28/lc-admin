{
    "username": "GaleStarr",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        \n        int n=colors.length;\n        \n        Queue<Integer> unoptimalIndices = new LinkedList<>();\n        for(int i=1;i<k;i++) \n        {\n            if(colors[i]==colors[i-1])unoptimalIndices.add(i-1);\n        }\n        int ans=0;\n        int st=0;\n        int end=k-1;\n        \n        for(int i=k-1;i<k+n-1;i++) \n        {\n            if(unoptimalIndices.isEmpty())ans++;\n            else if(unoptimalIndices.peek()==st)unoptimalIndices.poll();\n            st++;\n            end++;\n            end%=n;\n            st%=n;\n            if(colors[end]==colors[(end-1+n)%n])unoptimalIndices.add((end-1+n)%n);\n            \n        }\n        \n        return ans;\n        \n        \n        \n    }\n}",
    "submit_ts": "1720277547",
    "subm_id": "1311668876"
}