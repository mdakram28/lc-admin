{
    "username": "seedjyh",
    "submission": "typedef long long LL;\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> firstZero(n + 1, vector<int>(32));\n        for (int j = 0, bit = 1; j < 32; j++, bit <<= 1) {\n            firstZero[n][j] = n;\n            for (int i = n - 1; i >= 0; i--) {\n                if (nums[i] & bit) {\n                    firstZero[i][j] = firstZero[i + 1][j];\n                } else {\n                    firstZero[i][j] = i;\n                }\n            }\n        }\n        LL ans = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            int lo = i;\n            int hi = n - 1;\n            for (int j = 0, bit = 1; j < 32; j++, bit <<= 1) {\n                if (k & bit) {\n                    // cout << \"hit, j=\" << j << endl;\n                    hi = min(hi, firstZero[i][j] - 1);\n                } else {\n                    lo = max(lo, firstZero[i][j]);\n                }\n            }\n            // cout << \"i=\" << i << \", lo=\" << lo << \", hi=\" << hi << endl;\n            ans += (LL)max(hi - lo + 1, 0);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278749",
    "subm_id": "544564162"
}