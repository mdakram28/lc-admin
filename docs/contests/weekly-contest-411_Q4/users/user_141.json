{
    "username": "Wow",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size(), m = queries.size();\n        using ll = long long;\n        int f[n + 1];\n        memset(f, 0, sizeof f);\n        for (int cnt0 = 0, cnt1 = 0, l = 1, r = 1; r <= n; r++) {\n            if (s[r - 1] == '0') cnt0++;\n            else cnt1++;\n\n            if (r <= k * 2) f[r] = r;\n            else {\n                if (cnt0 <= k || cnt1 <= k) f[r] = f[r - 1] + 1;\n                else {\n                    while (cnt0 > k && cnt1 > k) {\n                        if (s[l - 1] == '0') cnt0--;\n                        else cnt1--;\n                        l++;\n                    }\n                    f[r] = r - l + 1;\n                }\n            }\n        }\n\n        ll sum[n + 1];\n        memset(sum, 0, sizeof sum);\n        for (int i = 1; i <= n; i++) {\n            sum[i] = sum[i - 1] + f[i];\n        }\n        \n        vector<ll> res(m);\n        for (int it = 0; it < m; it++) {\n            int l = queries[it][0], r = queries[it][1];\n            l++, r++;\n            int lo = l - 1, hi = r;\n            while (lo < hi) {\n                int mid = lo + hi + 1>> 1;\n                if (mid - f[mid] + 1 < l) lo = mid;\n                else hi = mid - 1;\n            }\n            if (lo == l - 1) res[it] = sum[r] - sum[l - 1];\n            else {\n                if (lo == r) {\n                    ll len = r - l + 1;\n                    res[it] = len * (len + 1) / 2;\n                } else {\n                    res[it] = sum[r] - sum[lo];\n                    ll len = lo - l + 1;\n                    res[it] += len * (len + 1) / 2;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723953082",
    "subm_id": "556415414"
}