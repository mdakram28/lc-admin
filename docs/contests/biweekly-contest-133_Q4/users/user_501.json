{
    "username": "apurv702",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9+7;\n    const int MAX_INVERSIONS = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& a) {\n        map<long long ,long long >u;\n        for(auto i:a)\n        {\n            u[i[0]+1] = i[1];\n        }\n        vector<vector<long long> > as(n+1,vector<long long>(401));\n        as[0][0]=1;\n        for (long long  i = 1; i <= n; i++) {\n            for (long long  j = 0;j <= 400;j++) {\n                for (long long  k = 0; k < i; k++) {\n                    long long  te =j - k;\n                    if (te >= 0) {\n                        as[i][j] = (as[i][j] + as[i - 1][te]) % MOD;\n                    }\n                }\n            }\n            if (u.count(i)) {\n                long long  targetInv = u[i];\n                for (long long  inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                    if (inv != targetInv) {\n                        as[i][inv] = 0;\n                    }\n                }\n            }\n        }\n        long long ans = 0;\n        for (long long  inv = 0; inv <= MAX_INVERSIONS; inv++) {\n            ans = (ans + as[n][inv]) % MOD;\n        }\n        return (int)ans;\n    }\n};",
    "submit_ts": 1719070568.0
}