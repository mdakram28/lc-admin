{
    "username": "maxuanquang",
    "submission": "class Solution:\n    def maxOperations(self, s: str) -> int:\n        n = len(s)\n        \n        islands = []\n\n        size = 0\n        for i in range(n - 1):\n            if s[i] == \"1\":\n                size += 1\n                if s[i + 1] == \"0\":\n                    islands.append(size)\n                    size = 0\n            else:\n                size = 0\n\n        if not islands:\n            return 0\n        pf = list(accumulate(islands))\n        return sum(pf)\n\n        \"\"\"\n        0123456\n        1001101\n         ||\n             |\n\n        0346\n        3456\n\n        Optimal to go from left to right\n\n        Brute Force =>\n            From left to right, if we see, do it, then start from beginning\n\n        how many islands?\n        to move 1 island, how much it take?\n        -----\n        2 islands\n            1 and 2\n\n            n takes n\n\n            1\n            3 3\n\n        \"\"\"\n        \n",
    "submit_ts": "1721530754",
    "subm_id": "1327942897"
}