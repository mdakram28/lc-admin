{
    "username": "devsh1322",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int flips = 0;\n\n        for(int i=0; i<n/2; i++){\n            for(int j=0; j<m/2; j++){\n                int tempSum = grid[i][j] + grid[i][m-1-j] + grid[n-i-1][j] + grid[n-i-1][m-j-1];\n                flips += min(tempSum, 4-tempSum);\n            }\n        }\n        bool rowFlipped = false;\n        int rowSum = 0;\n        if(n%2==1){\n            for(int j=0; j<m/2; j++){\n                if(grid[n/2][j]==grid[n/2][m-j-1]) rowSum+=2*grid[n/2][j];\n            }\n            for(int j=0; j<m/2; j++){\n                if(grid[n/2][j]!=grid[n/2][m-j-1]){\n                    if(rowSum%4!=0) rowSum+=2;\n                    flips++;\n                    rowFlipped = true;\n                }\n            }\n        }\n        int colSum = 0;\n        bool colFlipped = false;\n        if(m%2==1){\n            for(int i=0; i<n/2; i++){\n                if(grid[i][m/2]==grid[n-i-1][m/2]) colSum+=2*grid[i][m/2];\n            }\n            for(int i=0; i<n/2; i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]){\n                    if(colSum%4!=0) colSum+=2;\n                    flips++;\n                    colFlipped = true;\n                }\n            }\n        }\n\n        if((rowSum+colSum)%4==2 && !rowFlipped && !colFlipped){\n            flips+=2;\n        }\n        if(n%2==1 && m%2==1) flips+=grid[n/2][m/2];\n\n\n        return flips;\n\n    }\n};",
    "submit_ts": "1722700080",
    "subm_id": "1343231097"
}