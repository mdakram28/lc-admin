{
    "username": "ryanwong0127",
    "submission": "class Solution:\n    def func(self, a: List[List[int]]) -> int:\n        # print(a)\n        rows = len(a)\n        if (rows <= 0):\n            return 0\n        cols = len(a[0])\n\n        min_row, max_row = rows, -1\n        min_col, max_col = cols, -1\n\n        for r in range(rows):\n            for c in range(cols):\n                if a[r][c] == 1:\n                    min_row = min(min_row, r)\n                    max_row = max(max_row, r)\n                    min_col = min(min_col, c)\n                    max_col = max(max_col, c)\n\n        if min_row == rows:  # If no 1 found\n            return 0\n        return (max_row - min_row + 1) * (max_col - min_col + 1)\n    \n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        \n        def calculate_area(subgrid):\n            return self.func(subgrid)\n\n        min_area = float('inf')\n        \n        # \u4e0a\u4e2d\u4e0b\n        for r1 in range(n - 1):\n            for r2 in range(r1 + 1, n):\n                area1 = calculate_area(grid[:r1 + 1])\n                area2 = calculate_area(grid[r1 + 1:r2 + 1])\n                area3 = calculate_area(grid[r2 + 1:])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        # \u5de6\u4e2d\u53f3\n        for c1 in range(m - 1):\n            for c2 in range(c1 + 1, m):\n                area1 = calculate_area([row[:c1 + 1] for row in grid])\n                area2 = calculate_area([row[c1 + 1:c2 + 1] for row in grid])\n                area3 = calculate_area([row[c2 + 1:] for row in grid])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        # \u4e0a\u5de6\u53f3\n        for r in range(n - 1):\n            area1 = calculate_area(grid[:r + 1])\n            for c in range(m - 1):\n                area2 = calculate_area([row[:c + 1] for row in grid[r + 1:]])\n                area3 = calculate_area([row[c + 1:] for row in grid[r + 1:]])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        # \u4e0b\u5de6\u53f3\n        for r in range(1, n):\n            area1 = calculate_area(grid[r:])\n            for c in range(m - 1):\n                area2 = calculate_area([row[:c + 1] for row in grid[:r]])\n                area3 = calculate_area([row[c + 1:] for row in grid[:r]])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        # \u5de6\u4e0a\u4e0b\n        for c in range(m - 1):\n            area1 = calculate_area([row[:c + 1] for row in grid])\n            for r in range(n - 1):\n                area2 = calculate_area([row[c + 1:] for row in grid[:r + 1]])\n                area3 = calculate_area([row[c + 1:] for row in grid[r + 1:]])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        # \u4e0a\u4e0b\u53f3\n        for c in range(1, m):\n            area3 = calculate_area([row[c:] for row in grid])\n            for r1 in range(n - 1):\n                area1 = calculate_area([row[:c] for row in grid[:r1 + 1]])\n                area2 = calculate_area([row[:c] for row in grid[r1 + 1:]])\n                min_area = min(min_area, area1 + area2 + area3)\n        \n        return min_area\n       ",
    "submit_ts": "1719115193",
    "subm_id": "1297362657"
}