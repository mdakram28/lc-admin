{
    "username": "void_harsh",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        \n        int N = A.size();\n    multiset<int> m1, m2;\n\n    for (int i = 0; i < N; i++) {\n        int x1 = A[i][0] + A[i][1];\n        int x2 = A[i][0] - A[i][1];\n        m1.insert(x1);\n        m2.insert(x2);\n    }\n\n    int mini = INT_MAX;\n\n    for (int i = 0; i < N; i++) {\n        int x1 = A[i][0] + A[i][1];\n        int x2 = A[i][0] - A[i][1];\n\n        auto it = m1.find(x1);\n        m1.erase(it);\n\n        it = m2.find(x2);\n        m2.erase(it);\n\n        auto it1 = m1.end();\n        auto it2 = m2.end();\n        it1--;\n        it2--;\nint val=max(*it1 - *m1.begin(),*it2 - *m2.begin());\n        \n        mini = min(mini, val);\n       \n        m1.insert(x1);\n        m2.insert(x2);\n    }\n\n    return mini;\n    }\n};"
}