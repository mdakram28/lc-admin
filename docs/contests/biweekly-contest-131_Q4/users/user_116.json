{
    "username": "Harsh1610",
    "submission": "#define ll int \n\nclass Solution {\npublic:\n   \n    void build(ll node,ll start,ll end,ll tree[],ll a[]) \n    {\n       if(start==end)\n       {    \n        tree[node]=a[start];\n       }\n       else\n       {\n        int mid=(start+end)/2;\n        build(2*node+1,start,mid,tree,a);\n        build(2*node+2,mid+1,end,tree,a);\n        tree[node]=max(tree[2*node+1],tree[2*node+2]);\n       }\n     }\n\n    void update(ll node,ll start,ll end,ll idx,ll val,ll tree[])\n    {\n\n        if(start==end)\n        {\n           tree[node]=val;\n        }\n\n        else\n       {\n          int mid=(start+end)/2;\n          if(idx>=start&&idx<=mid)\n          {    \n             update(2*node+1,start,mid,idx,val,tree);\n          }\n          else\n          {    \n           update(2*node+2,mid+1,end,idx,val,tree);\n          }\n         tree[node]=max(tree[2*node+1],tree[2*node+2]);\n       }\n    }\n    ll query(ll node,ll start,ll end,ll l,ll r,ll tree[])\n    {\n      if(l>end||start>r)\n      {     \n        return INT_MIN;\n      }\n      if(l<=start&&r>=end)\n      {    \n       return tree[node];\n      }\n    ll q1,q2;\n    ll mid=(start+end)/2;\n    q1=query(2*node+1,start,mid,l,r,tree);\n    q2=query(2*node+2,mid+1,end,l,r,tree);\n    return(max(q1,q2));\n    }\n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        \n        set<int> s;\n        ll tree[400005];\n        memset(tree,0,sizeof(tree));\n        int i,j,n=100000;\n        s.insert(0);\n        s.insert(400000);\n        vector<bool> ans;\n        for(auto x: queries)\n        {\n            if(x[0]==1)\n            {\n                auto p=s.lower_bound(x[1]);\n                update(0,0,n,*p,(*p-x[1]),tree);\n                p--;\n                update(0,0,n,x[1],(x[1]-(*p)),tree);\n                s.insert(x[1]);\n            }\n            else\n            {\n                auto p=s.lower_bound(x[1]);\n                p--;\n                ll mx=query(0,0,n,0,x[1],tree);\n                // cout<<mx<<\" \";\n                if(mx>=x[2]||(x[1]-(*p))>=x[2])\n                    ans.push_back(true);\n                else\n                    ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716650172.0
}