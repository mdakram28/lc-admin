{
    "username": "yuanwang2011",
    "submission": "typedef long long ll;\ntypedef vector<pair<int, int>> vpii;\ntypedef vector<pair<int, ll>> vpil;\ntypedef vector<pair<ll, ll>> vpll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<bool> vb;\ntypedef vector<vector<int>> vvi;\ntypedef vector<vector<ll>> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<int, ll> pil;\ntypedef pair<ll, ll> pll;\n\ntemplate <class T>\nvoid print_vec(vector<T> &v, string name = \"\") {\n    if (name != \"\") cout << name << endl;\n    for (auto a : v) cout << a << \" \";\n    cout << endl;\n}\n\nclass Solution {\npublic:\n    int calc_max_gap(int k, int a, int b) {\n        if (a > b) return calc_max_gap(k, b, a);\n        // cout << \"max gap info: \" << a << \" \" << b << \" \" << b << \" \" << k - a << endl;\n        return max(b, k - a);\n    }\n\n    int calc_cnt_below(vi &max_gaps, int gap) { // cnt below gap\n        int n = max_gaps.size(), start = 0, end = n - 1, mid;\n        while (start <= end) {\n            mid = start + (end - start) / 2;\n            if (max_gaps[mid] < gap) start = mid + 1;\n            else end = mid - 1;\n        }\n        // if (end == -1) return 0;\n        // return end; \n        return start;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size(), i;\n        vi max_gaps(n / 2);\n        for (i = 0; i < n / 2; ++i) {\n            max_gaps[i] = calc_max_gap(k, nums[i], nums[n - 1 - i]);\n        }\n        sort(max_gaps.begin(), max_gaps.end());\n        // print_vec(max_gaps, \"max_gaps\");\n\n        vi gap_cnt(k + 1, 0);\n        for (i = 0; i < n / 2; ++i) ++gap_cnt[abs(nums[i] - nums[n - 1 - i])];\n        // print_vec(gap_cnt, \"gap_cnt\");\n        vi gap_cnt_ge(k + 1, 0);\n        int cur = 0;\n        for (i = k; i >= 0; --i) {\n            cur += gap_cnt[i];\n            gap_cnt_ge[i] = cur;\n        }\n        // print_vec(gap_cnt_ge, \"gap_cnt_ge\");\n\n        int ans = INT_MAX;\n        for (i = 0; i < n / 2; ++i) {\n            int gap = abs(nums[i] - nums[n - 1 - i]);\n            int gap_cnt_below = calc_cnt_below(max_gaps, gap);\n            // cout << i << \" \" << gap << \" \" << gap_cnt[gap] << \" \" << gap_cnt_below << endl;\n            ans = min(ans, n / 2 - gap_cnt[gap] + gap_cnt_below);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488805",
    "subm_id": "1327433735"
}