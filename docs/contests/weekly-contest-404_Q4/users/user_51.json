{
    "username": "Adinfinityy",
    "submission": "class Solution {\n  pair<int,int> bfs(vector<vector<int>> & g,int s)\n  {\n      int n=g.size();\n      vector<int> d(n,-1);\n      d[s]=0;\n      queue<int> q;\n      q.push(s);\n      int md=0;\n      int ms=s;\n      while(!q.empty())\n      {\n          int no=q.front();\n          q.pop();\n          for(auto x:g[no])\n          {\n              if(d[x]==-1)\n              {\n                  d[x]=d[no]+1;\n                  q.push(x);\n                  if(d[x]>md)\n                  {\n                      md=d[x];\n                      ms=x;\n                  }\n              }\n          }\n      }\n      return {ms,md};\n  }\nint td(vector<vector<int>>& e, int n) {\n    vector<vector<int>> g(n);\n    for (auto ed:e) {\n        g[ed[0]].push_back(ed[1]);\n        g[ed[1]].push_back(ed[0]);\n    }\n    auto [fn1, u1] = bfs(g, 0);\n    auto [u2, d] = bfs(g, fn1);\n    return d;\n}\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n = e1.size() + 1, m = e2.size() + 1;\n    int d1 = td(e1, n);\n    int d2 = td(e2, m);\n    int r1 = (d1 + 1) / 2;\n    int r2 = (d2 + 1) / 2;\n    int res= max({d1, d2, r1 + r2 + 1});\n    return res;\n        \n    }\n};",
    "submit_ts": 1719716808.0
}