{
    "username": "ma5termind_nemo",
    "submission": "class TrieNode {\npublic:\n    vector<TrieNode*>next;\n    int end;\n    int minCost;\n    TrieNode():next(26,nullptr),end(0),minCost(INT_MAX){}\n};\nclass Trie {\npublic:\n    TrieNode* root;\n    Trie(){\n        root=new TrieNode();\n    }\n    void add(const string& word,int cost) {\n        TrieNode*curr=root;\n        for(char c:word) {\n            if(!curr->next[c-'a']) {\n                curr->next[c-'a']=new TrieNode();\n            }\n            curr=curr->next[c-'a'];\n        }\n        curr->minCost=min(cost,curr->minCost);\n        curr->end=1;\n    }\n    TrieNode* get() {\n        return root;\n    }\n};\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int t=target.size();\n        vector<int> minC(t+1,INT_MAX-1);\n        Trie trie;\n        minC[0]=0;\n        for(int i=0;i<words.size();i++) {\n            trie.add(words[i],costs[i]);\n        }\n        for(int i=0;i<t;i++) {\n            if(minC[i]==INT_MAX-1)continue;\n            TrieNode* node=trie.get();\n            for(int j=i;j<t;j++) {\n                char c=target[j];\n                if(!node->next[target[j]-'a'])break;\n                node=node->next[c-'a'];\n                if(node->end) {\n                    minC[j+1]=min(minC[j + 1],minC[i]+node->minCost);\n                }\n            }\n        }\n\n        return minC[t] == INT_MAX-1 ? -1 : minC[t];\n    }\n};",
    "submit_ts": "1720323415",
    "subm_id": "1312375001"
}