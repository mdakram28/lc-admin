{
    "username": "vidit987",
    "submission": "long x=1e12;\nclass TrieRoot {\npublic:\n    long pp;\n    map<char, TrieRoot*> child;\n    TrieRoot() : pp(x) {}\n};\n\nclass Trie {\npublic:\n    TrieRoot* root;\n    Trie() {\n        root = new TrieRoot();\n    }\n    void insertIntoTrie(long pp,string& v) {\n        TrieRoot* node = root;\n        for(int i=0;i<v.size();i++){\n            if (!node->child.count(v[i])) {\n                node->child[v[i]] = new TrieRoot();\n            }\n            node = node->child[v[i]];\n        }\n        if(node->pp>pp)node->pp=pp;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string k, vector<string>& v, vector<int>& c) {\n        Trie t;\n        int i,j,n = k.size(),m=v.size();\n        vector<long>dp(n+1,x);\n        dp[0]=0; \n        for (i = 0; i <m;i++){\n            long cost=c[i];\n            t.insertIntoTrie(cost,v[i]);\n        }\n        for(i = 0; i<n;i++) {\n            if (dp[i]!=x){    \n                TrieRoot* node = t.root;\n                for (j=i;j<n;j++) {\n                    if (node->child.count(k[j])){\n                        node = node->child[k[j]];\n                        if (node->pp != x && dp[j + 1]>dp[i] + node->pp) {\n                            dp[j + 1] =dp[i] + node->pp;\n                        }\n                        continue;\n                    }\n                    break;\n                }\n            } \n        }\n        long ans= dp[n];\n        if(ans==x)ans=-1;\n        return ans;\n    }\n};",
    "submit_ts": "1720321566",
    "subm_id": "1312326300"
}