{
    "username": "d11235813",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        unordered_map<long long, int> cache;\n        return helper(1, 0, false, k, cache);\n    }\n    int helper(long long ind, long long jump, bool prev_decrement, int target, auto& cache){\n        long long key = (ind << 30 | jump) << 5 | prev_decrement; \n        //std::cout << ind << \" \" << jump << \" \" << prev_decrement << \" \" << key << std::endl;\n        if(ind > target+2){\n            return 0;\n        }\n        if(ind < 0){\n            return 0;\n        }\n        if(cache.find(key) != cache.end()){\n            return cache[key];\n        }\n        int down = 0;\n        if(!prev_decrement){\n            down = helper(ind-1, jump, true, target, cache);\n        }\n        int up = helper(ind + std::pow(2, jump), jump+1, false, target, cache);\n        auto ans = down + up + (ind == target);\n       cache[key] = ans;\n            return ans;\n    }\n};",
    "submit_ts": 1716088579.0
}