{
    "username": "user0503XG",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long h = 1, v = 1;\n        int i = 0, j = 0;\n        long long cost = 0;\n\n        while (i < m - 1 || j < n - 1) {\n            if (i == m - 1 || (j < n - 1 && verticalCut[j] >= horizontalCut[i])) {\n                // Make a vertical cut\n                cost += static_cast<long long>(verticalCut[j++]) * h;\n                v++;\n            } else {\n                // Make a horizontal cut\n                cost += static_cast<long long>(horizontalCut[i++]) * v;\n                h++;\n            }\n        }\n\n        return cost;\n    }\n};\n",
    "submit_ts": "1720925176",
    "subm_id": "1320245578"
}