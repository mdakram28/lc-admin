{
    "username": "einstein-b",
    "submission": "const int N = 100010;\nint x[N], y[N];\nint n;\nconst int inf = 0x3f3f3f3f;\nvector<int> xx, yy;\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        n = points.size();\n        for(int i = 1; i <= n; i++){\n            x[i] = points[i-1][0] + points[i-1][1];\n            y[i] = points[i-1][0] - points[i-1][1];\n        }\n        xx.clear();\n        yy.clear();\n        for(int i = 1; i <= n; i++){\n            xx.push_back(x[i]);\n            yy.push_back(y[i]);\n        }\n        sort(xx.begin(), xx.end());\n        sort(yy.begin(), yy.end());\n        int ans = inf;\n        for(int i = 1; i <= n; i++){\n            int xxx = lower_bound(xx.begin(), xx.end(), x[i]) - xx.begin();\n            int yyy = lower_bound(yy.begin(), yy.end(), y[i]) - yy.begin();\n            int tmp = 0;\n            if(xxx == 0){\n                tmp = max(tmp, xx[n-1] - xx[1]);\n            }\n            else if(xxx == n - 1){\n                tmp = max(tmp, xx[n-2] - xx[0]);\n            }\n            else{\n                tmp = max(tmp, xx[n-1] - xx[0]);\n            }\n            //cout << i << \" \" << tmp << \"\\n\";\n            if(yyy == 0){\n                tmp = max(tmp, yy[n-1] - yy[1]);\n            }\n            else if(yyy == n - 1){\n                tmp = max(tmp, yy[n-2] - yy[0]);\n            }\n            else{\n                tmp = max(tmp, yy[n-1] - yy[0]);\n            }\n            ans = min(ans, tmp);\n        }\n        return ans;\n    }\n};\n"
}