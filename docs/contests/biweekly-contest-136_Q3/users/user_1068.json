{
    "username": "bobosolomon2",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        if (m * n < 4){\n            int count = 0;\n            for (int i = 0; i < grid.length; i++){\n                for (int j = 0; j < grid[0].length; j++){\n                    if (grid[i][j] == 1) count++;\n                }\n            }\n            return count;\n        }\n\n        int count1 = 0;\n        int ret = 0;\n        for (int top = 0, bottom = m - 1; top < bottom; top++, bottom--){\n            int left = 0;\n            int right = n - 1;\n            while (left < right){\n                int count0 = 0;\n                if (grid[top][left] == 0) count0++;\n                if (grid[top][right] == 0) count0++;\n                if (grid[bottom][left] == 0) count0++;\n                if (grid[bottom][right] == 0) count0++;\n                if(count0 == 4){\n                    left++;\n                    right--;\n                    continue;\n                }else if (count0 == 3){\n                    ret += 1;\n                    left++;\n                    right--;\n                    continue;\n                }else if (count0 == 2){\n                    ret += 2;\n                    left++;\n                    right--;\n                    continue;\n                }else if (count0 == 1){\n                    ret += 1;\n                    left++;\n                    right--;\n                    continue;\n                }else{\n                    left++;\n                    right--;\n                    continue;\n                }\n            }\n        }\n        System.out.println(\"ret \" + ret);\n        int zero = 0;\n        int diff = 0;\n        int one = 0;\n        // \u6700\u4e2d\u95f4\u4e00\u884c\u64cd\u4f5c\n        if (m % 2 != 0){\n            int r = m / 2;\n            // System.out.println(\"r \" + r);\n            int left = 0;\n            int right = n - 1;\n            while (left < right){\n                if (grid[r][left] == grid[r][right]){\n                    if (grid[r][left] == 0) zero+=2;\n                    else one+=2;\n                    left++;\n                    right--;\n                }else{\n                    diff++;\n                    left++;\n                    right--;\n                }\n            }\n        }\n\n        if (n % 2 != 0){\n            int c = n / 2;\n            int top = 0;\n            int bottom = m - 1;\n            while (top < bottom){\n                if (grid[top][c] == grid[bottom][c]){\n                    if (grid[top][c] == 0) zero += 2;\n                    else one += 2;\n                    top++;\n                    bottom--;\n                    continue;\n                }else{\n                    diff++;\n                    top++;\n                    bottom--;\n                    continue;\n                }\n            }\n        }\n        // System.out.println(\"diff \" + diff);\n        ret += diff;\n        // System.out.println(\"ret2 \" + ret);\n        int a = 0;\n        if(m % 2 != 0 && n % 2 != 0){\n            if (grid[m / 2][n / 2] == 1) a = 1;\n        }\n\n        if (one % 4 == 0){\n            if (a == 1) return ret + 1;\n            return ret;\n        }else{\n            // 2\n            if (a == 0){\n                // \u4e2d\u95f4\u90a3\u4e2a\u662f0\uff0c\u6240\u4ee5\u8fd8\u9700\u89812\u4e2a1\n                if(diff >= 1){\n                    return ret;\n                }else{\n                    return ret + 2;\n                }\n            }else{\n                // \u73b0\u5728 one \u662f\u5bf94\u53d6\u4f59 == 3\n                if (diff >= 1){\n                    return ret + 1;\n                }else{\n                    return ret + 3;\n                }\n            }\n        }\n    }\n}",
    "submit_ts": "1722698718",
    "subm_id": "552272188"
}