{
    "username": "coderman2004",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        int n = edges1.length + 1;\n        int m = edges2.length + 1;\n\n        List<List<Integer>> tree1 = createAdjList(edges1, n);\n        List<List<Integer>> tree2 = createAdjList(edges2, m);\n\n        int dia1 = calculateDiameter(tree1);\n        int dia2 = calculateDiameter(tree2);\n\n        int minDia = Math.max(dia1, dia2);\n        int half1 = (dia1 + 1) / 2;\n        int half2 = (dia2 + 1) / 2;\n\n        minDia = Math.max(minDia, half1 + half2 + 1);\n\n        return minDia;\n    }\n\n    private List<List<Integer>> createAdjList(int[][] edges, int size) {\n        List<List<Integer>> adj = new ArrayList<>(size);\n        for (int i = 0; i < size; i++) {\n            adj.add(new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            adj.get(edge[0]).add(edge[1]);\n            adj.get(edge[1]).add(edge[0]);\n        }\n        return adj;\n    }\n\n    private int calculateDiameter(List<List<Integer>> adj) {\n        int[] farNode = {0};\n        int dist1 = dfs(adj, 0, farNode);\n        int dist2 = dfs(adj, farNode[0], farNode);\n        return dist2;\n    }\n\n    private int dfs(List<List<Integer>> adj, int start, int[] farthestNode) {\n        int size = adj.size();\n        int[] dist = new int[size];\n        Arrays.fill(dist, -1);\n\n        class DfsVisit {\n            void visit(int node, int d) {\n                dist[node] = d;\n                if (d > dist[farthestNode[0]]) {\n                    farthestNode[0] = node;\n                }\n                for (int neighbor : adj.get(node)) {\n                    if (dist[neighbor] == -1) {\n                        visit(neighbor, d + 1);\n                    }\n                }\n            }\n        }\n\n        DfsVisit dfsVisit = new DfsVisit();\n        dfsVisit.visit(start, 0);\n\n        return dist[farthestNode[0]];\n    }\n}\n",
    "submit_ts": "1719715841",
    "subm_id": "1304347768"
}