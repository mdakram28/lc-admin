{
    "username": "nickname",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public long[] countKConstraintSubstrings(String s, int k, int[][] queries) {\n        int n = s.length();\n        int qn = queries.length;\n        long[] res = new long[qn];\n\n        int[][] c = new int[n+1][2];\n\n        int[] left = new int[n];\n        int curLeft=0;\n        for (int i = 0; i < n; i++) {\n            int v = s.charAt(i) - '0';\n            c[i+1] = c[i].clone();\n            c[i+1][v]++;\n\n            while(c[i+1][0]-c[curLeft][0]>k && c[i+1][1]-c[curLeft][1]>k){\n                ++curLeft;\n            }\n            // \u8fd9\u91cc\u4fee\u6b63\u4e86\u504f\u5dee \u5c31\u662f curleft~i\u90fd\u53ef\u4ee5\n            left[i]=curLeft;\n        }\n\n        //System.out.println(Arrays.toString(left));\n        long[]preLeft = new long[n+1];\n        for(int i=0;i<n;i++){\n            preLeft[i+1] = preLeft[i] +left[i];\n        }\n\n        for (int i = 0; i < qn; ++i) {\n            int l = queries[i][0];\n            int r = queries[i][1];\n            int len=r-l+1;\n            res[i]= (long) (len + 1) * len /2;\n            if(len<=k || left[r]<=l){\n                continue;\n            }\n\n            // \u7b2c\u4e00\u4e2a\u5927\u4e8el\u7684\n            int id = lb(left, l,r);\n//            for(int j=r;left[j]>l;--j){\n//                res[i] -= left[j]-l;\n//            }\n\n            res[i] += (long)(r-id+1)*l - (preLeft[r+1]-preLeft[id]);\n        }\n\n\n        return res;\n    }\n\n    private int lb(int[] left, int l, int r) {\n        int i=l, j=r;\n        while(i<j){\n            int mid = (i+j)/2;\n            if(left[mid]<=l){\n                i=mid+1;\n            }else{\n                j=mid;\n            }\n        }\n\n        return i;\n    }\n\n}",
    "submit_ts": "1723951545",
    "subm_id": "556406130"
}