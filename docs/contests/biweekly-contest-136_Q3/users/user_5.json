{
    "username": "cjycleaner",
    "submission": "using namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<double> vd;\ntypedef vector<string> vs;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef vector<vvll> vvvll;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef vector<pll> vpll;\ntypedef vector<vpll> vvpll;\ntypedef vector<pdd> vpdd;\ntypedef vector<vd> vvd;\n#define yn(ans) printf(\"%s\\n\", (ans)?\"Yes\":\"No\");\n#define YN(ans) printf(\"%s\\n\", (ans)?\"YES\":\"NO\");\ntemplate<class T> bool chmax(T &a, T b) {\n\tif (a >= b) return false;\n\ta = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n\tif (a <= b) return false;\n\ta = b; return true;\n}\n#define FOR(i, s, e, t) for ((i) = (s); (i) < (e); (i) += (t)) \n#define REP(i, e) for (int i = 0; i < (e); ++i) \n#define REP1(i, s, e) for (int i = (s); i < (e); ++i)\n#define RREP(i, e) for (int i = (e); i >= 0; --i)\n#define RREP1(i, e, s) for (int i = (e); i >= (s); --i)\n#define all(v) v.begin(), v.end()\n#define pb push_back\n#define qb pop_back\n#define pf push_front\n#define qf pop_front\n#define maxe max_element\n#define mine min_element\nll inf = 1e18;\n#define DEBUG printf(\"%d\\n\", __LINE__); fflush(stdout);\ntemplate<class T> void print(vector<T> &v, bool withSize = false) {\n\tif (withSize) cout << v.size() << endl;\n\tREP(i, v.size()) cout << v[i] << \" \"; \n\tcout << endl;\n}\nmt19937_64 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int N = grid.size(), M = grid[0].size();\n        int ans = 0;\n        int c0 = 0, c1 = 0, c2 = 0;\n        REP(i, (N + 1) / 2) {\n            REP(j, (M + 1) / 2) {\n                int cnt = 0, cnt2 = 0;\n                cnt++, cnt2 += grid[i][j];\n                if (N - 1 - i != i) cnt++, cnt2 += grid[N - 1 - i][j];\n                if (M - 1 - j != j) cnt++, cnt2 += grid[i][M - 1 - j];\n                if (N - 1 - i != i && M - 1 - j != j) cnt++, cnt2 += grid[N - 1 - i][M - 1 - j];\n                //printf(\"%d %d %d %d\\n\", i, j, cnt, cnt2);\n                if (cnt == 2) {\n                    if (cnt2 == 0) c0++; else if (cnt2 == 1) c1++; else c2++;\n                }\n                else if (cnt == 4) ans += min(cnt2, 4 - cnt2);\n                else if (cnt == 1) ans += cnt2;\n            }\n        }\n        \n        if (c1 > 0) ans += c1;\n        else if (c2 % 2 == 1) ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722695982",
    "subm_id": "552258138"
}