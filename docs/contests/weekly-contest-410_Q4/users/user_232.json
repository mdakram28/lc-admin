{
    "username": "feetmode",
    "submission": "typedef long long ll;\ntypedef vector<pair<int, int>> vpii;\ntypedef vector<pair<int, ll>> vpil;\ntypedef vector<pair<ll, ll>> vpll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<bool> vb;\ntypedef vector<vector<int>> vvi;\ntypedef vector<vector<ll>> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<int, ll> pil;\ntypedef pair<ll, ll> pll;\n\ntemplate <class T>\nvoid print_vec(vector<T> &v, string name = \"\") {\n    if (name != \"\") cout << name << endl;\n    for (auto a : v) cout << a << \" \";\n    cout << endl;\n}\n\ntemplate <class T>\nvoid print_grid(vector<vector<T>> &grid, string name = \"\") {\n    if (name != \"\") cout << name << endl;\n    int n = grid.size(), i;\n    for (i = 0; i < n; ++i){\n        for (auto a : grid[i]) cout << a << \" \";\n        cout << endl;\n    }\n}\n\nclass Solution {\n    const int mod = 1e9 + 7;\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size(), i, j, diff = 0;\n        for (i = 1; i < n; ++i) {\n            if (nums[i] < diff) return 0;\n            nums[i] -= diff;\n            if (nums[i] > nums[i - 1]) {\n                int gap = nums[i] - nums[i - 1];\n                nums[i] -= gap;\n                diff += gap;\n            }\n        }\n        // print_vec(nums, \"nums\");\n\n        int m = nums[0];\n        // if (m == 0) return 1;\n        vvi dp(n, vi(m + 1, 0));\n        for (j = 0; j <= m; ++j) dp[0][j] = j + 1;\n        for (i = 0; i < n; ++i) dp[i][0] = 1;\n        for (i = 1; i < n; ++i) {\n            for (j = 1; j <= nums[i]; ++j) {\n                dp[i][j] = (dp[i][j - 1] + dp[i - 1][j]) % mod;\n            }\n        }\n        // print_grid(dp, \"dp\");\n        return dp[n - 1][nums[n - 1]];\n    }\n};",
    "submit_ts": "1723346167",
    "subm_id": "1351571700"
}