{
    "username": "seedjyh",
    "submission": "\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if (k == 1 || k == 3 || k == 9) {\n            return string(n, '9');\n        }\n        if (k == 2) {\n            if (n == 1) return \"8\";\n            return string(\"8\") + string(n - 2, '9') + string(\"8\");\n        }\n        if (k == 4) {\n            if (n == 1) return \"8\";\n            if (n == 2) return \"88\";\n            if (n == 3) return \"888\";\n            return string(\"88\") + string(n - 4, '9') + string(\"88\");\n        }\n        if (k == 5) {\n            if (n == 1) return \"5\";\n            return string(\"5\") + string(n - 2, '9') + string(\"5\");\n        }\n        if (k == 6) {\n            if (n == 1) return \"6\";\n            if (n == 2) return \"66\";\n            string ret = string(\"8\") + string(n - 2, '9') + string(\"8\");\n            int digitSum = 0;\n            for (auto c : ret) {\n                digitSum += c - '0';\n            }\n            if (digitSum % 3 > 0) {\n                if (n & 1) {\n                    ret[n / 2] -= digitSum % 3;\n                } else {\n                    ret[n / 2 - 1] -= 3 - digitSum % 3;\n                    ret[n / 2] -= 3 - digitSum % 3;\n                }\n            }\n            return ret;\n        }\n        if (k == 8) {\n            if (n <= 6) return string(n, '8');\n            return string(\"888\") + string(n - 6, '9') + string(\"888\");\n        }\n        if (k == 7) {\n            if (n == 1) return \"7\";\n            if (n == 2) return \"77\";\n            string ret = string(n, '9');\n            int digitSum = 0;\n            for (int i = 0; i < n; i++) {\n                digitSum = (digitSum * 10 + 9) % 7;\n            }\n            if (n & 1) {\n                int each = divide7(1, n / 2);\n                int diff = 0;\n                while (each * diff % 7 != digitSum) {\n                    diff++;\n                }\n                ret[n / 2] -= diff;\n            } else {\n                int each = divide7(11, n / 2 - 1);\n                int diff = 0;\n                while (each * diff % 7 != digitSum) {\n                    diff++;\n                }\n                ret[n / 2 - 1] -= diff;\n                ret[n / 2] -= diff;\n            }\n            return ret;\n        }\n        return \"\";\n    }\n    int divide7(int base, int tens) {\n        int ret = base % 7;\n        for (int i = 0; i < tens; i++) {\n            ret = (ret * 10) % 7;\n        }\n        return ret;\n    }\n};\n",
    "submit_ts": "1723951880",
    "subm_id": "556408246"
}