{
    "username": "Ice with Fire",
    "submission": "class Solution {\n    fun maximumValueSum(board: Array<IntArray>): Long {\n        var sum = 0L\n        var maxSum = Long.MIN_VALUE\n        \n        val m = board.size \n        val n = board.first().size \n        var cnt = 0\n\n        val matrix = Array(m){ i ->\n            val indices = (0..<n).sortedBy{ board[i][it] }\n            val list = mutableListOf<Int>()\n            for(j in max(0, n-3)..<n){\n                list += indices[j]\n            }\n            list\n        }\n\n        fun dfs(i: Int, forbiddenJ1: Int, forbiddenJ2: Int){\n            if(cnt == 3 || i == m) return \n        \n            for(j in matrix[i]){\n                if(j == forbiddenJ1 || j == forbiddenJ2) continue\n\n                cnt++\n                sum += board[i][j]\n                if(cnt == 3)\n                    maxSum = max(maxSum, sum)\n                \n                if(forbiddenJ1 == -1)\n                    dfs(i+1, j, forbiddenJ2)\n                else if(forbiddenJ2 == -1)\n                    dfs(i+1, forbiddenJ1, j)\n                \n                cnt--\n                sum -= board[i][j]\n            }\n\n            dfs(i+1, forbiddenJ1, forbiddenJ2)\n        }\n        \n        dfs(0, -1, -1)\n        return maxSum\n    }\n}",
    "submit_ts": "1723909307",
    "subm_id": "556335552"
}