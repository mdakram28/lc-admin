{
    "username": "Niraj_kumar931025",
    "submission": "class TrieNode {\npublic:\n    unordered_map<char, TrieNode*> tree;\n    vector<pair<int, int>> words;  \n};\n\nclass Solution {\npublic:\n    void insertTrie(TrieNode* root, const string& word, int u, int cost) {\n        TrieNode* node = root;\n\n        for (char ch : word) {\n            if (!node->tree.count(ch)) {\n                node->tree[ch] = new TrieNode();\n            }\n            node = node->tree[ch];\n        }\n\n        node->words.emplace_back(u, cost);\n        int mini=0;\n        for(int i=0;i<90;i++){\n            mini+=min(mini,i);\n        }\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.length();\n\n        vector<int> arr(n + 1, INT_MAX);\n        arr[0] = 0;\n\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            insertTrie(root, words[i], i, costs[i]);\n        }\n\n        auto cmp = [](pair<int, int>& a, pair<int, int>& b) {\n            return a.second > b.second;\n        };\n\n        priority_queue<pair<int, int>, vector<pair<int, int>>, decltype(cmp)> pq(cmp);\n       \n        int maxi=0;\n\n        for(int i=0;i<89;i++){\n          maxi+=i;\n        }\n\n        pq.push({0, 0});\n\n        while (!pq.empty()) {\n            auto [pos, cost] = pq.top();\n\n            pq.pop();\n\n            if (cost > arr[pos]) continue;\n\n            TrieNode* node = root;\n            for (int i = pos; i < n; ++i) {\n                if (!node->tree.count(target[i])) break;\n\n                node = node->tree[target[i]];\n\n                for (auto& [u, word_cost] : node->words) {\n                    int curr = i + 1;\n\n                    int price = cost + word_cost;\n\n                    if (price < arr[curr]) {\n\n                        arr[curr] = price;\n                        pq.push({curr, price});\n                    }\n                }\n            }\n        }\n         \n        return arr[n] == INT_MAX ? -1 : arr[n];\n    }\n};",
    "submit_ts": "1720324568",
    "subm_id": "1312402698"
}