{
    "username": "Rejur",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n    #define inf 0x3f3f3f3f\n\n    static const int N = 300000;\n    struct edge {\n        ll to, next, flow, dis;\n    } a[N];\n    int head[N], num = 0, vis[N];\n    ll n, m, s, t, u, v, f, w, dis[N], pre[N], last[N], flow[N], maxflow,\n        mincost;\n\n    void add(int from, int to, int flow, int dis) {\n        a[num].next = head[from];\n        a[num].to = to;\n        a[num].flow = flow;\n        a[num].dis = dis;\n        head[from] = num++;\n        a[num].next = head[to];\n        a[num].to = from;\n        a[num].flow = 0;\n        a[num].dis = -dis;\n        head[to] = num++;\n    }\n    int spfa(int s, int t)\n    {\n        memset(dis, inf, sizeof(dis));\n        memset(flow, inf, sizeof(flow));\n        memset(vis, 0, sizeof(vis));\n        queue<int> q;\n        q.push(s);\n        vis[s] = 1;\n        dis[s] = 0;\n        pre[t] = -1;\n        while (!q.empty()) {\n            int now = q.front();\n            q.pop();\n            vis[now] = 0;\n            for (int i = head[now]; i != -1; i = a[i].next) {\n                if (a[i].flow > 0 && dis[a[i].to] > dis[now] + a[i].dis) {\n                    dis[a[i].to] = dis[now] + a[i].dis;\n                    pre[a[i].to] = now;\n                    last[a[i].to] = i;\n                    flow[a[i].to] = min(flow[now], a[i].flow);\n                    if (vis[a[i].to] == 0) {\n                        vis[a[i].to] = 1;\n                        q.push(a[i].to);\n                    }\n                }\n            }\n        }\n        return pre[t] != -1;\n    }\n\n    void MCMF()\n    {\n        while (spfa(s, t)) {\n            int now = t;\n            maxflow += flow[t];\n            mincost += flow[t] * dis[t];\n            while (now != s) {\n                a[last[now]].flow -= flow[t];\n                a[last[now] ^ 1].flow += flow[t];\n                now = pre[now];\n            }\n        }\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        num = 0;\n        memset(head, -1, sizeof(head));\n        int n = board.size(), m = board[0].size();\n        s = 0, t = n + m + 5;\n        add(0, n + m + 2, 3, 0);\n        for (int j = 0; j < m; j++) {\n            add(j + n + 1, t, 1, 0);\n        }\n        for (int i = 0; i < n; i++) {\n            add(n + m + 2, i + 1, 1, 0);\n            for (int j = 0; j < m; j++) {\n                add(i + 1, j + n + 1, 1, -board[i][j]);\n            }\n        }\n        maxflow = 0, mincost = 0;\n        MCMF();\n        return -mincost;\n    }\n};",
    "submit_ts": "1723909525",
    "subm_id": "556336701"
}