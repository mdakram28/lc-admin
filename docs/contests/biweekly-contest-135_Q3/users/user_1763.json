{
    "username": "Mr_Looser",
    "submission": "class Solution{\n    func minChanges(_ nums:[Int],_ k:Int)->Int{\n        var a=[Int:[Int]]()\n        var b=[Int]()\n        let c=nums.count\n        for d in 0..<c/2{\n            let e=nums[d]\n            let f=nums[c-d-1]\n            let g=abs(e-f)\n            let h=max(e,f,k-e,k-f)\n            if a[g] != nil{\n                a[g]!.append(h)\n            }else{\n                a[g]=[h]\n            }\n            b.append(h)\n        }\n        var i=c\n        b.sort()\n        for (j,k)in a{\n            var l=b.partitionPoint{$0<j}*2+(c/2-b.partitionPoint{$0<j})\n            for m in k{\n                if m<j{\n                    l-=2\n                }else{\n                    l-=1\n                }\n            }\n            i=min(i,l)\n        }\n        return i\n    }\n}\n\nextension Array{\n    func partitionPoint(_ n:(Element)->Bool)->Int{\n        var o=0\n        var p=self.count\n        while o<p{\n            let q=(o+p)/2\n            if n(self[q]){\n                o=q+1\n            }else{\n                p=q\n            }\n        }\n        return o\n    }\n}\n",
    "submit_ts": "1721489201",
    "subm_id": "1327446116"
}