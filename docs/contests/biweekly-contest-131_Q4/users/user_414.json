{
    "username": "sad-hodgkin23h",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        auto ans = vector<bool>();\n        \n        int mx = 0;\n        \n        for(auto q:queries) {\n            mx = max(mx,q[1]);\n            if(q.size()==3) {\n                mx = max(mx,q[2]);\n            }\n        }\n        mx = mx * 2 + 1;\n        \n        auto range = vector<int>((mx+1)<<2,0);\n        auto lazy = vector<int>((mx+1)<<2,0);\n        \n        function<void(int)> pushdown = [&](int rt){\n            if(lazy[rt]!=0) {\n                range[rt<<1] += lazy[rt];\n                lazy[rt<<1] += lazy[rt];\n                \n                range[rt<<1|1] += lazy[rt];\n                lazy[rt<<1|1] += lazy[rt];\n                \n                lazy[rt] = 0;\n            }\n        };\n        \n        function<void(int)> pushup = [&](int rt){\n            range[rt] = max(range[rt<<1],range[rt<<1|1]);\n        };\n        \n        function<void(int,int,int,int,int,int)> update = [&](int rt,int ld,int rd,int l,int r,int val){\n            if(l>r) return;\n            if(l <= ld && rd <= r) {\n                range[rt] += val;\n                lazy[rt] += val;\n                return;\n            }\n            pushdown(rt);\n            int mid = (ld+rd)>>1;\n            if(l<=mid) update(rt<<1,ld,mid,l,r,val);\n            if(r>mid) update(rt<<1|1,mid+1,rd,l,r,val);\n            pushup(rt);\n        };\n        \n        function<int(int,int,int,int,int)> query = [&](int rt,int ld,int rd,int l,int r){\n            if(l>r) return 0;\n            if(l <= ld && rd <= r) {\n                return range[rt];\n            }\n            pushdown(rt);\n            int mid = (ld+rd)>>1;\n            \n            int res = 0;\n            if(l<=mid) res = max(res,query(rt<<1,ld,mid,l,r));\n            if(r>mid) res = max(res,query(rt<<1|1,mid+1,rd,l,r));\n            pushup(rt);\n            return res;\n        };\n        \n        auto xx = set<int>{0,mx};\n        \n        for(int i=1; i<=mx; i++) {\n            update(1,1,mx,i,i,i);\n        }\n        \n        for(auto& q:queries) {\n            if(q.size()==2) {\n                int x = q[1];\n                \n                auto it = xx.upper_bound(x);\n                int y = *it;\n                it--;\n                int yy = *it;\n                \n                update(1,1,mx,x+1,y,-(x-yy));\n                \n                xx.insert(x);\n                \n            } else {\n                int x = q[1], sz = q[2];\n                auto it = xx.upper_bound(x);\n                it--;\n                auto y = *it;\n                \n                if(x-y>=sz) {\n                    ans.push_back(true);\n                } else {\n                    int q = query(1,1,mx,1,y);\n                    ans.push_back(q>=sz);\n                }\n            }\n        }\n        \n        \n        return ans;\n    }\n};",
    "submit_ts": 1716652504.0
}