{
    "username": "sachanharshit",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& A, vector<int>& B) {\n        #define int long long \n        sort(A.begin(), A.end(), greater<int>());\n        sort(B.begin(), B.end(), greater<int>());\n        priority_queue<int, vector<int>, greater<int>> pq;\n        int i = 0, j = 0;\n        int h = 1, v = 1;\n        int sum = 0;\n        while (i < m - 1 && j < n - 1) {\n            if (A[i] >= B[j]) {\n                sum += A[i] * v;\n                h++;\n                i++;\n            } else {\n                sum += B[j] * h;\n                v++;\n                j++;\n            }\n        }\n        while (i < m - 1) {\n            sum += A[i] * v;\n            i++;\n        }\n        while (j < n - 1) {\n            sum += B[j] * h;\n            j++;\n        }\n        return sum;\n        #undef int\n    }\n};",
    "submit_ts": "1720925493",
    "subm_id": "1320256580"
}