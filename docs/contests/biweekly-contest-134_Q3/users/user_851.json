{
    "username": "Sauram228",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n=colors.size();\n        vector<int> xors(n,0);\n        for(int i=0;i<n;i++){\n            xors[i]=colors[i]^colors[(i+1)%n];\n        }\n        int startIndex=-1;\n        for(int i=0;i<n;i++){\n            if(xors[i]==0){\n                startIndex=i;\n                break;\n            }\n        }\n        if(startIndex==-1) return n;\n        int currentCount=0;\n        int answer=0;\n        for(int i=(startIndex+1)%n;i!=startIndex;i=(i+1)%n){\n            if(xors[i]==0){\n                answer+=max(currentCount-k+2,0);\n                currentCount=0;\n            }else{\n                currentCount++;\n            }\n        }\n        // cout<<currentCount<<endl;\n        answer+=max(currentCount-k+2,0);\n        return answer;\n    }\n};",
    "submit_ts": "1720278527",
    "subm_id": "1311713035"
}