{
    "username": "eyangch",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if(k == 1 || k == 3 || k == 9){\n            return string(n, '9');\n        }\n        if(k == 2){\n            if(n == 1 || n == 2){\n                return string(n, '8');\n            }\n            return \"8\" + string(n-2, '9') + \"8\";\n        }\n        if(k == 4){\n            if(n <= 4){\n                return string(n, '8');\n            }\n            return \"88\" + string(n-4, '9') + \"88\";\n        }\n        if(k == 5){\n            if(n <= 2){\n                return string(n, '5');\n            }\n            return \"5\" + string(n-2, '9') + \"5\";\n        }\n        if(k == 8){\n            if(n <= 6){\n                return string(n, '8');\n            }\n            return \"888\" + string(n-6, '9') + \"888\";\n        }\n        if(k == 6){\n            if(n <= 2){\n                return string(n, '6');\n            }\n            if(n % 2 == 0){\n                return \"8\" + string(n/2-2, '9') + \"77\" + string(n/2-2, '9') + \"8\";\n            }\n            return \"8\" + string(n/2-1, '9') + \"8\" + string(n/2-1, '9') + \"8\";\n        }\n        if(k == 7){\n            if(n <= 2){\n                return string(n, '7');\n            }\n            int arr[] = {1, 3, 2, 6, 4, 5};\n            int slen = (n-1)/2;\n            string res = string(n, '0');\n            int cur = 0;\n            for(int i = 0; i < slen; i++){\n                res[i] = '9';\n                cur += 9 * arr[i%6];\n                int z = n-1-i;\n                res[z] = '9';\n                cur += 9 * arr[z%6];\n            }\n            cur %= 7;\n            int mp = arr[(n/2) % 6];\n            if(n % 2 == 0){\n                mp = (arr[(n/2-1) % 6] + mp) % 7;\n            }\n            int nb = -1;\n            for(int i = 9; i >= 0; i--){\n                if((cur + mp * i) % 7 == 0){\n                    nb = i;\n                    break;\n                }\n            }\n            assert(nb != -1);\n            res[n/2] = '0'+nb;\n            res[(n-1)/2] = '0'+nb;\n            return res;\n        }\n        return \"goober\";\n    }\n};",
    "submit_ts": "1723951007",
    "subm_id": "1359760853"
}