{
    "username": "Vraj109",
    "submission": "#define ll long long int\n#define pb push_back\n#define f(i, j, k) for (int i = j; i < k; i++)\n#define rev(i, j, k) for (int i = j; i >= k; i--)\n#define all(x) (x).begin(), (x).end()\n\nconst int MOD = 1e9 + 7;\ntypedef vector<int> vi;\ntypedef vector<pair<int, int>> vp;\ntypedef priority_queue<int> pq;\nconst int N = 2e5 + 1;\nclass Solution {\npublic:\n    bool dfs(vector<int>& arr,vector<int>& dp,int t){\n        if(t < 0) return false;\n        if(t == 0) return true;\n        if(dp[t] != -1) return dp[t];\n        int i = 0,j = arr.size()-1;\n        int ans = -1;\n        while(i <= j){\n            int mid = i + (j-i)/2;\n            if(arr[mid] <= t){\n                ans = mid;\n                i = mid + 1;\n            }\n            else j = mid-1;\n        }\n        if(ans == -1) return dp[t] = 0;\n        int req = (t/2)+1;\n        rev(i,ans,0){\n            if(arr[i] < req) break;\n            if(arr[i])\n            if(dfs(arr,dp,t-arr[i])) return dp[t] = 1;\n        }\n        return dp[t] = false;\n    }\n    int maxTotalReward(vector<int>& nums) {\n        map<int,int> mp;\n        for(auto a:nums) mp[a]++;\n        vector<int> arr;\n        for(auto it:mp) arr.push_back(it.first);\n        int n = arr.size();\n        vector<int> dp(arr[n-1]+1,-1);\n        for(int i = arr[n-1]-1;i>= 0;i--){\n            if(dfs(arr,dp,i)){\n                return arr[n-1]+i;\n            }\n        }\n        return arr[n-1];\n    }\n};",
    "submit_ts": 1717904529.0
}