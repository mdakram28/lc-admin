{
    "username": "Ferrriccc",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int ans = 0;\n        bool poss = 0;\n        for (int i = 0; n - i - 1 > i; ++i) {\n            int l = 0, r = m - 1;\n            while (l < r) {\n                int c0 = 0, c1 = 0;\n                c0 += (grid[i][l] == 0);\n                c1 += (grid[i][l] == 1);\n                c0 += (grid[n - 1 - i][l] == 0);\n                c1 += (grid[n - 1 - i][l] == 1);\n                c0 += (grid[i][r] == 0);\n                c1 += (grid[i][r] == 1);\n                c0 += (grid[n - 1 - i][r] == 0);\n                c1 += (grid[n - 1 - i][r] == 1);\n                ++l, --r;\n                ans += min(c0, c1);\n            }\n        }\n        // cout << ans << endl;\n        int cnt = 0;\n        if (m % 2 == 1) {\n            for (int i = 0; n - i - 1 > i; ++i) {\n                cnt += (grid[i][m / 2] == 1 && grid[n - 1 - i][m / 2] == 1);\n                ans += (grid[i][m / 2] != grid[n - 1 - i][m / 2]);\n                poss |= (grid[i][m / 2] != grid[n - 1 - i][m / 2]);\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; m - i - 1 > i; ++i) {\n                cnt += (grid[n / 2][i] == 1 && grid[n / 2][m - i - 1] == 1);\n                ans += (grid[n / 2][i] != grid[n / 2][m - i - 1]);\n                poss |= (grid[n / 2][i] != grid[n / 2][m - i - 1]);\n            }\n        }\n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) {\n            ++ans;\n        }\n\n        return ans + 2 * (cnt % 2 == 1 && !poss);\n    }\n};",
    "submit_ts": "1722697452",
    "subm_id": "1343147084"
}