{
    "username": "Samyak Jain",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        \n        vector<long long> v2(n+1,0);\n        int c1 = 0;\n        for(int i = 0; i<n; i++)\n        {\n            if(s[i] == '1')\n            {\n                c1++;\n            }\n            v2[i] = c1;\n        }\n        \n        int j = 0;\n        vector<long long> v1(n+1,0);\n        \n        \n        for(int i = 0; i<n; i++)\n        {\n            // cout<<i<<endl;\n            while(j < n)\n            {\n                int ct1 = v2[j];\n                if(i != 0)\n                {\n                    ct1 -= v2[i-1];\n                }\n                int ct2 = j-i+1;\n                ct2 -= ct1;\n                // cout<<ct1<<\" \"<<ct2<<endl;\n                if(ct1 <= k || ct2 <= k)\n                {\n                    j++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            v1[i] = j-i;\n        }\n        // for(int i = 0; i<n; i++)\n        // {\n        //     cout<<v1[i]<<\" \";\n        // }cout<<endl;\n        vector<long long> prefix(n+1);\n        long long s1 = 0;\n        for(int i = 0; i<n; i++)\n        {\n            s1 += v1[i];\n            prefix[i] = s1;\n        }\n        \n        vector<long long> ans;\n        int q = queries.size();\n        for(int i = 0; i<q; i++)\n        {\n            int l = queries[i][0];\n            int r = queries[i][1];\n            \n            int low = l-1;\n            int high = r+1;\n            while(high-low > 1)\n            {\n                int mid = (low+high)/2;\n                int cc1 = v2[r];\n                if(mid != 0)\n                {\n                    cc1 -= v2[mid-1];\n                }\n                int cc2 = r-mid+1-cc1;\n                if(cc1 > k && cc2 > k)\n                {\n                    low = mid;\n                }\n                else\n                {\n                    high = mid;\n                }\n            }\n            // cout<<low<<endl;\n            long long sum = 0;\n            if(low != -1)\n            {\n                sum += prefix[low];\n                if(l != 0)\n                {\n                    sum -= prefix[l-1];\n                }\n            }\n            long long sum2 = r-low;\n            sum2 *= r-low+1;\n            sum2 /= 2;\n            sum += sum2;\n            ans.push_back(sum);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950148",
    "subm_id": "1359738458"
}