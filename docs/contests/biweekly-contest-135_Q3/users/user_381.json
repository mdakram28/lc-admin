{
    "username": "vigilant-perlmanstv",
    "submission": "class Solution {\npublic:\n    struct SegTree {\n        struct Node {\n            int l, r;\n            int val, tag;\n        };\n        vector<Node> tr;\n        int n;\n        SegTree(int _n) {\n            n = _n;\n            tr.resize(4 * (_n + 1));\n            build(1, 0, n);\n        }\n        void build(int u, int l, int r) {\n            tr[u] = {l, r};\n            if(l == r) return;\n            int mid = (l + r) >> 1;\n            build(u << 1, l, mid);\n            build(u << 1 | 1, mid + 1, r);\n        }\n        void pushdown(int u) {\n            Node& root = tr[u], &left = tr[u << 1], &right = tr[u << 1 | 1];\n            if(root.tag) {\n                left.tag += root.tag;\n                left.val += root.tag;\n                right.tag += root.tag;\n                right.val += root.tag;\n                root.tag = 0;\n            }\n        }\n        void modify(int u, int L, int R, int val) {\n            if(L <= tr[u].l and tr[u].r <= R) {\n                tr[u].tag += val;\n                tr[u].val += val;\n                return;\n            }\n            pushdown(u);\n            int mid = (tr[u].l + tr[u].r) >> 1;\n            if(L <= mid) modify(u << 1, L, R, val);\n            if(R > mid) modify(u << 1 | 1, L, R, val);\n        }\n        int query(int u, int x) {\n            if(tr[u].l == tr[u].r) return tr[u].val;\n            pushdown(u);\n            int mid = (tr[u].l + tr[u].r) >> 1;\n            if(x <= mid) return query(u << 1, x);\n            return query(u << 1 | 1, x);\n        }\n    };\n    int minChanges(vector<int>& a, int k) {\n        int n = a.size();\n        int m = n / 2;\n        SegTree st(k);\n        for(int i = 0; i < n / 2; i++) {\n            int x = a[i], y = a[n - 1 - i];\n            if(x > y) swap(x, y);\n            int c = y - x;\n            int l = 0, r = max(y, k - x);\n            if(c > l) st.modify(1, l, c - 1, 1);\n            if(c < r) st.modify(1, c + 1, r, 1);\n            if(r < k) st.modify(1, r + 1, k, 2);\n        }\n        int ans = INT_MAX;\n        for(int i = 0; i <= k; i++) ans = min(ans, st.query(1, i));\n        return ans;\n    }\n};",
    "submit_ts": "1721488261",
    "subm_id": "548313583"
}