{
    "username": "vilcheuski",
    "submission": "class Solution {\npublic:\n    \n    void dfs(vector<vector<int>>& g, vector<int>& down, int u, int p) {\n        int cnt = 0;\n        down[u] = 0;\n        for (const auto& ne : g[u]) {\n            if (ne == p) continue;\n            ++cnt;\n            dfs(g, down, ne, u);\n            int add = 1;\n            if (ne % 2 == 0) add = 2;\n            down[u] = max(down[u], down[ne] + add);\n        }\n    }    \n    \n    void dfs2(vector<vector<int>>& g, vector<int>& down, vector<int>& answer, int u, int p, int path) {\n        answer[u] = max(path, down[u]);\n        vector<pair<int, int> > go, pref, suff;\n        for (const auto& ne : g[u]) {\n            if (ne == p) continue;\n            int add = 1;\n            if (ne % 2 == 0) add = 2;\n            go.push_back({down[ne] + add, ne});\n        }\n        if (go.empty()) return;\n        pref.resize(go.size()), suff.resize(go.size());\n        pref[0] = go[0];\n        for (int i = 1; i < go.size(); ++i) pref[i] = max(pref[i - 1], go[i]);\n        suff[go.size() - 1] = go[go.size() - 1];\n        for (int i = (int)go.size() - 2; i >= 0; --i) {\n            suff[i] = max(suff[i + 1], go[i]);\n        }\n        for (int i = 0; i < go.size(); ++i) {\n            int add = 1;\n            if (u % 2 == 0) add = 2;\n            int newpath = path + add;\n            if (i > 0) newpath = max(newpath, pref[i - 1].first + add);\n            if (i + 1 < suff.size()) newpath = max(newpath, suff[i + 1].first + add);\n            dfs2(g, down, answer, go[i].second, u, newpath);\n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int> > g(n);    \n        for (const auto& e : edges) {\n            int u = e[0], v = e[1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        } \n        vector<int> down(n, 1e9);\n        vector<int> answer(n, 0);\n        dfs(g, down, 0, 0);\n        dfs2(g, down, answer, 0, 0, 0);\n        return answer;\n    }\n};",
    "submit_ts": "1722697402",
    "subm_id": "1343145244"
}