{
    "username": "mithunsivam17",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map <int, int> absDiffCount;\n        int maxDiffCount = 0;\n        for (int i=0; i<(n/2); i++){\n            int currentAbsDiff = abs(nums[i]-nums[n-i-1]);\n            absDiffCount[currentAbsDiff]++;\n            maxDiffCount = max(maxDiffCount, absDiffCount[currentAbsDiff]);\n        }\n\n        vector <pair<int, int>> diffCountVector;\n        for (auto it : absDiffCount){\n            // cout << it.first << \" \" << it.second << endl;\n            diffCountVector.push_back({it.second, it.first});\n        }\n        sort(diffCountVector.begin(), diffCountVector.end());\n        // reverse(diffCountVector.begin(), diffCountVector.end());\n        int minOperations = INT_MAX;\n        for (int i=diffCountVector.size()-1; i>=0; i--){\n            int currentDiff = diffCountVector[i].second;\n            int currentDiffCount = diffCountVector[i].first;\n            // cout << currentDiff << \" \" << currentDiffCount << \" \" << minOperations << endl;\n            if (minOperations < ((n/2)-currentDiffCount)) {\n                // cout << \"a\";\n                break;\n            }\n            int currentOperations = 0;\n            for (int i=0; i<(n/2); i++){\n                if (abs(nums[i]-nums[n-i-1]) == currentDiff) continue;\n                else{\n                    if ((k-min(nums[i], nums[n-i-1]) < currentDiff) && (max(nums[i], nums[n-i-1]) < currentDiff)) currentOperations+=2;\n                    else currentOperations+=1;\n                }\n            }\n            minOperations = min(minOperations, currentOperations);\n        }\n        return minOperations;\n    }\n};",
    "submit_ts": "1721489381",
    "subm_id": "1327451548"
}