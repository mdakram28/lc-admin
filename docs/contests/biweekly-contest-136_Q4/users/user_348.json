{
    "username": "Abeed_shaik",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        using data = array<int, 2>;\n        \n        vector<int> g[n];\n        for(int i = 0; i < edges.size(); i++) g[edges[i][0]].push_back(edges[i][1]), g[edges[i][1]].push_back(edges[i][0]);\n        vector<int> order, parent(n, 0);\n        function<void(int, int)> dfs = [&](int u, int p){\n            parent[u] = p;\n            order.push_back(u);\n            for(auto v: g[u]){\n                if(v == p) continue;\n                dfs(v, u);\n            }\n        };\n        \n        dfs(0, -1);\n        reverse(order.begin(), order.end());\n        vector<data> first_max(n, {0, -1}) ,second_max(n, {0, -1});\n        for(auto u: order){\n            if(u == 0) continue;\n            int now = first_max[u][0] + 1 + (u % 2 == 0);\n            int v = parent[u];\n            if(first_max[v][1] == -1) first_max[v] = {now, u};\n            else{\n                if(first_max[v][0] < now){\n                    second_max[v] = first_max[v];\n                    first_max[v] = {now, u};\n                }\n                else{\n                    if(second_max[v][1] == -1) second_max[v] = {now, u};\n                    else{\n                        if(second_max[v][0] < now) second_max[v] = {now, u};\n                    }\n                }\n            }\n        }\n        \n        vector<int> ret(n, 0);\n        reverse(order.begin(), order.end());\n        for(auto u: order){\n            if(u == 0){\n                continue;\n            }\n            int v = parent[u];\n            ret[u] = ret[v] + 1 + (v % 2 == 0);\n            if(first_max[v][1] == u){\n                if(second_max[v][1] != -1) {\n                    ret[u] = max(ret[u], second_max[v][0] + 1 + (v % 2 == 0));\n                }\n            }\n            else{\n                ret[u] = max(ret[u], first_max[v][0] + 1 + (v % 2 == 0));\n            }\n        }\n        \n        for(int i = 0; i < n; i++) ret[i] = max(ret[i], first_max[i][0]);\n        return ret;\n    }\n};",
    "submit_ts": "1722699442",
    "subm_id": "1343211775"
}