{
    "username": "tqy",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    using tp = tuple<ll, ll, ll>;\n    using p = pair<ll, ll>;\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        vector<tp> all;\n        for (int i = 0; i < n; i++) {\n            vector<p> tmp;\n            vector<bool> ok(m, false);\n            for (int j = 0; j < m; j++) {\n                tmp.emplace_back(board[i][j], j);\n            }\n            sort(tmp.begin(), tmp.end());\n            for (int k = m - 1; k >= m - 3; k--) {\n                all.emplace_back(i, tmp[k].second, tmp[k].first);\n                ok[tmp[k].second] = true;\n            }\n            for (int j = 0; j < m; j++) {\n                if (!ok[j]) {\n                    board[i][j] = INT_MIN;\n                }\n            }\n        }\n\n        vector mx1(n, vector<int>(m, INT_MIN));\n        vector mx2(n, vector<int>(m, INT_MIN));\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (i == 0) {\n                    mx1[i][j] = board[i][j];\n                } else {\n                    mx1[i][j] = max(board[i][j], mx1[i - 1][j]);\n                }\n            }\n        }\n        \n        for (int i = n - 1; i >= 0; i--) {\n            for (int j = 0; j < m; j++) {\n                if (i == n - 1) {\n                    mx2[i][j] = board[i][j];\n                } else {\n                    mx2[i][j] = max(board[i][j], mx2[i + 1][j]);\n                }\n            }\n        }\n        \n        long long ans = INT64_MIN;\n        for (auto [x, y, v] : all) {\n            if (x == 0 || x == n - 1) {\n                continue;\n            }\n            set<p> top, bottom;\n            for (int i = 0; i < m; i++) {\n                int q = mx1[x - 1][i];\n                if (q == INT_MIN) {\n                    continue;\n                }\n                top.emplace(q, i);\n                if (top.size() > 3) {\n                    top.erase(top.begin());\n                }\n            }\n            for (int i = 0; i < m; i++) {\n                int q = mx2[x + 1][i];\n                if (q == INT_MIN) {\n                    continue;\n                }\n                bottom.emplace(q, i);\n                if (bottom.size() > 3) {\n                    bottom.erase(bottom.begin());\n                }\n            }\n            for (auto [v1, col1] : top) {\n                if (col1 == y) continue;\n                for (auto [v2, col2] : bottom) {\n                    if (col2 == col1 || col2 == y) continue;\n                    ans = max(ans, v + v1 + v2);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910182",
    "subm_id": "556339980"
}