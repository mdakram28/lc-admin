{
    "username": "puktt",
    "submission": "class Solution {\npublic:\n    unordered_map <int, int> um;\n    //      end,  k -> len\n    int dp[5050][66];\n    int ans[66];\n    \n    int maximumLength(vector<int>& nums, int k) {\n        memset(dp, 0, sizeof(dp));\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            dp[i][k] = 1;\n        }\n        ans[k] = 1;\n        for (int i = 0; i < n; ++i) {\n            if (i) {\n                for (int j = 0; j <= k; ++j) {\n                    dp[i][j] = max(dp[i][j], 1 + dp[i - 1][j + 1]);\n                    dp[i][j] = max(dp[i][j], ans[j + 1] + 1);\n                    ans[j] = max(ans[j], dp[i][j]);\n                }\n            }\n            if (um.find(nums[i]) != um.end()) {\n                int ind = um[nums[i]];\n                for (int j = 0; j <= k; ++j) {\n                    dp[i][j] = max(dp[i][j], dp[ind][j] + 1);\n                    ans[j] = max(ans[j], dp[i][j]);\n                }\n            }\n            um[nums[i]] = i;\n        }\n        int ret = 1;\n        for (int j = 0; j <= k; ++j) {\n            ret = max(ret, ans[j]);\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717860882.0
}