{
    "username": "sahil20000706",
    "submission": "class Solution {\npublic:\n    unordered_map<string, int> dp;\n    \n    string getString(long a, long b, long c) {\n        return to_string(a)+\",\"+to_string(b)+\",\"+to_string(c);\n    }\n    \n    int Helper(long long i, long long jump, long long jt, int k) {\n        if(i>k+1)\n            return 0;\n        \n        int res = 0;\n        string curr = getString(i,jump,jt);\n        \n        if(dp.count(curr)) {\n            return dp[curr];\n        }\n        \n        if(i == k) {\n            res++;\n        }\n        \n        res += Helper(i+jump, jump*2LL, 0, k);\n        if(jt != 1 && i !=0) {\n            res += Helper(i-1,jump, 1, k);\n        }\n        \n        return dp[curr] = res;\n    }\n    \n    int waysToReachStair(int k) {\n        dp.clear();\n        return Helper(1LL,1LL,3,k);\n    }\n};",
    "submit_ts": 1716089386.0
}