{
    "username": "akash_1513",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<int>st1, st2;\n        \n        for(int i = 0; i < n; ++i) {\n            st1.insert(points[i][0] + points[i][1]);\n            st2.insert(points[i][0] - points[i][1]);\n        }\n        \n        int mn = 1e9;\n        for(int i = 0; i < n; ++i) {\n            int a = points[i][0] + points[i][1], b = points[i][0] - points[i][1];\n            \n            int val1 = *st1.rbegin() - *st1.begin();\n            int val2 = *st2.rbegin() - *st2.begin();\n            \n            if(val1 > val2) {\n                if(*st1.begin() == a || *st1.rbegin() == a) {\n                    st1.erase(st1.find(a));\n                    st2.erase(st2.find(b));\n                    int v1 = *st1.rbegin() - *st1.begin();\n                    int v2 = *st2.rbegin() - *st2.begin();\n                    mn = min(mn, max(v1, v2));\n                    st1.insert(a);\n                    st2.insert(b);\n                }\n            } else {\n                if(*st2.begin() == b || *st2.rbegin() == b) {\n                    st2.erase(st2.find(b));\n                    st1.erase(st1.find(a));\n                    int v2 = *st2.rbegin() - *st2.begin();\n                    int v1 = *st1.rbegin() - *st1.begin();\n                    mn = min(mn, max(v2, v1));\n                    st2.insert(b);\n                    st1.insert(a);\n                }\n            } \n        }\n        \n        return mn;\n    }\n};"
}