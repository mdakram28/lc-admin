{
    "username": "jainlakshit",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::ios_base::sync_with_stdio(false);\n        std::cin.tie(NULL);\n        vector<pair<int,int>> cuts;\n        for(int i=0;i<horizontalCut.size();i++){\n            cuts.push_back({horizontalCut[i],0});\n        }\n        for(int i=0;i<verticalCut.size();i++){\n            cuts.push_back({verticalCut[i],1});\n        }\n        sort(cuts.begin(),cuts.end(),greater<pair<int,int>>());\n        long long ans=0;\n        long long horizontalComponents=1,verticalComponents=1;\n        for(auto &cut : cuts){\n            if(cut.second==0){\n                ans+=cut.first*verticalComponents;\n                horizontalComponents++;\n            }\n            else{\n                ans+=cut.first*horizontalComponents;\n                verticalComponents++;\n            }\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1720925483",
    "subm_id": "1320256222"
}