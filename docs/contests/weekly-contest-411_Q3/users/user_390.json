{
    "username": "Vadym Briniuk",
    "submission": "class Solution {\n\tprivate static void add(StringBuilder sb, int digit, int count) {\n\t\twhile (count-- > 0)\n\t\t\tsb.append(digit);\n\t}\n\n\tprivate static void findMid(int d, int n, int b, StringBuilder sb) {\n\t\tint[] digits = new int[n];\n\t\tArrays.fill(digits, 9);\n\t\tdigits[0] = digits[n - 1] = b;\n\t\tint n2 = n / 2;\n\t\tboolean even = n % 2 == 0;\n\t\tdigits[n2] = 0;\n\t\tif (even)\n\t\t\tdigits[n2 - 1] = 0;\n\t\tint m = 0;\n\t\tfor (int i = n - 1; i >= 0; i--)\n\t\t\tm = (m * 10 + digits[i]) % d;\n\t\tint y = even ? 11 : 1;\n\t\tfor (int i = (n - 1) / 2; i > 0; i--)\n\t\t\ty = (y * 10) % d;\n\t\tint x = 9;\n\t\twhile ((m + x * y) % d != 0)\n\t\t\tx--;\n\t\tdigits[n2] = x;\n\t\tif (even)\n\t\t\tdigits[n2 - 1] = x;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tsb.append(digits[i]);\n\t}\n\n\tpublic static String largestPalindrome(int n, int k) {\n\t\tif (n <= 2) {\n\t\t\tint x = 9;\n\t\t\twhile (x % k != 0)\n\t\t\t\tx--;\n\t\t\treturn Integer.toString(n == 1 ? x : 11 * x);\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tswitch (k) {\n\t\t\tcase 1:\n\t\t\tcase 3:\n\t\t\tcase 9:\n\t\t\t\tadd(sb, 9, n);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tadd(sb, 8, 1);\n\t\t\t\tadd(sb, 9, n - 2);\n\t\t\t\tadd(sb, 8, 1);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tif (n == 3)\n\t\t\t\t\tadd(sb, 8, 3);\n\t\t\t\telse {\n\t\t\t\t\tadd(sb, 8, 2);\n\t\t\t\t\tadd(sb, 9, n - 4);\n\t\t\t\t\tadd(sb, 8, 2);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tadd(sb, 5, 1);\n\t\t\t\tadd(sb, 9, n - 2);\n\t\t\t\tadd(sb, 5, 1);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tfindMid(3, n, 8, sb);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tfindMid(7, n, 9, sb);\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tif (n <= 6)\n\t\t\t\t\tadd(sb, 8, n);\n\t\t\t\telse {\n\t\t\t\t\tadd(sb, 8, 3);\n\t\t\t\t\tadd(sb, 9, n - 6);\n\t\t\t\t\tadd(sb, 8, 3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn sb.toString();\n\t}\n}",
    "submit_ts": "1723952486",
    "subm_id": "1359797354"
}