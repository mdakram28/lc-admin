{
    "username": "ou-hai-ziJHu23dNZ",
    "submission": "class Solution {\n    private int[] newColors;\n    \n    private int k;\n\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        // \u8fde\u7eedk\u4e2a01\n        int[] newColors = new int[colors.length * 2];\n        for (int i = 0; i < colors.length * 2; i++) {\n            if (i < colors.length) {\n                newColors[i] = colors[i];\n            } else {\n                newColors[i] = colors[i - colors.length];\n            }\n        }\n        this.k = k;\n        this.newColors = newColors;\n        int ans = 0;\n        for (int left = 0, right = 0; left < colors.length; left++) {\n            // left\u5230right\u5fc5\u987bk\u4e2a\n            right = Math.max(left, right);\n            while (right < newColors.length && judgeRightLegalAndAdd(left, right)) {\n                right++;\n            }\n            if (right - left == k) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n\n    private boolean judgeRightLegalAndAdd(int left, int right) {\n        // \u6838\u5fc3\u5224\u65ad\u903b\u8f91,\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u8fd4\u56defalse\u3002\u5982\u679c\u5408\u6cd5\uff0c\u52a0\u5165\u540e\u8fd4\u56detrue\n        int mod = (right - left) % 2;\n        if (right - left >= k) {\n            return false;\n        }\n        if (mod == 0 && newColors[right] == newColors[left]) {\n            return true;\n        }\n        if (mod == 1 && newColors[right] != newColors[left]) {\n            return true;\n        }\n        return false;\n    }\n}",
    "submit_ts": "1720277023",
    "subm_id": "544553924"
}