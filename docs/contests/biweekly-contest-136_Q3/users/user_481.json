{
    "username": "lihaicoder",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ans = 0\n        n = len(grid)\n        m = len(grid[0])\n        if n % 2 == 1 and m % 2 == 1: # center\n            if grid[n//2][m//2] == 1:\n                ans += 1\n                grid[n//2][m//2] = 0\n        for i in range(n//2):\n            for j in range(m//2):\n                nums = [grid[i][j], grid[i][m-j-1], grid[n-i-1][j], grid[n-i-1][m-j-1]]\n                s = sum(nums)\n                ans += min(s, 4 - s)\n        strict = 0\n        flex = 0\n        if n % 2 == 1:\n            for j in range(m//2):\n                nums = [grid[n//2][j], grid[n//2][m-j-1]]\n                s = sum(nums)\n                if s == 2:\n                    strict += 2\n                elif s == 1:\n                    flex += 1\n        if m % 2 == 1:\n            for i in range(n//2):\n                nums = [grid[i][m//2], grid[n-i-1][m//2]]\n                s = sum(nums)\n                if s == 2:\n                    strict += 2\n                elif s == 1:\n                    flex += 1\n        ans += flex\n        strict %= 4\n        need = 4 - strict\n        # print(ans, strict, flex, need)\n        if not flex*2 >= need:\n            ans += strict\n        return ans",
    "submit_ts": "1722697097",
    "subm_id": "1343134020"
}