{
    "username": "Sahilyt07",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // Sort cuts in descending order\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        long long horizontalPieces = 1LL, verticalPieces = 1LL;\n        int i = 0, j = 0;\n        long long ans = 0LL;\n        \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                ans += ((long long)horizontalCut[i]) * verticalPieces;\n                horizontalPieces++;\n                i++;\n            } else {\n                ans += ((long long)verticalCut[j]) * horizontalPieces;\n                verticalPieces++;\n                j++;\n            }\n        }\n        \n        while (j < verticalCut.size()) {\n            ans += ((long long)verticalCut[j]) * horizontalPieces;\n            verticalPieces++;\n            j++;\n        }\n        \n        while (i < horizontalCut.size()) {\n            ans += ((long long)horizontalCut[i]) * verticalPieces;\n            horizontalPieces++;\n            i++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720926361",
    "subm_id": "1320283888"
}