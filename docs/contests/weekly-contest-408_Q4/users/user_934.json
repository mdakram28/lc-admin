{
    "username": "knight2003",
    "submission": "class Solution {\npublic:\n    class DisjointSets {\n    public:\n    vector<int> parents;\n        vector<int> sizes;\n        DisjointSets(int size) : parents(size), sizes(size, 1) {\n            for (int i = 0; i < size; i++) { parents[i] = i; }\n        }\n\n        /** @return the \"representative\" node in x's component */\n        int find(int x) {\n            return parents[x] == x ? x : (parents[x] = find(parents[x]));\n        }\n\n        /** @return whether the merge changed connectivity */\n        bool unite(int x, int y) {\n            int x_root = find(x);\n            int y_root = find(y);\n            if (x_root == y_root) { return false; }\n\n            if (sizes[x_root] < sizes[y_root]) { swap(x_root, y_root); }\n            sizes[x_root] += sizes[y_root];\n            parents[y_root] = x_root;\n            return true;\n        }\n\n        /** @return whether x and y are in the same connected component */\n        bool connected(int x, int y) { return find(x) == find(y); }\n    };\n    bool canReachCorner(int X, int Y, vector<vector<int>>& v) {\n        int n=v.size();\n        DisjointSets ds(n+4);\n        for(int i=0;i<n;i++){\n            for(int j=i+1;j<n;j++){\n                int x1=v[i][0]-v[j][0];\n                int y1=v[i][1]-v[j][1];\n                double dis=sqrt(1LL*x1*x1+1LL*y1*y1);\n                double dis2=v[i][2]+v[j][2];\n                if(dis<=dis2){\n                    ds.unite(i,j);\n                }\n            }\n            int r=v[i][2];\n            if(v[i][1]<=r){\n                ds.unite(i,n);\n            }\n            if(v[i][0]<=r){\n                ds.unite(i,n+1);\n            }\n            if(Y-v[i][1]<=r){\n                ds.unite(i,n+2);\n            }\n            if(X-v[i][0]<=r){\n                ds.unite(i,n+3);\n            }\n        }\n        if(ds.connected(n,n+1) || ds.connected(n,n+2) || ds.connected(n+2,n+3) || ds.connected(n+1,n+3))\n        return false;\n        return true;\n    }\n};",
    "submit_ts": "1722138103",
    "subm_id": "1335782196"
}