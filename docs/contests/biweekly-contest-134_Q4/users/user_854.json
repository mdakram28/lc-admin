{
    "username": "aryangarg0729",
    "submission": "class Solution {\npublic:\n    class SegmentTree{\n    vector<long long>seg,lazy;\n    int n;\n    void build(vector<int>&nums,int ind,int low, int high){\n        if(low==high){\n            seg[ind] = nums[low];\n            return;\n        }\n        int mid = (low+high)/2;\n        build(nums,2*ind+1,low,mid);\n        build(nums,2*ind+2,mid+1,high);\n        seg[ind] = (seg[2*ind+1]&seg[2*ind+2]);\n    }\n    long long query(int ind,int low,int high,int l,int r){\n\n        // no overlap\n        if(l>high || r<low)return -1;\n\n        // complete overlap\n        if(low>=l && high<=r) return seg[ind];\n\n        // partial overlap\n        int mid = (low+high)/2;\n        long long left = query(2*ind+1,low,mid,l,r);\n        long long right = query(2*ind+2,mid+1,high,l,r);\n        return (left&right);\n    }\n\n   \n\n    public:\n    SegmentTree(vector<int>&nums,int val){\n        n = nums.size();\n        seg.resize(4*n,val);\n        lazy.resize(4*n,val);\n        build(nums,0,0,n-1);\n    }\n    \n    // query range l to r\n    long long query(int l,int r){\n        return query(0,0,n-1,l,r);\n    }\n\n    \n};\n    bool check(int k,int n){\n        int x = (k^n);\n        return (x&k)==0;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<vector<int>>a;\n        for(int i = 0;i<nums.size();i++){\n            vector<int>v;\n            while(i<nums.size()){\n                if(check(k,nums[i])){\n                    v.push_back(nums[i]);\n                    i++;\n                }else{\n                    break;\n                }\n            }\n            if(v.size()!=0)a.push_back(v);\n        }\n        \n        \n        long long ans = 0;\n        for(auto i:a){\n            SegmentTree seg(i,-1);\n            for(int j = 0;j<i.size();j++){\n                int s = j,e = i.size()-1;\n                while(s<=e){\n                    int mid = (s+e)/2;\n                    if(seg.query(j,mid)>k){\n                        s = mid+1;\n                    }else{\n                        e = mid-1;\n                    }\n                }\n                e++;\n                if(e>=i.size())break;\n                ans+=i.size()-e;\n            }\n        }\n        return ans;\n        // for(auto i:a){\n        //     for(auto j:i){\n        //         cout<<j<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n        return 0;\n    }\n};",
    "submit_ts": "1720280231",
    "subm_id": "1311781644"
}