{
    "username": "Jay_1729",
    "submission": "class Solution {\npublic:\n    bool touch(int x, int y, vector<int> &circle){\n        int cx = circle[0], cy = circle[1], r = circle[2];\n        long long dx = cx - x, dy = cy - y;\n        return (r * 1ll * r >= dx * dx + dy * dy);\n    }\n    bool touch(vector<int> &circle1, vector<int> &circle2){\n        long long dx = circle1[0] - circle2[0];\n        long long dy = circle1[1] - circle2[1];\n        long long r = circle1[2] + circle2[2];\n        return (r * r >= dx * dx + dy * dy);\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        for(vector<int> &circle: circles){\n            if(touch(0, 0, circle) || touch(X, Y, circle)){\n                return false;\n            }\n        }\n        int n = circles.size();\n        vector<bool> xInt(n), yInt(n);\n        for(int i = 0; i < n; ++i){\n            xInt[i] = touch(circles[i][0], Y, circles[i]) || touch(0, circles[i][1], circles[i]);\n            yInt[i] = touch(circles[i][0], 0, circles[i]) || touch(X, circles[i][1], circles[i]);\n        }\n        \n        vector<vector<int>> adj(n);\n        for(int i = 0; i < n; ++i){\n            for(int j = 0; j < n; ++j){\n                if(touch(circles[i], circles[j])){\n                    adj[i].push_back(j);\n                }\n            }\n        }\n        vector<bool> vis(n);\n        for(int i = 0; i < n; ++i){\n            if(vis[i]){\n                continue;\n            }\n            bool x = xInt[i], y = yInt[i];\n            queue<int> q;\n            q.push(i);\n            while(!q.empty()){\n                int u = q.front();\n                q.pop();\n                x |= xInt[u];\n                y |= yInt[u];\n                \n                for(int v: adj[u]){\n                    if(!vis[v]){\n                        vis[v] = true;\n                        q.push(v);\n                    }\n                }\n            }\n            if(x && y){\n                return false;\n            }\n        }\n        \n        return true;\n    }\n};",
    "submit_ts": "1722137684",
    "subm_id": "1335770769"
}