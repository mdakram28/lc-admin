{
    "username": "aryansingh027",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& point) {\n        int n=point.size();\n        vector<pair<int,int>> A;\n        for(int i=0;i<n;i++){\n            A.push_back({point[i][0],point[i][1]});\n        }\n        vector<vector<int>> pre(n,vector<int>(4));\n        vector<vector<int>> suf(n,vector<int>(4));\n        int minsum, maxsum, mindiff, maxdiff;\n        minsum = maxsum = A[0].first + A[0].second;\n        mindiff = maxdiff = A[0].first - A[0].second;\n        pre[0][0]=maxsum,pre[0][1]=minsum;\n        pre[0][2]=maxdiff,pre[0][3]=mindiff;\n        \n        for(int i=1;i<n;i++){\n            int sum = A[i].first + A[i].second;\n            int diff = A[i].first - A[i].second;\n            if (sum < minsum)\n                minsum = sum;\n            else if (sum > maxsum)\n                maxsum = sum;\n            if (diff < mindiff)\n                mindiff = diff;\n            else if (diff > maxdiff)\n                maxdiff = diff;\n            pre[i][0]=maxsum,pre[i][1]=minsum;\n            pre[i][2]=maxdiff,pre[i][3]=mindiff;\n            //cout<<max(maxsum - minsum, maxdiff - mindiff)<<\" \";\n        }\n        minsum = maxsum = A[n-1].first + A[n-1].second;\n        mindiff = maxdiff = A[n-1].first - A[n-1].second;\n        suf[n-1][0]=maxsum,suf[n-1][1]=minsum;\n        suf[n-1][2]=maxdiff,suf[n-1][3]=mindiff;\n        for(int i=n-2;i>=0;i--){\n            int sum = A[i].first + A[i].second;\n            int diff = A[i].first - A[i].second;\n            if (sum < minsum)\n                minsum = sum;\n            else if (sum > maxsum)\n                maxsum = sum;\n            if (diff < mindiff)\n                mindiff = diff;\n            else if (diff > maxdiff)\n                maxdiff = diff;\n            suf[i][0]=maxsum,suf[i][1]=minsum;\n            suf[i][2]=maxdiff,suf[i][3]=mindiff;\n        }\n        int ans=2e8+1;\n        for(int i=0;i<n;i++){\n            if(i==0){\n                int  maximum=max(suf[1][0] - suf[1][1], suf[1][2] - suf[1][3]);\n                ans=min(ans,maximum);\n            }else if(i==(n-1)){\n                int  maximum=max(pre[n-2][0] - pre[n-2][1], pre[n-2][2] - pre[n-2][3]);\n                ans=min(ans,maximum);\n            }else{\n                int mxs=max(pre[i-1][0],suf[i+1][0]);\n                int mns=min(pre[i-1][1],suf[i+1][1]);\n                int mxd=max(pre[i-1][2],suf[i+1][2]);\n                int mnd=min(pre[i-1][3],suf[i+1][3]);\n                \n                ans=min(ans,max(mxs-mns,mxd-mnd));\n            }\n        }\n    \n        return ans;\n    }\n};"
}