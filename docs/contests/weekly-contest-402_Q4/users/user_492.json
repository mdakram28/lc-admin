{
    "username": "hanbro0112",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        SL = SortedList()\n        \n        ans = []\n        for i in range(1, len(nums) - 1):\n            if nums[i - 1] < nums[i] and nums[i] > nums[i + 1]:\n                SL.add(i)\n        \n        for op, x, y in queries:\n            if op == 1:\n                if x == y:\n                    ans.append(0)\n                else:\n                    l = SL.bisect_left(x + 1)\n                    r = SL.bisect_right(y - 1)\n                    ans.append(r - l)\n            else:\n                nums[x] = y\n                for i in range(x - 1, x + 2):\n                    if i > 0 and i < len(nums) - 1:\n                        SL.discard(i)\n                        # peek\n                        if nums[i - 1] < nums[i] and nums[i] > nums[i + 1]:\n                            SL.add(i)\n                \n        return ans",
    "submit_ts": 1718507699.0
}