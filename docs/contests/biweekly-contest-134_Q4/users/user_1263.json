{
    "username": "devprakashdp2021",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int size = nums.size();\n        long long totalCount = 0;\n        map<long long, long long> previousResults;\n\n        for (int index = 0; index < size; ++index) {\n            map<long long, long long> currentResults;\n            \n            // Check if the current element is equal to k\n            if (nums[index] == k) {\n                ++totalCount;\n            }\n            currentResults[nums[index]]++;\n\n            // Iterate through previous results to update the current results\n            for (const auto& [value, frequency] : previousResults) {\n                long long newResult = value & nums[index];\n                if (newResult == k) {\n                    totalCount += frequency;\n                }\n                currentResults[newResult] += frequency;\n            }\n            \n            // Update the previous results with the current results\n            previousResults = (currentResults);\n        }\n\n        return totalCount;\n    }\n};\n",
    "submit_ts": "1720280729",
    "subm_id": "1311799978"
}