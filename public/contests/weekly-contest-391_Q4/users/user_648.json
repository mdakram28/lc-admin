{
    "username": "lets_go_boys",
    "submission": "class Solution {\npublic:\n    \n    int minimumDistance(vector<vector<int>>& A) {\n        \n        int ans=INT_MAX;\n        \n        multiset<int> V, V1;\n     \n        for (int i = 0; i < A.size(); i++) {\n            V.insert(A[i][0] + A[i][1]);\n            V1.insert(A[i][0] - A[i][1]);\n        }\n        \n        for (int i = 0; i < A.size(); i++) \n        {\n            V.erase(V.find(A[i][0] + A[i][1]));\n            V1.erase(V1.find(A[i][0] - A[i][1]));\n       \n           int mx= max(*V.rbegin() - *V.begin(), *V1.rbegin() - *V1.begin());\n            V.insert(A[i][0] + A[i][1]);\n            V1.insert(A[i][0] - A[i][1]);\n           ans=min(ans,mx);\n        }\n        return ans;\n    }\n};"
}