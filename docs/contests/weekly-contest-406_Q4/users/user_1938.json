{
    "username": "sunil_4_0",
    "submission": "\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long totalCost = 0;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n\n        int hIndex = 0;\n        int vIndex = 0;\n\n        while (hIndex < horizontalCut.size() || vIndex < verticalCut.size()) {\n            if (hIndex < horizontalCut.size() && (vIndex >= verticalCut.size() || horizontalCut[hIndex] >= verticalCut[vIndex])) {\n                totalCost += horizontalCut[hIndex] * verticalPieces;\n                horizontalPieces++;\n                hIndex++;\n            } else {\n                totalCost += verticalCut[vIndex] * horizontalPieces;\n                verticalPieces++;\n                vIndex++;\n            }\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925643",
    "subm_id": "1320261501"
}