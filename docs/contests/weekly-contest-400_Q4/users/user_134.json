{
    "username": "BruceGO",
    "submission": "#define f first\n#define s second\n#define lc (rt<<1)\n#define rc (rt<<1|1)\n#define pb push_back\n#define cl(a, b) memset(a, b, sizeof(a))\n#define mp(a, b) make_pair((a), (b))\n#define all(x) x.begin(),x.end()\ntypedef long long ll;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pl;\ntypedef pair<pi, int> pii;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pi> vii;\ntypedef vector<pl> vll;\ntypedef vector<pii> viii;\nconst int inf = 0x3F3F3F3F;\nconst ll infl = 0x3F3F3F3F3F3F3F3FLL;\nconst int mod = 1e9 + 7;\nvoid print(vector<int> & a){\n    for(int i=0; i<a.size(); i++) cout << a[i] << \" \\n\"[i+1==a.size()];\n}\n\nconst int MM = 1e5+3;\nclass Solution {\npublic:\n    void build(int l, int r, vi& nums, int rt){\n        if(l == r) { seg[rt] = nums[l]; return; }\n        int mid = (l+r)/2;\n        build(l, mid, nums, lc); build(mid+1, r, nums, rc);\n        seg[rt] = seg[lc] & seg[rc];\n    }\n    int qry(int l, int r, int x, int y, int rt){\n        if(l == x && r == y) return seg[rt];\n        int mid = (l + r)/2;\n        if(y <= mid) return qry(l, mid, x, y, lc);\n        else if(x > mid) return qry(mid+1, r, x, y, rc);\n        else return (qry(l, mid, x, mid, lc) & qry(mid+1, r, mid+1, y, rc));\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        n = nums.size(); build(0, n-1, nums, 1);\n        int ans = 2e9;\n        for(int i=0; i<n; i++) {\n            int lo = i, hi = n-1;\n            while(lo <= hi) {\n                int mid = (lo + hi)/2, val = qry(0, n-1, i, mid, 1);\n                ans = min(ans, abs(val - k));\n                if(val < k) {\n                    hi = mid - 1;\n                }else {\n                    lo = mid + 1;\n                }\n                if(ans == 0) return ans;\n            }\n        }\n        return ans;\n    }\n    int n, seg[4*MM];\n};",
    "submit_ts": 1717297455.0
}