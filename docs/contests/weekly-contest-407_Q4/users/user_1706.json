{
    "username": "qi-li-shi-yi",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        long cnt = 0;\n        for (int i = 0; i < n; i++){\n            if (diff[i] == 0) continue;\n            while (diff[i] != 0) {\n                int dff = diff[i], j = i, min = dff;\n                for (; j < n; j++) {\n                    if (diff[i] > 0 && diff[j] <= 0) break;\n                    if (diff[i] < 0 && diff[j] >= 0) break;\n                    else if (diff[i] > 0) {\n                        min = Math.min(min, diff[j]);\n                    } else min = Math.max(min, diff[j]);\n                }\n                for (int k = i; k < j; k++) diff[k] -= min;\n                cnt += Math.abs(min);\n            }\n        }\n        return cnt;\n    }\n}",
    "submit_ts": "1721532607",
    "subm_id": "548393335"
}