{
    "username": "sweet-villanijaz",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        swap(n, m);\n        n--, m--;\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<>());\n        int x = 0, y = 0;\n        long long ans = 0;\n        while (x < n && y < m) {\n            if (horizontalCut[x] >= verticalCut[y]) {\n                ans += horizontalCut[x++] * (y + 1);\n            } else {\n                ans += verticalCut[y++] * (x + 1);\n            }\n        }\n        while (x < n) {\n            ans += horizontalCut[x++] * (y + 1);\n        }\n        while (y < m) {\n            ans += verticalCut[y++] * (x + 1);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720925178",
    "subm_id": "546437460"
}