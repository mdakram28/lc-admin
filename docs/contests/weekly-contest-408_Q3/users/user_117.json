{
    "username": "uwu",
    "submission": "#[cfg(debug_assertions)]\nuse crate::*;\n\nimpl Solution {\n    pub fn number_of_substrings(s: String) -> i32 {\n        let s = s.into_bytes();\n        let n = s.len();\n        let mut ans = 0;\n        let mut next = vec![0; n];\n        {\n            let mut p = n;\n            for i in (0..n).rev() {\n                if s[i] == b'0' {\n                    p = i;\n                }\n                next[i] = p;\n                assert!(next[i] >= i);\n            }\n        }\n        for x in 0.. {\n            let k = 1.max(x + x * x);\n            if k > n {\n                break;\n            }\n            let mut cnt = [0, 0];\n            let mut j = 0;\n            for i in 0..n {\n                cnt[(s[i] - b'0') as usize] += 1;\n                while cnt[0] > x {\n                    cnt[(s[j] - b'0') as usize] -= 1;\n                    j += 1;\n                }\n                if cnt[0] == x && i >= j && i + 1 - j >= k {\n                    let r = i + 1 - j - k;\n                    let d = next[j] - j;\n                    ans += 1 + r.min(d);\n                    // println!(\n                    //     \"{x} {k} ({i}, {j}) {:?}\",\n                    //     std::str::from_utf8(&s[j..=i]).unwrap()\n                    // );\n                }\n            }\n        }\n        ans as i32\n    }\n}\n",
    "submit_ts": "1722138715",
    "subm_id": "1335797815"
}