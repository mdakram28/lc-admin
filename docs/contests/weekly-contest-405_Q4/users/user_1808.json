{
    "username": "Vtech_181",
    "submission": "class Solution {\npublic:\n    string t;\n    unordered_map<string,long long> c;\n    long long dp[50001];\n    struct TrieNode{\n        unordered_map<char,TrieNode*> mp;\n        bool isWord;\n        int cost;\n    };\n    struct TrieNode* root;\n    TrieNode* getNode(){\n        struct TrieNode* rt=new TrieNode();\n        rt->isWord=false;\n        rt->mp.clear();\n        rt->cost=INT_MAX;\n        return rt;\n    }\n    void insertWord(string &x,int c){\n        TrieNode* temp=root;\n        for(int i=0;i<x.size();i++){\n            if(temp->mp.find(x[i])==temp->mp.end()){\n                temp->mp[x[i]]=getNode();\n            }\n            temp=temp->mp[x[i]];\n        }\n        temp->isWord=true;\n        temp->cost=min(c,temp->cost);\n    }\n    long long solve(int x){\n        if(x>=t.size()){\n            return 0;\n        }\n        if(dp[x]!=-1){\n            return dp[x];\n        }\n        dp[x]=INT_MAX;\n        TrieNode* temp=root;\n        int pref=0;\n        for(int i=x;i<t.size();i++){\n            if(temp->mp.find(t[i])!=temp->mp.end()){\n                temp=temp->mp[t[i]];\n                pref++;\n                if(temp->isWord && (x+pref)<=t.size() && solve(x+pref)!=-1){\n                    dp[x]=min(dp[x],temp->cost + solve(x+pref));\n                }\n            }\n            else{\n                break;\n            }\n        }\n        if(dp[x]==INT_MAX){\n            return -1;\n        }\n        return dp[x];\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        t=target;\n        root=getNode();\n        memset(dp,-1LL,sizeof(dp));\n        for(int i=0;i<words.size();i++){\n            insertWord(words[i],costs[i]);\n        }\n        return solve(0);\n    }\n};",
    "submit_ts": "1720323369",
    "subm_id": "1312373850"
}