{
    "username": "jangar",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n\n        for (int i = 0; i < n / 2; i++)\n        for (int j = 0; j < m / 2; j++) {\n            int cnt = grid[i][j] + grid[n-1-i][j] + grid[n-1-i][m-1-j] + grid[i][m-1-j];\n\n            ans += min(cnt, 4 - cnt);\n        }\n\n        int cnt = 0, flips = 0;\n        if (n % 2 == 1) {\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] != grid[n / 2][m-1-j])\n                    flips++;\n                else if (grid[n / 2][j])\n                    cnt++;\n            }\n        }\n\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[i][m / 2] != grid[n - 1 - i][m / 2])\n                    flips++;\n                else if (grid[i][m / 2])\n                    cnt++;\n            }\n        }\n\n        if ((n % 2) && (m % 2)) {\n            if (grid[n / 2][m / 2]) ans++;\n        }\n\n        ans += flips;\n        \n        if (cnt % 2 == 1 && flips == 0) ans+=2;\n        return ans;\n    }\n};",
    "submit_ts": "1722696403",
    "subm_id": "1343106040"
}