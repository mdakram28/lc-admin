{
    "username": "i3oring-blackoso",
    "submission": "class Solution {\npublic:\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size() ; \n        long long ans = 0 ;\n        \n        vector<vector<int>> st(n + 10 , vector<int>(30 , 0)) ;\n        vector<int> Log(n + 10 , 0) ;\n        \n        init(st , Log , n , nums) ;\n        \n        for(int i = 0 ; i < n ; ++ i)\n        {\n            int l = i , r = n - 1 , ret = -1 , dn ;\n            while ( r >= l ) \n            {\n                int mid = (l + r) >> 1 ;\n                if ( query(i , mid , Log , st) >= k ) {\n                    ret = mid , l = mid + 1 ;\n                } else {\n                    r = mid - 1 ;\n                }\n            }\n            if ( ret != -1 && query(i , ret , Log, st) == k ) \n            {\n                // cout << \"( \" << i << ',' << ret << \")\\n\" ;\n                l = i , r = ret , dn = ret ;\n                while ( r >= l ) \n                {\n                    int mid = ( l + r ) >> 1 ;\n                    if ( query(i , mid ,Log, st) <= k )\n                    {\n                        dn = mid , r = mid - 1 ;\n                    } else {\n                        l = mid + 1 ;\n                    }\n                }\n                ans += ret - dn + 1; \n            }\n        }\n        \n        return ans ; \n    }\n    void init(vector<vector<int>> & st , vector<int> & Log , int n , vector<int> a)\n    {\n        for(int i = 2 ; i <= n ; ++ i) \n            Log[i] = Log[i >> 1] + 1; \n        for(int j = 0 ; j < 20 ; ++ j)\n            for(int i = 0 ; i + (1 << j) - 1 < n ; ++ i)\n                if ( !j ) st[i][j] = a[i] ;\n                else st[i][j] = st[i][j - 1] & st[i + (1 << (j - 1))][j - 1] ;\n    }\n    \n    int query(int l,int r , vector<int> & Log , vector<vector<int>> & st ) \n    {\n        int k = Log[r - l + 1] ;\n        return (st[l][k] & st[r - (1 << k) + 1][k]) ;\n    }\n};",
    "submit_ts": "1720280181",
    "subm_id": "544570871"
}