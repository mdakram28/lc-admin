{
    "username": "Swashbuckler12",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        string s=\"\";\n        for(int i=0;i<n;i++){\n            s+='*';\n        }\n        if(k==1||k==3||k==9){\n            for(int i=0;i<n;i++){\n                s[i]='9';\n            }\n            return s;\n        }\n        else if(k==2){\n            s[0]='8';\n            for(int i=1;i<n-1;i++){\n                s[i]='9';\n            }\n            s[n-1]='8';\n            return s;\n        }\n        else if(k==4){\n            if(n==1){\n                return \"8\";\n            }\n            else if(n==2){\n                return \"88\";\n            }\n            s[0]='8';\n            s[1]='8';\n            s[n-2]='8';\n            s[n-1]='8';\n            for(int i=2;i<n-2;i++){\n                s[i]='9';\n            }\n            return s;\n        }\n        else if(k==5){\n            s[0]='5';\n            s[n-1]='5';\n            for(int i=1;i<n-1;i++){\n                s[i]='9';\n            }\n            return s;\n        }\n        else if(k==8){\n            if(n==1){\n                return \"8\";\n            }\n            else if(n==2){\n                return \"88\";\n            }\n            if(n<=5){\n                for(int i=0;i<n;i++){\n                    s[i]='8';\n                }\n                return s;\n            }\n            for(int i=0;i<n;i++){\n                s[i]='9';\n            }\n            s[0]='8',s[1]='8',s[2]='8';\n            s[n-1]='8',s[n-2]='8',s[n-3]='8';\n            return s;\n        }\n        else if(k==6){\n            if(n==1){\n                return \"6\";\n            }\n            else if(n==2){\n                return \"66\";\n            }\n            if(n%2){\n                s[0]='8';\n                s[n-1]='8';\n                for(int i=1;i<n-1;i++){\n                    s[i]='9';\n                }\n                s[n/2]='8';\n                return s;\n            }\n            else{\n                s[0]='8';\n                s[n-1]='8';\n                for(int i=1;i<n-1;i++){\n                    s[i]='9';\n                }\n                s[n/2-1]='7';\n                s[n/2]='7';\n            }\n        }\n        else{\n            if(n==1){\n                return \"7\";\n            }\n            char dp1[100003][7];\n            char dp2[100003][7];\n            int mod1[100003][7];\n            int mod2[100003][7];\n            fill(&dp1[0][0], &dp1[0][0] + sizeof(dp1),0);\n            fill(&dp2[0][0], &dp2[0][0] + sizeof(dp2),0);\n            int i=1;\n            while(i<10){\n                dp1[1][i%7]='0'+i;\n                if(i){\n                    dp2[1][i%7]='0'+i;\n                }\n                i++;\n            }\n            int mod=3;\n            i=0;\n            while(i<99999){\n                for(int j=0;j<7;j++){\n                    if(i==0&&j>0){\n                        continue;\n                    }\n                    if(i>0&&dp1[i][j]==0){\n                        continue;\n                    }\n                    for(int d=9;d>=0;d--){\n                        int nmod=(mod*d+d+j*10)%7;\n                        if(dp1[i+2][nmod]==0){\n                            dp1[i+2][nmod]='0'+d;\n                            mod1[i+2][nmod]=j;\n                        }\n                        if(dp1[i+2][nmod]<'0'+d){\n                            dp1[i+2][nmod]='0'+d;\n                            mod1[i+2][nmod]=j;\n                        }\n                        if(d){\n                            if(dp2[i+2][nmod]==0){\n                                dp2[i+2][nmod]='0'+d;\n                                mod2[i+2][nmod]=j;\n                            }\n                            if(dp2[i+2][nmod]<'0'+d){\n                                dp2[i+2][nmod]='0'+d;\n                                mod2[i+2][nmod]=j;\n                            }\n                        }\n                    }\n                }\n                mod=(mod*10)%7;\n                i++;\n            }\n            int num=n;\n            string s1(1,dp2[n][0]);\n            string s2=s1;\n            int nmod=mod2[n][0];\n            num=num-2;\n            while(num!=0){\n                s1+=dp1[num][nmod];\n                if(num==1){\n                    break;\n                }\n                s2+=dp2[num][nmod];\n                nmod=mod1[num][nmod];\n                num=num-2;\n            }\n            reverse(s2.begin(),s2.end());\n            s=s1+s2;\n            return s;\n        }\n        return s;\n    }\n};",
    "submit_ts": "1723953595",
    "subm_id": "1359825942"
}