{
    "username": "colicon",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct DSU {\n    int n;\n    vector<int> parent;\n    vector<int> _size;\n\n    DSU() {}\n    DSU(int n) : n(n) {\n        parent.resize(n + 1);\n        iota(parent.begin(), parent.end(), 0);\n        _size.assign(n + 1, 1);\n    }\n\n    int rep(int x) {\n        if (parent[x] == x) {\n            return x;\n        }\n        return parent[x] = rep(parent[x]);\n    }\n\n    bool merge(int a, int b) {\n        a = rep(a);\n        b = rep(b);\n\n        if (a != b) {\n            if (_size[a] < _size[b]) {\n                swap(a, b);\n            }\n\n            parent[b] = a;\n            _size[a] += _size[b];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    int size(int x) {\n        return _size[rep(x)];\n    }\n\n    bool same(int a, int b) {\n        return rep(a) == rep(b);\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        int n = size(c);\n\n        DSU dsu(n+4);\n\n        for (int i = 0; i < n; i++) {\n            for (int j = i+1; j < n; j++) {\n                long long dx = c[i][0] - c[j][0];\n                long long dy = c[i][1] - c[j][1];\n                long long tr = c[i][2] + c[j][2];\n\n                if (dx*dx + dy*dy <= tr*tr) {\n                    dsu.merge(i, j);\n                }\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            long long x = c[i][0];\n            long long y = c[i][1];\n            long long r = c[i][2];\n\n            if (y-r <= 0 && 0 <= y+r) {\n                long double dx = sqrtl(r*r - y*y);\n                if (x+dx >= 0 && x-dx <= X) {\n                    dsu.merge(n, i);\n                }\n            }\n            if (y-r <= Y && Y <= y+r) {\n                long long dy = abs(Y-y);\n                long double dx = sqrtl(r*r - dy*dy);\n                if (x+dx >= 0 && x-dx <= X) {\n                    dsu.merge(n+1, i);\n                }\n            }\n\n            if (x-r <= 0 && 0 <= x+r) {\n                long double dy = sqrtl(r*r - x*x);\n                if (y+dy >= 0 && y-dy <= Y) {\n                    dsu.merge(n+2, i);\n                }\n            }\n            if (x-r <= X && X <= x+r) {\n                long long dx = abs(X-x);\n                long double dy = sqrtl(r*r - dx*dx);\n                if (y+dy >= 0 && y-dy <= Y) {\n                    dsu.merge(n+3, i);\n                }\n            }\n        }\n\n        return !(dsu.same(n, n+1) || dsu.same(n, n+2) ||\n                dsu.same(n+1, n+3) || dsu.same(n+2, n+3));\n    }\n};\n",
    "submit_ts": "1722138643",
    "subm_id": "1335796028"
}