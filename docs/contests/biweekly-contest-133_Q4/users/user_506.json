{
    "username": "rushiiisb",
    "submission": "\n\nclass Solution {\n\npublic:\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements)\n    {\n        int ans=countPermutationsWithInversions(n,requirements);\n        \n        return ans;\n        \n    }\n    \n    int countPermutationsWithInversions(int n, vector<vector<int>>& constraints) \n    {\n        \n        unordered_map<int, int> inversionRequirements;\n        \n        for (const auto& constraint : constraints)\n        {\n            inversionRequirements[constraint[0] + 1] = constraint[1];\n        }\n\n        vector<vector<long long>> dp(n + 1, vector<long long>(maxi + 1, 0));\n        \n        dp[0][0] = 1;\n\n        for (int len = 1; len <= n; ++len) \n        {\n            for (int inversions = 0; inversions <= maxi; ++inversions)\n            {\n                for (int newPos = 0; newPos < len; ++newPos) \n                {\n                    int prevInversions = inversions - newPos;\n                    \n                    if (prevInversions >= 0)\n                    {\n                        dp[len][inversions] = (dp[len][inversions] + dp[len - 1][prevInversions]) % MOD;\n                    }\n                }\n            }\n\n            if (inversionRequirements.count(len))\n            {\n                int requiredInversions = inversionRequirements[len];\n                \n                for (int inversions = 0; inversions <= maxi; ++inversions) \n                {\n                    if (inversions != requiredInversions) \n                    {\n                        dp[len][inversions] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        \n        for (long long c : dp[n]) \n        {\n            ans = (ans + c) % MOD;\n        }\n\n        return static_cast<int>(ans);\n    }\n    \n    private:\n    \n        static const int maxi = 400;\n    \n        static const int MOD = 1000000007;\n};\n",
    "submit_ts": "1719070576",
    "subm_id": "1296826446"
}