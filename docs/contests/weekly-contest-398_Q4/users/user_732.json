{
    "username": "umang_20",
    "submission": "class Solution {\npublic:\n    long long fact(long long val){\n        if(val<=2) return val;\n        long long ans = 1;\n        for(long long i=2; i<=val; i++){\n            ans*=i;\n        }\n        return ans;\n    }\n    \n    long long nCr(long long n, long long r) {\n        if (r > n) return 0;\n        // If r is 0 or equal to n, return 1\n        if (r == 0 || n == r) return 1;\n        // Initialize the logarithmic sum to 0\n        double res = 0;\n        // Calculate the logarithmic sum of the numerator and denominator using loop\n        for (int i = 0; i < r; i++) {\n            res += log(n-i) - log(i+1);\n        }\n        // Convert logarithmic sum back to a normal number\n        return (int)round(exp(res));\n    }\n    \n    int waysToReachStair(int k) {\n        if(k==0) return 2;\n        else if(k==1) return 4;\n        long long jump = 0;\n        long long pow2 = 1;\n        long long post = 1;\n        int ans = 0;\n        while(post<=k){\n            if(post==k) ans++;\n            post+=pow2;\n            pow2*=2ll;\n            jump++;\n        }\n        \n        int diff = post-k;\n        // cout<<ans<<\"\\n\";\n        // cout<<post<<\" \"<<jump+1<<\" \"<<diff;\n        return ans+nCr(jump+1, diff);\n        \n    }\n};",
    "submit_ts": "1716089415",
    "subm_id": "1261841646"
}