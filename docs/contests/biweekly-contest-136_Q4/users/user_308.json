{
    "username": "Utsavk02",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> adj;\n    vector<int> parent;\n    vector<int> curr;\n    vector<int> sub;\n    vector<int> ans;\n\n    void init(int n) {\n        adj.clear();\n        adj.resize(n);\n        parent.resize(n);\n        sub.resize(n);\n        ans.resize(n);\n        curr.resize(n);\n    }\n\n    void dfs(int i,int p) {\n        parent[i] = p;\n        curr[i] = 0;\n        if(p != -1)\n            curr[i] = curr[p] + (i%2 == 0 ? 2 : 1);\n        sub[i] = curr[i];\n        for(auto it:adj[i]) {\n            if(it == p)\n                continue;\n            dfs(it,i);\n            sub[i] = max(sub[i],sub[it]);\n        }\n    }\n\n    void dfs2(int i,int p) {\n        // if(p != -1)\n        // cout<<i<<\" \"<<p<<\" \"<<sub[p]<<endl;\n        ans[i] = sub[i]-curr[i];\n        int save = sub[i];\n        if(p != -1)\n            ans[i] = max(ans[i],sub[p]);\n        int first = 0,second = 0;\n        for(auto it:adj[i]) {\n            if(it != p) {\n                if(sub[it] > first) {\n                    second = first;\n                    first = sub[it];\n                }\n                else if(sub[it] > second) {\n                    second = sub[it];\n                }\n            }\n        }\n        for(auto it:adj[i]) {\n            if(it != p) {\n                sub[i] = 0;\n                if(sub[it] == first) {\n                    sub[i] = second-curr[i];\n                }\n                else {\n                    sub[i] = first-curr[i];\n                }\n                if(p != -1)\n                    sub[i] = max(sub[i],sub[p]);\n                sub[i] += (i%2 == 0 ? 2 : 1);\n                dfs2(it,i);\n                sub[i] = save;\n            }\n        }\n        \n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int i,j,k,n=edges.size()+1;\n        init(n);\n        for(auto edge:edges) {\n            adj[edge[0]].push_back(edge[1]);\n            adj[edge[1]].push_back(edge[0]);\n        }\n        dfs(0,-1);\n        // for(auto it:curr)\n        //     cout<<it<<\" \";\n        // cout<<endl;\n        // for(auto it:sub)\n        //     cout<<it<<\" \";\n        // cout<<endl;\n        dfs2(0,-1);\n        // for(auto it:sub)\n        //     cout<<it<<\" \";\n        // cout<<endl;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700375",
    "subm_id": "1343239971"
}