{
    "username": "silencea",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        M = 10 ** 9 + 7\n        \n        n = len(nums)\n        # at idx, with l1 = x, how many array it is\n        # n1[idx] >= l1, n2[idx] <= nums[idx - 1] - l1\n        # [2,3,2]\n        # 0 2 => dp[0][0] = 1\n        # 1,1 => dp[0][1] = 1\n        # 2,0 => dp[0][2] = 1\n        dp = [[0] * 1001 for _ in range(n)]\n        \n        # idx = 0\n        for l in range(0, nums[0] + 1):\n            dp[0][l] = 1 + (dp[0][l-1] if l > 0 else 0)\n        \n        for idx in range(1, n):\n            prefix = 0\n            for l1 in range(0, 1001):\n                l2 = nums[idx] - l1\n                if l2 < 0:\n                    break\n                upper = min(l1, nums[idx-1] - nums[idx] + l1)\n                cur = dp[idx-1][upper]\n                prefix += cur\n                dp[idx][l1] = prefix\n                # p1: 0 <= p1 <= l1\n                # p2: \n                # p2 >= l2 => nums[idx-1]-p1 >= nums[idx] - l1\n                # -p1 >= nums[idx] - l1 - nums[idx-1]\n                # p1 <= nums[idx - 1] - nums[idx] + l1\n                # min(l1, nums[idx-1]-nums[idx] + l1)\n                \n                # dp[idx][l1] = sum( dp[idx-1][0..l1])\n                \n                #\n                # for p1 in range(0, min(l1, nums[idx-1] - nums[idx] + l1) + 1):\n                #     dp[idx][l1] += dp[idx-1][p1] % M\n        \n        # print(dp[-1])\n        return max(dp[-1]) % M\n        \n            \n#         @lru_cache(None)\n#         def dp(idx, l1):\n#             if idx == len(nums):\n#                 return 1\n#             l2 = float('inf') if idx == 0 else nums[idx - 1] - l1\n#             cur = 0\n#             for i in range(max(l1, nums[idx]-l2), nums[idx] + 1):\n#                 n1 = i\n#                 n2 = nums[idx] - i\n        \n#                 # print(n1, n2, l1, l2)\n#                 if n1 >= l1 and n2 <= l2:\n#                     # print(dp(idx + 1, n1))\n#                     cur += dp(idx + 1, n1) % M\n#             return cur\n        \n#         return dp(0, 0) % M\n                ",
    "submit_ts": "1723347705",
    "subm_id": "1351603977"
}