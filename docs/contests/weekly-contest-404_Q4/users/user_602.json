{
    "username": "_ysahil",
    "submission": "class Solution {\npublic:\n    int help(vector<vector<int>>&graph){\n        int n = graph.size();\n        vector<vector<int>>adj(n+1);   \n        for(auto it : graph){\n            adj[it[1]].push_back(it[0]);\n            adj[it[0]].push_back(it[1]);\n        }\n        int res = 0;\n        rec(0,-1,adj,res);\n        return res;\n    }\n    int rec(int node,int par,vector<vector<int>>&adj,int &ans){\n        int ct=1;\n        int maxx1 = -1;\n        int maxx2 = -1;\n        for(auto it : adj[node]){\n            if(it != par){\n                int curr = rec(it,node,adj,ans);\n                if(maxx1<curr){\n                    maxx2 = maxx1;\n                    maxx1 = curr;\n                }\n                else if(maxx2<curr){\n                    maxx2 = curr;\n                }\n            }\n\n        }\n        \n        if(maxx1==-1 && (ct==1)) return 0;\n        if(maxx2==-1){\n            ans = max(ans , 1 + maxx1);\n            return 1 + maxx1;\n        }\n        ans = max(ans,maxx1+maxx2+2);\n        return 1 + maxx1;\n    }\n    \n\n\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& v1, vector<vector<int>>& v2) {\n        \n        int ct2 = help(v2);\n        int ct1 = help(v1);\n        int y = (ct2+1)/2;\n        int x = (ct1+1)/2;\n        \n        int ans = max(ct1,ct2);\n        ans = max(ans,1+y+x);\n        ans=max(ans,-1);\n        return ans;\n    }\n};",
    "submit_ts": "1719719553",
    "subm_id": "1304444796"
}