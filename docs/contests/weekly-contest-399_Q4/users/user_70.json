{
    "username": "chetan_saini21",
    "submission": "class Solution {\npublic:\n    \nconst long long MOD = 1e9 + 7;\n\nstruct treeNode {\n    long long a, b, c, d;\n};\n\ntreeNode tree[200100];\nint arr[50010];\n\ntreeNode mergeNodes(treeNode P, treeNode Q) {\n    treeNode temp;\n    temp.a = max({(P.a + Q.a) % MOD, (P.c + Q.a) % MOD, (P.a + Q.c) % MOD, \n                  (P.c + Q.b) % MOD, (P.c + Q.c) % MOD, (P.c + Q.d) % MOD});\n                  \n    temp.b = max({(P.b + Q.b) % MOD, (P.b + Q.c) % MOD, (P.c + Q.b) % MOD, \n                  (P.a + Q.c) % MOD, (P.c + Q.c) % MOD, (P.d + Q.c) % MOD});\n                  \n    temp.c = max({(P.c + Q.c) % MOD, (P.a + Q.c) % MOD, (P.c + Q.b) % MOD});\n    \n    temp.d = max({(P.b + Q.a) % MOD, (P.d + Q.a) % MOD, (P.b + Q.d) % MOD, \n                  (P.c + Q.c) % MOD});\n    \n    return temp;\n}\n\ntreeNode basicNode(int val) {\n    treeNode temp;\n    temp.a = 0;\n    temp.b = 0;\n    temp.c = 0;\n    temp.d = val % MOD;\n    return temp;\n}\n\nvoid build(int node, int start, int end) {\n    if (start == end) {\n        tree[node] = basicNode(arr[start]);\n    } else {\n        int mid = (start + end) / 2;\n        build(2 * node, start, mid);\n        build(2 * node + 1, mid + 1, end);\n        tree[node] = mergeNodes(tree[2 * node], tree[2 * node + 1]);\n    }\n}\n\nvoid update(int node, int start, int end, int idx, int val) {\n    if (start == end) {\n        arr[idx] = val % MOD;\n        tree[node] = basicNode(val);\n    } else {\n        int mid = (start + end) / 2;\n        if (start <= idx && idx <= mid) {\n            update(2 * node, start, mid, idx, val);\n        } else {\n            update(2 * node + 1, mid + 1, end, idx, val);\n        }\n        tree[node] = mergeNodes(tree[2 * node], tree[2 * node + 1]);\n    }\n}\n\nint maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n    long long ans = 0;\n    int n = nums.size();\n    for(int i = 0; i < n; i++) {\n        arr[i] = nums[i] % MOD;\n    }\n    build(1, 0, n - 1);\n    for(auto x : queries) {\n        int pos = x[0], val = x[1];\n        update(1, 0, n - 1, pos, val);\n        treeNode temp = tree[1];\n        long long sum = max({temp.a, temp.b, temp.c, temp.d}) % MOD;\n        ans = (ans + sum) % MOD;\n    }\n    return ans;\n}\n\n};",
    "submit_ts": "1716693931",
    "subm_id": "1268101136"
}