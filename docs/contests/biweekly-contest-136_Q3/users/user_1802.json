{
    "username": "ggstddu",
    "submission": "class Solution {\n public:\n  int minFlips(vector<vector<int>>& grid) {\n    int M = grid.size(), N = grid[0].size();\n    int ret = 0;\n    auto f  = [](int a, int b, int c, int d, int v) { return (a != v) + (b != v) + (c != v) + (d != v); };\n    for (int i = 0; i < M / 2; ++i) {\n      for (int j = 0; j < N / 2; ++j) {\n        int a, b, c, d;\n        a = grid[i][j];\n        b = grid[i][N - 1 - j];\n        c = grid[M - 1 - i][j];\n        d = grid[M - 1 - i][N - 1 - j];\n        ret += min(f(a, b, c, d, 0), f(a, b, c, d, 1));\n      }\n    }\n    int cnt = 0, cur = 0;\n    if (M % 2) {\n      int i = M / 2;\n      for (int j = 0; j < N / 2; ++j) {\n        if (grid[i][j] != grid[i][N - 1 - j]) cur++;\n        cnt += grid[i][j] + grid[i][N - 1 - j];\n      }\n    }\n    if (N % 2) {\n      int j = N / 2;\n      for (int i = 0; i < M / 2; ++i) {\n        if (grid[i][j] != grid[M - 1 - i][j]) cur++;\n        cnt += grid[i][j] + grid[M - 1 - i][j];\n      }\n    }\n    if (M % 2 && N % 2) ret += grid[M / 2][N / 2];\n    cnt %= 4;\n    if (cur < 2)\n      ret += min(min(cnt, 4 - cnt % 4), 2);\n    else\n      ret += cur;\n    return ret;\n  }\n};",
    "submit_ts": "1722698764",
    "subm_id": "552272416"
}