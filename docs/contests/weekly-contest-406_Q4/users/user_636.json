{
    "username": "raosonika4466",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, std::vector<int>& horizontalCut, std::vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end(), std::greater<int>());\n        std::sort(verticalCut.begin(), verticalCut.end(), std::greater<int>());\n        \n        long long totalCost = 0;\n        int horizontalSegments = 1;\n        int verticalSegments = 1;\n        int hIndex = 0, vIndex = 0;\n        \n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalSegments;\n                horizontalSegments++;\n                hIndex++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalSegments;\n                verticalSegments++;\n                vIndex++;\n            }\n        }\n        while (hIndex < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalSegments;\n            hIndex++;\n        }\n        while (vIndex < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalSegments;\n            vIndex++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925712",
    "subm_id": "1320263732"
}