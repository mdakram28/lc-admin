{
    "username": "Adarsh Kumar Dubey",
    "submission": "class Solution {\npublic:\n    int dp[100005][11];\n    int up[100005];\n    int solve(int i, int n, int t, int mod, int k, vector<vector<int>>& kmod){\n        if(i == n) return mod == 0;\n        if(dp[i][mod] != -1) return dp[i][mod];\n        int oi = t - i - 1;\n        int no = 0;\n        for(int dig=9; dig>=0; dig--){\n            int val = solve(i+1, n, t, (mod + kmod[i][dig] + ((oi != i) ? kmod[oi][dig] : 0)) % k, k, kmod);\n            // if(dig == 6 && i == n/2) cout << val << endl;\n            if(val){\n                up[i] = dig;\n                break;\n            }\n        }\n        return dp[i][mod] = (up[i] != -1);\n    }\n    string largestPalindrome(int n, int k) {\n        vector<vector<int>> kmod(n, vector<int>(10));\n        int num = 1;\n        for(int i=0; i<n; i++){\n            for(int j=1; j<10; j++){\n                kmod[i][j] = (num * j) % k;\n            }\n            num = (num * 10) % k;\n        }\n        memset(dp, -1, sizeof dp);\n        memset(up, -1, sizeof up);\n        string ans(n, '0');\n        solve(0, (n+1)/2, n, 0, k, kmod);\n        for(int i=0; i<(n+1)/2; i++){\n            ans[i] = '0' + up[i];\n            ans[n-i-1] = ans[i];\n        }\n        // cout << kmod[0][9] << \" \" << kmod[1][9] << \" \" << kmod[2][9] << endl;\n        return ans;\n    }\n};",
    "submit_ts": "1723953418",
    "subm_id": "1359820738"
}