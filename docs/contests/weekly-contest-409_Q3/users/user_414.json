{
    "username": "reverent-johnsonyfn",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        map<int,int> m;\n        int cur = n-1;\n        vector<int> res;\n        for(auto q:queries) {\n            if(m.empty()) {\n                if(q[1]-q[0]>1) {\n                    m[q[0]]=q[1];\n                    cur = cur-(q[1]-q[0]-1);\n                }\n            } else {\n                auto it = m.lower_bound(q[0]);\n                while(it!=m.end() && q[1]>=it->second) {\n                    cur=cur+(it->second-it->first-1);\n                    it=m.erase(it);\n                }\n\n                it = m.upper_bound(q[0]);\n                if(it!=m.begin()) {\n                    it--;\n                    if(it->first<=q[0] && it->second>=q[1]) {\n                        //nothing\n                    } else {\n                        if(q[1]-q[0]>1) {\n                            m[q[0]]=q[1];\n                            cur = cur-(q[1]-q[0]-1);\n                        }\n                    }\n                } else {\n                    if(q[1]-q[0]>1) {\n                        m[q[0]]=q[1];\n                        cur = cur-(q[1]-q[0]-1);\n                    }\n                }\n            }\n            res.push_back(cur);\n        }\n        return res;\n    }\n\n};",
    "submit_ts": "1722741685",
    "subm_id": "552339778"
}