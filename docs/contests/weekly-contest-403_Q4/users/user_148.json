{
    "username": "hayasaka-ai",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int qwq = INT_MAX;\n\n        for(int i = 0; i < m; i++) {\n            for(int j = i + 1; j < m; j++) {\n                int s1 = GetMin(grid, 0, i, 0, n - 1);\n                int s2 = GetMin(grid, i + 1, j, 0, n - 1);\n                int s3 = GetMin(grid, j + 1, m - 1, 0, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                int s1 = GetMin(grid, 0, m - 1, 0, i);\n                int s2 = GetMin(grid, 0, m - 1, i + 1, j);\n                int s3 = GetMin(grid, 0, m - 1, j + 1, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                int s1 = GetMin(grid, 0, i, 0, j);\n                int s2 = GetMin(grid, 0, i, j + 1, n - 1);\n                int s3 = GetMin(grid, i + 1, m - 1, 0, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                int s1 = GetMin(grid, 0, i, 0, n - 1);\n                int s2 = GetMin(grid, i + 1, m - 1, 0, j);\n                int s3 = GetMin(grid, i + 1, m - 1, j + 1, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                int s1 = GetMin(grid, 0, i, 0, j);\n                int s2 = GetMin(grid, i + 1, m - 1, 0, j);\n                int s3 = GetMin(grid, 0, m - 1, j + 1, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                int s1 = GetMin(grid, 0, m - 1, 0, j);\n                int s2 = GetMin(grid, 0, i, j + 1, n - 1);\n                int s3 = GetMin(grid, i + 1, m - 1, j + 1, n - 1);\n                if(s1 > 0 && s2 > 0 && s3 > 0) {\n                    qwq = min(qwq, s1 + s2 + s3);\n                }\n            }\n        }\n\n        return qwq;\n    }\n\nprivate:\n    int GetMin(vector<vector<int>>& grid, int L, int R, int T, int B) {\n        int n = grid.size(), m = grid[0].size();\n        int l = m, t = n, r = 0, b = 0;\n        bool f = false;\n        \n        for(int i = T; i <= B; i++) {\n            for(int j = L; j <= R; j++) {\n                if(grid[i][j] == 1) {\n                    f = 1;\n                    l = min(l, j);\n                    r = max(r, j);\n                    t = min(t, i);\n                    b = max(b, i);\n                }\n            }\n        }\n        if(!f) return 0;\n        return (r - l + 1) * (b - t + 1);\n    }\n};",
    "submit_ts": 1719113042.0
}