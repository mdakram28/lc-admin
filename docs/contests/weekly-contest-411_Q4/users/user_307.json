{
    "username": "Satyam Kumar",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) \n    {\n         vector<long long>finalAns;\n         int n=s.size();\n         vector<int>zero(n,0),one(n,0);\n         for(int i=0;i<n;i++)\n         {\n            if(s[i]=='0')\n            {\n                zero[i]=1;\n            }\n            else{\n                one[i]=1;\n            }\n            if(i>0)\n            {\n                zero[i]+=zero[i-1];\n                one[i]+=one[i-1];\n            }\n         }\n         vector<int>range(n,0);\n         vector<long long>rangeSum(n,0);\n         for(int i=0;i<n;i++)\n         {\n             int l=0;\n             int r=i;\n             int index=0;\n             while(l<=r)\n             {\n                 int mid=(l+r)/2;\n                 int totOne=one[i];\n                 int totZero=zero[i];\n                 if(mid>0)\n                 {\n                    totOne-=one[mid-1];\n                    totZero-=zero[mid-1];\n                 }\n\n                 int mxVal=min(totOne,totZero);\n                 if(mxVal>k)\n                 {\n                    l=mid+1;\n                 }\n                 else{\n                    index=mid;\n                    r=mid-1;\n                 }\n             }\n             range[i]=(i-index+1);\n             rangeSum[i]=(i-index+1);\n             if(i>0)\n             {\n                rangeSum[i]+=rangeSum[i-1];\n             }\n         }\n        //  for(int i=0;i<n;i++)\n        //  {\n        //     cout<<range[i]<<\" \";\n        //  }\n        //  cout<<endl;\n         for(int i=0;i<queries.size();i++)\n         {\n            int x=queries[i][0];\n            int y=queries[i][1];\n            int bestIndex=y+1;\n            int l=x;\n            int r=y;\n            while(l<=r)\n            {\n                 int mid=(l+r)/2;\n                 int totalrange=(mid-x+1);\n                 if(range[mid]<=totalrange)\n                 {\n                    bestIndex=mid;\n                    r=mid-1;\n                 }\n                 else{\n                    l=mid+1;\n                 }\n            }\n            long long ans=rangeSum[y];\n            if(bestIndex>0)\n            {\n                ans-=rangeSum[bestIndex-1];\n            }\n            //cout<<ans<<\" , \";\n            long long remaningRange=bestIndex-x;\n            long long extra=(remaningRange*1ll*(remaningRange+1))/2;\n            ans+=extra;\n            finalAns.push_back(ans);\n            cout<<bestIndex<<endl;\n         }\n         return finalAns;\n        \n        \n    }\n};",
    "submit_ts": "1723953557",
    "subm_id": "1359824543"
}