{
    "username": "Rakesh Swami",
    "submission": " /*\u0950 \u092d\u0942\u0930\u094d\u092d\u0941\u0935\u0903 \u0938\u094d\u0935 \u0924\u0924\u094d\u0938\u0935\u093f\u0924\u0941\u0930\u094d\u0935\u0930\u0947\u0923\u094d\u092f\u0902 \n\u092d\u0930\u094d\u0917\u094b \u0926\u0947\u0935\u0938\u094d\u092f \u0927\u0940\u092e\u0939\u093f\n\u0927\u093f\u092f\u094b \u092f\u094b \u0928\u0903 \u092a\u094d\u0930\u091a\u094b\u0926\u092f\u093e\u0924\u0965*/\n\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#define ll long long int\n#define vi vector<ll>\n#define vec vector<int>\n#define vs vector<string>\n#define pb push_back\n#define forll for (ll i = 0; i < n; i++)\n#define forf(i, a, b) for (ll i = a; i < b; i++)\n#define forr(i, x, y) for (ll i = x; i >= y; i--)\n#define mod 1000000007\n// #define MOD 998244353\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate <class T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        ll n = board.size();\n        ll m = board[0].size();\n        vector<multiset<ll,greater<ll>>> v_low(m + 1), v_up(m + 1);\n        for(int i = 0; i < m; ++i){\n            for(int j = 1; j < n; ++j){\n                v_low[i].insert(board[j][i]);\n            }\n        }\n        ll ans = -1e15;\n        // return ans;\n        for(ll j = 0; j < m; ++j){\n            v_up[j].insert(board[0][j]);\n        }\n        for(ll i = 1; i < n-1; ++i){\n            //ease current rown from all cols vector;\n            for(ll j = 0; j < m; ++j){\n                v_low[j].erase(v_low[j].find(board[i][j]));\n            }\n            vector<pair<ll,ll>> temp1, temp2, temp3;\n            for(int j = 0; j < m; ++j){\n                temp1.push_back({*v_up[j].begin(), j});\n            }\n            for(int j = 0; j < m; ++j){\n                temp2.push_back({board[i][j], j});\n            }\n            for(int j = 0; j < m; ++j){\n                temp3.push_back({*v_low[j].begin(), j});\n            }\n            sort(temp1.begin(), temp1.end());\n            sort(temp2.begin(), temp2.end());\n            sort(temp3.begin(), temp3.end());\n            for(ll ii = 0; ii < 3; ii++){\n                for(ll jj = 0; jj < 3; jj++){\n                    for(ll kk = 0; kk < 3; ++kk){\n                        if(temp1[m-1-ii].second != temp2[m-1-jj].second && temp1[m-1-ii].second != temp3[m-1-kk].second && temp2[m-1-jj].second != temp3[m-1-kk].second){\n                            ans = max(ans, temp1[m-1-ii].first + temp2[m-1-jj].first + temp3[m-1-kk].first);\n                        }\n                    }\n                }\n            }\n             for(ll j = 0; j < m; ++j){\n                v_up[j].insert(board[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723909759",
    "subm_id": "1359204711"
}