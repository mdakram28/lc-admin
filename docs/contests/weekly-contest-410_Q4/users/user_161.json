{
    "username": "didwhddks",
    "submission": "constexpr int mod = 1E9 + 7;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int n = nums.size();\n        \n        vector<int> dp(1001);\n        vector<int> pre(nums[0] + 2);\n        vector<int> y;\n        for (int i = 0; i <= nums[0]; ++i) {\n            dp[i] = 1;\n            pre[i + 1] = (pre[i] + dp[i]) % mod;\n            y.push_back(nums[0] - i);\n        }\n        for (int i = 1; i < n; ++i) {\n            vector<int> npre(nums[i] + 2);\n            vector<int> ny;\n            vector<int> ndp(1001);\n            for (int j = 0; j <= nums[i]; ++j) {\n                // 0 ~ j\n                // nums[i] - j ~ 1000\n                int x = y.size() - 1 - (lower_bound(y.rbegin(), y.rend(), nums[i] - j) - y.rbegin());\n                ndp[j] = pre[min({j, nums[i - 1], x}) + 1];\n                npre[j + 1] = (npre[j] + ndp[j]) % mod;\n                ny.push_back(nums[i] - j);\n            }\n            y = ny;\n            pre = npre;\n            dp = ndp;\n        }\n        // auto dfs = [&](auto &&self, int idx, int x) -> int {\n        //     if (idx == n) {\n        //         return 1;\n        //     }\n        //     if (~dp[idx][x]) {\n        //         return dp[idx][x];\n        //     }\n        //     int ans = 0;\n        //     for (int i = 0; i <= nums[idx]; ++i) {\n        //         int j = nums[idx] - i;\n        //         if (x > i || (idx == 0 ? 1000 : nums[idx - 1] - x) < j) {\n        //             continue;\n        //         }\n        //         ans = (ans + self(self, idx + 1, i)) % mod;\n        //     }\n        //     return dp[idx][x] = ans;\n        // };\n        // int ans = dfs(dfs, 0, 0);\n        int ans = 0;\n        for (auto x : dp) {\n            ans = (ans + x) % mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723345623",
    "subm_id": "1351559736"
}