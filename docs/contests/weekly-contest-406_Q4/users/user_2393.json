{
    "username": "RohanBhardwaj08",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long h = 1, v = 1; // 1 for h 0 for v\n        priority_queue<pair<int,int>> pq;\n        for(int i=0;i<m-1;i++){\n            pq.push({horizontalCut[i], 1});\n        }\n        for(int i=0;i<n-1;i++){\n            pq.push({verticalCut[i], 0});\n        }\n        long long ans = 0;\n        while(!pq.empty()){\n            pair<int,int> p = pq.top();\n            pq.pop();\n            if(p.second){\n                ans +=v*p.first;\n                h++;\n            }else{\n                ans += h*p.first;\n                v++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926762",
    "subm_id": "1320295664"
}