{
    "username": "pasricha_dhruv",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> arr(m + n - 2);\n        arr.reserve(n + m + 2);\n        for(int x : horizontalCut)\n        {\n            arr.push_back({x, 0});\n        }\n        for(int x : verticalCut)\n        {\n            arr.push_back({x, 1});\n        }\n        \n        sort(arr.begin(), arr.end()); \n        \n        long long h_cnt = 0, v_cnt = 0;\n        long long ans = 0;\n        for(int i = arr.size() - 1; i >= 0; --i)\n        {\n            if(arr[i].second == 1)\n            {\n                ans += (v_cnt + 1) * arr[i].first;\n                ++h_cnt;\n            }\n            else\n            {\n                ans += (h_cnt + 1) * arr[i].first;\n                ++v_cnt;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925423",
    "subm_id": "1320254236"
}