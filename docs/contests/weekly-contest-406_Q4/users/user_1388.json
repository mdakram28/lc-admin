{
    "username": "dinesh9936",
    "submission": "class Solution {\n    fun minimumCost(m: Int, n: Int, horizontalCut: IntArray, verticalCut: IntArray): Long {\n        val horizontalCuts = horizontalCut.sortedDescending()\n    val verticalCuts = verticalCut.sortedDescending()\n\n    var hIndex = 0\n    var vIndex = 0\n    var horizontalPieces = 1\n    var verticalPieces = 1\n    var totalCost:Long = 0\n\n    while (hIndex < horizontalCuts.size && vIndex < verticalCuts.size) {\n        if (horizontalCuts[hIndex] >= verticalCuts[vIndex]) {\n            // Apply a horizontal cut\n            totalCost += horizontalCuts[hIndex] * verticalPieces\n            hIndex++\n            horizontalPieces++\n        } else {\n            // Apply a vertical cut\n            totalCost += verticalCuts[vIndex] * horizontalPieces\n            vIndex++\n            verticalPieces++\n        }\n    }\n\n    // Add remaining horizontal cuts\n    while (hIndex < horizontalCuts.size) {\n        totalCost += horizontalCuts[hIndex] * verticalPieces\n        hIndex++\n        horizontalPieces++\n    }\n\n    // Add remaining vertical cuts\n    while (vIndex < verticalCuts.size) {\n        totalCost += verticalCuts[vIndex] * horizontalPieces\n        vIndex++\n        verticalPieces++\n    }\n\n    return totalCost\n    }\n}",
    "submit_ts": "1720925626",
    "subm_id": "1320260940"
}