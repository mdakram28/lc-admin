{
    "username": "lxhgww",
    "submission": "class Solution {\npublic:\n    unordered_map<int,int> f;\n    int g[2][400001];\n    int y[2][400001];\n    void init(int x,int l,int r) {\n        if (l==r) {\n            g[0][x]=0;\n            g[1][x]=-1e8;\n        } else {\n            int m=(l+r)/2;\n            init(2*x,l,m);\n            init(2*x+1,m+1,r);\n            g[0][x]=0;\n            g[1][x]=-1e8;\n        }\n    }\n    void insert(int x,int l,int r,int p,int h,int w,int yy) {\n        if (l==r) {\n            if (h+w>g[0][x]) {\n                g[0][x]=h+w;\n                y[0][x]=yy;\n            }\n            if (h-w>g[1][x]) {\n                g[1][x]=h-w;\n                y[1][x]=yy;\n            }\n        } else {\n            int m=(l+r)/2;\n            if (p<=m) insert(2*x,l,m,p,h,w,yy);\n            else insert(2*x+1,m+1,r,p,h,w,yy);\n            if (g[0][2*x]>=g[0][2*x+1]) {\n                g[0][x]=g[0][2*x];\n                y[0][x]=y[0][2*x];\n            } else {\n                g[0][x]=g[0][2*x+1];\n                y[0][x]=y[0][2*x+1];\n            }\n            if (g[1][2*x]>=g[1][2*x+1]) {\n                g[1][x]=g[1][2*x];\n                y[1][x]=y[1][2*x];\n            } else {\n                g[1][x]=g[1][2*x+1];\n                y[1][x]=y[1][2*x+1];\n            }\n        }\n    }\n    \n    pair<int,int> query0(int x,int l,int r,int p) {\n        if (l==r) return make_pair(g[0][x],y[0][x]);\n        else {\n            int m=(l+r)/2;\n            if (p<=m) {\n                pair<int,int> ret=query0(2*x,l,m,p);\n                if (ret.first<g[0][2*x+1]) return make_pair(g[0][2*x+1],y[0][2*x+1]);\n                else return ret;\n            } else {\n                return query0(2*x+1,m+1,r,p);\n            }\n        }\n    }\n    \n    pair<int,int> query1(int x,int l,int r,int p) {\n        if (l==r) return make_pair(g[1][x],y[1][x]);\n        else {\n            int m=(l+r)/2;\n            if (p<=m) {\n                return query1(2*x,l,m,p);\n            } else {\n                pair<int,int> ret=query1(2*x+1,m+1,r,p);\n                if (ret.first<g[1][2*x]) return make_pair(g[1][2*x],y[1][2*x]);\n                else return ret;\n            }\n        }\n    }\n\n    int minimumDistance(vector<vector<int>>& p) {\n       sort(p.begin(),p.end());\n        int n=p.size();\n        vector<int> b(n);\n        for (int i=0;i<n;i++)\n            b[i]=p[i][1];\n        sort(b.begin(),b.end());\n        for (int i=0;i<n;i++)\n            f[b[i]]=i;\n        \n        init(1,0,n-1);\n        int mm=0;\n        int xx=0;\n        int yy=1;\n        int j=n-1;\n        for (int i=n-1;i>=0;i--) {\n            while (j>=0&&p[i][0]==p[j][0]) {\n                insert(1,0,n-1,f[p[j][1]],p[j][0],p[j][1],j);\n                j--;\n            }\n            pair<int,int> r1=query0(1,0,n-1,f[p[i][1]]);\n            int dis=r1.first-p[i][0]-p[i][1];\n            if (mm<dis) {\n                mm=dis;\n                xx=r1.second;\n                yy=i;\n            }\n            r1=query1(1,0,n-1,f[p[i][1]]);\n            dis=r1.first-p[i][0]+p[i][1];\n            if (mm<dis) {\n                mm=dis;\n                xx=r1.second;\n                yy=i;\n            }\n        }\n        //printf(\"%d %d %d\\n\",mm,xx,yy);\n        \n        init(1,0,n-1);\n        int mm1=0;\n        j=n-1;\n        for (int i=n-1;i>=0;i--) {\n            while (j>=0&&p[i][0]==p[j][0]) {\n                if (j!=xx) insert(1,0,n-1,f[p[j][1]],p[j][0],p[j][1],j);\n                j--;\n            }\n            if (i==xx) continue;\n            pair<int,int> r1=query0(1,0,n-1,f[p[i][1]]);\n            int dis=r1.first-p[i][0]-p[i][1];\n            if (mm1<dis) {\n                mm1=dis;\n            }\n            r1=query1(1,0,n-1,f[p[i][1]]);\n            dis=r1.first-p[i][0]+p[i][1];\n            if (mm1<dis) {\n                mm1=dis;\n            }\n        }\n        \n        init(1,0,n-1);\n        int mm2=0;\n        j=n-1;\n        for (int i=n-1;i>=0;i--) {\n            while (j>=0&&p[i][0]==p[j][0]) {\n                if (j!=yy) insert(1,0,n-1,f[p[j][1]],p[j][0],p[j][1],j);\n                j--;\n            }\n            //printf(\"g0 %d %d %d\\n\",g[0][1],g[0][2],g[0][4]);\n            //printf(\"g1 %d %d %d\\n\",g[1][1],g[1][2],g[1][4]);\n            if (i==yy) continue;\n            pair<int,int> r1=query0(1,0,n-1,f[p[i][1]]);\n            int dis=r1.first-p[i][0]-p[i][1];\n            //printf(\"rig %d %d %d\\n\",i,r1.second,dis);\n            if (mm2<dis) {\n                mm2=dis;\n            }\n            r1=query1(1,0,n-1,f[p[i][1]]);\n            dis=r1.first-p[i][0]+p[i][1];\n            //printf(\"lef %d %d %d\\n\",i,r1.second,dis);\n            if (mm2<dis) {\n                mm2=dis;\n            }\n        }\n        \n        //printf(\"%d %d\\n\",mm1,mm2);\n        return min(mm1,mm2);\n    }\n};"
}