{
    "username": "nickshair",
    "submission": "class Solution {\npublic:\n    int minFlips(std::vector<std::vector<int>>& grid) {\n        \n        const int HEIGHT = grid.size();\n        const int WIDTH = grid[0].size();\n\n        int result = 0;\n        for (int i = 0; i < HEIGHT / 2; ++i){\n            result += flipsToMakeTwoRowPalindromic(i, HEIGHT-i-1, grid);\n        }\n\n        int longOnes = 0;\n        int pairOnes = 0;\n        if (HEIGHT % 2 == 1){\n            int nowFixed = HEIGHT / 2;\n            for (int i = 0; i < WIDTH / 2; ++i){\n                if (grid[nowFixed][i] != grid[nowFixed][WIDTH-i-1])\n                    ++longOnes;\n                else if (grid[nowFixed][i] == 1)\n                    pairOnes += 2;\n            }\n        }\n        if (WIDTH % 2 == 1){\n            int nowFixed = WIDTH / 2;\n            for (int i = 0; i < HEIGHT / 2; ++i){\n                if (grid[i][nowFixed] != grid[HEIGHT-i-1][nowFixed])\n                    ++longOnes;\n                else if (grid[i][nowFixed] == 1)\n                    pairOnes += 2;\n            }\n        }\n        pairOnes %= 4;\n        if (pairOnes == 2){\n            if (longOnes > 0){\n                result += 1;\n                longOnes -= 1;\n            }\n            else\n                result += 2;\n        }\n        result += longOnes;\n\n        if (HEIGHT % 2 == 1 && WIDTH % 2 == 1 && grid[HEIGHT / 2][WIDTH / 2] == 1)\n            result += 1;\n        \n        return result;\n    }\nprivate:\n    int flipsToMakeTwoRowPalindromic(int r1, int r2, const std::vector<std::vector<int>>& grid) const {\n        \n        const int WIDTH = grid[0].size();\n        \n        int result = 0;\n        for (int i = 0; i < WIDTH / 2; ++i){\n            int count = grid[r1][i] + grid[r2][i] + grid[r1][WIDTH-i-1] + grid[r2][WIDTH-i-1];\n            if (count > 2)\n                count = 4 - count;\n            result += count;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1722698651",
    "subm_id": "1343187490"
}