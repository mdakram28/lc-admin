{
    "username": "snooooopy",
    "submission": "struct TrieNode {\npublic:\n    TrieNode* next[26];\n    bool isWord = false;\n    int cost = 1e9;\n\n    TrieNode() {\n        memset(next, 0, sizeof next);\n    }\n};\nclass Trie {\npublic:\n    TrieNode* root;\n    Trie() {\n        root = new TrieNode();\n    }\n    void insert(string word, int cost) {\n        TrieNode* cur = root;\n        for (char c: word) {\n            if (cur->next[c-'a'] == nullptr) {\n                cur->next[c-'a'] = new TrieNode();\n            }\n            cur = cur->next[c-'a'];\n        }\n        cur->isWord = true;\n        cur->cost=  min(cur->cost, cost);\n    }\n};\nclass Solution {\npublic:\n    int dp[50005];\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie;\n        int n = target.size();\n        vector<int> dp(n+1, 1e9);\n        for (int i = 0; i < words.size(); i++) {\n            trie.insert(words[i], costs[i]);\n        }\n        dp[0] = 0;\n        for (int i = 0; i < n; i++) {\n            if (dp[i] == 1e9)\n                continue;\n            TrieNode* node = trie.root;\n            for (int j = i; j < n; j++) {\n                if (node->next[target[j]-'a'] == nullptr) {\n                    break;\n                }\n                node = node->next[target[j]-'a'];\n                if (node->cost < 1e9) {\n                    dp[j+1] = min(dp[j+1], dp[i] + node->cost);\n                }\n            }\n        }\n        return dp[n] >= 1e9 ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720324317",
    "subm_id": "1312396598"
}