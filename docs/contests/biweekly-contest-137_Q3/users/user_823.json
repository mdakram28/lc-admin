{
    "username": "Mohammad Ibraheem Qureshi",
    "submission": "class Solution:\n\n\n    def mx(self,a):\n        out = [0,1,2]\n        out.sort(key = lambda x: a[x],reverse = True)\n        for i in range(3,len(a)):\n            if a[i] >= a[out[0]]:\n                out[0] , out[1] , out[2] = i , out[0] , out[1]\n            elif a[i] >= a[out[1]]:\n                out[1] , out[2] = i , out[1]\n            elif a[i] >= a[out[2]]:\n                out[2] = i               \n        return out\n\n    # def val(self,b,a,i):\n    #     return tuple(b[i][j] for j in a)\n\n    # def mxa(self,a,b):\n    #     out = [0,1,2]\n    #     out.sort(key = lambda x: self.val(b,a[x],x),reverse = True)\n    #     for i in range(3,len(a)):\n    #         if self.val(b,a[i],i) >= self.val(b,a[out[0]],out[0]):\n    #             out[0] , out[1] , out[2] = i , out[0] , out[1]\n    #         elif self.val(b,a[i],i) >= self.val(b,a[out[1]],out[1]):\n    #             out[1] , out[2] = i , out[1]\n    #         elif self.val(b,a[i],i) >= self.val(b,a[out[2]],out[2]):\n    #             out[2] = i               \n    #     return out\n\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n , m = len(board),len(board[0])\n        d = []\n        for r in range(n):\n            d.append(self.mx(board[r]))\n        # p = self.mxa(d,board)\n        # print(p)\n        out = float('-inf')\n        for x in range(n-2):\n            for y in range(x+1,n-1):\n                for z in range(y+1,n):\n                    for i in range(3):\n                        for j in range(3):\n                            for k in range(3):\n                                r1,c1 = x , d[x][i]\n                                r2,c2 = y , d[y][j]\n                                r3,c3 = z , d[z][k]\n                                if c1 != c2 != c3 != c1:\n                                    out = max(out , board[r1][c1]+board[r2][c2]+board[r3][c3])\n\n        return out\n",
    "submit_ts": "1723909572",
    "subm_id": "1359197618"
}