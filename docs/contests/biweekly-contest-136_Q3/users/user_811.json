{
    "username": "bulbasaur_vb",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        rows = len(grid)\n        cols = len(grid[0])\n        res = 0\n        for x in range(rows // 2):\n            for y in range(cols // 2):\n                cnt = [0, 0]\n                cnt[grid[x][y]] += 1\n                cnt[grid[rows - 1 - x][y]] += 1\n                cnt[grid[x][cols - 1 - y]] += 1\n                cnt[grid[rows - 1 - x][cols - 1 - y]] += 1\n                res += 4 - max(cnt)\n        \n        if rows % 2 == 1 and cols % 2 == 1 and grid[rows//2][cols//2] == 1:\n            grid[rows//2][cols//2] = 0\n            res += 1      \n    \n        colsum = 0\n        rowsum = 0\n        mincol = 0\n        minrow = 0\n        \n        if cols % 2 == 1:\n            col = cols // 2\n            for x in range(rows // 2):\n                mincol += 1 if grid[x][col] != grid[rows - 1 -x][col] else 0\n                colsum += grid[x][col]\n        \n        if rows % 2 == 1:\n            row = rows // 2\n            for x in range(cols // 2):\n                minrow += 1 if grid[row][x] != grid[row][cols - 1 -x] else 0\n                rowsum += grid[row][x]\n                \n        if mincol + minrow > 0 or (rowsum + colsum) % 2 == 0:\n            return res + mincol + minrow\n        \n        return res + 2 \n",
    "submit_ts": "1722698453",
    "subm_id": "1343181069"
}