{
    "username": "arghyadeep04",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nclass TrieNode{\n    bool avl;\n    ll length,cost;\n    vector<TrieNode*>childs;\npublic:\n    TrieNode(){\n        childs.assign(26,NULL);\n        avl=0;length=0;cost=1e18;\n    }\n    void insertKey(char x){\n        if(childs[x-'a']==NULL)childs[x-'a']=new TrieNode;\n    }\n    void setKey(ll len,ll price){\n        cost=min(cost,price);\n        length=len;\n        avl=1;\n    }\n    TrieNode*getKey(char x){\n        return childs[x-'a'];\n    }\n    bool isAvl(){\n        return avl;\n    }\n    ll getCost(){\n        return cost;\n    }\n    ll getLen(){\n        return length;\n    }\n};\n\nclass Trie{\n    TrieNode*root;\npublic:\n    Trie(){\n        root=new TrieNode;\n    }\n    ll getAllCosts(string&s,int i,vector<ll>&dpArr){\n        ll ans=1e10;\n        TrieNode*node=root;\n        for(int c=i;c<s.length();c++){\n            node=node->getKey(s[c]);\n            if(node==NULL)break;\n            if(node->isAvl()){\n                ans=min(ans,node->getCost()+dpArr[i+node->getLen()]);\n            }\n        }\n        return ans;\n    }\n    void insertWord(string&s,ll price){\n        TrieNode*node=root;\n        for(auto c:s){\n            node->insertKey(c);\n            node=node->getKey(c);\n        }\n        node->setKey(s.length(),price);\n    }\n};\n \nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie ptree;\n        for(int i=0;i<words.size();i++){\n            ptree.insertWord(words[i],costs[i]);\n        }\n        int n=target.length();\n        vector<ll>dpArr(n+1);\n        for(ll i=n-1;i>=0;i--){\n            dpArr[i]=ptree.getAllCosts(target,i,dpArr);\n        }\n        return dpArr[0]<1e9?dpArr[0]:-1;\n    }\n};",
    "submit_ts": "1720321795",
    "subm_id": "1312332493"
}