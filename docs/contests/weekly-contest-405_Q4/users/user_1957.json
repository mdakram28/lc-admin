{
    "username": "ashishsutar1210",
    "submission": "int dp[50005];\nclass TrieNode {\n    private:\n    \npublic:\n    // int cost;\n    TrieNode* ch[26];\n    vector<pair<int,int>>res;\n    TrieNode() {\n        for(int i=0;i<26;++i)ch[i] = nullptr;\n    }\n};\n\nclass Trie {\n    string p;\npublic:\n    TrieNode* root;\n    Trie(const string& s) {\n        p = s;\n        root = new TrieNode();\n    }\n    void insert(const string& word, int cost,int id) {\n        TrieNode* node = root;\n        for (char c : word) \n        {\n            int x = c-'a';\n            if (node->ch[x] == nullptr) \n            {\n                node->ch[x] = new TrieNode();\n            }\n            node = node->ch[x];\n        }\n        // node->cost = min(node->cost, cost);\n        node->res.push_back({id,cost});\n    }\n//     int  find(const string& t, int st,int n) {\n        \n//         TrieNode* x = root;\n//         for(int i=st,i<n;++i)\n//         {\n//             if(x->ch[t[i]-'a'] == nullptr)return INT_MAX;\n//             x = x->ch[t[i]-'a'];\n//             for(auto& re : x->res)\n//             {\n//                 if(st+)\n//             }\n//         }\n//     }\n};\nclass Solution {\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& costs) {\n        int n = t.size();\n        dp[0] = 0;\n        for(int i=1;i<=n;++i)\n            dp[i] = 2e9;\n        int m = w.size();\n        Trie a(t);\n        for(int i=0;i<m;++i)\n        {\n            a.insert(w[i],costs[i],i);\n        }\n        for(int i=0;i<n;++i)\n        {\n            if(dp[i]!=2e9)\n            {\n                // auto x = a.find(t,i);\n                // for(const auto &it : x)\n                // {\n                //     dp[it.first] = min(dp[it.first],dp[i] + it.second);\n                // }\n                TrieNode* x = a.root;\n                for(int len=0;i+len<n;++len)\n                {\n                    if(x->ch[t[i+len]-'a'] == nullptr)break;\n                    x = x->ch[t[i+len]-'a'];\n                    for(auto& re : x->res)\n                    {\n                        int p = dp[i+w[re.first].size()];\n                        p = min(p,dp[i] + re.second);\n                        dp[i+w[re.first].size()] = p;\n                    }\n                }\n            }\n        }\n        if(dp[n] == 2e9)return -1;\n        return dp[n];\n    }\n};",
    "submit_ts": "1720324708",
    "subm_id": "1312406060"
}