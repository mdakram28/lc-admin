{
    "username": "elastic-bassiejo",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, h: List[int], v: List[int]) -> int:\n        # \u5148\u5207\u5927\u7684\n        ans = 0\n        resh = 1\n        resv = 1\n        h.sort(reverse=True)\n        pre_h = list(accumulate(h, initial = 0))\n        sm_h = sum(h)\n        v.sort(reverse=True)\n        pre_v = list(accumulate(v, initial = 0))\n        sm_v = sum(v)\n        l = r = 0\n        while l < m - 1 and r < n - 1:\n            # if h[l] + sm_v - pre_v[r] >= v[r] + sm_h - pre_h[l]:\n            if h[l] >= v[r]:\n                ans += h[l] * resh\n                resv += 1\n                l += 1\n            else:\n                ans += v[r] * resv\n                resh += 1\n                r += 1\n        while l < m - 1:\n            ans += h[l] * resh\n            l += 1\n        while r < n - 1:\n            ans += v[r] * resv\n            r += 1\n        \n    \n        return ans",
    "submit_ts": "1720926018",
    "subm_id": "546443486"
}