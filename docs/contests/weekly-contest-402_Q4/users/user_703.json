{
    "username": "LoHhhha",
    "submission": "class Solution {\n    class Segment{\n        void update(int x,int d,int sl,int sr,int ptr){\n            if(sl==sr){\n                Tree[ptr]+=d;\n                return;\n            }\n            int mid=(sl+sr)/2;\n            if(x<=mid){\n                update(x,d,sl,mid,ptr<<1|1);\n            }\n            else{\n                update(x,d,mid+1,sr,(ptr<<1)+2);\n            }\n            Tree[ptr]=Tree[ptr<<1|1]+Tree[(ptr<<1)+2];\n        }\n        int quary(int l,int r,int sl,int sr,int ptr){\n            if(l<=sl&&sr<=r){\n                return Tree[ptr];\n            }\n            int mid=(sl+sr)/2;\n            int ans=0;\n            if(l<=mid){\n                ans+=quary(l,r,sl,mid,ptr<<1|1);\n            }\n            if(mid+1<=r){\n                ans+=quary(l,r,mid+1,sr,(ptr<<1)+2);\n            }\n            return ans;\n        }\n    public:\n        int n;\n        vector<int>Tree;\n        Segment(int n):n(n){\n            Tree.resize(n<<2);\n        }\n        void update(int x,int d){\n            update(x,d,0,n-1,0);\n        }\n        int quary(int l,int r){\n            if(r<l)return 0;\n            return quary(l,r,0,n-1,0);\n        }\n    };\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        Segment seg(n);\n        vector<int>had(n);\n        for(int i=1;i+1<n;i++){\n            if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                had[i]=1;\n                seg.update(i,1);\n            }\n        }\n        vector<int>res;\n        for(auto &q:queries){\n            if(q[0]==1){\n                res.push_back(seg.quary(q[1]+1,q[2]-1));\n            }\n            else{\n                nums[q[1]]=q[2];\n                for(int i=max(1,q[1]-2);i+1<min(n,q[1]+3);i++){\n                    if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){\n                        if(!had[i]){\n                            had[i]=1;\n                            seg.update(i,1);\n                        }\n                    }\n                    else if(had[i]){\n                        had[i]=0;\n                        seg.update(i,-1);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718507690.0
}