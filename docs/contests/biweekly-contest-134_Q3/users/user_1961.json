{
    "username": "mixzncionud01997",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        \nint numFound = 0;\n\n        int i = 0;\n\n        int j = 1;\n\n        int n = colors.size();\n\n        \n\n        while (j < n + k && i < n) {\n\n            int tempJ = j;\n\n            int tempEnd = tempJ % n;\n\n            \n\n            // Find the end of the current alternating group\n\n            while (colors[tempEnd] != colors[(tempEnd - 1 + n) % n] && tempJ < n + k - 1) {\n\n                tempJ++;\n\n                tempEnd = tempJ % n;\n\n            }\n\n            \n\n            // Calculate the number of groups found\n\n            numFound += max(tempJ - i - k + 1, 0);\n\n            i = tempJ;\n\n            j = i + 1;\n\n        }\n\n        \n\n        return numFound;\n        \n        }\n    };\n\n\n\n\n",
    "submit_ts": "1720281527",
    "subm_id": "1311828460"
}