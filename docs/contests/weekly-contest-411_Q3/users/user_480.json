{
    "username": "Ryan",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            return '9' * n\n        if k == 2:\n            res = '8' + '9' * (n - 2) + '8' if n > 1 else '8'\n            return res\n        if k == 4:\n            if n == 1:\n                return \"8\"\n            if n == 2:\n                return \"88\"\n            if n == 3:\n                return \"888\"\n            if n == 4:\n                return \"8888\"\n            res = \"88\" + '9' * (n - 4) + \"88\"\n            return res\n        if k == 5:\n            res = \"5\" + '9' * (n - 2) + \"5\" if n > 1 else \"5\"\n            return res\n        if k == 8:\n            if n == 1:\n                return \"8\"\n            if n == 2:\n                return \"88\"\n            if n == 3:\n                return \"888\"\n            if n == 4:\n                return \"8888\"\n            if n == 5:\n                return \"88888\"\n            if n == 6:\n                return \"888888\"\n            res = \"888\" + '9' * (n - 6) + \"888\"\n            return res\n        if k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            if n == 3:\n                return \"888\"\n            if n == 4:\n                return \"8778\"\n            if n == 5:\n                return \"89898\"\n            if n == 6:\n                return \"897798\"\n            if n % 2:\n                half_len = (n - 1) // 2 - 1\n                res = '8' + '9' * half_len + '8' + '9' * half_len + '8'\n            else:\n                half_len = (n - 4) // 2\n                res = '8' + '9' * half_len + '77' + '9' * half_len + '8'\n            return res\n        \n        # For k == 7 or others\n        if n == 1:\n            return \"7\"\n        if n == 2:\n            return \"77\"\n        \n        return self.helperFor7(n)\n\n    def helperFor7(self, n: int) -> str:\n        palindrome = \"\"\n        adjustment_factors = [1, 3, 2, -1, -3, -2]\n        total_sum = 0\n        for i in range(n):\n            palindrome += '9'\n            total_sum += 9 * adjustment_factors[i % 6]\n        \n        if total_sum % 7 == 0:\n            return palindrome\n        \n        if n % 2 == 0:\n            half_len = n // 2\n            position = (half_len - 1) % 6\n            for i in range(8, -1, -1):\n                if (total_sum - (9 - i) * adjustment_factors[position] - (9 - i) * adjustment_factors[(position + 1) % 6]) % 7 == 0:\n                    palindrome = palindrome[:half_len-1] + str(i) + str(i) + palindrome[half_len+1:]\n                    return palindrome\n            \n            for i in range(98, -1, -1):\n                x = i // 10\n                y = i % 10\n                if (total_sum - (9 - x) * adjustment_factors[position] - (9 - x) * adjustment_factors[(position + 1) % 6] - (9 - y) * adjustment_factors[(position + 5) % 6] - (9 - y) * adjustment_factors[(position + 2) % 6]) % 7 == 0:\n                    palindrome = palindrome[:half_len-2] + str(x) + str(y) + palindrome[half_len+2:]\n                    return palindrome\n            \n            for i in range(998, -1, -1):\n                x = i // 100\n                y = (i % 100) // 10\n                z = i % 10\n                if (total_sum - (9 - x) * adjustment_factors[position] - (9 - y) * adjustment_factors[(position + 5) % 6] - (9 - z) * adjustment_factors[(position + 2) % 6] - (9 - z) * adjustment_factors[(position + 3) % 6]) % 7 == 0:\n                    palindrome = palindrome[:half_len-3] + str(x) + str(y) + str(z) + palindrome[half_len+3:]\n                    return palindrome\n        else:\n            mid_position = n // 2\n            position = mid_position % 6\n            for i in range(8, -1, -1):\n                if (total_sum - (9 - i) * adjustment_factors[position]) % 7 == 0:\n                    palindrome = palindrome[:mid_position] + str(i) + palindrome[mid_position+1:]\n                    return palindrome\n            \n            for i in range(98, -1, -1):\n                x = i // 10\n                y = i % 10\n                if (total_sum - (9 - x) * adjustment_factors[position] - (9 - y) * adjustment_factors[(position + 5) % 6] - (9 - y) * adjustment_factors[(position + 1) % 6]) % 7 == 0:\n                    palindrome = palindrome[:mid_position-1] + str(x) + str(y) + palindrome[mid_position+1:]\n                    return palindrome\n            \n            for i in range(998, -1, -1):\n                x = i // 100\n                y = (i % 100) // 10\n                z = i % 10\n                if (total_sum - (9 - x) * adjustment_factors[position] - (9 - y) * adjustment_factors[(position + 5) % 6] - (9 - z) * adjustment_factors[(position + 2) % 6]) % 7 == 0:\n                    palindrome = palindrome[:mid_position-2] + str(x) + str(y) + str(z) + palindrome[mid_position+2:]\n                    return palindrome\n        \n        return palindrome\n",
    "submit_ts": "1723952688",
    "subm_id": "1359802205"
}