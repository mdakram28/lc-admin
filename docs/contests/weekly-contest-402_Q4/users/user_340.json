{
    "username": "sourav_suku",
    "submission": "class Solution {\npublic:\n    int query(vector<int>& tree,int ind){\n        int ret=0;\n        while(ind){\n            ret+=tree[ind];\n            ind-=(ind&-ind);\n        }\n        return ret;\n    }\n    void update(vector<int>& tree,int ind,int upd){\n        int siz=tree.size()-1;\n        while(ind<=siz){\n            tree[ind]+=upd;\n            ind+=(ind&-ind);\n        }\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        vector<int> peak(nums.size());\n        vector<int> tree(nums.size()+1);\n        for(int i=1;i<nums.size()-1;++i){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1])peak[i]=1;\n            update(tree,i+1,peak[i]);\n        }\n        vector<int> res;\n        for(auto &q:queries){\n            if(q[0]==1){\n                int l=q[1],r=q[2];  l++;    r--;\n                int val=0;\n                if(l<=r){\n                    val+=query(tree,r+1);\n                    if(l)val-=query(tree,l);\n                }\n                res.push_back(val);\n            }else{\n                int ind=q[1];   int upd=q[2];\n                if(ind){\n                    if(peak[ind-1]&&nums[ind-1]<=upd){peak[ind-1]=0;  update(tree,ind,-1);}\n                    else if(!peak[ind-1]){\n                        if(ind-2>=0 && nums[ind-1]>nums[ind-2] && nums[ind-1]>upd){\n                            peak[ind-1]=1;  update(tree,ind,1);\n                        }\n                    }\n                }\n                if(ind+1<nums.size()){\n                    if(peak[ind+1]&&nums[ind+1]<=upd){peak[ind+1]=0;  update(tree,ind+2,-1);}\n                    else if(!peak[ind+1]){\n                        if(ind+2<nums.size() && nums[ind+1]>nums[ind+2] && nums[ind+1]>upd){\n                            peak[ind+1]=1;  update(tree,ind+2,1);\n                        }\n                    }\n                }\n                if(peak[ind]&&(upd<=nums[ind-1] || upd<=nums[ind+1])){\n                    peak[ind]=0;    update(tree,ind+1,-1);\n                }else if(!peak[ind] && (ind!=0 && ind+1<nums.size()) && (upd>nums[ind-1] && upd>nums[ind+1])){\n                    peak[ind]=1;    update(tree,ind+1,1);\n                }\n                nums[ind]=upd;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718507547.0
}