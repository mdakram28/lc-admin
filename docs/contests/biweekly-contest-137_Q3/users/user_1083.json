{
    "username": "Wang Zhizhi",
    "submission": "class Solution {\npublic:\n    int64_t maximumValueSum(std::vector<std::vector<int>>& board) {\n        int64_t res = INT64_MIN;\n        int m = board.size(), n = board[0].size();\n        int64_t left[3][n], right[3][n], value[3][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                value[0][j] = board[i][j];\n            }\n            for (int j = i + 1; j < m; j++) {\n                for (int k = 0; k < n; k++) {\n                    value[1][k] = board[j][k];\n                }\n                for (int k = j + 1; k < m; k++) {\n                    for (int s = 0; s < n; s++) {\n                        value[2][s] = board[k][s];\n                    }\n\n                    for (int t = 0; t <= 2; t++) {\n                        for (int r = 0; r < n; r++) {\n                            left[t][r] = r == 0 ? value[t][0] : std::max(left[t][r - 1], value[t][r]);\n                        }\n                        for (int y = n - 1; y >= 0; y--) {\n                            right[t][y] = y == n - 1 ? value[t][n - 1] : std::max(right[t][y + 1], value[t][y]);\n                        }\n                    }\n                    for (int x = 1; x < n - 1; x++) {\n                        res = std::max({\n                            res,\n                            value[2][x] + max(left[0][x - 1] + right[1][x + 1], right[0][x + 1] + left[1][x - 1]),\n                            value[1][x] + max(left[0][x - 1] + right[2][x + 1], right[0][x + 1] + left[2][x - 1]),\n                            value[0][x] + max(left[1][x - 1] + right[2][x + 1], right[1][x + 1] + left[2][x - 1])\n                        });\n                    }\n\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723909961",
    "subm_id": "556338837"
}