{
    "username": "likheetshetty",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        flips = 0\n        \n        if n % 2 == 1 and m % 2 == 1:\n            if grid[n // 2][m // 2] == 1:\n                flips += 1\n\n        change_count = [0] * 3\n        if n % 2 == 1:\n            left, right = 0, m - 1\n            while left < right:\n                total = grid[n // 2][left] + grid[n // 2][right]\n                change_count[total] += 1\n                left += 1\n                right -= 1\n\n        if m % 2 == 1:\n            top, bottom = 0, n - 1\n            while top < bottom:\n                total = grid[top][m // 2] + grid[bottom][m // 2]\n                change_count[total] += 1\n                top += 1\n                bottom -= 1\n\n        if change_count[2] % 2 == 1:\n            if change_count[1] > 0:\n                flips += change_count[1]\n            else:\n                flips += 2\n        else:\n            flips += change_count[1]\n\n        for i in range(n // 2):\n            for j in range(m // 2):\n                a = grid[i][j]\n                b = grid[n - 1 - i][j]\n                c = grid[i][m - 1 - j]\n                d = grid[n - 1 - i][m - 1 - j]\n\n                total_sum = a + b + c + d\n\n                if total_sum != 0 and total_sum != 4:\n                    flips += min(total_sum, 4 - total_sum)\n\n        return flips\n",
    "submit_ts": "1722699369",
    "subm_id": "1343209572"
}