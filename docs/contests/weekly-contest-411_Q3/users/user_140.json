{
    "username": "Wow",
    "submission": "import sys\nsys.set_int_max_str_digits(0)\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 9:\n            return '9' * n\n        elif k == 8:\n            if n <= 6:\n                return '8' * n\n            return '888' + '9' * (n - 6) + '888'\n        elif k == 7:\n            x = pow(10, n) - 1\n            if n & 1:\n                while x % k:\n                    x -= pow(10, n // 2)\n            else:\n                while x % k:\n                    x -= pow(10, n // 2) + pow(10, n // 2 - 1)\n            return str(x)\n        elif k == 6:\n            if n & 1:\n                if n == 1:\n                    return '6'\n                v = ['9'] * n\n                v[0] = v[-1] = v[n // 2] = '8'\n                s = ''\n                for c in v:\n                    s += c\n                return s\n            else:\n                if n == 2:\n                    return '66'\n                v = ['9'] * n\n                v[0] = v[-1] = '8'\n                v[n // 2] = v[n // 2 - 1] = '7'\n                s = ''\n                for c in v:\n                    s += c\n                return s\n        elif k == 5:\n            if n <= 2:\n                return '5' * n\n            return '5' + '9' * (n - 2) + '5'\n        elif k == 4:\n            if n <= 4:\n                return '8' * n\n            return '88' + '9' * (n - 4) + '88'\n        elif k == 3:\n            return '9' * n\n        elif k == 2:\n            if n <= 2:\n                return '8' * n\n            return '8' + '9' * (n - 2) + '8'\n        return '9' * n\n",
    "submit_ts": "1723950846",
    "subm_id": "556401636"
}