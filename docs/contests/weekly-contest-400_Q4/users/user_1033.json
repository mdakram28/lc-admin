{
    "username": "sdrqp9roawdf",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int[] count = new int[32];\n        int[] counts = new int[32];\n        Queue<Integer> queue = new LinkedList<>();\n        int max = Integer.MAX_VALUE;\n        int cur = -1;\n        \n        for (int i : nums) {\n            if (i < k) {\n                max = Math.min(max, Math.abs(i - k));\n                queue.clear();\n                count = new int[32];\n                counts =new int[32];\n                cur = -i;\n            }\n            else if (i == k) {\n                return 0;\n            }\n            else {\n                String s = Integer.toBinaryString(i);\n                queue.add(i);\n                    \n                for (int j = 0; j < 32; j++) {\n                    if (j > s.length() - 1 || s.charAt(s.length() - 1 - j) == '0') {\n                        count[j]++;\n                    }\n                    else {\n                        counts[j]++;\n                    }\n                }\n                \n                if (cur <= -1) {\n                    cur = i;\n                }\n                else {\n                    cur &= i;\n                }\n                        \n                while (cur < k && queue.size() > 0) {\n                    max = Math.min(Math.abs(cur - k), max);\n                    int n = queue.remove();\n                    String ss = Integer.toBinaryString(n);\n\n                    for (int j = 0; j < 32; j++) {\n                        if (j > ss.length() - 1 || ss.charAt(ss.length() - 1 - j) == '0') {\n                            count[j]--;\n                            if (count[j] == 0) {\n                                cur += (int) Math.pow(2, j);\n                            }\n                        }\n                        else {\n                            counts[j]--;\n                            if (counts[j] == 0 && count[j] == 0) {\n                                cur -= (int) Math.pow(2, j);\n                            }\n                        }\n                    }\n                    max = Math.min(Math.abs(cur - k), max);\n\n                }\n            }\n            max = Math.min(Math.abs(cur - k), max);\n        }\n        \n        return max;\n    }\n}",
    "submit_ts": 1717300042.0
}