{
    "username": "Dev-Ash",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& a) {\n        unordered_map<int,int> m;\n        for (auto& r:a) {\n            m[r[0]+1]=r[1];\n        }\n        vector<vector<long long>> dp(n+1,vector<long long>(401,0));\n        dp[0][0] = 1;\n        for(int i=1; i<=n; i++) {\n            for(int j=0; j<=400; j++){\n                for(int k=0; k<=j; k++) {\n                    if(j-k>=0 && j-k<i) {\n                        dp[i][j]=(dp[i][j]+dp[i-1][k])%1000000007;\n                    }\n                }\n                if(m.count(i)){\n                    if(j != m[i]) dp[i][j] = 0;\n                }\n            }\n        }\n        long long c=0;\n        for(long long count:dp[n]) c=(c+count)%1000000007;\n        return static_cast<int>(c);\n    }\n};",
    "submit_ts": "1719071934",
    "subm_id": "1296857382"
}