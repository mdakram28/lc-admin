{
    "username": "AtharvaDing",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int>maxval(k+1,0);\n        map<int,int>cnts;\n        map<pair<int,int>,int>justprev;\n        vector<vector<int>>dp(n, vector<int>(k+1));\n        for(int i=0; i<=k; i++){\n            dp[n-1][i] = 1;\n            maxval[i] = 1;\n        }\n        cnts[nums[n-1]]++;\n        for(int i=(n-2); i>=0; i--){\n            dp[i][0] = cnts[nums[i]] + 1;\n            for(int j=1; j<=k; j++){\n                int ans1 = 1 + justprev[{nums[i], j}];\n                int ans2 = 1 + maxval[j-1];\n                int ans = max(ans1, ans2);\n                dp[i][j] = ans;\n            }\n            for(int j=0; j<=k; j++){\n                maxval[j] = max(maxval[j], dp[i][j]);\n                justprev[{nums[i], j}] = max(justprev[{nums[i], j}], dp[i][j]);\n            }\n            cnts[nums[i]]++;\n        }\n        int ans = -1;\n        for(int i=0; i<n; i++){\n            ans = max(ans, dp[i][k]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717861774.0
}