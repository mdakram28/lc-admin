{
    "username": "xxgj",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        row, col = len(grid), len(grid[0])\n\n        @cache\n        def g(u0, v0, u1, v1):\n            x1, y1 = u0, v0\n            x0, y0 = u1, v1\n            found = False\n            for i in range(u0, u1 + 1):\n                for j in range(v0, v1 + 1):\n                    if grid[i][j]:\n                        found = True\n                        x0 = min(x0, i)\n                        y0 = min(y0, j)\n                        x1 = max(x1, i)\n                        y1 = max(y1, j)\n            if not found:\n                return 0\n            return (x1 - x0 + 1) * (y1 - y0 + 1)\n\n        @cache\n        def f1(x, y, t):\n            if t == 0:\n                return g(0, 0, x, y)\n            ans = inf\n            for i in range(1, x + 1):\n                ans = min(ans, g(i, 0, x, y) + f1(i - 1, y, t - 1))\n            for i in range(1, y + 1):\n                ans = min(ans, g(0, i, x, y) + f1(x, i - 1, t - 1))\n            # print(x, y, t, ans)\n            return ans\n\n        @cache\n        def f2(x, y, t):\n            if t == 0:\n                return g(x, y, row - 1, col - 1)\n            ans = inf\n            for i in range(x, row - 1):\n                ans = min(ans, g(x, y, i, col - 1) + f2(i + 1, y, t - 1))\n            for i in range(y, col - 1):\n                ans = min(ans, g(x, y, row - 1, i) + f2(x, i + 1, t - 1))\n            return ans\n\n        # print(f1(row - 1, col - 1, 2), f2(0, 0, 2))\n        return min(f1(row - 1, col - 1, 2), f2(0, 0, 2))\n",
    "submit_ts": 1719114086.0
}