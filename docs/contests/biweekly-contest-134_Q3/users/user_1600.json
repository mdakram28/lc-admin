{
    "username": "ljs7619480",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int const n = colors.size();\n        // // corner case\n        // if(n == k){\n        //     colors.push_back(colors[0]);\n        //     for(int i=0; i<n; i++){\n        //         if(colors[i] == colors[i+1]){ return 0; }\n        //         return 1;\n        //     }\n        // }\n\n        colors.reserve(n + k - 1);\n        for(int i=0; i<k-1; i++){\n            colors.push_back(colors[i]);\n        }\n        vector<int> alters(colors.size(), 1);\n        for(int j = colors.size()-2; j >= 0; j--){\n            if(colors[j] != colors[j+1]){\n                alters[j] += alters[j+1];\n            }\n        }\n        \n        int ans = 0;\n        for(int i=0; i<n; i++){ // i: group head\n            if(alters[i] >= k){ ans++; }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277518",
    "subm_id": "1311667455"
}