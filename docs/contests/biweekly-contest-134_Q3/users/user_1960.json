{
    "username": "HimanshuYadav1424",
    "submission": "class Solution {\nprivate:\n    bool isAlternating(vector<int>& colors, int start, int k) {\n        int n = colors.size();\n        for (int i = 1; i < k - 1; i++) {\n            if (colors[(start + i) % n] == colors[(start + i - 1) % n] ||\n                colors[(start + i) % n] == colors[(start + i + 1) % n])\n                return false;\n        }\n        return true;\n    }\n\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int num_found = 0;\n        int i = 0, j = 1;\n        int n = colors.size();\n\n        while(j<n+k && i<n){\n            int temp_j = j;\n            int temp_end = temp_j % n;\n\n            while(colors[temp_end] != colors[(temp_end - 1 +n) % n] && temp_j < (n+k-1)){\n                temp_j++;\n                temp_end = temp_j % n;\n            }\n\n            num_found += max(temp_j-i-k+1, 0);\n            i = temp_j;\n            j = i+1;\n        }\n        return num_found;\n    }\n};",
    "submit_ts": "1720281067",
    "subm_id": "1311811982"
}