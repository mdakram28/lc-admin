{
    "username": "Homie_Lander7",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        // reroot dp\n        int n = edges.size() + 1;\n        vector<vector<int>>adj(n);\n        for(auto &e: edges){\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n        vector<int>dp(n),maxi(n);\n        function<void(int, int)>dfs = [&](int u, int p){\n            for(auto v: adj[u]){\n                if(v == p) continue;\n                dfs(v, u);\n                int w=1;\n                if(v&1^1)w=2;\n                dp[u]=max(dp[u], dp[v]+w);\n                maxi[u]=max(maxi[u], dp[v]+w);\n\n            }\n        };\n        dfs(0, -1);\n        vector<int>ans(n);\n        function<void(int, int)>reroot=[&](int u, int p){\n            ans[u]=dp[u];\n            multiset<int>st={0};\n            for(auto v: adj[u]){\n                // if(v == p) continue;\n                int w=1;\n                if(v&1^1)w=2;\n                st.insert(dp[v]+w);\n            }\n            for(auto v: adj[u]){\n                if(v == p) continue;\n                \n                int pu = dp[u], pv = dp[v];\n                dp[u]-=*st.rbegin();\n                st.erase(st.find(dp[v]+((v&1^1)?2:1)));\n              \n                dp[u]+=*st.rbegin();\n                st.insert(dp[u]);\n               \n                int w=1;\n                if(u&1^1)w=2;\n                dp[v]=max(maxi[v],dp[u]+w);\n               \n                reroot(v, u);\n                st.erase(st.find(dp[u]));\n                dp[u]=pu;\n                dp[v]=pv;\n                st.insert(dp[v]+((v&1^1)?2:1));\n            }\n        };\n        reroot(0, -1);\n        return ans;\n    }\n};",
    "submit_ts": "1722698692",
    "subm_id": "1343188708"
}