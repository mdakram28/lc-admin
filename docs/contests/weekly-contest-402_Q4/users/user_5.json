{
    "username": "pandaforever",
    "submission": "\ntemplate <typename T>\nstruct binary_indexed_tree{\n  int N;\n  vector<T> BIT;\n  binary_indexed_tree(int N): N(N), BIT(N + 1, 0){\n  }\n  void add(int i, T x){\n    while (i <= N){\n      BIT[i] += x;\n      i += i & -i;\n    }\n  }\n  T get(int i){\n    T ans = 0;\n    while (i > 0){\n      ans += BIT[i];\n      i -= i & -i;\n    }\n    return ans;\n  }\n  T get(int L, int R){\n    return get(R) - get(L-1);\n  }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        int i,j,k,n,ty,x,y,tmp,o;\n        vector<int> ans;\n        n=a.size();\n        ans.clear();\n        binary_indexed_tree<int> bit(n+10);\n        for (i=1;i+1<n;i++)\n        {\n            if ((a[i]>a[i-1])&&(a[i]>a[i+1])) bit.add(i,1);\n        }\n        for (i=0;i<queries.size();i++)\n        {\n            ty=queries[i][0];\n            x=queries[i][1];\n            y=queries[i][2];\n            if (ty==1)\n            {\n                if (y-x+1>=3) tmp=bit.get(x+1,y-1);\n                else tmp=0;\n                ans.push_back(tmp);\n            }\n            else\n            {\n                for (o=x-1;o<=x+1;o++)\n                {\n                    if ((o>0)&&(o+1<n))\n                    {\n                        if ((a[o]>a[o-1])&&(a[o]>a[o+1])) bit.add(o,-1);\n\n                    }\n                }\n                a[x]=y;\n                for (o=x-1;o<=x+1;o++)\n                {\n                    if ((o>0)&&(o+1<n))\n                    {\n                        if ((a[o]>a[o-1])&&(a[o]>a[o+1])) bit.add(o,1);\n\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718505690.0
}