{
    "username": "anand033",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(const vector<int>& nums, const vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        \n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long long total_operations = 0;\n        long long current_segment_diff = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                long long additional_operations = abs(diff[i]) - abs(current_segment_diff);\n                if (additional_operations > 0) {\n                    total_operations += additional_operations;\n                }\n                current_segment_diff = diff[i];\n            } else {\n                total_operations += abs(diff[i]);\n                current_segment_diff = diff[i];\n            }\n        }\n        \n        return total_operations;\n    }\n}; ",
    "submit_ts": "1721532775",
    "subm_id": "1327993803"
}