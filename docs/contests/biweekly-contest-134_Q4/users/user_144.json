{
    "username": "Delusion1411",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n            using ll = long long;\n    int n = a.size();\n    int L = 32;\n    vector<vector<int>> pf(n, vector<int>(L, 0));\n    for (int i = 0; i < n; i++) {\n        for (int bit = 0; bit < L; bit++) {\n            if ((a[i] >> bit) & 1)\n                pf[i][bit] = 1;\n        }\n    }\n    for (int i = 1; i < n; i++) {\n        for (int bit = 0; bit < L; bit++) {\n            pf[i][bit] += pf[i - 1][bit];\n        }\n    }\n    ll ans = 0;\n    for (int i = 0; i < n; i++) {\n        if ((a[i] & k) != k)\n            continue;\n        int from = -1;\n        int till = n - 1;\n        int l = i, r = n - 1;\n        while (l <= r) {\n            int mid = l + (r - l) / 2;\n            int val = 0;\n            for (int bit = 0; bit < L; bit++) {\n                int cnt = pf[mid][bit];\n                if (i)\n                    cnt -= pf[i - 1][bit];\n                if (cnt == mid - i + 1)\n                    val += (1ll << bit);\n            }\n            if (val == k)\n                from = mid;\n            if (val > k) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        l = i, r = n - 1;\n\n        while (l <= r) {\n            int mid = l + (r - l) / 2;\n            int val = 0;\n            for (int bit = 0; bit < L; bit++) {\n                int cnt = pf[mid][bit];\n                if (i)\n                    cnt -= pf[i - 1][bit];\n                if (cnt == mid - i + 1)\n                    val += (1ll << bit);\n            }\n            if (val == k)\n                till = mid;\n            if (val >= k) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        if (from == -1)\n            continue;\n        ans += (till - from + 1);\n    }\n    return ans;\n    }\n};",
    "submit_ts": "1720278166",
    "subm_id": "1311697282"
}