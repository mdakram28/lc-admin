{
    "username": "akashsinghcse412",
    "submission": "class Solution {\npublic:\n    const int mod = 1000000007;\n    const int maxi = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        \n\n        long final_ans = 0;\n        unordered_map<int, int> mp;\n        for (auto& it : reqs) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<long>> dp(n + 1, vector<long>(maxi + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= maxi; j++) {\n                for (int k = 0; k < i; k++) {\n                    int prev_val = j - k;//j inv k pos\n                    if (prev_val>= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][prev_val]) % mod;\n                    }\n                }\n            }\n\n            if (mp.count(i)) {\n                int tar = mp[i];\n                for (int p = 0; p <= maxi; p++) {\n                    if (p != tar) {\n                        dp[i][p] = 0;\n                    }\n                }\n            }\n        }\n\n        for (long it : dp[n]) {\n            final_ans = (final_ans + it) % mod;\n        }\n\n        return final_ans;\n    }\n};",
    "submit_ts": 1719071149.0
}