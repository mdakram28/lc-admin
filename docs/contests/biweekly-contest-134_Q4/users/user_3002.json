{
    "username": "anant2961",
    "submission": "template<class T>\nclass sparse {\npublic:\n\tint N, LG;\n\tvector<vector<T>>spt;\n\tvector<int>lg;\n\tsparse() {}\n\tsparse(vector<T> &a) {\n\t\tN = a.size();\n\t\tLG = 32 - __builtin_clz(max((N - 1)*1LL, 1LL));\n\t\tspt.resize(N + 1, vector<T>(LG + 1));\n\t\tlg.resize(N + 5, 0);\n\t\tfor (int i = 2; i <= N; i++)\n\t\t\tlg[i] = lg[i / 2] + 1;\n\t\tbuild(a);\n\t}\n\tvoid build(vector<T> &a) {\n\t\tfor (int i = 0; i < N; i++)\n\t\t\tspt[i][0] = a[i];\n\t\tfor (int j = 1; j <= LG; j++) {\n\t\t\tint len = (1 << j), half = (1 << (j - 1));\n\t\tfor (int i = 0; i + len <= N; i++)\n\t\t\t\tspt[i][j] = combine(spt[i][j - 1], spt[i + half][j - 1]);\n\t\t}\n\t}\n\tT find(int l, int r) { // For idempotent operations in O(1)\n\t\tassert(l <= r && l >= 0 && r <= N - 1);\n\t\tint lgg = lg[r - l + 1], len = (1 << lgg);\n\t\treturn combine(spt[l][lgg], spt[r - len + 1][lgg]);\n\t}\n\tT query(int L, int R) { // For other operations in O(log n)\n\t\tT answer = 0;\n\t\tfor (int j = LG; j >= 0; j--) {\n\t\t\tif (L + (1 << j) - 1 <= R) {\n\t\t\t\tanswer = combine(answer, spt[L][j]);\n\t\t\t\tL += 1 << j;\n\t\t\t}\n\t\t}\n\t\treturn answer;\n\t}\n\tT combine(T x, T y) {\n\t\t// change this function to construct sparse table\n        int res = (x&y);\n\t\treturn res;\n\t}\n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long res = 0;\n        int n = nums.size();\n        vector<int> v(n+1,0);\n        for(int i=1;i<=n;i++){\n            v[i] += nums[i-1];\n        }\n        sparse<int>first(v);\n        first.build(v);\n        map<long long,long long> mps;\n        for(int i=0;i<n;i++){\n            map<long long,long long> mps1;\n            if(nums[i] == k){\n                res += 1;\n            }\n            mps1[nums[i]] = 1;\n            for(auto const &pair : mps){\n                long long temp = pair.first & nums[i];\n                if(temp == k){\n                    res += pair.second;\n                }\n                mps1[temp] += pair.second;\n            }\n            mps = mps1;\n        }                                                                                                                                                                                                                                                                                                                                                                                                                                             \n        return res;\n    }\n};",
    "submit_ts": "1720280963",
    "subm_id": "1311808306"
}