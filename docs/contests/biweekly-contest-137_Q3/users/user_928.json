{
    "username": "kunalparihar",
    "submission": "class Solution {\npublic:\n\n    void findmaxindex(vector<vector<int>>& board, vector<vector<int>> &maxindex)\n    {\n        int a3,b3,c3;\n\n        int size = board[0].size();\n\n        for(int k=0; k<board.size(); k++)\n        {\n            vector<pair<int,int>> vec;\n            vec.push_back({board[k][0],0});\n            vec.push_back({board[k][1],1});\n            vec.push_back({board[k][2],2});\n\n            sort(vec.begin(), vec.end());\n\n            a3 = vec[2].second;\n            b3 = vec[1].second;\n            c3 = vec[0].second;\n\n            for(int i=3; i<size; i++)\n            {\n                if(board[k][i] > board[k][a3])\n                {\n                    c3 = b3;\n                    b3 = a3;\n                    a3 =i;\n                }\n                else if(board[k][i] > board[k][b3])\n                {\n                    c3 = b3;\n                    b3 = i;\n                }\n                else if(board[k][i] > board[k][c3])\n                    c3 = i;\n            }\n\n            maxindex.push_back({a3,b3,c3});\n            //std::cout << \"a3 \" << a3 << \" b3 \" << b3 << \" c3 \" << c3 << std::endl;\n        }\n        \n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        vector<vector<int>> maxindex;\n\n        findmaxindex(board, maxindex);\n\n        long long maxi = -1000000000000;\n\n        int size = board.size();\n        \n        for(int i=0; i<size-2; i++)\n        {\n            for(int j=i+1; j<size-1; j++)\n            {\n                for(int k=j+1; k<size; k++)\n                {\n                    //std::cout << \"i \" << i << \" j \" << j << \" k \" << k << std::endl;\n                    for(int l=0; l<3; l++)\n                    {\n                        for(int m=0; m<3; m++)\n                        {\n                            //std::cout << \"l \" << maxindex[i][l] << \" m \" << maxindex[j][m] << std::endl;\n                            if(maxindex[i][l]==maxindex[j][m])\n                                continue;\n\n                            //std::cout << \"acp l \" << maxindex[i][l] << \" m \" << maxindex[j][m] << std::endl;\n\n                            for(int n=0; n<3; n++)\n                            {\n                                if(maxindex[i][l]==maxindex[k][n] || maxindex[j][m]==maxindex[k][n])\n                                    continue;\n                                \n                                //std::cout << \"accepted l \" << maxindex[i][l] << \" m \" << maxindex[j][m] << \" n \" << maxindex[k][n] << std::endl;\n                                long long sum = long(board[i][maxindex[i][l]]) + long(board[j][maxindex[j][m]]) + long(board[k][maxindex[k][n]]);\n                                if(sum > maxi)\n                                    maxi = sum;\n                            }\n                        }\n                    }\n                }    \n            }\n        }\n\n        return maxi;\n    }\n};\n\n/*\n\nif(j!=i)\n                {\n                    if(i!=a3 && j!=a3)\n                    {\n                        long long sum = long(board[0][i]) + long(board[1][j]) + long(board[2][a3]);\n                        if(sum > maxi)\n                            maxi = sum;\n                        continue;\n                    }\n                    else if(i!=b3 && j!=b3)\n                    {\n                        long long sum = long(board[0][i]) + long(board[1][j]) + long(board[2][b3]);\n                        if(sum > maxi)\n                            maxi = sum;\n                        continue;\n                    }\n                    else\n                    {\n                        long long sum = long(board[0][i]) + long(board[1][j]) + long(board[2][c3]);\n                        if(sum > maxi)\n                            maxi = sum;\n                    }\n                }\n*/",
    "submit_ts": "1723909075",
    "subm_id": "1359178617"
}