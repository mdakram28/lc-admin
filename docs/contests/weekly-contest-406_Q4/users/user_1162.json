{
    "username": "aspirers04",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        \n        for (int cost : horizontalCut) {\n            cuts.emplace_back(cost, 'H');\n        }\n        for (int cost : verticalCut) {\n            cuts.emplace_back(cost, 'V');\n        }\n        sort(cuts.rbegin(), cuts.rend());\n        \n        long long int horizontalPieces = 1, verticalPieces = 1;\n        long long int totalCost = 0;\n        \n        for (auto& cut : cuts) {\n            // cout<<totalCost<<\" \"<<cut.second<<endl;\n            long long int x=cut.first;\n            if (cut.second == 'H') {\n                totalCost += x * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += x * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926098",
    "subm_id": "1320275931"
}