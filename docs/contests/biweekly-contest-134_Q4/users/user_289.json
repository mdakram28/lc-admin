{
    "username": "wei-she-ming",
    "submission": "class Solution {\npublic:\n\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        long long ans = 0;\n\n        vector<int> l2(n + 1, -1);\n        vector<vector<int>> f(20, vector<int>(n, 0));\n        for (int i = 1; i <= n; ++i) l2[i] = l2[i >> 1] + 1;\n        for (int i = 0; i < n; ++i) f[0][i] = a[i];\n        for (int j = 1; (1 << j) <= n; ++j)\n            for (int i = 0; i + (1 << j) - 1 < n; ++i)\n                f[j][i] = f[j - 1][i] & f[j - 1][i + (1 << j - 1)];\n        auto get = [&](int l, int r) {\n            int t = l2[r - l + 1];\n            return f[t][l] & f[t][r - (1 << t) + 1];\n        };\n\n        for (int i = 0; i < n; ++i) {\n            int j = i - 1;\n            while (j < n - 1) {\n                int l = j + 1, r = n - 1, mid, pos;\n                while (l <= r) {\n                    mid = l + r >> 1;\n                    if (get(i, mid) == get(i, j + 1)) {\n                        pos = mid;\n                        l = mid + 1;\n                    }\n                    else r = mid - 1;\n                }\n                if (get(i, pos) == k)\n                    ans += pos - j;\n                j = pos;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720278451",
    "subm_id": "544562651"
}