{
    "username": "Mr_Looser",
    "submission": "class Solution {\nfunc solve(_ X:Int,_ Y:Int,_ a:[[Int]])->Bool {\nlet b=a.count\n\nvar c=Array(repeating:[Int](),count:b+4)\nfor d in 0..<b {\nif a[d][0]<=a[d][2] {\nc[b].append(d)\nc[d].append(b)}\nif X-a[d][0]<=a[d][2] {\nc[b+2].append(d)\nc[d].append(b+2)}\nif a[d][1]<=a[d][2] {\nc[b+1].append(d)\nc[d].append(b+1)}\nif Y-a[d][1]<=a[d][2] {\nc[b+3].append(d)\nc[d].append(b+3)}\nfor e in (d+1)..<b {\nlet f=sqrt(Double((a[d][0]-a[e][0])*(a[d][0]-a[e][0])+(a[d][1]-a[e][1])*(a[d][1]-a[e][1])))\nlet g=a[d][2]+a[e][2]\nif Double(g)>=f {\nc[d].append(e)\nc[e].append(d)}}}\nvar h=0\nh=max(h,bfs(c,b,b+1,b+2,b+4))\nh=max(h,bfs(c,b+3,b+2,b+1,b+4))\nreturn h==0}\nfunc bfs(_ a:[[Int]],_ b:Int,_ c:Int,_ d:Int,_ e:Int)->Int {\nvar f=[Int]()\nvar g=Array(repeating:false,count:e+4)\nf.append(b)\ng[b]=true\nwhile !f.isEmpty {\nlet h=f.removeFirst()\nfor i in a[h] {\nif !g[i] {\nf.append(i)\ng[i]=true}}}\nreturn (g[c]||g[d]) ? 1 : 0}\nfunc canReachCorner(_ X:Int,_ Y:Int,_ a:[[Int]])->Bool {\nreturn solve(X,Y,a)}}\n",
    "submit_ts": "1722138789",
    "subm_id": "1335799682"
}