{
    "username": "phungtienminh",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        for x, y, r in circles:\n            if x - r <= 0 and y - r <= 0:\n                return False\n            if x + r >= X and y + r >= Y:\n                return False\n            \n        class DSU:\n            def __init__(self, n):\n                self.par = [i for i in range(n)]\n                self.sz = [1] * n\n                \n            def find(self, x):\n                if self.par[x] == x:\n                    return x\n                \n                self.par[x] = self.find(self.par[x])\n                return self.par[x]\n            \n            def same(self, x, y):\n                return self.find(x) == self.find(y)\n            \n            def join(self, x, y):\n                x, y = self.find(x), self.find(y)\n                if x == y:\n                    return\n                \n                if self.sz[x] > self.sz[y]:\n                    self.sz[x] += self.sz[y]\n                    self.par[y] = x\n                else:\n                    self.sz[y] += self.sz[x]\n                    self.par[x] = y\n            \n        gr_1 = []\n        gr_2 = []\n        \n        for i, circle in enumerate(circles):\n            x, y, r = circle\n            if x - r <= 0 or y + r >= Y:\n                gr_1.append(i)\n            if x + r >= X or y - r <= 0:\n                gr_2.append(i)\n                    \n        \n        dsu = DSU(len(circles))\n        for i in range(len(circles)):\n            for j in range(i + 1, len(circles)):\n                x_i, y_i, r_i = circles[i]\n                x_j, y_j, r_j = circles[j]\n                \n                d = (x_j - x_i) * (x_j - x_i) + (y_j - y_i) * (y_j - y_i)\n                if d <= (r_i + r_j) * (r_i + r_j):\n                    dsu.join(i, j)\n                    \n        # print(gr_1)\n        # print(gr_2)\n        for g1 in gr_1:\n            for g2 in gr_2:\n                if dsu.same(g1, g2):\n                    return False\n                \n        return True\n                    \n        ",
    "submit_ts": "1722136534",
    "subm_id": "1335737449"
}