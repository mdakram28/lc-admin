{
    "username": "gmanoj574",
    "submission": "def find_index(arr, n, K):\n \n    # Lower and upper bounds\n    start = 0\n    end = n - 1\n \n    # Traverse the search space\n    while start<= end:\n \n        mid =(start + end)//2\n \n        if arr[mid] == K:\n            return mid\n \n        elif arr[mid] < K:\n            start = mid + 1\n        else:\n            end = mid-1\n \n    # Return the insert position\n    return end + 1\n\ndef insert(ls, k, dit):\n    if len(ls) == 0:\n        ls.append(k)\n        dit[k] = k\n        return\n    if k > ls[-1]:\n        lmx = dit[ls[-1]]\n        dit[k] = max(lmx, k - ls[-1])\n        ls.append(k)\n        return\n    ind = find_index(ls,len(ls),k)\n\n    if ind != 0:\n        dit[k] = max(dit[ls[ind-1]], k - ls[ind-1])\n\n    else:\n        dit[k] = k\n    ls.insert(ind,k)\n    ind +=1\n    #print(ind,ls,dit)\n    while ind < len(ls):\n        prev = dit[ls[ind]]\n        currmax = max(dit[ls[ind-1]], ls[ind] - ls[ind-1])\n        if prev == currmax:\n            break\n        dit[ls[ind]] = currmax\n        ind += 1\n    return\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        ls = []\n        dit = dict()\n        ans = []\n        for qu in queries:\n            if qu[0] == 1:\n                insert(ls, qu[1], dit)\n            else:\n                ind = find_index(ls,len(ls),qu[1])\n                if len(ls) == 0:\n                    res = True if qu[1] >= qu[2] else False\n                    ans.append(res)                    \n                    continue\n                if ind < len(ls) and ls[ind] == qu[1]:\n                    res = True if dit[ls[ind]] >= qu[2] else False\n                    ans.append(res)\n                elif ind == len(ls):\n                    maxx = max(dit[ls[-1]], qu[1]-ls[-1])\n                    res = True if maxx >= qu[2] else False\n                    ans.append(res)\n                elif ind == 0:\n                    res = True if qu[1] >= qu[2] else False\n                    ans.append(res)\n                else:\n                    maxx = max(dit[ls[ind-1]], qu[1] - ls[ind-1])\n                    res = True if maxx >= qu[2] else False\n                    ans.append(res)\n            #print(ls, dit)\n        return ans\n        ",
    "submit_ts": 1716652739.0
}