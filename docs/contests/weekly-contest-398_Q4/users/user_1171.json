{
    "username": "tesse-ract",
    "submission": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    Map<Integer, List<List<Integer>>> dp = new HashMap<>();\n\n    int solve(int k, int index, int jump, boolean can) {\n        if (index > k + 5)\n            return 0;\n\n        if (jump > 31)\n            return 0;\n\n        if (dp.containsKey(index) && dp.get(index).get(jump).get(can ? 1 : 0) != -1)\n            return dp.get(index).get(jump).get(can ? 1 : 0);\n\n        int result = (index == k) ? 1 : 0;\n        if (can)\n            result += solve(k, index - 1, jump, false);\n        if (index + (1 << jump) <= k + 1)\n            result += solve(k, index + (1 << jump), jump + 1, true);\n\n        if (!dp.containsKey(index)) {\n            dp.put(index, new ArrayList<>());\n            for (int i = 0; i < 32; i++) {\n                dp.get(index).add(new ArrayList<>());\n                for (int j = 0; j < 2; j++) {\n                    dp.get(index).get(i).add(-1);\n                }\n            }\n        }\n\n        dp.get(index).get(jump).set(can ? 1 : 0, result);\n\n        return result;\n    }\n\n    public int waysToReachStair(int k) {\n        return solve(k, 1, 0, true);\n    }\n}\n",
    "submit_ts": "1716090724",
    "subm_id": "1261873974"
}