{
    "username": "jayxuan",
    "submission": "struct Node {\n    int l, r;\n    int sum;\n};\n\nconst int N = 1e5 + 10;\n\nNode tr[N*4];\n\nvoid pushup(int u) {\n    tr[u].sum = tr[2*u].sum + tr[2*u+1].sum;\n}\n\nvoid pushdown(int u) {\n    if (tr[u].sum == 0) {\n        tr[2*u].sum = 0;\n        tr[2*u + 1].sum = 0;\n    }\n}\n\nvoid build(int u, int l, int r) {\n    tr[u] = {l, r, 0};\n    if (l == r) tr[u].sum = 1;\n    else {\n        int mid = l + r >> 1;\n        build(2*u, l, mid);\n        build(2*u + 1, mid + 1, r);\n        pushup(u);\n    }\n}\n\nvoid modify(int u, int l, int r) \n{\n    if (tr[u].l >= l && tr[u].r <= r) {\n        tr[u].sum = 0;\n        return;\n    }\n    int mid = tr[u].l + tr[u].r >> 1;\n    pushdown(u);\n    if (r > mid) modify(2*u+1, l, r);\n    if (l <= mid) modify(2*u, l, r);\n    pushup(u);\n}\n\nint query(int u, int l, int r) {\n    if (tr[u].l >= l && tr[u].r <= r) return tr[u].sum;\n    int res = 0;\n    int mid = tr[u].l + tr[u].r >> 1;\n    pushdown(u);\n    if (r > mid) res += query(2*u+1, l, r);\n    if (l <= mid) res += query(2*u, l, r);\n    return res;\n}\n\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        build(1, 1, n - 2);\n        int d = n - 1;\n        int m = queries.size();\n        vector<int> ans(m, 0);\n        for (int i = 0; i < m; ++i) {\n            int l = queries[i][0], r = queries[i][1];\n            int reduce = query(1, l + 1, r - 1);\n            d -= reduce;\n            ans[i] = d;\n            modify(1, l+1, r-1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743164",
    "subm_id": "552349171"
}