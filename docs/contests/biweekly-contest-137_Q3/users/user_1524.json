{
    "username": "Tushar Gautam",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n        long long maxSum = LLONG_MIN;\n        \n        // Initialize arrays to store the top 3 values and their column indices for each row\n        vector<vector<long long>> topValues(numRows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> topCols(numRows, vector<int>(3, -1));\n\n        // Determine the top 3 values and their column indices for each row\n        for (int row = 0; row < numRows; ++row) {\n            vector<pair<long long, int>> colData;\n            for (int col = 0; col < numCols; ++col) {\n                colData.emplace_back(board[row][col], col);\n            }\n            // Sort by values in descending order\n            sort(colData.rbegin(), colData.rend());\n\n            // Store the top 3 values and their column indices\n            for (int rank = 0; rank < 3 && rank < numCols; ++rank) {\n                topValues[row][rank] = colData[rank].first;\n                topCols[row][rank] = colData[rank].second;\n            }\n        }\n\n        // Evaluate all combinations of 3 different rows\n        for (int row1 = 0; row1 < numRows; ++row1) {\n            for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n                for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n                    for (int idx1 = 0; idx1 < 3; ++idx1) {\n                        for (int idx2 = 0; idx2 < 3; ++idx2) {\n                            if (topCols[row2][idx2] == topCols[row1][idx1]) continue;\n                            for (int idx3 = 0; idx3 < 3; ++idx3) {\n                                if (topCols[row3][idx3] == topCols[row1][idx1] || topCols[row3][idx3] == topCols[row2][idx2]) continue;\n\n                                long long currentSum = topValues[row1][idx1] + topValues[row2][idx2] + topValues[row3][idx3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910388",
    "subm_id": "1359228814"
}