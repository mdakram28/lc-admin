{
    "username": "Attttrx",
    "submission": "class Solution {\npublic:\n    \n//     int solve(vector<vector<int>>& grid, int ) {\n//         if(grid.size() == 0) return 0;\n//         if(grid[0].size() == 0) return 0;\n        \n//         int n = grid.size();\n//         int m = grid[0].size();\n//         int minX = n * m, maxX = -1, minY = n * m, maxY = -1;\n        \n//         bool have = false;\n//         for(int i = 0; i < n; i++) {\n//             for(int j = 0; j < m; j++) {\n//                 if(grid[i][j] == 1) {\n//                     have = true;\n//                     minX = min(minX, i);\n//                     minY = min(minY, j);\n//                     maxX = max(maxX, i);\n//                     maxY = max(maxY, j);\n//                 }\n//             }\n//         }\n//         if(!have){\n//             return 0;\n//         }\n//         return (maxX - minX + 1) * (maxY - minY + 1);\n//     }\n    \n    \n    int minimumSum(vector<vector<int>>& grid) {\n        \n        int n = grid.size();\n        int m = grid[0].size();\n        \n        auto solve = [&](int gridMinX, int gridMaxX, int gridMinY, int gridMaxY){\n            if(gridMinX < 0 || gridMinX >= n) return 0;\n            if(gridMaxX < 0 || gridMaxX >= n) return 0;\n            if(gridMinY < 0 || gridMinY >= m) return 0;\n            if(gridMaxY < 0 || gridMaxY >= m) return 0;\n            if(gridMaxX < gridMinX) return 0;\n            if(gridMaxY < gridMinY) return 0;\n            int minX = n * m, maxX = -1, minY = n * m, maxY = -1;\n\n            bool have = false;\n            for(int i = gridMinX; i <= gridMaxX; i++) {\n                for(int j = gridMinY; j <= gridMaxY; j++) {\n                    if(grid[i][j] == 1) {\n                        have = true;\n                        minX = min(minX, i);\n                        minY = min(minY, j);\n                        maxX = max(maxX, i);\n                        maxY = max(maxY, j);\n                    }\n                }\n            }\n            if(!have){\n                return 0;\n            }\n            return (maxX - minX + 1) * (maxY - minY + 1);\n            \n        };\n        \n        \n        int ans = n * m + 1000;\n        // 6 \u79cd\u5207\u5272\u65b9\u6cd5\n        \n        // \u6a2a\u7740 2 \u5200\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                // vector<vector<int>>grid1,grid2,grid3;\n//                 // first\n//                 for(int k = 0; k <= i; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n                \n//                 // second\n//                 for(int k = i + 1; k <= j; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n                \n//                 // thrid\n//                 for(int k = j + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                ans = min(ans, solve(0, i, 0, m - 1) +  solve(i + 1, j, 0, m - 1) + solve(j + 1, n - 1, 0, m - 1));\n            }\n        }\n        \n        \n        \n        \n        // \u7ad6\u7740 2 \u5200\n        for(int i = 0; i < m; i++) {\n            for(int j = i + 1; j < m; j++) {\n//                 vector<vector<int>>grid1,grid2,grid3;\n//                 // first\n//                 for(int k = 0; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= i; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n                \n//                 // second\n//                 for(int k = 0; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = i + 1; z <= j; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n                \n//                 // thrid\n//                 for(int k = 0; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = j + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                \n                \n                ans = min(ans, solve(0, n - 1, 0, i) +  solve(0, n - 1, i + 1, j) + solve(0, n - 1, j + 1, m - 1));\n            }\n        }\n        \n        \n        \n        // \u7ad6\u7740\u5207\u4e00\u5200 + \u5de6\u6a2a\u534a\u5200\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n//                 vector<vector<int>>grid1,grid2,grid3;\n//                 // \u53f3\u8fb9\u4e00\u6574\u5757\n//                 for(int k = 0; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = i + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n\n//                 // \u5de6\u8fb9\u4e0a\u534a\u5757\n//                 for(int k = 0; k <= j; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= i; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n     \n//                 // \u5de6\u8fb9\u4e0b\u534a\u5feb\n//                 for(int k = j + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= i; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n                \n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                \n                ans = min(ans, solve(0, n - 1, i + 1, m - 1) +  solve(0, j, 0, i) + solve(j + 1, n - 1, 0, i));\n            }\n        }\n        \n        \n        \n        // \u7ad6\u7740\u5207\u4e00\u5200 + \u53f3\u6a2a\u534a\u5200\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n//                 vector<vector<int>>grid1,grid2,grid3;\n//                 // \u5de6\u8fb9\u4e00\u6574\u5757\n//                 for(int k = 0; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= i; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n\n//                 // \u53f3\u8fb9\u4e0a\u534a\u5757\n//                 for(int k = 0; k <= j; k++) {\n//                     vector<int>tmp;\n//                     for(int z = i + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n     \n//                 // \u53f3\u8fb9\u4e0b\u534a\u5757\n//                 for(int k = j + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = i + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n                \n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                \n                ans = min(ans, solve(0, n - 1, 0, i) +  solve(0, j, i + 1, m - 1)+ solve(j + 1, n - 1, i + 1, m - 1));\n            }\n        }\n        \n        \n        \n        // \u6a2a\u7740\u5207\u4e00\u5200 + \u4e0a\u7ad6\u534a\u5200\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n//                 vector<vector<int>>grid1,grid2,grid3;\n//                 // \u4e0b\u8fb9\u4e00\u6574\u5757\n//                 for(int k = i + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n\n//                 // \u4e0a\u8fb9\u5de6\u534a\u5757\n//                 for(int k = 0; k <= i; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= j; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n     \n//                 // \u4e0a\u8fb9\u53f3\u534a\u5757\n//                 for(int k = 0; k <= i; k++) {\n//                     vector<int>tmp;\n//                     for(int z = j + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n                \n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                 ans = min(ans, solve(i + 1, n - 1, 0, m - 1) +  solve(0, i, 0, j)+ solve(0, i, j + 1, m - 1));\n            }\n        }\n        \n        \n        // \u6a2a\u7740\u5207\u4e00\u5200 + \u4e0b\u7ad6\u534a\u5200\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n//                 vector<vector<int>>grid1,grid2,grid3;\n//                 // \u4e0a\u8fb9\u4e00\u6574\u5757\n//                 for(int k = 0; k <= i; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid1.push_back(tmp);\n//                 }\n\n//                 // \u4e0b\u8fb9\u5de6\u534a\u5757\n//                 for(int k = i + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = 0; z <= j; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid2.push_back(tmp);\n//                 }\n     \n//                 // \u4e0b\u8fb9\u53f3\u534a\u5757\n//                 for(int k = i + 1; k < n; k++) {\n//                     vector<int>tmp;\n//                     for(int z = j + 1; z < m; z++) {\n//                         tmp.push_back(grid[k][z]);\n//                     }\n//                     grid3.push_back(tmp);\n//                 }\n                \n//                 ans = min(ans, solve(grid1) + solve(grid2) + solve(grid3));\n                ans = min(ans, solve(0, i, 0, m - 1) +  solve(i + 1, n - 1, 0, j)+ solve(i + 1, n - 1, j + 1, m - 1));\n            }\n        }\n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1719113959.0
}