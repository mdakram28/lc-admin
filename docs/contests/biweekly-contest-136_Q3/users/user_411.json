{
    "username": "EHorizon",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int result = 0;\n        if (m % 2 == 1 && n % 2 == 1 && grid[m/2][n/2]==1) result++;\n        for (int i = 0; i < m - i - 1; ++i) {\n            for (int j = 0; j < n - j - 1; ++j) {\n                int cnt = grid[i][j] + grid[i][n-j-1] + grid[m-i-1][j] + grid[m-i-1][n-j-1];\n                result += min(cnt, 4-cnt);\n            }\n        }\n        int one_pair = 0, flip_pair = 0;\n        if (m % 2 == 1) {\n            for (int j = 0; j < n - j - 1; ++j) {\n                if (grid[m/2][j] != grid[m/2][n-j-1]) {\n                    ++result;\n                    ++flip_pair;\n                } else if (grid[m/2][j] == 1) {\n                    ++one_pair;\n                }\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m - i - 1; ++i) {\n                if (grid[i][n/2] != grid[m-i-1][n/2]) {\n                    ++result;\n                    ++flip_pair;\n                } else if (grid[i][n/2]) {\n                    ++one_pair;\n                }\n            }\n        }\n        if (flip_pair == 0 && one_pair % 2 == 1) result += 2;\n        return result;\n    }\n};",
    "submit_ts": "1722696665",
    "subm_id": "1343117221"
}