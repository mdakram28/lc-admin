{
    "username": "psshrivathsa784",
    "submission": "#define forz(i,a,b) for(int i = a;i<b;i++)\n\ntypedef int ll;\n\nclass maxsegmenttree{\n\n    public:\n\n    vector<ll> segtree;\n    ll len;\n\n    maxsegmenttree(vector<ll> v){\n\n        while (v.size()&(v.size()-1)){\n            v.push_back(0);\n        }\n\n        len = 2*(v.size());\n\n        forz(i,0,len){\n            if (i<len/2){\n                segtree.push_back(0);\n            }\n            else{\n                segtree.push_back(v[i-len/2]);\n            }\n        }\n\n        for(ll i = len/2-1;i>=0;i--){\n            segtree[i] = max(segtree[i<<1],segtree[(i<<1)|1]);\n        }\n    }\n\n    void update(ll ind,ll val){\n        ind += len/2;\n        segtree[ind] = val;\n\n        ind>>=1;\n        while (ind>0){\n            segtree[ind] = max(segtree[ind<<1],segtree[(ind<<1)|1]);\n            ind>>=1;\n        }\n    }\n\n    ll rangeMax(ll l,ll r){\n        // Sum between the range [l,r-1];\n\n        l += len/2;\n        r += len/2;\n\n        ll sum = 0;\n        while (l<r){\n            if (l&1){\n                sum =max(sum,segtree[l]);\n                l++;\n            }\n            if (r&1){\n                r--;\n                sum = max(sum,segtree[r]);\n            }\n\n            l >>= 1;\n            r >>= 1;\n        }\n\n        return sum;\n    }\n\n};\n\nclass segmenttree{\n\n    public:\n\n    vector<ll> segtree;\n    ll len;\n\n    segmenttree(vector<ll> v){\n\n        while (v.size()&(v.size()-1)){\n            v.push_back(0);\n        }\n\n        len = 2*(v.size());\n\n        forz(i,0,len){\n            if (i<len/2){\n                segtree.push_back(0);\n            }\n            else{\n                segtree.push_back(v[i-len/2]);\n            }\n        }\n    }\n\n    ll value(ll ind){\n        // Gets the present value of node ind. (0 based)\n\n        ind += len/2;\n\n        ll ans = 0;\n        while (ind>0){\n            ans += segtree[ind];\n            ind>>=1;\n        }\n\n        return ans;\n    }\n\n    void rangeUpdate(ll l, ll r, ll val){\n        // Adds val to the range [l,r-1]\n\n        l += len/2;\n        r += len/2;\n\n        while (l<r){\n            if (l&1){\n                segtree[l] += val;\n                l++;\n            }\n            if (r&1){\n                r--;\n                segtree[r] += val;\n            }\n\n            l >>= 1;\n            r >>= 1;\n        }\n\n    }\n\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> dist(n,0);\n        forz(i,0,n){\n            dist[i] = i;\n        }\n        vector<int> p(n,0);\n\n        segmenttree st(dist);\n        maxsegmenttree mst(p); \n\n        vector<int> ans;\n\n        for(auto q:queries){\n            if (mst.rangeMax(0,q[0]+1) >= q[1]){\n                ans.push_back(st.value(n-1));\n                continue;\n            }\n\n            int x = st.value(q[0]);\n            int y = st.value(q[1]);\n            // cout<<x<<' '<<y<<'\\n';\n            int sum = (x+1)-y;\n\n            st.rangeUpdate(q[1],n,sum);\n            ans.push_back(st.value(n-1));\n\n            mst.update(q[0],q[1]);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722741754",
    "subm_id": "1343752713"
}