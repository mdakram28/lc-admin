{
    "username": "hongrock",
    "submission": "const int inf = 0x3f3f3f3f;\nint xl[4] = {-1, -1, 1, 1};\nint yl[4] = {-1, 1, -1, 1};\nclass Solution {\npublic:\n    int solve(vector<vector<int>> &p, int skip, int &key){\n        vector<int> a(4, -inf);\n        int mx = -inf;\n        key = -1;\n        for(int i=0; i<p.size(); ++i){\n            if(i == skip)   continue;\n            int x = p[i][0], y = p[i][1];\n            int v = -inf;\n            for(int j=0; j<4; ++j){\n                v = max(v, -xl[j] * x - yl[j] * y + a[j]);\n            }\n            if(v > mx){\n                mx = v;\n                key = i;\n            }\n            for(int j=0; j<4; ++j){\n                a[j] = max(a[j], xl[j] * x + yl[j] * y);\n            }\n        }\n        return mx;\n    }\n    int minimumDistance(vector<vector<int>>& p) {\n        int key = 0;\n        int ans = solve(p, -1, key);\n        int key2 = -1;\n        for(int i=0; i<p.size(); ++i){\n            if(abs(p[i][0] - p[key][0]) + abs(p[i][1] - p[key][1]) == ans){\n                key2 = i;\n                break;\n            }\n        }\n        int tmp;\n        ans = min(ans, solve(p, key, tmp));\n        ans = min(ans, solve(p, key2, tmp));\n        return ans;\n    }\n};"
}