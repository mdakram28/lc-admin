{
    "username": "amit_yd625",
    "submission": "\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCuts, vector<int>& vCuts) {\n        vector<pair<long long, char>> cuts;\n        for (int cost : hCuts) {\n            cuts.push_back({cost, 'H'});\n        }\n        for (int cost : vCuts) {\n            cuts.push_back({cost, 'V'});\n        }\n\n        sort(cuts.begin(), cuts.end(), greater<pair<long long, char>>());\n\n        long long hPieces = 1;\n        long long vPieces = 1;\n        long long totalCost = 0;\n\n        for (const auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += static_cast<long long>(cut.first) * vPieces;\n                hPieces++;\n            } else {\n                totalCost += static_cast<long long>(cut.first) * hPieces;\n                vPieces++;\n            }\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925495",
    "subm_id": "1320256662"
}