{
    "username": "unknown53",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            ans += checkCenter(grid, n, m);\n        }\n\n        vector<int> shift = calculateShift(grid, n, m);\n\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                ans += shift[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += shift[1];\n        }\n\n        ans += calculateCorners(grid, n, m);\n\n        return ans;\n    }\n\nprivate:\n    int checkCenter(vector<vector<int>>& grid, int n, int m) {\n        return (grid[n / 2][m / 2] == 1) ? 1 : 0;\n    }\n\n    vector<int> calculateShift(vector<vector<int>>& grid, int n, int m) {\n        vector<int> shift(3, 0);\n\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int a = 0, b = n - 1;\n            while (a < b) {\n                int sm = grid[a][m / 2] + grid[b][m / 2];\n                shift[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        return shift;\n    }\n\n    int calculateCorners(vector<vector<int>>& gxd, int n, int m) {\n        int flps = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = gxd[i][j];\n                int b = gxd[n - 1 - i][j];\n                int c = gxd[i][m - 1 - j];\n                int d = gxd[n - 1 - i][m - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    flps += min(sm, 4 - sm);\n                }\n            }\n        }\n        return flps;\n    }\n};\n",
    "submit_ts": "1722699911",
    "subm_id": "1343226022"
}