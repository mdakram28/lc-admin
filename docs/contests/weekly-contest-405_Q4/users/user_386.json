{
    "username": "JosephMother",
    "submission": "class Trie:\n\n    def __init__(self):\n        self.cost = 10 ** 6\n        self.term = False\n        self.children = {}\n    \n    def add(self, word, cost):\n        t = self\n        for let in word:\n            if let in t.children:\n                t = t.children[let]\n            else:\n                t.children[let] = Trie()\n                t = t.children[let]\n        \n        t.cost = min(t.cost, cost)\n        t.term = True\n\n    def find(self, word):\n        res = []\n        t = self\n        wsf = ''\n        for let in word:\n            wsf += let\n            if let in t.children:\n                t = t.children[let]\n            else:\n                break\n            \n            if t.term:\n                res.append((wsf, t.cost))\n        return res\n            \n\n\n\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        t = Trie()\n        for i, word in enumerate(words):\n            t.add(word, costs[i])\n        dp = [float('inf')] * (1 + len(target))\n        dp[0] = 0\n\n        for i in range(len(target)):\n            options = t.find(target[i::])\n            for o in options:\n                dp[i + len(o[0]) ] = min(dp[i + len(o[0]) ], o[1] + dp[i] )\n        \n        return dp[-1] if dp[-1] != float('inf') else -1\n                \n                \n            ",
    "submit_ts": "1720321698",
    "subm_id": "1312329926"
}