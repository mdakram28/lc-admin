{
    "username": "Xiao__Jun",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        const int SIZE = nums.size();\n        vector<int> res;\n        vector<bool> isPeak(SIZE, false);\n        \n        BIT bit = BIT(SIZE);\n        \n        function<bool(int)> checkPeak = [&](int idx) ->bool {\n            if(idx == 0 || idx == SIZE - 1)\n                return false;\n            return (nums[idx] > nums[idx - 1]) && (nums[idx] > nums[idx + 1]);\n        };\n        \n        for(int i = 1;i < SIZE - 1;i++)\n            if(checkPeak(i)) {\n                bit.update(i + 1, 1);\n                isPeak[i] = true;\n            }\n        \n        for(int i = 0;i < queries.size();i++) {\n            int type = queries[i][0], left = queries[i][1], index = queries[i][1], right = queries[i][2], val = queries[i][2];\n            \n            if(type == 1) {\n                if(right - left < 2)\n                    res.push_back(0);\n                else\n                    res.push_back(bit.query(right) - bit.query(left + 1));\n            } else {\n                bool isLarger = val > nums[index], isSmaller = val < nums[index];\n                nums[index] = val;\n                if(index > 0 && isPeak[index - 1] != checkPeak(index - 1)) {\n                    isPeak[index - 1] = checkPeak(index - 1);\n                    bit.update(index, (isPeak[index - 1] == 1 ? 1 : -1));\n                }\n                if(index < SIZE - 1 && isPeak[index + 1] != checkPeak(index + 1)) {\n                    isPeak[index + 1] = checkPeak(index + 1);\n                    bit.update(index + 2, (isPeak[index + 1] == 1 ? 1 : -1));\n                }\n                if(isPeak[index] != checkPeak(index)) {\n                    isPeak[index] = checkPeak(index);\n                    bit.update(index + 1, (isPeak[index] == 1 ? 1 : -1));\n                }\n            }\n        }\n        \n        return res;\n    }\nprivate:\n    class BIT{\n        public:\n        vector<int> arr;\n        BIT(int n) {\n            arr = vector<int>(n + 1, 0);\n        }\n        int lowbit(int n){\n            return n & -n;\n        }\n        void update(int n,int val){\n            while(n < arr.size()){\n                arr[n]+= val;\n                n+= lowbit(n);\n            }\n        }\n        int query(int n){\n            if(n <= 0)\n                return 0;\n            int sum = 0;\n            while(n > 0){\n                sum+= arr[n];\n                n-= lowbit(n);\n            }\n            return sum;\n        }\n    };\n};\n/*\n[3,1,4,2,5]\n[[2,3,4],[1,0,4]]\n[4,1,4,2,1,5]\n[[2,2,4],[1,0,2],[1,0,4]]\n[5,4,8,6]\n[[1,2,2],[1,1,2],[2,1,6]]\n\n5,6,7\n6,7,8\n*/",
    "submit_ts": "1718507263",
    "subm_id": "1289646171"
}