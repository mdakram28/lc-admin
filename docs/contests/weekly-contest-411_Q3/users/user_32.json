{
    "username": "Yidi Chen",
    "submission": "typedef long long ll;\n\nconstexpr ll MAXN = 1e5 + 5;\n\nll ps10[MAXN];\nll psidx[MAXN];\nll dp[MAXN][10];\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        ps10[0] = 1 % k;\n        for (ll i = 1; i <= n; i ++) {\n            ps10[i] = (ps10[i - 1] * 10) % k;\n        }\n        ll m = (n + 1) / 2;\n        ll L = 0, R = 0;\n        if (n & 1) {\n            L = n / 2, R = n / 2;\n        } else {\n            L = n / 2 - 1, R = n / 2;\n        }\n        for (ll i = 1; i <= m; i ++) {\n            psidx[i] = (L == R) ? ps10[L] : ((ps10[L] + ps10[R]) % k);\n            L --, R ++;\n        }\n\n        for (ll i = 0; i <= m; i ++) {\n            memset(dp[i], -1, sizeof(dp[i]));\n        }\n        dp[0][0] = 0;\n\n        for (ll i = 1; i <= m; i ++) {\n            for (ll j = 0; j < k; j ++) {\n                for (ll t = 9; t >= 0; t --) {\n                    if (dp[i-1][(j - (t * psidx[i] % k) + k) % k] != -1) {\n                        dp[i][j] = t;\n                        break;\n                    }\n                }\n            }\n        }\n\n        string p;\n        ll MM = 0;\n        if (dp[m][MM] < 1) {\n            return \"\";\n        }\n\n        for (ll i = m ;i >= 1; i --) {\n            p.push_back(dp[i][MM] + '0');\n            MM = (MM - dp[i][MM] * psidx[i] % k + k) % k;\n        }\n\n        if (n & 1) {\n            string u;\n            for (ll i = 0; i < m - 1; i ++) {\n                u.push_back(p[i]);\n            }\n            u.push_back(p.back());\n            for (ll i = m - 2; i >= 0; i --) {\n                u.push_back(p[i]);\n            }\n            return u;\n        } else {\n            string q = p;\n            std::reverse(q.begin(), q.end());\n            return p + q;\n        }\n    }\n};",
    "submit_ts": "1723950011",
    "subm_id": "1359734795"
}