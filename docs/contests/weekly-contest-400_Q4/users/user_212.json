{
    "username": "Apple_juice",
    "submission": "class Solution {\npublic:\n    \n    class ST {\n    public:\n        vector<int> segTree;\n        int n;\n\n        ST(vector<int>& nums)\n        {\n            n = nums.size();\n            segTree.resize(4 * n);\n            build(nums, 0, 0, n - 1);\n        }\n\n        void build(vector<int>& nums, int node, int start,\n                   int end)\n        {\n            if (start == end) {\n                segTree[node] = nums[start];\n            }\n            else {\n                int mid = (start + end) / 2;\n                build(nums, 2 * node + 1, start, mid);\n                build(nums, 2 * node + 2, mid + 1, end);\n\n                segTree[node]\n                    = segTree[2 * node + 1] & segTree[2 * node + 2];\n            }\n        }\n\n        int findQ(int l, int r)\n        {\n            return findQ(0, 0, n - 1, l, r);\n        }\n\n        int findQ(int node, int start, int end, int l, int r)\n        {\n            if (r < start || end < l) {\n                return INT_MAX;\n            }\n            if (l <= start && end <= r) {\n                return segTree[node];\n            }\n            int mid = (start + end) / 2;\n            int p1 = findQ(2 * node + 1, start, mid, l, r);\n            int p2 = findQ(2 * node + 2, mid + 1, end, l, r);\n\n            return p1 & p2;\n        }\n    };\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        ST st(nums);\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid;\n\n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (st.findQ(i, mid) >= k)\n                    l = mid;\n                else\n                    r = mid;\n            }\n            if (l != i - 1)\n                ans = min(ans, abs(st.findQ(i, l) - k));\n            ans = min(ans, abs(k - st.findQ(i, r)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298128.0
}