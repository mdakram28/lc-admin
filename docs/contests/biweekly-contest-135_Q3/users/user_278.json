{
    "username": "saikrishna17394",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n\n        unordered_map<int, int> m;\n        vector<pair<int, int>> v;\n        int diff, max_diff;\n\n        for (int i = 0; i < (n / 2); i++) {\n            diff = abs(nums[i] - nums[n - i - 1]);\n            m[diff]++;\n            max_diff = max(nums[i], nums[n - i - 1]);\n            max_diff = max(max_diff, max(k - nums[i], k - nums[n - i - 1]));\n            v.push_back(make_pair(max_diff, i));\n        }\n\n        int ans = n / 2;\n        sort(v.begin(), v.end());\n        int idx = 0, extra = 0;\n\n        for (int diff = 0; diff <= k; diff++) {\n            while (idx < v.size()) {\n                if (v[idx].first < diff) {\n                    extra++;\n                    idx++;\n                }\n                else {\n                    break;\n                }\n            }\n\n            ans = min(ans, (n / 2) - m[diff] + extra);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721487961",
    "subm_id": "1327406979"
}