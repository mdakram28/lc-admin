{
    "username": "sansaryadav777",
    "submission": "class Solution {\npublic:\n    int findNum(vector<int> bitCnt) {\n        int ans = 0, n = bitCnt.size();\n        for(int i = 0; i < n; i++) {\n            if(bitCnt[i] == 0) {\n                ans += pow(2, i);\n            }\n        }\n        return ans;\n    }\n    \n    void addtobitCnt(vector<int> &bitCnt, int num) {\n        int n = bitCnt.size();\n        for(int i = 0; i < n; i++) {\n            if(((num >> i) & 1) == 0) {\n                bitCnt[i]++;\n            }\n        }\n    }\n    \n    void removefrombitCnt(vector<int> &bitCnt, int num) {\n        int n = bitCnt.size();\n        for(int i = 0; i < n; i++) {\n            if(((num >> i) & 1) == 0) {\n                bitCnt[i]--;\n            }\n        }\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> bitCnt(31, 0);\n        int ans = INT_MAX;\n        int n = nums.size();\n        int j = 0;\n        for(int i = 0; i < n; i++) {\n            while(j < n && findNum(bitCnt) > k) {\n                int currNum = findNum(bitCnt);\n                ans = min(ans, abs(currNum - k));\n                addtobitCnt(bitCnt, nums[j]);\n                j++;\n                // cout << i << \" \" << j << \" \" << findNum(bitCnt) << \"\\n\";\n            }\n            int currNum = findNum(bitCnt);\n            ans = min(ans, abs(currNum - k));\n            removefrombitCnt(bitCnt, nums[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717299618.0
}