{
    "username": "Salvador",
    "submission": "import sys\nsys.set_int_max_str_digits(0)\n\n\nclass Solution:\n\n  def div2(self, n):\n    if n == 1:\n      return '8'\n    return '8' + ('9' * (n - 2)) + '8'\n\n  def div3(self, n):\n    return '9' * n\n\n  def div4(self, n):\n    if n <= 4:\n      return '8' * n\n\n    return '88' + ('9' * (n - 4)) + '88'\n\n  def div5(self, n):\n    if n <= 2:\n      return '5' * n\n    return '5' + ('9' * (n - 2)) + '5'\n\n  def div6(self, n):\n    arr = ['6', '66', '888', '8778', '89898']\n    if n <= len(arr):\n      return arr[n - 1]\n\n    z = (n + 1) // 2 - 2\n    prefix = '8' + '9' * z\n    if n % 2 == 0:\n      return prefix + '77' + prefix[::-1]\n\n    return prefix + '8' + prefix[::-1]\n\n  def div7(self, n):\n    if n <= 2:\n      return '7' * n\n\n    z = (n - 1) // 2\n    prefix = '9' * z\n    if n % 2:\n      for i in range(10, -1, -1):\n        if int(prefix + str(i) + prefix) % 7 == 0:\n          return prefix + str(i) + prefix\n\n    for i in range(10, -1, -1):\n      if int(prefix + str(i) + str(i) + prefix) % 7 == 0:\n        return prefix + str(i) + str(i) + prefix\n\n  def div8(self, n):\n    if n <= 6:\n      return '8' * n\n\n    return '888' + ('9' * (n - 6)) + '888'\n\n  def div9(self, n):\n    return '9' * n\n\n\n  def largestPalindrome(self, n: int, k: int) -> str:\n    if k == 1:\n      return '9' * n\n\n    if k == 2:\n      return self.div2(n)\n\n    if k == 3:\n      return self.div3(n)\n\n    if k == 4:\n      return self.div4(n)\n\n    if k == 5:\n      return self.div5(n)\n\n    if k == 6:\n      return self.div6(n)\n\n    if k == 7:\n      return self.div7(n)\n\n    if k == 8:\n      return self.div8(n)\n\n    if k == 9:\n      return self.div9(n)\n",
    "submit_ts": "1723952698",
    "subm_id": "1359802460"
}