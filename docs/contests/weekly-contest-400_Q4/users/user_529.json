{
    "username": "Nelson84",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        int l = 0;\n        int r = 0;\n        int min_diff = INT_MAX;\n        int cur_and = INT_MAX;\n        unordered_map<int, int> bit_to_freq;\n        while(r<n){\n            int cur_num = nums[r++];\n            insert(bit_to_freq, cur_num);\n            cur_and = get_cur_and(bit_to_freq, r-l);\n            \n            if(cur_and==k) return 0;\n            \n            while(l<r && cur_and<k){\n                min_diff = min(min_diff, abs(k-cur_and));\n                int prev_num = nums[l++];\n                remove(bit_to_freq, prev_num);\n                cur_and = get_cur_and(bit_to_freq, r-l);\n            }\n            \n            min_diff = min(min_diff, abs(k-cur_and));\n        }\n        return min_diff;\n    }\n    \n    int get_cur_and(const unordered_map<int, int>& bit_to_freq, const int cur_cnt){\n        if(cur_cnt<=0) return INT_MAX;\n        \n        int num = 0;\n        for(auto [shift, freq]: bit_to_freq){\n            if(freq!=cur_cnt) continue;\n            \n            num += (1<<shift);\n        }\n        return num;\n    }\n    \n    void insert(unordered_map<int, int>& bit_to_freq, int num){\n        int shift = 0;\n        while(num){\n            if(num&1) bit_to_freq[shift]++;\n            \n            num >>= 1;\n            shift++;\n        }\n    }\n    \n    void remove(unordered_map<int, int>& bit_to_freq, int num){\n        int shift = 0;\n        while(num){\n            if(num&1) bit_to_freq[shift]--;\n            \n            num >>= 1;\n            shift++;\n        }\n    }\n};",
    "submit_ts": 1717298759.0
}