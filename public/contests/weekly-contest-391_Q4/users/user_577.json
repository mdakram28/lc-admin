{
    "username": "flame-f",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, n) for (auto i = (a); i <= (n); ++i)\n#define revrep(i, a, n) for (auto i = (n); i >= (a); --i)\n#define all(a) a.begin(), a.end()\n#define sz(a) (int)(a).size()\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<long long, long long> pll;\n\nconst int inf = 0x3f3f3f3f;\nconst ll linf = 1e16;\nconst int mod = 1e9 + 7;\nconst int dx4[] = {0, -1, 0, 1};\nconst int dy4[] = {-1, 0, 1, 0};\nconst int dx8[] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst int dy8[] = {1, 1, 0, -1, -1, -1, 0, 1};\n\nconst int N = 100010;\nconst int P = 131;\n\nclass Solution {\n    ll p[4][N];\n    ll f[4][N];\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = sz(points);\n        rep(i, 1, n) {\n            int x = points[i - 1][0], y = points[i - 1][1];\n            p[0][i] = x + y;\n            p[1][i] = -x + y;\n            p[2][i] = x - y;\n            p[3][i] = -x - y;\n            f[0][i] = x + y;\n            f[1][i] = -x + y;\n            f[2][i] = x - y;\n            f[3][i] = -x - y;\n        }\n        ll res = inf;\n        rep(i, 0, 3) {\n            sort(p[i] + 1, p[i] + 1 + n);\n        }\n        rep(i, 1, n) {\n            ll ma = 0;\n            rep(j, 0, 3) {\n                int x = f[j][i];\n                if(x == p[j][1]){\n                    ma = max(ma, p[j][n] - p[j][2]);\n                }\n                else if(x==p[j][n]){\n                    ma = max(ma, p[j][n - 1] - p[j][1]);\n                } else {\n                    ma = max(ma, p[j][n] - p[j][1]);\n                }\n            }\n            res = min(res, ma);\n        }\n        return res;\n    }\n};"
}