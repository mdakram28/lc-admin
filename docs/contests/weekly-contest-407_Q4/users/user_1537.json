{
    "username": "Deepanshu_Jindal",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diffs = self.calculateDifferences(nums, target)\n        return self.calculateTotalOperations(diffs)\n\n    def calculateDifferences(self, nums: List[int], target: List[int]) -> List[int]:\n        return [tiger - lion for tiger, lion in zip(target, nums)]\n\n    def calculateTotalOperations(self, diffs: List[int]) -> int:\n        total_ops = 0\n        current_diff = 0\n        \n        for i in range(len(diffs)):\n            if i > 0 and ((diffs[i - 1] > 0 and diffs[i] > 0) or (diffs[i - 1] < 0 and diffs[i] < 0)):\n                additional_ops = abs(diffs[i]) - abs(current_diff)\n                if additional_ops > 0:\n                    total_ops += additional_ops\n                current_diff = diffs[i]\n            else:\n                total_ops += abs(diffs[i])\n                current_diff = diffs[i]\n        \n        return total_ops\n",
    "submit_ts": "1721532987",
    "subm_id": "1327998701"
}