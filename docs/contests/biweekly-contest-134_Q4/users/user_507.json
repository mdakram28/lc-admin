{
    "username": "Mahesh_singh_11",
    "submission": "class Solution {\npublic:\n    \n    \n    // int N=1e6;\n    \n    int st[1000000];\n    \n    int combine(int a,int b){\n          return a&b;\n    }\n    \n    void build(int si,int l,int r,vector<int>&nums){\n        if(l==r){\n                st[si]=nums[l];\n                return;\n            }\n            \n            int m=(l+r)/2;\n            build(2*si+1,l,m,nums);\n            build(2*si+2,m+1,r,nums);\n            \n            st[si]=combine(st[2*si+1],st[2*si+2]);\n\n    }\n    \n    int query(int si,int l,int r,int ql,int qr){\n if(l>=ql && r<=qr)\n                return st[si];\n            \n            if(l>qr || r<ql)\n                return (1<<30)-1;\n            \n            int m=(l+r)/2;\n            int op1=query(2*si+1,l,m,ql,qr);\n            int op2=query(2*si+2,m+1,r,ql,qr);\n            return combine(op1,op2);\n    }\n    \n    \n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        int n=nums.size();\n        \n        \n        \n        // auto combine=[&](int a,int b){\n        //     return a&b;\n        // };\n        \n// function<void(int,int,int)> build=[&](int si,int l,int r){\n            \n            \n//         };\n        \n        \n// function<int(int,int,int,int,int)> query=[&](int si,int l,int r,int ql,int qr){\n           \n//         };\n        \nbuild(0,0,n-1,nums);\n        \n        \n        long long ans=0;\n        \n        \n        auto findMax=[&](int i){\n            int l=i,r=n;\n            \n            while(r>l+1){\n                int m=(l+r)/2;\n                \n                int And=query(0,0,n-1,i,m);\n                if(And>=k)\n                    l=m;\n                else\n                    r=m;\n            }\n            \n            int And=query(0,0,n-1,i,l);\n            if(And==k)\n                return l;\n            return -1;\n        };\n        \n        auto findMin=[&](int i){\n            int l=i-1,r=n-1;\n            \n            if(nums[i]==k)\n                return i;\n            \n            while(r>l+1){\n               int m=(l+r)/2;\n                int And=query(0,0,n-1,i,m);\n                if(And<=k)\n                    r=m;\n                else\n                    l=m;\n            }\n            \n            int And=query(0,0,n-1,i,r);\n            \n            if(And==k)\n                return r;\n            \n            return -1;\n        };\n        \n        for(int i=0;i<n;i++){\n            \n            int l=findMin(i),r=findMax(i);\n            // cout<<l<<\" \"<<r<<\"\\n\";\n            if(l!=-1)\n            ans+=(r-l+1);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720279368",
    "subm_id": "1311748429"
}