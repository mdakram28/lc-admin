{
    "username": "GGHao",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        const int n = s.size();\n        vector<int> dl(n), dr(n);\n        for (int i = 0, j = 0, a = 0, b = 0; i < n; ++i) {\n            if (s[i] == '0') ++a;\n            else ++b;\n            while (min(a, b) > k) {\n                if (s[j] == '0') --a;\n                else --b;\n                ++j;\n            }\n            dl[i] = j;\n        }\n        for (int i = n - 1, j = n - 1, a = 0, b = 0; i >= 0; --i) {\n            if (s[i] == '0') ++a;\n            else ++b;\n            while (min(a, b) > k) {\n                if (s[j] == '0') --a;\n                else --b;\n                --j;\n            }\n            dr[i] = j;\n        }\n        vector<long long> ans(queries.size());\n        vector<array<int,4>> qs(queries.size());\n        for (int i = 0; i < qs.size(); ++i) {\n            qs[i] = {queries[i][0] / 500, queries[i][1], queries[i][0], i};\n        }\n        sort(qs.begin(), qs.end());\n        int li = 0, ri = 0;\n        long long t = 1;\n        for (const auto& [_, r, l, idx] : qs) {\n            while (li < l) {\n                t -= min(ri, dr[li]) - li + 1;\n                ++li;\n            }\n            while (li > l) {\n                --li;\n                t += min(ri, dr[li]) - li + 1;\n            }\n            while (ri < r) {\n                ++ri;\n                t += ri - max(li, dl[ri]) + 1;\n            }\n            while (ri > r) {\n                t -= ri - max(li, dl[ri]) + 1;\n                --ri;\n            }\n            ans[idx] = t;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1723949794",
    "subm_id": "1359729072"
}