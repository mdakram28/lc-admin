{
    "username": "MjMPYFbpxj",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for(int i = 0 ; i < n / 2; i++){\n            for(int j = 0 ; j < m / 2; j++){\n                vector<int> cnt(2);\n                cnt[grid[i][j]]++;\n                cnt[grid[n - i - 1][j]]++;\n                cnt[grid[i][m - j - 1]]++;\n                cnt[grid[n - i - 1][m - j - 1]]++;\n                ans += min(cnt[0] , cnt[1]);\n            }\n        }\n        int cnt = 0, cnt1 = 0;\n        if(n & 1){\n            int i = n/2;\n            for(int j = 0 ; j < m / 2; j++){\n                if(grid[i][j] != grid[i][m - j - 1]){\n                    cnt++;\n                }\n                else{\n                    if(grid[i][j] == 1){\n                        cnt1 += 2;\n                    }\n                }\n            }\n        }\n        if(m & 1){\n            int j = m/2;\n            for(int i = 0 ; i < n / 2; i++){\n                if(grid[i][j] != grid[n - i - 1][j]){\n                    cnt++;\n                }\n                else{\n                    if(grid[i][j]){\n                        cnt1 += 2;\n                    }\n                }\n            }\n        }\n        if(n&1 && m&1){\n            if(grid[n/2][m/2] == 1){\n                ans++;\n            }\n        }\n        if(2*cnt + cnt1%4 < 4){\n            return ans + cnt + cnt1%4;\n        }\n        return ans + cnt;\n    }\n};",
    "submit_ts": "1722698212",
    "subm_id": "1343173361"
}