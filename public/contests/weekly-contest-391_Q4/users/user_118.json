{
    "username": "cyzh",
    "submission": "#define debug(a) cout << #a << \" = \" << a << endl;\n#define debug2(a,b) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<endl;\n#define debug3(a,b,c) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<' '<<#c<<\" = \"<<c<<endl;\n#define debug4(a,b,c,d) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<' '<<#c<<\" = \"<<c<<' '<<#d<<\" = \"<<d<<endl;\n#define debugx(a, idx) cout << #a << \"[\" << idx << \"] = \" << a[idx] << endl;\n#define debugpii(a) cout<<#a<<\" = \"<<a.first<<\", \"<<a.second<<endl;\n#define debugarr(a, x) cout<<#a<<\": \"; for(int i = 0; i < x; i++) cout << a[i] << ' '; cout << endl;\n#define debugarr2(a, n, m) cout<<#a<<\": \\n\";for(int i=0;i<n;i++){for(int j=0;j<m;j++)cout<<a[i][j]<<' ';cout<<'\\n';}\n#define debugvec(a) cout<<#a<<\": \"; for(int i = 0; i < a.size(); i++) cout << a[i] << ' '; cout << endl;\n#define debugque(a) {cout<<#a<<\": \";auto TMP=a;while(TMP.size()){cout<<TMP.front()<<' ';TMP.pop();}cout<<endl;}\n#define debugstk(a) {cout<<#a<<\": \";auto TUP=a;while(TUP.size()){cout<<TUP.top()<<' ';TUP.pop();}cout<<endl;}\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst ll mod=1000000007;\nll qpow(ll a,ll b) {ll res=1;a%=mod; for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\ntemplate <class T> bool chkmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\ntemplate <class T> bool chkmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int a0 = 0, a1 = 0, av0 = mod, av1 = -mod;\n        int b0 = 0, b1 = 0, bv0 = mod, bv1 = -mod;\n        int n = points.size();\n        \n        for(int i = 0; i < n; i++) {\n            int x = points[i][0], y = points[i][1];\n            if (x + y > av1) a1 = i, av1 = x + y;\n            if (x + y < av0) a0 = i, av0 = x + y;\n            \n            if (x - y > bv1) b1 = i, bv1 = x - y;\n            if (x - y < bv0) b0 = i, bv0 = x - y;\n        }\n\n        auto chk = [&points](int idx) {\n            // return 0;\n            int a0 = 0, a1 = 0, av0 = mod, av1 = -mod;\n            int b0 = 0, b1 = 0, bv0 = mod, bv1 = -mod;\n            int n = points.size();\n\n            for(int i = 0; i < n; i++) {\n                if (i == idx) continue;\n                int x = points[i][0], y = points[i][1];\n                if (x + y > av1) a1 = i, av1 = x + y;\n                if (x + y < av0) a0 = i, av0 = x + y;\n\n                if (x - y > bv1) b1 = i, bv1 = x - y;\n                if (x - y < bv0) b0 = i, bv0 = x - y;\n            }\n            \n            return max(av1 - av0, bv1 - bv0);\n        };\n        // debug4(a0, a1, b0, b1);\n        // debug4(chk(a1), chk(a0), chk(b0), chk(b1));\n        return min({chk(a1), chk(a0), chk(b0), chk(b1)});\n    }\n};"
}