{
    "username": "vikasss",
    "submission": "class Solution {\n    \nvoid buildTree(int si, int ss, int se,vector<int>&arr,vector<int>&st) {\n    if (ss == se) {\n        st[si] = arr[ss]; return;\n    }\n    int mid = (ss + se) / 2;\n    buildTree(2 * si, ss, mid,arr,st);\n    buildTree((2 * si) + 1, mid + 1, se,arr,st);\n    st[si] = st[2 * si] & st[(2 * si) + 1];\n}\n\nint answerQuery(int si, int ss, int se, int qs, int qe,vector<int>&arr,vector<int>&st) {\n\n    if (qs > se || qe < ss) return INT_MAX;\n\n    if (qs <= ss && qe >= se) {\n        return st[si];\n    }\n    int mid = (ss + se) / 2;\n    int l = answerQuery(2 * si, ss, mid, qs, qe,arr,st);\n    int r = answerQuery((2 * si) + 1, mid + 1, se, qs, qe,arr,st);\n\n    return l & r;\n}\n    \npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<int> arr(n+1);\n        for(int i=1;i<=n;i++) arr[i]=nums[i-1];\n        \n      //  int k;cin>>k;\n    \n        vector<int> st((4*n)+1);\n        \n        buildTree(1,1,n,arr,st);\n        \n        long long ans=0;\n        \n        for(int i=1;i<=n;i++){\n            \n            if(arr[i]<k) continue;\n            \n            // find the smallest index \n            \n            auto pred1=[&](int mid){\n              int temp=answerQuery(1,1,n,i,mid,arr,st);\n              return temp<=k;  \n            };\n            \n            int l=i-1,r=n+1;\n            while(r-l>1){\n                int mid=(l+r+1)/2;\n                pred1(mid)?(r=mid):(l=mid);\n            }\n            \n            int smallest=r;\n            \n            // find largest\n            \n            auto pred2=[&](int mid){\n              int temp=answerQuery(1,1,n,i,mid,arr,st);\n              return temp>=k;  \n            };\n            \n            l=i-1,r=n+1;\n            while(r-l>1){\n                int mid=(l+r+1)/2;\n                pred2(mid)?(l=mid):(r=mid);\n            }\n            \n            int largest=l;\n            \n            //cout<<smallest<<\" \"<<largest<<endl;\n            \n            int val1=answerQuery(1,1,n,i,smallest,arr,st);\n            int val2=answerQuery(1,1,n,i,largest,arr,st);\n            \n            if(largest>=smallest && val1>=k && val2<=k){\n                ans+=(largest-smallest+1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281130",
    "subm_id": "1311814222"
}