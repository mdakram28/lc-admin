{
    "username": "vikasss",
    "submission": "class Solution {\n    #define pb push_back\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<pair<int, int>> vec;\n        for (int i = 0; i < n; i++) {\n            int x, y;x=points[i][0],y=points[i][1];\n            vec.pb({x, y});\n        }\n        vector<int> V(n), V1(n);\n        multiset<int> mt, mt1;\n\n        for (int i = 0; i < n; i++) {\n            V[i] = vec[i].first + vec[i].second;\n            mt.insert(V[i]);\n            V1[i] = vec[i].first - vec[i].second;\n            mt1.insert(V1[i]);\n        }\n\n        int ans=INT_MAX;\n\n        for (int i = 0; i < n; i++) {\n            mt.erase(mt.find(V[i]));\n            mt1.erase(mt1.find(V1[i]));\n            int a = *(--mt.end()) - *(mt.begin());\n            int b = *(--mt1.end()) - *(mt1.begin());\n\n            int maximum = max(a, b);\n            ans=min(ans,maximum);\n            mt.insert(V[i]);\n            mt1.insert(V1[i]);\n        }\n        return ans;\n    }\n};"
}