{
    "username": "serene-torvalds38a",
    "submission": "class Solution {\nprivate:\n    array<int, 30> cnt;\n    array<int, 30> cnt2;\n    void Add(int a, array<int, 30>& cnt) {\n        for (int i = 0; i < 30; i++) {\n            cnt[i] += (a >> i) & 1;\n        }\n    }\n    void Sub(int a, array<int, 30>& cnt) {\n        for (int i = 0; i < 30; i++) {\n            cnt[i] -= (a >> i) & 1;\n        }\n    }\n    int Pc(int len, array<int, 30>& cnt) {\n        int res = 0;\n        for (int i = 0; i < 30; i++) {\n            if (cnt[i] == len) {\n                res++;\n            }\n        }\n        return res;\n    }\n    int Num(int len, array<int, 30>& cnt) {\n        int res = 0;\n        for (int i = 0; i < 30; i++) {\n            if (cnt[i] == len) {\n                res ^= 1 << i;\n            }\n        }\n        return res;\n    }\n\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        cnt.fill(0);\n        cnt2.fill(0);\n        int pc = popcount((unsigned)k);\n        int l1 = 0;\n        int l2 = 0;\n        int n = nums.size();\n        long long res = 0;\n        for (int r = 1; r <= n; r++) {\n            Add(nums[r - 1], cnt);\n            Add(nums[r - 1], cnt2);\n            while (l1 + 1 < r && Pc(r - l1, cnt) < pc) {\n                Sub(nums[l1], cnt);\n                l1++;\n            }\n            while (l2 < r && Pc(r - l2, cnt2) <= pc) {\n                Sub(nums[l2], cnt2);\n                l2++;\n            }\n            // cout << Pc(r - l1, cnt) << ',' << l1 << ',' << Pc(r - l2, cnt2)\n            //      << ',' << l2 << ',' << r << endl;\n            if (Num(r - l1, cnt) == k) {\n                res += l2 - l1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720278051",
    "subm_id": "544560392"
}