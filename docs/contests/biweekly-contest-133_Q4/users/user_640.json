{
    "username": "dd2307",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, req: List[List[int]]) -> int:\n        req.sort()\n        pe = 0\n        pc = 0\n\n\n        if req[0][0] != 0:\n            req = [[0, 0]] + req\n\n        me = req[-2][0] + 1\n        mc = 0\n        mn = 0\n        MOD = 10**9 + 7\n\n        for e, c in req:\n            de = e - pe\n            dc = c - pc\n            mc = max(mc, dc)\n            mn = max(mn, de)\n            pe = e\n            pc = c\n\n        pe = 0\n        pc = 0\n\n        ans = 1\n\n        dp = [[0] * (mc + 1) for _ in range(mn + 1)]\n        dp[0][0] = 1\n\n        for i in range(1, mn + 1):\n            for k in range(mc + 1):\n                dp[i][k] = dp[i - 1][k]\n                if k >= i:\n                    dp[i][k] -= dp[i - 1][k - i]\n                if k > 0:\n                    dp[i][k] += dp[i][k - 1]\n\n        dp1 = [[[0] * (mc + 1) for _ in range(me + 1)] for _ in range(mn + 1)]\n        dp1[0][0][0] = 1\n\n        for j in range(me + 1):\n            for k in range(mc + 1):\n                if k <= j:\n                    dp1[1][j][k] = 1\n\n        for i in range(2, mn + 1):\n            for j in range(me + 1):\n                for k in range(mc + 1):\n                    dp1[i][j][k] = dp1[i][j-1][k] if j > 0 else 0\n                    if k >= j:\n                        dp1[i][j][k] += dp1[i-1][j][k-j]\n                    if k == 0:\n                        dp1[i][j][k] = 1\n\n        for e, c in req:\n            if e == 0:\n                if c != 0:\n                    return 0\n                continue\n            de = e - pe\n            dc = c - pc\n            curr = 0\n            for i in range(dc+1):\n                curr += dp[de][i] * dp1[de][pe+1][dc-i]\n            ans = (ans * curr) % MOD\n            pe = e\n            pc = c\n\n        return ans",
    "submit_ts": "1719070890",
    "subm_id": "1296834195"
}