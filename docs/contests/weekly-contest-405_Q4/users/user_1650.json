{
    "username": "Bhaskar9143",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n=len(target)\n        m=len(words)\n        wc={}\n        for i in range(m):\n            word=words[i]\n            cost=costs[i]\n            if word not in wc:\n                wc[word]=cost\n            else:\n                wc[word]=min(wc[word],cost)\n        dp=[float('inf')]*(n+1)\n        dp[0]=0\n        for i in range(1,n+1):\n            for word in wc:\n                \n                len_word=len(word)\n                if(i>=len_word and target.startswith(word,i-len(word))):\n                    dp[i]=min(dp[i],dp[i-len_word]+wc[word])\n        return dp[n] if  dp[n]!=float('inf') else -1;",
    "submit_ts": "1720324095",
    "subm_id": "1312391470"
}