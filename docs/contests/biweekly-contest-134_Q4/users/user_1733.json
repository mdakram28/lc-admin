{
    "username": "bky-i",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        int last_zero[32];\n        memset(last_zero, -1, sizeof(last_zero));\n        long long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 32; j++) {\n                if (((nums[i] >> j) & 1) == 0)  last_zero[j] = i;\n            }\n            if ((nums[i] & k) != k)  continue;\n            int zero = i, one = 0;\n            for (int j = 0; j < 32; j++) {\n                if ((k >> j) & 1)  one = max(one, last_zero[j] + 1);\n                else  zero = min(zero, last_zero[j]);\n            }\n            ans += max(0, zero - one + 1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280339",
    "subm_id": "544571534"
}