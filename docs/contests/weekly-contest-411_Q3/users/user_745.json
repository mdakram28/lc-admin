{
    "username": "cybertan0349",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        // 5: end with 0 or 5\n        // 2: even\n        // 1: \n        // 3:\n        StringBuilder ans = new StringBuilder();\n        if (k == 1 || k == 3 || k == 9) {\n            ans.append(\"9\");\n            n--;\n            //return build(ans, ans, n);\n        }\n        if (k == 2) {\n            //if (n == 1) return \"8\";\n            ans.append(\"8\");\n            n--;\n        }\n        // if ( k == 3) {\n        //     ans.append(\"9\");\n        //     n--;\n        // }\n        if ( k == 4) {\n            if (n <= 3) {\n                while(n > 0) {\n                    ans.append(\"8\");\n                    n--;\n                }\n                return ans.toString();\n            }\n            ans.append(\"88\");\n            n -= 2;\n        }\n        if (k == 5) {\n            // last string is 5, first string is 5\n            //if (n == 1) return \"5\";\n            ans.append(\"5\");\n            n--;\n            //return build(ans, ans, n);\n        }\n\n        if (k == 6) {\n            if (n <= 2) {\n                while(n > 0) {\n                    ans.append(\"6\");\n                    n--;\n                }\n                return ans.toString();\n            }\n            if (n == 3) {\n                return \"888\";\n            }\n            return buildSix(n);\n        }\n\n        if ( k == 7) {\n            if (n <= 2) {\n                while(n > 0) {\n                    ans.append(\"7\");\n                    n--;\n                }\n                return ans.toString();\n            }\n            return buildSeven(n);\n        }\n\n        if ( k == 8) {\n            if ( n <= 6) {\n                while(n > 0) {\n                    ans.append(\"8\");\n                    n--;\n                }\n                return ans.toString();\n            }\n            ans.append(\"888\");\n            n -= 3;\n        }\n\n        return build(ans, ans.toString(), n);\n    }\n\n    private String build(StringBuilder cur, String last, int n) {\n        while(n > last.length()) {\n            cur.append(\"9\");\n            n--;\n        }\n        if (n == last.length()) cur.append(last);\n        return cur.toString();\n    }\n\n    private String buildSix(int n) {\n        int start = 8 * 2;\n        n -= 2;\n        StringBuilder ans = new StringBuilder();\n        ans.append(\"88\");\n        int idx = 1;\n        while( n > 2) {\n            start += 9 * 2;\n            ans.insert(idx, \"99\");\n            idx++;\n            n -= 2;\n        }\n        for(int i = 9; i >= 0; i--) {\n            if ((start + i * n) % 3 == 0) {\n                if (n == 1) {\n                    ans.insert(idx, i);\n                } else {\n                    ans.insert(idx, i * 10 + i);\n                }   \n                return ans.toString();\n            }\n        }\n        return ans.toString();\n    }\n\n    private String buildSeven(int n) {\n        int idx = n / 2;\n        boolean even = n % 2 == 0? true: false;\n        StringBuilder ans = new StringBuilder();\n        while(n > 0) {\n            ans.append(\"9\");\n            n--;\n        }\n        \n        int cur = 9;\n        while(!isDivisible7(ans.toString())) {\n            System.out.println(ans);\n            cur--;\n            if (!even) {\n                ans.replace(idx, idx+1, String.valueOf(cur));\n            } else {\n                ans.replace(idx-1, idx+1, String.valueOf(cur * 10 + cur));\n            }\n            \n        }\n        return ans.toString();\n    }\n    private boolean isDivisible7(String num)\n    {\n        int n = num.length();\n        if (n == 0 && num.charAt(0) == '0')\n            return true;\n \n        if (n % 3 == 1)\n            num = \"00\" + num;\n        if (n % 3 == 2)\n            num = \"0\" + num;\n        n = num.length();\n \n        int gSum = 0, p = 1;\n        for (int i = n - 1; i >= 0; i--) {\n \n            int group = 0;\n            group += num.charAt(i--) - '0';\n            group += (num.charAt(i--) - '0') * 10;\n            group += (num.charAt(i) - '0') * 100;\n            gSum = gSum + group * p;\n            p = p * -1;\n        }\n \n        return (gSum % 7 == 0);\n    }\n}",
    "submit_ts": "1723953431",
    "subm_id": "1359821069"
}