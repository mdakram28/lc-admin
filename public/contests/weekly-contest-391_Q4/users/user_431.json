{
    "username": "CAEL0",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int maxSum, minSum, maxDiff, minDiff;\n        \n        maxSum = minSum = points[0][0] + points[0][1];\n        maxDiff = minDiff = points[0][0] - points[0][1];\n        vector<vector<int>> v(4, {0});\n        \n        for (int i = 1; i < points.size(); i++) {\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            \n            if (maxSum < sum) {\n                maxSum = sum;\n                v[0] = {i};\n            } else if (maxSum == sum)\n                v[0].push_back(i);\n            \n            if (minSum > sum) {\n                minSum = sum;\n                v[1] = {i};\n            } else if (minSum == sum)\n                v[1].push_back(i);\n            \n            if (maxDiff < diff) {\n                maxDiff = diff;\n                v[2] = {i};\n            } else if (maxDiff == diff)\n                v[2].push_back(i);\n            \n            if (minDiff > diff) {\n                minDiff = diff;\n                v[3] = {i};\n            } else if (minDiff == diff)\n                v[3].push_back(i);\n        }\n        int ret = INT_MAX;\n        ret = min(ret, maxDistExceptOne(v[0][0], points));\n        ret = min(ret, maxDistExceptOne(v[1][0], points));\n        ret = min(ret, maxDistExceptOne(v[2][0], points));\n        ret = min(ret, maxDistExceptOne(v[3][0], points));\n        return ret;\n    }\n    \n    int maxDistExceptOne(int idx, vector<vector<int>> &points) {\n        int maxSum, minSum, maxDiff, minDiff;\n        \n        if (idx > 0) {\n            maxSum = minSum = points[0][0] + points[0][1];\n            maxDiff = minDiff = points[0][0] - points[0][1];\n        } else {\n            maxSum = minSum = points[1][0] + points[1][1];\n            maxDiff = minDiff = points[1][0] - points[1][1];\n        }\n        \n        for (int i = 0; i < points.size(); i++) {\n            if (idx == i)\n                continue;\n            \n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            \n            maxSum = max(maxSum, sum);\n            minSum = min(minSum, sum);\n            maxDiff = max(maxDiff, diff);\n            minDiff = min(minDiff, diff);\n        }\n        return max(maxSum - minSum, maxDiff - minDiff);\n    }\n};"
}