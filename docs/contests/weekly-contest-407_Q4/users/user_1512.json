{
    "username": "suci-4",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] dist = new int[n];\n        for(int i = 0; i < n; i++){\n            dist[i] = nums[i] - target[i];\n        }\n        long ans = 0;\n        int i = 0;\n        while(i < n){\n            if(dist[i] == 0){\n                i++;\n                continue;\n            }\n            int begin = i;\n            if(dist[i] < 0){\n                int max = dist[i];\n                while(i < n && dist[i] < 0){\n                    max = Math.max(max, dist[i]);\n                    i++;\n                }\n                ans += -max;\n                i = begin;\n                while(i < n && dist[i] < 0){\n                    dist[i] -= max;\n                    i++;\n                }\n                i = begin;\n                continue;\n            }\n            if(dist[i] > 0){\n                int min = dist[i];\n                while(i < n && dist[i] > 0){\n                    min = Math.min(min, dist[i]);\n                    i++;\n                }\n                ans += min;\n                i = begin;\n                while(i < n && dist[i] > 0){\n                    dist[i] -= min;\n                    i++;\n                }\n                i = begin;\n                continue;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721531838",
    "subm_id": "548388844"
}