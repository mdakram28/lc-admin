{
    "username": "Risko986",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        diffs = {}\n        for i in range(len(nums)//2):\n            dif = abs(nums[i] - nums[-i-1])\n            cet = diffs.get(dif, 0)\n            diffs[dif] = cet+1\n        best = -1\n        sec = -1\n        freq = 0\n        secfreq = 0\n        for i in diffs:\n            if diffs[i] > freq:\n                freq = diffs[i]\n                best = i\n            elif diffs[i] == freq and i < best:\n                best = i\n        for i in diffs:\n            if i == best and diffs[i] == freq:\n                continue\n            if diffs[i] > secfreq:\n                secfreq = diffs[i]\n                sec = i\n            elif diffs[i] == secfreq and i < sec:\n                sec = i\n        res1 = 0\n        for i in range(len(nums)//2):\n            if abs(nums[i] - nums[-i-1]) != best:\n                if nums[i] + best > k and nums[i] - best < 0 and nums[-i-1] + best > k and nums[-i-1] - best < 0:\n                    res1 += 2\n                else:\n                    res1 += 1\n        res2 = 0\n        for i in range(len(nums)//2):\n            if abs(nums[i] - nums[-i-1]) != sec:\n                if nums[i] + sec > k and nums[i] - sec < 0 and nums[-i-1] + sec > k and nums[-i-1] - sec < 0:\n                    res2 += 2\n                else:\n                    res2 += 1\n        return min(res1, res2)",
    "submit_ts": "1721487478",
    "subm_id": "1327390290"
}