{
    "username": "Divyanshu52Singhal",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        L=list()\n        half=len(nums)//2\n        n=len(nums)\n        ans=n\n        for i in range(len(nums)//2):\n            L.append(abs(nums[i]-nums[-i-1]))\n        C=Counter(L).most_common()[:11]\n        for x in C:\n            x=x[0]\n            changes = 0\n            for i in range(half):\n                a = nums[i]\n                b = nums[n - i - 1]\n                current_diff = abs(a - b)    \n                if current_diff == x:\n                    continue\n                one_change_possible = (min(a,b)-(x-current_diff))>=0 or (max(a,b)+(x-current_diff))<=k\n                if one_change_possible:\n                    changes += 1\n                else:\n                    changes += 2\n            #print(changes,ans,x)\n            ans=min(ans,changes)\n        return ans",
    "submit_ts": "1721487857",
    "subm_id": "1327403471"
}