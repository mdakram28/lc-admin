{
    "username": "nttung42",
    "submission": "class Solution {\npublic:\n    vector<int>pre,mx;\n    int n;\n    set<int>st;\n    vector<bool>ans;\n    void push(int id,int l,int r,int mid)\n    {\n        int &x=pre[id];\n        if(x==-1) return;\n        pre[id<<1]=pre[id<<1|1]=x;\n        mx[id<<1]=mid-x+1,mx[id<<1|1]=r-x+1;\n        x=-1;\n    }\n    void update(int id,int l,int r,int u,int v)\n    {\n        if(r<u or l>v or u>v) return;\n        if(u<=l and r<=v)\n        {\n            pre[id]=u,mx[id]=r-u+1;\n            return;\n        }\n        int mid=(l+r)>>1;\n        push(id,l,r,mid);\n        update(id<<1,l,mid,u,v),update(id<<1|1,mid+1,r,u,v);\n        mx[id]=max(mx[id<<1],mx[id<<1|1]);\n    }\n    int get(int id,int l,int r,int pos)\n    {\n        if(l>pos) return 0;\n        if(r<=pos) return mx[id];\n        int mid=(l+r)>>1;\n        push(id,l,r,mid);\n        return max(get(id<<1,l,mid,pos),get(id<<1|1,mid+1,r,pos));\n    }\n    vector<bool> getResults(vector<vector<int>>& queries)\n    {\n        n=0;\n        for(vector<int>x:queries) n=max(n,x[1]);\n        st.insert(0),st.insert(n);\n        pre.assign(4*n+10,0),mx.assign(4*n+10,0);\n        update(1,1,n,1,n);\n        for(vector<int>x:queries)\n        {\n            if(x[0]==1)\n            {\n                int pos=x[1];\n                auto it=st.lower_bound(pos);\n                int cr=*it,cl;\n                it--,cl=*it;\n                update(1,1,n,cl+1,pos),update(1,1,n,pos+1,cr);\n                st.insert(pos);\n            }\n            else\n            {\n                int len=get(1,1,n,x[1]);\n                ans.push_back((len>=x[2]));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716652507.0
}