{
    "username": "a29554483",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        ans = 0\n        vt_cut = 0\n        hz_cut = 0\n        heap_cut = list()\n        for i in range(len(horizontalCut)):\n            heapq.heappush(heap_cut, (-horizontalCut[i], i, 0))\n        for i in range(len(verticalCut)):\n            heapq.heappush(heap_cut, (-verticalCut[i], i, 1))\n        while(heap_cut):\n            cut_value, index, h_or_v_cut = heapq.heappop(heap_cut)\n            if h_or_v_cut == 0:\n                ans += -cut_value * (vt_cut + 1)\n                hz_cut += 1\n            else:\n                ans += -cut_value * (hz_cut + 1)\n                vt_cut += 1\n        return ans\n        ",
    "submit_ts": "1720926450",
    "subm_id": "1320286663"
}