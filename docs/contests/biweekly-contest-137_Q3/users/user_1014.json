{
    "username": "Devanshu Dangi",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n\n        int n = board.size();\n        int m = board[0].size();\n        \n        vector<vector<pair<ll, ll>>> grid(n, vector<pair<ll, ll>>(m));\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                grid[i][j] = {static_cast<ll>(board[i][j]), static_cast<ll>(j)};\n            }\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            sort(grid[i].rbegin(), grid[i].rend());\n        }\n        \n        ll ans = LLONG_MIN;\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                for (int k = j + 1; k < n; ++k) {\n                    for (int l1 = 0; l1 < 3; ++l1) {\n                        for (int l2 = 0; l2 < 3; ++l2) {\n                            for (int l3 = 0; l3 < 3; ++l3) {\n                                ll x1 = grid[i][l1].second;\n                                ll y1 = grid[j][l2].second;\n                                ll z1 = grid[k][l3].second;\n                                \n                                if (x1 != y1 && y1 != z1 && x1 != z1) {\n                                    ll currentSum = grid[i][l1].first + grid[j][l2].first + grid[k][l3].first;\n                                    ans = max(ans, currentSum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723908945",
    "subm_id": "1359173456"
}