{
    "username": "martian_18",
    "submission": "class FenwickTree {\nprivate:\n    std::vector<int> bit;\n    int n;\n\npublic:\n    FenwickTree(const std::vector<int>& arr) : n(arr.size()), bit(arr.size() + 1, 0) {\n        for (int i = 0; i < n; i++) {\n            bit[i + 1] = arr[i];\n        }\n\n        for (int i = 1; i <= n; i++) {\n            int j = i + (i & -i);  // The next index to update\n            if (j <= n) {\n                bit[j] += bit[i];  // Propagate the sum forward\n            }\n        }\n    }\n\n    void update(int idx, int delta) {\n        int i = idx + 1; // Convert to 1-based index for BIT operations\n        while (i <= n) {\n            bit[i] += delta;\n            i += i & -i;\n        }\n    }\n\n    int sum(int idx) {\n        int result = 0;\n        int i = idx + 1; // Convert to 1-based index for BIT operations\n        while (i > 0) {\n            result += bit[i];\n            i -= i & -i;\n        }\n        return result;\n    }\n\n    int query(int l, int r) {\n        return sum(r) - sum(l - 1);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        vector<int>temp(n,0);\n        for(int i=1;i<(n-1);i++)\n        {\n            if(nums[i]>nums[i-1] and nums[i]>nums[i+1])\n            {\n                temp[i]=1;\n            }\n        }\n        FenwickTree ft(temp);\n        vector<int> ans;\n        int m=queries.size();\n        for(int i=0;i<m;i++)\n        {\n            vector<int> & t=queries[i];\n            if(t[0]==1)\n            {\n                int a=queries[i][1];int b=queries[i][2];\n                if(b-a<=1)\n                {\n                    ans.push_back(0);\n                    continue;\n                }\n                int res=ft.query(a,b);\n                //if(a-1>0 and a+1<n and nums[a]>nums[a-1] and nums[a]>nums[a+1]) ans--;\n                //if(b-1>0 and b+1<n and nums[b]>nums[a-1] and nums[b]>nums[a+1]) ans\n                if(temp[a]==1) res--;\n                if(temp[b]==1) res--;\n                ans.push_back(res);      \n            }\n            else\n            {\n                 int a=queries[i][1];int b=queries[i][2];\n                 bool c=(temp[a]==1)?true:false;\n                 nums[a]=b;\n                bool d=false;\n                int pos=a;\n                if(pos-1>=0 and pos+1<n and nums[pos]>nums[pos-1] and nums[pos]>nums[pos+1]) d=true;\n                //cout<<c<<\" \"<<d<<endl;\n                if(c!=d)\n                {\n                    if(c==true)\n                    {\n                        temp[pos]=0;\n                        ft.update(pos,-1);\n                    }\n                    else\n                    {\n                        temp[pos]=1;ft.update(pos,1);\n                    }\n                }\n                pos=a-1;\n                if(pos>=0 and pos<n)\n                {\n                    d=false;\n                    c=(temp[pos]==1)?true:false;\n                    if(pos-1>=0 and pos+1<n and nums[pos]>nums[pos-1] and nums[pos]>nums[pos+1]) d=true;\n                   // cout<<c<<\" \"<<d<<endl;\n                    if(c!=d)\n                    {\n                        if(c==true)\n                        {\n                            temp[pos]=0;\n                            ft.update(pos,-1);\n                        }\n                        else\n                        {\n                            temp[pos]=1;ft.update(pos,1);\n                        }\n                    }\n                }\n                pos=a+1;\n                if(pos>=0 and pos<n)\n                {\n                    d=false;\n                    c=(temp[pos]==1)?true:false;\n                    if(pos-1>=0 and pos+1<n and nums[pos]>nums[pos-1] and nums[pos]>nums[pos+1]) d=true;\n                   // cout<<c<<\" \"<<d<<endl;\n                    if(c!=d)\n                    {\n                        if(c==true)\n                        {\n                            temp[pos]=0;\n                            ft.update(pos,-1);\n                        }\n                        else\n                        {\n                            temp[pos]=1;ft.update(pos,1);\n                        }\n                    }\n                }\n                \n                \n            }\n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508715.0
}