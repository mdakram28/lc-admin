{
    "username": "nikhiljain_413",
    "submission": "class Solution {\npublic:\n    vector<int> vis;\n    int diameter(int node, int &res, vector<int> adj[]){\n        vis[node] = 1;\n        int l = 0;\n        int r = 0;\n        for(auto ch: adj[node]){\n            if(!vis[ch]){\n                int temp = diameter(ch, res, adj);\n                if(temp>r){\n                    l = r;\n                    r = temp;\n                }else if(temp>l){\n                    l = temp;\n                }\n            }\n        }\n        int temp = max(l,r)+1;\n        int ans = max(l+r+1, temp);\n        res = max(res, ans);\n        return temp;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size();\n        int m = edges2.size();\n        vector<int> adj1[n+1];\n        vector<int> adj2[m+1];\n        vis = vector<int> (n+1,0);\n        \n        for(auto edge: edges1){\n            int u = edge[0];\n            int v = edge[1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n        int res = 0;\n        diameter(0,res, adj1);\n        cout<<res<<\" \";\n        int left = res;\n        vis.clear();\n        vis = vector<int> (m+1,0);\n        for(auto edge: edges2){\n            int u = edge[0];\n            int v = edge[1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n        res = 0;\n        diameter(0,res, adj2);\n        cout<<res<<endl;\n        int right = res;\n            \n        // cout<<(left/2)+(right/2)+1;\n        return max({(left/2)+(right/2)+1, left-1, right-1});\n    }\n};",
    "submit_ts": "1719719594",
    "subm_id": "1304445778"
}