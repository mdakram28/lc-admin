{
    "username": "Ritu8299",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n       map<int, int> inv_need;\n        int m=req.size();\n         long long ans = 0;\n          vector<vector<long long>> dp(n + 1, vector<long long>(401,0));\n        dp[0][0] = 1;\n        int mod = 1e9+7;\n\n        for(int i=0;i<m;i++) {\n            inv_need[req[i][0] + 1] = req[i][1];\n        }\n\n    \n\n        for (int end = 1; end <= n; end++) {\n            for (int j = 0; j<= 400;j++) {\n                for (int pos = 0; pos < end; pos++) {\n                    long long temp = j - pos;\n                    if (temp >= 0) {\n                        dp[end][j] = (dp[end - 1][temp] +dp[end][j]) % mod;\n                    }\n                }\n            }\n\n            if (inv_need.find(end)!=inv_need.end()) {\n                int temp = inv_need[end];\n                for (int inv = 0; inv <= 400; inv++) {\n                    if (inv != temp) {\n                        dp[end][inv] = 0;\n                    }\n                }\n            }\n        }\n\n       \n        for (int i=0;i<401;i++) {\n            ans = (ans + dp[n][i]) % mod;\n        }\n\n       return ans;\n        \n    }\n};",
    "submit_ts": "1719071327",
    "subm_id": "1296844251"
}