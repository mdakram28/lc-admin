{
    "username": "Abhijeet_Singh2002",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n    sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n    \n    int h = 1;\n    int v = 1;\n    long long ans = 0;\n    \n    int i = 0, j = 0;\n\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n        if (horizontalCut[i] >= verticalCut[j]) {\n            ans += horizontalCut[i] * 1ll*v;\n            h++;\n            i++;\n        } else {\n            ans += verticalCut[j] *1ll* h;\n            v++;\n            j++;\n        }\n    }\n    \n   \n    while (i < horizontalCut.size()) {\n        ans += horizontalCut[i] *1ll* v;\n        h++;\n        i++;\n    }\n    \n\n    while (j < verticalCut.size()) {\n        ans += verticalCut[j] *1ll* h;\n        v++;\n        j++;\n    }\n    \n    return ans;\n    }\n    \n};",
    "submit_ts": "1720925537",
    "subm_id": "1320258020"
}