{
    "username": "Nikesh8840",
    "submission": "class Solution {\npublic:\n        int mv = 400;\n        int mod = 1e9+7;\n       unordered_map<int, int> mp;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n               for (auto rq : requirements) {\n                    mp[rq[0] + 1] = rq[1];\n                }\n        vector<vector<long long>> Nik(n + 1,vector<long long>(mv + 1, 0));\n        Nik[0][0] = 1;\n                    for (int len = 1; len <= n; ++len) {\n                        for (int i = 0; i <= mv; ++i) {\n                            for (int newPos = 0; newPos < len; ++newPos) {\n                                int prevInv = i - newPos;\n                                if (prevInv >= 0) {\n                                    Nik[len][i] = (Nik[len][i] + Nik[len - 1][prevInv]) % mod;\n                                }\n                            }\n                        }\n\n                    if (mp.find(len) != mp.end()) {\n                        int targetInv = mp[len];\n                        for (int inv = 0; inv <= mv; ++inv) {\n                            if (inv != targetInv) {\n                                Nik[len][inv] = 0;\n                            }\n                        }\n                    }\n            }\n         long long res = 0;\n        for (long long cnt : Nik[n]) {\n            res = (res + cnt) % mod;\n        }\n\n        return res;\n    }\n       \n};",
    "submit_ts": 1719071576.0
}