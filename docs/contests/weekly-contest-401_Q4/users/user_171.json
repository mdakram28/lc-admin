{
    "username": "balakrishnan_v",
    "submission": "#define MAXN 50000\nclass Solution {\npublic:\n    \n    int dp[2*MAXN+2];\n    int maxTotalReward(vector<int>& R) {\n        set<int> Rs(R.begin(),R.end());\n        R = vector<int>(Rs.begin(),Rs.end());\n        int MAXR = R.back();\n        int n=R.size();\n        int minj=n;\n       for(int curr=2*MAXR;curr>=0;curr--) {\n            dp[curr]=0;\n            while(minj && R[minj-1]>curr) minj--;\n            int max_val = curr;\n            int ct=0;\n            for(int j=minj;j<n;) {\n                int x = R[j];\n                // find the largest value such that dp[curr+R[k]] >= dp[curr+x]\n\n\n                int low=j;\n                int high=n-1;\n                while(low<high) {\n                    int mid=(low+high+1)/2;\n                    if (dp[curr+R[mid]]>=dp[curr+x]) {\n                        low=mid;\n                    } else {\n                        high=mid-1;\n                    }\n                }\n\n\n                x = R[low];\n\n\n                // while(low<high) {\n                //     int mid=(low+high+1)/2;\n                //     if (dp[mid]>=dp[curr+x]) {\n                //         low=mid;\n                //     } else {\n                //         high=mid-1;\n                //     }\n                // }\n\n                // max(t+dp[t] for t >= x+curr)\n                //if (dp_max[x+curr] <= max_val) break;\n                int tmp = x+curr+dp[curr+x];\n\n\n                // \n                if (tmp <= max_val) {\n                    ct++;\n                }\n                if (ct >= 100) break;\n                max_val=max(max_val,tmp);\n                j=low+1;\n\n            }\n            dp[curr]=max_val-curr;      \n        }\n        \n        \n        return dp[0];\n    }\n};",
    "submit_ts": "1717905077",
    "subm_id": "1282380186"
}