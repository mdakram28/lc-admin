{
    "username": "MvKaio",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& A) {\n        int n = A.size();\n        using pii = pair<int, int>;\n        vector<pii> p;\n        vector<int> a, b;\n        for (int i = 0; i < n; i++) {\n            int x = A[i][0] + A[i][1];\n            int y = A[i][0] - A[i][1];\n            a.push_back(x);\n            b.push_back(y);\n        }\n        multiset<int> st, tt;\n        for (int i = 0; i < n; i++) {\n            st.insert(a[i]);\n            tt.insert(b[i]);\n        }\n        int ans = 2e9;\n        for (int i = 0; i < n; i++) {\n            st.erase(st.find(a[i]));\n            tt.erase(tt.find(b[i]));\n            ans = min(ans, max(*st.rbegin() - *st.begin(), *tt.rbegin() - *tt.begin()));\n            st.insert(a[i]);\n            tt.insert(b[i]);\n        }\n\n        return ans;\n    }\n};"
}