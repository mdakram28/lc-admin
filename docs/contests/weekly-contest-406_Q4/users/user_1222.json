{
    "username": "harshal31718",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horiCut, vector<int>& vertiCut) {\n                int hori=1,verti=1;\n        vector<pair<int,int>> hash;\n        for(auto i:horiCut) hash.push_back(make_pair(i,0));\n        for(auto i:vertiCut) hash.push_back(make_pair(i,1));\n\n        sort(hash.begin(),hash.end());\n\n        long long ans=0;\n\n        \n        for(int i=hash.size()-1;i>=0;i--){\n            int num=hash[i].first;\n            int typ=hash[i].second;\n\n            if(typ==0){\n                ans = ans + num*hori;\n                verti++;\n            }\n            else{\n                ans = ans + num*verti;\n                hori++;\n            }\n        }\n\n        // for(auto ele:hash) cout<<ele.first<<\" \"<<ele.second<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720925528",
    "subm_id": "1320257686"
}