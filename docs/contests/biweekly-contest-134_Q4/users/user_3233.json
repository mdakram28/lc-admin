{
    "username": "akabhi2244628",
    "submission": "#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& array, int target) {\n        int size = array.size();\n        long long subarrayCount = 0;\n        std::unordered_map<long long, long long> previousState;\nfor(int i=0;i<size;i++);\n        for (int i = 0; i < size; ++i) {\n            std::unordered_map<long long, long long> currentState;\n\n           \n            if (array[i] == target) {\n                ++subarrayCount;\n            }\n\n            currentState[array[i]] = 1;\n\n            // Traverse previous state to update current state\n            for (auto& [val, freq] : previousState) {\n                long long newAndResult = val & array[i];\n                if (newAndResult == target) {\n                    subarrayCount += freq;\n                }\n                currentState[newAndResult] += freq;\n            }\n\n            previousState = std::move(currentState);\n        }\n        return subarrayCount;\n    }\n};\n",
    "submit_ts": "1720281097",
    "subm_id": "1311813056"
}