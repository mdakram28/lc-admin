{
    "username": "jainyashu1403",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hCut(horizontalCut.begin(), horizontalCut.end());\n        priority_queue<int> vCut(verticalCut.begin(), verticalCut.end());\n        long long ans = 0;\n        int hPart = 1, vPart = 1;\n\n        while(!hCut.empty() && !vCut.empty()) {\n            int h = hCut.top();\n            int v = vCut.top();\n            \n            if(h > v) {\n                ans += h * vPart;\n                hPart++;\n                hCut.pop();\n            }else {\n                ans += v * hPart;\n                vPart++;\n                vCut.pop();\n            }\n        }\n\n        while(!hCut.empty()) {\n            int h = hCut.top();\n            ans += h * vPart;\n            hPart++;\n            hCut.pop();\n        }\n\n        while(!vCut.empty()) {\n            int v = vCut.top();\n            ans += v * hPart;\n            vPart++;\n            vCut.pop();\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926181",
    "subm_id": "1320278373"
}