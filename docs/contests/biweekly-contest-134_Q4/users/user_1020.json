{
    "username": "shu-xi",
    "submission": "# 1\u7684\u4f4d\u5168\u6709\uff0c0\u7684\u4f4d\u81f3\u5c111\u4e2a\n# \u8981\u6c42\u57281\u5168\u6709\u7684\u4e4b\u4e2d\uff0c\u6240\u6709(0\u7684\u4f4d\u6700\u8fd1\u51fa\u73b0\u7684id)\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u53ca\u4ee5\u5916\u7684\u90fd\u53ef\u4ee5\nD = 32\ndef pprint(*x):\n    # print(x)\n    pass\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        res = 0\n        n = len(nums)\n        start = -1\n        lastExist = [-1 for d in range(D)]\n        must1 = [(k >> d) & 1 for d in range(D)]\n        for i in range(n):\n            num = nums[i]\n            valid = True\n            cur = [(num >> d) & 1 for d in range(D)]\n            for d in range(D):\n                if must1[d] == 1 and cur[d] != 1:\n                    valid = False\n                    break\n            pprint(\"==\", i, num, valid)\n            if valid:\n                if start == -1:\n                    start = i\n                minLastExist = inf\n                for d in range(D):\n                    if cur[d] == 0:\n                        lastExist[d] = i\n                    if must1[d] == 0:\n                        minLastExist = min(minLastExist, lastExist[d])\n                pprint(minLastExist, start)\n                if minLastExist >= start:\n                    res += minLastExist - start + 1\n                    pprint(res)\n            else:\n                start = -1\n                lastExist = [-1 for d in range(D)]\n        return res",
    "submit_ts": "1720280208",
    "subm_id": "544571005"
}