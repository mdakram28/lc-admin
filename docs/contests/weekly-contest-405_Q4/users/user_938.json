{
    "username": "atreya1",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        minCost=[float('inf')]*(len(target)+1)\n        minCost[0]=0\n        wordToCost={}\n        for i, word in enumerate(words):\n            if word not in wordToCost:\n                wordToCost[word]=costs[i]\n            wordToCost[word]=min(costs[i], wordToCost[word])\n        for i in range(1,len(target)+1):\n            for word in wordToCost:\n                if len(word)<=i and target[i-len(word):i]==word:\n                    minCost[i]=min(minCost[i], wordToCost[word]+minCost[i-len(word)])\n        if minCost[-1]==float('inf'):\n            return -1\n        return minCost[-1]\n                    \n                    \n                    \n                \n        ",
    "submit_ts": "1720322821",
    "subm_id": "1312359966"
}