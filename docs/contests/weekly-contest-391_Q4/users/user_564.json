{
    "username": "suili",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        sds = [(x + y, x - y) for x, y in points]\n        s_list = sorted(range(n), key=lambda i: sds[i][0])\n        d_list = sorted(range(n), key=lambda i: sds[i][1])\n        candidates = [s_list[0], d_list[0], s_list[-1], d_list[-1]]\n        res = float('inf')\n        for c in candidates:\n            maxs = max(sds[i][0] for i in range(n) if i != c)\n            mins = min(sds[i][0] for i in range(n) if i != c)\n            maxd = max(sds[i][1] for i in range(n) if i != c)\n            mind = min(sds[i][1] for i in range(n) if i != c)\n            dist = max(maxs - mins, maxd - mind)\n            res = min(res, dist)\n        return res"
}