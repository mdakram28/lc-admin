{
    "username": "shivamxdd",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    struct segtree{\n \n    int size;\n    vector<ll> sums;\n    void init(int n){\n        size=1;\n        while(size<n) size*=2;\n        sums.resize(2*size,((1ll<<33)-1));\n \n    }\n    void set(int i,int v,int x,int lx,int rx ){\n        if(rx-lx==1){\n            sums[x]=v;\n            return;\n        }\n        int m=(lx+rx)/2;\n        if(i<m){\n            set(i,v,2*x+1,lx,m);\n        }else {\n            set(i,v,2*x+2,m,rx);\n        }\n        sums[x]=(sums[2*x+1]&sums[2*x+2]);\n    }\n \n    void set(int i,int v){\n        set(i,v,0,0,size);\n \n    }\n \n    ll query(int l,int r,int x,int lx,int rx){\n        if(rx<= l || lx>=r) return ((1ll<<33)-1);\n        \n         if(rx<=r && lx>= l) return sums[x];\n        \n        else {\n            int m=(lx+rx)/2;\n            ll s1=query(l,r,2*x+1,lx,m);\n            ll s2=query(l,r,2*x+2,m,rx);\n            return (s1&s2);\n        }\n        \n    }\n \n    ll query(int l,int r){\n        return query(l,r,0,0,size);\n \n    }\n \n};\n    int minimumDifference(vector<int>& ar, int k) {\n        int n=ar.size();\n        segtree st;\n    st.init(n);\n    for(int i=0;i<n;i++){\n        st.set(i,ar[i]);\n    }\n    int ans=1e9;\n    for(int i=0;i<n;i++){\n        int l=i;\n        int r=n;\n        while(l<r){\n            int mid=(l+r)/2;\n            if(st.query(i,mid+1)<=k){\n                r=mid;\n            }else {\n                l=mid+1;\n            }\n\n        }\n        ans=min(ans,(int)abs(k-st.query(i,l+1)));\n        // cout<<abs(k-st.query(i,l+1))<<\" \";\n        l=i;\n        r=n;\n         while(l<r){\n            int mid=(l+r+1)/2;\n            if(st.query(i,mid+1)>k){\n                l=mid;\n            }else {\n                r=mid-1;\n            }\n\n        }\n        ans=min(ans,(int)abs(k-st.query(i,l+1)));\n        // cout<<st.query(i,l+1)<<endl;;\n    }\n    return ans;\n        \n        \n    }\n};",
    "submit_ts": 1717297000.0
}