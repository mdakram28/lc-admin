{
    "username": "inspiring-colden7kl",
    "submission": "class Solution:\n    def timeTaken(self, edges: list[list[int]]) -> list[int]:\n        n = len(edges) + 1\n        adj = [[] for _ in range(n)]\n        for u, v in edges:\n            adj[u].append(v)\n            adj[v].append(u)\n        root = 0\n\n        lower_dp = [0]*n\n        def lower_dfs(x, father):\n            for child in adj[x]:\n                if child != father:\n                    lower_dp[x] = max(lower_dp[x], lower_dfs(child, x))\n            return lower_dp[x] + (1 if x%2 == 1 else 2)   \n        lower_dfs(root, -1)\n\n        upper_dp = [0]*n\n        def upper_dfs(x, father):\n            const_cost = 2 if x%2 == 0 else 1\n            max_sons = [upper_dp[x] + const_cost, upper_dp[x] + const_cost]\n            max_sons_index = [-1, -1]\n\n            for child in adj[x]:\n                if child != father:\n                    temp_lower = lower_dp[child] + (1 if child%2 == 1 else 2)\n                    temp_lower += const_cost\n                    if temp_lower > max_sons[0]:\n                        max_sons[1] = max_sons[0]\n                        max_sons[0] = temp_lower\n                        max_sons_index[0] = child\n                    elif temp_lower > max_sons[1]:\n                        max_sons[1] = temp_lower\n                        max_sons_index[1] = child\n            for child in adj[x]:\n                if child != father:\n                    if child != max_sons_index[0]:\n                        upper_dp[child] = max(\n                            max_sons[0],\n                            upper_dp[x] + const_cost\n                        )\n                    else:\n                        upper_dp[child] = max(\n                            max_sons[1],\n                            upper_dp[x] + const_cost\n                        )\n                    \n                    upper_dfs(child, x)\n        upper_dfs(root, -1)\n\n\n        result = [\n            max(upper_dp[i], lower_dp[i])\n            for i in range(n)\n        ]\n        return result",
    "submit_ts": "1722699816",
    "subm_id": "552277258"
}