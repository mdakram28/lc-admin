{
    "username": "MarkovProcess",
    "submission": "class Solution(object):\n    def maximumValueSum(self, board):\n        \"\"\"\n        :type board: List[List[int]]\n        :rtype: int\n        \"\"\"\n        m=len(board)\n        n=len(board[0])\n        if m>n:\n            b=[[board[i][j] for i in range(m)] for j in range(n)]\n        else:\n            b=board\n        m=len(b)\n        n=len(b[0])\n        a=[[[-float('inf'),-1] for i in range(3)] for j in range(m)]\n        \n        for i in range(m):\n            for j in range(n):\n                if b[i][j]>=a[i][0][0]:\n                    a[i][2][:]=a[i][1][:]\n                    a[i][1][:]=a[i][0][:]\n                    a[i][0]=[b[i][j],j]\n                elif b[i][j]>=a[i][1][0]:\n                    a[i][2][:]=a[i][1][:]\n                    a[i][1]=[b[i][j],j]\n                elif b[i][j]>=a[i][2][0]:\n                    a[i][2]=[b[i][j],j]\n        dp0=[0]*m\n        dp1=[[[-float('inf'),-1] for i in range(3)] for j in range(m)]\n        dp2=[[[-float('inf'),-1,-1] for i in range(3)] for j in range(m)]\n        for i in range(3):\n            dp1[0][i][:]=a[0][i][:]\n        for i in range(1,m):\n            t=[]\n            for j in range(3):\n                t.append(a[i][j][:])\n            for k in range(3):\n                t.append(dp1[i-1][k][:])\n            t.sort(reverse=True, key=lambda x:x[0])\n            \n            s=set()\n            count=0\n            for [x,y] in t:\n                if y not in s:\n                    s.add(y)\n                    dp1[i][count][:]=[x,y]\n                    count+=1\n                if count==3:\n                    break\n        #print(a)\n        #print(dp1)\n        t=[]\n        for j in range(3):\n            for k in range(3):\n                if a[0][j][1]!=a[1][k][1]:\n                    t.append([a[0][j][0]+a[1][k][0],min(a[0][j][1],a[1][k][1]),max(a[0][j][1],a[1][k][1])])\n        t.sort(reverse=True, key=lambda x:x[0])\n        #print(t)\n        s=set()\n        d={}\n        count=0\n        for [x,y,z] in t:\n            if (y,z) not in s:\n                if y not in d or d[y]<2:\n                    if z not in d or d[z]<2:\n                        s.add((y,z))\n                        if y not in d:\n                            d[y]=1\n                        else:\n                            d[y]+=1\n                        if z not in d:\n                            d[z]=1\n                        else:\n                            d[z]+=1\n                        dp2[1][count][:]=[x,y,z]\n                        count+=1\n            if count==3:\n                break\n        for i in range(2,m):\n            t=[]\n            for j in range(3):\n                t.append(dp2[i-1][j][:])\n            \n            for j in range(3):\n                for k in range(3):\n                    if a[i][j][1]!=dp1[i-1][k][1]:\n                        t.append([a[i][j][0]+dp1[i-1][k][0],min(a[i][j][1],dp1[i-1][k][1]),max(a[i][j][1],dp1[i-1][k][1])])\n            t.sort(reverse=True, key=lambda x:x[0])\n            #print(t)\n            s=set()\n            d={}\n            count=0\n            for [x,y,z] in t:\n                if (y,z) not in s:\n                    if y not in d or d[y]<2:\n                        if z not in d or d[z]<2:\n                            s.add((y,z))\n                            if y not in d:\n                                d[y]=1\n                            else:\n                                d[y]+=1\n                            if z not in d:\n                                d[z]=1\n                            else:\n                                d[z]+=1\n                            dp2[i][count][:]=[x,y,z]\n                            count+=1\n                if count==3:\n                    break\n        #print(dp2)\n        r=-float('inf')\n        for i in range(2,m):\n            for j in range(3):\n                for k in range(3):\n                    if a[i][j][1]!=dp2[i-1][k][1] and a[i][j][1]!=dp2[i-1][k][2]:\n                        r=max(r,a[i][j][0]+dp2[i-1][k][0])\n        return r\n        \"\"\"\n        for j in range(n):\n            for k in range(j+1,n):\n                dp2[1][j][k]=max(b[0][j]+b[1][k],b[0][k]+b[1][j])\n        for i in range(2,m):\n            for j in range(n):\n                for k in range(j+1,n):\n                    dp2[i][j][k]=max(dp2[i-1][j][k],dp1[i-1][j]+b[i][k],dp1[i-1][k]+b[i][j])\n        r=-float('inf')\n        for i in range(2,m):\n            for j in range(n):\n                for k in range(j+1,n):\n                    if a[i][0][1]!=j and a[i][0][1]!=k:\n                        r=max(r,dp2[i-1][j][k]+a[i][0][0])\n                    elif a[i][1][1]!=j and a[i][1][1]!=k:\n                        r=max(r,dp2[i-1][j][k]+a[i][1][0])\n                    elif a[i][2][1]!=j and a[i][2][1]!=k:\n                        r=max(r,dp2[i-1][j][k]+a[i][2][0])\n        \"\"\"\n        #return 0",
    "submit_ts": "1723910046",
    "subm_id": "1359215276"
}