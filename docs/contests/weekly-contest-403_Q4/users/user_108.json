{
    "username": "redamancy-11",
    "submission": "class Solution\n{\npublic:\n    int minimumSum(vector<vector<int>> &g)\n    {\n\n        auto solve = [&](vector<vector<int>> &g) {\n            int n = g.size();\n            int m = g[0].size();\n            assert(n > 0 && m > 0);\n            int L = m, R = 0, U = n, D = 0;\n            for (int i = 0; i < n; ++i) {\n                for (int j = 0; j < m; ++j) {\n                    if (g[i][j] == 1) {\n                        L = min(L, j);\n                        R = max(R, j);\n                        U = min(U, i);\n                        D = max(D, i);\n                    }\n                }\n            }\n            return (R - L + 1) * (D - U + 1);\n        };\n\n        auto gao = [&](auto &&self, int x1, int y1, int x2, int y2, int k) -> int {\n            if (k == 1) {\n                vector<vector<int>> a;\n                for (int i = x1; i <= x2; i++) {\n                    a.push_back({});\n                    for (int j = y1; j <= y2; j++) {\n                        a.back().push_back(g[i][j]);\n                    }\n                }\n                return max(1, solve(a));\n            }\n            int ret = 1e9;\n            for (int i = x1; i < x2; ++i) {\n                for (int l = 1; l + 1 <= k; ++ l)\n                    ret = min(ret, self(self, x1, y1, i, y2, l) + self(self, i + 1, y1, x2, y2, k - l));\n            }\n            for (int i = y1; i < y2; ++i) {\n                for (int l = 1; l + 1 <= k; ++ l)\n                    ret = min(ret, self(self, x1, y1, x2, i, l) + self(self, x1, i + 1, x2, y2, k - l));\n            }\n            // cout << x1 <<\" \" << y1 <<\" \" << x2 << \" \" << y2 <<\" \" << k << \" \" << ret << endl; \n            return ret;\n        };\n        // cout << endl;\n\n        int n = g.size();\n        int m = g[0].size();\n        return gao(gao, 0, 0, n - 1, m - 1, 3);\n    }\n};",
    "submit_ts": 1719112360.0
}