{
    "username": "user8521cP",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCuts, vector<int>& vCuts) {\n         sort(hCuts.rbegin(), hCuts.rend());\n    sort(vCuts.rbegin(), vCuts.rend());\n\n    long long minCost = 0;\n    int horizontalParts = 1, verticalParts = 1;\n    int hIdx = 0, vIdx = 0;\n sort(hCuts.rbegin(), hCuts.rend());\n    sort(vCuts.rbegin(), vCuts.rend());\n        \n        \n    while (hIdx < hCuts.size() && vIdx < vCuts.size()) {\n        if (hCuts[hIdx] >= vCuts[vIdx]) {\n            minCost += (long long)hCuts[hIdx] * verticalParts;\n            horizontalParts++;\n            hIdx++;\n        } else {\n            minCost += (long long)vCuts[vIdx] * horizontalParts;\n            verticalParts++;\n            vIdx++;\n        }\n    }\n\n    while (hIdx < hCuts.size()) {\n        minCost += (long long)hCuts[hIdx] * verticalParts;\n        horizontalParts++;\n        hIdx++;\n    }\n\n    while (vIdx < vCuts.size()) {\n        minCost += (long long)vCuts[vIdx] * horizontalParts;\n        verticalParts++;\n        vIdx++;\n    }\n\n    return minCost;\n    }\n};",
    "submit_ts": "1720925740",
    "subm_id": "1320264690"
}