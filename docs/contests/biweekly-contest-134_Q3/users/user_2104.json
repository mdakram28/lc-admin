{
    "username": "349775270",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        int[] arr = new int[2 * n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = arr[i + n] = colors[i];\n        }\n        List<Integer> idx = new ArrayList<>();\n        for (int i = 0; i < 2 * n - 1; i++) {\n            if (arr[i] == arr[i + 1]) {\n                idx.add(i);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int j = i + k - 1;\n            int lo = 0, hi = idx.size() - 1;\n            boolean flg = true;\n            while (lo <= hi) {\n                int mid = lo + (hi - lo) / 2;\n                if (idx.get(mid) < i) {\n                    lo = mid + 1;\n                } else if (idx.get(mid) > j) {\n                    hi = mid - 1;\n                } else {\n                    if (i <= idx.get(mid) && idx.get(mid) < j) {\n                        flg = false;\n                        break;\n                    } else {\n                        hi = mid - 1;\n                    }\n                }\n            }\n            if (flg) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n}\n/*\nInput:\n[0,1,0,1]\n4\nOutput:\n2\nExpected:\n4\n*/",
    "submit_ts": "1720279172",
    "subm_id": "1311740496"
}