{
    "username": "SwetaSahu01",
    "submission": "class Solution {\npublic:\n    map<vector<int>,int> dp;\n    typedef long long ll;\n    int helper(int jump,int i, bool cons,int k){\n        if(i >= k+2){\n            return 0;\n        }\n        if(dp.find({jump,i,cons})!=dp.end()) return dp[{jump,i,cons}];\n        if(i == k){\n            int a = 0,b=0;\n            if(!cons && i!=0){\n                a += (  helper(jump,i-1,true,k));\n            }\n            b+=(helper(jump+1,i+pow(2,jump),false,k));\n            return dp[{jump,i,cons}] = 1+a+b;\n        }\n        int a = 0, b = 0;\n        if(!cons && i!=0){\n            a +=helper(jump,i-1,true,k);\n        }\n        b+=helper(jump+1,i+pow(2,jump),false,k);\n        return dp[{jump,i,cons}] = a+b;\n        \n    }\n    int waysToReachStair(int k) {\n        return helper(0,1,false,k);\n    }\n};",
    "submit_ts": 1716090093.0
}