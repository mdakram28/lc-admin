{
    "username": "jingnian",
    "submission": "class Solution {\npublic:\n\n// 3  2  -4  1 0\n// 4  2  -4  2 0\n    long long minimumOperations(vector<int>& a, vector<int>& b) {\n        int n = a.size();\n        long long cnt = 0, ans = 0;\n        vector<int> suf1(n + 1), suf2(n + 1);\n        suf1[0] = a[0];\n        suf2[0] = b[0];\n        for(int i = 1; i < n; i ++ ) {\n            suf1[i] = a[i] - a[i - 1];\n            suf2[i] = b[i] - b[i - 1];\n        }\n        for(int i = 0; i < n; i ++ ) {\n            cout << suf1[i] << \" \\n\"[i == n - 1];\n        }\n        for(int i = 0; i < n; i ++ ) {\n            cout << suf2[i] << \" \\n\"[i == n - 1];\n        }\n        for(int i = n - 1; i >= 0; i -- ) {\n            long long t = suf1[i] - suf2[i];\n            if(cnt * t < 0) {\n                ans += abs(t);\n                if(abs(t) > abs(cnt)) ans -= abs(t) - abs(cnt);\n            }\n            cnt += t;\n        }\n        return abs(cnt) + ans;\n    }//20\n};",
    "submit_ts": "1721530862",
    "subm_id": "548381517"
}