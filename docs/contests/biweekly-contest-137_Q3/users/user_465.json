{
    "username": "Radu",
    "submission": "class Solution {\n    long long get_best(vector<pair<int,int>> &points, vector<vector<long long>>& board, int banned_i, int banned_j) {\n        long long best = -1e10;\n        for (int i = 0; i + 1 < points.size(); ++i) {\n            \n            auto [i1, j1] = points[i];\n            if (i1 == banned_i || j1 == banned_j) continue;\n            auto [i2, j2] = points[i + 1];\n            if (((long long)board[i1][j1]) + board[i2][j2] < best) break;\n            \n            int j = i + 1;\n            for (; j < points.size(); ++j) {\n                if (points[j].first == i1 || points[j].second == j1) continue;\n                if (points[j].first == banned_i || points[j].second == banned_j) continue;\n                break;\n            }\n            if (j == points.size()) continue;\n            \n            i2 = points[j].first;\n            j2 = points[j].second;\n            best = max(best, ((long long)board[i1][j1]) + board[i2][j2]);\n        }\n        \n        return best;\n    }\n    \npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<long long>> board_long;\n        for (int i = 0; i < board.size(); ++i) {\n            board_long.emplace_back();\n            for (int j = 0; j < board[0].size(); ++j) {\n                board_long.back().push_back(board[i][j]);\n            }\n        }\n        vector<pair<int,int>> points;\n        for (int i = 0; i < board.size(); ++i) {\n            for (int j = 0; j < board[0].size(); ++j) {\n                points.push_back({i, j});\n            }\n        }\n        \n        sort(points.begin(), points.end(), [&board](auto &p1, auto &p2) {\n            return board[p1.first][p1.second] > board[p2.first][p2.second];\n        });\n        \n        long long best = -1e10;\n        for (int i = 0; i < board.size(); ++i) {\n            for (int j = 0; j < board[0].size(); ++j) {\n                best = max(best, get_best(points, board_long, i, j) + board_long[i][j]);\n            }\n        }\n      \n                 \n       return best;\n    }\n};",
    "submit_ts": "1723909700",
    "subm_id": "1359202486"
}