{
    "username": "Weeentar_Wind",
    "submission": "class Solution {\npublic:\n    map<int,map<int,map<int,int>>>mp;\n    \n    int func( int stair , int jump , int back , int k )\n    {\n        int ans = 0 ;\n        \n        if( mp[stair][jump].find(back) != mp[stair][jump].end() )\n            return mp[stair][jump][back];\n        \n        if( stair == k )\n            ans++;\n        \n        //going back        \n        if( !back && stair )\n            ans += func( stair - 1 , jump , 1 , k );\n        \n        int next = stair + (int)pow(2,jump);\n        if( next <= k + 1 )\n            ans += func( next , jump + 1 , 0 , k );\n        \n        return mp[stair][jump][back] = ans;\n    }\n    \n    int waysToReachStair(int k) \n    {\n        return func( 1 , 0 , 0 , k );\n    }\n};",
    "submit_ts": "1716089092",
    "subm_id": "1261832817"
}