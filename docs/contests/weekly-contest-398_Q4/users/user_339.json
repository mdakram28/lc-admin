{
    "username": "user4607v",
    "submission": "class Solution {\n    Integer[][] mem = new Integer[40][40];\n    int choose(int x, int k){\n        if(mem[x][k] != null){\n            return mem[x][k];\n        }\n        if(x == k){\n            mem[x][k] = 1;\n        }\n        else if(x == 1){\n            mem[x][k] = 1;\n            \n        }\n        else if(k == 0){\n            mem[x][k] = 1;\n        }\n        else{\n            mem[x][k] = choose(x-1,k) + choose(x-1,k-1);\n        }\n        return mem[x][k];\n    }\n    public int waysToReachStair(int k) {\n        \n        int p = 1;\n        int afterJumps = 1;\n        int ans = 0;\n        int i  =0;\n        while(true){\n            if(afterJumps >= k && (afterJumps - k) <= (i+1) ){\n                int d = afterJumps-k;\n                ans += choose(i+1,d);\n                //System.out.println(i + \":\" + d + \":\" + ans);\n            } \n            if(afterJumps - k > (i+1)){\n                break;\n            }\n            afterJumps += p;\n            p *= 2;\n            i++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1716088456",
    "subm_id": "1261814479"
}