{
    "username": "snowfoxy",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        left = 0\n        \n        \n        #for i, num in enumerate(nums):\n        #    print(num)\n        #    for j in range(i + 1, len(nums)):\n        #        num &= nums[j]\n        #        print(i, j, num)\n        \n        counter = collections.Counter()\n        def candidate(length):\n            s = 0\n            for c in counter:\n                if counter[c] >= length:\n                    s += 2 ** c\n            return s\n            \n        answer = float(\"inf\")\n        for right, num in enumerate(nums):\n            for i, c in enumerate(bin(num)[2:][::-1]):\n                if c == \"0\":\n                    continue\n                counter[i] += 1\n            current = candidate(right - left + 1)\n            while current < k and left < right:\n                answer = min(answer, abs(current - k))\n                for i, c in enumerate(bin(nums[left])[2:][::-1]):\n                    if c == \"0\":\n                        continue\n                    counter[i] -= 1\n                left += 1\n                current = candidate(right - left + 1)\n            answer = min(answer, abs(current - k))\n        return answer\n            \n        ",
    "submit_ts": "1717299674",
    "subm_id": "1274820182"
}