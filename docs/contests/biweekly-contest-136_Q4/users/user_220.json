{
    "username": "mickeyandkaka1",
    "submission": "// {{{\n#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing vi = vector<int>;\nusing pii = pair<int, int>;\n#define sz(x) (int)((x).size())\n#define all(x) (x).begin(), (x).end()\n#define clr(a, b) memset(a, b, sizeof(a))\n#define debug(x...)\n#define debug_arr(x...)\n#ifdef LOCAL\n#include \"prettyprint.hpp\"\n#endif\n// }}}\n#include <set>\nconst int N = 1e5 + 10;\nint head[N], e;\nstruct E\n{\n    int v, next;\n} edge[N << 1];\n\nint ans[N];\n\nvoid addedge(int u, int v)\n{\n    edge[e].v = v, edge[e].next = head[u];\n    head[u] = e++;\n}\n\npii dp1[N];  // \u6700\u957f\npii dp2[N];  // \u6b21\u957f\n\nvoid dfs1(int u, int f)\n{\n    dp1[u] = dp2[u] = {0, -1};\n\n    set<pii> vec;\n    for (int i = head[u]; ~i; i = edge[i].next)\n    {\n        int v = edge[i].v;\n        if (v == f) continue;\n\n        dfs1(v, u);\n        int chd = v;\n        int dep = dp1[v].first;\n        if (v % 2 == 0) dep += 2;\n        else\n            dep++;\n\n        if (vec.size() < 2)\n        {\n            vec.insert({dep, chd});\n        }\n        else\n        {\n            if (dep > vec.begin()->first)\n            {\n                vec.erase(vec.begin());\n                vec.insert({dep, chd});\n            }\n        }\n    }\n\n    if (vec.empty()) return;\n    auto iter = vec.begin();\n    if (vec.size() == 1)\n    {\n        dp1[u] = *iter;\n    }\n    else\n    {\n        dp2[u] = *iter;\n        iter++;\n        dp1[u] = *iter;\n    }\n    // debug(\"dfs1 \", u, dp1[u], dp2[u]);\n}\n\nvoid dfs2(int u, int f)\n{\n    // cal\n\n    if (f == -1)\n    {\n        ans[u] = dp1[u].first;\n    }\n    else\n    {\n        int can1 = dp1[u].first;\n        int can2;\n        if (dp1[f].second == u)\n        {\n            can2 = dp2[f].first + (f % 2 == 1 ? 1 : 2);\n        }\n        else\n        {\n            can2 = dp1[f].first + (f % 2 == 1 ? 1 : 2);\n        }\n        ans[u] = max(can1, can2);\n\n        set<pii> tmp{dp2[u], dp1[u]};\n\n        // debug(\"tmp start\", u, tmp);\n        int chd = f;\n        int dep;\n        if (dp1[f].second == u)\n        {\n            dep = dp2[f].first + (f % 2 == 1 ? 1 : 2);\n        }\n        else\n        {\n            dep = dp1[f].first + (f % 2 == 1 ? 1 : 2);\n        }\n\n        if (dep > tmp.begin()->first)\n        {\n            tmp.erase(tmp.begin());\n            tmp.insert({dep, chd});\n        }\n\n        auto iter = tmp.begin();\n        if (tmp.size() == 1)\n        {\n            dp1[u] = *iter;\n            dp2[u] = {0, -1};\n        }\n        else\n        {\n            dp2[u] = *iter;\n            iter++;\n            dp1[u] = *iter;\n        }\n    }\n    // debug(\"dfs2 \", u, dp1[u], dp2[u]);\n\n    for (int i = head[u]; ~i; i = edge[i].next)\n    {\n        int v = edge[i].v;\n        if (v == f) continue;\n\n        dfs2(v, u);\n    }\n}\n\nclass Solution\n{\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges)\n    {\n        int n = sz(edges) + 1;\n        clr(head, -1), e = 0;\n\n        for (auto& vec : edges)\n        {\n            int u = vec[0];\n            int v = vec[1];\n            addedge(u, v);\n            addedge(v, u);\n        }\n        dfs1(0, -1);\n        clr(ans, -1);\n\n        dfs2(0, -1);\n        vector<int> ret;\n        for (int i = 0; i < n; i++) ret.push_back(ans[i]);\n        return ret;\n    }\n};\n",
    "submit_ts": "1722699925",
    "subm_id": "552277715"
}