{
    "username": "Fmindex",
    "submission": "class Solution {\n    vector<vector<int>> g;\npublic:\n    int find(int from_i, int from_j, int to_i, int to_j) {\n        int min_i = 50, min_j = 50, max_i = -1, max_j = -1;\n        for (int i = from_i; i <= to_i; i++) {\n            for (int j = from_j; j <= to_j; j++) {\n                if (g[i][j] == 1) {\n                    max_i = max(max_i, i);\n                    max_j = max(max_j, j);\n                    min_i = min(min_i, i);\n                    min_j = min(min_j, j);\n                }\n            }\n        }\n        if (max_i == -1) return 0;\n        return (max_i - min_i + 1) * (max_j - min_j + 1);\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        g = grid;\n        int answer = 2e9;\n        int n = (int)grid.size(), m = (int)grid[0].size();\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                answer = min(answer, find(0, 0, i, m - 1) + find(i + 1, 0, j, m - 1) + find(j + 1, 0, n - 1, m - 1));\n            }\n        }\n        // cout << answer << \"\\n\";\n        for (int i = 0; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                answer = min(answer, find(0, 0, n - 1, i) + find(0, i + 1, n - 1, j) + find(0, j + 1, n - 1, m - 1));\n                // cout << i << \" \" << j << \"\\n\";\n                // cout << find(0, 0, n - 1, i) << \" \" << find(0, i + 1, n - 1, j) << \" \" << find(0, j + 1, n - 1, m - 1) << \"\\n\";\n            }\n        }\n        // cout << answer << \"\\n\";\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                answer = min(answer, find(0, 0, i, m - 1) + find(i + 1, 0, n - 1, j) + find(i + 1, j + 1, n - 1, m - 1));\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                answer = min(answer, find(0, 0, n - 1, i) + find(0, i + 1, j, m - 1) + find(j + 1, i + 1, n - 1, m - 1));\n            }\n        }\n        \n//         vector<vector<int>> new_g = grid;\n//         for (int i = 0; i < n; i++) {\n//             for (int j = 0; j < m; j++) {\n//                 new_g[i][j] = grid[n - i - 1][m - j - 1];\n//             }\n//         }\n//         g = new_g;\n        \n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                answer = min(answer, find(n - i - 1, 0,  n - 1, m - 1) + find(0, 0, n - i - 2, j) + find(0, j + 1, n - i - 2, m - 1));\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                answer = min(answer, find(0, m - i - 1, n - 1, m - 1) + find(0, 0, j, m - i - 2) + find(j + 1, 0, n - 1, m - i - 2));\n            }\n        }\n        return answer;\n    }\n};",
    "submit_ts": 1719113413.0
}