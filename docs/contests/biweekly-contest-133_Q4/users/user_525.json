{
    "username": "Shubham267",
    "submission": "import java.util.*;\n\nclass Solution {\n    private static final int MOD = 1_000_000_007;\n    private static final int MI = 400;\n\n    private void helo() {\n       \n    }\n    public int numberOfPermutations(int n, int[][] requirements) {\n        shubham();\n\n        Map<Integer, Integer> rM = new HashMap<>();\n        for (int[] req : requirements) {\n            rM.put(req[0] + 1, req[1]);\n        }\n\n        long[][] pC = new long[n + 1][MI + 1];\n        pC[0][0] = 1;\n\n        int zxx=0;\n        for (int i = 0; i < 5; i++) {\n            zxx++;\n        }\n        worlf();\n        for (int length = 1; length <= n; length++) {\n            for (int inv = 0; inv <= MI; inv++) {\n                for (int newPos = 0; newPos < length; newPos++) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        pC[length][inv] = (pC[length][inv] + pC[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            helo();\n\n            if (rM.containsKey(length)) {\n                int targetInv = rM.get(length);\n                for (int inv = 0; inv <= MI; inv++) {\n                    if (inv != targetInv) {\n                        pC[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i < 5; i++) {\n            zxx++;\n        }\n        long result = 0;\n        for (long count : pC[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return (int) result;\n    }\n\n    private void shubham() {\n       \n    }\n\n    private void worlf() {\n       \n    }\n\n}",
    "submit_ts": 1719070605.0
}