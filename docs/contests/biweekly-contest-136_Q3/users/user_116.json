{
    "username": "wyj20154348",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> id;\n    int cnt;\n    vector<int> g[200010];\n    int vis[200010];\n    int col[200010];\n    vector<pair<int,int>> num;\n    void dfs(int u,int &num1,int &num2){\n        vis[u]=1;\n        num1+=col[u];\n        num2++;\n        for (auto &it:g[u]){\n            if (vis[it]) continue;\n            dfs(it,num1,num2);\n        }\n    }\n    int dp[200010][4];\n    int minFlips(vector<vector<int>>& grid) {\n        id = grid;\n        cnt=0;\n        int n=grid.size();\n        int m=grid[0].size();\n        for (int i=0;i<n*m;i++){\n            g[i].clear();\n            vis[i]=0;\n        }\n        for (int i=0;i<n;i++){\n            for (int j=0;j<m;j++){\n                id[i][j]=cnt++;\n                col[id[i][j]]=grid[i][j];\n            }\n        }\n        for (int i=0;i<n;i++){\n            for (int j=0;j<m;j++){\n                if ((m-1-j)<j) break;\n                g[id[i][j]].emplace_back(id[i][m-1-j]);\n                g[id[i][m-1-j]].emplace_back(id[i][j]);\n            }\n        }\n        for (int i=0;i<m;i++){\n            for (int j=0;j<n;j++){\n                if ((n-1-j)<j) break;\n                g[id[j][i]].emplace_back(id[n-1-j][i]);\n                g[id[n-1-j][i]].emplace_back(id[j][i]);\n            }\n        }\n        num.clear();\n        for (int i=0;i<cnt;i++){\n            if (!vis[i]){\n                int num1=0;\n                int num2=0;\n                dfs(i,num1,num2);\n                num.emplace_back(make_pair(num1,num2));\n            }\n        }\n        int nn=num.size();\n        for (int i=0;i<=nn;i++){\n            for (int j=0;j<4;j++) dp[i][j]=1e9+7;\n        }\n        dp[0][0]=0;\n        for (int i=1;i<=nn;i++){\n            //cout<<num[i-1].first<<\" \"<<num[i-1].second<<endl;\n            for (int j=0;j<4;j++){\n                if (dp[i-1][j]==1e9+7) continue;\n                int tot=num[i-1].second;\n                int num1=num[i-1].first;\n                dp[i][(j+tot)%4]=min(dp[i][(j+tot)%4],dp[i-1][j]+tot-num1);\n                dp[i][(j)%4]=min(dp[i][(j)%4],dp[i-1][j]+num1);\n            }\n        }\n        return dp[nn][0];\n    }\n};",
    "submit_ts": "1722696702",
    "subm_id": "552262387"
}