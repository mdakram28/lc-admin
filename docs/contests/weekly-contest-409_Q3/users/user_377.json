{
    "username": "trilazole",
    "submission": "class Solution {\n    class DSU {\n        private int[] parent;\n        private int[] size;\n        private int numOfComponents;\n\n\n        /**\n         * initialize Disjoint Set Union\n         * @param N the size of n\n         * @param base 1 if the index is 1-base, 0 otherwise\n         */\n        public DSU(int N, int base){\n            parent = new int[N+base];\n            size = new int[N+base];\n            for(int i = base; i < N+base; i++){\n                parent[i] = i;\n                size[i] = 1;\n            }\n            numOfComponents = N;\n        }\n\n        public int find(int n){\n            int res = n;\n            while(parent[res] != res){\n                res = parent[parent[res]];\n            }\n            while(n != res){\n                int prevParent = parent[n];\n                parent[n] = res;\n                n = prevParent;\n            }\n            return res;\n        }\n\n        public void merge(int a,int b){\n            int pa=find(a), pb=find(b);\n            if(pa==pb) return;\n            size[pa]+=size[pb];\n            parent[pb]=pa;\n            numOfComponents--;\n        }\n\n        public boolean isConnected(int a, int b){\n            return find(a) == find(b);\n        }\n\n        public int getSize(int a){\n            return size[find(a)];\n        }\n\n        public int getNumOfComponents(){\n            return this.numOfComponents;\n        }\n\n    }\n\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n\n        int len = queries.length;\n        int[] res = new int[len];\n\n        DSU uf = new DSU(n - 1, 0);\n        for(int i = 0; i < len; i++){\n            int[] query = queries[i];\n            int l = query[0], r = query[1] - 1;\n            int pl = uf.find(l), pr = uf.find(r);\n            while(pr > pl){\n                uf.merge(pl, pr);\n                pr = uf.find(pr-1);\n            }\n            res[i] = uf.getNumOfComponents();\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722740742",
    "subm_id": "1343727618"
}