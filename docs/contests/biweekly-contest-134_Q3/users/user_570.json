{
    "username": "jithendra419",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        if (k == 1) return n;  \n        \n        int count = 0;\n        vector<int> diff(2*n);  \n    \n        for (int i = 0; i < 2*n; i++) {\n            diff[i] = colors[i % n] ^ colors[(i + 1) % n];  \n        }\n    \n        int windowSum = 0;\n        for (int i = 0; i < k - 1; i++) {\n            windowSum += diff[i];\n        }\n       \n        for (int i = 0; i < n; i++) {\n            if (windowSum == k - 1) {\n                count++;\n            }\n            windowSum = windowSum - diff[i] + diff[i + k - 1];\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720278341",
    "subm_id": "1311704924"
}