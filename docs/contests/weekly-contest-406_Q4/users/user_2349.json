{
    "username": "am877826",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h = 0, v = 0;\n        int hp = 1, vp = 1; \n        long long minCost = 0;\n        \n        \n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n               \n                minCost += horizontalCut[h] * vp;\n                hp++;\n                h++;\n            } else {\n              \n                minCost += verticalCut[v] * hp;\n                vp++;\n                v++;\n            }\n        }\n        \n       \n        while (h < horizontalCut.size()) {\n            minCost += horizontalCut[h] * vp;\n            hp++;\n            h++;\n        }\n        \n        while (v < verticalCut.size()) {\n            minCost += verticalCut[v] * hp;\n            vp++;\n            v++;\n        }\n        \n        return minCost;\n    }\n};",
    "submit_ts": "1720926170",
    "subm_id": "1320278062"
}