{
    "username": "vignat0905",
    "submission": "class Solution {\npublic:\n    void minus(vector<int>& zeros, int x) {\n        for (int i = 0; i < 32; i++) if (((x >> i) & 1) == 0) zeros[i] -= 1;\n    }\n\n    void plus(vector<int>& zeros, int x) {\n        for (int i = 0; i < 32; i++) if (((x >> i) & 1) == 0) zeros[i] += 1;\n    }\n\n    int eval(vector<int>& zeros) {\n        int res = 0;\n        for (int i = 0; i < 32; i++) if (zeros[i] == 0) res ^= (1 << i);\n        return res;\n    }\n\n    int minimumDifference(vector<int>& nums, int k){\n        vector<int> zeros(32, 0);\n        int i = 0, n = nums.size(), ans = INT_MAX;\n        for (int j = 0; j < n; j++) {\n            plus(zeros, nums[j]);\n            int x = eval(zeros);\n            ans = min(ans, abs(x - k));\n            while (i < j && x < k) {\n                minus(zeros, nums[i++]);\n                x = eval(zeros);\n                ans = min(ans, abs(x - k));\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": 1717300539.0
}