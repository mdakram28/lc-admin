{
    "username": "piscesdream-7",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ret;\n        int ans = n-1;\n        map<int, int, greater<int>> rng_l;\n        map<int, int, less<int>> rng_r;\n        set<int> ls;\n        for (const auto& q: queries) {\n            int l = q[0], r = q[1];\n            int del = r-l-1;\n\n            auto l_iter = rng_l.lower_bound(l);\n            if (l_iter != rng_l.end() && l_iter->second >= r) {\n                ret.push_back(ans);\n                continue;\n            } else {\n                auto r_iter = rng_r.lower_bound(r);\n                if (r_iter != rng_r.end() && r_iter->second <= l) {\n                    ret.push_back(ans);\n                    continue;\n                }\n            }\n\n            auto iter = ls.lower_bound(l);\n            while (iter != ls.end() && rng_l[*iter] <= r) {\n                // cout << \"FOUND\" << *iter << \"->\" << rng_l[*iter] << endl;\n\n                del -= rng_l[*iter]-*iter-1;\n                rng_r.erase(rng_l[*iter]);\n                rng_l.erase(*iter);\n                ls.erase(*iter);\n                iter = ls.lower_bound(l);\n            }\n            ls.insert(l);\n\n            rng_l[l] = r;\n            rng_r[r] = l;\n            ans -= del;\n            ret.push_back(ans);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722740804",
    "subm_id": "552333827"
}