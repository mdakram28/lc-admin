{
    "username": "Shubhanshu",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        int[] arr = new int[n];\n        Arrays.fill(arr,9);\n        if (k == 1 || k == 3 || k == 9) return getString(arr);\n        \n        if (k == 2){\n            arr[0] = 8;\n            arr[n-1] = 8;\n            return getString(arr);\n        }\n        \n        if (k == 5){\n            arr[0] = 5;\n            arr[n-1] = 5;\n            return getString(arr);\n        }\n        \n        if (k == 4){\n            if (n <= 4) {\n                Arrays.fill(arr,8);\n                return getString(arr);\n            }\n            \n            arr[0] = 8;\n            arr[1] = 8;\n            arr[n-1] = 8;\n            arr[n-2] = 8;\n            return getString(arr);\n        }\n        \n        if (k == 8){\n            if (n <= 6){\n                Arrays.fill(arr,8);\n                return getString(arr);\n            }\n            for (int i = 0; i < 3; i++) arr[i] = 8;\n            for (int i = n-1; i > (n-1-3); i--) arr[i] = 8;\n            return getString(arr);\n        }\n        \n        if (k == 6){\n            if (n <= 2){\n                Arrays.fill(arr,6);\n                return getString(arr);\n            }\n            arr[0] = 8;\n            arr[n-1] = 8;\n            int sum = 9 * n - 2;\n            if (n % 2 == 1){\n                while (sum % 3 != 0){\n                    sum--;\n                    arr[n/2]--;\n                }\n            }\n            else{\n                while (sum % 3 != 0){\n                    sum -= 2;\n                    arr[(n/2)]--;\n                    arr[(n/2)-1]--;\n                }\n            }\n            return getString(arr);\n        }\n        \n        \n        if (n <= 2) {\n            Arrays.fill(arr,7);\n            return getString(arr);\n        }\n        \n        if (n % 2 == 1){\n            for (int i = 9; i >= 0; i--){\n                arr[n/2] = i;\n                if (isPoss(arr)) return getString(arr);\n            }\n        }\n        else{\n            for (int i = 9; i >= 0; i--){\n                arr[n/2] = i;\n                arr[(n/2)-1] = i;\n                if (isPoss(arr)) return getString(arr);\n            }\n        }\n        \n        return \"\";\n    }\n    \n    private boolean isPoss(int[] arr){\n        return isPoss(arr,0,0);\n    }\n    \n    private boolean isPoss(int[] arr, int ind, int rem){\n        if (ind == arr.length) return (rem == 0);\n        \n        int curr = rem * 10 + arr[ind];\n        \n        return isPoss(arr,ind+1,curr%7);\n    }\n    \n    private String getString(int[] arr){\n        StringBuilder ans = new StringBuilder();\n        for (int val : arr) ans.append(val);\n        return ans.toString();\n    }\n}",
    "submit_ts": "1723953413",
    "subm_id": "1359820613"
}