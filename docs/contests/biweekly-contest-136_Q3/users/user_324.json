{
    "username": "Dipu_1",
    "submission": "#define f first\n#define s second\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define sz(x) (long long)(x).size()\n#define pii pair<long long, long long>\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = sz(grid), m = sz(grid[0]);\n        int ans = 0, ans2 = 0;\n        for (int i = 0; i < (n / 2); i++) {\n            for (int j = 0; j < (m / 2); j++) {\n                int cnt1 = 0, cnt0 = 0;\n                if (grid[i][j] == 0) {\n                    cnt0++;\n                }\n                else {\n                    cnt1++;\n                }\n                if (grid[n - 1 - i][j] == 0) {\n                    cnt0++;\n                }\n                else {\n                    cnt1++;\n                }\n                if (grid[i][m - 1 - j] == 0) {\n                    cnt0++;\n                }\n                else {\n                    cnt1++;\n                }\n                if (grid[n - 1 - i][m - 1 - j] == 0) {\n                    cnt0++;\n                }\n                else {\n                    cnt1++;\n                }\n                ans += min(cnt0, cnt1);\n            }\n        }\n        int cnt1 = 0, flips = 0;\n        if (n % 2) {\n            int R = n / 2;\n            for (int j = 0; j < (m / 2); j++) {\n                if (grid[R][j] != grid[R][m - 1 - j]) {\n                    flips++;\n                }\n                if (grid[R][j] == 1) {\n                    cnt1++;\n                }\n                if (grid[R][m - 1 - j] == 1) {\n                    cnt1++;\n                }\n            }\n        }\n        if (m % 2) {\n            int C = m / 2;\n            for (int i = 0; i < (n / 2); i++) {\n                if (grid[i][C] != grid[n - 1 - i][C]) {\n                    flips++;\n                }\n                else {\n                    if (grid[i][C] == 1) {\n                        cnt1++;\n                    }\n                    if (grid[n - 1 - i][C] == 1) {\n                        cnt1++;\n                    }\n                }\n            }\n        }\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans++;\n            }\n        }\n                ans+=flips;\n        if (cnt1 % 4) {\n            if (flips == 0) {\n                ans += 2;\n            }\n        }\n        return  ans;\n    }\n};",
    "submit_ts": "1722696899",
    "subm_id": "1343126535"
}