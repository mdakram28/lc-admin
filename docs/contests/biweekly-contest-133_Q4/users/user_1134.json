{
    "username": "AshutoshSingh10",
    "submission": "\t#include <bits/stdc++.h>\n\tusing namespace std;\n\tusing std::cout;\n\tusing std::cin;\n\t#define endl '\\n'    \n\t#define ll long long\n\t#define loop(i,a,b) for(long long i=a;i<b;i++)\n\t#define roop(i,a,b) for(long long i=a-1;i>=b;i--)\n\t#define all(p) p.begin(),p.end()\n\t#define pb(p) push_back(p);\n\tlong long pop_count(long long a){int res=0;while(a){res+=(a&1),a>>=1;}return res;}\n\ttemplate<class T> using _pq = priority_queue<T>;\n\ttemplate<class T> using _pqr = priority_queue<T, vector<T>, greater<T>>;\n\ttemplate<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}\n\ttemplate<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}\n\t#include <ext/pb_ds/assoc_container.hpp>\n    #include <ext/pb_ds/tree_policy.hpp>\n    using namespace __gnu_pbds;\n    #include<iostream>\n    template <class T> using OrderSet = tree<T, null_type, \n    less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n    ll lcm(ll a, ll b){return (a/__gcd(a,b)*b);}\n    const ll INF= LONG_LONG_MAX;\nll mod=1e9+7;\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        vector<vector<ll>> dp(n,vector<ll> (410,0));\n        vector<pair<ll,ll> > vec;\n        for(auto &i:req)\n        {\n            vec.push_back({i[0],i[1]});\n        }\n        So(vec);\n        if(vec[0].first==0 && vec[0].second!=0) return 0;\n        ll idx=0;\n        dp[0][0]=1;\n        if(vec[0].first==0) idx++;\n        loop(i,1,n)\n        {\n            loop(j,0,402)\n            {\n                loop(k,0,i+1)\n                {\n                    if(k+j<=404)\n                    {\n                        dp[i][k+j]=(dp[i][k+j]+dp[i-1][j])%mod;\n                    }\n                }\n\n            }\n            if(idx<vec.size())\n            {\n                \n                if(vec[idx].first==i)\n                {\n                    loop(j,0,402)\n                    {\n                        if(j!=vec[idx].second)\n                        {\n                            dp[i][j]=0;\n                        }\n                    }\n                                    // cout<<idx<<\" \"<<i<<\" \"<<vec[idx].first<<\"      \";\n                idx++;\n                }\n                \n\n            }\n            \n\n        }\n//         cout<<endl;\n//         loop(i,0,n)\n//         {\n//             loop(j,0,10)\n//             {\n//                 cout<<dp[i][j]<<\" \";\n                \n//             }\n//             cout<<endl;\n//         }\n//     cout<<endl;\n        return dp[vec.back().first][vec.back().second];\n\n\n\n\n        \n    }\n};",
    "submit_ts": "1719071283",
    "subm_id": "1296843263"
}