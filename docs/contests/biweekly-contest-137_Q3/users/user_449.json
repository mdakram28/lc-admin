{
    "username": "archerfrank",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        rows = [0] * m \n        cols = [0] * n\n        arr = []\n        for i in range(m):\n            for j in range(n):\n                arr.append((board[i][j], i, j))\n        arr.sort()\n        arr.reverse()\n        # print(arr)\n        t = len(arr)\n        ans = -inf\n        for i in range(max(m, n) + 1):\n            x = arr[i][1]\n            y = arr[i][2]\n            rows[x] += 1\n            cols[y] += 1\n            for p in range(i + 1, t):\n                nx = arr[p][1]\n                ny = arr[p][2]\n                if rows[nx] == 0 and cols[ny] == 0:\n                    rows[nx] += 1\n                    cols[ny] += 1\n                    for j in range(p + 1, t):\n                        mx = arr[j][1]\n                        my = arr[j][2]\n                        if rows[mx] == 0 and cols[my] == 0:\n                            ans = max(ans, arr[i][0] + arr[p][0] +arr[j][0])\n                            break\n                    rows[nx] -= 1\n                    cols[ny] -= 1\n            rows[x] -= 1\n            cols[y] -= 1\n        return ans\n\n                \n            \n        # def go(p, comb, h):\n        #     print(p, comb)\n        #     if len(comb) == 3:\n        #         nonlocal ans\n        #         ans = max(ans, sum(comb))\n        #         return True\n        #     if p == m * n:\n        #         return False\n            \n        #     if rows[x] > 0 or cols[y] > 0:\n        #         go(p + 1, comb, h)\n        #     else:\n        #         rows[x] += 1\n        #         cols[y] += 1\n        #         comb.append(arr[p][0])\n        #         go(p + 1, comb, h + 1)\n        #         comb.pop()\n        #         rows[x] -= 1\n        #         cols[y] -= 1\n        #         if h == 1:\n        #             go(p + 1, comb, h + 1)\n        # go(0, [], 1)\n        # go(1, [], 1)\n        # go(2, [], 1)\n        # # print(ans)\n        # return ans\n",
    "submit_ts": "1723908677",
    "subm_id": "556332203"
}