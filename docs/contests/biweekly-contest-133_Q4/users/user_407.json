{
    "username": "Aloo_Bhaji",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int size, vector<vector<int>>& requirements) {\n        const int MODULO = 1e9+7;\n        const int MAX_INVERSION = 469;\n\n        unordered_map<int, int> req_map;\n        for (auto& req : requirements) {\n            req_map[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long>> permutation_count(size + 1, vector<long>(MAX_INVERSION + 1, 0));\n        permutation_count[0][0] = 1;\n\n        for (int len = 1; len <= size; len++) {\n            for (int inv = 0; inv <= MAX_INVERSION; inv++) {\n                for (int pos = 0; pos < len; pos++) {\n                    int previous_inv= inv-pos;\n                    if (previous_inv >= 0) {\n                        permutation_count[len][inv] = (permutation_count[len][inv] + permutation_count[len - 1][previous_inv]) % MODULO;\n                    }\n                }\n            }\n            if (req_map.count(len)) {\n                int target_inv = req_map[len];\n                for (int inv = 0; inv <= MAX_INVERSION; inv++) {\n                    if (inv != target_inv) {\n                        permutation_count[len][inv] = 0;\n                    }\n                }\n            }\n        }\n        long result = 0;\n        for (long count : permutation_count[size]) {\n            result = (result + count) % MODULO;\n        }\n        return result;\n    }\n};\n",
    "submit_ts": "1719070424",
    "subm_id": "1296822682"
}