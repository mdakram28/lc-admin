{
    "username": "sobols",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int, int>> s;\n        int sum = 0;\n        vector<int> ans;\n        \n        int prevAns = n - 1;\n        \n        for (const auto& q : queries) {\n            int x1 = q[0], x2 = q[1];\n            \n            auto it = s.lower_bound(make_pair(x1, x1));\n            \n            if (it != s.begin()) {\n                auto kt = prev(it);\n                if (kt->second >= x2) {\n                    ans.push_back(prevAns);\n                    continue;\n                }\n            }\n            if (it != s.end()) {\n                if (it->first == x1 && it->second >= x2) {\n                    ans.push_back(prevAns);\n                    continue;\n                }\n            }\n            \n            auto jt = it;\n            while (jt != s.end() && jt->second <= x2) {\n                ++jt;\n            }\n            \n            for (auto kt = it; kt != jt;) {\n                auto nxt = next(kt);\n                sum -= kt->second - kt->first;\n                s.erase(kt);\n                kt = nxt;\n            }\n            s.insert(make_pair(x1, x2));\n            sum += x2 - x1;\n            \n            prevAns = n - 1 - sum + s.size();\n            ans.push_back(prevAns);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742915",
    "subm_id": "1343779998"
}