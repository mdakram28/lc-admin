{
    "username": "Abhinav_Shakya",
    "submission": "const int MOD = 1e9 + 7;\nconst int INV = 400;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        unordered_map<int, int> req;\n        vector<vector<long>> dp(n + 1, vector<long>(INV + 1, 0));\n        dp[0][0] = 1;\n        for (auto& node : requirements) {\n            req[node[0] + 1] = node[1];\n        }\n        \n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= INV; j++) {\n                for (int pos = 0; pos < i; pos++) {\n                    int prevInv = j - pos;\n                    if (prevInv >= 0) {\n                        dp[i][j] = (dp[i][j] + dp[i - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n            if (req.count(i)) {\n                int targetInv = req[i];\n                for (int inv = 0; inv <= INV; inv++) {\n                    if (inv != targetInv) {\n                        dp[i][inv] = 0;\n                    }\n                }\n            }\n        }\n        \n        long ans = 0;\n        for (long count : dp[n]) {\n            ans = (ans + count) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719070783.0
}