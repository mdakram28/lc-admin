{
    "username": "kammaron",
    "submission": "class Solution {\n     struct ListNode {\n      int val;\n      ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n  };\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        ListNode* head = new ListNode(0);\n        map<int, ListNode*> m;\n        m[0] = head;\n        ListNode* last = head;\n        for(int i = 1; i < n; i++)\n        {\n            ListNode* t = new ListNode(i);\n            last->next = t;\n            m[i] = t;\n            last = t;\n        }\n        vector<int> ret;\n        int len = n-1;\n        for(auto q:queries)\n        {\n            if(m.find(q[0]) == m.end()\n                || !m[q[0]]) ret.push_back(len);\n            else if(m.find(q[1]) == m.end()\n                || !m[q[1]]) ret.push_back(len);\n            else\n            {\n                ListNode* beg = m[q[0]];\n                ListNode* end = m[q[1]];\n                ListNode* t = beg->next;\n                while(t != end)\n                {\n                    m[t->val] = nullptr;\n                    len--; \n                    t = t->next;\n                }\n                beg->next =end;\n                ret.push_back(len);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722743050",
    "subm_id": "552348474"
}