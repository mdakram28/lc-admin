{
    "username": "hlp2599",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int lastDiff = 0;\n        int lastState = 0; //-> 0 , 1(+ve), -1(-ve)\n        int n = nums.length;\n        for(int i=0;i<n;i++) {\n            int diff = nums[i] - target[i];\n            if(diff<0) {\n                if(lastDiff>=0) {\n                    ans = ans + (long)Math.abs(diff);\n                } else if(diff<lastDiff) {\n                    ans = ans + (long)Math.abs(diff-lastDiff);\n                }\n            } else if(diff>0) {\n                if(lastDiff<=0) {\n                    ans = ans + (long)Math.abs(diff);\n                } else if(diff>lastDiff) {\n                    ans = ans + (long)Math.abs(diff-lastDiff);\n                }\n            }\n            lastDiff = diff;\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721530359",
    "subm_id": "1327931028"
}