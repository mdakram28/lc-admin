{
    "username": "lordoflegend2003",
    "submission": "class RandomTrieNode {\npublic:\n    vector<pair<int, int>> wordEndings;\n    unordered_map<char, RandomTrieNode*> childrenNodes;\n};\n\nclass RandomTrie {\npublic:\n    RandomTrieNode* rootNode;\n    RandomTrie() {\n        rootNode = new RandomTrieNode();\n    }\n\n    void addWord(string word, int adhu, int idhu) {\n        RandomTrieNode* currentNode = rootNode;\n        for (auto ch : word) {\n            if (!currentNode->childrenNodes.count(ch)) currentNode->childrenNodes[ch] = new RandomTrieNode();\n            currentNode = currentNode->childrenNodes[ch];\n        }\n        currentNode->wordEndings.push_back({adhu, idhu});\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string targetString, vector<string>& wordList, vector<int>& costList) {\n        int targetLength = targetString.size();\n        vector<int> costDP(targetLength + 1, INT_MAX);\n        costDP[0] = 0;\n\n        RandomTrie trieStructure;\n        int go = 0;\n        while (go < wordList.size()) {\n            trieStructure.addWord(wordList[go], go, costList[go]);\n            go++;\n        }\n\n        int done = 0;\n        while (done < targetLength) {\n            if (costDP[done] == INT_MAX) {\n                done++;\n                continue;\n            }\n            RandomTrieNode* currentNode = trieStructure.rootNode;\n            int func = done;\n            while (func < targetLength) {\n                if (!currentNode->childrenNodes.count(targetString[func])) break;\n                currentNode = currentNode->childrenNodes[targetString[func]];\n                for (auto& wordPair : currentNode->wordEndings) {\n                    int wordLength = wordList[wordPair.first].size();\n                    if (done + wordLength <= targetLength) costDP[done + wordLength] = min(costDP[done + wordLength], costDP[done] + wordPair.second);\n                }\n                func++;\n            }\n            done++;\n        }\n\n        return costDP[targetLength] == INT_MAX ? -1 : costDP[targetLength];\n    }\n};\n",
    "submit_ts": "1720323428",
    "subm_id": "1312375321"
}