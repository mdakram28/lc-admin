{
    "username": "penguinzzz",
    "submission": "class sparsetable {\npublic:\n    int combine(int l, int r) {\n        return l & r;\n    }\n\n    sparsetable(const vector<int>& arr) {\n        n = arr.size();\n        k = log2(n) + 1;\n        st = vector<vector<int>>(n, vector<int>(k));\n        build(arr);\n    }\n\n    int query(int L, int R) {\n        int j = log2(R - L + 1);\n        return combine(st[L][j], st[R - (1 << j) + 1][j]);\n    }\n\nprivate:\n    int n, k;\n    vector<vector<int>> st;\n\n    void build(const vector<int>& arr) {\n        for (int i = 0; i < n; i++) {\n            st[i][0] = arr[i];\n        }\n        for (int j = 1; (1 << j) <= n; j++) {\n            for (int i = 0; (i + (1 << j) - 1) < n; i++) {\n                st[i][j] = combine(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n            }\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        sparsetable st(a);\n        int n = a.size();\n        int ans = INT_MAX;\n\n        auto search1 = [&](int i) {\n            int l = i;\n            int r = n - 1;\n            int res = r;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (st.query(i, mid) >= k) {\n                    res = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            return res;\n        };\n\n        auto search2 = [&](int i) {\n            int l = i;\n            int r = n - 1;\n            int res = r;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (st.query(i, mid) <= k) {\n                    res = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            return res;\n        };\n\n        for (int i = 0; i < n; i++) {\n            int j = search1(i);\n            int l = search2(i);\n            if (j < n) {\n                ans = min(ans, abs(k - st.query(i, j)));\n            }\n            if (l < n) {\n                ans = min(ans, abs(k - st.query(i, l)));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296861.0
}