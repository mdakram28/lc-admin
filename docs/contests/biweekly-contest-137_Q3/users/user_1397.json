{
    "username": "HImansh Negi",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        // Precompute row maximums and their indices\n        vector<vector<pair<int, int>>> rowMaxes(m);\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                rowMaxes[i].push_back({board[i][j], j});\n            }\n            sort(rowMaxes[i].rbegin(), rowMaxes[i].rend());\n        }\n        \n        long long maxSum = LLONG_MIN;\n        \n        // Try all combinations of 3 distinct rows\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    // Try the top 3 values from each row\n                    for (int i = 0; i < min(3, n); ++i) {\n                        for (int j = 0; j < min(3, n); ++j) {\n                            for (int k = 0; k < min(3, n); ++k) {\n                                if (rowMaxes[r1][i].second != rowMaxes[r2][j].second && \n                                    rowMaxes[r1][i].second != rowMaxes[r3][k].second && \n                                    rowMaxes[r2][j].second != rowMaxes[r3][k].second) {\n                                    long long sum = (long long)rowMaxes[r1][i].first + \n                                                    rowMaxes[r2][j].first + \n                                                    rowMaxes[r3][k].first;\n                                    maxSum = max(maxSum, sum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n};",
    "submit_ts": "1723908043",
    "subm_id": "1359135709"
}