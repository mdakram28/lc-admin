{
    "username": "hamsterw",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int>mx(2), cmx(2), mn(2), cmn(2);\n        mx[0] = mx[1] = -1000000000;\n        cmx[0] = cmx[1] = -1000000000;\n        mn[0] = mn[1] = 1000000000;\n        cmn[0] = cmn[1] = 1000000000;\n        for(auto p:points){\n            int x = p[0], y = p[1];\n            int s = x+y, d = x-y;\n            if(s>=mx[0]){\n                cmx[0] = mx[0];mx[0] = s;\n            }else if(s>=cmx[0])cmx[0] = s;\n            if(d>=mx[1]){\n                cmx[1] = mx[1];mx[1] = d;\n            }else if(d>=cmx[1])cmx[1] = d;\n            \n            if(s<=mn[0]){\n                cmn[0] = mn[0];mn[0] = s;\n            }else if(s<=cmn[0])cmn[0] = s;\n            if(d<=mn[1]){\n                cmn[1] = mn[1];mn[1] = d;\n            }else if(d<=cmn[1])cmn[1] = d;\n            \n        }\n        int ans = max(mx[0] - mn[0], mx[1] - mn[1]);\n        cout<<mx[0]<<\" \"<<cmx[0]<<\" \"<<mn[0]<<\" \"<<cmn[0]<<endl;\n        cout<<mx[1]<<\" \"<<cmx[1]<<\" \"<<mn[1]<<\" \"<<cmn[1]<<endl;\n        int n = points.size();\n        for(int i=0;i<n;i++){\n            \n            int now1, now2;\n            int s = points[i][0] + points[i][1];\n            int d = points[i][0] - points[i][1];\n            \n            if(mx[0]==s)now1 = cmx[0] - mn[0];\n            else if(mn[0]==s)now1 = mx[0] - cmn[0];\n            else now1 = mx[0] - mn[0];\n            \n            if(mx[1]==d)now2 = cmx[1] - mn[1];\n            else if(mn[1]==d)now2 = mx[1] - cmn[1];\n            else now2 = mx[1] - mn[1];\n            \n            ans = min(ans, max(now1, now2));\n            \n        }\n        \n        return ans;\n    }\n};"
}