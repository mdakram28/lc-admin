{
    "username": "timetoai",
    "submission": "class Node:\n    def __init__(self, v, c=1, l=None, r=None):\n        self.v = v\n        self.c = c\n        self.l = l\n        self.r = r\n        \n    def __lt__(self, other):\n        return self.v <= other.v\n        \n    def __gt__(self, other):\n        return self.v >= other.v\n\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        head = node = Node(0)\n        for i in range(n):\n            cur = nums[i] - target[i]\n            if cur == node.v:\n                node.c += 1\n            else:\n                node.r = Node(cur, l=node)\n                node = node.r\n        node.r = Node(v=0, l=node)\n        \n        res = 0\n        # negatives\n        node = head\n        h = []\n        while node:\n            if node.v < 0:\n                heappush(h, (node.v, node))\n            node = node.r\n        while h:\n            _, node = heappop(h)\n            if node.v == 0:\n                continue\n            t = min(node.l.v, node.r.v)\n            res += t - node.v\n            node.v = t\n            if node.l.v != 0 and node.l.v == t:\n                node.c += node.l.c\n                node.l.v = 0\n                newl = node.l.l\n                node.l = newl\n                newl.r = node\n            if node.r.v != 0 and node.r.v == t:\n                node.c += node.r.c\n                node.r.v = 0\n                newr = node.r.r\n                node.r = newr\n                newr.l = node\n            if t < 0:\n                heappush(h, (t, node))\n        \n        # positives\n        node = head\n        h = []\n        while node:\n            if node.v > 0:\n                heappush(h, (- node.v, node))\n            node = node.r\n        while h:\n            _, node = heappop(h)\n            if node.v == 0:\n                continue\n            t = max(node.l.v, node.r.v)\n            res += node.v - t\n            node.v = t\n            if node.l.v != 0 and node.l.v == t:\n                node.c += node.l.c\n                node.l.v = 0\n                newl = node.l.l\n                node.l = newl\n                newl.r = node\n            if node.r.v != 0 and node.r.v == t:\n                node.c += node.r.c\n                node.r.v = 0\n                newr = node.r.r\n                node.r = newr\n                newr.l = node\n            if t > 0:\n                heappush(h, (- t, node))\n                \n        return res",
    "submit_ts": "1721530582",
    "subm_id": "1327937777"
}