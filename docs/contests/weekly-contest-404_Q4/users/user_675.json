{
    "username": "MonoLithh",
    "submission": "class Solution {\npublic:\n    vector<int> calc(int node, int n,vector<int> adj[n])\n    {\n        vector<int>vis(n,0);\n        vector<int>dist(n,1e7);\n        dist[node]=0;\n        queue<int>q;\n        q.push(node);\n        vis[node]=1;\n        while(!q.empty())\n        {\n            node=q.front();\n            q.pop();\n            for(auto it:adj[node])\n            {\n                if(!vis[it])\n                {\n                    vis[it]=1;\n                    q.push(it);\n                    dist[it]=dist[node]+1;\n                }\n            }\n        }\n        return dist;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size();\n        n++;\n        vector<int>adj1[n];\n        for(auto it:edges1)\n        {\n            adj1[it[0]].push_back(it[1]);\n            adj1[it[1]].push_back(it[0]);\n        }\n        int m=edges2.size();\n        m++;\n        vector<int> adj2[m];\n        for(auto it:edges2)\n        {\n            adj2[it[0]].push_back(it[1]);\n            adj2[it[1]].push_back(it[0]);\n        }\n        auto dist1=calc(0,n,adj1);\n        int node1=max_element(dist1.begin(),dist1.end())-dist1.begin();\n        auto dist2=calc(node1,n,adj1);\n        int node2=max_element(dist2.begin(),dist2.end())-dist2.begin();\n        dist1=calc(node2,n,adj1);\n        cout<<node1<<\" \"<<node2<<\"\\n\";\n        vector<int>real1(n);\n        int mx=0;\n        for(int i=0;i<n;i++)\n        {\n            real1[i]=max(dist1[i],dist2[i]);\n            mx=max(mx,real1[i]);\n        }\n        dist1=calc(0,m,adj2);\n        node1=max_element(dist1.begin(),dist1.end())-dist1.begin();\n        dist2=calc(node1,m,adj2);\n        node2=max_element(dist2.begin(),dist2.end())-dist2.begin();\n        dist1=calc(node2,m,adj2);\n        vector<int>real2(m);\n        for(int i=0;i<m;i++)\n        {\n            real2[i]=max(dist1[i],dist2[i]);\n            mx=max(real2[i],mx);\n        }\n\n        int ans=1e7;\n        int mn1=*min_element(real1.begin(),real1.end());\n        int mn2=*min_element(real2.begin(),real2.end());\n        ans=max(mx,mn1+mn2+1);\n        return ans;\n    }\n};",
    "submit_ts": 1719718620.0
}