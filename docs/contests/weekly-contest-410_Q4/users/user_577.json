{
    "username": "lukeiscoding",
    "submission": "def count_non_decreasing(n, a):\n    mod = 1000000007\n    dp = [[0] * (max(a) + 1) for _ in range(n + 1)]\n    prefix_sum = [0] * (max(a) + 1)\n    \n    for j in range(a[0] + 1):\n        dp[1][j] = 1\n    \n    for j in range(max(a) + 1):\n        prefix_sum[j] = dp[1][j]\n        if j > 0:\n            prefix_sum[j] = (prefix_sum[j] + prefix_sum[j - 1]) % mod\n    \n    for i in range(2, n + 1):\n        for j in range(a[i - 1] + 1):\n            dp[i][j] = prefix_sum[j]\n        for j in range(max(a) + 1):\n            prefix_sum[j] = dp[i][j]\n            if j > 0:\n                prefix_sum[j] = (prefix_sum[j] + prefix_sum[j - 1]) % mod\n    result = sum(dp[n][j] for j in range(a[n - 1] + 1)) % mod\n    return result\n\nclass Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        arr1 = [0] * n\n        arr1[0] = 0\n\n        for i in range(1, n):\n            arr1[i] = max(arr1[i-1], nums[i] - (nums[i-1] - arr1[i-1]))\n        \n        arr2 = [0] * n\n        arr2[-1] = 0\n        \n        for i in reversed(range(n - 1)):\n            arr2[i] = max(arr2[i + 1], nums[i] - (nums[i + 1] - arr2[i + 1]))\n        \n        diff = [nums[i] - arr2[i] - arr1[i] for i in range(n)]\n        return count_non_decreasing(n, diff)",
    "submit_ts": "1723347268",
    "subm_id": "1351595382"
}