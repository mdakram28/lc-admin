{
    "username": "akashdnb",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll ans = 0;\n        \n        vector<vector<ll>> ps(n+1, vector<ll>(32, 0));\n        \n         for(int i = 0; i < n; i++) {\n            for(int j = 0; j < 32; j++) {\n                ps[i + 1][j] = (nums[i] & (1 << j)) != 0 ? 1 : 0;\n                ps[i+1][j] += ps[i][j];\n            }\n        }\n        \n        \n         auto check = [&](int i, int prev) {\n            for(int j = 0; j < 32; j++) {\n                int lb = i;\n                \n                int x = ps[i+1][j] - ps[prev][j];\n                // cout<<j<<\" \"<<x<<\" \"<<(k & (1 << j))<<endl;\n                if(k & (1 << j)) {\n                    if(x != i - prev + 1) return false;\n                } else {\n                    if(x == i - prev + 1) return false;\n                }\n            }\n             \n            return true;\n        };\n        \n        \n        auto find = [&](int i, int prev){\n            vector<int> f(32, 0);\n            for(int j = 0; j < 32; j++){\n                f[j] = ps[i+1][j] - ps[prev][j];\n            }\n            \n            return f;\n        };\n        \n        // cout<<check(2, 1)<<endl;\n        \n//         auto sol(int i, int prev, vector<int> &f){\n            \n//         };\n        \n        \n        // int prev = 0, prevK = -1;\n        // for(int i = 0; i < n; i++){\n            \n//             while(prev < i && !check(i, prev)){\n//                 prev ++;\n//             }\n            \n//             auto f = find(i, prev);\n            \n//             int pk = sol(i, prev, f);\n            \n//             ans += i - (pk - prev) + 1;\n            \n//             while(prev < i && !check(i, prev)){\n//                 if(nums[prev] == k) prevK = prev;\n//                 prev ++;\n//             }\n            \n            \n//             if(prevK >= prev) ans \n            \n//             bool flag = 1;\n//             for(int j = 0; j < 32; j++){\n//                 bool a = k & (1<<j);\n//                 bool b = nums[i] & (1<<j);\n                \n//                 if((!a && b) || (a && !b)){\n//                     flag = 0;\n//                     break;\n//                 }\n//             }\n            \n            // cout<<i<<\" \"<<prev<<\" \"<<flag<<endl;\n            \n//             if(flag) ans += i - prev + 1;   \n//             else ans += i - prev;\n            \n            // cout<<ans<<endl;\n        // }\n        \n        \n        ll cnt = 0;\n        \n        map<ll, ll> pr;\n        \n        for(int i = 0; i < n; i++){\n            map<ll, ll> cr;\n            \n            if(nums[i] == k) cnt ++;\n            cr[nums[i]] = 1;\n            \n            for(auto &it : pr){\n                ll nr = it.first & nums[i];\n                if(nr == k) cnt += it.second;\n                \n                cr[nr] += it.second;\n            }\n            \n            pr = cr;\n            \n        }\n        \n        return cnt;\n    }\n};",
    "submit_ts": "1720281138",
    "subm_id": "1311814468"
}