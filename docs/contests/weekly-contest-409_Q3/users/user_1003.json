{
    "username": "tan-zuo",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries){\n        TreeSet<int[]> treeSet = new TreeSet<>((a,b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);\n        int cur = n - 1, m = queries.length;\n        int[] ans = new int[m];\n        for (int i = 0; i < m; i++) {\n            int[] q = queries[i];\n            cur = floor(treeSet,cur,q);\n            cur = low(treeSet,cur,q);\n            cur -= q[1] - q[0] - 1;\n            treeSet.add(q);\n            ans[i] = cur;\n        }\n        return ans;\n    }\n    private int floor(TreeSet<int[]> treeSet,int cur,int[] q){\n        int[] floor = treeSet.ceiling(q);\n        while (floor != null){\n            if (floor[0] >= q[1]) break;\n            treeSet.remove(floor);\n            cur += floor[1] - floor[0] - 1;\n            if (floor[1] > q[1]){\n                q[0] = floor[0];\n                q[1] = floor[1];\n            }\n            floor = treeSet.ceiling(q);\n        }\n        return cur;\n    }\n    private int low(TreeSet<int[]> treeSet,int cur,int[] q){\n        int[] low = treeSet.floor(q);\n        while (low != null){\n            if (low[1] <= q[0]) break;\n            treeSet.remove(low);\n            cur += low[1] - low[0] - 1;\n            if (low[1] >= q[1]){\n                q[0] = low[0];\n                q[1] = low[1];\n            }\n            low = treeSet.lower(q);\n        }\n        return cur;\n    }\n}",
    "submit_ts": "1722743486",
    "subm_id": "552351090"
}