{
    "username": "STARK_456",
    "submission": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc minimumDiameterAfterMerge(edges1 [][]int, edges2 [][]int) int {\n\tsize1 := len(edges1) + 1\n\tsize2 := len(edges2) + 1\n\n\tgraph1 := make([][]int, size1)\n\tgraph2 := make([][]int, size2)\n\n\tfor _, edge := range edges1 {\n\t\tu, v := edge[0], edge[1]\n\t\tgraph1[u] = append(graph1[u], v)\n\t\tgraph1[v] = append(graph1[v], u)\n\t}\n\n\tfor _, edge := range edges2 {\n\t\tu, v := edge[0], edge[1]\n\t\tgraph2[u] = append(graph2[u], v)\n\t\tgraph2[v] = append(graph2[v], u)\n\t}\n\n\tdfs := func(graph [][]int, start int, furthestNode *int) int {\n\t\tn := len(graph)\n\t\tdistance := make([]int, n)\n\t\tfor i := range distance {\n\t\t\tdistance[i] = -1\n\t\t}\n\n\t\tvar dfsVisit func(node, dist int)\n\t\tdfsVisit = func(node, dist int) {\n\t\t\tdistance[node] = dist\n\t\t\tif dist > distance[*furthestNode] {\n\t\t\t\t*furthestNode = node\n\t\t\t}\n\t\t\tfor _, neighbor := range graph[node] {\n\t\t\t\tif distance[neighbor] == -1 {\n\t\t\t\t\tdfsVisit(neighbor, dist+1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t*furthestNode = start\n\t\tdfsVisit(start, 0)\n\t\treturn distance[*furthestNode]\n\t}\n\n\tnode1 := 0\n\tdfs(graph1, 0, &node1)\n\tdiameter1 := dfs(graph1, node1, &node1)\n\n\tnode2 := 0\n\tdfs(graph2, 0, &node2)\n\tdiameter2 := dfs(graph2, node2, &node2)\n\n\tminDiameter := int(math.Max(float64(diameter1), float64(diameter2)))\n\n\thalf1 := (diameter1 + 1) / 2\n\thalf2 := (diameter2 + 1) / 2\n\n\tminDiameter = int(math.Max(float64(minDiameter), float64(half1+half2+1)))\n\n\treturn minDiameter\n}",
    "submit_ts": "1719719370",
    "subm_id": "1304440284"
}