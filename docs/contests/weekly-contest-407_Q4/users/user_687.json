{
    "username": "xie-bin-o",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int len = nums.length;\n        int[] d = new int[len];\n        for(int i = 0; i < len; i++){\n            d[i] = target[i] - nums[i];\n        }\n        long cur = 0;\n        long ret = 0;\n        // System.out.println(Arrays.toString(d));\n        for(int i = 0; i < len; i++){\n            int j = i;\n            ret += Math.abs(d[j]);\n            while(j + 1 < len && ((d[j] >= 0 && d[j+1] >= 0) || (d[j] < 0 && d[j+1] < 0))){\n                if(d[j] >= 0){\n                    ret += Math.max(0, d[j+1]- d[j]);\n                }else{\n                    ret += Math.max(0, -d[j+1] + d[j]);\n                }\n                j++;\n                // System.out.println(i + \" \" + j);\n            }\n            // System.out.println(i + \" \" + ret);\n            i = j;\n        }\n        return ret;\n    }\n}",
    "submit_ts": "1721531066",
    "subm_id": "548382874"
}