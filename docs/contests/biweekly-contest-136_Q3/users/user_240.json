{
    "username": "ywwbill",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        num_ops = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                s = (\n                    grid[i][j]\n                    + grid[m - i - 1][j]\n                    + grid[i][n - 1 - j]\n                    + grid[m - i - 1][n - j - 1]\n                )\n                num_ops += min(s, 4 - s)\n        count1 = 0\n        num_pairs = 0\n        pair1 = 0\n        if m % 2 == 1:\n            for j in range(n // 2):\n                if grid[m // 2][j] != grid[m // 2][n - 1 - j]:\n                    num_pairs += 1\n                count1 += grid[m // 2][j] + grid[m // 2][n - 1 - j]\n                if grid[m // 2][j] == 1 and grid[m // 2][n - 1 - j] == 1:\n                    pair1 += 1\n        if n % 2 == 1:\n            for i in range(m // 2):\n                if grid[i][n // 2] != grid[m - 1 - i][n // 2]:\n                    num_pairs += 1\n                count1 += grid[i][n // 2] + grid[m - 1 - i][n // 2]\n                if grid[i][n // 2] == 1 and grid[m - 1 - i][n // 2] == 1:\n                    pair1 += 1\n        count1 %= 4\n        num_ops += num_pairs\n        if count1 == 2 and pair1 > 0 and num_pairs == 0:\n            num_ops += 2\n        if m % 2 == 1 and n % 2 == 1 and grid[m // 2][n // 2] == 1:\n            num_ops += 1\n        return num_ops",
    "submit_ts": "1722697644",
    "subm_id": "552267124"
}