{
    "username": "manassinghmainacc",
    "submission": "class Solution { \npublic: \n    int maxOperations(const string& binaryString) const { \n        int result = 0, onesCount = 0; \n        bool hasOne = false; \n        vector<int> sequence; \n\n        size_t index = 0;\n        while (index < binaryString.size()) { \n            if (binaryString[index] == '1') { \n                sequence.push_back(1); \n                hasOne = true; \n            } \n            else if (binaryString[index] == '0' && hasOne) { \n                sequence.push_back(0); \n                hasOne = false; \n            } \n            ++index; \n        } \n\n        size_t elementIndex = 0;\n        while (elementIndex < sequence.size()) { \n            if (sequence[elementIndex] == 1) { \n                ++onesCount; \n            } \n            else { \n                result += onesCount; \n            } \n            ++elementIndex; \n        } \n\n        return result; \n    } \n};\n",
    "submit_ts": "1721530539",
    "subm_id": "1327936554"
}