{
    "username": "Dastan Iyembergen",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in (1, 3, 9):\n            return '9'*n\n        elif k == 2:\n            if n == 1:\n                return '8'\n            return '8' + '9' * (n-2) + '8'\n        elif k == 4:\n            if n < 4:\n                return '8' * n\n            return '88' + '9' * (n-4) + '88'\n        elif k == 5:\n            if n == 1:\n                return '5'\n            return '5' + '9' * (n-2) + '5'\n        elif k == 6:\n            if n == 1:\n                return '6'\n            if n == 2:\n                return '66'\n            if n % 2:\n                return '8' + '9' * ((n-3) // 2) + '8' + '9' * ((n-3) // 2) + '8'\n            return '8' + '9' * ((n-3) // 2) + '77' + '9' * ((n-3) // 2) + '8'\n        elif k == 8:\n            if n <= 6:\n                return '8' * n\n            return '888' + '9' * (n-6) + '888'\n\n        if n == 1:\n            return '7'\n        if n == 2:\n            return '77'\n        if n % 2:\n            for i in range(9, -1, -1):\n                s = '9' * ((n-1) // 2) + str(i) + '9' * ((n-1) // 2)\n                if self.isDivBy7(s):\n                    return s\n        for i in range(9, -1, -1):\n            s = '9' * ((n-1) // 2) + str(i) * 2 + '9' * ((n-1) // 2)\n            if self.isDivBy7(s):\n                return s\n\n    def isDivBy7(self, s):\n        while (1):\n            if len(s) <= 4:\n                return int(s) % 7 == 0\n\n            tail = str(int(s[-4:-1]) - int(s[-1]) * 2)\n\n            s = s[0:-4] + '0' * (3 - len(tail)) + tail",
    "submit_ts": "1723953033",
    "subm_id": "1359810623"
}