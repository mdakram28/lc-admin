{
    "username": "han3000",
    "submission": "class BIT:\n    def __init__(self, n: int):\n        self.size = n\n        self._tree1 = defaultdict(int)\n        self._tree2 = defaultdict(int)\n\n    @staticmethod\n    def _lowbit(index: int) -> int:\n        return index & -index\n\n    def add(self, left: int, right: int, delta: int) -> None:\n        self._add(left, delta)\n        self._add(right + 1, -delta)\n\n    def query(self, left: int, right: int) -> int:\n        return self._query(right) - self._query(left - 1)\n\n    def _add(self, index: int, delta: int) -> None:\n        if index <= 0:\n            raise ValueError('index \u5fc5\u987b\u662f\u6b63\u6574\u6570')\n\n        rawIndex = index\n        while index <= self.size:\n            self._tree1[index] += delta\n            self._tree2[index] += (rawIndex - 1) * delta\n            index += self._lowbit(index)\n\n    def _query(self, index: int) -> int:\n        if index > self.size:\n            index = self.size\n\n        rawIndex = index\n        res = 0\n        while index > 0:\n            res += rawIndex * self._tree1[index] - self._tree2[index]\n            index -= self._lowbit(index)\n        return res\n\n\n\nclass Solution:\n    def countOfPeaks(self, A: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(A)\n        V = [0] * n\n        t = BIT(n)\n        for i in range(1, n - 1):\n            if A[i-1] < A[i] and A[i] > A[i + 1]:\n                t.add(i + 1, i + 1, 1)\n\n        def update(i, sign):\n            if 0 < i < n - 1:\n                v = A[i-1] < A[i] and A[i] > A[i + 1]\n                t.add(i + 1, i + 1, v * sign)\n\n        res = []\n        for q,i,j in queries:\n            if q == 1:\n                if i + 2 <= j:\n                    res.append(t.query(i + 2, j))\n                else:\n                    res.append(0)\n            else:\n                update(i - 1, -1)\n                update(i + 0, -1)\n                update(i + 1, -1)\n                A[i] = j\n                update(i - 1, 1)\n                update(i + 0, 1)\n                update(i + 1, 1)\n        return res",
    "submit_ts": "1718506588",
    "subm_id": "539775944"
}