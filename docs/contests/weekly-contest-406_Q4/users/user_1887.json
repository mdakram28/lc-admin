{
    "username": "kagari-a",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        sort(horizontalCuts.begin(), horizontalCuts.end(), greater<int>());\n        sort(verticalCuts.begin(), verticalCuts.end(), greater<int>());\n        long long h = 1, v = 1, i = 0, j = 0, cost = 0;\n        while (i < m - 1 && j < n - 1) {\n            if (horizontalCuts[i] >= verticalCuts[j]) {\n                cost += horizontalCuts[i++] * v;\n                h++;\n            } else {\n                cost += verticalCuts[j++] * h;\n                v++;\n            }\n        }\n        while (i < m - 1) {\n            cost += horizontalCuts[i++] * v;\n        }\n        while (j < n - 1) {\n            cost += verticalCuts[j++] * h;\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925914",
    "subm_id": "546442808"
}