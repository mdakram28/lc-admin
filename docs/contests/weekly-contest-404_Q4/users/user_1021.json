{
    "username": "ashishsutar1210",
    "submission": "class Solution {\n    int mx,lst1;\n    vector<vector<int>> adj;\n    vector<int>dis;\n    int n;\n    int f(int st)\n    {\n        queue<int>q;\n        dis.assign(n,-1e9);\n        q.push(st);\n        dis[st] = 0;\n        int lst = st;\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n            for (auto it: adj[node]) {\n                if (dis[it] == -1e9) {\n                    dis[it] = dis[node] + 1;\n                    q.push(it);\n                    if (dis[it] > dis[lst]) {\n                        lst = it;\n                    }\n                }\n            }\n        }\n        return lst;\n    }\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        n = edges1.size() + 1;\n        int m1 = 0;\n        adj.assign(n,{});\n        for(auto it:edges1)\n        {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        int j = f(0);\n        int k = f(j);\n        m1 = dis[k];\n        int m2 = 0;\n        n = edges2.size()+1;\n        adj.assign(n,{});\n        for(auto it:edges2)\n        {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        int p = f(0);\n        k = f(p);\n        m2 = dis[k];\n        int re = max(m1,m2);\n        // cout<<m1<<\" \"<<m2<<endl;\n        re = max(re,(m1+1)/2 + (m2+1)/2 + 1);return re;\n    }\n};",
    "submit_ts": 1719719126.0
}