{
    "username": "andr1y",
    "submission": "class Solution {\nprivate:\n    const long long M = 1'000'000'007;\n    long long rev(long long x){\n        if(x == 1) return 1;\n        return M - M/x*rev(M%x)%M;\n    }\n    long long sum_arit(long long st, long long cn){\n        return (st+st+(cn-1))*cn/2;\n    }\n    \npublic:\n    using ll = long long;\n    ll dp[302][402];\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        sort(req.begin(), req.end(), [](auto &a, auto &b){\n            return a[0] < b[0];\n        });\n        int last = -1;\n        int arc = 0;\n        ll res = 1;\n        for(auto &x : req){\n            int e = x[0];\n            int cn = x[1];\n            ll sx = sum_arit(last+1, e-last);\n            if(sx < cn - arc)\n                return 0;\n            sx = cn-arc;\n            memset(dp[last+1], 0, sizeof(ll)*402);\n            for(int j = 0;j<=last+1;j++) dp[last+1][j] = 1;\n            for(int i = last+2;i<=e;i++){\n                for(int get = sx;get>=0;get--){\n                    ll sz = 0;\n                    for(int j = 0;j<=i && j<=get;j++)\n                        sz = (sz + dp[last+1][get-j])%M;\n                    dp[last+1][get] = sz;\n                }\n            }\n            res = res*dp[last+1][sx]%M;\n            last = e;\n            arc = cn;\n        }\n        return res;\n    }\n};",
    "submit_ts": 1719069114.0
}