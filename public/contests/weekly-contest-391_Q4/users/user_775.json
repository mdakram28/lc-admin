{
    "username": "santhoshsai85",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        // sort(p.begin(), p.end());\n        vector<vector<int>> s, d;\n        for(int i = 0; i < n; i++) {\n            s.push_back({p[i][0] + p[i][1], i});\n            d.push_back({p[i][0] - p[i][1], i});\n        }\n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        // for(auto &i : s) cout << i[0] << \" \" << i[1] << \"\\n\";\n        // cout << \"\\n\";\n        // for(auto &i : d) cout << i[0] << \" \" << i[1] << \"\\n\";\n        // cout << \"\\n\";\n        set<int> st;\n        st.insert(s[0][1]);\n        st.insert(s[n - 1][1]);\n        st.insert(d[0][1]);\n        st.insert(d[n - 1][1]);\n        int ans = INT_MAX;\n        for(auto& j : st) {\n            vector<int> ss, dd;\n            for(int i = 0; i < n; i++) {\n                if(j == i) continue;\n                ss.push_back(p[i][0] + p[i][1]);\n                dd.push_back(p[i][0] - p[i][1]);\n            }\n            sort(ss.begin(), ss.end());\n            sort(dd.begin(), dd.end());\n            ans = min(ans, max(ss.back() - ss[0], dd.back() - dd[0]));\n        }\n        return ans;\n    }\n};"
}