{
    "username": "sudhanshu1182",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         int n = nums.size(); \n        long long ans = 0; \n         \n        unordered_map<long long, long long> mp; \n \n        for (int i = 0; i < n; ++i) { \n            unordered_map<long long, long long> mp_curr;  \n \n            if (nums[i] == k) { \n                ++ans; \n            } \n            mp_curr[nums[i]] = 1; \n \n            for (auto& [it1, it2] : mp) { \n                long long newans = it1 & nums[i]; \n                if (newans == k) { \n                    ans += it2; \n                } \n                mp_curr[newans] += it2; \n            } \n             \n            mp = mp_curr; \n        } \n         \n        return ans; \n    }\n};",
    "submit_ts": "1720279411",
    "subm_id": "1311750114"
}