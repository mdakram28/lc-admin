{
    "username": "dixit_code",
    "submission": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int f(int a, int b, int c, int d) {\n        int countOnes = a + b + c + d;\n        return min(countOnes, 4 - countOnes);\n    }\n\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n        int res = 0;\n\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int a = matrix[i][j];\n                int b = matrix[rows - i - 1][j];\n                int c = matrix[i][cols - j - 1];\n                int d = matrix[rows - i - 1][cols - j - 1];\n                res += f(a,b,c,d);\n            }\n        }\n\n        int ans = 0;\n        int dixit = 0;\n\n        if (rows % 2 != 0) {\n            int middleRow = rows / 2;\n            for (int j = 0; j < cols / 2; ++j) {\n                if (matrix[middleRow][j] != matrix[middleRow][cols - j - 1]) {\n                    res++;\n                    ans++;\n                } else if (matrix[middleRow][j] == 1) {\n                    dixit++;\n                }\n            }\n        }\n\n        if (cols % 2 != 0) {\n            int middleCol = cols / 2;\n            for (int i = 0; i < rows / 2; ++i) {\n                if (matrix[i][middleCol] != matrix[rows - i - 1][middleCol]) {\n                    res++;\n                    ans++;\n                } else if (matrix[i][middleCol] == 1) {\n                    dixit++;\n                }\n            }\n        }\n\n        if (rows % 2 != 0 && cols % 2 != 0) {\n            int center = matrix[rows / 2][cols / 2];\n            if (center == 1) {\n                res++;\n            }\n        }\n\n        if (ans == 0 && dixit % 2 != 0) {\n            res += 2;\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": "1722700137",
    "subm_id": "1343232769"
}