{
    "username": "rahul_sehgal_021",
    "submission": "class Solution {\npublic:\n    // long long fun(int l,int r,int x)\n    // {\n    //     int p=rmq(l,r);              // p = position of the minimum value in\n    //     the subarray c[l...r] long long o=(c[p]>0 && x<c[p]);    // if c[p]\n    //     is not zero and greater than the previous minimum, count 1 if(l<p)\n    //     o+=fun(l,p-1,c[p]);  // call on the left side if(r>p)\n    //     o+=fun(p+1,r,c[p]);  // call on the right side return o; // return\n    //     the answer\n    // }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        // int n = nums.size();\n        // vector<int> c(n);\n        // for(int i = 0; i<n; i++){\n        //     c[i] = target[i] - nums[i];\n        // }\n        // return fun(0,0,n);\n        int n = nums.size();\n        vector<int> t(n, 0);\n        for (int i = 0; i < n; i++) {\n            t[i] = target[i] - nums[i];\n        }\n\n        int pos = 0;\n        long long m = 0, ans = 0;\n        ans = abs(t[0]);\n        m = ans;\n        if (t[0] >= 0)\n            pos = 1;\n        for (int i = 1; i < n; i++) {\n            if (t[i] < 0 && pos == 1) {\n                ans += abs(t[i]);\n                m = abs(t[i]);\n                pos = 0;\n                continue;\n            }\n            if (t[i] >= 0 && pos == 0) {\n                ans += abs(t[i]);\n                m = abs(t[i]);\n                pos = 1;\n                continue;\n            }\n            if (m >= abs(t[i])) {\n                m = abs(t[i]);\n                continue;\n            } else {\n                ans += abs(t[i]) - m;\n                m = abs(t[i]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533742",
    "subm_id": "1328015649"
}