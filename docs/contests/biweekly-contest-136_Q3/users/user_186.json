{
    "username": "salyu",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), res = 0;\n        for (int r = 0; r < n / 2; ++r) {\n            for (int c = 0; c < m / 2; ++c) {\n                int cnt[2]{};\n                ++cnt[grid[r][c]];\n                ++cnt[grid[n - r - 1][c]];\n                ++cnt[grid[r][m - c - 1]];\n                ++cnt[grid[n - r - 1][m - c - 1]];\n                cout << cnt[0] << \" \" << cnt[1] << endl;\n                res += min(cnt[0], cnt[1]);\n            }\n        }\n        int rem = 0, flex = 0;\n        if (n % 2 == 1) {\n            int r = n / 2;\n            for (int c = 0; c < m / 2; ++c) {\n                if (grid[r][c] != grid[r][m - c - 1]) {\n                    ++res; ++flex;\n                }\n                else if (grid[r][c] == 1) {\n                    ++rem;\n                }\n            }\n        }\n        if (m % 2 == 1) {\n            int c = m / 2;\n            for (int r = 0; r < n / 2; ++r) {\n                if (grid[r][c] != grid[n - r - 1][c]) {\n                    ++res; ++flex;\n                }\n                else if (grid[r][c] == 1) {\n                    ++rem;\n                }\n            }\n        }\n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) {\n            ++res;\n        }\n        if (rem % 2 == 1 && flex < 1) {\n            res += 2;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722696843",
    "subm_id": "1343124388"
}