{
    "username": "ElsaOfArkendle",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        ROWS = len(grid)\n        COLS = len(grid[0])\n\n        \"\"\"\n        Change all square connects to be the majority, 1 or 0\n        For all else change to 0\n        \"\"\"\n        res = 0\n        lmao = 0\n\n        onePairs = 0\n\n        halfRow, halfCol = 0,0\n        if ROWS%2 == 0:\n            halfRow = ROWS//2\n        else:\n            halfRow = ROWS//2 + 1\n\n        if COLS%2 == 0:\n            halfCol = COLS//2\n        else:\n            halfCol = COLS//2 + 1\n\n        keepIt = 0\n        changeOne = 0\n        for r in range(halfRow):\n            for c in range(halfCol):\n                lmao += 1\n                quad = set([(r,c), (ROWS-1-r,c), (r,COLS-1-c), (ROWS-1-r, COLS-1-c)])\n\n                numOnes = 0\n                for r,c in quad:\n                    if grid[r][c] == 1:\n                        numOnes += 1\n                if len(quad) == 4:\n                    res += min(numOnes, 4 - numOnes)\n                else:\n                    if len(quad) == 2 and numOnes == 2:\n                        onePairs += 1\n                        keepIt +=1\n                        continue\n                    elif len(quad) == 2 and numOnes == 1:\n                        onePairs += 1\n                        changeOne += 1\n                        res += 1\n                        continue\n                    res += numOnes \n\n        if onePairs*2 % 4 != 0:\n            if changeOne:\n                return res\n            else:\n                res += 2\n        \n        return res\n\n",
    "submit_ts": "1722699500",
    "subm_id": "1343213541"
}