{
    "username": "HMETAO",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int n = board.length;\n        int m = board[0].length;\n        long inf = Long.MIN_VALUE / 2;\n        long[][][][] dp = new long[n][n][m][3];\n        for (int k = 0; k < n; k++) {\n            long[][][] temp = dp[k];\n            long[] mx = new long[m];\n            Arrays.fill(mx, inf);\n            for (int i = 0; i < n; i++) {\n                long m1 = inf;\n                long mx2 = inf;\n                long tmx = inf;\n                for (int j = 0; j < m; j++) {\n                    if (m1 < mx[j]) {\n                        mx2 = m1;\n                        m1 = mx[j];\n                    } else if (mx2 < mx[j]) {\n                        mx2 = mx[j];\n                    }\n                    long val = board[i][j];\n                    if (i == k) {\n                        val = inf;\n                    }\n                    temp[i][j][0] = 0;\n                    temp[i][j][1] = val;\n                    temp[i][j][2] = (m1 == mx[j] ? mx2 : m1) + val;\n                    for (int l = 1; l <= 2; l++) {\n                        if (i > 0) temp[i][j][l] = Math.max(temp[i][j][l], temp[i - 1][j][l]);\n                        if (j > 0) temp[i][j][l] = Math.max(temp[i][j][l], temp[i][j - 1][l]);\n                    }\n                    temp[i][j][2] = Math.max(tmx + mx[j], temp[i][j][2]);\n\n                    tmx = Math.max(tmx, val);\n                    mx[j] = Math.max(mx[j], val);\n                }\n            }\n        }\n\n        long ans = inf;\n        for (int i = 0; i < n; i++) {\n            for (int j = 2; j < m; j++) {\n                ans = Math.max(ans, dp[i][n - 1][j - 1][2] + board[i][j]);\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1723909454",
    "subm_id": "556336341"
}