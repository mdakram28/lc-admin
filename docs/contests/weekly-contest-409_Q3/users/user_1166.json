{
    "username": "_drifter",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n\n        int q = queries.size();\n        vector<int> ans_list(q, n);\n        set<pair<int, int>> s;\n\n        const int THRESHOLD = 1 << 29;\n        const int INF = 1 << 30;\n\n        s.insert({-1 * INF, -1 * INF});\n        s.insert({INF, INF});\n\n        // debug(s);\n\n        for (int i = 0; i < q; i++) {\n\n            int u = queries[i][0];\n            int v = queries[i][1];\n            int start = v;\n            int end = u;\n\n            int path = 0;\n            vector<pair<int, int>> delete_nodes;\n            pair<int, int> key = {u, u};\n            auto pt = s.lower_bound(key);\n\n            int next_u = (*pt).first;\n            int next_v = (*pt).second;\n\n            if (next_u <= u && v <= next_v) {\n                ans_list[i] = ans_list[i - 1];\n                continue;\n            }\n\n            while (true) {\n\n                int u1 = (*pt).first;\n                int v1 = (*pt).second;\n\n                if (v != u1 && (u <= u1 && v1 <= v)) {\n                    start = min(start, u1);\n                    end = max(end, v1);\n                    path += v1 - u1 - 1;\n                    delete_nodes.push_back({u1, v1});\n                    ++pt;\n                } else {\n                    break;\n                }\n            }\n\n            for (auto p : delete_nodes) {\n                s.erase(p);\n            }\n\n            pt = s.lower_bound(key);\n            --pt;\n\n            int u1 = (*pt).first;\n            int v1 = (*pt).second;\n            // debug(u1, v1);\n\n            if (u1 <= u && v <= v1) {\n                ans_list[i] = ans_list[i - 1];\n            } else {\n                int ans = (i == 0 ? n - 1 : ans_list[i - 1]);\n                ans_list[i] = ans + path - (v - u - 1);\n                // debug(i, ans, path);\n                s.insert({u, v});\n                // debug(s);\n            }\n        }\n\n        return ans_list;\n    }\n};",
    "submit_ts": "1722743617",
    "subm_id": "1343795904"
}