{
    "username": "\u6b27\u6d77",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        // \u7ed9\u4f60\u4e00\u4e2a m x n \u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 board \uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\uff0c\u5176\u4e2d board[i][j] \u8868\u793a\u683c\u5b50 (i, j) \u7684 \u4ef7\u503c \u3002\n        //\n        //\u5904\u4e8e \u540c\u4e00\u884c \u6216\u8005 \u540c\u4e00\u5217 \u8f66\u4f1a\u4e92\u76f8 \u653b\u51fb \u3002\u4f60\u9700\u8981\u5728\u68cb\u76d8\u4e0a\u653e\u4e09\u4e2a\u8f66\uff0c\u786e\u4fdd\u5b83\u4eec\u4e24\u4e24\u4e4b\u95f4\u90fd \u65e0\u6cd5\u4e92\u76f8\u653b\u51fb \u3002\n        //\n        //\u8bf7\u4f60\u8fd4\u56de\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u4e0b\uff0c\u4e09\u4e2a\u8f66\u6240\u5728\u683c\u5b50 \u503c \u4e4b\u548c \u6700\u5927 \u4e3a\u591a\u5c11\u3002\n\n        // \u79fb\u9664\u67d0\u884c\u5217\u540e\uff0c\u5269\u4e0b\u91cc\u9762\u7684\u6700\u5927\u503c\u5750\u6807\uff0c\u9664\u63892\u4e2a\u70b9\u540e\u7684\u5168\u5c40\u6700\u5927\u503c\uff0c\u67d0\u884c\u5217\u5185\uff0c\u53bb\u6389\u4e00\u4e2a\u70b9\u7684\u884c\u5217\u5206\u522b\u6700\u5927\u503c\n\n        long ans = Long.MIN_VALUE;\n        PriorityQueue<int[]> posQueue = new PriorityQueue<>((a, b) -> board[b[0]][b[1]] - board[a[0]][a[1]]);\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                posQueue.add(new int[] {i, j});\n            }\n        }\n        for (int r = 0; r < board.length; r++) {\n            for (int c = 0; c < board[0].length; c++) {\n                // \u5220\u9664rc\u540e\u7684\u6700\u5927\u503c\u5750\u6807\n                int[] max = new int[2];\n                List<int[]> del = new ArrayList<>();\n                while (!posQueue.isEmpty()) {\n                    int[] poll = posQueue.poll();\n                    if (poll[0] == r || poll[1] == c) {\n                        del.add(poll);\n                        continue;\n                    }\n                    del.add(poll);\n                    max[0] = poll[0];\n                    max[1] = poll[1];\n                    break;\n                }\n\n                int val = 0;\n                while (!posQueue.isEmpty()) {\n                    int[] poll = posQueue.poll();\n                    if (poll[0] == max[0] || poll[1] == max[1] || poll[0] == r || poll[1] == c) {\n                        del.add(poll);\n                        continue;\n                    }\n                    del.add(poll);\n                    val = board[poll[0]][poll[1]];\n                    break;\n                }\n                posQueue.addAll(del);\n                // \u7b54\u6848\u8981\u4e48\u662fval + 2\n                // \u7b54\u6848\u8981\u4e48\u662fmax\u91cc\u7684\u5176\u4ed6\u5217\n                long max1 = Long.MIN_VALUE;\n                for (int i = 0; i < board.length; i++) {\n                    if (i != max[0] && i != r) {\n                        max1 = Math.max(max1, board[i][max[1]]);\n                    }\n                }\n                long max2 = Long.MIN_VALUE;\n                for (int j = 0; j < board[0].length; j++) {\n                    if (j != max[1] && j != c) {\n                        max2 = Math.max(max2, board[max[0]][j]);\n                    }\n                }\n                ans = Math.max(ans, (long)board[r][c] + val + board[max[0]][max[1]]);\n                ans = Math.max(ans, (long)board[r][c] + max2 + max1);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723907336",
    "subm_id": "556324907"
}