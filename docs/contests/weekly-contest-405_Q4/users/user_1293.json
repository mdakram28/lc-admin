{
    "username": "Cillian_raj2308",
    "submission": "class TrieVertex {\n    TrieVertex[] child;\n    int value;\n    boolean isEnd;\n\n    public TrieVertex() {\n        child = new TrieVertex[26];\n        value = Integer.MAX_VALUE;\n        isEnd = false;\n    }\n}\n\nclass TrieTree {\n    TrieVertex root;\n\n    public TrieTree() {\n        root = new TrieVertex();\n    }\n\n    public void addWord(String word, int cost) {\n        TrieVertex node = root;\n        for (char c : word.toCharArray()) {\n            if (node.child[c - 'a'] == null) {\n                node.child[c - 'a'] = new TrieVertex();\n            }\n            node = node.child[c - 'a'];\n        }\n        node.value = Math.min(cost, node.value);\n        node.isEnd = true;\n    }\n\n    public TrieVertex getRoot() {\n        return root;\n    }\n}\nclass Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n         TrieTree trie = new TrieTree();\n        int length = target.length();\n        int[] minimumCost = new int[length + 1];\n        Arrays.fill(minimumCost, Integer.MAX_VALUE);\n\n        for (int i = 0; i < words.length; ++i) {\n            trie.addWord(words[i], costs[i]);\n        }\n\n        minimumCost[0] = 0;\n\n        for (int i = 0; i < length; ++i) {\n            if (minimumCost[i] == Integer.MAX_VALUE) continue;\n\n            TrieVertex node = trie.getRoot();\n            for (int j = i; j < length; ++j) {\n                char c = target.charAt(j);\n                if (node.child[c - 'a'] == null) break;\n                node = node.child[c - 'a'];\n                if (node.isEnd) {\n                    minimumCost[j + 1] = Math.min(minimumCost[j + 1], minimumCost[i] + node.value);\n                }\n            }\n        }\n\n        return minimumCost[length] == Integer.MAX_VALUE ? -1 : minimumCost[length];\n    }\n}",
    "submit_ts": "1720323866",
    "subm_id": "1312385926"
}