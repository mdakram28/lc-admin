{
    "username": "wutwere",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        int totones = 0;\n        int moves = 0;\n        for (int i = 0; i < (n + 1) / 2; i++) {\n            for (int j = 0; j < (m + 1) / 2; j++) {\n                int mi = n - 1 - i;\n                int mj = m - 1 - j;\n                if (mi == i && mj == j) {\n                    ans += grid[i][j];\n                } else if (mi == i) {\n                    int ones = grid[i][j] + grid[i][mj];\n                    int zeros = 2 - ones;\n                    if (ones == zeros) moves++;\n                    else totones += ones;\n                } else if (mj == j) {\n                    int ones = grid[i][j] + grid[mi][j];\n                    int zeros = 2 - ones;\n                    if (ones == zeros) moves++;\n                    else totones += ones;\n                } else {\n                    int ones = grid[i][j] + grid[mi][j] + grid[i][mj] + grid[mi][mj];\n                    int zeros = 4 - ones;\n                    ans += min(ones, zeros);\n                }\n            }\n        }\n        if (totones % 4 == 2) {\n            if (moves == 0) moves += 2;\n        }\n        return ans + moves;\n    }\n};",
    "submit_ts": "1722699637",
    "subm_id": "1343217732"
}