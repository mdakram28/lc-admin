{
    "username": "chucklee",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\nMap<Integer, Integer> counts = new HashMap<>();\n\t\tfor (int i = 0; i < nums.length / 2; i++) {\n\t\t\tint diff = Math.abs(nums[i] - nums[nums.length - i - 1]);\n\t\t\tInteger count = counts.getOrDefault(diff, 0) + 1;\n\t\t\tcounts.put(diff, count);\n\t\t}\n\t\t// counts to min diff\n\t\tMap<Integer, Integer> diffs = new HashMap<>();\n\n\t\tSet<Integer> countset = counts.keySet();\n\t\tfor (int diff : countset) {\n\t\t\tint count = counts.get(diff);\n\t\t\tif (diffs.containsKey(count)) {\n\t\t\t\tif (diffs.get(count) > diff) {\n\t\t\t\t\tdiffs.put(count, diff);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdiffs.put(count, diff);\n\t\t\t}\n\t\t}\n\n\t\tSet<Integer> diffset = diffs.keySet();\n\n\t\tint minTotal = Integer.MAX_VALUE;\n\t\tfor (int diffCount : diffset) {\n\t\t\tint mostDiff = diffs.get(diffCount);\n\t\t\tint total = 0;\n\t\t\tfor (int i = 0; i < nums.length / 2; i++) {\n\t\t\t\tint diff = Math.abs(nums[i] - nums[nums.length - i - 1]);\n\t\t\t\tif (diff != mostDiff) {\n\t\t\t\t\tint min = Math.min(nums[i], nums[nums.length - i - 1]);\n\t\t\t\t\tint max = Math.max(nums[i], nums[nums.length - i - 1]);\n\n\t\t\t\t\tif (min + mostDiff > k && max - mostDiff < 0) {\n\t\t\t\t\t\ttotal = total + 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttotal = total + 1;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tminTotal = Math.min(minTotal, total);\n\t\t}\n\t\treturn minTotal;\n\n    }\n}",
    "submit_ts": "1721488728",
    "subm_id": "1327431391"
}