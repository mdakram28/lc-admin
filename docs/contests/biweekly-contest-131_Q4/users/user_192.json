{
    "username": "sksusha8853",
    "submission": "class Solution {\npublic:\n    \n\n\nint query(int *tree,int index,int s,int e,int qs,int qe)\n{\n\n\tif(qs>e || s>qe)\n\t\treturn INT_MIN;\n\tif(s>=qs && e<=qe)\n\t\treturn tree[index];\n\tint m = (s+e)/2;\n\tint left_ans = query(tree,2*index,s,m,qs,qe);\n\tint right_ans = query(tree,2*index+1,m+1,e,qs,qe);\n\treturn max(left_ans,right_ans);\n}\n\n\nvoid updateNode(int *tree,int index,int s,int e,int pos,int val)\n{\n\tif(pos<s || pos>e)\n\t\treturn ;\n\tif(s==e)\n\t{\n\t\ttree[index] = max(tree[index],val);\n\t\treturn ;\n\t}\n\tint m = (s+e)/2;\n\tupdateNode(tree,2*index,s,m,pos,val);\n\tupdateNode(tree,2*index+1,m+1,e,pos,val);\n\ttree[index] = max(tree[2*index],tree[2*index+1]);\n\treturn;\n}\n\n\n\n    vector<bool> getResults(vector<vector<int>>& queries) {\n    \tvector<bool>ans;\n        set<int>st;\n        int n = min(50000+11,3*(int)queries.size()+11);\n        int index = 1;\t\t\t\n        int s =0,e=n-1;\n        int *tree = new int[4*n+2];                      \n \n        for(auto &j:queries){\n            if(j[0]==1){\n                if(j[1]>=n-6)continue;\n                st.insert(j[1]);\n            }\n        }\n        int curr=0;\n        for(auto &j:st){\n            int diff=j-curr;\n            curr=j;   \n            updateNode(tree, 1, s, e, j,diff);\n        }\n        int mae=0;\n        st.insert(0);\n        st.insert(n-1);\n        for(int i=queries.size()-1;i>=0;i--){\n            if(queries[i][0]==1){\n                int x=queries[i][1];\n                auto it=st.lower_bound(x);\n                auto preitr=it;\n                auto nextitr=it;\n                preitr++;\n                nextitr--;\n                updateNode(tree, 1, s, e, *preitr, (*preitr)-(*nextitr));\n                st.erase(it);  \n            }\n            else{\n                auto it = st.lower_bound(queries[i][1]);\n                it--;\n                if((queries[i][1]-(*it))>= queries[i][2]){\n                    ans.push_back(true);\n                    continue;\n                }\n                mae=query(tree, 1, s, e, 0, queries[i][1]);\n                if(mae>=queries[i][2]){\n                    ans.push_back(true);\n                }\n                else{\n                    ans.push_back(false);\n                }\n            }\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n        \n    }\n};",
    "submit_ts": "1716651214",
    "subm_id": "1267634950"
}