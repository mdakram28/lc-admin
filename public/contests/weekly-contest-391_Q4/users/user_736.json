{
    "username": "piotr_detyna",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points_sum = sorted([point[0]+point[1] for point in points])\n        points_diff = sorted([point[0]-point[1] for point in points])\n        res = float('inf')\n        for point in points:\n            \n            point_sum = point[0] + point[1]\n            point_diff = point[0] - point[1]\n            \n            max_sum = points_sum[-1]\n            if max_sum == point_sum:\n                max_sum = points_sum[-2]\n                \n            max_diff = points_diff[-1]\n            if max_diff == point_diff:\n                max_diff = points_diff[-2]\n\n            min_sum = points_sum[0]\n            if min_sum == point_sum:\n                min_sum = points_sum[1]\n                \n            min_diff = points_diff[0]\n            if min_diff == point_diff:\n                min_diff = points_diff[1]\n        \n            dist = max(max_sum - min_sum, max_diff - min_diff)\n            \n            print(dist)\n            res = min(dist, res)\n        return res"
}