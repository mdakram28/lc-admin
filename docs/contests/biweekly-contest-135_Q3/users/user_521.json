{
    "username": "counter98tb",
    "submission": "/******** Debug Code *******/\n#include <bits/stdc++.h>\n#define cerr cout\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename A>void __print(const A &x);\ntemplate <typename A, typename B>void __print(const pair<A, B> &p);\ntemplate <typename... A>void __print(const tuple<A...> &t);\ntemplate <typename T>void __print(stack<T> s);\ntemplate <typename T>void __print(queue<T> q);\ntemplate <typename T, typename... U>void __print(priority_queue<T, U...> q);\ntemplate <typename A>void __print(const A &x) {bool first = true;cerr << '{';for (const auto &i : x) {    cerr << (first ? \"\" : \",\"), __print(i);    first = false;}cerr << '}';}\ntemplate <typename A, typename B>void __print(const pair<A, B> &p) {cerr << '(';__print(p.first);cerr << ',';__print(p.second);cerr << ')';}\ntemplate <typename... A>void __print(const tuple<A...> &t) {bool first = true;cerr << '(';apply([&first](const auto &...args) { ((cerr << (first ? \"\" : \",\"), __print(args), first = false), ...); }, t);cerr << ')';}\ntemplate <typename T>void __print(stack<T> s) {vector<T> debugVector;while (!s.empty()) {    T t = s.top();    debugVector.push_back(t);    s.pop();}reverse(debugVector.begin(), debugVector.end());__print(debugVector);}\ntemplate <typename T>void __print(queue<T> q) {vector<T> debugVector;while (!q.empty()) {    T t = q.front();    debugVector.push_back(t);    q.pop();}__print(debugVector);}\ntemplate <typename T, typename... U>void __print(priority_queue<T, U...> q) {vector<T> debugVector;while (!q.empty()) {    T t = q.top();    debugVector.push_back(t);    q.pop();}__print(debugVector);}void _print() { cerr << \"]\\n\"; }\ntemplate <typename Head, typename... Tail>void _print(const Head &H, const Tail &...T) {__print(H);if (sizeof...(T))    cerr << \", \";_print(T...);}\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> v(n/2);\n        vector<int> m(1e5+1);\n        for (int i = 0; i < n/2; i++) {\n            v[i] = max({nums[i], k-nums[i], nums[n-i-1], k-nums[n-i-1]});\n            m[abs(nums[i] - nums[n-i-1])]++;\n        }\n        sort(v.begin(), v.end());\n        int ans = INT_MAX;\n        for (int i = 0; i <= k; i++) {\n            int s = 0;\n            int l = lower_bound(v.begin(), v.end(), i) - v.begin();\n            int r = n/2 - l;\n            ans = min(ans, r + l*2 - m[i]);\n            // debug(i, l, r, m[i], ans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488586",
    "subm_id": "1327426930"
}