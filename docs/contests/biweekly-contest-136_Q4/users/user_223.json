{
    "username": "Zobayer_Abedin",
    "submission": "class Solution {\npublic:\n    static const int N = 1e5 + 2;\n    multiset<int> st[N];\n    vector<int> res;\n    \n    void dfs(int u, int pr, vector<vector<int> >& g) {\n        st[u].insert(0);\n        for(int v: g[u]) {\n            if(v == pr) continue;\n            dfs(v, u, g);\n            int d = *st[v].rbegin() + (v % 2 == 0 ? 2 : 1);\n            st[u].insert(d);\n        }\n    }\n    \n    void dfs1(int u, int pr, vector<vector<int> >& g) {\n        // if(st[u].empty()) {\n        //     cout << \"f\" << endl;\n        //     return;\n        // }\n        res[u] = *st[u].rbegin();\n        for(int v: g[u]) {\n            if(v == pr) continue;\n            int d = *st[v].rbegin() + (v % 2 == 0 ? 2 : 1);\n            st[u].erase(st[u].find(d));\n            st[v].insert(*st[u].rbegin() + (u % 2 == 0 ? 2 : 1));\n            \n            dfs1(v, u, g);\n            \n            st[v].erase(st[v].find(*st[u].rbegin() + (u % 2 == 0 ? 2 : 1)));\n            st[u].insert(d);\n            \n        }\n    }\n    vector<int> timeTaken(vector<vector<int>>& in) {\n        int n = in.size();\n        vector<vector<int> > g(n + 2);\n        res = vector<int> (n + 1);\n        for(int i = 0; i < n; i++) {\n            int u = in[i][0], v = in[i][1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        dfs(1, -1, g);\n        dfs1(1, -1, g);\n        return res;\n    }\n};",
    "submit_ts": "1722699654",
    "subm_id": "1343218253"
}