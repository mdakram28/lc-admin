{
    "username": "H-R-2004",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n=circles.size();\n        queue<vector<int>> q;\n        vector<int> vis(n);\n        int tst=1;\n        for(int i=0;i<n;i++)\n        {\n            long long nx=circles[i][0],ny=circles[i][1],nr=circles[i][2];\n            vector<int> tmp={i,(int)nx,(int)ny,(int)nr};\n            if(ny<=nr || (nx-nr<=X && nx+nr>=X))q.push(tmp),vis[i]=1;\n        }\n        while(!q.empty())\n        {\n            vector<int> top=q.front();\n            q.pop();\n            vis[top[0]]=1;\n            long long x=top[1],y=top[2],r=top[3];\n            if(x<=r || (y-r<=Y && y+r>=Y))tst=0;\n            for(int i=0;i<n;i++)\n            {\n                if(i==top[0] || vis[i])continue;\n                int in=top[0];\n                long long x=top[1],y=top[2],r=top[3];\n                long long nx=circles[i][0],ny=circles[i][1],nr=circles[i][2];\n                long long dis=(nx-x)*(nx-x)+(ny-y)*(ny-y);\n                long long rd=(r+nr)*(r+nr);\n                if(rd>=dis)\n                {\n                    q.push({i,(int)nx,(int)ny,(int)nr});\n                    vis[i]=1;\n                }\n            }\n        }\n        if(tst) return true;\n        else return false;\n    }\n};",
    "submit_ts": "1722138991",
    "subm_id": "1335804953"
}