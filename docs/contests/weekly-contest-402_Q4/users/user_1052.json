{
    "username": "baegopayo",
    "submission": "\n/////////////////////////////// Preface ///////////////////////////////\n// utility functions\nusing ll = long long;\nusing ld = long double;\nusing ull = unsigned long long;\n\n// typedef\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef tuple<int, int, int> ti3;\ntypedef tuple<int, int, int, int> ti4;\ntypedef tuple<int, int, int, int, int> ti5;\ntypedef tuple<ll, ll, ll> tll3;\ntypedef tuple<ll, ll, ll, ll> tll4;\ntypedef tuple<ll, ll, ll, ll, ll> tll5;\ntypedef vector<pll> vpll;\ntypedef array<int, 3> ai3;\ntypedef array<ll, 3> all3;\ntypedef array<ll, 4> all4;\ntypedef array<ll, 5> all5;\ntypedef vector<all3> vall3;\ntypedef vector<all4> vall4;\ntypedef vector<all5> vall5;\ntypedef pair<ld, ld> pld;\ntypedef vector<pld> vpld;\ntypedef vector<ld> vld;\ntypedef vector<ll> vll;\ntypedef vector<ull> vull;\ntypedef vector<vll> vvll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<bool> vb;\ntypedef deque<ll> dqll;\ntypedef deque<pll> dqpll;\ntypedef pair<string, string> pss;\ntypedef vector<pss> vpss;\ntypedef vector<string> vs;\ntypedef vector<vs> vvs;\ntypedef unordered_set<ll> usll;\n// typedef unordered_set<pll, PairHash> uspll;\ntypedef unordered_map<ll, ll> umll;\n// typedef unordered_map<pll, ll, PairHash> umpll;\n\n// macros\n#define X first\n#define Y second\n\nvoid _p(int x) { cout << x; }\nvoid _p(long x) { cout << x; }\nvoid _p(long long x) { cout << x; }\nvoid _p(unsigned x) { cout << x; }\nvoid _p(unsigned long x) { cout << x; }\nvoid _p(unsigned long long x) { cout << x; }\nvoid _p(float x) { cout << x; }\nvoid _p(double x) { cout << x; }\nvoid _p(long double x) { cout << x; }\nvoid _p(char x) { cout << '\\'' << x << '\\''; }\nvoid _p(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid _p(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid _p(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <typename A> void _p(const A &x) {\n    bool first = true;\n    cout << '{';\n    for (const auto &i : x) {\n        cout << (first ? \"\" : \",\"), _p(i);\n        first = false;\n    }\n    cout << '}';\n}\ntemplate <typename A, typename B> void _p(const pair<A, B> &p) {\n    cout << '(';\n    _p(p.first);\n    cout << ',';\n    _p(p.second);\n    cout << ')';\n}\ntemplate <typename... A> void _p(const tuple<A...> &t) {\n    bool first = true;\n    cout << '(';\n    apply(\n        [&first](const auto &...args) {\n            ((cout << (first ? \"\" : \",\"), _p(args), first = false), ...);\n        },\n        t);\n    cout << ')';\n}\nvoid _pt(const initializer_list<ll> &t) { _p(tuple(t)); }\ntemplate <typename T> void _p(stack<T> s) {\n    vector<T> debugVector;\n    while (!s.empty()) {\n        T t = s.top();\n        debugVector.push_back(t);\n        s.pop();\n    }\n    reverse(debugVector.begin(), debugVector.end());\n    _p(debugVector);\n}\ntemplate <typename T> void _p(queue<T> q) {\n    vector<T> debugVector;\n    while (!q.empty()) {\n        T t = q.front();\n        debugVector.push_back(t);\n        q.pop();\n    }\n    _p(debugVector);\n}\ntemplate <typename T, typename... U> void _p(priority_queue<T, U...> q) {\n    vector<T> debugVector;\n    while (!q.empty()) {\n        T t = q.top();\n        debugVector.push_back(t);\n        q.pop();\n    }\n    _p(debugVector);\n}\nvoid __p() { cout << \"]\\n\"; }\ntemplate <typename Head, typename... Tail>\nvoid __p(const Head &H, const Tail &...T) {\n    _p(H);\n    if (sizeof...(T))\n        cout << \", \";\n    __p(T...);\n}\n#ifndef ONLINE_JUDGE\n#define debug(...)                                                             \\\n    cout << \"Line:\" << __LINE__ << \" [\" << #__VA_ARGS__ << \"] = [\";            \\\n    __p(__VA_ARGS__);\n#else\n#define debug(...)\n#endif\n\n#define rep(i, m, n) for (ll i = m; i < n; i++)\n\ntemplate <typename T> void _pn(T &&t) { cout << t << \"\\n\"; }\ntemplate <typename T> void _pv(vector<T> v) {\n    ll n = v.size();\n    rep(i, 0, n) {\n        _p(v[i]);\n        if (i + 1 != n)\n            cout << ' ';\n    }\n    cout << endl;\n}\ntemplate <typename T> void _pvv(vector<vector<T>> v) {\n    ll n = v.size();\n    rep(i, 0, n) _pv(v[i]);\n}\ntemplate <typename T> void _pvln(vector<T> v) {\n    ll n = v.size();\n    rep(i, 0, n) cout << v[i] << endl;\n}\n/////////////////////////////// Preface ///////////////////////////////\n\n/*\n1.  ex\n[5,4,8,6]\n[[1,2,2],[1,1,2],[2,1,6]]\n2.  req\n3.  bf\n\n4.  obs\n\n5.  opt\n?   psum\nBIT\n\n6.  impl\n\n7.  ts\n\n*/\nstruct BIT {\n    vector<int> bit;\n    BIT(int max_n) : bit(max_n + 1) {} // max allowed value in the multiset\n    static int lsb(int i) { return i & -i; } // i & ~i + 1\n    int query(int i) {                       // sum from freq[1] to freq[i]\n        int s = 0;\n        while (i > 0) {\n            s += bit[i]; // Add interval\n            i -= lsb(i); // Next interval\n        }\n        return s;\n    }\n    void update(int i, int cnt) {\n        while (i < bit.size()) {\n            bit[i] += cnt;\n            i += lsb(i);\n        }\n    }\n};\n\nbool is_peak(auto &nums, int i) {\n    return i >= 1 && i < nums.size() - 1 && nums[i - 1] < nums[i] &&\n           nums[i] > nums[i + 1];\n}\n\nclass Solution {\n  public:\n    vector<int> countOfPeaks(vector<int> &nums, vector<vector<int>> &queries) {\n        int n = nums.size();\n        BIT bit(n);\n        vector<bool> peaks(n);\n        for (int i = 0; i < n; ++i)\n            if (is_peak(nums, i)) {\n                peaks[i] = true;\n                bit.update(i, 1);\n            }\n        vi ans;\n        for (auto &q : queries) {\n            if (q[0] == 1) {\n                int l = q[1], r = q[2];\n                ans.push_back(max(bit.query(r - 1) - bit.query(l), 0));\n            } else {\n                int i = q[1], v = q[2];\n                nums[i] = v;\n                for (int j = max(i - 1, 0); j <= min(i + 1, n - 1); ++j) {\n                    bool p = is_peak(nums, j);\n                    if (peaks[j] && !p)\n                        bit.update(j, -1);\n                    else if (!peaks[j] && p)\n                        bit.update(j, 1);\n                    peaks[j] = p;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718509113",
    "subm_id": "1289699744"
}