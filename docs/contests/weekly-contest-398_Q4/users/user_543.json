{
    "username": "aypatrl04",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        @cache\n        def dfs(jump, last, cur):\n            res = 0\n            if cur < 0 or cur > k + 1 or (cur == k + 1 and last == 0):\n                return 0\n            if cur == k:\n                res += 1\n\n            if last == 0:\n                res += dfs(jump + 1, 1, cur + self.pow(2, jump))\n            else:\n                res += dfs(jump, 0, cur - 1) + dfs(jump + 1, 1, cur + self.pow(2, jump))\n\n            return res\n\n        return dfs(0, -1, 1)\n\n    def pow(self, x, y):\n        res = 1\n        while y > 0:\n            if y % 2 == 1:\n                res *= x\n            x *= x\n            y //= 2\n        return res\n        ",
    "submit_ts": 1716089186.0
}