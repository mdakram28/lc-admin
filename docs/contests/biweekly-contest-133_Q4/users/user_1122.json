{
    "username": "pein531",
    "submission": "int dp[310][410];\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int mod = 1e9 + 7;\n        unordered_map<int, int> constraints;\n        for(auto& requirement: requirements) {\n            constraints[requirement[0] + 1] = requirement[1];\n        }\n        memset(dp, -1, sizeof(dp));\n        \n        function<int(int, int)> dfs = [&](int i, int rest) {\n            if(rest < 0) return 0;\n            if(i == 0) return rest == 0? 1: 0;\n            if(dp[i][rest] != -1) return dp[i][rest];\n            int cnt = 0;\n            if(constraints.count(i)) {\n                int k = constraints[i];\n                if(rest != k) return 0;\n                for(int j = 1; j <= i; j++) {\n                    cnt = (cnt + dfs(i - 1, k - (i - j))) % mod;\n                }\n            }else {\n                for(int j = 1; j <= i; j++) {\n                    cnt = (cnt + dfs(i - 1, rest - (i - j))) % mod;\n                }\n            }\n            return dp[i][rest] = cnt;\n        };\n        \n        int ans = dfs(n, constraints[n]);\n        return ans;\n    }\n};",
    "submit_ts": "1719071801",
    "subm_id": "1296854469"
}