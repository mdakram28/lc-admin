{
    "username": "yoochun",
    "submission": "class Solution {\npublic:\n    vector<int> numberOfAlternatingGroups(vector<int>& c, vector<vector<int>>& queries) {\n        const int n = c.size();\n        c.push_back(c[0]);\n        set<int> s;\n        for (int i = 0; i < n; ++i) if (c[i] == c[i + 1]) s.insert(i);\n\n        vector<int> res;\n        map<int, int> v;\n        auto cal = [&](int sz) {\n            if (s.empty()) return n;\n            int res = 0;\n            for (auto it = v.lower_bound(sz); it != v.end(); ++it)\n                res += it->second * (it->first - sz + 1);\n            return res;\n        };\n        auto qq = [&](int x, int d) {\n            auto it = v.find(x);\n            if (it == v.end()) v[x] = d;\n            else {\n                if (!(it->second += d)) v.erase(it);\n            }\n        };\n\n        auto diff = [=](int a, int b) {\n            return b > a ? b - a : b + n - a; \n        };\n\n        auto up = [&] (auto it, int d) {\n            if (s.size() == 1) { qq(n , d); return;}\n            auto a = it;\n            auto b = it; ++b;\n            if (a == s.begin()) a = s.end();\n            --a;\n            if (b == s.end()) b = s.begin();\n            qq(diff(*a, *b), -d);\n            qq(diff(*a, *it), d);\n            qq(diff(*it, *b), d);\n        };\n\n        auto check = [&](int i) {\n            if (c[i] == c[i + 1]) {\n                auto it = s.insert(i).first;\n                up(it, 1);\n            } else {\n                auto it = s.find(i);\n                up(it, -1);\n                s.erase(it);\n                if (s.empty()) v.clear();\n            }\n        };\n\n        auto flip = [&](int i) {\n            check(i);\n            check(i == 0 ? n - 1 : i - 1);\n        };\n\n        for (auto it = s.begin(); it!=s.end(); ++it) {\n            auto jt = it; jt++;\n            if (jt == s.end()) jt = s.begin();\n            qq(diff(*it, *jt), 1);\n        };\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                res.push_back(cal(q[1]));\n            } else {\n                int i = q[1], ci = q[2];\n                if (ci != c[i]) {\n                    c[i] = ci;\n                    c[n] = c[0];\n                    flip(i);\n                }\n            }\n        }\n        return res; \n    }\n};",
    "submit_ts": "1722743896",
    "subm_id": "552353474"
}