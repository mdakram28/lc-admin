{
    "username": "ashu_2202",
    "submission": "class UnionFind {\n    vector<int> p,sz;\n    int n;\npublic:\n    UnionFind(int nn){\n        n = nn;\n        p = vector<int>(n);\n        for(int i=0;i<n;i++)\n            p[i] = i;\n        sz = vector<int>(n, 1);\n    }\n    int doFind(int a){\n        if(a != p[a])\n            p[a] = doFind(p[a]);\n        return p[a];\n    }\n    int doUnion(int u, int v){\n        int p1 = doFind(u);\n        int p2 = doFind(v-1);\n        if(p1 == p2) return 0;\n        // cout<<u<<\" \"<<v<<endl<<\"#p :\";\n        // for(int i=0;i<n;i++){\n        //     // cout<<i;\n        //     cout<<p[i]<<\" \";\n        // }\n        // cout<<endl<<\"#sz :\";\n        // for(int i=0;i<n;i++)\n        //     cout<<sz[i]<<\" \";\n        // cout<<endl;\n\n        // cout<<p.size()<<\" \"<<sz.size();\n        int k = p1, cnt=0; //sz[p2]-1;\n        while(k < p2){\n            cout<<k;\n            int tmp = doFind(k);\n            cnt += sz[tmp]-1;\n            p[doFind(k)] = p2;\n            k = tmp+1;\n        }\n\n        // cout<<cnt<<endl;\n        sz[p2] += cnt;\n        sz[p2] = v-u;\n\n        // cout<<\"After \"<<endl<<\"#p :\";\n        // for(int i=0;i<n;i++)\n        //     cout<<p[i]<<\" \";\n        // cout<<endl<<\"#sz :\";\n        // for(int i=0;i<n;i++)\n        //     cout<<sz[i]<<\" \";\n        // cout<<endl;\n        int val = v-u-1-cnt;\n        // cout<<val<<endl;\n        return val;\n    }\n    \n};\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> ans(q.size());\n        UnionFind uf(n);\n        int ed = n-1;\n        for(int i=0;i<q.size();i++){\n            ed -= uf.doUnion(q[i][0], q[i][1]);\n            ans[i] = ed;\n            // cout<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743875",
    "subm_id": "1343801651"
}