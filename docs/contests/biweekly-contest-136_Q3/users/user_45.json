{
    "username": "woruo27",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int n = grid.size(), m = grid.front().size();\n        int res = 0;\n        for (int i = 0; i < n - i - 1; i++) {\n            for (int j = 0; j < m - j - 1; j++) {\n                const int cnt = grid[i][j] + grid[i][m - j - 1] + grid[n - i - 1][j] + grid[n - i - 1][m - j - 1];\n                res += min(cnt, 4 - cnt);\n            }\n        }\n        if (n % 2 == 1 && m % 2 == 1)\n            res += grid[n / 2][m / 2];\n        int tot = 0, cnt = 0;\n        if (n % 2 == 1) {\n            for (int i = 0; i < m - i - 1; i++) {\n                if (grid[n / 2][i] != grid[n / 2][m - i - 1])\n                    tot++;\n                else if (grid[n / 2][i] == 1)\n                    cnt++;\n            }\n        }\n        if (m % 2 == 1) {\n            for (int i = 0; i < n - i - 1; i++) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2])\n                    tot++;\n                else if (grid[i][m / 2] == 1)\n                    cnt++;\n            }\n        }\n        res += tot;\n        if (tot == 0 && cnt % 2 == 1)\n            res += 2;\n        return res;\n    }\n};",
    "submit_ts": "1722696419",
    "subm_id": "552260846"
}