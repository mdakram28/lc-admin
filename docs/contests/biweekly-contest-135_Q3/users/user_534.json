{
    "username": "Oshen",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        c = defaultdict(int)\n        n = len(nums)\n        for i in range(n // 2):\n            c[abs(nums[i] - nums[n - i - 1])] += 1\n        f = defaultdict(lambda: inf)\n        for key, v in c.items():\n            f[v] = min(f[v], key)\n        ans = inf\n        for t in f.values():\n            tans = 0\n            for i in range(n // 2):\n                if abs(nums[i] - nums[n - i - 1]) == t:\n                    continue\n                if k - nums[i] >= t or nums[i] >= t or k - nums[n - i - 1] >= t or nums[n - i - 1] >= t:\n                    tans += 1\n                else:\n                    tans += 2\n            ans = min(ans, tans)\n        return ans",
    "submit_ts": "1721487426",
    "subm_id": "548309896"
}