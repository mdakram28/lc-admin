{
    "username": "LTKJ",
    "submission": "static string operator*(const string &s, int n) {\n    string result;\n    size_t ss = s.size(), sz = n * ss;\n    result.resize(sz);\n    for (size_t i = 0; i < sz; i += ss) {\n        copy(s.begin(), s.end(), result.begin() + i);\n    }\n    return result;\n}\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        switch (k) {\n        case 1: case 3: case 9:\n            return \"9\"s * n;\n        case 2:\n            switch (n) {\n                case 1: return \"8\";\n                case 2: return \"88\";\n                default: return \"8\"s + \"9\"s * (n - 2) + \"8\"s;\n            }\n        case 4:\n            if (n <= 4) {\n                return \"8\"s * n;\n            }\n            return \"88\"s + \"9\"s * (n - 4) + \"88\"s;\n        case 8:\n            if (n <= 6) {\n                return \"8\"s * n;\n            }\n            return \"888\"s + \"9\"s * (n - 6) + \"888\"s;\n        case 5:\n            switch (n) {\n                case 1: return \"5\";\n                case 2: return \"55\";\n                default: return \"5\"s + \"9\"s * (n - 2) + \"5\"s;\n            }\n        case 6:\n            switch (n) {\n                case 1: return \"6\";\n                case 2: return \"66\";\n                default: {\n                    int cnt = (n - 1) / 2 - 1;\n                    string mid((n % 2 == 0) ? \"77\" : \"8\");\n                    return \"8\"s + \"9\"s * cnt + mid + \"9\"s * cnt + \"8\"s;\n                }\n            }\n        case 7:\n            if (n < 2) {\n                return \"7\"s * n;\n            }\n            string result = \"9\"s * n;\n            int rem = 0;\n            for (int i = 0; i < n; i++) {\n                rem = (rem * 10 + 9) % 7;\n            }\n            int r2 = 1;\n            for (int i = 0; i < (n - 1) / 2; i++) {\n                r2 = (r2 * 10) % 7;\n            }\n            if (n % 2 == 0) {\n                r2 = (r2 * 11) % 7;\n            }\n            int num = 9;\n            while (rem != 0) {\n                num--;\n                rem = (rem - r2 + 7) % 7;\n            }\n            result[n / 2] = num + '0';\n            if (n % 2 == 0) {\n                result[n / 2 - 1] = num + '0';\n            }\n            return result;\n        }\n        return \"\";\n    }\n};",
    "submit_ts": "1723951829",
    "subm_id": "1359781043"
}