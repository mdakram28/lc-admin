{
    "username": "hank55663",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        pair<int,int> last[31];\n        for(int i = 0;i<31;i++){\n            last[i]=make_pair(2147483647,-2);\n        }\n        int ans=1e9;\n        for(int i = 0;i<nums.size();i++){\n            int now=nums[i];\n            int xx=i;\n            ans=min(ans,abs(now-k));\n            while(xx!=-1){\n                int Max=-2,val;\n                for(int j = 0;j<31;j++){\n                    if(last[j].second<xx&&last[j].second>Max){\n                        Max=last[j].second;\n                        val=last[j].first;\n                       // printf(\"? %d %d\\n\",Max,val);\n                    }\n                }\n                xx=Max;\n                  //  printf(\"%d %d %d\\n\",xx,i,now);\n                if(Max==-2)break;\n                now&=val;\n             //   printf(\"%d %d\\n\",now,val);\n                ans=min(ans,abs(now-k));\n            \n         //       printf(\"%d %d %d\\n\",xx,i,now);\n            }\n            for(int j = 0;j<31;j++){\n                if(nums[i]&(1<<j));\n                else{\n                    last[j]=make_pair(nums[i],i);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296683.0
}