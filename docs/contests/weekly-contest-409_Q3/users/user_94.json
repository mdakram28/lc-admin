{
    "username": "curdking",
    "submission": "struct SegTree {\n\n    int n;\n    vector<int> d, lazy;\n\n    SegTree() {}\n    SegTree(int n) {\n        this->n = n;\n        d = vector<int> (n * 4 + 5);\n        lazy = vector<int> (n * 4 + 5, -1);\n    }\n\n    void push_down(int p, int l, int r, int m) {\n        if (lazy[p] != -1) {\n            d[p << 1] = lazy[p] * (m - l + 1);\n            d[p << 1 | 1] = lazy[p] * (r - m);\n            lazy[p << 1] = lazy[p];\n            lazy[p << 1 | 1] = lazy[p];\n            lazy[p] = -1;\n        }\n    }\n\n    void change(int p, int l, int r, int ql, int qr, int v) {\n        if (ql <= l && r <= qr) {\n            d[p] = (r - l + 1) * v;\n            lazy[p] = v;\n            return;\n        }\n        int m = l + r >> 1;\n        push_down(p, l, r, m);\n        if (ql <= m) {\n            change(p << 1, l, m, ql, qr, v);\n        }\n        if (qr > m) {\n            change(p << 1 | 1, m + 1, r, ql, qr, v);\n        }\n        d[p] = d[p << 1] + d[p << 1 | 1];\n    }\n\n    int query(int p, int l, int r, int ql, int qr) {\n        if (ql <= l && r <= qr) {\n            return d[p];\n        }\n        int m = l + r >> 1;\n        int res = 0;\n        push_down(p, l, r, m);\n        if (ql <= m) {\n            res += query(p << 1, l, m, ql, qr);\n        }\n        if (qr > m) {\n            res += query(p << 1 | 1, m + 1, r, ql, qr);\n        }\n        return res;\n    }\n\n    void change(int ql, int qr, int v) {\n        change(1, 0, n, ql, qr, v);\n    }\n\n    int query(int ql, int qr) {\n        return query(1, 0, n, ql, qr);\n    }\n\n};\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        SegTree S(n);\n        int m = q.size();\n        vector<int> res(m);\n        S.change(0, n - 1, 1);\n        for (int i = 0; i < m; i++) {\n            int x = q[i][0], y = q[i][1];\n            if (y - x >= 2) {\n                S.change(x + 1, y - 1, 0);\n            }\n            res[i] = S.query(0, n - 1) - 1;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722739926",
    "subm_id": "552328056"
}