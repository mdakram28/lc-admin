{
    "username": "Neal@\u9633\u8c37\u53bf",
    "submission": "class Solution {\npublic:\n  long long maximumValueSum(vector<vector<int>>& board) {\n    const long long inf = 1LL << 60;\n    struct Edge {\n      int fr, to, cap, cost;\n    };\n    vector<Edge> edges;\n    int n = board.size(), m = board[0].size();\n    vector<vector<int>> g(n + m + 4);\n    auto add_edge = [&](int f, int t, int c, int d) {\n      g[f].push_back(edges.size());\n      edges.push_back({f, t, c, d});\n      g[t].push_back(edges.size());\n      edges.push_back({t, f, 0, -d});\n    };\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        add_edge(i, n + j, 1, board[i][j]);\n      }\n    }\n    int src = n + m;\n    int snk = src + 1;\n    for (int i = 0; i < n; ++i) add_edge(src, i, 1, 0);\n    for (int i = 0; i < m; ++i) add_edge(n + i, snk, 1, 0);\n    \n    // for (const auto& e : edges) cout << e.fr << ' ' << e.to << ' ' << e.cap << ' ' << e.cost << endl;\n    // for (int i = 0; i <= snk; ++i) {\n      // for (int j : g[i]) cout << j << ' ';\n      // cout << endl;\n    // }\n    \n    auto augment = [&]() -> long long {\n      vector<long long> d(n + m + 4, -inf);\n      priority_queue<pair<long long, int>> q;\n      vector<int> ref(n + m + 4);\n      q.push({0LL, src});\n      d[src] = 0;\n      while (!q.empty()) {\n        auto curr = q.top();\n        q.pop();\n        if (curr.first < d[curr.second]) continue;\n        for (int i : g[curr.second]) {\n          const auto& e = edges[i];\n          if (e.cap < 1) continue;\n          pair<long long, int> x = {curr.first + e.cost, e.to};\n          if (x.first > d[x.second]) {\n            d[x.second] = x.first;\n            ref[x.second] = i;\n            q.push(x);\n          }\n        }\n      }\n      for (int f = snk; f != src; ) {\n        int i = ref[f];\n        --edges[i].cap;\n        ++edges[i ^ 0x01].cap;\n        // cout << f << \" \" << edges[i].fr << endl;\n        f = edges[i].fr;\n      }\n      return d[snk];\n    };\n    \n    long long ret = 0;\n    for (int i = 0; i < 3; ++i) {\n      ret += augment();\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1723908271",
    "subm_id": "1359145566"
}