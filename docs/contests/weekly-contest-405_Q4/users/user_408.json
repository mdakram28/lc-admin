{
    "username": "jamshedmd1111",
    "submission": "#define ll long long int\n\nconst ll mod = 1e9 + 7;\n \nll power(ll a, ll b, ll m = mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nll invmod(ll a, ll b) {return power(a, b - 2);}\n \nll mAdd(ll a, ll b, ll m = mod) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mMul(ll a, ll b, ll m = mod) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mSub(ll a, ll b, ll m = mod) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mDiv(ll a, ll b, ll m = mod) {a = a % m; b = b % m; return (mMul(a, invmod(b, m), m) + m) % m;}  //only for prime m\n\nclass Solution {\npublic:\n    int minimumCost(string a, vector<string>& v, vector<int>& c) {\n        ll n = a.size();\n        \n        vector<ll> h (n+1);\n\n        ll p = 31;\n\n        vector<ll> pPoweri (n+1, 1);\n        vector<ll> invpPoweri (n+1, 1);\n\n        pPoweri[1] = p;\n        invpPoweri[1] = mDiv(1, p);\n\n        for (ll i = 1; i <= n; i++)\n        {\n            pPoweri[i] = mMul(pPoweri[i-1], p);\n            invpPoweri[i] = mDiv(1, pPoweri[i]);\n\n            h[i] = mAdd(mMul(a[i-1] - 'a' + 1, pPoweri[i]), h[i-1]);\n        }\n        \n        set<ll> lengths;\n        \n        map<ll, ll> m;\n        \n        for(ll j = 0; j<v.size(); j++){\n            string s = v[j];\n            ll t = 0;\n            \n            for(ll i = 1; i<=s.size(); i++){\n                t += mMul(s[i-1] - 'a' + 1, pPoweri[i]);\n                t %= mod;\n            }\n            \n            if(m.count(t)){\n                m[t] = min(m[t], (ll) c[j]);\n            }\n            else{\n                m[t] = c[j];\n            }\n            \n            lengths.insert(s.size());\n        }\n        \n        vector<ll> l;\n        \n        for(auto i:lengths){\n            l.push_back(i);\n        }\n        \n        vector<ll> dp (n + 1, INT_MAX);\n        \n        dp[0] = 0;\n        \n        for(ll i = 1; i<=n; i++){\n            if(dp[i - 1] != INT_MAX){\n                for(auto j:l){\n                    if(i + j - 1 <= n){\n                        ll hash = mMul(h[i+j-1] - h[i - 1], invpPoweri[i - 1]);\n                            \n                        if(m.count(hash)){\n                            dp[i + j - 1] = min(dp[i + j - 1], dp[i - 1] + m[hash]);\n                            dp[i + j - 1] %= mod;\n                        }\n                    }\n                }\n            }\n        }\n        \n        if(dp[n] == INT_MAX){\n            dp[n] = -1;\n        }\n        \n        return dp[n];\n    }\n};",
    "submit_ts": "1720322366",
    "subm_id": "1312347960"
}