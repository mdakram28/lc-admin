{
    "username": "PeteMango",
    "submission": "# segtree template\nclass SegmentTree:\n    def __init__(self, data, func, default):\n        self._data = data\n        self._func = func\n        self._default = default\n        self._size = len(data)\n        self._tree = [default] * (2 * self._size)\n        self._build()\n    \n    def _build(self):\n        for i in range(self._size):\n            self._tree[self._size + i] = self._data[i]\n        for i in range(self._size - 1, 0, -1):\n            self._tree[i] = self._func(self._tree[i * 2], self._tree[i * 2 + 1])\n    \n    def update(self, pos, value):\n        pos += self._size\n        self._tree[pos] = value\n        while pos > 1:\n            pos //= 2\n            self._tree[pos] = self._func(self._tree[pos * 2], self._tree[pos * 2 + 1])\n    \n    def query(self, left, right):\n        left += self._size\n        right += self._size\n        res = self._default\n        while left < right:\n            if left % 2:\n                res = self._func(res, self._tree[left])\n                left += 1\n            if right % 2:\n                right -= 1\n                res = self._func(res, self._tree[right])\n            left //= 2\n            right //= 2\n        return res\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        def is_peak(nums, i):\n            return 0 < i < len(nums) - 1 and nums[i - 1] < nums[i] > nums[i + 1]\n        \n        def initial_peaks(nums):\n            return [1 if is_peak(nums, i) else 0 for i in range(len(nums))]\n\n        peak_counts = initial_peaks(nums)\n        seg_tree = SegmentTree(peak_counts, lambda x, y: x + y, 0)\n        \n        results = []\n        \n        for query in queries:\n            if query[0] == 2:\n                _, index, val = query\n                nums[index] = val\n                for idx in [index - 1, index, index + 1]:\n                    if 0 < idx < len(nums) - 1:\n                        seg_tree.update(idx, 1 if is_peak(nums, idx) else 0)\n            elif query[0] == 1:\n                _, li, ri = query\n                results.append(seg_tree.query(li + 1, ri))\n        \n        return results",
    "submit_ts": 1718508065.0
}