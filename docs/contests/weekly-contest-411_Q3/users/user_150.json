{
    "username": "jgorton500",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        sys.set_int_max_str_digits(max(700, n))\n        if k == 1 or k == 3 or k == 9: return str(1*10**n-1)\n        if k == 2: return '8'+('9'*max((n-2), 0))+('8' if n > 1 else '')\n        if k == 5: return '5'+('9'*max((n-2), 0))+('5' if n > 1 else '')\n        if k == 4: return ('8'*n) if n <= 4 else ('8'*2)+('9'*(n-4))+('8'*2)\n        if k == 6: return '6'*n if n < 3 else '8' + ('9'*((n-3)//2)) + '8' + ('9'*((n-3)//2)) + '8' if n%2 == 1 else '8' + ('9'*((n-4)//2)) + '77' + ('9'*((n-4)//2)) + '8'\n        if k == 7:\n            for mid in range(9, -1, -1):\n                option = '9'*((n-1)//2) + (str(mid)*(2-(n%2))) + '9'*((n-1)//2)\n                if int(option) % 7 == 0: return option\n        if k == 8: return ('8'*n) if n <= 6 else ('8'*3)+('9'*(n-6))+('8'*3)",
    "submit_ts": "1723951644",
    "subm_id": "1359776590"
}