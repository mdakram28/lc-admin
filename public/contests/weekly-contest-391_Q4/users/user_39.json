{
    "username": "htedsv-i",
    "submission": "#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (1000005)\n\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &k);\n\n}\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pii> vx, vy;\n        REP(i,n) {\n            int x=points[i][0], y=points[i][1];\n            vx.push_back({x+y,i});\n            vy.push_back({x-y,i});\n        }\n        sort(vx.begin(),  vx.end());\n        sort(vy.begin(),  vy.end());\n        vector<int> sus;\n        sus.push_back(vx[0].second);\n        sus.push_back(vx.back().second);\n        sus.push_back(vy[0].second);\n        sus.push_back(vy.back().second);\n        int ans = inf;\n        for(int id: sus) {\n            vx.clear(); vy.clear();\n            REP(i,n) if (id!=i){\n                int x=points[i][0], y=points[i][1];\n                vx.push_back({x+y,i});\n                vy.push_back({x-y,i});\n            }\n            sort(vx.begin(),  vx.end());\n            sort(vy.begin(),  vy.end());\n            int tt= max(vx.back().first-vx[0].first, vy.back().first-vy[0].first);\n            mintt(ans, tt);\n        }\n        return ans;\n    }\n};\nint mai1n() {\n//    freopen(\"hash_slinger_input.txt\",\"r\",stdin);\n//    freopen(\"hash_slinger_oo.txt\",\"w\",stdout);\n    int t=1;\n//    ios::sync_with_stdio(false);\n//    cin.tie(0); cout.tie(0);\n//    cin>>t;\n    scanf(\"%d\", &t);\n    REQ(i,t) {\n        fmain(i);\n    }\n    return 0;\n}"
}