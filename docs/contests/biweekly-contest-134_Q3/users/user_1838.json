{
    "username": "lazyninja03",
    "submission": "class Solution {\npublic:\n\nint isPossible(int i, int j, vector<int>&temp){\n    for(int k = i;k<j;k++){\n        if(temp[k]== temp[k+1]){\n            return k;\n        }\n    }\n    return j;\n}\n\nint numberOfAlternatingGroups(std::vector<int>& elems, int k) {\n        int n = elems.size();\n        int p = n + k - 1;\n        std::vector<int> extElems(p);\n        \n        for (int i = 0; i < n; i++) {\n            extElems[i] = elems[i];\n        }\n        \n        for (int i = n; i < p; i++) {\n            extElems[i] = elems[i - n];\n        }\n\n        std::vector<int> altLens(p);\n        int cnt = 1;\n        altLens[0] = 1;\n\n        for (int i = 1; i < p; i++) {\n            if (extElems[i] != extElems[i - 1]) {\n                cnt++;\n            } else {\n                cnt = 1;\n            }\n            altLens[i] = cnt;\n        }\n\n        int ans = 0;\n        for (int i = 0; i < p; i++) {\n            if (altLens[i] >= k) {\n                ans++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720280055",
    "subm_id": "1311775252"
}