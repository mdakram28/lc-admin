{
    "username": "ANKIT_KUMAR516",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& arr, int max_val) {\n        map<int, vector<int>> diffMap;\n        vector<int> auxArray;\n        \n        int n = arr.size();\n        int halfSize = n / 2;\n        \n        for(int idx = 0; idx < halfSize; idx++) {\n            int first = arr[idx];\n            int second = arr[n - idx - 1];\n            int difference = abs(first - second);\n            int maxVal = max({first, second, max_val - first, max_val - second});\n            \n            diffMap[difference].push_back(maxVal);\n            auxArray.push_back(maxVal);\n        }\n        \n        int minChangesRequired = n;\n        sort(auxArray.begin(), auxArray.end());\n        \n        for(auto& entry : diffMap) {\n            int currDiff = entry.first;\n            int pos = lower_bound(auxArray.begin(), auxArray.end(), currDiff) - auxArray.begin();\n            int changesNeeded = pos * 2 + (halfSize - pos);\n            \n            for(auto& value : entry.second) {\n                if(value < currDiff) {\n                    changesNeeded -= 2;\n                } else {\n                    changesNeeded -= 1;\n                }\n            }\n            \n            minChangesRequired = min(minChangesRequired, changesNeeded);\n        }\n        \n        return minChangesRequired;\n    }\n};\n",
    "submit_ts": "1721489374",
    "subm_id": "1327451403"
}