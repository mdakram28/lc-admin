{
    "username": "CIbF1V4HrL",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int[][] a = new int[m+n-2][2];\n        for (int i = 0; i < m - 1; i++) {\n            a[i][0] = 0;\n            a[i][1] = horizontalCut[i];\n        }\n        for (int i = 0; i < n - 1; i++) {\n            a[i+m-1][0] = 1;\n            a[i+m-1][1] = verticalCut[i];\n        }\n        Arrays.sort(a, new Comparator<int[]>() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                return Integer.compare(o2[1], o1[1]);\n            }\n        });\n        long ans = 0;\n        int cnt1 = 0, cnt2 = 0;\n        for (int i = 0; i < m + n - 2; i++) {\n            if (a[i][0] == 0) {\n                ans += (long) a[i][1] * (cnt2 + 1);\n                cnt1++;\n            }else {\n                ans += (long) a[i][1] * (cnt1 + 1);\n                cnt2++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926609",
    "subm_id": "546447317"
}