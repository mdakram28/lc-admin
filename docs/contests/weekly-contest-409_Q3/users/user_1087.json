{
    "username": "vishalsh5117",
    "submission": "class Node { \npublic: \n    int val; \n    Node* next; \n\n    Node() \n    { \n        val = 0; \n        next = NULL; \n    } \n\n    Node(int val) \n    { \n        this->val = val; \n        this->next = NULL; \n    } \n}; \n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<Node*> address(n,NULL);\n        Node* head = new Node(0);\n        address[0] = head;\n        Node* curr = head;\n        for(int i=1; i<n; i++){\n            Node* newNode = new Node(i);\n            address[i] = newNode;\n            curr->next = newNode;\n            curr = newNode;\n        }\n\n        int size = n;\n        cout<<size<<endl;\n        vector<bool> isRejected(n,false);\n        vector<int> ans;\n        for(auto& q:queries){\n            if(isRejected[q[0]] || isRejected[q[1]]){\n            ans.push_back(size-1);\n            continue;\n            }\n\n            int count = 0;\n            int nodeCount = q[0] + 1;\n            Node* temp = address[q[0]] -> next;\n            while(temp && temp!=address[q[1]]){\n                count++;\n                isRejected[nodeCount] = true;\n                temp = temp->next;\n                nodeCount++;\n            }\n\n            size -= count;\n            address[q[0]] -> next = address[q[1]];\n            ans.push_back(size-1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722743994",
    "subm_id": "1343804696"
}