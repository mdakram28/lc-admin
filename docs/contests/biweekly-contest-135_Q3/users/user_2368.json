{
    "username": "tinku_vishnu17",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n=nums.length; int count=Integer.MAX_VALUE;\n        HashMap<Integer,Integer>hs=new HashMap<>();\n        int maxDiff=-1; int max=0;\n        for(int i=0;i<n/2;i++){\n            int num=Math.abs(nums[i]-nums[n-i-1]);\n            if(hs.containsKey(num))hs.put(num,hs.get(num)+1);\n            else hs.put(num,1);\n            if(hs.get(num)>max){\n                max=hs.get(num);\n                maxDiff=num;\n            }\n            else if(hs.get(num)==max){\n                if(num<maxDiff)maxDiff=num;\n            }\n        }\n        PriorityQueue<Pair>pq=new PriorityQueue<>((a,b)->b.freq-a.freq);\n        for(Integer key:hs.keySet()){\n            pq.add(new Pair(hs.get(key),key));\n        }\n        int prev=Integer.MAX_VALUE;\n        while(!pq.isEmpty()){\n            int freq=pq.peek().freq;\n            int ele=pq.peek().ele;\n            pq.poll();\n            int go=solve(nums,k,ele);\n            if(go>prev)break;\n            count=Math.min(count,go);\n            prev=go;\n        }\n        return count;\n    }\n    public int solve(int nums[],int k,int maxDiff){\n        int n=nums.length; int count=0;\n        for(int i=0;i<n/2;i++){\n            int num=Math.abs(nums[i]-nums[n-i-1]);\n            if(num!=maxDiff){\n                boolean flag=false;\n                if(nums[i]>=maxDiff||nums[n-i-1]>=maxDiff)count++;\n                else if(nums[i]<=(k-maxDiff)||nums[n-i-1]<=(k-maxDiff))count++;\n                else count+=2;\n            }\n        }\n        return count;\n    }\n}\nclass Pair{\n    int freq;\n    int ele;\n    Pair(int freq,int ele){\n        this.freq=freq;\n        this.ele=ele;\n    }\n}",
    "submit_ts": "1721489783",
    "subm_id": "1327463646"
}