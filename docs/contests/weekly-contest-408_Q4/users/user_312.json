{
    "username": "harshal_02",
    "submission": "class Solution {\npublic:\n    int solve(vector<vector<int>>&graph,int shuru,int cnt,int cnt2, int n){\n    int len=graph.size();\n    queue<int>q;\n    q.push(shuru);\n    vector<int>v(n+4,0);\n    v[shuru]=1;\n    while(!q.empty()){\n        int upr=q.front();\n        q.pop();\n        for(int it:graph[upr]){\n            if(!v[it]){\n                q.push(it);\n                v[it]=1;\n            }\n        }\n    }\n        if(v[cnt] || v[cnt2]){\n            return true;\n        }\n     else{\n         return false;\n     }\n}\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles){\n        // int n=circles.size();\n         vector<pair<pair<int,int>,int>>vec(circles.size());\n         vector<vector<int>>vec2(circles.size() + 4);\n        int n=circles.size();\n        for(int i=0;i<n;i++){\n            vec[i].first.first=circles[i][0];\n            vec[i].first.second=circles[i][1];\n            vec[i].second=circles[i][2];\n        }\n         for (int i=0;i<n;i++){    \n            if(vec[i].second>=vec[i].first.first){\n                vec2[n].push_back(i);\n                vec2[i].push_back(n);\n            }\n            if(X-vec[i].first.first<=vec[i].second){\n                vec2[n+2].push_back(i);\n                vec2[i].push_back(n+2);\n            }\n            if(vec[i].second>=vec[i].first.second){\n                vec2[n+1].push_back(i);\n                vec2[i].push_back(n+1);\n            }\n            if(Y-vec[i].first.second<=vec[i].second){\n                vec2[n+3].push_back(i);\n                vec2[i].push_back(n+3);\n            }\n            for (int j=i+1;j<n;j++){\n                double dist = sqrt(pow(vec[i].first.first-vec[j].first.first,2) + pow(vec[i].first.second-vec[j].first.second,2));\n                int sum=vec[i].second+vec[j].second;\n                if(sum-dist>=0){\n                    vec2[i].push_back(j);\n                    vec2[j].push_back(i);\n                }\n            }\n        }\n        int ans=0;\n        ans = max(solve(vec2,n,n+1,n+2,n+4),ans); \n        ans = max(solve(vec2,n+3,n+2,n+1,n+4),ans); \n        if(ans){\n            return false;\n        }\n        return true; \n    }\n};",
    "submit_ts": "1722137109",
    "subm_id": "1335754441"
}