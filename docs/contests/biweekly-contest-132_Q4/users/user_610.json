{
    "username": "ard001",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        const int n = nums.size();\n        vector<int> dp(n+1,1);\n        dp[0] = 0 ;\n        map<int,int> lt;\n        for(int i=1;i<=n;++i){\n            int x = lt.contains(nums[i-1]) ? lt[nums[i-1]] : 0;\n            dp[i] = x+1;\n            lt[nums[i-1]] = dp[i];\n        }\n        \n        for(int i=1;i<=k;++i){\n            int _dp = 0;\n            map<int,int> dp2;\n            for(int j=1;j<=n;++j){\n                int now = dp[j];\n                dp[j] = max(dp[j], _dp + 1);\n                dp[j] = max(dp[j], 1 + dp2[nums[j-1]]);\n                _dp = max(_dp , now);\n                dp2[nums[j-1]] = dp[j];\n                \n            }\n        }\n        \n        return *max_element(begin(dp), end(dp));\n    }\n};",
    "submit_ts": "1717860568",
    "subm_id": "1281762044"
}