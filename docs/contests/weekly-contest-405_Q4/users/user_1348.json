{
    "username": "zhouzr96",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        d = {}\n        for word,cost in zip(words,costs):\n            if word in d:\n                d[word] = min(d[word],cost)\n            else:\n                d[word] = cost\n        wordbank = d.keys()\n        n = len(target)\n        dp = [math.inf] * (1+n)\n        dp[0] = 0\n        for i in range(1,n+1):\n            for word in wordbank:\n                lookback = i - len(word)\n                if lookback >= 0 and target[lookback:i] == word:\n                    dp[i] = min(dp[i],dp[lookback] + d[word])\n        return dp[-1] if dp[-1] != math.inf else -1",
    "submit_ts": "1720323690",
    "subm_id": "1312381680"
}