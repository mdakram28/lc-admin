{
    "username": "deepumehra1729",
    "submission": "#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        long long count = 0;\n        std::unordered_map<int, int> andMap;\n        \n        for (int num : nums) {\n            std::unordered_map<int, int> newAndMap;\n            \n            // Each element starts a new subarray\n            newAndMap[num] = 1;\n            if (num == k) count++;\n            \n            // Update map with AND results from previous elements\n            for (const auto& [andResult, frequency] : andMap) {\n                int newAndResult = andResult & num;\n                newAndMap[newAndResult] += frequency;\n                if (newAndResult == k) {\n                    count += frequency;\n                }\n            }\n            andMap = newAndMap;\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720279672",
    "subm_id": "1311760544"
}