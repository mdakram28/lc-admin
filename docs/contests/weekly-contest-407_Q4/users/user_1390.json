{
    "username": "kisuke11",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        arr = [target[i] - nums[i] for i in range(n)]\n        \n        curr = 0\n        diff = 0\n        res = abs(arr[0])\n        diff = res\n        if arr[0] >= 0:\n            curr = 1\n        \n        i = 1\n        while i < n:\n            while True:\n                if arr[i] < 0 and curr == 1:\n                    res += abs(arr[i])\n                    diff = abs(arr[i])\n                    curr = 0\n                    break\n                if arr[i] >= 0 and curr == 0:\n                    res += abs(arr[i])\n                    diff = abs(arr[i])\n                    curr = 1\n                    break\n                if diff >= abs(arr[i]):\n                    diff = abs(arr[i])\n                    break\n                else:\n                    res += abs(arr[i]) - diff\n                    diff = abs(arr[i])\n                    break\n            i += 1\n        \n        return res\n",
    "submit_ts": "1721532794",
    "subm_id": "1327994260"
}