{
    "username": "gwdyxxzl",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        check_points = set()\n\n        \n        def cal_max_dist(points, save=False):\n            nonlocal check_points\n            res = 0\n            for p, q in [[1, 1], [1, -1], [-1, 1], [-1, -1]]:\n                smallest = p * points[0][0] + q * points[0][1]\n                s_idx, m_idx = set(), set()\n                for i in range(len(points)):\n                    cur = p * points[i][0] + q * points[i][1]\n                    if cur - smallest > res:\n                        m_idx = {i}\n                    elif cur - smallest == res:\n                        m_idx.add(i)\n                    res = max(res, cur - smallest)\n                    if cur < smallest:\n                        smallest = cur\n                        s_idx = {i}\n                    elif cur == smallest:\n                        s_idx.add(i)\n                if save:\n                    check_points |= s_idx\n                    check_points |= m_idx\n            return res\n        \n        min_dist = float('inf')\n        cal_max_dist(points, save=True)\n        for i in check_points:\n            removed = points.pop(i)\n            min_dist = min(min_dist, cal_max_dist(points))\n            points.insert(i, removed)\n        return min_dist"
}