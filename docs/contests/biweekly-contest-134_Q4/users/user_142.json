{
    "username": "park6",
    "submission": "class StackQ:\n    def __init__(self):\n        self.st = []\n        self.left = []\n        self.right = []\n        self.mask = (1<<32)-1\n    def push(self, val):\n        self.st.append(val)\n        if self.right:\n            val &= self.right[-1]            \n        self.right.append(val)\n    def pop(self):\n        # print(self.st,self.left,self.right)\n        if not self.left:\n            self.left.append(self.st.pop())\n            self.right.pop()\n            while self.st:\n                self.left.append(self.left[-1]&self.st.pop())\n                self.right.pop()\n        self.left.pop()\n    def get(self):\n        l = self.left[-1] if self.left else self.mask\n        r = self.right[-1] if self.right else self.mask\n        return l&r  \n    def empty(self):\n        return (not self.left) and (not self.right)\n\n\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        q = StackQ()\n        q2 = StackQ()\n        ans = i = j = 0\n        for a in nums:\n            q.push(a)\n            q2.push(a)\n            while q.get() < k:\n                i += 1\n                q.pop()\n            while q2.get() <= k:\n                j += 1\n                q2.pop()\n            ans += j-i\n        return ans \n\n",
    "submit_ts": "1720278163",
    "subm_id": "544561034"
}