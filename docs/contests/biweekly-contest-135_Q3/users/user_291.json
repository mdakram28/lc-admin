{
    "username": "lu-ming-b",
    "submission": "class Solution {\npublic:\n    int fun(vector<int>& nums, int maxm, int k){\n        int n = nums.size();\n        int sum = 0;\n        for(int i = 0; i < n/2; i++){\n            int l = nums[i], r = nums[n-i-1];\n            if(abs(l - r) == maxm) continue;\n            else if(abs(l - r) > maxm) sum++;\n            else{\n                int mi = min(l, r);\n                int ma = max(l, r);\n                if(ma >= maxm || k - mi >= maxm) sum++;\n                else sum += 2;\n            }\n        }\n        return sum;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int>st;\n        int n = nums.size();\n        for(int i = 0; i < n/2; i++){\n            st[abs(nums[i] - nums[n-i-1])]++;\n        }\n        int maxm = 0;\n        vector<pair<int,int>>v;\n        for(auto i : st){\n            v.push_back({i.second, i.first});\n        }\n        sort(v.begin(), v.end(), greater<pair<int,int>>());\n        int ans = fun(nums, v[0].second, k);\n        for(int i = 1; i < v.size(); i++){\n            int times = n/2 - v[i].first;\n            if(times > ans) break;\n            ans = min(ans, fun(nums, v[i].second, k));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487385",
    "subm_id": "548309725"
}