{
    "username": "leolee2020",
    "submission": "class Solution {\npublic:\nint minimumDifference(vector<int> &nums, int k) {\n    int n = nums.size(), l = 0, ans = abs(k - nums[0]);\n    vector<int> b(32);\n    for (int i = 0, x = nums[0]; i < 32; i++) {\n        if (x & 1)\n            ++b[i];\n        x >>= 1;\n    }\n    for (int i = 1; i < n; i++) {\n        int cur = 0;\n        for (int j = 0, x = nums[i]; j < 32; j++) {\n            if (x & 1)\n                ++b[j];\n            x >>= 1;\n        }\n        for (int j = 31; j >= 0; j--) {\n            cur <<= 1;\n            if (b[j] == i - l + 1)\n                cur |= 1;\n        }\n        ans = min(ans, abs(k - cur));\n        while (l < i && cur <= k) {\n            cur = 0;\n            for (int j = 0, x = nums[l++]; j < 32; j++) {\n                if (x & 1)\n                    --b[j];\n                x >>= 1;\n            }\n            for (int j = 31; j >= 0; j--) {\n                cur <<= 1;\n                if (b[j] == i - l + 1)\n                    cur |= 1;\n            }\n            ans = min(ans, abs(k - cur));\n        }\n    }\n\n    return ans;\n}\n};",
    "submit_ts": "1717299652",
    "subm_id": "1274819467"
}