{
    "username": "MohdKaifSheikh7",
    "submission": "class Solution {\nprivate:\n    static const int MODULO = 1'000'000'007;\n\n    long long findCombinations(const vector<int>& values, int index, int val1, int val2, vector<vector<vector<long long>>>& dp) {\n        if (index >= values.size()) return 1;\n        if (dp[index][val1][val2] != -1) return dp[index][val1][val2];\n\n        long long combinations = 0;\n        for (int i = val1; i <= values[index]; i++) {\n            for (int j = val2; j >= 0; j--) {\n                if (i + j == values[index]) {\n                    combinations = (combinations + findCombinations(values, index + 1, i, j, dp)) % MODULO;\n                }\n            }\n        }\n        dp[index][val1][val2] = combinations;\n        return combinations;\n    }\n\npublic:\n    int countOfPairs(vector<int>& values) {\n        int length = values.size();\n        vector<vector<vector<long long>>> dp(length, vector<vector<long long>>(51, vector<long long>(51, -1)));\n\n        return static_cast<int>(findCombinations(values, 0, 0, values[0], dp));\n    }\n};",
    "submit_ts": "1723347158",
    "subm_id": "1351593143"
}