{
    "username": "awesome-hertzffs",
    "submission": "const int N = 1e5 + 10;\n\nint head[N], nex[N << 2], to[N << 1], cnt = 1;\n\nint f[N][2], flag[N][2];\n\nvoid init(int n) {\n  for (int i = 0; i <= n; i++) {\n    head[i] = 0;\n    f[i][0] = f[i][1] = flag[i][0] = flag[i][1] = 0;\n  }\n  cnt = 1;\n}\n\nvoid add(int x, int y) {\n  to[cnt] = y;\n  nex[cnt] = head[x];\n  head[x] = cnt++;\n}\n\nvoid dfs1(int rt, int fa) {\n  for (int i = head[rt]; i; i = nex[i]) {\n    if (to[i] == fa) {\n      continue;\n    }\n    dfs1(to[i], rt);\n    int dis = f[to[i]][0] + 1 + (to[i] % 2 == 0);\n    if (dis >= f[rt][0]) {\n      swap(f[rt][0], dis);\n    }\n    if (dis >= f[rt][1]) {\n      swap(f[rt][1], dis);\n    }\n  }\n}\n\nint calc(int x) {\n  return 1 + (x % 2 == 0);\n}\n\nvoid dfs2(int rt, int fa) {\n  for (int i = head[rt]; i; i = nex[i]) {\n    if (to[i] == fa) {\n      continue;\n    }\n    int t = to[i];\n    int dis = calc(rt);\n    if (flag[rt][0] || f[rt][0] - calc(t) != f[t][0]) {\n      dis += f[rt][0];\n    } else {\n      dis += f[rt][1];\n    }\n    if (dis >= f[t][0]) {\n      swap(f[t][0], dis);\n      flag[t][0] = 1;\n    }\n    if (dis >= f[t][1]) {\n      swap(f[t][1], dis);\n    }\n\n    dfs2(t, rt);\n  }\n}\n\nclass Solution {\n public:\n  vector<int> timeTaken(vector<vector<int>>& edges) {\n    int n = edges.size() + 1;\n    for (const auto &it : edges) {\n      add(it[0], it[1]);\n      add(it[1], it[0]);\n    }\n    dfs1(0, -1);\n    dfs2(0, -1);\n    vector<int> ans(n);\n    for (int i = 0; i < n; i++) {\n      // std::cout << f[i][0] << \" \" << f[i][1] << \"\\n\";\n      ans[i] = max(f[i][0], f[i][1]);\n    }\n    init(n);\n    return ans;\n  }\n};",
    "submit_ts": "1722697887",
    "subm_id": "552268287"
}