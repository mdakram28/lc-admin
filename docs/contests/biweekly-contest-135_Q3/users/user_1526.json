{
    "username": "itsprivate",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        vector<int> v;\n        unordered_map<int,vector<int>> mp;        \n        int n=nums.size();\n        for(int i = 0;i<n/2;i++){\n            v.push_back(max({nums[i],nums[n-i-1],k-nums[i],k-nums[n-i-1]}));\n            mp[abs(nums[i]-nums[n-i-1])].push_back(max({nums[i],nums[n-i-1],k-nums[i],k-nums[n-i-1]}));            \n        }        \n        sort(v.begin(),v.end());    \n        int tot=n;\n        for(const auto &m:mp){\n            int sum= lower_bound(v.begin(),v.end(), m.first)-v.begin();\n            sum= (n/2-sum)+2*sum;\n            for(const auto &p:m.second){\n                if(p>=m.first){\n                    sum-=1;\n                }\n                else{\n                    sum-=2;\n                }\n            }\n            tot = min(tot,sum);\n        }\n        return tot;        \n    }\n};",
    "submit_ts": "1721489884",
    "subm_id": "1327466656"
}