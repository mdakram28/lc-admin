{
    "username": "Sarvagya Sharma",
    "submission": "class Solution {\npublic:\n    int mod_pow(int x, int y, int p) { \n        if(y == 0) return 1;\n        int res = 1;\n        if(y % 2 == 1) res = ((long long)res * x) % p;\n        res = ((long long)res * (mod_pow(((long long)x * x) % p, y / 2, p))) % p;\n        return res;\n    }\n    \n    string largestPalindrome(int n, int k) {\n        cout << boolalpha;\n        int l = n / 2 + n % 2;\n        vector<vector<bool>> dp(l + 1, vector<bool> (k, false)); // dp[i][j] => at index i, with total sum % k == j\n        vector<vector<int>> choice(l + 1, vector<int> (k, 0)); // dp[i][j] => at index i, with total sum % k == j\n        dp[l][0] = true;\n        \n        vector<int> mp(n, 0);\n        for(int i = 0; i < n; i++) {\n            mp[i] = mod_pow(10LL, i, k);\n        }\n        \n        // dp[i][j] => dp[i + 1][(j + x * 10 ^ (n - 1 - i) + x) % k] for all x in [0, 9]\n        for(int i = l - 1; i >= 0; i--) {\n            for(int j = 0; j < k; j++) {\n                for(int digit = 1; digit <= 9; digit++) {\n                    int next_j = ((j + (digit * mp[i]) % k) % k + ((i == l - 1 and n % 2 == 1) ? 0 : (digit * mp[n - i - 1]) % k)) % k;\n                    // cout << i << \" \" << j << \" \" << digit << \" \" << next_j << \" \" << dp[i + 1][next_j] << \"\\n\";\n                    dp[i][j] = dp[i][j] or dp[i + 1][next_j];\n                    if(dp[i + 1][next_j]) choice[i][j] = max(choice[i][j], digit);\n                }\n            }\n        }\n        \n        \n        // for(int i = 0; i <= l; i++) {\n        //     for(int j = 0; j < k; j++) {\n        //         cout << dp[i][j] << \" \";\n        //     }\n        //     cout << \"\\n\";\n        // }\n        \n        string res(n, '_');\n        int i = 0, j = 0;\n        while(i < l) {\n            char c = '0' + choice[i][j];\n            res[i] = c;\n            res[n - i - 1] = c;\n            int digit = choice[i][j];\n            j = ((j + (digit * mp[i]) % k) % k + ((i == l - 1 and n % 2 == 1) ? 0 : (digit * mp[n - i - 1]) % k)) % k;\n            i++;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1723951860",
    "subm_id": "1359781831"
}