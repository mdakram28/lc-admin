{
    "username": "mahavira24",
    "submission": "class Solution {\nprivate:\n    map<long long, long long> prev;\n    vector<vector<int>> B;\n    void buildPrefixBits(vector<int>& nums, int n) {\n        B.resize(n + 1, vector<int> (31));\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 31; j++) {\n                B[i + 1][j] = (nums[i] >> j) & 1;\n                B[i + 1][j] += B[i][j];\n            }\n        }\n    }\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long ans = 0;\n        int n = nums.size();\n        buildPrefixBits(nums, n);\n        for (int i = 0; i < n; i++) {\n            map<long long, long long> latest = {{nums[i], 1}};\n            ans += (nums[i] == k);\n            for (auto &it : prev) {\n                int value = it.first, f = it.second;\n                if ((it.first & nums[i]) - k == 0) ans += it.second;\n                latest[it.first & nums[i]] += it.second;\n            }\n            prev = latest;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279236",
    "subm_id": "1311743091"
}