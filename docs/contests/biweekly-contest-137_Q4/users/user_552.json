{
    "username": "\u5c0f\u590f.",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& a) {\n        int n = a.size();\n        int m = a[0].size();\n        vector<vector<pair<int, int>>> pre(n);\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                pre[i].push_back({a[i][j], j});\n\n                int k = pre[i].size() - 1;\n                while (k > 0 && pre[i][k] > pre[i][k - 1]) {\n                    swap(pre[i][k], pre[i][k - 1]);\n                    k--;\n                }\n\n                if (pre[i].size() > 3) pre[i].pop_back();\n                \n            }\n        }\n\n        long long ans = -3e9;\n        //bool ok = 0;\n        for (int i = 0; i < n - 2; i++) {\n            for (auto &[iv, i_] : pre[i]) {\n                for (int j = i + 1; j < n - 1; j++) {\n                    for (auto &[jv, j_] : pre[j]) {\n                        if (i_ == j_) continue;\n                        for (int k = j + 1; k < n; k++) {\n                            for (auto &[kv, k_] : pre[k]) {\n                                if (i_ == k_ || j_ == k_) continue;\n                                //ok = 1;\n                                ans = max(ans, 1ll * iv + jv + kv);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723910220",
    "subm_id": "556340189"
}