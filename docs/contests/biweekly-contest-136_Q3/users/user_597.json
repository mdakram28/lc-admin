{
    "username": "21bce118",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), cost1 = 0, cost = 0, m = grid[0].size(), ct1 = 0;\n        for(int i=0; i<n/2; ++i)\n        {\n            for(int j=0; j<m/2; ++j)\n            {\n                int ct1 = grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j] + grid[n-1-i][m-1-j];\n                int ct0 = 4 - ct1;\n                cost += min(ct1,ct0);\n            }\n        }\n        if(m%2)\n        {\n            for(int i=0; i<n/2; ++i)\n            {\n                if(grid[i][m/2] != grid[n-1-i][m/2])\n                    ++cost1;\n                if(grid[i][m/2] == 1 && grid[i][m/2] == grid[n-1-i][m/2])\n                ct1 += grid[i][m/2];\n            }\n        }\n        if(n%2)\n        {\n            for(int i=0; i<m/2; ++i)\n            {\n                if(grid[n/2][i] != grid[n/2][m-i-1])\n                    ++cost1;\n                if(grid[n/2][i] == 1 && grid[n/2][i] == grid[n/2][m-i-1])\n                ct1 += grid[n/2][i];\n            }\n        }\n        if(ct1%2 && cost1 == 0)\n            cost += 2;\n        if(n%2 && m%2)\n            cost += grid[n/2][m/2];\n        return cost+cost1;\n    }\n};",
    "submit_ts": "1722697905",
    "subm_id": "1343163114"
}