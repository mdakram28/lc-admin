{
    "username": "heal",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> c(n + 1);\n        auto update = [&](int i, int dlt) {\n            for (; i <= n; i += i & -i) c[i] += dlt;\n        };\n        auto query = [&](int i) {\n            int ret = 0;\n            for (; i; i -= i & -i) ret += c[i];\n            return ret;\n        };\n        for (int i = 2; i < n; i++) {\n            if (nums[i-2] < nums[i-1] && nums[i-1] > nums[i]) update(i, +1);\n        }\n        vector<int> ret;\n        for (auto q: queries) {\n            if (q[0] == 1) {\n                int l = q[1] + 1, r = q[2] + 1;\n                int x = 0;\n                if (r - l + 1 >= 3) {\n                    x = query(r - 1) - query(l);\n                }\n                ret.emplace_back(x);\n            } else {\n                int j = q[1] + 1, v = q[2];\n                for (int i = j - 1; i <= j + 1; i++) {\n                    if (1 < i && i < n && nums[i-2] < nums[i-1] && nums[i-1] > nums[i]) update(i, -1); \n                }\n                nums[j-1] = v;\n                for (int i = j - 1; i <= j + 1; i++) {\n                    if (1 < i && i < n && nums[i-2] < nums[i-1] && nums[i-1] > nums[i]) update(i, +1);\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1718505931.0
}