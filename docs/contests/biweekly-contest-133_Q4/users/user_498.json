{
    "username": "Shreehari_S",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        limit = 500\n\n        reqMap = {req[0]+1: req[1] for req in requirements}\n        \n        perm = [[0] * (limit+1) for i in range(n+1)]\n        perm[0][0] = 1\n\n        for ln in range(1, n+1):\n            for inv in range(limit+1):\n                for newPos in range(ln):\n                    prev = inv-newPos\n                    if prev >= 0:\n                        perm[ln][inv] = (perm[ln][inv] + perm[ln-1][prev]) % 1000000007\n\n            if ln in reqMap:\n                targetInv = reqMap[ln]\n                for inv in range(limit+1):\n                    if inv != targetInv:\n                        perm[ln][inv] = 0\n\n        res=sum(perm[n])%1000000007\n\n        return res\n",
    "submit_ts": "1719070268",
    "subm_id": "1296818781"
}