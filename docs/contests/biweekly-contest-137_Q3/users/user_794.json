{
    "username": "vinson",
    "submission": "class Solution {\npublic:\n        vector<int> vr,vc;\n        int m,n;\n        vector<vector<vector<int>>> g;\n         long long dfs1(int k) {\n            if(k == 0) return 0;\n            long long res = -1e17;\n            for(int i = 0;i < m;i++) {\n                if(vr[i]==0) {\n                    for(int j = 0;j < 3;j++) {\n                        int val = g[i][j][0];\n                        int y = g[i][j][1];\n                        if(vc[y] == 0) {\n                            vr[i]=1;\n                            vc[y]=1;\n                            res = max(res, dfs1(k-1)+val);\n                            vr[i]=0;\n                            vc[y]=0;                            \n                        }\n                    }\n                }\n            }\n            return res;\n        };  \n        long long dfs2(int k) {\n            if(k == 0) return 0;\n            long long res = -1e17;\n            for(int i = 0;i < n;i++) {\n                if(vc[i]==0) {\n                    for(int j = 0;j < 3;j++) {\n                        int val = g[i][j][0];\n                        int y = g[i][j][1];\n                        if(vr[y] == 0) {\n                            vc[i]=1;\n                            vr[y]=1;\n                            res = max(res, dfs2(k-1)+val);\n                            vc[i]=0;\n                            vr[y]=0;                            \n                        }\n                    }\n                }\n            }\n            return res;\n        };            \n    long long maximumValueSum(vector<vector<int>>& board) {\n        m = board.size(), n = board[0].size();\n        vr.resize(m);\n        vc.resize(n);\n        if(m <= n) {\n            g.resize(m);\n            for(int i = 0;i < m;i++) {\n                for(int j = 0;j < n;j++) {\n                    g[i].push_back({board[i][j],j});\n                }\n            } \n            for(int i = 0;i < m;i++) {\n                sort(g[i].begin(),g[i].end(),greater<vector<int>>());\n            }     \n            return dfs1(3);  \n        } else {\n            g.resize(n);\n            for(int i = 0;i < m;i++) {\n                for(int j = 0;j < n;j++) {\n                    g[j].push_back({board[i][j],i});\n                }\n            } \n            for(int i = 0;i < n;i++) {\n                sort(g[i].begin(),g[i].end(),greater<vector<int>>());\n            }     \n            return dfs2(3);  \n        }    \n    }\n};",
    "submit_ts": "1723907926",
    "subm_id": "556328252"
}