{
    "username": "P_2003_W",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    \n    int numberOfAlternatingGroups(vector<int>& nums, int tp_k) {\n ll n = nums.size(); \n        ll ans = 0; \n          ll k=tp_k;\n        if (k == 1) { \n            return n; \n        } \n \n        ll cur_len = 1; \n        ll idx = 1; \n        while (idx < n + k - 1) { \n            ll mid = idx; \n            ll prev = idx - 1; \n            if (prev >= n) { \n                prev -= n; \n            } \n \n\n            if (mid >= n) { \n                mid -= n; \n            } \n \n            if (nums[mid] != nums[prev]) { \n                ++cur_len; \n            } else { \n                cur_len = 1; \n            } \n  \n            if (cur_len >= k) { \n                ++ans; \n            } \n \n            ++idx; \n        } \n \n        return ans;           \n    \n    }\n};",
    "submit_ts": "1720280214",
    "subm_id": "1311781038"
}