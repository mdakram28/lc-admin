{
    "username": "SanjayM2002",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(), requirements.end());\n        \n        \n        vector<vector<long long>> dp(n + 1, vector<long long>(401, 0));\n        dp[0][0] = 1; \n        \n        int req_idx = 0;\n        for (int i = 1; i <= n; ++i) {\n            vector<long long> prefix_sum(402, 0);\n            \n            for (int j = 0; j <= 400; ++j) {\n                prefix_sum[j + 1] = (prefix_sum[j] + dp[i - 1][j]) % MOD;\n                \n                dp[i][j] = (prefix_sum[j + 1] - prefix_sum[max(0, j - i + 1)] + MOD) % MOD;\n            }\n            \n            if (req_idx < requirements.size() && requirements[req_idx][0] == i - 1) {\n                int required_inv = requirements[req_idx][1];\n                vector<long long> new_dp(401, 0);\n                new_dp[required_inv] = dp[i][required_inv];\n                dp[i] = new_dp;\n                req_idx++;\n            }\n        }\n        \n        long long result = 0;\n        for (int j = 0; j <= 400; ++j) {\n            result = (result + dp[n][j]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1719068205",
    "subm_id": "1296756879"
}