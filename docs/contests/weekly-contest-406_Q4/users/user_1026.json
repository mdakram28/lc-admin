{
    "username": "godAngryOver",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<Pair<Integer,Integer>> pairs = new ArrayList<>();\n        for (Integer cut : horizontalCut) pairs.add(new Pair<>(cut,0));\n        for (Integer cut : verticalCut) pairs.add(new Pair<>(cut,1));\n        pairs.sort((a,b)->{\n            return b.getKey()-a.getKey();\n        });\n        int row = 0;\n        int col = 0;\n        long res = 0;\n        for (int i = 0; i < pairs.size(); i++) {\n            Pair<Integer,Integer> pair = pairs.get(i);\n            if(pair.getValue()==0){\n                res += pair.getKey()*(col+1);\n                row++;\n            }else{\n                res += pair.getKey()*(row+1);\n                col++;\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720925710",
    "subm_id": "546441391"
}