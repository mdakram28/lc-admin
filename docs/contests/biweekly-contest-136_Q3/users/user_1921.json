{
    "username": "mocique",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        /*\n        \u56db\u4e2a\u70b9\u90fd\u8981\u4e00\u81f4\n\n        \u6700\u540e\u7ed3\u679c\u6709\u5982\u4e0b\u60c5\u51b5\uff1a  \u4e00\u4e2a\uff1b \u4e00\u884c\uff1b \u4e00\u5217; \u65e0\n\n        \u524d\u9762\u7ffb\u8f6c\u53d6\u51b3\u4e8e: 1\u591a\u8fd8\u662f0\u591a\uff0c\u54ea\u4e2a\u5c11\uff0c\u7ffb\u54ea\u4e2a\uff0c \u4fdd\u8bc1\u662f4\u7684\u500d\u6570\n        \u6700\u540e\u8ba8\u8bba: \n        1\u4e2a: \u4e3a1 +1\n        \u4e00\u884c: \u4fdd\u8bc14\u7684\u500d\u6570,\n             \u5047\u8bbe\u4e0d\u4e00\u6837\u7684\u6709a\u5bf9(+a)\uff0c\u5269\u4e0b\u4e00\u68371\u7684\u6709\u5076\u6570\u5bf9\uff0c\u53d80\uff0c\u5947\u6570\u5bf9\uff0c\u627e\u4e00\u5bf9\u53d81\n             \u5047\u8bbe\u4e0d\u4e00\u6837\u7684\u67090\u5bf9\uff0c\u5269\u4e0b\u4e00\u6837\u76841\u6709\u5076\u6570\u5bf9\uff0c\u4e0d\u53d8\uff0c\u5947\u6570\u5bf9\uff0c\u627e\u4e00\u5bf91\u53d80\n\n        \u65e0: \u4e0d\u7528\u5904\u7406\n        */\n\n        int m = grid.size();\n        int n = grid[0].size();\n\n        int l = 0;\n        int r = n-1;\n        int t = 0;\n        int b = m-1;\n\n        int ans = 0;\n\n        int corner_same_zero = 0;\n        int corner_same_one = 0;\n        int corner_diff = 0;\n        while(l<r && t<b) {\n            // \u56db\u4e2a\u89d2\n            if (1) {\n                int sum = grid[t][l] + grid[t][r] + grid[b][l] + grid[b][r];\n                if (sum % 4) {\n                    ans += std::min(sum, 4-sum);\n                }\n            }\n\n            // \u6a2a\u7740\n            int ll = l+1;\n            int rr = r-1;\n            while(ll<rr) {\n                int sum = grid[t][ll] + grid[t][rr] + grid[b][ll] + grid[b][rr];\n                if (sum % 4) {\n                    ans += std::min(sum, 4-sum);\n                }\n                ++ll;\n                --rr;\n            }\n            // \u53ef\u80fd\u5269\u4e00\u4e2a\n            if (ll==rr) {\n                // [t,ll] [b,ll]\n                if (grid[t][ll] != grid[b][ll]) ++corner_diff;\n                else if (grid[t][ll] == 0) ++corner_same_zero;\n                else if (grid[t][ll] == 1) ++corner_same_one;\n            }\n\n            // \u7ad6\u7740\n            int tt = t+1;\n            int bb = b-1;\n            while(tt<bb) {\n                int sum = grid[tt][l] + grid[tt][r] + grid[bb][l] + grid[bb][r];\n                if (sum % 4) {\n                    ans += std::min(sum, 4-sum);\n                }\n                ++tt;\n                --bb;\n            }\n            // \u53ef\u80fd\u5269\u4e00\u4e2a\n            if (tt==bb) {\n                if (grid[tt][l] != grid[tt][r]) ++corner_diff;\n                else if (grid[tt][l] == 0) ++corner_same_zero;\n                else if (grid[tt][l] == 1) ++corner_same_one;\n            }\n            ++l;\n            --r;\n            ++t;\n            --b;\n        }\n        // int corner_same_zero = 0; // \n        // int corner_same_one = 0; // \n        // int corner_diff = 0; // \n        if (l==r && t==b) {\n            if (grid[l][t]==1) ++ans;\n        }\n        else if (l==r) {\n            // t->b\n            while(t<b) {\n                if (grid[t][l]!=grid[b][l]) ++corner_diff;\n                else if (grid[t][l]==0) ++corner_same_zero;\n                else if (grid[t][l]==1) ++corner_same_one;\n                ++t;\n                --b;\n            }\n            if (t==b) {\n                if (grid[t][l]==1) ++ans;\n            }\n\n        }\n        else if (t==b) {\n             // t->b\n            while(l<r) {\n                if (grid[t][l]!=grid[t][r]) ++corner_diff;\n                else if (grid[t][l]==0) ++corner_same_zero;\n                else if (grid[t][l]==1) ++corner_same_one;\n                ++l;\n                --r;\n            }\n            if (l==r) {\n                if (grid[t][l]==1) ++ans;\n            }\n\n        }\n        else {\n            // \u4e0d\u7528\u5904\u7406\n        }\n\n        ans += corner_diff;\n        if (corner_same_one % 2) {\n            if (corner_diff==0) ans += 2;\n        }\n\n        return ans;\n\n\n        \n    }\n};",
    "submit_ts": "1722700061",
    "subm_id": "552278226"
}