{
    "username": "Cynxees",
    "submission": "class Solution {\n\n    class TrieNode{\n\n        TrieNode[] children;\n        boolean isWord;\n        int cost = -1;\n\n        TrieNode(){\n\n            isWord = false;\n            children = new TrieNode[26];\n            cost = Integer.MAX_VALUE;\n\n        }\n\n\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        \n        TrieNode root = new TrieNode();\n        int ans = -1;\n\n        for(int i = 0; i < words.length; i++){\n\n            TrieNode current = root;\n\n            for(char c : words[i].toCharArray()){\n\n                if(current.children[c-'a'] == null){\n\n                    current.children[c-'a'] = new TrieNode();\n                }\n\n                current = current.children[c-'a'];\n\n\n            }\n\n            current.isWord = true;\n            current.cost = Math.min(current.cost, costs[i]);\n\n        }\n\n        int n = target.length();\n        int[] dp = new int[n + 1];\n\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; i++) {\n\n            if (dp[i] == Integer.MAX_VALUE) continue;\n\n            TrieNode current = root;\n\n            for (int j = i; j < n; j++) {\n\n                if (current.children[target.charAt(j) - 'a'] == null) break;\n\n                current = current.children[target.charAt(j) - 'a'];\n    \n                if (current.isWord) {\n    \n                    dp[j + 1] = Math.min(dp[j + 1], dp[i] + current.cost);\n    \n                }\n    \n            }\n    \n        }\n\n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n\n\n\n    }\n}",
    "submit_ts": "1720322546",
    "subm_id": "1312352805"
}