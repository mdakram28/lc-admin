{
    "username": "bnlvv",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        total = []\n        diff = []\n        for i, (x, y) in enumerate(points): \n            total.append((x+y, i))\n            diff.append((x-y, i))\n        total.sort()\n        diff.sort()\n        \n        if total[-1][0] - total[0][0] > diff[-1][0] - diff[0][0]: \n            cand = total[0][1], total[-1][1]\n        else: \n            cand = diff[0][1], diff[-1][1]\n        ans = inf \n        for x in cand: \n            val = 0 \n            lo = 0\n            hi = len(points)-1\n            if total[0][1] == x: lo += 1\n            elif total[-1][1] == x: hi -= 1\n            val = max(val, total[hi][0] - total[lo][0])\n            lo = 0\n            hi = len(points)-1\n            if diff[0][1] == x: lo += 1\n            elif diff[-1][1] == x: hi -= 1\n            val = max(val, diff[hi][0] - diff[lo][0])\n            ans = min(ans, val)\n        return ans "
}