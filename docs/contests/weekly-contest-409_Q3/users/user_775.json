{
    "username": "lianglia",
    "submission": "class Solution {\n    vector<int> vec;\n    // set<int> vec;\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        using PII = pair<int, int>;\n        for (int i = 0; i < n; ++i) {\n            vec.push_back(i);\n        }\n        vector<int> res;\n        for (auto& query : queries) {\n            merge(query);\n            res.push_back(vec.size() - 1);\n        }\n        return res;\n    }\n\n    void merge(vector<int>& p) {\n        auto it1 = lower_bound(vec.begin(), vec.end(), p[0]);\n        auto it2 = lower_bound(vec.begin(), vec.end(), p[1]);\n        if (*it1 != p[0]) return;\n        else {\n            auto it2 = lower_bound(vec.begin(), vec.end(), p[1]);\n            if (*it2 != p[1]) return;\n            vec.erase(next(it1), it2);\n            // vec.insert(p[0]);\n            // vec.insert(p[1]);\n        }\n    }\n};",
    "submit_ts": "1722742139",
    "subm_id": "1343761911"
}