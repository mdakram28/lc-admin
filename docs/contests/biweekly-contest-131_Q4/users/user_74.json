{
    "username": "shnirelman",
    "submission": "#define f first\n#define s second\nusing pii = pair<int, int>;\nconst int N = 100'013;\nclass Solution {\npublic:\n    vector<int> t, add;\n    void build(int v, int l, int r) {\n        t[v] = add[v] = 0;\n        if(r - l == 1) {\n            t[v] = l;\n            return;\n        }\n            \n        int m = (l + r) / 2;\n        build(v * 2 + 1, l, m);\n        build(v * 2 + 2, m, r);\n        t[v] = max(t[v * 2 + 1], t[v * 2 + 2]);\n    }\n    void push(int v) {\n        t[v * 2 + 1] += add[v];\n        add[v * 2 + 1] += add[v];\n        t[v * 2 + 2] += add[v];\n        add[v * 2 + 2] += add[v];\n        add[v] = 0;\n    }\n    void upd(int v, int l, int r, int ql, int qr, int qx) {\n        if(l >= qr || r <= ql)\n            return;\n\n        //cout << \"upd \" << l << ' ' << r << ' ' << ql << ' ' << qr << ' ' << qx << endl;\n\n        if(ql <= l && r <= qr) {\n            t[v] += qx;\n            add[v] += qx;\n            return;\n        }\n\n        push(v);\n        int m = (l + r) / 2;\n\n        upd(v * 2 + 1, l, m, ql, qr, qx);\n        upd(v * 2 + 2, m, r, ql, qr, qx);\n        \n        t[v] = max(t[v * 2 + 1], t[v * 2 + 2]);\n        //cout << \"end upd \" << v << ' ' << l << ' ' << r << ' ' << t[v] << endl;\n    }\n\n    int get(int v, int l, int r, int ql, int qr) {\n        if(l >= qr || r <= ql)\n            return 0;\n\n        //cout << \"get \" << l << ' ' << r << ' ' << ql << ' ' << qr << ' ' << t[v] << endl;\n\n        if(ql <= l && r <= qr) {\n            return t[v];\n        }\n\n        push(v);\n        int m = (l + r) / 2;\n\n        return max(\n            get(v * 2 + 1, l, m, ql, qr),\n            get(v * 2 + 2, m, r, ql, qr));\n    }\n    vector<bool> getResults(vector<vector<int>>& a) {\n        int n = a.size() * 4;\n        t.resize(n * 4);\n        add.resize(n * 4);\n        build(0, 0, n);\n\n        //cout << \"fir = \" << get(0, 0, n, 0, 5) << endl;\n\n        set<int> st;\n        st.insert(0);\n        st.insert(n - 1);\n\n        vector<bool> res;\n        for(auto p : a) {\n            if(p[0] == 1) {\n                int x = p[1];\n                auto it = st.upper_bound(x);\n                int rg = *it;\n                int lf = *prev(it);\n                st.insert(x);\n                //cout << \"lf x rg \" << lf << ' ' << x << ' ' << rg << \"  \" << -x + lf << endl;\n                upd(0, 0, n, x + 1, rg + 1, -(x - lf));\n            } else {\n                int x = p[1], sz = p[2];\n                int rs = get(0, 0, n, 0, x + 1);\n                //cout << \"rs = \" << rs << \"  get \" << 0 << ' ' << x + 1 << endl;\n                res.push_back(rs >= sz);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1716649021.0
}