{
    "username": "dheerajkarwasra",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        vector<int> circularArray(n + k - 1);\n\n        // Create a circular array by copying the original array twice\n        for (int i = 0; i < n; ++i) {\n            circularArray[i] = colors[i];\n        }\n        for (int i = 0; i < k - 1; ++i) {\n            circularArray[n + i] = colors[i];\n        }\n        \n        int count = 0;\n        int consecutiveAlternating = 1;\n        \n        // Traverse the circular array and count alternating groups of size k\n        for (int i = 1; i < circularArray.size(); ++i) {\n            if (circularArray[i] != circularArray[i - 1]) {\n                ++consecutiveAlternating;\n            } else {\n                consecutiveAlternating = 1;\n            }\n            if (consecutiveAlternating >= k) {\n                ++count;\n            }\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720281300",
    "subm_id": "1311820127"
}