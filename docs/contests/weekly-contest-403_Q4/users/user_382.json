{
    "username": "LastZhabka",
    "submission": "class Solution {\npublic:\n    int solve_for_two(vector<vector<int>>& grid) {\n        vector<pair<int, int>> points;\n        for(int i = 0; i < grid.size(); i++) {\n            for(int j = 0; j < grid[0].size(); j++) {\n                if(grid[i][j] == 1)\n                    points.push_back(make_pair(i, j));\n            }\n        }\n        if(points.size() < 2)return 100000;\n        int answer = 100000;\n        for(int x = 0; x < grid.size(); x++) {\n            int mnx = 40, mny = 40, mxx = -1, mxy = -1;\n            int mnx2 = 40, mny2 = 40, mxx2 = -1, mxy2 = -1;\n            for(auto u : points) {\n                if(u.first <= x) {\n                    mnx = min(mnx, u.first);\n                    mny = min(mny, u.second);\n                    mxx = max(mxx, u.first);\n                    mxy = max(mxy, u.second);\n                }\n                else {\n                    mnx2 = min(mnx2, u.first);\n                    mny2 = min(mny2, u.second);\n                    mxx2 = max(mxx2, u.first);\n                    mxy2 = max(mxy2, u.second);\n                }\n            }\n            if(mnx2 == 40 || mnx == 40)continue;\n            answer = min(answer, (mxx - mnx + 1) * (mxy - mny + 1) + (mxx2 - mnx2 + 1) * (mxy2 - mny2 + 1));\n        }\n        for(int y = 0; y < grid[0].size(); y++) {\n            int mnx = 40, mny = 40, mxx = -1, mxy = -1;\n            int mnx2 = 40, mny2 = 40, mxx2 = -1, mxy2 = -1;\n            for(auto u : points) {\n                if(u.second <= y) {\n                    mnx = min(mnx, u.first);\n                    mny = min(mny, u.second);\n                    mxx = max(mxx, u.first);\n                    mxy = max(mxy, u.second);\n                }\n                else {\n                    mnx2 = min(mnx2, u.first);\n                    mny2 = min(mny2, u.second);\n                    mxx2 = max(mxx2, u.first);\n                    mxy2 = max(mxy2, u.second);\n                }\n            }\n            if(mnx2 == 40 || mnx == 40)continue;\n            answer = min(answer, (mxx - mnx + 1) * (mxy - mny + 1) + (mxx2 - mnx2 + 1) * (mxy2 - mny2 + 1));\n        }\n        \n        return answer;\n    }\n    \n    int solve(vector<vector<int>> &grid) {\n        int x = 1000000;\n        int y = 1000000;\n        for(int i = 0; i < grid.size(); i++) {\n            for(int j = 0; j < grid[i].size(); j++) {\n                if(grid[i][j] == 1)\n                   x = min(i, x), y = min(j, y);\n            }\n        }\n        int answer = 100000;\n        int memo[40][40] = {{0}};\n        for(int i = x; i < grid.size(); i++) {\n            for(int j = y; j < grid[i].size(); j++) {\n                if((i - x + 1) * (j - y + 1) > answer)continue;\n                int mnx = 100000, mxx = -1;\n                int mny = 100000, mxy = -1;\n                for(int ii = x; ii <= i; ii++) {\n                    for(int jj = y; jj <= j; jj++) {\n                        if(grid[ii][jj] == 1) {\n                            mnx = min(mnx, ii);\n                            mny = min(mny, jj);\n                            mxx = max(mxx, ii);\n                            mxy = max(mxy, jj);\n                        }\n                        memo[ii][jj] = grid[ii][jj];\n                        grid[ii][jj] = 0;\n                    }\n                }\n                int old_answ = answer;\n                if(mnx != 100000 && mxx == i && mxy == j) {\n                    answer = min(answer, (mxy - mny + 1) * (mxx - mnx + 1) + solve_for_two(grid));\n                }\n                for(int ii = x; ii <= i; ii++) {\n                    for(int jj = y; jj <= j; jj++) {\n                        grid[ii][jj] = memo[ii][jj];\n                    }\n                }\n            }\n        }\n            \n        return answer;            \n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        return solve(grid);\n    }\n};",
    "submit_ts": 1719112663.0
}