{
    "username": "hiiragikagami-77",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        int hCut = 0;\n        int vCut = 0;\n        int hIdx = 0;\n        int vIdx = 0;\n        long long ans = 0;\n\n        while (hIdx < m - 1 && vIdx < n - 1) {\n            if (horizontalCut[hIdx] > verticalCut[vIdx]) {\n                ans += 1ll * horizontalCut[hIdx] * (vCut + 1);\n                hIdx++;\n                hCut++;\n            }\n            else {\n                ans += 1ll * verticalCut[vIdx] * (hCut + 1);\n                vIdx++;\n                vCut++;\n            }\n        }\n\n        for (; hIdx < m - 1; hIdx++) {\n            ans += 1ll * horizontalCut[hIdx] * (vCut + 1);\n        }\n        for (; vIdx < n - 1; vIdx++) {\n            ans += 1ll * verticalCut[vIdx] * (hCut + 1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925651",
    "subm_id": "546440977"
}