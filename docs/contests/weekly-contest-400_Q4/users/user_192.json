{
    "username": "cybsbbbb",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        ans = abs(nums[0] - k)\n        \n        def get_val(cur_val, cur_len):\n            res = 0\n            for i in range(32):\n                if cur_val[i] == cur_len:\n                    res += (1 << i)\n            return res\n        \n        cur_val = [0] * 32\n        cur_len = 0\n        right = 0\n        for left in range(n):\n            if right == left:\n                right_val = nums[right]\n                for i in range(32):\n                    if (1 << i) & right_val:\n                        cur_val[i] += 1\n                right += 1\n                cur_len += 1\n            cur_val_int = get_val(cur_val, cur_len)\n            # print(left, right, cur_val_int)\n            ans = min(ans, abs(cur_val_int - k))\n            \n            while right < n and cur_val_int > k:\n                right_val = nums[right]\n                for i in range(32):\n                    if (1 << i) & right_val:\n                        cur_val[i] += 1\n                right += 1\n                cur_len += 1\n                cur_val_int = get_val(cur_val, cur_len)\n                ans = min(ans, abs(cur_val_int - k))\n            \n            # if right > left:\n            #     right -= 1\n            #     right_val = nums[right]\n            #     for i in range(32):\n            #         if (1 << i) & right_val:\n            #             cur_val[i] -= 1\n            \n            left_val = nums[left]\n            for i in range(32):\n                if (1 << i) & left_val:\n                    cur_val[i] -= 1\n            left += 1\n            cur_len -= 1\n        \n        return ans\n\n        ",
    "submit_ts": "1717297443",
    "subm_id": "1274742714"
}