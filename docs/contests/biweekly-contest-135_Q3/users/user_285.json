{
    "username": "user3593Z",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        \n        int n = nums.length;\n        \n        int[] dp = new int[k + 2];\n        \n        for (int i = 0; i < n / 2; i++) {\n            int u = nums[i];\n            int v = nums[n - 1 - i];\n            int diff = Math.abs(u - v);\n            int max = Math.max(k - Math.min(u, v), Math.max(u, v));\n            dp[0]++;\n            dp[max + 1]++;\n            dp[k + 1]-=2;\n            dp[diff]--;\n            dp[diff + 1]++;\n        }\n        \n        int cur = 0;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= k; i++) {\n            cur += dp[i];\n            min = Math.min(min, cur);\n        }\n        \n        return min;\n        \n    }\n}",
    "submit_ts": "1721487980",
    "subm_id": "1327407617"
}