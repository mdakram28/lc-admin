{
    "username": "VSP_9196",
    "submission": "class Solution {\npublic:\n    int dp[100002];\n    int sol(int node,int par,vector<int>adj[]){\n        int ans = 0;\n        int ans1 = 0;\n        int nd = 0;\n        for(auto it:adj[node]){\n            if(it==par)continue;\n            int temp = sol(it,node,adj);\n            if(ans<temp){\n                ans = temp;\n                nd = it;\n            }\n        }\n        for(auto it:adj[node]){\n            if(it==par or it==nd)continue;\n            ans1 = max(ans1,sol(it,node,adj));\n        }\n        dp[node] = ans1+ans+1;\n        return ans+1;\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size()+1;\n        int m = edges2.size()+1;\n        vector<int>adj[n];\n        for(int i=0;i<n-1;i++){\n            int u = edges1[i][0],v = edges1[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        memset(dp,-1,sizeof dp);\n        int p = sol(0,-1,adj);\n        int dia1 = *max_element(dp,dp+100002)-1;\n        vector<int>bdj[m];\n        for(int i=0;i<m-1;i++){\n            int u = edges2[i][0],v = edges2[i][1];\n            bdj[u].push_back(v);\n            bdj[v].push_back(u);\n        }\n        memset(dp,-1,sizeof dp);\n        int q = sol(0,-1,bdj);\n        int dia2 = *max_element(dp,dp+100002)-1;\n        int ans = ceil(dia1/2.0) + ceil(dia2/2.0) + 1;\n        return max(ans,max(dia1,dia2));\n    }\n};",
    "submit_ts": "1719718613",
    "subm_id": "1304421671"
}