{
    "username": "kyuukyuusha",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\n// https://github.com/kth-competitive-programming/kactl/blob/main/content/data-structures/RMQ.h\ntemplate<class T>\nstruct RMQ {\n\tvector<vector<T>> jmp;\n\tRMQ(const vector<T>& V) : jmp(1, V) {\n\t\tfor (int pw = 1, k = 1; pw * 2 <= sz(V); pw *= 2, ++k) {\n\t\t\tjmp.emplace_back(sz(V) - pw * 2 + 1);\n\t\t\trep(j,0,sz(jmp[k]))\n\t\t\t\tjmp[k][j] = jmp[k - 1][j] & jmp[k - 1][j + pw];\n\t\t}\n\t}\n\tT query(int a, int b) {\n\t\tassert(a < b); // or return inf if a == b\n\t\tint dep = 31 - __builtin_clz(b - a);\n\t\treturn jmp[dep][a] & jmp[dep][b - (1 << dep)];\n\t}\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        // prune duplicates\n        vector<int> b;\n        b.push_back(a[0]);\n        for (auto x : a) {\n            if (b.back() != x) {\n                b.push_back(x);\n            }\n        }\n        const int n = b.size();\n        int ans = 2e9;\n        \n        RMQ<int> rmq(b);\n        for (int i = 0; i < n; ++i) {\n            // ans = min(ans, abs(b[i]-k));\n            int lo = i+1;\n            int hi = n;\n            int mid;\n            while (lo <= hi) {\n                mid = lo + (hi - lo) / 2;\n                int x = rmq.query(i, mid);\n                ans = min(ans, abs(x-k));\n                if (x < k) {\n                    hi = mid-1;\n                } else {\n                    lo = mid+1;\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717298603.0
}