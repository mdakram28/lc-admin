{
    "username": "choudharykritik",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>> &grid)\n{\n    int n = grid.size();\n    int m = grid[0].size();\n    int ans = 0;\n    for (int i = 0; i < n / 2; i++)\n    {\n        for (int j = 0; j < m / 2; j++)\n        {\n            int ones = grid[i][j]+grid[n - i - 1][j]+grid[i][m - j - 1]+grid[n - i - 1][m - j - 1];\n            ans += min(ones, 4 - ones);\n        }\n    }\n    int temp = 0;\n    int cnt = 0;\n    if (m%2)\n    {\n        for (int i = 0; i < n / 2; ++i)\n        {\n            if (grid[i][m / 2] != grid[n - i - 1][m / 2])\n            {\n                ans++;\n                temp++;\n            }\n            else if (grid[i][m / 2])\n            {\n                cnt++;\n            }\n            \n        }\n    }\n    if (n%2)\n    {\n        for (int j = 0; j < m / 2; j++)\n        {\n            if (grid[n / 2][j] != grid[n / 2][m - j - 1])\n            {\n                ans++;\n                temp++;\n            }\n            else if (grid[n / 2][j] == 1)\n            {\n                cnt++;\n            }\n            \n        }\n    }\n    if (cnt % 2 != 0&&temp == 0)\n    {\n        ans += 2;\n    }\n    if (grid[n / 2][m / 2] == 1 && n % 2 != 0 && m % 2 != 0)\n    {\n        ans++;\n    }\n\n\n    return ans;\n}\n};",
    "submit_ts": "1722700073",
    "subm_id": "1343230886"
}