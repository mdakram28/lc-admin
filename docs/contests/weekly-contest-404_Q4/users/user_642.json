{
    "username": "saikrishna17394",
    "submission": "class Solution {\n    int getDiameter(int n, vector<vector<int>>& g) {\n        vector<bool> vis(n, false);\n        int maxDist = 0;\n        int maxNode = 0;\n        dfs(0, vis, g, 0, maxDist, maxNode);\n        \n        for (int i = 0; i < n; i++) {\n            vis[i] = false;\n        }\n        dfs(maxNode, vis, g, 0, maxDist, maxNode);\n        \n        return maxDist;\n    }\n    \n    void dfs(int u, vector<bool>& vis, vector<vector<int>>& g, int curDist, int& maxDist, int& maxNode) {\n        vis[u] = true;\n        \n        for (auto v : g[u]) {\n            if (!vis[v]) {\n                if ((curDist + 1) >= maxDist) {\n                    maxDist = curDist + 1;\n                    maxNode = v;\n                }\n                dfs(v, vis, g, curDist + 1, maxDist, maxNode);\n            }\n        }\n    }\n    \npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size() + 1;\n        int m = edges2.size() + 1;\n        \n        vector<vector<int>> g1(n);\n        vector<vector<int>> g2(m);\n        \n        for (auto& edge : edges1) {\n            g1[edge[0]].push_back(edge[1]);\n            g1[edge[1]].push_back(edge[0]);\n        }\n        \n        for (auto& edge : edges2) {\n            g2[edge[0]].push_back(edge[1]);\n            g2[edge[1]].push_back(edge[0]);\n        }\n\n        int d1 = getDiameter(n, g1);\n        int d2 = getDiameter(m, g2);\n        \n        if (d1 == d2) {\n            if (d1 % 2 == 0) {\n                return d1 + 1;\n            }\n            else {\n                return d1 + 2;\n            }\n        }\n        \n        if (d1 < d2) {\n            swap(d1, d2);\n        }\n        \n        if (d1 == (d2 + 1)) {\n            return d1 + 1;\n        }\n        \n        if (d1 == (d2 + 2)) {\n            if (d1 % 2 == 0) {\n                return d1;\n            }\n            else {\n                return d1 + 1;\n            }\n        }\n        \n        return d1;\n    }\n};",
    "submit_ts": 1719719253.0
}