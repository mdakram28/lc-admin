{
    "username": "Kronos_1066",
    "submission": "class Solution {\npublic:\n    vector<int> scst_bfs(vector<vector<int>> &adjList, int total_nodes, int source) {\n        queue<int> q;\n        vector<int> visited(total_nodes + 1, 0);\n        q.push(source);\n        visited[source] = 1;\n\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n\n            for (auto it : adjList[node]) {\n                if (!visited[it]) {\n                    visited[it] = 1;\n                    q.push(it);\n                }\n            }\n        }\n\n        return visited;\n    }\n\n    bool intersection(int cx1, int cy1, int r1, int cx2, int cy2, int r2) {\n        long long dx = cx1 - cx2;\n        long long dy = cy1 - cy2;\n        long long squaredDistance = dx * dx + dy * dy;\n        long long sum_of_radius = (long long)r1 + r2;\n        return (squaredDistance <= sum_of_radius * sum_of_radius);\n    }\n\n    bool canReachCorner(int x, int y, vector<vector<int>>& vec) {\n        int n = vec.size();\n        vector<vector<int>> adjList(n + 4);\n\n        for (int i = 0; i < vec.size(); i++) {\n            int cx1 = vec[i][0];\n            int cy1 = vec[i][1];\n            int r1 = vec[i][2];\n\n            for (int j = i + 1; j < vec.size(); j++) {\n                int cx2 = vec[j][0];\n                int cy2 = vec[j][1];\n                int r2 = vec[j][2];\n\n                if (intersection(cx1, cy1, r1, cx2, cy2, r2)) {\n                    adjList[i].push_back(j);\n                    adjList[j].push_back(i);\n                }\n            }\n        }\n\n        for (int i = 0; i < vec.size(); i++) {\n            int cx1 = vec[i][0];\n            int cy1 = vec[i][1];\n            int r1 = vec[i][2];\n\n            if (cx1 + r1 >= x) {\n                adjList[n + 2].push_back(i);\n                adjList[i].push_back(n + 2);\n            }\n\n            if (cx1 - r1 <= 0) {\n                adjList[n + 1].push_back(i);\n                adjList[i].push_back(n + 1);\n            }\n\n            if (cy1 + r1 >= y) {\n                adjList[n].push_back(i);\n                adjList[i].push_back(n);\n            }\n\n            if (cy1 - r1 <= 0) {\n                adjList[n + 3].push_back(i);\n                adjList[i].push_back(n + 3);\n            }\n        }\n\n        vector<int> visited1 = scst_bfs(adjList, n + 3, n+3);\n        vector<int> visited3 = scst_bfs(adjList, n + 3, n + 2);\n\n        if (visited1[n] || visited1[n + 1] || visited3[n + 1] || visited3[n]) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n};\n",
    "submit_ts": "1722138579",
    "subm_id": "1335794369"
}