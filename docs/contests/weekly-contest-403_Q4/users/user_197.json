{
    "username": "pein531",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> grid;\n    int m, n;\n    int minimumSum(vector<vector<int>>& grid) {\n        this->grid = grid;\n        m = grid.size();\n        n = grid[0].size();\n        int ans = m*n;\n        for(int i = 1; i <= 6; i++) {\n            ans = min(ans, get(i));\n        }\n        return ans;\n    }\n\n    int get(int tp) {\n        int ans = 0x3f3f3f3f;\n        if(tp == 1) {\n            // \u6a2a\u52073\u4e2a\n            for(int i1 = 0; i1 < m - 2; i1++) {\n                for(int i2 = i1 + 1; i2 < m - 1; i2++) {\n                    ans = min(ans, minimumArea(0, i1, 0, n - 1) + minimumArea(i1 + 1, i2, 0, n - 1) + minimumArea(i2 + 1, m - 1, 0, n - 1));\n                }\n            }\n        }else if(tp == 2) {\n            // \u7ad6\u52073\u4e2a\n            for(int j1 = 0; j1 < n - 2; j1++) {\n                for(int j2 = j1 + 1; j2 < n - 1; j2++) {\n                    ans = min(ans, minimumArea(0, m - 1, 0, j1) + minimumArea(0, m - 1, j1 + 1, j2) + minimumArea(0, m - 1, j2 + 1, n - 1));\n                }\n            }\n        }else if(tp == 3) {\n            // \u4e0a\u97622\u4e2a\uff0c\u4e0b\u97621\u4e2a\n            for(int i = 0; i < m - 1; i++) {\n                for(int j = 0; j < n - 1; j++) {\n                    ans = min(ans, minimumArea(0, i, 0, j) + minimumArea(0, i, j + 1, n - 1) + minimumArea(i + 1, m - 1, 0, n - 1));\n                }\n            }\n        }else if(tp == 4) {\n            // \u4e0a\u97621\u4e2a\uff0c\u4e0b\u97622\u4e2a\n            for(int i = 0; i < m - 1; i++) {\n                for(int j = 0; j < n - 1; j++) {\n                    ans = min(ans, minimumArea(i + 1, m - 1, 0, j) + minimumArea(i + 1, m - 1, j + 1, n - 1) + minimumArea(0, i, 0, n - 1));\n                }\n            }\n        }else if(tp == 5) {\n            // \u5de6\u8fb9\u4e24\u4e2a\uff0c\u53f3\u8fb9\u4e00\u4e2a\n            for(int i = 0; i < m - 1; i++) {\n                for(int j = 0; j < n - 1; j++) {\n                    ans = min(ans, minimumArea(0, i, 0, j) + minimumArea(i + 1, m - 1, 0, j) + minimumArea(0, m - 1, j + 1, n - 1));\n                }\n            }\n        }else {\n            // \u5de6\u8fb9\u4e00\u4e2a\uff0c\u53f3\u8fb9\u4e24\u4e2a\n            for(int i = 0; i < m - 1; i++) {\n                for(int j = 0; j < n - 1; j++) {\n                    ans = min(ans, minimumArea(0, m - 1, 0, j) + minimumArea(i + 1, m - 1, j + 1, n - 1) + minimumArea(0, i, j + 1, n - 1));\n                }\n            }\n        }\n        return ans;\n    }\n\n    int minimumArea(int t, int d, int l, int r) {\n        int xmin = 50, xmax = -1, ymin = 50, ymax = -1, cnt = 0;\n        for(int i = t; i <= d; i++) {\n            for(int j = l; j <= r; j++) {\n                if(grid[i][j] == 1) {\n                    cnt++;\n                    xmin = min(xmin, i);\n                    xmax = max(xmax, i);\n                    ymin = min(ymin, j);\n                    ymax = max(ymax, j);\n                }\n            }\n        }\n        if(cnt == 0) return 1000;\n        return (ymax - ymin + 1)*(xmax - xmin + 1);\n    }\n};",
    "submit_ts": 1719112852.0
}