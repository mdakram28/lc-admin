{
    "username": "nhant",
    "submission": "class Solution {\n  static int BIG = 1000000000;\n\n  public int minimumCost(String target, String[] words, int[] costs) {\n    int n = words.length;\n    Trie trie = new Trie();\n    for (int i = 0; i < n; i++) trie.add(words[i], costs[i]);\n    int m = target.length();\n    int[] d = new int[m + 1];\n    Arrays.fill(d, BIG);\n    d[0] = 0;\n    for (int i = 0; i < m; i++) {\n      if (d[i] == BIG) continue;\n      trie.reset();\n      for (int j = i; j < m; j++) {\n        TrieNode v = trie.match(target.charAt(j));\n        if (v != null) {\n          if (v.isLeaf) d[j + 1] = Math.min(d[j + 1], d[i] + v.cost);\n        } else break;\n      }\n    }\n    return d[m] == BIG ? -1 : d[m];\n  }\n\n  static class Trie {\n    TrieNode root;\n    TrieNode cur;\n\n    public Trie() {\n      this.root = new TrieNode();\n      this.cur = root;\n    }\n\n    void add(String s, int cost) {\n      TrieNode v = root;\n      for (int i = 0; i < s.length(); i++) {\n        int c = s.charAt(i) - 'a';\n        if (v.next[c] == null) {\n          v.next[c] = new TrieNode();\n        }\n        v = v.next[c];\n      }\n      v.isLeaf = true;\n      v.cost = Math.min(v.cost, cost);\n    }\n\n    void reset() {\n      cur = root;\n    }\n\n    TrieNode match(char ch) {\n      cur = cur.next[ch - 'a'];\n      return cur;\n    }\n  }\n\n  static class TrieNode {\n    TrieNode[] next;\n    boolean isLeaf;\n    int cost;\n\n    public TrieNode() {\n      next = new TrieNode[26];\n      isLeaf = false;\n      cost = BIG;\n    }\n  }\n}",
    "submit_ts": "1720323284",
    "subm_id": "1312371848"
}