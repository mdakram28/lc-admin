{
    "username": "rishabh0218",
    "submission": "const int sz=1e5+5;\n\nclass Solution {\n   \n\n\npublic:\n\n\n     pair<long long ,long long >v[sz];\n    pair<long long ,long long >tree[4*sz];\nvoid build(int ind, int lo, int hi){\n\n\tif(lo==hi){\n\t\ttree[ind] = v[hi];\n\t\treturn;\n\t}\n\n\tint mid = (lo+hi)/2;\n\n\tbuild(2*ind+1, lo, mid);\n\tbuild(2*ind+2, mid+1, hi);\n\n\ttree[ind] = min(tree[2*ind+1] , tree[2*ind+2]);\n\n}\n\nvoid update(int ind, int lo, int hi, int idx, pair<long long ,long long > val){\n\n\tif(lo==hi){\n\t\ttree[ind] = val;\n\t\treturn;\n\t}\n\n\tint mid = (lo+hi)/2;\n\n\tif(idx<=mid)\n\t\tupdate(2*ind+1, lo, mid, idx, val);\n\telse\n\t\tupdate(2*ind+2, mid+1, hi, idx, val);\n\n\ttree[ind] =min(tree[2*ind+1] , tree[2*ind+2]);\n\n}\n\npair<long long ,long long > query(int ind, int lo, int hi, int L, int R){\n\n\n\tif( R<lo || L>hi )\n\t\treturn {INT_MAX,INT_MAX};\n\n\n\tif( lo>=L && hi<=R )\n\t\treturn tree[ind];\n\n\n\tint mid = (lo+hi)/2;\n\tpair<long long ,long long > leftanswer = query(2*ind+1, lo, mid, L, R);\n\tpair<long long ,long long > rightanswer = query(2*ind+2, mid+1, hi, L, R);\n\n\treturn min(leftanswer, rightanswer);\n\n}\n\n\n    long long  rec(vector<long long >&myarr,int s, int e,int op,int n){\n        if(s>e){\n            return 0;\n        }\n        long long  ans=0;\n        pair<long long ,long long >mp=query(0,0,n-1,s,e);\n        long long  di=mp.first;\n        int ind=mp.second;\n        if(di==op){\n            ans+=rec(myarr,s,ind-1,op,n)+rec(myarr,ind+1,e,op,n);\n        }\n        else{\n            ans+=(di-op)+rec(myarr,s,ind-1,op+(di-op),n)+rec(myarr,ind+1,e,op+(di-op),n);\n        }\n        return ans;\n    }\n\n    long long  solvefun(vector<long long >&nums){\n        \n        int n=nums.size();\n        for(int i=0;i<n;i++){\n            v[i]={nums[i],i};\n        }\n        build(0,0,n-1);\n     \n       return rec(nums,0,n-1,0,n);\n\n    }\n\n    long long minimumOperations(vector<int>& myarr, vector<int>& tar) {\n        int n=myarr.size();\n        vector<vector<long long >>increment;\n        for(int i=0;i<n;i++){\n            vector<long long >temporary;\n            if(myarr[i]>tar[i]){\n                continue;\n            }\n            int j=i;\n            for( j=i;j<n;j++){\n                if(myarr[j]<=tar[j]){\n                    temporary.push_back(tar[j]-myarr[j]);\n                }\n                else{\n                    break;\n                }\n            }\n            i=j;\n            increment.push_back(temporary);\n        }\n         vector<vector<long long >>decrement;\n\n        for(int i=0;i<n;i++){\n            vector<long long >temporary;\n            if(myarr[i]<=tar[i]){\n                continue;\n            }\n            int j=i;\n            for( j=i;j<n;j++){\n                if(myarr[j]>tar[j]){\n                    temporary.push_back(-1*tar[j]+myarr[j]);\n                }\n                else{\n                    break;\n                }\n            }\n            i=j;\n            decrement.push_back(temporary);\n        }\n        long long  ans=0;\n        for(auto it:increment){\n           ans+=solvefun(it);\n        }\n\n       \n        for(auto it:decrement){\n        ans+=solvefun(it);\n        }\n        return ans;\n\n    }\n    \n};",
    "submit_ts": "1721532862",
    "subm_id": "1327995823"
}