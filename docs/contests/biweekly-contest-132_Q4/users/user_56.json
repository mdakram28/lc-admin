{
    "username": "zsq007",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        heaps, lengths = [[0] for _ in range(k+1)], defaultdict(lambda: [0]*(k+1))\n        for num in nums:\n            for j in range(k, 0, -1):\n                cur = min(lengths[num][j], heaps[j-1][0]) - 1\n                lengths[num][j] = cur\n                heappush(heaps[j], cur)\n            lengths[num][0] -= 1\n            heappush(heaps[0], lengths[num][0])\n            # print(heaps)\n        return -min(heaps[j][0] for j in range(k+1))",
    "submit_ts": 1717858994.0
}