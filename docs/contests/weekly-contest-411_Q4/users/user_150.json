{
    "username": "Ruotian_Zhang",
    "submission": "class Solution {\n    long long sum[400005];\n    long long tag[400005];\n    void down(int o, int l,int mid, int r){\n        if(tag[o]>0){\n            _add(o<<1,l,mid,tag[o]);\n            _add(o<<1|1,mid+1,r,tag[o]);\n            tag[o] = 0;\n        }\n    }\n    void _add(int o, int l, int r, int x){\n        sum[o] += (r-l+1)*1LL*x;\n        tag[o] += x;\n    }\n    void add(int o,int l,int r,int L, int R){\n        if(l==L && r==R){\n            _add(o, L, R, 1);\n        }else{\n            int mid = (l+r)/2;\n            down(o, l, mid, r);\n            if(R<=mid) add(o<<1,l,mid,L,R);\n            else if(L>mid) add(o<<1|1,mid+1,r,L,R);\n            else{\n                add(o<<1,l,mid,L,mid);\n                add(o<<1|1,mid+1,r,mid+1,R);\n            }\n            sum[o] = sum[o<<1] + sum[o<<1|1];\n        }\n    }\n    void add(int n, int l,int r){\n        if(r<l) return;\n        // for(int i=l;i<=r;i++) a[i]++;\n        add(1,0,n-1,l,r);\n    }\n    long long ask(int o,int l,int r,int L, int R){\n        if(l==L && r==R) return sum[o];\n        else{\n            int mid=(l+r)/2;\n            down(o, l, mid, r);\n            if(R<=mid) return ask(o<<1,l,mid,L,R);\n            else if(L>mid) return ask(o<<1|1,mid+1,r,L,R);\n            else{\n                return ask(o<<1,l,mid,L,mid) + ask(o<<1|1,mid+1,r,mid+1,R);\n            }\n        }\n    }\n    long long ask(int n, int l, int r){\n        return ask(1,0,n-1,l,r);\n    }\n\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        int id = 0;\n        for(auto& q: queries){\n            q.push_back(id);\n            id++;\n        }\n        map<int, vector<vector<int>>> q_by_l;\n        for(auto q:queries){\n            q_by_l[q[0]].push_back(q);\n        }\n        vector<long long> ans(queries.size());\n        int cnt0 = 0;\n        int cnt1 = 0;\n        int j0 = n-1;\n        int j1 = n-1;\n        for(int i=n-1;i>=0;i--){\n            // while(j0<n && cnt0 + (s[j0]=='0') <= k){\n            //     cnt0 += (s[j0]=='0');\n            //     j0++;\n            // }\n            // while(j1<n && cnt1 + (s[j1]=='1') <= k){\n            //     cnt1 += (s[j1]=='1');\n            //     j1++;\n            // }\n            if(s[i]=='0') cnt0++;\n            else cnt1++;\n\n            while(cnt0>k){\n                cnt0 -= s[j0]=='0';\n                j0--;\n            }\n            while(cnt1>k){\n                cnt1 -= s[j1]=='1';\n                j1--;\n            }\n            add(n, i, max(j0, j1));\n            // printf(\"# add %d %d %d\\n\", i, j0, j1);\n\n            for(auto q: q_by_l[i]){\n                if(q[0] == i){\n                    // printf(\"# ask %d %d %d = %d \\n\", q[0], q[1], q[2], ask(n, q[0], q[1]));\n                    ans[q[2]] = ask(n, q[0], q[1]);\n                }\n            }\n\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1723952980",
    "subm_id": "556414759"
}