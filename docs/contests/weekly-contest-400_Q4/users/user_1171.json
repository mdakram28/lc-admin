{
    "username": "iN_siDious",
    "submission": "class Solution {\npublic:\n    long long minimumDifference(vector<int>& nums, long long k) {\n        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n        long long ans = LLONG_MAX/4;\n        long long n = nums.size();\n        long long mmax = *max_element(nums.begin(), nums.end());\n        long long m = ceil(log2(mmax)) + 2;\n\n        // Create 2D vector with zeroes\n        vector<vector<long long>> bits(n + 1, vector<long long>(m, 0));\n\n        auto find = [&](long long i, long long j) {\n            long long res = (1LL << m) - 1;\n            for (long long idx = 0; idx < m; idx++) {\n                if ((bits[j][idx] - ((i-1>=0)?bits[i - 1][idx]:0)) > 0) {\n                    res ^= (1LL << idx);\n                }\n            }\n            return res;\n        };\n\n        for (long long i = 0; i < n; i++) {\n            if (i>0) bits[i] = bits[i - 1];\n            for (long long idx = 0; idx < m; idx++) {\n                if ((nums[i] & (1LL << idx)) == 0) {\n                    bits[i][idx]++;\n                }\n            }\n        }\n\n        for (long long i = 0; i < n; i++) {\n            if (nums[i] < k) {\n                ans = min(ans, abs(k - nums[i]));\n                continue;\n            }\n\n            // num >= k\n            long long l = i, h = n - 1;\n            while (l < h) {\n                long long mid = (l + h + 1) >> 1;\n                if (find(i, mid) >= k) l = mid;\n                else h = mid - 1;\n            }\n            ans = min(ans, abs(k - find(i, l)));\n\n            // num <= k\n            l = i, h = n - 1;\n            while (l < h) {\n                long long mid = (l + h) >> 1;\n                if (find(i, mid) <= k) h = mid;\n                else l = mid + 1;\n            }\n            ans = min(ans, abs(k - find(i, l)));\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717299546.0
}