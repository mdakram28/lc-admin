{
    "username": "ankushsingh201501",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& sequence, int target) {\n        int length = sequence.size();\n        long long subarrayCount = 0;\n        \n        unordered_map<long long, long long> previousResults;\n\n        for (int index = 0; index < length; ++index) {\n            unordered_map<long long, long long> currentResults; \n\n            if (sequence[index] == target) {\n                ++subarrayCount;\n            }\n            currentResults[sequence[index]] = 1;\n\n            for (auto& [value, frequency] : previousResults) {\n                long long newAndResult = value & sequence[index];\n                if (newAndResult == target) {\n                    subarrayCount += frequency;\n                }\n                currentResults[newAndResult] += frequency;\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return subarrayCount;\n    }\n};\n",
    "submit_ts": "1720280955",
    "subm_id": "1311807988"
}