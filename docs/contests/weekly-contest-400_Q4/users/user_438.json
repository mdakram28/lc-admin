{
    "username": "PrepAcc",
    "submission": "class SegmentTree {\nprivate:\n    vector<int> st;\n    int n;\n\n    int build(int start, int end, int node, vector<int>& nums) {\n        if (start == end) {\n            st[node] = nums[start];\n            return st[node];\n        }\n        int mid = (start + end) / 2;\n        int leftChild = build(start, mid, 2 * node + 1, nums);\n        int rightChild = build(mid + 1, end, 2 * node + 2, nums);\n        st[node] = leftChild & rightChild;\n        return st[node];\n    }\n\n    int query(int start, int end, int l, int r, int node) {\n        if (r < start || l > end) {\n            return INT_MAX;\n        }\n        if (l <= start && r >= end) {\n            return st[node];\n        }\n        int mid = (start + end) / 2;\n        int leftChild = query(start, mid, l, r, 2 * node + 1);\n        int rightChild = query(mid + 1, end, l, r, 2 * node + 2);\n        return leftChild & rightChild;\n    }\n\npublic:\n    SegmentTree(vector<int>& nums) {\n        n = nums.size();\n        st.resize(4 * n);\n        build(0, n - 1, 0, nums);\n    }\n\n    int rangeAND(int l, int r) {\n        return query(0, n - 1, l, r, 0);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        SegmentTree segTree(nums);\n        int minDiff = INT_MAX;\n\n        for (int i = 0; i < n; ++i) {\n            int low = i, high = n - 1;\n            while (low <= high) {\n                int mid = low + (high - low) / 2;\n                int currentAND = segTree.rangeAND(i, mid);\n\n                int currentDiff = abs(k - currentAND);\n                minDiff = min(minDiff, currentDiff);\n\n                if (currentDiff == 0) {\n                    return 0; \n                }\n\n                if (currentAND < k) {\n                    high = mid - 1; \n                } else {\n                    low = mid + 1; \n                }\n            }\n        }\n\n        return minDiff;\n    }\n};",
    "submit_ts": "1717298165",
    "subm_id": "1274769735"
}