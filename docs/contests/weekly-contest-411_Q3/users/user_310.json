{
    "username": "peepeepoopoo",
    "submission": "/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar largestPalindrome = function(n, k) {\n    const rc = [];\n    for (let i = 0, j = 1; i < n; i++) {\n        rc[i] = j;\n        j *= 10;\n        j %= k;\n    }\n    rc.reverse();\n    const t = Math.floor(n / 2);\n    const t_flag = n % 2 === 0;\n    const map = new Map();\n    const helper = (index, t_k) => {\n        if (t_flag && index >= t || (!t_flag && index > t)) {\n            return t_k % k === 0 ? '' : null;\n        }\n        const s = index * 10 + t_k;\n        if (map.has(s)) return map.get(s);\n        const p = index === 0 ? 1 : 0;\n        let rt = null;\n        for (let i = 9; i >= p; i--) {\n            const next_k_1 = ((i % k) * rc[index]) % k;\n            const i_2 = n - index - 1;\n            const next_k_2 = !t_flag && index === t ? 0 : ((i % k) * rc[i_2]) % k;\n            const next = helper(index + 1, (next_k_1 + next_k_2 + t_k) % k);\n            if (next !== null) {\n                rt = i + next;\n                break;\n            }\n        }\n        map.set(s, rt);\n        return rt;\n    };\n    const r = helper(0, 0);\n    let rt = [];\n    for (let i = 0, j = n - 1; i <= j; i++, j--) {\n        rt[i] = r[i];\n        rt[j] = r[i];\n    }\n    return rt.join('');\n};",
    "submit_ts": "1723951307",
    "subm_id": "556404586"
}