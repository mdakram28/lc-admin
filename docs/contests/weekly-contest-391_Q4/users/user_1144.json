{
    "username": "radhika_970",
    "submission": "class Solution {\npublic:\n    vector <int> MaxDist(vector<vector<int> >& A, int N){\n        vector<pair<int,int>> V(N), V1(N);\n        for (int i = 0; i < N; i++) {\n            V[i].first = A[i][0] + A[i][1];\n            V1[i].first = A[i][0] - A[i][1];\n            V[i].second=i;\n            V1[i].second=i;\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        int k1=V.back().first - V.front().first;\n        int k2=V1.back().first - V1.front().first;\n        if(k1 > k2){\n            return {V.back().second,V.front().second};\n        }\n        else if(k1 < k2){\n            return {V1.back().second,V1.front().second};\n        }\n        else{\n            return {V.back().second,V.front().second,V1.back().second,V1.front().second};\n        }\n        \n    }\n    int mxdist(vector<vector<int> >& A, int N){\n        vector<int> V(N), V1(N);\n        for (int i = 0; i < N; i++) {\n            V[i] = A[i][0] + A[i][1];\n            V1[i] = A[i][0] - A[i][1];\n        }\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        return max(V.back() - V.front(), V1.back() - V1.front());\n    }\n        int minimumDistance(vector<vector<int>>& points) {\n              vector <int> possible=MaxDist(points,points.size());\n              int ans=INT_MAX;\n              int n=points.size();\n              for(auto &it:possible){\n                  vector <vector<int>> temp;\n                  for(int i=0;i<n;i++){\n                      if(it==i)continue;\n                      temp.push_back(points[i]);\n                  }\n                  int q=mxdist(temp,temp.size());\n                  ans=min(ans,q);\n              }\n            return ans;\n        }\n};"
}