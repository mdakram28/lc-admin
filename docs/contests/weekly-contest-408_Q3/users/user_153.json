{
    "username": "non_deterministic",
    "submission": "#define lld long long\n#define rep(i,a,n) for(lld i = (a); i <= (n); ++i)\n#define repI(i,a,n) for(int i = (a); i <= (n); ++i)\n#define repD(i,a,n) for(lld i = (a); i >= (n); --i)\n#define repDI(i,a,n) for(int i = (a); i >= (n); --i)\n#define all(c) (c).begin(), (c).end()\n#define sz(a) ((int)a.size())\n\n#define Error(x...) { cout << \"(\" << #x << \")\" << \" = ( \"; printIt(x); }\ntemplate <typename T1> void printIt(T1 t1) { cout << t1 << \" )\" << endl; }\ntemplate <typename T1, typename... T2>\nvoid printIt(T1 t1, T2... t2) { cout << t1 << \" , \"; printIt(t2...); }\n#define errorpair(a) cout<<#a<<\" = ( \"<<((a).first)<<\" , \"<<((a).second)<<\" )\\n\";\n\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();\n        vector<int> nextZero(n + 1, n);\n        lld ans = 0;\n        repD(i, n - 1, 0) {\n            if(s[i] == '0') {\n                nextZero[i] = i;\n            } else {\n                nextZero[i] = nextZero[i + 1];\n            }\n            lld currOnes = 0;\n            lld currZeroes = 0;\n            int ind = i - 1;\n            lld maxZeroAllowed = sqrt(n - i) + 2;\n            while(ind < n) {\n                lld next = nextZero[ind + 1];\n                lld diff = next - ind - 1;\n                lld minNeededOnes = currZeroes * currZeroes;\n                lld lOnes = currOnes + 1;\n                lld rOnes = currOnes + diff;\n\n                lOnes = max(lOnes, minNeededOnes);\n                if(lOnes <= rOnes && rOnes >= minNeededOnes) {\n                    lld len = rOnes - lOnes + 1;\n                    ans += len;\n                }\n                // Error(i, ind, next);\n                // Error(currZeroes, currOnes, lOnes, rOnes, diff, ans);\n                if(next == n) {\n                    break;\n                }\n                currOnes += diff;\n                currZeroes++;\n                if(currOnes >= currZeroes * currZeroes) {\n                    ans++;\n                }\n                // Error(ans);\n                if(currZeroes > maxZeroAllowed) {\n                    break;\n                }\n                ind = next;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722138410",
    "subm_id": "1335790042"
}