{
    "username": "jkmp",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        \n        std::map<std::pair<int, int>, std::vector<int>> freq;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                freq[{min(i, n - 1 - i), min(j, m - 1 - j)}].push_back(grid[i][j]);\n            }\n        }\n        \n        int ans = 0;\n        int rem = 0;\n        int diff = 0, eq = 0;\n        for (auto [_, x] : freq) {\n            int s = x.size();\n            int cnt = std::count(x.begin(), x.end(), 1);\n            \n            if (s == 1) {\n                ans += cnt;\n            } else if (s == 2) {\n                if (cnt == 1) {\n                    diff++;\n                    ans++;\n                } else {\n                    eq++;\n                }\n                rem = (rem + cnt) % 4;\n            } else {\n                if (2 * cnt >= s) {\n                    ans += s - cnt;\n                } else {\n                    ans += cnt;\n                }\n            }\n        }\n        \n        rem = std::min(rem, 4 - rem);\n        if (rem > 0) {\n            if (diff > 0) {\n                rem -= min(rem, diff);\n            }\n            if (rem == 2) {\n                ans += 2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698027",
    "subm_id": "1343167241"
}