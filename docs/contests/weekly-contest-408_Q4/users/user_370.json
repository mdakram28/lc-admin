{
    "username": "mmm_7752",
    "submission": "class Solution {\npublic:\n       int solve(vector<vector<int>>& g, int s, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> vis(n + 4, 0);\n        q.push(s);\n        vis[s] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : g[u]) {\n                if (!vis[v]) {\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n        return vis[t1] || vis[t2];\n    }\n\n    bool canReachCorner(int x, int y, vector<vector<int>>& c) {\n        int nc = c.size();\n        vector<vector<int>> g(nc + 4);\n\n        for (int i = 0; i < nc; ++i) {\n            int cx = c[i][0], cy = c[i][1], r = c[i][2];\n            if (cx <= r) {\n                g[nc].push_back(i);\n                g[i].push_back(nc);\n            }\n            if (x - cx <= r) {\n                g[nc + 2].push_back(i);\n                g[i].push_back(nc + 2);\n            }\n            if (cy <= r) {\n                g[nc + 1].push_back(i);\n                g[i].push_back(nc + 1);\n            }\n            if (y - cy <= r) {\n                g[nc + 3].push_back(i);\n                g[i].push_back(nc + 3);\n            }\n            for (int j = i + 1; j < nc; ++j) {\n                int cx2 = c[j][0], cy2 = c[j][1], r2 = c[j][2];\n                double dist = sqrt(pow(cx - cx2, 2) + pow(cy - cy2, 2));\n                if (r + r2 >= dist) {\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n            }\n        }\n\n        if (solve(g, nc, nc + 1, nc + 2, nc + 4) || solve(g, nc + 3, nc + 2, nc + 1, nc + 4)) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722137209",
    "subm_id": "1335757266"
}