{
    "username": "PankajGhodla",
    "submission": "from sortedcontainers import SortedList\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        \n        def isPeek(i):\n            if 0<=i-1 and i+1<n:\n                return nums[i-1] < nums[i] and nums[i] > nums[i+1]\n            return False\n        sortedList = SortedList([])\n        n = len(nums)\n        for i in range(1, n-1):\n            if nums[i-1] < nums[i] and nums[i] > nums[i+1]:\n                sortedList.add(i)\n        ans = []\n        for i in range(len(queries)):\n            if queries[i][0] == 1:\n                _, left, right = queries[i]\n                l = sortedList.bisect_right(left)\n                r = sortedList.bisect_right(right-1)\n                \n                if r-l > 0: ans.append(r - l)\n                else: ans.append(0)\n            else:\n                _, index, val = queries[i]\n                \n                if isPeek(index-1): sortedList.discard(index-1)\n                if isPeek(index+1): sortedList.discard(index+1)\n                if isPeek(index): sortedList.discard(index)\n                nums[index] = val\n                if isPeek(index-1): sortedList.add(index-1)\n                if isPeek(index+1): sortedList.add(index+1)\n                if isPeek(index): sortedList.add(index)\n        return ans\n                    \n\n                    \n                \n            ",
    "submit_ts": 1718506763.0
}