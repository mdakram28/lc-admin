{
    "username": "Sandeep Polamuri",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n=len(board)\n        m=len(board[0])\n        dp=defaultdict()\n\n        for i in range(n):\n            largest3=nlargest(3,range(m),key=lambda j:board[i][j])\n            board[i]=[(j,board[i][j])  for j in largest3]\n        @cache\n        def dp(i,ban):\n            if i==n:\n                return -inf\n            ans=dp(i+1,ban)\n            for idx,val in board[i]:\n                if (1<<idx)&ban==0:\n                    if ban.bit_count()==2:\n                        ans=max(ans,val)\n                    else:\n                        ans=max(ans,dp(i+1,ban|(1<<idx))+val)\n            return ans\n        return dp(0,0)",
    "submit_ts": "1723908247",
    "subm_id": "1359144522"
}