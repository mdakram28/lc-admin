{
    "username": "tarptaeya",
    "submission": "from math import inf\n\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        @cache\n        def solve(index):\n            if index == n:\n                return 0\n            ans = inf\n            node = trie\n            for i in range(index, n):\n                node = node.get(target[i])\n                if not node:\n                    break\n                elif node.get('$'):\n                    ans = min(ans, node['$'] + solve(i + 1))\n            return ans\n\n        n = len(target)\n        \n        mapping = {w: c for c, w in sorted(zip(costs, words), reverse=True)}\n\n        trie = {}\n        for word in words:\n            node = trie\n            for c in word:\n                if c not in node:\n                    node[c] = {}\n                node = node[c]\n            node['$'] = mapping[word]\n\n        ans = solve(0)\n        if ans == inf:\n            return -1\n        return ans",
    "submit_ts": "1720322020",
    "subm_id": "1312338549"
}