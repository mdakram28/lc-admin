{
    "username": "tyghvh",
    "submission": "public class Solution {\n    public int MaximumLength(int[] nums, int k) {\n        int n = nums.Length;\n        if (n == 0) return 0;\n\n        int[,] dp = new int[n, k + 1];\n        int[] maxLenWithK = new int[k + 1];\n        Dictionary<int, int>[] maxLenWithNum = new Dictionary<int, int>[k + 1];\n        \n        for (int j = 0; j <= k; j++) {\n            maxLenWithK[j] = 0;\n            maxLenWithNum[j] = new Dictionary<int, int>();\n        }\n\n        int maxLength = 1;\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                dp[i, j] = 1;\n\n                if (j > 0) {\n                    dp[i, j] = Math.Max(dp[i, j], 1 + maxLenWithK[j - 1]);\n                }\n\n                if (maxLenWithNum[j].TryGetValue(nums[i], out int prevMax)) {\n                    dp[i, j] = Math.Max(dp[i, j], 1 + prevMax);\n                }\n\n                maxLength = Math.Max(maxLength, dp[i, j]);\n            }\n\n            for (int j = 0; j <= k; j++) {\n                maxLenWithK[j] = Math.Max(maxLenWithK[j], dp[i, j]);\n                if (!maxLenWithNum[j].ContainsKey(nums[i])) {\n                    maxLenWithNum[j][nums[i]] = dp[i, j];\n                } else {\n                    maxLenWithNum[j][nums[i]] = Math.Max(maxLenWithNum[j][nums[i]], dp[i, j]);\n                }\n            }\n        }\n\n        return maxLength;\n    }\n}",
    "submit_ts": 1717861854.0
}