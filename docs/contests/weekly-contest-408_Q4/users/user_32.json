{
    "username": "hank55663",
    "submission": "\n    #define pdd pair<double,double>\n    #define ld long double    \n#define F first\n#define S second\n#define mp make_pair\npdd operator-(pdd p,pdd q){\n        return {p.first-q.first,p.second-q.second};\n    }\npdd operator+(pdd p,pdd q){\n        return {p.first+q.first,p.second+q.second};\n    }\n    ld operator*(pdd p,pdd q){\n        return p.first*q.first+q.second*q.second;\n    }\npdd operator*(double f,pdd q){\n    return {f*q.first,f*q.second};\n}\nclass Solution {\npublic:\n    int f[1005];\n    int val[1005];\n    int Find(int x){\n        if(f[x]==x)return x;\n        return f[x]=Find(f[x]);\n    }\n\n    vector<pdd> interCircle(pdd o1, double r1, pdd o2,\n        double r2) {\n            ld d2 = (o1 - o2) * (o1 - o2);\n            ld d = sqrt(d2);\n            if (d > r1+r2||d<abs(r1-r2)) return {};\n            pdd u = 0.5*(o1+o2) + ((r2*r2-r1*r1)/(2*d2))*(o1-o2);\n            double A = sqrt((r1+r2+d) * (r1-r2+d) * (r1+r2-d) *\n            (-r1+r2+d));\n            pdd v = A / (2*d2) * pdd(o1.S-o2.S, -o1.F+o2.F);\n            return {u+v, u-v};\n        }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        for(int i = 0;i<circles.size();i++){\n            f[i]=i;\n        }\n        for(int i = 0;i<circles.size();i++){\n            for(int j=i+1;j<circles.size();j++){\n                long long x=circles[i][0]-circles[j][0];\n                long long y=circles[i][1]-circles[j][1];\n                long long z=circles[i][2]+circles[j][2];\n                long long x1=circles[i][0]-X,y1=circles[i][1]-Y;\n                long long x2=circles[j][0]-X,y2=circles[j][1]-Y;\n                if(circles[i][0]>circles[j][0])swap(x1,x2),swap(y1,y2);\n                if(x*x+y*y<=z*z){\n                    auto it=interCircle(mp(circles[i][0],circles[i][1]),circles[i][2],\n                                        mp(circles[j][0],circles[j][1]),circles[j][2]);\n                    if(it.size()){\n                     //   printf(\"%.12f %.12f\\n\",it[0].first,it[0].second);\n                    }\n                    if(it.size()&&it[0].first>=0&&it[0].first<=X&&it[0].second>=0&&it[0].second<=Y)\n                    f[Find(i)]=Find(j);//printf(\"%d %d\\n\",i,j);\n                }\n                //if(x*x+y*y<=z*z)printf(\"? %d %d\\n\",i,j);\n            }\n            long long x=circles[i][0],y=circles[i][1],z=circles[i][2];\n            \n            if(x*x+y*y<=z*z)return false;\n            x-=X,y-=Y;\n            if(x*x+y*y<=z*z)return false;\n        }\n        for(int i = 0;i<circles.size();i++){\n            if(circles[i][0]<=circles[i][2])val[Find(i)]|=1;//printf(\"! %d %d\\n\",i,Find(i));\n            if(circles[i][1]>Y){\n                if(circles[i][1]<=circles[i][2])return false;\n            }\n            else{\n                if(circles[i][1]+circles[i][2]>=Y)val[Find(i)]|=1;\n            }\n            if(circles[i][1]<=circles[i][2])val[Find(i)]|=2;//printf(\"? %d %d\\n\",i,Find(i));\n            if(circles[i][0]>X){\n                if(circles[i][0]<=circles[i][2])return false;\n            }\n            else{\n                if(circles[i][0]+circles[i][2]>=X)val[Find(i)]|=2;\n            }\n            if(val[Find(i)]==3)return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722136463",
    "subm_id": "1335735240"
}