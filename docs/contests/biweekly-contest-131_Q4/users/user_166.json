{
    "username": "jojayoh",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n\n        vector<int> obstacles;\n        obstacles.push_back(0);\n        for (auto it : queries) {\n            if (it[0] == 1)\n                obstacles.push_back(it[1]);\n        }\n        obstacles.push_back(100000);\n        sort(obstacles.begin(), obstacles.end());\n        map<int, int> intvls;\n        map<int, int> max_intvl;\n        int cur = 0;\n        for (int i = 1; i < obstacles.size(); i++) {\n            intvls[obstacles[i - 1]] = obstacles[i];\n            if (obstacles[i] - obstacles[i - 1] > cur) {\n                cur = obstacles[i]-obstacles[i-1];\n                max_intvl[obstacles[i - 1]] = obstacles[i];\n            }\n        }\n        vector<bool> ans;\n        for (int i = queries.size() - 1; i >= 0; i--) {\n            if (queries[i][0] == 1) {\n                int x = queries[i][1];\n                int r = intvls[x];\n                intvls.erase(x);\n                int l = prev(intvls.lower_bound(x))->first;\n                intvls[l] = r;\n                auto it = max_intvl.lower_bound(l);\n                while (it != max_intvl.end() &&\n                       it->second - it->first <= r-l) {\n                    auto temp = next(it);\n                    max_intvl.erase(it);\n                    it = temp;\n                }\n                it = max_intvl.lower_bound(l);\n                if (it == max_intvl.begin() ||\n                    prev(it)->second - prev(it)->first <\n                        r-l) {\n                    max_intvl[l] = r;\n                }\n            } else {\n                int x = queries[i][1], sz = queries[i][2];\n                auto it = max_intvl.upper_bound(x - sz);\n                /*\n                cout << i << \", \";\n                if (it != max_intvl.begin())\n                    cout << prev(it)->first << \", \" << prev(it)->second;\n                else\n                    cout << \"asdf\";\n                cout << endl;\n                */\n                ans.push_back(it != max_intvl.begin() &&\n                              prev(it)->second - prev(it)->first >= sz);\n                //for(auto it:max_intvl) cout << it.first << \", \" << it.second << endl;\n\n            }\n        }\n        reverse(ans.begin(), ans.end());\n\n        return ans;\n    }\n};",
    "submit_ts": "1716650584",
    "subm_id": "1267619355"
}