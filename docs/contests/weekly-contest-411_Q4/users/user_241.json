{
    "username": "WYJ20154348",
    "submission": "class Solution {\npublic:\n    int pos[100010];\n    int sum[100010];\n    long long sum1[100010];\n    int n;\n    int check(int mid,int i,int k){\n        int num1=sum[mid]-sum[i-1];\n        int num0=(mid-i+1)-num1;\n        return !(num0>k&&num1>k);\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        n = s.size();\n        for (int i=0;i<=n;i++) pos[i]=-1,sum[i]=0,sum1[i]=0;\n        for (int i=1;i<=n;i++){\n            sum[i]=sum[i-1]+s[i-1]-'0';\n        }\n        for (int i=1;i<=n;i++){\n            int l=i,r=n;\n            while (r-l>1){\n                int mid=(l+r)>>1;\n                if (check(mid,i,k)){\n                    l=mid;\n                } else{\n                    r=mid-1;\n                }\n            }\n            for (int mid=max(l,r);mid>=min(l,r);mid--){\n                if (check(mid,i,k)){\n                    pos[i]=mid;\n                    break;\n                }\n            }\n            if (pos[i]==-1){\n                pos[i]=i-1;\n            }\n        }\n       //for (int i=1;i<=n;i++) cout<<pos[i]<<\" \";\n       // cout<<endl;\n        sum1[0]=0;\n        for (int i=1;i<=n;i++) sum1[i]=sum1[i-1]+pos[i];\n        vector<long long> res;\n        for (auto &it:queries){\n            int L = it[0];\n            int R = it[1];\n            L++;\n            R++;\n            int pos1 = lower_bound(pos+L,pos+R+1,R+1)-pos;\n            //cout<<\"pos1=\"<<pos1<<endl;\n            int num_large = (R+1)-pos1;\n            long long sum2 = sum1[pos1-1] - sum1[L-1];\n            sum2+=(1LL*num_large*R);\n            sum2+=(R-L+1);\n            sum2-=((1LL*L+R)*(R-L+1)/2);\n            res.emplace_back(sum2);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723951757",
    "subm_id": "556407474"
}