{
    "username": "r_us",
    "submission": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <queue>\n#include <deque>\n#include <bitset>\n#include <iterator>\n#include <list>\n#include <limits>\n#include <stack>\n#include <map>\n#include <set>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <limits>\n#include <time.h>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <cstdio>\n#include <cstring>\n   \nusing namespace std;\n   \ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> p32;\ntypedef pair<ll,ll> p64;\ntypedef pair<double,double> pdd;\ntypedef vector<ll> v64;\ntypedef vector<int> v32;\ntypedef vector<vector<int> > vv32;\ntypedef vector<vector<ll> > vv64;\ntypedef vector<vector<p64> > vvp64;\ntypedef vector<p64> vp64;\ntypedef vector<p32> vp32;\nll MOD = 998244353;\ndouble eps = 1e-12;\n#define forn(i,e) for(ll i = 0; i < e; i++)\n#define forsn(i,s,e) for(ll i = s; i < e; i++)\n#define rforn(i,s) for(ll i = s; i >= 0; i--)\n#define rforsn(i,s,e) for(ll i = s; i >= e; i--)\n#define ln \"\\n\"\n#define dbg(x) cout<<#x<<\" = \"<<x<<ln\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define INF 2e18\n#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\n#define all(x) (x).begin(), (x).end()\n#define sz(x) ((ll)(x).size())\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        auto c = colors;\n        for(int i = 0; i < k-1; ++i) {\n            c.push_back(colors[i]);\n        }\n\n        auto n = (ll)(c.size());\n        ll lp = -1;\n        ll rp = -1;\n\n        forn(i, n-1) {\n            if (c[i] != c[i+1]) {\n                lp = i;\n                rp = i+1;\n                break;\n            }\n        }\n        if (lp == -1) return 0;\n\n        int ans = 0;\n        while (rp < n) {\n            while (rp < n && c[rp] != c[rp-1]) rp++;\n            // rp == n or c[rp] == c[rp - 1]\n            if (rp == n) {\n                if (rp - lp >= k) ans += rp - lp - k + 1;\n            } else {\n                if (rp - lp >= k) ans += rp - lp - k + 1;\n                lp = rp;\n                rp++;\n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277621",
    "subm_id": "1311672257"
}