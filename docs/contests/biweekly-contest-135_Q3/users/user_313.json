{
    "username": "lmhhhml2",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        def cost(target):\n            ret = 0\n            for i in range(len(nums) // 2):\n                if abs(nums[i] - nums[n - i - 1]) == target:\n                    continue\n                a, b = nums[i], nums[n - i - 1]\n                if a > b:\n                    a, b = b, a\n                if a + target > k and b - target < 0:\n                    ret += 2\n                else:\n                    ret += 1\n            return ret\n        cnt = collections.Counter()\n        n = len(nums)\n        for i in range(len(nums) // 2):\n            cnt[abs(nums[i] - nums[n - i - 1])] += 1\n        if len(list(cnt.keys())) == 1:\n            return 0\n        tups = sorted(((occ, val) for val, occ in cnt.items()))\n        occ1, occ2 = tups[-1][0], tups[-2][0]\n        candidates = [val for val, occ in cnt.items() if occ == occ1 or occ == occ2]\n        return min(cost(candidate) for candidate in candidates)",
    "submit_ts": "1721487776",
    "subm_id": "1327400736"
}