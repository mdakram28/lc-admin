{
    "username": "Ayushsrivastava22",
    "submission": "class Solution {\n    public long countSubarrays(int[] arr, int target) {\n        int n = arr.length;\n        Map<Long, Long> bitwiseAndMap = new HashMap<>();\n        long result = 0;\n\n        for (int i = 0; i < n; ++i) {\n            Map<Long, Long> newBitwiseAndMap = new HashMap<>();\n            for (Map.Entry<Long, Long> entry : bitwiseAndMap.entrySet()) {\n                long newBitwiseAnd = entry.getKey() & arr[i];\n                newBitwiseAndMap.put(newBitwiseAnd, newBitwiseAndMap.getOrDefault(newBitwiseAnd, 0L) + entry.getValue());\n            }\n            newBitwiseAndMap.put((long) arr[i], newBitwiseAndMap.getOrDefault((long) arr[i], 0L) + 1);\n            bitwiseAndMap = newBitwiseAndMap;\n\n            if (bitwiseAndMap.containsKey((long) target)) {\n                result += bitwiseAndMap.get((long) target);\n            }\n        }\n\n        return result;\n        \n    }\n}",
    "submit_ts": "1720278993",
    "subm_id": "1311732793"
}