{
    "username": "Abhishek Choudhary",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m = len(board)\n        n = len(board[0])\n        dp = [[float('-inf')] * (n + 1) for _ in range(n + 1)]\n        ndp = [[float('-inf')] * (n + 1) for _ in range(n + 1)]\n        maxes = [[float('-inf')] * n for _ in range(n)]\n        for i in range(m - 1, -1, -1):\n            vals = SortedList()\n            for j in range(n):\n                vals.add(board[i][j])\n            for j in range(n):\n                vals.remove(board[i][j])\n                for k in range(j + 1, n):\n                    vals.remove(board[i][k])\n                    maxes[j][k] = vals[-1]\n                    vals.add(board[i][k])\n                vals.add(board[i][j])\n            for f in range(n + 1):\n                mxl = [float('-inf')] * (n + 1)\n                mxr = [float('-inf')] * (n + 1)\n                for j in range(n):\n                    mxl[j + 1] = max(mxl[j], board[i][j] + dp[f][j])\n                    mxr[j + 1] = max(mxr[j], board[i][n - j - 1] + dp[f][n - j - 1])\n                for s in range(n + 1):\n                    ndp[f][s] = dp[f][s]\n                    if f != n and s != n and f != s:\n                        ndp[f][s] = max(ndp[f][s], maxes[min(f, s)][max(f, s)])\n                    if f != n and s == n:\n                        ndp[f][s] = max(ndp[f][s], mxl[f], mxr[n - f - 1])\n            for s in range(n + 1):\n                mval = float('-inf')\n                for j in range(n):\n                    mval = max(mval, board[i][j] + dp[j][s])\n                for f in range(n + 1):\n                    if f == n and s == n:\n                        ndp[f][s] = max(ndp[f][s], mval)\n            dp, ndp = ndp, dp\n        return dp[n][n]",
    "submit_ts": "1723908528",
    "subm_id": "1359156417"
}