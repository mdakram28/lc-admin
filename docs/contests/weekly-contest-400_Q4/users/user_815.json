{
    "username": "shohanur814",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        \n        \n         vector<int>  v,v1;\n        \n        vector<vector<int>>  vec(33),vec1;\n        \n          int  cur=0,index=0;\n        \n        \n          int num;\n        \n          for(int  &  a:nums)\n          {\n                  num=abs(k-a);\n                 v.push_back(num);\n                  \n              \n                num=a;\n                  cur=0;\n              \n                for(int i=0;i<33;i++)\n                {\n                       if(!(num  &  1))\n                             vec[i].push_back(index);\n                    \n                    \n                      if(num>0)\n                            num>>=1;\n                }\n              \n                index++;\n          }\n        \n        \n              for(int i=0;i<nums.size();i++)\n              {\n                  \n                    v1.clear();\n                  vec1.clear();\n                     num=nums[i]; \n                   cur=0;\n                  while(num)\n                {\n                      if(num &  1)\n                      {\n                           v1.push_back(cur);\n                          \n                      }\n                    \n                      num>>=1;\n                     cur++;       \n                }\n                  \n                  \n                    int val,left,right,mid;\n                  \n                    for(int j=0;j<v1.size();j++)\n                    {\n                         val=v1[j];\n                          \n                          left=0,right=vec[val].size()-1,index=-1;\n                        \n                        \n                          while(left<=right)\n                          {\n                              \n                                mid=(left+right)/2;\n                              \n                              \n                                if(vec[val][mid]<=i)\n                                       left=mid+1;\n                              \n                              else   \n                              {\n                                  \n                                  index=vec[val][mid];\n                                    right=mid-1;\n                              }\n                          }\n                        \n                          if(index!=-1)\n                          vec1.push_back({index,val});\n                    }\n                  \n                      \n                  \n                    if(vec1.size()>0)\n                    {\n                          sort(vec1.begin(),vec1.end());\n                        \n                               cur=nums[i];\n                        \n                          for(int j=0;j<vec1.size();j++)\n                          {\n                                   \n                                 if(j>0)\n                                 {\n                                       if(vec1[j][0]!=vec1[j-1][0])\n                                       {\n                                             num=abs(cur-k);\n                                         v.push_back(num);\n                                       }\n                                     \n                                 }\n                              \n                               cur-=(1LL<<vec1[j][1]);\n                          }\n                        \n                           num=abs(cur-k);\n                                         v.push_back(num);\n                        \n                        \n                    }\n                  \n                  \n                          \n                             \n                  \n                  \n              }\n        \n        \n        \n         sort(v.begin(),v.end());\n        \n          return   v[0];\n        \n    }\n};",
    "submit_ts": 1717299429.0
}