{
    "username": "ghj123h",
    "submission": "public class Solution {\n    public long MinimumOperations(int[] nums, int[] target) {\n        int n = nums.Length, p = 0;\n        var a = nums.Zip(target, (a, b) => a - b).ToArray();\n        var s = a.AsSpan();\n        long ans = 0;\n        for (int i = 1; i < n; ++i) {\n            if (1L * a[i] * a[i-1] <= 0) {\n                ans += helper(s.Slice(p, i - p));\n                p = i;\n            }\n        }\n        ans += helper(s.Slice(p, n - p));\n        return ans;\n\n        long helper(Span<int> sp) {\n            int m = sp.Length;\n            long res = Math.Abs(sp[0]);\n            for (int i = 1; i < sp.Length; ++i) {\n                if (Math.Abs(sp[i-1]) < Math.Abs(sp[i])) res += Math.Abs(sp[i]) - Math.Abs(sp[i-1]);\n            }\n            return res;\n        }\n    }\n}",
    "submit_ts": "1721530875",
    "subm_id": "548381619"
}