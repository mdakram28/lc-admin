{
    "username": "6racious-wilesxjv",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n\n        def max_dist(points):\n            n = len(points)\n            a, b = points[0]\n            c, d = points[0]\n            ans = p = q = -1\n            for i in range(1, n):\n                x, y = points[i]\n                # ans = max(ans, abs(x-a) + abs(y-b), abs(x-c) + abs(y-d))\n                z = abs(x-a) + abs(y-b)\n                if z > ans:\n                    ans = z\n                    p, q = (a,b), (x,y)\n                z = abs(x-c) + abs(y-d)\n                if z > ans:\n                    ans = z\n                    p, q = (c,d), (x,y)\n                if x-a < b-y:\n                    a, b = x, y\n                if x-c < y-d:\n                    c, d = x, y\n            return ans, p, q\n\n        _,p,q = max_dist(points)\n        i = points.index(list(p))\n        j = points.index(list(q))\n        ans1,_,_ = max_dist(points[:i] + points[i+1:])\n        ans2,_,_ = max_dist(points[:j] + points[j+1:])\n        return min(ans1, ans2)"
}