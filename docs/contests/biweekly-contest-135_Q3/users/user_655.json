{
    "username": "dayday_baday",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        gap = collections.defaultdict(int)\n        pairs = len(nums) // 2\n        for i in range(0, len(nums)//2):\n            gap[abs(nums[i]-nums[len(nums)-i-1])] += 1\n        \n        # print(gap)\n        res = pairs\n        for x, cnt in gap.items():\n            tmp = 0  # \u8ba1\u7b97\u6240\u6709gap\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\n            if x > k and len(gap) > 1:\n                # \u5982\u679cgap\u6bd4k\u5927\uff0c\u5219\u901a\u8fc7\u8c03\u6574\u6570\u4e0d\u53ef\u80fd\u6ee1\u8db3\u8981\u6c42\n                continue\n            # \u5982\u679c\u5269\u4e0b\u90fd\u53ea\u75281\u6b21\u4e5f\u6ca1\u6cd5\u6bd4res\u5c11\u7684\u8bdd\u4e0d\u7528\u5904\u7406\n            if pairs-cnt >= res:\n                continue\n\n            for i in range(0, len(nums)//2):\n                n1, n2 = nums[i], nums[len(nums)-i-1]\n                if abs(n1-n2) == x:\n                    continue \n                if (0<=n1-x<=k or 0<=n1+x<=k or 0<=n2-x<=k or 0<=n2+x<=k):\n                    tmp += 1\n                else:\n                    tmp += 2\n                # print(x, n1, n2, tmp, 0<=min(n1,n2)-x<=k or 0<=min(n1,n2)+x<=k)\n                if tmp >= res:\n                    break \n            res = min(res, tmp)\n        return res \n",
    "submit_ts": "1721488250",
    "subm_id": "548313532"
}