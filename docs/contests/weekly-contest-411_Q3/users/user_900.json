{
    "username": "yoyo",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if(k == 1 or k == 3 or k == 9):\n            return str(9)*n\n        if(k == 2):\n            if(n <= 2):\n                return str(8)*n\n            else:\n                return str(8)+str(9)*(n-2)+str(8)\n        if(k == 4):\n            if(n <= 4):\n                return str(8)*n\n            else:\n                return str(88)+str(9)*(n-4)+str(88)\n        if(k == 5):\n            if(n <= 2):\n                return str(5)*n\n            else:\n                return str(5)+str(9)*(n-2)+str(5)\n        if(k == 6):\n            if(n <= 2):\n                return str(6)*n\n            else:\n                if(n%2 == 1):\n                    return str(8)+str(9)*(int)((n-3)/2)+str(8)+str(9)*(int)((n-3)/2)+str(8)\n                else:\n                    return str(8)+str(9)*(int)((n-4)/2)+str(77)+str(9)*(int)((n-4)/2)+str(8)\n        if(k == 7):\n            arr = ['7','77','959','9779','99799','999999','9994999','99944999','999969999','9999449999','99999499999','999999999999']\n            return (int)((n-1)/12)*6*str(9)+arr[(n-1)%12]+(int)((n-1)/12)*6*str(9)\n        if(k == 8):\n            if(n <= 6):\n                return str(8)*n\n            else:\n                return str(888)+str(9)*(n-6)+str(888)\n        \n        return ''",
    "submit_ts": "1723953077",
    "subm_id": "1359811798"
}