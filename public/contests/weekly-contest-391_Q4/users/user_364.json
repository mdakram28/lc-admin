{
    "username": "goodluck123",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        List<Integer> list1 = new ArrayList<>();\n        List<Integer> list2 = new ArrayList<>();\n\n        for (int[] p : points) {\n            list1.add(p[0] - p[1]);\n            list2.add(p[0] + p[1]);\n        }\n\n        Collections.sort(list1);\n        Collections.sort(list2);\n\n        int min = Integer.MAX_VALUE;\n\n        int subMax = list1.get(n - 1);\n        int subMin = list1.get(0);\n        int addMax = list2.get(n - 1);\n        int addMin = list2.get(0);\n        for (int[] p : points) {\n\n            // \u5220\u9664p\u70b9\n            int sub = p[0] - p[1];\n            int add = p[0] + p[1];\n\n            int curr = Integer.MAX_VALUE;\n            if (sub != subMax && sub != subMin && add != addMax && add != addMin) {\n                curr = Math.max(addMax - addMin, subMax - subMin);\n            } else if (sub == subMax && add != addMax && add != addMin) {\n                curr = Math.max(addMax - addMin, list1.get(n - 2) - subMin);\n            } else if (sub == subMin && add != addMax && add != addMin) {\n                curr = Math.max(addMax - addMin, subMax - list1.get(1));\n            } else if (sub != subMax && sub != subMin && add == addMax) {\n                curr = Math.max(list2.get(n - 2) - addMin, subMax - subMin);\n            } else if (sub != subMax && sub != subMin && add == addMin) {\n                curr = Math.max(addMax - list2.get(1), subMax - subMin);\n            } else if (sub == subMax && add == addMax) {\n                curr = Math.max(list2.get(n - 2) - addMin, list1.get(n - 2) - subMin);\n            } else if (sub == subMin && add == addMin) {\n                curr = Math.max(addMax - list2.get(1), subMax - list1.get(1));\n            } else if (sub == subMax && add == addMin) {\n                curr = Math.max(addMax - list2.get(1), list1.get(n - 2) - subMin);\n            } else if (sub == subMin && add == addMax) {\n                curr = Math.max(list2.get(n - 2) - addMin, subMax - list1.get(1));\n            } else if (sub == subMax && add == addMin) {\n                curr = Math.max(addMax - list2.get(1), list1.get(n - 2) - subMin);\n            }\n\n            min = Math.min(min, curr);\n        }\n        return min;\n    }\n}"
}