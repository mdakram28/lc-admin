{
    "username": "salyu",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int len = nums.size(), l = 0, cur = nums[0], res = abs(nums[0] - k);\n        array<int, 32> cnt{};\n        for (int b = 0; b < 32; ++b) {\n            cnt[b] += (nums[0] & (1 << b)) ? 1 : 0;\n        }\n        for (int i = 1; i < len; ++i) {\n            int n = nums[i];\n            cur &= n;\n            res = min({res, abs(cur - k), abs(n - k)});\n            for (int b = 0; b < 32; ++b) {\n                cnt[b] += (n & (1 << b)) ? 1 : 0;\n            }\n            while (l < i && cur < k) {\n                int m = nums[l++];\n                cur = 0;\n                for (int b = 0; b < 32; ++b) {\n                    if (m & (1 << b)) {\n                        --cnt[b];\n                    }\n                    if (cnt[b] == i - l + 1) {\n                        cur |= (1 << b);\n                    }\n                }\n                res = min(res, abs(cur - k));\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1717298788.0
}