{
    "username": "oalad-zro",
    "submission": "class Solution {\npublic:\n    unordered_map<int, int> maxValue;\n//     Solution(): maxValue(vector<int>(50002)) {\n        \n//     }\n    void modify(int l, int r, int rt, int pos, int k) {\n        if (l == r) {\n            maxValue[rt] = k;\n            return;\n        }\n        int m = (l + r) >> 1;\n        if (pos <= m) modify(l, m, rt << 1, pos, k);\n        else modify(m + 1, r, rt << 1 | 1, pos, k);\n        maxValue[rt] = max(maxValue[rt << 1], maxValue[rt << 1 | 1]);\n    }\n    int query(int l, int r, int rt, int nowl, int nowr) {\n        if (nowl <= l && r <= nowr) return maxValue[rt];\n        int m = (l + r) >> 1, re = 0;\n        if (nowl <= m) re = max(re, query(l, m, rt << 1, nowl, nowr));\n        if (nowr > m) re = max(re, query(m + 1, r, rt << 1 | 1, nowl, nowr));\n        return re;\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        maxValue.clear();\n        //for (int i = 0; i < 50002; ++i) maxValue[i] = 0;\n        set<int> pos;\n        pos.insert(50001);\n        pos.insert(0);\n        vector<bool> ans;\n        for (auto &q: queries) {\n            int type = q[0];\n            if (type == 1) {\n                auto pre = pos.lower_bound(q[1]);\n                auto nxt = pre;\n                --pre;\n                modify(1, 50002, 1, q[1], q[1] - *pre);\n                modify(1, 50002, 1, *nxt, *nxt - q[1]);\n                pos.insert(q[1]);\n            } else {\n                auto pre = pos.lower_bound(q[1]);\n                --pre;\n                if (q[1] - *pre >= q[2] || (*pre && query(1, 50002, 1, 1, *pre) >= q[2])) {\n                    ans.push_back(true);\n                } else {\n                    ans.push_back(false);\n                }\n            }\n        }\n        //delete[] maxValue;\n        return ans;\n    }\n};",
    "submit_ts": 1716650388.0
}