{
    "username": "YuanPJ",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        counters = [Counter([nums[0]]) for _ in range(k + 1)]\n        max1_nums, max1_counts, max2_nums, max2_counts = [nums[0]] * (k + 1), [1] * (k + 1), [0] * (k + 1), [0] * (k + 1)\n        for n in nums[1:]:\n            max1_num, max1_count, max2_num, max2_count = max1_nums[0], max1_counts[0], max2_nums[0], max2_counts[0]\n\n            counters[0][n] += 1\n            if counters[0][n] > max1_counts[0]:\n                if n == max1_num:\n                    max1_counts[0] = counters[0][n]\n                else:\n                    max2_nums[0], max2_counts[0] = max1_nums[0], max1_counts[0]\n                    max1_nums[0], max1_counts[0] = n, counters[0][n]\n            elif counters[0][n] > max2_counts[0]:\n                if n == max2_num:\n                    max2_counts[0] = counters[0][n]\n                else:\n                    max2_nums[0], max2_counts[0] = n, counters[0][n]\n\n            for diff_num in range(1, k + 1):\n                tmp = counters[diff_num - 1][n]\n                if max1_num != n:\n                    tmp = max(tmp, max1_count + 1)\n                else:\n                    tmp = max(tmp, max2_count + 1)\n                tmp = max(tmp, counters[diff_num][n] + 1)\n                \n                max1_num, max1_count, max2_num, max2_count = max1_nums[diff_num], max1_counts[diff_num], max2_nums[diff_num], max2_counts[diff_num]\n                \n                counters[diff_num][n] = tmp\n                if counters[diff_num][n] > max1_counts[diff_num]:\n                    if n == max1_num:\n                        max1_counts[diff_num] = counters[diff_num][n]\n                    else:\n                        max2_nums[diff_num], max2_counts[diff_num] = max1_nums[diff_num], max1_counts[diff_num]\n                        max1_nums[diff_num], max1_counts[diff_num] = n, counters[diff_num][n]\n                elif counters[diff_num][n] > max2_counts[diff_num]:\n                    if n == max2_num:\n                        max2_counts[diff_num] = counters[diff_num][n]\n                    else:\n                        max2_nums[diff_num], max2_counts[diff_num] = n, counters[diff_num][n]\n                \n        return max(max(counter.values()) for counter in counters)",
    "submit_ts": "1717861816",
    "subm_id": "1281803078"
}