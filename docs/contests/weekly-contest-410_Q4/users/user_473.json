{
    "username": "JerryGu1",
    "submission": "class Solution {\n    \n    public int countOfPairs(int[] nums) {\n        int m = 1000000007;\n        int n = nums.length;\n        if (n==1) return nums[0]+1;\n        int[][] dp = new int[n][1001];\n        for (int i=0; i<1001; i++) {\n            dp[n-1][i]=i+1;\n        }\n        for (int h=n-2; h>=0; h--) { //idx\n            for (int i=0; i<1001; i++) { //val\n                int lo = Math.max(i,nums[h+1]-nums[h]+i);\n                if (lo==0) dp[h][i] = dp[h+1][nums[h+1]];\n                else if (lo<=nums[h+1]) dp[h][i] = dp[h+1][nums[h+1]] - dp[h+1][lo-1];\n                if (i!=0) {\n                    dp[h][i]+=dp[h][i-1];\n                }\n                dp[h][i]%=m;\n                if (dp[h][i]<0) dp[h][i]+=m;\n            }\n        }\n        //for (int i=0; i<n; i++) System.out.println(Arrays.toString(dp[i]));\n        \n        \n        \n        return dp[0][1000];\n    }\n    /*\n    public int f(int idx, int val) {\n        if (idx==n-1) return 1;\n        if (vis[idx][val]) return dp[idx][val];\n        vis[idx][val]=true;\n        \n        int val2 = num[idx]-val;\n        int lo = Math.max(val,num[idx+1]-num[idx]+val);\n        for (int i=lo; i<=num[idx+1]; i++) {\n            dp[idx][val]+=f(idx+1, i);\n            dp[idx][val]%=m;\n        }\n        return dp[idx][val];\n    }*/\n}",
    "submit_ts": "1723347538",
    "subm_id": "1351600734"
}