{
    "username": "nikhil__thogaru",
    "submission": "const int N=2e3;\nint parent[N+1], sz[N+1],rr[N+1];\nvoid Union(int a,int b)\n{\n    if (rr[a] > rr[b]) parent[b]=a,sz[a]+=sz[b];\n    else if (rr[a] < rr[b]) parent[a]=b,sz[b]+=sz[a];\n    else parent[b]=a,rr[a]++,sz[a]+=sz[b];\n}\nint findp(int i)\n{\n    if (parent[i]==i){\n        return i;\n    }\n    return findp(parent[i]);\n}\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& a) {\n        int n=a.size();\n        for (int i=0;i<n+4;i++) parent[i]=i,rr[i]=0,sz[i]=0;\n        for (int i=0;i<n;i++){\n            for (int j=i+1;j<n;j++){\n                int x1=a[i][0],y1=a[i][1],r1=a[i][2];\n                int x2=a[j][0],y2=a[j][1],r2=a[j][2];\n              //  auto [x2,y2,r2]=a[j];\n                long long int l=(1LL*(x2-x1)*(x2-x1))+(1LL*(y2-y1)*(y2-y1));\n                long long int r=1LL*(r1+r2)*(r1+r2);\n                if (l<=r){\n                    int x=findp(i);\n                    int y=findp(j);\n                    if (x!=y) Union(x,y);\n                }\n            }\n        }\n        for (int i=0;i<n;i++){\n            int x1=a[i][0],y1=a[i][1],r1=a[i][2];\n            if (x1<=r1){\n                int x=findp(i),y=findp(n);\n                if (x!=y) Union(x,y);\n            }\n            if (abs(Y-y1)<=r1){\n                int x=findp(i),y=findp(n+1);\n                if (x!=y) Union(x,y);\n            }\n            if (abs(X-x1)<=r1){\n                int x=findp(i),y=findp(n+2);\n                if (x!=y) Union(x,y);\n            }\n            if (y1<=r1){\n                int x=findp(i),y=findp(n+3);\n                if (x!=y) Union(x,y);\n            }\n        }\n        if (findp(n)==findp(n+2) || findp(n)==findp(n+3)) return false;\n        if (findp(n+1)==findp(n+2) || findp(n+1)==findp(n+3)) return false;\n        return true;\n    }\n};",
    "submit_ts": "1722138984",
    "subm_id": "1335804781"
}