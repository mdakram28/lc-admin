{
    "username": "CutSandstone",
    "submission": "using ll = long long;\nstruct pair_hash {\n    template <class T1, class T2>\n    std::size_t operator() (const std::pair<T1, T2>& p) const {\n        auto hash1 = std::hash<T1>{}(p.first);\n        auto hash2 = std::hash<T2>{}(p.second);\n        return hash1 ^ (hash2 << 1);\n    }\n};\nstruct pair_equal {\n    template <class T1, class T2>\n    bool operator() (const std::pair<T1, T2>& p1, const std::pair<T1, T2>& p2) const {\n        return p1.first == p2.first && p1.second == p2.second;\n    }\n};\nclass Solution {\n    ll inv(ll n, ll mod){\n        ll a = 1;\n        int x = mod-2;\n        while(x){\n            if(x&1) a = a*n%mod;\n            n = n*n%mod;\n            x>>=1;\n        }\n        return a;\n    }\npublic:\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        int n = t.size();\n        int mod = 1e9+7;\n        int b1 = 8324, b2 = 1238;\n        vector<ll> p1(n),p2(n);\n        vector<ll> ip1(n), ip2(n);\n        ll i1 = inv(b1,mod), i2 = inv(b2,mod);\n        p1[0]=p2[0]=ip1[0]=ip2[0]=1;\n        for(int i = 1; i<n; i++){\n            p1[i] = p1[i-1]*b1%mod;\n            p2[i] = p2[i-1]*b2%mod;\n            ip1[i] = ip1[i-1]*i1%mod;\n            ip2[i] = ip2[i-1]*i2%mod;\n        }\n        vector<int> dp(n);\n        map<int,map<pair<ll,ll>,int>> mp;\n        for(int i = 0; i<w.size(); i++){\n            ll h1 = 0, h2 = 0;\n            for(int j = 0; j<w[i].size(); j++){\n                h1 = (h1+p1[j]*(w[i][j]-'a'))%mod;\n                h2 = (h2+p2[j]*(w[i][j]-'a'))%mod;\n            }\n            pair<ll,ll> pair = {h1,h2};\n            if(mp[w[i].size()].find(pair) != mp[w[i].size()].end())\n                mp[w[i].size()][pair]=min(mp[w[i].size()][pair],c[i]);\n            else mp[w[i].size()][pair]=c[i];\n        }\n        vector<ll> h1(n),h2(n);\n        for(int i = 0; i<n; i++){\n            h1[i] = ((i?h1[i-1]:0)+p1[i]*(t[i]-'a'))%mod;\n            h2[i] = ((i?h2[i-1]:0)+p2[i]*(t[i]-'a'))%mod;\n        }\n        for(int i = 0; i<n; i++){\n            dp[i] = INT_MAX>>1;\n            for(auto& a: mp){\n                int len = a.first;\n                if(i >= len-1){\n                    ll hash1 = h1[i]-(i-len == -1 ? 0:h1[i-len])+mod;\n                    ll hash2 = h2[i]-(i-len == -1 ? 0:h2[i-len])+mod;\n                    hash1 = hash1*ip1[i-len+1]%mod;\n                    hash2 = hash2*ip2[i-len+1]%mod;\n                    if(a.second.find({hash1,hash2}) != a.second.end()){\n                        int cost = a.second[{hash1,hash2}];\n                        // cout << hash1 << \" \" << hash2 << \" \" << cost << endl;\n                        dp[i] = min(dp[i],(i-len==-1?0:dp[i-len])+cost);\n                    }\n                }\n            }\n        }\n        return dp[n-1]==INT_MAX>>1?-1:dp[n-1];\n    }\n};",
    "submit_ts": "1720321642",
    "subm_id": "1312328391"
}