{
    "username": "_drifter",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n\n        int n = points.size();\n        vector<int> X(n);\n        vector<int> Y(n);\n        for (int i = 0; i < n; i++) {\n            X[i] = points[i][0] - points[i][1];\n            Y[i] = points[i][0] + points[i][1];\n        }\n\n        multiset<int> ms_X(X.begin(), X.end());\n        multiset<int> ms_Y{Y.begin(), Y.end()};\n        int ans = 1 << 30;\n\n        for (int i = 0; i < n; i++) {\n\n            int x = X[i];\n            int y = Y[i];\n            ms_X.erase(ms_X.find(x));\n            ms_Y.erase(ms_Y.find(y));\n\n            int diff_x = *ms_X.begin() - *ms_X.rbegin();\n            int diff_y = *ms_Y.begin() - *ms_Y.rbegin();\n            int tmp_ans = max(abs(diff_x), abs(diff_y));\n            ans = min(ans, tmp_ans);\n\n            ms_X.insert(x);\n            ms_Y.insert(y);\n        }\n\n        return ans;\n    }\n};"
}