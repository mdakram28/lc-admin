{
    "username": "zljlovelesson",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n\n        # def sub(st, stp):\n        #     # minimum = min(nums[st:stp+1])\n        #     diff = [abs(target[i] - nums[i]) for i in range(st, stp+1)]\n        #     minimum = min(diff)\n        #     cnt = abs(minimum)\n        #     # for e in nums[st:stp+1]:\n        #     #     cnt += e - minimum\n        #     for dif in diff:\n        #         cnt += dif - minimum\n        #     return cnt\n        def sub(st, stp):\n            # minimum = min(nums[st:stp+1])\n            diff = [abs(target[i] - nums[i]) for i in range(st, stp + 1)]\n            point = 1\n            cnt = diff[0]\n            while point < len(diff):\n                if diff[point-1] < diff[point]: \n                    cnt += diff[point] - diff[point-1]\n                point += 1\n            return cnt\n        idx = []\n        n = len(nums)\n        for i in range(n-1):\n            if (target[i] - nums[i]) * (target[i+1] - nums[i+1]) <= 0:\n                idx.append(i)\n        idx.append(n-1)\n        st = 0\n        answer = 0\n        for ele in idx:\n            stp = ele\n            answer += sub(st, stp) # include\n            st = ele + 1\n\n        return answer ",
    "submit_ts": "1721533140",
    "subm_id": "1328002209"
}