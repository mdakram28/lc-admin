{
    "username": "jinnlu",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        count = 0\n        flag = 1\n        sub = []\n\n        def check_local(sub):\n            sub.append(0)\n            pre = 0\n            local_floor = 0\n            non_dsc = True\n            sub_count = 0\n            for tmp in sub:\n                if pre > tmp:\n                    if non_dsc == True:\n                        non_dsc = False\n                        sub_count += pre - local_floor\n                    local_floor = tmp\n                elif pre < tmp:\n                    non_dsc = True\n                else:\n                    pass\n                pre = tmp\n            return sub_count\n\n        for i in range(len(nums)):\n            tmp = target[i] - nums[i]\n            if tmp == 0:\n                count += check_local(sub)\n                sub = []\n            elif tmp > 0:\n                if flag == 1:\n                    sub.append(tmp)\n                else:\n                    count += check_local(sub)\n                    flag = 1\n                    sub = [tmp]\n            elif tmp < 0:\n                if flag == -1:\n                    sub.append(-tmp)\n                else:\n                    count += check_local(sub)\n                    flag = -1\n                    sub = [-tmp]\n        \n        count += check_local(sub)\n        return  count",
    "submit_ts": "1721532602",
    "subm_id": "1327989755"
}