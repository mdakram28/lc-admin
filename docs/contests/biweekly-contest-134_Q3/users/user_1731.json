{
    "username": "saurav3001n",
    "submission": "class Solution {\npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int N = colors.size(); \n        int count = 0; \n \n        if (k == 1) { \n            return N; \n        } \n \n        int alternating_length = 1; \n        int i = 1; \n        while (i < N + k - 1) { \n            int current = i; \n            int previous = i - 1; \n \n            if (current >= N) { \n                current -= N; \n            } \n            if (previous >= N) { \n                previous -= N; \n            } \n \n            if (colors[current] != colors[previous]) { \n                ++alternating_length; \n            } else { \n                alternating_length = 1; \n            } \n  \n            if (alternating_length >= k) { \n                ++count; \n            } \n \n            ++i; \n        } \n \n        return count; \n    } \n};",
    "submit_ts": "1720280034",
    "subm_id": "1311774475"
}