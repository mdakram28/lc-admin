{
    "username": "Uchiha",
    "submission": "     \n#include<bits/stdc++.h>\nusing namespace std;\n#define ln \"\\n\"\n#define vll vector<ll>\n#define vvll vector<vector<ll>>\n#define vpll vector<pair<ll,ll>>\n#define vppll vector<pair<pair<ll,ll>,ll>>\n#define vvpll vector<vector<pair<ll,ll>>>\n#define ff first\n#define ss second\n#define all(a) (a).begin(), (a).end()\n#define IT_MAX  1LL<<31\n#define IT_MIN -1LL<<31\n#define INF_MAX  1LL<<60\n#define INF_MIN -1LL<<60\n#define INF_LL 9223372036854775807\n#define max3(a, b, c) max(max(a, b), c)\n#define max4(a, b, c, d) max(max(a, b), max(c, d))\n#define lb lower_bound\n#define ub upper_bound\n//#define fr front()\n//#define bk back()\n#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)\n#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \nusing namespace __gnu_pbds; \n//#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \n#define ordered_set tree<pair<ll,ll>, null_type,less<pair<ll,ll>>, rb_tree_tag,tree_order_statistics_node_update>   \n\n#define rall(x) (x).rbegin(), (x).rend()\n#define MAX(x) *max_element(all(x))\n#define MIN(x) *min_element(all(x))\n#define SUM(x) accumulate(all(x), 0LL)\n#define CNT(x) __builtin_popcountll(x)\n#define rep(i, a, b) for (ll i = (a); i < (b); i++)\n#define bck(i, a, b) for (auto i = (a) - 1; i >= (b); i--)\n\n\n\n#define cy             cout<<\"YES\\n\"\n#define cn             cout<<\"NO\\n\"\n#define minusone       cout<<-1<<ln \n#define outtt(a,b,c)       cout<<a<<\" \"<<b<<\" \"<<c<<ln \n#define outt(a,b)       cout<<a<<\" \"<<b<<ln    \n#define out(a)       cout<<a<<ln\n#define in(a)       cin>>a\n#define inn(a,b)       cin>>a>>b\n#define innn(a,b,c)       cin>>a>>b>>c\n\n\n#define setzero(a) memset(a,0,sizeof(a))\n#define setdp(dp) memset(dp,-1,sizeof(dp))\n#define goog(tno) cout << \"Case #\" << tno <<\": \" \n#define popcountL __builtin_popcountll\n#define popcount __builtin_popcount\ntypedef unsigned long long ull;\ntypedef long double lld;\n\n// If you know what you have then you don't have much\n \n#define pb push_back\n#define ppb pop_back\n#define ppf pop_front\n#define itos to_string\n#define fi first\n#define se second\n#define desc greater<int>()\n#define sz(x) (int)(x).size()\n#define len(x) (int)(x).length()\n \n#define YES cout << \"YES\\n\"\n#define NO cout << \"NO\\n\"\n#define Yes cout << \"Yes\\n\"\n#define No cout << \"No\\n\" \n#define yes cout << \"yes\\n\"\n#define no cout << \"no\\n\"\n#define minus1 cout << \"-1\\n\"\n#define zero cout << \"0\\n\"\ntypedef long long ll;\n//typedef int ll;\nconst ll mod =  998244353 ;\nconst ll MOD =  1000000007 ;\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;} \n  ll POW(ll a , ll b){\n      if(b == 0 )return 1;\n      if(b == 1)return a;\n      ll temp = POW(a,b/2);\n      if(b%2 == 0)return (temp*temp);\n      else return(((temp*temp))*a);\n  }\n  \n\n  //priority_queue <int, vector<int>, greater<int>> gq;\n  class UnionFind {\n private:\n  std::vector<int> parent;\n  std::vector<int> height;\n  std::vector<int> m_size;\n  int forest_num;\n\n public:\n  UnionFind(int size_) : parent(size_), height(size_, 0), m_size(size_, 1) {\n    forest_num = size_;\n    for (int i = 0; i < size_; ++i) parent[i] = i;\n  }\n  void init(int size_) {\n    parent.resize(size_);\n    height.resize(size_, 0);\n    m_size.resize(size_, 1);\n    forest_num = size_;\n    for (int i = 0; i < size_; ++i) parent[i] = i;\n  }\n  int find(int x) {\n    if (parent[x] == x) return x;\n    return parent[x] = find(parent[x]);\n  }\n  void unite(int x, int y) {\n    x = find(x);\n    y = find(y);\n    if (x == y) return;\n    int t = size(x) + size(y);\n    m_size[x] = m_size[y] = t;\n    if (height[x] < height[y])\n      parent[x] = y;\n    else\n      parent[y] = x;\n    if (height[x] == height[y]) ++height[x];\n    forest_num--;\n  }\n  bool same(int x, int y) { return find(x) == find(y); }\n  int size(int x) {\n    if (parent[x] == x) return m_size[x];\n    return size(parent[x] = find(parent[x]));\n  }\n  int forest() { return forest_num; }\n};\n\n//Don't stop until you are in the top \nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = INF_MIN; \n        ll n = board.size();\n        ll m = board[0].size();\n        vector<vector<pair<ll,ll>>> grid(n);\n        rep(i,0,n){\n            rep(j,0,m){\n                grid[i].pb({board[i][j],j});\n            }\n        }\n        rep(i,0,n){sort(all(grid[i]));reverse(all(grid[i]));}\n        vector<vector<pair<ll,ll>>> v(n);\n        rep(i,0,n){\n            rep(j,0,3)v[i].pb(grid[i][j]);\n        }\n        rep(i,0,n){\n            rep(j,0,n){\n                rep(k,0,n){\n                if((i != j) and (i != k) and (j != k)){\n                vpll &v1 = v[i] ;vpll  &v2 = v[j]; vpll  &v3 = v[k];  \n                  rep(x,0,3){\n                    rep(y,0,3){\n                        rep(z,0,3){\n                     if((v1[x].ss != v2[y].ss) and (v1[x].ss != v3[z].ss) and (v2[y].ss != v3[z].ss)){\n                         long long int sum = v1[x].ff + v2[y].ff + v3[z].ff;\n                        ans = max(ans,sum);\n                     }\n                        }\n                    }\n                  }\n                }\n                }\n            }\n        }\n        return ans;\n\n    }\n};\n//Coding is not difficult, you need to try hard enough\u2019\n\n",
    "submit_ts": "1723909059",
    "subm_id": "1359177967"
}