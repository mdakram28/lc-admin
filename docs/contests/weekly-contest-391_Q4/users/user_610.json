{
    "username": "No0b_Coder",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int ans = 0;\n        int n = points.size();\n        vector<int> p;\n        sort(points.begin(), points.end());\n        for(int i = 0 ; i < min(1000, n) ; i++) {\n            for(int j = n-1 ; j >= max(n-1000,0) ; j--) {\n                ans = max(ans, abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]));\n            }\n        }\n        for(int i = 0 ; i < min(1000, n) ; i++) {\n            for(int j = n-1 ; j >= max(n-1000,0) ; j--) {\n                int b = abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]);\n                if(ans == b) {\n                    p.push_back(i);\n                    p.push_back(j);\n                }\n            }\n        }\n        int res = INT_MAX;\n        for(int k = 0 ; k < p.size() ; k++) {\n            int a = 0;\n            for(int i = 0 ; i < min(1000, n) ; i++) {\n                if(i == p[k]) continue;\n                for(int j = n-1 ; j >= max(n-1000,0) ; j--) {\n                    if(i == p[k] || j == p[k]) continue;\n                    int b = abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]);\n                    a = max(a, b);\n                }\n            }\n            res = min(res, a);\n        }\n        return res;\n    }\n};"
}