{
    "username": "im__ArihantJain",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        vector<pair<int, pair<int, int>>> cells;\n \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                cells.push_back({grid[i][j], {i, j}});\n            }\n        }\n \n        sort(cells.begin(), cells.end(), [](const pair<int, pair<int, int>>& a, const pair<int, pair<int, int>>& b) {\n            return a.first > b.first;\n        });\n\n        long long maxSum = LLONG_MIN;  \n        int size = min((int)cells.size(), 3 * (n + m));  \n \n        for (int i = 0; i < size; i++) {\n            for (int j = i + 1; j < size; j++) {\n                if (cells[i].second.first != cells[j].second.first && cells[i].second.second != cells[j].second.second) {\n                    for (int k = j + 1; k < size; k++) {\n                        if (cells[i].second.first != cells[k].second.first &&\n                            cells[i].second.second != cells[k].second.second &&\n                            cells[j].second.first != cells[k].second.first &&\n                            cells[j].second.second != cells[k].second.second) {\n                            long long currentSum = static_cast<long long>(cells[i].first) +\n                                                   static_cast<long long>(cells[j].first) +\n                                                   static_cast<long long>(cells[k].first);\n                            maxSum = max(maxSum, currentSum);\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723909733",
    "subm_id": "1359203741"
}