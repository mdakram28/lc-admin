{
    "username": "devygonzalez",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        d = {}\n        for x, y in requirements:\n            d[x] = y\n\n        mod = 10 ** 9 + 7\n        @lru_cache(None)\n        def dfs(i, val):\n            if i == 0 and val == 0:\n                return 1\n\n            if i == 0 or val < 0:\n                return 0\n\n            \n            if i - 1 in d:\n                if d[i - 1] > val or d[i - 1] < val - i:\n                    return 0\n                return dfs(i - 1, d[i - 1])\n            \n            #I have i + 1 distinct numbers left. \n            #I can choose the number at ith position to be 0th largest, ..., ith largest\n            cnt = 0\n            for j in range(i + 1):\n                cnt += dfs(i - 1, val - j)\n            return cnt % mod\n\n\n\n        return dfs(n - 1, d[n - 1])\n        ",
    "submit_ts": "1719070057",
    "subm_id": "1296813413"
}