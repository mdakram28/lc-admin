{
    "username": "nikhil_120",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int> doubledColors;\n        int originalSize = colors.size();\n\n        \n        \n        for (auto color : colors) {\n            doubledColors.push_back(color);\n        }\n        for (auto color : colors) {\n            doubledColors.push_back(color);\n        }\n\n        int doubledSize = doubledColors.size();\n        int count = 0;\n\n        int left = 0;\n        int right = 0;\n        bool isGroup = false;\n\n        \n        \n        while (right < doubledSize) {\n            if (right - left + 1 == k) {\n                count++;\n                isGroup = true;\n            }\n            if (doubledColors[right] != doubledColors[right + 1] && !isGroup) {\n                right++;\n                continue;\n            }\n\n            if (doubledColors[right] != doubledColors[right + 1]) {\n                right++;\n                left++;\n            } else {\n                left = right + 1;\n                right++;\n                isGroup = false;\n            }\n\n            if (left >= originalSize) {\n                break;\n            }\n        }\n\n        return count;\n    }\n\n    int binarySearch(vector<int>& arr, int target) {\n        int low = 0;\n        int high = arr.size() - 1;\n\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n\n            if (arr[mid] == target) {\n                return mid;\n            }\n            if (arr[mid] < target) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n\n        return -1;  // Target not found\n    }\n};\n",
    "submit_ts": "1720279777",
    "subm_id": "1311764658"
}