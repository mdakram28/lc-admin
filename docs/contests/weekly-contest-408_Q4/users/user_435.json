{
    "username": "harizizzat09",
    "submission": "import math\n\nclass Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        def is_connected(c1, c2):\n            x1, y1, r1 = c1\n            x2, y2, r2 = c2\n            return ((x2 - x1)**2 + (y2 - y1)**2) ** (1/2) <= r1 + r2\n        \n        N = len(circles)\n\n        circles = [tuple(c) for c in circles]\n\n        # horizontal\n        visited = set()\n        cur = [] # x, y, r\n        for x, y, r in circles:\n            if x - r <= 0:\n                cur.append((x, y, r))\n        for c1 in cur:\n            x, y, r = c1\n            if x + r >= X:\n                return False\n            for c2 in circles:\n                if is_connected(c1, c2):\n                    if not c2 in visited:\n                        visited.add(c2)\n                        cur.append(c2)\n        \n        # vertical\n        visited = set()\n        cur = [] # x, y, r\n        for x, y, r in circles:\n            if y - r <= 0:\n                cur.append((x, y, r))\n        for c1 in cur:\n            x, y, r = c1\n            if y + r >= Y:\n                return False\n            for c2 in circles:\n                if is_connected(c1, c2):\n                    if not c2 in visited:\n                        visited.add(c2)\n                        cur.append(c2)\n\n        # top - right\n        visited = set()\n        cur = [] # x, y, r\n        for x, y, r in circles:\n            if y + r >= Y:\n                cur.append((x, y, r))\n        for c1 in cur:\n            x, y, r = c1\n            if x + r >= X:\n                return False\n            for c2 in circles:\n                if is_connected(c1, c2):\n                    if not c2 in visited:\n                        visited.add(c2)\n                        cur.append(c2)\n\n        # left - bot\n        visited = set()\n        cur = [] # x, y, r\n        for x, y, r in circles:\n            if x - r <= 0:\n                cur.append((x, y, r))\n        for c1 in cur:\n            x, y, r = c1\n            if y - r <= 0:\n                return False\n            for c2 in circles:\n                if is_connected(c1, c2):\n                    if not c2 in visited:\n                        visited.add(c2)\n                        cur.append(c2)\n\n        return True\n\n",
    "submit_ts": "1722136653",
    "subm_id": "1335741071"
}