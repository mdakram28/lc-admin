{
    "username": "nguyenquocthao00",
    "submission": "MOD = 10**9 + 7\n# @lru_cache(None)\n# def dp(n, inv):\n#     if inv==0: return 1\n#     if inv<0: return 0\n#     if n==1: return 0\n#     return sum(dp(n-1, inv-i) for i in range(0, n))\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        req=[-1]*n\n        for end,cnt in requirements:\n            req[end]=cnt\n        @lru_cache(None)\n        def dp(i, inv):\n            if req[i]>=0 and req[i]!=inv: return 0\n            if inv<0: return 0\n            if i==0:\n                if inv==0: return 1\n                else: return 0\n            return sum(dp(i-1, inv-j) for j in range(i+1))%MOD\n        return dp(n-1, req[n-1])\n            \n        # requirements.sort()\n\n        ",
    "submit_ts": 1719068855.0
}