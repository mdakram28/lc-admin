{
    "username": "Ruthvik2835",
    "submission": "class Solution {\npublic:\n    int a=0;\n    void rrr(int k,int sum,int p,int o,int prev){\n        if(sum==k)a++;\n        if(sum>(1<<5))return;\n        if(prev==-1){\n            rrr(k,sum+p,2*p,o+1,0);\n        }\n        else{\n            rrr(k,sum+p,2*p,o+1,0);\n            \n            rrr(k,sum-1,p,o+1,0);\n        }\n    }\nlong long rrr(int n, int r)\n{\n\n    long long p = 1, k = 1;\n\n    if (n - r < r)\n        r = n - r;\n \n    if (r != 0) {\n        while (r) {\n            p *= n;\n            k *= r;\n \n            // gcd of p, k\n            long long m = __gcd(p, k);\n\n            p /= m;\n            k /= m;\n \n            n--;\n            r--;\n        }\n \n        // k should be simplified to 1\n        // as C(n, r) is a natural number\n        // (denominator should be 1 ) .\n    }\n \n    else\n        p = 1;\n \n    // if our approach is correct p = ans and k =1\n    return p;\n}\n    int waysToReachStair(int k) {\n        \n        // if(k<=7){\n        //     rrr(k,1,1,0,0);\n        //     return a;\n        // }\n        // return -1;\n        \n        long long p=1;\n        long long sum=1;\n        int o=0;\n        vector<pair<int,int>>v;\n        while(sum<k){\n            \n            o++;\n            sum+=p;\n            p*=2;\n        }\n        // int d=sum-k;\n        while(sum-k<=o+1){\n            v.push_back({sum-k,o});\n            sum+=p;\n            o++;\n            p*=2;\n        }\n        int ans=0;\n        // vector<int>fact(,0);\n        \n        \n        for(auto x:v){\n            int d=x.first,o=x.second;\n            ans+=rrr(o+1,d);            \n        }\n        return ans;\n\n        \n    }\n};",
    "submit_ts": 1716088656.0
}