{
    "username": "prajit1999",
    "submission": " class Solution {\npublic:\n    #define ll long long\n    int n;\n    vector<int> seg;\n\n    void build(int idx, int low, int high, vector<int>& heights) {\n        if (low == high) {\n            seg[idx] = heights[low];\n            return;\n        }\n        int mid = (high + low) / 2;\n        build(2 * idx + 1, low, mid, heights);\n        build(2 * idx + 2, mid + 1, high, heights);\n        seg[idx] = (seg[2 * idx + 1] & seg[2 * idx + 2]);\n    }\n\n    int qry(int idx, int low, int high, int l, int r) {\n        if (low > high || low > r || high < l) return INT_MAX;\n        if (low >= l && high <= r) return seg[idx];\n        int mid = (high + low) / 2;\n        return (qry(2 * idx + 1, low, mid, l, r) & qry(2 * idx + 2, mid + 1, high, l, r));\n    }\n\n    int bsr(int low, int high, int k, int start) {\n        int idx = -1;\n        while (high >= low) {\n            int mid = (high + low) / 2;\n            int val = qry(0, 0, n - 1, mid, start);\n            if (val > k) {\n                high = mid - 1;\n            } else if (val < k) {\n                low = mid + 1;\n            } else {\n                idx = mid;\n                low = mid + 1;\n            }\n        }\n        return idx;\n    }\n\n    int bsl(int low, int high, int k, int start) {\n        int idx = -1;\n        while (high >= low) {\n            int mid = (high + low) / 2;\n            int val = qry(0, 0, n - 1, mid, start);\n            if (val > k) {\n                high = mid - 1;\n            } else if (val < k) {\n                low = mid + 1;\n            } else {\n                idx = mid;\n                high = mid - 1;\n            }\n        }\n        return idx;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        n = nums.size();\n        ll ans = 0;\n        seg.resize(4 * n + 1, 0);\n        build(0, 0, n - 1, nums);\n        for (int i = 0; i < n; i++) {\n            int left = bsl(0, i, k, i);\n            int right = bsr(0, i, k, i);\n            if (left == -1 || right == -1) continue;\n            ans += (ll)(right - left + 1);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720278311",
    "subm_id": "1311703638"
}