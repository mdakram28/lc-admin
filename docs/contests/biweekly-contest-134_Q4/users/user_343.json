{
    "username": "bladechen",
    "submission": "class RMQ {\n    public:\n    RMQ(vector<int>& n) {\n        lg_.resize(n.size() + 1);\n        lg_[1] = 0;\n        for (int i = 2; i < lg_.size(); ++ i) {\n            lg_[i] = lg_[i >> 1]  + 1;\n        }\n        for (int i = 0; i <= lg_[n.size()]; ++ i) {\n            dp[i].resize(n.size());\n        }\n        for (int i = 0; i< n.size(); ++ i) {\n            dp[0][i] = n[i];\n        }\n        \n        for (int i = 1; i <= lg_[n.size()]; ++ i) {\n            int steps = 1 << i;\n            for (int j = 0; j <= n.size() - steps; ++ j ) {\n                dp[i][j] = dp[i - 1][j] & dp[i - 1][j + (steps >> 1)];\n            }\n        }\n        \n    }\n    int query(int l, int r) {\n        int s= lg_[r - l + 1];\n        return dp[s][l] & dp[s][ r - ( 1 << s) + 1];\n    }\n    vector<int> lg_;\n    vector<int> dp[18];\n    \n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        RMQ rmq(nums);\n        long long res = 0;\n        for (int i = 0; i < nums.size(); ++ i) {\n            int left = 0;\n            int right = 0;\n            {\n                int low = 0;\n                int high = i;\n                while (low <= high) {\n                    int mid = (low + high) >> 1;\n                    if (rmq.query(mid, i) >= k) {\n                        high = mid - 1;\n                    } else {\n                        low = mid + 1;\n                    }\n                }\n                left = low;\n            }\n            {\n                int low = 0;\n                int high = i;\n                while (low <= high) {\n                    int mid = (low + high) >> 1;\n                    if (rmq.query(mid, i) <= k) {\n                        low = mid + 1;\n                    } else {\n                        high = mid - 1;\n                    }\n                }\n                right = high;\n            }\n            if (right >= left) {\n                res += (right - left + 1);\n            }\n\n            \n        }\n        return res;\n        \n    }\n};",
    "submit_ts": "1720277098",
    "subm_id": "544554465"
}