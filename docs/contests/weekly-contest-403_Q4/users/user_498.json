{
    "username": "cyzh",
    "submission": "#define debug(a) cout << #a << \" = \" << a << endl;\n#define debug2(a,b) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<endl;\n#define debug3(a,b,c) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<' '<<#c<<\" = \"<<c<<endl;\n#define debug4(a,b,c,d) cout<<#a<<\" = \"<<a<<' '<<#b<<\" = \"<<b<<' '<<#c<<\" = \"<<c<<' '<<#d<<\" = \"<<d<<endl;\n#define debugx(a, idx) cout << #a << \"[\" << idx << \"] = \" << a[idx] << endl;\n#define debugpii(a) cout<<#a<<\" = \"<<a.first<<\", \"<<a.second<<endl;\n#define debugarr(a, x) cout<<#a<<\": \"; for(int i = 0; i < x; i++) cout << a[i] << ' '; cout << endl;\n#define debugarr2(a, n, m) cout<<#a<<\": \\n\";for(int i=0;i<n;i++){for(int j=0;j<m;j++)cout<<a[i][j]<<' ';cout<<'\\n';}\n#define debugvec(a) cout<<#a<<\": \"; for(int i = 0; i < a.size(); i++) cout << a[i] << ' '; cout << endl;\n#define debugque(a) {cout<<#a<<\": \";auto TMP=a;while(TMP.size()){cout<<TMP.front()<<' ';TMP.pop();}cout<<endl;}\n#define debugstk(a) {cout<<#a<<\": \";auto TUP=a;while(TUP.size()){cout<<TUP.top()<<' ';TUP.pop();}cout<<endl;}\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst ll mod=1000000007;\nll qpow(ll a,ll b) {ll res=1;a%=mod; for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\ntemplate <class T> bool chkmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\ntemplate <class T> bool chkmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& g) {\n        int n = g.size(), m = g[0].size();\n        const int inf = 2000000000;\n        using Rect = array<int, 4>;\n        vector<vector<Rect>> ul(n + 1, vector<Rect>(m + 1, {inf, inf, 0, 0}));\n        vector<vector<int>> uld(n, vector<int>(m));\n        auto dr = ul;\n        auto ur = ul;\n        auto dl = ul;\n        auto drd = uld;\n        auto urd = uld;\n        auto dld = uld;\n        // ul\n        rep(i, 1, n+1) rep(j, 1, m+1) {\n            if(g[i-1][j-1]) {\n                ul[i][j][0] = min({ul[i - 1][j][0], ul[i][j - 1][0], i});\n                ul[i][j][1] = min({ul[i - 1][j][1], ul[i][j - 1][1], j});\n                ul[i][j][2] = max({ul[i - 1][j][2], ul[i][j - 1][2], i});\n                ul[i][j][3] = max({ul[i - 1][j][3], ul[i][j - 1][3], j});\n            } else {\n                ul[i][j][0] = min(ul[i - 1][j][0], ul[i][j - 1][0]);\n                ul[i][j][1] = min(ul[i - 1][j][1], ul[i][j - 1][1]);\n                ul[i][j][2] = max(ul[i - 1][j][2], ul[i][j - 1][2]);\n                ul[i][j][3] = max(ul[i - 1][j][3], ul[i][j - 1][3]);\n            }\n\n            if (ul[i][j][0] == inf) uld[i-1][j-1] = 0;\n            else uld[i-1][j-1] = (ul[i][j][2] - ul[i][j][0] + 1) * (ul[i][j][3] - ul[i][j][1] + 1);\n        }\n        // ur\n        rep(i, 1, n+1) per(j, 0, m) {\n            if(g[i-1][j]) {\n                ur[i][j][0] = min({ur[i - 1][j][0], ur[i][j + 1][0], i});\n                ur[i][j][1] = min({ur[i - 1][j][1], ur[i][j + 1][1], j});\n                ur[i][j][2] = max({ur[i - 1][j][2], ur[i][j + 1][2], i});\n                ur[i][j][3] = max({ur[i - 1][j][3], ur[i][j + 1][3], j});\n            } else {\n                ur[i][j][0] = min(ur[i - 1][j][0], ur[i][j + 1][0]);\n                ur[i][j][1] = min(ur[i - 1][j][1], ur[i][j + 1][1]);\n                ur[i][j][2] = max(ur[i - 1][j][2], ur[i][j + 1][2]);\n                ur[i][j][3] = max(ur[i - 1][j][3], ur[i][j + 1][3]);\n            }\n            \n            if (ur[i][j][0] == inf) urd[i-1][j] = 0;\n            else urd[i-1][j] = (ur[i][j][2] - ur[i][j][0] + 1) * (ur[i][j][3] - ur[i][j][1] + 1);\n        }\n        // dl\n        per(i, 0, n) rep(j, 1, m+1) {\n            if(g[i][j-1]) {\n                dl[i][j][0] = min({dl[i + 1][j][0], dl[i][j - 1][0], i});\n                dl[i][j][1] = min({dl[i + 1][j][1], dl[i][j - 1][1], j});\n                dl[i][j][2] = max({dl[i + 1][j][2], dl[i][j - 1][2], i});\n                dl[i][j][3] = max({dl[i + 1][j][3], dl[i][j - 1][3], j});\n            } else {\n                dl[i][j][0] = min(dl[i + 1][j][0], dl[i][j - 1][0]);\n                dl[i][j][1] = min(dl[i + 1][j][1], dl[i][j - 1][1]);\n                dl[i][j][2] = max(dl[i + 1][j][2], dl[i][j - 1][2]);\n                dl[i][j][3] = max(dl[i + 1][j][3], dl[i][j - 1][3]);\n            }\n            \n            if (dl[i][j][0] == inf) dld[i][j-1] = 0;\n            else dld[i][j-1] = (dl[i][j][2] - dl[i][j][0] + 1) * (dl[i][j][3] - dl[i][j][1] + 1);\n        }\n        // dr\n        per(i, 0, n) per(j, 0, m) {\n            if(g[i][j]) {\n                dr[i][j][0] = min({dr[i + 1][j][0], dr[i][j + 1][0], i});\n                dr[i][j][1] = min({dr[i + 1][j][1], dr[i][j + 1][1], j});\n                dr[i][j][2] = max({dr[i + 1][j][2], dr[i][j + 1][2], i});\n                dr[i][j][3] = max({dr[i + 1][j][3], dr[i][j + 1][3], j});\n            } else {\n                dr[i][j][0] = min(dr[i + 1][j][0], dr[i][j + 1][0]);\n                dr[i][j][1] = min(dr[i + 1][j][1], dr[i][j + 1][1]);\n                dr[i][j][2] = max(dr[i + 1][j][2], dr[i][j + 1][2]);\n                dr[i][j][3] = max(dr[i + 1][j][3], dr[i][j + 1][3]);\n            }\n            \n            if (dr[i][j][0] == inf) drd[i][j] = 0;\n            else drd[i][j] = (dr[i][j][2] - dr[i][j][0] + 1) * (dr[i][j][3] - dr[i][j][1] + 1);\n        }\n\n        int ans = 2e9;\n        rep(i, 1, n) rep(j, 1, m) {\n            chkmin(ans, uld[i-1][j-1] + urd[i-1][j] + drd[i][0]);\n            chkmin(ans, uld[i-1][m-1] + dld[i][j-1] + drd[i][j]);\n            chkmin(ans, uld[i-1][j-1] + dld[i][j-1] + drd[0][j]);\n            chkmin(ans, uld[n-1][j-1] + urd[i-1][j] + drd[i][j]);\n        }\n\n        // 0~i, i+1 ~ j, j+1 ~ n-1;\n        rep(i, 0, n) {\n            int yMin = 2e9, yMax = 0;\n            rep(j, i+1, n-1) {\n                rep(k, 0, m) if(g[j][k]) {\n                    chkmin(yMin, k);\n                    chkmax(yMax, k);\n                }\n                if (yMin != 2e9) chkmin(ans, uld[i][m-1] + (j - i) * (yMax - yMin + 1) + drd[j+1][0]);\n            }\n        }\n\n        rep(i, 0, m) {\n            int xMin = 2e9, xMax = 0;\n            rep(j, i+1, m-1) {\n                rep(k, 0, n) if(g[k][j]) {\n                    chkmin(xMin, k);\n                    chkmax(xMax, k);\n                }\n                if (xMin != 2e9) chkmin(ans, uld[n-1][i] + (j - i) * (xMax - xMin + 1) + drd[0][j+1]);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1719114988",
    "subm_id": "541404105"
}