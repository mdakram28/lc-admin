{
    "username": "sishenzhimu",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        \n        ans = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                cnt = [0, 0]\n                cnt[grid[i][j]] += 1\n                cnt[grid[m - i - 1][j]] += 1\n                cnt[grid[i][n - j - 1]] += 1\n                cnt[grid[m - i - 1][n - j - 1]] += 1\n                \n                ans += min(cnt)\n        \n        if m & 1 and n & 1:\n            ans += (grid[m // 2][n // 2] == 1)\n        \n        cnt1 = [0, 0]\n        res1 = 0\n        if m & 1:\n            for j in range(n // 2):\n                cnt1[grid[m // 2][j]] += 1\n                cnt1[grid[m // 2][n - j - 1]] += 1\n                res1 += (grid[m // 2][j] != grid[m // 2][n - j - 1])\n        \n            \n        cnt2 = [0, 0]\n        res2 = 0\n        if n & 1:\n            for i in range(m // 2):\n                cnt2[grid[i][n // 2]] += 1\n                cnt2[grid[m - i - 1][n // 2]] += 1\n                res2 += (grid[i][n // 2] != grid[m - i - 1][n // 2])\n                \n        a, b = cnt1[1] + cnt2[1] - res1 - res2, cnt1[1] + cnt2[1] + res1 + res2\n        if not (a % 4 == 0 or (a // 4 + 1) * 4 <= b):\n            ans += 2\n        \n        return ans + res1 + res2",
    "submit_ts": "1722697456",
    "subm_id": "552266213"
}