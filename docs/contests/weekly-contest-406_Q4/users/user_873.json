{
    "username": "21bec057",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> v;\n        priority_queue<int> h;\n        int i=0;\n        while(i<m-1){\n            h.push(horizontalCut[i]);\n            i++;\n        }\n        i=0;\n        while(i<n-1){\n            v.push(verticalCut[i]);\n            i++;\n        }\n        int ch=0;\n        int cv=0;\n        long long int ans=0;\n        while(!v.empty()&&!h.empty()){\n            if(v.top()>h.top()){\n                ans+=(long long)(v.top()*(ch+1));\n                cv++;\n                v.pop();\n            }else{\n                ans+=(long long)(h.top()*(cv+1));\n                ch++;\n                h.pop();\n            }\n        }\n        while(!v.empty()){\n            ans+=(long long)(v.top()*(ch+1));\n            cv++;\n            v.pop();\n        }\n        \n        while(!h.empty()){\n            ans+=(long long)(h.top()*(cv+1));\n            ch++;\n            h.pop();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925380",
    "subm_id": "1320252751"
}