{
    "username": "nakanolab",
    "submission": "class Solution:\n  def minimumSum(self, grid: List[List[int]]) -> int:\n    INF = 10**12\n    \n    def shrink(i0, j0, i1, j1, grid):\n      imin = jmin = INF\n      imax = jmax = -1\n      for i in range(i0, i1):\n        for j in range(j0, j1):\n          if grid[i][j] == 1:\n            imin = min(imin, i)\n            jmin = min(jmin, j)\n            imax = max(imax, i)\n            jmax = max(jmax, j)\n      return (imax - imin + 1) * (jmax - jmin + 1)\n    \n    def hv(grid):\n      m = len(grid)\n      n = len(grid[0])\n      res = INF\n      for j in range(n):\n        right = shrink(0, j, m, n, grid)\n        if right == 0:\n          continue\n        for i in range(m):\n          l1 = shrink(0, 0, i, j, grid)\n          l2 = shrink(i, 0, m, j, grid)\n          if l1 > 0 and l2 > 0:\n            res = min(res, right + l1 + l2)\n      return res\n    \n    def hh(grid):\n      m = len(grid)\n      n = len(grid[0])\n      res = INF\n      for j1 in range(n):\n        left = shrink(0, 0, m, j1, grid)\n        if left == 0:\n          continue\n        for j2 in range(j1 + 1, n):\n          r1 = shrink(0, j1, m, j2, grid)\n          r2 = shrink(0, j2, m, n, grid)\n          if r1 > 0 and r2 > 0:\n            res = min(res, left + r1 + r2)\n      # for row in grid:\n      #   print(*row)\n      # print(f'ret {res}')\n      return res\n    \n    ans = min(hv(grid), hh(grid))\n    grid2 = [row[::-1] for row in grid]\n    ans = min(ans, hv(grid2), hh(grid2))\n    grid3 = []\n    for i in range(len(grid) - 1, -1, -1):\n      grid3.append(grid[i])\n    ans = min(ans, hv(grid3), hh(grid3))\n    grid4 = [row[::-1] for row in grid3]\n    ans = min(ans, hv(grid4), hh(grid4))\n    \n    m = len(grid)\n    n = len(grid[0])\n    grid5 = [[0] * m for _ in range(n)]\n    for i in range(m):\n      for j in range(n):\n        grid5[j][i] = grid[i][j]\n    ans = min(ans, hv(grid5), hh(grid5))\n    grid6 = [row[::-1] for row in grid5]\n    ans = min(ans, hv(grid6), hh(grid6))\n    return ans\n        \n        ",
    "submit_ts": 1719114388.0
}