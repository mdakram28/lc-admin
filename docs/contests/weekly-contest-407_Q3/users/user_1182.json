{
    "username": "crusifixx",
    "submission": "class Solution {\n    public int maxOperations(String s) {\n        StringBuilder processedSequence = collectSequence(s);\n        return calculateMaxOperations(processedSequence);\n    }\n\n    private StringBuilder collectSequence(String s) {\n        StringBuilder sb = new StringBuilder();\n        boolean hasOne = false;\n\n        for (char c : s.toCharArray()) {\n            if (c == '1') {\n                sb.append(c);\n                hasOne = true;\n            } else if (c == '0' && hasOne) {\n                sb.append(c);\n                hasOne = false;\n            }\n        }\n\n        return sb;\n    }\n\n    private int calculateMaxOperations(StringBuilder sb) {\n        int operations = 0;\n        int countOnes = 0;\n\n        for (char c : sb.toString().toCharArray()) {\n            if (c == '1') {\n                countOnes++;\n            } else if (c == '0') {\n                operations += countOnes;\n            }\n        }\n\n        return operations;\n    }\n}\n",
    "submit_ts": "1721530574",
    "subm_id": "1327937568"
}