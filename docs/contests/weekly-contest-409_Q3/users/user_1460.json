{
    "username": "shdut-7",
    "submission": "#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <map>\n#include <unordered_map>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <set>\n#include <math.h>\n#include <random>\n#include <chrono>\n#include <assert.h>\n#include <ctime>\n#include <bitset>\n#include <functional>\n\nusing namespace std;\n\n#define x first\n#define y second\n#define vi vector<int>\n#define pb push_back\n#define mp make_pair\n#define pii pair<int, int>\n#define all(x) x.begin(),x.end()\n#define SZ(x) int(x.size())\n#define rep(i, a, b) for(int i = a; i < b; i++)\n#define per(i, a, b) for(int i = b-1; i >= a; i--)\n#define DBG(x) cerr << (#x) << \"=\" << x << \"\\n\";\n#define ll long long\n#define inf 1000000007\n#define mod 998244353//1000000007\n#define N 100005\n\n\ntemplate<typename U, typename V> void Min(U &a, const V & b){if(a > b)a = b;}\ntemplate<typename U, typename V> void Max(U &a, const V & b){if(a < b)a = b;}\ntemplate<typename U, typename V> void add(U &a, const V & b){a = (a + b) % mod;}\ntemplate<typename U> U gcd(U a, U b){\n    if(a == 0)return b;\n    if(b == 0)return a;\n    if(a >= b)return gcd(a % b, b);\n    else return gcd(a, b % a);\n}\nint pow(int a, int b){\n    int ans = 1;\n    while(b){\n        if(b & 1)ans = 1LL * ans * a % mod;\n        a = 1LL * a * a % mod;\n        b >>= 1;\n    }\n    return ans;\n}\nint pow(int a, ll b, int c){\n    int ans = 1;\n    while(b){\n        if(b & 1)ans = 1LL * ans * a % c;\n        a = 1LL * a * a % c;\n        b >>= 1;\n    }\n    return ans;\n}\n\nint ex_gcd(int a, int b, ll &x, ll &y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll x1, y1;\n    int d = ex_gcd(b, a % b, x1, y1);\n    x = y1;\n    y = x1 - a / b * x;\n    return d;\n}\n\nstruct DSU{\n    vi f, sz;\n    int n;\n    DSU(int _n) {\n        n = _n;\n        f.resize(n);\n        sz.resize(n);\n        rep(i, 0, n) f[i] = i, sz[i] = 1;\n    }\n    int find(int a) {\n        return f[a] == a ? a : f[a] = find(f[a]);\n    }\n    int merge(int a, int b) {\n        a = find(a), b = find(b);\n        if (a == b) return 0;\n        if (sz[a] < sz[b]) swap(a, b);\n        f[b] = a;\n        sz[a] += sz[b];\n        return 1;\n    }\n};\n\nint t[N << 2], c[N << 2];\nvoid build(int p, int l, int r) {\n    t[p] = r - l;\n    c[p] = 0;\n    if (l + 1 == r) return;\n    int m = (l + r) >> 1;\n    build(p<<1, l, m);\n    build(p<<1|1, m, r);\n}\nvoid down(int p, int l, int r) {\n    if(c[p]) {\n        int m = (l + r) >> 1;\n        t[p<<1] = max(0LL, t[p<<1] - 1LL * c[p] * (m - l));\n        c[p<<1] += c[p];\n        t[p<<1|1] = max(0LL, t[p<<1|1] - 1LL * c[p] * (r - m));\n        c[p<<1|1] += c[p];\n        c[p] = 0;\n    }\n}\nvoid upd(int p, int l, int r, int x, int y) {\n    if (l >= x && r <= y) {\n        t[p] = max(0, t[p] - (r-l));\n        c[p]++;\n        return;\n    }\n    int m = (l + r) >> 1;\n    down(p, l, r);\n    if (x < m) upd(p<<1, l, m, x, y);\n    if (y > m) upd(p<<1|1, m, r, x, y);\n    t[p] = t[p<<1] + t[p<<1|1];\n}\nint query(int p, int l, int r, int x, int y) {\n    if (l >= x && r <= y) return t[p];\n    int ans = 0;\n    int m = (l + r) >> 1;\n    down(p, l, r);\n    if (x < m) ans = query(p<<1, l, m, x, y);\n    if (y > m) ans += query(p<<1|1, m, r, x, y);\n    return ans;\n}\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        n--;\n        int ans = n;\n        int m = SZ(q);\n        vi res(m);\n        build(1, 0, n);\n        rep(i, 0, m) {\n            int x = q[i][0], y = q[i][1];\n            int k = query(1, 0, n, x, y);\n            if (k > 0) ans -= k-1;\n            res[i] = ans;\n            if (x+1 < y) {\n                upd(1, 0, n, x+1, y);\n            }\n        }\n        return res;\n    }\n};\n",
    "submit_ts": "1722740162",
    "subm_id": "552329634"
}