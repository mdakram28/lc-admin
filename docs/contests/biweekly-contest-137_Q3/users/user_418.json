{
    "username": "donglin0202",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long n = board.size(), m = board[0].size(), ans = LLONG_MIN;\n        vector<vector<pair<long long, long long>>> mx(n, vector<pair<long long, long long>>(m));\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++)\n                mx[i][j] = {board[i][j], j};\n            sort(mx[i].rbegin(), mx[i].rend());\n        }\n        for(int i = 0; i < n; i++){\n            for(int j = i + 1; j < n; j++){\n                for(int k = j + 1; k < n; k++){\n                    for(int ii = 0; ii < 3; ii++){\n                        for(int jj = 0; jj < 3; jj++){\n                            if(mx[i][ii].second == mx[j][jj].second) continue;\n                            for(int kk = 0; kk < 3; kk++){\n                                if(mx[j][jj].second == mx[k][kk].second || mx[i][ii].second == mx[k][kk].second) continue;\n                                ans = max(ans, mx[i][ii].first + mx[j][jj].first + mx[k][kk].first);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723906291",
    "subm_id": "1359045332"
}