{
    "username": "AntonRaichuk",
    "submission": "typedef long double ld;\n \ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<int,pii> p3;\ntypedef pair<ll,ll> pl;\ntypedef pair<int,pl> p3l;\ntypedef pair<double,double> pdd;\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\n \n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define SORT(v) sort((v).begin(),(v).end())\n#define UN(v) SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())\n#define CL(a,b) memset(a,b,sizeof a)\n#define pb push_back\n\n// to_string, stoi, stoll, gcd, __builtin_popcount - already exist\n//\n// unordered_map<int, int> depth;\n// for (auto& [k, v] : depth)\n\nconst int mod = 1000000007;\n\nstruct Node{\n  Node* lf;\n  Node* rg;\n    int l,r;\n    int val;\n    ll res00,res01,res10,res11;\n    Node(){\n        lf=rg=0;\n        \n    }\n    void update(){\n        \n        //00\n        res00=0;\n        res00=max(res00,lf->res00+rg->res00);\n        res00=max(res00,lf->res00+rg->res10);\n        res00=max(res00,lf->res01+rg->res00);\n        //01\n        res01=0;\n        res01=max(res01,lf->res00+rg->res00);\n        res01=max(res01,lf->res00+rg->res01);\n        res01=max(res01,lf->res00+rg->res10);\n        res01=max(res01,lf->res00+rg->res11);        \n        res01=max(res01,lf->res01+rg->res00);\n        res01=max(res01,lf->res01+rg->res01);\n        //10\n        res10=0;\n        res10=max(res10,lf->res00+rg->res00);\n        res10=max(res10,lf->res00+rg->res10);\n        res10=max(res10,lf->res01+rg->res00);\n        res10=max(res10,lf->res10+rg->res00);        \n        res10=max(res10,lf->res10+rg->res10);\n        res10=max(res10,lf->res11+rg->res00);\n        //11\n        res11=0;\n        res11=max(res11,lf->res00+rg->res00);\n        res11=max(res11,lf->res00+rg->res01);\n        res11=max(res11,lf->res00+rg->res10);\n        res11=max(res11,lf->res00+rg->res11);\n        res11=max(res11,lf->res01+rg->res00);\n        res11=max(res11,lf->res01+rg->res01);\n        res11=max(res11,lf->res10+rg->res00);\n        res11=max(res11,lf->res10+rg->res01);\n        res11=max(res11,lf->res10+rg->res10);\n        res11=max(res11,lf->res10+rg->res11);\n        res11=max(res11,lf->res11+rg->res00);\n        res11=max(res11,lf->res11+rg->res01);\n    }\n};\n\nvi nums;\n\nNode* buildTree(int l,int r){\n    Node* c=new Node();\n    c->l=l;\n    c->r=r;\n    if(l==r){\n        c->val=nums[l];\n        c->res00=c->res01=c->res10=0;\n        c->res11=nums[l];\n    }else{\n        c->lf=buildTree(l,(l+r)/2);\n        c->rg=buildTree((l+r)/2+1,r);\n        c->update();\n    }\n    return c;\n}\n\nvoid update(Node* c,int pos,int val){\n    if(pos<c->l || pos>c->r)return;\n    if(c->l==c->r){\n        c->val=val;\n        c->res00=c->res01=c->res10=0;\n        c->res11=val;\n    }else{\n        update(c->lf,pos,val);\n        update(c->rg,pos,val);\n        c->update();\n    }\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& x, vector<vector<int>>& q) {\n        nums=x;\n        Node* root=buildTree(0,x.size()-1);\n        ll res=0;\n        REP(i,q.size()){\n            update(root,q[i][0],q[i][1]);\n            res += max(max(root->res00,root->res01),max(root->res10,root->res11))%mod;\n        }\n        return res%mod;\n    }\n};",
    "submit_ts": 1716693922.0
}