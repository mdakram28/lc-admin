{
    "username": "phungtienminh",
    "submission": "class Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        # f[r] - f[l - 1] >= (g[r] - g[l - 1])^2\n        # f[r] - f[l - 1] >= g[r]^2 + g[l - 1]^2 - 2 * g[r] * g[l - 1]\n        # f[r] - g[r]^2 >= f[l - 1] + g[l - 1]^2 - 2 * g[r] * g[l - 1]\n        # f[r] - g[r]^2 + 2 * g[r] * g[l - 1] >= f[l - 1] + g[l - 1]^2\n        \n        '''\n        f[r] - f[l - 1] >= (r - l + 1 - (f[r] - f[l - 1])) ^ 2\n        f[r] - f[l - 1] >= (r - l + 1 - f[r] + f[l - 1]) ^ 2\n        \n        '''\n        \n        \n        n = len(s)\n        sq = int(n ** 0.5)\n        f = [0] * (n + 1) # one\n        g = [0] * (n + 1) # zero\n        \n        from sortedcontainers import SortedList\n        \n        vec = [SortedList() for _ in range(n + 1)]\n        \n        for i in range(1, n + 1):\n            f[i] = f[i - 1]\n            g[i] = g[i - 1]\n            if s[i - 1] == '1':\n                f[i] += 1\n            else:\n                g[i] += 1\n                            \n        \n        ans = 0\n        vec[g[0]].add(f[0])\n        \n        for r in range(1, n + 1):\n            for zero in range(min(g[r] + 1, sq + 1)):\n                g_l_1 = g[r] - zero\n                f_l_1 = f[r] - zero ** 2\n                idx = vec[g_l_1].bisect_right(f_l_1)\n                ans += idx\n                \n            vec[g[r]].add(f[r])\n        \n        return ans",
    "submit_ts": "1722135873",
    "subm_id": "1335716354"
}