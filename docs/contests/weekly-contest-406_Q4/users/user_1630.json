{
    "username": "dokenobuggy799",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hc, vector<int>& vc) {\n        sort(vc.rbegin(), vc.rend());\n        sort(hc.rbegin(), hc.rend());\n        int h = 0, v = 0, horizontal = 1, vertical = 1;\n        long long int ans = 0;\n        while ( v < vc.size() && h < hc.size()) {\n            if(vc[v] >= hc[h]){\n                ans = ans + (horizontal * vc[v]);\n                v++, vertical++;\n            } else {\n                ans = ans + (vertical * hc[h]);\n                h++, horizontal++;   \n            }\n        }\n        while (v < vc.size()) {\n            ans = ans + (horizontal * vc[v]);\n            v++;\n        }\n        while (h < hc.size()) {\n            ans = ans + (vertical * hc[h]);\n            h++;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1720926285",
    "subm_id": "1320281622"
}