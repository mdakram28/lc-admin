{
    "username": "nevergiveup",
    "submission": "class Solution {\n\n  \n\n    private boolean isPeak(int pos) {\n        if (pos == 0 || pos == nums.length - 1) {\n            return false;\n        }\n        return nums[pos] > nums[pos - 1] && nums[pos] > nums[pos + 1];\n    }\n\n    private void update(int pos , int n , int updateVal) {\n        while (pos <= n) {\n            tree[pos] += updateVal;\n            pos += (pos & (- pos));\n        }\n    }\n\n    private int query(int pos) {\n        int ans = 0;\n        while (pos >= 1) {\n            ans += tree[pos];\n            pos -= (pos & (- pos));\n        }\n        return ans;\n    }\n\n    private void updatePeak(int pos , int val) {\n        int n = nums.length;\n        // remove existing\n        if (pos - 1 >= 0 && isPeak(pos - 1)) {\n            update(pos - 1 + 1 , n , - 1);\n        }\n        if (isPeak(pos)) {\n            update(pos + 1 , n , - 1);\n        }\n        if (pos + 1 < n && isPeak(pos + 1)) {\n            update(pos + 2 , n , - 1);\n        }\n        // update new\n        nums[pos] = val;\n        if (pos - 1 >= 0 && isPeak(pos - 1)) {\n            update(pos - 1 + 1 , n , 1);\n        }\n        if (isPeak(pos)) {\n            update(pos + 1 , n , 1);\n        }\n        if (pos + 1 < n && isPeak(pos + 1)) {\n            update(pos + 2 , n , 1);\n        }\n    }\n\n    private int[] tree;\n    private int[] nums;\n\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        this.nums = nums;\n        List<Integer> ans = new ArrayList<>();\n        int n = nums.length;\n        tree = new int[n + 1];\n        for (int i = 1;i < n - 1;i ++) {\n            if (isPeak(i)) {\n                update(i + 1 , n , 1);\n            }\n        }\n        for (int[] query : queries) {\n            int t = query[0];\n            if (t == 1) {\n                int l = query[1] , r = query[2];\n                l ++;\n                r ++;\n                if (l <= r - 1) {\n                    ans.add(query(r - 1) - query(l));\n                } else {\n                    ans.add(0);\n                }\n            } else {\n                int index = query[1] , val = query[2];\n                updatePeak(index , val);\n            }\n        }\n        return ans;\n    }\n\n\n}",
    "submit_ts": 1718506418.0
}