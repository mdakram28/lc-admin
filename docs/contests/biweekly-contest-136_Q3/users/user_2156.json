{
    "username": "Abhijeet_2004",
    "submission": "  class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size(), cols = matrix[0].size();\n        int minFlips = 0;\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (matrix[rows / 2][cols / 2] == 1) {\n                minFlips += 1;\n            }\n        }\n\n        vector<int> countArray(3, 0);\n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = matrix[rows / 2][left] + matrix[rows / 2][right];\n                countArray[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = matrix[top][cols / 2] + matrix[bottom][cols / 2];\n                countArray[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n        if (countArray[2] % 2 == 1) {\n            if (countArray[1] > 0) {\n                minFlips += countArray[1];\n            } else {\n                minFlips += 2;\n            }\n        } else {\n            minFlips = countArray[1] +  minFlips;\n        }\n\n        for (int mat = 0; mat < rows / 2; mat++) {\n            for (int stat = 0; stat < cols / 2; stat++) {\n                int topLeft = matrix[mat][stat];\n                int bottomLeft = matrix[rows - 1 - mat][stat];\n                int topRight = matrix[mat][cols - 1 - stat];\n                int bottomRight = matrix[rows - 1 - mat][cols - 1 - stat];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    minFlips = min(sum, 4 - sum) + minFlips;\n                }\n            }\n        }\n\n        return minFlips;\n    }\n};\n",
    "submit_ts": "1722700282",
    "subm_id": "1343237110"
}