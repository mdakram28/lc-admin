{
    "username": "ou-hai-ziJHu23dNZ",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        // \u6309\u4f4dand\u4e3ak\n        // \u8981\u4e48\u4e0d\u53d8\uff0c\u8981\u4e48\u6700\u591a\u53d832\u6b21\n        int l = 0;\n        int r = -1;\n        long ans = 0;\n        for (int i = 0; i < nums.length; i++) {\n            if ((nums[i] & k) == k) {\n                if (r == -1) {\n                    l = i;\n                }\n                r = i;\n            } else {\n                if (r >= l) {\n                    ans += solve(nums, k, l, r);\n                }\n                r = -1;\n            }\n        }\n        // yes i\u6240\u6709\u8fde\u7eed\u533a\u95f4\u5224\u65ad\n        if (r >= l) {\n            ans += solve(nums, k, l, r);\n        }\n        return ans;\n    }\n\n    private long solve(int[] nums, int k, int l, int r) {\n        // [l,r]\u533a\u95f4\u7684\u7ec4\u5408\n        // \u6ed1\u52a8\n        long  ans = 0;\n        int[] cnt = new int[31];\n        for (int left = l, right = l; left <= r; left++) {\n            right = Math.max(left, right);\n            // \u521a\u5f00\u59cb\u8981\u5224\u65ad\u4e00\u4e0b\n            if (right != left) {\n                if (get(cnt, right - left) == k) {\n                    // \u7ed3\u7b97\u7b54\u6848\n                    ans += r + 1 - right + 1;\n                    // left\u5c11\u4e86\n                    for (int i = 0; i < 31; i++) {\n                        if ((nums[left] & (1 << i)) > 0) {\n                            cnt[i]--;\n                        }\n                    }\n                    continue;\n                }\n            }\n            // right\u6c38\u8fdc\u662f\u6ca1\u52a0\u4e0a\u7684\n            while (right <= r && judgeRightLegalAndAdd(nums, cnt, left, right, k, left == l)) {\n                right++;\n            }\n            if (right == r + 1) {\n                break;\n            }\n            if (get(cnt, right - left + 1) == k) {\n                ans += r + 1 - right;\n                right++;\n            }\n            // left\u5c11\u4e86\n            for (int i = 0; i < 31; i++) {\n                if ((nums[left] & (1 << i)) > 0) {\n                    cnt[i]--;\n                }\n            }\n\n        }\n        return ans;\n    }\n\n    private int get(int[] cnt, int num) {\n        int ans = 0;\n        for (int i = 0; i < cnt.length; i++) {\n            if (cnt[i] == num) {\n                ans += (1 << i);\n            }\n        }\n        return ans;\n    }\n\n    private boolean judgeRightLegalAndAdd(int[] nums, int[] cnt, int left, int right, int k, boolean start) {\n        // \u5982\u679c\u539f\u6765\u5c31\u884c\uff0c\u5219\u76f4\u63a5false\n        for (int i = 0; i < 31; i++) {\n            if ((nums[right] & (1 << i)) > 0) {\n                cnt[i]++;\n            }\n        }\n        if (get(cnt, right - left + 1) == k) {\n            return false;\n        }\n        return true;\n    }\n}",
    "submit_ts": "1720280757",
    "subm_id": "544573207"
}