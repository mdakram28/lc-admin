{
    "username": "sanjeeb42",
    "submission": "// Refernce : https://www.geeksforgeeks.org/number-of-permutation-with-k-inversions/\n\nconst int MOD = 1e9+7;\n\nclass Solution\n{\nprivate:\n    \n\n    int solve(vector<vector<int>>&dp,unordered_map<int, int>&mp, int index, int inv)\n    {\n        if (index == 0)return inv==0;\n       \n        if (dp[index][inv] != -1)\n        {\n            return dp[index][inv];\n        }\n        int ans = 0;\n        for (int i = 0; i < index; i++)\n        {\n            if(i>inv)break;\n            else ans = (ans + solve(dp,mp,index - 1, inv - i)) % MOD;\n        }\n\n        if (mp.find(index) != mp.end() && mp[index]!=inv)ans=0;\n\n        return dp[index][inv]= ans;\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>> &requirements)\n    {\n        unordered_map<int, int> mp;\n        int m=requirements.size();\n        for (int i=0;i<m;i++)\n        {\n            int end=requirements[i][0]+1,cnt=requirements[i][1];\n            mp[end] = cnt;\n        }\n\n        vector<vector<int>>dp(n + 1, vector<int>(1e3+1,-1)); \n        int ans = 0;\n        for (int inv = 0; inv <= 500; inv++)\n        {\n            ans = (ans + solve(dp,mp,n, inv)) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719071950.0
}