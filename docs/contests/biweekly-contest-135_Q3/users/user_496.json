{
    "username": "markshi07",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        arr1 = nums[:len(nums)//2]\n        arr2 = (nums[len(nums)//2:])[::-1]\n        r=999999999999\n        #print(arr1, arr2)\n        diff=[abs(arr1[i]-arr2[i]) for i in range(len(arr1))]\n        #print(diff)\n        c=Counter(diff)\n        three = c.most_common(3)\n        targets = [i[0] for i in three]\n        #print(targets)\n        for target in targets:\n            l=0\n            for i in range(len(arr1)):\n                if diff[i] != target:\n                    if (0 <= arr2[i] - target <= k) or (0 <= arr2[i] + target <= k):\n                        l += 1\n                    elif (0 <= arr1[i] - target <= k) or (0 <= arr1[i] + target <= k):\n                        l += 1\n                    else:\n                        l += 2\n            r = min(r,l)\n        return r",
    "submit_ts": "1721487633",
    "subm_id": "1327395647"
}