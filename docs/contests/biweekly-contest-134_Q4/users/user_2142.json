{
    "username": "dgzhn",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        i = 0\n        ans = 0\n        while i < n:\n            if nums[i] & k != k:\n                i += 1\n                continue\n            j = i\n            while j < n and nums[j] & k == k:\n                j += 1\n            r = i\n            cnt = [0] * 32\n            for loc in range(i,j):\n                while r < j:\n                    f = 0\n                    for bit in range(32):\n                        if k >> bit & 1 == 0 and cnt[bit] == r - loc:\n                            f = 1\n                            break\n                    if f:\n                        for bit in range(32):\n                            cnt[bit] += nums[r] >> bit & 1\n                        r += 1\n                    else:\n                        break\n                f = 1\n                for bit in range(32):\n                    if k >> bit & 1 and cnt[bit] != r - loc:\n                        f = 0\n                    if k >> bit & 1 == 0 and cnt[bit] == r - loc:\n                        f = 0\n                    cnt[bit] -= nums[loc] >> bit & 1\n                if f:\n                    ans += j - r + 1\n            i = j\n        return ans\n",
    "submit_ts": "1720280905",
    "subm_id": "544573774"
}