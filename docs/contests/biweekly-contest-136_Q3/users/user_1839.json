{
    "username": "Charu_Aggarwal108",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size();\n        int cols = matrix[0].size();\n        int f = 0;\n\n      \n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (matrix[rows / 2][cols / 2] == 1) {\n                f += 1;\n            }\n        }\n\n        vector<int>Flips(3, 0);\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = matrix[top][cols / 2] + matrix[bottom][cols / 2];\n                Flips[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n        \n        if (rows % 2 == 1) {\n            int left = 0, right = cols - 1;\n            while (left < right) {\n                int sum = matrix[rows / 2][left] + matrix[rows / 2][right];\n                Flips[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n       \n        if (Flips[2] % 2 == 1) {\n            if (Flips[1] > 0) {\n                f += Flips[1];\n            } else {\n                f += 2;\n            }\n        } else {\n            f += Flips[1];\n        }\n\n       \n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                 int topR = matrix[i][cols - 1 - j];\n                int bottomR = matrix[rows - 1 - i][cols - 1 - j];\n                int topL = matrix[i][j];\n                int bottomL = matrix[rows - 1 - i][j];\n               \n\n                int s = topL + bottomL + topR + bottomR;\n\n                if (s != 0 and s != 4) {\n                    f += min(s, 4 - s);\n                }\n            }\n        }\n\n        return f;\n    }\n};",
    "submit_ts": "1722699998",
    "subm_id": "1343228602"
}