{
    "username": "imsaurabhkhare",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n         Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int i = horizontalCut.length-1;\n        int j = verticalCut.length-1;\n       // System.out.println(i+\" \"+j);\n        long ans = 0L;\n        long splitH = 1L;\n        long splitV = 1L;\n        while(i>=0 && j>=0){\n            int maxH = horizontalCut[i];\n            int maxV = verticalCut[j];\n           // System.out.println(maxH+\" \"+maxV);\n            if(maxH > maxV){\n                ans += splitV*maxH;\n                splitH++;\n                i--;\n            }else{\n                ans += splitH*maxV;\n                splitV++;\n                j--;\n            }\n        }\n        while(i>=0){\n            ans += splitV*horizontalCut[i];\n            //splitV++;\n            i--;\n        }\n        while(j>=0){\n            ans += splitH*verticalCut[j];\n           // maxH++;\n            j--;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926664",
    "subm_id": "1320292807"
}