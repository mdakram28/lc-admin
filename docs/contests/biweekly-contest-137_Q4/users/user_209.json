{
    "username": "Ketan Raut",
    "submission": "class Solution:\n    def maximumValueSum(self, grid: List[List[int]]) -> int:\n        m,n=len(grid),len(grid[0])\n        mmax=[[] for _ in range(m)]\n        for i in range(m):\n            for j in range(n):\n                if len(mmax[i])>=3 and mmax[i][0][0]<grid[i][j]:\n                    heappop(mmax[i])\n                    heappush(mmax[i],(grid[i][j],j))\n                    continue\n                if len(mmax[i])<3:heappush(mmax[i],(grid[i][j],j))\n        gg=[]\n        for i in range(m):\n            for val,j in mmax[i]:\n                gg.append((val,i,j))\n        gg.sort(reverse=True)\n        temp=gg.copy()\n        gg=[]\n        cc=Counter()\n        for val,i,j in temp:\n            if cc[j]==3: continue\n            cc[j]+=1\n            gg.append((val,i,j))\n            if len(gg)==9: break\n        row,col,rev_row,rev_col={},{},{},{}\n        r,c=set(),set()\n        for _,i,j in gg: r.add(i); c.add(j);\n        r,c=sorted(r),sorted(c)\n        for i,val in enumerate(r): \n            row[i]=val\n            rev_row[val]=i\n        for i,val in enumerate(c):\n            col[i]=val\n            rev_col[val]=i\n        # print(mmax)\n        # print(rev_row,rev_col)\n        @cache\n        def dp(idx,mask_r,mask_c):\n            res=-sys.maxsize\n            if idx==len(gg): \n                cnt1=bin(mask_r)[2:].count(\"1\")\n                cnt2=bin(mask_c)[2:].count(\"1\")\n                # print(mask_r,mask_c,cnt1,cnt2)\n                return 0 if (cnt1==3 and cnt2==3) else -sys.maxsize \n            #ignore\n            res=max(res,dp(idx+1,mask_r,mask_c))\n            val,ri,ci=gg[idx]\n            ir,ic=rev_row[ri],rev_col[ci]\n            #check and take\n            if (mask_r & (1<<ir))==0 and (mask_c & (1<<ic))==0:\n                res=max(res,dp(idx+1,(mask_r | (1<<ir)),(mask_c | (1<<ic)))+val)\n            return res\n        return dp(0,0,0)\n        \n            \n        ",
    "submit_ts": "1723908700",
    "subm_id": "1359163567"
}