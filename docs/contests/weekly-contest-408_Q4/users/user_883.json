{
    "username": "wwwap",
    "submission": "/**\n * @param {number} X\n * @param {number} Y\n * @param {number[][]} circles\n * @return {boolean}\n */\nvar canReachCorner = function(X, Y, circles) {\n  let width = X, height = Y\n  const numCircles = circles.length\n  const circleInfo = circles.map((circle) => [circle[0], circle[1], circle[2]])\n  const adjacencyList = Array.from({ length: numCircles + 4 }, () => [])\n\n  for (let i = 0; i < numCircles; i++) {\n    const [x, y, radius] = circleInfo[i]\n\n    if (x - radius <= 0) {\n      adjacencyList[i].push(numCircles)\n      adjacencyList[numCircles].push(i)\n    }\n    if (width - x <= radius) {\n      adjacencyList[i].push(numCircles + 2)\n      adjacencyList[numCircles + 2].push(i)\n    }\n    if (y - radius <= 0) {\n      adjacencyList[i].push(numCircles + 1)\n      adjacencyList[numCircles + 1].push(i)\n    }\n    if (height - y <= radius) {\n      adjacencyList[i].push(numCircles + 3)\n      adjacencyList[numCircles + 3].push(i)\n    }\n\n    for (let j = i + 1; j < numCircles; j++) {\n      const [x2, y2, radius2] = circleInfo[j]\n      const dx = x - x2\n      const dy = y - y2\n      const distanceSquared = dx * dx + dy * dy\n      const radiusSum = radius + radius2\n\n      if (distanceSquared <= radiusSum * radiusSum) {\n        adjacencyList[i].push(j)\n        adjacencyList[j].push(i)\n      }\n    }\n  }\n\n  function bfs(startNode, targetNode1, targetNode2) {\n    const queue = [startNode]\n    const visited = Array(numCircles + 4).fill(0)\n    visited[startNode] = 1\n\n    while (queue.length > 0) {\n      const currentNode = queue.shift()\n      for (const neighbor of adjacencyList[currentNode]) {\n        if (!visited[neighbor]) {\n          visited[neighbor] = 1\n          queue.push(neighbor)\n        }\n      }\n    }\n    return visited[targetNode1] || visited[targetNode2]\n  }\n\n  return !(\n    bfs(numCircles, numCircles + 1, numCircles + 2) ||\n    bfs(numCircles + 3, numCircles + 2, numCircles + 1)\n  )\n};",
    "submit_ts": "1722139172",
    "subm_id": "1335809994"
}