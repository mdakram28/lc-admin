{
    "username": "Parth Raut",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxi = LLONG_MIN;\n        vector<vector<pair<long long, long long>>> tcell(m);\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, long long>> rcell;\n            for (int j = 0; j < n; ++j) rcell.push_back({board[i][j], j});\n            sort(rcell.rbegin(), rcell.rend());\n            tcell[i] = vector<pair<long long, long long>>(rcell.begin(), rcell.begin() + min(3, n));\n        }\n        \n        for (int i = 0; i < m; ++i) {\n            for (int j = i + 1; j < m; ++j) {\n                for (int k = j + 1; k < m; ++k) {\n                    for (auto& c1 : tcell[i]) {\n                        for (auto& c2 : tcell[j]) {\n                            for (auto& c3 : tcell[k]) {\n                                if (c1.second != c2.second && c1.second != c3.second && c2.second != c3.second) {\n                                    long long sum = c1.first + c2.first + c3.first;\n                                    maxi = max(maxi, sum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return maxi;\n    }\n};\n",
    "submit_ts": "1723908411",
    "subm_id": "1359151461"
}