{
    "username": "itsAbhi91",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        //rows palindromic \n        //columns palindromic \n        //sum of ones must be divisible by 4\n        int n = grid.size(),m=grid[0].size();\n        int soln = 0;\n        vector<int> ones(4,0);\n        vector<int> zeroes(4,0);\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                vector<int> bit(2,0);\n                bit[grid[i][j]]++;\n                bit[grid[i][m-1-j]]++;\n                bit[grid[n-i-1][j]]++;\n                bit[grid[n-i-1][m-1-j]]++;\n                //cout\n                soln += 4 - max(bit[0],bit[1]);\n                //cout<<soln<<\"//\";\n            }\n        }\n        if(m%2==0 && n%2==0) return soln;\n        else if((m&1)==1 && (n&1)==1){\n            int both = 0,ind = 0,one = 0;\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]==0 && grid[n-1-i][m/2]==0) both++;\n                else if(grid[i][m/2]==1 && grid[n-1-i][m/2]==1) one++;\n                else ind++;\n            }\n            for(int i=0;i<m/2;i++){\n                if(grid[n/2][i]==0 && grid[n/2][m-1-i]==0) both++;\n                else if(grid[n/2][i]==1 && grid[n/2][m-1-i]==1) one++;\n                else ind++;\n            }  \n            soln += grid[n/2][m/2];\n            soln += ind;\n            if((one%2)!=0){\n                if(ind<=0) soln += 2;\n            }\n            return soln;\n            // cout<<soln<<\"//\";\n        }\n        //one odd\n        if(m&1){//column odd\n            int both = 0,ind = 0,one = 0;\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]==0 && grid[n-1-i][m/2]==0) both++;\n                else if(grid[i][m/2]==1 && grid[n-1-i][m/2]==1) one++;\n                else ind++;\n            }  \n            soln += ind;\n            if((one%2)!=0){\n                if(ind<=0) soln += 2;\n            }\n        }\n        if(n&1){\n            int both = 0,ind = 0,one = 0;\n            for(int i=0;i<m/2;i++){\n                if(grid[n/2][i]==0 && grid[n/2][m-1-i]==0) both++;\n                else if(grid[n/2][i]==1 && grid[n/2][m-1-i]==1) one++;\n                else ind++;\n            }  \n            soln += ind;\n            if((one%2)!=0){\n                if(ind<=0) soln += 2;\n            }\n        }\n        return soln;\n    }\n};",
    "submit_ts": "1722699564",
    "subm_id": "1343215521"
}