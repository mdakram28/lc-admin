{
    "username": "windlike-man",
    "submission": "class Solution\n{\npublic:\n    int minChanges(vector<int> &nums, int k)\n    {\n        int         n = nums.size();\n        vector<int> done0E(1e5 + 1), done1LE(1e5 + 1);\n        for (int i = 0; i < n / 2; ++i)\n        {\n            int l = nums[i], r = nums[n - i - 1];\n            done0E[abs(l - r)]++;\n            if (l > r)\n                swap(l, r);\n            int maxExpand = max(k - l, r);\n            done1LE[maxExpand]++;\n        }\n        for (int i = 1e5 - 1; i > -1; --i)\n            done1LE[i] += done1LE[i + 1];\n        int ans = INT_MAX;\n        for (int i = 0; i <= 1e5; ++i)\n        {\n            int D0 = done0E[i], D1 = done1LE[i] - done0E[i], D2 = n / 2 - D0 - D1;\n            int cans = D1 + D2 * 2;\n            ans = min(ans, cans);\n        };\n        return ans;\n    }\n};",
    "submit_ts": "1721488236",
    "subm_id": "548313467"
}