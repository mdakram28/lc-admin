{
    "username": "wayjiang",
    "submission": "class Solution {\npublic:\n    class Trie {\n    public:\n        struct TrieNode {\n            bool isWord;\n            TrieNode* next[26];\n            int cost = 1e9;\n        };\n        TrieNode* root = new TrieNode();\n        void addWord(string w, int cost) {\n            auto p = root;\n            for (char c : w) {\n                if (!p->next[c - 'a'])\n                    p->next[c - 'a'] = new TrieNode();\n                p = p->next[c - 'a'];\n            }\n            p->isWord = true;\n            p->cost = min(p->cost, cost);\n        }\n    };\n    \n    int minimumCost(string s, vector<string>& words, vector<int>& costs) {\n        Trie t;\n        for (int i = 0; i < words.size(); ++i)\n            t.addWord(words[i], costs[i]);\n\n        int n = s.size();\n        int f[n + 1]; memset(f, 0x3f, sizeof(f));\n        f[0] = 0;\n        for (int i = 0; i < n; ++i) {\n            if (f[i] > 1e9) continue;\n            auto p = t.root;\n            for (int j = i; j < n; ++j) {\n                if (!p->next[s[j] - 'a']) break;\n                p = p->next[s[j] - 'a'];\n                if (p->isWord)\n                    f[j + 1] = min(f[j + 1], f[i] + p->cost);\n            }\n        }\n        return f[n] > 1e9 ? -1 : f[n];\n    }\n};",
    "submit_ts": "1720321901",
    "subm_id": "1312335312"
}