{
    "username": "impiry",
    "submission": "public class Solution {\n    public int WaysToReachStair(int k)\n    {\n        var dp = new Dictionary<(int, int, bool), int>();\n\n        return Solve(1, 1, true);\n\n        int Solve(int current, int jump, bool canGoBack)\n        {\n            if (current - 1 > k)\n            {\n                return 0;\n            }\n\n            if (current == k)\n            {\n                var res = 1;\n\n                if (jump == 1)\n                {\n                    // jump up and go back.\n                    res++;\n\n                    if (canGoBack)\n                    {\n                        // go back and jump\n                        res++;\n                    }\n                    \n                    // to handle case with jump = 2\n                    jump *= 2;\n                }\n\n                if (jump == 2 && canGoBack)\n                {\n                    // go back, jump, go back.\n                    res++;\n                }\n\n                return res;\n            }\n\n            if (dp.ContainsKey((current, jump, canGoBack)))\n            {\n                return dp[(current, jump, canGoBack)];\n            }\n\n            var result = Solve(current + jump, jump * 2, true);\n\n            if (canGoBack)\n            {\n                result += Solve(current - 1, jump, false);\n            }\n\n            dp[(current, jump, canGoBack)] = result;\n            return result;\n        }\n    }\n}",
    "submit_ts": 1716090198.0
}