{
    "username": "jithin420",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        i=0\n        res=float('inf')\n        zeros=[0]*30\n\n        def add(x):\n            b=bin(x)[2:][::-1]\n            for i in range(30):\n                if i<len(b):\n                    if b[i]=='0':\n                        zeros[i]+=1\n                else:\n                    zeros[i]+=1\n        \n        def remove(x):\n            b=bin(x)[2:][::-1]\n            for i in range(30):\n                if i<len(b):\n                    if b[i]=='0':\n                        zeros[i]-=1\n                else:\n                    zeros[i]-=1\n\n        def val():\n            ans=0\n            for i in range(30):\n                if not zeros[i]:\n                    ans = ans + (1 << i)\n            return ans\n\n        for j, x in enumerate(nums):\n            add(x)\n            while i<j and val() < k:\n                res=min(res, abs(val()-k))\n                remove(nums[i])\n                i+=1\n            # print(j, i, val(), zeros)\n            res=min(res, abs(val()-k))\n        return res\n                ",
    "submit_ts": 1717299426.0
}