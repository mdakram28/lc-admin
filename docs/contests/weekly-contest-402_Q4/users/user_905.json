{
    "username": "thomas87666",
    "submission": "class BinIndexTree:\n    def __init__(self, size_or_nums):\n        if isinstance(size_or_nums, int):\n            self.size = size_or_nums\n            self.c = [0 for _ in range(self.size + 5)]\n\n    def add_point(self, i, v):  # \u5355\u70b9\u589e\u52a0,\u4e0b\u6807\u4ece1\u5f00\u59cb\n        # print(i,v)\n        while i <= self.size:\n            self.c[i] += v\n            i += i & -i\n\n    def sum_prefix(self, i):  # \u524d\u7f00\u6c42\u548c\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb\n        s = 0\n        while i >= 1:\n            s += self.c[i]\n            # i -= i&-i\n            i &= i - 1\n        return s\n\n    def sum_interval(self, l, r):  # \u533a\u95f4\u6c42\u548c\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb,\u8ba1\u7b97\u95ed\u533a\u95f4[l,r]\u4e0a\u7684\u548c\n        return self.sum_prefix(r) - self.sum_prefix(l - 1)\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        bnt = BinIndexTree(len(nums))\n        cnt = [0] * len(nums)\n        for i in range(1,len(nums)-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                cnt[i] = 1\n                bnt.add_point(i, 1)\n        \n        ans = []\n        def check(l):\n            if 0 < l < len(nums) - 1:\n                if nums[l] > nums[l-1] and nums[l] > nums[l+1]:\n                    if cnt[l] == 0:\n                        bnt.add_point(l,1)\n                        cnt[l] = 1\n                elif cnt[l] == 1:\n                    bnt.add_point(l,-1)\n                    cnt[l] = 0\n                \n        for idx, l, r in queries:\n            if idx == 1:\n                if r - l < 2:\n                    ans.append(0)\n                else:\n                    ans.append(bnt.sum_interval(l+1,r-1))\n            else:\n                nums[l] = r\n                check(l)\n                if l < len(nums)-1:\n                    check(l+1)\n                if l > 0:\n                    check(l-1)\n        \n        return ans\n                \n",
    "submit_ts": "1718507862",
    "subm_id": "539783906"
}