{
    "username": "ritik_369",
    "submission": "#define int long long\nmap < array < int , 3 >  , int > dp ; \nint f(int cur , int p , int jump , int k)\n{\n   if(dp.count({cur , p , jump}))return dp[{cur , p , jump}] ; \n   if(cur > k + 1)return 0 ; \n   if(cur < 0)return 0 ;  \n   int res = (cur == k) ; \n   res += (f(cur + (1ll << jump) , 0 , jump + 1 , k)) ; \n   if(p == 0)\n      res += (f(cur - 1 , 1 , jump , k)) ; \n   return dp[{cur , p , jump}] = res ; \n}\n#undef int\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        dp.clear();\n        return f(1,0,0,k);\n    }\n};",
    "submit_ts": 1716087541.0
}