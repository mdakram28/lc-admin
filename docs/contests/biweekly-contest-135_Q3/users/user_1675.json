{
    "username": "harsh-sharma036",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        // int n = nums.size();\n        // int maxi = *max_element(nums.begin(), nums.end());\n        // if(k >= maxi){\n        //    int cnt = 0;\n        //    int sum = abs(nums[0] - nums[n-1]);\n        //    for(int i = 1; i<n-1; i++){\n        //       if(abs(nums[i] - nums[n-i-1]) == sum){\n\n        //       }\n        //       else{\n        //         cnt++;\n        //       }\n        //    }\n\n        //    return cnt;\n        // }\n\n        // return n;\n\n       map<int, vector<int>> mpp;\n       vector<int> exp;\n \n        for (int i = 0; i < nums.size() / 2; i++) {\n            int x = nums[i];\n            int y = nums[nums.size() - i - 1];\n            int dif = abs(x - y);\n\n             int ele = max({x, y, k - x, k - y});\n\n             mpp[dif].push_back(ele);\n             exp.push_back(ele);\n        }\n\n        int res = nums.size();  \n        sort(exp.begin(), exp.end());\n\n        for (const auto& [dif, value] : mpp) {\n            int l = lower_bound(exp.begin(), exp.end(), dif) - exp.begin();\n            l = l * 2 + (nums.size() / 2 - l);\n\n            for (const auto& tri : value) {\n                if (tri < dif) {\n                    l -= 2;\n                } else {\n                    l -= 1;\n                }\n            }\n\n            res = min(res, l);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721489128",
    "subm_id": "1327443748"
}