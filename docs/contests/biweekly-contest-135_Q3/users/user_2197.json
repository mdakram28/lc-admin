{
    "username": "Poushikv2",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        // / int n = nums.size();\n        // // int ans =n;\n\n        map<int, vector<int>> m;\n        vector<int> v;\n \n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int a = nums[i];\n            int b = nums[nums.size() - i - 1];\n            int diff = abs(a - b);\n\n             int X = max({a, b, k - a, k - b});\n\n             m[diff].push_back(X);\n            v.push_back(X);\n        }\n\n        int ans = nums.size();  \n        sort(v.begin(), v.end());\n\n        for (const auto& [diff, values] : m) {\n            int temp = lower_bound(v.begin(), v.end(), diff) - v.begin();\n            temp = temp * 2 + (nums.size() / 2 - temp);\n\n            for (const auto& X : values) {\n                if (X < diff) {\n                    temp -= 2;\n                } else {\n                    temp -= 1;\n                }\n            }\n\n            ans = min(ans, temp);\n        }\n\n        return ans;\n\n        \n        // for (int j = 0; j <= k; j++) {\n        //     int temp = 0;\n        //     for (int i = 0; i < n / 2; ++i) {\n        //         int left = nums[i];\n        //         int right = nums[n - i - 1];\n        //         int diff = abs(left - right);\n\n        //         if (diff != j) {\n        //             int changeCost = 2;\n        //             if (left <= j && j <= right || right <= j && j <= left) {\n        //                 changeCost = 1;\n        //             }\n\n        //             temp += changeCost;\n        //         }\n        //     }\n        //     ans= min(ans, temp);\n        // }\n\n        // return ans;\n    }\n};\n",
    "submit_ts": "1721489918",
    "subm_id": "1327467638"
}