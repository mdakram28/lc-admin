{
    "username": "kaname_asuka",
    "submission": "class Trie:\n    def __init__(self):\n        self.children = dict()\n        self.cost = inf\n    \n    def insert(self, w, c):\n        node = self\n        for ch in w:\n            if ch not in node.children:\n                node.children[ch] = Trie()\n            node = node.children[ch]\n        node.cost = min(node.cost, c)\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        word_trie = Trie()\n        for w, c in zip(words, costs):\n            word_trie.insert(w, c)\n        dp = [inf] * (n + 1)\n        dp[n] = 0\n        for i in range(n - 1, -1, -1):\n            node = word_trie\n            for j in range(i, n):\n                if target[j] not in node.children:\n                    break\n                node = node.children[target[j]]\n                dp[i] = min(dp[i], dp[j + 1] + node.cost)\n        if dp[0] == inf:\n            return -1\n        return dp[0]\n                ",
    "submit_ts": "1720320971",
    "subm_id": "1312309813"
}