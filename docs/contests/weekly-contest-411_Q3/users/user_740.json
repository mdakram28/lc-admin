{
    "username": "Aaryan Saraswat",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define loop(i, a, n) for (lli i = (a); i < (n); ++i)\n#define loopD(i, a, n) for (lli i = (a); i >= (n); --i)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define sz(a) ((int)a.size())\n#define YES cout << \"YES\" << endl;\n#define NO cout << \"NO\" << endl;\n#define endl '\\n'\n#define fastio std::ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n#define pb push_back\n#define pp pop_back()\n#define fi first\n#define si second\n#define v(a) vector<int>(a)\n#define vv(a) vector<vector<int>>(a)\n#define present(c, x) ((c).find(x) != (c).end())\n#define set_bits __builtin_popansll\n#define MOD 1000000007\n// #define int long long\n\ntypedef long long lli;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<lli, lli> pll;\ntypedef pair<int, int> pii;\ntypedef unordered_map<int, int> umpi;\ntypedef map<int, int> mpi;\ntypedef vector<pii> vp;\ntypedef vector<lli> vll;\ntypedef vector<vll> vvll;\n\nclass Solution\n{\n\npublic:\n    static const int maxn = 100100;\n\n    bool chck1(int k)\n    {\n        return (k == 1 || k == 3 || k == 9);\n    }\n\n    string largestPalindrome(int n, int k)\n    {\n        if (chck1(k))\n            return string(n, '9');\n\n        string ans(n, '9');\n        if (k == 2 and n == 1)\n            return \"8\";\n        if (k == 2)\n        {\n            ans[0] = ans[n - 1] = '8';\n            return ans;\n        }\n\n        if (k == 5 and n == 1)\n            return \"5\";\n\n        if (k == 5)\n        {\n            ans[0] = ans[n - 1] = '5';\n            return ans;\n        }\n        if (k == 4 and n <= 3)\n        {\n            return string(n, '8');\n        }\n        if (k == 4 and n > 3)\n        {\n\n            ans[0] = ans[n - 1] =\n                ans[1] =\n                    ans[n - 2] = '8';\n            return ans;\n        }\n        if (k == 8)\n        {\n            if (n <= 5)\n            {\n                string result(n, '8');\n                return result;\n            }\n            string result(n, '9');\n            result[0] = '8';\n            result[n - 1] = '8';\n            result[1] = '8';\n            result[n - 2] = '8';\n            result[2] = '8';\n            result[n - 3] = '8';\n            return result;\n        }\n\n        string tt = babuuu(n, k, ans);\n        if (tt != \"\")\n            return tt;\n\n        tt = ishuuu(n, k);\n        return tt;\n\n        return \"\";\n    }\n\n    string babuuu(int n, int k, string &ans)\n    {\n        if (k == 6)\n        {\n\n            if (n > 3)\n            {\n\n                ans[0] = '8';\n                ans[n - 1] = '8';\n                if (n % 2 == 1)\n                {\n                    ans[n / 2] = '8';\n                }\n                else\n                {\n                    ans[n / 2] = '7';\n                    ans[(n / 2) - 1] = '7';\n                }\n                return ans;\n            }\n            else\n            {\n                if (n == 1)\n                    return \"6\";\n\n                if (n == 2)\n                    return \"66\";\n\n                return \"888\";\n            }\n        }\n        return \"\";\n    }\n\n    void filll()\n    {\n        fill(&dp[0][0], &dp[0][0] + sizeof(dp), 0);\n        fill(&dp1[0][0], &dp1[0][0] + sizeof(dp1), 0);\n    }\n\n    string ishuuu(int n, int k)\n    {\n        if (k == 7 and n == 1)\n            return \"7\";\n        if (k == 7)\n        {\n            filll();\n            for (int i = 1; i < 10; ++i)\n            {\n                dp[1][i % 7] = '0' + i;\n                if (i != 0)\n                    dp1[1][i % 7] = '0' + i;\n            }\n\n            int bm = 10 % 7;\n            loop(i, 0, 100009)\n                takshu(i, bm);\n\n            int q = n;\n            string strt(1, dp1[q][0]);\n            string stop(1, dp1[q][0]);\n            int mod = tto[q][0];\n            q -= 2;\n            while (q)\n            {\n                strt += dp[q][mod];\n                if (q <= 1)\n                    break;\n                else\n                    stop += dp[q][mod];\n                mod = nxt_mod[q][mod];\n                q -= 2;\n            }\n            reverse(all(stop));\n            string ans = strt + stop;\n            return ans;\n        }\n        return \"\";\n    }\n\n    void takshu(int i, int &bm)\n    {\n        for (int j = 0; j < 7; ++j)\n        {\n            if ((i == 0 && j != 0) || (i > 0 && dp[i][j] == 0))\n            {\n                continue;\n            }\n            for (int k = 9; k >= 0; --k)\n            {\n                int nm = (bm * k + k + j * 10) % 7;\n                if (dp[i + 2][nm] == 0 || dp[i + 2][nm] < '0' + k)\n                {\n                    dp[i + 2][nm] = '0' + k;\n                    nxt_mod[i + 2][nm] = j;\n                }\n                if (k != 0)\n                    if (dp1[i + 2][nm] == 0 || dp1[i + 2][nm] < '0' + k)\n                    {\n                        dp1[i + 2][nm] = '0' + k;\n                        tto[i + 2][nm] = j;\n                    }\n            }\n        }\n        bm = (bm * 10) % 7;\n    }\n\nprivate:\n    char dp[maxn][9], dp1[maxn][9];\n    int nxt_mod[maxn][9];\n    int tto[maxn][9];\n};",
    "submit_ts": "1723952216",
    "subm_id": "1359790875"
}