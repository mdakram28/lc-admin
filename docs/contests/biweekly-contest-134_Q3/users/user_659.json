{
    "username": "ConGod2623",
    "submission": "class Solution { \npublic: \n    int numberOfAlternatingGroups(std::vector<int>& colors, int k) { \n        int n = colors.size(); \n        int cnt = 0; \n \n        if (k == 1) { \n            return n; \n        } \n \n        int shift = 1; \n        int i = 1; \n        while (i < n + k - 1) { \n            int current = i; \n            int previous = i - 1; \n \n            if (current >= n) { \n                current -= n; \n            } \n            if (previous >= n) { \n                previous -= n; \n            } \n \n            if (colors[current] != colors[previous]) { \n                shift++; \n            } else { \n                shift = 1; \n            } \n \n            if (shift >= k) { \n                cnt++; \n            } \n \n            i++; \n        } \n \n        return cnt; \n    } \n};\n\n\n/*class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors) {\n        int ans=0;\n        int n=colors.size();\n        //using sliding window\n        for(int i=0;i<n;i++){\n            int pre=colors[(i-1+n)%n];\n            int cur=colors[i];\n            int post=colors[(i+1)%n];\n            if(pre!=cur && cur!=post) ans++;\n        }\n        return ans;\n    }\n};*/",
    "submit_ts": "1720279539",
    "subm_id": "1311755201"
}