{
    "username": "wangchaohui",
    "submission": "class Solution {\n    fun minimumSum(grid: Array<IntArray>): Int {\n        val n = grid.size\n        val m = grid[0].size\n\n        fun ans1(iBegin: Int, iEnd: Int, jBegin: Int, jEnd: Int): Int {\n            var iMax = 0\n            var iMin = Int.MAX_VALUE\n            var jMax = 0\n            var jMin = Int.MAX_VALUE\n            for (i in iBegin until iEnd) {\n                for (j in jBegin until jEnd) {\n                    if (grid[i][j] == 1) {\n                        iMin = iMin.coerceAtMost(i)\n                        iMax = iMax.coerceAtLeast(i)\n                        jMin = jMin.coerceAtMost(j)\n                        jMax = jMax.coerceAtLeast(j)\n                    }\n                }\n            }\n            if (iMin == Int.MAX_VALUE) return 0\n            return (iMax - iMin + 1) * (jMax - jMin + 1)\n        }\n\n        fun ans2(iBegin: Int, iEnd: Int, jBegin: Int, jEnd: Int): Int {\n            var ans = Int.MAX_VALUE\n            for (i in iBegin + 1..<iEnd) {\n                ans = ans.coerceAtMost(ans1(iBegin, i, jBegin, jEnd) + ans1(i, iEnd, jBegin, jEnd))\n            }\n            for (j in jBegin + 1..<jEnd) {\n                ans = ans.coerceAtMost(ans1(iBegin, iEnd, jBegin, j) + ans1(iBegin, iEnd, j, jEnd))\n            }\n            return ans\n        }\n\n        var ans = Int.MAX_VALUE\n        for (i in 1..<n) {\n            val t1 = ans1(0, i, 0, m)\n            val t2 = ans2(i, n, 0, m)\n            ans = ans.coerceAtMost(t1 + t2)\n            ans = ans.coerceAtMost(ans2(0, i, 0, m) + ans1(i, n, 0, m))\n        }\n        for (j in 1..<m) {\n            ans = ans.coerceAtMost(ans1(0, n, 0, j) + ans2(0, n, j, m))\n            ans = ans.coerceAtMost(ans2(0, n, 0, j) + ans1(0, n, j, m))\n        }\n        return ans\n    }\n}",
    "submit_ts": 1719112870.0
}