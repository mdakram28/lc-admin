{
    "username": "Shiva_3834",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#include <vector>\n#include <set>\n#include <iostream>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> d = initD(n);\n        set<int> p = initP(n);\n        vector<int> res;\n\n        for (const auto& qry : q) {\n            int l = qry[0], r = qry[1];\n            processQry(l, r, p, res);\n        }\n\n        return res;\n    }\n\nprivate:\n    vector<int> initD(int n) {\n        vector<int> d(n, 0);\n        for (int i = 1; i < n; ++i) {\n            d[i] = d[i - 1] + 1;\n        }\n        return d;\n    }\n\n    set<int> initP(int n) {\n        set<int> p;\n        for (int i = 0; i < n; ++i) {\n            p.insert(i);\n        }\n        return p;\n    }\n\n    void processQry(int l, int r, set<int>& p, vector<int>& res) {\n        auto lb = p.lower_bound(l + 1);\n        auto ub = p.lower_bound(r);\n        eraseRng(lb, ub, p);\n        updateRes(p, res);\n    }\n\n    void eraseRng(set<int>::iterator lb, set<int>::iterator ub, set<int>& p) {\n        p.erase(lb, ub);\n    }\n\n    void updateRes(const set<int>& p, vector<int>& res) {\n        res.push_back(p.size() - 1);\n    }\n};\n\n\n",
    "submit_ts": "1722743820",
    "subm_id": "1343800409"
}