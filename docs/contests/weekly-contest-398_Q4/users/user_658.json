{
    "username": "Ar_2000",
    "submission": "class Solution {\npublic:\n    unordered_map<string,int> dp;\n    \n    string getKey (int cp, int jump, int canMinus1) {\n        return to_string(cp) + \"$\" + to_string(jump) + \"$\" +to_string(canMinus1);\n    }\n    \n    int sol(int cp, int jump, bool canMinus1, int k) {\n        if (cp > k+1) return 0;\n        \n        if (dp.find(getKey(cp,jump,canMinus1)) != dp.end()) return dp[getKey(cp,jump,canMinus1)];\n            \n        int ans = 0;\n        if (cp == k) ans = 1;\n        \n        if (canMinus1 && cp != 0) {\n            ans += sol(cp-1, jump, false, k);\n        } \n        \n        if (jump < 32) {\n            //cout << \"h2\" << \" \" << cp << \" \" << jump << \" \" << cp+pow(2,jump)<< endl;\n            ans += sol(cp+pow(2,jump), jump+1, true, k);\n        }\n        \n        //cout << getKey(cp, jump, canMinus1) << \" \" << ans << endl;\n        dp[getKey(cp,jump,canMinus1)] = ans;\n        return ans;\n    }\n    \n    int waysToReachStair(int k) {\n        return sol(1, 0, 1, k);\n    }\n};",
    "submit_ts": 1716089513.0
}