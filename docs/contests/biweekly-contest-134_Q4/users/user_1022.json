{
    "username": "raj_singh35",
    "submission": "class Solution {\npublic:\n    int mx_bits = 0;\n    long long is_valid(int mid , int ind , vector<vector<int>> &hsh){\n        int len = mid - ind + 1;\n        long long cal = 0;\n        for(int j = 0 ; j < 32 ; j++){\n            int tum = hsh[mid][j];\n            if(ind) tum -= hsh[ind - 1][j];\n            if(tum == len) cal |= (1 << j);\n        }\n        return cal;\n    }\n    int longest(int ind , int k , vector<vector<int>> &hsh){\n        int high = hsh.size() - 1 , low = ind;\n        while(high - low > 1){\n            int mid = (high + low) >> 1;\n            long long cal = is_valid(mid ,ind, hsh);\n            if(cal == k) low = mid;\n            else{\n                if(cal > k) low = mid;\n                else high = mid;\n            }\n        }\n        long long cal = is_valid(high ,ind, hsh);\n        if(cal == k) return high;\n        cal = is_valid(low , ind , hsh);\n        if(cal == k) return low;\n        return -1;\n    }\n    \n    int closest(int ind , int k, vector<vector<int>> &hsh){\n        int high = hsh.size() - 1 , low = ind;\n        while(high - low > 1){\n            int mid = (high + low) >> 1;\n            long long cal = is_valid(mid ,ind, hsh);\n            if(cal == k) high = mid;\n            else{\n                if(cal > k) low = mid;\n                else high = mid;\n            }\n        }\n        long long cal = is_valid(low ,ind, hsh);\n        if(cal == k) return low;\n        cal = is_valid(high , ind , hsh);\n        if(cal == k) return high;\n        return -1;\n    }\n    \n    long long countSubarrays(vector<int>& v, int k) {\n        vector<vector<int>> bits;\n        vector<int> hsh(32 , 0);\n        mx_bits = 0;\n        for(int i = 0; i < v.size() ; i++){\n            for(int j = 0 ; j < 32 ; j++){\n                if(v[i] & (1 << j)){\n                    hsh[j]++;\n                    mx_bits = j;\n                }\n            }\n            bits.push_back(hsh);\n        }\n        long long ans = 0;\n        for(int i = 0 ; i < v.size() ; i++){\n            int r = longest(i , k , bits);\n            if(r == -1) continue;\n            int l = closest(i , k , bits);\n            ans += r + 1LL - l;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720279730",
    "subm_id": "1311762853"
}