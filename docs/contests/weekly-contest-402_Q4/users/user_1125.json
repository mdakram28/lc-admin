{
    "username": "one-piece-3e",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        \n        int n = nums.size();\n        auto a = nums;\n        a.insert(a.begin(),0);\n        std::vector<int>b(n+1),tree(n+1);\n\n        auto add = [&](int x,int y){\n            for(int i=x;i<=n;i+=i&-i)tree[i] += y;\n        };\n\n        auto ask = [&](int x){\n            int res =0 ;\n            for(int i=x;i;i-=i&-i)res += tree[i];\n            return res;\n        };\n        \n        auto change = [&](int idx){\n            if(idx<1||idx>n)return ;\n            int tb = (idx>1&&idx<n)&&(a[idx]>a[idx-1]&&a[idx]>a[idx+1]);\n            add(idx,tb-b[idx]);\n            \n            // std::cout<<idx<<\" \"<<b[idx]<<\" \"<<tb<<'\\n';\n            b[idx] = tb;\n        };\n\n        for(int i=2;i+1<=n;i++){\n            b[i] = a[i]>a[i-1]&&a[i]>a[i+1];\n            add(i,b[i]);\n        }\n        std::vector<int>ans;\n        for(int i=0;i<queries.size();i++){\n            auto[o,p,q] = std::make_tuple(queries[i][0],queries[i][1],queries[i][2]);\n            if(o==1){\n                p++;\n                q++;\n                p+=1;\n                q-=1;\n                if(p>q){\n                    ans.push_back(0);\n                }else\n                    ans.push_back(ask(q)-ask(p-1));\n                // std::cout<<ask(p)-ask(q-1)<<'\\n';\n                \n            }else{\n                int idx = p+1;\n                int val = q;\n                a[idx] = val;\n                change(idx);\n                change(idx+1);\n                change(idx-1);\n                // int tb = (idx>1&&idx<n)&&(a[idx]>a[idx-1]&&a[idx]>a[idx+1]);\n                // add(idx,tb-b[idx]);\n                // // std::cout<<tb<<\" \"<<b[idx]<<'\\n';\n                // b[idx] = tb;\n            }\n        }\n        return  ans;\n    }\n};",
    "submit_ts": "1718508404",
    "subm_id": "539787125"
}