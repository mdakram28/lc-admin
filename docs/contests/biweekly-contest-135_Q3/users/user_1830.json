{
    "username": "dwrik",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int max = -1;\n        int n = nums.length;\n        var map = new HashMap<Integer, Integer>();\n\n        for (int i = 0; i < n - i - 1; i++) {\n            int diff = Math.abs(nums[i] - nums[n - i - 1]);\n            map.put(diff, map.getOrDefault(diff, 0) + 1);\n            if (map.get(diff) > map.getOrDefault(max, -1)) {\n                max = diff;\n            }\n        }\n\n        var xs = new ArrayList<Integer>();\n\n        for (var entry : map.entrySet()) {\n            if (entry.getValue() == map.get(max) || entry.getValue() == map.get(max) - 1) {\n                xs.add(entry.getKey());\n            }\n        }\n\n        int minOps = Integer.MAX_VALUE;\n\n        for (int x : xs) {\n            int ops = 0;\n            for (int i = 0; i < n - i - 1; i++) {\n                int f = nums[i];\n                int l = nums[n - i - 1];\n                int diff = Math.abs(f - l);\n                if (diff != x) {\n                    int d = Math.abs(x - diff);\n                    int f1 = f + d;\n                    int f2 = f - d;\n                    int l1 = l + d;\n                    int l2 = l - d;\n                    if (Math.abs(f1 - l) == x && isValid(f1, k)\n                            || Math.abs(f2 - l) == x && isValid(f2, k)\n                            || Math.abs(f - l1) == x && isValid(l1, k)\n                            || Math.abs(f - l2) == x && isValid(l2, k)) {\n                        ops += 1;\n                    } else {\n                        ops += 2;\n                    }\n                }\n            }\n            minOps = Math.min(minOps, ops);\n        }\n\n        return minOps;\n    }\n\n    private boolean isValid(int i, int k) {\n        return i >= 0 && i <= k;\n    }\n}",
    "submit_ts": "1721489258",
    "subm_id": "1327447810"
}