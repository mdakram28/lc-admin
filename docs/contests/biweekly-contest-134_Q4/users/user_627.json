{
    "username": "khem_404",
    "submission": "int st[33][100009];\nint find(int L,int R)\n{\n    int i = log2(R - L + 1);\n    int ad = st[i][L]& st[i][R - (1 << i) + 1];\n    return ad;\n}\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int sz = nums.size();\n        copy(nums.begin(), nums.end(), st[0]);\n\n        for (int i = 1; (1 << i) <= sz; i++)\n            for (int j = 0; j + (1 << i) <= sz; j++)\n                st[i][j] = st[i - 1][j] & st[i - 1][j + (1 << (i - 1))];\n        \n        long long ans =0;\n        for(int i=0;i<nums.size();i++)\n        {\n            int l=0,r=i;\n            int mid;\n            while(l<=r)\n            {\n                mid=(l+r)/2;\n                if(find(mid,i)>k)\n                {\n                    r=mid-1;\n                }\n                else\n                l=mid+1;\n            }\n            int right = r;\n            l=0,r=i;\n           // cout<<find(2,7)<<endl;\n            while(l<=r)\n            {\n                mid=(l+r)/2;\n                if(find(mid,i)>=k)\n                {\n                    r=mid-1;\n                }\n                else\n                l=mid+1;\n            }\n            int left = l;\n          //   cout<<right<<' '<<left<<endl;\n            ans+=(right-left+1);\n          //  cout<<ans<<' ';\n        }\n        return ans;\n    }\n};\n\n// 0101\n// 0101\n// 0111\n// 1010\n// 0110\n// 0000\n// 0010\n// 0010",
    "submit_ts": "1720279633",
    "subm_id": "1311759027"
}