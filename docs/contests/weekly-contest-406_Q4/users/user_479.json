{
    "username": "festive-pasteurfsq",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int col = 1, row = 1;\n        List<int[]> list = new ArrayList<>();\n        for (int i = 0; i < horizontalCut.length; i ++) {\n            list.add(new int[]{horizontalCut[i], 0});\n        }\n        for (int i = 0; i < verticalCut.length; i ++) {\n            list.add(new int[]{verticalCut[i], 1});\n        }\n        list.sort((a, b) -> b[0] - a[0]);\n        long ans = 0;\n        for (int[] arr: list) {\n            if (arr[1] == 0) {\n                ans += arr[0] * row;\n                col ++;\n            } else {\n                ans += arr[0] * col;\n                row ++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925564",
    "subm_id": "546440332"
}