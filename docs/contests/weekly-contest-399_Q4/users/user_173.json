{
    "username": "dakshdixit183",
    "submission": "#define ll long long\n#define mod 1000000007\n\n\nstruct item{\n    int val,leftval,rightval,mid;    //Node Change\n};\n\nstruct segTree{\n    int size;\n    int lind,rind;\n    vector<item> values;\n    item NEUTRAL_ELEMENT = {0,0,0,0}; //Basic Change \n\n    segTree(int n,int l,int r){\n        size=1;\n        while(size<n){\n            size*=2;\n        }\n        values.resize(2*size);\n        lind=l;\n        rind=r;\n    }\n\n    item merge(item l, item r){\n        return{\n            max({l.val+r.rightval,l.leftval+r.val,l.leftval+r.rightval,0})%mod,\n            max({l.val+r.mid,l.leftval+r.leftval,0})%mod,\n            max({r.val+l.mid,r.rightval+l.rightval,0})%mod,\n            max({l.mid+r.leftval,r.mid+l.rightval,0})%mod\n        };\n    }\n\n    item single(int v){\n        return {max(v,0),0,0,0};  //Node Change\n    }\n\n    void build(vector<int> &a,int x, int lx, int rx){\n        if(lx==rx){\n            values[x]=single(a[lx]);\n            return;\n        }\n        int m = (lx+rx)/2;\n        build(a,2*x+1,lx,m);\n        build(a,2*x+2,m+1,rx);\n        values[x] = merge(values[2*x+1],values[2*x+2]);\n\n    }\n\n    void build(vector<int> &a){\n        build(a,0ll,lind,rind);\n    }\n\n    void build(int x,int lx, int rx){\n        if(lx==rx){   \n            values[x] = NEUTRAL_ELEMENT;\n            return;\n        }\n        int m = (lx+rx)/2;\n        build(2*x+1,lx,m);\n        build(2*x+2,m+1,rx);\n        values[x] = merge(values[2*x+1],values[2*x+2]);\n    }\n\n    void build(){\n        build(0,lind,rind);\n    }\n\n    void set(int i, int v, int x, int lx, int rx){\n        if(rx==lx){\n            values[x] = single(v);\n            return;\n        }\n        int m = (lx+rx)/2;\n        if(i<=m){\n            set(i,v,2*x+1,lx,m);\n        }\n        else{\n            set(i,v,2*x+2,m+1,rx);\n        }\n        values[x] = merge(values[2*x+1],values[2*x+2]);\n    }\n\n    void set(int i, int v){\n        set(i,v,0,lind,rind);\n    }\n\n    item calc(int l,int r, int x, int lx,int rx){\n        if(lx>r || rx<l){\n            return NEUTRAL_ELEMENT;\n        }\n        if(lx>=l && rx<=r){\n            return values[x];\n        }\n        int m = (lx+rx)/2;\n        item s1 = calc(l,r,2*x+1,lx,m);\n        item s2 = calc(l,r,2*x+2,m+1,rx);\n        return merge(s1,s2);\n    }\n   \n    item calc(int l,int r){\n        return calc(l,r,0,lind,rind);\n    }\n};\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& arr, vector<vector<int>>& queries) {\n        int n = arr.size();\n        segTree st(n,0,n-1);\n        st.build(arr);\n        int ans = 0;\n        for(auto it : queries){\n            int idx = it[0];\n            int x = it[1];\n            st.set(idx,x);\n            ans += st.calc(0,n-1).val;\n            ans %= mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716695823",
    "subm_id": "1268143707"
}