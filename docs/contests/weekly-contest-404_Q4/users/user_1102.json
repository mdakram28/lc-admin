{
    "username": "vishh_all",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nusing ld = long double;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nusing vll = vector<ll>;\nusing vvll = vector<vll>;\n#define ii pair<int, int>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(), v.end()\n#define mems(x, v) memset(x, v, sizeof(x))\n#define sz(v) ((int)(v).size())\n#define rep(i,a,b) for(int i=a;i<b;i++)\n#define rrep(i,a,b) for(int i=a;i>=b;i--)\nconst double PI = acos(-1.0);\nconst int INF = 1e9;\nconst ll MOD = 1e9+7;\n \nclass Solution {\npublic:\n    ll maximum=0;\n    void dfs(int node, int parent , vi adj[], vll &dist, int depth){\n        dist[node]=depth;\n        for(auto it : adj[node]){\n            if(it==parent)continue;\n            dfs(it,node,adj,dist,depth+1);\n        }\n    }\n    int f(vector<int>adj[], int n){\n        vll dist(n+1,0);\n        dfs(1,-1,adj,dist,0);\n        ll maxi=0;\n        int node1=1;\n        rep(i,1,n+1){\n           if(dist[i]>maxi){\n              maxi = dist[i];\n              node1=i;\n           }\n        }\n        dist.resize(n+1,0);\n        dfs(node1,-1,adj,dist,0);\n        maxi=0;\n        int node2=1;\n        rep(i,1,n+1){\n           if(dist[i]>maxi){\n              maxi = dist[i];\n              node2=i;\n           }\n        }\n        vll dist2(n+1,0);\n        dfs(node2,-1,adj,dist2,0);\n        ll res=1e18;\n        rep(i,1,n+1){\n            ll val = max(dist[i],dist2[i]);\n            maximum = max(maximum,val);\n            cout<<val<<\" \"<<maximum<<endl;\n            res = min(res,val);\n        }\n        return res;\n\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size()+1;\n        vector<int>adj1[n+1];\n        int m = edges2.size()+1;\n        vector<int>adj2[m+1];\n        for(auto it : edges1){\n            adj1[it[0]+1].push_back(it[1]+1);\n            adj1[it[1]+1].push_back(it[0]+1);\n\n        }\n        for(auto it : edges2){\n            adj2[it[0]+1].push_back(it[1]+1);\n            adj2[it[1]+1].push_back(it[0]+1);\n        }\n        int maxi = f(adj1,n)+f(adj2,m)+1;\n        maxi = max(maxi,(int)maximum);\n        return maxi;\n    }\n};",
    "submit_ts": "1719719442",
    "subm_id": "1304442044"
}