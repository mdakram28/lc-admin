{
    "username": "curryGoat",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long cnt = 0;\n        int i = 0;\n        while(i < n){\n            if(nums[i] < target[i]){\n                int st = i;\n                while(i < n && nums[i] < target[i]) i++;\n                int en = i - 1;\n                int amount = 1e9;\n                for(int l=st; l<=en; l++){\n                    amount = min(amount, target[l] - nums[l]);\n                }\n                cnt += amount;\n                for(int l=st; l<=en; l++){\n                    nums[l] += amount;\n                }\n                if(amount != 0){\n                    i = st;\n                }\n            }\n            else if(nums[i] > target[i]){\n                int st = i;\n                while(i < n && nums[i] > target[i]) i++;\n                int en = i - 1;\n                int amount = 1e9;\n                for(int l=st; l<=en; l++){\n                    amount = min(amount, nums[l] - target[l]);\n                }\n                cnt += amount;\n                for(int l=st; l<=en; l++){\n                    nums[l] -= amount;\n                }\n                if(amount != 0){\n                    i = st;\n                }\n            }\n            else i++;\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1721531428",
    "subm_id": "1327960707"
}