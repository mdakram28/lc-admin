{
    "username": "Kushal1605",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, Integer> freq = new HashMap<>();\n        Map<Integer, Integer> pos = new HashMap<>();\n        int n = nums.length;\n        \n        for (int i = 0; i < n / 2; i++) {\n            int diff = Math.abs(nums[i] - nums[n - i - 1]);\n            freq.put(diff, freq.getOrDefault(diff, 0) + 1);\n            \n            int maxDiff;\n            if (nums[i] > nums[n - i - 1]) {\n                maxDiff = Math.max(k - nums[n - i - 1], nums[i]);\n            } else {\n                maxDiff = Math.max(k - nums[i], nums[n - i - 1]);\n            }\n            \n            pos.put(maxDiff, pos.getOrDefault(maxDiff, 0) + 1);\n        }\n        \n        System.out.println(freq);        System.out.println(pos);\n\n        \n        int [] ps = new int [k + 1];\n        ps[0] = pos.getOrDefault(0, 0);\n        \n        for (int i = 1; i <= k; i++) {\n            ps[i] = ps[i - 1] + pos.getOrDefault(i, 0);\n        }\n        \n        int ans = n;\n        for (int i = 0; i <= k; i++) {\n            int doubleOpr = i == 0 ? 0 : ps[i - 1];\n            int temp = (doubleOpr * 2) + (n / 2) - freq.getOrDefault(i, 0) - doubleOpr;\n            ans = Math.min(ans, temp);    \n            \n            // System.out.println(i + \" \" + ps[i] + \" \" + doubleOpr + \" \" + temp + \" \" + ans);\n        }\n        \n        return ans;\n    }\n}",
    "submit_ts": "1721489782",
    "subm_id": "1327463624"
}