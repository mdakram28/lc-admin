{
    "username": "anmolraykhere",
    "submission": "#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxManhattanDifference(vector<vector<int>>& points) {\n        int n = points.size();\n        int minSum = INT_MAX, maxSum = INT_MIN;\n        int minDiff = INT_MAX, maxDiff = INT_MIN;\n        int minSumIndex = -1, maxSumIndex = -1;\n        int minDiffIndex = -1, maxDiffIndex = -1;\n        \n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0];\n            int y = points[i][1];\n            if (x + y < minSum) {\n                minSum = x + y;\n                minSumIndex = i;\n            }\n            if (x + y > maxSum) {\n                maxSum = x + y;\n                maxSumIndex = i;\n            }\n            if (x - y < minDiff) {\n                minDiff = x - y;\n                minDiffIndex = i;\n            }\n            if (x - y > maxDiff) {\n                maxDiff = x - y;\n                maxDiffIndex = i;\n            }\n        }\n        \n        int maxDist1 = maxSum - minSum;\n        int maxDist2 = maxDiff - minDiff;\n        return max(maxDist1,maxDist2);\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        int minSum = INT_MAX, maxSum = INT_MIN;\n        int minDiff = INT_MAX, maxDiff = INT_MIN;\n        int minSumIndex = -1, maxSumIndex = -1;\n        int minDiffIndex = -1, maxDiffIndex = -1;\n        \n        for (int i = 0; i < n; ++i) {\n            int x = points[i][0];\n            int y = points[i][1];\n            if (x + y < minSum) {\n                minSum = x + y;\n                minSumIndex = i;\n            }\n            if (x + y > maxSum) {\n                maxSum = x + y;\n                maxSumIndex = i;\n            }\n            if (x - y < minDiff) {\n                minDiff = x - y;\n                minDiffIndex = i;\n            }\n            if (x - y > maxDiff) {\n                maxDiff = x - y;\n                maxDiffIndex = i;\n            }\n        }\n        \n        int maxDist1 = maxSum - minSum;\n        int maxDist2 = maxDiff - minDiff;\n\n        int a, b;\n        if (maxDist1 >= maxDist2) {\n            a = minSumIndex;\n            b = maxSumIndex;\n        } else {\n            a = minDiffIndex;\n            b = maxDiffIndex;\n        }\n        \n        vector<vector<int>> v1, v2;\n        for (int i = 0; i < n; ++i) {\n            if (i != a) v1.push_back(points[i]);\n            if (i != b) v2.push_back(points[i]);\n        }\n        \n        return min(maxManhattanDifference(v1), maxManhattanDifference(v2));\n    }\n};\n"
}