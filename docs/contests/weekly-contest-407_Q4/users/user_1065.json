{
    "username": "adelzhang",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long ans = 0;\n        for (int i = 0, j = 0; j < n; i = j) {\n            if (diff[j] == 0) {\n                j++; continue;\n            }\n\n            while (j < n && (1L * diff[j] * diff[i]) > 0) {\n                j++;\n            }\n            \n            ans += Math.abs(diff[i]);\n            int d = Math.abs(diff[i]);\n            for (int k = i + 1; k < j; k++) {\n                if (Math.abs(diff[k]) > d) {\n                    ans += Math.abs(diff[k]) - d;\n                }\n                d = Math.abs(diff[k]);\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1721532338",
    "subm_id": "548391761"
}