{
    "username": "pikachutrainer",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        long long count = 0;\n        unordered_map<int, int> prefixAndCount;\n        \n        for (int i = 0; i < n; ++i) {\n            unordered_map<int, int> newPrefixAndCount;\n            \n            if (nums[i] == k) {\n                count++;\n            }\n            newPrefixAndCount[nums[i]]++;\n\n            for (const auto& pair : prefixAndCount) {\n                int newAnd = pair.first & nums[i];\n                if (newAnd == k) {\n                    count += pair.second;\n                }\n                newPrefixAndCount[newAnd] += pair.second;\n            }\n\n            prefixAndCount = newPrefixAndCount;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720279316",
    "subm_id": "1311746314"
}