{
    "username": "do_while_true",
    "submission": "class Solution {\npublic:\n\tint n;\n\tset<pair<int,int>>S;\n\tvector<int>a,b;\n    struct BIT{\n    \tint m;\n       \tvector<int>tree;\n\t\tint lowbit(int x){return x&(-x);}\n       \tvoid init(int w){\n       \t\tm=w;\n\t\t\ttree.resize(w+1);\n\t\t}\n\t    void modify(int x,int v){\n\t       \tfor(;x;x-=lowbit(x))tree[x]+=v;\n\t\t};\n\t\tint query(int x){\n\t\t\tint s=0;\n\t\t\tfor(;x<=m;x+=lowbit(x))s+=tree[x];\n\t\t\treturn s;\n\t\t}\n\t}tr0,tr1;\n\tvoid ins(int w){//w-x+1\n\t\tprintf(\"ins %d\\n\",w);\n\t\ttr0.modify(w,w+1);\n\t\ttr1.modify(w,1);\n\t}\n\tvoid era(int w){\n\t\tprintf(\"era %d\\n\",w);\n\t\ttr0.modify(w,-w-1);\n\t\ttr1.modify(w,-1);\n\t}\n\tvoid Modi(int p,int v){\n\t\tif(b[p]==v)return ;\n\t\tb[p]=v;\n\t\tif(v==0){\n\t\t\tauto it=S.upper_bound(make_pair(p,n));\n\t\t\t--it;\n\t\t\tint L=it->first,R=it->second;\n\t\t\tera(R-L+1);\n\t\t\tS.erase(it);\n\t\t\tif(p>L)S.insert(make_pair(L,p-1)),ins(p-L);\n\t\t\tif(p<R)S.insert(make_pair(p+1,R)),ins(R-p);\n\t\t}\n\t\telse{\n\t\t\tint L=p,R=p;\n\t\t\t{\n\t\t\t\tauto it=S.lower_bound(make_pair(p,p));\n\t\t\t\tif(it!=S.end()){\n\t\t\t\t\tint l=it->first,r=it->second;\n\t\t\t\t\tif(l==p+1){\n\t\t\t\t\t\tR=r;\n\t\t\t\t\t\tera(r-l+1);\n\t\t\t\t\t\tS.erase(it);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tauto it=S.lower_bound(make_pair(p,p));\n\t\t\t\tif(it!=S.begin())--it;\n\t\t\t\tif(it!=S.end()){\n\t\t\t\t\tint l=it->first,r=it->second;\n\t\t\t\t\tif(r==p-1){\n\t\t\t\t\t\tL=l;\n\t\t\t\t\t\tera(r-l+1);\n\t\t\t\t\t\tS.erase(it);\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tS.insert(make_pair(L,R));\n\t\t\tins(R-L+1);\n\t\t}\n\t}\n\tint Que(int k){\n\t\tint l1,r1,l2,r2,fl=0;\n\t\tif(!S.empty()){\n\t\t\tl1=S.begin()->first,r1=S.begin()->second;\n\t\t\tl2=(--S.end())->first,r2=(--S.end())->second;\n\t\t\tif(l1==0&&r2==n-1&&l1!=l2){\n\t\t\t\tera(r1-l1+1);\n\t\t\t\tera(r2-l2+1);\n\t\t\t\tins(r1-l1+1 + r2-l2+1);\n\t\t\t\tfl=1;\n\t\t\t}\n\t\t}\n\t\tif(S.size()==1&&S.begin()->first==0&&S.begin()->second==n-1){\n\t\t\treturn n;\n\t\t}\n\t\tint sum=tr0.query(k)-tr1.query(k)*k;\n\t\tif(fl){\n\t\t\tins(r1-l1+1);\n\t\t\tins(r2-l2+1);\n\t\t\tera(r1-l1+1 + r2-l2+1);\t\t\t\n\t\t}\n\t\treturn sum;\n\t}\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        n=colors.size();\n        tr0.init(n);tr1.init(n);\n        a=colors,b=a;\n\t\tvector<int>ans;\n        for(int i=1;i<n;i++)b[i]=(a[i]!=a[i-1]);\n        b[0]=a[0]!=a[n-1];\n        int m=queries.size();\n        auto pos=[&](int x){\n            x=(x%n+n)%n;\n            return x;\n        };\n        for(int l=0,r;l<n;l=r+1){\n        \tr=l;\n        \tif(b[l]==0)continue;\n        \twhile(r+1<n&&b[r+1]==1)++r;\n        \tS.insert(make_pair(l,r));\n        \tins(r-l+1);\n\t\t}\n        for(int o=0;o<m;o++){\n            int op=queries[o][0];\n            if(op==2){\n                int p=queries[o][1],w=queries[o][2];\n                a[p]=w;\n                Modi(p,a[p]!=a[pos(p-1)]);\n                Modi(pos(p+1),a[p]!=a[pos(p+1)]);\n            }\n            else{\n                int k=queries[o][1]-1;\n                ans.push_back(Que(k));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741278",
    "subm_id": "552337190"
}