{
    "username": "akh26",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(),greater<long long>());\n        sort(verticalCut.begin(), verticalCut.end(),greater<long long>());\n        long long hori=1;\n        long long vert=1;\n        long long cost=0;\n        long long i=0,j=0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                cost+=horizontalCut[i]*vert;\n                hori++;\n                i++;\n            } else {\n                cost+=verticalCut[j]*hori;\n                vert++;\n                j++;\n            }\n        }\n        while (i<horizontalCut.size()) {\n            cost+=horizontalCut[i]*vert;\n            hori++;\n            i++;\n        }\n        while (j<verticalCut.size()) {\n            cost+=verticalCut[j]*hori;\n            vert++;\n            j++;\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720925360",
    "subm_id": "1320252062"
}