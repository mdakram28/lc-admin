{
    "username": "Yao_Yin",
    "submission": "\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<string, int> words_less_than_15;\n        unordered_map<string, int> words_greater_or_equal_to_15;\n        int n = words.size();\n\n        for (int i = 0; i < n; i++) {\n            if (words[i].size() >= 15) {\n                insertWord(words_greater_or_equal_to_15, words[i], costs[i]);\n            } else {\n                insertWord(words_less_than_15, words[i], costs[i]);\n            }\n        }\n\n        int m = target.size();\n        vector<int> dp(m + 1, 0x3f3f3f3f);\n        dp[0] = 0;\n\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j < 15 && j <= i; j++) {\n                string_view curr(target.data() + i - j, j);\n                if (words_less_than_15.count(string(curr))) {\n                    dp[i] = min(dp[i], dp[i - j] + words_less_than_15[string(curr)]);\n                }\n            }\n            for (const auto& [word, val] : words_greater_or_equal_to_15) {\n                int sz = word.size();\n                if (sz <= i && target.compare(i - sz, sz, word) == 0) {\n                    dp[i] = min(dp[i], dp[i - sz] + val);\n                }\n            }\n        }\n        return dp[m] == 0x3f3f3f3f ? -1 : dp[m];\n    }\n\nprivate:\n    void insertWord(unordered_map<string, int>& dict, const string& word, int cost) {\n        if (dict.count(word)) {\n            dict[word] = min(dict[word], cost);\n        } else {\n            dict[word] = cost;\n        }\n    }\n};",
    "submit_ts": "1720324452",
    "subm_id": "1312399847"
}