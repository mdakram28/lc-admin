{
    "username": "nevergiveup",
    "submission": "class Solution {\n\n    private void build(int[] nums) {\n        int i , n = nums.length;\n        for (i = 0;i < n;i ++) {\n            for (int j = 0;j <= 30;j ++) {\n                if ((nums[i] & (1 << j)) != 0) {\n                    prefixCount[i][j] ++;\n                }\n            }\n            if (i > 0) {\n                for (int j = 0; j <= 30; j++) {\n                    prefixCount[i][j] += prefixCount[i - 1][j];\n                }\n            }\n        }\n    }\n\n    private int and(int l , int r) {\n        int ans = 0;\n        for (int i = 0;i <= 30;i ++) {\n            int total = prefixCount[r][i];\n            if (l - 1 >= 0) {\n                total -= prefixCount[l - 1][i];\n            }\n            if (total == (r - l + 1)) {\n                ans = ans | (1 << i);\n            }\n        }\n        return ans;\n    }\n\n    private int[][] prefixCount;\n\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length , ans = Integer.MAX_VALUE;\n        prefixCount = new int[n][31];\n        build(nums);\n        for (int i = 0;i < n;i ++) {\n            int l = 0 , r = i + 1;\n            while (l < r) {\n                int mid = (l + r) / 2;\n                int andResult = and(mid , i);\n                if (andResult < k) {\n                    l = mid + 1;\n                } else {\n                    r = mid;\n                }\n            }\n            for (int j = l - 3;j <= l + 3;j ++) {\n                if (j >= 0 && j <= i) {\n                    int result = and(j , i);\n                    int diff = Math.abs(result - k);\n                    ans = Math.min(ans , diff);\n                }\n            }\n        }\n        return ans;\n    }\n\n\n}",
    "submit_ts": 1717296546.0
}