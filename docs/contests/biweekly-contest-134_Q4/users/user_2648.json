{
    "username": "Binary_Blaze",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        long count = 0;\n\n        HashMap<Long, Long> previousMap = new HashMap<>();\n\n        for (int i = 0; i < n; ++i) {\n            HashMap<Long, Long> currentMap = new HashMap<>();\n\n            if (nums[i] == k) {\n                ++count;\n            }\n            currentMap.put((long) nums[i], 1L);\n\n            for (HashMap.Entry<Long, Long> entry : previousMap.entrySet()) {\n                long value = entry.getKey();\n                long frequency = entry.getValue();\n                long finalResult = value & nums[i];\n                if (finalResult == k) {\n                    count += frequency;\n                }\n                currentMap.put(finalResult, currentMap.getOrDefault(finalResult, 0L) + frequency);\n            }\n\n            previousMap = currentMap;\n        }\n\n        return count;\n    }\n}",
    "submit_ts": "1720279127",
    "subm_id": "1311738579"
}