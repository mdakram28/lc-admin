{
    "username": "liouzhou_101",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        int pn = n / 2;\n        \n        vector<int> p(n + 1, 1);\n        for (int i = 1; i <= n; ++i)\n            p[i] = p[i - 1] * 10 % k;\n        \n        vector dp(pn + 1, vector<int>(k));\n        if (n % 2 == 0)\n        {\n            dp[0][0] = 1;\n            for (int i = 0; i < pn; ++i)\n                for (int x = 0; x < k; ++x)\n                    if (dp[i][x])\n                        for (int y = 0; y <= 9; ++y)\n                            dp[i + 1][(x + (p[pn - i - 1] + p[pn + i]) * y) % k] = 1;\n        }\n        else\n        {\n            for (int d = 0; d <= 9; ++d)\n                dp[0][d * p[pn] % k] = 1;\n            for (int i = 0; i < pn; ++i)\n                for (int x = 0; x < k; ++x)\n                    if (dp[i][x])\n                        for (int y = 0; y <= 9; ++y)\n                            dp[i + 1][(x + (p[pn - i - 1] + p[pn + i + 1]) * y) % k] = 1;\n        }\n        \n        string s;\n        int cur = 0;\n        for (int i = pn - 1; i >= 0; --i)\n        {\n            for (int d = 9; d >= 0; --d)\n                if (dp[i][((cur - (p[pn - i - 1] + p[pn + i + (n & 1)]) * d) % k + k) % k])\n                {\n                    s += d + '0';\n                    cur = ((cur - (p[pn - i - 1] + p[pn + i + (n & 1)]) * d) % k + k) % k;\n                    break;\n                }\n        }\n        \n        if (n % 2 == 1)\n        {\n            for (int d = 9; d >= 0; --d)\n                if (d * p[pn] % k == cur)\n                {\n                    s = s + string(1, d + '0') + string(s.rbegin(), s.rend());\n                    break;\n                }\n        }\n        else\n            s += string(s.rbegin(), s.rend());\n        \n        return s;\n    }\n};",
    "submit_ts": "1723950008",
    "subm_id": "556396367"
}