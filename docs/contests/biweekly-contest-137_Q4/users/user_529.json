{
    "username": "Linn",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        # \u7ef4\u62a4\u524d\u4e09\u5927\n        m, n = len(board), len(board[0])\n        li = []\n        for i in range(m):\n            li.append(sorted(zip(board[i], range(n)), reverse=True)[:3])\n        one = [-inf] * n\n        two = [-inf] * n * n\n        mx = [[[-inf, -1], [-inf, -1]] for _ in range(n)]\n\n        def add(i, j, x):\n            for k in range(2):\n                if j == mx[i][k][1]:\n                    mx[i][k][0] = max(mx[i][k][0], x)\n                    return\n            mx[i].append([x, j])\n            mx[i].sort(reverse=True)\n            if len(mx[i]) >= 3:\n                mx[i].pop()\n\n        ans = -inf\n        for i in range(m):\n            for x, idx in li[i]:\n                for j in range(n):\n                    if j == idx: continue\n                    if mx[j][0][1] != idx:\n                        ans = max(ans, x + mx[j][0][0])\n                    else:\n                        ans = max(ans, x + mx[j][1][0])\n            for x, idx in li[i]:\n                for j in range(n):\n                    if j != idx:\n                        two[j * n + idx] = max(two[j * n + idx], one[j] + x)\n                        add(j, idx, two[j * n + idx])\n                        add(idx, j, two[j * n + idx])\n            for x, idx in li[i]:\n                one[idx] = max(one[idx], x)\n        return ans",
    "submit_ts": "1723910031",
    "subm_id": "556339199"
}