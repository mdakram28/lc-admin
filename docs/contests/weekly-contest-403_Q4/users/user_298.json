{
    "username": "ssevven",
    "submission": "class Solution\n{\npublic:\n    int minimumSum(vector<vector<int>> &grid)\n    {\n        int m = grid.size();\n        int n = grid[0].size();\n        int minres = m * n;\n\n        function<int(int, int, int, int)> fn = [&](int lt, int lb, int ll, int lr)\n            -> int\n        {\n            int t = lb + 1, b = lt - 1, l = lr + 1, r = ll - 1;\n            for (int i = lt; i <= lb; i++)\n            {\n                for (int j = ll; j <= lr; j++)\n                {\n                    if (grid[i][j])\n                    {\n                        t = min(t, i);\n                        b = max(b, i);\n                        l = min(l, j);\n                        r = max(r, j);\n                    }\n                }\n            }\n\n            return (b - t + 1) * (r - l + 1);\n        };\n\n        for (int i = 0; i < m - 1; i++)\n            for (int j = 0; j < n - 1; j++)\n            {\n                minres = min(minres, fn(0, m - 1, 0, j) + fn(0, i, j + 1, n - 1) + fn(i + 1, m - 1, j + 1, n - 1));\n                minres = min(minres, fn(0, i, 0, n - 1) + fn(i + 1, m - 1, 0, j) + fn(i + 1, m - 1, j + 1, n - 1));\n                minres = min(minres, fn(0, i, 0, j) + fn(i + 1, m - 1, 0, j) + fn(0, m - 1, j + 1, n - 1));\n                minres = min(minres, fn(0, i, 0, j) + fn(0, i, j + 1, n - 1) + fn(i + 1, m - 1, 0, n - 1));\n            }\n\n        for (int i = 0; i < m - 2; i++)\n            for (int j = i + 1; j < m - 1; j++)\n            {\n                minres = min(minres, fn(0, i, 0, n - 1) + fn(i + 1, j, 0, n - 1) + fn(j + 1, m - 1, 0, n - 1));\n            }\n        for (int i = 0; i < n - 2; i++)\n            for (int j = i + 1; j < n - 1; j++)\n            {\n                minres = min(minres, fn(0, m - 1, 0, i) + fn(0, m - 1, i + 1, j) + fn(0, m - 1, j + 1, n - 1));\n            }\n\n        return minres;\n    }\n};",
    "submit_ts": 1719113309.0
}