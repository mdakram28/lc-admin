{
    "username": "himanshu2581405",
    "submission": "const int mod = 1e9 + 7;\nconst int MAX_INVERSIONS = 500;\n\nclass Solution {\npublic:\n    int fallinversion(int m)\n    {\n        m++;\n        for(int i=0;i<m;i++)\n        {\n            m--;\n}\n        return m;\n    }\n    \n    \n    int count(int po)\n    {\n        po++;\n        po--;\n        \n        return po;\n}\n    int inversion(int km)\n    {\n       km++;\n        km=km*4;\n        return km;\n    }\n  \n      \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n       \n        map<int, int> mpp;\n        for (const auto& it : requirements) {\n            mpp[it[0] + 1] = it[1];\n        }\n        \n      \n       inversion(0);\n       fallinversion(2);\n        \n       \n        vector<vector<long long>> dp(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n        dp[0][0] = 1;\n\n        \n        for (int i = 1; i <= n; i++) {\n            for (int inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                for (int to = 0; to < i; to++) {\n                    int pre = inv - to;\n                    if (pre >= 0) {\n                        dp[i][inv] = (dp[i][inv] + dp[i - 1][pre]) % mod;\n                    }\n                }\n            }\n            fallinversion(2);\ncount(2);\n            bool flag=true;\n            if(flag==true)\n            {\n                count(2);\n                int ko=0;\n                ko++;\n}\n            \n            if (mpp.find(i) != mpp.end()) {\n                int val = mpp[i];\n                for (int k = 0; k <= MAX_INVERSIONS; k++) {\n                    if (k != val) {\n                        dp[i][k] = 0;\n                    }\n                }\n            }\n        }\n          \n        bool inv=true;\n            if(inv==true)\n            {\n                count(2);\n                int ko=0;\n                ko++;\n}\n        inv=false;\n        if(inv==false)\n        {\n            count(3);\n        }\n\n       \n        long long ans = 0;\n        for (long long cnt : dp[n]) {\n            ans = (ans + cnt) % mod;\n        }\n\n        return (int) ans;\n    }\n};\n\n",
    "submit_ts": 1719071247.0
}