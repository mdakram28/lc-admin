{
    "username": "Sury213",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        vector<int>c(colors.begin(),colors.end()) ;\n        int m = colors.size() ;\n        for(int i = 0 ; i < colors.size() ; i++)\n            c.push_back(colors[i]) ;\n        int n = c.size() ;\n        vector<int>dp(n,0) ;\n        int ans = 0 ;\n        for(int i = 0 ; i < c.size() ; i++)\n        {\n            dp[i] = 1 ;\n            if(i && (c[i] != c[i-1]))\n                dp[i] = 1+dp[i-1] ;\n            if((i-k+1) == (m))\n            {\n               // cout<<i<<endl ;\n                break ;\n            }\n            if(dp[i] >= k)\n            {\n                ans++ ;\n            }\n          //  cout<<dp[i]<<\" \"<<i<<\" \"<<(i-k-1)<<endl;\n            \n        }\n        return ans ;\n        \n    }\n};",
    "submit_ts": "1720277254",
    "subm_id": "1311655074"
}