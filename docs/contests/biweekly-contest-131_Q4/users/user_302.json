{
    "username": "spaceandtimecomp",
    "submission": "class Solution {\npublic:\n\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = 0;\n        for (auto p:queries) n = max(n, p[1]);\n        set<int> sets;\n        sets.insert(0);\n        n += 10;\n        int tr[n << 4];\n        memset(tr, 0, sizeof (tr));\n        auto pushup = [&](int u)\n        {\n            tr[u] = max(tr[u << 1], tr[u << 1 | 1]);\n        };\n        function<void(int, int, int, int, int)> update = [&](int u, int l, int r, int x, int v){\n            if (l == r) tr[u] = v;\n            else{\n                int mid = (l + r) >> 1;\n                if (x <= mid) update(u << 1, l, mid, x, v);\n                else update(u << 1 | 1, mid + 1, r, x, v);\n                pushup(u);\n            }\n        };\n        function<int(int, int, int, int ,int)> query = [&](int u, int l, int r, int L, int R)\n        {\n            if (L <= l && r <= R) return tr[u];\n            else {\n                int mid = (l + r) >> 1, ans = 0;\n                if (L <= mid) ans = query(u << 1, l, mid, L, R);\n                if (mid < R) ans = max(ans, query(u << 1 | 1, mid + 1, r, L, R));\n                return ans;\n            }\n        };\n        vector<bool> ans;\n        for (auto p:queries)\n        {\n            int op = p[0], x = p[1];\n            auto it = sets.lower_bound(-x);\n            if (op == 1)\n            {\n                auto it1 = it;\n                it1--;\n                update(1, 1, n, x, x + *it);\n                if (it1 != sets.end()) update(1, 1, n, -*it1, -x - *it1);\n                sets.insert(-x);\n            }else{\n                int sz = p[2];\n                int t = query(1, 1, n, 1, x);\n                if (*it != -x) t = max(t, x + *it);\n                ans.push_back(sz <= t);\n            }\n        }\n        return ans;\n    }\n\n};",
    "submit_ts": 1716652236.0
}