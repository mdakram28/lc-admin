{
    "username": "skqliiiao",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>> &points) {\n        int n = points.size();\n        auto p = vector(4, vector(n, pair<int, int>(0, 0)));\n\n        for (int i = 0; i < n; i++) {\n            auto x = points[i][0], y = points[i][1];\n            p[0][i] = make_pair(x + y, i);\n            p[1][i] = make_pair(-x + y, i);\n            p[2][i] = make_pair(x - y, i);\n            p[3][i] = make_pair(-x - y, i);\n        }\n\n        for (int i = 0; i < 4; i++) {\n            sort(p[i].begin(), p[i].end());\n        }\n\n        set<int> st;\n\n        for (int i = 0; i < 4; ++i) {\n            st.insert(p[i][0].second);\n            st.insert(p[i][n - 1].second);\n        }\n\n        int res = INT_MAX;\n\n        for (auto x : st) {\n            int mx = 0;\n\n            for (int i = 0; i < 4; i++) {\n                int l = 0, r = n - 1;\n\n                if (p[i][l].second == x)\n                    l++;\n\n                if (p[i][r].second == x)\n                    r--;\n\n                mx = max(mx, p[i][r].first - p[i][l].first);\n            }\n\n            res = min(res, mx);\n        }\n\n        return res;\n    }\n};"
}