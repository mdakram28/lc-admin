{
    "username": "Kareem_Elgoker",
    "submission": "typedef long long ll;\nconst static auto _ = [] { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr; }();\n// Don't forget long long due to overflow !!!!!!!!!\nclass Solution {\npublic:\n    const int mod = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>> &requirements) {\n        vector<int> freq(n, -1);\n        int mx = 0;\n        for (int i = 0; i < requirements.size(); ++i) {\n            freq[requirements[i][0]] = requirements[i][1];\n            mx = max(mx, requirements[i][1]);\n        }\n\n        vector<vector<int>> dp(n, vector<int>(mx + 1));\n        dp[0][0] = 1;\n\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= mx; ++j) {\n                for (int k = 0; k <= i; ++k) {\n                    if(k > j) break;\n                    if(freq[i - 1] != -1)\n                    {\n                        if(j - k != freq[i - 1]) continue;\n                        dp[i][j] += dp[i - 1][j - k];\n                        if(dp[i][j] >= mod) dp[i][j] -= mod;\n                    }\n                    else\n                    {\n                        dp[i][j] += dp[i - 1][j - k];\n                        if(dp[i][j] >= mod) dp[i][j] -= mod;\n                    }\n                }\n            }\n        }\n\n        return dp[n - 1][freq[n - 1]];\n    }\n\n};",
    "submit_ts": "1719068309",
    "subm_id": "1296760685"
}