{
    "username": "rahulkottak",
    "submission": "class Solution {\npublic:\n\n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        colors.insert(colors.end(), colors.begin(), colors.begin() + k);\n        int n = colors.size(), count = 0; \n        unordered_map<string, int> colorTolndex; vector<int> prefixDiffs(n + 1, 0);\n        for (int i = 1; i < n; ++i) {\n            prefixDiffs[i] += prefixDiffs[i - 1] +abs(colors[i]-colors[i-1]);\n        }\n        k--;\n        for (int i = k+1; i < n; ++i) {\n            if (prefixDiffs[i] - prefixDiffs[i - k] == k) {\n                count++;\n            }\n        }\n        return count;\n    }\n};",
    "submit_ts": "1720279577",
    "subm_id": "1311756856"
}