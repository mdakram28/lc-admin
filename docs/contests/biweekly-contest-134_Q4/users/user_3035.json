{
    "username": "Rohini_08",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n     \n\n\n    int n = nums.size();\n   \n          // Correct variable name and access the size of 'nums'\n        long long total = 0;\n        unordered_map<long long, long long> prevres;\n        \n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> curres;\n            long long t = k; \n            \n            if (nums[i] == t) {\n                ++total;\n            }\n            curres[nums[i]] = 1;\n            \n            for (auto& [value, freq] : prevres) {\n                long long newres = value & nums[i];                                                                                                     //nums[index]\n                if (newres == t) {\n                    total += freq;\n                }\n                curres[newres] += freq;\n            }\n            \n            prevres = curres;\n        }\n        \n        return total;\n      \n    }\n};\n",
    "submit_ts": "1720280169",
    "subm_id": "1311779409"
}