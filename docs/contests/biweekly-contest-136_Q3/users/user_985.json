{
    "username": "di-mai-ou-fu-a-bei-geng-qing-shen-ban",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0, n = grid.size(), m = grid[0].size();\n        for(int i = 0; i < n / 2; i++){\n            for(int j = 0; j < m / 2; j++){\n                int t = grid[i][j] + grid[n - i - 1][j] + grid[i][m - j - 1] + grid[n - i - 1][m - j - 1];\n                ans += min(t, 4 - t);\n            }\n        }\n        bool need = false;\n        int ans2 = 0;\n        if(m & 1){\n            int mid = m / 2;\n            for(int i = 0; i < (n + 1) / 2; i++){\n                if(grid[i][mid] != grid[n - i - 1][mid]){\n                    ans2++;\n                }\n                else if(grid[i][mid] == 1){\n                    need = !need;\n                }\n            }\n        }\n        if(n & 1){\n            int mid = n / 2;\n            for(int j = 0; j < (m + 1) / 2; j++){\n                if(grid[mid][j] != grid[mid][m - j - 1]){\n                    ans2++;\n                }\n                else if(grid[mid][j] == 1){\n                    need = !need;\n                }\n            }\n        }\n        if(need && ans2 == 0){\n            ans2 += 2;\n        }\n        if(n & 1 && m & 1){\n            ans += grid[n / 2][m / 2];\n        }\n        return ans + ans2;\n    }\n};",
    "submit_ts": "1722698534",
    "subm_id": "552271327"
}