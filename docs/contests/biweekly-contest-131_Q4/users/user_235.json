{
    "username": "fml31_avms",
    "submission": "struct Seg {\n    int size;\n    int maxfree, lfree, rfree;\n};\n\nclass Solution {\n    int n = 5 * 10000 + 1;\n    Seg t[4 * (5 * 10000 + 1)];\n    \n    Seg uni(Seg a, Seg b) {\n        Seg c;\n        c.size = a.size + b.size;\n        \n        c.maxfree = max(max(a.maxfree, b.maxfree), a.rfree + b.lfree);\n        \n        if(a.lfree < a.size)\n            c.lfree = a.lfree;\n        else\n            c.lfree = a.size + b.lfree;\n        \n        if(b.rfree < b.size)\n            c.rfree = b.rfree;\n        else\n            c.rfree = b.size + a.rfree;\n        \n        return c;\n    }\n    \n    void build(int v, int tl, int tr) {\n        if(tl == tr) {\n            t[v].size = t[v].maxfree = t[v].lfree = t[v].rfree = 1;\n        }\n        else {\n            int tm = (tl + tr) / 2;\n            build(2*v, tl, tm);\n            build(2*v+1, tm+1, tr);\n            t[v] = uni(t[2*v], t[2*v+1]);\n            //auto l = t[v];\n            //cout << \"(\" << tl << \", \" << tr << \"): \" << l.size << \" \" << l.maxfree << \" \" << l.lfree << \" \" << l.rfree << \"\\n\";\n        }\n\t}\n    \n    Seg get(int v, int tl, int tr, int l, int r) {\n        if(l > tr || r < tl) {\n            Seg segz;\n            segz.size = segz.maxfree = segz.lfree = segz.rfree = 0;\n            return segz;\n        }\n        if(l <= tl && r >= tr)\n            return t[v];\n        int tm = (tl + tr) / 2;\n        return uni(get(2*v, tl, tm, l, r), get(2*v+1, tm+1, tr, l, r));\n    }\n        \n    void upd(int v, int tl, int tr, int pos, bool type) {\n        if (tl == tr) {\n            if(type) {\n                t[v].lfree = 0;\n            }\n            else {\n                t[v].rfree = 0;\n            }\n            // t[v].maxfree = t[v].lfree = t[v].rfree = 0;\n        }\n        else {\n            int tm = (tl + tr) / 2;\n            if (pos <= tm)\n                upd(2*v, tl, tm, pos, type);\n            else\n                upd(2*v+1, tm+1, tr, pos, type);\n            t[v] = uni(t[2*v], t[2*v+1]);\n        }\n    }\n    \npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool> ans;\n        \n        build(1, 0, n - 1);\n        \n        for(auto q : queries) {\n            if(q[0] == 1) {\n                upd(1, 0, n - 1, q[1], true);\n                upd(1, 0, n - 1, q[1] - 1, false);\n            }\n            else {\n                //auto l = get(1, 0, n - 1, 0, q[1]);\n                //cout << l.size << \" \" << l.maxfree << \" \" << l.lfree << \" \" << l.rfree << \"\\n\";\n                ans.push_back(get(1, 0, n - 1, 0, q[1] - 1).maxfree >= q[2]);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716651303.0
}