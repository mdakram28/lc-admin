{
    "username": "BROCODES2024",
    "submission": "class Solution {\npublic:\n    int bfs(vector<vector<int>>& cg, int st, int t1, int t2, int nodes) {\n        queue<int> q;\n        vector<int> vis(nodes, 0);\n        q.push(st);\n        vis[st] = 1;\n\n        while (!q.empty()) {\n            int i = q.front();\n            q.pop();\n            for (int it : cg[i]) {\n                if (!vis[it]) {\n                    q.push(it);\n                    vis[it] = 1;\n                }\n            }\n        }\n        return vis[t1] || vis[t2];\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cir) {\n        int n = cir.size();\n        vector<pair<pair<int, int>, int>> cir2(n);\n        vector<vector<int>> cg(n + 4);\n\n        for (int i = 0; i < n; ++i) {\n            cir2[i].second = cir[i][2];\n            cir2[i].first.second = cir[i][1];\n            cir2[i].first.first = cir[i][0];\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (X - cir2[i].first.first <= cir2[i].second) {\n                cg[n + 2].push_back(i);\n                cg[i].push_back(n + 2);\n            }          \n            if (Y - cir2[i].first.second <= cir2[i].second) {\n                cg[n + 3].push_back(i); \n                cg[i].push_back(n + 3);\n            }\n            if (cir2[i].first.second <= cir2[i].second) {\n                cg[n + 1].push_back(i); \n                cg[i].push_back(n + 1);\n            }\n            if (cir2[i].first.first <= cir2[i].second) {\n                cg[n].push_back(i); \n                cg[i].push_back(n);\n            }           \n            for (int j = i + 1; j < n; ++j) {\n                double distance = sqrt(\n                pow(cir2[i].first.first - cir2[j].first.first, 2) +pow(cir2[i].first.second - cir2[j].first.second, 2));\n                int radius_sum = cir2[i].second + cir2[j].second;\n                if (radius_sum >= distance) {\n                    cg[i].push_back(j);\n                    cg[j].push_back(i);\n                }\n            }\n        }\n\n        return !(bfs(cg, n, n + 1, n + 2, n + 4) || bfs(cg, n + 3, n + 2, n + 1, n + 4)); \n    }\n};\n",
    "submit_ts": "1722138242",
    "subm_id": "1335785802"
}