{
    "username": "user0729q",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> bits(n,vector<int>(31,0));\n        for(int j = 0;j<nums.size();j++)\n        {\n            int bit=1;\n            for(int i = 0;i<31;i++)\n            {\n                if(nums[j]&bit)bits[j][i] = 1;\n                bit = bit<<1;\n            }\n        }\n        for(int j = 1;j<nums.size();j++)\n        for(int i = 0;i<31;i++)\n            bits[j][i] += bits[j-1][i];\n        \n        int l = 0;\n        int r = 0;\n        int ans = INT_MAX;\n        int val = nums[0];\n        while(r < n)\n        {\n            if(val != -1)\n            val = val & nums[r];\n            else \n                val = nums[r];\n            ans = min(ans,abs(k-val));\n            while(val <= k && l <= r)\n            {\n                ans = min(ans,abs(k-val));\n                l++;\n                if(l>r){val = -1;break;}\n                val = 0;\n                for(int i = 0;i<31;i++)\n                {\n                    if(bits[r][i] - bits[l-1][i] == (r-l+1))val = val | (1<<i);\n                }\n            }\n            if(val != -1)\n                ans = min(ans,abs(k-val));\n            r++;\n        }\n        return ans;\n            \n    }\n};",
    "submit_ts": 1717298343.0
}