{
    "username": "shubhama21",
    "submission": "\n\n#define ll long long\n#define vi vector<ll>\n\ntemplate<typename T>\nstruct segtree{\n     \n    ll n;\n    vector<T> v, t;\n\n    T merge(T a, T b){\n        return a + b;\n    }\n\n    segtree(ll n){\n        this->n = n;\n        v.resize(n);\n        t.resize(4*n);\n        build(1, 0, n-1);\n    }\n\n    segtree(vector<T> &z){\n        this->v = z;\n        this->n = z.size();\n        t.resize(4*n);\n        build(1, 0, n-1);\n    }\n\n    void build(ll k, ll tl, ll tr){\n        if(tl == tr){\n            t[k] = v[tl];\n        }\n        else{\n            ll tm = (tl + tr) / 2;\n            build(k*2, tl, tm);\n            build(k*2 + 1, tm + 1, tr);\n            t[k] = merge(t[2*k], t[2*k + 1]);\n        }\n    }\n\n    ll query(ll k, ll tl, ll tr, ll l, ll r){\n        if(l>r) return 0;\n        if(l == tl && r == tr) return t[k];\n\n        ll tm = (tl + tr) / 2;\n        return merge(query(2*k, tl, tm, l, min(r, tm)), query(2*k+1, tm+1, tr, max(l, tm+1), r));\n    }\n\n    ll q(ll l, ll r){\n        return query(1, 0, n - 1, l, r);\n    }\n    \n    void update(ll k, ll tl, ll tr, ll pos, ll newVal){\n        if(tl == tr){\n            t[k] = newVal;\n        }\n        else{\n            ll tm = (tl + tr) / 2;\n            if(pos <= tm)   update(2*k, tl, tm, pos, newVal);\n            else    update(2*k + 1, tm + 1, tr, pos, newVal);\n            t[k] = merge(t[2*k], t[2*k + 1]);\n        }\n    }\n\n    void u(ll pos, ll val){\n        update(1, 0, n - 1, pos, val); \n    }\n};\n\n\nclass Solution {\npublic:\n    void op(int ind, vector<int> &nums, segtree<ll> &st) {\n        int n = nums.size();\n        if(ind <= 0 || ind >= n-1) return;\n        if(nums[ind] > nums[ind-1] && nums[ind] > nums[ind+1]) st.u(ind, 1);\n        else st.u(ind, 0);\n    }\n    \n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<ll> p(n, 0);\n     //   pre[0] = 0;\n        for(int i = 1; i < n - 1; i++) {\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]) p[i] = 1;\n            \n        }\n        segtree<ll> st(p);\n        vector<int> ans;\n        for(auto y: queries) {\n            if(y[0] == 2) {\n                nums[y[1]] = y[2];\n                op(y[1], nums, st );\n                op(y[1]-1, nums, st);\n                op(y[1]+1, nums, st);\n                \n               \n            }\n            else {\n                ans.push_back(st.q(y[1]+1, y[2]-1));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718509037",
    "subm_id": "1289697736"
}