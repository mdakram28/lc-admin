{
    "username": "faizanhussain2310",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<pair<ll,ll>> sum,diff;\n        ll n=points.size();\n        \n        for(int i=0; i<n; i++) {\n            sum.insert({points[i][0]+points[i][1],i});\n            diff.insert({points[i][0]-points[i][1],i});\n        }\n        \n        ll ans=1e9;\n        for(int i=0; i<n; i++) {\n            pair<ll,ll> pos1={points[i][0]+points[i][1],i};\n            pair<ll,ll> pos2={points[i][0]-points[i][1],i};\n            \n            auto idx1=sum.find(pos1);\n            auto idx2=diff.find(pos2);\n            \n            if(idx1!=sum.end()) {\n                sum.erase(idx1);\n            }\n            if(idx2!=diff.end()) {\n                diff.erase(idx2);\n            }\n            \n            ll ans1=sum.rbegin()->first - sum.begin()->first;\n            ll ans2=diff.rbegin()->first - diff.begin()->first;\n            \n            ll large=max(ans1,ans2);\n            ans=min(ans,large);\n            \n            sum.insert(pos1);\n            diff.insert(pos2);\n        }\n        \n        return ans;\n    }\n};"
}