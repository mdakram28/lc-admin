{
    "username": "rafi_zahedi",
    "submission": "from typing import List\n\n\nclass Solution:\n    def is_valid(self, s):\n        for i in range(len(s) - 1):\n            if s[i] == '0' and s[i + 1] == '0':\n                return False\n        return True\n\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        mp = {}\n        for index, word in enumerate(words):\n            mp[word] = min(mp.get(word, float('inf')), costs[index])\n\n        dp = [float('inf')] * (n + 1)\n        # starts from zero\n        dp[0] = 0\n        for i in range(1, n + 1):\n            for word in mp:\n                # if 'i' passed the len of the word\n                if i >= len(word) and target[i - len(word):i] == word:\n                    dp[i] = min(dp[i], dp[i - len(word)] + mp[word])\n\n        # if we have the last value then that is the answer\n        if dp[n] != float('inf'):\n            return dp[n]\n        # otherwise no answer\n        return -1\n\n\nsol = Solution()\nprint(sol.minimumCost(target=\"abcdef\", words=[\"abdef\", \"abc\", \"d\", \"def\", \"ef\"], costs=[100, 1, 1, 10, 5]))  # -> 7\n",
    "submit_ts": "1720321947",
    "subm_id": "1312336548"
}