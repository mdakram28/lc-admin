{
    "username": "IceTea233",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        const int n = nums.size();\n        int cost = n / 2;\n        map<int, int> cnt;\n        vector<int> raise;\n        for (int i = 0; i < n / 2; i++) {\n            int x1 = nums[i];\n            int x2 = nums[n - i - 1];\n            if (x1 > x2) swap(x1, x2);\n            cnt[x2 - x1]++;\n            raise.push_back(max(k - x1, x2));\n        }\n        sort(raise.begin(), raise.end());\n        // for (auto x : raise) {\n        //     cout << x << \" \";\n        // }\n        // cout << endl;\n        int ans = 1e9;\n        for (int i = 0, j = 0; i <= k; i++) {\n            // cout << \"i = \" << i << \", cnt = \" << cnt[i] << \", cost = \" << cost << endl;\n            ans = min(ans, cost - cnt[i]);\n            while (j < raise.size() && raise[j] <= i) {\n                cost++;\n                j++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487832",
    "subm_id": "1327402657"
}