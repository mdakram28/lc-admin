{
    "username": "2499370956",
    "submission": "class Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode26 root = new TrieNode26();\n        for (int i = 0; i < words.length; i++) {\n            String word = words[i];\n            int cost = costs[i];\n            TrieNode26 node = root;\n            for (int j = word.length() - 1; j >= 0; j--) {\n                char c = word.charAt(j);\n                int index = c - 'a';\n                if (node.children[index] == null) {\n                    node.children[index] = new TrieNode26();\n                }\n                node.minLength = Math.min(node.minLength, word.length());\n                node = node.children[index];\n            }\n            node.minLength = Math.min(node.minLength, word.length());\n            if (node.value == null) {\n                node.value = cost;\n            } else if (node.value > cost) {\n                node.value = cost;\n            }\n        }\n\n        Integer[] dp = new Integer[target.length() + 1];\n        dp[0] = 0;\n        for (int i = 0; i < target.length(); i++) {\n            TrieNode26 node = root;\n            for (int j = i; j >= 0; j--) {\n                char c = target.charAt(j);\n                int index = c - 'a';\n                if (node.children[index] == null) {\n                    break;\n                }\n                if (node.children[index].minLength > i + 1) {\n                    break;\n                }\n                node = node.children[index];\n                if (node.value != null) {\n                    if (dp[j] != null) {\n                        int cost = dp[j] + node.value;\n                        if (dp[i + 1] == null) {\n                            dp[i + 1] = cost;\n                        } else {\n                            dp[i + 1] = Math.min(dp[i + 1], cost);\n                        }\n                    }\n                }\n            }\n        }\n        return dp[target.length()] == null ? -1 : dp[target.length()];\n    }\n\n    class TrieNode26 {\n        TrieNode26[] children;\n        Integer value;\n        int minLength;\n\n        TrieNode26() {\n            this.children = new TrieNode26[26];\n            this.value = null;\n            this.minLength = Integer.MAX_VALUE;\n        }\n    }\n\n    public static void main(String[] args) {\n        Solution s = new Solution();\n        System.out.println(s.minimumCost(\"rrhrzfmk\", new String[] {\"r\",\"rz\",\"k\",\"rhrzfmk\"}, new int[] {11,3,7,8}));\n    }\n}",
    "submit_ts": "1720323603",
    "subm_id": "1312379558"
}