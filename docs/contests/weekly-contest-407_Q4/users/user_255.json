{
    "username": "abhayg_07",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<int> diff(n);\n        for( int i = 0 ; i < n ; i++ ){\n            diff[i] = target[i] - nums[i];\n            cout << diff[i] << \" \"; \n        }\n        ans = abs(diff[0]);\n        nums = diff;\n        for( int i = 1 ; i < n ; i++ ){\n            if( nums[i] < 0 && nums[i-1] < 0 ){\n                ans += max(0,abs(nums[i])-abs(nums[i-1]));\n            }\n            else if( nums[i] < 0 && nums[i-1] >= 0 ){\n                ans += abs(nums[i]);\n            }\n            else if( nums[i] >= 0 && nums[i-1] >= 0 ){\n                ans += max(0,nums[i]-nums[i-1]);\n            \n            }\n            else{\n                ans += nums[i];\n            }\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1721530937",
    "subm_id": "1327947830"
}