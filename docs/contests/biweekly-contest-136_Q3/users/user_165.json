{
    "username": "prakharrrr4",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int one=0;\n        int two=0;\n        auto &arr = grid;\n        int n = (int)(grid.size());\n        int m = (int)(grid[0].size());\n        int ret = 0;\n        for(int i=0;i<n/2;i++)\n            for(int j=0;j<m/2;j++)\n            {\n                int a = grid[i][j];\n                int b = grid[n-1-i][j];\n                int c = grid[i][m-1-j];\n                int d = grid[n-1-i][m-1-j];\n                int e = a + b + c + d;\n                ret = ret + min(e,4-e);\n            }\n        \n        if(n%2 and m%2)\n        {\n            if(grid[n/2][m/2])\n                ret++;\n        }\n        // cout << ret << endl;\n        if(n%2)\n        {\n            for(int j=0;j<m/2;j++)\n            {\n                if(arr[n/2][j]!=arr[n/2][m-j-1])\n                    one++;\n                else if(arr[n/2][j]==1)\n                    two++;\n            }\n        }\n        // cout << one << endl;\n        if(m%2)\n        {\n            for(int i=0;i<n/2;i++)\n            {\n                if(arr[i][m/2]!=arr[n-i-1][m/2])\n                    one++;\n                else if(arr[i][m/2])\n                    two++;\n            }\n        }\n        \n        if(one >= 1)\n            ret += one;\n        else\n        {\n            if(two%2) ret+= 2;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722698478",
    "subm_id": "1343181906"
}