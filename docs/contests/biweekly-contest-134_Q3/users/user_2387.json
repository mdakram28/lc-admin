{
    "username": "mkaif2196",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int ans = 0;\n        int n = colors.size();\n        vector<int> dp(n, 0);\n        \n        dp[n-1] = 1;\n        for (int i = n-2; i >= 0; i--) {\n            if (colors[i] != colors[i+1]) {\n                dp[i] = dp[i+1]+1;\n            }\n            else {\n                dp[i] = 1;\n            }\n        }\n\n        if (colors[n-1] != colors[0]) {\n            dp[n-1] += dp[0];\n        }\n\n        for (int i = n-2; i >= 0; i--) {\n            if (colors[i] != colors[i+1]) {\n                dp[i] = dp[i+1]+1;\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            // cout<<dp[i]<<\" \";\n            if (dp[i] >= k) ans++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720278430",
    "subm_id": "1311708801"
}