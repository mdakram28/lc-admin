{
    "username": "dj_khalid",
    "submission": "class Solution {\npublic:\n    long long int mod = 1e9 + 7;\n\n    int countOfPairs(vector<int>& nums) {\n        long long int n = nums.size();\n        long long int maxVal = *max_element(nums.begin(), nums.end());\n        vector<vector<long long int>> dp(n, vector<long long int>(maxVal + 1, 0));\n        vector<vector<long long int>> prefixSum(n, vector<long long int>(maxVal + 2, 0));\n\n        // Base case: first row initialization\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1;\n        }\n\n        // Fill prefixSum for the first row\n        for (int j = 0; j <= maxVal; ++j) {\n            prefixSum[0][j + 1] = (prefixSum[0][j] + dp[0][j]) % mod;\n        }\n\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= nums[i]; ++j) {\n                int lowerBound = 0;\n                int upperBound = min(min(j , j-nums[i]+nums[i-1]),nums[i-1]);\n                if(upperBound<0){continue;}\n                dp[i][j] = (prefixSum[i - 1][upperBound + 1] - prefixSum[i - 1][lowerBound] + mod) % mod;\n            }\n\n            // Fill prefixSum for the current row\n            for (int j = 0; j <= maxVal; ++j) {\n                prefixSum[i][j + 1] = (prefixSum[i][j] + dp[i][j]) % mod;\n            }\n        }\n\n        // Sum up the results for the last row\n        int fans = 0;\n        for (int j = 0; j <= nums[n - 1]; ++j) {\n            fans = (fans + dp[n - 1][j]) % mod;\n        }\n\n        return fans;\n    }\n};",
    "submit_ts": "1723346620",
    "subm_id": "1351581548"
}