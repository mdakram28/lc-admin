{
    "username": "user0070lV",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int n, int m, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int,int>> pq;\n        for(int i=0; i<n-1; i++) pq.push({horizontalCut[i], i});\n        for(int i=0; i<m-1; i++) pq.push({verticalCut[i], i+n});\n        long long int hc = 1, vc = 1;\n        long long int ans = 0;\n        \n        while(pq.size()){\n            long long int cost = pq.top().first;\n            long long int ind = pq.top().second;\n            pq.pop();\n            \n            if(ind<n){\n                hc++;\n                ans += vc * horizontalCut[ind];\n            }\n            else{\n                ind -= n;\n                vc++;\n                ans += hc * verticalCut[ind];\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925650",
    "subm_id": "1320261728"
}