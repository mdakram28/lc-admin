{
    "username": "trusting-vvunjn",
    "submission": "class Solution {\n  public:\n    int numberOfAlternatingGroups(vector<int> &colors, int k) {\n        int n = colors.size();\n        vector<int> start(n, -1);\n\n        start[0] = 0;\n        for (int i = 1; i < n; i++) {\n            if (colors[i] != colors[i - 1]) {\n                start[i] = start[i - 1];\n            } else {\n                start[i] = i;\n                start[start[i - 1]] = i - 1;\n            }\n        }\n        start[start[n - 1]] = n - 1;\n\n        if (start[n - 1] == 0) {\n            if (colors[0] != colors[n - 1])\n                return n;\n            else\n                return n - (k - 1);\n        }\n\n        int res = 0;\n        auto getAll = [&](int a, int b) {\n            auto i = a;\n            while (i != b) {\n                auto len = start[i] - i + 1;\n                if (len >= k)\n                    res += (len - k + 1);\n\n                i = start[i] + 1;\n            }\n        };\n\n        if (colors[0] != colors[n - 1]) {\n            // if can take together\n            auto len = start[0] + 1 + n - start[n - 1];\n            if (len >= k)\n                res += len - (k - 1);\n\n            getAll(start[0] + 1, start[n - 1]);\n        } else {\n            getAll(0, n);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720278346",
    "subm_id": "544562103"
}