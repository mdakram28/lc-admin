{
    "username": "Sagar_Goel",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(),verticalCut.end(),greater<int>());\n        int i=0,j=0;\n        long long ans=0;\n        while(i<horizontalCut.size() && j<verticalCut.size()){\n            if(horizontalCut[i]>verticalCut[j]){\n                ans+=(long long)((long long)horizontalCut[i]*(long long)(j+1));\n                i++;\n            }\n            else{\n                ans+=(long long)((long long)verticalCut[j]*(long long)(i+1));\n                j++;\n            }\n        }\n        while(i<horizontalCut.size()){\n                ans+=(long long)((long long)horizontalCut[i]*(long long)(j+1));\n                i++;\n        }\n        while(j<verticalCut.size()){\n                ans+=(long long)((long long)verticalCut[j]*(long long)(i+1));\n                j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925782",
    "subm_id": "1320266008"
}