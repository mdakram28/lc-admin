{
    "username": "feibonaqixu",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        \n        int maxValue = 1000;\n        vector<int> prev(maxValue + 1, 0);\n        vector<int> curr(maxValue + 1, 0);\n        \n        for (int x = 0; x <= nums[0]; ++x) {\n            prev[x] = 1;\n        }\n        \n        for (int i = 1; i < n; ++i) {\n            vector<int> prefixSum(maxValue + 1, 0);\n            vector<int> corX(maxValue + 1, -1);\n            \n            for (int x = 0; x <= maxValue; ++x) {\n                int sum = nums[i-1];\n                int y = sum - x;\n                if (y < 0) continue;\n                if (y <= maxValue) {\n                    corX[y] = x;\n                    prefixSum[x] = (x == 0 ? prev[x] : (prefixSum[x-1] + prev[x]) % MOD);\n                }\n            }\n            \n            for (int x = 0; x <= nums[i]; ++x) {\n                int y = nums[i] - x;\n                if (corX[y] == -1) continue;\n                if (y < 0) break;\n                curr[x] = prefixSum[min(corX[y], x)];\n            }\n            \n            prev.swap(curr);\n            fill(curr.begin(), curr.end(), 0); \n        }\n        \n        int result = 0;\n        for (int x = 0; x <= maxValue; ++x) {\n            result = (result + prev[x]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1723347441",
    "subm_id": "1351598848"
}