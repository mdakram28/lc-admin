{
    "username": "Charanreddy2022",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(),horizontalCut.rend());\n        sort(verticalCut.rbegin(),verticalCut.rend());\n        int i=0,j=0;\n        long long ans=0,hor=1,ver=1;\n        while(i<horizontalCut.size()&&j<verticalCut.size()){\n            if(horizontalCut[i]>verticalCut[j]){\n                ans+=(long long)ver*horizontalCut[i];\n                hor++;\n                i++;\n            }\n            else{\n                ans+=(long long)hor*verticalCut[j];\n                ver++;\n                j++;\n            }\n        }\n        while(j<verticalCut.size()){\n                ans+=(long long)hor*verticalCut[j];\n                ver++;\n                j++;\n        }\n        while(i<horizontalCut.size()){\n                ans+=(long long)ver*horizontalCut[i];\n                hor++;\n                i++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925123",
    "subm_id": "1320243673"
}