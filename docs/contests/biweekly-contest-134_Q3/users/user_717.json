{
    "username": "admiring-shockleyzns",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        colors = colors + colors + colors\n        # print(colors)\n        start = n\n        ans = 0\n        while start < 2 * n:\n            end = start\n            while end + 1 < 3 * n and colors[end + 1] != colors[end]:\n                end += 1\n            # print(\"start\", start, end)\n            if end - start + 1 >= k:\n                ans += min(end - start + 1 - k + 1, 2 * n - start)\n            # ans += max(0, end - start + 1 - k + 1, 2 * n - start + 1)\n            start = end + 1\n        return ans",
    "submit_ts": "1720277664",
    "subm_id": "544558043"
}