{
    "username": "Ayush-1234",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        ll n = s.size();\n        vector<ll> a(n), val(n), pf(n);\n        for(int i = 0; i < n; ++i) a[i] = (s[i] == '1');\n\n        ll l = 0, r = -1, ones = 0, zeros = 0;\n        while(l < n){\n            while(r + 1 < n && min(ones + a[r + 1], zeros + !a[r + 1]) <= k){\n                r++;\n                if(a[r]) ones++;\n                else zeros++;\n            }\n            val[l] = r - l + 1;\n\n            if(a[l]) ones--;\n            else zeros--;\n            l++;\n        }\n\n        for(int i = 0; i < n; ++i){\n            pf[i] = val[i];\n            if(i) pf[i] += pf[i - 1];\n        }\n\n        auto sum = [&](int l, int r) -> ll{\n            if(l > r) return 0;\n            ll temp = 0;\n            if(r >= 0) temp += pf[r];\n            if(l > 0) temp -= pf[l - 1];\n            return temp;\n        };\n\n        vector<ll> answer;\n        for(auto v: q){\n            int L = v[0], R = v[1];\n            \n            // ans is first index where i + val[i] - 1 >= r\n            // val[L] + val[L + 1] .. val[i - 1] + (R - i + 1) + (R - i) .. 1\n            int lo = v[0], hi = v[1], mid, ans; \n            while(lo <= hi){\n                mid = (lo + hi) / 2;\n\n                if(mid + val[mid] - 1 >= R){\n                    ans = mid;\n                    hi = mid - 1;\n                }else{\n                    lo = mid + 1;\n                }\n            }\n\n            ll xx = R - ans + 1;\n            ll temp = sum(L, ans - 1) + ((xx * (xx + 1)) / 2);\n            answer.push_back(temp);\n        }\n        return answer;\n    }\n};",
    "submit_ts": "1723950000",
    "subm_id": "1359734507"
}