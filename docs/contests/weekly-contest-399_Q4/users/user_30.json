{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    long long m1[200005], m2[200005], m3[200005], m4[200005];\n    const long long inf = 1e18;\n    void up(int x){\n        m1[x] = std::max(m1[x * 2] + m3[x * 2 + 1], m2[x * 2] + m1[x * 2 + 1]);\n        m2[x] = std::max(m1[x * 2] + m4[x * 2 + 1], m2[x * 2] + m2[x * 2 + 1]);\n        m3[x] = std::max(m3[x * 2] + m3[x * 2 + 1], m4[x * 2] + m1[x * 2 + 1]);\n        m4[x] = std::max(m3[x * 2] + m4[x * 2 + 1], m4[x * 2] + m2[x * 2 + 1]);\n        return ;\n    }\n    int n, a[50005];\n    void build(int x, int l, int r){\n        if(l == r){\n            m1[x] = 1ll * max(a[l], 0);\n            m2[x] = m3[x] = m4[x] = 0ll;\n            return ;\n        }\n        int mid = l + r >> 1;\n        build(x * 2, l, mid);\n        build(x * 2 + 1, mid + 1, r);\n        up(x);\n        return ;\n    }\n    void upd(int x, int l, int r, int y, int z){\n        if(l == r){\n            m1[x] = 1ll * max(z, 0);\n            m2[x] = m3[x] = m4[x] = 0ll;\n            return ;\n        }\n        int mid = l + r >> 1;\n        if(y <= mid) upd(x * 2, l, mid, y, z);\n        else upd(x * 2 + 1, mid + 1, r, y, z);\n        up(x);\n        return ;\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        for(int i = 1; i <= n; ++i) a[i] = nums[i - 1];\n        build(1, 1, n);\n        long long ans = 0ll;\n        for(int i = 0; i < queries.size(); ++i){\n            upd(1, 1, n, queries[i][0] + 1, queries[i][1]);\n            ans += m1[1];\n            //printf(\"%lld\\n\", m1[1]);\n        }\n        return ans % 1000000007;\n    }\n};",
    "submit_ts": 1716691245.0
}