{
    "username": "21je1019",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n// using namespace __gnu_pbds;\n    #define vb                  vector<bool>\n    #define ff first\n    #define ss second\n    #define pb push_back\n    #define gout(tno) cout << \"Case #\" << tno++ <<\": \"\n    #define ld long double\n    #define ll long long\n    #define f(i, a, b)        for (int(i) = int(a); (i) < int(b); ++(i))\n    #define vi                  vector<int>\n    #define vb                  vector<bool>\n    #define pb push_back\n    #define ub upper_bound\n    #define lb lower_bound\n    #define rall(x) x.rbegin(), x.rend()\n    #define uniq(v) v.resize(unique(v.begin(), v.end()) - v.begin())\n    #define scanv(v) for (int i = 0; i < v.size(); ++i) cin >> v[i];\n    // #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n    //order_of_key (k)  //find_by_order(k) \n    #define prDouble(x) cout<<fixed<<setprecision(10)<<x\n    #define pii                 pair<int, int>\n    #define vpii                vector<pair<int, int> >\n    #define w(x)                int x; cin >> x; while(x--)\n    #define FIO                 ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    #define setbits(x) __builtin_popcountll(x)    //count number of setbits in a number\n    #define max3(a, b, c)       max((a), max((b), (c)))\n    #define min3(a, b, c)       min((a), min((b), (c)))\n    #define mx_all(c)           *max_element((c).begin(), (c).end())\n    #define mn_all(c)           *min_element((c).begin(), (c).end())\n    #define all(x) x.begin(),x.end()\n    #define siz(x) ((int)(x).size())\n    #define yes cout<<\"Yes\"<<endl\n    #define no cout<<\"No\"<<endl\n    #define alice cout<<\"Alice\"<<endl\n    #define bob cout<<\"Bob\"<<endl\n    #define takahashi cout<<\"Takahashi\"<<endl\n    #define aoki cout<<\"Aoki\"<<endl\n    #define pb push_back\n    #define vi vector<int>\n    #define vb vector<bool>\n    #define vs vector<string>\n    #define vvi vector<vector<int>>\n    #define djikstra priority_queue<pair<ll,ll>,vector<pair<ll,ll>>,greater<pair<ll,ll>>>\n    #define lld long double\n    #define show(a)         for (auto& (i) : (a)) cout << i<<\" \" ;\n    #define itos to_string\n    #define STOI stoi\n \n    const lld pi = 3.1415926535897932;\n    ll mul1(ll a,ll b,ll m){ll ans=0;while(b>0){if(b&1)ans=(ans+a)%m;b=b/2;a=(a+a)%m;}return ans;}\n    ll mul(ll a,ll b,ll m){ return (a*b)%m;}\n    ll accurateFloor(ll a, ll b) {ll val = a / b; while (val * b > a)val--;return val; }\n    void yesno(bool xxx) {if(xxx) cout<<\"Yes\\n\"; else cout<<\"No\\n\";}\n    ll nCr(ll n, ll r){if (n < r)return 0; if (r > n - r) r = n - r; ll ans = 1;ll i; for (i = 1; i <= r; i++) { ans *= n - r + i; ans /= i; } return ans;}\n    ll binaryexp(ll a,ll b){ll ans=0;if(b<0)return 0; if(b==0)return 1;else if(b==1)return a; else if(b%2){ans=(a*(binaryexp((a*a),b/2)));}else ans=binaryexp((a*a),b/2);return ans;}\n    int gcd(int x,int y){if(y==0)return x;else return gcd(y,x%y);}\n \n    long long gcd(long long int a, long long int b) {if (b == 0) return a; return gcd(b, a % b);}\n      \n    // Function to return LCM of two numbers \n    long long lcm(ll a, ll b){ return (a / gcd(a, b)) * b;}\n    ll mod_add(ll a, ll b, ll m=1e9+7) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\n    ll expo(ll a, ll b, ll m) {ll res = 1; while (b > 0) {if (b & 1)res = mul(res , a,m) % m; a = mul(a , a,m) % m; b = b >> 1;} return res%m ;}\n    ll modinv(ll a , ll m ) {return expo(a , m-2 , m)%m;} // m is prime /**\n// for questions involving segments, think of sweep line algorithm and binary search,\n// if segment tree with lazy prop^ does not seem to work .\n// think greedy wisely and not rush it over the algorithm\n// Use DSU for dynamically varying graphs,expanding compressing tree and cycles\n// for(int s=m;s;s=(s-1)&m) iterating through all subsets of mask m\n// Think about topological sortings whenever you see some sort of order or maybe independency\n// Think of Rolling Hash if Your solution is giving space or time limit exceeded for string matching\n// KMP algo for single pattern searching in text and Corasick algo for multiple pattern searching in Text.\nconst ll mod= 1e9+7\n //1e9+7 //998244353\n;\nconst ll mx=1e6,N=1e5;\nconst ll inf=1e17;\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n=s.length();\n        vector<int> nxt(n);      \n        nxt[n-1]=n;\n        for(int i=n-2;i>=0;i--){\n            if(s[i+1]=='0')nxt[i]=i+1;\n            else nxt[i]=nxt[i+1];\n        }\n        int ans=0;\n        f(i,0,n){\n            int zero=0;\n            int j=i;\n            if(s[i]=='0') zero++;\n            while(j<n && zero<200){\n\n                int till=j;\n                int ones=(j-i+1)-zero;\n                int need=(zero*zero)-ones;\n                 // cout<<i<<\" \"<<j<<\" \"<<ones<<endl;\n                j=nxt[j];\n                if(need<=0) ans+=(j-till);\n                else{\n                    int len=j-till;\n                    ans+=max(0,len-need);\n                }\n                zero++;\n\n\n\n            }\n        }\n        // cout<<ans<<endl;\n        return ans;\n        \n    }\n};\n\n\n// int main(){\n//     string t;\n//     cin>>t;\n//     Solution s;\n//     cout<<s.numberOfSubstrings(t)<<endl;;\n\n// }",
    "submit_ts": "1722138672",
    "subm_id": "1335796712"
}