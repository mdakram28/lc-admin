{
    "username": "vibhor2003",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        int rowsCut = 0;\n        int colsCut = 0;\n        long long totalCost = 0;\n\n        vector<pair<int, bool>> cuts;\n        for (int &cost : horizontalCut) {\n            cuts.push_back({ cost, true });\n        }\n        for (int &cost : verticalCut) {\n            cuts.push_back({ cost, false });\n        }\n\n        sort(cuts.begin(), cuts.end(), [](auto &p, auto &q) {\n            return p.first > q.first;\n        });\n\n        for (auto &cut : cuts) {\n            int cost = cut.first;\n            bool isHorizontal = cut.second;\n\n            if (isHorizontal) {\n                totalCost += 1ll * (colsCut + 1) * cost;\n                rowsCut++;\n            }\n            else {\n                totalCost += 1ll * (rowsCut + 1) * cost;\n                colsCut++;\n            }\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926067",
    "subm_id": "1320274930"
}