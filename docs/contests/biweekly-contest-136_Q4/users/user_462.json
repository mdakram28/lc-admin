{
    "username": "Siva_Sai_",
    "submission": "class Solution {\n    vector<int> ans, tim;\n    vector<vector<int>> adj;\n    void dfs(int node, int par) {\n        for (auto ch : adj[node]) {\n            if (ch != par) {\n                dfs(ch, node);\n                if (ch % 2) {\n                    tim[node] = max(tim[node], tim[ch] + 1);\n                } else\n                    tim[node] = max(tim[node], tim[ch] + 2);\n            }\n        }\n    }\n\n    void dfs2(int node, int par) {\n        ans[node] = tim[node];\n        int s = tim[node];\n        vector<int> pre, suf;\n        for (auto ch : adj[node]) {\n            if (ch != par) {\n                pre.push_back(tim[ch] + (ch % 2 ? 1 : 2));\n                suf.push_back(tim[ch] + (ch % 2 ? 1 : 2));\n            }\n        }\n        int m = pre.size();\n        for (int i = 1; i < m; i++)\n            pre[i] = max(pre[i], pre[i - 1]);\n        for (int i = m - 2; i >= 0; i--)\n            suf[i] = max(suf[i], suf[i + 1]);\n\n        int i = 0;\n        for (auto ch : adj[node]) {\n            if (ch != par) {\n                int t = tim[ch];\n                tim[node] = 0;\n                if (i > 0)\n                    tim[node] = pre[i - 1];\n                if (i < m - 1)\n                    tim[node] = max(tim[node], suf[i + 1]);\n                if (par != -1)\n                    tim[node] = max(tim[node], tim[par] + (par % 2 ? 1 : 2));\n                if (node % 2) {\n                    tim[ch] = max(tim[ch], tim[node] + 1);\n                } else {\n                    tim[ch] = max(tim[ch], tim[node] + 2);\n                }\n                dfs2(ch, node);\n                tim[ch] = t;\n                tim[node] = s;\n                i++;\n            }\n        }\n    }\n\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        adj.resize(n);\n        ans.resize(n, 0);\n        tim.resize(n, 0);\n        for (int i = 0; i < n - 1; i++) {\n            int u = edges[i][0], v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n\n        dfs(0, -1);\n        dfs2(0, -1);\n        return ans;\n    }\n};",
    "submit_ts": "1722699393",
    "subm_id": "1343210265"
}