{
    "username": "wasd_1234",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        map<int,vector<int>>mp;\n        vector<int>dp(k+1,0);\n        int ans=1;\n        for(int i=0; i<nums.size(); i++){\n            vector<int>temp(k+1,0);\n            if(mp.find(nums[i])==mp.end()){\n                for(int j=0; j<k; j++){\n                    if(dp[j]==0) continue;\n                    temp[j+1]=1+dp[j];\n                }\n                temp[0]=1;\n                for(int j=0; j<=k; j++) dp[j]=max(dp[j],temp[j]);\n                mp[nums[i]]=temp;\n            }\n            else{\n                vector<int>temp(k+1,0);\n                for(int j=0; j<=k; j++){\n                    if(mp[nums[i]][j]!=0){\n                        temp[j]=1+mp[nums[i]][j];\n                    }\n                }\n                for(int j=0; j<k; j++){\n                    temp[j+1]=max(temp[j+1],1+dp[j]);\n                }\n                for(int j=0; j<=k; j++){\n                    mp[nums[i]][j]=max(mp[nums[i]][j],temp[j]);\n                }\n                for(int j=0; j<=k; j++) dp[j]=max(dp[j],temp[j]);\n            }\n        }\n        for(int i=0; i<=k; i++) ans=max(ans,dp[i]);\n        return ans;\n    }\n};",
    "submit_ts": 1717861800.0
}