{
    "username": "silly-yonath5it",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                a = grid[i][j]\n                b = grid[n - 1 - i][j]\n                c = grid[i][m - 1 - j]\n                d = grid[n - 1 - i][m - 1 - j]\n                s = a + b + c + d\n                ans += min(s, 4 - s)\n        can = 0\n        ones = 0\n        if n & 1:\n            for j in range(m // 2):\n                ans += grid[n // 2][j] != grid[n // 2][m - 1 - j]\n                ones += grid[n // 2][j] == 1 and grid[n // 2][m - 1 - j] == 1 \n                can += grid[n // 2][j] != grid[n // 2][m - 1 - j]\n        if m & 1:\n            for i in range(n // 2):\n                ans += grid[i][m // 2] != grid[n - 1 - i][m // 2]\n                can += grid[i][m // 2] != grid[n - 1 - i][m // 2]\n                ones += grid[i][m // 2] == 1 and grid[n - 1 - i][m // 2] == 1\n        if ones % 2 == 1 and can == 0:\n            ans += 2\n        if n & 1 and m & 1:\n            ans += grid[n // 2][m // 2]\n        return ans ",
    "submit_ts": "1722697452",
    "subm_id": "552266198"
}