{
    "username": "RobustGorilla",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> bi(31, vector<int>(n, 0));\n        vector<vector<int>> next_zero(31, vector<int>(n, 0));\n        for (int i=0; i < n; i++) {\n            for (int j=0; j < 31; j++) {\n                bi[j][i] = nums[i]&(1<<j);\n            }\n        }\n        \n        for (int j=0; j < 31; j++) {\n            for (int i=n-1; i >= 0; i--) {\n                if (i == n-1) {\n                    if (bi[j][i] > 0) {\n                        next_zero[j][i] = n;\n                    } else {\n                        next_zero[j][i] = i;\n                    }\n                } else {\n                    if (bi[j][i] > 0) {\n                        next_zero[j][i] = next_zero[j][i+1];\n                    } else {\n                        next_zero[j][i] = i;\n                    }\n                }\n            }\n        }\n        \n        long long ans = 0;\n        for (int i=0; i < n; i++) {\n            int lb = i;\n            int ub = n;\n            for (int j=0; j < 31; j++) {\n                if (k&(1<<j)) {\n                    ub = min(ub, next_zero[j][i]);\n                } else {\n                    lb = max(lb, next_zero[j][i]);\n                }\n            }\n            // cout<<i<<\" \"<<lb<<\" \"<<ub<<endl;\n            ans += max(0, ub-lb);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281535",
    "subm_id": "1311828780"
}