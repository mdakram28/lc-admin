{
    "username": "goodluck123",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n - 1; i++) {\n            map.put(i, i + 1);\n        }\n\n        int[] ans = new int[queries.length];\n        for (int i = 0; i < queries.length; i++) {\n            int[] q = queries[i];\n\n            int s = q[0];\n            int e = q[1];\n\n            if (map.containsKey(s)) {\n                List<Integer> removeKey = new ArrayList<>();\n                for (int j = s; j < e;) {\n                    removeKey.add(j);\n                    j = map.get(j);\n                }\n                for (int j : removeKey) {\n                    map.remove(j);\n                }\n                map.put(s, e);\n            }\n\n            ans[i] = map.size();\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722741888",
    "subm_id": "552341128"
}