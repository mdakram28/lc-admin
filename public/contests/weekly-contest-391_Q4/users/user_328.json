{
    "username": "Harsh1610",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        vector<int> sum,diff;\n        int i,n=points.size(),ans=INT_MAX;\n        for(auto p: points)\n        {\n            sum.push_back(p[0]+p[1]);\n            diff.push_back(p[0]-p[1]);\n        }\n        vector<int> suf3(n),suf4(n),suf1(n),suf2(n);\n        suf3[n-1]=diff[n-1],suf4[n-1]=diff[n-1],suf1[n-1]=sum[n-1],suf2[n-1]=sum[n-1];\n        for(i=n-2;i>=0;i--)\n        {\n            suf1[i]=max(suf1[i+1],sum[i]);\n            suf2[i]=min(suf2[i+1],sum[i]);\n        }\n        for(i=n-2;i>=0;i--)\n        {\n            suf3[i]=max(suf3[i+1],diff[i]);\n            suf4[i]=min(suf4[i+1],diff[i]);\n        }\n        \n        int cur1=INT_MIN,cur2=INT_MAX,cur3=cur1,cur4=cur2;\n        \n        for(i=0;i<n-1;i++)\n        {\n            \n            ans=min(ans,max(max(cur1,suf1[i+1])-min(cur2,suf2[i+1]),max(cur3,suf3[i+1])-min(cur4,suf4[i+1])));\n            // cout<<ans<<\" \"<<suf1[i+1]<<\" \"<<suf2[i+1]<<\" \"<<suf3[i+1]<<\" \"<<suf4[i+1]<<endl;\n            cur1=max(cur1,sum[i]);\n            cur2=min(cur2,sum[i]);\n            cur3=max(cur3,diff[i]);\n            cur4=min(cur4,diff[i]);\n        }\n        ans=min(ans,max(cur1-cur2,cur3-cur4));\n        return ans;\n        \n    }\n};"
}