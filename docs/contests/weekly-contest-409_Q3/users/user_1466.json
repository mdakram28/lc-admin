{
    "username": "2hQXFH1gD5",
    "submission": "#define ff first\n#define ss second\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        int sz = q.size();\n        vector<int> ans(sz);\n        int res = n - 1;\n        map<int,int> mp;\n        for (int i = 0; i < sz; i++) {\n            int l = q[i][0], r = q[i][1];\n            int fl = 0;\n            while (true){\n                auto it = mp.lower_bound(l);\n                if(it==mp.end()){\n                    if(mp.size()==0) break;\n                    --it;\n                    if((*it).ss<=l){\n                        break;\n                    }\n                }\n                if(it!=mp.begin()){\n                    --it;\n                    if((*it).ss<=l){\n                        ++it;\n                    }\n                }\n                if(l>=(*it).ff && (r<=((*it).ss))){\n                    fl = 1;\n                    break;\n                }\n                int t1 = (*it).ff,t2 = (*it).ss;\n                if((l<=t1 && r<=t1) || (l>=t2 && r>=t2)){\n                    break;\n                }\n                res += (t2-t1)-1;\n                mp.erase(it);\n            }\n            if(fl){\n                ans[i] = res;\n                continue;\n            }\n            mp[l] =r;\n            res -= (r-l);\n            res++;\n            ans[i] = res;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722741925",
    "subm_id": "1343756762"
}