{
    "username": "mananhingorani2003",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int target) {\n        int n = nums.size();\n        vector<vector<int>> andTable = buildAndTable(nums, n);\n\n        int min_diff = INT_MAX;\n\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] <= target) {\n                min_diff = min(min_diff, abs(target - nums[i]));\n                continue;\n            }\n\n            int best_j = findBestJ(nums, andTable, i, target, n);\n\n            min_diff = min(min_diff, abs(target - rangeAnd(andTable, i, best_j)));\n\n            if (best_j + 1 < n && rangeAnd(andTable, i, best_j + 1) < target) {\n                min_diff = min(min_diff, abs(target - rangeAnd(andTable, i, best_j + 1)));\n            }\n        }\n\n        return min_diff;\n    }\n\nprivate:\n    vector<vector<int>> buildAndTable(vector<int>& nums, int n) {\n        vector<vector<int>> andTable(n, vector<int>(log2(n) + 1, INT_MAX));\n\n        for (int i = 0; i < n; ++i) {\n            andTable[i][0] = nums[i];\n        }\n\n        for (int j = 1; (1 << j) <= n; ++j) {\n            for (int i = 0; i + (1 << j) - 1 < n; ++i) {\n                andTable[i][j] = andTable[i][j - 1] & andTable[i + (1 << (j - 1))][j - 1];\n            }\n        }\n\n        return andTable;\n    }\n\n    int rangeAnd(vector<vector<int>>& andTable, int l, int r) {\n        int length = r - l + 1;\n        int j = log2(length);\n        return andTable[l][j] & andTable[r - (1 << j) + 1][j];\n    }\n\n    int findBestJ(vector<int>& nums, vector<vector<int>>& andTable, int i, int target, int n) {\n        int low = i, high = n, best_j = i;\n\n        while (low < high) {\n            int mid = low + (high - low) / 2;\n            if (rangeAnd(andTable, i, mid) >= target) {\n                best_j = mid;\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n\n        return best_j;\n    }\n};\n",
    "submit_ts": "1717300086",
    "subm_id": "1274833260"
}