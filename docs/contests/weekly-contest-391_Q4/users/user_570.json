{
    "username": "vaibhavdb",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int max1=Integer.MIN_VALUE;\n        int max2=Integer.MIN_VALUE;\n        int max3=Integer.MIN_VALUE;\n        int max4=Integer.MIN_VALUE;\n        for(int i=0;i<points.length;i++){\n            max1=Math.max(max1,points[i][0]+points[i][1]);\n            max2=Math.max(max2,points[i][0]-points[i][1]);\n            max3=Math.max(max3,-points[i][0]+points[i][1]);\n            max4=Math.max(max4,-points[i][0]-points[i][1]);\n        }\n        int ans=Integer.MAX_VALUE;\n        int m1=Integer.MIN_VALUE;\n        int m2=Integer.MIN_VALUE;\n        int m3=Integer.MIN_VALUE;\n        int m4=Integer.MIN_VALUE;\n        boolean is=false;\n        for(int i=0;i<points.length;i++){\n            if(!is){\n                if(points[i][0]+points[i][1]==max1){\n                    is=true;\n                    continue;\n                }\n            }\n            m1=Math.max(m1,points[i][0]+points[i][1]);\n            m2=Math.max(m2,points[i][0]-points[i][1]);\n            m3=Math.max(m3,-points[i][0]+points[i][1]);\n            m4=Math.max(m4,-points[i][0]-points[i][1]);\n        }\n        ans=Math.max(m1+m4,m2+m3);\n        is=false;\n        m1=Integer.MIN_VALUE;\n        m2=Integer.MIN_VALUE;\n        m3=Integer.MIN_VALUE;\n        m4=Integer.MIN_VALUE;\n        for(int i=0;i<points.length;i++){\n            if(!is){\n                if(points[i][0]-points[i][1]==max2){\n                    is=true;\n                    continue;\n                }\n            }\n            m1=Math.max(m1,points[i][0]+points[i][1]);\n            m2=Math.max(m2,points[i][0]-points[i][1]);\n            m3=Math.max(m3,-points[i][0]+points[i][1]);\n            m4=Math.max(m4,-points[i][0]-points[i][1]);\n        }\n        int ans1=Math.max(m1+m4,m2+m3);\n        ans=Math.min(ans,ans1);\n        is=false;\n        m1=Integer.MIN_VALUE;\n        m2=Integer.MIN_VALUE;\n        m3=Integer.MIN_VALUE;\n        m4=Integer.MIN_VALUE;\n        for(int i=0;i<points.length;i++){\n            if(!is){\n                if(-points[i][0]+points[i][1]==max3){\n                    is=true;\n                    continue;\n                }\n            }\n            m1=Math.max(m1,points[i][0]+points[i][1]);\n            m2=Math.max(m2,points[i][0]-points[i][1]);\n            m3=Math.max(m3,-points[i][0]+points[i][1]);\n            m4=Math.max(m4,-points[i][0]-points[i][1]);\n        }\n        ans1=Math.max(m1+m4,m2+m3);\n        ans=Math.min(ans,ans1);\n        is=false;\n        m1=Integer.MIN_VALUE;\n        m2=Integer.MIN_VALUE;\n        m3=Integer.MIN_VALUE;\n        m4=Integer.MIN_VALUE;\n        for(int i=0;i<points.length;i++){\n            if(!is){\n                if(-points[i][0]-points[i][1]==max4){\n                    is=true;\n                    continue;\n                }\n            }\n            m1=Math.max(m1,points[i][0]+points[i][1]);\n            m2=Math.max(m2,points[i][0]-points[i][1]);\n            m3=Math.max(m3,-points[i][0]+points[i][1]);\n            m4=Math.max(m4,-points[i][0]-points[i][1]);\n        }\n        ans1=Math.max(m1+m4,m2+m3);\n        ans=Math.min(ans,ans1);\n        return ans;\n    }\n}"
}