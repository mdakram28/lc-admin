{
    "username": "donglin0202",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        long long horizontalSegments = 1, verticalSegments = 1, h = 0, v = 0, totalCost = 0;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += static_cast<long long>(horizontalCut[h]) * verticalSegments;\n                horizontalSegments++;\n                h++;\n            } else {\n                totalCost += static_cast<long long>(verticalCut[v]) * horizontalSegments;\n                verticalSegments++;\n                v++;\n            }\n        }\n        while (h < horizontalCut.size()) {\n            totalCost += static_cast<long long>(horizontalCut[h]) * verticalSegments;\n            horizontalSegments++;\n            h++;\n        }\n        while (v < verticalCut.size()) {\n            totalCost += static_cast<long long>(verticalCut[v]) * horizontalSegments;\n            verticalSegments++;\n            v++;\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925102",
    "subm_id": "1320242924"
}