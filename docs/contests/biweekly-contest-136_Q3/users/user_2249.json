{
    "username": "galaxyguy",
    "submission": "/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar minFlips = function(grid) {\n    const n = grid.length;\n    const m = grid[0].length;\n    let ans = 0;\n    \n    // Check if both dimensions are odd\n    if (n % 2 === 1 && m % 2 === 1) {\n        if (grid[Math.floor(n / 2)][Math.floor(m / 2)] === 1) {\n            ans += 1;\n        }\n    }\n\n    const shift = [0, 0, 0];\n    \n    // Handle the middle row if the number of rows is odd\n    if (n % 2 === 1) {\n        let a = 0;\n        let b = m - 1;\n        while (a < b) {\n            const sm = grid[Math.floor(n / 2)][a] + grid[Math.floor(n / 2)][b];\n            shift[sm] += 1;\n            a += 1;\n            b -= 1;\n        }\n    }\n\n    // Handle the middle column if the number of columns is odd\n    if (m % 2 === 1) {\n        let a = 0;\n        let b = n - 1;\n        while (a < b) {\n            const sm = grid[a][Math.floor(m / 2)] + grid[b][Math.floor(m / 2)];\n            shift[sm] += 1;\n            a += 1;\n            b -= 1;\n        }\n    }\n\n    // Calculate flips required for middle row/column adjustments\n    if (shift[2] % 2 === 1) {\n        if (shift[1] > 0) {\n            ans += shift[1];\n        } else {\n            ans += 2;\n        }\n    } else {\n        ans += shift[1];\n    }\n\n    // Calculate flips required for each 2x2 block\n    for (let i = 0; i < Math.floor(n / 2); ++i) {\n        for (let j = 0; j < Math.floor(m / 2); ++j) {\n            const a = grid[i][j];\n            const b = grid[n - 1 - i][j];\n            const c = grid[i][m - 1 - j];\n            const d = grid[n - 1 - i][m - 1 - j];\n\n            const sm = a + b + c + d;\n\n            if (sm !== 0 && sm !== 4) {\n                ans += Math.min(sm, 4 - sm);\n            }\n        }\n    }\n\n    return ans;\n}\n",
    "submit_ts": "1722700353",
    "subm_id": "1343239287"
}