{
    "username": "xish",
    "submission": "class Solution {\n\tclass Elem {\n\t\tint r, c;\n\t\tlong val;\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn \"Elem{\" +\n\t\t\t\t\t\"r=\" + r +\n\t\t\t\t\t\", c=\" + c +\n\t\t\t\t\t\", val=\" + val +\n\t\t\t\t\t'}';\n\t\t}\n\t}\n\n\tint height, width;\n\tElem rows[][];\n\n\tpublic long maximumValueSum(int[][] board) {\n\t\theight = board.length;\n\t\twidth = board[0].length;\n\t\trows = new Elem[height][3];\n\n\t\tPriorityQueue<Elem> qq = new PriorityQueue<>((a, b) -> Long.compare(a.val, b.val));\n\t\tfor (int r = 0 ; r < height ; r++) {\n\t\t\trows[r] = new Elem[3];\n\t\t\tPriorityQueue<Elem> q = new PriorityQueue<>((a, b) -> Long.compare(a.val, b.val));\n\t\t\tfor (int c = 0 ; c < width ; c++) {\n\t\t\t\tElem newElem = new Elem();\n\t\t\t\tnewElem.r = r;\n\t\t\t\tnewElem.c = c;\n\t\t\t\tnewElem.val = board[r][c];\n\t\t\t\tq.add(newElem);\n\n\t\t\t\twhile (q.size() > 3) {\n\t\t\t\t\tq.poll();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trows[r][2] = q.poll();\n\t\t\tqq.add(rows[r][2]);\n\t\t\trows[r][1] = q.poll();\n\t\t\tqq.add(rows[r][1]);\n\t\t\trows[r][0] = q.poll();\n\t\t\tqq.add(rows[r][0]);\n\n\t\t\twhile (qq.size() > 9) {\n\t\t\t\tqq.poll();\n\t\t\t}\n\t\t}\n\n\t\tList<Elem> r2List = new ArrayList<>();\n\t\twhile (!qq.isEmpty()) {\n\t\t\tr2List.add(qq.poll());\n\t\t}\n\n\n\t\tLong maxNum = null;\n\t\tfor (int r0 = 0 ; r0 < height ; r0++) {\n\t\t\tint c0 = rows[r0][0].c;\n\t\t\tfor (int r1 = 0 ; r1 < height ; r1++) {\n\t\t\t\tif (r0 == r1) continue;\n\t\t\t\tint c1;\n\t\t\t\tc1 = rows[r1][0].c;\n\t\t\t\tif (c0 == c1) {\n\t\t\t\t\tc1 = rows[r1][1].c;\n\t\t\t\t}\n\n\t\t\t\tfor (Elem elem : r2List) {\n\t\t\t\t\tint r2 = elem.r;\n\t\t\t\t\tif (r0 == r2) continue;\n\t\t\t\t\tif (r1 == r2) continue;\n\t\t\t\t\tint c2;\n\t\t\t\t\tc2 = rows[r2][0].c;\n\t\t\t\t\tif ((c0 == c2) || (c1 == c2)) {\n\t\t\t\t\t\tc2 = rows[r2][1].c;\n\t\t\t\t\t\tif ((c0 == c2) || (c1 == c2)) {\n\t\t\t\t\t\t\tc2 = rows[r2][2].c;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlong curDist = board[r0][c0];\n\t\t\t\t\tcurDist = curDist + board[r1][c1];\n\t\t\t\t\tcurDist = curDist + board[r2][c2];\n\n\t\t\t\t\tif ((maxNum == null) || (maxNum < curDist)) {\n\t\t\t\t\t\tmaxNum = curDist;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn maxNum;\n\t}\n}",
    "submit_ts": "1723908893",
    "subm_id": "556333435"
}