{
    "username": "vikrant784",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,char>> cut;\n        for(int i=0; i<horizontalCut.size(); i++)\n        {\n            cut.emplace_back(horizontalCut[i],'h');\n        }\n        for(int i=0; i<verticalCut.size(); i++)\n        {\n            cut.emplace_back(verticalCut[i],'v');\n        }\n        sort(cut.begin(),cut.end(),greater<pair<int,char>>());\n        int hor = 1;\n        int ver = 1;\n        long long tcost = 0;\n        for(auto cuts : cut)\n        {\n            int cost = cuts.first;\n            char c = cuts.second;\n            if(c=='h')\n            {\n                tcost += cost*ver;\n                hor++;\n            }\n            else\n            {\n                tcost += cost*hor;\n                ver++;\n            }\n        }\n        return tcost;\n    }\n};",
    "submit_ts": "1720926153",
    "subm_id": "1320277534"
}