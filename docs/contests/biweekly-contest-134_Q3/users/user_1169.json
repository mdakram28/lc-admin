{
    "username": "sakutsadragonpowerranger",
    "submission": "class Solution {\npublic:\n\nint couuu(vector<int>&s, int k) {\n     if (k > s.size()) return 0; \n    int count = 0;\n    int n = s.size();\n    int alternatingCount = 0;\n    for (int i = 0; i < k - 1; ++i) {\n        if (s[i] != s[i + 1]) {\n            ++alternatingCount;\n        }\n    }\n    if (alternatingCount == k - 1) {\n        ++count;\n    }\n    for (int i = 1; i <= n - k; ++i) {\n        if (s[i - 1] != s[i]) {\n            --alternatingCount;\n        }\n        if (s[i + k - 2] != s[i + k - 1]) {\n            ++alternatingCount;\n        }\n        if (alternatingCount == k - 1) {\n            ++count;\n        }\n    }\n\n    return count;\n}\n\n    int numberOfAlternatingGroups(vector<int>& col, int k) {\n        for(int i=0;i<k-1;i++){\n            col.push_back(col[i]);\n        }\n        int i=0,j=k-1;\n        int ans=0;\n        // vector<int>ri,bl;\n        // for(int i=0;i<col.size();i++){\n        //    cout<<col[i];\n        // }\n       int h=couuu(col,k);\n       return h;\n    }\n};",
    "submit_ts": "1720279862",
    "subm_id": "1311768094"
}