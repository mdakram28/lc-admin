{
    "username": "rorod8",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        dp = {}\n        \n        \n        def rec(jump,i,backed):\n            #print(jump,i,backed)\n            if i - k >=2:\n                #print('a',i-k,i,k)\n                return 0\n            if (jump,i,backed) in dp:\n                #print('b')\n                return dp[(jump,i,backed)]\n            \n            val = 0\n            if i == k:\n                #print('+1')\n                val = 1\n            \n            \n            dis = 2**jump\n            if backed or i == 0:\n                val+= rec(jump+1,i+dis,False)\n            else:\n                val+= rec(jump+1,i+dis,False) + rec(jump,i-1,True)\n                \n            dp[(jump,i,backed)] = val\n            return dp[(jump,i,backed)]\n        \n        \n        \n        v = rec(0,1,False)\n        #print(dp)\n        return v\n                \n            \n            \n        \n        ",
    "submit_ts": "1716089461",
    "subm_id": "1261842837"
}