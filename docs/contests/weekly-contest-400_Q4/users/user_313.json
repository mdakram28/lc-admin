{
    "username": "khaledlabeb552",
    "submission": "class Solution {\npublic:\n    struct SparseTable {\n    vector<vector<int> > sp;\n    vector<int> LOG;\n    vector<int> arr;\n    int n, LG;\n    SparseTable(vector<int> &_arr) : arr(_arr) {\n        n = (int)_arr.size();\n \n        LOG = vector<int>(n + 1);\n        LOG[0] = LOG[1] = 0;\n \n        for (int i = 2; i <= n; ++i) {\n            LOG[i] += LOG[i - 1] + !(i & (i - 1));\n        }\n \n        LG = LOG[n];\n        sp = vector<vector<int> >(LG + 1, vector<int>(n));\n \n        build();\n    }\n \n    int f(int lfV, int rtV) {\n        return (lfV & rtV); \n    }\n \n    void build() { // O( n log(n) )\n        sp[0] = arr;\n \n        for (int lvl = 1; lvl <= LG; ++lvl) {\n            for (int j = 0; j + (1 << lvl) <= n; ++j) {\n                sp[lvl][j] = f(sp[lvl - 1][j], sp[lvl - 1][j + (1 << (lvl - 1))]);\n            }\n        }\n    }\n \n    int Query1(int l, int r) { // O( 1 )\n        int lg = LOG[r - l + 1];\n \n        return f(sp[lg][l], sp[lg][r - (1 << lg) + 1]);\n    }\n \n    int Query2(int l, int r) { // O( LogN )\n        int lg = LOG[n];\n        int ans = 0;\n \n        for (int j = lg; ~j; --j) {\n            if ((1 << j) <= (r - l + 1)) {\n                ans = f(ans, sp[j][l]);\n                l += (1 << j);\n            }\n        }\n \n        return ans;\n    }\n};\n \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        SparseTable spt(nums);\n        int res = 1e9 + 100;\n        \n        for(int i=0;i<n;i++){\n            int temp = i;\n            int left = i , right = n - 1;\n            while(left <= right){\n                int mid  = left + (right - left) / 2;\n                if(spt.Query1(i , mid) >= k){\n                    temp = mid;\n                    left = mid + 1;\n                }else\n                    right = mid - 1;\n            }\n            res = min(res , abs(k - spt.Query1(i , temp)));\n            if(temp + 1 < n)res = min(res , abs(k - spt.Query1(i , temp + 1)));\n        }\n        return res;\n    }\n};",
    "submit_ts": "1717297713",
    "subm_id": "1274753099"
}