{
    "username": "wzy19",
    "submission": "class Solution:\n    def solution_for_2(self, n:int) -> str:\n        if n == 1:\n            return \"8\"\n        if n == 2:\n            return \"88\"\n        return \"8\" + \"9\" * (n-2) + \"8\"\n    \n    def solution_for_4(self, n:int) -> str:\n        if n <= 4:\n            return \"8\" * n \n        else:\n            return \"8\" * 2 + \"9\" * (n-4) + \"8\" * 2\n        \n    def solution_for_5(self, n:int) -> str:\n        if n <= 2:\n            return \"5\" * n\n        else:\n            return \"5\" + \"9\" * (n-2) + \"5\"\n    \n    def solution_for_6(self, n:int) -> str:\n        if n <= 2:\n            return \"6\" * n\n        elif n % 2 == 0:\n            if n == 4:\n                return \"8778\"\n            return \"8\" + \"9\" * (n // 2 - 2) + \"77\" + \"9\" * (n // 2 - 2) + \"8\"\n        else:\n            return \"8\" + \"9\" * (n // 2 - 1) + \"8\" + \"9\" * (n // 2 - 1) + \"8\"\n        \n    def solution_for_7(self, n:int) -> str:\n        if n <= 2:\n            return \"7\" * n\n        magic = [5, 7, 7, 9, 4, 4, 6, 4, 4, 9 ,7 , 7]\n        if n % 2 == 0:\n            return \"9\" * (n // 2 - 1) + str(magic[(n % 12 + 9) % 12]) * 2 + \"9\" * (n // 2 - 1)\n        else:\n            return \"9\" * (n // 2) + str(magic[(n % 12 + 9) % 12]) + \"9\" * (n // 2)\n    \n    def solution_for_8(self, n:int) -> str:\n        if n <= 6:\n            return \"8\" * n\n        else:\n            return \"8\" * 3 + \"9\" * (n-6) + \"8\" * 3\n    \n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1:\n            return \"9\" * n\n        elif k == 2:\n            return self.solution_for_2(n)\n        elif k == 3:\n            return \"9\" * n\n        elif k == 4:\n            return self.solution_for_4(n)\n        elif k == 5:\n            return self.solution_for_5(n)\n        elif k == 6:\n            return self.solution_for_6(n)\n        elif k == 7:\n            return self.solution_for_7(n)\n        elif k == 8:\n            return self.solution_for_8(n)\n        else: # k == 9\n            return \"9\" * n",
    "submit_ts": "1723952296",
    "subm_id": "556410762"
}