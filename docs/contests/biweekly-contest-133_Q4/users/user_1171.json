{
    "username": "SharadAwasthi369",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> req(n, -1);\n        for (const auto& r : requirements) {\n            req[r[0]] = r[1];\n        }\n        \n        vector<long long> dp(n * (n - 1) / 2 + 1, 0);\n        dp[0] = 1;\n        \n        for (int i = 1; i <= n; ++i) {\n            vector<long long> new_dp(n * (n - 1) / 2 + 1, 0);\n            vector<long long> prefix_sum(n * (n - 1) / 2 + 2, 0);\n            \n            for (int j = 0; j <= (i - 1) * (i - 2) / 2; ++j) {\n                prefix_sum[j + 1] = (prefix_sum[j] + dp[j]) % MOD;\n            }\n            \n            for (int j = 0; j <= i * (i - 1) / 2; ++j) {\n                int left = max(0, j - i + 1);\n                int right = min(j, (i - 1) * (i - 2) / 2);\n                if (left <= right) {\n                    new_dp[j] = (prefix_sum[right + 1] - prefix_sum[left] + MOD) % MOD;\n                }\n            }\n            \n            if (req[i-1] != -1) {\n                for (int j = 0; j <= i * (i - 1) / 2; ++j) {\n                    if (j != req[i-1]) {\n                        new_dp[j] = 0;\n                    }\n                }\n            }\n            \n            dp = move(new_dp);\n        }\n        \n        long long result = 0;\n        for (long long val : dp) {\n            result = (result + val) % MOD;\n        }\n        return result;\n    }\n};",
    "submit_ts": "1719071552",
    "subm_id": "1296849193"
}