{
    "username": "kr_mritunjay",
    "submission": "class Solution {\n    void solve(int n, vector<vector<int>>& r,unordered_map<int,int>&mp,vector<vector<long long>>&dp){\n        \n        vector<int>temp;\n        for(auto it : r)\n        {\n            temp.push_back(it[0]);\n        }\n        \n        priority_queue<int>pq;\n        \n        // for(auto it : r)\n        //      pq.push(it.first);\n    for(int i = 0; i < n+1; i++)\n        {\n            for(int j = 0; j <= 400; j++)\n            {\n                for(int f = 0; f < i && f <=j; f++)\n                {\n                    dp[i][j] = (dp[i][j] + dp[i-1][j-f])%1000000007;\n                }\n            }\n            if(mp.count(i)){\n                int temp = mp[i];\n                for(int j = 0; j <= 400; j++)\n                {\n                    if(j!=temp){\n                        dp[i][j] = 0;\n                    }\n                }\n            }\n        }\n        \n        int count = 0;\n        for(auto it : temp)\n            count += it;\n        sort(temp.begin(),temp.end());\n    }\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        unordered_map<int,int>mp;  \n        vector<vector<long long>>dp(n+1,vector<long long>(401 + 1,0));\n        dp[0][0] = 1;\n        for(auto it : r)\n            mp[it[0] + 1] = it[1];\n        solve(n,r,mp,dp);\n        \n        sort(r.begin(),r.end());\n        \n        vector<int>temp(n+1);\n        \n        for(auto it : r)\n            temp = it;\n        \n        queue<int>dq;\n        \n        for(int i =0 ; i < n ; i++)\n        {\n            temp[i] = i + 1;\n        }\n\n        long long ans = 0;\n        \n        sort(r.begin(),r.end());\n        \n        for(auto it : dp[n])\n             ans = (ans+it)%1000000007;\n        return ans;\n    }\n};",
    "submit_ts": 1719071406.0
}