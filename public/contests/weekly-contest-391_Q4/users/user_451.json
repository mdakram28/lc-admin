{
    "username": "stangri02",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int N = points.size();\n        multiset<ll> s1; \n        multiset<ll> s2;\n        vector<ll> v(N), v1(N);\n        for(int i = 0; i < N; ++i) {\n            ll d1 = (ll)points[i][0] + points[i][1];\n            ll d2 = (ll)points[i][0] - points[i][1];\n            v[i] = d1;\n            v1[i] = d2;\n            s1.insert(d1);\n            s2.insert(d2);\n        }\n        ll minDist = LLONG_MAX;\n        for(int i = 0; i < N; ++i) {\n            ll d1 = v[i];\n            ll d2 = v1[i];\n            s1.erase(s1.find(d1));\n            s2.erase(s2.find(d2));\n            auto b1 = *s1.begin();\n            auto b2 = *s2.begin();\n            auto e1 = *(prev(s1.end()));\n            auto e2 = *(prev(s2.end()));\n            ll currDist = max(e1 - b1, e2 - b2);\n            minDist = min(minDist, currDist);\n            s1.insert(d1);\n            s2.insert(d2);\n        }\n        return minDist;\n        \n    }\n};"
}