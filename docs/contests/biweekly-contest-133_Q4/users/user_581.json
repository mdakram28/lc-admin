{
    "username": "nitrbiswa",
    "submission": "class Solution {\npublic:\n    \n    const int MOD=1e9+7;\n    const int mx=1000;\n    \n    \n    vector<int> check(int n,int z,int m){\n        int p=0,y=0;\n        vector<int> c;\n        for (int j = 0; j < n; ++j) {\n            if (j == z) {\n                cout << 0 << \" \";\n                p += c[j];\n                continue;\n            }\n\n            if (c[j] + p + m >= y) {\n                cout << j << \" \";\n            } else {\n                cout << j + 1 << \" \";\n            }\n            p += c[j];\n        }\n        return c;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        unordered_map<int, int> mp;\n        for (auto req : r) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        long long pc[n + 1][mx + 1];\n        memset(pc, 0, sizeof(pc));\n\n        pc[0][0] = 1;\n        int i=1;\n        while(i<=n){\n            for (int inv = 0; inv <= mx; inv++) {\n                int pos=0;\n                while(pos<i){\n                    if(inv-pos >=0) pc[i][inv] += (pc[i - 1][inv-pos]) % MOD;\n                    pos++;\n                }\n            }\n\n            if (mp.find(i)!=mp.end())\n                for (int inv = 0; inv <= mx; inv++)\n                    if (inv != mp[i]) pc[i][inv] = 0;\n            \n            i++;\n        }\n\n        long ans = 0;\n        for (int i = 0; i <= mx; i++) {\n            ans += (pc[n][i]) % MOD;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1719070720.0
}