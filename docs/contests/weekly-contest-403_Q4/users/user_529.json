{
    "username": "oneq",
    "submission": "class Solution {\n\n    public int minimumArea(int[][] grid, int a, int b, int c, int d) {\n        int minRow = c, maxRow = -1, minCol = d, maxCol = -1;\n        int cnt = 0;\n        for (int i = a; i <= c; i++) {\n            for (int j = b; j <= d; j++) {\n                if (grid[i][j] == 1) {\n                    cnt++;\n                    if (i < minRow) minRow = i;\n                    if (i > maxRow) maxRow = i;\n                    if (j < minCol) minCol = j;\n                    if (j > maxCol) maxCol = j;\n                }\n            }\n        }\n\n        int height = maxRow - minRow + 1;\n        int width = maxCol - minCol + 1;\n        if (cnt == 0) {\n            return 0;\n        }\n        return height * width;\n    }\n\n    public int minimumSum(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int ans = grid.length * grid[0].length;\n        for (int i = 0; i < grid.length - 2; i++) {\n            for (int j = i + 1; j < grid.length - 1; j++) {\n                int a = minimumArea(grid, 0, 0, i, m - 1);\n                int b = minimumArea(grid, i + 1, 0, j, m - 1);\n                int c = minimumArea(grid, j + 1, 0, n - 1, m - 1);\n                ans = Math.min(ans, a + b + c);\n            }\n        }\n        for (int i = 0; i < m - 2; i++) {\n            for (int j = i + 1; j < m - 1; j++) {\n                int a = minimumArea(grid, 0, 0, n - 1, i);\n                int b = minimumArea(grid, 0, i + 1, n - 1, j);\n                int c = minimumArea(grid, 0, j + 1, n - 1, m - 1);\n                // System.out.println(\"i=\"+i+\" j=\"+j+\" a=\"+a+\" b=\"+b+\" c=\"+c);\n                ans = Math.min(ans, a + b + c);\n                // System.out.println(ans+\" \"+);\n\n            }\n        }\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j < m - 1; j++) {\n                int a = minimumArea(grid, 0, 0, i, m - 1);\n                int b = minimumArea(grid, i + 1, 0, n - 1, j);\n                int c = minimumArea(grid, i + 1, j + 1, n - 1, m - 1);\n                ans = Math.min(ans, a + b + c);\n\n                a = minimumArea(grid, 0, 0, i, j);\n                b = minimumArea(grid, 0, j + 1, i, m - 1);\n                c = minimumArea(grid, i + 1, 0, n - 1, m - 1);\n                ans = Math.min(ans, a + b + c);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            for (int j = 0; j < n - 1; j++) {\n                int a = minimumArea(grid, 0, 0, n - 1, i);\n                int b = minimumArea(grid, 0, i + 1, j, m - 1);\n                int c = minimumArea(grid, j + 1, i + 1, n - 1, m - 1);\n                ans = Math.min(ans, a + b + c);\n\n                a = minimumArea(grid, 0, 0, j, i);\n                b = minimumArea(grid, j + 1, 0, n - 1, i);\n                c = minimumArea(grid, 0, i + 1, n - 1, m - 1);\n                ans=Math.min(ans,a+b+c);\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": 1719114919.0
}