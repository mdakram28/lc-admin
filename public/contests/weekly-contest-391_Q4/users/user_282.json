{
    "username": "yihuic",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        #max ( (max(xi+yi)-min(xi+yi)), (max(xi-yi) - min(xi-yi)) ) \n        #xi+yi\n        aL = []#xi+yi\n        bL = []#xi-yi\n        for i, (a, b) in enumerate(points):\n            aL.append((a+b,i))\n            bL.append((a-b,i))\n        #print(aL)\n        #print(bL)\n        res = float('inf')\n        aL = sorted(aL, reverse= True)\n        bL = sorted(bL, reverse= True)\n        for i in range(len(points)):\n            if aL[0][1]==i:\n                maxA = aL[1][0]\n            else:\n                maxA = aL[0][0]\n            if aL[-1][1]==i:\n                minA =  aL[-2][0]\n            else:\n                minA = aL[-1][0]\n            if bL[0][1]==i:\n                maxB = bL[1][0]\n            else:\n                maxB = bL[0][0]\n            if bL[-1][1]==i:\n                minB =  bL[-2][0]\n            else:\n                minB = bL[-1][0]\n            res = min(res, max(maxA-minA, maxB-minB))\n        return res"
}