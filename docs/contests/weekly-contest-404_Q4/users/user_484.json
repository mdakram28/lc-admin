{
    "username": "prabhu_2020",
    "submission": "class Solution {\npublic:\n    int diam(vector<vector<int>>& e){\n        int n = e.size() + 1;\n        vector<vector<int>> g(n + 1);\n        for(int i=0;i<n-1;i++){\n            g[e[i][0]].push_back(e[i][1]);\n            g[e[i][1]].push_back(e[i][0]);\n        }\n        queue<int> q;\n        vector<int> dis(n,1e9);\n        q.push(0);\n        dis[0] = 0;\n        while(!q.empty()){\n            int node = q.front();\n            q.pop();\n            for(auto it : g[node]){\n                if(dis[it] > 1 + dis[node]){\n                    dis[it] = dis[node] + 1;\n                    q.push(it);\n                }\n            }\n        }\n        int mxv = dis[0];\n        int mxn = 0;\n        for(int i=0;i<n;i++){\n            if(dis[i] >= mxv){\n                mxv = dis[i];\n                mxn = i;\n            }\n        }\n        dis = vector<int> (n,1e9);\n        \n        \n        dis[mxn] = 0;\n        q.push(mxn);\n        while(!q.empty()){\n            int node = q.front();\n            q.pop();\n            for(auto it : g[node]){\n                if(dis[it] > 1 + dis[node]){\n                    dis[it] = dis[node] + 1;\n                    q.push(it);\n                }\n            }\n        }\n        mxv = dis[0];\n        for(int i=0;i<n;i++){\n            if(dis[i] > mxv){\n                mxv = dis[i];\n            }\n        }\n        return mxv;   \n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int a1 = diam(edges1);\n        int a2 = diam(edges2);\n        // cout<<a1<<\" \"<<a2;\n        int ans = (a1 + 1)/2 + (a2 + 1) /2 + 1;\n        ans = max(ans,a1);\n        ans = max(ans,a2);\n        return ans;\n    }\n};",
    "submit_ts": "1719718186",
    "subm_id": "1304410911"
}