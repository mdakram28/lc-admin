{
    "username": "r2unreal",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        \n        # Such array has length n.\n        \n        # When we set one value, it implicitly sets the other\n        \n        # Decrease the new ascending num until we can't anymore\n        \n        lookup = dict()\n        \n        def dp(i, ascending_num):\n            if i >= len(nums):\n                return 1\n            elif (i, ascending_num) in lookup:\n                return lookup[(i, ascending_num)]\n            else:\n                if ascending_num is not None:\n                    descending_num = nums[i-1] - ascending_num\n                total = 0\n                \n                cur_ascending = nums[i]\n                cur_descending = nums[i] - cur_ascending\n                \n                while (ascending_num is None or (cur_ascending >= ascending_num and cur_descending <= descending_num)) and cur_ascending >= 0 and cur_descending >= 0:\n                    total = (total + dp(i+1, cur_ascending)) % (10**9 + 7)\n                    \n                    cur_ascending += -1\n                    cur_descending = nums[i] - cur_ascending\n                \n                lookup[(i, ascending_num)] = total\n                    \n                return total\n                    \n                    \n        \n        \n        return dp(0, None)\n        ",
    "submit_ts": "1723345470",
    "subm_id": "1351556492"
}