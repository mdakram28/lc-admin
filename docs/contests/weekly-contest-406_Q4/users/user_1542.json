{
    "username": "ashishmaurya57",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n       \n        long long int row= 1;\n        long long int col= 1;\n        long long int totalCost = 0;\n        int i = 0, j = 0;\n        \n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] <= verticalCut[j]) {\n                totalCost += verticalCut[j] * row;\n                col++;\n                j++;\n            } else {\n                totalCost += horizontalCut[i] * col;\n                row++;\n                i++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] *col;\n            \n            i++;\n        }\n        \n        while (j < verticalCut.size()) {\n            totalCost += verticalCut[j] * row;\n           \n            j++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926016",
    "subm_id": "1320273369"
}