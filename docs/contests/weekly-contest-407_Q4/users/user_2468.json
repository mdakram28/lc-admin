{
    "username": "whiff",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long int ans = 0, temp_sum = 0;\n        vector<long long int> diff(nums.size());\n        for(int i = 0; i < nums.size(); ++i){\n            diff[i] = -nums[i] + target[i];\n        }\n        for(int i : diff){\n            cout << i << \" \";\n        }\n        cout << endl;\n        \n        for (int i = 0; i < diff.size(); ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                long long int temp = abs(diff[i]) - abs(temp_sum);\n                if (temp > 0) {\n                    ans += temp;\n                }\n                temp_sum = diff[i];\n            } else {\n                ans += abs(diff[i]);\n                temp_sum = diff[i];\n            }\n            cout << temp_sum << \" \" << ans << endl;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721533208",
    "subm_id": "1328003742"
}