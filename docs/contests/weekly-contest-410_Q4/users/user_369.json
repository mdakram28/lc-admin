{
    "username": "Googlehsieh",
    "submission": "import java.util.*;\nclass Solution {\n    int[] nums;\n    Long[][] dp;\n    Long[][] dp2;\n    int mod = 1000000007;\n    public int countOfPairs(int[] nums) {\n        this.nums = nums;\n        int m = nums.length;\n        dp = new Long[m][1001];\n        dp2 = new Long[m][1001];\n        long res = dfs(0, 0);\n        return (int)res;\n    }\n\n    private long dfs(int index, int prev) {\n        // if (index == 2 && prev == 1) {\n        //     System.out.println(\"here\");\n        // }\n        if (index == nums.length) {\n            return 1;\n        }\n        if (dp[index][prev] != null) {\n            return dp[index][prev];\n        }\n        int max = nums[index];\n\n        long res = 0;\n        // for (int i = prev; i <= max; i++) {\n        //     if (index > 0 && (max - i > nums[index - 1] - prev)) {\n        //         continue;\n        //     }\n        //     res = (res + dfs(index + 1, i)) % mod;\n        // }\n        int minCur = prev;\n        if (index > 0) {\n            minCur = Math.max(prev, max - nums[index - 1] + prev);\n        }\n        long next = dfs2(index + 1, minCur);\n        res = (res + next) % mod;\n        //System.out.println(index + \" \" + prev + \" \" + res);\n        return dp[index][prev] = res;\n    }\n\n    // sum(dfs(index + 1, i)) where i >= prev && i <= max && nums[index] - i > nums[index - 1] - prev\n    private long dfs2(int index, int val) {\n        if (index == nums.length) {\n            //System.out.println(\"dp2: \" + index + \" \" + val + \" \" + Math.max(0, nums[index - 1] - val + 1));\n            return Math.max(0, nums[index - 1] - val + 1);\n        }\n        if (val > nums[index]) {\n            //System.out.println(\"dp2: \" + index + \" \" + val + \" \" + 0);\n            return 0;\n        }\n        if (dp2[index][val] != null) {\n            return dp2[index][val];\n        }\n        long sum = (dfs(index, val) + dfs2(index, val + 1)) % 1000000007;\n        //System.out.println(\"dp2: \" + index + \" \" + val + \" \" + sum );\n        return dp2[index][val] = sum;\n    }\n}",
    "submit_ts": "1723346731",
    "subm_id": "1351583952"
}