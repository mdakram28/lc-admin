{
    "username": "nkufp_Protein",
    "submission": "class Solution {\npublic:\n    multiset<int> A, B, C, D;\n    void insert(int x, int y)\n    {\n        A.insert(x - y);\n        B.insert(x + y);\n        C.insert(-x + y);\n        D.insert(-x - y);\n    }\n    void erase(int x, int y)\n    {\n        \n        A.erase(A.find(x - y));\n        B.erase(B.find(x + y));\n        C.erase(C.find(-x + y));\n        D.erase(D.find(-x - y));\n    }\n    \n    int getValue(multiset<int>&s)\n    {\n        int minValue = *(s.begin());\n        int maxValue = *(--s.end());\n        return maxValue - minValue;\n    }\n    \n    int getMax()\n    {\n        int a = getValue(A);\n        int b = getValue(B);\n        int c = getValue(C);\n        int d = getValue(D);\n        int tmp = max({a, b, c, d});\n        return tmp;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        for (auto point: points)\n        {\n            int x = point[0];\n            int y = point[1];\n            insert(x, y);\n        }\n        \n        int res = getMax();\n        for (auto point: points)\n        {\n            int x = point[0];\n            int y = point[1];\n            erase(x, y);\n            res = min(res, getMax());\n            insert(x, y);            \n        }\n        return res;\n    }\n};"
}