{
    "username": "le-guan-ji-ji-chong-shi",
    "submission": "int get(int m, int n, vector<vector<int>>& grid) {\n    int result = 0;\n    int m2 = m / 2;\n    int n2 = n / 2;\n    for (int i = 0; i < m2; i++) {\n        for (int j = 0; j < n2; j++) {\n            int t = 0;\n            t += grid[i][j];\n            t += grid[i][n - j - 1];\n            t += grid[m - i - 1][j];\n            t += grid[m - i - 1][n - j - 1];\n            if (t == 1 || t == 3) {\n                result++;\n            }\n            else if (t == 2) result += 2;\n        }\n    }\n    return result;\n}\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int result = 0;\n        result = get(m, n, grid);\n        if (m % 2 == 0) {\n            if (n % 2 != 0) {\n                n /= 2;\n                int p = 0; int q = m - 1;\n                int num1 = 0;\n                int num2 = 0;\n                while (p<q)\n                {\n                    if (grid[p][n] == grid[q][n] && grid[p][n]) {\n                        num1++;\n                        num1 %= 2;\n                    }\n                    else if (grid[p][n] != grid[q][n]) {\n                        num2++;\n                    }\n                    p++;\n                    q--;\n                }\n                if (num1 && num2 == 0) {\n                    result += 2;\n                }\n                else result += num2;\n            }\n            return result;\n        }\n        else\n        {\n            if (n % 2 == 0) {\n                m /= 2;\n                int p = 0; int q = n - 1;\n                int num1 = 0;\n                int num2 = 0;\n                while (p<q)\n                {\n                    if (grid[m][p] == grid[m][q] && grid[m][p]) {\n                        num1++;\n                        num1 %= 2;\n                    }\n                    else if (grid[m][p] != grid[m][q]) {\n                        num2++;\n                    }\n                    p++;\n                    q--;\n                }\n                if (num1 && num2 == 0) {\n                    result += 2;\n                }\n                else result += num2;\n                return result;\n            }\n            else\n            {\n                int m2 = m / 2;\n                int n2 = n / 2;\n                if (grid[m2][n2]) result++;\n                int p = 0;\n                int q = n - 1;\n                int num1 = 0;\n                int num2 = 0;\n                while (p < q) {\n                    if (grid[m2][p] == grid[m2][q] && grid[m2][p]) {\n                        num1++;\n                        num1 %= 2;\n                    }\n                    else if (grid[m2][p] != grid[m2][q]) {\n                        num2++;\n                    }\n                    p++; q--;\n                }\n                p = 0; q = m - 1;\n                while (p<q)\n                {\n                    if (grid[p][n2] == grid[q][n2] && grid[p][n2]) {\n                        num1++;\n                        num1 %= 2;\n                    }\n                    else if(grid[p][n2] != grid[q][n2]) num2++;\n                    p++; q--;\n                }\n                if (num1 && num2 == 0) {\n                    result += 2;\n                }\n                else result += num2;\n                return result;\n\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1722698967",
    "subm_id": "552273420"
}