{
    "username": "stylebender07",
    "submission": "#include <vector>\n#include <string>\n#include <unordered_map>\n#include <algorithm>\n#include <climits>\n\nclass Solution {\n    struct TrieNode {\n        std::unordered_map<char, TrieNode*> children;\n        std::vector<int> indices;  // Store indices of words that end at this node\n    };\n\n    TrieNode* buildTrie(const std::vector<std::string>& words) {\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            TrieNode* node = root;\n            for (char c : words[i]) {\n                if (node->children.find(c) == node->children.end()) {\n                    node->children[c] = new TrieNode();\n                }\n                node = node->children[c];\n            }\n            node->indices.push_back(i);\n        }\n        return root;\n    }\n\n    int dfs(const std::string& target, int pos, TrieNode* root, const std::vector<std::string>& words, const std::vector<int>& costs, std::vector<int>& memo) {\n        if (pos == target.size()) return 0;\n        if (memo[pos] != -1) return memo[pos];\n\n        int minCost = INT_MAX;\n        TrieNode* node = root;\n        for (int i = pos; i < target.size(); ++i) {\n            if (node->children.find(target[i]) == node->children.end()) break;\n            node = node->children[target[i]];\n            for (int index : node->indices) {\n                int nextPos = i + 1;\n                int cost = dfs(target, nextPos, root, words, costs, memo);\n                if (cost != INT_MAX) {\n                    minCost = std::min(minCost, cost + costs[index]);\n                }\n            }\n        }\n\n        return memo[pos] = minCost;\n    }\n\npublic:\n    int minimumCost(std::string target, std::vector<std::string>& words, std::vector<int>& costs) {\n        TrieNode* root = buildTrie(words);\n        std::vector<int> memo(target.size(), -1);\n        int result = dfs(target, 0, root, words, costs, memo);\n        return result == INT_MAX ? -1 : result;\n    }\n};\n",
    "submit_ts": "1720322166",
    "subm_id": "1312342477"
}