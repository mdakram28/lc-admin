{
    "username": "Tani2611",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int len= nums.length;\n        long ans =0;\n        int arr[] = new int[len];\n        int x=0;\n        for(int i =0 ;i < len;i++){\n            int y = target[i] - nums[i];\n            if( (x<0&&y<0) || (x>0&&y>0) ){\n                if(Math.abs(x)<=Math.abs(y)){\n                    ans+= Math.abs(y) - Math.abs(x);\n                }\n            }else{\n                ans += Math.abs(y);\n            }\n            x=y;\n        }\n        boolean flag = true;\n        return ans;\n\n    }\n}\n\n\nclass pair implements Comparable<pair>{\n    int x;\n    int y;\n    pair(int i,int j){\n        x=i;\n        y=j;\n    }\n    public boolean equals(Object o) {\n        if (o instanceof pair) {\n            pair p = (pair)o;\n            return p.x == x && p.y == y;\n        }\n        return false;\n    }\n    public int hashCode() {\n        return Integer.valueOf(x).hashCode() * 31 + Integer.valueOf(y).hashCode();\n\n    }\n    // @Override\n    public int compareTo(pair p) {\n        int a = Integer.compare(x, p.x);\n        if(a==0){\n            return Integer.compare(y, p.y);\n        }\n        return a;\n    }\n}",
    "submit_ts": "1721532029",
    "subm_id": "1327975925"
}