{
    "username": "Decision",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        final int n = nums.length, m = 31;\n        int up = -1, down = -1, cur = (1<<30)-1+(1<<30);\n        final int[][] cs = new int[m][n];\n        for(int i=0,st=0;i<n;++i){\n            for(int j=0;j<m;++j){\n                if((nums[i] & (1<<j)) == 0){\n                    cs[j][i] = 0;\n                }else{\n                    cs[j][i] = 1 + (i > 0 ? cs[j][i-1] : 0);\n                }\n            }\n            cur = cur & nums[i];\n            while(st < i && cur < k){\n                st++;\n                for(int j=0;j<m;++j){\n                    if(cs[j][i] > i-st){\n                        cur = cur | (1<<j);\n                    }\n                }\n            }\n            if(cur >= k && (up==-1 || up>cur)){\n                up = cur;\n            }\n        }\n        cur = 0;\n        for(int i=n-1,st=n-1;i>=0;--i){\n            if(st > i){\n                st = i;\n            }\n            cur = 0;\n            for(int j=0;j<m;++j){\n                if(cs[j][i] > i-st){\n                    cur = cur | (1<<j);\n                }\n            }\n            while(st > 0 && cur > k){\n                cur = cur & nums[--st];\n            }\n            if(cur <= k && (down==-1 || down<cur)){\n                down = cur;\n            }\n        }\n        if(up >= k){\n            if(down>=0){\n                return Math.min(up-k, k-down);\n            }else{\n                return up-k;\n            }\n        }else{\n            return k-down;\n        }\n    }\n}",
    "submit_ts": 1717298533.0
}