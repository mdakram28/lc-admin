{
    "username": "macuadros",
    "submission": "static const int _ = []() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    return 0;\n}();\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int ans = 1e9;\n        \n        const int n = nums.size();\n        std::vector<std::vector<int>> pref(n, std::vector<int>(30));\n        for (int i = 0; i < n; ++i) {\n            pref[i] = pref[std::max(0, i - 1)];\n            for (int j = __builtin_ctz(nums[i]); j <= 31 - __builtin_clz(nums[i]); ++j) {\n                pref[i][j] += nums[i] >> j & 1;\n            }\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            int l = i, r = n - 1;\n            while (r >= l) {\n                int mid = (l + r) / 2;\n                \n                int cur = nums[i];\n                for (int j = 29; j >= 0; --j) {\n                    int cnt = pref[mid][j];\n                    if (i > 0) {\n                        cnt -= pref[i - 1][j];\n                    }\n                    \n                    if (cnt != mid - i + 1) {\n                        cur |= (1 << j);\n                        cur ^= (1 << j);\n                    }\n                }\n                \n                ans = std::min(ans, std::abs(cur - k));\n                \n                if (cur < k) {\n                    r = mid - 1;\n                }\n                else {\n                    l = mid + 1;\n                }\n            }\n        }\n        \n        \n\n        return ans;\n    }\n};",
    "submit_ts": 1717299383.0
}