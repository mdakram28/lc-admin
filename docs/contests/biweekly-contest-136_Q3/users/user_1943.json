{
    "username": "a-li-xiao-shao-ye",
    "submission": "class Solution {\npublic int minFlips(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        if (n * m < 4) {\n            int cnt = 0;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    if (grid[i][j] == 1) {\n                        cnt++;\n                    }\n                }\n            }\n            return cnt;\n        }\n        HashMap<Integer, Integer> hm4 = new HashMap<>();\n        HashMap<Integer, Integer> hm2 = new HashMap<>();\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int t = 0;\n                t = grid[i][j] + grid[n - 1 - i][m - 1 - j] + grid[n - 1 - i][j] + grid[i][m - 1 - j];\n                hm4.merge(t, 1, Integer::sum);\n            }\n        }\n        if (n % 2 == 1) {\n            for (int j = 0; j < m / 2; j++) {\n                int t = 0;\n                t = grid[n / 2][j] + grid[n / 2][m - 1 - j];\n                hm2.merge(t, 1, Integer::sum);\n            }\n        }\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; i++) {\n                int t = 0;\n                t = grid[i][m / 2] + grid[n - 1 - i][m / 2];\n                hm2.merge(t, 1, Integer::sum);\n            }\n        }\n        int ans = hm4.getOrDefault(2, 0) * 2\n                + hm4.getOrDefault(1, 0)\n                + hm4.getOrDefault(3, 0)\n                + hm2.getOrDefault(1, 0);\n        if (n % 2 == 1 && m % 2 == 1 && grid[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        int cnt = hm2.getOrDefault(2,0)*2;\n        if (cnt % 4 != 0) {\n            if (hm2.getOrDefault(1,0) != 0) {\n                return ans;\n            } else {\n                return ans + 2;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722698879",
    "subm_id": "552272963"
}