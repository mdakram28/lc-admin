{
    "username": "MakeChanges",
    "submission": "class Solution {\n    \n    int[] parent;\n    \n    private int find(int i) {\n        if (parent[i] != i) {\n            parent[i] = find(parent[i]);\n        }\n        return parent[i];\n    }\n    \n    private void union(int i, int j) {\n        int pi = find(i), pj = find(j);\n        if (pi != pj) {\n            parent[pj] = pi;\n        }\n    }\n    \n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        parent = new int[n];\n        for (int i = 0; i < parent.length; i++) {\n            parent[i] = i;\n        }\n        for (int i = 0; i < n; i++) {\n            int x = circles[i][0], y = circles[i][1], r = circles[i][2];\n            for (int j = 0; j < n; j++) {\n                int xx = circles[j][0], yy = circles[j][1], rr = circles[j][2];\n                int dist = (x - xx) * (x - xx) + (y - yy) * (y - yy);\n                if (dist <= (r + rr) * (r + rr)) {\n                    union(i, j);\n                }\n            }\n        }\n        Map<Integer, int[]> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            int x = circles[i][0], y = circles[i][1], r = circles[i][2];\n            int p = find(i);\n            map.putIfAbsent(p, new int[]{X, 0, Y, 0});\n            int[] grid = map.get(p);\n            grid[0] = Math.max(0, Math.min(grid[0], x - r));\n            grid[1] = Math.min(X, Math.max(grid[1], x + r));\n            grid[2] = Math.max(0, Math.min(grid[2], y - r));\n            grid[3] = Math.min(Y, Math.max(grid[3], y + r));\n            // System.out.println(Arrays.toString(grid));\n                \n            if (grid[0] == 0 && grid[1] == X) {\n                return false;\n            }\n            if (grid[2] == 0 && grid[3] == Y) {\n                return false;\n            }\n            if (grid[0] == 0 && grid[2] == 0) {\n                return false;\n            }\n            if (grid[1] == X && grid[3] == Y) {\n                return false;\n            }\n            \n        }\n        return true;\n    }\n}",
    "submit_ts": "1722137552",
    "subm_id": "1335767055"
}