{
    "username": "Shivam-a-coder",
    "submission": "class Solution {\npublic:\nint minFlips(vector<vector<int>>& grid) { \n        int n = grid.size();\n        int m = grid[0].size(); \n        int result = 0; \n         \n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                result += 1; \n            } \n        } \n \n        vector<int> temp(3, 0); \n        if (n % 2 == 1) { \n            int a = 0, b = m - 1; \n            while (a < b) { \n                int sm = grid[n / 2][a] + grid[n / 2][b]; \n                temp[sm] += 1; \n                a += 1; \n                b -= 1; \n            } \n        } \n \n        if (m % 2 == 1) { \n            int s = 0;  // start\n            int e = n - 1;   // end\n            while (s < e) { \n                int sm = grid[s][m / 2] + grid[e][m / 2]; \n                temp[sm] += 1; \n                s++; \n                e--; \n            } \n        } \n \n        if (temp[2] % 2 == 1) { \n            if (temp[1] > 0) { \n                result += temp[1]; \n            } else { \n                result += 2; \n            } \n        } else { \n            result += temp[1]; \n        } \n \n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int a = grid[i][j]; \n                int b = grid[n - 1 - i][j]; \n                int c = grid[i][m - 1 - j]; \n                int d = grid[n - 1 - i][m - 1 - j]; \n \n                int sm = a + b + c + d; \n \n                if (sm != 0 && sm != 4) { \n                    result += min(sm, 4 - sm); \n                } \n            } \n        } \n \n        return result; \n    } \n\n};",
    "submit_ts": "1722700058",
    "subm_id": "1343230408"
}