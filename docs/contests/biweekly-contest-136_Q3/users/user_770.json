{
    "username": "acebenson0704",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        # res = sum(sum(grid, []))\n        res = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                val = grid[i][j] + grid[m-i-1][j] + grid[i][n-j-1] + grid[m-i-1][n-j-1]\n                res += min(val, 4-val)\n                # if val > 2:\n                #     res = res - val + 4 - val\n        p = 0\n        s = 0\n        if m % 2 == 1:    \n            for j in range(n//2):\n                if grid[m//2][j] == 1 and grid[m//2][n-j-1] == 1:\n                    p += 1\n                    res += 2\n                elif grid[m//2][j] == 1 or grid[m//2][n-j-1] == 1:\n                    s += 1\n                    res += 1\n        if n % 2 == 1:\n            for i in range(m//2):\n                if grid[i][n//2] == 1 and grid[m-i-1][n//2] == 1:\n                    p += 1\n                    res += 2\n                elif grid[i][n//2] == 1 or grid[m-i-1][n//2] == 1:\n                    s += 1\n                    res += 1\n        if m%2 == 1 and n%2 == 1:\n            res += grid[m//2][n//2]\n        res -= ((p // 2) * 4)\n        if p % 2 == 1 and s > 0:\n            res -= 2        \n        return res",
    "submit_ts": "1722697473",
    "subm_id": "1343147794"
}