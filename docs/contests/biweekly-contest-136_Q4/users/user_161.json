{
    "username": "adhishkancharla",
    "submission": "using vi = vector<int>;\nusing vvi = vector<vi>;\nclass Solution {\npublic:\n    pair<int,vector<int>> farthest(int node,int n,vvi&adj){\n        priority_queue<pair<int,int>>pq;\n        vector<int>d(n,1e9);\n        d[node] = (node%2 == 0 ? 2 : 1);\n        pq.push({-d[node],node});\n        while (!pq.empty()){\n            int w = -pq.top().first, u = pq.top().second;\n            pq.pop();\n            if (d[u] != w)continue;\n            for (int v:adj[u]){\n                int add = (v%2 == 0 ? 2 : 1);\n                if (d[v] <= d[u] + add)continue;\n                d[v] = d[u] + add;\n                pq.push({-d[v],v});\n            }\n        }\n        int ans = node;\n        for (int i = 0;i<n;i++)\n            if (d[i] > d[ans])ans = i;\n        return {ans,d};\n    }\n    vector<int> timeTaken(vvi& edges) {\n        int n = (int)edges.size() + 1;\n        vvi adj(n);\n        for (int i = 0;i<n - 1;i++)\n            adj[edges[i][0]].push_back(edges[i][1]),adj[edges[i][1]].push_back(edges[i][0]);\n        auto [u, d1] = farthest(0,n,adj);\n        auto [v, d2] = farthest(u,n,adj);\n        d1 = farthest(v,n,adj).second;\n        vector<int>ret(n);\n        for (int i = 0;i<n;i++)\n            ret[i] = max(d1[i],d2[i]) - (i%2 == 0 ? 2 : 1);\n        return ret;\n    }\n};",
    "submit_ts": "1722699402",
    "subm_id": "1343210548"
}