{
    "username": "rejudge_thiz",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        vector<vector<int>> adj(n);\n        for(auto& e:edges) adj[e[0]].push_back(e[1]),adj[e[1]].push_back(e[0]);\n        vector<int> h(n),l(n),r(n);\n        vector<int> child;\n        auto dfs = [&](auto self,int u,int pu,int hu)->void {\n            int mx = 0;\n            l[u] = child.size();\n            for(int v:adj[u]) if(v!=pu) child.push_back(v);\n            r[u] = child.size();\n            for(int v:adj[u]) if(v!=pu) {\n                self(self,v,u,v%2?1:2);\n                mx=max(mx,h[v]);\n            }\n            h[u]=mx+hu;\n        };\n        dfs(dfs,0,-1,0);\n        int tn = child.size();\n        vector<int> re(n);\n        vector<int> seg(2*tn);\n        for(int i=0;i<tn;i++) seg[i+tn]=h[child[i]];\n        for(int i=tn-1;i;i--) seg[i]=max(seg[i<<1],seg[i<<1|1]);\n        auto query = [&](int lp,int rp){\n            int re = 0;\n            for(lp+=tn,rp+=tn;lp<rp;lp>>=1,rp>>=1){\n                if(lp&1) re=max(re,seg[lp++]);\n                if(rp&1) re=max(re,seg[--rp]);\n            }\n            return re;\n        };\n        auto dfs2 = [&](auto self,int u,int pu,int au)->void {\n            int id = l[u];\n            for(int v:adj[u]) if(v!=pu){\n                int below = h[v]-(v%2?1:2);\n                int mx = max({query(l[u],id),query(id+1,r[u]),au});\n                re[v] = max(below,mx+(u%2?1:2));\n                id++;\n                self(self,v,u,mx+(u%2?1:2));\n            }\n        };\n        dfs2(dfs2,0,-1,0);\n        re[0] = h[0];\n        return re;\n    }\n};",
    "submit_ts": "1722697950",
    "subm_id": "1343164670"
}