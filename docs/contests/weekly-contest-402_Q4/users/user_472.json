{
    "username": "anh_tai",
    "submission": "int f[100005]; \n\nint get(int u){\n    int res = 0;\n    while (u > 0){\n        res += f[u];\n        u -= u&-u;\n    }\n    return res; \n}\n\nvoid update(int u, int n, int add){\n    while (u <= n){\n        f[u] += add;\n        u += u&-u;\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        for (int u = 0; u <= n; u++){\n            f[u] = 0; \n        }\n        \n        for (int pos = 1; pos < n-1; pos++){\n            if (nums[pos] > nums[pos - 1] && nums[pos] > nums[pos + 1]){\n                update(pos+1, n, 1);\n            }\n        }\n        \n        vector<int> ans;\n        for (vector<int>&query : queries){\n            if (query[0] == 1){\n                int l = query[1]+1;\n                int r = query[2]-1;\n                if (l > r) ans.push_back(0);\n                else ans.push_back(get(r + 1) - get(l));\n            }\n            else{\n                int index = query[1];\n                int val = query[2];\n                vector<int> old_vals; \n                for (int pivot = index - 1; pivot <= index + 1; pivot++){\n                    if (pivot > 0 && pivot < n - 1){\n                        int old_val = nums[pivot + 1] < nums[pivot] && nums[pivot] > nums[pivot - 1];\n                        old_vals.push_back(old_val);\n                    }\n                    else{\n                        old_vals.push_back(0); \n                    }\n                }\n                \n                nums[index] = val; \n                for (int pivot = index - 1; pivot <= index + 1; pivot++){\n                    int new_val; \n                    if (pivot > 0 && pivot < n - 1){\n                        new_val = nums[pivot + 1] < nums[pivot] && nums[pivot] > nums[pivot - 1];\n                    }\n                    else{\n                        new_val = 0; \n                    }\n                    \n                    if (pivot > 0 && pivot < n - 1)\n                    update(pivot+1, n, new_val - old_vals[pivot - index + 1]); \n                }\n            }\n        }\n        return ans; \n    }\n};",
    "submit_ts": 1718507105.0
}