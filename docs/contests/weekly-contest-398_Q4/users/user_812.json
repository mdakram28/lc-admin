{
    "username": "AndrewB330",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        if (k < 512)\n            return gogo(1, 0, k, 1);\n        long long s = 1;\n        long long totaljumps = 0;\n        for (int j = 0; j < 32; j++) {\n            if (s + (1ll<<j) - 64 > k) break;\n            s += (1ll<<j);\n            totaljumps++;\n        }\n        if (s < k) return 0;\n        long long backs = s - k;\n        if (backs > totaljumps + 1) {\n            return 0;\n        }\n        int N = totaljumps + 1;\n        int K = backs;\n        long long ans = 1;\n        long long divs = 1;\n        //cout << N << \" \" << K << endl;\n        if (K < N / 2) K = N - K;\n        for (long long i = K + 1; i <= N; i++) {\n            ans *= i;\n            while (ans % divs == 0 && divs <= (N - K)) {\n                ans /= divs;\n                divs+=1;\n            }\n        }\n        return ans;\n    }\n    \n    \n    int gogo(long long stair, long long jump, long long k, long long cangodown) {\n        if (stair - 5 > k) {\n            return 0;\n        }\n        int ans = 0;\n        if (stair == k) {\n            ans += 1;\n        }\n        if (cangodown && stair) {\n            ans += gogo(stair - 1, jump, k, 0);\n        }\n        \n        //auto mask = ((1ll << jump)-1);\n        //if ((stair & mask) > 32 && (k & (1ll << jump)) == 0) {\n        //    return ans;\n        //}\n        //if ((stair & mask) > 32 && (stair & mask & 0xFFFFFFF0ll) != (k & mask & 0xFFFFFFF0ll)) return ans;\n        ans += gogo(stair + (1ll << jump), jump + 1, k, true);\n        return ans;\n    }\n};",
    "submit_ts": "1716088713",
    "subm_id": "1261821889"
}