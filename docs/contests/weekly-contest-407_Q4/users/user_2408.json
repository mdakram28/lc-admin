{
    "username": "CtrlC_CtrlV",
    "submission": "\n#define ll long long int\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n        ll ans = 0;\n        for(int i=0; i<n; ) {\n            if(nums[i] == target[i]) {\n                i++;\n                continue;\n            }\n            ll maxi = 0;\n            while(i < n && nums[i] < target[i]) {\n                maxi = max(maxi, (ll)(target[i] - nums[i]));\n                i++;\n            }\n            ans += maxi;\n            maxi = 0;\n            while(i <  n && nums[i] > target[i]) {\n                maxi = max(maxi, (ll)(nums[i] - target[i]));\n                i++;\n            }\n            ans += maxi;\n        }\n        int sz = diff.size();\n        ans = 0;\n        ll prev = 0;\n        for (int i = 0; i < sz; ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                ll operations = abs(diff[i]) - abs(prev);\n                if (operations > 0) ans += operations;\n                prev = diff[i];\n            } \n            else {\n                ans += abs(diff[i]);\n                prev = diff[i];\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1721533133",
    "subm_id": "1328002070"
}