{
    "username": "_chaitanya99",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int mn = 0;\n        for (int i = 0; i < (n/2); i++) {\n            for (int j = 0; j < (m/2); j++) {\n                int k = (n-1)-i;\n                int l = (m-1)-j;\n                // i,j k,j i,l k,l\n                int ones = grid[i][j] + grid[i][l] + grid[k][j] + grid[k][l];\n                mn += min(4-ones, ones);\n            }\n        }\n\n        bool allequal = true;\n        int aisa = 0;\n        int taisa = 0;\n\n        if (n%2) {\n            for (int i = 0; i < (m/2); i++) {\n                mn += (grid[n/2][i] ^ grid[n/2][(m-1)-i]);\n                if (grid[n/2][i] != grid[n/2][(m-1)-i]) {\n                    allequal = false;\n                } else {\n                    aisa += 2*grid[n/2][i];\n                }\n            }\n        }\n        if (m%2) {\n            for (int i = 0; i < (n/2); i++) {\n                mn += (grid[i][m/2] ^ grid[(n-1)-i][m/2]);\n                if (grid[i][m/2] != grid[(n-1)-i][m/2]) {\n                    allequal = false;\n                }  else {\n                    taisa += 2*grid[i][m/2];\n                }\n            }\n        }\n\n        if (!allequal) {\n            if (m%2 == 1 && n%2 == 1) {\n                return mn + grid[n/2][m/2];\n            }\n            return mn;\n        }\n\n        if (m%2 == 1 && n%2 == 1) {\n            return mn + (aisa+taisa)%4 + grid[n/2][m/2];\n        }\n\n        return mn + (aisa+taisa)%4;\n\n    }\n};",
    "submit_ts": "1722698447",
    "subm_id": "1343180891"
}