{
    "username": "summerdaway",
    "submission": "from collections import defaultdict\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        a = defaultdict(int)\n        n = len(nums)\n        mx = [0] * (n//2)\n        for i in range(n//2):\n            a[abs(nums[i]-nums[n-i-1])] += 1\n            mx[i] = max([nums[i], k-nums[i], nums[n-i-1], k-nums[n-i-1]])\n        # print(mx)\n        # print(a)\n        mx.sort()\n        ret = n\n        n = len(mx)\n        i = n-1\n        for x in range(k, -1, -1):\n            while i >= 0 and mx[i] >= x:\n                i -= 1\n            # print(x, i, (i+1)*2+(n-i-1-a[x]), a[x])\n            ret = min(ret, (i+1)*2+(n-i-1-a[x]))\n        return ret\n        ",
    "submit_ts": "1721489564",
    "subm_id": "548319295"
}