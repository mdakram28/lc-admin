{
    "username": "\u4e3a\u4ec0\u4e48\u8981\u6f14\u594f\u6625\u65e5\u5f71",
    "submission": "import java.math.BigInteger;\n\n\nclass Solution {\n    public String largestPalindrome(int n, int k) {\n        switch (k){\n            case 1:\n                return getN9(n);\n            case 2:\n                if(n == 1) return \"8\";\n                else return '8' + getN9(n - 2) + '8';\n            case 3:\n                return getN9(n);\n            case 4:\n                if(n == 1) return \"8\";\n                if(n == 2) return \"88\";\n                if(n == 3) return \"888\";\n                return \"88\" + getN9(n - 4) + \"88\";\n            case 5:\n                if(n == 1) return \"5\";\n                else return '5' + getN9(n - 2) + '5';\n            case 6:\n                if(n % 2 == 1) {\n                    if(n == 1) return \"6\";\n                    String x = getN9((n - 3) / 2);\n                    return \"8\" + x + \"8\" + x + \"8\";\n                }\n                else {\n                    if(n == 2) return \"66\";\n                    String x = getN9((n - 4) / 2);\n                    return \"8\" + x + \"77\" + x + \"8\";\n                }\n            case 7:\n                StringBuilder sb = new StringBuilder(getN9(n));\n                if(n == 1) return \"7\";\n                if(n == 2) return \"77\";\n                if(n % 2 == 1){\n                    int t = n / 2;\n                    for(int r = 9;r >= 0;r--){\n                        sb.setCharAt(t-1, (char) ('0' + r));\n                        sb.setCharAt(t+1, (char) ('0' + r));\n                        for(int h = 9;h >= 0;h--){\n                            sb.setCharAt(t, (char) ('0' + h));\n                            if(modBy7(sb)){\n                                return sb.toString();\n                            }\n                        }\n                    }\n                    return \"-1\";\n                }\n                else {\n                    int t = n / 2;\n                    for(int r = 9;r >= 0;r--){\n                        sb.setCharAt(t-2, (char) ('0' + r));\n                        sb.setCharAt(t+1, (char) ('0' + r));\n                        for(int h = 9;h >= 0;h--){\n                            sb.setCharAt(t-1, (char) ('0' + h));\n                            sb.setCharAt(t, (char) ('0' + h));\n                            if(modBy7(sb)){\n                                return sb.toString();\n                            }\n                        }\n                    }\n                    return \"-2\";\n                }\n            case 8:\n                if(n == 1) return \"8\";\n                if(n == 2) return \"88\";\n                if(n == 3) return \"888\";\n                if(n == 4) return \"8888\";\n                if(n == 5) return \"88888\";\n                return \"888\" + getN9(n - 6) + \"888\";\n            case 9:\n                return getN9(n);\n        }\n        return \"0\";\n    }\n\n    public String getN9(int n){\n        if(n == 0) return \"\";\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0;i<n;i++){\n            sb.append('9');\n        }\n        return sb.toString();\n    }\n    \n    public boolean modBy7(StringBuilder s){\n        BigInteger maxNDigit = new BigInteger(s.toString());\n        return maxNDigit.mod(BigInteger.valueOf(7)).equals(BigInteger.ZERO);\n    }\n}",
    "submit_ts": "1723950514",
    "subm_id": "556399533"
}