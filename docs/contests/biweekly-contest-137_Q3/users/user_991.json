{
    "username": "Saket Sanadhya",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n        vector<tuple<int, int, int>> candi;\n        \n        for (int i = 0; i < m; ++i) {\n            vector<tuple<int, int>> row; \n            for (int j = 0; j < n; ++j) {\n                row.push_back({board[i][j], j});\n            }\n            sort(row.rbegin(), row.rend());\n            for (int k = 0; k < min(3, (int)row.size()); ++k) {\n                candi.push_back({get<0>(row[k]), i,get<1>(row[k])});\n            }\n        }\n\n        for (int j = 0; j < n; ++j) {\n           vector<tuple<int, int>> col;  \n            for (int i = 0; i < m; ++i) {\n                col.push_back({board[i][j], i});\n            }\n          sort(col.rbegin(), col.rend());\n            for (int k = 0; k < std::min(3, (int)col.size()); ++k) {\n                candi.push_back({get<0>(col[k]),get<1>(col[k]), j});\n            }\n        }\n\n        sort(candi.rbegin(), candi.rend());\n\n        long long ans = LLONG_MIN;\n\n        for (int i = 0; i < candi.size(); ++i) {\n            for (int j = i + 1; j < candi.size(); ++j) {\n                for (int k = j + 1; k < candi.size(); ++k) {\n                    auto [val1, r1, c1] = candi[i];\n                    auto [val2, r2, c2] = candi[j];\n                    auto [val3, r3, c3] = candi[k];\n\n                    if (r1 != r2 && r1 != r3 && r2 != r3 &&\n                        c1 != c2 && c1 != c3 && c2 != c3) {\n                        long long sum = (long long)val1 + val2 + val3;\n                        ans = max(ans, sum);\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1723910217",
    "subm_id": "1359221736"
}