{
    "username": "ravishankarnitr",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(51, 0));\n        \n        // Base case: for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1; // arr1[0] can be any value from 0 to nums[0]\n        }\n        \n        // Fill the DP table\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j <= nums[i]; ++j) { // arr1[i]\n                int arr2_i = nums[i] - j;\n                if (arr2_i < 0) continue;\n                for (int k = 0; k <= j; ++k) { // arr1[i-1] <= arr1[i]\n                    if (arr2_i <= nums[i - 1] - k) { // arr2[i] <= arr2[i-1]\n                        dp[i][j] = (dp[i][j] + dp[i - 1][k]) % MOD;\n                    }\n                }\n            }\n        }\n        \n        // Sum up all valid pairs for the last element\n        int result = 0;\n        for (int j = 0; j <= 50; ++j) {\n            result = (result + dp[n - 1][j]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1723344147",
    "subm_id": "1351527578"
}