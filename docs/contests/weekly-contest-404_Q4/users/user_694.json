{
    "username": "_shubham_10",
    "submission": "class Solution {\npublic:\n    void dfs(int node,vector<vector<int>>& g,vector<int>&dis, int d, int p){\n        dis[node]=d;\n        for(auto v:g[node]){\n            if(dis[v]==-1){\n                dfs(v,g,dis,d+1,node);\n            }\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        vector<vector<int>>g1(n);\n        for(int i=0;i<n-1;i++){\n            int a=edges1[i][0];\n            int b=edges1[i][1];\n            g1[a].push_back(b);\n            g1[b].push_back(a);\n        }\n        int m=edges2.size()+1;\n        \n        vector<vector<int>>g2(m);\n        for(int i=0;i<m-1;i++){\n            int a=edges2[i][0];\n            int b=edges2[i][1];\n            g2[a].push_back(b);\n            g2[b].push_back(a);\n        }\n        \n        vector<int>dis(n,-1);\n        dfs(0,g1,dis,0,0);\n        int node=0;\n        for(int i=0;i<n;i++){\n            if(dis[node]<dis[i]){\n                node=i;\n            }\n        }\n        for(int i=0;i<n;i++){\n            dis[i]=-1;\n        }\n        dfs(node,g1,dis,0,node);\n        int d1=0;\n        for(int i=0;i<n;i++){\n            d1=max(d1,dis[i]);\n        }\n        \n        \n        vector<int>dis1(m,-1);\n        dfs(0,g2,dis1,0,0);\n        int nod=0;\n        for(int i=0;i<m;i++){\n            if(dis1[nod]<dis1[i]){\n                nod=i;\n            }\n        }\n        for(int i=0;i<m;i++){\n            dis1[i]=-1;\n        }\n        dfs(nod,g2,dis1,0,nod);\n        int d2=0;\n        for(int i=0;i<m;i++){\n            d2=max(d2,dis1[i]);\n        }\n        int ans= (d1+1)/2 +(d2+1)/2+1;\n        ans=max(ans,max(d1,d2));\n        return ans;\n    }\n};",
    "submit_ts": 1719719570.0
}