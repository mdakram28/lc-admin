{
    "username": "dream_boy",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int cur = n - 1;\n        set<pair<int, int>> s;\n        for (auto& q : queries) {\n            int x = q[0], y = q[1];\n            auto it = s.lower_bound({ x, -1 });\n\n            if (it != s.begin()) {\n                auto [prev_l, prev_r] = *prev(it);\n                if (prev_r >= y) {\n                    ans.push_back(cur);\n                    continue;\n                }\n            }\n\n            if (it != s.end()) {\n                auto [next_l, next_r] = *it;\n                if (next_l == x && next_r >= y) {\n                    ans.push_back(cur);\n                    continue;\n                }\n            }\n\n            vector<pair<int, int>> to_remove;\n            while (it != s.end()) {\n                int l = it->first, r = it->second;\n                if (l >= y) break;\n                to_remove.push_back(*it);\n                ++it;\n            }\n\n            for (auto& p : to_remove) {\n                s.erase(p);\n                cur += p.second - p.first - 1;\n            }\n\n            s.insert({ x, y });\n            cur -= y - x - 1;\n            ans.push_back(cur);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722741521",
    "subm_id": "1343747057"
}