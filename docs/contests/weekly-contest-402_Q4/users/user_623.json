{
    "username": "lgqfhwy",
    "submission": "class Solution {\npublic:\n    static const int N = 1e5 + 2;\n    int n;\n    int t[2 * N];\n    void build() {\n        for (int i = n - 1; i > 0; --i) {\n            t[i] = t[i << 1] + t[i << 1 | 1];\n        }\n    }\n    void modify(int p, int v) { // set value at position p.\n        for (t[p += N] = v; p > 1; p >>= 1) {\n            t[p >> 1] = t[p] + t[p ^ 1];\n        }\n    }\n\n    int query(int l, int r) { // sum an interval [l, r)\n        int res = 0;\n        for (l += N, r += N; l < r; l >>= 1, r >>= 1) {\n            if (l & 1) {\n                res += t[l++];\n            }\n            if (r & 1) {\n                res += t[--r];\n            }\n        }\n        return res;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& q) {\n        n = nums.size();\n        int m = q.size();\n        vector<bool> isv(n, false);\n        vector<int> ret;\n        for (int i = 0; i < n; ++i) {\n            if (i - 1 >= 0 && i + 1 < n && nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                //t[n + i] = 1;\n                isv[i] = true;\n                modify(i, 1);\n                //cout << \"i = \" << i << endl;\n            } else {\n                //t[n + i] = 0;\n                isv[i] = false;\n            }\n        }\n        //build();\n        for (auto &j : q) {\n            if (j[0] == 1) {\n                int cur = query(j[1] + 1, j[2]);\n                ret.push_back(cur);\n            } else {\n                int i = j[1], v = j[2];\n                //cout << \"i = \" << i << \", v = \" << v << \", isv = \" << isv[i] << endl;\n                if (i - 1 >= 0 && isv[i - 1] && v >= nums[i - 1]) {\n                    modify(i - 1, 0);\n                    isv[i - 1] = false;\n                }\n                if (i - 2 >= 0 && !isv[i - 1] && v < nums[i - 1] && nums[i - 1] > nums[i - 2]) {\n                    modify(i - 1, 1);\n                    isv[i - 1] = true;\n                }\n                if (i + 1 < n && isv[i + 1] && v >= nums[i + 1]) {\n                    modify(i + 1, 0);\n                    isv[i + 1] = false;\n                }\n                if (i + 2 < n && !isv[i + 1] && nums[i + 1] > v && nums[i + 1] > nums[i + 2]) {\n                    modify(i + 1, 1);\n                    isv[i + 1] = true;\n                }\n                if (isv[i] && (v <= nums[i - 1] || v <= nums[i + 1])) {\n                    modify(i, 0);\n                    isv[i] = false;\n                }\n                if (!isv[i] && i - 1 >= 0 && i + 1 < n && v > nums[i - 1] && v > nums[i + 1]) {\n                    modify(i, 1);\n                    isv[i] = true;\n                    //cout << \"here1, i = \" << i << endl;\n                }\n                nums[i] = v;\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1718508361.0
}