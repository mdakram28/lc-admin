{
    "username": "nevergiveup",
    "submission": "class Solution {\n\n\n    private static long[][][] dp = new long[2010][51][51];\n\n    private final long MOD = 1000_000_007L;\n    // suffix for each arr1\n    private long[][] suffix = new long[52][52];\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        for (int i = 0;i < n;i ++) {\n            for (int val1 = 0;val1 <= 50;val1 ++) {\n                for (int val2 = 0;val2 <= 50;val2 ++) {\n                    dp[i][val1][val2] = 0;\n                }\n            }\n        }\n        for (int i = 0;i < n;i ++) {\n            if (i == 0) {\n                for (int val1 = 0;val1 <= nums[i];val1 ++) {\n                    int val2 = nums[i] - val1;\n                    dp[i][val1][val2] = (dp[i][val1][val2] + 1) % MOD;\n                }\n            } else {\n                for (int val1 = 0;val1 <= nums[i];val1 ++) {\n                    int val2 = nums[i] - val1;\n                    long result = 0;\n                    for (int prev = 0;prev <= val1;prev ++) {\n                        result = (result + suffix[prev][val2]) % MOD;\n                    }\n                    dp[i][val1][val2] = (dp[i][val1][val2] + result) % MOD;\n                }\n            }\n            // build suffix\n            for (int val1 = 0;val1 <= 50;val1 ++) {\n                for (int val2 = 0;val2 <= 50;val2 ++) {\n                    suffix[val1][val2] = 0;\n                }\n            }\n            for (int val1 = 0;val1 <= 50;val1 ++) {\n                for (int val2 = 50;val2 >= 0;val2 --) {\n                    suffix[val1][val2] = (dp[i][val1][val2] + suffix[val1][val2 + 1]) % MOD;\n                }\n            }\n        }\n        long ans = 0;\n        for (int i = 0;i <= nums[n - 1];i ++) {\n            ans = (ans + dp[n - 1][i][nums[n - 1] - i]) % MOD;\n        }\n        return (int) ans;\n    }\n\n}",
    "submit_ts": "1723344648",
    "subm_id": "1351539060"
}