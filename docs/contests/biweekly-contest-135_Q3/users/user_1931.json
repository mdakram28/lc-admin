{
    "username": "hjinme",
    "submission": "impl Solution {\n    pub fn min_changes(nums: Vec<i32>, k: i32) -> i32 {\n        use std::collections::HashMap;\n        let mut m = HashMap::new();\n\n        let sum = nums.len() / 2;\n        for i in 0..nums.len() / 2 {\n            let n = (nums[i] - nums[nums.len() - i - 1]).abs();\n            *m.entry(n).or_insert(0) += 1;\n        }\n\n        let mut s = m.into_iter().collect::<Vec<_>>();\n        s.sort_unstable_by(|a, b| b.1.cmp(&a.1));\n\n        let mut r = sum as i32;\n        for (x, max) in s.into_iter() {\n            if (r < (sum - max) as i32) {\n                break;\n            }\n            let mut c = (sum - max) as i32;\n            for i in 0..nums.len() / 2 {\n                if nums[i].min(nums[nums.len() - i - 1]) + x > k\n                    && nums[i].max(nums[nums.len() - i - 1]) - x < 0\n                {\n                    c += 1;\n                }\n            }\n            r = r.min(c);\n        }\n        r\n    }\n}",
    "submit_ts": "1721489361",
    "subm_id": "548318448"
}