{
    "username": "nevermind-4d",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        int[] count = new int[k + 1];\n        int[] biggestRangeCountfor1 = new int[k + 1];\n        for(int i = 0; i < n / 2; i++){\n            count[Math.abs(nums[i] - nums[n - i -1])]++;\n            int left = Math.min(nums[i], nums[n - i -1]);\n            int right = Math.max(nums[i], nums[n - i -1]);\n            biggestRangeCountfor1[Math.max(right, k - left)]++;\n        }\n\n        int min = n;\n        int extra = 0;\n        for(int i = 0; i <= k; i++){\n            int cur = n / 2 - count[i];\n            if(i > 0) extra += biggestRangeCountfor1[i - 1];\n            cur += extra;\n            min = Math.min(min, cur);\n        }\n        return min;\n    }\n}",
    "submit_ts": "1721489458",
    "subm_id": "548318852"
}