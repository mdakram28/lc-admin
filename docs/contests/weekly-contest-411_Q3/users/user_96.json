{
    "username": "\u694a\u5b97\u8afa",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        \n        vector<int> power(n, 1);\n        for (int i = 1; i < n; ++i) {\n            power[i] = power[i - 1] * 10 % k;\n        }\n        \n        vector vis(n, vector<int>(k));\n        \n        string ans(n, '0');\n        \n        auto dfs = [&](auto &&self, int idx, int mod) -> bool {\n            if (idx == (n + 1) / 2) {\n                return mod ? false : true;\n            }\n            if (vis[idx][mod]) {\n                return false;\n            }\n            for (int i = 9; i >= (idx == 0 ? 1 : 0); --i) {\n                int nmod;\n                if (n & 1 && idx == n / 2) {\n                    nmod = (mod + (i * power[n - idx - 1] % k)) % k;\n                } else {\n                    nmod = (mod + (i * power[n - idx - 1] % k + i * power[idx] % k) % k) % k;\n                }\n                bool check = self(self, idx + 1, nmod);\n                if (check) {\n                    ans[idx] = char(i + '0');\n                    if (n % 2 == 0 || idx != n / 2) {\n                        ans[n - idx - 1] = char(i + '0');\n                    }\n                    return true;\n                }\n            }\n            vis[idx][mod] = 1;\n            return false;\n        };\n        dfs(dfs, 0, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1723950433",
    "subm_id": "1359745852"
}