{
    "username": "rutvikjakasaniya",
    "submission": "class Solution {\n    public int countOfPairs(int[] values) {\n        int size = values.length;\n        long[][][] memo = new long[size][51][51];\n        for (long[][] outer : memo) {\n            for (long[] inner : outer) {\n                Arrays.fill(inner, -1);\n            }\n        }\n\n        long modValue = 1000000007;\n\n        return (int) findPairs(0, 0, values[0], values, memo, modValue);\n    }\n\n    private long findPairs(int index, int firstValue, int secondValue, int[] values, long[][][] memo, long modValue) {\n        if (index >= values.length) return 1;\n        if (memo[index][firstValue][secondValue] != -1) return memo[index][firstValue][secondValue];\n\n        long result = 0;\n        for (int i = firstValue; i <= values[index]; i++) {\n            for (int j = secondValue; j >= 0; j--) {\n                if (i + j == values[index]) {\n                    result = (result + findPairs(index + 1, i, j, values, memo, modValue)) % modValue;\n                }\n            }\n        }\n\n        memo[index][firstValue][secondValue] = result;\n        return result;\n    }\n}",
    "submit_ts": "1723345546",
    "subm_id": "1351558126"
}