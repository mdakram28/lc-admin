{
    "username": "adithyag1",
    "submission": "class Solution {\npublic:\n    pair<int,int> minDia(vector<vector<int>> &edges){\n        pair<int,int> ans;\n        int n=edges.size()+1;\n        vector<vector<int>> adj(n);\n        for(vector<int> &edge:edges){\n            adj[edge[0]].push_back(edge[1]);\n            adj[edge[1]].push_back(edge[0]);\n        }\n        queue<int> q;\n        vector<int> vis(n,false);\n        vis[0]=true;\n        q.push(0);\n        int l1,l2;\n        while(!q.empty()){\n            int f=q.front();\n            q.pop();\n            l1=f;\n            for(int child:adj[f]){\n                if(!vis[child]){\n                    vis[child]=true;\n                    q.push(child);\n                }\n            }\n        }\n\n        vector<int> d1(n),d2(n);\n        d1[l1]=0;\n        vis.assign(n,false);\n        vis[l1]=true;\n        int lvl=0;\n        q.push(l1);\n        while(!q.empty()){\n            int si=q.size();\n            while(si--){\n                int f=q.front();\n                q.pop();\n                l2=f;\n                d1[f]=lvl;\n                for(int child:adj[f]){\n                    if(!vis[child]){\n                        vis[child]=true;\n                        q.push(child);\n                    }\n                }\n            }\n            lvl++;\n        }\n\n        vis.assign(n,false);\n        d2[l2]=0;\n        lvl=0;\n        q.push(l2);\n        vis[l2]=true;\n        while(!q.empty()){\n            int si=q.size();\n            while(si--){\n                int f=q.front();\n                q.pop();\n                d2[f]=lvl;\n                for(int child:adj[f]){\n                    if(!vis[child]){\n                        vis[child]=true;\n                        q.push(child);\n                    }\n                }\n            }\n            lvl++;\n        }\n        //cout<<l1<<\" \"<<l2<<\" \"<<d2[l1]<<endl;\n        ans.first=d2[l1];\n        ans.second=n+1;\n        for(int i=0;i<n;i++){\n            ans.second=min(ans.second,max(d1[i],d2[i]));\n        }\n        return ans;\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        pair<int,int> d1=minDia(edges1),d2=minDia(edges2);\n        return max(max(d1.first,d2.first),d1.second+1+d2.second);\n    }\n};",
    "submit_ts": 1719719657.0
}