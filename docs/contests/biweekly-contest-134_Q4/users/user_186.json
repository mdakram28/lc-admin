{
    "username": "singh_deopa",
    "submission": "class Solution {\n    int B = 31;\n\n    void update(vector<int>& f, int& x, int val) {\n        for (int i = 0; i < B; i++) {\n            if ((x >> i) & 1) {\n                f[i] += val;\n            }\n        }\n    }\n\n    int get(vector<int>& f, int dis) {\n        int res = 0;\n\n        for (int i = 0; i < B; i++) {\n            assert(f[i] <= dis);\n\n            if (f[i] == dis) {\n                res |= (1 << i);\n            }\n        }\n\n        return res;\n    }\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = (int) nums.size();\n        long long res = 0;\n        vector<int> f1(B), f2(B);\n        int i = 0, l = 0, r = 0;\n        int v1 = 0;\n\n        // cout << v1 << \" \" << v2 << \"\\n\";\n\n        while (i < n) {\n            l = max(l, i);\n            v1 = get(f1, l - i);\n\n            while (l < n && v1 != k && ((nums[l] & k) == k)) {\n                update(f1, nums[l], 1);\n                v1 &= nums[l];\n                l++;\n            }\n\n            if (v1 == k) {\n                r = max(r, l);\n\n                while (r < n && ((nums[r] & k) == k)) {\n                    // update(f2, nums[r], 1);\n                    r++;\n                }\n\n                // cout << i << \" \" << l << \"  \"<< r << \"\\n\";\n                res += 1LL * (r - l + 1);\n            }\n\n            if (l != i) {\n                update(f1, nums[i], -1);\n            }\n\n            i++;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720278866",
    "subm_id": "1311727595"
}