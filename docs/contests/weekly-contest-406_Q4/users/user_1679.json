{
    "username": "mrgulrez",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        List<int[]> cuts = new ArrayList<>();\n        \n        for (int cost : horizontalCut) {\n            cuts.add(new int[]{cost, 0});\n        }\n        for (int cost : verticalCut) {\n            cuts.add(new int[]{cost, 1}); \n        }\n        \n\n        cuts.sort((a, b) -> b[0] - a[0]);\n        \n        long horizontalP = 1;\n        long verticalP = 1;\n        long totalCost = 0;\n        \n        for (int[] cut : cuts) {\n            int cost = cut[0];\n            if (cut[1] == 0) {\n              \n                totalCost += cost * verticalP;\n                horizontalP++;\n            } else {\n                \n                totalCost += cost * horizontalP;\n                verticalP++;\n            }\n        }\n        \n        return totalCost;\n    }\n}",
    "submit_ts": "1720925793",
    "subm_id": "1320266399"
}