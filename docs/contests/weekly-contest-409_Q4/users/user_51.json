{
    "username": "pingchungchang",
    "submission": "class Solution {\npublic:\n    #define pii pair<int,int>\n    #define fs first\n    #define sc second\n\n    struct BIT{\n        vector<int> bit;\n        int n;\n        BIT(int _n = 0){\n            _n++;\n            bit = vector<int>(_n,0);\n            n = _n;\n        }\n        void modify(int p,int v){\n            for(;p<n;p+=p&-p)bit[p] += v;\n            return;\n        }\n        int getval(int s,int e = -1){\n            if(e<s)swap(s,e);\n            int re = 0;\n            for(;e>0;e-=e&-e)re += bit[e];\n            s--;\n            for(;s>0;s-=s&-s)re -= bit[s];\n            return re;\n        }\n    };\n    BIT sbit,cbit;\n    set<pii> st;\n    vector<int> arr;\n    int n;\n\n    void combine(pii a,pii b){\n        if(a.sc != b.fs-1)return;\n        if(a.fs<n){\n            cbit.modify(a.sc-a.fs+1,-1);\n            sbit.modify(a.sc-a.fs+1,-(a.sc-a.fs+1));\n        }\n        if(b.fs<n){\n            cbit.modify(b.sc-b.fs+1,-1);\n            sbit.modify(b.sc-b.fs+1,-(b.sc-b.fs+1));\n        }\n        st.erase(a);\n        st.erase(b);\n        st.insert(pii(a.fs,b.sc));\n        a.sc = b.sc;\n        if(a.fs<n){\n            cbit.modify(a.sc-a.fs+1,1);\n            sbit.modify(a.sc-a.fs+1,(a.sc-a.fs+1));\n        }\n        return;\n    }\n\n    void add(int l,int r){\n        int len = r-l+1;\n        st.insert(pii(l,r));\n        if(l<n){\n            cbit.modify(len,1);\n            sbit.modify(len,len);\n        }\n        auto it = st.find(pii(l,r));\n        if(it != st.begin()&&arr[prev(it)->sc] != arr[it->fs]){\n            combine(*prev(it),*it);\n        }\n        it = --st.upper_bound(pii(l+1,-1));\n        if(it != st.end()&&next(it) != st.end()&&arr[next(it)->fs] != arr[it->sc]){\n            combine(*it,*next(it));\n        }\n        return;\n    }\n    void del(int l,int r){\n        int len = r-l+1;\n        st.erase(pii(l,r));\n        if(l<n){\n            cbit.modify(len,-1);\n            sbit.modify(len,-len);\n        }\n        return;\n    }\n\n    void upd(int p,int v){\n        if(arr[p] == v)return;\n        arr[p] = v;\n        auto it = st.lower_bound(pii(p,-1));\n        if(it != st.end()&&it->fs == p){\n            int l = it->fs,r = it->sc;\n            del(it->fs,it->sc);\n            add(p,p);\n            if(p != r)add(p+1,r);\n            return;\n        }\n        else{\n            it--;\n            int l = it->fs,r = it->sc;\n            del(it->fs,it->sc);\n            add(l,p-1);\n            add(p,p);\n            if(p != r)add(p+1,r);\n        }\n        return;\n    }\n    int getans(int len){\n        auto it = st.upper_bound(pii(n,-1));\n        it--;\n        int l = it->fs,r = it->sc;\n        int re = sbit.getval(len,n*2)-(len-1)*cbit.getval(len,n*2);\n        int sh = (r-len+1)-n+1;\n        cout<<l<<' '<<r<<\":\"<<sh<<endl;\n        sh = max(0,sh);\n        re -= sh;\n        return re;\n    }\n\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        n = colors.size();\n        sbit = cbit = BIT(n*2+1);\n        for(int i = 0;i<n;i++)colors.push_back(colors[i]);\n        arr = vector<int>(colors.size(),0);\n        sbit.modify(1,n);cbit.modify(1,n);\n        for(int i = 0;i<n*2;i++)st.insert(pii(i,i));\n        for(int i = 0;i<n*2;i++){\n            upd(i,colors[i]);\n        }\n        for(int j = 0;j<8;j++)cout<<j<<\":\"<<cbit.getval(j,j)<<' '<<sbit.getval(j,j)<<endl;\n        for(auto &j:st)cout<<j.fs<<','<<j.sc<<' ';cout<<endl;\n        vector<int> ans;\n        for(auto &i:queries){\n            int t = i[0];\n            if(t == 2){\n                int p = i[1],v = i[2];\n                upd(p,v);\n                upd(p+n,v);\n            }\n            else{\n                ans.push_back(getans(i[1]));\n            }\n            // for(auto &j:st)cout<<j.fs<<','<<j.sc<<' ';cout<<endl;\n            // for(int j = 0;j<8;j++)cout<<j<<\":\"<<cbit.getval(j,j)<<' '<<sbit.getval(j,j)<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743538",
    "subm_id": "1343794212"
}