{
    "username": "skywalkert",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& cir) {\n        typedef long long LL;\n        typedef double DB;\n        int n = cir.size();\n        vector<int> dsu(n + 2, -1);\n        function<int(int)> dsuFind = [&](int x) {\n            return dsu[x] < 0 ? x : (dsu[x] = dsuFind(dsu[x]));\n        };\n        auto dsuMerge = [&](int u, int v) {\n            u = dsuFind(u);\n            v = dsuFind(v);\n            if(u == v)\n                return;\n            if(dsu[u] < dsu[v])\n                swap(u, v);\n            dsu[v] -= dsu[u] == dsu[v];\n            dsu[u] = v;\n        };\n        for(int i = 0; i < n; ++i) {\n            for(int j = i + 1; j < n; ++j) {\n                int dx = cir[i][0] - cir[j][0];\n                int dy = cir[i][1] - cir[j][1];\n                int cr = cir[i][2] + cir[j][2];\n                if((LL)dx * dx + (LL)dy * dy > (LL)cr * cr)\n                    continue;\n                dsuMerge(i, j);\n            }\n            int x = cir[i][0], y = cir[i][1], r = cir[i][2];\n            if((LL)x * x + (LL)y * y <= (LL)r * r)\n                return false;\n            if(abs(x - 0) <= r) {\n                int dx = x - 0;\n                DB dy = sqrtl((LL)r * r - (LL)dx * dx);\n                DB yL = max(y - dy, (DB)0), yR = min(y + dy, (DB)Y);\n                if(yL <= yR)\n                    dsuMerge(i, n);\n            }\n            if(abs(x - X) <= r) {\n                int dx = x - X;\n                DB dy = sqrtl((LL)r * r - (LL)dx * dx);\n                DB yL = max(y - dy, (DB)0), yR = min(y + dy, (DB)Y);\n                if(yL <= yR)\n                    dsuMerge(i, n + 1);\n            }\n            if(abs(y - 0) <= r) {\n                int dy = y - 0;\n                DB dx = sqrtl((LL)r * r - (LL)dy * dy);\n                DB xL = max(x - dx, (DB)0), xR = min(x + dx, (DB)X);\n                if(xL <= xR)\n                    dsuMerge(i, n + 1);\n            }\n            if(abs(y - Y) <= r) {\n                int dy = y - Y;\n                DB dx = sqrtl((LL)r * r - (LL)dy * dy);\n                DB xL = max(x - dx, (DB)0), xR = min(x + dx, (DB)X);\n                if(xL <= xR)\n                    dsuMerge(i, n);\n            }\n        }\n        return dsuFind(n) != dsuFind(n + 1);\n    }\n};",
    "submit_ts": "1722136320",
    "subm_id": "1335730699"
}