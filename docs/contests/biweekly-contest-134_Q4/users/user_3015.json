{
    "username": "__aman02",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int targetNumber) {\n      int numElements = nums.size();\nlong long resultCount = 0;\n\nunordered_map<long long, long long> previousCombinations;\n\nfor (int currentIndex = 0; currentIndex < numElements; ++currentIndex) {\n    unordered_map<long long, long long> currentCombinations; \n\n    if (nums[currentIndex] == targetNumber) {\n        ++resultCount;\n    }\n    currentCombinations[nums[currentIndex]] = 1;\n\n    for (auto& [existingValue, occurrenceCount] : previousCombinations) {\n        long long combinedValue = existingValue & nums[currentIndex];\n        if (combinedValue == targetNumber) {\n            resultCount += occurrenceCount;\n        }\n        currentCombinations[combinedValue] += occurrenceCount;\n    }\n    \n    previousCombinations = currentCombinations;\n}\n\nreturn resultCount;\n\n    }\n};",
    "submit_ts": "1720280781",
    "subm_id": "1311801858"
}