{
    "username": "om_0100",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        return calculateOperations(nums, target);\n    }\n    \n    long long calculateOperations(const std::vector<int>& nums, const std::vector<int>& target) {\n        int length = nums.size();\n        std::vector<int> diff(length);\n        \n        for (int i = 0; i < length; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        long long totalOperations = 0;\n        int currentSegmentDiff = 0;\n        \n        for (int i = 0; i < length; ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                int additionalOperations = std::abs(diff[i]) - std::abs(currentSegmentDiff);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n                currentSegmentDiff = diff[i];\n            } else {\n                totalOperations += std::abs(diff[i]);\n                currentSegmentDiff = diff[i];\n            }\n        }\n        \n        return totalOperations;\n    }\n};",
    "submit_ts": "1721532766",
    "subm_id": "1327993569"
}