{
    "username": "Sariabell",
    "submission": "bool can_mod(string& s, int k) {\n    int t = 0;\n    int n = s.size();\n    for (int i = n - 1; 0 <= i; --i) {\n        t = t * 10 + (s[i] - '0');\n        t %= k;\n    }\n    return t == 0;\n}\n\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        string ans(n, '9');\n\n        if (k % 2 == 0) {\n            char p = --ans.front();\n            ans.back() = p;\n        }\n\n        if (k % 5 == 0) {\n            ans.front() = '5';\n            ans.back() = '5';\n        }\n\n        if (4 <= n && k == 4) {\n            ans[0] = '8';\n            ans[1] = '8';\n            ans[n - 1] = '8';\n            ans[n - 2] = '8';\n        }\n\n        if (6 <= n && k == 8) {\n            ans[0] = '8';\n            ans[1] = '8';\n            ans[2] = '8';\n            ans[n - 1] = '8';\n            ans[n - 2] = '8';\n            ans[n - 3] = '8';\n        }\n\n        while (true) {\n            int t = 100;\n            while (t--) {\n                if (can_mod(ans, k))\n                    return ans;\n\n                int mid_l = n / 2;\n                int d = mid_l;\n                while (ans[d] == '0') {\n                    --d;\n                }\n                for (int i = mid_l; d < i; --i) {\n                    ans[i] = '9';\n                    ans[n - 1 - i] = '9';\n                }\n                char t = ans[d] - 1;\n                ans[d] = t;\n                ans[n - 1 - d] = t;\n            }\n\n            char p = --ans.front();\n            ans.back() = p;\n        }\n        return \"\";\n    }\n};",
    "submit_ts": "1723950635",
    "subm_id": "556400307"
}