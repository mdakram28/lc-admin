{
    "username": "Cattle_Horse",
    "submission": "// @date 2024/8/17 22:54:30\n// @author Cattle_Horse (CattleHorse@duck.com)\n// @problem 100401. \u653e\u4e09\u4e2a\u8f66\u7684\u4ef7\u503c\u4e4b\u548c\u6700\u5927 II\n// @link https://leetcode.cn/contest/biweekly-contest-137/problems/maximum-value-sum-by-placing-three-rooks-ii/\n\n#ifdef Cattle_Horse\n#include \"leetcode.h\" // IWYU pragma: keep\nusing namespace std;\n#else\n#define dbg(...) void(114514)\n#endif\n\n[[maybe_unused]] auto __init_io__ = []() {\n    return std::cin.tie(nullptr)->sync_with_stdio(false);\n}();\n\nvector<vector<pair<int, int>>> findTopThreeIndicesInRows(const vector<vector<int>>& board) {\n    int m = board.size();\n    vector<vector<pair<int, int>>> topThree(m, vector<pair<int, int>>(3, {INT_MIN, -1})); // \u5b58\u50a8\u524d\u4e09\u5927\u503c\u53ca\u5176\u7d22\u5f15\n\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < board[i].size(); ++j) {\n            int currentVal = board[i][j];\n            pair<int, int> currentPair = {currentVal, j};\n\n            // \u68c0\u67e5\u5f53\u524d\u503c\u662f\u5426\u6bd4\u524d\u4e09\u5927\u4e2d\u7684\u67d0\u4e00\u4e2a\u66f4\u5927\n            if (currentVal > topThree[i][2].first) {\n                topThree[i][2] = currentPair;\n                if (topThree[i][2].first > topThree[i][1].first) {\n                    swap(topThree[i][2], topThree[i][1]);\n                }\n                if (topThree[i][1].first > topThree[i][0].first) {\n                    swap(topThree[i][1], topThree[i][0]);\n                }\n            }\n        }\n    }\n\n    return topThree;\n}\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board.front().size();\n        auto maxTopThree = findTopThreeIndicesInRows(board);\n        long long ans = std::numeric_limits<long long>::min();\n\n        for (int x1 = 0; x1 < n; x1 += 1) {\n            for (auto i1{0}; i1 < 3; i1 += 1) {\n                int y1 = maxTopThree[x1][i1].second;\n                long long v1 = maxTopThree[x1][i1].first;\n\n                for (int x2 = x1 + 1; x2 < n; x2 += 1) {\n                    if (x1 == x2) continue;\n                    for (auto i2{0}; i2 < 3; i2 += 1) {\n                        int y2 = maxTopThree[x2][i2].second;\n                        long long v2 = maxTopThree[x2][i2].first;\n                        if (y1 == y2) continue;\n\n                        // \u786e\u8ba4\u7b2c\u4e09\u4e2a\n                        for (int x3 = x2 + 1; x3 < n; x3 += 1) {\n                            if (x1 == x3 || x2 == x3) continue;\n                            for (auto i3{0}; i3 < 3; i3 += 1) {\n                                int y3 = maxTopThree[x3][i3].second;\n                                long long v3 = maxTopThree[x3][i3].first;\n                                if (y1 == y3 || y2 == y3) continue;\n                                ans = std::max(ans, v1 + v2 + v3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n// long long Solution::maximumValueSum(vector<vector<int>> board)\n\n#ifdef Cattle_Horse\nint main() {\n    std::cout << \"*** 100401. \u653e\u4e09\u4e2a\u8f66\u7684\u4ef7\u503c\u4e4b\u548c\u6700\u5927 II ***\" << std::endl\n              << std::endl;\n\n    Solution s0;\n\n    {\n        std::cout << \"Test 1: \";\n\n        vector<vector<int>> board = {{-3, 1, 1, 1}, {-3, 1, -3, 1}, {-3, 2, 1, 1}};\n        long long ans0 = s0.maximumValueSum(board);\n        long long exp0 = 4;\n\n        if (ans0 == exp0) {\n            std::cout << \"Yes\" << std::endl;\n        } else {\n            std::cout << \"No\" << std::endl;\n            std::cout << \"  Answer: \" << ans0 << std::endl;\n            std::cout << \"  Expect: \" << exp0 << std::endl;\n        }\n    }\n\n    {\n        std::cout << \"Test 2: \";\n\n        vector<vector<int>> board = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        long long ans1 = s0.maximumValueSum(board);\n        long long exp1 = 15;\n\n        if (ans1 == exp1) {\n            std::cout << \"Yes\" << std::endl;\n        } else {\n            std::cout << \"No\" << std::endl;\n            std::cout << \"  Answer: \" << ans1 << std::endl;\n            std::cout << \"  Expect: \" << exp1 << std::endl;\n        }\n    }\n\n    {\n        std::cout << \"Test 3: \";\n\n        vector<vector<int>> board = {{1, 1, 1}, {1, 1, 1}, {1, 1, 1}};\n        long long ans2 = s0.maximumValueSum(board);\n        long long exp2 = 3;\n\n        if (ans2 == exp2) {\n            std::cout << \"Yes\" << std::endl;\n        } else {\n            std::cout << \"No\" << std::endl;\n            std::cout << \"  Answer: \" << ans2 << std::endl;\n            std::cout << \"  Expect: \" << exp2 << std::endl;\n        }\n    }\n\n    return 0;\n}\n#endif\n",
    "submit_ts": "1723910176",
    "subm_id": "556339944"
}