{
    "username": "Jarno Jakonen",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        if (n == 1) {\n            if (k == 1 || k == 3 || k == 9)\n                return \"9\";\n            if (k == 2 || k == 4 || k == 8)\n                return \"8\";\n            return to_string(k);\n        }\n\n        string s(n, '9');\n        if (k == 1 || k == 3 || k == 9) {\n            return s;\n        }\n        if (k == 2) {\n            s[0] = s[n-1] = '8';\n            return s;\n        }\n        if (k == 4) {\n            s[0] = s[1] = s[n-1] = s[n-2] = '8';\n            return s;\n        }\n        if (k == 8) {\n            if (n == 2)\n                return \"88\";\n            s[0] = s[1] = s[2] = s[n-1] = s[n-2] = s[n-3] = '8';\n            return s;\n        }\n        if (k == 5) {\n            s[0] = s[n-1] = '5';\n            return s;\n        }\n        if (k == 6) {\n            s[0] = s[n-1] = '8';\n            if (n % 2) {\n                s[n/2] = '8';\n            }\n            else if (n > 2) {\n                s[n/2] = s[n/2-1] = '7';\n            }\n            else {\n                s[0] = s[n-1] = '6';\n            }\n            return s;\n        }\n        if (k == 7) {\n            if (n % 2) {\n                for (char midDigit = '9'; midDigit >= '0'; --midDigit) {\n                    s[n/2] = midDigit;\n                    if (isDivisibleBy7(s))\n                        break;\n                }\n            }\n            else if (n > 2) {\n                for (char midDigit = '9'; midDigit >= '0'; --midDigit) {\n                    s[n/2] = s[n/2-1] = midDigit;\n                    if (isDivisibleBy7(s))\n                        break;\n                }\n            }\n            else {\n                s[0] = s[n-1] = '7';\n            }\n            return s;\n        }\n        return \"\"; // unreachable\n    }\n\n    bool isDivisibleBy7(string s) {\n        // Division rule for 7: remove the last digit of the number,\n        // double it, and then subtract it from the remaining number.\n        // If the remainder is zero or a multiple of 7, then the number is divisible by 7\n\n        // maybe use long division instead\n        int num = 0;\n        for (int i = 0; i < s.size(); ++i) {\n            num *= 10;\n            num += s[i] - '0';\n            num %= 7;\n        }\n        return num == 0;\n    }\n};",
    "submit_ts": "1723952939",
    "subm_id": "1359808368"
}