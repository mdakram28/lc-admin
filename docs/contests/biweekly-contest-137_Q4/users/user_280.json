{
    "username": "Daksh Sahani",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n, m = len(board), len(board[0])\n        rows = [0 for _ in range(n)]\n        cols = [0 for _ in range(m)]\n\n        nums = []\n        for i in range(n):\n            for j in range(m):\n                nums.append([board[i][j], i, j])\n        nums.sort(reverse = True)\n\n        seconds = []\n        cap = min(n*m , 2*(n+m))\n        count = [0 for _ in range(cap)]\n        for i in range(cap):\n            for j in range(i+1, cap):\n                if nums[i][1]!=nums[j][1] and nums[i][2]!=nums[j][2]:\n                    seconds.append([\n                        nums[i][0] + nums[j][0], \n                        set([nums[i][1], nums[j][1]]), \n                        set([nums[i][2], nums[j][2]])\n                    ])\n                    count[i] += 1\n                    if count[i]==2:\n                        break\n        \n        s = len(seconds)\n        # seconds.sort(key=lambda x:-x[0])\n        # print(s, seconds)\n        ans = -4*(10**9)\n        for i in range(cap):\n            for j in range( s):\n                # print(i, j)\n                if(\n                    (nums[i][1] not in seconds[j][1]) and \n                    (nums[i][2] not in seconds[j][2])\n                ):\n                    ans = max(ans, nums[i][0] + seconds[j][0])\n            \n        return ans",
    "submit_ts": "1723909927",
    "subm_id": "1359210870"
}