{
    "username": "saik16052001",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int idx=0; idx<n; idx++) {\n            diff[idx] = target[idx] - nums[idx];\n        }\n        long oprns = Math.abs(diff[0]);\n        for (int idx=1; idx<n; idx++) {\n            int prev = diff[idx-1];\n            int curr = diff[idx];\n            if (curr==prev) {\n                continue;\n            } else if (prev>=0 && curr>=0) {\n                if (curr>prev) {\n                    oprns += (curr-prev);\n                }\n            } else if (prev<0 && curr<0) {\n                if (curr<prev) {\n                    oprns += (prev-curr);\n                }\n            } else if ((prev>=0 && curr<0) || (prev<0 && curr>=0)) {\n                oprns += Math.abs(curr);\n            }\n        }\n        return oprns;\n    }\n}",
    "submit_ts": "1721534320",
    "subm_id": "1328028327"
}