{
    "username": "mooncoder1234",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<long long> diffs(n, 0);\n        for(int i = 0 ; i < n; i++){\n            diffs[i] = nums[i] - target[i];\n        }\n\n        long long op = 0;\n        long long prevop = 0;\n        for(int i = 0 ; i < n; i++){\n            long long diff = diffs[i];\n            if(diff == 0){\n                prevop = 0;\n            }else if(prevop == 0 || (prevop < 0 && diff > 0) || (prevop > 0 && diff < 0)) {\n                op += abs(diff);    \n            }else if(diff > 0){\n                op += max(0LL, diff - prevop);\n            }else if (diff < 0){\n                op += abs(min(0LL, diff - prevop));\n            }\n            prevop = diff;\n        }\n\n        return op;\n\n\n    }\n};",
    "submit_ts": "1721533621",
    "subm_id": "1328013028"
}