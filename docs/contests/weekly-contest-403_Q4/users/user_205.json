{
    "username": "fireyyouth",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> a;\n    using Pair = pair<int, int>;\n    int find_two(Pair start, Pair last) {\n        int MAX = 1000000;\n        int r = MAX;\n        for (int i = start.first; i < last.first; ++i) {\n            int top = find_one(start, make_pair(i, last.second));\n            int bot = find_one(make_pair(i + 1, start.second), last);\n            if (top && bot) {\n                r = min(r, top + bot);\n            }\n        }\n        for (int j = start.second; j < last.second; ++j) {\n            int left = find_one(start, make_pair(last.first, j));\n            int right = find_one(make_pair(start.first, j + 1), last);\n            if (left && right) {\n                r = min(r, left + right);\n            }\n        }\n        if (r == MAX) {\n            return 0;\n        } else {\n            return r;\n        }\n    }\n    int find_one(Pair start, Pair last) {\n        int min_i = last.first + 1;\n        int min_j = last.second + 1;\n        int max_i = -1;\n        int max_j = -1;\n        for (int i = start.first; i <= last.first; ++i) {\n            for (int j = start.second; j <= last.second; ++j) {\n                if (a[i][j]) {\n                    min_i = min(min_i, i);\n                    min_j = min(min_j, j);\n                    max_i = max(max_i, i);\n                    max_j = max(max_j, j);\n                }                \n            }   \n        }\n        if (max_i == -1) {\n            return 0;\n        }\n        return (max_i - min_i + 1) * (max_j - min_j + 1);\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        swap(grid, a);\n        int r = a.size() * a[0].size();\n        for (int i = 0; i < a.size() - 1; ++i) {\n            Pair top_range[] = {make_pair(0, 0), make_pair(i, a[0].size() - 1)};\n            Pair bot_range[] = {make_pair(i + 1, 0), make_pair(a.size() - 1, a[0].size() - 1)};\n            int top_two = find_two(top_range[0], top_range[1]);\n            int bot_one = find_one(bot_range[0], bot_range[1]);\n            if (top_two && bot_one) {\n                r = min(r, top_two + bot_one);\n            }\n            int top_one = find_one(top_range[0], top_range[1]);\n            int bot_two = find_two(bot_range[0], bot_range[1]);\n            if (top_one && bot_two) {\n                r = min(r, top_one + bot_two);\n            }\n        }\n        for (int j = 0; j < a[0].size() - 1; ++j) {\n            Pair left_range[] = {make_pair(0, 0), make_pair(a.size() - 1, j)};\n            Pair right_range[] = {make_pair(0, j + 1), make_pair(a.size() - 1, a[0].size() - 1)};\n            int left_two = find_two(left_range[0], left_range[1]);\n            int right_one = find_one(right_range[0], right_range[1]);\n            if (left_two && right_one) {\n                r = min(r, left_two + right_one);\n            }\n            int left_one = find_one(left_range[0], left_range[1]);\n            int right_two = find_two(right_range[0], right_range[1]);\n            if (left_one && right_two) {\n                r = min(r, left_one + right_two);\n            }\n        }\n        return r;                                   \n    }\n};",
    "submit_ts": 1719113533.0
}