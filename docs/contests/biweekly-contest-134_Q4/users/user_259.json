{
    "username": "hhhyyyfff",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        int f[n][17], g[n][17];\n        memset(f, 0, sizeof(f));\n        memset(g, 0, sizeof(g));\n        for (int i = 0; i < n; ++i) f[i][0] = ~nums[i];\n        for (int i = 1; i < 17; ++i)\n            for (int j = 0; j < n; ++j) {\n                f[j][i] = g[j][i] = f[j][i - 1];\n                if (j + (1 << i - 1) < n) {\n                    f[j][i] |= f[j + (1 << i - 1)][i - 1];\n                    g[j][i] |= g[j + (1 << i - 1)][i - 1];\n                }\n            }\n        k = ~k;\n        \n        long long ret = 0;\n        for (int i = 0; i < n; ++i) {\n            if (~nums[i] & ~k) continue;\n            //printf(\"#%d:\\n\", i);\n            int t = 0, l = i, r = i;\n            for (int j = 16; j >= 0; --j)\n                if (r + (1 << j) <= n && !(f[r][j] & (~k)))\n                    r += 1 << j;\n            for (int j = 16; j >= 0; --j) {\n                //if (l < n) printf(\"%d %d %d %d\\n\", j, l, t, g[l][j]);\n                if (l + (1 << j) <= n && ((~(t | g[l][j])) & k)) {\n                    t |= f[l][j];\n                    l += 1 << j;\n                }\n            }\n            //printf(\"%d %d %d\\n\", l, r, t);\n            if (t == k && l <= r) ret += r - l + 1;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720278288",
    "subm_id": "544561762"
}