{
    "username": "leaf_node_",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        auto &H = horizontalCut;\n        auto &V = verticalCut;\n        vector<array<int, 2>> A(H.size() + V.size());\n        for (int i = 0; i < H.size(); i++) {\n            A[i] = {H[i], 0};\n        }\n        for (int i = 0; i < V.size(); i++) {\n            A[i + H.size()] = {V[i], 1};\n        }\n        sort(A.begin(), A.end());\n        reverse(A.begin(), A.end());\n        long long ans = 0;\n        int h = 1, v = 1;\n        for (int i = 0; i < H.size() + V.size(); i++) {\n\n            if (A[i][1] == 0) {\n                ans += A[i][0] * 1ll * v;\n                h++;\n            }\n            else {\n                ans += A[i][0] * 1ll * h;\n                v++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925599",
    "subm_id": "1320260084"
}