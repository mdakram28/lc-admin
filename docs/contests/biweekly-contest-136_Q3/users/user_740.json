{
    "username": "Maaxle",
    "submission": "#include <bits/stdc++.h>\n\n#define range(it, a, b) for (ll it = a; it < b; it++)\n#define all(x) begin(x), end(x)\n#define ll long long\n#define ull unsigned long long\n#define INF64 ((ll) 1 << 60)\n#define INF32 (1 << 30)\n#define mset multiset\n#define uset unordered_set\n#define umap unordered_map \n#define pqueue priority_queue \n#define ptr(A) shared_ptr<A>\n#define v(x) vector<x>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int ans = 0;\n        if (n&1 && m&1 && grid[n/2][m/2] == 1)\n            ans++;\n\n        range(i, 0, n/2) {\n            range(j, 0, m/2) {\n                int aux = grid[i][j] +\n                            grid[n-1-i][j] +\n                            grid[i][m-1-j] +\n                            grid[n-1-i][m-1-j];\n                ans += min(aux, 4-aux);\n            }\n        }\n\n        int pairs = 0;\n        int singles = 0;\n        int none = 0;\n        if (n & 1) {\n            range(j, 0, m/2) {\n                pairs += (grid[n/2][j] + grid[n/2][m-1-j] == 2);\n                singles += (grid[n/2][j] + grid[n/2][m-1-j] == 1);\n                none += (grid[n/2][j] + grid[n/2][m-1-j] == 0);\n            }\n        }\n        if (m & 1) {\n            range(i, 0, n/2) {\n                pairs += (grid[i][m/2] + grid[n-1-i][m/2] == 2);\n                singles += (grid[i][m/2] + grid[n-1-i][m/2] == 1);\n                none += (grid[i][m/2] + grid[n-1-i][m/2] == 0);\n            }\n        }\n        ans += singles;\n        if (!singles && pairs & 1) {\n            if (none)\n                ans += 2;\n            else ans += 2*pairs;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722698003",
    "subm_id": "1343166432"
}