{
    "username": "AmenPark",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        N=10**9+7\n        # [a0,a1, a2, ...., an] -> [0, (0,1), (0,1,2), (0,1,2,3), ...]\n        requirements.sort()\n        R=len(requirements)\n        l=[0]*n\n        idx=0\n        M=requirements[-1][1]+1\n        dp=[0]*M\n        dp[0]=1\n        for i in range(n):\n            if requirements[idx][0] == i:\n                tg=requirements[idx][1]\n                v=0\n                for j in range(min(tg,M-1),max(-1,tg-i-1),-1):\n                    v+=dp[j]\n                v%=N\n                dp=[0]*M\n                dp[tg]=v%N\n                idx+=1\n                if idx==R:\n                    break\n                continue\n            s=0\n            ndp=[0]*M\n            for j in range(M):\n                s += dp[j]\n                if j>=i+1:\n                    s-=dp[j-i-1]\n                s%=N\n                ndp[j]=s\n            dp=ndp\n        ans = sum(dp)\n        for j in range(i,n-1):\n            ans *= (j+1)\n            ans%=N\n        \n        return ans%N\n    #2,1,1,1\n'''\n3\n[[2,2],[0,0]]\n3\n[[2,2],[1,1],[0,0]]\n2\n[[0,0],[1,0]]\n'''",
    "submit_ts": 1719069836.0
}