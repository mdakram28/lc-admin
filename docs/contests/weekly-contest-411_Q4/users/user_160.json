{
    "username": "Sambhav Jain",
    "submission": "class Solution {\n    vector<int>getMaxRight(const string &s,const int &k)\n    {\n        vector<int>cnt(2,0),max_right(s.size());\n        for(int left=0,right=0;left<s.size();left++)\n        {\n            while(right<s.size()&&min(cnt[(s[right]-'0')^1],cnt[s[right]-'0']+1)<=k)\n            {\n                cnt[s[right]-'0']++;\n                right++;\n            }\n            max_right[left]=right-1;\n            cnt[s[left]-'0']--;\n        } \n        return max_right;\n    }\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) \n    {\n        int n=s.size(),q=queries.size();\n        vector<long long>ans(q);\n        vector<int>max_right=getMaxRight(s,k);\n        vector<long long>pref={0};\n        for(auto &i:max_right)\n        {\n            pref.emplace_back(pref.back()+i);\n        }\n        for(int i=0;i<q;i++)\n        {\n            long long l=queries[i][0],r=queries[i][1];\n            if(l==r)\n            {\n                ans[i]=1;\n                continue;\n            }\n            long long ind=lower_bound(max_right.begin(),max_right.end(),r)-max_right.begin();\n            ind=max(ind,l);\n            ans[i]=(pref[ind]-pref[l]+r*(r-ind+1));\n            long long subtract=(l-1+r-1)*(r-l+1)/2;\n            ans[i]-=subtract;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723953004",
    "subm_id": "1359809965"
}