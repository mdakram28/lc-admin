{
    "username": "linn-9k",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        w = [0] * n\n        for i in range(n):\n            w[i] = (i % 2 == 0) + 1\n        g = [[] for _ in range(n)]\n        for u, v in edges:\n            g[u].append(v)\n            g[v].append(u)\n        root = [0] * n\n\n        def dfs(son, fa):\n            root[son] = w[son]\n            mx = 0\n            for to in g[son]:\n                if to == fa:\n                    continue\n                dfs(to, son)\n                mx = max(mx, root[to])\n            root[son] += mx\n\n        dfs(0, -1)\n\n        ans = [0] * n\n        def dfs2(son,fa,from_fa):\n            ans[son] = max(from_fa + w[son], root[son]) - w[son]\n            mx1,mx2 = 0,0\n            for to in g[son]:\n                if to == fa:\n                    continue\n                if root[to] > mx1:\n                    mx2 = mx1\n                    mx1 = root[to]\n                elif root[to] > mx2:\n                    mx2 = root[to]\n            for to in g[son]:\n                if to == fa:\n                    continue\n                if root[to] == mx1:\n                    dfs2(to,son,max(from_fa + w[son],mx2 + w[son]))\n                else:\n                    dfs2(to,son,max(from_fa + w[son],mx1 + w[son]))\n        dfs2(0,-1,0)\n        return ans",
    "submit_ts": "1722698184",
    "subm_id": "552269739"
}