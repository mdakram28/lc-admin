{
    "username": "naveensms13",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def mandis(nums):\n            s,d = [],[]\n            for i in range(len(nums)):\n                x,y = nums[i]\n                s.append([x+y,i])\n                d.append([x-y,i])\n            s.sort()\n            d.sort()\n            sd = s[-1][0]-s[0][0]\n            dd = d[-1][0]-d[0][0]\n            if sd>dd:\n                return sd,[s[-1][1],s[0][1]]\n            elif dd>sd:\n                return dd,[d[-1][1],d[0][1]]\n            else:\n                return sd,list(set([s[-1][1],s[0][1],d[-1][1],d[0][1]]))\n            \n        _,p = mandis(points)\n        d = []\n        for i in p:\n            pp = []\n            for j in range(len(points)):\n                if j==i:\n                    continue\n                pp.append(points[j])\n            k,_ = mandis(pp)\n            d.append(k)\n        return min(d)\n            "
}