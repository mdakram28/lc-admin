{
    "username": "NerdyCoder",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int i = 0;\n        int j = 0;\n        long long result = 0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                result += horizontalCut[i] * (j + 1LL);\n                ++i;\n            } else {\n                result += verticalCut[j] * (i + 1LL);\n                ++j;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            result += horizontalCut[i] * (j + 1LL);\n            ++i;\n        }\n        while (j < verticalCut.size()) {\n            result += verticalCut[j] * (i + 1LL);\n            ++j;\n        }\n        return result;\n    }\n};",
    "submit_ts": "1720925161",
    "subm_id": "1320245054"
}