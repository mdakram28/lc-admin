{
    "username": "invertedwinger",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int n = a.size();\n        vector<vector<int>> dp(n, vector<int> (k+1,0));\n        vector<pair<int,int>> mx(k+1, {0,0});\n        mx[0] = {1,0};\n        map<int,int> prev;\n        prev[a[0]] = 0;\n        dp[0][0] = 1;\n        int ans = 1;\n        for(int i=1; i<n; i++){\n            dp[i][0] = 1;\n            int p = -1;\n            if(prev.find(a[i]) != prev.end()) p = prev[a[i]];\n            for(int j=0; j<=k; j++){\n                if(p!=-1){\n                    dp[i][j] = max(dp[i][j], 1+dp[p][j]);\n                    if(j>0){\n                        int m = mx[j-1].first;\n                        if(m == dp[p][j-1]) m = mx[j-1].second;\n                        dp[i][j] = max(dp[i][j], 1+m);\n                    }\n                }\n                else{\n                    if(j>0){\n                        dp[i][j] = max(dp[i][j], 1+mx[j-1].first);\n                    }\n                }\n                ans = max(ans, dp[i][j]);\n            }\n            for(int j=0; j<=k; j++){\n                if(dp[i][j]>mx[j].first){\n                    mx[j].second = mx[j].first;\n                    mx[j].first = dp[i][j];\n                }\n                else if(dp[i][j]>mx[j].second){\n                    mx[j].second = dp[i][j];\n                }\n            }\n            prev[a[i]] = i;\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717859791.0
}