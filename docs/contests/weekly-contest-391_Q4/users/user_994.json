{
    "username": "21bec057",
    "submission": "class Solution {\npublic:\n    int ans=INT_MAX;\n   void MaxDist(vector<vector<int> >& A, int N,vector<int>& poi)\n{\n    \n    vector<pair<int,int>> V(N), V1(N);\n \n    for (int i = 0; i < N; i++) {\n        V[i] ={ A[i][0] + A[i][1],i};\n        V1[i] ={ A[i][0] - A[i][1],i};\n    }\n \n    \n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n    \n    int maximum\n        = max(V.back().first - V.front().first, V1.back().first - V1.front().first);\n    if(V.back().first - V.front().first>V1.back().first - V1.front().first){\n        poi.push_back(V.back().second);\n        poi.push_back(V.front().second);\n    }else{\n        poi.push_back(V1.back().second);\n        poi.push_back(V1.front().second);\n    }\n       ans=min(ans,maximum);\n    \n}\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> poi;\n        MaxDist(points,points.size(),poi);\n        int idx1=poi[0];\n        int idx2=poi[1];\n        vector<vector<int>> temp1;\n        int i=0;\n        while(i<points.size()){\n            if(i!=idx1){\n                temp1.push_back(points[i]);\n            }\n            i++;\n        }\n        MaxDist(temp1,temp1.size(),poi);\n        vector<vector<int>> temp2;\n        i=0;\n        while(i<points.size()){\n            if(i!=idx2){\n                temp2.push_back(points[i]);\n            }\n            i++;\n        }\n        MaxDist(temp2,temp2.size(),poi);\n        return ans;\n    }\n};"
}