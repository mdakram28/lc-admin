{
    "username": "ritik87",
    "submission": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n        int max_inversions = n * (n - 1) / 2;\n        vector<int> reqi(n, -1);\n        for (auto req : requirements) {\n            reqi[req[0]] = req[1];\n        }\n\n        vector<vector<int>> dp(n + 1, vector<int>(max_inversions + 1, 0));\n        dp[0][0] = 1;\n\n        for (int k = 1; k <= n; ++k) {\n            vector<int> cum_sum(max_inversions + 1, 0);\n            cum_sum[0] = dp[k - 1][0];\n            for (int j = 1; j <= max_inversions; ++j) {\n                cum_sum[j] = (cum_sum[j - 1] + dp[k - 1][j]) % MOD;\n            }\n            for (int j = 0; j <= max_inversions; ++j) {\n                dp[k][j] = cum_sum[j];\n                if (j >= k) {\n                    dp[k][j] = (dp[k][j] - cum_sum[j - k] + MOD) % MOD;\n                }\n            }\n\n            if (reqi[k - 1] != -1) {\n                for (int j = 0; j <= max_inversions; ++j) {\n                    if (j != reqi[k - 1]) {\n                        dp[k][j] = 0;\n                    }\n                }\n            }\n        }\n        int result = 0;\n        for (int i = 0; i <= max_inversions; ++i) {\n            result = (result + dp[n][i]) % MOD;\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": 1719069717.0
}