{
    "username": "magic1024",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def minimumDistance(self, a: List[List[int]]) -> int:\n        # def solve(b):\n        #     values = defaultdict(lambda: SortedList())\n        #     for x, y in b: \n        #         values[x].add(y)\n        #     ans = 0\n        #     mx = SortedList()\n        #     mn = SortedList()\n        #     for x, v in values.items():\n        #         if mn: \n        #             ans = max(ans, v[-1] + x - mn[0])\n        #         if mx: \n        #             ans = max(ans, mx[-1] - (v[0] + x))\n        #         mx.add(v[-1] + x)\n        #         mn.add(v[0] + x)\n        #     return ans \n        if len(a) == 1: return 0\n        p = [SortedList() for _ in range(4)]\n        for x, y in a:\n            p[0].add(x + y)\n            p[1].add(-x + y)\n            p[2].add(x - y)\n            p[3].add(-x - y)\n        ans = []\n        for x, y in a: \n            ans.append(0)\n            p[0].remove(x + y)\n            ans[-1] = max(ans[-1], p[0][-1] - p[0][0])\n            p[0].add(x + y)\n            \n            p[1].remove(- x + y)\n            ans[-1] = max(ans[-1], p[1][-1] - p[1][0])\n            p[1].add(- x + y)\n            \n            p[2].remove(x - y)\n            ans[-1] = max(ans[-1], p[2][-1] - p[2][0])\n            p[2].add(x - y)\n            \n            p[3].remove(- x - y)\n            ans[-1] = max(ans[-1], p[3][-1] - p[3][0])\n            p[3].add(- x - y)\n        \n        return min(ans)\n            "
}