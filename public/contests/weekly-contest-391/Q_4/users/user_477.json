{
    "username": "jeal0uspengu1n",
    "submission": "class Solution {\npublic:\n    int m_d(int x, int y)\n    {\n        return abs(x - y);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> sum, diff;\n        map<int, int> s, d;\n        for(auto i: points)\n        {\n            // cout << i[0] << ' ' << i[1] << endl;\n            sum.push_back(i[0] + i[1]);\n            diff.push_back(i[0] - i[1]);\n            s[sum.back()]++;\n            d[diff.back()]++;\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        int ans = max(sum[n - 1] - sum[0], diff[n - 1] - diff[0]);\n        for(int i = 0; i < n; i++)\n        {\n            int temp_s = points[i][0] + points[i][1];\n            int temp_d = points[i][0] - points[i][1];\n            if(temp_s == sum.back() || temp_s == sum[0])\n            {\n                if(temp_s == sum.back() && s[temp_s] == 1)\n                {\n                    if(temp_d == diff.back() && d[temp_d] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 2] - sum[0], diff[n - 2] - diff[0]));\n                    }\n                    else if(temp_d == diff[0] && d[temp_d] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 2] - sum[0], diff[n - 1] - diff[1]));\n                    }\n                    else ans = min(ans, max(sum[n - 2] - sum[0], diff[n - 1] - diff[0]));\n                }\n                else if(temp_s == sum[0] && s[temp_s] == 1)\n                {\n                    if(temp_d == diff.back() && d[temp_d] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 1] - sum[1], diff[n - 2] - diff[0]));\n                    }\n                    else if(temp_d == diff[0] && d[temp_d] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 1] - sum[1], diff[n - 1] - diff[1]));\n                    }\n                    else ans = min(ans, max(sum[n - 1] - sum[1], diff[n - 1] - diff[0]));\n                }\n            }\n            // ---------------------------------\n            if(temp_d == diff.back() || temp_d == diff[0])\n            {\n                if(temp_d == diff.back() && d[temp_d] == 1)\n                {\n                    if(temp_s == sum.back() && s[temp_s] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 2] - sum[0], diff[n - 2] - diff[0]));\n                    }\n                    else if(temp_s == sum[0] && s[temp_s] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 1] - sum[1], diff[n - 2] - diff[0]));\n                    }\n                    else ans = min(ans, max(sum[n - 1] - sum[0], diff[n - 2] - diff[0]));\n                }\n                else if(temp_d == diff[0] && d[temp_d] == 1)\n                {\n                    if(temp_s == sum.back() && s[temp_s] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 2] - sum[0], diff[n - 1] - diff[1]));\n                    }\n                    else if(temp_s == sum[0] && s[temp_s] == 1)\n                    {\n                        ans = min(ans, max(sum[n - 1] - sum[1], diff[n - 1] - diff[1]));\n                    }\n                    else ans = min(ans, max(sum[n - 1] - sum[0], diff[n - 1] - diff[1]));\n                }\n            }\n        }\n        return ans;\n    }\n};"
}