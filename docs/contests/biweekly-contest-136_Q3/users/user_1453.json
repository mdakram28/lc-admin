{
    "username": "hth4nh",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int flipsCount = 0;\n\n        for (int i = n / 2 + n % 2; i < n; i++) {\n            for (int j = m / 2 + m % 2; j < m; j++) {\n                int sum = grid[i][j] + grid[i][m - j - 1];\n                sum += grid[n - i - 1][j] + grid[n - i - 1][m - j - 1];\n\n                flipsCount += min(sum, 4 - sum);\n            }\n        }\n\n        int flipsCountMiddle = 0;\n        int sumMiddle = 0;\n\n        if (n % 2) {\n            for (int j = m / 2 + m % 2; j < m; j++) {\n                int sum = grid[n / 2][j] + grid[n / 2][m - j - 1];\n                flipsCountMiddle += min(sum, 2 - sum);\n                sumMiddle += sum;\n            }\n        }\n\n        if (m % 2) {\n            for (int i = n / 2 + n % 2; i < n; i++) {\n                int sum = grid[i][m / 2] + grid[n - i - 1][m / 2];\n                flipsCountMiddle += min(sum, 2 - sum);\n                sumMiddle += sum;\n            }\n        }\n        \n        if (flipsCountMiddle < 2 && sumMiddle % 4) {\n            flipsCount += min(sumMiddle % 4, 4 - sumMiddle % 4);\n        }\n        else {\n            flipsCount += flipsCountMiddle;\n        }\n\n        flipsCount += (n % 2 && m % 2 && grid[n / 2][m / 2]);\n\n        return flipsCount;\n    }\n};",
    "submit_ts": "1722699329",
    "subm_id": "1343208323"
}