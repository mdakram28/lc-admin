{
    "username": "Siddharth_Joshi",
    "submission": "#define f first\n#define s second\n#define pb push_back\n#define all(x) x.begin(),x.end()\n#define sz(x) (long long)(x).size()\n#define pii pair<long long,long long>\n\ntemplate <class T> class SegmentTree {\nprivate:\n    const T DEFAULT = 0;\n    vector<T> segtree;\n    int len;\n\npublic:\n    T f(T a, T b) { return a + b; }\n    SegmentTree(int len) : len(len), segtree(len * 2, DEFAULT) {}\n    void set(int ind, T val) {\n        ind += len;\n        segtree[ind] = val;\n        for (; ind > 1; ind /= 2) {\n            segtree[ind / 2] = f(segtree[ind], segtree[ind ^ 1]);\n        }\n    }\n    T range(int start, int end) {\n        T sum = DEFAULT;\n        for (start += len, end += len; start < end; start /= 2, end /= 2) {\n            if (start % 2 == 1) { sum = f(sum, segtree[start++]); }\n            if (end % 2 == 1) { sum = f(sum, segtree[--end]); }\n        }\n        return sum;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int> nums, vector<vector<int>> queries) {\n        vector<int> ans;\n        int n = sz(nums);\n        SegmentTree<int> seg(n);\n        for (int i = 0; i < n; i++) {\n            if (i == 0 || i == n - 1) {\n                seg.set(i, 0);\n            }\n            else {\n                if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                    seg.set(i, 1);\n                }\n                else {\n                    seg.set(i, 0);\n                }\n            }\n        }\n        for (auto x : queries) {\n            if (x[0] == 1) {\n                ans.pb(seg.range(x[1] + 1, x[2]));\n            }\n            else {\n                nums[x[1]] = x[2];\n                if (x[1] == 0) {\n                    if (nums[1] > nums[0] && nums[1] > nums[2]) {\n                        seg.set(1, 1);\n                    }\n                    else {\n                        seg.set(1, 0);\n                    }\n                }\n                else if (x[1] == n - 1) {\n                    if (nums[n - 2] > nums[n - 1] && nums[n - 2] > nums[n - 3]) {\n                        seg.set(n - 2, 1);\n                    }\n                    else {\n                        seg.set(n - 2, 0);\n                    }\n                }\n                else {\n                    if (nums[x[1]] > nums[x[1] - 1] && nums[x[1]] > nums[x[1] + 1]) {\n                        seg.set(x[1], 1);\n                    }\n                    else {\n                        seg.set(x[1], 0);\n                    }\n                    if (x[1] - 1 > 0) {\n                        if (nums[x[1] - 1] > nums[x[1]] && nums[x[1] - 1] > nums[x[1] - 2]) {\n                            seg.set(x[1] - 1, 1);\n                        }\n                        else {\n                            seg.set(x[1] - 1, 0);\n                        }\n                    }\n                    if (x[1] + 1 < n - 1) {\n                        if (nums[x[1] + 1] > nums[x[1]] && nums[x[1] + 1] > nums[x[1] + 2]) {\n                            seg.set(x[1] + 1, 1);\n                        }\n                        else {\n                            seg.set(x[1] + 1, 0);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508509.0
}