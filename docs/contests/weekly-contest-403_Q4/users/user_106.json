{
    "username": "JustinZhengBC",
    "submission": "class Solution {\npublic:\n    int n, m;\n    int minimumSum(vector<vector<int>>& grid) {\n        n = grid.size(); m = grid[0].size();\n        int best = solve1(grid);\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m; ++j) {\n                swap(grid[i][j], grid[n-i-1][j]);\n            }\n        }\n        for (int j = 0; j < m / 2; ++j) {\n            for (int i = 0; i < n; ++i) {\n                swap(grid[i][j], grid[i][m-j-1]);\n            }\n        }\n        best = min(best, solve1(grid));\n        return best;\n    }\n    int solve1(vector<vector<int>>& grid) {\n        int best = INT_MAX;\n        for (int i = 0; i < n - 1; ++i) {\n            int a1 = getArea(grid, 0, i + 1, 0, m);\n            if (a1 == -1) {\n                continue;\n            }\n            for (int j = 0; j < m - 1; ++j) {\n                int a2 = getArea(grid, i + 1, n, 0, j + 1);\n                if (a2 == -1) {\n                    continue;\n                }\n                int a3 = getArea(grid, i + 1, n, j + 1, m);\n                if (a3 == -1) {\n                    continue;\n                }\n                best = min(best, a1 + a2 + a3);\n            }\n            for (int j = i + 1; j < n - 1; ++j) {\n                int a2 = getArea(grid, i + 1, j + 1, 0, m);\n                if (a2 == -1) {\n                    continue;\n                }\n                int a3 = getArea(grid, j + 1, n, 0, m);\n                if (a3 == -1) {\n                    continue;\n                }\n                best = min(best, a1 + a2 + a3);\n            }\n        }\n        for (int j = 0; j < m - 1; ++j) {\n            int a1 = getArea(grid, 0, n, 0, j + 1);\n            if (a1 == -1) {\n                continue;\n            }\n            for (int i = 0; i < n - 1; ++i) {\n                // cout << \"ABC\" << endl;\n                int a2 = getArea(grid, 0, i + 1, j + 1, m);\n                if (a2 == -1) {\n                    continue;\n                }\n                // cout << \"DEF\" << endl;\n                int a3 = getArea(grid, i + 1, n, j + 1, m);\n                if (a3 == -1) {\n                    continue;\n                }\n                best = min(best, a1 + a2 + a3);\n            }\n            for (int i = j + 1; i < m - 1; ++i) {\n                // cout << \"GHI\" << endl;\n                int a2 = getArea(grid, 0, n, j + 1, i + 1);\n                if (a2 == -1) {\n                    continue;\n                }\n                // cout << \"JKL\" << endl;\n                int a3 = getArea(grid, 0, n, i + 1, m);\n                if (a3 == -1) {\n                    continue;\n                }\n                best = min(best, a1 + a2 + a3);\n            }\n        }\n        return best;\n    }\n    int getArea(vector<vector<int>>& grid, int x1, int x2, int y1, int y2) {\n        // cout << x1 << \" \" << x2 << \" \" << y1 << \" \" << y2 << endl;\n        int minx = INT_MAX, maxx = 0, miny = INT_MAX, maxy = 0;\n        bool valid = false;\n        for (int i = x1; i < x2; ++i) {\n            for (int j = y1; j < y2; ++j) {\n                if (grid[i][j] == 1) {\n                    valid = true;\n                    minx = min(minx, i);\n                    maxx = max(maxx, i);\n                    miny = min(miny, j);\n                    maxy = max(maxy, j);\n                }\n            }\n        }\n        if (!valid) {\n            return -1;\n        }\n        return (maxx - minx + 1) * (maxy - miny + 1);\n    }\n};",
    "submit_ts": "1719112639",
    "subm_id": "1297305175"
}