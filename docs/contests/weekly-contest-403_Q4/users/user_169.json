{
    "username": "kasinathansj",
    "submission": "class Solution {\n    int dp[][][][];\n    public int minimumSum(int[][] grid) {\n        dp = new int[grid.length][grid[0].length][grid.length][grid[0].length];\n        for(int a[][][] : dp)\n            for(int b[][] : a)\n                for(int c[] : b)\n                    Arrays.fill(c,-1);\n        int ans = (int)1e9;\n        for(int i = 0 ; i < grid.length-1 ; i++){\n            for(int j = 0 ; j < grid[0].length-1 ; j++){\n                int has = minimum(grid,0,0,i,grid[0].length-1);\n                has += minimum(grid,i+1,0,grid.length-1,j);\n                has += minimum(grid,i+1,j+1,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , has);\n                int bas = minimum(grid,0,0,i,j);\n                bas += minimum(grid,0,j+1,i,grid[0].length-1);\n                bas += minimum(grid,i+1,0,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , bas);\n            }\n        }\n        for(int i = 0 ; i < grid.length-2 ; i++){\n            for(int j = i+1 ; j < grid.length-1 ; j++){\n                int has = minimum(grid,0,0,i,grid[0].length-1)+minimum(grid,i+1,0,j,grid[0].length-1)+minimum(grid,j+1,0,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , has);\n            }\n        }\n        for(int i = 0 ; i < grid[0].length-2 ; i++){\n            for(int j = i+1 ; j < grid[0].length-1 ; j++){\n                int has = minimum(grid,0,0,grid.length-1,i)+minimum(grid,0,i+1,grid.length-1,j)+minimum(grid,0,j+1,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , has);\n            }\n        }\n        for(int  j = 0 ; j < grid[0].length-1 ; j++){\n            for(int i = 0 ; i < grid.length-1 ; i++){\n                int has = minimum(grid,0,0,grid.length-1,j);\n                has += minimum(grid,0,j+1,i,grid[0].length-1);\n                has += minimum(grid,i+1,j+1,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , has);\n                int bas = minimum(grid,0,0,i,j);\n                bas += minimum(grid,i+1,0,grid.length-1,j);\n                bas += minimum(grid,0,j+1,grid.length-1,grid[0].length-1);\n                ans = Math.min(ans , bas);\n            }\n        }\n        return ans;\n    }\n    private int minimum(int[][] grid , int lox , int loy , int hix , int hiy){\n        if(dp[lox][loy][hix][hiy]!=-1)return dp[lox][loy][hix][hiy];\n        int minx , miny , maxx , maxy;\n        minx = hix;\n        miny = hiy;\n        maxx = lox;\n        maxy = loy;\n        boolean ok = false;\n        for(int i = lox ; i <= hix ; i++){\n            for(int j = loy ; j <= hiy ; j++){\n                if(grid[i][j]==1){\n                    ok = true;\n                    minx = Math.min(minx , i);\n                    miny = Math.min(miny , j);\n                    maxx = Math.max(maxx , i);\n                    maxy = Math.max(maxy , j);\n                }\n            }\n        }\n        int ans = (maxx-minx+1)*(maxy-miny+1);\n        if(!ok) return (int)1e8;\n        return dp[lox][loy][hix][hiy] = ans;\n    }\n}",
    "submit_ts": 1719112647.0
}