{
    "username": "nihao",
    "submission": "#define xx first\n#define yy second\n#define ll long long\ntypedef pair<ll, ll> pii;\nconst ll inf = 1e18, N = 1010, M = N * N / 2;\nconst ll mod = 1e9 + 7;\nll n, m, S, T,SS, d[N], cur[N], st[N];\nll e[M], ne[M], h[N], w[M], fy[M], idx;\nclass Solution {\npublic:\n    void add(ll a, ll b, ll c, ll v)\n    {\n        e[idx] = b, w[idx] = c, fy[idx] = v, ne[idx] = h[a], h[a] = idx++;\n    }\n    bool spfa()\n    {\n        queue<ll> q;\n        q.push(S);\n        for (ll i = 1; i < N; i++)\n            d[i] = inf;\n        memcpy(cur, h, sizeof h);\n        d[S] = 0;\n        st[S] = 1;\n        while (q.size())\n        {\n            ll u = q.front();\n            q.pop();\n            st[u] = 0;\n            for (ll i = h[u]; ~i; i = ne[i])\n            {\n                ll j = e[i];\n                if (d[j] > d[u] + fy[i] && w[i])\n                {\n                    d[j] = d[u] + fy[i];\n                    if (!st[j])\n                    {\n                        st[j] = 1;\n                        q.push(j);\n                    }\n                }\n            }\n        }\n        return d[T] < inf / 2;\n    }\n    ll dfs(ll u, ll flow, ll &res)\n    {\n        if (u == T)\n        {\n            res += d[T] * flow;\n            return flow;\n        }\n        st[u] = 1;\n        ll rest = flow;\n        for (ll i = cur[u]; ~i && rest; i = ne[i])\n        {\n            cur[u] = i;\n            ll j = e[i];\n            if (d[j] == d[u] + fy[i] && w[i] && !st[j])\n            {\n                ll f = dfs(j, min(rest, w[i]), res);\n                if (!f)\n                    d[j] = inf;\n                w[i] -= f;\n                w[i ^ 1] += f;\n                rest -= f;\n            }\n        }\n        st[u] = 0;\n        return flow - rest;\n    }\n    ll MCMF(ll &res)\n    {\n        ll flow = 0;\n        while (spfa())\n        {\n            flow += dfs(S, inf, res);\n        }\n        return flow;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        m = board.size();\n        n = board[0].size();\n        SS = m + n +3;\n        S = m + n + 1, T = m + n + 2;\n        memset(h, -1, sizeof h);\n        idx = 0;\n        for (ll i = 1; i <= m; i++)\n        {\n            for (ll j = 1; j <= n; j++)\n            {\n                add(i, j + m, 1, -board[i-1][j-1]);\n                add(j + m, i, 0, board[i-1][j-1]);\n            }\n        }\n        for (ll i = 1; i <= m; i++)\n        {\n            add(SS, i, 1, 0), add(i, SS, 0, 0);\n        }\n        for (ll i = 1; i <= n; i++)\n        {\n            add(i + m, T, 1, 0), add(T, i + m, 0, 0);\n        }\n        add(S,SS,3,0),add(SS,S,0,0);\n        ll mx = 0;\n        MCMF(mx);\n        return -mx;\n    }\n};",
    "submit_ts": "1723908736",
    "subm_id": "556332565"
}