{
    "username": "ridamchhapiya15",
    "submission": "from typing import List\nimport bisect\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        jesse = {}\n        walter = []\n\n        skyler = 0\n        while skyler < len(nums) // 2:\n            hank = nums[skyler]\n            marie = nums[len(nums) - skyler - 1]\n            saul = abs(hank - marie)\n\n            gus = max(hank, marie, k - hank, k - marie)\n\n            if saul not in jesse:\n                jesse[saul] = []\n            jesse[saul].append(gus)\n            walter.append(gus)\n\n            skyler += 1\n\n        ans = len(nums)\n        walter.sort()\n\n        saul_iter = iter(jesse.items())\n        try:\n            while True:\n                saul, gus_list = next(saul_iter)\n                mike = bisect.bisect_left(walter, saul)\n                mike = mike * 2 + (len(nums) // 2 - mike)\n\n                gus_iter = iter(gus_list)\n                try:\n                    while True:\n                        gus = next(gus_iter)\n                        if gus < saul:\n                            mike -= 2\n                        else:\n                            mike -= 1\n                except StopIteration:\n                    pass\n\n                ans = min(ans, mike)\n        except StopIteration:\n            pass\n\n        return ans\n",
    "submit_ts": "1721490019",
    "subm_id": "1327470677"
}