{
    "username": "glump1",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        cur = [0]*32\n        pref = [[0]*32]\n        #Get the range-and of everything from i to current\n        def check(l, r):\n            pop = r-l\n            res = 0\n            for bit in range(32):\n                x = (pref[r][bit]-pref[l][bit])==pop\n                res+=x<<bit\n            return res\n        for i, x in enumerate(nums):\n            for bit in range(32):\n                if (1<<bit)&x:\n                    cur[bit]+=1\n            pref.append(cur.copy())\n        res = 0\n        l, m = 0, 0\n        for r in range(1, n+1):\n            cur = pref[r]\n            while check(m, r)<=k:\n                m+=1\n            while check(l, r)<k:\n                l+=1\n            res+=m-l\n        return res",
    "submit_ts": "1720279026",
    "subm_id": "1311734178"
}