{
    "username": "vishal751803",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& t) {\n        vector<int>v;\n        for(int i=0; i<nums.size(); i++){\n            v.push_back(t[i]-nums[i]);\n        }\n\n        // for(int i=0; i<nums.size(); i++){\n        //     cout<<v[i]<<\" \";\n        // }\n        // cout<<endl;\n\n        int idx=0;\n        while(idx<nums.size() && v[idx]==0){\n            idx++;\n        }\n        if(idx>=nums.size()) return 0;\n        int curr = abs(v[idx]);\n        int sign = v[idx]/curr;\n        long long res=abs(v[idx]);\n        // cout<<res<<\" \"<<sign<<endl;\n        for(int i=idx+1; i<nums.size(); i++){\n            if(v[i]==0){\n                sign = 0;\n                continue;\n            }\n            int currSign = v[i]/abs(v[i]);\n            if(currSign==sign){\n                if(abs(v[i])>abs(v[i-1])) res += abs(v[i])-abs(v[i-1]);\n            }else{\n                res += abs(v[i]);\n            }\n            sign = currSign;\n        }\n        // res += curr;\n        return res;\n    }\n};",
    "submit_ts": "1721531596",
    "subm_id": "1327964998"
}