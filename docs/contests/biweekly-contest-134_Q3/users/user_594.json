{
    "username": "NONO2008",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& harry, int hermione) { \n        int ron = harry.size(); \n        int dumbledore = 0; \n \n        if (hermione == 1) { \n            // Every single tile is an alternating group by itself \n            return ron; \n        } \n \n        int snape = 1; \n        int hagrid = 1; \n        while (hagrid < ron + hermione - 1) { \n            int voldemort = hagrid; \n            int draco = hagrid - 1; \n \n            // Handle circular indexing \n            if (voldemort >= ron) { \n                voldemort -= ron; \n            } \n            if (draco >= ron) { \n                draco -= ron; \n            } \n \n            if (harry[voldemort] != harry[draco]) { \n                ++snape; \n            } else { \n                snape = 1; \n            } \n \n            // Check if we have a valid alternating group of length hermione \n            if (snape >= hermione) { \n                ++dumbledore; \n            } \n \n            ++hagrid; \n        } \n \n        return dumbledore; \n    } \n};",
    "submit_ts": "1720279396",
    "subm_id": "1311749549"
}