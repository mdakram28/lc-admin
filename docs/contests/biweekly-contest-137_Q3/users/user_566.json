{
    "username": "KLatitude",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<int>> g;\n        int n = board.size(), m = board[0].size();\n        for (int i = 0; i < n; i ++ ) {\n            for (int j = 0; j < m; j ++ ) {\n                g.push_back({board[i][j], i, j});\n            }\n        }\n\n        sort(g.begin(), g.end(), [&](const vector<int>& lhs, const vector<int>& rhs){\n            return lhs[0] > rhs[0];\n        });\n\n        long long res = -1e10;\n        for (int i = 0; i < n * m - 2; i ++ ) {\n            if ((long long)g[i][0] + g[i + 1][0] + g[i + 2][0] <= res)\n                break;\n            \n            for (int j = i + 1; j < n * m - 1; j ++ ) {\n                if (g[i][1] == g[j][1] || g[i][2] == g[j][2])\n                    continue;\n                set<int> row, col;\n                row.insert(g[i][1]);\n                col.insert(g[i][2]);\n                row.insert(g[j][1]);\n                col.insert(g[j][2]);\n                long long sum = g[i][0] + g[j][0];\n                \n                int k = j + 1;\n                if (sum + g[k][0] <= res)\n                    break;\n                \n                while (k < n * m) {\n                    if (row.count(g[k][1]) == 0 && col.count(g[k][2]) == 0) {\n                        sum += g[k][0];\n                        break;\n                    }\n                    k ++ ;\n                }\n                if (k < n * m) {\n                    res = max(res, sum);\n                    // cout << i << ' ' << j << ' ' << k << endl;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723909176",
    "subm_id": "556334887"
}