{
    "username": "zyhjy",
    "submission": "class Solution {\npublic:\n\tint minimumDistance(vector<vector<int>>& points) {\n\t\tint n = points.size();\n\t\tvector<pair<int, int>> a{};\t/// x + y\n\t\tvector<pair<int, int>> b{};\t/// x - y\n\t\ta.reserve(n);\n\t\tb.reserve(n);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tconst auto& p = points[i];\n\t\t\ta.emplace_back(p[0] + p[1], i);\n\t\t\tb.emplace_back(p[0] - p[1], i);\n\t\t}\n\t\tsort(a.begin(), a.end());\n\t\tsort(b.begin(), b.end());\n//\t\tcout << a.front().second << a.back().second << b.front().second << b.back().second << endl;\n\t\tauto help = [&](int d) -> int {\n//\t\t\tcout << d << \" \";\n\t\t\tint a1 = INT32_MIN, a2 = INT32_MAX, a3 = INT32_MIN, a4 = INT32_MAX;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i != d) {\n\t\t\t\t\t// cout << points[i][0] << \" \" << points[i][1] << \" \";\n\t\t\t\t\ta1 = max(a1, points[i][0] + points[i][1]);\n\t\t\t\t\ta2 = min(a2, points[i][0] + points[i][1]);\n\t\t\t\t\ta3 = max(a3, points[i][0] - points[i][1]);\n\t\t\t\t\ta4 = min(a4, points[i][0] - points[i][1]);\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << max(a1 - a2, a3 - a4) << endl;\n\t\t\treturn max(a1 - a2, a3 - a4);\n\n\t\t};\n\t\treturn min(min(help(a.back().second), help(b.back().second)),\n\t\t\t\t   min(help(a.front().second), help(b.front().second)));\n\t}\n};"
}