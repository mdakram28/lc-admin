{
    "username": "ykings12",
    "submission": "class Solution {\npublic:\n    using ll=long long;\n    const int MOD = 1e9 + 7;\nprivate:\n    vector<int> calc(int n, vector<vector<int>>& nums) {\n        vector<int> inv(n, -1);\n        for (auto& req : nums) {\n            inv[req[0]] = req[1];\n        }\n        return inv;\n    }\n\n    vector<vector<ll>> start(int n) {\n        vector<vector<ll>> dp(n + 1, vector<ll>(401, 0));\n        dp[0][0] = 1;\n        return dp;\n    }\n\n    vector<ll> pref(const vector<ll>& prev) {\n        vector<ll> sum(401, 0);\n        sum[0] = prev[0];\n        for (int j = 1; j <= 400; j++) {\n            sum[j] = (sum[j - 1] + prev[j]) % MOD;\n        }\n        return sum;\n    }\n\n    void f(vector<vector<ll>>& dp, const vector<ll>& sum, int i) {\n        for (int j = 0; j <= 400; j++) {\n            int left = max(0, j - (i - 1));\n            dp[i][j] = (sum[j] - (left > 0 ? sum[left - 1] : 0) + MOD) % MOD;\n        }\n    }\n\n    void update(vector<vector<ll>>& dp, const vector<int>& inv, int i) {\n        if (inv[i - 1] != -1) {\n            ll temp = dp[i][inv[i - 1]];\n            dp[i].assign(401, 0);\n            dp[i][inv[i - 1]] = temp;\n        }\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& nums) {\n        vector<int> inv = calc(n, nums);\n        vector<vector<ll>> dp = start(n);\n        \n        for (int i = 1; i <= n; i++) {\n            vector<ll> sum = pref(dp[i - 1]);\n            f(dp, sum, i);\n            update(dp, inv, i);\n        }\n        \n        return dp[n][inv[n - 1]];\n    }\n\n\n};\n",
    "submit_ts": "1719068709",
    "subm_id": "1296774347"
}