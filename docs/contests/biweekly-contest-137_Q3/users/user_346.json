{
    "username": "Vladislav",
    "submission": "class Solution {\n    fun maximumValueSum(board: Array<IntArray>): Long {\n    var result = -4000000000L\n    val m = board.size\n    val n = board[0].size\n    val tempArray = Array<Cell>(n) {Cell(-1,-1,-1)}\n    val cells = ArrayList<Cell>()\n    for (i in 0 until m) {\n        for (j in 0 until n) {\n            tempArray[j] = Cell(i,j,board[i][j].toLong())\n        }\n        tempArray.sortBy { - it.value }\n        cells.add(tempArray[0])\n        cells.add(tempArray[1])\n        cells.add(tempArray[2])\n    }\n    cells.sortBy { - it.value }\n\n    for (i in 0 until cells.size) {\n        val res = cells[i].value\n        if (res <= result / 3L - 1) break\n        for (j in i+1 until cells.size) {\n            if (cells[i].x == cells[j].x || cells[i].y == cells[j].y) continue\n            val res2 = res + cells[j].value\n            if (res2 <= 2L * result / 3L - 1) break\n            for (k in j+1 until cells.size) {\n                if (cells[k].x == cells[i].x || cells[k].x == cells[j].x || cells[k].y == cells[i].y ||\n                    cells[k].y == cells[j].y) {\n                    continue\n                }\n                result = Math.max(result, res2 + cells[k].value)\n                break\n            }\n        }\n    }\n    return result\n}\n\ndata class Cell(val x: Int, val y: Int, val value: Long)\n}",
    "submit_ts": "1723909259",
    "subm_id": "1359185653"
}