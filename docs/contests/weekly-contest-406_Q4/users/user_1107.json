{
    "username": "redsmolder",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n            int nh = 1;\n            int nv = 1;\n            vector<pair<int, int> > cuts = vector<pair<int, int> >();\n            for(int x: horizontalCut){\n                cuts.push_back({x, 0});\n            }\n            for(int x: verticalCut){\n                cuts.push_back({x, 1});\n            }\n            sort(cuts.begin(), cuts.end());\n            long long ans = 0;\n            int w = cuts.size();\n            for(int i = w - 1; i >= 0; i--){\n                if(cuts[i].second){\n                    ans += cuts[i].first*nh;\n                    nv++;\n                }\n                else{\n                    ans += cuts[i].first*nv;\n                    nh++;\n                }\n            }\n            return ans;\n        }\n};",
    "submit_ts": "1720925765",
    "subm_id": "1320265505"
}