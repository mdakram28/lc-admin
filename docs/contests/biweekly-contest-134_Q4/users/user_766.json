{
    "username": "amanktripathi06",
    "submission": "class Solution {\npublic:\n     long long countSubarrays(vector<int>& nums, int tobe) {\n        \n        \n\n\n        int n = nums.size();\n\n\n       long long ans = 0;\n\n\n        unordered_map<long long, long long> pre;\n\n// just to store previous vals;\n        for (int i=0;i<n;i++) {\n\n\n\n\n            if (nums[i] == tobe) {\n\n\n                ++ans;\n\n\n            }\n\n            unordered_map<long long, long long> curr; \n\n\n            curr[nums[i]] = (2-1);\n\n\n\n            for (auto& [v, f] : pre) {\n\nint value=1;\n// taking out of pre every ele and check for it//.\n\n                long long temp  = v & nums[i];\n\n\n                if (temp == tobe) {\n\n// if it becoms tobe ke equal to hum ans+=f karege\n\n\n\n\n                    ans += f;\n\n\n                }\n                curr[temp] += f;\n\n\n            }\n            \n            pre = curr;\n\n            curr=pre;\n\n// assign currr to pre//\n\n        }\n\n\n        return ans;\n\n\n    }\n};",
    "submit_ts": "1720280199",
    "subm_id": "1311780485"
}