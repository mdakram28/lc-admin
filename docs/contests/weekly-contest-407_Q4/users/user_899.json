{
    "username": "Shaurya_Malhan",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        boolean flag = false;\n        for(int i = 0; i < n; i++){\n            int l = target[i] - nums[i];\n            if(l < 0){\n                flag = false;\n                break;\n            }else if(l > 0){\n                flag = true;\n                break;\n            }\n        }\n        ArrayList<Integer> idx = new ArrayList<>();\n        for(int i = 0; i < n; i++){\n            diff[i] = target[i] - nums[i];\n            if(diff[i] < 0 && flag == false){\n                idx.add(i);\n                flag = true;\n            }else if(diff[i] > 0 && flag == true){\n                idx.add(i);\n                flag = false;\n            }\n        }\n        idx.add(n);\n        long ans = 0;\n        for(int i = 0; i < idx.size() - 1; i++){\n            int l = idx.get(i);\n            int r = idx.get(i + 1);\n            ans += check(l, r, diff);\n        }\n        return ans;\n    }\n    public static long check(int i, int j, int[] diff){\n        int prev = 0;\n        long ans = 0;\n        for(int k = i; k < j; k++){\n            int l = Math.abs(diff[k]);\n            if(prev >= l){\n                prev = l;\n                continue;\n            }\n            ans += (l - prev);\n            prev = l;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721532353",
    "subm_id": "1327983827"
}