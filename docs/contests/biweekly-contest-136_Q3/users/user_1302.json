{
    "username": "cianotico",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid) \n        n = len(grid[0])\n        flips = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                counter = Counter([\n                    grid[i][j],\n                    grid[i][n - 1 - j],\n                    grid[m - 1 - i][j],\n                    grid[m - 1 - i][n - 1 - j]\n                ])\n                flips += min(4 - counter[0], 4 - counter[1])\n        ones_upper = ones_lower = 0\n        if m % 2 == 1 and n % 2 == 1 and grid[m // 2][n // 2] == 1:\n            flips += 1\n        if m % 2 == 1:\n            for j in range(n // 2):\n                if grid[m // 2][j] != grid[m // 2][n - j - 1]:\n                    flips += 1\n                    ones_upper += 2\n                elif 1 == grid[m // 2][j] == grid[m // 2][n - j - 1]:\n                    ones_lower += 2\n                    ones_upper += 2\n        if n % 2 == 1:\n            for i in range(m // 2):\n                if grid[i][n // 2] != grid[m - i - 1][n // 2]:\n                    flips += 1\n                    ones_upper += 2\n                elif 1 == grid[i][n // 2] == grid[m - i - 1][n // 2]:\n                    ones_lower += 2\n                    ones_upper += 2\n        if ones_upper == ones_lower and ones_upper % 4 != 0:\n            flips += 2\n        return flips",
    "submit_ts": "1722699144",
    "subm_id": "1343202765"
}