{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    int a[100005], n;\n    int h[20][100005], lg[100005];\n    int cal(int l, int r){\n        int t = lg[r - l + 1];\n        return h[t][l] & h[t][r - (1 << t) + 1];\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        n = nums.size();\n        for(int i = 1; i <= n; ++i) a[i] = nums[i - 1], h[0][i] = a[i];\n        int now = 0;\n        for(int i = 1; i <= n; ++i){\n            lg[i] = now;\n            if(i == (1 << now + 1)) ++now;\n        }\n        for(int i = 1; i <= 17; ++i)\n            for(int j = 1; j + (1 << i) - 1 <= n; ++j)\n                h[i][j] = h[i - 1][j] & h[i - 1][j + (1 << i - 1)];\n        int ans = 2e9;\n        for(int i = 1; i <= n; ++i){\n            int l = i, r = n;\n            while(l < r){\n                int mid = l + r + 1 >> 1;\n                if(cal(i, mid) >= k) l = mid;\n                else r = mid - 1;\n            }\n            ans = std::min(ans, abs(k - cal(i, l)));\n            if(l < n) ans = std::min(ans, abs(k - cal(i, l + 1)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296355.0
}