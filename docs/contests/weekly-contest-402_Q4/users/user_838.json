{
    "username": "22kinshukbansal",
    "submission": "class Segment:\n    def __init__(self, nums):\n        self.n = len(nums)\n        self.data = [0] * (4 * self.n)\n        self.build(nums, 0, 0, self.n - 1)\n\n    def is_peak(self, nums, i):\n        if i <= 0 or i >= len(nums) - 1: return False\n        return nums[i] > nums[i - 1] and nums[i] > nums[i + 1]\n\n    def build(self, nums, node, start, end):\n        if start == end: self.data[node] = 1 if self.is_peak(nums, start) else 0\n        else:\n            mid = (start + end) >> 1\n            self.build(nums, 2 * node + 1, start, mid)\n            self.build(nums, 2 * node + 2, mid + 1, end)\n            self.data[node] = self.data[2 * node + 1] + self.data[2 * node + 2]\n\n    def query(self, l, r):\n        return self.query_helper(0, 0, self.n - 1, l, r)\n\n    def query_helper(self, node, start, end, l, r):\n        if r < start or end < l: return 0\n        if l <= start and end <= r: return self.data[node]\n        mid = (start + end) >> 1\n        left_query = self.query_helper(2 * node + 1, start, mid, l, r)\n        right_query = self.query_helper(2 * node + 2, mid + 1, end, l, r)\n        return left_query + right_query\n\n    def update(self, idx, val, nums):\n        self.update_helper(0, 0, self.n - 1, idx, val, nums)\n\n    def update_helper(self, node, start, end, idx, val, nums):\n        if start == end: self.data[node] = 1 if self.is_peak(nums, idx) else 0\n        else:\n            mid = (start + end) >> 1\n            if start <= idx <= mid: self.update_helper(2 * node + 1, start, mid, idx, val, nums)\n            else: self.update_helper(2 * node + 2, mid + 1, end, idx, val, nums)\n            self.data[node] = self.data[2 * node + 1] + self.data[2 * node + 2]\n\nclass Solution:\n    def countOfPeaks(self, nums, queries):\n        seg = Segment(nums)\n        res = []\n        n = len(nums)\n        for query in queries:\n            if query[0] == 1:\n                l, r = query[1], query[2]\n                if l == r: res.append(0)\n                else: res.append(seg.query(l + 1, r - 1))\n            elif query[0] == 2:\n                idx, val = query[1], query[2]\n                nums[idx] = val\n                if idx > 0: seg.update(idx - 1, nums[idx - 1], nums)\n                seg.update(idx, nums[idx], nums)\n                if idx < n - 1: seg.update(idx + 1, nums[idx + 1], nums)\n        return res",
    "submit_ts": 1718508894.0
}