{
    "username": "DKA02",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size(), m=grid[0].size();\n        int res=0;\n        for(int i=0; i<n/2; i++)\n        {\n            for(int j=0; j<m/2; j++)\n            {\n                int cnt=grid[i][j]+grid[n-1-i][j]+grid[i][m-1-j]+grid[n-1-i][m-1-j];\n                res+=min(cnt, 4-cnt);\n            }\n        }\n        int onepairs=0, onezeropairs=0;\n        if(n&1)\n        {\n            int r=(n)/2;\n            for(int j=0; j<m/2; j++)\n            {\n                if(grid[r][j]+grid[r][m-1-j]==2)\n                onepairs++;\n                else if(grid[r][j]+grid[r][m-1-j]==1)\n                onezeropairs++;\n            }\n        }\n        if(m&1)\n        {\n            int c=(m)/2;\n            for(int i=0; i<n/2; i++)\n            {\n                // cout<<i<<\" \"<<c<<endl;\n                if(grid[i][c]+grid[n-1-i][c]==2)\n                onepairs++;\n                else if(grid[i][c]+grid[n-1-i][c]==1)\n                onezeropairs++;\n            }\n        }\n        if(n&1 && m&1)\n        {\n            if(grid[n/2][m/2])\n            res++;\n        }\n        cout<<res<<\" \"<<onezeropairs<<endl;\n        res=res+onezeropairs;\n        if(onepairs%2)\n        {\n            if(onezeropairs==0)\n            res=res+2;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722697986",
    "subm_id": "1343165854"
}