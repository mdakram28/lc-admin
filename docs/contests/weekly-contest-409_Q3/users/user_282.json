{
    "username": "dogdog",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] qs) {\n        int m = qs.length;\n        int[] ans = new int[m];\n        List<Integer>[] g = new ArrayList[n];\n        // int[][] \n        //\u4e0d\u76f8\u4ea4\uff0c\u53ea\u5b58\u5728\u5305\u542b\uff1fst\u8868\uff1f\n        // for(int i = 0; i < n; i++) g[i] = new ArrayList<>();\n        // TreeMap<Integer, Integer> tm = new TreeMap<>();\n        TreeSet<Integer> ts = new TreeSet<>();\n        int[] next = new int[n], f = new int[n];\n        for(int i = 0; i < n - 1; i++){\n            // tm.put(i, i + 1);\n            next[i] = i + 1;\n            //g[i].add(i + 1);\n            f[i] = n - 1 - i;\n            ts.add(i);\n        }\n        ts.add(n + 1);\n        int sum = n - 1;\n        for(int i = 0; i < m; i++){\n            int[] q = qs[i];\n            int pre = ts.floor(q[0]);\n            if(next[pre] < q[1]){\n                int x = ts.ceiling(pre + 1);\n                while(x < q[1]){\n                    ts.remove(x);\n                    x = ts.ceiling(pre + 1);\n                }\n                next[pre] = q[1];\n                // int sub = f[pre] - f[q[1]] - 1;\n                // f[pre] = f[q[1]] + 1;\n                // sum -= sub;\n                // System.out.println(sub);\n            }\n            ans[i] = ts.size() - 1;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722741074",
    "subm_id": "552335862"
}