{
    "username": "faizanhussain2310",
    "submission": "#define ll long long\n\nclass SGTree\n{\n    vector<ll> seg;\n\npublic:\n    SGTree(ll n)\n    {\n        seg.resize(4 * n + 1);\n    }\n\n    void build(ll ind, ll low, ll high, vector<int> &arr)\n    {\n        if (low == high)\n        {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        ll mid = (low + high) / 2;\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = (seg[2 * ind + 1] & seg[2 * ind + 2]);\n    }\n\n    ll query(ll ind, ll low, ll high, ll l, ll r)\n    {\n        // no overlap\n        // l r low high or low high l r\n        if (r < low || high < l)\n            return (1ll<<32)-1;\n\n        // complete overlap\n        // [l low high r]\n        if (low >= l && high <= r)\n            return seg[ind];\n\n        ll mid = (low + high) >> 1;\n        ll left = query(2 * ind + 1, low, mid, l, r);\n        ll right = query(2 * ind + 2, mid + 1, high, l, r);\n        return (left & right);\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        ll n=nums.size();\n\n        SGTree seg(n+5);\n        seg.build(0,0,n-1,nums);\n        ll cnt=0;\n        for(int i=0; i<n; i++) {\n            ll l=i,r=n-1;\n            ll ans=-1;\n\n            while(l<=r) {\n                ll mid=(l+r)/2;\n\n                ll val=seg.query(0,0,n-1,i,mid);\n\n                if(val>k) {\n                    l=mid+1;\n                }\n                else if(val<k) {\n                    r=mid-1;\n                }\n                else {\n                    ans=mid;\n                    r=mid-1;\n                }\n            }\n\n            if(ans!=-1) {\n                // cout<<\"ans = \"<<ans<<\"\\n\";\n                ll val=seg.query(0,0,n-1,i,ans);\n                if(val!=k) continue;\n\n                l=i,r=n-1;\n                ll ans1=ans;\n                // cout<<\"l = \"<<l<<\" r = \"<<r<<\"\\n\";\n                while(l<=r) {\n                    ll mid=(l+r)/2;\n\n                    val=seg.query(0,0,n-1,i,mid);\n                    // cout<<\"mid = \"<<mid<<\" valu = \"<<val<<\"\\n\";\n                    if(val>k) {\n                        l=mid+1;\n                    }\n                    else if(val<k) {\n                        r=mid-1;\n                    }\n                    else {\n                        ans1=mid;\n                        l=mid+1;\n                    }\n\n                }\n                // cout<<\"ans1 = \"<<ans1<<\"\\n\";\n                // cout<<\"i = \"<<i<<\" \"<<(ans1-ans+1)<<\"\\n\";\n                cnt+=(ans1-ans+1);\n            }\n\n        }\n\n        return cnt;\n    }\n};",
    "submit_ts": "1720281259",
    "subm_id": "1311818688"
}