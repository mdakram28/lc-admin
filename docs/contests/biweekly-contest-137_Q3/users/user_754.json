{
    "username": "shubulan",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<vector<int>> bd;\n        int n = board[0].size(), m = board.size();\n        for (int i = 0; i < m; i++) {\n            vector<int> tmp(n);\n            iota(tmp.begin(), tmp.end(), 0);\n            sort(tmp.begin(), tmp.end(), [&](int a, int b) {\n                return board[i][b] < board[i][a];\n            });\n            bd.push_back(std::move(tmp));\n        }\n        long long x = -0x3f3f3f3f3f3f3f3f;\n        for (int i = 0; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                for (int k = j + 1; k < m; k++) {\n                    for (int t = 0; t < 3; t++) {\n                        for (int q = 0; q < 3; q++) {\n                            for (int l = 0; l < 3; l++) {\n                                if (bd[i][t] != bd[j][q] && \n                                    bd[j][q] != bd[k][l] &&\n                                    bd[i][t] != bd[k][l]) {\n                                        x = max(x, (long long)board[i][bd[i][t]] + board[j][bd[j][q]] + (long long)board[k][bd[k][l]]);\n                                    }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return x;\n        \n    }\n};",
    "submit_ts": "1723907554",
    "subm_id": "556326214"
}