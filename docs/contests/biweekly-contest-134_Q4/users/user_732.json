{
    "username": "anh_tai",
    "submission": "int tab[100001][17];\n\nint get(int i, int j){\n    int lg = (int)log2(j - i + 1);\n    return tab[i][lg] & tab[j - (1 << lg) + 1][lg];\n}\n\nint get2(int i, int n, int k){\n    int lo = i;\n    int hi = n - 1;\n    while (lo < hi){\n        int m = (lo + hi) >> 1;\n        if (get(i, m) > k){\n            lo = m + 1;\n        }\n        else{\n            hi = m; \n        }   \n    }\n\n    if (get(i, lo) == k){\n        return lo;\n    }\n\n    return -1; \n}\n\nint get1(int i, int n, int k){\n    int lo = i;\n    int hi = n - 1;\n    while (lo < hi){\n        int m = (lo + hi + 1) >> 1;\n        if (get(i, m) < k){\n            hi = m - 1;\n        }\n        else{\n            lo = m;\n        }   \n    }\n\n    if (get(i, lo) == k){\n        return lo;\n    }\n\n    return -1; \n}\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        for (int i = 0; i < n; i++){\n            tab[i][0] = nums[i];\n        }\n        \n        for (int lg = 1; lg < 17; lg++){\n            for (int i = 0; i < n; i++){\n                if (i + (1<<lg) <= n){\n                    tab[i][lg] = tab[i][lg - 1] & tab[i + (1<<lg-1)][lg - 1];\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (int i = 0; i < n; i++){\n            int l = get2(i, n, k);\n            int r = get1(i, n, k);\n            cout << l << \" \" << r << \"\\n\"; \n            if (l != -1){\n                ans += r - l + 1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277228",
    "subm_id": "1311653837"
}