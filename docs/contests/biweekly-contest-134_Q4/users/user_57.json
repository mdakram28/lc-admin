{
    "username": "alephinfinity1",
    "submission": "using ll = long long;\n\nll st[20][100010];\nint n;\n\nint range_and(int l, int r) {\n    int w = r-l+1;\n    int b = 0;\n    while (w > 1) { b++; w >>= 1; }\n    return st[b][l] & st[b][r+1-(1<<b)];\n}\n\nclass Solution {\npublic:\n    ll countSubarrays(vector<int>& nums, int k) {\n        n = (int) size(nums);\n\n        for (int i = 0; i < n; i++) { st[0][i] = nums[i]; }\n        for (int i = 1; (1 << i) <= n; i++) {\n            for (int j = 0; j + (1 << (i-1)) < n; j++) {\n                st[i][j] = st[i-1][j] & st[i-1][j+(1<<(i-1))];\n            }\n        }\n\n        ll ans = 0;\n        for (int i = 0; i < n; i++) {\n            if ((nums[i] & k) != k) { continue; }\n            int lm, rm;\n\n            int l = i, r = n;\n            while (l < r) {\n                int mid = l + (r-l) / 2;\n                if (range_and(i, mid) <= k) {\n                    r = mid;\n                } else {\n                    l = mid+1;\n                }\n            }\n\n            lm = l;\n            l = i;\n            r = n;\n            while (l < r) {\n                int mid = l + (r-l) / 2;\n                \n                if (range_and(i, mid) < k) {\n                    r = mid;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            rm = l;\n\n            ans += rm - lm;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720277618",
    "subm_id": "544557792"
}