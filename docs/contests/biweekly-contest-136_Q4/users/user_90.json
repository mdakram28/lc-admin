{
    "username": "onlyblues",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> g(n);\n        for (auto &p : edges) {\n            g[p[0]].push_back(p[1]);\n            g[p[1]].push_back(p[0]);\n        }\n        vector<int> f1(n), f2(n), f3(n);\n        function<void(int, int)> dfs1 = [&](int u, int p) {\n            for (auto &v : g[u]) {\n                if (v == p) continue;\n                dfs1(v, u);\n                int w = f1[v] + (~v & 1) + 1;\n                if (f1[u] <= w) f2[u] = f1[u], f1[u] = w;\n                else if (f2[u] < w) f2[u] = w;\n            }\n        };\n        function<void(int, int)> dfs2 = [&](int u, int p) {\n            for (auto &v : g[u]) {\n                if (v == p) continue;\n                int w = f1[v] + (~v & 1) + 1 == f1[u] ? f2[u] : f1[u];\n                f3[v] = max(f3[u], w) + (~u & 1) + 1;\n                dfs2(v, u);\n            }\n        };\n        dfs1(0, -1), dfs2(0, -1);\n        vector<int> ans(n);\n        for (int i = 0; i < n; i++) {\n            ans[i] = max(f1[i], f3[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722696901",
    "subm_id": "552263417"
}