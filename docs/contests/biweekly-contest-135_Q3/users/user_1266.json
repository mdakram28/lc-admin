{
    "username": "newbie_noob",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>&v, int k) {\n        int n=v.size();\n        int ans=n;\n        map<int,vector<int>>m;\n        vector<int>maxreachable;\n        int l=0,r=n-1;\n        while(l<r)\n        {\n            int diff=max(v[l],v[r]);\n            diff-=min(v[l],v[r]);\n            int max_fromhere=max(v[l],v[r]);\n            max_fromhere=max(max_fromhere,k-v[l]);\n            max_fromhere=max(max_fromhere,k-v[r]);\n            m[diff].push_back(max_fromhere);\n            maxreachable.push_back(max_fromhere);\n            ++l,--r;\n        }\n        sort(maxreachable.begin(),maxreachable.end());\n        for(auto it:m)\n        {\n            int pos=maxreachable.size();\n            int l=0,r=maxreachable.size()-1;\n            while(l<=r)\n            {\n                int mid=(l+r)>>1;\n                if(maxreachable[mid]>=it.first)\n                {\n                    pos=mid;\n                    r=mid-1;\n                }\n                else\n                {\n                    l=mid+1;\n                }\n            }\n            pos=lower_bound(maxreachable.begin(),maxreachable.end(),it.first)-maxreachable.begin();\n            pos=(pos*2 + ((n>>1) - pos));\n            for(auto it1:it.second)\n            {\n                if(it1>=it.first)pos--;\n                else pos-=2;\n            }\n            ans=min(ans,pos);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721489321",
    "subm_id": "1327449830"
}