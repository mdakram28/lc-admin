{
    "username": "quocdatmc",
    "submission": "class Solution {\npublic:\n    void add(int &a, int b) {\n        const int mod = 1e9 + 7;\n        a = a + b;\n        if(a >= mod) a -= mod;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int mod = 1e9 + 7;\n        int dp[305][405], req[n + 5];\n        memset(dp, 0, sizeof(dp));\n        memset(req, -1, sizeof(req));\n        for(auto v : requirements) {\n            req[v[0]] = v[1];\n        }\n        dp[0][0] = 1;\n        if(req[0] > 0) return 0;\n        for(int i = 0; i < n - 1; i++) {\n            for(int cnt = 0; cnt <= 400; cnt++) {\n                if(dp[i][cnt] == 0) continue;\n                // cout << i << \" \" << cnt << \" \" << dp[i][cnt] << endl;\n                if(req[i + 1] != -1) {\n                    if(cnt > req[i + 1] || cnt + i + 1 < req[i + 1]) continue;\n                    add(dp[i + 1][req[i + 1]], dp[i][cnt]);\n                    continue;\n                }\n                for(int j = 0; j <= i + 1 && cnt + j <= 400; j++) {\n                    add(dp[i + 1][cnt + j], dp[i][cnt]);\n                }\n            }\n        }\n        return dp[n - 1][req[n - 1]];\n    }\n};",
    "submit_ts": "1719068202",
    "subm_id": "1296756772"
}