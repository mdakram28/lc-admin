{
    "username": "mastoori1234",
    "submission": "typedef long long ll;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        ll ans = 0;\n        int n = nums.size();\n        \n        vector<int> pos(30,-1);\n        \n        for( int i=n-1; i>=0; i--) {\n            \n            int val = nums[i];\n            \n            map<int,int> mp;\n            for( int j=0; j<30; j++) {\n                if(pos[j]!=-1) {\n                    mp[pos[j]] = mp[pos[j]]|(1<<j);                        \n                }\n            }\n            \n            if(mp.empty()) {\n                \n                ans += (val==k);\n                    \n            } else {\n                \n                vector< pair<int,int> > arr;\n                for( auto p: mp) {\n                    arr.push_back(p);\n                }\n\n                int currPos = i;\n                int currVal = val;\n\n                for( int j=0; j<arr.size(); j++) {\n                    if(currVal<k) {\n                        break;\n                    }\n                    if(currVal==k) {\n                        ans += arr[j].first - currPos;\n                    }\n                    currVal = currVal ^ (currVal & arr[j].second);\n                    currPos = arr[j].first;\n                }\n                if(currVal==k) {\n                    ans += n - arr.back().first;\n                }\n            }\n            \n            // cout << \" i: \" << i << \" ans: \" << ans << \"\\n\";\n            \n            string s = bitset<30>(nums[i]).to_string();\n            reverse( s.begin(), s.end());\n            \n            for( int j=0; j<30; j++) {\n                if(s[j]=='0') {\n                    pos[j] = i;\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720277616",
    "subm_id": "1311672029"
}