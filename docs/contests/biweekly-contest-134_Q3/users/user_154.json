{
    "username": "DylanSmith",
    "submission": "typedef long long ll;\n \n#define pb push_back\n#define sz(x) (int)x.size()\n#define all(x) begin(x),end(x)\n#define lb(x,y) lower_bound(all(x),y)-begin(x)\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int N = sz(colors);\n        for (int i = 0; i < N; i++) {\n            colors.pb(colors[i]);\n        }\n        int cur = 0, res = 0;\n        for (int i = 0; i < N + k - 1; i++) {\n            if (i - 1 > 0 && colors[i - 1] != colors[i - 2] && colors[i - 1] != colors[i]) cur++;\n            if (i - k + 1 > 0 && colors[i - k + 1] != colors[i - k] && colors[i - k + 1] != colors[i - k + 2]) cur--;\n            if (i - k + 1 >= 0) res += cur == k - 2;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720276678",
    "subm_id": "1311627116"
}