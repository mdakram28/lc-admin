{
    "username": "Carcass",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        \n        int n=points.size(), i, mn=INT_MAX;\n        multiset<int>a, b;\n        \n        \n        \n        for(i=0;i<n;i++){\n            int x=points[i][0]+points[i][1];\n            int y=points[i][0]-points[i][1];\n            a.insert(x);\n            b.insert(y);\n        }\n        \n        for(i=0;i<n;i++){\n            int x=points[i][0]+points[i][1];\n            int y=points[i][0]-points[i][1];\n            \n            a.erase(a.find(x));\n            b.erase(b.find(y));\n            \n            //cout<<a.size()<<\" \"<<b.size()<<endl;\n            //int p=*(a.rbegin());\n            int z=max(*a.rbegin()-*a.begin(), *b.rbegin()-*b.begin());\n            if(z<mn)\n                mn=z;\n            a.insert(x);\n            b.insert(y);\n        }\n        \n        return mn;\n        \n        \n    }\n};"
}