{
    "username": "peaceful-babbagepvs",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] differ = new int[n];\n        for(int i = 0; i < n; i++){\n            differ[i] = nums[i] - target[i];\n        }\n        int i = 0, pre = -1;\n        long count = 0L;\n        while(i < n){\n            if(differ[i] == 0){\n                i++;\n                continue;\n            }\n            pre = i - 1;\n            if(differ[i] < 0){\n                int right = i, max = differ[i];\n                while(right < n && differ[right] < 0){\n                    max = Math.max(max, differ[right]);\n                    right++;\n                }\n                max = -max;\n                for(int t = i; t < right; t++){\n                    differ[t] += max;\n                }\n                count += max;\n            }else{\n                int right = i, min = differ[i];\n                while(right < n && differ[right] > 0){\n                    min = Math.min(min, differ[right]);\n                    right++;\n                }\n                for(int t = i; t < right; t++){\n                    differ[t] -= min;\n                }\n                count += min;\n            }\n            i = pre + 1;\n        }\n        return count;\n    }\n}",
    "submit_ts": "1721532893",
    "subm_id": "548394918"
}