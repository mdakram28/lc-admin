{
    "username": "huan-heng-zhu",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> delta2Cnt;\n        // int maxCnt=0;\n        int n = nums.size();\n        vector<int> unacceptDelta(1e5 + 10);\n        \n        int minChange = INT_MAX;\n        for(int i=0; i<n/2; i++){\n            int front = nums[i], back = nums[n-1-i];\n            int delta = abs(front - back);\n            \n            delta2Cnt[delta]++;\n            int curAcceptDelta = max({front-0, k-front, back-0, k-back});\n            unacceptDelta[curAcceptDelta+1]++;\n        }\n        \n        for(int i=1; i<1e5 + 5; i++){\n            unacceptDelta[i] += unacceptDelta[i-1];\n        }\n    \n        \n        for(auto [delta, cnt]: delta2Cnt){\n            int uaDelta = unacceptDelta[delta];\n            int curChange = 2 * uaDelta + (n/2 - uaDelta - cnt);\n            minChange = min(minChange, curChange);\n            \n        }\n        \n        \n        \n        \n        return minChange;\n    }\n};",
    "submit_ts": "1721490238",
    "subm_id": "548322125"
}