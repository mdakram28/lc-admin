{
    "username": "altaf_14",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    ll f(vector<pair<ll,ll>> &A,ll N)\n    {\n        // return 0;\n        // Variables to track running extrema\n        ll minsum, maxsum, mindiff, maxdiff;\n\n        minsum = maxsum = A[0].first + A[0].second;\n        mindiff = maxdiff = A[0].first - A[0].second;\n        for (ll i = 1; i < N; i++) {\n            ll sum = A[i].first + A[i].second;\n            ll diff = A[i].first - A[i].second;\n            if (sum < minsum)\n                minsum = sum;\n            else if (sum > maxsum)\n                maxsum = sum;\n            if (diff < mindiff)\n                mindiff = diff;\n            else if (diff > maxdiff)\n                maxdiff = diff;\n        }\n\n        ll maximum = max(maxsum - minsum, maxdiff - mindiff);\n        // cout<<\"Max is \"<<maximum<<endl;\n        return maximum;\n    }\n    \n    ll MaxDist(vector<pair<ll, ll> >& A, ll N)\n    {\n        // Variables to track running extrema\n        ll minsum, maxsum, mindiff, maxdiff;\n        ll minsumidx=0,maxsumidx=0,mindiffidx=0,maxdiffidx=0;\n        minsum = maxsum = A[0].first + A[0].second;\n        mindiff = maxdiff = A[0].first - A[0].second;\n        for (ll i = 1; i < N; i++) {\n            ll sum = A[i].first + A[i].second;\n            ll diff = A[i].first - A[i].second;\n            if (sum < minsum)\n            {\n                minsum = sum;\n                minsumidx=i;\n            }\n            else if (sum > maxsum)\n            {\n                maxsum = sum;\n                maxsumidx = i;\n            }\n            if (diff < mindiff)\n            {\n                mindiff = diff;\n                mindiffidx = i;\n            }\n            else if (diff > maxdiff)\n            {\n                maxdiff = diff;\n                maxdiffidx = i;\n            }\n        }\n        vector<ll> v;\n        v.push_back(minsumidx);\n        v.push_back(maxsumidx);\n        v.push_back(mindiffidx);\n        v.push_back(maxdiffidx);\n        ll ans=2e9;\n        for(auto t:v)\n        {\n            vector<pair<ll,ll>> curr;\n            for(ll i=0;i<A.size();i++)\n            {\n                if(i!=t)\n                {\n                    curr.push_back(A[i]);\n                }\n            }\n            // for(auto x:curr)\n            // {\n            //     cout<<x.first<<\" \"<<x.second<<endl;\n            // }\n            // cout<<endl;\n            // cout<<endl;\n            // cout<<endl;\n            ans=min(ans,f(curr,curr.size()));\n        }\n        return ans;\n    }\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<ll,ll>> p;\n        for(auto t:points)\n        {\n            p.push_back({t[0],t[1]});\n        }\n        // for(auto t:p)\n        // {\n        //     cout<<t.first<<\" \"<<t.second<<endl;\n        // }\n        return MaxDist(p,p.size());\n    }\n};"
}