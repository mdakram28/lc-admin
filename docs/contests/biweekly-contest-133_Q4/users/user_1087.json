{
    "username": "SimardeepSingh1450",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9+7;\n    #define ll long long\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int maxInvCnt  = 400;\n        \n        //given end-i is unique\n        unordered_map<int,int> mp;\n        for(auto it:requirements){\n            mp[it[0]+1] = it[1];\n        }\n        \n        vector<vector<ll>> dp(n+1,vector<ll> (maxInvCnt+1,0));\n        dp[0][0]=1;\n        \n        for(int permLen = 1;permLen <= n ; permLen++){\n            for(int invCnt = 0;invCnt <= maxInvCnt ; invCnt++){\n                for(int newPos = 0; newPos < permLen ; newPos++){\n                    int prevInvCnt = invCnt - newPos;\n                    if(prevInvCnt >= 0){\n                        dp[permLen][invCnt] = (dp[permLen][invCnt] + dp[permLen-1][prevInvCnt])%MOD;\n                    }\n                }\n            }\n            if(mp.count(permLen)){\n                int targetInvCnt = mp[permLen];\n                for(int invCnt = 0;invCnt <= maxInvCnt ; invCnt++){\n                    if(invCnt!=targetInvCnt){\n                        dp[permLen][invCnt] = 0;\n                    }\n                }\n            }\n        }\n        \n        ll ans = 0;\n        for(auto it:dp[n]){\n            ans = (ans + it)%MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719071678",
    "subm_id": "1296851866"
}