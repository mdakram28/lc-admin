{
    "username": "park6",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        @lru_cache(None)\n        def dfs(li,lj,ri,rj,cnt):\n            ans = inf \n            if cnt == 1:\n                hlo, hhi = inf, -inf\n                wlo, whi = inf, -inf\n                for i in range(li,ri+1):\n                    for j in range(lj,rj+1):\n                        if grid[i][j] == 1:\n                            hlo = min(hlo,i)\n                            hhi = max(hhi,i)\n                            wlo = min(wlo,j)\n                            whi = max(whi,j)\n                if hlo != inf and wlo != inf:\n                    return (hhi-hlo+1)*(whi-wlo+1)\n                return inf \n            if ri > li:\n                for i in range(li,ri):\n                    ans = min(ans,dfs(li,lj,i,rj,1)+dfs(i+1,lj,ri,rj,cnt-1))\n                    ans = min(ans,dfs(li,lj,i,rj,cnt-1)+dfs(i+1,lj,ri,rj,1))\n            if rj > lj:\n                for j in range(lj,rj):\n                    ans = min(ans,dfs(li,lj,ri,j,1)+dfs(li,j+1,ri,rj,cnt-1))\n                    ans = min(ans,dfs(li,lj,ri,j,cnt-1)+dfs(li,j+1,ri,rj,1))\n            return ans \n        return dfs(0,0,n-1,m-1,3)",
    "submit_ts": "1719113939",
    "subm_id": "541399705"
}