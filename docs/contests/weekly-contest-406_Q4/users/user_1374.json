{
    "username": "betagamma09",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<>());\n        int i = 0, j = 0, cutsLeft = 1, cutsDown = 1;\n        while (i < m-1 && j < n-1){\n            if (horizontalCut[i] > verticalCut[j]){\n                ans += horizontalCut[i] * cutsDown;\n                i += 1;\n                cutsLeft += 1;\n            }\n            else {\n                ans += verticalCut[j] * cutsLeft;\n                j += 1;\n                cutsDown += 1;\n            }\n        }\n        while(i < m-1){\n            ans += horizontalCut[i] * cutsDown;\n            i += 1;\n        }\n        while (j < n-1){\n            ans += verticalCut[j] * cutsLeft;\n            j += 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925919",
    "subm_id": "1320270394"
}