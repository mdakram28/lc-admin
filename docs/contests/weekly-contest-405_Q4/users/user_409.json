{
    "username": "z123k3",
    "submission": "class Solution {\n    class Tree {\n        Integer cost;\n        Tree[] nodes;\n        \n        Tree() {\n            nodes = new Tree[26];\n        }\n    }\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        Tree wordz = new Tree();\n        \n        for(int j = 0; j < words.length; j++) {\n            String word = words[j];\n            Tree curr = wordz;\n            \n            for(int i = 0; i < word.length(); i++) {\n                int c = word.charAt(i) - 'a';\n                \n                if(curr.nodes[c] == null) {\n                    curr.nodes[c] = new Tree();\n                }\n                curr = curr.nodes[c];\n            }\n            \n            if(curr.cost == null) {\n                curr.cost = costs[j];                \n            } else {\n                curr.cost = Math.min(curr.cost, costs[j]);\n            }\n        }\n        \n        return helper(target, wordz, 0, new HashMap<>());\n    }\n    \n    private int helper(String target, Tree words, int start, Map<Integer, Integer> mem) {\n        if(mem.containsKey(start)) {\n            return mem.get(start);\n        }\n        \n        int out = -1;\n        Tree curr = words;\n        \n        for(int i = start; i < target.length(); i++) {\n            int c = target.charAt(i) - 'a';\n            \n            if(curr.nodes[c] == null) {\n                break;\n            }\n            \n            curr = curr.nodes[c];\n            \n            if(curr.cost != null) {\n                if(i + 1 == target.length()) {\n                    out = apply(out, curr.cost);\n                } else {\n                    int tail = helper(target, words, i + 1, mem);\n                    \n                    if(tail > 0) {\n                        out = apply(out, curr.cost + tail);\n                    }\n                }\n            }\n        }\n        \n        mem.put(start, out);\n        return out;\n    }\n    \n    int apply(int out, int pos) {\n        if(out == -1) {\n            return pos;\n        }\n        \n        return Math.min(out, pos);\n    }\n}",
    "submit_ts": "1720322078",
    "subm_id": "1312340104"
}