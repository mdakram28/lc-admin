{
    "username": "ankikadey",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        numFound = 0\n        i = 0\n        j = 1\n        n = len(colors)\n        \n        while j < n + k and i < n:\n            tempJ = j\n            tempEnd = tempJ % n\n            \n            # Find the end of the current alternating group\n            while colors[tempEnd] != colors[(tempEnd - 1 + n) % n] and tempJ < n + k - 1:\n                tempJ += 1\n                tempEnd = tempJ % n\n            \n            # Calculate the number of groups found\n            numFound += max(tempJ - i - k + 1, 0)\n            i = tempJ\n            j = i + 1\n        \n        return numFound\n",
    "submit_ts": "1720280533",
    "subm_id": "1311792971"
}