{
    "username": "delphih",
    "submission": "class Solution:\n    def minimumDistance(self, P: List[List[int]]) -> int:\n        def f(P, ignore=None):\n            mxd = -1\n            mxp = None\n            forms = [(1, 1), (1, -1), (-1, 1), (-1, -1)]\n            for dx, dy in forms:\n                mx = float('-inf')\n                mn = float('inf')\n                mxi, mni = -1, -1\n                for i, (x, y) in enumerate(P):\n                    if i == ignore: continue\n                    v = dx * x + dy * y\n                    if v > mx: mx, mxi = v, i\n                    if v < mn: mn, mni = v, i\n                if mx - mn > mxd: mxd, mxp = mx - mn, (mxi, mni)\n            return mxd, mxp\n        # print(f(P))\n        \n        _, (p1, p2) = f(P)\n        \n        \n        return min(f(P, p1)[0], f(P, p2)[0])"
}