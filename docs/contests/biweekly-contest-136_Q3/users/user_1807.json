{
    "username": "cocofhu",
    "submission": "class Solution {\npublic:\n    int f1(vector<vector<int>>& grid){\n        \n        int n = grid.size(), m = grid[0].size();\n\n        if(n == 1 && m == 1){\n            return grid[0][0];\n        }\n\n\n        int ans = 0;\n        for(int i = 0; i < n / 2; ++i){\n            \n            int j = 0, k = m - 1;\n            while(j < k){\n                // (i, j) (i, k)\n                // (n-i-1, j) (n-i-1, k)\n                int tt = grid[i][j] + grid[i][k] + grid[n-i-1][j] + grid[n-i-1][k];\n                //printf(\"tt = %d, (%d, %d)\\n\",tt,  i, j);\n                ans += min(4-tt, tt);\n                ++j;\n                --k;\n            }\n        }\n\n        int a = 0;\n        int b = 0;\n        int c = 0;\n        if(n & 1){\n            int i = n >> 1;\n            if(m & 1) ans += grid[i][m/2];\n            int j = 0, k = m - 1;\n            while(j < k){\n                if(grid[i][j] != grid[i][k]) ++c;\n                else if(grid[i][j] == 0) ++a;\n                else ++b;\n                ++j;\n                --k;\n            }\n        }\n       \n        if(m & 1){\n            int i = m >> 1;\n            if(n & 1) ans += grid[n/2][i];\n            int j = 0, k = n - 1;\n            while(j < k){\n                if(grid[j][i] != grid[k][i]) ++c;\n                else if(grid[j][i] == 0) ++a;\n                else ++b;\n                ++j;\n                --k;\n            }\n        }\n\n        if(n & 1 || m & 1){\n            if(b % 2 == 0) ans += c;\n            else{\n                if(c >= 1) ans += c;\n                else ans += 2;\n            }\n        }\n        if(m & 1) if(n & 1) ans -= grid[n/2][m/2];\n\n        return ans;\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        \n        return f1(grid);\n    }\n};",
    "submit_ts": "1722698766",
    "subm_id": "552272427"
}