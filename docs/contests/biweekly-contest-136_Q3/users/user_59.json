{
    "username": "harryB17",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < n/2; i++){\n            for(int j = 0; j < m/2; j++){\n                int cnt = 0;\n                if(grid[i][j]) cnt++;\n                if(grid[n-i-1][j]) cnt++;\n                if(grid[i][m-j-1]) cnt++;\n                if(grid[n-i-1][m-j-1]) cnt++;\n                ans += min(cnt, 4-cnt);\n            }\n        }\n        \n        int cnt = 0;\n        bool flag = false;\n        if(m%2){\n            for(int i = 0; i < n/2; i++){\n                if(grid[i][m/2] != grid[n-i-1][m/2]) ans++, flag = true;\n                else if(grid[i][m/2]) cnt += 2;\n            }\n        }\n        if(n%2){\n            for(int j = 0; j < m/2; j++){\n                if(grid[n/2][j] != grid[n/2][m-j-1]) ans++, flag = true;\n                else if(grid[n/2][j]) cnt += 2;\n            }\n        }\n        \n        if(cnt%4 && !flag) ans += 2;\n        if((n*m)%2 && grid[n/2][m/2] == 1) ans++;\n        return ans;\n    }\n};",
    "submit_ts": "1722696508",
    "subm_id": "1343110678"
}