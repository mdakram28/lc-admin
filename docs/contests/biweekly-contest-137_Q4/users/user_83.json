{
    "username": "Tejasvi Arya",
    "submission": "long int dp[500][501];\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        int n=board.size();\n        int m=board[0].size();\n\n        vector<vector<int>> mx=board;\n        \n        for(int i=n-2;i>=0;i--){\n            for(int j=0;j<m;j++){\n                mx[i][j]=max(mx[i+1][j],board[i][j]);\n            }\n        }\n\n\n        for(int i=0;i<n;i++){\n            for(int j=0;j<=m;j++){\n                dp[i][j]=-4000000000;\n            }\n        }\n\n\n\n        vector<pair<int,int>> s[n];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                s[i].push_back({mx[i][j],j});\n            }\n            sort(s[i].rbegin(),s[i].rend());\n        }\n\n        \n\n        auto go=[&](auto&&go,int i,int already)->long int{\n            if(i>=n-1){\n                return -3000000000;\n            }\n            if(already==m and i==n-2){\n                return -3000000000;\n            }\n\n            if(dp[i][already]!=-4000000000){\n                return dp[i][already];\n            }\n\n            long int ans=go(go,i+1,already);\n\n            if(already==m){\n                for(int j=0;j<m;j++){\n                    ans=max(ans,board[i][j]+go(go,i+1,j));\n                }\n            }\n            else{\n                \n                \n                for(int j=0;j<m;j++){\n                    if(j==already) continue;\n                    int k=0;\n                    while((s[i+1][k].second==j) or (s[i+1][k].second==already)) k++;\n                    ans=max(ans,(long int)board[i][j]+s[i+1][k].first);\n                }\n              \n                \n            }\n\n            return dp[i][already]=ans;\n\n        };\n\n        return go(go,0,m);\n        \n\n\n\n\n        \n\n\n    }\n};",
    "submit_ts": "1723908051",
    "subm_id": "1359136052"
}