{
    "username": "zxzxzxzzy",
    "submission": "package main\n\nimport (\n\t\"sort\"\n)\n\nconst MX = int64(2e18)\n\nfunc minimumDistance(nums [][]int) int {\n\tlength := len(nums)\n\ttype point struct {\n\t\tv int64\n\t\ti int\n\t}\n\tp := make([][]point, 4)\n\tfor i := 0; i < 4; i++ {\n\t\tp[i] = make([]point, length)\n\t}\n\tfor i := 0; i < length; i++ {\n\t\tx := int64(nums[i][0])\n\t\ty := int64(nums[i][1])\n\t\tp[0][i] = point{x + y, i}\n\t\tp[1][i] = point{-x + y, i}\n\t\tp[2][i] = point{x - y, i}\n\t\tp[3][i] = point{-x - y, i}\n\t}\n\tfor i := 0; i < 4; i++ {sort.Slice(p[i], func(x, y int) bool { return p[i][x].v < p[i][y].v })}\n\tmx := int64(0)\n\tij1 := 0\n\tij2 := 0\n\tfor i := 0; i < 4; i++ {\n\t\td := p[i][length-1].v - p[i][0].v\n\t\tif d > mx {\n\t\t\tmx = d\n\t\t\tij1 = p[i][length-1].i\n\t\t\tij2 = p[i][0].i\n\t\t}\n\t}\n\tgetResult := func(qq int) int64 {\n\t\tp := make([][]point, 4)\n\t\tfor i := 0; i < length; i++ {\n\t\t\tif i == qq {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tx := int64(nums[i][0])\n\t\t\ty := int64(nums[i][1])\n\t\t\tp[0] = append(p[0], point{x + y, i})\n\t\t\tp[1] = append(p[1], point{-x + y, i})\n\t\t\tp[2] = append(p[2], point{x - y, i})\n\t\t\tp[3] = append(p[3], point{-x - y, i})\n\t\t}\n\t\tfor i := 0; i < 4; i++ {\n\t\t\tsort.Slice(p[i], func(x, y int) bool { return p[i][x].v < p[i][y].v })\n\t\t}\n\t\tmx := int64(0)\n\t\tfor i := 0; i < 4; i++ {\n\t\t\td := p[i][len(p[i])-1].v - p[i][0].v\n\t\t\tmx = max(mx, d)\n\t\t}\n\t\treturn mx\n\t}\n\tresult := MX\n\tresult = min(result, getResult(ij1))\n\tresult = min(result, getResult(ij2))\n\treturn int(result)\n}\n"
}