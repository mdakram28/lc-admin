{
    "username": "ssachin888",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n    int n = nums.size();\n    long count = 0;\n    unordered_map<long long, long long> prevResults;\n    for (int i = 0; i < n; ++i) {\n        unordered_map<long long, long long> currResults;\n        if (nums[i] == k) {\n            ++count;\n        }\n        currResults[(long long) nums[i]] = 1LL;\n        for (auto& entry : prevResults) {\n            long long val = entry.first;\n            long long freq = entry.second;\n            \n            long long newAndResult = val & nums[i];\n            if (newAndResult == k) {\n                count += freq;\n            }\n            currResults[newAndResult] += freq;\n        }\n        prevResults = currResults;\n    }\n    \n    return count;\n    }\n};",
    "submit_ts": "1720278959",
    "subm_id": "1311731498"
}