{
    "username": "user0215Lb",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size(), res = INT_MAX;\n        \n        for(int row = 0; row < m; row++) {\n            for(int col = 0; col < n; col++) {\n                int sum1 = minimumArea1(grid, 0, row, 0, col);\n                int sum2 = 0, sum3 = 0;\n                if(row == m-1 && col != n-1) {\n                    sum2 = minimumArea2(grid, 0, m-1, col+1, n-1);\n                    res = min(res, sum1+sum2+sum3);\n                }else if(row != m-1 && col == n-1) {\n                    sum2 = minimumArea2(grid, row+1, m-1, 0, n-1);\n                    res = min(res, sum1+sum2+sum3);\n                } else {\n                    sum2 = minimumArea1(grid, 0, m-1, col+1, n-1);\n                    sum3 = minimumArea1(grid, row+1, m-1, 0, col);\n                    if(sum2 == 0) {\n                        sum3 = minimumArea2(grid, row+1, m-1, 0, col);\n                    } else if(sum3 == 0) {\n                        sum2 = minimumArea2(grid, 0, m-1, col+1, n-1);\n                    }\n                    res = min(res, sum1+sum2+sum3);\n                    \n                    sum2 = minimumArea1(grid, 0, row, col+1, n-1);\n                    sum3 = minimumArea1(grid, row+1, m-1, 0, n-1);\n                    if(sum2 == 0) {\n                        sum3 = minimumArea2(grid, row+1, m-1, 0, n-1);\n                    } else if(sum3 == 0) {\n                        sum2 = minimumArea2(grid, 0, row, col+1, n-1);\n                    }\n                    res = min(res, sum1+sum2+sum3);\n                }\n                // cout<<res<<','<<row<<','<<col<<endl;\n            }\n        }\n        return res;\n    }\n    int minimumArea1(vector<vector<int>>& grid, int v_start, int v_end, int h_start, int h_end) {\n        int t = INT_MAX, l = INT_MAX, r = INT_MIN, b = INT_MIN;\n        bool f = true;\n        for(int row = v_start; row <= v_end; row++) {\n            for(int col = h_start; col <= h_end; col++) {\n                if(grid[row][col] == 1) {\n                    t = min(t, row);\n                    l = min(l, col);\n                    b = max(b, row);\n                    r = max(r, col);\n                    f = false;\n                }\n            }\n        }\n        if(f) return 0;\n        return (b-t+1) * (r-l+1);\n    }\n    int minimumArea2(vector<vector<int>>& grid, int v_start, int v_end, int h_start, int h_end) {\n        int res = INT_MAX;\n        for(int row = v_start; row <= v_end; row++) {\n            res = min(minimumArea1(grid, v_start, row, h_start, h_end) + minimumArea1(grid, row+1, v_end, h_start, h_end), res);\n        }\n        for(int col = h_start; col <= h_end; col++) {\n            res = min(minimumArea1(grid, v_start, v_end, h_start, col) + minimumArea1(grid, v_start, v_end, col+1, h_end), res);\n        }\n        if(res == INT_MAX) return 0;\n        return res;\n    }\n};",
    "submit_ts": 1719114512.0
}