{
    "username": "hillfighter2908",
    "submission": "class Solution {\npublic:\n    vector<vector<map<long long,int>>> mp;\n    int calc(int k, long long n, int j, int t) {\n        if (j > 30) return 0;\n        if (mp[j][t].find(n) != mp[j][t].end()) {\n            return mp[j][t][n];\n        }\n        int ans = 0;\n        if (n == k) ans++;\n        if (t && n > 0)\n        ans += calc(k,n-1,j,0);\n        ans += calc(k,n+(1<<j),j+1,1);\n        mp[j][t][n] = ans;\n        return ans;\n        \n    }\n    int waysToReachStair(int k) {\n        if (k == 0) return 2;\n        int ans = 0;\n        \n        map<long long,int> m;\n        for (int i = 0; i<32; ++i) {\n            mp.push_back({m,m});\n        }\n        \n        ans = calc(k,1,0,1);\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716088606.0
}