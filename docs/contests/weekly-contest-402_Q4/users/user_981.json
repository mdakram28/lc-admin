{
    "username": "BeaconMC",
    "submission": "\n        \n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        SUSSY = 0\n        for i in range(30):\n            if 2**i > len(nums)*2+5:\n                SUSSY = i\n                break\n\n        tree = [0 for i in range(2**SUSSY)]\n\n\n        def upd(a, val):\n                diff = val-tree[a-1+2**(SUSSY-1)]\n                k = a-1+2**(SUSSY-1)\n                while k:\n                    tree[k] += diff\n                    k //= 2\n\n        def rsum(a,b):\n            sumz = 0\n            a += 2**(SUSSY-1)-1\n            b += 2**(SUSSY-1)-1\n            while a<=b:\n                if a%2 == 1:\n                    sumz += tree[a]\n                    a += 1\n                if b%2 == 0:\n                    sumz += tree[b]\n                    b -= 1\n\n                a//=2\n                b//=2\n            return sumz\n\n        \n        def check(i):\n            if i<=0 or i>=len(nums)-1:\n                return False\n            if nums[i-1] < nums[i] and nums[i] > nums[i+1]:\n                return True\n            return False\n            \n        ans = []\n        for i in range(1,len(nums)-1):\n            if check(i):\n                upd(i, 1)\n        for i in queries:\n            if i[0] == 1:\n                sus = rsum(i[1], i[2])\n                if rsum(i[1], i[1]) == 1:\n                    sus -= 1\n                if rsum(i[2], i[2]) == 1:\n                    sus -= 1\n                ans.append(max(sus,0))\n            else:\n                nums[i[1]] = i[2]\n                upd(i[1], check(i[1]))\n                if i[1]-1>=0: \n                    upd(i[1]-1, check(i[1]-1))\n                upd(i[1]+1, check(i[1]+1))\n        return ans\n                \n        ",
    "submit_ts": 1718507133.0
}