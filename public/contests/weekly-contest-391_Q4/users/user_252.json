{
    "username": "silvertint10",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        # left, right = 0, 10 ** 9\n        # while left < right:\n        #     mid = left + (right - left) // 2\n            \n        A = []\n        B = []\n        for i, (x, y) in enumerate(points):\n            A.append((x - y, i))\n            B.append((x + y, i))\n        A.sort()\n        B.sort()\n        cand = set([A[0][1], A[-1][1], B[0][1], B[-1][1]])\n        ans = inf\n        for j in cand:\n            A = []\n            B = []\n            for i, (x, y) in enumerate(points):\n                if i == j: continue\n                A.append((x - y, i))\n                B.append((x + y, i))\n            A.sort()\n            B.sort()\n            cur = max(A[-1][0] - A[0][0], B[-1][0] - B[0][0])\n            if cur < ans:\n                ans = cur\n        return ans\n            \n            \n        "
}