{
    "username": "sepehry",
    "submission": "\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        mod = ((10 ** 9) + 7)\n\n        requirements.sort()\n\n        @functools.lru_cache(None)\n        def fact(n):\n            if n == 0:\n                return 1\n            return (n * fact(n - 1)) % mod\n\n        @functools.lru_cache(None)\n        def dpin(n, k):\n            v = 0\n            if n == 1:\n                if k == 0:\n                    return 1\n                else:\n                    return 0\n            if k == 0:\n                return 1\n            if k < 0:\n                return 0\n            for i in range(min(n, k + 1)):\n                v += dpin(n - 1, k - i)\n                v %= mod\n            return v % mod\n\n        @functools.lru_cache(None)\n        def dpout(n1, n2, k):\n            if n1 == 0 or n2 == 0:\n                if k == 0:\n                    return 1\n                else:\n                    return 0\n            if k == 0:\n                return 1\n            if k < 0:\n                return 0\n            return (dpout(n1, n2 - 1, k) + dpout(n1 - 1, n2, k - n2)) % mod\n\n        @functools.lru_cache(None)\n        def dptot(i):\n            if i == 0:\n                end, k = requirements[i]\n                return dpin(end + 1, k)\n            end2, k2 = requirements[i]\n            end1, k1 = requirements[i - 1]\n            if k2 < k1:\n                return 0\n\n            v = 0\n            for kout in range(k2 + 1):\n                kin = k2 - kout - k1\n                if kin < 0:\n                    break\n                vin = dpin(end2 - end1, kin)\n                vout = dpout(end1 + 1, end2 - end1, kout)\n                v0 = dptot(i - 1)\n                v += (((vin * vout) % mod) * v0) % mod\n\n            return v % mod\n\n        n0 = requirements[-1][0] + 1\n        sol = ((dptot(len(requirements) - 1) * math.comb(n, n0)) % mod) * fact(n - n0)\n        dpin.cache_clear()\n        dpout.cache_clear()\n        dptot.cache_clear()\n        return sol % mod\n",
    "submit_ts": "1719071323",
    "subm_id": "1296844166"
}