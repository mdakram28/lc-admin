{
    "username": "swarnava0802",
    "submission": "class Solution {\npublic:\n    using ll=long long;\n    const ll m=1e9+7;\n    const int MAX_INV = 400;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        \n        \n        unordered_map<ll,ll> mp;\n        ll ans=0;\n        for(ll i=0;i<requirements.size();i++)\n        {\n              mp[requirements[i][0]+1]=requirements[i][1];\n        }\n       \n        ll dp[n+1][401];\n        memset(dp,0,sizeof(dp));\n        dp[0][0] = 1;\n        for (ll i=1;i<n+1;i++) \n        {\n            for (int j=0;j<401;j++)\n            {\n                for (int pos=0;pos< i;pos++)\n                {\n                    int prevInv=(j-pos);\n                    if (prevInv>-1)\n                    {\n                        dp[i][j]=(dp[i][j]+dp[i - 1][prevInv])%m;\n                    }\n                }\n            }\n            if (mp.find(i)!=mp.end())\n            {\n                int targetInv=mp[i];\n                for (int j=0;j<401;j++) \n                {\n                    if (j!=targetInv) \n                    {\n                        dp[i][j]=0;\n                    }\n                }\n            }\n        }\n        for(ll i=0;i<401;i++)\n        {\n              ans=((ans+dp[n][i])%m);\n        }\n        return ans;\n    }\n    \n};",
    "submit_ts": "1719071940",
    "subm_id": "1296857543"
}