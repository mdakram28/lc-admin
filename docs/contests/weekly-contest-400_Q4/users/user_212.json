{
    "username": "FSPINDLE",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n         \n             int n  = nums.size() , ans = 1e9 ;\n            \n             vector<vector<int>>cnt(n + 1 ,vector<int>(32)) ;\n            \n             for(int i = 0 ; i < n ;i ++){\n                    for(int j = 0 ; j < 31 ; j ++){\n                              bool f = (nums[i] >> j) & 1 ;\n                              cnt[i + 1][j] += cnt[i][j] + f ;\n                    }\n             }\n            \n            \n            auto AND = [&](int L , int R){                   \n                    int ret = 0 ;\n                    for(int i = 0 ; i < 31 ; i ++){\n                              int cnt_bit = cnt[R + 1][i] - cnt[L][i] ;\n                            if(cnt_bit == R - L + 1 ) ret |= (1 << i) ;\n                    }                          \n                    return ret ;                    \n            };\n            \n            auto func1 = [&](int L) {\n                    \n                  int low  = L , high = n - 1 , ret = nums[L] ;\n                    \n                    while(low <= high){\n                             int mid = low + (high - low) / 2 ;\n                             int an = AND(L , mid) ;\n                             if(an < k ) {\n                                       ret = an ;\n                                       high = mid -  1;\n                             }\n                            else low = mid + 1 ;\n                    }\n                    return ret;\n                    \n            };\n              auto func2 = [&](int L) {\n                    \n                  int low  = L , high = n - 1, ret = nums[L] ;\n                    \n                    while(low <= high){\n                             int mid = low + (high - low) / 2 ;\n                             int an = AND(L , mid) ;\n                             if(an >= k ) {\n                                       ret = an ;\n                                       low = mid +  1;\n                             }\n                            else high = mid - 1 ;\n                    }\n                    return ret;\n                    \n            };\n            \n             for(int i = 0 ; i < n ;i ++){\n                       ans = min(ans , abs( k -  func1(i)));\n                       ans = min(ans , abs(k - func2(i)));\n             }\n            return ans;\n    }\n};",
    "submit_ts": "1717297317",
    "subm_id": "1274738064"
}