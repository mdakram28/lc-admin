{
    "username": "hrishi1563",
    "submission": "class Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        map<int, std::vector<int>> diffMap;\n        vector<int> maxValues;\n \n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int numA = nums[i];\n            int numB = nums[nums.size() - i - 1];\n            int difference = abs(numA - numB);\n\n            int maxVal = max({numA, numB, k - numA, k - numB});\n\n            diffMap[difference].push_back(maxVal);\n            maxValues.push_back(maxVal);\n        }\n\n        int minChanges = nums.size();  \n        sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& [difference, values] : diffMap) {\n            int count = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            count = count * 2 + (nums.size() / 2 - count);\n\n            for (const auto& maxVal : values) {\n                if (maxVal < difference) {\n                    count -= 2;\n                } else {\n                    count -= 1;\n                }\n            }\n\n            minChanges = min(minChanges, count);\n        }\n\n        return minChanges;\n    }\n};\n",
    "submit_ts": "1721489306",
    "subm_id": "1327449361"
}