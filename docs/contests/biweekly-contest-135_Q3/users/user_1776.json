{
    "username": "ayushmeshram",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> mpps;\n        vector<int> hi;\n\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int p = nums[i];\n            int q = nums[nums.size() - i - 1];\n            int hello = abs(p - q);\n\n            int Xtr = max({p, q, k - p, k - q});\n\n            mpps[hello].push_back(Xtr);\n            hi.push_back(Xtr);\n        }\n\n        int size = nums.size();\n        sort(hi.begin(), hi.end());\n\n        for (const auto& [hello, values] : mpps) {\n            int Telo = lower_bound(hi.begin(), hi.end(), hello) - hi.begin();\n            Telo = Telo * 2 + (nums.size() / 2 - Telo);\n\n            for (auto X : values) {\n                if (X < hello) {\n                    Telo -= 2;\n                } else {\n                    Telo -= 1;\n                }\n            }\n\n            size = min(size, Telo);\n        }\n\n        return size;\n    }\n};",
    "submit_ts": "1721489516",
    "subm_id": "1327455632"
}