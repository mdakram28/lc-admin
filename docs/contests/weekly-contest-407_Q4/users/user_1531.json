{
    "username": "agrawalh",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long[] diff = new long[n];\n        for(int i=0;i<n;i++) {\n            diff[i] = (long)(target[i]-nums[i]);\n        }\n        int sign = 1;\n        long cur = 0;\n        long ans = 0;\n        for(int i=0;i<n;i++) {\n            if (diff[i] == 0) {\n                sign = 1;\n                cur = 0;\n            } else if (diff[i] > 0) {\n                if (sign > 0) {\n                    ans += Math.max(0, diff[i]-cur);\n                    cur = diff[i];\n                } else {\n                    cur = diff[i];\n                    ans += diff[i];\n                    sign = 1;\n                }\n            } else {\n                if (sign < 0) {\n                    ans += Math.max(0, cur-diff[i]);\n                    cur = diff[i];\n                } else {\n                    cur = diff[i];\n                    ans += (-diff[i]);\n                    sign = -1;\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721533282",
    "subm_id": "1328005484"
}