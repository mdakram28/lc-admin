{
    "username": "Ivan_len",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        vector<int> z;\n        int n = s.size();\n        for (int i = 0; i < n; i++) if (s[i] == '0') z.push_back(i);\n        int m = z.size();\n        int ans = 0;\n        if (m == 0) {\n            return (n * (n + 1)) / 2;\n        }\n        for (int i = 0; i < m; i++) {\n            if (i > 0) {\n                int dif = z[i] - z[i - 1] - 1;\n                ans += (dif * (dif + 1)) / 2;\n            }\n            if (i == 0) {\n                int dif = z[i];\n                ans += (dif * (dif + 1)) / 2;\n            }\n            if (i == m - 1) {\n                int dif = n - 1 - z[i];\n                ans += (dif * (dif + 1)) / 2;\n            }\n        }\n        for (int i = 1; i <= 200; i++) {\n            for (int j = 0; j < m; j++) {\n                if (j + i > m) break;\n                int interval = z[j + i - 1] - z[j] + 1;\n                int a = (j == 0)?z[j]:z[j] - z[j - 1] - 1;\n                int b = (j + i - 1 == m - 1)?n - 1 - z[j + i - 1]:z[j + i] - z[j + i - 1] - 1;\n                // cout << j << ' ' << i << '\\n';\n                int ones = interval - i;\n                if (ones >= i * i) ans += (a + 1) * (b + 1);\n                else {\n                    int need = i * i - ones;\n                    auto sum = [&](int x, int y) {\n                        return ((x + y) * (y - x + 1)) / 2;\n                    };\n                    // cout << need << ' ' << a <<' ' << b << '\\n';\n                    if (need <= b) {\n                        if (need >= a) ans += sum(b - need + 1, b - need + 1 + a);\n                        else {\n                            ans += sum(b - need + 1, b + 1) + (b + 1) * (a - need);\n                        }\n                    }\n                    else {\n                        int start = need - b;\n                        if (start > a) continue;\n                        if (a - start <= b) ans += sum(1, a - start + 1);\n                        else {\n                            ans += sum(1, b + 1) + (b + 1) * (a - start - b);\n                        }\n                    }\n                }\n                // cout << ans << '\\n';\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722137166",
    "subm_id": "1335756040"
}