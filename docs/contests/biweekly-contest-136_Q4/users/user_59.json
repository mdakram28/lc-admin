{
    "username": "srikkanthr",
    "submission": "const int N = (int)1e5 + 5;\nint dwn[N], up[N];\n#define evee(x) (1+(!(x&1)))\n\nvector<int> g[N];\n\nvoid getdwn(int u, int par = -1) {\n    dwn[u] = 0;\n    for (auto &v : g[u]) if (v != par) {\n        getdwn(v, u);\n        dwn[u] = max(dwn[u], dwn[v] + evee(v));\n    }\n}\nvoid getup(int u, int par = -1) {\n    int mx1 = 0;\n    int sz = g[u].size();\n    for (auto &v : g[u]) if (v != par) {\n        up[v] = max(up[v], up[u] + evee(u));\n        up[v] = max(up[v], evee(u) + mx1);\n        mx1 = max(mx1, dwn[v] + evee(v));\n    }\n    mx1 = 0;\n    for (int j=sz-1;j>=0;--j) {\n        int v = g[u][j];\n        if (v != par) {\n            up[v] = max(up[v], evee(u) + mx1);\n            mx1 = max(mx1, dwn[v] + evee(v));\n        }\n    }\n    for (auto &v : g[u]) if (v != par) {\n        getup(v, u);\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        for (int i=0;i<n;++i) {\n            g[i].clear();\n            dwn[i] = up[i] = 0;\n        }\n        for (auto &vec : edges) {\n            int u = vec[0], v = vec[1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        getdwn(0, -1);\n        up[0] = 0;\n        getup(0, -1);\n        // for (int i=0;i<n;++i) cout << dwn[i] << \" \"; cout << '\\n';\n        // for (int i=0;i<n;++i) cout << up[i] << \" \"; cout << '\\n';\n        vector<int> ans(n);\n        for (int i=0;i<n;++i) ans[i] = max(up[i], dwn[i]);\n        return ans;\n    }\n};",
    "submit_ts": "1722698055",
    "subm_id": "1343168163"
}