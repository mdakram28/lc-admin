{
    "username": "PUSSYNIQQA",
    "submission": "from typing import List\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        \n        ans = 0\n        \n        for i in range(n // 2):\n            for j in range(m // 2):\n                elements = [\n                    grid[i][j],\n                    grid[n - i - 1][j],\n                    grid[i][m - j - 1],\n                    grid[n - i - 1][m - j - 1]\n                ]\n                \n                ones = sum(elements)\n                \n                ans += min(ones, 4 - ones)\n        \n        possible = 0\n        count = 0\n        \n        if n % 2 != 0:\n            for j in range(m // 2):\n                if grid[n // 2][j] != grid[n // 2][m - j - 1]:\n                    ans += 1\n                    possible += 1\n                else:\n                    if grid[n // 2][j] == 1:\n                        count += 1\n        \n        if m % 2 != 0:\n            for i in range(n // 2):\n                if grid[i][m // 2] != grid[n - i - 1][m // 2]:\n                    ans += 1\n                    possible += 1\n                else:\n                    if grid[i][m // 2] == 1:\n                        count += 1\n        \n        if n % 2 != 0 and m % 2 != 0 and grid[n // 2][m // 2] == 1:\n            ans += 1\n        \n        if possible == 0 and count % 2 != 0:\n            ans += 2\n        \n        return ans",
    "submit_ts": "1722699566",
    "subm_id": "1343215606"
}