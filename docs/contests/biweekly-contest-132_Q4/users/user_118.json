{
    "username": "anant_jain_01",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<vector<int>> dp(k+1, vector<int>(n, 0));\n        \n        vector<int> prev(n, -1), m(n, -1), peq(n, -1);\n        map<int, int> mp, mpos;\n        mp[nums[0]]++;\n        mpos[nums[0]]=0;\n        for (int i=1; i<n; i++){\n            if (nums[i]!=nums[i-1])prev[i]=i-1;\n            else prev[i]=prev[i-1];\n        }\n        dp[0][0]=1;m[0]=1;\n        for (int i=1; i<n; i++){\n            if (mp[nums[i]]!=0){\n                peq[i]=mpos[nums[i]];\n            }\n            mpos[nums[i]]=i;\n            mp[nums[i]]++;\n            dp[0][i]=mp[nums[i]];\n            m[i]=max(m[i-1], dp[0][i]);\n        }\n        // for (int i=0; i<n; i++){\n        //     cout<<prev[i]<<\" \"<<peq[i]<<endl;\n        // }\n        for (int i=1; i<=k; i++){\n            vector<int> temp(n, -1);\n            dp[i][0]=1;temp[0]=1;\n            for (int j=1; j<n; j++){\n                int p=prev[j];\n                if (peq[j]!=-1)dp[i][j] = dp[i][peq[j]]+1;\n                if (p==-1)dp[i][j]=max(dp[i][j], j+1);\n                else dp[i][j] = max(dp[i][j], m[p]+j-p);\n                temp[j]=max(temp[j-1], dp[i][j]);\n            }\n            for (int j=0; j<n; j++)m[j]=temp[j];\n            temp.clear();\n        }\n        // for (int i=0; i<=k; i++){\n        //     for (int j=0; j<n; j++){\n        //         cout<<dp[i][j]<<' ';\n        //     }\n        //     cout<<endl;\n        // }\n        int ans=0;\n        for (int i=0; i<n; i++)ans=max(ans, dp[k][i]);\n        return ans;\n    }\n};",
    "submit_ts": 1717860150.0
}