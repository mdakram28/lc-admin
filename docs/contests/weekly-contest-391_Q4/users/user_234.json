{
    "username": "wddd",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int[][] sums = new int[points.length][2];\n        int[][] diffs = new int[points.length][2];\n\n        for (int i = 0; i < points.length; i++) {\n            sums[i] = new int[] {i, points[i][0] + points[i][1]};\n            diffs[i] = new int[] {i, points[i][0] - points[i][1]};\n        }\n\n        Arrays.sort(sums, Comparator.comparingInt(i -> i[1]));\n        Arrays.sort(diffs, Comparator.comparingInt(i -> i[1]));\n        \n        if (sums[sums.length - 1][1] - sums[0][1] >= diffs[diffs.length - 1][1] - diffs[0][1]) {\n            // remove sums[sums.length - 1][0] or sums[0][0]\n            return Math.min(remove(sums, diffs, sums[sums.length - 1][0]), remove(sums, diffs, sums[0][0]));\n        } else {\n            // remove diffs[sums.length - 1][0] or diffs[0][0]\n            return Math.min(remove(sums, diffs, diffs[diffs.length - 1][0]), remove(sums, diffs, diffs[0][0]));\n        }\n    }\n\n    private int remove(int[][] sums, int[][] diffs, int removed) {\n        int sumMax = 0;\n        int sumMin = 0;\n        int diffMax = 0;\n        int diffMin = 0;\n        \n        for (int i = sums.length - 1; i >= 0; i--) {\n            if (sums[i][0] == removed) {\n                continue;\n            } else {\n                sumMax = sums[i][1];\n                break;\n            }\n        }\n\n        for (int i = diffs.length - 1; i >= 0; i--) {\n            if (diffs[i][0] == removed) {\n                continue;\n            } else {\n                diffMax = diffs[i][1];\n                break;\n            }\n        }\n\n        for (int i = 0; i < sums.length; i++) {\n            if (sums[i][0] == removed) {\n                continue;\n            } else {\n                sumMin = sums[i][1];\n                break;\n            }\n        }\n\n        for (int i = 0; i < diffs.length; i++) {\n            if (diffs[i][0] == removed) {\n                continue;\n            } else {\n                diffMin = diffs[i][1];\n                break;\n            }\n        }\n        \n        return Math.max(sumMax - sumMin, diffMax - diffMin);\n    }\n}"
}