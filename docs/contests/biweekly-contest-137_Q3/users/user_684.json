{
    "username": "Sumit Dhandale",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        vector<vector<pair<int, int>>> maxValues(m, vector<pair<int, int>>(3, {INT_MIN, -1}));\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                int val = board[i][j];\n                for (int k = 0; k < 3; ++k) {\n                    if (val > maxValues[i][k].first) {\n                        for (int l = 2; l > k; --l) {\n                            maxValues[i][l] = maxValues[i][l - 1];\n                        }\n                        maxValues[i][k] = {val, j};\n                        break;\n                    }\n                }\n            }\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = i + 1; j < m; ++j) {\n                for (int k = j + 1; k < m; ++k) {\n                    for (int a = 0; a < 3; ++a) {\n                        for (int b = 0; b < 3; ++b) {\n                            if (maxValues[i][a].second == maxValues[j][b].second) continue;\n                            for (int c = 0; c < 3; ++c) {\n                                if (maxValues[i][a].second == maxValues[k][c].second ||\n                                    maxValues[j][b].second == maxValues[k][c].second) continue;\n\n                                long long sum = static_cast<long long>(maxValues[i][a].first) +\n                                                static_cast<long long>(maxValues[j][b].first) +\n                                                static_cast<long long>(maxValues[k][c].first);\n                                maxSum = max(maxSum, sum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723907016",
    "subm_id": "1359085215"
}