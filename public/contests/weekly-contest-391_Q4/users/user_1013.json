{
    "username": "bluesky999",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int minimumDistance(int[][] points) {\n        int ans = Integer.MAX_VALUE;\n        TreeMap<Integer, Integer> x_plus_y = new TreeMap<>();\n        TreeMap<Integer, Integer> x_sub_y = new TreeMap<>();\n        for (int[] p : points) {\n            int k = p[0] + p[1];\n            x_plus_y.put(k, x_plus_y.getOrDefault(k, 0) + 1);\n            k = p[0] - p[1];\n            x_sub_y.put(k, x_sub_y.getOrDefault(k, 0) + 1);\n        }\n        tr(x_plus_y);\n        tr(x_sub_y);\n        \n        for (int[] p : points) {\n            int k = p[0] + p[1];\n            dec(x_plus_y, k);\n            k = p[0] - p[1];\n            dec(x_sub_y, k);\n            ans = Math.min(ans, Math.max(x_plus_y.lastKey() - x_plus_y.firstKey(), x_sub_y.lastKey() - x_sub_y.firstKey()));\n            k = p[0] + p[1];\n            x_plus_y.put(k, x_plus_y.getOrDefault(k, 0) + 1);\n            k = p[0] - p[1];\n            x_sub_y.put(k, x_sub_y.getOrDefault(k, 0) + 1);\n        }\n\n        return ans;\n    }\n\n    private static void dec(TreeMap<Integer, Integer> x_plus_y, int k) {\n        if (x_plus_y.get(k) == 1) {\n            x_plus_y.remove(k);\n        } else {\n            x_plus_y.put(k, x_plus_y.getOrDefault(k, 0) - 1);\n        }\n    }\n\n    static void tr(Object... o) {\n        // System.out.println(Arrays.deepToString(o));\n    }\n\n}"
}