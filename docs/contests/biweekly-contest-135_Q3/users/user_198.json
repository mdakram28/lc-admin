{
    "username": "freetime430",
    "submission": "from collections import defaultdict\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        dic = defaultdict(int)\n        start, end = 0, len(nums)-1\n        while start < end:\n            dic[abs(nums[start]-nums[end])] += 1\n            start += 1\n            end -= 1\n        arr = sorted(dic.items(), key=lambda x: (x[1], -x[0]), reverse=True)\n        res = len(nums)\n        total = len(nums)//2\n        for delta, cnt in arr:\n            if total-cnt >= res:\n                break\n            start, end = 0, len(nums)-1\n            tmp = 0\n            while start < end:\n                if abs(nums[end]-nums[start]) != delta:\n                    if k-min(nums[start],nums[end]) >= delta or max(nums[start],nums[end]) >= delta:\n                        tmp += 1\n                    else:\n                        tmp += 2\n                start += 1\n                end -= 1\n            res = min(res, tmp)\n        return res",
    "submit_ts": "1721487633",
    "subm_id": "548310871"
}