{
    "username": "sodacorsair",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        Bits bits = new Bits(n);\n        List<Integer> ans = new ArrayList();\n        \n        for (int i = 1; i < n - 1; i++)\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1])\n                bits.update(i + 1, 1);\n        \n        for (int[] q : queries)\n        {\n            if (q[0] == 1)\n            {\n                ans.add(bits.query(q[1] + 1, q[2]));\n            }\n            else\n            {\n                if (q[1] > 0 && q[1] < n - 1)\n                {\n                    boolean before = nums[q[1]] > nums[q[1] - 1] && nums[q[1]] > nums[q[1] + 1];\n                    boolean after = q[2] > nums[q[1] - 1] && q[2] > nums[q[1] + 1];\n                    if (!before && after) bits.update(q[1] + 1, 1);\n                    else if (before && !after) bits.update(q[1] + 1, -1);\n                }\n                if (q[1] > 1)\n                {\n                    boolean before = nums[q[1] - 1] > nums[q[1] - 2] && nums[q[1] - 1] > nums[q[1]];\n                    boolean after = nums[q[1] - 1] > nums[q[1] - 2] && nums[q[1] - 1] > q[2];\n                    if (!before && after) bits.update(q[1], 1);\n                    else if (before && !after) bits.update(q[1], -1);\n                }\n                if (q[1] < n - 2)\n                {\n                    boolean before = nums[q[1] + 1] > nums[q[1]] && nums[q[1] + 1] > nums[q[1] + 2];\n                    boolean after = nums[q[1] + 1] > q[2] && nums[q[1] + 1] > nums[q[1] + 2];\n                    if (!before && after) bits.update(q[1] + 2, 1);\n                    else if (before && !after) bits.update(q[1] + 2, -1);\n                }\n                nums[q[1]] = q[2];\n            }\n        }\n        \n        return ans;\n    }\n    \n    class Bits\n    {\n        private int[] arr;\n        \n        public Bits(int n)\n        {\n            arr = new int[n + 1];\n        }\n        \n        public void update(int x, int val)\n        {\n            for (int i = x; i < arr.length; i += lowBit(i))\n                arr[i] += val;\n        }\n        \n        public int query(int x)\n        {\n            int ans = 0;\n            for (int i = x; i > 0; i -= lowBit(i))\n                ans += arr[i];\n            return ans;\n        }\n        \n        public int query(int x, int y)\n        {\n            if (y < x) return 0;\n            return query(y) - query(x);\n        }\n        \n        public void print()\n        {\n            for (int i = 0; i < arr.length; i++)\n                System.out.print(arr[i] + \", \");\n            System.out.println(\"\");\n        }\n        \n        private int lowBit(int x)\n        {\n            return x & (-x);\n        }\n    }\n}",
    "submit_ts": 1718507919.0
}