{
    "username": "user9539",
    "submission": "class Solution {\n    fun countOfPairs(nums: IntArray): Int {\n        val max = nums.max()\n        val dp = Array(nums.size) {\n            Array(max+1) {\n                -1 to 0L\n            }\n        }\n        \n        var t = 1L\n        for (n1 in 0..nums[0]) {\n            val n2 = nums[0]-n1\n            dp[0][n1] = n2 to t\n            t++\n        }\n\n\n        val mod = (1e9+7).toLong()\n        for (i in 1 until nums.size) {\n            val n = nums[i]\n            val recentN = nums[i-1]\n            var total = 0L\n            for (n1 in 0..n) {\n                val n2 = n-n1\n                val topRecentN1 = minOf(n1, recentN)\n                val topRecentN2 = recentN - n2\n                if (topRecentN2 < 0) continue\n                val top = minOf(topRecentN1, topRecentN2)\n                total = (total + dp[i-1][top].second) % mod\n                dp[i][n1] = n2 to total\n            }\n        }\n       \n        var ans = 0L\n        for (n1 in dp[0].indices) {\n            val (n2, total) = dp[nums.size-1][n1]\n            if (total > 0) ans = total\n        }\n        return ans.toInt()\n    }\n}\n/*\n[[(2, 1), (1, 1), (0, 1), (-1, 0)],\n [(3, 0), (2, 1), (1, 3), (0, 7)],\n  [(2, 0), (1, 1), (0, 5), (-1, 0)]]\n\n */",
    "submit_ts": "1723347869",
    "subm_id": "1351607112"
}