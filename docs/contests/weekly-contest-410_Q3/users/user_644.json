{
    "username": "ajith77",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9 + 7;\n    int dp[2001][51][51];\n\n    int countPairs(int i, int prev1, int prev2, const vector<int>& nums) {\n        if (i == nums.size()) return 1;  // Base case\n\n        if (dp[i][prev1][prev2] != -1) return dp[i][prev1][prev2];  // Memoized result\n\n        int total = 0;\n        for (int j = prev1; j <= nums[i]; j++) {  // Ensure arr1[i] >= prev1\n            int arr2 = nums[i] - j;\n            if (arr2 >= 0 && arr2 <= prev2) {  // Ensure arr2[i] <= prev2\n                total = (total + countPairs(i + 1, j, arr2, nums)) % MOD;\n            }\n        }\n\n        return dp[i][prev1][prev2] = total;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1, sizeof(dp));\n        return countPairs(0, 0, 50, nums);\n    }\n};\n",
    "submit_ts": "1723344173",
    "subm_id": "1351528169"
}