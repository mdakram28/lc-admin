{
    "username": "apurv702",
    "submission": "class SGTree {\npublic:\n    vector<int> seg;\n    int n;\n    SGTree(int n) {\n        this->n = n;\n        seg.resize(4 * n + 1);\n    }\n\n    void build(int ind, int low, int high, vector<int> &arr) {\n        if (low == high) {\n            seg[ind] = arr[low];\n            return;\n        }\n\n        int mid = (low + high) / 2;\n        build(2 * ind + 1, low, mid, arr);\n        build(2 * ind + 2, mid + 1, high, arr);\n        seg[ind] = (seg[2 * ind + 1]& seg[2 * ind + 2]);\n    }\n\n    int query(int L, int R, int i, int l, int r) {\n    if(r < L || R < l) return INT_MAX;\n    if(L <= l && r <= R) return seg[i];\n    int m = (l + r)/2;\n    return (query(L, R, 2*i+1, l, m) & query(L, R, 2*i+2, m+1, r));\n  }\n  int query(int L, int R) {\n    return query(L, R, 0, 0, n-1);\n  }\n    void update(int ind, int low, int high, int i, int val) {\n        if (low == high) {\n            seg[ind] = val;\n            return;\n        }\n\n        int mid = (low + high) >> 1;\n        if (i <= mid) update(2 * ind + 1, low, mid, i, val);\n        else update(2 * ind + 2, mid + 1, high, i, val);\n        seg[ind] = (seg[2 * ind + 1]+seg[2 * ind + 2]);\n    }\n};\nclass Solution {\n    public:\n      #define ll long long\n      long long countSubarrays(vector<int>& a, int k) {\n        \n        ll as = 0;\n    \n        int n = a.size();\n    \n        SGTree sg(n);\n        sg.build(0,0,n-1,a);\n    \n        for(int i = 0; i < n; i++) \n        {\n    \n          ll p = -1, q = -1;\n    \n          ll l = i, r = n-1;\n    \n          while(l <= r) \n          {\n            int m = (l + r)/2;\n    \n            int x = sg.query(i, m);\n    \n            if(x < k) r = m - 1;\n            else if(x > k) l = m + 1;\n            else {\n              p = m;\n              r = m - 1;\n            }\n    \n          }\n    \n          l = i, r = n-1;\n          while(l <= r) {\n            int m = (l + r)/2;\n    \n            int x = sg.query(i, m);\n    \n            if(x < k) r = m - 1;\n            else if(x > k) l = m + 1;\n            else {\n              q = m;\n              l = m + 1;\n            }\n          }\n    \n          if(p != -1) as += q - p + 1;\n        }\n    \n        return as;\n      }\n    };",
    "submit_ts": "1720279530",
    "subm_id": "1311754893"
}