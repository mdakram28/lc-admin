{
    "username": "tarunpatel1860",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long count = 0;\n        int n = nums.size();\n        unordered_map<int, int> andMap;\n\n        // Iterate through the array\n        for (int i = 0; i < n; ++i) {\n            unordered_map<int, int> newAndMap;\n            for (auto &entry : andMap) {\n                int newAnd = entry.first & nums[i];\n                newAndMap[newAnd] += entry.second;\n            }\n            newAndMap[nums[i]]++;\n            \n            // Update the original map\n            andMap = newAndMap;\n\n            // Increment count if the bitwise AND equals k\n            if (andMap.find(k) != andMap.end()) {\n                count += andMap[k];\n            }\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720280523",
    "subm_id": "1311792546"
}