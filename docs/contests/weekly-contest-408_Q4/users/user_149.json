{
    "username": "Deeppandya02",
    "submission": "class Solution {\npublic:\n\n    bool pos(vector<int>&v1, vector<int>&v2)\n    {\n        long long x = v1[0] - v2[0];\n        long long y = v1[1] - v2[1];\n        long long dis = v1[2] + v2[2];\n        if(x*x + y*y <= dis*dis)return true;\n        return false;\n    }\n\n    bool bfs(vector<vector<int>>&adj, set<int> st, set<int> end)\n    {\n        queue<int> q;\n        vector<int> vis(adj.size(), 0);\n        for(auto x: st)\n        {\n            q.push(x);\n            vis[x] = 1;\n        }\n        while(q.size())\n        {\n            int f = q.front();\n            q.pop();\n            if(end.count(f) > 0)\n            {\n                return true;\n            }\n            for(auto x: adj[f])\n            {\n                if(!vis[x])\n                {\n                    vis[x] = 1;\n                    q.push(x);\n                }\n            }\n        }\n        return false;\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& v) {\n        int n = v.size();\n        vector<vector<int>> adj(n);\n        set<int> l, r, u, d;\n        for(int i = 0; i < n; i++)\n        {\n            if(v[i][0] + v[i][2] >= X)r.insert(i);\n            if(v[i][0] - v[i][2] <= 0)l.insert(i);\n            if(v[i][1] + v[i][2] >= Y)u.insert(i);\n            if(v[i][1] - v[i][2] <= 0)d.insert(i);\n            for(int j = i+1; j < n; j++)\n            {\n                if(pos(v[i], v[j]))\n                {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        bool b1 = bfs(adj, r, l);\n        bool b2 = bfs(adj, r, u);\n        bool b3 = bfs(adj, d, l);\n        bool b4 = bfs(adj, d, u);\n        if(b1 || b2 || b3 || b4)return false;\n        return true;\n    }\n};",
    "submit_ts": "1722138640",
    "subm_id": "1335795937"
}