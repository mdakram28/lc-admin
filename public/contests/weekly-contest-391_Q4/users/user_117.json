{
    "username": "dd2307",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        plus = [(x+y, i) for i, (x, y) in enumerate(points)]\n        minus = [(x-y, i) for i, (x, y) in enumerate(points)]\n        plus.sort()\n        minus.sort()\n        M1 = plus[-1][0]-plus[0][0]\n        M2 = minus[-1][0]-minus[0][0]\n        ans = 10 ** 9\n        if M1 >= M2:\n            # remove last\n            _, i1 = plus[-1]\n            if minus[0][1] == i1:\n                ans = min(ans, max(minus[-1][0]-minus[1][0], plus[-2][0]-plus[0][0]))\n            elif minus[-1][1] == i1:\n                ans = min(ans, max(minus[-2][0]-minus[0][0], plus[-2][0]-plus[0][0]))\n            else:\n                ans = min(ans, max(M2, plus[-2][0]-plus[0][0]))\n\n            # remove first\n            _, i1 = plus[0]\n            if minus[0][1] == i1:\n                ans = min(ans, max(minus[-1][0]-minus[1][0], plus[-1][0]-plus[1][0]))\n            elif minus[-1][1] == i1:\n                ans = min(ans, max(minus[-2][0]-minus[0][0], plus[-1][0]-plus[1][0]))\n            else:\n                ans = min(ans, max(M2, plus[-1][0]-plus[1][0]))\n        else:\n            # remove last\n            _, i1 = minus[-1]\n            if plus[0][1] == i1:\n                ans = min(ans, max(plus[-1][0]-plus[1][0], minus[-2][0]-minus[0][0]))\n            elif plus[-1][1] == i1:\n                ans = min(ans, max(plus[-2][0]-plus[0][0], minus[-2][0]-minus[0][0]))\n            else:\n                ans = min(ans, max(M1, minus[-2][0]-minus[0][0]))\n\n            # remove first\n            _, i1 = minus[0]\n            if plus[0][1] == i1:\n                ans = min(ans, max(plus[-1][0]-plus[1][0], minus[-1][0]-minus[1][0]))\n            elif plus[-1][1] == i1:\n                ans = min(ans, max(plus[-2][0]-plus[0][0], minus[-1][0]-minus[1][0]))\n            else:\n                ans = min(ans, max(M1, minus[-1][0]-minus[1][0]))\n        return ans\n"
}