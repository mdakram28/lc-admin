{
    "username": "Abhi242",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n=colors.size();\n        int ans=0;\n        // if(colors[n-1]!=colors[0] && colors[0]!=colors[1]){\n        //     ans++;\n        // }\n        // if(colors[n-1]!=colors[n-2] && colors[0]!=colors[n-1]){\n        //     ans++;\n        // }\n        int point=0;\n        int count=1;\n        vector<int> use(n,0);\n        for(int i=0;point<=2*n;i++){\n            if(colors[(i-1+n)%n]!=colors[i%n] && colors[i%n]!=colors[(i+1)%n]){\n                count++;\n            }else{\n                if(count==1){\n                    use[i%n]=count;\n                }else{\n                    use[i%n]=(count+1);\n                }\n                count=1;\n                point++;\n                continue;\n            }\n            use[i%n]=count;\n            point++;\n        }\n        for(int i=0;i<n;i++){\n            //cout<<use[i]<<\" \";\n            if(use[i]>=k){\n                ans++;\n            }\n        }\n        //cout<<endl;\n        // if(colors[n-1]!=colors[n-2] && colors[0]!=colors[n-1]){\n        //     count++;\n        // }\n        // use[n-1]=count;\n        // if(colors[n-1]!=colors[0] && colors[0]!=colors[1]){\n        //     use[i]=\n        // }\n        return ans;\n    }\n};",
    "submit_ts": "1720278434",
    "subm_id": "1311708965"
}