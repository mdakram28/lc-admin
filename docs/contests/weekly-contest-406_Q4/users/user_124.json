{
    "username": "USYDLDH",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, A: List[int], B: List[int]) -> int:\n        # mp = defaultdict(int)\n        # for a in A:\n        #     mp[a].append(0)\n        # for b in B:\n        #     mp[b].append(1)\n        \n        # res = 0\n        # for val in sorted(list(mp.keys())):\n        #     a, b = mp[val].count(0), mp[val].count(1)\n\n        # A.sort()\n        # B.sort()\n        # res = 0\n\n        # ia, ib = 0, 0\n        # while ia < len(A) and ib < len(B):\n        #     t1 = ia * n\n        #     t2 = \n\n        nums = []\n        for a in A:\n            nums.append((a, 1))\n        for b in B:\n            nums.append((b, 0))\n        \n        nums.sort(reverse = True)\n\n        res = 0\n        a, b = 1, 1\n        for num, state in nums:\n            if state == 0:\n                res += num * b\n                a += 1\n            else:\n                res += num * a\n                b += 1\n\n        return res \n\n        ",
    "submit_ts": "1720925060",
    "subm_id": "1320241348"
}