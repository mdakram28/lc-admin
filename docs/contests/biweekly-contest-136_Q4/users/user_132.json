{
    "username": "pipixia-9527",
    "submission": "class Solution {\n    Map<Integer, List<Integer>> tree = new HashMap<>();\n    int[] f;\n    int[] ans;\n    public int[] timeTaken(int[][] edges) {\n        int m = edges.length;\n        int n = m + 1;\n        f = new int[n];\n        ans = new int[n];\n        for(int[] e : edges) {\n            tree.computeIfAbsent(e[0], key->new ArrayList<>()).add(e[1]);\n            tree.computeIfAbsent(e[1], key -> new ArrayList<>()).add(e[0]);\n        }\n        dfs(-1, 0);\n        dp(-1, 0, 0);\n        return ans;\n    }\n    \n    private void dfs(int p, int u) {\n        List<Integer> next = tree.get(u);\n        int max = 0;\n        if(next != null) {\n            for(int v : next) {\n                if(v == p )continue;\n                dfs(u, v);\n                max = Math.max(max, (v % 2== 0 ? f[v] + 2 : f[v] + 1));\n            }\n        }\n        f[u] = max;\n    }\n    private void dp(int p, int u, int x) {\n        List<Integer> next = tree.get(u);\n        int max1 = 0, max2 = 0;\n        ans[u] = x;\n        if(next != null) {\n            for(int v : next) {\n                if(v == p )continue;\n                int d =  (v % 2== 0 ? f[v] + 2 : f[v] + 1);\n                if(d >= max1) {\n                    max2 = max1;\n                    max1 = d;\n                } else if(d >= max2) {\n                    max2 = d;\n                }\n            }\n            ans[u] = Math.max(ans[u], max1);\n            // System.out.println(p +\" \"+u +\" \" + max1 +\" \" + max2 + \" \" + x);\n             for(int v : next) {\n                if(v == p)continue;\n                int d =  (v % 2== 0 ? f[v] + 2 : f[v] + 1);\n                 int t = (u % 2 == 0 ? 2 : 1);\n                if(d < max1) {\n                    dp(u, v, Math.max(max1, x) + t);\n                } else {\n                    dp(u, v, Math.max(max2, x) + t);\n                }\n               \n            }\n        }\n        \n    }\n}",
    "submit_ts": "1722698649",
    "subm_id": "552271823"
}