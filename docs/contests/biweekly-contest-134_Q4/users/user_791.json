{
    "username": "ashishsutar1210",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        // vector<vector<int>>pref(n,vector<int>(31,n+1));\n        long long ans = 0;\n        // for(int i=0;i<n;++i)\n        // {\n        //     for(int j=0;j<31;++j)\n        //     {\n        //         if(nums[i]&(1<<j))\n        //         {\n        //         if(i)\n        //         {\n        //             pref[i][j] = min(pref[i-1][j],i);\n        //         }\n        //         else\n        //         {\n        //             pref[i][j] = i;\n        //         }}\n        //     }\n        //     int idx = n+1;\n        //     for(int j=0;j<31;++j)\n        //     {\n        //         if(k&(1<<j))\n        //         {\n        //             idx = min(idx,pref[i][j]);\n        //         }\n        //     }\n        //     cout<<i<<\" \"<<idx<<endl;\n        //     ans += max(0,i-idx+1);\n        // }\n        map<int,long long>mp;\n        for(int i=0;i<n;++i)\n        {\n            map<int,long long>mp2;\n            for(auto it:mp)\n            {\n                mp2[(it.first&nums[i])]+=it.second;\n            }\n            ++mp2[nums[i]];\n            mp = mp2;\n            if(mp.find(k)!=mp.end())\n            {\n                ans += mp[k];\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278620",
    "subm_id": "1311717092"
}