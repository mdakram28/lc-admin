{
    "username": "illicit_kashews",
    "submission": "#include <bits/stdc++.h>\n#define ka long long int\nusing namespace std;\nclass Solution {\nprivate:\n    static const int MOD = 1'000'000'007;\n    static const int K = 400;\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& arr) {\n        unordered_map<int, int> mp;\n        for (const auto& it : arr) {\n            mp[it[0] + 1] = it[1];\n        }\n        vector<vector<ka>> p(n + 1, vector<ka>(K + 1, 0));\n        p[0][0] = 1;\n        ka res = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int inv = 0; inv <= K; inv++) {\n                for (int newp = 0; newp < i; ++newp) {\n                    int prev = inv - newp;\n                    if (prev >= 0) {\n                        p[i][inv] = (p[i][inv] + p[i - 1][prev]) % MOD;\n                    }\n                }\n            }\n            if (mp.find(i) != mp.end()) {\n                int tar = mp[i];\n                for (int inv = 0; inv <= K; inv++) {\n                    if (inv != tar) {\n                        p[i][inv] = 0;\n                    }\n                }\n            }\n        }\n        for (ka cnt : p[n]) {\n            res = (cnt+res) % MOD;\n        }\n        return static_cast<int>(res);\n    }\n};\n",
    "submit_ts": "1719070394",
    "subm_id": "1296821928"
}