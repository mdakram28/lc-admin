{
    "username": "sunil1906",
    "submission": "const int N = 26, inf = 1e9;\nchar base = 'a';\n\nstruct TrieNode{\n    int cost;\n    TrieNode* next[N];\n    TrieNode(){\n        this -> cost = inf;\n        for(int i = 0; i < N ; i++)    this -> next[i] = nullptr;\n    }\n};\n\nclass Solution {\npublic:\n    TrieNode* root;\n    vector<int> cost;\n\n    void insert(string &word, int &cost) {\n        TrieNode *curr = root;\n        int i, n = word.size();\n        for(i=0;i<n;i++){\n            if(curr -> next[word[i] - base] == nullptr)  curr -> next[word[i] - base] = new TrieNode();\n            curr = curr -> next[word[i] - base];\n        }\n        curr -> cost = min(curr -> cost, cost);\n    }\n    \n    int search(string word) {\n        TrieNode *curr = root;\n        int i, n = word.size();\n        for(i=0;i<n;i++){\n            if(curr -> next[word[i] - base] == nullptr)  return false;\n            curr = curr -> next[word[i] - base];\n        }\n        return curr -> cost;\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        root = new TrieNode();\n        int i, j, n = words.size(), ans, tn = target.size();\n        for(i=0;i<n;i++) insert(words[i], costs[i]);\n        vector<int> cost(tn+1, inf);\n        cost[0] = 0;\n        for(i=0;i<tn;i++){\n            TrieNode *curr = root;\n            for(j=i;j<tn;j++){\n                if(curr -> next[target[j] - base] == nullptr)   break;\n                curr = curr -> next[target[j] - base];\n                cost[j+1] = min(cost[j+1], cost[i] + curr -> cost);\n            }\n        }\n        \n        return cost[tn] == inf ? -1 : cost[tn];\n    }\n};",
    "submit_ts": "1720322546",
    "subm_id": "1312352810"
}