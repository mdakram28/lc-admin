{
    "username": "kind-agnesipe9",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        int[][] dp=new int[nums.length][3];\n        HashMap<Integer,Integer> hm=new HashMap<>();\n        if(f(k,nums[0])){\n            hm.put(nums[0],0);\n        }else {\n            hm.put(Integer.MAX_VALUE,-1);\n        }\n        dp[0][0]=nums[0]==k?1:0;\n        dp[0][1]=f(k,nums[0])?nums[0]:Integer.MAX_VALUE;\n        dp[0][2]=f(k,nums[0])?1:0;\n        long cnt=dp[0][0];\n        for (int i = 1; i < nums.length; i++) {\n            if(!f(k,nums[i])){\n                dp[i][0]=0;\n                dp[i][1]=Integer.MAX_VALUE;\n                dp[i][2]=0;\n                hm=new HashMap<>();\n                hm.put(Integer.MAX_VALUE,-1);\n            } else{\n                if((nums[i]&dp[i-1][1])==k){\n                    if(k==nums[i]){\n                        dp[i][0]=1+dp[i-1][2];\n                        hm=new HashMap<>();\n                        hm.put(k,i);\n                    }else {\n                        HashMap<Integer,Integer> hm1=new HashMap<>();\n                        hm1.put(nums[i],i);\n                        int max=-1;\n                        for (Map.Entry<Integer, Integer> entry : hm.entrySet()) {\n                            if((entry.getKey()&nums[i])==k){\n                                max=Integer.max(max,entry.getValue());\n                            }\n                            hm1.merge(entry.getKey()&nums[i],entry.getValue(),Integer::max);\n                        }\n                        dp[i][0]=dp[max][2];\n                        hm=hm1;\n                    }\n                    dp[i][1]=k;\n                    dp[i][2]=dp[i-1][2]+1;\n                }else {\n                    dp[i][0]=0;\n                    dp[i][1]=nums[i]&dp[i-1][1];\n                    dp[i][2]=dp[i-1][2]+1;\n                    HashMap<Integer,Integer> hm1=new HashMap<>();\n                    hm1.put(nums[i],i);\n                    for (Map.Entry<Integer, Integer> entry : hm.entrySet()) {\n                        hm1.merge(entry.getKey()&nums[i],entry.getValue(),Integer::max);\n                    }\n                    hm=hm1;\n                }\n            }\n            cnt+=dp[i][0];\n        }\n        return cnt;\n    }\n    public boolean f(int k,int num){\n        if((num&k)==k){\n            return true;\n        }\n        return false;\n    }\n}",
    "submit_ts": "1720280700",
    "subm_id": "544572980"
}