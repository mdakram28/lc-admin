{
    "username": "fmo012",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        # make the original array to be diff\n        n = len(nums)\n        \n        diff_nums = [nums[0]]\n        diff_target = [target[0]]\n        \n        for i in range(n-1):\n            diff_nums.append(nums[i+1] - nums[i])\n            diff_target.append(target[i+1] - target[i])\n            \n        # count the difference of two diff\n        \n        # positve change means the number of increment that make it target\n        pos_needed = 0\n        neg_needed = 0\n        \n        for i in range(n):\n            if diff_nums[i] > diff_target[i]:\n                neg_needed += diff_nums[i] - diff_target[i]\n            else:\n                pos_needed += diff_target[i] - diff_nums[i]\n                \n        return max(neg_needed, pos_needed)",
    "submit_ts": "1721532746",
    "subm_id": "1327993060"
}