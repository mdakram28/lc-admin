{
    "username": "ivan-2727",
    "submission": "const int lim = 1.1e5;\n\nclass segtree {\n    int n;\n    vector<int> t, a;\npublic:\n    segtree(int _n) {\n        n = _n; \n        t.resize(2*n);\n        a.resize(n);\n    }\n    int get_range(int l, int r) {   \n        r++;\n        int res = -1e9;\n        for (l += n, r += n; l < r; l /= 2, r /= 2) {\n            if (l&1) res = max(res, t[l++]);\n            if (r&1) res = max(res, t[--r]);\n        }\n        return res;\n    }\n    void update(int pos, int val) {\n        a[pos] = val;\n        for (t[pos += n] = a[pos]; pos > 1; pos /= 2) t[pos/2] = max(t[pos], t[pos^1]);\n    }\n};\n\nclass tracker {\nprivate:\n    map<int,int> ivl;\n    segtree st = segtree(lim); \npublic:\n    tracker() {\n        ivl[0] = lim-1;\n        st.update(0, lim); \n    }\n    void put(int x) {\n        auto i = prev(ivl.upper_bound(x));\n        if (i->first != x && i->second != x) {\n            int l = i->first;\n            int r = i->second;\n            ivl.erase(i);\n            ivl[l] = x;\n            ivl[x] = r;\n            st.update(l, x - l);\n            st.update(x, r - x);\n        }\n    }\n    bool get(int x, int sz) {\n        if (x < sz) {\n            return false; \n        }\n        return st.get_range(0, x - sz) >= sz;\n    }\n};\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        auto t = tracker();\n        vector<bool> ans; \n        for (auto& qu : queries) {\n            if (qu[0] == 1) {\n                t.put(qu[1]);\n            } else {\n                ans.push_back(t.get(qu[1], qu[2]));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716651211.0
}