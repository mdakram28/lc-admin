{
    "username": "the_GOAT13",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int>shortestDistanceAfterQueries (int a, vector<vector<int>>& b) {\n        vector<int> c = initDist(a);\n        set<int> d = initSet(a);\n\n        vector<int> e;\n        for (const auto& f : b) {\n            e.push_back(processQuery(f[0], f[1], d));\n        }\n\n        return e;\n    }\n\nprivate:\n    vector<int> initDist(int x) {\n        vector<int> y(x, 0);\n        for (int z = 1; z < x; ++z) {\n            y[z] = y[z - 1] + 1;\n        }\n        return y;\n    }\n\n    set<int> initSet(int x) {\n        set<int> w;\n        for (int z = 0; z < x; ++z) {\n            w.insert(z);\n        }\n        return w;\n    }\n\n    int processQuery(int g, int h, set<int>& i) {\n        removeRange(g + 1, h, i);\n        return countRemaining(i);\n    }\n\n    void removeRange(int j, int k, set<int>& l) {\n        auto n = l.lower_bound(k);\n        auto m = l.lower_bound(j);\n     \n        l.erase(m, n);\n    }\n\n    int countRemaining(const set<int>& o) {\n        return o.size() - 1;\n    }\n};\n",
    "submit_ts": "1722743559",
    "subm_id": "1343794675"
}