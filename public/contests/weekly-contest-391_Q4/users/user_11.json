{
    "username": "fmota",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        const int inf = 1<<30;\n        vector<int> big_pref(n, -inf), big_suff(n, -inf);\n        vector<vector<int>> at_pref, at_suff;\n        vector<int> best(4, -inf);\n        for(int i = 0; i < n; i++){\n            if(i) big_pref[i] = big_pref[i - 1];\n            for(int j = 0; j < 4; j++){\n                int sx = (j&1) ? -1 : 1, sy = (j & 2) ? -1 : 1;\n                int val = sx * p[i][0] + sy * p[i][1];\n                big_pref[i] = max(big_pref[i], val + best[j ^ 3]);\n            }\n            for(int j = 0; j < 4; j++){\n                int sx = (j&1) ? -1 : 1, sy = (j & 2) ? -1 : 1;\n                int val = sx * p[i][0] + sy * p[i][1];\n                best[j] = max(best[j], val);\n            }\n            at_pref.push_back(best);\n        }\n        fill(best.begin(), best.end(), -inf);\n        for(int i = n - 1; i >= 0; i--){\n            if(i + 1 < n) big_suff[i] = big_suff[i + 1];\n            for(int j = 0; j < 4; j++){\n                int sx = (j&1) ? -1 : 1, sy = (j & 2) ? -1 : 1;\n                int val = sx * p[i][0] + sy * p[i][1];\n                big_suff[i] = max(big_suff[i], val + best[j ^ 3]);\n            }\n            for(int j = 0; j < 4; j++){\n                int sx = (j&1) ? -1 : 1, sy = (j & 2) ? -1 : 1;\n                int val = sx * p[i][0] + sy * p[i][1];\n                best[j] = max(best[j], val);\n            }\n            at_suff.push_back(best);\n        }\n        reverse(at_suff.begin(), at_suff.end());\n        int res = inf;\n        for(int i = 0; i < n; i++){\n            int cur = -inf;\n            if(i) cur = max(cur, big_pref[i - 1]);\n            if(i + 1 < n) cur = max(cur, big_suff[i + 1]);\n            if(i && i + 1 < n){\n                for(int j = 0; j < 4; j++){\n                    cur = max(cur, at_pref[i - 1][j] + at_suff[i + 1][j ^ 3]);\n                }\n            }\n            res = min(res, cur);\n        }\n        return res;\n    }\n};"
}