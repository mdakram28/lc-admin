{
    "username": "puktt",
    "submission": "class Solution {\npublic:\n    //           bit is not set\n    vector <int> pos[35];\n\n    int minimumDifference(vector<int>& nums, int k) {\n        cout << k << endl;\n        memset(pos, 0, sizeof(pos));\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            int x = nums[i];\n            for (int j = 0; j < 32; x >>= 1, ++j) {\n                if ((x & 1) == 0) {\n                    pos[j].push_back(i);\n                }\n            }\n        }\n        for (int j = 0; j < 32; ++j) {\n            pos[j].push_back(n);\n        }\n\n        int ans = abs(k - nums[0]);\n        \n        for (int i = 0; i < n; ++i) {\n            int cur = nums[i];\n            ans = min(ans, abs(k - cur));\n            int ind = i;\n            \n            while (cur && ind < n) {\n                int x = cur;\n                int next = n;\n                for (int j = 0; x; x >>= 1, ++j) {\n                    if (x & 1) {\n                        int nw = upper_bound(pos[j].begin(), pos[j].end(), ind) - pos[j].begin();\n                        next = min(next, pos[j][nw]);\n                    }\n                }\n                if (next < n) {\n                    cur &= nums[next];\n                    ans = min(ans, abs(k - cur));\n                }\n                ind = next;\n            }\n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717298024",
    "subm_id": "1274764582"
}