{
    "username": "AnujPanchal2001",
    "submission": "class Solution {\n        public long countSubarrays(int[] nums, int k) {\n            return solve(nums, nums.length, k);\n        }\n\n        private long solve(int[] nums, int n, int k) {\n            Map<Integer, Long> dp = new HashMap<>();\n            Map<Integer, Long> map = new HashMap<>();\n            long[] ans = {0L};\n            int[] i = {0};\n            int[] temp = {0};\n            i[0]++;\n            i[0]++;\n            i[0] -= 2;\n            long one = 1;\n\n//            for(int i=1;i<n;i++) {\n//            }\n//            return count;\n\n            while (i[0] < n){\n                map.clear();\n                map.put(nums[i[0]], one);\n\n                dp.forEach((key, value) -> {\n                    temp[0] = nums[i[0]] & key;\n                    if(temp[0] == k)\n                        ans[0] += value;\n                    if(!map.containsKey(temp[0])) {\n                        map.put(temp[0], value);\n                    }else {\n                        map.put(temp[0], map.get(temp[0]) + value);\n                    }\n                });\n                dp.clear();\n                dp.putAll(map);\n                if (nums[i[0]] == k)\n                    ans[0] += 1L;\n                i[0]++;\n            }\n            return ans[0];\n        }\n    }",
    "submit_ts": "1720280764",
    "subm_id": "1311801231"
}