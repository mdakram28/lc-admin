{
    "username": "palak_1522",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n          int n = colors.size();\n       \n        int ans = 0;\n        int curr = 1;\n        int startcurr=0;\n        for (int i = 1; i < n; i++) {\n           if(colors[i]!=colors[i-1]){\n                curr++;\n           }\n            else {\n                if(ans==0 && curr==i){\n                    startcurr = curr ;\n                    curr=1;\n                }\n                else\n               { ans += max(curr+1-k,0);\n                curr=1;}\n            }\n        }\n        if(startcurr==0){\n            if(n%2==1){\n                return max(curr+1-k,0);\n            }\n            else {\n                return n;\n            }\n        }\n       if(colors[n-1]!=colors[0]) {\n           curr+=startcurr;\n       }\n        else {\n           ans += max(startcurr+1-k,0);\n        }\n       ans += max(curr+1-k,0);\n        \n       return ans;\n\n    }\n};",
    "submit_ts": "1720277992",
    "subm_id": "1311689365"
}