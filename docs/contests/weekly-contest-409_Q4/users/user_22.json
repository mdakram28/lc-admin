{
    "username": "nifeshe",
    "submission": "#define f first\n#define s second\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) ((int) (x).size())\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntemplate <typename T> inline bool umin(T &a, const T &b) { if(a > b) { a = b; return 1; } return 0; }\ntemplate <typename T> inline bool umax(T &a, const T &b) { if(a < b) { a = b; return 1; } return 0; }\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst ll mod = 1e9 + 7;\nconst ll base = 1e6 + 9;\nconst ll inf = 1e9;\nconst int MAX = 2e5 + 42;\nconst int LG = 20;\n\n\nstruct fenwick {\n    int N;\n    vector<ll> f;\n\n    fenwick(int n): N(n + 42), f(n + 42) {}\n\n    void update(int p, int x) {\n        p += 5;\n        for(; p < N; p += p & -p) f[p] += x;\n    }\n\n    ll get(int p) {\n        p += 5;\n        ll ans = 0;\n        for(; p; p -= p & -p) ans += f[p];\n        return ans;\n    }\n\n    ll get(int l, int r) {\n        return get(r) - get(l - 1);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        int n = sz(colors);\n        auto a = colors;\n        vector<array<int, 3>> qr;\n        for(auto x : queries) {\n            int t, i, col = 0;\n            t = x[0], i = x[1];\n            if(t == 2) col = x[2];\n            qr.pb({t, i, col});\n        }\n        set<int> s;\n        for(int i = 0; i < n; i++) {\n            if(a[i] == a[(i + 1) % n]) s.insert(i);\n        }\n        fenwick cnt(n + 1);\n        fenwick sum(n + 1);\n        auto add = [&](int len, int sign) {\n            //cout << \"ADDING: \" << len << \" \" << sign << endl;\n            sum.update(len, len * sign);\n            cnt.update(len, sign);\n        };\n        for(int i = 0; i < n; i++) {\n            if(a[i] == a[(i + 1) % n]) {\n                auto it = s.upper_bound(i);\n                if(it != s.end()) {\n                    int j = *it;\n                    int len = j - i;\n                    add(len, 1);\n                }\n            }\n        }\n        auto update = [&](int i, int col) {\n            if(a[i] == col) return;\n            if(sz(s) <= 4) {\n                int prev = -1;\n                for(auto j : s) {\n                    if(~prev) add(j - prev, -1);\n                    prev = j;\n                }\n                if(a[i] == a[(i + 1) % n]) s.erase(i);\n                else s.insert(i);\n                if(a[i] == a[(i - 1 + n) % n]) s.erase((i - 1 + n) % n);\n                else s.insert((i - 1 + n) % n);\n                a[i] = col;\n                prev = -1;\n                for(auto j : s) {\n                    if(~prev) add(j - prev, 1);\n                    prev = j;\n                }\n                return;\n            }\n            vector<int> idx;\n            auto it = s.upper_bound(i);\n            if(it != s.end()) idx.pb(*it);\n            if(a[i] == a[(i + 1) % n]) idx.pb(i);\n            if(a[i] == a[(i - 1 + n) % n]) idx.pb((i - 1 + n) % n);\n            it = s.lower_bound((i - 1 + n) % n);\n            if(it != s.begin()) idx.pb(*(--it));\n            reverse(all(idx));\n            for(int j = 1; j < sz(idx); j++) {\n                int x = idx[j - 1];\n                int y = idx[j];\n                if(x < y) add(y - x, -1);\n            }\n            if(a[i] == a[(i + 1) % n]) s.erase(i);\n            else s.insert(i);\n            if(a[i] == a[(i - 1 + n) % n]) s.erase((i - 1 + n) % n);\n            else s.insert((i - 1 + n) % n);\n            a[i] = col;\n            idx.clear();\n            it = s.upper_bound(i);\n            if(it != s.end()) idx.pb(*it);\n            if(a[i] == a[(i + 1) % n]) idx.pb(i);\n            if(a[i] == a[(i - 1 + n) % n]) idx.pb((i - 1 + n) % n);\n            it = s.lower_bound((i - 1 + n) % n);\n            if(it != s.begin()) idx.pb(*(--it));\n            reverse(all(idx));\n            for(int j = 1; j < sz(idx); j++) {\n                int x = idx[j - 1];\n                int y = idx[j];\n                if(x < y) add(y - x, 1);\n            }\n        };\n        vector<int> res;\n        for(auto [t, i, col] : qr) {\n            //for(int j = 1; j <= n; j++) cout << cnt.get(j, j) << \" \"; cout << endl;\n            if(t == 1) {\n                int sz = i;\n                int x = -1, y = 0;\n                if(sz(s)) {\n                    x = *s.begin();\n                    y = *s.rbegin();\n                }\n                if(~x) add(x + n - y, 1);\n                if(sz(s)) res.pb(sum.get(sz, n) - (i - 1) * cnt.get(sz, n));\n                else res.pb(n);\n                if(~x) add(x + n - y, -1);\n            }\n            else {\n                update(i, col);\n                a[i] = col; \n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722742468",
    "subm_id": "1343769697"
}