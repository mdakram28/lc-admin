{
    "username": "6_feet_coder",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> cuts;\n        for(int i=0;i<m-1;i++){\n            cuts.push_back({horizontalCut[i], 0});\n        }\n        for(int i=0;i<n-1;i++){\n            cuts.push_back({verticalCut[i], 1});\n        }\n        sort(cuts.begin(), cuts.end());\n        long long ans = 0, hp = 0, vp = 0;\n        for(int i=cuts.size()-1; i>=0 ;i--){\n            if(cuts[i].second == 0){\n                ans += (vp+1)*cuts[i].first;\n                hp++;\n            }else{\n                ans += (hp+1)*cuts[i].first;\n                vp++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925850",
    "subm_id": "1320268187"
}