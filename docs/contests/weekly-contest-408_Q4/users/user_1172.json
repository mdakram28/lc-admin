{
    "username": "nafnil",
    "submission": "class Solution {\n    int[] p;\n    int find(int x) {\n        if (p[x]==x) return x;\n        return p[x] = find(p[x]);\n    }\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        p = new int[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = i;\n        }\n        for (int i = 0; i<n; i++) {\n            for (int j = i+1; j<n; j++) {\n                if (dis(circles[i][0], circles[i][1], circles[j][0], circles[j][1]) <=\n                1L*(circles[i][2]+circles[j][2])*(circles[i][2]+circles[j][2])) p[find(i)] = find(j);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (find(i)==find(j)) {\n                    boolean x = dis(0, 0, circles[i][0], circles[i][1]) <= 1L*circles[i][2]*circles[i][2] \n                            || dis(0, Y, circles[i][0], circles[i][1]) <= 1L*circles[i][2]*circles[i][2]\n                            || dis(X, Y, circles[i][0], circles[i][1]) <= 1L*circles[i][2]*circles[i][2];\n                    if (circles[i][0] < X) \n                        x |= dis(circles[i][0], Y, circles[i][0], circles[i][1]) <= 1L*circles[i][2]*circles[i][2];\n                    if (circles[i][1] < Y)\n                        x |= dis(0, circles[i][1], circles[i][0], circles[i][1]) <= 1L*circles[i][2]*circles[i][2];\n                    \n                    boolean y = dis(0, 0, circles[j][0], circles[j][1]) <= 1L*circles[j][2]*circles[j][2]\n                            || dis(X, Y, circles[j][0], circles[j][1]) <= 1L*circles[j][2]*circles[j][2]\n                            || dis(X, 0, circles[j][0], circles[j][1]) <= 1L*circles[j][2]*circles[j][2];\n                    if (circles[i][0] < X)\n                        y |= dis(circles[j][0], 0, circles[j][0], circles[j][1]) <= 1L*circles[j][2]*circles[j][2];\n                    if (circles[i][1] < Y)\n                        y |= dis(X, circles[j][1], circles[j][0], circles[j][1]) <= 1L*circles[j][2]*circles[j][2];\n                    \n                    if (x && y) return false;\n                }\n            }\n        }\n        return true;\n    }\n    long dis(long x, long y, long xx, long yy) {\n        return (x-xx)*(x-xx) + (y-yy)*(y-yy);\n    }\n}",
    "submit_ts": "1722135862",
    "subm_id": "1335715991"
}