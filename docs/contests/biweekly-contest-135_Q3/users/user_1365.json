{
    "username": "ggstddu",
    "submission": "class Solution {\n public:\n  int minChanges(vector<int>& nums, int k) {\n    int N  = nums.size();\n    auto f = [&](int x) {\n      int ret = 0;\n      auto g  = [&](int v) { return v >= 0 && v <= k; };\n      for (int i = 0; i < N / 2; ++i) {\n        if (abs(nums[i] - nums[N - 1 - i]) != x) {\n          if (g(nums[i] + x) || g(nums[i] - x) || g(nums[N - 1 - i] + x) || g(nums[N - 1 - i] - x))\n            ret++;\n          else\n            ret += 2;\n        }\n      }\n      return ret;\n    };\n    map<int, int> mp;\n    for (int i = 0; i < N / 2; ++i) {\n      mp[abs(nums[i] - nums[N - 1 - i])]++;\n    }\n    vector<pair<int, int>> vs;\n    for (auto [k, v] : mp) {\n      vs.emplace_back(N - v * 2, k);\n    }\n    ranges::stable_sort(vs);\n    int ret = N;\n    for (auto [k, v] : vs) {\n      if (k / 2 >= ret) break;\n      ret = min(ret, f(v));\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1721488819",
    "subm_id": "548316117"
}