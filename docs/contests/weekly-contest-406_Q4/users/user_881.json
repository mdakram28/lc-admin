{
    "username": "aiwaziri",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        h_count = 1\n        v_count = 1\n        cost = 0\n        \n        i, j = 0, 0\n        while i < len(horizontalCut) and j < len(verticalCut):\n            if horizontalCut[i] >= verticalCut[j]:\n                cost += horizontalCut[i] * v_count\n                h_count += 1\n                i += 1\n            else:\n                cost += verticalCut[j] * h_count\n                v_count += 1\n                j += 1\n        \n        while i < len(horizontalCut):\n            cost += horizontalCut[i] * v_count\n            h_count += 1\n            i += 1\n        \n        while j < len(verticalCut):\n            cost += verticalCut[j] * h_count\n            v_count += 1\n            j += 1\n        \n        return cost\n",
    "submit_ts": "1720924530",
    "subm_id": "1320220384"
}