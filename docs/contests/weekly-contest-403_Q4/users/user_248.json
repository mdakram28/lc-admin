{
    "username": "silvertint10",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        \n        @cache\n        def dp(f, x1, y1, x2, y2):\n            if f == 0:\n                return cal(x1,y1,x2,y2)\n            if f == 1:\n                ans = inf\n                for i in range(x1 + 1, x2 + 1):\n                    ans = min(ans, dp(f - 1, x1, y1, i - 1, y2) + dp(f - 1, i, y1, x2, y2))\n                for i in range(y1 + 1, y2 + 1):\n                    ans = min(ans, dp(f - 1, x1, y1, x2, i - 1) + dp(f - 1, x1, i, x2, y2))\n            else:\n                ans = inf\n                for i in range(x1 + 1, x2 + 1):\n                    ans = min(ans, dp(f - 1, x1, y1, i - 1, y2) + dp(f - 2, i, y1, x2, y2), dp(f - 2, x1, y1, i - 1, y2) + dp(f - 1, i, y1, x2, y2))\n                for i in range(y1+1,y2+1):\n                    ans = min(ans, dp(f - 1, x1, y1, x2, i - 1) + dp(f - 2, x1, i, x2, y2), dp(f - 2, x1, y1, x2, i - 1) + dp(f - 1, x1, i, x2, y2))\n            return ans\n        \n        @cache\n        def cal(i1, j1, i2, j2):\n            x1, x2, y1, y2, f = inf, -inf, inf, -inf, 0\n            for i in range(i1, i2 + 1):\n                for j in range(j1, j2 + 1):\n                    if grid[i][j] == 1:\n                        f = 1\n                        x1 = min(x1, i)\n                        x2 = max(x2, i)\n                        y1 = min(y1, j)\n                        y2 = max(y2, j)\n            return (x2 - x1 + 1) * (y2 - y1 + 1) if f else inf\n        \n        \n        \n        return dp(2, 0, 0, m - 1, n - 1)\n            \n                ",
    "submit_ts": 1719113880.0
}