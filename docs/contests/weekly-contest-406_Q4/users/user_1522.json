{
    "username": "subcrip",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> a;\n        for (int i = 0; i < m - 1; ++i) {\n            a.emplace_back(horizontalCut[i], 0);\n        }\n        for (int i = 0; i < n - 1; ++i) {\n            a.emplace_back(verticalCut[i], 1);\n        }\n        sort(a.begin(), a.end(), greater());\n        long long res = 0;\n        array<int, 2> cnt = {};\n        for (auto&& [x, i] : a) {\n            cnt[i] += 1;\n            res += (long long)(1 + cnt[1 ^ i]) * x;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925570",
    "subm_id": "546440385"
}