{
    "username": "kingarp",
    "submission": "class Solution {\npublic:\n    long long compute(vector < pair < int , int > > va, vector < pair < int , int > > vb, vector < pair < int , int > > vc)\n    {\n        long long ans = -1e10;\n        for(int i=0;i<3;i++)\n        {\n            for(int j = 0;j<3;j++)\n            {\n                for(int k=0;k<3;k++)\n                {\n                    // cout<<i<<\" ijk \"<<j<<\" \"<<k<<endl;\n                    // cout<<va[i].second<<\" \"<<vb[i].second<<\" \"<<vc[i].second<<endl;\n                    if(va[i].second!=vb[j].second and va[i].second!=vc[k].second and vb[j].second!=vc[k].second)\n                    {\n                        ans = max(ans, 1ll*va[i].first + 1ll*vb[j].first + 1ll*vc[k].first);\n                    }\n                }\n                //cout<<\"\\nend k\\n\";\n            }\n            //cout<<\"end j \\n\\n\\n\";\n        }\n        return ans;\n    }\n    void printit(vector < pair < int , int > > &p)\n    {\n        cout<<\"-------------------------\\n\";\n        for(auto it:p) cout<<it.first<< \" \"<<it.second<<endl;\n        cout<<\"-------------------------\\n\";\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans  = -1e10;\n        int n = board.size(), m = board[0].size();\n        vector < vector < pair < int , int > >  > vp(n);\n        for(int i=0;i<n;i++)\n        {\n            vector < pair < int , int > > tvp;\n            for(int j=0;j<m;j++)\n            {\n                tvp.push_back({board[i][j],j});\n            }\n            sort(begin(tvp),end(tvp));\n            vp[i].push_back(tvp[m-1]);\n            vp[i].push_back(tvp[m-2]);\n            vp[i].push_back(tvp[m-3]);\n            \n        }\n        // for(auto it:vp)\n        // {\n        //     for(auto itt:it) cout<<itt.first<<\" \"<<itt.second<<endl;\n        //     cout<<\"Holly\\n\";\n        // }\n        for(int i=0;i<n;i++)\n        {\n            for(int j = i+1;j<n;j++)\n            {\n                for(int k = j+1;k<n;k++)\n                {\n                    // printit(vp[i]);\n                    // printit(vp[j]);\n                    // printit(vp[k]);\n                    ans = max(ans, compute(vp[i],vp[j],vp[k]));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723907843",
    "subm_id": "1359126798"
}