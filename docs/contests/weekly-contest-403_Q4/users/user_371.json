{
    "username": "user8557",
    "submission": "\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int res = m * n;\n        {\n            for (int r1 = 1; r1 < m - 1; r1++) {\n                for (int r2 = r1; r2 < m - 1; r2++) {\n                    int cur = findMinimumAreaRR(grid, 0, r1 - 1) +\n                            findMinimumAreaRR(grid, r1, r2) +\n                            findMinimumAreaRR(grid, r2 + 1, m - 1);\n                    res = min(res, cur);\n                }\n            }\n        }\n        {\n            for (int c1 = 1; c1 < n - 1; c1++) {\n                for (int c2 = c1; c2 < n - 1; c2++) {\n                    int cur = findMinimumAreaCC(grid, 0, c1 - 1) +\n                            findMinimumAreaCC(grid, c1, c2) +\n                            findMinimumAreaCC(grid, c2 + 1, n - 1);\n                    res = min(res, cur);\n                }\n            }\n        }\n        {\n            for (int rr = 0; rr < m - 1; rr++) {\n                for (int cc = 0; cc < n - 1; cc++) {\n                    int cur = findMinimumAreaRR(grid, 0, rr) +\n                            findMinimumAreaSA(grid, rr + 1, cc) +\n                            findMinimumAreaSD(grid, rr + 1, cc + 1);\n                    res = min(res, cur);\n                }\n            }\n            for (int rr = 1; rr < m; rr++) {\n                for (int cc = 0; cc < n - 1; cc++) {\n                    int cur = findMinimumAreaRR(grid, rr, m - 1) +\n                            findMinimumAreaWA(grid, rr - 1, cc) +\n                            findMinimumAreaWD(grid, rr - 1, cc + 1);\n                    res = min(res, cur);\n                }\n            }\n            for (int cc = 0; cc < n - 1; cc++) {\n                for (int rr = 0; rr < m - 1; rr++) {\n                    int cur = findMinimumAreaCC(grid, 0, cc) +\n                            findMinimumAreaWD(grid, rr, cc + 1) +\n                            findMinimumAreaSD(grid, rr + 1, cc + 1);\n                    res = min(res, cur);\n                }\n            }\n            for (int cc = 1; cc < n; cc++) {\n                for (int rr = 0; rr < m - 1; rr++) {\n                    int c1 = findMinimumAreaCC(grid, cc, n - 1);\n                    int c2 = findMinimumAreaWA(grid, rr, cc - 1);\n                    int c3 = findMinimumAreaSA(grid, rr + 1, cc - 1);\n                    int cur = c1 + c2 + c3;\n                    res = min(res, cur);\n                }\n            }\n        }\n        return res;\n    }\n\nprivate:\n    int findMinimumAreaRR(const vector<vector<int>>& grid, int r1, int r2) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int c1 = 0;\n        int c2 = n - 1;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumAreaCC(const vector<vector<int>>& grid, int c1, int c2) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int r1 = 0;\n        int r2 = m - 1;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumAreaWA(const vector<vector<int>>& grid, int r, int c) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int r1 = 0;\n        int r2 = r;\n        int c1 = 0;\n        int c2 = c;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumAreaWD(const vector<vector<int>>& grid, int r, int c) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int r1 = 0;\n        int r2 = r;\n        int c1 = c;\n        int c2 = n - 1;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumAreaSA(const vector<vector<int>>& grid, int r, int c) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int r1 = r;\n        int r2 = m - 1;\n        int c1 = 0;\n        int c2 = c;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumAreaSD(const vector<vector<int>>& grid, int r, int c) {\n        const int m = grid.size();\n        const int n = grid.front().size();\n        int r1 = r;\n        int r2 = m - 1;\n        int c1 = c;\n        int c2 = n - 1 ;\n        return findMinimumArea(grid, r1, c1, r2, c2);\n    }\n\n    int findMinimumArea(const vector<vector<int>>& grid, int r1, int c1, int r2, int c2) {\n        if (r1 > r2 || c1 > c2) {\n            return 0;\n        }\n        int w = -1;\n        int a = -1;\n        int s = -1;\n        int d = -1;\n        for (int r = r1; r <= r2; r++) {\n            for (int c = c1; c <= c2; c++) {\n                if (grid[r][c]) {\n                    updateBoundary(w, r, false);\n                    updateBoundary(s, r, true);\n                    updateBoundary(a, c, false);\n                    updateBoundary(d, c, true);\n                }\n            }\n        }\n        if (w == -1) {\n            return 0;\n        }\n        int len1 = abs(s - w) + 1;\n        int len2 = abs(d - a) + 1;\n        return len1 * len2;\n    }\n\n    void updateBoundary(int &boundary, int value, bool bigger) {\n        if (boundary == -1) {\n            boundary = value;\n            return;\n        }\n        if (bigger) {\n            boundary = max(boundary, value);\n        } else {\n            boundary = min(boundary, value);\n        }\n    }\n};\n",
    "submit_ts": "1719114104",
    "subm_id": "541400442"
}