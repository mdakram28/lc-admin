{
    "username": "ykamo",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k in [1, 3, 9]:\n            return \"9\" * n\n        if k == 2:\n            if n == 1:\n                return \"8\"\n            return \"8\" + (\"9\" * (n-2)) + \"8\"\n        if k == 4:\n            if n <= 3:\n                return \"8\" * n\n            return \"88\" + (\"9\" * (n-4)) + \"88\"\n        if k == 5:\n            if n == 1:\n                return \"5\"\n            return \"5\" + (\"9\" * (n-2)) + \"5\"\n        if k == 6:\n            if n <= 2:\n                return \"6\" * n\n            if n % 2 == 0:\n                return \"8\" + (\"9\" * ((n-4) // 2)) + \"77\" + (\"9\" * ((n-4) // 2)) + \"8\"\n            return \"8\" + (\"9\" * ((n-3) // 2)) + \"8\" + (\"9\" * ((n-3) // 2)) + \"8\"\n        if k == 8:\n            if n <= 5:\n                return \"8\" * n\n            return \"888\" + (\"9\" * (n-6)) + \"888\"\n        if n <= 2:\n            return \"7\" * n\n        if n == 3:\n            return \"959\"\n        if n == 4:\n            return \"9779\"\n        if n == 5:\n            return \"99799\"\n        def chk(s):\n            #print(\"chk \", s)\n            r = s[::-1]\n            m = 0\n            gg = 1\n            for i in range(0,len(r), 3):\n                x = int(r[i:i+3][::-1])\n                m += x * gg\n                gg = -gg\n                #print(i, x, m)\n            if m % 7 == 0:\n                return True\n\n\n        if n % 2 == 0:\n            for i in range(9,-1,-1):\n                s = (\"9\" * ((n-2)//2)) + (str(i) * 2) + (\"9\" * ((n-2)//2))\n                if chk(s):\n                    return s\n            print(f\"ERROR {n} {k}\")\n        for i in range(9,-1,-1):\n            s = (\"9\" * ((n-1)//2)) + (str(i) * 1) + (\"9\" * ((n-1)//2))\n            if chk(s):\n                return s\n        print(f\"ERROR2 {n} {k}\")\n",
    "submit_ts": "1723952347",
    "subm_id": "1359794079"
}