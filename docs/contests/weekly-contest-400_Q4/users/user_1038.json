{
    "username": "jithendrabanoth",
    "submission": "#include <vector>\n#include <queue>\n#include <climits>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        vector<int> zeros(32, 0);\n\n        auto minus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] -= 1;\n                }\n            }\n        };\n\n        auto plus = [&](int x) {\n            for (int i = 0; i < 32; ++i) {\n                if (((x >> i) & 1) == 0) {\n                    zeros[i] += 1;\n                }\n            }\n        };\n\n        auto eval = [&]() {\n            int res = 0;\n            for (int i = 0; i < 32; ++i) {\n                if (zeros[i] == 0) {\n                    res ^= (1 << i);\n                }\n            }\n            return res;\n        };\n\n        priority_queue<int, vector<int>, greater<int>> pq;\n        int n = nums.size();\n        int ans = INT_MAX;\n\n        for (int j = 0; j < n; ++j) {\n            plus(nums[j]);\n            int x = eval();\n            ans = min(ans, abs(x - k));\n            while (!pq.empty() && x < k) {\n                int i = pq.top();\n                pq.pop();\n                minus(nums[i]);\n                x = eval();\n                ans = min(ans, abs(x - k));\n            }\n            pq.push(j);\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": 1717300666.0
}