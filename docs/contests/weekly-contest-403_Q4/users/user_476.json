{
    "username": "silvermete0r",
    "submission": "class Solution {\nprivate:\n    int minimumArea(vector<vector<int>>& grid, int s_i, int s_j, int e_i, int e_j) {\n        int x1 = INT_MAX, x2 = INT_MIN, y1 = INT_MAX, y2 = INT_MIN;\n        for(int i = s_i; i <= e_i; i++) {\n            for(int j = s_j; j <= e_j; j++) {\n                if(grid[i][j]) {\n                    x1 = min(x1, j);\n                    x2 = max(x2, j);\n                    y1 = min(y1, i);\n                    y2 = max(y2, i);\n                }\n            }\n        }\n        if (x1 == INT_MAX || y1 == INT_MAX) return 0; // No 1s found\n        return (x2 - x1 + 1) * (y2 - y1 + 1);\n    }\n\n    int div2sum(vector<vector<int>>& grid, vector<int>& vert, vector<int>& horz, int s_i, int s_j, int e_i, int e_j) {\n        int ans = INT_MAX;\n        for(int j = s_j; j < e_j; j++) {\n            if(vert[j] && (vert[e_j] - vert[j])) {\n                int x = minimumArea(grid, s_i, s_j, e_i, j);\n                int y = minimumArea(grid, s_i, j + 1, e_i, e_j);\n                ans = min(ans, x + y);\n            }\n        }\n        for(int i = s_i; i < e_i; i++) {\n            if(horz[i] && (horz[e_i] - horz[i])) {\n                int x = minimumArea(grid, s_i, s_j, i, e_j);\n                int y = minimumArea(grid, i + 1, s_j, e_i, e_j);\n                ans = min(ans, x + y);\n            }\n        }\n        return ans;\n    }\n\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int ans = INT_MAX;\n        int n = grid.size(), m = grid[0].size();\n        vector<int> vert(m), horz(n);\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                vert[j] += grid[i][j];\n                horz[i] += grid[i][j];\n            }\n        }\n        for(int j = 1; j < m; j++) vert[j] += vert[j - 1];\n        for(int i = 1; i < n; i++) horz[i] += horz[i - 1];\n        for(int j = 0; j < m - 1; j++) {\n            if(vert[j] && (vert[m - 1] - vert[j])) {\n                if(vert[j] > 1) {\n                    int x = div2sum(grid, vert, horz, 0, 0, n - 1, j);\n                    int y = minimumArea(grid, 0, j + 1, n - 1, m - 1);\n                    ans = min(ans, x + y);\n                }\n                if((vert[m - 1] - vert[j]) > 1) {\n                    int x = div2sum(grid, vert, horz, 0, j + 1, n - 1, m - 1);\n                    int y = minimumArea(grid, 0, 0, n - 1, j);\n                    ans = min(ans, x + y);\n                }\n            }\n        }\n        for(int i = 0; i < n - 1; i++) {\n            if(horz[i] && (horz[n - 1] - horz[i])) {\n                if(horz[i] > 1) {\n                    int x = div2sum(grid, vert, horz, 0, 0, i, m - 1);\n                    int y = minimumArea(grid, i + 1, 0, n - 1, m - 1);\n                    ans = min(ans, x + y);\n                }\n                if((horz[n - 1] - horz[i]) > 1) {\n                    int x = div2sum(grid, vert, horz, i + 1, 0, n - 1, m - 1);\n                    int y = minimumArea(grid, 0, 0, i, m - 1);\n                    ans = min(ans, x + y);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719114784.0
}