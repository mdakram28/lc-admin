{
    "username": "pratikdhagude_03",
    "submission": "class Solution\n{\npublic:\n    int minChanges(vector<int> &nums, int k)\n    {\n\n        int n = nums.size();\n\n        map<int, vector<int>> m;\n\n        vector<int> res;\n\n        for (int i = 0; i < n / 2; i++)\n        {\n            int diff = (abs(nums[i] - nums[n - i - 1]));\n\n            int a = max(nums[i], nums[n - i - 1]);\n            int b = max(k - nums[i], k - nums[n - i - 1]);\n\n            int r = max(a, b);\n            res.push_back(r);\n            //             max BECAUSE itha fakta max paryant nums[i],nums[n-i-1] madhe change karu sakto\n            m[diff].push_back(r);\n        }\n\n        //         int n = nums.size();\n        //         vector<int> freq(2 * k + 1, 0);\n        //         int changes = 0;\n\n        //         for (int i = 0; i < n / 2; ++i) {\n        //             int a = nums[i], b = nums[n - i - 1];\n        //             freq[a + b]++;\n        //         }\n\n        //         int max_freq = 0;\n        //         for (int sum = 0; sum <= 2 * k; ++sum) {\n        //             max_freq = max(max_freq, freq[sum]);\n        //         }\n\n        //         changes = (n / 2) - max_freq;\n\n        int ans = n;\n        sort(res.begin(), res.end());\n\n        for (auto i : m)\n        {\n            int d = i.first;\n\n            int x = lower_bound(res.begin(), res.end(), d) - res.begin();\n\n            int curr = (n / 2 - x);\n\n            curr += 2 * x;\n\n            // int p = 0;\n            // while ((1 << p) <= num) {\n            //     p++;\n            // }\n\n            for (auto p : i.second)\n            {\n                if (p < d)\n                {\n                    curr -= 2;\n                }\n                else\n                {\n                    curr -= 1;\n                }\n            }\n\n            ans = min(ans, curr);\n        }\n\n        //          for (int i = n - 1; i >= 0; --i) {\n        //         int val = nums[i] + x;\n\n        //         // Find the first numsfix sum that is greater than or equal to val\n        //         auto ans = lower_bound(nums.begin(), nums.end(), val) - nums.begin();\n\n        //         if (ans == n + 1) {\n        //             arr[i] = n - i;\n        //          }\n\n        //             else if (val == nums[ans]) {\n        //             arr[i] = (ans - i) + arr[ans + 1];\n        //         }    else {\n\n        //             arr[i] = (ans - i - 1) + arr[ans];\n        //         }\n        //          }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721490291",
    "subm_id": "1327478484"
}