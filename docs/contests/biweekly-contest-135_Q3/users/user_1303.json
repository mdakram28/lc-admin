{
    "username": "AkshitMital",
    "submission": "class Solution {\nprivate:\n\n    int findMinChanges(unordered_map<int, vector<int>>& mpp, vector<int>& vec, int n) {\n        int mini = n;\n\n        for (auto it : mpp) {\n            auto diff = it.first;\n            auto values = it.second;\n            int pos = lower_bound(vec.begin(), vec.end(), diff) - vec.begin();\n            int changes = pos * 2 + (n / 2 - pos);\n\n            for (int value : values) changes -= (value < diff) ? 2 : 1;\n            \n            mini = min(mini, changes);\n        }\n\n        return mini;\n    }\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, vector<int>> mpp;\n\n        for (int i = 0; i<n / 2; i++) {\n            int num1 = nums[i];\n            int num2 = nums[n-i-1];\n            int diff = abs(num1-num2);\n            int maxi = max(max(num1, num2), max(k - num1, k - num2));\n            mpp[diff].push_back(maxi);\n        }\n        \n        vector<int> vec;\n\n        for (auto it : mpp) {\n            auto key = it.first;\n            auto values = it.second;\n            vec.insert(vec.end(), values.begin(), values.end());\n        }\n\n        sort(vec.begin(), vec.end());\n        return findMinChanges(mpp, vec, n);\n    }\n};\n",
    "submit_ts": "1721489370",
    "subm_id": "1327451267"
}