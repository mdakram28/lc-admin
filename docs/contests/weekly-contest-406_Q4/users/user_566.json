{
    "username": "003213",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        long ans = 0;\n        long v = 1;\n        long h = 1;\n        \n        int hi = m-2;\n        int vi = n-2;\n        \n        while(hi >=0 && vi >=0) {\n            long hh = (long)horizontalCut[hi];\n            long vv = (long)verticalCut[vi];\n            if(hh >= vv) {\n                ans+=hh*h;\n                v++;\n                hi--;\n            } else {\n                ans+=vv*v;\n                h++;\n                vi--;\n            }\n        }\n        \n        while(hi >=0) {\n            long hh = (long)horizontalCut[hi];\n            ans+=hh*h;\n            hi--;\n        }\n        while(vi >=0) {\n            long vv = (long)verticalCut[vi];\n            ans+=vv*v;\n            vi--;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925653",
    "subm_id": "1320261835"
}