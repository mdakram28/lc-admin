{
    "username": "smilences",
    "submission": "class Solution:\n    def minimumArea(self, grid: List[List[int]]) -> int:\n        a = [1 if 1 in x else 0 for x in grid]\n        b = [1 if 1 in x else 0 for x in zip(*grid)]\n\n        mi = -1\n        mx = -1\n        for i,x in enumerate(a):\n            if x == 1:\n                if mi == -1:\n                    mi = i\n                mx = i\n        ans1 = mx - mi + 1\n\n        mi = -1\n        mx = -1\n        for i,x in enumerate(b):\n            if x == 1:\n                if mi == -1:\n                    mi = i\n                mx = i\n        ans2 = mx - mi + 1\n\n        return ans1 * ans2\n\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        # \u4e0a1\u4e0b2\n        def solve(g):\n            n = len(g)\n            m = len(g[0])\n            ans0 = inf \n            for i in range(1,n):\n                a = g[:i]\n                b = g[i:]\n\n                ans1 = self.minimumArea(a)\n                ans2 = inf\n                for j in range(1,m):\n                    e = list(zip(*b))\n                    c = e[:j]\n                    d = e[j:]\n                    ans3 = self.minimumArea(c) + self.minimumArea(d)\n                    if ans3 < ans2:\n                        ans2 = ans3\n\n                res = ans1 + ans2\n                if res < ans0:\n                    ans0 = res\n            return ans0\n\n        g2 = list(zip(*grid))\n        solve(grid)\n        ans = min(solve(grid), solve(grid[::-1]), solve(g2), solve(g2[::-1]))\n\n        # \u4e00\u884c3\u4e2a\n        def solve2(g):\n            n = len(g)\n            m = len(g[0])\n            if n <= 2:\n                return inf\n            ans0 = inf \n            for i in range(1,n-1):\n                for j in range(i+1,n):\n                    a = g[:i]\n                    b = g[i:j]\n                    c = g[j:]\n\n                    res = self.minimumArea(a) + self.minimumArea(b) + self.minimumArea(c)\n                    if res < ans0:\n                        ans0 = res\n            return ans0\n\n        ansx = min(solve2(grid),solve2(g2))\n        return min(ans,ansx)\n\n",
    "submit_ts": "1719111865",
    "subm_id": "541389386"
}