{
    "username": "adyand",
    "submission": "class Solution {\npublic:\n    long long fun(vector<int> &a, int s, int e, int k) {\n        // cout << s << ' ' << e << '\\n';\n        if (s > e) return 0ll;\n        vector<queue<int>> bits(32);\n        long long ans = 0;\n        for (int i=0; i<32; i++) {\n            for (int j=s; j<=e; ++j) {\n                if (!(a[j] & (1<<i))) {\n                    bits[i].push(j);\n                }\n            }\n        }\n        int i=s, mx = 0;\n        bool flag = true;\n        while (true) {\n            for (int j=0; j<32; ++j) {\n                if (k & (1<<j)) continue;\n                if (bits[j].size() == 0) {\n                    flag = false;\n                    break;\n                }\n                mx = max(mx, bits[j].front());\n            }\n            if (!flag) break;\n            ans += e-mx+1;\n            for (int j=0; j<32; ++j) {\n                if (!bits[j].empty() && bits[j].front() == i) bits[j].pop();\n            }\n            i++;\n        }\n        return ans;\n    }\n    \n    long long countSubarrays(vector<int>& a, int k) {\n        long long ans = 0, curr = 0, pi = 0;\n        for (int i=0; i<a.size(); ++i) {\n            if ((a[i] & k) == k) {\n            } else {\n                ans += fun(a, pi, i-1, k);\n                pi = i+1;\n            }\n        }\n        ans += fun(a, pi, a.size()-1, k);\n        return ans;\n    }\n};",
    "submit_ts": "1720281283",
    "subm_id": "1311819510"
}