{
    "username": "qq1239426256",
    "submission": "class Solution {\npublic:\n    int mod = 1e9 + 7;\n    using ll = long long;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        sort(requirements.begin(), requirements.end());\n        int m = requirements.size();\n        int mx = 0;\n        for (int i = 0; i < m; i++) {\n            if (requirements[i][0] == n - 1) {\n                mx = requirements[i][1];\n                break;\n            }\n        }\n        vector<vector<ll>> dp(n + 1, vector<ll>(mx + 1));\n        dp[0][0] = 1;\n        int pos = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= mx; j++) {\n                for (int k = 0; k <= i - 1; k++) {\n                    if (j - (i - 1 - k) < 0) continue;\n                    dp[i][j] += dp[i - 1][j - (i - 1 - k)];\n                    dp[i][j] %= mod;\n                }\n            }\n            if (i - 1 == requirements[pos][0]) {\n                // \u9664\u4e86requirements[j][1]\u4e4b\u5916\u7684\u6240\u6709\u60c5\u51b5\u90fd\u4e3a0\n                for (int k = 0; k <= mx; k++) {\n                    if (k != requirements[pos][1]) {\n                        dp[i][k] = 0;\n                    }\n                }\n                pos++;\n            }\n        }\n        return dp[n][mx];\n    }\n};",
    "submit_ts": 1719071346.0
}