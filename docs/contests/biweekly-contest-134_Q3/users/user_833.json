{
    "username": "XYH10022",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        ans = 0\n        \n        def get_index(index):\n            return (index + n )%n\n        \n        l, r = 0, 1\n        while r < (n-1+k):\n            \n            if r < (n-1+k) and colors[get_index(r)] != colors[get_index(r - 1)]:\n                r += 1\n                sub_len = r - l \n                if sub_len >= k:\n                    # print(\"l: \", l,  \"   r: \", r, \"  add:\", sub_len - k + 1)\n                    ans += 1\n                \n            else:\n                # sub_len = r - l \n                # print(\"l: \", l,  \"   r: \", r, \"  add:\", sub_len - k + 1)\n                # if sub_len >= k:\n                    # print(\"l: \", l,  \"   r: \", r, \"  add:\", sub_len - k + 1)\n                    # ans += sub_len - k + 1\n                \n                l = r\n                r += 1\n        print(l, \" \", r)\n        return ans\n            ",
    "submit_ts": "1720278037",
    "subm_id": "1311691499"
}