{
    "username": "yao-bing",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        total, count = 0, 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                total = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j]\n                count += min(total % 4, 4 - total % 4)\n        total, flag = 0, True\n        if m & 1 == 1:\n            for j in range(n // 2):\n                cur = grid[m // 2][j] + grid[m // 2][n - 1 - j]\n                total += cur\n                if cur & 1 == 1:\n                    count += 1\n                    flag = False\n        if n & 1 == 1:\n            for i in range(m // 2):\n                cur = grid[i][n // 2] + grid[m - 1 - i][n // 2]\n                total += cur\n                if cur & 1 == 1:\n                    count += 1\n                    flag = False\n        if total % 4 != 0 and flag:\n            count += 2\n        if (m * n) & 1 == 1 and grid[m // 2][n // 2] == 1:\n            count += 1\n        return count",
    "submit_ts": "1722698247",
    "subm_id": "552270035"
}