{
    "username": "Satyam_kj02",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        int n = nums.length, max = 0;\n\n        for(int num : nums)\n            max = Math.max(max, num);\n\n        int[][][] dp = new int[n][max + 1][max + 2];\n\n        for(int i = 0;i < n;i++){\n            for(int j = 0;j <= max;j++)\n                Arrays.fill(dp[i][j], -1);\n        }\n        return solve(0, 0, max + 1, nums, dp);\n    }\n\n    public int solve(int i, int prev_x, int prev_y, int[] nums, int[][][] dp){\n        int n = nums.length, mod = (int)1e9 + 7;\n\n        if(i == n)\n            return 1;\n\n        if(dp[i][prev_x][prev_y] != -1)\n            return dp[i][prev_x][prev_y];\n\n        int limit = nums[i];\n\n        int ans = 0;\n\n        int x = 0, y = limit;\n\n        while(x <= limit){\n            if(x >= prev_x && y <= prev_y){\n                ans = (ans + solve(i + 1, x, y, nums, dp)) % mod;\n            }\n\n            x++;\n            y--;\n        }\n\n        return dp[i][prev_x][prev_y] = ans;\n\n    }\n}",
    "submit_ts": "1723346410",
    "subm_id": "1351576969"
}