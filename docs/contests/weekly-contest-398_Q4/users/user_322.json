{
    "username": "khanayaan7",
    "submission": "class Solution {\npublic:\n    map<array<int,3>,int> dp;\n    int solve(int stair,int jump,int cons,int k){\n        if(stair>k+1)return 0;\n        if(stair<0)return 0;\n        if(dp.count({stair,jump,cons}))return dp[{stair,jump,cons}];\n        int curr=0;\n        if(stair==k)curr=1;\n        if(cons==0){\n            int v1=stair-1;\n            curr+=solve(stair-1,jump,1,k);\n        }\n        int nx=stair+powl(2,jump);\n        curr+=solve(nx,jump+1,0,k);\n        return dp[{stair,jump,cons}]=curr;\n    }\n    int waysToReachStair(int k) {\n        return solve(1,0,0,k);\n    }\n};",
    "submit_ts": 1716088100.0
}