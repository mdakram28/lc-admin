{
    "username": "unkindled",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        long res = Long.MIN_VALUE;\n        long[][] maxValue = new long[n][4];\n        for(int i = 0; i < n; i++) {\n            maxValue[i][0] = maxValue[i][2] = Integer.MIN_VALUE;\n            maxValue[i][1] = maxValue[i][3] = -1;\n        }\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {\n                long v1 = Integer.MIN_VALUE;\n                long r1 = -1;\n                long c1 = -1;\n                long v2 =  Integer.MIN_VALUE;\n                long r2 = -1;\n                long c2 = -1;\n                for(int k = 0; k < n; k++) {\n                    if(k == j) {\n                        continue;\n                    }\n                    if(maxValue[k][0] > v1) {\n                        v2 = v1;\n                        r2 = r1;\n                        c2 = c1;\n                        v1 = maxValue[k][0];\n                        r1 = maxValue[k][1];\n                        c1 = k;\n                    } else if(maxValue[k][0] > v2) {\n                        v2 = maxValue[k][0];\n                        r2 = maxValue[k][1];\n                        c2 = k;\n                    }\n                }\n                if(r1 != r2) {\n                    res = Math.max(res, board[i][j] + v1 + v2);\n                } else {\n                    for(int k = 0; k < n; k++) {\n                        if(k == j) {\n                            continue;\n                        }\n                        if(maxValue[k][1] != r1) {\n                            if(k != c1 && k != c2) {\n                                res = Math.max(res, board[i][j] + maxValue[k][0] + v1);\n                            }\n                        }  else if(k == c1) {\n                            res = Math.max(res, board[i][j] + maxValue[k][2] + v2);\n                        } else {\n                            res = Math.max(res, board[i][j] + maxValue[k][2] + v1);\n                        }\n                    }\n                }\n            }\n            for(int j = 0; j < n; j++) {\n                if(board[i][j] > maxValue[j][0]) {\n                    maxValue[j][2] = maxValue[j][0];\n                    maxValue[j][3] = maxValue[j][1];\n                    maxValue[j][0] = board[i][j];\n                    maxValue[j][1] = i;\n                } else if(board[i][j] > maxValue[j][2]) {\n                    maxValue[j][2] = board[i][j];\n                    maxValue[j][3] = i;\n                }\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723909595",
    "subm_id": "556337061"
}