{
    "username": "pramit_samanta",
    "submission": "impl Solution {\n    pub fn can_reach_corner(x: i32, y: i32, circles: Vec<Vec<i32>>) -> bool {\n        use std::collections::VecDeque;\n\n        fn bfs(graph: &Vec<Vec<usize>>, start: usize, target1: usize, target2: usize, n: usize) -> bool {\n            let mut queue = VecDeque::new();\n            let mut visited = vec![false; n + 4];\n\n            queue.push_back(start);\n            visited[start] = true;\n\n            while let Some(u) = queue.pop_front() {\n                for &v in &graph[u] {\n                    if !visited[v] {\n                        queue.push_back(v);\n                        visited[v] = true;\n                    }\n                }\n            }\n\n            visited[target1] || visited[target2]\n        }\n\n        let nc = circles.len();\n        let mut graph = vec![vec![]; nc + 4];\n        let c: Vec<(i32, i32, i32)> = circles.iter()\n            .map(|circle| (circle[0], circle[1], circle[2]))\n            .collect();\n\n        // Connect circles to the border nodes\n        for i in 0..nc {\n            if c[i].0 <= c[i].2 { // Left border\n                graph[nc].push(i);\n                graph[i].push(nc);\n            }\n            if x - c[i].0 <= c[i].2 { // Right border\n                graph[nc + 2].push(i);\n                graph[i].push(nc + 2);\n            }\n            if c[i].1 <= c[i].2 { // Bottom border\n                graph[nc + 1].push(i);\n                graph[i].push(nc + 1);\n            }\n            if y - c[i].1 <= c[i].2 { // Top border\n                graph[nc + 3].push(i);\n                graph[i].push(nc + 3);\n            }\n            for j in (i + 1)..nc {\n                let dx = (c[i].0 - c[j].0) as f64;\n                let dy = (c[i].1 - c[j].1) as f64;\n                let distance = (dx * dx + dy * dy).sqrt();\n                let sum_radius = (c[i].2 + c[j].2) as f64;\n                if sum_radius >= distance {\n                    graph[i].push(j);\n                    graph[j].push(i);\n                }\n            }\n        }\n\n        !(bfs(&graph, nc, nc + 1, nc + 2, nc + 4) || bfs(&graph, nc + 3, nc + 2, nc + 1, nc + 4))\n    }\n}\n",
    "submit_ts": "1722138833",
    "subm_id": "1335800876"
}