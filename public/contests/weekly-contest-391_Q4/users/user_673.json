{
    "username": "Siddharth1411",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int>s(n), d(n);\n        multiset<int>sum, diff;\n        for(int i = 0; i < n; i++){\n            s[i] = points[i][0] + points[i][1];\n            d[i] = points[i][0] - points[i][1];\n            sum.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][0] - points[i][1]);\n        }\n        int min_max = INT_MAX;\n        for(int i = 0; i < n; i++){\n            sum.erase(sum.find(s[i]));\n            diff.erase(diff.find(d[i]));\n            int sum_first = *(sum.begin());\n            int sum_sec = *(--sum.end());\n            int diff_f = *(diff.begin());\n            int diff_s = *(--diff.end());\n            min_max = min(min_max, max(sum_sec - sum_first, diff_s - diff_f));\n            sum.insert(s[i]);\n            diff.insert(d[i]);\n        }\n        return min_max;\n    }\n};"
}