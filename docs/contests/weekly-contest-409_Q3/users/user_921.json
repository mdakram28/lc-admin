{
    "username": "mot882000",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n     \n        Set<Integer> set = new HashSet<Integer>();\n        for(int i = 0; i < n; i++) set.add(i);\n        \n        int next[] = new int[n];\n        for(int i = 0; i < n-1; i++) next[i] = i+1;\n        // for(int j = 0; j < next.length; j++) System.out.print(next[j] + \" \"); System.out.println();\n        int result[] = new int[queries.length];\n        for(int i = 0; i < queries.length; i++) {\n            int a = queries[i][0];\n            int b = queries[i][1];\n            if(!set.contains(a)) {\n                result[i] = set.size()-1;\n                continue;\n            }\n            if ( next[a] > b ) {\n                result[i] = set.size()-1;\n                // System.out.println(\"continue\");\n            } else{\n                // System.out.println(next[a] + \" \" + (b-1));\n                for(int j = next[a]; j <= b-1; j++) set.remove(j);    \n                next[a] = b;\n            }\n            // System.out.println(set);\n            // for(int j = 0; j < next.length; j++) System.out.print(next[j] + \" \"); System.out.println();\n            \n            result[i] = set.size()-1;\n        }\n     \n     \n        return result;\n    }\n    \n\n}",
    "submit_ts": "1722742033",
    "subm_id": "1343759372"
}