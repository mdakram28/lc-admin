{
    "username": "Jatin Sood",
    "submission": "class Solution {\npublic:\n\n    long long maximumValueSum(vector<vector<int>>& board, int i, int r1, int r2, vector<vector<vector<long long>>>& dp) {\n        int n = board.size();\n        int m = board[0].size();\n        if(i == n) return -1e15;\n        long long ans = -1e15;\n\n        if(dp[i][r1+1][r2+1] != -1e15) return dp[i][r1+1][r2+1];\n\n        //case1\n        if(r1 != -1 && r2 != -1) {\n            for(int j = 0; j < m; ++j) {\n                if(j != r1 && j != r2) ans = max(ans, (long long)board[i][j]);\n            }\n            ans = max(ans, maximumValueSum(board, i+1, r1, r2, dp));\n        }\n\n        //case2\n        else if(r1 != -1) {\n            for(int j = 0; j < m; ++j) {\n                if(j != r1) ans = max(ans, maximumValueSum(board, i+1, r1, j, dp) + board[i][j]);\n            }\n            ans = max(ans, maximumValueSum(board, i+1, r1, r2, dp));\n        }\n\n        //case3\n        else{\n            for(int j = 0; j < m; ++j) {\n                ans = max(ans, maximumValueSum(board, i+1, j, r2, dp) + board[i][j]);\n            }\n            ans = max(ans, maximumValueSum(board, i+1, r1, r2, dp));\n        }\n\n        dp[i][r1+1][r2+1] = ans;\n        return ans;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<vector<long long>>> dp(n, vector<vector<long long>>(m+1, vector<long long>(m+1, -1e15)));\n        return maximumValueSum(board, 0, -1, -1, dp);\n        \n    }\n};",
    "submit_ts": "1723908181",
    "subm_id": "1359141647"
}