{
    "username": "kusagra18",
    "submission": "#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        unordered_map<long long, long long> previousResults;\n        \n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> currentResults;\n            \n            if (nums[i] == k) {\n                ++count;\n            }\n                currentResults[nums[i]] = 1;\n            \n            \n            for (auto& [val, freq] : previousResults) {\n                long long newAndResult = val & nums[i];\n                \n                if (newAndResult == k) {\n                    count += freq;\n                }\n                    currentResults[newAndResult] += freq;\n                }\n            \n            \n            previousResults = currentResults;\n        }\n        \n        return count;\n    }\n};\n",
    "submit_ts": "1720280549",
    "subm_id": "1311793520"
}