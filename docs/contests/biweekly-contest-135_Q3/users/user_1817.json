{
    "username": "muhamedaashiq",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int maxOccurence = 0, n = nums.size();\n\n        unordered_map<int, int> counter;\n\n        for (int i = 0; i < (n / 2); i++) {\n            maxOccurence = max(++counter[abs(nums[i] - nums[n - i - 1])],\n             maxOccurence);\n        }\n        int candidate = INT_MAX, secondMax = 0;\n        for (auto it: counter) {\n            if (it.second == maxOccurence) {\n                candidate = min(it.first, candidate);\n            } else {\n                secondMax = max(it.second, secondMax);\n            }\n        }\n\n        int candidate2 = INT_MAX;\n        for (auto it: counter) {\n            if (it.second == secondMax) {\n                candidate2 = min(it.first, candidate);\n            }\n        }\n\n        \n\n        return min(getChanges(nums, candidate, n, k), \n        getChanges(nums, candidate2, n, k));\n        \n    }\n\n    int getChanges(vector<int>& nums, int candidate, int n, int k) {\n        int changes = 0;\n        for (int i = 0; i < (n / 2); i++) {\n            if (abs(nums[i] - nums[n - i - 1]) == candidate) {\n                continue;\n            } else {\n                if (max(nums[i], nums[n - i - 1]) >= candidate || k - min(nums[i], nums[n - i - 1]) >= candidate) {\n                    changes++;\n                } else {\n                    changes += 2;\n                }\n            }\n        }\n        return changes;\n    }\n};",
    "submit_ts": "1721489249",
    "subm_id": "1327447529"
}