{
    "username": "verma_aakash",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        long ans = 0;\n        int[] diff = new int[nums.length];\n        int max = Integer.MIN_VALUE;\n        int min = Integer.MAX_VALUE;\n\n        for (int i = 0 ; i < nums.length ; i++){\n            diff[i] = target[i] - nums[i];\n        }\n\n        int i = 0;\n        int j = 0;\n        while(i < nums.length){\n            j = 0;\n            min = Integer.MAX_VALUE;\n            max = Integer.MIN_VALUE;\n\n            while(i < nums.length && diff[i] == 0){\n                i++;\n            }\n\n            while(i+j < nums.length && diff[i+j] > 0){\n                min = Math.min(diff[i+j], min);\n                j++;\n            }\n            j = 0;\n            while(i+j < nums.length && diff[i+j] > 0){\n                diff[i+j] -= min;\n                j++;\n            }\n            if(j > 0){\n                ans += min;\n            }\n            // System.out.println( ans);\n\n            j = 0;\n            while(i+j < nums.length && diff[i+j] < 0){\n                max = Math.max(diff[i+j], max);\n                j++;\n            }\n            j = 0;\n            while(i+j < nums.length && diff[i+j] < 0){\n                diff[i+j] -= max;\n                j++;\n            }\n            if (j > 0){\n                ans -= max;\n            }\n            // System.out.println( ans);\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721533374",
    "subm_id": "1328007538"
}