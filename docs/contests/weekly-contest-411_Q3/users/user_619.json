{
    "username": "Anupam Shah",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        int req = (n + 1) / 2;\n        StringBuilder ans = new StringBuilder();\n\n        int[] dp2 = new int[n + 2];\n        for (int i = 0; i <= n + 1; i++) {\n            if (i == 0) dp2[i] = 1 % k;\n            else dp2[i] = (dp2[i - 1] * 10) % k;\n        }\n\n        int[][][] dp = new int[n][k][k];\n        for (int[][] arr2D : dp) {\n            for (int[] arr1D : arr2D) {\n                Arrays.fill(arr1D, -1);\n            }\n        }\n\n        int t = n % 2;\n        trace(0, 0, 0, t, req, k, ans, dp2, dp);\n\n        StringBuilder ans2 = new StringBuilder(ans);\n        if (n % 2 == 0) {\n            ans2.reverse();\n            return ans.toString() + ans2.toString();\n        } else {\n            ans2.deleteCharAt(ans2.length() - 1);\n            ans2.reverse();\n            return ans.toString() + ans2.toString();\n        }\n    }\n\n    private int go(int ind, int mod, int mod2, int t, int n, int k, int[] dp2, int[][][] dp) {\n        if (ind >= (n - 1)) {\n            if (t == 0) {\n                for (int i = 9; i >= 0; i--) {\n                    int nm = mod * 10 + i;\n                    int modd2 = ((i % k * dp2[ind]) % k + mod2) % k;\n                    if (((nm % k * dp2[n]) + (modd2 % k)) % k == 0)\n                        return 1;\n                }\n            } else {\n                for (int i = 9; i >= 0; i--) {\n                    int nm = mod * 10 + i;\n                    if (((nm % k * dp2[n - 1]) + (mod2 % k)) % k == 0)\n                        return 1;\n                }\n            }\n            return 0;\n        }\n        if (dp[ind][mod][mod2] != -1) return dp[ind][mod][mod2];\n\n        int ans = 0;\n        if (t == 0) {\n            for (int i = 9; i >= 0; i--) {\n                int mm = ((i % k * dp2[ind]) % k + mod2) % k;\n                if (go(ind + 1, (mod * 10 + i) % k, mm, t, n, k, dp2, dp) == 1) {\n                    ans = 1;\n                    break;\n                }\n            }\n        } else {\n            for (int i = 9; i >= 0; i--) {\n                int mm = ((i % k * dp2[ind]) % k + mod2) % k;\n                if (go(ind + 1, (mod * 10 + i) % k, mm, t, n, k, dp2, dp) == 1) {\n                    ans = 1;\n                    break;\n                }\n            }\n        }\n        return dp[ind][mod][mod2] = ans;\n    }\n\n    private void trace(int ind, int mod, int mod2, int t, int n, int k, StringBuilder ans, int[] dp2, int[][][] dp) {\n        if (ind >= (n - 1)) {\n            if (t == 0) {\n                for (int i = 9; i >= 0; i--) {\n                    int nm = mod * 10 + i;\n                    int modd2 = ((i % k * dp2[ind]) % k + mod2) % k;\n                    if (((nm % k * dp2[n]) + (modd2 % k)) % k == 0) {\n                        ans.append((char) ('0' + i));\n                        return;\n                    }\n                }\n            } else {\n                for (int i = 9; i >= 0; i--) {\n                    int nm = mod * 10 + i;\n                    if (((nm % k * dp2[n - 1]) + (mod2 % k)) % k == 0) {\n                        ans.append((char) ('0' + i));\n                        return;\n                    }\n                }\n            }\n            return;\n        }\n\n        if (t == 0) {\n            for (int i = 9; i >= 0; i--) {\n                int mm = ((i % k * dp2[ind]) % k + mod2) % k;\n                if (go(ind + 1, (mod * 10 + i) % k, mm, t, n, k, dp2, dp) == 1) {\n                    ans.append((char) ('0' + i));\n                    trace(ind + 1, (mod * 10 + i) % k, mm, t, n, k, ans, dp2, dp);\n                    break;\n                }\n            }\n        } else {\n            for (int i = 9; i >= 0; i--) {\n                int mm = ((i % k * dp2[ind]) % k + mod2) % k;\n                if (go(ind + 1, (mod * 10 + i) % k, mm, t, n, k, dp2, dp) == 1) {\n                    ans.append((char) ('0' + i));\n                    trace(ind + 1, (mod * 10 + i) % k, mm, t, n, k, ans, dp2, dp);\n                    break;\n                }\n            }\n        }\n    }\n}\n",
    "submit_ts": "1723952599",
    "subm_id": "1359800069"
}