{
    "username": "wait_watch",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<long long>diff(n);\n        map<int,long long>m;\n        long long ans =0;\n        for(int i=0;i<nums.size();i++){\n            diff[i] = target[i]-nums[i];\n            if(diff[i]!=0)\n            m[i]= diff[i];\n        }\n        auto it = m.begin();\n        while(!m.empty()){\n            it = m.begin();\n            int index = it->first;\n            int store = index;\n         //  cout<<\"index \"<<index<<endl;\n            if(m[index]>0){\n                 long long mn = INT_MAX;\n                while(index < n && m.count(index) && m[index]>0){\n                    mn = min(mn, m[index]);\n                    index++;\n                }\n               //cout<<\"last index postive \"<<index<<\" mn \"<<mn<<endl;\n                index = store;\n                while(index<n && m.count(index) && m[index]>0){\n                    m[index]-=mn;\n                    if(m[index]==0)\n                        m.erase(index);\n                    index++;\n                }\n                ans = ans+mn;\n            }else{\n                long long mx = INT_MIN;\n                while(index<n && m.count(index) && m[index]<0){\n                    mx = max(mx, m[index]);\n                    index++;\n                }\n                //  cout<<\"last index negative \"<<index<<\" mx \"<<mx<<endl;\n                index = store;\n                while(index<n && m.count(index) && m[index]<0){\n                    m[index]-=mx;\n                    if(m[index]==0)\n                        m.erase(index);\n                    index++;\n                }\n                ans=ans+abs(mx);\n            }\n           // cout<<ans<<\" \"<<m.size()<<endl;\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1721534075",
    "subm_id": "1328022968"
}