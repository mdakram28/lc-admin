{
    "username": "halllllllis",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\n#define     ll              long long int\n#define     IOS             ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define\t\tvt\t\t\t\tvector<ll>v;\n#define\t\tcYes\t\t\tcout<<\"YES\"<<'\\n';\n#define\t\tcNo\t\t\t\tcout<<\"NO\"<<'\\n';\n#define     INPUT           int t;cin>>t;while(t--)\n#define     vl              vector<ll>\n#define     pii             pair<int,int>\n#define     pll             pair<ll,ll>\n#define     pb              push_back\n#define     F               first\n#define     S               second\n#define     forx3(x, start, stop, step) for (long long x = start; x < (long long)(stop); x += step)\n#define     forx(x, start, stop) forx3(x, start, stop, 1) \n#define     forx2(x, stop) forx(x, 0, stop)\n#define     forr(x,start,stop)  for (long long x = start; x >= (long long)(stop); x -= 1)\n#define     all(a) a.begin(), a.end()\n#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nvoid err(istream_iterator<string> it) {\n\tcout << '\\n';\n}\ntemplate<typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n\tcout << *it << \" = \" << a << ' ';\n\terr(++it, args...);\n}\nstatic constexpr ll MOD  = 1e9+7;\n\nll modPow(ll base, ll exp, ll mod) {\n    ll res = 1;\n    base %= mod;\n    while (exp > 0) {\n        if (exp & 1) res = (res * base) % mod;\n        exp >>= 1;\n        base = (base * base) % mod;\n    }\n    return res;\n}\n// dp[i][j] = ways of achieveing monotonic when picking ith element to be j for arr1\n// dp[i][j] = sum of dp[i - 1][k] for k = [0 ....j]\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int sz = nums.size();\n        vector<vector<ll>> dp(sz, vector<ll>(52, 0));\n        vector<vector<ll>> prefix(sz + 1, vector<ll>(52, 0));\n        forx(i, 0, nums[0] + 1) {\n            dp[0][i] = 1;\n            prefix[0][i + 1] = prefix[0][i] + dp[0][i];\n        }\n\n        // val2 <= prevval2 <= nums[i - 1]\n        // prevval1 = nums[i - 1] - prevval2\n        // when prevval2 == nums[i - 1] => prevval1 = 0\n        // when prevval2 == val2 => prevval1 = nums[i - 1] - val2\n        forx(i, 1, sz) {\n            forx(j, 0, nums[i] + 1) {\n                int val2 = nums[i] - j;\n                int minp1 = 0;\n                int maxp1 = min(int(j), nums[i-1] - val2);\n                //error(j, minp1, maxp1);\n                if(maxp1 >= minp1) {\n                    dp[i][j] = (dp[i][j] + prefix[i - 1][maxp1 + 1] - prefix[i - 1][minp1]) % MOD;\n                }\n            }\n            forx(j, 0, nums[i] + 1) {\n                prefix[i][j + 1] = (prefix[i][j] + dp[i][j]) % MOD;\n            }\n        }\n        ll res = 0;\n        forx(i, 0, nums[sz - 1] + 1) {\n            res = (res + dp[sz - 1][i]) % MOD;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723348301",
    "subm_id": "1351615527"
}