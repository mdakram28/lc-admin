{
    "username": "Saul Maldonado",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int R = board.size(), C = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        vector<vector<long long>> rowTop3(R, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> rowCols(R, vector<int>(3, -1));\n\n        for (int r = 0; r < R; ++r) {\n            vector<pair<long long, int>> valsCols;\n            for (int c = 0; c < C; ++c) {\n                valsCols.push_back({board[r][c], c});\n            }\n            sort(valsCols.begin(), valsCols.end(),\n                 greater<pair<long long, int>>());\n            for (int k = 0; k < 3 && k < C; ++k) {\n                rowTop3[r][k] = valsCols[k].first;\n                rowCols[r][k] = valsCols[k].second;\n            }\n        }\n\n        for (int r1 = 0; r1 < R; ++r1) {\n            for (int r2 = r1 + 1; r2 < R; ++r2) {\n                for (int r3 = r2 + 1; r3 < R; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (rowCols[r2][j] == rowCols[r1][i]) {\n                                continue;\n                            }\n                            for (int k = 0; k < 3; ++k) {\n                                if (rowCols[r3][k] == rowCols[r1][i] ||\n                                    rowCols[r3][k] == rowCols[r2][j]) {\n\n                                    continue;\n                                }\n                                maxSum = max(maxSum, rowTop3[r1][i] +\n                                                         rowTop3[r2][j] +\n                                                         rowTop3[r3][k]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723910397",
    "subm_id": "1359229330"
}