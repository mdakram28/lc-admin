{
    "username": "chi-yue-dian",
    "submission": "int maxDist(vector<vector<int>>& a, int pt) {\n    int INF = 1e9;\n    \n    int ans = 0;\n    vector<int> m(10);\n    int n = a.size(); int d = a[0].size();\n    \n    for(int k = 0; k < (1 << (d - 1)); k ++ ) {\n        int maxa = -INF, minb = INF;\n        for(int i = 1; i <= d; i ++ ) {\n            m[i] = (k & (1 << (i - 1))) ? 1 : 0;\n        }\n        for(int i = 0; i < n; i++) {\n            if (i == pt) continue;\n            \n            int suma = 0;\n            for(int j = 0; j < d; j ++ ) {\n                suma += a[i][j] * (1 - m[j] * 2);\n            }\n            maxa = max(maxa, suma);\n            minb = min(minb, suma);\n        }\n        ans = max(ans, maxa - minb);\n    }\n    \n    return ans;\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int INF = 1e9;\n\n        vector<int> m(10);\n        int n = points.size(); int d = points[0].size();\n\n        int ans = 0;\n        int apt = n; int bpt = n;\n        for(int k = 0; k < (1 << (d - 1)); k ++ ) {\n            int maxa = -INF, minb = INF;\n            int apt_t = n, bpt_t = n;\n            for(int i = 1; i <= d; i ++ ) {\n                m[i] = (k & (1 << (i - 1))) ? 1 : 0;\n            }\n            for(int i = 0; i < n; i++) {\n                int suma = 0;\n                for(int j = 0; j < d; j ++ ) {\n                    suma += points[i][j] * (1 - m[j] * 2);\n                }\n                if (suma > maxa) {\n                    apt_t = i;\n                    maxa = max(maxa, suma);\n                }\n                if (suma < minb) {\n                    bpt_t = i;\n                    minb = min(minb, suma);\n                }\n            }\n            if (maxa - minb > ans) {\n                apt = apt_t; bpt = bpt_t;\n                ans = max(ans, maxa - minb);\n            }\n        }\n        \n        int res = min(maxDist(points, apt), maxDist(points, bpt));\n        return res;\n    }\n};"
}