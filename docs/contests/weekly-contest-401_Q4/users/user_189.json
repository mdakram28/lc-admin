{
    "username": "ParmeetD",
    "submission": "class Solution {\npublic:\n    void find_best(vector<int>& rv, int loc, int bound, int cur, int& best) {\n        if (loc == -1) return;\n        if (cur + bound - 1 <= best) return;\n        \n        if (rv[loc] < bound) {\n            int cand = cur + rv[loc];\n            if (cand > best) best = cand;\n            find_best(rv, loc - 1, min(rv[loc], bound-rv[loc]), cand, best);\n        }        \n        find_best(rv, loc - 1, bound, cur, best);\n    }\n    \n    int maxTotalReward(vector<int>& rv) {\n        sort(rv.begin(), rv.end());\n        unique(rv.begin(), rv.end());\n        \n        int n = rv.size();\n        if (n == 1) return rv[n-1];\n        \n        int ans = rv[n-1];\n        find_best(rv, n-2, rv[n-1], rv[n-1], ans);\n        return ans;\n    }\n};",
    "submit_ts": 1717902284.0
}