{
    "username": "krishnaa121",
    "submission": "class Solution { \npublic: \n  int numberOfAlternatingGroups(vector<int>& colors, int k) {  \n        int n = colors.size();  \n        int counter = 0;  \n  \n        if (k == 1) {  \n            \n            return n;  \n        }  \n  \n        int altlen = 1;  \n        int i = 1;  \n        while (i < n + k - 1) {  \n\n            int curr = i;  \n\n            int prev = i - 1;  \n  \n             \n            if (curr >= n) {  \n                curr -= n;  \n            }  \n            if (prev >= n) {  \n                prev -= n;  \n            }  \n  \n            if (colors[curr] != colors[prev]) {  \n                ++altlen;  \n            } else {  \n                altlen = 1;  \n            }  \n  \n            \n            if (altlen >= k) {  \n                ++counter;  \n            }  \n  \n            ++i;  \n        }  \n  \n        return counter;  \n    } \n};",
    "submit_ts": "1720280998",
    "subm_id": "1311809546"
}