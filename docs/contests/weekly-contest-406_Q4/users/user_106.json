{
    "username": "abhishekkumar60818",
    "submission": "import java.util.*;\n\npublic class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        // Combine both cuts into a single list of pairs (cost, type)\n        List<int[]> cuts = new ArrayList<>();\n        for (int cost : horizontalCut) {\n            cuts.add(new int[]{cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            cuts.add(new int[]{cost, 'V'});\n        }\n        \n        // Sort cuts by cost in descending order\n        cuts.sort((a, b) -> b[0] - a[0]);\n        \n        int horizontalSegments = 1; // Initially there is 1 horizontal segment\n        int verticalSegments = 1; // Initially there is 1 vertical segment\n        long totalCost = 0;\n        \n        // Process each cut\n        for (int[] cut : cuts) {\n            int cost = cut[0];\n            char type = (char) cut[1];\n            if (type == 'H') {\n                // Cut along horizontal line, it affects vertical segments\n                totalCost += (long) cost * verticalSegments;\n                horizontalSegments++;\n            } else {\n                // Cut along vertical line, it affects horizontal segments\n                totalCost += (long) cost * horizontalSegments;\n                verticalSegments++;\n            }\n        }\n        \n        return totalCost;\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int m = 3, n = 2;\n        int[] horizontalCut = {1, 3};\n        int[] verticalCut = {5};\n        System.out.println(solution.minimumCost(m, n, horizontalCut, verticalCut)); // Output: 13\n\n        int m2 = 2, n2 = 2;\n        int[] horizontalCut2 = {7};\n        int[] verticalCut2 = {4};\n        System.out.println(solution.minimumCost(m2, n2, horizontalCut2, verticalCut2)); // Output: 15\n    }\n}\n",
    "submit_ts": "1720925028",
    "subm_id": "1320240147"
}