{
    "username": "\u5361\u5854\u5229\u4e9a\u7684\u9a91\u58eb",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size(), m = queries.size();\n\n        vector<int> num(2, 0), left(n);\n        for (int i = 0, j = 0; i < n; i ++ ) {\n            int now = s[i] - '0';\n            num[now] ++ ;\n\n            while (num[0] > k && num[1] > k) {\n                int now = s[j ++ ] - '0';\n                num[now] -- ;\n            }\n\n            left[i] = j;\n        }\n        \n        vector<long long> sum(n + 1, 0);\n        for (int i = 0; i < n; i ++ ) {\n            sum[i + 1] = sum[i] + left[i];\n        }\n\n        vector<long long> ans(m, 0);\n        for (int i = 0; i < m; i ++ ) {\n            int l = queries[i][0], r = queries[i][1];\n\n            long long now = (long long)(r + l + 2) * (r - l + 1) / 2 - (sum[r + 1] - sum[l]);\n\n            int fl = l, fr = r;\n            while (fl < fr) {\n                int mid = fl + fr + 1 >> 1;\n\n                if (left[mid] <= l - 1) {\n                    fl = mid;\n                }\n                else {\n                    fr = mid - 1;\n                }\n            }\n\n            now = now - (l * (fl - l + 1) - (sum[fl + 1] - sum[l]));\n\n            ans[i] = now;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723953291",
    "subm_id": "556416656"
}