{
    "username": "Dylan Smith",
    "submission": "typedef long long ll;\n\n#define pb push_back\n#define sz(x) (int)x.size()\n#define all(x) begin(x),end(x)\n#define lb(x,y) lower_bound(all(x),y)-begin(x)\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int z = 0, o = 0, j = -1;\n        vector<int> nxt(sz(s));\n        for (int i = 0; i < sz(s); i++) {\n            while (j + 1 < sz(s) && (z <= k || o <= k)) {\n                j++;\n                if (s[j] == '0') z++;\n                else o++;\n            }\n            nxt[i] = z <= k || o <= k ? sz(s) : j;\n            if (s[i] == '0') z--;\n            else o--;\n        }\n        vector<ll> pre(sz(s), 0);\n        int N = sz(s);\n        for (int i = 0; i < N; i++) {\n            pre[i] = nxt[i] - i;\n            if (i > 0) pre[i] += pre[i - 1];\n        }\n        vector<ll> res;\n        for (auto &p : queries) {\n            int l = p[0], r = p[1];\n            int m = lb(nxt, r + 1);\n            m = max(m, l);\n            ll n = (m == 0 ? 0 : pre[m - 1]) - (l == 0 ? 0 : pre[l - 1]);\n            if (m <= r) {\n                n += (ll)(r - m + 1) * (r - m + 2) / 2;\n            }\n            res.pb(n);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723951384",
    "subm_id": "1359770245"
}