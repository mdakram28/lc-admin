{
    "username": "Dk95_letsgo",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        \n        m = len(grid)\n        n = len(grid[0])\n        \n        if m * n < 4:\n            v = 0\n            for x in range(m):\n                for y in range(n):\n                    v += 1 if grid[x][y] else 0\n            return v\n        \n        ones = 0\n        diff = 0\n        k = 0\n        if m % 2 :\n            for y in range(n//2):\n                if grid[m//2][y] != grid[m//2][n-1-y]:\n                    diff += 1\n                else:\n                    ones += 2 if grid[m//2][y] else 0\n        if n % 2:\n            for x in range(m//2):\n                if grid[x][n//2] != grid[m-1-x][n//2]:\n                    diff += 1\n                else:\n                    ones += 2 if grid[x][n//2] else 0\n        if m % 2 and n % 2:\n            k = 1 if grid[m//2][n//2] else 0\n        \n        v = 0\n        \n        for x in range(m//2):\n            for y in range(n//2):\n                s = grid[x][y] + grid[x][n-1-y] + grid[m-1-x][y] + grid[m-1-x][n-1-y]\n                v += min(4-s,s)\n        if k:\n            \n            ones %= 4\n            if ones == 0:\n                return v + diff + 1\n            else:\n                return v + max(diff, min((diff + ones)%4, 4 - (diff + ones)%4 )) + 1\n            \n        else:\n            ones %= 4\n            if ones == 0:\n                return v + diff\n            else:\n                return v + max(diff, min((diff + ones)%4, 4 - (diff + ones)%4 ))\n        \n        \n        \n        \n                ",
    "submit_ts": "1722698537",
    "subm_id": "1343183839"
}