{
    "username": "philippark271",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int h_off = 1;\n        int v_off = 1;\n\n        priority_queue<vector<int>> pq;\n\n        for (int i = 0; i < m-1; i++){\n            pq.push({horizontalCut[i], 0});\n\n        }\n\n        for (int i = 0; i < n-1; i++){\n            pq.push({verticalCut[i], 1});\n        }\n\n        long long ret = 0;\n\n        while (!pq.empty()){\n            vector<int> temp = pq.top();\n            pq.pop();\n\n            if (temp[1] == 0){\n                ret += temp[0] * h_off;\n                v_off++;\n            }\n            else{\n                ret += temp[0] * v_off;\n                h_off++;\n            }\n\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1720925893",
    "subm_id": "1320269572"
}