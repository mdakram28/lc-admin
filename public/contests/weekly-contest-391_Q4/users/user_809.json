{
    "username": "nipun753",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int n = points.size();\n        multiset < int > sum;\n        multiset < int > diff;\n        for (int i = 0  ; i < points.size(); i++){\n            sum.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][1] - points[i][0]);\n        }\n        int ans = INT_MAX;\n        \n        for (int i = 0 ;i < n ; i++){\n            sum.erase(sum.find(points[i][0] + points[i][1]));\n            diff.erase(diff.find(points[i][1] - points[i][0]));\n            \n            auto x = (*sum.begin());\n            auto y = (*sum.rbegin());\n            auto u = (*diff.begin());\n            auto v = (*diff.rbegin());\n            ans =min(ans , max(y - x , v - u));\n            sum.insert(points[i][0] + points[i][1]);\n            diff.insert(points[i][1] - points[i][0]);\n        }\n        return ans;\n    }\n};"
}