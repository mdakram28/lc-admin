{
    "username": "vijaypurohit",
    "submission": "class TrieNode{\n    public: \n    vector<TrieNode*> children;\n    bool isEnd = false;\n    int val = INT_MAX;\n    TrieNode(): children(26, nullptr) {\n    };\n};\nclass Trie{\n    public:\n    TrieNode* root;\n    Trie(){\n        root = new TrieNode();\n    }\n    \n    void insert(const string& word, int cost){\n        TrieNode* ptr = root;\n        for(const char& ch: word){\n            int k = ch-'a';\n            if(!ptr->children[k]){\n                ptr->children[k] = new TrieNode();\n            }\n            ptr = ptr->children[k];\n        }\n        ptr->val = min(ptr->val, cost);\n        ptr->isEnd = true;\n    }\n    \n    void search(int i, const string& target, vector<int>& mincost){\n        TrieNode* ptr = root;\n        for(int j=i; j<target.size(); j++){\n            int k = target[j] - 'a';\n            if(!ptr->children[k]) break;\n            ptr = ptr->children[k];\n            if(ptr->isEnd){\n                mincost[j+1] = min(mincost[j+1], mincost[i] + ptr->val);\n            }\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie tr;\n        for(int i=0; i< words.size() ; i++){\n            tr.insert(words[i], costs[i]);\n        }\n        \n        int n = target.size();\n        vector<int> mincost(n+1, INT_MAX);\n        mincost[0]=0;\n        \n        for(int i=0; i<n; i++){\n            if(mincost[i] == INT_MAX) continue;\n            tr.search(i, target, mincost);\n        }\n        \n        return mincost[n] == INT_MAX ? -1 : mincost[n];\n    }\n};",
    "submit_ts": "1720323593",
    "subm_id": "1312379330"
}