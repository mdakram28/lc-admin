{
    "username": "alkonaesc",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        def find_max(arr):\n            sm = [ [x+y, ind] for ind, (x,y) in enumerate(arr)]\n            df = [ [x-y, ind] for ind, (x,y) in enumerate(arr)]\n            \n            sm.sort()\n            df.sort()\n            \n            a1 = sm[-1][0] - sm[0][0]\n            a2 = df[-1][0] - df[0][0]\n            \n            if a1 >= a2:\n                return a1, (sm[-1][1], sm[0][1])\n            return a2, (df[-1][1], df[0][1])\n            \n        \n        mx = find_max(points)\n        \n        a1 = find_max([val for ind,val in enumerate(points) if ind != mx[1][0]])\n        a2 = find_max([val for ind,val in enumerate(points) if ind != mx[1][1]])\n        \n        print(mx)\n        print(a1)\n        print(a2)\n        \n        return min(a1[0], a2[0])\n        "
}