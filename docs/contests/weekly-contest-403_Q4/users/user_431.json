{
    "username": "cloud-22",
    "submission": "\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        s = 0\n        n = len(grid)\n        m = len(grid[0])\n        for i in range(n):\n            for j in range(m):\n                s += grid[i][j]\n\n        @cache\n        def dfs1(t, b, l, r, cnt):\n            if t > b or t < 0:\n                return inf\n            if b < t or b >= n:\n                return inf\n            if l > r or l < 0:\n                return inf\n            if r < l or r >= m:\n                return inf\n            if cnt != 1:\n                ans = inf\n                for i in range(t, b + 1):\n                    for j in range(l, r + 1):\n                        for k in range(1, cnt):\n                            ans = min(dfs1(t, b, l, j, k) + dfs1(t, b, j + 1, r, cnt - k), ans)\n                            ans = min(dfs1(t, i, l, r, k) + dfs1(i + 1, b, l, r, cnt - k), ans)\n                return ans\n            else:\n                return dfs2(t, b, l, r)\n\n        @cache\n        def dfs2(t, b, l, r):\n            if t > b or t < 0:\n                return inf\n            if b < t or b >= n:\n                return inf\n            if l > r or l < 0:\n                return inf\n            if r < l or r >= m:\n                return inf\n            s = 0\n            for i in range(l, r + 1):\n                s += grid[t][i]\n            if s == 0:\n                return dfs2(t + 1, b, l, r)\n            s = 0\n            for i in range(l, r + 1):\n                s += grid[b][i]\n            if s == 0:\n                return dfs2(t, b - 1, l, r)\n            s = 0\n            for i in range(t, b + 1):\n                s += grid[i][l]\n            if s == 0:\n                return dfs2(t, b, l + 1, r)\n            s = 0\n            for i in range(t, b + 1):\n                s += grid[i][r]\n            if s == 0:\n                return dfs2(t, b, l, r - 1)\n            return (r - l + 1) * (b - t + 1)\n\n        return dfs1(0, n - 1, 0, m - 1, 3)",
    "submit_ts": 1719114451.0
}