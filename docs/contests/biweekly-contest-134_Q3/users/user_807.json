{
    "username": "jayant_dhidhi",
    "submission": "#include <vector>\n#include <algorithm>\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(std::vector<int>& a, int b) {\n        int c = 0;\n        int d = 0;\n        int e = 1;\n        int f = 0;\n\n        while (continueOuterLoop(e, a.size(), b, d)) {\n            int g = e;\n            int h = g % a.size();\n            while (continueInnerLoop(a, h, g, b)) {\n                g = updateTempJ(g);\n                h = g % a.size();\n            }\n\n            f += std::max(g - d - b + 1, 0);\n            d = g;\n            e = d + 1;\n        }\n\n        return f;\n    }\n\nprivate:\n    bool continueOuterLoop(int e, size_t size, int b, int d) {\n        return e < size + b && d < size;\n    }\n\n    bool continueInnerLoop(const std::vector<int>& a, int h, int g, int b) {\n        return a[h] != a[(h - 1 + a.size()) % a.size()] && g < a.size() + b - 1;\n    }\n\n    int updateTempJ(int g) {\n        return g + 1;\n    }\n};\n",
    "submit_ts": "1720279840",
    "subm_id": "1311767197"
}