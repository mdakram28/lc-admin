{
    "username": "sheldon-29",
    "submission": "class Solution {\n    int single(vector<vector<int>>& grid,int st,int end,int y_st,int y_end){\n        int m = grid.size();\n        int n = grid[0].size();\n        int xmn = m+1,ymn = m+1,xmx = 0,ymx = 0;\n        for(int i = st;i<=end;i++){\n            for(int j = y_st;j<=y_end;j++){\n                if(grid[i][j]){\n                    xmn = min(xmn,i);\n                    ymn = min(ymn,j);\n                    xmx = max(xmx,i);\n                    ymx = max(ymx,j);\n                }\n            }\n        }\n        return (xmx-xmn+1)*(ymx-ymn+1);\n    }\n    int two(vector<vector<int>>& grid,int st,int end,vector<int>&sum){\n        int m = grid.size();\n        int n = grid[0].size();\n        //\u9996\u5148\u8ba1\u7b97\u884c\n        int ans = 1000000;\n        for(int i = st;i<=end;i++){\n            if(sum[i] > 0 && sum[end]-sum[i] > 0){\n                ans = min(ans,single(grid,0,i,0,n-1)+single(grid,i+1,end,0,n-1));\n            }\n        }\n        vector<int>sum_col(n,0);\n        int cnt = 0;\n        for(int i = 0;i<n;i++){\n            for(int j = st;j<=end;j++){\n                cnt += grid[j][i];\n            }\n            sum_col[i] = cnt;\n        }\n        for(int i = 0;i<n;i++){\n            if(sum_col[i] > 0 && sum_col[n-1]-sum_col[i] > 0){\n                ans = min(ans,single(grid,st,end,0,i)+single(grid,st,end,i+1,n-1));\n            }\n        }\n        return ans;\n    }\n    int func(vector<vector<int>>& grid){\n        int m = grid.size();\n        int n = grid[0].size();\n        vector<int>sum(m,0);\n        int cnt = 0;\n        for(int i = 0;i<m;i++){\n            for(int j = 0;j<n;j++){\n                cnt += grid[i][j];\n            }\n            sum[i] = cnt;\n        }\n        int ans = m*n;\n        for(int i = 0;i<m;i++){\n            if(sum[i] >= 2 && sum[m-1]-sum[i] > 0){\n                ans = min(ans,two(grid,0,i,sum)+single(grid,i+1,m-1,0,n-1));\n                //cout<<ans<<\" \"<<two(grid,0,i,sum)<<\" \"<<single(grid,i+1,m-1,0,n-1)<<endl;\n            }\n            \n            if(sum[i] > 0 && sum[m-1]-sum[i] >= 2){\n                ans = min(ans,two(grid,i+1,m-1,sum)+single(grid,0,i,0,n-1));\n            }\n        }\n        \n        return ans;\n    }\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        vector<int>gg(m,0);\n        vector<vector<int>>ggg(n,gg);\n        for(int i = 0;i<m;i++){\n            for(int j = 0;j<n;j++){\n                ggg[j][i] = grid[i][j];\n            }\n        }\n        int ret = func(grid);\n        //cout<<ret<<endl;\n        ret = min(ret,func(ggg));\n        return ret;\n    }\n};",
    "submit_ts": "1719113078",
    "subm_id": "541395703"
}