{
    "username": "Wen Chen",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> a(n);\n        for(int i = 0; i < n; ++i) {\n            a[i] = s[i] == '0';\n        }\n        vector<int> pref(n + 1);\n        pref[0] = 0;\n        for(int i = 0; i < n; ++i) {\n            pref[i + 1] = pref[i] + a[i]; \n        }\n        vector<int> ed(n);\n        for(int i = 0; i < n; ++i) {\n            int tot = pref[n] - pref[i];\n            int len = n - i;\n            int ones = tot;\n            int zeros = len - tot;\n            if(ones <= k || zeros <= k) {\n                ed[i] = n - 1;\n                continue;\n            }\n            int l = i + 1, r = n - 1;\n            while(l < r) {\n                int m = (l + r + 1) / 2;\n                tot = pref[m + 1] - pref[i];\n                len = m - i + 1;\n                ones = tot;\n                zeros = len - tot;\n                if(ones <= k || zeros <= k) {\n                    l = m;\n                } else {\n                    r = m - 1;\n                }\n            }\n            ed[i] = l;\n        }\n        long long psum[n + 1];\n        psum[0] = 0;\n        vector<long long> res;\n        for(int i = 1; i <= n; ++i) {\n            psum[i] = psum[i - 1] + ed[i - 1] - (i - 1) + 1;\n        }\n        for(auto q : queries) {\n            int l = q[0], r = q[1];\n            //binsearch for first place where r < ed\n            int lb = upper_bound(ed.begin() + l, ed.begin() + r + 1, r) - ed.begin() - 1;\n            long long cur = 0;\n            int len = r - lb;\n            cur = ((long long) len) * (len + 1) / 2;\n            cur += psum[lb + 1] - psum[l];\n            res.push_back(cur);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723952151",
    "subm_id": "1359789190"
}