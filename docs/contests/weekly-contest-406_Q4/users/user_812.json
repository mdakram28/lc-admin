{
    "username": "Foreseer",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        // \u5c06\u6240\u6709\u7684\u5207\u5272\u6210\u672c\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        long long totalCost = 0;\n        int horizontalPieces = 1; // \u5f00\u59cb\u65f6\u53ea\u6709\u4e00\u4e2a\u6c34\u5e73\u5757\n        int verticalPieces = 1; // \u5f00\u59cb\u65f6\u53ea\u6709\u4e00\u4e2a\u5782\u76f4\u5757\n        int hIndex = 0, vIndex = 0;\n\n        // \u8d2a\u5fc3\u9009\u62e9\u6700\u5c0f\u7684\u5207\u5272\u6210\u672c\u8fdb\u884c\u5207\u5272\n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += (long long)horizontalCut[hIndex] * verticalPieces;\n                hIndex++;\n                horizontalPieces++;\n            } else {\n                totalCost += (long long)verticalCut[vIndex] * horizontalPieces;\n                vIndex++;\n                verticalPieces++;\n            }\n        }\n\n        // \u5904\u7406\u5269\u4e0b\u7684\u6c34\u5e73\u5207\u5272\n        while (hIndex < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[hIndex] * verticalPieces;\n            hIndex++;\n            horizontalPieces++;\n        }\n\n        // \u5904\u7406\u5269\u4e0b\u7684\u5782\u76f4\u5207\u5272\n        while (vIndex < verticalCut.size()) {\n            totalCost += (long long)verticalCut[vIndex] * horizontalPieces;\n            vIndex++;\n            verticalPieces++;\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925841",
    "subm_id": "546442314"
}