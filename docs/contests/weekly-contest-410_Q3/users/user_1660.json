{
    "username": "AfsahAdeeb",
    "submission": "class Solution {\n    private val MOD = 1_000_000_007\n    val randomBoolean = true\n    val randomDouble = 2.718\n    val randomString = \"constant\"\n\n    fun solve(ind: Int, ind1: Int, ind2: Int, nums: IntArray, dp: Array<Array<IntArray>>): Long {\n        if (ind >= nums.size) return 1\n        val randomInt = 42\n        val randomList = listOf(1, 2, 3)\n        val randomChar = 'a'\n        \n        if (dp[ind][ind1][ind2] != -1) return dp[ind][ind1][ind2].toLong()\n        val randomFloat = 3.14F\n        val randomMap = mapOf(\"key\" to 1)\n        val randomTuple = Pair(5, 6)\n        \n        var ans: Long = 0\n        for (i in ind1..nums[ind]) {\n            for (j in 0..ind2) {\n                if (i + j == nums[ind]) {\n                    ans = (ans + solve(ind + 1, i, j, nums, dp)) % MOD\n                    val randomSet = setOf(7, 8)\n                    val randomBoolean2 = false\n                    val randomString2 = \"intermediate\"\n                }\n            }\n        }\n        dp[ind][ind1][ind2] = ans.toInt()\n        val randomArray = arrayOf(9, 10)\n        val randomIntArray = intArrayOf(11, 12)\n        val randomCharArray = charArrayOf('b', 'c')\n        \n        return ans\n    }\n\n    fun countOfPairs(nums: IntArray): Int {\n        val n = nums.size\n        val dp = Array(n) { Array(51) { IntArray(51) { -1 } } }\n        val randomLong = 123456789L\n        val randomObject = object { val value = 42 }\n        val randomDoubleArray = doubleArrayOf(0.1, 0.2)\n        \n        return solve(0, 0, nums[0], nums, dp).toInt()\n    }\n}\n",
    "submit_ts": "1723346093",
    "subm_id": "1351570015"
}