{
    "username": "leoyu0813",
    "submission": "class Solution {\ntemplate<typename T>\nstruct segtree {\n    vector<T> t;\n    int n;\n    segtree(int _n): n(_n) {\n        t.assign(2 * n, T());\n    }\n    void update(int p, T v){\n        for(t[p += n] = v; p >>= 1; )\n            t[p] = t[p<<1] + t[p<<1|1];\n    }\n    void add(int p, T v){\n        p += n;\n        t[p] = t[p] + v;\n        while(p >>= 1) t[p] = t[p<<1] + t[p<<1|1];\n    }\n    T query(int l, int r){\n        T cl = T(), cr = T();\n        for(l += n, r += n; l < r; l >>= 1, r >>= 1){\n            if(l&1) cl = cl + t[l++];\n            if(r&1) cr = t[--r] + cr;\n        }\n        return cl + cr;\n    }\n};\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size ();\n        segtree<int> seg(n);\n        for (int i = 1; i < n-1; ++i)\n            seg.update (i, nums [i] > nums[i-1] && nums[i] > nums[i+1]);\n        \n        vector<int> ans;\n        for (const vector<int>& q : queries)\n        {\n            if (q[0] == 1)\n            {\n                ans.push_back (seg.query(q[1]+1, q[2]));\n            }\n            else\n            {\n                int x = q[1];\n                nums [x] = q[2];\n                for (int i : {x-1, x, x + 1})\n                {\n                    if (i > 0 && i < n-1){\n                        seg.update (i, nums [i] > nums[i-1] && nums[i] > nums[i+1]);\n                    }\n                }\n            }\n        }\n        \n        return ans;\n        \n    }\n};",
    "submit_ts": 1718506711.0
}