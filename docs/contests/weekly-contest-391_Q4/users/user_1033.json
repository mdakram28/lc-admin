{
    "username": "tqc007",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n        ssum = [0] * n\n        ddif = [0] * n\n        maxsum_p = 0 # indicator for max sum position\n        minsum_p = 0 # indicator for min sum position\n        maxdif_p = 0\n        mindif_p = 0\n        max_sum = points[0][0] + points[0][1]\n        min_sum = points[0][0] + points[0][1]\n        max_dif = points[0][0] - points[0][1]\n        min_dif = points[0][0] - points[0][1]\n\n        for i in range(n):\n            ssum[i] = points[i][0] + points[i][1]\n            ddif[i] = points[i][0] - points[i][1]\n            if ssum[i] > max_sum:\n                max_sum = ssum[i]\n                maxsum_p = i\n            if ssum[i] < min_sum:\n                min_sum = ssum[i]\n                minsum_p = i\n            if ddif[i] > max_dif:\n                max_dif = ddif[i]\n                maxdif_p = i\n            if ddif[i] < min_dif:\n                min_dif = ddif[i]\n                mindif_p = i\n        \n        max_opt1 = ssum[maxsum_p] - ssum[minsum_p]\n        max_opt2 = ddif[maxdif_p] - ddif[mindif_p]\n        if  max_opt1 > max_opt2:\n            min_max_res = max_opt1\n            # remove maxsum_p\n            newsum = ssum[:maxsum_p] + ssum[maxsum_p+1:]\n            newdif = ddif[:maxsum_p] + ddif[maxsum_p+1:]\n            min_max_res = min(min_max_res, max(max(newsum) - min(newsum), \n                                               max(newdif) - min(newdif)))\n            # remove minsum_p\n            newsum = ssum[:minsum_p] + ssum[minsum_p+1:]\n            newdif = ddif[:minsum_p] + ddif[minsum_p+1:]\n            min_max_res = min(min_max_res, max(max(newsum) - min(newsum), \n                                               max(newdif) - min(newdif)))\n        else:\n            min_max_res = max_opt2\n            # remove maxdif_p\n            newsum = ssum[:maxdif_p] + ssum[maxdif_p+1:]\n            newdif = ddif[:maxdif_p] + ddif[maxdif_p+1:]\n            min_max_res = min(min_max_res, max(max(newsum) - min(newsum), \n                                               max(newdif) - min(newdif)))\n            # remove mindif_p\n            newsum = ssum[:mindif_p] + ssum[mindif_p+1:]\n            newdif = ddif[:mindif_p] + ddif[mindif_p+1:]\n            min_max_res = min(min_max_res, max(max(newsum) - min(newsum), \n                                               max(newdif) - min(newdif)))\n            \n        \n        return min_max_res\n\n            \n            \n            \n        "
}