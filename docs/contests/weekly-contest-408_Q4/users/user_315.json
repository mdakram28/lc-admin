{
    "username": "qn68",
    "submission": "from math import sqrt\nfrom collections import deque\n\nclass Solution:\n    def bfs(self, graph, start, target1, target2, nodes):\n        q = deque([start])\n        visited = [0] * (nodes + 4)\n        visited[start] = 1\n        \n        while q:\n            u = q.popleft()\n            for v in graph[u]:\n                if not visited[v]:\n                    q.append(v)\n                    visited[v] = 1\n        \n        return visited[target1] or visited[target2]\n\n    def canReachCorner(self, X, Y, circles2):\n        circles = [((circle[0], circle[1]), circle[2]) for circle in circles2]\n        graph = [[] for _ in range(len(circles2) + 4)]\n        cir_num = len(circles2)\n        \n        for i in range(cir_num):\n            x, y, r = circles[i][0][0], circles[i][0][1], circles[i][1]\n            if x <= r:\n                graph[cir_num].append(i)\n                graph[i].append(cir_num)\n            if X - x <= r:\n                graph[cir_num + 2].append(i)\n                graph[i].append(cir_num + 2)\n            if y <= r:\n                graph[cir_num + 1].append(i)\n                graph[i].append(cir_num + 1)\n            if Y - y <= r:\n                graph[cir_num + 3].append(i)\n                graph[i].append(cir_num + 3)\n            for j in range(i + 1, cir_num):\n                xj, yj, rj = circles[j][0][0], circles[j][0][1], circles[j][1]\n                d = sqrt((x - xj) ** 2 + (y - yj) ** 2)\n                tot_rad = r + rj\n                if tot_rad >= d:\n                    graph[i].append(j)\n                    graph[j].append(i)\n        \n        is_blocked = 0\n        is_blocked = max(is_blocked, self.bfs(graph, cir_num, cir_num + 1, cir_num + 2, cir_num + 4))  # Check for bottom-left corner\n        is_blocked = max(is_blocked, self.bfs(graph, cir_num + 3, cir_num + 2, cir_num + 1, cir_num + 4))  # Check for top-right corner\n        \n        return not is_blocked\n\n",
    "submit_ts": "1722136900",
    "subm_id": "1335748287"
}