{
    "username": "devansh789",
    "submission": "long long mod = 1e9 + 7;\n\nclass Solution {\npublic:\n    int func(int pos, int tot, vector<int> &v, vector<vector<int>> &dp) {\n        if(pos==v.size()) return 1;\n        if(dp[pos][tot]!=-1) return dp[pos][tot];\n        long long ans = 0;\n        for(int i = 0; i <= pos; i++) {\n            if((v[pos]!=-1)&&(v[pos]!=(tot+i))) continue;\n            if((tot+i)>400) continue;\n            long long x = func(pos+1,tot+i,v,dp);\n            ans += x;\n            ans %= mod;\n        }\n        return dp[pos][tot] = ans;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> v(n,-1);\n        for(int i = 0; i < requirements.size(); i++) {\n            v[requirements[i][0]] = requirements[i][1];\n        }\n        vector<vector<int>> dp(n+1,vector<int>(1000,-1));\n        int ans = func(0,0,v,dp);\n        return ans;\n    }\n};",
    "submit_ts": "1719069148",
    "subm_id": "1296788021"
}