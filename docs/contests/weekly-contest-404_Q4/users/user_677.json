{
    "username": "code_plus_plus",
    "submission": "class Solution {\npublic:\n    int mx=0;\n    vector<int>vis;\n   vector<vector<int>>adj;\n    int solve(int node)\n    {\n        vis[node]=1;\n        int ans=0;\n        //cout<<node<<\" \";\n        priority_queue<int,vector<int>,greater<int>>pq;\n        for(auto i : adj[node])\n        {\n            if(vis[i]==0)\n            {\n                int h=solve(i)+1;\n                ans=max(ans,h);\n                if(pq.size()<2)\n                {\n                    pq.push(h);\n                }\n                else\n                {\n                    if(pq.top()<h)\n                    {\n                        pq.pop();\n                        pq.push(h);\n                    }\n                }\n            }\n        }\n        int sum=0;\n        while(!pq.empty())\n        {\n            sum=sum+pq.top();\n            pq.pop();\n            mx=max(sum,mx);\n        }\n        return(ans);\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        vector<vector<int>>adj2(edges1.size()+1);\n        for(auto i : edges1)\n        {\n            adj2[i[0]].push_back(i[1]);\n            adj2[i[1]].push_back(i[0]);\n        }\n        vector<int>vis1(1e5+1,0);\n        adj=adj2;\n        vis=vis1;\n        solve(0);\n        int d1=mx;\n        mx=0;\n    \n        vector<vector<int>>adj1(edges2.size()+1);\n        for(auto i : edges2)\n        {\n            adj1[i[0]].push_back(i[1]);\n            adj1[i[1]].push_back(i[0]);\n        }\n        adj=adj1;\n         vis=vis1;\n         solve(0);\n        int d2=mx;\n        //cout<<d1<<\" \"<<d2<<endl;\n        int ans=((d1+1)/2)+((d2+1)/2)+1;\n        return(max(ans,max(d1,d2)));\n        \n    }\n};",
    "submit_ts": 1719719519.0
}