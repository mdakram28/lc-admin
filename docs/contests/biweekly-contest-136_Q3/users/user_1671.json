{
    "username": "Kronos_1066",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size() , cols = grid[0].size();\n        int totalFlips = 0 , rowFlipsRequired = 0 , onesInMiddle = 0;\n\n        for (int r = 0; r < rows / 2; r++) {\n            for (int c = 0; c < cols / 2; c++) {\n                vector<int> subGridElements = {grid[r][c],grid[rows - r - 1][c],grid[r][cols - c - 1],grid[rows - r - 1][cols - c - 1]};\n                int countOnes = 0;\n                for(int i = 0 ; i < subGridElements.size() ; i++){\n                    countOnes += subGridElements[i];\n                }\n                totalFlips += min(countOnes, 4 - countOnes);\n            }\n        }\n        \n        if (rows % 2 != 0) {\n            int middleRowIndex = rows / 2;\n            for (int c = 0; c < cols / 2; ++c) {\n                if (grid[middleRowIndex][c] != grid[middleRowIndex][cols - c - 1]) {\n                    totalFlips += 1;\n                    rowFlipsRequired += 1;\n                } else if (grid[middleRowIndex][c] == 1) {\n                    onesInMiddle += 1;\n                }\n            }\n        }\n        \n        if (cols % 2 != 0) {\n            int middleColIndex = cols / 2;\n            for (int r = 0; r < rows / 2; ++r) {\n                if (grid[r][middleColIndex] != grid[rows - r - 1][middleColIndex]) {\n                    totalFlips += 1;\n                    rowFlipsRequired += 1;\n                } else if (grid[r][middleColIndex] == 1) {\n                    onesInMiddle += 1;\n                }\n            }\n        }\n        \n        // Handle the central element if both the number of rows and columns are odd\n        if (rows % 2 != 0 && cols % 2 != 0 && grid[rows / 2][cols / 2] == 1) {\n            totalFlips += 1;\n        }\n        \n        // Adjust flips to ensure the total number of 1s is divisible by 4\n        if (rowFlipsRequired == 0 && onesInMiddle % 2 != 0) {\n            totalFlips += 2;\n        }\n        \n        return totalFlips;\n    }\n};\n",
    "submit_ts": "1722699839",
    "subm_id": "1343223943"
}