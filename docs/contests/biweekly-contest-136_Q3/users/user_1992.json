{
    "username": "adarsh1662",
    "submission": "class Solution {\npublic:\n\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        \n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                vector<int> v = {\n                    grid[i][j],\n                    grid[n- i -1][j],\n                    grid[i][m -j - 1],\n                    grid[n - i -1][m -j - 1]\n                };\n               \n                int ones = count(v.begin(), v.end(), 1);\n                ans += min(ones, 4 - ones);\n            }\n        }\n\n        int isPossible = 0;\n        int count = 0;\n    \n        if (n % 2 != 0) {\n            int midRow = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[midRow][j] != grid[midRow][m - j - 1]) {\n                    ans += 1;\n                    isPossible += 1;\n                } else {\n                    if (grid[midRow][j] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n\n        if (m % 2 != 0) {\n            int midCol = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][midCol] != grid[n - i - 1][midCol]) {\n                    ans += 1;\n                    isPossible += 1;\n                } else {\n                    if (grid[i][midCol] == 1) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n\n        if (n % 2 != 0 && m % 2 != 0) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n        if (isPossible == 0 && count % 2 != 0) {\n            ans += 2;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700120",
    "subm_id": "1343232284"
}