{
    "username": "L_08",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int ans=1; \n        vector<int>v(k+1,-1); \n        vector<map<int,int>>mpp(k+1); \n        for(int i=0;i<n;i++){ \n            int temp=nums[i];\n            for(int j=0;j<=k;j++){\n                for(int l=0;l<j;l++) dp[i][j]=max(dp[i][j],1+v[l]);\n                if(mpp[j].find(temp)!=mpp[j].end()) dp[i][j]=max(dp[i][j],1+mpp[j][temp]); \n                ans=max(ans,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                v[j]=max(v[j],dp[i][j]); \n                mpp[j][temp]=max(mpp[j][temp],dp[i][j]); \n            } \n        } \n        return ans;\n    }\n};",
    "submit_ts": "1717862309",
    "subm_id": "1281818995"
}