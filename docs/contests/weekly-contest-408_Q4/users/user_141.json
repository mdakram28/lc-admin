{
    "username": "M-Manas-s",
    "submission": "class Solution {\npublic:\n\n    #define max_size 1005\n    vector<int> parent,size_;\n    vector<vector<int>> bd; \n\n    //  L,R,D,U\n\n    int find_set(int v) {\n        if (v == parent[v])\n            return v;\n        return parent[v] = find_set(parent[v]);\n    }\n\n    void make_set(int v) {\n        parent[v] = v;\n        size_[v] = 1;\n    }\n\n    void union_sets(int a, int b) {\n        a = find_set(a);\n        b = find_set(b);\n        if (a != b) {\n            if (size_[a] < size_[b])\n                swap(a, b);\n            parent[b] = a;\n            size_[a] += size_[b];\n            bd[a][0] = min(bd[b][0],bd[a][0]); // L\n            bd[a][1] = max(bd[b][1],bd[a][1]); // R\n            bd[a][2] = min(bd[b][2],bd[a][2]); // D\n            bd[a][3] = max(bd[b][3],bd[a][3]); // U\n\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        parent = size_ = vector<int>(max_size);\n        bd = vector<vector<int>>(max_size,vector<int>(4));\n        int n = c.size();\n        for ( int i = 0; i < n; i++ ) {\n            make_set(i);\n            int r = c[i][2];\n            bd[i][0] = c[i][1] - r;\n            bd[i][1] = c[i][1] + r;\n            bd[i][2] = c[i][0] - r;\n            bd[i][3] = c[i][0] + r;\n        }\n\n        for ( int i = 0; i < n; i++ ) \n            for ( int j = i + 1; j < n; j++ ) {\n\n                // find intersection\n                long long int cd_sq = ( c[i][0] - c[j][0] ) * 1LL * ( c[i][0] - c[j][0] ) + ( c[i][1] - c[j][1] ) * 1LL * ( c[i][1] - c[j][1] );\n                int rs = c[i][2] + c[j][2];\n\n                if ( cd_sq <= rs * 1LL * rs )\n                    union_sets(i,j);\n\n            }\n        \n        for ( int i = 0; i < n; i++ ) {\n\n            int k = find_set(i);\n            bool left = bd[k][0] <= 0 || bd[k][3] >= X;\n            bool right = bd[k][1] >= Y || bd[k][2] <= 0;\n\n            if ( left && right )\n                return 0;\n\n        }\n        \n        return 1;\n        \n\n    }\n};",
    "submit_ts": "1722137904",
    "subm_id": "1335776879"
}