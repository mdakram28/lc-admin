{
    "username": "YetAnotherDaniluk1",
    "submission": "func minFlips(grid [][]int) int {\n    totalAns := 0\n    cnt1InPairs, cnt2InPairs := 0, 0\n    n, m := len(grid), len(grid[0])\n    // Iterate for first half of row and\n    // column, including middle entity\n    for i := 0; i < (n + (n%2))/2; i++ {\n        for j := 0; j < (m + (m%2))/2; j++ {\n            if i != n - i - 1 && j != m - j - 1 {\n                // Quartet\n                cnt1 := 0\n                // !!! We can iterate \"anonymus\" slice\n                for _, x := range []int{i, n - i - 1} {\n                    for _, y := range []int{j, m - j - 1} {\n                        if grid[x][y] == 1 {cnt1++}\n                    }\n                }\n                totalAns += min(4-cnt1, cnt1)\n            } else if i == n - i - 1 && j == m - j - 1 {\n                // Unit\n                if grid[i][j] == 1 {totalAns++}\n            } else {\n                // Pair\n                cnt1 := 0\n                if i == n - i - 1 {\n                    if grid[i][j] == 1 {cnt1++}\n                    if grid[i][m - j - 1] == 1 {cnt1++}\n                } else if j == m - j - 1 {\n                    if grid[i][j] == 1 {cnt1++}\n                    if grid[n - i - 1][j] == 1 {cnt1++}\n                }\n                if cnt1 == 1 {\n                    cnt1InPairs++\n                    totalAns++\n                }\n                if cnt1 == 2{cnt2InPairs++}\n            }\n        }\n    }\n    if cnt2InPairs % 2 == 1 && cnt1InPairs == 0 {\n        totalAns += 2\n    }\n    return totalAns\n}",
    "submit_ts": "1722700227",
    "subm_id": "1343235469"
}