{
    "username": "pku_erutan",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        \n        m, n = len(grid), len(grid[0])\n        min1, max1, min2, max2 = 1e99, 0, 1e99, 0\n        pos = []\n        for i in range(m) :\n            for j in range(n) :\n                if grid[i][j] == 1 :\n                    pos.append((i, j))\n                    min1 = min(min1, i)\n                    max1 = max(max1, i)\n                    min2 = min(min2, j)\n                    max2 = max(max2, j)\n        pos = sorted(pos)\n        to_ret = 1e99\n        def getarea(x1, x2, y1, y2) :\n            min1, max1, min2, max2 = 1e99, 0, 1e99, 0\n            mark = 0\n            for i, j in pos :\n                if x1 <= i <= x2 and y1 <= j <= y2 :\n                    mark += 1\n                    min1 = min(min1, i)\n                    max1 = max(max1, i)\n                    min2 = min(min2, j)\n                    max2 = max(max2, j)\n            if mark == 0 :\n                return 1e99\n            return (max2-min2+1) * (max1-min1+1)\n                    \n        x0 = min1\n        x3 = max1+1\n        for x1 in range(min1+1, max1+1) :\n            for x2 in range(x1+1, max1+1) :\n                rett = getarea(x0, x1-1, min2, max2) + getarea(x1, x2-1, min2, max2) + getarea(x2, x3-1, min2, max2)\n                if rett < to_ret :\n                    # print('x', rett, x1, x2)\n                    to_ret = rett\n        y0 = min2\n        y3 = max2+1\n        for y1 in range(min2+1, max2+1) :\n            for y2 in range(y1+1, max2+1) :\n                rett = getarea(min1, max1, y0, y1-1) + getarea(min1, max1, y1, y2-1)  + getarea(min1, max1, y2, y3-1) \n                if rett < to_ret :\n                    # print('y', rett, y1, y2)\n                    to_ret = rett\n        \n        for xp in range(min1+1, max1+1) :\n            for yp in range(min2+1, max2+1) :\n                # getarea(min1, xp-1, min2, yp-1) \n                # getarea(min1, xp-1, yp, max2) \n                # getarea(xp, max1, min2, yp-1) \n                # getarea(xp, max1, yp, max2)\n                \n                rett = getarea(min1, xp-1, min2, yp-1) + getarea(min1, xp-1, yp, max2) + getarea(xp, max1, min2, max2) \n                if rett < to_ret :\n                    # print('z1', rett, xp, yp)\n                    to_ret = rett\n                rett = getarea(min1, xp-1, min2, yp-1) + getarea(xp, max1, min2, yp-1) + getarea(min1, max1, yp, max2)\n                if rett < to_ret :\n                    # print('z2', rett, xp, yp)\n                    to_ret = rett\n                rett = getarea(min1, xp-1, yp, max2) + getarea(xp, max1, yp, max2) + getarea(min1, max1, min2, yp-1)\n                if rett < to_ret :\n                    # print('z3', rett, xp, yp)\n                    to_ret = rett\n                rett = getarea(xp, max1, min2, yp-1) + getarea(xp, max1, yp, max2) + getarea(min1, xp-1, min2, max2)\n                if rett < to_ret :\n                    # print('z4', rett, xp, yp)\n                    to_ret = rett\n        return to_ret\n                            \n                        \n                    \n                    \n                ",
    "submit_ts": 1719114597.0
}