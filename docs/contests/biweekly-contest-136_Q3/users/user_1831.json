{
    "username": "kaustubhthakur",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        l = len(grid)\n        r = len(grid[0])\n        res = 0\n\n        if l % 2 == 1 and r % 2 == 1:\n            if grid[l // 2][r // 2] == 1:\n                res += 1\n\n        hsh = [0] * 3\n        self.v_calc(grid, hsh, r, l)\n\n        res = self.solve(hsh, res)\n\n        res = self.m_calc(grid, res)\n\n        return res\n\n    def v_calc(self, grid: List[List[int]], hsh: List[int], r: int, l: int) -> None:\n        if l % 2 == 1:\n            lo, ri = 0, r - 1\n            while lo < ri:\n                soln = grid[l // 2][lo] + grid[l // 2][ri]\n                hsh[soln] += 1\n                lo += 1\n                ri -= 1\n\n        if r % 2 == 1:\n            lo, ri = 0, l - 1\n            while lo < ri:\n                soln = grid[lo][r // 2] + grid[ri][r // 2]\n                hsh[soln] += 1\n                lo += 1\n                ri -= 1\n\n    def solve(self, hsh: List[int], res: int) -> int:\n        if hsh[2] % 2 == 1:\n            if hsh[1] > 0:\n                res += hsh[1]\n            else:\n                res += 2\n        else:\n            res += hsh[1]\n        \n        return res\n\n    def m_calc(self, grid: List[List[int]], res: int) -> int:\n        l = len(grid)\n        r = len(grid[0])\n        \n        for i in range(l // 2):\n            for j in range(r // 2):\n                lo = grid[i][j]\n                ri = grid[l - 1 - i][j]\n                dx = grid[i][r - 1 - j]\n                dy = grid[l - 1 - i][r - 1 - j]\n\n                soln = lo + ri + dx + dy\n\n                if soln != 0 and soln != 4:\n                    res += min(soln, 4 - soln)\n        \n        return res\n",
    "submit_ts": "1722699987",
    "subm_id": "1343228283"
}