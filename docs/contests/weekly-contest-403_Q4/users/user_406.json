{
    "username": "cheng-liang-yu",
    "submission": "class Solution:\n    def minimumSum(self, a: List[List[int]]) -> int:\n        m, n = len(a), len(a[0])\n        @cache\n        def dfs3(i1, j1, i2, j2):\n            if i1 == i2 or j1 == j2: return 0\n            res = dfs2(i1, j1, i2, j2)\n            for i in range(i1 + 1, i2):\n                res = min(res, dfs2(i1, j1, i, j2) + dfs1(i, j1, i2, j2))\n                res = min(res, dfs1(i1, j1, i, j2) + dfs2(i, j1, i2, j2))\n            for j in range(j1 + 1, j2):\n                res = min(res, dfs2(i1, j1, i2, j) + dfs1(i1, j, i2, j2))\n                res = min(res, dfs1(i1, j1, i2, j) + dfs2(i1, j, i2, j2))\n            return res\n        @cache\n        def dfs2(i1, j1, i2, j2):\n            if i1 == i2 or j1 == j2: return 0\n            res = dfs1(i1, j1, i2, j2)\n            for i in range(i1 + 1, i2):\n                res = min(res, dfs1(i1, j1, i, j2) + dfs1(i, j1, i2, j2))\n            for j in range(j1 + 1, j2):\n                res = min(res, dfs1(i1, j1, i2, j) + dfs1(i1, j, i2, j2))\n            return res\n        @cache\n        def dfs1(i1, j1, i2, j2):\n            if i1 == i2 or j1 == j2: return 0\n            mnx, mxx, mny, mxy = dfs(i1, j1, i2, j2)\n            if mxx == -1: return 0\n            return (mxx - mnx + 1) * (mxy - mny + 1)\n        @cache\n        def dfs(i1, j1, i2, j2): # mnx, mxx, mny, mxy\n            if i1 == i2 or j1 == j2: return inf, -1, inf, -1\n            mnx1, mxx1, mny1, mxy1 = dfs(i1, j1, i2 - 1, j2)\n            mnx2, mxx2, mny2, mxy2 = dfs(i1, j1, i2, j2 - 1)\n            t = a[i2 - 1][j2 - 1]\n            return min(mnx1, mnx2, i2 - 1 if t else inf), i2 - 1 if t else max(mxx1, mxx2), min(mny1, mny2, j2 - 1 if t else inf), j2 - 1 if t else max(mxy1, mxy2)\n        res = dfs3(0, 0, m, n)\n        dfs3.cache_clear()\n        dfs2.cache_clear()\n        dfs1.cache_clear()\n        dfs.cache_clear()\n        return res",
    "submit_ts": "1719114297",
    "subm_id": "541401318"
}