{
    "username": "\u7d2b\u8346\u6ca1\u6709\u571f\u8c46\u6ce5",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        row_max = [[] for _ in range(m)]\n        for i in range(m):\n            g = collections.defaultdict(set)\n            for j in range(n):\n                g[board[i][j]].add(j)\n            g_list = sorted(g.items(), key=lambda p: -p[0])\n            count = 0\n            for value, pos_list in g_list:\n                for y in pos_list:\n                    row_max[i].append((value, y))\n                    count += 1\n                    if count == 3:  break\n                if count == 3:  break\n        res = -inf\n        for i1 in range(m - 2):\n            for i2 in range(i1 + 1, m - 1):\n                for i3 in range(i2 + 1, m):\n                    for j1 in range(3):\n                        for j2 in range(3):\n                            if row_max[i2][j2][1] == row_max[i1][j1][1]:\n                                continue\n                            for j3 in range(3):\n                                if row_max[i3][j3][1] == row_max[i1][j1][1] or row_max[i3][j3][1] == row_max[i2][j2][1]:\n                                    continue\n                                res = max(res, row_max[i1][j1][0] + row_max[i2][j2][0] + row_max[i3][j3][0])\n        return res\n\n\n\n                ",
    "submit_ts": "1723908838",
    "subm_id": "556333115"
}