{
    "username": "user4938bv",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int targetAND) {\n    int size = nums.size();\n    long long subarrayCount = 0;\n    \n    unordered_map<long long, long long> previousResults;\n\n    for (int i = 0; i <= size-1; ++i) {\n        std::unordered_map<long long, long long> currentResults; \n\n        if (nums[i] == targetAND) {\n            ++subarrayCount;\n        }\n        currentResults[nums[i]] = 1;\n\n        for (auto& [previousValue, frequency] : previousResults) {\n            long long newANDResult = previousValue & nums[i];\n            if (newANDResult == targetAND) {\n                subarrayCount += frequency;\n            }\n            currentResults[newANDResult] += frequency;\n        }\n        \n        previousResults = currentResults;\n    }\n    \n    return subarrayCount;\n    }\n};",
    "submit_ts": "1720278423",
    "subm_id": "1311708522"
}