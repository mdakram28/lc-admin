{
    "username": "garimabothra2000",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> htemp, vtemp;\n        for(int i=0;i<m-1;i++)\n        {\n            htemp.push_back({horizontalCut[i], i});\n        }\n        sort(htemp.begin(), htemp.end());\n        reverse(htemp.begin(), htemp.end());\n\n        for(int i=0;i<n-1;i++)\n        {\n            vtemp.push_back({verticalCut[i], i});\n        }\n        sort(vtemp.begin(), vtemp.end());\n        reverse(vtemp.begin(), vtemp.end());\n\n        long long ans = 0;\n        long long i=0, j=0;\n        while(i<m-1 && j<n-1)\n        {\n            if(htemp[i].first >= vtemp[j].first)\n            {\n                ans += (htemp[i].first * (j+1));\n                i++;\n            }\n            else\n            {\n                ans += (vtemp[j].first * (i+1));\n                j++;\n            }\n        }\n\n        while(i < m-1)\n        {\n            ans += (htemp[i].first * n);\n            i++;\n        }\n\n        while(j < n-1)\n        {\n            ans += (vtemp[j].first * m);\n            j++;\n        }\n\n        return ans;\n\n    }\n};",
    "submit_ts": "1720926029",
    "subm_id": "1320273795"
}