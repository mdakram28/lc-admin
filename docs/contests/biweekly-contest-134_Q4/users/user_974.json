{
    "username": "tinku_vishnu17",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n       int n=nums.length; int pre[][]=new int[n+1][32];\n       for(int i=0;i<n;i++){\n           for(int j=0;j<32;j++)pre[i+1][j]=pre[i][j];\n           for(int j=0;j<32;j++){\n               int bit=(nums[i]>>j)&1;\n               if(bit==1)pre[i+1][j]++;\n           }\n       }\n        long ans=0;\n        for(int i=0;i<n;i++){\n            //check whether we have k set bits in nums[i];\n            int num=nums[i]; boolean flag=true;\n            for(int j=0;j<32;j++){\n                int bit=(num>>j)&1;\n                int bit2=(k>>j)&1;\n                if((bit2==1)&&(bit2!=bit)){\n                    flag=false;\n                    break;\n                }\n            }\n            if(flag){\n                //do bs on answer\n                int low=i; int high=n-1; int go=-1;\n                while(low<=high){\n                    int mid=low+(high-low)/2;\n                    int curr=solve(i,mid,pre,k);\n                    if(curr==0)go=mid;\n                    if(curr>=0){\n                        low=mid+1;\n                    }\n                    else if(curr<0) high=mid-1;\n                }\n                \n                low=i; high=n-1; int go2=-1;\n                while(low<=high){\n                    int mid=low+(high-low)/2;\n                    int curr=solve(i,mid,pre,k);\n                    if(curr==0){\n                        go2=mid;\n                    }\n                    if(curr==1){\n                        low=mid+1;\n                    }\n                    else high=mid-1;\n                }\n                if(go!=-1)\n                ans+=(go-go2+1);\n            }\n        }\n        return ans;\n    }\n    public int solve(int l,int r,int pre[][],int k){\n        for(int i=0;i<32;i++){\n            int bit=(k>>i)&1;\n            if(bit==1){\n                int bits=pre[r+1][i];\n                bits-=pre[l][i];\n                if(bits!=(r-l+1))return -1; //go left\n            }\n            else{\n                int bits=pre[r+1][i];\n                bits-=pre[l][i];\n                if(bits==(r-l+1))return 1;//go right\n            }\n        }\n        return 0; //it's correct ans go right\n    }\n    \n}\n\n       \n       \n     ",
    "submit_ts": "1720280257",
    "subm_id": "1311782602"
}