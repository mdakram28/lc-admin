{
    "username": "parallel-k1",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut,\n                          vector<int>& verticalCut) {\n        long long ans = 0;\n        vector<pair<int, int>> v;\n        for (int i = 0; i < m - 1; i++)\n            v.push_back({horizontalCut[i], 0});\n        for (int i = 0; i < n - 1; i++)\n            v.push_back({verticalCut[i], 1});\n        sort(v.begin(), v.end());\n        reverse(v.begin(), v.end());\n        int cur0 = 0, cur1 = 0;\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i].second == 0) {\n                ans += 1LL * v[i].first * (cur1 + 1);\n                cur0++;\n            } else {\n                ans += 1LL * v[i].first * (cur0 + 1);\n                cur1++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925838",
    "subm_id": "546442296"
}