{
    "username": "Tafheem Ahemad",
    "submission": "/*\n    Name :- Tafheem Ahemad\n*/\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n#define ll long long int\n#define ld long double\n#define F first\n#define S second\nconst int MOD = 1e9+7;\n#define vl vector<ll>\n#define vi vector<int>\n#define vs vector<string>\n#define vll vector<vl>\n#define vii vector<vi>\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define ump unordered_map\n#define all(v) v.begin(),v.end()\n#define take_matrix(a,n,m) for(int i=0; i<n; i++){for(int j=0; j<m; j++){cin>>a[i][j];}}\n#define print_matrix(a,n,m) for(int i=0; i<n; i++){for(int j=0; j<m; j++){cout<<a[i][j]<<' ';}cout<<endl;}\n#define input(a) for(auto &x:a) cin>>x;\n#define printv(a) for(auto &i:a) cout<<i<<' '; cout<<endl;\n#define yes(x) if(x) cout<<\"YES\"<<endl; else cout<<\"NO\"<<endl;\n#define cl(n) for(int i=0;i<=n+5;i++) g[i].clear()\n#define mem(v,z) memset(v,z,sizeof(v))\n#define bpc(x) __builtin_popcountll(x)\n#define pq_max priority_queue<ll>\n#define pq_min priority_queue<ll,vl,greater<ll>>\n#define fast() ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define pb push_back\n#define in insert\ntemplate <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nvector<vector<ll>> delta1 = {{1,0},{-1,0},{0,-1},{0,1}};\nvector<vector<ll>> delta2 = {{1,0},{-1,0},{0,-1},{0,1},{1,1},{-1,1},{1,-1},{-1,-1}};\n\nclass Solution {\npublic:\n    string ans = \"0\";\n    \n    ll power(ll a, ll n, ll k) {\n        a %= k;\n        ll res = 1;\n        while (n) {\n            if (n % 2) {\n                res = res * a;\n                res %= k;\n                n--;\n            } else {\n                a = (a * a);\n                a %= k;\n                n /= 2;\n            }\n        }\n        return res;\n    }\n    \n    ll dp[100000 + 5][10];\n    \n    bool solve(int i, int till, ll k, ll n, string &s) {\n        ll j = (n - 1) - i;\n        if (j < i) {\n            if (till != 0) return 0;\n            if (s > ans) {\n                ans = s;\n            }\n            return 1;\n        }\n        \n        if (dp[i][till] != -1) return dp[i][till];\n        \n        int st = (i) ? 0 : 1;\n        for (ll ind = 9; ind >= st; ind--) {\n            ll a = power(10, i, k);\n            ll b = power(10, j, k);\n            a *= ind;\n            b *= ind;\n            \n            a %= k;\n            b %= k;\n            \n            s[i] = s[j] = char(ind + '0');\n            if(i != j) a+=b;\n            \n            ll x = solve(i + 1, (till + a ) % k, k, n, s);\n            if (x) return dp[i][till] = 1;\n        }\n        \n        return dp[i][till] = 0;\n    }\n    \n    string largestPalindrome(int n, int k) {\n        memset(dp, -1, sizeof(dp));\n        string s(n, '0');\n        solve(0, 0, k, n, s);\n        return ans;\n    }\n};\n",
    "submit_ts": "1723949631",
    "subm_id": "1359724724"
}