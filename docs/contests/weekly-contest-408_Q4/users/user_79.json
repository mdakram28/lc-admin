{
    "username": "jfantasy90",
    "submission": "class Solution {\ntypedef long long LL;\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        const int n = circles.size();\n        vector<vector<int>> next(n, vector<int>());\n        vector<int> color(n + 4, -1);\n        for (int i = 0; i < n + 4; ++i) color[i] = i;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (i == j) continue;\n                if (connect(circles[i], circles[j])) {\n                    int x = getColor(color, i), y = getColor(color, j);\n                    color[y] = color[x];\n                }\n            }\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            const vector<int> &c = circles[i];\n            if (c[0] - c[2] <= 0) {\n                int x = getColor(color, i);\n                int y = getColor(color, n);\n                color[y] = color[x];\n            }\n            if (c[1] - c[2] <= 0) {\n                int x = getColor(color, i);\n                int y = getColor(color, n + 1);\n                color[y] = color[x];\n            }\n            if (c[0] + c[2] >= X) {\n                int x = getColor(color, i);\n                int y = getColor(color, n + 2);\n                color[y] = color[x];\n            }\n            if (c[1] + c[2] >= Y) {\n                int x = getColor(color, i);\n                int y = getColor(color, n + 3);\n                color[y] = color[x];\n            }\n        }\n        \n        if (getColor(color, n) == getColor(color, n + 1)) return false;\n        if (getColor(color, n + 2) == getColor(color, n + 3)) return false;\n        if (getColor(color, n) == getColor(color, n + 2)) return false;\n        if (getColor(color, n + 1) == getColor(color, n + 3)) return false;\n        \n        //for (int i = 0; i < n + 4; ++i) cout << i << \" \" << getColor(color, i) << endl;\n        return true;\n    }\n    \nprivate:\n    int getColor(vector<int>& color, int x) {\n        if (color[x] == x) return x;\n        color[x] = getColor(color, color[x]);\n        return color[x];\n    }\n    \n    bool connect(vector<int> &l, vector<int> &r) {\n        LL length = LL(l[2] + r[2]) * (l[2] + r[2]);\n        LL x = LL(l[0] - r[0]) * (l[0] - r[0]);\n        LL y = LL(l[1] - r[1]) * (l[1] - r[1]);\n        return x + y <= length;\n    }\n};",
    "submit_ts": "1722137953",
    "subm_id": "1335778148"
}