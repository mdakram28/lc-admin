{
    "username": "deadRabbit",
    "submission": "int Sn(int x) {\n    return x*(x+1)/2;\n}\n\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        vector<int> Z;\n        Z.push_back(-1);\n        for (int i = 0; i < s.size(); ++i) {\n            if (s[i]=='0') {\n                Z.push_back(i);\n            }\n        }\n        Z.push_back(s.size());\n        \n        int res = 0;\n        // add just '1':\n        for (int i = 0; i+1 < Z.size(); ++i) {\n            res += Sn(Z[i+1]-Z[i]-1);\n        }\n        \n        // add with zeros\n        for (int i = 1; i+1 < Z.size(); ++i) {\n            int n0 = 1;\n            int n1 = 0;\n            for (int j = i; j+1<Z.size(); ++j) {\n                // can't be more then 200\n                if (n0*n0>s.size()) break;\n                \n                int need = n0*n0 - n1;\n                \n                \n                int l = (Z[i]-Z[i-1]-1); // have ones to add\n                int r = (Z[j+1]-Z[j]-1); // have ones to add\n                \n                //printf(\"was=[%d] [%d..%d](0:%d,1:%d) l=%d r=%d need=%d\\n\",res,i,j,n0,n1,l,r,need);\n                \n                if (l>r) swap(l,r);\n                for (int x = 0; x <= l; ++x) {\n                    int w = need - x;\n                    if (w<0) w = 0;\n                    res += max(0, r-w+1);\n                }\n                \n                n0++;\n                n1+=Z[j+1]-Z[j]-1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722136448",
    "subm_id": "1335734817"
}