{
    "username": "yhwputin",
    "submission": "\nstruct SegNode {\n    int l, r, sum;\n    bool lazytag;\n    SegNode() {\n        this->l = 0;\n        this->r = 0;\n        this->sum = 0;\n        this->lazytag = false;\n    }\n};\n\nclass SegTree {\nprivate:\n    vector<SegNode> arr;\n\npublic:\n    SegTree(int n) {\n        arr = vector<SegNode>(n * 4 + 1);\n        build(1, 0, n - 1);\n    }\n\n    int sumRange(int left, int right) {\n        return query(1, left, right);\n    }\n\n    void modifyRange(int left, int right) {\n        modify(1, left, right);\n    }\n\n    void build(int id, int l, int r) {\n        arr[id].l = l;\n        arr[id].r = r;\n        arr[id].lazytag = false;\n        if(l == r) {\n            arr[id].sum = 1;\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(2 * id, l, mid);\n        build(2 * id + 1, mid + 1, r);\n        arr[id].sum = arr[2 * id].sum + arr[2 * id + 1].sum;\n    }\n\n    /* pushdown\u51fd\u6570\uff1a\u4e0b\u4f20\u61d2\u6807\u8bb0\uff0c\u5373\u5c06\u5f53\u524d\u533a\u95f4\u7684\u4fee\u6539\u60c5\u51b5\u4e0b\u4f20\u5230\u5176\u5de6\u53f3\u5b69\u5b50\u7ed3\u70b9 */\n    void pushdown(int x) {\n        if(arr[x].lazytag) {\n            arr[2 * x].lazytag = 1;\n            arr[2 * x].sum = 0;\n            arr[2 * x + 1].lazytag = 1;\n            arr[2 * x + 1].sum = 0;\n            arr[x].lazytag = false;\n        }\n    }\n\n    /* \u533a\u95f4\u4fee\u6539 */\n    void modify(int id, int l, int r) {\n        if (arr[id].l >= l && arr[id].r <= r) {\n            arr[id].sum = 0;\n            arr[id].lazytag = 1;\n            return;\n        }\n        pushdown(id);\n        int mid = (arr[id].l + arr[id].r) >> 1;\n        if (arr[2 * id].r >= l) {\n            modify(2 * id, l, r);\n        }\n        if(arr[2 * id + 1].l <= r) {\n            modify(2 * id + 1, l, r);\n        }\n        arr[id].sum = arr[2 * id].sum + arr[2 * id + 1].sum;\n    }\n\n    /* \u533a\u95f4\u67e5\u8be2 */\n    int query(int id, int l, int r) {\n        return arr[id].sum - 1;\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        SegTree tree(n);\n        for(auto& q : queries){\n            tree.modify(1,q[0] + 2,q[1]);\n            ans.push_back(tree.sumRange(1,n));\n        }\n       return ans;\n    }\n};\n",
    "submit_ts": "1722743774",
    "subm_id": "552352726"
}