{
    "username": "Fasdr",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        int res = 0;\n        // transform everything besides the midle cross\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int sum = 0;\n                sum += grid[i][j];\n                sum += grid[i][n - 1 - j];\n                sum += grid[m - 1 - i][j];\n                sum += grid[m - 1 - i][n - 1 - j];\n                res += Math.min((sum % 4), (4 - sum) % 4);\n            }\n        }\n        boolean freePair = false;\n        int nTwo = 0;\n        if ((m % 2) == 1) {\n            for (int j = 0; j < n / 2; j++) {\n                int sum = 0;\n                sum += grid[m / 2][j];\n                sum += grid[m / 2][n - 1 - j];\n                if (sum == 1)\n                    freePair = true;\n                if (sum == 2)\n                    nTwo++;\n                res += (sum % 2);\n            }\n        }\n        if ((n % 2) == 1) {\n            for (int i = 0; i < m / 2; i++) {\n                int sum = 0;\n                sum += grid[i][n / 2];\n                sum += grid[m - 1 - i][n / 2];\n                if (sum == 1)\n                    freePair = true;\n                if (sum == 2)\n                    nTwo++;\n                res += (sum % 2);\n            }\n        }\n        if ((nTwo % 2) == 1 && !freePair)\n            res += 2;\n        if ((m % 2) == 1 && (n % 2) == 1)\n            res += grid[m / 2][n / 2];\n        \n        \n        return res;\n    }\n}",
    "submit_ts": "1722696960",
    "subm_id": "1343128872"
}