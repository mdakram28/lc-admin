{
    "username": "Kaiyu-Wang",
    "submission": "using LL = long long;\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hCut, vector<int>& vCut) {\n        sort(hCut.begin(), hCut.end());\n        sort(vCut.begin(), vCut.end());\n        \n        int ph = hCut.size() - 1, pv = vCut.size() - 1;\n        int h = 1, v = 1;\n        LL result = 0;\n        while (ph >= 0 && pv >= 0) {\n            if (hCut[ph] >= vCut[pv]) {\n                LL cur = (LL)hCut[ph] * h;\n                result += cur;\n                ph--;\n                v++;\n            } else {\n                LL cur = (LL)vCut[pv] * v;\n                result += cur;\n                pv--;\n                h++;\n            }\n        }\n        \n        while (ph >= 0) {\n            LL cur = (LL)hCut[ph] * h;\n                result += cur;\n            ph--;\n        }\n        \n        while (pv >= 0) {\n            LL cur = (LL)vCut[pv] * v;\n                result += cur;\n            pv--;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1720926538",
    "subm_id": "1320289150"
}