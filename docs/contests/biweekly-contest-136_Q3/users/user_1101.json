{
    "username": "vidhankashyap",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans=0;\n        int sum=0;\n        for(int i=0; i<m/2; i++){\n            for(int j=0; j<n/2; j++){\n                int ones = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j];\n                int zeros = 4 - ones;\n                int val=0;\n                ans += min(zeros, ones);\n                if(ones>zeros) val = 1;\n                grid[i][j]=val; grid[i][n-1-j]=val; grid[m-1-i][j]=val; grid[m-1-i][n-1-j]=val;\n            }\n        }\n        int res=0; sum=0;\n        if(m%2){\n            int i = m/2;\n            for(int j=0; j<n/2;j++){\n                if(grid[i][j] != grid[i][n-1-j]){\n                    res++;\n                }\n                else sum += 2*grid[i][j];\n            }\n        }\n        if(n%2){\n            int j = n/2;\n            for(int i=0; i<m/2;i++){\n                if(grid[i][j] != grid[m-1-i][j]){\n                    res++;\n                }\n                else{\n                    sum += 2*grid[i][j];\n                }\n            }\n        }\n        ans += res;\n        sum %= 4;\n        if(!res && sum) ans += 2;\n        if(m%2 && n%2 && grid[m/2][n/2]) ans++;\n        return ans; \n    }\n};",
    "submit_ts": "1722698806",
    "subm_id": "1343192427"
}