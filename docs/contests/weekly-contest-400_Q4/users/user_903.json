{
    "username": "ajit_kumar-12345",
    "submission": " class Solution {\npublic:\n    int findAnd(int i, int j, vector<vector<int>>& pref){\n        int n = j - i + 1;\n        int num = 0;\n        for(int l=0; l<32; l++){\n            if(pref[j+1][l] - pref[i][l] == n) num |= (1 << l);\n        }\n        return num;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> pref(n+1, vector<int>(32, 0));\n        for(int i=0; i<n; i++){\n            for(int j=0; j<32; j++){\n                if(nums[i] & (1 << j)) pref[i+1][j] = 1 + pref[i][j];\n                else pref[i+1][j] = pref[i][j];\n            }\n        }\n        int ans = 1e9;\n        for(int i=0; i<n; i++){\n            int lo = i, hi = n - 1;\n            while(lo <= hi){\n                int mid = lo + (hi - lo) / 2;\n                int val = findAnd(i, mid, pref);\n                if(k >= val){\n                    ans = min(ans, k - val);\n                    hi = mid - 1;\n                }else{\n                    ans = min(ans, val - k);\n                    lo = mid + 1;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717297435",
    "subm_id": "1274742443"
}