{
    "username": "ni-shang-a",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\n    multiset<int>A;\n    multiset<int>B;\n    multiset<int>C;\n    multiset<int>D;\n    void del(int x, int y) {\n        A.erase(A.find(x + y));\n        B.erase(B.find(x - y));\n        C.erase(C.find(- x + y));\n        D.erase(D.find(- x - y));\n    }\n    int query_mx() {\n        // cout<<A.size()<<endl;\n        auto end = A.rbegin();\n        auto start = A.begin();\n        int mx = *end - *start;\n        // cout<<B.size()<<endl;\n        end = B.rbegin();\n        start = B.begin();\n        mx = max(mx, *end - *start);\n        // cout<<C.size()<<endl;\n        end = C.rbegin();\n        start = C.begin();\n        mx = max(mx, *end - *start);\n        // cout<<D.size()<<endl;\n        end = D.rbegin();\n        start = D.begin();\n        mx = max(mx, *end - *start);\n        return mx;\n    }\n    void inse(int x, int y) {\n        A.insert(x + y);\n        B.insert(x - y);\n        C.insert(- x + y);\n        D.insert(- x - y);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        A.clear(), B.clear(), C.clear(), D.clear();\n        for(auto i : points) {\n            inse(i[0], i[1]);\n        }\n        int mx = 1e9;\n        for(auto i : points) {\n            del(i[0] ,i[1]);\n            mx = min(mx, query_mx());\n            inse(i[0], i[1]);\n        }\n        // cout<<\"-----------\"<<endl;\n        return mx;\n    }\n};"
}