{
    "username": "AlthafHussain",
    "submission": "class Solution {\n    long count(ArrayList<Integer> al ){\n        long val = 0;\n        long ans = 0;\n        for(int i = 0; i < al.size(); i++){\n            if(val > al.get(i)){\n                val -= Math.abs(val-al.get(i));\n            }\n            else{\n                long add = Math.abs(val-al.get(i));\n                val += (add);\n                ans += (add);\n            }\n        }\n        return ans;\n    }\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int diff[] = new int[n];\n        int sign[] = new int[n];\n        for(int i = 0; i < n; i++){\n            diff[i] = nums[i]-target[i];\n            if(diff[i] > 0){\n                sign[i] = 0;\n            }\n            else if(diff[i] < 0){\n                sign[i] = 1;\n            }\n            else{\n                sign[i] = 2;\n            }\n        }\n        ArrayList<Integer> al = new ArrayList<>();\n        // System.out.println(Arrays.toString(sign));\n        al.add(Math.abs(diff[0]));\n        long ans = 0;\n        for(int i = 1; i < n; i++){\n            if(sign[i] != sign[i-1]){\n                long val = count(al);\n                ans += val;\n                al = new ArrayList<>();\n                al.add(Math.abs(diff[i]));\n            }\n            else{\n                al.add(Math.abs(diff[i]));\n            }\n        }\n        ans += count(al);\n        return ans;\n    }\n}",
    "submit_ts": "1721532334",
    "subm_id": "1327983390"
}