{
    "username": "mars-in",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int[] mid = new int[nums.length];\n\n        for(int i = 0; i < mid.length; i++) {\n            mid[i] = target[i] - nums[i];\n        }\n\n        long ans = Math.abs(mid[0]);\n        int last = mid[0];\n        for(int i = 1; i < mid.length; i++) {\n\n            if((last > 0 && mid[i] > 0) || (last < 0 && mid[i] < 0)) {\n                if(Math.abs(last) > Math.abs(mid[i])) {\n                    last = mid[i];\n                } else {\n                    // System.out.println(\"##2 \" + (Math.abs(mid[i]) - Math.abs(last)));\n                    ans += Math.abs(mid[i]) - Math.abs(last);\n                    last = mid[i];\n                }\n            } else if(mid[i] == 0) {\n                last = 0;\n            } else {\n                last = mid[i];\n                // System.out.println(\"##1 \" + Math.abs(mid[i]));\n                ans+= Math.abs(mid[i]);\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721532135",
    "subm_id": "548390629"
}