{
    "username": "daemon_exe",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long int h_pieces = 1;\n        long long int v_pieces = 1;\n        long long int total_cost = 0;\n        \n        vector<pair<long long int, char>> cuts;\n        \n        for (int cost : horizontalCut) {\n            cuts.emplace_back(cost, 'H');\n        }\n        \n        for (int cost : verticalCut) {\n            cuts.emplace_back(cost, 'V');\n        }\n        \n        sort(cuts.begin(), cuts.end(), greater<pair<long long int, char>>());\n        \n        for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                total_cost += cut.first * v_pieces;\n                h_pieces++;\n            } else {\n                total_cost += cut.first * h_pieces;\n                v_pieces++;\n            }\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720925723",
    "subm_id": "1320264093"
}