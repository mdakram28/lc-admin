{
    "username": "Anupam_732",
    "submission": "class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n\nint countOfPairs(vector<int>& nums) {\n    int n = nums.size();\n    vector<vector<int>> dp(51, vector<int>(51, 0));\n    vector<vector<int>> cumulative(51, vector<int>(51, 0));\n\n    // Initialize dp for the first element\n    for (int j = 0; j <= nums[0]; ++j) {\n        int k = nums[0] - j;\n        dp[j][k] = 1;\n    }\n\n    // Fill dp table for the rest of the elements\n    for (int i = 1; i < n; ++i) {\n        vector<vector<int>> new_dp(51, vector<int>(51, 0));\n\n        // Build cumulative sums for the current state\n        for (int j = 0; j <= 50; ++j) {\n            for (int k = 50; k >= 0; --k) {\n                cumulative[j][k] = dp[j][k];\n                if (k < 50) {\n                    cumulative[j][k] = (cumulative[j][k] + cumulative[j][k + 1]) % MOD;\n                }\n            }\n        }\n\n        // Transition to new state\n        for (int j = 0; j <= nums[i]; ++j) {\n            int k = nums[i] - j;\n            for (int prev_j = 0; prev_j <= j; ++prev_j) {\n                new_dp[j][k] = (new_dp[j][k] + cumulative[prev_j][k]) % MOD;\n            }\n        }\n\n        dp = new_dp;  // Move to the next state\n    }\n\n    // Calculate the result\n    int result = 0;\n    for (int j = 0; j <= 50; ++j) {\n        for (int k = 0; k <= 50; ++k) {\n            result = (result + dp[j][k]) % MOD;\n        }\n    }\n\n    return result;\n}\n};",
    "submit_ts": "1723346077",
    "subm_id": "1351569690"
}