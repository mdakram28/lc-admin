{
    "username": "yuanchenxi2022",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        \n        def calc(points):\n            nn = len(points)\n            ssum = list(range(nn))\n            ddiff = ssum.copy()\n            \n            def cal_sum(xx):\n                return sum(points[xx])\n            \n            def cal_diff(xx):\n                return points[xx][0] - points[xx][1]\n            \n            ssum.sort(key=cal_sum)\n            ddiff.sort(key=cal_diff)\n            \n            ssum_first= ssum[0]\n            ssum_last= ssum[-1]\n            ssum_max = cal_sum(ssum_last) - cal_sum(ssum_first)\n            \n            ddiff_first= ddiff[0]\n            ddiff_last= ddiff[-1]\n            diff_max = cal_diff(ddiff_last) - cal_diff(ddiff_first)\n            \n            if ssum_max > diff_max:\n                return (ssum_max, ssum_last, ssum_first)\n            return (diff_max, ddiff_last, ddiff_first)\n        \n        mmax, p1, p2 = calc(points)\n        \n        points2 = points.copy()\n        points3 = points2.copy()\n        points2.pop(p1)\n        points3.pop(p2)\n        \n        p2_max, _, _ = calc(points2)\n        p3_max, _, _ = calc(points3)\n        return min(p2_max, p3_max)\n        \n            \n            \n            \n            \n            "
}