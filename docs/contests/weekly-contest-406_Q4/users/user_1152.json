{
    "username": "socialfew6788",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n    long long totalCost = 0;\n    int h_pieces = 1, v_pieces = 1;\n    int i = 0, j = 0;\n\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n        if (horizontalCut[i] >= verticalCut[j]) {\n            totalCost += horizontalCut[i] * v_pieces;\n            h_pieces++;\n            i++;\n        } else {\n            totalCost += verticalCut[j] * h_pieces;\n            v_pieces++;\n            j++;\n        }\n    }\n\n    while (i < horizontalCut.size()) {\n        totalCost += horizontalCut[i] * v_pieces;\n        i++;\n    }\n\n    while (j < verticalCut.size()) {\n        totalCost += verticalCut[j] * h_pieces;\n        j++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720926091",
    "subm_id": "1320275695"
}