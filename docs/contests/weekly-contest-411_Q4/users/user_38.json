{
    "username": "Balakrishnan Varadarajan",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    \n    int GetCounts(const vector<int>& cumul, int st, int en) {\n        if (st > en) return 0;\n        return cumul[en]-(st?cumul[st-1]:0);\n    }\n    \n    ll B(ll x) {\n        return (x*(x+1))/2;\n    }\n    \n    ll B(ll x, ll y) {\n        return B(y)-B(x-1);\n    }\n    \n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        \n        int n=s.size();\n        \n        vector<vector<int>> counts(2, vector<int>(n));\n        for(int i=0;i<n;i++) {\n            for(int b : {0,1}) {\n                counts[b][i]=(s[i]==b+'0');\n                if (i) counts[b][i]+=counts[b][i-1];\n            }\n        }\n        \n        int j=0;\n        vector<int> min_idx(n);\n        for(int i=0;i<n;i++) {\n            // min index j such that min(counts[0][i..j],counts[1][i..j]) <= k\n            while(j+1<=i && min(GetCounts(counts[0],j,i),GetCounts(counts[1],j,i))>k) j++;\n            min_idx[i]=j;\n        }\n        vector<ll> cumul(n);\n        for(int i=0;i<n;i++) {\n            cumul[i]=min_idx[i];\n            if (i) cumul[i]+=cumul[i-1];\n        }\n        vector<ll> ret;\n        for(auto q : queries) {\n            int l = q[0];\n            int r = q[1];\n            \n            ll ans = 0;\n            \n            // from i to k, it is \n            int low=l;\n            int high=r;\n            while(low<high) {\n                int mid=(low+high+1)/2;\n                if (min_idx[mid]<=l) {\n                    low=mid;\n                } else {\n                    high=mid-1;\n                }\n            }\n            // from l to low -> l\n            // sum_{i=l to low}(i-l+1)\n            // for(int i=l;i<=low;i++) {\n            //     ans += i-l+1;\n            // }\n            \n            ans += B(l,low)-(ll)(l-1)*(low-l+1);\n            \n            ans += B(low+1,r)+r-low;\n            \n            ans -= cumul[r]-cumul[low];\n            \n//             for(int i=low+1;i<=r;i++) {\n//                 ans -= min_idx[i];\n//             }\n            ret.push_back(ans);\n        }\n        return ret;\n        \n    }\n};",
    "submit_ts": "1723949099",
    "subm_id": "1359710394"
}