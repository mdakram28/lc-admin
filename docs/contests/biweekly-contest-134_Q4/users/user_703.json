{
    "username": "chong-t5",
    "submission": "class Solution {\npublic:\n    int dp[30];\n    int inf = 0x3f3f3f3f;\n    long long countSubarrays(vector<int>& nums, int k) {\n        vector<vector<int>> arr;\n        vector<int> b;\n        for(int i=0;i<nums.size();i++){\n            if((nums[i]&k)==k){\n                b.push_back(nums[i]);\n            }\n            else{\n                if(b.size()) arr.push_back(b);\n                b.clear();\n            }\n        }\n        long long ans=0;\n         if(b.size()) arr.push_back(b);\n                b.clear();\n        for(auto &b:arr){\n            memset(dp,-1,sizeof(dp));\n            int n=b.size();\n            for(int i=0;i<n;i++){\n                int ct = i;\n                for(int j=0;j<30;j++){\n                    if((b[i]>>j&1)&&(k>>j&1)==0){\n                        ct = min(ct,dp[j]);\n                    }\n                }\n                ans += ct+1;\n                for(int j=0;j<30;j++){\n                    if((b[i]>>j&1)==0)\n                        dp[j]=max(dp[j],i);\n                }\n\n            }\n        }\n        return ans;\n\n    }\n};",
    "submit_ts": "1720279919",
    "subm_id": "544569585"
}