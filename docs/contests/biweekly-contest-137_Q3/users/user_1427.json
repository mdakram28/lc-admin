{
    "username": "SundayLi",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        List<Node> list = new ArrayList<>(board.length * board[0].length);\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                list.add(new Node(i, j, board[i][j]));\n            }\n        }\n        list.sort(((o1, o2) -> Integer.compare(o2.v, o1.v)));\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < list.size() - 2; i++) {\n            Node a = list.get(i);\n            // if (a.v * 3 < max) break;\n            for (int j = i + 1; j < list.size() - 1; j++) {\n                Node b = list.get(j);\n                if (b.i != a.i && b.j != a.j) {\n                    for (int k = 0; k < list.size(); k++) {\n                        Node c = list.get(k);\n                        if ((c.i != a.i && c.j != a.j) && (c.i != b.i && c.j != b.j)) {\n                            max = Math.max(max, a.v + 0L + b.v + c.v);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return max;\n    }\n\n    static class Node {\n        int i;\n        int j;\n        int v;\n\n        public Node(int i, int j, int v) {\n            this.i = i; this.j = j; this.v = v;\n        }\n    }\n}",
    "submit_ts": "1723910333",
    "subm_id": "556340790"
}