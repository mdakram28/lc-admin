{
    "username": "zanj0",
    "submission": "/*\n\tJAI JAGANNATH!\n*/\n//@Author : zanj0\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ff              first\n#define ss              second\n#define pb              push_back\n#define MOD             1000000007\n#define inf             1e18\n\ntypedef long long int lli;\nmap<lli, map<lli, map<lli, lli>>> dp;\nclass Solution {\npublic:\n\tlli n;\n\tlli FastPow(lli base, lli power) {\n\t\tlli ret = 1;\n\t\twhile (power) {\n\t\t\tif (power & 1)ret *= base;\n\t\t\tbase *= base\n\t\t\t        ;\n\t\t\tpower /= (lli)2;\n\t\t}\n\t\treturn ret;\n\t}\n\tlli Dfs(lli idx, lli jump, int last_jump) {\n\t\tif (idx < 0)  return 0;\n\t\tlli ret = idx == n;\n        if(dp.count(idx) && dp[idx].count(jump) && dp[idx][jump].count(last_jump)) return dp[idx][jump][last_jump];\n\t\tif (idx > n) {\n\t\t\tlli less = !last_jump ? idx - 1 : idx;\n\t\t\tif (less > n) return ret;\n\t\t}\n\n\t\tif (!last_jump) {\n\t\t\tret += Dfs(idx - 1, jump, 1);\n\t\t}\n\t\tret += Dfs(idx + FastPow(2, jump), jump + 1 , 0);\n\t\treturn dp[idx][jump][last_jump] = ret;\n\t}\n\tint waysToReachStair(int k) {\n        dp.clear();\n        n = k;\n\t\tif (k == 0) {\n\t\t\treturn 2;\n\t\t}\n\t\tif (k == 1) {\n\t\t\treturn 4;\n\t\t}\n\t\tlli ret = Dfs(1, 0, 0);\n\t\treturn ret;\n\t}\n};\n\n\n#ifdef LOCAL\nint main() {\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tcout << \"Compiled!\" << endl;\n}\n#endif",
    "submit_ts": "1716087339",
    "subm_id": "1261780599"
}