{
    "username": "pathakharsh2014",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        \n        List<int[]> arr = new ArrayList<>();\n        for (int i = 0; i < horizontalCut.length; i++) {\n            arr.add(new int[]{horizontalCut[i], 0}); \n        }\n        for (int i = 0; i < verticalCut.length; i++) {\n            arr.add(new int[]{verticalCut[i], 1});\n        }\n\n       \n        arr.sort((a, b) -> b[0] - a[0]);\n\n        \n        int h = 1;\n        int v= 1;\n        long ans = 0;\n\n        \n        for (int[] i : arr) {\n            int c = i[0];\n            int t = i[1];\n            if (t == 0) {\n                ans += (long) c * v;\n                h++;\n            } else { \n                ans+= (long) c * h;\n                v++;\n            }\n        }\n\n        return ans;\n    }\n}",
    "submit_ts": "1720925988",
    "subm_id": "1320272517"
}