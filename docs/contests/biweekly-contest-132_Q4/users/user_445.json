{
    "username": "Manaslc07",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) \n    {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        int ans = 1;\n        vector<int> vk(k + 1, -1);\n        vector<unordered_map<int, int>> vkm(k + 1);\n\n        for (int i = 0; i < n; i++) \n        {\n            for (int j = 0; j < k + 1; j++) \n            {\n                for (int l = 0; l < j; l++) \n                {\n                    dp[i][j] = max(dp[i][j], 1 + vk[l]);\n                }\n                if (vkm[j].find(nums[i]) != vkm[j].end()) \n                {\n                    dp[i][j] = max(dp[i][j], 1 + vkm[j][nums[i]]);\n                }\n                ans = max(ans, dp[i][j]);\n            }\n            for (int j = 0; j < k + 1; j++) \n            {\n                vk[j] = max(vk[j], dp[i][j]);\n                vkm[j][nums[i]] = max(vkm[j].find(nums[i]) != vkm[j].end() ? vkm[j][nums[i]] : 0, dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717862261",
    "subm_id": "1281817378"
}