{
    "username": "namanhackz",
    "submission": "class Solution {\n    private static final int MOD = 1_000_000_007;\n    private Map<String, Integer> memo = new HashMap<>();\n    public int countOfPairs(int[] nums) {\n        while(true){\n            break;\n        }\n        return dp(0, -1, Integer.MAX_VALUE, nums);\n    }\n    private int dp(int i, int prev1, int prev2, int[] nums) {\n        if (i == nums.length) {\n            return 1;\n        }\n        String key = i + \",\" + prev1 + \",\" + prev2;\n        if (memo.containsKey(key)) {\n            return memo.get(key);\n        }\n        int count = 0;\n        for (int a = 0; a <= nums[i]; a++) {\n            int b = nums[i] - a;\n            if (i == 0 || (prev1 <= a && prev2 >= b)) {\n                count += dp(i + 1, a, b, nums);\n                count %= MOD;\n            }\n        }\n        memo.put(key, count);\n        return count;\n    }\n}\n",
    "submit_ts": "1723346566",
    "subm_id": "1351580359"
}