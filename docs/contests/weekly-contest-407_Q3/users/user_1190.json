{
    "username": "san-mu-yang",
    "submission": "impl Solution {\n    pub fn max_operations(s: String) -> i32 {\n        let mut diff_vec = vec![0;s.len()];\n        let char_vec = Vec::from(s);\n        let mut one_acc = 0;\n        let mut zero_acc = 0;\n        for i in 0..(char_vec.len() - 1) {\n            if char_vec[i] == '1' as u8 {\n                one_acc += 1;\n            }\n            if char_vec[i] == '1' as u8 && char_vec[i + 1] == '0' as u8{\n                diff_vec[i + 1] += one_acc + zero_acc;\n                zero_acc += one_acc;\n                one_acc = 0;\n                \n            }\n        }\n        for i in 1..diff_vec.len(){\n            diff_vec[i] = diff_vec[i] + diff_vec[i - 1];\n        }\n        \n        return diff_vec.last().unwrap().clone();\n    }\n}",
    "submit_ts": "1721530447",
    "subm_id": "548378670"
}