{
    "username": "inas_coding_school",
    "submission": "/**\n * @param {number} m\n * @param {number} n\n * @param {number[]} horizontalCut\n * @param {number[]} verticalCut\n * @return {number}\n */\nvar minimumCost = function(m, n, horizontalCut, verticalCut) {\n        let pq = new PriorityQueue({\n        compare: (e1, e2) => {\n            return e2[0] - e1[0];\n        }\n    });\n\n    let horizontals = 1;\n    let verticals = 1;\n    let cost = 0;\n\n    for (const cut of verticalCut) {\n        pq.enqueue([cut, true]);\n    }\n    for (const cut of horizontalCut) {\n        pq.enqueue([cut, false]);\n    }\n\n    while (pq.size() > 0) {\n        let [cut, isVertical] = pq.dequeue();\n\n        if (isVertical) {\n            cost += (horizontals * cut);\n            verticals++;\n        } else {\n            cost += (verticals * cut);\n            horizontals++;\n        }\n    }\n\n    return cost;\n};",
    "submit_ts": "1720925924",
    "subm_id": "1320270546"
}