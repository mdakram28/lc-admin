{
    "username": "SeeDee_",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    int hIndex = 0, vIndex = 0;\n    long long totalCost = 0;\n    int horizontalPieces = 1, verticalPieces = 1;\n\n    while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n        if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n            totalCost += (long long)horizontalCut[hIndex] * verticalPieces;\n            horizontalPieces++;\n            hIndex++;\n        } else {\n            totalCost += (long long)verticalCut[vIndex] * horizontalPieces;\n            verticalPieces++;\n            vIndex++;\n        }\n    }\n\n    while (hIndex < horizontalCut.size()) {\n        totalCost += (long long)horizontalCut[hIndex] * verticalPieces;\n        hIndex++;\n    }\n\n    while (vIndex < verticalCut.size()) {\n        totalCost += (long long)verticalCut[vIndex] * horizontalPieces;\n        vIndex++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720925359",
    "subm_id": "1320252007"
}