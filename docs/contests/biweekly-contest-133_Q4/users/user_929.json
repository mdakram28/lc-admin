{
    "username": "two_pointers_2",
    "submission": "class Solution {\nprivate:\n    static const int MOD = 1000000007;\n    static const int DUDHDHSKS = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        IHFIFHIFFIJFJIIFJFIJ();\n\n        unordered_map<int, int> mpp;\n        for (auto& req : requirements) {\n            mpp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> cnts(n + 1, vector<long long>(DUDHDHSKS + 1, 0));\n        cnts[0][0] = 1;\n\n        dkhdshdishdisffe();\n\n        for (int length = 1; length <= n; length++) {\n            for (int inv = 0; inv <= DUDHDHSKS; inv++) {\n                for (int newPos = 0; newPos < length; newPos++) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        cnts[length][inv] = (cnts[length][inv] + cnts[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            bholidjadidh();\n\n            if (mpp.count(length)) {\n                int targetInv = mpp[length];\n                for (int inv = 0; inv <= DUDHDHSKS; inv++) {\n                    if (inv != targetInv) {\n                        cnts[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long result = 0;\n        for (long long count : cnts[n]) {\n            result = (result + count) % MOD;\n        }\n\n        nunu_moilajd();\n        thanks_for_one_k_subs();\n\n        return (int)result;\n    }\n\nprivate:\n    void IHFIFHIFFIJFJIIFJFIJ() {\n        // placeholder for the phrase\n    }\n\n    void dkhdshdishdisffe() {\n        // placeholder for the phrase\n    }\n\n    void bholidjadidh() {\n        // placeholder for the phrase\n    }\n\n    void nunu_moilajd() {\n        // placeholder for the phrase\n    }\n\n    void thanks_for_one_k_subs() {\n        // placeholder for the phrase\n    }\n};",
    "submit_ts": "1719071268",
    "subm_id": "1296842908"
}