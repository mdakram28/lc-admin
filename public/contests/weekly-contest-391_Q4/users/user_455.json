{
    "username": "szoro",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        vector<int> sum(n),dif(n);\n        \n        unordered_map<int,set<int>> mps,mpd;\n        for(int i=0;i<n;i++){\n            auto x = p[i][0],y = p[i][1];\n            sum[i] = x+y;\n            dif[i] = x-y;\n            mps[sum[i]].insert(dif[i]);\n            mpd[dif[i]].insert(sum[i]);\n        }\n        \n        sort(sum.begin(),sum.end());\n        sort(dif.begin(),dif.end());\n        \n        // sum pram // remove s0\n        int a1 = sum[n-1]-sum[1],a2;\n        if(mps[sum[0]].find(dif[0])!=mps[sum[0]].end()){\n            a2 = dif[n-1]-dif[1];\n        }\n        else a2 = dif[n-1]-dif[0];\n        if(mps[sum[0]].find(dif[n-1])!=mps[sum[0]].end()){\n            a2 = min(a2,dif[n-2]-dif[0]);\n        }\n        \n        a1 = max(a1,a2);\n        // sum param // remove sn-1\n        int b1 = sum[n-2]-sum[0],b2;\n        if(mps[sum[n-1]].find(dif[0])!=mps[sum[n-1]].end()){\n            b2 = dif[n-1]-dif[1];\n        }\n        else b2 = dif[n-1]-dif[0];\n        if(mps[sum[n-1]].find(dif[n-1])!=mps[sum[n-1]].end()){\n            b2 = min(b2,dif[n-2]-dif[0]);\n        }\n        \n        b1 = max(b1,b2);\n        \n        // dif param // remove d0\n        int c1 = dif[n-1]-dif[1],c2;\n        if(mpd[dif[0]].find(sum[0])!=mpd[dif[0]].end()){\n            c2 = sum[n-1]-sum[1];\n        }\n        else c2 = sum[n-1]-sum[0];\n        if(mpd[dif[0]].find(sum[n-1])!=mpd[dif[0]].end()){\n            c2 = min(c2,sum[n-2]-sum[0]);\n        }\n        \n        c1 = max(c1,c2);\n        \n        // dif param // remove dn-1\n        int d1 = dif[n-2]-dif[0],d2;\n        if(mpd[dif[n-1]].find(sum[0])!=mpd[dif[n-1]].end()){\n            d2 = sum[n-1]-sum[1];\n        }\n        else d2 = sum[n-1]-sum[0];\n        if(mpd[dif[n-1]].find(sum[n-1])!=mpd[dif[n-1]].end()){\n            d2 = min(d2,sum[n-2]-sum[0]);\n        }\n        \n        d1 = max(d1,d2);\n        \n        return min(a1,min(b1,min(c1,d1)));\n            \n        \n    }\n};"
}