{
    "username": "anshulagarwal3131",
    "submission": "class Solution {\npublic:\n    int n;\n    vector<int> seg;\n    vector<int> ans;\n    void Build(int ind,int low,int high){\n        if(low==high){\n            seg[ind] = ans[low];\n            return;\n        }\n        int mid = (low+high)/2;\n        Build(2*ind,low,mid);\n        Build(2*ind+1,mid+1,high);\n        seg[ind] = max(seg[2*ind],seg[2*ind+1]);\n    }\n    int findMax(int l,int r,int ind,int low,int high){\n        if(l<=low && r>=high)\n            return seg[ind];\n        if(l>high || r<low)\n            return INT_MIN;\n        int mid = (low+high)/2;\n        int left = findMax(l,r,2*ind,low,mid);\n        int right = findMax(l,r,2*ind+1,mid+1,high);\n        return max(left,right);\n    }\n    int update(int x,int val,int ind,int low,int high){\n        if(x<low || x>high)\n            return seg[ind];\n        if(low==x && high==x){\n            seg[ind] = val;\n            return seg[ind];\n        }\n        int mid = (low+high)/2;\n        int l = update(x,val,2*ind,low,mid);\n        int r = update(x,val,2*ind+1,mid+1,high);\n        return seg[ind] = max(l,r);\n    }\n    vector<bool> getResults(vector<vector<int>>& q) {\n        seg.resize(400001);\n        ans.resize(100001);\n        set<int> st;\n        vector<bool> ans;\n        for(auto i : q){\n            if(i.size()==2){\n                int j = i[1];\n                auto it = st.lower_bound(j);\n                int l = 0;\n                if(it!=st.end()){\n                    update((*it),(*it)-j,1,1,100000);\n                }\n                if(it!=st.begin()){\n                    it--;\n                    l = (*it);\n                }\n                st.insert(j);\n                update(j,j-l,1,1,100000);\n            }\n            else{\n                auto it = st.upper_bound(i[1]);\n                if(it==st.begin()){\n                   if(i[2]<=i[1])\n                       ans.push_back(true);\n                    else\n                        ans.push_back(false);\n                    continue;\n                }\n                it--;\n                int j = (*it);\n                int max_width = findMax(0,j,1,1,100000);\n                max_width = max(max_width,i[1]-j);\n                // cout<<max_width<<endl;\n                if(max_width>=i[2])\n                    ans.push_back(true);\n                else\n                    ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716650295.0
}