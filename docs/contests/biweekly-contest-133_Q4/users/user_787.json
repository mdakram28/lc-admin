{
    "username": "anushka_dwivedi_",
    "submission": "from typing import List\nfrom collections import defaultdict\nclass Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        mod=1000000007\n        maxi=400\n        new_map = defaultdict(int)\n        for j in requirements:\n            new_map[j[0] + 1] = j[1]\n\n        pc = [[0] *(maxi + 1) for i in range(n + 1)]\n        pc[0][0] = 1\n\n        for i in range(1, n + 1):\n            for v in range(maxi + 1):\n                for j in range(i):\n                    inp = v - j\n                    if inp >= 0:\n                        pc[i][v] = (pc[i][v] + pc[i - 1][inp]) % mod\n\n            if i in new_map:\n                invt = new_map[i]\n                for v in range(maxi + 1):\n                    if v != invt:\n                        pc[i][v] = 0\n\n        ans = 0\n        for c in pc[n]:\n            ans = (ans + c) % mod\n        return ans\n\n\n            ",
    "submit_ts": 1719071236.0
}