{
    "username": "aryangarg0729",
    "submission": "class Solution {\npublic:\n    int findmaxdist(vector<vector<int>>& points,int dt){\n        vector<int>sum,diff;\n        for(int i = 0;i<points.size();i++){\n            if(i==dt){continue;}\n            sum.push_back(points[i][0]+points[i][1]);\n            diff.push_back(points[i][0]-points[i][1]);\n        }\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        // cout<<max(sum.back()-sum[0],diff.back()-diff[0])<<endl;\n        return max(sum.back()-sum[0],diff.back()-diff[0]);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        // vector<pair<vector<int>,int>>pts;\n        // for(int i = 0;i<points.size();i++){\n        //     pts.push_back()\n        // }\n        \n        vector<pair<int,int>>sum,diff;\n        for(int i = 0;i<points.size();i++){\n            sum.push_back({points[i][0]+points[i][1],i});\n            diff.push_back({points[i][0]-points[i][1],i});\n        }\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        int a = sum.back().second;\n        int b = sum[0].second;\n        int c = diff.back().second;\n        int d = diff[0].second;\n        // cout<<sum.back().second<<\" \"<<sum.front().second<<\" \"<<diff.back().second<<\" \"<<diff[0].second<<endl;\n        return min(min(findmaxdist(points,a),findmaxdist(points,b)),min(findmaxdist(points,c),findmaxdist(points,d)));\n        \n    }\n};"
}