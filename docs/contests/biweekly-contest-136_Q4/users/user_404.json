{
    "username": "fanwenshanmu",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1; \n        vector <vector <int>> adj(n);\n        for (int i = 0; i < n - 1; ++i) {\n            adj[edges[i][0]].emplace_back(edges[i][1]);\n            adj[edges[i][1]].emplace_back(edges[i][0]);\n        }\n        vector <int> ans(n);\n        vector <int> f(n), h(n), g(n); \n        function <void(int, int)> dfs = [&] (int u, int p) -> void {\n            for (auto v : adj[u]) if(v != p) {\n                dfs(v, u);\n                int c = f[v] + !(v & 1) + 1; \n                if(f[u] < c) {\n                    h[u] = f[u], f[u] = c;\n                } else h[u] = max(h[u], c);\n            }\n        };\n\n        function <void(int, int)> _dfs = [&] (int u, int p) -> void {\n            for (auto v : adj[u]) if(v != p) {\n                if(f[v] + !(v & 1) + 1 == f[u]) {\n                    g[v] = max(h[u], g[u]) + !(u & 1) + 1;\n                } else {\n                    g[v] = max(f[u], g[u]) + !(u & 1) + 1; \n                }\n                _dfs(v, u);\n            }\n        };\n        dfs(0, -1), _dfs(0, -1);\n        for (int i = 0; i < n; ++i) ans[i] = max(f[i], g[i]);\n        return ans; \n    }\n};",
    "submit_ts": "1722700469",
    "subm_id": "1343242818"
}