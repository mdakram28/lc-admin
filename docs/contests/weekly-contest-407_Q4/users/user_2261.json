{
    "username": "fellowshiptech",
    "submission": "class Solution {\npublic:\n  long long minimumOperations(std::vector<int> &nums, std::vector<int> &target) {\n    if (nums.size() == 0) return 0;\n\n    std::vector<int> diff(nums.size());\n    for (int i = 0; i < nums.size(); i++) {\n      diff[i] = target[i] - nums[i];\n    }\n\n    long long total_ops = std::abs(diff[0]);\n    for (int i = 1; i < diff.size(); i++) {\n      if (diff[i] == 0) continue;\n      bool same_sign = (diff[i] > 0 && diff[i-1] > 0) || (diff[i] < 0 && diff[i-1] < 0);\n      if (same_sign) {\n        if (diff[i] > 0) {\n          total_ops += std::max(0,  diff[i] - diff[i-1]);\n        } else {\n          total_ops += std::max(0,  diff[i-1] - diff[i]);\n        }\n      } else {\n        total_ops += abs(diff[i]);\n      }\n    }\n\n    return total_ops;\n  }\n};\n",
    "submit_ts": "1721532972",
    "subm_id": "1327998342"
}