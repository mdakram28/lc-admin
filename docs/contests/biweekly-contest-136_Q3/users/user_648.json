{
    "username": "lucky_ducky1",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int count = 0;\n        for (int r = 0; r < grid.size() / 2; r++) {\n            for (int c = 0; c < grid[0].size() / 2; c++) {\n                int cells = grid[r][c] + \n                    grid[r][grid[0].size() - 1 - c] + \n                    grid[grid.size() - 1 - r][c] + \n                    grid[grid.size() - 1 - r][grid[0].size() - 1 - c];\n                count += min(cells, 4-cells);\n            }\n        }\n\n        if (grid.size() % 2 == 0 && grid[0].size() % 2 == 0) {\n            return count;\n        }\n\n        int sum = 0;\n        int rowdiff = 0;\n        int coldiff = 0;\n\n        vector<int> row = grid[grid.size() / 2];\n        vector<int> col = {};\n        for (int i = 0; i < grid.size(); i++) {\n            col.push_back(grid[i][grid[0].size() / 2]);\n        }\n\n        if (grid.size() % 2 == 1) {\n            \n            for (int i = 0; i < row.size(); i++) {\n                sum += row[i];\n                rowdiff += (row[i] != row[row.size() - 1 - i]) ? 1 : 0;\n            }\n            rowdiff /= 2;\n        }\n\n        if (grid[0].size() % 2 == 1) {\n            for (int i = 0; i < col.size(); i++) {\n                sum += col[i];\n                coldiff += (col[i] != col[col.size() - 1 - i]) ? 1 : 0;\n            }\n            coldiff /= 2;\n        }\n\n        if (row[row.size() / 2] == 1 && grid[0].size() % 2 == 1 && grid.size() % 2 == 1) {\n            count++;\n            sum -= 2;\n        }\n        if (sum % 4 == 2 && (rowdiff + coldiff) == 0) {\n            count += 2;\n        } else {\n            count += rowdiff + coldiff;\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1722697481",
    "subm_id": "1343148106"
}