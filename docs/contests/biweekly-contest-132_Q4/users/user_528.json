{
    "username": "cianotico",
    "submission": "class Solution:\n    def maximumLength(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        dp = [[0 for _ in range(n)] for _ in range(k + 1)]\n        res = -inf\n        pprev = [0] * n\n        for kk in range(k + 1):\n            prev = pprev.copy()\n            pprev = [0] * n\n            curr = {}\n            for i in range(n - 1, -1, -1):\n                dp[kk][i] = 1\n                if kk != 0:\n                    dp[kk][i] = max(dp[kk - 1][i], dp[kk][i])\n                if kk != 0 and i != n - 1:\n                    dp[kk][i] = max(dp[kk][i], prev[i + 1] + 1)\n                if nums[i] in curr:                \n                    dp[kk][i] = max(dp[kk][i], curr[nums[i]] + 1)\n\n                res = max(res, dp[kk][i])\n\n                curr[nums[i]] = dp[kk][i]\n\n                pprev[i] = dp[kk][i]\n                if i != n  -1:\n                    pprev[i] = max(pprev[i], pprev[i + 1])\n        return res\n# class Solution:\n#     def maximumLength(self, nums: List[int], k: int) -> int:\n#         n = len(nums)\n#         dp = [[0 for _ in range(n)] for _ in range(k + 1)]\n#         for kk in range(k + 1):\n#             for i in range(n - 1, -1, -1):\n#                 dp[kk][i] = 1\n#                 if kk != 0:\n#                     dp[kk][i] = max(dp[kk - 1][i], dp[kk][i])\n#                 for j in range(i + 1, n):\n#                     if nums[j] != nums[i] and kk != 0:\n#                         dp[kk][i] = max(dp[kk][i], dp[kk-1][j] + 1)\n#                     elif nums[j] == nums[i]:\n#                         dp[kk][i] = max(dp[kk][i], dp[kk][j] + 1)\n#         return max(dp[kk][i] for i in range(n) for kk in range(k + 1))",
    "submit_ts": "1717861685",
    "subm_id": "1281798957"
}