{
    "username": "LessThanExpert",
    "submission": "#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n#define ll long long\n#define ull unsigned ll\n#define float double\n#define all(up) up.begin(), up.end()\n#define uniq(up) up.erase(unique(all(up)), up.end());\ntemplate <class T>\nusing oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nll getRandomNumber(ll G, ll r) { return uniform_int_distribution<ll>(G, r)(rng); }\nconst ll N = 2e5 + 5, mod = 1E9 + 7, LOG = 18, INF = 1e18, inf = 1E9;\n\nclass Solution\n{\npublic:\n    int minFlips(vector<vector<int>> &grid)\n    {\n        int n = grid.size(), m = grid[0].size();\n        vector<int> v[2];\n        int ans = 0;\n        for (int i = 0; i < n / 2; i++)\n        {\n            for (int j = 0; j < m / 2; j++)\n            {\n                int ones = grid[i][j] + grid[i][m - j - 1] + grid[n - i - 1][j] + grid[n - i - 1][m - j - 1];\n                ans += min(ones, 4 - ones);\n                cout << ones << ' ' << i << ' ' << j << '\\n';\n            }\n        }\n        int matchones1 = 0, nonm1 = 0, matchones2 = 0, nonm2 = 0;\n        if (n & 1)\n        {\n            for (int i = 0; i < m / 2; i++)\n            {\n                if (grid[n / 2][i] != grid[n / 2][m - i - 1])\n                    nonm1++;\n                else if (grid[n / 2][i])\n                    matchones1++;\n            }\n            matchones1 %= 2;\n            ans += nonm1;\n        }\n        if (m & 1)\n        {\n            for (int i = 0; i < n / 2; i++)\n            {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2])\n                    nonm2++;\n                else if (grid[i][m / 2])\n                    matchones2++;\n            }\n            matchones2 %= 2;\n            ans += nonm2;\n        }\n        if (matchones1 + matchones2 == 1)\n        {\n            if (nonm1 + nonm2 < 1)\n            {\n                ans += 2;\n            }\n        }\n        if (n % 2 && m % 2)\n        {\n            if (grid[n / 2][m / 2])\n                ans++;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1722698462",
    "subm_id": "1343181381"
}