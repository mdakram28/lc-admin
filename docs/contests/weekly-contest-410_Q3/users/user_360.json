{
    "username": "atm314",
    "submission": "using i8 = int8_t;\nusing u8 = uint8_t;\nusing i16 = int16_t;\nusing u16 = uint16_t;\nusing i32 = int32_t;\nusing u32 = uint32_t;\nusing i64 = int64_t;\nusing u64 = uint64_t;\n\nusing f32 = float;\nusing f64 = double;\n\n#define all(x) (x).begin(), (x).end()\n#define ll long long int\n#define VI vector<ll>\n#define VVI vector<VI>\n\n#define ISD true\n#define debug(x) \\\n    if (ISD)     \\\n    cout << #x << \": \" << x << endl\n#define DEBUG(x) cout << #x << \": \" << x << endl\n\ntemplate <typename C>\ni64 SIZE(const C &c)\n{\n    return static_cast<i64>(c.size());\n}\n\ntemplate <typename T, size_t N>\ni64 SIZE(const T (&)[N]) { return static_cast<i64>(N); }\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmax(T &xmax, const U &x, Comp comp = {})\n{\n    if (comp(xmax, x))\n    {\n        xmax = x;\n        return true;\n    }\n    return false;\n}\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmin(T &xmin, const U &x, Comp comp = {})\n{\n    if (comp(x, xmin))\n    {\n        xmin = x;\n        return true;\n    }\n    return false;\n}\n\n#define CPP_STR(x) CPP_STR_I(x)\n#define CPP_CAT(x, y) CPP_CAT_I(x, y)\n#define CPP_STR_I(args...) #args\n#define CPP_CAT_I(x, y) x##y\n\n#define ASSERT(expr...) assert((expr))\n\n// }}}\n\nconstexpr i64 INF = 1'010'000'000'000'000'017LL;\n\nconstexpr f64 EPS = 1e-12;\n\nconstexpr f64 PI = 3.14159265358979323846;\n\n#define M5 100007\n#define M9 1000000000\n#define MOD M9 + 7\n#define F first\n#define S second\n\n// util {{{\n#define FOR(i, start, end) for (i64 i = (start), CPP_CAT(i, xxxx_end) = (end); i < CPP_CAT(i, xxxx_end); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\nclass Solution\n{\npublic:\n    int countOfPairs(vector<int> &nums)\n    {\n        int N = nums.size();\n        vector<vector<ll>> dp(51, vector<ll>(51, -1));\n        dp[0][50] = 1;\n        REP(i, N)\n        {\n            vector<vector<ll>> ndp(51, vector<ll>(51, -1));\n            REP(x, 51)\n            {\n                REP(y, 51)\n                {\n                    if (dp[x][y] == -1)\n                    {\n                        continue;\n                    }\n                    REP(k, 51)\n                    {\n                        ll nx = k;\n                        ll ny = nums[i] - k;\n                        if (ny < 0)\n                        {\n                            continue;\n                        }\n                        if (nx < x || ny > y)\n                        {\n                            continue;\n                        }\n                        if (ndp[nx][ny] == -1)\n                        {\n                            ndp[nx][ny] = dp[x][y];\n                        }\n                        else\n                        {\n                            ndp[nx][ny] += dp[x][y];\n                            ndp[nx][ny] %= MOD;\n                        }\n                    }\n                }\n            }\n            swap(ndp, dp);\n        }\n        ll ans = 0;\n        REP(i, 51)\n        {\n            REP(j, 51)\n            {\n                if (dp[i][j] == -1)\n                {\n                    continue;\n                }\n                ans += dp[i][j];\n                ans %= MOD;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723344987",
    "subm_id": "1351546247"
}