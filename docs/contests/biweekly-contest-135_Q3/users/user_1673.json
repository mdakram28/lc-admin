{
    "username": "abhikumar_2025",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, int> mp;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++) {\n            mp[abs(nums[i] - nums[n - i - 1])]++;\n        }\n\n        \n        int ans = 0, ans1 = INT_MAX;\n        vector<pair<int, int>> v;\n        for(auto &it : mp)\n        {\n            v.push_back({it.second, -it.first});\n        }\n        sort(v.rbegin(), v.rend());\n\n        int n1 = v.size();\n        for (int j = 0; j < min(n1, 2); j++) {\n            ans = 0;\n            for (int i = 0; i < n / 2; i++) {\n                int mi = min(nums[i], nums[n - i - 1]);\n                int ma = max(nums[i], nums[n - i - 1]);\n                if (abs(ma - mi) != v[j].second*-1) {\n                    if (k - mi >= v[j].second*-1)\n                        ans++;\n                    else if (ma >= v[j].second*-1)\n                        ans++;\n                    else\n                        ans += 2;\n                }\n            }\n            ans1 = min(ans1, ans);\n            // if(ans+it.second==n) break;\n\n        }\n\n        return ans1;\n    }\n};",
    "submit_ts": "1721488827",
    "subm_id": "1327434466"
}