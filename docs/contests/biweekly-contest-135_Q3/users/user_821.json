{
    "username": "ncatastrophe",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        # dp, O(n) to determine satisfactory or not\n        # use dic to record abs(difference)?\n        # 1 0 1 2 4 3 -> 2, 4, 1\n        # 0 1 2 3 3 6 5 4 -> 4, 4, 4, 0\n        # difference is from 0 to k, but sometimes you need to change 1, or 2 elements depending on nums[i]\n        dic = {}\n        for i in range(k+1):\n            dic[i] = 0\n        n = len(nums)\n        for i in range(n//2):\n            dic[abs(nums[i]-nums[n-i-1])] += 1\n            \n        possible = [(dic[_], _) for _ in dic if dic[_] > 0]\n        possible.sort(reverse=True)\n        maxx = n  # change everything\n        # print(dic, possible)\n        for pair, poss in possible:\n            if ((n - dic[poss]*2))//2 > maxx:  # even if change all unpaired still > maxx\n                break\n            temp = 0\n            for i in range(n//2):\n                if abs(nums[i]-nums[n-i-1]) != poss:\n                    if nums[i] + poss <= k or nums[i] - poss >= 0 or nums[n-i-1] + poss <= k or nums[n-i-1] - poss >= 0:\n                        temp += 1\n                    else:\n                        temp += 2\n            print(poss, maxx, temp)\n            maxx = min(temp, maxx)\n        return maxx",
    "submit_ts": "1721488502",
    "subm_id": "1327424360"
}