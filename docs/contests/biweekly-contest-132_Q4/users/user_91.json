{
    "username": "user1523H",
    "submission": "class Solution {\npublic:\n    int dp[55][5010][2], lst[5010];\n\n    int maximumLength(vector<int>& nums, int k) {\n        vector<int> vec = nums;\n        sort(begin(vec), end(vec));\n        vec.resize(unique(begin(vec), end(vec)) - begin(vec));\n        for (int i = 0; i < nums.size(); i++) nums[i] = lower_bound(begin(vec), end(vec), nums[i]) - begin(vec);\n    \n        int n = nums.size();\n\n        for (int i = 0; i < 5010; i++) lst[i] = -1;\n        for (int i = 0; i < n; i++) {\n            if (lst[nums[i]] == -1) dp[0][i][0] = dp[0][i][1] = 1;\n            else { dp[0][i][0] = 1; dp[0][i][1] = dp[0][lst[nums[i]]][1] + 1; }\n            lst[nums[i]] = i;\n        }\n        for (int i = 1; i <= k; i++) {\n            for (int j = 0; j < 5010; j++) lst[j] = -1;\n            int mx = -1e9;\n            for (int j = 0; j < n; j++) {\n                if (lst[nums[j]] == -1) dp[i][j][0] = mx + 1, dp[i][j][1] = -1e9;\n                else { dp[i][j][0] = max(0, mx + 1); dp[i][j][1] = max(dp[i][lst[nums[j]]][1], dp[i][lst[nums[j]]][0]) + 1; }\n                lst[nums[j]] = j;\n                mx = max({mx, dp[i - 1][j][0], dp[i - 1][j][1]});\n            }\n        }\n        // for (int i = 0; i <= k; i++) {\n        //     for (int j = 0; j < n; j++) cout << i << \" \" << j << \" \" << dp[i][j][0] << \" \" << dp[i][j][1] << endl;\n        // }\n\n        int ans = 0;\n        for (int i = 0; i <= k; i++) for (int j = 0; j < n; j++) ans = max({ans, dp[i][j][0], dp[i][j][1]});\n        return ans;\n    }\n};",
    "submit_ts": "1717859552",
    "subm_id": "1281726564"
}