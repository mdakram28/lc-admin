{
    "username": "2112052",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int,char>> vec;\n        for(int i=0;i<(m-1);i++){\n            vec.push_back(make_pair(horizontalCut[i],'h'));\n        }\n        for(int i=0;i<(n-1);i++){\n            vec.push_back(make_pair(verticalCut[i],'v'));\n        }\n        sort(vec.begin(),vec.end());\n        reverse(vec.begin(),vec.end());\n        ll hor=1,ver=1;\n        ll sum=0;\n        for(int i=0;i<vec.size();i++){\n            if(vec[i].second == 'v'){\n                sum += (hor*vec[i].first);\n                ver++;\n            } \n            else{\n                sum += (ver*vec[i].first);\n                hor++;\n            }\n        }\n        return sum;\n    }\n};",
    "submit_ts": "1720925538",
    "subm_id": "1320258072"
}