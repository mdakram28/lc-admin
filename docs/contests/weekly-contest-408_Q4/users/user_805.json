{
    "username": "maaswin03",
    "submission": "from collections import deque\nfrom math import sqrt\nfrom typing import List\n\nclass Solution:\n    def bfs(self, graph: List[List[int]], start: int, target1: int, target2: int, n: int) -> bool:\n        queue = deque([start])\n        visited = [0] * (n + 4)\n        visited[start] = 1\n\n        while queue:\n            u = queue.popleft()\n            for v in graph[u]:\n                if not visited[v]:\n                    queue.append(v)\n                    visited[v] = 1\n\n        return visited[target1] or visited[target2]\n\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        num_circles = len(circles)\n        circle_info = [((x, y), r) for x, y, r in circles]\n        graph = [[] for _ in range(num_circles + 4)]\n\n        for i in range(num_circles):\n            cx, cy, cr = circle_info[i][0][0], circle_info[i][0][1], circle_info[i][1]\n            if cx <= cr:\n                graph[num_circles].append(i)\n                graph[i].append(num_circles)\n            if X - cx <= cr:\n                graph[num_circles + 1].append(i)\n                graph[i].append(num_circles + 1)\n            if cy <= cr:\n                graph[num_circles + 2].append(i)\n                graph[i].append(num_circles + 2)\n            if Y - cy <= cr:\n                graph[num_circles + 3].append(i)\n                graph[i].append(num_circles + 3)\n\n        for i in range(num_circles):\n            for j in range(i + 1, num_circles):\n                dist = sqrt((circle_info[i][0][0] - circle_info[j][0][0]) ** 2 +\n                            (circle_info[i][0][1] - circle_info[j][0][1]) ** 2)\n                if circle_info[i][1] + circle_info[j][1] >= dist:\n                    graph[i].append(j)\n                    graph[j].append(i)\n\n        return not (self.bfs(graph, num_circles, num_circles + 1, num_circles + 2, num_circles + 4) or\n                    self.bfs(graph, num_circles + 3, num_circles + 2, num_circles + 1, num_circles + 4))\n\n\n\n        ",
    "submit_ts": "1722138391",
    "subm_id": "1335789571"
}