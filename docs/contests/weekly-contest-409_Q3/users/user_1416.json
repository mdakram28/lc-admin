{
    "username": "david53133",
    "submission": "class Solution {\npublic:\n    vector<int> edges[100020];\n    set<int> se; \n    int _n; \n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;  \n        for(int i = 0; i <= n-1; i++) se.insert(i); \n        for(int i = 0; i < queries.size(); i++){\n            int s = queries[i][0], d = queries[i][1];\n            set<int>::iterator it;\n            it=se.find(s);\n            if(it == se.end()){\n                ans.push_back(se.size()-1); \n                continue; \n            } \n            // cout << *it << '\\n'; \n            deque<int> remove; \n            it++; \n            while(*it < d){\n                cout << \"add it \" << *it << '\\n'; \n                remove.push_back(*it);\n                it++; \n            }\n            while(remove.size() != 0){\n                se.erase(remove.front());\n                remove.pop_front(); \n            }\n            ans.push_back(se.size()-1); \n        }\n        return ans; \n    }\n};",
    "submit_ts": "1722743918",
    "subm_id": "1343802653"
}