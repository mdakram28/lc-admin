{
    "username": "aviralagrawal",
    "submission": "class Solution {\npublic:\n\n    long long numberOfOperations(vector<int> &nums) {\n        int i = 0;\n        for(int i=0;i<nums.size();i++) {\n            nums[i] = abs(nums[i]);\n        }\n        long long ans = nums[i];\n        for(int i=1;i<nums.size();i++) {\n            ans += max(nums[i]-nums[i-1], 0);\n        }\n        return ans;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        bool prev_diff_pos = target[0] - nums[0] >= 0;\n        int diff = target[0] - nums[0];\n        vector<int> v;\n        v.push_back(diff);\n        for(int i=1;i<nums.size();i++) {\n            bool curr_diff_pos = target[i] - nums[i] >= 0;\n            int diff = target[i] - nums[i];\n            if(curr_diff_pos == prev_diff_pos) {\n                v.push_back(diff);\n            }\n            else {\n                //cout<<v[0]<<endl;\n                ans += numberOfOperations(v);\n                //cout<<numberOfOperations(v)<<endl;\n                v = {};\n                v.push_back(diff);\n                prev_diff_pos = curr_diff_pos;\n            }\n            //cout<<ans<<diff<<endl;\n        }\n        ans += numberOfOperations(v);\n        v.clear();\n        return ans;\n    }\n};",
    "submit_ts": "1721533476",
    "subm_id": "1328009859"
}