{
    "username": "yvonne-02",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        cnt = 0\n        onesCnt = 0\n        zerosCnt = 0\n        # \u5355\u72ec\u7814\u7a76\u4e00\u7ef4\u60c5\u51b5\n        if n == 1:\n            tmp = []\n            for i in zip(*grid):\n                tmp.append(list(i))\n            grid = tmp\n            n = m\n            m = 1\n        \n        if m == 1:\n            left, right = 0, n-1\n            while left<right:\n                if grid[0][left] != grid[0][right]:\n                    cnt += 1\n                elif grid[0][left]:\n                    onesCnt += 2\n                left += 1\n                right -= 1\n                \n            if left == right:\n                if grid[0][left]:\n                    onesCnt += 1\n            r = onesCnt % 4\n            if r == 1:\n                cnt += 1\n            elif r == 3:\n                if cnt:\n                    cnt += 1\n                else:\n                    cnt += 3\n            elif r == 2:\n                if cnt == 0:\n                    cnt = 2\n            return cnt\n\n\n                \n        # \u8981\u6c42\u6240\u6709\u884c\u548c\u5217\u90fd\u56de\u6587\n        for i in range(m//2):\n            for j in range(n//2):\n                tmp = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j]\n                cnt += min(tmp, 4-tmp)  # 1->0 \u548c 0->1\uff0c\u4e0d\u7528\u8003\u86511\u8ba1\u6570\n        # \u7814\u7a76\u4e2d\u8f74\u7ebf\u4e0a\u76841\u60c5\u51b5\n        newcnt = 0\n        if m&1:\n            left, right = 0, n-1\n            row = grid[m//2]\n            while left<right:\n                if row[left] != row[right]:\n                    newcnt += 1\n                elif row[left]:\n                    onesCnt += 2\n                left += 1\n                right -= 1\n            if left==right and row[left]: # \u5947\u6570\n                onesCnt += 1      \n        if n&1:\n            left, right = 0, m-1\n            while left<right:\n                if grid[left][n//2] != grid[right][n//2]:\n                    newcnt += 1\n                elif grid[left][n//2]:\n                    onesCnt += 2\n                left += 1\n                right -= 1\n            if left==right and grid[left][n//2]:\n                onesCnt += 1\n        if m&1 and n&1:\n            if grid[m//2][n//2]:\n                onesCnt -= 1\n        r = onesCnt%4\n        if r == 2:\n            if newcnt:\n                r = 0\n        elif r == 3:\n            if newcnt:\n                r = 1\n        \n                \n        return cnt + r + newcnt\n\n\n\n\n        ",
    "submit_ts": "1722698733",
    "subm_id": "552272261"
}