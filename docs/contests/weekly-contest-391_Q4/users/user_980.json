{
    "username": "shubhambhadada7",
    "submission": "class Solution {\npublic:\n    \n\n    class sparse1{\n    public:\n        vector<vector<int>> st;\n        int n;\n        sparse1(int n,int *a){\n            this->n=n;\n            st.resize(n+1);\n            for(int i=0;i<=n;++i){\n                st[i].resize(30);\n            }\n            for(int i=0;i<n;++i){\n                st[i][0]=a[i];\n            }\n            for(int j=1;j<=log2(n);++j){\n                for(int i=0;i+(1<<j)<=n;++i){\n                    st[i][j]=max(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n                }\n            }\n        }\n        int shoot(int l,int r){\n            int j=log2(r-l+1);\n            int ans=max(st[l][j],st[r-(1<<(j))+1][j]);\n            return ans;\n        }\n\n    };\n\n\n\n    class sparse{\n    public:\n        vector<vector<int>> st;\n        int n;\n        sparse(int n,int *a){\n            this->n=n;\n            st.resize(n+1);\n            for(int i=0;i<=n;++i){\n                st[i].resize(30);\n            }\n            for(int i=0;i<n;++i){\n                st[i][0]=a[i];\n            }\n            for(int j=1;j<=log2(n);++j){\n                for(int i=0;i+(1<<j)<=n;++i){\n                    st[i][j]=min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n                }\n            }\n        }\n        int shoot(int l,int r){\n            int j=log2(r-l+1);\n            int ans=min(st[l][j],st[r-(1<<(j))+1][j]);\n            return ans;\n        }\n\n    };\n    int minimumDistance(vector<vector<int>>& a) {\n        int n=a.size();\n        \n        int p[n],q[n];\n        for(int i=0;i<n;++i){\n            p[i]=a[i][0]-a[i][1];\n            q[i]=(a[i][0]+a[i][1]);\n            // cout<<p[i]<<\" \"<<q[i]<<endl;\n        }\n\n        sparse s1(n,p),s2(n,q);\n        sparse1 s3(n,p),s4(n,q);\n        // cout<<s1.shoot(1,n)<<endl;\n        int ans=max(s3.shoot(1,n-1)-s1.shoot(1,n-1),s4.shoot(1,n-1)-s2.shoot(1,n-1));\n        // cout<<ans<<endl;\n        for(int i=1;i<n-1;++i){\n            int one = max(s3.shoot(0,i-1),s3.shoot(i+1,n-1));\n            int two = min(s1.shoot(0,i-1),s1.shoot(i+1,n-1));\n            int three = min(s2.shoot(0,i-1),s2.shoot(i+1,n-1));\n            int four = max(s4.shoot(0,i-1),s4.shoot(i+1,n-1));\n            ans=min(ans,max(one-two,four-three));\n        }\n        ans=min(ans,max(s3.shoot(0,n-2)-s1.shoot(0,n-2),s4.shoot(0,n-2)-s2.shoot(0,n-2)));\n        return ans;\n\n    }\n};"
}