{
    "username": "garyjhu",
    "submission": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        int n = nums.length;\n        FenwickTree bit = new FenwickTree(n);\n        boolean[] isPeak = new boolean[n];\n        for (int i = 1; i < n - 1; i++) {\n            if (checkPeak(nums, i)) {\n                bit.update(i, 1);\n                isPeak[i] = true;\n            }\n        }\n        List<Integer> res = new ArrayList<>();\n        for (int[] q : queries) {\n            if (q[0] == 2) {\n                int index = q[1];\n                int val = q[2];\n                nums[index] = val;\n                for (int j = -1; j <= 1; j++) {\n                    int i = index + j;\n                    if (i > 0 && i < n - 1) {\n                        if (isPeak[i]) bit.update(i, -1);\n                        if (checkPeak(nums, i)) {\n                            isPeak[i] = true;\n                            bit.update(i, 1);\n                        }\n                        else {\n                            isPeak[i] = false;\n                        }\n                    }\n                }\n            }\n            else {\n                res.add(q[2] - q[1] <= 1 ? 0 : bit.query(q[2] - 1) - bit.query(q[1]));\n            }\n        }\n        return res;\n    }\n\n    private boolean checkPeak(int[] nums, int i) {\n        return nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n    }\n\n    public class FenwickTree {\n        int[] t;\n        int n;\n\n        public FenwickTree(int n) {\n            this.n = n;\n            t = new int[n];\n        }\n\n        public int query(int i) {\n            int res = 0;\n            for (; i >= 0; i = (i & (i + 1)) - 1) res += t[i];\n            return res;\n        }\n\n        public void update(int i, int delta) {\n            for (; i < n; i = i | (i + 1)) t[i] += delta;\n        }\n    }\n}\n",
    "submit_ts": 1718508057.0
}