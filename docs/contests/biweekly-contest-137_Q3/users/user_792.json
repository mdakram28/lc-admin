{
    "username": "Ajay Singh Deopa",
    "submission": "class Solution {\n    void print(vector<vector<int>>& mat) {\n        for (auto& row: mat) {\n            for (int& i: row) cout << i << \" \";\n            cout << \"\\n\";\n        }\n    }\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = (int) board.size();\n        int m = (int) board[0].size();\n        vector<vector<int>> row_data(n, vector<int>(m)), col_data(m, vector<int>(n));\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                row_data[i][j] = j;\n                col_data[j][i] = i;\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            auto& row = row_data[i];\n            sort(row.begin(), row.end(), [&] (int& p1, int& p2) {\n                return board[i][p1] > board[i][p2];\n            });\n        }\n\n        for (int j = 0; j < m; j++) {\n            auto& col = col_data[j];\n            sort(col.begin(), col.end(), [&] (int& p1, int& p2) {\n                return board[p1][j] > board[p2][j];\n            });\n        }\n\n        // print(row_data);\n        // print(col_data);\n\n        long long res = -10000000000000LL;\n\n        for (int r1 = 0; r1 < n; r1++) {\n            for (int r2 = r1 + 1; r2 < n; r2++) {\n                for (int c3 = 0; c3 < m; c3++) {\n                    int pos = 0;\n\n                    while (col_data[c3][pos] == r1 || col_data[c3][pos] == r2) {\n                        pos++;\n                    }\n\n                    int r3 = col_data[c3][pos];\n                    int a1 = -1, b1 = -1;\n                    pos = 0;\n\n                    while (b1 == -1) {\n                        if (row_data[r1][pos] != c3) {\n                            if (a1 == -1) {\n                                a1 = row_data[r1][pos];\n                            }\n                            else {\n                                b1 = row_data[r1][pos];\n                                break;\n                            }\n                        }\n\n                        pos++;\n                    }\n\n                    int a2 = -1, b2 = -1;\n                    pos = 0;\n\n                    while (true) {\n                        if (row_data[r2][pos] != c3) {\n                            if (a2 == -1) {\n                                a2 = row_data[r2][pos];\n                            }\n                            else {\n                                b2 = row_data[r2][pos];\n                                break;\n                            }\n                        }\n\n                        pos++;\n                    }\n\n                    long long val = 1LL * board[r3][c3];\n\n                    if (a1 != a2) {\n                        val += 1LL * (board[r1][a1] + board[r2][a2]);\n                    }\n                    else {\n                        val += 1LL * max(\n                            board[r1][a1] + board[r2][b2],\n                            board[r1][b1] + board[r2][a1]\n                        );\n                    }\n\n                    res = max(res, val);\n\n                    // cout << r1 << \" \" << r2 << \" \" << r3 << \" \" << a2 << \" \" << b2 << \"\\n\";\n                    // cout << r1 << \" \" << r2 << \" \" << val << \"\\n\";\n                }\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1723908202",
    "subm_id": "1359142560"
}