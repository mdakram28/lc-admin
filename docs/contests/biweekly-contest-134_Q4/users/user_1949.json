{
    "username": "chy87999",
    "submission": "class Solution {\npublic:\n    bool check(int x,int k)\n    {\n        while(k)\n        {\n            int a=k&1,b=x&1;\n            if(a!=0 && b==0) return false;\n            x>>=1,k>>=1;\n        }\n        return true;\n    }\n    bool good(int a[],int k)\n    {\n        for(int i=0;i<32;i+=1)\n        {\n            if((k&1)==0 && a[i]==0) return false; \n            k>>=1;\n        }\n        return true;\n    }\n    void add(int a[],int x)\n    {\n        for(int i=0;i<32;i+=1)\n        {\n            if((x&1)==0) a[i]++;\n            x>>=1;\n        }\n    }\n    void minus(int a[],int x)\n    {\n        for(int i=0;i<32;i+=1)\n        {\n            if((x&1)==0) a[i]--;\n            x>>=1;\n        }\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long count = 0;\n        int n = nums.size();\n        \n        int left[100005]={};\n        int right[100005]={};\n        vector<vector<int>> v;\n        vector<int> temp;\n        for(int i=0;i<nums.size();i+=1)\n        {\n            \n            if(!check(nums[i],k))\n            {\n                if(temp.size()) v.push_back(temp);\n                nums[i]=-1;\n                temp.clear();\n            }\n            else temp.push_back(nums[i]);\n        }\n        if(temp.size()) v.push_back(temp);\n        long long ans=0;\n        for(int i=0;i<v.size();i+=1)\n        {\n            int now[32]={};\n            int l=0;\n            for(int j=0;j<v[i].size();j+=1)\n            {\n                add(now,v[i][j]);\n                while(good(now,k))\n                {\n                    ans+=v[i].size()-j;\n                    minus(now,v[i][l]);\n                    l++;\n                }\n            }\n        }\n        \n        return ans;\n    }\n    \n    /*long long countSubarrays(vector<int>& nums, int k) {\n    int n = nums.size();\n    int count = 0;\n\n    for (int start = 0; start < n; ++start) {\n        int currentAND = nums[start];\n        if (currentAND == k) {\n            count++;\n        }\n        for (int end = start + 1; end < n; ++end) {\n            currentAND &= nums[end];\n            if (currentAND == k) {\n                count++;\n            }\n            if (currentAND < k) {\n                break; \n            }\n        }\n    }\n\n    return count;\n}*/\n};\n\n",
    "submit_ts": "1720281503",
    "subm_id": "1311827540"
}