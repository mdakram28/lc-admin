{
    "username": "tactical-waste",
    "submission": "class Solution {\n    public int difCost(int[] pair, int X, int k) {\n        if (Math.abs(pair[0]-pair[1]) == X) {\n            return 0;\n        }\n        if (Math.max(pair[0],k-pair[0]) >= X) {\n            return 1;\n        }\n        if (Math.max(pair[1],k-pair[1]) >= X) {\n            return 1;\n        }\n        return 2;\n    }\n    public int minChanges(int[] nums, int k) {\n        int[][] data = new int[nums.length/2][2];\n        int[][] dadata = new int[k+1][2];\n        for (int i = 0; i <= k; i++) {\n            dadata[i][1] = i;\n        }\n        for (int i = 0; i < nums.length/2; i++) {\n            data[i][0] = nums[i];\n            data[i][1] = nums[nums.length-1-i];\n            dadata[Math.abs(data[i][0]-data[i][1])][0]++;\n        }\n        Arrays.sort(dadata, (a, b) -> Integer.compare(b[0],a[0]));\n        int X = dadata[0][1];\n        int t = 0;\n        for (int i = 0; i < nums.length/2; i++) {\n            t += difCost(data[i],X,k);\n        }\n        int low = t;\n        int i = 1;\n        while (i <= k) {\n            t = 0;\n            X = dadata[i][1];\n            for (int j = 0; j < nums.length/2; j++) {\n                t += difCost(data[j],X,k);\n            }\n            if (t <= low) {\n                low = t;\n            } else {\n                break;\n            }\n            i++;\n        }\n        return low;\n    }\n}",
    "submit_ts": "1721487824",
    "subm_id": "1327402376"
}