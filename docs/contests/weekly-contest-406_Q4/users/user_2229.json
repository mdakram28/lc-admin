{
    "username": "12113078",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int nhoripc=1;\n        int nvertpc=1;\n        long long res=0;\n        priority_queue<vector<int>> pq;\n\n        for(int i=0;i<m-1;i++){\n            pq.push({horizontalCut[i],i,0});\n        }\n        for(int i=0;i<n-1;i++){\n            pq.push({verticalCut[i],i,1});\n        }\n\n        while(!pq.empty()){\n            vector<int> temp=pq.top();\n            pq.pop();\n            int isvert=temp[2];\n            int cost=temp[0];\n            int idx=temp[1];\n\n            if(isvert){\n                nvertpc++;\n                res+=(long long) nhoripc*cost;\n            }\n            else {\n                nhoripc++;\n                res+=(long long) nvertpc*cost;\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720926410",
    "subm_id": "1320285432"
}