{
    "username": "leetcode_3604",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> g;\n    int dp[30][30][30][30][4];\n    int get(int sr, int sc, int er, int ec) {\n        if(dp[sr][sc][er][ec][1] != -1) return dp[sr][sc][er][ec][1];\n        int res(999999);\n        int mn_r(99999), mx_r(-1), mn_c(99999), mx_c(-1);\n        for(int i = sr; i <= er; ++i) {\n            for(int j = sc; j <= ec; ++j) {\n                if(g[i][j] == 1) {\n                    mn_r = min(mn_r, i);\n                    mx_r = max(mx_r, i);\n                    mn_c = min(mn_c, j);\n                    mx_c = max(mx_c, j);\n                }\n            }\n        }\n        if(mx_r != -1)  res = (mx_r - mn_r + 1) * (mx_c - mn_c + 1);\n        //printf(\"%d %d %d %d %d\\n\", sr, sc, er, ec, res);\n        dp[sr][sc][er][ec][1] = res;\n        return res;\n    }\n    int dfs(int sr, int sc, int er, int ec, int k) {\n        if(k == 0) return 0;\n        if(k == 1) return get(sr, sc, er, ec);\n        if(dp[sr][sc][er][ec][k] != -1) return dp[sr][sc][er][ec][k];\n        int tmp(99999999);\n        for(int i = sr; i < er; ++i) {\n            for(int j = 1; j <k; ++j) {\n                tmp = min(tmp, dfs(sr, sc, i, ec, j) + dfs(i+1, sc, er, ec, k-j));\n                //printf(\"update1 %d %d %d %d %d %d\\n\", sr, sc, er, ec, i, tmp);\n        \n               // printf(\"update: %d\\n\")\n            }\n        }\n        for(int i = sc; i < ec; ++i) {\n            for(int j = 1; j <k; ++j) {\n                tmp = min(tmp, dfs(sr, sc, er, i, j) + dfs(sr, i+1, er, ec, k-j));\n                \n                //printf(\"update2 %d %d %d %d %d %d\\n\", sr, sc, er, ec, i, tmp);\n            }\n        }\n        return dp[sr][sc][er][ec][k] = tmp;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        memset(dp, -1, sizeof(dp));\n        g = grid;\n        int n = grid.size();\n        int m = grid[0].size();\n        return dfs(0, 0, n-1, m-1, 3);\n        \n    }\n};",
    "submit_ts": 1719113600.0
}