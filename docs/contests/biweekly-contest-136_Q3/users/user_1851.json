{
    "username": "magical-margulis9t5",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        int cnt = 0, c1 = 0, nop = 0, x = 0, mid = 0;\n        vector<int> v(5, 0);\n        if(m == 1 && n == 1 && grid[0][0] == 0) return 0;\n        else if(m == 1 && n == 1) return 1;\n        for(int i = 0; i < m / 2; i ++) {\n            for(int j = 0; j < n / 2; j ++) {\n                if(i == m - 1 - i && j == n - 1 - j) {\n                    if(grid[i][j] == 1) x ++;\n                }\n                else if(i == m - 1 - i) {\n                    if(grid[i][j] == grid[i][n-1-j] && grid[i][j] == 0) ;\n                    else if(grid[i][j] == grid[i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                    else cnt ++, nop ++;\n                }\n                else if(j == n - 1 - j) {\n                    if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 0) ;\n                    else if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                    else cnt ++, nop ++;\n                }\n                else {\n                    int s1 = 0;\n                    if(grid[i][j]) s1 ++;\n                    if(grid[m-1-i][j]) s1 ++;\n                    if(grid[i][n-1-j]) s1 ++;\n                    if(grid[m-1-i][n-1-j]) s1 ++;\n                    v[s1] ++;\n                    cnt += min(s1, 4-s1);\n                    // c1 += s1;\n                }\n            }\n        }\n        // cout <<cnt <<endl;\n        if(m % 2 == 1 && n % 2 == 1) {\n            int i = m / 2;\n            for(int j = 0; j < n / 2; j ++) {\n                if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 0) ;\n                else if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                else cnt ++, nop ++;\n            }\n            int j = n / 2;\n            for(int i = 0; i < m / 2; i ++) {\n                if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 0) ;\n                else if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                else cnt ++, nop ++;\n            }\n            if(grid[i][n/2] == 1) mid = 1;\n        }\n        else if(m % 2 == 1) {\n            int i = m / 2;\n            for(int j = 0; j < n / 2; j ++) {\n                if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 0) ;\n                else if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                else cnt ++, nop ++;\n            }\n        }\n        else if(n % 2 == 1) {\n            int j = n / 2;\n            for(int i = 0; i < m / 2; i ++) {\n                if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 0) ;\n                else if(grid[i][j] == grid[m-1-i][n-1-j] && grid[i][j] == 1) c1 += 2;\n                else cnt ++, nop ++;\n            }\n        }\n\n        // mid \u4e2d\u5fc3\u76841\n        // c1 \u5076\u6570\uff0c\u672c\u6765\u5c31\u662f\u5bf9\u5e94\u7684\u4e24\u4e2a1\n        // cnt \u53d8\u6210\u56de\u6587\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\n        // nop \uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u7ecf\u8ba1\u5165\u64cd\u4f5c\u6b21\u6570\u7684 nop \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21 + 2\n        // cout << c1 << endl;\n        // cout << x << \" \" << nop << \" \" << cnt << endl;\n        if(c1 % 4 == 0) return mid + cnt;\n        else {\n            if(mid == 0) {\n                if(nop) return cnt;\n                else return 2 + cnt;\n            }\n            else {\n                if(c1 % 4 == 1 || c1 % 4 == 3) return 1;\n                else if(nop) return cnt + 1;\n                else return 3 + cnt;\n            }\n        }\n        \n        \n\n        // c1 = c1 % 4;\n        // // res = c1;\n\n        // if(4 - c1 <= nop) return nop;\n        // else return min(c1, 4 - c1);\n        \n        // return cnt;\n        // return res;\n    }\n};",
    "submit_ts": "1722699106",
    "subm_id": "552274109"
}