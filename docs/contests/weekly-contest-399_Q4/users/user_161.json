{
    "username": "Scyther_07",
    "submission": "\n\n#define ll long long\n#define lc id << 1\n#define rc id << 1 | 1\nconst ll mod = 1000000007;\n\nstruct dat{\n    ll val, ef, el, eb;\n    dat(int x = 0): ef(0), el(0), eb(0), val(x) {}\n};\nvector<dat> v, t;\nll n;\n\ndat op(dat a, dat b){\n    dat c;\n    c.val = max(a.el + b.val, a.val + b.ef);\n    c.ef = max(a.eb + b.val, a.ef + b.ef);\n    c.el = max(a.val + b.eb, a.el + b.el);\n    c.eb = max(a.ef + b.eb, a.eb + b.el);\n    return c;\n}\n\nvoid build(ll id = 1, ll l = 0, ll r = n - 1){\n    if(l == r){\n        t[id] = v[l];\n        return;\n    }\n    ll mid = (l + r) >> 1;\n    build(lc, l, mid);\n    build(rc, mid + 1, r);\n    t[id] = op(t[lc], t[rc]);\n}\nvoid update(ll id, ll l, ll r, ll pos, ll val){\n    if(l == r){\n        ll xx = max(val, 0ll);\n        t[id] = dat(xx);\n        return;\n    }\n    ll mid = (l + r) >> 1;\n    if(pos <= mid) update(lc, l, mid, pos, val);\n    else update(rc, mid + 1, r, pos, val);\n    t[id] = op(t[lc], t[rc]);\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& a, vector<vector<int>>& queries) {\n        v.clear(), t.clear();\n        n = a.size();\n        for(auto x: a){\n            x = max(x, 0);\n            v.push_back(dat(x));\n        }\n        t = vector<dat>(4 * n);\n        build();\n\n        ll ans = 0;\n        for(auto v: queries){\n            ll pos = v[0], val = v[1];\n            update(1, 0, n - 1, pos, val);\n            ans = (ans + t[1].val) % mod;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": 1716695684.0
}