{
    "username": "Ani_S",
    "submission": "class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int freq[][] = new int[nums.length + 1][31];\n        \n        int prev[] = new int[31];\n        \n        for(int i = 0; i < nums.length; i++) {\n            int num = nums[i];\n            int j = 0;\n            \n            while(num > 0) {\n                if((num & 1) > 0) {\n                    prev[j]++;\n                }\n                \n                num = (num >> 1);\n                j++;\n            }\n            \n            for(int z = 0; z < 31; z++) {\n                freq[i + 1][z] = prev[z];\n            }\n        }\n        \n        int ans = Integer.MAX_VALUE;\n        \n        for(int i = 0; i < nums.length; i++) {\n            int val = binarySearch(0, i, i + 1, freq, k);\n            \n            ans = Math.min(ans, val);\n        }\n        \n        return ans;\n        \n        \n    }\n    \n    private int binarySearch(int low, int high, int last, int freq[][], int k) {\n        int minDiff = Integer.MAX_VALUE;\n        \n        while(low <= high) {\n            int mid = low + (high - low) / 2;\n            \n            int val = findValue(mid, last, freq);\n            \n            if(val == k) {\n                minDiff = val - k;\n                break;\n            } else if(val < k) {\n                minDiff = Math.min(minDiff, k - val);\n                low = mid + 1;\n            } else {\n                minDiff = Math.min(minDiff, val - k);\n                high = mid - 1;\n            }\n        }\n        \n        return minDiff;\n    }\n    \n    private int findValue(int low, int high, int freq[][]) {\n        int arr[] = new int[31];\n        \n        for(int i = 0; i < 31; i++) {\n            arr[i] = freq[high][i] - freq[low][i];\n        }\n        \n        int val = 0;\n        \n        for(int i = 0; i < 31; i++) {\n            if(arr[i] == high - low) {\n                val = val | (1 << i);\n            }\n        }\n        \n        return val;\n    }\n}",
    "submit_ts": 1717299013.0
}