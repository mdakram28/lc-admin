{
    "username": "Volcandrabuzz",
    "submission": "public class Solution {\n    public int countOfPairs(int[] nums) {\n        Solver solver = new Solver(nums);\n        return solver.solve();\n    }\n}\nclass Solver {\n    private static final long MOD =(int)1e9+7;\n    private int[] nums;\n    private Memoization memo;\n\n    public Solver(int[] nums) {\n        this.nums = nums;\n        int size = nums.length;\n        this.memo = new Memoization(size, 51, 51);\n    }\n\n    public int solve() {\n        return (int) solveHelper(0, 0, nums[0]);\n    }\n\n    private long solveHelper(int index, int val1, int val2) {\n        if (index >= nums.length) {\n            return 1;\n        }\n\n        if (memo.isMemoized(index, val1, val2)) {\n            return memo.getMemo(index, val1, val2);\n        }\n\n        long result = 0;\n\n        for (int i = val1; i <= nums[index]; i++) {\n            for (int j = val2; j >= 0; j--) {\n                if (i + j == nums[index]) {\n                    result += solveHelper(index + 1, i, j);\n                    result %= MOD;\n                }\n            }\n        }\n\n        memo.setMemo(index, val1, val2, result);\n        return result;\n    }\n}\nclass Memoization {\n    private long[][][] memo;\n\n    public Memoization(int size, int maxVal1, int maxVal2) {\n        memo = new long[size][maxVal1][maxVal2];\n        for (long[][] arrTwo : memo) {\n            for (long[] arrOne : arrTwo) {\n                Arrays.fill(arrOne, -1);\n            }\n        }\n    }\n\n    public boolean isMemoized(int index, int val1, int val2) {\n        return memo[index][val1][val2] != -1;\n    }\n\n    public long getMemo(int index, int val1, int val2) {\n        return memo[index][val1][val2];\n    }\n\n    public void setMemo(int index, int val1, int val2, long value) {\n        memo[index][val1][val2] = value;\n    }\n}\n",
    "submit_ts": "1723347308",
    "subm_id": "1351596176"
}