{
    "username": "yin24",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        # \u4e2d\u5fc3\u70b9\u5fc5\u987b\u662f0\n        # if grid == [[1, 1]] or grid == [[1], [1]]:\n        #     return 2\n        m, n = len(grid), len(grid[0])\n        res = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                temp = grid[i][j] + grid[m-1-i][j] + grid[m-1-i][n-1-j] + grid[i][n-1-j]\n                if temp > 2:\n                    res += 4 - temp\n                else:\n                    res += temp\n        if m % 2 and n % 2 and grid[m//2][n//2]:\n            res += 1\n        other = 0\n        res1 = 0\n        if m % 2:\n            for j in range(n//2):\n                if grid[m//2][j] ^ grid[m//2][n-1-j]:\n                    res1 += 1\n                other += grid[m//2][j] + grid[m//2][n-1-j]\n        if n % 2:\n            for i in range(m//2):\n                if grid[i][n//2] ^ grid[m-1-i][n//2]:\n                    res1 += 1\n                other += grid[i][n//2] + grid[m-1-i][n//2]\n        if not res1 and other % 4:\n            res1 += min(4 - other % 4, other % 4)\n        return res + res1\n\n\n\n\n# class Solution:\n#     def minFlips(self, grid: List[List[int]]) -> int:\n#         m, n = len(grid), len(grid[0])\n#         i = 0\n#         res = [0, 0]\n#         while i < m // 2:\n#             for j in range(n):\n#                 if grid[i][j] ^ grid[m-1-i][j]:\n#                     res[0] += 1\n#             i += 1\n#         j = 0\n#         while j < n // 2:\n#             for i in range(m):\n#                 if grid[i][j] ^ grid[i][n-1-j]:\n#                     res[1] += 1\n#             j += 1\n#         return min(res)",
    "submit_ts": "1722698434",
    "subm_id": "552270821"
}