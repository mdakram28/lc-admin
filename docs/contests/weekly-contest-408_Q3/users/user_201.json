{
    "username": "haochenkang",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        // nine 1's and two 0's\n        int n = (int)s.size();\n        vector<int> one(n + 1, 0), zero(n + 1, 0);\n        for(int i = 1; i <= n; i++){\n            one[i] = one[i - 1];\n            one[i] += (s[i - 1] == '1');\n        }\n        for(int i = 1; i <= n; i++){\n            zero[i] = zero[i - 1];\n            zero[i] += (s[i - 1] == '0');\n        }\n        // for(int i = 0; i <= n; i++) cout << zero[i] << ' ';\n        // cout << '\\n';\n        int res = 0;\n        for(int i = 1; i <= n; i++){\n            for(int j = i; j <= n; ){\n                int o = one[j] - one[i - 1], z = zero[j] - zero[i - 1];\n                // cout << i << ' ' << j << '\\n';\n                if(o >= z * z){\n                    int zero_needed = floor(sqrt(o));\n                    res += min(n - j + 1, (zero_needed - z + 1));\n                    // cout << j << ' ' << res << '\\n';\n                    // cout << min(n - i + 1, (zero_needed - z + 1)) << '\\n';\n                    // cout << (zero_needed - z + 1) << '\\n';\n                    j += (zero_needed - z + 1);\n                } else {\n                    j += (z * z - o);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722136231",
    "subm_id": "1335727821"
}