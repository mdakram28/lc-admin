{
    "username": "akshay_rajput12",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n           int n=colors.size();\n           vector<int>v(n,0);\n\n           for(int i=1;i<n;i++)\n           {\n              if(colors[i]==colors[i-1])\n                 v[i]=v[i-1]+1;\n              else\n                v[i]=v[i-1];\n           }\n            int ans=0;\n        //    if(v.size()==0)\n        //      return n;\n        //    if(v.size()==1)\n        //       return max(0,v[0]-k+1)+max(n-v[0]-1)\n        //    for(int i=1;i<v.size();i++)\n        //    {\n        //       if((v[i]-v[i-1])>=k)\n        //       {\n        //           ans+=(v[i]-v[i-1]-k+1);\n        //       }\n        //    }\n        //    return ans;\n        for(int i=0;i<n;i++)\n        {     if((i+k-1)<n && v[i]==v[i+k-1])        \n                  ans++;\n              else if((i+k-1)>=n)\n              {\n                  if((v[n-1]==v[i] && v[0]==v[(i+k-1)%n])&& colors[0]!=colors[n-1])\n                    ans++;\n              }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278677",
    "subm_id": "1311719509"
}