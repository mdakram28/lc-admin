{
    "username": "shohanur814",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        \n        \n            int sz=points.size(),res=-1,val,val1,val2,num1,num2;\n        \n         map<int,int>  map1,map2;\n        \n                 \n        \n            for(int i=0;i<sz;i++)\n            {\n                      num1=points[i][0];\n                 num2=points[i][1];\n                  map1[points[i][0]+points[i][1]]++;\n                   map2[points[i][0]-points[i][1]]++;\n                    points[i][0]=num1+num2;\n                   points[i][1]=num1-num2;\n            }\n        \n        \n          for(int i=0;i<sz;i++)\n          {\n                num1=points[i][0],num2=points[i][1];\n                    if(--map1[num1]==0)\n                          map1.erase(num1);\n                  if(--map2[num2]==0)\n                        map2.erase(num2);\n                 val1=map1.rbegin()->first-map1.begin()->first;\n                 val2=map2.rbegin()->first-map2.begin()->first;\n                 val=max(val1,val2);\n              \n                  if(res==-1)\n                        res=val;\n              \n                else  res=min(res,val);\n                map1[num1]++;\n                map2[num2]++;\n              \n          }\n        \n          return  res;\n        \n    }\n};"
}