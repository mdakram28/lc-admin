{
    "username": "Avi Akad",
    "submission": "#pragma GCC optimize(\"O3\",\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        int n = board.size(), m = board[0].size();    \n        vector<array<pair<int, int>, 3>> best(n);\n        for (int i = 0; i < n; i++) {\n            priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;\n            for (int j = 0; j < m; j++) {\n                pq.push({board[i][j], j});\n                if (pq.size() > 3) pq.pop();\n            }\n            assert(pq.size() >= 3);\n            for (int iter = 0; iter < 3; iter++) {\n                auto [val, idx] = pq.top();\n                best[i][2 - iter] = {val, idx};\n                pq.pop();\n            }\n        }\n        \n        long long ans = -1e18;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    vector<int> order = {i, j, k};\n                    do {\n                        int seen1 = -1, seen2 = -1;\n                        long long value = 0;\n                        for (auto &idx: order) {\n                            int x = best[idx][0].second;\n                            int y = best[idx][1].second;\n                            if (x != seen1 && x != seen2) {\n                                seen1 = (seen1 != -1 ? seen1 : x);\n                                seen2 = (seen1 != -1 ? x : seen2);\n                                value += best[idx][0].first;\n                            } else if (y != seen1 && y != seen2) {\n                                seen1 = (seen1 != -1 ? seen1 : y);\n                                seen2 = (seen1 != -1 ? y : seen2);\n                                value += best[idx][1].first;\n                            } else {\n                                seen1 = (seen1 != -1 ? seen1 : best[idx][2].second);\n                                seen2 = (seen1 != -1 ? best[idx][2].second : seen2);\n                                value += best[idx][2].first;\n                            }\n                        }\n                        ans = max(ans, value);\n                    } while (next_permutation(order.begin(), order.end()));\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908446",
    "subm_id": "1359153008"
}