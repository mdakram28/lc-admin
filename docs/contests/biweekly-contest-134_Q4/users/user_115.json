{
    "username": "pushuu",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        int LOG = 20;\n        using ll = long long;\n        vector <vector <int>> tab (n, vector <int> (LOG));\n        for (int bit = 0; bit < LOG; bit++) {\n            if (bit == 0) {\n                for (int i = 0; i < n; i++) tab[i][bit] = nums[i];\n            }\n            else {\n                for (int i = 0; i + (1 << bit) <= n; i++) {\n                    tab[i][bit] = (tab[i][bit - 1] & (tab[i + (1 << (bit - 1))][bit - 1]));\n                }\n            }\n        }\n        auto qry = [&] (int l, int r) -> ll {\n            ll res = (1ll << 32) - 1;\n            for (ll bit = LOG - 1; bit >= 0; bit--) if (l + (1 << bit) <= r + 1) {\n                res = (res & tab[l][bit]);\n                l += (1 << bit);\n            }\n            return res;\n        };\n        auto first = [&] (int i) -> int {\n            int lo = i - 1, hi = n - 1;\n            while (hi - lo > 1) {\n                ll mid = lo + (hi - lo) / 2;\n                ll r = qry(i, mid);\n                if (r > k) lo = mid;\n                else hi = mid;\n            }\n            return hi;\n        };\n        \n        auto last = [&] (int i) -> int {\n            int lo = i, hi = n;\n            while (hi - lo > 1) {\n                int mid = lo + (hi - lo) / 2;\n                ll r = qry(i, mid);\n                if (r >= k) lo = mid;\n                else hi = mid;\n            }\n            return lo;\n        };\n        \n        ll ans = 0;\n        \n        for (int i = 0; i < n; i++) {\n            int l = first(i);\n            int r = last(i);\n            int x = qry(i, l);\n            // cout << l << ' ' << r << '\\n';\n            if (x == k) {\n                ans += (r - l + 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277158",
    "subm_id": "1311650408"
}