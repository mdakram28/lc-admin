{
    "username": "sachinbarupal",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n\n        int n = p.size();\n        vector<int> s, d;\n        s.push_back(p[0][0] + p[0][1]);\n        d.push_back(p[0][0] - p[0][1]);\n        for(int i=1; i<n; i++) {\n            int sum = p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            \n            s.push_back(sum);\n            d.push_back(diff);\n        }\n        \n        sort(s.begin(),s.end());\n        sort(d.begin(),d.end());\n        \n        int ans = max(s[n-1] - s[0], d[n-1] - d[0]);\n        \n        for(int i=0; i<n; ++i){\n            int sum = p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            int maxiS = s[n-1], miniS = s[0];\n            int maxiD = d[n-1], miniD = d[0];\n            if(sum == s[0]){\n                miniS = s[1];\n            }else if(sum == s[n-1]){\n                maxiS = s[n-2];\n            }\n            \n            if(diff == d[0]){\n                miniD = d[1];\n            }else if(diff == d[n-1]){\n                maxiD = d[n-2];\n            }\n            \n            ans = min(ans, max(maxiS - miniS,maxiD - miniD));\n            \n            \n        }\n        \n        return ans;\n    }\n};"
}