{
    "username": "newbie_noob",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=0;\n        int available=0,count_1=0;\n        if (m % 2 != 0) {\n            int midCol = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][midCol] != grid[n - i - 1][midCol]) {\n                    ans += 1;\n                    available += 1;\n                } else {\n                    if (grid[i][midCol] == 1) {\n                        count_1 += 1;\n                    }\n                }\n            }\n        }\n        if (n % 2 != 0) {\n            int midRow = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[midRow][j] != grid[midRow][m - j - 1]) {\n                    ans += 1;\n                    available += 1;\n                } else {\n                    if (grid[midRow][j] == 1) {\n                        count_1 += 1;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int ones = 0;\n                ones+=grid[i][j];\n                ones+=grid[n - i - 1][j];\n                ones+=grid[i][m - j - 1];\n                ones+=grid[n - i - 1][m - j - 1];\n                int mini=1e9;\n                if(mini>ones)mini=ones;\n                if(mini>(4-ones))mini=4-ones;\n                ans+=mini;\n            }\n        }\n        if (available == 0 && count_1 % 2 != 0) {\n            ans += 2;\n        }\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699833",
    "subm_id": "1343223775"
}