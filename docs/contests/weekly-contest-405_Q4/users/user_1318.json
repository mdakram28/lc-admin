{
    "username": "ptulugu",
    "submission": "class Node {\n    Node[] children = new Node[26];\n    boolean terminal;\n    int cost;\n\n    Node() {}\n\n    void setCost(int c){this.cost = c;}\n\n    int getCost(){ return this.cost; }\n\n    void setTerminal() {this.terminal = true;}\n\n    boolean isTerminal() {return terminal;}\n\n    Node getNext(char c) {return children[c - 'a'];}\n\n    void addNext(char c){ children[c - 'a'] = new Node();}\n}\n\nclass Trie {\n    Node root = new Node();\n\n    Trie() {}\n\n\n    void addWord(String s, int cost) {\n        Node curr = root;\n        for(char c: s.toCharArray()) {\n            if(curr.getNext(c) == null) curr.addNext(c);\n            curr = curr.getNext(c);\n        } \n    \n        if(!curr.isTerminal() || curr.getCost() > cost) curr.setCost(cost);\n        curr.setTerminal();\n    }\n\n    Node getRoot() {\n        return this.root;\n    }\n}\n\nclass Solution {\n    public int minimumCost(String target, String[] words, int[] costs) {\n\n        Trie trie = new Trie();\n        for(int i = 0; i < words.length; i++) {\n            trie.addWord(words[i], costs[i]);\n        }\n\n        int[] dp = new int[target.length()];\n        for(int i = 0; i < target.length(); i++) {\n            dp[i] = -1;\n        }\n\n        int ret = recur(0, target, trie, dp);\n\n        if(ret >= (int)(1e9)) return -1;\n        return ret;\n    }\n\n    \n    int recur(int i, String target, Trie trie, int[] dp) {\n        if(i == target.length()) {\n            return 0;\n        }\n\n\n        if(dp[i] != -1) return dp[i];\n\n        int minSoFar = (int)(1e9);\n\n        int pos = i;\n        Node curr = trie.getRoot();\n        for(; i < target.length(); i++) {\n\n            if(curr.getNext(target.charAt(i)) == null) break;\n            curr = curr.getNext(target.charAt(i));\n            if(curr.isTerminal()) {\n                minSoFar = Math.min(minSoFar, recur(i + 1, target, trie, dp) + curr.getCost());\n            }\n        }\n\n        dp[pos] = minSoFar;\n\n        return minSoFar;\n    }\n}",
    "submit_ts": "1720322728",
    "subm_id": "1312357548"
}