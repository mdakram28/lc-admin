{
    "username": "Abhishekleo_",
    "submission": "class Solution {\npublic:\n\nint minChanges(vector<int>& QqoI, int Cvgjh) {\n        vector<vector<int>> diffMaxPairs(200001);\n        vector<int> hhQ;\n\n        for (int KkkL = 0; KkkL < QqoI.size() / 2; KkkL++) {\n            int ZxZO = QqoI[KkkL];\n            int AlleeP = QqoI[QqoI.size() - KkkL - 1];\n            int RddA = abs(ZxZO - AlleeP);\n            int QllX = max({ZxZO, AlleeP, Cvgjh - ZxZO, Cvgjh - AlleeP});\n            diffMaxPairs[RddA].push_back(QllX);\n            hhQ.push_back(QllX);\n        }\n\n        int KkkL = QqoI.size();\n        sort(hhQ.begin(), hhQ.end());\n        hhQ.erase(unique(hhQ.begin(), hhQ.end()), hhQ.end());\n\n        AbhLeoII(diffMaxPairs, hhQ, KkkL, QqoI.size());\n\n        return KkkL;\n    }\n\nprivate:\n    void AbhLeoII(vector<vector<int>>& diffMaxPairs, vector<int>& hhQ, int& KkkL, int size) {\n        for (int RddA = 0; RddA < diffMaxPairs.size(); ++RddA) {\n            if (diffMaxPairs[RddA].empty()) continue;\n\n            int T = lower_bound(hhQ.begin(), hhQ.end(), RddA) - hhQ.begin();\n            T = T * 2 + (size / 2 - T);\n\n            for (auto& QllX : diffMaxPairs[RddA]) {\n                if (QllX < RddA) {\n                    T -= 2;\n                } else {\n                    T -= 1;\n                }\n            }\n\n            KkkL = min(KkkL, T);\n        }\n    }\n};",
    "submit_ts": "1721489669",
    "subm_id": "1327460218"
}