{
    "username": "om_karan7",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int, std::vector<int>> diffToMaxValues;\n        vector<int> allMaxValues;\n        \n       \n        int i = 0;\n        while (i < n / 2) {\n            int a = nums[i];\n            int b = nums[n - 1 - i];\n            int diff = std::abs(a - b);\n            int maxValue = std::max({a, b, k - a, k - b});\n            \n            diffToMaxValues[diff].push_back(maxValue);\n            allMaxValues.push_back(maxValue);\n            i++;\n        }\n        \n       \n        sort(allMaxValues.begin(), allMaxValues.end());\n        \n        int minChanges = n; \n        \n\n        auto it = diffToMaxValues.begin();\n        while (it != diffToMaxValues.end()) {\n            int diff = it->first;\n            vector<int>& maxValuesForDiff = it->second;\n            \n           \n            int changesNeeded = lower_bound(allMaxValues.begin(), allMaxValues.end(), diff) - allMaxValues.begin();\n            changesNeeded = changesNeeded * 2 + (n / 2 - changesNeeded);\n            \n         \n            int j = 0;\n            while (j < maxValuesForDiff.size()) {\n                changesNeeded -= (maxValuesForDiff[j] < diff) ? 2 : 1;\n                j++;\n            }\n            \n            minChanges = min(minChanges, changesNeeded);\n            ++it;\n        }\n        \n        return minChanges;\n    }\n};",
    "submit_ts": "1721489312",
    "subm_id": "1327449530"
}