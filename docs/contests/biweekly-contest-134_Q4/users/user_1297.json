{
    "username": "ljs7619480",
    "submission": "class Solution {\n    using num_t = long long;\n    using idx_t = int;\n    using map_t = unordered_map<num_t, idx_t>;\n    static constexpr int max_num = 1e9;\n    bool hasEssentialBits(num_t num, num_t k){\n        for(num_t mask = 1; mask <= max_num; mask <<= 1){\n            if((k & mask) && !(num & mask)){ return false; }\n        }\n        return true;\n    }\n    \n    void lastZeros(map_t & last_zeros, num_t num, num_t idx){\n        for(num_t mask = 1; mask <= max_num; mask <<= 1){\n            if((num & mask) == 0){ last_zeros[mask] = idx; }\n        }\n    }\n    \n    idx_t lastValid(map_t & last_zeros, num_t k, idx_t r){\n        idx_t l = r;\n        for(num_t mask = 1; mask <= max_num; mask <<= 1){\n            if((k & mask) == 0){\n                l = min(l, last_zeros[mask]);\n            }\n        }\n        return l;\n    }\n\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        const idx_t n = nums.size();\n        long long ans = 0;\n        map_t last_zeros;\n        for(num_t mask = 1; mask <= max_num; mask <<= 1){\n            last_zeros[mask] = -1;\n        }\n\n        for(idx_t l=0, r=0; r<n; r++){\n            const num_t num = nums[r];\n            // cout << bitset<8>(num) << \": \";\n            if(!hasEssentialBits(num, k)){ l = r+1; continue; }\n            \n            lastZeros(last_zeros, num, r);\n            // for(auto [m, x]: last_zeros){ cout << x << \" \"; } cout << endl;\n            \n            idx_t l_ = lastValid(last_zeros, k, r);\n            // cout << l << \" \" << l_ << endl;\n            if(l_ >= l){\n                ans += l_ - l + 1;\n            }    \n        }\n        // cout <<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1720280474",
    "subm_id": "1311790746"
}