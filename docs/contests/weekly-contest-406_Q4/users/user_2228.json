{
    "username": "aalokai",
    "submission": "\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        // Convert arrays to Integer arrays for sorting in reverse order\n        Integer[] h = Arrays.stream(horizontalCut).boxed().toArray(Integer[]::new);\n        Integer[] v = Arrays.stream(verticalCut).boxed().toArray(Integer[]::new);\n        \n        Arrays.sort(h, Collections.reverseOrder());\n        Arrays.sort(v, Collections.reverseOrder());\n        \n        int hi = 0, vi = 0;\n        long hp = 1, vp = 1;\n        long cost = 0;\n        \n        while (hi < h.length && vi < v.length) {\n            if (h[hi] >= v[vi]) {\n                cost += h[hi] * vp; \n                hp++;               \n                hi++;\n            } else {\n                cost += v[vi] * hp;  \n                vp++;                \n                vi++;\n            }\n        }\n        \n        while (hi < h.length) {\n            cost += h[hi] * vp;\n            hi++;\n        }\n        \n        while (vi < v.length) {\n            cost += v[vi] * hp;\n            vi++;\n        }\n        \n        return cost;\n    }\n}\n",
    "submit_ts": "1720926111",
    "subm_id": "1320276312"
}