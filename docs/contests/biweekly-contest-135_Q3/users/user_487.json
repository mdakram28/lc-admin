{
    "username": "xiao-dao-brfu",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> cnt;\n        for(int i = 0; i < n/2; i++){\n            int diff = abs(nums[i] - nums[n-i-1]);\n            cnt[diff]++;\n        }\n        int res = n/2;\n        vector<pair<int,int>> diffpair(cnt.begin(), cnt.end());\n        sort(diffpair.begin(), diffpair.end(), [](pair<int,int> a, pair<int,int> b){\n            return a.second > b.second;\n        });\n        int dk = 0;\n        for(auto it:diffpair){\n            int basemines = it.first;\n            int tmpres = 0;\n            if(2/n - it.second > res) continue;\n            for (int i = 0; i < n/2; i++)\n            {\n                int diff = abs(nums[i] - nums[n-i-1]);\n                if(diff != basemines){\n                    int biggernum =  max(nums[i], nums[n-i-1]);\n                    int smallernum = min(nums[i], nums[n-i-1]);\n                    if( smallernum + basemines <= k || biggernum - basemines >=0){\n                        tmpres++;\n                    }\n                    else tmpres+=2;\n                }\n            }\n            res = min(res, tmpres);\n            dk++;\n            if(dk>3) break;\n\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721487925",
    "subm_id": "548312127"
}