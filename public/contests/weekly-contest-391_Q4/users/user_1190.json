{
    "username": "harshal786shah",
    "submission": "class Solution {\npublic:\n   \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n       vector<pair<int,int>>vec;\n        multiset<int>ms;\n        multiset<int>ms2;\n        int maxi=INT_MAX;\n        for(auto it:points){\n            int sum = it[0]+it[1];\n            int sub=it[0]-it[1];\n            ms.insert(sum);\n            ms2.insert(sub);\n        }\n        for(int i=0;i<n;i++){\n            int maxi2=INT_MAX;\n            int sum = points[i][0] + points[i][1];\n            int sub = points[i][0]-points[i][1];\n            ms.erase(ms.find(sum));\n            ms2.erase(ms2.find(sub));\n            int diff=*(ms.rbegin())- *(ms.begin());\n            int diff2=*(ms2.rbegin())- *(ms2.begin());\n            ms.insert(sum);\n            ms2.insert(sub);\n            maxi2=max(diff,diff2);\n            maxi=min(maxi2,maxi);\n        }\n        \n        return maxi;\n    }\n};"
}