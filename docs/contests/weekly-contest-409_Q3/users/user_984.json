{
    "username": "WuWenChun",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        /*\n        There are no two queries such that \n        queries[i][0] < queries[j][0] < queries[i][1] < queries[j][1].\n\n        => could have\n        queries[i][0] <= queries[j][0] < queries[j][1] <= queries[i][1].\n        or just not conjection\n        */\n        int nlen = n, qlen = queries.size();\n        unordered_map<int,list<int>::iterator> mp;\n        list<int> lis;\n        for(int ni = 0; ni < nlen; ++ni){\n            lis.push_front(ni);\n            mp[ni] = lis.begin();\n        }\n\n        vector<int> res(qlen);\n        for(int qi = 0; qi < qlen; ++qi){\n            int ni = queries[qi][0], nj = queries[qi][1];\n            if((mp.count(ni) != 0) && (mp.count(nj) != 0)){\n                \n                auto curit = prev(mp[ni]);\n                while(true){\n                    auto nxtit = prev(curit);\n                    if(curit == mp[nj])break;\n                    // cout<< *curit<< *mp[nj]<<endl;\n                    mp.erase( *curit );\n                    lis.erase( curit );\n                    curit = nxtit;\n                }\n            }\n            res[qi] = lis.size() - 1;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722743450",
    "subm_id": "1343792195"
}