{
    "username": "_Fake4Fun",
    "submission": "const int N = 1e5 + 5;\n\nclass Solution {\npublic:\n    int n;\n    vector<int> adj[N];\n    int val[2][N];\n    \n    void maxi(int &a, int b) {\n        if (a < b) a = b;\n    }\n    \n    void DFS1(int u, int pre = -1) {\n        for (int v : adj[u]) if (v != pre) {\n            DFS1(v, u);\n            if (v % 2 == 0) maxi(val[0][u], val[0][v] + 2);\n            else maxi(val[0][u], val[0][v] + 1);\n        }\n    }\n    \n    void DFS2(int u, int pre = -1) {\n        int ma0 = val[1][u], ma1 = 0;\n        for (int v : adj[u]) if (v != pre) {\n            int cl_tocdep = val[0][v] + (v % 2 == 0 ? 2 : 1);\n            if (ma0 < cl_tocdep) ma1 = ma0, ma0 = cl_tocdep;\n            else maxi(ma1, cl_tocdep);\n        }\n        for (int v : adj[u]) if (v != pre) {\n            int cl_tocdep = val[0][v] + (v % 2 == 0 ? 2 : 1);\n            if (cl_tocdep == ma0) val[1][v] = ma1 + (u % 2 == 0 ? 2 : 1);\n            else val[1][v] = ma0 + (u % 2 == 0 ? 2 : 1);\n            DFS2(v, u);\n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size() + 1;\n        for (auto i : edges) {\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        \n        DFS1(0);\n        DFS2(0);\n        vector<int> ans;\n        for (int i = 0; i < n; i++) {\n            ans.push_back(max(val[0][i], val[1][i]));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697287",
    "subm_id": "1343141066"
}