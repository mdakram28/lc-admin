{
    "username": "hamzawp404",
    "submission": "class Solution {\npublic:\n    #define ll long long\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll ans = 0;\n        \n        unordered_map<ll, ll> prev;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<ll, ll> curr; \n\n            if (nums[i] == k) ans++;\n            curr[nums[i]] = 1;\n\n            for (auto it : prev) {\n                ll newRes = it.first & nums[i];\n                if (newRes == k)\n                    ans += it.second;\n                curr[newRes] += it.second;\n            }\n            \n            prev = curr;\n        }\n        \n        return ans;\n    }\n};\n\n\nstatic const int FAST_IO = [](){\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();",
    "submit_ts": "1720281183",
    "subm_id": "1311816051"
}