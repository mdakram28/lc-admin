{
    "username": "royliurl",
    "submission": "class Solution {\n    Map<String, Integer> comb_ = new HashMap<>();\n    public int waysToReachStair(int k) {\n        if (k == 0) {\n            return 2;\n        }\n        if (k == 1) {\n            return 4;\n        }\n        \n        // Map<Integer, Integer> dp = new HashMap<>();\n        // dp.put(1, 1);\n        // int jump = 1;\n        \n        int[] twos = new int[31];\n        twos[0] = 1;\n        for (int i = 1; i < 31; i++) {\n            twos[i] = 2 * twos[i - 1];\n        }\n        \n        int res = 0;\n        // no jump\n        // min is 0, max is 1\n        if (k == 0 || k == 1) {\n            res++;\n        }\n        \n        for (int i = 0; i < 30; i++) {\n            int max = twos[i + 1];\n            int slots = i + 2;\n            int slotsNeeded = max - k;\n            if (slotsNeeded >= 0 && slotsNeeded <= slots){ \n                if (slots == 0) {\n                    res++;\n                } else {\n                    res += comb(slots, slotsNeeded);\n                }\n            }\n        }\n        return res;\n    }\n    \n    public int comb(int n, int k) {\n        if (n < k) {\n            return 0;\n        }\n        \n        if (k == 0 || n == k) {\n            return 1;\n        }\n        String key = n + \",\" + k;\n        if (!comb_.containsKey(key)) {\n            comb_.put(key, comb(n-1, k-1) + comb(n-1, k));\n        }\n        return comb_.get(key);\n    }\n}",
    "submit_ts": "1716088225",
    "subm_id": "1261807742"
}