{
    "username": "knarf",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        // HashMap<Integer,Integer> small = new HashMap<>();\n        // HashMap<Integer,Integer> big = new HashMap<>();\n        HashMap<Integer,Integer> diff = new HashMap<>();\n        int n = nums.length;\n        PriorityQueue<int[]> pq = new PriorityQueue<>((o1,o2)->Integer.compare(Math.max(k-o2[0],o2[1]),Math.max(k-o1[0],o1[1])));\n        for(int i=0;i*2<n;i++) {\n            int d = Math.abs(nums[n-i-1]-nums[i]);\n            diff.put(d,diff.getOrDefault(d,0)+1);\n            if(nums[i]<nums[n-i-1]) {\n                pq.add(new int[]{nums[i],nums[n-i-1]});\n            } else {\n                pq.add(new int[]{nums[n-i-1],nums[i]});\n            }\n        }\n        int min = n;\n        for(int i=k;i>=0;i--) {\n            if(i*2<=k) {\n                int t = diff.getOrDefault(i,0);\n                int v = n/2-t;\n                min = Math.min(min,v);\n            } else {\n                int[] arr = pq.peek();\n                while(pq.size()>0 &&Math.max(k-arr[0],arr[1])>=i) {\n                    pq.poll();\n                    arr = pq.peek();\n                }\n                int t = diff.getOrDefault(i,0);\n                int s = pq.size();\n                int v = s+n/2-t;\n                min = Math.min(min,v);\n            }\n        }\n        return min;\n    }\n}",
    "submit_ts": "1721487528",
    "subm_id": "548310397"
}