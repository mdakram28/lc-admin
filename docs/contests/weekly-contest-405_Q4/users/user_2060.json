{
    "username": "Poojitha_T",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        word_map = {}\n        for i in range(len(words)):\n            word_map[words[i]] = min(word_map.get(words[i], float('inf')), costs[i])\n\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n\n            for word in word_map:\n                if i + len(word) <= n and target[i:i+len(word)] == word:\n                    dp[i + len(word)] = min(dp[i + len(word)], dp[i] + word_map[word])\n\n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720321280",
    "subm_id": "1312318545"
}