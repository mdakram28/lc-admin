{
    "username": "nitesh_sinha",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        if(n == 0) return 0;\n        int last = colors[0];\n\n        vector<int> prefixSum = {0};\n        int sum = 0;\n\n        for(int i=1; i<n; i++) {\n            sum += colors[i] == last;\n            last = colors[i];\n            prefixSum.push_back(sum);\n        }\n\n        for(int i=0; i<k-1; i++) {\n            sum += colors[i] == last;\n            last = colors[i];\n            prefixSum.push_back(sum);\n        }\n\n        int count = 0;\n        for(int i=k-1; i<prefixSum.size(); i++) {\n            int j = i - k + 1;\n            count += (prefixSum[i] - prefixSum[j] == 0);\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1720277826",
    "subm_id": "1311681860"
}