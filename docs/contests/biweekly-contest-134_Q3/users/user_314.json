{
    "username": "vikrxnt",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        n = len(colors)\n        if k > n:\n            return 0  \n        is_alternating = [colors[i] != colors[(i + 1) % n] for i in range(n)]\n        \n        count = 0\n        valid_segments = 0\n        \n        for i in range(k - 1):\n            if is_alternating[i]:\n                valid_segments += 1\n        \n        if valid_segments == k - 1:\n            count += 1\n        \n        for i in range(1, n):\n            if is_alternating[i - 1]:\n                valid_segments -= 1\n            \n            if is_alternating[(i + k - 2) % n]:\n                valid_segments += 1\n            \n            if valid_segments == k - 1:\n                count += 1\n        \n        return count\n",
    "submit_ts": "1720277338",
    "subm_id": "1311659033"
}