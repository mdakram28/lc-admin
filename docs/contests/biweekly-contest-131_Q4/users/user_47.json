{
    "username": "tiger2005",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        set<pair<int, int>> st0;\n        vector<int> calc;\n        int u = 0;\n        for (auto e: queries)\n            if (e[0] == 1)\n                calc.push_back(e[1]);\n            else\n                ++ u;\n        vector<bool> ans(u);\n        sort(calc.begin(), calc.end());\n        int M = min(3 * (int)queries.size(), 50000);\n        \n        vector<int> b(M + 1);\n        auto mdf = [&] (int a, int x) {\n            while (a <= M) {\n                b[a] = max(b[a], x);\n                a += a & (-a);\n            }\n        };\n        \n        auto que = [&] (int a) {\n            int res = 0;\n            while (a) {\n                res = max(res, b[a]);\n                a -= a & (-a);\n            }\n            return res;\n        };\n        \n        {\n            int las = 0, ptr = 0;\n            for (int i = 1; i <= M; i ++) {\n                if (ptr != calc.size() && calc[ptr] == i) {\n                    ++ ptr;\n                    st0.insert({las, i});\n                    mdf(i, i - las);\n                    las = i;\n                }\n            }\n            st0.insert({las, M});\n        }\n        int q = queries.size();\n        for (int i = q - 1; i >= 0; i --) {\n            auto &e = queries[i];\n            int op = e[0], x = e[1];\n            if (op == 1) {\n                auto pr = st0.lower_bound({x, 0});\n                auto pl = prev(pr);\n                int l = pl -> first, r = pr -> second;\n                st0.erase(pl); st0.erase(pr);\n                st0.insert({l, r});\n                mdf(r, r - l);\n            }\n            else {\n                int sz = e[2];\n                int tmp = que(x);\n                auto ptr = st0.lower_bound({x, 1e9});\n                ptr --;\n                int L = ptr -> first;\n                tmp = max(tmp, x - L);\n                ans[-- u] = (tmp >= sz);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716649359.0
}