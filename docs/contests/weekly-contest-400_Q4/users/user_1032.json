{
    "username": "Shruthik_Ravula",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        nd = nums[0]\n        ans = 10 ** 9 + 1\n        for i in nums:\n            nd &= i\n            if nd == 0:\n                ans = min(k - nd, ans)\n                break\n        for i in range(30):\n            i = 1 << i\n            j = 0\n            while j < n:\n                if i & nums[j]:\n                    nd = nums[j]\n                    while j < n and  i & nums[j]:\n                        nd &= nums[j]\n                        ans = min(ans, abs(k - nd))\n                        j += 1\n                else:\n                    j += 1\n        return ans\n",
    "submit_ts": 1717300356.0
}