{
    "username": "qingczha",
    "submission": "#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\n#define PB push_back\n#define PF push_front\n#define LB lower_bound\n#define UB upper_bound\n#define fr(x) freopen(x,\"r\",stdin)\n#define fw(x) freopen(x,\"w\",stdout)\n#define REP(i, from, to) for(ll i = from;i<to;i++)\n#define RREP(i, from, to) for(ll i = from;i>=to;i--)\n#define complete_unique(a) a.erase(unique(begin(a),end(a)),end(a))\n#define mst(x, a) memset(x,a,sizeof(x))\n#define all(a) begin(a),end(a)\n#define rall(a) rbegin(a),rend(a)\n#define MP make_pair\n#define lowbit(x) ((x)&(-(x)))\n#define bitcnt(x) (__builtin_popcountll(x))\n#define lson (ind<<1)\n#define rson (ind<<1|1)\n#define se second\n#define fi first\n#define EX0 exit(0);\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing db = double;\nusing ld = long double;\nusing VLL = std::vector<ll>;\nusing VI = std::vector<int>;\nusing PII = std::pair<int, int>;\nusing PLL = std::pair<ll, ll>;\n\nusing namespace __gnu_pbds; //required\nusing namespace std;\ntemplate<typename T> using ordered_set = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst ll mod = 1e9 + 7;\n\n\nstring to_string(string s) { return '\"' + s + '\"'; }\n\nstring to_string(const char *s) { return to_string((string) s); }\n\nstring to_string(bool b) { return (b ? \"true\" : \"false\"); }\n\ntemplate<typename A, typename B>\nstring to_string(pair <A, B> p) { return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\"; }\n\ntemplate<typename A>\nstring to_string(A v) {\n    bool first = true;\n    string res = \"{\";\n    for (const auto &x: v) {\n        if (!first) { res += \", \"; }\n        first = false;\n        res += to_string(x);\n    }\n    res += \"}\";\n    return res;\n}\n\nvoid debug_out() { cerr << endl; }\n\ntemplate<typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n    cerr << \" \" << to_string(H);\n    debug_out(T...);\n}\n\n#ifdef LOCAL\n#define dbg(...) cerr << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define dbg(...) do {} while(0)\n#endif\n\ntemplate<typename T, typename S>\ninline bool upmin(T &a, const S &b) { return a > b ? a = b, 1 : 0; }\n\ntemplate<typename T, typename S>\ninline bool upmax(T &a, const S &b) { return a < b ? a = b, 1 : 0; }\n\n\null twop(ll x) { return 1ULL << x; }\n\nll MOD(ll a, ll m) {\n    a %= m;\n    if (a < 0)a += m;\n    return a;\n}\n\nll inverse(ll a, ll m) {\n    a = MOD(a, m);\n    if (a <= 1)return a;\n    return MOD((1 - inverse(m, a) * m) / a, m);\n}\n\ntemplate<typename T>\nT sqr(T x) { return x * x; }\n\ntemplate<typename T>\nll sz(const T &x) { return x.size(); }\n\nll fast(ll a, ll b, ll mod) {\n    a %= mod;\n    if (b < 0)a = inverse(a, mod), b = -b;\n    ll ans = 1;\n    while (b) {\n        if (b & 1)ans = ans * a % mod;\n        a = a * a % mod;\n        b /= 2;\n    }\n    return ans % mod;\n}\n\nstruct SegTree {\n    static const int maxn = 50010;\n\n    struct node {\n        int l, r;\n        int mx;\n    };\n\n    node no[maxn * 4];\n\n    void push_up(int ind) {\n        no[ind].mx = max(no[lson].mx, no[rson].mx);\n    }\n\n    void push_down(int ind) {\n\n\n    }\n\n    void build(int l, int r, int ind) {\n        no[ind].l = l;\n        no[ind].r = r;\n        no[ind].mx = 0;\n        if (l == r) {\n\n        } else {\n            int mid = (l + r) / 2;\n            build(l, mid, lson);\n            build(mid + 1, r, rson);\n            push_up(ind);\n        }\n    }\n\n    void update(int l, int r, int ind, int val) {\n        if (l > no[ind].r || r < no[ind].l)return;\n        if (l <= no[ind].l && no[ind].r <= r) {\n            no[ind].mx = val;\n        } else {\n            push_down(ind);\n            update(l, r, lson, val);\n            update(l, r, rson, val);\n            push_up(ind);\n        }\n    }\n\n    void query(int l, int r, int ind, int &ans) {\n        if (l > no[ind].r || r < no[ind].l)return;\n        if (l <= no[ind].l && no[ind].r <= r) {\n            upmax(ans, no[ind].mx);\n        } else {\n            push_down(ind);\n            query(l, r, lson, ans);\n            query(l, r, rson, ans);\n            push_up(ind);\n\n        }\n    }\n};\n\nSegTree tr;\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector <vector<int>> &queries) {\n        int mxl = min(50000, (int) (3 * sz(queries)));\n        tr.build(0, mxl + 5, 1);\n        vector<bool> ans;\n        set<int> s;\n        s.insert(0);\n        REP(i, 0, sz(queries)) {\n            if (queries[i][0] == 1) {\n                s.insert(queries[i][1]);\n            }\n        }\n        int pr = 0;\n        for (auto i: s) {\n            tr.update(i, i, 1, i - pr);\n            pr = i;\n        }\n        RREP(i, sz(queries) - 1, 0) {\n            if (queries[i][0] == 1) {\n                s.erase(queries[i][1]);\n                auto nxt = s.lower_bound(queries[i][1]);\n                if (nxt != s.end()) {\n                    tr.update(*nxt, *nxt, 1, (*nxt) - (*prev(nxt)));\n                }\n            } else {\n                int mx = 0;\n                {\n                    auto nxt = --s.upper_bound(queries[i][1]);\n                    upmax(mx, queries[i][1] - (*nxt));\n                }\n                {\n                    tr.query(0, queries[i][1], 1, mx);\n                }\n                ans.PB(mx >= queries[i][2]);\n            }\n        }\n\n        reverse(all(ans));\n        return ans;\n    }\n};\n\n#ifdef LOCAL\n\n\nnamespace SOLVE {\n    void main() {\n    \n    }\n}\n\n#ifdef __APPLE__\n#define INPUT_FILE \"/Users/qingczha/ClionProjects/LeetCode/input.txt\"\n#define OUTPUT_FILE \"/Users/qingczha/ClionProjects/LeetCode/output.txt\"\n#else\n#define INPUT_FILE \"C:/Users/qingczha/CLionProjects/playground/input.txt\"\n#define OUTPUT_FILE \"C:/Users/qingczha/CLionProjects/playground/output.txt\"\n#endif\n\nsigned main() {\n    fr(INPUT_FILE);\n    fw(OUTPUT_FILE);\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    \n    int t = 1;\n//    cin >> t;\n    for(int i = 1; i <= t; i++) {\n//        cout<<\"Case #\"<<i<<\": \";\n        SOLVE::main();\n        \n    }\n\n\n\n\n\n\n\n\n//    clock_t st = clock();\n//    while(clock() - st < 3.0 * CLOCKS_PER_SEC){\n//\n//    }\n    \n    \n    \n    \n    \n    \n    return 0;\n}\n\n#endif\n",
    "submit_ts": 1716648764.0
}