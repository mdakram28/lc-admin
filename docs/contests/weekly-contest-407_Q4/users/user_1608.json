{
    "username": "didwhddks",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        const int n = nums.size();\n        vector<int> d(n);\n        for (int i = 0; i < n; ++i) {\n            d[i] = target[i] - nums[i];\n        }\n        \n        long long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            if (d[i] == 0) {\n                continue;\n            }\n            priority_queue<int, vector<int>, greater<int>> pq;\n            map<int, vector<int>> pos;\n            int j = i;\n            while (j < n && ((d[i] > 0 && d[j] > 0) || (d[i] < 0 && d[j] < 0))) {\n                pq.emplace(abs(d[j]));\n                pos[abs(d[j])].push_back(j);\n                ++j;\n            }\n            \n            long long pre = 0;\n            int L = j - i;\n            vector<int> zeros(L);\n            int cnt = 1;\n            while (pq.size()) {\n                auto x = pq.top();\n                pq.pop();\n                \n                if (pos.count(x) == 0) {\n                    continue;\n                }\n                \n                ans += 1LL * cnt * (x - pre);\n                for (auto p : pos[x]) {\n                    p -= i;\n                    zeros[p] = 1;\n                    if (p - 1 >= 0 && zeros[p - 1] == 0 && p + 1 < L && zeros[p + 1] == 0) {\n                        cnt++;\n                    }\n                    if (p - 1 >= 0 && zeros[p - 1] == 1 && p + 1 < L && zeros[p + 1] == 1) {\n                        cnt--;\n                    }\n                    if (p == 0 && p + 1 < L && zeros[p + 1] == 1) {\n                        cnt--;\n                    }\n                    if (p == L - 1 && p - 1 >= 0 && zeros[p - 1] == 1) {\n                        cnt--;\n                    }\n                }\n                pos.erase(x);\n                pre = x;\n            }\n            i = j - 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721533381",
    "subm_id": "1328007723"
}