{
    "username": "optimusPrime329",
    "submission": "class Solution {\n    static class SegMax{\n\t\tint arr[];\n\t\tpublic SegMax(int n) {\n\t\t\tarr=new int[4*n];\n\t\t}\n\t\t\n\t\tpublic int max(int node,int l,int r,int ql,int qr) {\n\t\t\tif(l>qr||r<ql) return Integer.MIN_VALUE;\n\t\t\telse if(ql<=l&&r<=qr) return arr[node];\n\t\t\telse {\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t    int left=max(2*node+1,l,mid,ql,qr);\n\t\t\t    int right=max(2*node+2,mid+1,r,ql,qr);\n\t\t\t\treturn Math.max(left, right);\n\t\t\t}\n\t\t}\n        \n        public void add(int node,int l,int r,int idx,int val){\n            if(idx<l||idx>r) return;\n            else if(l==r) arr[node]=Math.max(arr[node],val);\n            else{\n                int mid=(l+r)/2;\n                add(2*node+1,l,mid,idx,val);\n                add(2*node+2,mid+1,r,idx,val);\n                arr[node]=Math.max(arr[2*node+1],arr[2*node+2]);\n            }\n        }\n\t}\n    public int maximumLength(int[] nums, int k) {\n        TreeSet<Integer>set=new TreeSet<>();\n        for(int a:nums) set.add(a);\n        Map<Integer,Integer>map=new HashMap<>();\n        int idx=0;\n        for(int a:set) map.put(a,idx++);\n        int n=nums.length;\n        int dp[]=new int[n+1];\n        int max=1;\n        for(int j=0;j<=k;j++){\n            SegMax obj=new SegMax(idx);\n            int curr[]=new int[idx];\n            for(int i=n-1;i>=0;i--){\n                int id=map.get(nums[i]);\n                int val=curr[id]+1;\n                int tt=Math.max(obj.max(0,0,idx-1,0,id-1),obj.max(0,0,idx-1,id+1,idx-1))+1;\n                val=Math.max(val,tt);\n                curr[id]=val;\n                obj.add(0,0,idx-1,id,dp[i]);\n                dp[i]=val;\n                max=Math.max(max,val);\n            }\n            \n        }\n        return max;\n    }\n}",
    "submit_ts": 1717858934.0
}