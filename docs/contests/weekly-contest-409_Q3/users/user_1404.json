{
    "username": "yuchen1005",
    "submission": "# pragma GCC optimize(2)\nclass ST {\npublic:\n    int n;\n    vector<int> flag;\n    vector <int> tr;\n    ST(int nn): n(nn), flag(n << 2), tr(n << 2) {}\n    // int getSum(int o, int l, int r, int L, int R) {\n    //     if(l >= r) return flag[o];\n    //     else if(L <= l && r <= R && flag[o]) return r - l + 1;\n    //     else {\n    //         int m = (l + r) >> 1;\n    //         int ans = 0;\n    //         if(L <= m) ans += getSum(o << 1, l, m, L, R);\n    //         if(m < R) ans += getSum(o << 1 | 1, m + 1, r, L, R);\n    //         return ans;\n    //     }\n    // }\n    void pushDown(int x, int l, int r) {\n        if (flag[x]) {\n            int mid = (l + r) >> 1;\n            flag[x << 1] = flag[x << 1 | 1] = 1;\n            tr[x << 1] = (mid - l + 1);\n            tr[x << 1 | 1] = (r - mid);\n        }\n    }\n    void set(int o, int l, int r, int L, int R) {\n        if(L <= l && r <= R) {\n            flag[o] = 1; tr[o] = r - l + 1;\n            return;\n        } else {\n            pushDown(o, l, r);\n            int m = (l + r) >> 1;\n            if(L <= m) set(o << 1, l, m, L, R);\n            if(m < R) set(o << 1 | 1, m + 1, r, L, R);\n            if(flag[o << 1] && flag[o << 1 | 1]) flag[o] = 1;\n            tr[o] = tr[o << 1] + tr[o << 1 | 1];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        ST st(n);\n        for(auto& p : queries) {\n            st.set(1, 1, n, p[0] + 2, p[1]);\n            ans.push_back(n - 1 - st.tr[1]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743995",
    "subm_id": "552354063"
}