{
    "username": "mikeqiyh",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pll;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pi> vpi;\ntypedef vector<pll> vpll;\ntypedef vector<ld> vld;\n#define ms(x, a) memset(x, a, sizeof(x))\n#define siz(x) (int)x.size()\n#define len(x) (int)x.length()\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define F first\n#define S second\n#define FOR(i, x) for (int i = 0; i < x; i++)\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 0x3f3f3f3f3f3f3f3f;\nconst ll MOD = 1e9+7; //998244353;\n//===========================================\ntemplate<int MOD> struct mint {\n    static const int mod = MOD;\n     int v;\n     explicit operator int() const { return v; }\n    mint():v(0) {}\n    mint(ll _v):v(int(_v%MOD)) { v += (v<0)*MOD; }\n    mint& operator+=(mint o) {\n        if ((v += o.v) >= MOD) v -= MOD;\n        return *this; }\n    mint& operator-=(mint o) {\n        if ((v -= o.v) < 0) v += MOD;\n        return *this; }\n    mint& operator*=(mint o) {\n        v = int((ll)v*o.v%MOD); return *this; }\n    mint& operator/=(const mint& o) { return (*this) *= inv(o); }\n    friend mint pow(mint a, ll p) { assert(p >= 0);\n        return p==0?1:pow(a*a,p/2)*(p&1?a:1); }\n    friend mint inv(mint a) { assert(a.v != 0); return pow(a,MOD-2); }\n    friend mint operator+(mint a, mint b) { return a += b; }\n    friend mint operator-(mint a, mint b) { return a -= b; }\n    friend mint operator*(mint a, mint b) { return a *= b; }\n    friend mint operator/(mint a, const mint& b) { return a /= b; }\n};\nusing mi = mint<MOD>;\n//===========================================\nconst int MAX = 1e5+5;\nvector<int> adj[MAX];\nint mx1[MAX], mx2[MAX], node[MAX], pp[MAX], ans[MAX];\n \nint dfs1(int v, int p){\n    for (int u: adj[v]){\n        if (u == p) continue;\n        int dep = dfs1(u, v)+(u%2? 1 : 2);\n        if (dep > mx1[v]){\n            node[v] = u;\n            mx2[v] = mx1[v];\n            mx1[v] = dep;\n        } else if (dep > mx2[v]) {\n            mx2[v] = dep;\n        }\n    }\n    return mx1[v];\n}\n \nvoid dfs2(int v, int p){\n    ans[v] = max(mx1[v], pp[v]);\n    for (int u: adj[v]){\n        if (u == p) continue;\n        pp[u] = pp[v]+(v%2? 1 : 2);\n        if (node[v] != u){\n            pp[u] = max(pp[u], mx1[v]+(v%2? 1 : 2));\n        } else {\n            pp[u] = max(pp[u], mx2[v]+(v%2? 1 : 2));\n        }\n        dfs2(u, v);\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& ed) {\n        int n = siz(ed)+1;\n        for (auto x: ed){\n            adj[x[0]].pb(x[1]);\n            adj[x[1]].pb(x[0]);\n        }\n        dfs1(0, -1);\n        dfs2(0, -1);\n        vi ret;\n        for (int i = 0; i < n; i++) ret.pb(ans[i]);\n        for (int i = 0; i <= n; i++){\n            adj[i].clear();\n            mx1[i] = mx2[i] = node[i] = pp[i] = ans[i] = 0;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722698184",
    "subm_id": "1343172479"
}