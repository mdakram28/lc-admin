{
    "username": "Anno",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<pair<long long, pair<int, int>>> list;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                list.push_back({board[i][j], {i, j}});\n            }\n        }\n        sort(list.begin(), list.end());\n        long long ans = LLONG_MIN;\n        int skip = 0;\n        while (skip < 2) {\n            for (int i = 0; i < m; ++i) {\n                for (int j = 0; j < n; ++j) {\n                    int tempSkip = skip;\n                    set<int> tempR;\n                    set<int> tempC;\n                    tempR.insert(i);\n                    tempC.insert(j);\n                    int cnt = 0;\n                    long long tempAns = board[i][j];\n                    for (int k = list.size() - 1; k >= 0; --k) {\n                        if (tempR.find(list[k].second.first) == tempR.end() &&\n                            tempC.find(list[k].second.second) == tempC.end()) {\n                            if (tempSkip) {\n                                --tempSkip;\n                                continue;\n                            }\n                            ++cnt;\n                            tempAns += list[k].first;\n                            tempR.insert(list[k].second.first);\n                            tempC.insert(list[k].second.second);\n                        }\n                        if (cnt >= 2)\n                            break;\n                    }\n                    if(cnt >= 2)\n                    ans = max(tempAns, ans);\n                }\n            }\n            ++skip;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909547",
    "subm_id": "1359196674"
}