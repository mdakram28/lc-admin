{
    "username": "2210030020",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int h = horizontalCut.length - 1;\n        int v = verticalCut.length - 1;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        long totalCost = 0;\n         while (h >= 0 && v >= 0) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += (long) horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h--;\n            } else {\n                totalCost += (long) verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v--;\n            }\n        }\n        while (h >= 0) {\n            totalCost += (long) horizontalCut[h] * verticalPieces;\n            h--;\n        }\n        while (v >= 0) {\n            totalCost += (long) verticalCut[v] * horizontalPieces;\n            v--;\n        }\n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720925368",
    "subm_id": "1320252311"
}