{
    "username": "waxxbang",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) \n    {\n        priority_queue<int> h,v;\n        int countH = 1, countV = 1;\n\n        for(auto &x: horizontalCut)\n            h.push(x);\n        \n        for(auto &x: verticalCut)\n            v.push(x);\n\n        long long res = 0;\n\n        while(!h.empty() || !v.empty())\n        {\n            int curH = h.empty() ? INT_MIN : h.top();\n            int curV = v.empty() ? INT_MIN : v.top();\n\n            if(curH > curV)\n            {\n                res += curH * countV;\n                countH++;\n                h.pop();\n            }\n            else\n            {\n                res += curV * countH;\n                countV++;\n                v.pop();\n            }\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720925485",
    "subm_id": "1320256284"
}