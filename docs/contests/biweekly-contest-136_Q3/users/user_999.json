{
    "username": "8_bit",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        \n        cnt = 0\n        for i in range(m // 2):\n            for j in range(n // 2):\n                n1 = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j]\n                cnt += min(n1, 4 - n1)\n\n        if m % 2 == 1 and n % 2 == 1 and grid[m // 2][n // 2] == 1:\n            cnt += 1\n\n        cnt1 = 0\n        changes = 0\n        if m % 2 == 1:\n            i = m // 2\n            for j in range(n // 2):\n                if grid[i][j] != grid[i][n-1-j]:\n                    changes += 1\n                elif grid[i][j] == 1:\n                    cnt1 += 2\n        if n % 2 == 1:\n            j = n // 2\n            for i in range(m // 2):\n                if grid[i][j] != grid[m-1-i][j]:\n                    changes += 1\n                elif grid[i][j] == 1:\n                    cnt1 += 2\n        if cnt1 % 4 != 0 and changes == 0:\n            changes += 2\n        return cnt + changes",
    "submit_ts": "1722698858",
    "subm_id": "552272873"
}