{
    "username": "prakharrrr4",
    "submission": "class Solution {\npublic:\n    #define pb push_back\n    int n;\n    vector<int> dp, ans;\n    vector<vector<int>> g;\n    \n    void dfs(int r,int p = -1)\n    {\n        for(auto v : g[r])\n        {\n            if(v!=p)\n            {\n                dfs(v,r);\n                dp[r] = max(dp[v] + 1 + (v+1)%2,dp[r]);\n            }\n        }\n        return;\n    }\n    \n    void dfs2(int r,int p=-1,int pdp = -1)\n    {\n        // cout << r << \" \" << p << \" \" << pdp << \" \" <<  pdp + 1 + (p+1)%2 << endl;\n        ans[r] = pdp + 1 + (p+1)%2;\n        multiset<int> arr;\n        for(auto v: g[r])\n        {\n            if(v!=p)\n                arr.insert(dp[v] + 1 + (v+1)%2);\n        }\n        arr.insert(pdp + 1 + (p+1)%2);\n        for(auto v: g[r])\n        {\n            if(v!=p)\n            {\n                arr.erase(arr.find(dp[v] + 1 + (v+1)%2));\n                auto itr = arr.end();\n                itr--;\n                int px = *itr;\n                dfs2(v,r,px);\n                arr.insert(dp[v] + 1 + (v+1)%2);\n                ans[r] = max(ans[r],dp[v] + 1 + (v+1)%2);\n            }\n            \n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = (int)(edges.size()) + 1;\n        g = vector<vector<int>>(n);\n        dp = vector<int>(n);\n        ans = vector<int>(n);\n        for(auto e: edges)\n        {\n            int u = e[0];\n            int v = e[1];\n            g[u].pb(v);\n            g[v].pb(u);\n        }\n        dfs(0);\n        // for(auto v: dp)\n        //     cout << v << \" \";\n        // cout << endl;\n        dfs2(0);\n        return ans;\n    }\n};",
    "submit_ts": "1722697342",
    "subm_id": "1343143103"
}