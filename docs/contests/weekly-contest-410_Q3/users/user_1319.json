{
    "username": "priyanshu_2384",
    "submission": "class Solution {\n    int mod = (int)Math.pow(10,9)+7;\n    long dp[][][];\n    public long helper(int nums[],int i,int prev1,int prev2) {\n         if(i==nums.length) {\n             return 1;\n         }\n        if(dp[i][prev1][prev2]==-1) {\n             long curr = 0;\n        for(int j=0; j<=nums[i]; j++) {\n            if(j>=prev1 && (nums[i]-j)<=prev2) {\n               curr = (curr + helper(nums,i+1,j,nums[i]-j))%mod;\n            }\n        }\n            dp[i][prev1][prev2] = curr;\n        }\n        return dp[i][prev1][prev2];\n    }\n    public int countOfPairs(int[] nums) {\n        int max = 0;\n        for(int i=0; i<nums.length; i++) {\n             max = Math.max(max,nums[i]);\n        }\n        dp = new long[nums.length+1][max+1][max+1];\n        for(int i=0; i<dp.length; i++) {\n            for(int j=0; j<max+1; j++) {\n                for(int k=0; k<max+1; k++) {\n                     dp[i][j][k] = -1;\n                }\n            } \n        }\n        return (int)helper(nums,0,0,max);\n    }\n}",
    "submit_ts": "1723345868",
    "subm_id": "1351565044"
}