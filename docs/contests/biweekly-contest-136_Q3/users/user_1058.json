{
    "username": "icmezfxi",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int m = grid.size(), n = grid[0].size();\n        for(int i = 0; i < m / 2; i++){\n            for(int j = 0; j < n / 2; j++){\n                int sum = grid[i][j] + grid[m - 1 - i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j];\n                ans += min(sum, 4 - sum);\n            }\n        }\n        bool mid = false, change = false;\n        int cnt1 = 0;\n        if(m % 2){\n            mid = true;\n            for(int i = 0; i < n / 2; i++){\n                if(grid[m / 2][i] != grid[m / 2][n - 1 - i]){\n                    ans++;\n                    change = true;\n                }\n                cnt1 += (grid[m / 2][i] + grid[m / 2][n - 1 - i]);\n            }\n        }\n        if(n % 2){\n            mid = true;\n            for(int i = 0; i < m / 2; i++){\n                if(grid[i][n / 2] != grid[m - 1 - i][n / 2]){\n                    ans++;\n                    change = true;\n                }\n                cnt1 += (grid[i][n / 2] + grid[m - 1 - i][n / 2]);\n            }\n        }\n        if(mid && !change && (cnt1 % 4)){\n            ans += 2;\n        }\n        if(m % 2 && n % 2){\n            ans += (grid[m / 2][n / 2] == 1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698998",
    "subm_id": "1343198359"
}