{
    "username": "Praveen1208",
    "submission": "class Solution {\npublic:\n    pair<int,int> bfs(int src,int n,vector<vector<int>> &adj)\n        {\n            int d = 0;\n            queue<pair<int,int> > q;\n            q.push({src, 0});\n            vector<bool> vis(n, false);\n            pair<int,int>  u;\n\n            while(!q.empty()) {\n                u = q.front();\n                q.pop();\n                vis[u.first] = true;\n                for(int v: adj[u.first])\n                    if(!vis[v])\n                    q.push({v, u.second + 1});\n            }\n            return u;\n        }\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n=e1.size()+1;\n        int m=e2.size()+1;\n        vector<vector<int>> adj1(n+1),adj2(m+1);\n        for(vector<int>&e:e1){\n            adj1[e[0]].push_back(e[1]);\n            adj1[e[1]].push_back(e[0]);\n        }\n        \n        pair<int,int>  p1 = bfs(0,n,adj1);\n\t    pair<int,int>  p2 = bfs(p1.first,n,adj1);\n        int l1=(p2.second+1)/2;\n        \n        for(vector<int>&e:e2){\n            adj2[e[0]].push_back(e[1]);\n            adj2[e[1]].push_back(e[0]);\n        }\n        pair<int,int>  q1 = bfs(0,m,adj2);\n\t    pair<int,int>  q2 = bfs(q1.first,m,adj2);\n        int l2=(q2.second+1)/2;\n        //cout<<p2.second<<\" \"<<q2.second;\n        //cout<<endl;\n        return max(p2.second,max(q2.second,l1+l2+1));\n        \n        \n    }\n};",
    "submit_ts": 1719718861.0
}