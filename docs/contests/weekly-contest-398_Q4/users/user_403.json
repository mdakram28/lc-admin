{
    "username": "asour",
    "submission": "class Solution {\n    public int waysToReachStair(int k) {\n        k --;\n        int sum = 0;\n        for (int i=0; i<32; i++) {\n            int n = (1 << i) - 1; // 1, 3, 7, ...\n            if (0 <= n-k && n-k <= i+1) {\n                sum += choose(i+1, n-k);\n                //System.out.println((i+1)+\" \"+(n-k)+\" \"+choose(i+1, n-k));\n            }\n        }\n        return sum;\n    }\n    private int choose(int n, int m) {\n        int r = 1;\n        long L = 1;\n        while (r <= m) {\n            L = L * n-- / r++;\n        }\n        return (int) L;\n    }\n}\n/*\n0 --> 1(-1) 1(2^0 - 2)\n1 --> 1() 2(2^0 - 1) 1(2^0 + 2^1 - 3)\n4 --> 1(2^0 + 2^1) + 1(2^0 + 2^1 + 2^2 - 4)\n*/",
    "submit_ts": "1716088401",
    "subm_id": "1261812888"
}