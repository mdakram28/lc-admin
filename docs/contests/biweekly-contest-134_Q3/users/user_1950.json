{
    "username": "user7573Xt",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        colors.append(colors[0])\n        l = []\n        i = 0\n        # dry_test = [1,0,1,1]\n        while i <= len(colors) - 1:\n            start = i\n            while  i <= len(colors) - 2 and colors[i] != colors[i + 1]:\n                    i += 1\n            end = i\n            val = end - start + 1\n            \n            #print(end, val)\n            l.append([val, start, end])\n            i += 1\n        if l[0][1] == 0 and l[-1][2] == len(colors) - 1 and colors[0]!=colors[-2]:\n            \n            if len(l) > 1: \n                l[0][0] += l[-1][0] - 1\n                l.pop()\n            else:\n                return len(colors) - 1\n                print(l)\n        \n        res = 0\n        for arr in l:\n            if arr[0] >= k:\n                res += arr[0] - k + 1\n        return res\n            \n                    \n                    \n            \n            \n        ",
    "submit_ts": "1720279550",
    "subm_id": "1311755679"
}