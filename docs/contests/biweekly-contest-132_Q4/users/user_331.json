{
    "username": "lowie_",
    "submission": "class Solution {\npublic:\n    vector <vector <int> > dpres;\n    vector <vector <int> > dp2res;\n    vector <int> prv;\n    \n    int inf = 1000000007;\n    int dp(int u, int v) {\n        if (v < 0) return -inf;\n        if (dpres[u][v] != -1) return dpres[u][v];\n        if (u == 0) {\n            if (v == 0) {\n                return dpres[u][v] = 1;\n            } else {\n                return dpres[u][v] = -inf;\n            }\n        }\n        \n        int res = -inf;\n        if (v == 0) res = 1;\n        res = max(res, dp2(u - 1, v - 1) + 1);\n        if (prv[u] != -1) {\n             res = max(res, dp(prv[u], v) + 1);\n        }\n        \n        return dpres[u][v] = res;\n    }\n    \n    int dp2(int u, int v) {\n        if (v < 0 || u < 0) return -inf;\n        if (dp2res[u][v] != -1) return dp2res[u][v];\n        if (u == 0) return dp2res[u][v] = dp(u, v);\n        return dp2res[u][v] = max(dp2(u - 1, v), dp(u, v));\n    }\n    \n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector <int> t(k + 1, -1);\n        dpres.assign(n, t);\n        dp2res.assign(n, t);\n        prv.assign(n, -1);\n        \n        unordered_map<int, int> value_index;\n        for (int i = 0; i < n; i++) {\n            int x = nums[i];\n            if (value_index.count(x) != 0) {\n                prv[i] = value_index[x];\n            }\n            value_index[x] = i;\n        }\n        \n        // dp[i][j] - \u0111\u1ed9 d\u00e0i t\u1ed1t nh\u1ea5t cho d\u00e3y k\u1ebft th\u00fac \u1edf i\n        // dp[i][j] = max(dp[i - 1][j - 1] + 1, dp[i'][j] + 1) v\u1edbi i' l\u00e0 gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t m\u00e0 nums[i] == nums[i'], i' < i\n        // dp[0][0] = 1\n        // dp[0][!= 0] = -inf\n        int ans = 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= k; j++) {\n                ans = max(ans, dp(i, j));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717860566.0
}