{
    "username": "Invincible_demon",
    "submission": "class Solution{\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        int m = nums.size();\n        if(m < 0) return 0;\n        if (m == 0) return 0;\n        \n        long long count = 0;\n        unordered_map<long long, long long> prefixCounts;\n\n        for (int i = 0; i < m; ++i) {\n        unordered_map<long long, long long> nextPrefixCounts;\n\n       long long currentAnd = nums[i];\n        if (currentAnd == k) {\n            ++count;\n        }\n            \n        for (auto& [val, freq] : prefixCounts) {\n            long long res = val & nums[i];\n            if (res == k) {\n                count += freq;\n            }\n            nextPrefixCounts[res] += freq;\n          }\n\n        nextPrefixCounts[currentAnd]++;\n            \n        prefixCounts = move(nextPrefixCounts);\n        }\n        \n        if(count<0) return 0;\n        return count;\n\n    }\n};",
    "submit_ts": "1720280273",
    "subm_id": "1311783215"
}