{
    "username": "nayan8804",
    "submission": "// first check which is the most frequent occuring change\n// 1 2 100 101 k = 2\n// If i am not able to convert \n#define all(x) x.begin(),x.end()\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int,vector<int>>mp;\n        set<int>st;\n        for(int i=0;i<n/2;i++) {\n            int diff = abs(nums[i]-nums[n-i-1]);\n            mp[diff].push_back(max(nums[i],max(nums[n-i-1],max(k-nums[i],k-nums[n-i-1]))));\n            st.insert(max(nums[i],max(nums[n-i-1],max(k-nums[i],k-nums[n-i-1])))); \n        }\n        int ans = n;\n        vector<int>v(all(st));\n        for(auto ele:mp){\n            int idx = lower_bound(all(v),ele.first) - v.begin();\n            idx += n/2;\n            for(auto ele2:ele.second){\n                if(ele2<ele.first){\n                    idx-=2;\n                }\n                else{\n                    idx-=1;\n                }\n            }\n            ans = min(ans,idx);\n        }\n        return ans;\n        \n        \n\n        \n    }\n};\n",
    "submit_ts": "1721489549",
    "subm_id": "1327456647"
}