{
    "username": "a4ever",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int>> rec;\n        for (int i = 0; i < m - 1; i++) {\n            rec.push_back({horizontalCut[i], 0});\n        }\n        for (int i = 0; i < n - 1; i++) {\n            rec.push_back({verticalCut[i], 1});\n        }\n        auto cmp = [&](pair<long long, int>& a, pair<long long, int>& b) {\n            return a.first > b.first;\n        };\n        sort(rec.begin(), rec.end(), cmp);\n        long long hh = 1, vv = 1;\n        long long ret = 0;\n        int ll = rec.size();\n        for (int i = 0; i < ll; i++) {\n            int t = rec[i].second;\n            if (t == 0) {\n                ret += vv * rec[i].first;\n                hh++;\n            } else {\n                ret += hh * rec[i].first;\n                vv++;\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720925426",
    "subm_id": "546439349"
}