{
    "username": "mhasan01",
    "submission": "const int K = 4;\nconst int INF = 1e9;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& a) {\n        int n = (int) a.size();\n        int m = (int) a[0].size();\n        vector<vector<bool>> vis(n, vector<bool>(m));\n        vector<pair<int, int>> v;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (vis[i][j]) {\n                    continue;\n                }\n                int ci = n - i - 1;\n                int cj = m - j - 1;\n                set<pair<int, int>> st;\n                st.emplace(i, j);\n                st.emplace(ci, j);\n                st.emplace(i, cj);\n                st.emplace(ci, cj);\n                int black = 0;\n                int white = 0;\n                for (auto [x, y] : st) {\n                    vis[x][y] = true;\n                    if (a[x][y]) {\n                        black++;\n                    } else {\n                        white++;\n                    }\n                }\n                v.emplace_back(black, white);\n            }\n        }\n        int len = (int) v.size();\n        vector<int> dp(K, INF);\n        dp[0] = 0;\n        for (auto [black, white] : v) {\n            vector<int> ndp(K, INF);\n            for (int i = 0; i < K; i++) {\n                ndp[i] = min(ndp[i], dp[i] + black);\n                int ci = (i + black + white) % K;\n                ndp[ci] = min(ndp[ci], dp[i] + white);\n            }\n            dp.swap(ndp);\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1722697388",
    "subm_id": "1343144781"
}