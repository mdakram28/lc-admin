{
    "username": "ni1fi1",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long horCount = 1;\n        long long verCount = 1;\n\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<>());\n\n        int h = 0;\n        int v = 0;\n        long long cost = 0;\n\n        while (h < m - 1 || v < n - 1) {\n            if (h == m - 1) {\n                cost += verCount * verticalCut[v];\n                ++v;\n                continue;\n            }\n            if (v == n - 1) {\n                cost += horCount * horizontalCut[h];\n                ++h;\n                continue;\n            }\n            if (horizontalCut[h]  > verticalCut[v] ) {\n                cost += horCount * horizontalCut[h];\n                ++h;\n                ++verCount;\n            } else {\n                cost += verCount * verticalCut[v];\n                ++v;\n                ++horCount;\n            }\n        }\n\n        return cost;\n    }\n};",
    "submit_ts": "1720925744",
    "subm_id": "1320264814"
}