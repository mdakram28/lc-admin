{
    "username": "heisenberg_003",
    "submission": "class Solution {\npublic:\n    \n    vector<int> tree,v2;\n    \n    void build(int v, int tl, int tr){\n        if(tl==tr) tree[v]=v2[tl];\n        else{\n            int m=(tl+tr)/2;\n            build(2*v+1,tl,m);\n            build(2*v+2,m+1,tr);\n            tree[v]=(tree[2*v+1]+tree[2*v+2]);\n        }\n    }\n    \n    int sum(int v, int tl, int tr, int l, int r){\n        if(l>r) return 0;\n        if(l==tl && r==tr) return tree[v];\n        int m=(tl+tr)/2;\n        int val1=sum(2*v+1,tl,m,l,min(r,m));\n        int val2=sum(2*v+2,m+1,tr,max(l,m+1),r);\n        return val1+val2;\n    }\n    \n    void update(int v, int tl, int tr, int pos, int val){\n        if(tl==tr) tree[v]=val;\n        else{\n            int m=(tl+tr)/2;\n            if(pos<=m) update(2*v+1,tl,m,pos,val);\n            else update(2*v+2,m+1,tr,pos,val);\n            tree[v]=(tree[2*v+1]+tree[2*v+2]);\n        }\n    }\n    \n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& v1) {\n        int n=(int)v.size();\n        tree.clear();\n        tree.resize(4*n);\n        v2.clear();\n        v2.resize(n);\n        for(int i=1;i<n-1;i++){\n            if(v[i]>v[i-1] && v[i]>v[i+1]) v2[i]=1;\n        }\n        build(0,0,n-1);\n        vector<int> res;\n        for(int i=0;i<(int)v1.size();i++){\n            int op=v1[i][0];\n            if(op==1){\n                int ans=sum(0,0,n-1,v1[i][1],v1[i][2]);\n                ans-=sum(0,0,n-1,v1[i][1],v1[i][1]);\n                if(v1[i][1]!=v1[i][2]) ans-=sum(0,0,n-1,v1[i][2],v1[i][2]);\n                res.push_back(ans);\n            }\n            else{\n                int pos=v1[i][1],val=v1[i][2];\n                v[pos]=val;\n                update(0,0,n-1,pos,0);\n                if((pos-1>=0 && v[pos]>v[pos-1]) && (pos+1<n && v[pos]>v[pos+1])) update(0,0,n-1,pos,1);\n                if(pos+1<n){\n                    update(0,0,n-1,pos+1,0);\n                    if((pos>=0 && v[pos+1]>v[pos]) && (pos+2<n && v[pos+1]>v[pos+2])) update(0,0,n-1,pos+1,1);\n                }\n                if(pos-1>=0){\n                    update(0,0,n-1,pos-1,0);\n                    if((pos-2>=0 && v[pos-1]>v[pos-2]) && (pos<n && v[pos-1]>v[pos])) update(0,0,n-1,pos-1,1);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": 1718507648.0
}