{
    "username": "za_robot10",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        \n\n        unordered_map < int, int > m;\n        vector < pair < int, int > > v;\n\n        map < int, int > mp;\n\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++)\n        {\n            int diff = abs(nums[i] - nums[n - i - 1]);\n\n\n            int num1 = min(nums[i], nums[n - i - 1]);\n            int num2 = max(nums[i], nums[n - i - 1]);\n\n            int num3 = k - num1;\n            int num4 = num2;\n            int num5 = max(num3, num4);\n\n\n            mp[num5] ++;\n\n\n\n            m[diff] ++;\n        }\n\n        int sum = 0;\n\n        map  < int, int > aa;\n        for (auto p: mp)\n        {\n            \n            sum += p.second;\n            aa[p.first] = sum;\n        }\n\n\n       \n    \n        int total = n / 2;\n\n        int max_equal = INT_MAX;\n        for (auto p : m)\n        {\n            int c = p.second;\n            int to_find = p.first;\n\n            // see how many take one operation and how many take two operation\n\n            auto it = aa.lower_bound(to_find);\n\n            int first = it->first;\n            int second = it->second;\n\n            int count = mp[first];\n\n            int diff = second - count;\n\n            int ans1 = diff * 2;\n\n            int left = total - c - diff;\n\n            ans1 += left;\n\n\n            max_equal = min(max_equal, ans1);\n        }\n\n        int ans = max_equal;\n\n        return ans;\n    }\n};",
    "submit_ts": "1721488595",
    "subm_id": "1327427216"
}