{
    "username": "vishal_2304",
    "submission": "public class Solution\n{\n    public void Raayan(){\n        Console.WriteLine(\"OKKKKKKKKKKKKKKKKK!!!!\");\n    }\n\n    private bool Bfs(List<int>[] graph, int start, int target1, int target2, int nodes)\n    {\n        Queue<int> q = new Queue<int>();\n        bool[] visited = new bool[nodes + 4];\n        q.Enqueue(start);\n        visited[start] = true;\n        \n        while (q.Count > 0)\n        {\n            int u = q.Dequeue();\n            foreach (int v in graph[u])\n            {\n                if (!visited[v])\n                {\n                    q.Enqueue(v);\n                    visited[v] = true;\n                }\n            }\n        }\n        \n        return visited[target1] || visited[target2];\n    }\n\n    public bool CanReachCorner(int X, int Y, int[][] circles2)\n    {\n        var circles = new List<Tuple<int, int, int>>();\n        for (int i = 0; i < circles2.Length; i++)\n        {\n            circles.Add(new Tuple<int, int, int>(circles2[i][0], circles2[i][1], circles2[i][2]));\n        }\n        \n        int rkvishal = circles.Count;\n        List<int>[] graph = new List<int>[rkvishal + 4];\n        for (int i = 0; i < graph.Length; i++)\n        {\n            graph[i] = new List<int>();\n        }\n\n        for (int i = 0; i < rkvishal; i++)\n        {\n            if (circles[i].Item1 <= circles[i].Item3)\n            {\n                graph[rkvishal].Add(i);\n                graph[i].Add(rkvishal);\n            }\n            if (X - circles[i].Item1 <= circles[i].Item3)\n            {\n                graph[rkvishal + 2].Add(i);\n                graph[i].Add(rkvishal + 2);\n            }\n            if (circles[i].Item2 <= circles[i].Item3)\n            {\n                graph[rkvishal + 1].Add(i);\n                graph[i].Add(rkvishal + 1);\n            }\n            if (Y - circles[i].Item2 <= circles[i].Item3)\n            {\n                graph[rkvishal + 3].Add(i);\n                graph[i].Add(rkvishal + 3);\n            }\n\n            for (int j = i + 1; j < rkvishal; j++)\n            {\n                double distance = Math.Sqrt(Math.Pow(circles[i].Item1 - circles[j].Item1, 2) +\n                                            Math.Pow(circles[i].Item2 - circles[j].Item2, 2));\n                double radiusSum = circles[i].Item3 + circles[j].Item3;\n                if (radiusSum >= distance)\n                {\n                    graph[i].Add(j);\n                    graph[j].Add(i);\n                }\n            }\n        }\n\n        bool vishal = false;\n        vishal = vishal || Bfs(graph, rkvishal, rkvishal + 1, rkvishal + 2, rkvishal + 4);\n        vishal = vishal || Bfs(graph, rkvishal + 3, rkvishal + 2, rkvishal + 1, rkvishal + 4);\n        if (vishal)\n        {\n            return false;\n        }\n        return true;\n    }\n}\n",
    "submit_ts": "1722139125",
    "subm_id": "1335808527"
}