{
    "username": "arignote",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        if (k == 2) {\n            return n > 1 ? \"8\" + \"9\".repeat(n - 2) + \"8\" : \"8\";\n        } else if (k == 4) {\n            return n > 4 ? \"88\" + \"9\".repeat(n - 4) + \"88\" : \"8\".repeat(n);\n        } else if (k == 5) {\n            return n > 1 ? \"5\" + \"9\".repeat(n - 2) + \"5\" : \"5\";\n        } else if (k == 6) {\n            return n > 2 ? \"8\" + \"9\".repeat((n - 3) / 2) + (n % 2 > 0 ? \"8\" : \"77\") +\n\"9\".repeat((n - 3) / 2) + \"8\" : \"6\".repeat(n);\n        } else if (k == 7) {\n            return largestPalindrome(0, n - 1, 0, new char[n]);\n        } else if (k == 8) {\n            return n > 6 ? \"888\" + \"9\".repeat(n - 6) + \"888\" : \"8\".repeat(n);\n}\n        return \"9\".repeat(n);\n    }\n    private String largestPalindrome(int left, int right, int sum, char[] s) {\n        if (left > right) {\n            return sum > 0 ? null : String.valueOf(s);\n        }\n\n         for (int i = 9, k = new int[] { 1, 3, 2, 6, 4, 5 }[(s.length - left - 1) % 6]\n+ new int[] { 1, 3, 2, 6, 4, 5 }[(s.length - right - 1) % 6]; i >= 0; i--) {\n            s[left] = s[right] = (char) ('0' + i);\n            String t = largestPalindrome(left + 1, right - 1, (sum + (left < right ?\nk : k / 2) * i) % 7, s);\n            if (t != null) {\n                return t;\n} }\n        return null;\n    }\n}",
    "submit_ts": "1723950044",
    "subm_id": "1359735688"
}