{
    "username": "ziuch",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        class FenwickTree:\n            def __init__(self, size):\n                self.size = size\n                self.tree = [0] * (size + 1)\n\n            def update(self, index, delta):\n                while index <= self.size:\n                    self.tree[index] += delta\n                    index += index & -index\n\n            def query(self, index):\n                sum = 0\n                while index > 0:\n                    sum += self.tree[index]\n                    index -= index & -index\n                return sum\n\n            def range_query(self, left, right):\n                return self.query(right) - self.query(left - 1)\n\n        def is_peak(nums, index):\n            if index == 0 or index == len(nums) - 1:\n                return False\n            return nums[index - 1] < nums[index] > nums[index + 1]\n\n        n = len(nums)\n        fenwick_tree = FenwickTree(n)\n        is_peak_array = [False] * n\n        \n        for i in range(1, n-1):\n            if is_peak(nums, i):\n                is_peak_array[i] = True\n                fenwick_tree.update(i + 1, 1)\n\n        results = []\n\n        for query in queries:\n            if query[0] == 1:\n                li, ri = query[1], query[2]\n                if ri - li > 1:\n                    count = fenwick_tree.range_query(li + 2, ri)\n                else:\n                    count = 0\n                results.append(count)\n            elif query[0] == 2:\n                index, val = query[1], query[2]\n                nums[index] = val\n                for i in range(max(1, index - 1), min(n - 1, index + 2)):\n                    current_is_peak = is_peak(nums, i)\n                    if current_is_peak != is_peak_array[i]:\n                        is_peak_array[i] = current_is_peak\n                        fenwick_tree.update(i + 1, 1 if current_is_peak else -1)\n\n        return results",
    "submit_ts": "1718506031",
    "subm_id": "539772296"
}