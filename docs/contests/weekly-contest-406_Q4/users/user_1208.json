{
    "username": "iit2021144",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long total_cost = 0;\n    int horizontal_pieces = 1;\n    int vertical_pieces = 1;\n    \n   \n    vector<pair<int, char>> cuts;\n    for (int cost : horizontalCut) {\n        cuts.emplace_back(-1*cost, 'H');\n    }\n    for (int cost : verticalCut) {\n        cuts.emplace_back(-1*cost, 'V');\n    }\n    \n    sort(cuts.begin(), cuts.end());\n    \n   \n    for (auto& cut : cuts) {\n        int cost = -1*cut.first;\n        char cut_type = cut.second;\n        if (cut_type == 'H') {\n            \n            total_cost += 0LL+1LL*cost * vertical_pieces;\n            horizontal_pieces += 1;\n        } else {\n            \n            total_cost += 0LL+1LL*cost * horizontal_pieces;\n            vertical_pieces += 1;\n        }\n    }\n    \n    return total_cost;\n    }\n};",
    "submit_ts": "1720926121",
    "subm_id": "1320276639"
}