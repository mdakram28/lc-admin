{
    "username": "Hunchback5493",
    "submission": "from typing import *\nfrom collections import defaultdict\n\n\nclass Solution:\n    def minFlips(\n        self,\n        grid: List[ List[ int ] ]\n        ) -> int:\n        \n        result = 0\n        m = len( grid )\n        n = len( grid[0] )\n        \n        if m%2 and n%2:\n            \n            if grid[m//2][n//2]:\n                result += 1\n                grid[ m // 2 ][ n // 2 ] = 0\n                \n            horizontal = self.min_nb_to_get_an_array_palindrome(grid[ m//2 ] )\n            \n            vertical = self.min_nb_to_get_an_array_palindrome(\n                [\n                    grid[ i ][ n//2 ]\n                    for i in range( len( grid ) )\n                    ]\n                )\n            \n            result += vertical + horizontal\n            \n            if not vertical and not horizontal and sum( grid[ m//2 ] + [\n                    grid[ i ][ n//2 ]\n                    for i in range( len( grid ) )\n                    ] ) %4 :\n                result += 2\n                \n            \n        if m%2 and not n%2:\n            result += self.min_nb_to_get_an_array_palindrome_and_mod_4(\n                grid[ m//2 ]\n                )\n            \n        if n%2 and not m%2:\n            result += self.min_nb_to_get_an_array_palindrome_and_mod_4(\n                [\n                    grid[ i ][ n//2 ]\n                    for i in range( len( grid ) )\n                    ]\n                )\n            \n        for i in range(m//2):\n            for j in range(n//2):\n                result += 2 - abs(\n                    grid[i][j] +\n                    grid[i][-j-1]+\n                    grid[-i-1][j] +\n                    grid[-i-1][-j-1] -\n                    2\n                    )\n                \n        return result\n    \n    def min_nb_to_get_an_array_palindrome_and_mod_4(\n        self,\n        array\n        ):\n        \n        n = len( array )\n        result = 0\n        \n        for i in range( n // 2 ):\n            if array[ i ] != array[ -i - 1 ]:\n                result += 1\n        \n        if result:\n            return result\n        \n        if sum( array )%4:\n            return 2\n        \n        return 0\n    \n    def min_nb_to_get_an_array_palindrome(\n        self,\n        array\n        ):\n        \n        n = len( array )\n        result = 0\n        \n        for i in range( n // 2 ):\n            if array[ i ] != array[ -i - 1 ]:\n                result += 1\n        \n        return result\n        \n        \n        \n        ",
    "submit_ts": "1722698033",
    "subm_id": "1343167441"
}