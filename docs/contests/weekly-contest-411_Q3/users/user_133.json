{
    "username": "ddiibboo",
    "submission": "class Solution {\n    public String largestPalindrome(int n, int k) {\n        char[] ans = new char[n];\n        for (int i = 0; i < n; ++i) ans[i] = '9';\n        if (k == 1 || k == 3 || k == 9) {\n            // no-op\n        } else if (k == 2) {\n            ans[n - 1] = '8';\n            if (n > 1) ans[0] = '8';\n        } else if (k == 5) {\n            ans[n - 1] = '5';\n            if (n > 1) ans[0] = '5';\n        } else if (k == 4) {\n            if (n <= 3) Arrays.fill(ans, '8');\n            else {\n                ans[0] = ans[1] = ans[n - 1] = ans[n - 2] = '8';\n            }\n        } else if (k == 8) {\n            if (n <= 6) Arrays.fill(ans, '8');\n            else {\n                ans[0] = ans[1] = ans[2] = ans[n - 1] = ans[n - 2] = ans[n - 3] = '8';\n            }\n        } else if (k == 6) {\n            if (n <= 2) Arrays.fill(ans, '6');\n            else {\n                ans[0] = ans[n - 1] = '8';\n                if (n % 2 == 1) {\n                    ans[n / 2] = '8';\n                } else {\n                    ans[n / 2 - 1] = ans[n / 2] = '7'; \n                }\n            }\n        } else if (k == 7) {\n            if (n % 2 == 1) {\n                for (int i = 9; i >= 0; --i) {\n                    ans[n / 2] = (char) ('0' + i);\n                    if (ok7(ans)) break;\n                }\n            } else {\n                for (int i = 9; i >= 0; --i) {\n                    ans[n / 2 - 1] = ans[n / 2] = (char) ('0' + i);\n                    if (ok7(ans)) break;\n                }\n            }\n        }\n\n        return new String(ans);\n    }\n\n    private boolean ok7(char[] x) {\n        int v = 0;\n        for (char c : x) {\n            v = (v * 10 + c - '0') % 7;\n        }\n        return v == 0;\n    }\n}",
    "submit_ts": "1723950707",
    "subm_id": "1359752915"
}