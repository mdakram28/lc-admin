{
    "username": "locvb",
    "submission": "class Solution {\n    fun minFlips(grid: Array<IntArray>): Int {\n        val m = grid.lastIndex;\n        var n = grid[0].lastIndex;\n\n        var flip = 0;\n        var totalOne = 0;\n        var pairTwo = 0;\n        for (i in 0..m/2) {\n            for (j in 0..n/2) {\n                var countOne = 0;\n                if (grid[i][j] == 1) countOne++;\n                if (grid[m-i][j] == 1) countOne++;\n                if (grid[i][n - j] == 1) countOne++;\n                if (grid[m-i][n - j] == 1) countOne++;\n\n                if ((m % 2 == 0 && i * 2 == m) && (n % 2 == 0) && j * 2 == n) {\n                    if (grid[i][j] == 1) flip++;\n                }\n                else if ((m % 2 == 0 && i * 2 == m) || (n % 2 == 0) && j * 2 == n) {\n                    if (countOne % 4 != 0) {\n                        flip++;\n                        pairTwo++;\n                    }\n                    if (countOne > 0) {\n                        totalOne += 2;\n                    }\n                }\n                else {\n                    if (countOne >= 2) {\n                        totalOne += 4;\n                    }\n                    if (countOne % 4 == 2) {\n                        flip += 2;\n                    }\n                    else if (countOne % 4 != 0) {\n                        flip += 1;\n                    }\n                }\n            }\n        }\n        if (totalOne % 4 == 2) {\n            if (pairTwo != 0) return flip;\n            else return flip + 2;\n        }\n        return flip ;\n    }\n}",
    "submit_ts": "1722700175",
    "subm_id": "1343233915"
}