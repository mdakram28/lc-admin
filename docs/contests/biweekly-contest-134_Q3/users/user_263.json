{
    "username": "asrivastava05",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        int ans = 0;\n        vector<int> v;\n        for(int i = 0; i < n - 1;i++){\n            if(a[i] == a[i + 1]){\n                v.push_back(i);\n            }\n        }\n        vector<int> each(n);\n        for(int i = 0; i < n;i++){\n            int x = lower_bound(v.begin(), v.end(), i) - v.begin();\n            int cur = 0;\n            if(x == v.size()){\n                cur += n - i;\n                each[i] = cur + (a[n - 1] != a[0]?each[0]:0);\n            }else{\n                each[i] = v[x] - i + 1;\n            }\n        }\n        for(int i = 0 ; i < n;i++){\n            if(each[i] >= k) ans++;\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277712",
    "subm_id": "1311676547"
}