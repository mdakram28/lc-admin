{
    "username": "parag776",
    "submission": "class Solution {\npublic:\n    const int inf = 1e9;\n    int getAns(int is, int ie, int js, int je, vector<vector<int>> &grid){\n        int up = is;\n        int down = ie+1;\n        int left = js;\n        int right = je+1;\n        bool oneFound = false;\n        \n        for(int i=is;i<=ie;i++){\n            bool isOne = false;\n            for(int j=js;j<=je;j++){\n                isOne|=grid[i][j];\n            }\n            if(isOne) {\n                down = i+1;\n                oneFound = true;\n            }\n            if(!oneFound) up = i+1;\n        }\n        oneFound = false;\n        for(int j=js;j<=je;j++){\n            bool isOne = false;\n            for(int i=is;i<=ie;i++){\n                isOne|=grid[i][j];\n            }\n            if(isOne) {\n                right = j+1;\n                oneFound = true;\n            }\n            if(!oneFound) left = j+1;\n        }\n        return (down-up)*(right-left);\n    }\n    \n    int get(int dp[30][30][30][30][4], int is, int ie, int js, int je, int count, vector<vector<int>> &grid){\n        if(dp[is][ie][js][je][count]!=-1) return dp[is][ie][js][je][count];\n        if(count==1){\n            return getAns(is, ie, js, je, grid);\n        }\n        int curAns = inf;\n        for(int i=is;i<ie;i++){\n            if(count==2)\n            curAns = min(curAns, get(dp, is, i, js, je, 1, grid)+get(dp, i+1, ie, js, je, 1, grid));\n            if(count==3){\n                curAns = min(curAns, get(dp, is, i, js, je, 2, grid)+get(dp, i+1, ie, js, je, 1, grid));\n                curAns = min(curAns, get(dp, is, i, js, je, 1, grid)+get(dp, i+1, ie, js, je, 2, grid));\n            }\n        }\n        for(int j=js;j<je;j++){\n            if(count==2)\n            curAns = min(curAns, get(dp, is, ie, js, j, 1, grid)+get(dp, is, ie, j+1, je, 1, grid));\n            if(count==3){\n                curAns = min(curAns, get(dp, is, ie, js, j, 2, grid)+get(dp, is, ie, j+1, je, 1, grid));\n                curAns = min(curAns, get(dp, is, ie, js, j, 1, grid)+get(dp, is, ie, j+1, je, 2, grid));\n            }\n        }\n        return dp[is][ie][js][je][count] = curAns;\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        \n        int dp[30][30][30][30][4];\n        int n = grid.size();\n        int m = grid[0].size();\n        memset(dp, -1, sizeof(dp));\n        return get(dp, 0, n-1, 0, m-1, 3, grid);\n    }\n};",
    "submit_ts": 1719112424.0
}