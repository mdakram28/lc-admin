{
    "username": "parth_1818",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, int> mp;\n        \n        int p1=0,p2=nums.size()-1;\n        while(p1<p2){\n            mp[abs(nums[p1]-nums[p2])]++;\n            p1++;p2--;\n        }\n        vector<pair<int, int>> freqVec(mp.begin(), mp.end());\n        sort(freqVec.begin(), freqVec.end(), [](const pair<int, int>& a, const pair<int, int>& b) {\n            if (a.second != b.second) {\n                return a.second > b.second;  // Sort by count in descending order\n            }\n            return a.first < b.first;  // Sort by difference in ascending order\n        });\n        \n        int ans = INT_MAX;\n        int op=50;\n        for (const auto& [diff, count] : freqVec) {\n            op--;\n            if(op<=0) break;\n            int changes = 0;\n            int p1=0,p2=nums.size()-1;\n            while(p1<p2){\n                int ele=diff;\n                if(abs(nums[p1]-nums[p2])!=ele){\n                    int dp1=nums[p1];\n                    int dp2=nums[p2];\n                    if(dp1>dp2) swap(dp1,dp2);\n                    if(dp2>=ele || k-dp1>=ele) changes+=1;\n                    else changes+=2;\n                }\n                p1++;p2--;\n                // cout<<ans<<endl;\n\n            }   \n            // cout<<diff<<' '<<changes<<endl;\n            ans = min(ans, changes);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721488429",
    "subm_id": "1327421982"
}