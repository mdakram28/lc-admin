{
    "username": "Anoshor",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        //SORT both in desc order\n        sort(horizontalCut.begin(), horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(),greater<int>());\n        long long res = 0;\n        long long hor = 1; \n        long long ver = 1;  \n        \n        \n        int i = 0, j = 0;//two pointers        \n        while (i < horizontalCut.size() || j < verticalCut.size()) {\n            \n            if (i < horizontalCut.size() && (j >= verticalCut.size() || horizontalCut[i] > verticalCut[j])) {\n                res += (long long)horizontalCut[i] * (long long)ver;\n                hor++; \n                i++;\n            } else {\n                res += (long long)verticalCut[j] * (long long)hor;\n                ver++; \n                j++;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720924744",
    "subm_id": "1320229197"
}