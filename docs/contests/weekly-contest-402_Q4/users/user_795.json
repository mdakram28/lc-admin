{
    "username": "daystzh",
    "submission": "class Solution {\n    int[] c;\n    int m;\n    int n;\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        n = nums.length;\n        m = n + 4;\n        c = new int[m];\n        for(int i = 1; i < n - 1; i++) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                upd(i + 1, 1);\n            }\n        }\n        List<Integer> ans = new ArrayList<>();\n        // print();\n        for(int[] q :queries) {\n            if(q[0] == 1) {\n                int l = q[1] + 1;\n                int r = q[2] + 1;\n                ans.add(get(r) - get(l - 1) - ok(l - 1, nums) - (r != l ? ok(r - 1, nums) : 0));\n            } else {\n                int i = q[1];\n                int v = q[2];\n                cal(i, nums, -1);\n                nums[i] = v;\n                  // print();\n                cal(i, nums, 1);\n            }\n            // System.out.println(Arrays.toString(nums));\n            // print();\n        }\n        return ans;\n    }\n    \n    void cal(int i, int[] nums, int d) {\n        if(i - 2 >= 0 ) {\n            if(nums[i - 1] > nums[i - 2] && nums[i - 1] > nums[i]) {\n                upd(i, d);\n            }\n        }\n        if( i - 1>= 0 && i + 1 <n &&nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n            upd(i + 1, d);\n        }\n         if(i + 2 < n) {\n            if(nums[i + 1] > nums[i] && nums[i + 1] > nums[i + 2]) {\n                upd(i + 2, d);\n            }\n        }\n    }\n    \n    int ok(int i, int[] nums) {\n         if( i > 0 && i + 1 <n &&nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n            return 1;\n        }\n        return 0;\n    }\n    void print() {\n        for(int i = 0; i < m; i++) {\n            System.out.print(get(i) +\" \");\n        }\n        System.out.println();\n    }\n    private int lowbit(int i) {\n        return i & (-i);\n    }\n    private int get(int i) {\n        int ret = 0;\n        while(i > 0) {\n            ret += c[i];\n            i -= lowbit(i);\n        }\n        return ret;\n    }\n    private void upd(int i, int d) {\n        while(i < m) {\n            c[i] += d;\n            i += lowbit(i);\n        }\n    }\n}",
    "submit_ts": 1718507890.0
}