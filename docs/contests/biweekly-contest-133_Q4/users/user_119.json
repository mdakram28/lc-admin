{
    "username": "Shubham_INT_MAX",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int MOD = 1e9 + 7;\n\n        vector<vector<int>> dp(n + 1, vector<int>(n * (n - 1) / 2 + 1, 0));\n    dp[0][0] = 1;\n    \n    vector<int> req(n, -1);\n    for (const auto& r : requirements) {\n        req[r[0]] = r[1];\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        vector<int> prefix_sum(n * (n - 1) / 2 + 2, 0);\n        for (int k = 0; k <= n * (n - 1) / 2; ++k) {\n            prefix_sum[k + 1] = (prefix_sum[k] + dp[i - 1][k]) % MOD;\n        }\n        for (int k = 0; k <= n * (n - 1) / 2; ++k) {\n            dp[i][k] = 0;\n            if (k <= (i - 1) * i / 2) {\n                dp[i][k] = (prefix_sum[k + 1] - prefix_sum[max(0, k - (i - 1))] + MOD) % MOD;\n            }\n        }\n        if (req[i - 1] != -1) {\n            for (int k = 0; k <= n * (n - 1) / 2; ++k) {\n                if (k != req[i - 1]) {\n                    dp[i][k] = 0;\n                }\n            }\n        }\n    }\n\n    int result = 0;\n    for (int k = 0; k <= n * (n - 1) / 2; ++k) {\n        result = (result + dp[n][k]) % MOD;\n    }\n\n    return result;\n    }\n};",
    "submit_ts": 1719068493.0
}