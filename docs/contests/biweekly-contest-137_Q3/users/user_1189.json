{
    "username": "C9CQEmG9jl",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n        \n        vector<vector<long long>> topValues(numRows, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> topColumnIndices(numRows, vector<int>(3, -1));\n        \n        extractTopValues(board, topValues, topColumnIndices);\n\n      \n        return calculateMaxSum(topValues, topColumnIndices);\n    }\n\nprivate:\n    void extractTopValues(const vector<vector<int>>& board,\n                          vector<vector<long long>>& topValues,\n                          vector<vector<int>>& topColumnIndices) {\n        int numRows = board.size();\n        int numCols = board[0].size();\n\n        for (int row = 0; row < numRows; ++row) {\n            vector<pair<long long, int>> columnValues;\n            for (int col = 0; col < numCols; ++col) {\n                columnValues.emplace_back(board[row][col], col);\n            }\n            sort(columnValues.rbegin(), columnValues.rend()); \n\n            for (int k = 0; k < 3 && k < numCols; ++k) {\n                topValues[row][k] = columnValues[k].first;\n                topColumnIndices[row][k] = columnValues[k].second;\n            }\n        }\n    }\n\n    long long calculateMaxSum(const vector<vector<long long>>& topValues,  const vector<vector<int>>& topColumnIndices) {\n        int numRows = topValues.size();\n        long long maxSum = LLONG_MIN;\n\n     \n        for (int row1 = 0; row1 < numRows; ++row1) {\n            for (int row2 = row1 + 1; row2 < numRows; ++row2) {\n                for (int row3 = row2 + 1; row3 < numRows; ++row3) {\n                    for (int col1 = 0; col1 < 3; ++col1) {\n                        for (int col2 = 0; col2 < 3; ++col2) {\n                            if (topColumnIndices[row2][col2] == topColumnIndices[row1][col1]) continue;\n                            for (int col3 = 0; col3 < 3; ++col3) {\n                                if (topColumnIndices[row3][col3] == topColumnIndices[row1][col1] || \n                                    topColumnIndices[row3][col3] == topColumnIndices[row2][col2]) continue;\n\n                                long long currentSum = topValues[row1][col1] + topValues[row2][col2] + topValues[row3][col3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910371",
    "subm_id": "1359227989"
}