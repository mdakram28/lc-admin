{
    "username": "Quar",
    "submission": "from math import comb\nclass Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        \n        @cache\n        def invalid(op1, op2):\n            if op1 == 0:\n                return 0\n            \n            \n            \n        \n        ret = 0\n        \n        starting_pos = 1\n        op2 = 0\n        \n        while 2**op2 - 1 - (op2 + 1) + starting_pos <= k:            \n            if (sop2 := 2**op2 - 1 + starting_pos) >= k:                \n                op1 = sop2 - k\n                # print(op1, op2)\n                if op1 == 0 and op2 == 0:\n                    ret += 1\n                elif op1 > op2:\n                    ret += 1\n                # elif op1 == op2:\n                #     ret += 2\n                else:\n                    ret += comb(op2 + 1, op1)\n            op2 += 1\n        # print('-' * 10)\n        \n        return ret\n",
    "submit_ts": "1716089741",
    "subm_id": "1261850116"
}