{
    "username": "eliteCoder26",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int ans=0;\n        int m = g.size(),n=g[0].size();\n        int r = (m/2)-1,c=(n/2)-1;\n        for(int i=0;i<=r;i++){\n            for(int j=0;j<=c;j++){\n                vector<int> val = {g[i][j],g[i][n-1-j],g[m-1-i][j],g[m-1-i][n-1-j]};\n                int ones = count(val.begin(),val.end(),1);\n                int zeros = count(val.begin(),val.end(),0);\n                if(ones==0 || zeros==0)continue;\n                ans+=min(zeros,ones);\n            }\n        }\n        \n        // cout<<ans<<endl;\n        \n//         //if rows are odd \n//         if(m%2==1){\n//             int idx = m/2;\n//             int c = (n/2) - 1;\n//             int ones=0,zeros=0;\n//             for(int j=0;j<=c;j++){\n//                 ones+=g[idx][j]==1;\n//                 zeros+=g[idx][j]==0;\n//             }\n//             if(ones%2==0){//even number of ones then ok\n//                 int l=0,r=n-1;\n//                 while(l<r){\n//                     if(g[idx][l]!=g[idx][r])ans++;\n//                     l++;r--;\n//                 }\n//             }\n//             else{\n//                 vector<pair<int,int>> v;\n//                 int l =0,r=n-1;\n//                 int temp_ans=0;\n//                 while(l<r){\n//                     v.push_back(make_pair(g[idx][l],g[idx][r]));\n//                     if(g[idx][l]!=g[idx][r])temp_ans++;\n//                     l++;r--;\n//                 }\n//                 if(find(v.begin(),v.end(),make_pair(0,1))!=v.end() || find(v.begin(),v.end(),make_pair(1,0))!=v.end()){\n//                 }\n//                 else{\n//                     temp_ans+=2;\n//                 }\n//                 ans+=temp_ans;\n//             }\n//         }\n        \n//         // cout<<\"hello\"<<endl;\n        \n//         //if cols are odd\n        \n//         if(n%2==1){\n//             int idx = n/2;\n//             // cout<<\"idx\"<<idx<<endl;\n//             int c = (m/2) - 1;\n//             int ones=0,zeros=0;\n//             for(int j=0;j<=c;j++){\n//                 ones+=(g[j][idx]==1);\n//                 zeros+=(g[j][idx]==0);\n//             }\n//             // cout<<ones<<\" \"<<zeros<<endl;\n//             // cout<<\"h\"<<endl;\n//             if(ones%2==0){//even number of ones then ok\n//                 int l=0,r=m-1;\n//                 while(l<r){\n//                     if(g[l][idx]!=g[r][idx])ans++;\n//                     l++;r--;\n//                 }\n//                 // cout<<ans<<endl;\n//             }\n//             else{\n//                 //we can convert one 0 to 1 \n//                 vector<pair<int,int>> v;\n//                 int l =0,r=m-1;\n//                 int temp_ans=0;\n//                 while(l<r){\n//                     v.push_back(make_pair(g[l][idx],g[r][idx]));\n//                     if(g[l][idx]!=g[r][idx])temp_ans++;\n//                     l++;r--;\n//                 }\n//                 if(find(v.begin(),v.end(),make_pair(0,1))!=v.end() || find(v.begin(),v.end(),make_pair(1,0))!=v.end()){\n//                 }\n//                 else{\n//                     temp_ans+=2;\n//                 }\n//                 ans+=temp_ans;\n//             }   \n//          // cout<<\"h\"<<endl;   \n//         }\n        \n        map<pair<int,int>,int> mp;\n        int temp_ans=0;\n        if(m%2==1){//rows are odd\n            int l=0,r=n-1,idx=m/2;\n            while(l<r){\n                mp[make_pair(g[idx][l],g[idx][r])]++;\n                if(g[idx][l]!=g[idx][r])temp_ans++;\n                l++;r--;\n            }\n        }\n        if(n%2==1){//rows are odd\n            int l=0,r=m-1,idx=n/2;\n            while(l<r){\n                mp[make_pair(g[l][idx],g[r][idx])]++;\n                if(g[l][idx]!=g[r][idx])temp_ans++;\n                l++;r--;\n            }\n        }\n        \n        if(mp[make_pair(1,1)]%2==1){\n            if(mp[make_pair(0,1)]>0 || mp[make_pair(1,0)]>0);\n            else temp_ans+=2;\n        }\n        ans+=temp_ans;\n        if(m%2==1 && n%2==1)ans+=(g[m/2][n/2]==1);    \n        return ans;\n    }\n};",
    "submit_ts": "1722699335",
    "subm_id": "1343208519"
}