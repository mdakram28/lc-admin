{
    "username": "SAIVARUN_GAJULA",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int x= n/2;\n        int y= m/2;\n        int ans=0;\n        for(int i=0;i<x;i++){\n            for(int j=0;j<y;j++){\n                int one=0;int zero=0;\n                one+=grid[i][j];\n                one+= grid[n-i-1][j];\n                one+= grid[i][m-j-1] + grid[n-i-1][m-j-1];\n                if(one ==1 || one==3){\n                    ans+=1;\n                }   \n                else if(one==2){\n                    ans+=2;\n                }\n            }\n        }\n        if(n%2 && m%2){\n            int curx= n/2;int cury = m/2;\n            int fullone=0;int partialone=0;\n            for(int j=0;j<m/2;j++){\n                if(grid[curx][j]==1){\n                    if(grid[curx][m-j-1]==1){\n                        fullone+=1;\n                    }\n                    else{\n                        partialone+=1;\n                    }\n                }\n                else {\n                    if(grid[curx][m-j-1]==1){\n                        partialone+=1;\n                    }\n                }\n            }\n            for(int i=0;i<n/2;i++){\n                if(grid[i][cury]==1){\n                    if(grid[n-i-1][cury]==1){\n                        fullone+=1;\n                    }\n                    else{\n                        partialone+=1;\n                    }\n                }\n                else {\n                    if(grid[n-i-1][cury]==1){\n                        partialone+=1;\n                    }\n                }\n            }\n             ans+=partialone;\n            if(fullone %2){\n                if(!partialone)ans+=2;\n            }\n            if(grid[n/2][m/2]==1)ans++;\n        }\n        else if(n%2){\n            int curx= n/2;\n            int fullone=0;int partialone=0;\n            for(int j=0;j<m/2;j++){\n                if(grid[curx][j]==1){\n                    if(grid[curx][m-j-1]==1){\n                        fullone+=1;\n                    }\n                    else{\n                        partialone+=1;\n                    }\n                }\n                else {\n                    if(grid[curx][m-j-1]==1){\n                        partialone+=1;\n                    }\n                }\n            }\n            ans+=partialone;\n            if(fullone %2){\n                if(!partialone)ans+=2;\n            }\n        }\n        else if(m%2){\n            int cury = m/2;\n            int fullone=0;int partialone=0;\n            for(int i=0;i<n/2;i++){\n                if(grid[i][cury]==1){\n                    if(grid[n-i-1][cury]==1){\n                        fullone+=1;\n                    }\n                    else{\n                        partialone+=1;\n                    }\n                }\n                else {\n                    if(grid[n-i-1][cury]==1){\n                        partialone+=1;\n                    }\n                }\n            }\n            ans+=partialone;\n            if(fullone %2){\n                if(!partialone)ans+=2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697453",
    "subm_id": "1343147089"
}