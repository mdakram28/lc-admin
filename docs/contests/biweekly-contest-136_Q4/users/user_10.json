{
    "username": "tsreaper",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<int> e[n];\n        for (auto &edge : edges) {\n            e[edge[0]].push_back(edge[1]);\n            e[edge[1]].push_back(edge[0]);\n        }\n\n        int f[n];\n        auto dfs1 = [&](auto &&self, int sn, int fa) -> int {\n            f[sn] = 0;\n            for (int fn : e[sn]) if (fn != fa) {\n                int t = self(self, fn, sn) + (fn & 1 ? 1 : 2);\n                f[sn] = max(f[sn], t);\n            }\n            return f[sn];\n        };\n        dfs1(dfs1, 0, -1);\n\n        vector<int> ans(n);\n        auto dfs2 = [&](auto &&self, int sn, int fa, int fv) -> void {\n            ans[sn] = max(fv, f[sn]);\n            int mx1 = -1, fn1 = -1, mx2 = -1, fn2 = -1;\n            for (int fn : e[sn]) if (fn != fa) {\n                int t = f[fn] + (fn & 1 ? 1 : 2);\n                if (t > mx1) fn2 = fn1, mx2 = mx1, fn1 = fn, mx1 = t;\n                else if (t > mx2) fn2 = fn, mx2 = t;\n            }\n            for (int fn : e[sn]) if (fn != fa) {\n                int t;\n                if (fn == fn1) t = max(fv, mx2);\n                else t = max(fv, mx1);\n                self(self, fn, sn, t + (sn & 1 ? 1 : 2));\n            }\n        };\n        dfs2(dfs2, 0, -1, 0);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722696935",
    "subm_id": "552263606"
}