{
    "username": "vineethr_2004",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        int m = grid.size();\n        int n = grid[0].size();\n        //cout<<m<<n;\n        \n        if((m & 1) && (n & 1) && grid[m / 2][n / 2])ans++;\n        int ch = 0;\n        int val = 0;\n\n        if(m & 1){\n            for(int i = 0; i < n / 2; i++){\n                val += grid[m / 2][i] ^ grid[m / 2][n - i - 1];\n                ch += grid[m / 2][i] & grid[m / 2][n - i - 1];\n            }\n        }\n        if(n & 1){\n            for(int i = 0; i < m / 2; i++){\n                val += grid[i][n / 2] ^ grid[m - i - 1][n / 2];\n                ch += grid[i][n / 2] & grid[m - i - 1][n / 2];\n            }\n        }\n        if(!(ch & 1))ans += val;\n        else{\n            if(val != 0)ans += val;\n            else ans += val + 2;\n        }\n        for(int i = 0; i < m / 2; i++){\n            for(int j = 0; j < n / 2; j++){\n                int tmp = (grid[i][j] ^ grid[m - i - 1][j] ^ grid[m - i - 1][n - j - 1] ^ grid[i][n - j - 1]);\n                if(tmp == 1)ans++;\n                else{\n                    if(!(grid[i][j] == grid[m - i - 1][j] && grid[i][j] == grid[m - i - 1][n - j - 1] && grid[i][j] == grid[i][n - j - 1]))ans += 2;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699279",
    "subm_id": "1343206847"
}