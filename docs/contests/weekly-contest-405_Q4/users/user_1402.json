{
    "username": "geekygirl76",
    "submission": "class Solution {\n    Integer[] memo;\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int n = words.length;\n        memo = new Integer[target.length()];\n        TrieNode root = new TrieNode();\n        for (int i = 0; i < n; i++){\n            insert(root, words[i], costs[i]);\n        }\n        return helper(target, root, 0);\n    }\n    \n    private int helper(String target, TrieNode root, int idx){\n        if (idx == target.length()) return 0;\n        if (memo[idx] != null) return memo[idx];\n        TrieNode node = root;\n        int minCost = Integer.MAX_VALUE;\n        for (int i = idx; i < target.length(); i++){\n            char c = target.charAt(i);\n            if (node.children[c - 'a'] == null) break;\n            node = node.children[c - 'a'];\n            if (node.cost == -1) continue;\n            int nextResult = helper(target, root, i + 1);\n            if (nextResult == -1) continue;\n            minCost = Math.min(minCost, node.cost + nextResult);\n        }\n        memo[idx] = minCost == Integer.MAX_VALUE ? -1 : minCost;\n        return memo[idx];\n    }\n    \n    private void insert(TrieNode node, String word, int cost){\n        for (int i = 0; i < word.length(); i++){\n            char c = word.charAt(i);\n            if (node.children[c - 'a'] == null) node.children[c - 'a'] = new TrieNode();\n            node = node.children[c - 'a'];\n        }\n        if (node.cost == -1 || cost < node.cost) node.cost = cost;\n    }\n    \n    class TrieNode {\n        int cost = -1;\n        TrieNode[] children = new TrieNode[26];\n    }\n}",
    "submit_ts": "1720323498",
    "subm_id": "1312377061"
}