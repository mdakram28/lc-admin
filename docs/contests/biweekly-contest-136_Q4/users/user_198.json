{
    "username": "LittleXi",
    "submission": "#include<vector>\n#include<iostream>\n#include<bits/stdc++.h>\n#include<set>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<vector<int>> adj,tm;\n    vector<int> ans,vis;\n    int dfs1(int r){\n        int t = 0;\n        for(int i =0 ;i<adj[r].size();i++){\n            int tox = adj[r][i];\n            if(vis[tox]) continue;\n            vis[tox] = 1;\n            int gt = dfs1(tox) + 1 + (tox%2==0);\n            tm[r][i] = gt;\n            t = max(t , gt);\n        }\n        return t;\n    }\n    \n    void dfs2(int r,int fw){\n        ans[r] = max(ans[r],fw);\n        multiset<int> se;\n        se.insert(fw);\n        for(int i =0;i<adj[r].size();i++){\n            int tox = adj[r][i];\n            if(vis[tox]) continue;\n            ans[r] = max(ans[r],tm[r][i]);\n            se.insert(tm[r][i]);\n        }\n\n        for(int i =0;i<adj[r].size();i++){\n            int tox = adj[r][i];\n            if(vis[tox]) continue;\n            vis[tox] = 1;\n            se.erase(se.find(tm[r][i]));\n            int bg = *prev(se.end());\n            bg += 1 + (r%2==0);\n            dfs2(tox,bg);\n            se.insert(tm[r][i]);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        adj  = vector<vector<int>>(n);\n        for(auto v:edges){\n            int l = v[0] , r = v[1];\n            adj[l].push_back(r);adj[r].push_back(l);\n        }\n        tm = adj;\n        ans = vis = vector<int> (n,0); vis[0] = 1;\n        ans[0] = dfs1(0);\n        vis = vector<int> (n,0);vis[0] = 1;\n        dfs2(0,0);\n        return ans;\n    }\n};",
    "submit_ts": "1722697957",
    "subm_id": "552268648"
}