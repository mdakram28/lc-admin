{
    "username": "amanbaluni1234",
    "submission": "// Author - Aman Baluni\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n/* TYPES */\n#define ll long long \n#define ull unsigned long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vii vector<vector<int>>\n#define vll vector<long long>\n#define vs vector<string>\n#define vc vector<char>\n#define vss vector<vector<string>>\n#define vii vector<vector<int>>\n#define vlll vector<vector<long long>>\n#define vcc vector<vector<char>>\n#define mii map<int, int>\n#define umii unordered_map<int, int>\n// #define mcc map<int, int>\n#define si set<int>\n#define sc set<char>\n#define nl endl\n\n/* CONSTANTS */\n// const double PI = 3.14159265358979323846264338327950;\n// const ll MOD = 1000000007;\n\n/* FUNCTIONS */\n#define pb push_back\n#define eb emplace_back\n#define slen(s) s.length()\n#define ssize(arr) arr.size()\n#define srt(arr) sort(arr.begin(), arr.end())\n#define srtr(arr) sort(arr.rbegin(), arr.rend())\n#define rev(arr) reverse(arr.begin(), arr.end())\n#define read(arr, n) for(ll i = 0; i < n; i++) cin >> arr[i]\n#define loop(i, s, e) for(ll i = s; i < e; i++)\n#define cf(i, s, e) for(ll i = s; i <= e; i++)\n#define revloop(i, e, s) for(ll i = e-1; i >= s; i--)\n#define pre_sum(pre, arr, n) for(ll i = 1; i < n; i++) pre[i] = pre[i-1] + arr[i]\n#define suf_sum(suf, arr, n) for(ll i = n-2; i >= 0; i--) suf[i] = suf[i+1] + arr[i]\n\n/* MATH FUNCTIONS */\nll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b); }\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\nll min(ll a, int b) { return (a < b) ? a : b; }\nll min(int a, ll b) { return (a < b) ? a : b; }\nll max(ll a, int b) { return (a > b) ? a : b; }\nll max(int a, ll b) { return (a > b) ? a : b; }\n\n/* STRING FUNCTIONS */\nstring to_upper(string a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'a' && a[i] <= 'z') a[i] -= 'a' - 'A'; return a; }\nstring to_lower(string a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'A' && a[i] <= 'Z') a[i] += 'a' - 'A'; return a; }\n\n/* PRIME CHECK */\nbool prime(ll a) { if (a == 1) return false; for (int i = 2; i <= round(sqrt(a)); ++i) if (a % i == 0) return false; return true; }\n\n/* PRINT FUNCTIONS */\ntemplate <class T>\nvoid print_v(vector<T> &v) { cout << \"{\"; for (auto x : v) cout << x << \",\"; cout << \"\\b}\"; }\n\n/* YES/NO OUTPUT */\nvoid yes() { cout << \"YES\\n\"; }\nvoid no() { cout << \"NO\\n\"; }\n// const int INF=LLONG_MAX;\n\nconst int MOD = 1'000'000'007;\nconst int MAX_INVERSIONS = 400;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, std::vector<std::vector<int>>& requirements) {\n        umii mp;\n        for (const auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        std::vector<vll> perm_counts(n + 1, vll(MAX_INVERSIONS + 1, 0));\n        perm_counts[0][0] = 1;\n\n        for (int length = 1; length <= n; ++length) {\n            for (int inv = 0; inv <= MAX_INVERSIONS; ++inv) {\n                for (int newPos = 0; newPos < length; ++newPos) {\n                    int prev_inv = inv - newPos;\n                    if (prev_inv >= 0) {\n                        perm_counts[length][inv] = (perm_counts[length][inv] + perm_counts[length - 1][prev_inv]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.find(length) != mp.end()) {\n                int target_inv = mp[length];\n                for (int inv = 0; inv <= MAX_INVERSIONS; ++inv) {\n                    if (inv != target_inv) {\n                        perm_counts[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long ans = 0;\n        for (long long count : perm_counts[n]) ans = (ans + count) % MOD;\n\n\n        return static_cast<int>(ans);\n    }\n};\n",
    "submit_ts": 1719070706.0
}