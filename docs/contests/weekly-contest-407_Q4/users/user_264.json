{
    "username": "lydxlx",
    "submission": "import bisect\nfrom typing import *\nfrom functools import *\nfrom collections import namedtuple\nfrom sortedcontainers import SortedList, SortedDict\nfrom collections import Counter\nfrom math import inf\nfrom math import gcd\nimport string\nimport random\nimport itertools\nimport random\n\n\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        A = [0] + [nums[i] - target[i] for i in range(len(nums))]\n        if set(A) == {0}:\n            return 0\n\n        B = [A[i] - A[i - 1] for i in range(1, len(A))]\n        pos = sum(i for i in B if i > 0)\n        neg = sum(i for i in B if i < 0)\n        return max(pos, -neg)\n\n\nsolution = Solution()\nprint(solution.minimumOperations(nums = [3,5,1,2], target = [4,6,2,4]))\nprint(solution.minimumOperations(nums = [1,3,2], target = [2,1,4]))\n",
    "submit_ts": "1721530674",
    "subm_id": "1327940539"
}