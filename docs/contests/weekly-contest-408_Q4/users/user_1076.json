{
    "username": "ankan10",
    "submission": "class Solution {\n    private boolean isTheCircleInContact(int[] point1, int[] point2){\n        int x1 = point1[0], y1 = point1[1], r1 = point1[2];\n        int x2 = point2[0], y2 = point2[1], r2 = point2[2];\n        double d = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n        if (d <= r1 - r2) {\n            return true;\n        }\n        else if (d <= r2 - r1) {\n            return true;\n        }\n        else if (d < r1 + r2) {\n            return true;\n        }\n        else if (d == r1 + r2) {\n            return true;\n        }\n        return false;\n    }\n    \n    private boolean doesTouchY(int source, boolean[] touchesY, Boolean[] noPath, List<Integer>[] adj){\n        if(touchesY[source]){\n            noPath[source] = true;\n            return true;\n        }\n        if(noPath[source] != null){\n            return noPath[source];\n        }\n        \n        noPath[source] = false;\n        for(int e: adj[source]){\n            if(doesTouchY(e, touchesY, noPath, adj)){\n                noPath[source] = true;\n            }\n        }\n        \n        return noPath[source];\n    }\n\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int circlesCount = circles.length;\n        List<Integer>[] adj = new ArrayList[circlesCount + 1];\n        for(int i = 0; i < circlesCount; i++){\n            adj[i] = new ArrayList<>();\n        }\n        boolean[] circleInContactWithY = new boolean[circlesCount];\n        boolean[] circleInContactWithX = new boolean[circlesCount];\n        boolean[] circleInContactWithRectangleX = new boolean[circlesCount];\n        boolean[] circleInContactWithRectangleY = new boolean[circlesCount];\n\n        for(int i = 0; i < circlesCount; i++){\n            for(int j = 0; j < circlesCount; j++){\n                if(i == j) continue;\n                if(isTheCircleInContact(circles[i], circles[j])){\n                    adj[i].add(j);\n                }\n            }\n            if(circles[i][0] - circles[i][2] <= 0){\n                circleInContactWithX[i] = true;\n            }\n            if(circles[i][1] - circles[i][2] <= 0){\n                circleInContactWithY[i] = true;\n            }\n            \n            if(circles[i][0] - circles[i][2] <= X && circles[i][0] + circles[i][2] >= X){\n                circleInContactWithRectangleX[i] = true;\n            }\n            if(circles[i][1] - circles[i][2] <= Y && circles[i][1] + circles[i][2] >= Y){\n                circleInContactWithRectangleY[i] = true;\n            }\n            \n            if(circleInContactWithRectangleX[i] && circleInContactWithRectangleY[i]) return false;\n        }\n        Boolean[] touchesBothXAndY = new Boolean[circlesCount];\n        Boolean[] touchesRectangleX = new Boolean[circlesCount];\n        Boolean[] touchesRectangleY = new Boolean[circlesCount];\n        Boolean[] touchesRectangleXandY = new Boolean[circlesCount];\n        for(int i = 0; i < circlesCount; i+=1){\n            if(circleInContactWithX[i]){\n                if(doesTouchY(i, circleInContactWithY, touchesBothXAndY, adj)){\n                    return false;\n                }\n                if(doesTouchY(i, circleInContactWithRectangleX, touchesRectangleX, adj)){\n                    return false;\n                }\n            }\n            if(circleInContactWithY[i]){\n                if(doesTouchY(i, circleInContactWithRectangleY, touchesRectangleY, adj)){\n                    return false;\n                }\n            }\n            \n            if(circleInContactWithRectangleX[i]){\n                if(doesTouchY(i, circleInContactWithRectangleY, touchesRectangleXandY, adj)){\n                    return false;\n                }\n            }\n        }\n        \n        return true;\n    }\n}\n/*\n5\n8\n[[4,7,1]]\n*/",
    "submit_ts": "1722139125",
    "subm_id": "1335808522"
}