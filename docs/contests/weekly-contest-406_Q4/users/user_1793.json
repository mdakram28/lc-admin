{
    "username": "NamanGokhru",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int cnth = 1 , cntv = 1 ; \n        priority_queue < int > h , v ; \n        for(int i = 0 ; i < m-1 ; i++)h.push(horizontalCut[i]) ;     \n        for(int i = 0 ; i < n-1 ; i++)v.push(verticalCut[i]) ; \n         long long  ans = 0 ; \n        while(h.size() > 0 or v.size() > 0){\n          // if both are not empty\n            if(h.size() > 0 and v.size() > 0){\n               if(h.top() > v.top()){\n                    ans += cnth*h.top() ; \n                    h.pop() ; \n                    cntv++ ; \n               }\n               else{\n                    ans += cntv*v.top() ; \n                    v.pop() ; \n                   cnth++ ; \n               }\n            }\n            else if(h.size() == 0){\n                 ans += cntv*v.top() ; \n                v.pop() ; \n            }\n            else{\n                 ans += cnth*h.top(); \n                 h.pop() ; \n            }\n        }\n        \n        return ans ; \n    }\n};",
    "submit_ts": "1720926159",
    "subm_id": "1320277713"
}