{
    "username": "at_coder_himanshu",
    "submission": "\nclass Solution {\npublic:\n    struct Node {\n        Node* links[26];\n        vector<pair<int, int>> wordEnds; \n        bool check(char c){\n            return links[c-'a']!=NULL;\n        }\n    };\n\n    class Trie {\n    public:\n        Node* root;\n        Trie() { root = new Node(); }\n\n        void insert(string& word, int a, int b) {\n            Node* node = root;\n            for (char c : word) {\n                if (!(node->check(c)))\n                    node->links[c-'a'] = new Node();\n                node = node->links[c-'a'];\n            }\n            node->wordEnds.push_back({a, b});\n        }\n    };\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n + 1, 1e9);\n        dp[0] = 0;\n\n        Trie trie;\n        for (int i = 0; i < words.size(); ++i) {\n            trie.insert(words[i], i, costs[i]);\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i] == 1e9) continue;\n\n            Node* node = trie.root;\n            for (int j = i; j < n; ++j) {\n                if (!node->links[target[j]-'a']) break;\n                node = node->links[target[j]-'a'];\n                for (auto& p : node->wordEnds) {\n                    int wi = p.first;\n                    int wc = p.second;\n                    int l = words[wi].size();\n                    if (i + l <= n) {\n                        dp[i + l] = min(dp[i + l], dp[i] + wc);\n                    }\n                }\n            }\n        }\n\n        return dp[n] == 1e9 ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720323384",
    "subm_id": "1312374226"
}