{
    "username": "faulea",
    "submission": "class Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<long long> tree(n + 1, 0);\n        vector<int> isp(n, 0);\n        auto lowbit = [&](int x) {\n            return x & -x;\n        };\n\n        auto add = [&](int x, int v) {\n            while (x <= n) {\n                tree[x] += v;\n                x += lowbit(x);\n            }\n        };\n\n        auto get = [&](int x) {\n            long long ret = 0;\n            while (x > 0) {\n                ret += tree[x];\n                x -= lowbit(x);\n            }\n            return ret;\n        };\n\n        for (int i = 1; i < n - 1; ++i) {\n            if (nums[i] > nums[i-1] && nums[i] > nums[i+1]) {\n                isp[i] = 1;\n                add(++i, 1);\n            }\n        }\n        vector<int> ans;\n        for (const auto& q : queries) {\n            if (q[0] == 1) {\n                int l = q[1], r = q[2];\n                if (r - l < 2) {\n                    ans.emplace_back(0);\n                } else {\n                    ans.emplace_back(get(q[2]) - get(q[1]+1));\n                }\n            } else {\n                int idx = q[1];\n                nums[idx] = q[2];\n                if (isp[idx]) {\n                    if (nums[idx-1] >= nums[idx] || nums[idx+1] >= nums[idx]) {\n                        isp[idx] = 0;\n                        add(idx + 1, -1);\n                    }\n                } else {\n                    if (idx > 0 && idx < n - 1 && nums[idx] > nums[idx-1] && nums[idx] > nums[idx+1]) {\n                        isp[idx] = 1;\n                        add(idx+1, 1);\n                    }\n                }\n                if (idx > 1) {\n                    if (!isp[idx-1] && nums[idx-1] > nums[idx-2] && nums[idx-1] > nums[idx]) {\n                        isp[idx-1] = 1;\n                        add(idx, 1);\n                    } else if (isp[idx-1] && nums[idx-1] <= nums[idx]) {\n                        isp[idx-1] = 0;\n                        add(idx, -1);\n                    }\n                }\n                if (idx < n - 2) {\n                    if (!isp[idx+1] && nums[idx+1] > nums[idx+2] && nums[idx+1] > nums[idx]) {\n                        isp[idx+1] = 1;\n                        add(idx+2, 1);\n                    } else if (isp[idx+1] && nums[idx+1] <= nums[idx]) {\n                        isp[idx+1] = 0;\n                        add(idx+2, -1);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508621.0
}