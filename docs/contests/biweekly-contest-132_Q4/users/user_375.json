{
    "username": "21r01a05k7",
    "submission": "class Solution {\n    public int maximumLength(int[] nums, int k) {\n         int sIze = nums.length;\n        int[][] pOwerUps = new int[sIze][k + 1];\n        for (int[] row : pOwerUps) {\n            Arrays.fill(row, 1);\n        }\n        int maxScore = 1;\n        int[] maxScores = new int[k + 1];\n        Arrays.fill(maxScores, -1);\n        List<Map<Integer, Integer>> itemToPowerUpMap = new ArrayList<>();\n        for (int i = 0; i <= k; ++i) {\n            itemToPowerUpMap.add(new HashMap<>());\n        }\n\n        for (int pLayer = 0; pLayer < sIze; pLayer++) {\n            for (int lEvel = 0; lEvel <= k; lEvel++) {\n                for (int qUest = 0; qUest < lEvel; qUest++) {\n                    pOwerUps[pLayer][lEvel] = Math.max(pOwerUps[pLayer][lEvel], 1 + maxScores[qUest]);\n                }\n\n                if (itemToPowerUpMap.get(lEvel).containsKey(nums[pLayer])) {\n                    pOwerUps[pLayer][lEvel] = Math.max(pOwerUps[pLayer][lEvel], 1 + itemToPowerUpMap.get(lEvel).get(nums[pLayer]));\n                }\n\n                maxScore = Math.max(maxScore, pOwerUps[pLayer][lEvel]);\n            }\n\n            for (int lEvel = 0; lEvel <= k; lEvel++) {\n                maxScores[lEvel] = Math.max(maxScores[lEvel], pOwerUps[pLayer][lEvel]);\n                itemToPowerUpMap.get(lEvel).put(nums[pLayer], Math.max(itemToPowerUpMap.get(lEvel).getOrDefault(nums[pLayer], 0), pOwerUps[pLayer][lEvel]));\n            }\n        }\n\n        return maxScore;\n    }\n}",
    "submit_ts": 1717862269.0
}