{
    "username": "shepherd_a",
    "submission": "import math\n\ndef does_intersect(circle_one, circle_two):\n    x1,y1,r1 = circle_one\n    x2,y2,r2 = circle_two\n    d = math.sqrt((x1-x2)**2 + (y1-y2)**2)\n    return d <= (r1 + r2)\n\ndef contains_point(circle, x, y):\n    x1,y1,r1 = circle\n    d = math.sqrt((x1-x)**2 + (y1-y)**2)\n    return d <= r1\n\nclass Solution:\n\n\n    def canReachCorner(self, X: int, Y: int, circles: list[list[int]]) -> bool:\n        intersecting_sets = []\n        for c in circles:\n            if contains_point(c, 0, 0):\n                return False\n            if contains_point(c, X, Y):\n                return False\n            intersecting_indexes = []\n            for i,s in enumerate(intersecting_sets):\n                for c2 in s:\n                    if does_intersect(c, c2):\n                        intersecting_indexes.append(i)\n                        break\n            if (len(intersecting_indexes)):\n                while(len(intersecting_indexes) > 1):\n                    i = intersecting_indexes.pop()\n                    intersecting_sets[intersecting_indexes[0]].extend(intersecting_sets[i])\n                    del intersecting_sets[i]\n                intersecting_sets[intersecting_indexes[0]].append(c)\n            else:\n                intersecting_sets.append([c])\n        for s in intersecting_sets:\n            intersect_left = False\n            intersect_right = False\n            interset_bottom = False\n            intersect_top = False\n            for cX, cY, r in s:\n                if r >= abs(cX):\n                    intersect_left = True\n                if r >= abs(X - cX):\n                    intersect_right = True\n                if r >= abs(cY):\n                    interset_bottom = True\n                if r >= abs(Y - cY):\n                    intersect_top = True\n            if intersect_left and intersect_right:\n                return False\n            if intersect_top and interset_bottom:\n                return False\n            if intersect_top and intersect_right:\n                return False\n            if intersect_left and interset_bottom:\n                return False\n        return True\n\n        \n",
    "submit_ts": "1722138717",
    "subm_id": "1335797866"
}