{
    "username": "feibonaqixu",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        \n        // Initialize dp table\n        vector<vector<int>> dp(n, vector<int>(51, 0));\n        \n        // Base case\n        for (int x = 0; x <= nums[0]; ++x) {\n            dp[0][x] = 1;\n        }\n        \n        // Fill dp table\n        for (int i = 1; i < n; ++i) {\n            vector<int> prefixSum(51, 0);\n            vector<int> corY(51,-1);\n            vector<int> corX(51,-1);\n            for (int x = 0; x <= 50; ++x) {\n                auto sum = nums[i-1];\n                auto y = sum - x;\n                if (y < 0) continue;\n                corY[x] = y;\n                corX[y] = x;\n                prefixSum[x] = (x == 0 ? dp[i-1][x] : (prefixSum[x-1] + dp[i-1][x]) % MOD);\n            }\n            \n            for (int x = 0; x <= nums[i]; ++x) {\n                int y = nums[i] - x;\n                if (corX[y] == -1) continue;\n                if (y <= 50){\n                    dp[i][x] = prefixSum[min(corX[y], x)];\n                }\n            }\n        }\n        \n        // Calculate result\n        int result = 0;\n        for (int x = 0; x <= 50; ++x) {\n            result = (result + dp[n-1][x]) % MOD;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1723346758",
    "subm_id": "1351584526"
}