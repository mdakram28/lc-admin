{
    "username": "Fasdr",
    "submission": "class Solution {\n    public int countOfPairs(int[] nums) {\n        // O(n * m)\n        int mod = 1_000_000_007;\n        int n = nums.length;\n        int m = 0;\n        for (int num : nums) {\n            m = Math.max(m, num);\n        }\n        int[][] dp = new int[n][m + 1];\n        for (int first = 0; first <= nums[n - 1]; first++) {\n            dp[n - 1][first] = 1;\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            // set bound for zero\n            int currentSum = 0;\n            int start = Math.max(0, nums[i + 1] - nums[i]);\n            for (int nextFirst = start; nextFirst <= nums[i + 1]; nextFirst++) {\n                currentSum = (currentSum + dp[i + 1][nextFirst]) % mod;\n            }\n            dp[i][0] = currentSum;\n            int toRemove = start;\n            for (int first = 1; first <= nums[i]; first++) {\n                // remove first\n                if (toRemove <= m) {\n                    currentSum = (currentSum - dp[i + 1][toRemove] + mod) % mod;\n                }\n                toRemove++;\n                dp[i][first] = currentSum;\n            }\n        }\n\n        \n        int res = 0;\n        for (int first = 0; first <= nums[0]; first++) {\n            res = (res + dp[0][first]) % mod;\n        }\n        return res;\n    }\n}\n\n",
    "submit_ts": "1723346566",
    "subm_id": "1351580363"
}