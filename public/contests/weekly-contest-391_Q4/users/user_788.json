{
    "username": "definitelynotmee",
    "submission": "#include<bits/stdc++.h>\n#define all(x) x.begin(), x.end()\n#define ff first\n#define ss second\n#define O_O\nusing namespace std;\ntemplate <typename T>\nusing bstring = basic_string<T>;\ntemplate <typename T>\nusing matrix = vector<vector<T>>;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef double dbl;\ntypedef long double dbll; \nconst ll INFL = 4e18+25;\nconst int INF = 1e9+42;\nconst double EPS = 1e-7;\nconst int MOD = (1<<23)*17*7 + 1; // 998244353\nconst int RANDOM = chrono::high_resolution_clock::now().time_since_epoch().count();\nconst int MAXN = 1e6+1;\n\ninline int getd1(pii point){\n    return point.ff;\n};\n\ninline int getd2(pii point){\n    return point.ss;\n};\n\nint get_resp(vector<pii>& v, vector<int> & d1, vector<int> & d2, int erase){\n    int ret = 0;\n    \n    int n = v.size();\n    \n    int l = 0, r = n-1;\n    \n    if(d1[l] == erase)\n        l++;\n    if(d1[r] == erase)\n        r--;\n\n    ret = getd1(v[d1[r]]) - getd1(v[d1[l]]);\n    \n    l = 0, r = n-1;\n    \n    if(d2[l] == erase)\n        l++;\n    if(d2[r] == erase)\n        r--;\n    \n    return max(ret, getd2(v[d2[r]]) - getd2(v[d2[l]]));\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        \n        vector<pii> v(n);\n        \n        for(int i = 0; i < n; i++)\n            v[i] = {points[i][0]+points[i][1], points[i][0]-points[i][1]};\n        \n        vector<int> d1(n), d2(n);\n        \n        iota(all(d1),0), iota(all(d2),0);\n        \n        \n        \n        sort(all(d1),[&](int a, int b){\n            return getd1(v[a]) < getd1(v[b]);\n        });\n        sort(all(d2),[&](int a, int b){\n            return getd2(v[a]) < getd2(v[b]);\n        });\n        \n        int resp = INF;\n        \n        \n        resp = min(resp,get_resp(v,d1,d2,d1[0]));\n        resp = min(resp,get_resp(v,d1,d2,d1.back()));\n        resp = min(resp,get_resp(v,d1,d2,d2[0]));\n        resp = min(resp,get_resp(v,d1,d2,d2.back()));\n        return resp;\n        \n        \n        return resp;\n    }\n};"
}