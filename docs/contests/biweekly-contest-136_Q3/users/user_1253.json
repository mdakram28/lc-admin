{
    "username": "norikame",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid.front().size(), res = 0;\n        for (int i=0; i<m/2; ++i) for (int j=0; j<n/2; ++j) {\n            vector<int> cnt(2);\n            for (const int& vi : { i, m-1-i }) for (const int& vj : { j, n-1-j }) cnt[grid[vi][vj]]++;\n            res += min(cnt[0], cnt[1]);\n        }\n        if (m%2 == 1 && n%2 == 1 && grid[m/2][n/2] == 1) {\n            ++res;\n            grid[m/2][n/2] = 0;\n        }\n        int rcnt = 0, vcnt = 0;\n        if (m%2 == 1) {\n            for (int i=0; i<n/2; ++i) {\n                if (grid[m/2][i] != grid[m/2][n-1-i]) ++rcnt, ++vcnt;\n                else if (grid[m/2][i] == 1) vcnt += 2;\n            }\n        }\n        if (n%2 == 1) {\n            for (int i=0; i<m/2; ++i) {\n                if (grid[i][n/2] != grid[m-1-i][n/2]) ++rcnt, ++vcnt;\n                else if (grid[i][n/2] == 1) vcnt += 2;\n            }\n        }\n        res += rcnt;\n        if (rcnt == 0 && !((vcnt + rcnt)%4 == 0 || (vcnt - rcnt)%4 == 0)) res += 2;\n        return res;\n    }\n};\n",
    "submit_ts": "1722698783",
    "subm_id": "1343191674"
}