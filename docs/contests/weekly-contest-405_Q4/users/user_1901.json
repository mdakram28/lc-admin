{
    "username": "Skywarrior2000",
    "submission": "const int N = 5e4+10;\nint t[N][26]; \nlong c[N+100], MX = 1e9;\nint sz = 0;\n\nint get_node(){\n    fill(t[sz],t[sz]+26,-1);\n    c[sz]=MX;\n    sz++;\n    return sz-1;\n}\n\nvoid insert(string &w, long p){\n    int cur=0;\n    for(auto ch: w){\n        if(t[cur][ch-'a']==-1)t[cur][ch-'a']=get_node();\n        cur=t[cur][ch-'a'];\n    }\n    c[cur]=min(c[cur], p);\n}\n\n\nclass Solution {\npublic:\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n=target.size();\n        int len=0;\n        sz=0;\n        for(auto &word: words){\n            len+=word.size();\n        }\n        // for(int i = 0; i < len+10; i++){\n        //     fill(t[i],t[i]+26,-1);\n        // }\n        // fill(c,c+len*26,MX);\n        auto _ = get_node();\n        for(int i=0;i<words.size();i++){\n            insert(words[i], costs[i]);\n        }\n        vector<long> dp(n+1);\n        dp[n]=0;\n        \n        for(int i = n-1; i >= 0; i--){\n            dp[i]=MX;\n            char ch;\n            for(int j = i, cur=0; j < n; j++){\n                ch=target[j];\n                if(t[cur][ch-'a'] == -1)break;\n                else {\n                    cur=t[cur][ch-'a'];\n                    if(dp[j+1]<MX){\n                        dp[i]=min(dp[i], c[cur]+dp[j+1]);\n                    }\n                }\n                // cout<<ch<<\"\";\n            }\n            // cout<<\"\\n\";\n        }\n        // for(int i=0;i<n;i++)cout<<dp[i]<<\" \";cout<<\"\\n\";\n        if(dp[0]>=MX)dp[0]=-1;\n        return dp[0];\n    }\n};",
    "submit_ts": "1720324402",
    "subm_id": "1312398629"
}