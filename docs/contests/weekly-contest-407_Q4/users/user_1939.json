{
    "username": "DeeGeeDow",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        vector<long long> diff(nums.size(), 0);\n        for(int i=0; i<nums.size(); i++) diff[i] = (long long)target[i] - nums[i];\n        int normalizedDiff = (diff[0] == 0) ? 0 : ((diff[0] > 0) ? 1 : -1);\n        long long mx = abs(diff[0]);\n        long long mn = 0;\n        bool isTo0 = false;\n        for(int i=1; i<diff.size(); i++){\n            if(normalizedDiff*diff[i]>0 || (normalizedDiff == 0 && diff[i] != 0)){\n                if(isTo0){\n                    if(abs(diff[i]) > abs(diff[i-1])){\n                        res += mx - mn;\n                        mx = abs(diff[i]);\n                        isTo0 = false;\n                    }else{\n                        mn = abs(diff[i]);\n                    }\n                }else{\n                    isTo0 = abs(diff[i]) < abs(diff[i-1]);\n                    if(isTo0) mn = abs(diff[i]);\n                    else mx = abs(diff[i]);\n                }\n                if(normalizedDiff == 0) normalizedDiff = (diff[i] == 0) ? 0 : ((diff[i] > 0) ? 1 : -1);\n            }else{\n                normalizedDiff = (diff[i] == 0) ? 0 : ((diff[i] > 0) ? 1 : -1);\n                res += mx;\n                mx = abs(diff[i]);\n                isTo0 = false;\n                mn = 0;\n            }\n        }\n        res += mx;\n        return res;\n        // long long res = 0;\n        // vector<long long> mountains(1,0);\n        // vector<long long> diff(nums.size(), 0);\n        // for(int i=0; i<nums.size(); i++){\n        //     diff[i] = (long long) target[i] - nums[i];\n        // }\n        // if(abs(diff[0]) > abs(diff[1])) mountains.push_back(abs(diff[0]));\n        // for(int i=1; i<nums.size()-1; i++){\n        //     if(diff[i]*diff[i-1]<0) {\n        //         mountains.push_back(0);\n        //         if(abs(diff[i]) > abs(diff[i+1])) mountains.push_back(abs(diff[i]));\n        //     }\n        //     else{\n        //         if(diff[i] == 0) mountains.push_back(0);\n        //         else if((diff[i]>diff[i-1])^(diff[i+1]>diff[i])){\n        //             mountains.push_back(abs(diff[i]));\n        //         }\n        //     }\n        // }\n        // if(diff[diff.size()-1]*diff[diff.size()-2]<0){\n        //     mountains.push_back(0);\n        // }\n        // if(abs(diff[diff.size()-1]) > abs(diff[diff.size()-2])) mountains.push_back(diff.back());\n        // mountains.push_back(0);\n\n        // for(int i=1; i<mountains.size()-1; i+=2){\n        //     res += mountains[i] - min(mountains[i-1], mountains[i+1]);\n        // }\n        // return res;\n    }\n};",
    "submit_ts": "1721533282",
    "subm_id": "1328005463"
}