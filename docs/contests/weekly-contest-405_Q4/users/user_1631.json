{
    "username": "bhanu_pratap5",
    "submission": "\nstruct node {\n    node* child[26];    \n    int prefix_cnt;\n    int pos;\n    vector<string> wend;\n    node() {\n        prefix_cnt = 0;\n        wend.clear();\n        pos = -1;\n        for (int i = 0; i < 26; i++) {\n            child[i] = nullptr;\n        }\n    }\n};\n\nstruct trie {\n    node *root;\n    trie() {\n        root = new node;\n    }\n    void insert(string str, int index,vector<int>&cost) {\n        auto cur = root;\n        for (char c : str) {\n            cur->prefix_cnt++;\n            int x = c - 'a';\n            if (cur->child[x] == nullptr) {\n                cur->child[x] = new node;\n            }\n            cur = cur->child[x];\n        }\n        cur->prefix_cnt++;\n        cur->wend.push_back(str);\n        if (cur->pos == -1 || cost[cur->pos] > cost[index])\n            cur->pos = index;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie t;\n        int n = costs.size();\n        for (int i = 0; i < n; i++) {\n            t.insert(words[i], i,costs);\n        }\n\n        vector<int> dp(target.size() + 1, 1e9);\n        dp[0] = 0;\n\n        for (int i = 0; i < target.size(); i++) {\n            if (dp[i] == 1e9) continue;\n            auto cur = t.root;\n            for (int j = i; j < target.size(); j++) {\n                int x = target[j] - 'a';\n                if (x < 0 || x >= 26 || cur->child[x] == nullptr) break;\n                cur = cur->child[x];\n                if (!cur->wend.empty() && cur->pos != -1 && cur->pos < costs.size()) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + costs[cur->pos]);\n                }\n            }\n        }\n\n        return dp[target.size()] == 1e9 ? -1 : dp[target.size()];\n    }\n};\n",
    "submit_ts": "1720323733",
    "subm_id": "1312382719"
}