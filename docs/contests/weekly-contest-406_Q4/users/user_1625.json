{
    "username": "agix",
    "submission": "#define LL long long\n\nstruct Cut\n{\n    int cutType;\n    int cost;\n    \n    Cut(int _cutType, int _cost)\n    {\n        cutType = _cutType;\n        cost = _cost;\n    }\n    \n    bool operator<(const Cut& other) const\n    {\n        return cost < other.cost;\n    }\n};\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<Cut> pq;\n        \n        for (auto& c : horizontalCut)\n        {\n            pq.emplace(0, c);\n        }\n        for (auto& c : verticalCut)\n        {\n            pq.emplace(1, c);\n        }\n        \n        LL vcnt = 0;\n        LL hcnt = 0;\n        \n        LL ans = 0;\n        \n        while (!pq.empty())\n        {\n            auto t = pq.top();\n            pq.pop();\n            \n            //cout << t.cutType << \" \" << t.cost << endl;\n            if (t.cutType == 0)\n            {\n                ans += (1 + vcnt) * t.cost;\n                hcnt += 1;\n                \n                //cout << \"+\" << (1 + vcnt) * t.cost << endl;\n            }\n            else\n            {\n                ans += (1 + hcnt) * t.cost;\n                vcnt += 1;\n                \n                //cout <<  \"+\" << (1 + hcnt) * t.cost << endl;\n            }\n            //cout << \"cnt \" << hcnt << \" \" << vcnt << endl;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720926067",
    "subm_id": "1320274939"
}