{
    "username": "Nikhil_Sharma_2025",
    "submission": "class Solution {\npublic:\n   int maximumLength(vector<int>& nums, int k) { \n        int n=nums.size(); \n        vector<int>pre(k+1,-1); \n        vector<vector<int>>dp(n+1,vector<int>(k+1)); \n        vector<map<int,int>>mp(k+1); \n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=k;j++){\n               dp[i][j]=1;\n            }\n        }\n        int res = 1; \n        for(int i=0;i<=n-1;i++){ \n            for(int j=0;j<k+1;j++){ \n                for(int z=0;z<j;z++) dp[i][j]=max(1+pre[z],dp[i][j]); \n                if(mp[j].find(nums[i])==mp[j].end()){ \n                } \n                else dp[i][j]=max(1+mp[j][nums[i]],dp[i][j]); \n                res=max(dp[i][j],res); \n            } \n            for(int j=0;j<k+1;j++){ \n                mp[j][nums[i]]=max(mp[j][nums[i]],dp[i][j]); \n                pre[j]=max(dp[i][j],pre[j]); \n            } \n        } \n        return res; \n    }\n\n};",
    "submit_ts": 1717862236.0
}