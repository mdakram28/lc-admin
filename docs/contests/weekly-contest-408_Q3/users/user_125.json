{
    "username": "VarunR",
    "submission": "class Solution {\npublic:\n    \n    int qry(int l, int r, vector<int>& pref) {\n        if(r >= (int)pref.size()) r = (int)pref.size() - 1;\n        return pref[r] - (l ? pref[l - 1] : 0);\n    }\n    \n    int numberOfSubstrings(string s) {\n        // cout << '\\n';\n        int n = (int)s.size();\n        vector<int> nxt(n, n);\n        vector<int> pref(n);\n        for(int i = 0; i < n; i++) {\n            if(s[i] == '1') {\n                pref[i] = 1;\n            }\n            if(i) pref[i] += pref[i - 1];\n        }\n        \n        for(int i = n - 1; i >= 0; i--) {\n            if(s[i] == '0') nxt[i] = i;\n            else if(i < n - 1) nxt[i] = nxt[i + 1];\n            \n        }\n        \n        // cout << \"nxt:\";\n        // for(int i = 0; i < n; i++) cout << nxt[i] << \" \";\n        // cout << '\\n';\n//         \n        int ret = 0;\n        for(int i = 0; i < n; i++) {\n            // how many substrings with l = i\n            int rtind = i;\n            for(int j = 0; j <= 201; j++) {\n                if(rtind >= n) break;\n                int prv = rtind - 1;\n                rtind = nxt[rtind];\n                // has to go from i -> rtind - 1\n                // prv <= r < rtind\n                int hv = j * j;\n                // we need >= 'hv' 1's\n                // so the first good index would be i + j + hv\n                int mnind = i + max(j + hv - 1, 0);\n                mnind = max(mnind, prv);\n                ret += max(0, rtind - mnind);\n                // cout << i << \" \" << j << \" \" << mnind << \" \" << rtind << \" \" << prv << '\\n';\n                rtind++;\n                if(rtind == n) {\n                    int hv = qry(i, rtind - 1, pref);\n                    int zer = (rtind - i - hv);\n                    zer = zer * zer;\n                    if(hv >= zer) ret++;\n                }\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722136204",
    "subm_id": "1335726960"
}