{
    "username": "greg100",
    "submission": "class Solution {\npublic:\nlong long minNumberOperations(vector<int>& vec) {\n    int n = vec.size();\n    long long res = vec[0];\n    for (int i = 1; i < n; i++) {\n        if (vec[i] > vec[i - 1]) {\n            res += vec[i] - vec[i - 1];\n        }\n    }\n    return res;\n}\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n        long long res = 0;\n        int i = 0;\n        while (i < n) {\n            int left = i;\n            int x = diff[left];\n            if (x == 0) {\n                i++;\n                continue;\n            }\n            vector<int> a;\n\n            while (i < n && diff[i] * 1LL * x > 0) {\n                a.push_back(abs(diff[i]));\n                i++;\n            }\n\n            res += minNumberOperations(a);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721532658",
    "subm_id": "1327991026"
}