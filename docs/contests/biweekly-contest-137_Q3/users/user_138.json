{
    "username": "Yifeng",
    "submission": "\n\nclass Solution {\n    using ll = long long;\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        auto ucmax = board;\n        for(int i = 1; i < m - 1; i++){\n             for(int j = 0; j < n; j++){\n                 ucmax[i][j] = max(ucmax[i][j], ucmax[i-1][j]);\n             }\n        }\n        auto dcmax = board;\n        for(int i = m - 2; i >= 0; i--){\n             for(int j = 0; j < n; j++){\n                 dcmax[i][j] = max(dcmax[i][j], dcmax[i+1][j]);\n             }\n        }\n        ll res = -1e18;\n        for(int i = 1; i < m - 1; i++){\n            multiset<array<ll, 2>> rowmax;\n            for(int j = 0; j < n; j++){\n                rowmax.insert({board[i][j], j});\n                if(rowmax.size() > 3){\n                    rowmax.erase(rowmax.begin());\n                }\n            }\n            for(int uc = 0; uc < n; uc++){\n                for(int dc = 0; dc < n; dc++){\n                    if(uc == dc) continue;\n                    ll curr = 0;\n                    curr += ucmax[i-1][uc];\n                    curr += dcmax[i+1][dc];\n                    for(auto it = rowmax.rbegin(); it != rowmax.rend(); ++it){\n                        auto [v, col] = *it;\n                        if(col != uc && col != dc){\n                            curr += v;\n                            break;\n                        }\n                    }\n                    res = max(res, curr);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723908770",
    "subm_id": "1359166426"
}