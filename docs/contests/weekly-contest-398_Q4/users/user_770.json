{
    "username": "jatinsingh2012",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        dp={}\n        \n        def dfs(i,jump=0,consec=0):\n            nonlocal k\n            if i<0:\n                return 0\n            if consec==1 and i>k:\n                return 0\n            if consec==0 and i>k+1:\n                return 0\n            if i==k:\n                val = 1 + dfs(i+2**jump,jump+1,0)\n                if consec==0:\n                    val+=dfs(i-1,jump,1)\n                return val\n                \n            if (i,jump,consec) in dp:\n                return dp[(i,jump,consec)]\n            \n            max_val=dfs(i+2**jump,jump+1,0)\n            \n            if consec==0:\n                max_val+=dfs(i-1,jump,1)\n            \n            dp[(i,jump,consec)]=max_val\n            \n            return dp[(i,jump,consec)]\n        \n        return dfs(1)\n            \n        ",
    "submit_ts": 1716089505.0
}