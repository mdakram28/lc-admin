{
    "username": "PlayDate",
    "submission": "class Solution {\n    int max;\n    public int minimumDiameterAfterMerge(int[][] edges1, int[][] edges2) {\n        max = 0;\n        int val1 = getVal(edges1), val2 = getVal(edges2);\n        max = Math.max(max,(val1+val2+1));\n        return max;\n    }\n    \n    private int getVal(int[][] edges){\n        int n = edges.length + 1;\n        List<List<Integer>> adj = new ArrayList<>();\n        for (int i = 0; i < n; i++) adj.add(new ArrayList<>());\n        for (int[] edge : edges){\n            int u = edge[0], v = edge[1];\n            adj.get(u).add(v);\n            adj.get(v).add(u);\n        }\n        \n        int node = BFS(adj,0), node2 = BFS(adj,node);\n        int[] dist = new int[n], dist2 = new int[n];\n        getDist(adj,dist,node,-1,0);\n        getDist(adj,dist2,node2,-1,0);\n        \n        max = Math.max(max,dist[node2]);\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++){\n            min = Math.min(min,Math.max(dist[i],dist2[i]));\n        }\n        \n        return min;\n    }\n    \n    private void getDist(List<List<Integer>> adj, int[] dist, int node, int par, int val){\n        dist[node] = val;\n        for (Integer neigh : adj.get(node)){\n            if (neigh == par) continue;\n            getDist(adj,dist,neigh,node,val+1);\n        }\n    }\n    \n    private int BFS(List<List<Integer>> adj, int node){\n        Queue<int[]> que = new LinkedList<>();\n        que.add(new int[]{node,-1});\n        int ans = -1;\n        while (!que.isEmpty()){\n            int size = que.size();\n            while (size-- > 0){\n                int[] curr = que.poll();\n                int curr_node = curr[0];\n                int curr_par = curr[1];\n                for (Integer val : adj.get(curr_node)){\n                    if (val == curr_par) continue;\n                    que.add(new int[]{val,curr_node});\n                }\n                ans = curr_node;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1719718451",
    "subm_id": "1304417553"
}