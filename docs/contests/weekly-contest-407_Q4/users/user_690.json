{
    "username": "Snorch",
    "submission": "class Solution {\n    int abs(int x) {\n        return x < 0 ? -x : x;\n    }\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff;\n\n        for (int i = 0; i < n; i++)\n            diff.push_back(target[i] - nums[i]);\n\n        long long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i == 0) {\n                count += abs(diff[i]);\n            } else {\n                if ((diff[i] <= 0 && diff[i - 1] <= 0) || (diff[i] >= 0 && diff[i - 1] >= 0)) {\n                    int prev = abs(diff[i - 1]);\n                    int curr = abs(diff[i]);\n                    if (curr > prev)\n                        count += curr - prev;\n                } else {\n                    count += abs(diff[i]);\n                }\n            }\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1721531969",
    "subm_id": "1327974382"
}