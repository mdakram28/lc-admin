{
    "username": "mukul_oo7",
    "submission": "class Solution {\npublic:\n    void deleteRange(std::set<int>& s, int u, int v) {\n    // Find the iterator to the first element greater than u\n    auto it_u = s.upper_bound(u);\n    // Find the iterator to the first element greater than or equal to v\n    auto it_v = s.lower_bound(v);\n    \n    // Erase the elements in the range [it_u, it_v)\n    if (it_u != s.end() && it_u != it_v) {\n        s.erase(it_u, it_v);\n    }\n}\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<int> st;\n        for(int i=0; i<n; i++){\n            st.insert(i);\n        }\n\n        vector<int> ans;\n        // int d=n-1;\n        // vector<bool> vis(n, true);\n        \n        for(auto it: queries){\n            int u=it[0], v=it[1];\n            deleteRange(st, u, v);\n            ans.push_back(st.size()-1);\n\n            // int l=u+1, r=v-1;\n            // while(l<=r){\n            //     if(!vis[l] && !vis[r]) break;\n            //     if(vis[l]){\n            //         vis[l]=false;\n            //         l++;\n            //         d--;\n            //     }\n\n            //     if(vis[r]){\n            //         vis[r]=false;\n            //         r--;\n            //         d--;\n            //     }\n            // }\n\n            // ans.push_back(d);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1722742980",
    "subm_id": "1343781553"
}