{
    "username": "Priya",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        vector<vector<std::pair<long long, int>>> bestCols(m, std::vector<std::pair<long long, int>>(3, {LLONG_MIN, -1}));\n        \n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> cols;\n            for (int j = 0; j < n; ++j) {\n                cols.push_back({board[i][j], j});\n            }\n            sort(cols.rbegin(), cols.rend());\n            bestCols[i][0] = cols[0];\n            bestCols[i][1] = cols[1];\n            bestCols[i][2] = cols[2];\n        }\n\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (bestCols[r1][i].second == bestCols[r2][j].second) continue; \n                            for (int k = 0; k < 3; ++k) {\n                                if (bestCols[r1][i].second == bestCols[r3][k].second ||\n                                    bestCols[r2][j].second == bestCols[r3][k].second) continue; \n                                long long currentSum = bestCols[r1][i].first + bestCols[r2][j].first + bestCols[r3][k].first;\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723907675",
    "subm_id": "1359119160"
}