{
    "username": "UltraSonic",
    "submission": "class Node{\n    public:\n    vector<Node*> next;\n    int cost;\n    Node(): next(26, NULL){\n        cost = -1;\n    }\n};\n\nclass Solution {\n    void insert(Node* node, string str, int _cost){\n\n        for(char &ch:str){\n            if(!node->next[ch-'a']){\n                node->next[ch-'a']=new Node();\n            }\n            node = node->next[ch-'a'];\n        }\n        if(node->cost == -1)\n            node->cost = _cost;\n        else{\n            node->cost = min(_cost, node->cost);\n        }\n        \n    }\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        // prepare Trie\n\n        Node* trie=new Node(), *node;\n        int i,j;\n        for(i=0;i<words.size();i++){\n            insert(trie, words[i], costs[i]);\n        }\n        \n        \n        int n=target.length();\n\n        vector<int> dp(n+1, INT_MAX);\n        dp[0]=0;\n\n        for(i=0;i<n;i++){\n            // cout<<dp[i]<<\", \";\n            if(dp[i]==INT_MAX)continue;\n            node = trie;\n            j=i;\n            while(node){\n                if(node->cost != -1 && dp[j] > dp[i] + node->cost){\n                    dp[j]=dp[i] + node->cost;\n                }\n                if(j>=n)break;\n                node = node->next[target[j]-'a'];\n                j++;\n            }\n        }\n        return dp[n]==INT_MAX? -1: dp[n];\n        \n    }\n};",
    "submit_ts": "1720322782",
    "subm_id": "1312358974"
}