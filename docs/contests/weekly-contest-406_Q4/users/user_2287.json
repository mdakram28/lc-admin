{
    "username": "gyan2424",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long long,long long>> pq;\n        for(int i=0;i<m-1;i++)pq.push({horizontalCut[i],0});\n        for(int i=0;i<n-1;i++)pq.push({verticalCut[i],1});\n        long long v=1,h=1;\n        long long ans=0;\n        while(pq.size()>0){\n            auto p=pq.top();\n            pq.pop();\n            if(p.second==0){\n                ans+=p.first*v;\n                h++;\n            }\n            else{\n               ans+=p.first*h;\n                v++;\n            }\n            // cout<<p.first<<\" \"<<p.second<<\" \"<<cut<<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926441",
    "subm_id": "1320286383"
}