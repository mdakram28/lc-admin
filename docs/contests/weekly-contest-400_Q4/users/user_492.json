{
    "username": "yag313",
    "submission": "\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        ans = abs(nums[0] - k)\n        def num_bytes(n):\n            ctr = Counter()\n            for i in range(32):\n                if ((1 << i) & n):\n                    ctr[i] = 1\n            return ctr\n        def bytes_to_num(ctr, rng):\n            res = 0\n            for i, n in ctr.items():\n                if n == rng:\n                    res += (1 << i)\n            return res\n        l = 0\n        curr = num_bytes(nums[0])\n        for i in range(1, len(nums)):\n            # print(i, l, curr, bytes_to_num(curr, i - l))\n            while bytes_to_num(curr, i - l) < k and l < i:\n                curr -= num_bytes(nums[l])\n                l += 1\n                n = bytes_to_num(curr, i - l)\n                if n:\n                    ans = min(ans, abs(n - k))\n            if l == i:\n                curr = num_bytes(nums[i])\n            else:\n                curr += num_bytes(nums[i])\n            # print('-->', i + 1, l, curr, bytes_to_num(curr, i + 1 - l), f'{ans = }')\n            ans = min(ans, abs(bytes_to_num(curr, i + 1 - l) - k))\n        i = len(nums)\n        while bytes_to_num(curr, i - l) < k and l < i:\n            curr -= num_bytes(nums[l])\n            # print('##', i, l, curr, bytes_to_num(curr, i - l))\n\n            l += 1\n            n = bytes_to_num(curr, i - l)\n            if n:\n                ans = min(ans, abs(n - k))\n        return ans\nprint('res-------', Solution().minimumDifference([1,2,4,5], 3))\nprint('res-------', Solution().minimumDifference([1,2,1,2], 2))\nprint('res-------', Solution().minimumDifference([1], 10))\nprint('res-------', Solution().minimumDifference([1,10,6], 7))\n",
    "submit_ts": 1717298944.0
}