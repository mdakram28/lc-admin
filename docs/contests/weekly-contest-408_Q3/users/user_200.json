{
    "username": "ShenTM",
    "submission": "class Solution:\n    def numberOfSubstrings(self, s: str) -> int:\n        pre_sum = [(0, 0)]\n\n        for c in s:\n            if c == \"1\":\n                pre_sum.append( (pre_sum[-1][0], pre_sum[-1][1] + 1) )\n            else:\n                pre_sum.append( (pre_sum[-1][0] + 1, pre_sum[-1][1]) )\n        jump_map = [len(s)]\n        for i, c in enumerate(s[::-1]):\n            if c == \"1\":\n                jump_map.append(jump_map[-1])\n            else:\n                jump_map.append(len(s) - i - 1)\n        jump_map = jump_map[::-1]\n\n        # print(jump_map, pre_sum)\n        l = 0\n        ans = 0\n        while l < len(s):\n            r = l + 1\n            while r <= len(s):\n                c1 = pre_sum[r][1] - pre_sum[l][1]\n                c0 = pre_sum[r][0] - pre_sum[l][0]\n                diff = c1 - c0 * c0\n                if diff < 0:\n                    r += abs(diff)\n                else:\n                    if s[r-1] == \"1\":\n                        ans += jump_map[r - 1] - r + 1\n                        # print(l, r, jump_map[r - 1] - r + 1)\n                        r = jump_map[r - 1] + 1\n                    else:\n                        ans += 1\n                        # print(l, r, 1)\n                        r += 1\n            l += 1\n        return ans\n                    \n\n\n",
    "submit_ts": "1722136423",
    "subm_id": "1335734028"
}