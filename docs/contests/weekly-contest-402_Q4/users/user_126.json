{
    "username": "CE_RE_WAyitiaolong",
    "submission": "class ST {\n\tpublic:\n\tint s, e, v;\n\tST *l, *r;\n\tST(int s, int e) {\n\t\tthis->s = s;\n\t\tthis->e = e;\n\t\t\n\t\t//or min/max value\n\t\tv = 0;\n\t\tl = r = NULL;\n\t}\n};\n\nST *build(int s, int e) {\n\tif(s > e) {\n        return NULL;\n    }\n    \n    ST *cur = new ST(s, e);\n    if(s == e) {\n        return cur;\n    }\n    \n    int mid = (e - s) / 2 + s;\n    cur->l = build(s, mid);\n    cur->r = build(mid + 1, e);\n    \n    return cur;\n}\n\nint query(ST *root, int s, int e) {\n\t\n\t//or min/max(useless) value\n\tif(!root) {\n        return 0;\n    }\n    if(root->e < s || root->s > e) {\n        return 0;\n    }\n    \n    if(root->s >= s && root->e <= e) {\n        return root->v;\n    }\n    return query(root->l, s, e) + query(root->r, s, e);\n}\n\n\nvoid modify(ST *root, int i, int v) {\n\tif(!root) {\n        return;\n    }\n    if(root->s > i || root->e < i) {\n        return;\n    }\n    if(root->s == i && root->e == i) {\n        root->v = v;\n        return;\n    }\n    modify(root->l, i, v);\n    modify(root->r, i, v);\n    root->v = root->l->v + root->r->v;\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n = a.size();\n        ST *root = build(0, n);\n        for(int i = 1; i < n - 1; i++) {\n            if(a[i] > a[i - 1] && a[i] > a[i + 1]) {\n                modify(root, i, 1);\n            }\n        }\n        vector<int> res;\n        for(auto &i : q) {\n            int x = i[0], y = i[1], z = i[2];\n            if(x == 1) {\n                res.push_back(query(root, y + 1, z - 1));\n                \n            } else {\n                if(y > 1) {\n                    if(a[y - 1] > a[y - 2] && a[y - 1] > a[y]) {\n                        if(a[y - 1] <= z) {\n                            modify(root, y - 1, 0);\n                        }\n                    } else {\n                        if(a[y - 1] > a[y - 2] && a[y - 1] > z) {\n                            modify(root, y - 1, 1);\n                        }\n                    }\n                }\n                if(y < n - 2) {\n                    if(a[y + 1] > a[y] && a[y + 1] > a[y + 2]) {\n                        if(a[y + 1] <= z) {\n                            modify(root, y + 1, 0);\n                        }\n                    } else {\n                        if(a[y + 1] > a[y + 2] && a[y + 1] > z) {\n                            modify(root, y + 1, 1);\n                        }\n                    }\n                }\n                if(y > 0 && y < n - 1) {\n                    if(a[y] > a[y - 1] && a[y] > a[y + 1]) {\n                        if(z <= a[y - 1] || z <= a[y + 1]) {\n                            modify(root, y, 0);\n                        }\n                    } else {\n                        if(z > a[y - 1] && z > a[y + 1]) {\n                            modify(root, y, 1);\n                        }\n                    }\n                }\n                a[y] = z;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506728",
    "subm_id": "539776872"
}