{
    "username": "xxfshu",
    "submission": "class Solution:\n    def minNumberOperations_2(self, target: List[int]) -> int:\n        n = len(target)\n        ans = target[0]\n        for i in range(1, n):\n            ans += max(target[i] - target[i - 1], 0)\n        return ans\n\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        s = [x - y for x, y in zip(nums, target)]\n        n = len(s)\n        ans = 0\n        i = 0\n        while i < n:\n            t = []\n            while i < n and s[i] > 0:\n                t.append(s[i])\n                i += 1\n            if len(t) > 0:\n                ans += self.minNumberOperations_2(t)\n            i += 1\n        i = 0\n        while i < n:\n            t = []\n            while i < n and s[i] < 0:\n                t.append(-s[i])\n                i += 1\n            if len(t) > 0:\n                ans += self.minNumberOperations_2(t)\n            i += 1\n        return ans\n            ",
    "submit_ts": "1721533039",
    "subm_id": "548395740"
}