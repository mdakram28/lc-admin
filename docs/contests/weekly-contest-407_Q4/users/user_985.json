{
    "username": "lyc95",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int n = nums.size();\n        int prevOps = target[0] - nums[0];\n        res += abs(prevOps);\n        for (int i = 1; i < n; i++)\n        {\n            int currGap =  target[i] - nums[i];\n            if (currGap == 0)\n            {\n                prevOps = 0;\n            }\n            else if ((prevOps > 0 && currGap > 0) || (prevOps < 0 && currGap < 0))\n            {\n                if (abs(prevOps) > abs(currGap))\n                {\n                    // no further added required and update prev ops\n                    prevOps = currGap;\n                }\n                else if (abs(prevOps) < abs(currGap))\n                {\n                     // further added required\n                    res += (abs(currGap) - abs(prevOps));\n                    prevOps = currGap;\n                }\n                else\n                {\n                    // same same \n                }\n            }\n            else\n            {\n                prevOps = currGap;\n                res += abs(currGap);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532501",
    "subm_id": "1327987335"
}