{
    "username": "deepakumar7",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> dqw(n, 0);\n        for (int i = 1; i < n; ++i) {\n            dqw[i] = dqw[i - 1] + 1;\n        }\n\n        set<int> per;\n        for (int i = 0; i < n; ++i) {\n            per.insert(i);\n        }\n\n        vector<int> rfg;\n\n        for (const auto& qi : queries) {\n            int l = qi[0];\n            int rt = qi[1];\n\n            auto lb = per.lower_bound(l + 1);\n            auto ub = per.lower_bound(rt);\n\n            per.erase(lb, ub);\n\n            rfg.push_back(per.size() - 1);\n        }\n\n        return rfg;\n    }\n};",
    "submit_ts": "1722743989",
    "subm_id": "1343804523"
}