{
    "username": "saikrishna17394",
    "submission": "class Solution {\n    int cnt, inf;\n\n    void insert(string& s, int cost, vector<int>& node_cost, vector<vector<int>>& trie) {\n        int idx = 0;\n\n        for (int i = 0; i < s.length(); i++) {\n            if (trie[idx][s[i] - 'a'] == -1) {\n                trie.push_back(vector<int>(26, -1));\n                node_cost.push_back(inf);\n                trie[idx][s[i] - 'a'] = cnt;\n                cnt++;\n            }\n\n            idx = trie[idx][s[i] - 'a'];\n        }\n\n        node_cost[idx] = min(node_cost[idx], cost);\n    }\n\n    int solve(int idx, string& t, vector<int>& dp, vector<int>& node_cost, vector<vector<int>>& trie) {\n        if (dp[idx] != -1) {\n            return dp[idx];\n        }\n\n        int len = t.length();\n\n        dp[idx] = inf;\n        int node_idx = 0;\n\n        for (int i = idx; i < len; i++) {\n            node_idx = trie[node_idx][t[i] - 'a'];\n            \n            if (node_idx == -1) {\n                break;\n            }\n\n            if (node_cost[node_idx] != inf) {\n                dp[idx] = min(dp[idx], node_cost[node_idx] + solve(i + 1, t, dp, node_cost, trie));\n            }\n        }\n\n        return dp[idx];\n    }\n    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        inf = 1e9;\n\n        cnt = 1;\n        inf = 1e9;\n        vector<int> node_cost(1, inf);\n        vector<vector<int>> trie(1, vector<int>(26, -1));\n\n        int sz = words.size();\n\n        for (int i = 0; i < sz; i++) {\n            insert(words[i], costs[i], node_cost, trie);\n        }\n\n        int len = target.length();\n        vector<int> dp(len + 1, -1);\n        dp[len] = 0;\n\n        int ans = solve(0, target, dp, node_cost, trie);\n\n        return ans == inf ? -1 : ans;\n    }\n};",
    "submit_ts": "1720322914",
    "subm_id": "1312362472"
}