{
    "username": "harshit7650",
    "submission": "class Solution {\npublic:\n    \n    bool check(long long x,long long y,long long xx,long long yy,long long r,long long rr){ //checks if two circles are touching or not\n        \n        long long d = 1LL*abs(x-xx)*abs(x-xx) + 1LL*abs(y-yy)*abs(y-yy);\n        long long dc = (r+rr)*(r+rr);\n        if(dc>=d){\n            return true;\n        }\n        return false;\n        \n    }\n    \n    bool dfs(vector<int> &vec, map<vector<int>,int> &vis, vector<vector<int>> &circles, int X, int Y){\n        \n        vis[vec] = 1;\n        int x = vec[0], y = vec[1], r = vec[2];\n        \n        if(x+r>=X || y-r<=0)return true;\n        \n        for(auto &v:circles){\n            if(x==v[0] && y==v[1] && r==v[2]){continue;}\n            if(vis[v]==1){continue;}\n            \n            int xx = v[0], yy = v[1], rr = v[2];\n            if(check(x,y,xx,yy,r,rr)){\n                if(dfs(v,vis,circles,X,Y)){\n                    return true;\n                }\n            }\n            \n        }\n        return false;\n        \n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        \n        vector<vector<int>> tluw; //circles touching left or upper wall\n  \n        \n        for(auto &vec:circles){\n            int x = vec[0];\n            int y = vec[1];\n            int r = vec[2];\n            \n            if( x-r<=0 || y+r>=Y ){\n                tluw.push_back(vec);\n            }\n        }\n        \n        //now we do a dfs from all of these circles and if we are able to reach the right or the down wall then the answer is no\n        \n        map< vector<int> ,int>  vis;\n        for(auto &vec:tluw){\n            if( vis[vec] == 0 ){\n                if(dfs(vec,vis,circles,X,Y)){ //checks if there exists a chain touching two required walls\n                    return false;\n                }\n            }\n        }\n        return true;\n        \n    }\n};",
    "submit_ts": "1722138564",
    "subm_id": "1335793979"
}