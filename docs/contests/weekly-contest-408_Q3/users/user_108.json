{
    "username": "66glory-CUNY",
    "submission": "void block() {\n    vector<int> a;\n    for(int i = 0; i < 1000000; i++) a.push_back(i);\n}\n\nclass Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        int n = s.size();   \n        int ans = 0;\n        \n        vector<int> pos;\n        pos.push_back(-1);\n        for(int i = 0; i < s.size(); i++) {\n            if(s[i] == '0') pos.push_back(i);\n        }\n        pos.push_back(n);\n        \n        for(int i = 0; i < n; i++) {\n            if(s[i] == '0') continue;\n            int j = i;\n            int cnt = 0;\n            while(j < n && s[j] == '1') {\n                j++;\n                cnt++;\n            }\n            ans += (1 + cnt) * cnt / 2;\n            \n            i = j - 1;\n        }\n        \n        int sz = min(205, (int)(pos.size()));\n        for(int k = 1; k <= sz; k++) {\n            for(int i = 1; i < pos.size() - 1; i++) {\n                if(i + k - 1 >= pos.size() - 1) break;\n                int l = pos[i], r = pos[i + k - 1];\n                int zero = k * k;\n                int one = (r - l + 1 - k);\n                \n                int lone = l - pos[i - 1] - 1;\n                int rone = (pos[i + k] - r - 1);\n                int add = 0;\n                for(int j = 0; j <= lone; j++) {\n                    int need = max(0, zero - one - j);\n                    if(rone >= need) {\n                        add += (rone - need + 1);\n                    }\n                }\n                ans += add;\n                \n                //cout << k << \" \" << l << \" \" << r <<\" \"  << add << endl;\n                //cout << lone << \" \" << rone << endl << endl;\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722135918",
    "subm_id": "1335717805"
}