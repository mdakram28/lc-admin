{
    "username": "yrclamb",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int N = nums.length;\n        int i = 0;\n        int j = N - 1;\n        \n        int[] cnt = new int[k+2];\n        cnt[0] = N;\n        cnt[k+1] = -N;\n        \n       // System.out.println(Arrays.toString(cnt));\n        while(i < j){\n            int abs = Math.abs(nums[i] - nums[j]);\n            \n            int l1 = -1;\n            int l2 = -1;\n            int r1 = -1;\n            int r2 = -1;\n            \n            if(k > nums[i]){\n                l1 = 0;\n                l2 = Math.max(nums[i], k - nums[i]);\n            }\n            else{\n                l1 = nums[i] - k;\n                l2 = nums[i];\n            }\n            if(k > nums[j]){\n                r1 = 0;\n                r2 = Math.max(nums[j], k - nums[j]);\n            }\n            else{\n                r1 = nums[j] - k;\n                r2 = nums[j];\n            }\n            \n            if(l1 > r1){\n                int tmp = r1;\n                r1 = l1;\n                l1 = tmp;\n                \n                tmp = r2;\n                r2 = l2;\n                l2 = tmp;\n            }\n            \n          //  System.out.println(\"abs = \" + abs + \", l1 l2 = \" + l1 + \" \" + l2 + \", r1 r2 = \" + r1 + \" \" + r2);\n            \n            if(l2 >= r1){  // merge: l1 ~ r2\n                if(l1 <= k) cnt[l1]--;\n                r2 = Math.max(l2, r2);\n                if(r2 > k) r2 = k;\n                cnt[r2+1]++;                \n            } else{ // l1 ~ l2, r1 ~ r2\n                if(l1 <= k) cnt[l1]--;\n                if(l2 > k) l2 = k;\n                cnt[l2+1]++;\n\n                if(r1 <= k) cnt[r1]--;\n                if(r2 > k) r2 = k;\n                cnt[r2+1]++;\n            }\n            \n            if(abs <= k){\n                if( (abs >= l1 && abs <= l2) || (abs >= r1 && abs <= r2) ){\n                    cnt[abs]--;\n                    cnt[abs+1]++;\n                }\n                else{\n                    cnt[abs]-=2;\n                    cnt[abs+1]++;\n                }\n            }\n            i++;\n            j--;\n          //  System.out.println(Arrays.toString(cnt));\n        }\n        \n        int ans = N;\n        int cur = 0;\n        for(i = 0; i <= k; i++){\n            cur += cnt[i];\n            ans = Math.min(ans, cur);\n        }\n        \n        \n        Map<Integer, Integer> abss = new HashMap<>();\n        cnt =  new int[100002];\n        i = 0;\n        j = N - 1;\n        \n        while(i < j){\n            int abs = Math.abs(nums[i] - nums[j]);\n            abss.put(abs, abss.getOrDefault(abs, 0) + 1);\n            \n            int l1 = -1;\n            int l2 = -1;\n            int r1 = -1;\n            int r2 = -1;\n            \n            if(k > nums[i]){\n                l1 = 0;\n                l2 = Math.max(nums[i], k - nums[i]);\n            }\n            else{\n                l1 = nums[i] - k;\n                l2 = nums[i];\n            }\n            if(k > nums[j]){\n                r1 = 0;\n                r2 = Math.max(nums[j], k - nums[j]);\n            }\n            else{\n                r1 = nums[j] - k;\n                r2 = nums[j];\n            }\n            \n            if(l1 > r1){\n                int tmp = r1;\n                r1 = l1;\n                l1 = tmp;\n                \n                tmp = r2;\n                r2 = l2;\n                l2 = tmp;\n            }\n                        \n            if(l2 >= r1){  // merge: l1 ~ r2\n                r2 = Math.max(l2, r2);\n                cnt[l1]++;\n                cnt[r2+1]--;                \n            } else{ // l1 ~ l2, r1 ~ r2\n                cnt[l1]++;\n                cnt[l2+1]--;\n\n                cnt[r1]++;\n                cnt[r2+1]--;\n            }\n            \n            if( (abs >= l1 && abs <= l2) || (abs >= r1 && abs <= r2) );\n            else{\n                cnt[abs]++;\n                cnt[abs+1]--;\n            }\n            i++;\n            j--;\n        }\n        \n        cur = 0;\n        for(i = 0; i <= 100000; i++){\n            cur += cnt[i];\n            if(cur == N/2){\n                ans = Math.min(ans, N/2 - abss.getOrDefault(i, 0));\n            }\n        }\n        \n        return ans;\n        \n        \n    }\n}",
    "submit_ts": "1721489739",
    "subm_id": "1327462279"
}