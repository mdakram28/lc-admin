{
    "username": "envyaims",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n = p.size();\n        #define S second\n        #define F first\n        // x and y independent\n        // track four points\n        \n        multiset<int> t1, t2;\n        for(int i= 0; i < n; i++){\n            int X = p[i][0], Y = p[i][1];\n            t1.insert(X + Y);\n            t2.insert(X - Y);\n        }\n        \n        int ans = 1e9;\n        for(int i = 0; i < n; i++){\n            int X = p[i][0], Y = p[i][1];\n            t1.erase(t1.find(X + Y));\n            t2.erase(t2.find(X - Y));\n            ans = min(ans, max(*prev(t1.end()) - *t1.begin(), *prev(t2.end()) - *t2.begin()));\n            t1.insert(X + Y);\n            t2.insert(X - Y);\n        }\n        return ans;\n        \n//         map<int, multiset<int>> x, y;\n//         multiset<int> tx, ty;\n//         for(int i = 0; i < n; i++){\n//             int X = p[i][0], Y = p[i][1];\n//             x[X].insert(Y);\n//             y[Y].insert(X);\n//             tx.insert(X);\n//             ty.insert(Y);\n//         }\n        \n//         int ans = 1e9;\n//         auto test = [&](){\n//             vector<pair<int, int>> v;\n//             for(int i: {*tx.begin(), *prev(tx.end())}){\n//                 assert(!x[i].empty());\n//                 v.push_back({i, *x[i].begin()});\n//                 v.push_back({i, *prev(x[i].end())});\n//             }\n//              for(int i: {*ty.begin(), *prev(ty.end())}){\n//                 assert(!y[i].empty());\n//                 v.push_back({*y[i].begin(), i});\n//                 v.push_back({*prev(y[i].end()), i});\n//             }\n//             int mx_ans = 0;\n//             for(int i = 0; i < v.size(); i++){\n//                 for(int j = i + 1; j < v.size(); j++){\n//                     mx_ans = max(mx_ans, abs(v[i].first - v[j].first) + abs(v[i].second - v[j].second));\n//                 }\n//             }\n//             ans = min(ans, mx_ans);\n//         };\n        \n//         for(int i = 0; i < n; i++){\n//             int X = p[i][0], Y = p[i][1];\n//             x[X].erase(x[X].find(Y));\n//             y[Y].erase(y[Y].find(X));\n//             tx.erase(tx.find(X));\n//             ty.erase(ty.find(Y));\n//             test();\n//             x[X].insert(Y);\n//             y[Y].insert(X);\n//             tx.insert(X);\n//             ty.insert(Y);\n//         }\n        \n        // return ans;\n    }\n};"
}