{
    "username": "ys-y",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector<int> col_cnt(m, 0);\n        vector<int> row_cnt(n, 0);\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                row_cnt[i] += grid[i][j];\n                col_cnt[j] += grid[i][j];\n            }\n        }\n        auto get_res = [&] (int bound_t, int bound_b, int bound_l, int bound_r) {\n            int l = bound_r, r = bound_l, t = bound_b, b = bound_t;\n            int cnt = 0;\n            for(int i = bound_t; i <= bound_b; i++) {\n                for(int j = bound_l; j <= bound_r; j++) {\n                    if(grid[i][j] == 1) {\n                        l = min(l, j);\n                        r = max(r, j);\n                        t = min(t, i);\n                        b = max(b, i);\n                        cnt += 1;\n                    }\n                }\n            }\n            if(cnt == 0) return -1;\n            return (b - t + 1) * (r - l + 1);\n        };\n        int res = 0x3f3f3f3f;\n        for(int i = 0; i < n - 2; i++) {\n            for(int j = i + 1; j < n - 1;j++) {\n                int tmp1 = get_res(0, i, 0, m - 1);\n                int tmp2 = get_res(i + 1, j, 0, m - 1);\n                int tmp3 = get_res(j + 1, n - 1, 0, m - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;   \n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }\n        for(int i = 0; i < m - 2; i++) {\n            for(int j = i + 1; j < m - 1;j++) {\n                int tmp1 = get_res(0, n - 1,0, i);\n                int tmp2 = get_res(0, n - 1,i + 1, j);\n                int tmp3 = get_res(0, n - 1,j + 1, m - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;   \n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }  \n        for(int i = 0; i < n - 1;i++) {\n            for(int j = 0; j < m - 1;j++) {\n                int tmp1 = get_res(0, i, 0, m - 1);\n                int tmp2 = get_res(i + 1, n - 1, 0, j);\n                int tmp3 = get_res(i + 1, n - 1, j + 1, m - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;\n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }\n        for(int i = n - 1; i >= 1;i--) {\n            for(int j = 0; j < m - 1;j++) {\n                int tmp1 = get_res(i, n - 1, 0, m - 1);\n                int tmp2 = get_res(0, i - 1, 0, j);\n                int tmp3 = get_res(0, i - 1, j + 1, m - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;\n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }\n        for(int j = 0; j < m - 1;j++) {\n            for(int i = 0; i < n - 1;i++) {\n                int tmp1 = get_res(0, n - 1, 0, j);\n                int tmp2 = get_res(0, i, j + 1, m - 1);\n                int tmp3 = get_res(i + 1, n - 1, j + 1, m - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;\n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }\n        for(int j = m - 1; j >= 1;j--) {\n            for(int i = 0; i < n - 1;i++) {\n                int tmp1 = get_res(0, n - 1, j, m - 1);\n                int tmp2 = get_res(0, i, 0, j - 1);\n                int tmp3 = get_res(i + 1, n - 1, 0, j - 1);\n                if(tmp1 == -1 || tmp2 == -1 || tmp3 == -1) continue;\n                res = min(res, tmp1 + tmp2 + tmp3);\n            }\n        }\n        return res;\n    }\n};\n",
    "submit_ts": 1719113823.0
}