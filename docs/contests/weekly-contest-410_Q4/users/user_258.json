{
    "username": "ravishankarnitr",
    "submission": "class Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        vector<int> dp(1001, 0), prefixSum(1002, 0);\n\n        // Base case: for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[j] = 1;\n        }\n\n        // Fill the DP table\n        for (int i = 1; i < n; ++i) {\n            vector<int> new_dp(1001, 0);\n            prefixSum[0] = 0;\n            for (int j = 0; j <= 1000; ++j) {\n                prefixSum[j + 1] = (prefixSum[j] + dp[j]) % MOD;\n            }\n            for (int j = 0; j <= nums[i]; ++j) { // arr1[i]\n                int arr2_i = nums[i] - j;\n                if (arr2_i < 0) continue;\n                // Use prefix sums to calculate the range sum\n                int max_k = min(j, nums[i-1] - arr2_i);\n                if (max_k >= 0) {\n                    new_dp[j] = (prefixSum[max_k + 1]) % MOD;\n                }\n            }\n            dp.swap(new_dp);\n        }\n\n        // Sum up all valid pairs for the last element\n        int result = 0;\n        for (int j = 0; j <= 1000; ++j) {\n            result = (result + dp[j]) % MOD;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1723346024",
    "subm_id": "1351568485"
}