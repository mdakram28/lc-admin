{
    "username": "saikat93ify",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) \n    {        \n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        long long total_cost = 0; \n        for(int i = 0, j = 0; i < horizontalCut.size() || j < verticalCut.size(); )\n        {\n            if(i == horizontalCut.size())\n            {\n                total_cost += verticalCut[j]*(i + 1);\n                j++;\n            }\n            else if(j == verticalCut.size())\n            {\n                total_cost += horizontalCut[i]*(j + 1);\n                i++;\n            }\n            else \n            {\n                if(horizontalCut[i] > verticalCut[j])\n                {\n                    total_cost += horizontalCut[i]*(j + 1);\n                    i++;\n                }\n                else \n                {\n                    total_cost += verticalCut[j]*(i + 1);\n                    j++;\n                }\n            }\n            \n           // cout << \"Cost = \" << total_cost << \"\\n\";\n        }\n        \n        //cout << \"Brute Force = \" << get_brute_force(0, m - 1, 0, n - 1, horizontalCut, verticalCut);\n        \n        return total_cost;\n    }\n    \n    long long get_brute_force(int start_i, int end_i, int start_j, int end_j, vector<int>& horizontalCut, vector<int>& verticalCut)\n    {\n        if(start_i > end_i || start_j > end_j)\n        {\n            return 0;\n        }\n        \n        long long minimum_cost = 1e15; \n        for(int i = start_i; i <= end_i; i++)\n        {\n            minimum_cost = min(minimum_cost, horizontalCut[i] + get_brute_force(start_i, i - 1, start_j, end_j, horizontalCut, verticalCut)\n                               + get_brute_force(i + 1, end_i, start_j, end_j, horizontalCut, verticalCut));\n        }\n        \n        for(int j = start_j; j <= end_j; j++)\n        {\n            minimum_cost = min(minimum_cost, verticalCut[j] + get_brute_force(start_i, end_i, start_j, j - 1, horizontalCut, verticalCut)\n                               + get_brute_force(start_i, end_i, j + 1, end_j, horizontalCut, verticalCut));\n        }\n        \n        return minimum_cost;\n    }\n};",
    "submit_ts": "1720926330",
    "subm_id": "1320282961"
}