{
    "username": "Kitetsu",
    "submission": "class Solution:\n    def maxOperations(self, binary_string: str) -> int:\n        bit_sequence = self._extract_bit_sequence(binary_string)\n        operation_count = self._count_operations(bit_sequence)\n        return operation_count\n\n    def _extract_bit_sequence(self, binary_string: str) -> list:\n        bit_sequence = []\n        has_previous_one = False\n\n        for bit in binary_string:\n            if bit == '1':\n                bit_sequence.append(1)\n                has_previous_one = True\n            elif bit == '0' and has_previous_one:\n                bit_sequence.append(0)\n                has_previous_one = False\n\n        return bit_sequence\n\n    def _count_operations(self, bit_sequence: list) -> int:\n        operation_count = 0\n        ones_count = 0\n\n        for bit in bit_sequence:\n            if bit == 1:\n                ones_count += 1\n            else:\n                operation_count += ones_count\n\n        return operation_count",
    "submit_ts": "1721532451",
    "subm_id": "1327986134"
}