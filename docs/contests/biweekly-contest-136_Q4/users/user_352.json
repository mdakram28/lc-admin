{
    "username": "skqliiiao",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>> &edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> g = vector<vector<int>>(n);\n\n        for (auto &v : edges) {\n            g[v[0]].push_back(v[1]);\n            g[v[1]].push_back(v[0]);\n        }\n\n        vector<int> res(n, 0);\n        vector<pair<int, int>> max1(n, {0, 0}), max2(n, {0, 0});\n\n        auto dfs = [&](auto &&self, int u, int p) -> int {\n            int ans = 0;\n\n            for (int v : g[u]) {\n                if (v == p) {\n                    continue;\n                }\n\n                auto now = self(self, v, u) + (2 - v % 2);\n\n                if (now > max1[u].first) {\n                    max2[u] = max1[u];\n                    max1[u] = {now, v};\n                } else if (now > max2[u].first) {\n                    max2[u] = {now, v};\n                }\n\n                ans = max(ans, now);\n            }\n\n            return ans;\n        };\n\n        auto dfs2 = [&](auto &&self, int u, int p, int top) -> void {\n            res[u] = max(max1[u].first, top);\n\n            for (auto v : g[u]) {\n                if (v == p)\n                    continue;\n\n                if (v == max1[u].second) {\n                    self(self, v, u, max(max2[u].first, top) + (2 - u % 2));\n                } else {\n                    self(self, v, u, max(max1[u].first, top) + (2 - u % 2));\n                }\n            }\n        };\n\n        res[0] = dfs(dfs, 0, -1);\n        dfs2(dfs2, 0, -1, 0);\n\n        return res;\n    }\n};",
    "submit_ts": "1722698566",
    "subm_id": "552271453"
}