{
    "username": "roygaurav2004",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& arr, int K) {\n        int n = arr.size();\n        map<int,int> pos;\n        vector<int> prev(n);\n        map<int,int> cnt;\n        for(int i=0; i<n; i++){\n            if(pos.find(arr[i]) == pos.end()) prev[i] = -1;\n            else prev[i] = pos[arr[i]];\n            pos[arr[i]] = i;\n        }\n        vector<vector<int>> dp(n+1, vector<int>(K+1,0));\n        for(int i=0; i<=K; i++) dp[0][i] = 1;\n        \n        for(int i=0; i<n; i++){\n            cnt[arr[i]]++;\n            dp[i][0] = cnt[arr[i]];\n        }\n        \n        vector<int> prefMax(n);\n        prefMax[0] = dp[0][0];\n        for(int i=1; i<n; i++) prefMax[i] = max(prefMax[i-1], dp[i][0]);\n        \n        \n        for(int k=1; k<=K; k++){\n            vector<int> prefDum;\n            prefDum.push_back(dp[0][k]);\n            for(int i=1; i<n; i++){\n                int p = prev[i];\n                if(p != -1){\n                    dp[i][k] = max(dp[i][k], 1+dp[p][k]);\n                }\n                dp[i][k] = max(dp[i][k], 1+prefMax[i-1]);\n                prefDum.push_back(max(prefDum[i-1], dp[i][k]));\n            }\n            prefMax = prefDum;\n        }\n        \n        int ans = 1;\n        for(int i=0; i<n; i++) ans=max(ans,dp[i][K]);\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717862135.0
}