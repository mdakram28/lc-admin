{
    "username": "ayush_kt05",
    "submission": "#pragma GCC optimize (\"Ofast\")\n#pragma GCC target (\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\n#pragma GCC optimize (\"-ffloat-store\")\n#pragma GCC optimize (\"O3\", \"unroll-loops\")\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    \n    int WulfricBrian(vector<int>& colors, int k) {\n        int nums = colors.size();\n        int nonTLE = 0;\n\n        if (k == 1) {\n            return nums;\n        }\n\n        int alternatingLength = 1;\n        int index = 1;\n        \n        while (index < nums + k - 1) {\n            int currentIdx = index;\n            int prevIdx = index - 1;\n\n            if (currentIdx >= nums) {\n                currentIdx -= nums;\n            }\n            if (prevIdx >= nums) {\n                prevIdx -= nums;\n            }\n\n            if (colors[currentIdx] != colors[prevIdx]) {\n                ++alternatingLength;\n            } else {\n                alternatingLength = 1;\n            }\n\n            // Debugging statement: print current state\n            // cout << \"Current Index: \" << currentIdx << \", Previous Index: \" << prevIdx << \", Current Color: \" << colors[currentIdx] << \", Previous Color: \" << colors[prevIdx] << \", Alternating Length: \" << alternatingLength << endl;\n\n            if (alternatingLength >= k) {\n                ++nonTLE;\n                //cout << nonTLE;\n            }\n\n            ++index;\n        }\n\n        return nonTLE;\n    }\n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        \n      return WulfricBrian(colors,k);\n\n    }\n};\n\nauto init = []() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    return 'c';\n}();\n\n\n",
    "submit_ts": "1720280994",
    "subm_id": "1311809392"
}