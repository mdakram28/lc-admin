{
    "username": "DevlinShivam",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n int n = circles.size();\n\n      \n        auto areConnected = [](const vector<int>& a, const vector<int>& b) -> bool {\n            int dx = a[0] - b[0];\n            int dy = a[1] - b[1];\n            int r = a[2] + b[2];\n            return dx *1ll* dx + dy *1ll* dy <= r *1ll* r;\n        };\n\n\n        vector<int> parent(n), rank(n, 0);\n        iota(parent.begin(), parent.end(), 0);\n\n        function<int(int)> find = [&](int x) {\n            if (parent[x] != x) {\n                parent[x] = find(parent[x]);\n            }\n            return parent[x];\n        };\n\n        auto unite = [&](int x, int y) {\n            int rootX = find(x);\n            int rootY = find(y);\n            if (rootX != rootY) {\n                if (rank[rootX] > rank[rootY]) {\n                    parent[rootY] = rootX;\n                } else if (rank[rootX] < rank[rootY]) {\n                    parent[rootX] = rootY;\n                } else {\n                    parent[rootY] = rootX;\n                    rank[rootX]++;\n                }\n            }\n        };\n\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                if (areConnected(circles[i], circles[j])) {\n                    unite(i, j);\n                }\n            }\n        }\n\n        vector<int> bottom, top, left, right;\n        for (int i = 0; i < n; ++i) {\n            int cx = circles[i][0], cy = circles[i][1], r = circles[i][2];\n            if (cy - r <= 0) bottom.push_back(find(i));\n            if (cy + r >= Y) top.push_back(find(i));\n            if (cx - r <= 0) left.push_back(find(i));\n            if (cx + r >= X) right.push_back(find(i));\n        }\n\n\n\n        for(int i=0;i<bottom.size();i++)\n        {\n            for(int j=0;j<top.size();j++)\n            {\n                if(find(bottom[i])==find(top[j]))return false;\n            }\n        }\n         for(int i=0;i<bottom.size();i++)\n        {\n            for(int j=0;j<left.size();j++)\n            {\n                if(find(bottom[i])==find(left[j]))return false;\n            }\n        }\n        for(int i=0;i<right.size();i++)\n        {\n            for(int j=0;j<top.size();j++)\n            {\n                if(find(right[i])==find(top[j]))return false;\n            }\n        }\n         for(int i=0;i<right.size();i++)\n        {\n            for(int j=0;j<left.size();j++)\n            {\n                if(find(right[i])==find(left[j]))return false;\n            }\n        }\n        return true;\n    }       \n    \n};",
    "submit_ts": "1722137844",
    "subm_id": "1335775269"
}