{
    "username": "jyq_",
    "submission": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\") \n#pragma GCC optimize(\"unroll-loops\")\n#define mp make_pair\n#define pb push_back\n#define SZ(x) (int)(x.size())\n#define all(x) x.begin(),x.end()\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll,ll>pii;\nconst int maxn = 1e5 + 6;\nconst int  inf = 0x3f3f3f3f;\nconst int mod = 1e9+7;\nconst int N = 2e3 + 3;\nll qpow(ll x,ll y) { ll ans=1;x%=mod;  while(y) { if(y&1) ans=ans*x%mod; x=x*x%mod;  y>>=1; } return ans; }\n\nstruct P\n{\n    int c,x,y,i;\n}a[maxn],b[maxn],c[maxn],d[maxn];\n\nbool cmp1(P a, P b) {\n    return a.c>b.c;\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=0;\n        for(auto i:points) {\n            a[++n].x=i[0];\n            a[n].y=i[1];\n            a[n].c=a[n].x+a[n].y;\n            a[n].i=n;\n\n            b[n]=a[n];\n            b[n].c=-a[n].x-a[n].y;\n\n            c[n]=b[n];\n            c[n].c=a[n].x-a[n].y;\n\n            d[n]=c[n];\n            d[n].c=-a[n].x+a[n].y;\n        }\n        sort(a+1,a+1+n,cmp1);\n        sort(b+1,b+1+n,cmp1);\n        sort(c+1,c+1+n,cmp1);\n        sort(d+1,d+1+n,cmp1);\n        int ans=1e9;\n        for(int i=1;i<=n;i++) {\n            int x1=1,x2=1;\n            if(a[x1].i==i) x1++;\n            if(b[x2].i==i) x2++;\n            int x3=1,x4=1;\n            if(c[x3].i==i) x3++;\n            if(d[x4].i==i) x4++;\n\n            ans=min(ans,max(a[x1].c+b[x2].c,c[x3].c+d[x4].c));\n\n        }\n        return ans;\n    }\n};"
}