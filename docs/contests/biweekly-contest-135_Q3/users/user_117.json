{
    "username": "parag776",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> free(k+1);\n        for(int i=0;i<n/2;i++){\n            free[abs(nums[i]-nums[n-i-1])]++;\n        }\n        vector<int> one(k+1);\n        for(int i=0;i<n/2;i++){\n            int x = min(nums[i], nums[n-i-1]);\n            int y = max(nums[i], nums[n-i-1]);\n\n            int canDo = max(k-x, y);\n            one[0]++;\n            if(canDo<k) one[canDo+1]--;\n        }\n        int cost = INT_MAX;\n        for(int i=1;i<=k;i++){\n            one[i]+=one[i-1];\n        }\n\n        for(int i=0;i<=k;i++){\n            int curCost = one[i]-free[i];\n            curCost+=2*(n/2 - one[i]);\n            cost = min(curCost, cost);\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1721486947",
    "subm_id": "1327370398"
}