{
    "username": "abhayjoshi1104",
    "submission": "#define ll long long\nclass Solution {\n    ll updateMap(map<ll, ll>& oldMap, int num, int target) {\n        map<ll, ll> newMap;\n        ll count = 0;\n\n        newMap[num] = 1;\n        if (num == target) {\n            ++count;\n        }\n\n        for (auto &it : oldMap) {\n            ll key = it.first & num;\n            newMap[key] += it.second;\n            if (key == target) {\n                count += it.second;\n            }\n        }\n\n        oldMap = newMap;\n        return count;\n    }\n\npublic:\n    ll countSubarrays(vector<int>& nums, int target) {\n        int n = nums.size();\n        ll result = 0;\n        map<ll, ll> mapCounter;\n\n        for (int i = 0; i < n; ++i) {\n            result += updateMap(mapCounter, nums[i], target);\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1720280661",
    "subm_id": "1311797607"
}