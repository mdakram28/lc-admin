{
    "username": "shiv40",
    "submission": "class Solution {\nprivate:\n    int n;\n    int MOD = 1e9+7;\n    int solve(const vector<int>& nums, int idx, int prev1, int prev2, vector<vector<vector<int>>> &dp) {\n        if (idx >= n)\n            return 1;\n        \n        if (dp[idx][prev1][prev2] != -1) {\n            return dp[idx][prev1][prev2];\n        }\n        \n        int ans = 0;\n        for (int i = 0; i <= nums[idx]; ++i) {\n            int a = i;\n            int b = nums[idx] - i;\n            if (a >= prev1 && b <= prev2) {\n                ans = (ans + solve(nums, idx + 1, a, b, dp)) % MOD;\n            }\n        }\n        \n        dp[idx][prev1][prev2] = ans;\n        return ans;\n    }\npublic:\n    int countOfPairs(vector<int>& nums) {\n        n = nums.size();\n        // Initialize the 3D DP vector\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(51, vector<int>(51, -1)));\n        \n        return solve(nums, 0, 0, 50, dp);\n    }\n};",
    "submit_ts": "1723346735",
    "subm_id": "1351584046"
}