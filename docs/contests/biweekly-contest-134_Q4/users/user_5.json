{
    "username": "shadow923",
    "submission": "template<class T>\nclass sparse{\n\tpublic:\n\tint N, LG;\n\tvector<vector<T>>spt;\n\tvector<int>lg;\n\tsparse(){}\n\tsparse(vector<T> &a){\n\t\tN = a.size();\n\t\tLG = 32 - __builtin_clz(std::max(N - 1, 1));\n\t\tspt.resize(N+1, vector<T>(LG+1));\n\t\tlg.resize(N + 5,0);\n\t\tfor(int i = 2;i <= N;i++)\n\t\t\tlg[i] = lg[i/2] + 1;\n\t\tbuild(a);\n\t}\n\tvoid build(vector<T> &a){\n\t\tfor(int i = 0;i < N;i++)\n\t\t\tspt[i][0] = a[i];\n\t\tfor(int j = 1;j <= LG;j++){\n\t\t\tint len = (1 << j), half = (1 << (j-1));\n\t\t\tfor(int i = 0;i + len <= N;i++)\n\t\t\t\tspt[i][j] = combine(spt[i][j-1],spt[i+half][j-1]);\n\t\t}\n\t}\n\tT find(int l, int r){ // For idempotent operations in O(1)\n\t\tassert(l <= r && l >= 0 && r <= N-1);\n\t\tint lgg = lg[r-l+1], len = (1<<lgg);\n\t\treturn combine(spt[l][lgg], spt[r-len+1][lgg]);\n\t}\n\tT query(int L, int R){ // For other operations in O(log n)\n\t\tT answer = 0;\n\t\tfor (int j = LG; j >= 0; j--) {\n\t\t\tif (L + (1 << j) - 1 <= R) {\n\t\t\t\tanswer = combine(answer,spt[L][j]);\n\t\t\t\tL += 1 << j;\n\t\t\t}\n\t\t}\n\t\treturn answer;\n\t}\n\tT combine(T x,T y){\n\t\treturn x & y;\n\t}\n};\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        sparse<int> tr(a);\n        long long int ans = 0;\n        for(int i = 0; i < n; i++){\n\t\t\tint sml = i-1,lar = i-1;\n\t\t\t{\n\t\t\t\tint l = i,r = n-1;\n\t\t\t\twhile(l <= r){\n\t\t\t\t\tint m = (l + r) >> 1;\n\t\t\t\t\tif(tr.find(i,m) >= k){\n\t\t\t\t\t\tlar = m;\n\t\t\t\t\t\tl = m + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tr = m - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tint l = i,r = n-1;\n\t\t\t\twhile(l <= r){\n\t\t\t\t\tint m = (l + r) >> 1;\n\t\t\t\t\tif(tr.find(i,m) > k){\n\t\t\t\t\t\tsml = m;\n\t\t\t\t\t\tl = m + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tr = m - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += lar - sml;\n\t\t}\n        return ans;\n    }\n};\n",
    "submit_ts": "1720276567",
    "subm_id": "1311621546"
}