{
    "username": "adrain-1",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n\t\tvector<int> v1(n), v2(n);\n\t\tiota(v1.begin(), v1.end(), 0);\n\t\tiota(v2.begin(), v2.end(), 0);\n\t\tsort(v1.begin(), v1.end(), [&](int& a, int& b) {\n\t\t\treturn points[a][0] - points[a][1] < points[b][0] - points[b][1];\n\t\t\t});\n\t\tsort(v2.begin(), v2.end(), [&](int& a, int& b) {\n\t\t\treturn points[a][0] + points[a][1] < points[b][0] + points[b][1];\n\t\t\t});\n\t\tunordered_set<int> us = {v1[0], v1[n - 1], v2[0], v2[n - 1]};\n\t\tint res = INT_MAX;\n\t\tfor (auto& c : us) {\n\t\t\tint i1 = 0, i2 = 0, j1 = n - 1, j2 = n - 1, t = 0;\n\t\t\tif (c == v1[0]) {\n\t\t\t\ti1++;\n\t\t\t}\n\t\t\tif (c == v2[0]) {\n\t\t\t\ti2++;\n\t\t\t}\n\t\t\tif (c == v1[n - 1]) {\n\t\t\t\tj1--;\n\t\t\t}\n\t\t\tif (c == v2[n - 1]) {\n\t\t\t\tj2--;\n\t\t\t}\n\t\t\tt = max(t, points[v1[j1]][0] - points[v1[j1]][1] - (points[v1[i1]][0] - points[v1[i1]][1]));\n\t\t\tt = max(t, points[v2[j2]][0] + points[v2[j2]][1] - (points[v2[i2]][0] + points[v2[i2]][1]));\n\t\t\tres = min(res, t);\n\t\t}\n\t\treturn res;\n    }\n};"
}