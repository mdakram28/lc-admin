{
    "username": "Owase301",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n = s.length();\n        int arrR[n+1];\n        long long presum[n+1];\n        memset(arrR, 0, sizeof(arrR));\n        memset(presum, 0, sizeof(presum));\n        vector<long long> ans;\n        int cnt0 = 0, cnt1 = 0;\n        int cur = 0;\n        for(int i=1; i<=n; i++){\n            while(cur+1 <= n && ((cnt0 + (s[cur] == '0')) <= k || (cnt1 + (s[cur] == '1')) <= k)) {\n                cnt0 += s[cur] == '0';\n                cnt1 += s[cur] == '1';\n                cur++;\n            }\n            arrR[i] = cur;\n            //cout << i << \" \" << arrR[i] << \" \" << cnt0 << \" \" << cnt1 << endl;\n            presum[i] = presum[i-1] + cur;\n            cnt0 -= s[i-1] == '0';\n            cnt1 -= s[i-1] == '1';\n        }\n        for(auto q : queries) {\n            long long ql = q[0]+1;\n            long long qr = q[1]+1;\n            long long tans = (qr-ql+1) - qr*(qr+1)/2 + ql*(ql-1)/2;\n            //cout << tans << endl;\n            int mxR = qr;\n            int L = ql, R = qr;\n            while(L <= R) {\n                int mid = (L+R)/2;\n                if(arrR[mid] >= qr){\n                    mxR = mid;\n                    R = mid - 1;\n                } else {\n                    L = mid + 1;\n                }\n            }\n            //cout << mxR << endl;\n            tans += presum[mxR-1] - presum[ql-1];\n            tans += 1ll * (qr - mxR + 1) * qr;\n            ans.push_back(tans);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952451",
    "subm_id": "1359796570"
}