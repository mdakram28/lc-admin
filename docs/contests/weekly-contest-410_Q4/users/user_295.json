{
    "username": "VILLANOVA_ECON",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        modulo = 10**9 + 7\n        \n        top_dp = [0]*(max(nums)+10)\n        bottom_dp = [0]*(max(nums)+10)\n        \n        \n        def compute(arr):\n            return list(itertools.accumulate(arr))\n        \n        dp = [[0 for _ in range(max(nums)+1)] for _ in range(len(nums))]\n        \n        \n        dp = [0]*(max(nums)+1)\n        dp[0] = 1\n        for j,x in enumerate(nums):\n            # prefix_bottom = compute(bottom_dp[::-1])[::-1]\n            dp = compute(dp)\n            # temp_top_dp = [0]*len(top_dp)\n            # temp_bottom_dp = [0]*len(top_dp)\n            seen = False\n            temp_dp = [0]*len(dp)\n            if j == 0:\n                for i in range(x+1):\n                    temp_dp[i] += 1\n                #continue\n            else:\n                for i in range(len(dp)):\n                    if dp[i]:\n                        seen = True\n                    # if i == 0 and j == 0:\n                    #     temp_dp[0] += dp[0]\n                    #     continue\n                    if i > x:\n                        break\n                    if seen:\n                        if x-i >= 0:\n                            l = 0\n                            r = i\n                            best_ans = -1\n                            #print('i',i)\n                            while l <= r:\n                                mid = l + (r-l)//2\n                                if (nums[j-1]-mid >= x-i):\n                                    best_ans = mid\n                                    l = mid+1\n                                else:\n                                    r= mid-1\n                            if best_ans == -1:\n                                continue\n                            # if best_ans == 0:\n                            #     continue\n                            # j = nums[i-1]-i\n                            # z = min(i,j)\n                            #print('x',x,'i',i,'best_ans',best_ans)\n                            temp_dp[i] += dp[best_ans]\n                            if temp_dp[i] >= modulo:\n                                temp_dp[i] %= modulo\n\n                        \n            dp = list(temp_dp)\n        \n        return sum(dp)%modulo\n                        \n                \n                    \n",
    "submit_ts": "1723346835",
    "subm_id": "1351586187"
}