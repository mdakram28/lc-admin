{
    "username": "Terror_404",
    "submission": "class Solution {\npublic:\n        map<vector<int>,int>dp;\n        long long f(int cur,int behind ,int jump,int k){\n                if(cur<0) return 0;\n                if(cur>k+1) return 0;\n                if(cur==k+1 && behind==0) return 1;\n                long long ans=0;\n                if(dp.find({cur,behind,jump})!=dp.end()) return dp[{cur,behind,jump}];\n                if(behind==0) ans+=f(cur-1,1,jump,k);\n                ans+=f(cur+(1<<jump),0,jump+1,k);\n                return dp[{cur,behind,jump}]=ans+(cur==k);\n        }\n        \n    int waysToReachStair(int k) {\n           if(k==0) return 2;\n        return f(1,0,0,k);\n    }\n};",
    "submit_ts": 1716087308.0
}