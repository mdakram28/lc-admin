{
    "username": "dranself",
    "submission": "public class Solution {\n    public int MinChanges(int[] nums, int k) {\n        Dictionary<int,int> dic = new();\n        int n = nums.Count();\n        var maxRange = new List<int>();\n        for(int i = 0; i < n/2;i++)\n        {\n            int num = Math.Abs(nums[i] - nums[n-1-i]);\n            if(!dic.ContainsKey(num))\n                dic[num] = 0;\n            dic[num]++;\n            int min = Math.Min(nums[i],nums[n-1-i]);\n            int max = Math.Max(nums[i],nums[n-1-i]);\n            int dis = Math.Max(max,k - min);\n            maxRange.Add(dis);\n        }\n        maxRange.Sort();\n        int ret = n;\n        foreach(var el in dic)\n        {\n            int dis = el.Key;\n            int cnt = el.Value;\n            int left = 0,right = maxRange.Count()-1;\n            int idx = -1;\n            while(left <= right)\n            {\n                int mid = (left+right) >> 1;\n                if(maxRange[mid] >= dis)\n                {\n                    idx = mid;\n                    right = mid-1;\n                }\n                else\n                    left = mid+1;\n            }\n            int cur = 2 * idx;\n            cur += n / 2 - idx - cnt;\n            ret = Math.Min(ret,cur);\n        }\n        return ret;\n    }\n}",
    "submit_ts": "1721490458",
    "subm_id": "548322985"
}