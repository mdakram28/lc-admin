{
    "username": "zeus_0790",
    "submission": "class Solution {\npublic:\n    int f(vector<vector<int>> &adj){\n        int n = adj.size();\n        vector<int> vis(n,0);\n        queue<int> q;\n        q.push(0);\n        vis[0] = 1;\n        vector<int> dis(n,0);\n        while(!q.empty()){\n            int node = q.front();\n            q.pop();\n            for(auto it : adj[node]){\n                if(!vis[it]){\n                    dis[it] = 1 + dis[node];\n                    vis[it] = 1;\n                    q.push(it);\n                }\n            }\n        }\n        int k = 0;\n        int maxi = 0;\n        for(int i = 0 ; i < n ; i++){\n            if(dis[i] > maxi){\n                k = i;\n                maxi = dis[i];\n            }\n            vis[i] = 0;\n            dis[i] = 0;\n        }\n        q.push(k);\n        vis[k] = 1;\n        while(!q.empty()){\n            int node = q.front();\n            q.pop();\n            for(auto it : adj[node]){\n                if(!vis[it]){\n                    dis[it] = 1 + dis[node];\n                    vis[it] = 1;\n                    q.push(it);\n                }\n            }\n        }\n        int maxii = 0;\n        for(auto it :dis){\n            maxii = max(maxii,it);\n            \n        }\n        return maxii;\n        \n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n = edges1.size();\n        int m = edges2.size();\n        n++;\n        m++;\n        vector<vector<int>> adj1(n),adj2(m);\n        for(auto it : edges1){\n            adj1[it[0]].push_back(it[1]);\n            adj1[it[1]].push_back(it[0]);\n        }\n        for(auto it : edges2){\n            adj2[it[0]].push_back(it[1]);\n            adj2[it[1]].push_back(it[0]);\n        }\n        int ans1 = f(adj1);\n        int ans2 = f(adj2);\n        return max(max(ans1,ans2),(ans1 + 1) / 2 + (ans2 + 1) / 2 + 1);\n        \n    }\n};",
    "submit_ts": "1719719766",
    "subm_id": "1304450036"
}