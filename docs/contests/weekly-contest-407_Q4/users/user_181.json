{
    "username": "cybsbbbb",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        deltas = [target[i] - nums[i] for i in range(n)]\n\n        def helper(deltas):\n            st = [deltas[0]]\n            ans = deltas[0]\n            for delta in deltas[1:]:\n                if delta > st[-1]:\n                    ans += delta - st[-1]\n                    st.append(delta)\n                else:\n                    while st and st[-1] >= delta:\n                        st.pop()\n                    st.append(delta)\n            return ans\n        \n        cur_idx = 0\n        res = 0\n        while cur_idx < n:\n            if deltas[cur_idx] == 0:\n                cur_idx += 1\n                continue\n            elif deltas[cur_idx] > 0:\n                sub_deltas = []\n                while cur_idx < n and deltas[cur_idx] > 0:\n                    sub_deltas.append(deltas[cur_idx])\n                    cur_idx += 1\n                res += helper(sub_deltas)\n            elif deltas[cur_idx] < 0:\n                sub_deltas = []\n                while cur_idx < n and deltas[cur_idx] < 0:\n                    sub_deltas.append(-deltas[cur_idx])\n                    cur_idx += 1\n                res += helper(sub_deltas)\n        \n        return res\n\n            \n\n        \n        ",
    "submit_ts": "1721530693",
    "subm_id": "1327941125"
}