{
    "username": "flynsam",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n       \n        hor,ver = 1,1\n        m -= 1\n        n -= 1\n        cost = 0\n        horizontalCut.sort(reverse = True)\n        verticalCut.sort(reverse = True)\n        hori = horizontalCut \n        veri = verticalCut\n        i,j = 0,0 \n        #print(hori,veri)\n        while i < m and j < n:\n            #print(i,j,cost)\n            if  hori[i]  > veri[j] :\n                cost += (hori[i] * hor)\n                ver += 1\n                i += 1\n            else:\n                cost += (veri[j] * ver)\n                hor += 1\n                j += 1\n        #print(i,j,cost,ver)\n        while i < m:\n            cost += (hori[i] * hor)\n            i += 1\n        while j< n:\n            cost += (veri[j] * ver)\n            j += 1\n        return cost\n        \n        \n        \n        hp = []\n        for i in range(m-1):\n            hp.append((horizontalCut[i],'h'))\n        for i in range(n-1):\n            hp.append((verticalCut[i],'v'))\n        heapq.heapify(hp)\n",
    "submit_ts": "1720926471",
    "subm_id": "1320287261"
}