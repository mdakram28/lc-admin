{
    "username": "jeremyzhang96",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # \u8d2a\u5fc3\uff0c\u4f18\u5148\u6cbf\u7740\u5f00\u9500\u6700\u5927\u7684\u7ebf\u5207\n        horizontalCut.sort()\n        verticalCut.sort()\n        h = v = 0  # \u6a2a\u7eb5\u5404\u5207\u4e86\u591a\u5c11\u5200\n        ans = 0\n        while horizontalCut or verticalCut:\n            # \u6cbf\u6c34\u5e73\u7ebf\u5207\u4e00\u5200\n            if horizontalCut and (not verticalCut or horizontalCut[-1] >= verticalCut[-1]):\n                ans += horizontalCut.pop() * (v + 1)\n                h += 1\n            # \u6cbf\u5782\u76f4\u7ebf\u5207\u4e00\u5200\n            else:\n                ans += verticalCut.pop() * (h + 1)\n                v += 1\n        return ans",
    "submit_ts": "1720925512",
    "subm_id": "546439974"
}