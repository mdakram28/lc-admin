{
    "username": "OTTFF",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> se0, se1;\n        for (auto p : points) {\n            se0.insert(p[0] + p[1]);\n            se1.insert(p[0] - p[1]);\n        }\n        \n        int ans = 0x3f3f3f3f;\n        for (auto p : points) {\n            se0.erase(se0.find(p[0] + p[1]));\n            se1.erase(se1.find(p[0] - p[1]));\n            \n            ans = min(ans, max((*--se0.end() - *se0.begin()), (*--se1.end() - *se1.begin())));\n            \n            se0.insert(p[0] + p[1]);\n            se1.insert(p[0] - p[1]);\n        }\n        return ans;\n    }\n};"
}