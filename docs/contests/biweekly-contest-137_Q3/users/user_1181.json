{
    "username": "Purushottam Naik",
    "submission": "/**\n * @param {number[][]} board\n * @return {number}\n */\nvar maximumValueSum = function (board) {\n    const n = board.length;\n    const m = board[0].length;\n    const max = new Array(n).fill(0).map(e => new Array(3).fill(-1));\n    for (let r = 0; r < n; r++) {\n        max[r][0] = 0;\n        for (let c = 1; c < m; c++) {\n            if (board[r][max[r][0]] < board[r][c]) {\n                max[r][2] = max[r][1];\n                max[r][1] = max[r][0];\n                max[r][0] = c;\n            } else if ((max[r][1] == -1) || (board[r][max[r][1]] < board[r][c])) {\n                max[r][2] = max[r][1];\n                max[r][1] = c;\n            } else if ((max[r][2] == -1) || (board[r][max[r][2]] < board[r][c])) {\n                max[r][2] = c;\n            }\n        }\n    }\n\n    const selected = new Set();\n\n    function cal(row, score) {\n        if (selected.size === 3) return score;\n        if (row === n) return -Infinity;\n\n        let res1 = -Infinity, res2 = -Infinity, res3 = -Infinity, res4 = -Infinity;\n\n        if (selected.size === 0) {\n            selected.add(max[row][0]);\n            res1 = cal(row + 1, score + board[row][max[row][0]]);\n            selected.delete(max[row][0]);\n\n            selected.add(max[row][1]);\n            res2 = cal(row + 1, score + board[row][max[row][1]]);\n            selected.delete(max[row][1]);\n\n            selected.add(max[row][2]);\n            res3 = cal(row + 1, score + board[row][max[row][2]]);\n            selected.delete(max[row][2]);\n\n            res4 = cal(row + 1, score);\n        } else if (selected.size == 1) {\n            if (!selected.has(max[row][0])) {\n                selected.add(max[row][0]);\n                res1 = cal(row + 1, score + board[row][max[row][0]]);\n                selected.delete(max[row][0]);\n            }\n            if (!selected.has(max[row][1])) {\n                selected.add(max[row][1]);\n                res2 = cal(row + 1, score + board[row][max[row][1]]);\n                selected.delete(max[row][1]);\n            }\n            if ((selected.has(max[row][0]) || selected.has(max[row][1])) && !selected.has(max[row][2])) {\n                selected.add(max[row][2]);\n                res3 = cal(row + 1, score + board[row][max[row][2]]);\n                selected.delete(max[row][2]);\n            }\n\n            res4 = cal(row + 1, score);\n        } else if (selected.size == 2) {\n            if (!selected.has(max[row][0])) {\n                selected.add(max[row][0]);\n                res1 = cal(row + 1, score + board[row][max[row][0]]);\n                selected.delete(max[row][0]);\n            } else if (!selected.has(max[row][1])) {\n                selected.add(max[row][1]);\n                res2 = cal(row + 1, score + board[row][max[row][1]]);\n                selected.delete(max[row][1]);\n            } else if (!selected.has(max[row][2])) {\n                selected.add(max[row][2]);\n                res3 = cal(row + 1, score + board[row][max[row][2]]);\n                selected.delete(max[row][2]);\n            }\n            res4 = cal(row + 1, score);\n        }\n\n        return Math.max(res1, res2, res3, res4);\n    }\n\n    return cal(0, 0);\n};",
    "submit_ts": "1723909736",
    "subm_id": "1359203843"
}