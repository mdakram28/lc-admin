{
    "username": "BERNARB01",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n      int n = int(a.size());\n      vector<int> c(n);\n      int j = 1;\n      while (j < n && a[j] != a[j - 1]) {\n        j += 1;\n      }\n      if (j == n && a[0] != a[n - 1]) {\n        return n;\n      }\n      for (int i = 0; i < n; i++) {\n        c[i] = a[(i + j) % n];\n      }\n      int ans = 0;\n      int beg = 0;\n      while (beg < n) {\n        int end = beg;\n        while (end + 1 < n && c[end + 1] != c[end]) {\n          end += 1;\n        }\n        ans += max(0, end - beg + 1 - (k - 1));\n        beg = end + 1;\n      }\n      return ans;\n    }\n};",
    "submit_ts": "1720276897",
    "subm_id": "1311638038"
}