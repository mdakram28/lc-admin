{
    "username": "shi-guang-fang-zhu",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<int> dp(2, 0);\n        for (int i = 0; i < n; ++i) {\n            int delta = target[i] - nums[i], j = delta < 0 ? 0 : 1;\n            delta = abs(delta);\n            dp[j ^ 1] = min(dp[j ^ 1], max(0, dp[j] - delta));\n            ans += max(0, delta - (dp[j] - dp[j ^ 1]));\n            dp[j] = delta + dp[j ^ 1];\n            // cout << i << \": \" << ans << \"(\" << dp[0] << \",\" << dp[1] << \")\\n\";\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531719",
    "subm_id": "548388148"
}