{
    "username": "chasel",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        def find_max3(arr):\n            i1, i2, i3 = -1, -1, -1\n            for i in range(len(arr)):\n                if i1 == -1 or arr[i] > arr[i1]:\n                    i3 = i2\n                    i2 = i1\n                    i1 = i\n                elif i2 == -1 or arr[i] > arr[i2]:\n                    i3 = i2\n                    i2 = i\n                elif i3 == -1 or arr[i] > arr[i3]:\n                    i3 = i\n            return i1, i2, i3\n\n        m, n = len(board), len(board[0])\n        res = 0\n        max3_in_rows = []\n        max_arr = []\n        for i in range(m):\n            max3 = find_max3(board[i])\n            max3_in_rows.append(max3)\n            for j in max3:\n                max_arr.append([-board[i][j], i, j])\n        max_arr.sort()\n        max_arr_idx = 0\n\n        res = -inf\n        for i1 in range(1, m):\n            while max_arr_idx < len(max_arr) and max_arr[max_arr_idx][1] <= i1:\n                max_arr_idx += 1\n            if max_arr_idx == len(max_arr):\n                break\n            for i2 in range(i1):\n                for j1 in max3_in_rows[i1]:\n                    for j2 in max3_in_rows[i2]:\n                        if j1 == j2 or board[i1][j1] + board[i2][j2] - max_arr[max_arr_idx][0] <= res:\n                            continue\n                        tmp_idx = max_arr_idx\n                        while max_arr[tmp_idx][2] == j1 or max_arr[tmp_idx][2] == j2 or max_arr[tmp_idx][1] <= i1:\n                            tmp_idx += 1\n                        res = max(res, board[i1][j1] + board[i2][j2] - max_arr[tmp_idx][0])\n\n        return res\n",
    "submit_ts": "1723909321",
    "subm_id": "1359188107"
}