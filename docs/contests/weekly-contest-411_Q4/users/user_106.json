{
    "username": "Paul Chen",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\ntemplate <class T>\nusing vec = vector<T>;\n\n#define FOR(i, s, e) for (ll i = (ll)s; i < (ll)e; i++)\n#define CFOR(i, s, e) for (ll i = (ll)s; i <= (ll)e; i++)\n#define TRAV(a, c) for (const auto &a : c)\n#define dbg(x) cout << \"ln\" << __LINE__ << \": \" << #x << \" = \" << x << endl\n\n\ntemplate <class K, class V>\nostream &operator<<(ostream &out, const pair<K, V> &obj) {\n    return out << \"(\" << obj.first << \", \" << obj.second << \")\";\n}\n\ntemplate <class T, class = decay_t<decltype(*begin(declval<T>()))>,\n          class = enable_if_t<!is_same<T, string>::value>>\nostream &operator<<(ostream &out, const T &obj) {\n    out << '[';\n    for (auto it = obj.begin(); it != obj.end(); it++)\n        out << &\", \"[2 * (it == obj.begin())] << *it;\n    return out << ']';\n}\n\n\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        ll n = s.size();\n        ll j = 0, c0 = 0, c1 = 0;\n        vec<ll> a(n), l(n);\n        FOR(i, 0, n) {\n            while (j < n && (c0 <= k || c1 <= k)) {\n                if (s[j] == '0') {\n                    c0++;\n                } else {\n                    c1++;\n                }\n                j++;\n            }\n            a[i] = j - 2 + (c0 <= k || c1 <= k);\n            l[i] = a[i] - i + 1;\n            if (s[i] == '0') {\n                c0--;\n            } else {\n                c1--;\n            }\n        }\n        vec<ll> psa(n + 1), psl(n + 1);\n        FOR(i, 0, n) psa[i + 1] = psa[i] + a[i];\n        FOR(i, 0, n) psl[i + 1] = psl[i] + l[i];\n        vec<ll> ans;\n        TRAV(e, queries) {\n            ll li = e[0], ri = e[1];\n            ll ind = upper_bound(a.begin(), a.end(), ri) - a.begin();\n            if (li <= ind && ind <= ri) {\n                ans.push_back(psl[ind] - psl[li] + (ri - ind + 1) * (ri - ind + 2) / 2);\n            } else if (ri < ind) {\n                ans.push_back(psl[ri + 1] - psl[li]);\n            } else if (ind < li) {\n                ans.push_back((ri - li + 1) * (ri - li + 2) / 2);\n            } else {\n                assert(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952294",
    "subm_id": "1359792798"
}