{
    "username": "roronoa0",
    "submission": "#define INF 1000000000\nclass Solution {\npublic:\n    \n    vector<int>a;\n    vector<int>t;\n    vector<int>lazy;\n    \n   void build(vector<int>&a, int v, int tl, int tr) {\n    if (tl == tr) {\n        t[v] = a[tl];\n    } else {\n        int tm = (tl + tr) / 2;\n        build(a, v*2+1, tl, tm);\n        build(a, v*2+2, tm+1, tr);\n        t[v] = max(t[v*2+1], t[v*2 + 2]);\n    }\n}\n\nvoid push(int v) {\n    t[v*2+1] += lazy[v];\n    lazy[v*2+1] += lazy[v];\n    t[v*2+2] += lazy[v];\n    lazy[v*2+2] += lazy[v];\n    lazy[v] = 0;\n}\n\nvoid update(int v, int tl, int tr, int l, int r, int addend) {\n    if (l > r) \n        return;\n    if (l == tl && tr == r) {\n        t[v] += addend;\n        lazy[v] += addend;\n    } else {\n        push(v);\n        int tm = (tl + tr) / 2;\n        update(v*2+1, tl, tm, l, min(r, tm), addend);\n        update(v*2+2, tm+1, tr, max(l, tm+1), r, addend);\n        t[v] = max(t[v*2+1], t[v*2+2]);\n    }\n}\n\nint query(int v, int tl, int tr, int l, int r) {\n    if (l > r)\n        return -INF;\n    if (l == tl && tr == r)\n        return t[v];\n    push(v);\n    int tm = (tl + tr) / 2;\n    return max(query(v*2+1, tl, tm, l, min(r, tm)), \n               query(v*2+2, tm+1, tr, max(l, tm+1), r));\n}\n    \n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        \n        int n=queries.size();\n        int p=4*n;\n        p=min(p,50000);\n        p+=5;\n        // a.resize(p);\n        for(int i=0;i<p;i++)\n        {\n            a.push_back(i);\n        }\n        t.resize(4*p+100);\n        lazy.assign(4*p+100,0);\n\n        build(a, 0,0, p); \n        // cout<<p<<\" \";\n        set<int>s;\n        s.insert(0);\n        vector<bool>ans;\n//         cout<<endl;\n//         for(auto it:a) cout<<it<<\" \";\n//         cout<<endl;\n\n//         int l=3;\n\n//         int x=query(0, 0, p, 0, l);\n                \n//         // cout<<l<<\"-\"<<x<<\" \";\n        \n        \n        for(auto it:queries)\n        {\n            if(it[0]==1)\n            {\n                auto x=s.upper_bound(it[1]);\n                int last=p;\n                if(x!=s.end())\n                {\n                    last=*x;\n                }\n                x--;\n                int temp=it[1]-(*x);\n                update(0, 0, p, it[1]+1, last, -1*temp);\n                s.insert(it[1]);\n            }\n            else\n            {\n                int x=query(0, 0, p, 0, it[1]);\n                \n                cout<<it[1]<<\"-\"<<x<<\" \";\n                \n                if(x>=it[2])\n                {\n                    ans.push_back(1);\n                }\n                else\n                {\n                    ans.push_back(0);\n                }\n            }\n        }\n        cout<<endl;\n        return ans;\n    }\n};",
    "submit_ts": "1716652014",
    "subm_id": "1267653948"
}