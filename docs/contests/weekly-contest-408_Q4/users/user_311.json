{
    "username": "RahulAhuja2901",
    "submission": "class Solution\n{\n    public boolean dfs(int curr, int end1, int end2, boolean[] visited, ArrayList<ArrayList<Integer>> adjList)\n    {\n        if (curr == end1 || curr == end2)\n        {\n            return false;\n        }\n        for (int next : adjList.get(curr))\n        {\n            if (!visited[next])\n            {\n                visited[next] = true;\n                if (!dfs(next, end1, end2, visited, adjList))\n                {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public boolean canReachCorner(int X, int Y, int[][] circles)\n    {\n        int n = circles.length;\n        ArrayList<ArrayList<Integer>> adjList = new ArrayList<ArrayList<Integer>>();\n        for (int i=0;i<n+4;i++)\n        {\n            adjList.add(new ArrayList<Integer>());\n        }\n        for (int i=0;i<n;i++)\n        {\n            long x1 = circles[i][0];\n            long y1 = circles[i][1];\n            long r1 = circles[i][2];\n            for (int j=i+1;j<n;j++)\n            {\n                long x2 = circles[j][0];\n                long y2 = circles[j][1];\n                long r2 = circles[j][2];\n                long d1 = (long)Math.pow(Math.abs(x2 - x1), 2) + (long)Math.pow(Math.abs(y2 - y1), 2);\n                long d2 = (long)Math.pow(r1 + r2, 2);\n                if (d1 <= d2)\n                {\n                    adjList.get(i).add(j);\n                    adjList.get(j).add(i);\n                }\n            }\n        }\n        for (int i=0;i<n;i++)\n        {\n            long x = circles[i][0];\n            long y = circles[i][1];\n            long r = circles[i][2];\n            if (y + r >= Y)\n            {\n                adjList.get(n).add(i);\n                adjList.get(i).add(n);\n            }\n            if (y - r <= 0)\n            {\n                adjList.get(n + 1).add(i);\n                adjList.get(i).add(n + 1);\n            }\n        }\n        for (int i=0;i<n;i++)\n        {\n            long x = circles[i][0];\n            long y = circles[i][1];\n            long r = circles[i][2];\n            if (x + r >= X)\n            {\n                adjList.get(n + 2).add(i);\n                adjList.get(i).add(n + 2);\n            }\n            if (x - r <= 0)\n            {\n                adjList.get(n + 3).add(i);\n                adjList.get(i).add(n + 3);\n            }\n        }\n        boolean[] visited = new boolean[n + 4];\n        visited[n + 3] = true;\n        if (!dfs(n + 3, n + 1, n + 2, visited, adjList))\n        {\n            return false;\n        }\n        Arrays.fill(visited, false);\n        visited[n] = true;\n        if (!dfs(n, n + 1, n + 2, visited, adjList))\n        {\n            return false;\n        }\n        return true;\n    }\n}",
    "submit_ts": "1722137188",
    "subm_id": "1335756678"
}