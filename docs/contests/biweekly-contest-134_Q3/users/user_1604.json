{
    "username": "bellam_bhanu",
    "submission": "def number_of_alternating_groups(c, k):\n    n = len(c)\n    ans = 0\n    dp = [0] * n\n    dp[0] = 1\n    \n    for i in range(1, n):\n        if c[i] == c[i - 1]:\n            dp[i] = 1\n        else:\n            dp[i] = dp[i - 1] + 1\n    \n    v = [0] * n\n    v[-1] = n - 1\n    for i in range(n - 2, -1, -1):\n        if dp[i] + 1 == dp[i + 1]:\n            v[i] = v[i + 1]\n        else:\n            v[i] = i\n    \n    i = 0\n    while i < n:\n        while i < n and v[i] == n - 1 and v[i] - i + 1 < k and c[0] != c[n - 1] and v[i] - i + 1 + v[0] + 1 >= k:\n            ans += 1\n            i += 1\n        if i < n and v[i] - i + 1 >= k:\n            ans += 1\n        i += 1\n    \n    return ans\n\nclass Solution:\n    def numberOfAlternatingGroups(self, c, k):\n        return number_of_alternating_groups(c, k)\n",
    "submit_ts": "1720279510",
    "subm_id": "1311754110"
}