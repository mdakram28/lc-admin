{
    "username": "sorriso",
    "submission": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.List;\n\nclass Node {\n    int dis;\n    int pos;\n    public Node(int dis, int pos) {\n        this.dis = dis;\n        this.pos = pos;\n    }\n}\n\nclass Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        List<List<Node>> p = new ArrayList<>();\n        for (int i = 0; i < 4; i++) p.add(new ArrayList<>());\n        for (int i = 0; i < n; i++) {\n            p.get(0).add(new Node(points[i][0] + points[i][1], i));\n            p.get(1).add(new Node(-points[i][0] + points[i][1], i));\n            p.get(2).add(new Node(points[i][0] - points[i][1], i));\n            p.get(3).add(new Node(-points[i][0] - points[i][1], i));\n        }\n        for (int i = 0; i < 4; i++) p.get(i).sort(Comparator.comparingInt(x -> x.dis));\n        int mmin = (int) 0x3f3f3f3f;\n        for (int i = 0; i < n; i++) {\n            int mmax = 0;\n            for (int j = 0; j < 4; j++) {\n                int x = p.get(j).get(0).pos != i ? p.get(j).get(0).dis : p.get(j).get(1).dis;\n                int y = p.get(j).get(p.get(j).size() - 1).pos != i ? p.get(j).get(p.get(j).size() - 1).dis : p.get(j).get(p.get(j).size() - 2).dis;\n                mmax = Math.max(mmax, y - x);\n            }\n            mmin = Math.min(mmin, mmax);\n        }\n        return mmin;\n    }\n}"
}