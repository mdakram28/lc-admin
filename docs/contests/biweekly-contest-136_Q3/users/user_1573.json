{
    "username": "akbc",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m , n = len(grid), len(grid[0])\n        twoCounts = 0\n        oneCounts = 0\n        ans = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                v = grid[i][j] + grid[m-i-1][j] + grid[i][n-1-j] + grid[m-i-1][n-1-j]\n                ans += min(v,abs(4-v))\n        if m % 2 == 1:\n            i = m//2\n            for j in range(n//2):\n                v = grid[i][j] + grid[i][n-1-j]\n                ans += min(v,abs(2-v))\n                if v == 2: twoCounts += 1\n                if v == 1: oneCounts += 1\n        if n % 2 == 1:\n            j = n//2\n            for i in range(m//2):\n                v = grid[i][j] + grid[m-1-i][j]\n                ans += min(v,abs(2-v))\n                #print('AAA')\n                if v == 2: twoCounts += 1\n                if v == 1: oneCounts += 1\n        center = 0\n        if m % 2 == 1 and n% 2 == 1 and grid[m//2][n//2] == 1:\n            center = 1\n        twoCounts %= 2\n        #oneCounts %= 4\n        if twoCounts == 0:\n            return ans + center\n        if oneCounts > 0:\n            return ans + center\n        return ans + 2 * twoCounts + center \n        \n        ",
    "submit_ts": "1722699155",
    "subm_id": "1343203104"
}