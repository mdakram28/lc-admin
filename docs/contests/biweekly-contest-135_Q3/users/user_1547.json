{
    "username": "intelligent-elgamal",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        Map<Integer,Integer> cnt = new HashMap<>();\n        for(int i = 0; i < nums.length/2; i++){\n            int t = Math.abs(nums[i] - nums[nums.length - i - 1]);\n            if(cnt.containsKey(t)){\n                cnt.put(t,cnt.get(t)+1);\n            }else{\n                cnt.put(t,1);\n            }\n        }\n        int len = cnt.size();\n        int res = 100000;\n        while(len-->0){\n        \n        \n        int t1 = 0;\n        int t2 = 0;\n        for(Integer key : cnt.keySet()) {\n            if(cnt.get(key) > t2){\n                t1 = key;\n                t2 = cnt.get(key);\n            }\n        }\n        cnt.remove(t1);\n        if(nums.length/2 - t2 >= res){\n            break;\n        }\n        int f = 0;\n        for(int i = 0; i < nums.length/2; i++){\n            int flag = 0;\n            if((nums[i] + t1) >=0 && (nums[i] + t1) <= k){\n                flag = 1;\n            }\n            if((nums[i] - t1) >=0 && (nums[i] - t1) <= k){\n                flag = 1;\n            }\n            if((nums[nums.length - i - 1] - t1) >=0 &&\n             (nums[nums.length - i - 1] - t1) <= k){\n                flag = 1;\n            }\n            if((nums[nums.length - i - 1] + t1) >=0 &&\n             (nums[nums.length - i - 1] + t1) <= k){\n                flag = 1;\n            }\n            if( flag == 0){\n                t2--;\n                f++;\n            }else{\n                f++;\n            }\n        }\n        if( f == nums.length/2){\n            \n            res = Math.min(res,nums.length/2 - t2) ;\n        }\n        \n        }\n        return res;\n    }\n}",
    "submit_ts": "1721489607",
    "subm_id": "548319484"
}