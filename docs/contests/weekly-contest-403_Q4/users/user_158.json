{
    "username": "yefei162",
    "submission": "from typing import List\n\n\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = n * m\n        for i in range(n - 1):\n            grid1 = [grid[i1][:] for i1 in range(i + 1)]\n            ret1 = self.minimumArea(grid1)\n            for j in range(m - 1):\n                grid2 = [grid[i1][:j + 1] for i1 in range(i + 1, n)]\n                grid3 = [grid[i1][j + 1:m] for i1 in range(i + 1, n)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        for i in range(n - 1):\n            grid1 = [grid[i1][:] for i1 in range(i + 1, n)]\n            ret1 = self.minimumArea(grid1)\n            for j in range(m - 1):\n                grid2 = [grid[i1][:j + 1] for i1 in range(i + 1)]\n                grid3 = [grid[i1][j + 1:m] for i1 in range(i + 1)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        for j in range(m - 1):\n            grid1 = [grid[i1][:j + 1] for i1 in range(n)]\n            ret1 = self.minimumArea(grid1)\n            for i in range(n - 1):\n                grid2 = [grid[i1][j + 1:] for i1 in range(i + 1)]\n                grid3 = [grid[i1][j + 1:] for i1 in range(i + 1, n)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        for j in range(m - 1):\n            grid1 = [grid[i1][j + 1:] for i1 in range(n)]\n            ret1 = self.minimumArea(grid1)\n            for i in range(n - 1):\n                grid2 = [grid[i1][:j + 1] for i1 in range(i + 1)]\n                grid3 = [grid[i1][:j + 1] for i1 in range(i + 1, n)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        for i in range(n - 1):\n            grid1 = [grid[i1][:] for i1 in range(i + 1)]\n            ret1 = self.minimumArea(grid1)\n            for k in range(i + 1, n - 1):\n                grid2 = [grid[i1][:] for i1 in range(i + 1, k+1)]\n                grid3 = [grid[i1][:] for i1 in range(k + 1, n)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        for j in range(m - 1):\n            grid1 = [grid[i1][:j+1] for i1 in range(n)]\n            ret1 = self.minimumArea(grid1)\n            for k in range(j + 1, m - 1):\n                grid2 = [grid[i1][j+1:k+1] for i1 in range(n)]\n                grid3 = [grid[i1][k+1:] for i1 in range(n)]\n                # print(grid1, grid2, grid3)\n                ret2 = self.minimumArea(grid2)\n                ret3 = self.minimumArea(grid3)\n                ans = min(ans, ret1 + ret2 + ret3)\n\n        return ans\n\n    def minimumArea(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        x1, x2 = n, 0\n        y1, y2 = m, 0\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] == 1:\n                    x1 = min(x1, i)\n                    x2 = max(x2, i)\n                    y1 = min(y1, j)\n                    y2 = max(y2, j)\n        ret = (x2 - x1 + 1) * (y2 - y1 + 1)\n        return ret",
    "submit_ts": 1719112564.0
}