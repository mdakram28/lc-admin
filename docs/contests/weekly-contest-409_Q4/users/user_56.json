{
    "username": "s-liu18",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(colors)\n        mark = [colors[i] == colors[i-1] for i in range(n)]\n        rec = SortedList([])\n        cnt = defaultdict(int)\n        last = -1\n        for i, x in enumerate(mark):\n            if x:\n                rec.add(i)\n                if last >= 0:\n                    gap = i - last\n                    cnt[gap] += 1\n                else:\n                    first = i\n                last = i\n        if last == -1:\n            cnt[0] += 1\n        else:\n            gap = first + n - last\n            cnt[gap%n] += 1\n\n        def plus(y, diff):\n            y = y % n\n            cnt[y] += diff\n            if cnt[y] == 0:\n                cnt.pop(y)\n\n        def change(i):\n            if i == n:\n                i = 0\n            x = rec.bisect_left(i)\n            if x == len(rec):\n                x = 0\n            if len(rec) > 0 and rec[x] == i:\n                rec.pop(x)\n                if len(rec) > 0:\n                    before = rec[x-1]\n                    after = rec[0 if x == len(rec) else x]\n                    plus(i-before, -1)\n                    plus(after-i, -1)\n                    plus(after-before, 1)\n            else:\n                if not len(rec):\n                    rec.add(i)\n                else:\n                    before = rec[x-1]\n                    after = rec[x]\n                    rec.add(i)\n                    plus(i-before, 1)\n                    plus(after-i, 1)\n                    plus(after-before, -1)\n            # print(cnt)\n        res = []\n        for q in queries:\n            if q[0] == 2:\n                if q[2] == colors[q[1]]:\n                    continue\n                i = q[1]\n                colors[i] = q[2]\n                change(i)\n                change(i+1)\n            else:\n                r = 0\n                if cnt[0]:\n                    if n % 2:\n                        r = n - q[1] + 1\n                    else:\n                        r = n\n                for x in cnt:\n                    if x >= q[1]:\n                        r += (x - q[1] + 1) * cnt[x]\n                res.append(r)\n        return res\n",
    "submit_ts": "1722743635",
    "subm_id": "552351933"
}