{
    "username": "abhi_perfecct007",
    "submission": "class Solution {\npublic:\n    struct Node {\n        Node *links[26];\n        int cost;\n\n        Node() : cost(INT_MAX) {\n            fill(begin(links), end(links), nullptr);\n        }\n\n        bool containsKey(char ch) {\n            return links[ch - 'a'] != nullptr;\n        }\n\n        void put(char ch, Node *node) {\n            links[ch - 'a'] = node;\n        }\n\n        Node *get(char ch) {\n            return links[ch - 'a'];\n        }\n\n        void setEnd(int c) {\n            cost = min(cost, c);\n        }\n\n        bool isEnd() {\n            return cost != INT_MAX;\n        }\n    };\n\n    void insert(const string &word, int cost, Node* root) {\n        Node* node = root;\n        for (char ch : word) {\n            if (!node->containsKey(ch)) {\n                node->put(ch, new Node());\n            }\n            node = node->get(ch);\n        }\n        node->setEnd(cost);\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = words.size();\n        Node* root = new Node();\n\n        for (int i = 0; i < n; ++i) {\n            insert(words[i], costs[i], root);\n        }\n\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\n        pq.push({0, 0});\n\n        vector<int> minCost(target.size() + 1, INT_MAX);\n        minCost[0] = 0;\n\n        while (!pq.empty()) {\n            auto [currentCost, index] = pq.top();\n            pq.pop();\n\n            if (index == target.size()) {\n                return currentCost;\n            }\n\n            Node* node = root;\n            for (int i = index; i < target.size(); ++i) {\n                if (!node->containsKey(target[i])) {\n                    break;\n                }\n                node = node->get(target[i]);\n\n                if (node->isEnd()) {\n                    int newIndex = i + 1;\n                    int newCost = currentCost + node->cost;\n                    if (newCost < minCost[newIndex]) {\n                        minCost[newIndex] = newCost;\n                        pq.push({newCost, newIndex});\n                    }\n                }\n            }\n        }\n\n        return -1;\n    }\n};\n",
    "submit_ts": "1720324455",
    "subm_id": "1312399925"
}