{
    "username": "dekatuna",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& reqs) {\n        const int MOD = 1e9 + 7, MAXI = 400;\n        long long ans = 0;\n        unordered_map<int, int> mp;\n        for (auto& i : reqs) {\n            mp[i[0] + 1] = i[1];\n        }\n        vector<vector<long long>> dp(n + 1, vector<long long>(MAXI + 1, 0));\n        dp[0][0] = 1;\n        for (int len = 1; len <= n; len++) {\n            for (int i = 0; i <= MAXI; i++) {\n                dp[len][i] = 0; \n                for (int pos = 0; pos < len; pos++) {\n                    int pr = i - pos;\n                    if (pr >= 0) {\n                        dp[len][i] = (dp[len][i] + dp[len - 1][pr]) % MOD;\n                    }\n                }\n            }\n            if (mp.find(len) != mp.end()) {\n                int rq = mp[len];\n                for (int i = 0; i <= MAXI; i++) {\n                    if (i != rq) {\n                        dp[len][i] = 0;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i <= MAXI; i++) {\n            ans = (ans + dp[n][i]) % MOD;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719070794",
    "subm_id": "1296831914"
}