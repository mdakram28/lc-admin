{
    "username": "Rushi-Balapure",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        // long long ans=0;\n        // for(int i=0;i<nums.size();i++)\n        // {\n        //     int sum=nums[i];\n        //     for(int j=i;j<nums.size();j++)\n        //     {\n        //         sum&=nums[j];\n        //         if(sum==k)ans++;\n        //     }\n        // }\n        // return ans;\n        long long count = 0;\n        unordered_map<long long, long long> previousCounts;\n        for (int i = 0; i < nums.size(); ++i) {\n            unordered_map<long long, long long> currentCounts;\n            \n            // If the current element equals the target, increment the count\n            if (nums[i] == k) {\n                ++count;\n            }\n            \n            // Initialize the current element in the currentCounts map\n            currentCounts[nums[i]] = 1;\n            for (auto& [prevVal, freq] : previousCounts) {\n                long long res = prevVal & nums[i];\n                \n                // If the AND result equals the target, increment the count by the frequency\n                if (res == k) {\n                    count += freq;\n                }\n                \n                // Update the currentCounts map\n                currentCounts[res] += freq;\n            }\n            previousCounts = currentCounts;\n        }\n        \n        return count;\n    }\n};",
    "submit_ts": "1720279135",
    "subm_id": "1311738915"
}