{
    "username": "Cobalt_3902",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        nbit=[0]*32\n        check=[True if (k&(1<<i))==0 else False for i in range(32)]\n        lo,hi=0,0\n        res=0\n        def can_reduce(t,l):\n            # print(t,l)\n            bit=0\n            for _ in range(32):\n                if check[bit]:\n                    if (t&1)==1:\n                        if nbit[bit]-1==l:\n                            return False\n                    else:\n                        if nbit[bit]==l:\n                            return False\n                else:\n                    if nbit[bit]==l:\n                        return False\n                t>>=1\n                bit+=1\n            return True\n        def can_fit(l):\n            for i,e in enumerate(nbit):\n                if check[i] and e>=l:\n                    return False\n            return True\n        # sliding windows\n        for i,e in enumerate(nums):\n            if (e&k)==k:\n                bit=0\n                t=e\n                while t>0:\n                    if (t&1)==1:\n                        nbit[bit]+=1 \n                    t>>=1\n                    bit+=1\n                while hi<i and can_reduce(nums[hi],i-hi):\n                    bit=0\n                    t=nums[hi]\n                    while t>0:\n                        if (t&1)==1:\n                            nbit[bit]-=1 \n                        t>>=1\n                        bit+=1\n                    hi+=1\n                # read hi\n                if can_fit(i-hi+1): res+=hi-lo+1\n            else:\n                lo,hi=i+1,i+1\n                nbit=[0]*32\n            # print(lo,hi,i,res,nbit[:5])\n        return res\n            ",
    "submit_ts": "1720281418",
    "subm_id": "1311824406"
}