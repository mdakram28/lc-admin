{
    "username": "Ananya Priyadarshini",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        \n        vector<vector<pair<int, int>>> rowMaxes(m);  \n        \n        for (int i = 0; i < m; ++i) {\n            \n            vector<pair<int, int>> cols;\n            for (int j = 0; j < n; ++j) {\n                cols.push_back({board[i][j], j});\n            }\n            \n            sort(cols.rbegin(), cols.rend());\n            \n            for (int k = 0; k < min(3, (int)cols.size()); ++k) {\n                rowMaxes[i].push_back(cols[k]);\n            }\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        \n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    \n                    for (auto& c1 : rowMaxes[r1]) {\n                        for (auto& c2 : rowMaxes[r2]) {\n                            if (c1.second == c2.second) continue;  \n                            for (auto& c3 : rowMaxes[r3]) {\n                                if (c3.second == c1.second || c3.second == c2.second) continue;  \n                                \n                                \n                                long long currentSum = static_cast<long long>(c1.first) +\n                                                       static_cast<long long>(c2.first) +\n                                                       static_cast<long long>(c3.first);\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723910006",
    "subm_id": "1359213802"
}