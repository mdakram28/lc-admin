{
    "username": "unknown_ajay",
    "submission": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n/*\n \n File   : Leetcode.cpp\n -------------------\n |   Hello         |\n |   DSA !         |\n -------------------\n \n */\n\n#define mii map<int,int>\n#define vi vector<int>\n#define vs vector<string>\n#define vb vector<bool>\n#define pii pair<int,int>\n#define endl \"\\n\"\n#define intmax INT_MAX\n#define intmin INT_MIN\n#define need_for_speed ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define ff(i,a,b) for(int i=a;i<b;i++)\n#define rfor(i,a,b) for(int i=a;i>=b;i--)\n#define all(x) x.begin(),x.end()\n#define pt(x) { cout<<x<<\"\\n\"; }\n#define fs first.second\n#define ss second.second\n#define countofSet(x) __builtin_popcount(x)\n#define pb push_back\n#define fir first\n#define sec second\n#define sqrt(x) sqrtl(x)\n#define ll long long\nconst int M = 1e9+7;\n\nclass Solution {\npublic:\n    int countOfPairs(vector<int>& nums) {\n        int n = (int)nums.size();\n        vector<vector<ll>> dp(n + 1, vector<ll>(1005 + 1, 0)), pre(n + 1, vector<ll>(1005 + 1, 0));\n        \n        ff(j,0,1001) dp[n][j] = 1;\n        ff(j,0,1003)\n        {\n            pre[n][j] = dp[n][j];\n            if (j >= 1) pre[n][j] = (pre[n][j] + pre[n][j - 1]) % M;\n        }\n        \n        for (int idx=n-1;idx>=0;idx--)\n        {\n            ff(mx,0,1001)\n            {\n                ll cur = 0;\n                if (idx != 0)\n                {\n                    int KK = max(0,nums[idx] - nums[idx - 1]) + mx;\n                    if (KK > nums[idx]) continue;\n                    int l = max(KK, 0), r = nums[idx];\n                    if (l <= r) cur = (pre[idx + 1][r] - (l > 0 ? pre[idx + 1][l - 1] : 0) + M) % M;\n                    \n                } else \n                {\n                    if(mx > nums[idx]) continue;\n                    cur = pre[idx + 1][nums[idx]];\n                    if (mx >= 1) cur = (cur-pre[idx+1][mx-1] + M) % M;\n                }\n                dp[idx][mx] = cur;\n            }\n            \n            ff(j,0,1003)\n            {\n                pre[idx][j] = dp[idx][j];\n                if (j>=1) pre[idx][j] = (pre[idx][j]+pre[idx][j-1]) % M;\n            }\n        }\n\n        return (int)(dp[0][0] %M);\n    }\n};",
    "submit_ts": "1723347656",
    "subm_id": "1351603036"
}