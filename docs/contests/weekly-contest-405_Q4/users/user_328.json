{
    "username": "trchen",
    "submission": "struct Node {\n  int cost = numeric_limits<int>::max();\n  bool end = false;\n  vector<Node*> childs = vector<Node*>(26);\n};\n\nclass Solution {\n public:\n  void Build(Node* root, const string& s, int cost) {\n    Node* curr = root;\n    for (auto c : s) {\n      int val = c - 'a';\n      if (curr->childs[val] == nullptr) {\n        curr->childs[val] = new Node;\n      }\n      curr = curr->childs[val];\n    }\n    curr->cost = min(curr->cost, cost);\n    curr->end = true;\n  }\n\n  int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n    root = new Node;\n    for (int i = 0; i < words.size(); ++i) {\n      Build(root, words[i], costs[i]);\n    }\n    s = target;\n    int n = target.size();\n    ret = vector<int>(n, -1);\n    // cout << Table(4) << endl;\n    int ret = Table(0);\n    if (ret == numeric_limits<int>::max()) {\n      ret = -1;\n    }\n    return ret;\n  }\n\n  int Table(int m) {\n    if (m == s.size()) {\n      return 0;\n    }\n    if (ret[m] != -1) {\n      return ret[m];\n    }\n    ret[m] = numeric_limits<int>::max();\n    Node* curr = root;\n    for (int i = m; i < s.size(); ++i) {\n      // cout << i << ' ';\n      // cout << s[i] << ' ';\n      int val = s[i] - 'a';\n      if (curr->childs[val] == nullptr) {\n        // cout << \"Here \" << endl;\n        break;\n      }\n      curr = curr->childs[val];\n      if (curr->end) {\n        int cost = Table(i + 1);\n        if (cost != numeric_limits<int>::max()) {\n          ret[m] = min(ret[m], curr->cost + cost);\n        }\n      }\n    }\n    return ret[m];\n  }\n\n  string s;\n  Node* root;\n  vector<int> ret;\n};",
    "submit_ts": "1720322119",
    "subm_id": "1312341206"
}