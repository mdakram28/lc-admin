{
    "username": "erenaltunoglu",
    "submission": "constexpr int M = 100005;\nclass Solution {\npublic:\n    vector<int> adj[M];\n    int dist[M]{};\n    vector<int> ans;\n    void dfs(int node, int par) {\n        //dist[node] = 1;\n        for(auto a: adj[node]) {\n            if(a == par) continue;\n            dfs(a, node);\n            int w = (a % 2) ? 1 : 2;\n            dist[node] = max(dist[a] + w, dist[node]);\n            // dist[node] = max(dist[a], dist[node]);\n        }\n        // dist[node] += (node % 2) ? 1 : 2;\n    }\n\n    void solve(const int node, const int par, const int top) {\n        //dist[node] = 1;\n        multiset<int> All;\n        All.insert(top);\n        ans[node] = max(dist[node], top);\n        // printf(\"%d %d %d %d\\n\",node,dist[node],top,ans[node]);\n        for(auto a: adj[node]) {\n            if(a == par) continue;\n            int wn = (node % 2) ? 1 : 2;\n            int w = (a % 2) ? 1 : 2;\n            All.insert(dist[a] + w + wn);\n            // printf(\"--- %d %d\\n\",a,dist[a] + w + wn);\n        }\n\n        for(auto a: adj[node]) {\n            if(a == par) continue;\n            int wn = (node % 2) ? 1 : 2;\n            int w = (a % 2) ? 1 : 2;\n            {\n                auto it = All.find(dist[a] + w + wn);\n                All.erase(it);\n            }\n            int w2 = All.empty() ? 0 : *prev(All.end());\n                solve(a, node, max(top + wn, w2));\n            All.insert(dist[a] + w + wn);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int N = 0;\n        for(auto &edge : edges){\n            auto x = edge[0];\n            auto y = edge[1];\n            adj[x].push_back(y);\n            adj[y].push_back(x);\n            N = max(N, x);\n            N = max(N, y);\n        }\n        ans.resize(N+1);\n        dfs(0, -1);\n        solve(0, -1, 0);\n        return ans;\n    }\n};\n\n// [3,5,6,5,6]",
    "submit_ts": "1722698842",
    "subm_id": "1343193583"
}