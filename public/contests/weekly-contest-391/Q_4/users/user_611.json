{
    "username": "chroniclesofcode",
    "submission": "class Solution {\npublic:\n    vector<vector<int>> points;\n    int minimumDistance(vector<vector<int>>& points_) {\n        points = std::move(points_);\n        vector<array<int,2>> sm, df;\n        for (int i = 0; i < points.size(); i++) {\n            sm.push_back({points[i][0] + points[i][1], i});\n            df.push_back({points[i][0] - points[i][1], i});\n        }\n        sort(sm.begin(), sm.end());\n        sort(df.begin(), df.end());\n        vector<int> forbid;\n        forbid.push_back(sm.back()[1]);\n        forbid.push_back(sm.front()[1]);\n        forbid.push_back(df.back()[1]);\n        forbid.push_back(df.front()[1]);\n        int ans = INT_MAX;\n        for (auto f : forbid) {\n            sm.clear(); df.clear();\n            for (int i = 0; i < points.size(); i++) {\n                if (i == f) continue;\n                sm.push_back({points[i][0] + points[i][1], i});\n                df.push_back({points[i][0] - points[i][1], i});\n            }\n            sort(sm.begin(), sm.end());\n            sort(df.begin(), df.end());\n            ans = min(ans, max(sm.back()[0]-sm.front()[0], df.back()[0]-df.front()[0]));\n        }\n        return ans;\n    }\n};"
}