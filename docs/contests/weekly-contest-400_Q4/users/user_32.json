{
    "username": "friedall",
    "submission": "#include <iostream>\n#include <algorithm>\n#include <array>\n#define ll long long\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        ll n = nums.size(), f = 1e18, s;\n        vector <ll> bit[30];\n        vector <array<ll, 2>> V;\n        for (int i=n-1; i>=0; --i) {\n            f = min(f, (ll)abs(k-nums[i]));\n            for (int j=29; j>=0; --j) {\n                if (!(nums[i] & (1LL<<j))) {\n                    bit[j].push_back(i);\n                }\n            }\n        }\n        for (int i=0; i<n; ++i) {\n            V.clear();\n            for (int j=0; j<30; ++j) {\n                if (!bit[j].empty()) V.push_back({bit[j].back(), j});\n            }\n            sort(V.begin(), V.end());\n            s = (1LL<<30)-1;\n            for (int j=0; j<V.size(); ++j) {\n                s -= (1LL<<V[j][1]);\n                if (j != V.size()-1 && V[j][0] == V[j+1][0]) continue;\n                f = min(f, (ll)abs(k-s));\n            }\n            for (int j=29; j>=0; --j) {\n                if (!(nums[i] & (1LL<<j))) {\n                    bit[j].pop_back();\n                }\n            }\n        }\n        return f;\n    }\n};",
    "submit_ts": 1717296499.0
}