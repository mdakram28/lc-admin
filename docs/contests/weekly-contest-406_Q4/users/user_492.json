{
    "username": "max0123",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontal_cut, vector<int>& vertical_cut) {\n         vector<pair<ll, char>> cuts;\n\n   \n    for (ll i = 0; i < m - 1; ++i) {\n        cuts.push_back({horizontal_cut[i], 'h'});\n    }\n    for (ll i = 0; i < n - 1; ++i) {\n        cuts.push_back({vertical_cut[i], 'v'});\n    }\n\n   \n    sort(cuts.rbegin(), cuts.rend());\n\n    ll total_cost = 0;\n    ll h_pieces = 1; \n    ll v_pieces = 1; \n\n   \n    for (auto& cut : cuts) {\n        ll cost = cut.first;\n        char type = cut.second;\n\n        if (type == 'h') {\n            \n            total_cost += cost * v_pieces;\n            h_pieces++;\n        } else {\n           \n            total_cost += cost * h_pieces;\n            v_pieces++;\n        }\n    }\n\n    return total_cost;\n    }\n};",
    "submit_ts": "1720925575",
    "subm_id": "1320259283"
}