{
    "username": "singh_deopa",
    "submission": "class Solution {\n    void update(vector<int>& bit, int i, int val) {\n        for ( ; i < (int) bit.size(); i += (i & -i)) {\n            bit[i] += val;\n        }\n    }\n    \n    int get(vector<int>& bit, int i) {\n        int res = 0;\n        \n        for ( ; i > 0; i -= (i & -i)) {\n            res += bit[i];\n        }\n        \n        return res;\n    }\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = (int) nums.size();\n        vector<int> bit(n + 1);\n        vector<int> res;\n        \n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > max(nums[i - 1], nums[i + 1])) {\n                update(bit, i + 1, 1);\n            }\n        }\n        \n        for (auto& query: queries) {\n            if (query[0] == 1) {\n                int& l = query[1];\n                int& r = query[2];\n                int val = (l == r) ? 0 : get(bit, r) - get(bit, l + 1);\n                res.emplace_back(val);\n            }\n            else {\n                int& pos = query[1];\n                int& val = query[2];\n                \n                if (nums[pos] == val) {\n                    continue;\n                }\n                \n                if (pos > 1) {\n                    int tmp = 0;\n                    \n                    if (nums[pos - 1] > nums[pos - 2]) {\n                        if (nums[pos - 1] > nums[pos]) {\n                            tmp--;\n                        }\n                        \n                        if (nums[pos - 1] > val) {\n                            tmp++;\n                        }\n                    }\n                    \n                    if (tmp != 0) {\n                        // cout << pos << \" \" << tmp << \"\\n\";\n                        update(bit, pos, tmp);\n                    }\n                }\n                \n                if (pos < n - 2) {\n                    int tmp = 0;\n                    \n                    if (nums[pos + 1] > nums[pos + 2]) {\n                        if (nums[pos + 1] > nums[pos]) {\n                            tmp--;\n                        }\n                        \n                        if (nums[pos + 1] > val) {\n                            tmp++;\n                        }\n                    }\n                    \n                    if (tmp != 0) {\n                        // cout << pos + 2 << \" \" << tmp << \"\\n\";\n                        update(bit, pos + 2, tmp);\n                    }\n                }\n                \n                if (pos > 0 && pos < n - 1) {\n                    int tmp = 0;\n                    int mx_adj = max(nums[pos - 1], nums[pos + 1]);\n                    \n                    if (nums[pos] > mx_adj) {\n                        tmp--;\n                    }\n                    \n                    if (val > mx_adj) {\n                        tmp++;\n                    }\n                    \n                    if (tmp != 0) {\n                        // cout << pos + 1 << \" \" << tmp << \"\\n\";\n                        update(bit, pos + 1, tmp);\n                    }\n                }\n                \n                nums[pos] = val;\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1718506892.0
}