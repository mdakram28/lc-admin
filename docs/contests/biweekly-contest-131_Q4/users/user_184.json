{
    "username": "kt56698",
    "submission": "#Quick update, query for sum range only\n#The main idea is: every number n can be expressed as a sum of power of 2 elements\nfrom sortedcontainers import SortedList\nclass BIT:\n    def __init__(self, arr):\n        self.sums = arr[:] #size n + 1\n    \n    def update(self, i, delta):\n        while i < len(self.sums):\n            self.sums[i] = max(delta, self.sums[i])\n            i += i & (-i)\n    \n    def query(self, i):\n        res = 0\n        while i > 0:\n            res = max(self.sums[i], res)\n            i -= i & (-i)\n        return res\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        n = len(queries)\n\n        arr = SortedList([0])\n        # tree = BIT(5 * pow(10,4) + 1)\n        results = []\n        ''''''\n        for i in range(len(queries)):\n            if queries[i][0] == 1:\n                x = queries[i][1]\n                arr.add(x)\n        cur = 0\n        treeArr = [0] * (5 * pow(10,4) + 1)\n        for i in range(1,len(arr)):\n            cur = max(cur, arr[i] - arr[i-1])\n            treeArr[arr[i]] = cur\n        \n        # print('new test--------------------------')\n        # print(treeArr[:10])\n        tree = BIT(treeArr)\n        for i in range(len(queries)-1,-1,-1):\n            x = queries[i][1]\n            if queries[i][0] == 1:\n                \n                j = arr.bisect_right(x)\n                tree.update(x,0)\n                if j < len(arr): #something to its right\n                    tree.update(arr[j], arr[j] - arr[j-2])\n                arr.remove(x)\n            else:\n                sz = queries[i][2]\n                nearestBlock = arr.bisect_right(x)\n                bloc = arr[nearestBlock-1]\n                curMaxDist = tree.query(bloc)\n                curAns = max(curMaxDist, x - bloc)\n                # print(f'type 2: {(x, curMaxDist)}')\n                results.append(curAns >= sz)\n                \n        return results[::-1]",
    "submit_ts": 1716650903.0
}