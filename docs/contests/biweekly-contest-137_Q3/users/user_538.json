{
    "username": "Prince",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& b) {\n        using ll = long long;\n        int m = b.size();\n        int n = b[0].size();\n        vector<vector<int>> all;\n        for (int i = 0; i < m; ++i) {\n            vector<pair<int,int>> tmp(n);\n            for (int j = 0; j < n; ++j) {\n                tmp[j] = make_pair(b[i][j], j);\n            }\n            // sort(tmp.rbegin(), tmp.rend());\n            for (int j = 0; j < 3; ++j) {\n                for (int k = n-1; k > j; --k) {\n                    if (tmp[k].first > tmp[k-1].first) {\n                        pair<int,int> tp = tmp[k];\n                        tmp[k] = tmp[k-1];\n                        tmp[k-1] = tp;\n                    }\n                }\n            }\n            for (int k = 0; k < 3; ++k) {\n                all.push_back({tmp[k].first, i, tmp[k].second});\n            }\n        }\n        auto sf = [](vector<int>&a,vector<int>&b) -> bool {\n            return a[0] > b[0];\n        };\n        sort(all.begin(), all.end(), sf);\n        // int allsize = all.size();\n        int allsize = 0;\n        set<int> iis,jjs;\n        int cnt = 0;\n        for (; allsize < all.size() && cnt <= 3; ++allsize) {\n            int i = all[allsize][1];\n            int j = all[allsize][2];\n            if (!iis.count(i) && !jjs.count(j)) {\n                iis.insert(i);\n                jjs.insert(j);\n                ++cnt;\n            }\n        }\n        ll res = LONG_MIN;\n        set<int> is, js;\n        for (int i = 0; i < allsize; ++i) {\n            is.insert(all[i][1]);\n            js.insert(all[i][2]);\n            for (int j = i + 1; j < allsize; ++j) {\n                if (is.count(all[j][1]) || js.count(all[j][2])) continue;\n                is.insert(all[j][1]);\n                js.insert(all[j][2]);\n                for (int k = j + 1; k < allsize; ++k) {\n                    if (is.count(all[k][1]) || js.count(all[k][2])) continue;\n                    res = max(res, 1LL * all[i][0] + all[j][0] + all[k][0]);\n                }\n                is.erase(all[j][1]);\n                js.erase(all[j][2]);\n            }\n            is.erase(all[i][1]);\n            js.erase(all[i][2]);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1723908515",
    "subm_id": "556331340"
}