{
    "username": "ToTea",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        long long ans = numeric_limits<long long>::min();\n        unordered_map<int, set<pair<int,int>>>  rowValCol;\n        for (int i = 0; i < board.size(); ++i) {\n            for (int j = 0; j < board[0].size(); ++j) {\n                rowValCol[i].insert({board[i][j], j});\n            }\n        }\n        for (const auto& [row1, valCol1] : rowValCol) {\n            int val1 = valCol1.rbegin()->first;\n            int col1 = valCol1.rbegin()->second;        \n            for (const auto& [row2, valCol2] : rowValCol) {\n                if (row2 == row1) continue;\n                auto it2 = valCol2.rbegin();\n                if (it2->second == col1) ++it2;\n                if (it2 == valCol2.rend()) continue;\n                int val2 = it2->first;\n                int col2 = it2->second;\n                for (const auto& [row3, valCol3] : rowValCol) {\n                    if (row3 == row2 || row3 == row1) continue;\n                    auto it3 = valCol3.rbegin();\n                    if (it3->second == col1 || it3->second == col2) ++it3;\n                    if (it3 == valCol3.rend()) continue;\n                    if (it3->second == col1 || it3->second == col2) ++it3;\n                    if (it3 == valCol3.rend()) continue;\n                    int val3 = it3->first;\n                    long long cur = 0ll + val1 + val2 + val3;\n                    ans = max(ans, cur);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723910161",
    "subm_id": "1359219643"
}