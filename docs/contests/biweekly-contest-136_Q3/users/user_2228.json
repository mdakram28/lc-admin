{
    "username": "LogicalCat",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        vis = defaultdict(bool)\n        tot = 0\n        op1 = op2 = op4 = 0\n        for i in range(m):\n            for j in range(n):\n                if (i, j) in vis: continue\n                vis[(i, j)] = True\n                size = 1\n                cur = grid[i][j]\n                if n - 1 - j != j:  #\u53f3\u8fb9\n                    vis[(i, n-1-j)] = True\n                    size += 1\n                    cur += grid[i][n-1-j]\n                if m - 1 - i != i: #\u4e0b\u8fb9\n                    size += 1\n                    vis[(m-1-i, j)] = True\n                    cur += grid[m-1-i][j]\n                if n-1-j!=j and m-1-i!=i:\n                    size += 1\n                    vis[(m-1-i, n-1-j)] = True\n                    cur += grid[m-1-i][n-1-j]\n                if size == 4: \n                    op4 += min(cur, 4-cur)\n                if size == 2:\n                    op2 += min(cur, 2-cur)\n                    if cur != 0: tot += 2\n                if size == 1: op1 += cur\n        if tot % 4 == 0: return op1 + op2 + op4\n        if op2: return op1 + op2 + op4\n        return op1 + op2 + op4 + 2\n                    ",
    "submit_ts": "1722700039",
    "subm_id": "552278154"
}