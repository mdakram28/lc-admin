{
    "username": "ak_omega",
    "submission": "class BIT {\n    vector<int> tree;\n\npublic:\n    BIT(int n) {\n        tree.resize(n);\n    }\n\n    void add(int i, int v) {\n        while (i < tree.size()) {\n            tree[i] += v;\n            i += i & -i;\n        }\n    }\n\n    int pre(int i) {\n        int res = 0;\n        while (i > 0) {\n            res += tree[i];\n            i &= i - 1;\n        }\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        BIT tt(n + 1);\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) tt.add(i + 1, 1);\n        }\n\n        function<bool(int, int)> ok = [&](int idx, int val) -> bool {\n            if (idx <= 0 || idx >= n - 1) return false;\n            if (val > nums[idx - 1] && val > nums[idx + 1]) return true;\n            return false;\n        };\n\n        vector<int> ans;\n        for (auto& qs: queries) {\n            int op = qs[0], x = qs[1], y = qs[2];\n            if (op == 1) {\n                ans.push_back(max(0, tt.pre(y) - tt.pre(x + 1)));\n            }\n            else {\n                int old = nums[x];\n                bool a, b;\n                if (x > 0 && x < n - 1) {\n                    a = ok(x, nums[x]);\n                    b = ok(x, y);\n                    if (a && !b) tt.add(x + 1, -1);\n                    else if (!a && b) tt.add(x + 1, 1); \n                }\n                if (x - 1 > 0 && x - 1 < n - 1) {\n                    a = ok(x - 1, nums[x - 1]);\n                    nums[x] = y;\n                    b = ok(x - 1, nums[x - 1]);\n                    nums[x] = old;\n                    if (a && !b) tt.add(x, -1);\n                    else if (!a && b) tt.add(x, 1);\n                }\n                if (x + 1 > 0 && x + 1 < n - 1) {\n                    a = ok(x + 1, nums[x + 1]);\n                    nums[x] = y;\n                    b = ok(x + 1, nums[x + 1]);\n                    nums[x] = old;\n                    if (a && !b) tt.add(x + 2, -1);\n                    else if (!a && b) tt.add(x + 2, 1);\n                }\n                nums[x] = y;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718509160.0
}