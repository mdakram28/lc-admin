{
    "username": "CodeRover",
    "submission": "\nint f(vector<pair<int, int>>& A, int N)\n{\n    int minsum, maxsum, mindiff, maxdiff;\n \n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n    for (int i = 1; i < N; i++) {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum)\n            minsum = sum;\n        else if (sum > maxsum)\n            maxsum = sum;\n        if (diff < mindiff)\n            mindiff = diff;\n        else if (diff > maxdiff)\n            maxdiff = diff;\n    }\n \n    int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n    return maximum;\n}\n\n\n#define pii pair<int,int>\n\npair<int,int> MaxDist(vector<pair<int, int> >& A, int N)\n{\n    vector<pii> V(N), V1(N);\n \n    for (int i = 0; i < N; i++)\n    {\n        V[i] = {A[i].first + A[i].second,i};\n        V1[i] = {A[i].first - A[i].second,i};\n    }\n \n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    int maximum = V.back().first - V.front().first;\n    int a = V.back().second , b = V.front().second;\n    \n    int two = V1.back().first - V1.front().first;\n    if(two > maximum)\n    {\n        maximum = two;\n        a = V1.front().second;\n        b = V1.back().second;\n    }\n \n    return {a,b};\n}\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& vv)\n    {\n        \n        int n = (int)vv.size();\n        vector<pii> v; for(auto i:vv) v.push_back({i[0],i[1]});\n        pii p = MaxDist(v, n);\n        \n        vector< pair<int,int> > F;\n        for(int i=0;i<n;i++) if(i!=p.first) F.push_back({vv[i][0],vv[i][1]});\n        int mx = f(F,n-1);\n        \n        vector< pair<int,int> > S;\n        for(int i=0;i<n;i++) if(i!=p.second) S.push_back({vv[i][0],vv[i][1]});\n        int mx2 = f(S,n-1);\n        \n        return min({ mx , mx2 });\n    }\n};"
}