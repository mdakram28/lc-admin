{
    "username": "youx",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long cols = 1;\n        long long rows = 1;\n\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        int hptr = 0;\n        int vptr = 0;\n\n        long long sol = 0;\n\n        for (int i=0;i<n+m-2;i++){\n            if (hptr == m - 1){\n                sol += (rows) * verticalCut[vptr++];\n                cols++;\n            }\n            else if (vptr == n - 1){\n                sol += (cols) * horizontalCut[hptr++];\n                rows++;\n            }\n            else{\n                if (horizontalCut[hptr]<verticalCut[vptr]){\n                    sol += (rows) * verticalCut[vptr++];\n                    cols++;\n                }\n                else{\n                    sol += (cols) * horizontalCut[hptr++];\n                    rows++;\n                }\n            }\n        }\n\n        return sol;\n    }\n};",
    "submit_ts": "1720925753",
    "subm_id": "1320265100"
}