{
    "username": "hancker",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        int ansi = 0;\n        \n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ansi += 1;\n            }\n        }\n\n        vector<int> sh(3, 0);\n        if (n % 2 == 1) {\n            int a = 0, b = m - 1;\n            while (a < b) {\n                int sm = grid[n / 2][a] + grid[n / 2][b];\n                sh[sm] += 1;\n                a += 1;\n                b -= 1;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int x = 0;\n            int y = n - 1;\n            while (x < y) {\n                int sm = grid[x][m / 2] + grid[y][m / 2];\n                sh[sm] += 1;\n                x += 1;\n                y -= 1;\n            }\n        }\n\n\n\n        if (sh[2] % 2 == 1) {\n            if (sh[1] > 0) {\n                ansi += sh[1];\n            } else {\n                ansi += 2;\n            }\n        } else {\n            ansi += sh[1];\n        }\n\n\n\n        for (int i = 0; i < n / 2; i++) {\n\n            for (int j = 0; j < m / 2; ++j) {\n\n                int g = grid[i][j];\n                int h=grid[n - 1 - i][j];\n                int q= grid[i][m - 1 - j];\n                int w = grid[n - 1 - i][m - 1 - j];\n\n                int ss = g+h+q+w;\n\n                if (ss!= 0 && ss != 4) {\n                    ansi += min(ss, 4 - ss);\n                }\n            }\n        }\n\n        return ansi;\n    }\n};     ",
    "submit_ts": "1722700050",
    "subm_id": "1343230172"
}