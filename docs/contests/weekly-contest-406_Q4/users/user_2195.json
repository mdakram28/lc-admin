{
    "username": "hjg-o",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        m, n = len(horizontalCut), len(verticalCut)\n        horizontalCut.sort()\n        verticalCut.sort()\n        res = 0\n        while horizontalCut and verticalCut:\n            hfirstcost = (n - len(verticalCut) + 1) * horizontalCut[-1] + (m - len(horizontalCut) + 2) * verticalCut[-1]\n            vfirstcost = (m - len(horizontalCut) + 1) * verticalCut[-1] + (n - len(verticalCut) + 2) * horizontalCut[-1]\n            if hfirstcost < vfirstcost:\n                res += (n - len(verticalCut) + 1) * horizontalCut[-1]\n                horizontalCut.pop()\n            else:\n                res += (m - len(horizontalCut) + 1) * verticalCut[-1]\n                verticalCut.pop()\n        tocut = horizontalCut if horizontalCut else verticalCut\n        k = n if horizontalCut else m\n        return res + sum(tocut) * (k + 1)",
    "submit_ts": "1720926391",
    "subm_id": "546445955"
}