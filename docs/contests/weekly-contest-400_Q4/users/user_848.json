{
    "username": "jayjariwala10125",
    "submission": "class Solution {\npublic:\nstruct seg\n{\n    vector<int> v;\n    vector<int> tree;\n    vector<int> lazy;\n    seg(vector<int>&arr)\n    {\n        v = arr;\n        vector<int> dummy1(4 * v.size());\n        vector<int> dummy2(4 * v.size());\n        tree = dummy1;\n        lazy = dummy2;\n    }\n    void build(int node,int start,int end){\n        if(start==end){\n            tree[node]=v[start];\n        }\n        else{\n            int mid = (start+end)/2;\n            build(node*2,start,mid);\n            build(node*2+1,mid+1,end);\n            tree[node] = tree[node*2] & tree[node*2+1];\n        }\n    }\n    int query(int node, int start, int end, int l, int r)\n    {\n        if (start > r || end < l)\n        {\n            return INT_MAX;\n        }\n        if (start == end)\n        {\n            return tree[node];\n        }\n        else if (start >= l && end <= r)\n        {\n            return tree[node];\n        }\n        else\n        {\n            int mid = (start + end) / 2;\n            int left = query(node * 2, start, mid, l, r);\n            int right = query(node * 2 + 1, mid + 1, end, l, r);\n            return left & right;\n        }\n    }\n};\n    int minimumDifference(vector<int>& arr, int k) {\n        int n = arr.size();\n        seg se = seg(arr);\n        se.build(1,0,n-1);\n        int sol = INT_MAX;\n        for (int i = 0;i<n;i++) {\n            int low = i-1;\n            int high = n-1;\n            while (high>(1+low)) {\n                int mid = (low + high) / 2;\n                int x = se.query(1,0,n-1,i, mid);\n                if ( x >= k){\n                    low = mid;\n                }\n                else\n                    high = mid;\n            }\n            if (low!=(i - 1)){\n                sol = min(sol, abs(se.query(1,0,n-1,i, low) - k));\n                sol = min(sol, abs(k - se.query(1,0,n-1,i, high)));\n            }\n            else{\n                sol = min(sol, abs(k - se.query(1,0,n-1,i, high)));\n            }\n        }\n        return sol;\n    }\n};",
    "submit_ts": "1717300136",
    "subm_id": "1274834851"
}