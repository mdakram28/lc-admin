{
    "username": "kircle",
    "submission": "class Solution {\npublic:\n  int area(int lb, int rb, int ub, int db, vector<vector<int>> &grid) {\n    int l = INT_MAX, r = 0, u = INT_MAX, d = 0;\n    for (int j = lb; j < rb; j++) {\n      for (int i = ub; i < db; i++) {\n        if (grid[i][j] == 1) {\n          l = std::min(l, j);\n          r = std::max(r, j);\n          u = std::min(u, i);\n          d = std::max(d, i);\n        }\n      }\n    }\n    // printf(\"%d %d %d %d || %d %d %d %d\\n\", l, r, u, d, lb, rb, ub, db);\n    if (l == INT_MAX) {\n      return INT_MAX / 4;\n    }\n    // printf(\"%d\\n\", (d - u + 1) * (r - l + 1));\n    return (d - u + 1) * (r - l + 1);\n  }\n  int minimumSum(vector<vector<int>> &grid) {\n    int m = grid.size(), n = grid[0].size();\n    int ret = m * n;\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < i; j++) {\n        int v = area(0, n, 0, j, grid) + area(0, n, j, i, grid) +\n                area(0, n, i, m, grid);\n        ret = std::min(ret, v);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < i; j++) {\n        int v = area(0, j, 0, m, grid) + area(j, i, 0, m, grid) +\n                area(i, n, 0, m, grid);\n        ret = std::min(ret, v);\n      }\n    }\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < n; j++) {\n        int v = area(0, j, 0, i, grid) + area(j, n, 0, i, grid) +\n                area(0, n, i, m, grid);\n        ret = std::min(ret, v);\n        v = area(0, j, i, m, grid) + area(j, n, i, m, grid) +\n            area(0, n, 0, i, grid);\n        ret = std::min(ret, v);\n        v = area(j, n, 0, i, grid) + area(j, n, i, m, grid) +\n            area(0, j, 0, m, grid);\n        ret = std::min(ret, v);\n        v = area(0, j, 0, i, grid) + area(0, j, i, m, grid) +\n            area(j, n, 0, m, grid);\n        ret = std::min(ret, v);\n      }\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1719112559",
    "subm_id": "541392999"
}