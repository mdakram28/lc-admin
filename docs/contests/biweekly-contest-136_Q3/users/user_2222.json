{
    "username": "VIkkY53",
    "submission": "class Solution {\npublic:\n    bool isValid(int i, int j, int n, int m) {\n        return (i >= 0 && i < n) && (j >= 0 && j < m);\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        // for (auto x: grid) {\n        //     for (auto y: x) {\n        //         cout << y << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int z = 0;\n                int o = 0;\n                int ri = (n - 1) - i;\n                int dj = (m - 1) - j;\n                if (isValid(ri, j, n, m) && (ri != i)) {\n                    o += grid[ri][j] == 1;\n                    z += grid[ri][j] == 0;\n                }\n                if (isValid(i, dj, n, m) && (j != dj)) {\n                    o += grid[i][dj] == 1;\n                    z += grid[i][dj] == 0;\n                }\n                if (isValid(ri, dj, n, m)) {\n                    o += grid[ri][dj] == 1;\n                    z += grid[ri][dj] == 0;\n                }\n                o += grid[i][j] == 1;\n                z += grid[i][j] == 0;\n                ans += min(o, z);\n            }\n        }\n        // cout << \"ans: \" << ans << endl;\n                    int o = 0;\n            int z = 0;\n            int un = 0;\n        if (n & 1) {\n            int i = n / 2;\n\n            for (int j = 0; j < m / 2; j++) {\n                int dj = (m - 1) - j;\n                if (grid[i][j] != grid[i][dj]) {\n                    un++;\n                } else {\n                    o += grid[i][j] == 1;\n                    z += grid[i][j] == 0;\n                }\n            }\n        }\n        if (m & 1) {\n            int j = m / 2;\n            for (int i = 0; i < n / 2; i++) {\n                int ri = (n - 1) - i;\n                if (grid[i][j] != grid[ri][j]) {\n                    un++;\n                } else {\n                    o += grid[i][j] == 1;\n                    z += grid[i][j] == 0;\n                }\n            }\n\n        }\n        if (n & 1 || m & 1) {\n                        int no = o * 2;\n            if (no % 4 == 0) {\n                ans += un;\n            } else {\n                if (un >= 1) {\n                    ans += un;\n                } else {\n                    ans += 2 + un;\n                }\n            }\n        }\n                // cout << \"ans: \" << ans << endl;\n\n        return ans + ((n & 1) && (m & 1) && (grid[n / 2][m / 2] == 1));\n    }\n};",
    "submit_ts": "1722698831",
    "subm_id": "1343193215"
}