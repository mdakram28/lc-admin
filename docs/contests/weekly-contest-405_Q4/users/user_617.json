{
    "username": "hoanghonghieu",
    "submission": "class TrieNode {\npublic:\n    TrieNode() : mCost(INT_MAX) {\n        \n    };\n    \n    void add(const string& s, int cost, int i=0) {\n        if (i == s.size()) {\n            mCost = min(cost, mCost);\n        } else {\n            size_t childIdx  = s[i] - 'a';\n            if (childs[childIdx] == nullptr) {\n                childs[childIdx] = new TrieNode();\n            }\n            childs[childIdx]->add(s, cost, i + 1);\n        }\n    }\n\n\tvoid print(string prefix=\"\")\n    {\n        cout << prefix << endl;\n        for (int i = 0; i < 26; i++)\n        {\n            if (childs[i] != nullptr)\n            {\n                childs[i]->print(prefix + char('a' + i));\n            }\n        }\n    }\n    int mCost;\n    TrieNode* childs[26] = {};\n\n    void travel(string& s, int si /* 0-indexed */, vector<int>& buffer /* 1-indexed */, int prevCost) {\n        if (s.size() <= si) return;\n    \n        if (childs[s[si] - 'a'] != nullptr) {\n            if (childs[s[si] - 'a']->mCost != INT_MAX) {\n                int curCost = childs[s[si] - 'a']->mCost + prevCost;\n                if (buffer[si + 1] == - 1)\n                    buffer[si + 1] = curCost;\n                else {\n                    buffer[si + 1] = min(buffer[si + 1], curCost);\n                }\n            }\n            childs[s[si] - 'a']->travel(s, si + 1, buffer, prevCost);\n        }\n    } \n};\n\nclass Solution {\npublic:\n    TrieNode root;\n    void buildTree(TrieNode& root, vector<string>& words, vector<int>& costs) {\n        for (int i = 0; i < words.size();i++) {\n            root.add(words[i], costs[i]);\n        }\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        buildTree(root, words, costs);\n        vector<int> buffer(target.size() + 1, -1);\n        buffer[0] = 0;\n        for (int i = 1; i <= target.size(); i++) {\n            if (buffer[i - 1] == -1) continue;\n            root.travel(target, i - 1, buffer, buffer[i - 1]);\n        }\n        return buffer.back(); \n    }\n};",
    "submit_ts": "1720322862",
    "subm_id": "1312361018"
}