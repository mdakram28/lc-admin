{
    "username": "gauravSahitya",
    "submission": "#define vt vector<Trie*>\n#define ll long long\n#define vi vector<ll>\nclass Trie {\npublic:\n    vt next;\n    int cost;\n    Trie() {\n        next = vt(26, NULL);\n        cost = -1;\n    }\n    void insert(string &s, int pos, int c) {\n        if (pos == s.size()) {\n            cost = (cost != -1) ? min(c, cost) : c;\n            return;\n        }\n        if (!next[s[pos]-'a']) {\n            next[s[pos]-'a'] = new Trie();\n        }\n        next[s[pos]-'a']->insert(s, pos+1, c);\n    }\n    ll minCost(string &t, int pos, Trie * trie, vi &dp) {\n        if (pos==t.size()) {\n            return 0;\n        }\n        if (dp[pos] != INT_MIN) {\n            return dp[pos];\n        }\n        int x = pos;\n        ll ret = INT_MAX;\n        ret++;\n        auto newTrie = next[t[pos]-'a'];\n        pos++;\n        while (newTrie) {\n            if (newTrie->cost != -1) {\n                // cout<<newTrie->cost<<\" \"<<ret<<\"   \";\n                ret = min(ret, newTrie->cost + trie->minCost(t, pos, trie, dp));\n                // cout<<newTrie->cost<<\" \"<<trie->minCost(t, pos, trie, dp)<<\"   \";\n            }\n            newTrie = pos<t.size() ? newTrie->next[t[pos]-'a'] : NULL;\n            pos++;\n        }\n        // cout<<x<<\" \"<<ret<<\"   \";\n        // if (ret > INT_MAX) {\n        //     ret = -1;\n        // }\n        return dp[x] = ret;\n\n    }\n};\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        auto trie = new Trie();\n        vi dp(target.size(), INT_MIN);\n        for (int i=0; i<words.size(); i++) {\n            trie->insert(words[i], 0, costs[i]);\n        }\n        ll ret = trie->minCost(target, 0, trie, dp);\n        if (ret>INT_MAX) {\n            return -1;\n        }\n        return ret;\n\n    }\n};",
    "submit_ts": "1720323625",
    "subm_id": "1312380092"
}