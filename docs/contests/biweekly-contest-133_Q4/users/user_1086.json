{
    "username": "Assassin003",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r){\n        long long count = 1, ans = 0, x = 0, p = 0;\n        map<long long, long long>mp;\n        for (int i = 0; i<r.size(); i++){\n            r[i][0]++;\n            mp[r[i][0]] = r[i][1];\n        }\n        vector<vector<long long>> dp(n+1, vector<long long>(401, 0));\n        dp[0][0] = 1;\n        while (count<=n) {\n            x = 0;\n            while (true) {\n                int y = 0;\n                while (true) {\n                    if (x-y >= 0) {\n                        dp[count][x] += dp[count-1][x-y];\n                        dp[count][x] %= ((long long)1e9+7);\n                    }\n                    y++;\n                    if(y == count){\n                        break;\n                    }\n                }\n                x++;\n                if(x==401){\n                    x = 0;\n                    break;\n                }\n            }\n            if (mp.count(count) > 0) {\n                while(true) {\n                    if (x != mp[count]) {\n                        dp[count][x] = 0;\n                    }\n                    x++;\n                    if(x==401){\n                        x = 0;\n                        break;\n                    }\n                }\n            }\n            count++;\n        }\n        while (true){\n            ans = (ans + dp[n][p]) % ((long long)1e9+7);\n            p++;\n            if(p==401){\n                break;\n            }\n        }\n        return ans;\n        }\n};",
    "submit_ts": "1719071975",
    "subm_id": "1296858375"
}