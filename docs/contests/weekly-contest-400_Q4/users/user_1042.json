{
    "username": "FantasticoneSahil",
    "submission": "#define ll long long\n#define INF 1e9+18\nclass Solution {\npublic:\nclass SegmentTree {\npublic:\n    vector<int> t;\n    int n;\n    SegmentTree(vector<int>& arr)\n    {\n        n = arr.size();\n        t.resize(4 * n);\n        build( 1, 0, n - 1,arr);\n    }\n\n    void build(int index,int l,int r,vector<int>& arr){\n    if(l==r){\n        t[index]=(arr[l]);\n        return;\n    }\n    int mid=(l+r)/2;\n    build(index*2,l,mid,arr);\n    build(index*2+1,mid+1,r,arr);\n    t[index]=(t[index*2]&t[index*2+1]);\n    \n    }\n\n\n    ll query(int l, int r)\n    {\n        return query(1, 0, n - 1, l, r);\n    }\n\n    ll query(int index, int l, int r, int lq, int rq)\n    {\n    if(l>rq || lq>r) return (1ll<<32)-1;\n    if(lq<=l &&r<=rq){\n        return t[index];\n    }\n    int mid=(l+r)/2;\n    return (query(index*2,l,mid,lq,rq)&query(index*2+1,mid+1,r,lq,rq));\n\n    }\n};\n// ll t[400400];\n\n\nint minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        ll ans = 1e18;\n        SegmentTree seg(nums);\n\n        for (int i = 0; i < n; i++) {\n        \n            ll lo=i-1;\n            ll hi=n-1;\n            ll mid;\n            while(hi-lo>1){\n                ll mid=(lo+hi)/2;\n                ll x=seg.query(i,mid);\n                if(x>=k){\n                    lo=mid;\n                }else{\n                    hi=mid;\n                }\n            }\n        \n        if (lo != i - 1)\n            ans = min(ans, abs(seg.query(i, lo) - k));\n        ans = min(ans, abs(seg.query(i, hi)-k));\n    }\n        return ans;\n    }\n};",
    "submit_ts": "1717300679",
    "subm_id": "1274851577"
}