{
    "username": "gaurav_4363",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n       int n=grid.size();\n       int m=grid[0].size();\n\n      int ans=0;\n\n       for(int i=0;i<n/2;i++)\n       {\n            for(int j=0;j<m/2;j++)\n            {\n                // cout<<\"(\"<<i<<\",\"<<j<<\")\"<<\" \";\n                int count=grid[i][j]+grid[n-i-1][j]+grid[i][m-1-j]+grid[n-i-1][m-1-j];\n                ans+=min(count,4-count);\n            }\n       }\n        int x=0;\n        int one=0;\n       if(n%2)\n       {\n            for(int j=0;j<m/2;j++)\n            {\n                if(grid[n/2][j]!=grid[n/2][m-j-1])\n                {\n                    x++;\n                }\n                else if(grid[n/2][j]==1)\n                    one+=2;\n            }\n       }\n\n       if(m%2)\n       {\n            for(int j=0;j<n/2;j++)\n            {\n                if(grid[j][m/2]!=grid[n-1-j][m/2])\n                {\n                    x++;\n                }\n                else if(grid[j][m/2]==1)\n                    one+=2;\n            }\n       }\n       int temp=0;\n    //    cout<<one<<endl;\n    //     cout<<x;\n        if(x==0)\n            temp+=(one%4);\n        temp+=(n%2 and m%2 and grid[n/2][m/2])?1:0;\n       return ans+x+temp;\n    }\n};",
    "submit_ts": "1722697989",
    "subm_id": "1343165973"
}