{
    "username": "gcasd001-e",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ull unsigned long long int\n#define db double\n#define ldb long double\n#define int128 __int128_t\n#define fr(x) freopen(x,\"r\",stdin);\n#define fw(x) freopen(x,\"w\",stdout);\n#define mst(x,a) memset(x,a,sizeof(x));\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fi first\n#define se second\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define yes std::cout << \"Yes\\n\"\n#define no std::cout << \"No\\n\"\n#ifdef LOCAL\n#include \"leetcode.h\"\n#endif // LOCAL\ntemplate <typename T> int si(const T &x) { return x.size(); }\ntemplate <typename T, typename S> inline bool chmax(T &a, const S &b) { if (a < b) { a = b; return true; } return false; }\ntemplate <typename T, typename S> inline bool chmin(T &a, const S &b) { if (b < a) { a = b; return true; } return false; }\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n      int n = si(colors);\n      int ans = 0;\n      for (int i = 0; i < n; i++) colors.push_back(colors[i]);\n      set<int> st;\n      for (int i = 1; i < k - 1; i++) {\n        if (colors[i] == colors[i-1] || colors[i] == colors[i+1]) st.insert(i);\n      }\n      ans += st.empty();\n      for (int i = 1; i < n; i++) {\n        int j = i + k - 2;\n        if (st.count(i)) st.erase(i);\n        if (colors[j] == colors[j-1] || colors[j] == colors[j+1]) st.insert(j);\n        ans += st.empty();\n      }\n      return ans;\n    }\n};\n",
    "submit_ts": "1720277155",
    "subm_id": "544554840"
}