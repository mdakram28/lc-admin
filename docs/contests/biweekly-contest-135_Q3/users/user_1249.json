{
    "username": "ravishankar03",
    "submission": "class Solution {\n    vector<int> l;\n    int help(vector<int>& nums,int num,int k){\n        int i=0,n=l.size();\n        while(i<n && l[i]<num)i++;\n        return (i+1)*2+(n-i-2);\n    }\npublic:\n    int minChanges(vector<int>& nums, int q) {\n        unordered_map<int,int> mp;\n        l=vector<int>(nums.size()/2,0);\n        int n=nums.size();\n        int i=0,j=n-1;\n        while(i<j){\n            mp[abs(nums[i]-nums[j])]++;\n            l[i]=max({abs(nums[i]),abs(nums[j]),abs(nums[i]-q),abs(nums[j]-q)});\n            i++;\n            j--;\n        }\n        sort(l.begin(),l.end());\n        int mi=INT_MAX;\n        for(auto k:mp){\n            mi=min(mi,help(nums,k.first,q)-k.second);\n        }return mi;\n    }\n};",
    "submit_ts": "1721489605",
    "subm_id": "1327458337"
}