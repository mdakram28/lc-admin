{
    "username": "abhishek21ee10003kgp",
    "submission": "class Solution(object):\n    def rec(self, x, y, grid, vis):\n        m, n = len(grid), len(grid[0])\n        st = set()\n        st.add((x, y))\n        sum_val = grid[x][y]\n        \n        if (x, n - 1 - y) not in st:\n            sum_val += grid[x][n - 1 - y]\n            st.add((x, n - 1 - y))\n        \n        if (m - 1 - x, y) not in st:\n            sum_val += grid[m - 1 - x][y]\n            st.add((m - 1 - x, y))\n        \n        if (m - 1 - x, n - 1 - y) not in st:\n            sum_val += grid[m - 1 - x][n - 1 - y]\n            st.add((m - 1 - x, n - 1 - y))\n        \n        for a, b in st:\n            vis[a][b] = 1\n        \n        return (len(st), sum_val)\n    \n    def minFlips(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"\n        m, n = len(grid), len(grid[0])\n        vis = [[0] * n for _ in range(m)]\n        ans = 0\n        tot1, tot2 = 0, 0\n        \n        for i in range(m):\n            for j in range(n):\n                if vis[i][j]:\n                    continue\n                \n                size, sum_val = self.rec(i, j, grid, vis)\n                \n                if size == 2:\n                    if sum_val == 1:\n                        ans += 1\n                        tot1 += 1\n                    if sum_val == 2:\n                        tot2 += 1\n                \n                if size == 4:\n                    if sum_val == 1 or sum_val == 3:\n                        ans += 1\n                    if sum_val == 2:\n                        ans += 2\n        \n        if tot2 % 2 == 1:\n            if tot1 == 0:\n                ans += 2\n        \n        if m % 2 == 1 and n % 2 == 1:\n            if grid[m // 2][n // 2] == 1:\n                ans += 1\n        \n        return ans\n",
    "submit_ts": "1722699703",
    "subm_id": "1343219731"
}