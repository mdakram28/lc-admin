{
    "username": "Aadarsh_Mishra",
    "submission": "class Solution {\npublic:\n\n    int windand(int a,int b , vector<vector<int>> &bitts){\n\n           int x = 0;\n            for (int i = 0; i < 32; i++) {\n                int v = (bitts[b + 1][i] - bitts[a][i]);\n                if (v== (b-a+1))\n                    x += (1 << i);\n            \t}\n\n                return x;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> bitts;\n        bitts.resize(n + 1, vector<int>(32, 0));\n\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < 32; j++)\n                bitts[i + 1][j] = bitts[i][j] + ((nums[i] >> j) & 1);\n\n            int ans=abs(k-nums[0]);\n\n            for(int i=0;i<n;i++){\n                \n                    int s = i;\n                    int e = n-1;\n\n                    while(s<=e){\n                        //cout<<s<<\" \"<<e<<endl;\n                        int mid = s+(e-s)/2;\n                        int andval = windand(i,mid,bitts);\n                        if(andval>k){\n                            s=mid+1;\n                            ans=min(ans,abs(k-andval));\n                        }\n                        else if(andval<k){\n                            e=mid-1;\n                            ans=min(ans,abs(k-andval));\n                        }\n                        else return 0;\n                    }\n\n\n            }\n\n\n            return ans;\n        \n    }\n};",
    "submit_ts": "1717299850",
    "subm_id": "1274825881"
}