{
    "username": "Mohd Adil",
    "submission": "class Solution {\npublic:\n//     long long maximumValueSum(vector<vector<int>>& mat) {\n        \n//         long long ans = -1e9;\n//         int n = mat.size();\n//         map<int,vector<pair<int,int>>> mp;\n//         for(int i=0;i<n;i++){\n//             vector<pair<int,int>> temp;\n//             for(int j=0;j<n;j++){\n//                 temp.push_back({mat[i][j],j});\n//             }\n//             sort(temp.begin(),temp.end());\n//             reverse(temp.begin(),temp.end());\n//             mp[i]=temp;\n//         }\n//         for(int i=0;i<n;i++){\n//             for(int j=i+1;j<n;j++){\n//                 for(int k=j+1;k<n;k++){\n//                     {\n//                         int ind1 = mp[i][0].second;\n//                         int ind2 = (ind1==mp[j][0].second?mp[j][1].second:mp[j][0].second);\n//                         int ind3;\n//                         for(int l=0;l<3;l++){\n//                             if(mp[k][l].second!=ind1 && mp[k][l].second!=ind2){\n//                                 ind3 = mp[k][l].second;\n//                                 break;\n//                             }\n//                         }\n//                         ans = max(ans,0ll+mat[i][ind1]+mat[j][ind2]+mat[k][ind3]);\n//                     }\n//                 }\n//             }\n//         }\n        \n        \n//         return ans;\n//     }\n    \n    long long maximumValueSum(vector<vector<int>>& mat) {\n        int n = mat.size(),m = mat[0].size();\n        vector<vector<pair<int, int>>> topValues(n, vector<pair<int, int>>(3, {INT_MIN, -1}));        \n        for (int i = 0; i < n; ++i) {\n            vector<pair<int, int>> row;\n            for (int j = 0; j < m; ++j) {\n                row.push_back({mat[i][j], j});\n            }\n            sort(row.rbegin(), row.rend());\n            for (int k = 0; k < 3 && k < row.size(); ++k) {\n                topValues[i][k] = row[k];\n            }\n        }\n        \n        long long maxSum = LLONG_MIN;\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                for (int k = j + 1; k < n; ++k) {\n                    for (int a = 0; a < 3; ++a) {\n                        for (int b = 0; b < 3; ++b) {\n                            for (int c = 0; c < 3; ++c) {                             \n                                int col1 = topValues[i][a].second;\n                                int col2 = topValues[j][b].second;\n                                int col3 = topValues[k][c].second;\n                                if (col1 != col2 && col1 != col3 && col2 != col3){\n                                    long long currentSum = 0ll+topValues[i][a].first + topValues[j][b].first + topValues[k][c].first;\n                                    maxSum = max(maxSum, currentSum);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return maxSum;\n    }\n};",
    "submit_ts": "1723909367",
    "subm_id": "1359189868"
}