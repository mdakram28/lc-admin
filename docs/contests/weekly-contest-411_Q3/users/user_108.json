{
    "username": "tennkei",
    "submission": "//#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n//#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\")\n//#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n//#define INF 2147483647\n#define infL (1LL<<60)\n#define inf (1<<30)\n#define inf9 (1000000000)\n#define MOD  1000000007 //998244353 //1000000007\n#define EPS 1e-9\n#define Gr 9.8\n#define PI acos(-1)\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define REQ(i,n) for(int (i)=1;(i)<=(int)(n);(i)++)\n#define lch (rt<<1)\n#define rch (rt<<1|1)\n#define readmp(n) for(int i=0,u,v;i<n;i++) {scanf(\"%d%d\",&u,&v); mp[u].push_back(v); mp[v].push_back(u);}\ntypedef  long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, vector<int>> piv;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef double ValType;\ntemplate<typename  T> void maxtt(T& t1, T t2) {\n    t1=max(t1,t2);\n}\ntemplate<typename  T> void mintt(T& t1, T t2) {\n    t1=min(t1,t2);\n}\n\n\nbool debug = 0;\nint n,m,k;\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\nstring direc=\"RDLU\";\nconst ll MOD2 = (ll)MOD * (ll)MOD;\nll ln, lk, lm;\nvoid etp(bool f = 0) {\n    puts(f ?\"YES\" : \"NO\");\n    exit(0);\n}\nvoid addmod(int &x, int y, int mod = MOD){\n    x+=y; if (x>=mod) x-=mod;\n    if(x<0) x+=mod;\n    assert(x>=0 && x<mod);\n}\nvoid et(int x=-1) {\n    printf(\"%d\\n\", x); exit(0);\n}\nll fastPow(ll x, ll y, int mod=MOD) {\n    ll ans = 1;\n    while(y>0) {\n        if(y&1) ans = (x * ans)%mod;\n        x = x*x%mod;\n        y>>=1;\n    }\n    return ans;\n}\nll gcd1(ll x, ll y) {\n    return y?gcd1(y,x%y):x;\n}\n\n//#include <atcoder/all>\n//using mint = atcoder::modint998244353;\n#define MAX (1000005)\n\n\nvoid fmain(int tid) {\n    scanf(\"%d\", &n);\n}\nint pw[MAX];\nbool FG = 0;\nvoid init() {\n    if (FG) return;\n    FG = 1;\n    pw[0]=1;\n    REQ(i,MAX-5) pw[i]=pw[i-1]*10%7;\n}\nclass Solution {\npublic:\n    string calS(int n, char c) {\n        string ans = \"\";\n        ans.push_back(c);\n        if (n==1) return ans;\n        REP(i,n-2) ans.push_back('9');\n        ans.push_back(c);\n        return ans;\n    }\n    int calmd(string s, int n, int i, int j) {\n        if (i==0 and s[0]=='0') return -1;\n        int N=s.size();\n        int st = n-1-j, ans=0;\n        for(int idx=N-1;idx>=0;idx--,st++) {\n            addmod(ans, (s[idx]-'0') * pw[st] % 7, 7);\n        }\n        return ans;\n    }\n    string largestPalindrome(int n, int k) {\n        string ans = \"\";\n        if (k==1 or k==3 or k==9) {\n            REP(i,n) ans.push_back('9');\n        } else if (k==2) {\n            return calS(n, '8');\n        } else if (k==4) {\n            if (n<=2) {\n                return calS(n, '8');\n            }\n            if (n==3) return \"888\";\n            ans = calS(n, '8');\n            ans[1]='8'; ans[n-2]='8';\n            return ans;\n        } else if (k==8) {\n            if (n<=6) {\n                REP(i,n) ans.push_back('8'); return ans;\n            }\n            ans = calS(n, '8');\n            ans[1]='8'; ans[n-2]='8';\n            ans[2]='8'; ans[n-3]='8';\n            return ans;\n        }\n        else if (k==5) {\n            ans = calS(n, '5');\n        } else if (k==6) {\n            if (n<=2) ans = calS(n, '6');\n            else if (n==3) return \"888\";\n            else if (n==4) return \"8778\";\n            else {\n                ans = calS(n, '8');\n                if (n&1) {\n                    ans[n/2] = '8';\n                } else {\n                    ans[n/2] = '7';\n                    ans[n/2-1] = '7';\n                }\n            }\n        } else {\n            assert(k == 7);\n            if (n==1) return \"7\";\n            if (n==2) return \"77\";\n\n            init();\n            int l,r,mid;\n            if (n&1) {\n                l = (n/2) - 6; r = (n/2) + 6; mid=n/2-1;\n            } else {\n                l = (n/2) - 6; r = l+11; mid=n/2-1;\n            }\n            maxtt(l, 0); mintt(r, n-1);\n            ans = calS(n, '9');\n            int md=0;\n            REP(i,n) if (i<l or i>r){\n                addmod(md, 9*pw[i]%7, 7);\n            }\n            int tar = 0;\n\n            REP(i,mid-l+1) tar = tar*10+9;\n            for(int x=tar;x>=0;x--) {\n                string tmp = to_string(x);\n                string p=tmp;\n                reverse(tmp.begin(),  tmp.end());\n                if (n&1) {\n                    for(int j=9;j>=0;j--) {\n                        string tt = p + to_string(j) + tmp;\n                        int zz = calmd(tt, n, l, r);\n                        if (zz != -1 and (md+zz)%7==0) {\n\n                            for(int x=l,idx=0;x<=r;x++,idx++) ans[x]=tt[idx];\n                            return ans;\n                        }\n                    }\n                } else {\n                    string tt = p + tmp;\n                    int zz = calmd(tt,n, l, r);\n                    if (zz != -1 and (md+zz)%7==0) {\n                        //calmd(tt,n, l, r);\n                        for(int x=l,idx=0;x<=r;x++,idx++) ans[x]=tt[idx];\n                        return ans;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1723952221",
    "subm_id": "556410308"
}