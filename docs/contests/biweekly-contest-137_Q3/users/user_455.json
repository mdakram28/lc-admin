{
    "username": "sponomarev",
    "submission": "class Solution {\npublic:\n  long long maximumValueSum(vector<vector<int>>& board) {\n    int n = board.size();\n    int m = board.front().size();\n\n    vector<vector<pair<int, int>>> rows(n);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        rows[i].emplace_back(board[i][j], j);\n      }\n\n      sort(rows[i].begin(), rows[i].end(), greater<pair<int, int>>());\n      rows[i].resize(min(m, 3));\n    }\n\n    long long ans = -1e18;\n    const auto update = [&](int r1, int r2, int r3) {\n      for (const auto& [v1, c1] : rows[r1]) {\n        for (const auto& [v2, c2] : rows[r2]) {\n          if (c1 == c2) continue;\n\n          for (const auto& [v3, c3] : rows[r3]) {\n            if (c1 == c3 || c2 == c3) continue;\n\n            ans = max(ans, (long long)v1 + v2 + v3);\n          }\n        }\n      }\n    };\n\n    for (int r1 = 0; r1 < n; ++r1) {\n      for (int r2 = 0; r2 < n; ++r2) {\n        if (r1 == r2) continue;\n\n        for (int r3 = 0; r3 < n; ++r3) {\n          if (r3 == r2 || r3 == r1) continue;\n          update(r1, r2, r3);\n        }\n      }\n    }\n\n    return ans;\n  }\n};",
    "submit_ts": "1723907262",
    "subm_id": "1359098697"
}