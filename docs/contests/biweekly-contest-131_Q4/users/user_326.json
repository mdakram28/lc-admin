{
    "username": "chshda",
    "submission": "const int maxn = 5 * 1e4 + 10;\nint x[maxn], h[maxn], n;\n\nint lowbit(int x) { return x & (-x); }\nvoid update(int p) {\n    int lx;\n    for (; p <= n; p += lowbit(p)) {\n        h[p] = x[p];\n        lx = lowbit(p);\n        for (int i = 1; i < lx; i <<= 1) h[p] = max(h[p], h[p - i]);\n    }\n}\nint query(int l, int r) {\n    int ans = 0;\n    while (r >= l) {\n        ans = max(ans, x[r]);\n        --r;\n        for (; r - lowbit(r) >= l; r -= lowbit(r)) ans = max(ans, h[r]);\n    }\n    return ans;\n}\n\nclass Solution {\n   public:\n    vector<bool> getResults(vector<vector<int>> &queries) {\n        memset(x, 0, sizeof(x));\n        memset(h, 0, sizeof(h));\n\n        n = INT_MIN;\n        for (auto &q : queries) q[1]++, n = max(n, q[1] + 1);\n\n        set<pair<int, int>> s;\n        s.insert(make_pair(n, 1));\n        x[1] = n - 1, update(1);\n\n        vector<bool> ans;\n        for (auto &q : queries) {\n            int op = q[0];\n            if (op == 1) {\n                int id = q[1];\n                auto p = s.lower_bound(make_pair(id, -1));\n                int st = p->second, ed = p->first;\n                s.erase(p);\n                x[st] = 0, update(st);\n                if (st < id ) {\n                    s.insert(make_pair(id , st));\n                    x[st] = id  - st, update(st);\n                }\n                if (id < ed) {\n                    s.insert(make_pair(ed, id ));\n                    x[id] = ed - id , update(id );\n                }\n            } else {\n                int id = q[1], sz = q[2];\n                auto p = s.lower_bound(make_pair(id, -1));\n                int st = p->second, ed = p->first;\n                 // cout << id << \" \" << st << \" \" << ed << endl;\n                bool cur;\n                if (st > id) {\n                    // cout << \"size0:\" << query(1, id) << endl;\n                    cur = query(1, id) >= sz;}\n                else {\n                    cur = id - st >= sz;\n                    if (!cur && st-1 >= 1) {\n                        // cout << \"size:\" << query(1, st-1) << endl;\n                        cur = query(1, st-1) >= sz;\n\n                        }\n                 }\n                ans.push_back(cur);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716651526.0
}