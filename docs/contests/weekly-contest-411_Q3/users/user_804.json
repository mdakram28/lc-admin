{
    "username": "Rakesh Kumar",
    "submission": "class Solution {\npublic:\n    bool pal(string s) {\n        int l = 0, r = s.length() - 1;\n        while (l < r) {\n            if (s[l] != s[r])\n                return false;\n            l++;\n            r--;\n        }\n\n        return true;\n    }\n    bool isDivisibleBy7(const std::string& num) {\n        // Base case: if the length of the number is 1\n        if (num.length() == 1) {\n            return num == \"0\" || num == \"7\";\n        }\n\n        // Calculate truncatedNum by removing the last character (num / 10)\n        std::string truncatedNum = num.substr(0, num.length() - 1);\n\n        // Calculate 2 * (num % 10) by taking the last digit, converting to int,\n        // and multiplying by 2\n        int lastDigit =\n            num.back() - '0'; // Convert last character to an integer\n        std::string lastDigitStr = std::to_string(2 * lastDigit);\n\n        // Subtract 2 * (num % 10) from truncatedNum\n        std::string result = truncatedNum;\n\n        // Subtract lastDigitStr from result\n        int carry = 0;\n        for (int i = lastDigitStr.size() - 1, j = result.size() - 1; i >= 0;\n             --i, --j) {\n            int digitResult = (j >= 0 ? result[j] - '0' : 0) -\n                              (lastDigitStr[i] - '0') - carry;\n            if (digitResult < 0) {\n                digitResult += 10;\n                carry = 1;\n            } else {\n                carry = 0;\n            }\n            if (j >= 0) {\n                result[j] = digitResult + '0';\n            } else {\n                result.insert(result.begin(), digitResult + '0');\n            }\n        }\n\n        // Remove leading zeros from result\n        while (result.length() > 1 && result[0] == '0') {\n            result.erase(result.begin());\n        }\n\n        // Recur with the result\n        return isDivisibleBy7(result);\n    }\n    bool remainderBy7(const std::string& num) {\n    int remainder = 0;\n    for (char digit : num) {\n        remainder = (remainder * 10 + (digit - '0')) % 7;\n    }\n    return remainder == 0;\n}\n    string largestPalindrome(int n, int k) {\n        if (n == 1) {\n            if (k >= 5) {\n                return string(1, '0' + k);\n            }\n            if (k == 2 || k == 4) {\n                return \"8\";\n            }\n            return \"9\";\n        }\n        if (k == 1) {\n            return string(n, '9');\n        }\n        if (k == 2) {\n            if (n == 2) {\n                return \"88\";\n            }\n            string s = string(n, '9');\n            s[0] = '8';\n            s[n - 1] = '8';\n            return s;\n        }\n        if (k == 3) {\n            return string(n, '9');\n        }\n        if (k == 4) {\n            string s = string(n, '8');\n            for(int i = 2; i < n - 2; i++){\n                s[i] = '9';\n            }\n            return s;\n        }\n        if (k == 5) {\n            string s = string(n, '9');\n            s[0] = '5';\n            s[n - 1] = '5';\n            return s;\n        }\n        if (k == 6) {\n            if (n == 2) {\n                return \"66\";\n            }\n            string s = string(n, '9');\n            s[0] = '8';\n            s[n - 1] = '8';\n            if (n % 2 == 1) {\n                s[n / 2] = '8';\n            } else {\n                s[n / 2] = '7';\n                s[n / 2 - 1] = '7';\n            }\n            return s;\n        }\n        if (k == 7) {\n            if (n == 2)\n                return \"77\";\n            for (char i = '9'; i >= '0'; i--) {\n                string s = string(n, '9');\n                if (n % 2 == 0) {\n                    s[n / 2] = i;\n                    s[n / 2 - 1] = i;\n                } else\n                    s[n / 2] = i;\n                if (remainderBy7(s) && pal(s)) {\n                    return s;\n                }\n            }\n        }\n        if (k == 8) {\n            string s = string(n, '8');\n            for(int i = 3; i < n - 3; i++){\n                s[i] = '9';\n            }\n            return s;\n        }\n        return string(n, '9');\n    }\n};",
    "submit_ts": "1723951905",
    "subm_id": "1359783014"
}