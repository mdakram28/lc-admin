{
    "username": "wu-jian-zhi-zhong",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < m / 2; ++i) {\n            for (int j = 0; j < n / 2; ++j) {\n                int ones = grid[i][j] + grid[i][n - j - 1] +\n                           grid[m - i - 1][j] + grid[m - i - 1][n - j - 1];\n                ans += min(ones, 4 - ones);\n            }\n        }\n        if (m % 2 && n % 2) {\n            ans += grid[m / 2][n / 2];\n            int ones = 0, single_one = 0, double_one = 0;\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[m / 2][j] + grid[m / 2][n - j - 1] == 1) {\n                    ++ans;\n                    ones += 2;\n                    ++single_one;\n                } else if (grid[m / 2][j] + grid[m / 2][n - j - 1] == 2) {\n                    ones += 2;\n                    ++double_one;\n                }\n            }\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][n / 2] + grid[m - i - 1][n / 2] == 1) {\n                    ++ans;\n                    ones += 2;\n                    ++single_one;\n                } else if (grid[i][n / 2] + grid[m - i - 1][n / 2] == 2) {\n                    ones += 2;\n                    ++double_one;\n                }\n            }\n            int rest = ones % 4;\n            if (rest != 0) {\n                if (single_one * 2 < rest) {\n                    ans += rest - single_one * 2;\n                }\n            }\n\n        } else if (m % 2) {\n            int ones = 0, single_one = 0, double_one = 0;\n            for (int j = 0; j < n / 2; ++j) {\n                if (grid[m / 2][j] + grid[m / 2][n - j - 1] == 1) {\n                    ++ans;\n                    ones += 2;\n                    ++single_one;\n                } else if (grid[m / 2][j] + grid[m / 2][n - j - 1] == 2) {\n                    ones += 2;\n                    ++double_one;\n                }\n            }\n            int rest = ones % 4;\n            if (rest != 0) {\n                if (single_one * 2 < rest) {\n                    ans += rest - single_one * 2;\n                }\n            }\n        } else if (n % 2) {\n            int ones = 0, single_one = 0, double_one = 0;\n            for (int i = 0; i < m / 2; ++i) {\n                if (grid[i][n / 2] + grid[m - i - 1][n / 2] == 1) {\n                    ++ans;\n                    ones += 2;\n                    ++single_one;\n                } else if (grid[i][n / 2] + grid[m - i - 1][n / 2] == 2) {\n                    ones += 2;\n                    ++double_one;\n                }\n            }\n            int rest = ones % 4;\n            if (rest != 0) {\n                if (single_one * 2 < rest) {\n                    ans += rest - single_one * 2;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697964",
    "subm_id": "552268681"
}