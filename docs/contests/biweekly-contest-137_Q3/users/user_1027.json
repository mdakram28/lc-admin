{
    "username": "\u672a\u6765\u53f2\u8482\u592b",
    "submission": "using i64 =long long;\nclass Solution\n{\npublic:\n    long long maximumValueSum(vector<vector<int>>& board)\n    {\n        int n = board.size();\n        int m = board[0].size();\n        vector dp(n, vector(n, vector(m,vector<long long>(3,-1e12))));\n        for (int k = 0; k < n; k++)\n        {\n            auto& dp1 = dp[k];\n            vector<long long>mx(m,-1e12);\n            for (int i = 0; i < n; i++) {\n                long long mx1 = -1e12, mx2 = -1e12;\n                long long tmx = -1e12;\n                for (int j = 0; j < m; j++) {\n                    if (mx1 < mx[j])mx2 = mx1, mx1 = mx[j];\n                    else if (mx2 < mx[j])mx2 = mx[j];\n                    long long val = board[i][j];\n                    if (i == k)val = -1e12;\n                    dp1[i][j][0] = 0;\n                    dp1[i][j][1] = val;\n                    dp1[i][j][2] = (mx1 == mx[j] ? mx2 : mx1) + val;\n                    for (int k = 1; k <= 2; k++) {\n                        if (i)dp1[i][j][k] = max(dp1[i][j][k], dp1[i - 1][j][k]);\n                        if (j)dp1[i][j][k] = max(dp1[i][j][k], dp1[i][j - 1][k]);\n                    }\n                    dp1[i][j][2] = max(tmx+ mx[j], dp1[i][j][2]);\n                    \n                    tmx = max(tmx, val);\n                    mx[j] = max(mx[j], val);\n                }\n            }\n        }\n        long long ans = -1e18;\n        for (int i = 0; i < n; i++)\n            for (int j = 2; j < m; j++)\n            {\n                ans = max(ans, dp[i][n - 1][j - 1][2] + board[i][j]);\n            }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909107",
    "subm_id": "556334535"
}