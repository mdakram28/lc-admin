{
    "username": "srinivasan798",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        for(int i=0; i<nums.length; i++) nums[i] = target[i] - nums[i];\n        TreeSet<Integer> bst = new TreeSet<>();\n        boolean inc = nums[0]>0;\n        long tot = 0l;\n        for(int i=0; i<nums.length; i++) {\n            if((nums[i]>0 && !inc) || (nums[i]<0 && inc) || nums[i]==0) {\n                if(!bst.isEmpty()) tot += bst.last();\n                bst = new TreeSet<>();\n            }\n            int num = 0;\n            if(nums[i]>0) {\n                num = nums[i];\n                inc = true;\n            } else if(nums[i]<0) {\n                num = -nums[i];\n                inc = false;\n            }\n            if(num==0) continue;\n            if(!bst.isEmpty() && bst.last()>num) {\n                tot += bst.last() - num;\n                while(!bst.isEmpty() && bst.last()>num) \n                    bst.pollLast();\n            }\n            bst.add(num);\n        }\n        if(!bst.isEmpty()) tot += bst.last();\n        return tot;\n    }\n}",
    "submit_ts": "1721533939",
    "subm_id": "1328020045"
}