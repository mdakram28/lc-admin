{
    "username": "anant1911",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        int ver=0;\n        int hor=0;\n        long long ans=0;\n        int i=verticalCut.size()-1;\n        int j=horizontalCut.size()-1;\n        while(i>=0 && j>=0){\n            if(verticalCut[i]>horizontalCut[j]){\n                ans+=((hor+1)*verticalCut[i]);\n                ver++;\n                i--;\n            }\n            else{\n                ans+=((ver+1)*horizontalCut[j]);\n                hor++;\n                j--;\n            }\n        }\n        while(j>=0){\n                ans+=((ver+1)*horizontalCut[j]);\n                hor++;\n                j--;\n            }\n        while(i>=0){\n                ans+=((hor+1)*verticalCut[i]);\n                ver++;\n                i--;\n            }\n        return ans;\n    }\n};",
    "submit_ts": "1720925626",
    "subm_id": "1320260955"
}