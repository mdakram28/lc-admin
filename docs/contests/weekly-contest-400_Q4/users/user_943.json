{
    "username": "spaded06543",
    "submission": "class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        ans = abs(max(nums) - k)\n        def getVal(bitArr, arrLen) -> int:\n            if arrLen == 0:\n                return 0\n            ans = 0\n            for i in range(32):\n                if bitArr[i] == arrLen:\n                    ans += 1 << i\n            return ans\n        tail = 0\n        bitArr = [0] * 32\n        for head in range(len(nums)):\n            val = nums[head]\n            for i in range(32):\n                bitArr[i] += ((val >> i) & 1) == 1\n            andVal = getVal(bitArr, head - tail + 1)\n            ans = min(ans, abs(andVal - k))\n            while tail <= head and andVal < k:\n                removeVal = nums[tail]\n                for i in range(32):\n                    bitArr[i] -= ((removeVal >> i) & 1) == 1\n                tail += 1\n                andVal = getVal(bitArr, head - tail + 1)\n                ans = min(ans, abs(andVal - k))\n                \n        return ans",
    "submit_ts": 1717300391.0
}