{
    "username": "heartunderblade",
    "submission": "class Solution\n{\n    using vvi = vector<vector<int>>;\npublic:\n    int minimumSum(vvi const &grid)\n    {\n        int const m = grid.size(), n = grid.front().size();\n        int l = 0, r = n - 1, t = 0, b = m - 1;\n        shrink(grid, l, r, t, b);\n        return cut1(grid, l, r, t, b);\n    }\n\nprivate:\n    static int cut1(vvi const &grid, int const l, int const r, int const t, int const b) noexcept\n    {\n        int winner = limit;\n        for (int j = l; j < r; ++j)\n        {\n            int l1 = l,     r1 = j, t1 = t, b1 = b;\n            int l2 = j + 1, r2 = r, t2 = t, b2 = b;\n            foo(grid, winner, l1, r1, t1, b1, l2, r2, t2, b2);\n        }\n        for (int i = t; i < b; ++i)\n        {\n            int l1 = l, r1 = r, t1 = t,     b1 = i;\n            int l2 = l, r2 = r, t2 = i + 1, b2 = b;\n            foo(grid, winner, l1, r1, t1, b1, l2, r2, t2, b2);\n        }\n        return winner;\n    }\n\n    static void foo(vvi const &grid, int &winner, int l1, int r1, int t1, int b1, int l2, int r2, int t2, int b2) noexcept\n    {\n        if (!shrink(grid, l1, r1, t1, b1)) return;\n        if (!shrink(grid, l2, r2, t2, b2)) return;\n        challenge(winner, cut2(grid, l1, r1, t1, b1) + size_of(l2, r2, t2, b2));\n        challenge(winner, cut2(grid, l2, r2, t2, b2) + size_of(l1, r1, t1, b1));\n    }\n\n    static void challenge(int &winner, int const challenger) noexcept\n    {\n        if (winner > challenger) winner = challenger;\n    }\n\n    static int size_of(int const l, int const r, int const t, int const b) noexcept\n    {\n        return (r - l + 1) * (b - t + 1);\n    }\n\n    static bool shrink(vvi const &grid, int &l, int &r, int &t, int &b) noexcept\n    {\n        int ll = r + 1, rr = l, tt = b + 1, bb = t;\n        bool at_leat_one_one = false;\n        for (int i = t; i <= b; ++i)\n        for (int j = l; j <= r; ++j)\n        {\n            if (!grid[i][j]) continue;\n            if (ll > j) ll = j; if (rr < j) rr = j; if (tt > i) tt = i; if (bb < i) bb = i;\n            at_leat_one_one = true;\n        }\n        if (!at_leat_one_one) return false;\n        l = ll; r = rr; t = tt; b = bb;\n        return true;\n    }\n\n    static int cut2(vvi const &grid, int const l, int const r, int const t, int const b) noexcept\n    {\n        int winner = limit;\n        for (int j = l; j < r; ++j)\n        {\n            int l1 = l,     r1 = j, t1 = t, b1 = b;\n            int l2 = j + 1, r2 = r, t2 = t, b2 = b;\n            bar(grid, winner, l1, r1, t1, b1, l2, r2, t2, b2);\n        }\n        for (int i = t; i < b; ++i)\n        {\n            int l1 = l, r1 = r, t1 = t,     b1 = i;\n            int l2 = l, r2 = r, t2 = i + 1, b2 = b;\n            bar(grid, winner, l1, r1, t1, b1, l2, r2, t2, b2);\n        }\n        return winner;\n    }\n\n    static void bar(vvi const &grid, int &winner, int l1, int r1, int t1, int b1, int l2, int r2, int t2, int b2) noexcept\n    {\n        if (!shrink(grid, l1, r1, t1, b1)) return;\n        if (!shrink(grid, l2, r2, t2, b2)) return;\n        challenge(winner, size_of(l1, r1, t1, b1) + size_of(l2, r2, t2, b2));\n    }\n\n    static constexpr int limit = 1024;\n};",
    "submit_ts": "1719114898",
    "subm_id": "541403763"
}