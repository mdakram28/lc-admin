{
    "username": "agix",
    "submission": "const int MAXN = 2e5;\nint t[4 * MAXN];\n\n// For root node, v = 1, tl = 0, tr = n - 1\n\nvoid build(vector<int>& a, int v, int tl, int tr)\n{\n    if (tl == tr)\n    {\n        t[v] = a[tl];\n    }\n    else\n    {\n        int tm = (tl + tr) / 2;\n        build(a, v * 2, tl, tm);\n        build(a, v * 2 + 1, tm + 1, tr);\n        \n        t[v] = t[v * 2] & t[v * 2 + 1];\n    }\n}\n\nint query(int v, int tl, int tr, int l, int r)\n{\n    if (l > r)\n    {\n        return (1 << 30) - 1;\n    }\n    if (l == tl && r == tr)\n    {\n        return t[v];\n    }\n    int tm = (tl + tr) / 2;\n    int lv = query(v * 2, tl, tm, l, min(r, tm));\n    int rv = query(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r);\n    \n    return lv & rv;\n}\n\nclass Solution {\npublic:\n    pair<int, int> solve(vector<int>& nums, int k, int start)\n    {\n        int n = nums.size();\n        \n        int l = start;\n        int r = nums.size() - 1;\n        \n        while (l < r)\n        {\n            int m = (l + r + 1) / 2;\n            \n            int q = query(1, 0, n - 1, start, m);\n            \n            if (q > k)\n            {\n                l = m;\n            }\n            else\n            {\n                r = m - 1;\n            }\n        }\n        \n        int q = query(1, 0, n - 1, start, l);\n        \n        return {l, q};\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        build(nums, 1, 0, n - 1);\n        \n        int ans = 1e9;\n        \n        for (int i = 0; i < n; i++)\n        {\n            //cout << \"i \" << i << endl;\n            \n            if (nums[i] <= k)\n            {\n                ans = min(ans, abs(nums[i] - k));\n            }\n            else\n            {\n                auto p = solve(nums, k, i);\n                \n                int pos = p.first;\n                int val = p.second;\n                \n                //cout << pos << \" \" << val << endl;\n                \n                ans = min(ans, abs(val - k));\n                \n                if (pos < n - 1)\n                {\n                    val = val & nums[pos + 1];\n                    \n                    ans = min(ans, abs(val - k));\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1717299564.0
}