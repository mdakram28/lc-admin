{
    "username": "akshay_2902",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int,int>> val(n);\n        vector<int> sum,diff;\n        for(int i = 0;i<n;i++){\n            val[i] = {points[i][0] + points[i][1],points[i][0] - points[i][1]};\n            sum.push_back(val[i].first);\n            diff.push_back(val[i].second);\n        }\n        \n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n        \n        vector<int> ff;\n        for(int i =0;i<n;i++){\n            int a = 0,b = n-1,ans;\n            int aval = val[i].first;\n            \n            if(aval == sum[a]){\n                a++;\n            }\n            else if(aval == sum[b]){\n                b--;\n            }\n            \n            ans = sum[b] - sum[a];\n            \n            a = 0,b = n-1;\n            aval = val[i].second;\n            \n            if(aval == diff[a]){\n                a++;\n            }\n            else if(aval == diff[b]){\n                b--;\n            }\n            \n            ans = max(ans,diff[b] - diff[a]);\n            ff.push_back(ans);\n        }\n        \n        sort(ff.begin(),ff.end());\n        return ff[0];\n                                 \n    }\n};"
}