{
    "username": "LoHhhha",
    "submission": "int mem[31][31][31][31][4];\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n=grid.size(),m=grid[0].size();\n\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                for(int k=0;k<n;k++){\n                    for(int p=0;p<m;p++){\n                        mem[i][j][k][p][0]=mem[i][j][k][p][1]=mem[i][j][k][p][2]=mem[i][j][k][p][3]=-1;\n                    }\n                }\n            }\n        }\n\n        auto get=[&](int lr,int lc,int rr,int rc)->vector<int>{\n            int rlr=n,rlc=m,rrr=0,rrc=0;\n            for(int i=lr;i<=rr;i++){\n                for(int j=lc;j<=rc;j++){\n                    if(grid[i][j]){\n                        rlr=min(rlr,i);\n                        rlc=min(rlc,j);\n                        rrr=max(rrr,i);\n                        rrc=max(rrc,j);\n                    }\n                }\n            }\n            return {rlr,rlc,rrr,rrc};\n        };\n\n        function<int(int,int,int,int,int)>dfs=[&](int lr,int lc,int rr,int rc,int k){\n            auto box=get(lr,lc,rr,rc);\n            if(k==1)return (box[2]-box[0]+1)*(box[3]-box[1]+1);\n            if(mem[box[0]][box[1]][box[2]][box[3]][k]!=-1)return mem[box[0]][box[1]][box[2]][box[3]][k];\n            int res=0x3f3f3f3f;\n            // \u7ad6\u7ebf\n            for(int i=box[1];i<box[3];i++){\n                for(int j=1;j<k;j++){\n                    res=min({\n                        dfs(box[0],box[1],box[2],i,j)+dfs(box[0],i+1,box[2],box[3],k-j),\n                        dfs(box[0],box[1],box[2],i,k-j)+dfs(box[0],i+1,box[2],box[3],j),\n                        res\n                    });\n                }\n            }\n            // \u6a2a\u7ebf\n            for(int i=box[0];i<box[2];i++){\n                for(int j=1;j<k;j++){\n                    res=min({\n                        dfs(box[0],box[1],i,box[3],j)+dfs(i+1,box[1],box[2],box[3],k-j),\n                        dfs(box[0],box[1],i,box[3],k-j)+dfs(i+1,box[1],box[2],box[3],j),\n                        res\n                    });\n                }\n            }\n            return mem[box[0]][box[1]][box[2]][box[3]][k]=res;\n        };\n        return dfs(0,0,n-1,m-1,3);\n    }\n};",
    "submit_ts": 1719112494.0
}