{
    "username": "Rui Huang",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        odd = (n%2 == 1)\n#         def build(n, prefix, filler='9'):\n#             m = n - len(prefix)*2\n#             if n <= len(prefix)*2:\n#                 return int(prefix * 2)\n#             else:\n#                 return int(prefix + filler * m + prefix[::-1])\n            \n            \n            \n        if k in (1,3,9):\n            return '9' * n\n        if k == 5:\n            if n < 3:\n                return '5' * n\n            else:\n                return '5' + '9' * (n-2) + '5'\n        if k % 2 == 0:\n            if k == 2:\n                if n < 3:\n                    return '8' * n\n                else:\n                    return '8' + '9' * (n-2) + '8'\n            if k == 4:\n                if n < 5:\n                    return '8' * n\n                else:\n                    return '88' + '9' * (n-4) + '88'\n            if k == 8:\n                if n < 7:\n                    return '8' * n\n                else:\n                    return '888' + '9' * (n-6) + '888'\n            # k == 6\n            d = {1: '6', 2: '66', 3: '888', 4: '8778', 5: '89898', 6: '897798', 7: '8998998', 8: '89977998'}\n            if n < 9:\n                return d[n]\n            \n            if odd:\n                filler = '9' * ((n-3) // 2)\n                return '8' + filler + '8' + filler + '8'\n            else:\n                filler = '9' * ((n-4) // 2)\n                return '8' + filler + '77' + filler + '8'\n                \n                \n        \n        else: # k == 7\n            if n < 3:\n                return '7' * n\n            rems9 = [2, 1, 5, 3, 4, 0] # n 9's\n            rems10 = [3, 2, 6, 4, 5, 1] # 10**n\n            if odd:\n                m = n//2\n                nines = '9' * m\n                target = rems9[n%6-1] # target remainder\n                source = rems10[(m-1)%6]\n                i = 0\n                while source*i % 7 != target % 7:\n                    i += 1\n                return nines + str(9-i) + nines\n            else:\n                m = n//2\n                nines = '9' * (m-1)\n                target = rems9[n%6 - 1] # target remainder\n                s1, s2 = rems10[(m-2)%6],  rems10[(m-1)%6]\n                i = 0\n                while (s1+s2)*i % 7 != target % 7:\n                    i += 1\n                return nines + str(9-i) * 2 + nines\n            \n            \n        return '0'\n            \n            \n            \n            \n            \n            \n            ",
    "submit_ts": "1723952811",
    "subm_id": "1359805182"
}