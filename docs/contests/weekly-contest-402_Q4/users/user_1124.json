{
    "username": "ahtoh_",
    "submission": "/**\n * @param {number[]} nums\n * @param {number[][]} queries\n * @return {number[]}\n */\nvar countOfPeaks = function(nums, queries) {\n    const n = (nums.length - 1).toString(2).length;\n    const l = 2 ** n;\n    const segTree = Array(2 * l - 1).fill(0);\n    //console.log(segTree);\n    const setV = (i, v, x, lx, rx) => {\n        if ((rx - lx) === 1) {\n            segTree[x] = v;\n            return;\n        }\n        const mid = Math.floor((lx + rx) / 2);\n        if (i < mid) {\n            setV(i, v, (2 * x + 1), lx, mid);\n        } else {\n            setV(i, v, (2 * x + 2), mid, rx);\n        }\n        segTree[x] = segTree[2 * x + 1] + segTree[2 * x + 2];\n    };\n    const sum = (l, r, x, lx, rx) => {\n        if (l >= rx || r <= lx) {\n            return 0;\n        }\n        if (l <= lx && r >= rx) {\n            return segTree[x];\n        }\n        const mid = Math.floor((lx + rx) /2);\n        const s1 = sum(l, r, (2 * x + 1), lx, mid);\n        const s2 = sum(l, r, (2 * x + 2), mid, rx);\n        return s1 + s2;\n    };\n    for (let i = 1; i < (nums.length - 1); i += 1) {\n        if ((nums[i] > nums[i - 1]) && (nums[i] > nums[i + 1])) {\n            setV(i, 1, 0, 0, l);\n        }\n    }\n    //console.log(segTree);\n    const ans = [];\n    for (let j = 0; j < queries.length; j += 1) {\n        if (queries[j][0] === 1) {\n            if ((queries[j][2] - queries[j][1]) < 2) {\n                ans.push(0);\n            } else {\n                const v = sum((queries[j][1] + 1), queries[j][2], 0, 0, l);\n                ans.push(v);\n            }\n        } else {\n            const val = queries[j][2];\n            const idx = queries[j][1];\n            if (idx === 0) {\n                nums[0] = val;\n                if ((nums[1] > nums[0]) && (nums[1] > nums[2])) {\n                    setV(1, 1, 0, 0, l);\n                } else {\n                    setV(1, 0, 0, 0, l);\n                }\n            } else if (idx === (nums.length - 1)) {\n                nums[idx] = val;\n                if ((nums[nums.length - 2] > nums[nums.length - 1]) && (nums[nums.length - 2] > nums[nums.length - 3])) {\n                    setV((nums.length - 2), 1, 0, 0, l);\n                } else {\n                    setV((nums.length - 2), 0, 0, 0, l);\n                }\n            } else {\n                nums[idx] = val;\n                if ((nums[idx] > nums[idx - 1]) && (nums[idx] > nums[idx + 1])) {\n                    setV(idx, 1, 0, 0, l);\n                } else {\n                    setV(idx, 0, 0, 0, l);\n                }\n                if (idx > 1) {\n                    if ((nums[idx - 1] > nums[idx - 2]) && (nums[idx - 1] > nums[idx])) {\n                        setV((idx - 1), 1, 0, 0, l);\n                    } else {\n                        setV((idx - 1), 0, 0, 0, l);\n                    }\n                }\n                if (idx < (nums.length - 2)) {\n                    if ((nums[idx + 1] > nums[idx + 2]) && (nums[idx + 1] > nums[idx])) {\n                        setV((idx + 1), 1, 0, 0, l);\n                    } else {\n                        setV((idx + 1), 0, 0, 0, l);\n                    }\n                }\n            }\n        }\n        //console.log(segTree);\n    }\n    return ans;\n};",
    "submit_ts": 1718508991.0
}