{
    "username": "mahendra36",
    "submission": "\nclass SegTree{\n    public:\n    vector<long long>a;\n    vector<long long>seg;\n    SegTree(int n)\n    {\n        a.resize(n,0);\n        seg.resize(4*n,0);\n    }\n\n    void build(int idx, int low, int high)\n    {\n        if(low==high)\n        {\n            seg[idx] = a[low];\n            return;\n        }\n        int mid = low+(high-low)/2;\n        build(2*idx+1,low,mid);\n        build(2*idx+2,mid+1,high);\n\n        //to be changed accordingly\n        seg[idx] = seg[2*idx+1]&seg[2*idx+2];\n        return;\n    }\n\n    long long query(int idx, int low, int high, int l, int r)\n    {\n        if(low>=l && high<=r)\n        {\n            return seg[idx];\n        }\n\n        //to be changed accordingly\n        if(high<l || low>r)\n        {\n            return -1;\n        }\n\n        int mid = low+(high-low)/2;\n        //to be changed accorgingly\n        long long left = query(2*idx+1,low,mid,l,r);\n        long long right = query(2*idx+2,mid+1,high,l,r);\n        if(left==-1 && right==-1)\n        {\n            return -1;\n        }else if(left==-1) return right;\n        else if(right==-1) return left;\n        else return left&right;\n\n    }\n\n    \n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int n = a.size();\n        SegTree st(n);\n        for(int i=0; i<n; i++)\n        {\n            st.a[i] = a[i];\n        }\n        st.build(0,0,n-1);\n        long long ans = 0;\n        for(int i=0; i<n; i++)\n        {\n            int low = lower(st,i,k,n);\n            int high = upper(st,i,k,n);\n            if(low!=-1)\n            {\n                ans+=(long long)(high-low+1);\n            }\n            //if(i==1) return low;\n        }\n        \n        //return st.query(0,0,n-1,1,3);\n        return ans;\n    }\n    int lower(SegTree&st,int i,int k,int n)\n    {\n        int l=i;\n        int h = n-1;\n        int ans = -1;\n        while(l<=h)\n        {\n            int m = l+(h-l)/2;\n            int res = st.query(0,0,n-1,i,m);\n            \n            if(res<k)\n            {\n                h = m-1;\n            }else if(res==k)\n            {\n                ans = m;\n                h = m-1;\n            }else{\n                l = m+1;\n            }\n        }\n        return ans;\n    }\n    int upper(SegTree&st,int i,int k,int n)\n    {\n        int l=i;\n        int h = n-1;\n        int ans = -1;\n        while(l<=h)\n        {\n            int m = l+(h-l)/2;\n            int res = st.query(0,0,n-1,i,m);\n            if(res<k)\n            {\n                h = m-1;\n            }else if(res==k)\n            {\n                ans = m;\n                l = m+1;\n            }else{\n                l = m+1;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280406",
    "subm_id": "1311788224"
}