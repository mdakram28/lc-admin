{
    "username": "gtzafw",
    "submission": "class Solution:\n    def canReachCorner(self, X: int, Y: int, circles: List[List[int]]) -> bool:\n        '''\n        \u5224\u65ad\u76f8\u4ea4\u7684\u5706\u662f\u5426\u5b8c\u6574\u906e\u6321\u4e86\u77e9\u5f62\u4e0a\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\u7684\u8def\u5f84\n\n        \u5148\u627e\u51fa\u6240\u6709\u4e0e\u8fb9\u754c\u76f8\u4ea4\u7684\u5706,\u7136\u540e\u8fdb\u884cdfs\n        \u5982\u679c\u4ece\u67d0\u4e2a\u5706\u4e0e\u5de6\u8fb9\u754c\u6216\u4e0a\u8fb9\u754c\u7684\u4ea4\u70b9\u53ef\u4ee5\u5230\u8fbe\u53f3\u4e0b\u4fa7\u8fb9\u754c\uff0c\u5219\u8bf4\u660e\u77e9\u5f62\u88ab\u5b8c\u6574\u906e\u6321\uff0c\u4e0d\u80fd\u5230\u8fbe\u53f3\u4e0a\u89d2\n        '''\n        \n        from collections import defaultdict\n        # \u627e\u5230\u4e0e\u6bcf\u4e2a\u56ed\u76f8\u4ea4\u7684\u5706\n        connected = defaultdict(list)\n        for i in range(len(circles)):\n            for j in range(i + 1, len(circles)):\n                if (circles[i][0] - circles[j][0]) ** 2 + (circles[i][1] - circles[j][1]) ** 2 <= (circles[i][2] + circles[j][2]) ** 2:\n                    connected[i].append(j)\n                    connected[j].append(i)\n\n        # \u627e\u5230\u4e0e\u5de6\u4e0a\u8fb9\u754c\u76f8\u4ea4\u7684\u5706\n        topleft = []\n        for i in range(len(circles)):\n            if circles[i][0] - circles[i][2] <= 0 or circles[i][1] + circles[i][2] >= Y:\n                topleft.append(i)\n\n        # \u627e\u5230\u4e0e\u53f3\u4e0b\u8fb9\u754c\u76f8\u4ea4\u7684\u5706\n        bottomright = []\n        for i in range(len(circles)):\n            if circles[i][0] + circles[i][2] >= X or circles[i][1] - circles[i][2] <= 0:\n                bottomright.append(i)\n\n        # dfs, \u4ecetopleft\u7684\u5706\u5f00\u59cb\uff0c\u770b\u662f\u5426\u80fd\u5230\u8fbebottomright\u7684\u5706\n        visited = set()\n        def dfs(i):\n            if i in bottomright:\n                return True\n            visited.add(i)\n            for j in connected[i]:\n                if j not in visited and dfs(j):\n                    return True\n            return False\n                \n        for i in topleft:\n            visited.clear()\n            if dfs(i):\n                return False\n            \n        return True",
    "submit_ts": "1722139091",
    "subm_id": "1335807598"
}