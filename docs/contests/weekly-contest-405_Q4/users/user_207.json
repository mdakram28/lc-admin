{
    "username": "hellotestabc",
    "submission": "class Trie {\npublic:\n    Trie* t[26];\n    int cost = -1;\n\n    Trie() {\n        for (int i = 0; i < 26; i++) {\n            t[i] = nullptr;\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int traverse(string& target, int index, Trie* root, vector<int>& dp) {\n        if (index >= target.size()) {\n            return 0;\n        }\n\n        if (dp[index] != -1) {\n            return dp[index];\n        }\n\n        int best = INT_MAX;\n\n        Trie* local = root;\n\n        for (int i = index; i < target.size() && local != nullptr; i++) {\n            local = local->t[target[i] - 'a'];\n\n            if (local != nullptr && local->cost != -1) {\n                int fcost = traverse(target, i + 1, root, dp);\n\n                if (fcost != -1) {\n                    best = min(best, local->cost + fcost);\n                }\n            }\n        }\n\n        if (best == INT_MAX) {\n            return dp[index] = -1;\n        } else {\n            return dp[index] = best;\n        }\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie* root = new Trie();\n\n        for (int i = 0; i < words.size(); i++) {\n            Trie* local = root;\n\n            for (char c : words[i]) {\n                if (local->t[c - 'a'] == nullptr) {\n                    local->t[c - 'a'] = new Trie();\n                }\n\n                local = local->t[c - 'a'];\n            }\n\n            if (local->cost == -1) {\n                local->cost = costs[i];\n            } else {\n                local->cost = min(local->cost, costs[i]);\n            }\n        }\n        \n        vector<int> dp(target.size(), -1);\n\n        return traverse(target, 0, root, dp);\n    }\n};",
    "submit_ts": "1720321447",
    "subm_id": "1312323135"
}