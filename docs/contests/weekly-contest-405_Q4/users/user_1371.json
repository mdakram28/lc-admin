{
    "username": "Tyrande",
    "submission": "class Trie {\npublic:\n    unordered_map<int, Trie*> children;\n    int cost;\n    Trie () {\n        cost = 10003;\n    }\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        vector<int> cnt(26, 0);\n        for (auto& w : words) {\n            for (auto c : w) \n                cnt[c-'a']++;\n        }\n        for (auto c : target) {\n            if (cnt[c-'a'] == 0) return -1;\n        }\n        \n        Trie* root = new Trie();\n        int n = words.size();\n        for (int i = 0; i < n; ++i) {\n            insert(root, words[i], costs[i]);\n        }\n        int m = target.size();\n        vector<int> dp(m+1, INT_MAX);\n        dp[0] = 0;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\n        pq.push({0, 0});\n        while (!pq.empty()) {\n            auto p  = pq.top();\n            pq.pop();\n            int start = p.second, val = p.first;\n            if (val > dp[start]) continue;\n            if (val >= dp[m]) break;\n            int cur = start;\n            Trie* head = root;\n            while (cur < m && head->children.count(target[cur] - 'a')) {\n                head = head->children[target[cur] - 'a'];\n                cur++;\n                if (head->cost < 10003) {\n                    if (dp[cur] > dp[start] + head->cost) {\n                        dp[cur] = dp[start] + head->cost;\n                        if (dp[cur] < dp[m])\n                            pq.push(make_pair(dp[cur], cur));\n                    }\n                }\n            }\n        }\n        return dp[m] == INT_MAX ? -1 : dp[m];\n    }\n    void insert(Trie* node, string& w, int cost) {\n        for (int i = 0; i < w.size(); ++i) {\n            int idx = w[i] - 'a';\n            if (node->children.count(idx) == 0) {\n                node->children[idx] = new Trie();\n            }\n            node = node->children[idx];\n        }\n        node->cost = min(node->cost, cost);\n    }\n\n};",
    "submit_ts": "1720322836",
    "subm_id": "1312360364"
}