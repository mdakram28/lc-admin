{
    "username": "fmota",
    "submission": "template<typename T>\nstruct segtree {\n    vector<T> t;\n    int n;\n    segtree(int n): n(n) {\n        t.assign(2 * n, T());\n    }\n    void update(int p, T v){\n        for(t[p += n] = v; p >>= 1; )\n            t[p] = t[p<<1] + t[p<<1|1];\n    }\n    void add(int p, T v){\n        p += n;\n        t[p] = t[p] + v;\n        while(p >>= 1) t[p] = t[p<<1] + t[p<<1|1];\n    }\n    T query(int l, int r){\n        T cl = T(), cr = T();\n        for(l += n, r += n; l < r; l >>= 1, r >>= 1){\n            if(l&1) cl = cl + t[l++];\n            if(r&1) cr = t[--r] + cr;\n        }\n        return cl + cr;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n        int n = a.size();\n        segtree<int> seg(n);\n        vector<int> val(n);\n        auto touch = [&](int i){\n            if(i - 1 >= 0 && i + 1 < n){\n                if(a[i] > max(a[i - 1], a[i + 1])){\n                    val[i] = 1;\n                } else {\n                    val[i] = 0;\n                }\n            } else {\n                val[i] = 0;\n            }\n            seg.update(i, val[i]);\n        };\n        for(int i = 0; i < n; i++) touch(i);\n        vector<int> res;\n        for(auto & q : queries){\n            if(q[0] == 1){\n                int l = q[1], r = q[2];\n                if(l == r){\n                    res.push_back(0);\n                } else {\n                    int ans = seg.query(l, r + 1);\n                    ans -= val[l];\n                    ans -= val[r];\n                    res.push_back(ans);\n                }\n            } else {\n                a[q[1]] = q[2];\n                touch(q[1]);\n                if(q[1]) touch(q[1] - 1);\n                if(q[1] + 1 < n) touch(q[1] + 1);\n                \n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506000",
    "subm_id": "1289603196"
}