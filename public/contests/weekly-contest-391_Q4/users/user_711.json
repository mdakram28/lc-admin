{
    "username": "counter98",
    "submission": "class Solution {\npublic:\n    void getMaxDist(vector<vector<int>>& A, vector<int>& mis, vector<int>& mas, vector<int>& mid, vector<int>& mad) {\n        // Variables to track running extrema\n        int minsum, maxsum, mindiff, maxdiff;\n        \n\n        minsum = maxsum = A[0][0] + A[0][1];\n        mindiff = maxdiff = A[0][0] - A[0][1];\n        mis = {0}; mas = {0}; mid = {0}; mad = {0};\n        for (int i = 1; i < A.size(); i++) {\n            int sum = A[i][0] + A[i][1];\n            int diff = A[i][0] - A[i][1];\n            if (sum < minsum) {\n                minsum = sum;\n                mis = {i};\n            }\n            else if (sum == minsum) {\n                mis.push_back(i);\n            } \n            else if (sum > maxsum) {\n                maxsum = sum;\n                mas = {i};\n            } \n            else if (sum == maxsum) {\n                mas.push_back(i);\n            }\n            \n            if (diff < mindiff) {\n                mindiff = diff;\n                mid = {i};\n            }\n            else if (diff == mindiff) {\n                mid.push_back(i);\n            }  \n            else if (diff > maxdiff) {\n                maxdiff = diff;\n                mad = {i};\n            }\n            else if (diff == maxdiff) {\n                mad.push_back(i);\n            }   \n        }\n    }\n    int MaxDist(vector<vector<int>>& A) {\n        // Variables to track running extrema\n        int minsum, maxsum, mindiff, maxdiff;\n\n        minsum = maxsum = A[0][0] + A[0][1];\n        mindiff = maxdiff = A[0][0] - A[0][1];\n        for (int i = 1; i < A.size(); i++) {\n            int sum = A[i][0] + A[i][1];\n            int diff = A[i][0] - A[i][1];\n            if (sum < minsum)\n                minsum = sum;\n            else if (sum > maxsum)\n                maxsum = sum;\n            if (diff < mindiff)\n                mindiff = diff;\n            else if (diff > maxdiff)\n                maxdiff = diff;\n        }\n\n        int maximum = max(maxsum - minsum, maxdiff - mindiff);\n        return maximum;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> mis, mas, mid, mad;\n        getMaxDist(points, mis, mas, mid, mad);\n        int ans = INT_MAX;\n        for (int x: mis) {\n            vector<vector<int>> A = points;\n            A.erase(A.begin()+x);\n            ans = min(ans, MaxDist(A));\n        }\n        for (int x: mas) {\n            vector<vector<int>> A = points;\n            A.erase(A.begin()+x);\n            ans = min(ans, MaxDist(A));\n        }\n        for (int x: mid) {\n            vector<vector<int>> A = points;\n            A.erase(A.begin()+x);\n            ans = min(ans, MaxDist(A));\n        }\n        for (int x: mad) {\n            vector<vector<int>> A = points;\n            A.erase(A.begin()+x);\n            ans = min(ans, MaxDist(A));\n        }\n        return ans;\n    }\n};"
}