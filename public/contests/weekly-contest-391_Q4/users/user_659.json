{
    "username": "w285714",
    "submission": "class Solution {\npublic:\n    int a(const vector<vector<int>>& p, const pair<int,int>& x){\n        return abs(p[x.first][0]-p[x.second][0])+abs(p[x.first][1]-p[x.second][1]);\n    }\n    // pair<int,int> cal(const vector<vector<int>>& p, const vector<bool>& col){\n    //     int n=p.size();\n    //     int t=col[0]?0:1;\n    //     int r=t;\n    //     int M=-1;\n    //     bool c=1;\n    //     while(c){\n    //         c=0;\n    //         swap(t,r);\n    //         for(int i=0;i<n;++i){\n    //             if(i!=t&&col[i]){\n    //                 int z=a(p,{t,i});\n    //                 if(z>M){\n    //                     M=z;\n    //                     c=1;\n    //                     r=i;\n    //                 }\n    //             }\n    //         }\n    //     }\n    //     return {t,r};\n    // }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<pair<int,int>> a,b;\n        for(int i=0;i<n;++i){\n            a.emplace_back(points[i][0]+points[i][1],i);\n            b.emplace_back(points[i][0]-points[i][1],i);\n        }\n        sort(a.begin(),a.end());\n        sort(b.begin(),b.end());\n        int M=-1;\n        pair<int,int> p;\n        int da=abs(a[0].first-a.back().first);\n        int db=abs(b[0].first-b.back().first);\n        if(db>da){\n            swap(a,b);\n        }\n        auto c=[&](int x){\n            int res=0;\n            int l=0;\n            int r=n-1;\n            while(a[l].second==x){\n                ++l;\n            }\n            while(a[r].second==x){\n                --r;\n            }\n            res=max(res,abs(a[l].first-a[r].first));\n            l=0;\n            r=n-1;\n            while(b[l].second==x){\n                ++l;\n            }\n            while(b[r].second==x){\n                --r;\n            }\n            res=max(res,abs(b[l].first-b[r].first));\n            return res;\n        };\n        return min(c(a[0].second),c(a.back().second));\n    }\n};"
}