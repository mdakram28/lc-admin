{
    "username": "Lambert360",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int width, int height, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        priority_queue<int> hCuts(horizontalCuts.begin(), horizontalCuts.end());\n        priority_queue<int> vCuts(verticalCuts.begin(), verticalCuts.end());\n\n        int h = 0, v = 0;\n        int hPieces = 1, vPieces = 1;\n        long long totalCost = 0;\n\n        while (!hCuts.empty() && !vCuts.empty()) {\n            if (hCuts.top() > vCuts.top()) {\n                totalCost += static_cast<long long>(hCuts.top()) * vPieces;\n                hPieces++;\n                hCuts.pop();\n            } else {\n                totalCost += static_cast<long long>(vCuts.top()) * hPieces;\n                vPieces++;\n                vCuts.pop();\n            }\n        }\n\n        while (!hCuts.empty()) {\n            totalCost += static_cast<long long>(hCuts.top()) * vPieces;\n            hCuts.pop();\n        }\n\n        while (!vCuts.empty()) {\n            totalCost += static_cast<long long>(vCuts.top()) * hPieces;\n            vCuts.pop();\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925634",
    "subm_id": "1320261206"
}