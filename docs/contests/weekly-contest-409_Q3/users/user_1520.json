{
    "username": "ug1Xz2GY3z",
    "submission": "class Solution {\npublic:\n    struct Node{\n        int l,r;\n        int v;\n        bool lazy;\n    };\n    \n    int Build(vector<Node>& dis, int o, int l, int r){\n        dis[o].l=l;\n        dis[o].r=r;\n        \n        if(l==r){\n            dis[o].v=1;\n            return dis[o].v;\n        }\n        int mid = (l+r)>>1;\n        dis[o].v = Build(dis, o<<1, l, mid) + Build(dis, (o<<1)|1, mid+1, r);\n        //cout<<o<<' '<<l<<' '<<r<<' '<<dis[o].v<<endl;\n        return dis[o].v;\n    }\n    \n    int query(vector<Node>& dis, int o, int ql, int qr){\n        if(dis[o].l >= ql && dis[o].r<=qr){\n            return dis[o].v;\n        }else if(dis[o].l > qr || dis[o].r < ql){\n            return 0;\n        }\n        return query(dis, o<<1, ql, qr) + query(dis, o<<1|1, ql, qr);\n    }\n    \n    void push(vector<Node>& dis, int o){\n        dis[o].v = dis[o<<1].v+dis[o<<1|1].v;\n    }\n    \n    void change(vector<Node>& dis, int o, int ql, int qr){\n        if(dis[o].lazy) return;\n        if(dis[o].l >= ql && dis[o].r<=qr){\n            dis[o].v=0;\n            dis[o].lazy = 1;\n            return ;\n        }else if(dis[o].l > qr || dis[o].r < ql){\n            return ;\n        }\n        change(dis, o<<1, ql, qr);\n        change(dis, o<<1|1, ql, qr);\n        push(dis, o);\n    }\n    \n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        int siz = queries.size();\n        vector<Node> dis(n*4);\n        Build(dis, 1, 1, n-1);\n        int tot = n-1;\n        for(int i=0;i<siz;i++){\n            int l=queries[i][0],r=queries[i][1];\n            if(l+1<r) change(dis, 1, l+1, r-1);\n            ans.push_back(dis[1].v);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743689",
    "subm_id": "552352256"
}