{
    "username": "huionhs64",
    "submission": "import math\nimport random\nfrom typing import *\nfrom pprint import pprint\nfrom functools import cache\nimport collections\nfrom copy import deepcopy\nimport heapq\nfrom queue import PriorityQueue\nimport sys\nMOD = 10 ** 9 + 7\nP = 256\n\nsys.setrecursionlimit(2000000)\n\nclass Solution:\n    def countOfPairs(self, nums):\n        self.res = 0\n\n        # print(nums)\n\n        @cache\n        def dp(i, pi, pd):\n            curr = 0\n            for j in range(nums[i] + 1):\n                inc = j\n                dec = nums[i] - j\n                if (pi is None) or (inc >= pi and dec <= pd):\n                    # print(f\"curr : {nums[i]}, idx = {i}, pi : {pi} pd:{pd} inc : {inc}, dec : {dec}\")\n                    if i + 1 == len(nums):\n                        curr += 1\n                    else:\n                        curr += dp(i + 1, inc, dec)\n            return curr % MOD\n\n        return dp(0, None, None)",
    "submit_ts": "1723346408",
    "subm_id": "1351576942"
}