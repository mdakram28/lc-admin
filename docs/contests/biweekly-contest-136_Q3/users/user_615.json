{
    "username": "sagwa-3",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int r = grid.length, c = grid[0].length;\n        int result = 0;\n        for (int i = 0; i < r / 2; ++i) {\n            // [i, j], [r - 1 - i, j] [i, c - 1 - j] [r - 1 - i, c - 1 - j]\n            for (int j = 0; j < c / 2; ++j) {\n                int cnt = grid[i][j] + grid[r - 1 - i][j] + grid[i][c - 1 - j] + grid[r - 1 - i][c - 1 - j];\n                result += Math.min(cnt, 4 - cnt);\n            }\n        }\n        if (r % 2 == 1 && c % 2 == 1) {\n            result += grid[r / 2][c / 2];\n        }\n\n        int unmatchedOne = 0;\n        int match = 0;\n        if (r % 2 == 1) {\n            for (int i = 0; i < c / 2; ++i) {\n                if (grid[r / 2][i] != grid[r / 2][c - 1 - i]) {\n                    unmatchedOne++;\n                } else if (grid[r / 2][i] == 1) {\n                    match ++;\n                }\n            }\n        }\n\n        if (c % 2 == 1) {\n            for (int i = 0; i < r / 2; ++i) {\n                if (grid[i][c / 2] != grid[r - 1 - i][c / 2]) {\n                    unmatchedOne ++;\n                } else if (grid[i][c / 2] == 1) {\n                    match++;\n                }\n            }\n        }\n        result += unmatchedOne;\n        if (unmatchedOne == 0 && match * 2 % 4 == 2) {\n            result += 2;\n        }\n\n        return result;\n\n    }\n}",
    "submit_ts": "1722697651",
    "subm_id": "552267161"
}