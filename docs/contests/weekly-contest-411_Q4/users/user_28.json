{
    "username": "Liwei Cai",
    "submission": "class Solution {\n    typedef long long ll;\n    struct FenwickTree{\n        FenwickTree(int n):a(n+1){}\n        void add(int i,ll x){\n            i++;\n            while(i<a.size()){\n                a[i]+=x;\n                i+=i&(-i);\n            }\n        }\n        ll psum(int r){\n            ll ret=0;\n            while(r>0){\n                ret+=a[r];\n                r-=r&(-r);\n            }\n            return ret;\n        }\n        vector<ll> a;\n    };\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        struct Valid{\n            int l,r;\n        };\n        vector<Valid> val(n);\n        array<int,2> cnt{};\n        int j=0;\n        for(int i=0;i<n;i++){\n            while(j<n&&min(cnt[0],cnt[1])<=k){\n                cnt[s[j]-'0']++;\n                j++;\n            }\n            val[i]={i,min(cnt[0],cnt[1])<=k?j:j-1};\n            cnt[s[i]-'0']--;\n        }\n        sort(val.begin(),val.end(),[](const auto& vl,const auto& vr){\n            return vl.r<vr.r; \n        });\n        struct Query{\n            int l,r,i;\n        };\n        vector<ll> ans(queries.size());\n        vector<Query> qs(queries.size());\n        for(int i=0;i<queries.size();i++)\n            qs[i]={queries[i][0],queries[i][1]+1,i};\n        sort(qs.begin(),qs.end(),[](const auto& ql,const auto& qr){\n            return ql.r<qr.r; \n        });\n        FenwickTree sm(n),lg(n);\n        for(int i=0;i<n;i++)\n            lg.add(i,1);\n        int ival=0;\n        for(const Query& q:qs){\n            while(ival<n&&val[ival].r<=q.r){\n                lg.add(val[ival].l,-1);\n                sm.add(val[ival].l,val[ival].r);\n                ival++;\n            }\n            ans[q.i]=sm.psum(q.r)+lg.psum(q.r)*q.r-(sm.psum(q.l)+lg.psum(q.l)*q.r)-1ll*(q.l+q.r-1)*(q.r-q.l)/2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951177",
    "subm_id": "1359765139"
}