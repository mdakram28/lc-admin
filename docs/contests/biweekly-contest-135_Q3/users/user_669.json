{
    "username": "rkrohit123",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int> mp;\n        int n=nums.size();\n        for(int i=0;i<(n/2);i++){\n            mp[abs(nums[i]-nums[n-i-1])]++;\n        }\n        int maxCount=0;\n        auto it=mp.begin();\n        vector<int> v;\n        while(it!=mp.end()){\n            if((*it).second>maxCount){\n                maxCount=(*it).second;\n                v.push_back((*it).first);\n            }\n            it++;\n        }\n        int l=0,r=v.size()-1;\n        int changes=0;\n        for(int i=0;i<(n/2);i++){\n            if(abs(nums[i]-nums[n-i-1])==v[0])continue;\n            int minm=min(nums[i],nums[n-i-1]);\n            int maxm=max(nums[i],nums[n-i-1]);\n            if(minm+v[0]<=k)changes++;\n            else if(maxm-v[0]>=0)changes++;\n            else changes+=2;\n        }\n        while(r-l>1){\n            int m=(l+r)/2;\n            int tempChanges=0;\n            for(int i=0;i<(n/2);i++){\n                if(abs(nums[i]-nums[n-i-1])==v[m])continue;\n                int minm=min(nums[i],nums[n-i-1]);\n                int maxm=max(nums[i],nums[n-i-1]);\n                if(minm+v[m]<=k)tempChanges++;\n                else if(maxm-v[m]>=0)tempChanges++;\n                else tempChanges+=2;\n            }\n            if(tempChanges>changes)r=m-1;\n            else {\n                changes=tempChanges;\n                l=m;\n            }\n        }\n        int tempChanges=0;\n        for(int i=0;i<(n/2);i++){\n            if(abs(nums[i]-nums[n-i-1])==v[r])continue;\n            int minm=min(nums[i],nums[n-i-1]);\n            int maxm=max(nums[i],nums[n-i-1]);\n            if(minm+v[r]<=k)tempChanges++;\n            else if(maxm-v[r]>=0)tempChanges++;\n            else tempChanges+=2;\n        }\n        changes=min(changes,tempChanges);\n        return changes;\n    }\n};",
    "submit_ts": "1721488871",
    "subm_id": "1327435779"
}