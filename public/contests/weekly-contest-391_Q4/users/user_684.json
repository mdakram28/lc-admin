{
    "username": "fsyun",
    "submission": "class Solution {\n    int MAXY = 100000000;\n    int dis(int x1, int y1, int x2, int y2) {\n        return Math.abs(x1 - x2) + Math.abs(y1 - y2);\n    }\n    int[] f(int[][] a) {\n        int n = a.length, p = 0, q = 0, p2 = 0, q2 = 0;\n        for (int i = 1; i < n; i++) {\n            if (a[i][0] + a[i][1] < a[p][0] + a[p][1])\n                p = i;\n            if (a[i][0] + a[i][1] > a[q][0] + a[q][1])\n                q = i;\n            if (a[i][0] - a[i][1] < a[p2][0] - a[p2][1])\n                p2 = i;\n            if (a[i][0] - a[i][1] > a[q2][0] - a[q2][1])\n                q2 = i;\n        }\n        return dis(a[p][0], a[p][1], a[q][0], a[q][1]) >= dis(a[p2][0], a[p2][1], a[q2][0], a[q2][1]) ? new int[]{a[p][2], a[q][2]} : new int[]{a[p2][2], a[q2][2]};\n    }\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        int[][] a = new int[n][];\n        for (int i = 0; i < n; i++)\n            a[i] = new int[]{points[i][0], points[i][1], i};\n        int[] pr = f(a);\n        int[][] b = new int[n - 1][];\n        int pos = 0;\n        for (int i = 0; i < n; i++)\n            if (a[i][2] != pr[0])\n                b[pos++] = a[i];\n        int[] pr2 = f(b);\n        pos = 0;\n        b = new int[n - 1][];\n        for (int i = 0; i < n; i++)\n            if (a[i][2] != pr[1])\n                b[pos++] = a[i];\n        int[] pr3 = f(b);\n        return Math.min(dis(a[pr2[0]][0], a[pr2[0]][1], a[pr2[1]][0], a[pr2[1]][1]), dis(a[pr3[0]][0], a[pr3[0]][1], a[pr3[1]][0], a[pr3[1]][1]));\n    }\n}"
}