{
    "username": "freakin23",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        string s = \"\";\n        string a = \"\", b = \"\";\n        int c = 1;\n        int n = (int)colors.size();\n        for (auto x : colors) {\n            s += to_string(x);\n            if (c <= k) {\n                if (c & 1) {\n                    a += '1';\n                    b += '0';\n                } else {\n                    a += '0';\n                    b += '1';\n                }\n            } \n            c++;\n        }\n\n        string t = s.substr(0, k - 1);\n        s += t;\n        c = 1;\n        int res = 0;\n        for (int i = 1; i < (int)s.size(); i++) {\n            if (s[i] != s[i - 1]) {\n                c++;\n            } else {\n                c = 1;\n            }\n            res += (c >= k);\n        }\n\n        return res;\n\n        string first_k = s.substr(0, k - 1);\n        string last_k = s.substr(n - k + 1);\n        string add = last_k + first_k;\n        // cout << s << \" \" << a << \" \" << b << \" \" << add << '\\n';\n        // int res = 0;\n        string orig = s;\n        while (s.find(a) != -1) {\n            res += 1;\n            s = s.substr(s.find(a) + 1);\n        }\n\n        s = orig;\n        while (s.find(b) != -1) {\n            res += 1;\n            s = s.substr(s.find(b) + 1);\n        }\n\n        reverse(begin(first_k), end(first_k));\n        while (!first_k.empty()) {\n            last_k += first_k.back();\n            first_k.pop_back();\n            if (last_k == a or last_k == b) {\n                res += 1;\n            }\n            last_k = last_k.substr(1);\n        }\n    \n        return res;\n\n    }\n};",
    "submit_ts": "1720281416",
    "subm_id": "1311824323"
}