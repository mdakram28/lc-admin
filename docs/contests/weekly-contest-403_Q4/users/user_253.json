{
    "username": "MinhBaoSoCool",
    "submission": "class Solution {\npublic:\n    \n    int minArea(vector<vector<int>>& grid, int x, int y, int z, int t){\n        int l=t;\n        int r=y;\n        int top=z;\n        int b=x;\n        bool any1=false;\n        for(int i=x;i<=z;++i){\n            for(int j=y;j<=t;++j){\n                if(grid[i][j]==0) continue;\n                l=min(l, j);\n                r=max(r, j);\n                top=min(top, i);\n                b=max(b, i);\n                any1=true;\n            }\n        }\n        // cout<<\"l = \"<<l<<\", r = \"<<r<<\", top = \"<<top<<\", b = \"<<b<<\"\\n\";\n        if(!any1) return 1;\n        return (r-l+1)*(b-top+1);\n    }\n    \n    int min3Vertical(vector<vector<int>>& grid){\n        int ans=grid[0].size()*grid.size();\n        for(int i=0;i+2<grid[0].size();++i){\n            for(int j=i+1;j+1<grid[0].size();++j){\n                int a1=minArea(grid, 0, 0, grid.size()-1, i);\n                int a2=minArea(grid, 0, i+1, grid.size()-1, j);\n                int a3=minArea(grid, 0, j+1, grid.size()-1, grid[0].size()-1);\n                ans=min(ans, a1+a2+a3);\n            }\n        }\n        return ans;\n    }\n    \n    int min3Horizontal(vector<vector<int>>& grid){\n        int ans=grid[0].size()*grid.size();\n        for(int i=0;i+2<grid.size();++i){\n            for(int j=i+1;j+1<grid.size();++j){\n                int a1=minArea(grid, 0, 0, i, grid[0].size()-1);\n                int a2=minArea(grid, i+1, 0, j, grid[0].size()-1);\n                int a3=minArea(grid, j+1, 0, grid.size()-1, grid[0].size()-1);\n                ans=min(ans, a1+a2+a3);\n            }\n        }\n        return ans;\n    }\n    \n    int min2Vertical(vector<vector<int>>& grid, int i, int j){\n        int ans=grid[0].size()*grid.size();\n        for(int l=0;l+1<grid[0].size();++l){\n            int a1=minArea(grid, i, 0, j, l);\n            int a2=minArea(grid, i, l+1, j, grid[0].size()-1);\n            // cout<<\"a1 = \"<<a1<<\", a2 = \"<<a2<<\"\\n\";\n            ans=min(ans, a1+a2);\n        }\n        return ans;\n    }\n    \n    int min2Horizontal(vector<vector<int>>& grid, int i, int j){\n        int ans=grid[0].size()*grid.size();\n        for(int l=0;l+1<grid.size();++l){\n            int a1=minArea(grid, 0, i, l, j);\n            int a2=minArea(grid, l+1, i, grid.size()-1, j);\n            ans=min(ans, a1+a2);\n        }\n        return ans;\n    }\n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int ans=grid[0].size()*grid.size();\n        int tmp=min3Vertical(grid);\n        ans=min(ans, tmp);\n        // cout<<\"ans1 = \"<<ans<<\"\\n\";\n        tmp=min3Horizontal(grid);\n        ans=min(ans, tmp);\n        // cout<<\"ans2 = \"<<ans<<\"\\n\";\n        for(int i=0;i<grid.size()-1;++i){\n            // cout<<\"i = \"<<i<<\"\\n\";\n            int top=min2Vertical(grid, 0, i);\n            int bot=minArea(grid, i+1, 0, grid.size()-1, grid[0].size()-1);\n            // cout<<\"top = \"<<top<<\", bot = \"<<bot<<\"\\n\";\n            ans=min(ans, top+bot);\n            top=minArea(grid, 0, 0, i, grid[0].size()-1);\n            bot=min2Vertical(grid, i+1, grid.size()-1);\n            // cout<<\"top2 = \"<<top<<\", bot2 = \"<<bot<<\"\\n\";\n            ans=min(ans, top+bot);\n        }\n        for(int i=0;i<grid[0].size()-1;++i){\n            int left=min2Horizontal(grid, 0, i);\n            int right=minArea(grid, 0, i+1, grid.size()-1, grid[0].size()-1);\n            ans=min(ans, left+right);\n            left=minArea(grid, 0, 0, grid.size()-1, i);\n            right=min2Horizontal(grid, i+1, grid[0].size()-1);\n            ans=min(ans, left+right);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719113026.0
}