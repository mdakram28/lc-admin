{
    "username": "bellmanford",
    "submission": "class Solution {\npublic:\n    #define vi vector<int>\n    #define graph vector<vector<int>>\n    #define pb push_back\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int m = circles.size();\n        vector<int> x(m), y(m), r(m);\n        for (int i = 0; i < m; ++i) {\n            x[i] = circles[i][0];\n            y[i] = circles[i][1];\n            r[i] = circles[i][2];\n        }\n        graph g(m);\n        for (int i = 0; i < m; ++i) {\n            for (int j = i + 1; j < m; ++j) {\n                double distance = sqrt(pow(x[i] - x[j], 2) + pow(y[i] - y[j], 2));\n                if (distance <= (double)(r[i] + r[j])) {\n                    g[i].pb(j);\n                    g[j].pb(i);\n                }\n            }\n        }\n        vi v(m, 0), v2(m, 0);\n        for (int i = 0; i < m; ++i) {\n            if (y[i] - r[i] <= 0) v[i] = 1;\n            if (x[i] - r[i] <= 0) v2[i] = 3;\n            if (v[i] == 1 && v2[i] == 3) return false;\n        }\n        queue<int> q;\n        vector<bool> vis(m, false);\n        for (int i = 0; i < m; ++i) {\n            if (v[i] == 1 && !vis[i]) {\n                q.push(i);\n                vis[i] = true;\n            }\n        }\n        while (!q.empty()) {\n            int cur = q.front();\n            q.pop();\n            for (auto &neighbor : g[cur]) {\n                if (vis[neighbor]) continue;\n                vis[neighbor] = true;\n                if (v2[neighbor] == 3) return false;\n                q.push(neighbor);\n            }\n        }\n        vis.assign(m, false);\n        v.assign(m, 0), v2.assign(m, 0);\n        for (int i = 0; i < m; ++i) {\n            if (y[i] + r[i] >= Y) v[i] = 1;\n            if (x[i] + r[i] >= X) v2[i] = 3;\n            if (v[i] == 1 && v2[i] == 3) return false;\n        }\n        for (int i = 0; i < m; ++i) {\n            if (v[i] == 1 && !vis[i]) {\n                q.push(i);\n                vis[i] = true;\n            }\n        }\n        while (!q.empty()) {\n            int cur = q.front();\n            q.pop();\n            for (auto &neighbor : g[cur]) {\n                if (vis[neighbor]) continue;\n                vis[neighbor] = true;\n                if (v2[neighbor] == 3) return false;\n                q.push(neighbor);\n            }\n        }\n        vis.assign(m, false);\n        v.assign(m, 0), v2.assign(m, 0);\n        for (int i = 0; i < m; ++i) {\n            if (x[i] - r[i] <= 0) v[i] = 1;\n            if (x[i] + r[i] >= X) v2[i] = 3;\n            if (v[i] == 1 && v2[i] == 3) return false;\n        }\n        for (int i = 0; i < m; ++i) {\n            if (v[i] == 1 && !vis[i]) {\n                q.push(i);\n                vis[i] = true;\n            }\n        }\n        while (!q.empty()) {\n            int cur = q.front();\n            q.pop();\n            for (auto &neighbor : g[cur]) {\n                if (vis[neighbor]) continue;\n                vis[neighbor] = true;\n                if (v2[neighbor] == 3) return false;\n                q.push(neighbor);\n            }\n        }\n        vis.assign(m, false);\n        v.assign(m, 0), v2.assign(m, 0);\n        for (int i = 0; i < m; ++i) {\n            if (y[i] - r[i] <= 0) v[i] = 1;\n            if (y[i] + r[i] >= Y) v2[i] = 3;\n            if (v[i] == 1 && v2[i] == 3) return false;\n        }\n        for (int i = 0; i < m; ++i) {\n            if (v[i] == 1 && !vis[i]) {\n                q.push(i);\n                vis[i] = true;\n            }\n        }\n        while (!q.empty()) {\n            int cur = q.front();\n            q.pop();\n            for (auto &neighbor : g[cur]) {\n                if (vis[neighbor]) continue;\n                vis[neighbor] = true;\n                if (v2[neighbor] == 3) return false;\n                q.push(neighbor);\n            }\n        }\n        return true;\n    }\n};\n",
    "submit_ts": "1722137931",
    "subm_id": "1335777563"
}