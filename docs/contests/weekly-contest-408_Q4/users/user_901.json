{
    "username": "devansh789",
    "submission": "class Solution {\npublic:\n    int find_set(int x, vector<int> &par){\n        if(par[x]==x) return par[x];\n        else return par[x] = find_set(par[x],par);\n    }\n\n    void union_set(int a, int b, vector<int> &par, vector<int> &rnk){\n        int x = find_set(a,par);\n        int y = find_set(b,par);\n        \n        if(x==y) return;\n        if(rnk[x]>rnk[y]){\n            par[y] = x;\n            rnk[x]+=rnk[y];\n        }\n        else {\n            par[x] = y;\n            rnk[y]+=rnk[x];\n        }\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        int n = c.size();\n        vector<int> par(n+4), rnk(n+4);\n        for(int i = 0; i < (n+4); i++) {\n            par[i] = i;\n            rnk[i] = 1;\n        }\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1; j < n; j++) {\n                long long xx = ((c[i][0]-c[j][0])*1LL)*(c[i][0]-c[j][0]);\n                long long yy = ((c[i][1]-c[j][1])*1LL)*(c[i][1]-c[j][1]);\n                long long rr = ((c[i][2]+c[j][2])*1LL)*(c[i][2]+c[j][2]);\n                if((xx+yy)<=rr) union_set(i,j,par,rnk);\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            if(c[i][0]<=c[i][2]) union_set(i,n,par,rnk);\n            if((c[i][0]+c[i][2])>=X) union_set(i,n+1,par,rnk);\n            if(c[i][1]<=c[i][2]) union_set(i,n+2,par,rnk);\n            if((c[i][1]+c[i][2])>=Y) union_set(i,n+3,par,rnk);\n        }\n        bool ans = false;\n        // if(find_set(n,par)!=find_set(n+3,par)&&find_set(n+1,par)!=find_set(n+3,par)) ans = true;\n        // if(find_set(n+1,par)!=find_set(n+2,par)&&find_set(n,par)!=find_set(n+3,par)) ans = true;\n        if(find_set(n,par)!=find_set(n+2,par)&&find_set(n+1,par)!=find_set(n+3,par)&&find_set(n,par)!=find_set(n+1,par)&&find_set(n+2,par)!=find_set(n+3,par)) ans = true;\n        return ans;\n    }\n};",
    "submit_ts": "1722137114",
    "subm_id": "1335754585"
}