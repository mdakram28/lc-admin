{
    "username": "GaoYusong",
    "submission": "#ifdef ONLINE_JUDGE\n#include \"cp/debug.h\"\n#else\n#define debug(...)\n#define debugArr(...)\n#endif\n\nstruct Rec {\n    int x0, y0;\n    int x1, y1;\n    \n    Rec() {\n        x0 = INT_MAX;\n        y0 = INT_MAX;\n        x1 = -1;\n        y1 = -1;\n    }\n    \n    int area() {\n        if (x0 > x1 || y0 > y1) return 0;\n        return (x1 - x0 + 1) * (y1 - y0 + 1);\n    }\n    \n    inline bool overlap(const Rec &rec) {\n        return x0 <= rec.x1 && rec.x0 <= x1 && y0 <= rec.y1 && rec.y0 <= y1;\n    }\n};\n\nostream &operator<<(ostream &os, const Rec &rec) {\n    os << \"(\" << rec.x0 << \",\" << rec.y0 << \") (\" << rec.x1 << \", \" << rec.y1 << \")\";\n    return os;\n}\n\nclass Solution {\npublic:\n    vector<pair<int, int>> points;\n    vector<Rec> recs;\n    int ans;\n\n    void gao(int idx, int area) {\n        if (area >= ans) return;\n        if (idx >= points.size()) {\n            ans = min(ans, area);\n            return;\n        }\n        \n        for (int i = 0; i < 3; i++) {\n            Rec tmp = recs[i];\n            int old = recs[i].area();\n            recs[i].x0 = min(recs[i].x0, points[idx].first);\n            recs[i].y0 = min(recs[i].y0, points[idx].second);\n            recs[i].x1 = max(recs[i].x1, points[idx].first);\n            recs[i].y1 = max(recs[i].y1, points[idx].second);\n            if (!recs[i].overlap(recs[(i + 1) % 3]) && !recs[i].overlap(recs[(i + 2) % 3])) {\n                gao(idx + 1, area - old + recs[i].area());\n            }\n            recs[i] = tmp;\n        }\n    }\n\n    int minimumSum(vector<vector<int>>& grid) {\n        debug(grid);\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j]) {\n                    points.push_back(make_pair(i, j));\n                }\n            }\n        }\n        debug(points);\n        ans = INT_MAX;\n        recs = vector<Rec>(3);\n\n        recs[0].x0 = min(recs[0].x0, points[0].first);\n        recs[0].y0 = min(recs[0].y0, points[0].second);\n        recs[0].x1 = max(recs[0].x1, points[0].first);\n        recs[0].y1 = max(recs[0].y1, points[0].second);\n        gao(1, 1);\n        return ans;\n    }\n};\n",
    "submit_ts": 1719114988.0
}