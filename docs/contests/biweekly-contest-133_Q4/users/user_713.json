{
    "username": "amansingh0550",
    "submission": "#define MODULO 1000000007\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n         vector<vector<long long>> dp(n + 1, vector<long long>(401 , 0));\n        dp[0][0] = 1;\n\n        unordered_map<int, int> mp;\n        for (auto& i : requirements) {\n            mp[i[0] + 1] = i[1];\n        }\n\n   \n\n        for (int i = 1; i <= n; i++) {\n            for (int k = 0; k < 401; k++) {\n                for (int j = 0; j < i; j++) {\n                    int prev = k - j;\n                    if (prev >= 0) {\n                        dp[i][k] = (dp[i][k] +dp[i - 1][prev]) % MODULO;\n                    }\n                }\n            }\n\n            if (mp.count(i)) {\n                int target = mp[i];\n                for (int k = 0; k <401; k++) {\n                    if (k != target) {\n                        dp[i][k] = 0;\n                    }\n                }\n            }\n        }\n\n        long long result = 0;\n        for (long long count : dp[n]) {\n            result = (result + count) % MODULO;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1719071067",
    "subm_id": "1296838342"
}