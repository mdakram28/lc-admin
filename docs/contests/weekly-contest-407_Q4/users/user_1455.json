{
    "username": "issylu1101",
    "submission": "\n\nclass Solution {\npublic:\n    long long dfs(vector<int>& diff, int start, int end, int cur) {\n        if (start > end) return 0;\n        if (start == end) return diff[start] - cur;\n        vector<int> mins;\n        long long ans = 0;\n        int mini = INT_MAX;\n        for (int i = start; i <= end; i++) {\n            if (diff[i] - cur == 0) {\n                mins.push_back(i);\n            } else if (diff[i] - cur > 0) {\n                if (diff[i] - cur < mini) {\n                    mins = {i};\n                    mini = diff[i] - cur;\n                } else if (diff[i] - cur == mini) {\n                    mins.push_back(i);\n                }\n            }\n        }\n        mins.insert(mins.begin(), start - 1);\n        mins.push_back(end + 1);\n        ans = mini;\n        for (int i = 0; i < mins.size() - 1; i++) {\n            ans += dfs(diff, mins[i] + 1, mins[i + 1] - 1, cur + mini);\n        }\n        return ans;\n    }\n\n    long long dfs2(vector<int>& diff, int start, int end, int cur) {\n        if (start > end) return 0;\n        if (start == end) return abs(diff[start] - cur);\n        vector<int> maxs;\n        long long ans = 0;\n        int maxi = INT_MIN;\n        for (int i = start; i <= end; i++) {\n            if (diff[i] - cur == 0) {\n                maxs.push_back(i);\n            } else if (diff[i] - cur < 0) {\n                if (diff[i] - cur > maxi) {\n                    maxs = {i};\n                    maxi = diff[i] - cur;\n                } else if (diff[i] - cur == maxi) {\n                    maxs.push_back(i);\n                }\n            }\n        }\n        maxs.insert(maxs.begin(), start - 1);\n        maxs.push_back(end + 1);\n        ans = abs(maxi);\n        for (int i = 0; i < maxs.size() - 1; i++) {\n            ans += dfs2(diff, maxs[i] + 1, maxs[i + 1] - 1, cur + maxi);\n        }\n        return ans;\n    }\n    \n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n        long long ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (diff[i] == 0) {\n                continue;\n            } else if (diff[i] > 0) {\n                int j = i;\n                while (j < n && diff[j] > 0) {\n                    j++;\n                }\n                ans += dfs(diff, i, j - 1, 0);\n                i = j - 1;\n            } else if (diff[i] < 0) {\n                int j = i;\n                while (j < n && diff[j] < 0) {\n                    j++;\n                }\n                ans += dfs2(diff, i, j - 1, 0);\n                i = j - 1;\n            }\n        }\n        return ans;\n    }\n};\n\n\n// [3,5,1,2]\n// [4,6,2,4]\n// [i, i, i, i]\n\n// [1,3,2]\n// [2,1,4]\n// [i,d,i]\n",
    "submit_ts": "1721533190",
    "subm_id": "1328003343"
}