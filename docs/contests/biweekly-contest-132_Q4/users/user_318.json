{
    "username": "cp_sud",
    "submission": "class Solution {\npublic:\n    long long maximumLength(vector<int>& sud, int k) {\n        int n = sud.size();\n        long long memo[n][k + 2];\n        \n        for(int i=0; i<n; i++){\n            for(int j=0; j<=k+1; j++){\n                memo[i][j]=0;\n            }\n        }\n        \n        map<pair<long long, long long>, long long> prev;\n        map<long long, long long> curr;\n\n        for (int a = 0; a < n; ++a) {\n            for (int b = 0; b <= k; ++b) {\n                memo[a][b] = max(memo[a][b], 1 + prev[{sud[a], b}]);\n                if (b != 0) {\n                    memo[a][b] = max(memo[a][b], 1 + curr[b - 1]);\n                }\n            }\n            long long temp = 0;\n            for (int b = 0; b <= k; ++b) {\n                prev[{sud[a], b}] = max(prev[{sud[a], b}], memo[a][b]);\n                temp = max(temp, memo[a][b]);\n                curr[b] = max(curr[b], temp);\n            }\n        }\n\n        long long res = 0;\n        for (int a = n-1; a >=0; a--) {\n            res = max(res, memo[a][k]);\n        }\n        return res;\n    }\n};\n",
    "submit_ts": 1717861988.0
}