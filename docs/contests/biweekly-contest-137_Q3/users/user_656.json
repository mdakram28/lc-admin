{
    "username": "Rnb_Hiphop\u5929\u624d\u9752\u5e74",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        long res = Long.MIN_VALUE;\n        int[][] max = new int[m][3];\n        for (int i = 0; i < m; i++) {\n            int[] row = board[i];\n            Integer[] id = new Integer[n];\n            for (int j = 0; j < n; j++) {\n                id[j] = j;\n            }\n            Arrays.sort(id, (a, b) -> row[b] - row[a]);\n            max[i][0] = id[0];\n            max[i][1] = id[1];\n            max[i][2] = id[2];\n        }\n\n        for (int i = 0; i < m; i++) {\n            for (int x = 0; x < 3; x++) {\n                int c1 = max[i][x];\n                for (int j = i + 1; j < m; j++) {\n                    for (int y = 0; y < 3; y++) {\n                        int c2 = max[j][y];\n                        if (c2 == c1) {\n                            continue;\n                        }\n                        for (int k = j + 1; k < m; k++) {\n                            for (int z = 0; z < 3; z++) {\n                                int c3 = max[k][z];\n                                if (c1 != c3 && c2 != c3) {\n                                    res = Math.max(res, (long)board[i][c1] + board[j][c2] + board[k][c3]);\n                                } \n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723906318",
    "subm_id": "556317696"
}