{
    "username": "weirdsmoothie",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int i, x, y, m = grid.size(), n = grid[0].size(), ans = 2e9;\n        for (i = 0; i < n; i++) {\n            x = calc(grid, 0, i, 0, m);\n            y = walk(grid, i, n, 0, m);\n            if (x && y) ans = min(ans, x + y);\n            x = calc(grid, i, n, 0, m);\n            y = walk(grid, 0, i, 0, m);\n            if (x && y) ans = min(ans, x + y);\n        }\n        for (i = 0; i < m; i++) {\n            x = calc(grid, 0, n, 0, i);\n            y = walk(grid, 0, n, i, m);\n            if (x && y) ans = min(ans, x + y);\n            x = calc(grid, 0, n, i, m);\n            y = walk(grid, 0, n, 0, i);\n            if (x && y) ans = min(ans, x + y);\n        }\n        return ans;\n    }\n    \n    int walk(vector<vector<int>>& grid, int L, int R, int U, int D) {\n        int i, x, y, ans = 2e9;\n        for (i = L; i < R; i++) {\n            x = calc(grid, L, i, U, D);\n            y = calc(grid, i, R, U, D);\n            if (x && y) ans = min(ans, x + y);\n        }\n        for (i = U; i < D; i++) {\n            x = calc(grid, L, R, U, i);\n            y = calc(grid, L, R, i, D);\n            if (x && y) ans = min(ans, x + y);\n        }\n        return ans;\n    }\n    \n    int calc(vector<vector<int>>& grid, int L, int R, int U, int D) {\n        int i, j, l = R, r = L, u = D, d = U;\n        for (i = U; i < D; i++) {\n            for (j = L; j < R; j++) {\n                if (!grid[i][j]) continue;\n                l = min(l, j);\n                r = max(r, j);\n                u = min(u, i);\n                d = max(d, i);\n            }\n        }\n        if (l > r || u > d) return 0;\n        return (d - u + 1) * (r - l + 1);\n    }\n};",
    "submit_ts": "1719111457",
    "subm_id": "1297273952"
}