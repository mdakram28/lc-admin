{
    "username": "hehelego",
    "submission": "using uint = unsigned int;\nconst uint N = 500000 + 10;\nstruct Node {\n  uint tr[26];\n  uint sz;\n  uint cost;\n} nodes[N];\nuint root, cnt, dp[N];\n\nclass Solution {\npublic:\n  int minimumCost(string target, vector<string> &words, vector<int> &costs) {\n    memset(nodes, 0, sizeof(nodes));\n    root = cnt = 1;\n\n    uint n = target.length(), m = words.size();\n    for (uint i = 0; i < m; i++) {\n      uint ptr = root;\n      nodes[root].sz++;\n      const auto &word = words[i];\n      for (auto it = word.rbegin(); it != word.rend(); it++) {\n        uint c = *it - 'a';\n        auto &ch = nodes[ptr].tr[c];\n        ch = ch == 0 ? ++cnt : ch;\n        ptr = ch;\n        nodes[ptr].sz++;\n      }\n      if (nodes[ptr].cost == 0) nodes[ptr].cost = costs[i];\n      nodes[ptr].cost = min(nodes[ptr].cost, (uint)costs[i]);\n    }\n\n    const uint MAX = UINT_MAX - (uint)5e4;\n    for (uint i = 1; i <= n; i++) {\n      dp[i] = MAX;\n      uint ptr = root;\n      for (uint j = i; j > 0; j--) {\n        uint c = target[j - 1] - 'a';\n        ptr = nodes[ptr].tr[c];\n        if (nodes[ptr].sz == 0) break;\n\n        if (nodes[ptr].cost > 0) dp[i] = min(dp[i], dp[j - 1] + nodes[ptr].cost);\n      }\n    }\n\n    return dp[n] < MAX ? dp[n] : -1;\n  }\n};\n\n",
    "submit_ts": "1720323529",
    "subm_id": "1312377797"
}