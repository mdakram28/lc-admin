{
    "username": "etian6795",
    "submission": "class Solution {\n    public long MOD = 1000000007;\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long[][] dp = new long[n][1001];\n        long[] pref = new long[1002];\n        for(int i = n-1; i >= 0; i--) {\n            long[] temp = new long[1002];\n            for(int j = 0; j <= nums[i]; j++) {\n                if(i==n-1) {\n                    dp[i][j] = 1;\n                } else {\n                    // j, nums[i+1]\n                    // nums[i]-j, 0\n                    // nums[i+1] - (nums[i]-j), nums[i+1]\n                    // j -> nums[i+1]\n                    // 0 -> nums[i+1]-j\n                    // 0 -> nums[i]-j\n                    // int l = Math.max(j, nums[i+1] - (nums[i]-j))\n                    if(j > nums[i+1]) {\n                        temp[j+1] = temp[j] + dp[i][j];\n                        continue;\n                    }\n                    int l = Math.max(j, nums[i+1] - (nums[i]-j));\n                    // System.out.println(j+\" \"+l);\n                    dp[i][j] = (dp[i][j] + pref[nums[i+1]+1] - pref[l])%MOD;\n                    // for(int k = j; k <= nums[i+1]; k++) {\n                    //     if(nums[i]-j >= nums[i+1]-k) dp[i][j] = (dp[i][j] + dp[i+1][k])%MOD;\n                    // }\n                }\n                temp[j+1] = temp[j] + dp[i][j];\n            }\n            pref = temp;\n        }\n        long ans = 0;\n        for(int i = 0; i <= nums[0]; i++) ans = (ans + dp[0][i])%MOD;\n        return (int) ans;\n    }\n}",
    "submit_ts": "1723346889",
    "subm_id": "1351587351"
}