{
    "username": "subtlecold",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        diffs = [abs(nums[i]-nums[-i-1]) for i in range(int(len(nums)/2))]\n        cnts = Counter(diffs)\n        frequencyDict = {}\n        # print(cnts)\n        for diff in cnts:\n            freq = cnts[diff]\n            if freq in frequencyDict:\n                frequencyDict[freq] = min(diff, frequencyDict[freq])\n            else:\n                frequencyDict[freq] = diff\n        frequency = [(-freq, frequencyDict[freq]) for freq in frequencyDict]\n        frequency.sort()\n        # print(frequency)\n        \n        def countChanges(frequentDiff):\n            ans = 0\n            for i in range(int(len(nums)/2)):\n                diff = abs(nums[i] - nums[-i-1]) \n                if diff != frequentDiff:\n                    if min(nums[i], nums[-i-1]) + diff >= frequentDiff or k-max(nums[i], nums[-i-1])+diff >= frequentDiff:\n                        ans += 1\n                    else:\n                        ans += 2\n            return ans\n        \n        ans = len(nums)\n        for pair in frequency:\n            freq, diff = -pair[0], pair[1]\n            if (len(nums) / 2 - freq) >= ans:\n                break\n            ans = min(ans, countChanges(diff))\n            \n        \n        return ans",
    "submit_ts": "1721489555",
    "subm_id": "1327456842"
}