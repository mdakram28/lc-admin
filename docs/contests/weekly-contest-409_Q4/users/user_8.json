{
    "username": "huah-f",
    "submission": "struct Bit{\n    Bit(int n):n(n){t=vector<long long>(n+1);}\n    int n;\n    vector<long long>t;\n    void add(int x,int v){\n        while(x<=n){\n            t[x]+=v;\n            x+=x&-x;\n        }\n    }\n    long long query(int x){\n        int ans=0;\n        while(x) ans+=t[x],x-=x&-x;\n        return ans;\n    }\n};\nclass Solution {\npublic:\n    vector<int> numberOfAlternatingGroups(vector<int>& colors, vector<vector<int>>& queries) {\n        auto &a=colors;\n        vector<int>ans;\n        int n=colors.size();\n        Bit bc(n+1),bsum(n+1);\n        set<pair<int,int>>s;\n\n        auto Ins=[&](int l,int r){\n            int k=r-l+2;\n            bc.add(k,1);\n            bsum.add(k,k);\n            s.insert({l,r});\n        };\n        auto Del=[&](int l,int r){\n            int k=r-l+2;\n            bc.add(k,-1);\n            bsum.add(k,-k);\n            s.erase({l,r});\n        };\n        for(int i=0;i<colors.size();++i){\n            int j=i;\n            while(j+1<colors.size()&&a[j+1]!=a[j]) ++j;\n            Ins(i,j);\n            i=j;\n        }\n\n        auto IsOne=[&](){\n            if(s.size()==1) return true;\n            if(s.size()==2){\n                return colors.back()!=colors.front();\n            }\n            return false;\n        };\n\n        auto Query=[&](int sz){\n            if(IsOne()){\n                if(n%2==0)\n                    return n;\n                return n-sz+1;\n            }\n            // cout<<s.size()<<'\\n';\n            // for(auto [l,r]:s)\n            //     cout<<l<<' '<<r<<'\\n';\n            int ret=0;\n            auto x=*s.begin();\n            auto y=*prev(s.end());\n            int lx=x.second-x.first+1;\n            int ly=y.second-y.first+1;\n            if(colors.back()!=colors.front()){\n                bc.add(lx+1,-1);\n                bc.add(ly+1,-1);\n                bsum.add(lx+1,-(lx+1));\n                bsum.add(ly+1,-(ly+1));\n\n                bc.add(lx+ly+1,1);\n                bsum.add(lx+ly+1,(lx+ly+1));\n            }\n\n            ret = (bsum.query(n+1)-bsum.query(sz))-1ll*sz*(bc.query(n+1)-bc.query(sz));\n\n            if(colors.back()!=colors.front()){\n                bc.add(lx+ly+1,-1);\n                bsum.add(lx+ly+1,-(lx+ly+1));\n\n                bc.add(lx+1,1);\n                bc.add(ly+1,1);\n                bsum.add(lx+1,(lx+1));\n                bsum.add(ly+1,(ly+1));\n            }\n            return ret;\n        };\n\n        for(auto &q:queries){\n            if(q[0]==1){\n                ans.push_back(Query(q[1]));\n            }\n            else{\n                int i=q[1],c=q[2];\n                a[i]=c;\n                auto it=s.upper_bound({i,n+1});\n                if(it!=s.begin()) --it;\n                if(it!=s.begin()) --it;\n                if(it!=s.begin()) --it;\n\n                vector<pair<int,int>>g;\n                vector<pair<int,int>>h;\n                auto Check=[&](int l,int r){\n                    h.push_back({l,r});\n                    if(i>=l&&i<=r){\n                        if(l<i) g.push_back({l,i-1});\n                        g.push_back({i,i});\n                        if(i<r) g.push_back({i+1,r});\n                    }\n                    else g.push_back({l,r});\n                };\n                \n                for(int i=0;i<6;++i)\n                    if(it!=s.end()){\n                        Check(it->first,it->second);\n                        ++it;\n                    }\n                \n                for(auto [l,r]:h) Del(l,r);\n                // for(auto [l,r]:g) \n                //     cout<<l<<' '<<r<<'\\n';\n\n                for(int i=0;i<g.size();++i){\n                    int j=i;\n                    while(j+1<g.size()&&a[g[j+1].first]!=a[g[j].second]) ++j;\n                    Ins(g[i].first,g[j].second);\n                    i=j;\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n/*\n10101\n\n0101  10101 1\n\nolors =\n[0,1,0,1]\nqueries =\n[[1,3],[2,2,1],[1,3],[1,3]]\n\u6dfb\u52a0\u5230\u6d4b\u8bd5\u7528\u4f8b\n\u8f93\u51fa\n[4,4,4]\n\u9884\u671f\u7ed3\u679c\n[4,1,1]\n\n0 1 0 1\n\n0 1 1 1\n*/",
    "submit_ts": "1722742046",
    "subm_id": "552342149"
}