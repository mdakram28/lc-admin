{
    "username": "cs22b017",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        int pre[30][n+1];\n        memset(pre,0,sizeof(pre));\n        for(int i=0;i<30;i++){\n            for(int j=1;j<=n;j++){\n                pre[i][j]=pre[i][j-1]+((nums[j-1] & (1<<i)) > 0);\n            }\n        }\n        long long ans=0;\n        for(int j=0;j<n;j++){\n            int l=j+1,r=n;\n            for(int i=0;i<30;i++){\n                int mask=(1<<i);\n                int low=j,high=n+1;\n                while(high-low > 1){\n                    int mid=low+(high-low)/2;\n                    if(pre[i][mid]-pre[i][j] < mid-j) high=mid;\n                    else low=mid;\n                }\n                if((k&mask) == 0) l=max(l,high);\n                else r=min(r,low);\n            } \n            ans+=max(0,r-l+1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720281397",
    "subm_id": "1311823599"
}