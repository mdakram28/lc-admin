{
    "username": "FFiona",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        diff_nums = [0] * len(nums)\n        diff_target = [0] * len(target)\n        diff_nums[0] = nums[0]\n        for i in range(1, len(nums)):\n            diff_nums[i] = nums[i] - nums[i-1]\n        diff_target[0] = target[0]\n        for i in range(1, len(target)):\n            diff_target[i] = target[i] - target[i-1]\n        # two diff array, for each time can change one number or two number \n        # one number +1 and another number -1\n        diffs = [diff_nums[i] - diff_target[i] for i in range(len(diff_nums))]\n        # one pos one neg -> cancel off together\n        ans = 0\n        pos_diff = sum([i for i in diffs if i > 0])\n        neg_diff = sum([-i for i in diffs if i < 0])\n        ans = max(pos_diff, neg_diff)\n        return ans\n        \n        ",
    "submit_ts": "1721530551",
    "subm_id": "1327936897"
}