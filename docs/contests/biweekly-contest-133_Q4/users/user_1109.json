{
    "username": "Prudhvi-Nath-Reddy",
    "submission": "class Solution {\npublic:\n    \n    vector<int> v ;\n    vector<vector<int>>dp ;\n    int mod = 1e9+7 ;\n    int rec(int level ,int prev)\n    {\n        if( level == v.size())return 1 ;\n        if(dp[level][prev] != -1)return dp[level][prev] ;\n        int ans = 0 ;\n        for(int i = 0 ; i<= level ; i++)\n        {\n            \n            int pos = prev + i ;\n            if( pos>400)break ;\n            if(v[level] == -1)\n            {\n                ans  =(ans + rec(level+1 ,pos))%mod ;\n            }\n            else\n            {\n                if( pos == v[level])\n                {\n                    ans = rec(level+1 ,pos)%mod ;\n                    break ;\n                }\n            }           \n            \n        }\n        return  dp[level][prev] =ans%mod ;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        v.assign(n,-1) ;\n        dp.assign(n+1,vector<int>(401,-1)) ;\n        for( auto i : req)\n        {\n            v[i[0]] = i[1] ;\n        }\n        return rec(0,0)%mod;\n        \n        \n    }\n};",
    "submit_ts": 1719071170.0
}