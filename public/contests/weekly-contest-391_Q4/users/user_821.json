{
    "username": "modest-shternhrz",
    "submission": "class Solution {\npublic:\n    int cal(vector<vector<int>> points, int i){\n        points.erase(points.begin() + i);\n        vector<int> f;\n        vector<int> g;\n        int r = 100000000;\n        for(vector<int>& p: points){\n            f.push_back(p[0] + p[1]);\n            g.push_back(r - p[0] + p[1]);\n        }\n        int min_f = 0, max_f = 0, min_g = 0, max_g = 0;\n        for(int i = 0; i < f.size(); ++i){\n            if(f[i] < f[min_f]) min_f = i;\n            if(f[i] > f[max_f]) max_f = i;\n            if(g[i] < g[min_g]) min_g = i;\n            if(g[i] > g[max_g]) max_g = i;\n        }\n        return max(g[max_g] - g[min_g], f[max_f] - f[min_f]);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<int> f;\n        vector<int> g;\n        int r = 100000000;\n        for(vector<int>& p: points){\n            f.push_back(p[0] + p[1]);\n            g.push_back(r - p[0] + p[1]);\n        }\n        int min_f = 0, max_f = 0, min_g = 0, max_g = 0;\n        for(int i = 0; i < f.size(); ++i){\n            if(f[i] < f[min_f]) min_f = i;\n            if(f[i] > f[max_f]) max_f = i;\n            if(g[i] < g[min_g]) min_g = i;\n            if(g[i] > g[max_g]) max_g = i;\n        }\n        int ans = INT_MAX;\n        if(g[max_g] - g[min_g] > f[max_f] - f[min_f]){\n            ans = min(ans, cal(points, min_g));\n            ans = min(ans, cal(points, max_g));\n        }else{\n            ans = min(ans, cal(points, min_f));\n            ans = min(ans, cal(points, max_f));\n        }\n        return ans;\n    }\n};"
}