{
    "username": "d_ananta_",
    "submission": "class Solution {\npublic:\n    array<int, 5> merge(array<int, 5> a, array<int, 5> b, vector<int> &nums) {\n        if(a[4] == -1) return b;\n        if(b[4] == -1) return a;\n        array<int, 5> ret;\n        int al = a[2], ar = a[3], bl = b[2], br = b[3];\n        ret[0] = al == ar ? nums[ar] > nums[bl] : a[0];\n        ret[1] = bl == br ? nums[ar] < nums[bl] : b[1];\n        ret[2] = al;\n        ret[3] = br;\n        ret[4] = a[4] + b[4] + (al != ar && nums[ar] > nums[bl] && a[1]) + (bl != br && nums[ar] < nums[bl] && b[0]);\n        return ret;\n    }\n    void build(int sl, int sr, int si, vector<array<int, 5>> &st, vector<int> &nums) {\n        if(sl == sr) {\n            st[si] = {1, 1, sl, sr, 0};\n            return;\n        }\n        int sm = (sl + sr)/2;\n        build(sl, sm, 2*si+1, st, nums);\n        build(sm+1, sr, 2*si+2, st, nums);\n        st[si] = merge(st[2*si+1], st[2*si+2], nums);\n    }\n    void update(int idx, int val, int sl, int sr, int si, vector<array<int, 5>> &st, vector<int> &nums) {\n        if(sr < idx || idx < sl) return;\n        if(sl == sr) {\n            st[si] = {1, 1, sl, sr, 0};\n            return;\n        }\n        int sm = (sl + sr)/2;\n        update(idx, val, sl, sm, 2*si+1, st, nums);\n        update(idx, val, sm+1, sr, 2*si+2, st, nums);\n        st[si] = merge(st[2*si+1], st[2*si+2], nums);\n    }\n    array<int, 5> query(int l, int r, int sl, int sr, int si, vector<array<int, 5>> &st, vector<int> &nums) {\n        if(sr < l || r < sl) {\n            // cout << sl << \" \" << sr << \" (\" << 0 << \" \" << 0 << \" \" << -1 << \")\\n\";\n            return {0, 0, 0, 0, -1};\n        }\n        if(l <= sl && sr <= r) {\n            // cout << sl << \" \" << sr << \" (\" << st[si][0] << \" \" << st[si][1] << \" \" << st[si][4] << \")\\n\";\n            return st[si];\n        }\n        int sm = (sl + sr)/2;\n        auto ql = query(l, r, sl, sm, 2*si+1, st, nums);\n        auto qr = query(l, r, sm+1, sr, 2*si+2, st, nums);\n        auto ret = merge(ql, qr, nums);\n        // cout << sl << \" \" << sr << \" (\" << ret[0] << \" \" << ret[1] << \" \" << ret[4] << \")\\n\";\n        return ret;\n    }\n    void debug(int sl, int sr, int si, vector<array<int, 5>> &st) {\n        if(sl == sr) {\n            cout << sl << \" \" << sr << \" (\" << st[si][0] << \" \" << st[si][1] << \" \" << st[si][4] << \")\\n\";\n            return;\n        }\n        int sm = (sl + sr)/2;\n        debug(sl, sm, 2*si+1, st);\n        debug(sm+1, sr, 2*si+2, st);\n        cout << sl << \" \" << sr << \" (\" << st[si][0] << \" \" << st[si][1] << \" \" << st[si][4] << \")\\n\";\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<array<int, 5>> st(4*n);\n        vector<int> ans;\n        build(0, n-1, 0, st, nums);\n        // debug(0, n-1, 0, st);\n        for(const auto &i: queries) {\n            if(i[0] == 1) {\n                ans.push_back(query(i[1], i[2], 0, n-1, 0, st, nums)[4]);\n            } else if(i[0] == 2) {\n                nums[i[1]] = i[2];\n                update(i[1], i[2], 0, n-1, 0, st, nums);\n                // debug(0, n-1, 0, st);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508040.0
}