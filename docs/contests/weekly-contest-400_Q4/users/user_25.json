{
    "username": "teacher-six",
    "submission": "\nusing ll = long long;\nconst int N = 1e5 + 10;\nint p[30][N];\n\nint get(int l, int r) {\n    int ans = 0;\n    for(int i = 0; i < 30; i++) {\n        int sz = p[i][r];\n        if(l) sz -= p[i][l - 1];\n        if(sz == (r - l + 1)) ans += (1 << i);\n    }\n    return ans;\n}\n\n\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        int n = a.size(); \n        for(int i = 0; i < 30; i++) {\n            for(int j = 0; j < n; j++) {\n                p[i][j] = 0;\n            }\n        }\n        \n        for(int i = 0; i < 30; i++) {\n            for(int j = 0; j < n; j++) {\n                if(a[j] & (1 << i)) {\n                    p[i][j] = 1;\n                }\n                if(j) p[i][j] += p[i][j - 1];\n            }\n        }\n        \n        \n        ll ans = 20000000000000ll;\n        for(int i = 0; i < n; i++) {\n            int l = i, r = n - 1;\n            int p1 = -1, p2 = -1;\n            while(l <= r) {\n                int mid = l + (r - l) / 2;\n                int v = get(i, mid);\n                if(v <= k) {\n                    p1 = v;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            \n            l = i; r = n - 1;\n            while(l <= r) {\n                int mid = l + (r - l) / 2;\n                int v = get(i, mid);\n                if(v >= k) {\n                    p2 = v;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n            \n            if(p1 != -1)\n                ans = min(ans, abs(k - p1) + 0ll);\n            if(p2 != -1)\n                ans = min(ans, abs(k - p2) + 0ll);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717296678.0
}