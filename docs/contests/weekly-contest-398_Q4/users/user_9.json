{
    "username": "chh9976",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        jump = 0\n        @lru_cache(None)\n        def dfs(f, g, jump):\n            if f > k + 1:\n                return 0\n            if f == k:\n                if f + (2 ** jump) <= k+1:\n                    if g:\n                        return 1 + dfs(f + (2 ** jump), 0, jump + 1)\n                    if not g:\n                        return 1 + dfs(f - 1, 1, jump) + dfs(f + (2 ** jump), 0, jump + 1)\n                else:\n                    if g:\n                        return 1\n                    else:\n                        return 1 + dfs(f - 1, 1, jump)\n            elif f == 0 or g == 1:\n                if f + (2 ** jump) <= k+1:\n                    return dfs(f + (2 ** jump), 0, jump+1)\n                else:\n                    return 0\n            else:\n                if f + (2 ** jump) <= k+1:\n                    return dfs(f - 1, 1, jump) + dfs(f + (2 ** jump), 0, jump + 1)\n                else:\n                    return dfs(f - 1, 1, jump)\n        return dfs(1, 0, 0)\n        ",
    "submit_ts": "1716086720",
    "subm_id": "1261761127"
}