{
    "username": "Nelson84",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        /*\n            abs(a[i] - a[n-1-i]) = X for all (0 <= i < n)\n            a[0], a[n-1]\n            a[1], a[n-2]\n            xo   ox\n        */\n        int n = nums.size();\n        int i = 0;\n        int j = n-1;\n        int diff_k[k+1];\n        memset(diff_k, 0, sizeof(diff_k));\n        unordered_map<int, int> diff_to_freq;\n        while(i<j){\n            int diff = abs(nums[i]-nums[j]);\n            diff_to_freq[diff]++;\n            vector<int> pair = {nums[i], nums[j]};\n\n            int change_oper_1 = max(max(nums[i], abs(k-nums[i])), max(nums[j], abs(k-nums[j])));\n            if(change_oper_1+1<=k) diff_k[change_oper_1+1]++;\n            i++;\n            j--;\n        }\n\n        int half = n/2;\n        int min_oper = half;\n        for(int i=1; i<=k; i++) diff_k[i] += diff_k[i-1];\n        for(auto& [diff, freq]: diff_to_freq){\n            int other_freq = half - freq;\n            int two_oper = diff_k[diff];\n            int one_oper = other_freq-two_oper;\n            //printf(\"other:%d two:%d one:%d\\n\", other_freq, two_oper, one_oper);\n\n            min_oper = min(min_oper, 2*two_oper + one_oper);\n        }\n\n        return min_oper;\n    }\n};",
    "submit_ts": "1721489258",
    "subm_id": "1327447809"
}