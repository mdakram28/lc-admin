{
    "username": "yash8589",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hori, vector<int>& verti) {\n        int multv = 1;\n        int multh = 1;\n        vector<pair<int, pair<int, int>>> cuts;\n        for(int i=0;i<m-1;i++){\n            cuts.push_back({hori[i], {i, 0}});\n        }\n        for(int i=0;i<n-1;i++){\n            cuts.push_back({verti[i], {i, 1}});\n        }\n        long long maxval = 0;\n        sort(cuts.begin(), cuts.end(), greater<>());\n        for(int i=0;i<cuts.size();i++){\n            auto p = cuts[i];\n            long long cost = p.first;\n            long long idx = p.second.first;\n            long long dir = p.second.second;\n            if(dir == 0){\n                maxval += multv*cost;\n                multh++;\n            }\n            else {\n                maxval += multh*cost;\n                multv++;\n            }\n        }\n        return maxval;\n\n    }\n};",
    "submit_ts": "1720926314",
    "subm_id": "1320282528"
}