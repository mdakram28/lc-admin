{
    "username": "maybe_aryan_",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define mod 1000000007\n\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vb vector<bool>\n#define vvi vector<vector<int>>\n#define vvb vector<vector<bool>>\n#define vvc vector<vector<char>>\n#define vvll vector<vector<long long int>>\n#define vc vector<char>\n#define vll vector<long long>\n#define mii map<int, int>\n#define umii unordered_map<int, int>\n#define si set<int>\n#define rep(i, s, e) for (ll i = s; i <= e; i++)\n#define ren(i, s, e) for (ll i = s; i >= e; i--)\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int cnt = 0;\n        bool flag = false;\n        rep(i, 0, n-1){\n            rep(j, 0, m-1){\n                pair<int, int> ul = {i, j};\n                pair<int, int> dl = {n - 1 - i, j};\n                pair<int, int> dr = {n - 1 - i, m - 1 - j};\n                pair<int, int> ur = {i, m - 1 - j};\n                \n                \n                int points= 1;\n                if(i != n - i - 1) points *= 2;\n                if(j != m - j - 1) points *= 2;\n                \n                if(points == 4){\n                    int zeroes = 0, ones = 0;\n                    if(grid[i][j] == 0) zeroes++;\n                    else ones++;\n                    if(grid[n-1-i][j] == 0) zeroes++;\n                    else ones++;\n                    if(grid[n-1-i][m-1-j] == 0) zeroes++;\n                    else ones++;\n                    if(grid[i][m-1-j] == 0) zeroes++;\n                    else ones++;\n                    if(ones == zeroes) flag = true;\n                    // cout << i << \" \" << j << \" \" << zeroes << \" \" << ones << endl;\n                    if(ones > zeroes){ \n                        cnt += (4 - ones);\n                        grid[i][j] = 1;\n                        grid[n-1-i][j] = 1;\n                        grid[n-1-i][m-1-j] = 1;\n                        grid[i][m-1-j] = 1;\n                    }\n                    else{\n                        cnt += (4 - zeroes);\n                        grid[i][j] = 0;\n                        grid[n-1-i][j] = 0;\n                        grid[n-1-i][m-1-j] = 0;\n                        grid[i][m-1-j] = 0;\n                    }\n                }\n                else if(points == 2){\n                    continue;\n                }\n                else{\n                    if(grid[i][j] == 1) grid[i][j] = 0, cnt++;   \n                }\n            }\n        }\n        // cout << \"=====\" << cnt << endl;\n        int colextra1 = 0, help = 0, rowextra1 = 0;\n        if(m & 1){\n            int col = m / 2;\n            int s = 0, e = n-1;\n            while(s < e){\n                if(grid[s][col] != grid[e][col]){\n                    cnt++;\n                    help++;\n                }   \n                else if(grid[s][col] == 0){\n                    \n                }\n                else{\n                    colextra1++;\n                }\n                s++, e--;\n            }\n        }\n        \n        if(n & 1){\n            int row = n / 2;\n            int s = 0, e = m-1;\n            int extra1 = 0, extra2 = 0;\n            while(s < e){\n                if(grid[row][s] != grid[row][e]){\n                    cnt++;\n                    help++;\n                }   \n                else if(grid[row][s] == 0){\n                   \n                }\n                else{\n                    rowextra1++;\n                }\n                s++, e--;\n            }\n        }\n        if((rowextra1&1) and (colextra1&1)){\n            \n        }\n        else if(help == 0){\n            if((rowextra1&1) or (colextra1&1)){\n                cnt += 2;\n            }\n        }\n        return cnt;\n    }\n};",
    "submit_ts": "1722698638",
    "subm_id": "1343187074"
}