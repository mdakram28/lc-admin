{
    "username": "Farras Faddila",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        using ll = long long;\n        int n = s.length();\n        vector<vector<int>> p(2, vector<int>(n));\n        p[0][0] = (s[0] == '0');\n        p[1][0] = (s[0] == '1');\n        for (int i = 1; i < n; i++) {\n            p[0][i] = p[0][i - 1];\n            p[1][i] = p[1][i - 1];\n            p[s[i] - '0'][i]++;\n        }\n        vector<int> ri(n);\n        for (int i = 0; i < n; i++) {\n            int p0 = (i > 0 ? p[0][i - 1] : 0);\n            int p1 = (i > 0 ? p[1][i - 1] : 0);\n            int i0 = upper_bound(p[0].begin(), p[0].end(), k + p0) - p[0].begin();\n            int i1 = upper_bound(p[1].begin(), p[1].end(), k + p1) - p[1].begin();\n            ri[i] = max(i0, i1) - 1;\n        }\n        vector<ll> pre(n);\n        pre[0] = ri[0] - 0 + 1;\n        for (int i = 1; i < n; i++) {\n            pre[i] = pre[i - 1] + (ri[i] - i + 1);\n        }\n        auto sum_itv = [&](int x, int y) -> ll {\n            if (x > y) return 0;\n            return pre[y] - (x > 0 ? pre[x - 1] : 0);\n        };\n        vector<ll> ans;\n        for (auto q : queries) {\n            int L = q[0], R = q[1];\n            int u = upper_bound(ri.begin() + L, ri.begin() + R + 1, R) - ri.begin();\n            ll tmp = 0;\n            tmp += 1ll * (R + 1 - u) * (R + 2 - u) / 2;\n            tmp += sum_itv(L, u - 1);\n            ans.push_back(tmp);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723950506",
    "subm_id": "1359747735"
}