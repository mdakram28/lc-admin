{
    "username": "coder_amitk0091",
    "submission": "\nclass Solution {\npublic:\n    long long ans = 0;\n\n    void dnc(int start, int end, vector<int>& diff) {\n        if (start > end) return;\n\n        int flag = (diff[start] > 0) ? 1 : -1;\n        int mx = INT_MIN;\n        int mn = INT_MAX;\n\n        for (int i = start; i <= end; ++i) {\n            mx = max(diff[i], mx);\n            mn = min(diff[i], mn);\n        }\n\n        if (flag > 0) {\n            ans += mn;\n            for (int i = start; i <= end; ++i) {\n                diff[i] -= mn;\n            }\n        } else {\n            ans += abs(mx);\n            for (int i = start; i <= end; ++i) {\n                diff[i] -= mx;\n            }\n        }\n\n        int newStart = -1;\n        for (int i = start; i <= end; ++i) {\n            if (newStart == -1 && diff[i] != 0) {\n                newStart = i;\n            } else if (newStart != -1 && diff[i] == 0) {\n                dnc(newStart, i - 1, diff);\n                newStart = -1;\n            }\n        }\n\n        if (newStart != -1) {\n            dnc(newStart, end, diff);\n        }\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n\n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        int start = -1;\n        for (int i = 0; i < n; ++i) {\n            if (start == -1 && diff[i] != 0) {\n                start = i;\n            } else if (start != -1 && (diff[i] == 0 || (i > 0 && diff[i] / abs(diff[i]) != diff[i - 1] / abs(diff[i - 1])))) {\n                dnc(start, i - 1, diff);\n                start = (diff[i] != 0) ? i : -1;\n            }\n        }\n\n        if (start != -1) {\n            dnc(start, n - 1, diff);\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1721533113",
    "subm_id": "1328001582"
}