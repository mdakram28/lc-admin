{
    "username": "pinaki_basu",
    "submission": "#define vi vector<int>\n\nclass Solution {\n\n    int slidingWindow (const string& s, int n, const vi& zeroPlacing, int k) {\n        int leftBorder = 0, ans = 0, length = k*k+k, sz = zeroPlacing.size(), zeroCnt = k;\n        for (int i=0; i<n; i++) {\n            if (leftBorder+k >= sz-1) return ans;\n            int rightHandSide = max(zeroPlacing[leftBorder+k], i+length-1);\n            int maxRightPoss = zeroPlacing[leftBorder+k+1];\n            //cout<<i<<\" & \"<<k<<\" & \"<<zeroPlacing[leftBorder]<<\" -> \"<<rightHandSide<<\":\"<<maxRightPoss<<endl;\n            int shortAns = max(0, maxRightPoss-rightHandSide);\n            ans += shortAns;\n            if (s[i] == '0') {\n                leftBorder++;\n            }\n            \n        }\n        return ans;\n    }\n\npublic:\n    int numberOfSubstrings(string s) {\n        \n        int n = s.length();\n        int maxiZero = 0;\n        for (int cnt = 1; cnt < n; cnt++) {\n            int ones = n - cnt;\n            if (ones >= cnt*cnt) maxiZero = cnt;\n            else break;\n        }\n        int ans = 0;\n        \n        int cntOne = 0;\n        for (int i=0; i<n; i++) {\n            if (s[i] == '0') {\n                ans += (cntOne*(cntOne+1))/2;\n                cntOne=0;\n            } else cntOne++;\n        }\n        ans += (cntOne*(cntOne+1))/2;\n\n\n        vi zeroPlacing(1,-1);\n        for (int i=0; i<n; i++) \n            if (s[i] == '0') zeroPlacing.push_back(i);\n        zeroPlacing.push_back(n);\n        //cout<<\"ZeroPlacing : \"; for (auto curr : zeroPlacing) cout<<curr<<\" \"; cout<<endl;\n        //Number of zeros in the string can be at max maxiZero for string to be dominant\n        for (int cnt = 1; cnt <= maxiZero; cnt++)\n            ans += slidingWindow (s, n, zeroPlacing, cnt);\n        return ans; \n    }\n};",
    "submit_ts": "1722137808",
    "subm_id": "1335774309"
}