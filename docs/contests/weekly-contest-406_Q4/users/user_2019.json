{
    "username": "dohoanggiahuy317",
    "submission": "import heapq\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # Convert to min-heap\n        horizontalCut = [-cost for cost in horizontalCut]\n        verticalCut = [-cost for cost in verticalCut]\n        heapq.heapify(horizontalCut)\n        heapq.heapify(verticalCut)\n        \n        hori, ver = 1, 1\n        ans = 0\n\n        while horizontalCut and verticalCut:\n            # print(ans, horizontalCut, verticalCut)\n            if -horizontalCut[0] > -verticalCut[0]:\n                ans -= heapq.heappop(horizontalCut) * ver\n                hori += 1\n            else:\n                ans -= heapq.heappop(verticalCut) * hori\n                ver += 1\n\n        while horizontalCut:\n            ans -= heapq.heappop(horizontalCut) * ver\n        while verticalCut:\n            ans -= heapq.heappop(verticalCut) * hori\n\n        return ans\n",
    "submit_ts": "1720925987",
    "subm_id": "1320272466"
}