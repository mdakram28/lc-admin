{
    "username": "Lo_rdP_ran__jay",
    "submission": "#define ll long long int\n#define ld long double\n#define pb push_back\n#define vb vector<bool>\n#define vi vector<int>\n#define vc vector<char>\n#define vvc vector<vc>\n#define vvi vector<vi>\n#define vvvi vector<vvi>\n#define vs vector<string>\n#define pii pair<int, int>\n#define vpii vector<pii>\n#define mpi map<int, int>\n#define ff first\n#define ss second\n#define mod 1000000007\n#define fr(i, a, b) for (int i = a; i < b; i++)\n#define rfr(i, a, b) for (int i = b; i >= a; i--)\n#define cont continue\n#define br break\n#define all(x) (x).begin(), (x).end()\nclass Solution {\npublic:\n    int bfs(vvi &graph, int st, int tg1, int tg2, int nodes) {\n    queue<int> q;\n    vi vis(nodes + 4, 0);\n    q.push(st);\n    vis[st] = 1;\n    \n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int v : graph[u]) {\n            if (!vis[v]) {\n                q.push(v);\n                vis[v] = 1;\n            }\n        }\n    }\n    return vis[tg1] || vis[tg2];\n}\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& ci) {\n        int n=ci.size();\n        vector<pair<pii, int>> c(n);  \n        fr(i,0,n){\n            c[i]={{ci[i][0],ci[i][1]},ci[i][2]};\n        }\n        vvi e(ci.size() + 4);\n        fr(i,0,n){  \n            if (c[i].ff.ff <= c[i].ss) {\n                e[n].push_back(i);\n                e[i].push_back(n);\n            }\n            if (c[i].ff.ss <= c[i].ss) {\n                e[n + 1].push_back(i);\n                e[i].push_back(n + 1);\n            }\n            if (X - c[i].ff.ff <= c[i].ss) {\n                e[n + 2].push_back(i);\n                e[i].push_back(n + 2);\n            }\n            if (Y - c[i].ff.ss <= c[i].ss) {\n                e[n + 3].push_back(i);\n                e[i].push_back(n + 3);\n            }\n            fr(j,i+1,n) {\n               // int r = c[i].ss + c[j].ss;\n                double d = sqrt(pow(c[i].ff.ff - c[j].ff.ff, 2) + pow(c[i].ff.ss - c[j].ff.ss, 2));\n                if (c[i].ss + c[j].ss >= d) {\n                    e[i].push_back(j);\n                    e[j].push_back(i);\n                }\n            }\n        }\n        \n        int block = 0;\n        block = max(bfs(e, n, n+1, n + 2, n + 4), bfs(e, n + 3, n + 2, n + 1, n + 4));\n        if(block<0){\n            block =0;\n        }\n        return block == 0;   \n    }\n};\n",
    "submit_ts": "1722139067",
    "subm_id": "1335806933"
}