{
    "username": "BZH110",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        vector<long long> ans(queries.size());\n        int n = s.size();\n        vector<vector<int>> a(n);\n        int cnt[2]{0}, r = 0;\n        for(int i=0;i<n;i++){\n            a[i] = {-1, i, i};\n            if(i > 0)\n                cnt[s[i-1]-'0']--;\n            while(r < n && (cnt[s[r]-'0'] < k || cnt[1 - (s[r]-'0')] <= k)){\n                cnt[s[r]-'0']++;\n                r++;\n            }\n            a[i][0] = r - i;\n            a[i][2] = r - 1;\n        }\n        vector<long long> pre(n + 1, 0);\n        for(int i=0;i<n;i++){\n            pre[i+1] = pre[i] + a[i][2];\n        }\n        for(int i=0;i<queries.size();i++){\n            queries[i].push_back(i);\n        }\n        sort(queries.begin(), queries.end(), [](vector<int>& a, vector<int>& b){return a[1] < b[1];});\n        int mid = 0, index = 0;\n        for(long long i=0;i<n;i++){\n            while(mid < i && a[mid + 1][2] <= i)\n                mid++;\n            while(index < queries.size() && queries[index][1] == i){\n                long long l = queries[index][0], r = queries[index][1];\n                if(mid >= l)\n                    ans[queries[index][2]] = ((r - l + 1) + (r - mid + 1)) * (mid - l + 1) / 2 - max((i * (mid - l + 1)) - (pre[mid + 1] - pre[l]), 0LL) + (i - mid + 1) * (i - mid) / 2;\n                else\n                    ans[queries[index][2]] = (i - l + 2) * (i - l + 1) / 2;\n                index++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951376",
    "subm_id": "1359770057"
}