{
    "username": "hazzler",
    "submission": "class Solution {\n    struct segtree{\n \n        typedef long long ll;\n        \n        struct node{\n            ll dp[2][2];\n            node(ll x = 0){\n                dp[1][1] = x;\n                dp[0][0] = dp[0][1] = dp[1][0] = 0LL;\n            }\n            node operator+(node o){\n                node res;\n                for (int i = 0; i < 2; ++i){\n                    for (int j = 0; j < 2; ++j){\n                        res.dp[i][j] = max({0LL, dp[i][0] + o.dp[0][j], dp[i][0] + o.dp[1][j], dp[i][1] + o.dp[0][j]});\n                    }\n                }\n                return res;\n            }\n        };\n\n        int n;\n        vector <node> t;\n\n        segtree(int n): n(n), t(4 * n) {}\n        \n        void upd(int p, ll x, int tl, int tr, int v){\n            if (tl + 1 == tr) return void(t[v] = node(x));\n            int tm = tl + tr >> 1;\n            if (p < tm) upd(p, x, tl, tm, v * 2 + 1);\n            else upd(p, x, tm, tr, v * 2 + 2);\n            t[v] = t[v * 2 + 1] + t[v * 2 + 2];\n        }\n        \n        void upd(int p, ll x){\n            upd(p, x, 0, n, 0);\n        }\n        \n        ll get(){\n            ll res = 0;\n            for (int i = 0; i < 2; ++i){\n                for (int j = 0; j < 2; ++j){\n                    res = max(res, t[0].dp[i][j]);\n                }\n            }\n            return res;\n        }\n\n    };\n    \n    const int mod = 1e9 + 7;\n    \npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        segtree st(n);\n        for (int i = 0; i < n; ++i){\n            st.upd(i, nums[i]);\n        }\n        int ans = 0;\n        for (auto &q: queries){\n            st.upd(q[0], q[1]);\n            ans = (ans + st.get()) % mod;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716691733",
    "subm_id": "1268031219"
}