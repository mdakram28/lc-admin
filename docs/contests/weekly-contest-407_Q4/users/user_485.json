{
    "username": "tinku_vishnu17",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n=nums.length;long dp[]=new long[n];\n        dp[n-1]=Math.abs(target[n-1]-nums[n-1]);\n        long prev=0; //nums[i] > target[i]\n        if(nums[n-1]<target[n-1])prev=1;\n        for(int i=n-2;i>=0;i--){\n            long curr=0; long currDiff=Math.abs(nums[i]-target[i]);\n            if(nums[i]<target[i])curr=1;\n            if(prev==curr){\n                long min=Math.min(Math.abs(nums[i+1]-target[i+1]),Math.abs(nums[i]-target[i]));\n                currDiff-=min;\n            }\n            dp[i]=currDiff+dp[i+1];\n            prev=curr;\n        }\n        return dp[0];\n    }\n}",
    "submit_ts": "1721531578",
    "subm_id": "1327964523"
}