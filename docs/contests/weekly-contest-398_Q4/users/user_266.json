{
    "username": "Sanath_Kulla",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        map<pair<int,int>,int> dp;\n        if(k == 0)return 2;\n        if(k  == 1)return 4;\n        int ans = 0;\n        using ll = long long;\n        auto find = [&](auto self , ll val , ll add)->int{\n                if(val > k){\n                    return 0;\n                }\n                if(val == k)return 1;\n                if(dp.find({val ,add})!=dp.end())return dp[{val , add}];\n                return dp[{val , add}] = self(self,val + (1<<add), add+1) + self(self , val + (1<<add)-1,add+1);\n        };\n        ans += find(find , 0 , 0);\n        ans += find(find , 1 , 1);\n        ans += find(find , 2 , 1);\n        return ans;\n    }\n};",
    "submit_ts": 1716087875.0
}