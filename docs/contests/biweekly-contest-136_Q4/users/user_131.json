{
    "username": "KLatitude",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> g(n);\n        for (int i = 0; i < n - 1; i ++ ) {\n            int u = edges[i][0], v = edges[i][1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n\n        vector<vector<pair<int, int>>> f(n, vector<pair<int, int>>(2, {-1, 0}));\n\n        auto dfs = [&](const auto &self, int u, int fa) -> void {\n            for (int v : g[u]) {\n                if (v == fa)\n                    continue;\n                self(self, v, u);\n\n                auto p = f[v][0];\n                int cnt = 1;\n                if (v % 2 == 0)\n                    cnt = 2;\n\n                p.second += cnt;\n                if (p.second >= f[u][0].second) {\n                    f[u][1] = f[u][0];\n                    f[u][0] = {v, p.second};\n                } else if (p.second >= f[u][1].second) {\n                    f[u][1] = {v, p.second};\n                }\n            }\n        };\n\n        dfs(dfs, 0, -1);\n        vector<int> res(n);\n        \n        // for (int i = 0; i < n; i ++ ) {\n        //     cout << i << endl;\n        //     cout << f[i][0].first << ' ' << f[i][0].second << endl;\n        //     cout << f[i][1].first << ' ' << f[i][1].second << endl;\n        // }\n        auto dfs2 = [&](const auto &self, int u, int fa, int fa_sp) -> void {\n            int cnt = fa_sp;\n            if (fa != -1) {\n                if (fa % 2 == 0)\n                    cnt += 2;\n                else\n                    cnt += 1;\n            }\n            res[u] = max(f[u][0].second, cnt);\n            \n            // cout << u << ' ' << fa << ' ' << cnt << endl;\n            \n            for (int v : g[u]) {\n                if (v == fa)\n                    continue;\n\n                int nx = cnt;\n                if (v == f[u][0].first)\n                    nx = max(cnt, f[u][1].second);\n                else\n                    nx = max(cnt, f[u][0].second);\n\n                self(self, v, u, nx);\n            }\n        };\n\n        dfs2(dfs2, 0, -1, 0);\n        return res;\n    }\n};",
    "submit_ts": "1722698989",
    "subm_id": "552273522"
}