{
    "username": "finalLeeterman",
    "submission": "class Solution {\n  // unordered_map<int, vector<int>(32, -1)> dp;\n  unordered_map<int, unordered_map<int, int>> dp;\n  int backtrack(int i, int jump, int k) {\n    if (i > k+1) return 0;\n    if (dp.count(i) && dp[i].count(jump)) return dp[i][jump];\n\n    int acc = 0;\n    if (i == k) acc++;\n    if (i != 0) {\n      if (i-1 == k) {\n        acc++;\n      }\n      acc += backtrack(i-1+pow(2,jump), jump+1, k);\n    }\n    acc += backtrack(i+pow(2,jump), jump+1, k);\n    return dp[i][jump] = acc;\n  }\n\npublic:\n  int waysToReachStair(int k) {\n    return backtrack(1, 0, k);\n  }\n};",
    "submit_ts": "1716089586",
    "subm_id": "1261846177"
}