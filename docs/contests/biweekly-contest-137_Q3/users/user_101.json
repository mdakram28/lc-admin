{
    "username": "Vlad",
    "submission": "class Solution {\npublic:\nlong long maximumValueSum(vector<vector<int>>& board) {\n    long long res = LLONG_MIN;\n    int m = board.size(), n = board[0].size();\n    vector<int> ids(n);\n    vector<vector<pair<int, int>>> max_ids(m);\n    iota(begin(ids), end(ids), 0);\n    for (int i = 0; i < m; ++i) {\n        vector<int> ids_i(ids);\n        sort(begin(ids_i), end(ids_i), [&](int x, int y){\n            return board[i][x] > board[i][y];\n        });\n        for (int j = 0; j < 3; ++j)\n            max_ids[i].push_back({board[i][ids_i[j]], ids_i[j]});\n    }\n    sort(begin(max_ids), end(max_ids), greater<>());\n    for (int i = 0; i < m; ++i)\n        for (int j = i + 1; j < m; ++j)\n            for (int k = j + 1; k < m; ++k) {\n                if ((long long)max_ids[i][0].first + max_ids[j][0].first + + max_ids[k][0].first <= res)\n                    break;\n                for (int i1 = 0; i1 < 3; ++i1)\n                    for (int i2 = 0; i2 < 3; ++i2)\n                        for (int i3 = 0; i3 < 3; ++i3)\n                            if (max_ids[i][i1].second != max_ids[j][i2].second && \n                               max_ids[i][i1].second != max_ids[k][i3].second && \n                               max_ids[j][i2].second != max_ids[k][i3].second)\n                                res = max(res,\n                                    (long long)max_ids[i][i1].first + max_ids[j][i2].first + max_ids[k][i3].first\n                                );\n            }\n    return res;\n}\n};",
    "submit_ts": "1723907711",
    "subm_id": "1359120824"
}