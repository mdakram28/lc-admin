{
    "username": "tttyyy49",
    "submission": "class Solution {\n    int[][] grid;\n    \n    public int minimumSum(int[][] grid) {\n        this.grid = grid;\n        int res = Integer.MAX_VALUE;\n        int m = grid.length, n = grid[0].length;\n        \n        for (int h0 = 0; h0 < m - 1; ++h0) {\n            for (int h1 = h0 + 1; h1 < m - 1; ++h1) {\n                int cnt = area(0, h0, 0, n - 1) + area(h0 + 1, h1, 0, n - 1) + area(h1 + 1, m - 1, 0, n - 1);\n                res = Math.min(res, cnt);\n            }\n            for (int v0 = 0; v0 < n - 1; ++v0) {\n                int cnt = area(0, h0, 0, n - 1) + area(h0 + 1, m - 1, 0, v0) + area(h0 + 1, m - 1, v0 + 1, n - 1);\n                res = Math.min(res, cnt);\n                \n                cnt = area(0, h0, 0, v0) + area(0, h0, v0 + 1, n - 1) + area(h0 + 1, m - 1, 0, n - 1);\n                res = Math.min(res, cnt);\n            }\n        }\n        \n        for (int v0 = 0; v0 < n - 1; ++v0) {\n            for (int v1 = v0 + 1; v1 < n - 1; ++v1) {\n                int cnt = area(0, m - 1, 0, v0) + area(0, m - 1, v0 + 1, v1) + area(0, m - 1, v1 + 1, n - 1);\n                res = Math.min(res, cnt);\n            }\n            for (int h0 = 0; h0 < m - 1; ++h0) {\n                int cnt = area(0, h0, 0, v0) + area(h0 + 1, m - 1, 0, v0) + area(0, m - 1, v0 + 1, n - 1);\n                res = Math.min(res, cnt);\n                \n                cnt = area(0, m - 1, 0, v0) + area(0, h0, v0 + 1, n - 1) + area(h0 + 1, m - 1, v0 + 1, n - 1);\n                res = Math.min(res, cnt);\n            }\n        }\n        \n        return res;\n    }\n    \n    int area(int r0, int r1, int c0, int c1) {\n        int rmin = r1, rmax = r0;\n        int cmin = c1, cmax = c0;\n        \n        boolean has1 = false;\n        for (int r = r0; r <= r1; ++r) {\n            for (int c = c0; c <= c1; ++c) {\n                if (grid[r][c] == 0) continue;\n                has1 = true;\n                rmin = Math.min(rmin, r);\n                rmax = Math.max(rmax, r);\n                cmin = Math.min(cmin, c);\n                cmax = Math.max(cmax, c);\n            }\n        }\n        \n        if (!has1) return 0;\n        return (rmax - rmin + 1) * (cmax - cmin + 1);\n    }\n}",
    "submit_ts": 1719112196.0
}