{
    "username": "Bills_King",
    "submission": "class Solution {\npublic:\n\n    bool isTouch(const vector<int> &circleA, const vector<int> &circleB)\n    {\n        double distance = (int64_t)(circleB[0]-circleA[0])*(int64_t)(circleB[0]-circleA[0]) + \n                        (int64_t)(circleB[1]-circleA[1])*(int64_t)(circleB[1]-circleA[1]);\n\n        double rsum = circleA[2] + circleB[2];\n        return rsum*rsum >= distance;\n    }\n\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        // sort(circles.begin(), circles.end(), [](vector<int> &a, vector<int> &b)\n        // {\n        //     return a[0]-a[2] < b[0]-b[2];\n        // });\n\n\n        vector<int> reachLT(circles.size(), 0);\n        vector<int> reachRB(circles.size(), 0); \n        // left or top += 1\n        // right or bottom += 2\n        for(int t=0;t<5;++t)\n        {\n            for(int i=0;i<circles.size();++i)\n            {\n                if( circles[i][0]-circles[i][2] <= 0 || circles[i][1]+circles[i][2] >= Y)\n                {\n                    reachLT[i] = 1;\n                }\n                if( circles[i][0]+circles[i][2] >= X || circles[i][1]-circles[i][2] <= 0)\n                {\n                    reachRB[i] = 1;\n                }\n\n                for(int k=0;k<circles.size();++k)\n                {\n                    if( isTouch(circles[i], circles[k]) )\n                    {\n                        reachLT[i] = max(reachLT[i], reachLT[k]);\n                        reachRB[i] = max(reachRB[i], reachRB[k]);\n                    }\n                }\n            }\n        }\n\n    \n\n\n        for(int i=0;i<circles.size();++i)\n        {\n            //cout<<reachLT[i]<<\", \"<<reachRB[i]<<\"\\n\";\n            if( reachLT[i] == 1 && reachRB[i] == 1 )\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138887",
    "subm_id": "1335802237"
}