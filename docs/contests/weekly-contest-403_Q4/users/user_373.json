{
    "username": "yishanchen2016",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        int area = Integer.MAX_VALUE;\n        for (int i = 0; i < m - 2; i++) {\n            for (int i2 = i + 1; i2 < m - 1; i2++) {\n                int p1 = minimumArea(grid, 0, n - 1, 0, i);\n                int p2 = minimumArea(grid, 0, n - 1, i + 1, i2);\n                int p3 = minimumArea(grid, 0, n - 1, i2 + 1, m - 1);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        for (int i = 0; i < n - 2; i++) {\n            for (int i2 = i + 1; i2 < n - 1; i2++) {\n                int p1 = minimumArea(grid, 0, i, 0, m - 1);\n                int p2 = minimumArea(grid, i + 1, i2, 0, m - 1);\n                int p3 = minimumArea(grid, i2 + 1, n - 1, 0, m - 1);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            for (int i2 = 0; i2 < n - 1; i2++) {\n                int p1 = minimumArea(grid, 0, i2, 0, i);\n                int p2 = minimumArea(grid, i2 + 1, n - 1, 0, i);\n                int p3 = minimumArea(grid, 0, n - 1, i + 1, m - 1);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            for (int i2 = 0; i2 < n - 1; i2++) {\n                int p1 = minimumArea(grid, 0, i2, i + 1, m - 1);\n                int p2 = minimumArea(grid, i2 + 1, n - 1, i + 1, m - 1);\n                int p3 = minimumArea(grid, 0, n - 1, 0, i);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            for (int i2 = 0; i2 < n - 1; i2++) {\n                int p1 = minimumArea(grid, 0, i2, 0, i);\n                int p2 = minimumArea(grid, 0, i2, i + 1, m - 1);\n                int p3 = minimumArea(grid, i2 + 1, n - 1, 0, m - 1);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            for (int i2 = 0; i2 < n - 1; i2++) {\n                int p1 = minimumArea(grid, 0, i2, 0, m - 1);\n                int p2 = minimumArea(grid, i2 + 1, n - 1, 0, i);\n                int p3 = minimumArea(grid, i2 + 1, n - 1, i + 1, m - 1);\n                area = Math.min(area, p1 + p2 + p3);\n            }\n        }\n        return area;\n    }\n    \n    public int minimumArea(int[][] grid, int left, int right, int top, int bot) {\n        boolean b = false;\n        int tl1 = bot, tl2 = right, tr1 = bot, tr2 = 0, bl1 = 0, bl2 = right, br1 = 0, br2 = 0;\n        for (int i = top; i <= bot; i++) {\n            for (int j = left; j <= right; j++) {\n                if (grid[i][j] == 1) {\n                    tl1 = Math.min(tl1, i);\n                    tl2 = Math.min(tl2, j);\n                    tr1 = Math.min(tr1, i);\n                    tr2 = Math.max(tr2, j);\n                    bl1 = Math.max(bl1, i);\n                    bl2 = Math.min(bl2, j);\n                    br1 = Math.max(br1, i);\n                    br2 = Math.max(br2, j);\n                    b = true;\n                }\n            }\n        }\n        \n        if (!b) return 0;\n        \n        // System.out.println(tl1 + \" \" +tl2);\n        // System.out.println(tr1 + \" \" +tr2);\n        // System.out.println(bl1 + \" \" +bl2);\n        // System.out.println(br1 + \" \" +br2);\n        \n        int h = bl1-tl1 +1, w = tr2-tl2+1;\n        \n        return h*w;\n    }\n}",
    "submit_ts": "1719114711",
    "subm_id": "1297352378"
}