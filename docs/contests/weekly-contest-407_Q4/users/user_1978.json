{
    "username": "hancker",
    "submission": "#include <vector>\n#include <cmath>\n#include <algorithm>\n\nclass Solution {\npublic:\n    long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n        int n = nums.size();\n    vector<int> diffi(n);\n        \n        // Compute the difference array\n        for (int i = 0; i < n; ++i) {\n            diffi[i] = target[i] - nums[i];\n        }\n\n        long long store = 0;\n        int c_s_d = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diffi[i - 1] > 0 && diffi[i] > 0) || (diffi[i - 1] < 0 && diffi[i] < 0)) {\n                int a_o = std::abs(diffi[i]) - std::abs(c_s_d);\n                if (a_o > 0) {\n                    store += a_o;\n                }\n                c_s_d = diffi[i];\n            } else {\n                store += abs(diffi[i]);\n                c_s_d = diffi[i];\n            }\n        }\n\n        return store;\n    }\n};\n",
    "submit_ts": "1721533527",
    "subm_id": "1328010963"
}