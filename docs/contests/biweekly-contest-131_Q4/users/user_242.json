{
    "username": "hulot",
    "submission": "class Solution {\n    public List<Boolean> getResults(int[][] queries) {\n        TreeSet<Integer> tree = new TreeSet<>();\n        tree.add(0);\n        SegTreeMax st = new SegTreeMax();\n        List<Boolean> res = new ArrayList<>();\n        for (int[] query : queries) {\n            int type = query[0], x = query[1];\n            if (type == 1) {\n                Integer prev = tree.floor(x), next = tree.ceiling(x);\n                int prevLen = x - prev;\n                st.update(x, prevLen);\n                if (next != null) {\n                    int nextLen = next - x;\n                    st.update(next, nextLen);\n                }\n                tree.add(x);\n            } else {\n                int sz = query[2], max = st.query(0, x + 1);\n                int prev = tree.floor(x), prevLen = x - prev; \n                res.add(max >= sz || prevLen >= sz);\n            }\n        }\n        return res;\n    }\n\n    private class SegTreeMax {\n\n        private final int N = 100001;\n        private final int[] seg = new int[4*N];\n\n        // update max\n        public void update(int pos, int val) {\n            pos += N;\n            seg[pos] = val;\n            while (pos > 1) {\n                pos >>= 1;\n                seg[pos] = Math.max(seg[2*pos], seg[2*pos+1]);\n            }\n        }\n\n        // query max [lo, hi)\n        public int query(int lo, int hi) {\n            lo += N;\n            hi += N;\n            int res = 0;\n\n            while (lo < hi) {\n                if ((lo & 1) == 1) {\n                    res = Math.max(res, seg[lo++]);\n                }\n                if ((hi & 1) == 1) {\n                    res = Math.max(res, seg[--hi]);\n                }\n                lo >>= 1;\n                hi >>= 1;\n            }\n            return res;\n        }\n    }\n}",
    "submit_ts": "1716651677",
    "subm_id": "1267645981"
}