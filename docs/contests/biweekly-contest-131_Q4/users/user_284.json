{
    "username": "Megatvini",
    "submission": "from typing import List\n\nfrom sortedcontainers import SortedList\n\n\nclass Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        obstacles = SortedList()\n        max_size_before = {}  # obstacle_index -> max_size_before\n        # x_end = max(q[1] for q in queries if q[0] == 2)\n\n        res = []\n        for query in queries:\n            if query[0] == 1:\n                obs_x = query[1]\n                insert_index = obstacles.bisect_left(obs_x)\n                if insert_index == 0:\n                    max_size_before[obs_x] = obs_x\n                else:\n                    prev_obst = obstacles[insert_index - 1]\n                    max_size_before[obs_x] = max(max_size_before[prev_obst], obs_x - prev_obst)\n\n                if insert_index < len(obstacles):\n                    next_obst = obstacles[insert_index]\n                    max_size_before[next_obst] = max(max_size_before[obs_x], next_obst - obs_x)\n\n                for i in range(insert_index, len(obstacles) - 1):\n                    curr_diff = obstacles[i + 1] - obstacles[i]\n                    cur_max = max(max_size_before[obstacles[i]], curr_diff)\n                    if max_size_before[obstacles[i + 1]] == cur_max:\n                        break\n                    max_size_before[obstacles[i + 1]] = cur_max\n                obstacles.add(obs_x)\n            else:\n                till, size = query[1], query[2]\n                index = obstacles.bisect_left(till)\n                if index == 0:\n                    res.append(size <= till)\n                    continue\n                obs = obstacles[index - 1]\n                if till - obs >= size:\n                    res.append(True)\n                    continue\n                res.append(size <= max_size_before[obs])\n\n        return res\n",
    "submit_ts": 1716651810.0
}