{
    "username": "Silken",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\nauto init = []() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    return 0;\n}();\n\nusing i64 = int64_t;\n\nclass Solution {\npublic:\n    int helper(auto grid) {\n        int m = grid.size(), n = grid[0].size();\n        int count = 0;\n        for(int i=0; i < m; i++) {\n            for(int j=0; j < n-j-1; j++) {\n                if(grid[i][j] != grid[i][n-1-j])\n                    count++;\n            }\n        }\n        return count;\n    }\n\n    int minFlips(vector<vector<int>>& grid) {\n        auto copy = grid;\n        int m = grid.size(), n = grid[0].size();\n        // cout<<m<<\", \"<<n<<endl;\n\n        vector<vector<int>> op_cost(4);\n        \n\n        int ans = 0;\n        for(int i=0; i <= m-i-1; i++) {\n            for(int j=0; j <= n-j-1; j++) {\n                array<int, 2> count = {0,0};\n                for(int a : set<int>({i, m-i-1})) {\n                    for(int b : set<int>({j, n-j-1})) {\n                        count[grid[a][b]]++;\n                    }\n                }\n                int to = count[1] > count[0];\n                for(int a : set<int>({i, m-i-1})) {\n                    for(int b : set<int>({j, n-j-1})) {\n                        grid[a][b] = to;\n                    }\n                }\n\n                if(to == 0) {\n                    op_cost[(count[0]+count[1]) % 4].push_back(count[0]);\n                }\n                else {\n                    op_cost[ ((-(count[0]+count[1]) % 4)+4)%4].push_back(count[1]);\n                }\n\n                ans += count[1-to];\n                // cout<<\"i = \"<<i<<\", j = \"<<j<<\", count[0] = \"<<count[0]<<\", count[1] = \"<<count[1]<<\", to = \"<<to<<endl;\n            }\n        }\n\n        for(int i=0; i < 4; i++) {\n            ranges::sort(op_cost[i]);\n            op_cost[i].push_back(1e6);\n            op_cost[i].push_back(1e6);\n            op_cost[i].push_back(1e6);\n            op_cost[i].push_back(1e6);\n        }\n\n        int count1 = 0;\n\n        for(auto& a : grid) {\n            count1 += ranges::count(a, 1);\n        }\n\n        // cout<<\"count1, ans: \"<<count1<<\", \"<<ans<<endl;\n        // cout<<m<<\", \"<<n<<endl;\n\n        if(count1 % 4 == 0) {\n            return ans;\n        }\n        else if(count1 % 4 == 1) {\n            return ans+1;\n        }\n        else if(count1 % 4 == 2) {\n            if(m % 2) {\n                for(int j=0; j < n-j-1; j++) {\n                    if(copy[m/2][j] != copy[m/2][n-j-1]) {\n                        return ans;\n                    }\n                }\n            }\n            if(n % 2) {\n                for(int i=0; i < m-i-1; i++) {\n                    // cout<<\"n/2 = \"<<n/2<<\", compare \"<<i<<\" and \"<<n-j-1<<endl;\n                    if(copy[i][n/2] != copy[m-i-1][n/2])\n                        return ans;\n                }\n            }\n            return ans + 2;\n        }\n        else if(count1 % 4 == 3) {\n            if(m % 2) {\n                for(int j=0; j < n-j-1; j++) {\n                    if(copy[m/2][j] != copy[m/2][n-j-1])\n                        return ans+1;\n                }\n            }\n            if(n % 2) {\n                for(int i=0; i < m-i-1; i++) {\n                    if(copy[i][n/2] != copy[m-i-1][n/2])\n                        return ans+1;\n                }\n            }\n            return ans + 3;\n        }\n        else throw;\n        return -1;\n    }\n};",
    "submit_ts": "1722700302",
    "subm_id": "1343237754"
}