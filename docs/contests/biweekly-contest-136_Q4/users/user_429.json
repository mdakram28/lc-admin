{
    "username": "pinaki_basu",
    "submission": "#define vi vector<int>\n#define vvi vector<vi>\n#define pii pair<int,int>\n\npii DFS1 (const vvi& adjList, int root, int par, vector<pii>& maxTime) {\n    int maxi = 0, sMaxi = -3;\n    for (auto next : adjList[root]) {\n        if (next == par) continue;\n        pii shortAns = DFS1 (adjList, next, root, maxTime);\n        if (shortAns.first >= maxi) {\n            sMaxi = maxi;\n            maxi = shortAns.first;\n        } else {\n            sMaxi = max(shortAns.first, sMaxi);\n        }\n        if (sMaxi < 0) sMaxi = -3;\n        //cout<<root<<\" -> \"<<maxi<<\":\"<<sMaxi<<endl;\n    }\n    maxTime[root] = {maxi, sMaxi};\n    return (root%2 == 0) ? make_pair(maxi+2,max(0,sMaxi+2)) : make_pair(maxi+1,max(0,sMaxi+1));\n}\n\nvoid DFS2 (const vvi& adjList, int root, int par, const vector<pii>& maxTime, vi& ans, int any) {\n    ans[root] = max(any, maxTime[root].first);\n    for (auto next : adjList[root]) {\n        if (next == par) continue;\n        int flag = (root%2 == 1) ? 1 : 2;\n        if (next%2 == 0) {\n            int newAny = 0;\n            if (maxTime[next].first == maxTime[root].first-2) {\n                newAny = flag + max(any, maxTime[root].second);\n            } else {\n                newAny = flag + max(any, maxTime[root].first);\n            } \n            DFS2 (adjList, next, root, maxTime, ans, newAny);\n        } else {\n            int newAny = 0;\n            if (maxTime[next].first == maxTime[root].first-1) {\n                newAny = flag + max(any, maxTime[root].second);\n            } else {\n                newAny = flag + max(any, maxTime[root].first);\n            } \n            DFS2 (adjList, next, root, maxTime, ans, newAny);\n        }\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size()+1;\n        vvi adjList(n);\n        for (int i=0; i<n-1; i++) {\n            adjList[edges[i][0]].push_back(edges[i][1]);\n            adjList[edges[i][1]].push_back(edges[i][0]);\n        }\n        vector<pii> maxTime(n);\n        pii timings = DFS1 (adjList, 0, 0, maxTime);\n        vector<int> ans(n);\n        //for (int i=0; i<n; i++) {\n        //    cout<<i<<\" -> \"<<maxTime[i].first<<\" : \"<<maxTime[i].second<<endl;\n        //}\n        DFS2 (adjList, 0, 0, maxTime, ans, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722698633",
    "subm_id": "1343186928"
}