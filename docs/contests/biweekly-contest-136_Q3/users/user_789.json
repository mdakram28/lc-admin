{
    "username": "AryamanM",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), flips = 0;\n        if(n * m < 4){\n            for(int i = 0; i < n; i++){\n                for(int j = 0; j < m; j++){\n                    if(grid[i][j] == 1)\n                        flips++;\n                }\n            }\n            return flips;\n        }\n        int totalOnes = 0;\n        for(int i = 0; i < n / 2; i++){\n            for(int j = 0; j < m / 2; j++){\n                int zeros = (grid[i][j] == 0) + (grid[n - 1- i][j] == 0) + (grid[i][m - 1 -j] == 0) + (grid[n - 1 - i][m - 1 - j] == 0);\n                int ones = (grid[i][j] == 1) + (grid[n - 1- i][j] == 1) + (grid[i][m - 1 -j] == 1) + (grid[n - 1 - i][m - 1 - j] == 1);\n                flips += 4 - max(zeros, ones);\n                if(ones > zeros)\n                    totalOnes += 4;\n            }\n        }\n        bool flexible = false;\n        if(n % 2){\n            int r = n / 2;\n            for(int j = 0; j < m / 2; j++){\n                if(grid[r][j] != grid[r][m - 1 - j]){\n                    flexible = true;\n                    flips++;\n                } else if(grid[r][j] == 1)\n                    totalOnes += 2;\n            }\n        }\n        if(m % 2){\n            int c = m / 2;\n            for(int i = 0; i < n / 2; i++){\n                if(grid[i][c] != grid[n - 1- i][c]){\n                    flexible = true;\n                    flips++;\n                } else if(grid[i][c] == 1)\n                    totalOnes += 2;\n            }\n        }\n        if(n % 2 and m % 2 and grid[n / 2][m / 2] == 1)\n            flips++;\n        if(totalOnes % 4 == 0){\n            return flips;\n        } else if(totalOnes % 2 == 0){\n            if(flexible)\n                return flips;\n            return flips + 2;\n        }\n        return 0;\n    }\n};",
    "submit_ts": "1722697817",
    "subm_id": "1343159974"
}