{
    "username": "Yuvansh Agrawal",
    "submission": "class Solution {\n    char result[100001];\n    vector<int> power10mod;\npublic:\n    int modPow(int x, int y, int mod)\n    {\n        if(y == 0)\n            return (1%mod);\n        \n        if(power10mod[y] != -1)\n            return power10mod[y];\n        \n        int tmp = modPow(x, y/2, mod)%mod;\n        tmp = (tmp%mod * tmp%mod)%mod;\n        if(y%2)\n            return power10mod[y]= (tmp%mod * x%mod)%mod;\n        else\n            return power10mod[y] = tmp%mod;\n    }\n    \n    int compute(int idx, int c, int n, int k, vector<vector<int> >& st)\n    {\n        int end = (n%2) ? n/2 : n/2-1;\n        if(idx > end)\n        {\n            if(c == 0)\n                return 1;\n            return 0;\n        }\n        \n        if(st[idx][c] != -1)   \n            return st[idx][c];\n        \n        int t = (idx == 0)?1:0;\n        int ans = 0;\n        \n        int p = n - idx - 1;\n        \n        for(int i=9;i>=t;i--)\n        {\n            int d = (c%k + (i%k * modPow(10, n-idx-1, k)%k)%k + (i%k * modPow(10, idx, k)%k))%k;\n            \n            if(p == idx)\n            {\n                d = (c%k + (i%k*modPow(10, n-idx-1,k)%k))%k;\n            }\n            \n            //cout<<idx<<\" \"<<i<<\" \"<<d<<\"\\n\";\n            //result[p] = result[idx] = (char)(i + '0');\n            ans = compute(idx+1, d%k, n, k, st);\n            if(ans == 1)\n            {\n                // cout<<idx<<\" \"<<i<<\" \"<<p<<\"\\n\";\n                break;\n            }\n        }\n        \n        return st[idx][c] = ans;\n    }\n    \n    void print(int idx, int c, int n, int k, vector<vector<int> >& st)\n    {\n        int end = (n%2) ? n/2 : n/2-1;\n        if(idx > end)\n        {\n            if(c == 0)\n                return;\n            return;\n        }\n        \n        \n        int t = (idx == 0)?1:0;\n        int ans = 0;\n        \n        int p = n - idx - 1;\n        \n        for(int i=9;i>=t;i--)\n        {\n            int d = (c%k + (i%k * modPow(10, n-idx-1, k)%k)%k + (i%k * modPow(10, idx, k)%k))%k;\n            \n            if(p == idx)\n            {\n                d = (c%k + (i%k*modPow(10, n-idx-1,k)%k))%k;\n            }\n            \n            //cout<<idx<<\" \"<<i<<\" \"<<d<<\"\\n\";\n            //result[p] = result[idx] = (char)(i + '0');\n            ans = compute(idx+1, d%k, n, k, st);\n            if(ans == 1)\n            {\n                result[idx] = result[p] = (char)(i+'0');\n                print(idx+1, d%k, n, k, st);\n                break;\n            }\n        }\n        \n    }\n    \n    string largestPalindrome(int n, int k) {\n        vector<vector<int> > st(n, vector<int>(10, -1));\n        \n        memset(result, '0', sizeof(result));\n        result[n] = '\\0';\n        \n        power10mod.assign(100001, -1);\n        \n        int ans = compute(0, 0, n, k, st);\n        \n        if(ans == 0)\n            return \"0\";\n        \n        print(0, 0, n, k, st);\n        \n        return result;\n    }\n};",
    "submit_ts": "1723951887",
    "subm_id": "1359782514"
}