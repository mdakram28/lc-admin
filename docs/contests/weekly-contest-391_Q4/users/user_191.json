{
    "username": "peicd7699",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        \n        n = len(points)\n        xs = [x for x, y in points]\n        ys = [y for x, y in points]\n        xs.sort()\n        ys.sort()\n        corners = [(xs[0], ys[0]), (xs[0], ys[-1]), (xs[-1], ys[0]), (xs[-1], ys[-1])]\n        \n        indi = indj = None\n        max_dis = 0\n        \n        for x, y in corners:\n            dist = [(abs(x - px) + abs(y - py), i) for i,[px, py] in enumerate(points)]\n            dist.sort()\n            if dist[-1][0] - dist[0][0] > max_dis:\n                max_dis = dist[-1][0] - dist[0][0]\n                indi, indj = (dist[-1][1] , dist[0][1])\n                \n        res =float('inf')\n        \n        #remove i\n        max_dis = 0\n        for x, y in corners:\n            dist = [(abs(x - px) + abs(y - py), ind) for ind,[px, py] in enumerate(points) if ind != indi]\n            dist.sort()\n            if dist[-1][0] - dist[0][0] > max_dis:\n                max_dis =dist[-1][0] - dist[0][0]\n        res = min(max_dis, res)\n        max_dis = 0\n        for x, y in corners:\n            dist = [(abs(x - px) + abs(y - py), ind) for ind,[px, py] in enumerate(points) if ind != indj]\n            dist.sort()\n            if dist[-1][0] - dist[0][0] > max_dis:\n                max_dis =dist[-1][0] - dist[0][0]\n        res = min(max_dis, res)\n        return res"
}