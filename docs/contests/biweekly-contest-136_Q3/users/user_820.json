{
    "username": "macuadros",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int n = grid.size();\n        const int m = grid[0].size();\n        \n        int ans = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int cnt = grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                ans += std::min(cnt, 4 - cnt);\n            }\n        }\n\n        int one = 0, cand = 0;\n        if (n & 1 && m & 1) {\n            ans += grid[n / 2][m / 2];\n            grid[n / 2][m / 2] = 0;\n\n            for (int i = 0; i < n / 2; ++i) {\n                one += grid[i][m / 2] && grid[n - 1 - i][m / 2];\n                cand += grid[i][m / 2] != grid[n - 1 - i][m / 2];\n            }\n\n            for (int j = 0; j < m / 2; ++j) {\n                one += grid[n / 2][j] && grid[n / 2][m - 1 - j];\n                cand += grid[n / 2][j] != grid[n / 2][m - 1 - j];\n            }\n\n            ans += cand + (one % 2 == 1 && cand == 0) * 2;\n        }\n        else if (n & 1) {\n            for (int j = 0; j < m / 2; ++j) {\n                one += grid[n / 2][j] && grid[n / 2][m - 1 - j];\n                cand += grid[n / 2][j] != grid[n / 2][m - 1 - j];\n            }\n\n            ans += cand + (one % 2 == 1 && cand == 0) * 2;\n        }\n        else if (m & 1) {\n            for (int i = 0; i < n / 2; ++i) {\n                one += grid[i][m / 2] && grid[n - 1 - i][m / 2];\n                cand += grid[i][m / 2] != grid[n - 1 - i][m / 2];\n            }\n\n            ans += cand + (one % 2 == 1 && cand == 0) * 2;\n        }\n        \n\n        return ans;\n    }\n};",
    "submit_ts": "1722698177",
    "subm_id": "1343172206"
}