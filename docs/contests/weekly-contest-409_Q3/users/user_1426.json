{
    "username": "ashu_cAK",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int[] distances = new int[n];\n        for (int i = 1; i < n; ++i) {\n            distances[i] = distances[i - 1] + 1;\n        }\n        TreeSet<Integer> pathSet = new TreeSet<>();\n        for (int i = 0; i < n; ++i) {\n            pathSet.add(i);\n        }\n\n        int[] result = new int[queries.length];\n\n        for (int i = 0; i < queries.length; ++i) {\n            int left = queries[i][0];\n            int right = queries[i][1];\n            SortedSet<Integer> toRemove = pathSet.subSet(left + 1, right);\n            List<Integer> toRemoveList = new ArrayList<>(toRemove);            \n            pathSet.removeAll(toRemoveList);\n            result[i] = pathSet.size() - 1;\n        }\n\n        return result;\n    }\n}\n",
    "submit_ts": "1722743963",
    "subm_id": "1343803751"
}