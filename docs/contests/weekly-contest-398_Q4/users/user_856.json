{
    "username": "0xsonu",
    "submission": "class Solution {\n    HashMap<Integer, ArrayList<ArrayList<Integer>>> mp = new HashMap<>();\n\n    private int slv(int k, int i, int j, boolean c) {\n        if (i > k + 5)\n            return 0;\n\n        if (j > 31)\n            return 0;\n\n        if (mp.containsKey(i) && mp.get(i).size() > j && mp.get(i).get(j).get(c ? 1 : 0) != -1)\n            return mp.get(i).get(j).get(c ? 1 : 0);\n\n        int a = (i == k) ? 1 : 0;\n        if (c)\n            a += slv(k, i - 1, j, false);\n        if (i + (1 << j) <= k + 1)\n            a += slv(k, i + (1 << j), j + 1, true);\n\n        if (!mp.containsKey(i)) {\n            mp.put(i, new ArrayList<>());\n            for (int idx = 0; idx < 32; idx++) {\n                ArrayList<Integer> innerList = new ArrayList<>();\n                innerList.add(-1); // for c == false\n                innerList.add(-1); // for c == true\n                mp.get(i).add(innerList);\n            }\n        }\n\n        mp.get(i).get(j).set(c ? 1 : 0, a);\n        return a;\n    }\n\n    public int waysToReachStair(int k) {\n        return slv(k, 1, 0, true);\n    }\n}",
    "submit_ts": "1716090038",
    "subm_id": "1261857618"
}