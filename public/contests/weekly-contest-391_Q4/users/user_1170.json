{
    "username": "dhakreydeepshikha",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int n=p.size();\n        vector<pair<int,int>>sum;\n        vector<pair<int,int>>diff;\n        for(int i=0;i<n;i++)\n        {\n        sum.push_back({(p[i][0]+p[i][1]),i});\n             diff.push_back({(p[i][0]-p[i][1]),i});\n        }\n        int ans=INT_MAX;\n        sort(sum.begin(),sum.end());\n        sort(diff.begin(),diff.end());\n         int a=0,b=n-1,c=0,d=n-1;\n        for(int i=0;i<n;i++)\n        {\n        if(i==sum[a].second)\n            a++;\n            if(i==sum[b].second)\n                b--;\n            if(i==diff[c].second)\n                c++;\n            if(i==diff[d].second)\n                d--;\n        int temp=max(abs(sum[a].first-sum[b].first),abs(diff[c].first-diff[d].first));\n        ans=min(ans,temp);\n            a=0,b=n-1,c=0,d=n-1;\n        }\n        return ans;\n    }\n};"
}