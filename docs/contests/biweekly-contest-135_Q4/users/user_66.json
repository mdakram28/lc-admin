{
    "username": "Cipher_07",
    "submission": "long long dp[102][102][2];\nlong long pre[102][102];\nclass Solution {\n\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        for (int j = 0; j < m; j++)\n            pre[0][j] = 0;\n\n        for (int j = 0; j < m; j++)\n            for (int i = 0; i < n; i++)\n                pre[i + 1][j] = pre[i][j] + grid[i][j];\n\n\n        for (int j = m; j >= 0; j--) {\n            for (int i = 0; i <= n; i++)\n                for (int f = 0; f < 2; f++) {\n                    if (j == m) {\n                        if (!f)\n                            dp[i][j][f] = -1e14;\n                        else\n                            dp[i][j][f] = 0;\n                        continue;\n                    }\n\n                    long long ans = dp[n][j + 1][1];\n                    if (!f) {\n                        ans = dp[i][j + 1][1];\n                        for (int a = i + 1; a <= n; a++)\n                            for (int b = a; b <= n; b++)\n                                ans = max(ans, pre[b][j] - pre[a - 1][j] + dp[b][j + 1][0]);\n                    } else {\n                        for (int a = 1; a <= n; a++)\n                            for (int b = a; b <= n; b++) {\n                                long long cur = pre[b][j] - pre[a - 1][j];\n                                if (b <= i) {\n                                    cur += dp[a - 1][j + 1][1];\n                                } else {\n                                    cur += dp[b][j + 1][0];\n                                }\n                                ans = max(ans, cur);\n                            }\n                    }\n\n                    dp[i][j][f] = ans;\n                }\n        }\n\n        return dp[0][0][1];\n    }\n};\n\n",
    "submit_ts": "1721490777",
    "subm_id": "1327492455"
}