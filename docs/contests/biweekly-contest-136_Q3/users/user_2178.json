{
    "username": "austindog1207",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n\n        int one_counter;\n        int ans = 0;\n\n        int temp_1 = 0;\n        int temp_2 = 0;\n\n        //\u5148\u53ea\u8003\u616e\u5076\u6578m,n\u60c5\u6cc1\uff0c\u5947\u6578\u60c5\u6cc1\u53e6\u5916\u8655\u7406+\u5c31\u597d\n        for (int i = 0; i < m / 2; i++)\n        {\n            for (int j = 0; j < n / 2; j++)\n            {\n                one_counter = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][j] + grid[m - 1 - i][n - 1 - j];\n                ans += min(one_counter, 4 - one_counter);\n            }\n        }\n\n\n        if (m % 2 == 1)\n        {\n            for (int j = 0; j < n / 2; j++)\n            {\n                if (grid[m / 2][j] != grid[m / 2][n - 1 - j]) temp_1++;\n                if (grid[m / 2][j] && grid[m / 2][n - 1 - j]) temp_2++;\n            }\n        }\n\n        if (n % 2 == 1)\n        {\n            for (int i = 0; i < m / 2; i++)\n            {\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2]) temp_1++;\n                if (grid[i][n / 2] && grid[m - 1 - i][n / 2]) temp_2++;\n            }\n        }\n\n        ans += temp_1;\n\n        if (temp_1 == 0 && (temp_2 % 2 == 1)) ans += 2;\n\n        if ((m % 2) && (n % 2)) ans += grid[m / 2][n / 2];\n\n        return ans;\n    }\n};",
    "submit_ts": "1722700000",
    "subm_id": "1343228671"
}