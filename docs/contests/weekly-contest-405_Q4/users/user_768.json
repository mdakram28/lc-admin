{
    "username": "VibhuDixit_cs22",
    "submission": "class Solution {\npublic:\n    struct TrieNode {\n        unordered_map<char, TrieNode*> child;\n        vector<pair<int, int>> wordEnds; \n    };\n    class Trie {\n    public:\n        TrieNode* root;\n        Trie() { root = new TrieNode(); }\n        void ok(string& str, int ll, int tar) {\n            TrieNode* st = root;\n            for (char x : str) {\n                if (!st->child.count(x))st->child[x] = new TrieNode();\n                st = st->child[x];\n            }\n            st->wordEnds.push_back({ll, tar});\n        }\n    };\n    int minimumCost(string target, vector<string>& arr, vector<int>& costs) {\n        int to = target.size();\n        vector<int> dp(to + 1, INT_MAX);\n        dp[0] = 0;\n        Trie trie;\n        for (int po = 0; po < arr.size(); ++po) trie.ok(arr[po], po, costs[po]);\n        for (int lo = 0; lo < to; ++lo) {\n            if (dp[lo] == INT_MAX) continue;\n            TrieNode* pip = trie.root;\n            for (int io = lo; io < to; ++io) {\n                if (!pip->child.count(target[io])) break;\n                pip = pip->child[target[io]];\n                for (auto& p : pip->wordEnds) {\n                    int jo = p.first,ho = p.second,go = arr[jo].size();\n                    if (lo + go <= to) dp[lo + go] = min(dp[lo + go], dp[lo] + ho);\n                }\n            }\n        }\n        return dp[to] == INT_MAX ? -1 : dp[to];\n    }\n};",
    "submit_ts": "1720322378",
    "subm_id": "1312348275"
}