{
    "username": "karthikeya48",
    "submission": "vector<int>SegTree;\n \nvoid build(vector<int> &arr, int start, int end, int index) {\n    \n    if(start == end) {\n        SegTree[index]=arr[start];\n        return;\n    }\n    int mid = (start + end) / 2;\n    int left = 2 * index, right = 2 * index + 1;\n    build(arr, start, mid, left);\n    build(arr, mid+1, end, right);\n    SegTree[index] = (SegTree[left] & SegTree[right]);\n \n}\n \nvoid update(vector<int> &arr, int start, int end, int index, int pos, int value) {\n \n    if(start == end) {\n        arr[pos] = value;\n        SegTree[index] = arr[pos];\n        return;\n    }\n    \n    int mid = (start + end) / 2;\n    if(mid >= pos) {\n        update(arr, start, mid, 2 * index, pos, value);\n    }\n    else {\n        update(arr, mid+1, end, 2 * index + 1, pos, value);\n    }\n    SegTree[index] = (SegTree[2 * index] & SegTree[2 * index + 1]);\n \n}\n \nint query(int start, int end, int index, int l, int r) {\n \n    if(start >= l and end <= r) {\n        return SegTree[index];\n    }\n    if(l > end or r < start) {\n        return INT_MAX;\n    }\n    int mid = (start + end) / 2;\n    int leftAns = query(start, mid, 2 * index, l, r);\n    int rightAns = query(mid + 1, end, 2 * index + 1, l, r);\n    return (leftAns & rightAns);\n \n}\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int ans = INT_MAX;\n        \n        int n=nums.size();\n        \n        SegTree.resize(4*n);\n        \n        build(nums,0,n-1,1);\n        \n        auto check = [&](int i, int mid){\n            return query(0, n - 1, 1, i, mid) < k;\n        };\n        \n        \n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n - 1, mid = 0;\n\n            while (r - l > 1) {\n                mid = (l + r) / 2;\n                if (check(i, mid)) r = mid;\n                else l = mid;\n            }\n            \n            if (l != i - 1) ans = min(ans, abs(query(0, n - 1,1, i, l) - k));\n            ans = min(ans, abs(k - query(0, n - 1, 1, i, r)));\n        }\n        return ans;  \n    }\n};",
    "submit_ts": 1717300712.0
}