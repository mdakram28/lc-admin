{
    "username": "shubham_jaiswar_43",
    "submission": "class Solution {\n    vector<int> x,y;\n    long long dfs(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut,int indX,int indY){\n        if(indX<m-1 && indY<n-1){\n            if(horizontalCut[x[indX]] > verticalCut[y[indY]]){\n                return (indY+1)*1LL*horizontalCut[x[indX]] + dfs(m,n,horizontalCut,verticalCut,indX+1,indY);\n            }else if(horizontalCut[x[indX]] < verticalCut[y[indY]]){\n                return (indX+1)*1LL*verticalCut[y[indY]] + dfs(m,n,horizontalCut,verticalCut,indX,indY+1);\n            }else if(indX < indY){\n                return (indX+1)*1LL*verticalCut[y[indY]] + dfs(m,n,horizontalCut,verticalCut,indX,indY+1);\n            }\n            return (indY+1)*1LL*horizontalCut[x[indX]] + dfs(m,n,horizontalCut,verticalCut,indX+1,indY);\n        }else if(indX<m-1){\n            return (indY+1)*1LL*horizontalCut[x[indX]] + dfs(m,n,horizontalCut,verticalCut,indX+1,indY);\n        }else if(indY<n-1){\n            return (indX+1)*1LL*verticalCut[y[indY]] + dfs(m,n,horizontalCut,verticalCut,indX,indY+1);\n        }   \n        return 0;\n    }\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        x = vector<int>(m-1);\n        y = vector<int>(n-1);\n        for(int i=0;i<m-1;i++)x[i] = i;\n        for(int i=0;i<n-1;i++)y[i] = i;\n        sort(x.begin(),x.end(),[&](const int &a,const int &b){return horizontalCut[a] > horizontalCut[b];});\n        sort(y.begin(),y.end(),[&](const int &a,const int &b){return verticalCut[a] > verticalCut[b];});\n        return dfs(m,n,horizontalCut,verticalCut,0,0);\n    }\n};",
    "submit_ts": "1720925882",
    "subm_id": "1320269263"
}