{
    "username": "Dhruv Pasricha",
    "submission": "const int N = 505, LG = 10;\n\nint st[N][N][LG][LG];\nint a[N][N], lg2[N];\n\nint yo(int x1, int y1, int x2, int y2) {\n  if(x1 > x2 or y1 > y2) return INT_MIN;\n  x2++;\n  y2++;\n  int a = lg2[x2 - x1], b = lg2[y2 - y1];\n  return max(\n         max(st[x1][y1][a][b], st[x2 - (1 << a)][y1][a][b]),\n         max(st[x1][y2 - (1 << b)][a][b], st[x2 - (1 << a)][y2 - (1 << b)][a][b])\n       );\n}\n\nvoid build(int n, int m) { // 0 indexed\n  for (int i = 2; i < N; i++) lg2[i] = lg2[i >> 1] + 1;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      st[i][j][0][0] = a[i][j];\n    }\n  }\n  for (int a = 0; a < LG; a++) {\n    for (int b = 0; b < LG; b++) {\n      if (a + b == 0) continue;\n      for (int i = 0; i + (1 << a) <= n; i++) {\n        for (int j = 0; j + (1 << b) <= m; j++) {\n          if (!a) {\n            st[i][j][a][b] = max(st[i][j][a][b - 1], st[i][j + (1 << (b - 1))][a][b - 1]);\n          } else {\n            st[i][j][a][b] = max(st[i][j][a - 1][b], st[i + (1 << (a - 1))][j][a - 1][b]);\n          }\n        }\n      }\n    }\n  }\n}\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n\n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = 0; j < m; ++j)\n            {\n                a[i][j] = board[i][j];   \n            }\n        }\n\n        build(n, m);\n\n        auto f = [&](int row)\n        {\n            #define pii pair<int, int>\n            priority_queue<pii> pq;\n            for(int i = 0; i < m; ++i)\n            {\n                pq.push({board[row][i], i});\n            }\n            vector<int> res(3);\n            for(int i = 0; i < 3; ++i)\n            {\n                res[i] = pq.top().second;\n                pq.pop();\n            }\n            return res;\n        };\n\n        vector<vector<int>> top3(n);\n        for(int i = 0; i < n; ++i)\n        {\n            top3[i] = f(i);\n        }\n\n        long long ans = INT64_MIN;\n        for(int r1 = 0; r1 < n; ++r1)\n        {   \n            for(int r2 = r1 + 1; r2 < n; ++r2)\n            {\n                for(int c1 : top3[r1])\n                {\n                    for(int c2: top3[r2])\n                    {\n                        if(c1 == c2) continue;\n                        long long cur = board[r1][c1] + board[r2][c2];\n                        if(c1 > c2) swap(c1, c2);\n                        int rem = max({\n                            yo(0, 0, r1 - 1, c1 - 1),\n                            yo(r1 + 1, 0, r2 - 1, c1 - 1),\n                            yo(r2 + 1, 0, n - 1, c1 - 1),\n                            \n                            yo(0, c1 + 1, r1 - 1, c2 - 1),\n                            yo(r1 + 1, c1 + 1, r2 - 1, c2 - 1),\n                            yo(r2 + 1, c1 + 1, n - 1, c2 - 1),\n\n                            yo(0, c2 + 1, r1 - 1, m - 1),\n                            yo(r1 + 1, c2 + 1, r2 - 1, m - 1),\n                            yo(r2 + 1, c2 + 1, n - 1, m - 1)\n                        });\n\n                        cur += rem;\n                        ans = max(ans, cur);\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723907735",
    "subm_id": "1359121943"
}