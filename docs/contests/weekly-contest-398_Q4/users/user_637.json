{
    "username": "Sayan_244",
    "submission": "#define ll long long\n#define siz(a) int((a).size())\nint used;\nmap <ll, ll> fac[31];\nvector <ll> prim{2,3,5,7,11,13,17,19,23,29};\n\nll power(ll a, ll b) {\n    ll ans = 1;\n    while (b) {\n        if (b & 1ll) {\n            ans *= a;\n        }\n        b >>= 1;\n        a = a * a;\n    }\n    return ans;\n}\n\nvoid precomp() {\n    for(ll i = 2; i <= 30; i++) {\n        ll temp = i;\n        for(auto & mem : prim) {\n            while (temp % mem == 0) {\n                fac[i][mem] += 1;\n                temp /= mem;\n            }\n        }\n    }\n}\nll ncr(ll x, ll y) {\n    ll maxn = max(y, x - y);\n    ll minn = min(y, x - y);\n    ll fin = 1;\n    \n    map <ll, ll> d1, d2;\n    for(ll i = maxn + 1; i <= x; i++) {\n        for(auto & [p, q] : fac[i]) {\n            d1[p] += q;\n        }\n    }\n    \n    for(ll i = 1; i <= minn; i++) {\n        for(auto & [p, q] : fac[i]) {\n            d1[p] -= q;\n        }\n    }\n    \n    for(auto & [p, q] : d1) {\n        fin *= power(p, q);\n    }\n    \n    return fin;\n}\n\nclass Solution {\npublic:\n    int waysToReachStair(int k) {\n        if (!used) {\n            precomp();\n            used = 1;\n        }\n        if (k == 0) {\n            return 2;\n        }\n        ll ans = 0;\n        if (k == 1) {\n            ans = 1;\n        }\n        \n        ll sum = 1;\n        for(ll i = 0; i <= 30; i++) {\n            sum += (1ll << i);\n            ll maxn = i + 2;\n            if (sum >= k and sum - maxn <= k) {\n                ll dif = sum - k;\n                ans += ncr(maxn, dif);\n            }\n        }\n        \n        return int(ans);\n    }\n};",
    "submit_ts": "1716089163",
    "subm_id": "1261834829"
}