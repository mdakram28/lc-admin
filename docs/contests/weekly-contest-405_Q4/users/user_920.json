{
    "username": "sumit_chauhan143",
    "submission": "class Solution {\n    static class TrieNode {\n        TrieNode[] children;\n        boolean isEnd;\n        List<Integer> wordsAtIndex;\n        \n        TrieNode() {\n            children = new TrieNode[26];\n            isEnd = false;\n            wordsAtIndex = new ArrayList<>();\n        }\n    }\n    \n    public int minimumCost(String target, String[] words, int[] costs) {\n        TrieNode root = new TrieNode();\n        \n        // Build Trie from words\n        for (int i = 0; i < words.length; i++) {\n            insertWord(root, words[i], i);\n        }\n        \n        int n = target.length();\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (dp[i] == Integer.MAX_VALUE) continue;\n            \n            TrieNode curr = root;\n            for (int j = i; j < n; j++) {\n                int idx = target.charAt(j) - 'a';\n                if (curr.children[idx] == null) break;\n                curr = curr.children[idx];\n                \n                if (curr.isEnd) {\n                    for (int wordIndex : curr.wordsAtIndex) {\n                        String word = words[wordIndex];\n                        int wordLen = word.length();\n                        if (j - i + 1 <= wordLen) {\n                            dp[j + 1] = Math.min(dp[j + 1], dp[i] + costs[wordIndex]);\n                        }\n                    }\n                }\n            }\n        }\n        \n        return dp[n] == Integer.MAX_VALUE ? -1 : dp[n];\n    }\n    \n    private void insertWord(TrieNode root, String word, int index) {\n        TrieNode curr = root;\n        for (char c : word.toCharArray()) {\n            int idx = c - 'a';\n            if (curr.children[idx] == null) {\n                curr.children[idx] = new TrieNode();\n            }\n            curr = curr.children[idx];\n        }\n        curr.isEnd = true;\n        curr.wordsAtIndex.add(index);\n    }\n}",
    "submit_ts": "1720321881",
    "subm_id": "1312334810"
}