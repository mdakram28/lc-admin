{
    "username": "nicopriotto",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        int h = 1;\n        int v = 1;\n\n        for(int i = 0; i<m-1; i++) horizontalCut[i] *= -1;\n        for(int i = 0; i<n-1; i++) verticalCut[i] *= -1;        \n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        for(int i = 0; i<m-1; i++) horizontalCut[i] *= -1;\n        for(int i = 0; i<n-1; i++) verticalCut[i] *= -1;\n\n        long ans = 0;\n\n        int i = 0, j = 0;\n        while(i < m-1 || j < n-1) {\n            if(i >= m-1) {\n                ans += verticalCut[j++] * h;\n                v++;\n            } else if (j >= n-1) {\n                ans += horizontalCut[i++] * v;\n                h++;\n            } else if (horizontalCut[i] == verticalCut[j]) {\n                if(v > h) {\n                    ans += verticalCut[j++] * h;\n                    v++;\n                } else {\n                    ans += horizontalCut[i++] * v;\n                    h++;\n                }\n            }else if (horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i++] * v;\n                h++;\n            } else {\n                ans += verticalCut[j++] * h;\n                v++;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926216",
    "subm_id": "1320279430"
}