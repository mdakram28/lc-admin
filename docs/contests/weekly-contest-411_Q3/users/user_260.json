{
    "username": "Yang Zhang",
    "submission": "import java.math.BigInteger;\n\nclass Solution {\n  public String lp1(int n) {\n    return \"9\".repeat(n);\n  }\n\n  public String lp2(int n) {\n    if (n == 1) return \"8\";\n    return \"8\" + \"9\".repeat(n - 2) + \"8\";\n  }\n\n  public String lp3(int n) {\n    return \"9\".repeat(n);\n  }\n\n  public String lp4(int n) {\n    if (n <= 3) return \"8\".repeat(n);\n    return \"88\" + \"9\".repeat(n - 4) + \"88\";\n  }\n\n  public String lp5(int n) {\n    if (n == 1) return \"5\";\n    return \"5\" + \"9\".repeat(n - 2) + \"5\";\n  }\n\n  public String lp6(int n) {\n    if (n == 1) return \"6\";\n    if (n == 2) return \"66\";\n    if (n == 3) return \"888\";\n    if (n == 4) return \"8778\";\n    var six = new BigInteger(\"6\");\n    if (n % 2 == 1) {\n      var prefix = \"8\" + \"9\".repeat((n / 2) - 1);\n      var suffix = \"9\".repeat((n / 2) - 1) + \"8\";\n      for (var i = 9; i >= 0; i--) {\n        var test = prefix + String.valueOf(i) + suffix;\n        if (new BigInteger(test).mod(six).signum() == 0) {\n          return test;\n        }\n      }\n    } else {\n      var prefix = \"8\" + \"9\".repeat((n / 2) - 2);\n      var suffix = \"9\".repeat((n / 2) - 2) + \"8\";\n      for (var i = 9; i >= 0; i--) {\n        var test = prefix + String.valueOf(i) + String.valueOf(i) + suffix;\n        if (new BigInteger(test).mod(six).signum() == 0) {\n          return test;\n        }\n      }\n    }\n    return \"\";\n  }\n\n  public String lp7(int n) {\n    if (n == 1) return \"7\";\n    if (n == 2) return \"77\";\n    var seven = new BigInteger(\"7\");\n    if (n % 2 == 1) {\n      var fix = \"9\".repeat(n / 2);\n      for (var i = 9; i >= 0; i--) {\n        var test = fix + String.valueOf(i) + fix;\n        if (new BigInteger(test).mod(seven).signum() == 0) {\n          return test;\n        }\n      }\n    } else {\n      var fix = \"9\".repeat(n / 2 - 1);\n      for (var i = 9; i >= 0; i--) {\n        var test = fix + String.valueOf(i) + String.valueOf(i) + fix;\n        if (new BigInteger(test).mod(seven).signum() == 0) {\n          return test;\n        }\n      }\n    }\n    return \"\";\n  }\n\n  public String lp8(int n) {\n    if (n <= 5) return \"8\".repeat(n);\n    return \"888\" + \"9\".repeat(n - 6) + \"888\";\n  }\n\n  public String lp9(int n) {\n    return \"9\".repeat(n);\n  }\n\n  public String largestPalindrome(int n, int k) {\n    if (k == 1) return lp1(n);\n    if (k == 2) return lp2(n);\n    if (k == 3) return lp3(n);\n    if (k == 4) return lp4(n);\n    if (k == 5) return lp5(n);\n    if (k == 6) return lp6(n);\n    if (k == 7) return lp7(n);\n    if (k == 8) return lp8(n);\n    if (k == 9) return lp9(n);\n    return \"\";\n  }\n}\n",
    "submit_ts": "1723951545",
    "subm_id": "1359774125"
}