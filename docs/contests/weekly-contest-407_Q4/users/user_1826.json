{
    "username": "geetanjali-18",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        long long ans = 0;\n        vector<int>vec(n);\n        for(int i=0;i<n;i++){\n            vec[i] = target[i] - nums[i];\n            cout<<vec[i]<<\"|\";\n        }\n        int i = 0;\n        while(i<n){\n            if(vec[i]==0){\n                i++;\n                continue;\n            }\n            int maxi = vec[i];\n            int temp = i;\n            int pos = 0;\n            if(vec[i]>0) pos = 1;\n            else pos = 0;\n            if(pos){\n                while(i<n && vec[i]>0){\n                    if(temp==i)\n                    ans += (vec[i]);\n                    else{\n                        if(vec[i]-vec[i-1]>0) ans+=( vec[i]-vec[i-1]);\n                    }\n                    i++;\n                }\n            }\n            else{\n                while(i<n && vec[i]<0){\n                    if(temp==i)\n                    ans += abs(vec[i]);\n                    else{\n                        if(abs(vec[i])>abs(vec[i-1])) ans+= abs(vec[i])-abs(vec[i-1]);\n                    }\n                    i++;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532452",
    "subm_id": "1327986162"
}