{
    "username": "priyansh_iitd26",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(); \n        int m = grid[0].size();\n\n        int cnt = 0;\n        vector<int> replace(3, 0);\n        \n        if(n % 2 == 1 && m % 2 == 1){\n            if(grid[n/2][m/2] == 1) cnt++;\n        }\n\n\n        if(n % 2 == 1){\n            int i = 0;\n            int j = m - 1;\n\n            while(i < j){\n                int sumVal = grid[n/2][i] + grid[n/2][j];\n                i++;\n                j--;\n                replace[sumVal]++;\n            }\n        }\n\n        if(m % 2 == 1){\n            int i = 0;\n            int j = n - 1;\n\n            while(i < j){\n                int sumVal = grid[i][m/2] + grid[j][m/2];\n                i++;\n                j--;\n                replace[sumVal] += 1;\n            }\n        }\n\n        if(replace[2] % 2 == 1){\n            if(replace[1] <= 0) cnt += 2;\n            else cnt += replace[1];\n        } \n        else cnt += replace[1];\n\n        for(int i = 0; i < n/2; i++){\n            for(int j = 0; j < m/2; j++){\n                int curr = grid[i][j];\n                int last = grid[n - 1 - i][m - 1 - j];\n                int lastRow = grid[n - 1 - i][j];\n                int lastCol = grid[i][m - 1 - j];\n\n                int val = curr + last + lastRow + lastCol;\n\n                if(val != 4 && val != 0) cnt += min(val, 4 - val);\n            }\n        }\n\n        return cnt;\n    }\n};",
    "submit_ts": "1722700063",
    "subm_id": "1343230572"
}