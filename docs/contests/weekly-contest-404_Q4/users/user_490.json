{
    "username": "yeuxsilenceux",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n         int size1 = edges1.size() + 1;\n        int size2 = edges2.size() + 1;\n        \n        vector<vector<int>> adjList1(size1);\n        vector<vector<int>> adjList2(size2);\n        \n        for (const auto& edge : edges1) {\n            adjList1[edge[0]].push_back(edge[1]);\n            adjList1[edge[1]].push_back(edge[0]);\n        }\n        for (const auto& edge : edges2) {\n            adjList2[edge[0]].push_back(edge[1]);\n            adjList2[edge[1]].push_back(edge[0]);\n        }\n\n        auto dfs = [](const vector<vector<int>>& adjList, int startNode, int& furthestNode) {\n            int n = adjList.size();\n            vector<int> distances(n, -1);\n            function<void(int, int)> dfsVisit = [&](int node, int distance) {\n                distances[node] = distance;\n                if (distance > distances[furthestNode]) {\n                    furthestNode = node;\n                }\n                for (int neighbor : adjList[node]) {\n                    if (distances[neighbor] == -1) {\n                        dfsVisit(neighbor, distance + 1);\n                    }\n                }\n            };\n            furthestNode = startNode;\n            dfsVisit(startNode, 0);\n            return distances[furthestNode];\n        };\n\n        int furthestNode1 = 0;\n        dfs(adjList1, 0, furthestNode1);\n        int diameter1 = dfs(adjList1, furthestNode1, furthestNode1);\n\n        int furthestNode2 = 0;\n        dfs(adjList2, 0, furthestNode2);\n        int diameter2 = dfs(adjList2, furthestNode2, furthestNode2);\n        \n        int minDiameter = max(diameter1, diameter2);\n        int halfDiameter1 = (diameter1 + 1) / 2;\n        int halfDiameter2 = (diameter2 + 1) / 2;\n        minDiameter = max(minDiameter, halfDiameter1 + halfDiameter2 + 1);\n        \n        return minDiameter;\n    }\n};",
    "submit_ts": "1719719130",
    "subm_id": "1304434446"
}