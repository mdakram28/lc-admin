{
    "username": "ProveMeRight",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int>add,sub;\n        for(int i= 0;i<points.size();i++)\n        {\n            add.insert(points[i][0] + points[i][1]);\n            sub.insert(points[i][0] - points[i][1]);\n        }\n        \n        long long ans = 1e9;\n        for(int i = 0;i<points.size();i++)\n        {\n            int val1 = points[i][0] + points[i][1];\n            int val2 = points[i][0] - points[i][1];\n            add.erase(add.find(val1));\n            sub.erase(sub.find(val2));\n            int fstV = *(--add.end()) - (*add.begin());\n            int secV = *(--sub.end()) -  (*sub.begin());\n            if(ans > max(fstV,secV))\n            {\n                ans = max(fstV,secV);\n            }\n            // ans = min(ans,max(fstV,secV));\n            add.insert(val1);\n            sub.insert(val2);\n        }\n        return ans;\n    }\n};"
}