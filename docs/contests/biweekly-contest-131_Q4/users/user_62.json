{
    "username": "dennis753951",
    "submission": "class Solution {\npublic:\n    int* segmentTree;\n    int N;\n\n    void buildTree() {\n        segmentTree = new int[N << 1];\n        fill(segmentTree, segmentTree + (N << 1), 0);\n        \n        segmentTree[50000 + N] = 50000;\n\n        // Middle Nodes\n        for(int i = N - 1; i != 0; --i)\n            segmentTree[i] = max(segmentTree[i << 1], segmentTree[(i << 1) + 1]);\n    }\n\n    void update(int index, int value) {\n        index += N;\n        segmentTree[index] = value;\n        while (index != 1) {\n            index >>= 1; // Move to parent node\n            segmentTree[index] = max(segmentTree[index << 1], segmentTree[(index << 1) + 1]);\n        }\n    }\n\n    int Max(int left, int right) {\n        left += N;\n        right += N;\n        int M = INT_MIN;\n        while(left <= right) {\n            if(left & 1){\n                M = max(M, segmentTree[left]);\n                ++left;\n            }\n            if(!(right & 1)){\n                M = max(M, segmentTree[right]);\n                --right;\n            }\n            left >>= 1, right >>= 1;\n        }\n        return M;\n    }\n    \n    vector<bool> getResults(vector<vector<int>>& q) {\n        N = 50001;\n        buildTree();\n        \n        set<int> s;\n        set<int>::iterator it;\n        \n        s.insert(50000);\n        s.insert(0);\n        \n        vector<bool> res;\n        int x, M;\n        \n        for(auto &v : q) {\n            x = v[1];\n            \n            if(v[0] == 1) { // [1, x]\n                if(x == 50000) continue;\n                \n                it = s.upper_bound(x);\n                update(x, x - *prev(it));\n                update(*it, *it - x);\n                \n                s.insert(v[1]);\n            }\n            else { // [2, x, sz] size sz in range [0, x]\n                it = prev(s.lower_bound(x));\n                \n                // cout << \"max(\" << Max(0, *prev(it)) << \", \" << *it - x << \")\\n\";\n                M = max(Max(0, *it), x - *it);\n                \n                res.push_back(M >= v[2]);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1716649801.0
}