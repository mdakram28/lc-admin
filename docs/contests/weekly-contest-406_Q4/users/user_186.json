{
    "username": "mfk443838746",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long res = 0;\n        sort(rbegin(horizontalCut), rend(horizontalCut));\n        sort(rbegin(verticalCut), rend(verticalCut));\n        int hCnt = 1, vCnt = 1;\n        int i = 0, j = 0;\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                res += horizontalCut[i] * vCnt;\n                ++hCnt;\n                ++i;\n            } else {\n                res += verticalCut[j] * hCnt;\n                ++vCnt;\n                ++j;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            res += horizontalCut[i] * vCnt;\n            i++;\n        }\n        while (j < verticalCut.size()) {\n            res += verticalCut[j] * hCnt;\n            j++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925214",
    "subm_id": "1320247000"
}