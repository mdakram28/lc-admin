{
    "username": "Eric_Lu0513",
    "submission": "class Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) \n    {\n        int tree_1 = edges1.size()+1;\n        int tree_2 = edges2.size()+1;\n        int visited_1[tree_1];\n        int visited_2[tree_2];\n        vector<vector<int>> record_1;\n        vector<vector<int>> record_2;\n        record_1.resize(tree_1);\n        record_2.resize(tree_2);\n        \n        for(int i = 0; i < tree_1; i++)\n            visited_1[i] = 0;\n        for(int i = 0; i < tree_2; i++)\n            visited_2[i] = 0;\n        \n        for(int i = 0; i < edges1.size(); i++)\n        {\n            record_1[edges1[i][0]].push_back(edges1[i][1]);\n            record_1[edges1[i][1]].push_back(edges1[i][0]);\n        }\n        \n        for(int i = 0; i < edges2.size(); i++)\n        {\n            record_2[edges2[i][0]].push_back(edges2[i][1]);\n            record_2[edges2[i][1]].push_back(edges2[i][0]);\n        }\n        pair<int,int> s_1;\n        pair<int,int> s_2;\n        s_1 = DFS_far(0, visited_1, record_1, 0);\n        s_2 = DFS_far(0, visited_2, record_2, 0);\n        for(int i = 0; i < tree_1; i++)\n            visited_1[i] = 0;\n        for(int i = 0; i < tree_2; i++)\n            visited_2[i] = 0;\n        s_1 = DFS_far(s_1.second, visited_1, record_1, 0);\n        s_2 = DFS_far(s_2.second, visited_2, record_2, 0);\n        //cout << \"s_1: \" << s_1.first << \" s_2: \" << s_2.first << \"\\n\"; \n        \n        int ans;\n        int tree_1_h;\n        int tree_2_h;\n        \n        ans = max(s_1.first, s_2.first);\n        if(s_1.first % 2 == 0)\n            tree_1_h = s_1.first / 2;\n        else\n            tree_1_h = (s_1.first / 2) + 1;\n        \n        if(s_2.first % 2 == 0)\n            tree_2_h = s_2.first / 2;\n        else\n            tree_2_h = (s_2.first / 2) + 1;\n        \n        //cout << \"tree_1: \" << tree_1_h << \" tree_2: \" << tree_2_h << \"\\n\";\n        if(tree_1_h + tree_2_h + 1 > ans)\n            ans = tree_1_h + tree_2_h + 1;\n        \n        return ans;\n        \n        \n    }\n    pair<int, int> DFS_far(int start, int* arr, vector<vector<int>> &record, int tmp)\n    {\n        pair<int,int> s;\n        pair<int,int> tmp_s;\n        tmp_s = {tmp,start};\n        arr[start] = 1;\n        for(int i = 0; i < record[start].size(); i++)\n        {\n            if(arr[record[start][i]] == 0)\n            {\n                s = DFS_far(record[start][i], arr, record, tmp+1);\n                \n            }\n            if(s.first > tmp_s.first)\n                tmp_s = s;\n        }\n        \n        return tmp_s;\n    }\n};",
    "submit_ts": "1719719538",
    "subm_id": "1304444409"
}