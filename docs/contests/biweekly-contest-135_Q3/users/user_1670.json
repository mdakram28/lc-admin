{
    "username": "zipp_",
    "submission": "class Solution {\npublic:\n    int binaryleft(const vector<int>& v, int target) {\n    int left = 0;\n    int right = v.size();\n    while (left < right) {\n        int mid = left + (right - left) / 2;\n        if (v[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n    int minChanges(vector<int>& a, int b) {\n        map<int, vector<int>> c;\n        vector<int> d;\n\n        for (int e = 0; e < a.size() / 2; ++e) {\n            int f = a[e];\n            int g = a[a.size() - e - 1];\n            int h = abs(f - g);\n\n            int i = max({f, g, b - f, b - g});\n            c[h].push_back(i);\n            d.push_back(i);\n        }\n\n        int j = a.size();\n        sort(d.begin(), d.end());\n\n        for (const auto& [h, i] : c) {\n            int k = binaryleft(d, h);\n            k = k * 2 + (a.size() / 2 - k);\n\n            for (const auto& l : i) {\n              if (l < h) {\n                k--;\n                  k--;\n       }           else {\n       k--;\n       }\n            }\n\n            j = min(j, k);\n        }\n\n        return j;\n    }\n};\n",
    "submit_ts": "1721489422",
    "subm_id": "1327452784"
}