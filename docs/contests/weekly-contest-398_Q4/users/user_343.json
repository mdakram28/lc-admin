{
    "username": "Vintersosa",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        \n        \n        \n        @lru_cache(None)\n        def dp(stair, last, jump):\n            if k==stair:\n                val = 2 if jump==0 else 1\n                if last== True or stair==0:\n                    return val\n                val+= dp(stair-1, True, jump)\n                return val\n            \n            \n            result = 0\n            if stair<k:\n                result+=dp(stair+2**jump, False, jump+1)\n            if stair>=1 and not last:\n                result+= dp(stair-1, True, jump)\n            return result\n        \n        return dp(1, False, 0)\n                \n                \n                \n            ",
    "submit_ts": "1716088462",
    "subm_id": "1261814656"
}