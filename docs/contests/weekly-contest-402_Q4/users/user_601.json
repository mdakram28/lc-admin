{
    "username": "SohamKanji",
    "submission": "class Solution {\npublic:\n    void buildTree(int ss, int se, int idx, vector<int>& v, vector<int>& st) {\n        if(ss==se) {\n            st[idx] = v[ss];\n            return;\n        }\n        int m = ss+(se-ss)/2;\n        buildTree(ss, m, 2*idx+1, v, st);\n        buildTree(m+1, se, 2*idx+2, v, st);\n        st[idx] = st[2*idx+1] + st[2*idx+2];\n    }\n    void update(int ss, int se, int idx, int i, int val, vector<int>& st) {\n        if(ss>idx || se<idx) {\n            return;\n        }\n        if(ss==se && ss==idx) {\n            st[i] = val;\n            return;\n        }\n        int m = ss + (se-ss)/2;\n        update(ss, m, idx, 2*i+1, val, st);\n        update(m+1, se, idx, 2*i+2, val, st);\n        st[i] = st[2*i+1] + st[2*i+2];\n    }\n    int getMax(int ss, int se, int qs, int qe, int i, vector<int>& st) {\n        if(ss>qe || se<qs) {\n            return 0;\n        }\n        if(ss>=qs && se<=qe) {\n            return st[i];\n        }\n        int m = ss + (se-ss)/2;\n        return getMax(ss, m, qs, qe, 2*i+1, st)+getMax(m+1, se, qs, qe, 2*i+2, st);\n    }\n    void func(int i, int n, vector<int>& nums, vector<int>& st, vector<int>& v) {\n        if(i==0 || i==n-1) {\n            return;\n        }\n        v[i] = (nums[i] > nums[i-1] && nums[i] > nums[i+1]);\n        update(0, n-1, i, 0, v[i], st);\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> v(n,0);\n        for(int i=1; i<n-1; i++) {\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]) {\n                v[i] = 1;\n            }\n        }\n        vector<int> st(4*n);\n        buildTree(0, n-1, 0, v, st);\n        vector<int> ans;\n        for(auto &q: queries) {\n            if(q[0]==1) {\n                int tmp = getMax(0, n-1, q[1], q[2], 0, st) - v[q[1]] -  ((q[2]!=q[1]) ? v[q[2]] : 0);\n                ans.push_back(tmp);\n            } else {\n                nums[q[1]] = q[2];\n                func(q[1], n, nums, st, v);\n                if(q[1]-1>=0) {\n                    func(q[1]-1, n, nums, st, v);\n                }\n                if(q[1]+1<n) {\n                    func(q[1]+1, n, nums, st, v);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507424.0
}