{
    "username": "yoochun",
    "submission": "\nclass Solution {\npublic:\n  int minimumDistance(vector<vector<int>>& p) {\n    for (auto&v : p) { int t = v[0]; v[0] += v[1]; v[1] = t - v[1]; }\n    \n    int aa, bb, res = -1;\n    for (int k = 0; k < 2; ++k) {\n      int a = 0, b = 0;\n      for (int i = 0; i < p.size(); ++i) {\n        if (p[i][k] < p[a][k]) a = i;\n        if (p[i][k] > p[b][k]) b = i;\n      }\n      if (p[b][k] - p[a][k] > res) {\n        res = p[b][k] - p[a][k];\n        aa = a; bb = b;\n      }\n    }\n    auto cal = [&](int z) {\n      swap(p.back(), p[z]);\n      vector<int> rm = p.back();\n      p.pop_back();\n\n      int res = -1;\n      for (int k = 0; k < 2; ++k) {\n        int a = 0, b = 0;\n        for (int i = 0; i < p.size(); ++i) {\n          if (p[i][k] < p[a][k]) a = i;\n          if (p[i][k] > p[b][k]) b = i;\n        }\n        res = max(res, p[b][k] - p[a][k]);\n      }\n      \n      p.push_back(rm);\n      swap(p.back(), p[z]);\n      return res;\n    };\n    \n    int ra = cal(aa);\n    int rb = cal(bb);\n\n    return min(ra, rb);\n  }\n};"
}