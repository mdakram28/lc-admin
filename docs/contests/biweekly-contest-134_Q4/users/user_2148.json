{
    "username": "Tinker_21",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long total = 0;\n        vector<int>v;\n        for(int i=0;i<n;i++)\n        v.push_back(nums[i]);\n        unordered_map<long long int, long long int> previousResults;\n        \n        for (int i = 0; i < n; i++) {\n            unordered_map<long long, long long> currentResults;\n            \n            if (v[i] == k) {\n                total++;\n            }\n            \n            currentResults[v[i]] = 1;\n            \n            for (auto& [value, frequency] : previousResults) {\n                long long newAndResult = value & v[i];\n                \n                if (newAndResult == k) {\n                    total += frequency;\n                }\n                \n                currentResults[newAndResult] += frequency;\n            }\n            \n            previousResults = currentResults;\n        }\n        \n        return total;\n    }\n};\n",
    "submit_ts": "1720281449",
    "subm_id": "1311825591"
}