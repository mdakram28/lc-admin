{
    "username": "gandip_6355",
    "submission": "#define ll long long \n#define um unordered_map\nclass Solution {\npublic:\n    bool isPrime(int n)\n{\n    \n    if (n <= 1)\n        return false;\n\n    \n    for (int i = 2; i <= n / 2; i++)\n        if (n % i == 0)\n            return false;\n\n    return true;\n}\n    int calculateSum(int n)\n{\n    if (n <= 0)\n       return 0;\n \n    int fibo[n+1];\n    fibo[0] = 0, fibo[1] = 1;\n \n    // Initialize result\n    int sum = fibo[0] + fibo[1];\n \n    // Add remaining terms\n    for (int i=2; i<=n; i++)\n    {\n        fibo[i] = fibo[i-1]+fibo[i-2];\n        sum += fibo[i];\n    }\n \n    return sum;\n}\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        long long cnt=0;\n        um<ll,ll>prev;\n        \n        for(int i=0;i<n;i++)\n        {\n            um<ll,ll>curr;\n           if(nums[i]==k)\n        {\n            cnt++;\n        }\n        curr[nums[i]]=1;\n            for(auto &[val,freqcnt]:prev)\n            {\n                ll newval=val&nums[i];\n                if(newval==k)\n                {\n                    cnt+=freqcnt;\n                }\n                curr[newval]+=freqcnt;\n            }\n            prev=curr;\n        }\n        return cnt;\n        \n        \n    }\n};",
    "submit_ts": "1720278921",
    "subm_id": "1311729935"
}