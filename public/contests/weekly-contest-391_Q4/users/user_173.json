{
    "username": "junweih",
    "submission": "def MaxDist(A, N):\n \n        # Variables to track running extrema\n        minsum = maxsum = A[0][0] + A[0][1]\n        mindiff = maxdiff = A[0][0] - A[0][1]\n        \n        mins = 0\n        mind = 0\n        maxs = 0\n        maxd = 0\n        for i in range(1,N):\n            summ = A[i][0] + A[i][1]\n            diff = A[i][0] - A[i][1]\n            if (summ < minsum):\n                minsum = summ\n                mins = i\n            elif (summ > maxsum):\n                maxsum = summ\n                maxs = i\n            if (diff < mindiff):\n                mindiff = diff\n                mind = i\n            elif (diff > maxdiff):\n                maxdiff = diff\n                maxd = i\n\n        maximum = max(maxsum - minsum, maxdiff - mindiff)\n        \n        if maxsum - minsum >= maxdiff - mindiff:\n            return [maximum, maxs, mins]\n        else:\n            return [maximum, maxd, mind]\n \n\n\nclass Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        _, i1, i2 = MaxDist(points, len(points))\n        wo1 = points[:i1] + points[i1+1:]\n        wo2 = points[:i2] + points[i2+1:]\n        r1, _, _ = MaxDist(wo1, len(points)-1)\n        r2, _, _ = MaxDist(wo2, len(points)-1)\n        return min(r1, r2)\n        \n        \n    "
}