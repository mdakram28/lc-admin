{
    "username": "Himanshu Syuni",
    "submission": "\nclass Solution {\n    long long dp[101][101][101];\n\npublic:\n    long long solve(vector<vector<int>>& board, vector<vector<int>>& maxo,\n                    int i, int a, int b) {\n        if (i >= board.size())\n            return -1e10;\n\n        if (dp[i][a + 1][b + 1] != -1)\n            return dp[i][a + 1][b + 1];\n        if (a == -1) {\n            long long ans = LONG_LONG_MIN;\n            ans=max(ans,solve(board,maxo,i+1,a,b));\n            for (int j = 0; j < board[0].size(); j++) {\n                ans = max(ans, solve(board, maxo, i + 1, j, b) + board[i][j]);\n            }\n            return dp[i][a + 1][b + 1] = ans;\n        }\n        if (b == -1) {\n            long long ans = LONG_LONG_MIN;\n            ans=max(ans,solve(board,maxo,i+1,a,b));\n            for (int j = 0; j < board[0].size(); j++) {\n                if (j == a)\n                    continue;\n                ans = max(ans, solve(board, maxo, i + 1, a, j) + board[i][j]);\n            }\n            return dp[i][a + 1][b + 1] = ans;\n        }\n        long long ans = LONG_LONG_MIN;\n        for (int j = 0; j < board[0].size(); j++) {\n            if (j == a || j == b)\n                continue;\n            ans = max(ans, 1ll*maxo[i][j]);\n        }\n        return dp[i][a + 1][b + 1] = ans;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        memset(dp, -1, sizeof(dp));\n        vector<vector<int>> maxo(board.size(),vector<int> (board[0].size()));\n\n        for(int i=board.size()-1;i>=0l;i--){\n            for(int j=0;j<board[0].size();j++){\n                if(i==board.size()-1){\n                    maxo[i][j]=board[i][j];\n                }\n                else \n                    maxo[i][j]=max(board[i][j],maxo[i+1][j]);\n            }\n\n        }\n        long long ans = solve(board,maxo, 0, -1, -1);\n        return ans;\n    }\n};",
    "submit_ts": "1723907945",
    "subm_id": "1359131411"
}