{
    "username": "pK2015",
    "submission": "class Solution {\n    int MOD = (int)1e9 + 7;\n    public int countOfPairs(int[] nums) {\n        return recursion(nums, 0, 0, new Integer[nums.length][51]);\n    }\n\n    int recursion(int[] arr, int i, int x, Integer[][] dp) {\n        int N = arr.length;\n        if(i == N) {\n            // System.out.println(x);\n            return 1;\n        }\n        // System.out.print(x + \" \");\n\n        int y = i > 0 ? arr[i-1] - x : arr[0] + 1;\n        if(dp[i][x] != null) return dp[i][x];\n        long ans = 0;\n        for(int xi = Math.max(x, 0); xi <= arr[i]; xi++ ) {\n            int yi = arr[i] - xi;\n            if(yi <= y) {\n                ans = (ans + recursion(arr, i+1, xi, dp))%MOD;\n            }\n        }\n        dp[i][x] = (int)ans;\n        return dp[i][x];\n    }\n}",
    "submit_ts": "1723345125",
    "subm_id": "1351549094"
}