{
    "username": "Ausaf_02",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int rows = g.size();\n        int cols = g[0].size();\n        \n        int result = 0;\n        \n       \n        for (int r = 0; r < rows / 2; ++r) {\n            for (int c = 0; c < cols / 2; ++c) {\n                vector<int> elems = {\n                    g[r][c],\n                    g[rows - r - 1][c],\n                    g[r][cols - c - 1],\n                    g[rows - r - 1][cols - c - 1]\n                };\n                \n                int ones = accumulate(elems.begin(), elems.end(), 0);\n                \n                result += min(ones, 4 - ones);\n            }\n        }\n        \n        int extraPossible = 0;\n        int centralOnes = 0;\n        \n       \n        if (rows % 2 != 0) {\n            int midRow = rows / 2;\n            for (int c = 0; c < cols / 2; ++c) {\n                if (g[midRow][c] != g[midRow][cols - c - 1]) {\n                    result += 1;\n                    extraPossible += 1;\n                } else {\n                    if (g[midRow][c] == 1) {\n                        centralOnes += 1;\n                    }\n                }\n            }\n        }\n        \n       \n        if (cols % 2 != 0) {\n            int midCol = cols / 2;\n            for (int r = 0; r < rows / 2; ++r) {\n                if (g[r][midCol] != g[rows - r - 1][midCol]) {\n                    result += 1;\n                    extraPossible += 1;\n                } else {\n                    if (g[r][midCol] == 1) {\n                        centralOnes += 1;\n                    }\n                }\n            }\n        }\n        \n       \n        if (rows % 2 != 0 && cols % 2 != 0 && g[rows / 2][cols / 2] == 1) {\n            result += 1;\n        }\n        \n        if (extraPossible == 0 && centralOnes % 2 != 0) {\n            result += 2;\n        }\n        \n        return result;\n    }\n};\n",
    "submit_ts": "1722699467",
    "subm_id": "1343212561"
}