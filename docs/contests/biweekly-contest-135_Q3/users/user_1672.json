{
    "username": "charlesyjp",
    "submission": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar minChanges = function(nums, k) {\n    // X = |a[i] - a[n - i - 1]|\n\n    const countMap = {};\n\n    for (let i = 0; i < (nums.length >> 1); i++) {\n        const diff = Math.abs(nums[i] - nums[nums.length - i - 1]);\n        countMap[diff] ??= 0;\n        countMap[diff]++;\n    }\n\n    const sortedDiffs = Object.keys(countMap).map(k => Number(k)).sort((a, b) => a - b);\n\n    const diffs = [sortedDiffs[0]];\n\n    for (const diff of sortedDiffs) {\n        if (countMap[diffs[diffs.length - 1]] < countMap[diff]) {\n            diffs.push(diff);\n        }\n    }\n    \n    let numOfChanges = getNumbersOfChangesAll(nums, k, diffs[0]);\n    for (let i = 1; i < diffs.length; i++) {\n        const currentNumOfChanges = getNumbersOfChangesAll(nums, k, diffs[i]);\n        if (currentNumOfChanges <= numOfChanges) {\n            numOfChanges = currentNumOfChanges;\n        } else {\n            break;\n        }\n    }\n    return numOfChanges;\n\n};\n\nfunction getNumbersOfChangesAll(nums, k, x) {\n    let result = 0;\n    for (let i = 0; i < (nums.length >> 1); i++) {\n        result += getNumbersOfChanges(nums[i], nums[nums.length - i - 1], k, x);\n    }\n    return result;\n}\n\nfunction getNumbersOfChanges(a, b, k, x) {\n    if (Math.abs(a - b) === x) {\n        return 0;\n    }\n\n    if (a >= x || b >= x || a <= k - x || b <= k - x) {\n        return 1;\n    }\n\n    return 2;\n}",
    "submit_ts": "1721490018",
    "subm_id": "548321227"
}