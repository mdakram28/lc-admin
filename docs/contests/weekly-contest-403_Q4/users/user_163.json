{
    "username": "paulkkk",
    "submission": "\nclass Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n,m = len(grid),len(grid[0])\n        min_sum = m*n\n        cur_sum = min_sum\n        #Cut by row\n        for i in range(n):\n            for j in range(i+1,n):\n                cur_sum = min(cur_sum,self.minimumArea(grid,0,0,i,m-1) + self.minimumArea(grid,i+1,0,j,m-1) + self.minimumArea(grid,j+1,0,n-1,m-1))\n                #print(i,j,cur_sum)\n            # Cut column\n            for k in range(m):\n                # up cut\n                cur_sum = min(cur_sum,self.minimumArea(grid,0,0,i,k) + self.minimumArea(grid,0,k+1,i,m-1) + self.minimumArea(grid,i+1,0,n-1,m-1))\n                #down cut\n                cur_sum = min(cur_sum,self.minimumArea(grid,i+1,0,n-1,k) + self.minimumArea(grid,i+1,k+1,n-1,m-1) + self.minimumArea(grid,0,0,i,m-1))\n\n        # Cut by column\n        for i in range(m):\n            for j in range(i+1,m):\n                cur_sum = min(cur_sum,self.minimumArea(grid,0,0,n-1,i) + self.minimumArea(grid,0,i+1,n-1,j) + self.minimumArea(grid,0,j+1,n-1,m-1))\n                #print(i,j,cur_sum)\n            for k in range(n):\n                # left cut\n                cur_sum = min(cur_sum,self.minimumArea(grid,0,0,k,i) + self.minimumArea(grid,k+1,0,n-1,i) + self.minimumArea(grid,0,i+1,n-1,m-1))\n                # right cut\n                cur_sum = min(cur_sum,self.minimumArea(grid,0,0,n-1,i) + self.minimumArea(grid,0,i+1,k,m-1) + self.minimumArea(grid,k+1,i+1,n-1,m-1))\n        return cur_sum        \n\n\n\n    def minimumArea(self, grid: List[List[int]],sr,sc,er,ec) -> int:\n        # left,right,up,down = len(grid[0])-1,0, len(grid)-1, 0\n\n        left,right,up,down = ec, sc, er, sr\n\n        for i in range(sr,er+1):\n            for j in range(sc,ec+1):\n                if grid[i][j]==1:\n                    up = min(i,up)\n                    down = max(down,i)\n                    left = min(left,j)\n                    right = max(right,j)\n        return max(0,(right-left+1)*(down-up+1))",
    "submit_ts": 1719112882.0
}