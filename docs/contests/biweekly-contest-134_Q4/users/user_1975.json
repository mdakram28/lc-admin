{
    "username": "itsayush2811",
    "submission": "class Solution {\npublic:\n    \n    long long solve(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        vector<vector<int>> pref(nums.size()+1,vector<int>(31,0));\n        for(int i=0;i<nums.size();i++){\n            for(int k=0;k<30;k++){\n                pref[i+1][k]=pref[i][k]+(((nums[i]>>k)&1)?0:1);\n            }\n        }\n        for (int start = 0; start < n; ++start) {\n            int lw=0,hg=start;\n            int ansl=-1,ansh=-1;\n            while(lw<=hg){\n                int mid=(lw+hg)>>1;\n                int numF=0;\n                for(int k=0;k<31;k++){\n                   if(pref[start+1][k]==pref[mid][k]){\n                       \n                       numF+=(1ll<<k);\n                   }\n                }\n                cout<<\"--\"<<mid<<\" \"<<numF<<\"\\n\";\n                if(numF==k){\n                    ansl=mid;\n                    hg=mid-1;\n                }else{\n                    lw=mid+1;\n                }\n            }\n            // lw=ansl;hg=start;\n            // while(lw<=hg){\n            //     int mid=(lw+hg)>>1;\n            //     int numF=0;\n            //     for(int k=0;k<31;k++){\n            //        if(pref[start+1][k]==pref[mid][k]){\n            //            numF+=(1ll<<k);\n            //        }\n            //     }\n            //     if(numF==k){\n            //         ansh=mid;\n            //         lw=mid+1;\n            //     }else{\n            //         hg=mid-1;\n            //     }\n            // }\n            cout<<start<<\" \"<<ansl<<\" \"<<ansh<<\"\\n\";\n            // count+=max(0,ansh-ansl+1);\n        }\n        return count;\n    }\n   long long countSubarrays(vector<int>& array, int target) {\n        int size = array.size();\n        long long res = 0;\n        map<long long, long long> prevRes;\n        for (int i = 0; i < size; ++i) {\n            map<long long, long long> curR; \n            if (array[i] == target) {\n                ++res;\n            }\n            curR[array[i]] = 1;\n            for (auto& [val, fq] : prevRes) {\n                long long newtmp = val & array[i];\n                if (newtmp == target) {\n                    res += fq;\n                }\n                curR[newtmp] += fq;\n            }\n            \n            prevRes = curR;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720279436",
    "subm_id": "1311751129"
}