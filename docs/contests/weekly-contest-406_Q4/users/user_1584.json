{
    "username": "MichaelWheeler202",
    "submission": "from typing import List\n\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n\n        vCuts = 0\n        hCuts = 0\n        cost = 0\n\n        horizontalCut.sort()\n        verticalCut.sort()\n\n        while len(horizontalCut) > 0 and len(verticalCut) > 0:\n            if horizontalCut[-1] >= verticalCut[-1]:\n                cost += horizontalCut.pop(-1) * (vCuts + 1)\n                hCuts += 1\n            else:\n                cost += verticalCut.pop(-1) * (hCuts + 1)\n                vCuts += 1\n\n        while len(horizontalCut) > 0:\n            cost += horizontalCut.pop(-1) * (vCuts + 1)\n            hCuts += 1\n\n        while len(verticalCut) > 0:\n            cost += verticalCut.pop(-1) * (hCuts + 1)\n            vCuts += 1\n\n        return cost\n        \n\n\n\n\n",
    "submit_ts": "1720925734",
    "subm_id": "1320264501"
}