{
    "username": "kishan-jaiswal",
    "submission": "\n\n#define long long int\n\nclass Solution\n{\npublic:\n    pair<pair<int, int>, int> dp[10010];\n    vector<int> adj[10010];\n\n    void calculateDistances(int n, int i)\n    {\n        for (int j = i + 1; j < n; ++j)\n        {\n            double d = sqrt(pow(dp[i].first.first - dp[j].first.first, 2) + pow(dp[i].first.second - dp[j].first.second, 2));\n            int res = dp[i].second + dp[j].second;\n            if (res >= d)\n            {\n                adj[i].push_back(j);\n                adj[j].push_back(i);\n            }\n        }\n    }\n\n    void checkBorders(int n, int i, int X, int Y)\n    {\n        if (dp[i].first.first <= dp[i].second)\n        {\n            adj[n].push_back(i);\n            adj[i].push_back(n);\n        }\n        if (X - dp[i].first.first <= dp[i].second)\n        {\n            adj[n + 2].push_back(i);\n            adj[i].push_back(n + 2);\n        }\n        if (dp[i].first.second <= dp[i].second)\n        {\n            adj[n + 1].push_back(i);\n            adj[i].push_back(n + 1);\n        }\n        if (Y - dp[i].first.second <= dp[i].second)\n        {\n            adj[n + 3].push_back(i);\n            adj[i].push_back(n + 3);\n        }\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>> &a)\n    {\n        int n = a.size();\n        for (int i = 0; i < n; ++i)\n        {\n            dp[i].first.first = a[i][0];\n            dp[i].first.second = a[i][1];\n            dp[i].second = a[i][2];\n        }\n\n        for (int i = 0; i < n; ++i)\n        {\n            checkBorders(n, i, X, Y);\n            calculateDistances(n, i);\n        }\n\n        int ans = 0;\n\n        ans = max(ans, bfs(n, n + 1, n + 2, n + 4));\n        ans = max(ans, bfs(n + 3, n + 2, n + 1, n + 4));\n\n        return ans == 0;\n    }\n\nprivate:\n    int bfs(int s, int t1, int t2, int n)\n    {\n        queue<int> q;\n        vector<int> v(n + 4, 0);\n        q.push(s);\n        v[s] = 1;\n\n        while (!q.empty())\n        {\n            int u = q.front();\n            q.pop();\n            for (int p : adj[u])\n            {\n                if (v[p])\n                    continue;\n                else\n                {\n                    q.push(p);\n                    v[p] = 1;\n                }\n            }\n        }\n        return v[t1] || v[t2];\n    }\n};\n",
    "submit_ts": "1722138696",
    "subm_id": "1335797343"
}