{
    "username": "harsh_reality_",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        ans = 0\n        for i in range(n // 2):\n            for j in range(m // 2):\n                cells = [grid[i][j], grid[i][-j-1], grid[-i-1][j], grid[-i-1][-j-1]]\n                ones = cells.count(1)\n                zeros = 4 - ones\n                ans += min(ones, zeros)\n\n        poss = cnt = 0\n        if n & 1:\n            for j in range(m // 2):\n                if grid[n // 2][j] != grid[n // 2][-j-1]:\n                    ans += 1\n                    poss += 1\n                else:\n                    if grid[n // 2][j]:\n                        cnt += 1\n\n        if m & 1:\n            for i in range(n // 2):\n                if grid[i][m // 2] != grid[-i-1][m // 2]:\n                    ans += 1\n                    poss += 1\n                else:\n                    if grid[i][m // 2]:\n                        cnt += 1\n\n        return ans + (2 if not poss and cnt & 1 else 0) + (n & 1 and m & 1 and grid[n // 2][m // 2])",
    "submit_ts": "1722700303",
    "subm_id": "1343237791"
}