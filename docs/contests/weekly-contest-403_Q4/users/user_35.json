{
    "username": "nguyenquocthao00",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m,n = len(grid), len(grid[0])\n        @lru_cache(None)\n        def find(starti, endi, startj, endj):\n            maxi,maxj,mini, minj = -1,-1,m,n\n            for i,j in product(range(starti,endi+1),range(startj,endj+1)):\n                if grid[i][j]==1:\n                    maxi,maxj,mini,minj = max(maxi,i),max(maxj,j),min(mini,i),min(minj,j)\n            if maxi==-1 or maxj==-1: return 0\n            return (maxi-mini+1)*(maxj-minj+1)\n        res=m*n\n        for i,j in combinations(range(m-1),2):\n            res=min(res, find(0,i,0,n-1) + find(i+1,j,0,n-1)+ find(j+1,m-1,0,n-1))\n        for i,j in combinations(range(n-1),2):\n            res=min(res, find(0,m-1,0,i) + find(0,m-1,i+1,j)+find(0,m-1,j+1,n-1))\n        for i,j in product(range(m-1),range(n-1)):\n            res=min(res, find(0,i,0,n-1) + find(i+1,m-1,0,j) + find(i+1,m-1,j+1,n-1))\n            res=min(res, find(i+1,m-1,0,n-1) + find(0,i,0,j) + find(0,i,j+1,n-1))\n            res=min(res, find(0,m-1,0,j) + find(0,i,j+1,n-1) + find(i+1,m-1,j+1,n-1))\n            res=min(res, find(0,m-1,j+1,n-1) + find(0,i,0,j) + find(i+1,m-1,0,j))\n        return res\n\n        \n        # @lru_cache(None)\n        # def sumat(i,j):\n        #     if i<0 or j<0: return 0\n        #     return grid[i][j] + sumat(i-1,j) + sumat(i,j-1) - sumat(i-1,j-1)\n\n        \n        ",
    "submit_ts": 1719111706.0
}