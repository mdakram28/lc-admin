{
    "username": "rushabh44",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>>v;\n        for (int i = 0; i < m - 1; ++i) {\n            v.push_back({horizontalCut[i], 'H'}); \n        }\n        for (int j = 0; j < n - 1; ++j) {\n            v.push_back({verticalCut[j], 'V'}); \n        }\n        sort(v.rbegin(), v.rend());\n        long long cost = 0;\n        int horizontalSegments = 1;\n        int verticalSegments = 1;\n        for (auto it : v) {\n            if (it.second == 'H') {\n                cost += 1ll*(it.first) * verticalSegments;\n                horizontalSegments++;\n            } else {\n                cost += 1ll*(it.first) * horizontalSegments;\n                verticalSegments++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720925287",
    "subm_id": "1320249535"
}