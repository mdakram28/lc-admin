{
    "username": "areke",
    "submission": "class Solution {\npublic:\n    \n    long long fact(int n) {\n        long long x = 1;\n        for (int i = 1; i <= n; i++) {\n            x *= i;\n        }\n        return x;\n    }\n    \n    long long nCr(int n, int r) {\n        r = min(r, n - r);\n        long long c = 1;\n        long long cur = 1;\n        for (int i = n; i >= n - r + 1; i--) {\n            c *= i;\n            while (cur <= r && c % cur == 0) {\n                c /= cur;\n                cur++;\n            }\n            \n        }\n        return c;\n    }\n    int waysToReachStair(int k) {\n        long long c = 1;\n        long long res = 0;\n        for (int j = 0; j < 31; j++) {\n            if (c - k <= j + 1 && c - k >= 0) {\n                res += nCr(j + 1, c - k);\n            }\n            c += (1 << j);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1716087598",
    "subm_id": "1261788622"
}