{
    "username": "SudhanshuSingh2909",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n         vector<pair<int, char>>v;\n    for (int i = 0; i < m - 1; i++) {\n        v.push_back({horizontalCut[i], 'H'});\n    }\n    for (int j = 0; j < n - 1; j++) {\n        v.push_back({verticalCut[j], 'V'});\n    }\n    sort(v.begin(), v.end(),greater());\n    int h_part = 1;\n    int v_part = 1;\n    long long min_cost = 0;\n    for (auto& cut : v) {\n        int cost = cut.first;\n        char type = cut.second;\n        if (type == 'H') {\n            min_cost += cost * v_part;\n            h_part++;\n        }\n        else { \n            min_cost += cost * h_part;\n            v_part++;\n        }\n    }\n\n    return min_cost;\n    }\n};",
    "submit_ts": "1720925983",
    "subm_id": "1320272326"
}