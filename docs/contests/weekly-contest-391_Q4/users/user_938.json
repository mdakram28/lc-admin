{
    "username": "cpd_007",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<int> s(n,0);\n        vector<int> d(n,0);\n        for(int i = 0; i<n; i++) {\n            s[i] = points[i][0] + points[i][1];\n            d[i] = points[i][0] - points[i][1];\n        }\n        sort(s.begin(), s.end());\n        sort(d.begin(), d.end());\n        \n        int ans = INT_MAX;\n        \n        for(int i = 0; i<n; i++) {\n            int cur = 0;\n            int x = points[i][0] + points[i][1];\n            int y = points[i][0] - points[i][1];\n            if(s[0] == x) cur = max(cur, s[n-1] - s[1]);\n            else if(s[n-1] == x) cur = max(cur, s[n-2] - s[0]);\n            else cur = max(cur, s[n-1] - s[0]);\n            if(d[0] == y) cur = max(cur, d[n-1] - d[1]);\n            else if(d[n-1] == y) cur = max(cur, d[n-2] - d[0]);\n            else cur = max(cur, d[n-1] - d[0]);\n            \n            ans = min(ans, cur);\n        }\n        return ans;\n    }\n};"
}