{
    "username": "xlx2",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        x = [q-p for p,q in zip(nums, target)]\n\n        def g(x):\n            n = len(x)\n            fa = list(range(n))\n            def find(i):\n                if fa[i] != i:\n                    fa[i] = find(fa[i])\n                return fa[i]\n            d = defaultdict(list)\n            for i,v in enumerate(x):\n                d[v].append(i)\n            ans = cnt = 0\n            vals = sorted(d.keys(), reverse=True)\n            seen = [0] * n\n            for j in range(len(vals)-1):\n                v = vals[j]\n                for i in d[v]:\n                    cnt += 1\n                    if i > 0 and seen[i-1]:\n                        fa[find(i)] = find(i-1)\n                        cnt -= 1\n                    if i < n-1 and seen[i+1]:\n                        fa[find(i)] = find(i+1)\n                        cnt -= 1\n                    seen[i] = 1\n                ans += cnt * (v - vals[j+1])\n            ans += vals[-1]\n            return ans\n\n        m = len(x)\n        ans = i = 0\n        while i < m:\n            j = i\n            sgn = 1 if x[i] >= 0 else -1\n            while j < m and x[j] * sgn >= 0:\n                j += 1\n            ans += g([abs(v) for v in x[i:j]])\n            i = j\n        return ans",
    "submit_ts": "1721532403",
    "subm_id": "1327984991"
}