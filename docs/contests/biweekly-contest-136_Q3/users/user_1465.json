{
    "username": "Precizne",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < n / 2; i++) {\n            for(int j = 0; j < m / 2; j++) {\n                int v = grid[i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j];\n                ans += min(v, 4 - v);\n            }\n        }\n        int v = 0, f = 0;\n        if(n & 1) {\n            for(int j = 0; j < m / 2; j++) {\n                if(grid[n / 2][j] != grid[n / 2][m - 1 - j]) {\n                    ans++;\n                    f = 1;\n                }\n                v += (grid[n / 2][j] == 1) && (grid[n / 2][m - 1 - j] == 1);\n            }\n        }\n        if(m & 1) {\n            for(int i = 0; i < n / 2; i++) {\n                if(grid[i][m / 2] != grid[n - 1 - i][m / 2]) {\n                    ans++;\n                    f = 1;\n                }\n                v += (grid[i][m / 2] == 1) && (grid[n - 1 - i][m / 2] == 1);\n            }\n        }\n        if(!f && v % 2) {\n            ans += 2;\n        }\n        if((n & 1) && (m & 1)) {\n            ans += grid[n / 2][m / 2];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698742",
    "subm_id": "1343190322"
}