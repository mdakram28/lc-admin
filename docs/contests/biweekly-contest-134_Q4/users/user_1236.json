{
    "username": "AfricanMan",
    "submission": "#define ll long long\n#define pb push_back\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& v, int k) {\n        int p=30;\n        int n=v.size();\n        int dp[n+1][p+1];\n        for(int j=0;j<=p;j++){\n            dp[0][j]=0;\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=0;j<=p;j++){\n                if((1<<j)&v[i-1]){\n                    dp[i][j]=dp[i-1][j];\n                }\n                else{\n                    dp[i][j]=i;\n                }\n            }\n        }\n\n\n\n\n        ll ans=0;\n        for(int i=1;i<=n;i++)\n        {\n\n\n            ll ln=0;\n            int t=1;\n            for(int j=0;j<=p;j++){\n                if((1<<j)&k){\n                    if(!( (1<<j)&v[i-1] )){t=0;break;}\n                    ln=max(ln,(ll)dp[i][j]+1);\n                }\n            }\n            ln=i-ln+1;\n            ln=min(ln,(ll)i);\n            if(!t){\n                continue;\n            }\n\n\n\n\n\n            // now check the non-caring 1s range and find the min-of them():\n            ll zr=ln;\n            for(int j=0;j<=p;j++){\n                if(!((1<<j)&k)){  //non-caring:\n                    if(!( (1<<j)&v[i-1] )){continue;}\n\n                        ll pos=dp[i][j];\n                        pos++;\n                        ll len=(i-pos+1);\n                        if(len>ln){t=0;break;}\n                        zr=min(zr,ln-len);\n\n                }\n            }\n            if(t){\n                ans+=zr;\n            }\n\n        }\n        return ans;\n\n\n    }\n};",
    "submit_ts": "1720280389",
    "subm_id": "1311787548"
}