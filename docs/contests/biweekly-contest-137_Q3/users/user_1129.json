{
    "username": "Dev Sharma",
    "submission": "class Solution {\npublic:\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n\n        int n = board.size(), m = board[0].size();\n\n        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> pq;\n\n\n        for(int i=0; i<n; i++){\n            for(int j=0; j<m; j++){\n                if(pq.size()<=3*(n+m)) pq.push({board[i][j], {i, j}});\n                else if(board[i][j]>pq.top().first){\n                    pq.pop();\n                    pq.push({board[i][j], {i, j}});\n                }\n            }\n        }\n\n        vector<vector<long long>>vec;\n        while(!pq.empty()){\n            vec.push_back({pq.top().first, pq.top().second.first, pq.top().second.second});\n            pq.pop();\n        }\n\n        int totSize = vec.size();\n\n        long long ans = LLONG_MIN;\n\n        for(int i=0; i<totSize; i++){\n            for(int j=i+1; j<totSize; j++){\n                if(vec[i][1]==vec[j][1] || vec[i][2]==vec[j][2]) continue;\n                for(int k=j+1; k<totSize; k++){\n                    if(vec[i][1]==vec[k][1] || vec[i][2]==vec[k][2]) continue;\n                    if(vec[j][1]==vec[k][1] || vec[j][2]==vec[k][2]) continue;\n                    ans = max(ans, vec[i][0] + vec[j][0] + vec[k][0]);\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909251",
    "subm_id": "1359185385"
}