{
    "username": "kartikpapney",
    "submission": "class Solution {\n    HashMap<String, Long> map = new HashMap<>();\n    public long find(long curr, long reach, long jump, long prev) {\n        String str = curr + \" \" + jump + \" \" + prev;\n        if(curr < 0 || curr > reach+1) return 0;\n        if(map.containsKey(str)) return map.get(str);\n        long ans = 0;\n        if(curr == reach) ans++;\n        // System.out.println(ans);      \n        if(prev != 0) {\n            ans += find(curr-1, reach, jump, 0);\n        }\n        ans += find(curr + (1<<jump), reach, jump+1, 1);\n        map.put(str, ans);\n        return ans;\n    } \n    public int waysToReachStair(int k) {\n        return (int)find(1l, k*1l, 0l, -1*1l);\n    }\n}",
    "submit_ts": 1716087793.0
}