{
    "username": "22501a4437",
    "submission": "import heapq\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: list[int], verticalCut: list[int]) -> int:\n        # Convert cuts to negative for max-heap\n        max_heap = [(-cost, 'h') for cost in horizontalCut] + [(-cost, 'v') for cost in verticalCut]\n        heapq.heapify(max_heap)\n\n        total_cost = 0\n        horizontal_pieces = 1\n        vertical_pieces = 1\n\n        while max_heap:\n            cost, cut_type = heapq.heappop(max_heap)\n            cost = -cost  # Convert back to positive cost\n\n            if cut_type == 'h':\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n            else:\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n\n        return total_cost\n",
    "submit_ts": "1720925496",
    "subm_id": "1320256666"
}