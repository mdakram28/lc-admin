{
    "username": "yatoz",
    "submission": "func countKConstraintSubstrings(s string, k int, queries [][]int) []int64 {\n    n := len(s)\n    f := make([]int, n)\n    zero, one, l := 0, 0, 0\n    for i := range s {\n        if s[i] == '0' {\n            zero++\n        } else {\n            one++\n        }\n        for zero > k && one > k {\n            if s[l] == '0' {\n                zero--\n            } else {\n                one--\n            }\n            l++\n        }\n        f[i] = l\n    }\n    prefix := make([]int, n)\n    prefix[0] = f[0]\n    for i := 1; i < n; i++ {\n        prefix[i] = prefix[i - 1] + f[i]\n    }\n    res := make([]int64, len(queries))\n    for i, q := range queries {\n        v := (q[1] - q[0] + 1) * (q[1] + q[0] + 2) / 2\n        // f\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e(\u4e0d\u51cf)\u7684\u6570\u7ec4\n        idx := upperBound(f, q[0])\n        v -= q[0] * (min(idx, q[1] + 1) - q[0])\n        if idx <= q[1] {\n            v -= prefix[q[1]] - prefix[idx - 1]\n        }\n        res[i] = int64(v)\n    }\n    return res\n}\n\nfunc upperBound(f []int, v int) int {\n    l, r, m := 0, len(f) - 1, 0\n    for l <= r {\n        m = (l + r) / 2\n        if f[m] <= v {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "submit_ts": "1723953031",
    "subm_id": "556415084"
}