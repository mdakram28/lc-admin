{
    "username": "Chinedu",
    "submission": "class Solution {\n    \n    static int [] start = new int [10];\n    \n    int [] mod;\n        \n    static {\n        \n        for (int i = 1; i < 10; i++) {\n            if (i == 5)\n                start[i] = 5;\n            else if (i % 2 == 1)\n                start[i] = 9;\n            else\n                start[i] = 8;\n        }\n    }\n    \n    public String largestPalindrome(int n, int k) {\n        \n        int [] arr = new int [n];\n        \n        mod = new int [n];\n        int val = 1;\n        \n        for (int i = n - 1; i >= 0; --i) {\n            mod[i] = val;\n            val *= 10;\n            val %= k;\n        }\n        \n        solve(arr, k);\n        \n        StringBuilder sb = new StringBuilder();\n        \n        for (int num : arr)\n            sb.append(num);\n        \n        return sb.toString();\n    }\n    \n    private void solve(int [] arr, int k) {\n        if (k == 9 || k == 1 || k == 3) {\n            Arrays.fill(arr, 9);\n            return;\n        } else if (k == 5) {\n            Arrays.fill(arr, 9);\n            arr[0] = 5;\n            arr[arr.length - 1] = 5;\n            return;\n        } else if (k == 2) {\n            Arrays.fill(arr, 9);\n            arr[0] = 8;\n            arr[arr.length - 1] = 8;\n            return;\n        } else if (k == 4) {\n            Arrays.fill(arr, 9);\n            for (int i = 0; i < 2 && i < arr.length; ++i) {\n                arr[i] = 8;\n                arr[arr.length - 1 - i] = 8;\n            }\n            return;\n        } else if (k == 8) {\n            Arrays.fill(arr, 9);\n            for (int i = 0; i < 3 && i < arr.length; ++i) {\n                arr[i] = 8;\n                arr[arr.length - 1 - i] = 8;\n            }\n            return;\n        }\n        \n        solve(arr, 0, arr.length - 1, k, 0);\n    }\n    \n    \n    private void solve(int [] arr, int l, int r, int k, int currentMod) {\n        \n        int val;\n        \n        if (r - l > 1) {\n            val = 9;\n            \n            if (k == 6 && l == 0)\n                val = 8;\n            \n            currentMod += val * mod[l];\n            currentMod += val * mod[r];\n            arr[l] = val;\n            arr[r] = val;\n            \n            currentMod %= k;\n            \n            solve(arr, l + 1, r - 1, k, currentMod);\n        }else if (l == r) {\n            int start = l == 0 ? 1 : 0;\n            \n            int nextMod;\n            for (int i = start; i <= 9; ++i) {\n                nextMod = currentMod;\n                nextMod += i * mod[l];\n                nextMod %= k;\n                \n                if (nextMod == 0) {\n                    arr[l] = i;\n                }\n            }\n        } else {\n            int start = l == 0 ? 1 : 0;\n            \n            int nextMod;\n            for (int i = start; i <= 9; ++i) {\n                nextMod = currentMod;\n                nextMod += i * mod[l];\n                nextMod += i * mod[r];\n                nextMod %= k;\n                \n                if (nextMod == 0) {\n                    arr[l] = i;\n                    arr[r] = i;\n                }\n            }\n        }\n    }\n}",
    "submit_ts": "1723950736",
    "subm_id": "1359753695"
}