{
    "username": "nemokwy",
    "submission": "class NumArray:\n    def __init__(self, nums: List[int]):\n        self.n = len(nums)\n        self.data = nums.copy()\n        self.a = [0] * self.n * 4\n        for i in range(self.n):\n            self.update(i,nums[i])\n\n    def _update(self, o,l,r,i,v):\n        if l == r:\n            self.a[o] = v\n            return\n        m = (l + r) // 2\n        if i <= m:\n            self._update(o*2,l,m,i,v)\n        else:\n            self._update(o*2+1,m+1,r,i,v)\n        # self.a[o] = max(self.a[o*2], self.a[o*2+1])\n        self.a[o] = self.a[o*2] & self.a[o*2+1]\n\n    def _query(self, o, l, r, L, R):\n        if L <= l and r <= R:\n            return self.a[o]\n        m = (l + r) // 2\n        res = (1 << 32) - 1\n        if L <= m:\n            res &= self._query(o*2,l,m,L,R)\n        if R > m:\n            res &= self._query(o*2+1,m+1,r,L,R)\n        return res\n    \n    def update(self, index: int, val: int) -> None:\n        self._update(1,1,self.n,index+1,val)\n\n    def chk(self, left: int, right: int) -> int:\n        return self._query(1,1,self.n, left+1,right+1)\n    \nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        ret = 0\n        d = NumArray(nums)\n        l,r = 0,0\n        for i,c in enumerate(nums):\n            if c < k:\n                l,r = i+1,i+1\n                continue\n            while l <= i and d.chk(l,i) < k:\n                l += 1\n            r = max(r, l)\n            while r <= i and d.chk(r,i) == k:\n                r += 1\n            ret += r - l\n#             l, r = 0, i\n#             while l < r:\n#                 m = (l + r) // 2\n#                 if (d.chk(m, i) >= k):\n#                     r = m\n#                 else:\n#                     l = m + 1\n#             # print(i,c,1,l,d.chk(l, i))\n#             if l <= i and d.chk(l, i) == k:\n#                 p = l\n#             else:\n#                 continue\n#             l, r = 0, i\n#             while l < r:\n#                 m = (l + r + 1) // 2\n#                 if (d.chk(m, i) <= k):\n#                     l = m\n#                 else:\n#                     r = m - 1\n#             # print(i,c,2,l,d.chk(l, i))\n#             if l <= i and d.chk(l, i) == k:\n#                 q = l\n#             else:\n#                 continue\n            \n#             ret += q-p+1\n        # print(ret)\n        return ret",
    "submit_ts": "1720280096",
    "subm_id": "1311776738"
}