{
    "username": "nitesh_kumar26",
    "submission": "class Solution {\npublic:\n    static bool sortBycomp(pair<int, int>& a, pair<int, int>& b) {\n        return a.second > b.second;\n    }\n\n    int countneed(vector<int>& nums, int diff, int k) {\n        int n = nums.size();\n        int count = 0;\n\n        for (int i = 0; i < n/2; i++) {\n            int var = abs(nums[i]- nums[n - i - 1]);\n            if (var == diff)\n                continue;\n            else if ((nums[i] + diff <= k) || (nums[i] - diff >= 0) ||\n                     (nums[n - i - 1] + diff <= k) ||\n                     (nums[n - i - 1] - diff >= 0))\n                count++;\n            else\n                count += 2;\n        }\n\n        return count;\n    }\n\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n\n        unordered_map<int, int> mpp;\n        for (int i = 0; i < n / 2; i++) {\n            int var = abs(nums[i] - nums[n - i - 1]);\n            mpp[var]++;\n        }\n\n        vector<pair<int, int>> vec;\n        int maxi = 0 , maxival =0;\n        for (auto it = mpp.begin(); it != mpp.end(); it++) {\n            vec.push_back({it->first, it->second});\n            \n            if(maxi > it->second)\n              {\n                maxi = it->second;\n                maxival = it->first;\n              }\n\n        }\n\n         sort(vec.begin(), vec.end(), sortBycomp);\n        // int ans = countneed(nums,maxival,k);\n\n        int ans = INT_MAX;\n        int m = vec.size();\n        int x = min(m , 10);\n        for (int i = 0; i < x; i++) {\n            int var = countneed(nums, vec[i].first, k);\n            ans = min(ans, var);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721489546",
    "subm_id": "1327456577"
}