{
    "username": "shengda",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {        \n        if (n < 5) {\n            int mx = pow(10, n) - 1;\n            while (mx > 0) {\n                if (mx % k != 0) {mx--; continue;}\n                string s = to_string(mx);\n                bool valid = s.size() >= n;\n                for (int i = 0, j = s.size()-1; i < j; i++, j--) if (s[i] != s[j]) {valid = false; break;}\n                if (valid) return s;\n                mx--;\n            }\n        }\n\n        string ans(n, '9');\n        int mod = 0;\n        for (int i = n-1, q = 1; i >= 0; i--, q = q * 10 % k) {\n            mod = (mod + (ans[i]-'0') * q %k) % k;\n        }\n        if (mod == 0) return ans;\n        \n        \n        if (k == 1 || k == 3 || k == 9) return ans;\n        if (k == 5) {\n            ans[0] = ans[n-1] = '5'; return ans;\n        }\n        if (k == 2) {\n            ans[0] = ans[n-1] = '8'; return ans;\n        }\n        if (k == 4) {\n            ans[0] = ans[1] = ans[n-1] = ans[n-1-1] = '8';\n            return ans;\n        }\n        if (k == 8) {\n            ans[0] = ans[1] = ans[n-1] = ans[n-1-1] = '8';\n            ans[2] = ans[n-1-2] = '8';\n            return ans;\n        }\n        if (k == 6) {\n            ans[0] = ans[n-1] = '8';            \n        }\n\n        int md = (n-1) / 2, i = md;\n        while (true) {\n            if (ans[i] > '0') ans[i]--;\n            else {\n                ans[i-1]--;\n                for (int k = i; k <= md; k++) ans[k] = '9';\n                i = md;\n            }\n            for (int st = 0, ed = n-1; st < ed; st++, ed--) ans[ed] = ans[st];\n            int mod = 0;\n            for (int i = n-1, q = 1; i >= 0; i--, q = q * 10 % k) {\n                mod = (mod + (ans[i]-'0') * q %k) % k;\n            }\n            if (mod == 0) return ans;\n        }\n        return \"\";        \n    }\n};",
    "submit_ts": "1723952573",
    "subm_id": "556412366"
}