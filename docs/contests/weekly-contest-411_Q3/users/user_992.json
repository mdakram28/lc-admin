{
    "username": "Hello",
    "submission": "class Solution {\n        public String largestPalindrome(int n, int k) {\n        // 1 3 9    999\n        // 2        8998\n        // 4 889988\n        // 5 5995\n        // 6 89xxx98\n        // 7\n        // 8 888999888\n        //\n        if (k == 1 || k == 3 || k == 9) {\n            return \"9\".repeat(n);\n        } else if (k == 2) {\n            if (n <= 2) {\n                return \"8\".repeat(n);\n            } else {\n                return \"8\" + \"9\".repeat(n - 2) + \"8\";\n            }\n        } else if (k == 4) {\n            if (n <= 4) {\n                return \"8\".repeat(n);\n            } else {\n                return \"88\" + \"9\".repeat(n - 4) + \"88\";\n            }\n        } else if (k == 5) {\n            if (n <= 2) {\n                return \"5\".repeat(n);\n            } else {\n                return \"5\" + \"9\".repeat(n - 2) + \"5\";\n            }\n        } else if (k == 8) {\n            if (n <= 6) {\n                return \"8\".repeat(n);\n            } else {\n                return \"888\" + \"9\".repeat(n - 6) + \"888\";\n            }\n        } else if (k == 6) {\n            if (n <= 2) {\n                return \"6\".repeat(n);\n            } else if (n % 2 == 1) {\n                return \"8\" + \"9\".repeat((n - 2) / 2) + \"8\" + \"9\".repeat((n - 2) / 2) + \"8\";\n            } else {\n                return \"8\" + \"9\".repeat((n - 4) / 2) + \"77\" + \"9\".repeat((n - 4) / 2) + \"8\";\n            }\n        } else {\n            if (n <= 2) {\n                return \"7\".repeat(n);\n            }\n            for (int i = 9; i >= 0; i--) {\n                char ch = (char) ('0' + i);\n                StringBuilder sb = new StringBuilder();\n\n                if (n % 2 == 0) {\n                    sb.append(\"9\".repeat((n - 2) / 2));\n                    sb.append(ch);\n                    sb.append(ch);\n                    sb.append(\"9\".repeat((n - 2) / 2));\n                } else {\n                    sb.append(\"9\".repeat((n - 1) / 2));\n                    sb.append(ch);\n                    sb.append(\"9\".repeat((n - 1) / 2));\n                }\n                if (isGood(sb)) {\n                    return sb.toString();\n                }\n            }\n            return \"\";\n        }\n    }\n\n    public boolean isGood(StringBuilder sb) {\n        int pre = 0;\n        for (int i = 0; i < sb.length(); i++) {\n            int x = sb.charAt(i) - '0';\n            int y = pre * 10 + x;\n            pre = y % 7;\n        }\n        return pre == 0;\n    }\n}",
    "submit_ts": "1723952561",
    "subm_id": "556412304"
}