{
    "username": "khoagoodkid",
    "submission": "class Solution {\npublic:\n    int mod = 1e9 + 7;\n\n    int countOfPairs(vector<int>& nums) {\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(1001, 0));\n\n        // Initialize dp for the first element\n        for (int j = 0; j <= nums[0]; ++j) {\n            dp[0][j] = 1;\n        }\n\n        // Fill the DP table\n        for (int i = 1; i < n; ++i) {\n            vector<int> prefix(1001, 0);\n            prefix[0] = dp[i-1][0];\n\n            // Compute prefix sums for easier transitions\n            for (int j = 1; j <= 1000; ++j) {\n                prefix[j] = (prefix[j-1] + dp[i-1][j]) % mod;\n            }\n\n            for (int j = 0; j <= nums[i]; ++j) {\n                int arr2_i = nums[i] - j;\n                if (arr2_i >= 0 && arr2_i <= 1000) {\n                    int maxValidK = min(j, nums[i-1] - arr2_i);\n                    if (maxValidK >= 0) {\n                        dp[i][j] = prefix[maxValidK];\n                    }\n                }\n            }\n        }\n\n        // Sum up all valid sequences for the last element\n        int result = 0;\n        for (int j = 0; j <= nums[n-1]; ++j) {\n            result = (result + dp[n-1][j]) % mod;\n        }\n\n        return result;\n    }\n};",
    "submit_ts": "1723348359",
    "subm_id": "1351616673"
}