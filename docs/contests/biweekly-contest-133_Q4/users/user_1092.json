{
    "username": "sanket33245",
    "submission": "\n#define ll long long\n\nclass Solution {\nprivate:\n    ll MOD = 1e9 + 7;\n    ll maximum = 1000;\n\n    void solve1(const vector<vector<int>>& requirements, unordered_map<int, int>& mp) {\n        for (auto& it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n    }\n\n    void updateDP(vector<vector<ll>>& dp, int i) {\n        for (int j = 0; j <= maximum; j++) {\n            for (int k = 0; k < i; k++) {\n                int temp = j - k;\n                if (temp >= 0) {\n                    dp[i][j] = (dp[i][j] + dp[i - 1][temp]) % MOD;\n                }\n            }\n        }\n    }\n\n    void solve2(vector<vector<ll>>& dp, const unordered_map<int, int>& mp, int i) {\n        if (mp.find(i) != mp.end()) {\n            int val = mp.at(i);\n            for (int j = 0; j <= maximum; ++j) {\n                if (j != val) {\n                    dp[i][j] = 0;\n                }\n            }\n        }\n    }\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        solve1(requirements, mp);\n\n        vector<vector<ll>> dp(n + 1, vector<ll>(maximum + 1, 0));\n        dp[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            updateDP(dp, i);\n            solve2(dp, mp, i);\n        }\n\n        ll ans = 0;\n        for (auto it : dp[n]) {\n            ans = (ans + it) % MOD;\n        }\n\n        return (ans);\n    }\n};\n",
    "submit_ts": 1719071385.0
}