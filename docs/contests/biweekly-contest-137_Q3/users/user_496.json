{
    "username": "TheodoreGossett",
    "submission": "public class Solution {\n    public long MaximumValueSum(int[][] board) {\n        long res = -10000000000;\n        \n        int[,] maxs = new int[board.Length,2];\n        for(int i=0;i<board.Length;i++){\n            PriorityQueue<int,int> pq = new();\n            for(int j=0;j<board[0].Length;j++){\n                pq.Enqueue(board[i][j],board[i][j]);\n                if(pq.Count>2) pq.Dequeue();\n            }\n            while(pq.Count>2) pq.Dequeue();\n            maxs[i,1]=pq.Dequeue();\n            maxs[i,0]=pq.Dequeue();\n        }\n        \n        for(int i=0;i<board.Length;i++){\n            PriorityQueue<int,int> pq = new();\n            for(int j=0;j<board[0].Length;j++){\n                pq.Enqueue(j,board[i][j]);\n                if(pq.Count>3) pq.Dequeue();\n            }\n            while(pq.Count>3) pq.Dequeue();\n            for(int j=0;j<3;j++){\n                int next = pq.Dequeue();\n                long max1=-2000000000;\n                int row = 0;\n\n                for(int k=i+1;k<board.Length;k++){\n                    long rmax;\n                    if(maxs[k,0]==board[k][next]) rmax=maxs[k,1];\n                    else rmax= maxs[k,0];\n                    if(rmax>max1){\n                        max1=rmax;\n                        row=k;\n                    }\n                }\n                int col = 0;\n                for(int k=0;k<board[0].Length;k++){\n                    if(k==next) continue;\n                    if(board[row][k]==max1){\n                        col=k;\n                        break;\n                    }\n                }\n                long max = -2000000000;\n                for(int k=i+1;k<board.Length;k++){\n                    if(k==row) continue;\n                    for(int p=0;p<board[0].Length;p++){\n                        if(p==next ||p==col) continue;\n                        max=Math.Max(max,board[k][p]);\n                    }\n                }\n                res= Math.Max(res,max+max1+board[i][next]);\n                long colmax = -2000000000;\n                long rowmax= -2000000000;\n                for(int k=0;k<board[0].Length;k++){\n                    if(k==next || k==col) continue;\n                    rowmax=Math.Max(rowmax, board[row][k]);\n                }\n                for(int k=i+1;k<board.Length;k++){\n                    if(k==row) continue;\n                    colmax=Math.Max(colmax, board[k][col]);\n                }\n                res=Math.Max(res, colmax+rowmax+board[i][next]);\n                \n            }\n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1723910011",
    "subm_id": "1359213984"
}