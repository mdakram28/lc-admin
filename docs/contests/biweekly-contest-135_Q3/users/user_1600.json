{
    "username": "ankitdubetsec",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& numbers, int limit) {\n        map<int, vector<int>> differencesMap;\n        vector<int> maxValuesList;\n\n        int totalSize = numbers.size();\n        int halfSize = totalSize / 2;\n\n        for (int i = 0; i < halfSize; ++i) {\n            int first = numbers[i];\n            int second = numbers[totalSize - i - 1];\n            int difference = abs(first - second);\n            int maxVal = max({first, second, limit - first, limit - second});\n\n            differencesMap[difference].push_back(maxVal);\n            maxValuesList.push_back(maxVal);\n        }\n\n        int result = totalSize;\n        sort(maxValuesList.begin(), maxValuesList.end());\n\n        for (const auto& [difference, values] : differencesMap) {\n            int transformCount = lower_bound(maxValuesList.begin(), maxValuesList.end(), difference) - maxValuesList.begin();\n            transformCount = transformCount * 2 + (halfSize - transformCount);\n\n            for (const int& maxVal : values) {\n                if (maxVal < difference) {\n                    transformCount -= 2;\n                } else {\n                    transformCount -= 1;\n                }\n            }\n\n            result = min(result, transformCount);\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1721489666",
    "subm_id": "1327460126"
}