{
    "username": "ernestlu",
    "submission": "class Solution {\n    using ll = long long;\n    #define all(x) x.begin(),x.end()\npublic:\n    struct DSU {\n\tll n;\n\tvector<ll> par, sz;\n\n\tDSU(ll n) : n(n), par(n), sz(n, 1) {\n\t\tiota(all(par), 0);\n\t}\n\n\tll fnd(ll g) {\n\t\tif (g == par[g]) return g;\n\t\treturn par[g] = fnd(par[g]);\n\t}\n\n\tbool onion(ll a, ll b) {\n\t\ta = fnd(a), b = fnd(b);\n\t\tif (a == b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (sz[a] > sz[b]) swap(a, b);\n\t\tsz[b] += sz[a];\n\t\tpar[a] = b;\n\t\treturn true;\n\t}\n};\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        DSU dsu(n);\n\n        vector<int> nxt(n);\n        for (int i = 0; i < n; i++)\n            nxt[i] = i + 1;\n        nxt[n - 1] = n -1;\n        int ans = n - 1;\n    \n        vector<int> ret;\n        for (auto& r : queries) {\n            int x = r[0], y = r[1];\n            x = dsu.fnd(x), y = dsu.fnd(y);\n            assert(dsu.fnd(nxt[x]) != dsu.fnd(x));\n            while (dsu.fnd(x) != dsu.fnd(y) && dsu.fnd(nxt[x]) != dsu.fnd(y)) {\n      int onxt = dsu.fnd(nxt[dsu.fnd(nxt[x])]);\n                dsu.onion(x, nxt[x]);\n                ans--;\n                int c = dsu.fnd(x);\n                x = c;\n                nxt[c] = onxt;\n            }\n            ret.push_back(ans);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722740903",
    "subm_id": "1343731660"
}