{
    "username": "0Kaju12",
    "submission": "#include <vector> \n#include <algorithm> \n \nusing namespace std; \n \nclass Solution { \npublic: \n    int minFlips(vector<vector<int>>& grid) { \n        int n = grid.size(), m = grid[0].size(); \n        int ans = 0; \n         \n        if (n % 2 == 1 && m % 2 == 1) { \n            if (grid[n / 2][m / 2] == 1) { \n                ans += 1; \n            } \n        } \n \n        vector<int> v(3, 0); \n        if (n % 2 == 1) { \n            int a = 0, b = m - 1; \n            while (a < b) { \n                int sum = grid[n / 2][a] + grid[n / 2][b]; \n                v[sum] += 1; \n                a += 1; \n                b -= 1; \n            } \n        } \n \n        if (m % 2 == 1) { \n            int a = 0, b = n - 1; \n            while (a < b) { \n                int sum = grid[a][m / 2] + grid[b][m / 2]; \n                v[sum] += 1; \n                a += 1; \n                b -= 1; \n            } \n        } \n \n        if (v[2] % 2 == 1) { \n            if (v[1] > 0) { \n                ans += v[1]; \n            } else { \n                ans += 2; \n            } \n        } else { \n            ans += v[1]; \n        } \n \n        for (int i = 0; i < n / 2; ++i) { \n            for (int j = 0; j < m / 2; ++j) { \n                int a = grid[i][j]; \n                int b = grid[n - 1 - i][j]; \n                int c = grid[i][m - 1 - j]; \n                int d = grid[n - 1 - i][m - 1 - j]; \n \n                int sum = a + b + c + d; \n \n                if (sum != 0 && sum != 4) { \n                    ans += min(sum, 4 - sum); \n                } \n            } \n        } \n \n        return ans; \n    } \n};\n",
    "submit_ts": "1722700129",
    "subm_id": "1343232524"
}