{
    "username": "Dylan Smith",
    "submission": "typedef long long ll;\n\n#define pb push_back\n#define sz(x) (int)x.size()\n#define all(x) begin(x),end(x)\n#define lb(x,y) lower_bound(all(x),y)-begin(x)\nclass Solution {\npublic:\n    bool check(string &s, int k) {\n        int cur = 1, m = 0;\n        for (int i = 0; i < sz(s); i++) {\n            m += (s[sz(s) - 1 - i] - '0') * cur;\n            m %= k;\n            cur *= 10;\n            cur %= k;\n        }\n        return !m;\n    }\n    string find(string s, int k) {\n        int m = (sz(s) - 1) / 2;\n        while (!check(s, k)) {\n            for (int i = m; i >= 0; i--) {\n                if (s[i] > '0') {\n                    s[i]--;\n                    if (sz(s) - 1 - i > i) s[sz(s) - 1 - i]--;\n                    for (int j = i + 1; j <= m; j++) {\n                        s[j] = s[sz(s) - 1 - j] = '9';\n                    }\n                    break;\n                }\n            }\n        }\n        return s;\n    }\n    string largestPalindrome(int n, int k) {\n        string s = \"\";\n        for (int i = 0; i < n; i++) s += '9';\n        if (k == 1 || k == 3 || k == 9) {\n            return s;\n        }\n        if (k == 2) {\n            s[0] = s[n - 1] = '8';\n            return s;\n        }\n        if (k == 4) {\n            s[0] = s[n - 1] = '8';\n            if (n >= 2) s[1] = s[n - 2] = '8';\n            return s;\n        }\n        if (k == 8) {\n            s[0] = s[n - 1] = '8';\n            if (n >= 2) s[1] = s[n - 2] = '8';\n            if (n >= 3) s[2] = s[n - 3] = '8';\n            return s;\n        }\n        if (k == 5) {\n            s[0] = s[n - 1] = '5';\n            return s;\n        }\n        if (k == 6) {\n            s[0] = s[n - 1] = '8';\n            return find(s, k);\n        }\n        // 7\n        return find(s, k);\n    }\n};",
    "submit_ts": "1723950077",
    "subm_id": "1359736547"
}