{
    "username": "vhlpZARocz",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        diff = []\n        for i in range(n):\n            diff.append(nums[i] - target[i])\n        # dp = [float('inf')] * n\n        # dp[0] = abs(diff[0])\n        # print(diff)\n        def helper(array):\n            # print(array)\n            c = Counter(array)\n            kk = sorted(list(c.keys()), reverse = True)\n            cnt = 0\n            for l in range(len(kk)-1):\n                i = 0\n                while i < len(array):\n                    if array[i] == kk[l]:\n                        cnt += kk[l] - kk[l+1] \n                        j = i \n                        while j < len(array) and array[j] == kk[l]:\n                            array[j] = kk[l+1]\n                            j += 1\n                        i = j\n                    else:\n                        i += 1\n            return cnt + kk[-1]\n                               \n        res = 0\n        i = 0\n        while i < n:\n            if diff[i] == 0:\n                res += 0\n                i += 1\n            else:\n                if diff[i] > 0:\n                    j = i\n                    while j < n and diff[j] > 0:\n                        j += 1\n                    res += helper(diff[i:j])\n                else:\n                    j = i\n                    while j < n and diff[j] < 0:\n                        j += 1\n                    res += helper([-item for item in diff[i:j]])\n                # print(res, i, j, diff[i])\n                i = j\n        return res\n    \n    \n        # if diff[i] == 0:\n        #         dp[i] = dp[i-1]\n        #         prev = 0\n        #     elif diff[i] * diff[i-1] > 0:\n        #         if diff",
    "submit_ts": "1721532679",
    "subm_id": "548393735"
}