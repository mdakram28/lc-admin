{
    "username": "ghj123h",
    "submission": "public class Solution {\n    public int[] TimeTaken(int[][] edges) {\n        int n = edges.Length + 1;\n        List<int>[] G = new List<int>[n];\n        for (int i = 0; i < n; ++i) G[i] = new();\n        foreach (var e in edges) {\n            G[e[0]].Add(e[1]);\n            G[e[1]].Add(e[0]);\n        }\n        int[] time = new int[n];\n        int[] ans = new int[n];\n        dfs(0, -1);\n        dfs2(0, -1, 0);\n        return ans;\n\n        int dfs(int u, int fa) {\n            foreach (var v in G[u]) if (v != fa) {\n                time[u] = Math.Max(time[u], 2 - v % 2 + dfs(v, u));\n            }\n            return time[u];\n        }\n\n        void dfs2(int u, int fa, int up) {\n            ans[u] = up;\n            int max = 0, max2 = 0, m = 0;\n            foreach (var v in G[u]) if (v != fa) {\n                int t = 2 - v % 2 + time[v];\n                ans[u] = Math.Max(ans[u], t);\n                if (t > max) {\n                    max2 = max; max = t; m = v;\n                } else if (t > max2) {\n                    max2 = t;\n                }\n            }\n            foreach (var v in G[u]) if (v != fa) {\n                if (v != m) dfs2(v, u, Math.Max(up, max) + 2 - u % 2);\n                else dfs2(v, u, Math.Max(up, max2) + 2 - u % 2);\n            }\n        }\n    }\n}",
    "submit_ts": "1722699834",
    "subm_id": "552277340"
}