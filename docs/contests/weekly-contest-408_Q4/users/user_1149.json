{
    "username": "Dhruv_Khanna123",
    "submission": "class Solution {\npublic:\n    class DisjointSet {\npublic:\n        vector<int> parent, size;\n    DisjointSet(int n) {\n        parent.resize(n + 1);\n        size.resize(n + 1);\n        for (int i = 0; i <= n; i++) {\n            parent[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    int findPar(int node) {\n        if (node == parent[node])\n            return node;\n        return parent[node] = findPar(parent[node]);\n    }\n    void unionBySize(int u, int v) {\n        int ulp_u = findPar(u);\n        int ulp_v = findPar(v);\n        if (ulp_u == ulp_v) return;\n        if (size[ulp_u] < size[ulp_v]) {\n            parent[ulp_u] = ulp_v;\n            size[ulp_v] += size[ulp_u];\n        }\n        else {\n            parent[ulp_v] = ulp_u;\n            size[ulp_u] += size[ulp_v];\n        }\n    }\n};\n    bool canReachCorner(int X, int Y, vector<vector<int>>& c) {\n        int n=c.size();\n        DisjointSet ds(n);\n        for (int i=0;i<n;i++){\n            int x1=c[i][0],y1=c[i][1],r1=c[i][2];\n            bool f=false;\n            for (int j=i+1;j<n;j++){\n                int x2=c[j][0],y2=c[j][1],r2=c[j][2];\n                long long d=(1LL*(x1-x2)*1LL*(x1-x2))+(1LL*(y1-y2)*1LL*(y1-y2));\n                if (d<=1LL*(r1+r2)*1LL*(r1+r2)) ds.unionBySize(i,j);\n            }\n        }\n        unordered_map<int,set<int>> mp;\n        for (int i=0;i<n;i++){\n            if (ds.size[ds.findPar(i)]==1) mp[i].insert(i);\n        }\n        \n        for (int i=0;i<n;i++){\n            for (int j=i+1;j<n;j++){\n                int u=ds.findPar(i),v=ds.findPar(j);\n                if (u==v){\n                    mp[u].insert(i);\n                    mp[u].insert(j);\n                }\n            }\n        }\n        // cout << ds.size[ds.findPar(0)] << endl;\n        // cout << ds.size[ds.findPar(3)] << endl;\n        // cout << ds.size[ds.findPar(2)] << endl;\n        \n        for (auto it:mp){\n            bool x=false,y=false;\n            for (auto t:it.second){\n                if (c[t][0]<=c[t][2]) x=true;\n                if (c[t][1]<=c[t][2]) y=true;\n            }\n            if (x and y) return false;\n        }\n        \n        for (auto it:mp){\n            bool x=false,y=false;\n            for (auto t:it.second){\n                if (c[t][0]+c[t][2]>=X) x=true;\n                if (c[t][1]+c[t][2]>=Y) y=true;\n            }\n            if (x and y) return false;\n        }\n        \n        for (auto it:mp){\n            bool x=false,y=false;\n            for (auto t:it.second){\n                if (c[t][0]<=c[t][2]) x=true;\n                if (c[t][0]+c[t][2]>=X) y=true;\n            }\n            if (x and y) return false;\n        }\n        \n        for (auto it:mp){\n            bool x=false,y=false;\n            for (auto t:it.second){\n                if (c[t][1]<=c[t][2]) x=true;\n                if (c[t][1]+c[t][2]>=Y) y=true;\n            }\n            if (x and y) return false;\n        }\n        \n        \n        return true;\n    }\n};",
    "submit_ts": "1722139054",
    "subm_id": "1335806605"
}