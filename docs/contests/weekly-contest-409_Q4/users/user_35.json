{
    "username": "coolli",
    "submission": "#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define mk make_pair\n#define pii pair<int, int>\n#define pll pair<ll, ll>\n#define V vector\n#define pb push_back\n#define SZ(a) ((int)a.size())\n#define all(a) a.begin(), a.end()\n#define TP template <class o>\n#define TPP template <class t1, class t2>\n#define rep(i, a, b) for (int i = a, i##ed_ = b; i <= i##ed_; i++)\n#define REP(i, a, b) for (int i = b, i##st_ = a; i >= i##st_; i--)\n#define FOR(i, n) rep(i, 1, n)\n#define debug(x) cerr << #x << ' ' << '=' << ' ' << x << endl\nusing namespace std;\ntypedef double db;\ntypedef unsigned ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nTP bool cmax(o& x, o y) { return (x < y ? x = y, 1 : 0); }\nTP bool cmin(o& x, o y) { return (x > y ? x = y, 1 : 0); }\nTP void order(V<o> &a) { sort(all(a)); a.resize(unique(all(a)) - a.begin());}\nTP int get_id(V<o> &a, const o& val) {return lower_bound(all(a), val) - a.begin();}\nll power(ll a, ll b, ll mod) {ll c=1;for(;b;b/=2,a=a*a%mod)if(b&1)c=c*a%mod;return c;}\n\nconst int N = 1e5 + 10;\nint col[N], a[N];\n\ntemplate<class T>\nstruct BIT {\n    int n; V<T> c; \n    BIT(int n) {init(n);}\n    void init(int n) {this->n = n; c.assign(n + 1, T());}\n    void add(int x, T y) { for( ;x <= n;x += x & -x) c[x] = c[x] + y; }\n    T sum(int x) {T y = c[0]; for( ; x; x &= x - 1) y = y + c[x]; return y; }\n    T sum(int l, int r) {return sum(r) - sum(l - 1);}\n    int kth(T k) {\n        int p = 0;\n        #define bin(i) (1<<(i))\n        for(int i = __lg(n); i >= 0; i--) \n            if(p + bin(i) <= n && c[p + bin(i)] < k) \n                k -= c[p += bin(i)];\n            return ++p;\n    }\n};\n\nclass Solution {\npublic:\n    int n;\n    vector<int> numberOfAlternatingGroups(vector<int>& c, vector<vector<int>>& queries) {\n        V<int> ans;\n        n = SZ(c);\n        set<pii> s;\n        rep(i, 0, n - 1) {\n            col[i] = c[i];\n            a[i] = col[i] ^ (i & 1);\n        }\n        auto de = [&]() {\n            // for(auto [l, r]: s) cout << l << ' ' << r << endl;  \n        };\n        BIT<ll> A(n), B(n);\n        auto add = [&](int l, int r, int o) {\n            if(l > r) return;\n            int x = r - l + 1;\n            A.add(x, o * 1);\n            B.add(x, o * x);\n            if(o == 1) s.insert(mk(l, r));\n            else s.erase(mk(l, r));\n        };\n        auto upd = [&](int x, int c) {\n            if(col[x] != c) {\n                col[x] ^= 1;\n                a[x] ^= 1;\n                auto it = --s.lower_bound(mk(x + 1, 0));\n                int l = it->fi, r = it->se;\n                if(l < x && x < r) {\n                    add(l, r, -1);\n                    add(l, x - 1, 1);\n                    add(x, x, 1);\n                    add(x + 1, r, 1);\n                }\n                else if(l == r) {\n                    if(x) {\n                        auto jt = prev(it);\n                        l = jt->fi;\n                        add(jt->fi, jt->se, -1);\n                    }\n                    if(x < n - 1) {\n                        auto jt = next(it);\n                        r = jt->se;\n                        add(jt->fi, jt->se, -1);\n                    }\n                    add(x, x, -1);\n                    add(l, r, 1);\n                }\n                else if(l == x) {\n                    if(!x) {\n                        add(x, x, 1);\n                    }\n                    else {\n                        auto u = *(--it);\n                        add(u.fi, u.se, -1);\n                        add(u.fi, x, 1);\n                    }\n                    add(l, r, -1);\n                    add(x + 1, r, 1);\n                }\n                else { //r == x\n                    add(l, r - 1, 1);\n                    if(r == n - 1) {\n                        add(x, x, 1);\n                    }\n                    else {\n                        auto u = *(++it);\n                        add(u.fi, u.se, -1);\n                        add(u.fi = x, u.se, 1);\n                    }\n                    add(l, r, -1);\n                }\n            }\n        };\n        rep(i, 0, n - 1) {\n            int j = i;\n            while(j + 1 < n && a[i] == a[j + 1]) j++;\n            add(i, j, 1); i = j;\n        }\n        de();\n        auto val = [&](int sz, int l) {\n            return max(0, sz - l + 1);\n        };\n        for(auto a: queries) {\n            if(a[0] == 1) {\n                int l = a[1], v = 0;\n                v += B.sum(l, n) - A.sum(l, n) * (l - 1);\n                // cout << v << endl;\n                if(SZ(s) > 1 && col[0] != col[n - 1]) {\n                    auto x = s.begin()->se - s.begin()->fi + 1;\n                    auto y = s.rbegin()->se - s.rbegin()->fi + 1;\n                    // cout << x << ' ' << y << endl;\n                    v -= val(x, l) + val(y, l);\n                    v += val(x + y, l);\n                }\n                if(SZ(s) == 1 && n % 2 == 0) v = n;\n                ans.pb(v);\n            }\n            else {\n                upd(a[1], a[2]);\n            }\n            de();\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722742643",
    "subm_id": "552345969"
}