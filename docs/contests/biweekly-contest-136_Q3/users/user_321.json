{
    "username": "yzkkai",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        int ans = 0;\n        for (int i = 0; i < n / 2; ++i)\n            for (int j = 0; j < m / 2; ++j) {\n                int cnt[2] = {0};\n                for (int a : {i, n - i - 1})\n                    for (int b : {j, m - j - 1})\n                        ++cnt[grid[a][b]];\n                ans += min(cnt[0], cnt[1]);\n            }\n\n        int tmp = 0, cnt = 0;\n        if (n % 2 && m % 2)\n            ans += grid[n / 2][m / 2] == 1;\n\n        if (m % 2)\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][m / 2] != grid[n - i - 1][m / 2]) \n                    ++tmp;\n                else if (grid[i][m / 2] == 1)\n                    ++cnt;\n                }\n        if (n % 2)\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[n / 2][j] != grid[n / 2][m - j - 1])\n                    ++tmp;\n                else if (grid[n / 2][j] == 1)\n                    ++cnt;\n            }\n        \n        if (cnt % 2 && tmp == 0)\n            ans += 2;\n        ans += tmp;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722697145",
    "subm_id": "1343135834"
}