{
    "username": "SanaYayy",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        differences = [x - y for x, y in zip(nums, target)]\n        segments = []\n        curr = []\n        sign = 0\n        for x in differences:\n            if(x == 0):\n                if(curr):\n                    segments.append(curr)\n                    curr = []\n                sign = 0\n            elif(x > 0):\n                if(sign >= 0):\n                    curr.append(x)\n                else:\n                    segments.append(curr)\n                    curr = [x]\n                sign = 1\n            else:\n                if(sign <= 0):\n                    curr.append(-x)\n                else:\n                    segments.append(curr)\n                    curr = [-x]\n                sign = -1\n        if(curr):\n            segments.append(curr)\n        \n        operations = 0\n        while(segments):\n            segment = segments.pop()\n            if(len(segment) == 1):\n                operations += segment[0]\n                continue\n            op = min(segment)\n            operations += op\n            temp = []\n            for x in segment:\n                if(x != op):\n                    temp.append(x - op)\n                else:\n                    if(temp):\n                        segments.append(temp)\n                        temp = []\n            if(temp):\n                segments.append(temp)\n        \n        return operations",
    "submit_ts": "1721531633",
    "subm_id": "1327965943"
}