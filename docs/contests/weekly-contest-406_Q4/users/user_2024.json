{
    "username": "Jay_Dobariya",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int, char>> pq;\n        for(int i=0; i < horizontalCut.size(); i++) pq.push({horizontalCut[i], 'h'});\n        for(int i=0; i < verticalCut.size(); i++) pq.push({verticalCut[i], 'v'});\n\n        int h = 1, v = 1;\n        long long ans = 0;\n\n        while(!pq.empty()){\n            auto it = pq.top();\n            pq.pop();\n            if(it.second == 'h'){\n                ans += it.first*h*1ll;\n                v++;\n            }else{\n                ans += it.first*v*1ll;\n                h++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926292",
    "subm_id": "1320281848"
}