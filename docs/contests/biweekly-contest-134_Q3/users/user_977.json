{
    "username": "anh_tai",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(); \n\n        int equal = 0;\n        for (int i = 0; i < k-1; i++){\n            equal += (colors[i]==colors[(i + 1) % n] ? 1 : 0);\n        }\n\n        if (n == k){\n            equal += colors[0]==colors[n-1]?1:0;\n            if (equal == 1){\n                return 1;\n            } \n\n            if (equal == 0){\n                return n; \n            }\n\n            return 0; \n        }\n\n        int ans = equal==0?1:0;\n        for (int i = 1; i < n; i++){\n            int u = (i + k - 1 + n) % n;\n            int v = (i + k - 2 + n) % n;\n            equal += (colors[u] == colors[v] ? 1 : 0);\n            equal -= (colors[i-1] == colors[i] ? 1 : 0);\n            ans += equal==0?1:0;\n        }\n\n        return ans; \n    }\n};",
    "submit_ts": "1720278519",
    "subm_id": "1311712742"
}