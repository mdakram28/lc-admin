{
    "username": "omnitricks",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int horizontal_parts = 1;\n        int vertical_parts = 1;\n        long long total_cost = 0;\n        int i = 0, j = 0;\n        \n      \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                total_cost += static_cast<long long>(horizontalCut[i]) * vertical_parts; \n                horizontal_parts++;\n                i++;\n            } else {\n                total_cost += static_cast<long long>(verticalCut[j]) * horizontal_parts;\n                vertical_parts++;\n                j++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            total_cost += static_cast<long long>(horizontalCut[i]) * vertical_parts; \n            i++;\n        }\n        \n        \n        while (j < verticalCut.size()) {\n            total_cost += static_cast<long long>(verticalCut[j]) * horizontal_parts; \n            j++;\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720925317",
    "subm_id": "1320250551"
}