{
    "username": "vanshwari",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        priority_queue<long long> hq(h.begin(), h.end());\n        priority_queue<long long> vq(v.begin(), v.end());\n\n        long long totalCost = 0;\n        long long horizontalPieces = 1;\n        long long verticalPieces = 1;\n\n        while (!hq.empty() && !vq.empty()) {\n            if (hq.top() > vq.top()) {\n                totalCost += hq.top() * verticalPieces;\n                hq.pop();\n                horizontalPieces++;\n            } else {\n                totalCost += vq.top() * horizontalPieces;\n                vq.pop();\n                verticalPieces++;\n            }\n        }\n\n        while (!hq.empty()) {\n            totalCost += hq.top() * verticalPieces;\n            hq.pop();\n        }\n\n        while (!vq.empty()) {\n            totalCost += vq.top() * horizontalPieces;\n            vq.pop();\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720924970",
    "subm_id": "1320237960"
}