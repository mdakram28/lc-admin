{
    "username": "mikeqiyh",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pll;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pi> vpi;\ntypedef vector<pll> vpll;\ntypedef vector<ld> vld;\n#define ms(x, a) memset(x, a, sizeof(x))\n#define siz(x) (int)x.size()\n#define len(x) (int)x.length()\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define F first\n#define S second\n#define FOR(i, x) for (int i = 0; i < x; i++)\nconst int NO_DEB = 0;\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename... Args>\nvoid logger(string vals, Args &&...values){\n    if (NO_DEB) return;\n    cout << vals << \" = \";\n    string delim = \"\";\n    (..., (cout << delim << values, delim = \", \"));\n    cout << endl;\n}\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 0x3f3f3f3f3f3f3f3f;\nconst ll MOD = 1e9+7; //998244353;\n//===========================================\ntemplate<int MOD> struct mint {\n    static const int mod = MOD;\n     int v;\n     explicit operator int() const { return v; }\n    mint():v(0) {}\n    mint(ll _v):v(int(_v%MOD)) { v += (v<0)*MOD; }\n    mint& operator+=(mint o) {\n        if ((v += o.v) >= MOD) v -= MOD;\n        return *this; }\n    mint& operator-=(mint o) {\n        if ((v -= o.v) < 0) v += MOD;\n        return *this; }\n    mint& operator*=(mint o) {\n        v = int((ll)v*o.v%MOD); return *this; }\n    mint& operator/=(const mint& o) { return (*this) *= inv(o); }\n    friend mint pow(mint a, ll p) { assert(p >= 0);\n        return p==0?1:pow(a*a,p/2)*(p&1?a:1); }\n    friend mint inv(mint a) { assert(a.v != 0); return pow(a,MOD-2); }\n    friend mint operator+(mint a, mint b) { return a += b; }\n    friend mint operator-(mint a, mint b) { return a -= b; }\n    friend mint operator*(mint a, mint b) { return a *= b; }\n    friend mint operator/(mint a, const mint& b) { return a /= b; }\n};\nusing mi = mint<MOD>;\n//===========================================\nconst int MAX = 2e5+15;\nint st[MAX];\n\nvoid upd(int i, int l, int r, int k, int val){\n    if (l == r){\n        st[i] = val;\n        return;\n    }\n    int m = l+(r-l)/2;\n    if (k <= m) upd(2*i, l, m, k, val);\n    else upd(2*i+1, m+1, r, k, val);\n    st[i] = max(st[2*i], st[2*i+1]);\n}\n\nint query(int i, int l, int r, int tl, int tr){\n    if (l > tr || r < tl) return 0;\n    if (tl <= l && r <= tr) return st[i];\n    int m = l+(r-l)/2;\n    return max(query(2*i, l, m, tl, tr), query(2*i+1, m+1, r, tl, tr));\n}\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& qu) {\n        int lim = min(50000, 3*siz(qu));\n        for (int i = 0; i <= 4*lim+10; i++) st[i] = 0;\n        upd(1, 0, lim, 0, lim);\n        set<int> st;\n        st.insert(0); st.insert(lim);\n        vb ret;\n        for (int i = 0; i < siz(qu); i++){\n            int c = qu[i][0], x = qu[i][1];\n            if (c == 1){\n                auto it = st.upper_bound(x);\n                upd(1, 0, lim, x, (*it)-x);\n                it--;\n                upd(1, 0, lim, (*it), x-(*it));\n                st.insert(x);\n            } else {\n                int sz = qu[i][2];\n                int mx = query(1, 0, lim, 0, x-sz);\n                ret.pb(mx >= sz);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1716649145.0
}