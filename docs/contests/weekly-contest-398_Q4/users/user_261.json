{
    "username": "jakao",
    "submission": "class Solution {\npublic:\n/*\nstart = 1\njump = 0;\n\nint k:\n\n-> k = k-1\n-> k = k + 2^(jump), jump++\n*/\n    int ans[10]={2,4,4,3,2,4,6,4,1};\n#define ll long long\n    int waysToReachStair(int k) {\n        if(k <= 8)  return ans[k];\n        \n        for(long long i = 4; i<=30; i++){\n            if((1LL<<i) >= k && (1LL<<i) - (i+2) <= k){\n                ll ans = 1;\n                //C(i+1, (1LL<<i)-k)\n                ll a = i+1;\n                ll b = (1LL<<i)-k;\n                for(ll i = 0, j = 2; i <b; i++){\n                    ans *= a-i;\n                    while(j <= b && ans % j == 0){\n                        ans /= j;\n                        ++j;\n                    }\n                }\n                return ans;\n            }\n        }\n        // dfs(start, jump);\n        return 0;\n    }\n};\n/*\n 1 : 4\n 2 : 4\n 3 : 3\n 4 : 2\n 5 : 4\n 6 : 6\n 7 : 4\n 8 : 1\n \n11 : 1\n12 : 5\n13 : 10\n14 : 10\n15 : 5\n16 : 1\n4 -> 6\n\n26 : 1\n27 : 6\n28 : 15\n29 : 20\n30 : 15\n31 : 6\n32 : 1\n5 -> 7\n\n57 : 1\n58 : 7\n59 : 21\n60 : 35\n61 : 35\n62 : 21\n63 : 7\n64 : 1\n*/",
    "submit_ts": "1716088167",
    "subm_id": "1261805976"
}