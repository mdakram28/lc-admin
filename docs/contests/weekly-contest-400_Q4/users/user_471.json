{
    "username": "hellraiser666",
    "submission": "class Solution {\npublic:\n    \n    vector<int> st1;\n\n    int neutral = ~0;\n\n    int stf(int a, int b) {\n      return a & b;\n    }\n\n    void init(vector<int> &arr) {\n      int size = 1;\n      while (size < arr.size()) {\n        size <<= 1;\n      }\n\n      st1.assign(size << 1, neutral);\n\n      for (int i = 0; i < size ; ++i) {\n        st1[i + size - 1] = i < arr.size() ? arr[i] : neutral;\n      }\n\n      for (int i = size - 2; i >= 0; --i) {\n        st1[i] = stf(st1[i * 2 + 1], st1[i * 2 + 2]);\n      }\n    }\n\n    void update(int idx, int val) {\n      int cur = idx + st1.size() / 2 - 1;\n      st1[cur] = val;\n\n      while (cur != 0) {\n        cur = (cur - 1) / 2;\n        st1[cur] = stf(st1[cur * 2 + 1], st1[cur * 2 + 2]);\n      }\n    }\n\n    // open interval: [l..r)\n    int query(int l, int r) {\n      r--;\n      int lr = neutral;\n      int rr = neutral;\n      l += (st1.size() >> 1) - 1;\n      r += (st1.size() >> 1) - 1;\n\n      while (l < r) {\n        if (l % 2 == 0) {\n          lr = stf(lr, st1[l]);\n        }\n        l >>= 1;\n\n        if (r % 2 != 0) {\n          rr = stf(rr, st1[r]);\n        }\n        r = (r >> 1) - 1;\n      }\n      if (l == r) {\n        lr = stf(lr, st1[l]);\n      }\n      return stf(lr, rr);\n    }\n\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int res = INT32_MAX;\n        \n        int n = nums.size();\n        \n        init(nums);\n        \n        for (int i = 0; i < n; ++i) {\n            int l = 0;\n            int r = i;\n            while (l < r) {\n                int m = l + (r - l) / 2;\n                int v = query(m, i + 1);\n                if (v >= k) {\n                    r = m;\n                } else {\n                    l = m + 1;\n                }\n            }\n            res = min(res, abs(k - query(r, i + 1)));\n            if (r) {\n                res = min(res, abs(k - query(r - 1, i + 1)));\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1717298584",
    "subm_id": "1274784154"
}