{
    "username": "hty50",
    "submission": "from math import log2\n\nclass Solution:\n    def countSubarrays(self, arr, k):\n        n = len(arr)\n        \n        log_n = int(log2(n)) + 1\n        st = [[0] * n for _ in range(log_n)]\n        st[0] = arr[:]\n        \n        for j in range(1, log_n):\n            for i in range(n - (1 << j) + 1):\n                st[j][i] = st[j - 1][i] & st[j - 1][i + (1 << (j - 1))]\n        \n        def query(l, r):\n            exp = int(log2(r - l + 1))\n            return st[exp][l] & st[exp][r - (1 << exp) + 1]\n        \n        ans = 0\n        for i in range(n):\n            l, r = i, n\n            while l + 1 < r:\n                mid = (l + r) // 2\n                if query(i, mid) >= k:\n                    l = mid\n                else:\n                    r = mid\n            \n            if query(i, l) != k:\n                continue\n            \n            temp = l\n            l, r = i - 1, n\n            while l + 1 < r:\n                mid = (l + r) // 2\n                if query(i, mid) > k:\n                    l = mid\n                else:\n                    r = mid\n            \n            ans += temp - l\n        \n        return ans",
    "submit_ts": "1720276890",
    "subm_id": "1311637704"
}