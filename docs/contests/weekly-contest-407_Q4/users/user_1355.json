{
    "username": "Krishanu_7",
    "submission": "class Solution {\npublic:\n    vector<long long> computeDiff(const vector<int>& nums, const vector<int>& tgt) {\n        long long n = nums.size();\n        vector<long long> d(n);\n        for (long long i = 0; i < n; ++i) {\n            d[i] = tgt[i] - nums[i];\n        }\n        return d;\n    }\n\n    long long calcOps(const vector<long long>& d) {\n        long long ops = 0;\n        long long segDiff = 0;\n\n        for (long long i = 0; i < d.size(); ++i) {\n            if (i == 0 || (d[i - 1] > 0 && d[i] > 0) || (d[i - 1] < 0 && d[i] < 0)) {\n                long long extraOps = abs(d[i]) - abs(segDiff);\n                if (extraOps > 0) {\n                    ops += extraOps;\n                }\n                segDiff = d[i];\n            } else {\n                ops += abs(d[i]);\n                segDiff = d[i];\n            }\n        }\n\n        return ops;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& tgt) {\n        vector<long long> d = computeDiff(nums, tgt);\n        return calcOps(d);\n    }\n};\n",
    "submit_ts": "1721533058",
    "subm_id": "1328000302"
}