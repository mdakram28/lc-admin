{
    "username": "swapnesh-khemariya",
    "submission": "#define ll long long int\n \nclass segTree\n{\npublic:\n    vector<ll> sums;\n    int sizz;\n    segTree(int n)\n    {\n        sizz = 1;\n        while (sizz < n)\n            sizz *= 2;\n        sums.assign(2 * sizz, 0ll);\n    }\n \n    void build(int x, int lx, int rx, vector<int> &arr)\n    {\n        if (rx - lx == 1)\n        {\n            if (lx < arr.size())\n                sums[x] = arr[lx];\n            return;\n        }\n        int m = (lx + rx) / 2;\n        build(2 * x + 1, lx, m, arr);\n        build(2 * x + 2, m, rx, arr);\n        sums[x] = sums[2 * x + 1] + sums[2 * x + 2];\n    }\n \n    void build(vector<int> &arr)\n    {\n        build(0, 0, sizz, arr);\n    }\n \n    void set(int x, int lx, int rx, int i, int v)\n    {\n        if (rx - lx == 1)\n        {\n            sums[x] = v;\n            return;\n        }\n        int m = (lx + rx) / 2;\n        if (i < m)\n            set(2 * x + 1, lx, m, i, v);\n        else\n            set(2 * x + 2, m, rx, i, v);\n        sums[x] = sums[2 * x + 1] + sums[2 * x + 2];\n    }\n \n    void set(int i, int v)\n    {\n        set(0, 0, sizz, i, v);\n    }\n \n    ll sum(int x, int lx, int rx, int l, int r)\n    {\n        if (lx >= r || rx <= l)\n            return 0;\n        if (lx >= l && rx <= r)\n            return sums[x];\n        int m = (lx + rx) / 2;\n        ll left = sum(2 * x + 1, lx, m, l, r);\n        ll right = sum(2 * x + 2, m, rx, l, r);\n        return left + right;\n    }\n \n    ll sum(int l, int r)\n    {\n        if(l>=r)\n            return 0;\n        return sum(0, 0, sizz, l, r);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        segTree *T = new segTree(n);\n        vector<int>arr(n);\n        arr[0] = arr[n-1] = 0;\n        for(int i=1;i<n-1;i++){\n            arr[i] = nums[i] > max(nums[i-1], nums[i+1]);\n        }\n        T->build(arr);\n        \n        vector<int>ans;\n        int i, v, x;\n        for(auto &q:queries){\n            if(q[0]==1)\n                ans.push_back(T->sum(q[1]+1, q[2]));\n            else{\n                i = q[1];\n                v = q[2];\n                nums[i] = v;\n                if(i>0 && i<n-1){\n                    x = nums[i] > max(nums[i-1], nums[i+1]);\n                    if(arr[i]!=x){\n                        arr[i] = x;\n                        T->set(i, x);\n                    }\n                }\n                if(i-1>0 && i<n){\n                    i--;\n                    x = nums[i] > max(nums[i-1], nums[i+1]);\n                    if(arr[i]!=x){\n                        arr[i] = x;\n                        T->set(i, x);\n                    }\n                    i++;\n                }\n                if(i+1<n-1 && i>=0){\n                    i++;\n                    x = nums[i] > max(nums[i-1], nums[i+1]);\n                    if(arr[i]!=x){\n                        arr[i] = x;\n                        T->set(i, x);\n                    }\n                    i--;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507581",
    "subm_id": "1289656098"
}