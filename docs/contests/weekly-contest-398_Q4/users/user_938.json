{
    "username": "CompilerWhisperer",
    "submission": "class Solution {\npublic:\n      int standard = 5;\n      int limit = 31;\n    \n    int solve(unordered_map<int, vector<vector<int>>> &dp ,int k, int i, int j, bool f) {\n        if (i > k + standard){\n             return 0;\n        }\n\n        if(j > limit){\n             return 0;\n        }\n          \n        if(dp.count(i) && dp[i][j][f] != -1){\n             return dp[i][j][f];\n        }\n        \n        int ans = 0;\n        if(i==k){\n            ans = 1;\n        }\n       \n        \n        if (f == 1 ){\n            ans += solve(dp ,k, i - 1, j, 0);\n        }\n        int result = (int)(pow(2, j));\n        if ((i + result) <= (k + 1) ){\n             ans += solve(dp , k, i + result, j + 1, 1);\n        }\n           \n\n         dp[i] = vector<vector<int>>(32, vector<int>(2, -1));\n\n        return dp[i][j][f] = ans;\n    }\n    \n    int waysToReachStair(int k) {\n         unordered_map<int, vector<vector<int>>> dp;\n           return solve(dp , k, 1, 0, 1);\n    }\n};",
    "submit_ts": 1716090205.0
}