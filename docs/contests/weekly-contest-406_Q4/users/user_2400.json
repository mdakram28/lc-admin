{
    "username": "sribhargav1308",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& arr, vector<int>& brr) {\n        \n        long long i = 0;\n        long long j = 0;\n        \n        sort(arr.begin(),arr.end(),greater<long long>());\n        sort(brr.begin(),brr.end(),greater<long long>());\n        \n        long long sum1 = accumulate(arr.begin(),arr.end(),0);\n        long long sum2 = accumulate(brr.begin(),brr.end(),0);\n        \n        if(sum1 == 0)\n        {\n            return sum2;\n        }\n        if(sum2 == 0) return sum1;\n        \n        long long ans = 0;\n        \n        while(i<m && j<n)\n        {\n            if(arr[i]>brr[j])\n            {\n                ans += (arr[i]+sum2);\n                sum1 -= arr[i];\n                i++;\n            }\n            else\n            {\n                ans += (brr[j]+sum1);\n                sum2 -= brr[j];\n                j++;\n            }\n            \n            if(sum1 <= 0 || sum2 <= 0) break;\n            \n            //cout<<ans<<endl;\n        }\n        \n        ans += sum2;\n        ans += sum1;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720926495",
    "subm_id": "1320287969"
}