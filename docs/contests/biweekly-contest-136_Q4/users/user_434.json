{
    "username": "parascoding",
    "submission": "class Solution {\n    public int[] timeTaken(int[][] edges) {\n        adj = new ArrayList<>();\n        n = edges.length + 1;\n        for(int i = 0; i < n; i++)\n            adj.add(new ArrayList<>());\n        for(int e[] : edges){\n            adj.get(e[0]).add(e[1]);\n            adj.get(e[1]).add(e[0]);\n        }\n        \n        dp = new int[n][2];\n        dp(0, -1);\n        // for(int i = 0; i < n; i++)\n        //     System.out.println(i+\" \"+dp[i][0]+\" \"+dp[i][1]);\n        dp2 = new int[n];\n        ans = new int[n];\n        dp2[0] = dp[0][0];\n        dp2(0, -1);\n        return ans;\n    }\n    void dp2(int node, int par){\n        ans[node] = dp2[node];\n        for(int ngr : adj.get(node)){\n            if(ngr == par)\n                continue;\n            if(node % 2 == 0){\n                if(ngr % 2 == 0){\n                    if(dp[node][0] == dp[ngr][0] + 2){\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][1] + 2);\n                        if(dp[node][1] + 2 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][1] + 2;\n                        } else if(dp[node][1] + 2 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][1] + 2;\n                        }\n                    } else{\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][0] + 2);\n                        if(dp[node][0] + 2 >= dp[ngr][0]){\n                            dp[ngr][0] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][0] + 2;\n                        } else if(dp[node][0] + 2 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][0] + 2;\n                        }\n                    }\n                } else{\n                    if(dp[node][0] == dp[ngr][0] + 1){\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][1] + 2);\n                        if(dp[node][1] + 2 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][1] + 2;\n                        } else if(dp[node][1] + 2 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][1] + 2;\n                        }\n                    } else{\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][0] + 2);\n                        if(dp[node][0] + 2 >= dp[ngr][0]){\n                            dp[ngr][0] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][0] + 2;\n                        } else if(dp[node][0] + 2 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][0] + 2;\n                        }\n                    }\n                        \n                }\n            } else{\n                if(ngr % 2 == 0){\n                    if(dp[node][0] == dp[ngr][0] + 2){\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][1] + 1);\n                        if(dp[node][1] + 1 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][1] + 1;\n                        } else if(dp[node][1] + 1 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][1] + 1;\n                        }\n                    } else{\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][0] + 1);\n                        if(dp[node][0] + 1 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][0] + 1;\n                        } else if(dp[node][0] + 1 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][0] + 1;\n                        }\n                    }\n                        \n                } else{\n                    if(dp[node][0] == dp[ngr][0] + 1){\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][1] + 1);\n                        if(dp[node][1] + 1 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][1] + 1;\n                        } else if(dp[node][1] + 1 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][1] + 1;\n                        }\n                    } else{\n                        dp2[ngr] = Math.max(dp[ngr][0], dp[node][0] + 1);\n                        if(dp[node][0] + 1 >= dp[ngr][0]){\n                            dp[ngr][1] = dp[ngr][0];\n                            dp[ngr][0] = dp[node][0] + 1;\n                        } else if(dp[node][0] + 1 > dp[ngr][1]){\n                            dp[ngr][1] = dp[node][0] + 1;\n                        }\n                    }\n                }\n            }\n            dp2(ngr, node);\n        }\n    }\n    void dp(int node, int par){\n        for(int ngr : adj.get(node)){\n            if(ngr == par)\n                continue;\n            dp(ngr, node);\n            if(ngr % 2 == 0){\n                if(dp[ngr][0] + 2 >= dp[node][0]){\n                    dp[node][1] = dp[node][0];\n                    dp[node][0] = dp[ngr][0] + 2;\n                } else if(dp[ngr][0] + 2 > dp[node][1]){\n                    dp[node][1] = dp[ngr][0] + 2;\n                }\n            } else{\n                if(dp[ngr][0] + 1 >= dp[node][0]){\n                    dp[node][1] = dp[node][0];\n                    dp[node][0] = dp[ngr][0] + 1;\n                } else if(dp[ngr][0] + 1 > dp[node][1]){\n                    dp[node][1] = dp[ngr][0] + 1;\n                }\n            }\n        }\n    }\n    int ans[];\n    int dp[][];\n    int dp2[];\n    int n;\n    List<List<Integer>> adj;\n}",
    "submit_ts": "1722698620",
    "subm_id": "1343186479"
}