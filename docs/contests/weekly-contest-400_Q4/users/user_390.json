{
    "username": "rupa6",
    "submission": "// #include<bits/stdc++.h>\n// using namespace std;\n\n\n//https://github.com/Anushi1998/Competitive-Coding/blob/master/Data-Structures/SegmentTree.cpp\ntemplate <class T>\nclass SegmentTree {\npublic:\n    vector<T> st;\n    int n;\n    T(*f)(T, T);\n    SegmentTree(T(*who)(T, T)){\n        f = who;\n    }\n    void build(int sz, T *a, T(*cur)(T, T*)){\n        n = sz;\n        st.resize(n + n + 1);\n        for (int i = 0; i<n; i++) st[n + i] = (*cur)(i, a);\n        for (int i = n - 1; i>0; i--) st[i] = (*f)(st[i << 1], st[i << 1 | 1]);\n    }\n    void modify(int id, T val){\n        for (st[id += n] = val; id>1; id >>= 1) st[id >> 1] = (*f)(st[id], st[id ^ 1]);\n    }\n    T query(int l, int r, T res){\n        ++r;\n        for (l += n, r += n; l<r; l >>= 1, r >>= 1){\n            if (l & 1) res = (*f)(res, st[l++]);\n            if (r & 1) res = (*f)(res, st[--r]);\n        }\n        return res;\n    }\n    void print(){\n        for (int i = 1; i<n + n; i++) cout << st[i] << ' '; cout << endl;\n    }\n};\n\nint a[100010];\n\n// int min_(int a, int b){ return (a<b) ? a : b; }\n// int max_(int x, int y){ if (y>x) swap(x, y); return (a[x]>a[y]) ? x : y; }\n// int add(int x, int y){ return (x + 0LL + y) % mod; }\nint value(int id, int* a){ return a[id]; }\nint index(int id, int* a){ return id; }\nint andd(int x, int y){ return x&y; }\n\n\n// SegmentTree<int> mi(min_);\n// cin >> n;\n// for (int i = 0; i<n; i++) cin >> a[i];\n// mi.build(n, a, value);\n// cout<<mi.query(0,n-1,mod)<<endl;\n// mi.modify(0,-1000);\n// cout<<mi.query(0,n-1,mod)<<endl;\n// mi.print();\n\nclass Solution {\npublic:\n    \n    int minimumDifference(vector<int>& inp, int k) {\n        int n=inp.size();\n        for(int i=0;i<n;i++) a[i]=inp[i];\n        \n        SegmentTree<int> st(andd);\n        \n        st.build(n, a, value);\n        int ans=abs(k-a[0]);\n        \n        int preAnd = a[0];\n        \n        for(int i=0;i<n;i++) {\n            int l=0, r=i;\n            int last = i;\n            // preAnd = a[i]&preAnd;\n            // int suband = k - preAnd;\n            // ans=min(ans, abs(suband));\n            \n            while(l<=r) {\n                int mid=(l+r)>>1;\n                int value = st.query(mid, last, a[last]);\n                if(value == k) return 0;\n                if(value < k) l=mid+1;\n                else r=mid-1;\n            }\n            if(r>=0 && r<=last) {\n                int valr = k - st.query(r, last, a[last]);\n                ans = min(ans, abs(valr));\n            }\n            if (l>=0 && l<=last) {\n                int vall = k - st.query(l, last, a[last]);\n                ans=min(ans, abs(vall));\n            }\n             \n//             while(l<r) {\n//                 int mid=(l+r)>>1;\n//                 int suband = k - st.query(mid, last, a[r]);\n//                 int suband2 = k - st.query(mid+1, last, a[r]);\n                \n//                 cout<<i<<\"::\"<<l<<' '<<r<<\"::\"<<suband<<' '<<suband2<<endl;\n                \n//                 if(suband == 0 || suband2 == 0) return 0;\n//                 ans=min(ans, min(abs(suband), abs(suband2)));\n//                 if(suband > 0 || suband2 < 0) {\n//                     break;\n//                 }\n//                 if(suband < 0 || suband2 > 0) {\n//                     break;\n//                 }\n//                 if (suband < suband2) l=mid+1;\n//                 else r=mid-1;\n//             }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1717298285",
    "subm_id": "1274773593"
}