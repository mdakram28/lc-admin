{
    "username": "gsaivishal",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        init(points);\n        \n        int res = INT_MAX;\n        for(auto& p : points) {\n            sum.erase(sum.find(p[0] + p[1]));\n            diff.erase(diff.find(p[0] - p[1]));\n            \n            int cur = max(*sum.rbegin() - *sum.begin(), *diff.rbegin() - *diff.begin());\n            res = min(res, cur);\n            \n            sum.insert(p[0] + p[1]);\n            diff.insert(p[0] - p[1]);\n        }\n        return res;\n    }\nprivate:\n    multiset<int> sum, diff;\n    \n    void init(auto& points) {\n        for(auto& p : points) {\n            sum.insert(p[0] + p[1]);\n            diff.insert(p[0] - p[1]);\n        }\n    }\n};\n/*\n\n*/"
}