{
    "username": "ard001",
    "submission": "class Solution {\npublic:\n    static constexpr int mxn = 1e5+100, mod = 1e9+7;\n    long long dp[mxn*4][4];\n    void build(int low,int high,int pos,vector<int>&nums){\n        if(low == high){\n            dp[pos][0] = dp[pos][1] = dp[pos][2] = 0;\n            dp[pos][3] = max(0, nums[low]);\n            return;\n        }\n        int mid = (low+high)/2;\n        build(low,mid,2*pos+1,nums);\n        build(mid+1,high,2*pos+2,nums);\n\n        dp[pos][0] = max({dp[2*pos+1][0] + dp[2*pos+2][0], dp[2*pos+1][0] + dp[2*pos+2][2] , dp[2*pos+1][1] + dp[2*pos+2][0]});\n        dp[pos][1] = max({dp[2*pos+1][0] + dp[2*pos+2][1], dp[2*pos+1][0] + dp[2*pos+2][3] , dp[2*pos+1][1] + dp[2*pos+2][1]});\n        dp[pos][2] = max({dp[2*pos+1][2] + dp[2*pos+2][0], dp[2*pos+1][2] + dp[2*pos+2][2] , dp[2*pos+1][3] + dp[2*pos+2][0]});\n        dp[pos][3] = max({dp[2*pos+1][2] + dp[2*pos+2][1], dp[2*pos+1][2] + dp[2*pos+2][3] , dp[2*pos+1][3] + dp[2*pos+2][1]});\n    }\n    void update(int idx,int val,int low,int high,int pos){\n        if(idx<low || idx>high)return;\n        if(low==high){\n            dp[pos][0] = dp[pos][1] = dp[pos][2] = 0 ;\n            dp[pos][3] = max(0, val);\n            return;\n        }\n        int mid = (low+high)/2;\n        update(idx,val,low,mid,2*pos+1);\n        update(idx,val,mid+1,high,2*pos+2);\n\n        \n        dp[pos][0] = max({dp[2*pos+1][0] + dp[2*pos+2][0], dp[2*pos+1][0] + dp[2*pos+2][2] , dp[2*pos+1][1] + dp[2*pos+2][0]});\n        dp[pos][1] = max({dp[2*pos+1][0] + dp[2*pos+2][1], dp[2*pos+1][0] + dp[2*pos+2][3] , dp[2*pos+1][1] + dp[2*pos+2][1]});\n        dp[pos][2] = max({dp[2*pos+1][2] + dp[2*pos+2][0], dp[2*pos+1][2] + dp[2*pos+2][2] , dp[2*pos+1][3] + dp[2*pos+2][0]});\n        dp[pos][3] = max({dp[2*pos+1][2] + dp[2*pos+2][1], dp[2*pos+1][2] + dp[2*pos+2][3] , dp[2*pos+1][3] + dp[2*pos+2][1]});\n    }\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        build(0,n-1,0,nums);\n        long long ret=0;\n        for(auto query: queries){\n            update(query[0], query[1], 0, n-1,0);\n            ret += max({ dp[0][0], dp[0][1], dp[0][2], dp[0][3]});\n            ret %= mod;\n        }      \n        return ret;\n    }\n};",
    "submit_ts": 1716693727.0
}