{
    "username": "VaidyaPS",
    "submission": "class DisjointSet {\npublic:\n    vector<int> rank, parent, size;\n    DisjointSet(int n) {\n        rank.resize(n + 1, 0);\n        parent.resize(n + 1);\n        size.resize(n + 1);\n        for (int i = 0; i <= n; i++) {\n            parent[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    int findUPar(int node) {\n        if (node == parent[node])\n            return node;\n        return parent[node] = findUPar(parent[node]);\n    }\n\n    void unionByRank(int u, int v) {\n        int ulp_u = findUPar(u);\n        int ulp_v = findUPar(v);\n        if (ulp_u == ulp_v) return;\n        if (rank[ulp_u] < rank[ulp_v]) {\n            parent[ulp_u] = ulp_v;\n        }\n        else if (rank[ulp_v] < rank[ulp_u]) {\n            parent[ulp_v] = ulp_u;\n        }\n        else {\n            parent[ulp_v] = ulp_u;\n            rank[ulp_u]++;\n        }\n    }\n\n    void unionBySize(int u, int v) {\n        int ulp_u = findUPar(u);\n        int ulp_v = findUPar(v);\n        if (ulp_u == ulp_v) return;\n        if (size[ulp_u] < size[ulp_v]) {\n            parent[ulp_u] = ulp_v;\n            size[ulp_v] += size[ulp_u];\n        }\n        else {\n            parent[ulp_v] = ulp_u;\n            size[ulp_u] += size[ulp_v];\n        }\n    }\n};\n\nclass Solution {\npublic:\n   \nvoid setg(vector<int> adj, int n){\n    for (int i = 1; i < n; ++i) {\n        adj[i] = adj[i - 1] + 1;\n    }\n}\n// vector<int> ans;\n\nvoid pq(vector<int>& ans, set<int>& str, const vector<vector<int>>& q) {\n    for (const auto& it : q) {\n        int x = it[0];\n        int y = it[1];\n        auto lower = str.lower_bound(x + 1);\n        auto upper = str.lower_bound(y);\n        str.erase(lower, upper);\n        ans.push_back(str.size() - 1);\n    }\n}\n\nvoid Setset(set<int>& str, int n) {\n    for (int i = 0; i < n; ++i) {\n        str.insert(i);\n    }\n}\n\n\n\nvector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n    vector<int> ans;\n   vector<int> vec(n, 0);\n   setg(vec,n);\n\n   set<int> str;\n   Setset(str, n);\n   \n   pq(ans, str, q);\n\n    return ans;\n}\n\n};",
    "submit_ts": "1722743880",
    "subm_id": "1343801779"
}