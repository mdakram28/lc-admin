{
    "username": "Ashish_leetcode_1",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MOD = 1_000_000_007\n        MAX_INV = 400\n        req_map = {req[0] + 1: req[1] for req in requirements}\n        \n        perm_counts = [[0] * (MAX_INV + 1) for _ in range(n + 1)]\n        perm_counts[0][0] = 1\n        \n        for length in range(1, n + 1):\n            for inv in range(MAX_INV + 1):\n                for pos in range(length):\n                    prev_inv = inv - pos\n                    if prev_inv >= 0:\n                        perm_counts[length][inv] = (perm_counts[length][inv] + perm_counts[length - 1][prev_inv]) % MOD\n                        \n            if length in req_map:\n                target_inv = req_map[length]\n                for inv in range(MAX_INV + 1):\n                    if inv != target_inv:\n                        perm_counts[length][inv] = 0\n        \n        return sum(perm_counts[n]) % MOD",
    "submit_ts": 1719071094.0
}