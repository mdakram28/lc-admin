{
    "username": "abhishekvaish",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n,m = len(grid),len(grid[0])\n        cost = 0\n        for i in range(n//2):\n            for j in range(m//2):\n                d = grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j]\n                cost += min(d, 4-d)\n                \n        if n % 2 == 0 and m % 2 == 0: return cost\n        \n\n        if m%2 == 1 and n % 2 == 1 and  grid[n//2][m//2] == 1: \n            cost += 1\n        diff = 0\n        ones = 0\n        if m % 2 == 1:\n            for i in range(n//2):\n                if grid[i][m//2] == grid[n-1-i][m//2] == 1:\n                    ones += 2\n                    continue\n                if grid[i][m//2] != grid[n-1-i][m//2]:\n                    diff += 1\n        if n % 2 == 1:\n            for j in range(m//2):\n                if grid[n//2][j] == grid[n//2][m-1-j] == 1:\n                    ones += 2\n                if grid[n//2][j] != grid[n//2][m-1-j]:\n                    diff += 1\n        if ones == 0 or ones%4 == 0 :\n            return cost + diff \n        if diff == 0:\n            return cost + 2 \n        else:\n            return cost + diff \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n                ",
    "submit_ts": "1722697428",
    "subm_id": "1343146208"
}