{
    "username": "huntxu",
    "submission": "impl Solution {\n    pub fn minimum_cost(m: i32, n: i32, horizontal_cut: Vec<i32>, vertical_cut: Vec<i32>) -> i64 {\n        let mut x = horizontal_cut.into_iter().map(|x| (x, true)).chain(\n            vertical_cut.into_iter().map(|x| (x, false))\n        ).collect::<Vec<(i32, bool)>>();\n        x.sort_unstable();\n        x.into_iter().rev().fold((0i64, 1, 1), |(ret, h, v), (count, is_horizontal)| {\n            match is_horizontal {\n                true => (ret + (count * h) as i64, h, v + 1),\n                false => (ret + (count * v) as i64, h + 1, v),\n            }\n        }).0\n    }\n}",
    "submit_ts": "1720925309",
    "subm_id": "1320250318"
}