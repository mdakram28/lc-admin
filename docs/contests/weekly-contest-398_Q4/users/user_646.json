{
    "username": "zoro15",
    "submission": "class Solution {\n    int ans = 0;\n    Map<String,Integer> map = new HashMap<>();\n    public int dp(int k,int i,int jump,int f) {\n        String g = i + \",\" + jump + \",\" + f;\n        if(i > k+1) {\n            return 0;\n        }\n        if(map.containsKey(g)) return map.get(g);\n        if(i == k) {\n            int r = dp(k,i + (int)Math.pow(2,jump),jump+1,1);\n            int s = 0;\n            if(i != 0 && f == 1) {\n                s = dp(k,i-1,jump,0);\n            }\n            map.put(g,1+r+s);\n            return 1 + r + s;\n        }\n        int p = dp(k,i + (int)Math.pow(2,jump),jump+1,1);\n        int q = 0;\n        if(i != 0 && f == 1) {\n            q = dp(k,i-1,jump,0);\n        }\n        map.put(g,p+q);\n        return p + q;\n    }\n    public int waysToReachStair(int k) {\n        return dp(k,1,0,1);\n    }\n}",
    "submit_ts": "1716089194",
    "subm_id": "1261835693"
}