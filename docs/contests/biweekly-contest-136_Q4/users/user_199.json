{
    "username": "JustJie",
    "submission": "using Info = pair<int, int>;\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        vector<vector<int>> adj(n);\n        for (const auto& edge : edges) {\n            int u = edge[0];\n            int v = edge[1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        \n        vector<vector<Info>> g(n);\n        \n        const auto f = [&](int x) -> int {\n            if (x & 1) {\n                return 1;\n            }\n            return 2;\n        };\n        \n        const auto dfs = [&](auto&& self, int u, int p) -> int {\n            for (int v : adj[u]) {\n                if (v != p) {\n                    int x = self(self, v, u);\n                    g[u].emplace_back(x, v);\n                    if (g[u].size() >= 2) {\n                        ranges::sort(g[u], greater());\n                        g[u].resize(2);\n                    }\n                }\n            }\n            if (g[u].empty()) {\n                return f(u);\n            }\n            return g[u][0].first + f(u);\n        };\n        dfs(dfs, 0, 0);\n        \n        for (int i = 0; i < n; i++) {\n            while (g[i].size() < 2) {\n                g[i].emplace_back(0, -1);\n            }\n        }\n        \n        vector<int> ans(n);\n        const auto dfs2 = [&](auto&& self, int u, int p, int top) -> void {\n            // cout << u << \" \" << top << \"\\n\";\n            ans[u] = max(g[u][0].first, top);\n            for (int v : adj[u]) {\n                if (v != p) {\n                    int mx = 0;\n                    for (const auto& [k, kv] : g[u]) {\n                        if (kv != v) {\n                            mx = k;\n                            break;\n                        }\n                    }\n                    int new_top = max(top, mx) + f(u);\n                    self(self, v, u, new_top);\n                }\n            }\n        };\n        dfs2(dfs2, 0, 0, 0);\n        return ans;\n    }\n};",
    "submit_ts": "1722696969",
    "subm_id": "1343129179"
}