{
    "username": "sakuyaqwq",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n=len(nums)\n        a=[0]*(n+1)\n        def lowbit(x):\n            return x&(-x)\n        def add(x,v):\n            while x<len(a):\n                a[x]+=v\n                x+=lowbit(x)\n        def query(x):\n            s=0\n            while x>0:\n                s+=a[x]\n                x-=lowbit(x)\n            return s\n        for i in range(n):\n            if i==0 or i==n-1:\n                continue\n            if nums[i]>nums[i-1] and nums[i]>nums[i+1]:\n                add(i+1,1)\n        res=[]\n        for op,x,y in queries:\n            if op==1:\n                if x==y:\n                    res.append(0)\n                    continue\n                x+=1\n                y+=1\n                now=query(y)-query(x-1)\n                now-=query(y)-query(y-1)\n                now-=query(x)-query(x-1)\n                res.append(now)\n            else:\n                if x-2>=0 and nums[x-1]>max(nums[x],nums[x-2]) and nums[x-1]<=max(y,nums[x-2]):\n                    add(x,-1)\n                if x-2>=0 and nums[x-1]<=max(nums[x],nums[x-2]) and nums[x-1]>max(y,nums[x-2]):\n                    add(x,1)\n                if x-1>=0 and x+1<n and nums[x]>max(nums[x-1],nums[x+1]) and y<=max(nums[x-1],nums[x+1]):\n                    add(x+1,-1)\n                if x-1>=0 and x+1<n and nums[x]<=max(nums[x-1],nums[x+1]) and y>max(nums[x-1],nums[x+1]):\n                    add(x+1,1)\n                if x+2<n and nums[x+1]>max(nums[x],nums[x+2]) and nums[x+1]<=max(y,nums[x+2]):\n                    add(x+2,-1)\n                if x+2<n and nums[x+1]<=max(nums[x],nums[x+2]) and nums[x+1]>max(y,nums[x+2]):\n                    add(x+2,1)\n                nums[x]=y\n        return res\n\n            ",
    "submit_ts": "1718508748",
    "subm_id": "539789093"
}