{
    "username": "piyush__ratan",
    "submission": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n#include <algorithm>\n\n#define fori(v) for(auto it=v.begin();it!=v.end();it++)\n#define cin(v) for(auto &i : v) std::cin >> i;\n#define cout(v) for(auto &i : v) std::cout << i << \" \"; std::cout << \"\\n\"\n#define maxe(v) std::max_element(v.begin(),v.end())\n#define mine(v) std::min_element(v.begin(),v.end())\n#define fin(i,a,b) for(int i=a;i<b;i++)\n#define fdec(i,a,b) for(int i=a;i>=b;i--)\n#define endl \"\\n\"\n#define all(a) a.begin(),a.end()\n#define ff first\n#define ss second\n#define MOD 998244353\n\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int n = nums.size();\n        long long count = 0;\n        std::unordered_map<long long, long long> prevResults;\n\n        fori(nums) {\n            std::unordered_map<long long, long long> currResults;\n\n            if (*it == k) {\n                count++;\n            }\n            currResults[*it] = 1;\n\n            for (auto& [val, freq] : prevResults) {\n                long long newAndResult = val & *it;\n                if (newAndResult == k) {\n                    count += freq;\n                }\n                currResults[newAndResult] += freq;\n            }\n\n            prevResults = currResults;\n        }\n\n        return count;\n    }\n};\n\n",
    "submit_ts": "1720281330",
    "subm_id": "1311821177"
}