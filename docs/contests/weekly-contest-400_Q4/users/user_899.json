{
    "username": "introvert9112k",
    "submission": "class Solution {\nprivate : \n    int caluculateBitWiseAnd(int ind2,int ind1,vector<vector<int>> &prefix)\n    {   \n        int bitWiseAnd = 0;\n        for(int j = 0; j < 32; ++j)\n        {\n            int subArrayLen = ind2 - ind1 + 1;\n            int onesCount = prefix[ind2+1][j] - prefix[ind1][j];\n            if(subArrayLen == onesCount)\n                 bitWiseAnd |= (1<<j);\n        }\n        return bitWiseAnd;\n    }\n    int findMinimumValue(int ind,vector<vector<int>> &prefix,int k,int n)\n    {\n        int low = ind,high = n-1;\n        int  bitWiseAnd;\n        while(low <= high)\n        {\n            int mid = low + (high - low)/2;\n            bitWiseAnd = caluculateBitWiseAnd(mid,ind,prefix);\n            bitWiseAnd >= k ? low = mid + 1 : high = mid - 1;\n        }\n        int val = INT_MAX;\n        if(high >= 0)\n        {\n             bitWiseAnd = caluculateBitWiseAnd(high,ind,prefix);\n             val = min(val,abs(k - bitWiseAnd));\n        }\n        if(low < n)\n        {\n             bitWiseAnd = caluculateBitWiseAnd(low,ind,prefix);\n             val = min(val,abs(k - bitWiseAnd));\n        }\n        return val;\n    }\n    \n    int bruteForce(vector<int>& nums, int k)\n    {\n        int n = nums.size();\n        int ans  = INT_MAX;\n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = i; j < n; ++j)\n            {\n                int bitWiseAnd = nums[i];\n                for(int k = i; k <= j; ++k)\n                    bitWiseAnd = bitWiseAnd & nums[k];\n                ans = min(ans, abs(k - bitWiseAnd));\n            }\n        }\n        return ans;\n    }\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> prefix(n+1,vector<int>(32,0));\n        for(int i = 0; i < n; ++i)\n        {\n            for(int j = 0; j < 32; ++j)\n            {   \n                int num = nums[i];\n                if((num & (1<<j)))\n                    prefix[i+1][j] = prefix[i][j] + 1;\n                else \n                    prefix[i+1][j] = prefix[i][j];\n            }\n        }\n        int ans = INT_MAX;\n        for(int i = 0; i < n; ++i)\n        {\n            if(k >= nums[i])\n                ans = min(ans,k - nums[i]);\n            else \n            {\n                int val = findMinimumValue(i,prefix,k,n);\n                ans = min(ans,val);\n            }\n        }\n        // int ans2 = bruteForce(nums,k);\n        // cout<<ans<<\" \"<<ans2<<endl;\n        return ans;\n    }\n};",
    "submit_ts": 1717300254.0
}