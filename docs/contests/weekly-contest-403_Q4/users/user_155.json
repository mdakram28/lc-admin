{
    "username": "leoncn",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < n-1; i++) {\n            int f = cal(grid, 0, i, 0, m-1);\n\n            for (int j = i+1; j <n-1 ; j++) {\n                int sec = cal(grid, i+1, j, 0, m-1);\n                int three = cal(grid, j+1, n-1, 0, m-1);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n\n            for (int j = 0; j <m-1 ; j++) {\n                int sec = cal(grid, i+1, n-1, 0, j);\n                int three = cal(grid, i+1, n-1, j+1, m-1);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n\n            f = cal(grid, i+1,n-1 , 0, m-1);\n            for (int j = 0; j < m-1; j++) {\n                int sec = cal(grid, 0, i, 0, j);\n                int three = cal(grid, 0, i, j+1, m-1);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n        }\n\n        for (int j = 0; j < m-1; j++) {\n\n\n            int f = cal(grid, 0, n-1, 0, j);\n            for (int i = j+1; i <m-1 ; i++) {\n                int sec = cal(grid, 0, n-1, j+1, i);\n                int three = cal(grid, 0, n-1, i+1, m-1);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n\n            for (int i = 0; i < n-1; i++) {\n                int sec = cal(grid, 0, i, j+1, m-1);\n                int three = cal(grid, i+1, n-1, j+1, m-1);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n\n            f = cal(grid, 0,n-1, j+1, m-1);\n\n            for (int i = 0; i < n-1; i++) {\n                int sec = cal(grid, 0, i, 0, j);\n                int three = cal(grid, i+1, n-1, 0, j);\n                ans = Math.min(ans, (f==0?1:f) + (sec==0?1:sec) + (three==0?1:three));\n            }\n\n        }\n        return ans;\n\n    }\n\n\n    public int cal(int[][] grid, int T , int B, int L, int R) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int l = Integer.MAX_VALUE;\n        int r = Integer.MIN_VALUE;\n        int t = Integer.MAX_VALUE;\n        int b = Integer.MIN_VALUE;\n\n        for (int i = T; i <= B; i++) {\n            for (int j = L; j <= R; j++) {\n                if(grid[i][j] == 1){\n                    l = Math.min(j, l);\n                    r = Math.max(j, r);\n                    t = Math.min(i, t);\n                    b = Math.max(i, b);\n                }\n            }\n        }\n        return (r-l+1)*(b-t+1);\n    }\n}",
    "submit_ts": "1719112799",
    "subm_id": "541394303"
}