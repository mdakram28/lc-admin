{
    "username": "TulasiRaj",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n       int n = nums.length;\n       int d[] = new int[100001];\n       int l=0; int r=n-1; int cnt = 0;\n       List<Integer> res = new ArrayList<>();\n       List<Integer> limit = new ArrayList<>();\n       while(l<r)\n       {\n           int t = Math.abs(nums[r]-nums[l]);\n           if(nums[r]>nums[l])\n           {\n               int max = Math.max(nums[r],k-nums[l]);\n               limit.add(max);\n           }\n           else{\n               int max = Math.max(nums[l],k-nums[r]);\n               limit.add(max);\n           }\n           res.add(t);\n           d[t]++;\n           l++;r--;\n       }\n       Collections.sort(limit); int ans = n;\n       for(int i=0;i<res.size();i++)\n       {\n           int val = helper(limit,res.get(i));\n           if(val-d[res.get(i)]<ans)\n           {\n               ans = val-d[res.get(i)];\n               // System.out.println(res.get(i)+\" \"+ans);\n           }\n       }\n       return ans;\n    }\n    public int helper(List<Integer> limit, int t)\n    {\n        int low = 0; int high = limit.size()-1;int ans = 0;\n        while(low<=high)\n        {\n            int mid = (low+high)/2;\n            if(limit.get(mid)<t){\n                ans = mid+1;\n                low = mid+1;\n            }\n            else {\n               high = mid-1;\n            }\n        }\n        return (limit.size()-ans)+ans*2;\n    }\n}",
    "submit_ts": "1721489701",
    "subm_id": "1327461132"
}