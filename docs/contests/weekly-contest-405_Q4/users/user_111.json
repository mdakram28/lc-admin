{
    "username": "Rajdeep_Nagar",
    "submission": "class Solution {\npublic:\n    class trieNode {\n    public:\n        unordered_map<char, trieNode*> ch;\n        vector<pair<int, int>> we;\n        int cnt=0;\n    };\n\n    class Trie {\n    public:\n        trieNode* root;\n        Trie() {\n            root = new trieNode();\n        }\n        void build(string& w, int c) {\n            int count=0;\n            trieNode* node = root;\n            for (char c : w) {\n                if (!node->ch.count(c)) {\n                    count++;\n                    node->ch[c] = new trieNode();\n                }\n                node = node->ch[c];\n            }\n            node->we.emplace_back(w.size(), c);\n            node->cnt++;\n        }\n    };\n  \n    int minimumCost(string t, vector<string>& ws, vector<int>& cs) {\n        bool flag=false;\n        Trie trie;\n        for (int i=0; i<ws.size(); ++i) {\n            trie.build(ws[i], cs[i]);\n        }\n        int n = t.size();\n        vector<int> dp(n+1, INT_MAX);\n        dp[0] = 0;\n        for (int i=0; i<n; ++i) {\n            if (dp[i] == INT_MAX) \n                continue;\n            trieNode* node = trie.root;\n            for (int j=i; j<n; ++j) {\n                if (!node->ch.count(t[j])) \n                    break;\n                node = node->ch[t[j]];\n                for (auto& [l, c] : node->we) {\n                    if (j+1>=l) {\n                        if(dp[j+1]!=-1)\n                        flag=true;\n                        if(dp[j+1]>dp[i]+c)\n                            dp[j+1]=dp[i]+c;\n                    }\n                    \n                \n                }\n            }\n            \n        }\n        \n        if(dp[n]==INT_MAX)\n            return -1;\n        \n        return dp[n];\n    }\n};",
    "submit_ts": "1720321392",
    "subm_id": "1312321656"
}