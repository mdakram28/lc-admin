{
    "username": "iamtan-suan-qing-na",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        count = defaultdict(int)\n        lst_m = []\n        for i in range(n >> 1):\n            x = abs(nums[i] - nums[n - i - 1])\n            m = max(nums[i], nums[n - i - 1], k - nums[i], k - nums[n - i - 1])\n            count[x] += 1\n            lst_m.append(m)\n\n        result = inf\n        scm = sorted(Counter(lst_m).items())\n        i = 0\n        for X in sorted(count):\n            while i < len(scm) and scm[i][0] < X:\n                i += scm[i][1]\n            total = (n >> 1) - count[X] + i\n            result = min(result, total)\n\n        return result\n\n    \n",
    "submit_ts": "1721490678",
    "subm_id": "548323847"
}