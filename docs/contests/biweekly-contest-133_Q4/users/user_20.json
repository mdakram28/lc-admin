{
    "username": "stupidRR",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<long long> req(n+1,-1);\n        for(auto requ : requirements)\n            req[ requ[0]+1 ]=requ[1];\n        const int mod=1e9+7;\n        long long inversions=(n*n-n)/2ll;\n        \n        vector<long long> dp(inversions+1,0);\n        dp[0]=1ll;\n        for(int i=1;i<=n;i++)\n        {\n            vector<long long> ndp(inversions+1,0);\n            \n            long long prefixSum=0ll;\n            for(int j=0;j<=inversions;j++)\n            {\n                prefixSum=(prefixSum+dp[j])%mod;\n                if(j>=i)\n                    prefixSum=(prefixSum-dp[j-i]+mod)%mod;\n                ndp[j]=prefixSum;\n            }\n            \n            swap(dp,ndp);\n            if(req[i]!=-1)\n            {\n                for(int j=0;j<=inversions;j++)\n                {\n                    if(j!=req[i])\n                        dp[j]=0;\n                }\n            }\n        }\n        \n        long long ans=0ll;\n        for(auto ele : dp)\n            ans=(ans+ele)%mod;\n        return ans;\n    }\n};",
    "submit_ts": 1719067677.0
}