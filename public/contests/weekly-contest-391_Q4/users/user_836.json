{
    "username": "enots43",
    "submission": "class Solution {\npublic:\n    int dist(vector<vector<int>>& A, int N){\n        vector<int> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i] = A[i][0] + A[i][1];\n            V1[i] = A[i][0] - A[i][1];\n        }\n\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        int maximum\n            = max(V.back() - V.front(), V1.back() - V1.front());\n\n        return maximum;\n    }\n    \n    int minimumDistance(vector<vector<int>>& A) {\n        int N = A.size();\n        vector<pair<int, int>> V(N), V1(N);\n\n        for (int i = 0; i < N; i++) {\n            V[i] = {A[i][0] + A[i][1], i };\n            V1[i] = {A[i][0] - A[i][1], i};\n        }\n\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n\n        int maximum = max(V.back().first - V.front().first, V1.back().first - V1.front().first);\n        \n        int id1 = V.back().second;\n        int id2 = V.front().second;\n\n        if (V.back().first - V.front().first < V1.back().first - V1.front().first){\n            id1 = V1.back().second;\n            id2 = V1.front().second;\n        }\n\n        // cout << id1<<\" \"<<id2<<\" \";\n        \n        vector<vector<int>> temp = A;\n        \n        temp.erase(temp.begin() + id1);\n        \n        int mx1 = dist(temp, temp.size());\n        \n        temp = A;\n        temp.erase(temp.begin() + id2);\n        \n        int mx2 = dist(temp, temp.size());\n        // cout << maximum<<\" \"<<mx1<<\" \"<<mx2<<\" : \";\n\n        return min({maximum, mx1, mx2});\n    }\n};"
}