{
    "username": "kashishnegi2303",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long count1 = 1, count2 = 1;\n        vector<pair<int, int>> vec;\n        for(int i = 0; i < m-1; i++) vec.push_back({horizontalCut[i], 0});\n        for(int i = 0; i < n-1; i++) vec.push_back({verticalCut[i], -1});\n        sort(vec.begin(), vec.end(), [&](pair<int, int> p1, pair<int, int> p2) {\n           return p1.first > p2.first; \n        });\n        long long ans = 0;\n        for(int i = 0; i < vec.size(); i++) {\n            if(vec[i].second == 0) {\n                ans += vec[i].first *1LL* count2;\n                count1++;\n            } else {\n                ans += vec[i].first *1LL* count1;\n                count2++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926775",
    "subm_id": "1320296023"
}