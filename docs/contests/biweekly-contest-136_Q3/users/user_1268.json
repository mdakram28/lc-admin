{
    "username": "juzZ__",
    "submission": "class Solution {\npublic:\n    \n    long long rec(int idx, vector<pair<int,int>> & vp, vector<vector<long long>> & dp, int fac)\n    {\n        if (idx==vp.size())\n        {\n            if (fac==0) return 0;\n            return 1e7;\n        }\n        if (dp[idx][fac]!=-1) return dp[idx][fac];\n        \n        long long mx = 1e6;\n        \n        // convert all elements to 0\n        mx = min(mx, vp[idx].first + rec(idx+1, vp, dp, (fac+4 - vp[idx].first)%4));\n        // convert all elements to 1\n        mx = min(mx, vp[idx].second + rec(idx+1, vp, dp, (fac+vp[idx].second)%4));\n        \n        return dp[idx][fac] = mx;\n    }\n    \n    int minFlips(vector<vector<int>>& grid) {\n        vector<pair<int, int>> vp;\n        int n = grid.size(), m = grid[0].size();\n        int limx = n/2, limy = m/2;\n        for (int i=0; i<n/2; i++)\n        {\n            for (int j=0; j<m/2; j++)\n            {\n                int ones = grid[i][j] + grid[n-1-i][j] + grid[n-1-i][m-1-j] + grid[i][m-1-j];\n                int zero = 4 - ones;\n                vp.push_back({ones, zero});\n            }\n        }\n        if (n&1)\n        {\n            for (int j=0; j<m/2; j++)\n            {\n                int ones = grid[n/2][j] + grid[n/2][m-1-j]; \n                int zero = 2 - ones;\n                vp.push_back({ones, zero});\n            }\n        }\n        if (m&1)\n        {\n            for (int i=0; i<n/2; i++)\n            {\n                int ones = grid[i][m/2] + grid[n-1-i][m/2];\n                int zero = 2 - ones;\n                vp.push_back({ones, zero});\n            }\n        }\n        if (n&1 && m&1)\n        {\n            int ones = grid[n/2][m/2];\n            int zero = 1- ones;\n            vp.push_back({ones, zero});\n        }\n        int tot = 0;\n        for (int i=0; i<n; i++)\n        {\n            for (int j=0; j<m; j++) tot += (grid[i][j]);\n        }\n        vector<vector<long long>> dp (vp.size()+2, vector<long long> (6, -1));\n        return rec(0, vp, dp, tot%4);\n        return 0;\n        \n    }\n};",
    "submit_ts": "1722698798",
    "subm_id": "1343192166"
}