{
    "username": "anupamdas7959",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1 or k == 3 or k == 9:\n            result = []\n            for _ in range(n):\n                result.append(\"9\")\n            return \"\".join(result)\n        if k == 2 or k == 5:\n            end_digit = \"8\" if k == 2 else \"5\"\n            result = []\n            if n > 1:\n                result.append(end_digit)\n            for _ in range(1, n - 1):\n                result.append(\"9\")\n            result.append(end_digit)\n            return \"\".join(result)\n        if k == 4:\n            if n <= 4:\n                return \"8\" * n\n            result = [\"88\"]\n            for _ in range(n - 4):\n                result.append(\"9\")\n            result.append(\"88\")\n            return \"\".join(result)\n        if k == 6:\n            if n == 1:\n                return \"6\"\n            if n == 2:\n                return \"66\"\n            if n % 2 == 0:\n                half = n // 2\n                result = [\"8\"]\n                for _ in range(half - 2):\n                    result.append(\"9\")\n                result.append(\"7\")\n                half_string = \"\".join(result)\n                return half_string + half_string[::-1]\n            else:\n                half = n // 2\n                result = [\"8\"]\n                for _ in range(half - 1):\n                    result.append(\"9\")\n                half_string = \"\".join(result)\n                return half_string + \"8\" + half_string[::-1]\n        if k == 8:\n            if n <= 6:\n                return \"8\" * n\n            result = [\"888\"]\n            for _ in range(n - 6):\n                result.append(\"9\")\n            result.append(\"888\")\n            return \"\".join(result)\n        # k == 7\n        cycle = [\"7\", \"77\", \"5\", \"77\", \"7\", \"\", \"4\", \"44\", \"6\", \"44\", \"4\", \"\"]\n        value = cycle[(n - 1) % len(cycle)]\n        queue = deque(list(value))\n        while len(queue) < n:\n            queue.appendleft(\"9\")\n            queue.append(\"9\")\n        return \"\".join(queue)",
    "submit_ts": "1723952482",
    "subm_id": "1359797287"
}