{
    "username": "n124345679976",
    "submission": "\n#define ll long long\ntemplate<int MOD>\nstruct mint {\n  unsigned x;\n  mint() : x(0) { }\n  mint(signed sig) : x(((sig)%MOD+MOD)%MOD) {}\n  mint(signed long long sig) : x(((sig)%MOD+MOD)%MOD) { }\n  int get() const { return (int)x; }\n  mint pow(ll p) { mint res = 1, a = *this; while (p) { if (p & 1) res *= a; a *= a; p >>= 1; } return res; }\n \n  mint &operator+=(mint that) { if ((x += that.x) >= MOD) x -= MOD; return *this; }\n  mint &operator-=(mint that) { if ((x += MOD - that.x) >= MOD) x -= MOD; return *this; }\n  mint &operator*=(mint that) { x = (unsigned long long)x * that.x % MOD; return *this; }\n  mint &operator/=(mint that) { return (*this) *= that.pow(MOD - 2); }\n \n  mint operator+(mint that) const { return mint(*this) += that; }\n  mint operator-(mint that) const { return mint(*this) -= that; }\n  mint operator*(mint that) const { return mint(*this) *= that; }\n  mint operator/(mint that) const { return mint(*this) /= that; }\n  bool operator<(mint that) const { return x < that.x; }\n  friend ostream& operator<<(ostream &os, mint a) { os << a.x; return os; }\n};\ntypedef mint<1000000007> mint17;\ntypedef mint<998244353> mint99;\nvoid __print(int x) {cout << x;}\nvoid __print(long x) {cout << x;}\nvoid __print(long long x) {cout << x;}\nvoid __print(unsigned x) {cout << x;}\nvoid __print(unsigned long x) {cout << x;}\nvoid __print(unsigned long long x) {cout << x;}\nvoid __print(float x) {cout << x;}\nvoid __print(double x) {cout << x;}\nvoid __print(long double x) {cout << x;}\nvoid __print(char x) {cout << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cout << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cout << (x ? \"true\" : \"false\");}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cout << '{'; __print(x.first); cout << \", \"; __print(x.second); cout << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cout << '{'; for (auto &i: x) cout << (f++ ? \", \" : \"\"), __print(i); cout << \"}\";}\nvoid _print() {cout << \"]\\n\";}\nvoid _println() {}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cout << \", \"; _print(v...);}\ntemplate <typename T, typename... V>\nvoid _println(T t, V... v) {__print(t); if (sizeof...(v)) cout << \" \"; _println(v...);}\n#define dbg(x...) cout << \"\\e[91m\"<<__func__<<\":\"<<__LINE__<<\" [\" << #x << \"] = [\"; _print(x); cout << \"\\e[39m\" << endl;\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        sort(r.begin(), r.end());\n        int k = r.back()[1];\n        vector<mint17> dp(k+1);\n        dp[0] = 1;\n        for(int i=1;i<r.size();i++) if(r[i-1][1] > r[i][1]) return 0;\n        int pre = 0;\n        for(int i=0;i<r.size();i++){\n            int e = r[i][0], c = r[i][1];\n            for(int l=pre;l <= e;l++){\n                vector<mint17> ndp(k+1);\n                mint17 su = 0;\n                for(int m=0;m <= k;m++){\n                    su += dp[m];\n                    if(m >= l + 1) su -= dp[m-l-1];\n                    ndp[m] = su;\n                }\n                dp = std::move(ndp);\n            }\n            for(int i=0;i<=k;i++) if(i != c) dp[i] = 0;\n            pre = e + 1;\n            \n        }\n        mint17 ans = 0;\n        for(int i=0;i<=k;i++) ans += dp[i];\n        return ans.x;\n        \n    }\n};",
    "submit_ts": 1719068120.0
}