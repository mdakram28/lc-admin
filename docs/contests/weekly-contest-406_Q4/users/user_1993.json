{
    "username": "mukheshkumar",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& h, vector<int>& v) {\n        priority_queue<pair<long long,char>> pq; \n        int n1 = h.size();\n        int n2 = v.size();\n        for(int i = 0;i<n1;i++){\n            pq.push({h[i],'h'});\n        }\n        for(int i = 0;i<n2;i++){\n            pq.push({v[i],'v'});\n        }\n        long long hor = 1;\n        long long ver = 1;\n        long long ans= 0;\n        while(!pq.empty()){\n            long long num = pq.top().first;\n            char ch =  pq.top().second;\n            if(ch == 'h'){\n                ans = ans + (num * hor);\n                ver++;\n            }\n            else{\n                 ans = ans + (num * ver);\n                hor++;\n            }\n            pq.pop();\n            \n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926275",
    "subm_id": "1320281297"
}