{
    "username": "Tarun_02",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> diff(n);\n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long long totalOperations = 0;\n        long long currentSegmentDiff = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) ||\n                (diff[i - 1] < 0 && diff[i] < 0)) {\n                long long additionalOperations =\n                    abs(diff[i]) - abs(currentSegmentDiff);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n                currentSegmentDiff = diff[i];\n            } else {\n                totalOperations += abs(diff[i]);\n                currentSegmentDiff = diff[i];\n            }\n        }\n\n        return totalOperations;\n    }\n};\n",
    "submit_ts": "1721533221",
    "subm_id": "1328004053"
}