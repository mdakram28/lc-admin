{
    "username": "ning2ing",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int K) {\n        int n = nums.length;\n        Map<Integer, Long> cnt = new HashMap<>();\n        // v,l,r\n        List<int[]> b = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            int x = nums[i];\n            for (int[] p : b) {\n                p[0] &= x;\n            }\n            b.add(new int[]{x, i, i + 1});\n            int k = 0;\n            for (int j = 1; j < b.size(); j++) {\n                int[] q = b.get(j);\n                if (b.get(k)[0] == q[0]) {\n                    b.get(k)[2] = q[2];\n                } else {\n                    k++;\n                    b.set(k, q);\n                }\n            }\n            // b = b[:k+1]\n            b.subList(k + 1, b.size()).clear();\n            for (int[] p : b) {\n                cnt.put(p[0], cnt.getOrDefault(p[0], 0L) + p[2] - p[1]);\n            }\n        }\n\n        return cnt.getOrDefault(K, 0L);\n    }\n}",
    "submit_ts": "1720277973",
    "subm_id": "544559949"
}