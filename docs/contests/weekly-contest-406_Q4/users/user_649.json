{
    "username": "n_maurya_01",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long totalCost = 0;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        int hIndex = 0, vIndex = 0;\n        int hSegments = 1, vSegments = 1;\n        while (hIndex < horizontalCut.size() && vIndex < verticalCut.size()) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += horizontalCut[hIndex] * vSegments;\n                hIndex++;\n                hSegments++;\n            } else {\n                totalCost += verticalCut[vIndex] * hSegments;\n                vIndex++;\n                vSegments++;\n            }\n        }\n        while (hIndex < horizontalCut.size()) {\n            totalCost += horizontalCut[hIndex] * vSegments;\n            hIndex++;\n            hSegments++;\n        }\n        while (vIndex < verticalCut.size()) {\n            totalCost += verticalCut[vIndex] * hSegments;\n            vIndex++;\n            vSegments++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925699",
    "subm_id": "1320263321"
}