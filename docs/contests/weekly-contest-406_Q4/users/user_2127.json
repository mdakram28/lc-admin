{
    "username": "Gautam221101",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int H=horizontalCut.size();\n        int V=verticalCut.size();\n\n        priority_queue<pair<int,pair<int,int>>> pq;\n        for(int i=0;i<H;i++){\n            pq.push({horizontalCut[i],{i,0}});\n        }\n        for(int i=0;i<V;i++){\n            pq.push({verticalCut[i],{i,1}});\n        }\n\n        long long cost=0;\n        int vCut=0;\n        int hCut=0;\n        while(!pq.empty()){\n            auto cut=pq.top();\n            int cutType=cut.second.second;\n            int currCost=cut.first;\n            int ind=cut.second.first;\n            pq.pop();\n            if(cutType==0){\n                cost+=(vCut+1)*currCost;\n                hCut++;\n            }\n            else{\n                cost+=(hCut+1)*currCost;\n                vCut++;\n            }\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926356",
    "subm_id": "1320283741"
}