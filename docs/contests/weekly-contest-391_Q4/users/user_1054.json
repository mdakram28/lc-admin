{
    "username": "etttlandoo",
    "submission": "class Solution {\npublic:\n\u00a0\u00a0 \n\u00a0\u00a0\u00a0 int minimumDistance(vector<vector<int>>& a) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 vector<pair<int,int>> v;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // what if we remove this point ?\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 multiset<int> sum;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 multiset<int> diff;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(auto it:a){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sum.insert(it[0]+it[1]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 diff.insert(it[0]-it[1]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int ans=INT_MAX;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int n=a.size();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0;i<n;i++){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int cursum=a[i][0]+a[i][1];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int curdiff=a[i][0]-a[i][1];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sum.erase(sum.find(cursum));\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 diff.erase(diff.find(curdiff));\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // //min of diff, sum waali values \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int curans=INT_MAX;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int val1=*(sum.rbegin())- *(sum.begin());\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int val2=*(diff.rbegin())- *(diff.begin());\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 curans=max(val1,val2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ans=min(ans,curans);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sum.insert(cursum);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 diff.insert(curdiff);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return ans;\n\u00a0\u00a0\u00a0 }\n};"
}