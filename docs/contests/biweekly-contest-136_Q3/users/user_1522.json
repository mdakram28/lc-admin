{
    "username": "Hardik_4",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size(), cols = grid[0].size();\n        int totalFlips = 0;\n        totalFlips += handleCenterCell(grid, rows, cols);\n        vector<int> edgeFlips = handleOddEdges(grid, rows, cols);\n        totalFlips += calculateEdgeFlips(edgeFlips);\n        totalFlips += handle2x2Subgrids(grid, rows, cols);\n        return totalFlips;\n    }\n\nprivate:\n    int handleCenterCell(const vector<vector<int>>& grid, int rows, int cols) {\n        if (rows % 2 == 1 && cols % 2 == 1) {\n\n            int nr=rows/2;\n            int nc=cols/2;\n            return grid[nr][nc];\n        }\n        return 0;\n    }\n    \n    vector<int> handleOddEdges(const vector<vector<int>>& grid, int rows, int cols) {\n        vector<int> flips(3, 0);\n        \n        if (rows % 2 == 1) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int nr=rows/2;\n                int nc=cols/2;\n                flips[grid[nr][j] + grid[nr][cols - 1 - j]]++;\n            }\n        }\n        \n        if (cols % 2 == 1) {\n            for (int i = 0; i < rows / 2; ++i) {\n                flips[grid[i][cols / 2] + grid[rows - 1 - i][cols / 2]]++;\n            }\n        }\n        \n        return flips;\n    }\n    \n    int calculateEdgeFlips(const vector<int>& flips) {\n        if (flips[2] % 2 == 1) {\n            return (flips[1] > 0) ? flips[1] : 2;\n        }\n        return flips[1];\n    }\n    \n    int handle2x2Subgrids(const vector<vector<int>>& grid, int rows, int cols) {\n        int flips = 0;\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int sum = grid[i][j] + grid[rows-1-i][j] + grid[i][cols-1-j] + grid[rows-1-i][cols-1-j];\n                if (sum != 0 && sum != 4) {\n                    flips += min(sum, 4 - sum);\n                }\n            }\n        }\n        return flips;\n    }\n};",
    "submit_ts": "1722699699",
    "subm_id": "1343219618"
}