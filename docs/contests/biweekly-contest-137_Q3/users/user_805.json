{
    "username": "rishabh22401",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        int i ; \n        int j ; \n        long long sm = -1e15;\n        int k ; \n        int col = grid[0].size();\n        int row= grid.size();\n        vector<vector<int > > dum(col);\n        for(i=0;i<col; i++){\n            vector<pair<int,int> >dum2;\n            for(j = 0; j<row;j++){\n                dum2.push_back({grid[j][i],j});\n            }\n            sort(dum2.begin(),dum2.end());\n            int sz=dum2.size();\n            for(int k = sz-1; k >= max(sz-3,0); k--){\n                dum[i].push_back(dum2[k].second);\n            }\n        }\n        \n        for(i = 0; i<col ; i++){\n            for(j=i+1; j< col ; j ++){\n                for(k = j+1 ; k<col ;k++){\n                     // try all out the possiblities\n                     vector<int>dum1 = dum[i];\n                     vector<int> dum2 = dum[j];\n                     vector<int> dum3= dum[k];\n                     for(auto x : dum1){\n                        for(auto y : dum2){\n                            for(auto z : dum3){\n                                if(x!=y && x!=z && y!=z){\n                                    sm= max(sm, (long long)grid[x][i] + grid[y][j] + grid[z][k]);\n                                }\n                            }\n                        }\n                     }\n                }\n            }\n        }\n        return sm;\n    }\n};",
    "submit_ts": "1723909603",
    "subm_id": "1359198821"
}