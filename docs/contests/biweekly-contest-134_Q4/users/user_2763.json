{
    "username": "punitiiitian",
    "submission": "\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long totalCount = 0;\n        \n        unordered_map<long long, long long> previousMap;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> currentMap; \n\n            if (nums[i] == k) {\n                ++totalCount;\n            }\n            currentMap[nums[i]] = 1;\n\n            for (auto& [prevVal, prevFreq] : previousMap) {\n                long long newAndResult = prevVal & nums[i];\n                if (newAndResult == k) {\n                    totalCount += prevFreq;\n                }\n                currentMap[newAndResult] += prevFreq;\n            }\n            \n            previousMap = currentMap;\n        }\n        \n        return totalCount;\n    }\n};\n",
    "submit_ts": "1720280190",
    "subm_id": "1311780166"
}