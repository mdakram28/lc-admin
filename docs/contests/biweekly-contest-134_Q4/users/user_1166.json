{
    "username": "raunakmishra1243",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         int n = nums.size();\n         long long ans = 0;\n        \n         unordered_map<long long, long long> mp;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long> curr;\n\n            if (nums[i] == k)\n            {\n                ans++;\n            }\n            curr[nums[i]] = 1;\n\n            for (auto it : mp)\n              {\n                long long val=it.first;\n                long long fr=it.second;\n                long long nw = val & nums[i];\n                if (nw == k) {\n                    ans += fr;\n                }\n                curr[nw] += fr;\n            }\n            \n            mp = curr;\n        }\n//           vector<int>e=nums;\n//         long long i=0, j=e.size()-1;\n//         long long res=0;\n//         long long curr=0;\n//         while(i<=j){\n//             if(curr>=e[i]){\n//                 res+=curr/e[i];\n//                 curr%=e[i];\n//             } else if(res>0 && i<=j){\n//                 curr+=e[j];\n//                 j--;\n//             } else{\n//                 break;\n//             }\n//         }\n        return ans;\n    \n    }\n};",
    "submit_ts": "1720278638",
    "subm_id": "1311717855"
}