{
    "username": "braindroid",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = (int)a.size();\n        for(int i = 0 ; i < n ; i++) {\n            a.push_back(a[i]);\n        }\n        n = (int)a.size();\n        int last1 = -1;\n        int last0 = -1;\n        vector<int>pref(n+1,0);\n        for(int i = 0 ; i < n - 1 ; i++) {\n            if(a[i] != a[i+1]) {\n                pref[i+1]++;\n            }\n            pref[i+1] += pref[i];\n        }\n        int ans = 0;\n        for(int i = 0 ; i < n/2 ; i++) {\n            int L = i+1;\n            int R = (i + k - 1 + 1 - 1);\n            if(i+k-1 < n && (pref[R] - pref[L-1] == k-1)) {\n                ++ans;\n            }\n        }\n        return ans;\n        // vector<int>pref1(n+1,0);\n        // vector<int>pref2(n+1,0);\n        // vector<int>mp1;\n        // vector<int>mp2;\n        // map<int,int>m1;\n        // map<int,int>m2;\n        // for(int i = 0 ; i < n ; i++) {\n        //     if(a[i]%2) {\n        //         mp1.push_back(i);\n        //         pref1[i+1]++;\n        //         m1[i]++;\n        //     } else {\n        //         mp2.push_back(i);\n        //         pref2[i+1]++;\n        //         m2[i]++;\n        //     }\n        //     pref1[i+1] += pref1[i];\n        //     pref2[i+1] += pref2[i];\n        // }\n        // int N = (int)mp1.size();\n        // int ans = 0;\n        // for(int i = 0 ; i < N - 1 ; i++) {\n        //     int x = mp1[i] + k - 1 + 1;\n        //     int y = mp1[i] + 1;\n        //     if(m1.find(x) != m1.end() && (pref2[x] - pref2[y] == (k - 2))) {\n        //         ++ans;\n        //     }\n        // }\n        // N = (int)mp2.size();\n        // for(int i = 0 ; i < N - 1 ; i++) {\n        //     int x = mp2[i] + k - 1 + 1;\n        //     int y = mp2[i] + 1;\n        //     if(m2.find(x) != m2.end() && (pref1[x] - pref1[y]) == (k-2)) {\n        //         ++ans;\n        //     }\n        // }\n        // return ans;\n    }\n};",
    "submit_ts": "1720278879",
    "subm_id": "1311728160"
}