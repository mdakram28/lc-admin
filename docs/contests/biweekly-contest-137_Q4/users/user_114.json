{
    "username": "Ahmed Yahia",
    "submission": "class Solution {\npublic:\n    vector<vector<pair<int,int>>>mx;\n    multiset<pair<int,int>,greater<>>st;\n    long long calc(int a,int b) {\n        int in1,in2,out1,out2;\n        long long ans = mx[a][0].first;\n        st.erase(st.find(mx[a][0]));\n        st.erase(st.find(mx[a][1]));\n        st.erase(st.find(mx[a][2]));\n        int ca = mx[a][0].second,cb;\n        if (mx[b][0].second == ca) {\n            ans += mx[b][1].first;\n            cb=mx[b][1].second;\n        } else {\n            ans += mx[b][0].first;\n            cb=mx[b][0].second;\n        }\n        st.erase(st.find(mx[b][0]));\n        st.erase(st.find(mx[b][1]));\n        st.erase(st.find(mx[b][2]));\n        for(auto it : st){\n            if(it.second==ca || it.second == cb)continue;\n            ans+=it.first;\n            break;\n        }\n        st.insert((mx[b][0]));\n        st.insert((mx[b][1]));\n        st.insert((mx[b][2]));\n        st.insert((mx[a][0]));\n        st.insert((mx[a][1]));\n        st.insert((mx[a][2]));\n        return ans;\n\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        mx.resize(board.size());\n        for (int i = 0; i < board.size(); ++i) {\n            int m = -1e9;\n            for (int j = 0; j < board[i].size(); ++j) {\n                mx[i].push_back({board[i][j], j});\n            }\n            sort(mx[i].begin(), mx[i].end(), __greater());\n            st.insert(mx[i][0]);\n            st.insert(mx[i][1]);\n            st.insert(mx[i][2]);\n        }\n        long long ans=-1e18;\n        for(int i=0;i<board.size();++i){\n            for(int j=0;j<board.size();++j){\n                if(i==j)continue;\n                ans=max(ans,calc(i,j));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908257",
    "subm_id": "1359144946"
}