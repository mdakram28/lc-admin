{
    "username": "hpstory",
    "submission": "public class Solution {\n    public long MinimumCost(int n, int m, int[] horizontalCut, int[] verticalCut)\n    {\n        PriorityQueue<(int, int), int> queue = new();\n        for (int i = 0; i < n - 1; i++) queue.Enqueue((horizontalCut[i], 0), -horizontalCut[i]);\n        for (int i = 0; i < m - 1; i++) queue.Enqueue((verticalCut[i], 1), -verticalCut[i]);\n        long hc = 1, vc = 1;\n        long result = 0;\n        while (queue.Count > 0)\n        {\n            var t = queue.Dequeue();\n            if (t.Item2 == 0)\n            {\n                result += (t.Item1 * vc);\n                hc++;\n            }\n            else\n            {\n                result += (t.Item1 * hc);\n                vc++;\n            }\n        }\n\n        return result;\n    }\n}",
    "submit_ts": "1720925879",
    "subm_id": "546442561"
}