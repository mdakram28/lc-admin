{
    "username": "phoenixwazz",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(); \n        int ans = 0; \n         \n        if (n%2 == 1 && m%2 == 1) { \n            if (grid[n/2][m/2] == 1) { \n                ans += 1; \n            } \n        } \n \n        vector<int> temp(3, 0); \n        if (n%2 == 1) { \n            int left = 0, right = m - 1; \n            while (left < right) { \n                int val = grid[n/2][left] + grid[n/2][right]; \n                temp[val] += 1; \n                left++; \n                right--; \n            } \n        } \n \n        if (m%2 == 1) { \n            int left = 0, right = n - 1; \n            while (left < right) { \n                int val = grid[left][m/2] + grid[right][m/2]; \n                temp[val] += 1; \n                left++; \n                right--; \n            } \n        } \n \n        if (temp[2]%2 == 1) { \n            if (temp[1] > 0) { \n                ans += temp[1]; \n            } else { \n                ans += 2; \n            } \n        } else { \n            ans += temp[1]; \n        } \n \n        for (int i = 0; i < n/2; i++) { \n            for (int j = 0; j < m/2; j++) { \n                int a = grid[i][j]; \n                int b = grid[n-1-i][j]; \n                int c = grid[i][m-1-j]; \n                int d = grid[n-1-i][m-1-j]; \n \n                int val = a + b + c + d; \n \n                if (val != 0 && val != 4) { \n                    ans += min(val, 4 - val); \n                } \n            } \n        } \n \n        return ans; \n    }\n};",
    "submit_ts": "1722699824",
    "subm_id": "1343223481"
}