{
    "username": "navin_barnwal",
    "submission": "class Solution {\n    class Pair {\n        int diff, freq;\n        Pair(int d, int f){\n            this.diff = d;\n            this.freq = f;\n        }\n    }\n    public int minChanges(int[] nums, int k) {\n        Map<Integer, Integer> map = new HashMap<>();\n        int n = nums.length;\n        for(int i=0; i<n/2; i++){\n            int el = Math.abs(nums[i]-nums[n-i-1]);\n            map.put(el, map.getOrDefault(el,0)+1);\n        }\n        int mx=0, diff=0;\n        PriorityQueue<Pair> pq = new PriorityQueue<>((p1,p2) -> (p1.diff-p2.diff));\n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            pq.add(new Pair(en.getKey(), en.getValue()));\n        }\n        // System.out.println(diff);\n        int ans = Integer.MAX_VALUE, mf=0;\n        while(!pq.isEmpty()){\n            Pair p = pq.remove();\n            if(p.freq>mf){\n                ans = Integer.min(ans, findCnt(nums, p.diff, k));\n                mf = p.freq;\n            }\n        }\n        \n        return ans;\n    }\n    int findCnt(int[] nums, int diff, int k){\n        int n = nums.length, ans=0;\n        for(int i=0; i<n/2; i++){\n            int df = Math.abs(nums[i]-nums[n-i-1]);\n            if(df != diff){\n                if(((k-nums[i])>=diff || nums[i]>=diff || nums[n-i-1]>=diff || (k-nums[n-i-1])>=diff)){\n                    ans += 1;\n                }\n                else{\n                    // System.out.println(i);\n                    ans += 2;\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1721488597",
    "subm_id": "1327427304"
}