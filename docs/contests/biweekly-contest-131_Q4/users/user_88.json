{
    "username": "Oleks_V",
    "submission": "public class Solution {\n    public IList<bool> GetResults(int[][] queries) {\n        var leftseg = new int[100002];\n        var lenseq = new int[100002];\n        var intend = new int[50001];\n        intend[0] = 50000;\n        Update(lenseq, 50000, 50000);\n        var ret = new List<bool>();\n        foreach (var q in queries) {\n            var leftset = Query(leftseg, 0, q[1]);\n            if (q[0] == 1) {\n                var leftlen = q[1] - leftset;\n                var rightlen = intend[leftset] - q[1];\n                Update(lenseq, q[1], leftlen);\n                Update(lenseq, intend[leftset], rightlen);\n                intend[q[1]] = intend[leftset];\n                intend[leftset] = q[1];\n                Update(leftseg, q[1], q[1]);\n            }\n            else {\n                //var leftset = Query(leftseg, 0, q[1]);\n                if (q[1] - leftset >= q[2]) {\n                    ret.Add(true);\n                    //continue;\n                }\n                else {\n                    var max = Query(lenseq, 0, q[1]);\n                    ret.Add(max >= q[2]);\n                }\n            }\n        }\n        return ret;\n    }\n\n    private int Query(int[] segtree, int l, int r) {\n        var n = segtree.Length / 2;\n        var max = 0;\n        for (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n            if ((l & 1) > 0) {\n                max = Math.Max(max, segtree[l++]);\n            }\n            if ((r & 1) > 0) {\n                max = Math.Max(max, segtree[--r]);\n            }\n        }\n        return max;\n    }\n\n    private void Update(int[] segtree, int pos, int val) {\n        var n = segtree.Length / 2;\n        pos += n;\n        segtree[pos] = val;\n        for (var i = pos; i > 1; i >>= 1) {\n            segtree[i >> 1] = Math.Max(segtree[i], segtree[i ^ 1]);\n        }\n    }\n}",
    "submit_ts": 1716650146.0
}