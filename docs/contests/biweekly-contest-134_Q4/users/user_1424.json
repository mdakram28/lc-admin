{
    "username": "hustler11",
    "submission": "class Solution {\npublic:\n    bool solve(int s, int e, vector<vector<int>> &f, int k){\n\n        int len = e-s+1, tmp=0;\n        // cout<<\"in->\"<<s<<\" \"<<e<<endl;\n        for(int i=0; i<31; i++){\n            //cout<<f[e][i]<<\" \"<<f[s][i]<<\" \";\n            int val = f[e][i] - (s==0? 0 : f[s-1][i]);\n            // cout<<i<<\" \"<<val<<\" \"<<len<<endl;\n            if(val>=len)\n                tmp += (1<<i);\n        }\n        return tmp==k;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        long long n = nums.size(), ans = 0;\n        unordered_map<long long, long long> mp, tmp;\n        for (int i=0; i<n; i++){\n            tmp.clear();\n            tmp[nums[i]] = 1;\n            if(nums[i]==k)\n                ans++;\n            \n            for (auto it: mp){\n                long long val = (it.first&nums[i]);\n                tmp[val] += it.second;\n                if (val==k)\n                    ans += it.second;\n            }\n            mp = tmp;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280518",
    "subm_id": "1311792360"
}