{
    "username": "ctong",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        long long ret = 0, hi = 0, vi = 0;\n        while (hi < horizontalCut.size() && vi < verticalCut.size()) {\n            if (horizontalCut[hi] > verticalCut[vi]) {\n                ret += (vi + 1) * horizontalCut[hi];\n                ++hi;\n            } else {\n                ret += (hi + 1) * verticalCut[vi];\n                ++vi;\n            }\n        }\n        while (hi < horizontalCut.size()) {\n            ret += (vi + 1) * horizontalCut[hi];\n            ++hi;\n        }\n        while (vi < verticalCut.size()) {\n            ret += (hi + 1) * verticalCut[vi];\n            ++vi;\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720925910",
    "subm_id": "546442778"
}