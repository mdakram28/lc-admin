{
    "username": "Hughstudy",
    "submission": "class Solution {\n    public long maximumValueSum(int[][] board) {\n        int m = board.length, n = board[0].length;\n        int[][][] downBest = new int[m][][];\n        {\n            int[] row = new int[n];\n            Arrays.fill(row, Integer.MIN_VALUE);\n            for (int i = 0; i < m; ++i) {\n                for (int j = 0; j < n; ++j) {\n                    row[j] = Math.max(row[j], board[i][j]);\n                }\n                downBest[i] = findBestThree(row);\n            }\n        }\n\n        int[][][] upBest = new int[m][][];\n        {\n            int[] row = new int[n];\n            Arrays.fill(row, Integer.MIN_VALUE);\n            for (int i = m - 1; i >= 0; --i) {\n                for (int j = 0; j < n; ++j) {\n                    row[j] = Math.max(row[j], board[i][j]);\n                }\n                upBest[i] = findBestThree(row);\n            }\n        }\n\n        long best = Long.MIN_VALUE;\n        for (int i = 1; i < m - 1; ++i) {\n            int[] row = new int[n];\n            Arrays.fill(row, Integer.MIN_VALUE);\n            for (int j = 0; j < n; ++j) {\n                row[j] = Math.max(row[j], board[i][j]);\n            }\n            int[][] rowBest = findBestThree(row);\n            best = Math.max(best, countBest(downBest[i - 1], rowBest, upBest[i + 1]));\n        }\n        return best;\n    }\n\n    private int[][] findBestThree(int[] row) {\n        PriorityQueue<Integer> queue = new PriorityQueue<>((a, b) -> (Integer.compare(row[a], row[b])));\n        for (int i = 0; i < row.length; ++i) {\n            queue.add(i);\n            if (queue.size() > 3) {\n                queue.poll();\n            }\n        }\n        int[][] res = new int[3][2];\n        for (int i = 0; i < 3; ++i) {\n            int tmp = queue.poll();\n            res[3 - i - 1][0] = tmp;\n            res[3 - i - 1][1] = row[tmp];\n        }\n        return res;\n    }\n\n    private long countBest(int[][] a, int[][] b, int[][] c) {\n        long res = Long.MIN_VALUE;\n        for (int i = 0; i < 3; ++i) {\n            for (int j = 0; j < 3; ++j) {\n                for (int k = 0; k < 3; ++k) {\n                    if (a[i][0] != b[j][0] && a[i][0] != c[k][0] && b[j][0] != c[k][0]) {\n                        res = Math.max(0L + a[i][1] + b[j][1] + c[k][1], res);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1723907234",
    "subm_id": "556324325"
}