{
    "username": "Arnav_63638",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    int func( vector<vector<int>>& points,int ind){\n        vector<pair<int, int>> diff;\n        vector<pair<int, int>> add;\n        int n = points.size();\n        for(int i=0; i<n; i++){\n            if(i==ind) continue;\n            diff.push_back(make_pair(points[i][0]-points[i][1], i));\n            add.push_back(make_pair(points[i][0]+points[i][1], i));\n        }\n        sort(diff.begin(), diff.end());\n        sort(add.begin(), add.end());\n        return max(diff[n-2].first- diff[0].first, add[n-2].first- add[0].first);\n        \n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int, int>> diff(n);\n        vector<pair<int, int>> add(n);\n        for(int i=0; i<n; i++){\n            diff[i].first = points[i][0]-points[i][1];\n            add[i].first = points[i][0]+points[i][1];\n            diff[i].second = i;\n            add[i].second = i;\n        }\n        sort(diff.begin(), diff.end());\n        sort(add.begin(), add.end());\n        // ll a = 0;\n        ll a = add[n-1].first-add[0].first;\n        ll d = diff[n-1].first-diff[0].first;\n        if(a>d){\n            return min(func(points, add[n-1].second), func(points, add[0].second));\n        }\n        \n        return min(func(points, diff[n-1].second), func(points, diff[0].second));\n    }\n};"
}