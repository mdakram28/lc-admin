{
    "username": "abhinav200146",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int numRows = grid.size(), numCols = grid[0].size();\n        int flipCount = 0;\n        \n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            if (grid[numRows / 2][numCols / 2] == 1) {\n                flipCount += 1;\n            }\n        }\n\n        vector<int> counts(3, 0);\n        if (numRows % 2 == 1) {\n            int leftIndex = 0, rightIndex = numCols - 1;\n            for (; leftIndex < rightIndex;) {\n                int total = grid[numRows / 2][leftIndex] + grid[numRows / 2][rightIndex];\n                counts[total] += 1;\n                leftIndex += 1;\n                rightIndex -= 1;\n            }\n        }\n\n        if (numCols % 2 == 1) {\n            int topIndex = 0, bottomIndex = numRows - 1;\n            for (; topIndex < bottomIndex;) {\n                int total = grid[topIndex][numCols / 2] + grid[bottomIndex][numCols / 2];\n                counts[total] += 1;\n                topIndex += 1;\n                bottomIndex -= 1;\n            }\n        }\n\n        if (counts[2] % 2 == 1) {\n            if (counts[1] > 0) {\n                flipCount += counts[1];\n            } else {\n                flipCount += 2;\n            }\n        } else {\n            flipCount += counts[1];\n        }\n\n        int row = 0;\n        while (row < numRows / 2) {\n            int col = 0;\n            while (col < numCols / 2) {\n                int topLeftCorner = grid[row][col];\n                int bottomLeftCorner = grid[numRows - 1 - row][col];\n                int topRightCorner = grid[row][numCols - 1 - col];\n                int bottomRightCorner = grid[numRows - 1 - row][numCols - 1 - col];\n\n                int totalSum = topLeftCorner + bottomLeftCorner + topRightCorner + bottomRightCorner;\n\n                if (totalSum != 0 && totalSum != 4) {\n                    flipCount += min(totalSum, 4 - totalSum);\n                }\n\n                col++;\n            }\n            row++;\n        }\n\n        return flipCount;\n    }\n};\n",
    "submit_ts": "1722699880",
    "subm_id": "1343225134"
}