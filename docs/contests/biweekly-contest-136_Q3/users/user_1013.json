{
    "username": "lime1900",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int[] fourCount = new int[5];\n        int[] twoCount = new int[3];\n        int middle = 0;\n        for (int rowLeft = 0, rowRight = n - 1; rowLeft < rowRight; rowLeft++, rowRight--) {\n            for (int colLeft = 0, colRight = m - 1; colLeft < colRight; colLeft++, colRight--) {\n                fourCount[grid[rowLeft][colLeft] + grid[rowLeft][colRight] + grid[rowRight][colLeft] + grid[rowRight][colRight]]++;\n            }\n            if(m % 2 == 1){\n                twoCount[grid[rowLeft][m / 2] + grid[rowRight][m / 2]]++;\n            }\n        }\n        if(n % 2 == 1){\n            for (int colLeft = 0, colRight = m - 1; colLeft < colRight; colLeft++, colRight--) {\n                twoCount[grid[n / 2][colLeft] + grid[n / 2][colRight]]++;\n            }\n            if(m % 2 == 1){\n                middle = grid[n / 2][m / 2];\n            }\n        }\n        if(twoCount[2] % 2 == 0){\n            return middle + fourCount[1] + fourCount[2] * 2 + fourCount[3] + twoCount[1];\n        }else if(twoCount[1] > 0) {\n            return middle + fourCount[1] + fourCount[2] * 2 + fourCount[3] + twoCount[1];\n        }else {\n            return middle + fourCount[1] + fourCount[2] * 2 + fourCount[3] + 2;\n        }\n\n    }\n}",
    "submit_ts": "1722698888",
    "subm_id": "552273002"
}