{
    "username": "Ayu1_2",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n= grid.size();\n        int m = grid[0].size();\n        int op = 0;\n        if(n > 1 && m > 1){\n            for(int i=0;i<n/2;i++){\n                for(int j=0;j<m/2;j++){\n                    int u = grid[i][j];\n                    int v = grid[i][m-j-1];\n                    int w = grid[n-i-1][j];\n                    int x = grid[n-i-1][m-j-1];\n                    int ones = u + v + w + x;\n                    if(ones <= 2) op+= ones;\n                    else op+= (4 - ones);\n                }\n            }\n        }\n        int c = 0;\n        int c2 = 0;\n        if(n%2){\n            for(int j=0;j<m/2;j++){\n                if(grid[n/2][j] != grid[n/2][m-j-1]){\n                    c++;\n                }\n                else if(grid[n/2][j]) c2++;\n            }\n        }\n        \n        if(m%2){\n            for(int j=0;j<n/2;j++){\n                if(grid[j][m/2] != grid[n-j-1][m/2]){\n                    c++;\n                }\n                else if(grid[j][m/2]) c2++;\n            }\n        }\n        \n        if(c2%2 && c==0) c+= 2;\n        if(n%2 && m%2) c+= grid[n/2][m/2];\n        return op + c;\n    }\n};",
    "submit_ts": "1722699528",
    "subm_id": "1343214442"
}