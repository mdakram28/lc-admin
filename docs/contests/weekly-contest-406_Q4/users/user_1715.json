{
    "username": "eh-",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<int> horiIndex(horizontalCut.size()), vertIndex(verticalCut.size());\n        iota(horiIndex.begin(), horiIndex.end(), 0);\n        iota(vertIndex.begin(), vertIndex.end(), 0);\n        sort(horiIndex.begin(), horiIndex.end(), [&](int l, int r){return horizontalCut[l] > horizontalCut[r];});\n        sort(vertIndex.begin(), vertIndex.end(), [&](int l, int r){return verticalCut[l] > verticalCut[r];});\n        int horiCount = 1, vertCount = 1;\n        int horiCurr = 0, vertCurr = 0;\n        long long res = 0;\n        while(horiCurr < horizontalCut.size() && vertCurr < verticalCut.size()){\n            if(horizontalCut[horiIndex[horiCurr]] > verticalCut[vertIndex[vertCurr]]){\n                res += (long long) horizontalCut[horiIndex[horiCurr]] * horiCount;\n                vertCount++;\n                horiCurr++;\n            }\n            else{\n                res += (long long) verticalCut[vertIndex[vertCurr]] * vertCount;\n                horiCount++;\n                vertCurr++;\n            }\n        }\n        while(horiCurr < horizontalCut.size()){\n            res += (long long) horizontalCut[horiIndex[horiCurr]] * horiCount;\n            horiCurr++;\n        }\n        while(vertCurr < verticalCut.size()){\n            res += (long long) verticalCut[vertIndex[vertCurr]] * vertCount;\n            vertCurr++;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926394",
    "subm_id": "1320284945"
}