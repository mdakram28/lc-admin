{
    "username": "sghosh982",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int n = c.size(), m, ans = 0;\n        for (int i = 0; i < n; i++) c.push_back(c[i]);\n        m = c.size();\n        vector<int> ps(m, 0);\n        for (int i = 0; i < m - 1; i++) {\n            ps[i] = (i ? ps[i - 1] : 0);\n            ps[i] += ((c[i] != c[i + 1]) ? 1 : 0);\n        }\n        for (int i = 0; i < n; i++) {\n            int cnt = ps[i + k - 2] - (i ? ps[i - 1] : 0);\n            if (cnt == k - 1) {\n                // cout << i << \" - \";\n                ans += 1;\n            }\n        }\n        /*\n        cout << '\\n';\n        for (auto &e: c) cout << e << \" \";\n        cout << '\\n';\n        for (auto &e: ps) cout << e << \" \";\n        cout << '\\n';\n        */\n        return ans;\n    }\n};",
    "submit_ts": "1720277466",
    "subm_id": "1311665022"
}