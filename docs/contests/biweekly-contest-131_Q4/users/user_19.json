{
    "username": "42fortitude",
    "submission": "#define file(s) freopen(s\".in\",\"r\",stdin); freopen(s\".out\",\"w\",stdout);\n#define fastio ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n#define all(x) x.begin(), x.end()\n#define sz(s) (int)s.size()\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define se second\n#define fi first\n#define s second\n#define f first\n \n \ntypedef pair < int, int > pii;  \ntypedef vector < int > vi;\ntypedef long double ld;  \ntypedef long long ll;  \n \n//typedef tree < int, null_type, less < int >, rb_tree_tag, tree_order_statistics_node_update > ordered_set;\n \n\nconst int dx[] = {1, -1, 0, 0}, dy[] = {0, 0, 1, -1}, block = 300;\nconst pii base = mp(1e6 + 3, 1e6 + 7), mod = mp(1e9 + 7, 1e9 + 9);\nconst int N = 1e5, inf = 1e9, MOD = 1e9 + 7;\nconst int M = N + 17;\nconst ll INF = 1e18;\n\n \n\nstruct ST{\n    vector < int > t;\n    int n;\n    ST(int n1 = 0) {\n        n = n1;\n        t.resize(4*n);\n    }\n    \n    \n    void update(int pos, int x, int v, int tl, int tr) {\n        if (tl == tr) {\n            t[v] = x;\n            return;\n        }\n        \n        int tm = (tl + tr) >> 1;\n        if (pos <= tm)\n            update(pos, x, v << 1, tl, tm);\n        else\n            update(pos, x, v << 1 | 1, tm + 1, tr);\n        \n        t[v] = max(t[v << 1], t[v << 1 | 1]);\n    }\n    \n    \n    int get(int l, int r, int v, int tl, int tr) {\n        if (l > r || tl > r || l > tr)\n            return 0;\n        \n        if (l <= tl && tr <= r)        \n            return t[v];\n        \n        int tm = (tl + tr) >> 1;\n        return max(get(l, r, v << 1, tl, tm), get(l, r, v << 1 | 1, tm + 1, tr));\n    }\n};\n\nconst int maxn = 5e4;\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {        \n        ST t = ST(maxn);\n        set < int > q;\n        q.insert(0);\n        \n        vector < bool > ans;\n        \n        for (auto tmp : queries) {\n            int tp = tmp[0], x = tmp[1];\n            if (tp == 1) {\n                auto it = q.lower_bound(x);\n                \n                if (it != q.end())\n                    t.update(x, *it - x, 1, 0, maxn - 1);\n                \n                if (it != q.begin()) {\n                    it--;\n                    t.update(*it, x - *it, 1, 0, maxn - 1);\n                }\n                q.insert(x);\n            } else {\n                int sz = tmp[2];\n                int y = 0;\n                auto it = q.lower_bound(x);\n                if (it != q.begin()) {\n                    --it;\n                    y = *it;\n                }\n                int mx = 0;\n                if (y > 0)\n                    mx = t.get(0, y - 1, 1, 0, maxn - 1);\n                mx = max(mx, x - y);                \n                \n                ans.pb(mx >= sz);\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": 1716648934.0
}