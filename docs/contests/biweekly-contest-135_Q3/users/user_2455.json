{
    "username": "ShashGod",
    "submission": "#include <vector>\n#include <map>\n#include <algorithm>\n#include <cmath>\n#include <climits>\n\nclass Solution {\npublic:\n    int minChanges(std::vector<int>& nums, int k) {\n        std::map<int, std::vector<int>> diffToMaxValuesMap;\n        std::vector<int> maxValuesList;\n\n        populateMaps(nums, k, diffToMaxValuesMap, maxValuesList);\n        \n        return findMinimumChanges(nums.size(), diffToMaxValuesMap, maxValuesList);\n    }\n\nprivate:\n    void populateMaps(const std::vector<int>& nums, int k, std::map<int, std::vector<int>>& diffToMaxValuesMap, std::vector<int>& maxValuesList) {\n        int size = nums.size();\n        for (int i = 0; i < size / 2; ++i) {\n            int startElement = nums[i];\n            int endElement = nums[size - i - 1];\n            int currentDiff = std::abs(startElement - endElement);\n\n            int maxPossible = std::max({startElement, endElement, k - startElement, k - endElement});\n            \n            diffToMaxValuesMap[currentDiff].push_back(maxPossible);\n            maxValuesList.push_back(maxPossible);\n        }\n    }\n\n    int findMinimumChanges(int size, const std::map<int, std::vector<int>>& diffToMaxValuesMap, std::vector<int>& maxValuesList) {\n        std::sort(maxValuesList.begin(), maxValuesList.end());\n\n        int minChangesRequired = size; \n        \n        for (const auto& [currentDiff, possibleMaxValues] : diffToMaxValuesMap) {\n            int changeCount = computeChangeCount(maxValuesList, currentDiff, size);\n\n            for (const auto& maxValue : possibleMaxValues) {\n                if (maxValue < currentDiff) {\n                    changeCount -= 2;\n                } else {\n                    changeCount -= 1;\n                }\n            }\n\n            minChangesRequired = std::min(minChangesRequired, changeCount);\n        }\n\n        return minChangesRequired;\n    }\n\n    int computeChangeCount(const std::vector<int>& maxValuesList, int diff, int size) {\n        int index = std::lower_bound(maxValuesList.begin(), maxValuesList.end(), diff) - maxValuesList.begin();\n        return index * 2 + (size / 2 - index);\n    }\n};\n",
    "submit_ts": "1721490760",
    "subm_id": "1327491922"
}