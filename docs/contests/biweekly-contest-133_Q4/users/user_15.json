{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    int dp[355][455];\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        vector<int> vec(n, -1);\n        \n        for (const auto& v : requirements) {\n            vec[v[0]] = v[1];\n        }\n        \n        constexpr int MOD = 1e9 + 7;\n        \n        if (vec[0] > 0) return 0;\n        \n        for (int i = 1; i < n; i++) {\n            if (vec[i] == -1) continue;\n            \n            for (int j = 0; j < i; j++) {\n                if (vec[j] == -1) continue;\n                if (vec[j] > vec[i]) return 0;\n            }\n            \n            if ((i + 1) * (i) / 2 < vec[i]) return 0;\n        }\n        \n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= 400; j++) {\n                dp[i][j] = 0;\n            }\n        }\n        \n        dp[0][0] = 1;\n        \n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j <= 400; j++) {\n                for (int k = 0; k <= i; k++) {\n                    if (j + k > 400) break;\n                    \n                    dp[i][j + k] = (1ll * dp[i][j + k] + dp[i - 1][j]) % MOD;\n                }\n            }\n            \n            if (vec[i] >= 0) {\n                for (int j = 0; j <= 400; j++) {\n                    if (j != vec[i]) dp[i][j] = 0;\n                }\n            }\n        }\n        \n        int res = 0;\n        \n        for (int i = 0; i <= 400; i++) res = (res + dp[n - 1][i]) % MOD;\n        \n        return res;\n    }\n};",
    "submit_ts": 1719067502.0
}