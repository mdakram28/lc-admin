{
    "username": "mangesh13",
    "submission": "class Solution {\npublic:\n    int solve(vector<int> nums, int k) {\n        unordered_map<int,vector<int>> mpp;\n        vector<int> vec;\n        int n = nums.size();\n        int ans = nums.size();\n        \n        for(int i=0; i<n/2; i++){\n            int left = nums[i];\n            int right = nums[n-i-1];\n            int diff = abs(left-right);\n            \n            int X = max({left, right, k-left, k-right});\n            mpp[diff].push_back(X);\n            vec.push_back(X);\n        }\n        \n        sort(vec.begin(),vec.end());\n       \n        for(auto it: mpp){\n            int diff = it.first;\n            int res = lower_bound(vec.begin(), vec.end(), diff)-vec.begin();\n            \n            res = res*2+(n/2-res);\n\n            for(auto a: it.second){\n                if(a<diff) res-=2;\n\n                else res-=1;\n            }\n\n            ans = min(ans, res);\n\n        }\n\n        return ans;\n        \n    }\n    \n    int minChanges(vector<int>& nums, int k) {\n        return solve(nums, k);\n    }\n};",
    "submit_ts": "1721489369",
    "subm_id": "1327451223"
}