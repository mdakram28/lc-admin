{
    "username": "felix95",
    "submission": "class Solution {\npublic:\n    int ignore(vector<vector<int>> &d1, vector<vector<int>> &d2, int idx){\n        int d1h = d1.size() - 1, d1l = 0;\n        int d2h = d2.size() - 1, d2l = 0;\n        if(d1[d1h][1] == idx) d1h--;\n        else if(d1[d1l][1] == idx) d1l++;\n        if(d2[d2h][1] == idx) d2h--;\n        else if(d2[d2l][1] == idx) d2l++;\n        return max(d1[d1h][0] - d1[d1l][0], d2[d2h][0] - d2[d2l][0]);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        const int n = points.size();\n        vector<vector<int>> d1, d2;\n        for(int i=0; i<n; i++){\n            d1.push_back({(points[i][0] + points[i][1]), i});\n            d2.push_back({(points[i][0] - points[i][1]), i});\n        }\n        sort(d1.begin(), d1.end());\n        sort(d2.begin(), d2.end());\n        // for(int i=0; i<n; i++) cout << i << ' ' << d1[i][0] << ',' << d1[i][1] << endl;\n        // for(int i=0; i<n; i++) cout << i << ' ' << d2[i][0] << ',' << d2[i][1] << endl;\n        int ans = ignore(d1, d2, -1);\n        for(int i=0; i<n; i++){\n            ans = min(ans, ignore(d1, d2, i));\n            // cout << i << ' ' << ignore(d1, d2, i) << endl;\n        }\n        return ans;\n    }\n};"
}