{
    "username": "PiGuy1010",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        if len(nums) == 0:\n            return 0\n        result = 0\n        last = -1\n        for i in range(len(nums)):\n            if nums[i] & k != k:\n                result += self.b(nums[(last+1):i])\n                last = i\n                # return self.b(nums[:i]) + self.countSubarrays(nums[(i+1):], k)\n            else:\n                nums[i] = nums[i] ^ k\n        return result+self.b(nums[(last+1):])\n    # def a(self, nums, k):\n        # if len(nums) == 0:\n        #     return 0\n        # if len(nums) == 1:\n        #     return 1 if nums[0] == k else 0\n        # for i in range(len(nums)):\n        #     nums[i] = nums[i] ^ k\n        # return self.b(nums)\n        # runAnd = -1\n        # for i in range(len(nums)):\n        #     runAnd = runAnd & nums[i]\n        #     if runAnd == 0:\n        #         run2 = -1\n        #         c = {}\n        #         res = 0\n        #         for j in range(i, -1, -1):\n        #             run2 = run2 & nums[j]\n        #             if run2 == 0:\n        #                 del c\n        #                 return res+(j+1)*(len(nums)-i) + self.b(nums[i+1:])\n        #             else:\n        #                 if run2 in c.keys():\n        #                     res += c[run2]\n        #                 else:\n        #                     runU = run2\n        #                     count = 0\n        #                     for u in range(i+1, len(nums)):\n        #                         runU = runU & nums[u]\n        #                         if runU == 0:\n        #                             count = len(nums)-u\n        #                             break\n        #                     res += count\n        #                     c[run2] = count\n        # return 0\n    def b(self, nums):\n        if len(nums) == 0:\n            return 0\n        if len(nums) == 1:\n            return 1 if nums[0] == 0 else 0\n        total = 0\n        last = -1\n        runAnd = -1\n        for i in range(len(nums)):\n            runAnd = runAnd & nums[i]\n            if runAnd == 0:\n                run2 = -1\n                c = {}\n                res = 0\n                for j in range(i, last, -1):\n                    run2 = run2 & nums[j]\n                    if run2 == 0:\n                        total += res+(j-last)*(len(nums)-i)\n                        runAnd = -1\n                        last = i\n                        break\n                        # return res+(j+1)*(len(nums)-i) + self.b(nums[i+1:])\n                    else:\n                        if run2 in c.keys():\n                            res += c[run2]\n                        else:\n                            runU = run2\n                            count = 0\n                            for u in range(i+1, len(nums)):\n                                runU = runU & nums[u]\n                                if runU == 0:\n                                    count = len(nums)-u\n                                    break\n                            res += count\n                            c[run2] = count\n        return total",
    "submit_ts": "1720279438",
    "subm_id": "1311751210"
}