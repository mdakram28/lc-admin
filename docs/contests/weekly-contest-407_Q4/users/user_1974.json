{
    "username": "Jy_Tan",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        def split(arr):            \n            res = []\n            i = 0\n            while i < len(arr):     \n                j = i\n                t = arr[i] >= 0\n                while i < len(arr) and ((t and arr[i] >= 0) or (not t and arr[i] < 0)):\n                    i += 1\n                res.append([j, i - 1])\n            return res\n        diff = [t - num for t, num in zip(target, nums)]\n        sarr = split(diff)\n        print(sarr)\n        def count(i, j):\n            t = 1 if diff[i] >= 0 else -1\n            arr = [t * diff[k] for k in range(i, j + 1)]            \n            dp = [[-1, -1] for _ in arr]\n            rain = [[-float('inf'), -1]]\n            arr.append(-float('inf'))\n            for i, num in enumerate(arr):\n                while num < rain[-1][0]:\n                    _, j = rain.pop()\n                    dp[j][1] = i - 1\n                if i < len(arr) - 1:\n                    dp[i][0] = rain[-1][1] + 1\n                    rain.append([num, i])\n            arr.pop()\n            # print(dp)\n            max_ = [0]\n            start = [[] for _ in arr]\n            end = [0 for _ in arr]\n            for (s, e), v in zip(dp, arr):\n                start[s].append(v)\n                end[e] += 1\n            res = 0\n            for i, num in enumerate(arr):\n                res += num - max_[-1]\n                if start[i] != None:\n                    max_.extend(sorted(start[i]))\n                e = end[i]\n                while e:\n                    max_.pop()\n                    e -= 1\n            # print(arr, res, start, end)\n            return res\n                \n                \n            \n        res = 0\n        for i, j in sarr:\n            res += count(i, j)\n        \n        return res\n                    \n        \n                    \n            ",
    "submit_ts": "1721533524",
    "subm_id": "1328010910"
}