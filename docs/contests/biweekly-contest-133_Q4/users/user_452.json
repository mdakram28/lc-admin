{
    "username": "LIT2022010",
    "submission": "#include <vector>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Solution {\nprivate:\n    static const int M = 1'000'000'007;\n    static const int X = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        unordered_map<int, int> e;\n        for (auto& p : r) {\n            e[p[0] + 1] = p[1];\n        }\n\n        vector<vector<long long>> d(n + 1, vector<long long>(X + 1, 0));\n        d[0][0] = 1;\n\n        int l = 1;\n        while (l <= n) {\n            int c = 0;\n            while (c <= X) {\n                int np = 0;\n                while (np < l) {\n                    int pi = c - np;\n                    if (pi >= 0) {\n                        d[l][c] = (d[l][c] + d[l - 1][pi]) % M;\n                    }\n                    ++np;\n                }\n                ++c;\n            }\n\n            if (e.count(l) > 0) {\n                int ri = e[l];\n                c = 0;\n                while (c <= X) {\n                    if (c != ri) {\n                        d[l][c] = 0;\n                    }\n                    ++c;\n                }\n            }\n            ++l;\n        }\n\n        long long res = 0;\n        int ti = 0;\n        while (ti <= X) {\n            res = (res + d[n][ti]) % M;\n            ++ti;\n        }\n\n        return static_cast<int>(res);\n    }\n};\n",
    "submit_ts": 1719070498.0
}