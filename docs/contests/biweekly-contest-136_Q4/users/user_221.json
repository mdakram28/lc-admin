{
    "username": "Suvankar2002",
    "submission": "class Maxp {\n    int m1,t1,m2,t2;\n}\n\nclass Solution {\n    int ans[];\n    Maxp map[];\n\n    public int dfs1(int parent,int node,List<List<Integer>> adj) {\n        for(Integer it: adj.get(node))\n            if(it!=parent) {\n                int m=dfs1(node,it,adj);\n                if(m>map[node].m1) {\n                    map[node].m2=map[node].m1;\n                    map[node].t2=map[node].t1;\n                    map[node].m1=m;\n                    map[node].t1=it;\n                }\n                else if(m>map[node].m2) {\n                    map[node].m2=m;\n                    map[node].t2=it;\n                }\n            }\n        if(node%2==0)\n            return (map[node].m1+2);\n        return (map[node].m1+1);\n    }\n\n    public void dfs2(int parent,int node,List<List<Integer>> adj) {\n        int m=0;\n        if(parent!=-1) {\n            if(map[parent].t1!=node)\n                m=map[parent].m1;\n            else\n                m=map[parent].m2;\n            \n            if(parent%2==0)\n                m+=2;\n            else\n                m++;\n        }\n        if(m>map[node].m1) {\n            map[node].m2=map[node].m1;\n            map[node].t2=map[node].t1;\n            map[node].m1=m;\n            map[node].t1=parent;\n        }\n        else if(m>map[node].m2) {\n            map[node].m2=m;\n            map[node].t2=parent;\n        }\n        ans[node]=map[node].m1;\n        for(Integer it: adj.get(node))\n            if(it!=parent) {\n                dfs2(node,it,adj);\n            }\n    }\n\n    public int[] timeTaken(int[][] edges) {\n        int n=edges.length+1;\n        List<List<Integer>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++)\n            adj.add(new ArrayList<Integer>());\n        for(int i=0;i<edges.length;i++) {\n            int u=edges[i][0],v=edges[i][1];\n            adj.get(u).add(v);\n            adj.get(v).add(u);\n        }\n        ans=new int[n];\n        map=new Maxp[n];\n        for(int i=0;i<n;i++)\n            map[i]=new Maxp();\n        dfs1(-1,0,adj);\n        dfs2(-1,0,adj);\n        return ans;\n    }\n}",
    "submit_ts": "1722699948",
    "subm_id": "1343227092"
}