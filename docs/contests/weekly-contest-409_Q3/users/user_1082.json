{
    "username": "monte_carrrrrlo",
    "submission": "from typing import List\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        from sortedcontainers import SortedList\n        def remove_range(sl, start, end):\n            \"\"\"\n            Remove elements from a SortedList that are within the range (start, end) but not inclusive.\n            \n            :param sl: SortedList to modify\n            :param start: Start of the range (exclusive)\n            :param end: End of the range (exclusive)\n            \"\"\"\n            # Find the index of the first element greater than start\n            start_index = sl.bisect_right(start) + 1\n            # Find the index of the first element greater than end\n            end_index = sl.bisect_right(end)\n\n            if start_index <= end_index:\n                # Remove elements in the range (start, end)\n                del sl[start_index:end_index]\n\n        \n        sl = SortedList(range(n))\n\n        for start, end in queries:\n            remove_range(sl, start, end)\n            # print(sl)\n            yield len(sl) - 1\n\n\n",
    "submit_ts": "1722743383",
    "subm_id": "1343790722"
}