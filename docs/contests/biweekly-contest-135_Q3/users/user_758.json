{
    "username": "BerryWong",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        counts = {}\n        sortedList = SortedList()\n        \n        n = len(nums)\n        for i in range(n // 2):\n            max_val = max(nums[i], nums[n - i - 1])\n            min_val = min(nums[i], nums[n - i - 1])\n            curr = max_val - min_val\n            if not curr in counts:\n                counts[curr] = 0\n            counts[curr] += 1\n            range_val = max(max_val, k - min_val)\n            sortedList.add(range_val)\n        \n        ret = n\n        \n        for i in range(k + 1):\n            count = counts.get(i, 0)\n            twos = bisect_left(sortedList, i)\n            ones = n // 2 - count - twos\n            ret = min(ret, twos * 2 + ones)\n            # print(\"count\", count)\n            # print(\"ones\", ones)\n            # print(\"twos\", twos)\n        \n        return ret",
    "submit_ts": "1721489005",
    "subm_id": "1327439883"
}