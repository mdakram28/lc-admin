{
    "username": "user2994h",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        // 1's has to be >= (0's)^2\n        // up to 4e4\n        int numDominant = 0;\n        \n        vector<int> numOnes;\n        int ct = 0;\n        numOnes.push_back(0);\n        for (char c : s) {\n            if (c == '1')\n                ct++;\n            numOnes.push_back(ct);\n        }\n        // now consider any i, j, j > i.\n        int n = numOnes.size();\n        for (int i = 0; i < n; i++) {\n            for (int j = i+1; j < n; j++) {\n                int nOnes = numOnes[j] - numOnes[i];\n                int nZeros = j - i - nOnes;\n                if (nOnes >= nZeros * nZeros) {\n                    // n1 - (nZ+x)(nZ+x)\n                    int margin = nOnes - ( (nZeros+10) * (nZeros+10));\n                    if (margin > 0 && (n - j > 11)) { // skip feature\n                        numDominant += 10;\n                        j += 9;\n                    }\n                    else\n                        numDominant++;\n                }\n                else {\n                    int margin = nZeros * nZeros - nOnes;\n                    j += margin - 1; // leap behavior \n                }\n            }\n        }\n        return numDominant; \n        \n        \n    }\n};",
    "submit_ts": "1722137312",
    "subm_id": "1335760181"
}