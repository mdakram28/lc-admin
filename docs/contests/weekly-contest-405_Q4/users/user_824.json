{
    "username": "unm0l",
    "submission": "class TV {\npublic:\n    vector<TV*> bachhe;\n    int val;\n    bool isEnd;\n\n    TV() : bachhe(26, nullptr), val(INT_MAX), isEnd(false) {}\n};\n\nclass TT {\npublic:\n    TV* root;\n\n    TT() {\n        root = new TV();\n    }\n\n    void addWord(string& word, int cost) {\n        TV* node = root;\n        for (char c : word) {\n            if (!node->bachhe[c - 'a']) {\n                node->bachhe[c - 'a'] = new TV();\n            }\n            node = node->bachhe[c - 'a'];\n        }\n        node->val = min(cost, node->val);\n        node->isEnd = true;\n    }\n\n    TV* getRoot() {\n        return root;\n    }\n};\n\nclass Solution {\npublic:\n  const int MOD=1e9+7;\n    int modPow(int a, int b) {\n      return a%b;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TT trie;\n        int n = target.size();\n        int ans=0;\n        for(int i=0;i<n;i++){\n          ans++;\n        }\n        int xxx=modPow(ans,3);\n\n        vector<int> v(n + 1, INT_MAX);\n\n        for (int i = 0; i < words.size(); ++i) {\n            trie.addWord(words[i], costs[i]);\n        }\n\n        v[0] = 0;\n\n        for (int i = 0; i < n; ++i) {\n            if (v[i] == INT_MAX) continue;\n\n            TV* node = trie.getRoot();\n            for (int j = i; j < n; ++j) {\n                char c = target[j];\n                if (!node->bachhe[c - 'a']) break;\n                node = node->bachhe[c - 'a'];\n                if (node->isEnd) {\n                    v[j + 1] = min(v[j + 1], v[i] + node->val);\n                }\n            }\n        }\n        for(int i=0;i<xxx;i++){\n          ans++;\n        }\n\n        return v[n] == INT_MAX ? -1 : v[n];\n    }\n};",
    "submit_ts": "1720322630",
    "subm_id": "1312355012"
}