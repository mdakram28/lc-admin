{
    "username": "drexdelta",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set< pair < int , int > > s;\n        int decrements = 0;\n        \n        s.insert(make_pair(1e8, 1e8+1LL));\n                \n        vector<int> ans;\n        \n        int counter = 0;\n        \n        for(auto query : queries) {\n            int l = query[0];\n            int r = query[1];\n            cout << counter << endl;\n            counter++;\n            \n            auto it = s.lower_bound(make_pair(l,r));\n            \n            cout << \" *it \" << (*it).first << \" \" << (*it).second << endl;\n            \n            // assume they are intersecting at starting point\n            if((*it).first == l) {\n                cout << \" matching start \" << endl;\n                if((*it).second > r) {\n                    int x = 69; // do nothing\n                } else {\n                    decrements -= ((*it).second - (*it).first - 1);\n                    s.erase(it);\n                    decrements += (r - l - 1);\n                    s.insert(make_pair(l,r));\n                }\n                ans.push_back(n-1-decrements); continue;\n            } else if((*it).second == r) { // assume they are intersecting at the end\n                cout << \" matching end \" << endl;\n                decrements -= ((*it).second - (*it).first - 1);\n                s.erase(it);\n                decrements += (r - l - 1);\n                s.insert(make_pair(l,r));\n                ans.push_back(n-1-decrements); continue;\n            } else {\n                if(it == s.begin()) {\n                    if(l <= (*it).first && (*it).second <= r) {\n                        cout << \" starting outside \" << endl;\n                        decrements -= ((*it).second - (*it).first - 1);\n                        s.erase(it);\n                        decrements += (r - l - 1);\n                        s.insert(make_pair(l,r));\n                        ans.push_back(n-1-decrements); \n                        continue;\n                    }\n                    \n                    decrements += (r - l - 1);\n                    s.insert(make_pair(l,r));\n                    ans.push_back(n-1-decrements); \n                    continue;\n                }\n                \n                it--;\n                // assume current one is inside\n                if((*it).first <= l && r <= (*it).second) {\n                    cout << \" inside \" << endl;\n                    ans.push_back(n-1-decrements); continue;\n                }\n                \n                // assume current one is outside\n                if(l <= (*it).first && (*it).second <= r) {\n                    cout << \" reverse outside \" << endl;\n                    decrements -= ((*it).second - (*it).first - 1);\n                    s.erase(it);\n                    decrements += (r - l - 1);\n                    s.insert(make_pair(l,r));\n                    ans.push_back(n-1-decrements); \n                    continue;\n                }\n                \n                it++;\n                if(l <= (*it).first && (*it).second <= r) {\n                    cout << \" current outside \" << endl;\n                    decrements -= ((*it).second - (*it).first - 1);\n                    s.erase(it);\n                    decrements += (r - l - 1);\n                    s.insert(make_pair(l,r));\n                    ans.push_back(n-1-decrements); \n                    continue;\n                }\n                \n                // assume current one is new\n                decrements += (r - l - 1);\n                s.insert(make_pair(l,r));\n                ans.push_back(n-1-decrements); \n                continue;\n            }\n        }\n        \n        for(int i = 0 ; i < ans.size() ; i++) {\n            ans[i] = max(1,ans[i]);\n        }\n        return ans;\n        \n    }\n};\n\n/*\n\n16\n[[3,9],[12,14],[11,15],[4,7]]\n\n*/",
    "submit_ts": "1722742840",
    "subm_id": "1343778320"
}