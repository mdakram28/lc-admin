{
    "username": "rahulsah001",
    "submission": "class Solution\n{\npublic:\n    class Trie\n    {\n    public:\n        Trie *follow[26] = {nullptr};\n        vector<int> windex;\n    };\n\n    int minimumCost(string target, vector<string> &words, vector<int> &costs)\n    {\n        int n = target.length();\n        Trie *root = new Trie();\n        for (int i = 0; i < words.size(); ++i)\n        {\n            insert(root, words[i], i);\n        }\n\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n\n        for (int i = 0; i < n; ++i)\n        {\n            if (dp[i] == INT_MAX)\n                continue;\n\n            Trie *node = root;\n            for (int j = i; j < n; ++j)\n            {\n                if (!node->follow[target[j] - 'a'])\n                    break;\n                node = node->follow[target[j] - 'a'];\n                for (int index : node->windex)\n                {\n                    int len = words[index].length();\n                    if (i + len <= n)\n                    {\n                        dp[i + len] = min(dp[i + len], dp[i] + costs[index]);\n                    }\n                }\n            }\n        }\n        if (dp[n] == INT_MAX)\n            return -1;\n        return dp[n];\n    }\n    void insert(Trie *root, const string &word, int index)\n    {\n        Trie *node = root;\n        for (int i = 0; i < word.size(); i++)\n        {\n            if (!node->follow[word[i] - 'a'])\n            {\n                node->follow[word[i] - 'a'] = new Trie();\n            }\n            node = node->follow[word[i] - 'a'];\n        }\n        node->windex.push_back(index);\n    }\n};",
    "submit_ts": "1720322016",
    "subm_id": "1312338451"
}