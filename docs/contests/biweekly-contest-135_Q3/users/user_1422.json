{
    "username": "Shivansh_22",
    "submission": "class Solution {\npublic:\n    int solve(vector<int>& nums, int k)\n    {\n        int n=nums.size();\n        unordered_map<int,int> diff_freq;\n        \n        \n        for(int i=0; i<n/2; i++){\n            int diff=abs(nums[i]-nums[n-i-1]);\n            diff_freq[diff]++;\n        }\n        \n        \n        int final = INT_MAX;\n        vector<pair<int,int>>p;\n        map<int , int>mp;\n        for(auto it: diff_freq)\n        {\n            p.push_back({it.second, it.first});\n        }\n        sort(p.begin(), p.end());\n        int count=0;\n        for(int i=p.size()-1; i>=0 ; i--)\n        {\n            \n            int ans=0;\n            int min_diff = p[i].second;\n            \n            count++;\n            for(int i=0; i<n/2; i++)\n            {\n                int diff=abs(nums[i]-nums[n-i-1]);\n                int x=nums[i], y=nums[n-i-1];\n                if(diff!=min_diff){\n                    if(x-min_diff>=0 || x+min_diff<=k) ans++;\n                    else if(y-min_diff>=0 || y+min_diff<=k) ans++;\n                    else ans+=2;\n                }\n            }\n                \n            final = min(final , ans);\n            if(count == 800)break;\n        }\n        \n        return final;\n    }\n    int minChanges(vector<int>& nums, int k) {\n        return solve(nums , k);\n    }\n};",
    "submit_ts": "1721489595",
    "subm_id": "1327458012"
}