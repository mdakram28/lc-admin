{
    "username": "Naman1717",
    "submission": "import java.util.*;\n\nclass Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int h = m - 1;\n        int v = n - 1;\n        \n        int i = h - 1;\n        int j = v - 1;\n        \n        long horizontalParts = 1;\n        long verticalParts = 1;\n        \n        long totalCost = 0;\n        \n        while (i >= 0 && j >= 0) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * verticalParts;\n                horizontalParts++;\n                i--;\n            } else {\n                totalCost += verticalCut[j] * horizontalParts;\n                verticalParts++;\n                j--;\n            }\n        }\n        \n        while (i >= 0) {\n            totalCost += horizontalCut[i] * verticalParts;\n            i--;\n        }\n        \n        while (j >= 0) {\n            totalCost += verticalCut[j] * horizontalParts;\n            j--;\n        }\n        \n        return totalCost;\n    }\n}\n",
    "submit_ts": "1720926025",
    "subm_id": "1320273661"
}