{
    "username": "Dr_Philosopher",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hPq;\n        priority_queue<int> vPq;\n        for(auto it: horizontalCut)\n        {\n            hPq.push(it);\n        }\n        for(auto it:verticalCut)\n        {\n            vPq.push(it);\n        }\n        \n        int pieces1 = 1, pieces2 = 1;\n        long long ans = 0;\n\n        while (!hPq.empty() || !vPq.empty()) {\n            if (!hPq.empty() && (vPq.empty() || hPq.top() >= vPq.top())) {\n                ans += hPq.top() * pieces2;\n                hPq.pop();\n                pieces1++;\n            } else {\n                ans += vPq.top() * pieces1;\n                vPq.pop();\n                pieces2++;\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1720925999",
    "subm_id": "1320272835"
}