{
    "username": "lucasschnee",
    "submission": "class Solution:\n    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:\n        if len(colors) < k:\n            return 0\n\n        # if len(colors) == k:\n        #     prev = 0\n        #     check = True\n        #     for x in colors:\n        #         if x == prev:\n        #             check = False\n        #             break\n        #         prev ^= x\n\n        #     if check:\n        #         return 1\n\n        #     prev = 1\n        #     check = True\n        #     for x in colors:\n        #         if x == prev:\n        #             check = False\n        #             break\n        #         prev ^= x\n\n        #     if check:\n        #         return 1\n            \n        #     return 0\n\n\n        N = len(colors)\n        colors = colors + colors\n\n        # [0,1,0,1, 0,1,0,1]]\n\n        r = 1\n        total = 0\n        l = 0\n\n        while r < N + k - 1 and r < len(colors):\n\n            if colors[r] == colors[r - 1]:\n                l = r\n            \n            if r - l + 1 >= k:\n                total += 1\n\n            r += 1\n\n        return total\n\n\n\n\n        \n\n \n\n        ",
    "submit_ts": "1720278100",
    "subm_id": "1311694286"
}