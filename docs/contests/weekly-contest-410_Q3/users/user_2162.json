{
    "username": "aman1117",
    "submission": "#define bug(...) __f(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename Arg1>\nvoid __f(const char *name, Arg1 &&arg1) {\n  cout << name << \" : \" << arg1 << endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char *names, Arg1 &&arg1, Args &&...args) {\n  const char *comma = strchr(names + 1, ',');\n  cout.write(names, comma - names) << \" : \" << arg1 << \" | \";\n  __f(comma + 1, args...);\n}\n#define ll long long\nconst ll MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    ll dp[2002][52][52]; \n\n    ll solve(int i, int previ, int prevd, vector<int>& nums, int n) {\n        if (i == n) return 1LL;\n        if (dp[i][previ + 1][prevd + 1] != -1) return dp[i][previ + 1][prevd + 1];\n\n        ll ans = 0LL;\n        for (int cur = 0; cur <= nums[i]; cur++) {\n            if (previ == -1 && prevd == -1) {\n                ans = (ans + solve(i + 1, cur, nums[i] - cur, nums, n)) % MOD;\n            } else if (cur >= previ && (nums[i] - cur) <= prevd) {\n                ans = (ans + solve(i + 1, cur, nums[i] - cur, nums, n)) % MOD;\n            }\n        }\n\n        return dp[i][previ + 1][prevd + 1] = ans % MOD;\n    }\n\n    int countOfPairs(vector<int>& nums) {\n        memset(dp, -1, sizeof dp);\n        int n = nums.size();\n        return solve(0, -1, -1, nums, n);\n    }\n};\n",
    "submit_ts": "1723346420",
    "subm_id": "1351577184"
}