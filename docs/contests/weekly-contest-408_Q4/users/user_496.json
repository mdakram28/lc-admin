{
    "username": "navin_barnwal",
    "submission": "class Solution {\n    class DSU {\n        int[] sz,par;\n        DSU(int n){\n            par = new int[n];\n            sz = new int[n];\n            for(int i=0; i<n; i++){\n                par[i] = i;\n                sz[i] = 1;\n            }\n        }\n        int findPar(int x){\n            if(x == par[x]){\n                return x;\n            }\n            return par[x] = findPar(par[x]);\n        }\n        void union(int x, int y){\n            int upx = findPar(x);\n            int upy = findPar(y);\n            if(upx == upy){\n                return;\n            }\n            if(sz[upx] >= sz[upy]){\n                par[upy] = upx;\n                sz[upx] += sz[upy];\n            }\n            else{\n                par[upx] = upy;\n                sz[upy] += sz[upx];\n            }\n        }\n    }\n    double dist(int[][] c, int i, int j){\n        return (Math.sqrt((c[i][0]-c[j][0])*(c[i][0]-c[j][0]) + (c[i][1]-c[j][1])*(c[i][1]-c[j][1])));\n    }\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        List<List<Integer>> ed = new ArrayList<>();\n        for(int i=0; i<4; i++){\n            ed.add(new ArrayList<>());\n        }\n        DSU dsu = new DSU(n);\n        for(int i=0; i<n; i++){\n            for(int j=i+1; j<n; j++){\n                double dis = dist(circles, i, j);\n                if(dis <=(double)(circles[i][2]+circles[j][2])){\n                    dsu.union(i, j);\n                }\n            }\n            if((circles[i][1]-circles[i][2])<=0){\n                ed.get(0).add(i);\n            }\n            if((circles[i][0]+circles[i][2])>=X){\n                ed.get(1).add(i);\n            }\n            if((circles[i][1]+circles[i][2])>=Y){\n                ed.get(2).add(i);\n            }\n            if((circles[i][0]-circles[i][2])<=0){\n                ed.get(3).add(i);\n            }\n        }\n        for(int i=0; i<ed.get(0).size(); i++){\n            for(int j=0; j<ed.get(2).size(); j++){\n                if(dsu.findPar(ed.get(0).get(i)) == dsu.findPar(ed.get(2).get(j))){\n                    return false;\n                }\n            }\n            for(int j=0; j<ed.get(3).size(); j++){\n                if(dsu.findPar(ed.get(0).get(i)) == dsu.findPar(ed.get(3).get(j))){\n                    return false;\n                }\n            }\n        }\n        for(int i=0; i<ed.get(1).size(); i++){\n            for(int j=0; j<ed.get(2).size(); j++){\n                if(dsu.findPar(ed.get(1).get(i)) == dsu.findPar(ed.get(2).get(j))){\n                    return false;\n                }\n            }\n            for(int j=0; j<ed.get(3).size(); j++){\n                if(dsu.findPar(ed.get(1).get(i)) == dsu.findPar(ed.get(3).get(j))){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}",
    "submit_ts": "1722137636",
    "subm_id": "1335769449"
}