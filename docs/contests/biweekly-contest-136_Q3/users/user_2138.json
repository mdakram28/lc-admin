{
    "username": "pa6ap6ap",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        const int height = grid.size(), width = grid[0].size();\n\n        auto count_flips = [&](int row, int col) {\n            switch (grid[row][col]\n                + grid[row][width-col-1]\n                + grid[height-row-1][col]\n                + grid[height-row-1][width-col-1]) {\n                    case 0:\n                    case 4:\n                    return 0;\n                    case 2:\n                    return 2;\n                    default:\n                    return 1;\n                }\n        };\n\n        int total_flips = 0;\n\n        for (int row = 0; row < (height)/2; ++row) {\n            for (int col = 0; col < (width)/2; ++col) {\n                total_flips += count_flips(row, col);\n            }\n        }\n\n        bool need1flip = false;\n        int cross_flips = 0;\n\n        if (height % 2) {\n            const int row = height / 2;\n            for (int col = 0; col < width / 2; ++col) {\n                if (grid[row][col] != grid[row][width-col-1]) {\n                    ++cross_flips;\n                } else if (grid[row][col] == 1) {\n                    need1flip = !need1flip;\n                }\n            }\n        }\n        if (width % 2) {\n            const int col = width / 2;\n            for (int row = 0; row < height / 2; ++row) {\n                if (grid[row][col] != grid[height-row-1][col]) {\n                    ++cross_flips;\n                } else if (grid[row][col] == 1) {\n                    need1flip = !need1flip;\n                }\n            }\n        }\n\n        if (cross_flips == 0 && need1flip) {\n            cross_flips = 2;\n        }\n\n        if ((width % 2) && (height % 2)) {\n            if (grid[height/2][width/2] == 1) {\n                ++cross_flips;\n            }\n        }\n\n        return total_flips + cross_flips;\n    }\n};",
    "submit_ts": "1722699666",
    "subm_id": "1343218633"
}