{
    "username": "iamhariom28",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    bool dfs(int curr, vector<bool>& vis, vector<int> adj[], unordered_set<int>& br_set) {\n        if (br_set.count(curr)) return true;\n        bool blocked = false;\n        for (auto next : adj[curr]) {\n            if (!vis[next]) {\n                vis[next] = true;\n                blocked = blocked || dfs(next, vis, adj, br_set);\n            }\n        }\n        return blocked;\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<int> adj[n];\n        unordered_set<int> tl_set, br_set;\n        \n        for (int i = 0; i < n; ++i) {\n            ll cx = circles[i][0], cy = circles[i][1], r = circles[i][2];\n\n            for (int j = 0; j < n; ++j) {\n                ll cx1 = circles[j][0], cy1 = circles[j][1], r1 = circles[j][2];\n                ll dist = (cx - cx1) * (cx - cx1) + (cy - cy1) * (cy - cy1);\n                if (dist <= (r1 + r) * (r1 + r)) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n\n            if (cy + r >= Y || cx <= r) tl_set.insert(i);\n            if (cy <= r || cx + r >= X) br_set.insert(i);\n        }\n\n        vector<bool> vis(n, false);\n        bool blocked = false;\n        for (auto i : tl_set) {\n            if (!vis[i]) {\n                vis[i] = true;\n                blocked = blocked || dfs(i, vis, adj, br_set);\n            }\n        }\n        return !blocked;\n    }\n};\n",
    "submit_ts": "1722136093",
    "subm_id": "1335723567"
}