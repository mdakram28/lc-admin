{
    "username": "Abhijith8",
    "submission": "class Solution {\npublic:\n    void dfs(int u , int par ,  vector<vector<int>> &g , vector<int>&dis){\n        for(int v:g[u]){\n            if(v==par)continue;\n            dis[v]=dis[u]+1;\n            dfs(v,u,g,dis);\n        }\n    }\n    \n    pair<int,int> f(int n , vector<vector<int>> &g1){\n        int ans=1e7,ans1=0;\n        if(g1.size()==0){\n            ans=0;\n        }\n        vector<int>dis1(n+1,0);\n        dis1[0]=0;\n        dfs(0,-1,g1,dis1);\n        int mx=-1,cg1=0;\n        for(int i=0;i<n;i++){\n            if(dis1[i]>mx){\n                mx=dis1[i];\n                cg1=i;\n            }\n        }\n        vector<int>dis2(n+1,0);  //cg1\n        dis2[cg1]=0;\n        dfs(cg1,-1,g1,dis2);\n        mx=-1;int cg2=0;\n        for(int i=0;i<n;i++){\n            if(dis2[i]>mx){\n                mx=dis2[i];\n                cg2=i;\n            }\n        }\n        cout<<cg1<<\" \"<<cg2<<endl;\n        vector<int>dis3(n+1); //cg2\n        dis3[cg2]=0;\n        dfs(cg2,-1,g1,dis3);\n        // int ans1=1e7;\n        for(int i=0;i<n;i++){\n            ans=min(ans,max(dis2[i],dis3[i]));\n        }\n        ans1=dis3[cg1];\n        return {ans,ans1};\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1;\n        int m=edges2.size()+1;\n        vector<vector<int>>g1(n),g2(m);\n        for(vector<int> v:edges1){\n            g1[v[0]].push_back(v[1]);\n            g1[v[1]].push_back(v[0]);\n        }\n        for(vector<int> v:edges2){\n            g2[v[0]].push_back(v[1]);\n            g2[v[1]].push_back(v[0]);\n        }\n        pair<int,int> ans1=f(n,g1);\n        pair<int,int> ans2=f(m,g2);\n        int ans=ans1.first+ans2.first+1;\n        ans=max(ans,ans1.second);\n        ans=max(ans,ans2.second);\n        return ans;\n    }\n};",
    "submit_ts": 1719719434.0
}