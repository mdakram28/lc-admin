{
    "username": "RrrrLi",
    "submission": "class Solution:\n    f = {0:0, 1:1, 2:2, 3:1, 4:0}\n\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n\n        ans = 0\n\n        nmid, mmid = -1, -1\n        if n%2 > 0:\n            nmid = (n+1)//2 - 1\n        if m%2 > 0:\n            mmid = (m+1)//2 - 1\n\n        redge, cedge = 0, 0\n        cremain, rremain = 0, 0\n\n        if nmid >= 0:\n            for i in range(m//2):\n                if i == mmid:\n                    continue\n                if grid[nmid][i] != grid[nmid][m-i-1]:\n                    redge += 1\n\n            rremain = sum(grid[nmid][i] for i in range(m) if i != mmid)\n        \n        if mmid >= 0:\n            for i in range(n//2):\n                if i == nmid:\n                    continue\n                if grid[i][mmid] != grid[n-i-1][mmid]:\n                    cedge += 1\n            \n            cremain = sum(grid[i][mmid] for i in range(n) if i != nmid)%4\n        \n        ans += (redge + cedge)\n\n        if nmid >= 0 and mmid >= 0:\n            # center\n            ans += grid[nmid][mmid]\n\n            if cedge == 0 and redge == 0 and (cremain + rremain) % 4 == 2:\n                ans += 2\n        \n        elif nmid >= 0:\n            if redge == 0 and rremain%4 == 2:\n                ans += 2\n        elif mmid >= 0:\n            if cedge == 0 and cremain%4 == 2:\n                ans += 2\n\n\n        for i in range(n//2):\n            for j in range(m//2):\n                s = sum((grid[i][j], grid[n-i-1][j], grid[i][m-j-1], grid[n-i-1][m-j-1]))\n                ans += Solution.f[s]\n        \n        return ans",
    "submit_ts": "1722699066",
    "subm_id": "1343200468"
}