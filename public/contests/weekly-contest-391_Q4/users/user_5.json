{
    "username": "py-is-best-lang",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def f(points: List[List[int]], rem: int):\n            s = [-(10**18)] * 4\n            res = 0\n            n = len(points)\n            for i in range(n):\n                if rem != i:\n                    for j in range(2):\n                        for k in range(2):\n                            id = j * 2 + k\n                            v = (points[i][0] if j else -points[i][0]) + (\n                                points[i][1] if k else -points[i][1]\n                            )\n                            s[id] = max(s[id], -v)\n                            res = max(res, s[id] + v)\n            return res\n\n        ans = 10**18\n        for j in [-1, 1]:\n            for k in [-1, 1]:\n                ans = min(\n                    ans,\n                    f(\n                        points,\n                        max([(y * j + z * k, x) for x, (y, z) in enumerate(points)])[1],\n                    ),\n                )\n        return ans\n"
}