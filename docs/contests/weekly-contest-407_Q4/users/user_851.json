{
    "username": "VinnyOnLC",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int[] diff = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long res = 0;\n\n        int lo = 0;\n        boolean pos = true;\n        for (int i = 0; i < diff.length; i++) {\n            \n            if (diff[i] > 0) {\n                if (i == lo) {\n                    pos = true;\n                } else if (!pos) {\n                    // System.out.println(\"getting: [\" + lo + \", \" + (i-1) + \"], \" + pos);\n                    res += getOps(diff, lo, i-1, pos);\n                    lo = i;\n                    pos = true;\n                }\n            } else if (diff[i] < 0) {\n                if (i == lo) {\n                    pos = false;\n                } else if (pos) {\n                    // System.out.println(\"getting: [\" + lo + \", \" + (i-1) + \"], \" + pos);\n                    res += getOps(diff, lo, i-1, pos);\n                    lo = i;\n                    pos = false;\n                }\n            } else {\n                if (lo == i) {\n                    lo++;\n                } else {\n                    // System.out.println(\"getting: [\" + lo + \", \" + (i-1) + \"], \" + pos);\n                    res += getOps(diff, lo, i-1, pos);\n                    lo = i+1;\n                }\n            }\n        }\n        // System.out.println(\"getting: [\" + lo + \", \" + (nums.length-1) + \"], \" + pos);\n        res += getOps(diff, lo, nums.length-1, pos);\n        \n        return res;\n    }\n\n\n    private long getOps(int[] diff, int lo, int hi, boolean pos) {\n        // System.out.println(\"working\");\n        if (lo > hi) {\n            // System.out.println(\"returning 0\");\n            return 0;\n        }\n        long res = 0;\n\n        if (!pos) {\n            for (int i = lo; i <= hi; i++) {\n                diff[i] *= -1;\n            }\n            res += getOps(diff, lo, hi, true);\n        } else {\n\n            int min = Integer.MAX_VALUE;\n            for (int i = lo; i <= hi; i++) {\n                min = Math.min(min, diff[i]);\n            }\n\n            int start = lo;\n            for (int i = lo; i <= hi; i++) {\n                // System.out.println(\"diff: \" + diff[i]);\n                diff[i] -= min;\n                if (diff[i] == 0) {\n                    res += getOps(diff, start, i-1, true);\n                    start = i+1;\n                }\n            }\n            res += getOps(diff, start, hi, true);\n\n            res += min;\n        }\n\n        return res;\n    }\n}",
    "submit_ts": "1721532267",
    "subm_id": "1327981772"
}