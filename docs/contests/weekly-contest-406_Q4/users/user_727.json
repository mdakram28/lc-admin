{
    "username": "bhavik_11",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n            sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n            sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n            int h=0,v=0;\n            long long horizontalPieces=1,verticalPieces=1;\n            long long totalCost=0;\n\n            while(h<horizontalCut.size() && v<verticalCut.size()) {\n                if(horizontalCut[h]>verticalCut[v]) {\n                    totalCost += 1ll * horizontalCut[h] * verticalPieces;\n                    horizontalPieces += 1;\n                    h += 1;\n                } \n                else{\n                    totalCost += 1ll * verticalCut[v] * horizontalPieces;\n                    verticalPieces += 1;\n                    v += 1;\n                }\n            }\n            while(h<horizontalCut.size()) {\n                totalCost += 1ll * horizontalCut[h] * verticalPieces;\n                h += 1;\n            }\n            while(v<verticalCut.size()) {\n                totalCost += 1ll * verticalCut[v] * horizontalPieces;\n                v += 1;\n            }\n            return totalCost;\n        \n    }\n};",
    "submit_ts": "1720925498",
    "subm_id": "1320256733"
}