{
    "username": "vvizardly-tu",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    vector<pair<int, int> > ands;\n\n    ll cal(vector<int>& nums, int K) {\n        ands.clear();\n        int n = nums.size();\n\n        ll ans = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            int num = nums[i];\n            ands.emplace_back(num, i);\n            ands[0].first &= num;\n\n            int k = 0;\n            for (int j = 1; j < ands.size(); j++) {\n                ands[j].first &= num;\n                if (ands[k].first == ands[j].first) {\n                    ands[k].second = ands[j].second;\n                } else {\n                    ands[++k] = ands[j];\n                }\n            }\n            ands.resize(k + 1);\n            // \u6839\u636e\u9898\u76ee\u6761\u4ef6\u8bbe\u7f6e\n            ll last = n;\n            for (auto& [kk, vv] : ands) {\n                if (kk == K) {\n                    ans += last - vv;\n                }\n                last = vv;\n            }\n        }\n        return ans;\n    }\n\n    long long countSubarrays(vector<int>& a, int k) {\n        return cal(a, k);\n    }\n};",
    "submit_ts": "1720277039",
    "subm_id": "544554041"
}