{
    "username": "partyush_22",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n       long long total = 0;\n        \n        sort(horizontalCut.begin(), horizontalCut.end(),greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n        \n        int hParts = 1;\n        int vParts = 1;\n        \n        int hIdx = 0;\n        int vIdx = 0;\n        \n        while (hIdx < horizontalCut.size() && vIdx < verticalCut.size()) {\n            if (horizontalCut[hIdx] > verticalCut[vIdx]) {\n                total += horizontalCut[hIdx] * vParts;\n                hParts++;\n                hIdx++;\n            } else {\n                total += verticalCut[vIdx] * hParts;\n                vParts++;\n                vIdx++;\n            }\n        }\n        \n        long long due = 0;\n        while (hIdx < horizontalCut.size()) {\n            due += horizontalCut[hIdx];\n            hIdx++;\n        }\n        total += due * vParts;\n        \n        due = 0;\n        while (vIdx < verticalCut.size()) {\n            due += verticalCut[vIdx];\n            vIdx++;\n        }\n        total += due * hParts;\n        \n        return total;\n    }\n};",
    "submit_ts": "1720926804",
    "subm_id": "1320296807"
}