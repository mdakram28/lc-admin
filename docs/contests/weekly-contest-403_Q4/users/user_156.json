{
    "username": "ChihoLam",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        cans = 901\n        d = {}\n        #def helper(int lf,int rt,int lw,int hi):\n        def helper(lf,rt,lw,hi):\n            if (lf,rt,lw,hi) in d:\n                return d[(lf,rt,lw,hi)]\n            tg=0\n            mir,mar,mic,mac = rt,lf,hi,lw\n            if rt>=len(grid) or lf>=len(grid):\n                return 901\n            if hi>=len(grid[0]) or lw>=len(grid[0]):\n                return 901\n            for i in range(lf,rt+1):\n                for j in range(lw,hi+1):\n                    if grid[i][j]:\n                        mir = min(mir,i)\n                        mar = max(mar,i)\n                        mic = min(mic,j)\n                        mac = max(mac,j)\n                        tg+=1\n            if tg==0:\n                d[(lf,rt,lw,hi)]=0\n                return 0\n            #print(lf,rt,lw,hi,mir,mar,mic,mac)\n            d[(lf,rt,lw,hi)]=(mar-mir+1)*(mac-mic+1)\n            return d[(lf,rt,lw,hi)]\n        n = len(grid)-1\n        m = len(grid[0])-1\n        for i in range(n+1):\n            for j in range(m+1):\n                cans = min(helper(0,i,0,m)+helper(i+1,n,0,j)+helper(i+1,n,j+1,m),helper(i+1,n,0,m)+helper(0,i,0,j)+helper(0,i,j+1,m),cans)\n                #print('a',cans)\n                cans = min(cans,helper(0,n,0,j)+helper(0,i,j+1,m)+helper(i+1,n,j+1,m),helper(0,n,j+1,m)+helper(0,i,0,j)+helper(i+1,n,0,j))\n                #print(i,j)\n                #print(cans)\n                for k in range(j+1,m):\n                    cans = min(cans,helper(0,n,0,j)+helper(0,n,j+1,k)+helper(0,n,k+1,m))\n            for j in range(i+1,n):\n                cans = min(cans,helper(0,i,0,m)+helper(i+1,j,0,m)+helper(j+1,n,0,m))\n            \n            #print(i,j)\n            #print(cans)\n        return cans",
    "submit_ts": 1719112844.0
}