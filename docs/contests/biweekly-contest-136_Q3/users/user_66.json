{
    "username": "6reat-shternsea",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\nusing i128 = __int128_t;\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int n = g.size();\n        int m = g[0].size();\n        int ans = 0;\n        vector<int> dp(4, 1E9);\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                sum += g[i][j];\n                sum %= 4;\n            }\n        }\n        dp[sum] = 0;\n        for (int i = 0; i < (n + 1) / 2; i++) {\n            for (int j = 0; j < (m + 1) / 2; j++) {\n                set<pair<int, int>> s;\n                s.insert({i, j});\n                s.insert({n - i - 1 , j});\n                s.insert({n - i - 1 , m - j - 1});\n                s.insert({i , m - j - 1});\n                array<int, 2> cnt{};\n                for (auto [x, y] : s) {\n                    cnt[g[x][y]]++;\n                }\n                vector<int> next(4,1E9);\n                for (int k = 0; k < 4; k++) {\n                    next[(k - cnt[1] + 4) % 4] = min(next[(k - cnt[1] + 4) % 4], dp[k] + cnt[1]);\n                    next[(k + cnt[0]) % 4] = min(next[(k + cnt[0]) % 4], dp[k] + cnt[0]);\n                }\n                dp=next;\n            }\n        }\n        return dp[0];\n    }\n};",
    "submit_ts": "1722696217",
    "subm_id": "552259685"
}