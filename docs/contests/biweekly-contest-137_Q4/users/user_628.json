{
    "username": "\ud83c\udf6a\ud83c\udf6a\ud83c\udf6a",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        res = -float('inf')\n        \n        def dd(indx, ind, cols, inds):\n            rr = -float('inf')\n            for key, vals in cols.items():\n                if key != ind:\n                    if inds[key][0] != indx:\n                        rr = max(rr, vals[0])\n                    else:\n                        rr = max(rr, vals[1])\n                        \n            return rr\n        def helper(x, y):\n            cols = {}\n            inds = {}\n            rr = -float('inf')\n            for j in range(n): \n                if j != y:\n                    v1, v2 = -float('inf'), -float('inf')\n                    I, J = -float('inf'), -float('inf')\n                    for i in range(m):\n                        if i != x:\n                            if board[i][j] > v1:\n                                v2 = v1\n                                v1 = board[i][j]\n                                J = I\n                                I = i\n                            elif board[i][j] > v2:\n                                v2 = board[i][j]\n                                J = i\n                    cols[j] = [v1, v2]\n                    inds[j] = [I, J]\n                    \n            # print(cols)\n            for i in range(m):\n                if i != x:\n                    v1, v2 = -float('inf'), -float('inf')\n                    I, J = -float('inf'), -float('inf')\n                    for j in range(n):\n                        if j != y:\n                            if board[i][j] > v1:\n                                v2 = v1\n                                v1 = board[i][j]\n                                J = I\n                                I = j\n                            elif board[i][j] > v2:\n                                v2 = board[i][j]\n                                J = j\n                    # print(dd(tmp['v1'], cols))\n                    rr = max(rr, v1 + dd(i, I, cols, inds))\n                    # print(v1, dd(i, tmp['v1'], cols))\n                    rr = max(rr, v2 + dd(i, J, cols, inds))\n                    # print('f', v2, dd(i, tmp['v2'], cols))\n            return rr\n                                \n                                \n        # print(helper(0, 1))    \n        # return 0\n        s = sorted([(board[i][j], i, j) for i in range(m) for j in range(n)], reverse = True)[:min(10, m * n - 1)]\n        # for x in range(m):\n        #     for y in range(n):\n        #         if board[x][y] >= s:\n        #             res = max(res, board[x][y] + helper(x, y))\n        for v, x, y in s:\n            res = max(res, v + helper(x, y))\n        return res\n",
    "submit_ts": "1723910176",
    "subm_id": "556339948"
}