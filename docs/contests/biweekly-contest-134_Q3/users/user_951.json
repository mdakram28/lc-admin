{
    "username": "sparsh8020",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(std::vector<int>& colors, int k) {\n        auto sparsh = [&](const std::vector<int>& colors, int k) {\n            int n = colors.size();\n            int ans = 0,cnt=1;\n            \n            for (int i = 1; i < n + k - 1; i++) {\n                if (colors[i % n] != colors[(i - 1) % n]) {\n                    cnt++;\n                } else {\n                    cnt = 1;\n                }\n                if (cnt >= k) ans++;\n            }\n            \n            return ans;\n        };\n        \n        return sparsh(colors, k);\n    }\n};\n",
    "submit_ts": "1720278901",
    "subm_id": "1311729071"
}