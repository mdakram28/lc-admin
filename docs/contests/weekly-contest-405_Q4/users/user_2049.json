{
    "username": "kirandeepreddy",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        dp = [float('inf')] * (len(target) + 1)\n        dp[0] = 0\n        word_dict = {}\n        for word, cost in zip(words, costs):\n            if word not in word_dict or cost < word_dict[word]:\n                word_dict[word] = cost\n        for i in range(len(target) + 1):\n            for word, cost in word_dict.items():\n                if i >= len(word) and target[i - len(word):i] == word:\n                    dp[i] = min(dp[i], dp[i - len(word)] + cost)\n        return dp[-1] if dp[-1] != float('inf') else -1",
    "submit_ts": "1720320501",
    "subm_id": "1312296118"
}