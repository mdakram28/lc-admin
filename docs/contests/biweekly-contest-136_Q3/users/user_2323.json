{
    "username": "O1rko-bhattacharya",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans=0;\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                vector<int>v={grid[i][j],grid[n-i-1][j],grid[i][m-j-1],grid[n-1-i][m-1-j]};\n                int o=count(v.begin(),v.end(),1);\n                ans+=min(o,4-o);\n            }\n        }\n        int poss=0;\n        int cnt=0;\n        if(n%2){\n            for(int j=0;j<m/2;j++){\n                if(grid[n/2][j]!=grid[n/2][m-j-1]){\n                    ans++;\n                    poss++;\n                \n                }\n                else{\n                    if(grid[n/2][j]==1){\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if(m%2){\n            for(int i=0;i<n/2;i++){\n                if(grid[i][m/2]!=grid[n-i-1][m/2]){\n                    ans++;\n                    poss++;\n                \n                }\n                else{\n                    if(grid[i][m/2]==1){\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if(n%2!=0 && m%2!=0 && grid[n/2][m/2]==1){\n            ans++;\n        }\n        if(poss==0 && cnt%2!=0){\n            ans+=2;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722700433",
    "subm_id": "1343241739"
}