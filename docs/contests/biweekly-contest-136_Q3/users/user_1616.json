{
    "username": "mdd14499",
    "submission": "class Solution {\npublic:\n\n    int minFlips(vector<vector<int>>&nums) {\n          int rows = nums.size();\n        int cols = nums[0].size();\n        int result = 0;\n\n        if (rows%2 ==1 && cols % 2 == 1) {\n            if (nums[rows / 2][cols / 2] == 1) {\n                result += 1;\n            }\n        }\n       // int x=0,y=0;\n       //  if(row==0)x++;\n       //  else\n       //      y++;\n        vector<int> shift(3, 0);\n        if (rows % 2 == 1) {\n            int left = 0, right = cols-1;\n            while (left<right) {\n                int sum = nums[rows/2][left] + nums[rows / 2][right];\n                shift[sum] += 1;\n                left += 1;\n                right -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int top = 0, bottom = rows - 1;\n            while (top < bottom) {\n                int sum = nums[top][cols / 2] + nums[bottom][cols / 2];\n                shift[sum] += 1;\n                top += 1;\n                bottom -= 1;\n            }\n        }\n\n       \n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                result += shift[1];\n            } else {\n                result += 2;\n            }\n        } else {\n            result += shift[1];\n        }\n\n        \n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int re1 = nums[i][j];\n                int re2 = nums[rows - 1 - i][j];\n                int re3 = nums[i][cols - 1 - j];\n                int re4 = nums[rows - 1 - i][cols - 1 - j];\n\n                int ans=0;\n                ans+=re1;\n                ans+=re2;\n                ans+=re3;\n                ans+=re4;\n\n                if (ans != 0 && ans != 4) {\n                    result +=min(ans, 4 -ans);\n                }\n            }\n        }\n        return result;\n    }\n};",
    "submit_ts": "1722699799",
    "subm_id": "1343222702"
}