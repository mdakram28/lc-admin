{
    "username": "superwesly123",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        arr_count = [0]*(k+2)\n        d_diff = defaultdict(int)\n        n = len(nums)\n        for i in range(n//2):\n            num1, num2 = nums[i], nums[n - i - 1]\n            arr_count[max(max(num1, k - num1), max(num2, k - num2)) + 1] += 1\n            d_diff[abs(nums[i] - nums[n - i - 1])] += 1\n        ans = n\n        for i in range(k+1):\n            arr_count[i+1] += arr_count[i]\n        for key in d_diff:\n            ans = min(ans, (n - d_diff[key]*2)//2 + arr_count[key])\n        return ans",
    "submit_ts": "1721487766",
    "subm_id": "1327400367"
}