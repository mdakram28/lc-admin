{
    "username": "Sachin_kr12-456",
    "submission": "class Solution {\npublic:\n    struct TrieNode{\n        unordered_map<char, TrieNode*>children;\n        vector<pair<int, int>>ends;\n        TrieNode(){}\n    };\n\n    class Trie{\n    public:\n        TrieNode* root;\n        Trie(){\n            root=new TrieNode();\n        }\n        \n        void insert(string& word,int idx,int cost){\n            TrieNode* node=root;\n            for(char c:word){\n                if(node->children.find(c)==node->children.end()){\n                    node->children[c]=new TrieNode();\n                }\n                node=node->children[c];\n            }\n            node->ends.push_back({idx,cost});\n        }\n    };\n\n    void precompute(string& target, vector<string>& words, vector<int>& costs, Trie& trie){\n        for(int i=0;i<words.size();++i){\n            trie.insert(words[i], i, costs[i]);\n        }\n    }\n\n    void updateDp(string& target, vector<int>& dp, Trie& trie, vector<string>& words){\n        int n=target.length();\n        for(int i=0;i<n;++i){\n            if(dp[i]==INT_MAX){\n                continue;\n            }\n\n            TrieNode* node=trie.root;\n            for(int j=i;j<n;++j){\n                if(node->children.find(target[j])==node->children.end()){\n                    break;\n                }\n                node=node->children[target[j]];\n                for(auto& end:node->ends){\n                    int word_idx=end.first;\n                    int word_cost=end.second;\n                    int word_len=words[word_idx].length();\n                    if(i+word_len<=n){\n                        dp[i+word_len]=min(dp[i+word_len],dp[i]+word_cost);\n                    }\n                }\n            }\n        }\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs){\n        int n=target.length();\n        vector<int> dp(n+1, INT_MAX);\n        dp[0]=0;\n\n        Trie trie;\n        precompute(target, words, costs, trie);\n        updateDp(target, dp, trie, words);\n\n        return dp[n]==INT_MAX?-1:dp[n];\n    }\n};\n",
    "submit_ts": "1720322149",
    "subm_id": "1312342044"
}