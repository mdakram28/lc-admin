{
    "username": "qdd1999",
    "submission": "class Solution {\npublic:\n  int minimumSum(vector<vector<int>>& grid) {\n    int n = grid.size(), m = grid[0].size();\n\n    auto getsize = [&](int x1, int y1, int x2, int y2) {\n      int min_x = x2, max_x = x1, min_y = y2, max_y = y1;\n      for (int i = x1; i <= x2; ++i) {\n        for (int j = y1; j <= y2; ++j) {\n          if (grid[i][j] == 1) {\n            min_x = min(min_x, i);\n            max_x = max(max_x, i);\n            min_y = min(min_y, j);\n            max_y = max(max_y, j);\n          }\n        }\n      }\n      if (max_x < min_x || max_y < min_y) {\n        return 100000;\n      }\n      return (max_x - min_x + 1) * (max_y - min_y + 1);\n    };\n\n    int ans = 100000;\n\n    for (int x1 = 0; x1 < n - 2; x1++) {\n      for (int x2 = x1 + 1; x2 < n - 1; x2++) {\n        ans =\n            min(ans, getsize(0, 0, x1, m - 1) + getsize(x1 + 1, 0, x2, m - 1) +\n                         getsize(x2 + 1, 0, n - 1, m - 1));\n      }\n    }\n    for (int y1 = 0; y1 < m - 2; y1++) {\n      for (int y2 = y1 + 1; y2 < m - 1; y2++) {\n        ans =\n            min(ans, getsize(0, 0, n - 1, y1) + getsize(0, y1 + 1, n - 1, y2) +\n                         getsize(0, y2 + 1, n - 1, m - 1));\n      }\n    }\n    for (int x = 0; x < n - 1; x++) {\n      for (int y = 0; y < m - 1; y++) {\n        ans = min(ans, getsize(0, 0, x, y) + getsize(0, y + 1, x, m - 1) +\n                           getsize(x + 1, 0, n - 1, m - 1));\n        ans = min(ans, getsize(0, 0, x, m - 1) + getsize(x + 1, 0, n - 1, y) +\n                           getsize(x + 1, y + 1, n - 1, m - 1));\n        ans = min(ans, getsize(0, 0, n - 1, y) + getsize(0, y + 1, x, m - 1) +\n                           getsize(x + 1, y + 1, n - 1, m - 1));\n        ans = min(ans, getsize(0, 0, x, y) + getsize(x + 1, 0, n - 1, y) +\n                           getsize(0, y + 1, n - 1, m - 1));\n      }\n    }\n    return ans;\n  }\n};\n",
    "submit_ts": 1719112178.0
}