{
    "username": "lu_1005_lu",
    "submission": "class Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        // find a union connect top+right or left+bottom\n        // check if circle intersect: r1+r2 >= |c1, c2|\n        // check if circle meets edges: c + r >= top/right, <= left/bottom\n        int idx = 0;\n        map<int, vector<vector<int>>> groups;\n        for(auto& x: circles){\n            vector<int> interGroups;\n            for(auto [i, g]: groups){\n                for(auto& c: g){\n                    if(intersect(x, c)){\n                        interGroups.push_back(i);\n                        break;\n                    }\n                }\n            }\n\n            if(interGroups.size() == 0) groups[idx++].push_back(x);\n            else if(interGroups.size() == 1) groups[interGroups[0]].push_back(x);\n            else{\n                int m = interGroups.size();\n                for(int i = 0; i < m-1; i++){\n                    move(groups[interGroups[i]].begin(), groups[interGroups[i]].end(), back_inserter(groups[interGroups[m-1]]));\n                    groups[interGroups[i]].clear();\n                }\n                groups[interGroups[m-1]].push_back(x);\n            }\n        }\n        \n        bool left, bottom, top, right;\n        for(auto [i, g]: groups){\n            left = false, bottom = false, top = false, right = false;\n            for(auto& c: g){\n                int x = c[0], y = c[1], r = c[2];\n                if(x - r <= 0) left = true;\n                if(x + r >= X) right = true;\n                if(y - r <= 0) bottom = true;\n                if(y + r >= Y) top = true;\n            }\n            // printf(\"%d %d %d %d\\n\", l?1:0, r?1:0, b?1:0, t?1:0);\n            if((left && bottom) || (top && right) || (left && right) || (top && bottom)) return false;\n        }\n        return true;\n    }\n\n    bool intersect(vector<int>& a, vector<int>& b){\n        double dx = abs(a[0] - b[0]), dy = abs(a[1] - b[1]);\n        double distance = sqrt(dx*dx + dy*dy);\n        int ra = a[2], rb = b[2];\n        if(ra + rb >= distance) return true;\n        else return false;\n    }\n};",
    "submit_ts": "1722137867",
    "subm_id": "1335775918"
}