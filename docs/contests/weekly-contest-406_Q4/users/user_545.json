{
    "username": "shivamsaxena56",
    "submission": "#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        int horizontalPieces = 1, verticalPieces = 1;\n        int i = 0, j = 0;\n\n         while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                totalCost += horizontalCut[i] * verticalPieces;\n                horizontalPieces++;\n                i++;\n            } else {\n                totalCost += verticalCut[j] * horizontalPieces;\n                verticalPieces++;\n                j++;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            totalCost += horizontalCut[i] * verticalPieces;\n            horizontalPieces++;\n            i++;\n        }\n        while (j < verticalCut.size()) {\n            totalCost += verticalCut[j] * horizontalPieces;\n            verticalPieces++;\n            j++;\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925337",
    "subm_id": "1320251282"
}