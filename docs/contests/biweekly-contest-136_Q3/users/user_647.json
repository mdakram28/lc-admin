{
    "username": "chiangCS",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        ans = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                a = grid[i][j]\n                b = grid[i][n-1-j]\n                c = grid[m-1-i][j]\n                d = grid[m-1-i][n-1-j]\n                tmp = a+b+c+d\n                if tmp <=2:\n                    ans += tmp\n                else:\n                    ans += 4 - tmp\n        if m % 2 == 1 and n % 2 == 1 and grid[m//2][n//2] == 1:\n            ans += 1\n        tmp_sm = 0\n        cnt = 0\n        if m % 2 == 1:\n            for j in range(n//2):\n                if grid[m//2][j] == grid[m//2][n-1-j] and grid[m//2][j] == 1:\n                    cnt += 1\n                elif grid[m//2][j] != grid[m//2][n-1-j]:\n                    tmp_sm += 1\n        if n % 2 == 1:\n            for j in range(m//2):\n                if grid[j][n//2] == grid[m-1-j][n//2] and grid[j][n//2] == 1:\n                    cnt += 1\n                elif grid[j][n//2] != grid[m-1-j][n//2]:\n                    tmp_sm += 1\n        if cnt % 2 == 1 and tmp_sm == 0:\n            ans += 2\n        return ans + tmp_sm\n\n\n\n        ",
    "submit_ts": "1722697771",
    "subm_id": "1343158321"
}