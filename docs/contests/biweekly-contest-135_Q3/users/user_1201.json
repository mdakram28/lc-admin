{
    "username": "uttaran_das",
    "submission": "class Solution {\n    private class FenwickTree {\n        int n;\n        int[] bit;\n\n        FenwickTree(int n) {\n            this.n = n+1;\n            bit = new int[n+1];\n        }\n\n        private void add(int idx, int val) {\n            for (++idx; idx < n; idx += idx & -idx) bit[idx] += val;\n        }\n\n        private void range_add(int l, int r, int val) {\n            add(l, val);\n            add(r + 1, -val);\n        }\n\n        private int point_query(int idx) {\n            int ret = 0;\n            for (++idx; idx > 0; idx -= idx & -idx)\n                ret += bit[idx];\n            return ret;\n        }\n    }\n\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        FenwickTree ft = new FenwickTree(k+1);\n\n        for(int i=0; i<n/2; i++) {\n            int mn = Math.min(nums[i],nums[n-i-1]), mx = Math.max(nums[i],nums[n-i-1]);\n            int oneChangesTill = Math.max(k-mn,mx), diff = mx-mn;\n            ft.range_add(0, oneChangesTill, 1);\n            ft.range_add(oneChangesTill+1, k, 2);\n            ft.range_add(diff, diff, (diff<=oneChangesTill? -1: -2));\n        }\n\n        int ans = Integer.MAX_VALUE;\n        for(int X=0; X<=k; X++) ans = Math.min(ans, ft.point_query(X));\n        return ans;\n    }\n}",
    "submit_ts": "1721489560",
    "subm_id": "1327457012"
}