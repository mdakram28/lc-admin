{
    "username": "sheepforever",
    "submission": "const int N = 100007;\nconst int MOD = 1000000007;\n\nusing Arr = array<array<long long, 2>, 2>;\n\nint val[N];\nArr sum[N * 4];\n\nArr merge(Arr& left, Arr& right) {\n    Arr ret;\n    for (int i = 0; i < 2; ++i) {\n        for (int j = 0; j < 2; ++j) {\n            ret[i][j] = max(left[i][0] + right[0][j], max(left[i][0] + right[1][j], left[i][1] + right[0][j]));\n        }\n    }\n    return ret;\n}\n\nvoid build(int left, int right, int x) {\n    if (left == right) {\n        for (int i = 0; i < 2; ++i) {\n            for (int j = 0; j < 2; ++j) {\n                sum[x][i][j] = 0;\n            }\n        }\n        sum[x][1][1] = max(0, val[left]);\n        return;\n    }\n    int mid = (left + right) >> 1;\n    build(left, mid, x * 2);\n    build(mid + 1, right, x * 2 + 1);\n    sum[x] = merge(sum[x * 2], sum[x * 2 + 1]);\n}\n\nvoid update(int left, int right, int at, int x) {\n    if (left == right) {\n        for (int i = 0; i < 2; ++i) {\n            for (int j = 0; j < 2; ++j) {\n                sum[x][i][j] = 0;\n            }\n        }\n        sum[x][1][1] = max(0, val[left]);\n        return;\n    }\n    int mid = (left + right) >> 1;\n    if (at <= mid) {\n        update(left, mid, at, x * 2);\n    } else {\n        update(mid + 1, right, at, x * 2 + 1);\n    }\n    sum[x] = merge(sum[x * 2], sum[x * 2 + 1]);\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            val[i] = nums[i];\n        }\n        build(0, n - 1, 1);\n        long long ret = 0;\n        for (auto& query : queries) {\n            int pos = query[0];\n            int newValue = query[1];\n            val[pos] = newValue;\n            update(0, n - 1, pos, 1);\n\n            long long cur = 0;\n            for (int i = 0; i < 2; ++i) {\n                for (int j = 0; j < 2; ++j) {\n                    cur = max(cur, sum[1][i][j]);\n                }\n            }\n            ret = (ret + cur) % MOD;\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1716691982.0
}