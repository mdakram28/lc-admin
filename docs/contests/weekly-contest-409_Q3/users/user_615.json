{
    "username": "nayo0513",
    "submission": "use std::collections::BTreeSet;\n\n// fn main() {}\n\n// #[allow(dead_code)]\n// struct Solution;\n\nimpl Solution {\n    pub fn shortest_distance_after_queries(n: i32, queries: Vec<Vec<i32>>) -> Vec<i32> {\n        let n = n as usize;\n        let mut ans = vec![];\n        let mut set = (0..n - 1).collect::<BTreeSet<_>>();\n        for ve in queries.iter() {\n            let to_remove = set\n                .range(ve[0] as usize..ve[1] as usize-1)\n                .cloned()\n                .collect::<Vec<_>>();\n            for v in to_remove {\n                set.remove(&v);\n            }\n\n            ans.push(set.len() as i32);\n        }\n        ans\n    }\n}\n",
    "submit_ts": "1722742449",
    "subm_id": "1343769207"
}