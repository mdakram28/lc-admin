{
    "username": "zeus_0790",
    "submission": "class Solution {\npublic:\nclass SparseTable {\npublic:\n    vector<vector<int>> st;\n    vector<int> log;\n\n    SparseTable(vector<int>& v) {\n        int n = v.size();\n        int maxLog = log2(n) + 1;\n        st.assign(n, vector<int>(maxLog));\n        log.assign(n + 1, 0);\n\n        for (int i = 2; i <= n; ++i)\n            log[i] = log[i / 2] + 1;\n\n        for (int i = 0; i < n; ++i)\n            st[i][0] = v[i];\n\n        for (int j = 1; j < maxLog; ++j) {\n            for (int i = 0; i + (1 << j) <= n; ++i) {\n                st[i][j] = st[i][j - 1] & st[i + (1 << (j - 1))][j - 1];\n            }\n        }\n    }\n\n    int get_and(int L, int R) {\n        int j = log[R - L + 1];\n        return st[L][j] & st[R - (1 << j) + 1][j];\n    }\n};\n\n    long long countSubarrays(vector<int>& v, int k) {\n        int n = v.size();\n        SparseTable st(v);\n\n        long long ans = 0;\n\n        for(int i = 0 ; i < n ; i++){\n            int lo = 0;\n            int hi = n - i - 1;\n            long long ans1 = i - 1;\n            long long ans2 = i - 1;\n            while(lo <= hi){\n                int mid = (lo + hi) / 2;\n                int h = st.get_and(i,i + mid);\n                if(h >= k){\n                    ans1 = i + mid;\n                    lo = mid + 1;\n                }\n                else{\n                    hi = mid - 1;\n                }\n            }\n            lo = 0;\n            hi = n - i - 1;\n             while(lo <= hi){\n                int mid = (lo + hi) / 2;\n                int h = st.get_and(i,i + mid);\n                if(h > k){\n                    ans2 = i + mid;\n                    lo = mid + 1;\n                }\n                else{\n                    hi = mid - 1;\n                }\n            }\n            cout << ans1 << \" \" << ans2 <<endl;\n            ans += (ans1 - ans2);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720280573",
    "subm_id": "1311794426"
}