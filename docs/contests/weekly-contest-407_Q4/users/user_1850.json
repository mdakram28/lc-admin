{
    "username": "shivanshudixit16",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        a = [t-x for x,t in zip(nums,target)]\n        \n        def pr(ca):\n            # print(ca)\n            if not ca: return 0\n            h = []\n            \n            for i,cn in enumerate(ca):\n                heappush(h,(-cn,i))\n            \n            p = {}\n            def find(x):\n                p.setdefault(x,x)\n                if p[x] != x:\n                    p[x]= find(p[x]) \n                return p[x]\n            \n            ans = 0\n            while h:\n                cmx = h[0][0]\n                \n                cp = []\n                while h and h[0][0] == cmx:\n                    cp.append(heappop(h)[1])\n                    cpp = find(cp[-1])\n                    if cp[-1] + 1 in p:\n                        p1,p2 = find(cp[-1]+1),find(cp[-1])\n                        p[p2] = p1\n                    if cp[-1] - 1 in p:\n                        p1,p2 = find(cp[-1]-1),find(cp[-1])\n                        p[p2] = p1\n                        \n                cmx = -cmx\n                nmx = 0 if not h else -h[0][0]\n                dff = cmx - nmx\n                # print(dff,p.keys())\n                for cn in p.keys():\n                    if find(cn) == cn:\n                        ans += dff\n            return ans\n        \n        ans = 0\n        ca = []\n        # print(a)\n        for i in range(len(a)):\n            ca.append(abs(a[i]))\n            if i + 1 >= len(a) or a[i+1] == 0 or  ((a[i+1] > 0) != (a[i] > 0)):\n\n                ans += pr(ca)\n                ca = []\n        return ans\n\n                \n                \n                \n            \n            \n            ",
    "submit_ts": "1721532781",
    "subm_id": "1327993955"
}