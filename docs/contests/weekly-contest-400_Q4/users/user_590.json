{
    "username": "bluesky999",
    "submission": "import java.util.*;\n\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int min = Integer.MAX_VALUE;\n        int pre[] = new int[31];\n\n        Arrays.fill(pre, -1);\n        for (int i = 0; i < nums.length; i++) {\n            int cur = nums[i];\n            min = Math.min(min, Math.abs(cur - k));\n            for (int j = 0; j <= 30; j++)\n                if ((cur & (1 << j)) == 0)\n                    pre[j] = i;\n\n            do {\n                int l = -1;\n                for (int j = 0; j <= 30; j++)\n                    if ((cur & (1 << j)) != 0)\n                        l = Math.max(l, pre[j]);\n                if (l < 0)\n                    break;\n                cur = cur & nums[l];\n                min = Math.min(min, Math.abs(cur - k));\n            } while (cur > k);\n        }\n        return min;\n    }\n\n    static void tr(Object... o) {\n        System.out.println(Arrays.deepToString(o));\n    }\n\n}",
    "submit_ts": 1717298396.0
}