{
    "username": "CS_MONKS",
    "submission": "\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hCuts(horizontalCut.begin(), horizontalCut.end());\n        priority_queue<int> vCuts(verticalCut.begin(), verticalCut.end());\n        \n        long long hp = 1;\n        long long vp = 1;\n        \n        long long ans = 0;\n        \n        while (!hCuts.empty() || !vCuts.empty()) {\n            if (vCuts.empty() || (!hCuts.empty() && hCuts.top() >= vCuts.top())) {\n                ans += (long long)(hCuts.top())*vp;\n                hCuts.pop();\n                hp++;\n            } else {\n                ans +=(long long)(vCuts.top())*hp;\n                vCuts.pop();\n                vp++;\n            }\n        }\n        \n        return ans;\n    }\n};\n",
    "submit_ts": "1720925422",
    "subm_id": "1320254221"
}