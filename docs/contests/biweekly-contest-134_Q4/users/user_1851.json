{
    "username": "Traveller_",
    "submission": "class Solution {\npublic:\n\n    long long _and(vector<vector<int>> &dp,int l,int r){\n        if(l>r)return (1ll<<31)-1;\n        long long ans = 0;\n\n        for(int j=0;j<31;j++){\n            int ct = dp[r][j] - (l?dp[l-1][j]:0);\n            if(ct == r-l+1)ans |= (1ll<<j);\n        }\n        return ans;\n    }\n\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n\n        vector<vector<int>> dp(n,vector<int>(31));\n\n        for(int i=0;i<n;i++){\n            for(int j=0;j<31;j++){\n                int is = (nums[i]>>j)&1;\n                if(is)dp[i][j] = 1 + (i?dp[i-1][j]:0);\n                else dp[i][j] = (i?dp[i-1][j]:0);\n            }\n        }\n\n\n\n        long long pre[n];\n\n        for(int i=0;i<n;i++){\n            int l=0,r=i;\n            int lower=-1;\n            while(l<=r){\n                int mid = (l+r)/2;\n                int val = _and(dp,mid,i);\n                if(val < k){\n                    l=mid+1;\n                }else if(val > k){\n                    r=mid-1;\n                }else{\n                    r=mid-1;\n                    lower=mid;\n                }\n            }\n            l=0,r=i;\n            int higher=-1;\n            while(l<=r){\n                int mid = (l+r)/2;\n                int val = _and(dp,mid,i);\n                if(val < k){\n                    l=mid+1;\n                }else if(val > k){\n                    r=mid-1;\n                }else{\n                    l=mid+1;\n                    higher=mid;\n                }\n            }\n            // cout<<lower<<\" \"<<higher<<\"\\n\";\n            if(lower!=-1)pre[i] = higher-lower+1;\n            else pre[i]=0;\n        }\n\n        long long ans=0;\n\n        for(int val:pre){\n            ans+=val;\n        }\n\n        return ans;\n\n\n    }\n};",
    "submit_ts": "1720281284",
    "subm_id": "1311819555"
}