{
    "username": "saideepakmara",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9 + 7;\n    int maxInv = 400;\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> mp;\n        for (auto& req : requirements) {\n            mp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<int>> dp(n + 1, vector<int>(maxInv + 1, 0));\n        dp[0][0] = 1;\n\n        for (int len = 1; len <= n; ++len) {\n            for (int inv = 0; inv <= maxInv; ++inv) {\n                for (int k = 0; k < len; ++k) {\n                    if (inv >= k) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][inv - k]) % MOD;\n                    }\n                }\n            }\n\n            if (mp.count(len)) {\n                int reqq = mp[len];\n                for (int inv = 0; inv <= maxInv; ++inv) {\n                    if (inv != reqq) {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        int res = 0;\n        for (int inv = 0; inv <= maxInv; ++inv) {\n            res = (res + dp[n][inv]) % MOD;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": 1719071475.0
}