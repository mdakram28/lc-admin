{
    "username": "samonkeys",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        m = grid.size();\n        n = grid[ 0 ].size();\n        dp = vector<vector<vector<vector<int>>>>( m, vector<vector<vector<int>>>( m, vector<vector<int>>( n, vector<int>( n, -1 ) ) ) );\n        \n        int ans = INT_MAX;\n        for( int i = 0; i < m - 1; ++i ) {\n            for( int j = 0; j < n - 1; ++j ) {\n                int a1 = query( 0, i, 0, j, grid );\n                int s1 = query( i + 1, m - 1, 0, n - 1, grid ) + query( 0, i, j + 1, n - 1, grid );\n                int s2 = query( i + 1, m - 1, 0, j, grid ) + query( 0, m - 1, j + 1, n - 1, grid );\n                ans = min( ans, a1 + min( s1, s2 ) );\n            }\n        }\n        \n        for( int j = 0; j < n - 1; ++j ) {\n            int a1 = query( 0, m - 1, 0, j, grid );\n            int a2 = min2( j + 1, grid );\n            ans = min( ans, a1 + a2 );\n        }\n        \n        for( int i = 0; i < m - 1; ++i ) {\n            int a1 = query( 0, i, 0, n - 1, grid );\n            int a2 = min1( i + 1, grid );\n            ans = min( ans, a1 + a2 );\n        }\n        \n        return ans;\n    }\n    \n    int min1(int r, vector<vector<int>>& grid) {\n        int ans = INT_MAX;\n        for( int i = r; i < m - 1; ++i ) {\n            int s1 = query( r, i, 0, n - 1, grid );\n            int s2 = query( i + 1, m - 1, 0, n - 1, grid );\n            ans = min( ans, s1 + s2 );\n        }    \n        \n        for( int j = 0; j < n - 1; ++j ) {\n            int s1 = query( r,  m - 1, 0, j, grid );\n            int s2 = query( r, m - 1, j + 1, n - 1, grid );\n            ans = min( ans, s1 + s2 );\n        }   \n        \n        return ans;\n    }\n    \n    int min2(int c, vector<vector<int>>& grid) {\n        int ans = INT_MAX;\n        for( int j = c; j < n - 1; ++j ) {\n            int s1 = query( 0, m - 1, c, j, grid );\n            int s2 = query( 0, m - 1, j + 1, n - 1, grid );\n            ans = min( ans, s1 + s2 );\n        }  \n        \n        for( int i = 0; i < m - 1; ++i ) {\n            int s1 = query( 0, i, c, n - 1, grid );\n            int s2 = query( i + 1, m - 1, c, n - 1, grid );\n            ans = min( ans, s1 + s2 );            \n        }\n        \n        return ans;\n    }\n\nprivate:\n    vector<vector<vector<vector<int>>>> dp;\n    int m, n;    \n    int query(int r1, int r2, int c1, int c2, vector<vector<int>>& grid) {\n        if( dp[ r1 ][ r2 ][ c1 ][ c2 ] != -1 ) {\n            return dp[ r1 ][ r2 ][ c1 ][ c2 ];\n        }\n        \n        int rMin = INT_MAX, rMax = INT_MIN;\n        int cMin = INT_MAX, cMax = INT_MIN;\n        bool is1 = false;\n        \n        for( int i = r1; i <= r2; ++i ) {\n            for( int j = c1; j <= c2; ++j ) {\n                if( grid[ i ][ j ] == 1 ) {\n                    rMin = min( rMin, i );\n                    rMax = max( rMax, i );\n                    cMin = min( cMin, j );\n                    cMax = max( cMax, j );\n                    is1 = true;\n                }\n            }\n        }\n        \n        if( !is1 ) {\n            return dp[ r1 ][ r2 ][ c1 ][ c2 ] = 0;\n        }\n        \n        return dp[ r1 ][ r2 ][ c1 ][ c2 ] = ( rMax - rMin + 1 ) * ( cMax - cMin + 1 );\n    }\n};",
    "submit_ts": 1719115010.0
}