{
    "username": "sad-coridot",
    "submission": "#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int f[2 * n + 5];\n        memset(f, 0, sizeof(f));\n        f[1] = 1;\n        int color[2 * n + 5];\n        for(int i = 1; i <= n; i ++) color[i] = colors[i - 1];\n        for(int i = n + 1; i <= 2 * n; i ++) color[i] = color[i - n];\n        for(int i = 2; i <= 2 * n; i ++) {\n            f[i] = 1;\n            if(color[i] != color[i - 1]) {\n                f[i] = max(f[i], f[i - 1] + 1);\n            }\n        }\n        int ans = 0;\n        for(int i = n + 1; i <= 2 * n; i ++) {\n            if(f[i] >= k) ans += 1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720276646",
    "subm_id": "544551521"
}