{
    "username": "DakshSahani",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n\n        int ans = n*m;\n        for(int i1=0; i1<n-1; i1++){\n            for(int i2=i1+1; i2<n-1; i2++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(i <= i1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(i <= i2){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n\n            for(int j1=0; j1<m-1; j1++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(i <= i1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(j <= j1){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n            \n            for(int j1=0; j1<m-1; j1++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(i > i1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(j <= j1){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n        }\n        \n        \n        for(int j1=0; j1<m-1; j1++){\n            for(int i2=0; i2<n-1; i2++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(j <= j1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(i <= i2){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n\n            for(int i2=0; i2<n-1; i2++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(j > j1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(i <= i2){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n\n            \n            for(int j2=j1+1; j2<m-1; j2++){\n                int t1=n-1,b1=0,r1=0,l1=m-1;\n                int t2=n-1,b2=0,r2=0,l2=m-1;\n                int t3=n-1,b3=0,r3=0,l3=m-1;\n\n                for(int i=0; i<n; i++){\n                    for(int j=0; j<m; j++){\n                        if(grid[i][j] == 1){\n                            if(j <= j1){\n                                t1 = min(t1, i);\n                                b1 = max(b1, i);\n                                r1 = max(r1, j);\n                                l1 = min(l1, j);\n                            }else if(j <= j2){\n                                t2 = min(t2, i);\n                                b2 = max(b2, i);\n                                r2 = max(r2, j);\n                                l2 = min(l2, j);\n                            }else{\n                                t3 = min(t3, i);\n                                b3 = max(b3, i);\n                                r3 = max(r3, j);\n                                l3 = min(l3, j);\n                            }\n                        }\n                    }\n                }\n                if(b1<t1 || r1<l1 || b2<t2 || r2<l2 || b3<t3 || r3<l3){\n                    continue;\n                }\n                int a1 = (b1-t1+1) * (r1-l1+1);\n                int a2 = (b2-t2+1) * (r2-l2+1);\n                int a3 = (b3-t3+1) * (r3-l3+1);\n                // if(a1 +a2 + a3 < ans){\n                //     cout << t1 << ' '<<b1 << ' '<<l1 <<' '<<r1 <<endl;\n                //     cout << t2 << ' '<<b2 << ' '<<l2 <<' '<<r2 <<endl;\n                //     cout << t3 << ' '<<b3 << ' '<<l3 <<' '<<r3 <<endl;\n                //     ans = a1 + a2 + a3;\n                // }\n                ans = min(ans, a1 + a2 + a3);\n            }\n        }\n\n\n        return ans;\n    }\n};",
    "submit_ts": 1719115172.0
}