{
    "username": "rishabhteli14",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<unordered_map<int, int>> dp(n);\n        dp[0][nums[0]] = abs(nums[0] - k);\n        int ans = dp[0][nums[0]];\n        for (int i = 1; i < n; ++i) {\n            dp[i][nums[i]] = abs(nums[i] - k);\n            ans = min(ans, dp[i][nums[i]]);\n            for (auto it : dp[i - 1]) {\n                int temp = it.first;\n                int temp2 = temp & nums[i];\n                int curr = abs(temp2 - k);\n                if (dp[i].find(temp2) == dp[i].end() ||\n                    curr < dp[i][temp2]) {\n                    dp[i][temp2] = curr;\n                    ans = min(ans, curr);\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": 1717298937.0
}