{
    "username": "neeravDev",
    "submission": "class SegmentTree {\nprivate:\n    vector<int> tree;\n    int n;\n\npublic:\n    SegmentTree(vector<int>& nums) {\n        n = nums.size();\n        tree.resize(2 * n);\n\n        // Build the segment tree\n        // Initialize leaves\n        for (int i = 0; i < n; ++i) {\n            tree[n + i] = nums[i];\n        }\n\n        // Build internal nodes\n        for (int i = n - 1; i > 0; --i) {\n            tree[i] = tree[i * 2] + tree[i * 2 + 1];\n        }\n    }\n\n    void update(int index, int value) {\n        // Update value at index and propagate changes upwards\n        index += n;\n        tree[index] = value;\n        while (index > 1) {\n            index /= 2;\n            tree[index] = tree[2 * index] + tree[2 * index + 1];\n        }\n    }\n\n    int sumRange(int left, int right) {\n        // Range sum query\n        left += n;\n        right += n;\n        int sum = 0;\n        while (left <= right) {\n            if (left % 2 == 1) {\n                sum += tree[left];\n                left++;\n            }\n            if (right % 2 == 0) {\n                sum += tree[right];\n                right--;\n            }\n            left /= 2;\n            right /= 2;\n        }\n        return sum;\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> temp(n+1, 0);\n        vector<int> ans;\n        \n        SegmentTree st(temp);\n        \n        for(int i = 1; i < n-1; ++i)\n        {\n            int a = nums[i];\n            if(a > nums[i-1] && a > nums[i+1])\n            {\n                st.update(i, 1);\n            }\n        }\n        \n        int m = queries.size();\n        \n        \n        for(int i = 0; i < m; ++i)\n        {\n            int a = queries[i][0];\n            if(a== 1)\n            {\n                int left = queries[i][1];\n                int right = queries[i][2];\n                int an = st.sumRange(left, right);\n                \n                an-=st.sumRange(left, left);\n                if(left!=right)\n                an-=st.sumRange(right, right);\n                ans.push_back(an);\n            }\n            else\n            {\n                int index = queries[i][1];\n                int value = queries[i][2];\n                int a = nums[index];\n                \n                if(index!=0 && index != n-1)\n                {\n                    if(a > nums[index-1] && a > nums[index+1])\n                    {\n                        // cout<<\"hello1\";\n                        st.update(index, 0);\n                    }\n                }\n                if(index-2>=0)\n                {\n                    int b = nums[index-1];\n                    if(b > nums[index-2] && b > a)\n                    {\n                        // cout<<\"hello2\";\n                        st.update(index-1, 0);\n                    }\n                }\n                \n                if(index+2<n)\n                {\n                    int b = nums[index+1];\n                    if(b > nums[index+2] && b > a)\n                    {\n                        // cout<<\"hello3\";\n                        st.update(index+1, 0);\n                    }\n                }\n                \n                \n                nums[index] = value;\n                a = value;\n                \n                \n                if(index!=0 && index != n-1)\n                {\n                    if(a > nums[index-1] && a > nums[index+1])\n                    {\n                        // cout<<\"hey1\";\n                        st.update(index, 1);\n                    }\n                }\n                if(index-2>=0)\n                {\n                    int b = nums[index-1];\n                    if(b > nums[index-2] && b > a)\n                    {\n                         // cout<<\"hey2\";\n                        st.update(index-1, 1);\n                    }\n                }\n                \n                if(index+2<n)\n                {\n                    int b = nums[index+1];\n                    if(b > nums[index+2] && b > a)\n                    {\n                         // cout<<\"hey3\";\n                        st.update(index+1, 1);\n                    }\n                }\n                // for(int j = 0; j < n; ++j)\n                // {\n                //     cout<<nums[j]<<\" \"<<st.sumRange(j, j)<<endl;\n                // }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718508517.0
}