{
    "username": "ayushisk",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n            \n    priority_queue<int> pqH(horizontalCut.begin(), horizontalCut.end());\n    priority_queue<int> pqV(verticalCut.begin(), verticalCut.end());\n\n    long long totalCost = 0;\n    int horizontalPieces = 1;\n    int verticalPieces = 1;\n\n    \n    while (!pqH.empty() && !pqV.empty()) {\n        if (pqH.top() >= pqV.top()) {\n            totalCost += (long long)pqH.top() * verticalPieces;\n            horizontalPieces++;\n            pqH.pop();\n        } else {\n            totalCost += (long long)pqV.top() * horizontalPieces;\n            verticalPieces++;\n            pqV.pop();\n        }\n    }\n\n    \n    while (!pqH.empty()) {\n        totalCost += (long long)pqH.top() * verticalPieces;\n        horizontalPieces++;\n        pqH.pop();\n    }\n\n   \n    while (!pqV.empty()) {\n        totalCost += (long long)pqV.top() * horizontalPieces;\n        verticalPieces++;\n        pqV.pop();\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720925198",
    "subm_id": "1320246381"
}