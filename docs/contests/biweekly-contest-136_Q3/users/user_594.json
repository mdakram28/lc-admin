{
    "username": "technique_god",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        H = len(grid)\n        W = len(grid[0])\n\n        ans = 0\n        if H%2 == 1 and W%2 == 1:\n            ans = grid[ (H-1)//2 ][ (W-1)//2 ]\n\n        # corners\n        for r in range((H)//2):\n            for c in range((W)//2):\n                ones = 0\n                ones += grid[r][c]\n                if W-1-c > c:\n                    ones += grid[r][W-1-c]\n                if H-1-r > r:\n                    ones += grid[H-1-r][c]\n                if H-1-r > r and W-1-c > c:\n                    ones += grid[H-1-r][W-1-c]\n    \n                print(r,c,ones)\n                tofix = min(ones, 4-ones)\n                ans += tofix\n\n        pair_sum = 0\n        errs = 0\n        cC = (W-1)//2\n        if W%2 == 1:\n            for r in range(H//2):\n                print(r,H-1-r,cC,H,W)\n                cnt = grid[r][cC]+grid[H-1-r][cC]\n                if cnt == 1:\n                    errs += 1\n                if cnt == 2:\n                    pair_sum += 2\n        cH = (H-1)//2\n        if H%2 == 1:\n            for c in range(W//2):\n                print(cH,c,W-1-c,H,W)\n                cnt = grid[cH][c]+grid[cH][W-1-c]\n                if cnt == 1:\n                    errs += 1\n                if cnt == 2:\n                    pair_sum += 2\n        print(\"@\",pair_sum, errs)\n        if pair_sum % 4 == 2 and errs == 0:\n            errs += 2\n\n        return ans + errs\n        \n\n\n",
    "submit_ts": "1722697589",
    "subm_id": "1343151929"
}