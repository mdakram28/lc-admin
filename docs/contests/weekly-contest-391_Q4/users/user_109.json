{
    "username": "ampish",
    "submission": "class Solution {\n#define ll long long\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        multiset<ll> sum,diff;\n        \n        for(int i=0;i<n;i++){\n            int xCord = points[i][0];\n            int yCord = points[i][1];\n            sum.insert(xCord+yCord);\n            diff.insert(xCord-yCord);\n        }\n        \n        ll ans = 1e9;\n        for(int i=0;i<n;i++){\n            int xCord = points[i][0];\n            int yCord = points[i][1];\n            ll SUM = xCord + yCord;\n            ll DIFF = xCord - yCord;\n            sum.erase(sum.find(SUM));\n            diff.erase(diff.find(DIFF));\n            ll val1 = *sum.rbegin()- *sum.begin();\n            ll val2 = *diff.rbegin() - *diff.begin();\n            ans=min(ans,max(val1,val2));\n            sum.insert(SUM);\n            diff.insert(DIFF);\n        }\n        \n        return ans;\n    }\n};"
}