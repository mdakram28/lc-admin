{
    "username": "thapasijan171",
    "submission": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar minChanges = function(nums, k) {\n    const m = new Map();\n    const v = [];\n\n    // Collect the values and build the map\n    for (let i = 0; i < nums.length / 2; i++) {\n        const a = nums[i];\n        const b = nums[nums.length - i - 1];\n        const diff = Math.abs(a - b);\n        const X = Math.max(a, b, k - a, k - b);\n\n        if (!m.has(diff)) {\n            m.set(diff, []);\n        }\n        m.get(diff).push(X);\n        v.push(X);\n    }\n\n    let ans = nums.length;\n    v.sort((a, b) => a - b);\n\n    // Process each value in the map\n    for (const [diff, values] of m) {\n        let T = binarySearch(v, diff) * 2 + (nums.length / 2 - binarySearch(v, diff));\n\n        for (const X of values) {\n            if (X < diff) {\n                T -= 2;\n            } else {\n                T -= 1;\n            }\n        }\n\n        ans = Math.min(ans, T);\n    }\n\n    return ans;\n};\n\n// Binary search function to find the index\nfunction binarySearch(arr, target) {\n    let low = 0;\n    let high = arr.length;\n\n    while (low < high) {\n        const mid = Math.floor((low + high) / 2);\n        if (arr[mid] < target) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    return low;\n}\n",
    "submit_ts": "1721488967",
    "subm_id": "1327438696"
}