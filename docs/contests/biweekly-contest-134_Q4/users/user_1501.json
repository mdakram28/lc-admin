{
    "username": "Sury213",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size() ;\n         set<int>st ;\n        //int n = nums.size() ;\n        long long ans = 0 ;\n        unordered_map<int,long long>mp ;\n        mp[0] = 1;\n        for(int i = 0; i < n ; i++)\n        {\n            \n                set<int>tmp ;\n            unordered_map<int,long long>nmp ;\n                for(auto it : st)\n                {\n                    if((it&nums[i]) == k)\n                    {\n                      //  cout<<i<<\" \"<<\" \"<<mp[it]<<\" \"<<it<<endl ;\n                        ans = ans+mp[it] ;\n                    }\n                   \n                    tmp.insert(it&nums[i]) ;\n                    nmp[it&nums[i]]+=mp[it] ;\n                }\n                if(nums[i] == k)\n                {\n                     ans = ans+1 ;\n                   // cout<<i<<endl ;\n                }\n                   if(i == 4)\n                   {\n                       cout<<mp[0]<<endl ;\n                   }\n                tmp.insert(nums[i]) ;\n            nmp[nums[i]]++ ;\n                st = tmp ;\n            mp = nmp ;\n           \n        }\n        return ans ;\n    }\n};",
    "submit_ts": "1720280124",
    "subm_id": "1311777805"
}