{
    "username": "gonglinyuan",
    "submission": "from collections import defaultdict\n\nclass Solution:\n    def maximumLength(self, a: List[int], k: int) -> int:\n        n = len(a)\n        f = [[0 for _ in range(k + 1)] for _ in range(n)]\n        for h in range(k + 1):\n            f[0][h] = 1\n        mx = [f[0][h] for h in range(k + 1)]\n        mx2 = [defaultdict(int) for h in range(k + 1)]\n        for h in range(k + 1):\n            mx2[h][a[0]] = f[0][h]\n        for i in range(1, n):\n            for h in range(k + 1):\n                if h > 0:\n                    f[i][h] = mx[h - 1] + 1\n                f[i][h] = max(f[i][h], mx2[h][a[i]] + 1)\n                # for j in range(i):\n                    # if h > 0:\n                    #     f[i][h] = max(f[i][h], f[j][h - 1] + 1)\n                    # if a[i] == a[j]:\n                    #     f[i][h] = max(f[i][h], f[j][h] + 1)\n            for h in range(k + 1):\n                mx[h] = max(mx[h], f[i][h])\n                mx2[h][a[i]] = max(mx2[h][a[i]], f[i][h])\n        # print(f)\n        return max(f[i][k] for i in range(n))",
    "submit_ts": 1717859284.0
}