{
    "username": "stevenhgs2",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n_r, n_c = len(grid), len(grid[0])\n\n        nb_fours_row, nb_fours_col = n_r // 2, n_c // 2\n        nb_changes = 0\n        for r in range(nb_fours_row):\n            for c in range(nb_fours_col):\n                t_l_r, t_l_c = r, c\n                t_r_r, t_r_c = r, n_c - 1 - c\n                b_l_r, b_l_c = n_r - 1 - r, c\n                b_r_r, b_r_c = n_r - 1 - r, n_c - 1 - c\n                nb_ones = grid[t_l_r][t_l_c] + grid[t_r_r][t_r_c] + grid[b_l_r][b_l_c] + grid[b_r_r][b_r_c]\n                nb_changes += min(nb_ones, 4 - nb_ones)\n        \n        nb_r_changes = 0\n        nb_r_ones = 0\n        if n_r % 2 == 1:\n            row = grid[n_r // 2]\n            l, r = 0, n_c - 1\n            while l < r:\n                if row[l] != row[r]:\n                    nb_r_changes += 1\n                if row[l] == row[r] and row[l] == 1:\n                    nb_r_ones += 2\n                l += 1\n                r -= 1\n        \n        nb_c_changes = 0\n        nb_c_ones = 0\n        if n_c % 2 == 1:\n            col = []\n            for r in range(n_r):\n                col.append(grid[r][n_c // 2])\n            l, r = 0, n_r - 1\n            while l < r:\n                if col[l] != col[r]:\n                    nb_c_changes += 1\n                if col[l] == col[r] and col[l] == 1:\n                    nb_c_ones += 2\n                l += 1\n                r -= 1\n        \n        extra_changes = 0\n        if (nb_c_ones + nb_r_ones) % 4 != 0:\n            if nb_r_changes + nb_c_changes == 0:\n                extra_changes = 2\n\n        if n_r % 2 == 1 and n_c % 2 == 1 and grid[n_r // 2][n_c // 2] == 1:\n            extra_changes += 1\n\n        return nb_changes + nb_r_changes + nb_c_changes + extra_changes\n        ",
    "submit_ts": "1722697222",
    "subm_id": "1343138704"
}