{
    "username": "g129512",
    "submission": "import java.util.Arrays;\n\nclass Solution {\n\n    private void upMax(int[][] ar, int val, int i) {\n        if (val > ar[0][0]) {\n            ar[2] = ar[1];\n            ar[1] = ar[0];\n            ar[0] = new int[] {val, i};\n        } else if (val > ar[1][0]) {\n            ar[2] = ar[1];\n            ar[1] = new int[] {val, i};\n        } else if (val > ar[2][0]) {\n            ar[2] = new int[] {val, i};\n        }\n    }\n\n    public long maximumValueSum(int[][] a) {\n        int m = a.length, n = a[0].length;\n        int[] colmx = new int[n];\n        long[] dp2 = new long[n];\n        Arrays.fill(dp2, Long.MIN_VALUE);\n        Arrays.fill(colmx, Integer.MIN_VALUE);\n        long res = Long.MIN_VALUE;\n        for (int i = 0; i < m; i++) {\n            int[][] premx = new int[3][2];\n            int[][] curmx = new int[3][2];\n            for (int j = 0; j < 3; j++) {\n                curmx[j] = new int[] {Integer.MIN_VALUE, -1};\n                premx[j] = new int[] {Integer.MIN_VALUE, -1};\n            }\n            for (int j = 0; j < n; j++) {\n                upMax(curmx, a[i][j], j);\n                if (i > 0) {\n                    upMax(premx, colmx[j], j);\n                }\n                if (i >= 2) {\n                    res = Math.max(res, dp2[j] + (long) a[i][j]);\n                }\n            }\n            for (int j = 0; j < n; j++) {\n                for (int k = 0; k < 3; k++) {\n                    for (int l = 0; l < 3; l++) {\n                        if (premx[k][1] == curmx[l][1] && premx[k][1] != -1) continue;\n                        if (premx[k][1] == j || curmx[l][1] == j) continue;\n                        if (premx[k][1] == -1 || curmx[l][1] == -1) continue;\n                        dp2[j] = Math.max(dp2[j], (long) premx[k][0] +  (long) curmx[l][0]);\n                    }\n                }\n            }\n            for (int j = 0; j < n; j++) {\n                colmx[j] = Math.max(colmx[j], a[i][j]);\n            }\n        }\n        return res;\n    }\n//\n//    public static void main(String[] args) {\n//        new Solution().maximumValueSum(LCUtils.parseIntIntAr(\"[[-84,-2,45],[-76,46,91],[-66,33,1]]\"));\n//    }\n\n}",
    "submit_ts": "1723908341",
    "subm_id": "1359148532"
}