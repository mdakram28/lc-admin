{
    "username": "utk_s_sood",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& numbers, int target) {\n        int size = numbers.size();\n        long long count = 0;\n        map<long long, long long> previousMap;\n        \n        int i = 0;\n        while (i < size) {\n            map<long long, long long> currentMap;\n            if (numbers[i] != target) {\n                \n            }\n            else\n            {\n                count++;\n            }\n            currentMap[numbers[i]] = 1;\n\n            auto it = previousMap.begin();\n            while (it != previousMap.end()) {\n                long long bitwiseAnd = it->first & numbers[i];\n                if (bitwiseAnd != target) {\n                    \n                currentMap[bitwiseAnd] += it->second;\n                ++it;\n                }\n                else\n                {\n                    count += it->second;\n                    \n                currentMap[bitwiseAnd] += it->second;\n                ++it;\n                }\n                \n            }\n            previousMap = currentMap;\n            i++;\n        }\n        return count;\n    }\n};\n",
    "submit_ts": "1720279238",
    "subm_id": "1311743220"
}