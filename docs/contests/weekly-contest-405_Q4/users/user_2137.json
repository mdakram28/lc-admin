{
    "username": "kZS3d4UL2K",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        d = {}\n        for word, cost in zip(words, costs):\n            if word in d:\n                d[word] = min(d[word], cost)\n            else:\n                d[word] = cost\n\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            for word in d:\n                length = len(word)\n                if i + length <= n and target[i:i+length] == word:\n                    dp[i + length] = min(dp[i + length], dp[i] + d[word])\n\n        return dp[n] if dp[n] != float('inf') else -1",
    "submit_ts": "1720323053",
    "subm_id": "1312366127"
}