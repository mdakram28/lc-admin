{
    "username": "user2324E",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n\n        def n_moves(a, b, target):\n            z = abs(a - b)\n            if a > b:\n                a, b = b, a\n            if a > k and b > k:\n                return 2\n            if a < target and k - a < target and b < target and k - b < target:\n                return 2\n            return 1\n\n        \n        \n        n = len(nums)\n        diff = []\n        for i in range(n // 2):\n            diff.append(abs(nums[i] - nums[n-i-1]))\n\n        c = Counter(diff)\n        cnt = sorted([(count, d) for d, count in c.items()], key=lambda x: -x[0])\n\n        res = 2*n\n        for count, d in cnt:\n            best_case = n // 2 - count\n            if best_case >= res:\n                return res\n            cur = 0\n            for i, di in enumerate(diff):\n                if di == d: continue\n                #print(nums[i], nums[n-i-1], d, n_moves(nums[i], nums[n-i-1], d))\n                cur += n_moves(nums[i], nums[n-i-1], d)\n            res = min(res, cur)\n        return res\n",
    "submit_ts": "1721489422",
    "subm_id": "1327452771"
}