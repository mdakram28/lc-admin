{
    "username": "Srikkanth R",
    "submission": "const int N = (int)1e5 + 5;\nint dp[10][N], dpz[10][N], pw[N];\nclass Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        pw[0] = 1 % k;\n        for (int i=1;i<=n;++i) {\n            pw[i] = pw[i-1] * 10;\n            pw[i] %= k;\n        }\n        dpz[0][0] = 1;\n        for (int j=1;j<k;++j) dpz[j][0] = 0;\n        for (int j=0;j<k;++j) dpz[j][1] = 0;\n        for (int d=0;d<10;++d) dpz[d%k][1] |= 1;\n\n        for (int i=2;i<=n;++i) {\n            for (int j=0;j<k;++j) if (dpz[j][i-2]) {\n                for (int d=0;d<10;++d) {\n                    int jj = j * 10 + pw[i-1] * d + d;\n                    jj %= k;\n                    dpz[jj][i] |= 1;\n                }\n            }\n        }\n        string ret = \"\", app = \"\";\n        int got = 0, mul = 1;\n        while (n >= 2) {\n            for (int d=9;d>=0;--d) {\n                bool ok = false;\n                for (int j=0;j<k;++j) if (dpz[j][n-2]) {\n                    int jj = (j * 10 + pw[n-1] * d + d) * mul + got;\n                    jj %= k;\n                    if (jj == 0) {\n                        ret += '0' + d;\n                        app += '0' + d;\n                        got += (pw[n-1] * d + d) * mul;\n                        got %= k;\n                        mul *= 10;\n                        mul %= k;\n                        n -= 2;\n                        ok = true;\n                        break;\n                    }\n                }\n                if (ok) break;\n            }\n        }\n        if (n == 1) {\n            for (int d=9;d>=0;--d) {\n                int jj = (d * mul + got) % k;\n                if (jj == 0) {\n                    ret += '0' + d;\n                    break;\n                }\n            }\n        }\n        reverse(app.begin(), app.end());\n        ret += app;\n        return ret;\n    }\n};",
    "submit_ts": "1723951659",
    "subm_id": "1359776965"
}