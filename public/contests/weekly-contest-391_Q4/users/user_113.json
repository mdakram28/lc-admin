{
    "username": "its_tushar24",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<pair<int,int>> sum(n),diff(n);\n        for(int i=0;i<n;i++){\n            sum[i] = {points[i][0] + points[i][1],i};\n            diff[i] = {points[i][0] - points[i][1],i};\n        }\n        sort(sum.begin(), sum.end());\n        sort(diff.begin(), diff.end());\n        set<int> cand = {sum[0].second, sum[n-1].second, diff[0].second, diff[n-1].second};\n        int dist = max(sum[n-1].first-sum[0].first, diff[n-1].first-diff[0].first);\n        for(int i:cand){\n            int s_diff, d_diff;\n            if(sum[n-1].second==i){\n                s_diff = sum[n-2].first - sum[0].first;\n            }else if(sum[0].second==i){\n                s_diff = sum[n-1].first - sum[1].first;\n            }else{\n                s_diff = sum[n-1].first - sum[0].first;\n            }\n            if(diff[n-1].second==i){\n                d_diff = diff[n-2].first - diff[0].first;\n            }else if(diff[0].second==i){\n                d_diff = diff[n-1].first - diff[1].first;\n            }else{\n                d_diff = diff[n-1].first - diff[0].first;\n            }\n            dist = min(dist, max(s_diff, d_diff));\n        }\n        return dist;\n\n    }\n};"
}