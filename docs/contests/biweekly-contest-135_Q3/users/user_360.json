{
    "username": "kmc89",
    "submission": "struct BIT {\n    vector<int> arr;\n    int n ;\n    \n    BIT(int n) : arr(n+1), n(n) {}\n\n    void update(int i, int v = 1) {\n        i++;\n        while (i <= n) {\n            arr[i] += v;\n            i += i & (-i);\n        }\n    }\n\n    int sum(int i ) {\n        int rtn = 0;\n        i++;\n        while (i > 0) {\n            rtn += arr[i];\n            i -= i&(-i);\n        }\n        return rtn;\n    }\n};\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int len = nums.size();\n        unordered_map<int,int> diffs;\n        int idxmx = 0;\n        int idxmi = 0;\n        BIT bit(k);\n\n        for (int i = 0; i < len-i-1; i++) {\n            int d = abs(nums[i] - nums[len-i-1]);\n            int maxOneSide = max(k - min(nums[i], nums[len-i-1]), max(nums[i], nums[len-i-1]));\n            diffs[d]++;\n            bit.update(maxOneSide);\n        }\n\n        vector<pair<int,int>> ds;\n        for (auto& [k, v] : diffs) {\n            ds.push_back({v, k});\n        }\n\n        sort(ds.begin(), ds.end(), greater<pair<int,int>>());\n        int res = INT_MAX;\n        len >>= 1;\n        for (int i = 0; i < ds.size(); i++) {\n            auto [cnt, diff] = ds[i];\n            res = min(res, len-cnt + bit.sum(diff-1));\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721487901",
    "subm_id": "1327404966"
}