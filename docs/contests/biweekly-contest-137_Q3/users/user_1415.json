{
    "username": "\u957f\u57ce\u4e0a\u8dd1\u6b65",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        row = len(board)\n        col = len(board[0])\n        max_row = [[0, 1, 2] for _ in range(row)]\n        # max_col = [[0, 1, 2] for _ in range(col)]\n        ans = -inf\n        # max_row[x1] \u8bb0\u5f55\u884c\u4e3ax1\uff0c\u7684\u503c\u7684\u524d\u4e09\u4f4d\n        for i in range(row):\n            max_row[i] = list(sorted(max_row[i], key = lambda x:board[i][x], reverse = True))\n            for j in range(3, col):\n                max_row[i] = list(sorted(max_row[i] + [j], key = lambda x:board[i][x], reverse = True))[:3]\n        \n        # for j in range(col):\n        #     for i in range(row):\n        #         max_col[j] = list(sorted(max_col[j] + i, key = lambda x:board[x][j]))\n        \n        # print(max_row)\n        for x1 in range(row): # 100\n            for k in range(3):\n                y1 = max_row[x1][k]\n                for x2 in range(x1, row): # 100\n                    if x2 == x1:\n                        continue\n                    for i in range(3):\n                        y2 = max_row[x2][i]\n                        if y2 == y1:\n                            continue\n                        cur = board[x1][y1] + board[x2][y2]\n                        for x3 in range(x2, row): # 100\n                            if x3 == x1 or x3 == x2:\n                                continue\n                            for j in range(3):\n                                y3 = max_row[x3][j]\n                                if y3 == y1 or y3 == y2:\n                                    continue\n                                ans = max(ans, cur + board[x3][y3])\n        \n        return ans\n                            \n                        \n        \n        \n\n        \n\n",
    "submit_ts": "1723910248",
    "subm_id": "556340316"
}