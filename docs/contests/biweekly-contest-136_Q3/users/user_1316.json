{
    "username": "Maximus8597",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n        for(int i = 0; i < m / 2; i++) {\n            for(int j = 0; j < n / 2; j++) {\n                int tl = grid[i][j], tr = grid[i][n - j - 1];\n                int bl = grid[m - i - 1][j], br = grid[m - i - 1][n - j - 1];\n                int cnto = (tl == 1) + (tr == 1) + (bl == 1) + (br == 1);\n                ans += min(cnto, 4 - cnto);\n            }\n        }\n        if(m % 2 && n % 2 == 0) {\n            int cnto = 0, currVal = 0;\n            for(int j = 0; j < n / 2; j++) {\n                if(grid[m / 2][j] != grid[m / 2][n - j - 1]) currVal++;\n                else if(grid[m / 2][j] == 1) cnto++;\n            }\n            if(cnto % 2 == 0 || currVal) ans += currVal;\n            else ans += 2;\n        }\n        else if(n % 2 && m % 2 == 0) {\n            int cnto = 0, currVal = 0;\n            for(int i = 0; i < m / 2; i++) {\n                if(grid[i][n / 2] != grid[m - i - 1][n / 2]) currVal++;\n                else if(grid[i][n / 2] == 1) cnto++;\n            }\n            if(cnto % 2 == 0 || currVal) ans += currVal;\n            else ans += 2;\n        }\n        else if(m % 2 && n % 2) {\n            int cnto = 0, currVal = 0;\n            for(int j = 0; j < n / 2; j++) {\n                if(grid[m / 2][j] != grid[m / 2][n - j - 1]) currVal++;\n                else if(grid[m / 2][j] == 1) cnto++;\n            }\n            for(int i = 0; i < m / 2; i++) {\n                if(grid[i][n / 2] != grid[m - i - 1][n / 2]) currVal++;\n                else if(grid[i][n / 2] == 1) cnto++;\n            }\n            if(cnto % 2 == 0 || currVal) ans += currVal;\n            else ans += 2;\n            ans += grid[m / 2][n / 2];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698268",
    "subm_id": "1343175146"
}