{
    "username": "saurabh_1907",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        long[] diff = new long[n];\n\n        for (int i = 0; i < n; i++) {\n            diff[i] = target[i] - nums[i];\n        }\n\n        long totalOperations = 0;\n        long currentSegmentDiff = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n               \n                long additionalOperations = Math.abs(diff[i]) - Math.abs(currentSegmentDiff);\n                if (additionalOperations > 0) {\n                    totalOperations += additionalOperations;\n                }\n               \n                currentSegmentDiff = diff[i];\n            } else {\n                \n                totalOperations += Math.abs(diff[i]);\n                \n                currentSegmentDiff = diff[i];\n            }\n        }\n\n        return totalOperations;\n    }\n}",
    "submit_ts": "1721533705",
    "subm_id": "1328014857"
}