{
    "username": "ethanrao",
    "submission": "class Solution {\npublic:\n    int n, m;\n    std::set <int> s;\n    int tg[200005], mx[200005];\n    void up(int x){\n        mx[x] = std::max(mx[x * 2], mx[x * 2 + 1]);\n        return ;\n    }\n    void down(int x, int l, int r, int mid){\n      if(tg[x] == -1) return ;\n      tg[x * 2] = tg[x * 2 + 1] = tg[x];\n      mx[x * 2] = mid - tg[x];\n      mx[x * 2 + 1] = r - tg[x];\n      tg[x] = -1;\n      return ;\n    }\n    void upd(int x, int l, int r, int L, int R, int y){\n      if(L > R) return ;\n      if(l == L && r == R){\n        tg[x] = y;\n        mx[x] = r - y;\n        return ;\n      }\n      int mid = l + r >> 1;\n      down(x, l, r, mid);\n      if(R <= mid) upd(x * 2, l, mid, L, R, y);\n      else if(L >= mid + 1) upd(x * 2 + 1, mid + 1, r, L, R, y);\n      else {\n        upd(x * 2, l, mid, L, mid, y);\n        upd(x * 2 + 1, mid + 1, r, mid + 1, R, y);\n      }\n      up(x);\n      return ;\n    }\n    int ask(int x, int l, int r, int R){\n      if(r == R) return mx[x];\n      int mid = l + r >> 1;\n      down(x, l, r, mid);\n      if(R <= mid) return ask(x * 2, l, mid, R);\n      else return std::max(ask(x * 2, l, mid, mid), ask(x * 2 + 1, mid + 1, r, R));\n    }\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        n = queries.size();\n        m = 50000;\n        std::vector <bool> ans;\n        upd(1, 1, m, 1, m, 0);\n        for(int i = 1; i <= n; ++i){\n            if(queries[i - 1][0] == 1){\n                int x = queries[i - 1][1];\n                auto it = s.lower_bound(x);\n                if(it == s.end()) upd(1, 1, m, x + 1, m, x);\n                else upd(1, 1, m, x + 1, *it, x);\n                s.insert(x);\n            }\n            else {\n              int x = queries[i - 1][1], size = queries[i - 1][2];\n              int mm = ask(1, 1, m, x);\n              if(mm >= size) ans.push_back(true);\n              else ans.push_back(false);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716648544",
    "subm_id": "1267559644"
}