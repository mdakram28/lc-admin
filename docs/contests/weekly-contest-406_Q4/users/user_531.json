{
    "username": "anchaliyadaksh",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n    \n    int horizontal_index = 0;\n    int vertical_index = 0;\n    \n    int horizontal_pieces = 1;\n    int vertical_pieces = 1;\n    \n    long long int total_cost = 0;\n    \n    while (horizontal_index < m - 1 && vertical_index < n - 1) {\n        if (horizontalCut[horizontal_index] > verticalCut[vertical_index]) {\n            total_cost += horizontalCut[horizontal_index] * vertical_pieces;\n            horizontal_index++;\n            horizontal_pieces++;\n        } else {\n            total_cost += verticalCut[vertical_index] * horizontal_pieces;\n            vertical_index++;\n            vertical_pieces++;\n        }\n    }\n    \n    while (horizontal_index < m - 1) {\n        total_cost += horizontalCut[horizontal_index] * vertical_pieces;\n        horizontal_index++;\n    }\n    \n    while (vertical_index < n - 1) {\n        total_cost += verticalCut[vertical_index] * horizontal_pieces;\n        vertical_index++;\n    }\n    \n    return total_cost;\n    }\n};",
    "submit_ts": "1720925325",
    "subm_id": "1320250856"
}