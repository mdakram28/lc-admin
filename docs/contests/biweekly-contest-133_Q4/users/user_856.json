{
    "username": "Sanyasi",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& req) {\n        int q=req.size();\n        int M=1e9+7;\n        int inv_max=400;\n        map<int,int>n_mp;\n        for(int i=0;i<3000;i++){\n            n_mp[i]++;\n        }\n        map<int,int>mp;\n        for(int i=0;i<req.size();i++){\n            mp[req[i][0]+1]=req[i][1];\n        }\n        \n        vector<vector<long long>>dp(n+1,vector<long long>(inv_max+1));\n        dp[0][0]=1;\n        for(int i=1;i<=n;i++){\n            for(int j=0;j<=inv_max;j++){\n                for(int k=0;k<i;k++){\n                    if(j-k>=0){\n                        dp[i][j]=dp[i][j]+dp[i-1][j-k];\n                        dp[i][j]%=M;\n                    }\n                }\n            }\n            if(mp.count(i)!=0){\n                for(int j=0;j<=inv_max;j++){\n                    if(mp[i]!=j){\n                        dp[i][j]=0;\n                    }\n                }\n            }\n        }\n        for(auto it:n_mp){\n            if(it.second==1){\n                it.second+=1;\n            }\n            n_mp[it.first]+=1;\n        }\n        \n        set<int>st;\n        long long res=0;\n        for(int i=0;i<=inv_max;i++){\n            res+=dp[n][i];\n            \n            res%=M;\n            st.insert(res);\n        }\n        int fres=res%M;\n        return res;\n        \n    }\n};",
    "submit_ts": 1719070813.0
}