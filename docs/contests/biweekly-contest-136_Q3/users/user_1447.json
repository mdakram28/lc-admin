{
    "username": "vivek_bhurke",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        rows, cols = len(grid), len(grid[0])\n        flips = 0\n\n        def flip_center():\n            if rows % 2 == 1 and cols % 2 == 1 and grid[rows // 2][cols // 2] == 1:\n                return 1\n            return 0\n\n        def calculate_middle_sum():\n            middle_sum = [0] * 3\n\n            if rows % 2 == 1:\n                left, right = 0, cols - 1\n                while left < right:\n                    sum_mid_row = grid[rows // 2][left] + grid[rows // 2][right]\n                    middle_sum[sum_mid_row] += 1\n                    left += 1\n                    right -= 1\n\n            if cols % 2 == 1:\n                top, bottom = 0, rows - 1\n                while top < bottom:\n                    sum_mid_col = grid[top][cols // 2] + grid[bottom][cols // 2]\n                    middle_sum[sum_mid_col] += 1\n                    top += 1\n                    bottom -= 1\n\n            return middle_sum\n\n        def process_middle_sum(middle_sum):\n            if middle_sum[2] % 2 == 1:\n                if middle_sum[1] > 0:\n                    return middle_sum[1]\n                return 2\n            return middle_sum[1]\n\n        def flip_corners():\n            corner_flips = 0\n            for i in range(rows // 2):\n                for j in range(cols // 2):\n                    top_left = grid[i][j]\n                    bottom_left = grid[rows - 1 - i][j]\n                    top_right = grid[i][cols - 1 - j]\n                    bottom_right = grid[rows - 1 - i][cols - 1 - j]\n\n                    corner_sum = top_left + bottom_left + top_right + bottom_right\n\n                    if corner_sum != 0 and corner_sum != 4:\n                        corner_flips += min(corner_sum, 4 - corner_sum)\n            return corner_flips\n\n        flips += flip_center()\n        middle_sum = calculate_middle_sum()\n        flips += process_middle_sum(middle_sum)\n        flips += flip_corners()\n\n        return flips\n            ",
    "submit_ts": "1722699615",
    "subm_id": "1343217048"
}