{
    "username": "khem_404",
    "submission": "class BIT {\nprivate:\n    std::vector<int> tree;\n    int size;\n\npublic:\n    \n    BIT(int n) : size(n) {\n        tree.resize(n + 10, 0); \n    }\n\n    \n    void update(int idx, int value) {\n        idx++;\n        while (idx <= size) {\n            tree[idx] += value;\n            idx += idx & -idx; // Move to next index\n        }\n    }\n\n    int query(int idx) const {\n        idx++;\n        int sum = 0;\n        while (idx > 0) {\n            sum += tree[idx];\n            idx -= idx & -idx; \n        }\n        return sum;\n    }\n\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n         \n         BIT bit(n);\n        vector<int>ans;\n        multiset<int>s;\n         for(int i=0;i<n;i++)\n         {\n            bit.update(i,1);\n            s.insert(i);\n         }\n          \n\n         for(auto x:q)\n         {\n            int i=x[0];\n            int j = x[1];\n\n            vector<int>temp;\n\n            auto xx = s.upper_bound(i);\n\n            for(auto x = xx;x!=s.end();x++)\n            {\n             int val = *x;\n             if(val>i&&val<j)\n             temp.push_back(val);\n             else\n             break;\n            }\n            for(auto x:temp)\n            bit.update(x,-1),s.erase(s.find(x));\n        \n            ans.push_back(bit.query(n-1)-1);\n         }\n        return ans;\n    }\n};",
    "submit_ts": "1722742025",
    "subm_id": "1343759175"
}