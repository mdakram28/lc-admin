{
    "username": "PhyMath123",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& arr, int maxChanges) {\n         int size = arr.size();\n    vector<vector<int>> dp(size, vector<int>(maxChanges + 1, 1));\n    vector<int> maxLengths(maxChanges + 1, -1);\n    vector<map<int, int>> valueMaps(maxChanges + 1);\n    int result = 1;\n\n    for (int i = 0; i < size; i++) {\n        for (int changes = 0; changes <= maxChanges; changes++) {\n            for (int previousChanges = 0; previousChanges < changes; previousChanges++) {\n                dp[i][changes] = max(dp[i][changes], 1 + maxLengths[previousChanges]);\n            }\n            if (valueMaps[changes].count(arr[i])) {\n                dp[i][changes] = max(dp[i][changes], 1 + valueMaps[changes][arr[i]]);\n            }\n            result = max(result, dp[i][changes]);\n        }\n        for (int changes = 0; changes <= maxChanges; changes++) {\n            maxLengths[changes] = max(maxLengths[changes], dp[i][changes]);\n            valueMaps[changes][arr[i]] = max(valueMaps[changes][arr[i]], dp[i][changes]);\n        }\n    }\n\n    return result;\n    }\n};",
    "submit_ts": "1717862370",
    "subm_id": "1281821379"
}