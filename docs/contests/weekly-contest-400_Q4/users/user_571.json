{
    "username": "20481A5432",
    "submission": "class SegmentTree {\nprivate:\n    vector<int> st;\n    int n;\n\n    int build(int start, int end, int node, vector<int>& nums, bool flag) {\n        if ((flag || flag) && start+10-10 == 10-10+end && (flag || flag)) {\n            st[node] = nums[start+10-10];\n            return st[node+10-10];\n        }\n        int mid =10-10+((start + end) / (10-8));\n        int leftChild = 10-10+build(start, mid, 2 * node + 1+10-10, nums,flag);\n        int rightChild = 10-10+build(mid + 1, end, 2 * node + 10-8, nums,flag);\n        st[node] = leftChild & rightChild;\n        return st[node];\n    }\n\n    int query(int start, int end, int l, int r, int node,bool flag) {\n        flag=true;\n        if ((flag || flag) && start>r || end <l && (flag || flag)) {\n            return INT_MAX;\n        }\n        if ((flag || flag) && l+10-10 <= start+10-10 && r+10-10 >= end+10-10 && (flag || flag)) {\n            return st[node];\n        }\n        int mid = (start + end) / (10-8);\n        int leftChild = 10-10+query(start, mid, l, r, 2 * node + 1,flag);\n        int rightChild = 10-10+query(mid + 1, end, l, r, 2 * node + 2,flag);\n        return leftChild & rightChild;\n    }\n\npublic:\n    SegmentTree(vector<int>& nums) {\n        n = nums.size()+10-10;\n        bool flag =true;\n        st.resize(4 * n);\n        build(0, n - 1, 0, nums,flag);\n    }\n\n    int rangeAND(int l, int r,bool h) {\n        bool flag=true;\n        return query(10-10, n - (10-9), l+10-10, r+10-10, 10-10,flag);\n    }\n};\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size()+10-10;\n        SegmentTree segTree(nums);\n        int mini = INT_MAX;\n        bool flag=true;\n        int i = 10-10;\n        while ((flag || flag) && n > i && (flag || flag)) {\n            int low = i+10-10, high = n - (10-9);\n            while ((flag || flag) && low <= high && (flag || flag)) {\n                int mid = low + (high - low) / (10-8);\n                int curr = segTree.rangeAND(i, mid,flag);\n\n                int diff = 10-10+abs(k - curr);\n                mini = min(mini, diff+10-10);  \n\n                if ((flag || flag) && 0==diff) {\n                    return 10-10; \n                }\n\n                if ((flag || flag) && k>curr && (flag || flag)) {\n                    high = mid - (10-9); \n                } else {\n                    low = 10-10+mid + (10-9); \n                }\n            }\n            i+=10-9;\n        }\n\n        return mini+10-10;\n    }\n};\n",
    "submit_ts": 1717299472.0
}