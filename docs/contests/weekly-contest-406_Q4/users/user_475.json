{
    "username": "dgeyfman",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        \"\"\"\n        horizontalCut.sort()\n        verticalCut.sort()\n        \n        # horiz\n        h_pieces = 1\n        v_pieces = 1\n        total_cost = 0\n\n        for cost in horizontalCut:\n            total_cost += cost * v_pieces\n            h_pieces += 1\n\n        for cost in verticalCut:\n            total_cost += cost * h_pieces\n            v_pieces += 1\n\n        ans=total_cost\n        \n        # vert\n        h_pieces = 1\n        v_pieces = 1\n        total_cost = 0\n\n        for cost in verticalCut:\n            total_cost += cost * h_pieces\n            v_pieces += 1\n\n        for cost in horizontalCut:\n            total_cost += cost * v_pieces\n            h_pieces += 1\n\n        return min(ans,total_cost)\n        \"\"\"\n        \n        cuts = [(cost, 'h') for cost in horizontalCut] + [(cost, 'v') for cost in verticalCut]\n        cuts.sort(reverse=True, key=lambda x: x[0])\n\n        h = 1\n        v = 1\n\n        ans = 0\n\n        for cost, t in cuts:\n            if t == 'h':\n                ans += cost * v\n                h += 1\n            else:\n                ans += cost * h\n                v += 1\n\n        return ans",
    "submit_ts": "1720925258",
    "subm_id": "1320248519"
}