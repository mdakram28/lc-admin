{
    "username": "arignote",
    "submission": "class Solution {\n\n    public int minimumDistance(int[][] points) {\n        int[] x = new int[points.length], y = new int[points.length];\n        for (int i = 0; i < points.length; i++) {\n            x[i] = points[i][0] - points[i][1];\n            y[i] = points[i][0] + points[i][1];\n        }\n        Arrays.sort(x);\n        Arrays.sort(y);\n        int min = Integer.MAX_VALUE;\n        for (int[] point : points) {\n            min = Math.min(min, Math.max((x[x.length - 1] == point[0] - point[1] ? x[x.length - 2] : x[x.length - 1]) - (x[0] == point[0] - point[1] ? x[1] : x[0]), (y[y.length - 1] == point[0] + point[1] ? y[y.length - 2] : y[y.length - 1]) - (y[0] == point[0] + point[1] ? y[1] : y[0])));\n        }\n        return min;\n    }\n}"
}