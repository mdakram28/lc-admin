{
    "username": "yzkkai",
    "submission": "#define fi first\n#define se second\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n\n        vector<vector<pair<int, int>>> grid(n);\n        int lst = 1e9;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j)\n                grid[i].emplace_back(board[i][j], j);\n            sort(grid[i].rbegin(), grid[i].rend());\n\n            if (count(board[i].begin(), board[i].end(), grid[i][0].fi) >= 3)\n                for (int j = 0; j < 3; ++j)\n                    grid[i][j].se = lst++;\n        }\n\n        long long ans = -3e9;\n        for (int i = 0; i < n; ++i)\n            for (int j = i + 1; j < n; ++j)\n                for (int k = j + 1; k < n; ++k) \n                    for (int a = 0; a < 3; ++a)\n                        for (int b = 0; b < 3; ++b)\n                            for (int c = 0; c < 3; ++c) {\n                                if (grid[i][a].se == grid[j][b].se || grid[i][a].se == grid[k][c].se || grid[j][b].se == grid[k][c].se)\n                                    continue;\n                                ans = max(ans, 1LL * grid[i][a].fi + grid[j][b].fi + grid[k][c].fi);\n                            }\n\n\n        return ans;\n    }\n};",
    "submit_ts": "1723908172",
    "subm_id": "1359141267"
}