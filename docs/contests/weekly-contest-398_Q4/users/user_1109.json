{
    "username": "mr_kamran",
    "submission": "class Solution {\npublic:\n  \nunordered_map<string,long long>mpp;\nlong long ff(int c, int j, int prev, int t)\n{\n        if (c == t) return 1;\n        if (c > t)\n        {\n            if ((c - 1 -t) == 0 && prev==-1) return 1;\n            else return 0;\n        }\n  \n        int kk = prev;\n        if(prev==-1) kk = 0;\n  \n        string k = to_string(c);\n        k.push_back(',');\n        k = k + to_string(j);\n        k.push_back(','); \n        k = k + to_string(kk);\n  \n        if (mpp.count(k)) return mpp[k];\n        \n        long long counter = 0;\n  \n        if (prev==-1 && c > 0)\n        {\n            counter = counter  + ff(c-1, j, 1, t);\n        }\n        counter = counter + ff(c + pow(2,j),j + 1, -1, t);\n        return mpp[k] = counter;\n }\n  \n    int waysToReachStair(int k) \n    {\n        if (k == 0) return 2;\n        if(k==1) return 4;\n        if (k == 2) return 4;\n        int prev = -1;\n        return ff(1,0,-1,k);\n    }\n};",
    "submit_ts": "1716090556",
    "subm_id": "1261870048"
}