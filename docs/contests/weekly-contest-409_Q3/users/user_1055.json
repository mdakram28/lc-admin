{
    "username": "anh_tai",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int, int>> segs;\n        for (int i = 0; i < n-1; i++){\n            segs.insert(make_pair(i, i + 1));\n        }\n        \n        vector<int> ans;\n        vector<pair<int, int>> pp; \n                \n        for(vector<int>&query : queries){\n            int u = query[0];\n            int v = query[1]; \n            auto it = segs.lower_bound(make_pair(u, -1));\n            pp.clear(); \n            if (it != segs.end() && it->first == u && it->second < v){\n                while (it->second != v){\n                    pp.push_back(make_pair(it->first, it->second));\n                    it = next(it); \n                }\n                pp.push_back(make_pair(it->first, it->second));\n                    \n                //cout << \"=========\\n\"; \n                for (auto &p : pp){\n                    segs.erase(p); \n                  //  cout << p.first << \" \" << p.second << \"\\n\"; \n                }\n                \n                //cout << \"=========\\n\"; \n                segs.insert(make_pair(u, v)); \n            }\n            \n            ans.push_back((int)segs.size());\n        }\n        return ans; \n    }\n};",
    "submit_ts": "1722741123",
    "subm_id": "1343737179"
}