{
    "username": "john801205",
    "submission": "class BIT {\n    int n;\n    vector<int> vals;\npublic:\n    BIT(int n)\n    {\n        this->n = n;\n        vals = vector<int>(n+1, 0);\n    }\n    \n    void add(int i, int v)\n    {\n        for(i++; i <= n; i += i&-i)\n            vals[i] += v;\n    }\n    \n    int query(int i)\n    {\n        int res = 0;\n        for(i++; i > 0; i -= i&-i)\n            res += vals[i];\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int> nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> status(n, 0);\n        BIT bit(n);\n        for (int i = 1; i+1 < n; i++)\n            if (nums[i] > nums[i-1] && nums[i] > nums[i+1])\n                bit.add(i, 1), status[i] = 1;\n        \n        vector<int> res;\n        for (const auto& query: queries)\n        {\n            if (query[0] == 2)\n            {\n                nums[query[1]] = query[2];\n                \n                for (int di = -1; di < 2; di++)\n                {\n                    int i = query[1] + di;\n                    if (i < 0 || i >= n)\n                        continue;\n                    \n                    int cur = 0;\n                    if (i > 0 && i+1 < n && nums[i] > nums[i-1] && nums[i] > nums[i+1])\n                        cur = 1;\n                    \n                    bit.add(i, cur - status[i]);\n                    status[i] = cur;\n                }\n            }\n            else\n            {\n                if (query[1]+1 < query[2])\n                    res.push_back(bit.query(query[2]-1) - bit.query(query[1]));\n                else\n                    res.push_back(0);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1718507052.0
}