{
    "username": "chadboy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(),m = grid[0].size(),ans = 0,isPos=0,cnt = 0;\n        for (int i=0;i<n/2;i++) {\n            for (int j=0;j<m/2; j++) {\n                vector<int> tmp = {grid[i][j],grid[n-i-1][j],grid[i][m-j-1],grid[n-i-1][m-j-1]};\n                int oneCnt = count(tmp.begin(), tmp.end(), 1);\n                ans+=min(oneCnt, 4 - oneCnt);\n            }\n        }\n        if (n % 2 != 0) {\n            for (int j=0; j<m/2;j++) {\n                if (grid[n/2][j]!=grid[n/2][m-j-1]) {\n                    ans++;isPos++;\n                } else {\n                    if (grid[n/2][j]==1) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if (m%2!=0) {\n            for (int i=0; i<n/2;i++) {\n                if (grid[i][m/2] != grid[n-i-1][m/2]) {\n                    ans++;isPos++;\n                } else {\n                    if (grid[i][m/2]==1) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        if (n%2!=0 and m%2!=0 and grid[n/2][m/2] == 1)\n            ans += 1;\n        if (isPos==0 and cnt%2!=0)\n            ans += 2;\n        return ans;\n    }\n};",
    "submit_ts": "1722700093",
    "subm_id": "1343231506"
}