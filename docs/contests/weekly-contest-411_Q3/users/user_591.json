{
    "username": "Naren Sai",
    "submission": "class Solution {\npublic:\n    bool dp(int i, int j, int n, int k, vector<int>& modmul,\n            vector <vector<pair<int, int>>> & memo) {\n        if (i > (n - 1) / 2) {\n            if (j == 0)\n                return true;\n            else\n                return false;\n        }\n\n        if (memo[i][j] != make_pair(-2, -2)) {\n            return (memo[i][j] != make_pair(-1, -1));\n        }\n\n        pair<int, int> res = make_pair(-1, -1);\n        int d = modmul[n - 1 - i];\n        if (n - 1 - i != i)\n            d = (d + modmul[i]) % k;\n        for (int dig = 9; dig >= 0; --dig) {\n            if (dp(i + 1, ((j - (d * dig)%k)%k + k)%k, n, k, modmul, memo)) {\n                res = {dig, ((j - (d * dig)%k)%k + k)%k};\n                break;\n            }\n        }\n        memo[i][j] = res;\n        return (res != make_pair(-1, -1));\n    }\n\n    string largestPalindrome(int n, int k) {\n        vector<int> v;\n        vector<int> modmul(n);\n        modmul[0] = 1;\n        for (int i = 1; i < n; ++i)\n            modmul[i] = (modmul[i - 1] * 10) % k;\n        vector <vector<pair<int, int>>> memo(\n                     (n + 1) / 2, vector<pair<int, int>>(k, make_pair(-2, -2)));\n        string s = \"\"; \n        for(int i = 0; i < n; ++i) \n            s += ' '; \n        dp(0, 0, n, k, modmul, memo);\n        int rem = 0; \n        for(int i = 0; i <= (n - 1)/2; ++i) \n        {\n            // cout << i << \" \" << rem << \"\\n\"; \n            auto p = memo[i][rem]; \n            s[i] = '0' + p.first; \n            s[n - 1 - i] = s[i]; \n            rem = p.second;  \n        } \n        return s;\n    }\n};",
    "submit_ts": "1723952830",
    "subm_id": "1359805692"
}