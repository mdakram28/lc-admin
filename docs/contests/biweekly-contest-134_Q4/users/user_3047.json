{
    "username": "pallavireddytummala",
    "submission": "class Solution {\npublic:\n   long long countSubarrays(vector<int>& nums, int goal) {\n        int length = nums.size();\n        long long subarrayCount = 0;\n        unordered_map<long long, long long> previousCounts;\n\n        for (int i = 0; i < length; ++i) {\n            std::unordered_map<long long, long long> currentCounts; \n            if (nums[i] == goal) {\n                ++subarrayCount;\n            }\n            currentCounts[nums[i]] = 1;\n\n            for (auto& [andValue, freq] : previousCounts) {\n                long long newAndValue = andValue & nums[i];\n                if (newAndValue == goal) {\n                    subarrayCount += freq;\n                }\n                currentCounts[newAndValue] += freq;\n            }\n            \n            previousCounts = currentCounts;\n        }\n        return subarrayCount;\n    }\n};",
    "submit_ts": "1720278837",
    "subm_id": "1311726391"
}