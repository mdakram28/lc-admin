{
    "username": "Sarthak3204",
    "submission": "#define all(x)      x.begin(), x.end()\nclass Solution {\npublic:\n    class SegTree {\n    public:\n        vector<int> tree;\n        int s = 1;\n\n        SegTree() {}\n        SegTree(int n) {\n            while (s < n) s <<= 1;\n            tree.resize(s << 1);\n        }\n\n        int query(int lo, int hi) {\n            int ans = 0;\n            for (lo += s, hi += s; lo <= hi; lo >>= 1, hi >>= 1) {\n                if (lo & 1) ans = max(ans, tree[lo++]);\n                if (!(hi & 1)) ans = max(ans, tree[hi--]);\n            }\n            return ans;\n        }\n\n        void update(int i, int val, int op) {\n            if (op) tree[s + i]++;\n            else tree[s + i] = max(tree[s + i], val);\n            for (int j = (s + i) >> 1; j >= 1; j >>= 1) {\n                tree[j] = max(tree[j << 1], tree[j << 1 | 1]);\n            }\n        }\n    };\n    int maximumLength(vector<int>& a, int target) {\n        int n = size(a);\n\n        auto cord = a;\n        sort(all(cord));\n        cord.erase(unique(all(cord)), cord.end());\n\n        int m = size(cord);\n        for (auto &x : a) x = (lower_bound(all(cord), x) - cord.begin());\n\n        vector<SegTree> st(target + 1, m);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= target; j++) {\n                st[j].update(a[i], -1, 1);\n                if (j) {\n                    int val = 1 + max(st[j - 1].query(0, a[i] - 1), st[j - 1].query(a[i] + 1, m - 1));\n                    st[j].update(a[i], val, 0);\n                }\n            }\n        }\n\n        int ans = 0;\n        for (int j = 0; j <= target; j++)\n            ans = max(ans, st[j].query(0, m - 1));\n\n        return ans;\n    }\n};",
    "submit_ts": 1717859653.0
}