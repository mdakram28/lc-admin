{
    "username": "yudale2003",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        result = 0\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        curr_cuts = 0\n        horizontal_pieces = 1\n        vertical_pieces = 1\n\n        horizontal = 0\n        vertical = 0 \n        while horizontal < len(horizontalCut) and vertical < len(verticalCut):\n            if horizontalCut[horizontal] >= verticalCut[vertical]:\n                result += horizontalCut[horizontal] * vertical_pieces \n                horizontal_pieces += 1\n                horizontal += 1\n            else:\n                result += verticalCut[vertical] * horizontal_pieces \n                vertical_pieces += 1\n                vertical += 1\n        #finish off the rest of the horizontal or vertical\n        while horizontal < len(horizontalCut):\n            result += horizontalCut[horizontal] * vertical_pieces \n            horizontal_pieces += 1\n            horizontal += 1\n        while vertical < len(verticalCut):\n            result += verticalCut[vertical] * horizontal_pieces \n            vertical_pieces += 1\n            vertical += 1\n        return result\n        ",
    "submit_ts": "1720926550",
    "subm_id": "1320289525"
}