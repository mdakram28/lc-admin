{
    "username": "nayan21100",
    "submission": "#include<bits/stdc++.h> \nusing namespace std; \n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n\nauto init = []() \n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 'c';\n}();\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        int m=queries.size();\n        vector<int>ans;\n        map<int,int>mp;\n        set<int>s;\n        for(int i=0;i<n;++i) s.insert(i);\n        for(int i=0;i<m;++i){\n            int cur=queries[i][0];\n            int ele=*s.upper_bound(cur);\n            while(ele<queries[i][1]){\n                int ele2=*s.upper_bound(ele);\n                s.erase(s.find(ele));\n                ele=ele2;\n            }\n            ans.push_back(s.size()-1);\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1722741491",
    "subm_id": "1343746314"
}