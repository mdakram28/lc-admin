{
    "username": "Last_Of_UsOO",
    "submission": "\n#include <bits/stdc++.h>\nusing namespace std;\n\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x)\n{\n    cerr << '{';\n    __print(x.first);\n    cerr << ',';\n    __print(x.second);\n    cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x)\n{\n    int f = 0;\n    cerr << '{';\n    for (auto &i : x)\n        cerr << (f++ ? \",\" : \"\"), __print(i);\n    cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v)\n{\n    __print(t);\n    if (sizeof...(v))\n        cerr << \", \";\n    _print(v...);\n}\n#ifndef ONLINE_JUDGE\n#define debug(x...)               \\\n    cerr << \"[\" << #x << \"] = [\"; \\\n    _print(x)\n#else\n#define debug(x...)\n#endif\n\nstatic auto fastio = []()\n{\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    std::cout.tie(nullptr);\n};\n\nclass Solution\n{\npublic:\n    int numberOfAlternatingGroups(vector<int> &colors, int k)\n    {\n        fastio();\n        int n = colors.size();\n        int counter = 0;\n        if (k == 1)\n            return n;\n\n        int Len = 1;\n        int i = 1;\n        while ((i + 1) < (n + k))\n        {\n            int CurrentColor = i;\n            int previousColor = i - 1;\n\n            if (CurrentColor >= n)\n            {\n                CurrentColor -= n;\n            }\n            if (previousColor >= n)\n            {\n                previousColor -= n;\n            }\n\n            if (colors[CurrentColor] != colors[previousColor])\n                ++Len;\n            else\n                Len = 1;\n            if (Len >= k)\n                ++counter;\n\n            ++i;\n        }\n\n        return counter;\n    }\n};",
    "submit_ts": "1720279468",
    "subm_id": "1311752410"
}