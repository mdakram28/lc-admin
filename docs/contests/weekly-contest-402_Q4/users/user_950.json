{
    "username": "dha3102003",
    "submission": "#include <vector>\n\nusing namespace std;\n\nclass FenwickTree {\npublic:\n    vector<int> bit;\n    int n;\n\n    FenwickTree(int n) {\n        this->n = n;\n        bit.assign(n, 0);\n    }\n\n    void update(int idx, int delta) {\n        for (; idx < n; idx = idx | (idx + 1)) {\n            bit[idx] += delta;\n        }\n    }\n\n    int query(int idx) {\n        int sum = 0;\n        for (; idx >= 0; idx = (idx & (idx + 1)) - 1) {\n            sum += bit[idx];\n        }\n        return sum;\n    }\n\n    int rangeQuery(int l, int r) {\n        return query(r) - (l > 0 ? query(l - 1) : 0);\n    }\n};\n\nbool isPeak(const vector<int>& nums, int i) {\n    return i > 0 && i < nums.size() - 1 && nums[i] > nums[i - 1] && nums[i] > nums[i + 1];\n}\n\nvoid updatePeakStatus(vector<int>& nums, vector<bool>& is_peak, FenwickTree& fenwick, int idx) {\n    if (idx <= 0 || idx >= nums.size() - 1) return;\n\n    bool was_peak = is_peak[idx];\n    bool now_peak = isPeak(nums, idx);\n\n    if (was_peak && !now_peak) {\n        fenwick.update(idx, -1);\n    } else if (!was_peak && now_peak) {\n        fenwick.update(idx, 1);\n    }\n\n    is_peak[idx] = now_peak;\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> result;\n        vector<bool> is_peak(n, false);\n        FenwickTree fenwick(n);\n\n        for (int i = 1; i < n - 1; ++i) {\n            if (isPeak(nums, i)) {\n                is_peak[i] = true;\n                fenwick.update(i, 1);\n            }\n        }\n\n        for (const auto& query : queries) {\n            if (query[0] == 1) {\n                int li = query[1], ri = query[2];\n                if (li == ri || ri - li == 1) {\n                    result.push_back(0);\n                } else {\n                    result.push_back(fenwick.rangeQuery(li + 1, ri - 1));\n                }\n            } else if (query[0] == 2) {\n                int idx = query[1], val = query[2];\n                nums[idx] = val;\n                updatePeakStatus(nums, is_peak, fenwick, idx - 1);\n                updatePeakStatus(nums, is_peak, fenwick, idx);\n                updatePeakStatus(nums, is_peak, fenwick, idx + 1);\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": 1718508568.0
}