{
    "username": "stupid_panda",
    "submission": "impl Solution {\n    pub fn minimum_operations(nums: Vec<i32>, target: Vec<i32>) -> i64 {\n        let mut diff = vec![0; nums.len()];\n        for i in 0..diff.len() {\n            diff[i] = nums[i] - target[i];\n        }\n        let mut ops = diff[0].abs() as i64;\n        for i in 1..diff.len() {\n            if diff[i - 1] > 0 && diff[i] > 0 && diff[i - 1] < diff[i] {\n                // 3, 5 => up\n                ops += (diff[i] - diff[i - 1]) as i64;\n            } else if diff[i - 1] < 0 && diff[i] < 0 && diff[i - 1] > diff[i] {\n                // -1, -3 => down\n                ops += (diff[i - 1] - diff[i]) as i64;\n            } else if diff[i - 1] >= 0 && diff[i] < 0 {\n                // 5(0), -5 => down\n                ops += diff[i].abs() as i64;\n            } else if diff[i - 1] <= 0 && diff[i] > 0 {\n                // -5(0), 3 => up\n                ops += diff[i] as i64;\n            }\n        }\n        ops\n    }\n}",
    "submit_ts": "1721532999",
    "subm_id": "1327998977"
}