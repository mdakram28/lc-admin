{
    "username": "sk8095751",
    "submission": "class Solution {\npublic:\n   const int m = 1e9 +7;\n    const int maxi = 400;\n\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        map<int, int> mp;\n        for (auto it : requirements) {\n            mp[it[0] + 1] = it[1];\n        }\n\n        vector<vector<long long>> per(n + 1, vector<long long>(maxi + 1, 0));\n        per[0][0] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= maxi; j++) {\n                for (int k = 0; k < i; k++) {\n                    int pre = j - k;\n                    if (pre >= 0) {\n                        per[i][j] = (per[i][j] + per[i - 1][pre]) % m;\n                    }\n                }\n            }\n\n            if (mp.find(i) != mp.end()) {\n                for (int j = 0; j <= maxi; j++) {\n                    if (j != mp[i]) {\n                        per[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        long ans = 0;\n        for (auto it:per[n]) {\n            ans = (ans + it) % m;\n        }\n\n        return ans;  \n    }\n};",
    "submit_ts": 1719071833.0
}