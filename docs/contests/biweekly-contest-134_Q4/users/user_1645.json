{
    "username": "swarnava0802",
    "submission": "class Solution {\npublic:\nusing ll=long long;\n    long long countSubarrays(vector<int>& nums, int k) {\n        \n        ll sum=0;\n        unordered_map<ll,ll> prev;\n        ll n=nums.size();\n        for (ll i=0;i<=n-1;i++) {\n            unordered_map<ll,ll> curr; \n            if (nums[i]==k) \n            {\n                sum++;\n            }\n            curr[nums[i]] = 1;\n            for (auto x: prev) {\n                ll en = (x.first&nums[i]);\n                curr[en] += x.second;\n                if (en==k) {\n                    sum+=x.second;\n                }\n                \n            }\n             prev=curr;\n        }\n        return sum;\n    }\n};",
    "submit_ts": "1720281246",
    "subm_id": "1311818224"
}