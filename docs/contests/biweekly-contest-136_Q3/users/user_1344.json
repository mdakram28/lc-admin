{
    "username": "death__stroke",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        \n        int min = 0;\n        for(int i = 0; i < m/2; i++) {\n            for(int j = 0; j < n/2; j++) {\n                int count = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                min += Math.min(count, 4-count);\n            }\n        }\n        \n        int cost = 0;\n        int oneCount = 0;\n        if(m % 2 == 1) {\n            int r = m/2;\n            int left = 0;\n            int right = n-1;\n            while(left < right) {\n                if(grid[r][left] != grid[r][right]) {\n                    cost++;\n                } else if(grid[r][left] == 1) {\n                    oneCount += 2;\n                }\n                left++;\n                right--;\n            }\n        }\n        \n        if(n % 2 == 1) {\n            int c = n/2;\n            int left = 0;\n            int right = m-1;\n            while(left < right) {\n                if(grid[left][c] != grid[right][c]) {\n                    cost++;\n                } else if(grid[left][c] == 1) {\n                    oneCount += 2;\n                }\n                left++;\n                right--;\n            }\n        }\n        \n        int center = 0;\n        if(m % 2 == 1 && n % 2 == 1 && grid[m/2][n/2] == 1) {\n            center++;\n        }\n        \n        return min + center + cost + (oneCount % 4 == 0 ? 0 : (cost > 0 ? 0 : 2));\n    }\n}",
    "submit_ts": "1722699508",
    "subm_id": "1343213802"
}