{
    "username": "nvladgw",
    "submission": "class Solution {\n    fun minFlips(grid: Array<IntArray>): Int {\n    val m = grid.size\n    val n = grid[0].size\n    var ones = 0\n    var flips = 0\n    for (i in 0 until m / 2) {\n        for (j in 0 until n / 2) {\n            val temp = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j]\n            if (temp == 1 || temp == 3){\n                flips++\n            } else if (temp == 2) {\n                flips += 2\n            }\n        }\n    }\n\n    var possibility = false\n    if (m % 2 == 1){\n        for (j in 0 until n/2){\n            if (grid[m/2][j] != grid[m/2][n-1-j]){\n                flips++\n                possibility = true\n            } else if (grid[m/2][j] == 1) {\n                ones += 2\n            }\n        }\n    }\n\n    if (n % 2 == 1){\n        for (i in 0 until m/2){\n            if (grid[i][n/2] != grid[m-1-i][n/2]){\n                flips++\n                possibility = true\n            } else if (grid[i][n/2] == 1) {\n                ones += 2\n            }\n        }\n    }\n\n    if (m % 2 == 1 && n % 2 == 1 && grid[m/2][n/2] == 1) {\n        flips++\n    }\n\n    if (!possibility && ones % 4 == 2){\n        flips += 2\n    }\n\n    return flips\n}\n\n}",
    "submit_ts": "1722697288",
    "subm_id": "1343141082"
}