{
    "username": "rastsislau",
    "submission": "class Solution {\npublic:\n    int maxTotalReward(vector<int>& rewardValues) {\n        sort(rewardValues.begin(), rewardValues.end());\n        vector <int> vals;\n        int prev = 0;\n        for (auto x : rewardValues)\n        {\n            if (x != prev)\n            {\n                vals.push_back(x);\n                prev = x;\n            }\n        }\n        int n = vals.size();\n        \n        // magic\n        \n        set <int> poss;\n        poss.insert(0);\n        int ans = 0;\n        int magicValue = 2000;\n        if (n < magicValue * 2 + 10)\n        {\n            magicValue = n + 1;\n        }\n        for (int i=0;i<magicValue;i++)\n        {\n            if (i == n)\n            {\n                return ans;\n            }\n            int x = vals[i];\n            vector <int> to_push;\n            for (auto it = poss.begin(); it != poss.end(); it++)\n            {\n                auto val = *it;\n                if (val >= x)\n                {\n                    break;\n                }\n                to_push.push_back(val+x);\n            }\n            for (auto y : to_push)\n            {\n                ans = max(ans, y);\n                poss.insert(y);\n            }\n        }\n        \n        set <int> rev;\n        for (auto x: poss)\n        {\n            rev.insert(-1 * x);\n        }\n        rev.insert(1000);\n        \n        int to = n-1 - magicValue;\n        for (int i=n-1;i>=to;i--)\n        {\n            for (int j=i-1;j>=to;j--)\n            {\n                int need = vals[i] - vals[j] - 1;\n                if (need == 0)\n                {\n                    return max(ans, vals[i] + vals[j]);\n                }\n                auto lb = *(rev.lower_bound(-1 * need));\n                if (lb <= 0)\n                {\n                    ans = max(ans, vals[i] + vals[j] - lb);\n                }\n                else\n                {\n                    ans = max(ans, vals[i] + vals[j]);\n                }\n            }\n        }\n        \n        return ans;\n        \n        \n        \n        \n        /*\n            1 4 6 10 15\n            \n            \n            \n        \n        \n        */\n        \n    }\n};",
    "submit_ts": 1717904586.0
}