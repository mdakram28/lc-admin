{
    "username": "odinson776",
    "submission": "from typing import List\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        m = len(words)\n        wc = {}\n        for idx, w in enumerate(words):\n            wc[w] = min(wc.get(w, float(\"inf\")), costs[idx])\n        \n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n        \n        for i in range(1, n + 1):\n            for w in wc:\n                if i >= len(w) and target[i - len(w):i] == w:\n                    dp[i] = min(dp[i], dp[i - len(w)] + wc[w])\n        \n        return dp[n] if dp[n] != float('inf') else -1\n",
    "submit_ts": "1720321570",
    "subm_id": "1312326417"
}