{
    "username": "Priyanshu4650",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n\n        ll h = 0, v = 0;\n        ll totalCost = 0; \n\n        while (h < horizontalCut.size() || v < verticalCut.size()) {\n            ll hCost = (h < horizontalCut.size() ? horizontalCut[h] : INT_MAX);\n            ll vCost = (v < verticalCut.size() ? verticalCut[v] : INT_MAX);\n\n            if (hCost < vCost) {\n                totalCost += hCost * (n - v);\n                h++;\n            } else {\n                totalCost += vCost * (m - h);\n                v++;\n            }\n        }\n\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720925309",
    "subm_id": "1320250302"
}