{
    "username": "ChoyaPrime",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \"\"\" Save x, y separately. dist(i,j) = abs(x[i]-x[j]) + abs(y[i]-y[j])\n        x:[3, 4, 5, 10]\n        y:[10,4, 15, 2]\n        Need to find the max dist between any two nodes. Assume these two nodes are n1, n2. Then try remove n1 or n2 and find res\n        \"\"\"\n        def max_manhattan_distance_with_indices(points):\n            if len(points) < 2:\n                return 0, None, None\n\n            max_plus = max_minus = float('-inf')\n            min_plus = min_minus = float('inf')\n            max_plus_index = max_minus_index = min_plus_index = min_minus_index = None\n\n            for i, (x, y) in enumerate(points):\n                plus = x + y\n                minus = x - y\n\n                if plus > max_plus:\n                    max_plus = plus\n                    max_plus_index = i\n                if plus < min_plus:\n                    min_plus = plus\n                    min_plus_index = i\n                if minus > max_minus:\n                    max_minus = minus\n                    max_minus_index = i\n                if minus < min_minus:\n                    min_minus = minus\n                    min_minus_index = i\n\n            if max_plus - min_plus > max_minus - min_minus:\n                return max_plus - min_plus, max_plus_index, min_plus_index\n            else:\n                return max_minus - min_minus, max_minus_index, min_minus_index\n        \n        _, a, b = max_manhattan_distance_with_indices(points)\n        \n        dist1, _, _ = max_manhattan_distance_with_indices(points[:a]+points[a+1:])\n        dist2, _, _ = max_manhattan_distance_with_indices(points[:b]+points[b+1:])\n        return min(dist1, dist2)\n\n        \n        \n"
}