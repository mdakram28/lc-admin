{
    "username": "shashankag",
    "submission": "class Solution {\npublic:\n    int n;\n    vector<vector<int>> g;\n    vector<int> f, h;\n    \n    int extra(int v) {\n        if (v%2)\n            return 1;\n        return 2;\n    }\n\n    void dfs(int u, int p) {\n        for (auto &v: g[u]) {\n            if (v == p) continue;\n            dfs(v, u);\n            f[u] = max(f[u], f[v] + extra(v));\n        }\n    }\n    \n    void reroot(int u, int p) {\n        // initial root u\n        h[u] = f[u];\n        int argmax = -1;\n        for (auto &ch: g[u]) {\n            if (h[u] == (f[ch] + extra(ch)))\n                argmax = ch;\n        }\n        \n        for (auto &v: g[u]) {\n            if (v == p)\n                continue;\n            int init_fu = f[u], init_fv = f[v];\n            // rerooting u -- v\n            if (v == argmax) {\n                f[u] = 0;\n                for (auto &ch: g[u]) {\n                    if (ch == v) continue;\n                    f[u] = max(f[u], extra(ch) + f[ch]);\n                }\n            }\n            f[v] = max(f[v], extra(u) + f[u]);\n            reroot(v, u);\n            f[u] = init_fu, f[v] = init_fv;\n        }\n        \n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size() + 1;\n        g = vector<vector<int>> (n);\n        f = h = vector<int> (n);\n        int u, v;\n        for (int i = 0; i < n - 1; ++i) {\n            u = edges[i][0], v = edges[i][1];\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        dfs(0, 0);\n        reroot(0, 0);\n        return h;\n    }\n};",
    "submit_ts": "1722700007",
    "subm_id": "1343228901"
}