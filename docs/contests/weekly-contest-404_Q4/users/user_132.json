{
    "username": "360verse",
    "submission": "package main\n\nimport (\n\t\"container/list\"\n\t\"fmt\"\n)\n\nfunc minimumDiameterAfterMerge(edges1, edges2 [][]int) int {\n\tbuildAdjList := func(edges [][]int, n int) [][]int {\n\t\tadj := make([][]int, n)\n\t\tfor _, edge := range edges {\n\t\t\tu, v := edge[0], edge[1]\n\t\t\tadj[u] = append(adj[u], v)\n\t\t\tadj[v] = append(adj[v], u)\n\t\t}\n\t\treturn adj\n\t}\n\tbfs := func(adj [][]int, start int) (int, int) {\n\t\tn := len(adj)\n\t\tdist := make([]int, n)\n\t\tfor i := range dist {\n\t\t\tdist[i] = -1\n\t\t}\n\t\tq := list.New()\n\t\tq.PushBack(start)\n\t\tdist[start] = 0\n\t\tfarthestNode := start\n\n\t\tfor q.Len() > 0 {\n\t\t\tnode := q.Remove(q.Front()).(int)\n\t\t\tfor _, neighbor := range adj[node] {\n\t\t\t\tif dist[neighbor] == -1 {\n\t\t\t\t\tdist[neighbor] = dist[node] + 1\n\t\t\t\t\tq.PushBack(neighbor)\n\t\t\t\t\tif dist[neighbor] > dist[farthestNode] {\n\t\t\t\t\t\tfarthestNode = neighbor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn farthestNode, dist[farthestNode]\n\t}\n\n\tn := len(edges1) + 1\n\tm := len(edges2) + 1\n\tadj1 := buildAdjList(edges1, n)\n\tadj2 := buildAdjList(edges2, m)\n\n\tfarthestNode1, _ := bfs(adj1, 0)\n\t_, diameter1 := bfs(adj1, farthestNode1)\n\tfarthestNode2, _ := bfs(adj2, 0)\n\t_, diameter2 := bfs(adj2, farthestNode2)\n\tminDiameter := max(diameter1, diameter2)\n\thalf1 := (diameter1 + 1) / 2\n\thalf2 := (diameter2 + 1) / 2\n\tminDiameter = max(minDiameter, half1+half2+1)\n\n\treturn minDiameter\n}\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\n",
    "submit_ts": "1719714998",
    "subm_id": "1304325798"
}