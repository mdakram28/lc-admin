{
    "username": "zzzgw",
    "submission": "class Solution {\n  public:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>> &queries) {\n        int n = s.size();\n        int r = -1;\n        vector<int> num(2);\n\n\n        vector<long long>plen(n + 1), len(n + 1);\n\n        for (int i = 0; i < n; i++) {\n            while (r < n && (num[0] <= k || num[1] <= k)) {\n                r++;\n                if(r<n) num[s[r] - '0']++;\n            }\n            plen[i] = len[i] = r - i;\n            num[s[i] - '0']--;\n        }\n\n\n        for (int i = 1; i < n; i++) {\n            plen[i] += plen[i - 1];\n        }\n\n        vector<long long> ans;\n        for(auto vs:queries){\n            int L = vs[0];\n            int R = vs[1];\n\n            \n            int lim=L - 1;\n            int l = L ,r = R;\n            while(l <= r){\n                int mid = (l + r) / 2;\n                if(mid + len[mid] - 1 <= R){\n                    lim = mid;\n                    l = mid + 1;\n                }else{\n                    r = mid - 1;\n                }\n            }\n            \n            \n            long long t = R - lim;\n            \n           // cout<<lim <<\" \"<<t<<endl;\n            if(L - 1 < 0) {\n                if(lim < 0) ans.push_back( t * (t + 1) / 2);\n                else ans.push_back(plen[lim] + t * (t + 1) / 2);\n            }\n            else\n            ans.push_back(plen[lim] - plen[L - 1] + t * (t + 1) / 2);\n\n        }\n      // vector<long long>ans;\n        return ans;\n    }\n\n};",
    "submit_ts": "1723952624",
    "subm_id": "556412682"
}