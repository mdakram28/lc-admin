{
    "username": "allw",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        // for each element save max length and j.\n        vector<vector<int>> dp(nums.size(), vector<int>(k + 1, -1));\n        // dp[i][j] -> maximum sequence length of ending at i-th symbol, having j == used\n        for (int i = 0; i < nums.size(); ++i) dp[i][0] = 1;\n        \n        unordered_map<int, vector<int>> fmap;\n        for (int i = nums.size() - 1; i >= 0; --i) {\n            fmap[nums[i]].push_back(i);\n        }\n        \n        for (auto it = fmap.begin(); it != fmap.end(); ++it) {\n            it->second.pop_back();\n        }\n        \n        vector<int> tmp_max(k + 1, -1); // \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441 j != used\n        \n        for (int i = 0; i < nums.size(); ++i) { // 5 * 1e3\n            vector<int> tmp_tmp_max = tmp_max;\n            \n            for (int j = 0; j <= k; ++j) { // 5 * 1e\n                dp[i][j] = max(dp[i][j], tmp_max[j]);\n                \n                if (dp[i][j] == -1) continue;\n                \n                if (fmap.find(nums[i]) != fmap.end() && fmap[nums[i]].size() > 0) {\n                    dp[fmap[nums[i]].back()][j] = max(dp[fmap[nums[i]].back()][j], dp[i][j] + 1);\n                    //tmp_max_so_far[j] = max(tmp_max_so_far[j], dp[fmap[nums[i]].back()][j]);\n                }\n                \n                if (j + 1 <= k) tmp_tmp_max[j + 1] = max(tmp_tmp_max[j + 1], dp[i][j] + 1);\n\n            }\n            fmap[nums[i]].pop_back();\n            tmp_max = tmp_tmp_max;\n        }\n        \n\n        \n        int res = 1;\n        for (int i = 0; i < dp.size(); ++i) {\n            for (int j = 0; j < dp[i].size(); ++j) {\n                res = max(res, dp[i][j]);\n            }\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1717862002.0
}