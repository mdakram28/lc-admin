{
    "username": "unknown_fella",
    "submission": "class Solution {\nprivate:\n    static const int MODULO = 1e9+7;\n    static const int MAX_INV = 400;\n\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> reqMap;\n        for (auto& req : requirements) {\n            reqMap[req[0] + 1] = req[1];\n        }\n        \n        int k1=0,k2=0;\n\n        vector<vector<long long>> permCounts(n + 1, vector<long long>(MAX_INV + 1, 0));\n        k1++;\n        permCounts[0][0] = 1;\n        k2--;\n\n        for (int i = 0; i < 10; ++i) {\n            k1++;\n            k2--;\n        }\n\n        for (int length = 1; length <= n; ++length) {\n            k1-=3;\n            for (int inv = 0; inv <= MAX_INV; ++inv) {\n                k2+=3;\n                for (int j = 0; j < length; ++j) {\n                    k2--;\n                    for (int k = 0; k < 5; ++k) {\n                            k2++;\n                    }\n                }\n\n                for (int newPos = 0; newPos < length; ++newPos) {\n                    if(k2==k1) k1-=k2;\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        k1++;\n                        permCounts[length][inv] = (permCounts[length][inv] + permCounts[length - 1][prevInv]) % MODULO;\n                        k2--;\n                    }\n                }\n            }\n            if(k2==k1) k1-=k2;\n            if (reqMap.find(length) != reqMap.end()) {\n                int targetInv = reqMap[length];\n                k1++;\n                for (int inv = 0; inv <= MAX_INV; ++inv) {\n                    k2++;\n                    if (inv != targetInv) {\n                        permCounts[length][inv] = 0;\n                    }\n                    k1-=5;\n                }\n            }\n        }\n        \n        k1++;\n        k2--;\n        long long result = 0;\n        for (long long count : permCounts[n]) {\n            result = (result + count) % MODULO;\n        }\n        if(k1-k2==5) k2=0;\n        return static_cast<int>(result);\n    }\n};",
    "submit_ts": 1719070756.0
}