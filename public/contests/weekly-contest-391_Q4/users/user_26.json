{
    "username": "zh_jerry_yu",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> mst1;  // x + y\n        multiset<int> mst2;  // x - y\n        for (vector<int>& v: points){\n            int x = v[0];\n            int y = v[1];\n            mst1.insert(x + y);\n            mst2.insert(x - y);\n        }\n        int n = points.size();\n        int res = 1e9;\n        for (int i = 0; i != n; ++i){\n            int x = points[i][0];\n            int y = points[i][1];\n            mst1.erase(mst1.find(x + y));\n            mst2.erase(mst2.find(x - y));\n            int res_this = 0;\n            res_this = max(res_this, *mst1.rbegin() - *mst1.begin());\n            res_this = max(res_this, *mst2.rbegin() - *mst2.begin());\n            res_this = max(res_this, -*mst2.begin() + *mst2.rbegin());\n            res_this = max(res_this, -*mst1.begin() + *mst1.rbegin());\n            res = min(res, res_this);\n            mst1.insert(x + y);\n            mst2.insert(x - y);\n        }\n        return res;\n    }\n};"
}