{
    "username": "cool-goldstine8i9",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length /2;\n        var bounds = new int[k+1];\n        var counts = new HashMap<Integer,Integer>();\n        for(int i=0;i<n;i++){\n            //System.out.println(i);\n            int j = nums.length-1-i;\n            var diff = Math.abs(nums[i] - nums[j]);\n            counts.put(diff, counts.getOrDefault(diff,0)+1);\n            var maxi = Math.max(nums[i],k-nums[i]);\n            var maxni = Math.max(nums[j],k-nums[j]);\n            bounds[Math.max(maxi,maxni)]++;\n        }\n        for(int i = 1;i<k+1;i++){\n            bounds[i] += bounds[i-1];\n        }\n        int min = nums.length;\n        for(var e: counts.keySet()){\n            int co = n - counts.get(e);\n            if(e != 0) co += bounds[e-1];\n            min = Math.min(min, co);\n        }\n        return min;\n    }\n}",
    "submit_ts": "1721489670",
    "subm_id": "548319748"
}