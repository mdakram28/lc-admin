{
    "username": "tin_le",
    "submission": "class Solution {\npublic:\n    unordered_map<long long, unordered_map<int, unordered_map<bool, int>>> dp;\n    \n    int waysToReachStair(int k) {\n        return dfs(1, 0, true, k);\n    }\n    \n    int dfs(long long curr, int jump, bool dec, int k) {\n        if (curr > k + 1) return 0;\n        if (dp[curr][jump].count(dec)) return dp[curr][jump][dec];\n        \n        int res = (curr == k) ? 1 : 0;\n        \n        if (dec && curr != 0) {\n            res += dfs(curr - 1, jump, false, k);\n        }\n        \n        res += dfs(curr + (1LL << jump), jump + 1, true, k);\n        \n        return dp[curr][jump][dec] = res;\n    }\n};",
    "submit_ts": 1716087950.0
}