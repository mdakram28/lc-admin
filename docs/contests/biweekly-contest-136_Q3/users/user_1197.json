{
    "username": "helltractor",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        mx = n // 2\n        my = m // 2\n        ans = 0\n        c1 = c2 = 0\n        d1 = d2 = 0\n        \n        if n % 2:\n            for j in range((m + 1) // 2):\n                if grid[mx][j] != grid[mx][m - j - 1]:\n                    d1 += 1\n                elif grid[mx][j]:\n                    c1 += 1\n        if m % 2:\n            for i in range((n + 1) // 2):\n                if grid[i][my] != grid[n - i - 1][my]:\n                    d2 += 1\n                elif grid[i][my]:\n                    c2 += 1\n        # print(c1, c2, d1, d2)\n        if n % 2 and m % 2:\n            ans += grid[mx][my]\n            if d1 + d2 == 0:\n                ans += ((c1 + c2) % 2) * 2\n            ans += d1 + d2\n        elif m % 2:\n            if d2 == 0:\n                ans += (c2 % 2) * 2\n            ans += d2\n        elif n % 2:\n            if d1 == 0:\n                ans += (c1 % 2) * 2\n            ans += d1\n        # print(d1, ans)\n        for x in range(n // 2):\n            for y in range(m // 2):\n                s = grid[x][y] + grid[n - x - 1][m - y - 1] + grid[x][m - y - 1] + grid[n - x - 1][y]\n                ans += min(4 - s, s)\n        return ans\n                \n                ",
    "submit_ts": "1722698190",
    "subm_id": "552269768"
}