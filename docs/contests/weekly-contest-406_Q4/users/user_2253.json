{
    "username": "ayush-018",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ios::sync_with_stdio(false); \n        cin.tie(nullptr); \n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        long long h = 0, v = 0;\n        long long horizontalPieces = 1, verticalPieces = 1;\n        long long totalCost = 0;\n        int uV = 0;\n        cout << \"Starting computation...\" << endl;\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] > verticalCut[v]) {\n                totalCost += horizontalCut[h] * verticalPieces;\n                horizontalPieces++;\n                h++;\n            } \n            else \n            {\n                totalCost += verticalCut[v] * horizontalPieces;\n                verticalPieces++;\n                v++;\n            }\n            uV++;\n        }\n        \n        while (h < horizontalCut.size()) {\n            totalCost += horizontalCut[h] * verticalPieces;\n            h++;\n            uV++;\n        }\n\n        while (v < verticalCut.size()) {\n            totalCost += verticalCut[v] * horizontalPieces;\n            v++;\n            uV++;\n        }\n        cout << uV << endl;\n        return totalCost;\n    }\n};\n",
    "submit_ts": "1720926123",
    "subm_id": "1320276670"
}