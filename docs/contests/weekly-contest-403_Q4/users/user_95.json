{
    "username": "hongrock",
    "submission": "const int N = 32;\nint cnt[N], sum[N][N];\nint n, m, g[N][N];\nint calc(int a, int b, int c, int d){\n    int x1 = n, x2 = 0, y1 = m, y2 = 0;\n    for(int i=a; i<=c; ++i){\n        for(int j=b; j<=d; ++j){\n            if(g[i][j]){\n                x1 = min(x1, i);\n                x2 = max(x2, i);\n                y1 = min(y1, j);\n                y2 = max(y2, j);\n            }\n        }\n    }\n    if(x1 <= x2)    return (x2 - x1 + 1) * (y2 - y1 + 1);\n    return 0;\n}\nint solve(vector<vector<int>> &a, int n1, int m1){\n    n = n1;\n    m = m1;\n    int ret = n * m;\n    for(int i=0; i<n; ++i){\n        for(int j=0; j<m; ++j){\n            g[i][j] = a[i][j];\n        }\n    }\n    for(int c=0; c<m-1; ++c){\n        for(int r=0; r<n-1; ++r){\n            ret = min(ret, calc(0, 0, n-1, c) + calc(0, c + 1, r, m-1) + calc(r + 1, c + 1, n-1, m-1));\n        }\n        for(int c1=c+1; c1<m-1; ++c1){\n            ret = min(ret, calc(0, 0, n - 1, c) + calc(0, c + 1, n - 1, c1) + calc(0, c1 + 1, n-1, m - 1));\n        }\n    }\n    return ret;\n}\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& a) {\n        int n = a.size(), m = a[0].size();\n        int ans = solve(a, n, m);\n        for(int i=0; i<n; ++i){\n            reverse(a[i].begin(), a[i].end());\n        }\n        ans = min(ans, solve(a, n, m));\n        vector<vector<int>> b(m, vector<int>(n));\n        for(int i=0; i<n; ++i){\n            for(int j=0; j<m; ++j){\n                b[m-j-1][i] = a[i][j];\n            }\n        }\n        ans = min(ans, solve(b, m, n));\n        for(int i=0; i<m; ++i){\n            reverse(b[i].begin(), b[i].end());\n        }\n        ans = min(ans, solve(b, m, n));\n        return ans;\n    }\n};",
    "submit_ts": "1719111910",
    "subm_id": "541389608"
}