{
    "username": "twenty25",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> diffToMaxValuesMap;\n        vector<int> maxValues;\n        int dummy=3532323;\n        int dummy1=2345321;\n        int dummy2=3532323;\n        int dummy3=2345321;\n        for (int i = 0; i < nums.size() / 2; ++i) {\n            int firstNum = nums[i];\n            int secondNum = nums[nums.size() - i - 1];\n            int difference = abs(firstNum - secondNum);\n\n            int maxValue = max({firstNum, secondNum, k - firstNum, k - secondNum});\n\n            diffToMaxValuesMap[difference].push_back(maxValue);\n            maxValues.push_back(maxValue);\n        }\n\n        int minChangesRequired = nums.size();\n        sort(maxValues.begin(), maxValues.end());\n\n        for (const auto& [difference, values] : diffToMaxValuesMap) {\n            int countLessThanDifference = lower_bound(maxValues.begin(), maxValues.end(), difference) - maxValues.begin();\n            int changes = countLessThanDifference * 2 + (nums.size() / 2 - countLessThanDifference);\n\n            for (const auto& value : values) {\n                if (value < difference) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n\n            minChangesRequired = min(minChangesRequired, changes);\n        }\n        int dumm4=3532323;\n        int dummy5=2345321;\n        int dummy6=3532323;\n        int dummy7=2345321;\n        return minChangesRequired;\n    }\n};",
    "submit_ts": "1721489271",
    "subm_id": "1327448218"
}