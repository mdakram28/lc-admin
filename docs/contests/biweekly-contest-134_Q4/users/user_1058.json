{
    "username": "youx",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        long long sol = 0;\n        const int n=nums.size();\n        \n        map<int, long long> list[2];\n        int cur = 0;\n        \n        for (int i=0;i<n;i++){\n            if ((k&nums[i])<k){\n                list[0].clear();\n                list[1].clear();\n                cur = 0;\n                continue;\n            }\n            \n            list[cur].clear();\n            \n            for(map<int, long long>::iterator it = list[!cur].begin();it!=list[!cur].end();it++){\n                const int val = it->first & nums[i];\n                \n                if ((k&val)>=k){\n                    const map<int, long long>::iterator ret = list[cur].find(val);\n                    \n                    if (ret == list[cur].end())\n                        list[cur][val]+=it->second;\n                    else\n                        ret->second+=it->second;\n                }\n            }\n            \n            const map<int, long long>::iterator ret2 = list[cur].find(nums[i]);\n\n            if (ret2 == list[cur].end())\n                list[cur][nums[i]]=1;\n            else\n                ret2->second++;                \n\n            const map<int, long long>::iterator ret = list[cur].find(k);\n\n            if (ret != list[cur].end())\n                sol += ret->second;\n            cur = !cur;\n        }\n        \n        return sol;\n    }\n};",
    "submit_ts": "1720279373",
    "subm_id": "1311748619"
}