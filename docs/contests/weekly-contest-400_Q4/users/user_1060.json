{
    "username": "vivek_bhurke",
    "submission": "class CustomSegmentTree {\n    int[] segTree;\n    int size;\n    \n    public CustomSegmentTree(int[] arr) {\n        size = arr.length;\n        segTree = new int[4 * size];\n        build(arr, 0, 0, size - 1);\n    }\n\n    private void build(int[] arr, int node, int start, int end) {\n        if (start == end) {\n            segTree[node] = arr[start];\n        } else {\n            int mid = (start + end) / 2;\n            build(arr, 2 * node + 1, start, mid);\n            build(arr, 2 * node + 2, mid + 1, end);\n            segTree[node] = segTree[2 * node + 1] & segTree[2 * node + 2];\n        }\n    }\n\n    public int query(int left, int right) {\n        return rangeQuery(0, 0, size - 1, left, right);\n    }\n\n    private int rangeQuery(int node, int start, int end, int left, int right) {\n        if (right < start || end < left) {\n            return Integer.MAX_VALUE; // 2^31 - 1\n        }\n        if (left <= start && end <= right) {\n            return segTree[node];\n        }\n        int mid = (start + end) / 2;\n        int leftResult = rangeQuery(2 * node + 1, start, mid, left, right);\n        int rightResult = rangeQuery(2 * node + 2, mid + 1, end, left, right);\n        return leftResult & rightResult;\n    }\n}\n\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        CustomSegmentTree segmentTree = new CustomSegmentTree(nums);\n        int minDiff = Integer.MAX_VALUE;\n        \n        for (int i = 0; i < n; i++) {\n            int left = i - 1, right = n - 1;\n            while (right - left > 1) {\n                int mid = (left + right) / 2;\n                if (segmentTree.query(i, mid) >= k) {\n                    left = mid;\n                } else {\n                    right = mid;\n                }\n            }\n            if (left != i - 1) {\n                minDiff = Math.min(minDiff, absDiff(segmentTree.query(i, left), k));\n            }\n            minDiff = Math.min(minDiff, absDiff(k, segmentTree.query(i, right)));\n        }\n        return minDiff;\n    }\n    \n    private int absDiff(int a, int b) {\n        return Math.abs(a - b);\n    }\n}\n",
    "submit_ts": "1717299828",
    "subm_id": "1274825178"
}