{
    "username": "deb_ugger",
    "submission": "typedef pair<int, int> pii;\nclass Solution {\n    int n;\npublic:\n    int func(vector<pii>& z, vector<pii>& w, int del) {\n        int ans1 = 0, ans2 = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (z[i].second != del) {\n                ans1 += z[i].first;\n                break;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (z[i].second != del) {\n                ans1 -= z[i].first;\n                break;\n            }\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            if (w[i].second != del) {\n                ans2 += w[i].first;\n                break;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (w[i].second != del) {\n                ans2 -= w[i].first;\n                break;\n            }\n        }\n        return max(ans1, ans2);\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        n = points.size();\n        vector<pii> z, w;\n        for (int i = 0; i < n; i++) {\n            z.push_back({ points[i][0] + points[i][1], i });\n            w.push_back({ points[i][0] - points[i][1], i });\n        }\n        sort(z.begin(), z.end());\n        sort(w.begin(), w.end());\n        int ans = 1e9;\n        ans = min(func(z, w, z[0].second), ans);\n        ans = min(func(z, w, z.back().second), ans);\n        ans = min(func(z, w, w[0].second), ans);\n        ans = min(func(z, w, w.back().second), ans);\n        return ans;\n    }\n};"
}