{
    "username": "seedjyh",
    "submission": "\ntypedef long long LL;\n\nclass RangeTree {\n    vector<int> rangeMax;\n    vector<int> dotVal;\npublic:\n    explicit RangeTree(int maxDot) {\n        maxDot += 1e5;\n        int segs = maxDot / 256 + 1;\n        int len = segs * 256;\n        \n        rangeMax = vector<int>(segs);\n        dotVal = vector<int>(len + 1);\n        \n        rangeMax[0] = len;\n    };\n    \n    void setVal(int pos, int val) {\n        int segIdx = pos / 256;\n        dotVal[pos] = val;\n        int segMax = 0;\n        for (int i = 0, start = segIdx * 256; i < 256; i++) {\n            segMax = max(segMax, dotVal[start + i]);\n        }\n        rangeMax[segIdx] = segMax;\n        return;\n    }\n    int findMaxVal(int end) {\n        int ret = 0;\n        for (int si = 0; si < end / 256; si++) {\n            ret = max(ret, rangeMax[si]);\n        }\n        for (int p = end / 256 * 256; p <= end; p++) {\n            ret = max(ret, dotVal[p]);\n        }\n        return ret;\n    }\n};\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        // \u521d\u59cb\u7ebf\u6bb5\u957f\u5ea6\u5e94\u8be5\u662f 450,000\n        map<int, int> start2end;\n        start2end[0] = 1e5;\n        \n        RangeTree rt(1e5 + 1);\n        rt.setVal(0, 1e5);\n        \n        auto setBlock = [&](int p) -> void {\n            auto ite = --start2end.upper_bound(p);\n            int rawStart = ite->first;\n            int rawEnd = ite->second;\n            start2end.erase(ite);\n            start2end[rawStart] = p;\n            start2end[p] = rawEnd;\n            \n            rt.setVal(rawStart, p - rawStart);\n            rt.setVal(p, rawEnd - p);\n        };\n        \n        auto queryRange = [&](int end, int size) -> bool {\n            int minStart = end - size;\n            if (end < size) return false;\n            return rt.findMaxVal(minStart) >= size;\n        };\n        \n        vector<bool> ans;\n        for (auto &q : queries) {\n            if (q[0] == 1) {\n                setBlock(q[1]);\n            } else {\n                ans.push_back(queryRange(q[1], q[2]));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716650880.0
}