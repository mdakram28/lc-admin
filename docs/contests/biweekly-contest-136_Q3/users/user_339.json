{
    "username": "yelpiao",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        vector<vector<int>> st(n + 10, vector<int>(m + 10));\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (st[i][j]) continue;\n                if (m - j - 1 == j || n - i - 1 == i) continue;\n                int t = grid[i][j]; st[i][j] = 1;\n                t += grid[i][m - j - 1], st[i][m - j - 1] = 1;\n                t += grid[n - i - 1][j], st[n - i - 1][j] = 1;\n                t += grid[n - i - 1][m - j - 1], st[n - i - 1][m - j - 1] = 1;\n                if (4 < t * 2) ans += 4 - t;\n                else ans += t;\n            }\n        }\n        if (n % 2 == 0 && m % 2 == 0) return ans;\n        int c11 = 0, c01 = 0;\n        if (n & 1) {\n            int l = 0, r = m - 1;\n            while (l < r) {\n                if (grid[n / 2][l] + grid[n / 2][r] == 2) c11++;\n                else if (grid[n / 2][l] + grid[n / 2][r] == 1) c01++;\n                l++, r--;\n            }\n        }\n        if (m & 1) {\n            int l = 0, r = n - 1;\n            while (l < r) {\n                if (grid[l][m / 2] + grid[r][m / 2] == 2) c11++;\n                else if (grid[l][m / 2] + grid[r][m / 2] == 1) c01++;\n                l++, r--;\n            }\n        }\n        if (c11 & 1) {\n            if (c01 >= 1) ans += c01;\n            else ans += c01 + 2;\n        } else {\n            ans += c01;\n        }\n        if (n % 2 && m % 2 && grid[n / 2][m / 2]) ans++;\n        return ans;\n    }\n};",
    "submit_ts": "1722698160",
    "subm_id": "552269628"
}