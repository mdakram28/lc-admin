{
    "username": "kunal_91",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    string s;\n    class TrieNode{\n    public:\n    char data;\n    TrieNode* children[26];\n    bool isTerminal;\n    map<char, TrieNode*> child;\n    vector<pair<ll, ll>> ending;\n            TrieNode() {\n            data = '\\0';\n            isTerminal = false;\n            fill(begin(children), end(children), nullptr);\n        }\n};\n    class Node {\n    public:\n    TrieNode* root;\n    Node() {\n        root = new TrieNode();\n    }\n    void insertUtil(ll i, int cost,string word){\n        TrieNode* node = root;\n        for (char c : word) {\n            if (!node->child.count(c)) {\n                node->child[c] = new TrieNode();\n            }\n            node = node->child[c];\n        }\n        node->ending.push_back({i, cost});\n    }\n    void insert(ll i, int cost,string word) {\n        insertUtil(i,cost,word);\n    }\n    bool searchUtil(TrieNode* root,string word){\n        if(word.length()==0){\n            return root->isTerminal;\n        }\n        int node = word[0]-'a';\n        TrieNode* child;\n        if(root->children[node]!=NULL){\n            child=root->children[node];\n        }\n        else{\n            return false;\n        }\n        return searchUtil(child,word.substr(1));\n    }\n    bool search(string word) {\n        return searchUtil(root,word);\n    }\n};\n    int minimumCost(string t, vector<string>& w, vector<int>& c) {\n        s=t;\n        int n=s.size();\n        int m=w.size();\n        Node trie;\n        for(int i=0;i<m;i++){\n            trie.insert(i,c[i],w[i]);\n        }\n        vector<ll> dp(n+2,0);\n        for(int i=1;i<=n;i++){\n            dp[i]=1e18;\n        }\n        long long ans=1e18;\n        for(int i=0;i<n;i++) {\n            if(dp[i]<1e18) {\n            TrieNode* best = trie.root;\n            for(int j=i;j<n;j++) {\n                if(best->child.count(t[j])){\n                best=best->child[t[j]];\n                for(auto p:best->ending){\n                    ll k=(int)w[p.first].size();\n                    if(i+k<=n && dp[i+k]>(dp[i]+p.second)){\n                        dp[i+k]=dp[i]+p.second;\n                        if((i+k)==n)ans=min(ans,dp[i+k]);\n                    }\n                        }\n                    }\n                else break;\n                }\n            }\n        }\n        if(ans>=1e18)return -1;\n        return (int)ans;\n    }\n};",
    "submit_ts": "1720324107",
    "subm_id": "1312391766"
}