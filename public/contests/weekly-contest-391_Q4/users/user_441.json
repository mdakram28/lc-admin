{
    "username": "MohoGup",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<ll> sum, diff;\n        int n = points.size();\n        int mini = INT_MAX;\n        \n        for(auto point: points)\n        {\n            sum.insert(point[0]+point[1]);\n            diff.insert(point[0]-point[1]);\n        }\n        \n        for(int i=0;i<n;i++)\n        {\n            int s = points[i][0]+points[i][1];\n            int d =  points[i][0]-points[i][1];\n            sum.extract(s);\n            diff.extract(d);\n            \n            int a = 0, b = 0;\n            \n            if (!sum.empty())\n                a = (*sum.rbegin())-(*sum.begin());\n            \n            if (!diff.empty())\n                b = (*diff.rbegin())-(*diff.begin());\n            \n            mini = min(mini, max(a, b));\n            \n            sum.insert(s);\n            diff.insert(d);\n        }\n        \n        return mini;\n    }\n};"
}