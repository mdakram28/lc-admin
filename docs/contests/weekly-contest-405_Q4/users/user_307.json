{
    "username": "yumkam",
    "submission": "class Solution {\n    struct node {\n        array<unsigned, 26> next {};\n        unsigned minl = UINT_MAX/2;\n        unsigned minc = UINT_MAX/2;\n    };\npublic:\n    int minimumCost(string_view target, vector<string>& words, vector<int>& costs) {\n        const unsigned n = words.size();\n        vector<node> trie(1);\n        for (unsigned j = 0; j < n; ++j) {\n            auto &w = words[j];\n            unsigned l = w.size();\n            unsigned node = 0;\n            for (unsigned i = 0; i < l; ++i) {\n                auto c = w[i] - 'a';\n                trie[node].minl = min(trie[node].minl, l - i);\n                auto &next = trie[node].next[c];\n                if (next)\n                    node = next;\n                else {\n                    node = next = trie.size();\n                    trie.emplace_back();\n                }\n            }\n            trie[node].minc = min(trie[node].minc, 0u + costs[j]);\n        }\n        const unsigned m = target.size();\n        vector<unsigned> dp(m + 1, UINT_MAX/2);\n        dp[0] = 0;\n        for (unsigned i = 0; i < m; ++i) {\n            auto node = 0u;\n            auto cost = dp[i];\n            if (cost == UINT_MAX/2)\n                continue;\n            for (unsigned j = i; j < m; ++j) {\n                if (j + trie[node].minl > m)\n                    break;\n                auto c = target[j] - 'a';\n                auto next = trie[node].next[c];\n                if (!next)\n                    break;\n                node = next;\n                dp[j + 1] = min(dp[j + 1], cost + trie[node].minc);\n            }\n        }\n        return dp.back() == UINT_MAX/2 ? -1 : dp.back();\n    }\n};",
    "submit_ts": "1720321643",
    "subm_id": "1312328405"
}