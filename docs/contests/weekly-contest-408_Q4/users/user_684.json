{
    "username": "KINGZIE",
    "submission": "#define ll long long\n\nclass DisjointSet {\n    public:\n    vector<ll> rank, size, parent;\n    DisjointSet(ll n) {\n        rank.resize(n + 1, 0);\n        size.resize(n + 1, 1);\n        parent.resize(n + 1);\n        for (ll i = 0; i <= n; i++) parent[i] = i;\n    }\n\n    ll findUP(ll node) {\n        if (node == parent[node]) return node;\n        return parent[node] = findUP(parent[node]);\n    }\n\n    void UnionbyRank(ll u, ll v) {\n        ll ulp_u = findUP(u);\n        ll ulp_v = findUP(v);\n        if (ulp_u == ulp_v) return;\n        if (rank[ulp_u] < rank[ulp_v]) {\n            parent[ulp_u] = ulp_v;\n        } else if (rank[ulp_u] > rank[ulp_v]) {\n            parent[ulp_v] = ulp_u;\n        } else {\n            parent[ulp_v] = ulp_u;\n            rank[ulp_u]++;\n        }\n    }\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(ll X, ll Y, const vector<vector<int>>& circles) {\n        ll n = circles.size();\n        DisjointSet ds(n + 4);\n\n        for (ll i = 0; i < n; i++) {\n            for (ll j = i + 1; j < n; j++) {\n                ll x = 1ll*(circles[i][0] - circles[j][0]) * (circles[i][0] - circles[j][0]);\n                ll y = 1ll*(circles[i][1] - circles[j][1]) * (circles[i][1] - circles[j][1]);\n                ll r = 1ll*(circles[i][2] + circles[j][2]) * (circles[i][2] + circles[j][2]);\n                if (x + y <= r) {\n                    ds.UnionbyRank(i, j);\n                }\n            }\n            if(circles[i][0] - circles[i][2] <= 0) \n                 ds.UnionbyRank(i, n);\n            if(circles[i][0] + circles[i][2] >= X) \n                ds.UnionbyRank(i, n + 1);\n            if(circles[i][1] - circles[i][2] <= 0) \n                ds.UnionbyRank(i, n + 2);\n            if(circles[i][1] + circles[i][2] >= Y) \n                ds.UnionbyRank(i, n + 3);\n        }\n\n        if (ds.findUP(n) == ds.findUP(n + 1) || ds.findUP(n) == ds.findUP(n + 2) || ds.findUP(n + 1) == ds.findUP(n + 3) || ds.findUP(n + 2)           == ds.findUP(n + 3)) {\n            return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138003",
    "subm_id": "1335779523"
}