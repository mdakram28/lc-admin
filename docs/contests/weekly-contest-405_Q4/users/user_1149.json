{
    "username": "dineshgroach",
    "submission": "static int fast_io = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\nclass Trie {\npublic:\n    Trie *child[26];\n    bool isEnd = false;\n    int cost = 0;\n    Trie()\n    {\n        for(int i = 0; i < 26; i++)\n        {\n            child[i] = NULL;\n        }\n    }\n\n    void insert(string& s,int c)\n    {\n        Trie* Node = this;\n        for(char& c:s)\n        {\n            if(!Node->child[c-'a'])\n            {\n                Node->child[c-'a'] = new Trie();\n            }\n            Node = Node->child[c-'a'];\n        }\n        Node->isEnd = true;\n        if(Node->cost != 0) Node->cost = min(Node->cost,c);\n        else Node->cost = c;\n    }\n};\nclass Solution {\nprivate:\n    Trie* trie = new Trie();\npublic:\n    int minimumCost(string t, vector<string>& words, vector<int>& costs) {\n        int m = words.size();\n        for(int i = 0; i < m; i++)\n        {\n            trie->insert(words[i],costs[i]);\n        }\n        int n = t.size();\n        set<pair<int, int>> st;\n        int ans = INT_MAX;\n        Trie* curr = trie;\n        for(int i = 0; i < n; i++)\n        {\n            if(curr->child[t[i]-'a'] != NULL)\n            {\n                curr = curr->child[t[i] - 'a'];\n            }\n            else\n            {\n                break;\n            }\n            if(curr->isEnd == true)\n            {\n                st.insert({curr->cost, i + 1});\n            }\n        }\n        vector<int> dp(n + 1, INT_MAX);\n        while (!st.empty())\n        {\n            auto node = *st.begin();\n            st.erase(st.begin());\n            int id = node.second;\n            int cost = node.first;\n            if(cost > dp[id]) continue;\n            dp[id] = cost;\n            if(id == n) break;\n            curr = trie;\n            for (int i = id; i < n; i++)\n            {\n                if(curr->child[t[i]-'a'] != NULL)\n                {\n                    curr = curr->child[t[i] - 'a'];\n                }\n                else\n                {\n                    break;\n                }\n                if(curr->isEnd == true)\n                {\n                    if(cost + curr->cost < dp[i + 1])\n                    {\n                        auto tochange = st.find({dp[i+1],i + 1});\n                        if(tochange!=st.end())\n                        {\n                            st.erase(tochange);\n                        }\n                        dp[i + 1] = cost + curr->cost;\n                        st.insert({dp[i+1],i+1});\n                    }\n                }\n            }\n        }\n        int sol = dp[n];\n        if(sol == INT_MAX)\n        {\n            sol = -1;\n        }\n        return sol;\n    }\n};",
    "submit_ts": "1720323254",
    "subm_id": "1312371073"
}