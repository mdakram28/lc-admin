{
    "username": "fsj-o",
    "submission": "template<class T> std::ostream& operator<<(std::ostream& os, const std::vector<T>& a) { for (const T& x : a) os << x << ' '; return os; }\nclass Solution {\npublic:\n  long long minimumOperations(std::vector<int>& nums, std::vector<int>& target) {\n    int n = nums.size();\n    std::vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      a[i] = target[i]-nums[i];\n    }\n    std::cout << \"a = \" << a << '\\n';\n    std::vector<std::pair<int, int>> pa;\n    for (int i = 0, last = 0; i <= n; i++) {\n      if (i == n || a[i] == 0 || a[i] > 0 && a[last] < 0 || a[i] < 0 && a[last] > 0) {\n        pa.push_back({last, i});\n        last = (i < n && a[i] == 0 ? i+1 : i);\n      }\n    }\n    long long ans = 0;\n    for (auto [bg, ed] : pa) {\n      std::vector<int> la;\n      la.push_back(0);\n      for (int i = bg; i < ed; i++) {\n        la.push_back(std::abs(a[i]));\n      }\n      la.push_back(0);\n      std::vector<int> id(ed-bg);\n      std::iota(id.begin(), id.end(), 1);\n      std::sort(id.begin(), id.end(), [&] (int o, int p) {\n        return la[o] < la[p];\n      });\n      std::set<int> st;\n      st.insert(0);\n      st.insert(ed-bg+1);\n      long long cur = 0;\n      for (int i : id) {\n        auto it = st.lower_bound(i);\n        int r = *it;\n        --it;\n        int l = *it;\n        cur += la[i]-std::max(la[r], la[l]);\n        st.insert(i);\n      }\n      ans += cur;\n    }\n    return ans;\n  }\n};",
    "submit_ts": "1721531550",
    "subm_id": "548386973"
}