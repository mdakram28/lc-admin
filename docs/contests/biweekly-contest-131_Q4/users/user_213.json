{
    "username": "yuchen_724",
    "submission": "class Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        blocks = [0]\n        max_dict = {0:0}\n        ans = []\n        for query in queries:\n            if query[0] == 1:\n                low = 0\n                high = len(blocks)-1\n                while low <= high:\n                    middle = (low+high)//2\n                    if blocks[middle] >= query[1]:\n                        high = middle-1\n                    else:\n                        low = middle+1\n                blocks.insert(low,query[1])\n                if len(blocks) > low+1 and max_dict[blocks[low+1]] == max_dict[blocks[low-1]]:\n                    max_dict[query[1]] = max(max_dict[blocks[low-1]],query[1]-blocks[low-1])\n                else:\n                    max_dict[query[1]] = max(max_dict[blocks[low-1]],query[1]-blocks[low-1])\n                    for i in range(low+1,len(blocks)):\n                        max_dict[blocks[i]] = max(max_dict[blocks[i-1]],blocks[i]-blocks[i-1])\n        \n            else:\n                low = 0\n                high = len(blocks)-1\n                while low <= high:\n                    middle = (low+high)//2\n                    if blocks[middle] > query[1]:\n                        high = middle-1\n                    elif blocks[middle] < query[1]:\n                        low = middle+1\n                    else:\n                        low = middle\n                        break\n                \n                if max_dict[blocks[low-1]] >= query[2]:\n                    ans.append(True)\n                elif query[1]-blocks[low-1] >= query[2]:\n                    ans.append(True)\n                else:\n                    ans.append(False)\n                \n                    \n        return ans\n        \n        ",
    "submit_ts": 1716650260.0
}