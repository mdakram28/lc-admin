{
    "username": "r_us",
    "submission": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <queue>\n#include <deque>\n#include <bitset>\n#include <iterator>\n#include <list>\n#include <limits>\n#include <stack>\n#include <map>\n#include <set>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <limits>\n#include <time.h>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <cstdio>\n#include <cstring>\n   \nusing namespace std;\n   \ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> p32;\ntypedef pair<ll,ll> p64;\ntypedef pair<double,double> pdd;\ntypedef vector<ll> v64;\ntypedef vector<int> v32;\ntypedef vector<vector<int> > vv32;\ntypedef vector<vector<ll> > vv64;\ntypedef vector<vector<p64> > vvp64;\ntypedef vector<p64> vp64;\ntypedef vector<p32> vp32;\nll MOD = 998244353;\ndouble eps = 1e-12;\n#define forn(i,e) for(ll i = 0; i < e; i++)\n#define forsn(i,s,e) for(ll i = s; i < e; i++)\n#define rforn(i,s) for(ll i = s; i >= 0; i--)\n#define rforsn(i,s,e) for(ll i = s; i >= e; i--)\n#define ln \"\\n\"\n#define dbg(x) cout<<#x<<\" = \"<<x<<ln\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define INF 2e18\n#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\n#define all(x) (x).begin(), (x).end()\n#define sz(x) ((ll)(x).size())\n\nstruct segtree {\n    ll size = 1LL;\n    v64 sums;\n\n    void init(ll n) {\n        while (size < n) size *= 2;\n        // size > n and power of 2\n        sums.assign(2 * size, LLONG_MAX);\n    }\n\n    void set(ll i, ll v, ll x, ll lx, ll rx) {\n        if (rx - lx == 1) {\n            sums[x] = v;\n            return;\n        }\n\n        ll mid = (lx + rx) / 2;\n        if (i < mid) {\n            set(i, v, 2 * x + 1, lx, mid);\n        } else {\n            set(i, v, 2 * x + 2, mid, rx);\n        }\n\n        sums[x] = sums[2*x + 1] & sums[2*x + 2];\n        \n    }\n\n    void set(ll i, ll v) {\n        set(i, v, 0, 0, size);\n    }\n\n    ll sum(ll l, ll r, ll x, ll lx, ll rx) {\n        if (lx >= r || l >= rx) return LLONG_MAX;\n        if (l <= lx && rx <= r) return sums[x];\n\n        ll mid = (lx + rx) / 2;\n        ll s = (\n            sum(l, r, 2 * x + 1, lx, mid) & \n            sum(l, r, 2 * x + 2, mid, rx)\n        );\n        return s;\n    }\n\n    ll sum(ll l, ll r) {\n        return sum(l, r, 0, 0, size);\n    }\n};\n\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        ll n = (ll)(nums.size());\n        ll ans = 0ll;\n\n        segtree st;\n        st.init(n);\n\n        forn(i, n) st.set(i, nums[i]);\n        // cout << st.sum(0, sz(nums)) << \"\\n\";\n\n        forn(i, n) {\n            if (nums[i] < k) continue;\n            if (st.sum(i, n) > k) continue;\n            auto rp = n;\n            auto lp = i;\n            // st.sum(i, n) <= k\n\n            while (lp + 1 < rp) {\n                auto mid = lp + (rp - lp) / 2;\n                auto v = st.sum(i, mid+1);\n                if (v < k) {\n                    rp = mid;\n                } else {\n                    lp = mid;\n                }\n            }\n            auto ub = lp;\n            if (st.sum(i, ub+1) != k) continue;\n            if (nums[i] == k) {\n                ans += ub - i + 1;\n            } else {\n\n                lp = i;\n                rp = n;\n                while (lp + 1 < rp) {\n                    auto mid = lp + (rp - lp) / 2;\n                    auto v = st.sum(i, mid+1);\n                    if (v <= k) {\n                        rp = mid;\n                    } else {\n                        lp = mid;\n                    }\n                }\n                // v[rp] <= k\n                // v[lp] > k\n                auto lb = lp;\n                ans += (ub - lb); \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280758",
    "subm_id": "1311801017"
}