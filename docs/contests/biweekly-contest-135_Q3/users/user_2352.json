{
    "username": "CoderRohan003",
    "submission": "class Solution {\npublic:\nmap<int, vector<int>> calculateDifferenceMap(const vector<int>& nums, int k) {\n    map<int, vector<int>> diffMap;\n    vector<int> v;\n    int n = nums.size();\n    \n    for (int i = 0; i < n / 2; ++i) {\n        int a = nums[i], b = nums[n - i - 1];\n        int diff = abs(a - b);\n        int maxChange = max({a, b, k - a, k - b});\n        diffMap[diff].push_back(maxChange);\n        v.push_back(maxChange);\n    }\n    \n    sort(v.begin(), v.end());\n    diffMap[-1] = v;  // Store the sorted vector in the map with a key that will not conflict.\n    \n    return diffMap;\n}\n\nint calculateChanges(const map<int, vector<int>>& diffMap, int n) {\n    int ans = n;\n    vector<int> v = diffMap.at(-1);  // Retrieve the sorted vector.\n    \n    for (const auto& val : diffMap) {\n        if (val.first == -1) continue;  // Skip the sorted vector entry.\n        \n        int diff = val.first;\n        int T = lower_bound(v.begin(), v.end(), diff) - v.begin();\n        T = T * 2 + (n / 2 - T);\n        \n        for (int maxChange : val.second) {\n            if (maxChange < diff) {\n                T -= 2;\n            } else {\n                T -= 1;\n            }\n        }\n        \n        ans = min(ans, T);\n    }\n    \n    return ans;\n}\n\nint minChanges(vector<int>& nums, int k) {\n    int n = nums.size();\n    map<int, vector<int>> diffMap = calculateDifferenceMap(nums, k);\n    return calculateChanges(diffMap, n);\n}\n\n};",
    "submit_ts": "1721489173",
    "subm_id": "1327445192"
}