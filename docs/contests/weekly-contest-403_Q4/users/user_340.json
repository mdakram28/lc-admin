{
    "username": "fizzynoah",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        def minimumArea(grd):\n            #print(grd)\n            m = len(grd)\n            n = len(grd[0])\n            h_min = math.inf\n            h_max = 0\n            v_min = math.inf\n            v_max = 0\n            for i in range(m):\n                for j in range(n):\n                    if grd[i][j]==1:\n                        h_min = min(h_min, j)\n                        h_max = max(h_max, j)\n                        v_min = min(v_min, i)\n                        v_max = max(v_max, i)\n            return (h_max-h_min+1)*(v_max-v_min+1)\n        M = len(grid)\n        N = len(grid[0])\n        #lets first do it for one slice first\n        def slicer(grd, i, j):\n            return [x[i:j] for x in grd]\n\n        def oneslice(grd):\n            \n            m = len(grd)\n            n = len(grd[0])\n            if m==1 and n==1: return math.inf\n            ans = math.inf\n            for i in range(1, n):\n                a,b = minimumArea(slicer(grd, 0, i)), minimumArea(slicer(grd, i, n))\n                if a*b>0:\n                    ans = min(ans, a+b)\n            for j in range(1, m):\n                c,d = minimumArea(grd[:j]),minimumArea(grd[j:])\n                if c*d>0:\n                    ans = min(ans, c+d)\n            return ans\n        res = math.inf\n        for i in range(1, N):\n            a,b,c,d = oneslice(slicer(grid, 0, i)),minimumArea(slicer(grid, i, N)), minimumArea(slicer(grid, 0, i)),oneslice(slicer(grid, i, N))\n            if a*b<math.inf:\n                res = min(res, a+b)\n            if c*d<math.inf:\n                res = min(res, c+d)\n        for j in range(1, M):\n            a,b,c,d = oneslice(grid[:j]), minimumArea(grid[j:]),  minimumArea(grid[:j]), oneslice(grid[j:])\n            if a*b<math.inf:\n                res = min(res, a+b)\n            if c*d<math.inf:\n                res = min(res, c+d)\n    \n        return res\n",
    "submit_ts": 1719114187.0
}