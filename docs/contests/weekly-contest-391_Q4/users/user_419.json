{
    "username": "noobiiitian",
    "submission": "class Solution {\npublic:\n\n#define ll long long\nvector<pair<int, int>> MaxDist(vector<pair<int, int>> &A, int N)\n{\n    int minsum, maxsum, mindiff, maxdiff;\n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n\n    pair<int, int> a = A[0], b = A[0];\n    pair<int, int> c = A[0], d = A[0];\n\n    for (int i = 1; i < N; i++)\n    {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum)\n        {\n            a = A[i];\n            minsum = sum;\n        }\n        else if (sum > maxsum)\n        {\n            b = A[i];\n            maxsum = sum;\n        }\n        if (diff < mindiff)\n        {\n            c = A[i];\n            mindiff = diff;\n        }\n        else if (diff > maxdiff)\n        {\n            d = A[i];\n            maxdiff = diff;\n        }\n    }\n    if (maxsum - minsum > maxdiff - mindiff)\n    {\n        return {a, b};\n    }\n    else\n    {\n        return {c, d};\n    }\n}\n\nint minimumDistance(vector<vector<int>> &points)\n{\n    vector<pair<int, int>> A;\n    int ans = INT_MAX;\n    for (int i = 0; i < points.size(); i++)\n    {\n        A.push_back({points[i][0], points[i][1]});\n    }\n    vector<pair<int, int>> v = MaxDist(A, A.size());\n    // cout<<v[0].first<<\" \"<<v[0].second<<endl;\n    for (int i = 0; i < A.size(); i++)\n    {\n        if (A[i].first == v[0].first && A[i].second == v[0].second)\n        {\n            vector<pair<int, int>> B;\n            for (int j = 0; j < A.size(); j++)\n            {\n                if (i != j)\n                {\n                    B.push_back(A[j]);\n                }\n            }\n            vector<pair<int, int>> temp = MaxDist(B, B.size());\n            ans = min(ans, abs(temp[0].first - temp[1].first) + abs(temp[0].second - temp[1].second));\n            break;\n        }\n    }\n    for (int i = 0; i < A.size(); i++)\n    {\n        if (A[i].first == v[1].first && A[i].second == v[1].second)\n        {\n            vector<pair<int, int>> B;\n            for (int j = 0; j < A.size(); j++)\n            {\n                if (i != j)\n                {\n                    B.push_back(A[j]);\n                }\n            }\n            vector<pair<int, int>> temp = MaxDist(B, B.size());\n            ans = min(ans, abs(temp[0].first - temp[1].first) + abs(temp[0].second - temp[1].second));\n            break;\n        }\n    }\n    return ans;\n}\n};"
}