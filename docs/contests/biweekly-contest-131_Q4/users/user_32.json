{
    "username": "yang-zz",
    "submission": "class Solution {\npublic:\n    static const int N = 1e5 + 10;\n    struct TreeArray{\n        int c[N],maxn = 1e5;//\u9700\u8981\u9884\u5148\u8bbe\u5b9a\n        inline int lowbit(int x){return x&(-x);}\n        int sum(int i ){if( !i ) return 0;int ans=0;while( i ){ans = max(ans,c[i]);i -= lowbit(i);}return ans;}\n        void add(int i ,int val){while( i<=maxn ){c[i] = max(c[i], val);i += lowbit(i);}return;} \n    }ta;\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<bool> ans;\\\n        set<int> st;\n        st.insert(0);\n        st.insert(1e5);\n        ta.add(1e5,1e5+1);\n        // reverse(queries.begin(), queries.end());\n        for(auto &vv : queries){\n            int op = vv[0];\n            int x = vv[1];\n            if(op == 1){\n                st.insert(x);   \n            }\n        }\n        int last = 0;\n        for(auto &i : st){\n            if(i){\n                ta.add(i, i - last);\n                last = i;\n            }\n        }\n        reverse(queries.begin(), queries.end());\n        for(auto &vv : queries){\n            int op = vv[0];\n            int x = vv[1];\n            if(op == 1){\n                auto ppre = prev(st.lower_bound(x)); \n                auto suf = next(st.lower_bound(x));\n                ta.add(*suf,*suf - *ppre);\n                st.erase(x);\n            }else {\n                int sz = vv[2];\n                int mx = ta.sum(x);\n                auto ppre = prev(st.lower_bound(x)); \n                // cout << \"x = \" << x << \" sz \" << sz << \" pre \" << *ppre << endl;\n                // cout << \" mx \" << mx << endl;\n                if(mx >= sz || x - *ppre >= sz){\n                    ans.push_back(true);\n                }else{\n                    ans.push_back(false);\n                }\n            }\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};",
    "submit_ts": 1716649527.0
}