{
    "username": "akshatanand186",
    "submission": "class Solution {\npublic:\n\n    vector<pair<int,int>> palinDrome(int x, int y, int n, int m){\n        vector<pair<int,int>> v1;\n        set<int> rows;\n        set<int> cols;\n        rows.insert(x);\n        rows.insert(n-1-x);\n        cols.insert(y);\n        cols.insert(m-1-y);\n        for(auto t:rows){\n            for(auto h:cols) v1.push_back({t,h});\n        }\n        return v1;\n    }\n    // int ans(vector<vector<int>> curr){\n    //     int minm = 0;\n    //     for(auto t:curr){\n    //         int sz = t.size();\n    //         int sum = 0;\n    //         for(auto x:t){\n    //             cout << x << \" \"; \n    //         }\n    //         cout << endl;\n    //         for(auto x:t) sum += x;\n    //         minm += min(sum,sz-sum);\n    //     }\n    //     return minm;\n    // }\n    int ans(vector<vector<int>> curr){\n        int minm = 0;\n        int isOne = 0;\n        int isTwo = 0, probable = 0;\n        for(auto t:curr){\n            int sz = t.size();\n            int sum = 0;\n            // for(auto x:t){\n            //     cout << x << \" \"; \n            // }\n            // cout << endl;\n            for(auto x:t) sum += x;\n            if(sz==2 && sum==2){\n                isTwo++;\n            }\n            if(sz==2 && sum==1){\n                probable++;\n            }\n            if(sz==1 && sum){\n                isOne = true;\n            }\n            minm += min(sum,sz-sum);\n        }\n        int toAdd = 0;\n        if(isTwo%2){\n            if(!probable) toAdd += 2;\n        }\n        return minm+isOne+toAdd;\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector<vector<bool>> vis(n,vector<bool>(m,false));\n        vector<vector<int>> curr;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                if(vis[i][j]) continue;\n                // cout << i << \" \" << j << endl;\n                vector<pair<int,int>> v1 = palinDrome(i,j,n,m);\n                vector<int> val;\n                for(auto t:v1){\n                    val.push_back(grid[t.first][t.second]);\n                    vis[t.first][t.second] = true;\n                }\n                curr.push_back(val);\n            }\n        }\n        return ans(curr);\n    }\n};\n\n/*\n[[1,0,0],[0,1,0],[0,0,1]]\n[[0,1],[0,1],[0,0]]\n[[1],[1]]\n[[0,1,1,0]] - expect 2, output 0\n[[0]]\n*/",
    "submit_ts": "1722697991",
    "subm_id": "1343166023"
}