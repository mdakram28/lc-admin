{
    "username": "abhinash_giri",
    "submission": "typedef long long int  ll;\n\n\nvector<int>LOG;\nvoid build_LOG(int MAX_N){\n    LOG.resize(MAX_N+3);\n    LOG[1]=0;\n    for (int i = 2; i <=MAX_N+2 ; ++i){\n        LOG[i]=LOG[i/2]+1;\n    }\n}\ntemplate <class T> struct SparseTable {\n    int n, logn;\n    vector <vector <T>> dp1;\n    SparseTable(int _n) {\n        n = _n;\n        logn = ceil(log2(n)) + 1;\n        dp1.assign(logn, vector <T> (n, 0));\n    }\n    T comb1(T x, T y) { return (x&y); }\n    void build(vector<int> &a) {\n        for(int i = 0; i < n; i ++) {\n            dp1[0][i] = a[i];\n        }\n        for(int j = 1; j < logn; j ++) {\n            for(int i = 0; i + (1LL << j) <= n; i ++) {\n                dp1[j][i] = comb1(dp1[j - 1][i], dp1[j - 1][i + (1LL << (j - 1))]);\n            }\n        }\n    }\n    T query1(int l, int r) {\n        int ln = LOG[r - l + 1];\n        return comb1(dp1[ln][l], dp1[ln][r - (1LL << ln) + 1]);\n    }\n    T query2(int l, int r) {\n        int ln = LOG[r - l + 1];\n    }\n};\nint x = 1;\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        if(x==1){\n            x=0;\n            build_LOG(1e5+10);\n        }\n        int n = nums.size();\n        SparseTable<int>s(n);\n        s.build(nums);\n        long long int ans = 0;\n        for (int i = 0; i < n; ++i){\n            int l=i,r=n-1;\n            int h = -1;\n            while(l<=r){\n                int mid = l+(r-l)/2;\n                int AND = s.query1(i,mid);\n                if(AND <= k){\n                    r=mid-1;\n                    h=mid;\n                }else {\n                    l=mid+1;\n                }\n            }\n            if(h==-1)continue;\n            int AND = s.query1(i,h);\n            if(AND==k){\n                int start = h;\n                l=h,r=n-1;\n                while(l<=r){\n                    int mid = l+(r-l)/2;\n                    int AND2 = s.query1(i,mid);\n                    if(AND2 >= k){\n                        l=mid+1;\n                        h=mid;\n                    }else {\n                        r=mid-1;\n                    }\n                }\n                if(s.query1(i,h) ==k && s.query1(i,start)==k)ans+=(h-start+1);\n            }\n        }\n        return ans;\n\n    }\n};\n\nstatic const auto speedup = []() {\n    std::ios::sync_with_stdio(false); std::cin.tie(nullptr); return 0;\n}();",
    "submit_ts": "1720278538",
    "subm_id": "1311713532"
}