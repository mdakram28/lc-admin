{
    "username": "kashif321",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        using ll = long long;\n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<int>> order(n,vector<int>(m));\n        \n        for(int i=0;i<n;i++){\n            iota(order[i].begin(),order[i].end(),0);\n            sort(order[i].begin(),order[i].end(),[&](int a, int b){\n               return board[i][a] > board[i][b]; \n            });\n        }\n        \n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                cout << order[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        \n        \n        ll ans = -1e10;\n        for(int i=0;i<n;i++){\n            for(int j=i+1;j<n;j++){\n                for(int k=j+1;k<n;k++){\n                    for(int a=0;a<3;a++){\n                        for(int b=0;b<3;b++){\n                            for(int c=0;c<3;c++){\n                                int x = order[i][a]; int y = order[j][b]; int z = order[k][c];\n                                // cout << x << \" \" << y << \" \" << z << endl;\n                                if (x != y && y != z && x != z) {\n                                    ans = max(ans, 1ll*board[i][x] + 1ll*board[j][y] + 1ll*board[k][z]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1723909577",
    "subm_id": "1359197807"
}