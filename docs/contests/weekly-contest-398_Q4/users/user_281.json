{
    "username": "dennis753951",
    "submission": "typedef pair<int, int> pr;\nclass Solution {\npublic:\n    int mod = 1e9 + 7, N = 32;\n    long long *fact, *ifact;\n    bool calc = false;\n\n    long expo(long long x, int y) {\n        long long res = 1;\n\n        while(y) {\n            if(y & 1) \n                res = (res * x) % mod;\n            y >>= 1;\n            x = (x * x) % mod;\n        }\n        return res;\n    }\n\n    // pre-calculate\n    Solution() {\n        fact = new long long[N + 1];\n        ifact = new long long[N + 1];\n        \n        long long last = fact[0] = 1;\n\n        for (int i = 1; i != N + 1; ++i) {\n            fact[i] = last = (last * i) % mod;\n        }\n\n        ifact[N] = last = expo(last, mod - 2);\n\n        for (int i = N; i; --i)\n            ifact[i - 1] = last = (last * i) % mod;\n    }\n\n    int C(int a, int b) { //C a\u53d6b\n        //if(b > a || a < 0 || b < 0) return 0;\n        return (fact[a] * ifact[b] % mod) * ifact[a - b] % mod;\n    }\n    \n    int waysToReachStair(int k) {\n        // if(k == 0) return 2;\n        // if(k == 1) return 4;\n        \n        // at most 30 jump operations (2^30 = 1e9)\n        \n        // cur at position t, can go back 0~t times\n        \n        // k - 1\n        \n        int i = -1, t = 0;\n        while(t < k - 1) {\n            ++i;\n            t += 1 << i;\n        }\n        \n        // at least to 2^i, and onwards\n        \n        // when at 2^i, you can do up to i + 2 minus operations\n        \n        vector<pr> v;\n        \n        v.push_back({1, 1});\n        for(int i = 0; i != 30; ++i) { // {R, i + 2}\n            v.push_back({1 + (1 << (i + 1)) - 1, i + 2});\n        }\n        \n        // for(auto [a, b] : v) {\n        //     cout << \"(\" << a << \", \" << b << \"), \";\n        // }\n        // cout << \"\\n\";\n        \n        int res = 0;\n        \n        for(auto [R, op] : v) {\n            if(R < k || R - op > k) continue;\n            \n            t = R - k;\n            \n            res += C(op, t);\n            \n            // cout << \"C(\" << op << \", \" << t << \")\\n\";\n            \n            // C(op, t);\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1716088250",
    "subm_id": "1261808456"
}