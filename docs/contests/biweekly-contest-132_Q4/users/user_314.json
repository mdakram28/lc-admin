{
    "username": "veraci2",
    "submission": "class Solution:\n    def maximumLength(self, A, K):\n        N = len(A)\n        dp = [[1] * (K + 1) for _ in range(N)]\n        nxt = [N] * N\n        last = {}\n        for i in range(N-1,-1,-1):\n            nxt[i] = last.get(A[i], N)\n            last[A[i]] = i\n\n        for k in range(K + 1):\n            mx = 0\n            for i in range(N - 1, -1, -1):\n                j = nxt[i]\n                if j != N:\n                    dp[i][k] = max(dp[i][k], dp[j][k] + 1)\n\n                dp[i][k] = max(dp[i][k], mx)\n                if k:\n                    mx = max(mx, 1 + dp[i][k - 1])\n\n        return max(dp[i][K] for i in range(N))",
    "submit_ts": 1717860168.0
}