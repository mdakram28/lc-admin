{
    "username": "balepavleski",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = (int)nums.size();\n        int pref[n][30];\n        for(int b = 0; b < 30; b ++){\n            int c = 0;\n            for(int i = 0; i < n; i ++){\n                if(nums[i] & (1<<b)){\n                    c ++;\n                }\n                else{\n                    c = 0;\n                }\n                pref[i][b] = c;\n            }\n        }\n        long long ans = 0;\n        for(int i = 0; i < n; i ++){\n            int len1 = i + 1;\n            for(int b = 0; b < 30; b ++){\n                if(k & (1 << b)){\n                    len1 = min(len1, pref[i][b]);\n                }\n            }\n            int len2 = 0;\n            for(int b = 0; b < 30; b ++){\n                if((k & (1 << b)) == 0){\n                    len2 = max(len2, pref[i][b]);\n                }\n            }\n            ans += max(0, len1 - len2);\n        }\n        return ans;\n    }\n};\n\n",
    "submit_ts": "1720278225",
    "subm_id": "1311699912"
}