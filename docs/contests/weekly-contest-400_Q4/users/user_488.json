{
    "username": "khemendra123b",
    "submission": "class Solution {\npublic:\n    \n    int f(vector<vector<int> > &V, int i, int mid){\n        \n        // vector<int> v;\n        int And =0;\n        for(int j=0;j<31;j++){\n            int X = 0;\n            if(i> 0) X =  V[i-1][j];\n            \n            if( V[mid][j] - X == mid-i+1 ){\n                And += (1<<j);\n            }\n        }\n        // cout<<i<<\" \"<<mid<<' '<<And<<\" : \"<<endl;\n        return And;\n        \n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        vector<vector<int> > V(  (int)nums.size(), vector<int> (31,0) );\n        for(int i=0;i<nums.size();i++){\n            int X = nums[i];\n            for(int j=0;j<31;j++){\n                if( (1<<j)&X ) V[i][j]++;\n            }\n            if(i==0) continue;\n            for(int j=0;j<31;j++){\n                V[i][j] += V[i-1][j];\n            }\n        }\n        \n//         for(int i=0;i< (int)nums.size();i++){\n//             cout<<i<<\" : \";\n//             for(auto it : V[i]) cout<<it<<' ';\n//             cout<<endl;\n//             }  \n        \n      \n        \n        \n        int A = INT_MAX;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<=k) A = min(A, k-nums[i]);\n            else{\n                int lo = i, hi = nums.size()-1;\n                while(hi-lo>1){\n                    int mid =( hi+lo)/2;\n                    // [i...mid]\n                    \n                    int And = f(V,i,mid);\n                    A = min(A, abs(And-k) );\n                    if(And < k){\n                        hi = mid;\n                    }\n                    else{\n                        lo = mid+1;\n                    }\n                }\n                int And = f(V,i,lo);\n                A = min(A,  abs(And-k)  );\n            \n                And = f(V,i,hi);\n                A = min(A,  abs(And-k)  );\n            }\n        }\n        return  A;\n        \n        \n    }\n};",
    "submit_ts": 1717299233.0
}