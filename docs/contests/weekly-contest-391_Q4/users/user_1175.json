{
    "username": "Drunkenstein002",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n=points.length;\n        int one[][]=new int[n][2];\n        int second[][]=new int[n][2];\n        for(int i=0;i<n;i++)\n        {\n          one[i][1]=i;\n          one[i][0]=(points[i][0]+points[i][1]);\n          second[i][1]=i;\n          second[i][0]=(points[i][0]-points[i][1]); \n        }\n        Arrays.sort(one,(a,b)->{\n            if(a[0]==b[0])\n                return a[1]-b[1];\n            return a[0]-b[0];\n        });\n        Arrays.sort(second,(a,b)->{\n            if(a[0]==b[0])\n                return a[1]-b[1];\n            return a[0]-b[0];\n        });\n        Map<Integer,Integer>map1=new HashMap<>();\n        Map<Integer,Integer>map2=new HashMap<>();\n        for(int i=0;i<n;i++)\n        {\n            map1.put(one[i][1],i);\n            map2.put(second[i][1],i);\n        }\n        // for(int i=0;i<n;i++)\n        // {\n        //     System.out.println(one[i][0]+\" \"+one[i][1]);\n        // }\n        // for(int i=0;i<n;i++)\n        // {\n        //     System.out.println(second[i][0]+\" \"+second[i][1]);\n        // }\n        int ans=Integer.MAX_VALUE;\n        for(int i=0;i<n;i++)\n        {\n            int ans1=getAns(one,n,map1.get(i));\n            int ans2=getAns(second,n,map2.get(i));\n            ans=Math.min(ans,Math.max(ans1,ans2));\n        }\n        return ans;\n    }\n    int getAns(int one[][], int n, int pos)\n    {\n        if(pos!=0 && pos!=n-1)\n            return one[n-1][0]-one[0][0];\n        else if(pos==0)\n             return one[n-1][0]-one[1][0];\n        return one[n-2][0]-one[0][0];\n    }\n}"
}