{
    "username": "Yang Su",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        top_left = [[-inf] * n for _ in range(m)]\n        top_right = [[-inf] * n for _ in range(m)]\n        bot_left = [[-inf] * n for _ in range(m)]\n        bot_right = [[-inf] * n for _ in range(m)]\n        for r in range(m):\n            for c in range(n):\n                top_left[r][c] = board[r][c]\n                if r:\n                    top_left[r][c] = max(top_left[r][c], top_left[r-1][c])\n                if c:\n                    top_left[r][c] = max(top_left[r][c], top_left[r][c-1])\n        for r in range(m-1, -1, -1):\n            for c in range(n):\n                bot_left[r][c] = board[r][c]\n                if r < m-1:\n                    bot_left[r][c] = max(bot_left[r][c], bot_left[r+1][c])\n                if c:\n                    bot_left[r][c] = max(bot_left[r][c], bot_left[r][c-1])\n        for r in range(m):\n            for c in range(n-1, -1, -1):\n                top_right[r][c] = board[r][c]\n                if r:\n                    top_right[r][c] = max(top_right[r][c], top_right[r-1][c])\n                if c < n-1:\n                    top_right[r][c] = max(top_right[r][c], top_right[r][c+1])\n        for r in range(m-1, -1, -1):\n            for c in range(n-1, -1, -1):\n                bot_right[r][c] = board[r][c]\n                if r < m-1:\n                    bot_right[r][c] = max(bot_right[r][c], bot_right[r+1][c])\n                if c < n-1:\n                    bot_right[r][c] = max(bot_right[r][c], bot_right[r][c+1])\n        rmax = [[-inf] * n for _ in range(m)]\n        cmax = [[-inf] * n for _ in range(m)]\n        rmax2 = [[-inf] * n for _ in range(m)]\n        cmax2 = [[-inf] * n for _ in range(m)]\n        for r in range(m):\n            rmax[r][0] = board[r][0]\n            for c in range(1, n):\n                rmax[r][c] = max(board[r][c], rmax[r][c-1])\n        for c in range(n):\n            cmax[0][c] = board[0][c]\n            for r in range(1, m):\n                cmax[r][c] = max(board[r][c], cmax[r-1][c])\n        for r in range(m):\n            rmax2[r][-1] = board[r][-1]\n            for c in range(n-2, -1, -1):\n                rmax2[r][c] = max(board[r][c], rmax2[r][c+1])\n        for c in range(n):\n            cmax2[-1][c] = board[-1][c]\n            for r in range(m-2, -1, -1):\n                cmax2[r][c] = max(board[r][c], cmax2[r+1][c])\n        # print(top_left)\n        # print(top_right)\n        # print(bot_left)\n        # print(bot_right)\n        # print(rmax)\n        # print(cmax)\n        # print(rmax2)\n        # print(cmax2)\n        ans = -inf\n        for r in range(1, m-1):\n            for c in range(1, n-1):\n                cur = -inf\n                cur = max(cur, board[r][c] + top_left[r-1][c-1] + bot_right[r+1][c+1])\n                cur = max(cur, cmax2[r+1][c] + rmax2[r][c+1] + top_left[r-1][c-1])\n                cur = max(cur, rmax[r][c-1] + cmax2[r+1][c] + top_right[r-1][c+1])\n                cur = max(cur, board[r][c] + top_right[r-1][c+1] + bot_left[r+1][c-1])\n                cur = max(cur, cmax[r-1][c] + rmax2[r][c+1] + bot_left[r+1][c-1])\n                cur = max(cur, cmax[r-1][c] + rmax[r][c-1] + bot_right[r+1][c+1])\n                ans = max(ans, cur)\n                # print(r, c, ans)\n        return ans",
    "submit_ts": "1723909411",
    "subm_id": "1359191557"
}