{
    "username": "pulkit_rajput0710171845",
    "submission": "\n#define ll long long\nclass Solution {\npublic:\n    ll dp[101][101][101][3];\n    ll sol(int r, int in, int jn, int c, vector<vector<pair<int, int>>>& board){\n        if(c == 3)return 0;\n        if(r >= board.size())return -1e12;\n        if(dp[r][in][jn][c] != -1)return dp[r][in][jn][c];\n        ll ans = sol(r + 1, in, jn, c, board);\n        int n = board[r].size();\n        for(int i = n - 3; i < n; i++){\n            // cout << i << \" \" << r<< \" \"\n            if(board[r][i].second != in && board[r][i].second != jn){\n                if(c == 2)ans = max(ans, 1ll * board[r][i].first);\n                else if(c == 0)ans = max(ans, sol(r + 1, board[r][i].second, jn, c + 1, board) + board[r][i].first);\n                else ans = max(ans, sol(r + 1, in, board[r][i].second, c + 1, board) + board[r][i].first);\n            }\n        }\n        return dp[r][in][jn][c] = ans;\n    }\n    long long maximumValueSum(vector<vector<int>>& board) {\n        memset(dp, -1, sizeof(dp));\n        vector<vector<pair<int,int>>> nb;\n        for(int i = 0; i < board.size(); i++){\n            vector<pair<int, int>> nv;\n            for(int j = 0; j < board[i].size(); j++){\n                nv.push_back({board[i][j], j});\n            }\n            sort(nv.begin(), nv.end());\n            nb.push_back(nv);\n        }\n        return sol(0, 100, 100, 0, nb);\n        // return 1;\n    }\n};",
    "submit_ts": "1723908608",
    "subm_id": "1359159699"
}