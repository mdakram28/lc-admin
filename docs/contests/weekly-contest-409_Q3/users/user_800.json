{
    "username": "invincible_0",
    "submission": "class Solution {\npublic:\n    \n    int tree1[100005],tree2[100005];\n    \n    int read1(int idx){\n        int sum=0;\n        while(idx>0){\n            sum+=tree1[idx];\n            idx-=(idx & -idx);\n        }\n        return sum;\n    }\n    \n    void update1(int idx,int val,int n){\n        while(idx <=n ){\n            tree1[idx]+=val;\n            idx+=(idx & -idx);\n        }\n    }\n    \n    int read2(int idx){\n        int mx=0;\n        while(idx>0){\n            mx=max(mx,tree2[idx]);\n            idx-= (idx & -idx);\n        }\n        return mx;\n    }\n    \n    void update2(int idx,int val,int n){\n        while(idx <=n){\n            tree2[idx]=max(tree2[idx],val);\n            idx+=(idx & -idx);\n        }\n    }\n    \n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& qry) {\n        for(int i=0;i<=n;i++){\n            tree1[i]=tree2[i]=0;\n        }\n        int q=qry.size();\n        vector<int> ans;\n        int l,r;\n        int cur=n-1,val;\n        for(int i=0;i<q;i++){\n            l=qry[i][0]+1;\n            r=qry[i][1]+1;\n            if(read2(l)>=r || r==l+1){\n                ans.push_back(cur);\n                continue;\n            }\n            update2(l,r,n);\n            val=read1(r-1)-read1(l-1);\n            cur=cur+val-(r-l) +1;\n            // cout<<l<<\" \"<<r<<\" \"<<val<<endl;\n            update1(l,r-l-1-val,n);\n            ans.push_back(cur);\n        }\n        return ans;\n        return {};\n    }\n};",
    "submit_ts": "1722743125",
    "subm_id": "1343784914"
}