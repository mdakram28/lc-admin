{
    "username": "tungduong150105",
    "submission": "template <class T>\nstruct FenwickTree {\n    int n;\n    std::vector<T> a;\n    FenwickTree(int _n) {\n        init(_n);\n    }\n    void init(int _n) {\n        n = _n;\n        a.resize(n, T());\n    }\n    void add(int p, T v) {\n        for (int i = p + 1; i <= n; i += i & -i) {\n            a[i - 1] += v;\n        }\n    }\n    T sum(int p) {\n        T ans = T();\n        for (int i = p; i > 0; i -= i & -i) {\n            ans += a[i - 1];\n        }\n        return ans;\n    }\n    T rangeSum(int l, int r) {\n        return sum(r) - sum(l);\n    }\n    int search(T v) {\n        T res = T();\n        int pos = 0;\n        for (int i = std::__lg(n); i >= 0; --i) {\n            if (pos + (1 << i) <= n && res + a[pos + (1 << i) - 1] < v) {\n                res += a[pos + (1 << i) - 1];\n                pos += (1 << i);\n            }\n        }\n        return pos;\n    }\n};\nclass Solution {\npublic:\n    int minChanges(vector<int>& a, int k) {\n        int n = (int) a.size();\n        std::vector<int> cnt(100005, 0);\n        std::vector<std::vector<int>> f(k + 1);\n        for (int i = 0, j = n - 1; i < j; ++i, --j) {\n            if (a[i] > a[j]) {\n                std::swap(a[i], a[j]);\n            }\n            f[a[i]].push_back(a[j]);\n            ++cnt[std::abs(a[i] - a[j])];\n        }\n        int ans = 1E9;\n        int add = 0;\n        int cur_l = -1, cur_r = -1;\n        FenwickTree<int> fen(k + 1);\n        for (int x = 0; x <= k; ++x) {\n            int ok = cnt[x];\n            if (2 * x <= k) {\n                ans = std::min(ans, n / 2 - ok);\n            } else {\n                int l = k - x + 1, r = x - 1;\n                if (cur_l == -1 && cur_r == -1) {\n                    for (int j = l; j <= r; ++j) {\n                        for (int v : f[j]) {\n                            fen.add(v, 1);\n                        }\n                    }\n                    cur_l = l, cur_r = r;\n                } else {\n                    for (int j = l; j < cur_l; ++j) {\n                        for (int v : f[j]) {\n                            fen.add(v, 1);\n                        }\n                    }\n                    for (int j = cur_r + 1; j <= r; ++j) {\n                        for (int v : f[j]) {\n                            fen.add(v, 1);\n                        }\n                    }\n                    cur_l = l, cur_r = r;\n                }\n                ans = std::min(ans, n / 2 - ok + fen.rangeSum(l, r + 1));\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488703",
    "subm_id": "1327430594"
}