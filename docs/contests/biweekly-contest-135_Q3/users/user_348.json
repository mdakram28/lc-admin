{
    "username": "seedjyh",
    "submission": "// \u6811\u72b6\u6570\u7ec4\n// BitTree bt(100); // n = 100\n// bt.add(0, 11);   // position 0, add 11\n// bt.add(99, 22);  // position 99, add 22\n// bt.sum(99); // 33, from position 0 and position 99\n// bt.add(100, 1); // ERROR! 100 >= n\nclass BitTree {\n    int n;\n    vector<int> sums; // \u6811\u4ece[0]\u5f00\u59cb\npublic:\n    // n \u8981\u6bd4\u6700\u5927\u7684\u53ef\u80fdadd\u7684\u6570\u59271\n    explicit BitTree(int n): n(n), sums(n) {}\n    // add \u4f4d\u7f6e x \u7684\u6570\u503c\u589e\u52a0 y\n    // 0 <= x < n\n    void add(int x, int y) {\n        for (++x; x <= n; x += x & -x) {\n            sums[x - 1] += y;\n        }\n    }\n    // sum \u7edf\u8ba1\u4f4d\u7f6e 0 \u5230 \u4f4d\u7f6e x \u7684\u603b\u548c\n    // 0 <= x < n\n    int sum(int x) {\n        int ans = 0;\n        for (++x; x; x -= x & -x) {\n            ans += sums[x - 1];\n        }\n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> diff2delta(k + 1);\n        BitTree bt(k + 1);\n        for (int i = 0, j = n - 1; i < j; i++, j--) {\n            int a = nums[i];\n            int b = nums[j];\n            if (a > b) swap(a, b);\n            int diff = b - a;\n            int delta;\n            if (a < k - b) {\n                delta = k - a;\n            } else {\n                delta = b;\n            }\n            // cout << \"i=\" << i << \", j=\" << j << \", diff=\" << diff << \", delta=\" << delta << endl;\n            diff2delta[diff].push_back(delta);\n            bt.add(delta, 1);\n        }\n        int ans = n;\n        for (int diff = 0; diff <= k; diff++) {\n            auto &deltaList = diff2delta[diff];\n            for (auto x : deltaList) {\n                bt.add(x, -1);\n            }\n\n            int lower = (diff == 0 ? 0 : bt.sum(diff - 1));\n            int higher = bt.sum(k) - lower;\n            int nowAns = lower * 2 + higher;\n            // cout << \"diff=\" << diff << \", lower=\" << lower << \", higher=\" << higher << \", nowAns=\" << nowAns << endl;\n            ans = min(ans, nowAns);\n\n            for (auto x : deltaList) {\n                bt.add(x, 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487874",
    "subm_id": "548311884"
}