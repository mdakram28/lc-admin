{
    "username": "shivanshudixit16",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        d = {}\n        pt = {\"childs\":{},\"cost\":inf}\n        \n        def add(cs,cc):\n            cn = pt\n            for c in cs:\n                if c not in cn[\"childs\"]:\n                    cn[\"childs\"][c] =  {\"childs\":{},\"cost\":inf}\n                \n                cn = cn[\"childs\"][c]\n            cn[\"cost\"] = min(cn[\"cost\"],cc)\n                \n        \n        \n        ml = 0\n        for x,y in zip(words,costs):\n            if x not in d:\n                d[x] = y\n            else:\n                d[x] = min(d[x],y)\n            ml = max(ml,len(x))\n            add(x,y)\n        # print(pt)\n        @cache\n        def dfs(i):\n            if i == len(target):\n                return 0\n            \n            cs = \"\"\n            ca = inf\n            cn = pt\n            for j in range(i,len(target)):\n                ch = target[j]\n                # print(ch,cn)\n                if  ch not in cn[\"childs\"]:\n                    break\n                cn = cn[\"childs\"][ch]\n                if cn[\"cost\"] < inf:\n                    # print(ch)\n                    ca = min(ca, dfs(j+1) + cn[\"cost\"])\n                \n                \n                #if cs in d:\n                #    ca = min(ca, dfs(j+1) + d[cs])\n                #if j - i + 1 > ml :\n                #    break\n            return ca\n        \n        ca = dfs(0)\n        return ca if ca < inf else -1\n            ",
    "submit_ts": "1720322239",
    "subm_id": "1312344478"
}