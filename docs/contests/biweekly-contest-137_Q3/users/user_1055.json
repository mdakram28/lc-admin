{
    "username": "NAVEEN KUMAR S",
    "submission": "class Solution{\n    public long maximumValueSum(int[][] nums){\n        int m = nums.length , n = nums[0].length;\n        int A[][] = new int[m][n] , B[][] = new int[m][n] , C[][] = new int[m][n] , D[][] = new int[m][n];\n        for(int i = 0 ; i < m ; i++){\n            A[i][0] = nums[i][0];\n            B[i][0] = 0;\n            C[i][n - 1] = nums[i][n - 1];\n            D[i][n - 1] = n - 1;\n            for(int j = 1 ; j < n ; j++){\n                if(A[i][j - 1] < nums[i][j]){\n                    A[i][j] = nums[i][j];\n                    B[i][j] = j;\n                }else{\n                    A[i][j] = A[i][j - 1];\n                    B[i][j] = B[i][j - 1];\n                }\n            }\n            for(int j = n - 2 ; j >= 0 ; j--){\n                if(C[i][j + 1] < nums[i][j]){\n                    C[i][j] = nums[i][j];\n                    B[i][j] = j;\n                }else{\n                    C[i][j] = C[i][j + 1];\n                    B[i][j] = B[i][j + 1];\n                }\n            }\n        }\n        long ret = - (long)(1e9) * 5;\n        for(int i = 0 ; i < m ; i++){\n            for(int j = 1 ; j < n - 1 ; j++){\n                for(int k = 0 ; k < m ; k++) if(k != i){\n                    long cost = 1l * nums[i][j] + A[k][j - 1];\n                    for(int l = 0 ; l < m ; l++) if(l != i && l != k){\n                        ret = Math.max(ret , 1l * cost + C[l][j + 1]);\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n}",
    "submit_ts": "1723910145",
    "subm_id": "1359219073"
}