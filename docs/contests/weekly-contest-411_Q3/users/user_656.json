{
    "username": "Ana_Su",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        std::string ans;\n        for (int i = 0; i < n; i++) ans += \"9\";\n        if (k == 1 || k == 3 || k == 9) return ans;\n        if (k == 2) {\n            ans[0] = ans[n - 1] = '8';\n            return ans;\n        } \n        if (k == 4) {\n            if (n == 1) return \"8\";\n            if (n == 2) return \"88\";\n            if (n == 3) return \"888\";\n            if (n == 4) return \"8888\";\n            ans[0] = ans[1] = ans[n - 1] = ans[n - 2] = '8';\n            return ans;\n        }\n        if (k == 5) {\n            ans[0] = ans[n - 1] = '5';\n            return ans;\n        }\n        if (k == 8) {\n            if (n == 1) return \"8\";\n            if (n == 2) return \"88\";\n            if (n == 3) return \"888\";\n            if (n == 4) return \"8888\";\n            if (n == 5) return \"88888\";\n            ans[0] = ans[n - 1] = '8';\n            ans[1] = ans[n - 2] = '8';\n            ans[2] = ans[n - 3] = '8';\n            return ans;\n        }\n        if (k == 7) {\n            if (n == 1) return \"7\";\n            if (n == 2) return \"77\";\n            if (n == 3) return \"959\";\n            int k = 1, lef = 0;\n            std::vector<int> num(n + 1, 0);\n            for (int i = 0; i < n; i++) {\n                num[i] = k % 7;\n                k *= 10; k %= 7;\n            }\n            for (int i = 0; i < n; i++) {\n                lef = (lef + num[i] * 9) % 7;\n            } \n            if (lef == 0) return ans;\n            if (n & 1) {\n                for (int i = 8; i >= 0; i--) {\n                    lef = (lef - num[n / 2] * (i + 1) + num[n / 2] * i) % 7;\n                    ans[n / 2] = '0' + i;\n                    if (lef == 0) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (int i = 8; i >= 0; i--) {\n                    lef = (lef - num[n / 2] * (i + 1) + num[n / 2] * i - num[n / 2 - 1] * (i + 1) + num[n / 2 - 1] * i) % 7;\n                    ans[n / 2] = '0' + i;\n                    ans[n / 2 - 1] = '0' + i;\n                    if (lef == 0) {\n                        break;\n                    }\n                }\n            }\n            return ans;\n        }\n        else {\n            if (n == 1) return \"6\";\n            if (n == 2) return \"66\";\n            if (n == 3) return \"888\";\n            if (n == 4) return \"8778\"; \n            int k = 1, lef = 0;\n            std::vector<int> num(n + 1, 0);\n            for (int i = 0; i < n; i++) {\n                num[i] = k % 6;\n                k *= 10; k %= 6;\n            }\n            ans[0] = ans[n - 1] = '8';\n            lef = (lef + num[0] * 8 + num[n - 1] * 8) % 6;\n            for (int i = 1; i < n - 1; i++) {\n                lef = (lef + num[i] * 9) % 6;\n            } \n            if (lef == 0) return ans;\n            if (n & 1) {\n                for (int i = 8; i >= 0; i--) {\n                    lef = (lef - num[n / 2] * (i + 1) + num[n / 2] * i) % 6;\n                    ans[n / 2] = '0' + i;\n                    if (lef == 0) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (int i = 8; i >= 0; i--) {\n                    lef = (lef - num[n / 2] * (i + 1) + num[n / 2] * i - num[n / 2 - 1] * (i + 1) + num[n / 2 - 1] * i) % 6;\n                    ans[n / 2] = '0' + i;\n                    ans[n / 2 - 1] = '0' + i;\n                    if (lef == 0) {\n                        break;\n                    }\n                }\n            }\n            return ans;\n        }\n    }\n};\n",
    "submit_ts": "1723953032",
    "subm_id": "556415095"
}