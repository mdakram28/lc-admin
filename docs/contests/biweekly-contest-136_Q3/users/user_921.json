{
    "username": "oh-noodles",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                cnt1 = grid[i][j] + grid[i][n-1-j] + grid[m-1-i][j] + grid[m-1-i][n-1-j]\n                cnt0 = 4 - cnt1\n                ans += min(cnt1, cnt0)\n        if m%2 == 0 and n %2 == 0:\n            return ans\n\n        cnt00 = 0\n        cnt01 = 0\n        cnt11 = 0\n        cnt1 = 0\n        if m % 2 == 1:\n            for j in range(n//2):\n                if grid[m//2][j] != grid[m//2][n-1-j]:\n                    cnt01 += 1\n                elif grid[m//2][j] == 1:\n                    cnt11 += 1\n                else:\n                    cnt00 += 1\n        if n % 2 == 1:\n            for i in range(m//2):\n                if grid[i][n//2] != grid[m-1-i][n//2]:\n                    cnt01 += 1\n                elif grid[i][n//2] == 1:\n                    cnt11 += 1\n                else:\n                    cnt00 += 1\n        if m%2 == 1 and n%2 == 1 and grid[m//2][n//2] == 1:\n            ans += 1\n        \n        ans += cnt01\n        r = cnt11 * 2 % 4\n        if r == 2:\n            if cnt01 <= 0:\n                ans += 2\n        return ans",
    "submit_ts": "1722698699",
    "subm_id": "552272088"
}