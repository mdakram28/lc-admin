{
    "username": "rentyydrip",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        \n        # building the first array\n        \n        @lru_cache(None)\n        def dp(idx, curr):\n            \n            if idx == len(nums):\n                return 1\n            \n#             if prev is not None and (curr < prev or nums[idx] - curr > nums[idx - 1] - prev):\n#                 return 0\n            \n            res = 0\n            start = 0 if curr is None else curr\n            for nxt in range(start, nums[idx] + 1):\n                if curr is None or (nxt >= curr and nums[idx] - nxt <= nums[idx - 1] - curr):\n                    res += dp(idx + 1, nxt) % (10**9 + 7)\n            return res % (10**9 + 7)\n        \n        # res = 0\n        # for i in range(0, nums[0] + 1):\n        return dp(0, None)\n        # return res % 10**9 + 7\n        ",
    "submit_ts": "1723345848",
    "subm_id": "1351564615"
}