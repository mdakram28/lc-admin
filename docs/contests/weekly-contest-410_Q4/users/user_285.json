{
    "username": "randle999",
    "submission": "class Solution {\n    fun countOfPairs(nums: IntArray): Int {\n        val n = nums.size\n        val N = 1000\n        val MOD = 1_000_000_007\n\n        val dp = MutableList(n) { MutableList(N + 1) { 0 } }\n        val dpPref = MutableList(n) { MutableList(N + 2) { 0 } }\n\n        fun countPref(pos: Int) {\n            for (last in 0..N) {\n                dpPref[pos][last + 1] = (dpPref[pos][last] + dp[pos][last]) % MOD\n            }\n        }\n        \n        for (i in 0..nums[0]) {\n            dp[0][i] = 1\n        }\n        countPref(0)\n\n        for (pos in 1 until n) {\n            for (last in 0..nums[pos]) {\n                //for (x in 0..last) {\n                //    val y = nums[pos - 1] - x\n                //    val otherLast = nums[pos] - last\n                //    if (y < otherLast) continue\n                //    dp[pos][last] += dp[pos - 1][x]\n                //    dp[pos][last] %= MOD\n                //}\n                val xLimit = max(min(last, nums[pos - 1] - nums[pos] + last), -1)\n                dp[pos][last] = dpPref[pos - 1][xLimit + 1]\n            }\n            countPref(pos)\n        }\n\n        var ans = 0\n        for (i in 0..N) {\n            ans += dp.last()[i]\n            ans %= MOD\n        }\n        return ans\n    }\n}",
    "submit_ts": "1723346165",
    "subm_id": "1351571643"
}