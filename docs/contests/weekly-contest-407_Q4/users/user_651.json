{
    "username": "Marmaduke",
    "submission": "class Solution {\npublic:\n    int sgn(int x)\n    {\n        if(x == 0)\n        {\n            return 0;\n        }\n        return x/abs(x);\n    }\n    void add_pt(set<vector<int>>& seg, int x)\n    {\n        vector<set<vector<int>>::iterator> kill;\n        vector<int> dummy = {x,x};\n        auto it = seg.upper_bound(dummy);\n        int high = x;\n        int low = x;\n        if((*it)[0] == x+1)\n        {\n            high = (*it)[1];\n            kill.push_back(it);\n        }\n        it--;\n        if((*it)[1] == x-1)\n        {\n            low = (*it)[0];\n            kill.push_back(it);\n        }\n        for(auto &g : kill)\n        {\n            seg.erase(g);\n        }\n        seg.insert({low,high});\n            \n    }\n    long long int helper(vector<int>& V) // no element of V is zero by construction\n    {\n        vector<vector<int>> W;\n        int n = V.size();\n        for(int i = 0; i < n; i++)\n        {\n            W.push_back({V[i],i});\n        }\n        sort(W.rbegin(), W.rend());\n        W.push_back({0,-1}); // W will have size n+1 with final element a sentinel\n        set<vector<int>> seg;\n        seg.insert({-2,-2});\n        seg.insert({n+3,n+3});\n        int idx = 0;\n        long long int res = 0;\n        while(idx < n)\n        {\n            int t = W[idx][0];\n            while(idx < n && W[idx][0] == t)\n            {\n                add_pt(seg, W[idx][1]);\n                idx++;\n            }\n            long long int diff = t - W[idx][0];\n            res += diff * (seg.size()-2);\n        }\n        return res;\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> d(n);\n        for(int i = 0; i < n; i++)\n        {\n            d[i] = nums[i] - target[i];\n        }\n        vector<vector<int>> chunks;\n        int idx = 0;\n        while(idx < n)\n        {\n            int t = sgn(d[idx]);\n            int old = idx;\n            while(idx < n && sgn(d[idx]) == t)\n            {\n                idx++;\n            }\n            if(t != 0)\n            {\n                vector<int> V;\n                for(int k = old; k < idx; k++)\n                {\n                    V.push_back(d[k]*t);\n                }\n                chunks.push_back(V);\n            }\n        }\n        long long int ans = 0;\n        for(auto &c : chunks)\n        {\n            ans += helper(c);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1721531919",
    "subm_id": "1327973185"
}