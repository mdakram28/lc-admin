{
    "username": "Andrew H. Pometta",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        digits = ['9'] * n\n\n        if k in (1, 3, 9): return \"\".join(digits)\n        elif k == 5:\n            digits[0] = '5'\n            digits[-1] = '5'\n            return \"\".join(digits)\n        elif k == 2:\n            digits[0] = '8'\n            digits[-1] = '8'\n            return \"\".join(digits)\n        elif k == 4:\n            if n <= 3: return \"\".join(['8'] * n)\n            else:\n                digits[0] = digits[1] = digits[-1] = digits[-2] = '8'\n                return \"\".join(digits)\n        elif k == 8:\n            if n <= 5: return \"\".join(['8'] * n)\n            else:\n                digits[0] = digits[1] = digits[2] = digits[-1] = digits[-2] = digits[-3] = '8'\n                return \"\".join(digits)\n        elif k == 6:\n            if n <= 2: return \"\".join(['6'] * n)\n            else:\n                digits[0] = digits[-1] = '8'\n                if n % 2 == 0:\n                    digits[n // 2] = digits[n // 2 - 1] = '7'\n                else:\n                    digits[n // 2] = '8'\n                return \"\".join(digits)\n\n        #k = 7\n        if n == 1: return \"7\"\n        elif n == 2: return \"77\"\n\n        if n % 2 == 0:\n            r = n // 2\n            l = r - 1\n        else:\n            l = n // 2\n            r = 0\n        \n        while True:\n            num = 0\n            for i in digits:\n                num *= 10\n                num += int(i)\n                \n            if num % 7 == 0:\n                return \"\".join(digits)\n            else:\n                digits[l] = str(int(digits[l]) - 1)\n                if r != 0: digits[r] = digits[l]\n        return \"\"\n",
    "submit_ts": "1723950805",
    "subm_id": "1359755513"
}