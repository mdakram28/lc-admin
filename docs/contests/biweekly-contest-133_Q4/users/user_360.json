{
    "username": "bigflow_drs",
    "submission": "class Solution {\npublic:\n    long long MOD = 1e9+7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n         int total = n * (n - 1) / 2;\n        \n        vector<int> req(n+1, -1);\n        for(int i = 0; i < requirements.size(); i++){\n            req[requirements[i][0]+1] = requirements[i][1];\n            if(requirements[i][1] < 0 || requirements[i][1] > (requirements[i][0])*(requirements[i][0]+1)/2){ \n                cout<<\"hell\"<<endl;\n                return 0;}\n        }\n        \n        vector<vector<long long>> dp(n + 1, vector<long long>(total + 1, 0));\n        dp[0][0] = 1; \n        \n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j <= total; ++j) {\n                dp[i][j] = dp[i-1][j]; \n                if (j >= 1) dp[i][j] = (dp[i][j] + dp[i][j-1]) % MOD;\n                if (j >= i) dp[i][j] = (dp[i][j] - dp[i-1][j-i] + MOD) % MOD;\n            }\n            for(int j = 0; j <= total; ++j){\n                if(req[i] == -1) break;\n                \n                if(req[i] != j) dp[i][j] = 0;\n            }\n        }\n        \n        // for(int i = 0; i <= total; i++){\n        //     for(int j = 0; j <= n; j++){\n        //         cout<<dp[j][i]<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n        // cout<<endl;\n        \n\n        long long result = 0;\n        \n        for(int j = 0; j < total+1; j++){\n            result+=dp[n][j];\n            result%=MOD;\n        }\n     \n        return result;\n    }\n};",
    "submit_ts": 1719070323.0
}