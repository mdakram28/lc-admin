{
    "username": "singhal03",
    "submission": "class FenwickTree {\nprivate:\n    vector<int> bit;\n\npublic:\n    FenwickTree(int n) : bit(n + 1, 0) {}\n\n    void update(int idx, int val) {\n        idx += 1;\n        while (idx < bit.size()) {\n            bit[idx] += val;\n            idx += idx & (-idx);\n        }\n    }\n\n    int query(int idx) {\n        idx += 1;\n        int ans = 0;\n        while (idx > 0) {\n            ans += bit[idx];\n            idx -= idx & (-idx);\n        }\n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        const int n = nums.size();\n        FenwickTree ft(n);\n\n        vector<int> isPeak(n, 0);\n        for (int i = 1; i < n - 1; i++) {\n            isPeak[i] = (nums[i - 1] < nums[i] && nums[i] > nums[i + 1]);\n            if (isPeak[i]) ft.update(i, 1);\n        }\n\n        vector<int> ans;\n\n        for (auto& q : queries) {\n            int type = q[0];\n            if (type == 1) {\n                int l = q[1], r = q[2];\n                if(r-l+1<3)\n                    ans.push_back(0);\n                else\n                    ans.push_back(ft.query(r - 1) - ft.query(l));\n            } else {\n                int idx = q[1], val = q[2];\n\n                if (idx - 1 >= 0)\n                    ft.update(idx - 1, -isPeak[idx - 1]);\n                ft.update(idx, -isPeak[idx]);\n                if (idx + 1 < n)\n                    ft.update(idx + 1, -isPeak[idx + 1]);\n\n                nums[idx] = val;\n\n                if (idx == 0 || idx == n - 1) {\n                    isPeak[idx] = 0;\n                } else {\n                    isPeak[idx] = (nums[idx - 1] < nums[idx] && nums[idx] > nums[idx + 1]);\n                }\n                if (idx - 1 > 0) {\n                    isPeak[idx - 1] = (nums[idx - 2] < nums[idx - 1] && nums[idx - 1] > nums[idx]);\n                    ft.update(idx - 1, isPeak[idx - 1]);\n                }\n                if (idx + 1 < n - 1) {\n                    isPeak[idx + 1] = (nums[idx] < nums[idx + 1] && nums[idx + 1] > nums[idx + 2]);\n                    ft.update(idx + 1, isPeak[idx + 1]);\n                }\n\n                ft.update(idx, isPeak[idx]);\n            }\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1718507428",
    "subm_id": "1289651292"
}