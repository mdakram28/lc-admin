{
    "username": "_srihari_",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size();\n        n++;\n        vector<vector<vector<int>>> adj(n + 1);\n        vector<int> ans(n);\n        for(auto& it : edges) {\n            adj[it[0]].push_back({it[1], (it[1] % 2) ? 1: 2});            \n            adj[it[1]].push_back({it[0], (it[0] % 2) ? 1: 2});\n        }\n        vector<vector<int>> dp(n, vector<int>(2));\n        auto DFS = [&](auto&& dfs, int node, int par)->void{\n            int max1 = 0;\n            int max2 = 0;\n            for(auto& it : adj[node]){\n                int nei = it[0];\n                int d = it[1];\n                if(nei==par)continue;\n                dfs(dfs, nei, node);\n                int cur = dp[nei][0] + d;\n                if(max1 < cur){\n                    max2 = max1;\n                    max1 = cur;\n                } else if(max2 < cur){\n                    max2 = cur;\n                }\n            }\n            dp[node][0]= max1;\n            dp[node][1] = max2;\n        };\n        DFS(DFS, 0, -1);\n        \n        auto DFS1 = [&](auto&& dfs, int node, int par, int up)->void{\n            for(auto& nei : adj[node]){\n                if(nei[0] == par){\n                    up+=nei[1];\n                    break;\n                }\n            }\n            ans[node] = max(up, dp[node][0]);\n            for(auto& it : adj[node]){\n                if(it[0] == par)continue;\n                int nei = it[0];\n                int d = it[1];\n                int nxt = 0;\n                if(d+dp[nei][0] == dp[node][0]){\n                    nxt = dp[node][1];\n                }else{\n                    nxt = dp[node][0];\n                }\n                dfs(dfs, nei, node, max(up, nxt));\n            }\n        };\n        DFS1(DFS1, 0, -1, 0);\n        return ans;\n        \n        \n    }\n};",
    "submit_ts": "1722698584",
    "subm_id": "1343185359"
}