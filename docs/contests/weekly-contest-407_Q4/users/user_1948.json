{
    "username": "yee-su",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        arr = [x - y for x, y in zip(nums, target)]\n        stack = deque()\n        if arr[0] > 0:\n            ret = True\n        else:\n            ret = False\n        ans = 0\n\n        for i, a in enumerate(arr):\n            if (ret and a <= 0) or (not ret and a > 0):\n                while stack:\n                    curr = stack.pop()\n                    if stack:\n                        ans += abs(curr - stack[-1])\n                    else:\n                        ans += abs(curr)\n                stack.append(a)\n                ret = not ret\n            elif ret:\n                while stack and stack[-1] > a:\n                    curr = stack.pop()\n                    if stack:\n                        ans += min(abs(curr - stack[-1]), abs(curr - a))\n                    else:\n                        ans += abs(curr - a)\n                if not stack or a > stack[-1]:\n                    stack.append(a)\n            elif not ret:\n                while stack and stack[-1] < a:\n                    curr = stack.pop()\n                    if stack:\n                        ans += min(abs(curr - stack[-1]), abs(curr - a))\n                    else:\n                        ans += abs(curr - a)\n                if not stack or a < stack[-1]:\n                    stack.append(a)\n        while stack:\n            curr = stack.pop()\n            if stack:\n                ans += abs(curr - stack[-1])\n            else:\n                ans += abs(curr)\n        return ans",
    "submit_ts": "1721532295",
    "subm_id": "548391512"
}