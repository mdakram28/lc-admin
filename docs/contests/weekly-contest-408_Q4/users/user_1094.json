{
    "username": "BenhaoLu",
    "submission": "struct res{\n    bool l = false;\n    bool u = false;\n    bool d = false;\n    bool r = false;\n    res():l(false),u(false),d(false), r(false){}\n};\n\nclass Solution {\nprivate:\n    int x;\n    int y;\npublic:\n    res dfs(vector<vector<int>>& circles, vector<vector<int>>& graph, bool* visited, int i){\n\n        if (visited[i]) return res();\n        visited[i] = true;\n        \n        res r = res();\n        \n        for (int j = 0; j < graph[i].size(); j++){\n            int neighbor = graph[i][j];\n            res newRes = dfs(circles, graph, visited, neighbor);\n            if (newRes.l)r.l=true;\n            if (newRes.r)r.r=true;\n            if (newRes.u)r.u=true;\n            if (newRes.d)r.d=true;\n        }\n    \n        if (circles[i][0] + circles[i][2] >= x)r.r=true;\n        if (circles[i][0] - circles[i][2] <= 0)r.l=true;\n        if (circles[i][1] + circles[i][2] >= y)r.u=true;\n        if (circles[i][1] - circles[i][2] <= 0)r.d=true;\n        return r;\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        x = X;\n        y = Y;\n        \n        int n = circles.size();\n        \n        vector<vector<int>> graph;\n        for (int i = 0; i < n; i++)graph.push_back({});\n        \n        for (int i = 0; i < n; i++){\n            for (int j = i+1; j < circles.size(); j++){\n                long long dx = (circles[i][0]-circles[j][0]);\n                long long dy = (circles[i][1]-circles[j][1]);\n                long long r = circles[i][2] + circles[j][2];\n                if (dx*dx+dy*dy <= r*r){\n                    graph[i].push_back(j);\n                    graph[j].push_back(i);\n                }\n            }\n        }\n        \n        bool* visited = new bool[n];\n        for (int i = 0; i < n; i++)visited[i] = false;\n        \n        for (int i = 0; i < n; i++){\n            res newRes = dfs(circles, graph, visited, i);\n            int edgeCount = 0;\n            printf (\"%d %d %d %d: \\n\", newRes.u, newRes.r, newRes.d, newRes.l);\n            if (newRes.u&&newRes.r)return false;\n            if (newRes.l&&newRes.d)return false;\n            if (newRes.u&&newRes.d)return false;\n            if (newRes.l&&newRes.r)return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138968",
    "subm_id": "1335804379"
}