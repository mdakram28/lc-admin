{
    "username": "coderack",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n//         // merge intervals \n//         set<pair<int,int>> st;\n        \n//         for (int i=0 ; i<n-1 ; i++)\n//         {\n//             st.insert({i,i+1});\n//         }\n//         vector<int> kha(n,0);\n//         vector<int> ans;\n//         for (int i=0 ; i<n-1; i++) kha[i]=i+1;\n//         for (int i=0 ; i<queries.size(); i++)\n//         {\n//             int i1=queries[i][0];\n//             int i2=queries[i][1];\n            \n//             if (st.find({i1,kha[i1]})==st.end()) {\n//                 ans.push_back(st.size());\n//                 continue;\n//             }\n//             if (i2>kha[i1])\n//             {\n//                 for (int i=i1 ; i<i2 ; i++)\n//                 {\n//                     st.erase({i,kha[i]});\n//                 }\n//                 st.insert({i1,i2});\n//                 kha[i1]=i2;\n//             }\n//             ans.push_back(st.size());\n//         }\n//         return ans;\n        \n        vector<int> ans;\n        set<int> st;\n        for (int i=0; i<n; i++) st.insert(i);\n        for (auto it : queries)\n        {\n            auto left = st.lower_bound(it[0]+1);\n            auto right = st.lower_bound(it[1]);\n            st.erase(left,right);\n            ans.push_back(st.size()-1);\n        }\n        return ans;\n        \n    }\n};",
    "submit_ts": "1722743722",
    "subm_id": "1343798189"
}