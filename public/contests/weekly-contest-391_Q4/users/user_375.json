{
    "username": "zx2020",
    "submission": "class Solution {\npublic:\n    int f(vector<vector<int>>& points, int x){\n        set<pair<int,int>> sum;\n        set<pair<int,int>> dif;\n        int dist = 0;\n        sort(points.begin(), points.end());\n        \n        for(int i=0;i<points.size();i++){\n            if(i==x) continue;\n            \n            if(sum.size()&& points[sum.begin()->second][1] <= points[i][1]){\n                if(dist < points[i][1] + points[i][0] - sum.begin()->first){\n                    dist = points[i][1] + points[i][0] - sum.begin()->first;\n                }\n            }\n            if(sum.size()&& points[dif.begin()->second][1] >= points[i][1]){\n                if(dist < -points[i][1] + points[i][0] - dif.begin()->first){\n                    dist = -points[i][1] + points[i][0] - dif.begin()->first;\n                }\n            }\n            sum.insert({points[i][0]+points[i][1], i});\n            dif.insert({points[i][0]-points[i][1], i});\n        }\n        \n        return dist;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        int x = 0;\n        int y = 0;\n        int dist = 0;\n        \n        set<pair<int,int>> sum;\n        set<pair<int,int>> dif;\n        sort(points.begin(), points.end());\n        \n        for(int i=0;i<points.size();i++){\n            if(i==0){\n                sum.insert({points[i][0]+points[i][1], i});\n                dif.insert({points[i][0]-points[i][1], i});\n                continue;\n            }\n            if(points[sum.begin()->second][1] <= points[i][1]){\n                if(dist < points[i][1] + points[i][0] - sum.begin()->first){\n                    dist = points[i][1] + points[i][0] - sum.begin()->first;\n                    x = sum.begin()->second;\n                    y = i;\n                }\n            }\n            if(points[dif.begin()->second][1] >= points[i][1]){\n                if(dist < -points[i][1] + points[i][0] - dif.begin()->first){\n                    dist = -points[i][1] + points[i][0] - dif.begin()->first;\n                    x = dif.begin()->second;\n                    y = i;\n                }\n            }\n            sum.insert({points[i][0]+points[i][1], i});\n            dif.insert({points[i][0]-points[i][1], i});\n        }\n        //cout<<x<<\" \"<<y<<endl;\n        //cout<<\"dist = \"<<dist<<endl;\n        int res = 1e9;\n        \n        res = min(res, f(points, x));\n        //cout<<\"res = \"<<res<<endl;\n        res = min(res, f(points, y));\n        \n        return res;\n    }\n};"
}