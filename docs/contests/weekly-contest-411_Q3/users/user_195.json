{
    "username": "Fahim Shahriar Shakkhor",
    "submission": "class Solution {\npublic:\n    int dp[100005][10];\n    int pw[100005];\n    \n    int call(int l,int rem,int n,int k){\n        int r = n - l - 1;\n        if(l > r){\n            if(rem == 0)return 1;\n            return 0;\n        }\n        if(dp[l][rem] != -1)return dp[l][rem];\n        int ret = 0;\n        int st = 0;\n        if(l == 0)st = 1;\n        for(int i = 9;i >= st;i--){\n            int newrem = rem;\n            if(l == r){\n                newrem = (newrem + pw[l] * i) % k;\n            }else{\n                newrem = (newrem + pw[l] * i + pw[r] * i) % k;\n            }\n            ret = ret || call(l + 1,newrem,n,k);\n        }\n        return dp[l][rem] = ret;\n        \n    }\n    void rec(int l,int rem,int n,int k,string &s){\n        int r = n - l - 1;\n        if(l > r){\n            return;\n        }\n        int ret = 0;\n        int st = 0;\n        if(l == 0)st = 1;\n        for(int i = 9;i >= st;i--){\n            int newrem = rem;\n            if(l == r){\n                newrem = (newrem + pw[l] * i) % k;\n            }else{\n                newrem = (newrem + pw[l] * i + pw[r] * i) % k;\n            }\n            if(call(l + 1,newrem,n,k)){\n                s.push_back(i + '0');\n                rec(l+1,newrem,n,k,s);\n                return;\n            }\n        }\n\n    }\n    string largestPalindrome(int n, int k) {\n        memset(dp,-1,sizeof dp);\n        pw[0] = 1;\n        for(int i = 1;i <= n;i++)pw[i] = (pw[i - 1] * 10) % k;\n        string s;\n        rec(0,0,n,k,s);\n        string ans = s;\n        if(n % 2 == 1)s.pop_back();\n        reverse(s.begin(),s.end());\n        ans += s;\n        return ans;\n    }\n};",
    "submit_ts": "1723949634",
    "subm_id": "1359724785"
}