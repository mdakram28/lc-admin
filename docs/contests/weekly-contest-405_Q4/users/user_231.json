{
    "username": "a0920732333",
    "submission": "class Solution \n{\npublic:\n    struct Trie\n    {\n        vector<Trie*> child;\n        int cost;\n        Trie()\n        {\n            child.resize(26);\n            cost = INT_MAX;\n        }\n    };\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) \n    {\n        //Trie tree\n        Trie* root = new Trie();\n        int n = target.length();\n        vector<int> dp(n, INT_MAX);\n        Trie* ptr = new Trie();\n        for(int i = 0; i < words.size(); i++)\n        {\n            ptr = root;\n            for(int j = 0; j < words[i].length(); j++)\n            {\n                if(!ptr->child[words[i][j] - 'a'])\n                {\n                    ptr->child[words[i][j] - 'a'] = new Trie();\n                }\n                ptr = ptr->child[words[i][j] - 'a'];\n            }\n            ptr->cost = min(ptr->cost, costs[i]);\n        }\n        ptr = root;\n        for(int i = 0; i < n; i++)\n        {\n            if(ptr->child[target[i] - 'a'])\n            {\n                ptr = ptr->child[target[i] - 'a'];\n            }\n            else\n            {\n                break;\n            }\n            dp[i] = ptr->cost;\n        }\n        for(int i = 1; i < n; i++)\n        {\n            if(dp[i - 1] != INT_MAX)\n            {\n                ptr = root;\n                for(int j = i; j < n; j++)\n                {\n                    if(ptr->child[target[j] - 'a'])\n                    {\n                        ptr = ptr->child[target[j] - 'a'];\n                    }\n                    else\n                    {\n                        break;\n                    }\n                    if(ptr->cost != INT_MAX)\n                    {\n                        dp[j] = min(dp[j], dp[i - 1] + ptr->cost);\n                    }\n                }\n            }\n        }\n        return dp[n - 1] == INT_MAX ? -1 : dp[n - 1];\n    }\n};",
    "submit_ts": "1720321835",
    "subm_id": "1312333572"
}