{
    "username": "CelonyMire",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#ifdef LC_LOCAL\n#include \"parser.hpp\"\n#else\n#define dbg(...)\n#endif\n\n// ----- CHANGE FOR PROBLEM -----\nstruct segment_tree {\n  struct node_t {\n    int v = 0;\n  };\n  int n = 0;\n  vector<node_t> t;\n  segment_tree(int n) : n(n), t(4 * n) {}\n  void update(int i, int v) {\n    auto f = [&](auto &self, int tl, int tr, int node) -> void {\n      if (tl == tr)\n        t[node].v = v;\n      else {\n        int tm = (tl + tr) / 2;\n        if (i <= tm)\n          self(self, tl, tm, 2 * node);\n        else\n          self(self, tm + 1, tr, 2 * node + 1);\n        auto &a = t[2 * node], &b = t[2 * node + 1];\n        t[node].v = max(a.v, b.v);\n      }\n    };\n    f(f, 0, n - 1, 1);\n  }\n  auto query(int l, int r) {\n    auto f = [&](auto &self, int l, int r, int tl, int tr, int node) {\n      if (l > r)\n        return 0;\n      if (tl == l && tr == r)\n        return t[node].v;\n      int tm = (tl + tr) / 2;\n      auto a = self(self, l, min(r, tm), tl, tm, 2 * node);\n      auto b = self(self, max(l, tm + 1), r, tm + 1, tr, 2 * node + 1);\n      return max(a, b);\n    };\n    return f(f, l, r, 0, n - 1, 1);\n  }\n};\n\nclass Solution {\npublic:\n  vector<bool> getResults(vector<vector<int>> &q) {\n    int m = q.size();\n    set<pair<int, int>> st{{0, (int)5e4}};\n    segment_tree sg((int)5e4);\n    vector<bool> ans;\n    for (int i = 0; i < m; i++) {\n      if (q[i][0] == 1) {\n        auto it = --st.upper_bound({q[i][1], 0});\n        auto [p, sz] = *it;\n        st.insert({q[i][1], p + sz - q[i][1]});\n        st.insert({p, q[i][1] - p});\n        st.erase(it);\n        sg.update(q[i][1], p + sz - q[i][1]);\n        sg.update(p, q[i][1] - p);\n      } else {\n        auto r = --st.lower_bound({q[i][1], 0});\n        if (r == st.begin()) { // entire range is one gap\n          ans.push_back(q[i][1] >= q[i][2]);\n        } else {\n          auto r2 = prev(r, 1);\n          int mx = sg.query(0, r2->first);\n          mx = max(mx, q[i][1] - r->first);\n          ans.push_back(mx >= q[i][2]);\n        }\n      }\n    }\n    return ans;\n  }\n};\n// ----- CHANGE FOR PROBLEM -----\n\n#ifdef LC_LOCAL\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  exec(&Solution::getResults); // CHANGE FOR PROBLEM\n}\n#endif",
    "submit_ts": 1716651429.0
}