{
    "username": "lu-chen-chen",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int min = m * n;\n        for (int i = 0; i < m - 1; i++) {\n            int[][] arr1 = new int[i + 1][n];\n            int[][] arr2 = new int[m - 1 - i][n];\n            for (int i1 = 0; i1 < m; i1++) {\n                for (int j1 = 0; j1 < n; j1++) {\n                    if (i1 <= i) {\n                        arr1[i1][j1] = grid[i1][j1];\n                    } else {\n                        arr2[i1 - i - 1][j1] = grid[i1][j1];\n                    }\n                }\n            }\n            int s1 = minimumArea(arr1);\n            int s2 = minimumSum2(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n            s1 = minimumSum2(arr1);\n            s2 = minimumArea(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int[][] arr1 = new int[m][i + 1];\n            int[][] arr2 = new int[m][n - 1 - i];\n            for (int i1 = 0; i1 < m; i1++) {\n                for (int j1 = 0; j1 < n; j1++) {\n                    if (j1 <= i) {\n                        arr1[i1][j1] = grid[i1][j1];\n                    } else {\n                        arr2[i1][j1 - i - 1] = grid[i1][j1];\n                    }\n                }\n            }\n            int s1 = minimumArea(arr1);\n            int s2 = minimumSum2(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n            s1 = minimumSum2(arr1);\n            s2 = minimumArea(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n        }\n        return min;\n    }\n\n    private int minimumSum2(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int min = m * n;\n        int cnt = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                cnt += grid[i][j];\n            }\n        }\n        if (cnt < 2) {\n            return 0;\n        }\n        for (int i = 0; i < m - 1; i++) {\n            int[][] arr1 = new int[i + 1][n];\n            int[][] arr2 = new int[m - 1 - i][n];\n            for (int i1 = 0; i1 < m; i1++) {\n                for (int j1 = 0; j1 < n; j1++) {\n                    if (i1 <= i) {\n                        arr1[i1][j1] = grid[i1][j1];\n                    } else {\n                        arr2[i1 - i - 1][j1] = grid[i1][j1];\n                    }\n                }\n            }\n            int s1 = minimumArea(arr1);\n            int s2 = minimumArea(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int[][] arr1 = new int[m][i + 1];\n            int[][] arr2 = new int[m][n - 1 - i];\n            for (int i1 = 0; i1 < m; i1++) {\n                for (int j1 = 0; j1 < n; j1++) {\n                    if (j1 <= i) {\n                        arr1[i1][j1] = grid[i1][j1];\n                    } else {\n                        arr2[i1][j1 - i - 1] = grid[i1][j1];\n                    }\n                }\n            }\n            int s1 = minimumArea(arr1);\n            int s2 = minimumArea(arr2);\n            if (s1 != 0 && s2 != 0) {\n                min = Math.min(min, s1 + s2);\n            }\n        }\n        return min;\n    }\n\n    public int minimumArea(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int a = n;\n        int b = -1;\n        int c = m;\n        int d = -1;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == 1) {\n                    a = Math.min(a, j);\n                    b = Math.max(b, j);\n                    c = Math.min(c, i);\n                    d = Math.max(d, i);\n                }\n            }\n        }\n        if (b == -1) {\n            return 0;\n        }\n        return (b - a + 1) * (d - c + 1);\n    }\n}",
    "submit_ts": 1719112668.0
}