{
    "username": "ziyu_h",
    "submission": "class Solution {\n    int[] zeroCnt;\n    int cnt;\n    \n    private void addNum(int num) {\n        for (int i = 0; i < 31; i++) {\n            if ((num & (1 << i)) == 0) {\n                zeroCnt[i]++;\n            }\n        }\n        cnt++;\n    }\n\n    private void removeNum(int num) {\n        for (int i = 0; i < 31; i++) {\n            if ((num & (1 << i)) == 0) {\n                zeroCnt[i]--;\n            }\n        }\n        cnt--;\n    }\n\n    private int andRes() {\n        int result = 0;\n        for (int i = 0; i < 31; i++) {\n            if (zeroCnt[i] == 0) {\n                result += (1 << i);\n            }\n        }\n        return result;\n    }\n\n    public int minimumDifference(int[] nums, int k) {\n\n        zeroCnt = new int[32];\n        for (int i = 0; i < 32; i++) {\n            zeroCnt[i] = 0;\n        }\n\n        int l = 0;\n        int res = Integer.MAX_VALUE;\n        for (int r = 0; r < nums.length; r++) {\n            addNum(nums[r]);\n            res = Math.min(res, Math.abs(k - andRes()));\n            while (andRes() < k && l < r) {\n                removeNum(nums[l]);\n                l++;\n                res = Math.min(res, Math.abs(k - andRes()));\n            }\n        }\n\n        return res;\n    }\n}",
    "submit_ts": 1717300075.0
}