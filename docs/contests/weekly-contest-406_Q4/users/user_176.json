{
    "username": "Ujimatsu_Chiya",
    "submission": "import re\nfrom functools import reduce\nfrom math import gcd\nfrom typing import List\nfrom itertools import pairwise\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, deque, defaultdict\nfrom typing import List\nfrom heapq import heapify, heappush, heappop\n\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        q = [[-x, 0] for x in horizontalCut] + [[-x, 1] for x in verticalCut]\n        heapify(q)\n        c = [0,0]\n        ans = 0\n        while len(q) > 0:\n            val, f = heappop(q)\n            # print(val, f)\n            c[f] += 1\n            ans -= val * (c[f^1] + 1)\n        return ans",
    "submit_ts": "1720925179",
    "subm_id": "546437474"
}