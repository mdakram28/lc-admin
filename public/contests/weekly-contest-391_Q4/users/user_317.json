{
    "username": "00zi-jian",
    "submission": "class Solution:\n    def minimumDistance(self, A: List[List[int]]) -> int:\n        def f(A):\n            A.sort()\n            n=len(A)\n            idx0=0\n            idx1=0\n            mi=-A[0][0]-A[0][1]\n            ma=-A[0][0]+A[0][1]\n            u,v=0,0\n            d=-1\n            for i in range(1,n):\n                nmi=-A[i][0]-A[i][1]\n                nma=-A[i][0]+A[i][1]\n                if d<abs(A[i][0]-A[idx0][0])+abs(A[i][1]-A[idx0][1]):\n                    u,v=i,idx0\n                    d=abs(A[i][0]-A[idx0][0])+abs(A[i][1]-A[idx0][1])\n                if d<abs(A[i][0]-A[idx1][0])+abs(A[i][1]-A[idx1][1]):\n                    d=abs(A[i][0]-A[idx1][0])+abs(A[i][1]-A[idx1][1])\n                    u,v=i,idx1   \n                if nmi>mi:                   \n                    mi=nmi\n                    idx0=i\n                if nma>ma: \n                    ma=nma\n                    idx1=i\n                \n            return d,u,v\n        d,u,v=f(A)\n\n        return min(f(A[:u]+A[u+1:])[0],f(A[:v]+A[v+1:])[0])\n            \n                \n        "
}