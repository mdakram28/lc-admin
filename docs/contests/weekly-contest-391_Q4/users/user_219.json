{
    "username": "Abhi_Srivastava",
    "submission": "class Solution {\npublic:\n    vector<int> maxdist(vector<vector<int>>& points, int skip) {\n        int dist = INT_MIN, stor1 = INT_MIN, stor2 = INT_MIN, pt1, pt2;\n        vector<int> res(3);\n        for (int i = 0; i < points.size(); i++)\n            if (i != skip) {\n                if (stor1 != INT_MIN) {\n                    int chk1 = points[i][0] - points[i][1], chk2 = points[i][0] + points[i][1];\n                    if (chk1 + stor1 > dist) {\n                        res = {pt1, i, chk1 + stor1};\n                        dist = chk1 + stor1;\n                    }\n                    if (chk2 + stor2 > dist) {\n                        res = {pt2, i, chk2 + stor2};\n                        dist = chk2 + stor2;\n                    }\n                }\n                if (-points[i][0] + points[i][1] > stor1) {\n                    stor1 = -points[i][0] + points[i][1];\n                    pt1 = i;\n                }\n                if (-points[i][0] - points[i][1] > stor2) {\n                    stor2 = -points[i][0] - points[i][1];\n                    pt2 = i;\n                }\n            }\n        return res;\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        sort(points.begin(), points.end());\n        vector<int> pts = maxdist(points, -1);\n        // cout << maxdist(points, pts[0])[2] << ' ' << maxdist(points, pts[1])[2] << '\\n';\n        return min(maxdist(points, pts[0])[2], maxdist(points, pts[1])[2]);\n    }\n};"
}