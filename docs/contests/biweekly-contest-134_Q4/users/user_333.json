{
    "username": "wanghaocheng",
    "submission": "class Solution {\npublic:\n    struct AndSet {\n        vector<int> cnt;\n        int n;\n        \n        AndSet():n(0), cnt(31, 0) {}\n        \n        void add(int x) {\n            ++n;\n            for (int i = 0; i < 31; ++i) {\n                if (x & (1 << i))\n                    cnt[i]++;\n            }\n        }\n        \n        void remove(int x) {\n            --n;\n            for (int i = 0; i < 31; ++i) {\n                if (x & (1 << i))\n                    cnt[i]--;\n            }\n        }\n        \n        int result() {\n            int result = 0;\n            for (int i = 0; i < 31; ++i)\n                if (cnt[i] == n)\n                    result |= 1 << i;\n            \n            return result;\n        }\n    };\n    \n    long long calc(vector<bool>& mask, vector<int>& rem, int start, int end) {\n        AndSet st;\n        st.add(rem[start]);\n        \n        int p = start, q = start + 1;\n        \n        long long result = 0;\n        while (p < end) {\n            while (st.result() != 0 && q < end) {\n                st.add(rem[q]);\n                q++;\n            }\n            \n            if (st.result() == 0) {\n                result += end - q + 1;\n            }\n            \n            //cout << p << \", \" << rem.size() << endl;\n            st.remove(rem[p]);\n            ++p;\n            if (p == q && p < end) {\n                //cout << p << \", \" << rem.size() << endl;\n                st.add(rem[p]);\n                q++;\n            }\n        }\n        \n        return result;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<bool> mask(n, false);\n        vector<int> rem(n, 0);\n        for (int i = 0; i < n; ++i) {\n            if ((nums[i] & k) == k) {\n                mask[i] = true;\n                rem[i] = nums[i] ^ k;\n            }\n        }\n        \n        int start = 0, end = 0;\n        long long result = 0;\n        while (start < n) {\n            while (start < n && !mask[start]) ++start;\n            if (start < n) {\n                end = start + 1;\n                while (end < n && mask[end]) ++end;\n                result += calc(mask, rem, start, end);\n                start = end;\n            }\n            \n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1720278610",
    "subm_id": "544563455"
}