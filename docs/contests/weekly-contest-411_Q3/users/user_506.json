{
    "username": "Bohua Yang",
    "submission": "class Solution {\n    bool check(string &s, int k) {\n        int num = 0;\n        for (int i = s.size() - 1; i >= 0; i--)\n            num = (num * 10 + (s[i] - '0')) % k;\n        return !num;\n    }\n    \n    void minus_one(string &s) {\n        for (int i = s.size() - 1; i >= 0; i--)\n            if (s[i] > '0') {\n                s[i]--;\n                return;\n            } else\n                s[i] = '9';\n    }\n    \npublic:\n    string largestPalindrome(int n, int k) {    \n        string s(n / 2, '9');\n        if (k == 2 || k == 6) s[0] = '8';\n        if (n >= 4 && k == 4) s[0] = s[1] = '8';\n        if (n >= 6 && k == 8) s[0] = s[1] = s[2] = '8';\n        if (k == 5) s[0] = '5';\n        char c = '9';\n        \n        while (true) {\n            string rev = s;\n            reverse(rev.begin(), rev.end());\n            string num;\n            if (n & 1)\n                num = s + c + rev;\n            else\n                num = s + rev;\n            if (check(num, k)) return num;\n            \n            if (n & 1) {\n                if (c > '0') c--;\n                else {\n                    c = '9';\n                    minus_one(s);\n                }\n            } else\n                minus_one(s);\n        }\n        return \"\";\n    }\n};",
    "submit_ts": "1723952468",
    "subm_id": "1359796940"
}