{
    "username": "HarshitKumarSingh_13",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int hIdx = horizontalCut.length - 1;\n        int vIdx = verticalCut.length - 1;\n        \n        int hPieces = 1;\n        int vPieces = 1;\n        long totalCost = 0;\n        \n        while (hIdx >= 0 && vIdx >= 0) {\n            if (horizontalCut[hIdx] >= verticalCut[vIdx]) {\n                totalCost += (long) horizontalCut[hIdx] * vPieces;\n                hPieces++;\n                hIdx--;\n            } else {\n                totalCost += (long) verticalCut[vIdx] * hPieces;\n                vPieces++;\n                vIdx--;\n            }\n        }\n        \n        while (hIdx >= 0) {\n            totalCost += (long) horizontalCut[hIdx] * vPieces;\n            hIdx--;\n        }\n        \n        while (vIdx >= 0) {\n            totalCost += (long) verticalCut[vIdx] * hPieces;\n            vIdx--;\n        }\n        \n        return totalCost;\n    }\n}",
    "submit_ts": "1720925373",
    "subm_id": "1320252513"
}