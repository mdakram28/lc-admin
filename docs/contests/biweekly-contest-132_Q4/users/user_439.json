{
    "username": "ahimawan",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        int dpi[5001][51], dpe[5001][51];\n        \n        // dp[x][y]\n        // y == 0 means single value, so y == k\n        int n = a.size();\n        \n        for (int j = 0; j <= k; j++) {\n            dpi[0][j] = 1;\n            dpe[0][j] = 1;\n        }\n        \n        map<int,int> m;\n        m[a[0]] = 0;\n        int ret = 1;\n        for (int i = 1; i < n; i++) {\n            auto it = m.find(a[i]);\n            int prev;\n            if (it != m.end()) {\n                prev = it->second;\n            } else {\n                prev = -1;\n            }\n            \n            for (int j = 0; j <= k; j++) {\n                dpi[i][j] = 1;\n                if (j > 0) dpi[i][j] = max(dpi[i][j], dpi[i][j-1]);\n                if (j > 0) dpi[i][j] = max(dpi[i][j], dpe[i-1][j-1] + 1);\n                if (prev != -1) dpi[i][j] = max(dpi[i][j], dpi[prev][j] + 1);\n            }\n            \n            for (int j = 0; j <= k; j++) {\n                dpe[i][j] = max(dpi[i][j], dpe[i-1][j]);\n                ret = max(ret, dpe[i][j]);\n            }\n            m[a[i]] = i;\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717861586.0
}