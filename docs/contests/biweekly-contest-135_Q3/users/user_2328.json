{
    "username": "ansonll",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        # a9 - a0 = a8 - a1 = a7 - a2 = ...\n        n = len(nums)\n        \n        cnt = Counter()\n        av_d = [0] * (k + 2)\n        for i in range(n // 2):\n            cnt[abs(nums[i] - nums[n - 1 - i])] += 1\n            mx_d = max(max(nums[i], nums[n - 1 - i]), k - min(nums[i], nums[n - 1 - i]))\n            av_d[0] += 1\n            av_d[mx_d + 1] -= 1\n        \n        mm_d = list(accumulate(av_d))\n        # print(av_d, mm_d)\n        # res_d, mx_c = 0, 0\n        # possible_ds = []\n        res = inf\n        for d, c in cnt.items():\n            dd = n//2 - c\n            cnt1 = mm_d[d] - c\n            cnt2 = dd - cnt1\n            res = min(res, cnt1 + 2 * cnt2)\n        return res\n            \n        # # print(cnt, possible_ds)\n        # res = inf\n        # for d in possible_ds:\n        #     cal = 0\n        #     for i in range(n // 2):\n        #         if d != abs(nums[i] - nums[n - 1 - i]):\n        #             if min(nums[i], nums[n - 1 - i]) + d <= k or max(nums[i], nums[n - 1 - i]) - d >= 0:\n        #                 cal += 1\n        #             else:\n        #                 cal += 2\n        #     # print(d, cal)\n        #     res = min(res, cal)\n        # return res\n        return 0\n            \n#         print(cnt, mx_c, res_d)\n#         res = 0\n#         for d, c in cnt.items():\n#             if d != res_d:\n#                 res += c\n                \n#         return res\n            \n        ",
    "submit_ts": "1721489750",
    "subm_id": "1327462570"
}