{
    "username": "profchi",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        \n        TreeSet<Integer> set = new TreeSet<>();\n\n        if (colors[0] == colors[colors.length - 1])\n            set.add(colors.length);\n\n        for (int i = 1; i < colors.length; ++i) {\n            if (colors[i] == colors[i - 1]){\n                set.add(i);\n                set.add(i + colors.length);\n            }\n        }\n\n        Integer key;\n        int result = 0;\n\n        for (int i = k - 1, j = 0; j < colors.length; ++i, ++j ) {\n            key = set.ceiling(j + 1);\n\n            // System.out.println(key + \" \" + j + \" \" + i);\n\n            if (key == null || key > i)\n                ++result;\n        }\n\n        return result;\n    }\n}",
    "submit_ts": "1720276940",
    "subm_id": "1311640141"
}