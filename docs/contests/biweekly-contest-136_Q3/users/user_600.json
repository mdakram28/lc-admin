{
    "username": "fahadm20",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        if(n%2==0){\n            if(m%2==0){\n                int ans=0;\n                for(int i=0;i<n/2;i++){\n                    for(int j=0;j<m/2;j++){\n                        int yt1=grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                        ans+=min(yt1,4-yt1);\n                    }\n                }\n                return ans;\n            }\n            else{\n                int ans=0;\n                for(int i=0;i<n/2;i++){\n                    for(int j=0;j<m/2;j++){\n                        int yt1=grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                        ans+=min(yt1,4-yt1);\n                    }\n                }\n                int diffpair=0,onepair=0;\n                for(int i=0;i<n/2;i++){\n                    if(grid[i][m/2]==1){\n                        if(grid[n-i-1][m/2]==1) onepair++;\n                        else diffpair++;\n                    }\n                    else{\n                        if(grid[n-i-1][m/2]==1) diffpair++;\n                    }\n                }\n                if(onepair%2==0) ans+=diffpair;\n                else{\n                    if(diffpair>0) ans+=diffpair;\n                    else ans+=2;\n                }\n                return ans;\n            }\n        }\n        else{\n            if(m%2==0){\n                int ans=0;\n                for(int i=0;i<n/2;i++){\n                    for(int j=0;j<m/2;j++){\n                        int yt1=grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                        ans+=min(yt1,4-yt1);\n                    }\n                }\n                int diffpair=0,onepair=0;\n                for(int j=0;j<m/2;j++){\n                    if(grid[n/2][j]==1){\n                        if(grid[n/2][m-j-1]==1) onepair++;\n                        else diffpair++;\n                    }\n                    else{\n                        if(grid[n/2][m-j-1]==1) diffpair++;\n                    }\n                }\n                if(onepair%2==0) ans+=diffpair;\n                else{\n                    if(diffpair>0) ans+=diffpair;\n                    else ans+=2;\n                }\n                return ans;\n            }\n            else{\n                int ans=0;\n                for(int i=0;i<n/2;i++){\n                    for(int j=0;j<m/2;j++){\n                        int yt1=grid[i][j]+grid[n-i-1][j]+grid[i][m-j-1]+grid[n-i-1][m-j-1];\n                        ans+=min(yt1,4-yt1);\n                    }\n                }\n                int onepair=0,diffpair=0;\n                for(int i=0;i<n/2;i++){\n                    if(grid[i][m/2]==1){\n                        if(grid[n-i-1][m/2]==1) onepair++;\n                        else diffpair++;\n                    }\n                    else{\n                        if(grid[n-i-1][m/2]==1) diffpair++;\n                    }\n                }\n                for(int i=0;i<m/2;i++){\n                    if(grid[n/2][i]==1){\n                        if(grid[n/2][m-i-1]==1) onepair++;\n                        else diffpair++;\n                    }\n                    else{\n                        if(grid[n/2][m-i-1]==1) diffpair++;\n                    }\n                }\n                if(onepair%2==0) ans+=diffpair;\n                else{\n                    if(diffpair>0) ans+=diffpair;\n                    else ans+=2;\n                }\n                if(grid[n/2][m/2]==1) ans++;\n                return ans;\n            }\n        }\n    }\n};",
    "submit_ts": "1722697909",
    "subm_id": "1343163247"
}