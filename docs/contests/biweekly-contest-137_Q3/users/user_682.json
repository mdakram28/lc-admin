{
    "username": "Piyush Kumar",
    "submission": "class Solution {\npublic:\n    long long dp[101][101][101][2];\n    long long inf=1e18;\n    int n, m;\n\n    long long solve(int col, int r1, int r2, bool placed, vector<vector<int>>& board) {\n        if (col == m||placed) return placed ? 0 : -inf;\n        \n        if (dp[col][r1][r2][placed] != -1) return dp[col][r1][r2][placed];\n        \n        long long maxSum = solve(col + 1, r1, r2, placed, board);\n        \n        for (int r = 0; r < n && !placed; ++r) {\n            if (r != r1 && r != r2) {\n                if (r1 == 100) {\n                    maxSum = max(maxSum, board[r][col] + solve(col + 1, r, r2, placed, board));\n                } else if (r2 == 100) {\n                    maxSum = max(maxSum, board[r][col] + solve(col + 1, r1, r, placed, board));\n                } else if(!placed) {\n                    maxSum = max(maxSum, board[r][col] + solve(col + 1, r1, r2, true, board));\n                }\n            }\n        }\n        \n        return dp[col][r1][r2][placed] = maxSum;\n    }\n\n    long long maximumValueSum(vector<vector<int>>& board) {\n        n = board.size();\n        m = board[0].size();\n        \n        memset(dp, -1, sizeof(dp));\n        \n        return solve(0, 100, 100, false, board);\n    }\n    /*\n    [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\n[[1,2,3],[4,5,6],[7,8,9]]\n[[1,1,1],[1,1,1],[1,1,1]]\n[[83,-5,-11],[-4,-82,51],[-37,-36,-84]]\n[[95,-90,-62,-94],[62,59,-21,46],[23,24,19,9],[-79,-12,91,16]]\n    98\n    245\n    */\n};\n",
    "submit_ts": "1723908181",
    "subm_id": "1359141651"
}