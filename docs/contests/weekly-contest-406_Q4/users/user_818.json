{
    "username": "guo-hao-rui",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h = 0, v = 0; // \u5206\u522b\u662f\u5f53\u524d\u6c34\u5e73\u548c\u5782\u76f4\u7684\u5207\u5272\u7ebf\u6307\u9488\n        long long totalCost = 0; // \u603b\u5f00\u9500\n        int hPieces = 1, vPieces = 1; // \u5f53\u524d\u6c34\u5e73\u548c\u5782\u76f4\u7684\u6bb5\u6570\n        \n        // \u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u9009\u62e9\u6700\u5c0f\u7684\u5207\u5272\u7ebf\n        while (h < horizontalCut.size() && v < verticalCut.size()) {\n            if (horizontalCut[h] >= verticalCut[v]) {\n                totalCost += (long long)horizontalCut[h] * vPieces;\n                hPieces++;\n                h++;\n            } else {\n                totalCost += (long long)verticalCut[v] * hPieces;\n                vPieces++;\n                v++;\n            }\n        }\n        \n        // \u5904\u7406\u5269\u4f59\u7684\u6c34\u5e73\u5207\u5272\u7ebf\n        while (h < horizontalCut.size()) {\n            totalCost += (long long)horizontalCut[h] * vPieces;\n            h++;\n        }\n        \n        // \u5904\u7406\u5269\u4f59\u7684\u5782\u76f4\u5207\u5272\u7ebf\n        while (v < verticalCut.size()) {\n            totalCost += (long long)verticalCut[v] * hPieces;\n            v++;\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720925566",
    "subm_id": "546440350"
}