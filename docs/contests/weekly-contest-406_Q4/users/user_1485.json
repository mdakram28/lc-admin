{
    "username": "udits0999",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(begin(horizontalCut), end(horizontalCut), greater<int>());\n        sort(begin(verticalCut), end(verticalCut), greater<int>());\n\n        int i = 0, j = 0;\n        long long HPieces = 1, VPieces = 1,  totalCost = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                totalCost += horizontalCut[i] * VPieces;\n                HPieces++,i++;\n            } else {\n                totalCost += verticalCut[j] * HPieces;\n                VPieces++, j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            totalCost += (horizontalCut[i] * VPieces);\n            HPieces++, i++;\n        }\n\n        while (j < verticalCut.size()) {\n            totalCost += (verticalCut[j] * HPieces);\n            VPieces++,j++;\n        }\n\n        return totalCost;\n    }\n};",
    "submit_ts": "1720925988",
    "subm_id": "1320272507"
}