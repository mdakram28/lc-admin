{
    "username": "Easton_01",
    "submission": "class Solution {\npublic:\n//     int fun1(vector<vector<int>>&pre, int ind,int mid  ){\n      \n//     }   \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n =  nums.size(); \n        \n//        vector<vector<int>>pre(n  , vector<int>(30, 0 )) ; \n//         for(int ind  = 0 ;ind<n;ind++){\n//             if(ind==0){\n//                 for(int i  = 0 ; i <30;i++){\n//                     if(nums[ind]&(1<<i)) {\n//                         pre[ind][i] =   1 ; \n//                     }\n//                 }\n//             }\n//             else{\n//                 for(int i  = 0 ; i <30;i++){\n//                     if(nums[ind]&(1<<i)) {\n//                         pre[ind][i] =   1 ; \n//                         pre[ind][i] +=  pre[ind-1][i] ; \n//                     }\n//                 }\n                \n//             }\n//         }\n//         long long ans  = 0 ; \n//         for(int ind = 0 ; ind<n;ind++){\n//              int low = 1 , high =  n-  ind ; \n//             int first =-1 , last = n-ind ; \n//             while(low<=high){\n//                 int mid =  low  +  (high-low)/2 ; \n//                 // int a  = fun1(pre, i ,  mid ) ; \n//                   vector<int>temp(30,0) ; \n//                 for(int i  = 0;i<30;i++){\n//                     temp[i] = pre[ind+mid-1 ][i] -  (ind-1>=0 ? pre[ind-1][i] : 0) ; \n            \n//                 }\n//             long long a = 0 ;\n//         for(int i  = 0 ; i <30;i++){\n//             if(temp[i]== mid){\n//                 a|=  (1<<i) ; \n//             }\n//         }\n     \n//                 if(a == k ){\n//                      first =  mid ; \n//                      high = mid-1 ; \n//                 }\n//                 else if(a > k )\n//                 {\n//                     low = mid+1 ; \n//                 }\n//                 else high =  mid-1 ; \n                \n//             }\n//             // cout<<i<<' '<<first<<endl; \n//             if(first!=-1){\n//                  low =  1 , high = n-ind ;\n//                 while(low<=high){\n//                      int mid =  low  +  (high-low)/2 ; \n//                       vector<int>temp(30,0) ; \n//                 for(int i  = 0;i<30;i++){\n//                     temp[i] = pre[ind+mid-1 ][i] -  (ind-1>=0 ? pre[ind-1][i] : 0) ; \n            \n//                 }\n//             long long a = 0 ;\n//         for(int i  = 0 ; i <30;i++){\n//             if(temp[i]== mid){\n//                 a|=  (1<<i) ; \n//             }\n//         }\n                    \n//                      if(a>=k){\n//                          last = mid ; \n//                          low =  mid+1 ;\n//                      }\n//                     else{\n//                        high = mid-1 ;  \n//                     }\n//                 }\n//                 ans+=   last - first+1 ; \n//             }\n//         }\n//         return ans ; \n        long long ans = 0;\n        map<long long, long long> prev;\n        for (int i = 0; i < n; i++) {\n            map<long long, long long> curr; \n            if (nums[i] == k) {\n                ans++ ;\n            }\n            curr[nums[i]] = 1;\n            for (auto it  : prev) {\n                int val =  it.first; \n                int f =  it.second ;  \n                long long temp = val & nums[i];\n                if (temp == k) {\n                    \n                    ans += f;\n                }\n                curr[temp] += f;\n            }\n            \n            prev = curr;\n        }\n        \n        \n        return ans;\n    }\n};",
    "submit_ts": "1720281538",
    "subm_id": "1311828904"
}