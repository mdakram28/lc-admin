{
    "username": "ashishsutar1210",
    "submission": "class Solution {\n    \n    \n    // int f(int i,int prev,vector<int>& nums,vector<vector<int>>& dp)\n    // {\n    //     if(i < 0)return 0;\n    //     if(dp[i][prev+1]!=-1)return dp[i][prev+1];\n    //     int ans = 0;\n    //     if(prev == -1)\n    //     {\n    //         ans = max(ans,f(i-1,i,k,nums)+1);\n    //     }\n    //     else {\n    //         if(nums[i] != nums[prev])\n    //         {\n    //             if(k)\n    //             {\n    //                 ans = max(ans,f(i-1,i,k-1,nums)+1);\n    //             }\n    //         }\n    //         else ans = max(ans,1 + f(i-1,i,k,nums));\n    //     }\n    //     ans = max(ans,f(i-1,prev,k,nums));\n    //     return dp[i][prev+1] = ans;\n    // }\npublic:\n    int maximumLength(vector<int>& arr, int k) {\n        int n = arr.size();\n    vector<vector<int>> dp(k + 1, vector<int>(3, 0));  // [max_length, current_length, element]\n    vector<set<int>> sets(k + 1);\n    vector<unordered_map<int, int>> counters(k + 1);\n\n    for (int i = 0; i < n; ++i) {\n        int prev = 0;\n        for (int j = 0; j <= k; ++j) {\n            int cur = max(prev + 1, max((dp[j][0] + 1) * (sets[j].count(arr[i]) > 0), counters[j][arr[i]] + 1));\n\n            prev = dp[j][0];\n            counters[j][arr[i]] = cur;\n\n            if (dp[j][0] < cur) {\n                dp[j] = {cur, 0, arr[i]};\n                sets[j].clear();\n            }\n\n            if (cur == dp[j][0]) {\n                sets[j].insert(arr[i]);\n            }\n        }\n    }\n\n    return dp[k][0];\n    }\n};",
    "submit_ts": "1717860327",
    "subm_id": "1281753739"
}