{
    "username": "Victor M",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        \n        int m = board.size();\n        int n = board[0].size();\n        \n        priority_queue<vector<int>> pq; \n        priority_queue < vector<int>, vector<vector<int>>, greater<vector<int>> > temp;\n        \n        for(int i=0; i<m; i++)\n        {\n            \n            for(int j=0; j<n; j++)\n            {\n                if(temp.size() < 3)\n                {\n                    temp.push({board[i][j], i, j});\n                }\n                else if(board[i][j] > temp.top()[0])\n                {\n                    temp.pop();\n                    temp.push({board[i][j], i, j});\n                }\n            }\n            \n            while(!temp.empty())\n            {\n                pq.push(temp.top());\n                temp.pop();\n            }\n        }\n        \n        \n        vector<vector<int>> vec;\n        while(!pq.empty())\n        {\n            vec.push_back(pq.top());\n            pq.pop();\n        }\n        \n        \n        long long ans = LLONG_MIN;\n        long long curr = 0;\n        int nV = vec.size();\n        \n        for(int i=0; i<nV; i++)\n        {\n            for(int j=i+1; j<nV; j++)\n            {\n                if(vec[i][1] == vec[j][1] || vec[i][2] == vec[j][2]) continue;\n                for(int k=j+1; k<nV; k++)\n                {\n                    if(vec[i][1] == vec[k][1] || vec[i][2] == vec[k][2] || vec[j][1] == vec[k][1] || vec[j][2] == vec[k][2]) continue;\n                    long long val = (long long)vec[i][0] + vec[j][0] + vec[k][0];\n                    ans = max(ans, val);\n                    break;\n                }\n            }\n        }\n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1723909083",
    "subm_id": "1359178919"
}