{
    "username": "meetpatel2220",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        TreeMap<Integer,Integer> map=new TreeMap<>();\n        int count=n-1;\n        int ans[]=new int[queries.length];\n\n        for(int i=0;i<n;i++)\n        {\n            map.put(i,i+1);\n        }\n        for(int i=0;i<queries.length;i++){\n            int start=queries[i][0];\n            int end=queries[i][1];\n         //   System.out.println(map.subMap(start,end).size()+\" \"+count);\n            var left=map.floorEntry(end-1);\n           // System.out.println(left.getKey()+\" \"+left.getValue());\n            if(left!=null && left.getKey()<start){\n                ans[i]=count;\n                continue;\n            }\n            count-= map.subMap(start,end).size();\n            map.subMap(start,end).clear();\n           map.put(start,end);\n           count+=1;\n           ans[i]=count;\n\n        }return ans;\n\n    }\n}",
    "submit_ts": "1722742707",
    "subm_id": "1343775310"
}