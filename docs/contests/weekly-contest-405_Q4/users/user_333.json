{
    "username": "Cocamo1337",
    "submission": "class Solution {\n    public class Trie{\n        public boolean isWord;\n        public int cost;\n        public Trie[] children;\n\n        public Trie(){\n            isWord = false;\n            cost = -1;\n            children = new Trie[26];\n        }\n\n        public void addChild(char c){\n            if (children[c - 'a'] != null) return;\n\n            children[c - 'a'] = new Trie();\n        }\n\n        public Trie getChild(char c){\n            return children[c - 'a'];\n        }\n\n        public void addWord(String word, int cost){\n            char[] wChars = word.toCharArray();\n\n\n            Trie curr = this;\n\n            for (int i = 0; i < wChars.length; i++){\n\n                char c = wChars[i];\n\n                curr.addChild(c);\n\n                curr = curr.getChild(c);\n            }\n\n            curr.isWord = true;\n\n            if (curr.cost == -1 || curr.cost > cost) curr.cost = cost;\n\n            return;\n        }\n    }\n    public int minimumCost(String target, String[] words, int[] costs) {\n        int len = target.length();\n        int[] dp = new int[len + 1];\n        Arrays.fill(dp, -1);\n        dp[len] = 0;\n        Trie wordCosts = new Trie();\n\n        for (int i = 0; i < words.length; i++){\n            wordCosts.addWord(words[i], costs[i]);\n        }\n\n        for (int i = len - 1; i > -1; i--){\n\n            Trie curr = wordCosts;\n\n            for (int j = i; j < len; j++){\n                char c = target.charAt(j);\n                if (curr.getChild(c) == null) break;\n\n                curr = curr.getChild(c);\n\n                if (curr.isWord && dp[j + 1] != -1){\n\n                    if (dp[i] == -1) dp[i] = curr.cost + dp[j + 1];\n                    else            dp[i] = Math.min(dp[i], curr.cost + dp[j + 1]);\n                }\n            }\n        }\n\n        return dp[0];\n\n    }\n}",
    "submit_ts": "1720321845",
    "subm_id": "1312333855"
}