{
    "username": "Ometek",
    "submission": "class Solution {\n    unordered_set<int> bits(int x) {\n        unordered_set<int> ans;\n        int i = 0;\n\n        while (x) { \n            if (x & 1) {\n                ans.insert(i);\n            }\n            i += 1;\n            x /= 2;\n        }\n\n        return ans;\n    }\n\n    long long solve(vector<int>& nums, int k) {\n        auto bks = bits(k);\n        vector<int> last_pos(32, -1);\n\n        long long ans = 0;\n\n        for (int i = 0; i < nums.size(); i++) {\n            auto bt = bits(nums[i]);\n\n            int last = i;\n            for (auto b : bt) {\n                if (bks.find(b) == bks.end()) {\n                    last = min(last, last_pos[b]);\n                }\n            }\n\n            ans += last + 1;\n\n            for (int b = 0; b < 32; b++) {\n                if (bt.find(b) == bt.end()) {\n                    last_pos[b] = i;\n                }\n            }\n        }\n\n        return ans;\n    }\n\n\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        auto bks = bits(k);\n\n        long long ans = 0;\n        vector<int> tmp = {};\n\n        for (auto x : nums) { \n            auto b = bits(x);   \n            bool split = false;\n\n            for (auto bb : bks) {\n                if (b.find(bb) == b.end())\n                    split = true;\n            }\n\n            if (split) {\n                ans += solve(tmp, k);\n                tmp = {};\n            }\n            else {\n                tmp.push_back(x);\n            }\n        }\n\n        ans += solve(tmp, k);\n        return ans;\n    }\n};",
    "submit_ts": "1720279241",
    "subm_id": "1311743354"
}