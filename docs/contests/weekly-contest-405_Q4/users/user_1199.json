{
    "username": "Patel_18",
    "submission": "class TrieNode {\npublic:\n    int cost;\n    vector<TrieNode*> chd;\n    TrieNode() : cost(INT_MAX), chd(26, nullptr) {}\n};\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i) {\n            TrieNode* node = root;\n            for (char c : words[i]) {\n                if (!node->chd[c - 'a']) node->chd[c - 'a'] = new TrieNode();\n                node = node->chd[c - 'a'];\n            }\n            node->cost = min(node->cost, costs[i]);\n        }\n        \n        int m = target.size();\n        vector<int> dp(m + 1, INT_MAX);\n        dp[0] = 0;\n        \n        for (int i = 0; i < m; ++i) {\n            if (dp[i] == INT_MAX) continue;\n            TrieNode* node = root;\n            for (int j = i; j < m; ++j) {\n                if (!node->chd[target[j] - 'a']) break;\n                node = node->chd[target[j] - 'a'];\n                if (node->cost != INT_MAX) {\n                    dp[j + 1] = min(dp[j + 1], dp[i] + node->cost);\n                }\n            }\n        }\n        \n        return dp[m] == INT_MAX ? -1 : dp[m];\n    }\n};",
    "submit_ts": "1720322469",
    "subm_id": "1312350765"
}