{
    "username": "user5279UC",
    "submission": "class Solution {\npublic:\n    typedef long long ll;\n   int mod = (int)(1e9 + 7);\n\n    int n2=400;\n    unordered_map<int, int>mp;\n    \n    int f(vector<vector<ll>>&pkpkc, int n){\n        int r=0;\n         for (ll it : pkpkc[n]) {\n            r = (r + it) % mod;\n        }\n        return r;\n    }\n    \n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        vector<vector<ll>>pkpkc(n+1,vector<ll>(n2+1));\n        ll res=0;\n        for(auto it : r){\n            mp[it[0]+1] = it[1];\n        }\n        \n        pkpkc[0][0]=1;\n        \n        \n        for(int i=1; i<n+1; i++){\n            for(int j=0; j<n2+1; j++){\n                 for (int z = 0; z < i; z++) {\n                    int p = j - z;\n                    if (p >= 0) {\n                        pkpkc[i][j] = (pkpkc[i][j] + pkpkc[i - 1][p]) % mod;\n                    }\n                }\n            }\n            if(mp.count(i)){\n                int ass = mp[i];\n                for(int j=0; j<n2+1; j++){\n                    if(j!=ass){\n                        pkpkc[i][j]=0;\n                    }\n               }\n            }\n            \n            \n            \n            \n        }\n        res = f(pkpkc, n);\n\n        return res;\n        \n    }\n};",
    "submit_ts": 1719071083.0
}