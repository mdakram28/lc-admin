{
    "username": "icmezfxi",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long ans = 0;\n        std::sort(horizontalCut.begin(), horizontalCut.end(), std::greater<>());\n        std::sort(verticalCut.begin(), verticalCut.end(), std::greater<>());\n        long long i = 0, j = 0;\n        while(i < horizontalCut.size() && j < verticalCut.size()){\n            if(horizontalCut[i] >= verticalCut[j]){\n                ans += (horizontalCut[i] * (j + 1));\n                i++;\n            }\n            else{\n                ans += (verticalCut[j] * (i + 1));\n                j++;\n            }\n        }\n        while(i < horizontalCut.size()){\n            ans += (horizontalCut[i] * n);\n            i++;\n        }\n        while(j < verticalCut.size()){\n            ans += (verticalCut[j] * m);\n            j++;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720926647",
    "subm_id": "1320292322"
}