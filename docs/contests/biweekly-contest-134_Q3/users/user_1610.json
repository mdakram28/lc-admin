{
    "username": "rahul9973",
    "submission": "class Solution {\npublic:\n \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n         int n = colors.size(); \n        int p = 0; \n \n        if (k == 1) { \n           \n            return n; \n        } \n \n        int c = 1; \n        int i = 1; \n        while (i < n + k - 1) { \n            int r = i; \n            int s = i - 1; \n \n   \n            if (r >= n) { \n                r -= n; \n            } \n            if (s >= n) { \n                s -= n; \n            } \n \n            if (colors[r] != colors[s]) { \n                ++c; \n            } else { \n                c = 1; \n            } \n \n      \n            if (c >= k) { \n                ++p; \n            } \n \n            ++i; \n        } \n \n        return p; \n    }\n};",
    "submit_ts": "1720279584",
    "subm_id": "1311757101"
}