{
    "username": "jeyan_s",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        \n        def MaxDist(A, N, need = True):\n\n            minsum = maxsum = A[0][0] + A[0][1]\n            mindiff = maxdiff = A[0][0] - A[0][1]\n            p1 = p2 = p3 = p4 = 0\n\n            for i in range(1,N):\n                sum = A[i][0] + A[i][1]\n                diff = A[i][0] - A[i][1]\n                if (sum < minsum):\n                    minsum = sum\n                    p1 = i\n                elif (sum > maxsum):\n                    maxsum = sum\n                    p2 = i\n                if (diff < mindiff):\n                    mindiff = diff\n                    p3 = i\n                elif (diff > maxdiff):\n                    maxdiff = diff\n                    p4 = i\n\n            maximum = max(maxsum - minsum, maxdiff - mindiff)\n            \n            if not need:\n                if maxsum - minsum >= maxdiff - mindiff:\n                    return (p1, p2)\n                else:\n                    return (p3, p4)\n\n            return maximum\n\n        n = len(points)\n\n        p1, p2 = MaxDist(points, n, False)\n        # print(p1, p2)\n        lst = []\n        for x in range(n):\n            if x != p1:\n                lst.append(points[x])\n                \n        # print(lst)\n        rslt = MaxDist(lst, n - 1)\n        lst = []\n        \n        for x in range(n):\n            if x != p2:\n                lst.append(points[x])\n                \n        # print(lst)\n        # print()\n        rslt = min(rslt, MaxDist(lst, n - 1))\n        return rslt\n"
}