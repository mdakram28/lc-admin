{
    "username": "abhishekyadav7102004",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int ans = 0;\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                ans += 1;\n            }\n        }\n\n        vector<int> shift(3, 0);\n        if (n % 2 == 1) {\n            int i = 0, j = m - 1;\n            while (i < j) {\n                int sum = grid[n / 2][i] + grid[n / 2][j];\n                shift[sum] ++;\n                i++;\n                j--;\n            }\n        }\n        if (m % 2 == 1) {\n            int i = 0, j = n - 1;\n            while (i < j) {\n                int sum = grid[i][m / 2] + grid[j][m / 2];\n                shift[sum] ++;\n                i++;\n                j--;\n            }\n        }\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                ans += shift[1];\n            } else {\n                ans += 2;\n            }\n        } else {\n            ans += shift[1];\n        }\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int topLeft = grid[i][j];\n                int bottomLeft = grid[n - 1 - i][j];\n                int topRight = grid[i][m - 1 - j];\n                int bottomRight = grid[n - 1 - i][m - 1 - j];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    ans += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n",
    "submit_ts": "1722700026",
    "subm_id": "1343229439"
}