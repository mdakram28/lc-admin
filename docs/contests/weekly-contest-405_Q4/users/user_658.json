{
    "username": "tonmoy1912",
    "submission": "#define ll long long\n\nclass Node{\n    public:\n    vector<Node *> arr;\n    ll cost;\n    Node(){\n        arr.resize(26,NULL);\n        cost=0;\n    }\n};\n\nclass Trie{\n    public:\n    Node *root;\n    Trie(){\n        root=new Node();\n    }\n    void insert(string &s,ll val){\n        Node *cur=root;\n        int n=s.size();\n        for(int i=0;i<n;i++){\n            int c=s[i]-'a';\n            if(!cur->arr[c]){\n                cur->arr[c]=new Node();\n            }\n            cur=cur->arr[c];\n        }\n        // cur->cost=val;\n        if(cur->cost){\n            cur->cost=min(cur->cost,val);\n        }\n        else{\n            cur->cost=val;\n        }\n    }\n};\n\nclass Solution {\n    \n    ll helper(string &s,int i,int n,Trie &t,vector<ll> &dp){\n        if(i>=n){\n            return 0;\n        }\n        if(dp[i]!=-1){\n            return dp[i];\n        }\n        int j=i;\n        ll ans=INT_MAX;\n        Node *cur=t.root;\n        while(j<n && cur!=NULL){\n            int c=s[j]-'a';\n            if(cur->arr[c]){\n                cur=cur->arr[c];\n                if(cur->cost){\n                    ll temp=cur->cost+helper(s,j+1,n,t,dp);\n                    ans=min(ans,temp);\n                }\n            }\n            else{\n                break;\n            }\n            j++;\n        }\n        return dp[i]=ans;\n    }\n    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie t;\n        int n=words.size();\n        for(int i=0;i<n;i++){\n            t.insert(words[i],costs[i]);\n        }\n        n=target.size();\n        vector<ll> dp(n,-1);\n        ll ans=helper(target,0,n,t,dp);\n        if(ans>=INT_MAX){\n            return -1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720322630",
    "subm_id": "1312355004"
}