{
    "username": "Akash_kataria",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> rowheap;\n        priority_queue<int> colheap;\n        for(int i = 0; i < m-1; i++) rowheap.push(horizontalCut[i]);\n        for(int i = 0; i < n-1; i++) colheap.push(verticalCut[i]);\n\n        long long rows = 1, cols = 1;\n        long long res = 0;\n        while(rows < m || cols < n){\n            int val1 = -1;\n            int val2 = -1;\n\n            if(!rowheap.empty()){\n                val1 = rowheap.top();\n            }\n            if(!colheap.empty()){\n                val2 = colheap.top();\n            }\n\n            if(val1 > val2){\n                rowheap.pop();\n                res += cols * val1;\n                rows++;\n            }\n            else{\n                colheap.pop();\n                res += rows * val2;\n                cols++;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926220",
    "subm_id": "1320279546"
}