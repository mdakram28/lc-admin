{
    "username": "wellheylc",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int ans = 0;\n        for (int i = 0; i < grid.length / 2; ++i) {\n            for (int j = 0; j < grid[0].length / 2; ++j) {\n                int tmp1 = grid[i][j];\n                int tmp2 = grid[i][grid[0].length - j - 1];\n                int tmp3 = grid[grid.length - i - 1][j];\n                int tmp4 = grid[grid.length - i - 1][grid[0].length -j - 1];\n                int sum = tmp1 + tmp2 + tmp3 + tmp4;\n                if (sum == 0 || sum == 4) {\n                    continue;\n                } else if (sum == 1 || sum == 3) {\n                    ans += 1;\n                } else {\n                    ans += 2;\n                }\n            }\n        }\n        if (grid.length % 2 == 1 && grid[0].length % 2 == 1) {\n            int key = 0;\n            int i_m = grid.length / 2, j_m = grid[0].length / 2;\n            ans += grid[i_m][j_m];\n            int t1 = 0, t2 = 0;\n            for (int j = 0; j < grid[0].length / 2; ++j) {\n                if (grid[i_m][j] == 1 && grid[i_m][grid[0].length -1-j] == 1) { ++t1; }\n            }\n            for (int i = 0; i < grid.length / 2; ++i) {\n                if (grid[i][j_m] == 1 && grid[grid.length - 1- i][j_m] == 1) { ++t2; }\n            }\n            for (int j = 0; j < grid[0].length / 2; ++j) {\n                if (grid[i_m][j] != grid[i_m][grid[0].length -1-j]) {\n                    ++ans;\n                    key = 1;\n                }\n            }\n            for (int i = 0; i < grid.length / 2; ++i) {\n                if (grid[i][j_m] != grid[grid.length -1-i][j_m]) {\n                    ++ans;\n                    key = 1;\n                }\n            }\n            int t =t1 +t2;\n            if (t % 2 == 1 && key == 0) {\n                ans += 2;\n            }\n\n        } else if (grid.length % 2 == 1 && grid[0].length % 2 == 0) {\n            int key = 0;\n            int i = grid.length / 2;\n            int t = 0;\n            for (int j = 0; j < grid[0].length / 2; ++j) {\n                if (grid[i][j] == 1 && grid[i][grid[0].length - 1 - j] == 1) {\n                    ++t;\n                }\n            }\n            for (int j = 0; j < grid[0].length / 2; ++j) {\n                if (grid[i][j] != grid[i][grid[0].length - 1- j]) {\n                    ++ans;\n                    key = 1;\n                }\n            }\n            if (t % 2 == 1 && key == 0) {\n                ans += 2;\n            }\n        } else if (grid.length % 2 == 0 && grid[0].length % 2 == 1) {\n            int key = 0;\n            int j = grid[0].length / 2;\n            int t = 0;\n            for (int i = 0; i < grid.length / 2; ++i) {\n                if (grid[i][j] == 1 && grid[grid.length - 1 -i][j] == 1) {\n                    ++t;\n                }\n            }\n            for (int i = 0; i < grid.length / 2; ++i) {\n                if (grid[i][j] != grid[grid.length - 1 -i][j]) {\n                    ++ans;\n                    key = 1;\n                }\n            }\n            if (t % 2 == 1 && key == 0) {\n                ans+=2;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722698789",
    "subm_id": "552272525"
}