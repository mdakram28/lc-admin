{
    "username": "truefuego",
    "submission": "class Solution {\n    int calc(vector<int>& nums) {\n        int ans = 0;\n        int n = nums.size();\n        for(int i = 0 ; i < n / 2 ; i++) {\n            if(nums[i] != nums[n-i-1]) {\n                ans++;\n            }\n        }\n        return ans;\n    }\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int total = 0;\n        int r = 0, c = 0;\n        int n = grid.size(), m = grid[0].size();\n        map<int,int> mp;\n        if(n&1 and m&1) {\n            total += grid[n/2][m/2];\n        }\n        if(n&1) {\n            for(int i = 0 ; i < m / 2 ; i++) {\n                mp[grid[n/2][i]+grid[n/2][m-i-1]]++;\n            }\n        }\n        if(m&1) {\n            for(int i = 0 ; i < n / 2 ; i++) {\n                mp[grid[i][m/2]+grid[n-i-1][m/2]]++;\n            }\n        }\n        if(mp[2]&1) {\n            total += mp[1] > 0 ? mp[1] : 2; \n        } \n        else {\n            total += mp[1];\n        }\n        for(int i = 0 ; i < n / 2 ; i++) {\n            for(int j = 0 ; j < m / 2 ; j++) {\n                int x = grid[i][j] + grid[n-1-i][j] + grid[i][m-1-j] + grid[n-1-i][m-1-j];\n                if(x != 0 and x != 4) {\n                    total += min(x,4-x);\n                }\n            }\n        }\n        return total;\n    }\n};",
    "submit_ts": "1722699897",
    "subm_id": "1343225616"
}