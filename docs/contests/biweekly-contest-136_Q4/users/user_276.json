{
    "username": "Mayawan",
    "submission": "class Solution {\npublic:\n    vector<vector<pair<int, int>>> adj;\n    vector<int> ans;\n\n    int dfs1(int u, int p) {\n        int mx = 0;\n        for (auto& [v, dp] : adj[u]) {\n            if (v == p) continue;\n            if (v % 2) dp = dfs1(v, u) + 1;\n            else dp = dfs1(v, u) + 2;\n            mx = max(mx, dp);\n        }\n\n        return mx;\n    }\n\n    void dfs2(int u, int p, int pv) {\n        ans[u] = pv;\n\n        int m = adj[u].size();\n        vector<int> pre(m);\n        pre[0] = max(pv, adj[u][0].second);\n        for (int i = 1; i < m; i++) {\n            pre[i] = max(pre[i - 1], adj[u][i].second);\n        }\n        vector<int> suf(m);\n        suf[m - 1] = max(pv, adj[u][m - 1].second);\n        for (int i = m - 2; i >= 0; i--) {\n            suf[i] = max(suf[i + 1], adj[u][i].second);\n        }\n        vector<int> mx(m);\n        for (int i = 0; i < m; i++) {\n            if (i) mx[i] = max(mx[i], pre[i - 1]);\n            if (i != m - 1) mx[i] = max(mx[i], suf[i + 1]);\n        }\n\n        for (int i = 0; i < m; i++) {\n            int v, dp;\n            tie(v, dp) = adj[u][i];\n            if (v == p) continue;\n            ans[u] = max(ans[u], dp);\n            if (u % 2) dfs2(v, u, mx[i] + 1);\n            else dfs2(v, u, mx[i] + 2);\n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        adj = vector<vector<pair<int, int>>>(n);\n        ans = vector<int>(n);\n        \n        for (auto& e : edges) {\n            adj[e[0]].push_back({e[1], 0});\n            adj[e[1]].push_back({e[0], 0});\n        }\n\n        dfs1(0, -1);\n        dfs2(0, -1, 0);\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699861",
    "subm_id": "1343224613"
}