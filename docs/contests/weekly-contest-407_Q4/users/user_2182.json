{
    "username": "tenya_00",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        if (n == 1) {\n            return abs(target[0] - nums[0]);\n        }\n        \n        vector<long long> diff(n);\n        for (int i = 0; i < n; ++i) {\n            diff[i] = static_cast<long long>(target[i]) - static_cast<long long>(nums[i]);\n        }\n        \n        long long tot = 0;\n        long long curr = 0;\n        size_t i = 0;\n        if (n == 1) {\n            return diff[0];\n        }\n        while (i < n) {\n            if (!(i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0))) {\n                tot += abs(diff[i]);\n                curr = diff[i];\n            } else {\n                long long temp = abs(diff[i]) - abs(curr);\n                if (temp > 0) {\n                    tot += temp;\n                }\n                curr = diff[i];\n            }\n            ++i;\n        }\n        \n        return tot;\n    }\n};",
    "submit_ts": "1721533785",
    "subm_id": "1328016596"
}