{
    "username": "deb_ugger",
    "submission": "typedef pair<int, int> PII;\nclass Solution {\n    const int MaxSize = 100010;\n    vector<int> merge(int l1, int l2, int r1, int r2) {\n        if (l2 > r1) return {2, l1, r1, l2, r2};\n        if (l1 > r2) return {2, l2, r2, l1, r1};\n        if (l2 <= l1 && r2 >= r1) return {1, l2, r2};\n        if (l1 <= l2 && r1 >= r2) return {1, l1, r1};\n        if (l2 <= r1) return {1, l1, r2};\n        return {1, l2, r1};\n    }\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> arr0(MaxSize); // \u4fee\u65390\u6b21\u80fd\u5f97\u5230\u7684\u503c\u7684\u6b21\u6570\n        vector<int> arr1(MaxSize); // \u4fee\u65391\u6b21\n        for (int i = 0; i < n / 2; i++) {\n            int v = abs(nums[i] - nums[n - i - 1]);\n            int x = nums[i], y = nums[n - i - 1];\n            arr0[v]++;\n            int l1 = k >= y ? 0 : min(y, abs(y - k)), r1 = max(y, abs(y - k));\n            int l2 = k >= x ? 0 : min(x, abs(x - k)), r2 = max(x, abs(x - k));\n            vector<int> ret = merge(l1, l2, r1, r2);\n            // [ret[1], ret[2]]\u90fd\u52a0\n            for (int i = 0; i < ret[0]; i++) {\n                arr1[ret[1 + i * 2]]++, arr1[ret[1 + i * 2 + 1] + 1]--;\n                if (v >= ret[1 + i * 2] && v <= ret[1 + i * 2 + 1]) arr1[v]--, arr1[v + 1]++;\n            }\n            \n        }\n        for (int i = 1; i < MaxSize; i++) arr1[i] += arr1[i - 1]; // \u524d\u7f00\u548c\n        int ans = 2 * n;\n        for (int i = 0; i < MaxSize; i++) {\n            ans = min(ans, arr1[i] + (n / 2 - arr1[i] - arr0[i]) * 2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721490177",
    "subm_id": "548321889"
}