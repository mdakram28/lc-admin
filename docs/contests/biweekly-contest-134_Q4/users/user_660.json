{
    "username": "sen-xm",
    "submission": "class Solution {\n    public long countSubarrays(int[] nums, int k) {\n        long res = 0l;\n        int n = nums.length;\n        int[][] sum = new int[32][n];\n        Map<Integer, Integer> pos0 = new HashMap<>();\n        int preSum = nums[0];\n        for(int i = 0; i < n; i++){\n            \n            for(int j = 0; j < 32; j++){\n                if(((nums[i] >> j) & 1) == 0){\n                    pos0.put(j, i);\n                }\n            }\n            \n            int left = 0;\n            int right = i;\n            for(int j = 0; j < 32; j++){\n                int target = (k >> j) & 1;\n                if(target == 0){\n                    if(!pos0.containsKey(j)){\n                        right = Math.min(right, -1);\n                    } else{\n                        right = Math.min(right, pos0.get(j));\n                    }\n                } else {\n                    if(!pos0.containsKey(j)){\n                        left = Math.max(left, 0);\n                    } else {\n                        left = Math.max(left, pos0.get(j) + 1);\n                    }\n                }\n            }\n            if(left <= right){\n                res += right - left + 1;\n            }\n            \n            // preSum = preSum & nums[i];\n            // for(int j = 0; j < 32; j++){\n            //     sum[j][i] = (preSum >> j) & 1;\n            // }\n            \n            \n        }\n        \n        return res;\n    }\n}",
    "submit_ts": "1720279839",
    "subm_id": "544569264"
}