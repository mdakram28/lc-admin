{
    "username": "dLuxHu",
    "submission": "object Solution {\n  def minimumOperations(nums: Array[Int], target: Array[Int]): Long = {\n    val diff = nums.zip(target).map { case (a, b) => a - b }\n    val steps = Array.ofDim[Int](diff.length)\n    steps(0) = diff(0)\n    for (i <- 1 until diff.length) steps(i) = diff(i) - diff(i-1)\n    val (sumPositive, sumNegative) = steps.foldLeft((0L, 0L)) {\n      case ((sumP, sumN), value) =>\n        if (value > 0) (sumP + value, sumN)\n        else (sumP, sumN - value)\n    }\n    Math.max(sumPositive, sumNegative)\n  }\n}",
    "submit_ts": "1721533320",
    "subm_id": "1328006330"
}