{
    "username": "qb_2008",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        deque<pair<int, int>> stack;\n        int res = 0;\n        for (int i = s.size() - 1; i >= 0; i--) {\n            int cur_one = 0;\n            int cur_zero = 0;\n            if (s[i] == '1')  {\n                res++;\n                cur_one = 1;\n            } else {\n                cur_zero = 1;\n            }\n            for (int j = stack.size() - 1; j >= 0; j--) {\n                if (stack[j].first == 0) {\n                    if ((cur_zero + 1) * (cur_zero + 1) <= cur_one) {\n                        res++;\n                    }\n                    cur_zero++;\n                    if (cur_zero * cur_zero > s.size() - i) {\n                        break;\n                    }\n                } else {\n                    int new_one = stack[j].second;\n                    int need_one = cur_zero * cur_zero - cur_one;\n                    if (need_one <= 0) {\n                        res += new_one;\n                    } else if (need_one <= new_one) {\n                        res += new_one - need_one + 1;\n                    }\n                    cur_one += new_one;\n                }\n            }\n            if (!stack.empty() && s[i] == '1' && stack.back().first == 1) {\n                stack.back().second++;\n            } else {\n                stack.push_back(make_pair(s[i] - '0', 1));\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722136654",
    "subm_id": "1335741097"
}