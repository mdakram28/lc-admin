{
    "username": "218r1a04g9",
    "submission": "using System;\nusing System.Collections.Generic;\n\npublic class Solution {\n    public int MaximumLength(int[] nums, int k) {\n        int size = nums.Length;\n        int[][] lengths = new int[size][];\n        for (int i = 0; i < size; i++) {\n            lengths[i] = new int[k + 1];\n            for (int j = 0; j <= k; j++) {\n                lengths[i][j] = 1;\n            }\n        }\n\n        int max_length = 1;\n        int[] max_lengths = new int[k + 1];\n        List<Dictionary<int, int>> num_to_lengths_map = new List<Dictionary<int, int>>();\n        for (int i = 0; i <= k; i++) {\n            num_to_lengths_map.Add(new Dictionary<int, int>());\n        }\n        \n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j <= k; j++) {\n                for (int l = 0; l < j; l++) {\n                    lengths[i][j] = Math.Max(lengths[i][j], 1 + max_lengths[l]);\n                }\n                \n                if (num_to_lengths_map[j].ContainsKey(nums[i])) {\n                    lengths[i][j] = Math.Max(lengths[i][j], 1 + num_to_lengths_map[j][nums[i]]);\n                }\n                \n                max_length = Math.Max(max_length, lengths[i][j]);\n            }\n            \n            for (int j = 0; j <= k; j++) {\n                max_lengths[j] = Math.Max(max_lengths[j], lengths[i][j]);\n                if (!num_to_lengths_map[j].ContainsKey(nums[i])) {\n                    num_to_lengths_map[j].Add(nums[i], lengths[i][j]);\n                } else {\n                    num_to_lengths_map[j][nums[i]] = Math.Max(num_to_lengths_map[j][nums[i]], lengths[i][j]);\n                }\n            }\n        }\n        \n        return max_length;\n    }\n}\n",
    "submit_ts": 1717862031.0
}