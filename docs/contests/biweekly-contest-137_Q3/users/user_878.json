{
    "username": "lucasschnee2",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        '''\n        we brute force the rows 3 times\n        \n        we get the three highest values in each row\n        \n        \n        row1 r1 r2 r3\n        \n        row2 rr1 rr2 rr3\n        \n        row3 rrr1 rrr2 rrr3\n        \n        greedily take the maximum \n        \n        \n        \n        brute force on two rows?\n        \n\n        we start by just getting the three largest numbers in every row\n        \n        \n        \n        \n        '''\n        M, N = len(board), len(board[0])\n        INF = 10 ** 20\n        \n        \n        arr = []\n        \n        \n        for i in range(M):\n            row = []\n            for j in range(N):\n                row.append((board[i][j], j))\n                \n            row.sort(key=lambda x: (-x[0], x[1]))\n            row[:] = row[:3]\n            \n            arr.append(row)\n            \n            \n        best = -INF\n        for i in range(M):\n            row = arr[i]\n            for j in range(i+1, M):\n                row2 = arr[j]\n                for k in range(j + 1, M):\n                    row3 = arr[k]\n                    \n                    for xx, yy in row:\n                        for xxx, yyy in row2:\n                            if yy == yyy:\n                                continue\n                            for x, y in row3:\n                                if yy == y or yyy == y:\n                                    continue\n                                if x + xx + xxx > best:\n                                    best = x + xx + xxx\n                                    \n                                \n        return best\n                    \n            \n  ",
    "submit_ts": "1723907287",
    "subm_id": "1359100013"
}