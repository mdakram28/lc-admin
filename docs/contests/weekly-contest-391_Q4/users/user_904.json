{
    "username": "midnightsimon",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        \n        vector<int> left_sums_min(n, INT_MAX);\n        vector<int> left_diffs_min(n, INT_MAX);\n        vector<int> left_sums_max(n, INT_MIN);\n        vector<int> left_diffs_max(n, INT_MIN);\n        int mn_sum = INT_MAX;\n        int mx_sum = INT_MIN;\n        int mn_diff = INT_MAX;\n        int mx_diff = INT_MIN;        \n        for(int i = 0; i < n; i++) {\n            if(i > 0) {\n                left_sums_min[i] = mn_sum;\n                left_diffs_min[i] = mn_diff;\n                left_sums_max[i] = mx_sum;\n                left_diffs_max[i] = mx_diff;  \n            }\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            mn_sum = min(mn_sum, sum);\n            mx_sum = max(mx_sum, sum);\n            mn_diff = min(mn_diff, diff);\n            mx_diff = max(mx_diff, diff);\n        }\n        \n        mn_sum = INT_MAX;\n        mx_sum = INT_MIN;\n        mn_diff = INT_MAX;\n        mx_diff = INT_MIN;   \n        vector<int> right_sums_min(n, INT_MAX);\n        vector<int> right_diffs_min(n, INT_MAX);\n        vector<int> right_sums_max(n, INT_MIN);\n        vector<int> right_diffs_max(n, INT_MIN);\n        for(int i = n - 1; i >= 0; i--) {\n            if(i < n - 1) {\n                right_sums_min[i] = mn_sum;\n                right_diffs_min[i] = mn_diff;\n                right_sums_max[i] = mx_sum;\n                right_diffs_max[i] = mx_diff;\n            }\n            int sum = points[i][0] + points[i][1];\n            int diff = points[i][0] - points[i][1];\n            mn_sum = min(mn_sum, sum);\n            mx_sum = max(mx_sum, sum);\n            mn_diff = min(mn_diff, diff);\n            mx_diff = max(mx_diff, diff);\n        }\n        int ans = INT_MAX;\n        for(int i = 0; i < n; i++) {\n            \n            long long best_mx_sum = max(right_sums_max[i], left_sums_max[i]);\n            long long best_mn_sum = min(right_sums_min[i], left_sums_min[i]);\n            long long best_mx_diff = max(right_diffs_max[i], left_diffs_max[i]);\n            long long best_mn_diff = min(right_diffs_min[i], left_diffs_min[i]);\n            \n            \n            int best = max(best_mx_sum - best_mn_sum, best_mx_diff - best_mn_diff);\n            // cout << best_mx_sum << \":\" << best_mn_sum << \"\\t\";\n            // cout << best_mx_diff << \":\" << best_mn_diff << \"\\t\\t\";\n            // cout << best << endl;\n            ans = min(ans, best);\n        }\n        \n        \n        \n        return ans;\n    }\n};"
}