{
    "username": "wanghaocheng",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int start = 0, end = 1, n = colors.size(), result = 0;\n        while (end < n) {\n            while (end < n && colors[end] != colors[end - 1]) ++end;\n            \n            result += max(0, end - start - k + 1);\n            start = end;\n            end = start + 1;\n        }\n        \n        if (colors.front() == colors.back())\n            return result;\n        \n        int len = 1;\n        while (len < n && colors[len - 1] != colors[len]) ++len;\n        if (len == n) {\n            return result + k - 1;\n        }\n        \n        int rlen = 1;\n        while (rlen < n && colors[n - 1 - rlen] != colors[n - rlen]) ++rlen;\n        \n        if (len + rlen >= k) {\n            result += min(len, k - 1) - max(1, k - rlen) + 1;\n        }\n        \n        return result;\n    }\n};",
    "submit_ts": "1720276966",
    "subm_id": "544553550"
}