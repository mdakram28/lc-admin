{
    "username": "summerdaway",
    "submission": "#define maxn 111111\nint n, f[maxn], g[maxn];\nvector<int> a[maxn];\nclass Solution {\npublic:\n    void dfs(int x, int fa) {\n        for (int y: a[x]){\n            if (y == fa) continue;\n            dfs(y, x);\n            f[x] = max(f[x], f[y] + 2-(y&1));\n        }\n        return;\n    }\n\n    void dfs1(int x, int fa) {\n        int mx1 = 0, mx2 = 0;\n        for (int y: a[x]) {\n            if (y == fa) continue;\n            if (f[y]+2-(y&1) > mx1) {\n                mx2 = mx1;\n                mx1 = f[y]+2-(y&1);\n            } else {\n                mx2 = max(mx2, f[y]+2-(y&1));\n            }\n        }\n        for (int y: a[x]) {\n            if (y == fa) continue;\n            if (f[y]+2-(y&1) == mx1) {\n                g[y] = mx2 + 2-(x&1);\n            } else {\n                g[y] = mx1 + 2-(x&1);\n            }\n            g[y] = max(g[y], g[x] + 2-(x&1));\n        }\n        for (int y: a[x]) {\n            if (y != fa) dfs1(y, x);\n        }\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        n = edges.size()+1;\n        for (int i = 0; i < n; ++i){\n            a[i].clear();\n        }\n        for (auto e: edges) {\n            a[e[0]].push_back(e[1]);\n            a[e[1]].push_back(e[0]);\n        }\n        memset(f, 0, sizeof(f));\n        memset(g, 0, sizeof(g));\n        dfs(0, -1);\n        dfs1(0, -1);\n        vector<int> ret(n, 0);\n        for (int i = 0; i < n; ++i) {\n            ret[i] = max(f[i], g[i]);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1722697776",
    "subm_id": "552267745"
}