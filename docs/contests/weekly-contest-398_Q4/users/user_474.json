{
    "username": "deep_patel23",
    "submission": "class Solution {\n    Map<String, Integer> memo = new HashMap<>();\n    public int ways(int k, int curr, int jump, boolean op1) {\n        if (curr > k+1) {\n            return 0;\n        }\n        String key = curr + \"_\" + jump + \"_\" + (op1 ? 1 : 0);\n        if (memo.containsKey(key)) {\n            return memo.get(key);\n        }\n        int ans = 0;\n        if (curr == k) {\n            ans++;\n        }\n        if (op1 == false) {\n            ans += ways(k, curr-1, jump, true);\n        }\n        ans += ways(k, curr+ (int)Math.pow(2, jump), jump+1, false);\n        memo.put(key, ans);\n        return ans;\n    }\n    \n    public int waysToReachStair(int k) {\n        return ways(k, 1, 0, false);\n    }\n}",
    "submit_ts": "1716088382",
    "subm_id": "1261812345"
}