{
    "username": "pranay11592",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int sz = nums.length;\n        int[] diff = new int[sz];\n        int min = 0;\n        for (int i = 0; i < sz; i++) {\n            diff[i] = nums[i] - target[i];\n            min = Math.min(min, diff[i]);\n            // System.out.println(diff[i]);\n        }\n        // for (int i = 0; i < sz; i++) {\n        //     diff[i] += ((-1) * min);\n        // }\n        long ans =0;\n        int c = 0;\n        for (int i : diff) {\n            if (c < i && c >= 0) {\n                ans += (long)(i - c);\n                // System.out.println(ans);\n            } else if (c > i && c <= 0) {\n                ans += (long)(Math.abs(i - c));\n            } else if ( (i >= 0 && c < 0) || (i < 0 && c >= 0) ) {\n                ans +=  (long)(Math.abs(i));\n            }\n            c = i;\n        }\n        return ans;\n\n    }\n}\n// 3 2 1 -1 -2 3   3 1 2  2 0 1  1 -1 0\n// 0 1 2 3 \n\n/*\n3 5 1 2\n4 6 2 4\n\n1 1 1 2\n1     \n1 3 2\n2 1 4\n1 -2 2\n\n*/",
    "submit_ts": "1721532484",
    "subm_id": "1327986926"
}