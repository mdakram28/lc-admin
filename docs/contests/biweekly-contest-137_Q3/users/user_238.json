{
    "username": "Manan Rathod",
    "submission": "class Solution:\n    def maximumValueSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        x = []\n        y = []\n        for i in range(n):\n            mx = -10 ** 18\n            for j in range(m):\n                c = grid[i][j]\n                mx = max(mx, c)\n            x.append([mx, i])\n        for j in range(m):\n            mx = -10 ** 18\n            for i in range(n):\n                c = grid[i][j]\n                mx = max(mx, c)\n            y.append([mx, j])\n        x.sort(reverse = True)\n        y.sort(reverse = True)\n        ans = -10 ** 18\n        while len(x) > 7:\n            x.pop()\n        while len(y) > 7:\n            y.pop()\n        nx = []\n        ny = []\n        for _, idx in x:\n            nx.append(idx)\n        for _, idx in y:\n            ny.append(idx)\n        xx = list(permutations(nx, 3))\n        yy = list(permutations(ny, 3))\n        for i1, i2, i3 in xx:\n            for j1, j2, j3 in yy:\n                ans = max(ans, grid[i1][j1] + grid[i2][j2] + grid[i3][j3])\n                ans = max(ans, grid[i1][j1] + grid[i2][j3] + grid[i3][j2])\n                ans = max(ans, grid[i1][j2] + grid[i2][j1] + grid[i3][j3])\n                ans = max(ans, grid[i1][j2] + grid[i2][j3] + grid[i3][j1])\n                ans = max(ans, grid[i1][j3] + grid[i2][j1] + grid[i3][j2])\n                ans = max(ans, grid[i1][j3] + grid[i2][j2] + grid[i3][j1])\n        return ans",
    "submit_ts": "1723908043",
    "subm_id": "1359135682"
}