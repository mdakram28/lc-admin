{
    "username": "odinson776",
    "submission": "class Solution {\n    func numberOfAlternatingGroups(_ colors: [Int], _ k: Int) -> Int {\n        var numGroups = 1\n        var alt = true\n        var lastNonAltIndex = -1\n        let len = colors.count\n\n\n        for i in 0..<(k - 1) {\n            if colors[i] == colors[i + 1] {\n                alt = false\n                numGroups = 0\n                lastNonAltIndex = i\n                continue\n            }\n        }\n\n  \n        for j in 1..<len {\n            if alt && colors[(k - 2 + j) % len] != colors[(k + j - 1) % len] {\n                numGroups += 1\n            } else if alt && colors[(k - 2 + j) % len] == colors[(k + j - 1) % len] {\n                alt = false\n                lastNonAltIndex = k + j - 2\n            } else if !alt && j <= lastNonAltIndex {\n                if colors[(k - 2 + j) % len] == colors[(k + j - 1) % len] {\n                    lastNonAltIndex = k + j - 2\n                }\n                continue\n            } else if !alt && j > lastNonAltIndex {\n                if colors[(k - 2 + j) % len] != colors[(k + j - 1) % len] {\n                    numGroups += 1\n                    alt = true\n                } else {\n                    lastNonAltIndex = k - 2 + j\n                    alt = false\n                }\n            }\n        }\n        return numGroups\n    }\n}\n",
    "submit_ts": "1720281370",
    "subm_id": "1311822675"
}