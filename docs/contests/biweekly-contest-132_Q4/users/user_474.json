{
    "username": "himeshkumaranant",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int K) {\n        int n = nums.size();\n        \n        /*\n        map<int, vector<int>> ind;\n        for (int i=0; i<n; ++i) {\n            if (ind.find(nums[i]) == ind.end()) ind[nums[i]] = vector<int>();\n            ind[nums[i]].push_back(i);\n        }\n        */\n\n        //vector<vector<int>> dp(K+1, vector<int>(n));\n        //vector<vector<int>> pref(K+1, vector<int>(n, 0));\n        vector<int> pref(n, 0);\n        vector<int> dp(n);\n        for (int i=0; i<n; ++i) {\n            dp[i] = 1;\n            for (int j=0; j<i; ++j) dp[i] += (nums[j] == nums[i]);\n            \n            if (i && dp[i] > dp[pref[i-1]]) pref[i] = i;\n            else if (i) pref[i] = pref[i-1];\n        }\n        \n        vector<int> new_pref(n, 0);\n        vector<int> new_dp(n);\n        map<int, int> closest;\n        for (int k=1; k<=K; ++k) {\n            for (int i=0; i<n; ++i) {\n                //dp[k][i] = 1;\n                \n                /*\n                for (int j=0; j<i; ++j) {\n                    //dp[k][i] = max(dp[k][i], dp[k-1][j]+1);\n                    if (nums[j] == nums[i]) dp[k][i] = max(dp[k][i], 1 + dp[k][j]);\n                    else dp[k][i] = max(dp[k][i], 1+dp[k-1][j]);\n                }\n                */\n                new_dp[i] = 1;\n                if (i)    \n                    new_dp[i] = 1 + dp[pref[i-1]];\n                \n                /*\n                vector<int> v = ind[nums[i]];\n                int temp = lower_bound(v.begin(), v.end(), i) - v.begin();\n                if (temp) new_dp[i] = max(new_dp[i], 1 + new_dp[v[temp-1]]);\n                */\n                if (closest.find(nums[i]) != closest.end()) new_dp[i] = max(new_dp[i], 1 + new_dp[closest[nums[i]]]);\n                \n                if (i && new_dp[i] > new_dp[new_pref[i-1]]) new_pref[i] = i;\n                else if (i) new_pref[i] = new_pref[i-1];\n                \n                closest[nums[i]] = i;\n            }\n            closest.clear();\n            pref = new_pref;\n            dp = new_dp;\n        }\n        \n        return *max_element(dp.begin(), dp.end());\n    }\n};",
    "submit_ts": 1717861450.0
}