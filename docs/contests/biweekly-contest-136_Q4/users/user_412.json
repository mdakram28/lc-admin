{
    "username": "Nandy_Tragic",
    "submission": "class Solution {\npublic:\n    \n    vector<vector<int>>graph;\n    vector<int>subtree;\n    vector<int>dp;\n    \n    const int INF = -100000000;\n    \n    int get(int val){\n        if(val % 2) return 1;\n        else return 2;\n    }\n    \n    void precompute(int u, int p){\n        int child = 0;\n        for(int v : graph[u]){\n            if(v == p) continue;\n            precompute(v, u);\n            int curr = get(v) + subtree[v];\n            child = max(child, curr);\n        }\n        subtree[u] = child;\n    }\n    \n    void dfs(int u, int p, int partial){\n        dp[u] = subtree[u];\n        dp[u] = max(dp[u], partial);\n        vector<int>prefix,suffix;\n        for(int v : graph[u]){\n            if(v == p) continue;\n            prefix.push_back(subtree[v] + get(v));\n            suffix.push_back(subtree[v] + get(v));\n        }\n        \n        int sz = prefix.size();\n        if(sz > 0){\n            for(int i=1;i<sz;i++){\n                prefix[i] = max(prefix[i-1], prefix[i]);\n            }\n            for(int i=sz-2;i>=0;i--){\n                suffix[i] = max(suffix[i+1], suffix[i]);\n            }\n            int c = 0;\n            for(int v : graph[u]){\n                if(v == p) continue;\n                int l = (c > 0 ? prefix[c-1] : INF);\n                int r = (c + 1 < sz ? suffix[c+1] : INF);\n                int currMax = max({l, r, partial});\n                dfs(v, u, currMax + get(u));\n                c++;\n            }\n        }\n    }\n    \n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size();\n        n++;\n        \n        graph.clear();\n        subtree.clear();\n        dp.clear();\n        \n        graph = vector<vector<int>>(n);\n        subtree = vector<int>(n, 0);\n        dp = vector<int>(n, 0);\n        \n        for(int i=0;i<n-1;i++){\n            int u = edges[i][0];\n            int v = edges[i][1];\n            graph[u].push_back(v);\n            graph[v].push_back(u);\n        }\n        \n        precompute(0, -1);\n        \n        dfs(0, -1, 0);\n        \n        return dp;\n        \n    }\n};",
    "submit_ts": "1722697533",
    "subm_id": "1343149965"
}