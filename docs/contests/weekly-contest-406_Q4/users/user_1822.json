{
    "username": "nayanverma14",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long ans=0;\n        long hor=1;\n        long ver=1;\n        m--;\n        n--;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        int i=m-1;\n        int j=n-1;\n        while(i>=0 && j>=0)\n        {\n            int type=0;\n            int cost=0;\n            if(horizontalCut[i]>=verticalCut[j])\n            {\n                type=1;\n                cost=horizontalCut[i];\n                i--;\n            }\n            else\n            {\n                type=2;\n                cost=verticalCut[j];\n                j--;\n            }\n            // System.out.println(type+\" \"+cost);\n            if(type==1)\n            {\n                ans+=(hor*cost);\n                ver++;\n            }\n            else\n            {\n                ans+=(ver*cost);\n                hor++;\n            }\n        }\n        while(i>=0)\n        {\n            int type=1;\n            int cost=horizontalCut[i];\n            // System.out.println(type+\" \"+cost);\n            ans+=(hor*cost);\n            ver++;\n            i--;\n        }\n        while(j>=0)\n        {\n            int type=2;\n            int cost=verticalCut[j];\n            // System.out.println(type+\" \"+cost);\n            ans+=(ver*cost);\n            hor++;\n            j--;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720926174",
    "subm_id": "1320278167"
}