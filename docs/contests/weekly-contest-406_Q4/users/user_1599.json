{
    "username": "garvit_tibrewal",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<int> hori;\n        priority_queue<int> verti;\n        for(auto i:horizontalCut){\n            hori.push(i);\n        }\n        for(auto i:verticalCut){\n            verti.push(i);\n        }\n\n        int h = 1;\n        int v = 1;\n        long long totalCost = 0;\n        \n        \n        while (!hori.empty() && !verti.empty()) {\n            if (hori.top() > verti.top()) {\n                totalCost += long(hori.top()) * long(v);\n                \n                h++;\n                hori.pop();\n            } else {\n                totalCost += long(verti.top()) * long(h);\n                \n                v++;\n                verti.pop();\n            }\n        }\n        \n        \n        while (!hori.empty()) {\n            totalCost += long(hori.top()) * long(v);\n            \n            h++;\n            hori.pop();\n        }\n        \n        \n        while (!verti.empty()) {\n            totalCost += long(verti.top()) * long(h);\n            \n            v++;\n            verti.pop();\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926348",
    "subm_id": "1320283529"
}