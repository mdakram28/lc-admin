{
    "username": "shekhar125",
    "submission": "struct Node\n{\n    Node *links[26];\n    bool fg;\n    int cost=1e9;\n\n    Node *get(char ch)\n    {\n        return (links[ch-'a']);\n    }\n\n   bool containskey(char ch)\n    {\n        return (links[ch-'a']!=NULL);\n    }\n\n    void put(char ch,Node *node)\n    {\n        links[ch-'a']=node;\n    }\n\n};\n\nclass Trie\n{\n    private: Node *root;\n\n    public:\n    Trie()\n    {\n        root=new Node();\n    }\n\n    void insert(string s,int val)\n    {\n        Node *node=root;\n        int n=s.size();\n        for(int i=0;i<n;++i)\n        {\n            if(!(node->containskey(s[i])))\n            {\n                node->put(s[i],new Node());\n            }\n            node=node->get(s[i]);\n        }\n        node->fg=true;\n        node->cost=min(node->cost,val);\n    }\n\n    int search(string &s,int ind,vector<int> &dp)\n    {\n        if(dp[ind]!=-1) return dp[ind];\n        int n=s.size();\n        //if(ind==n-1) return 0;\n        Node *t=root;\n        \n        int ans=1e9;\n        //cout<<ind<<endl;\n        for(int j=ind;j<n;++j)\n        {\n            if(j!=ind && t->fg==1)\n            {\n               //cout<<s[j]<<endl;\n                ans=min(ans,search(s,j,dp)+t->cost);\n                 \n\n            }\n            if(t->links[s[j]-'a']==NULL) return dp[ind]=ans;\n            t=t->links[s[j]-'a'];\n            \n        }\n        if(t->fg==0) return dp[ind]=ans;\n        //cout<<t->cost<<endl;\n        return dp[ind]=min(t->cost,ans);\n    }\n\n\n\n};\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& w, vector<int>& costs) {\n        Trie tr;\n        for(int i=0;i<w.size();++i)\n        {\n            tr.insert(w[i],costs[i]);\n        }\n        int n=target.size();\n        vector<int> dp(n+1,-1);\n        int ans=tr.search(target,0,dp);\n        \n        if(ans>=1e9) return -1;\n        else\n            return ans;\n    }\n};",
    "submit_ts": "1720324678",
    "subm_id": "1312405351"
}