{
    "username": "_krat_",
    "submission": "static const int fast = []{\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(0);\n    std::cout.tie(0);\n\n    return 0;\n}();\n\n#define ll long long\n\nstatic int MOD = 1e9 + 7;\nstatic int maxi = 400;\n\n\nclass Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& arr) {\n        unordered_map<int, int> mpp;\n        \n        for(auto& req : arr) \n        {\n            mpp[req[0] + 1] = req[1];\n        }\n\n        vector<vector<ll>> cnt(n + 1, vector<ll>(maxi + 1, 0));\n        cnt[0][0] = 1;\n\n        for(int l = 1; l <= n; l++) \n        {\n            for(int inv = 0; inv <= maxi; inv++) \n            {\n                for(int npos = 0; npos < l; npos++) \n                {\n                    int prev = inv - npos;\n                    \n                    if(prev >= 0) \n                    {\n                        cnt[l][inv] = (cnt[l][inv] + cnt[l - 1][prev]) % MOD;\n                    }\n                }\n            }\n\n            if(mpp.count(l)) \n            {\n                int tar = mpp[l];\n                for(int inv = 0; inv <= maxi; inv++) \n                {\n                    if (inv != tar) \n                    {\n                        cnt[l][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        ll res = 0;\n        for (ll c : cnt[n]) \n        {\n            res = (res + c) % MOD;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1719070222",
    "subm_id": "1296817678"
}