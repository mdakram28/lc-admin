{
    "username": "wwgjy",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        if k == 1:\n            return '9' * n\n        elif k == 2:\n            if n == 1:\n                return '8'\n            if n == 2:\n                return '88'\n            return '8' + '9' * (n - 2) + '8'\n        elif k == 3:\n            return '9' * n\n        elif k == 4:\n            if n <= 4:\n                return '8' * n\n            return '88' + '9' * (n - 4) + '88'\n        elif k == 5:\n            if n == 1:\n                return '5'\n            if n == 2:\n                return '55'\n            return '5' + '9' * (n - 2) + '5'\n        elif k == 6:\n            if n <= 2:\n                return '6' * n\n            if n == 3:\n                return '888'\n            if n % 2 == 0:\n                return '8' + '9' * ((n - 4) // 2) + '77' + '9' * ((n - 4) // 2) + '8' \n            else:\n                return '8' + '9' * ((n - 3) // 2) + '8' + '9' * ((n - 3) // 2) + '8' \n        elif k == 7:\n            a = [7, 77, 5, 77, 7, 99, 4, 44, 6, 44, 4, 99]\n            i = (n + 1) // 2 - 1\n            s = '9' * i + str(a[(n - 1) % 12]) + '9' * i\n            return s  \n        elif k == 8:\n            if n <= 6:\n                return '8' * n\n            return '888' + '9' * (n - 6) + '888'\n        elif k == 9:\n            return '9' * n",
    "submit_ts": "1723951808",
    "subm_id": "556407804"
}