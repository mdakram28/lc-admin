{
    "username": "Thakur Pratyush Singh",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        R,C = len(board) , len(board[0])\n        col = [[[-float('inf'),-1],[-float('inf'),-1],[-float('inf'),-1]] for _ in range(C)]\n        for c in range(C):\n            for r in range(R):\n                if board[r][c] >= col[c][0][0]:\n                    col[c][2] = col[c][1].copy()\n                    col[c][1] = col[c][0].copy()\n                    col[c][0] = [board[r][c],r]\n                elif col[c][0][0] > board[r][c] >= col[c][1][0]:\n                    col[c][2] = col[c][1].copy()\n                    col[c][1] = [board[r][c],r]\n                elif col[c][2][0] < board[r][c]:\n                    col[c][2] = [board[r][c],r]\n        col.sort(reverse = True)\n        visit = set()\n        def go(i):\n            nonlocal visit\n            if len(visit) == 3:\n                return 0\n            elif i == min(C,9):\n                return float('-inf')\n            ans = float('-inf')\n            for v,j in col[i]:\n                if v!=float('-inf') and j  not in visit:\n                    visit.add(j)\n                    ans = max(ans,v+go(i+1))\n                    visit.remove(j)\n            ans = max(ans,go(i+1))\n            return ans\n        return go(0)\n",
    "submit_ts": "1723908730",
    "subm_id": "1359164797"
}