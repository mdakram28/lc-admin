{
    "username": "neerajsingh7979",
    "submission": "class Solution {\npublic:\n    \ntypedef long long ll;\n    \nvoid fact(ll n,vector<ll> &factors){\n\tfor(int i = 2 ; i*i <= n ; i++){\n\t\twhile(n%i == 0){\n\t\t\tfactors.push_back(i);\n\t\t\tn /= i;\n\t\t\t}\n\t}\n\tif(n > 1)factors.push_back(n);\n\treturn;\n}\n\n// Sieve of Eratosthenes - o(nloglogn)\n// gcd of prime no. is 1\nbool isPrime(int n) {\n\n        vector<bool> isprime(n,true);\n\n        for(int i = 2 ; i*i < n ; i++){\n            if(!isprime[i]) continue;\n            for(int j = i*i ; j < n ; j+=i){\n                 isprime[j] = false;\n            }\n        }\n\n        if(isprime[n])return true;\n        else return false;\n}\n\n// __gcd(a,b)   (inbuilt gcd function) , long division\n// ||  (a*b)/gcd = lcm(a,b)   || IMPORTANT RELATION\n// tc- O[logn]\nint gcd(int a, int b){\n    if(b == 0) return a;\n    return gcd(b,a%b);\n}\n    \n    \n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        \n        int n = nums.size();\n        vector<int> diff(n);\n        \n        for (int i = 0; i < n; ++i) {\n            diff[i] = target[i] - nums[i];\n        }\n        \n        diff.push_back(1e9);\n        diff.pop_back();\n        long long ans = -1;\n        int c = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            if (i == 0 || (diff[i - 1] > 0 && diff[i] > 0) || (diff[i - 1] < 0 && diff[i] < 0)) {\n                int a = abs(diff[i]) - abs(c);\n                if (a > 0) {\n                    ans += a;\n                }\n                c = diff[i];\n            } else {\n                ans += abs(diff[i]);\n                c = diff[i];\n            }\n        }\n        \n        if(1)\n        return ans+1;\n    }\n};",
    "submit_ts": "1721532754",
    "subm_id": "1327993255"
}