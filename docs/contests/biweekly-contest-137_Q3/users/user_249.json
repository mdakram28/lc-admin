{
    "username": "Marco",
    "submission": "typedef long long int ll;\n#define sc static_cast<ll>\n#define g0 std::get<0>\n#define g1 std::get<1>\n#define g2 std::get<2>\n\nclass Solution {\nprivate:\n    int n{},m{};\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        this->n=static_cast<int>(std::size(board));\n        assert(n>=3);\n        this->m=static_cast<int>(std::size(board.front()));\n        assert(m>=3);\n        using tuple_t = typename std::tuple<int,int,ll>;\n        this->n=static_cast<int>(std::size(board));\n        assert(n>=3);\n        this->m=static_cast<int>(std::size(board.front()));\n        assert(m>=3);\n        vector<tuple_t> a(n*m);\n        for(int i{};i<n;++i){\n            for(int j{};j<m;++j){\n                int k=i*m+j;\n                a[k]=make_tuple(i,j,sc(board[i][j]));\n            }\n        }\n        sort(begin(a),end(a),[]<typename T>(const T& x,const T& y){\n            return g2(x)>g2(y);\n        });\n        std::function<void(int,int,int,int,ll&)> dfs = [&](int i,int l,int r_,int c_,ll& sub){\n            if(i==l){\n                return;\n            }\n            int nr_{g0(a[i])};\n            int nc_{g1(a[i])};\n            if(nr_!=r_ and nc_!=c_){\n                for(int k{i+1};k<l;++k){\n                    int nnr_{g0(a[k])};\n                    int nnc_{g1(a[k])};\n                    if(nnr_!=nr_ and nnr_!=r_ and nnc_!=nc_ and nnc_!=c_){\n                        sub=max(sub,g2(a[i])+g2(a[k]));\n                        break;\n                    }\n                }\n            }\n            dfs(i+1,l,r_,c_,sub);\n        };\n        ll theRes{LLONG_MIN};\n        for(int k=0;k<=(m*n-3);++k){\n            if(theRes>=3ll*g2(a[k]))break;\n            ll sub=sc(INT_MIN);\n            dfs(k,n*m,g0(a[k]),g1(a[k]),sub);\n            if(sub!=sc(INT_MIN)){\n                theRes=max(theRes,g2(a[k])+sub);\n            }\n        }\n        return theRes;\n    }\n};",
    "submit_ts": "1723908384",
    "subm_id": "1359150334"
}