{
    "username": "NDR0216",
    "submission": "class Solution {\npublic:\n    int minimumArea(vector<vector<int>>& grid, int i_l, int i_r, int j_l, int j_r) {\n        if (i_l > i_r || j_l > j_r) {\n            return 0;\n        }\n        \n        int min_i = INT_MAX;\n        int max_i = INT_MIN;\n        int min_j = INT_MAX;\n        int max_j = INT_MIN;\n        \n        bool flag = false;\n        \n        for (int i = i_l; i <= i_r; i++) {\n            for (int j = j_l; j <= j_r; j++) {\n                if (grid[i][j]) {\n                    flag = true;\n                    min_i = min(min_i, i);\n                    min_j = min(min_j, j);\n                    max_i = max(max_i, i);\n                    max_j = max(max_j, j);\n                }\n            }\n        }\n        \n        if (flag == false) {\n            return 0;\n        }\n        \n        return (max_i-min_i+1) * (max_j-min_j+1);\n    }\n    \n    \n    bool overlap(int i_0, int j_0, int i_1, int j_1, int i, int j) {\n        if (i_0 <= i && i <= i_1 && j_0 <= j && j <= j_1) {\n            return false;\n        }\n        \n        return true;\n    }\n    \n    \n    int minimumSum(vector<vector<int>>& grid) {\n        int min_sum = INT_MAX;\n        \n        int m = grid.size();\n        int n = grid[0].size();\n        \n        \n        // 2 vertical\n        \n        for (int i = 0; i < m; i++) {\n            for (int ii = i; ii < m; ii++) {\n                int a = minimumArea(grid, 0, i-1, 0, n-1);\n                int b = minimumArea(grid, i, ii-1, 0, n-1);\n                int c = minimumArea(grid, ii, m-1, 0, n-1);\n                \n                min_sum = min(min_sum, a+b+c);\n            }    \n        }\n        \n        // 2 horzi\n        \n        for (int i = 0; i < n; i++) {\n            for (int ii = i; ii < n; ii++) {\n                int a = minimumArea(grid, 0, m-1, 0, i-1);\n                int b = minimumArea(grid, 0, m-1, i, ii-1);\n                int c = minimumArea(grid, 0, m-1, ii, n-1);\n                \n                min_sum = min(min_sum, a+b+c);\n            }    \n        }\n        \n        // 1 vertical\n        for (int i = 0; i < m; i++) {\n            \n            for (int j = 0; j < n; j++) {\n                int a = minimumArea(grid, 0, i-1, 0, n-1); // vert\n                \n                \n                int b = minimumArea(grid, i, m-1, 0, j-1);\n                int c = minimumArea(grid, i, m-1, j, n-1);\n                \n                min_sum = min(min_sum, a+b+c);\n                \n                a = minimumArea(grid, i, m-1, 0, n-1); // vert\n                \n                \n                b = minimumArea(grid, 0, i-1, 0, j-1);\n                c = minimumArea(grid, 0, i-1, j, n-1);\n                \n                min_sum = min(min_sum, a+b+c);\n            }\n        }\n        \n        // 1 H\n        for (int i = 0; i < n; i++) {\n            \n            for (int j = 0; j < m; j++) {\n                int a = minimumArea(grid, 0, m-1, 0, i-1); // vert\n                \n                \n                int b = minimumArea(grid, 0, j-1,  i, n-1);\n                int c = minimumArea(grid, j, m-1, i, n-1);\n                \n                min_sum = min(min_sum, a+b+c);\n                \n                a = minimumArea(grid, 0, m-1, i, n-1); // vert\n                \n                \n                b = minimumArea(grid,  0, j-1, 0, i-1);\n                c = minimumArea(grid,  j, m-1, 0, i-1);\n                \n                min_sum = min(min_sum, a+b+c);\n            }\n        }\n        \n        \n        \n//         int i_1, j_1;\n        \n//         for (int i = 0; i < grid.size(); i++) {\n//             for (int j = 0; j < grid[0].size(); j++) {\n//                 // (0, 0), (i, j)\n                \n//                 for (int ii = 0; ii < grid.size(); ii++) {\n//                     for (int jj = 0; jj < grid[0].size(); jj++) {\n//                         if (overlap(0, 0, i, j, ii, jj)) {\n//                             continue;\n//                         }\n                        \n                        \n//                         // (ii, jj), (i, j)\n//                         for (int ii = 0; ii < grid.size(); ii++) {\n//                             for (int jj = 0; jj < grid[0].size(); jj++) {\n//                                 if (ii < i && jj < j) {\n//                                     continue;\n//                                 }\n\n//                                 // (ii, jj), (i, j)\n//                             }\n//                         }\n//                     }\n//                 }\n//             }\n//         }\n        \n//         int min_i = INT_MAX;\n//         int max_i = INT_MIN;\n//         int min_j = INT_MAX;\n//         int max_j= INT_MIN;\n        \n//         for (int i = 0; i < grid.size(); i++) {\n//             for (int j = 0; j < grid[0].size(); j++) {\n//                 if (grid[i][j]) {\n//                     min_i = min(min_i, i);\n//                     min_j = min(min_j, j);\n//                     max_i = max(max_i, i);\n//                     max_j = max(max_j, j);\n//                 }\n//             }\n//         }\n        \n//         return (max_i-min_i+1) * (max_j-min_j+1);\n        \n        return min_sum;\n    }\n};",
    "submit_ts": "1719114922",
    "subm_id": "1297356756"
}