{
    "username": "rsr182003",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        List<Integer>[] graph = new List[n + 4];\n        for (int i = 0; i < n + 4; i++) {\n            graph[i] = new ArrayList<>();\n        }\n\n        for (int i = 0; i < n; i++) {\n            int x = circles[i][0], y = circles[i][1], r = circles[i][2];\n\n            if (x <= r) {\n                graph[n].add(i);\n                graph[i].add(n);\n            }\n            if (X - x <= r) {\n                graph[n + 2].add(i);\n                graph[i].add(n + 2);\n            }\n            if (y <= r) {\n                graph[n + 1].add(i);\n                graph[i].add(n + 1);\n            }\n            if (Y - y <= r) {\n                graph[n + 3].add(i);\n                graph[i].add(n + 3);\n            }\n\n            for (int j = i + 1; j < n; j++) {\n                int xj = circles[j][0], yj = circles[j][1], rj = circles[j][2];\n                double distance = Math.sqrt((x - xj) * (x - xj) + (y - yj) * (y - yj));\n                int sum = r + rj;\n                if (sum >= distance) {\n                    graph[i].add(j);\n                    graph[j].add(i);\n                }\n            }\n        }\n\n        boolean isBlocked = bfs(graph, n, n + 1, n + 2, n + 4) ||\n                bfs(graph, n + 3, n + 2, n + 1, n + 4);\n\n        return !isBlocked;\n    }\n\n    boolean bfs(List<Integer>[] graph, int s, int t1, int t2, int nodes) {\n        Queue<Integer> q = new LinkedList<>();\n        boolean[] visited = new boolean[nodes + 4];\n        q.add(s);\n        visited[s] = true;\n\n        while (!q.isEmpty()) {\n            int u = q.poll();\n            for (int v : graph[u]) {\n                if (!visited[v]) {\n                    q.add(v);\n                    visited[v] = true;\n                }\n            }\n        }\n        return visited[t1] || visited[t2];\n    }\n}\n",
    "submit_ts": "1722139076",
    "subm_id": "1335807177"
}