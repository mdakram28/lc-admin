{
    "username": "sisyphus3",
    "submission": "class Solution {\npublic:\n    #define sz(x) int(x.size())\n#define all(x) x.begin(), x.end()\n#define db double\n#define ll long long\n#define ar array\ntemplate<typename T> bool ckmin(T& a, const T& b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\n\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = sz(colors);\n        vector<int> pref(2*n);\n        for (int i = 0; i < 2*n-1; i++) {\n            pref[i] = (colors[i%n] == colors[(i+1)%n]) + (i ? pref[i-1] : 0);\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) ans += pref[i+k-2] - (i ? pref[i-1] : 0) == 0;\n        return ans;\n    }\n};",
    "submit_ts": "1720276780",
    "subm_id": "1311632240"
}