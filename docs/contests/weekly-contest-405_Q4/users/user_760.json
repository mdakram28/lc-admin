{
    "username": "jdevj",
    "submission": "class Solution {\n    struct Trie{\n        int cost;\n        array<Trie*,26> path; \n        Trie(){\n            cost=0;\n            for(auto &e:path)e=nullptr;\n        }\n    };\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        auto root = new Trie();\n        int n=words.size(),m=target.size();\n        for(int i=0;i<n;i++){\n            auto trav = root;\n            for(char c:words[i]){\n                if(trav->path[c-'a']==nullptr)trav->path[c-'a'] = new Trie();\n                trav = trav->path[c-'a'];\n            }\n            if(trav->cost>0){\n                trav->cost = min(trav->cost,costs[i]);\n            }else trav->cost = costs[i];\n        }\n        vector<int> dp(m+1,INT_MAX);\n        dp[0]=0;\n        for(int i=0;i<m;i++){\n            if(dp[i]!=INT_MAX){\n                int j=i;\n                auto trav = root;\n                while(j<m && (trav->path[target[j]-'a']!=nullptr)){\n                    trav = trav->path[target[j]-'a'];\n                    if(trav->cost!=0){\n                        dp[j+1] = min(trav->cost + dp[i],dp[j+1]);\n                    }\n                    j++;\n                }\n            }\n        }\n        if(dp[m]==INT_MAX)return -1;\n        return dp[m];\n    }\n};",
    "submit_ts": "1720322823",
    "subm_id": "1312360023"
}