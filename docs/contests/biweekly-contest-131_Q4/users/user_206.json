{
    "username": "iivankon",
    "submission": "class Solution:\n    def getResults(self, queries: List[List[int]]) -> List[bool]:\n        from sortedcontainers import SortedList\n        obstacles = SortedList()\n        obstacles.add(0)\n        biggest_left_len = {0: 0}\n        results = []\n        \n        def process_q_1(x):\n            obstacles.add(x)\n            index = obstacles.index(x)\n            \n            # processing biggest_left_len for x\n            left_obstacle = obstacles[index - 1]\n            biggest_left_len[x] = max(x - left_obstacle, biggest_left_len[left_obstacle])\n            \n            if index == len(obstacles) - 1:\n                # this is the biggest obstacle\n                return\n            \n            # updating lengths on the right    \n            max_seen_so_far = biggest_left_len[x]\n            while index < len(obstacles) - 1:\n                curr_obstacle = obstacles[index]\n                right_obstacle = obstacles[index + 1]\n                curr_value = biggest_left_len[right_obstacle]\n                max_seen_so_far = max(max_seen_so_far, right_obstacle - curr_obstacle)\n                if curr_value <= max_seen_so_far:\n                    return\n                biggest_left_len[right_obstacle] = max_seen_so_far\n                index += 1\n            # print(x)\n            # print(obstacles)\n            # print(biggest_left_len)\n            # print()\n                \n        def process_q_2(x, sz):\n            # print(obstacles)\n            # print(biggest_left_len)\n            # print(x, sz)\n            \n            index = obstacles.bisect_right(x)\n            # print('found index ', index)\n            obstacle = obstacles[index - 1]\n            # print('ob', obstacle)\n            max_len_left = max(biggest_left_len[obstacle], x - obstacle)\n            # print(max_len_left)\n            results.append(sz <= max_len_left)\n        \n        for q in queries:\n            if len(q) == 2:\n                _, x = q\n                process_q_1(x)\n            else:\n                _, x, sz = q\n                process_q_2(x, sz)\n        return results",
    "submit_ts": 1716651114.0
}