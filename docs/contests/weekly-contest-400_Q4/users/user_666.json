{
    "username": "bhupeshby25",
    "submission": "vector<int> get_set_bits(int x) {\n    vector<int> set_bits;\n    int index = 0;\n    while (x > 0) {\n        if (x & 1) {\n            set_bits.push_back(index);\n        }\n        x >>= 1;\n        index++;\n    }\n    return set_bits;\n}\n\nint counts_to_bitwise_and(int window_length, unordered_map<int, int>& bit_counts) {\n    int and_result = 0;\n    for (const auto& [bit, count] : bit_counts) {\n        if (count == window_length) {\n            and_result |= (1 << bit);\n        }\n    }\n    return and_result;\n}\n\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int target) {\n        int n = nums.size();\n\n        int current_AND_value = nums[0];\n        int best_diff = abs(current_AND_value - target);\n\n        unordered_map<int, int> window_bit_counts;\n        for (int bit : get_set_bits(nums[0])) {\n            window_bit_counts[bit]++;\n        }\n\n        int left_idx = 0, right_idx = 0;\n        while (right_idx < n) {\n            if (current_AND_value > target || left_idx > right_idx) {\n                right_idx++;\n                if (right_idx >= n) break;\n                for (int bit : get_set_bits(nums[right_idx])) {\n                    window_bit_counts[bit]++;\n                }\n            } else {\n                for (int bit : get_set_bits(nums[left_idx])) {\n                    window_bit_counts[bit]--;\n                    if (window_bit_counts[bit] == 0) {\n                        window_bit_counts.erase(bit);\n                    }\n                }\n                left_idx++;\n            }\n\n            current_AND_value = counts_to_bitwise_and(right_idx - left_idx + 1, window_bit_counts);\n\n            if (left_idx <= right_idx) {\n                best_diff = min(best_diff, abs(current_AND_value - target));\n            }\n        }\n\n        return best_diff;\n    }\n};",
    "submit_ts": 1717298915.0
}