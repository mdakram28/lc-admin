{
    "username": "nanlai",
    "submission": "class Solution {\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        List<Integer> ans = new ArrayList<>();\n        int[] arr = new int[nums.length + 5];\n        for(int i = 0; i < nums.length; i++) {\n            add(arr, i + 1, isPeak(nums, i));\n        }\n        for(int[] q : queries) {\n            if(q[0] == 1) {\n                int l = q[1], r = q[2];\n                if(r - l >= 2) {\n                    int res1 = query(arr, r);\n                    int res2 = query(arr, l + 1);\n                    ans.add(res1 - res2);\n                } else {\n                    ans.add(0);\n                }\n            } else {\n                int idx = q[1];\n                int v = q[2];\n                int pre = isPeak(nums, idx - 1);\n                int cur = isPeak(nums, idx);\n                int nxt = isPeak(nums, idx + 1);\n                nums[idx] = v;\n                int pre1 = isPeak(nums, idx - 1);\n                int cur1 = isPeak(nums, idx);\n                int nxt1 = isPeak(nums, idx + 1);\n                if(idx - 1 >= 0) {\n                    add(arr, idx, pre1 - pre);\n                }\n                add(arr, idx + 1, cur1 - cur);\n                add(arr, idx + 2, nxt1 - nxt);\n            }\n        }\n        return ans;\n    }\n\n    private int lowbit(int x) {\n        return x & -x;\n    }\n    private void add(int[] arr, int x, int v) {\n        while(x < arr.length) {\n            arr[x] += v;\n            x += lowbit(x);\n        }\n    }\n\n    private int query(int[] arr, int x) {\n        int ans = 0;\n        while(x > 0) {\n            ans += arr[x];\n            x -= lowbit(x);\n        }\n        return ans;\n    }\n\n    private int isPeak(int[] num, int j) {\n        if(j <= 0 || j >= num.length - 1) {\n            return 0;\n        }\n        if(num[j] > num[j - 1] && num[j] > num[j + 1]) {\n            return 1;\n        }\n        return 0;\n    }\n}",
    "submit_ts": 1718507376.0
}