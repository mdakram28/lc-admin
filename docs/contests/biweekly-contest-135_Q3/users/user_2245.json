{
    "username": "pratikjain226",
    "submission": "from collections import defaultdict as dd\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        d=dd(int);ans=0;n=len(nums);eq=0\n        l=[0]*(k+3)\n        for i in range(n//2):\n            diff=abs(nums[i]-nums[n-i-1])\n            d[diff]+=1\n            m=max(nums[i],nums[n-i-1])\n            c=max(m+1,k-min(nums[i],nums[n-i-1])+1)\n            l[c]+=1\n            l[0]+=1\n            l[diff]-=1\n            l[diff+1]+=1\n        # print(l[:k+3])\n        for i in range(1,len(l)):\n            l[i]+=l[i-1]\n        # print(l[:k+3])\n        return min(l)\n        # [7, 7, 6, 7, 6, 7, 7, 8, 5, 8, 10, 10, 9, 10, 10, 11, 11, 13, 13, 14, 14, 14]\n        # [7, 7, 6, 7, 6, 7, 7, 8, 5, 7, 9, 9, 8, 9, 9, 10, 10, 12, 12, 13, 13, 13]",
    "submit_ts": "1721489660",
    "subm_id": "1327459956"
}