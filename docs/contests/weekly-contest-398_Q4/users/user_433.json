{
    "username": "loganwatchorn",
    "submission": "func waysToReachStair(k int) int {\n    memo := map[[3]int]int{}\n    \n    var dp func(pos, jumpSize, prevDir int) int\n    dp = func(pos, jumpSize, prevDir int) int {\n        if val, ok := memo[[3]int{pos, jumpSize, prevDir}]; ok {\n            return val\n        }\n        ans := 0\n        ////////////\n        if pos == k {\n            ans++\n        }\n        if prevDir == 1 && pos > 0 {\n            ans += dp(pos-1, jumpSize, 0)\n        }\n        if jumpSize <= k+1 {\n            ans += dp(pos+jumpSize, 2*jumpSize, 1)\n        }\n        \n        ////////////\n        memo[[3]int{pos, jumpSize, prevDir}] = ans\n        return ans\n    }\n    \n    ans := 0\n    if k == 1 { ans++ }\n    ans += dp(0, 1, 0)\n    ans += dp(2, 2, 1)\n    return ans\n}",
    "submit_ts": 1716088806.0
}