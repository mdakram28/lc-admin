{
    "username": "adityavkrm",
    "submission": "class SegmentTree {\n    vector<int> tree;\n    int n;\npublic:\n    SegmentTree(const vector<int>& arr): n(arr.size()), tree(arr.size() << 1) {\n        copy(arr.begin(), arr.end(), tree.begin() + n);\n        for (int i = n - 1; i > 0; --i) {\n            tree[i] = tree[i<<1] & tree[i<<1|1];\n        }\n    }\n\n    // Important: sum of range [l, r) (exclusive)\n    int bitwiseAnd(int l, int r) {\n        int s = INT_MAX;\n        for (l +=n, r += n; l < r; l >>= 1, r >>= 1) {\n            if (l & 1) {\n                s &= tree[l++];\n            }\n            if (r & 1) {\n                s &= tree[--r];\n            }\n        }\n        return s;\n    }\n};\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        SegmentTree st(nums);\n        int i = 0;\n        const int n = nums.size();\n        int bitAnd = INT_MAX;\n        long long ans = 0, count = 0;\n        for (int j = 0; j < n; ++j) {\n            bitAnd &= nums[j];\n            // cout << \"and: \"<<bitAnd<<endl;\n\n            if (bitAnd < k) {\n                ++i;\n                count = 0;\n                while (i <= j) {\n                    const int sub = st.bitwiseAnd(i, j + 1);\n                    if (sub < k) {\n                        ++i;\n                    } else {\n                        bitAnd = sub;\n                        break;\n                    }\n                }\n                if (i == j + 1) {\n                    bitAnd = INT_MAX;\n                }\n                // cout << \"and after: \"<<bitAnd<<endl;\n            }\n\n            if (bitAnd == k) {\n                // cout << \"count: \"<<count<<\", i: \"<<i<<endl;\n                ans += count + 1;\n                ++i;\n                while (i <= j && st.bitwiseAnd(i, j + 1) == k) {\n                    ++i;\n                    ++ans;\n                    ++count;\n                }\n                --i;\n            }\n            \n            // cout <<ans <<endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720280320",
    "subm_id": "1311784972"
}