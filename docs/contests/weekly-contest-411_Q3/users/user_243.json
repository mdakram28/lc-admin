{
    "username": "Amarjargal Ayurzana",
    "submission": "class Solution {\npublic:\n    int pw(int x, int k) {\n        if(x == 0) return 1;\n\n        int h = pw(x / 2, k);\n        h = h * h % k;\n        if(x & 1) h = h * 10 % k;\n\n        return h;\n    }\n\n    string largestPalindrome(int n, int k) {\n        /*\n        i -> i + 1\n        \n        */\n        int l = (n - 1) / 2, r = n / 2, m = l + 1;\n        vector dp(m, vector (k, -1)), prev(m, vector (k, -1));\n\n        for(int i = 1; i <= 9; i++) {\n            int r1 = pw(r, k), r2 = pw(l, k);\n            // cout << \"r1 = \" << r1 << \" r2 = \" << r2 << \"\\n\";\n            if(l == r) {\n                dp[0][(r1 * i) % k] = i;\n            } else {\n                dp[0][(r1 + r2) * i % k] = i;\n            }\n        }\n\n        for(int i = 1; i < m; i++) {\n            r++, l--;\n            int r1 = pw(r, k), r2 = pw(l, k);\n            \n            for(int j = 0; j <= 9; j++) {\n                int rem = (r1 + r2) * j % k;\n                // cout << rem << \" is rem\\n\";\n                for(int p = 0; p < k; p++) {\n                    if(dp[i - 1][p] == -1) continue;\n\n                    dp[i][(p + rem) % k] = j;\n                    prev[i][(p + rem) % k] = p;\n                }\n            }\n        }\n\n        // for(int i = 0; i < m; i++) {\n        //     for(int j = 0; j < k; j++) {\n        //         cout << dp[i][j] << \" \";\n        //     }\n        //     cout << \"\\n\";\n        // }\n        // cout << \"here\\n\";\n        int rem = 0, ind = m - 1;\n        l = 0, r = n - 1;\n        string ans(n, ' ');\n        while(l <= r) {\n            // cout << rem << \" \" << ind << \" \" << l << \" \" << r << \" \" << dp[ind][rem] << \"\\n\"; \n            ans[l++] = ans[r--] = dp[ind][rem] + '0';\n            rem = prev[ind][rem];\n            ind--;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723951269",
    "subm_id": "1359767441"
}