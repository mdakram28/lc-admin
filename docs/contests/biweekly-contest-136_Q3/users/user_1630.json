{
    "username": "code4life200",
    "submission": "class Solution {\npublic:\n    \nint minFlips(vector<vector<int>>& binaryGrid) {\n    int numberOfRows = binaryGrid.size();\n    int numberOfColumns = binaryGrid[0].size();\n    int totalFlipsRequired = 0;\n\n    if (numberOfRows % 2 == 1 && numberOfColumns % 2 == 1) {\n        if (binaryGrid[numberOfRows / 2][numberOfColumns / 2] == 1) {\n            totalFlipsRequired += 1;\n        }\n    }\n\n    vector<int> palindromeFlipsCount(3, 0);\n\n    if (numberOfRows % 2 == 1) {\n        int leftIndex = 0, rightIndex = numberOfColumns - 1;\n        while (leftIndex < rightIndex) {\n            int sumOfCentralRow = binaryGrid[numberOfRows / 2][leftIndex] + binaryGrid[numberOfRows / 2][rightIndex];\n            palindromeFlipsCount[sumOfCentralRow] += 1;\n            leftIndex += 1;\n            rightIndex -= 1;\n        }\n    }\n\n    if (numberOfColumns % 2 == 1) {\n        int topIndex = 0, bottomIndex = numberOfRows - 1;\n        while (topIndex < bottomIndex) {\n            int sumOfCentralColumn = binaryGrid[topIndex][numberOfColumns / 2] + binaryGrid[bottomIndex][numberOfColumns / 2];\n            palindromeFlipsCount[sumOfCentralColumn] += 1;\n            topIndex += 1;\n            bottomIndex -= 1;\n        }\n    }\n\n    if (palindromeFlipsCount[2] % 2 == 1) {\n        if (palindromeFlipsCount[1] > 0) {\n            totalFlipsRequired += palindromeFlipsCount[1];\n        } else {\n            totalFlipsRequired += 2;\n        }\n    } else {\n        totalFlipsRequired += palindromeFlipsCount[1];\n    }\n\n    for (int rowIndex = 0; rowIndex < numberOfRows / 2; ++rowIndex) {\n        for (int columnIndex = 0; columnIndex < numberOfColumns / 2; ++columnIndex) {\n            int topLeftCell = binaryGrid[rowIndex][columnIndex];\n            int bottomLeftCell = binaryGrid[numberOfRows - 1 - rowIndex][columnIndex];\n            int topRightCell = binaryGrid[rowIndex][numberOfColumns - 1 - columnIndex];\n            int bottomRightCell = binaryGrid[numberOfRows - 1 - rowIndex][numberOfColumns - 1 - columnIndex];\n\n            int sumOfCells = topLeftCell + bottomLeftCell + topRightCell + bottomRightCell;\n\n            if (sumOfCells != 0 && sumOfCells != 4) {\n                totalFlipsRequired += min(sumOfCells, 4 - sumOfCells);\n            }\n        }\n    }\n\n    return totalFlipsRequired;\n}\n        \n    \n};",
    "submit_ts": "1722699814",
    "subm_id": "1343223164"
}