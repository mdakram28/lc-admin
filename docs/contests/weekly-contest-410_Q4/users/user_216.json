{
    "username": "striver1217010",
    "submission": "import java.util.*;\nclass Solution {\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        long dp[][] = new long[n][], mod = 1000000007;\n        long cum_dp[][] = new long[n][];\n\n        for (int i = 0; i < n; i++) {\n            dp[i] = new long[nums[i] + 1];\n            cum_dp[i] = new long[nums[i] + 1];\n        }\n\n        for (int i = 0; i <= nums[n - 1]; i++) {\n            dp[n - 1][i] = ((long)1);\n        }\n\n        cum_dp[n - 1][0] = dp[n - 1][0];\n\n        for (int i = 1; i <= nums[n - 1]; i++) {\n            cum_dp[n - 1][i] = (dp[n - 1][i] + cum_dp[n - 1][i - 1])%mod;\n        }\n\n        for (int i = n - 2; i >= 0; i--) {\n\n            for (int j = 0; j <= nums[i]; j++) {\n                int k = nums[i] - j;\n\n                if (nums[i + 1] >= (Math.max(j, j + nums[i + 1] - nums[i]) - 1)) {\n                    dp[i][j] = (findVal(cum_dp[i + 1], nums[i + 1]) - findVal(cum_dp[i + 1], Math.max(j, j + nums[i + 1] - nums[i]) - 1) + mod)%mod;\n                }\n            }\n\n            cum_dp[i][0] = dp[i][0];\n\n            for (int j = 1; j <= nums[i]; j++) {\n                cum_dp[i][j] = (dp[i][j] + cum_dp[i][j - 1])%mod;\n            }\n        }\n\n        \n\n        return (int)(cum_dp[0][nums[0]]);\n\n    }\n\n    public long findVal(long dp[], int index) {\n        if (index < 0 || (index >= dp.length)) {\n            return ((long)0);\n        } else {\n            return dp[index];\n        }\n    }\n}",
    "submit_ts": "1723346059",
    "subm_id": "1351569308"
}