{
    "username": "leetcode_3604",
    "submission": "class Solution {\npublic:\n    typedef long long LL;\n    long long minimumCost(int mm, int nn, vector<int>& h, vector<int>& v) {\n        vector<pair<LL, LL>> vp;\n        int n = h.size();\n        int m = v.size();\n        for(int i = 0; i < n; ++i) {\n            vp.push_back({h[i], 0});\n        }\n        for(int i = 0; i < m; ++i) {\n            vp.push_back({v[i], 1});\n        }\n        sort(vp.begin(), vp.end());\n        \n        LL ch(0), cv(0), res(0);\n        for (int i = vp.size()-1; i >= 0; --i) {\n            if (vp[i].second == 0) {\n                res += (cv+1) * vp[i].first;\n                ++ch;\n            } else {\n                res += (ch+1) * vp[i].first;\n                ++cv;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926077",
    "subm_id": "1320275250"
}