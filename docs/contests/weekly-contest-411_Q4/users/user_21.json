{
    "username": "drizzlo",
    "submission": "#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops\")\n#define ALL(v) v.begin(),v.end()\n#define For(i,_) for(int i=0,i##end=_;i<i##end;++i) // [0,_)\n#define FOR(i,_,__) for(int i=_,i##end=__;i<i##end;++i) // [_,__)\n#define Rep(i,_) for(int i=(_)-1;i>=0;--i) // [0,_)\n#define REP(i,_,__) for(int i=(__)-1,i##end=_;i>=i##end;--i) // [_,__)\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define V vector\n#define pb push_back\n#define pf push_front\n#define qb pop_back\n#define qf pop_front\n#define eb emplace_back\ntypedef pair<int,int> pii;\ntypedef pair<ll,int> pli;\n#define fi first\n#define se second\nconst int dir[4][2]={{-1,0},{0,1},{1,0},{0,-1}},inf=0x3f3f3f3f,mod=1e9+7;\nconst ll infl=0x3f3f3f3f3f3f3f3fll;\ntemplate<class T>inline bool ckmin(T &x,const T &y){return x>y?x=y,1:0;}\ntemplate<class T>inline bool ckmax(T &x,const T &y){return x<y?x=y,1:0;}\nint init=[](){return cin.tie(nullptr)->sync_with_stdio(false),0;}();\ntemplate<class T1,class T2>\ninline V<T1> pre1d(const V<T2> &v,const function<T1(T1,T2)> &f=[](const T1 &x,const T2 &y){return x+y;}){\n    V<T1>ret(v.size());\n    For(i,v.size())ret[i]=f((i?ret[i-1]:T1()),v[i]);\n    return ret;\n}\ntemplate<class T>\ninline T qry1d(V<T> &v,int l,int r,const function<T(T,T)> &f=[](const T &x,const T &y){return x+y;}){\n    assert(0<=l),assert(l<=r),assert(r<v.size());\n    return f(v[r],-(l?v[l-1]:T()));\n}\ntemplate<class T>\nstruct BIT{\n    // d-indexed [-d+1,n]->[1,n+d]\n    V<T>c1,c2;\n    int d,n;\n    inline void resize(int n_,int d_=1){\n        d=d_,n=n_;\n        V<T>(n+d+1).swap(c1);\n        V<T>(n+d+1).swap(c2);\n    }\n    inline BIT(int n=0,int d=1){resize(n,d);}\n    inline void add(int l,int r,const T &v){\n        if(l>r)return;\n        l+=d,assert(0<l),assert(l<=n+d);\n        for(int i=l;i<=n+d;i+=i&-i)c1[i]+=v,c2[i]+=(l-1)*v;\n        r+=d,assert(0<r),assert(r<=n+d);\n        for(int i=r+1;i<=n+d;i+=i&-i)c1[i]-=v,c2[i]-=r*v;\n    }\n    inline void add(int k,const T &v){add(k,k,v);} \n    inline T query(int l,int r){\n        if(l>r)return T();\n        T ret=0;\n        r+=d,assert(0<r),assert(r<=n+d);\n        for(int i=r;i;i^=i&-i)ret+=r*c1[i]-c2[i];\n        l+=d,assert(0<l),assert(l<=n+d);\n        for(int i=l-1;i;i^=i&-i)ret-=(l-1)*c1[i]-c2[i];\n        return ret;\n    }\n    inline T query(int k){return query(k,k);}\n};\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& q) {\n        int n=s.size();\n        V<int>a(n);\n        For(i,n)a[i]=s[i]^48;\n        V<int>nxt(n),pre=pre1d<int>(a);\n        int j=0,x=0,y=0;\n        For(i,n){\n            int j=i,l=i+1,r=n-1;\n            while(l<=r){\n                int mid=l+r>>1,sum=qry1d(pre,i,mid);\n                if(min(sum,mid-i+1-sum)<=k)j=mid,l=mid+1;\n                else r=mid-1;\n            }\n            nxt[i]=j;\n            // printf(\"%d %d\\n\",i,nxt[i]);\n            --((s[i]^48)?x:y);\n        }\n        V<V<pii>>evt(n);\n        int m=q.size();\n        For(i,m)evt[q[i][0]].eb(q[i][1],i);\n        V<ll>ans(m);\n        BIT<ll>t(n);\n        Rep(i,n){\n            t.add(i,nxt[i],1);\n            for(const pii &j:evt[i])ans[j.se]=t.query(i,j.fi);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723949046",
    "subm_id": "556390179"
}