{
    "username": "vermaashubham",
    "submission": "\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        // k > nums[i] ans is always possible\n        int n = nums.size();\n        // dev(n);\n        map<int, int> mp;\n        for (int i = 0; i < nums.size() / 2; i++) {\n            mp[abs(nums[i] - nums[n - i - 1])]++;\n        }\n        int maxiFreq = 0, x = -1;\n        vector<int> todo;\n        // print(mp);\n        // for (auto it : mp) {\n        //     if (maxiFreq < it.second) {\n        //         maxiFreq = it.second;\n        //         x = it.first;\n        //     }\n        // }\n        // dev(x);\n        map<int, pair<int, int>> logic;\n        for (auto it : mp) {// x, freq\n            if (logic.contains(it.second)) {\n                logic[it.second].first = max(it.first, logic[it.second].first);\n                logic[it.second].second = min(it.first, logic[it.second].second);\n            }\n            else logic[it.second] = { it.first, it.first };\n        }\n        int bestans = 1e9;\n        for (auto it : logic) {\n            int x = it.second.first;\n            // dev(x);\n            int ans = 0;\n            for (int i = 0; i < n / 2; i++) {\n                int val1 = nums[i], val2 = nums[n - 1 - i];\n                if (abs(val1 - val2) != x) {\n                    // if (i == 9)dev(i, val1 - x, val1 + x, val2 - x, val2 + x, val2);\n                    if ((0 <= val1 - x and val1 - x <= k) or (0 <= val1 + x and val1 + x <= k) or (0 <= val2 - x and val2 - x <= k) or (0 <= val2 + x and val2 + x <= k)) ans++;\n                    else {\n                        // cout << 'y' << i << endl;\n                        ans += 2;\n                    }\n                }\n            }\n            bestans = min(bestans, ans);\n\n            x = it.second.second;\n            ans = 0;\n            for (int i = 0; i < n / 2; i++) {\n                int val1 = nums[i], val2 = nums[n - 1 - i];\n                if (abs(val1 - val2) != x) {\n                    // if (i == 9)dev(i, val1 - x, val1 + x, val2 - x, val2 + x, val2);\n                    if ((0 <= val1 - x and val1 - x <= k) or (0 <= val1 + x and val1 + x <= k) or (0 <= val2 - x and val2 - x <= k) or (0 <= val2 + x and val2 + x <= k)) ans++;\n                    else {\n                        // cout << 'y' << i << endl;\n                        ans += 2;\n                    }\n                }\n            }\n            bestans = min(bestans, ans);\n        }\n        // dev(bestans);\n        return bestans;\n    }\n};\n",
    "submit_ts": "1721489150",
    "subm_id": "1327444439"
}