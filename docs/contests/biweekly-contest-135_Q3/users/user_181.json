{
    "username": "wjli",
    "submission": "\n\n// COPY ALL MACROS BELOW\n\ntypedef long long LL;\n#define MP make_pair\n#define PB push_back\n#define F first\n#define S second\n#define LB lower_bound\n#define UB upper_bound\n#define SZ(x) ((int)x.size())\n#define LEN(x) ((int)x.length())\n#define ALL(x) begin(x), end(x)\n#define RSZ resize\n#define ASS assign\n#define REV(x) reverse(x.begin(), x.end());\n#define trav(a, x) for (auto& a : x)\ntypedef pair<LL, LL> PL;\ntypedef vector<LL> VL;\ntypedef vector<PL> VPL;\ntypedef vector<VL> VVL;\ntypedef vector<VVL> VVVL;\ntypedef vector<VVVL> VVVVL;\ntypedef vector<string> VS;\ntypedef pair<int, int> PI;\ntypedef vector<int> VI;\ntypedef vector<PI> VPI;\ntypedef vector<vector<int>> VVI;\ntypedef vector<vector<PI>> VVPI;\n#define MAX(x) *max_element(ALL(x))\n#define MIN(x) *min_element(ALL(x))\n#define FOR(i, n) for (int i = 0; i < n; i++) \n#define FOR1(i, n) for (int i = 1; i <= n; i++) \n#define SORT(x) sort(x.begin(), x.end())\n#define RSORT(x) sort(x.rbegin(), x.rend())\n#define SUM(x) accumulate(x.begin(), x.end(), 0LL)\n\n\ntemplate <typename T>\nclass fenwick_tree {\npublic:\n    vector<T> fenw;\n    int n;\n\n    fenwick_tree(int _n) : n(_n) {\n        fenw.resize(n);\n    }\n\n    fenwick_tree() {\n\n    }\n\n    void initialize(int _n) {\n        fenw.assign(_n, 0);\n        n = _n;\n    }\n\n    void update(int x, T v) {\n        while (x < n) {\n            fenw[x] += v;\n            x |= (x + 1);\n            //x += (x & (-x));\n        }\n    }\n\n    T query(int x) {\n        T v{};\n        while (x >= 0) {\n            v += fenw[x];\n            x = (x & (x + 1)) - 1;\n        }\n        return v;\n    }\n\n    T query_full(int a, int b) {\t\t// range query\n        if ((a == 0) || (b == 0) || (a > b)) return 0;\n        return query(b) - ((a <= 1) ? 0 : query(a - 1));\n    }\n};\n\nclass Solution {\npublic:\n\tint minChanges(vector<int>& nums, int k) {\n\t\tint n = nums.size(), i, j, ans = 0, maxx = 0, c1, c2, s1, s2, s;\n\n\t\tVI ct(k + 1, 0), v(k + 1, 0);\n\t\tVVI plist(k + 1);\n\n\t\tFOR(i, n / 2) {\n\t\t\tint x = abs(nums[i] - nums[n - 1 - i]);\n\t\t\tint maxx = max(k - nums[i], k - nums[n - 1 - i]);\n\t\t\tmaxx = max(maxx, max(nums[i], nums[n - 1 - i]));\n\n\t\t\tct[x]++;\n\t\t\tplist[x].push_back(maxx);\n\t\t}\n\n\t\tans = n;\n\n\t\tc1 = n / 2;\n\t\tc2 = 0;\n\t\tFOR(i, k + 1) {\n\t\t\ts1 = (c1 - ct[i]);\n\t\t\ts2 = c2 * 2;\n\n\t\t\ts = s1 + s2;\n\n\t\t\tans = min(ans, s);\n\t\t\t//cout << \"K = \" << i << \" S1 = \" << s1 << \" S2 = \" << s2 << \" TOTAL = \" << s << \" BEST = \" << ans << \"\\n\";\n\n\t\t\tfor (auto p : plist[i]) v[p]++;\n\t\t\tc1 -= v[i];\n\t\t\tc2 += v[i];\n\t\t}\n\n\t\treturn ans;\n\t}\n};\n",
    "submit_ts": "1721487577",
    "subm_id": "1327393839"
}