{
    "username": "REED_W",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        return sln1(X, Y , circles);\n    }\n\n    private boolean sln1(int x, int y, int[][] cs){\n        int n = cs.length;\n        int m = n+2;    // n: top&left border; n+1:bottom&right border\n        UF uf = new UF(m);\n\n        for(int i = 0;i<n;i++){\n            if(cs[i][2]>=cs[i][0] || cs[i][2]>= y-cs[i][1]){ //touch left border || touch top border\n                uf.union(i, n);\n            }\n\n            if(cs[i][2]>=cs[i][1] || cs[i][2]>= x-cs[i][0]){ //touch left border || touch top border\n                uf.union(i, n+1);\n            }\n        }\n        for(int i = 0;i<n;i++){\n            for(int j =0;j<i;j++){\n                long dd = 1l*(cs[i][0]-cs[j][0])*(cs[i][0]-cs[j][0]) + 1l*(cs[i][1]-cs[j][1])*(cs[i][1]-cs[j][1]);\n                if( 1l*(cs[i][2]+cs[j][2])*(cs[i][2]+cs[j][2]) >=dd ){      //to circles touch\n                    uf.union(i, j);\n                }\n            }\n        }\n\n        return uf.find(n) != uf.find(n+1);\n    }\n\n    class UF{\n        int[] p;\n        int[] r;\n        int[] s;\n        int n;\n        \n        UF(int c){\n            n = c;\n            p = new int[n];\n            r = new int[n];\n            s = new int[n];\n            for(int i = 0;i< n;i++) {\n                p[i] = i;\n                s[i] = 1;\n            }\n        }\n        \n        int find(int u){\n            if(u == p[u]) return u;\n            p[u] = find(p[u]);\n            return p[u];\n        }\n        \n        void union(int u, int v){\n            int pu = find(u);\n            int pv = find(v);\n            if(pv != pu){\n                if(r[pu] > r[pv]){\n                    p[pv] = pu;\n                    s[pu] += s[pv];\n                }else if(r[pu] < r[pv]){\n                    p[pu] = pv;\n                    s[pv] += s[pu];\n                }else{\n                    s[pu] += s[pv];\n                    p[pv] = pu;\n                    r[pu]++;\n                }\n            }\n        }\n\t}\n}",
    "submit_ts": "1722137692",
    "subm_id": "1335771001"
}