{
    "username": "Tejas_gaikwad10",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        ios::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long hori = 1, verti = 1;\n        long long uttar = 0;\n        int i = 0, j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                uttar += (long long)horizontalCut[i] * verti;\n                hori++;\n                i++;\n            } else {\n                uttar += (long long)verticalCut[j] * hori;\n                verti++;\n                j++;\n            }\n        }\n        while (i < horizontalCut.size()) {\n            uttar += (long long)horizontalCut[i] * verti;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            uttar += (long long)verticalCut[j] * hori;\n            j++;\n        }\n\n        return uttar;\n    }\n};",
    "submit_ts": "1720926066",
    "subm_id": "1320274915"
}