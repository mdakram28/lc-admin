{
    "username": "mathpanda",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        ans = float('inf')\n        # | |\n        for l1 in range(n-2):\n            for l2 in range(l1+1, n-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if j <= l1:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif j <= l2:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n                    \n        # --\n        for l1 in range(m-2):\n            for l2 in range(l1+1, m-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if i <= l1:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif i <= l2:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n        \n        # | -\n        for l1 in range(n-1):\n            for l2 in range(m-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if j <= l1 and i <= l2:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif i <= l2:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n                \n        # - |\n        for l1 in range(n-1):\n            for l2 in range(m-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if j <= l1 and i > l2:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif i > l2:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n                \n        # - |\n        for l1 in range(n-1):\n            for l2 in range(m-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if j <= l1 and i <= l2:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif j <= l1:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n                \n        # | -\n        for l1 in range(n-1):\n            for l2 in range(m-1):\n                reg1u = float('inf')\n                reg1d = -1\n                reg1l = float('inf')\n                reg1r = -1\n                reg2u = float('inf')\n                reg2d = -1\n                reg2l = float('inf')\n                reg2r = -1\n                reg3u = float('inf')\n                reg3d = -1\n                reg3l = float('inf')\n                reg3r = -1\n                for i in range(m):\n                    for j in range(n):\n                        if grid[i][j] == 1:\n                            if j > l1 and i <= l2:\n                                reg1u = min(reg1u, i)\n                                reg1d = max(reg1d, i)\n                                reg1l = min(reg1l, j)\n                                reg1r = max(reg1r, j)\n                            elif j > l1:\n                                reg2u = min(reg2u, i)\n                                reg2d = max(reg2d, i)\n                                reg2l = min(reg2l, j)\n                                reg2r = max(reg2r, j)\n                            else:\n                                reg3u = min(reg3u, i)\n                                reg3d = max(reg3d, i)\n                                reg3l = min(reg3l, j)\n                                reg3r = max(reg3r, j)\n                temp = 0\n                if reg1d >= 0:\n                    temp += (reg1d - reg1u + 1) * (reg1r - reg1l + 1)\n                if reg2d >= 0:\n                    temp += (reg2d - reg2u + 1) * (reg2r - reg2l + 1)\n                if reg3d >= 0:\n                    temp += (reg3d - reg3u + 1) * (reg3r - reg3l + 1)\n                ans = min(ans, temp)\n                \n                \n        return ans\n                ",
    "submit_ts": 1719114985.0
}