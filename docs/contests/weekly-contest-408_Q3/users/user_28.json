{
    "username": "watashi",
    "submission": "class Solution {\npublic:\n  static int c2(int n) {\n    return n * (n + 1) / 2;\n  }\n\n  int numberOfSubstrings(string s) {\n    const int n = s.length();\n    vector<int> zs;\n    for (int i = 0; i < n; ++i) {\n      if (s[i] == '0') {\n        zs.push_back(i);\n      }\n    }\n\n    const int m = zs.size();\n    int off = 0;\n    int ret = 0;\n    for (int i = 0; i < n; ++i) {\n      // printf(\"[%d] %d\\n\", i, off);\n      for (int j = 0; off + j <= m; ++j) {\n        // [start, end]\n        int start = max(i + j + j * j - 1, j == 0 ? i : zs[off + j - 1]);\n        int end = off + j < m ? zs[off + j] - 1 : n - 1;\n        // printf(\"%d %d %d\\n\", j, start, end);\n        if (start >= n) {\n          break;\n        } else if (start <= end) {\n          ret += end - start + 1;\n        }\n      }\n      if (off < m && zs[off] == i) {\n        ++off;\n      }\n    }\n    return ret;\n  }\n};\n",
    "submit_ts": "1722135744",
    "subm_id": "1335712247"
}