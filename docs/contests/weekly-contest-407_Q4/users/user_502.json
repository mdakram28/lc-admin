{
    "username": "arthur_g",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        \"\"\"\n        [1, -2, 2] \n        [1 1 1 2]\n        [1 0 0 1 1 1 1 ]\n        [ 1 2 3 2 1 ] - 3 \n        [1 2 3 2 3 ]\n        get prev neighbor for free. \n        1 -1 1 -1 1 1 \n        0 -2 0 -2 0 \n        0 -1 1 -1 0\n        0 0 2 0 0 \n        0 0 1 0 0 \n        0 0 0 0 0 \n        \"\"\" \n\n        deltas = [a-b for a, b in zip(nums, target)]\n        print(deltas)\n        prev = 0\n        ans = 0\n        for item in deltas:\n            prev_pos = abs(prev)\n            curr_pos = abs(item)\n            if (prev < 0 and item < 0) or (item > 0 and prev > 0):\n                if prev_pos < curr_pos:\n                    ans+= curr_pos - prev_pos\n                    # print(\"contrib\", curr_pos, prev_pos)\n            else:\n                ans += curr_pos \n            prev = item\n        return ans ",
    "submit_ts": "1721531307",
    "subm_id": "1327957656"
}