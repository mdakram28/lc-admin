{
    "username": "sfburui",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<vector<int>> cuts;\n        for(int i = 0; i < horizontalCut.size(); i++)\n        {\n            cuts.push_back({horizontalCut[i], i, 0});\n        }\n        for(int i = 0; i < verticalCut.size(); i++)\n        {\n            cuts.push_back({verticalCut[i], i, 1});\n        }\n        sort(cuts.begin(), cuts.end(), [&](vector<int>& lhs, vector<int>& rhs) -> bool {\n            if (lhs.front() != rhs.front())\n            {\n                return lhs.front() > rhs.front();\n            }\n            else if (lhs[1] != rhs[1])\n            {\n                return lhs[1] < rhs[1];\n            }\n            else\n            {\n                return lhs[2] < rhs[2];\n            }\n        });\n        long long h = 1;\n        long long v = 1;\n        long long ans = 0;\n        for(int i = 0; i < cuts.size(); i++)\n        {\n            long long cost = cuts[i][0];\n            if (cuts[i][2] == 0)\n            {\n                ans += cost * v;\n                h++;\n            }\n            else\n            {\n                ans += cost * h;\n                v++;\n            }\n        }\n        return ans;   \n    }\n};",
    "submit_ts": "1720926107",
    "subm_id": "1320276214"
}