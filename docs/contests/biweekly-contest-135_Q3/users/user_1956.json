{
    "username": "mailtokartik",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        l = len(nums)\n\n        maxi = -1\n        count = 0\n\n        values = []\n        mapper = defaultdict(int)\n        for i in range(l // 2):\n            diff = abs(nums[i] - nums[l - 1 - i])\n            # print(diff)\n            mapper[diff] += 1\n    \n        # for key in mapper:\n        #     if mapper[key] > count:\n        #         count = mapper[key]\n        #         maxi = key\n            \n        #     elif mapper[key] == count:\n        #         maxi = min(key, maxi)\n        \n        values = list(sorted([[-v, k] for k, v in mapper.items()]))\n        res = 0\n\n        def get_res(maxi):\n            res = 0\n            for i in range(l // 2):\n                curmax, curmin = max(nums[i], nums[l - 1 - i]), min(nums[i], nums[l - 1 - i])\n\n                if curmax - curmin == maxi:\n                    continue\n\n                possible = k - curmin >= maxi or curmax >= maxi\n\n                if possible:\n                    res += 1\n                \n                else:\n                    res += 2\n                \n                # print(curmax, curmin, res)\n            \n            return res\n        \n        j = 0\n        # print(values)\n        val = get_res(values[0][1])\n\n        for i in range(1, len(values)):\n            new_res = get_res(values[i][1])\n\n            if new_res > val:\n                return val\n            \n            val = new_res\n\n        return val",
    "submit_ts": "1721489082",
    "subm_id": "1327442314"
}