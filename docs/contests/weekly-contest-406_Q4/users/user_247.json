{
    "username": "shuai-shuai-de-da-qin",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort()\n        verticalCut.sort()\n        ans = 0\n        curH  = curV = 0\n        while len(horizontalCut) > 0 and len(verticalCut) > 0:\n            a = horizontalCut[-1]\n            b = verticalCut[-1]\n            if a > b:\n                horizontalCut.pop()\n                ans += a * (curV + 1)\n                curH += 1\n            else:\n                verticalCut.pop()\n                ans += b * (curH + 1)\n                curV += 1\n        while len(horizontalCut) > 0:\n\n            a = horizontalCut.pop()\n            ans += a * (curV + 1)\n            curH += 1\n        while len(verticalCut) > 0:\n\n            b = verticalCut.pop()\n            ans += b * (curH + 1)\n            curV += 1\n        return ans",
    "submit_ts": "1720925302",
    "subm_id": "546438404"
}