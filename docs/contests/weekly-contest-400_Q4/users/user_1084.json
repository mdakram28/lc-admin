{
    "username": "Meaningless",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = nums.size(), ans = 1e9, r = 0, val;\n        vector<int> cnt(32, 0);\n        for(int i=0; i<n; i++){\n            r = max(r, i);\n            if(r == i){\n                val = nums[r];\n            }\n            while(r < n){\n                val &= nums[r];\n                int tmp = nums[r], j=0;\n                while(tmp > 0){\n                    cnt[j++] += (1 & tmp);\n                    tmp = tmp >> 1;\n                }\n                if(val <= k){\n                    ans = min(ans, k-val);\n                    break;\n                }\n                else{\n                    ans = min(ans, val-k);\n                    r++;\n                }\n            }\n            if(r == n)\n                break;\n            for(int j=0; j<32; j++){\n                if((nums[i] & (1<<j)) == 0){\n                    if(cnt[j] == r-i){\n                        val += (1<<j);\n                    }\n                }\n                else{\n                    cnt[j]--;   \n                }\n            }\n            if(r != i){\n                int tmp = nums[r], j=0;\n                while(tmp > 0){\n                    cnt[j++] -= (1 & tmp);\n                    tmp = tmp >> 1;\n                }   \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1717299568",
    "subm_id": "1274816856"
}