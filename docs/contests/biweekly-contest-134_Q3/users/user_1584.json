{
    "username": "dibendu07",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll                  long long\n#define endl                '\\n'\n#define ff                  first\n#define ss                  second\n#define pb                  push_back\n#define mp                  make_pair\n// fats i/p , o/p\n#define FAST_IO             (ios_base:: sync_with_stdio(false),cin.tie(NULL));\n#define yes cout<<\"YES\\n\"\n#define no cout<<\"NO\\n\"\nconst ll MOD = 998244353;\n// Maths\nll fact(ll n)          { if(n==0) return 1; ll res = 1; for (ll i = 2; i <= n; i++) (res = res%MOD * i%MOD)%MOD; return res; }\nll nPr(ll n, ll r)     { return fact(n) / fact(n - r); }\nll nCr(ll n, ll r)     { return fact(n) / (fact(r) * fact(n - r)); }\nll gcd(ll a, ll b)     { if (b == 0) return a; return gcd(b, a % b); }\nll lcm(ll a, ll b)     { return (a * b) / gcd(a, b);}\nll mypow(ll a, ll b)   { ll ans = 1; while(b){ if (b&1) ans = (ans*a) ; b /= 2; a = (a*a); } return ans; }\nbool isPrime(ll n)     { if(n <= 1) return false; for(ll i = 2; i <= sqrt(n); i++) if(n % i == 0) return false; return true; }\nbool is_bound(int x,int y, int n, int m) {return x >= 0 && x < n && y >= 0 && y < m;}\n\nclass Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n=colors.size(), i=0, j=1, cnt=0;\n        int xx = n+k;\n        while(j<xx && i<n) {\n            int y=j, res =y%n;\n            int yy=n+k-1;\n            while(colors[res]!=colors[(res-1+n)%n] && y<yy){y++; res=y%n;}\n            int ans=y-i-k+1;\n            cnt+=max(ans, 0);\n            i=y;\n            j=i+1;\n        }  \n        return cnt;\n    }\n};",
    "submit_ts": "1720281351",
    "subm_id": "1311821940"
}