{
    "username": "etian6795",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        int q = queries.length;\n        int[] ans = new int[q];\n        int[] jump = new int[n];\n        int[] dp = new int[n];\n        for(int i = 0; i < n; i++) {\n            dp[i] = i;\n            jump[i] = i+1;\n        }\n\n        for(int i = 0; i < q; i++) {\n            int u = queries[i][0];\n            int v = queries[i][1];\n            if(jump[u] < 0 || jump[u] > v) {\n                ans[i] = ans[i-1];\n                continue;\n            }\n            jump[u] = v;\n            int idx = u+1;\n            int cnt = 0;\n            while(idx < v) {\n                if(jump[idx] > 0) {\n                    jump[idx] = -v;\n                    idx++;\n                    cnt++;\n                } else {\n                    int temp = idx;\n                    idx = -jump[idx];\n                    jump[temp] = Math.min(jump[temp], -v);\n                }\n            }\n            if(i==0) ans[i] = n-1-cnt;\n            else ans[i] = ans[i-1]-cnt;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722740960",
    "subm_id": "1343733102"
}