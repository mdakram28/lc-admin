{
    "username": "Akksharvan",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries (int N, vector<vector<int>> &Q) {\n        int M = size(Q); vector<int> R(M);\n        vector<int> A(N); for (int i = 0; i < N - 1; i++) A[i] = i + 1;\n\n        unordered_set<int> B;\n        for (int i = 0; i < N; i++) B.insert(i);\n\n\n        for (int i = 0; i < M; i++) {\n            int U = Q[i][0], V = Q[i][1];\n            if (!B.count(U) || !B.count(V)) { R[i] = size(B) - 1; continue; }\n\n            for (int j = A[U]; j < V; j++) B.erase(j);\n            A[U] = V; R[i] = size(B) - 1; continue;\n        }\n\n        return R;\n    }\n};",
    "submit_ts": "1722740547",
    "subm_id": "1343722537"
}