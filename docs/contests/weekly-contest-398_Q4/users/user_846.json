{
    "username": "Googlehsiehh",
    "submission": "class Solution {\n    int k;\n    Map<String, Integer> dp = new HashMap<>();\n    public int waysToReachStair(int k) {\n        this.k = k;\n        return dfs(1, 0, 0);\n    }\n    \n    private int dfs(long i, long j, int fromUpper) {\n        if (i > k + 1) {\n            return 0;\n        }\n        String key = i + \"_\" + j + \"_\" + fromUpper;\n        if (dp.containsKey(key)) {\n            return dp.get(key);\n        }\n        int res = 0;\n        if (i == k) {\n            res++;\n        }\n        res += dfs(i + (1 << j), j + 1, 0);\n        \n        if (fromUpper == 0 && i != 0) {\n            res += dfs(i - 1, j, 1);\n        }\n        dp.put(key, res);\n        return res;\n    }\n}",
    "submit_ts": "1716090017",
    "subm_id": "1261857136"
}