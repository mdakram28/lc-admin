{
    "username": "arignote",
    "submission": "class Solution {\n    public int minimumSum(int[][] grid) {\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < grid.length - 1; i++) {\n            min = Math.min(min, Math.min(minimumSum(grid, 0, i, 0, grid[0].length -\n1) + minimumSum2(grid, i + 1, grid.length - 1, 0, grid[0].length - 1),\nminimumSum2(grid, 0, i, 0, grid[0].length - 1) + minimumSum(grid, i + 1, grid.length\n- 1, 0, grid[0].length - 1)));\n        }\n        for (int i = 0; i < grid[0].length - 1; i++) {\n            min = Math.min(min, Math.min(minimumSum(grid, 0, grid.length - 1, 0, i) +\nminimumSum2(grid, 0, grid.length - 1, i + 1, grid[0].length - 1), minimumSum2(grid,\n0, grid.length - 1, 0, i) + minimumSum(grid, 0, grid.length - 1, i + 1,\ngrid[0].length - 1)));\n}\nreturn min; }\n    private int minimumSum2(int[][] grid, int x1, int x2, int y1, int y2) {\n        int min = Integer.MAX_VALUE;\n        for (int i = x1; i < x2; i++) {\n            min = Math.min(min, minimumSum(grid, x1, i, y1, y2) + minimumSum(grid, i\n+ 1, x2, y1, y2));\n        }\n        for (int i = y1; i < y2; i++) {\n            min = Math.min(min, minimumSum(grid, x1, x2, y1, i) + minimumSum(grid,\nx1, x2, i + 1, y2));\n}\nreturn min; }\n    private int minimumSum(int[][] grid, int x1, int x2, int y1, int y2) {\n        int minX = 30, maxX = 0, minY = 30, maxY = 0;\n        for (int i = x1; i <= x2; i++) {\n            for (int j = y1; j <= y2; j++) {\n                if (grid[i][j] == 1) {\n                    minX = Math.min(minX, i);\n                    maxX = Math.max(maxX, i);\n                    minY = Math.min(minY, j);\n                    maxY = Math.max(maxY, j);\n} }\n\n }\n        return minX > maxX ? 1000 : (maxX - minX + 1) * (maxY - minY + 1);\n    }\n}",
    "submit_ts": 1719113344.0
}