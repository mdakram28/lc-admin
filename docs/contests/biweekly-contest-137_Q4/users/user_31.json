{
    "username": "DDD",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        using ll = long long;\n        int n = board.size();\n        int m = board[0].size();\n        vector<vector<int>> f;\n        for (int i = 0; i < n; ++i)\n        for (int j = 0; j < m; ++j)\n            f.push_back(vector<int>({i, j}));\n        sort(f.begin(), f.end(), [&](auto& a, auto& b){\n            return board[a[0]][a[1]] > board[b[0]][b[1]];\n        });\n        long long ret = ll(board[0][0]) + ll(board[1][1]) + ll(board[n - 1][m - 1]);\n        for (int i = 0; i < f.size(); ++i){\n            for (int j = i + 1; j < f.size(); ++j){\n                if (ll(board[f[i][0]][f[i][1]]) + board[f[j][0]][f[j][1]] * 2ll <= ret) break;\n                if (f[i][0] == f[j][0] || f[i][1] == f[j][1]) continue;\n                for (int k = j + 1; k < f.size(); ++k){\n                    if (ll(board[f[i][0]][f[i][1]]) + ll(board[f[j][0]][f[j][1]]) + ll(board[f[k][0]][f[k][1]]) <= ret) break;\n                    if (f[i][0] == f[k][0] || f[i][1] == f[k][1]) continue;\n                    if (f[j][0] == f[k][0] || f[j][1] == f[k][1]) continue;\n                    ret = ll(board[f[i][0]][f[i][1]]) + ll(board[f[j][0]][f[j][1]]) + ll(board[f[k][0]][f[k][1]]);\n                    break;\n                }                \n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723907216",
    "subm_id": "1359096308"
}