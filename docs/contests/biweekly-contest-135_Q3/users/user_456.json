{
    "username": "zen-dijkstra7pa",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        c = defaultdict(int)\n        n = len(nums)\n        for i in range(n // 2):\n            c[abs(nums[i] - nums[n - i - 1])] += 1\n        li = sorted(c.items(), key=lambda x: (-x[1], x[0]))\n        ans = n\n\n        for j, e in enumerate(li):\n            if j > 0 and li[j][1] == li[j - 1][1]:\n                continue\n            if e[0] <= k // 2:\n                return min(ans, n // 2 - e[1])\n            count = 0\n            for i in range(n // 2):\n                if abs(nums[i] - nums[n - i - 1]) == e[0]:\n                    continue\n                v1 = e[0] + nums[i] if nums[i] <= k // 2 else nums[i] - e[0]\n                v2 = e[0] + nums[n - i - 1] if nums[n - i - 1] <= k // 2 else nums[n - i - 1] - e[0]\n                count += 1 if 0 <= v1 <= k or 0 <= v2 <= k else 2\n            ans = min(ans, count)\n        return ans",
    "submit_ts": "1721487861",
    "subm_id": "548311835"
}