{
    "username": "54chin",
    "submission": "impl Solution {\n    pub fn minimum_cost(m: i32, n: i32, mut h: Vec<i32>, mut v: Vec<i32>) -> i64 {\n        h.sort_unstable();\n        v.sort_unstable();\n        \n        let (mut i, mut j, mut h_pieces, mut v_pieces, mut cost) = (h.len() - 1, v.len() - 1, 1, 1, 0i64);\n        \n        while i != usize::MAX && j != usize::MAX {\n            if h[i] > v[j] {\n                cost += h[i] as i64 * v_pieces as i64;\n                h_pieces += 1;\n                i = i.wrapping_sub(1);\n            } else {\n                cost += v[j] as i64 * h_pieces as i64;\n                v_pieces += 1;\n                j = j.wrapping_sub(1);\n            }\n        }\n        \n        while i != usize::MAX {\n            cost += h[i] as i64 * v_pieces as i64;\n            i = i.wrapping_sub(1);\n        }\n        \n        while j != usize::MAX {\n            cost += v[j] as i64 * h_pieces as i64;\n            j = j.wrapping_sub(1);\n        }\n        \n        cost\n    }\n}",
    "submit_ts": "1720925046",
    "subm_id": "1320240840"
}