{
    "username": "SohamKanji",
    "submission": "class Solution {\npublic:\n    // int solve(vector<int>& nums, int k, int i) {\n    //     if(dp[i][k] != -1) {\n    //         return dp[i][k];\n    //     }\n    //     int ans = 1;\n    //     for(int j=i+1; j<nums.size(); j++) {\n    //         if(nums[j]!=nums[i] && k>0) {\n    //             ans = max(solve(nums, k-1, j)+1, ans);\n    //         }\n    //         if(nums[j]==nums[i]) {\n    //             ans = max(solve(nums, k, j)+1, ans);\n    //         }\n    //     }\n    //     return dp[i][k] = ans;\n    // }\n    void update(int ss, int se, int idx, int i, int val, vector<int>& st) {\n        if(ss>idx || se<idx) {\n            return;\n        }\n        if(ss==se && ss==idx) {\n            st[i] = max(st[i], val);\n            return;\n        }\n        int m = ss + (se-ss)/2;\n        update(ss, m, idx, 2*i+1, val, st);\n        update(m+1, se, idx, 2*i+2, val, st);\n        st[i] = max(st[2*i+1], st[2*i+2]);\n    }\n    int getMax(int ss, int se, int qs, int qe, int i, vector<int>& st) {\n        if(ss>qe || se<qs) {\n            return 0;\n        }\n        if(ss>=qs && se<=qe) {\n            return st[i];\n        }\n        int m = ss + (se-ss)/2;\n        return max(getMax(ss, m, qs, qe, 2*i+1, st), getMax(m+1, se, qs, qe, 2*i+2, st));\n    }\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        map<int,int> mp;\n        for(auto &x: nums) {\n            mp[x] = 0;\n        }\n        int size = 0;\n        for(auto &x: mp) {\n            x.second = size;\n            size++;\n        }\n        vector<vector<int>> same_dp(k+1, vector<int>(size, 0));\n        int res = 0;\n        vector<vector<int>> dp(k+1, vector<int>(4*size, 0));\n        for(int i=n-1; i>=0; i--) {\n            for(int j=0; j<=k; j++) {\n                int ans = 1;\n                int index = mp[nums[i]];\n                ans = max(ans, same_dp[j][index]+1);\n                if(j > 0) {\n                    if(index-1>=0) {\n                        ans = max(ans, getMax(0, size-1, 0, index-1, 0, dp[j-1]) + 1);\n                    }\n                    if(index+1<size) {\n                        ans = max(ans, getMax(0, size-1, index+1, size-1, 0, dp[j-1]) + 1);\n                    }\n                }\n                same_dp[j][index] = max(same_dp[j][index], ans);\n                update(0, size-1, index, 0, ans, dp[j]);\n                if(j==k) {\n                    res = max(res, ans);\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1717861466",
    "subm_id": "1281791950"
}