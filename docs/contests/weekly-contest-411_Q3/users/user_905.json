{
    "username": "songoku",
    "submission": "public class Solution {\n    public string LargestPalindrome(int n, int k) {\n        if(k == 1)\n        {\n            return new string('9', n);\n        }else if(k == 2)\n        {\n            if(n == 1)\n                return \"8\";\n            \n            return \"8\" + new string('9', n - 2) + \"8\";\n        }else if(k == 3)\n        {\n            return new string('9', n);\n        }else if(k == 4)\n        {\n            if(n == 1)\n            {\n                return \"8\";\n            }else if(n == 2)\n            {\n                return \"88\";\n            }else if(n == 3)\n            {\n                return \"888\";\n            }else {\n                return \"88\" + new string('9', n - 4) + \"88\";\n            }\n        }else if(k == 5)\n        {\n            if(n == 1)\n                return \"5\";\n            return \"5\" + new string('9', n - 2) + \"5\";\n        }else if(k == 6)\n        {\n            if(n == 1)\n            {\n                return \"6\";\n            }else if(n == 2)\n            {\n                return \"66\";\n            }else if(n == 3)\n            {\n                return \"888\";\n            }else {\n                if(n % 2 == 0)\n                {\n                    return \"8\" + new string('9', n/2 - 2) + \"77\" + new string('9', n/2 - 2) + \"8\";\n                }else{\n                    return \"8\" + new string('9', (n - 1) / 2 - 1) + \"8\" + new string('9', (n - 1) / 2 - 1) + \"8\";\n                }\n            }\n        }else if(k == 7)\n        {\n            if(n == 1)\n            {\n                return \"7\";\n            }else if(n == 2)\n            {\n                return \"77\";\n            }else if(n == 3)\n            {\n                return \"959\";\n            }else if(n == 4)\n            {\n                return \"9779\";\n            }else if(n == 5) {\n                return \"99799\";\n            }else if(n == 6) {\n                return \"999999\";\n            }else{\n                // BigInteger max = BigInteger.Pow(BigInteger.Parse(\"10\"), n) - 1;\n                // BigInteger min = BigInteger.Pow(BigInteger.Parse(\"10\"), n - 1);\n                // while (max >= min) {\n                //     if (IsPalindrome(max.ToString()) && max % k == 0) {\n                //         return max.ToString();\n                //     }\n                //     max--;\n                // }\n                // return \"\";\n                \n                \n\n                string h = new string('9', (n + 1) / 2);\n                while (true) {\n                    string palind = CreatePalind(h, n % 2 == 1);\n\n                    if ((BigInteger.Parse(palind) % k) == 0) \n                    {\n                        return palind;\n                    }\n\n                    BigInteger x = BigInteger.Parse(h) - 1;\n                    if (x == 0) \n                    {\n                        break;\n                    }\n                    \n                    h = x.ToString();\n                }\n                return \"\"; \n            }\n        }else if(k == 8)\n        {\n            if(n == 1)\n            {\n                return \"8\";\n            }else if(n == 2)\n            {\n                return \"88\";\n            }else if(n == 3)\n            {\n                return \"888\";\n            }else if(n == 4)\n            {\n                return \"8888\";\n            }else if(n == 5)\n            {\n                return \"88888\";\n            }else {\n                return \"888\" + new string('9', n - 6) + \"888\";\n            }\n            \n        }else{\n            return new string('9', n);\n        }\n\n    }\n    \n    string CreatePalind(string h, bool o) \n    {\n        StringBuilder ans = new StringBuilder(h);\n        if (o) {\n            h = h.Substring(0, h.Length - 1);\n        }\n        char[] halfArray = h.ToCharArray();\n        Array.Reverse(halfArray);\n        ans.Append(new string(halfArray));\n        return ans.ToString();\n    }\n    \n    \n    private bool IsPalindrome(string str) {\n        int left = 0, right = str.Length - 1;\n        while (left < right) {\n            if (str[left] != str[right]) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n}",
    "submit_ts": "1723953196",
    "subm_id": "1359814873"
}