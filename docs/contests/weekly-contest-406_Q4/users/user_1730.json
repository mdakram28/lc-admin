{
    "username": "Aquinx",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        \n        sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n        sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n        long long totalCost = 0;\n        int hC = 1;\n        int vC = 1; \n        int i = 0, j = 0;           \n\n        while (i<m-1 && j<n-1) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                totalCost += static_cast<long long>(horizontalCut[i]) * vC;\n                hC++;\n                i++;\n\n            } else {\n                totalCost += static_cast<long long>(verticalCut[j]) * hC;\n                vC++;\n                j++;\n            }\n        }\n\n        while (j<n-1) {\n            totalCost += static_cast<long long>(verticalCut[j]) * hC;\n            j++;\n        }\n\n        while (i<m-1) {\n            totalCost += static_cast<long long>(horizontalCut[i]) * vC;\n            i++;\n        }\n        return totalCost;\n    }\n};",
    "submit_ts": "1720926430",
    "subm_id": "1320286028"
}