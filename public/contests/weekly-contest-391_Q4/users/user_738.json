{
    "username": "agitated-albattanil1g",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& a) {\n        multiset<int> m, n;\n        \n        for(auto& e : a) {\n            int x = e[0], y = e[1];\n            m.insert(x + y);\n            n.insert(x - y);\n\n        }\n        int ans = 1e9;\n        for(auto& e : a) {\n            int x = e[0], y = e[1];\n            m.erase(m.find(x + y));\n            n.erase(n.find(x - y));\n            \n            \n            ans = min(ans, max(*m.rbegin() - *m.begin(), *n.rbegin() - *n.begin()));\n            \n            m.insert(x + y);\n            n.insert(x - y);\n        }\n        return ans;\n//         unordered_map<pair<int,int>, int> m;\n//         for(auto& x : a) {\n//             m[{x[0], x[1]}] += 1;\n            \n//         }\n        \n//         vector<int> i, j;\n//         for(auto& [k, v] : m) {\n//             if(v == 0) continue;\n//             i.push_back(k.first + k.second);\n//             j.push_back(k.first + k.second);\n//         }\n        \n//         sort(i.begin(), i.end());\n//         sort(j.begin(), j.end());\n    }\n};"
}