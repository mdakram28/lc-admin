{
    "username": "g129512",
    "submission": "from collections import Counter\nfrom typing import List\n\n\nclass Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m,n=len(grid),len(grid[0])\n        res=0\n        for i in range(m//2):\n            for j in range(n//2):\n                ct=Counter([grid[i][j], grid[i][n-1-j],grid[m-1-i][j],grid[m-1-i][n-1-j]])\n                res+=min(ct[1],ct[0])-0\n        if m%2==1 and n%2==1 and grid[m//2][n//2] == 1:\n            res+=1\n        pairs = 0\n        pairsd = 0\n        pairs1 = 0\n        if m%2==1:\n            pairs += n//2\n            for i in range(n//2):\n                if grid[m//2][i] != grid[m//2][n-1-i]:\n                    pairsd+=1\n                elif grid[m//2][i]==1:\n                    pairs1+=1\n        if n%2==1:\n            pairs += m//2\n            for i in range(m//2):\n                if grid[i][n//2] != grid[m-1-i][n//2]:\n                    pairsd+=1\n                elif grid[i][n//2]==1:\n                    pairs1+=1\n        if pairsd!=0:\n            res+=pairsd\n        elif pairs1%2!=0:\n            res+=2\n        return res",
    "submit_ts": "1722698117",
    "subm_id": "1343170208"
}