{
    "username": "annoyingpatrick",
    "submission": "class Solution {\n    class TrieNode\n    {\n        public:\n        TrieNode* next[26];\n        bool end;\n        int cost;\n        TrieNode()\n        {\n            end = false;\n            for (int i=0;i<26;i++)\n                next[i] = NULL;\n        }\n    };\n    TrieNode* root;\n    int memo[300];\n    vector<string>rets;\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        unordered_map<string, int> m;\n\n        for (int i = 0; i < words.size(); ++i) {\n            if (m.count(words[i]) == 0) {\n                m[words[i]] = costs[i]; \n            } else if (m[words[i]] > costs[i]) {\n                m[words[i]] = costs[i];\n            }\n        }\n        \n        root = new TrieNode();\n\n        for (auto &w : m)\n        {\n            TrieNode* node = root;\n\n            string word = w.first;\n            reverse(word.begin(), word.end());\n            for (auto ch: word)\n            {\n                if (node->next[ch-'a']==NULL)\n                    node->next[ch-'a'] = new TrieNode();\n                node = node->next[ch-'a'];\n            }\n            node->end = true;\n            node->cost = w.second;\n        }\n\n        vector<int> dp(target.size(), 1e9);\n        for (int i = 0; i < target.size(); ++i) {\n            // go through the trie\n            TrieNode* node = root;\n            //cout << \"i: \" << i << endl;\n            for (int j = i; j >= 0; --j) {\n                if (node->next[target[j]-'a'] == NULL) {\n                    break;\n                }\n                node = node->next[target[j]-'a'];\n                if (node->end) {\n                    //cout << \"j: \" << j << \" cost: \" << node->cost << endl;\n                    int cost = node->cost;\n                    if (j == 0) {\n                        dp[i] = min(dp[i], cost);\n                    } else {\n                        dp[i] = min(dp[i], dp[j - 1] + cost);\n                    }\n                }\n            }\n            \n        }\n        //cout << root->next['h' - 'a']->next['z'-'a']->cost << endl;\n        return dp[target.size() - 1] == 1e9 ? -1 : dp[target.size() - 1];\n    }\n};\n\n\n/*\nInput:\n\"tifrzh\"\n[\"zh\",\"tifr\",\"tifrzh\"]\n[1,5,9]\nOutput:\n9\nExpected:\n6\n*/",
    "submit_ts": "1720324615",
    "subm_id": "1312403860"
}