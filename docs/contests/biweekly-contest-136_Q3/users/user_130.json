{
    "username": "KLatitude",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        int res = 0;\n        if (n % 2 == 1 && m % 2 == 1) \n            res += grid[n / 2][m / 2];\n\n        int mid = 0, sum = 0;\n        if (n % 2 == 1) {\n            for (int i = 0, j = m - 1; i <= j; i ++ , j -- ) {\n                if (grid[n / 2][i] != grid[n / 2][j])\n                    mid ++ ;\n                else if (grid[n / 2][i] == 1)\n                    sum += 2;\n            }\n        }\n        if (m % 2 == 1) {\n            for (int i = 0, j = n - 1; i <= j; i ++ , j -- ) {\n                if (grid[i][m / 2] != grid[j][m / 2])\n                    mid ++ ;\n                else if (grid[i][m / 2] == 1)\n                    sum += 2;\n            }\n        }\n        if (sum % 4 == 0)\n            res += mid;\n        else if (sum % 4 == 2) {\n            if (mid == 0)\n                res += 2;\n            else\n                res += mid;\n        }\n\n        for (int i = 0; i < n / 2; i ++ ) {\n            for (int j = 0; j < m / 2; j ++ ) {\n                int cur = grid[i][j] + grid[i][m - 1 - j];\n                cur += grid[n - 1 - i][j] + grid[n - 1 - i][m - 1 - j];\n\n                res += min(cur, 4 - cur);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722696662",
    "subm_id": "552262152"
}