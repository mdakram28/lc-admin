{
    "username": "ABleetcode_17",
    "submission": "class Solution:\n    MOD = 10**9 + 7\n    MAX_INVERSIONS = 400\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n#         MOD = 10**9 + 7\n        \n#         requirements.sort()\n#         req_len = len(requirements)\n\n#         dp = [[[0] * (req_len + 1) for _ in range(n * (n - 1) // 2 + 1)] for _ in range(n + 1)]\n#         dp[0][0][0] = 1\n        \n#         for i in range(1, n + 1):\n#             for j in range(i * (i - 1) // 2 + 1):\n#                 for l in range(i):\n#                     for k in range(req_len + 1):\n#                         if l <= j:\n#                             # Update dp[i][j][k] by adding dp[i-1][j-l][k] if we have a valid permutation\n#                             dp[i][j][k] = (dp[i][j][k] + dp[i-1][j-l][k]) % MOD\n#                             # Check if the current subarray meets the next requirement\n#                             if k < req_len and requirements[k][0] == i - 1 and requirements[k][1] == j:\n#                                 dp[i][j][k+1] = (dp[i][j][k+1] + dp[i-1][j-l][k]) % MOD\n        \n#         result = 0\n#         for j in range(n * (n - 1) // 2 + 1):\n#             result = (result + dp[n][j][req_len]) % MOD\n        \n#         return result\n        reqMap = {req[0] + 1: req[1] for req in requirements}\n\n        permCounts = [[0] * (self.MAX_INVERSIONS + 1) for _ in range(n + 1)]\n        permCounts[0][0] = 1\n\n        for length in range(1, n + 1):\n            for inv in range(self.MAX_INVERSIONS + 1):\n                for newPos in range(length):\n                    prevInv = inv - newPos\n                    if prevInv >= 0:\n                        permCounts[length][inv] = (permCounts[length][inv] + permCounts[length - 1][prevInv]) % self.MOD\n\n            if length in reqMap:\n                targetInv = reqMap[length]\n                for inv in range(self.MAX_INVERSIONS + 1):\n                    if inv != targetInv:\n                        permCounts[length][inv] = 0\n\n        result = sum(permCounts[n]) % self.MOD\n        return result",
    "submit_ts": 1719069910.0
}