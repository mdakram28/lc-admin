{
    "username": "s1967",
    "submission": "class Solution {\npublic:\nbool calc(int mid,int index,int len){\n    return len*1ll*len>index-mid+1-len;\n}\n    int numberOfSubstrings(string s) {\n        int n=s.length();\n        int rem=0;\n        for(int len=1;len<=sqrt(n);len++){\n            deque<int>dq;\n            int last_index=-1;\n            for(int i=0;i<n;i++){\n                if(s[i]=='0')dq.push_back(i);\n                if(!dq.empty()&&dq.size()>len){\n                    last_index=dq.front();\n                    dq.pop_front();\n                }\n                if(dq.size()==len){\n                    int low=last_index+1;\n                    int high=dq.front();\n                    while(high-low>1){\n                        int mid=low+(high-low)/2;\n                        if(calc(mid,i,len))high=mid;\n                        else low=mid+1;\n                    }\n                    int p1;\n                    if(calc(low,i,len))p1=low;\n                    else if(calc(high,i,len))p1=high;\n                    else p1=-1;\n                    if(p1!=-1)rem+=(dq.front()-p1+1);\n                }\n            } \n        }\n        cout<<rem<<endl;\n        int now=sqrt(n)+1;\n        deque<int>dq;\n        // cout<<now<<endl;\n        for(int i=0;i<n;i++){\n            if(s[i]=='0'){\n                if(!dq.empty()&&dq.size()==now){\n                    dq.pop_front();\n                }\n            }\n            if(s[i]=='0')dq.push_back(i);\n            if(dq.size()==now){\n                cout<<dq.front()<<endl;\n                rem=rem+dq.front()+1;\n            }\n        }\n        cout<<rem<<endl;\n        int ans=(n*1ll*(n-1))/2+n;\n        return ans-rem;\n    }\n};",
    "submit_ts": "1722138109",
    "subm_id": "1335782355"
}