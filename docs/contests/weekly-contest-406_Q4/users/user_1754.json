{
    "username": "su_D_oaptrana777",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, int>> cuts;\n        \n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 0});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 1});\n        }\n        \n    \n        sort(cuts.rbegin(), cuts.rend());\n        \n\n        long long horizontal_pieces = 1;\n        long long vertical_pieces = 1;\n        \n        \n        long long total_cost = 0;\n        \n        for (auto& cut : cuts) {\n            int cost = cut.first;\n            int cut_type = cut.second;\n            if (cut_type == 0) { \n                total_cost += cost * vertical_pieces;\n                horizontal_pieces++;\n            } else {  \n                total_cost += cost * horizontal_pieces;\n                vertical_pieces++;\n            }\n        }\n        \n        return total_cost;\n        \n    }\n};",
    "submit_ts": "1720925840",
    "subm_id": "1320267873"
}