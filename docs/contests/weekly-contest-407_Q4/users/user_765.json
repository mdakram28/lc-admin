{
    "username": "chintsai",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int n = nums.size();\n        int v[n];\n        for (int i = 0; i < n; i++) {\n            v[i] = nums[i] - target[i];\n        }\n        for (int i = 0; i < n; i++) {\n            if (v[i]) {\n                int j = i + 1;\n                while (j < n && (v[j] < 0) == (v[i] < 0)) {\n                    j++;\n                }\n                if (v[i] < 0) {\n                    for (int k = i; k < j; k++) {\n                        v[k] = -v[k];\n                    }\n                }\n                for (int k = i; k < j; k++) {\n                    if (k == i) res += v[k];\n                    else res += max(0, v[k] - v[k - 1]);\n                }\n                i = j - 1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721530918",
    "subm_id": "548381880"
}