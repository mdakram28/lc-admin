{
    "username": "asmitpapney",
    "submission": "class Solution {\npublic:\n    // a b c d e f\n    // a b c d e f a b c d e f\n    void getZarr(string str, int Z[])\n    {\n        int n = str.length();\n        int L, R, k;\n\n        L = R = 0;\n        for (int i = 1; i < n; ++i)\n        {\n            if (i > R)\n            {\n                L = R = i;\n                while (R<n && str[R-L] == str[R])\n                    R++;\n                Z[i] = R-L;\n                R--;\n            }\n            else\n            {\n                k = i-L;\n                if (Z[k] < R-i+1)\n                    Z[i] = Z[k];\n                else\n                {\n                    L = i;\n                    while (R<n && str[R-L] == str[R])\n                        R++;\n                    Z[i] = R-L;\n                    R--;\n                }\n            }\n        }\n    }\n    \n    int ZAlgoSearch(string text, string pattern){\n        int count = 0 ;\n        string concat = pattern + \"$\" + text;\n        int l = concat.length();\n        int Z[l];\n        for(int i=0; i<l; i++) Z[i] = 0; \n        getZarr(concat, Z);\n        for (int i = 0; i < l; ++i)\n        {\n            if (Z[i] == pattern.length())\n                    count++;\n        }\n        return count;\n    }\n \n\n \n    \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        string str;\n        for(auto x:colors){\n            str += to_string(x);\n        }\n        \n        str += str.substr(0, k-1);\n        \n        string pat1, pat2; \n        int curr = 1;\n        for(int i=0; i<k ; i++){\n            pat1 += to_string(curr);\n            curr = !curr;\n            pat2 += to_string(curr);\n        }\n        // cout<<str<<\" pat1 = \"<<pat1<<\" pat2 = \"<<pat2<<endl; \n        return ZAlgoSearch(str, pat1) + ZAlgoSearch(str, pat2);\n    }\n};",
    "submit_ts": "1720277855",
    "subm_id": "1311683154"
}