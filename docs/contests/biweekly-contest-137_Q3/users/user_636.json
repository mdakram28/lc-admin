{
    "username": "Aditya Aggarwal",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        vector<vector<int>> data;\n        dataf(grid, data);\n        return solve(data);\n    }\n    \nprivate:\n    void dataf(const vector<vector<int>>& grid, vector<vector<int>>& data) {\n        int rows = grid.size(), cols = grid[0].size();\n        \n        for (int i = 0; i < rows; ++i) {\n            priority_queue<pair<int, int>> pq;\n            for (int j = 0; j < cols; ++j) {\n                pq.push({grid[i][j], j});\n            }\n            \n            for (int k = 0; k < 3 && !pq.empty(); ++k) {\n                auto top = pq.top();\n                pq.pop();\n                data.push_back({top.first, i, top.second});\n            }\n        }\n    }\n    \n    long long solve(const vector<vector<int>>& data) {\n        long long mS = LLONG_MIN;\n        int n = data.size();\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                for (int k = j + 1; k < n; ++k) {\n                    if (isValid(data[i], data[j], data[k])) {\n                        long long sum = static_cast<long long>(data[i][0]) + data[j][0] + data[k][0];\n                        mS = max(mS, sum);\n                    }\n                }\n            }\n        }\n        \n        return mS;\n    }\n    \n    bool isValid(const vector<int>& a, const vector<int>& b, const vector<int>& c) {\n        return a[1] != b[1] && a[1] != c[1] && b[1] != c[1] &&\n               a[2] != b[2] && a[2] != c[2] && b[2] != c[2];\n    }\n};\n",
    "submit_ts": "1723909088",
    "subm_id": "1359179132"
}