{
    "username": "ding-fei-5",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        points.sort()\n        ai, bi = 0, 0\n\n        self.res = [-1]\n        def do(ai, bi):\n            a, b = points[ai]\n            c, d, = points[bi]\n            ans = abs(a-c) + abs(b-d)\n            if ans > self.res[0]:\n                self.res = [ans, [ai, bi]]\n        n = len(points)\n        for i in range(n):\n            x, y = points[i]\n            do(ai,i)\n            do(bi,i)\n            if x+y < sum(points[ai]):\n                ai= i\n            if y-x > points[bi][1] - points[bi][0]:\n                bi = i\n        ans = self.res[0]\n        A, B = self.res[1]\n        \n        self.res = [-1]\n        ai = bi = 0 if A != 0 else 1\n        for i in range(n):\n            if i != A:\n                x, y = points[i]\n                do(ai,i)\n                do(bi,i)\n                if x+y < sum(points[ai]):\n                    ai = i\n                if y-x > points[bi][1] - points[bi][0]:\n                    bi = i\n        ans = min(ans, self.res[0])\n        \n        A = B\n        self.res = [-1]\n        ai = bi = 0 if A != 0 else 1\n        for i in range(n):\n            if i != A:\n                x, y = points[i]\n                do(ai,i)\n                do(bi,i)\n                if x+y < sum(points[ai]):\n                    ai = i\n                if y-x > points[bi][1] - points[bi][0]:\n                    bi = i\n        ans = min(ans, self.res[0])\n        return ans"
}