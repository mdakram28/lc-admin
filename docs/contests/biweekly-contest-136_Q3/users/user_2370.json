{
    "username": "Monalisa1_",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        res, happen, cnt = 0, 0, 0\n        \n        for i in range(n // 2):\n            for j in range(m // 2):\n                take = [grid[i][j], grid[n - i - 1][j], grid[i][m - j - 1], grid[n - i - 1][m - j - 1]]\n                res += min(sum(take), 4 - sum(take))\n                \n        if n % 2 != 0 and m % 2 != 0 and grid[n // 2][m // 2] == 1:\n            res += 1\n            \n        if n % 2 != 0:\n            for j in range(m // 2):\n                if grid[n // 2][j] != grid[n // 2][m - j - 1]:\n                    res += 1\n                    happen += 1\n                else:\n                    if grid[n // 2][j] == 1:\n                        cnt += 1\n        if m % 2 != 0:\n            for i in range(n // 2):\n                if grid[i][m // 2] != grid[n - i - 1][m // 2]:\n                    res += 1\n                    happen += 1\n                else:\n                    if grid[i][m // 2] == 1:\n                        cnt += 1\n        if happen == 0 and cnt % 2 != 0:\n            res += 2\n        \n        return res ",
    "submit_ts": "1722700479",
    "subm_id": "1343243180"
}