{
    "username": "hdchen",
    "submission": "class Solution {\n    class Node {\n        Node prev, next;\n        public int id;\n        public Node(int val) {\n            id = val;\n        }\n        public void insert(Node b) {\n            b.next = next;\n            b.prev = this;\n            next = b;\n        }\n        public void delete() {\n            if (null != next) next.prev = prev;\n            if (null != prev) prev.next = next;\n            prev = next = null;\n        }\n    }    \n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        Node[] nodes = new Node[n];\n        for (int i = 0; i < n; ++i) {\n            nodes[i] = new Node(i);\n            if (0 != i) nodes[i - 1].insert(nodes[i]);\n        }\n        int m = queries.length, cnt = n - 1;\n        int[] res = new int[m];\n        for (int i = 0; i < m; ++i) {\n            int a = queries[i][0], b = queries[i][1];\n            if (null != nodes[a] && null != nodes[b]) {\n                while (nodes[a].next.id != nodes[b].id) {\n                    nodes[nodes[a].next.id] = null;                    \n                    nodes[a].next.delete();                    \n                    cnt--;\n                }\n            }\n            res[i] = cnt;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722741086",
    "subm_id": "1343736279"
}