{
    "username": "pavan_kalyan_pk",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(); \n        int i, j, ans = 0, x, countOnes = 0; \n        map<int, int> mp; \n  \n        for (i=0;i< n/2;i++) { \n            for (j=0;j<m/2;j++) { \n                mp[(grid[i][m-1- j])]++; \n                mp[(grid[i][j])]++; \n                mp[(grid[n - 1 - i][m - 1 - j])]++; \n                mp[(grid[n - 1 - i][j])]++; \n                x = 0; \n    \n                for (auto it = mp.begin(); \n                    it != mp.end(); it++) { \n                    x = max(x, it->second); \n                }\n\n                if(x == 1) countOnes += 4;\n    \n                ans = ans + 4 - x; \n    \n                mp.clear(); \n            } \n        } \n\n        // cout<<\"ans\"<<ans<<'\\n';\n        int c1=0, c2=0;\n    \n        if (n % 2 == 1) { \n            for (i = 0; i < m/2; i++) { \n                if (grid[n/ 2][i] != grid[n/ 2][m - 1 - i]) \n                    c1++; \n                if(grid[n/ 2][i] == 1 &&  grid[n/ 2][m - 1 - i] == 1) countOnes += 2;\n            } \n        } \n    \n        if (m % 2 == 1) { \n            for (i = 0; i < n/ 2; i++) { \n                if (grid[i][m/2] != grid[n-1-i][m/2]) \n                    c2++; \n                if(grid[i][m / 2] == 1 &&  grid[n-1-i][m/2] == 1) countOnes += 2;\n            } \n        }\n        if(n%2 && m%2 && grid[n/2][m/2] == 1)  countOnes += 1;\n\n        if(countOnes % 4 == 0) return ans + c1 + c2;\n        else if(countOnes % 4 == 2){\n            if(c1 > 0 || c2 > 0) return ans + c1 + c2;\n            else return ans + c1 + c2 + 2;\n        }\n        else if(countOnes % 4 == 3){\n            if(c1 > 0 || c2 > 0) return ans + c1 + c2 + 1;\n            else return ans + c1 + c2 + 3;\n        }\n\n        return ans + c1 + c2 + 1;\n    }\n};",
    "submit_ts": "1722698691",
    "subm_id": "1343188693"
}