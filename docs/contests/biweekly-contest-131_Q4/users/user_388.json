{
    "username": "shreyaUzumaki",
    "submission": "class Solution {\npublic:\n    \n    const int oo = 0x3f3f3f3f;\n    struct seg_tree{\n        int n;\n        vector<int> tree;\n        seg_tree(int x = 1){n = x; tree.assign(n << 2 , -1);}\n\n        void upd(const int pos , const int val , int l , int r , int t){\n            if(l == r){\n                tree[t] = val;\n                return ;\n            }\n            int mid = (l + r) >> 1;\n            if(pos <= mid)\n                upd(pos , val , l , mid , t << 1);\n            else\n                upd(pos , val , mid + 1 , r , t << 1 | 1);\n            tree[t] = max(tree[t << 1] , tree[t << 1 | 1]);\n        }\n\n        int qry(const int ql ,const int qr , int l , int r , int t){\n            if(l > qr || r < ql)\n                return -1;\n            if(l >= ql && r <= qr)\n                return tree[t];\n            int mid = (l + r) >> 1;\n            return max(qry(ql , qr , l , mid , t << 1) , qry(ql , qr , mid + 1 , r , t << 1 | 1));\n        }\n    };\n    \n    vector<bool> getResults(vector<vector<int>>& queries) {\n        map<int,int> hm;\n        // hm.insert(0);\n        int n = 5e4+1;\n        seg_tree tree(n << 2);\n        /**\n            type 1 :\n            { 2 , 2 }\n            ->{ 7 , 5 }// deleted\n            { 7 ,  (7 - 4)}\n            { 4 , (5 - (7 - 4))}\n            \n            type 2 : \n            {2 , 2}\n            {7 , 3}\n            {4 , 2}\n        */\n        \n        // map<int,int> h\n        \n        vector<bool> ans;\n        for(auto q : queries){\n            int type = q[0];\n            if(type == 1){\n                int x = q[1];\n                auto it = hm.upper_bound(x);\n                if(it == hm.end()){\n                    if(hm.size()) it = prev(it);\n                    hm[x] = x - (it == hm.end() ? 0 : it -> first);\n                    tree.upd(x , hm[x] , 0 , n - 1 , 1);\n                }else{\n                    int diff = it -> second;\n                    int val = it -> first;\n                    hm[val] = val - x;\n                    hm[x] = diff - hm[val];\n                    tree.upd(x , hm[x] , 0 , n - 1 , 1);\n                    tree.upd(val , hm[val] , 0 , n - 1 , 1);\n                }\n            }else{\n                int x = q[1];\n                int y = q[2];\n                auto it = hm.upper_bound(x);\n                int res = 0;\n\n                    if(hm.size()) it--;\n                    res = x - (it == hm.end() ? 0 : min(x , it -> first));\n                    // res = res;\n                \n                int qry = tree.qry(0 , x , 0 , n - 1 , 1);\n                // cout << qry << \" \" << res << \" \" << it -> first << \" \" << it -> second << '\\n';\n                if(qry == -1){\n                    res = x;\n                }\n                res = max(qry , res);\n                \n                ans.push_back(res >= y ? true : false);\n                \n                /**\n                    \n                    5 -> 5\n                */\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1716651394",
    "subm_id": "1267639381"
}