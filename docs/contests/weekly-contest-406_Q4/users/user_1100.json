{
    "username": "Jason0704",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, int> > cost;\n        for (auto h : horizontalCut) {\n            cost.push_back({h, 0});\n        }\n        for (auto v : verticalCut) {\n            cost.push_back({v, 1});\n        }\n        sort(cost.rbegin(), cost.rend());\n        \n        long long res = 0;\n        long long hcnt = 1, vcnt = 1;\n        for (int i = 0; i < m - 1 + n - 1; i++) {\n            if (cost[i].second == 0) {\n                res += cost[i].first * vcnt;\n                hcnt += 1;\n            } else {\n                res += cost[i].first * hcnt;\n                vcnt += 1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925760",
    "subm_id": "1320265342"
}