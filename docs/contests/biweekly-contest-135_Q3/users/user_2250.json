{
    "username": "unrav",
    "submission": "class Solution {\n  public:\n    int minChanges(vector<int> &nums, int k) {\n        int N = nums.size(), res = N;\n        unordered_map<int, vector<int>> possDiffs;\n        vector<int> diffs;\n\n        for (int i = 0; i < nums.size() / 2; i++) {\n            int diff = abs(nums[i] - nums[N - i - 1]);\n            int max1 = max(nums[i] - 0, k - nums[i]);\n            int max2 = max(nums[N - i - 1] - 0, k - nums[N - i - 1]);\n            int maxPoss = max(max1, max2);\n\n            possDiffs[diff].push_back(maxPoss);\n            diffs.push_back(maxPoss);\n        }\n\n        ranges::sort(diffs);\n\n        for (auto &[k, v] : possDiffs) {\n            int diff = k;\n            int idx = lower_bound(diffs.begin(), diffs.end(), diff) - diffs.begin();\n            idx = idx * 2 + (N / 2 - idx);\n\n            for (auto &d : v) {\n                if (d < diff) {\n                    idx -= 2;\n                } else {\n                    idx -= 1;\n                }\n            }\n\n            res = min(res, idx);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721490268",
    "subm_id": "1327477857"
}