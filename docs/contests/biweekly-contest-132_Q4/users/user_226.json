{
    "username": "tomarint",
    "submission": "impl Solution {\n    pub fn maximum_length(nums: Vec<i32>, k: i32) -> i32 {\n        let mut nums = nums;\n        let k = k as usize;\n        let mut idx = std::collections::BTreeSet::new();\n        for i in 0..nums.len() {\n            idx.insert(nums[i]);\n        }\n        let mut val_idx = std::collections::HashMap::new();\n        for (i, &val) in idx.iter().enumerate() {\n            val_idx.insert(val, i);\n        }\n        for i in 0..nums.len() {\n            nums[i] = *val_idx.get(&nums[i]).unwrap() as i32;\n        }\n        let n = idx.len();\n        let mut dp = vec![vec![0; n]; k+1];\n        let mut ans = 0;\n        let mut maxcnt = vec![0; k+1];\n        for i in 0..nums.len() {\n            let val = nums[i] as usize;\n            for j in (0..=k).rev() {\n                if j == 0 || dp[j][val] > 0 {\n                    dp[j][val] += 1;\n                }\n                if j >= 1 && maxcnt[j-1] > 0 {\n                    dp[j][val] = dp[j][val].max(maxcnt[j-1] + 1);\n                }\n                maxcnt[j] = maxcnt[j].max(dp[j][val]);\n                ans = ans.max(dp[j][val]);\n                // println!(\"i={}, j={}, val={}, dp[j][val]={}, maxcnt[j]={}, ans={}\", i, j, val, dp[j][val], maxcnt[j], ans);\n            }\n        }\n        ans\n    }\n}",
    "submit_ts": 1717861069.0
}