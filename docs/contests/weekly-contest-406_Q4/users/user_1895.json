{
    "username": "soumyamaheshwari",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n\n        long long res = 0;\n        int hp = 1, vp = 1;\n        int i = 0, j = 0;\n\n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] >= verticalCut[j]) {\n                res += (long long)horizontalCut[i] * vp;\n                hp++;\n                i++;\n            } else {\n                res += (long long)verticalCut[j] * hp;\n                vp++;\n                j++;\n            }\n        }\n\n        while (i < horizontalCut.size()) {\n            res += (long long)horizontalCut[i] * vp;\n            hp++;\n            i++;\n        }\n\n        while (j < verticalCut.size()) {\n            res += (long long)verticalCut[j] * hp;\n            vp++;\n            j++;\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1720926519",
    "subm_id": "1320288638"
}