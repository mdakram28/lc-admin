{
    "username": "tonyli00000",
    "submission": "class Solution {\npublic:\n    vector<vector<int>>ct;\n    int max_pos(int n, int start, int k) {\n        int l = start, r = n - 1;\n        int ret = -1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            int val = 0;\n            for (int i = 0; i < 32; i++) {\n                if (ct[mid + 1][i] - ct[start][i] == mid - start + 1)val += (1 << i);\n            }\n            if (val > k)l = mid + 1;\n            else if (val == k)l = mid + 1, ret = max(ret, mid);\n            else r = mid - 1;\n        }\n        return ret;\n    }\n\n    int min_pos(int n, int start, int k) {\n        int l = start, r = n - 1;\n        int ret = 2e9;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            int val = 0;\n            for (int i = 0; i < 32; i++) {\n                if (ct[mid + 1][i] - ct[start][i] == mid - start + 1)val += (1 << i);\n            }\n            if (val > k)l = mid + 1;\n            else if (val == k)r = mid - 1, ret = min(ret, mid);\n            else r = mid - 1;\n        }\n        return ret;\n    }\n\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ct.assign(n + 1, vector<int>(32, 0));\n        for (int i = 0; i < n; i++) {\n            ct[i + 1] = ct[i];\n            for (int j = 0; j < 32; j++) {\n                if (nums[i] & (1 << j))ct[i + 1][j]++;\n            }\n        }\n\n        long long ret = 0;\n        for (int i = 0; i < n; i++) {\n            int l = min_pos(n, i, k), r = max_pos(n, i, k);\n            if (l == 2e9 || r == -1)continue;\n            ret += (1LL + r - l);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1720277406",
    "subm_id": "1311662204"
}