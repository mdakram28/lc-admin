{
    "username": "hdeutsch",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        ans = 0\n        while nums != target:\n            diff = [b - a for a, b in zip(nums, target)]\n            indices = []\n            for i in range(len(diff) - 1):\n                if (\n                (diff[i] > 0 and diff[i + 1] <= 0) or \\\n                (diff[i] < 0 and diff[i + 1] >= 0) or \\\n                (diff[i] == 0 and diff[i + 1] != 0)\n                ):\n                    indices.append(i)\n            indices.append(len(diff) - 1)\n\n            # loop through all mountains\n            start = 0\n            for end in indices:\n                if diff[start] == 0:\n                    start = end + 1\n                    continue\n                if diff[start] > 0:\n                    min_inc = min(diff[start:end + 1])\n                    for mend in range(start, end + 1):\n                        nums[mend] += min_inc\n                    ans += abs(min_inc)\n                elif diff[start] < 0:\n                    max_dec = max(diff[start:end + 1])\n                    for mend in range(start, end + 1):\n                        nums[mend] += max_dec\n                    ans += abs(max_dec)\n                start = end + 1\n            # print(nums)\n        return ans\n\n\n",
    "submit_ts": "1721531445",
    "subm_id": "1327961120"
}