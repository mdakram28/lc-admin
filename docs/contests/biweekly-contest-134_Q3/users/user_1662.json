{
    "username": "Scooby24",
    "submission": "class Solution {\npublic:\n    int kmp(string& temp, string& b) {\n        int n = b.size();\n        vector<int> lps(n, 0);\n        int i = 1, len = 0;\n        while (i < n) {\n            if (b[i] == b[len]) {\n                len++;\n                lps[i] = len;\n                i++;\n            } else {\n                if (len != 0) {\n                    len = lps[len - 1];\n                } else {\n                    lps[i] = 0;\n                    i++;\n                }\n            }\n        }\n        int m = temp.size();\n        int p = 0, j = 0, count = 0;\n        unordered_set<int> visited;\n        while (p < m) {\n            if (temp[p] == b[j]) {\n                p++;\n                j++;\n            } else if (p < m && temp[p] != b[j]) {\n                if (j != 0) {\n                    j = lps[j - 1];\n                } else {\n                    p++;\n                }\n            }\n            if (j == n) {\n                int startPos = (p - n) % (m / 2); \n                if (visited.find(startPos) != visited.end()) {\n                    return count;\n                }\n                visited.insert(startPos);\n                count++;\n                j = lps[j-1]; \n            }\n        }\n        return count;\n    }\n\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        if (k > n) return 0;\n\n        string a = \"\", b = \"\";\n        for (int i = 0; i < k; i++) {\n            if (i % 2 == 0) {\n                a += '0';\n                b += '1';\n            } else {\n                a += '1';\n                b += '0';\n            }\n        }\n\n        string temp = \"\";\n        for (int i = 0; i < n; i++) {\n            temp += to_string(colors[i]);\n        }\n        temp += temp; \n\n        int ans = kmp(temp, a) ;\n        cout<<ans<<endl;\n        ans+= kmp(temp, b);\n        return ans;\n    }\n};\n",
    "submit_ts": "1720280451",
    "subm_id": "1311789906"
}