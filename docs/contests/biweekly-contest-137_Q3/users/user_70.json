{
    "username": "JeremyZhang96",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        m, n = len(board), len(board[0])\n        loc = sorted([(board[i][j], i, j) for i in range(m) for j in range(n)], reverse=True)  # \u6bcf\u4e2a\u4ef7\u503c\u53ca\u5176\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6309\u4ef7\u503c\u964d\u5e8f\u6392\u5217\n        row = set()  # \u5df2\u9009\u4e2d\u7684\u884c\n        col = set()  # \u5df2\u9009\u4e2d\u7684\u5217\n        total = 0  # \u5df2\u9009\u4e2d\u7684\u4ef7\u503c\u548c\n        ans = - maxsize\n\n        # \u4eceloc[x:]\u4e2d\u9009\u4e00\u4e2a\u4f4d\u7f6e\n        def dfs(x):\n            nonlocal total, ans\n            for y, (val, i, j) in enumerate(loc[x:], start=x):\n                if i not in row and j not in col:\n                    if len(row) == 2:\n                        if total + val > ans:\n                            ans = total + val\n                        return\n                    # \u526a\u679d\n                    if (len(row) == 1 and total + val * 2 <= ans) or (len(row) == 0 and val * 3 <= ans):\n                            return\n                    total += val\n                    row.add(i)\n                    col.add(j)\n                    dfs(y + 1)\n                    total -= val\n                    row.remove(i)\n                    col.remove(j)\n        \n        dfs(0)\n        return ans",
    "submit_ts": "1723907157",
    "subm_id": "556323911"
}