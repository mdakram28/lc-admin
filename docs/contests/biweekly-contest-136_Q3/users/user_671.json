{
    "username": "Rudolphrit",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int opcount = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n        for (int j = 0; j < n / 2; j++) {\n            for (int k = 0; k < m / 2; k++) {\n                int one = 0, zero = 0;\n\n                if (grid[j][k] == 0) {\n                    zero++;\n                } else {\n                    one++;\n                }\n                if (grid[n - 1 - j][k] == 0) {\n                    zero++;\n                } else {\n                    one++;\n                }\n                if (grid[j][m - 1 - k] == 0) {\n                    zero++;\n                } else {\n                    one++;\n                }\n                if (grid[n - j - 1][m - k - 1] == 0) {\n                    zero++;\n                } else {\n                    one++;\n                }\n                opcount += min(one, zero);\n            }\n        }\n        int onecount = 0;\n        int equalones = 0;\n         int unequalones = 0;\n        if (n % 2 != 0) {\n\n            for (int j = 0; j < m / 2; j++) {\n                if (grid[n / 2][j] == grid[n / 2][m - 1 - j] &&\n                    grid[n / 2][j] == 1) {\n                    equalones += 2;\n                }\n                if (grid[n / 2][j] != grid[n / 2][m - 1 - j] &&\n                    (grid[n / 2][j] == 1 || grid[n / 2][m - 1 - j] == 1)) {\n                    unequalones++;\n                }\n            }\n        }\n        if (m % 2 != 0) {\n\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[j][m / 2] == grid[n - 1 - j][m / 2] &&\n                    grid[j][m / 2] == 1) {\n                    equalones += 2;\n                }\n                if (grid[j][m / 2] != grid[n - 1 - j][m / 2] &&\n                    (grid[j][m / 2] == 1 || grid[n - 1 - j][m / 2] == 1)) {\n                    unequalones++;\n                }\n            }\n        }\n        int center = 0;\n        if (n % 2 != 0 && m % 2 != 0) {\n            if (grid[n / 2][m / 2] == 1) {\n                center++;\n            }\n        }\n        opcount+=center;\n      if(unequalones==0){\n        if(equalones%4==2){\n            opcount+=2;\n        }\n      }\n      if(unequalones!=0&&equalones%4==0){\n        opcount+=unequalones;\n      }\n      if(unequalones!=0&&equalones%4==2){\n        opcount+=unequalones;\n      }\n      return opcount;\n    }\n};",
    "submit_ts": "1722698119",
    "subm_id": "1343170292"
}