{
    "username": "penguinzzz",
    "submission": "class Solution {\npublic:\n    int waysToReachStair(int k) {\n        map<array<long long,3>,int> dp;\n        const long long bound=1000000000;\n        function<int(long long,int,int)> rec=[&](long long curr,int jump,int flag){\n            if(curr>bound) return 0;\n            if(dp.find({curr,jump,flag})!=dp.end()) return dp[{curr,jump,flag}];\n            int ans=0;\n            if(!flag and curr>0){\n                ans+=rec(curr-1,jump,1);\n            }\n            ans+=rec(curr+(1LL<<jump),jump+1,0);\n            return dp[{curr,jump,flag}]=ans+(curr==k);\n        };\n        return rec(1,0,0);\n    }\n};",
    "submit_ts": "1716086747",
    "subm_id": "1261761954"
}