{
    "username": "the_computer_jock",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n    map<int, int> mq;\n\n    for (int num: nums) {\n        mq[num] = 0;\n    }\n\n    int c = 0;\n    for (auto it = mq.begin(); it != mq.end(); ++it) {\n        it->second = c;\n        c++;\n    }\n\n    c++;\n\n    for (int &num: nums) {\n        num = mq[num];\n    }\n\n    // vector<map<int, int>> vMp(k + 1);\n    vector<vector<int>> vMp(k + 1, vector<int>(c));\n    vector<multiset<int>> vSt(k + 1);\n\n    for (int i = 0; i <= k; ++i) {\n        vMp[i][c - 1] = 0;\n        vSt[i].insert(0);\n    }\n\n    auto helper = [&](int num, int currK, int val) {\n        // debug(currK)\n        int already = vMp[currK][num];\n\n        if (already >= val) {\n            return;\n        }\n\n        if (already != 0) {\n            // debug(\"afiahi\", currK, already, vSt[currK])\n            vSt[currK].erase(vSt[currK].find(already));\n        }\n\n        vMp[currK][num] = val;\n        vSt[currK].insert(val);\n\n        // debug*vMp[currK],\n    };\n\n    // debug(vMp)\n\n    // return 0;\n\n    for (auto num: nums) {\n        for (int currK = k; currK >= 0; --currK) {\n            helper(num, currK, vMp[currK][num] + 1);\n\n            if (currK > 0) {\n                auto a = vMp[currK - 1][num];\n\n                if (a != 0) {\n                    // debug(\"aifhi\")\n                    vSt[currK - 1].erase(vSt[currK - 1].find(a));\n                }\n\n                // debug(\"a\")\n\n                helper(num, currK, *vSt[currK - 1].rbegin() + 1);\n\n                // debug(\"b\")\n\n                if (a != 0) {\n                    vSt[currK - 1].insert(a);\n                }\n            }\n        }\n\n        // debug(vMp)\n    }\n\n    // debug(\"afa\")\n\n    int ans = 0;\n    for (int i = 0; i <= k; ++i) {\n        ans = max(ans, *vSt[i].rbegin());\n    }\n\n    return ans;\n}\n};",
    "submit_ts": "1717859705",
    "subm_id": "1281732038"
}