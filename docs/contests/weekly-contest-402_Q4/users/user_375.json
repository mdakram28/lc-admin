{
    "username": "zzs-in",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        arr = [0] * 100010\n        def lowbit(x):\n            return x & -x\n        def getsum(x):\n            ans = 0\n            while x > 0:\n                ans = ans + arr[x]\n                x = x - lowbit(x)\n            return ans\n        def add(x,k):\n            while x < 100010:\n                arr[x] += k\n                x += lowbit(x)\n        n = len(nums)\n        for i in range(1,n - 1):\n            if nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n                add(i + 1,1)\n        res = []\n        for [x,y,z] in queries:\n            if x == 2:\n                p = []\n                for id in range(max(0,y - 1),min(y + 2,n)):\n                    if id == 0 or id == n - 1:\n                        p.append(0)\n                    else:\n                        if nums[id] > nums[id - 1] and nums[id] > nums[id + 1]:\n                            p.append(1)\n                        else:\n                            p.append(0)\n                nums[y] = z\n                q = []\n                for id in range(max(0,y - 1),min(y + 2,n)):\n                    if id == 0 or id == n - 1:\n                        q.append(0)\n                    else:\n                        if nums[id] > nums[id - 1] and nums[id] > nums[id + 1]:\n                            q.append(1)\n                        else:\n                            q.append(0)\n                kl = 0\n                for id in range(max(0, y - 1), min(y + 2, n)):\n                    add(id + 1,q[kl] - p[kl])\n                    kl += 1\n            else:\n                y += 1\n                z += 1\n                if z - y <= 1:\n                    res.append(0)\n                    continue\n                res.append(getsum(z - 1) - getsum(y))\n        return res",
    "submit_ts": 1718507063.0
}