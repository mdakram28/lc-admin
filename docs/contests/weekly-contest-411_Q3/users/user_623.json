{
    "username": "Gautam Jha",
    "submission": "class Solution {\npublic:\n    int mod(string& num, int p){\n        int sum = 0;\n        for(int i = 0; i < num.size(); i++){\n            sum = sum * 10 + num[i] - '0';\n            sum %= p;\n        }\n        return sum;\n    }\n\n    int reverse(int num){\n        string rev_str = to_string(num);\n        ::reverse(rev_str.begin(), rev_str.end());\n        return stoi(rev_str);\n    }\n\n    string largestPalindrome(int n, int k) {\n        int halfn = (n + 1) >> 1;\n        if(k == 1 || k == 3 || k == 9){\n            string ans(n, '9');\n            return ans;\n        }\n        if(k == 2){\n            if(n <= 2){\n                string ans(n, '8');\n                return ans;\n            }\n            string ans(n - 2, '9');\n            return \"8\" + ans + \"8\";\n        }\n        if(k == 4){\n            if(n <= 4){\n                string ans(n, '8');\n                return ans;\n            }\n            string ans(n - 4, '9');\n            return \"88\" + ans + \"88\";\n        }\n        if(k == 5){\n            if(n <= 2){\n                string ans(n, '5');\n                return ans;\n            }\n            string ans(n - 2, '9');\n            return \"5\" + ans + \"5\";\n        }\n        if(k == 6){\n            cout << \".\" << k;\n            if(n <= 2){\n                string ans(n, '6');\n                return ans;\n            }\n            if(n == 3){\n                return string(3, '8');\n            }\n            string ans(n, '9');\n            ans[0] = ans[n - 1] = '8';\n            // int sum = 16 + 9 * (n - 2);\n            if(n & 1){\n                int sum = 16 + 9 * (n/2 - 1);\n                for(int i = 9; i >= 7; i--){\n                    if(((sum + i) % 3) == 0){\n                        ans[n/2] = '0' + i;\n                        return ans;\n                    }\n                }\n            }\n            else{\n                int sum = 16 + 9 * (n/2 - 2);\n                for(int i = 9; i >= 7; i--){\n                    if(((sum + 2 * i) % 3) == 0){\n                        ans[n/2] = ans[n/2 - 1] = '0' + i;\n                        return ans;\n                    }\n                }\n            }\n        }\n        else if(k == 7){\n            if(n <= 2){\n                string ans(n, '7');\n                return ans;\n            }\n            string ans(n, '9');\n            if(n & 1){\n                ans[n/2] = '0';\n                int curr_mod = mod(ans, 7);\n                string multiple(halfn, '0');\n                multiple[0] = '1';\n                int multiple_mod = mod(multiple, 7);\n\n                for(int i = 9; i >= 0; i--){\n                    if(((curr_mod + i * multiple_mod) % 7) == 0){\n                        ans[n/2] = '0' + i;\n                        return ans;\n                    }\n                }\n            }\n            else{\n                ans[n/2] = ans[n/2 - 1] = '0';\n                int curr_mod = mod(ans, 7);\n                string multiple(halfn + 1, '0');\n                multiple[0] = multiple[1] = '1';\n                int multiple_mod = mod(multiple, 7);\n\n                for(int i = 9; i >= 0; i--){\n                    if(((curr_mod + i * multiple_mod) % 7) == 0){\n                        ans[n/2] = ans[n/2 - 1] = '0' + i;\n                        return ans;\n                    }\n                }\n            }\n        }\n        else if(k == 8){\n            \n            if(n <= 4){\n                string ans(n, '8');\n                return ans;\n            }\n            string ans(n, '9');\n            for(int i = 992; i >= 100; i--){\n                int revi = reverse(i);\n                if((revi % 8) == 0){\n                    // cout << \".\" << revi;\n                    string numstr = to_string(revi);\n                    ans[0] = ans[n - 1] = numstr[0];\n                    ans[1] = ans[n - 2] = numstr[1];\n                    ans[2] = ans[n - 3] = numstr[2];\n                    return ans;\n                }\n            }\n        }\n        return string(n, '9');\n    }\n};",
    "submit_ts": "1723952923",
    "subm_id": "1359807973"
}