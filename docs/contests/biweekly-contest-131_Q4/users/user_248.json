{
    "username": "socrates1232",
    "submission": "class Solution {\n    int[] lt = new int[(int)1e6];\n    public void update(int i, int l, int r, int tl, int tr, int v) {\n        // System.out.println(\"lt\" + l + \" \" + r);\n        if(tl > r || tr < l) {\n            return;\n        }\n        if(tl <= l && tr >= r) {\n            // System.out.println(l + \" \" + r + \" \" + 3);\n            lt[i] = Math.max(lt[i], v);\n            return;\n        }\n        int mid = (l + r) >> 1;\n        update(i << 1, l, mid, tl, tr, v);\n        update((i << 1) + 1, mid + 1, r, tl, tr, v);\n    }\n    public boolean check(int t, int v) {\n        int i = 1, l = 0, r = (int)5e4;\n        while(l <= r) {\n            if(lt[i] >= v) {\n                return true;\n            }\n            if(l == r) {\n                break;\n            }\n            int mid = (l + r) >> 1;\n            i <<= 1;\n            if(mid >= t) {\n                r = mid;\n            } else {\n                l = mid + 1;\n                i ++;\n            }\n        }\n        return false;\n    }\n    public List<Boolean> getResults(int[][] queries) {\n        TreeSet<Integer> obs = new TreeSet();\n        obs.add(0);\n        for(int[] q : queries) {\n            if(q[0] == 1) {\n                obs.add(q[1]);\n            }\n        }\n        int pre = -1;\n        for(int o : obs) {\n            if(pre == -1) {\n                pre = o;\n                continue;\n            }\n            update(1, 0, (int)5e4, o, (int)5e4, o - pre);\n            //System.out.println(o + \" \" + (o - pre));\n            pre = o;\n        }\n        // System.out.println(check(3, 1));\n        List<Boolean> ans = new ArrayList();\n        for(int i = queries.length - 1; i >= 0; i --) {\n            int[] q = queries[i];\n            if(q[0] == 1) {\n                obs.remove(q[1]);\n                if(obs.higher(q[1]) != null) {\n                    update(1, 0, (int)5e4, obs.higher(q[1]), (int)5e4, obs.higher(q[1]) - obs.lower(q[1]));\n                }\n            } else {\n                ans.add(((q[1] - obs.floor(q[1])) >= q[2]) || check(obs.floor(q[1]), q[2]));\n                //System.out.println(((q[1] - obs.floor(q[1])) >= q[2]) + \" \" + check(obs.floor(q[1]), q[2]));\n            }\n        }\n        List<Boolean> ans2 = new ArrayList();\n        for(int i = ans.size() - 1; i >= 0; i --) {\n            ans2.add(ans.get(i));\n        }\n        return ans2;\n    }\n}",
    "submit_ts": "1716650794",
    "subm_id": "534772447"
}