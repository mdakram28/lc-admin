{
    "username": "boombuster3478",
    "submission": "\n\nclass Solution {\npublic:\n    long long maximumValueSum(std::vector<std::vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        \n      \n        std::vector<std::tuple<int, int, int>> top_cells;\n        for (int i = 0; i < m; ++i) {\n            std::vector<std::pair<int, int>> row_vals;\n            for (int j = 0; j < n; ++j) {\n                row_vals.push_back({board[i][j], j});\n            }\n            std::sort(row_vals.rbegin(), row_vals.rend());\n            for (int k = 0; k < std::min(3, (int)row_vals.size()); ++k) {\n                top_cells.push_back({row_vals[k].first, i, row_vals[k].second});\n            }\n        }\n        \n       \n        long long max_sum = LLONG_MIN;\n        int len = top_cells.size();\n        for (int i = 0; i < len; ++i) {\n            for (int j = i + 1; j < len; ++j) {\n                for (int k = j + 1; k < len; ++k) {\n                    auto [val1, r1, c1] = top_cells[i];\n                    auto [val2, r2, c2] = top_cells[j];\n                    auto [val3, r3, c3] = top_cells[k];\n                    if (r1 != r2 && r1 != r3 && r2 != r3 && c1 != c2 && c1 != c3 && c2 != c3) {\n                        long long sum = (long long)val1 + val2 + val3;\n                        max_sum = std::max(max_sum, sum);\n                    }\n                }\n            }\n        }\n        \n        return max_sum;\n    }\n};\n",
    "submit_ts": "1723905960",
    "subm_id": "1359028058"
}