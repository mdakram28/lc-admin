{
    "username": "hgwalani81",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int> > sum, dif;\n        for(int i = 0; i<points.size(); i++) {\n            sum.push_back(make_pair(points[i][0] + points[i][1], i));\n            dif.push_back(make_pair(points[i][0] - points[i][1], i));\n        }\n        sort(sum.begin(), sum.end());\n        sort(dif.begin(), dif.end());\n        int ans = sum.back().first - sum[0].first;\n        ans = max(ans, dif.back().first - dif[0].first);\n        for(int i = 0; i<points.size(); i++) {\n            int sumStart = (i == sum[0].second) ? 1 : 0;\n            int sumEnd = (i == sum.back().second) ? sum.size()-2 : sum.size()-1;\n            int difStart = (i == dif[0].second) ? 1 : 0;\n            int difEnd = (i == dif.back().second) ? dif.size()-2 : dif.size()-1;\n            ans = min(ans, max(sum[sumEnd].first-sum[sumStart].first, dif[difEnd].first-dif[difStart].first));\n        }\n        return ans;\n    }\n};"
}