{
    "username": "__avi_3",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n       long long count = 0;\n        int n = nums.size();\n        unordered_map<int, int> p;\n    \n        for (int i = 0; i < n; ++i) \n        {\n            int c = nums[i];\n            unordered_map<int, int> newp;\n            for (auto& pair : p) \n            {\n                int newAND = pair.first & nums[i];\n                newp[newAND] += pair.second;\n            }\n            newp[c]++;\n        \n        //checking entire map\n            for (auto& pair : newp) \n            {\n            if (pair.first == k) {\n                count += pair.second;\n            }\n        }\n        \n        p = newp;\n    }\n    \n    return count;\n    }\n};",
    "submit_ts": "1720280880",
    "subm_id": "1311805345"
}