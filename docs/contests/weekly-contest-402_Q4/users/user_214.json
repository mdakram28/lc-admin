{
    "username": "ruo-ne-2",
    "submission": "class Solution {\npublic:\n    int lowbit(int x) { return x & (-x); }\n    int n;\n    vector<int> a, c;\n    void add(int x, int k) {\n        while (x <= n) {\n            c[x] = c[x] + k;\n            x = x + lowbit(x);\n        }\n    }\n    int get(int x) {\n        int ans = 0;\n        while (x > 0) {\n            ans = ans + c[x];\n            x = x - lowbit(x);\n        }\n        return ans;\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        c.resize(n + 1, 0);\n        a.resize(n, 0);\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                a[i] = 1;\n                add(i + 1, 1);\n                i++;\n            }\n        }\n        vector<int> ans;\n        for (auto q : queries) {\n            if (q[0] == 1) {\n                if (q[2] - q[1] <= 1) ans.emplace_back(0);\n                else ans.emplace_back(get(q[2]) - get(q[1] + 1));\n            } else {\n                int i = q[1], v = 0;\n                nums[q[1]] = q[2];\n                for (int j = i - 1; j <= i + 1; j++) {\n                    if (j > 0 && j < n - 1) {\n                        v = (nums[j] > nums[j - 1] && nums[j] > nums[j + 1]) ? 1 : 0;\n                        if (v != a[j]) add(j + 1, v - a[j]);\n                        a[j] = v;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718506815",
    "subm_id": "539777422"
}