{
    "username": "chirag1293",
    "submission": "class Solution {\n    int minNumberOperations2(vector<int>& target) {\n        stack<int> mono_incr;\n        int ans = 0;\n        \n        for (int i = 0; i < target.size(); i++) {\n            if (mono_incr.size() > 0 && mono_incr.top() >= target[i]) {\n                ans += mono_incr.top() - target[i];\n                mono_incr.pop();\n            }\n            mono_incr.push(target[i]);\n        }\n        \n        ans += mono_incr.top();\n        return ans;\n    }\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans=0,n=nums.size();\n        vector<vector<int>>groups;\n        \n        int cnt=0,diff=INT_MAX;\n        vector<int>grp;\n        for(int i=0;i<n;i++){\n            int cur = nums[i]-target[i];\n            if(cur==0){\n                if(diff!=INT_MAX && grp.size()>0 && diff!=0){\n                    groups.push_back(grp);\n                    grp={};\n                }\n            }\n            else if(cur>0){\n                if(diff!=INT_MAX && diff<0 && grp.size()>0){\n                    groups.push_back(grp);\n                    grp={abs(cur)};\n                }\n                else{\n                    grp.push_back(abs(cur));\n                }\n            }\n            else{\n                if(diff!=INT_MAX && diff>0 && grp.size()>0){\n                    groups.push_back(grp);\n                    grp={abs(cur)};\n                }\n                else{\n                    grp.push_back(abs(cur));\n                }\n            }\n            diff = cur;\n        }\n\n        if(grp.size()!=0){\n            groups.push_back(grp);\n        }\n\n        // for(auto&it:groups){\n        //     // sort(it.begin(),it.end());\n        //     for(auto&i:it){\n        //         cout<<i<<\" \";\n        //     }\n        //     cout<<endl;\n        //     cout<<endl;\n        // }\n\n        for(auto&it:groups){\n            ans+=minNumberOperations2(it);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533381",
    "subm_id": "1328007704"
}