{
    "username": "mitthunkrishna",
    "submission": "class Solution {\npublic:\n    // set<int> rightSide, topSide;\n    // set<int> leftSide, bottomSide;\n    bool dfs(int i, vector<int> adj[], set<int> &s1, set<int> &s2, vector<int> &vis) {\n        vis[i] = 1;\n        if(s1.find(i) != s1.end() || s2.find(i) != s2.end()) {\n            return true;\n        } \n        for(auto &it:adj[i]) {\n            if(!vis[it]) {\n                if(dfs(it, adj, s1, s2, vis)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<int> adj[n];\n        set<int> rightSide, topSide;\n        set<int> leftSide, bottomSide;\n        for(int i=0;i<circles.size();i++) {\n            for(int j=i+1;j<circles.size();j++) {\n                double d = sqrtl((circles[i][0]-circles[j][0])*1ll*(circles[i][0] - circles[j][0]) + (circles[i][1]-circles[j][1])*1ll*(circles[i][1]-circles[j][1]));\n                int r1 = circles[i][2];\n                int r2 = circles[j][2];\n                if (d <= r1 - r2) {\n                    continue;\n                }\n                else if (d <= r2 - r1) {\n                    continue;\n                }\n                if(d<=(r1+r2)) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n            int r = circles[i][2];\n            int x = circles[i][0];\n            int y = circles[i][1];\n            if(x>0 && x-r <= 0) {\n                leftSide.insert(i);\n            }\n            if(x+r >= X) {\n                rightSide.insert(i);\n            }\n            if(y>0 && y-r <= 0) {\n                bottomSide.insert(i);\n            }\n            if(y+r >= Y) {\n                topSide.insert(i);\n            }\n            \n        }\n        \n        vector<int> vis(n, 0);\n        for(auto &it:rightSide) {\n            if(!vis[it]) {\n                if(dfs(it, adj, topSide, leftSide, vis)) {\n                    return false;\n                }\n            }\n        }\n        for(auto &it:bottomSide) {\n            if(!vis[it]) {\n                if(dfs(it, adj, topSide, leftSide, vis)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138240",
    "subm_id": "1335785755"
}