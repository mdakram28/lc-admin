{
    "username": "6racious-wilesxjv",
    "submission": "class SegmentTree:\n    def __init__(self, init, unitX, f):\n        self.unitX = unitX  # empty/fill value\n        self.f = f  # (X, X) -> X, with f(UnitX, x) == x\n        if type(init) == int:\n            self.N = 1 << (init - 1).bit_length()\n            self.X = [unitX for _ in range(2 * self.N)]\n        else:\n            self.N = 1 << (len(init) - 1).bit_length()\n            # init == X[N:N+L], L = len(init)\n            self.X = [unitX] * self.N + init + [unitX] * (self.N - len(init))\n            for i in range(self.N - 1, 0, -1):\n                self.X[i] = self.f(self.X[i * 2], self.X[i * 2 | 1])    # i -> (2i, 2i+1)\n\n    def update(self, i, v):\n        i += self.N\n        self.X[i] = v\n        while i > 1:\n            i >>= 1\n            self.X[i] = self.f(self.X[i * 2], self.X[i * 2 | 1])\n\n    def query(self, l, r):  # [l, r]\n        l += self.N\n        r += self.N\n        al = ar = self.unitX\n        while l <= r:\n            if l & 1:\n                al = self.f(al, self.X[l])\n                l += 1\n            if r & 1 == 0:\n                ar = self.f(self.X[r], ar)\n                r -= 1\n            l >>= 1\n            r >>= 1\n        return self.f(al, ar)\n    \n    def getvalue(self, i):\n        return self.X[i + self.N]\n\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        peak = [0] * n\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                peak[i] = 1\n        st = SegmentTree(peak, 0, lambda x,y: x+y)\n        res = []\n        for a,b,c in queries:\n            if a == 1:\n                res.append(st.query(b+1, c-1))\n            else:\n                nums[b] = c\n                for i in range(b-1, b+2):\n                    if i > 0 and i < n-1:\n                        peak[i] = int(nums[i] > nums[i-1] and nums[i] > nums[i+1])\n                        if peak[i] != st.getvalue(i):\n                            st.update(i, peak[i])\n        return res",
    "submit_ts": 1718506500.0
}