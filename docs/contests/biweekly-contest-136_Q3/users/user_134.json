{
    "username": "time-v5",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        List<int[]> list = new ArrayList<>();\n        for (int i1 = 0, i2 = n - 1; i1 < i2; i1++, i2--) {\n            for (int j1 = 0, j2 = m - 1; j1 < j2; j1++, j2--) {\n                int v = grid[i1][j1] + grid[i1][j2] + grid[i2][j1] + grid[i2][j2];\n                list.add(new int[]{v, 4 - v, 4});\n            }\n        }\n        if ((n & 1) != 0) {\n            int i = n / 2;\n            for (int j1 = 0, j2 = m - 1; j1 < j2; j1++, j2--) {\n                int v = grid[i][j1] + grid[i][j2];\n                list.add(new int[]{v, 2 - v, 2});\n            }\n        }\n        if ((m & 1) != 0) {\n            int j = m / 2;\n            for (int i1 = 0, i2 = n - 1; i1 < i2; i1++, i2--) {\n                int v = grid[i1][j] + grid[i2][j];\n                list.add(new int[]{v, 2 - v, 2});\n            }\n        }\n        if ((n & 1) != 0 && (m & 1) != 0) {\n            list.add(new int[]{grid[n / 2][m / 2], 1 - grid[n / 2][m / 2], 1});\n        }\n        n = list.size();\n        int[][] dp = new int[n + 1][4];\n        for (int i = 1; i < 4; i++) {\n            dp[n][i] = 1000000000;\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            int[] arr = list.get(i);\n            int v = arr[arr.length - 1];\n            for (int j = 0; j < 4; j++) {\n                dp[i][j] = Math.min(dp[i + 1][j] + arr[0], dp[i + 1][(j + v) % 4] + arr[1]);\n            }\n        }\n        return dp[0][0];\n    }\n}",
    "submit_ts": "1722699024",
    "subm_id": "552273683"
}