{
    "username": "msanket79",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n                priority_queue<vector<int>>pq;\n        for(int i=0;i<horizontalCut.size();i++){\n            pq.push({horizontalCut[i],i,0});\n        }\n        for(int i=0;i<verticalCut.size();i++){\n            pq.push({verticalCut[i],i,1});\n        }\n        int vc=0;\n        int hc=0;\n        long long cost=0;\n        while(!pq.empty()){\n            auto it=pq.top();\n            pq.pop();\n            if(it[2]==0){\n                cost+=1ll*it[0]*(vc+1);\n                hc++;\n            }\n            else{\n                cost+=1ll*it[0]*(hc+1);\n                vc++;\n            }\n\n        }\n        return cost;\n    }\n};",
    "submit_ts": "1720926332",
    "subm_id": "1320283041"
}