{
    "username": "pictureyong",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int ans = 0;\n        for (int i = 0;i < grid.size()/2; ++i) {\n            for (int j = 0;j < grid[i].size() / 2; ++j) {\n                int n = grid[i][j]  + grid[i][grid[i].size()-1-j] + grid[grid.size()-1-i][j] + grid[grid.size()-1-i][grid[i].size()-1-j];\n                ans += std::min(n, 4-n);\n            }\n        }\n        std::cout << \"ans: \" << ans << std::endl;\n        if ((grid.size() & 1 == 1) && (grid[0].size() & 1 == 1)) {\n            int I = grid.size() / 2;\n            int J = grid[0].size() / 2;\n            ans += (grid[I][J] == 1);\n            std::cout << \"IJ: \" << grid[I][J] << std::endl;\n            grid[I][J] = 0;\n            int tn = 0;\n            int t1 = 0;\n            for (int j = 0;j < grid[I].size() / 2; ++j) {\n                tn += grid[I][j] != grid[I][grid[I].size()-1-j];\n                t1 += grid[I][j] == 1;\n            }\n            for (int i = 0;i < grid.size() / 2; ++i) {\n                tn += grid[i][J] != grid[grid.size()-1-i][J];\n                t1 += grid[i][J] == 1;\n            }\n            std::cout << tn << \", tn t1: \" << t1 << std::endl;\n            if (tn > 0) {\n                ans += tn;\n            } else if (t1 & 1 == 1) {\n                ans += 2;\n            }\n        } else if (grid.size() & 1 == 1) {\n            int tn = 0;\n            int I = grid.size() / 2;\n            int t1 = 0;\n            for (int j = 0;j < grid[I].size() / 2; ++j) {\n                tn += grid[I][j] != grid[I][grid[I].size()-1-j];\n                t1 += grid[I][j] == 1;\n            }\n            if (tn > 0) {\n                ans += tn;\n            } else if (t1 & 1 == 1) {\n                ans += 2;\n            }\n        } else if (grid[0].size() & 1 == 1) {\n            int tn = 0;\n            int J = grid[0].size() / 2;\n            int t1 = 0;\n            for (int i = 0;i < grid.size() / 2; ++i) {\n                tn += grid[i][J] != grid[grid.size()-1-i][J];\n                t1 += grid[i][J] == 1;\n            }\n            if (tn > 0) {\n                ans += tn;\n            } else if (t1 & 1 == 1) {\n                ans += 2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698449",
    "subm_id": "552270907"
}