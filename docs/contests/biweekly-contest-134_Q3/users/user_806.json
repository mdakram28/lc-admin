{
    "username": "rahul190556",
    "submission": "class Solution {\npublic:\n    \n\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        int group_count = 0;\n\n        if (k == 1) {\n            return n;\n        }\n\n        int current_alternating_length = 1;\n        int index = 1;\n        while (index < n + k - 1) {\n            int curr_idx = index;\n            int prev_idx = index - 1;\n\n            if (curr_idx >= n) {\n                curr_idx -= n;\n            }\n            if (prev_idx >= n) {\n                prev_idx -= n;\n            }\n\n            if (colors[curr_idx] != colors[prev_idx]) {\n                ++current_alternating_length;\n            } else {\n                current_alternating_length = 1;\n            }\n\n            if (current_alternating_length >= k) {\n                ++group_count;\n            }\n\n            ++index;\n        }\n\n        return group_count;\n    }\n};",
    "submit_ts": "1720279535",
    "subm_id": "1311755080"
}