{
    "username": "gaoyf1235",
    "submission": "class Solution {\n    using pii = pair<int, int>;\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int res = 1;\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(k + 1, 1));\n        unordered_map<int, vector<int>> val_max;\n        val_max[nums[0]] = dp[0];\n        vector<pii> nval_best(k+1, {1, nums[0]});\n        vector<pii> nval_best2(k+1,{0, 0});\n        for(int i = 1; i < n; i++){\n            auto x = nums[i];\n            if(val_max.find(x) != val_max.end()){\n                auto& vals = val_max[x];\n                for(int c = 0; c <= k; c++){\n                    dp[i][c] = max(dp[i][c], vals[c] + 1);\n                }\n            }\n            else{\n                val_max[x] = dp[i];\n            }\n            for(int c = 0; c < k ; c++){\n                if(x != nval_best[c].second){\n                    dp[i][c + 1]  = max(dp[i][c + 1], nval_best[c].first + 1);\n                }\n                else{\n                    dp[i][c + 1]  = max(dp[i][c + 1], nval_best2[c].first + 1);\n                }\n            }\n            for(int c = 1; c <= k ; c++){\n                dp[i][c] = max(dp[i][c], dp[i][c - 1]);\n            }\n            res = max(res, dp[i][k]);\n            for(int c = 0; c <= k ; c++){\n                val_max[x][c] = max(dp[i][c], val_max[x][c]);\n                if(dp[i][c] > nval_best[c].first){\n                    nval_best2[c] = nval_best[c];\n                    nval_best[c] = {dp[i][c], x};\n                }\n                else if(dp[i][c] > nval_best2[c].first){\n                    nval_best2[c] = {dp[i][c], x};\n                }\n            }\n        }\n        return res;\n        \n    }\n};",
    "submit_ts": "1717860723",
    "subm_id": "1281767205"
}