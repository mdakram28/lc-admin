{
    "username": "JiaLiLue",
    "submission": "constexpr int NN = 1e5+10;\n\ninline int lowbit(int x){\n    return x&(-x);\n}\n\nint buf[NN], V;\nvoid Add(int i, int x=1){\n    while(i<=V){\n        buf[i]+=x;\n        i+=lowbit(i);\n    }\n}\n\nint Query(int i){\n    int s = 0;\n    while(i){\n        s+=buf[i];\n        i-=lowbit(i);\n    }\n    return s;\n}\n\nclass Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size(), ans = n;\n        unordered_map<int,int> d_cnt;\n        memset(buf, 0, sizeof(int)*(k+5));\n        V = k+1;\n        for(int i1=0, i2=n-1; i1<i2; ++i1, --i2){\n            if(nums[i1]>nums[i2]){\n                swap(nums[i1], nums[i2]);\n            }\n        }\n        vector<int> idx(n/2);\n        iota(idx.begin(), idx.end(), 0);\n        sort(idx.begin(), idx.end(), [&](int i, int j){\n            return nums[i]<nums[j];\n        });\n        for(int i1=0, i2=n-1; i1<i2; ++i1, --i2){\n            d_cnt[abs(nums[i1]-nums[i2])]++;\n        }\n        ans = n/2-d_cnt[0];\n        for(int i1=n/2-1, X=1; X<=k; ++X){\n            while(i1>=0 and nums[idx[i1]]>k-X){\n                Add(nums[n-1-idx[i1]]+1);\n                --i1;\n            }\n            int c2 = Query(X);\n            ans = min(ans, n/2-d_cnt[X]+c2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488790",
    "subm_id": "548316006"
}