{
    "username": "BaoziiO_o",
    "submission": "func numberOfSubstrings(s string) int {\n\tn := len(s)\n\tcountZero := strings.Count(s, \"0\")\n\tk := int(math.Min(math.Sqrt(float64(n)), float64(countZero)))\n\tans := 0\n\tindices := []int{-1}\n\n\tfor i, c := range s {\n\t\tif c == '0' {\n\t\t\tindices = append(indices, i)\n\t\t}\n\t}\n\tindices = append(indices, n)\n\n\tcheck := func(x int) int {\n\t\ti, r, ans := 1, 0, 0\n\t\tneed := x * x\n\n\t\tfor i + x < len(indices) {\n\t\t\tl := indices[i] - indices[i-1] - 1\n\t\t\tr = indices[i+x] - indices[i+x-1] - 1\n\t\t\tonesCount := indices[i+x-1] - indices[i] + 1 - x\n\t\t\tfor c := 0; c <= l; c++ {\n\t\t\t\ttot := int(math.Max(0, float64(need - c - onesCount)))\n\t\t\t\tans += int(math.Max(0, float64(r - tot + 1)))\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t\treturn ans\n\t}\n\n\tfor m := 1; m <= k; m++ {\n\t\tans += check(m)\n\t}\n\n\tfor _, g := range groupBy(s) {\n\t\tl := len(g)\n\t\tif g[0] == '1' {\n\t\t\tans += (l + 1) * l / 2\n\t\t}\n\t}\n\n\treturn ans\n}\n\nfunc groupBy(s string) [][]rune {\n\tvar result [][]rune\n\tif len(s) == 0 {\n\t\treturn result\n\t}\n\n\tgroup := []rune{rune(s[0])}\n\tfor i := 1; i < len(s); i++ {\n\t\tif s[i] == s[i-1] {\n\t\t\tgroup = append(group, rune(s[i]))\n\t\t} else {\n\t\t\tresult = append(result, group)\n\t\t\tgroup = []rune{rune(s[i])}\n\t\t}\n\t}\n\tresult = append(result, group)\n\treturn result\n}",
    "submit_ts": "1722135834",
    "subm_id": "1335715097"
}