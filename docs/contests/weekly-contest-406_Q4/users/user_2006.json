{
    "username": "sandeep_yadav1312",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n               \n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        \n        int i=horizontalCut.size()-1;\n        int j=verticalCut.size()-1;\n        \n        int row=1;\n        int col=1;\n        long long ans=0;\n        while(i>=0 || j>=0){\n            int a=i>=0?horizontalCut[i]:-1;\n            int b=j>=0?verticalCut[j]:-1;\n            if(a>=b){\n                ans+=(a*row);\n                col++;\n                i--;\n            }else{\n                ans+=(b*col);\n                row++;\n                j--;\n            }\n            \n            \n            \n        }\n        \n        return ans;\n        \n        \n        \n        \n    }\n};",
    "submit_ts": "1720926580",
    "subm_id": "1320290374"
}