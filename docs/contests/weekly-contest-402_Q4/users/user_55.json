{
    "username": "sun-man-man",
    "submission": "class Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        tree = [0]*n\n\n        def update(i, val):\n            while i < n:\n                tree[i] += val\n                i += i & (-i)\n\n        def query(p):\n            ans = 0\n            while p > 0:\n                ans += tree[p]\n                p -= p & (-p)\n            return ans\n\n        def query_range(l, r):\n            if (r < l):\n                return 0\n            return query(r)-query(l-1)\n\n        def check(i, v):\n            if i <= 0 or i >= n-1:\n                return\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                update(i, v)\n\n        for i in range(1, n-1):\n            check(i, 1)\n\n        ans = []\n        for op, x, y in queries:\n            if op == 1:\n                ans.append(query_range(x+1, y-1))\n            else:\n                check(x-1, -1)\n                check(x, -1)\n                check(x+1, -1)\n                nums[x] = y\n                check(x-1, 1)\n                check(x, 1)\n                check(x+1, 1)\n        return ans",
    "submit_ts": 1718506036.0
}