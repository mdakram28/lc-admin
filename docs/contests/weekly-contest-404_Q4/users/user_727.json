{
    "username": "vedant_rawale",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n \n    ll dfs(int u,int par,int d,int i,vector<vector<int>> &adj,vector<vector<ll>> &dist){\n      dist[i][u] = d;\n      ll ved = -1;\n      for(auto j: adj[u]){\n        if(j!=par){\n          ll veda = dfs(j,u,d+1,i,adj,dist);\n          if(ved==-1 || dist[i][veda] > dist[i][ved]) ved = veda;\n        }\n      }\n\n      return ved==-1 ? u : ved;\n    }\n\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        ll ans = 0;\n        ll anss = 0;\n        int n = edges1.size()+1;\n        vector<vector<ll>> dist(2,vector<ll>(n));\n        vector<vector<int>> adj(n);\n        for(int i= 0;i<n-1;i++){\n            adj[edges1[i][0]].push_back(edges1[i][1]);\n             adj[edges1[i][1]].push_back(edges1[i][0]);\n            \n        }\n       \n        ll fnode = dfs(0,0,0,0,adj,dist);\n      ll snode = dfs(fnode,fnode,0,0,adj,dist); \n       dfs(snode,snode,0,1,adj,dist);\n        \n        ll val1 = INT_MAX;\n        ll veda = 0;\n        for(int i =0;i<n;i++) veda = max(veda,max(dist[0][i],dist[1][i]));\n        for(int i = 0;i<n;i++) val1 = min(val1,max(dist[0][i],dist[1][i]));\n        \n        int m = edges2.size()+1;\n        vector<vector<int>> adjj(m);\n        vector<vector<ll>> distt(2,vector<ll>(m));\n        for(int i =0;i<m-1;i++){\n             adjj[edges2[i][0]].push_back(edges2[i][1]);\n             adjj[edges2[i][1]].push_back(edges2[i][0]);\n        }\n      \n        \n        fnode = dfs(0,0,0,0,adjj,distt);\n        snode = dfs(fnode,fnode,0,0,adjj,distt); \n       dfs(snode,snode,0,1,adjj,distt);\n        \n        ll val2 = INT_MAX;\n        ll ved = 0;\n        for(int i =0;i<m;i++) ved = max(ved,max(distt[0][i],distt[1][i]));\n        \n        for(int i = 0;i<m;i++) val2 = min(val2,max(distt[0][i],distt[1][i]));\n        // cout<<val1<<\"--\"<<val2<<endl;\n        return max(max(ved,veda),val1+val2+1);\n    }\n};",
    "submit_ts": "1719719075",
    "subm_id": "1304433130"
}