{
    "username": "accelerator-a5",
    "submission": "class Solution {\npublic:\n    int n;\n    int check(vector<int>& colors, int k, int i, int& j) {\n        int cur = colors[i];\n        // i=(i+1)%n;\n        --k;\n        ++i;\n        while (k--) {\n            if (colors[i % n] == cur) {\n                //cout<<i<<\"\\n\";\n                j = 0;\n                return i;\n            }\n            // i=(i+1)%n;\n            cur=colors[i % n];++i;\n        }\n        j = 1;\n        return -1;\n    }\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        n = colors.size();\n        vector<int> ok(n, 0);\n        int j = -1;\n        for (int i = 0; i < n; ++i) {\n            if (i < j) {\n                ok[i] = 0;\n                continue;\n            }\n            if (i > 0) {\n                if (ok[i - 1]) {\n                    if (colors[(i + k - 1) % n] != colors[(i + k - 2) % n]) {\n                        ok[i] = true;\n                    }\n                }else{\n                    j = check(colors, k, i, ok[i]);\n                }\n            } else {\n                j = check(colors, k, i, ok[i]);\n                cout<<ok[i]<<\" \"<<j;\n            }\n        }\n        int ans = 0;\n        for (auto c : ok)\n            ans += c;\n        return ans;\n    }\n};",
    "submit_ts": "1720277645",
    "subm_id": "544557945"
}