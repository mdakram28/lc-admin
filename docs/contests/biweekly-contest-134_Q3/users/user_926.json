{
    "username": "gandip_6355",
    "submission": "#define ll long long\nclass Solution {\n    bool isPrime(int n)\n{\n    \n    if (n <= 1)\n        return false;\n\n    \n    for (int i = 2; i <= n / 2; i++)\n        if (n % i == 0)\n            return false;\n\n    return true;\n}\n    int calculateSum(int n)\n{\n    if (n <= 0)\n       return 0;\n \n    int fibo[n+1];\n    fibo[0] = 0, fibo[1] = 1;\n \n    // Initialize result\n    int sum = fibo[0] + fibo[1];\n \n    // Add remaining terms\n    for (int i=2; i<=n; i++)\n    {\n        fibo[i] = fibo[i-1]+fibo[i-2];\n        sum += fibo[i];\n    }\n \n    return sum;\n}\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size(); \n        int cnt = 0; \n \n        if (k == 1) { \n            return n; \n        } \n \n        int len = 1; \n        int i = 1; \n        while (i < n+ k - 1) { \n            int cur = i; \n            int pre = i - 1; \n\n            if (cur >= n) { \n                cur -= n; \n            } \n            if (pre >= n) { \n                pre -= n; \n            } \n \n            if (colors[cur] != colors[pre]) { \n                ++len; \n            } else { \n                len = 1; \n            } \n            if (len >= k) { \n                ++cnt; \n            } \n \n            ++i; \n        } \n \n        return cnt; \n    }\n};",
    "submit_ts": "1720280031",
    "subm_id": "1311774379"
}