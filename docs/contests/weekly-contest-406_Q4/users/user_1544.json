{
    "username": "hoanghonghieu",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.begin(), horizontalCut.end());\n        sort(verticalCut.begin(), verticalCut.end());\n        long long total = 0;\n        int hCut = 0;\n        int vCut = 0;\n        int hi = 0;\n        int vi = 0;\n        while (hi < horizontalCut.size() && vi < verticalCut.size()) {\n            if (horizontalCut[hi] < verticalCut[vi]) {\n                total += horizontalCut[hi] * (n - vCut);\n                hi++;\n                hCut++;\n            } else {\n                total += verticalCut[vi] * (m - hCut);\n                vi++;\n                vCut++;\n            }\n        }\n        while (hi < horizontalCut.size()) {\n            total += horizontalCut[hi] * (n - vCut);\n            hi++;\n        }\n        while (vi < verticalCut.size()) {\n            total += verticalCut[vi] * (m - hCut);\n            vi++;\n        }\n        return total;\n    }\n};",
    "submit_ts": "1720926303",
    "subm_id": "1320282182"
}