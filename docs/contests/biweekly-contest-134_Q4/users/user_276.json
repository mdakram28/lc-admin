{
    "username": "gaoqiaoheimu",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int m) {\n        long long ans = 0;\n        int n = nums.size();\n        vector<vector<int>> dp(n, vector<int>(32, 0));\n        for(int i=0;i<32;i++) {\n            dp[n - 1][i] = -1;\n        }\n        for(int k=n-1;k>=1;k--) {\n            int c = nums[k];\n            for(int i=0;i<32;i++) {\n                if ((c & (1 << i)) == 0) {\n                    dp[k - 1][i] = k;\n                } else {\n                    dp[k - 1][i] = dp[k][i];\n                }\n            }\n        }\n        \n        for(int k=0;k<n;k++) {\n            int index = k;\n            int now = nums[k];\n            while (index != n) {\n                int mn = -1;\n                for(int i=0;i<32;i++) {\n                    if (dp[index][i] != -1 && (((1 << i) & now) > 0)) {\n                        if (mn == -1) {\n                            mn = dp[index][i];\n                        } else {\n                            mn = min(mn, dp[index][i]);\n                        }\n                    }\n                }\n                if (mn == -1) {\n                    if (now == m) {\n                        ans += n - index;\n                    }\n                    index = n;\n                } else {\n                    if (now == m) {\n                        ans += mn - index;\n                    }\n                    now &= nums[mn];\n                    index = mn;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277766",
    "subm_id": "1311678977"
}