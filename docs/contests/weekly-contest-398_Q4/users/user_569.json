{
    "username": "realnoname",
    "submission": "class Solution {\n    private int ans = 0;\n    private int target;\n    \n    public int waysToReachStair(int k) {\n        long target = k;\n        long s = 1;\n        long ans = 0;\n        if (target == 0 || target == 1)\n            ans++;\n        // < target not precise\n        for (long jump = 0; jump <= 30; jump++) {\n            s += (1 << jump);\n            if (s < target)\n                continue;\n            ans += c(jump +2, s - target);\n            System.out.println(ans);\n        }\n        return (int)ans;\n\n    }\n    \n    public static long c(long n, long m) {\n        if (m > n) return 0; // C(n, m) is 0 if m > n\n        if (m == 0 || m == n) return 1; // C(n, 0) = C(n, n) = 1\n\n        // Since C(n, m) == C(n, n-m)\n        if (m > n - m) {\n            m = n - m;\n        }\n\n        long result = 1;\n        for (int i = 0; i < m; i++) {\n            result *= (n - i);\n            result /= (i + 1);\n        }\n\n        return result;\n    }\n}",
    "submit_ts": "1716088368",
    "subm_id": "1261811915"
}