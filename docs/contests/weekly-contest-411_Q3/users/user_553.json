{
    "username": "kiedveian",
    "submission": "\nimpl Solution {\n    pub fn largest_palindrome(n: i32, k: i32) -> String {\n        let n = n as usize;\n        let mut result = vec![b'9'; n];\n        match k {\n            1 => {}\n            2 => {\n                result[0] = b'8';\n                result[n - 1] = b'8';\n            }\n            3 => {}\n            4 => {\n                for index in 0..2.min(n) {\n                    result[index] = b'8';\n                    result[n - index - 1] = b'8';\n                }\n            }\n            5 => {\n                result[0] = b'5';\n                result[n - 1] = b'5';\n            }\n            6 => {\n                if n <= 2 {\n                    result[0] = b'6';\n                    result[n - 1] = b'6';\n                } else {\n                    if n % 2 == 0 {\n                        // 89* (77)+ 9*8\n                        result[0] = b'8';\n                        result[n - 1] = b'8';\n                        result[n / 2 - 1] = b'7';\n                        result[n / 2] = b'7';\n                    } else {\n                        // 89* 8+ 9*8\n                        result[0] = b'8';\n                        result[n - 1] = b'8';\n                        result[n / 2] = b'8';\n                    }\n                }\n            }\n            7 => match n % 12 {\n                0 | 6 => {}\n                1 | 5 => result[n / 2] = b'7',\n                2 | 4 => {\n                    result[n / 2 - 1] = b'7';\n                    result[n / 2] = b'7';\n                }\n                3 => result[n / 2] = b'5',\n                7 | 11 => result[n / 2] = b'4',\n                8 | 10 => {\n                    result[n / 2 - 1] = b'4';\n                    result[n / 2] = b'4';\n                }\n                9 => result[n / 2] = b'6',\n                _ => unreachable!(\"error\"),\n            },\n            8 => {\n                for index in 0..3.min(n) {\n                    result[index] = b'8';\n                    result[n - index - 1] = b'8';\n                }\n            }\n            9 => {}\n            _ => unreachable!(\"error\"),\n        }\n        String::from_utf8(result).unwrap()\n    }\n}\n",
    "submit_ts": "1723952942",
    "subm_id": "1359808462"
}