{
    "username": "vedanttaak",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> mp;\n        vector<int> temp;\n        int n = nums.size();\n \n        for (int i = 0; i < n / 2; ++i) {\n            int l = nums[i], r=nums[n - i - 1];\n            int rem = abs(l - r);\n            int maxVal = max({l, r, k - l, k - r});\n            mp[rem].push_back(maxVal);\n            temp.push_back(maxVal);\n        }\n\n        int res = n;  \n        sort(temp.begin(), temp.end());\n\n        for (const auto& [i, j] : mp) {\n            int cnt = lower_bound(temp.begin(), temp.end(), i) - temp.begin();\n            cnt = cnt * 2 + (n / 2 - cnt);\n\n            for (const auto& val : j) {\n                if (val < i) {\n                    cnt -= 2;\n                } else {\n                    cnt -= 1;\n                }\n            }\n\n            res = min(res, cnt);\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1721489953",
    "subm_id": "1327468685"
}