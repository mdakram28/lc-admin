{
    "username": "timetoai",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        tar = [0] * 32\n        for b in range(32):\n            tar[b] = k & (1 << b) > 0\n        ret = 0\n        \n        def add(arr):\n            print(arr)\n            arr = [[int(num & (1 << b) > 0) for b in range(32)] for num in arr]\n            res = 0\n            i = j = 0\n            cur = [0] * 32\n            left = 0\n            while j < len(arr):\n                for b in range(32):\n                    cur[b] += arr[j][b]\n                if all((cur[b] == j - i + 1) == tar[b] for b in range(32)):\n                    while i <= j and all((cur[b] == j - i + 1) == tar[b] for b in range(32)):\n                        for b in range(32):\n                            cur[b] -= arr[i][b]\n                        i += 1\n                    i -= 1\n                    for b in range(32):\n                        cur[b] += arr[i][b]\n                    # min base\n                    # print(i, j)\n                    res += (i - left + 1) * (len(arr) - j)\n                    for b in range(32):\n                        cur[b] -= arr[i][b]\n                    i += 1\n                    left = i\n                j += 1\n            return res\n        \n        prv = 0\n        for i in range(len(nums)):\n            if any(nums[i] & (1 << b) == 0 and tar[b] for b in range(32)):\n                ret += add(nums[prv:i])\n                prv = i + 1\n        ret += add(nums[prv:])\n        return ret",
    "submit_ts": "1720280705",
    "subm_id": "1311799128"
}