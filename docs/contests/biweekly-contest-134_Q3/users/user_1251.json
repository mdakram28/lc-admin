{
    "username": "drexdelta",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        for(int i = 0 ; i < k-1 ; i++) {\n            colors.push_back(colors[i]);\n        }\n        int newN = colors.size();\n        int dp[newN+1];\n        dp[0] = 0;\n        for(int i = 1 ; i < newN ; i++) {\n            if(colors[i] != colors[i-1]) {\n                dp[i] = dp[i-1] + 1;\n            } else {\n                dp[i] = dp[i-1];\n            }\n        }\n        int ans = 0;\n        if(dp[k-1] == k-1) ans++;\n        for(int i = k ; i < newN ; i++) {\n            if((dp[i] - dp[i-k+1]) == (k-1)) {\n                // cout << \" increasing whne i \" << i << endl;\n                // cout << \" dp[i] \" << dp[i] << \" dp[i-k] \" << dp[i-k] << endl;\n                ans++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277419",
    "subm_id": "1311662857"
}