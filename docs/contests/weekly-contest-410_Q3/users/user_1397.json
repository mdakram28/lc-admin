{
    "username": "syc123",
    "submission": "class Solution {\n    int[][] memo;\n    int count = 0, mod = 1_000_000_007;\n\n    public int countOfPairs(int[] nums) {\n        int n = nums.length;\n        memo = new int[n][51];\n        for (int[] m : memo) {\n            Arrays.fill(m, -1);\n        }\n\n        int[] arr2 = new int[n], arr1 = new int[n];\n        for (int i = nums[n - 1]; i >= 0; i--) {\n            arr2[n - 1] = i;\n            arr1[n - 1] = nums[n - 1] - i;\n            count = (count + dp(nums, arr1, arr2, n - 2)) % mod;\n        }\n    \n        return count;\n    }\n\n    private int dp(int[] nums, int[] arr1, int[] arr2, int index) {\n        if (index < 0) {\n            return 1;\n        }\n\n        if (memo[index][arr2[index + 1]] >= 0) {\n            return memo[index][arr2[index + 1]];\n        }\n\n        int subCount = 0;\n        for (int i = arr2[index + 1]; i <= nums[index]; i++) {\n            int first = nums[index] - i;\n            if (first > arr1[index + 1]) {\n                continue;\n            }\n            arr1[index] = first;\n            arr2[index] = i;\n            subCount = (subCount + dp(nums, arr1, arr2, index - 1)) % mod;\n        }\n        memo[index][arr2[index + 1]] = subCount;\n        // System.out.println(Arrays.toString(arr1) + \" \" + Arrays.toString(arr2) + \" \" + index + \" \" + subCount);\n        return subCount;\n    }\n}",
    "submit_ts": "1723345688",
    "subm_id": "1351561221"
}