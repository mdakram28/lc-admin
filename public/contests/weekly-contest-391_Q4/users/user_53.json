{
    "username": "MeetBrahmbhatt",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& pts) {\n        vector<pair<int, int>> sum;\n        vector<pair<int, int>> diff;\n        int n = (int) pts.size();\n\n        for (int i = 0; i < n; i++) {\n            int x = pts[i][0];\n            int y = pts[i][1];\n            sum.push_back({x + y, i});\n            diff.push_back({x - y, i});\n        }\n\n        sort(begin(sum), end(sum));\n        sort(begin(diff), end(diff));\n\n        int ans = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            int x = pts[i][0];\n            int y = pts[i][1];\n            \n            int sum_min = (sum[0].second == i ? sum[1].first : sum[0].first);\n            int sum_max = (sum[n - 1].second == i ? sum[n - 2].first : sum[n - 1].first);\n\n            int diff_min = (diff[0].second == i ? diff[1].first : diff[0].first);\n            int diff_max = (diff[n - 1].second == i ? diff[n - 2].first : diff[n - 1].first);\n\n            ans = min(ans, max(diff_max - diff_min, sum_max - sum_min));\n        }\n        return ans;\n    }\n};"
}