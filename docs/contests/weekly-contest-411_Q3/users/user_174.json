{
    "username": "trchen",
    "submission": "class Solution {\n public:\n  string largestPalindrome(int n, int k) {\n    if (n == 1) {\n      for (int i = 9; i >= 0; --i) {\n        if (i % k == 0) {\n          return to_string(i);\n        }\n      }\n    }\n    if (n == 2) {\n      for (int i = 99; i >= 0; i -= 11) {\n        if (i % k == 0) {\n          return to_string(i);\n        }\n      }\n    }\n    string ret(n, '9');\n    if (k == 5) {\n      ret[0] = '5';\n      ret.back() = '5';\n      return ret;\n    }\n    if (k % 2 == 0) {\n      ret[0] = '8';\n      ret.back() = '8';\n      if (k % 4 == 0) {\n        ret[1] = '8';\n        ret[ret.size() - 2] = '8';\n      }\n      if (k % 8 == 0) {\n        ret[2] = '8';\n        ret[ret.size() - 3] = '8';\n      }\n    }\n    vector<int> pow10(n);\n    pow10[0] = 1;\n    for (int i = 1; i < n; ++i) {\n      pow10[i] = (pow10[i - 1]) * 10 % k;\n    }\n    if (n % 2 == 0) {\n      int left = n / 2 - 1;\n      int right = n / 2;\n      int sum = 0;\n      for (int i = 0; i < n; ++i) {\n        if (i != left && i != right) {\n          sum += (ret[i] - '0') * pow10[i];\n        }\n      }\n      sum %= k;\n      for (int j = 9; j >= 0; --j) {\n        if ((sum + j * (pow10[left] + pow10[right])) % k == 0) {\n          ret[left] = '0' + j;\n          ret[right] = '0' + j;\n          return ret;\n        }\n      }\n    }\n    int mid = n / 2;\n    int sum = 0;\n    for (int i = 0; i < n; ++i) {\n      if (i != mid) {\n        sum += (ret[i] - '0') * pow10[i];\n      }\n    }\n    sum %= k;\n    for (int j = 9; j >= 0; --j) {\n      if ((sum + j * pow10[mid]) % k == 0) {\n        ret[mid] = '0' + j;\n        return ret;\n      }\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1723953075",
    "subm_id": "1359811745"
}