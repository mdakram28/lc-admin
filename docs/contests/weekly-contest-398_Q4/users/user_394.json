{
    "username": "Govind_Singh_2003",
    "submission": "class Solution {\npublic:\n    map<vector<int>, int> dp;\n    int solve(int i, bool can, int jump, int k)\n    {\n        if(i > k + 1)\n            return 0;\n        if(dp.find({i, can, jump}) != dp.end())\n            return dp[{i, can, jump}];\n        int cnt = (i == k) + solve(i + (1LL << jump), 1, jump + 1, k);\n        if(can) cnt += solve(i - 1, 0, jump, k);\n        return dp[{i, can, jump}] = cnt;\n    }\n    int waysToReachStair(int k) {\n        return solve(1, 1, 0, k);\n    }\n};",
    "submit_ts": "1716088062",
    "subm_id": "1261802783"
}