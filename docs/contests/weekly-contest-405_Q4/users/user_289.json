{
    "username": "addusirmac",
    "submission": "class Solution {\n    #define ll long long int\n    \npublic:\n    \n    \n    class Trie{\n            private:\n                const static int ALPHABET_SIZE=26;\n                const static char baseChar='a';\n                const static ll INF= 1e12;\n            public:\n                struct Node{\n                    int next[ALPHABET_SIZE];\n                    bool isEnd;\n                    ll mnCost;\n\n                    Node(){\n                        memset(next,-1,sizeof(next));\n                        isEnd=0;\n                        mnCost=INF;\n                    }\n                };\n\n                //next links array will be storing the \n                //the index of next node in the vector of nodes\n\n                vector<Node>tree;\n\n                Trie(){\n                    tree.push_back(Node());\n                }\n            \n\n                void insert(const string &s, ll x){\n                    int ind=0;\n\n                    for(int i=0; i<s.size(); i++){\n                        if(tree[ind].next[s[i]-baseChar]==-1){\n                            tree.push_back(Node());\n                            tree[ind].next[s[i]-baseChar]= (int)tree.size() -1;\n                        }\n\n                        ind= tree[ind].next[s[i]-baseChar];\n                    }\n                    tree[ind].isEnd= 1;\n                    tree[ind].mnCost= min(tree[ind].mnCost, x);\n                }\n    };\n    const ll INF= 1e12;\n    \n    int minimumCost(string t, vector<string>& v, vector<int>& costs) {\n        Trie Tr;\n        int sz= v.size();\n        for(int i=0; i<sz; i++)Tr.insert(v[i], (ll)costs[i]);\n        int n= t.size();\n        vector<ll>dp(n+1, INF);\n        dp[n]=0;\n        auto minCost=[&](int j)->ll{\n                    int ind=0;\n                    ll ans= INF;\n                    for(int i=j; i<t.size(); i++){\n                        if(Tr.tree[ind].next[t[i]-'a']==-1){\n                            return ans;\n                        }\n                        \n                        ind= Tr.tree[ind].next[t[i]-'a'];\n                        if(Tr.tree[ind].isEnd)\n                            ans= min(ans, Tr.tree[ind].mnCost+ dp[i+1]);\n                    }\n                    return ans;\n                };\n        \n        for(int i=n-1; i>=0; i--){\n            dp[i]= minCost(i);\n        }\n        if(dp[0]>=INF/2)return -1;\n        return (int)dp[0];\n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n};",
    "submit_ts": "1720322032",
    "subm_id": "1312338862"
}