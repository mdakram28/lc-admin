{
    "username": "KeshavChib",
    "submission": "class Solution {\n    #define ll long long\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector<pair<int, pair<int, int>>> arr;\n        int n = board.size();\n        int m = board[0].size();\n\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                arr.push_back({board[i][j], {i, j}});\n            }\n        }\n\n        sort(arr.begin(), arr.end());\n        \n        if(arr.size() > 200) {\n            reverse(arr.begin(), arr.end());\n            while(arr.size() > 200) arr.pop_back();\n            reverse(arr.begin(), arr.end());\n        } \n\n        unordered_map<int , int> rows;\n        unordered_map<int , int> cols;\n        long long ans = -2e10;\n        int sz = arr.size();\n\n        for(int i=sz-1;i>=2;i--){\n            auto itr = arr[i];\n            int curr_row = itr.second.first;\n            int curr_col = itr.second.second;\n            rows[curr_row] = 1;\n            cols[curr_col] = 1;\n            long long curr = itr.first;\n            for(int j=i-1;j>=1;j--){\n                auto itj = arr[j];\n                int cr = itj.second.first;\n                int cc = itj.second.second;\n                if(rows[cr] || cols[cc]) continue;\n                else {\n                    rows[cr] = 1;\n                    cols[cc] = 1;\n                    \n                    for(int k=j-1;k>=0;k--){\n                        auto itk = arr[k];\n                        int r = itk.second.first;\n                        int c = itk.second.second;\n                        if(rows[r] || cols[c]) continue;\n                        else ans = max(ans, curr + itj.first + itk.first);\n                    }\n                    rows[cr] = 0;\n                    cols[cc] = 0;\n                }\n            }\n            rows[curr_row] = 0;\n            cols[curr_col] = 0;\n        }\n        return ans;\n    }\n\n};",
    "submit_ts": "1723910278",
    "subm_id": "1359224078"
}