{
    "username": "ddiibboo",
    "submission": "class Solution {\n\n    int[][] rc;\n    int n;\n\n    public int minimumDifference(int[] nums, int k) {\n        int n = nums.length;\n        rc = new int[n][18];\n\n        for (int i = 0; i < n; ++i) {\n            rc[i][0] = nums[i];\n        }\n        for (int i = 1; (1 << i) < n; ++i) {\n            int len = 1 << i;\n            for (int j = 0; j < n; ++j) {\n                if (j + len > n) rc[j][i] = -1;\n                else rc[j][i] = rc[j][i - 1] & rc[j + (1 << (i - 1))][i - 1];\n            }\n        }\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < n; ++i) {\n            int l = i, r = n - 1;\n            while (l <= r) {\n                int mid = (l + r) >> 1;\n                int sum = get(i, mid);\n                if (sum == k) {\n                    return 0;\n                }\n                if (sum > k) {\n                    ans = Math.min(ans, sum - k);\n                    l = mid + 1;\n                } else {\n                    ans = Math.min(ans, k - sum);\n                    r = mid - 1;\n                }\n            }\n        }\n        return ans;\n    }\n\n    private int get(int l, int r) {\n        int len = r - l + 1;\n        int ans = Integer.MAX_VALUE;\n        int p = l;\n        for (int i = 0; len > 0; ++i, len >>= 1) {\n            if ((len & 1) == 1) {\n                ans &= rc[p][i];\n                p += 1 << i;\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1717298053",
    "subm_id": "1274765647"
}