{
    "username": "orangesTA",
    "submission": "struct FenwickTree {\n    vector<int> bit;  // binary indexed tree\n    int n;\n \n    FenwickTree(int n) {\n        this->n = n;\n        bit.assign(n, 0);\n    }\n \n    FenwickTree(vector<int> const &a) : FenwickTree(a.size()) {\n        for (size_t i = 0; i < a.size(); i++)\n            add(i, a[i]);\n    }\n \n    int sum(int r) {\n        int ret = 0;\n        for (; r >= 0; r = (r & (r + 1)) - 1)\n            ret += bit[r];\n        return ret;\n    }\n \n    // inclusive\n    int sum(int l, int r) {\n\t    if (l == 0) return sum(r);\n        return sum(r) - sum(l - 1);\n    }\n \n    void add(int idx, int delta) {\n        for (; idx < n; idx = idx | (idx + 1))\n            bit[idx] += delta;\n    }\n \n    void printer() {\n        cout << \"ft = \";\n        for (int i = 0; i < n; i++) {\n            cout << bit[i] << \" \";\n        }\n        cout << \"\\n\";\n    }\n};\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& v, vector<vector<int>>& allq) {\n        int n = (int)v.size();\n        struct FenwickTree ft(n);\n        for (int i = 1; i+1 < n; i++) {\n            if (v[i-1] < v[i] && v[i] > v[i+1]) {\n                ft.add(i, 1);\n            }\n        }\n        \n        vector<int> res;\n        for (auto q: allq) {\n            if (q[0] == 1) {\n                int curres = ft.sum(q[1], q[2]);\n                if (ft.sum(q[1],q[1])) curres--;\n                if (ft.sum(q[2],q[2])) curres--;\n                res.push_back(max(0,curres));\n            } else {\n                int idx = q[1];\n                int val = q[2];\n                for (int i = idx-1; i <= idx+1; i++) {\n                    if (i-1 < 0) continue;\n                    if (i+1 >= n) continue;\n                    if (v[i-1] < v[i] && v[i] > v[i+1]) {\n                        ft.add(i, -1);\n                    }\n                }\n                v[idx] = val;\n                for (int i = idx-1; i <= idx+1; i++) {\n                    if (i-1 < 0) continue;\n                    if (i+1 >= n) continue;\n                    if (v[i-1] < v[i] && v[i] > v[i+1]) {\n                        ft.add(i, 1);\n                    }\n                }\n                \n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718508147",
    "subm_id": "1289673031"
}