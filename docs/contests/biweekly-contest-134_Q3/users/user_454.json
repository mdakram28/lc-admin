{
    "username": "Devil_Dhruv",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int n = colors.size();\n        vector<int> dp(2 * n, 1);\n        int groups = 0;\n\n        for (int i = 1; i < 2 * n; ++i) {\n            if (colors[i % n] != colors[(i - 1) % n]) {\n                dp[i] = dp[i - 1] + 1;\n            } else {\n                dp[i] = 1;\n            }\n        }\n\n        for (int i = 0; i < n; ++i) {\n            if (dp[i + k - 1] >= k) {\n                groups++;\n            }\n        }\n\n        return groups;\n    }\n};",
    "submit_ts": "1720276792",
    "subm_id": "1311632806"
}