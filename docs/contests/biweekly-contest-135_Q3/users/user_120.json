{
    "username": "socrates1232",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        import numpy as np\n        n = len(nums)\n        cost = [0] * (k + 2)\n        for i in range(int(n / 2)):\n            x = nums[i]\n            y = nums[n - i - 1]\n            cost[0] += 1\n            cost[max(max(x, y), max(k - x, k - y)) + 1] += 1\n            cost[np.abs(x - y)] -= 1\n            cost[np.abs(x - y) + 1] += 1\n        for i in range(1, k + 1):\n            cost[i] += cost[i - 1]\n        return min(cost[0:k + 1])",
    "submit_ts": "1721487250",
    "subm_id": "548309129"
}