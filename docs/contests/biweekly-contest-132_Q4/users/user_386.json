{
    "username": "NifasatBeg",
    "submission": "class Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int n = nums.size();\n        int dp[n+1][k+1];\n        int maxi[n+1][k+1];\n        for(int i = 0;i<=k;i++){\n            dp[0][i] = 0;\n            maxi[0][i] = 0;\n        }\n        int nearestEqual[n];\n        map<int,int>mp;\n        for(int i = 0;i<n;i++){\n            if(mp.find(nums[i]) == mp.end()){\n                nearestEqual[i] = -1;\n                mp[nums[i]] = i;\n            }else{\n                nearestEqual[i] = mp[nums[i]];\n                mp[nums[i]] = i;\n            }\n        }\n        for(int i = 1;i<=n;i++){\n            for(int j = 0;j<=k;j++){\n                dp[i][j] = 1;\n                int other = 0;\n                if(nearestEqual[i-1]!=-1){\n                    other = max(other, dp[nearestEqual[i-1]+1][j]);\n                }\n                if(j>0)\n                    other = max(other, maxi[i-1][j-1]);\n                dp[i][j] += other;\n                maxi[i][j] = max(maxi[i-1][j], dp[i][j]);\n            }\n        }\n        return maxi[n][k];\n    }\n};",
    "submit_ts": 1717861416.0
}