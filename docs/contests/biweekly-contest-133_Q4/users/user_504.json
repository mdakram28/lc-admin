{
    "username": "rk_02_04",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        const int MOD = 1e9 + 7;\n    const int maxi = 400;\n    map<int, int> mp;\n    for (const auto& req : requirements) {\n        mp[req[0] + 1] = req[1];\n    }\n\n    vector<vector<long long>> dp(n + 1, vector<long long>(maxi + 1, 0));\n    dp[0][0] = 1;\n\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j <= maxi; j++) {\n            for (int k = 0; k < i; k++) {\n                int prevInv = j - k;\n                if (prevInv >= 0) {\n                    dp[i][j] = (dp[i][j] + dp[i - 1][prevInv]) % MOD;\n                }\n            }\n        }\n\n        if (mp.find(i) != mp.end()) {\n            int targetInv = mp[i];\n            for (int j = 0; j <= maxi; j++) {\n                if (j != targetInv) {\n                    dp[i][j] = 0;\n                }\n            }\n        }\n    }\n\n    long long result = 0;\n    for (long long count : dp[n]) {\n        result = (result + count) % MOD;\n    }\n\n    return (int) result;\n        \n    }\n};",
    "submit_ts": 1719070575.0
}