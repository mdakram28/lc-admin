{
    "username": "Satyansh2021",
    "submission": "class Solution {\npublic:\n    // int memo(vector<int>&nums, int k, int ind){\n    //     if(ind<nums[ind].size()-k)\n    // }\n    int numberOfAlternatingGroups(vector<int>& nums, int k) {\n        int len = nums.size();\n        int cnt = 0;\n        if(k==1){\n            return len;\n        }\n        int ans = 1;\n        int finalCount = 0;\n        int startIdx = 1;\n        for(int startIdx=1; startIdx<len+k-1; startIdx++){\n            int currIdx = startIdx;\n            int lastIdx = startIdx - 1;\n\n            //Circular index condition\n            if(currIdx>=len){\n                currIdx -= len;\n            }\n            if(lastIdx>=len){\n                lastIdx-=len;\n            }\n\n            //Main condtion\n            if(nums[currIdx]!=nums[lastIdx]){\n                ans++;\n            }else{\n                ans = 1;\n            }\n\n            //Alternative groups of length k\n            if(ans >= k){\n                finalCount++;\n            }\n        }\n        return finalCount;\n    }\n};",
    "submit_ts": "1720280024",
    "subm_id": "1311774117"
}