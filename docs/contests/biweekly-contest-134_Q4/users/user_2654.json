{
    "username": "GloriousPurpose",
    "submission": "class Solution {\n    long long getCurrentCount(int idx, vector<int> &freq, vector<int> &firstOcc, int k) {\n        int len = idx + 1;\n        int ep = (int) 1e9;\n        \n        for (int i = 0; i < 31; i++) {\n            int mask = (1 << i);\n            \n            if ((mask & k) != 0) {\n                len = min(len, freq[i]);\n            } else {\n                ep = min(ep, firstOcc[i]);\n            }\n        }\n        \n        int sp = idx - len + 1;\n        \n        return sp > ep ? 0l : (long long) (ep - sp + 1);\n    }\npublic:\n    long long countSubarrays(vector<int>& arr, int k) {\n        int n = arr.size();\n        \n        vector<vector<int>> freq(n, vector<int>(32, 0)), firstOcc(n, vector<int>(32));\n        \n        long long ans = 0l;\n        \n        for (int i = 0; i < n; i++) {\n            int ele = arr[i];\n            for (int j = 0; j < 31; j++) {\n                int mask = (1 << j);\n                \n                if ((mask & ele) != 0) {\n                    freq[i][j] = 1 + (i == 0 ? 0 : freq[i - 1][j]);\n                    firstOcc[i][j] = i == 0 ? -1 : firstOcc[i - 1][j];\n                } else {\n                    freq[i][j] = 0;\n                    firstOcc[i][j] = i;\n                }\n            }\n            ans += getCurrentCount(i, freq[i], firstOcc[i], k);\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720280763",
    "subm_id": "1311801180"
}