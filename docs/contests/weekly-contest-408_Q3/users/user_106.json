{
    "username": "ow3nL",
    "submission": "import math\nclass Solution(object):\n    def numberOfSubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        zeros = []\n        streaks = []\n        slen = 0\n        for i, c in enumerate(s):\n            if c == '0':\n                zeros.append(i)\n                streaks.append(slen)\n                slen = 0\n            else:\n                slen += 1\n        streaks.append(slen)\n        nz = len(zeros)\n        # print(zeros)\n\n        st_pref = [0 for _ in range(len(streaks)+1)]\n        for i in range(len(streaks)):\n            st_pref[i+1] = st_pref[i] + streaks[i]\n        \n        ans = 0\n        for st in streaks:\n            ans += st * (st + 1) // 2\n        # print(0, ans)\n        \n        for z in range(1, min(int(math.sqrt(len(s))+1)+1, s.count('0')+1)):\n            pans = ans\n            for i in range(nz - z + 1):\n                first = zeros[i]\n                last = zeros[i+z-1]\n                before = streaks[i]\n                midones = st_pref[i+z] - st_pref[i+1]\n                after = streaks[i+z]\n\n                if before + after + midones >= z ** 2:\n                    for skip in range(before+1):\n                        d = before + after + midones - z ** 2 - skip\n                        # print(before, after, midones, skip, d)\n                        if d < 0:\n                            break\n                        ans += min(after, d)+1\n            # print(z, ans - pans)\n        \n        return ans",
    "submit_ts": "1722136534",
    "subm_id": "1335737455"
}