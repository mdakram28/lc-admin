{
    "username": "MKLOL",
    "submission": "typedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double, double> pdd;\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define rep(i, from, to) for (int i = from; i < (to); ++i)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n#define FOR(i, to) for (int i = 0; i < (to); ++i)\ntypedef vector<vector<int> > vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<pair<int, int> > vpi;\ntypedef pair<ll,ll> pll;\ntypedef vector<string> vs;\n#define MOD 1000000007\n#define Nmax 501010\n\nll t1[4*Nmax], t2[4*Nmax], t3[4*Nmax], t4[Nmax];\nvoid update(int nod, int st, int dr, int poz, ll val) {\n  if(st==dr) { t3[nod] = t4[nod] = t2[nod] = 0; t1[nod] = max(0LL, val);  return; }\n  int mij = (st+dr)/2;\n  if(poz<=mij) update(2*nod,st,mij,poz,val);\n  else update(2*nod+1,mij+1,dr,poz,val);\n  int l = nod*2;\n    int r = nod*2+1;\n    t1[nod] = max(t1[l], t1[r]);\n    t1[nod] = max(t1[nod], t3[l] + t1[r]);\n    t1[nod] = max(t1[nod], t1[l] + t2[r]);\n    t2[nod] = max(t2[l] + t2[r], t4[l] + t1[r]);\n    t3[nod] = max(t1[l] + t4[r], t3[l] + t3[r]);\n    t4[nod] = max(t4[l] + t3[r], t2[l] + t4[r]);\n}\n\n\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        int N = sz(nums);\n        FOR(i, 4*N + 10) {\n            t1[i] = t2[i] = t3[i] = t4[i] = 0;\n        }\n        FOR(i, N) {\n            update(1,0,N-1, i, nums[i]);\n        }\n        ll ret = 0;\n        for (auto &q : queries) {\n            update(1,0,N-1, q[0], q[1]);\n            ret += t1[1];\n            ret %= MOD;\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1716692371.0
}