{
    "username": "relaxed-archimedesfr8",
    "submission": "class Solution {\n        private int getCost(int[][] grid,int i,int j){\n            int m=grid.length,n=grid[0].length,res=0,x=grid[i][j];\n            if(grid[m-i-1][j]!=x)\n                ++res;\n            if(grid[i][n-1-j]!=x)\n                ++res;\n            if(grid[m-i-1][n-1-j]!=x)\n                ++res;\n            return res;\n        }\n        public int minFlips(int[][] grid) {\n            int m=grid.length,n=grid[0].length,i,j,res=0;\n            if(m%2==0&&n%2==0){//4*4\n                for(i=0;i<m/2;++i){\n                    for(j=0;j<n/2;++j){\n                        int cost=getCost(grid,i,j);\n                        res+=Math.min(cost,4-cost);\n                    }\n                }\n                return res;\n            }else if(m%2==1&&n%2==1){//3*3\n                for(i=0;i<m/2;++i){\n                    for(j=0;j<n/2;++j){\n                        int cost=getCost(grid,i,j);\n                        res+=Math.min(cost,4-cost);\n                    }\n                }\n                int row=m/2,col=n/2,count1=0;\n                boolean flag=false;\n                if(grid[row][col]==1)\n                    ++res;\n                for(i=0;i<n/2;++i){\n                    if(grid[row][i]==grid[row][n-i-1]&&grid[row][i]==1)\n                        count1+=2;\n                    else if(grid[row][i]!=grid[row][n-i-1]){\n                        ++res;\n                        flag=true;\n                    }\n                }\n                for(i=0;i<m/2;++i){\n                    if(grid[i][col]==grid[m-i-1][col]&&grid[i][col]==1)\n                        count1+=2;\n                    else if(grid[i][col]!=grid[m-i-1][col]){\n                        ++res;\n                        flag=true;\n                    }\n                }\n                if(flag==false&&count1%4!=0)\n                    res+=2;\n                return res;\n            }else if(m%2==1){//3*4\n                for(i=0;i<m/2;++i){\n                    for(j=0;j<n/2;++j){\n                        int cost=getCost(grid,i,j);\n                        res+=Math.min(cost,4-cost);\n                    }\n                }\n                int row=m/2,count1=0;\n                boolean flag=false;\n                for(i=0;i<n/2;++i){\n                    if(grid[row][i]==grid[row][n-i-1]&&grid[row][i]==1)\n                        count1+=2;\n                    else if(grid[row][i]!=grid[row][n-i-1]){\n                        ++res;\n                        flag=true;\n                    }\n                }\n                if(flag==false&&count1%4!=0)\n                    res+=2;\n                return res;\n            }else{//4*3\n                for(i=0;i<m/2;++i){\n                    for(j=0;j<n/2;++j){\n                        int cost=getCost(grid,i,j);\n                        res+=Math.min(cost,4-cost);\n                    }\n                }\n                int col=n/2,count1=0;\n                boolean flag=false;\n                for(i=0;i<m/2;++i){\n                    if(grid[i][col]==grid[m-i-1][col]&&grid[i][col]==1)\n                        count1+=2;\n                    else if(grid[i][col]!=grid[m-i-1][col]){\n                        ++res;\n                        flag=true;\n                    }\n                }\n                if(flag==false&&count1%4!=0)\n                    res+=2;\n                return res;\n            }\n        }\n}",
    "submit_ts": "1722698209",
    "subm_id": "552269861"
}