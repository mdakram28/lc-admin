{
    "username": "SSYernar",
    "submission": "class Solution {\npublic:\n    // vector<int> p;\n    // int get(int v) {\n    //     if (p[v] == v) {\n    //         return v;\n    //     }\n    //     return p[v] = get(p[v]);\n    // }\n    // bool merge(int a, int b) {\n    //     a = get(a);\n    //     b = get(b);\n    //     if (a == b) {\n    //         return 0;\n    //     }\n    //     p[a] = b;\n    //     return 1;\n    // }\n    vector<int> pr, nx;\n    void del(int i) {\n        if (pr[i] >= 0)\n            nx[pr[i]] = nx[i];\n        if (nx[i] >= 0)\n            pr[nx[i]] = pr[i];\n    }\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        pr.resize(n);\n        nx.resize(n);\n        vector<int> a(n), b(n);\n        long long ans = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = b[i] = target[i] - nums[i];\n            if (a[i] < 0) {\n                a[i] = 0;\n            }\n            if (b[i] > 0) {\n                b[i] = 0;\n            }\n            else {\n                b[i] = -b[i];\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            pr[i] = i - 1;\n            nx[i] = i + 1;\n        }\n        nx[n - 1] = -1;\n\n        vector<pair<int, int>> vec;\n        for (int i = 0; i < n; i++) {\n            vec.push_back({a[i], i});\n        }\n        sort(vec.begin(), vec.end());\n        reverse(vec.begin(), vec.end());\n        for (auto [val, i]: vec) {\n            if (pr[i] >= 0 && nx[i] >= 0) {\n                ans += a[i] - max(a[pr[i]], a[nx[i]]);\n            }\n            else if (pr[i] == -1 && nx[i] >= 0) {\n                ans += a[i] - a[nx[i]];\n            }\n            else if (pr[i] >= 0 && nx[i] == -1) {\n                ans += a[i] - a[pr[i]];\n            }\n            else {\n                ans += a[i];\n            }\n            del(i);\n        }\n\n\n        vec.clear();\n        for (int i = 0; i < n; i++) {\n            pr[i] = i - 1;\n            nx[i] = i + 1;\n        }\n        nx[n - 1] = -1;\n        for (int i = 0; i < n; i++) {\n            a[i] = b[i];\n        }\n        for (int i = 0; i < n; i++) {\n            vec.push_back({a[i], i});\n        }\n        sort(vec.begin(), vec.end());\n        reverse(vec.begin(), vec.end());\n        for (auto [val, i]: vec) {\n            if (pr[i] >= 0 && nx[i] >= 0) {\n                ans += a[i] - max(a[pr[i]], a[nx[i]]);\n            }\n            else if (pr[i] == -1 && nx[i] >= 0) {\n                ans += a[i] - a[nx[i]];\n            }\n            else if (pr[i] >= 0 && nx[i] == -1) {\n                ans += a[i] - a[pr[i]];\n            }\n            else {\n                ans += a[i];\n            }\n            del(i);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531876",
    "subm_id": "1327972093"
}