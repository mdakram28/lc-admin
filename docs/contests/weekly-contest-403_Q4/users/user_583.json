{
    "username": "drwangjiang",
    "submission": "int a[51][51], tp[51], le[51], dn[51], ri[51];\nint f[32][32][32][32], g[32][32][32][32], h[32][32][32][32], r[32][32][32][32];\nint o;\nint b[51][51];\n\nclass Solution {\npublic:\n    int query(int x, int y, int z, int w) {\n        int cnt = b[z][w] - b[z][y - 1] - b[x - 1][w] + b[x - 1][y - 1];\n        if (cnt == 0) o = 1;\n        else o = (h[x][y][z][w] - f[x][y][z][w] + 1) * (r[x][y][z][w] - g[x][y][z][w] + 1);\n        return cnt;\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int inf = 0x3f3f3f3f;\n        int sigma = inf / 2;\n        int n = grid.size(), m = grid[0].size();\n        for (int i = 0; i < n; i ++)\n            for (int j = 0; j < m; j ++) a[i+1][j+1] = grid[i][j];\n        for (int i = 1; i <= n; i ++)\n            for (int j = 1; j <= m; j ++) b[i][j] = a[i][j] + b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];\n        tp[0] = inf;\n        int all = b[n][m];\n        for (int j = 1; j <= m; j ++) {\n            tp[j] = tp[j - 1];\n            for (int i = 1; i <= n; i ++)\n                if (a[i][j] == 1) tp[j] = min(tp[j], i);\n        }\n        le[0] = inf;\n        for (int i = 1; i <= n; i ++) {\n            le[i] = le[i - 1];\n            for (int j = 1; j <= m; j ++) \n                if (a[i][j] == 1) le[i] = min(le[i], j);\n        }\n        dn[m + 1] = -inf;\n        for (int j = m; j >= 1; j --) {\n            dn[j] = dn[j + 1];\n            for (int i = 1; i <= n; i ++)\n                if (a[i][j] == 1) dn[j] = max(dn[j], i);\n        }\n        ri[n + 1] = -inf;\n        for (int i = n; i >= 1; i --) {\n            ri[i] = ri[i + 1];\n            for (int j = 1; j <= m; j ++) \n                if (a[i][j] == 1) ri[i] = max(ri[i], j);\n        }\n        for (int i = 0; i <= n+1; i ++)\n            for (int j = 0; j <= m+1; j ++)\n                for (int k = 0; k <= n+1; k ++)\n                    for (int l = 0; l <= m+1; l ++) {\n                        f[i][j][k][l] = g[i][j][k][l] = inf;\n                        h[i][j][k][l] = r[i][j][k][l] = -inf;\n                    }\n        \n        for (int i = 1; i <= n; i ++)\n            for (int j = 1; j <= m; j ++)\n                for (int k = i; k <= n; k ++)\n                    for (int l = j; l <= m; l ++) {\n                        f[i][j][k][l] = min(f[i][j][k - 1][l], f[i][j][k][l - 1]);\n                        if (a[k][l] == 1) f[i][j][k][l] = min(f[i][j][k][l], k);\n                        g[i][j][k][l] = min(g[i][j][k][l - 1], g[i][j][k - 1][l]);\n                        if (a[k][l] == 1) g[i][j][k][l] = min(g[i][j][k][l], l);\n                    }\n        for (int k = n; k >= 1; k --)\n            for (int l = m; l >= 1; l --)\n                for (int i = k; i >= 1; i --)\n                    for (int j = l; j >= 1; j --) {\n                        h[i][j][k][l] = max(h[i+1][j][k][l], h[i][j+1][k][l]);\n                        if (a[i][j] == 1) h[i][j][k][l] = max(h[i][j][k][l], i);\n                        r[i][j][k][l] = max(r[i+1][j][k][l], r[i][j+1][k][l]);\n                        if (a[i][j] == 1) r[i][j][k][l] = max(r[i][j][k][l], j);\n                    }\n\n        int zhu = inf;\n        for (int i = 1; i <= n; i ++)\n            for (int j = 1; j <= m; j ++) {\n                if (query(1, 1, i, j) == 0) continue;\n                int x = f[1][1][i][j], y = g[1][1][i][j];\n                for (int k = 1; k <= n; k ++)\n                    for (int l = 1; l <= m; l ++) {\n                        if (k <= i && l <= j) continue;\n                        if (query(k, l, n, m) == 0) continue;\n                        int p = h[k][l][n][m], q = r[k][l][n][m];\n                        \n                        int cur = query(x, y, i, j) + query(k, l, p, q);\n                        int area = (i - x + 1) * (j - y + 1) + (p - k + 1) * (q - l + 1);\n                        \n\n                        if (i + 1 <= k - 1) {\n                            int ans = query(i + 1, 1, k - 1, m);\n                            if (cur + ans == all) zhu = min(zhu, o + area);\n                        }\n                        if (j + 1 <= l - 1) {\n                            int ans = query(1, j + 1, n, l - 1);\n                            if (cur + ans == all) zhu = min(zhu, o + area);\n                        }\n                        if (1 <= k - 1 && j + 1 <= (k == 1 ? l - 1 : m)) {\n                            int ans = query(1, j + 1, k - 1, k == 1 ? l - 1 : m);\n                            if (cur + ans == all) zhu = min(zhu, o + area);\n                        }\n                        if (i + 1 <= (l == 1 ? k - 1 : n) && 1 <= l - 1) {\n                            int ans = query(i + 1, 1, l == 1 ? k - 1 : n, l - 1);\n                            if (cur + ans == all) zhu = min(zhu, o + area);\n                        }\n                    }\n            }\n        return zhu;\n    }\n};",
    "submit_ts": 1719114295.0
}