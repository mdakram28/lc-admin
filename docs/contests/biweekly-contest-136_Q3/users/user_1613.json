{
    "username": "Mayank-kr-sh109",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        vector<int> arr(3, 0);\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n        \n        if (n % 2 == 1 and m % 2 == 1) \n            if (grid[n / 2][m / 2] == 1)\n                ans += 1;\n            \n\n        if (n % 2 == 1) {\n            int left = 0, right = m - 1;\n            while (left < right) {\n                int sum = grid[n / 2][left] + grid[n / 2][right];\n                arr[sum] += 1;\n                left++;\n                right--;\n            }\n        }\n\n        if (m % 2 == 1) {\n            int top = 0, bottom = n - 1;\n            while (top < bottom) {\n                int sum = grid[top][m / 2] + grid[bottom][m / 2];\n                arr[sum] += 1;\n                top++;\n                bottom--;\n            }\n        }\n\n        if (arr[2] % 2 == 1) {\n            if (arr[1] > 0) \n                ans += arr[1];\n            else \n                ans += 2;\n        } else {\n            ans += arr[1];\n        }\n\n        for (int i = 0; i < n / 2; i++) {\n            for (int j = 0; j < m / 2; j++) {\n                int count = grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                if (count != 0 && count != 4) {\n                    ans += min(count, 4 - count);\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722699796",
    "subm_id": "1343222615"
}