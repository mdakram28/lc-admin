{
    "username": "harry-f9",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        def get_minimum_area(min_a, min_b, max_a, max_b):\n            min_x = max_a\n            max_x = min_a\n            min_y = max_b\n            max_y = min_b\n            contains_1_ = False\n            for i in range(min_b, max_b):\n                contains_1 = False\n                line = grid[i]\n                for j in range(min_a, max_a):\n                    if line[j] == 1:\n                        min_x = min(min_x, j)\n                        contains_1 = True\n                        break\n                for j in range(max_a - 1, min_a - 1, -1):\n                    if line[j] == 1:\n                        max_x = max(max_x, j)\n                        contains_1 = True\n                        break\n                if contains_1:\n                    min_y = min(min_y, i)\n                    max_y = max(max_y, i)\n                    contains_1_ = True\n                \n            return (max_y - min_y + 1) * (max_x - min_x + 1) if contains_1_ else -1\n        \n\n        min_x = len(grid[0])\n        max_x = 0\n        min_y = len(grid)\n        max_y = 0\n        for i, y in enumerate(grid):\n            contains_1 = False\n            for j, x in enumerate(y):\n                if x == 1:\n                    min_x = min(min_x, j)\n                    max_x = max(max_x, j)\n                    contains_1 = True\n            if contains_1:\n                min_y = min(min_y, i)\n                max_y = max(max_y, i)\n        \n        \n\n        def split(min_a, min_b, max_a, max_b):\n            # print('split', min_a, max_a, min_b, max_b)\n            minimum = inf\n            # horizontally\n            for i in range(min_a + 1, max_a):\n                # print('horizontal i', i)\n                first = get_minimum_area(min_a, min_b, i, max_b)\n                if first == -1:\n                    continue\n                second = get_minimum_area(i, min_b, max_a, max_b)\n                if second == -1:\n                    continue\n                minimum = min(minimum, first + second)\n            \n            # vertically\n            for i in range(min_b + 1, max_b):\n                first = get_minimum_area(min_a, min_b, max_a, i)\n                if first == -1:\n                    continue\n                second = get_minimum_area(min_a, i, max_a, max_b)\n                if second == -1:\n                    continue\n                minimum = min(minimum, first + second)\n            \n            return minimum\n        \n        minimum = inf\n        max_x += 1\n        max_y += 1\n        for i in range(min_x + 1, max_x):\n            first = get_minimum_area(min_x, min_y, i, max_y)\n            if first != -1:\n                second = split(i, min_y, max_x, max_y)\n                minimum = min(minimum, first + second)\n            second = get_minimum_area(i, min_y, max_x, max_y)\n            if second != -1:\n                first = split(min_x, min_y, i, max_y)\n                minimum = min(minimum, first + second)\n        \n        for i in range(min_y + 1, max_y):\n            first = get_minimum_area(min_x, min_y, max_x, i)\n            if first != -1:\n                second = split(min_x, i, max_x, max_y)\n                minimum = min(minimum, first + second)\n            second = get_minimum_area(min_x, i, max_x, max_y)\n            if second != -1:\n                first = split(min_x, min_y, max_x, i)\n                minimum = min(minimum, first + second)\n        \n        # print(min_x, min_y, max_x, max_y)\n        return minimum\n",
    "submit_ts": "1719114858",
    "subm_id": "541403613"
}