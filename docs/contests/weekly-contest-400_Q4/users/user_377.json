{
    "username": "Amrharb",
    "submission": "class Solution {\npublic:\n    int f(vector<vector<int>> &pref, int l, int r) {\n        int cur = 0;\n        for (int i = 0; i < 30; i++) {\n            if (pref[r][i] - pref[l - 1][i] == r - l + 1)\n                cur |= (1LL << i);\n        }\n        return cur;\n    }\n\n    int minimumDifference(vector<int> &v, int k) {\n        int n = v.size();\n        vector<vector<int>> pref(n + 1, vector<int>(30));\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 30; j++) {\n                pref[i][j] = pref[i - 1][j];\n                if (v[i - 1] & (1LL << j)) {\n                    pref[i][j]++;\n                }\n            }\n        }\n        int ans = 2e9;\n        for (int i = 1; i <= n; i++) {\n            int l = i, r = n;\n            while (l<=r) {\n                int mid=(l+r)/2;\n                if(f(pref,i,mid)<=k)\n                    r=mid-1;\n                else\n                    l=mid+1;\n            }\n            if(r+1<=n)\n                ans=min(ans,abs(k-f(pref,i,r+1)));\n             l = i, r = n;\n            while (l<=r) {\n                int mid=(l+r)/2;\n                if(f(pref,i,mid)>k)\n                    l=mid+1;\n                else\n                    r=mid-1;\n            }\n            if(l-1>=i)\n                ans=min(ans,abs(k-f(pref,i,l-1)));\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717297550.0
}