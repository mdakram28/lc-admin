{
    "username": "gajendrasaran2002",
    "submission": "class Solution {\npublic:\nvector<int> solve(vector<vector<int>>& points,int ind){\n    int n = points.size();\n    vector<pair<int,int>> V, V1;\n   \n    for (int i = 0; i < n; i++) {\n        if(ind!=i){\n        pair<int,int> x = {points[i][0]+ points[i][1],i};\n        pair<int,int> y  = {points[i][0] - points[i][1],i};\n            V.push_back(x);\n            V1.push_back(y);\n        }\n    }\n \n    // Sorting both the vectors\n    sort(V.begin(), V.end());\n    sort(V1.begin(), V1.end());\n \n    \n    int maximum = max(V.back().first - V.front().first, V1.back().first - V1.front().first);\n    \n    vector<int>ans(3,0);\n    \n    ans[0] = maximum;\n    \n    if(maximum==V.back().first - V.front().first){\n        ans[1] = V.back().second;\n        ans[2] = V.front().second;\n    }\n    else{\n         ans[1] = V1.back().second;\n        ans[2] = V1.front().second;\n    }\n    \n    return ans;\n}\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        \n        vector<int>ans1 = solve(points,-1);\n        \n        int max1 = ans1[0];\n        // cout<<ans1[1]<<\" \"<<ans1[2]<<endl;\n        vector<int>ans2 = solve(points,ans1[1]);\n        vector<int>ans3 = solve(points,ans1[2]);\n        // cout<<ans1[0]<<\" \"<<ans2[0]<<\" \"<<ans3[0]<<endl;\n        return min(max1,min(ans2[0],ans3[0]));\n    }\n};"
}