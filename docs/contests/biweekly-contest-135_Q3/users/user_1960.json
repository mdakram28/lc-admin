{
    "username": "hellbound_",
    "submission": "class Solution {\n    public int minChanges(int[] nums, int k) {\n        int max=0;\n        int cnt=0;\n        HashMap<Integer,Integer> hs = new HashMap<>();\n\n        int n = nums.length;\n        int i=0;\n        int j=n-1;\n        while(i<j){\n            int v = Math.abs(nums[i]-nums[j]);\n            \n            hs.put(v,hs.getOrDefault(v,0)+1);\n            if(cnt<=hs.get(v)){\n                if(cnt==hs.get(v) && max<v){\n                    i++;j--;\n                    continue;\n                }\n                cnt=hs.get(v);\n                max=v;\n            }\n            i++;\n            j--;\n        }\n        i=0;\n        j=n-1;\n        int ans =Integer.MAX_VALUE;\n       int fv[][]= new int[hs.size()][2];\n       int idx=0;\n       for (Integer key : hs.keySet()) {\n           fv[idx][0]=key;\n           fv[idx][1]=hs.get(key);\n           idx++;\n       }\n       Arrays.sort(fv, (a, b) -> {\n            int diff = b[1] - a[1]; \n\n            if (diff == 0) {\n                return a[0] - b[0];\n            } else {\n                return diff;\n            }\n       });\n         //  System.out.println(fv[0][0]+\" v \"+fv[0][1]);\n        \n        for(int l=0;l<hs.size();l++){\n            max=fv[l][0];\n            if(l>0 && fv[l][1]==fv[l-1][1])continue;\n            int g=0;\n            while(i<j){\n                int v = Math.abs(nums[i]-nums[j]);\n                if(v==max){\n                    i++;j--;\n                    continue;\n                }\n                if((nums[i]>=max || nums[j]>=max) || (k-Math.min(nums[i],nums[j]))>=max){\n                    g++;\n                }else{\n                    g+=2;\n                }\n                i++;j--;\n            }\n            i=0;\n            j=n-1;\n            ans=Math.min(ans,g);\n        }\n        return ans;\n\n    }\n}",
    "submit_ts": "1721489686",
    "subm_id": "1327460739"
}