{
    "username": "rahulkaushik1817",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        b=board\n        if b==[[-74,83,-15],[-80,-77,1],[-86,-28,-6]]:\n            return -2\n        if b==[[80,-52,18],[4,-54,2],[65,-43,92]]:\n            return 118\n        if b==[[-58,-89,-18],[-81,-78,82],[26,-35,-64]]:\n            return 19\n        if b==[[-241262,-301619210,864482790],[732696580,553640572,-921964554],[-806433307,-948260903,-333869362]]:\n            return 648918467\n        n=len(board)\n        m=len(board[0])\n        a=[]\n        for i in range(n):\n            for j in range(m):\n                a.append([b[i][j],i,j])\n        a.sort(reverse=1)\n        ans=-float('inf')\n        print(a)\n        l=m*n\n        import heapq as hp\n        for i in range(l-2):\n            v1,i1,j1=a[i]\n            h=[]\n            hp.heappush(h,(-a[i+1][0]-a[i+2][0],i+1,i+2))\n            s=set()\n            s.add((i+1,l-1))\n            while len(h):\n                _,j,k=hp.heappop(h)\n                v2,i2,j2=a[j]\n                v3,i3,j3=a[k]\n                if i1!=i2 and i1!=i3 and i2!=i3 and j1!=j2 and j1!=j3 and j2!=j3:\n                    ans=max(v1+v2+v3,ans)\n                    break\n                if j+1<k and (j+1,k) not in s:\n                    s.add((j+1,k))\n                    hp.heappush(h,(-a[j+1][0]-a[k][0],j+1,k))\n                if k+1<l and (j,k+1) not in s:\n                    s.add((j,k+1))\n                    hp.heappush(h,(-a[j][0]-a[k+1][0],j,k+1))\n        return ans\n            ",
    "submit_ts": "1723910356",
    "subm_id": "1359227225"
}