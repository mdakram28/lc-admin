{
    "username": "devansh789",
    "submission": "class Solution {\npublic:\n    int findAND(int l, int r, vector<vector<int>> &bits) {\n        int ans = 0;\n        for (int i = 0; i < 32; i++) {\n            int x = bits[r][i];\n            if(l) x -= bits[l-1][i];\n            if(x==(r-l+1)) ans += (1<<i);\n        }\n        return ans;\n    }\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<int>> bits(n,vector<int>(32));\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < 32; j++) {\n                if(i) bits[i][j] += bits[i-1][j];\n                if((1LL<<j)&nums[i]) bits[i][j]++;\n            }\n        }\n        long long ans = 0;\n        for(int i = 0; i < n; i++) {\n            int l = 0, r = i, mid, L = -1, R = -1;\n            while(l<=r) {\n                mid = l+(r-l)/2;\n                int ad = findAND(mid,i,bits);\n                if(ad>=k) {\n                    L = mid;\n                    r = mid-1;\n                }\n                else l = mid+1;\n            }\n            l = 0, r = i;\n            while(l<=r) {\n                mid = l+(r-l)/2;\n                int ad = findAND(mid,i,bits);\n                if(ad<=k) {\n                    R = mid;\n                    l = mid+1;\n                }\n                else r = mid-1;\n            }\n            if(L==-1||R==-1||L>R) continue;\n            ans += (R-L+1);\n            // cout << i << \" -> \" << L << \" \" << R << \" \" << R-L+1 << \" \" << ans << endl;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278262",
    "subm_id": "1311701494"
}