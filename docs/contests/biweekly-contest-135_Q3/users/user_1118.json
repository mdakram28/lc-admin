{
    "username": "naman2003now",
    "submission": "class Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        n = []\n        m = []\n        \n        for i in range(len(nums)//2): \n            n.append(abs(nums[i] - nums[-i - 1]))\n            m.append(max(max(nums[i], nums[-i-1]), k - min(nums[i], nums[-1-i])))\n         \n        count = Counter(n)\n        # count = defaultdict(lambda: [0, 0])\n        # for mn, num in zip(m, n):\n        #     count[num][0] += 1\n        #     count[num][1] += int(mn < num)\n            \n        keys = sorted(count.keys())\n        output = 2*len(m)\n        \n        m.sort()\n        current = len(m)\n        i = 0\n        for key in keys:\n            while i < len(m) and m[i] < key: \n                i += 1\n                current += 1\n            output = min(current - count[key], output)\n                \n        return output",
    "submit_ts": "1721489179",
    "subm_id": "1327445359"
}