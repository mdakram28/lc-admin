{
    "username": "SneakPeek",
    "submission": "class Solution {\n    public int dp(int ind,int n,int r,Integer[][] dp){\n        // 1 to n \n        if(ind==n+1){\n            if(r==0){\n                return 1;\n            }\n            else{\n                return 0;\n            }\n        }\n        if(r==0){\n            return 1;\n        }\n        \n        if(dp[ind][r]!=null){\n            return dp[ind][r];\n        }\n        int place=dp(ind+1,n,r-1,dp);\n        int notPlace=dp(ind+1,n,r,dp);\n        dp[ind][r]=place+notPlace;\n        return place+notPlace;\n    }\n    public int waysToReachStair(int k) {\n        \n        long prod=1;\n        long val=1;\n        int cnt=0;\n        if(k==0 || k==1){\n            cnt++;\n        }\n        for(int i=0;i<=30;i++){\n            val=val+(prod);\n            // ab dekho : k and iske beech ka diff \n            long diff=(val-(long)k);\n            \n            // System.out.println((i+2)+\" \"+diff+\" \"+val);\n            if(diff>=0){\n                // to hi karoge !! \n                if((diff)<=(i+2)){\n                    // System.out.println()\n                    cnt+=dp(1,i+2,(int)diff,new Integer[i+3][(int)diff+1]);\n                    // cnt me + hoga : dp(n,r) : n me se : r log select karne ke hai !! \n                }\n            }\n            prod=prod*2;\n        }\n        \n        return cnt;\n    }\n}",
    "submit_ts": 1716090248.0
}