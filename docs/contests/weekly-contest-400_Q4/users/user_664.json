{
    "username": "saoieinonasd",
    "submission": "class Solution {\npublic:\n    \n    bool bs(int mid, vector<int>&nums, int k){\n        int cm = INT_MAX;\n        for(int i=0; i<nums.size() && cm>mid; i++){\n            int curr = nums[i], ind = i;\n            while(curr>=k && ind<(nums.size()-1) && cm>mid){\n                cm = min(cm, abs(curr - k));\n                curr &= nums[ind+1];\n                ind++;\n            }\n            cm = min(cm, abs(curr - k));\n        }\n        return cm<=mid;\n    }\n    \n    int bs_n(vector<int>&nums, int k){\n        int cm = INT_MAX;\n        map<pair<int,int>, int>has; // {ind, val} -->visited\n        \n        for(int i=0; i<nums.size(); i++){\n            int curr = nums[i], ind = i;\n            while(curr>=k && ind<(nums.size()-1)){\n                if(has[make_pair(ind, curr)]==1){break;}\n                has[make_pair(ind, curr)] = 1;\n                cm = min(cm, abs(curr - k));\n                curr &= nums[ind+1];\n                ind++;\n            }\n            cm = min(cm, abs(curr - k));\n        }\n        return cm;\n    }\n    \n    int minimumDifference(vector<int>& nums, int k) {\n        return bs_n(nums, k);\n        int l = 0, r = 1e9 - 1;\n        int cans = r;\n        while(l<=r){\n            int mid = l + (r - l)/2;\n            if(bs(mid, nums, k)){\n                cans = mid;\n                r = mid - 1;\n            }\n            else{\n                l = mid + 1;\n            }\n        }\n        return cans;\n    }\n};",
    "submit_ts": "1717299221",
    "subm_id": "1274805350"
}