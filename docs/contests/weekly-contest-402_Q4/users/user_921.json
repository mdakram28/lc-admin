{
    "username": "dii-who",
    "submission": "from typing import List\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        n = len(nums)\n        mountain = [0 for _ in range(n)]\n        for i in range(1, n-1):\n            if nums[i] > nums[i-1] and nums[i] > nums[i+1]:\n                mountain[i] = 1\n        \n        t = [0 for _ in range(2<<n.bit_length())]\n        \n        def build(o, l, r):\n            if l == r:\n                # if 0 < l < n-1:\n                #     t[o] = int(nums[l]>nums[l-1] and nums[l]>nums[l+1])\n                t[o] = mountain[l]\n                return \n            m = (l+r) // 2\n            build(o*2, l, m)\n            build(o*2+1, m+1, r)\n            t[o] = t[o*2] + t[o*2+1]\n        \n\n        def query(o, l, r, L, R): # \u67e5\u8be2L, R\u533a\u95f4\u7684summation\n            if L <= l and r <= R:\n                return t[o]\n            m = (l+r) // 2\n            res = 0\n            if L <= m:\n                res += query(o*2, l, m, L, R)\n            if R > m:\n                res += query(o*2+1, m+1, r, L, R)\n            return res\n            \n        \n        #\u5728\u5c06i\u6539\u53d8\u540e\uff0c\u4f1a\u5bf9idx=i-1, i, i+1\u9020\u6210\u5f71\u54cd\n        def update(o, l, r, idx, diff):\n            # \u8fd9\u91cc\u7684idx\u662f\u8868\u660e\u662f\u5426\u662f\u5cf0\u503c\u4e86\uff0cdiff=1/0/-1\n            if l == r:\n                t[o] += diff\n                return\n            m = (l+r) // 2\n            if idx <= m:\n                update(o*2, l, m, idx, diff)\n            else:\n                update(o*2+1, m+1, r, idx, diff)\n            t[o] = t[o*2] + t[o*2+1]\n        \n        build(1, 0, n-1)\n        res = []\n        for q in queries:\n            if q[0] == 1:\n                ans = query(1, 0, n-1, q[1]+1, q[2]-1)\n                res.append(ans)\n            else:\n                idx, val = q[1], q[2]\n                nums[idx] = val\n                if idx >= 2: # \u8003\u8651idx-1\n                    cur_peak = int(nums[idx-1] > nums[idx-2] and nums[idx-1] > nums[idx])\n                    if mountain[idx-1] != cur_peak:\n                        mountain[idx-1] = cur_peak\n                        update(1, 0, n-1, idx-1, 1 if cur_peak else -1)\n                if 1 <= idx <= n-2: # \u8003\u8651idx\n                    cur_peak = int(nums[idx] > nums[idx-1] and nums[idx] > nums[idx+1])\n                    if mountain[idx] != cur_peak:\n                        mountain[idx] = cur_peak\n                        update(1, 0, n-1, idx, 1 if cur_peak else -1)\n                if idx <= n-3: # \u8003\u8651idx+1\n                    cur_peak = int(nums[idx+1] > nums[idx] and nums[idx+1] > nums[idx+2])\n                    if mountain[idx+1] != cur_peak:\n                        mountain[idx+1] = cur_peak\n                        update(1, 0, n-1, idx+1, 1 if cur_peak else -1)\n                \n        return res",
    "submit_ts": "1718508508",
    "subm_id": "539787737"
}