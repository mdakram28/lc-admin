{
    "username": "CuriousJianXu",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        total = 0\n        central_row = (m-1)//2 if m%2 else math.inf\n        central_col = (n-1)//2 if n%2 else math.inf\n        flips_required = 0\n        for i in range(m//2):\n            for j in range(n//2):\n                one_cnt = 0\n                for x, y in ((i, j), (m-1-i, j), (i, n-1-j), (m-1-i, n-1-j)):\n                    if grid[x][y]:\n                        one_cnt += 1\n\n                base = 4\n                flipped = min(one_cnt, base-one_cnt)\n                flips_required += flipped\n        \n        two_ones = 0\n        central_flip_cnt = 0\n        if m%2:\n            for j in range(n//2):\n                one_cnt = 0\n                for x, y in ((central_row, j), (central_row, n-1-j)):\n                    if grid[x][y]:\n                        one_cnt += 1\n                base = 2\n                flipped = min(one_cnt, base-one_cnt)\n                flips_required += flipped\n\n                if one_cnt == 2:\n                    two_ones += 1\n                if flipped:\n                    central_flip_cnt += 1\n        if n%2:\n            for i in range(m//2):\n                one_cnt = 0\n                for x, y in ((i, central_col), (m-1-i, central_col)):\n                    if grid[x][y]:\n                        one_cnt += 1\n                base = 2\n                flipped = min(one_cnt, base-one_cnt)\n                flips_required += flipped\n\n                if one_cnt == 2:\n                    two_ones += 1\n                if flipped:\n                    central_flip_cnt += 1\n\n        # print(flips_required, two_ones, central_flip_cnt)\n        res = flips_required\n        if (two_ones%2) and central_flip_cnt == 0:\n            res += 2\n        if m%2 and n%2 and grid[central_row][central_col]:\n            res += 1\n        return res\n\n  ",
    "submit_ts": "1722699503",
    "subm_id": "1343213651"
}