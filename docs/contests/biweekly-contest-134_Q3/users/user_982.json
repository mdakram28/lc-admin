{
    "username": "user4938bv",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int N = colors.size(); \n        int ans = 0; \n \n        if (k == 1)\n            return N; \n        \n \n        int alternating_length = 1; \n        int i;i=1; \n        while (i <= N + k -2) { \n            int current = i; \n            int previous = i - 1; \n \n            if (current > N-1) \n                current -= N; \n        \n            if (previous >= N) \n                previous -= N; \n            \n \n            if (colors[current] != colors[previous]) \n                ++alternating_length; \n             else  \n                alternating_length = 1; \n            \n  \n            if (alternating_length >= k) \n                ans++; \n            \n \n            ++i; \n        } \n \n        return ans; \n    }\n};",
    "submit_ts": "1720280129",
    "subm_id": "1311777967"
}