{
    "username": "faulea",
    "submission": "int init = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>> &board) {\n        int m = board.size(), n = board[0].size();\n\n        long long l[3][n], r[3][n], tmp[3][n];\n\n        long long ans = LLONG_MIN;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                tmp[0][j] = board[i][j];\n            }\n            for (int j = i + 1; j < m; j++) {\n                for (int k = 0; k < n; k++) {\n                    tmp[1][k] = board[j][k];\n                }\n                for (int k = j + 1; k < m; k++) {\n                    for (int li = 0; li < n; li++) {\n                        tmp[2][li] = board[k][li];\n                    }\n\n                    for (int cnt = 0; cnt <= 2; cnt++) {\n                        for (int li = 0; li < n; li++) {\n                            l[cnt][li] = li == 0\n                                             ? tmp[cnt][0]\n                                             : max(l[cnt][li - 1], tmp[cnt][li]);\n                        }\n                        for (int li = n - 1; li >= 0; li--) {\n                            r[cnt][li] =\n                                li == n - 1 ? tmp[cnt][n - 1]\n                                           : max(r[cnt][li + 1], tmp[cnt][li]);\n                        }\n                    }\n\n                    for (int li = 1; li < n - 1; li++) {\n                        long long cnt1 = tmp[0][li]\n                                       + max(l[1][li - 1] + r[2][li + 1],\n                                             r[1][li + 1] + l[2][li - 1]);\n                        long long cnt2 = tmp[1][li]\n                                       + max(l[0][li - 1] + r[2][li + 1],\n                                             r[0][li + 1] + l[2][li - 1]);\n                        long long cnt3 = tmp[2][li]\n                                       + max(l[0][li - 1] + r[1][li + 1],\n                                             r[0][li + 1] + l[1][li - 1]);\n\n                        ans = max({ans, cnt1, cnt2, cnt3});\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723909637",
    "subm_id": "556337265"
}