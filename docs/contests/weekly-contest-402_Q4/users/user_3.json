{
    "username": "rui_er",
    "submission": "struct BIT {\n    int n, c[100005];\n    void init(int x) {\n        n = x;\n        for(int i = 0; i <= n; ++i) {\n            c[i] = 0;\n        }\n    }\n    int lowbit(int x) {\n        return x & -x;\n    }\n    void add(int x, int k) {\n        for(; x <= n; x += lowbit(x)) {\n            c[x] += k;\n        }\n    }\n    int ask(int x) {\n        int k = 0;\n        for(; x; x ^= lowbit(x)) {\n            k += c[x];\n        }\n        return k;\n    }\n    int ask(int l, int r) {\n        if(l > r) return 0;\n        return ask(r) - ask(l - 1);\n    }\n}bit;\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        bit.init(n + 2);\n        for(int i = 1; i < n - 1; ++i) {\n            if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                bit.add(i, 1);\n            }\n        }\n        vector<int> ans;\n        for(auto i : queries) {\n            int op = i[0], x = i[1], y = i[2];\n            if(op == 1) {\n                ans.push_back(bit.ask(x + 1, y - 1));\n            }\n            else {\n                if(x - 1 > 0 && x - 1 < n - 1 && nums[x - 1] > nums[x - 2] && nums[x - 1] > nums[x]) bit.add(x - 1, -1);\n                if(x > 0 && x < n - 1 && nums[x] > nums[x - 1] && nums[x] > nums[x + 1]) bit.add(x, -1);\n                if(x + 1 > 0 && x + 1 < n - 1 && nums[x + 1] > nums[x] && nums[x + 1] > nums[x + 2]) bit.add(x + 1, -1);\n                nums[x] = y;\n                if(x - 1 > 0 && x - 1 < n - 1 && nums[x - 1] > nums[x - 2] && nums[x - 1] > nums[x]) bit.add(x - 1, 1);\n                if(x > 0 && x < n - 1 && nums[x] > nums[x - 1] && nums[x] > nums[x + 1]) bit.add(x, 1);\n                if(x + 1 > 0 && x + 1 < n - 1 && nums[x + 1] > nums[x] && nums[x + 1] > nums[x + 2]) bit.add(x + 1, 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718505650.0
}