{
    "username": "JerryGu1",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        boolean[] intx = new boolean[n];\n        boolean[] inty = new boolean[n];\n        ArrayList<Integer>[] adj = new ArrayList[n];\n        for (int i=0; i<n; i++) {\n            adj[i]=new ArrayList<>();\n        }\n        \n        for (int i=0; i<n; i++) {\n\n            int xi = circles[i][0], yi = circles[i][1], ri = circles[i][2];\n            if (yi-ri<=0 || xi+ri>=X) intx[i]=true;\n            if (xi-ri<=0 || yi+ri>=Y) inty[i]=true;\n            for (int j=i+1; j<n; j++) {\n                int xj = circles[j][0], yj = circles[j][1], rj = circles[j][2];\n                if ( ((long)(xi-xj) * (long)(xi-xj)) + ((long)(yi-yj) * (long)(yi-yj)) <= (long)(ri+rj) * (long)(ri+rj)) {\n                    adj[i].add(j);\n                    adj[j].add(i);\n                }\n            }\n        }\n        \n        for (int i=0; i<n; i++) {\n            if (!intx[i]) continue;\n            \n            Queue<Integer> q = new LinkedList<>(); //for BFS\n            //Stack<Integer> q = new Stack<>(); //for DFS\n            int[] dist = new int[n];\n            int v = i;\n            q.add(v);\n            dist[v]=1;\n            int maxdist = 1;\n            int amaxdist = v;\n            while(!q.isEmpty()) {\n                v=q.poll(); //for BFS\n                //v=q.pop(); //for DFS\n                if (inty[v]) return false;\n                for (int u : adj[v]) {\n                    if (dist[u]==0) {\n                        dist[u]=dist[v]+1;\n                        if (dist[u]>maxdist) {\n                            maxdist=dist[u];\n                            amaxdist=u;\n                        }\n                        q.offer(u); //for BFS\n                        //q.push(u); //for DFS\n                    }\n                }\n            }\n        }\n        return true;\n    }\n}",
    "submit_ts": "1722136516",
    "subm_id": "1335736916"
}