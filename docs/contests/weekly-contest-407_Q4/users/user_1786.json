{
    "username": "freetime430",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        n = len(nums)\n        minv = [0] * (n << 2)\n        minIdx = [0] * (n << 2)\n\n        def update(idx, left, right, pos, val):\n            if left == right:\n                minv[idx] = val\n                minIdx[idx] = pos\n                return\n            mid = (left + right) >> 1\n            if pos <= mid:\n                update(idx<<1, left, mid, pos, val)\n            else:\n                update(idx<<1|1, mid+1, right, pos, val)\n            if minv[idx<<1] <= minv[idx<<1|1]:\n                minv[idx] = minv[idx<<1]\n                minIdx[idx] = minIdx[idx<<1]\n            else:\n                minv[idx] = minv[idx<<1|1]\n                minIdx[idx] = minIdx[idx<<1|1]\n\n        def query(idx, left, right, start, end):\n            if start <= left and right <= end:\n                return minv[idx], minIdx[idx]\n            mid = (left + right) >> 1\n            res = float('inf')\n            resIdx = -1\n            if start <= mid:\n                v, i = query(idx<<1, left, mid, start, end)\n                if v < res:\n                    res = v\n                    resIdx = i\n            if end > mid:\n                v, i = query(idx<<1|1, mid+1, right, start, end)\n                if v < res:\n                    res = v\n                    resIdx = i\n            return res, resIdx\n    \n        def dfs(start, end, done):\n            if start > end:\n                return 0\n            v, i = query(1, 0, n-1, start, end)\n            return v-done + dfs(start, i-1, v) + dfs(i+1, end, v)\n\n        def getCnt(start, end):\n            for i in range(start, end+1):\n                update(1, 0, n-1, i, abs(nums[i]-target[i]))\n            return dfs(start, end, 0)\n\n        res = 0\n        start = 0\n        pos = nums[0] - target[0] >= 0\n        for i in range(1, n):\n            if pos and nums[i] - target[i] >= 0 or not pos and nums[i] - target[i] < 0:\n                continue\n            res += getCnt(start, i-1)\n            start = i\n            pos = nums[i] - target[i] >= 0\n        res += getCnt(start, n-1)\n        return res",
    "submit_ts": "1721533611",
    "subm_id": "548400104"
}