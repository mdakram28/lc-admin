{
    "username": "wjli",
    "submission": "\n\n// COPY ALL MACROS BELOW\n\ntypedef long long LL;\n#define MP make_pair\n#define PB push_back\n#define F first\n#define S second\n#define LB lower_bound\n#define UB upper_bound\n#define SZ(x) ((int)x.size())\n#define LEN(x) ((int)x.length())\n#define ALL(x) begin(x), end(x)\n#define RSZ resize\n#define ASS assign\n#define REV(x) reverse(x.begin(), x.end());\n#define trav(a, x) for (auto& a : x)\ntypedef pair<LL, LL> PL;\ntypedef vector<LL> VL;\ntypedef vector<PL> VPL;\ntypedef vector<VL> VVL;\ntypedef vector<VVL> VVVL;\ntypedef vector<VVVL> VVVVL;\ntypedef vector<string> VS;\ntypedef pair<int, int> PI;\ntypedef vector<int> VI;\ntypedef vector<PI> VPI;\ntypedef vector<vector<int>> VVI;\ntypedef vector<vector<PI>> VVPI;\n#define MAX(x) *max_element(ALL(x))\n#define MIN(x) *min_element(ALL(x))\n#define FOR(i, n) for (int i = 0; i < n; i++) \n#define FOR1(i, n) for (int i = 1; i <= n; i++) \n#define SORT(x) sort(x.begin(), x.end())\n#define RSORT(x) sort(x.rbegin(), x.rend())\n#define SUM(x) accumulate(x.begin(), x.end(), 0LL)\n\n\n\n\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int top = 0, i, j, k, ans, n = target.size(), m = words.size(), INF = 1E9, s = 0;\n\n        s = 10;\n        FOR(i, m) s += words[i].size() + 1;\n\n        VVI v(s, VI(26, -1)); \n        VI d(s, INF);\n        VI blank(26, -1);\n        v.push_back(blank);\n\n        FOR(mm, m) {\n            int curr = 0;\n            for (auto ch : words[mm]) {\n                int x = ch - 'a';\n                if (v[curr][x] == -1) {\n                    v[curr][x] = ++top;\n                }\n                curr = v[curr][x];\n            }\n            d[curr] = min(d[curr], costs[mm]);\n        }        \n\n        VI dp(n + 1, INF);\n        dp[0] = 0;\n\n        FOR(i, n) {\n            int curr = 0;\n            for (j = i; j < n; j++) {\n                int x = target[j] - 'a';\n                if (v[curr][x] == -1) break;\n                curr = v[curr][x];\n                dp[j + 1] = min(dp[j + 1], dp[i] + d[curr]);\n            }\n            k = 0;\n        }\n\n\n\n        ans = dp[n];\n        if (ans == INF) ans = -1;\n        return ans;\n    }\n};\n",
    "submit_ts": "1720320346",
    "subm_id": "1312291298"
}