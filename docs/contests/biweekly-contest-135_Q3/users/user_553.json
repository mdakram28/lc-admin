{
    "username": "prashant933",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& a, int k) {\n        int n = a.size(), ans = n / 2;\n        vector<int> v;\n        for (int i=0;i<n/2;i++)\n        {\n            if (a[i] > a[n-i-1])\n                swap(a[i], a[n-i-1]);\n            v.push_back(max({a[n-i-1], k - a[i], k - a[n-i-1]}));\n        }\n        sort(v.begin(), v.end());\n        vector<int> d[k+1];\n        for (int i=0;i<n/2;i++)\n            d[a[n-i-1] - a[i]].push_back(i);\n        int m = v.size();\n        for (int x = 0; x <= k;x++)\n        {\n            int cur = 0;\n            int l = 0, u = m-1, idx = m;\n            while (l <= u)\n            {\n                int mid = (l+u)/2;\n                if (v[mid] >= x)\n                {\n                    idx = mid;\n                    u = mid - 1;\n                }\n                else\n                    l = mid + 1;\n            }\n            cur += (m - idx);\n            int rem = n/2 - (int)d[x].size() - (m - idx);\n            for (int i : d[x])\n            {\n                if (max({a[n-i-1], k - a[i], k - a[n-i-1]}) >= x)\n                {\n                    rem++;\n                    cur--;\n                }\n            }\n            cur += 2*rem;\n            ans = min(ans, cur);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721488653",
    "subm_id": "1327429055"
}