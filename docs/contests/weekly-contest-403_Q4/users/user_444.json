{
    "username": "Tyrande",
    "submission": "class Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        //vector<vector<int>> row(m), col(n);\n        int xl = 1000, xr = 0, yl = 1000, yr = 0;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (grid[i][j]) {\n                    //row[i].push_back(j);\n                    //col[j].push_back(i);\n                    xl = min(xl, i);\n                    xr = max(xr, i);\n                    yl = min(yl, j);\n                    yr = max(yr, j);\n                }\n            }\n        }\n        int res = m * n;\n        for (int i = xl; i < xr; ++i) {\n            for (int j = yl; j < yr; ++j) {\n                int a = helper(grid, xl, yl, i, j);\n                //cout << \"a = \" << a << endl;\n                if (a == 0) continue;\n                int b1 = helper(grid, i + 1, yl, xr, yr);\n                //cout << \"b1 = \" << b1 << endl;\n                int b2 = helper(grid, i + 1, yl, xr, j);\n                //cout << \"b2 = \" << b2 << endl;\n                int c1 = helper(grid, xl, j + 1, i, yr);\n                //cout << \"c1 = \" << c1 << endl;\n                int c2 = helper(grid, xl, j + 1, xr, yr);\n                //cout << \"c2 = \" << c2 << endl;\n                if (b1 > 0 && c1 > 0)\n                    res = min(res, a + b1 + c1);\n                if (b2 > 0 && c2 > 0)\n                    res = min(res, a + b2 + c2);\n            }\n        }\n        for (int i = xl; i < xr; ++i) {\n            int a = helper(grid, xl, yl, i, yr);\n            if (a == 0) continue;\n            //cout << i << \" \" << a << endl;\n            for (int j = yl; j < yr; ++j) {\n                int b = helper(grid, i + 1, yl, xr, j);\n                if (b == 0) continue;\n                //cout << \" \" << \n                int c = helper(grid, i + 1, j + 1, xr, yr);\n                if (c > 0) {\n                    //cout << a << \" \" << b << \" \" << c << endl;\n                    res = min(res, a + b + c);\n                }\n            }\n            for (int i2 = i + 1; i2 < xr; ++i2) {\n                int b = helper(grid, i + 1, yl, i2, yr);\n                if (b == 0) continue;\n                int c = helper(grid, i2 + 1, yl, xr, yr);\n                if (c > 0) {\n                    res = min(res, a + b + c);\n                }\n            }\n        }\n        for (int j = yl; j < yr; ++j) {\n            int a = helper(grid, xl, yl, xr, j);\n            if (a == 0) continue;\n            for (int i = xl; i < xr; ++i) {\n                int b = helper(grid, xl, j + 1, i, yr);\n                if (b == 0) continue;\n                int c = helper(grid, i + 1, j + 1, xr, yr);\n                if (c > 0) {\n                    res = min(res, a + b + c);\n                }\n            }\n            for (int j2 = j + 1; j2 < yr; ++j2) {\n                int b = helper(grid, xl, j + 1, xr, j2);\n                if (b == 0) continue;\n                int c = helper(grid, xl, j2 + 1, xr, yr);\n                if (c > 0) {\n                    res = min(res, a + b + c);\n                }\n            }\n        }\n        \n        if (xl == xr) {\n            int tmp = yr - yl + 1;\n            vector<int> zero;\n            int cnt = 0;\n            for (int j = yl; j <= yr; ++j) {\n                if (grid[xl][j] == 0) {\n                    cnt++;\n                } else {\n                    if (cnt > 0) zero.push_back(cnt);\n                    cnt = 0;\n                }\n            }\n            sort(zero.begin(), zero.end());\n            if (zero.size() == 1) {\n                tmp -= zero[0];\n            } else if (zero.size() >= 2) {\n                int k = zero.size();\n                tmp -= zero[k-1] + zero[k-2];\n            }\n            res = min(res, tmp);\n        }\n        if (yl == yr) {\n            int tmp = xr - xl + 1;\n            vector<int> zero;\n            int cnt = 0;\n            for (int i = xl; i <= xr; ++i) {\n                if (grid[i][yl] == 0) {\n                    cnt++;\n                } else {\n                    if (cnt > 0) zero.push_back(cnt);\n                    cnt = 0;\n                }\n            }\n            sort(zero.begin(), zero.end());\n            if (zero.size() == 1) {\n                tmp -= zero[0];\n            } else if (zero.size() >= 2) {\n                int k = zero.size();\n                tmp -= zero[k-1] + zero[k-2];\n            }\n            res = min(res, tmp);\n        }       \n        \n        return res;\n    }\n    int helper(vector<vector<int>>& grid, int xlo, int ylo, int xhi, int yhi) {\n        //cout << xlo << \" \" << ylo << \" \" << xhi << \" \" << yhi << endl;\n        int xl = 1000, xr = 0, yl = 1000, yr = 0;\n        int cnt = 0;\n        for (int i = xlo; i <= xhi; ++i) {\n            for (int j = ylo; j <= yhi; ++j) {\n                if (grid[i][j]) {\n                    cnt++;\n                    xl = min(xl, i);\n                    xr = max(xr, i);\n                    yl = min(yl, j);\n                    yr = max(yr, j);\n                }\n            }\n        }\n        if (cnt == 0) return 0;\n        return (xr - xl + 1) * (yr - yl + 1);\n    }\n};",
    "submit_ts": 1719113919.0
}