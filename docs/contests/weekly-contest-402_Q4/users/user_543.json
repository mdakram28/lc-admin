{
    "username": "shivamp_07",
    "submission": "#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \nusing namespace __gnu_pbds; \n  \n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        ordered_set st;\n        for(int i=1;i<n-1;i++){\n            if(nums[i]>nums[i-1] && nums[i]>nums[i+1]) st.insert(i);\n        }\n        vector<int> ans;\n        int q=queries.size();\n        for(int i=0;i<q;i++){\n            int type=queries[i][0];\n            if(type==1){\n                int l=queries[i][1],r=queries[i][2];\n                if((r-l)<=1) ans.push_back(0);\n                else{\n                    int tp1=st.order_of_key(r);\n                    int tp2=st.order_of_key(l+1);\n                    ans.push_back(tp1-tp2);\n                }\n            }\n            else{\n                int ind=queries[i][1],val=queries[i][2];\n                if(st.find(ind)!=st.end()) st.erase(st.find(ind));\n                nums[ind]=val;\n                if(ind==0){\n                    if(ind+1<(n-1)){\n                        if(st.find(ind+1)!=st.end()) st.erase(st.find(ind+1));\n                        if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2]){\n                            st.insert(ind+1);\n                        }\n                    }\n                }\n                else if(ind==(n-1)){\n                    if(n>2){\n                        if(st.find(ind-1)!=st.end()) st.erase(st.find(ind-1));\n                        if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind]){\n                            st.insert(ind-1);\n                        }\n                    }\n                }\n                else{\n                    if(nums[ind]>nums[ind-1] && nums[ind]>nums[ind+1]) st.insert(ind);\n                    if(ind+1<(n-1)){\n                        if(st.find(ind+1)!=st.end()) st.erase(st.find(ind+1));\n                        if(nums[ind+1]>nums[ind] && nums[ind+1]>nums[ind+2]){\n                            st.insert(ind+1);\n                        }\n                    }\n                    if((ind-1)>=1){\n                        if(st.find(ind-1)!=st.end()) st.erase(st.find(ind-1));\n                        if(nums[ind-1]>nums[ind-2] && nums[ind-1]>nums[ind]){\n                            st.insert(ind-1);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718507010.0
}