{
    "username": "being_hooman",
    "submission": "class Solution {\npublic:\n    int dp[200005][4];\n    int getans(int pos, int mod, vector<pair<int,int>> &v){\n        if(pos==v.size()){\n            if(mod==0){\n                return 0;\n            }else{\n                return INT_MAX;\n            }\n        }\n        if(dp[pos][mod]!=-1){\n            return dp[pos][mod];\n        }\n        int total=v[pos].first+v[pos].second;\n        int cost1=getans(pos+1,(mod+total)%4, v);\n        int cost2=getans(pos+1, mod, v);\n        if(cost1!=INT_MAX){\n            cost1+=v[pos].first;\n        }\n        if(cost2!=INT_MAX){\n            cost2+=v[pos].second;\n        }\n        return dp[pos][mod]=min(cost1,cost2);\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        memset(dp,-1,sizeof(dp));\n        int n=grid.size();\n        int m=grid[0].size();\n        vector<pair<int,int>>v;\n        for(int i=0;i<n/2;i++){\n            for(int j=0;j<m/2;j++){\n                int countzero=0;\n                int countone=0;\n                if(grid[i][j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                \n                if(grid[i][m-1-j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                \n                if(grid[n-1-i][j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                \n                if(grid[n-1-i][m-1-j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                v.push_back({countzero,countone});\n            }\n        }\n        if(m%2!=0){\n            for(int i=0;i<n/2;i++){\n                int countzero=0;\n                int countone=0;\n                if(grid[i][m/2]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                \n                if(grid[n-1-i][m/2]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                v.push_back({countzero,countone});\n            }\n        }\n        if(n%2!=0){\n            for(int j=0;j<m/2;j++){\n                int countzero=0;\n                int countone=0;\n                if(grid[n/2][j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                \n                if(grid[n/2][m-1-j]==0){\n                    countzero++;\n                }else{\n                    countone++;\n                }\n                v.push_back({countzero,countone});\n            }\n        }\n        if(m%2!=0 && n%2!=0){\n            int countzero=0;\n            int countone=0;\n            if(grid[n/2][m/2]==0){\n                countzero++;\n            }else{\n                countone++;\n            }\n            v.push_back({countzero,countone});\n        }\n        return getans(0,0,v);\n    }\n};",
    "submit_ts": "1722698191",
    "subm_id": "1343172697"
}