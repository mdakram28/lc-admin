{
    "username": "cchao",
    "submission": "const int maxn = 1e5+10;\nint c[maxn], n;\nint sum(int x) {\n  int ret = 0;\n  for (; x; x -= x & -x)\n    ret += c[x];\n  return ret;\n}\nvoid add(int x, int d) {\n  for (; x <= n; x += x & -x)\n    c[x] += d;\n}\n\nvector<int> b;\nvoid update2(int x, int v) {\n    if (v == b[x]) return;\n    add(x + 1, v - b[x]);\n    b[x] = v;\n}\nvector<int> a;\nvoid update(int x) {\n    if (x <= 0 || x >= n - 1) return;\n    if (a[x] > a[x-1] && a[x] > a[x+1]) {\n        update2(x, 1);\n    } else {\n        update2(x, 0);\n    }\n}\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        fill(c, c + n + 1, 0);\n        a = nums;\n        b = vector<int>(n, 0);\n        for (int i = 0; i < n; ++i) update(i);\n        vector<int> ans;\n        for (auto &q : queries) {\n            if (q[0] == 1) {\n                int l = q[1] + 1, r = q[2] + 1;\n                --r, ++l;\n                if (l > r) {\n                    ans.push_back(0);\n                    continue;\n                }\n                int t = sum(r) - sum(l - 1);\n                ans.push_back(t);\n                // cout << \"t \" <<sum(r) << ' ' <<sum(l-1) <<endl;\n            } else {\n                int x = q[1], v = q[2];\n                a[x] = v;\n                update(x);\n                update(x-1);\n                update(x+1);\n            }\n        }\n        // cout <<\"---\\n\";\n        return ans;\n    }\n};\n",
    "submit_ts": 1718506543.0
}