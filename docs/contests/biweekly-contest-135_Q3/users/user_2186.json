{
    "username": "i3old-saha4us",
    "submission": "class Solution {\n  public:\n      int minChanges(vector<int>& nums, int k) {\n          int n = nums.size();\n          vector<vector<int>>sums(n / 2, vector<int>(3, 0));\n          unordered_set<int>setM;\n          unordered_map<int, int>sMap;\n          auto cmp = [](pair<int,int>a1,pair<int,int>a2) {\n              return a1.second < a2.second;\n          };\n          priority_queue<pair<int, int>, vector<pair<int, int>>, decltype(cmp)>pq(cmp);\n          for (int i = 0; i < n / 2; ++i) {\n              sums[i][0] = abs(nums[n - i - 1] - nums[i]);\n              if (!setM.count(sums[i][0])) setM.insert(sums[i][0]);\n              sums[i][1] = min(nums[n - i - 1], nums[i]);\n              sums[i][2] = max(nums[n - i - 1], nums[i]);\n              sMap[sums[i][0]]++;\n          }\n          for (auto& m : sMap) {\n              pq.push({ m.first,m.second });\n          }\n          int ans = INT_MAX;\n          while (!pq.empty()) {\n              int tmp = 0;\n              int num = pq.top().first, sum = pq.top().second;\n              pq.pop();\n              if (ans < n / 2 - sum) continue;\n              for (int i = 0; i < n / 2; ++i) {\n                  if (sums[i][0] != num) {\n                      if (k - sums[i][1] < num && sums[i][2] < num) {\n                          tmp += 2;\n                      }\n                      else tmp++;\n                  }\n              }\n              ans = min(ans, tmp);\n          }\n          return ans;\n      }\n  };",
    "submit_ts": "1721489909",
    "subm_id": "548320758"
}