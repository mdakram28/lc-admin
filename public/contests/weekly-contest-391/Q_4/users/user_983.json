{
    "username": "jojayoh",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        \n        int n = points.size();\n        int tl = 0, tr = 0, bl = 0, br = 0;\n        int ans = INT_MAX;\n        for(int i = 0; i < n; i++)\n        {\n            if(points[i][0]+points[i][1] > points[tr][0]+points[tr][1]) tr = i;\n            if(points[i][0]-points[i][1] > points[br][0]-points[br][1]) br = i;\n            if(-points[i][0]+points[i][1] > -points[tl][0]+points[tl][1]) tl = i;\n            if(-points[i][0]-points[i][1] > -points[bl][0]-points[bl][1]) bl = i;\n        }\n        //cout << tl << \", \" << tr << \", \" << bl << \", \" << br << endl;\n\n        ans = min(ans,help(points,tl));\n        ans = min(ans,help(points,tr));\n        ans = min(ans,help(points,bl));\n        ans = min(ans,help(points,br));\n        \n        return ans;\n        \n    }\n    \n    int help(vector<vector<int>>& points, int ignore)\n    {\n        int n = points.size();\n        int first = (ignore==0);\n        int tl = first, tr = first, bl = first, br = first;\n        for(int i = 0; i < n; i++)\n        {\n            if(i == ignore) continue;\n            if(points[i][0]+points[i][1] > points[tr][0]+points[tr][1]) tr = i;\n            if(points[i][0]-points[i][1] > points[br][0]-points[br][1]) br = i;\n            if(-points[i][0]+points[i][1] > -points[tl][0]+points[tl][1]) tl = i;\n            if(-points[i][0]-points[i][1] > -points[bl][0]-points[bl][1]) bl = i;\n        }\n\n        int ans = max(points[tl][1]-points[br][1]+points[br][0]-points[tl][0],points[tr][1]-points[bl][1]+points[tr][0]-points[bl][0]);\n        \n        /*\n        print_coord(points[tl]);\n        print_coord(points[tr]);\n        print_coord(points[bl]);\n        print_coord(points[br]);\n        cout << \" : \" << ans << endl;\n        */\n        \n        return ans;\n    }\n    \n    void print_coord(vector<int> x)\n    {\n        cout << x[0] << \", \" << x[1] << \" ; \";\n    }\n};"
}