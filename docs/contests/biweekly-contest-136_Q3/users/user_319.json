{
    "username": "celerystalk",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        nrow = len(grid)\n        ncol = len(grid[0])\n\n        res = 0\n        for i in range(nrow // 2):\n            for j in range(ncol // 2):\n                a, b, c, d = grid[i][j], grid[nrow - 1 - i][j], grid[i][ncol - 1 - j], grid[nrow - 1 - i][ncol - 1 - j]\n                cnt1, cnt0 = 0, 0\n                for x in [a, b, c, d]:\n                    if x == 1:\n                        cnt1 += 1\n                    else:\n                        cnt0 += 1\n                if cnt0 == 0 or cnt1 == 0:\n                    continue\n                if cnt0 == 1 or cnt1 == 1:\n                    res += 1\n                else:\n                    res += 2\n            \n        need_flip = 0\n        both1, both0 = 0, 0\n        if nrow % 2 == 1:\n            l, r = 0, ncol - 1\n            while l < r:\n                if grid[nrow // 2][l] != grid[nrow // 2][r]:\n                    need_flip += 1\n                elif grid[nrow // 2][l] == 1:\n                    both1 += 1\n                else:\n                    both0 += 1\n                l += 1\n                r -= 1\n        if ncol % 2 == 1:\n            l, r = 0, nrow - 1\n            while l < r:\n                if grid[l][ncol // 2] != grid[r][ncol // 2]:\n                    need_flip += 1\n                elif grid[l][ncol // 2] == 1:\n                    both1 += 1\n                else:\n                    both0 += 1\n                l += 1\n                r -= 1\n        \n        \n        if nrow % 2 == 1 and ncol % 2 == 1:\n            if grid[nrow // 2][ncol // 2] == 1:\n                res += 1\n\n        res += need_flip \n        if both1 % 2 == 1:\n            if need_flip == 0:\n                res += 2\n        \n        return res\n        ",
    "submit_ts": "1722700780",
    "subm_id": "1343252890"
}