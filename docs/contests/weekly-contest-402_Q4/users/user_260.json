{
    "username": "Ninja1369",
    "submission": "class Solution {\n    static class Seg{\n        int arr[];\n        public Seg(int n,int a[]){\n            arr=new int[4*n];\n            build(0,0,n-1,a);\n        }\n        public void build(int node,int l,int h,int a[]){\n            if(l==h){\n                if(l>0&&h<a.length-1){\n                    if(a[l]>a[l-1]&&a[l]>a[l+1]) arr[node]=1;\n                }\n            }else{\n                int mid=(l+h)/2;\n                build(2*node+1,l,mid,a);\n                build(2*node+2,mid+1,h,a);\n                arr[node]=arr[2*node+1]+arr[2*node+2];\n            }\n        }\n        public void update(int node,int l,int h,int idx,int a[]){\n            if(idx<l||idx>h) return;\n            if(l==h){\n                arr[node]=0;\n                if(idx>0&&idx<a.length-1){\n                    if(a[idx]>a[idx-1]&&a[idx]>a[idx+1]) arr[node]=1;\n                }\n            }else{\n                int mid=(l+h)/2;\n                update(2*node+1,l,mid,idx,a);\n                update(2*node+2,mid+1,h,idx,a);\n                arr[node]=arr[2*node+1]+arr[2*node+2];\n            }\n        }\n        public int ans(int node,int l,int h,int ql,int qh){\n            if(qh<l||ql>h) return 0;\n            else if(ql<=l&&h<=qh) return arr[node];\n            else{\n                int mid=(l+h)/2;\n                return ans(2*node+1,l,mid,ql,qh)+ans(2*node+2,mid+1,h,ql,qh);\n            }\n        }\n    }\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        \n        List<Integer>list=new ArrayList<>();\n        int n=nums.length;\n        Seg obj=new Seg(n,nums);\n        for(int q[]:queries){\n            if(q[0]==1){\n                int l=q[1];\n                int h=q[2];\n                int ans=obj.ans(0,0,n-1,l,h)-obj.ans(0,0,n-1,l,l);\n                if(l!=h) ans-=obj.ans(0,0,n-1,h,h);\n                list.add(ans);\n            }else{\n                int idx=q[1];\n                int val=q[2];\n                nums[idx]=val;\n                obj.update(0,0,n-1,idx,nums);\n                obj.update(0,0,n-1,idx-1,nums);\n                obj.update(0,0,n-1,idx+1,nums);\n            }\n        }\n        return list;\n        \n    }\n}",
    "submit_ts": 1718506655.0
}