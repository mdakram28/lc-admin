{
    "username": "avikalp71",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long ans = 0;\n        vector<int> diff;\n\n        for(int i=0; i<nums.size(); i++){\n            diff.push_back(nums[i]-target[i]);\n        }\n\n        long long curr = 0;\n\n        for(int i=0; i<diff.size(); i++){\n            if(i==0 || (diff[i-1]>0 && diff[i]>0) || (diff[i-1]<0 && diff[i]<0)){\n                long long temp = abs(diff[i]) - abs(curr);\n                if(temp>0){\n                    ans += temp;\n                }\n                curr = diff[i];\n            } else {\n                ans += abs(diff[i]);\n                curr = diff[i];\n            }\n        }\n\n        return ans;\n    }\n};\n\n// diff = [target[i] - nums[i] for i in range(len(nums))]       \n//         total_operations = 0\n//         current_segment_diff = 0       \n//         for i in range(len(diff)):\n//             if i == 0 or (diff[i - 1] > 0 and diff[i] > 0) or (diff[i - 1] < 0 and diff[i] < 0):\n//                 additional_operations = abs(diff[i]) - abs(current_segment_diff)\n//                 if additional_operations > 0:\n//                     total_operations += additional_operations\n//                 current_segment_diff = diff[i]\n//             else:  \n//                 total_operations += abs(diff[i])\n//                 current_segment_diff = diff[i]        \n//         return total_operations",
    "submit_ts": "1721532883",
    "subm_id": "1327996302"
}