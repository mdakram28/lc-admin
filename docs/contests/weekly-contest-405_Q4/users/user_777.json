{
    "username": "123GJWEQ2",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        mod = random.randrange(10 ** 9, 10 ** 10)\n        hash_to_cost = {}\n        hashed_target_at_inds = []\n        dp = [float(\"inf\")] * len(target)\n        dp.append(0)\n        pow_index = [1]\n\n        for i in range(1, len(target) + 5):\n            pow_index.append(pow_index[-1] * 26 % mod)\n\n        lengths = {}\n\n        for word, cost in zip(words, costs):\n            hashed_word = 0\n            for i in word:\n                hashed_word += (ord(i) - 97)\n                hashed_word *= 26\n                hashed_word %= mod\n\n            if len(word) not in lengths:\n                lengths[len(word)] = {}\n\n            lengths[len(word)][hashed_word] = min(lengths[len(word)].get(hashed_word, float(\"inf\")), cost)\n\n        hashed_target = 0\n        lengths_list = sorted(list(lengths))\n\n        for i in target:\n            hashed_target += (ord(i) - 97)\n            hashed_target *= 26\n            hashed_target %= mod\n            hashed_target_at_inds.append(hashed_target)\n\n        hashed_target_at_inds.append(0)\n\n\n        for i in range(len(target)):\n            for leng in lengths_list:\n                if leng > i + 1:\n                    break\n                dp[i] = min(dp[i], dp[i - leng] + lengths[leng].get((hashed_target_at_inds[i] - hashed_target_at_inds[i - leng] * pow_index[leng]) % mod, float(\"inf\")))\n\n        if dp[-2] == float(\"inf\"):\n            return -1\n        return dp[-2]",
    "submit_ts": "1720322855",
    "subm_id": "1312360845"
}