{
    "username": "zhou-zhou-36",
    "submission": "struct SegTree\n{\n    //\u5355\u70b9\u4fee\u6539assign\uff0c\u533a\u95f4\u67e5\u8be2sum\n    int n;\n    vector<int> trSum;\n    void Build(int size)\n    {\n        n=size;\n        trSum.assign(n*2,0);\n    }\n    void Build(vector<int> &vi)\n    {\n        n=vi.size();\n        trSum.assign(n*2,0);\n        for(int i=0;i<n;++i)\n        {\n            trSum[i+n]=vi[i];\n        }\n        for(int i=n-1;i>0;--i)\n        {\n            trSum[i]=trSum[i<<1]+trSum[i<<1|1];\n        }\n    }\n    int Query(int l,int r)\n    {\n        int ans=0;\n        for(l+=n,r+=n;l<r;l>>=1,r>>=1)\n        {\n            if(l&1) ans+=trSum[l++];\n            if(r&1) ans+=trSum[--r];\n        }\n        return ans;\n    }\n    void Modify(int p,int val)\n    {\n        for(trSum[p+=n]=val;p>1;p>>=1)\n        {\n            trSum[p>>1]=trSum[p]+trSum[p^1];\n        }\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        vector<int> peek(n+1,0);\n        for(int i=1;i<n-1;++i)\n        {\n            if(nums[i-1]<nums[i] && nums[i]>nums[i+1])\n            {\n                peek[i]=1;\n            }\n        }\n        SegTree tr;\n        tr.Build(peek);\n        vector<int> ans;\n        for(vector<int> &q:queries)\n        {\n            if(q[0]==1)\n            {\n                if(q[2]-q[1]+1>=3) ans.push_back(tr.Query(q[1]+1,q[2]-1+1));\n                else ans.push_back(0);\n            }\n            else\n            {\n                int i=q[1];\n                // if(nums[i]==q[2]) continue;\n                nums[i]=q[2];\n                if(i-1>=0 && i+1<n)\n                {\n                    if(nums[i-1]<nums[i] && nums[i]>nums[i+1])\n                    {\n                        tr.Modify(i,1);\n                    }\n                    else\n                    {\n                        tr.Modify(i,0);\n                    }\n                }\n                i=q[1]-1;\n                if(i-1>=0)\n                {\n                    if(nums[i-1]<nums[i] && nums[i]>nums[i+1])\n                    {\n                        tr.Modify(i,1);\n                    }\n                    else\n                    {\n                        tr.Modify(i,0);\n                    }\n                }\n                i=q[1]+1;\n                if(i+1<n)\n                {\n                    if(nums[i-1]<nums[i] && nums[i]>nums[i+1])\n                    {\n                        tr.Modify(i,1);\n                    }\n                    else\n                    {\n                        tr.Modify(i,0);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506892.0
}