{
    "username": "guaidaokakaxi",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int res = 0;\n        for (int i = 0; i < grid.length / 2; i++) {\n            for (int j = 0; j < grid[i].length / 2; j++) {\n                int cnt1 = 0;\n                if (grid[i][j] == 1) {\n                    cnt1++;\n                }\n                if (grid[i][grid[0].length - 1 - j] == 1) {\n                    cnt1++;\n                }\n                if (grid[grid.length - 1 - i][j] == 1) {\n                    cnt1++;\n                }\n                if (grid[grid.length - 1 - i][grid[0].length - 1 - j] == 1) {\n                    cnt1++;\n                }\n                int cnt0 = 4 - cnt1;\n                res += Math.min(cnt0, cnt1);\n            }\n        }\n        int m = grid.length;\n        int n = grid[0].length;\n        if (m % 2 == 1 && n % 2 == 1) {\n            if (grid[m / 2][n / 2] == 1) {\n                res++;\n            }\n        }\n        int cnt_diff = 0;\n        int cnt11 = 0;\n        if (m % 2 == 1) {\n            for (int i = 0; i < n / 2; i++) {\n                if (grid[m / 2][i] != grid[m / 2][n - 1 - i]) {\n                    cnt_diff++;\n                } else if (grid[m / 2][i] == 1) {\n                    cnt11 += 2;\n                }\n            }\n        }\n        if (n % 2 == 1) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - 1 - i][n / 2]) {\n                    cnt_diff++;\n                } else if (grid[i][n / 2] == 1) {\n                    cnt11 += 2;\n                }\n            }\n        }\n        if (cnt_diff == 0 && cnt11 == 0) {\n            return res;\n        }\n        if (cnt_diff == 0) {\n            res += cnt11 % 4;\n            return res;\n        } else {\n            return res + cnt_diff;\n        }\n    }\n}",
    "submit_ts": "1722698422",
    "subm_id": "552270771"
}