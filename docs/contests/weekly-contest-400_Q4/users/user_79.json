{
    "username": "ianwong1999",
    "submission": "class Solution {\npublic:\n    static constexpr int MAX_LOG = 17;\n    int st[MAX_LOG][100055];\n    \n    \n    int minimumDifference(vector<int>& nums, int k) {\n        int n = (int)nums.size();\n        vector<int> LG(n + 1);\n        \n        for (int i = 2; i <= n; i++) {\n            LG[i] = LG[i / 2] + 1;\n        }\n        \n        for (int i = 0; i < MAX_LOG; i++) {\n            for (int j = 0; j < n; j++) {\n                st[i][j] = 0;\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            st[0][i] = nums[i];\n        }\n        \n        for (int i = 0; i + 1 < MAX_LOG; i++) {\n            for (int j = 0; j < n; j++) {\n                if ((j + (1 << i)) < n) {\n                    st[i + 1][j] = (st[i][j] & st[i][j + (1 << i)]);\n                }\n            }\n        }\n        \n        auto query = [&] (int l, int r) {\n            int dist = r - l + 1;\n            int level = LG[dist];\n            \n            return (st[level][l] & st[level][r - (1 << level) + 1]);\n        };\n        \n        int res = abs(nums[0] - k);\n        \n        for (int i = 0; i < n; i++) {\n            int lb = i - 1, ub = n;\n            \n            while (ub - lb > 1) {\n                int mid = (ub + lb) >> 1;\n                \n                if (query(i, mid) >= k) lb = mid;\n                else ub = mid;\n            }\n            \n            if (lb >= i) res = min(res, abs(query(i, lb) - k));\n            if (ub < n) res = min(res, abs(query(i, ub) - k));\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1717296980",
    "subm_id": "1274725855"
}