{
    "username": "chiragnayak10",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int left = 0;\n        int right = 0;\n        int patternCount = 0;\n        int n = colors.length;\n        \n        while (left < n) {\n            if (right - left + 1 != k) {\n                int parity = 0;\n                for (int i = 0; i < k; i++) {\n                    if (i == 0) {\n                        parity = colors[(i + left) % n];\n                    } else {\n                        if (colors[(i + left) % n] == parity) {\n                            right = i + left;\n                            left = i + left;\n                            break;\n                        } else {\n                            parity = colors[(i + left) % n];\n                            right = i + left;\n                        }\n                    }\n                }\n                continue;\n            } else {\n                if (right - left + 1 == k) {\n                    patternCount++;\n                }\n                if (left < n) {\n                    if (k % 2 == 0 && colors[left] == colors[(right + 1) % n]) {\n                        left++;\n                        right++;\n                    } else if (k % 2 == 1 && colors[left] != colors[(right + 1) % n]) {\n                        left++;\n                        right++;\n                    } else {\n                        left = right + 1;\n                        right = right + 1;\n                    }\n                }\n            }\n        }\n        return patternCount;\n    }\n}",
    "submit_ts": "1720280287",
    "subm_id": "1311783766"
}