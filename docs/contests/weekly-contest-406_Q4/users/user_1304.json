{
    "username": "samuelou",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse = True)\n        verticalCut.sort(reverse = True)\n\n        h_count = 1\n        v_count = 1\n\n        cost = 0\n\n        h_idx = 0\n        v_idx = 0\n\n        while h_idx < len(horizontalCut) and v_idx < len(verticalCut):\n            if horizontalCut[h_idx] >= verticalCut[v_idx]:\n                cost += horizontalCut[h_idx] * v_count\n                h_count += 1\n                h_idx += 1\n            else:\n                cost += verticalCut[v_idx] * h_count\n                v_count += 1\n                v_idx += 1\n        while h_idx < len(horizontalCut):\n            cost += horizontalCut[h_idx] * v_count\n            h_count += 1\n            h_idx += 1\n        while v_idx < len(verticalCut):\n            cost += verticalCut[v_idx] * h_count\n            v_count += 1\n            v_idx += 1\n        return cost",
    "submit_ts": "1720925878",
    "subm_id": "1320269135"
}