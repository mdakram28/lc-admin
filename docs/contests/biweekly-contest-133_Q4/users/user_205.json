{
    "username": "chenreddy0207",
    "submission": "class Solution {\n    \n    long long int prime=1e9+7;\n    \n    void compute_pref_sums(vector<long long int>& arr)\n    {\n        int n=arr.size();\n        for(int i=1;i<n;i++)\n        {\n            arr[i]+=arr[i-1];\n            arr[i]%=prime;\n        }\n    }\n    \n    int get_range_sum(vector<long long int>& arr, int left, int right)\n    {\n        if(left==0)\n        {\n            return arr[right];\n        }\n        else\n        {\n            return (arr[right]-arr[left-1]+prime)%prime;\n        }\n    }\n    \npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int max_cnt=0;\n        \n        unordered_map<int,int> umap;\n        umap[0]=0;\n        for(auto&req:requirements)\n        {\n            umap[req[0]]=req[1];\n            max_cnt=max(req[1],max_cnt);\n        }\n        \n        if(umap[0]!=0){\n            return 0;\n        }\n        \n        max_cnt++;\n        vector<long long int> number_of_perms_with_this_cnt(max_cnt,0);\n        \n        number_of_perms_with_this_cnt[0]=1;\n        compute_pref_sums(number_of_perms_with_this_cnt);\n        \n        for(int i=1;i<n;i++)\n        {\n            //1,...,i+1\n            vector<long long int> new_arr(max_cnt,0);\n            if(umap.find(i)!=umap.end())\n            {\n                int valid_cnt=umap[i];\n                //k is the inversions achieved by last element\n                int min_k=0;\n                int max_k=min(i,valid_cnt);\n                new_arr[valid_cnt]=get_range_sum(number_of_perms_with_this_cnt,valid_cnt-max_k,valid_cnt-min_k);\n                /*\n                for(int k=0;k<=min(i,valid_cnt);k++)\n                {\n                    new_arr[valid_cnt]+=number_of_perms_with_this_cnt[valid_cnt-k];\n                }\n                */\n            }\n            else\n            {\n                for(int j=0;j<max_cnt;j++)\n                {\n                    //k is the inversions achieved by last element\n                    /*\n                    for(int k=0;k<=min(i,j);k++)\n                    {\n                        new_arr[j]+=get_range_sum(number_of_perms_with_this_cnt,j-k,j-k);\n                    }\n                    */\n                    int min_k=0;\n                    int max_k=min(i,j);\n                    new_arr[j]+=get_range_sum(number_of_perms_with_this_cnt,j-max_k,j-min_k);\n                }\n            }\n            \n            swap(new_arr,number_of_perms_with_this_cnt);\n            compute_pref_sums(number_of_perms_with_this_cnt);\n        }\n        \n        return get_range_sum(number_of_perms_with_this_cnt,umap[n-1],umap[n-1]);\n    }\n};",
    "submit_ts": 1719069546.0
}