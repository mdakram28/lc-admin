{
    "username": "inversionpeter",
    "submission": "long long Calculate(vector <int> &differences) {\n    if (!differences.size()) {\n        return 0;\n    }\n    int last = 0;\n    long long counts = 0;\n    for (int i : differences) {\n        if (abs(i) > last) {\n            counts += (abs(i) - last);\n        }\n        last = abs(i);\n    }\n    return counts;\n}\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int last, difference;\n        long long counts = 0;\n        vector <int> differences;\n        for (int i = 0; i != nums.size(); ++i) {\n            difference = target[i] - nums[i];\n            if (difference && (differences.empty() || (differences.back() > 0) == (difference > 0))) {\n                differences.push_back(difference);\n            }\n            else {\n                counts += Calculate(differences);\n                differences.clear();\n                if (difference) {\n                    differences.push_back(difference);\n                }\n            }\n        }\n        return counts + Calculate(differences);\n    }\n};",
    "submit_ts": "1721531986",
    "subm_id": "1327974845"
}