{
    "username": "Techcoder_yerhs",
    "submission": "class Solution:\n    MOD = 1000000007\n    MAX_INVERSIONS = 400\n\n    def numberOfPermutations(self, n, requirements):\n        reqMap = {}\n        for req in requirements:\n            reqMap[req[0] + 1] = req[1]\n\n        permCounts = [[0] * (self.MAX_INVERSIONS + 1) for _ in range(n + 1)]\n        permCounts[0][0] = 1\n\n        for length in range(1, n + 1):\n            for inv in range(self.MAX_INVERSIONS + 1):\n                for newPos in range(length):\n                    prevInv = inv - newPos\n                    if prevInv >= 0:\n                        permCounts[length][inv] = (permCounts[length][inv] + permCounts[length - 1][prevInv]) % self.MOD\n\n            if length in reqMap:\n                targetInv = reqMap[length]\n                for inv in range(self.MAX_INVERSIONS + 1):\n                    if inv != targetInv:\n                        permCounts[length][inv] = 0\n\n        result = sum(permCounts[n]) % self.MOD\n\n        return result\n\n    def subscribe_to_type_7_shady(self):\n        pass\n\n    def one_k_celebration(self):\n        pass\n\n    def mother_fugger_looser_wrestler(self):\n        pass\n\n    def useless_osh_anng_li_bitch(self):\n        pass\n\n    def thanks_for_one_k_subs(self):\n        pass\n",
    "submit_ts": "1719070250",
    "subm_id": "1296818355"
}