{
    "username": "m_amanullah7",
    "submission": "from typing import List\nfrom collections import defaultdict\nimport bisect\n\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        sz = len(nums)\n        diffs = self.get_diffs(nums, sz, k)\n        vals = self.get_vals(diffs)\n        min_changes = self.calc_changes(diffs, vals, sz)\n        return min_changes\n\n    def get_diffs(self, nums: List[int], sz: int, k: int) -> defaultdict:\n        diffs = defaultdict(list)\n        for i in range(sz // 2):\n            a, b = nums[i], nums[sz - i - 1]\n            d = abs(a - b)\n            p = max(a, b, k - a, k - b)\n            diffs[d].append(p)\n        return diffs\n\n    def get_vals(self, diffs: defaultdict) -> List[int]:\n        vals = []\n        for ps in diffs.values():\n            vals.extend(ps)\n        return sorted(set(vals))\n\n    def calc_changes(self, diffs: defaultdict, vals: List[int], sz: int) -> int:\n        min_chg = sz\n        for d, ps in diffs.items():\n            idx = bisect.bisect_left(vals, d)\n            chg = idx * 2 + (sz // 2 - idx)\n\n            for p in ps:\n                if p < d:\n                    chg -= 2\n                else:\n                    chg -= 1\n            \n            min_chg = min(min_chg, chg)\n        \n        return min_chg\n",
    "submit_ts": "1721489482",
    "subm_id": "1327454595"
}