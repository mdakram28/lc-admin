{
    "username": "Kartike_Joshi",
    "submission": "class TrieNode {\npublic:\n    vector<pair<int, int>> xyz;\n    unordered_map<char, TrieNode*> abc;\n    \n};\n\nclass Trie {\npublic:\n    TrieNode* root;\n\n    Trie() \n    {\n        root = new TrieNode();\n    }\n\n    void insert(string word, int index, int cost) \n    {\n        TrieNode* node = root;\n        for (char c : word) \n        {\n            if (!node->abc.count(c)) \n            {\n                node->abc[c] = new TrieNode();\n            }\n            node = node->abc[c];\n        }\n        node->xyz.push_back({index, cost});\n    }\n};\n\nclass Solution\n{\n    public:\n    int  minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int n = target.size();\n        vector<int> dp(n+1, INT_MAX);\n        dp[0] = 0;\n\n        Trie trie;\n        for (int i = 0; i < words.size(); ++i) \n        {\n            trie.insert(words[i], i, costs[i]);\n        }\n         for (int i = 0; i < n; ++i) \n         {\n            if (dp[i] == INT_MAX) \n            {\n                continue;\n            }\n\n            TrieNode* node = trie.root;\n            for (int z = i; z < n; ++z) \n            {\n                if (!node->abc.count(target[z])) \n                {\n                    break;\n                }\n                node = node->abc[target[z]];\n                for (auto& p : node->xyz) \n                {\n                    int length = words[p.first].size();\n                    if (i + length <= n) \n                    {\n                        dp[i + length] = min(dp[i + length], dp[i] + p.second);\n                    }\n\n                }\n\n            }\n        }\n\n        if(dp[n]==INT_MAX)\n        {\n            return dp[n]=-1;\n        }\n        return dp[n];\n\n\n}\n};",
    "submit_ts": "1720323709",
    "subm_id": "1312382146"
}