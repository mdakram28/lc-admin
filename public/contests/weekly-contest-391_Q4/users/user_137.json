{
    "username": "ruo-ne-2",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        vector<vector<pair<int, int>>> dis(4, vector<pair<int, int>>());\n        for (int i = 0; i < n; i++) {\n            dis[0].emplace_back(make_pair(points[i][0] + points[i][1], i));\n            dis[1].emplace_back(make_pair(-points[i][0] + points[i][1], i));\n            dis[2].emplace_back(make_pair(points[i][0] - points[i][1], i));\n            dis[3].emplace_back(make_pair(-points[i][0] - points[i][1], i));\n        }\n        for (int i = 0; i < 4; i++) {\n            sort(dis[i].begin(), dis[i].end());\n        }\n        int j = 0;\n        for (int i = 1; i < 4; i++) {\n            if (dis[i].back().first - dis[i][0].first > dis[j].back().first - dis[j][0].first) {\n                j = i;\n            }\n        }\n        int remove1 = dis[j].back().second, remove2 = dis[j][0].second;\n        \n        int ans1 = 0;\n        for (int i = 0; i < 4; i++) {\n            int start = 0, end = n - 1;\n            if (dis[i][0].second == remove1) start++;\n            if (dis[i].back().second == remove1) end--;\n            ans1 = max(ans1, dis[i][end].first - dis[i][start].first);\n        }\n        int ans2 = 0;\n        for (int i = 0; i < 4; i++) {\n            int start = 0, end = n - 1;\n            if (dis[i][0].second == remove2) start++;\n            if (dis[i].back().second == remove2) end--;\n            ans2 = max(ans2, dis[i][end].first - dis[i][start].first);\n        }\n        return min(ans1, ans2);\n    }\n};"
}