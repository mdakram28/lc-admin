{
    "username": "mario7lorenzo",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        set<pair<int, int>> st;\n        \n        for (int i = 0; i < n; i++) {\n            st.insert({i, i});\n        }\n        vector<int> res;\n        for (const auto& query : queries) {\n            pair<int, int> querypair = {query[0], query[1]-1};\n            auto iter = st.upper_bound(querypair);\n            if (iter != st.begin()) {\n                iter--;\n            }\n            bool needinsert = true;\n            // cout << \"querypair kntl: \" << querypair.first << ' ' << querypair.second << endl;\n            while (iter != st.end() && (*iter).first <= querypair.second) {\n                int iterfirst = (*iter).first;\n                int itersecond = (*iter).second;\n                // cout << iterfirst << ' ' << itersecond << endl;\n                if (iterfirst <= querypair.first && querypair.second <= itersecond) {\n                    needinsert = false;\n                    break;\n                }\n                auto tmp = next(iter, 1);\n                st.erase(iter);\n                iter = tmp;\n            }\n            \n            if (needinsert) {\n                st.insert(querypair);\n            }\n            res.push_back(st.size()-1);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1722742524",
    "subm_id": "1343770977"
}