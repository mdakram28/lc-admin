{
    "username": "abhijeet15348",
    "submission": "#include <bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp> \n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n//              tree_order_statistics_node_update>\n//     ordered_set; \n#define sz(a) a.size()\nusing namespace std;\n#define mod 1000000007\n// #define int long long \n#define endl \"\\n\"\n#define ll long long \n#define ff  first\n#define ss second\n#define f(i,a,b) for(int i(a);i<b;i++)\n#define rep(i,n) for(int i(0);i<n;i++)\n#define fast  ios_base::sync_with_stdio(0); cin.tie(0);\n#define pres(x) cout<<fixed; cout<<setprecision(x);\n#define watch(x) cout<<(#x)<<\" is \"<<x<<\"\\n\";\n#define out(x) cout<<x<<\"\\n\";\n#define pb push_back\n#define mp make_pair\n#define all(v) v.begin(),v.end()\n#define vi vector<int>\n#define vvi vector<vector<int> >\n#define vpi vector<pair<int,int> >\n#define pi pair<int,int>\n#define inf 1e18\n#define pdd pair<double, double>\n#define ld long double\n#define ar array\nlong long cons=(1LL<<32)-1;\n \n\n\nclass Solution {\npublic:\n    void buildtree(ll si,ll ss ,ll se,vi &arr,vi &st){\n\tif(ss==se) {st[si]=arr[ss];return;}\n\tll mid=(ss+se)/2;\n \n\tbuildtree(2*si,ss,mid,arr,st);\n\tbuildtree(2*si+1,mid+1,se,arr,st);\n \n\tst[si]=(st[2*si]&st[2*si+1]);\n\t\n    }\n \n    ll query(ll si,ll ss ,ll se,ll qs,ll qe,vi &arr,vi &st){\n        if(qs>se||qe<ss) return cons;\n        if(ss>=qs&&qe>=se) return st[si];\n        ll mid=(ss+se)/2;\n        ll l=query(2*si,ss,mid,qs,qe,arr,st);\n        ll r=query(2*si+1,mid+1,se,qs,qe,arr,st);\n\n        return (l&r);\n\n    }\n    \n    long long countSubarrays(vector<int>& nums, int k) {\n        int n=nums.size();\n        vector<int> tree(4*n+40,0);\n        vi hue(n+1,0);\n        f(i,1,n+1) hue[i]=nums[i-1];\n        buildtree(1,1,n,hue,tree);\n        \n        long long ans=0;  \n        \n        \n        f(i,1,n+1){\n            int s=i,e=n;int mid=(s+e)/2;\n            int ans1=-1,ans2=-1;  \n            while(s<=e){\n                int q=query(1,1,n,i,mid,hue,tree);\n                // if(i==2) cout<<q<<endl;\n                if(q==k){\n                    ans1=mid;e=mid-1;\n                }\n                else if(q>k) s=mid+1;\n                else e=mid-1;\n                // if(i==2){\n                //     cout<<s<<' '<<e<<endl;\n                // }\n                mid=(s+e)/2;\n            }\n            \n            s=i;e=n;mid=(s+e)/2;\n            while(s<=e){\n                int q=query(1,1,n,i,mid,hue,tree);\n                if(q==k){\n                    ans2=mid;s=mid+1;\n                }\n                else if(q>k) s=mid+1;\n                else e=mid-1;\n                \n                mid=(s+e)/2;\n            }\n            // cout<<ans1<<endl;\n\n            \n            if(ans1==-1) continue;\n            \n            \n            ans+=(ans2-ans1+1);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278757",
    "subm_id": "1311722950"
}