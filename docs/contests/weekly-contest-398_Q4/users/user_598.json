{
    "username": "nanj0178",
    "submission": "class Solution {\npublic:\n    int DPS(int cur, int k, int jump, bool goDown, unordered_map<long long, int> &state) {\n        if (cur > k + 1) {\n            return 0;\n        }\n        long long p = (1000000001); p *=32;\n        long long key = goDown * p + (jump * (long long)1000000001) + cur;\n        if (state.count(key) == 1) {\n            return state[key];\n        }\n        int count = 0;\n        if (cur == k) {\n            count++;\n        }\n        if (cur > 0 && goDown == false) {\n            count += DPS(cur - 1, k, jump, true, state);\n        }\n        count += DPS(cur + (1<<jump), k, jump + 1, false, state);\n        return state[key] = count;\n    }\n    int waysToReachStair(int k) {\n        unordered_map<long long, int> state;\n        return DPS(1, k, 0, false, state);\n    }\n};",
    "submit_ts": "1716088733",
    "subm_id": "1261822438"
}