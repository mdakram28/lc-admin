{
    "username": "evancui",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n\n        int ans = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int k = grid[i][j] +grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                ans += min(k, 4-k);\n            }\n        }\n        \n        if (m % 2 == 1 && n % 2 == 1) {\n            if (grid[m/2][n/2] ) ans++;\n        }\n\n        int ch = 0;\n        int one = 0;\n        if (m % 2 == 1) {\n            for (int j = 0; j < n/2; j++) {\n                if (grid[m/2][j] != grid[m/2][n-1-j]) {\n                    ch++;\n                } else {\n                    one += grid[m/2][j];\n                    one += grid[m/2][n-1-j];\n                }\n            }\n        }\n\n        if (n % 2 == 1) {\n            for (int i = 0; i < m/2; i++) {\n                if (grid[i][n/2] != grid[m-1-i][n/2]) {\n                    ch++;\n                } else {\n                    one += grid[i][n/2];\n                    one += grid[m-1-i][n/2];\n                }\n            }\n        }\n\n        if (one % 4 == 0){\n            return ans + ch;\n        } else {\n            if (ch > 0) {\n                return ans + ch;\n            } else {\n                return ans + 2;\n            }\n        }\n    }\n};",
    "submit_ts": "1722697019",
    "subm_id": "552264034"
}