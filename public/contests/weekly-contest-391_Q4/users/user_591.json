{
    "username": "iaryangupta",
    "submission": "class Solution {\npublic:\n    \n    int helper(vector<vector<int>>& p)\n    {\n    int minsum, maxsum, mindiff, maxdiff;\n    int N= p.size();\n    minsum = maxsum = p[0][0] + p[0][1];\n    mindiff = maxdiff = p[0][0] - p[0][1];\n    for (int i = 1; i < N; i++) {\n        int sum =  p[i][0] + p[i][1];\n        int diff = p[i][0] - p[i][1];\n        if (sum < minsum)\n            minsum = sum;\n        else if (sum > maxsum)\n            maxsum = sum;\n        if (diff < mindiff)\n            mindiff = diff;\n        else if (diff > maxdiff)\n            maxdiff = diff;\n    }\n \n    return max(maxsum - minsum, maxdiff - mindiff);\n}\n    int minimumDistance(vector<vector<int>>& p) {\n        \n        pair<int,int> minsum, maxsum, mindiff, maxdiff;\n        int n= p.size();\n        minsum = maxsum = {p[0][0] + p[0][1], 0};\n        mindiff = maxdiff = {p[0][0] - p[0][1], 0};\n        for (int i = 1; i < n; i++) {\n            int sum = p[i][0] + p[i][1];\n            int diff = p[i][0] - p[i][1];\n            if (sum < minsum.first)\n                minsum = {sum, i};\n            else if (sum > maxsum.first)\n                maxsum = {sum, i};\n            if (diff < mindiff.first)\n                mindiff = {diff, i};\n            else if (diff > maxdiff.first)\n                maxdiff = {diff, i};\n    }\n    int p1;\n    int p2;\n    if(maxsum.first - minsum.first > maxdiff.first - mindiff.first){\n        p1= maxsum.second;\n        p2= minsum.second;\n    }\n    else{\n        p1= maxdiff.second;\n        p2= mindiff.second;\n    }\n    vector<vector<int>> temp=p;\n    temp.erase(temp.begin()+p1);\n    int ans1 =helper(temp);\n    temp=p;\n    temp.erase(temp.begin()+p2);\n    int ans2 =helper(temp);\n    return min(ans1, ans2);\n    }  \n};"
}