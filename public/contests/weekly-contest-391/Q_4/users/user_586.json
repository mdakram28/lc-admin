{
    "username": "kalpit04",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<long long,vector<int>>> s;\n        vector<pair<long long,vector<int>>> diff;\n        int n=points.size();\n        for(int i=0;i<n;i++){\n            s.push_back({points[i][1]+points[i][0],points[i]});\n            diff.push_back({points[i][1]-points[i][0],points[i]});\n        }\n        sort(s.begin(),s.end());\n        sort(diff.begin(),diff.end());\n        long long ans=max(s[n-1].first-s[0].first,diff[n-1].first-diff[0].first);\n   \n        int r=n-1;\n        int l=0;\n        for(auto p:points){\n            int r=n-1;\n            int l=0;\n            long long  dist1,dist2;\n            if(p==s[n-1].second) r--;\n            if(p==s[0].second) l++;\n            dist1=s[r].first-s[l].first;\n            r=n-1;\n            l=0;\n            if(p==diff[n-1].second) r--;\n            if(p==diff[0].second) l++;\n            dist2=diff[r].first-diff[l].first;\n            long long dist=max(dist1,dist2);\n            ans=min(dist,ans);\n            \n            \n            \n            \n        }\n        return ans;\n    }\n};"
}