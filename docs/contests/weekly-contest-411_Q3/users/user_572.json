{
    "username": "Pritesh Kumar Tripathi",
    "submission": "class Solution {\n\n    bool isDivisibleBy7(const string& num) {\n        int length = num.length(), groupSum = 0;\n\n        if (length == 0) return true;\n\n        // Append required 0s at the beginning\n        string adjustedNum = num;\n        if (length % 3 == 1) {\n            adjustedNum = \"00\" + adjustedNum;\n            length += 2;\n        } else if (length % 3 == 2) {\n            adjustedNum = \"0\" + adjustedNum;\n            length++;\n        }\n\n        // Add digits in groups of three to groupSum\n        int alternatingSum = 0, sign = 1;\n        for (int i = length - 1; i >= 0; i--) {\n            int group = 0;\n            group += adjustedNum[i--] - '0';\n            group += (adjustedNum[i--] - '0') * 10;\n            group += (adjustedNum[i] - '0') * 100;\n\n            groupSum += group * sign;\n            sign *= -1;\n        }\n\n        return (groupSum % 7 == 0);\n    }\n\n    string constructPalindromeDivisibleBy7(int length) {\n        string palindrome(length, '9');\n\n        if (length % 2 != 0) {\n            for (char c = '9'; c >= '0'; --c) {\n                palindrome[length / 2] = c;\n                if (isDivisibleBy7(palindrome)) return palindrome;\n            }\n        } else {\n            for (char c = '9'; c >= '0'; --c) {\n                palindrome[length / 2 - 1] = palindrome[length / 2] = c;\n                if (isDivisibleBy7(palindrome)) return palindrome;\n            }\n        }\n        return \"\";\n    }\n\npublic:\n    string largestPalindrome(int length, int divisor) {\n        string result(length, '9');\n\n        if (divisor == 1 || divisor == 3 || divisor == 9) {\n            result.assign(length, '9');\n        } else if (divisor == 2) {\n            result[0] = result[length - 1] = '8';\n        } else if (divisor == 4) {\n            for (int i = 0; i < min(length, 2); ++i) {\n                result[i] = result[length - i - 1] = '8';\n            }\n        } else if (divisor == 5) {\n            result[0] = result[length - 1] = '5';\n        } else if (divisor == 6) {\n            if (length == 1) return \"6\";\n            else if (length == 2) return \"66\";\n            else {\n                if (length % 2 != 0) {\n                    result[length / 2] = '8';\n                } else {\n                    result[length / 2 - 1] = result[length / 2] = '7';\n                }\n                result[0] = result[length - 1] = '8';\n            }\n        } else if (divisor == 7) {\n            if (length == 1) return \"7\";\n            else if (length == 2) return \"77\";\n            else if (length == 3) return \"959\";\n            else if (length == 4) return \"9779\";\n            else if (length == 5) return \"99799\";\n            else return constructPalindromeDivisibleBy7(length);\n        } else if (divisor == 8) {\n            for (int i = 0; i < min(length, 3); ++i) {\n                result[i] = result[length - i - 1] = '8';\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723953342",
    "subm_id": "1359818695"
}