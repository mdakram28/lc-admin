{
    "username": "oneq",
    "submission": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\n\nclass Solution {\n\n    public int minChanges(int[] nums, int k) {\n        int n = nums.length;\n        Map<Integer, Integer> map = new HashMap<>();\n\n        int[] s = new int[k + 1];\n        for (int i = 0; i < n / 2; i++) {\n            int diff = Math.abs(nums[i] - nums[n - i - 1]);\n            map.put(diff, map.getOrDefault(diff, 0) + 1);\n            int minv = Math.min(nums[i], nums[n - i - 1]), maxv = Math.max(nums[i], nums[n - i - 1]);\n            s[Math.max(k - minv, maxv)]++;\n        }\n        for (int i = k - 1; i >= 0; i--) {\n            s[i] += s[i + 1];\n        }\n        // System.out.println(Arrays.toString(s));\n        int ans = n;\n        for (int x : map.keySet()) {\n            int t = n / 2 - map.get(x) + n / 2 - s[x];\n            ans = Math.min(ans, t);\n        }\n        return ans;\n    }\n}\n\n\n",
    "submit_ts": "1721488895",
    "subm_id": "548316439"
}