{
    "username": "jskhirtladze",
    "submission": "class Solution {\npublic:\n\n    static const int N=100000+10;\n    vector <pair<int,int>> g[N];\n    int c[N];\n\n    struct Cmp {\n            static bool operator()(pair <int,int> a,pair <int,int> b) {\n                return a.second<b.second;\n            }\n    };\n\n    static bool cmp(pair <int,int> a,pair <int,int> b) {\n                return a.second<b.second;\n            }\n\n    int go(int v,int p, int j) {\n        if (p!=-1 && g[p][j].second!=-1) return g[p][j].second;\n\n        int ret=0;\n\n        c[v]++;\n\n        if (c[v]<=3) {\n          \n        for (int k=0;k<g[v].size();k++)\n            if (g[v][k].first!=p) {\n                int tmp;\n                if (g[v][k].second!=-1) tmp = g[v][k].second;\n                                   else tmp = go(g[v][k].first, v, k);\n                ret=max(ret,tmp);\n            }\n/*\n        printf(\"(regular) %d -> %d : \", p,v);\n            for (int k=0;k<g[v].size();k++)\n                printf(\"%d(%d) \",g[v][k].first,g[v][k].second);\n            printf(\"\\n\");\n*/\n        sort(g[v].begin(),g[v].end(),Cmp());\n\n        }\n        else {\n\n/*\n            if (g[v].size()>0 && g[v][0].second==-1) while (true){}\n            for (int k=1;k<g[v].size();k++)\n                if (g[v][k].second < g[v][k-1].second) while (true) {}\n\n            printf(\"(special) %d -> %d : \", p,v);\n            for (int k=0;k<g[v].size();k++)\n                printf(\"%d(%d) \",g[v][k].first,g[v][k].second);\n            printf(\"\\n\");\n*/\n            for (int k=g[v].size()-1;k>=0;k--)\n                if (g[v][k].first!=p) {\n                    ret=g[v][k].second;\n                    //printf(\"special return %d(%d)\\n\",g[v][k].first,g[v][k].second);\n                    break;\n                }\n        }\n\n        if (p!=-1) {\n            int add = (v%2) ? 1 : 2;\n            ret+=add;\n            g[p][j].second=ret;\n        }\n        return ret;\n    }\n\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        for (int j=0;j<edges.size();j++) {\n            int x=edges[j][0];\n            int y=edges[j][1];\n            g[x].push_back(make_pair(y,-1));\n            g[y].push_back(make_pair(x,-1));\n        }\n\n        int n=edges.size()+1;\n        for (int i=0;i<=n;i++) c[i]=0;\n\n        vector <int> answer(n);\n        for (int i=0;i<n;i++)\n            answer[i]=go(i,-1,-1);\n        return answer;\n    }\n};",
    "submit_ts": "1722700056",
    "subm_id": "1343230341"
}