{
    "username": "Sukumar",
    "submission": "class Solution:\n    def maximumValueSum(self, grid: List[List[int]]) -> int:\n        hq=[]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                heappush(hq,[-grid[i][j],i,j])\n        def dfs2(hq,row,col):\n            k=2\n            total=-float(\"inf\")\n            while hq and k>0:\n                val,x,y=heappop(hq)\n                if x not in row and y not in col:\n                    k-=1\n                    if total==-float(\"inf\"):\n                        total=-val\n                    else:\n                        total+=-val\n                    row.add(x)\n                    col.add(y)\n            if k==0:\n                return total\n            else:\n                return -float(\"inf\")\n        def dfs(hq,row,col):\n            k=1\n            total=-float(\"inf\")\n            while hq and k>0:\n                val,x,y=heappop(hq)\n                if x not in row and y not in col:\n                    k-=1\n                    row.add(x)\n                    col.add(y)\n                    total=-(val)\n            ans=-float(\"inf\")\n            \n            for i in range(10):\n                if hq:\n                    ans=max(ans,dfs2(hq.copy(),row.copy(),col.copy()))\n                    heappop(hq) \n            \n            return total+ans\n\n        ans=-float(\"inf\")\n        for i in range(10):\n            if hq:\n                ans=max(ans,dfs(hq.copy(),set(),set()))\n                heappop(hq)\n                \n        return ans\n                \n                    \n                \n        \n        \n                        \n                        \n                    \n        ",
    "submit_ts": "1723910031",
    "subm_id": "1359214726"
}