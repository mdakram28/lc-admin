{
    "username": "rkrtadi",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        long long int hc = 1;\n        long long int vc = 1;\n        sort(horizontalCut.begin(),horizontalCut.end());\n        sort(verticalCut.begin(),verticalCut.end());\n        int i = m-2;\n        int j = n-2;\n        long long int res = 0;\n        while(i>=0 && j>=0){\n            if(horizontalCut[i]>verticalCut[j]){\n                res += vc*1ll*horizontalCut[i];\n                hc++;\n                i--;\n            }\n            else{\n                res += hc*1ll*verticalCut[j];\n                vc++;\n                j--;\n            }\n        }\n\n        while(i>=0){\n            res += vc*1ll*horizontalCut[i];\n                hc++;\n                i--;\n        }\n        while(j>=0){\n            res += hc*1ll*verticalCut[j];\n                vc++;\n                j--;\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720925403",
    "subm_id": "1320253590"
}