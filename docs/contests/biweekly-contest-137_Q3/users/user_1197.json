{
    "username": "Chaitanya",
    "submission": "class Solution {\n    class BoardData{\n        long val;\n        int row;\n        int col;\n        BoardData(long val, int row, int col){\n            this.val = val;\n            this.row = row;\n            this.col = col;\n        }\n    }\n    class BoardDataComparator implements Comparator<BoardData> {\n        @Override\n        public int compare(BoardData b1, BoardData b2) {\n            return Long.compare(b2.val, b1.val);\n        }\n    }\n    public long maximumValueSum(int[][] board) {\n        long maxSum = Long.MIN_VALUE;\n        List<BoardData> list = new ArrayList<>();\n        int m = board.length;\n        int n = board[0].length;\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                list.add(new BoardData((long)board[i][j], i, j));\n            }\n        }\n        Collections.sort(list, new BoardDataComparator());\n        int s = list.size();\n        int x = m + n - 1;\n        long sum = 0;\n        for(int i = 0; i < x; i++){\n            for(int j = i + 1; j < Math.min(2 * x, s - 1); j++){\n                for(int k = j + 1; k < Math.min(3 * x, s); k++){\n                    BoardData first = list.get(i);\n                    BoardData second = list.get(j);\n                    BoardData third = list.get(k);\n                    boolean notSameRow = first.row != second.row && first.row != third.row && second.row != third.row;\n                    boolean notSameCol = first.col != second.col && first.col != third.col && second.col != third.col;\n                    if(notSameRow && notSameCol){\n                        sum = first.val + second.val + third.val;\n                        if(sum > maxSum)\n                            maxSum = sum;\n                    }\n                }\n            }\n        }\n        return maxSum;\n    }\n}",
    "submit_ts": "1723910106",
    "subm_id": "1359217620"
}