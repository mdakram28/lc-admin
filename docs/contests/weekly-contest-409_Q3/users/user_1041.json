{
    "username": "piyush4545",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& q) {\n        vector<int> dist(n, 0);\n        set<int> street;\n        for (int i = 0; i < n; ++i) {\n            street.insert(i);\n        }\n        vector<int> vec;\n        for (int i = 1; i < n; ++i) {\n            dist[i] = dist[i - 1] + 1;\n        }\n        for (auto& it : q) {\n            int x = it[0];\n            int y = it[1];\n\n            auto it1 = street.lower_bound(x + 1);\n            auto it2 = street.lower_bound(y);\n\n            vector<int> toRem;\n            for (auto it = it1; it != it2; ++it) {\n                toRem.push_back(*it);\n            }\n            \n            for (int node : toRem) {\n                street.erase(node);\n            }\n\n            vec.push_back(street.size() - 1);\n        }\n\n        return vec;\n    }\n};",
    "submit_ts": "1722743868",
    "subm_id": "1343801495"
}