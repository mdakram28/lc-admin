{
    "username": "js_pro",
    "submission": "/**\n * @param {string} target\n * @param {string[]} words\n * @param {number[]} costs\n * @return {number}\n */\nconst minimumCost = function (target, words, costs) {\n    const n = target.length;\n    const m = words.length;\n    const trie = new Trie();\n\n    for (let i = 0; i < m; i++) {\n        trie.insert(words[i], costs[i]);\n    }\n\n    const dp = Array(n + 1).fill(Infinity);\n    dp[0] = 0;\n\n    for (let i = 0; i < n; i++) {\n        if (dp[i] === Infinity) continue;\n\n        const next = trie.search(target, i);\n\n        for (let [nexti, costi] of next) {\n            dp[nexti] = Math.min(dp[nexti], dp[i] + costi);\n        }\n    }\n\n    return dp[n] == Infinity ? -1 : dp[n];\n};\n\nclass TrieNode {\n    constructor() {\n        this.children = {};\n        this.cost = Infinity;\n    }\n}\n\nclass Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n\n    insert(word, cost) {\n        let node = this.root;\n        for (let char of word) {\n            if (!node.children[char]) {\n                node.children[char] = new TrieNode();\n            }\n            node = node.children[char];\n        }\n        node.cost = Math.min(node.cost, cost);\n    }\n\n    search(target, index) {\n        let node = this.root;\n        const res = [];\n        for (let i = index; i < target.length; i++) {\n            if (!node.children[target[i]]) break;\n            node = node.children[target[i]];\n            if (node.cost !== Infinity) {\n                res.push([i + 1, node.cost]);\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1720321108",
    "subm_id": "1312313729"
}