{
    "username": "ajinkya1p3",
    "submission": "class Solution {\nprivate:\n    map< pair<long long, pair<int, int>>, int > dp;\n    \n    int solve(long long pos, int jump, int f, int target)\n    {\n        if (pos > 2e9)\n            return 0;\n        \n        if (dp.count({pos, {jump, f}}))\n            return dp[{pos, {jump, f}}];\n        \n        int ans = solve(pos + (1LL << jump), jump + 1, 0, target) + (pos == target);\n        \n        if (f == 0 && pos > 0)\n            ans += solve(pos - 1, jump, 1, target);\n        \n        return dp[{pos, {jump, f}}] = ans;\n    }\npublic:\n    int waysToReachStair(int k) {\n        return solve(1, 0, 0, k);\n    }\n};",
    "submit_ts": 1716086656.0
}