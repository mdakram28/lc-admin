{
    "username": "tonyli00000",
    "submission": "vector<int>p;\nint get_root(int x) {\n\tif (p[x] == x)return x;\n\treturn p[x] = get_root(p[x]);\n}\n\nvoid join(int x, int y) {\n\tint a = get_root(x), b = get_root(y);\n\tif (a == b)return;\n\tp[a] = b;\n}\n\nclass Solution {\npublic:\n\t// 0 - bottom, 1 - left, 2 - top, 3 - right\n\tvector<bool> solve(int x, int y, int r, int X, int Y) {\n\t\tvector<bool>ret(4);\n\n\t\t// bottom\n\t\tif (x < X)ret[0] = (y - r) <= 0;\n\t\telse {\n\t\t\tlong long x1 = x - X, y1 = y;\n\t\t\tret[0] = x1 * x1 + y1 * y1 < 1LL * r * 1LL * r;\n\t\t}\n\n\t\t// left\n\t\tif (y < Y)ret[1] = (x - r) <= 0;\n\t\telse {\n\t\t\tlong long x1 = x, y1 = y - Y;\n\t\t\tret[1] = x1 * x1 + y1 * y1 < 1LL * r * 1LL * r;\n\t\t}\n\n\t\t// top\n\t\tif (x < X)ret[2] = abs(y-Y)<=r;\n\t\telse {\n\t\t\tlong long x1 = x - X, y1 = y - Y;\n\t\t\tret[2] = x1 * x1 + y1 * y1 < 1LL * r * 1LL * r;\n\t\t}\n\n\t\t// right\n\t\tif (y < Y)ret[3] = abs(x - X) <= r;\n\t\telse {\n\t\t\tlong long x1 = x - X, y1 = y - Y;\n\t\t\tret[3] = x1 * x1 + y1 * y1 < 1LL * r * 1LL * r;\n\t\t}\n\t\treturn ret;\n\t}\n\tvector<pair<int, int>>good = {  };\n\n\tbool canReachCorner(int X, int Y, vector<vector<int>> circles) {\n\t\tint n = circles.size();\n\t\tvector<vector<int>>valid;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint x = circles[i][0], y = circles[i][1], r = circles[i][2];\n\t\t\tif (x <= X && y <= Y) {\n\t\t\t\tvalid.push_back({ x,y,r });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (x <= X && y < Y + r) {\n\t\t\t\tvalid.push_back({ x,y,r });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (y <= Y && x < X + r) {\n\t\t\t\tvalid.push_back({ x,y,r });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlong long x1 = x - X, y1 = y - Y;\n\t\t\tif (x1 * x1 + y1 * y1 < 1LL * r * 1LL * r) {\n\t\t\t\tvalid.push_back({ x,y,r });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tint m = valid.size();\n\t\tp.resize(m);\n\t\tfor (int i = 0; i < m; i++)p[i] = i;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tfor (int j = i + 1; j < m; j++) {\n\t\t\t\tlong long x1 = valid[i][0] - valid[j][0], y1 = valid[i][1] - valid[j][1];\n\t\t\t\tlong long r = valid[i][2] + valid[j][2];\n\t\t\t\tif (x1 * x1 + y1 * y1 <= 1LL * r * 1LL * r) join(i, j);\n\t\t\t}\n\t\t}\n\n\t\tvector<vector<bool>>res(m);\n\t\tfor(int i=0;i<m;i++)res[i] = solve(valid[i][0], valid[i][1], valid[i][2], X, Y);\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (get_root(i) != get_root(j))continue;\n\t\t\t\tvector<bool>&a = res[i];\n\t\t\t\tvector<bool>&b = res[j];\n\t\t\t\tif (a[0] && b[1])return false;\n\t\t\t\tif (a[0] && b[2])return false;\n\t\t\t\tif (a[3] && b[2])return false;\n\t\t\t\tif (a[3] && b[1])return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};",
    "submit_ts": "1722138033",
    "subm_id": "1335780342"
}