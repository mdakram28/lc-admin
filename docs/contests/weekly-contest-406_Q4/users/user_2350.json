{
    "username": "awe_some",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n        for (int i = 0; i < horizontalCut.size(); i++) {\n            cuts.push_back({horizontalCut[i], 'H'});\n        }\n        for (int i = 0; i < verticalCut.size(); i++) {\n            cuts.push_back({verticalCut[i], 'V'});\n        }\n    \n        sort(cuts.rbegin(), cuts.rend());\n\n        int horizontalPieces = 1;\n        int verticalPieces = 1; \n        long long totalCost = 0;\n\n         for (auto& cut : cuts) {\n            if (cut.second == 'H') {\n                totalCost += cut.first * verticalPieces;\n                horizontalPieces++;\n            } else {\n                totalCost += cut.first * horizontalPieces;\n                verticalPieces++;\n            }\n        }\n        \n        return totalCost;\n    }\n};",
    "submit_ts": "1720926473",
    "subm_id": "1320287322"
}