{
    "username": "Sarath_r10",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        hor_cut = [-cost for cost in horizontalCut]\n        ver_cut = [-cost for cost in verticalCut]\n\n        heapq.heapify(hor_cut)\n        heapq.heapify(ver_cut)\n\n        hor_pieces = 1\n        ver_pieces = 1\n        total = 0\n\n        while hor_cut or ver_cut:\n            if not ver_cut or (hor_cut and hor_cut[0] < ver_cut[0]):\n                cost = -heapq.heappop(hor_cut)\n                total += cost * ver_pieces\n                hor_pieces += 1\n            else:\n                cost = -heapq.heappop(ver_cut)\n                total += cost * hor_pieces\n                ver_pieces += 1\n        return total\n        ",
    "submit_ts": "1720926739",
    "subm_id": "1320295014"
}