{
    "username": "A_Le_K",
    "submission": "static const int __ = []() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return 0; }();\n\ntypedef long long ll; typedef unsigned int ui; typedef unsigned long long ull; typedef pair<int ,int> pii; typedef pair<ll, ll> pll; typedef double rl;\ntypedef pii int2; typedef tuple<int, int, int> int3; typedef tuple<int, int, int, int> int4; typedef tuple<int, int, int, int, int> int5;\ntypedef pll ll2; typedef tuple<ll, ll, ll> ll3; typedef tuple<ll, ll, ll, ll> ll4; typedef tuple<ll, ll, ll, ll, ll> ll5;\ntypedef vector<int> vi; typedef vector<pii> vii; typedef vector<ll> vll; typedef vector<pll> vll_ll; typedef vector<vi> vvi; typedef vector<vii> vvii; typedef vector<vll> vvll; typedef vector<vll_ll> vvll_ll;\n\n#define pb push_back\n#define mp make_pair\n#define eb emplace_back\n#define xx first\n#define yy second\n#define FOR(i,N) for(int i=0; i<N; i++)\n#define g0(x) get<0>(x)\n#define g1(x) get<1>(x)\n#define g2(x) get<2>(x)\n#define g3(x) get<3>(x)\n#define g4(x) get<4>(x)\n\ntemplate<typename A> string to_string(A* ptr) { stringstream ss; ss << \"0x\" << std::setw(16) << std::setfill ('0') << std::hex << (uint64_t)(uintptr_t)ptr; return ss.str(); }\nstring to_string(char c) { return ((string)\"'\"+c)+ \"'\"; }\ntemplate <typename A, typename B> string to_string(pair<A, B> p);\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p);\ntemplate <typename A, typename B, typename C, typename D> string to_string(tuple<A, B, C, D> p);\nstring to_string(const string& s) { return '\"' + s + '\"'; }\nstring to_string(const char* s) { return to_string((string) s); }\nstring to_string(bool b) { return (b ? \"true\" : \"false\"); }\nstring to_string(vector<bool> v) {\n    bool first = true; string res = \"{\";\n\tfor (int i = 0; i < static_cast<int>(v.size()); i++) { if (!first) { res += \", \"; } first = false; res += to_string(v[i]); }\n\tres += \"}\"; return res;\n}\ntemplate <size_t N> string to_string(bitset<N> v) { string res = \"\"; for (size_t i = 0; i < N; i++) { res += static_cast<char>('0' + v[i]); } return res; }\ntemplate <typename A> string to_string(A v) {\n\tbool first = true; string res = \"{\";\n\tfor (const auto &x : v) {\n\t\tif (!first) { res += \", \"; }\n\t\tfirst = false; res += to_string(x);\n\t}\n\tres += \"}\"; return res;\n}\ntemplate <typename A, typename B> string to_string(pair<A, B> p) { return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\"; }\ntemplate <typename A, typename B, typename C> string to_string(tuple<A, B, C> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\"; }\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) { return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\"; }\nvoid debug_out() { cout << endl; }\ntemplate <typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cout << \" \" << to_string(H); debug_out(T...); }\n\n#define popc __builtin_popcountll\n//#define popc __builtin_popcount\n//#define clz __builtin_clzll\n//#define clz __builtin_clz\ninline int bitLength(uint32_t val) { return 32 - __builtin_clz  (val); }\ninline int bitLength(uint64_t val) { return 64 - __builtin_clzll(val); }\n\ntemplate<typename T> inline void domax(T& A, const T& B) { A=max(A, B); }\ntemplate<typename T> inline void domin(T& A, const T& B) { A=min(A, B); }\n\ntemplate<typename T>\ninline T true_mod(T A, T B)\n{\n    assert(B>=1);\n    A%=B;\n    if(A<0) A+=B;\n    return A;\n}\n\ntemplate<typename T>\ninline T div_down(T A, T B)\n{\n    return (A-true_mod(A,B))/B;\n}\n\ntemplate<typename T>\ninline T div_up(T A, T B)\n{\n    return div_down(A+B-1, B);\n}\n\n#define all(x) (x).begin(), (x).end()\n\n#if 0\n#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define dbg(...) 42\n#endif\n\nconst int INF=1e9+100;\n\n/*\nstruct info {\n    vector<pii>\n};\n*/\n\nstruct info {\n    vector<pii> V;\n    info():V(){}\n};\n\nstring to_string(const info& i) {\n    return \"[\"+to_string(i.V) +\"]\";\n}\n\n/*\ninfo update(info A, int key, int val) {\n    map<int, int> M;\n    for(auto [k, v]: A.V) M[k]=v;\n    domax(M[key], val);\n    while(M.size()>2) {\n        M.erase(M.begin());\n    }\n    info result;\n    result.V=vector<pii>(M.begin(), M.end());\n    return result;\n}\n*/\n\ninfo update(info A, int key, int val) {\n    if(A.V.empty())\n    {\n        info res;\n        res.V={{key, val}};\n        return res;\n    }\n    auto it=A.V.begin();\n    auto [k0, v0]=*it;\n    if(v0>=val) {\n        return A;\n    }\n    info res;\n    res.V={{key, val}};\n    return res;\n}\n\nclass Solution {\npublic:\n    int maximumLength(vector<int>& a, int k) {\n        const int n=(int)a.size();\n        /*\n        map<int, int> ma;\n        for(auto& aa: ma) ma[aa]=0;\n        int sz=0;\n        for(auto& [k, v]: ma) v=sz++;\n        */\n        dbg(\"===========\");\n        dbg(n, a, k);\n\n\n        vector<vector<int>> dp(n, vector<int>(k+1, 0));\n\n        vector<info> INFO(k+1);\n        map<int, vector<int>> MM;\n\n        FOR(i, n) {\n            const int ai=a[i];\n\n            domax(dp[i][0], 1);\n            dbg(\"-----\");\n            dbg(i, ai);\n            dbg(INFO);\n            dbg(MM);\n\n\n            // a[j]!=a[i] ==> 1+dp[j][bad]-> dp[i][bad+0];\n            // a[j]==a[i] ==> 1+dp[j][bad]-> dp[i][bad+1]\n\n            if(MM.count(ai)==0) MM[ai]=vector<int>(k+1, 0);\n\n            FOR(bad, k+1) {\n                for(auto [key, val]: INFO[bad].V) {\n                    //if(key==a[i]) continue;\n                    const int new_bad=bad+(key!=ai);\n                    if(new_bad<=k) domax(dp[i][new_bad], val+1);\n                }\n\n                domax(dp[i][bad], MM[a[i]][bad]+1);\n            }\n\n\n\n            FOR(bad, k+1) {\n                // TODO\n                INFO[bad]=update(INFO[bad], a[i], dp[i][bad]);\n\n                domax(MM[a[i]][bad], dp[i][bad]);\n            }\n        }\n\n\n        dbg(\"=====FINAL====\");\n        dbg(dp);\n        dbg(INFO);\n        dbg(MM);\n\n\n        int result=0;\n        FOR(i, n) FOR(j, k+1) domax(result, dp[i][j]);\n        return result;\n    }\n\n};\n\n\n",
    "submit_ts": 1717860644.0
}