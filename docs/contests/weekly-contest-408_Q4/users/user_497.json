{
    "username": "lianglia",
    "submission": "class Solution {\n    using LL = long long;\n    vector<int> p;\n\n    int find(int x) {\n        if (x != p[x]) p[x] = find(p[x]);\n        return p[x];\n    }\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        /*\n        if (circles.size() == 1) {\n            int xl = circles[0][0] - circles[0][2];\n            int xr = circles[0][0] + circles[0][2];\n            int yl = circles[0][1] - circles[0][2];\n            int yr = circles[0][1] + circles[0][2];\n            if (xl <= 0 && xr >= X) return false;\n            if (yl <= 0 && yr >= Y) return false;\n            return true;\n        }\n        */\n\n        for (int i = 0; i < circles.size(); ++i) p.push_back(i);\n\n        for (int i = 0; i < circles.size(); ++i) {\n            for (int j = i + 1; j < circles.size(); ++j) {\n                LL r1 = circles[i][2], r2 = circles[j][2];\n                LL dx = circles[i][0] - circles[j][0];\n                LL dy = circles[i][1] - circles[j][1];\n                if ((r1 + r2) * (r1 + r2) >= dx * dx + dy * dy) {\n                    int pa = find(i), pb = find(j);\n                    p[pa] = pb;\n                }\n            }\n        }\n        unordered_map<int, vector<int>> h;\n        for (int i = 0; i < p.size(); ++i) {\n            int pi = find(i);\n            //cout << pi << endl;\n            if (!h.count(pi)) h[pi] = {INT_MAX, INT_MIN, INT_MAX, INT_MIN};\n            int x1 = circles[i][0] - circles[i][2];\n            int x2 = circles[i][0] + circles[i][2];\n            int y1 = circles[i][1] - circles[i][2];\n            int y2 = circles[i][1] + circles[i][2];\n            h[pi] = {min(h[pi][0], x1), max(h[pi][1], x2), min(h[pi][2], y1), max(h[pi][3], y2)};\n        }\n        for (auto& [k, v] : h) {\n            if (v[0] <= 0 && v[1] >= X) return false;\n            if (v[2] <= 0 && v[3] >= Y) return false;\n            if (v[0] <= 0 && v[2] <= 0) return false;\n            if (v[1] >= X && v[3] >= Y) return false;\n        }\n        return true;\n\n    }\n};",
    "submit_ts": "1722137016",
    "subm_id": "1335751711"
}