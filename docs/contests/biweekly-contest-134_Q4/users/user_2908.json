{
    "username": "Karthik751",
    "submission": "#include <vector>\n#include <unordered_map>\nclass Solution {\npublic:\n    long long countSubarrays(std::vector<int>& nums, int k) {\n        int s = nums.size();\n        long long total = 0;\n        std::unordered_map<long long, long long> previousResults;\n        for (int i = 0; i < s; ++i) {\n            std::unordered_map<long long, long long> currentResults; \n            if (nums[i] == k) {\n                ++total;\n            }\n            currentResults[nums[i]] = 1;\n            for (const auto& [value, frequency] : previousResults) {\n                long long newAndResult = value & nums[i];\n                if (newAndResult == k) {\n                    total += frequency;\n                }\n                currentResults[newAndResult] += frequency;\n            }\n            previousResults = currentResults;\n        }\n        return total;\n    }\n};\n",
    "submit_ts": "1720280409",
    "subm_id": "1311788338"
}