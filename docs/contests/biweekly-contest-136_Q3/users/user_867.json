{
    "username": "tyson-t",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int halfM = m / 2;\n        int halfN = n / 2;\n        int ans = 0;\n        for (int i = 0; i < halfM; i++) {\n            for (int j = 0; j < halfN; j++) {\n                int sum = grid[i][j] + grid[m-1-i][j] + grid[i][n-1-j] + grid[m-1-i][n-1-j];\n                switch (sum) {\n                    case 1, 3 -> ans++;\n                    case 2 -> ans += 2;\n                    default -> {\n                    }\n                }\n            }\n        }\n        int sum = 0;\n        boolean flped = false;\n        if ((m & 0x01) == 0x01) {\n            for (int j = 0; j < halfN; j++) {\n                if (grid[halfM][j] != grid[halfM][n-1-j]) {\n                    ans++;\n                    flped = true;\n                } else {\n                    sum += grid[halfM][j];\n                    sum += grid[halfM][n-1-j];\n                }\n            }\n\n        }\n        if ((n & 0x01) == 0x01) {\n            for (int i = 0; i < halfM; i++) {\n                if (grid[i][halfN] != grid[m-1-i][halfN]) {\n                    ans++;\n                    flped = true;\n                } else {\n                    sum += grid[i][halfN];\n                    sum += grid[m-1-i][halfN];\n                }\n            }\n        }\n        if (sum % 4 != 0 && !flped) {\n            ans += 2;\n        }\n        if ((m & 0x01) == 0x01 && (n & 0x01) == 0x01) {\n            ans += grid[halfM][halfN];\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1722697973",
    "subm_id": "552268718"
}