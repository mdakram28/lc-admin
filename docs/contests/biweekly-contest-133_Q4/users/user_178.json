{
    "username": "tabaahi07",
    "submission": "class Solution {\npublic:\n    int MOD = 1e9 + 7;\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        int MAX_INV = 400;\n\n        vector<vector<int>> dp(n + 1, std::vector<int>(MAX_INV + 1, 0));\n        dp[0][0] = 1;\n\n        vector<int> reqInv(n, -1);\n        for (auto req : requirements) {\n            reqInv[req[0]] = req[1];\n        }\n\n        for (int len = 1; len <= n; ++len) {\n            for (int inv = 0; inv <= MAX_INV; ++inv) {\n                for (int k = 0; k < len; ++k) {\n                    if (inv >= k) {\n                        dp[len][inv] = (dp[len][inv] + dp[len - 1][inv - k]) % MOD;\n                    }\n                }\n            }\n\n            if (reqInv[len - 1] != -1) {\n                int requiredInv = reqInv[len - 1];\n                for (int inv = 0; inv <= MAX_INV; ++inv) {\n                    if (inv != requiredInv) {\n                        dp[len][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        return dp[n][reqInv[n - 1]];\n    }\n\n\n};",
    "submit_ts": 1719069371.0
}