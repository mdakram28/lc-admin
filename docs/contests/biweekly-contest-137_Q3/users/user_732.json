{
    "username": "ygor_ribeiro7",
    "submission": "class Solution {\npublic:\n    long long dp[101][101][101][3];\n    int n, m;\n    vector<vector<pair<int, int>>> vet;\n    \n    long long solve(int pos, int c1, int c2, int qtd){\n        if(pos == n) return (long long) -1e11;\n        \n        if(dp[pos][c1][c2][qtd] != -1) return dp[pos][c1][c2][qtd];\n        \n        long long ans = solve(pos+1, c1, c2, qtd);\n        for(int i=0;i<m;i++){\n            if(c1 == 0){\n                ans = max(ans, solve(pos + 1, vet[pos][i].second, c2, qtd + 1) + vet[pos][i].first);\n            }else if(c2 == 0){\n                if(vet[pos][i].second != c1) ans = max(ans, solve(pos + 1, c1, vet[pos][i].second, qtd + 1) + vet[pos][i].first);\n            }else{\n                if(vet[pos][i].second != c1 && vet[pos][i].second  != c2) ans = max(ans, (long long) vet[pos][i].first);\n            }\n        }\n        \n        return dp[pos][c1][c2][qtd] = ans;\n    }\n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        memset(dp, -1, sizeof dp);\n        n = (int) board.size();\n        vet.assign(n+2, vector<pair<int, int>> ());\n        m = (int) board[0].size();\n        \n        for(int i=0;i<n;i++){\n            vector<pair<int,int>> tmp;\n            for(int j=0;j<m;j++) tmp.push_back({board[i][j], j + 1});\n            sort(tmp.rbegin(), tmp.rend());\n            for(int j=0;j<min(5, m);j++){\n                vet[i].push_back(tmp[j]);\n            }\n        }\n        \n        m = min(m, 5);\n        \n        return solve(0, 0, 0, 0);\n    }\n};",
    "submit_ts": "1723909489",
    "subm_id": "1359194487"
}