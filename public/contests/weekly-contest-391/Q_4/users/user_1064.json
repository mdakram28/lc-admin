{
    "username": "xiu-i8",
    "submission": "class Solution {\n#include <set>\n#include <algorithm>\n    const int N = 0x7fffffff;\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n         multiset<int> ctt1,ctt2;\n        int num = N;\n        int len=points.size();\n        for(int i=0;i<len;i++){\n            ctt1.insert(points[i][0] + points[i][1]);\n            ctt2.insert(points[i][0] - points[i][1]);\n        }\n         for(int i=0;i<len;i++){\n            ctt1.erase(ctt1.find(points[i][0]+points[i][1]));\n            ctt2.erase(ctt2.find(points[i][0]-points[i][1]));\n            int x=*--ctt1.end()-*ctt1.begin();\n            int y=*--ctt2.end()-*ctt2.begin();\n            num = min(num,max({x,y}));\n            ctt2.insert(points[i][0] - points[i][1]);\n            ctt1.insert(points[i][0] + points[i][1]);\n        }\n        return num;\n    }\n};"
}