{
    "username": "optimistic-mirzakhani5uk",
    "submission": "import sortedcontainers\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        ans = []\n        opt = 0\n        st = sortedcontainers.SortedList()\n        for u, v in queries:\n            left_index = st.bisect_left([u, v])\n            if left_index > 0:\n                if st[left_index - 1][0] <= u and st[left_index - 1][1] >= v:\n                    ans.append(ans[-1])\n                    continue\n                if st[left_index - 1][0] >= u and st[left_index - 1][1] <= v:\n                    left_index -= 1\n                    opt -= (st[left_index][1] - st[left_index][0] - 1)\n                    st.pop(left_index)\n            if left_index < len(st):\n                if st[left_index][0] <= u and st[left_index][1] >= v:\n                    ans.append(ans[-1])\n                    continue\n                while left_index < len(st):\n                    if st[left_index][0] >= u and st[left_index][1] <= v:\n                        opt -= (st[left_index][1] - st[left_index][0] - 1)\n                        st.pop(left_index)\n                    else:\n                        break\n            opt += (v - u - 1)\n            st.add([u, v])\n            ans.append(n - 1 - opt)\n        return ans\n                        ",
    "submit_ts": "1722741872",
    "subm_id": "552341007"
}