{
    "username": "Leaderboard",
    "submission": "class Solution {\n    public List<Boolean> getResults(int[][] queries) {\n        TreeSet<Integer> q1 = new TreeSet<>();\n        q1.add(0);\n        q1.add(10000000);\n        TreeMap<Integer, TreeSet<Integer>> tm = new TreeMap<>(); // size, starting index\n        TreeSet<Integer> tmp = new TreeSet<>();\n        tmp.add(0);\n        tm.put(10000000, tmp);\n        ArrayList<Boolean> res = new ArrayList<>();\n\n        // now process queries\n\n        for (int q[]: queries)\n        {\n       //     System.out.println(tm);\n            if (q[0] == 1)\n            {\n                // add and update as appropriate\n                int lower_bound = q1.floor(q[1]);\n                int upper_bound = q1.ceiling(q[1]);\n\n                // split into two separate ranges\n\n                // [lower_bound, q[1]] and [q[1], upper_bound]\n\n                int cur_diff = upper_bound - lower_bound;\n\n                TreeSet<Integer> ts = tm.get(cur_diff);\n                ts.remove(lower_bound);\n                if (ts.size() == 0)\n                tm.remove(cur_diff);\n                else\n                tm.put(cur_diff, ts);\n\n                // now add two separate ranges\n\n                int l_diff = q[1] - lower_bound;\n                ts = tm.get(l_diff);\n                if (ts == null)\n                ts = new TreeSet<>();\n                ts.add(lower_bound);\n                tm.put(l_diff, ts);\n\n                int u_diff = upper_bound - q[1];\n                ts = tm.get(u_diff);\n                if (ts == null)\n                ts = new TreeSet<>();\n                ts.add(q[1]);\n                tm.put(u_diff, ts);\n\n                // finally add in q1\n                q1.add(q[1]);\n\n            }\n            else\n            {\n                // handle q2\n                int lb = tm.ceilingKey(q[2]);\n          //      System.out.println(lb);\n                boolean query_result = false;\n                while (lb <= tm.lastKey())\n                {\n                    TreeSet<Integer> ts = tm.get(lb);\n                    \n                    // binary search over this\n\n                    if (ts.first() + q[2] <= q[1])\n                    {\n                        // OK we win!\n                        query_result = true;\n                        break;\n                    }\n\n                    if (lb == tm.lastKey())\n                    break;\n                    lb = tm.ceilingKey(lb + 1);\n                }\n                res.add(query_result);\n            }\n        }\n        return res;\n    }\n}",
    "submit_ts": "1716652756",
    "subm_id": "1267671182"
}