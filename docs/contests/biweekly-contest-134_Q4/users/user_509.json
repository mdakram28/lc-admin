{
    "username": "mahindra2005",
    "submission": "class Solution {\npublic:\n    vector<int> seg;\n    void build(int i,int l,int r,vector<int> &nums){\n        if(l==r){\n            seg[i] = nums[l];\n            return;\n        }\n        int m = l+((r-l)>>1);\n        build(i<<1,l,m,nums);\n        build(i<<1|1,m+1,r,nums);\n        seg[i] = seg[i<<1]&seg[i<<1|1];\n    }\n    int query(int i,int l,int r,int ql,int qr){\n        if(l>qr || ql>r) return INT_MAX;\n        if(ql<=l && r<=qr) return seg[i];\n        int m = l+((r-l)>>1);\n        int left = query(i<<1,l,m,ql,qr);\n        int right = query(i<<1|1,m+1,r,ql,qr);\n        return left&right;\n    }\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        seg.resize(4*n+1);\n        build(1,0,n-1,nums);\n        long long ans = 0;\n        for(int i=0;i<n;i++){\n            int l = i,r = n-1;\n            int left = -1;\n            while(l<=r){\n                int m = l+((r-l)>>1);\n                int val = query(1,0,n-1,i,m);\n                if(val==k){\n                    left = m;\n                    r = m-1; \n                }\n                else if(val<k){\n                    r = m-1;\n                }\n                else{\n                    l = m+1;\n                }\n            }\n\n            l = i,r = n-1;\n            int right = -1;\n            while(l<=r){\n                int m = l+((r-l)>>1);\n                int val = query(1,0,n-1,i,m);\n                if(val==k){\n                    right = m;\n                    l = m+1; \n                }\n                else if(val<k){\n                    r = m-1;\n                }\n                else{\n                    l = m+1;\n                }\n            }\n            if(left!=-1){\n                ans+=(right-left+1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720279150",
    "subm_id": "1311739555"
}