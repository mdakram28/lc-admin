{
    "username": "Emily",
    "submission": "def test_stuff():\n    arr = []\n    for n in range(1, 100):\n        half = (n+1) // 2\n        for x in range(int('9'*half), int(\"1\" + \"0\" * (half-1)), -1):\n            p = \"\"\n            # make palindrome\n            x = str(x)\n            if n % 2 == 0:\n                p = x + x[::-1]\n            else:\n                p = x[:-1] + x[::-1]\n            p = int(p)\n            if p % 7 == 0:\n                p = str(p)\n                # print(p)\n                if n % 2 == 0:\n                    arr.append(p[n//2-1:n//2+1])\n                else:\n                    arr.append(p[n//2])\n                break\n    print(arr)\n\nseven_pattern = [7,77,5,77,7,\"\",4,44,6,44,4,\"\"]\nseven_pattern = [str(x) for x in seven_pattern]\n\nclass Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        match k:\n            # use all da 9s\n            case 1 | 3 | 9:\n                return \"9\" * n\n            # ends in even number\n            case 2:\n                if n == 1:\n                    return \"8\"\n                return \"8\" + \"9\" * (n-2) + \"8\"\n            # last two digits divisible by 4, use the biggest possible to maximize the front two\n            case 4:\n                if n <= 4:\n                    return \"8\" * n\n                return \"88\" + \"9\" * (n-4) + \"88\"\n            # ends in 5 (or 0 but...)\n            case 5:\n                if n == 1:\n                    return \"5\"\n                return \"5\" + \"9\" * (n-2) + \"5\"\n            # divisible by 2 and 3\n            case 6:\n                if n <= 2:\n                    return \"6\" * n\n                x = (n-3)//2\n                middle = \"8\" if n % 2 else \"77\"\n                return f\"8{'9'*x}{middle}{'9'*x}8\"\n            # fancy stuff...\n            case 7:\n                middle = seven_pattern[(n-1) % len(seven_pattern)]\n                padding = (n - len(middle)) // 2\n                return f\"{'9'*padding}{middle}{'9'*padding}\"\n            # 8 was in fact not the same. its last 3 digits\n            case 8:\n                if n <= 6:\n                    return \"8\" * n\n                return \"888\" + \"9\" * (n-6) + \"888\"",
    "submit_ts": "1723952156",
    "subm_id": "1359789295"
}