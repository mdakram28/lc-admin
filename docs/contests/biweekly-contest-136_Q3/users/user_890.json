{
    "username": "ning2ing",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int ans = 0;\n        int half_m = m / 2, half_n = n / 2;\n        for (int i = 0; i < half_m; i++) {\n            for (int j = 0; j < half_n; j++) {\n                int a = grid[i][j];\n                int b = grid[i][n - 1 - j];\n                int c = grid[m - 1 - i][j];\n                int d = grid[m - 1 - i][n - 1 - j];\n                int s = a + b + c + d;\n                if (s == 1 || s == 3) {\n                    ans += 1;\n                } else if (s == 2) {\n                    ans += 2;\n                }\n            }\n        }\n        // \u5fc5\u4e3a 4 \u500d\u6570\n\n        // \u91cd\u70b9\u8ba8\u8bba\uff1a\n        int cnt_same_1 = 0;\n        int cnt_diff_1 = 0;\n        if (m % 2 == 1) {\n            for (int l = 0, r = n - 1; l < r; l++, r--) {\n                if (grid[half_m][l] != grid[half_m][r]) {\n                    cnt_diff_1 += 1;\n                } else {\n                    if (grid[half_m][l] == 1) {\n                        cnt_same_1 += 2;\n                    }\n                }\n            }\n        }\n        if (n % 2 == 1) {\n            for (int l = 0, r = m - 1; l < r; l++, r--) {\n                if (grid[l][half_n] != grid[r][half_n]) {\n                    cnt_diff_1 += 1;\n                } else {\n                    if (grid[l][half_n] == 1) {\n                        cnt_same_1 += 2;\n                    }\n                }\n            }\n        }\n        if (m % 2 == 1 && n % 2 == 1 && grid[half_m][half_n] == 1) {\n            ans++;\n        }\n        cnt_same_1 %= 4;\n        if (cnt_same_1 == 2 && cnt_diff_1 == 0) {\n            ans += 2;\n        }\n        return ans + cnt_diff_1;\n    }\n}",
    "submit_ts": "1722697720",
    "subm_id": "552267479"
}