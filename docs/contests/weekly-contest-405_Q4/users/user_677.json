{
    "username": "guddusingh123",
    "submission": "// DEBUGGING TEMPLATE\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\nenable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifndef ONLINE_JUDGE\n~debug() { cout << endl; }\neni(!=) cout << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\nris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n*this << \"[\";\nfor (auto it = d.b; it != d.e; ++it)\n*this << \", \" + 2 * (it == d.b) << *it;\nris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\nclass Solution {\npublic:\n    struct node\n    {\n        bool leaf;\n        int mn = 1e9;\n        node* child[26];\n    };\n\n    node* create()\n    {\n        node* ret = new node();\n        for(int i=0;i<26;i++)ret->child[i]=NULL;\n        ret->leaf=false;\n        return ret;\n    }\n\n    node* root= NULL;\n\n\n    void add(string x, int cost)\n    {\n        node* ex=root;  // to keep a copy of root\n        for(int i=0;i<x.length();i++)\n        {\n            if(root->child[x[i]-'a']==NULL)\n            {\n                root->child[x[i]-'a']=create();\n            }\n            root=root->child[x[i]-'a'];\n        }\n        root->leaf=true;\n        root -> mn = min(root -> mn, cost);\n        root = ex;\n    }\n\n \n    \n    \n    int minimumCost(string t, vector<string>& words, vector<int>& costs) {\n        root = create();\n        int n = t.size();\n        vector<int> dp(n+1, 1e9);\n        dp[0] = 0;\n        int N = 0;\n        for(int i = 0; i < words.size(); i++){\n            auto & s = words[i];\n            add(s, costs[i]);\n            N = max(N, (int)s.size());\n        }\n        \n        for(int i = 0; i < n; i++){\n            node *ex = root;\n            for(int j = i; j < min(n, j + N); j++){\n                int x = t[j] - 'a';\n                if((root -> child[x]) == NULL){\n                    break;\n                }\n                else{\n                    root = root -> child[x];\n                    // debug() << imie(i) << imie(j) << imie(root -> leaf);\n                    if(root -> leaf){\n                        dp[j+1] = min(dp[j+1], root -> mn + dp[i]);\n                    }\n                }\n            }\n            root = ex;\n        }\n        \n        return (dp[n] == (int)1e9 ? -1 : dp[n]);\n    }\n};",
    "submit_ts": "1720322971",
    "subm_id": "1312363994"
}