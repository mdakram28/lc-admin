{
    "username": "XxFALCONxX",
    "submission": "class Solution {\npublic:\n    int minD(vector<vector<int>>& points, int gindex){\n        vector<int> v1;\n        vector<int> v2;\n        int index = 0;\n        for(auto i:points){\n            if(index!=gindex){\n                v1.push_back(i[0] + i[1]);\n                v2.push_back(i[0] - i[1]);\n            }\n            index++;\n        }\n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n\n        return max(v1.back() - v1.front(), v2.back() - v2.front());\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vector<pair<int, int>> v1;\n        vector<pair<int, int>> v2;\n        int index = 0;\n        for(auto i:points){\n            v1.push_back({i[0] + i[1], index});\n            v2.push_back({i[0] - i[1], index});\n            index++;\n        }\n        sort(v1.begin(), v1.end());\n        sort(v2.begin(), v2.end());\n\n        int maxD = max(v1.back().first - v1.front().first, v2.back().first - v2.front().first);\n        vector<int> indicies = { v1.back().second, v1.front().second, v2.back().second, v2.front().second };\n        for(auto i : indicies){\n            // cout<<i<<\" => \"<<minD(points, i)<<endl;\n            maxD = min(maxD, minD(points, i));\n        }\n        return maxD;\n    }\n};"
}