{
    "username": "Sudhanshuu418",
    "submission": "class Solution {\n    public:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        \n       \n        if(nums.size()<2)\n            return false;\n        \n        \n        unordered_map<int, int> mp;\n      \n        mp[0]=-1;\n        \n        int runningSum=0;\n        \n        for(int i=0;i<nums.size();i++)\n        {\n            runningSum+=nums[i];\n            \n            if(k!=0) \n                runningSum = runningSum%k;\n            \n            if(mp.find(runningSum)!=mp.end())\n            {\n                \n                if(i-mp[runningSum]>1)\n                    return true;\n            }\n            else\n            {\n                \n                mp[runningSum]=i;\n            }\n                    \n        }\n        \n        return false;\n        \n    }\n    \n    public:\nint maximumLength(vector<int>& nums, int k) { \n        int n=nums.size(); \n        vector<vector<int>>dp(n,vector<int>(k+1,1)); \n        int ans=1; \n        vector<int>vk(k+1,-1); \n        vector<map<int,int>>vkm(k+1); \n        for(int i=0;i<n;i++){ \n            for(int j=0;j<=k;j++){ \n                for(int l=0;l<j;l++){ \n                    dp[i][j]=max(dp[i][j],1+vk[l]); \n                } \n                if(vkm[j].find(nums[i])!=vkm[j].end()){ \n                    dp[i][j]=max(dp[i][j],1+vkm[j][nums[i]]); \n                } \n                ans=max(ans,dp[i][j]); \n            } \n            for(int j=0;j<=k;j++){ \n                vk[j]=max(vk[j],dp[i][j]); \n                vkm[j][nums[i]]=max(vkm[j][nums[i]],dp[i][j]); \n            } \n        } \n        return ans; \n    }\n};",
    "submit_ts": 1717861717.0
}