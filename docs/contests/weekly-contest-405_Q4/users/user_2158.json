{
    "username": "mikhaelc09",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf') for _ in range(n + 1)]\n        d = {}\n        for i in range(len(words)):\n            if words[i] not in d.keys():\n                d[words[i]] = float('inf')\n            d[words[i]] = min(d[words[i]], costs[i])\n        print(d)\n        dp[0] = 0\n\n        for i in range(1, n + 1):\n            for word, cost in d.items():\n                if i >= len(word) and target[i - len(word):i] == word:\n                    dp[i] = min(dp[i], dp[i-len(word)] + cost)\n\n        if dp[n] == float('inf'):\n            return -1\n\n        return dp[n]\n\n",
    "submit_ts": "1720323188",
    "subm_id": "1312369479"
}