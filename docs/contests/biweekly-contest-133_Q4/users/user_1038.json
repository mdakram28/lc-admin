{
    "username": "BhawarPratapSingh_1",
    "submission": "const int MOD = 1000000007;\nconst int MAX_INVERSIONS = 400;\n\nclass Solution {\npublic:\n    bool judgeSquareSum(int c) {\n        long long i=0,j=sqrt(c);\n        while(i<=j){\n            if(i*i + j*j == (long long)c){\n                return true;\n            }\n            else if(i*i + j*j < (long long)c){\n                i++;\n            }\n            else{\n                j--;\n            }\n        }\n        return false;\n    }\n    int numberOfPermutations(int n, vector<vector<int>>& requirements) {\n        unordered_map<int, int> reqMap;\n        for (const auto& req : requirements) {\n            reqMap[req[0] + 1] = req[1];\n        }\n\n        vector<vector<long long>> permCounts(n + 1, vector<long long>(MAX_INVERSIONS + 1, 0));\n        permCounts[0][0] = 1;\n\n        for (int length = 1; length <= n; length++) {\n            for (int inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                for (int newPos = 0; newPos < length; newPos++) {\n                    int prevInv = inv - newPos;\n                    if (prevInv >= 0) {\n                        permCounts[length][inv] = (permCounts[length][inv] + permCounts[length - 1][prevInv]) % MOD;\n                    }\n                }\n            }\n\n            if (reqMap.find(length) != reqMap.end()) {\n                int targetInv = reqMap[length];\n                for (int inv = 0; inv <= MAX_INVERSIONS; inv++) {\n                    if (inv != targetInv) {\n                        permCounts[length][inv] = 0;\n                    }\n                }\n            }\n        }\n\n        long long result = 0;\n        for (const auto& count : permCounts[n]) {\n            result = (result + count) % MOD;\n        }\n\n        return static_cast<int>(result);\n    }\n    int longestPalindrome(string s) {\n        vector<int>v(60,0);\n        for(int i=0;i<s.size();i++){\n            v[s[i]-'A']++;\n        }\n        int ans = 0;\n        int odd = 0;\n        for(int i=0;i<60;i++){\n            if(v[i]%2 == 0){\n                ans += v[i];\n            }else{\n                odd = 1;\n                ans += v[i]-1;\n            }\n        }\n        if(odd == 1) ans++;\n        return ans;\n    }\n};",
    "submit_ts": 1719071265.0
}