{
    "username": "Sukhomay",
    "submission": "class Solution {\npublic:\n    map<pair<pair<int, int>, bool>, int> dp;\n    int K;\n    int binExp(int a, int b, int M)\n    {\n        int ans = 1;\n        while (b)\n        {\n            if (b & 1)\n            {\n                ans = (ans * 1LL * a) % M;\n            }\n            a = (a * 1LL * a) % M;\n            b >>= 1;\n        }\n        return ans;\n    }\n    \n    int rec(int i, int jump, bool back)\n    {   \n        \n        if(dp.find(make_pair(make_pair(i, jump), back))!=dp.end())\n        {\n            return  dp[make_pair(make_pair(i, jump), back)];     \n        }\n        \n        int ans = 0;\n        int j2 = binExp(2, jump, 1e9+7); \n        \n        if(j2>0 && i+j2-1<=K)\n        {\n            ans += rec(i+j2, jump+1, true);\n        }\n        if(back && i-1>=0)\n        {\n            ans += rec(i-1, jump, false);\n        }\n        \n        if(i==K)\n        {\n            ans++;\n        }\n        \n        // cout << i << \" \" << jump << \" \" << back << \" : \" << ans << endl;\n        return dp[make_pair(make_pair(i, jump), back)] = ans;\n        \n    }\n    \n    int waysToReachStair(int k) {\n        \n        K = k;\n        return rec(1, 0, true);\n    }\n};",
    "submit_ts": "1716090068",
    "subm_id": "1261858353"
}