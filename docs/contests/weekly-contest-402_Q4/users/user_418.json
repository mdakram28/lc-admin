{
    "username": "wo-yao-qi-fei-h",
    "submission": "class Solution {\npublic:\n    int N;\n    vector<int>tr;\n    void buildTree(int root,int l,int r,vector<int>& nums){\n        if(l == r){\n            if(l!=1 && l!=N){\n                if(nums[l-1] > nums[l] && nums[l-1] > nums[l-2])\n                    tr[root] = 1;\n            }\n            return;\n        }\n        int mid = (l+r)/2;\n        buildTree(root*2,l,mid,nums);\n        buildTree(root*2+1,mid+1,r,nums);\n\n        tr[root] = tr[root*2] + tr[root*2+1];\n    }\n    void update(int root,int l,int r,vector<int>& nums,int idx,int val){\n        if(l==r){\n            nums[idx - 1] = val;\n            tr[root] = 0;\n            if(l!=1 && l!=N){\n                if(nums[l-1] > nums[l] && nums[l-1] > nums[l-2])\n                    tr[root] = 1;\n            }\n            return;\n        }\n        int mid = (l+r)/2;\n        if(idx<=mid)\n            update(root*2,l,mid,nums,idx,val);\n        else\n            update(root*2+1,mid+1,r,nums,idx,val);\n        tr[root] = tr[root*2] + tr[root*2+1];    \n    }\n    int query(int root,int l,int r,int L,int R){\n        if(L<=l && r<=R)\n            return tr[root];\n        \n        int mid = (l+r)/2;\n        int ans = 0;\n        if(L<=mid)\n            ans += query(root*2,l,mid,L,R);\n        if(R > mid)\n            ans += query(root*2+1,mid+1,r,L,R);\n        \n        return ans;\n\n    }\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        N = nums.size();\n        tr.resize(4 * N);\n        buildTree(1,1,N,nums);\n        vector<int>ans;\n        for(auto& q : queries){\n            if(q[0] == 1){\n                int l = q[1] + 1 + 1;\n                int r = q[2] + 1 - 1;\n                if(l>r)\n                    ans.emplace_back(0);\n                else\n                    ans.emplace_back(query(1,1,N,l,r));\n            }\n            else{\n                int idx = q[1]+1;\n                update(1,1,N,nums,q[1]+1,q[2]);\n                if(idx-1 >= 1)\n                    update(1,1,N,nums,idx - 1,nums[idx - 2]);\n                if(idx + 1 <= N)\n                    update(1,1,N,nums,idx+1,nums[idx]);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507801",
    "subm_id": "539783548"
}