{
    "username": "Ygao317",
    "submission": "class Solution {\npublic:\n    struct TrieNode {\n        TrieNode* childNode[26];\n        bool wordEnd;\n        int cost;\n        TrieNode()\n        {\n            wordEnd = false;\n            cost = INT_MAX;\n            for (int i = 0; i < 26; i++) childNode[i] = nullptr;\n        }\n    };\n\n    void insert_key(TrieNode* root, string& key, int cost)\n    {\n        TrieNode* currentNode = root;\n        reverse(key.begin(), key.end());\n        for (auto c : key) {\n            if (currentNode->childNode[c - 'a'] == nullptr) {\n                TrieNode* newNode = new TrieNode();\n                currentNode->childNode[c - 'a'] = newNode;\n            }\n            currentNode = currentNode->childNode[c - 'a'];\n        }\n        currentNode->wordEnd = true;\n        currentNode->cost = min(currentNode->cost, cost);\n    }\n\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        // construct Trie by insert\n        TrieNode* root = new TrieNode();\n        for (int i = 0; i < words.size(); ++i)\n            insert_key(root, words[i], costs[i]); \n        \n        int n = target.size();\n        vector<int> dp(n+1, INT_MAX); // dp[i] is min cost from [0, i)\n        dp[0] = 0;\n        \n        for (int i = 0; i < n; ++i){\n            TrieNode* currentNode = root; // look up from root\n            for (int j = i; j>=0; --j){\n                auto c = target[j];\n                if (currentNode->childNode[c - 'a'] == NULL) break;\n                currentNode = currentNode->childNode[c - 'a']; \n                if (currentNode->wordEnd){\n                    //cout << \"From \" << j << \" to \" << i << \" -> \" << currentNode->cost << \" + \" << dp[j] << endl;\n                    if (dp[j] < INT_MAX)\n                        dp[i+1] = min(dp[i+1], dp[j] + currentNode->cost);\n                }\n            }\n        }\n\n        return dp[n] == INT_MAX ? -1 : dp[n];\n    }\n};",
    "submit_ts": "1720323428",
    "subm_id": "1312375336"
}