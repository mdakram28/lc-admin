{
    "username": "ABHIJEET KUMAR",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        vector < vector < long long  >> vc ; \n        for ( int i = 0 ; i < board.size() ; i ++  ){\n            for ( int  j = 0 ; j < board[0].size() ; j ++ ){\n                vc.push_back ( {board[i][j] , i , j} );\n            }\n        }\n        sort ( vc.begin() , vc.end() , greater < vector < long long  >> ());\n        long long ans = -4*10000000000;\n        for ( int i = 0 ; i < min ( (int) 1000 , (int) vc.size() )  ; i ++ ){\n            vector < int > temp ; \n            for ( int j = i + 1 ; j < vc.size()  ; j ++ ){\n                if ( vc[i][1] != vc[j][1] && vc[i][2] != vc[j][2]){\n                    if ( temp.size() == 0 ){\n                        temp.push_back ( j);\n                    }\n                    else if ( vc[temp[0]][1] != vc[j][1] &&  vc[temp[0]][2] != vc[j][2] ){\n                        ans = max ( ans , vc[i][0] + vc[temp[0]][0] + vc[j][0]);\n                        break ; \n                    }\n                    else if ( temp.size() > 1 && vc[temp[1]][1] != vc[j][1] &&  vc[temp[1]][2] != vc[j][2] ){\n                        ans = max ( ans , vc[i][0] + vc[temp[1]][0] + vc[j][0]);\n                    }\n                    else {\n                        temp.push_back ( j );                        \n                    }\n                }\n            }   \n        }\n        return ans  ; \n    }\n};",
    "submit_ts": "1723909359",
    "subm_id": "1359189544"
}