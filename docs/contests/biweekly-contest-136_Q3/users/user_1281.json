{
    "username": "launda01",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int rows = grid.size();\n        int cols = grid[0].size();\n        \n        int totalFlips = 0;\n        \n        // Loop through the 2x2 sub-grids\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                vector<int> elements = {\n                    grid[i][j],\n                    grid[rows - i - 1][j],\n                    grid[i][cols - j - 1],\n                    grid[rows - i - 1][cols - j - 1]\n                };\n                \n                int onesCount = count(elements.begin(), elements.end(), 1);\n                \n                totalFlips += min(onesCount, 4 - onesCount);\n            }\n        }\n        \n        int possibleFlips = 0;\n        int onesCountInMiddle = 0;\n        \n        // Handle the middle row if rows is odd\n        if (rows % 2 != 0) {\n            for (int j = 0; j < cols / 2; ++j) {\n                if (grid[rows / 2][j] != grid[rows / 2][cols - j - 1]) {\n                    ++totalFlips;\n                    ++possibleFlips;\n                } else {\n                    if (grid[rows / 2][j] == 1) {\n                        ++onesCountInMiddle;\n                    }\n                }\n            }\n        }\n        \n        // Handle the middle column if cols is odd\n        if (cols % 2 != 0) {\n            for (int i = 0; i < rows / 2; ++i) {\n                if (grid[i][cols / 2] != grid[rows - i - 1][cols / 2]) {\n                    ++totalFlips;\n                    ++possibleFlips;\n                } else {\n                    if (grid[i][cols / 2] == 1) {\n                        ++onesCountInMiddle;\n                    }\n                }\n            }\n        }\n        \n        // Handle the central element if both rows and cols are odd\n        if (rows % 2 != 0 && cols % 2 != 0 && grid[rows / 2][cols / 2] == 1) {\n            ++totalFlips;\n        }\n        \n        if (possibleFlips == 0 && onesCountInMiddle % 2 != 0) {\n            totalFlips += 2;\n        }\n        \n        return totalFlips;\n    }\n};\n",
    "submit_ts": "1722699421",
    "subm_id": "1343211105"
}