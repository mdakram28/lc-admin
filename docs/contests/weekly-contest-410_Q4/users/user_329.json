{
    "username": "celerystalk",
    "submission": "CONST = pow(10, 9) + 7\n\nclass Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        if not nums:\n            return 0\n\n        max_val = max(nums)\n        dp = [ [0] * (max_val + 1) for _ in range(len(nums))]\n\n        presum = [0] * (max_val + 1)\n        for i in range(nums[0] + 1):\n            dp[0][i] = 1\n            presum[i] = i + 1\n        for i in range(nums[0] + 1, max_val + 1):\n            presum[i] = presum[i - 1]\n\n        # print(dp[0], presum)\n\n        for i in range(1, len(nums)):\n            # print(dp[i - 1], presum)\n            presum_next = [0] * (max_val + 1)\n            for v in range(nums[i] + 1):\n                # dp[i][v]\n\n                # v, nums[i] - v\n                # prev_1 <= v, prev_2 >= nums[i] - v\n                # prev_1 <= v, nums[i - 1] - prev1 >= nums[i] - v\n                # prev_1 <= v, prev1 <= nums[i - 1] - nums[i] + v\n                \n                max_prev_v = min(v, nums[i - 1] - nums[i] + v)\n                if max_prev_v >= 0:\n                    dp[i][v] = presum[max_prev_v] \n                # for prev_v in range(max_prev_v + 1):\n                    # dp[i][v] += dp[i - 1][prev_v]\n                    # dp[i][v] %= CONST\n                \n                presum_next[v] = (0 if v == 0 else presum_next[v - 1]) + dp[i][v]\n                presum_next[v] %= CONST\n\n            for v in range(nums[i] + 1, max_val + 1):\n                presum_next[v] = presum_next[v - 1]\n\n            presum = presum_next\n        \n        # print(dp[-1], presum)\n        res = 0\n        for v in dp[-1]:\n            res += v\n            res %= CONST\n        return res\n\n\n        ",
    "submit_ts": "1723346723",
    "subm_id": "1351583802"
}