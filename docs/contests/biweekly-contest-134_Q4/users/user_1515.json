{
    "username": "Ausaf_10",
    "submission": "using ll = long long int;\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        ll n = nums.size();\n        ll l = 0;\n        std::unordered_map<ll, ll> b;\n\n        for (ll i = 0; i < n; ++i) {\n            std::unordered_map<ll, ll> tb;\n\n            if (nums[i] == k) {\n                l += 1;\n            }\n            tb[nums[i]] = 1;\n\n            for (const auto& pair : b) {\n                int c = pair.first;\n                int g = pair.second;\n                int ch = c & nums[i];\n\n                if (ch == k) {\n                    l += g;\n                }\n                if (tb.find(ch) != tb.end()) {\n                    tb[ch] += g;\n                } else {\n                    tb[ch] = g;\n                }\n            }\n            b = tb;\n        }\n        return l;\n    }\n};",
    "submit_ts": "1720280151",
    "subm_id": "1311778751"
}