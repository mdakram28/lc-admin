{
    "username": "ivedantsharma",
    "submission": "class Solution {\n    public boolean canReachCorner(int X, int Y, int[][] circles) {\n        int n = circles.length;\n        List<List<Integer>> adj = new ArrayList<>(n + 4);\n        for (int i = 0; i < n + 4; i++) {\n            adj.add(new ArrayList<>());\n        }\n        for (int i = 0; i < n; i++) {\n            int x = circles[i][0];\n            int y = circles[i][1];\n            int r = circles[i][2];\n            if (x <= r) {\n                adj.get(n).add(i);\n                adj.get(i).add(n);\n            }\n            if (X - x <= r) {\n                adj.get(n + 2).add(i);\n                adj.get(i).add(n + 2);\n            }\n            if (y <= r) {\n                adj.get(n + 1).add(i);\n                adj.get(i).add(n + 1);\n            }\n            if (Y - y <= r) {\n                adj.get(n + 3).add(i);\n                adj.get(i).add(n + 3);\n            }\n            for (int j = i + 1; j < n; j++) {\n                int xj = circles[j][0];\n                int yj = circles[j][1];\n                int rj = circles[j][2];\n                double distance = Math.sqrt(Math.pow(x - xj, 2) + Math.pow(y - yj, 2));\n                int radiusSum = r + rj;\n                if (radiusSum >= distance) {\n                    adj.get(i).add(j);\n                    adj.get(j).add(i);\n                }\n            }\n        }\n        boolean isBlocked = helper(adj, n, n + 1, n + 2, n + 4);\n        isBlocked = Math.max(isBlocked ? 1 : 0, helper(adj, n + 3, n + 2, n + 1, n + 4) ? 1 : 0) == 1;\n        return !isBlocked;\n    }\n    private boolean helper(List<List<Integer>> adj, int node, int target1, int target2, int nodes) {\n        Queue<Integer> queue = new LinkedList<>();\n        boolean[] vis = new boolean[nodes];\n        queue.add(node);\n        vis[node] = true;\n        while (!queue.isEmpty()) {\n            int u = queue.poll();\n            for (int v : adj.get(u)) {\n                if (!vis[v]) {\n                    queue.add(v);\n                    vis[v] = true;\n                }\n            }\n        }\n        return vis[target1] || vis[target2];\n    }\n}\n",
    "submit_ts": "1722139171",
    "subm_id": "1335809930"
}