{
    "username": "heisenbugs",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCuts = [(horizontalCut[i], i, \"h\") for i in range(len(horizontalCut))]\n        verticalCuts = [(verticalCut[i], i, \"v\") for i in range(len(verticalCut))]\n        \n        cuts = horizontalCuts + verticalCuts\n        cuts.sort(reverse=True)\n        \n        vcuts = 0\n        hcuts = 0\n        \n        res = 0\n        \n        for cost, i, dir in cuts:\n            if dir == \"h\":\n                res += cost * (vcuts+1)\n                hcuts += 1\n            else:\n                res += cost * (hcuts+1)\n                vcuts += 1\n        \n        return res\n        \n        \n        # O (m+n) log (m+n)",
    "submit_ts": "1720925721",
    "subm_id": "1320264036"
}