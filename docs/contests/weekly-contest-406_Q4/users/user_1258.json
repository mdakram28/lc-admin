{
    "username": "nakulgupta2207",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> cuts;\n\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'H'});\n        }\n\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'V'});\n        }\n\n        sort(cuts.begin(), cuts.end(), [](const pair<int, char>& a, const pair<int, char>& b) {\n            return a.first > b.first;\n        });\n\n        int horizontal_pieces = 1;\n        int vertical_pieces = 1;\n        long long total_cost = 0;\n\n        for (const auto& cut : cuts) {\n            if (cut.second == 'H') {\n                total_cost += cut.first * vertical_pieces;\n                ++horizontal_pieces;\n            } else {\n                total_cost += cut.first * horizontal_pieces;\n                ++vertical_pieces;\n            }\n        }\n\n        return total_cost;\n    }\n};",
    "submit_ts": "1720926151",
    "subm_id": "1320277475"
}