{
    "username": "silenceneoneo",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        multiset<int> m1, m2, m3, m4;\n        int n = points.size(), ans = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            m1.insert(points[i][0] + points[i][1]);\n            m2.insert(-points[i][0] - points[i][1]);\n            m3.insert(points[i][0] - points[i][1]);\n            m4.insert(-points[i][0] + points[i][1]);\n        }\n        for (int i = 0; i < n; ++i) {\n            m1.erase(m1.find(points[i][0] + points[i][1]));\n            m2.erase(m2.find(-points[i][0] - points[i][1]));\n            m3.erase(m3.find(points[i][0] - points[i][1]));\n            m4.erase(m4.find(-points[i][0] + points[i][1]));\n            ans = min(ans, max({(*m1.rbegin()) + (*m2.rbegin()), (*m3.rbegin()) + (*m4.rbegin()), (*m4.rbegin()) + (*m3.rbegin()), (*m2.rbegin()) + (*m1.rbegin())}));\n            m1.insert(points[i][0] + points[i][1]);\n            m2.insert(-points[i][0] - points[i][1]);\n            m3.insert(points[i][0] - points[i][1]);\n            m4.insert(-points[i][0] + points[i][1]);\n        }\n        return ans;\n    }\n};"
}