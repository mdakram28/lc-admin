{
    "username": "devgoel901",
    "submission": "class Solution {\npublic:\n    static int numberOfAlternatingGroups(const vector<int>& arr, int k) {\n        int n = arr.size();\n        if (n < k) return 0;\n        \n        vector<int> P11(k);\n        vector<int> P22(k);\n        \n        for (int i = 0; i < k; ++i) {\n            P11[i] = i % 2;\n            P22[i] = 1 - P11[i];\n        }\n        \n        vector<int> dcolors(2 * n);\n        for (int i = 0; i < 2 * n; ++i) {\n            dcolors[i] = arr[i % n];\n        }\n        \n        int count = counting(dcolors, P11, n, k) + counting(dcolors, P22, n, k);\n        return count;\n    }\n    \nprivate:\n    static int counting(const vector<int>& str, const vector<int>& p, int olen, int k) {\n        int m = p.size();\n        vector<int> array = drawT(p);\n        \n        int i = 0, j = 0, count = 0;\n        while (i < str.size()) {\n            if (p[j] == str[i]) {\n                i++;\n                j++;\n                if (j == m) {\n                    if (i - j < olen) {\n                        count++;\n                    }\n                    j = array[j - 1];\n                }\n            } else {\n                if (j != 0) {\n                    j = array[j - 1];\n                } else {\n                    i++;\n                }\n            }\n        }\n        return count;\n    }\n    static vector<int> drawT(const vector<int>& p) {\n        int m = p.size();\n        vector<int> array(m);\n        int length = 0;\n        array[0] = 0;\n        int i = 1;\n        while (i < m) {\n            if (p[i] == p[length]) {\n                length++;\n                array[i] = length;\n                i++;\n            } else {\n                if (length != 0) {\n                    length = array[length - 1];\n                } else {\n                    array[i] = 0;\n                    i++;\n                }\n            }\n        }\n        return array;\n    }\n\n};",
    "submit_ts": "1720279806",
    "subm_id": "1311765849"
}