{
    "username": "harshitchachriya",
    "submission": "#define ll long long\n#define all(v) v.begin(), v.end()\n\nstring targ ; \nvector<ll>dp; \n\nstruct Node {\n     bool flag = false  ;\n     Node* links[26];\n     ll cost = -1 ; \n     bool containsKey(char ch) {\n        return (links[ch - 'a'] != NULL); \n     }\n     Node* get(char ch) {\n        return links[ch - 'a']; \n    }\n     void put(char ch, Node* node) {\n        links[ch - 'a'] = node;\n    }\n\n\n}; \n\nclass TrieDS {\npublic:\n     Node* root ; \n     TrieDS(){\n          root = new Node();\n     }\n     void insert(string s, ll cc) {\n          Node* node = root; \n          for(ll i=0; i<s.size(); i++){\n               if(!node->containsKey(s[i])) {\n                    node->put(s[i], new Node()) ; \n               }\n               node = node->get(s[i]) ;\n          }\n          node->flag = true; \n          if(node->cost == -1) node->cost = cc;\n          else node->cost = min(node->cost, cc) ; \n     }\n\n     ll match (ll i) {\n   \n          Node* node=root; \n          ll res = 1e17; \n          while(i>=1 && node!=NULL) {\n    \n               node = node->get(targ[i-1]);\n               i--;\n               if(node!=NULL && node->flag == true ) {\n                    res = min(res, node->cost + dp[i]) ; \n               }\n          }\n          return res ; \n          \n     }\n     \n}; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n     targ = target ; \n     TrieDS trie; \n     for(ll i=0; i<words.size(); i++) {\n          string s = words[i];\n          reverse(s.begin(), s.end());\n          trie.insert(s,costs[i]) ; \n     }\n     ll n= target.size(); \n\n     dp.clear();\n     dp.resize(n+1,1e16);\n     dp[0] = 0 ; \n\n \n\n     for(int i=1; i<=n; i++){\n          dp[i] = trie.match(i);\n     }\n\n     if(dp[n] == 1e17) return -1; \n\n     return dp[n]; \n    }\n};",
    "submit_ts": "1720323935",
    "subm_id": "1312387620"
}