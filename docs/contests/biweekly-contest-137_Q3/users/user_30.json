{
    "username": "\u4f50\u5929\u6cea\u5b50 \ud83c\udf3c",
    "submission": "#include <bits/stdc++.h>\n\n#ifdef MEGURINE\n#include \"algo/debug.h\"\n#include \"algo/debug_lc.h\"\n#else\n#define debug(...) 42\n#endif\n\nusing namespace std;\n\n#define itr(it) begin(it), end(it)\n\nint __fast_io__ = []() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    return 0;\n}();\n\ntemplate<typename T>\nbool chmax(T &a, T b) { return a < b ? (a = b, true) : false; }\n\ntemplate<typename T>\nbool chmin(T &a, T b) { return a > b ? (a = b, true) : false; }\n\nusing i64 = int64_t;\nconstexpr i64 inf = 1e18;\n\ni64 help(vector<vector<int>> &g) {\n    int n = int(g.size()), m = int(g[0].size());\n    vector<vector<i64>> f1(n, vector<i64>(m, -inf)), f2 = f1, f3 = f1;\n    for (int i = n - 1; i >= 0; --i) {\n        for (int j = m - 1; j >= 0; --j) {\n            f3[i][j] = g[i][j];\n            if (i + 1 < n) chmax(f3[i][j], f3[i + 1][j]);\n            if (j + 1 < m) chmax(f3[i][j], f3[i][j + 1]);\n        }\n    }\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < m; ++j) {\n            f1[i][j] = g[i][j];\n            if (i) chmax(f1[i][j], f1[i - 1][j]);\n            if (j) chmax(f1[i][j], f1[i][j - 1]);\n        }\n    }\n    vector<int> col = g[0];\n    i64 ret = -inf;\n    for (int i = 1; i + 1 < n; ++i) {\n        int pre = g[i][0];\n        for (int j = 1; j + 1 < m; ++j) {\n            f2[i][j] = max(f1[i - 1][j - 1] + g[i][j], i64(col[j] + pre));\n            chmax(pre, g[i][j]);\n            chmax(col[j], g[i][j]);\n            chmax(f2[i][j], f2[i - 1][j]);\n            chmax(f2[i][j], f2[i][j - 1]);\n            chmax(ret, f2[i][j] + f3[i + 1][j + 1]);\n        }\n    }\n    debug(f2);\n    return ret;\n}\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        i64 ans = help(board);\n        for (auto &it: board) ranges::reverse(it);\n        chmax(ans, help(board));\n        ranges::reverse(board);\n        chmax(ans, help(board));\n        for (auto &it: board) ranges::reverse(it);\n        chmax(ans, help(board));\n        return ans;\n    }\n};\n\n#ifdef MEGURINE\n\nint main() {\n    freopen(\"../input.txt\", \"r\", stdin);\n    freopen(\"../output.txt\", \"w\", stdout);\n    clock_t start = clock();\n    int T;\n    cin >> T;\n    getchar();\n    while (T--) {\n        Solution sol;\n        test<vector<vector<int>>>(sol, &Solution::maximumValueSum);\n    }\n\n    clock_t end = clock();\n    cout << \"\\nRunning Time: \" << (double) (end - start) / CLOCKS_PER_SEC * 1000 << \"ms\" << endl;\n    return 0;\n}\n\n#endif\n",
    "submit_ts": "1723906451",
    "subm_id": "556318526"
}