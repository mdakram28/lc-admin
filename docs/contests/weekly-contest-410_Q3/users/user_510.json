{
    "username": "Aditya_Trivedi1",
    "submission": "class Solution {\n    private static int mod=1_000_000_000+7;\n    public int countOfPairs(int[] nums) {\n        int n=nums.length;\n        int[][] dp=new int[n][51];\n        int[][] ft=new int[n][52];\n        for (int z=0; z<=nums[n-1]; z++) {\n            dp[n-1][z]=1;\n            update(ft, n-1, z, 1);\n        }\n        for (int z=n-2; z>=0; z--) {\n            for (int y=0; y<=nums[z]; y++) {\n                int a1=y, a2=nums[z]-y;\n                dp[z][y]=range(ft, z+1, Math.max(a1, nums[z+1]-a2), nums[z+1]);\n                update(ft, z, y, dp[z][y]);\n            }\n        }\n        int answer=range(ft, 0, 0, nums[0]);\n        return answer;\n    }\n    private void update(int[][] ft, int row, int k, int val) {\n        int[] a=ft[row];\n        k++;\n        while (k<=51) {\n            a[k]=(a[k]+val)%mod;\n            k+=(k&(-k));\n        }\n    }\n    private int range(int[][] ft, int row, int l, int r) {\n        if (l>r) {\n            return 0;\n        }\n        int answer=(mod+(sum(ft, row, r)%mod)-(sum(ft, row, l-1)%mod))%mod;\n        return answer;\n    }\n    private static int sum(int[][] ft, int row, int k) {\n        int[] a=ft[row];\n        k++;\n        int sum=0;\n        while (k>0) {\n            sum=(sum+a[k])%mod;\n            k-=(k&(-k));\n        }\n        return sum;\n    }\n}",
    "submit_ts": "1723347772",
    "subm_id": "1351605217"
}