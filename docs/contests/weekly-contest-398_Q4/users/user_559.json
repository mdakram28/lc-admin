{
    "username": "berkeleyColin",
    "submission": "class Solution {\npublic:\n    unordered_map<string,int> dp;\n    int recurse(int i, int k, bool jumpedDownPrev, int jump){\n        //cout<<i<<endl;\n        string key=to_string(i);\n        if(jumpedDownPrev)key+=\",yes,\";\n        else key+=\",no,\";\n        key+=to_string(jump);\n        if(dp.count(key)>0)return dp[key];\n        \n        int ret=0;\n        if(i==k)ret++;\n        if(!jumpedDownPrev&&i>0){\n            ret+=recurse(i-1,k,true,jump);\n        }\n        if(i+(1<<jump)-k<=4)ret+=recurse(i+(1<<jump),k,false,jump+1);\n        dp[key]=ret;\n        return ret;\n        \n    }\n    int waysToReachStair(int k) {\n        int ret=recurse(1,k,false,0);\n        return ret;\n    }\n};",
    "submit_ts": 1716088639.0
}