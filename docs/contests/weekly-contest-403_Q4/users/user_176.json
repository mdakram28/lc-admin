{
    "username": "mipha-2022",
    "submission": "class Solution:\n    def minimumSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n\n        matrix_pre_sum = [[ 0 for _ in range(m+1) ] for _ in range(n+1) ]\n\n        for i in range(1,n+1):\n            tmp = 0\n            for j in range(1,m+1):\n                tmp += grid[i-1][j-1]\n                matrix_pre_sum[i][j] = matrix_pre_sum[i-1][j] + tmp\n        \n\n        def sumRegion(row1: int, col1: int, row2: int, col2: int) -> int:\n            return matrix_pre_sum[row2+1][col2+1] - matrix_pre_sum[row2+1][col1] - matrix_pre_sum[row1][col2+1] + matrix_pre_sum[row1][col1]\n        \n\n\n\n        # \u533a\u57df\u5185\u627et\u4e2a\u77e9\u5f62\u7684\u6700\u5c0f\u9762\u79ef\n        # C(n*m,2) * t = 1e5\n        # \u5de6\u4e0a\uff0c\u53f3\u4e0b\n        @cache\n        def dfs(a,b,x,y,t):\n            # \u7f29\u56fe\n            # \u4e0a\n            while a < x and not sumRegion(a,b,a,y):\n                a += 1\n            \n            # \u4e0b\n            while x > a and not sumRegion(x,b,x,y):\n                x -= 1\n            \n            # \u5de6\n            while b < y and not sumRegion(a,b,x,b):\n                b += 1\n\n            # \u53f3\n            while y > b and not sumRegion(a,y,x,y):\n                y -= 1\n            \n            # \u53ea\u6709\u4e00\u4e2a\u77e9\u5f62\n            if t == 1:\n                return (x-a+1) * (y-b+1)\n            \n\n            # \u4e0a\u4e0b\u5206\u5272\u7ebf * 30 1e7\n            res = int(1e9)\n            for i in range(a,x):\n                if sumRegion(a,b,i,y) and sumRegion(i+1,b,x,y):\n                    for lt in range(1,t):\n                        rt = t - lt\n                        nres = dfs(a,b,i,y,lt) + dfs(i+1,b,x,y,rt)\n                        if nres < res:\n                            res = nres\n\n            # \u5de6\u53f3\u5206\u5272\u7ebf * 30 1e7\n            for j in range(b,y):\n                if sumRegion(a,b,x,j) and sumRegion(a,j+1,x,y):\n                    for lt in range(1,t):\n                        rt = t - lt\n                        nres = dfs(a,b,x,j,lt) + dfs(a,j+1,x,y,rt)\n                        if nres < res:\n                            res = nres\n            # print(a,b,x,y,res)\n            return res\n        \n        res = dfs(0,0,n-1,m-1,3)\n        dfs.cache_clear()\n\n        return res\n",
    "submit_ts": "1719113063",
    "subm_id": "541395633"
}