{
    "username": "brightness77",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        int n = points.length;\n        \n        List<int[]> sumList = new ArrayList<>();\n        List<int[]> diffList = new ArrayList<>();\n        \n        for(int i = 0; i < n; ++i){\n            sumList.add(new int[]{points[i][0] + points[i][1], i});\n            diffList.add(new int[]{points[i][0] - points[i][1], i});\n        }\n        \n        Collections.sort(sumList, (a, b) -> Integer.compare(a[0], b[0]));\n        Collections.sort(diffList, (a, b) -> Integer.compare(a[0], b[0]));\n        \n        int result = Integer.MAX_VALUE;\n        \n        for(int i = 0; i < n; ++i){\n            int[] curMaxSum = sumList.get(n - 1)[1] == i ? sumList.get(n - 2) : sumList.get(n - 1);\n            int[] curMinSum = sumList.get(0)[1] == i ? sumList.get(1) : sumList.get(0);\n            \n            int[] curMaxDiff = diffList.get(n - 1)[1] == i ? diffList.get(n - 2) : diffList.get(n - 1);\n            int[] curMinDiff = diffList.get(0)[1] == i ? diffList.get(1) : diffList.get(0);\n            \n            int curRes = Math.max(curMaxSum[0] - curMinSum[0], curMaxDiff[0] - curMinDiff[0]);\n            // System.out.println(i + \":\" + curMaxSum[0] + \"/\" + curMinSum[0] + \", \" + curMaxDiff[0] + \"/\" + curMinDiff[0]);\n            \n            result = Math.min(result, curRes);\n        }\n        \n        return result;\n        \n    }\n    \n}"
}