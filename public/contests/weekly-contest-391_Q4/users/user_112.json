{
    "username": "lixiang-vn",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 50 + 10;\nconst ll inf = 1LL << 29;\nconst int mod = 1e9 + 7;\n\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        map<int, int> x, y;\n\t\tfor(auto cur : p){\n\t\t\tx[cur[0] + cur[1]]++;\n\t\t\ty[cur[0] - cur[1]]++;\n\t\t}\n\t\tint ans = inf;\n\t\tfor(auto cur : p){\n\t\t\tx[cur[0] + cur[1]]--;\n\t\t\tif(!x[cur[0] + cur[1]]) x.erase(cur[0] + cur[1]);\n\t\t\ty[cur[0] - cur[1]]--;\n\t\t\tif(!y[cur[0] - cur[1]]) y.erase(cur[0] - cur[1]);\n\t\t\tans = min(ans, max((int)(prev(x.end()) -> first - x.begin() -> first), (int)(prev(y.end()) -> first - y.begin() -> first)));\n\t\t\tx[cur[0] + cur[1]]++;\n\t\t\ty[cur[0] - cur[1]]++;\n\t\t}\n\t\treturn ans;\n    }\n};"
}