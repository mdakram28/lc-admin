{
    "username": "martin0327",
    "submission": "\nusing ll = long long;\nusing vi = vector<ll>;\nusing vvi = vector<vi>;\nusing pii = pair<ll,ll>;\nusing vp = vector<pii>;\nusing ti3 = tuple<ll,ll,ll>;\nusing vs = vector<string>;\n\ntemplate<typename T>\nusing min_pq = priority_queue<T, vector<T>, greater<T>>;\ntemplate<typename T>\nusing max_pq = priority_queue<T>;\n\nclass Solution {\npublic:\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        \n        // }\n\n        ll n = e1.size() + 1;\n        ll m = e2.size() + 1;\n\n        auto f = [&] (vector<vector<int>>& e) {\n            ll n = e.size() + 1;\n            vvi adj(n);\n            vi deg(n);\n            for (auto v : e) {\n                adj[v[0]].push_back(v[1]);\n                adj[v[1]].push_back(v[0]);\n                deg[v[0]]++;\n                deg[v[1]]++;\n            }\n            queue<ll> q;\n            for (int i=0; i<n; i++) {\n                if (deg[i] == 1) q.push(i);\n            }\n            ll ret = -1;\n            while (q.size()) {\n                auto u = q.front();\n                q.pop();\n                ret = u;\n                for (auto v : adj[u]) {\n                    if (--deg[v] == 1) {\n                        q.push(v);\n                    }\n                }\n            }\n            return ret;\n        };\n        auto c1 = (e1.empty()) ? 0 : f(e1);\n        auto c2 = (e2.empty()) ? 0 : f(e2);\n        // vvi adj(n+m);\n        for (auto uv : e2) {\n            int u = uv[0], v = uv[1];\n            u += n, v += n;\n            e1.push_back({u,v});\n        }\n        vector<int> pp;\n        pp.push_back(c1);\n        pp.push_back(c2+n);\n        e1.push_back(pp);\n\n        auto c = f(e1);\n\n        // debug(e1);\n        n += m;\n\n        vvi adj(n);\n        for (auto uv : e1) {\n            ll u = uv[0], v = uv[1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        vi dep(n);\n        function<void(ll,ll,ll)> g = [&] (ll u, ll p, ll d) {\n            dep[u] = d;\n            for (auto v : adj[u]) {\n                if (v == p) continue;\n                g(v,u,d+1);\n            }\n        };\n        g(0,-1,0);\n        ll mx = 0, root = -1;\n        for (int i=0; i<n; i++) {\n            if (dep[i] > mx) {\n                mx = dep[i];\n                root = i;\n            }\n        }\n        dep.assign(n,0);\n        g(root,-1,0);\n        ll ans = 0;\n        for (int i=0; i<n; i++) {\n            ans = max(ans, dep[i]);\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1719718261.0
}