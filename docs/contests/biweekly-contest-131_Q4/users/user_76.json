{
    "username": "SirTechnical",
    "submission": "\n\n\nconst int INF = 0x3f3f3f3f;\n\nstruct SegTree {\n    vector<int> t;\n    int n;\n\n    SegTree(int n) {\n        this->n = n;\n        t.assign(4*n, 0);\n    }\n\n    int getmax(int v, int tl, int tr, int l, int r) {\n        if (l > r) \n            return 0;\n        if (l == tl && r == tr) {\n            return t[v];\n        }\n        int tm = (tl + tr) / 2;\n        return max(getmax(v*2, tl, tm, l, min(r, tm)),\n                   getmax(v*2+1, tm+1, tr, max(l, tm+1), r));\n    }\n    \n    int getmax(int l, int r) {\n        return getmax(1, 0, n-1, l, r);\n    }\n\n    void update(int v, int tl, int tr, int pos, int new_val) {\n        if (tl == tr) {\n            t[v] = new_val;\n        } else {\n            int tm = (tl + tr) / 2;\n            if (pos <= tm)\n                update(v*2, tl, tm, pos, new_val);\n            else\n                update(v*2+1, tm+1, tr, pos, new_val);\n            t[v] = max(t[v*2], t[v*2+1]);\n        }\n    }\n    \n    void update(int pos, int new_val) {\n        update(1, 0, n-1, pos, new_val);\n    }\n};\n\nclass Solution {\n    \n\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        \n        set<int,greater<int>> s;\n        s.insert(0);\n        \n        int mx = 0;\n        for (int i = 0; i < queries.size(); ++i) {\n            mx = max(mx, queries[i][1]);\n        }\n        SegTree segtree(mx+10);\n        segtree.update(0, INF);\n        \n        vector<bool> ans;\n        for (int i = 0; i < queries.size(); ++i) {\n            if (queries[i][0] == 1) {\n                int x = queries[i][1];\n                int l = *s.lower_bound(x);\n                int vl = segtree.getmax(l,l);\n                segtree.update(l,x-l);\n                segtree.update(x,vl-(x-l));\n                s.insert(x);\n            } else {\n                int x = queries[i][1];\n                int sz = queries[i][2];\n                int l = *s.lower_bound(x);\n                int vl = segtree.getmax(l,l);\n                segtree.update(l,x-l);\n                int m = segtree.getmax(0,x-1);\n                ans.push_back(m>=sz);\n                segtree.update(l,vl);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716649923.0
}