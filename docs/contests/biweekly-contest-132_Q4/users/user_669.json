{
    "username": "prabhavagrawal7",
    "submission": "class Solution\n{\npublic:\n    int rec(int n, int k, vector<int> &nums, vector<vector<int>> &dp, vector<int> &next)\n    {\n        if (n == nums.size())\n            return 0;\n        int ans = 0;\n        if (next[n] != -1)\n            ans = max(ans, 1 + rec(next[n], k, nums, dp, next));\n        if (k > 0)\n            ans = max(ans, 1 + rec(n + 1, k - 1, nums, dp, next));\n        ans = max(ans, 1 + rec(nums.size(), k, nums, dp, next));\n        return dp[n][k] = ans;\n    }\n\n    int maximumLength(vector<int> &nums, int k)\n    {\n        int n = nums.size();\n        map<int, int> last;\n        vector<int> next(n, -1);\n        for (int i = n - 1; i >= 0; i--)\n        {\n            if (last.count(nums[i]))\n                next[i] = last[nums[i]];\n            last[nums[i]] = i;\n        }\n        vector<vector<int>> dp(n, vector<int>(k + 1, -1));\n        vector<vector<int>> prefix(n, vector<int>(k + 1, -1));\n\n        for (int i = n - 1; i >= 0; i--)\n        {\n            for (int j = 0; j <= k; j++)\n            {\n                int ans = 1;\n                if (next[i] != -1)\n                    ans = max(ans, 1 + dp[next[i]][j]);\n                if (j > 0 && i + 1 < n)\n                {\n                    ans = max(ans, 1 + prefix[i + 1][j - 1]);\n                }\n                dp[i][j] = ans;\n                prefix[i][j] = ans;\n                if (i + 1 < n)\n                    prefix[i][j] = max(ans, prefix[i + 1][j]);\n            }\n        }\n        return prefix[0][k];\n    }\n};",
    "submit_ts": "1717861246",
    "subm_id": "1281784638"
}