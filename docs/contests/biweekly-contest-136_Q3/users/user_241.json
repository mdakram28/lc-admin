{
    "username": "ram-9",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& g) {\n        int n = g.size();\n        int m = g[0].size();\n        vector<pair<int, int>> p;\n        for (int i = 0; i < n / 2 + n % 2; i++) {\n            for (int j = 0; j < m / 2 + m % 2; j++) {\n                int ti = n - i - 1;\n                int tj = m - j - 1;\n                int c1 = 0, c2 = 0;\n                if (g[i][j] == 1) c1++;\n                else c2++;\n                if (ti != i) {\n                    if (g[ti][j] == 1) c1++;\n                    else c2++;\n                }\n                if (tj != j) {\n                    if (g[i][tj] == 1) c1++;\n                    else c2++;\n                    if (ti != i) {\n                        if (g[ti][tj] == 1) c1++;\n                        else c2++;\n                    }\n                }\n                p.emplace_back(c1, c2);\n            }\n        }\n        int ans = 0;\n        vector<int> c(4);\n        int res = 0;\n        for (auto [x, y] : p) {\n            // cout << x << \" \" << y << \"\\n\";\n            if (x + y == 4) {\n                ans += min(x, y);\n            } else if (x + y == 1){\n                ans += x;\n            } else {\n                c[x]++;\n            }\n        }\n        int l = 0;\n        ans += c[1];\n        if (c[2] % 2 == 1 && c[1] == 0) ans += 2;\n        // cout << \"_______\\n\";\n        return ans;\n    }\n};",
    "submit_ts": "1722697295",
    "subm_id": "552265408"
}