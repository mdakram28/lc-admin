{
    "username": "yumichael",
    "submission": "def get_sign(num):\n    if num > 0:\n        return 1\n    elif num < 0:\n        return -1\n    else:\n        return 0\nclass Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        state = [x - y for x, y in zip(nums, target)]\n        print(state)\n        new_state = []\n        prev = None\n        for x in state:\n            if x != prev:\n                new_state.append(x)\n                prev = x\n        state = new_state\n        print(state)\n        n = len(state)\n        answer = 0\n        # for i in range(n):\n        #     sign = get_sign(state[i])\n        #     dominates_left = i == 0 or sign * state[i] > sign * state[i - 1]\n        #     dominates_right = i == n - 1 or sign * state[i] > sign * state[i + 1]\n        #     if dominates_left and dominates_right:\n        #         answer += sign * state[i]\n        prev_sign = 0\n        prev = 0\n        for x in state:\n            sign = get_sign(x)\n            if sign * x > sign * prev:\n                answer += sign * x - max(sign * prev, 0)\n            prev = x\n        return answer",
    "submit_ts": "1721533961",
    "subm_id": "1328020481"
}