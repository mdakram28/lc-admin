{
    "username": "SupervisorMayHap",
    "submission": "from math import comb\n\nclass Solution:\n\n\n    def countOfPairs(self, nums: List[int]) -> int:\n        def modinv(a, m):\n            result = 1\n            exp = m - 2\n            while exp > 0:\n                if exp % 2 == 1:\n                    result = (result * a) % m\n                a = (a * a) % m\n                exp //= 2\n            return result\n\n        def comb(n, k, mod):\n            if k > n:\n                return 0\n            factorial_n = 1\n            for i in range(2, n + 1):\n                factorial_n = (factorial_n * i) % mod\n            \n            factorial_k = 1\n            for i in range(2, k + 1):\n                factorial_k = (factorial_k * i) % mod\n            \n            factorial_n_k = 1\n            for i in range(2, n - k + 1):\n                factorial_n_k = (factorial_n_k * i) % mod\n            \n            inv_factorial_k = modinv(factorial_k, mod)\n            inv_factorial_n_k = modinv(factorial_n_k, mod)\n            \n            return (factorial_n * inv_factorial_k % mod) * inv_factorial_n_k % mod\n\n        MOD = 10 ** 9 + 7\n        if len(nums) == 1:\n            return nums[0] + 1\n\n        n = len(nums)\n        diff_a = [0]\n        for i in range(1, n):\n            diff_a.append(max(0, nums[i] - nums[i - 1]) + diff_a[-1])\n        nums = nums[::-1]\n        diff_b = [0]\n        for i in range(1, n):\n            diff_b.append(max(0, nums[i] - nums[i - 1]) + diff_b[-1])\n        diff_b = diff_b[::-1]\n        nums = nums[::-1]\n        remain = []\n        for i in range(n):\n            remain.append(nums[i] - diff_a[i] - diff_b[i])\n        print(remain)\n        v = remain[0]\n        if v < 0:\n            return 0\n        # print()\n# 1 +\u3002\u3002\u3002\u3002+6\n# 5 5 -21\n# 5 5 5  -56  \u3002\u3002 42 + \n# 5 5 5 5 -126\n        return comb(n + v, v, 1000000007)",
    "submit_ts": "1723346497",
    "subm_id": "1351578883"
}