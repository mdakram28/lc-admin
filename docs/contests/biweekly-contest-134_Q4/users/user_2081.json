{
    "username": "P_2003_W",
    "submission": "#define ll long long\n\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int tp_k) {\n        ll k=tp_k;\n        long long n=nums.size();\n        long long ans=0;\n        \n        vector<vector<long long>> prefix(n+1,vector<ll>(31,0));\n        \n        for(ll i=1;i<=n;i++){\n            \n            ll ele=nums[i-1];\n            for(ll j=0;j<31;j++){\n            \n                prefix[i][j]=prefix[i-1][j] +((ele>>j)&1); \n                \n            }\n            \n        }\n        \n        \n        for(long long i=1;i<=n;i++){\n            \n            \n            long long low=i;\n            long long high=n;\n            long long last=-1;\n            while(low<=high){\n                \n                ll mid=low + (high-low)/2;\n                \n                bool k_ones=true;\n                \n                for(ll j=0;j<31;j++){\n                    \n                    ll ones=(prefix[mid][j]-prefix[i-1][j]);\n                    \n                    if( ((k>>j)&1) && ones<(mid-i+1)){\n                        k_ones=false;\n                        break;\n                    }\n                    \n                }\n                \n                \n                if(k_ones){\n                    last=mid;\n                    low=mid+1;\n                }\n                else{\n                    high=mid-1;\n                }\n                \n                \n            }\n            \n            \n            ll start=-1;\n            \n            low=i;\n            high=n;\n            \n            while(low<=high){\n                \n                \n                ll mid=low + (high-low)/2;\n                \n                bool k_zeros=true;\n                \n                for(ll j=0;j<31;j++){\n                    \n                    ll ones=(prefix[mid][j]-prefix[i-1][j]);\n                    \n                    if( ((k>>j)&1)==0 && ones==(mid-i+1)){\n                        k_zeros=false;\n                        break;\n                    }\n                    \n                }\n                \n                \n                if(k_zeros){\n                    start=mid;\n                    high=mid-1; \n                }\n                else{\n                    low=mid+1;\n                   \n                }\n                \n                \n            }\n            \n            \n            \n            if(last!=-1 && start!=-1){\n                // cout<<i<<\"  \"<<start<<\" \"<<last<<endl;\n                ans+=max(0LL,(last-start+1));\n            }\n            \n            \n            \n        }\n        \n        \n        \n        \n        return ans;\n        \n    }\n};",
    "submit_ts": "1720277110",
    "subm_id": "1311648153"
}