{
    "username": "manmapi",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        # number of row\n        m = len(grid)\n        # number of col\n        n = len(grid[0])\n        result = 0\n        # Care of center cell if n odd and m odd\n        if m % 2 and n % 2:\n            if grid[m//2][n//2] == 1:\n                result += 1\n        # Care about group of 4 symetric cells\n        for i in range(m//2):\n            for j in range(n//2):\n                sum_array = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j] + grid[m - 1 - i][j]\n                result += min(sum_array, 4 - sum_array)\n        # Care about col and row in center\n        centers = []\n        center_change = 0\n        center_sum = 0\n        if m % 2 == 1:\n            center_row = grid[m//2]\n            diff = 0\n            for i in range(n//2):\n                diff += abs(center_row[i] - center_row[n - 1 - i])\n                center_sum += center_row[i] + center_row[n - 1 - i]\n            center_change += diff\n        if n % 2 == 1:\n            center_index = n // 2 \n            diff = 0\n            for i in range(m//2):\n                diff +=  abs(grid[i][center_index] - grid[m - 1 -i][center_index])\n                center_sum += grid[i][center_index] + grid[m - 1 -i][center_index]\n            center_change += diff\n        result += center_change\n        if center_sum % 4 != 0 and center_change == 0:\n            result += 2\n        return result",
    "submit_ts": "1722698757",
    "subm_id": "1343190824"
}