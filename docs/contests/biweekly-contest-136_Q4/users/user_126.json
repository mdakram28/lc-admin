{
    "username": "yangxm",
    "submission": "constexpr int MAX = 100010;\n\nint dp[MAX][2];\nvector<int> adj[MAX];\n\nvoid DFS1(int x, int p) {\n  dp[x][0] = 0;\n  dp[x][1] = -1;\n  for (int y : adj[x]) {\n    if (y == p) {\n      continue;\n    }\n    DFS1(y, x);\n    int d = (y & 1) ? 1 : 2;\n    if (dp[x][0] < dp[y][0] + d) {\n      dp[x][1] = dp[x][0];\n      dp[x][0] = dp[y][0] + d;\n    } else {\n      dp[x][1] = max(dp[x][1], dp[y][0] + d);\n    }\n  }\n} \n\nvoid DFS2(int x, int p, int pre, vector<int>& ret) {\n  ret[x] = max(dp[x][0], pre);\n  for (int y : adj[x]) {\n    if (y == p) {\n      continue;\n    }\n    int dx = (x & 1) ? 1 : 2, dy = (y & 1) ? 1 : 2;\n    int cur = dp[x][0] == dp[y][0] + dy ? dp[x][1] : dp[x][0];\n    DFS2(y, x, max(pre, cur) + dx, ret);\n  }\n}\n\nclass Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n      int n = edges.size() + 1;\n      for (int i = 0; i < n; ++i) {\n        vector<int>().swap(adj[i]);\n      }\n      for (const auto& e : edges) {\n        int u = e[0], v = e[1];\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n      }\n      vector<int> ret(n);\n      DFS1(0, -1);\n      DFS2(0, -1, 0, ret);\n      return ret;\n    }\n};",
    "submit_ts": "1722698904",
    "subm_id": "1343195520"
}