{
    "username": "Hamza Hasan",
    "submission": "typedef long long int ll;\nclass Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qq) {\n        int n = s.size();\n        vector<int>rt(n);\n        int o=0,z=0;\n        int r=-1;\n        for(int i=0;i<n;i++){\n            while(r<n-1){\n                if(s[r+1] == '0')o++;\n                else z++;\n                if(o<=k || z<=k)r++;\n                else{\n                    o -= s[r+1]=='0';\n                    z -= s[r+1]=='1';\n                    break;\n                }\n            }rt[i]=r;\n            o -= s[i] == '0';\n            z -= s[i] == '1';\n        }ll sum[n+1];\n        sum[0]=0;\n        for(int i=1;i<=n;i++){\n            sum[i] = sum[i-1]+rt[i-1];\n        }\n        vector<ll> ans;\n        // rt[i] - i + 1\n        for(auto aa : qq){\n            int l = aa[0], r=aa[1];\n            int lo=l, hi=r;\n            while(lo<hi){\n                int md=(lo+hi)/2;\n                if(rt[md] > r)hi=md;\n                else lo=md+1;\n            }\n            ll x=0;\n            x+=1LL * (r-lo+1) * r;\n            x+=sum[lo] - sum[l];\n            x-=1LL * (r - l + 1) * (r + l) / 2;\n            x+=r-l+1;\n            ans.push_back(x);\n        }return ans;\n    }\n};",
    "submit_ts": "1723949490",
    "subm_id": "1359720908"
}