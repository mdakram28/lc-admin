{
    "username": "LarryNY",
    "submission": "class Solution:\n    def minimumCost(self, R: int, C: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        hq = collections.deque(horizontalCut)\n        vq = collections.deque(verticalCut)\n        \n        cost = 0\n        hc = 1\n        vc = 1\n        \n        while len(hq) > 0 and len(vq) > 0:\n            if hq[0] > vq[0]:\n                hc += 1\n                cost += hq[0] * vc\n                hq.popleft()\n            else:\n                vc += 1\n                cost += vq[0] * hc\n                vq.popleft()\n            \n        while len(hq) > 0:\n            hc += 1\n            cost += hq[0] * vc\n            hq.popleft()\n        \n        while len(vq) > 0:\n            vc += 1\n            cost += vq[0] * hc\n            vq.popleft()\n            \n        return cost\n        ",
    "submit_ts": "1720925404",
    "subm_id": "1320253630"
}