{
    "username": "lastjoker99",
    "submission": "from sortedcontainers import SortedList\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n        marks = SortedList()\n        ans = []\n        size = 0\n        for x, y in queries:\n            i = marks.bisect_left(x)\n            if i == len(marks):\n                marks.add(x)\n                marks.add(y)\n                size += (y - x)\n                ans.append(n - 1 - size + len(marks)//2)\n            else:\n                if i & 1:\n                    i -= 1\n                if marks[i] <= x <= marks[i+1] and marks[i] <= y <= marks[i+1]:\n                    ans.append(ans[-1])\n                    continue\n                rm = []\n                while i < len(marks):\n                    if x <= marks[i] <= y and x <= marks[i+1] <= y:\n                        rm.append(marks[i])\n                        rm.append(marks[i+1])\n                        size -= (marks[i+1] - marks[i])\n                    elif marks[i] >= y:\n                        break\n                    i += 2\n                    \n                for v in rm:\n                    marks.discard(v)\n            \n                marks.add(x)\n                marks.add(y)\n                size += (y - x)\n                ans.append(n - 1 - size + len(marks)//2)\n\n\n        return ans",
    "submit_ts": "1722743175",
    "subm_id": "1343786105"
}