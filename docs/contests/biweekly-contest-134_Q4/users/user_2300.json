{
    "username": "socrates1232",
    "submission": "class Solution {\n    int[][] pf;\n    public int get(int l, int r) {\n        int ans = 0;\n        for(int i = 0; i <= 30; i ++) {\n            if(pf[i][r + 1] - pf[i][l] == r - l + 1) {\n                ans += 1 << i;\n            }\n        }\n        return ans;\n    }\n    public long countSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        pf = new int[31][n + 1];\n        for(int i = 0; i < n; i ++) {\n            for(int j = 0; j <= 30; j ++) {\n                pf[j][i + 1] = pf[j][i];\n                if((nums[i] & (1 << j)) > 0) {\n                    pf[j][i + 1] ++;\n                }\n            }\n        }\n        long ans = 0;\n        for(int i = 0; i < n; i ++) {\n            int l = i, h = n;\n            while(l < h) {\n                int mid = (l + h) >> 1;\n                if((get(i, mid) & k) == k) {\n                    l = mid + 1;\n                } else {\n                    h = mid;\n                }\n            }\n            if(l == 0) {\n                continue;\n            }\n            int rb = l;\n            l = i;\n            h = n;\n            while(l < h) {\n                int mid = (l + h) >> 1;\n                int cur = get(i, mid);\n                if((cur & k) == k && cur != k) {\n                    l = mid + 1;\n                } else {\n                    h = mid;\n                }\n            }\n            //System.out.println(i + \" \" + l + \" \" + rb);\n            ans += rb - l;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720280018",
    "subm_id": "544570202"
}