{
    "username": "pein531",
    "submission": "struct cmp {\n    bool operator()(const pair<int, int>& a, const pair<int, int>& b) const {\n        if(a.first != b.first) return a.first < b.first;\n        return a.second > b.second;\n    }\n};\n\nclass Solution {\npublic:\n    int cal(const pair<int,int>& x){\n        return x.second - x.first - 1;\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        set<pair<int, int>, cmp> intervals;\n        int res = n - 1;\n        for(auto query: queries){\n            int u = query[0], v = query[1];\n            set<pair<int,int>, cmp>::iterator it = intervals.lower_bound({u, v});\n            bool flag = true;\n            while(it != intervals.end() && it->first >= u && it->second <= v){\n                set<pair<int, int>, cmp>::iterator wd = it;\n                it++;\n                res += cal(*wd);\n                intervals.erase(wd);\n                flag = 1;\n            }\n            if(flag) {\n                if(it != intervals.end()){\n                    if(it->first <= u && it->second >= v) {\n                        flag = false;\n                    }\n                }\n                if(it != intervals.begin()){\n                    it--;\n                    if(it->first <= u && it->second >= v) {\n                        flag = false;\n                    }\n                }\n            }\n            if(flag) {\n                res -= cal({u, v}),\n                intervals.insert({u, v});\n            }\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722743679",
    "subm_id": "1343797253"
}