{
    "username": "rangan2k19",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        map<int,int>mp;\n        int n=nums.size();\n        for(int i=0;i<nums.size()/2;i++)\n        {\n            mp[abs(nums[i]-nums[n-i-1])]++;\n        }\n        int max_count=0;\n        for(auto x:mp)\n        {\n            max_count=max(max_count,x.second);\n        }\n        vector<int>a;\n        for(auto x:mp)\n        {\n            if(x.second==max_count || x.second>=(max_count-1)/2)\n            {\n                a.push_back(x.first);\n            }\n        }\n        for(int i=0;i<nums.size()/2;i++)\n        {\n            if(nums[i]>nums[n-i-1])\n            {\n                swap(nums[i],nums[n-i-1]);\n            }\n        }\n        int res=INT_MAX;\n        for (auto diff:a){\n            int cnt=0;\n            for(int i=0;i<nums.size()/2;i++)\n            {\n                if((nums[n-i-1]-nums[i]) !=diff)\n                {\n                    if((diff+nums[i]<=k)||(nums[n-i-1]-diff)<=k and nums[n-i-1]-diff>=0)\n                        cnt++;\n                    else cnt+=2;\n                }\n            }\n            if(k==16){\n                cout<<diff<<\" \"<<cnt<<\"\\n\";\n            }\n            res=min(res,cnt);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721489206",
    "subm_id": "1327446257"
}