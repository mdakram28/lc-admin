{
    "username": "aabhas_gupta",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        int hsize = horizontalCut.size();\n        int vsize = verticalCut.size();\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        int i = 0, j = 0, hcount = 1, vcount = 1;\n        long long int cost = 0;\n        while (i < hsize && j < vsize) {\n            if(horizontalCut[i] < verticalCut[j]) {\n                cost += verticalCut[j] * hcount;\n                vcount++;\n                j++;\n            } else {\n                cost += horizontalCut[i] * vcount;\n                hcount++;\n                i++;\n            } \n        }\n        while (j < vsize) {\n            cost += verticalCut[j] * hcount;\n            j++;\n        }\n        while (i < hsize) {\n            cost += horizontalCut[i] * vcount;\n            i++;\n        }\n        return cost; \n    }\n};",
    "submit_ts": "1720925850",
    "subm_id": "1320268224"
}