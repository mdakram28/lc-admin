{
    "username": "meng-hsuan",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        MODULI = 10 ** 9 + 7\n        requirements.sort()\n        nr = len(requirements)\n        if any(requirements[i][1] > requirements[i + 1][1] for i in range(nr - 1)) or any(requirements[i][1] > (requirements[i][0] + 1) * requirements[i][0] >> 1 for i in range(nr)):\n            return 0\n        \n        reqs = [None] * n\n        for end, cnt in requirements:\n            reqs[end] = cnt\n        MAX_CNT = reqs[-1]\n        \n        freq = [1]\n        #print(0, freq)\n        for i in range(1, n):\n            nf = len(freq)\n            \n            cum_freq = [0]\n            for j in freq:\n                cum_freq.append((cum_freq[-1] + j) % MODULI)\n            \n            freq = []\n            for j in range(1, nf + i + 1):\n                freq.append((cum_freq[min(j, nf)] - cum_freq[max(j - (i + 1), 0)]) % MODULI)\n            freq = freq[:(MAX_CNT + 1)]\n            \n            if reqs[i] != None:\n                for j in range(len(freq)):\n                    if j != reqs[i]:\n                        freq[j] = 0\n            #print(i, freq)\n        \n        return freq[reqs[-1]]\n    ",
    "submit_ts": "1719068559",
    "subm_id": "1296769476"
}