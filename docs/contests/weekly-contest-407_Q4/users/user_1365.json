{
    "username": "neko643",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        /*\n            nums = [1,3,2], target = [2,1,4]\n            dif = [1, -2, 1, 1, 1, 1]\n            dif = [3, -5, 2, 4] => [3, -5, 4, -5]\n            dif = [3, 3, 0, 3, 3] => [3, 0, 3] => 3 + 3\n            [3, 1, 2, 1, 5] => [2, 0, 1, 0, 4] => \n            4 + 3 + 5 == 4 + 8\n            5 + 4 + 4 == 5 + 8\n            5 + 5 + 4 == 5 + 9\n        */   \n        int n = nums.size();\n        vector<int> dif(n);\n        for(int i = 0; i < n; i++) {\n            dif[i] = nums[i] - target[i];\n        }\n        \n        int l = 0;\n        bool pos = false;\n        vector<pair<int, int> > segments;\n        for(int i = 0; i < n; i++) {\n            // cout << dif[i] << \" \";\n            if(dif[i] == 0) {\n                if(l < i) {\n                    segments.push_back({l, i - 1});\n                }\n                l = i + 1;\n                continue;\n            }\n            if(dif[i] > 0 && !pos) {\n                if(l < i) {\n                    segments.push_back({l, i - 1});\n                }\n                dif[i] = abs(dif[i]);\n                l = i;\n                pos = true;\n                continue;\n            }\n            \n            if(dif[i] < 0 && pos) {\n                if(l < i) {\n                    segments.push_back({l, i - 1});\n                }\n                dif[i] = abs(dif[i]);\n                l = i;\n                pos = false;\n                continue;\n            }\n            dif[i] = abs(dif[i]);\n        }\n        // cout << \"\\n\";\n        if(l < n) {\n            segments.push_back({l, n - 1});\n        }\n        \n        \n        // localmax - prev_localmin\n        \n        auto islocalmin = [&] (int l, int r, int i) {\n            if(i == r) {\n                return true;\n            }\n            \n            if(i == l) {\n                return false;\n            }\n            \n            return dif[i] <= dif[i - 1] && dif[i] < dif[i + 1];\n        };\n        long long ans = 0;\n        for(auto seg : segments) {\n            int l = seg.first, r = seg.second;\n            // cout << l << \" \" << r << \"\\n\";\n            int local_max = 0, prev_localmin = 0;\n            for(int i = l; i <= r; i++) {\n                local_max = max(local_max, dif[i]);\n                if(islocalmin(l, r, i)) {\n                    // cout << i << \"is local min \" << local_max - prev_localmin << \" reward\\n\";\n                    ans += local_max - prev_localmin;\n                    prev_localmin = dif[i];\n                    local_max = 0;\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721532771",
    "subm_id": "1327993693"
}