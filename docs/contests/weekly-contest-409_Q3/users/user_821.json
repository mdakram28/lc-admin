{
    "username": "xmky2",
    "submission": "from sortedcontainers import SortedList , SortedSet\n\nclass Solution:\n    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:\n\n        \n        res = []\n\n        G = defaultdict(list)\n        \n        d = defaultdict(int)\n\n        for i in range(n-1):\n            #G[i].append(i+1)\n            d[i] = 1 #n - i - 1\n        \n        dd = n - 1\n        \n        #ss = set([i for i in range(n)])\n        \n        sl = SortedList([i for i in range(n)])\n        \n        def bsh(i):\n            l = 0\n            r = len(sl) -1\n            while l <= r:\n                mid = (l+r)//2\n                if sl[mid] == i:\n                    return mid\n                if sl[mid] < i:\n                    l = mid + 1\n                else:\n                    r = mid - 1\n            return -1\n        \n        for u,v in queries:\n            #G[u].append(v)\n            #vv = bfs()\n\n            #if v - u > d[u]:\n            #    d[u] = v - u \n            \n            #if u + 1 in ss:\n            #    for j in range(u+1, v):\n            #        ss.remove(j)\n            \n            #if binarySearch()\n            \n            lv = bsh(u)\n            hl = bsh(v)\n            #print(lv,hl)\n            if lv != -1 and hl != -1:\n                td = [sl[j] for j in range(lv+1,hl)]\n                #for t in range(lv+1,hl):\n                    #if j in sl:\n                    #sl.discard(sl[j])\n                for t in td:\n                    sl.discard(t)\n            #print(sl)\n            '''\n            cur = 0\n            c = 0\n            while cur < n-1:\n                cur = cur + d[cur]\n                c += 1\n            '''\n            res.append( len(sl) -1 )\n        \n        return res",
    "submit_ts": "1722742612",
    "subm_id": "1343773033"
}