{
    "username": "arya994",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        \n        vector<int> targets;\n        \n        map<int, vector<int>> diffMap;\n        int diff;\n\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++) {\n            int a = nums[i];\n            int b = nums[n - i - 1];\n            diff = abs(a - b);\n            int maxVal = max({a, b, k - a, k - b});\n            diffMap[diff].push_back(maxVal);\n            targets.push_back(maxVal);\n        }\n\n        \n        sort(targets.begin(), targets.end(),greater<int>());\n        sort(targets.begin(), targets.end());\n        \n        int minChanges = n;\n\n        for (auto entry : diffMap) {\n            diff = entry.first;\n            int lessThan = lower_bound(targets.begin(), targets.end(), diff) - targets.begin();\n            int changes = 0;\n\n            for (int x : entry.second) {\n                if (x < diff) {\n                    changes -= 2;\n                } else {\n                    changes -= 1;\n                }\n            }\n            changes+=lessThan * 2 + (n / 2 - lessThan);\n\n            minChanges = min(changes,minChanges);\n        }\n\n        return minChanges;\n    }\n};",
    "submit_ts": "1721489658",
    "subm_id": "1327459881"
}