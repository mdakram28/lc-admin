{
    "username": "EUqr2c2cjD8nuX5K",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        static constexpr int MAX_X = 5e4;\n        static constexpr int n = MAX_X;\n        \n        ///////////////////////\n        \n        vector<int> t((n + 1) * 2, 0);\n        auto update = [&](int index, int val) {\n            //cout << \"update index=\" << index << \" to \" << val << endl;\n            index += n + 1;\n            t[index] = val;\n            index >>= 1;\n            while (index) {\n                t[index] = max(t[index * 2], t[index * 2 + 1]);\n                index >>= 1;\n            }\n        };\n        auto query = [&](int a, int b) {\n            int max_val = 0;\n            a += n + 1, b += n + 1;\n            while (a <= b) {\n                if (a & 1) {\n                    max_val = max(max_val, t[a]);\n                    ++a;\n                    continue;\n                }\n                if (!(b & 1)) {\n                    max_val = max(max_val, t[b]);\n                    --b;\n                }\n                a >>= 1, b >>= 1;\n            }\n            return max_val;\n        };\n\n        ///////////////////////\n        \n        set<int> ats;\n        \n        // initial ones\n        ats.emplace(0);\n        ats.emplace(MAX_X);\n        \n        update(MAX_X, MAX_X);\n        \n        vector<bool> res;\n        for (auto& q : queries) {\n            if (q[0] == 1) {\n                ats.emplace(q[1]);\n                \n                auto it = ats.find(q[1]);\n                auto before = prev(it), after = next(it);  // These iterators must exist\n                \n                auto a = *before, b = *it, c = *after;\n                update(b, b - a);\n                update(c, c - b);\n                \n                continue;\n            }\n            \n            const auto x = q[1], sz = q[2];\n            auto before = prev(ats.lower_bound(x));\n            \n            //cout << x << \" \" << sz << \" \" << *before << \" : \" << query(0, *before) << endl;\n            \n            bool ok = query(0, *before) >= sz;\n            if (!ok) {\n                ok = x - *before >= sz;\n            }\n            res.push_back(ok);\n        }\n        return res;\n    }\n};",
    "submit_ts": "1716650743",
    "subm_id": "1267623423"
}