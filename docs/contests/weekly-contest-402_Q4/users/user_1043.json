{
    "username": "xiaoping3418",
    "submission": "int n;\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        n = nums.size();\n        vector<int> tree(4 * n);\n        \n        auto set = [&](auto self, int i, int a, int u = 1, int l = 0, int r = n - 1) -> void {\n            if (l == r) {\n                tree[u] = a;\n                return; \n            }\n            \n            int mid = l + (r - l) / 2;\n            \n            if (i <= mid) self(self, i, a, 2 * u, l, mid);\n            else self(self, i, a, 2 * u + 1, mid + 1, r); \n            \n            tree[u] = tree[2 * u] + tree[2 * u + 1];\n        };\n        \n        auto sum = [&](auto self, int start, int end, int u = 1, int l = 0, int r = n - 1) -> int {\n            if (l > end or r < start or start > end) return 0;\n            if (start <= l and r <= end) return tree[u]; \n            \n            int mid = l + (r - l) / 2; \n            return self(self, start, end, 2 * u, l, mid) + self(self, start, end, 2 * u + 1, mid + 1, r); \n        };\n        \n        for (int i = 1; i + 1 < n; ++i) {\n            if (nums[i - 1] >= nums[i] or nums[i] <= nums[i + 1]) continue;\n            cout << \" i: \" << i << endl;\n            set(set, i, 1);\n        }\n        \n        vector<int> ret;\n        \n        for (auto q: queries) {\n            if (q[0] == 2) {\n                int i = q[1], a = q[2];\n                \n                if (i > 1) {\n                    if (nums[i - 2] < nums[i - 1] and a < nums[i - 1]) set(set, i - 1, 1);\n                    else set(set, i - 1, 0);\n                }\n                \n                if (i + 2 < n) {\n                    if (nums[i + 2] < nums[i + 1] and a < nums[i + 1]) set(set, i + 1, 1);\n                    else set(set, i + 1, 0);\n                }\n                \n                if (i > 0 and i + 1 < n) {\n                    if (nums[i - 1] < a and a > nums[i + 1]) set(set, i, 1);\n                    else set(set, i, 0);\n                }\n                \n                nums[i] = a;\n                continue;\n            }\n            \n            int start = q[1] + 1, end = q[2] - 1;\n            int t = 0;\n            if (start <= end) t = sum(sum, start, end);\n            \n            ret.push_back(t);\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": 1718508778.0
}