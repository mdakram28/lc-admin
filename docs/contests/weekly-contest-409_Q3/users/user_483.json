{
    "username": "c337134154",
    "submission": "class Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<int> ans;\n        set<pair<int,int>> se;\n        for (int i = 0; i < n-1; ++i) {\n            se.insert({i,i+1});\n        }\n        int minDistance = n-1;\n        for (const auto& query : queries) {\n            int l = query[0];\n            int r = query[1];\n//            cout << \"l \" << l << \" r \" << r << \"\\n\";\n            auto it = se.lower_bound({l, 0});\n//            cout << \"it \" << it->first << \" \" << it->second << \"\\n\";\n            if(it!=se.end()){\n                if (it!=se.begin()){\n                    auto it2=it;\n                    it2--;\n//                    cout << \"it2 \" << it2->first << \" \" << it2->second << \"\\n\";\n                    if (it2->first<=l && it2->second>=r) {\n                        ans.push_back(minDistance);\n                        continue;\n                    }\n                }\n                if (it->first<=l && it->second>=r){\n                    ans.push_back(minDistance);\n                    continue;\n                }\n                int cnt=0;\n                while (it != se.end() && it->first>=l && it->second<=r){\n//                    cout << \"it \" << it->first << \" \" << it->second << \"\\n\";\n                    cnt+=1;\n                    se.erase(it);\n                    it=se.lower_bound({l, 0});\n                }\n                se.insert({l,r});\n                minDistance-=(cnt-1);\n//                cout << \"cnt \" << cnt << \" minDistance \" << minDistance << \"\\n\";\n            }\n            ans.push_back(minDistance);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722741974",
    "subm_id": "1343757966"
}