{
    "username": "qVUuOvFdPa",
    "submission": "vector<int> a;\nvoid build(int now,int l,int r,vector<int>&nums)\n{\n    if(l==r)\n    {\n        if(l!=1&&l!=nums.size())\n        {\n            a[now]=(nums[l-1]>nums[l-2]&&nums[l-1]>nums[l]);\n        }\n        else\n            a[now]=0;\n        return ;\n    }\n    int m=(l+r)/2;\n    build(now*2,l,m,nums);\n    build(now*2+1,m+1,r,nums);\n    a[now]=a[now*2]+a[now*2+1];\n}\n\nint query(int now,int l,int r,int s,int t)\n{\n    if(s<=l&&r<=t)\n        return a[now];\n    int m=(l+r)/2;\n    int ans=0;\n    if(s<=m) ans+=query(now*2,l,m,s,t);\n    if(m<t) ans+=query(now*2+1,m+1,r,s,t);\n    return ans;\n}\n\nvoid update(int now,int l,int r,int index,int val)\n{\n    //cout<<l<<\" \"<<r<<\" \"<<index<<endl;\n    if(l==r)\n    {\n        a[now]=val;\n        return ;\n    }\n    int m=(l+r)/2;\n    if(index<=m) update(now*2,l,m,index,val);\n    if(index>m) update(now*2+1,m+1,r,index,val);\n    a[now]=a[now*2]+a[now*2+1];\n}\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n=nums.size();\n        a.resize(n*4);\n        build(1,1,n,nums);\n        vector<int> ans;\n        int m=queries.size();\n        for(int i=0;i<m;i++)\n        {\n            if(queries[i][0]==1)\n            {\n                int l=queries[i][1],r=queries[i][2];\n                int x=query(1,1,n,l+1,r+1);\n                if(l!=0&&l!=n-1&&nums[l]>nums[l-1]&&nums[l]>nums[l+1]) x--;\n                if(r!=l&&r!=0&&r!=n-1&&nums[r]>nums[r-1]&&nums[r]>nums[r+1]) x--;\n                ans.push_back(x);\n            }\n            else\n            {\n                int index=queries[i][1],val=queries[i][2];\n                nums[index]=val;\n                if(index!=0&&index!=n-1&&nums[index]>nums[index-1]&&nums[index]>nums[index+1])\n                {\n                    update(1,1,n,index+1,1);\n                }  \n                else\n                {\n                    update(1,1,n,index+1,0);\n                }\n                if(index)\n                {\n                    int l=index-1;\n                    if(l!=0&&l!=n-1&&nums[l]>nums[l-1]&&nums[l]>nums[l+1])\n                        update(1,1,n,l+1,1);\n                    else\n                        update(1,1,n,l+1,0);\n                }\n                if(index+1!=n)\n                {\n                    int l=index+1;\n                    if(l!=0&&l!=n-1&&nums[l]>nums[l-1]&&nums[l]>nums[l+1])\n                        update(1,1,n,l+1,1);\n                    else\n                        update(1,1,n,l+1,0);\n                }\n\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1718506895.0
}