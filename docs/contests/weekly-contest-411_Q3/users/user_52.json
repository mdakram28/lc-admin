{
    "username": "66bro-CUNY",
    "submission": "const int N = 1e5 + 10;\nint dp[N][10];\npair<int, int> ndp[N][10];\nint p[N];\nint end = -1;\nint k;\nclass Solution {\npublic:\n    string largestPalindrome(int n, int K) {\n        k = K;\n        p[0] = 1;\n        for(int i = 1; i <= n; i++) {\n            p[i] = p[i - 1] * 10;\n            p[i] %= k;\n        }\n        \n        for(int i = 0; i <= n; i++) {\n            for(int j = 0; j <= k; j++) {\n                dp[i][j] = -1;\n            }\n        }\n        \n        \n        \n        string ans = \"\";\n        dfs(n, 0, 0);\n        \n        int x = 0, y = 0;\n        while(true) {\n            if(x >= (n + 1) / 2) break;\n            pair<int, int> p = ndp[x][y];\n            ans += to_string(p.second);\n            x++;\n            y = p.first;\n        }\n        \n        \n        string rev = ans;\n        reverse(rev.begin(), rev.end());\n        if(n % 2 == 1) {\n            int sz = ans.size();\n            for(int i = 1; i < sz; i++) {\n                ans += rev[i];\n            }\n        } else {\n            int sz = ans.size();\n            for(int i = 0; i < sz; i++) {\n                ans += rev[i];\n            }\n        }\n        \n        return ans;\n    }\n    \n    int dfs(int n, int i, int m) {\n        if(i >= (n + 1) / 2) {\n            if(m == 0) return 1;\n            else return 0;\n        } \n        \n        if(dp[i][m] != -1) {\n            return dp[i][m];\n        }\n        \n        int ans = 0;\n        int start = 0;\n        if(i == 0) start = 1;\n        \n        for(int d = 9; d >= start; d--) {\n            int val = 0;\n            if(n % 2 == 1 && i == n / 2) {\n                val = d * p[i];\n                val %= k;\n            } else {\n                val = d * (p[i] + p[n - i - 1]);\n                val %= k;\n            }\n\n            int ok = dfs(n, i + 1, (m + val) % k);\n            if(ok) {\n                ans = 1;\n                ndp[i][m] = {(m + val) % k, d};\n                break;\n            }\n        }\n        return dp[i][m] = ans;\n    }\n};",
    "submit_ts": "1723951976",
    "subm_id": "1359784765"
}