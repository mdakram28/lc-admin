{
    "username": "SirTechnical",
    "submission": "const int INF = 0x3f3f3f3f;\nvector<int> dp;\nvector<bool> vis;\n\nusing ll = long long;\n\nconst ll P1 = 31;\nconst ll P2 = 37;\nconst ll M1 = 1e9+9;\nconst ll M2 = 1e9+7;\nconst ll I1 = 838709685;\nconst ll I2 = 621621626;\n\nconst int MAXN = 5e4+5;\nll PP1[MAXN], PP2[MAXN];\nll II1[MAXN], II2[MAXN];\n\nvector<ll> sh1, sh2;\nvector<ll> wh1, wh2;\n\nint N, M;\n\nclass Solution {\n    int f(int i, string& target, vector<string>& words, vector<int>& costs) {\n        if (i >= N) return 0;\n        if (vis[i]) return dp[i];\n        vis[i] = 1;\n        for (int j = 0; j < M; ++j) {\n            int wl = words[j].size();\n            if (wl + i > N) continue;\n            ll preh1 = 0;\n            ll preh2 = 0;\n            if (i > 0) {\n                preh1 = sh1[i-1];\n                preh2 = sh2[i-1];\n            }\n            ll nxth1 = sh1[wl+i-1];\n            ll nxth2 = sh2[wl+i-1];\n            ll h1 = (nxth1-preh1+M1)*II1[i]%M1;\n            ll h2 = (nxth2-preh2+M2)*II2[i]%M2;\n            if (h1 == wh1[j] && h2 == wh2[j]) {\n                dp[i] = min(dp[i], costs[j] + f(wl+i, target, words, costs));\n            }\n        }\n        return dp[i];\n    }\n    \npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        if (PP1[0] == 0) {\n            PP1[0] = 1;\n            PP2[0] = 1;\n            II1[0] = 1;\n            II2[0] = 1;\n            for (int i = 1; i < MAXN; ++i) {\n                PP1[i] = PP1[i-1] * P1 % M1;\n                PP2[i] = PP2[i-1] * P2 % M2;\n                II1[i] = II1[i-1] * I1 % M1;\n                II2[i] = II2[i-1] * I2 % M2;\n            }\n        }\n        N = target.size();\n        M = words.size();\n        dp.assign(N, INF);\n        vis.assign(N, 0);\n        sh1.assign(N, 0);\n        sh2.assign(N, 0);\n        sh1[0] = target[0]-'a'+1;\n        sh2[0] = target[0]-'a'+1;\n        for (int i = 1; i < N; ++i) {\n            sh1[i] = (sh1[i-1] + (target[i]-'a'+1)*PP1[i])%M1; \n            sh2[i] = (sh2[i-1] + (target[i]-'a'+1)*PP2[i])%M2;\n        }\n        unordered_map<string, int> mm;\n        for (int j = 0; j < M; ++j) {\n            if (mm.count(words[j])) {\n                mm[words[j]] = min(mm[words[j]], costs[j]);\n            } else {\n                mm[words[j]] = costs[j];\n            }\n        }\n        words.clear();\n        costs.clear();\n        for (auto& [w, c] : mm) {\n            words.push_back(w);\n            costs.push_back(c);\n        }\n        M = words.size();\n        \n        wh1.assign(M, 0);\n        wh2.assign(M, 0);\n        for (int j = 0; j < M; ++j) {\n            wh1[j] = words[j][0]-'a'+1;\n            wh2[j] = words[j][0]-'a'+1;\n            for (int i = 1; i < words[j].size(); ++i) {\n                wh1[j] = (wh1[j] + (words[j][i]-'a'+1)*PP1[i])%M1; \n                wh2[j] = (wh2[j] + (words[j][i]-'a'+1)*PP2[i])%M2;\n            }\n        }\n        int ans = f(0, target, words, costs);\n        return ans == INF ? -1 : ans;\n    }\n};",
    "submit_ts": "1720322893",
    "subm_id": "1312361887"
}