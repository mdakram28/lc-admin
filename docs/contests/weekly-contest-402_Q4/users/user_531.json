{
    "username": "datn2107",
    "submission": "/**\n *     Author:   datnguyen2107\",\n *     Created:  2024-06-16 09:48\",\n **/\n#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution\n{\n#define ar2d(t, n, m) = array<array<t, m>, n>;\n#define outside(i, j, x, y, u, v) (i < x || i > u || j < y || j > v)\n#define all(v) v.begin(), v.end()\n\npublic:\n    using ll = long long;\n    using ull = unsigned long long;\n    using pii = pair<int, int>;\n    using pll = pair<ll, ll>;\n\n    const int RW4[4] = {0, 1, 0, -1};\n    const int CL4[4] = {1, 0, -1, 0};\n    const int RW8[8] = {0, 1, 1, 1, 0, -1, -1, -1};\n    const int CL8[8] = {1, 1, 0, -1, -1, -1, 0, 1};\n\n    const ll INF = 1e18 + 1;\n    const int N = 4e5 + 2107;\n    const int NN = 3e3 + 1;\n\n    int n;\n    vector<int> bit;\n\n    void update(int i, int val)\n    {\n        i++;\n        for (; i <= n; i += i & -i)\n            bit[i] += val;\n    }\n\n    int get(int i)\n    {\n        i++;\n        int res = 0;\n        for (; i > 0; i -= i & -i)\n            res += bit[i];\n        return res;\n    }\n\n    bool checkPeak(vector<int> &nums, int i)\n    {\n        if (i <= 0 || i >= n - 1) return false;\n        return nums[i] > nums[i-1] && nums[i] > nums[i+1];\n    }\n\n    vector<int> countOfPeaks(vector<int> &nums, vector<vector<int>> &queries)\n    {\n        n = nums.size();\n        bit = vector<int> (n + 1, 0);\n        vector<int> peaks(n, 0);\n        for (int i = 1; i < n - 1; i++) {\n            if (nums[i] > nums[i-1] && nums[i] > nums[i+1]) {\n                peaks[i] = 1;\n                update(i, 1);\n            }\n        }\n\n        vector<int> res;\n        for (auto query : queries) {\n            cout << query[0] << endl;\n            if (query[0] == 1) {\n                if (query[2] == query[1])\n                    res.push_back(0);\n                else\n                    res.push_back(get(query[2] - 1) - get(query[1]));\n            } else {\n                int i = query[1], val = query[2];\n                if (peaks[i]) { update(i, -1); peaks[i] = 0; }\n                if (i > 0 && peaks[i-1]) { update(i - 1, -1); peaks[i-1] = 0; }\n                if (i < n - 1 && peaks[i+1]) { update(i + 1, -1); peaks[i+1] = 0; }\n        \n                nums[i] = val;\n                if (checkPeak(nums, i)) { peaks[i] = 1; update(i, 1); }\n                if (checkPeak(nums, i-1)) { peaks[i-1] = 1; update(i - 1, 1); }\n                if (checkPeak(nums, i+1)) { peaks[i+1] = 1; update(i + 1, 1); }\n            }\n        }\n\n        return res;\n    }\n};\n",
    "submit_ts": 1718507802.0
}