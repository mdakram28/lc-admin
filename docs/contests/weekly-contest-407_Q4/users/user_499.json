{
    "username": "xxywlalala",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        for (int i = 0; i < n; i++) {\n            nums[i] = target[i] - nums[i];\n        }\n        long[] dp = new long[n];\n        dp[0] = Math.abs(nums[0]);\n        for (int i = 1; i < n; i++) {\n            if ((long) (nums[i] - nums[i - 1]) * nums[i] > 0) {\n                dp[i] = dp[i - 1] + Math.min(Math.abs(nums[i]), Math.abs(nums[i] - nums[i - 1]));\n            } else {\n                dp[i] = dp[i - 1];\n            }\n        }\n        return dp[n - 1];\n    }\n}",
    "submit_ts": "1721531299",
    "subm_id": "548384437"
}