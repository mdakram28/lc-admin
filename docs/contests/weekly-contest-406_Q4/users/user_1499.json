{
    "username": "rk5061288",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n    int x=horizontalCut.size();\n    int y=verticalCut.size();\n    int h = 0;\n    int v = 0;\n    long long ans = 0;\n    int horizontal_Pieces = 1;\n    int vertical_Pieces = 1;\n    while (h < x && v < y) {\n        if (horizontalCut[h] > verticalCut[v]) {\n            ans += horizontalCut[h] * vertical_Pieces;\n            horizontal_Pieces++;\n            h++;\n        } else {\n            ans += verticalCut[v] *horizontal_Pieces;\n            vertical_Pieces++;\n            v++;\n        }\n    }\n    while (h <x) {\n        ans += horizontalCut[h] * vertical_Pieces;\n        h++;\n    }\n    while (v < y) {\n        ans += verticalCut[v] * horizontal_Pieces;\n        v++;\n    }\n\n    return ans;\n    }\n};",
    "submit_ts": "1720925997",
    "subm_id": "1320272772"
}