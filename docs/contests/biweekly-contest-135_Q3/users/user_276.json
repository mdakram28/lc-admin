{
    "username": "ssayzx",
    "submission": "class Solution {\npublic:\n    struct TreeArray {\n        vector<int> c;\n        // \u6709\u6548\u8303\u56f4[0, n - 1], \u5219\u6570\u7ec4c\u957f\u5ea6\u4e3an\n        TreeArray(int n) { c = vector<int>(n, 0); }\n        int lowbit(int x) { return x & (-x); }\n        // x\u4e3a\u66f4\u65b0\u7684\u4f4d\u7f6e,y\u4e3a\u589e\u91cf\n        void update(int x, int y){ \n            int rx = x + 1;\n            while(rx <= c.size()){\n                c[rx - 1] += y;\n                rx += lowbit(rx);\n            }\n        }\n        int sum(int x){ // \u8ba1\u7b97[0, x]\u7684\u548c\n            int res = 0, rx = x + 1;\n            while(rx > 0){\n                res += c[rx - 1];\n                rx -= lowbit(rx);\n            }\n            return res;\n        }\n        int rangeSum(int a, int b) { // \u8ba1\u7b97[a, b]\u7684\u548c\n            if (a == 0) return sum(b);\n            else return sum(b) - sum(a - 1);\n        };\n    };\n    int minChanges(vector<int>& nums, int k) {\n        map<int, vector<int>> prs;\n        int n = nums.size();\n        for (int i = 0; i < n / 2; i++) {\n            int d = abs(nums[i] - nums[n - i -1]);\n            int mi = min(nums[i], nums[n - i - 1]);\n            int mx = max(nums[i], nums[n - i - 1]);\n\n            prs[d].push_back(max(mx, k - mi));\n        }\n        int total = n / 2;\n\n        int ans = n;\n        TreeArray ta(k + 1);\n        for (auto &pr : prs) {\n            int d = pr.first, zero = pr.second.size();\n            int two = ta.sum(d - 1), one = total - two - zero;\n            // cout << d << \": \" << zero << ends << one << ends << two << endl;\n            ans = min(ans, two * 2 + one);\n            for (auto v : pr.second) ta.update(v, 1);\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721487952",
    "subm_id": "548312255"
}