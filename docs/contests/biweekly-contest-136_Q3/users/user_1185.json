{
    "username": "abtimes2",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int R = grid.size();\n        int C = grid[0].size();\n\n        int minOps = 0;\n        for (int i = 0; i < R / 2; i++) {\n            for (int j = 0 ; j < C / 2 ; j++) {\n                int sum = grid[i][j] + grid[R - i - 1][j] + grid[i][C - j - 1] + grid[R - i - 1][C - j - 1];\n                minOps += min(sum, 4 - sum);\n            }\n        }\n       \n        int rowOddCompletePairs = 0;\n        int rowOddIncompletePairs = 0;\n        if (R&1) {\n            for (int j = 0; j < C/2; j++) {\n                int sum = grid[R/2][j] + grid[R/2][C - j - 1];\n                if (sum == 2)rowOddCompletePairs++;\n                else if (sum == 1) rowOddIncompletePairs++;\n            }   \n        }\n        int colOddCompletePairs = 0;\n        int colOddIncompletePairs = 0;\n        if (C&1) {\n            for (int i = 0; i < R/2; i++) {\n                int sum = grid[i][C/2] + grid[R - i - 1][C/2];\n                if (sum == 2) colOddCompletePairs++;\n                else if (sum == 1) colOddIncompletePairs++;\n            }\n        }\n\n\n        rowOddCompletePairs %= 2;\n        colOddCompletePairs %= 2;\n\n        if (rowOddCompletePairs == colOddCompletePairs) {\n            minOps += colOddIncompletePairs + rowOddIncompletePairs;\n        }\n        else if (colOddIncompletePairs == 0 && rowOddIncompletePairs == 0){\n            minOps += 2;\n        }\n        else {\n            minOps += colOddIncompletePairs + rowOddIncompletePairs;\n        }\n\n        if (R%2 == 1 && C%2 == 1) {\n            if (grid[R/2][C/2] == 1) minOps++;\n        }\n\n        return minOps;\n    }\n};",
    "submit_ts": "1722698980",
    "subm_id": "1343197849"
}