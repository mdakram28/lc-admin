{
    "username": "happyfeetpi",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        ps = []\n        for point in points:\n            ps.append([point[0] + point[1], -point[0] + point[1]])\n        first = sorted(ps, key=lambda x: x[0])\n        second = sorted(ps, key=lambda x: x[1])\n        first_max = abs(first[0][0] - first[-1][0])\n        second_max = abs(second[0][1] - second[-1][1])\n        if first_max > second_max:\n            test = first[1:]\n            test2 = first[:-1]\n        else:\n            test = second[1:]\n            test2 = second[:-1]\n        first = sorted(test, key=lambda x: x[0])\n        second = sorted(test, key=lambda x: x[1])\n        best = max(abs(first[0][0] - first[-1][0]), abs(second[0][1] - second[-1][1]))\n        first = sorted(test2, key=lambda x: x[0])\n        second = sorted(test2, key=lambda x: x[1])\n        best = min(best, max(abs(first[0][0] - first[-1][0]), abs(second[0][1] - second[-1][1])))\n        return best"
}