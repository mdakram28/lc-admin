{
    "username": "yaoyi92",
    "submission": "struct TrieNode {\n    map<int,TrieNode*> children;\n\n    int cost;\n    int depth;\n\n    TrieNode()\n    {\n        cost = INT_MAX;\n        depth = INT_MAX;\n    }\n};\n\nvoid insert(TrieNode* root, string& key, int cost)\n{\n    TrieNode* currentNode = root;\n\n    for (auto c : key) {\n        if ((currentNode->children).find(c - 'a') == (currentNode->children).end() ) {\n            TrieNode* newNode = new TrieNode();\n            currentNode->children[c - 'a'] = newNode;\n        }\n        currentNode = currentNode->children[c - 'a'];\n    }\n\n    currentNode->cost = min(currentNode->cost, cost);\n    currentNode->depth = key.length();\n}\n\n\n\n\n\nclass Solution {\npublic:\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode* root = new TrieNode();\n        int n_words = words.size();\n        for (int i = 0; i < n_words; i++) {\n            insert(root, words[i], costs[i]);\n        }\n        vector<TrieNode*> nowNodes;\n        nowNodes.push_back(root);\n        int n = target.size();\n        //vector<vector<pair<int,int>>> adjList(n+1);\n        vector<int> dp(n+1, INT_MAX);\n        dp[0] = 0;\n        for (int i = 0; i < n; i++) {\n            vector<TrieNode*> tmpNodes;\n            char c = target[i];\n            for (TrieNode* now: nowNodes) {\n                if (now->children.find(c-'a') != (now->children).end()) {\n                    TrieNode* next = now->children[c-'a'];\n                    tmpNodes.push_back(next);\n                    if (next->cost != INT_MAX) {\n                        //cout << i << \" \" << next->depth << \" \"<< i-next->depth+1 << endl;\n                        //adjList[i-next->depth+1].push_back(pair<int,int>{i+1, next->cost});\n                        dp[i+1] = min(dp[i+1], dp[i-next->depth+1] + next->cost);\n                        //dp[i-next->depth+1] = \n                    }\n                }\n            }\n            if (dp[i+1] != INT_MAX) tmpNodes.push_back(root);\n            nowNodes = tmpNodes;\n        }\n        //for (int i = 0; i < n; i++) {\n        //    //cout << i << \" | \";\n        //    //for (pair<int,int> x: adjList[i]) {\n        //    //    cout << x.first << \" \" << x.second << \"; \";\n        //    //}\n        //    //cout << endl;\n        //    if (dp[i] == INT_MAX) continue;\n        //    for (pair<int,int> x: adjList[i]) {\n        //        //cout << x.first << \" \" << x.second << \"; \";\n        //        int j = x.first;\n        //        int cost = x.second;\n        //        dp[j] = min(dp[j], dp[i]+cost);\n        //    }\n        //}\n        return dp[n] == INT_MAX ? -1: dp[n];\n    }\n};",
    "submit_ts": "1720322317",
    "subm_id": "1312346628"
}