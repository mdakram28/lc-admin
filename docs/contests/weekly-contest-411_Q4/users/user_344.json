{
    "username": "bogo_y",
    "submission": "#define debug(x) cout << #x << '=' << x << endl\ntypedef long long ll;\n\nclass Solution {\npublic:\n    vector<int> left, right;\n    vector<ll> ret, psl;\n    ll cs(int l, int r) {\n        return psl[r + 1] - psl[l];\n    }\n    ll cx(int x) {\n        return x * (x + 1ll) / 2;\n    }\n    char ttt(char x) {\n        if (x == '0') {\n            return '1';\n        }\n        return '0';\n    }\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& qs) {\n        int n = s.size(), j = 0;\n        unordered_map<char, int> cnt;\n        cnt[s[0]]++;\n        left.resize(n);\n        for (int i = 0; i < n; i++) {\n            while (j + 1 < n && (cnt[s[j + 1]] + 1 <= k || cnt[ttt(s[j + 1])] <= k)) {\n                ++j;\n                cnt[s[j]]++;\n            }\n            left[i] = j;\n            cnt[s[i]]--;\n        }\n        j = n - 1;\n        cnt.clear();\n        right.resize(n);\n        cnt[s[j]]++;\n        for (int i = n - 1; i >= 0; i--) {\n            while (j - 1 >= 0 && (cnt[s[j - 1]] + 1 <= k || cnt[ttt(s[j - 1])] <= k)) {\n                --j;\n                cnt[s[j]]++;\n            }\n            right[i] = j;\n            cnt[s[i]]--;\n        }\n        psl.push_back(0);\n        for (int i = 0; i < left.size(); i++) {\n            psl.push_back(psl.back() + left[i] - i + 1);\n        }\n        for (auto &q : qs) {\n            ll ans;\n            if (q[0] == q[1]) {\n                ans = 1;\n            } else if (q[1] + 1 == n) {\n                ans = cs(q[0], q[1]);\n            } else if (left[q[0]] >= q[1]) {\n                ans = cx(q[1] - q[0] + 1);\n            } else {\n                int r1 = right[q[1] + 1];\n                ans = cx(q[1] - r1 + 1);\n                ans += cs(q[0], r1 - 1);\n            }\n            ret.push_back(ans);\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723953283",
    "subm_id": "556416609"
}