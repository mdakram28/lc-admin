{
    "username": "Manan04",
    "submission": "class Solution:\n    def countOfPairs(self, a: List[int]) -> int:\n        n = len(a)\n        mod = 10 ** 9 + 7\n        mn = [-1] * n\n        c = a[-1]\n        for i in range(n - 1, -1, -1):\n            c = min(c, a[i])\n            mn[i] = c\n        # @lru_cache(None)\n        # def sol(idx, prev):\n        #     if(idx == n):\n        #         return 1\n        #     ans = 0\n        #     val = a[idx]\n        #     if(prev == -1):\n        #         for i in range(mn[idx] + 1):\n        #             ans += sol(idx + 1, i)\n        #             ans %= mod\n        #     else:\n        #         p1 = prev\n        #         p2 = a[idx - 1] - prev\n        #         start = p1\n        #         end = mn[idx]\n        #         start = max(start, val - p2)\n        #         for i in range(start, end + 1):\n        #             v1 = i\n        #             v2 = val - i\n        #             if(v1 >= p1 and v2 <= p2):\n        #                 ans += sol(idx + 1, i)\n        #                 ans %= mod\n        #     # ans %= mod\n        #     return ans % mod\n        # ans = sol(0, -1)\n        # ans %= mod\n        \n        # will iterative work ?\n        dp = [0] * (max(a) + 1)\n        for i in range(a[-1] + 1):\n            dp[i] = 1\n        for i in range(n - 2, -1, -1):\n            ndp = [0] * (max(a) + 1)\n            pref = [0] * (max(a) + 1)\n            for ii in range(len(dp)):\n                pref[ii] += dp[ii]\n                if(ii):\n                    pref[ii] += pref[ii - 1]\n            val = a[i]\n            for j in range(mn[i] + 1):\n                v1 = j\n                v2 = val - j\n                p1 = v1\n                p1 = max(p1, a[i + 1] - v2)\n                # ndp[j] += sum(dp[p1: ])\n                ndp[j] += pref[-1]\n                if(p1 - 1 >= 0):\n                    ndp[j] -= pref[p1 - 1]\n                ndp[j] %= mod\n            dp = ndp[:]\n        return sum(dp) % mod",
    "submit_ts": "1723347767",
    "subm_id": "1351605127"
}