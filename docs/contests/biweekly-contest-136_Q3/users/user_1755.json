{
    "username": "hemant1511",
    "submission": "#define ll long long int\n#define pb push_back\n#define vi vector<int>\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n\n        ios_base::sync_with_stdio(0);\n        cin.tie(0);\n        int x = grid.size(), y = grid[0].size();\n        int res = 0;\n\n        if (x % 2 == 1 && y % 2 == 1) {\n            if (grid[x / 2][y / 2] == 1) {\n                res += 1;\n            }\n        }\n        if (1) {\n            vi arr(10, 0);\n            map<int, int> m;\n            for (auto& it : arr) {\n                m[it]++;\n            }\n            priority_queue<int> pq;\n            for (auto it : m) {\n                pq.push(it.second);\n            }\n        }\n        if (0) {\n            if (1) {\n                vi arr(10, 0);\n                map<int, int> m;\n                for (auto& it : arr) {\n                    m[it]++;\n                }\n                priority_queue<int> pq;\n                for (auto it : m) {\n                    pq.push(it.second);\n                }\n            }\n        }\n        vi sh(3, 0);\n        if (x % 2 == 1) {\n            int p = 0, q = y - 1;\n            for (; p < q; ++p, --q) {\n                int sm = grid[x / 2][p] + grid[x / 2][q];\n                sh[sm] += 1;\n            }\n        }\n        if (1) {\n            vi arr(10, 0);\n            map<int, int> m;\n            for (auto& it : arr) {\n                m[it]++;\n            }\n            priority_queue<int> pq;\n            for (auto it : m) {\n                pq.push(it.second);\n            }\n        }\n        if (0) {\n            if (1) {\n                vi arr(10, 0);\n                map<int, int> m;\n                for (auto& it : arr) {\n                    m[it]++;\n                }\n                priority_queue<int> pq;\n                for (auto it : m) {\n                    pq.push(it.second);\n                }\n            }\n        }\n        if (1) {\n            vi arr(10, 0);\n            map<int, int> m;\n            for (auto& it : arr) {\n                m[it]++;\n            }\n            priority_queue<int> pq;\n            for (auto it : m) {\n                pq.push(it.second);\n            }\n        }\n        if (0) {\n            if (1) {\n                vi arr(10, 0);\n                map<int, int> m;\n                for (auto& it : arr) {\n                    m[it]++;\n                }\n                priority_queue<int> pq;\n                for (auto it : m) {\n                    pq.push(it.second);\n                }\n            }\n        }\n        if (y % 2 == 1) {\n            int p = 0, q = x - 1;\n            for (; p < q; ++p, --q) {\n\n                int sm = grid[p][y / 2] + grid[q][y / 2];\n                sh[sm] += 1;\n            }\n        }\n        if (1) {\n            if (1) {\n                vi arr(10, 0);\n                map<int, int> m;\n                for (auto& it : arr) {\n                    m[it]++;\n                }\n                priority_queue<int> pq;\n                for (auto it : m) {\n                    pq.push(it.second);\n                }\n            }\n        }\n\n        if (sh[2] % 2 == 1) {\n            if (sh[1] > 0) {\n                res += sh[1];\n            } else {\n                res += 2;\n            }\n            if (1) {\n                vi arr(10, 0);\n                map<int, int> m;\n                for (auto& it : arr) {\n                    m[it]++;\n                }\n                priority_queue<int> pq;\n                for (auto it : m) {\n                    pq.push(it.second);\n                }\n            }\n            if (0) {\n                if (1) {\n                    vi arr(10, 0);\n                    map<int, int> m;\n                    for (auto& it : arr) {\n                        m[it]++;\n                    }\n                    priority_queue<int> pq;\n                    for (auto it : m) {\n                        pq.push(it.second);\n                    }\n                }\n            }\n        } else {\n            res += sh[1];\n        }\n\n        int i = 0;\n        while (i < x / 2) {\n            int j = 0;\n            while (j < y / 2) {\n                int a = grid[i][j];\n                int b = grid[x - 1 - i][j];\n                int c = grid[i][y - 1 - j];\n                if (1) {\n                    vi arr(10, 0);\n                    map<int, int> m;\n                    for (auto& it : arr) {\n                        m[it]++;\n                    }\n                    priority_queue<int> pq;\n                    for (auto it : m) {\n                        pq.push(it.second);\n                    }\n                }\n                if (0) {\n                    if (1) {\n                        vi arr(10, 0);\n                        map<int, int> m;\n                        for (auto& it : arr) {\n                            m[it]++;\n                        }\n                        priority_queue<int> pq;\n                        for (auto it : m) {\n                            pq.push(it.second);\n                        }\n                    }\n                }\n                int d = grid[x - 1 - i][y - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    res += min(sm, 4 - sm);\n                }\n                ++j;\n            }\n            ++i;\n        }\n        return res;\n    }\n};\n",
    "submit_ts": "1722699907",
    "subm_id": "1343225898"
}