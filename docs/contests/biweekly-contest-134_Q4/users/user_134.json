{
    "username": "you-jin-plus",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        using ll = long long;\n        int n = nums.size();\n        int f[n][20];\n        memset(f, -1, sizeof(f));\n        for (int i = 0; i < n; i++) f[i][0] = nums[i];\n        for (int j = 1; j < 20; j++) {\n            for (int i = 0; i + (1 << j) - 1 < n; i++) {\n                int k = j - 1;\n                f[i][j] = f[i][k] & f[i + (1 << k)][k];\n            }\n        }\n        auto get = [&](int l, int r) {\n            int k = log2(r - l + 1);\n            return f[l][k] & f[r - (1 << k) + 1][k];\n        };\n        ll ans = 0;\n        for (int i = 0; i < n; i++) {\n            int l = i - 1, r = n;\n            while (l + 1 < r) {\n                int mid = (l + r) / 2;\n                int t = get(i, mid);\n                if (t < k) r = mid;\n                else l = mid; \n            }\n            int l1 = i - 1, r1 = n;\n            while (l1 + 1 < r1) {\n                int mid = (l1 + r1) / 2;\n                int t = get(i, mid);\n                if (t <= k) r1 = mid;\n                else l1 = mid;\n            }\n            ans += l - l1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720278124",
    "subm_id": "544560828"
}