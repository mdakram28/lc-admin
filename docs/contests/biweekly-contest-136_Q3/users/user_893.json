{
    "username": "kdenst",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        size1 = len(grid)\n        size2 = len(grid[0])\n        changes = 0\n        for i in range(len(grid) // 2):\n            for j in range(len(grid[0]) // 2):\n                p1 = grid[i][j]\n                p2 = grid[i][size2 - 1 - j]\n                p3 = grid[size1 - 1 - i][j]\n                p4 = grid[size1 - 1 - i][size2 - 1 - j]\n                sum = p1 + p2 + p3 + p4\n                if sum == 0 or sum == 4:\n                    continue\n                if sum == 1:\n                    changes += 1\n                elif sum == 2:\n                    changes += 2\n                elif sum == 3:\n                    changes += 1\n\n        asymChanges = 0\n        asymOnes = 0\n        if size1 % 2 == 1:\n            idx = size1 // 2\n            for j in range(size2 // 2):\n                p1 = grid[idx][j]\n                p2 = grid[idx][size2 - 1 - j]\n                if p1 != p2:\n                    changes += 1\n                    asymChanges += 1\n                else:\n                    asymOnes += p1 + p2\n\n        if size2 % 2 == 1:\n            idx = size2 // 2\n            for j in range(size1 // 2):\n                p1 = grid[j][idx]\n                p2 = grid[size1 - 1 - j][idx]\n                if p1 != p2:\n                    changes += 1\n                    asymChanges += 1\n                else:\n                    asymOnes += p1 + p2\n\n        if size1 % 2 == 1 and size2 % 2 == 1:\n            if grid[size1 // 2][size2 // 2] == 1:\n                changes += 1\n\n        if asymChanges > 0:\n            return changes\n        if asymOnes % 4 != 0:\n            return changes + 2\n\n        return changes\n",
    "submit_ts": "1722697726",
    "subm_id": "1343156678"
}