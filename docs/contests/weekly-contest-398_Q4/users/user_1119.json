{
    "username": "ImJoshiANE",
    "submission": "class Solution {\n    unordered_map<int, unordered_map<int, int>> dp[2];\npublic:\n    int solve(int i, int j, bool can, int k){\n        if(i>k+1) return 0;\n        if(dp[can].count(i) && dp[can][i].count(j)) return dp[can][i][j];\n        \n        int ans = 0;\n        if(i == k) ans += 1;\n        \n        // jump\n        ans += solve((i+(1<<j)), j+1, true, k);\n            \n        // gp back if possible\n        if(i>0 && can) ans += solve(i-1, j, false, k);\n        \n        return dp[can][i][j]=ans;\n    }\n    int waysToReachStair(int k) {\n        // queue<pair<int, int>> q;\n        dp[0].clear();\n        dp[1].clear();\n        return solve(1, 0, true, k);\n    }\n};",
    "submit_ts": "1716087369",
    "subm_id": "1261781519"
}