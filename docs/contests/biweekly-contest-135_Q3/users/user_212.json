{
    "username": "hxu10",
    "submission": "class Solution(object):\n    def minChanges(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        boundary = []\n        n = len(nums)\n        dic = {}\n        for i in range(n//2):\n            minimum, maximum = min(nums[i],nums[n-1-i]), max(nums[i],nums[n-1-i])\n            boundary.append(max(k-minimum, maximum))\n            d = maximum - minimum\n            if d not in dic:  dic[d] = 0\n            dic[d] += 1\n            \n        boundary.sort()\n        \n      #  print(boundary)\n        \n        \n        ans = 998244353 \n        \n        for num in dic:\n            c0 = dic[num] \n            c1 = n//2 - bisect.bisect_left(boundary, num) - c0\n            c2 = n // 2 - c0 - c1\n           # print(c0,c1,c2)\n            ans = min(ans, c1 + 2*c2)\n            \n        return ans\n            \n            \n            \n        \n        \n        \n        \n        \n            \n            \n            \n            ",
    "submit_ts": "1721487408",
    "subm_id": "1327387711"
}