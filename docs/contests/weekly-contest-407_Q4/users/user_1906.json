{
    "username": "pcumamahesh",
    "submission": "class Solution {\nprivate:\n    long long solve(vector<int> a) {\n        for (auto& i : a) {\n            i = abs(i);\n        }\n\n        /* \n            for an index, as long as a[j] >= a[i], \n            we need to keep applying +1 operation, diff times\n        */\n\n        long long ret = 0;\n        const int n = a.size();\n        \n        int pre = 0;\n        for (int i = 0; i < n; ++i) {\n            ret += max(0, a[i] - pre);\n            pre = a[i];\n        }\n\n        return ret;\n    }\npublic:\n    long long minimumOperations(vector<int>& b, vector<int>& a) {\n        long long ans = 0;\n        const int n = a.size();\n\n        for (int i = 0; i < n; ++i) {\n            a[i] -= b[i];\n        }\n\n        /*\n            3 2 5 3 4 1\n            3 2 5 3 4\n            3   5 3 4\n                5   4\n                5  \n        */\n\n        for (int i = 0; i < n; ) {\n            if (a[i] == 0) {\n                ++i;\n                continue;\n            }\n            int j = i;\n            if (a[i] < 0) {\n                while (j < n - 1 && a[j + 1] < 0) {\n                    ++j;\n                }\n            } else {\n                while (j < n - 1 && a[j + 1] > 0) {\n                    ++j;\n                }\n            }\n            ans += solve(vector<int>(a.begin() + i, a.begin() + j + 1));\n            i = j + 1;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1721533447",
    "subm_id": "1328009170"
}