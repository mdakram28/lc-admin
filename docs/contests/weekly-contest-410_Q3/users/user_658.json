{
    "username": "atharvad660",
    "submission": "#include <vector>\n#include <iostream>\n\nclass Solution {\npublic:\n    int countOfPairs(std::vector<int>& nums) {\n        const int MOD = 1e9 + 7;\n        int n = nums.size();\n        std::vector<std::vector<int>> dp(51, std::vector<int>(51, 0));\n        std::vector<std::vector<int>> prefixSum(51, std::vector<int>(51, 0));\n        \n        // Initialize the dp array for the first element\n        for (int x = 0; x <= nums[0]; ++x) {\n            int y = nums[0] - x;\n            dp[x][y] = 1;\n        }\n        \n        for (int i = 1; i < n; ++i) {\n            // Calculate prefix sums for the current dp array\n            for (int x = 0; x <= 50; ++x) {\n                for (int y = 50; y >= 0; --y) {\n                    prefixSum[x][y] = dp[x][y];\n                    if (x > 0) prefixSum[x][y] = (prefixSum[x][y] + prefixSum[x-1][y]) % MOD;\n                    if (y < 50) prefixSum[x][y] = (prefixSum[x][y] + prefixSum[x][y+1]) % MOD;\n                    if (x > 0 && y < 50) prefixSum[x][y] = (prefixSum[x][y] - prefixSum[x-1][y+1] + MOD) % MOD;\n                }\n            }\n            \n            // Update the dp array for the next index using the prefix sums\n            std::vector<std::vector<int>> nextDp(51, std::vector<int>(51, 0));\n            for (int x = 0; x <= nums[i]; ++x) {\n                int y = nums[i] - x;\n                nextDp[x][y] = prefixSum[x][y];\n            }\n            \n            dp = nextDp;\n        }\n        \n        // Calculate the final result\n        int result = 0;\n        for (int x = 0; x <= 50; ++x) {\n            for (int y = 0; y <= 50; ++y) {\n                result = (result + dp[x][y]) % MOD;\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1723344048",
    "subm_id": "1351525178"
}