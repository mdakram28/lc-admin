{
    "username": "tata_b211259cs",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) \n    {\n        sort(r.begin(),r.end());\n        for(int i=1;i<r.size();i++)\n        {\n            if(r[i-1][1]>r[i][1])\n                return 0;\n        }\n        int t=r.size();\n        r.push_back({n+1,1000});\n        vector<vector<int>>dp2(n,vector<int>(r[t-1][1]+1,-1));\n        function<int(int,int,int)>charm=[&](int index,int cnt,int k)\n        {\n            if(index > n-1)\n                return 1;\n            else if(dp2[index][cnt]!=-1)\n                return dp2[index][cnt];\n            else\n            {\n                int ans=0;\n                for(int i=0;i<=index;i++)\n                {\n                    if(index==r[k][0] && cnt+i==r[k][1])\n                    ans+=charm(index+1,cnt+i,k+1);\n                    else if(index<r[k][0] && cnt+i<=r[k][1])\n                    ans+=charm(index+1,cnt+i,k);\n                    else\n                    ans+=0;\n                    \n                    ans%=(1000000007);\n                }\n                return dp2[index][cnt]=ans;\n            }\n        };\n        return charm(0,0,0);\n    }\n};",
    "submit_ts": 1719071586.0
}