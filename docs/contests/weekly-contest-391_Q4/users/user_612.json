{
    "username": "ou-hai-ziJHu23dNZ",
    "submission": "class Solution {\n    public int minimumDistance(int[][] points) {\n        // \u79fb\u9664\u4e00\u4e2a\u70b9\u540e\uff0c\u5269\u4e0b\u7684\u70b9\u7684\u4e24\u4e24\u6700\u5927\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5c0f\u503c\n        // \u6700\u957f\u7684\u8ddd\u79bb\u5fc5\u987b\u53bb\u6389\u4e00\u4e2a\u70b9\uff0c\u4e0d\u7136\u6ca1\u620f\n        // \u6700\u957f\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e\u4e24\u4e2a\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\n        // \u6700\u957f\u8ddd\u79bb\u4e3a\u4e00\u4e2a\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b972\u6b21\n        int[] ints = doMinimumDistance(points);\n        // \u5220\u96643\n        int[][] newPoints1 = new int[points.length - 1][2];\n        int[][] newPoints2 = new int[points.length - 1][2];\n        int pos1 = 0;\n        int pos2 = 0;\n        for (int i = 0; i < points.length; i++) {\n            if (i != ints[1]) {\n                newPoints1[pos1] = points[i];\n                pos1++;\n            }\n            if (i != ints[2]) {\n                newPoints2[pos2] = points[i];\n                pos2++;\n            }\n        }\n        int[] ints1 = doMinimumDistance(newPoints1);\n        int[] ints2 = doMinimumDistance(newPoints2);\n        return Math.min(ints1[0], ints2[0]);\n    }\n\n    public int[] doMinimumDistance(int[][] points) {\n        // \u79fb\u9664\u4e00\u4e2a\u70b9\u540e\uff0c\u5269\u4e0b\u7684\u70b9\u7684\u4e24\u4e24\u6700\u5927\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5c0f\u503c\n        // \u6700\u957f\u7684\u8ddd\u79bb\u5fc5\u987b\u53bb\u6389\u4e00\u4e2a\u70b9\uff0c\u4e0d\u7136\u6ca1\u620f\n        // \u6700\u957f\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e\u4e24\u4e2a\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\n        // \u6700\u957f\u8ddd\u79bb\u4e3a\u4e00\u4e2a\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b972\u6b21\n        int[][][] p = new int[4][points.length][2];\n        for (int i = 0; i < points.length; i++) {\n            p[0][i][0] = points[i][0] + points[i][1];\n            p[1][i][0] = -points[i][0] + points[i][1];\n            p[2][i][0] = points[i][0] - points[i][1];\n            p[3][i][0] = -points[i][0] - points[i][1];\n            p[0][i][1] = i;\n            p[1][i][1] = i;\n            p[2][i][1] = i;\n            p[3][i][1] = i;\n        }\n        for (int i = 0; i < 4; i++) {\n            Arrays.sort(p[i], (a, b) -> a[0] - b[0]);\n        }\n        int[] ans = new int[] {Integer.MIN_VALUE, -1, -1};\n        for (int i = 0; i < 4; i++) {\n            if (p[i][points.length - 1][0] - p[i][0][0] > ans[0]) {\n                ans[0] = p[i][points.length - 1][0] - p[i][0][0];\n                ans[1] = p[i][0][1];\n                ans[2] = p[i][points.length - 1][1];\n            }\n        }\n        return ans;\n    }\n}"
}