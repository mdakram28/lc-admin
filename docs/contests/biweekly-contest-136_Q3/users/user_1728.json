{
    "username": "SahilKumar_",
    "submission": "class Solution {\npublic:\n    int n;\n    int m;\n    int minFlipsToPalindrome(int a, int b, int c, int d) {\n        int ones = a + b + c + d;\n        return min(ones, 4 - ones);\n    }\n    int cnt_one(vector<vector<int>>& grid){\n        int one = 0;\n        for(int i = 0;i < n;i++){\n            for(int j = 0;j < m;j++){\n                if(grid[i][j]==1)one++;\n            }\n        }\n        return one;\n    }\n    int minFlips(vector<vector<int>>& grid) {\n        n = grid.size();\n        m = grid[0].size();\n        int ans = 0;\n        int possible = 0;\n        int count = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - i - 1][j];\n                int c = grid[i][m - j - 1];\n                int d = grid[n - i - 1][m - j - 1];\n                ans += minFlipsToPalindrome(a, b, c, d);\n            }\n        }\n        if (n % 2 != 0) {\n            int midRow = n / 2;\n            for (int j = 0; j < m / 2; ++j) {\n                if (grid[midRow][j] != grid[midRow][m - j - 1]) {\n                    ans += 1;\n                    possible += 1;\n                } else if (grid[midRow][j] == 1) {\n                    count += 1;\n                }\n            }\n        }\n        if (m % 2 != 0) {\n            int midCol = m / 2;\n            for (int i = 0; i < n / 2; ++i) {\n                if (grid[i][midCol] != grid[n - i - 1][midCol]) {\n                    ans += 1;\n                    possible += 1;\n                } else if (grid[i][midCol] == 1) {\n                    count += 1;\n                }\n            }\n        }\n        int res = cnt_one(grid);\n        if (n % 2 != 0 && m % 2 != 0 && grid[n / 2][m / 2] == 1) {\n            ans += 1;\n        }\n        if (possible == 0 && count % 2 != 0) {\n            ans += 2;\n        }\n\n        return min(ans,res);\n    }\n};\n",
    "submit_ts": "1722699890",
    "subm_id": "1343225411"
}