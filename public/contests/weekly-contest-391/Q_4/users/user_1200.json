{
    "username": "Chakshu_Jhamb",
    "submission": "class Solution {\npublic:\n    \n    int MaxDist(vector<pair<int, int> >& A, int N)\n{\n    // Variables to track running extrema\n    int minsum, maxsum, mindiff, maxdiff;\n \n    minsum = maxsum = A[0].first + A[0].second;\n    mindiff = maxdiff = A[0].first - A[0].second;\n    for (int i = 1; i < N; i++) {\n        int sum = A[i].first + A[i].second;\n        int diff = A[i].first - A[i].second;\n        if (sum < minsum)\n            minsum = sum;\n        else if (sum > maxsum)\n            maxsum = sum;\n        if (diff < mindiff)\n            mindiff = diff;\n        else if (diff > maxdiff)\n            maxdiff = diff;\n    }\n \n    int maximum = max(maxsum - minsum, maxdiff - mindiff);\n \n    return maximum;\n}\n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int size=points.size();\n        vector<int> sum;\n        vector<int> diff;\n        for(int i=0; i<size; i++){\n            sum.push_back(points[i][0]+points[i][1]);\n            diff.push_back(points[i][0]-points[i][1]);\n        }\n        int maxiSum=sum[0];\n        int miniSum=sum[0];\n        int maxiDiff=diff[0];\n        int miniDiff=diff[0];\n        \n        vector<int> indices;\n        indices.push_back(0);\n        for(int i=1; i<size; i++){\n            if(maxiSum<sum[i] || miniSum>sum[i] || maxiDiff<diff[i] || miniDiff>diff[i]){\n                indices.push_back(i);\n            }\n            maxiSum=max(maxiSum,sum[i]);\n            miniSum=min(miniSum,sum[i]);\n            maxiDiff=max(maxiDiff,diff[i]);\n            miniDiff=min(miniDiff,diff[i]);\n        }\n        // for(auto it: indices){\n        //     cout<<it<<\" \";\n        // }\n        // cout<<endl;\n        int ans=INT_MAX;\n        for(auto it: indices){\n            vector<pair<int,int>> array;\n            for(int i=0; i<size; i++){\n                if(i==it){\n                    continue;\n                }\n                array.push_back({points[i][0],points[i][1]});\n            }\n            ans= min(ans, MaxDist(array,size-1));\n        }\n        \n        return ans;\n        \n        \n    }\n};"
}