{
    "username": "yumkam",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        constexpr unsigned bits = 31;\n        const unsigned n = nums.size();\n        vector<array<unsigned, bits>> cntbits(n + 1);\n        array<unsigned, bits> cnt {};\n        for (unsigned i = 0; i < n; ++i) {\n            auto num = nums[i];\n            for (unsigned bit = 0; num; ++bit, num >>= 1)\n                cnt[bit] += num & 1;\n            cntbits[i + 1] = cnt;\n        }\n        auto andsum = [&](auto l, auto r) { // nums[l] & ... & nums[r]\n            int ret = 0;\n            for (unsigned bit = 0, bm = 1; bit < bits; ++bit, bm <<= 1)\n                if (cntbits[r + 1][bit] - cntbits[l][bit] == r - l + 1)\n                    ret |= bm;\n            return ret;\n        };\n        int ret = INT_MAX;\n        for (unsigned i = 0; i < n; ++i) {\n            unsigned r = i;\n            unsigned l = i;\n            assert(andsum(i, i) == nums[i]);\n            if (nums[i] >= k) {\n                unsigned lo = 0;\n                unsigned hi = i;\n                while(lo < hi) {\n                    unsigned mid = midpoint(lo, hi);\n                    if (andsum(mid, r) < k)\n                        lo = mid + 1;\n                    else\n                        hi = mid;\n                }\n                if (lo > 0)\n                    ret = min(ret, k - andsum(lo - 1, r));\n                ret = min(ret, andsum(lo, r) - k);\n            } else {\n                ret = min(ret, k - nums[i]);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717299791.0
}