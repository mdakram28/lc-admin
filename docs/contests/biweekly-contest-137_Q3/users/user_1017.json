{
    "username": "\u6d82\u6c47\u5eb7",
    "submission": "SMALL = -(10**10)\n\ndef arrmax(seq1, seq2):\n    seq = [x for x in seq1] + [x for x in seq2]\n    seq.sort(reverse=True)\n    \n    seen_i = set()\n    \n    ret = []\n    for x,i in seq:\n        if i in seen_i:\n            continue\n        ret.append((x,i))\n        seen_i.add(i)\n        if len(ret) >= 2:\n            break\n    return ret\n\n\ndef arrmax2(seq1, seq2):\n    maxres = SMALL\n    for x,i in seq1:\n        for y,j in seq2:\n            if i == j:\n                continue\n            res = x+y\n            maxres = max(maxres, res)\n    return maxres\n\n\n\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        \n        def solve(board: List[List[int]]) -> int:\n            n = len(board)\n            m = len(board[0])\n\n            pmax1 = [[[(SMALL, -1), (SMALL, -2)] for _ in row] for row in board]\n            pmax2 = [[[(SMALL, -1), (SMALL, -2)] for _ in row] for row in board]\n            pmax3 = [[[(SMALL, -1), (SMALL, -2)] for _ in row] for row in board]\n            pmax4 = [[[(SMALL, -1), (SMALL, -2)] for _ in row] for row in board]\n\n            for i in range(n):\n                for j in range(m):                \n                    pmax1[i][j] = [(board[i][j], i)]\n                    if i - 1 >= 0:\n                        pmax1[i][j] = arrmax(pmax1[i][j], pmax1[i-1][j])\n                    if j - 1 >= 0:\n                        pmax1[i][j] = arrmax(pmax1[i][j], pmax1[i][j-1])\n\n            for i in range(n-1, -1, -1):\n                for j in range(m):\n                    pmax2[i][j] = [(board[i][j], i)]\n                    if i + 1 < n:\n                        pmax2[i][j] = arrmax(pmax2[i][j], pmax2[i+1][j])\n                    if j - 1 >= 0:\n                        pmax2[i][j] = arrmax(pmax2[i][j], pmax2[i][j-1])\n\n            for i in range(n-1, -1, -1):\n                for j in range(m-1, -1, -1):\n                    pmax3[i][j] = [(board[i][j], i)]\n                    if i + 1 < n:\n                        pmax3[i][j] = arrmax(pmax3[i][j], pmax3[i+1][j])\n                    if j + 1 < m:\n                        pmax3[i][j] = arrmax(pmax3[i][j], pmax3[i][j+1])\n\n            for i in range(n):\n                for j in range(m-1, -1, -1):\n                    pmax4[i][j] = [(board[i][j], i)]\n                    if i - 1 >= 0:\n                        pmax4[i][j] = arrmax(pmax4[i][j], pmax4[i-1][j])\n                    if j + 1 < m:\n                        pmax4[i][j] = arrmax(pmax4[i][j], pmax4[i][j+1])\n\n#             print()\n#             for row in pmax1:\n#                 print(row)\n#             print()\n\n#             print()\n#             for row in pmax2:\n#                 print(row)\n#             print()\n\n#             print()\n#             for row in pmax3:\n#                 print(row)\n#             print()\n\n#             print()\n#             for row in pmax4:\n#                 print(row)\n#             print()\n\n            maxres = SMALL\n\n            for i in range(n):\n                for j in range(m):\n                    \n                    \n                    \n                    arr = []\n                    if i - 1 >= 0 and j - 1 >= 0:\n                        arr.append(pmax1[i-1][j-1][0][0])\n                    # if i + 1 < n and j - 1 >= 0:\n                    #     arr.append(pmax2[i+1][j-1])\n\n                    if i + 1 < n and j + 1 < m:\n                        arr.append(pmax3[i+1][j+1][0][0])\n                    # if i - 1 >= 0 and j + 1 < m:\n                    #     arr.append(pmax4[i-1][j+1])\n\n                    if len(arr) >= 2:\n                        arr.sort()\n                        # print(board[i][j], arr, \"x\")\n                        res = board[i][j] + arr[-1] + arr[-2]\n                        maxres = max(maxres, res)\n                        \n                        \n                    arr = []\n                    # if i - 1 >= 0 and j - 1 >= 0:\n                    #     arr.append(pmax1[i-1][j-1][0][0])\n                    if i + 1 < n and j - 1 >= 0:\n                        arr.append(pmax2[i+1][j-1][0][0])\n\n                    # if i + 1 < n and j + 1 < m:\n                    #     arr.append(pmax3[i+1][j+1][0][0])\n                    if i - 1 >= 0 and j + 1 < m:\n                        arr.append(pmax4[i-1][j+1][0][0])\n\n                    if len(arr) >= 2:\n                        arr.sort()\n                        # print(board[i][j], arr, \"x\")\n                        res = board[i][j] + arr[-1] + arr[-2]\n                        maxres = max(maxres, res)\n                        \n                        \n                        \n                    if i - 1 >= 0 and j - 1 >= 0:\n                        if i - 1 >= 0 and j + 1 < m:\n                            combarr = arrmax2(pmax1[i-1][j-1], pmax4[i-1][j+1])\n                            # print(board[i][j], combarr, pmax1[i-1][j-1], pmax4[i-1][j+1])\n                            res = board[i][j] + combarr\n                            maxres = max(maxres, res)\n                    \n                    if i + 1 < n and j + 1 < m:\n                        if i + 1 < n and j - 1 >= 0:\n                            combarr = arrmax2(pmax3[i+1][j+1], pmax2[i+1][j-1])\n                            # print(board[i][j], combarr, pmax3[i+1][j+1], pmax2[i+1][j-1])\n                            res = board[i][j] + combarr\n                            maxres = max(maxres, res)\n            \n            return maxres\n        \n        res2 = SMALL\n        res1 = solve(board)\n        board = [list(row) for row in zip(*board)]\n        res2 = solve(board)\n        \n        return max(res1, res2)\n        ",
    "submit_ts": "1723909004",
    "subm_id": "556333988"
}