{
    "username": "saichandan68",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m=grid[0].size();\n        unordered_map<int, int> mp4, mp2;\n        int twoCnt=0, oneCnt=0, mid=0;\n        for(int i=0; i<n/2+(n%2); i++){\n            int l=0, r=m-1;\n            while(l<=r){\n                int cnt=0;\n                if(i==n-1-i and l==r){\n                    mid+= grid[i][l];\n                }\n                else if(l==r or i==n-1-i){\n                    if(l==r) cnt+= grid[i][l]+grid[n-1-i][l];\n                    else cnt+= grid[i][l]+grid[i][r];\n                    mp2[cnt]++;\n                    if(cnt==2) twoCnt+=2;\n                    if(cnt==1) oneCnt++;\n                }\n                else{\n                    cnt+= grid[i][l]+grid[i][r];\n                    cnt+= grid[n-1-i][l]+grid[n-1-i][r];\n                    mp4[cnt]++;\n                }\n                l++, r--;\n            }\n        }\n        int ans=0;\n        for(auto i : mp4){\n            // cout << i.first << endl;\n            if(i.first >0 and i.first<4){\n                ans+= min(i.first-0, 4-i.first)*i.second;\n            }\n        }\n        if(oneCnt>0) ans+= oneCnt;\n        else if(twoCnt%4) ans+=2;\n        return ans+mid;\n    }\n};",
    "submit_ts": "1722699812",
    "subm_id": "1343223107"
}