{
    "username": "prince_raiyani",
    "submission": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    private int[] fenwickTree;\n    private int n;\n\n    public List<Integer> countOfPeaks(int[] nums, int[][] queries) {\n        List<Integer> result = new ArrayList<>();\n        n = nums.length;\n        fenwickTree = new int[n + 1];\n\n        // Initialize the Fenwick Tree with the initial peaks\n        for (int i = 1; i < n - 1; i++) {\n            if (isPeak(nums, i)) {\n                updateFenwickTree(i, 1);\n            }\n        }\n\n        // Process each query\n        for (int[] query : queries) {\n            if (query[0] == 1) { // Count peaks in the subarray\n                int l = query[1];\n                int r = query[2];\n                if (r - l < 2) {\n                    result.add(0);\n                } else {\n                    result.add(queryFenwickTree(r - 1) - queryFenwickTree(l));\n                }\n            } else if (query[0] == 2) { // Update the element\n                int index = query[1];\n                int val = query[2];\n\n                // Update peaks around the index\n                for (int i = Math.max(1, index - 1); i <= Math.min(n - 2, index + 1); i++) {\n                    if (isPeak(nums, i)) {\n                        updateFenwickTree(i, -1);\n                    }\n                }\n\n                nums[index] = val;\n\n                for (int i = Math.max(1, index - 1); i <= Math.min(n - 2, index + 1); i++) {\n                    if (isPeak(nums, i)) {\n                        updateFenwickTree(i, 1);\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    private boolean isPeak(int[] arr, int i) {\n        return i > 0 && i < arr.length - 1 && arr[i] > arr[i - 1] && arr[i] > arr[i + 1];\n    }\n\n    private void updateFenwickTree(int index, int delta) {\n        index++;\n        while (index <= n) {\n            fenwickTree[index] += delta;\n            index += index & -index;\n        }\n    }\n\n    private int queryFenwickTree(int index) {\n        index++;\n        int sum = 0;\n        while (index > 0) {\n            sum += fenwickTree[index];\n            index -= index & -index;\n        }\n        return sum;\n    }\n}\n",
    "submit_ts": "1718508499",
    "subm_id": "1289683026"
}