{
    "username": "remineva",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        n = len(points)\n\n        s = []\n        d = []\n        for i in range(n):\n            x, y = points[i]\n            s.append((x + y, i))\n            d.append((x - y, i))\n        s.sort()\n        d.sort()\n        su = set()\n        sl = set()\n        M = s[-1][0]\n        for i in range(n - 1, -1, -1):\n            if s[i][0] == M:\n                su.add(s[i][1])\n            else:\n                break\n        m = s[0][0]\n        for i in range(n):\n            if s[i][0] == m:\n                sl.add(s[i][1])\n            else:\n                break\n        if len(su) != 1:\n            supper = M\n        else:\n            supper = s[-2][0]\n        if len(sl) != 1:\n            slower = m\n        else:\n            slower = s[1][0]\n            \n        du = set()\n        dl = set()\n        dM = d[-1][0]\n        for i in range(n - 1, -1, -1):\n            if d[i][0] == dM:\n                du.add(d[i][1])\n            else:\n                break\n        dm = d[0][0]\n        for i in range(n):\n            if d[i][0] == dm:\n                dl.add(d[i][1])\n            else:\n                break\n        if len(du) != 1:\n            dupper = dM\n        else:\n            dupper = d[-2][0]\n        if len(dl) != 1:\n            dlower = dm\n        else:\n            dlower = d[1][0]\n            \n            \n        res = max(M - m, dM - dm)\n        \n        if len(su) == 1:\n            curr = supper - m\n            if len(du) == 1 and du == su:\n                temp = dupper - dm\n            elif len(dl) == 1 and dl == su:\n                temp = dM - dlower\n            else:\n                temp = dM - dm\n            curr = max(curr, temp)\n            res = min(res, curr)\n                \n        if len(sl) == 1:\n            curr = M - slower\n            if len(du) == 1 and du == sl:\n                temp = dupper - dm\n            elif len(dl) == 1 and dl == sl:\n                temp = dM - dlower\n            else:\n                temp = dM - dm\n            curr = max(curr, temp)\n            res = min(res, curr)\n            \n        if len(du) == 1:\n            curr = dupper - dm\n            if len(su) == 1 and du == su:\n                temp = supper - m\n            elif len(sl) == 1 and sl == du:\n                temp = M - slower\n            else:\n                temp = M - m\n            curr = max(curr, temp)\n            res = min(res, curr)\n            \n        if len(dl) == 1:\n            curr = dM - dlower\n            if len(su) == 1 and dl == su:\n                temp = supper - m\n            elif len(sl) == 1 and sl == dl:\n                temp = M - slower\n            else:\n                temp = M - m\n            curr = max(curr, temp)\n            res = min(res, curr)\n        \n        return res"
}