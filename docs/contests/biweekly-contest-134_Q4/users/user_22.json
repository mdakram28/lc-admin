{
    "username": "admiring-matsumotomgs",
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define len(x) ((int)((x).size()))\n#define PQ priority_queue\n#define all(x) (x).begin(), (x).end()\n// #define endl '\\n'\n\nusing ll = long long;\nusing ld = long double;\n\nconst array<int, 8> dx{0, -1, 0, 1, 1, 1, -1, -1};\nconst array<int, 8> dy{1, 0, -1, 0, 1, -1, 1, -1};\n\nmt19937_64 mrand(random_device{}());\ntemplate <typename T>\nstruct SparseTable {\n    vector<vector<T>> st;\n    vector<int> logT;\n    using func = function<T(T, T)>;\n    func f;\n    int N;\n    // \u4f20\u9012\u6570\u7ec4\uff0c\u51fd\u6570\n    SparseTable(vector<T> &a, func f1) {\n        N = len(a);\n        int logN = log2(N) + 1;\n        f = f1;\n        st.resize(N);\n        logT.resize(N + 1);\n        for (int i = 0; i < N; i++) {\n            st[i].resize(logN);\n            st[i][0] = a[i];\n        }\n        for (int i = 2; i <= N; i++) {\n            logT[i] = logT[i >> 1] + 1;\n        }\n        for (int j = 1; (1 << j) <= N; j++) {\n            for (int i = 0; i + (1 << j) - 1 < N; i++) {\n                st[i][j] = f(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n            }\n        }\n    }\n\n    // \u533a\u95f4\u67e5\u8be2\n    T query(int left, int right) {\n        // left<=right\n        assert(left <= right);\n        int k = logT[right - left + 1];\n        return f(st[left][k], st[right - (1 << k) + 1][k]);\n    }\n};\nclass Solution {\npublic:\n    long long countSubarrays(vector<int>& a, int k) {\n        int N = len(a);\n        SparseTable<int> and_a(a, [&](int x, int y)->int{\n            return x&y;\n        });\n            ll ans=0;\n        for (int i = 0; i < N; i++) {\n            int left = i;\n            int right = N - 1;\n            while (left < right) {\n                int mid = (left + right) / 2;\n                if (and_a.query(i, mid) <= k) {\n                    right = mid;\n                } else left = mid + 1;\n            }\n            if (and_a.query(i, left) != k)\n                continue;\n            int pre=left;\n            right = N - 1;\n            while (left < right) {\n                int mid = (left + right + 1) / 2;\n                if (and_a.query(i, mid) == k) {\n                    left = mid;\n                } else right = mid - 1;\n            }\n            ans+=left-pre+1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720277316",
    "subm_id": "544555835"
}