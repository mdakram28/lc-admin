{
    "username": "luojh",
    "submission": "class Solution {\n    public int minimumDistance(int[][] ps) {\n        int n=ps.length;\n        int res=Integer.MAX_VALUE/2;\n        \n        TreeMap<Integer,Integer>[] ts=new TreeMap[4];\n        for(int i=0;i<4;i++){\n            ts[i]=new TreeMap();\n        }\n        for(int i=0;i<n;i++){\n            int[] cv=new int[4];\n            cv[0]=ps[i][0]+ps[i][1];\n            cv[1]=ps[i][0]-ps[i][1];\n            cv[2]=-ps[i][0]+ps[i][1];\n            cv[3]=-ps[i][0]-ps[i][1];\n            \n            for(int j=0;j<4;j++){\n                ts[j].put(cv[j],ts[j].getOrDefault(cv[j],0)+1);\n            }\n        }\n        \n        for(int i=0;i<n;i++){\n            int[] cv=new int[4];\n            cv[0]=ps[i][0]+ps[i][1];\n            cv[1]=ps[i][0]-ps[i][1];\n            cv[2]=-ps[i][0]+ps[i][1];\n            cv[3]=-ps[i][0]-ps[i][1];\n            \n            for(int j=0;j<4;j++){\n                int cc=ts[j].get(cv[j]);\n                if(cc==1){\n                    ts[j].remove(cv[j]);\n                }else{\n                    ts[j].put(cv[j],cc-1);\n                }\n            }\n            int cmax=0;\n            for(int j=0;j<4;j++){\n                int first=ts[j].firstKey(),last=ts[j].lastKey();\n                cmax=Math.max(cmax,last-first);\n            }\n            res=Math.min(res,cmax);\n            \n            for(int j=0;j<4;j++){\n                ts[j].put(cv[j],ts[j].getOrDefault(cv[j],0)+1);\n            }\n            \n        }\n        \n        \n        return res;\n    }\n}"
}