{
    "username": "rroushan14",
    "submission": "class Solution {\npublic:\n    bool bfs(const vector<vector<int>>& graph, int start, int t1, int t2, int n) {\n        queue<int> q;\n        vector<int> visit(n + 4, 0);\n        q.push(start);\n        visit[start] = 1;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : graph[u]) {\n                if (!visit[v]) {\n                    q.push(v);\n                    visit[v] = 1;\n                }\n            }\n        }\n        return visit[t1] || visit[t2];\n    }\n\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> graph(n + 4);\n\n        for (int i = 0; i < n; ++i) {\n            int x = circles[i][0], y = circles[i][1], r = circles[i][2];\n            if (x <= r) {\n                graph[n].push_back(i);\n                graph[i].push_back(n);\n            }\n            if (X - x <= r) {\n                graph[n + 2].push_back(i);\n                graph[i].push_back(n + 2);\n            }\n            if (y <= r) {\n                graph[n + 1].push_back(i);\n                graph[i].push_back(n + 1);\n            }\n            if (Y - y <= r) {\n                graph[n + 3].push_back(i);\n                graph[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                int xj = circles[j][0], yj = circles[j][1], rj = circles[j][2];\n                long long distSq = static_cast<long long>(x - xj) * (x - xj) + static_cast<long long>(y - yj) * (y - yj);\n                long long combinedRadius = static_cast<long long>(r + rj);\n                if (combinedRadius * combinedRadius >= distSq) {\n                    graph[i].push_back(j);\n                    graph[j].push_back(i);\n                }\n            }\n        }\n\n        bool blocked = false;\n        blocked = blocked || bfs(graph, n, n + 1, n + 2, n + 4);\n        blocked = blocked || bfs(graph, n + 3, n + 2, n + 1, n + 4);\n\n        return !blocked;\n    }\n};\n",
    "submit_ts": "1722139155",
    "subm_id": "1335809389"
}