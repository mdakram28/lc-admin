{
    "username": "singh_deopa",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        int n = (int) nums.size();\n        vector<int> f(31);\n        int l = 0, r = 0;\n        int val = 0, res = INT_MAX;\n        \n        while (l < n) {\n            r = max(r, l);\n            \n            if (l == r) {\n                 val = nums[l];\n            }\n            \n            while (r < n && (val & nums[r]) >= k) {\n                val &= nums[r];\n                assert(val >= k);\n                res = min(res, val - k);\n                \n                for (int i = 0; i < 31; i++) {\n                    if ((nums[r] >> i) & 1) {\n                        f[i]++;\n                    }\n                }\n                \n                r++;\n            }\n            \n            if (r == n) {\n                break;\n            }\n            \n            if (r < n) {\n                assert((val & nums[r]) < k);\n                res = min(res, k - (nums[r] & val));\n            }\n            \n            if (l != r) {\n                for (int i = 0; i < 31; i++) {\n                    if ((nums[l] >> i) & 1) {\n                        f[i]--;\n                    }\n                }\n            }\n            \n            // cout << l << \" \" << r << \" \" << res;\n            l++;\n            val = 0;\n            \n            if (l < r) {\n                for (int i = 0; i < 31; i++) {\n                    if (f[i] == r - l) {\n                        assert(f[i] > 0);\n                        val |= (1 << i);\n                    }\n                }\n            }\n            \n            // cout << \" \" << val << \"\\n\";\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": 1717298203.0
}