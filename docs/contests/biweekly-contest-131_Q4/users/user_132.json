{
    "username": "newhar",
    "submission": "class Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        int n = 3 * queries.size() + 5;\n        map<int,int> ranges;\n        \n        int tr[n+5];\n        memset(tr, 0, sizeof(tr));\n        auto add = [&](int x, int v) {\n            x++;\n            while(x < n) {\n                tr[x] = max(tr[x], v);\n                x += (x & -x);\n            }\n        };\n        auto query = [&](int x) -> int {\n            x++;\n            int res = 0;\n            while(x) {\n                res = max(res, tr[x]);\n                x -= (x & -x);\n            }\n            return res;\n        };\n        \n        int f[n+5];\n        memset(f, 0, sizeof(f));\n        for(const auto& q : queries) {\n            if(q[0] == 1) f[q[1]] = 1;\n        }\n        \n        for(int i = 0; i < n;) {\n            int j = i+1;\n            while(j < n && f[j] == 0) ++j;\n            ranges[i] = j-i;\n            add(i, j-i);\n            i = j;\n        }\n        \n        reverse(queries.begin(), queries.end());\n        \n        vector<bool> res;\n        for(const auto& q : queries) {\n            if(q[0] == 2) {\n                int x = q[1];\n                auto it = --ranges.upper_bound(x);\n                int y = max(x - it->first, query(it->first - 1));\n                y = min(y, x);\n                res.push_back(y >= q[2]);\n            } else {\n                int x = q[1];\n                auto it2 = ranges.find(x);\n                auto it = prev(it2, 1);\n                it->second += it2->second;\n                \n                add(it->first, it->second);\n                ranges.erase(it2);\n            }\n        }\n        \n        reverse(res.begin(), res.end());\n        return res;\n    }\n};",
    "submit_ts": "1716650049",
    "subm_id": "534769291"
}