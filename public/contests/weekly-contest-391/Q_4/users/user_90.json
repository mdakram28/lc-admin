{
    "username": "_Danie1",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def get_max_distance(points):\n            return max(max(x + y for x, y in points) - min(x + y for x, y in points), max(x - y for x, y in points) - min(x - y for x, y in points))\n        def try_point(point):\n            points2 =  points.copy()\n            points2.pop(points2.index(point)) \n            return get_max_distance(points2)\n        best = 10 ** 10\n        best = min(best, try_point(max(points, key=lambda p: p[0] + p[1])))\n        best = min(best, try_point(min(points, key=lambda p: p[0] + p[1])))\n        best = min(best, try_point(max(points, key=lambda p: p[0] - p[1])))\n        best = min(best, try_point(min(points, key=lambda p: p[0] - p[1])))\n        return best"
}