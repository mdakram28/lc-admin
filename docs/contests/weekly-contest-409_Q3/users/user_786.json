{
    "username": "chshda",
    "submission": "using ll = long long;\n\nstruct STN { ll sum, lazy; };\nstruct ST {\n    ll mn, mx;\n    vector<STN> a;\n    ST(ll mn = 0, ll mx = 1e5) : mn(mn), mx(mx), a(vector<STN>((mx - mn) * 4)){};\n\n    void build(vector<ll> &v) { build(1, mn, mx, v); }\n    void replace(ll l, ll r, ll d) { replace(1, mn, mx, l, r, d); }\n    ll query(ll l, ll r) { return query(1, mn, mx, l, r); }\n\n    inline void build(ll k, ll l, ll r, vector<ll> &v) {\n        if (l == r) { a[k] = {v[l]}; return; }\n        ll lc = k << 1, rc = lc | 1, m = (l + r) >> 1;\n        build(lc, l, m, v);\n        build(rc, m + 1, r, v);\n        pushup(k, lc, rc);\n    }\n    inline void replace(ll k, ll l, ll r, ll L, ll R, ll D) {\n        if (l == r) {\n            a[k].sum = (r - l + 1) * D; return; \n        }\n        if (L <= l && r <= R) {\n            a[k].sum = (r - l + 1) * D, a[k].lazy = D==0 ? -1 : D;\n            return;\n        }\n        pushdown(k, l, r);\n        ll lc = k << 1, rc = lc | 1, m = (l + r) >> 1;\n        if (m >= L) replace(lc, l, m, L, R, D);\n        if (m + 1 <= R) replace(rc, m + 1, r, L, R, D);\n        pushup(k, lc, rc);\n    }\n    inline void pushdown(ll k, ll l, ll r) {\n        auto &lazy = a[k].lazy;\n        if (!lazy) return;\n        ll lc = k << 1, rc = lc | 1, m = (l + r) >> 1;\n        a[lc].lazy = lazy, a[lc].sum = (m - l + 1) * (lazy==-1 ?0 : lazy);\n        a[rc].lazy = lazy, a[rc].sum = (r - (m+1) + 1) * (lazy==-1 ? 0 : lazy);\n        lazy = 0;\n    }\n    inline void pushup(ll k, ll lc, ll rc) {\n        a[k].sum = a[lc].sum + a[rc].sum;\n    }\n    inline ll query(ll k, ll l, ll r, ll L, ll R) {\n        if (L <= l && r <= R) return a[k].sum;\n        pushdown(k, l, r);\n        ll lc = k << 1, rc = lc | 1, m = (l + r) >> 1, ans = 0;\n        if (m >= L) ans += query(lc, l, m, L, R);\n        if (m + 1 <= R) ans += query(rc, m + 1, r, L, R);\n        return ans;\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        vector<ll> v(n);\n        for (int i = 1; i < n; i++) v[i] = 1;\n        ST st(0, n-1);\n        st.build(v);\n\n        vector<int>ans(queries.size());\n        for (int i = 0; i < queries.size(); i++) {\n            auto &q = queries[i];\n            int u = q[0], v= q[1];\n            if (st.query(v, v) != 0) st.replace(v, v, 1);\n            if (u+1 <= v-1) st.replace(u+1, v-1, 0);\n            ans[i] = st.query(0, n-1);\n            // for (int i = 0; i < n; i++) cout << st.query(i, i) << \" \" ; cout << endl;\n        }\n        return ans;\n    }\n};\n",
    "submit_ts": "1722741888",
    "subm_id": "552341123"
}