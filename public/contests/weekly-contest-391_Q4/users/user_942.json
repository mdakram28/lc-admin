{
    "username": "__ARYAN1__",
    "submission": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define mod 1000000007\n\n#define ll long long\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define vi vector<int>\n#define vb vector<bool>\n#define vvi vector<vector<int>>\n#define vvb vector<vector<bool>>\n#define vvc vector<vector<char>>\n#define vvll vector<vector<long long int>>\n#define vc vector<char>\n#define vll vector<long long>\n#define mii map<int, int>\n#define umii unordered_map<int, int>\n#define si set<int>\n#define rep(i, s, e) for (ll i = s; i <= e; i++)\n#define ren(i, s, e) for (ll i = s; i >= e; i--)\n\nclass Solution {\npublic:\n    vi f(vvi &a, int ignore)\n    {\n        int n = a.size();\n\n        int mins, maxs, mind, maxd, max_s, min_s, max_d, min_d;\n        \n        if(ignore != 0){\n            mins = maxs = a[0][0] + a[0][1];\n            mind = maxd = a[0][0] - a[0][1];   \n            max_s = 0, min_s = 0, max_d = 0, min_d = 0;\n            \n        }\n        else{\n            mins = maxs = a[1][0] + a[1][1];\n            mind = maxd = a[1][0] - a[1][1];   \n            max_s = 1, min_s = 1, max_d = 1, min_d = 1;  \n        }\n        \n        for (int i = 1; i < n; i++) {\n            if(i == ignore) continue;\n\n            int sum = a[i][0] + a[i][1];\n            int diff = a[i][0] - a[i][1];\n            if (sum < mins){\n                min_s = i;\n                mins = sum;\n            }\n            else if (sum > maxs){\n                max_s = i;\n                maxs = sum;\n            }\n            if (diff < mind){\n                min_d = i;\n                mind = diff;\n            }\n            else if (diff > maxd){\n                max_d = i;\n                maxd = diff;\n            }\n        }\n\n        if(maxs - mins > maxd - mind){\n            return {maxs - mins, min_s, max_s};\n        } \n\n        return {maxd - mind, min_d, max_d};\n    }\n    int minimumDistance(vector<vector<int>>& points) {\n        vi help = f(points, -1);\n\n        vi opt1 = f(points, help[1]);\n        vi opt2 = f(points, help[2]);\n\n        return min(opt1[0], opt2[0]);\n    }\n};"
}