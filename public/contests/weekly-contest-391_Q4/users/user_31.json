{
    "username": "watashi",
    "submission": "class Solution {\npublic:\n  int dist(const vector<pair<int, int>>& v, int k) {\n    int i = 0, j = (int)v.size() - 1;\n    if (v[i].second == k) {\n      ++i;\n    }\n    if (v[j].second == k) {\n      --j;\n    }\n    return v[j].first - v[i].first;\n  }\n\n  int minimumDistance(vector<vector<int>>& points) {\n    int n = points.size();\n    vector<pair<int, int>> v1, v2;\n    for (int i = 0; i < n; ++i) {\n      int x = points[i][0], y = points[i][1];\n      v1.emplace_back(x + y, i);\n      v2.emplace_back(x - y, i);\n    }\n    sort(v1.begin(), v1.end());\n    sort(v2.begin(), v2.end());\n    int ret = numeric_limits<int>::max();\n    for (int i = 0; i < n; ++i) {\n      ret = min(ret, max(dist(v1, i), dist(v2, i)));\n    }\n    return ret;\n  }\n};"
}