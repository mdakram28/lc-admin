{
    "username": "Abeed_shaik",
    "submission": "template <typename C>\nvector<pair<typename C::value_type, int>> RunLengthEncoding(C& S) {\n    using T = typename C::value_type;\n    if (S.empty()) return {};\n    vector<pair<T, int>> ret;\n    T c = S[0];\n    int n = 1;\n    for (int i = 1; i < (int)S.size(); i++) {\n        if (S[i] == c)\n            n++;\n        else {\n            ret.emplace_back(c, n);\n            c = S[i], n = 1;\n        }\n    }\n    ret.emplace_back(c, n);\n    return ret;\n}\n\nclass Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        int n = nums.size();\n        vector<int> rem(n, 0), b(n, 0);\n        for(int i = 0; i < nums.size(); i++){\n            rem[i] = nums[i] - target[i];\n            b[i] = (rem[i] < 0) ? 1 : -1;\n            rem[i] = abs(rem[i]);\n        }\n        auto res = RunLengthEncoding(b);\n        int l = 0;\n        long long ret = 0;\n        for(auto [x, y]: res){\n            int prev = 0;\n            for(int i = l; i < l + y; i++) {\n                if(prev >= rem[i]) prev = rem[i];\n                else{\n                    ret += rem[i] - prev;\n                    prev = rem[i];\n                }\n            }\n            l += y;\n        }\n        \n        return ret;\n    }\n};",
    "submit_ts": "1721530474",
    "subm_id": "1327934620"
}