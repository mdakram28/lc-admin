{
    "username": "Jitender_52",
    "submission": "class Solution {\npublic:\n    \n    map<vector<int>, int> mp;\n    \n    int ways(int n, int last, int jump, int k)\n    {\n        int ans = 0;\n        if(n > k + 1)\n            return 0;\n        \n        if(mp.find({n, last, jump}) != mp.end())\n            return mp[{n, last, jump}];\n        \n        if(n == k)\n        {\n            ans++;\n        }\n        if(last == 0)\n        {\n            ans += ways(n + (1 << jump), 1, jump + 1, k);\n        }\n        else\n        {\n            ans += ways(n + (1 << jump), 1, jump + 1, k);\n            if(n != 0)\n                ans += ways(n-1, 0, jump, k);\n        }\n        return mp[{n, last, jump}] = ans;\n    }\n    \n    int waysToReachStair(int k) {\n        return ways(1, 1, 0, k);\n    }\n};",
    "submit_ts": "1716088132",
    "subm_id": "1261804943"
}