{
    "username": "coderdayaj",
    "submission": "class Solution {\n    public int solve(int[][] grid , int a , int b , int c , int d) {\n        int s1 = Integer.MAX_VALUE;\n        int s2 = Integer.MAX_VALUE;\n        int e1 = Integer.MIN_VALUE;\n        int e2 = Integer.MIN_VALUE;\n        boolean all_0 = true;\n        for(int i= a ; i <= c ; i++){\n            for(int j = b ; j <= d ; j++){\n                if(grid[i][j] == 1){\n                    all_0 = false;\n                    s1 = Math.min(s1 , i);\n                    s2 = Math.min(s2 , j);\n                    e1 = Math.max(e1 , i);\n                    e2 = Math.max(e2 , j);\n                }\n            }\n        }\n        if(all_0){return 0;}\n        return (e1-s1+1)*(e2-s2+1);\n        \n    }\n    public int solve2(int[][] grid , int a , int b , int c , int d){\n        int ans = Integer.MAX_VALUE;\n        int count1 = 0;\n        for(int i = 0 ; i < grid.length ; i++){\n            for(int j = 0 ; j < grid[0].length ; j++){\n                if(grid[i][j] == 1){count1++;}\n            }}\n        if(count1 == 2){return 2;}\n        for(int i = a ; i < c ; i++){\n            int rect1 = solve(grid , a , b , i , d);\n            int rect2 = solve(grid , i+1 , b , grid.length-1 , d);\n            ans = Math.min(ans , rect1 + rect2);\n        }\n        for(int j = b ; j < d ; j++){\n            int rect1 = solve(grid , a , b , c , j);\n            int rect2 = solve(grid , a , j+1 , c , d);\n            ans = Math.min(ans , rect1 + rect2);\n        }\n        return ans;\n    }\n    public int minimumSum(int[][] grid) {\n        int ans = Integer.MAX_VALUE;\n        int count1 = 0;\n        for(int i = 0 ; i < grid.length ; i++){\n            for(int j = 0 ; j < grid[0].length ; j++){\n                if(grid[i][j] == 1){count1++;}\n            }}\n        if(count1 == 3){return 3;}\n        for(int i = 0 ; i < grid.length ; i++){\n            for(int j = 0 ; j < grid[0].length ; j++){\n                if(i == grid.length-1){\n                    ans = Math.min(ans , solve(grid, 0 , 0 , i , j) + solve2(grid , 0 , j+1 , grid.length-1 , grid[0].length-1));\n                }\n                if(j == grid[0].length-1){\n                    ans = Math.min(ans , solve(grid, 0 , 0 , i , j) + solve2(grid , i+1 , 0 , grid.length-1 , grid[0].length-1));\n                }\n                \n                    int rect1 = solve(grid, 0 , 0 , i , j);\n                    int rect2_1 = solve(grid , 0 , j+1 , i , grid[0].length-1);\n                    int rect3_1 = solve(grid , i+1 , 0 , grid.length-1 , grid[0].length-1);\n                    int rect2_2 = solve(grid , 0 , j+1 , grid.length-1 , grid[0].length-1);\n                    int rect3_2 = solve(grid, i+1 , 0 , grid.length-1 , j);\n                    // System.out.println(rect1 + \" \" + rect2_1 + \" \" + rect3_1 + \" \" + rect2_2 + \" \" + rect3_2);\n                    ans = Math.min(ans , rect1+rect2_1+rect3_1);\n                    ans = Math.min(ans , rect1 + rect2_2 + rect3_2);\n                    \n            }\n        }\n        return ans;\n        \n    }\n}",
    "submit_ts": "1719114730",
    "subm_id": "1297352754"
}