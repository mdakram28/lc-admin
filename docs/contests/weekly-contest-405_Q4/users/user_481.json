{
    "username": "khanghn",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        n = len(target)\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n\n        word_dict = {}\n        for word, cost in zip(words, costs):\n            if word not in word_dict:\n                word_dict[word] = cost\n            else:\n                word_dict[word] = min(word_dict[word], cost)\n\n        for i in range(n):\n            if dp[i] == float('inf'):\n                continue\n            for word in word_dict:\n                length = len(word)\n                if i + length <= n and target[i:i+length] == word:\n                    dp[i + length] = min(dp[i + length], dp[i] + word_dict[word])\n\n        return dp[n] if dp[n] != float('inf') else -1",
    "submit_ts": "1720321955",
    "subm_id": "1312336771"
}