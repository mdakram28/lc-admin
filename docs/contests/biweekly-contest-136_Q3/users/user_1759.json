{
    "username": "ygor_ribeiro7",
    "submission": "class Solution {\npublic:\n    int n, m, rows, columns;\n\n    int minFlips(vector<vector<int>>& grid) {\n        n = grid.size(), m = grid[0].size();\n        rows = n/2, columns = m/2;\n        \n        int ans = 0;\n        for(int i=0;i<rows;i++){\n            for(int j=0;j<columns;j++){\n                int count1 = grid[i][j] + grid[i][m-1-j] + grid[n-1-i][j] + grid[n-1-i][m-1-j];\n                ans += min(4 - count1, count1);\n            }\n        }\n                \n        int uns = 0;\n        int esq = 0, dir = n-1, qtd = 0;\n        \n        if(m & 1){\n            while(esq < dir){\n                if(grid[esq][columns] == grid[dir][columns]){\n                    uns += (grid[esq][columns] == 1 ? 2 : 0);\n                }else{\n                    ans++;\n                    qtd++;\n                }\n                esq++, dir--;\n            }\n        }\n                \n        /*\n[[0,0,1],\n [0,0,1],\n [1,0,1],\n [1,0,0],\n [0,1,1]]\n        */\n        esq = 0, dir = m-1;\n        \n        if(n & 1){    \n            while(esq < dir){\n                if(grid[rows][esq] == grid[rows][dir]){\n                    uns += (grid[rows][esq] == 1 ? 2 : 0);\n                }else{\n                    ans++;\n                    qtd++;\n                }\n                esq++, dir--;\n            }\n        }\n        \n        if(uns % 4 != 0){\n            if(qtd == 0) ans+=2;\n        }\n        \n        if((n & 1) && (m & 1)){\n            ans += grid[rows][columns];\n        }\n        \n        return ans;\n         \n    }\n};",
    "submit_ts": "1722699321",
    "subm_id": "1343208103"
}