{
    "username": "Piyush7457",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long total = 0;\n        unordered_map<long long, long long> prevRes;\n\n        for (int i = 0; i < n; ++i) {\n            unordered_map<long long, long long>currRes;\n\n            if(nums[i]==k) {\n                ++total;\n            }\n            currRes[nums[i]] = 1;\n\n            for (const auto&entry:prevRes) {\n                long long combRes = entry.first & nums[i];\n                if (combRes== k) {\n                    total+=entry.second;\n                }\n                currRes[combRes]+=entry.second;\n            }\n\n            prevRes=currRes;\n        }\n\n        return total;\n    }\n};",
    "submit_ts": "1720279224",
    "subm_id": "1311742613"
}