{
    "username": "SahilSri630",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int ans = 0;\n\n        vector<int> check = {0,0,0};\n\n        if(n % 2 != 0 && m % 2 != 0)\n            if(grid[n/2][m/2] != 0) ans++;\n\n        if(n % 2 != 0){\n            int start = 0, end = m - 1;\n            while(start < end){\n                int sum = grid[n/2][start] + grid[n/2][end];\n                check[sum]++;\n                start++;\n                end--;\n            }\n        }\n\n        if(m % 2 != 0){\n            int start = 0, end = n - 1;\n            while(start < end){\n                int sum = grid[start][m/2] + grid[end][m/2];\n                check[sum]++;\n                start++;\n                end--;\n            }\n        }\n\n        if(check[2] % 2 != 0){\n            if(check[1] > 0) ans = ans + check[1];\n            else ans = ans + 2;\n        }\n\n        else ans = ans + check[1];\n\n        for(int row = 0; row < n / 2; row++){\n            for(int col = 0; col < m / 2; col++){\n                int sum = grid[row][col] + grid[n - row - 1][col] + grid[row][m - 1 - col] + grid[n - 1 - row][m - col - 1];\n\n                if(sum != 0 && sum != 4) ans = ans + min(sum, 4 - sum);\n            }\n        }\n\n        return ans;\n\n    }\n\n};",
    "submit_ts": "1722700355",
    "subm_id": "1343239346"
}