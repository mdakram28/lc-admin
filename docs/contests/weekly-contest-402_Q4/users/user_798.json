{
    "username": "Sahil_JJ",
    "submission": "class Segmentsahiltree {\nprivate:\n    vector<int> st;\n    int n;\n\n    void buildseg(const vector<int>& sahilv, int v, int sahiltl, int sahiltr) {\n        if (sahiltl == sahiltr) {\n            st[v] = isPeakinseg(sahilv, sahiltl) ? 1 : 0;\n        } else {\n            int sahiltm = (sahiltl + sahiltr) / 2;\n            buildseg(sahilv, v * 2, sahiltl, sahiltm);\n            buildseg(sahilv, v * 2 + 1, sahiltm + 1, sahiltr);\n            st[v] = st[v * 2] + st[v * 2 + 1];\n        }\n    }\n\n    int queryinseg(int v, int sahiltl, int sahiltr, int l, int r) {\n        if (l > r) return 0;\n        if (l == sahiltl && r == sahiltr) return st[v];\n        int sahiltm = (sahiltl + sahiltr) / 2;\n        return queryinseg(v * 2, sahiltl, sahiltm, l, min(r, sahiltm)) +\n               queryinseg(v * 2 + 1, sahiltm + 1, sahiltr, max(l, sahiltm + 1), r);\n    }\n\n    void updateinseg(int v, int sahiltl, int sahiltr, int pos, const vector<int>& sahilv) {\n        if (sahiltl == sahiltr) {\n            st[v] = isPeakinseg(sahilv, sahiltl) ? 1 : 0;\n        } else {\n            int sahiltm = (sahiltl + sahiltr) / 2;\n            if (pos <= sahiltm) {\n                updateinseg(v * 2, sahiltl, sahiltm, pos, sahilv);\n            } else {\n                updateinseg(v * 2 + 1, sahiltm + 1, sahiltr, pos, sahilv);\n            }\n            st[v] = st[v * 2] + st[v * 2 + 1];\n        }\n    }\n\n    bool isPeakinseg(const vector<int>& sahilv, int i) {\n        int n = sahilv.size();\n        return (i > 0 && i < n - 1 && sahilv[i] > sahilv[i - 1] && sahilv[i] > sahilv[i + 1]);\n    }\n\npublic:\n    Segmentsahiltree(const vector<int>& sahilv) {\n        n = sahilv.size();\n        st.resize(4 * n);\n        buildseg(sahilv, 1, 0, n - 1);\n    }\n\n    int queryinseg(int l, int r) {\n        return queryinseg(1, 0, n - 1, l, r);\n    }\n\n    void updateinseg(int pos, const vector<int>& sahilv) {\n        updateinseg(1, 0, n - 1, pos, sahilv);\n        if (pos > 0) updateinseg(1, 0, n - 1, pos - 1, sahilv);\n        if (pos < n - 1) updateinseg(1, 0, n - 1, pos + 1, sahilv);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& sahilv, vector<vector<int>>& q) {\n        Segmentsahiltree st(sahilv);\n        vector<int> sahilans;\n\n        for (auto it:q) {\n            if (it[0] == 1) {\n                int li = it[1];\n                int ri = it[2];\n                if (li == ri) {\n                    sahilans.push_back(0);\n                } else {\n                    sahilans.push_back(st.queryinseg(li + 1, ri - 1));\n                }\n            } else if (it[0] == 2) {\n                int index = it[1];\n                int val = it[2];\n                sahilv[index] = val;\n                st.updateinseg(index, sahilv);\n            }\n        }\n\n        return sahilans;\n    }\n};",
    "submit_ts": 1718508503.0
}