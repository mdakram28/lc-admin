{
    "username": "qu-shui",
    "submission": "class Solution {\n    struct BIT{\n        int n;\n        vector<int> a;\n        BIT(int _n): n(_n+3),a(n){}\n        int lb(int x){return x&-x;}\n        void add(int x,int y){\n            // printf(\"# %d %d\\n\",x,y);\n            for(++x;x<n;x+=lb(x)){\n                a[x]+=y;\n            }\n        }\n        int query(int x){\n            int res=0;\n            for(++x;x;x^=lb(x)){\n                res+=a[x];\n            }\n            return res;\n        }\n        int query(int l,int r){\n            return query(r)-query(l-1);\n        }\n    };\npublic:\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& q) {\n        int n=a.size();\n        BIT bit(n);\n        auto check=[&](int i){\n            if(i<=0||i>=n-1) return false;\n            if(a[i]>a[i-1]&&a[i]>a[i+1]) return true;\n            return false;\n        };\n        for(int i=0;i<n;i++){\n            if(check(i)) bit.add(i,1);\n        }\n        vector<int> res;\n        for(auto &qq:q){\n            int op=qq[0],l=qq[1],r=qq[2];\n            // for(int i=0;i<n;i++)\n            //     printf(\"%d \",bit.query(i,i));\n            // puts(\"\");\n            // for(int i=0;i<n;i++)\n            //     printf(\"%d \",a[i]);\n            // puts(\"\");\n            if(op==1){\n                int ans=bit.query(l,r);\n                if(check(l)) ans--;\n                if(l!=r&&check(r)) ans--;\n                res.push_back(ans);\n            }else{\n                if(check(l)) bit.add(l,-1);\n                if(check(l-1)) bit.add(l-1,-1);\n                if(check(l+1)) bit.add(l+1,-1);\n                a[l]=r;\n                if(check(l)) bit.add(l,1);\n                if(check(l-1)) bit.add(l-1,1);\n                if(check(l+1)) bit.add(l+1,1);\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1718506279",
    "subm_id": "539773958"
}