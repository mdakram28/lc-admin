{
    "username": "rajvir_singh",
    "submission": "class Solution {\nprivate:\n    bool valid(int idx, int n, vector<int> &nums){\n        if(idx == 0) {\n            return nums[idx] != nums[n-1] && nums[idx] != nums[(idx+1)%n];\n        }\n        return nums[idx] != nums[(idx+1)%n] && nums[idx] != nums[idx-1];\n    }\npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        int s = 0, e = 1, count = 0, n = colors.size();\n        while (e < n + k && s < n) {\n            int x = e, y = x % n;\n            while (colors[(y-1+n)%n] != colors[y]) {\n                if(x < -1+n+k){\n                    x++;\n                    y = x % n;\n                } else break;\n            }\n            count += max(x-s-k+1, 0);\n            s = x; e = s+1;\n        }\n        return count;\n    }\n};",
    "submit_ts": "1720281403",
    "subm_id": "1311823865"
}