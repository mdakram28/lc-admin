{
    "username": "Lwenkai",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        \n        ans = 0\n        \n        for i in range(n//2):\n            for j in range(m//2):\n                ones = 0\n                if grid[i][j]:\n                    ones += 1\n                if grid[n-i-1][j]:\n                    ones += 1\n                if grid[i][m-j-1]:\n                    ones += 1\n                if grid[n-i-1][m-j-1]:\n                    ones += 1\n                ans += min(ones, 4-ones)\n                \n        p, c = 0, 0\n        if n&1:\n            for j in range(m // 2):\n                if grid[n//2][m-j-1] != grid[n//2][j]:\n                    ans += 1\n                    p += 1\n                else:\n                    if grid[n//2][j] == 1:\n                        c += 1\n        \n        if m&1:\n            for i in range(n // 2):\n                if grid[i][m // 2] != grid[n - i - 1][m // 2]:\n                    ans += 1\n                    p += 1\n                else:\n                    if grid[i][m // 2] == 1:\n                        c += 1\n        \n        if n&1 and m&1 and grid[n//2][m//2]:\n            ans += 1\n        \n        if p == 0 and c&1:\n            ans += 2\n            \n        return ans",
    "submit_ts": "1722699824",
    "subm_id": "1343223476"
}