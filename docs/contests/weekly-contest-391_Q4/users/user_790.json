{
    "username": "AkameOuO",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        l1, l2 = [], []\n        for i,(x,y) in zip(count(),points):\n            l1.append((x+y,i))\n            l2.append((x-y,i))\n        # print(l1,l2)\n        l1.sort()\n        l2.sort()\n        # print(l1,l2)\n        res = float(\"inf\")\n        for i in range(len(points)):\n            l = []\n            for k in range(3):\n                if l1[k][1] == i:\n                    continue\n                if len(l) == 2:\n                    break\n                l.append(l1[k][0])\n            for k in range(-1,-4,-1):\n                if l1[k][1] == i:\n                    continue\n                if len(l) == 4:\n                    break\n                l.append(l1[k][0])\n            t = [\n                l[-1] - l[1],\n                l[-2] - l[0],\n                l[-1] - l[0],\n            ]\n            l = []\n            for k in range(3):\n                if l2[k][1] == i:\n                    continue\n                if len(l) == 2:\n                    break\n                l.append(l2[k][0])\n            for k in range(-1,-4,-1):\n                if l2[k][1] == i:\n                    continue\n                if len(l) == 4:\n                    break\n                l.append(l2[k][0])\n            t += [\n                l[-1] - l[1],\n                l[-2] - l[0],\n                l[-1] - l[0],\n            ]\n            res = min(res,max(t))\n        return res"
}