{
    "username": "changeme",
    "submission": "class Solution {\n    public int numberOfPermutations(int n, int[][] requirements) {\n        var dp = new long[n + 1][402];\n        dp[0][0] = 1;\n        var m = new HashMap<Integer, Integer>();\n        for (var r : requirements) {\n            m.put(r[0], r[1]);\n        }\n        for (int l = 1; l <= n; l++) {\n            for (int i = 0; i < l; i++) {\n                for (int k = i; k < 402; k++) {\n                    dp[l][k] = (dp[l][k] + dp[l - 1][k - i]) % 1_000_000_007;\n                }\n            }\n\n            var reqCount = m.get(l - 1);\n            if (reqCount != null) {\n                var t = dp[l][reqCount];\n                Arrays.fill(dp[l], 0);\n                dp[l][reqCount] = t;\n            }\n        }\n        var res = 0L;\n        for (long c : dp[n]) {\n            res = (res + c) % 1_000_000_007;\n        }\n        return (int) res;\n    }\n}",
    "submit_ts": "1719071650",
    "subm_id": "1296851269"
}