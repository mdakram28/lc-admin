{
    "username": "ocavue",
    "submission": "from typing import List\n\nDIR_M = 1\nDIR_N = 2\n\n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        cuts = []\n        for i, cut in enumerate(horizontalCut):\n            cuts.append((cut, DIR_M))\n        for i, cut in enumerate(verticalCut):\n            cuts.append((cut, DIR_N))\n        cuts.sort(reverse=True)\n\n        m_count = 1\n        n_count = 1\n\n        result = 0\n\n        for cut, dir in cuts:\n            if dir == DIR_M:\n                result += cut * n_count\n                m_count += 1\n            else:\n                result += cut * m_count\n                n_count += 1\n        return result\n\n ",
    "submit_ts": "1720925844",
    "subm_id": "1320268016"
}