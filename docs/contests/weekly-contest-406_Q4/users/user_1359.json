{
    "username": "shreyansharya",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        using ll = long long;\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int h_index = 0, v_index = 0;\n        ll total_cost = 0;\n        int h_pieces = 1, v_pieces = 1;\n        \n        while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n            if (horizontalCut[h_index] > verticalCut[v_index]) {\n                total_cost += horizontalCut[h_index] * v_pieces;\n                h_pieces++;\n                h_index++;\n            } else {\n                total_cost += verticalCut[v_index] * h_pieces;\n                v_pieces++;\n                v_index++;\n            }\n        }\n        \n        while (h_index < horizontalCut.size()) {\n            total_cost += horizontalCut[h_index] * v_pieces;\n            h_index++;\n        }\n        \n        while (v_index < verticalCut.size()) {\n            total_cost += verticalCut[v_index] * h_pieces;\n            v_index++;\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720925906",
    "subm_id": "1320269978"
}