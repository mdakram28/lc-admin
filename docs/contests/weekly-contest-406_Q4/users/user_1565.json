{
    "username": "qian-yu-qiao-mu",
    "submission": "class Solution:\n    def minimumCost(self, n: int, m: int, hc: List[int], vc: List[int]) -> int:\n\n        rv, cv = [], []\n        for i, x in enumerate(hc):\n            rv.append((x, i))\n        for j, x in enumerate(vc):\n            cv.append((x, j))\n        rv.sort(key = lambda x : (-x[0]))\n        cv.sort(key = lambda x : (-x[0]))\n        ans = 0\n        i, j = 0, 0\n        rn, cn = 1, 1\n        while i < n - 1 and j < m - 1:\n            if rv[i][0] >= cv[j][0]:\n                ans += rv[i][0] * cn\n                rn += 1\n                i += 1\n            else:\n                ans += cv[j][0] * rn\n                cn += 1\n                j += 1\n\n        while i < n - 1:\n            ans += rv[i][0] * cn\n            i += 1\n\n        while j < m - 1:\n            ans += cv[j][0] * rn\n            j += 1\n\n        return ans",
    "submit_ts": "1720926031",
    "subm_id": "546443586"
}