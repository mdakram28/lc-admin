{
    "username": "Dipanshu Pandey",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& grid) {\n        long long ans = -1e13;\n        int n = grid.size() , m = grid[0].size();\n        vector < vector <pair <int,int>> > greaterval(n);\n        \n        for(int i = 0;i<n;++i) {\n            for(int j = 0;j<m;++j) {\n                greaterval[i].push_back({grid[i][j] , j});\n            }\n            sort(greaterval[i].begin() , greaterval[i].end(), greater <pair <int,int>>());\n            while(greaterval[i].size() > 4) greaterval[i].pop_back();\n        }\n        for(int i = 0;i<n;++i) {\n            for(int j = i+1;j<n;++j) {\n                for(int k=j+1;k<n;++k) {\n                    for(auto a : greaterval[i]) {\n                        for(auto b : greaterval[j]) {\n                            if(a.second == b.second) continue;\n                            for(auto c : greaterval[k]) {\n                                if(c.second == a.second or c.second == b.second) continue;\n                                ans = max(ans , 1ll * (a.first + b.first) + 1ll * c.first);\n                                \n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723908855",
    "subm_id": "1359169886"
}