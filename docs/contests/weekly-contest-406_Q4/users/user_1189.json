{
    "username": "vigilant-northcutt",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n // \u5bf9\u5207\u5272\u7ebf\u5f00\u9500\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\n    sort(horizontalCut.begin(), horizontalCut.end(), greater<int>());\n    sort(verticalCut.begin(), verticalCut.end(), greater<int>());\n\n    long long totalCost = 0;\n    int hIndex = 0, vIndex = 0;\n    int horizontalPieces = 1, verticalPieces = 1;\n\n    // \u4ea4\u66ff\u8fdb\u884c\u6c34\u5e73\u548c\u5782\u76f4\u5207\u5272\n    while (hIndex < m - 1 && vIndex < n - 1) {\n        if (horizontalCut[hIndex] > verticalCut[vIndex]) {\n            totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalPieces;\n            horizontalPieces++;\n            hIndex++;\n        } else {\n            totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalPieces;\n            verticalPieces++;\n            vIndex++;\n        }\n    }\n\n    // \u5904\u7406\u5269\u4f59\u7684\u6c34\u5e73\u5207\u5272\n    while (hIndex < m - 1) {\n        totalCost += static_cast<long long>(horizontalCut[hIndex]) * verticalPieces;\n        horizontalPieces++;\n        hIndex++;\n    }\n\n    // \u5904\u7406\u5269\u4f59\u7684\u5782\u76f4\u5207\u5272\n    while (vIndex < n - 1) {\n        totalCost += static_cast<long long>(verticalCut[vIndex]) * horizontalPieces;\n        verticalPieces++;\n        vIndex++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720926112",
    "subm_id": "546444170"
}