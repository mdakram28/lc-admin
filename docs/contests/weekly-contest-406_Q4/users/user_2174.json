{
    "username": "abc225666",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n\n        priority_queue<pair<int, int>> pq;\n\n        for(int cost: horizontalCut) {\n            // total_hori_cost += cost;\n            pq.push({cost, 0});\n        }\n        for(int cost: verticalCut) {\n            // total_vert_cost += cost;\n            pq.push({cost, 1});\n        }\n\n        int hori_rate = 1;\n        int vert_rate = 1;\n\n        long long ans = 0;\n\n        while(!pq.empty()) {\n            auto [cost, dir] = pq.top();\n            pq.pop();\n\n            if(dir==0) {\n                ans += hori_rate * cost;\n                ++vert_rate;\n            } else {\n                ans += vert_rate * cost;\n                ++hori_rate;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926076",
    "subm_id": "1320275214"
}