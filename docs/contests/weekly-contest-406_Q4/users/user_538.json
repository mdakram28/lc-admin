{
    "username": "hdeutsch",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        num_rows, num_cols = 1, 1\n        horiz = [(n, 'H') for n in horizontalCut]\n        vert = [(n, 'V') for n in verticalCut]\n        all_cuts = sorted(horiz + vert)[::-1]\n        ans = 0\n\n        for cost, cut_dir in all_cuts:\n            # print(cost, cut_dir, 'ans inc', cost * (num_rows if cut_dir == 'V' else num_cols))\n            ans += cost * (num_rows if cut_dir == 'V' else num_cols)\n            if cut_dir == 'V': num_cols += 1\n            else: num_rows += 1\n        return ans",
    "submit_ts": "1720925331",
    "subm_id": "1320251038"
}