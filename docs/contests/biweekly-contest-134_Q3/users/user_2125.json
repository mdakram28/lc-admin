{
    "username": "akshay_ak27",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size() ;\n        for (int i=0; i<k-1; i++) {\n            a.push_back(a[i]) ;\n        }\n        n = a.size() ;\n        vector<int> adj (n, 0) ;\n        adj[0] = 1 ;\n        // cout<<adj[0]<<\" \";\n        for (int i=1; i<n; i++) {\n            if (a[i] != a[i-1]) adj[i] = 1 ;\n            // cout<<adj[i]<<\" \";\n        }\n        int cur = 0, ans = 0 ;\n        bool fl = 0 ;\n        for (int i=0; i<n; i++) {\n            if (cur >= k || (cur >= k-1 && fl))   ans ++ ;\n            if (adj[i] == 1) {\n                cur ++ ;\n            }\n            else {\n                fl = 1 ;\n                cur = 0 ;\n            }\n        }\n        if (cur >= k || (cur >= k-1 && fl))   ans ++ ;\n        return ans ;\n    }\n};",
    "submit_ts": "1720278797",
    "subm_id": "1311724653"
}