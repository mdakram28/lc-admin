{
    "username": "chenyxuan",
    "submission": "class Solution {\nprivate:\n    vector<vector<int> > g;\n    vector<int> f1;\n    vector<vector<int> > f2;\n    vector<int> f3;\n\n    void dfs1(int u, int fa) {\n        f1[u] = 0;\n        for(auto v : g[u]) {\n            if(v != fa) {\n                dfs1(v, u);\n                int vd = (v & 1 ? 1 : 2) + f1[v];\n                f1[u] = max(f1[u], vd);\n                f2[u].push_back(vd);\n            }\n        }\n        sort(f2[u].begin(), f2[u].end(), greater<int>());\n    }\n\n    void dfs2(int u, int fa) {\n        f3[u] = 0;\n        if(fa != -1) {\n            if(f2[fa].size() == 1) {\n                f3[u] = (fa & 1 ? 1 : 2) + f3[fa];\n            } else {\n                int ff = (f2[fa][0] == (u & 1 ? 1 : 2) + f1[u]) ? f2[fa][1] : f2[fa][0];\n                f3[u] = (fa & 1 ? 1 : 2) + max(f3[fa], ff);\n            }\n        }\n\n\n        for(auto v : g[u]) {\n            if(v != fa) {\n                dfs2(v, u);\n            }\n        }\n        \n    }\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        g.resize(n);\n        for(auto edge : edges) {\n            g[edge[0]].push_back(edge[1]);\n            g[edge[1]].push_back(edge[0]);\n        }\n\n        f1.resize(n);\n        f2.resize(n);\n        f3.resize(n);\n        dfs1(0, -1);\n        dfs2(0, -1);\n\n        vector<int> ans;\n        for(int i = 0; i < n; i++) {\n            ans.push_back(max(f1[i], f3[i]));\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722698415",
    "subm_id": "552270744"
}