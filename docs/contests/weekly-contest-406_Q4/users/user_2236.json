{
    "username": "anuranjani_",
    "submission": "\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, char>> temp;\n    for (int i = 0; i < m - 1; ++i) {\n        temp.push_back({horizontalCut[i], 'h'});\n    }\n    for (int j = 0; j < n - 1; ++j) {\n        temp.push_back({verticalCut[j], 'v'});\n        }\n    sort(temp.begin(), temp.end(), greater<pair<int, char>>());\n    int h_segments = 1;\n    int v_segments = 1;\n    long long min_total_cost = 0;\n    \n    for (auto& cut : temp) {\n        if (cut.second == 'h') {\n            min_total_cost += cut.first * v_segments;\n            h_segments++;\n        } else {\n            min_total_cost += cut.first * h_segments;\n            v_segments++;\n        }\n    }\n\n    return min_total_cost;\n    }\n};",
    "submit_ts": "1720926714",
    "subm_id": "1320294306"
}