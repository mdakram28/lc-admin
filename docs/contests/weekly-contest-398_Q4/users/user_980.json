{
    "username": "aditya4905",
    "submission": "class Solution {\npublic:\n    \n//     int func(int s,int jump,int k){\n        \n//         if(s!=0){\n//             int ans = func(s-1,jump,k);\n//             if(s+(1ll<<jump)<=k){\n//                 ans+= func(s+(1<<jump),jump+1,k);\n//             }\n//             if(s==k)\n//                 ans++;\n//             return ans;\n//         }\n//          if(s+(1ll<<jump)){\n//             return func(s+(1<<jump),jump+1,k);\n//          }\n//         return 0;\n//     }\n    map<pair<pair<int,int>,int>,int> mpp;\n    map<pair<pair<int,int>,int>,int> mpp1;\n    \n    int func(int su,int dest,int prev,int jump){\n        int ans = 0;\n        \n        if(mpp1[{{su,jump},prev}] )\n            return mpp[{{su,jump},prev}];\n        \n        if(su == dest)\n            ans++;\n        \n        if(su!=0 && prev)\n            ans += func(su-1,dest,0,jump);\n       \n        if((su+(1<<jump))<=dest+1)\n            ans += func(su+(1<<jump),dest,1,jump+1);\n        \n              mpp1[{{su,jump},prev}]=1;\n        return mpp[{{su,jump},prev}]=ans;\n    }\n    \n    int waysToReachStair(int k) {\n        return func(1,k,1,0);\n    }\n    \n};",
    "submit_ts": "1716089400",
    "subm_id": "1261841229"
}