{
    "username": "PyIsTheBestLang",
    "submission": "\nclass PreFixSumMatrix {\nprivate:\n    vector<vector<int>> pre;\n\npublic:\n    PreFixSumMatrix(vector<vector<int>>& mat) {\n        int m = mat.size();\n        int n = mat[0].size();\n        pre.resize(m + 1, vector<int>(n + 1, 0));\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                pre[i + 1][j + 1] = pre[i][j + 1] + pre[i + 1][j] - pre[i][j] + mat[i][j];\n            }\n        }\n    }\n\n    int query(int xa, int ya, int xb, int yb) {\n        return pre[xb + 1][yb + 1] - pre[xb + 1][ya] - pre[xa][yb + 1] + pre[xa][ya];\n    }\n};\n\nvector<vector<int>> dp(900*900, vector<int>(4, 901));\n\n\nclass Solution {\npublic:\n    int minimumSum(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        PreFixSumMatrix pre(grid);\n        // Base cases\n        for (int x1 = m - 1; x1 >= 0; --x1) {\n            for (int y1 = n - 1; y1 >= 0; --y1) {\n                for (int x2 = x1; x2 < m; ++x2) {\n                    for (int y2 = y1; y2 < n; ++y2) {\n                        vector<int> res = { 901, 901, 901, 901 };\n                        int cur = pre.query(x1, y1, x2, y2);\n                        if (cur == 0) {\n                            res[0] = 0;\n                            dp[(x1 * n + y1) * m * n + x2 * n + y2] = res;\n                            continue;\n                        }\n                        res[1] = (x2 - x1 + 1) * (y2 - y1 + 1);\n                        if (cur == (x2 - x1 + 1) * (y2 - y1 + 1)) {\n                            dp[(x1 * n + y1) * m * n + x2 * n + y2] = { 901, cur, cur, cur };\n                            continue;\n                        }\n\n                        for (int x = x1; x < x2; ++x) {\n                            auto& cur1 = dp[(x1 * n + y1) * m * n + x * n + y2];\n                            auto& cur2 = dp[((x + 1) * n + y1) * m * n + x2 * n + y2];\n                            for (int i = 0; i < 4; ++i) {\n                                if (cur1[i] == 901) continue;\n                                for (int j = 0; i + j < 4; ++j) {\n                                    res[i + j] = min(res[i + j], cur1[i] + cur2[j]);\n                                }\n                            }\n                        }\n\n                        for (int y = y1; y < y2; ++y) {\n                            auto& cur1 = dp[(x1 * n + y1) * m * n + x2 * n + y];\n                            auto& cur2 = dp[(x1 * n + y + 1) * m * n + x2 * n + y2];\n                            for (int i = 0; i < 4; ++i) {\n                                if (cur1[i] == 901) continue;\n                                for (int j = 0; i + j < 4; ++j) {\n                                    res[i + j] = min(res[i + j], cur1[i] + cur2[j]);\n                                }\n                            }\n                        }\n\n                        dp[(x1 * n + y1) * m * n + x2 * n + y2] = res;\n                    }\n                }\n            }\n        }\n        return dp[0 * m * n + (m - 1) * n + n - 1][3];\n    }\n};\n",
    "submit_ts": 1719114164.0
}