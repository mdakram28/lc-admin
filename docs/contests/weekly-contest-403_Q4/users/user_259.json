{
    "username": "shifwang",
    "submission": "class Solution:\n    \n    def minimumArea(self, grid: List[List[int]], a, b, c, d) -> int:\n        left, right, up, down = b, a, d, c\n        for i in range(a, b):\n            for j in range(c, d):\n                if grid[i][j] == 1:\n                    left = min(left, i)\n                    right = max(right, i)\n                    up = min(up, j)\n                    down = max(down, j)\n        return max(0, (1 + right - left) * (1 + down - up))\n    \n    def minimumSum(self, grid: List[List[int]]) -> int:\n        curr_max = 31 * 31\n        m, n = len(grid), len(grid[0])\n        \n        \n        \n        # =\n        for i in range(m):\n            for j in range(i, m):\n                curr_max = min(curr_max, self.minimumArea(grid, 0, i, 0, n) + self.minimumArea(grid, i, j, 0, n) + self.minimumArea(grid, j, m, 0, n))\n                #print(self.minimumArea(grid, 0, i, 0, n), self.minimumArea(grid, i, j, 0, n), self.minimumArea(grid, j, m, 0, n))\n        \n        # ||\n        for i in range(n):\n            for j in range(i, n):\n                curr_max = min(curr_max, self.minimumArea(grid, 0, m, 0, i) + self.minimumArea(grid, 0, m, i, j) + self.minimumArea(grid, 0, m, j, n))\n        # |-\n        for i in range(m):\n            for j in range(n):\n                curr_max = min(curr_max, self.minimumArea(grid, 0, i, 0, n) + self.minimumArea(grid, i, m, 0, j) + self.minimumArea(grid, i, m, j, n))\n        for i in range(m):\n            for j in range(n):\n                curr_max = min(curr_max, self.minimumArea(grid, i, m, 0, n) + self.minimumArea(grid, 0, i, 0, j) + self.minimumArea(grid, 0, i, j, n))\n        # -|\n        for i in range(n):\n            for j in range(m):\n                curr_max = min(curr_max, self.minimumArea(grid, 0, m, 0, i) + self.minimumArea(grid, 0, j, i, n) + self.minimumArea(grid, j, m, i, n))\n        for i in range(n):\n            for j in range(m):\n                curr_max = min(curr_max, self.minimumArea(grid, 0, m, i, n) + self.minimumArea(grid, 0, j, 0, i) + self.minimumArea(grid, j, m, 0, i))\n        return curr_max\n                \n        \n                \n        ",
    "submit_ts": 1719113378.0
}