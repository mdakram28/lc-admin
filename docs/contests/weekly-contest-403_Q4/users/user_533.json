{
    "username": "sairohan123",
    "submission": "class Solution {\npublic:\n    long long getMinCovRectArea(vector<vector<int>>&grid, int si, int sj, int ei, int ej){\n        if(si < 0 or sj < 0 or ei == grid.size() or ej == grid[0].size() or si > ei or sj > ej){\n            return INT_MAX;\n        }\n        bool one_found = false;\n        int mii = ei, mai = si, mij = ej, maj = sj;\n        for(int i = si; i <= ei; i++){\n            for(int j = sj; j <= ej; j++){\n                if(grid[i][j] == 0){\n                    continue;\n                }\n                if(!one_found){\n                    one_found = true;    \n                }\n                \n                mii = min(mii, i);\n                mai = max(mai, i);\n                mij = min(mij, j);\n                maj = max(maj, j);\n            }\n        }\n        if(!one_found){\n            return INT_MAX;\n        }\n        return (mai - mii + 1) * (maj - mij + 1);\n    }\n    int minimumSum(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        long long ans = INT_MAX;\n        for(int i = n - 1; i >= 0; i--){\n            auto ta = getMinCovRectArea(grid, i, 0, n - 1, m - 1);\n            for(int j = m - 1; j >= 0; j--){\n                auto fa = getMinCovRectArea(grid, 0, 0, i - 1, j - 1);\n                auto sa = getMinCovRectArea(grid, 0, j, i - 1, m - 1);\n                ans = min(ans, fa + sa + ta);\n            }\n            for(int i1 = n - 1; i1 >= 0; i1--){\n                auto fa = getMinCovRectArea(grid, 0, 0, i1 - 1, m - 1);\n                auto sa = getMinCovRectArea(grid, i1, 0, i - 1, m - 1);\n                ans = min(ans, fa + sa + ta);\n            }\n        }    \n        for(int j = m - 1; j >= 0; j--){\n            auto ta = getMinCovRectArea(grid, 0, j, n - 1, m - 1);\n            for(int i = n - 1; i >= 0; i--){\n                auto fa = getMinCovRectArea(grid, 0, 0, i - 1, j - 1);\n                auto sa = getMinCovRectArea(grid, i, 0, n - 1, j - 1);\n                ans = min(ans, fa + sa + ta);\n            }\n            for(int j1 =  j - 1; j1 >= 0; j1--){\n                auto fa = getMinCovRectArea(grid, 0, 0, n - 1, j1 - 1);\n                auto sa = getMinCovRectArea(grid, 0, j1, n - 1, j - 1);\n                ans = min(ans, fa + sa + ta);\n            }\n        }\n        // for(int i = 0; i < n; i++){\n        //     auto ta = getMinCovRectArea(grid, 0, 0, i, m - 1);\n        //     for(int j = 0; j < m; j++){\n        //         auto fa = getMinCovRectArea(grid, i, 0, n - 1, j - 1);\n        //         auto sa = getMinCovRectArea(grid, i, j, n - 1, m - 1);\n        //     }\n        // }\n        for(int i = n - 1; i >= 0; i--){\n            for(int j = m - 1; j >= 0; j--){\n                auto ta = getMinCovRectArea(grid, i, j, n - 1, m - 1);\n                \n                auto fa = getMinCovRectArea(grid, 0, 0, i - 1, m - 1);\n                auto sa = getMinCovRectArea(grid, i, 0, n - 1, j - 1);\n                ans = min(ans, fa + sa + ta);\n                \n                auto fa1 = getMinCovRectArea(grid, 0, 0, n - 1, j - 1);\n                auto sa1 = getMinCovRectArea(grid, 0, j, i - 1, m - 1);\n                ans = min(ans, fa1 + sa1 + ta);\n                \n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1719114682",
    "subm_id": "1297351797"
}