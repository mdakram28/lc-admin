{
    "username": "YEH_CHIA_KAI",
    "submission": "class Solution:\n    def minFlips(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n\n        out = 0\n\n        for i in range(m // 2):\n            for j in range(n // 2):\n                num_1 = grid[i][j] + grid[i][n - 1 - j] + grid[m - 1 - i][n - 1 - j] + grid[m - 1 - i][j]\n                \n                out += min(num_1, 4 - num_1)\n\n        flip = False\n\n        num_1 = 0\n\n        if m % 2 == 1:\n            i = m // 2\n\n            for j in range(n // 2):\n                if grid[i][j] != grid[i][n - 1 - j]:\n                    out += 1\n                    flip = True\n                else:\n                    num_1 += (grid[i][j] + grid[i][n - 1 - j])\n\n        if n % 2 == 1:\n            j = n // 2\n\n            for i in range(m // 2):\n                if grid[i][j] != grid[m - 1 - i][j]:\n                    out += 1\n                    flip = True\n                else:\n                    num_1 += (grid[i][j] + grid[m - 1 - i][j])\n\n        if num_1 % 4 != 0 and not flip:\n            out += 2\n\n        if m % 2 == 1 and n % 2 == 1:\n            out += grid[m // 2][n // 2]\n\n        return out",
    "submit_ts": "1722698016",
    "subm_id": "1343166846"
}