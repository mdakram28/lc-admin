{
    "username": "shivamp_07",
    "submission": "class Solution {\npublic:\n    void dfs(int u, int p, vector<vector<int>> &adj, vector<int> &dist){\n        for(auto &v: adj[u]){\n            if(v!=p){\n                dist[v]=1+dist[u];\n                dfs(v,u,adj,dist);\n            }\n        }\n    }\n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        int n=edges1.size()+1,m=edges2.size()+1;\n        if(n==1 && m==1) return 1;\n        vector<vector<int>> adj1(n),adj2(m);\n        for(int i=0;i<n-1;i++){\n            int u=edges1[i][0],v=edges1[i][1];\n            adj1[u].push_back(v);\n            adj1[v].push_back(u);\n        }\n        for(int i=0;i<m-1;i++){\n            int u=edges2[i][0],v=edges2[i][1];\n            adj2[u].push_back(v);\n            adj2[v].push_back(u);\n        }\n        int dia1=0,dia2=0;\n        if(n>1){\n        vector<int> dist1(n,0);\n        dfs(0,-1,adj1,dist1);\n        int root,maxi=0;\n        for(int i=0;i<n;i++){\n            if(dist1[i]>maxi){\n                maxi=dist1[i];\n                root=i;\n            }\n        }\n        vector<int> dist2(n,0);\n        dfs(root,-1,adj1,dist2);\n        dia1=*max_element(dist2.begin(),dist2.end());\n        }\n        cout<<dia1<<\" \";\n        if(m>1){\n        vector<int> dist3(m,0);\n        dfs(0,-1,adj2,dist3);\n        int maxi=0,root;\n        for(int i=0;i<m;i++){\n            if(dist3[i]>maxi){\n                maxi=dist3[i];\n                root=i;\n            }\n        }\n        vector<int> dist4(m,0);\n        dfs(root,-1,adj2,dist4);\n        dia2=*max_element(dist4.begin(),dist4.end());\n        }\n        // if(n==1) return dia2+1;\n        // if(m==1) return dia1+1;\n        int tp=((dia1+1)/2)+((dia2+1)/2)+1;\n        int ans=max({dia1,dia2,tp});\n        return ans;\n        // return 0;\n    }\n};",
    "submit_ts": 1719718832.0
}