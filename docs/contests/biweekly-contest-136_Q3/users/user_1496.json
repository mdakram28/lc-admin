{
    "username": "7oving-euler7ib",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int cnt = 0;\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                int one = 0;\n                int zero = 0;\n                if (grid[i][j] == 0)\n                    zero++;\n                if (grid[i][n - j - 1] == 0)\n                    zero++;\n                if (grid[m - i - 1][j] == 0)\n                    zero++;\n                if (grid[m - i - 1][n - j - 1] == 0)\n                    zero++;\n                one = 4 - zero;\n                cnt += Math.min(one, zero);\n            }\n        }\n\n        int cnt1 = 0;\n        int cnt2 = 0;\n        int sum1 = 0;\n        int sum2 = 0;\n        if (m % 2 == 1){\n            if (n % 2 == 0){\n                for (int j = 0; j < n / 2; j++){\n                    if (grid[m/2][j] != grid[m/2][n-j-1]){\n                        cnt1++;\n                    }\n                }\n                for (int j = 0; j < n; j++){\n                    if (grid[m/2][j] == 1){\n                        sum1++;\n                    }\n                }\n                return Math.max(cnt1, Math.min(sum1 % 4, 4 - sum1 % 4)) + cnt;\n            }\n\n            else {\n                // \u4e24\u4e2a\u5947\u6570\n                for (int i = 0; i < m / 2; i++){\n                    if (grid[i][n/2] != grid[m-i-1][n/2]){\n                        cnt1++;\n                    }\n                }\n                for (int i = 0; i < m; i++){\n                    if (grid[i][n/2] == 1){\n                        sum1++;\n                    }\n                }\n\n                for (int j = 0; j < n / 2; j++){\n                    if (grid[m/2][j] != grid[m/2][n-j-1]){\n                        cnt1++;\n                    }\n                }\n                for (int j = 0; j < n; j++){\n                    if (grid[m/2][j] == 1){\n                        sum1++;\n                    }\n                }\n\n                if (grid[m/2][n/2] == 1){\n                    sum1 -= 2;\n                    return cnt + 1 + Math.max(cnt1, Math.min(sum1 % 4, 4 - sum1 % 4));\n                }\n                else {\n                    return cnt + Math.max(cnt1, Math.min(sum1 % 4, 4 - sum1 % 4));\n                }\n            }\n        }\n        else {\n            // \u4e24\u4e2a\u5076\u6570\n            if (n % 2 == 0){\n                return cnt;\n            }\n            else {\n                for (int i = 0; i < m / 2; i++){\n                    if (grid[i][n/2] != grid[m-i-1][n/2]){\n                        cnt1++;\n                    }\n                }\n                for (int i = 0; i < m; i++){\n                    if (grid[i][n/2] == 1){\n                        sum1++;\n                    }\n                }\n                return Math.max(cnt1, Math.min(sum1 % 4, 4 - sum1 % 4)) + cnt;\n            }\n        }\n    }\n}",
    "submit_ts": "1722699068",
    "subm_id": "552273924"
}