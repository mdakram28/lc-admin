{
    "username": "sanskarsurekha28",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<int,int>> pq;\n        int horizontalPieces = 1;\n        int verticalPieces = 1;\n        long long ans = 0;\n\n        for(int i = 0; i < m-1; i++){\n            pq.push({horizontalCut[i],0});\n        }\n\n        for(int i = 0; i < n-1; i++){\n            pq.push({verticalCut[i],1});\n        }\n\n        while(!pq.empty()){\n            int cost = pq.top().first;\n            int isVertical = pq.top().second;\n            pq.pop();\n\n            if(isVertical){\n                ans += cost * horizontalPieces;\n                verticalPieces++;\n            }\n            else{\n                ans += cost * verticalPieces;\n                horizontalPieces++;\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720926077",
    "subm_id": "1320275244"
}