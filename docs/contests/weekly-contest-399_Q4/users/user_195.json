{
    "username": "adhishkancharla",
    "submission": "using ll = long long;\nconst ll mod = 1e9 + 7;\nstruct Node\n{\n    int l,r;\n    Node*lc;\n    Node*rc;\n    ll f0, f1, f2, f3;\n    \n    //[l, r]; [l + 1, r]; [l, r - 1]; [l + 1, r - 1];\n    \n    Node(int L,int R,vector<int>&nums)\n    {\n        l = L;\n        r = R;\n        if (l != r){\n            int mid = (l + r)/2;\n            lc = new Node(l,mid,nums);\n            rc = new Node(mid + 1,r,nums);\n            \n            f0 = max({lc->f0 + rc->f1, lc->f2 + rc->f0, lc->f2 + rc->f1});\n            f1 = max({lc->f1 + rc->f1, lc->f3 + rc->f0, lc->f3 + rc->f1});\n            f2 = max({lc->f0 + rc->f3, lc->f2 + rc->f2, lc->f2 + rc->f3});\n            f3 = max({lc->f1 + rc->f3, lc->f3 + rc->f2, lc->f3 + rc->f3});\n        }\n        else{\n            f0 = max(0,nums[l]);\n            f1 = f2 = f3 = 0;\n        }\n    }\n};\n\nvoid update(Node*root,int pos,int val)\n{\n    if (!(root->l <= pos and pos <= root->r))return;\n    if (root->l == root->r){\n        root->f0 = max(0,val);\n        root->f1 = root->f2 = root->f3 = 0;\n        return;\n    }\n    if (root->lc->l <= pos and pos <= root->lc->r)\n        update(root->lc,pos,val);\n    else\n        update(root->rc,pos,val);\n    \n    root->f0 = max({root->lc->f0 + root->rc->f1, root->lc->f2 + root->rc->f0, root->lc->f2 + root->rc->f1});\n    root->f1 = max({root->lc->f1 + root->rc->f1, root->lc->f3 + root->rc->f0, root->lc->f3 + root->rc->f1});\n    root->f2 = max({root->lc->f0 + root->rc->f3, root->lc->f2 + root->rc->f2, root->lc->f2 + root->rc->f3});\n    root->f3 = max({root->lc->f1 + root->rc->f3, root->lc->f3 + root->rc->f2, root->lc->f3 + root->rc->f3});\n}\n\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        //dp[i] = max(dp[i - 1], a[i] + dp[i - 2])\n        \n        ll ans = 0;\n        int n = (int)nums.size();\n        \n        Node*root = new Node(0,n - 1,nums);\n        \n        for (auto&it:queries){\n            int pos = it[0];\n            int val = it[1];\n            update(root,pos,val);\n            ll cur = max({root->f0,root->f1,root->f2,root->f3});\n            ans = (ans + cur)%mod;\n        }\n        return (ans%mod + mod)%mod;\n    }\n};",
    "submit_ts": 1716694101.0
}