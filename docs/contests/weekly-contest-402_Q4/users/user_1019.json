{
    "username": "bob314",
    "submission": "struct fenwicktree {\n    int n;\n    vector<int> t;\n\n    fenwicktree(vector<int> &in) {\n        n = in.size();\n        t.resize(n + 1);\n        for (int i = 0; i < n; i++) {\n            update(i+1, in[i]);\n        }\n    }\n\n    int sum(int x) {\n        int ret = 0;\n        while(x >= 1) {\n            ret += t[x];\n            x -= (x & -x);\n        }\n        return ret;\n    }\n\n    void update(int x, int v) {\n        while (x <= n) {\n            t[x] += v;\n            x += (x & -x);\n        }\n    }\n\n    int query(int l, int r) {\n        if (r < l) return 0;\n        return sum(r) - sum(l - 1);\n    }\n};\n\nclass Solution {\npublic:\n    void calc(int i, vector<int>& b, vector<int>& a) {\n    int n = b.size();\n    if (i >= 1 && i <= n - 2 && a[i] > a[i - 1] && a[i] > a[i + 1]) {\n        b[i] = 1;\n    }\n    else {\n        b[i] = 0;\n    }\n\n    }\n\n    vector<int> countOfPeaks(vector<int>& a, vector<vector<int>>& queries) {\n    int n = a.size();\n\n    vector<int> b(n);\n    for (int i = 1; i < n - 1; i++) {\n        if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n            b[i] = 1;\n        }\n    }\n    fenwicktree ft(b);\n\n    vector<int> ret;\n    for (auto q : queries) {\n        if (q[0] == 1) {\n            ret.push_back(ft.query(q[1] + 2, q[2]));\n        }\n        else {\n            int i = q[1];\n            int cur = q[2];\n            a[i] = cur;\n            for (int j = -1; j <= 1; j++) {\n                if (i + j < 0 || i + j >= n) continue;\n                int prev = b[i + j];\n                calc(i + j, b, a);\n                int cur = b[i + j];\n                ft.update(i + j + 1, cur - prev);\n            }\n        }\n    }\n    return ret;\n}\n};",
    "submit_ts": 1718507818.0
}