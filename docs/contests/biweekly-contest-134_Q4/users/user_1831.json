{
    "username": "gidbft",
    "submission": "\nclass Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        # 31\u4f4d\u6570\u3002\n        n = len(nums)\n        # \u8bb0\u5f55\u6700\u8fd1\u4e00\u6b21\u5b58\u5728\u7684\u7d22\u5f15,\n        pre = [-1] * 32\n\n        ans = 0\n        for idx, v in enumerate(nums):\n            # \u9700\u8981\u5173\u6ce8\n            existMax = 0\n            unexist = idx\n            for f in range(32):\n                # \u5173\u952e\u4f4d\uff0c\u8bb0\u5f55\u6700\u540e\u4e00\u6b21\u6709\u6548\u7684\n                if ((2 ** f) & k) != 0:\n                    if ((2 ** f) & v) == 0:\n                        pre[f] = idx + 1\n                    existMax = max(existMax, pre[f])\n                # \u4e0d\u5e94\u8be5\u5b58\u5728\u7684\uff0c\u8981\u627e\u5230\u4e0a\u4e00\u6b21\u4e0d\u5b58\u5728\u7684\u4f4d\u7f6e\u3002\n                else:\n                    if ((2 ** f) & v) == 0:\n                        pre[f] = idx\n                    else:\n                        # print(f)\n                        unexist = min(unexist, pre[f])\n            # print(unexist, existMax)\n            # print(pre)\n            # print(unexist, existMax)\n            ans += max(0, unexist - existMax + 1)\n            # print(unexist,existMax,idx, ans)\n\n        return ans",
    "submit_ts": "1720280750",
    "subm_id": "544573186"
}