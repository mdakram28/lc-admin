{
    "username": "gauravraj_111",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size(), cols = matrix[0].size();\n        int flipCount = 0;\n        \n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (matrix[rows / 2][cols / 2] == 1) {\n                flipCount += 1;\n            }\n        }\n\n        vector<int> flipShift(3, 0);\n        if (rows % 2 == 1) {\n            int leftCol = 0, rightCol = cols - 1;\n            while (leftCol < rightCol) {\n                int sum = matrix[rows / 2][leftCol] + matrix[rows / 2][rightCol];\n                flipShift[sum] += 1;\n                leftCol += 1;\n                rightCol -= 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            int topRow = 0, bottomRow = rows - 1;\n            while (topRow < bottomRow) {\n                int sum = matrix[topRow][cols / 2] + matrix[bottomRow][cols / 2];\n                flipShift[sum] += 1;\n                topRow += 1;\n                bottomRow -= 1;\n            }\n        }\n\n        if (flipShift[2] % 2 == 1) {\n            if (flipShift[1] > 0) {\n                flipCount += flipShift[1];\n            } else {\n                flipCount += 2;\n            }\n        } else {\n            flipCount += flipShift[1];\n        }\n\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int topLeft = matrix[i][j];\n                int bottomLeft = matrix[rows - 1 - i][j];\n                int topRight = matrix[i][cols - 1 - j];\n                int bottomRight = matrix[rows - 1 - i][cols - 1 - j];\n\n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    flipCount += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return flipCount;\n    }\n};\n",
    "submit_ts": "1722699656",
    "subm_id": "1343218306"
}