{
    "username": "yash_116",
    "submission": "const int N=100;\nstruct TrieNode {  \n    char info;   \n    TrieNode* child[N];  \n    int data;  \n};  \n   \nTrieNode* trie_make(char info) {  \n    TrieNode* node = (TrieNode*) calloc (1, sizeof(TrieNode));  \n    for (int i = 0; i < N; i++)  \n        node->child[i] = NULL;  \n    node->data = 0;  \n    node->info = info;  \n    return node;  \n}  \n   \nvoid free_trienode(TrieNode* node) {  \n    for(int i = 0; i < N; i++) {  \n        if (node->child[i] != NULL) {  \n            free_trienode(node->child[i]);  \n        }  \n        else {  \n            continue;  \n        }  \n    }  \n    free(node);  \n}  \nclass Solution {\npublic:\n    vector<int>dp;\n    struct TNode{\n        vector<int>res;\n        unordered_map<char,TNode*>mp;\n    };\n    class Tree{\n        public:\n        TNode* root;\n        Tree(){\n            root=new TNode();\n        }\n        void insert(int ind, string& s){\n            TNode* node=root;\n            for(auto&i:s){\n                if(!node->mp.count(i)){\n                    node->mp[i]=new TNode();\n                }\n                node=node->mp[i];\n            }\n            node->res.push_back(ind);\n        }\n    };\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        int len=target.size();\n        int m=words.size();\n        dp.resize(len+1);\n        dp[0]=0;\n        for(int i=1;i<=len;i++){\n            dp[i]=1e9;\n        }\n        Tree tree;\n        for(int i=0;i<m;i++){\n            tree.insert(i,words[i]);\n        }\n        for(int i=0;i<len;i++){\n            if(dp[i]==1e9){\n                continue;\n            }\n            TNode *node=tree.root;\n            for(int j=i;j<len;j++){\n                if(!node->mp.count(target[j]))break;\n                node=node->mp[target[j]];\n                for(auto&k: node->res){\n                    int l=words[k].size();\n                    if(i+l<=len){\n                        dp[i+l]=min(dp[i+l],dp[i]+costs[k]);\n                    }\n                    else{\n                        //\n                    }\n                }\n            }\n        }\n        if(dp[len]==1e9)return -1;\n        return dp[len];\n    }\n};",
    "submit_ts": "1720324107",
    "subm_id": "1312391759"
}