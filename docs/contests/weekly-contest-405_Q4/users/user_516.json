{
    "username": "codesha11",
    "submission": "class Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n        s = {} # Dictionary to store the minimum cost of each word\n        ns = len(target)\n        ms = len(words)\n        for i, ws in enumerate(words):\n            s[ws] = min(s.get(ws, float('inf')), costs[i])\n# Initializing dp array\n        dp = [float('inf')] * (ns + 1)\n        dp[0] = 0\n# Filling dp array\n        for i in range(1, ns + 1):\n            for ws in s:\n                if i >= len(ws) and target[i - len(ws):i] == ws:\n                    dp[i] = min(dp[i], dp[i - len(ws)] + s[ws])\n#returning mi cost\n        return dp[ns] if dp[ns] != float('inf') else -1\n",
    "submit_ts": "1720322330",
    "subm_id": "1312346988"
}