{
    "username": "practice_8601",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        long cnt1 = 1, cnt2 = 1;\n        Arrays.sort(horizontalCut);\n        Arrays.sort(verticalCut);\n        \n        int i=m-2,j=n-2;\n        long result = 0;\n        \n        while(i>=0 && j>=0)\n        {\n            if(horizontalCut[i]>verticalCut[j])\n            {\n                result += cnt1*(long)horizontalCut[i];\n                cnt2+=1;\n                i-=1;\n            } else if(horizontalCut[i]<verticalCut[j])\n            {\n                result += cnt2*(long)verticalCut[j];\n                cnt1+=1;\n                j-=1;\n            } else {\n                if(cnt1>cnt2)\n                {\n                    result += cnt1*(long)horizontalCut[i];\n                    cnt2+=1;\n                    i-=1;\n                } else {\n                    result += cnt2*(long)verticalCut[j];\n                    cnt1+=1;\n                    j-=1;\n                }\n            }\n                \n        }\n        \n        while(i>=0)\n        {\n            result += cnt1*(long)horizontalCut[i];\n                cnt2+=1;\n                i-=1;\n        }\n        \n        while(j>=0)\n        {\n            result += cnt2*(long)verticalCut[j];\n                cnt1+=1;\n                j-=1;\n        }\n        \n        return result;\n    }\n}",
    "submit_ts": "1720925895",
    "subm_id": "1320269640"
}