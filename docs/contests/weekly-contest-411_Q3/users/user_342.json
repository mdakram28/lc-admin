{
    "username": "alexxue800",
    "submission": "/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar largestPalindrome = function(n, k) {\n    let s = \"\";\n    switch (k) {\n        case 1:\n        case 3:\n        case 9:\n        for (let i = 0; i < n; i++) s += \"9\";\n        return s;\n\n        case 2:\n        if (n == 1) return \"8\";\n        for (let i = 0; i < n - 2; i++) s += \"9\";\n        return (\"8\" + s + \"8\");\n\n        case 4:\n        if (n == 1) return \"8\";\n        if (n == 2) return \"88\";\n        if (n == 3) return \"888\";\n        for (let i = 0; i < n - 4; i++) s += \"9\";\n        return (\"88\" + s + \"88\");\n\n        case 5:\n        if (n == 1) return \"5\";\n        for (let i = 0; i < n - 2; i++) s += \"9\";\n        return (\"5\" + s + \"5\");\n\n        case 6:\n        if (n == 1) return \"6\";\n        if (n == 2) return \"66\";\n    \n        if (n %2 == 0) {\n            for (let i = 0; i < (n - 4)/2; i++) s += \"9\";\n            return (\"8\" + s + \"77\" + s + \"8\");\n        }\n        for (let i = 0; i < (n - 3) / 2; i++) s += \"9\";\n        return (\"8\" + s + \"8\" + s + \"8\");\n\n        case 7:\n        if (n == 1) return \"7\";\n        if (n == 2) return \"77\";\n\n        let map = new Map([\n            [1, 3],\n            [2, 6],\n            [3, 2],\n            [4, 5],\n            [5, 1],\n            [6, 4],\n        ])\n        if (n %2 == 0) {\n            let mod = 0;\n            let cur = 1;\n            for (let i = 0; i < (n-2) / 2; i++) {\n                s += \"9\";\n                mod += 2 * cur;\n                mod %= 7;\n                cur = map.get(cur);\n            }\n            let val = cur;\n            let nextVal = map.get(cur);\n            cur = map.get(nextVal);\n            for (let i = 0; i < (n-2) / 2; i++) {\n                mod += 2 * cur;\n                mod %= 7;\n                cur = map.get(cur);\n            }\n\n            let add = 10;\n            while ((mod + --add *val + add * nextVal) % 7 != 0);\n            return (s + add + add + s);\n        }\n\n        if (n %2 == 1) {\n            let mod = 0;\n            let cur = 1;\n            for (let i = 0; i < (n-1) / 2; i++) {\n                s += \"9\";\n                mod += 2 * cur;\n                mod %= 7;\n                cur = map.get(cur);\n            }\n            let val = cur;\n            cur = map.get(val);\n            for (let i = 0; i < (n-1) / 2; i++) {\n                mod += 2 * cur;\n                mod %= 7;\n                cur = map.get(cur);\n            }\n\n            let add = 10;\n            while ((mod + --add *val) % 7 != 0);\n            return (s + add + s);\n        }\n\n        case 8:\n        if (n == 1) return \"8\";\n        if (n == 2) return \"88\";\n        if (n == 3) return \"888\";\n        if (n == 4) return \"8888\";\n        if (n == 5) return \"88888\";\n        for (let i = 0; i < n - 6; i++) s += \"9\";\n        return (\"888\" + s + \"888\");\n    }\n};",
    "submit_ts": "1723951604",
    "subm_id": "1359775603"
}