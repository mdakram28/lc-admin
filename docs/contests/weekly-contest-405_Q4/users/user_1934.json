{
    "username": "amitbansal13",
    "submission": "struct trie {\n    trie* arr[26];\n    bool isEnd;\n    long long cost;\n    trie() {\n        for(int i=0;i<26;i++) arr[i] = NULL;\n        isEnd = false;\n        cost = 1e9;\n    }\n};\n\nclass Solution {\npublic:\n    void insert(trie* t, string &word, long long cost) {\n        for(auto i:word) {\n            if(t->arr[i-'a'] == NULL) t->arr[i-'a'] = new trie();\n            t = t->arr[i-'a'];\n        }\n        t->isEnd = true;\n        t->cost = min(t->cost, cost);\n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        trie * t = new trie();\n        for(int i=0;i<words.size();i++) insert(t, words[i], costs[i]);\n        \n        vector<long long> dp(target.size()+1, -1LL);\n        \n        function<long long(int)> calc = [&](int i) -> long long {\n            if(i == target.size()) return dp[i] = 0;\n            \n            if(dp[i] != -1) return dp[i];\n            \n            \n            if(t->arr[target[i]-'a'] == NULL) return dp[i] = 1e9;\n            \n            long long ans = 1e9;\n            auto temp = t;\n            \n            for(int j = i; j < target.size(); j++) {\n                int ind = target[j]-'a';\n                if(temp->arr[ind] == NULL) break;\n            \n                if(temp->arr[ind]->isEnd && temp->arr[ind]->cost < ans) {\n                    ans = min(ans, calc(j+1) + temp->arr[ind]->cost);\n                }\n                temp = temp->arr[target[j]-'a'];\n            }\n            \n            return dp[i] = ans;\n        };\n        \n//         vector<unordered_map<trie*, long long>> dp2(target.size());\n        \n//         function<long long(int, trie*)> calc2 = [&](int i, trie* temp) -> long long {\n//             if(temp->arr[target[i]-'a'] == NULL) return dp2[i][temp] = 1e9;\n            \n//             if(i == target.size()-1) return temp->arr[target[i]-'a']->cost;\n            \n//             if(dp2[i].find(temp) != dp2[i].end()) return dp2[i][temp];\n            \n            \n            \n            \n//             long long notTake = calc2(i+1, temp->arr[target[i]-'a']);\n//             long long take = 1e9;\n            \n//             if(temp->arr[target[i]-'a']->isEnd) {\n//                 take = calc2(i+1, t) + temp->arr[target[i]-'a']->cost;\n//             }\n            \n            \n//             return dp2[i][temp] = min(take, notTake);\n//         };\n        \n        for(int i=target.size()-1;i>=0;i--) calc(i);\n        \n        \n        if(calc(0) == 1e9) return -1;\n        \n        return calc(0);\n        \n        // return 0;\n    }\n};",
    "submit_ts": "1720324623",
    "subm_id": "1312404038"
}