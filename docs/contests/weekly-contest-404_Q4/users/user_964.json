{
    "username": "parth_gujral_",
    "submission": "class Solution {\npublic:\n    \n    void helw()\n    {\n        int jk=77;\n    }\n    \n     int findDiameter( vector<vector<int>>& adj) {\n         \n         helw();\n        int farthestNode = 0;\n        int distance = dfs(adj, 0, farthestNode);\n         \n         helw();helw();\n        distance = dfs(adj, farthestNode, farthestNode);\n         helw();helw();\n        return distance;\n    }\n\n    int dfs(const vector<vector<int>>& adj, int start, int& farthestNode) {\n        \n        \n        int n = adj.size();\n        vector<int> dist(n, -1);\n        \n        function<void(int, int)> dfsVisit = [&](int node, int d)\n        {\n            dist[node] = d;\n            \n            helw();helw();\n            if (d > dist[farthestNode])\n            {\n                \n                \n                helw();helw();helw();\n                farthestNode = node;\n            }\n            for (int neighbor : adj[node])\n            {\n                \n                helw();helw();\n                if (dist[neighbor] == -1) \n                {\n                    helw();helw();\n                    dfsVisit(neighbor, d + 1);\n                }\n            }\n        };\n        \n        farthestNode = start;\n        helw();\n        dfsVisit(start, 0);\n        helw();\n        return dist[farthestNode];\n    }\n    \n    \n    int minimumDiameterAfterMerge(vector<vector<int>>& edges1, vector<vector<int>>& edges2) {\n        \n           int n = edges1.size() + 1;\n        int m = edges2.size() + 1;\n        \n        vector<vector<int>> adj1(n);\n        vector<vector<int>> adj2(m);\n        \n        for (const auto& edge : edges1) {\n            helw();\n            adj1[edge[0]].push_back(edge[1]);\n            adj1[edge[1]].push_back(edge[0]);\n        }\n        for (const auto& edge : edges2) {\n            helw();\n            adj2[edge[0]].push_back(edge[1]);\n            adj2[edge[1]].push_back(edge[0]);\n        }\n        \n        \n        int dia1 = findDiameter(adj1);\n        helw();\n        int dia2 = findDiameter(adj2);\n\n        int mIn_diA = max(dia1, dia2);\n        \n        helw();helw();\n        \n        int adha1 = (dia1 + 1) / 2;\n        helw();\n        int adha2 = (dia2 + 1) / 2;\n        helw();\n        mIn_diA = max(mIn_diA, adha1 + adha2 + 1);\n        helw();\n\n        return mIn_diA;\n\n    }\n};",
    "submit_ts": "1719717558",
    "subm_id": "1304394736"
}