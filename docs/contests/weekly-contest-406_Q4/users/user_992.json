{
    "username": "merimummy",
    "submission": "/*\nAuthor: Pande Aditya\nCountry: India\n*/\n\n\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define forn(i, x, n) for (int i = x; i < n; i++)\n#define vi vector<int>\n#define pb push_back\n#define INF 1e9\n#define fori1(n) for (ll i = 1; i <= n; i++)\n#define fori(n) for (ll i = 0; i < n; i++)\n\nvector<int> lpss(string pattern) {\n    int n = pattern.length();\n    vector<int> lps(n);\n    lps[0] = 0;\n    int j = 1;\n    int i = 0;\n    while (j < n) {\n        if (pattern[i] == pattern[j]) {\n            lps[j] = i + 1;\n            i++;\n            j++;\n        } else {\n            if (i != 0) {\n                i = lps[i - 1];\n            } else {\n                lps[j] = 0;\n                j++;\n            }\n        }\n    }\n    return lps;\n}\n\nvector<int> kmp_search(string text, string pattern) {\n    int n = text.length();\n    int m = pattern.length();\n    vector<int> lps = lpss(pattern);\n    vector<int> indexes;\n    int i = 0;\n    int j = 0;\n    while (i < n) {\n        if (text[i] == pattern[j]) {\n            i++;\n            j++;\n            if (j == m) {\n                indexes.push_back(i - m);\n                j = lps[j - 1];\n            }\n        } else {\n            if (j != 0) {\n                j = lps[j - 1];\n            } else {\n                i++;\n            }\n        }\n    }\n    return indexes;\n}\n\nclass Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& hcut, vector<int>& vcut) {\n        ranges::sort(hcut | views::reverse);\n        ranges::sort(vcut | views::reverse);\n        ll h = 0, v = 0;\n        ll hpieces = 1, vpieces = 1;\n        ll ans = 0;\n\n        while (h < hcut.size() && v < vcut.size()) {\n            if (hcut[h] > vcut[v]) {\n                ans += hcut[h] * vpieces;\n                hpieces++;\n                h++;\n            } else {\n                ans += vcut[v] * hpieces;\n                vpieces++;\n                v++;\n            }\n        }\n\n        \n        while (h < hcut.size()) {\n            ans += hcut[h] * vpieces;\n            h++;\n        }\n\n\n        while (v < vcut.size()) {\n            ans += vcut[v] * hpieces;\n            v++;\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1720925981",
    "subm_id": "1320272275"
}