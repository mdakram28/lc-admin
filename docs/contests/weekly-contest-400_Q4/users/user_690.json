{
    "username": "tanishkumar15391709",
    "submission": "class Solution {\npublic:\n    vector<int>seg;\n    void build(int ind,int l,int r,vector<int>&nums)\n    {\n        if(l==r)\n        {\n            seg[ind]=nums[l];\n            return;\n        }\n        int mid=l+(r-l)/2;\n        build(2*ind+1,l,mid,nums);\n        build(2*ind+2,mid+1,r,nums);\n        seg[ind]=seg[2*ind+1]&seg[2*ind+2];\n    }\n    int get(int ind,int l,int r,int left,int right)\n    {\n        if(r<left||l>right) return INT_MAX;\n        if(l>=left&&r<=right) return seg[ind];\n        int m=l+(r-l)/2;\n        int left_part=get(2*ind+1,l,m,left,right);\n        int right_part=get(2*ind+2,m+1,r,left,right);\n        return left_part&right_part;\n    }\n    int minimumDifference(vector<int>& nums, int k) {\n        int n=nums.size();\n        seg.resize(4*n);\n        build(0,0,n-1,nums);\n        int mini=INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            int val=get(0,0,n-1,i,n-1);\n            if(val>=k)\n            {\n                mini=min(mini,val-k);\n                continue;\n            }\n            if(nums[i]<=k)\n            {\n                mini=min(mini,k-nums[i]);\n                continue;\n            }\n            int low=i,high=n-1;\n            while(low<=high)\n            {\n                int mid=low+(high-low)/2;\n                val=get(0,0,n-1,i,mid);\n                if(val<=k)\n                {\n                    mini=min(mini,k-val);\n                    high=mid-1;\n                }\n                else\n                {\n                    mini=min(mini,val-k);\n                    low=mid+1;\n                }\n            }\n        }\n        return mini;\n    }\n};",
    "submit_ts": 1717299631.0
}