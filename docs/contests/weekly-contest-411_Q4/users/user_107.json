{
    "username": "Max.D.",
    "submission": "class Solution {\npublic:\n    vector<long long> countKConstraintSubstrings(string s, int k, vector<vector<int>>& queries) {\n        int n=s.size();\n        vector<long long> ans,sum(n+1);\n        vector<int> rp(n);\n        for(int i=0,j=-1,c0=0,c1=0;i<n;i++){\n            while(j<n&&(c0<=k||c1<=k)){\n                j++;\n                if(s[j]=='0')\n                    c0++;\n                else\n                    c1++;\n            }\n            rp[i]=j-1;\n            sum[i+1]=sum[i]+rp[i];\n            if(s[i]=='0')\n                c0--;\n            else\n                c1--;\n        }\n        for(const auto &q:queries){\n            int l=q[0],r=q[1];\n            int pos = lower_bound(rp.begin()+l,rp.begin()+r+1,r)-rp.begin();\n            // cout<<rp[0]<<endl;\n            auto ans1 = sum[pos] - sum[l] - (l-1+(pos-2LL))*(pos-l)/2;\n            auto ans2 = 1LL*(r-pos+2)*(r-pos+1)/2;\n            ans.emplace_back(ans1+ans2);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723952813",
    "subm_id": "556413788"
}