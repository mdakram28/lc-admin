{
    "username": "bai-ma-shi-lang",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<int> ind(horizontalCut.size()+verticalCut.size());\n        iota(ind.begin(),ind.end(),0);\n        sort(ind.begin(),ind.end(),[&](int i,int j){return (i>=horizontalCut.size()?verticalCut[i-horizontalCut.size()]:horizontalCut[i])>(j>=horizontalCut.size()?verticalCut[j-horizontalCut.size()]:horizontalCut[j]);});\n        int hcnt=0,vcnt=0;\n        long long ans=0;\n        for(int i=0;i<ind.size();i++)\n        {\n            if(ind[i]>=horizontalCut.size())\n            {\n                ans+=(hcnt+1)*verticalCut[ind[i]-horizontalCut.size()];\n                vcnt++;\n            }\n            else\n            {\n                ans+=(vcnt+1)*horizontalCut[ind[i]];\n                hcnt++;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1720925951",
    "subm_id": "546443060"
}