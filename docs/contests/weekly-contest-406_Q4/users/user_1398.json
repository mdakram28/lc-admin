{
    "username": "GoldenTutHeir",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        priority_queue<pair<long long, long long>> pq;\n        for (int j = 0; j < n - 1; ++j) pq.push({verticalCut[j], 1});\n        for (int i = 0; i < m - 1; ++i) pq.push({horizontalCut[i], 0});\n        long long h = 0, hor = 1, ver = 1;\n        while (!pq.empty()) {\n            long long h1 = pq.top().first, h2 = pq.top().second;\n            pq.pop();\n            if (h2 == 0) {\n                h += (long long)h1 * ver;\n                hor++;\n            } else {\n                h += (long long)h1 * hor;\n                ver++;\n            }\n        }\n        return h;\n    }\n};",
    "submit_ts": "1720925929",
    "subm_id": "1320270691"
}