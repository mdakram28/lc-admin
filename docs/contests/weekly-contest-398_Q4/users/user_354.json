{
    "username": "88ionion",
    "submission": "class Solution {\npublic:\n    \n    map<vector<long long>,long long> dp;\n    long long f(long long i,long long jump,long long k,long long flag)\n    {\n        // if(i==k)\n        // {\n        //     return 1;\n        // }\n        if(jump>32)\n        {\n            return 0;\n        }\n        if(dp.find({i,jump,flag})!=dp.end())\n        {\n            return dp[{i,jump,flag}];\n        }\n        long long res=0;\n        if(i==k)\n        {\n            res++;\n        }\n        if(i==0)\n        {\n            res+=f(i+(1LL<<jump),jump+1,k,0);\n        }\n        else if(flag)\n        {\n            res+=f(i+(1LL<<jump),jump+1,k,!flag);\n        }\n        else\n        {\n            res+=f(i+(1LL<<jump),jump+1,k,flag)+f(i-1,jump,k,!flag);\n        }\n        return dp[{i,jump,flag}]=res;\n    }\n    \n    int waysToReachStair(int k) {\n        dp.clear();\n        return f(1,0,(long long)k,0);\n    }\n};",
    "submit_ts": "1716088212",
    "subm_id": "1261807351"
}