{
    "username": "john801205",
    "submission": "class BIT {\n    vector<int> nums;\npublic:\n    BIT(int n) {\n        nums = vector<int>(n, 0);\n    }\n    \n    void update(int i, int v)\n    {        \n        for (; i < nums.size(); i += i&-i)\n            nums[i] = max(nums[i], v);\n    }\n    \n    int query(int i)\n    {\n        int res = 0;\n        for (; i > 0; i -= i&-i)\n            res = max(res, nums[i]);\n        return res;\n    }\n};\n\nclass Solution {\npublic:\n    vector<bool> getResults(vector<vector<int>>& queries) {\n        vector<int> obstacles = {0};\n        for (const auto& query: queries)\n            if (query[0] == 1)\n                obstacles.push_back(query[1]);\n        \n        sort(begin(obstacles), end(obstacles));\n        \n        BIT bit(obstacles.size());\n        for (int i = 1; i < obstacles.size(); i++)\n            bit.update(i, obstacles[i] - obstacles[i-1]);\n        \n        map<int, int> indexes;\n        for (int i = 0; i < obstacles.size(); i++)\n            indexes[obstacles[i]] = i;\n        \n        vector<bool> res;\n        for (int i = queries.size()-1; i >= 0; i--)\n        {\n            if (queries[i][0] == 2)\n            {\n                auto itr = indexes.upper_bound(queries[i][1]);\n                int idx = 0;\n                if (itr != indexes.begin())\n                    idx = prev(itr)->second;\n                \n                int mmax = max(queries[i][1]-obstacles[idx], bit.query(idx));\n                res.push_back(mmax >= queries[i][2]);\n            }\n            else\n            {\n                auto itr = indexes.find(queries[i][1]);\n                int prev = 0, next = INT_MAX;\n                if (itr != indexes.begin())\n                    prev = std::prev(itr)->first;\n                if (std::next(itr) != indexes.end())\n                    next = std::next(itr)->first;\n                bit.update(itr->second, next-prev);\n                indexes.erase(itr);\n            }\n        }\n        \n        for (int i = 0, j = res.size()-1; i < j; i++, j--)\n            swap(res[i], res[j]);\n        return res;\n    }\n};",
    "submit_ts": 1716651493.0
}