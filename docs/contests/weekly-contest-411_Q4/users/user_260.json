{
    "username": "Itsuki",
    "submission": "import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public long[] countKConstraintSubstrings(String S, int k, int[][] queries) {\n        char[] s = S.toCharArray();\n        int n = s.length;\n        int[] tag = new int[n];\n        List<Integer> a = new ArrayList<>(), b = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') {\n                a.add(i);\n            } else {\n                b.add(i);\n            }\n            int j = -1;\n            if (a.size() > k && b.size() > k) {\n                j = Math.min(a.get(a.size() - k - 1), b.get(b.size() - 1 - k));\n            }\n            tag[i] = j;\n        }\n        long[] pre = new long[n + 1];\n        for (int i = 0; i < n; i++) {\n            pre[i + 1] = pre[i] + tag[i];\n        }\n        int m = queries.length;\n        long[] ans = new long[m];\n        for (int i = 0; i < m; i++) {\n            int l = queries[i][0], r = queries[i][1];\n            int p = f(tag, l, r + 1);\n            long c = r - l + 1;\n                ans[i] = (c + 1) * c / 2;\n            if (p != r + 1) {\n                ans[i] -= pre[r + 1] - pre[p] + (long) (r + 1 - p) * (1 - l);\n            }\n        }\n        return ans;\n    }\n\n\n    int f(int[] nums, int l, int r) {\n        int k = l;\n        while (l + 1 < r) {\n            int m = (l + r) / 2;\n            if (nums[m] >= k) {\n                r = m;\n            } else {\n                l = m;\n            }\n        }\n        return r;\n    }\n}\n\n",
    "submit_ts": "1723952102",
    "subm_id": "556409596"
}