{
    "username": "r32626",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        MOD = 10**9 + 7\n        n = len(nums)\n        max_num = max(nums)\n\n        # dp[i][j]: number of valid pairs up to index i with arr1[i] = j\n        dp = [[0] * (max_num + 1) for _ in range(n)]\n\n        # Initialize dp for the first element\n        for j in range(nums[0] + 1):\n            dp[0][j] = 1\n\n        # Fill the dp table\n        for i in range(1, n):\n            for j in range(nums[i] + 1):\n                arr2_i = nums[i] - j\n                dp_sum = 0\n\n                # Ensure arr2[i] = nums[i] - j is non-increasing\n                for k in range(j + 1):  # k is the value of arr1[i-1]\n                    if arr2_i <= nums[i-1] - k:\n                        dp_sum = (dp_sum + dp[i-1][k]) % MOD\n\n                dp[i][j] = dp_sum\n\n        # The result is the sum of all dp[n-1][j]\n        result = sum(dp[n-1]) % MOD\n        return result\n",
    "submit_ts": "1723346112",
    "subm_id": "1351570453"
}