{
    "username": "cchao",
    "submission": "constexpr int mod = 1e9 + 7;\nconst int maxn = 5e4+10;\nconst int node = maxn * 4;\narray<int64_t, 4> a[node];\nvoid init(int o, int l, int r) {\n    const int m = (l+r)>>1;\n    a[o] = {};\n    if (l != r) {\n        init(o+o,l,m);\n        init(o+o+1,m+1,r);\n    }\n}\nvoid update(int o, int l, int r, int qx, int qv) {\n    const int m = (l+r)>>1;\n    if (l == r) {\n        a[o][3] = qv;\n        return;\n    }\n    if (qx <= m) update(o+o,l,m,qx,qv);\n    else update(o+o+1,m+1,r,qx,qv);\n    auto& a1 = a[o+o];\n    auto& a2 = a[o+o+1];\n    auto& res = a[o];\n    res = {};\n    for (int i = 0; i < 4; ++i) {\n        for (int j = 0; j < 4; ++j) {\n            if ((i&2) && (j&1)) continue;\n            int k = (i&1) | (j&2);\n            res[k] = max(res[k], a1[i] + a2[j]);\n        }\n    }\n}\nclass Solution {\npublic:\n    int maximumSumSubsequence(vector<int>& nums, vector<vector<int>>& queries) {\n        // d[i] = max(d[i-1], a[i] + d[i-2])\n        const int n = nums.size();\n        init(1, 0, n - 1);\n        for (int i = 0; i < n; ++i) {\n            update(1, 0, n - 1, i, max(0, nums[i]));\n        }\n        long long ans = 0;\n        for (auto q : queries) {\n            int qx = q[0], qv = q[1];\n            update(1, 0, n - 1, qx, max(0, qv));\n            \n            auto& res = a[1];\n            auto ta = *max_element(a[1].begin(), a[1].end());\n            ans = (ans + ta) % mod;\n            // cout << ta << endl;\n        }\n        // cout << \"-- \" <<ans << endl;\n        return ans;\n    }\n};",
    "submit_ts": "1716693150",
    "subm_id": "1268076971"
}