{
    "username": "power-c",
    "submission": "struct trie_sum{\n\tint n;\n\tint tr[100010];\n\tvoid init(int n){\n\t\tthis -> n = n;\n\t\tfor(int i = 0; i <= n; i ++ )\n            tr[i] = 0;\n\t}\n\tvoid add(int x, int k){\n\t\tfor(int i = x; i <= n; i += i & -i)\n\t\t\ttr[i] += k;\n\t}\n\tint query(int x){\n\t\tint res = 0;\n\t\tfor(int i = x; i ; i -= i & -i)\n\t\t\tres += tr[i];\n\t\treturn res;\n\t}\n};\nstruct trie_max{\n\tint n;\n\tint tr[100010];\n\tvoid init(int n){\n\t\tthis -> n = n;\n\t\tfor(int i = 0; i <= n; i ++ )\n            tr[i] = 0;\n\t}\n\tvoid add(int x, int k){\n\t\tfor(int i = x; i <= n; i += i & -i)\n            tr[i] = max(tr[i], k);\n\t}\n\tint query(int x){\n\t\tint res = 0;\n\t\tfor(int i = x; i ; i -= i & -i)\n\t\t\tres = max(res, tr[i]);\n\t\treturn res;\n\t}\n};\n\n\ntrie_sum sum;\ntrie_max mx;\n\nclass Solution {\npublic:\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        sum.init(n);\n        mx.init(n);\n        vector<int> ans;\n        int now = n - 1;\n        set<pair<int, int>> st;\n        for(auto vec : queries) {\n            int u = vec[0] + 1, v = vec[1] + 1;\n            if(mx.query(u) < v) {\n                int t = sum.query(v - 1) - sum.query(u - 1);\n                now += t;\n                now -= v - u - 1;\n                mx.add(u, v);\n                while(true) {\n                    auto it = st.lower_bound({u, 0});\n                    if(it == st.end()) break;\n                    if((*it).first < v) {\n                        int u = (*it).first, v = (*it).second;\n                        sum.add(u, -(v - u - 1));\n                        st.erase(it);\n                    } else {\n                        break;\n                    }\n                }\n                st.insert({u, v});\n                sum.add(u, v - u - 1);\n            }\n            ans.push_back(now);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722740437",
    "subm_id": "552331483"
}