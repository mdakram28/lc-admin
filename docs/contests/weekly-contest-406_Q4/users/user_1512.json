{
    "username": "shonu_monu",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n        sort(verticalCut.rbegin(), verticalCut.rend());\n        \n        int i = 0, j = 0;\n        long long ans = 0;\n        int hPieces = 1, vPieces = 1;\n        \n        while (i < horizontalCut.size() && j < verticalCut.size()) {\n            if (horizontalCut[i] > verticalCut[j]) {\n                ans += horizontalCut[i] *1ll* vPieces;\n                hPieces++;\n                i++;\n            } else {\n                ans += verticalCut[j] *1ll* hPieces;\n                vPieces++;\n                j++;\n            }\n        }\n        \n        while (i < horizontalCut.size()) {\n            ans += horizontalCut[i] *1ll* vPieces;\n            hPieces++;\n            i++;\n        }\n        \n        while (j < verticalCut.size()) {\n            ans += verticalCut[j] *1ll* hPieces;\n            vPieces++;\n            j++;\n        }\n        \n        return ans;\n    }\n};",
    "submit_ts": "1720925403",
    "subm_id": "1320253595"
}