{
    "username": "xiao-bing-gan-1o1",
    "submission": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport java.util.concurrent.atomic.AtomicLong;\n\nclass Solution {\n    public static long minimumOperations(int[] nums, int[] target) {\n        int[] value = new int[nums.length];\n        for (int i = 0; i < target.length; i++) {\n            value[i] = target[i] - nums[i];\n        }\n        List<List<Integer>> lists = new ArrayList<>();\n        for (int i = 0; i < value.length; i++) {\n            List<Integer> list = new ArrayList<>();\n            int iNum = value[i];\n            list.add(iNum);\n            for (int j = i + 1; j < value.length; j++) {\n                int jNum = value[j];\n                if (iNum > 0 && jNum > 0 || iNum < 0 && jNum < 0) list.add(jNum);\n                else {\n                    i = j - 1;\n                    break;\n                }\n                i = j - 1;\n                if (j == value.length - 1) i = value.length;\n            }\n            lists.add(list);\n        }\n        AtomicLong ans = new AtomicLong();\n        lists.forEach(list -> ans.addAndGet(getMaxNum(list)));\n        return ans.get();\n    }\n\n    private static long getMaxNum(List<Integer> list) {\n        int pre = 0, res = 0;\n        for (int now : list) {\n            now = Math.abs(now);\n            if (now > pre) res += now - pre;\n            pre = now;\n        }\n        return res;\n    }\n\n    public static void main(String[] args) {\n        minimumOperations(new int[]{1,3,2}, new int[]{2,1,4});\n    }\n}",
    "submit_ts": "1721532465",
    "subm_id": "548392522"
}