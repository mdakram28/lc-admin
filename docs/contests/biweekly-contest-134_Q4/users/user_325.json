{
    "username": "yuan-fang-nai",
    "submission": "class Solution {\npublic:\n    using ll = long long;\n    long long countSubarrays(vector<int>& nums, int k) {\n        int n = nums.size();\n        ll res = 0;\n        vector<pair<ll, ll>> a;\n        a.push_back({nums[0], 1});\n        unordered_map<ll, ll> mp;\n        if(nums[0] == k) res ++;\n        for(int i = 1; i < n; i ++) {\n            // cout << res << ' ';\n            a.push_back({INT_MAX, 1});\n            for(int j = 0; j < a.size(); j ++) {\n                a[j].first &= nums[i];\n                if(a[j].first == k) res += a[j].second;\n            }\n            // cout << res << endl;\n            // a.push_back(nums[i]);\n            ranges::sort(a);\n            mp.clear();\n            for(auto x : a) mp[x.first] += x.second;\n            int j = 0;\n            for(auto [x, y] : mp) a[j++] = {x, y};\n            a.resize(j);\n            // for(auto x : a) cout << x << ' '; cout << endl;\n            // a.resize(unique(a.begin(), a.end()) - a.begin());\n            // for(auto x : a) cout << x << ' '; cout << endl;\n\n            // cout << a.size() <<endl;\n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1720277984",
    "subm_id": "544560007"
}