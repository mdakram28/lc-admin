{
    "username": "ameliado",
    "submission": "import heapq \n\nclass Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        # max_heap \n        heap = []\n\n        for cost in horizontalCut: \n            heapq.heappush(heap, (-cost, 'h'))\n        for cost in verticalCut: \n            heapq.heappush(heap, (-cost, 'v'))\n\n        horizontal_pieces = 1\n        vertical_pieces = 1\n        \n        total_cost = 0\n        \n        while heap:\n            cost, direction = heapq.heappop(heap)\n            cost = -cost\n            \n            if direction == 'h':\n                total_cost += cost * vertical_pieces\n                horizontal_pieces += 1\n            else:\n                total_cost += cost * horizontal_pieces\n                vertical_pieces += 1\n        \n        return total_cost",
    "submit_ts": "1720926226",
    "subm_id": "1320279711"
}