{
    "username": "huanglanzhiguan",
    "submission": "class Solution {\nstatic inline int lowbit(int x) {\n    return x & -x;\n}    \npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = nums.size();\n        vector<int> psum(n + 5);\n        vector<int> a(n + 5, 0);\n        \n        auto update = [&](int i, int v) {\n            while (i <= n) {\n                psum[i] += v;\n                i += lowbit(i);\n            }            \n        };\n        auto updateFirst = [&](int i) { // i + 1\n            while (i <= n) {\n                ++psum[i];\n                i += lowbit(i);\n            }            \n        };\n        auto updateP = [&](int i) { // oi\n            if (i <= 0 || i >= n - 1) return;\n            \n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                // new 1\n                if (a[i + 1] == 0) {\n                    a[i + 1] = 1;\n                    update(i + 1, 1);\n                    // cout << \"+1 \" << i << endl;\n                }\n            } else {\n                // new 0\n                if (a[i + 1] == 1) {\n                    a[i + 1] = 0;\n                    update(i + 1, -1);\n                    // cout << \"-1 \" << i << endl;\n                }\n            }\n        };\n        auto query = [&](int i) {\n            int sum = 0;\n            while (i >= 1) {\n                sum += psum[i];\n                i -= lowbit(i);\n            }\n            return sum;            \n        };\n        \n        for (int i = 1; i < n - 1; ++i) {\n            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {\n                a[i + 1] = 1;\n                updateFirst(i + 1);\n            }\n        }\n        \n        int m = queries.size();\n        vector<int> ans;\n        for (int i = 0; i < m; ++i) {\n            int t = queries[i][0];\n            if (t == 1) {\n                int l = queries[i][1] + 1, r = queries[i][2] + 1;\n                if (r - l <= 1) {\n                    ans.push_back(0);\n                } else {\n                    ans.push_back(query(r) -  query(l - 1) - a[l] - a[r]);\n                }\n                // cout << l << ' ' << r << ' ' << ans.back() << endl;\n            } else {\n                int idx = queries[i][1], value = queries[i][2];\n                nums[idx] = value;\n                updateP(idx);\n                updateP(idx - 1);\n                updateP(idx + 1);\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1718507495",
    "subm_id": "539781702"
}