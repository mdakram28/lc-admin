{
    "username": "abc225666",
    "submission": "class Solution {\npublic:\n    long long handle_part(vector<int>& diff, int l, int r) {\n        vector<int> mono_queue;\n\n        long long ans = 0;\n\n        for(int i=l;i<r;++i) {\n            // if increase, handle\n            if(!mono_queue.empty() && abs(diff[i]) >mono_queue.back()) {\n                ans += mono_queue[0] - mono_queue.back();\n                mono_queue.clear();\n            }\n\n            mono_queue.push_back(abs(diff[i]));\n        }\n\n        if(!mono_queue.empty()) {\n            ans += mono_queue[0];\n        }\n\n        return ans;\n    }\n\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        vector<int> diff;\n\n        for (int i = 0; i < nums.size(); ++i) {\n            diff.push_back(target[i] - nums[i]);\n        }\n\n        int direction = 0;\n        int l_ptr = 0;\n        int r_ptr = 0;\n        long long ans = 0;\n\n        for (int i = 0; i < diff.size(); ++i) {\n            int current_direction = 0;\n            if (diff[i] > 0) {\n                current_direction = 1;\n            } else if (diff[i] < 0) {\n                current_direction = -1;\n            }\n\n            if (current_direction == direction) {\n                ++r_ptr;\n            } else {\n                // handle\n                ans += handle_part(diff, l_ptr, r_ptr);\n                cout<<l_ptr<<\" \"<<r_ptr<<\"\\n\";\n                l_ptr = i;\n                r_ptr = l_ptr + 1;\n                direction = current_direction;\n            }\n\n            if (current_direction == 0) {\n                l_ptr = i + 1;\n            }\n        }\n        ans += handle_part(diff, l_ptr, r_ptr);\n\n        return ans;\n    }\n};",
    "submit_ts": "1721532590",
    "subm_id": "1327989462"
}