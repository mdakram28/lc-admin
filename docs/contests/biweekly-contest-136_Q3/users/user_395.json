{
    "username": "BZH110",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n =  grid[0].size(), ans = 0;\n        for(int i=0;i<m/2;i++){\n            for(int j=0;j<n/2;j++){\n                int cnt = grid[i][j];\n                cnt += grid[m-i-1][j];\n                cnt += grid[i][n-j-1];\n                cnt += grid[m-i-1][n-j-1];\n                ans += min(cnt, 4 - cnt);\n            }\n        }\n        \n        int mid = 0, row = 0, col = 0;\n        if(m % 2){\n            for(int j=0;j<n/2;j++){\n                if(grid[m/2][j] != grid[m/2][n-j-1]) {\n                    ans++;\n                    mid++;\n                }\n                if(grid[m/2][j])\n                    row++;\n            }\n        }\n        if(n % 2){\n            for(int i=0;i<m/2;i++){\n                if(grid[i][n/2] != grid[m-i-1][n/2]) {\n                    ans++;\n                    mid++;\n                }\n                if(grid[i][n/2])\n                    row++;\n            }\n        }\n        ans += max(0, (row % 2 - mid) * 2);\n        if(m % 2 && n % 2)\n            ans += grid[m / 2][n / 2];\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699577",
    "subm_id": "1343215904"
}