{
    "username": "hk342064",
    "submission": "#define ll long long\nclass Solution {\npublic:\n    ll cnt = 0;\n    void func(int n,vector<int>& nums, int k,unordered_map<ll, ll> &mpp1){\n       \n        for (int i=0;i<n;i++) { \n            unordered_map<ll,ll> mpp2;  \n\n            if (nums[i] == k) { \n                cnt++; \n            } \n            mpp2[nums[i]] = 1; \n\n            for (auto &it : mpp1) { \n                ll x = it.first&nums[i]; \n                if (x == k) { \n                    cnt += it.second; \n                } \n                mpp2[x] += it.second; \n            } \n             \n            mpp1 = mpp2; \n        } \n    }\n    long long countSubarrays(vector<int>& nums, int k) {  \n        int n=nums.size();\n        unordered_map<ll, ll> mpp; \n        \n        func(n,nums,k,mpp);\n        return cnt;\n    } \n};",
    "submit_ts": "1720279692",
    "subm_id": "1311761337"
}