{
    "username": "_sajid",
    "submission": "class Solution {\n    private int[][] rotate(int grid[][]) {\n        int width = grid[0].length, height = grid.length;\n        int result[][] = new int[width][height];\n        for (int i = 0; i < height; i++) {\n            for (int j = 0; j < width; j++) {\n                result[width - j - 1][i] = grid[i][j];\n            }\n        }\n        return result;\n    }\n    public int minimumSum(int[][] grid) {\n        int sum = Integer.MAX_VALUE;\n        for (int rot = 0; rot < 4; rot++) {\n            int height = grid.length, width = grid[0].length;\n            \n            for (int i = 0; i < height - 1; i++) {\n                //split\n                for (int j = 0; j < width - 1; j++) {\n                    int a = solve(grid, 0, width - 1, 0, i);\n                    int b = solve(grid, 0, j, i + 1, height - 1);\n                    int c = solve(grid, j + 1, width - 1, i + 1, height - 1);\n                    if (a != 0 && b != 0 && c != 0) \n                        sum = Math.min(sum, a + b + c);\n                }\n            }\n            \n            for (int i = 0; i < height - 2; i++) {\n                for (int j = i + 1; j < height - 1; j++) {\n                    int a = solve(grid, 0, width - 1, 0, i);\n                    int b = solve(grid, 0, width - 1, i + 1, j);\n                    int c = solve(grid, 0, width - 1, j + 1, height - 1);\n                    if (a != 0 && b != 0 && c != 0)\n                            sum = Math.min(sum, a + b + c);\n                }\n            }\n            \n            grid = rotate(grid);\n        }\n        return sum;\n    }\n    \n    \n    public int solve(int[][] grid, int x1, int x2, int y1, int y2) {\n        // System.out.println(\"solve\" + x1 + \", \" + x2 + \", \" + y1 + \", \" + y2);\n        //     for (int i = 0; i < grid.length; i++) System.out.println(Arrays.toString(grid[i]));\n        \n        boolean ver[] = new boolean[y2 - y1 + 1];\n        boolean hor[] = new boolean[x2 - x1 + 1];\n        for (int i = y1; i <= y2; i++) {\n            for (int j = x1; j <= x2; j++) {\n                if (grid[i][j] == 1) {\n                    ver[i - y1] = true;\n                    hor[j - x1] = true;\n                }\n            }\n        }\n        int width = hor.length, height = ver.length;\n        for (int i = 0; i < ver.length && height > 0; i++) {\n            if (ver[i]) break;\n            height--;\n        }\n        for (int i = ver.length - 1; i >= 0 && height > 0; i--) {\n            if (ver[i]) break;\n            height--;\n        }\n        for (int i = 0; i < hor.length && width > 0; i++) {\n            if (hor[i]) break;\n            width--;\n        }\n        for (int i = hor.length - 1; i >= 0 && width > 0; i--) {\n            if (hor[i]) break;\n            width--;\n        }\n        // System.out.println(\"answer : \" + (width * height));\n        return width * height;\n    }\n}",
    "submit_ts": 1719113162.0
}