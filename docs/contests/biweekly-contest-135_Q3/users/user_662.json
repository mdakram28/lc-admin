{
    "username": "Rene21",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int cnt_diff[k+1];\n        memset(cnt_diff, 0, sizeof(cnt_diff));\n        int n = nums.size();\n        for (int i = 0; i < n/2; i++) {\n            int d = abs(nums[i]-nums[n-i-1]);\n            cnt_diff[d]++;\n        }\n        \n        vector<pair<int, int>> v; // (cnt, diff_val)\n        for (int i = 0; i <= k; i++) {\n            if (cnt_diff[i]) {\n                v.push_back({cnt_diff[i], i});\n            }\n        }\n        sort(v.begin(), v.end(), [](const auto& x, const auto& y) {\n            if (x.first > y.first)\n                return true;\n            if (x.first < y.first)\n                return false;\n            return x.second < y.second;\n        });\n        /*\n        for (auto& i: v) {\n            cout << i.first << \",\" << i.second << \" \";\n        }\n        cout << maxcnt << \" \" << target_d << endl;\n        */\n        \n        int ans = n;\n        int prev_cnt = -1;\n        for (auto& p: v) {\n            if (p.first == prev_cnt)\n                continue;\n            int r = 0;\n            prev_cnt = p.first;\n            for (int i = 0; i < n/2; i++) {\n                int d = abs(nums[i]-nums[n-i-1]);\n                if (d != p.second) {\n                    if (min(nums[i], nums[n-i-1])+p.second > k && max(nums[i], nums[n-i-1])-p.second < 0) {\n                        r += 2;\n                        \n                    } else {\n                        r++;\n                    }\n                    if (r > ans)\n                        break;\n                }\n            }\n            ans = min(ans, r);\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721487966",
    "subm_id": "1327407136"
}