{
    "username": "Yuvraj Sahu",
    "submission": "from heapq import heappush, heappop\nclass Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n1, n2 = len(board), len(board[0])\n        rows_max = [[] for _ in range(n1)]\n        # cols_max = [[] for _ in range(n2)]\n\n        for i in range(n1):\n            for j in range(n2):\n                heappush(rows_max[i], (board[i][j], i, j))\n                if len(rows_max[i]) > 3:\n                    heappop(rows_max[i])\n                \n                # heappush(cols_max[j], (board[i][j], i, j))\n                # if len(cols_max[j]) > 3:\n                #     heappop(cols_max[j])\n        \n        \n        def find_max_sum(item1, item2, item3):\n            max_sum = float(\"-Inf\")\n\n            for num1, i1, j1 in item1:\n                for num2, i2, j2 in item2:\n                    for num3, i3, j3 in item3:\n                        if j1 != j2 and j2 != j3 and j1 != j3 and i1 != i2 and i2 != i3 and i3 != i1:\n                            max_sum = max(max_sum, num1+num2+num3)\n            return max_sum\n        \n        max_sum = float(\"-Inf\")\n        for i in range(n1):\n            for j in range(i+1, n1):\n                for k in range(j+1, n1):\n                    max_sum = max(max_sum, find_max_sum(rows_max[i], rows_max[j], rows_max[k]))\n        \n        # for i in range(n2):\n        #     for j in range(i+1, n2):\n        #         for k in range(j+1, n2):\n        #             max_sum = max(max_sum, find_max_sum(cols_max[i], cols_max[j], cols_max[k]))\n        \n        # print(cols_max, rows_max)\n        return max_sum\n        \n\n            \n            \n            \n\n\n\n",
    "submit_ts": "1723908927",
    "subm_id": "1359172725"
}