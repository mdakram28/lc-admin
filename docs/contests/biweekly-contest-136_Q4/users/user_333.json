{
    "username": "magical-curieugt",
    "submission": "class Solution:\n    def timeTaken(self, edges: List[List[int]]) -> List[int]:\n        n = len(edges) + 1\n        g = [[] for _ in range(n)]\n        for u , v in edges:\n            g[u].append(v)\n            g[v].append(u)\n            \n        f1 = [0] * n\n        f2 = [0] * n\n        \n        func = lambda x : 1 if x & 1 else 2\n        \n        def dfs(u , fa):\n            for v in g[u]:\n                if v == fa: \n                    continue\n                dfs(v , u)\n                nv = f1[v] + func(v)\n                if nv > f1[u]:\n                    f1[u] , f2[u] = nv , f1[u]\n                elif nv > f2[u]:\n                    f2[u] = nv  \n\n        dfs(0 , -1)     \n        up = [0] * n   \n        res = [0] * n\n        res[0] = f1[0]        \n        def re_root(u , fa):\n            for v in g[u]:\n                if fa == v:\n                    continue            \n                if f1[v] + func(v) == f1[u]:\n                    up[v] = max(up[u] , f2[u]) + func(u)\n                else:\n                    up[v] = max(up[u] , f1[u]) + func(u)\n                res[v] = max(f1[v] , up[v])\n                re_root(v , u)    \n        \n        re_root(0 , -1)\n        return res\n            \n            \n            \n            \n            \n            ",
    "submit_ts": "1722700280",
    "subm_id": "552279150"
}