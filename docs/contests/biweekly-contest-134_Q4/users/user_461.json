{
    "username": "Riyaa25",
    "submission": "class Solution {\npublic:\n    long long countSubarrays(vector<int>& nums, int k) {\n         int n = nums.size();\n    long long count = 0;\n    std::unordered_map<long long, long long> prevAndResults;\n\n    for (int i = 0; i < n; ++i) {\n        std::unordered_map<long long, long long> currAndResults;\n\n        if (nums[i] == k) {\n            ++count;\n        }\n        currAndResults[nums[i]] = 1;\n\n        for (const auto& [val, freq] : prevAndResults) {\n            long long newAndResult = val & nums[i];\n            if (newAndResult == k) {\n                count += freq;\n            }\n            currAndResults[newAndResult] += freq;\n        }\n\n        prevAndResults = std::move(currAndResults);\n    }\n\n    return count;\n    }\n};",
    "submit_ts": "1720279312",
    "subm_id": "1311746168"
}