{
    "username": "Manoj Patidar",
    "submission": "#include <vector>\n#include <algorithm>\n#include <climits>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long maxSum = LLONG_MIN;\n\n        vector<vector<long long>> topValues(m, vector<long long>(3, LLONG_MIN));\n        vector<vector<int>> topCols(m, vector<int>(3, -1));\n\n        for (int i = 0; i < m; ++i) {\n            vector<pair<long long, int>> values;\n            for (int j = 0; j < n; ++j) {\n                values.emplace_back(board[i][j], j);\n            }\n            sort(values.rbegin(), values.rend());\n\n            for (int k = 0; k < min(3, n); ++k) {\n                topValues[i][k] = values[k].first;\n                topCols[i][k] = values[k].second;\n            }\n        }\n\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int i = 0; i < 3; ++i) {\n                        for (int j = 0; j < 3; ++j) {\n                            if (topCols[r2][j] == topCols[r1][i]) continue;\n                            for (int k = 0; k < 3; ++k) {\n                                if (topCols[r3][k] == topCols[r1][i] || topCols[r3][k] == topCols[r2][j]) continue;\n\n                                long long currentSum = topValues[r1][i] + topValues[r2][j] + topValues[r3][k];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723910394",
    "subm_id": "1359229138"
}