{
    "username": "ryanzhang1730",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        \n        diff = []\n\n        for i in range(len(nums)):\n            diff.append(target[i] - nums[i])\n        \n        count = 0\n\n        #print(diff)\n\n        i = 0\n\n        while i < len(diff):\n            if diff[i] > 0:\n                j = i \n                m = diff[i]\n                while j < len(diff) and diff[j] > 0:\n                    m = min(m, diff[j])\n                    j += 1\n                \n                #print(m)\n                \n                j = i\n                while j < len(diff) and diff[j] > 0:\n                    diff[j] -= m\n                    j += 1\n                \n                count += m\n                if diff[i] > 0:\n                    i -= 1\n            elif diff[i] < 0:\n                j = i\n                m = diff[i]\n                while j < len(diff) and diff[j] < 0:\n                    m = max(m, diff[j])\n                    j += 1\n                \n                #print(m)\n                \n                j = i\n                while j < len(diff) and diff[j] < 0:\n                    diff[j] -= m\n                    j += 1\n\n                count -= m\n                if diff[i] < 0:\n                    i -= 1\n            #print(diff)\n            i += 1\n        \n        return count",
    "submit_ts": "1721531583",
    "subm_id": "1327964673"
}