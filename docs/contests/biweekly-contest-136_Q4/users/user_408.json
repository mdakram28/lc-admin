{
    "username": "zhiylu528",
    "submission": "class Solution {\npublic:\n    vector<int> timeTaken(vector<vector<int>>& edges) {\n        unordered_map<int, vector<int>> edgemap;\n\n        for (vector<int>& e : edges) {\n            edgemap[e[0]].push_back(e[1]);\n            edgemap[e[1]].push_back(e[0]);\n        }\n\n        int n = edgemap.size();\n\n        vector<int> res(n, 0);\n        int leaf;\n        for (pair<const int, vector<int>> p : edgemap) {\n            if (p.second.size() == 1) {\n                leaf = p.first;\n                break;\n            }\n        }\n\n        vector<int> temp(n, 0);\n\n        bfs(edgemap, temp, leaf);\n        vector<pair<int, int>> v1;\n\n        for (int i = 0; i < n; i++) {\n            pair<int, int> p {-temp[i], i};\n            auto it = lower_bound(v1.begin(), v1.end(), p);\n            v1.insert(it, p);\n            if (v1.size() > 5) v1.pop_back();\n        }\n        \n        for (pair<int, int> p : v1) {\n            bfs(edgemap, res, p.second);\n        }\n\n        vector<pair<int, int>> v2;\n        for (int i = 0; i < n; i++) {\n            pair<int, int> p {-res[i], i};\n            auto it = lower_bound(v2.begin(), v2.end(), p);\n            v2.insert(it, p);\n            if (v2.size() > 5) v2.pop_back();\n        }\n        for (pair<int, int> p : v2) {\n            bfs(edgemap, res, p.second);\n        }\n\n        return res;\n    }\n\n    void bfs(unordered_map<int, vector<int>>& edges, vector<int>& res, int n) {\n        unordered_set<int> been;\n        queue<pair<int, int>> q;\n        q.push({n, 0});\n        while(q.size()) {\n            pair<int, int> curr = q.front();\n            q.pop();\n            been.insert(curr.first);\n\n            res[curr.first] = max(res[curr.first], curr.second);\n            for (int n : edges[curr.first]) {\n                int time = curr.first % 2 ? 1 : 2;\n                if (been.count(n) == 0 && res[n] < res[curr.first] + time) {\n                    q.push({n, curr.second + time});\n                }\n            }\n        }\n    }\n};",
    "submit_ts": "1722700734",
    "subm_id": "1343251141"
}