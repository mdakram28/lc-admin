{
    "username": "loodv002",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def check(s):\n            p = defaultdict(list)\n            m = defaultdict(list)\n            for x, y in s:\n                p[x+y].append((x, y))\n                m[x-y].append((x, y))\n            if max(p) - min(p) >= max(m) - min(m):\n                return max(p) - min(p), p[max(p)][0], p[min(p)][0]\n            return max(m) - min(m), m[max(m)][0], m[min(m)][0]\n        \n        _, a, b = check(points)\n        ae = True\n        be = True\n        aa = []\n        ba = []\n        \n        for c in points:\n            if tuple(c) == a and ae:\n                ae = False\n            else:\n                aa.append(c)\n            if tuple(c) == b and be:\n                be = False\n            else:\n                ba.append(c)\n        # print(a, b)\n        # print(aa, ba)\n        x, _, _ = check(aa)\n        y, _, _ = check(ba)\n        return min(x, y)"
}