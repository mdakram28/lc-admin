{
    "username": "Srijan8282",
    "submission": "class Solution {\n\n    typedef long long ll;\n    unordered_map<string,int>m;\n    ll mod = 1e9 + 7;\n \n    void PrintName(string s){cout<<\"Srijan Submission\";}\n    void yahoo(ll t) { cout << \"Case #\" << t+1 << \": \"; }\n    ll calculategcd(ll a, ll b)\n    {\n        if (a == 0) return b;\n        return calculategcd(b % a, a);\n    }\n    long long findabs(long long a ,long long b)\n    {\n        return abs(a-b);\n    }\n    long long returnsquare(int l,int e){\n        return pow(l,e);\n    }\n\n    void print(bool flag, long long n ,vector<long long>&vec){\n        if(flag == 0){\n            cout<<-1<<endl;\n        }\n        else{\n            for(int i =0;i<n;i++){\n                cout<<vec[i]<<\" \";\n            }\n            cout<<endl;\n        } \n\n    }\n\n    ll binexp(ll a, ll b)\n    {\n        if (b == 0)\n            return 1;\n        ll res = binexp(a, b / 2);\n        if (b % 2 == 0)\n            return res * res;\n        else\n            return a * res * res;\n    }\n\n\n    ll hcf(ll a, ll b)\n    {\n        if (a % b == 0)\n            return b;\n        return hcf(b, a % b);\n    }\n    ll lcm(ll a,ll b){\n        return (a*b)/(hcf(a,b));\n    }\n\n    string make_replace(string &s,char i,char j){\n        replace(s.begin(),s.end(),i,j);\n        return s;\n    }\n\n    void filledup(vector<ll>&vec, unordered_map<ll,ll>&mp1, ll n){\n        for(auto &i : mp1){\n            if(i.second <= n){\n                vec[i.second-1] = i.first;\n            }\n        }\n    }\n    \n    ll helper(vector<int>& colors, int k,vector<ll>&temp){\n        ll alt=0;\n        ll n=colors.size();\n        for(int i=1;i<n;i++){\n            ll val=returnsquare(alt,0);\\\n            temp[i]= findabs(colors[i-1],colors[i]) + (temp[i]+ temp[i-1]);\n            val+= calculategcd(temp[i],temp[i-1]);\n        }\n        ll circlecenter=0;\n        for(int i=k+1;i<n;i++){\n            if(temp[i]-(temp[i-k]+k)==0){\n                alt++;\n                circlecenter=temp[i];\n            }\n        }\n        return alt;\n    }\n        \n        \n    long long digsum(long long n) {\n        ll sum = 0;\n        while (n) {\n            int last = n % 10;\n            sum += last;\n            n = n / 10;\n        }\n        return sum;\n    }\n\n    ll powerOf10(int exp) {\n        ll result = 1;\n        for (int i = 0; i < exp; ++i) {\n            result = (result * 10) % mod;\n        }\n        return result;\n    }\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors, int k) {\n        for(int i=0;i<k;i++){\n            colors.push_back(colors[i]);\n        }\n        k=k-1;\n        ll n=colors.size();\n        vector<ll>temp(n+1,0);\n        return helper(colors,k,temp);\n    }\n};",
    "submit_ts": "1720280699",
    "subm_id": "1311798947"
}