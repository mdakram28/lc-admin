{
    "username": "anshu_19",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n\n    long long totalCost = 0;\n    long long hSegments = 1; \n    long long vSegments = 1; \n\n    int i = 0, j = 0;\n\n    while (i < horizontalCut.size() && j < verticalCut.size()) {\n        if (horizontalCut[i] >= verticalCut[j]) {\n            totalCost += horizontalCut[i] * vSegments;\n            hSegments++;\n            i++;\n        } else {\n            totalCost += verticalCut[j] * hSegments;\n            vSegments++;\n            j++;\n        }\n    }\n\n    while (i < horizontalCut.size()) {\n        totalCost += horizontalCut[i] * vSegments;\n        i++;\n    }\n\n    while (j < verticalCut.size()) {\n        totalCost += verticalCut[j] * hSegments;\n        j++;\n    }\n\n    return totalCost;\n    }\n};",
    "submit_ts": "1720925399",
    "subm_id": "1320253424"
}