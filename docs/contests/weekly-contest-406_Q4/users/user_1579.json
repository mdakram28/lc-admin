{
    "username": "snah0902",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        i = 0\n        j = 0\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        numberHorizontalCuts = 0\n        numberVerticalCuts = 0\n        res = 0\n        while i < len(horizontalCut) and j < len(verticalCut):\n            horizontalCutCost = horizontalCut[i] * (numberVerticalCuts + 1)\n            verticalCutCost = verticalCut[j] * (numberHorizontalCuts + 1)\n            if horizontalCut[i] >= verticalCut[j]:\n                i += 1\n                numberHorizontalCuts += 1\n                res += horizontalCutCost\n            else:\n                j += 1\n                numberVerticalCuts += 1\n                res += verticalCutCost\n        while i < len(horizontalCut):\n            res += horizontalCut[i] * (numberVerticalCuts + 1)\n            numberHorizontalCuts += 1\n            i += 1\n        while j < len(verticalCut):\n            res += verticalCut[j] * (numberHorizontalCuts + 1)\n            j += 1\n        return res",
    "submit_ts": "1720925740",
    "subm_id": "1320264698"
}