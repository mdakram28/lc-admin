{
    "username": "Mayank Kumar shah",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        long long count = LLONG_MIN;\n\n        auto getTopColumns = [&](int row) {\n            vector<pair<int, int>> arr;\n            for (int j = 0; j < n; ++j) {\n                arr.push_back({board[row][j], j});\n            }\n            sort(arr.rbegin(), arr.rend());\n            return vector<pair<int, int>>(arr.begin(), arr.begin() + min(3, n));\n        };\n\n        vector<vector<pair<int, int>>> res(m);\n        for (int i = 0; i < m; ++i) {\n            res[i] = getTopColumns(i);\n        }\n\n        auto calculateMaxSum = [&](int i, int j, int k) {\n            long long localMaxSum = LLONG_MIN;\n            for (auto& c1 : res[i]) {\n                for (auto& c2 : res[j]) {\n                    if (c2.second == c1.second) continue;\n                    for (auto& c3 : res[k]) {\n                        if (c3.second == c1.second || c3.second == c2.second) continue;\n                        long long sum = static_cast<long long>(c1.first) + \n                                        static_cast<long long>(c2.first) + \n                                        static_cast<long long>(c3.first);\n                        localMaxSum = max(localMaxSum, sum);\n                    }\n                }\n            }\n            return localMaxSum;\n        };\n\n       \n        for (int i = 0; i < m; i++) {\n            for (int j = i + 1; j < m; j++) {\n                for (int k = j + 1; k < m; k++) {\n                    count = max(count, calculateMaxSum(i, j, k));\n                }\n            }\n        }\n\n        return count;\n    }\n};",
    "submit_ts": "1723909843",
    "subm_id": "1359207843"
}