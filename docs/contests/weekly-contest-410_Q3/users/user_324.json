{
    "username": "alianyu",
    "submission": "class Solution:\n    def countOfPairs(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [[0] * 51 for _ in range(n)]\n        M = 1000000000 + 7\n        if n == 1:\n            return nums[0] + 1\n\n        for j in range(0, nums[0]+1):\n            dp[0][j] = 1\n        \n        res = 0\n        for i in range(1, n):\n            for j in range(0, nums[i]+1):\n                # j: arr1[-1]\n                # k: arr1[-2]\n                # a: arr2[-1]\n                # b: arr2[-2]\n\n                for k in range(0, min(j, nums[i-1]) + 1):\n                    b = nums[i-1] - k\n                    a = nums[i] - j\n                    if b >= a:\n                        dp[i][j] = (dp[i][j] + dp[i-1][k]) % M\n                if i == n-1:\n                    res = (res + dp[i][j]) % M\n        \n        return res\n\n\n        '''\n\n        dp[i][j]: nums[0:i+1], arr1 ends with number j, arr2 ends with nums[i] - j\n\n        dp[i][j]: \n           += dp[i-1][k] (0<=k<=j and nums[i] - j >= nums[i-1] - k)\n        2000 * 50 * 50\n\n        return dp[n-1][0->nums[n-1]]\n        '''\n\n\n        ",
    "submit_ts": "1723346111",
    "subm_id": "1351570418"
}