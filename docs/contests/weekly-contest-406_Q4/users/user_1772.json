{
    "username": "pedantic-gaussxtm",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut = [-cost for cost in horizontalCut]\n        verticalCut = [-cost for cost in verticalCut]\n        heapq.heapify(horizontalCut)\n        heapq.heapify(verticalCut)\n\n        current_rows = 1\n        current_cols = 1\n        total_cost = 0\n\n        while horizontalCut or verticalCut:\n            if not verticalCut or (horizontalCut and horizontalCut[0] <= verticalCut[0]):\n                cost = -heapq.heappop(horizontalCut)\n                total_cost += cost * current_cols\n                current_rows += 1\n            else:\n                cost = -heapq.heappop(verticalCut)\n                total_cost += cost * current_rows\n                current_cols += 1\n\n        return total_cost",
    "submit_ts": "1720926447",
    "subm_id": "546446311"
}