{
    "username": "BitterSugar",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n \n        vector<pair<long long, pair<int, int>>> cells;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                cells.push_back({(long long)board[i][j], {i, j}});\n            }\n        }\n\n   \n        sort(cells.rbegin(), cells.rend());\n\n        long long maxSum = LLONG_MIN;\n\n        int limit = min(18, (int)cells.size());\n        for (int i = 0; i < limit; ++i) {\n            for (int j = i + 1; j < limit; ++j) {\n                for (int k = j + 1; k < limit; ++k) {\n               \n                    int row1 = cells[i].second.first, col1 = cells[i].second.second;\n                    int row2 = cells[j].second.first, col2 = cells[j].second.second;\n                    int row3 = cells[k].second.first, col3 = cells[k].second.second;\n                    if (row1 != row2 && row1 != row3 && row2 != row3 &&\n                        col1 != col2 && col1 != col3 && col2 != col3) {\n                        long long sum = cells[i].first + cells[j].first + cells[k].first;\n                        maxSum = max(maxSum, sum);\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};\n",
    "submit_ts": "1723909317",
    "subm_id": "1359187930"
}