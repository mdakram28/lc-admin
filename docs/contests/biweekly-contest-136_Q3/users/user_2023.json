{
    "username": "wiseeldrich2004",
    "submission": "class Solution \n{\npublic:\n    vector<vector<int>> f(vector<vector<int>>& matrix) \n    {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        int flips = 0;\n        vector<vector<int>> cells;\n        for (int i = 0; i <= (n - 1) / 2; ++i) \n        {\n            for (int j = 0; j <= (m - 1) / 2; ++j) \n            {\n                vector<int> cell;\n                if(i*2+1==n and j*2+1==m)\n                {\n                    cell ={\n                        matrix[i][j]\n                    };\n                } \n                else if(i*2+1==n and j*2+1!=m)\n                {\n                    cell ={\n                        matrix[i][j],\n                        matrix[i][m-1-j]\n                    };\n                }\n                else if(i*2+1!=n and j*2+1==m)\n                {\n                    cell ={\n                        matrix[i][j],\n                        matrix[n-1-i][j]\n                    };\n                } \n                else cell = {\n                    matrix[i][j],\n                    matrix[i][m - 1 - j],\n                    matrix[n - 1 - i][j],\n                    matrix[n - 1 - i][m - 1 - j]\n                };\n                int c0=0,c1=0;\n                for(int i:cell) if(i) c1++;else c0++;\n                cells.push_back({c0,c1});\n                // int zeros = count(cells.begin(), cells.end(), 0);\n                // int ones = count(cells.begin(), cells.end(), 1);\n            }\n        }\n        return cells;\n    }\n    int dp[100001][4];\n    int f(vector<vector<int>> &cells,int i,int c)\n    {\n        if(i==cells.size()) return c%4==0?0:1e6;\n        // make 0 ans \n        int &a=dp[i][c];if(a!=-1)return a;\n        int a1 = cells[i][1] + f(cells,i+1,(c)%4);\n        int a2 = cells[i][0] + f(cells,i+1,(c+cells[i][0]+cells[i][1])%4);\n        return a=min(a1,a2);\n    }\n\n    int minFlips(vector<vector<int>>& grid) \n    {\n        // int n=grid.size();\n        // int m=grid[0].size();\n        // vector<int> r(n),c(m);\n        // int c1=0;/\n        // for(auto i:grid) for(int j:i) c1+=j==1;\n        auto cells=f(grid);\n        memset(dp,-1,sizeof dp);\n        // for(auto i:cells)\n        // {\n        //     for(int j:i) cout << j << \" \";\n        //     cout << endl; \n        // }\n        int ans = f(cells,0,0); \n        return ans;\n    }   \n};",
    "submit_ts": "1722699548",
    "subm_id": "1343215040"
}