{
    "username": "SSYernar",
    "submission": "class Solution {\npublic:\n    // const int N = 50005;\n    long long t[50005 * 4], t1[50005 * 4], t2[50005 * 4], t3[50005 * 4];\n    int l[50005 * 4], r[50005 * 4];\n    void comb(int v) {\n        t[v] = t1[v] = t2[v] = t3[v] = 0;\n\n        t3[v] = max(t3[v], t1[v * 2] + t3[v * 2 + 1]);\n        t3[v] = max(t3[v], t3[v * 2] + t2[v * 2 + 1]);\n\n        t2[v] = t3[v];\n        t2[v] = max(t2[v], t[v * 2] + t3[v * 2 + 1]);\n        t2[v] = max(t2[v], t2[v * 2] + t2[v * 2 + 1]);\n\n        t1[v] = t3[v];\n        t1[v] = max(t1[v], t3[v * 2] + t[v * 2 + 1]);\n        t1[v] = max(t1[v], t1[v * 2] + t1[v * 2 + 1]);\n\n        t[v] = max(t1[v], t2[v]);\n        t[v] = max(t[v], t[v * 2] + t1[v * 2 + 1]);\n        t[v] = max(t[v], t2[v * 2] + t[v * 2 + 1]);\n        t[v] = max(t[v], t2[v * 2] + t1[v * 2 + 1]);\n    }\n    void build(int v, int tl, int tr, vector<int>& a) {\n        l[v] = tl;\n        r[v] = tr;\n        if (tl == tr) {\n            t[v] = max(0, a[tl]);\n            t1[v] = 0;\n            t2[v] = 0;\n            t3[v] = 0;\n            return;\n        }\n        int tm = (tl + tr) / 2;\n        build(v * 2, tl, tm, a);\n        build(v * 2 + 1, tm + 1, tr, a);\n\n        // for (int i = tl; i <= tr; i++) {\n\n        // }\n\n        comb(v);\n    }\n\n    void upd(int v, int tl, int tr, int pos, int x) {\n        if (tl == tr) {\n            t[v] = max(0, x);\n            t1[v] = 0;\n            t2[v] = 0;\n            t3[v] = 0;\n            return;\n        }\n        int tm = (tl + tr) / 2;\n        if (pos <= tm) {\n            upd(v * 2, tl, tm, pos, x);\n        }\n        else {\n            upd(v * 2 + 1, tm + 1, tr, pos, x);\n        }\n        comb(v);\n    }\n\n\n    int maximumSumSubsequence(vector<int>& a, vector<vector<int>>& queries) {\n        int n = a.size();\n        build(1, 0, n - 1, a);\n        const int mod = 1e9 + 7;\n        int ans = 0;\n        for (auto query: queries) {\n            int pos = query[0];\n            int x = query[1];\n            upd(1, 0, n - 1, pos, x);\n            int res = t[1] % mod;\n            ans += res;\n            if (ans >= mod) {\n                ans -= mod;\n            }\n            // if (pos == 1) {\n            //     for (int i = 1; i < 4 * n; i++) {\n            //         if (r[i] < 3) {\n            //             continue;\n            //         }\n            //         cout << i << \" [\" << l[i] << \", \" << r[i] << \"] \" << t[i] << \", \" << t1[i] << ' ' << t2[i] << ' ' << t3[i] <<  '\\n';\n            //     }\n            // }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1716693898.0
}