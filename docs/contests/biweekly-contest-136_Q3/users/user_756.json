{
    "username": "akshay_rajput12",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n           //int ans=INT_MAX;\n           int m=grid.size(),n=grid[0].size();\n           map<int,int>mp;\n           map<int,int>mp1;\n           for(int i=0;i<m/2;i++)\n           {\n                int c1=0,c2=n-1;\n              \n                while(c1<c2)\n                {\n                       int cnt1=0;\n                      if(grid[i][c1]==1)\n                            cnt1++;\n                       if(grid[i][c2]==1)\n                            cnt1++;\n                      if(grid[m-i-1][c1]==1)\n                            cnt1++;\n                       if(grid[m-i-1][c2]==1)\n                            cnt1++;\n                      c1++;\n                       c2--;\n                           mp[cnt1]++; \n                }\n              // cout<<cnt1;\n             \n           }\n        int ans=0;\n        int cnt1=0;\n        int cnt2=0;\n        if(m%2==1)\n        {\n             int c1=0,c2=n-1;\n           \n              while(c1<c2)\n                  \n              {\n                   int cnt1=0;\n                    if(grid[m/2][c1]==1)\n                            cnt1++;\n                    if(grid[m/2][c2]==1)\n                            cnt1++;\n                      c1++;\n                      c2--;\n                    mp1[cnt1]++;\n              }\n        }\n          if(n%2==1)\n            {\n             int c1=0,c2=m-1;  \n              while(c1<c2)         \n              {\n                   int cnt1=0;\n                    if(grid[c1][n/2]==1)\n                            cnt1++;\n                    if(grid[c2][n/2]==1)\n                            cnt1++;\n                      c1++;\n                      c2--;\n                    mp1[cnt1]++;\n              }\n             }\n        for(auto it:mp)\n        {\n             ans+=(it.second*min(it.first,4-it.first));\n        }\n        int need=0;\n        if(mp1[2]%2==1 && mp1[1]==0)\n              need=1;\n        ans+=mp1[1];\n        if(need==1)\n            ans+=2;\n        if((m%2==1 && n%2==1)&& grid[m/2][n/2]==1)\n            ans++;\n        \n        return ans;\n    }\n};",
    "submit_ts": "1722698343",
    "subm_id": "1343177597"
}