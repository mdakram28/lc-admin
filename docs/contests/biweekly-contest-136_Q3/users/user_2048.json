{
    "username": "sarveshhase2020",
    "submission": "class Solution {\nprivate:\n    void processMiddleRow(const vector<vector<int>>& grid, int n, int m, vector<int>& flipCounts) {\n        int left = 0;\n        int right = m - 1;\n\n        while (left < right) {\n            int sum = grid[n / 2][left] + grid[n / 2][right];\n            flipCounts[sum]++;\n            left++;\n            right--;\n        }\n    }\n\n    void processMiddleColumn(const vector<vector<int>>& grid, int n, int m, vector<int>& flipCounts) {\n        int top = 0;\n        int bottom = n - 1;\n\n        while (top < bottom) {\n            int sum = grid[top][m / 2] + grid[bottom][m / 2];\n            flipCounts[sum]++;\n            top++;\n            bottom--;\n        }\n    }\n\n    void adjustTotalFlips(int& totalFlips, const vector<int>& flipCounts) {\n        if (flipCounts[2] % 2 == 1) {\n            if (flipCounts[1] > 0) {\n                totalFlips += flipCounts[1];\n            } else {\n                totalFlips += 2;\n            }\n        } else {\n            totalFlips += flipCounts[1];\n        }\n    }\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int totalFlips = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                totalFlips++;\n            }\n        }\n\n        vector<int> flipCounts(3, 0);\n\n        if (n % 2 == 1) {\n            processMiddleRow(grid, n, m, flipCounts);\n        }\n\n        if (m % 2 == 1) {\n            processMiddleColumn(grid, n, m, flipCounts);\n        }\n\n        adjustTotalFlips(totalFlips, flipCounts);\n\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int sum = grid[i][j] + grid[n - 1 - i][j] + grid[i][m - 1 - j] + grid[n - 1 - i][m - 1 - j];\n                if (sum != 0 && sum != 4) {\n                    totalFlips += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return totalFlips;\n    }\n};",
    "submit_ts": "1722700166",
    "subm_id": "1343233649"
}