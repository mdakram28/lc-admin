{
    "username": "aj9045j",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n    sort(horizontalCut.rbegin(), horizontalCut.rend());\n    sort(verticalCut.rbegin(), verticalCut.rend());\n    \n    long long h_index = 0;\n    long long int v_index = 0;\n    long long int h_pieces = 1;\n    long long int v_pieces = 1;\n    long long int total_cost = 0;\n    \n    \n    while (h_index < horizontalCut.size() && v_index < verticalCut.size()) {\n        if (horizontalCut[h_index] >= verticalCut[v_index]) {\n            \n            total_cost += horizontalCut[h_index] * v_pieces;\n            h_pieces++;\n            h_index++;\n        } else {\n            \n            total_cost += verticalCut[v_index] * h_pieces;\n            v_pieces++;\n            v_index++;\n        }\n    }\n    \n   \n    while (h_index < horizontalCut.size()) {\n        total_cost += horizontalCut[h_index] * v_pieces;\n        h_index++;\n    }\n    \n    \n    while (v_index < verticalCut.size()) {\n        total_cost += verticalCut[v_index] * h_pieces;\n        v_index++;\n    }\n    \n    return total_cost;\n    }\n};",
    "submit_ts": "1720925673",
    "subm_id": "1320262470"
}