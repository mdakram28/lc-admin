{
    "username": "praneeth_nellut1",
    "submission": "class Solution:\n    def numberOfPermutations(self, n: int, requirements: List[List[int]]) -> int:\n        hashmap, mod = defaultdict(int), int(1e9) + 7\n        for i, j in requirements:\n            hashmap[i + 1] = j\n        dp = [[0 for i in range(401)] for j in range(n + 1)]\n        dp[0][0] = 1\n        for i in range(1, n + 1):\n            for j in range(401):\n                for k in range(i):\n                    if j - k >= 0:\n                        dp[i][j] = (dp[i][j] + dp[i - 1][j - k]) % mod\n            if i in hashmap:\n                temp = hashmap[i]\n                for j in range(401):\n                    if j != temp:\n                        dp[i][j] = 0\n        res = 0\n        for i in dp[n]:\n            res += i\n            res %= mod\n        return res\n            ",
    "submit_ts": "1719070593",
    "subm_id": "1296826909"
}