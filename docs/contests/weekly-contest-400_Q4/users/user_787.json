{
    "username": "babiesbobo",
    "submission": "class Solution {\npublic:\n    int minimumDifference(vector<int>& nums, int k) {\n        //make the AND of nums as close to k as possible whether bigger or smaller\n        int l=0;\n        int r=1;\n        int curr_val=nums[0];\n        int ret=INT_MAX;\n        unordered_map<int,int> one_count;\n        auto helper=[&one_count](int x){\n            int k=0;\n            while(x){\n                if((x&1)==1){\n                    ++one_count[k];\n                }\n                x=(x>>1);\n                ++k;\n            }\n        };\n        auto helper1=[&one_count](int x){\n            int k=0;\n            while(x){\n                if((x&1)==1){\n                    --one_count[k];\n                }\n                x=(x>>1);\n                ++k;\n            }\n        };\n        helper(nums[0]);\n        while(true){\n            ret=min(ret, abs(curr_val-k));\n            if(curr_val>k){\n                if(r>=nums.size()){\n                    break;\n                }\n                curr_val=(curr_val&nums[r]);\n                helper(nums[r]);\n                ++r;\n            } else if(curr_val<k){\n                if(l==r-1 && r < nums.size()){\n                    one_count.clear();\n                    ++l;\n                    ++r;\n                    helper(nums[l]);\n                    curr_val=nums[l];\n                    continue;\n                }\n                helper1(nums[l]);\n                ++l;\n                for(int k=0;k<31;++k){\n                    if(one_count[k]==(r-l)){\n                        curr_val=(curr_val|(1<<k));\n                    }\n                }\n            } else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": 1717299636.0
}