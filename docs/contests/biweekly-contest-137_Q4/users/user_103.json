{
    "username": "rui_er",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int n = board.size(), m = board[0].size();\n        if(n > m) {\n            swap(n, m);\n            vector<vector<int>> tmp(n, vector<int>(m));\n            for(int i = 0; i < n; ++i) {\n                for(int j = 0; j < m; ++j) {\n                    tmp[i][j] = board[j][i];\n                }\n            }\n            swap(tmp, board);\n        }\n        vector<vector<int>> idx(n, vector<int>(m));\n        for(int i = 0; i < n; ++i) {\n            for(int j = 0; j < m; ++j) {\n                idx[i][j] = j;\n            }\n            sort(idx[i].begin(), idx[i].end(), [&](int a, int b) {\n                return board[i][a] > board[i][b];\n            });\n            idx[i].resize(3);\n        }\n        long long mx1 = -1e18, mx2 = -1e18, ans = -1e18;\n        for(int i = 0; i < n; ++i) {\n            if(ans < board[i][idx[i][0]] + mx1 + mx2) {\n                for(int p = 0; p < 3; ++p) {\n                    for(int j = 0; j < i; ++j) {\n                        for(int q = 0; q <= min(3 - p, 2); ++q) {\n                            if(idx[i][p] == idx[j][q]) continue;\n                            for(int k = 0; k < j; ++k) {\n                                for(int r = 0; r <= min(3 - p - q, 2); ++r) {\n                                    if(idx[i][p] == idx[k][r] || idx[j][q] == idx[k][r]) continue;\n                                    ans = max(ans, 1LL * board[i][idx[i][p]] + board[j][idx[j][q]] + board[k][idx[k][r]]);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if(board[i][idx[i][0]] > mx1) mx2 = mx1, mx1 = board[i][idx[i][0]];\n            else if(board[i][idx[i][0]] > mx2) mx2 = board[i][idx[i][0]];\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1723906554",
    "subm_id": "556320403"
}