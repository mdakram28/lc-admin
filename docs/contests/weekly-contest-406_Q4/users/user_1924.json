{
    "username": "inspiring-colden7kl",
    "submission": "class Solution:\n    def minimumCost(\n            self, \n            m: int, \n            n: int, \n            horizontalCut: list[int], \n            verticalCut: list[int]) -> int:\n        max_bins = 1002\n        hor_bins = [0 for _ in range(max_bins)]\n        ver_bins = [0 for _ in range(max_bins)]\n\n        for hor_val in horizontalCut:\n            hor_bins[hor_val] += 1\n\n        for ver_val in verticalCut:\n            ver_bins[ver_val] += 1\n\n        # Initialize suffix sums arrays\n        hor_suffix = [0] * max_bins\n        ver_suffix = [0] * max_bins\n\n        # Calculate suffix sums for horizontal cuts\n        for i in range(max_bins - 1, -1, -1):\n            hor_suffix[i] = hor_bins[i] + (hor_suffix[i + 1] if i + 1 < max_bins else 0)\n        \n        # Calculate suffix sums for vertical cuts\n        for i in range(max_bins - 1, -1, -1):\n            ver_suffix[i] = ver_bins[i] + (ver_suffix[i + 1] if i + 1 < max_bins else 0)\n        \n        #if hor==ver set to ver\n        result = 0\n        for val in range(1,max_bins-1):\n            result += val * hor_bins[val] * (ver_suffix[val]+1)\n            result += val * ver_bins[val] * (hor_suffix[val+1]+1)\n        \n        return result\n",
    "submit_ts": "1720926526",
    "subm_id": "546446796"
}