{
    "username": "shivamxdd",
    "submission": "const int N=1e5+1;\nvector<int> v[N];\nclass Solution {\npublic:\n    \n    \n    void dfs(int par,int gpar,int dist,int & max_dist,int &node){\n        \n        if(dist>max_dist){\n            max_dist=dist;\n            node=par;\n        }\n        for(int child:v[par]){\n            if(child!=gpar){\n                dfs(child,par,dist+1,max_dist,node);\n            }\n        }\n    }\n    int minimumDiameterAfterMerge(vector<vector<int>>& v1, vector<vector<int>>& v2) {\n        int n=v1.size()+1;;\n        for(int i=0;i<=n;i++){\n            v[i].clear();\n        }\n        for(int i=0;i<n-1;i++){\n            int a=v1[i][0];\n            int b=v1[i][1];\n            v[a].push_back(b);\n            v[b].push_back(a);\n        }\n        int node=0;\n        int max_dist=0;\n        int ans=0;\n        int ansf=0;\n        dfs(0,-1,0,max_dist,node);\n        max_dist=0;\n        dfs(node,-1,0,max_dist,node);\n        ans+=(max_dist+1)/2;\n        ansf=max(ansf,max_dist);\n        // cout<<max_dist<<\" \";\n        \n        n=v2.size()+1;\n        for(int i=0;i<=n;i++){\n            v[i].clear();\n        }\n        for(int i=0;i<n-1;i++){\n            int a=v2[i][0];\n            int b=v2[i][1];\n            v[a].push_back(b);\n            v[b].push_back(a);\n        }\n         node=0;\n         max_dist=0;\n     \n        dfs(0,-1,0,max_dist,node);\n        max_dist=0;\n        dfs(node,-1,0,max_dist,node);\n        ans+=(max_dist+1)/2;\n        ansf=max(ansf,max_dist);\n        // cout<<max_dist<<' '<<endl;;\n        return max(ans+1,ansf);\n        \n        \n        \n        \n        \n        \n        \n        \n    }\n};",
    "submit_ts": "1719718670",
    "subm_id": "1304423132"
}