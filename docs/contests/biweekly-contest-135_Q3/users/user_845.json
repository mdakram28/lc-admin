{
    "username": "ramkumar_9301",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& n, int k) {\n        map<int, vector<int>> diffMap;\n        vector<int> allVals;\n \n        int sz = n.size();\n        int halfSz = sz / 2;\n        for(int i=0;i<1000;i++){\n            \n        }\n        for (int i = 0; i < halfSz; ++i) {\n            int x = n[i];\n            int y = n[sz - i - 1];\n            int d = std::abs(x - y);\n\n            int maxVal = max({x, y, k - x, k - y});\n            \n            diffMap[d].push_back(maxVal);\n            allVals.push_back(maxVal);\n        }\n\n        int minChanges = sz;\n        sort(allVals.begin(), allVals.end());\n\n        for (const auto& [d, vals] : diffMap) {\n            int pos = lower_bound(allVals.begin(), allVals.end(), d) - allVals.begin();\n            int changes = pos * 2 + (halfSz - pos);\n\n            for (int v : vals) {\n                changes -= (v < d) ? 2 : 1;\n            }\n\n            minChanges = min(minChanges, changes);\n        }\n\n        return minChanges;\n    }\n};",
    "submit_ts": "1721489149",
    "subm_id": "1327444394"
}