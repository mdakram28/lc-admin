{
    "username": "noobcoderr",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int res = INT_MAX;\n        int minDiff, maxDiff, minSum, maxSum;\n        minDiff = minSum = INT_MAX;\n        maxDiff = maxSum = INT_MIN;\n        priority_queue<int> maxSumQ, maxDiffQ;\n        priority_queue<int, vector<int>, greater<int>> minSumQ, minDiffQ;\n        for(vector<int>& p : points){\n            int sum = p[0] + p[1];\n            int diff = p[0] - p[1];\n            maxSumQ.push(sum);\n            minSumQ.push(sum);\n            maxDiffQ.push(diff);\n            minDiffQ.push(diff);\n        }\n        for(vector<int>& p : points){\n            int sum = p[0] + p[1];\n            int diff = p[0] - p[1];\n            vector<int> v(4, INT_MAX);\n            if(sum == minSumQ.top()){\n                v[0] = sum;\n                minSumQ.pop();\n            }\n            if(sum == maxSumQ.top()){\n                v[1] = sum;\n                maxSumQ.pop();\n            }\n            if(diff == minDiffQ.top()){\n                v[2] = diff;\n                minDiffQ.pop();\n            }\n            if(diff == maxDiffQ.top()){\n                v[3] = diff;\n                maxDiffQ.pop();\n            }\n            //    int maximum = max(maxsum - minsum, maxdiff - mindiff);\n\n            res = min(res, max(maxSumQ.top() - minSumQ.top(), maxDiffQ.top() - minDiffQ.top()));\n            if(v[0] != INT_MAX){\n                minSumQ.push(sum);\n            }\n            if(v[1] != INT_MAX){\n                maxSumQ.push(sum);\n            }\n            if(v[2] != INT_MAX){\n                minDiffQ.push(diff);\n            }\n            if(v[3] != INT_MAX){\n                maxDiffQ.push(diff);\n            }\n            \n        }\n        return res;\n        \n    }\n};"
}