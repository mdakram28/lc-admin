{
    "username": "sheldon",
    "submission": "class Solution {\n    typedef long long ll;\n    struct node{\n        int value = INT_MIN;\n        int row;\n        node(int a,int b){\n            value = a;\n            row = b;\n        }\n    };\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<int>v(m,0);\n        vector<vector<int>>u(m,v);\n        vector<vector<vector<int>>>dp(n,u);\n        vector<int>mx(m,INT_MIN); //\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\n        vector<node>pri(m,node(1,1));\n        for(int j = 0;j<n;j++){\n            for(int i = 0;i<m;i++){\n                mx[i] = max(mx[i],board[i][j]);\n                pri[i].value = mx[i];\n                pri[i].row = i;\n            }\n            sort(pri.begin(),pri.end(),[&](auto &a,auto &b)->bool{\n                return a.value > b.value;\n            });\n            int a1 = pri[0].row,a2 = pri[1].row;\n            if(a1 > a2){\n                swap(a1,a2);\n            }\n            for(int k = 0;k<m;k++){\n                for(int t = k+1;t<m;t++){\n                    if(k == a1 && t == a2){\n                        dp[j][k][t] = pri[2].value;\n                    }else if(k == a1){\n                        if(k == pri[0].row){\n                            dp[j][k][t] = pri[1].value;\n                        }else{\n                            dp[j][k][t] = pri[0].value;\n                        }\n                    }else if(t == a2){\n                        if(t == pri[0].row){\n                            dp[j][k][t] = pri[1].value;\n                        }else{\n                            dp[j][k][t] = pri[0].value;\n                        }\n                    }else if(k == a2){\n                        if(k == pri[0].row){\n                            dp[j][k][t] = pri[1].value;\n                        }else{\n                            dp[j][k][t] = pri[0].value;\n                        }\n                        \n                    }else if(t == a1){\n                        if(t == pri[0].row){\n                            dp[j][k][t] = pri[1].value;\n                        }else{\n                            dp[j][k][t] = pri[0].value;\n                        }\n                    }else{\n                        dp[j][k][t] = pri[0].value;\n                    }\n                    //cout<<j<<\" \"<<k<<\" \"<<t<<\" \"<<dp[j][k][t]<<endl;\n                }\n            }\n            \n        }\n        ll mn = 1LL*2*INT_MIN;\n        vector<ll>io(m,mn);\n        vector<vector<ll>>ddp(n,io);\n        for(int j = 0;j<m;j++){\n            for(int k = 0;k<m;k++){\n                if(k == j)  continue;\n                int ki = k,ji = j;\n                if(ki > ji){\n                    swap(ki,ji);\n                }\n                ddp[1][j] = max(ddp[1][j],1LL*board[k][1]+dp[0][ki][ji]);\n            }\n        }\n        for(int i = 2;i<n;i++){\n            for(int j = 0;j<m;j++){\n                ddp[i][j] = ddp[i-1][j];\n                for(int k = 0;k<m;k++){\n                    if(k == j)  continue;\n                    int ki = k,ji = j;\n                    if(ki > ji){\n                        swap(ki,ji);\n                    }\n                    ddp[i][j] = max(ddp[i][j],1LL*board[k][i]+dp[i-1][ki][ji]);\n                }\n            }\n        }\n        ll ret = 1LL*3*INT_MIN;\n        for(int i = 2;i<n;i++){\n            for(int j = 0;j<m;j++){\n                ret = max(ret,board[j][i]+ddp[i-1][j]);\n            }\n        }\n        return ret;\n    }\n};",
    "submit_ts": "1723909204",
    "subm_id": "556335009"
}