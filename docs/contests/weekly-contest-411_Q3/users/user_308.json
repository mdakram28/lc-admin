{
    "username": "lee_218",
    "submission": "class Solution:\n    def largestPalindrome(self, n: int, k: int) -> str:\n        \n        x=n%2\n        \n        \n        \n        memo_f=[[-1]*n for _ in range(10)]\n        \n        for i in range(10):\n            memo_f[i][0]=(i+1)%k\n        \n        \n\n       \n        def f(d,i):\n            if memo_f[d-1][i-1]!=-1:\n                return memo_f[d-1][i-1]\n            \n            memo_f[d-1][i-1]=(f(d,i-1)*10)%k\n            return  memo_f[d-1][i-1]\n            \n        \n\n        memo_t=collections.defaultdict(lambda:-1)\n        \n        \n        \n        \n        \n        \n        def t(i,l):\n            if i==n//2+x:                \n                return [] if l else ['',l]\n            \n            \n            if memo_t[i,l]!=-1:\n                return memo_t[i,l]\n            \n            for j in range(9,[-1,0][i==0],-1):                \n                if x and i==n//2:                    \n                    res=t(i+1,(f(j,n-i)+l)%k)                \n                else:\n                    res=t(i+1,(f(j,n-i)+f(j,1+i)+l)%k)                    \n                if res:\n                    memo_t[i,l]=[str(j),(f(j,n-i)+f(j,1+i)+l)%k] \n                    return memo_t[i,l]\n            memo_t[i,l]=0    \n            return memo_t[i,l]\n                \n                \n        res=''\n        \n        ct=0\n        for i in range(n//2+x):\n            \n            l=t(i,ct)\n            \n            res+=l[0]\n            ct=l[1]\n            \n        if x==0:\n            return res+res[::-1]\n        \n        return res+res[:-1][::-1]\n            \n            \n        ",
    "submit_ts": "1723951354",
    "subm_id": "1359769529"
}