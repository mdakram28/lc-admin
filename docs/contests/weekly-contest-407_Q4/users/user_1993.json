{
    "username": "vinaychowdary7",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        int n = nums.length;\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = nums[i] - target[i];\n        }\n        long minO=Math.abs(diff[0]);\n        for(int i=1;i<n;i++){\n                int lowersign=diff[i-1]>0?1:0;\n                int uppersign=diff[i]>0?1:0;\n                if(lowersign==uppersign){\n                    if(diff[i-1]==diff[i])continue;\n                    else if(Math.abs(diff[i-1])>Math.abs(diff[i])){\n                        continue;\n                    }\n                    else{\n                        minO-=Math.abs(diff[i-1]);\n                        minO+=Math.abs(diff[i]);\n                    }\n                }\n                else{\n                    minO+=Math.abs(diff[i]);\n                }\n        }\n        return minO;\n    }\n}",
    "submit_ts": "1721533851",
    "subm_id": "1328018042"
}