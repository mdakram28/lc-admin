{
    "username": "Mozhi_Shen",
    "submission": "class Solution:\n    def minimumOperations(self, nums: List[int], target: List[int]) -> int:\n        # a =[]\n        # for i in range(len(target)):\n        #     a.append(target[i]-nums[i])\n        # print(a)\n        stack =[]\n        is_negative = False if nums[0]- target[0] >= 0 else True\n        res = 0\n        for i in range(len(target)):\n            curr_diff = nums[i]- target[i]\n            # print(stack, curr_diff, res)\n            if not stack and curr_diff == 0:\n                continue\n            if not stack:\n                stack.append(curr_diff)\n                continue\n            if stack[-1] * curr_diff <= 0:\n                res += abs(stack[-1])\n                stack =[]\n                if curr_diff:\n                    stack.append(curr_diff)\n                continue\n            else:\n                this_round = 0\n                find_it = False\n                while stack and abs(stack[-1]) > abs(curr_diff):\n                    if not find_it:\n                        this_round = stack[-1]\n                        find_it = True\n                    stack.pop()\n                if this_round != 0:\n                    res +=abs(this_round - curr_diff)\n                while stack and stack[-1] == curr_diff:\n                    stack.pop()\n                stack.append(curr_diff)\n        # print(stack, res)\n        if stack:\n            res += abs(stack[-1])\n        return res",
    "submit_ts": "1721533091",
    "subm_id": "1328001050"
}