{
    "username": "rastsislau",
    "submission": "class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        \n        int n = s.size();\n        vector <int> prev(n,-1);\n        int last_0 = -1;\n        for (int i=0;i<n;i++)\n        {\n            prev[i] = last_0;\n            if (s[i] == '0')\n            {\n                last_0 = i;\n            }\n        }\n        int ans = 0;\n        for (int i=0;i<n;i++)\n        {\n            //cout << i << \" |||| \" << endl;\n            int max_zeros = int(sqrt(i+1));\n            int cur_zeros = 1;\n            int cur_ones = 0;\n            int cur_i = i;\n            if (s[i] == '1')\n            {\n                cur_i = prev[i];\n                ans += (i - prev[i] + 1);\n                cur_ones += (i - prev[i]);\n                if (cur_i==-1)\n                {\n                    ans--;\n                }\n            }\n            \n            //cout << i << \" |||| \" << ans << endl;\n\n            while (cur_i >= 0 && cur_zeros <= max_zeros)\n            {\n                int prev_zero = prev[cur_i];\n                int ones_to_pick = cur_i - prev_zero - 1;\n               // cout << cur_i<<\" \" << prev_zero << \" \" <<  ones_to_pick << \" --- \" << endl;\n                int limit = cur_zeros * cur_zeros - cur_ones;\n\n                if (limit <= ones_to_pick && ones_to_pick > 0)\n                {\n                    limit = max(limit, 0);\n                   // cout << i << \" \" << prev_zero << \" \" << cur_ones << \" \" << cur_zeros << \" \" << limit << \" \" << ans << \"  \";\n                    if (limit<= 1)\n                    {\n                        ans += ones_to_pick;\n                    }\n                    else\n                    {\n                        ans += (ones_to_pick - limit + 1);\n                    }\n                    \n                    //cout << ans << endl;\n                }\n                cur_ones += ones_to_pick;\n                cur_zeros++;\n                cur_i = prev_zero;\n                if (cur_i >= 0 && ((cur_zeros * cur_zeros) <= cur_ones))\n                {\n                   // cout << i << \" \" << prev_zero << \" \" << cur_ones << \" \" << cur_zeros << \" \" << ans << \"  \" << endl;\n                    ans++;\n                }\n            }\n            //cout << ans << endl;\n        }\n\n        return ans;\n\n\n        /*\n\n\n\n        */\n\n\n    }\n};",
    "submit_ts": "1722137303",
    "subm_id": "1335759912"
}