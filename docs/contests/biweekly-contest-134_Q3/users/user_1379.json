{
    "username": "_Surya_Pratap_",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& c, int k) {\n        int ans = 0 ;\n        int n = c.size() ;\n        vector <int> dp(2 * n + n, 1) ;\n        for(int i = 1 ; i < n ; i ++){\n            if(c[i] != c[i - 1]) dp[i] += dp[i - 1] ;\n        }\n         int idx = n ;\n        for(int i = 0 ; i < n ; i ++){\n            int prev = c[n - 1] ;\n            if(i > 0) prev = c[i - 1] ;\n            if(c[i] != prev) dp[idx] += dp[idx - 1] ;\n            idx ++ ;\n        }\n        for(int i = 0 ; i < n ; i ++){\n            if(dp[i + k - 1] - dp[i] + 1 == k) ans ++ ;\n        }\n        //for(auto &r : dp) cout << r << \" \" ;\n        return ans ;\n    }\n};",
    "submit_ts": "1720277897",
    "subm_id": "1311685122"
}