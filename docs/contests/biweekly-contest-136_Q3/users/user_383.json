{
    "username": "MunirKP",
    "submission": "def same(grid):\n    s = 0\n    for r in range(len(grid)):\n        for c in range(len(grid[0])):\n            ps = {(r,c), (len(grid)-r-1,c), (len(grid)-r-1,len(grid[0])-c-1), (r,len(grid[0])-c-1)}\n            v = sum(grid[x][y] for x,y in ps)\n            s += min(v, 4-v)\n            for x,y in ps: grid[x][y] = 0\n    return s\n\nclass Solution:\n    def minFlips(self, grid):\n        if len(grid)%2 == 0 and len(grid[0])%2 == 0:\n            return same(grid)\n        elif len(grid)%2 + len(grid[0])%2 == 1:\n            if len(grid[0])%2:\n                grid = [[grid[r][c] for r in range(len(grid))] for c in range(len(grid[0]))]\n            mid = grid[len(grid)//2]\n            v = sum(mid[x]!=mid[len(mid)-x-1] for x in range(len(mid)//2))\n            if v==0 and sum(mid)%4==2:\n                v = 2\n            grid = grid[:len(grid)//2] + grid[len(grid)//2+1:]\n        else:\n            mid = grid[len(grid)//2]\n            mid = mid[:len(mid)//2] + mid[len(mid)//2+1:]\n            mid = [r[len(r)//2] for r in grid[:len(grid)//2]] + mid + [r[len(r)//2] for r in grid[len(grid)//2+1:]]\n\n            v = sum(mid[x]!=mid[len(mid)-x-1] for x in range(len(mid)//2))\n            if v==0 and sum(mid)%4==2:\n                v = 2\n            v += grid[len(grid)//2][len(grid[0])//2]\n\n            grid = grid[:len(grid)//2] + grid[len(grid)//2+1:]\n            grid = [r[:len(r)//2]+r[len(r)//2+1:] for r in grid]\n\n        return v + same(grid)\n\n",
    "submit_ts": "1722697686",
    "subm_id": "1343155256"
}