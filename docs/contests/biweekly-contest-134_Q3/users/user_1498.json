{
    "username": "alokkumar9019",
    "submission": "class Solution {\npublic: \n    int numberOfAlternatingGroups(vector<int>& colors, int k) { \n        int n= colors.size(); \n        int cnt = 0; \n        int z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n        if (k==1) { \n            return n; \n        } \n        z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n \n        int a=1, i=1; \n        z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n        while (i<n+k-1) { \n            int cur = i,prev = i - 1; \n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            }\n            if (cur >= n) { \n                cur -= n; \n            } \n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            }\n            if (prev >= n) { \n                prev -= n; \n            } \n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            }\n \n            if (colors[cur] != colors[prev]) { \n                a++; \n            } else { \n                a=1; \n            }\n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            } \n  \n            if (a>= k) { \n                cnt++; \n            }\n\n            z=2;\n            while(z--){\n                int mx=max(1,2);\n            } \n \n            i++; \n        } \n\n        z=2;\n        while(z--){\n            int mx=max(1,2);\n        }\n \n        return cnt; \n    } \n};",
    "submit_ts": "1720280351",
    "subm_id": "1311786114"
}