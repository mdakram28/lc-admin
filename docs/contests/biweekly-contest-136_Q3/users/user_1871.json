{
    "username": "Swastyy",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& matrix) {\n        int rows = matrix.size(), cols = matrix[0].size();\n        int result = 0;\n        vector<int> middleShifts(3, 0);\n\n        if (rows % 2 == 1 && cols % 2 == 1) {\n            if (matrix[rows / 2][cols / 2] == 1) {\n                result += 1;\n            }\n        }\n\n        if (rows % 2 == 1) {\n            for (int left = 0, right = cols - 1; left < right; ++left, --right) {\n                int sum = matrix[rows / 2][left] + matrix[rows / 2][right];\n                middleShifts[sum] += 1;\n            }\n        }\n\n        if (cols % 2 == 1) {\n            for (int top = 0, bottom = rows - 1; top < bottom; ++top, --bottom) {\n                int sum = matrix[top][cols / 2] + matrix[bottom][cols / 2];\n                middleShifts[sum] += 1;\n            }\n        }\n\n        if (middleShifts[2] % 2 == 1) {\n            result += middleShifts[1] > 0 ? middleShifts[1] : 2;\n        } else {\n            result += middleShifts[1];\n        }\n\n        for (int i = 0; i < rows / 2; ++i) {\n            for (int j = 0; j < cols / 2; ++j) {\n                int topLeft = matrix[i][j];\n                int topRight = matrix[i][cols - 1 - j];\n                int bottomRight = matrix[rows - 1 - i][cols - 1 - j];\n                int bottomLeft = matrix[rows - 1 - i][j];\n                \n                \n                int sum = topLeft + bottomLeft + topRight + bottomRight;\n\n                if (sum != 0 && sum != 4) {\n                    result += min(sum, 4 - sum);\n                }\n            }\n        }\n\n        return result;\n    }\n};\n",
    "submit_ts": "1722700025",
    "subm_id": "1343229428"
}