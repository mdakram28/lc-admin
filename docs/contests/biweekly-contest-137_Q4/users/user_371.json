{
    "username": "Orz",
    "submission": "class Solution {\n    int n, m;\n    public long maximumValueSum(int[][] board) {\n        n = board.length; m = board[0].length;\n        List<PriorityQueue<int[]>> pqs = new ArrayList<>();\n        PriorityQueue<int[]> pref = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n        int[][] prefMx = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            prefMx[i][0] = board[0][i];\n        }\n        for (int i = 0; i < n; i++) {\n            pqs.add(new PriorityQueue<>(Comparator.comparingInt(a -> a[0])));\n            for (int j = 0; j < m; j++) {\n                if (pqs.get(i).size() < 3) {\n                    pqs.get(i).add(new int[] {board[i][j], j});\n                    if (i == 0) pref.add(new int[] {board[i][j], j});\n                }\n                else if (pqs.get(i).peek()[0] < board[i][j]) {\n                    pqs.get(i).poll();\n                    pqs.get(i).add(new int[] {board[i][j], j});\n                    if (i == 0) {\n                        pref.poll();\n                        pref.add(new int[] {board[i][j], j});\n                    }\n                }\n            }\n        }\n        long ans = -(1L<<40);\n        for (int i = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (var v1 : pqs.get(i)) {\n                    for (var v2 : pqs.get(j)) {\n                        for (var v3 : pref) {\n                            if (v1[1] != v2[1] && v1[1] != v3[1] && v2[1] != v3[1]) {\n                                ans = Math.max(ans, (long) v1[0] + v2[0] + v3[0]);\n                            }\n                        }\n                    }\n                }\n            }\n            if (i > 0) {\n                PriorityQueue<int[]> tmp = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));\n                for (int j = 0; j < m; j++) {\n                    prefMx[j][i] = Math.max(prefMx[j][i - 1], board[i][j]);\n                }\n                for (int j = 0; j < m; j++) {\n                    if (tmp.size() < 3) {\n                        tmp.add(new int[] {prefMx[j][i], j});\n                    } else if (tmp.peek()[0] < prefMx[j][i]) {\n                        tmp.poll();\n                        tmp.add(new int[] {prefMx[j][i], j});\n                    }\n                }\n                pref = tmp;\n                // System.out.println(i);\n                // for (int[] v : pref) {\n                //     System.out.println(v[0] + \" \" + v[1]);\n                // }\n                // System.out.println();\n            }\n        }\n        return ans;\n    }\n}\n/*\n\nInput\nboard = [[70,-16,31],[2,75,37],[67,-95,-44]]\nOutput\n176\nExpected\n173\n*/",
    "submit_ts": "1723909629",
    "subm_id": "1359199802"
}