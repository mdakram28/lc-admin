{
    "username": "rp3601",
    "submission": "struct TrieNode{\n    struct TrieNode *children[26];\n\tint cnt;\n\tTrieNode(){\n\t\tcnt = 1e5;\n\t\tfor(int i=0;i<26;i++) children[i]=NULL;\n\t}\n};\n\nvoid insert(TrieNode *root, string& s, int c) {\n\tfor(int i = 0; i < s.size(); i++) {\n\t\tint ind = s[i] - 'a';\n\t\tif(root->children[ind]==NULL){\n\t\t\troot->children[ind] = new TrieNode();\n\t\t}\n\t\troot = root->children[ind];\n\t}\n    root->cnt = min(root->cnt,c);\n}\n\n\nclass Solution {\npublic:\n    int sol(int i, string &target, TrieNode* root, TrieNode* top, vector<int>& dp){\n        if(i==target.size()) return 0;\n        if(dp[i]!=-1) return dp[i];\n        int mn = 1e9;\n        for(int j = i; j < target.size(); j++) {\n            int ind = target[j] - 'a';\n            if(root->children[ind]!=NULL){\n                root = root->children[ind];\n                if(root->cnt!=1e5){\n                    int val = sol(j+1,target,top,top,dp);\n                    if(val!=-1)\n                        mn = min(mn,root->cnt+val);\n                }\n                \n            }\n            else break;\n        }\n        if(mn==1e9) mn = -1;\n        return dp[i] = mn;\n    }\n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        TrieNode *root = new TrieNode();\n        for(int i=0;i<words.size();i++)\n            insert(root,words[i],costs[i]);\n        vector<int> dp(target.size(),-1);\n        int val = sol(0,target,root,root,dp);\n        return val;\n        \n    }\n};",
    "submit_ts": "1720324349",
    "subm_id": "1312397370"
}