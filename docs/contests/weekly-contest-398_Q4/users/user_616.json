{
    "username": "jitesh_acharya",
    "submission": "class Solution {\npublic:\nmap<pair<int,pair<int,int>>,int> dp;\n    \n    int rec(int jump,int k,long long curr,bool cons)\n    {\n        if(dp.find({curr,{jump,cons}})!=dp.end())\n            return dp[{curr,{jump,cons}}];\n        if(curr==k)\n        {\n            int off=0;\n            if(jump<2 && !cons)\n            {\n                \n                off=rec(jump,k,curr-1,true);\n                \n            }\n            if(jump==0)\n                 return dp[{curr,{jump,cons}}]= 2+off;\n             return dp[{curr,{jump,cons}}]= 1+off;\n            \n        }\n        if(curr>k)\n        {\n            if(curr==k+1 && !cons)\n            {\n                if(jump==0)\n                    return dp[{curr,{jump,cons}}]= 2;\n                 return dp[{curr,{jump,cons}}]= 1;\n            }\n             return dp[{curr,{jump,cons}}]= 0;\n        }\n        // go down\n        int d=0;\n        if(!cons && curr>0)\n            d=rec(jump,k,curr-1,true);\n        int nd=0;\n        long long next=(1ll<<jump);\n        nd=rec(jump+1,k,next+curr,false);\n         return dp[{curr,{jump,cons}}]= d+nd;\n    }\n    int waysToReachStair(int k) {\n        return rec(0,k,1,false);\n    }\n};",
    "submit_ts": "1716088160",
    "subm_id": "1261805797"
}