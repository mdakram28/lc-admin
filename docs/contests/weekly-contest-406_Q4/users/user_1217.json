{
    "username": "Himanshu2208",
    "submission": "class Solution {\n    private static void reverseArray(int[] arr) {\n        int l = 0;\n        int r = arr.length - 1;\n        while (l < r) {\n            int temp = arr[l];\n            arr[l] = arr[r];\n            arr[r] = temp;\n            l++;\n            r--;\n        }\n    }\n\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        reverseArray(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverseArray(verticalCut);\n        int hor = 1, ver = 1;\n        long ans = 0;\n        int hIdx = 0, vIdx = 0;\n        while (hIdx < horizontalCut.length && vIdx < verticalCut.length) {\n            if (horizontalCut[hIdx] >= verticalCut[vIdx]) {\n                ans += (long) horizontalCut[hIdx] * ver;\n                hor++;\n                hIdx++;\n            } else {\n                ans += (long) verticalCut[vIdx] * hor;\n                ver++;\n                vIdx++;\n            }\n        }\n        while (hIdx < horizontalCut.length) {\n            ans += (long) horizontalCut[hIdx] * ver;\n            hIdx++;\n        }\n        while (vIdx < verticalCut.length) {\n            ans += (long) verticalCut[vIdx] * hor;\n            vIdx++;\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1720925768",
    "subm_id": "1320265595"
}