{
    "username": "violet_07",
    "submission": "\nclass SegmentTree:\n    def __init__(self, n):\n        self.n = n\n        self.tree = defaultdict(int)\n\n    def update(self, index: int, val) -> None:\n        index += self.n\n        self.tree[index] = val\n\n        while index > 0:\n            left = right = index\n            if index % 2 == 0:\n                right = index + 1\n            else:\n                left = index - 1\n            self.tree[index // 2] = self.tree[left] + self.tree[right]\n            index //= 2\n\n    def sumRange(self, left: int, right: int) -> int:\n        if left > right:\n            return 0\n        \n        # Find the sum in the range [left+n, right+n] in the tree\n        left += self.n\n        right += self.n\n        res = 0\n        while left <= right:\n            if left % 2 == 1:\n                res += self.tree[left]\n                left += 1\n            if right % 2 == 0:\n                res += self.tree[right]\n                right -= 1\n            left //= 2\n            right //= 2\n        return res\n\nclass Solution:\n    def countOfPeaks(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n        \n        n = len(nums)\n        sgt = SegmentTree(len(nums))\n        \n        for i in range(1, n - 1):\n            if nums[i - 1] < nums[i] and nums[i] > nums[i + 1]:\n                sgt.update(i, 1)\n                # print('xxx')\n\n        ans = []\n        for t, l, r in queries:\n            if t == 1:\n                ans.append(sgt.sumRange(l + 1, r - 1))\n            else:\n                i, v = l, r\n                if i > 0 and i < n - 1:\n                    sgt.update(i, 0)\n                if i - 1 > 0:\n                    sgt.update(i - 1, 0)\n                if i + 1 < n - 1:\n                    sgt.update(i + 1, 0)\n                    \n                nums[i] = v\n                for i in range(i - 1, min(i + 2, n - 1)):\n                    if nums[i - 1] < nums[i] and nums[i] > nums[i + 1]:\n                        sgt.update(i, 1)\n                        \n        return ans\n                    \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        ",
    "submit_ts": 1718506924.0
}