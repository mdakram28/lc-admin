{
    "username": "aditya712001",
    "submission": "class Solution {\npublic:\n    // #define int long long int\n    long long countSubarrays(vector<int>& a, int k) {\n        long long int ans=0,n=a.size();\n        vector<vector<int>> b(n,vector<int>(31,n));\n        for(int i=0;i<=30;i++)\n        {\n            stack<int> st;\n            for(int j=0;j<n;j++)\n            {\n                while(!st.empty() && !(a[j]&(1<<i)))\n                {\n                    b[st.top()][i]=j;\n                    st.pop();\n                }\n                st.push(j);\n            }\n        }\n        // set<int> s;\n        for(int i=0;i<n;i++)\n        {\n            sort(b[i].begin(),b[i].end());\n            int subans=a[i],minn=n-1,maxx=n-1;\n            // s.insert(subans);\n            if(subans==k)\n                minn=i-1;\n            for(auto x:b[i])\n            {\n                if(x==n)\n                break;\n                subans&=a[x];\n                if(subans==k)\n                minn=min(x-1,minn);\n                if(subans<k)\n                {\n                    maxx=x-1;\n                    break;\n                }\n                // s.insert(subans);\n            }\n            // cout<<maxx<<\" \"<<minn<<\" \";\n            ans+=max(0,maxx-minn);\n        }\n        // for(auto x:s)\n        // ans=min(ans,abs(k-x));\n        return ans;\n    }\n};",
    "submit_ts": "1720280279",
    "subm_id": "1311783460"
}