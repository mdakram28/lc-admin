{
    "username": "Harsh Mehta",
    "submission": "class Solution {\npublic:\n    \n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<pair<long long,int>>> rowMax(m,vector<pair<long long,int>>(3,{LONG_MIN,-1}));\n        for(int i = 0 ; i < m ; i++) {\n            for(int j = 0 ; j < n ; j++) {\n                if(rowMax[i][0].first <= board[i][j]) {\n                    rowMax[i][2] = rowMax[i][1];\n                    rowMax[i][1] = rowMax[i][0];\n                    rowMax[i][0].first = board[i][j];\n                    rowMax[i][0].second = j;\n                }\n                else if(rowMax[i][1].first <= board[i][j]) {\n                    rowMax[i][2] = rowMax[i][1];\n                    rowMax[i][1].first = board[i][j];\n                    rowMax[i][1].second = j;\n                }\n                else if(rowMax[i][2].first <= board[i][j]) {\n                    rowMax[i][2].first = board[i][j];\n                    rowMax[i][2].second = j;\n                }\n            }\n        }\n        vector<pair<long long,pair<int, int>>> v;\n        for(int i = 0 ; i < m ; i++) {\n            for(int j = 0 ; j < 3 ; j++) {\n                //cout << rowMax[i][j].first << \" \" ;\n                v.push_back({rowMax[i][j].first, {i,rowMax[i][j].second}});\n            }\n            //cout << endl;\n        }\n        sort(v.begin() , v.end() , greater<pair<long long, pair<int,int>>>());\n        //for(int i = 0 ; i < v.size() ; i++)\n        //    cout << v[i].first << \" = \" << v[i].second.first << \" , \" << v[i].second.second << endl;\n        //cout << \"size : \" << v.size() << endl;\n        long long maxAns = LLONG_MIN;\n        //vector<pair<long long, pair<vector<int>, vector<int>>>> dp(v.size(),{-1, {{-1,-1,-1},{-1,-1,-1}}});\n        for(int i = 0 ; i < v.size() && i < 30; i++) {\n            for(int j = i+1 ; j < v.size() && j < 30 ; j++) {\n                if(v[i].second.first == v[j].second.first || v[i].second.second == v[j].second.second)\n                    continue;\n                for(int k = j+1 ; k < v.size() && k < 30 ; k++) {\n                    if(v[i].second.first == v[k].second.first || v[k].second.first == v[j].second.first)\n                        continue;\n                    if(v[i].second.second == v[k].second.second || v[k].second.second == v[j].second.second)\n                        continue;\n                    maxAns = max(maxAns, v[i].first + v[j].first + v[k].first);\n                }\n            }\n        }\n        return maxAns;\n    }\n};",
    "submit_ts": "1723909719",
    "subm_id": "1359203190"
}