{
    "username": "REED_W",
    "submission": "class Solution {\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        return sln1(n, queries);\n    }\n\n    private int[] sln1(int n, int[][] qs){\n        int m = qs.length;\n        TreeMap<Integer, Integer> treemap = new TreeMap<>();\n        for(int i = 0;i<n;i++) treemap.put(i, i+1);\n        int[] res =new int[m];\n        int size = n-1;\n        for(int i = 0;i<m;i++){\n            int k = qs[i][0];\n            if(treemap.containsKey(k)){\n                k = treemap.get(k);\n                while(treemap.containsKey(k) && k<qs[i][1]){\n                    int next = treemap.get(k);\n                    treemap.remove(k);\n                    k = next;\n                    size--;\n                }\n                treemap.put(qs[i][0] ,qs[i][1]);\n            }\n            res[i] = size;\n        }\n        return res;\n    }\n}",
    "submit_ts": "1722742700",
    "subm_id": "1343775145"
}