{
    "username": "hmmhmmhmm",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int n = nums.size();\n        int i = 0;\n        int j = n-1;\n        map<int, int> ma;\n        vector<int> se;\n        \n        while(i<j){\n            ma[(abs(nums[j]-nums[i]))]++;\n            int temp = -1;\n            if(nums[j]> nums[i]){\n                temp = max(temp, k-nums[i]);\n                temp = max(temp, nums[j] - 0);\n            }\n            else{\n                temp = max(temp, k-nums[j]);\n                temp = max(temp, nums[i] - 0);\n            }\n            se.push_back(temp);\n            i++;\n            j--;\n            \n        }\n        int res = INT_MAX;\n        sort(se.begin(), se.end());\n        // for(auto v:se){\n        //     cout << v << \" \";\n        // }\n        // cout <<endl;\n        int total = n/2;\n        \n        \n        for(auto v:ma){\n            int own = v.second;\n            int single = 0;\n            int doublee = 0;\n            auto it = lower_bound(se.begin(), se.end(), v.first);\n            if(it != se.begin()){\n                it --;\n                doublee = it - se.begin() + 1;\n            }\n            single = total - own - doublee;\n            \n            int final = 2*doublee + single;\n            res = min(final, res);\n            \n        }\n        \n        return res;\n    }\n};",
    "submit_ts": "1721488428",
    "subm_id": "1327421937"
}