{
    "username": "tc80",
    "submission": "class Trie:\n\n    def __init__(self):\n        self.root = {}\n\n    def insert(self, word, cost) -> None:\n        node = self.root\n        for c in word:\n            if c not in node:\n                node[c] = {}\n            node = node[c]\n        if 'word' in node:\n            node['word'] = min(node['word'], cost)\n        else:\n            node['word'] = cost\n        return None\n\nclass Solution:\n    def minimumCost(self, target: str, words: List[str], costs: List[int]) -> int:\n\n        t = Trie()\n        for i, w in enumerate(words):\n            t.insert(words[i], costs[i])\n\n        # def backtrack(cur):\n        #     if len(cur) == len(target):\n        #         return 0\n        #     if len(cur) > len(target):\n        #         return float('inf')\n        #     cost = float('inf')\n\n        #     # build up substring of what we need left and search for it in the trie\n        #     node = t.root\n        #     for i, c in enumerate(target[len(cur):]):\n        #         if c not in node:\n        #             break\n        #         node = node[c]\n        #         if 'word' in node:\n        #             cost = min(cost, node['word'] + backtrack(cur+target[len(cur):len(cur)+i+1]))\n        #     return cost\n\n        # res = backtrack(\"\")\n        @cache\n        def backtrack(idx):\n            if idx == len(target):\n                return 0\n            if idx > len(target):\n                return float('inf')\n            cost = float('inf')\n\n            # build up substring of what we need left and search for it in the trie\n            node = t.root\n            for i in range(idx, len(target)):\n                c = target[i]\n                if c not in node:\n                    break\n                node = node[c]\n                if 'word' in node:\n                    cost = min(cost, node['word'] + backtrack(i+1))\n            return cost\n\n        res = backtrack(0)\n        if res == float('inf'):\n            return -1\n        return res",
    "submit_ts": "1720322632",
    "subm_id": "1312355067"
}