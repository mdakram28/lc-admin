{
    "username": "thirdbest",
    "submission": "typedef long long ll;\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& a, int k) {\n        ll n = size(a);\n        vector<ll> cnt(32, -1);\n        int ans = INT_MAX;\n        for (auto i = 0; i < n; ++i) {\n            vector<ll> idx;\n            for (auto j = 0; j < 32; ++j) if (((a[i] >> j) & 1)) {\n                    if (cnt[j] != -1) idx.push_back(cnt[j]);\n                }\n            sort(begin(idx), end(idx), greater<ll>());\n            int cur = a[i];\n            ans = min(ans, abs(cur - k));\n            for (auto& j: idx) {\n                cur &= a[j];\n                // cout << i << \" \" << j << \" \" << cur << \"\\n\";\n                ans = min(ans, abs(cur - k));\n            }\n            \n            for (auto j = 0; j < 32; ++j) {\n                if ((a[i] >> j) & 1) continue;\n                cnt[j] = i;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": 1717298919.0
}