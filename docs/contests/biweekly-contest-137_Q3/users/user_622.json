{
    "username": "Ryan Cook",
    "submission": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        n,m = len(board), len(board[0])\n        pq = []\n\n        mv = -float('inf')\n\n        for i in range(n):\n            for j in range(m):\n                mv = max(mv, board[i][j])\n        for i in range(n):\n            for j in range(m):    \n                heapq.heappush(pq, (-board[i][j]-(mv*2), [i], [j]))\n\n        while pq:\n            v, r, c = heapq.heappop(pq)\n            if len(r) == 3:\n                return -v\n            v += mv\n            for i in range(n):\n                for j in range(m):\n                    if i not in r and j not in c:\n                        heapq.heappush(pq,(v-board[i][j], r+[i], c+[j]))\n",
    "submit_ts": "1723907287",
    "subm_id": "1359099982"
}