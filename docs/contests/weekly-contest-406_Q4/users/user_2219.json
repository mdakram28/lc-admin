{
    "username": "yingwu_sg",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<int, bool>> cuts;\n         for (int h : horizontalCut)\n             cuts.push_back({ h, true });\n         for (int v : verticalCut)\n             cuts.push_back({ v, false });\n\n         sort(cuts.begin(), cuts.end());\n         int th = 1, tv = 1;//multiply for cuts\n         long long total = 0;\n         for (int i = cuts.size() - 1; i >= 0; i--) {\n             if (cuts[i].second)\n                 total += cuts[i].first * th;\n             else\n                 total += cuts[i].first * tv;\n             if (cuts[i].second)\n                 tv++;\n             else\n                 th++;\n         }\n         return total;\n    }\n};",
    "submit_ts": "1720926407",
    "subm_id": "1320285357"
}