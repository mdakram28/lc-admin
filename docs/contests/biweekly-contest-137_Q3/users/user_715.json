{
    "username": "norikame",
    "submission": "class Solution {\n    const long long LINF = (long long)(1e18);\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size(), n = board.front().size();\n        vector<vector<pair<int, int>>> blst(m);\n        for (int i=0; i<m; ++i) {\n            for (int j=0; j<n; ++j) blst[i].emplace_back(board[i][j], j);\n            sort(blst[i].rbegin(), blst[i].rend());\n            while ((int)blst[i].size() > 3) blst[i].pop_back();\n        }\n        long long res = -LINF;\n        for (int i=0; i<m; ++i) for (int j=0; j<m; ++j) for (int k=0; k<m; ++k) {\n            if (i == j || i == k || j == k) continue;\n            long long val = 0;\n            int pi = -1, pj = -1;\n            val += blst[i][0].first;\n            pi = blst[i][0].second;\n            if (pi != blst[j][0].second) {\n                val += blst[j][0].first;\n                pj = blst[j][0].second;\n            }\n            else {\n                val += blst[j][1].first;\n                pj = blst[j][1].second;\n            }\n            if (pi != blst[k][0].second && pj != blst[k][0].second) val += blst[k][0].first;\n            else if (pi != blst[k][1].second && pj != blst[k][1].second) val += blst[k][1].first;\n            else val += blst[k][2].first;\n            res = max(res, val);\n        }\n        return res;\n    }\n};\n",
    "submit_ts": "1723908484",
    "subm_id": "1359154558"
}