{
    "username": "abhimai2004",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int totalFlips = 0;\n\n        if (n % 2 == 1 && m % 2 == 1) {\n            if (grid[n / 2][m / 2] == 1) {\n                totalFlips += 1;\n            }\n        }\n\n        vector<int> countPairs(3, 0);\n\n        if (n % 2 == 1) {\n            countRowPairs(grid[n / 2], m, countPairs);\n        }\n\n        if (m % 2 == 1) {\n            countColumnPairs(grid, n, m, countPairs);\n        }\n\n        if (countPairs[2] % 2 == 1) {\n            if (countPairs[1] > 0) {\n                totalFlips += countPairs[1];\n            } else {\n                totalFlips += 2;\n            }\n        } else {\n            totalFlips += countPairs[1];\n        }\n\n        totalFlips += countQuadrantFlips(grid, n, m);\n\n        return totalFlips;\n    }\n\nprivate:\n    void countRowPairs(const vector<int>& row, int m, vector<int>& countPairs) {\n        int left = 0, right = m - 1;\n        while (left < right) {\n            int sum = row[left] + row[right];\n            countPairs[sum]++;\n            left++;\n            right--;\n        }\n    }\n\n    void countColumnPairs(const vector<vector<int>>& grid, int n, int m, vector<int>& countPairs) {\n        int top = 0, bottom = n - 1;\n        while (top < bottom) {\n            int sum = grid[top][m / 2] + grid[bottom][m / 2];\n            countPairs[sum]++;\n            top++;\n            bottom--;\n        }\n    }\n\n    int countQuadrantFlips(const vector<vector<int>>& grid, int n, int m) {\n        int quadrantFlips = 0;\n        for (int i = 0; i < n / 2; ++i) {\n            for (int j = 0; j < m / 2; ++j) {\n                int a = grid[i][j];\n                int b = grid[n - 1 - i][j];\n                int c = grid[i][m - 1 - j];\n                int d = grid[n - 1 - i][m - 1 - j];\n                int sum = a + b + c + d;\n                if (sum != 0 && sum != 4) {\n                    quadrantFlips += min(sum, 4 - sum);\n                }\n            }\n        }\n        return quadrantFlips;\n    }\n};\n\n",
    "submit_ts": "1722700038",
    "subm_id": "1343229796"
}