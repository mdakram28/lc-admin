{
    "username": "himanshuarya3110",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        vector<pair<long long, char>> cuts;\n        for (int cost : horizontalCut) {\n            cuts.push_back({cost, 'H'});\n        }\n        for (int cost : verticalCut) {\n            cuts.push_back({cost, 'V'});\n        }\n        \n        sort(cuts.rbegin(), cuts.rend());\n        \n        long long h_pieces = 1;\n        long long v_pieces = 1;\n        long long total_cost = 0;\n        \n        for (auto& cut : cuts) {\n            int cost = cut.first;\n            char direction = cut.second;\n            \n            if (direction == 'H') {\n                total_cost += cost * v_pieces;\n                h_pieces++;\n            } else { \n                total_cost += cost * h_pieces;\n                v_pieces++;\n            }\n        }\n        \n        return total_cost;\n    }\n};",
    "submit_ts": "1720925593",
    "subm_id": "1320259882"
}