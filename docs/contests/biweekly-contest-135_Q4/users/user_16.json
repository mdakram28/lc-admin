{
    "username": "skywalkert",
    "submission": "class Solution {\npublic:\n    long long maximumScore(vector<vector<int>>& grid) {\n        typedef long long LL;\n        static const int maxn = (int)1e2 + 9;\n        static const LL INFLL = 0x3f3f3f3f3f3f3f3fLL;\n        static LL f[maxn][maxn], g[maxn][maxn], h[maxn][maxn], s[maxn];\n        int n = grid.size();\n        for(int i = 0; i <= n; ++i) {\n            f[i][0] = 0;\n            for(int j = 1; j <= n; ++j)\n                f[i][j] = -INFLL;\n        }\n        for(int i = 0; i < n; ++i) {\n            s[0] = 0;\n            for(int j = 1; j <= n; ++j)\n                s[j] = s[j - 1] + grid[j - 1][i];\n            for(int j = 0; j <= n; ++j) {\n                g[j][0] = f[j][0];\n                for(int k = 1; k <= n; ++k)\n                    g[j][k] = max(g[j][k - 1], f[j][k]);\n                h[j][n + 1] = 0;\n                for(int k = n; k >= 0; --k)\n                    h[j][k] = max(h[j][k + 1], f[j][k] + (j < k ? s[k] - s[j] : 0));\n            }\n            for(int j = 0; j <= n; ++j)\n                for(int k = 0; k <= n; ++k) {\n                    f[j][k] = max(g[k][j] + (k < j ? s[j] - s[k] : 0), h[k][j + 1]);\n                    // if(f[j][k] > 0)\n                    //     printf(\"%d %d %d: %lld\\n\", i, j, k, f[j][k]);\n                }\n        }\n        LL ans = -INFLL;\n        for(int i = 0; i <= n; ++i)\n            ans = max(ans, f[0][i]);\n        return ans;\n    }\n};",
    "submit_ts": "1721488523",
    "subm_id": "1327424944"
}