{
    "username": "Shadab_1581",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int numRows = grid.size();\n        int totalOnes = 0;\n        int numCols = grid[0].size();\n        int totalFlips = 0;\n        int singleFlips = 0;\n\n        for (int row = 0; row < numRows / 2; ++row) {\n            for (int col = 0; col < numCols / 2; ++col) {\n                int topLeft = grid[row][col];\n                int bottomLeft = grid[numRows - row - 1][col];\n                int topRight = grid[row][numCols - col - 1];\n                int bottomRight = grid[numRows - row - 1][numCols - col - 1];\n                \n                int countZeroes = 0, countOnes = 0;\n                \n                if (topLeft == 0) countZeroes++;\n                else countOnes++;\n                \n                if (bottomLeft == 0) countZeroes++;\n                else countOnes++;\n                \n                if (topRight == 0) countZeroes++;\n                else countOnes++;\n                \n                if (bottomRight == 0) countZeroes++;\n                else countOnes++;\n                \n                if (countOnes >= countZeroes) {\n                    totalOnes += 4;\n                }\n                \n                totalFlips += min(countZeroes, countOnes);\n            }\n        }\n        \n        if (numRows % 2 == 1) {\n            int midRow = numRows / 2;\n            for (int col = 0; col < numCols / 2; ++col) {\n                if (grid[midRow][col] != grid[midRow][numCols - col - 1]) {\n                    singleFlips++;\n                    totalOnes += 2;\n                    totalFlips++;\n                } else {\n                    totalOnes += grid[midRow][col] * 2;\n                }\n            }\n        }\n        \n        if (numCols % 2 == 1) {\n            int midCol = numCols / 2;\n            for (int row = 0; row < numRows / 2; ++row) {\n                if (grid[row][midCol] != grid[numRows - row - 1][midCol]) {\n                    totalFlips++;\n                    singleFlips++;\n                    totalOnes += 2;\n                } else {\n                    totalOnes += grid[row][midCol] * 2;\n                }\n            }\n        }\n        \n        int middleElement = -3;\n        if (numRows % 2 == 1 && numCols % 2 == 1) {\n            totalOnes += grid[numRows / 2][numCols / 2];\n            middleElement = 1;\n        }\n        \n        int remainder = totalOnes % 4;\n        if (remainder == 0) return totalFlips;\n        if (remainder == 2 && singleFlips > 0) return totalFlips;\n        if (remainder == 3 && middleElement == 1 && singleFlips > 0) return totalFlips + 1;\n        if (remainder == 1 && middleElement == 1) return totalFlips + 1;\n        \n        return totalFlips + remainder;\n    }\n};\n\n",
    "submit_ts": "1722699027",
    "subm_id": "1343199299"
}