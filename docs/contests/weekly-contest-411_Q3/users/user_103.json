{
    "username": "Pranjal Singh",
    "submission": "class Solution {\npublic:\n    string largestPalindrome(int n, int k) {\n        int mdk[n+1];\n        mdk[0]=1%k;\n        for(int i=1;i<=n;i++) mdk[i]=(mdk[i-1]*(10%k))%k;\n        if(n%2){\n            int m=n/2+1;\n            vector<vector<int>> dp(m,vector<int>(k,-1));\n            for(int i=0;i<=9;i++) {\n                int x=n-m;\n                int y=(mdk[x]*i)%k;\n                dp[m-1][y]=i;\n            }\n            for(int i=m-2;i>=0;i--){\n                int x=(mdk[i]+mdk[n-i-1])%k;\n                for(int j=0;j<=9;j++){\n                    int y=(x*j)%k;\n                    for(int p=0;p<k;p++){\n                        if(dp[i+1][p]!=-1){\n                            dp[i][(y+p)%k]=j;\n                        }\n                    }\n                }\n            }\n\n            string res;\n            res.push_back(dp[0][0]+'0');\n            if(n==1){\n                return res;\n            }\n            int p;\n            int x=(mdk[0]+mdk[n-1])%k;\n            int y=(x*dp[0][0])%k;\n            p=(k-y)%k;\n            for(int i=1;i<m-1;i++){\n                res.push_back(dp[i][p]+'0');\n                int x=(mdk[i]+mdk[n-1-i])%k;\n                int y=(x*dp[i][p])%k;\n                p=(p-y+k)%k;\n            }\n            // cout<<p<<'\\n';\n            res.push_back(dp[m-1][p]+'0');\n            for(int j=m-2;j>=0;j--) res.push_back(res[j]);\n            return res;\n        }else{\n            int m=n/2;\n            vector<vector<int>> dp(m+1,vector<int>(k,-1));\n            dp[m][0]=0;\n            for(int i=m-1;i>=0;i--){\n                int x=(mdk[i]+mdk[n-i-1])%k;\n                for(int j=0;j<=9;j++){\n                    int y=(x*j)%k;\n                    for(int p=0;p<k;p++){\n                        if(dp[i+1][p]!=-1){\n                            dp[i][(y+p)%k]=j;\n                        }\n                    }\n                }\n            }\n\n            string res;\n            res.push_back(dp[0][0]+'0');\n\n            int p;\n            int x=(mdk[0]+mdk[n-1])%k;\n            int y=(x*dp[0][0])%k;\n            p=(k-y)%k;\n            for(int i=1;i<=m-1;i++){\n                res.push_back(dp[i][p]+'0');\n                int x=(mdk[i]+mdk[n-1-i])%k;\n                int y=(x*dp[i][p])%k;\n                p=(p-y+k)%k;\n            }\n            // cout<<p<<'\\n';\n            for(int j=m-1;j>=0;j--) res.push_back(res[j]);\n            return res;\n        }\n\n        return \"\";\n    }\n};",
    "submit_ts": "1723951131",
    "subm_id": "1359764010"
}