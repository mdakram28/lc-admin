{
    "username": "Manjot Singh",
    "submission": "class Solution {\npublic:\n    long long maximumValueSum(vector<vector<int>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n\n        vector<vector<int>> maxValues(m, vector<int>(3, INT_MIN));\n        vector<vector<int>> colIndices(m, vector<int>(3, -1));\n\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                for (int k = 0; k < 3; ++k) {\n                    if (board[i][j] > maxValues[i][k]) {\n                        for (int l = 2; l > k; --l) {\n                            maxValues[i][l] = maxValues[i][l-1];\n                            colIndices[i][l] = colIndices[i][l-1];\n                        }\n                        maxValues[i][k] = board[i][j];\n                        colIndices[i][k] = j;\n                        break;\n                    }\n                }\n            }\n        }\n\n        long long maxSum = LLONG_MIN;\n\n        for (int r1 = 0; r1 < m; ++r1) {\n            for (int r2 = r1 + 1; r2 < m; ++r2) {\n                for (int r3 = r2 + 1; r3 < m; ++r3) {\n                    for (int c1 = 0; c1 < 3; ++c1) {\n                        for (int c2 = 0; c2 < 3; ++c2) {\n                            if (colIndices[r2][c2] == colIndices[r1][c1]) continue;\n                            for (int c3 = 0; c3 < 3; ++c3) {\n                                if (colIndices[r3][c3] == colIndices[r1][c1] || colIndices[r3][c3] == colIndices[r2][c2]) continue;\n                                long long currentSum = (long long)maxValues[r1][c1] + maxValues[r2][c2] + maxValues[r3][c3];\n                                maxSum = max(maxSum, currentSum);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return maxSum;\n    }\n};",
    "submit_ts": "1723909254",
    "subm_id": "1359185485"
}