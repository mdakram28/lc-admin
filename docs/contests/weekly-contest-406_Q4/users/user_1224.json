{
    "username": "ChristopherJiang",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Integer[] horizontalCutsInteger = Arrays.stream(horizontalCut).boxed().toArray(Integer[]::new);\n        Integer[] verticalCutsInteger = Arrays.stream(verticalCut).boxed().toArray(Integer[]::new);\n\n        // Sort the cut costs in descending order\n        Arrays.sort(horizontalCutsInteger, Collections.reverseOrder());\n        Arrays.sort(verticalCutsInteger, Collections.reverseOrder());\n\n        // Convert back to int arrays if necessary\n        horizontalCut = Arrays.stream(horizontalCutsInteger).mapToInt(Integer::intValue).toArray();\n        verticalCut = Arrays.stream(verticalCutsInteger).mapToInt(Integer::intValue).toArray();\n\n        // Initialize total cost\n        long totalCost = 0;\n\n        // Initialize the number of segments created\n        int horizontalSegments = 1;\n        int verticalSegments = 1;\n\n        // Pointers for the horizontal and vertical cuts\n        int hIndex = 0;\n        int vIndex = 0;\n\n        // Iterate until all cuts are made\n        while (hIndex < horizontalCut.length && vIndex < verticalCut.length) {\n            if (horizontalCut[hIndex] >= verticalCut[vIndex]) {\n                totalCost += (long) horizontalCut[hIndex] * verticalSegments;\n                horizontalSegments++;\n                hIndex++;\n            } else {\n                totalCost += (long) verticalCut[vIndex] * horizontalSegments;\n                verticalSegments++;\n                vIndex++;\n            }\n        }\n\n        // Add remaining horizontal cuts\n        while (hIndex < horizontalCut.length) {\n            totalCost += (long) horizontalCut[hIndex] * verticalSegments;\n            hIndex++;\n        }\n\n        // Add remaining vertical cuts\n        while (vIndex < verticalCut.length) {\n            totalCost += (long) verticalCut[vIndex] * horizontalSegments;\n            vIndex++;\n        }\n\n        return totalCost;\n    }\n}",
    "submit_ts": "1720925830",
    "subm_id": "1320267550"
}