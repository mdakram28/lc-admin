{
    "username": "alfrnava_07",
    "submission": "class Solution {\npublic:\n    \n    vector<int> adj[1001];\n    bool b;\n    vector<bool> vb;\n    \n    void dfs1(int nod, int &X, int &Y, vector<vector<int>>& circles)\n    {\n        if(vb[nod])\n            return;\n        if(circles[nod][0] + circles[nod][2] >= X || circles[nod][1] - circles[nod][2] <= 0)\n            b = true;\n        vb[nod] = true;\n        for(int i = 0; i < adj[nod].size(); i++)\n            dfs1(adj[nod][i], X, Y, circles);\n    }\n    \n    void dfs2(int nod, int &X, int &Y, vector<vector<int>>& circles)\n    {\n        if(vb[nod])\n            return;\n        if(circles[nod][1] - circles[nod][2] <= 0 || circles[nod][0] + circles[nod][2] >= X)\n            b = true;\n        vb[nod] = true;\n        for(int i = 0; i < adj[nod].size(); i++)\n            dfs2(adj[nod][i], X, Y, circles);\n    }\n    \n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vb.resize(n+1);\n        for(int i = 0; i < n; i++)\n        {\n            double dis = sqrt((long long)(circles[i][1]-Y)*(long long)(circles[i][1]-Y)+(long long)(circles[i][0]-X)*(long long)(circles[i][0]-X));\n            if(circles[i][2] >= dis)\n                return false;\n        }\n        for(int i = 0; i < n; i++)\n        {\n            double dis = sqrt((long long)(circles[i][1])*(long long)(circles[i][1])+(long long)(circles[i][0])*(long long)(circles[i][0]));\n            if(circles[i][2] >= dis)\n                return false;\n        }\n        for(int i = 0; i < n; i++)\n            for(int j = i+1; j < n; j++)\n            {\n                double dis = sqrt((long long)(circles[i][1]-circles[j][1])*(long long)(circles[i][1]-circles[j][1])+(long long)(circles[i][0]-circles[j][0])*(long long)(circles[i][0]-circles[j][0]));\n                if(circles[i][2] + circles[j][2] >= dis)\n                {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        for(int i = 0; i < n; i++)\n        {\n            if(circles[i][0]-circles[i][2] <= 0)\n            {\n                b = false;\n                vb.clear();\n                dfs1(i, X, Y, circles);\n                if(b)\n                    return false;\n            }\n        }\n        for(int i = 0; i < n; i++)\n        {\n            if(circles[i][1] + circles[i][2] >= Y)\n            {\n                b = false;\n                vb.clear();\n                dfs2(i, X, Y, circles);\n                if(b)\n                    return false;\n            }\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138539",
    "subm_id": "1335793350"
}