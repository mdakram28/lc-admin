{
    "username": "ryanwong0127",
    "submission": "class SegmentTree:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n        self.value = 0\n        self.left = None\n        self.right = None\n\ndef build(start, end):\n    if start > end:\n        return None\n    root = SegmentTree(start, end)\n    if start == end:\n        return root\n    mid = (start + end) // 2\n    root.left = build(start, mid)\n    root.right = build(mid + 1, end)\n    return root\n\ndef range_query(root, start, end):\n    if not root or root.end < start or root.start > end:\n        return 0\n    if start <= root.start and root.end <= end:\n        return root.value\n    return range_query(root.left, start, end) + range_query(root.right, start, end)\n\ndef modify(root, idx, value):\n    if not root:\n        return\n    if root.start == idx and root.end == idx:\n        root.value = value\n        return\n    mid = (root.start + root.end) // 2\n    if idx <= mid:\n        modify(root.left, idx, value)\n    else:\n        modify(root.right, idx, value)\n    root.value = (root.left.value if root.left else 0) + (root.right.value if root.right else 0)\n\n\nclass Solution:\n    def countOfPeaks(self, a: List[int], q: List[List[int]]) -> List[int]:\n        n = len(a)\n        root = build(0, n - 1)\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] and a[i] > a[i + 1]:\n                modify(root, i, 1)\n        \n        res = []\n        for query in q:\n            x, y, z = query\n            if x == 1:\n                res.append(range_query(root, y + 1, z - 1))\n            elif x == 2:\n                if y > 0 and y < n - 1:\n                    if a[y] > a[y - 1] and a[y] > a[y + 1]:\n                        modify(root, y, 0)\n                if y > 1 and a[y - 1] > a[y - 2] and a[y - 1] > a[y]:\n                    modify(root, y - 1, 0)\n                if y < n - 2 and a[y + 1] > a[y] and a[y + 1] > a[y + 2]:\n                    modify(root, y + 1, 0)\n\n                a[y] = z\n\n                if y > 0 and y < n - 1:\n                    if a[y] > a[y - 1] and a[y] > a[y + 1]:\n                        modify(root, y, 1)\n                if y > 1 and a[y - 1] > a[y - 2] and a[y - 1] > a[y]:\n                    modify(root, y - 1, 1)\n                if y < n - 2 and a[y + 1] > a[y] and a[y + 1] > a[y + 2]:\n                    modify(root, y + 1, 1)\n        \n        return res",
    "submit_ts": 1718507520.0
}