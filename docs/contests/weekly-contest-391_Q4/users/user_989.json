{
    "username": "dekail",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def man(p1, p2):\n            return abs(p1[0] - p2[0]) + abs(p1[1] - p2[1])\n\n        n = len(points)\n        a1 = [p[0] - p[1] for p in points]\n        a2 = [p[0] + p[1] for p in points]\n        a3 = [- p[0] + p[1] for p in points]\n        a4 = [- p[0] - p[1] for p in points]\n        a1.sort()\n        a2.sort()\n        a3.sort()\n        a4.sort()\n        print(a1)\n        print(a2)\n        print(a3)\n        print(a4)\n        result = inf\n        for p in points:\n            d = -inf\n            num1 = p[0] - p[1]\n            if num1 == a1[0]:\n                d = max(d, a1[-1] - a1[1])\n            elif num1 == a1[-1]:\n                d = max(d, a1[-2] - a1[0])\n            else:\n                d = max(d, a1[-1] - a1[0])\n\n            num2 = p[0] + p[1]\n            if num2 == a2[0]:\n                d = max(d, a2[-1] - a2[1])\n            elif num2 == a2[-1]:\n                d = max(d, a2[-2] - a2[0])\n            else:\n                d = max(d, a2[-1] - a2[0])     \n                \n            num3 = - p[0] + p[1]\n            if num3 == a3[0]:\n                d = max(d, a3[-1] - a3[1])\n            elif num3 == a3[-1]:\n                d = max(d, a3[-2] - a3[0])\n            else:\n                d = max(d, a3[-1] - a3[0])\n                \n            num4 = - p[0] - p[1]\n            if num4 == a4[0]:\n                d = max(d, a4[-1] - a4[1])\n            elif num4 == a4[-1]:\n                d = max(d, a4[-2] - a4[0])\n            else:\n                d = max(d, a4[-1] - a4[0])\n            \n            result = min(result, d)\n        return result"
}