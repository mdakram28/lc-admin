{
    "username": "hanzhoutang",
    "submission": "const int INF = INT_MAX / 2;\n\nclass Solution {\npublic:\n    struct Node {\n        int v = INF; \n        Node* children[26] = {0}; \n        ~Node() {\n            for(int i = 0;i<26;i++) {\n                if(children[i] != nullptr) {\n                    delete children[i]; \n                    children[i] = nullptr; \n                }\n            }\n        }\n    };\n    \n    struct Trie {\n        Node* root = new Node(); \n        ~Trie() {\n            delete root; \n        }\n        void insert(const string& str, int cost) {\n            Node* ptr = root; \n            for(char ch : str) {\n                const int k = ch - 'a'; \n                if(ptr->children[k] == nullptr) {\n                    ptr->children[k] = new Node(); \n                }\n                ptr = ptr->children[k];\n            }\n            ptr->v = min(ptr->v, cost); \n        }\n    };\n    \n    long long f(int i, const string& t, vector<long long>& dp, Node* root) {\n        //cout<<\"i= \"<<i<<endl;\n        if(i == t.size()) {\n            return 0; \n        }\n        if(dp[i] != -1) {\n            return dp[i]; \n        }\n        Node* ptr = root; \n        long long ret = INF; \n        for(int j = 0; j + i < t.size(); j++) {\n            int k = t[i + j] - 'a'; \n            if(ptr->children[k] == nullptr) {\n                break; \n            }\n            ptr = ptr->children[k]; \n            if(ptr->v < INF) {\n                ret = min(ret, ptr->v + f(i + j + 1, t, dp, root)); \n            }\n        }\n        return dp[i] = ret; \n    }\n    \n    int minimumCost(string target, vector<string>& words, vector<int>& costs) {\n        Trie trie; \n        for(int i = 0;i<words.size();i++) {\n            trie.insert(words[i], costs[i]); \n        }\n        //cout<<\"target.size() \"<<target.size()<<endl;\n        //cout<<\"word.size() \"<<words.size()<<endl;\n        vector<long long> dp(target.size(), -1); \n        long long ret = f(0, target, dp, trie.root); \n        if(ret >= INF) {\n            return -1; \n        }\n        return ret; \n    }\n};",
    "submit_ts": "1720322213",
    "subm_id": "1312343798"
}