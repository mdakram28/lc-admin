{
    "username": "DreamFist",
    "submission": "class Solution {\n    private int mod=(int)(1e9)+7;\n    public int countOfPairs(int[] nums) {\n        int[][][] dp=new int[nums.length][51][51];\n        for(int i=0;i<nums.length;i++){\n           for(int j=0;j<51;j++){\n                Arrays.fill(dp[i][j],-1);\n           }\n        }\n        int total=0;\n        int n=nums[0];\n        for(int k=0;k<=n;k++){\n             total=(total+recurse(1,k,n-k,nums,dp))%mod;\n        }\n        return total;\n    }\n    public int recurse(int i, int oldInc,int oldDec,int[] nums,int[][][] dp){\n        if(i>=nums.length) return 1;\n         if(dp[i][oldInc][oldDec]!=-1) return dp[i][oldInc][oldDec];\n        int n=nums[i];\n        \n        int total=0;\n        for(int k=0;k<=n;k++){\n            \n            if(oldInc<=k && oldDec>=(n-k) )\n                total=(total+recurse(i+1,k,n-k,nums,dp))%mod;\n        }\n        return dp[i][oldInc][oldDec]=total;\n    }\n}",
    "submit_ts": "1723346637",
    "subm_id": "1351581873"
}