{
    "username": "mr_bean_solves",
    "submission": "class Solution {\n    public int numberOfAlternatingGroups(int[] colors, int k) {\n        int n = colors.length;\n        int[] dp = new int[n];\n        dp[0] = 1;\n        dp[1] = colors[0] != colors[1] ? 2 : 1;\n        int count = 0;\n        for(int i=2;i<n;i++){\n            if(colors[i] != colors[i-1]){\n                dp[i] = dp[i-1] + 1;\n            }else{\n                dp[i] = 1;\n            }\n            if(dp[i] >= k){\n                count++;\n            }\n        }\n        for(int i=0;i<k-1;i++){\n            if(colors[i] != colors[(i-1+n)%n]){\n                int length = dp[n-1] + i + 1;\n                if(length >= k){\n                    count++;\n                }\n            }else{\n                break;\n            }\n        }\n        return count;\n    }\n}",
    "submit_ts": "1720278454",
    "subm_id": "1311709846"
}