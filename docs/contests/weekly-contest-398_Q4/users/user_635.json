{
    "username": "hacch141",
    "submission": "class Solution {\npublic:\n\n    int solve(long long st, long long jump, bool isDown, int k, map<long long, map<long long, map<bool, int>>>& mp) {\n        if((!isDown && st > k) || (st - 1 > k)) return 0;\n\n        if(mp[st][jump].count(isDown)) return mp[st][jump][isDown];\n\n        int ans = (st == k), up = 0, down = 0;\n        up = solve(st + (1LL << jump), jump + 1, true, k, mp);\n        if(isDown && st > 0) down = solve(st - 1, jump, false, k, mp);\n        return mp[st][jump][isDown] = ans + up + down;\n    }\n\n    int waysToReachStair(int k) {\n        map<long long, map<long long, map<bool, int>>> mp;\n        return solve(1, 0, true, k, mp);\n    }\n};",
    "submit_ts": "1716088858",
    "subm_id": "1261826028"
}