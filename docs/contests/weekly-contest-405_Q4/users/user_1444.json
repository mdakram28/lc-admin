{
    "username": "rohanchoudhary2000",
    "submission": "class Solution {\n    public class TrieNode {\n        int val;\n        List<TrieNode> nxt;\n\n        TrieNode() {\n            val = Integer.MAX_VALUE;\n            nxt = new ArrayList<>(26);\n            for (int i = 0; i < 26; i++) {\n                nxt.add(null); \n            }\n        }\n    }\n\n    int n,m;\n    int[] dp = new int[50001];\n    String ss;\n    TrieNode root = new TrieNode();\n\n    public void rec(int idx) {\n        String s = ss.substring(idx, m);\n        TrieNode cur = root;\n\n        for(int i=0;i<s.length() && cur!=null;i++) {\n            int c = s.charAt(i)-'a';\n            cur = cur.nxt.get(c);\n\n            if(cur == null) break;\n\n            if(cur.val < Integer.MAX_VALUE) {\n                int j = idx+i;\n                if(idx == 0) {       \n                    dp[j] = Math.min(dp[j], cur.val);\n                } else {\n                    dp[j] = Math.min(dp[j], dp[idx-1] + cur.val);\n                }\n            }\n        }\n    }\n\n    public int minimumCost(String target, String[] words, int[] costs) {\n        ss = target;\n        n = words.length;\n        m = target.length();\n        for(int i=0;i<n;i++) {\n            String word = words[i];\n            TrieNode cur = root;\n            for(char c: word.toCharArray()) {\n                int idx = c - 'a';\n                if (cur.nxt.get(idx) == null) \n                    cur.nxt.set(idx, new TrieNode());\n                cur = cur.nxt.get(idx);\n            }\n            cur.val = Math.min(cur.val, costs[i]);\n        }\n        for(int i=0;i<m;i++) dp[i] = Integer.MAX_VALUE;\n        rec(0);\n        for(int i=0;i<m-1;i++) \n        {\n            if(dp[i] != Integer.MAX_VALUE) rec(i+1);\n        }\n\n        if (dp[m-1] == Integer.MAX_VALUE) return -1;\n        return dp[m-1];\n    }\n}",
    "submit_ts": "1720324205",
    "subm_id": "1312394013"
}