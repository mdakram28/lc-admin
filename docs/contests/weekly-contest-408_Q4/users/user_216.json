{
    "username": "insomniacat",
    "submission": "class UnionFind {\npublic:\n    UnionFind(int n) : parent(n), rank(n, 1) {\n        iota(parent.begin(), parent.end(), 0);\n    }\n    \n    int find(int u) {\n        if (u != parent[u])\n            parent[u] = find(parent[u]);\n        return parent[u];\n    }\n    \n    void unite(int u, int v) {\n        // cout << u << \" \" << v << endl;\n        int rootU = find(u);\n        int rootV = find(v);\n        if (rootU != rootV) {\n            if (rank[rootU] > rank[rootV]) {\n                parent[rootV] = rootU;\n            } else if (rank[rootU] < rank[rootV]) {\n                parent[rootU] = rootV;\n            } else {\n                parent[rootV] = rootU;\n                rank[rootU]++;\n            }\n        }\n    }\n    \nprivate:\n    vector<int> parent;\n    vector<int> rank;\n};\n\nclass Solution {\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        UnionFind uf(n + 4);\n\n        auto intersect = [&](int i, int j) {\n            double dx = circles[i][0] - circles[j][0];\n            double dy = circles[i][1] - circles[j][1];\n            double distance = sqrt(dx * dx + dy * dy);\n            return distance <= (circles[i][2] + circles[j][2]);\n        };\n\n        for (int i = 0; i < n; ++i) {\n            if (circles[i][0] - circles[i][2] <= 0) uf.unite(i, n);\n            if (circles[i][1] - circles[i][2] <= 0) uf.unite(i, n + 1);\n            if (circles[i][0] + circles[i][2] >= X) uf.unite(i, n + 2);\n            if (circles[i][1] + circles[i][2] >= Y) uf.unite(i, n + 3);\n\n            for (int j = i + 1; j < n; ++j) {\n                if (intersect(i, j)) {\n                    uf.unite(i, j);\n                }\n            }\n        }\n\n        return !(uf.find(n) == uf.find(n + 2) || \n                 uf.find(n) == uf.find(n + 1) ||\n                 uf.find(n + 2) == uf.find(n + 3) || \n                 uf.find(n + 3) == uf.find(n + 1)); \n    }\n};",
    "submit_ts": "1722136140",
    "subm_id": "1335725020"
}