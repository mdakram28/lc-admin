{
    "username": "Sanath_Kulla",
    "submission": "class Solution {\npublic:\n    int numberOfPermutations(int n, vector<vector<int>>& r) {\n        vector<int> a(n,-1);\n        vector<bool> need(n , 0);\n        using ll = long long;\n        for(auto it:r){\n            int ind = it[0];\n            int cnt = it[1];\n            a[ind] = cnt;\n            need[ind] = 1;\n        }\n        for(int i = n-1;i>=0;i--){\n            if(a[i] == -1){\n                a[i] = a[i+1];\n            }\n        }\n        const int mod = 1e9 + 7;\n        vector<vector<ll>> dp(n , vector<ll> (a[n-1] + 10 , -1));\n        \n        auto dfs = [&](auto self , int ind , int sum)->ll{\n                if(ind >= n)return 1ll;\n                ll ans = 0;\n                if(dp[ind][sum] != -1)return dp[ind][sum];\n                for(int i = 0 ; i <= ind;i++){\n                    int add = ind - i;\n                    if(need[ind]){\n                         if(sum + add == a[ind]){\n                              ans += self(self , ind+1 , sum + add);\n                             ans %= mod;\n                         }\n                    }else{\n                         if(sum + add <= a[ind]){\n                              ans += self(self , ind+1 , sum + add);\n                             ans %= mod;\n                         }\n                    }\n                }\n            return dp[ind][sum] = ans;\n        };\n        return dfs(dfs , 0 , 0);\n    }\n};",
    "submit_ts": 1719070128.0
}