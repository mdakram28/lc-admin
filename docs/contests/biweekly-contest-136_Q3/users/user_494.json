{
    "username": "The_Beast",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), ans = 0;\n        for(int i = 0; i < n/2; i++) {\n            for (int j = 0; j < m/2; j++) {\n                int cnt0 = 0,  cnt1 = 0;\n                grid[i][j] == 0 ? cnt0++ : cnt1++;\n                grid[i][m-j-1] == 0 ? cnt0++ : cnt1++;\n                grid[n-i-1][j] == 0 ? cnt0++ : cnt1++;\n                grid[n-i-1][m-j-1] == 0 ? cnt0++ : cnt1++;\n                ans += min(cnt0, cnt1);\n            }\n        }\n        int both0 = 0, both1 = 0, diff = 0;\n        if (n%2) {\n            for (int j = 0; j < m/2; j++) {\n                if (grid[n/2][j] != grid[n/2][m-j-1]) {\n                    diff++;\n                    ans++;\n                } else {\n                    grid[n/2][j] ? both1++ : both0++;\n                }\n            }\n        }\n        if (m%2) {\n            for (int j = 0; j < n/2; j++) {\n                if (grid[j][m/2] != grid[n-j-1][m/2]) {\n                    diff++;\n                    ans++;\n                } else {\n                    grid[j][m/2] ? both1++ : both0++;\n                }\n            }\n        }\n        if (m%2 && n%2 && grid[n/2][m/2]) ans++; \n        if (both1 % 2) {\n            if (!diff) {\n                ans += 2;\n            }\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1722697469",
    "subm_id": "1343147653"
}