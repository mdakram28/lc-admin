{
    "username": "LuanXP",
    "submission": "const int N = 100010;\nclass Solution {\npublic:\n    struct nodeSEG {\n        int v, l, r, tag;\n    };\n\n    int n, m, a[N];\n    nodeSEG seg[6 * N];\n    void push_down(int k) {\n        if (seg[k].tag == 0) return ;\n        if (seg[k].l != seg[k].r) {\n            seg[k * 2].v = 0;\n            seg[k * 2].tag = 1;\n            seg[k * 2 + 1].v = 0;\n            seg[k * 2 + 1].tag = 1;\n        }\n\n        seg[k].tag = 0;\n    }\n\n    void push_up(int k) {\n        seg[k].v = seg[k * 2].v + seg[k * 2 + 1].v;\n    }\n\n    void build(int l, int r, int k) {\n        if (l == r) {\n            seg[k].v = a[l];\n            seg[k].l = l;\n            seg[k].r = r;\n            seg[k].tag = 0;\n        }\n        else {\n            int mid = (l + r) >> 1;\n            build(l, mid, 2 * k);\n            build(mid + 1, r, 2 * k + 1);\n            seg[k].v = seg[2 * k].v + seg[2 * k + 1].v;\n            seg[k].l = l;\n            seg[k].r = r;\n            seg[k].tag = 0;\n        }\n    }\n\n    void change(int l, int r, int k, int x, int y) {\n        if (x <= l && y >= r) {\n            seg[k].v = 0;\n            seg[k].tag = 1;\n            return;\n        }\n\n        push_down(k);\n        int mid = (l + r) >> 1;\n        if (mid >= x) change(l, mid, k * 2, x, y);\n        if (mid < y) change(mid + 1, r, k * 2 + 1, x, y);\n        push_up(k);\n    }\n\n    int query(int l, int r, int k, int x, int y) {\n        if (x <= l && y >= r) {\n            return seg[k].v;\n        }\n\n        push_down(k);\n        int mid = (l + r) >> 1, tot = 0;\n        if (mid >= x) tot += query(l, mid, k * 2, x, y);\n        if (mid < y) tot += query(mid + 1, r, k * 2 + 1, x, y);\n        return tot;\n    }\n\n    vector<int> shortestDistanceAfterQueries(int n, vector<vector<int>>& queries) {\n        this->n = n;\n        this->m = queries.size();\n        for (int i = 1; i < n; i ++ ) {\n            a[i] = 1;\n        }\n\n        build(1, n - 1, 1);\n        vector<int> res;\n        for (int i = 1; i <= m; i ++ ) {\n            change(1, n - 1, 1, queries[i - 1][0] + 2, queries[i - 1][1]);\n            res.push_back(query(1, n - 1, 1, 1, n - 1));\n        }\n\n        return res;\n    }\n};",
    "submit_ts": "1722741334",
    "subm_id": "552337543"
}