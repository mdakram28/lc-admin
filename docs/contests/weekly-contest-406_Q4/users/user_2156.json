{
    "username": "vikasmaurya9732",
    "submission": "class Solution:\n    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:\n        horizontalCut.sort(reverse=True)\n        verticalCut.sort(reverse=True)\n        \n        # Initialize counts of pieces\n        horizontalPieces = 1\n        verticalPieces = 1\n        \n        # Initialize total cost\n        totalCost = 0\n        \n        # Indices for horizontal and vertical cuts\n        i, j = 0, 0\n        \n        # Process cuts until all cuts are used\n        while i < len(horizontalCut) and j < len(verticalCut):\n            if horizontalCut[i] >= verticalCut[j]:\n                totalCost += horizontalCut[i] * verticalPieces\n                horizontalPieces += 1\n                i += 1\n            else:\n                totalCost += verticalCut[j] * horizontalPieces\n                verticalPieces += 1\n                j += 1\n        \n        # Process any remaining horizontal cuts\n        while i < len(horizontalCut):\n            totalCost += horizontalCut[i] * verticalPieces\n            i += 1\n        \n        # Process any remaining vertical cuts\n        while j < len(verticalCut):\n            totalCost += verticalCut[j] * horizontalPieces\n            j += 1\n        \n        return totalCost",
    "submit_ts": "1720926668",
    "subm_id": "1320292937"
}