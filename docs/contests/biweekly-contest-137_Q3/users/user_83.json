{
    "username": "Leeisateam",
    "submission": "typedef long long ll;\n#pragma GCC optimize (-O3, -flto, -ffast-math, -march=native, -mtune=native)\nclass Solution {\npublic:\n    ll maximumValueSum(vector<vector<int>>& board) {\n        ll n,m;\n        n=board.size();\n        m=board[0].size();\n        ll ans = -4000000000;\n        vector<vector<ll>> a;\n        for(ll i=0;i<n;i++){\n            for(ll j=0;j<m;j++){\n                vector<ll> v;\n                v.push_back(board[i][j]);\n                v.push_back(i);\n                v.push_back(j);\n                a.push_back(v);\n            }\n        }\n        sort(a.begin(), a.end());\n        reverse(a.begin(), a.end());\n        while(a.size() > n+m+n+m+1){\n            a.pop_back();\n        }\n\n        ll as = a.size();\n        for(ll i=0;i<as-2;i++){\n            if(a[i][0]+a[i+1][0]+a[i+2][0]<ans){\n                break;\n            }\n            for(ll j=i+1;j<as-1;j++){\n                if(a[i][2] == a[j][2] || a[i][1] == a[j][1]){\n                    continue;\n                }\n                for(ll k=j+1;k<as;k++){\n                    if(a[i][2]!=a[k][2] and a[i][1]!=a[k][1] and a[j][2]!=a[k][2] and a[j][1]!=a[k][1]){\n                        ans=max(ans, a[i][0]+a[j][0]+a[k][0]);\n                    } \n                }\n            }\n        }\n\n        return ans;\n    }\n};",
    "submit_ts": "1723907449",
    "subm_id": "1359108146"
}