{
    "username": "K_Yaswanth_Sai_Vamsi",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int m = grid.size(), n = grid[0].size();\n        int ans = 0;\n\n        for (int i = 0; i < m / 2; i++) {\n            for (int j = 0; j < n / 2; j++) {\n                vector<int> arr = {\n                    grid[i][j],\n                    grid[m - i - 1][j],\n                    grid[i][n - j - 1],\n                    grid[m - i - 1][n - j - 1]\n                };\n\n                int ones = count(arr.begin(), arr.end(), 1);\n\n                ans += min(ones, 4 - ones);\n            }\n        }\n\n        int possible = 0, cnt = 0;\n\n        if (m % 2) {\n            for (int j = 0; j < n / 2; j++) {\n                if (grid[m / 2][j] != grid[m / 2][n - j - 1]) {\n                    ans++;\n                    possible++;\n                }\n                else {\n                    if(grid[m/2][j] == 1) cnt++;\n                }\n            }\n        }\n\n        if (n % 2) {\n            for (int i = 0; i < m / 2; i++) {\n                if (grid[i][n / 2] != grid[m - i - 1][n / 2]) {\n                    ans++;\n                    possible++;\n                } \n                else {\n                    if (grid[i][n/2] == 1) cnt++;\n                }\n            }\n        }\n\n        if (n % 2 && m % 2 && grid[m/2][n/2] == 1) ans++;\n\n        if (possible == 0 && cnt % 2) ans += 2;\n\n        return ans;\n    }\n};",
    "submit_ts": "1722699931",
    "subm_id": "1343226626"
}