{
    "username": "xia_q",
    "submission": "class Solution:\n    def minimumDistance(self, points: List[List[int]]) -> int:\n        def cal(points):\n            n = len(points)\n            p = [[0] * n for _ in range(4)]\n            for i, (x, y) in enumerate(points):\n                p[0][i] = x + y\n                p[1][i] = -x + y\n                p[2][i] = x - y\n                p[3][i] = -x - y\n            for i in range(4):\n                p[i] = sorted((v, idx) for idx, v in enumerate(p[i]))\n            a, b, dist = -1, -1, 0\n            for i in range(4):\n                aa, bb, dd = p[i][0][1], p[i][-1][1], p[i][-1][0] - p[i][0][0]\n                if dd > dist:\n                    a, b, dist = aa, bb, dd\n            return a, b, dist\n        a, b, dist = cal(points)\n        _, _, d1 = cal(points[:a] + points[a + 1:])\n        _, _, d2 = cal(points[:b] + points[b + 1:])\n        return min(d1, d2)\n                \n\n            \n        \n            \n            "
}