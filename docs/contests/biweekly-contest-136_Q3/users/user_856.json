{
    "username": "wangendian",
    "submission": "class Solution {\n    public int minFlips(int[][] grid) {\n        int n = grid[0].length;\n        int m = grid.length;\n        int ans = 0;\n        for(int i=0;i<(m>>1);i++){\n            for(int j=0;j<(n>>1);j++){\n                int c = grid[i][j] + grid[m-1-i][j] \n                    + grid[i][n-1-j]+grid[m-1-i][n-1-j];\n                ans += Math.min(c,4-c);\n            }\n        }\n        int oneCount = 0,change = 0;\n        if(n%2 ==1){\n            for(int i = 0;i<(m>>1);i++){\n                if(grid[i][n>>1] != grid[m-1-i][n>>1]){\n                    change++;\n                }\n                oneCount += grid[i][n>>1] + grid[m-1-i][n>>1];\n            }\n        }\n        if(m%2 ==1){\n            for(int j = 0;j<(n>>1);j++){\n                if(grid[m>>1][j] != grid[m>>1][n-1-j]){\n                    change++;\n                }\n                oneCount += grid[m>>1][j] + grid[m>>1][n-1-j];\n            }\n        }\n        if(n%2 ==1 && m%2 ==1){\n            ans += grid[m>>1][n>>1];\n        }\n        oneCount%=4;\n        ans += Math.max(Math.min(oneCount,4-oneCount), change);\n        return ans;\n    }\n}",
    "submit_ts": "1722698256",
    "subm_id": "552270068"
}