{
    "username": "gouyuanshuo",
    "submission": "class Solution {\npublic:\n    long long minimumCost(int m, int n, vector<int>& horizontalCut, vector<int>& verticalCut) {\n        std::sort(horizontalCut.begin(), horizontalCut.end(),\n                  [](int a, int b) { return a > b; });\n        std::sort(verticalCut.begin(), verticalCut.end(),\n                  [](int a, int b) { return a > b; });\n\n        long long res = 0;\n        for (int h = 0, v = 0;\n             h < horizontalCut.size() || v < verticalCut.size();) {\n            if (h >= horizontalCut.size()) {\n                res += verticalCut[v] * (h + 1);\n                v++;\n            } else if (v >= verticalCut.size()) {\n                res += horizontalCut[h] * (v + 1);\n                h++;\n            } else {\n                if (horizontalCut[h] > verticalCut[v]) {\n                    res += horizontalCut[h] * (v + 1);\n                    h++;\n                } else {\n                    res += verticalCut[v] * (h + 1);\n                    v++;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1720926775",
    "subm_id": "1320296034"
}