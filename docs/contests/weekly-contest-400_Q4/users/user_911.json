{
    "username": "puspendra_09",
    "submission": "#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"unroll-loops\")\n\nstatic const int _ = []() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return 0; }();\n\nclass Solution {\npublic:\n    int minimumDifference(vector<int>& arr, int k) {\n        int n = arr.size();\n        const int N = 31;\n\n        vector<vector<int>> a(N , vector<int>(n , 0));\n        \n        int ans = 1e9 + 1;\n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < N; j++) {\n                a[j][i] = ((arr[i] >> j) & 1);\n            }\n        }\n\n        for(int j = 0; j < N; j++) {\n                for(int i = 1; i < n; i++) {\n                    a[j][i] += a[j][i - 1];\n                }\n        }\n\n        auto rs = [&](int row , int l , int r) {\n                if(l > r) return 0;\n                if(l == 0) {\n                    return a[row][r];\n                }\n                return (a[row][r] - a[row][l - 1]);\n        };\n\n        auto rangeAnd = [&](int l , int r) {\n            int num = 0;\n            for(int j = 0; j <= 30; j++) {\n                int x = rs(j , l , r);\n                if(x == (r - l + 1)) {\n                    num = (num | (1ll << j));\n                }\n            }\n            return num;\n        };\n        \n        for(int i = 0; i < n; i++) {\n            int low = i , high = n - 1;\n            int ind = -1;\n            while(low <= high) {\n                int mid = (low + high) >> 1;\n                int x = rangeAnd(i , mid);\n                if(x >= k) {\n                    ind = mid;\n                    low = mid + 1;\n                }\n                else {\n                    high = mid - 1;\n                }\n            }\n            // cout << i << ' ';\n            // cout << ind << endl;\n            if(ind == -1) {\n                ans = min(ans , abs(k - rangeAnd(i , i)));\n                continue;\n            }\n            for(int j = ind - 1; j <= ind + 1; j++) {\n                if(j >= i and j <= n - 1) {\n                    ans = min(ans , abs(k - rangeAnd(i , j)));\n                }\n            }\n        }\n        int cur = rangeAnd(0 , n - 1);\n        ans = min(ans , abs(cur - k));\n        return ans;\n    }\n};",
    "submit_ts": 1717297711.0
}