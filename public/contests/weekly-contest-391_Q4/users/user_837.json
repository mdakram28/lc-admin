{
    "username": "Beast_376",
    "submission": "class Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& p) {\n        int N=p.size();\n        vector<pair<int,int>> V(N), V1(N);\n \n        for (int i = 0; i < N; i++) {\n            V[i].first = p[i][0] + p[i][1];\n            V[i].second=i;\n            V1[i].first = p[i][0] - p[i][1];\n            V1[i].second=i;\n        }\n\n        // Sorting both the vectors\n        sort(V.begin(), V.end());\n        sort(V1.begin(), V1.end());\n        // for(auto x:V){\n        //     cout<<x.first<<\" \";\n        // }\n        // cout<<endl;\n        // for(auto x:V1){\n        //     cout<<x.first<<\" \";\n        // }\n        int maximum\n            = max(V.back().first - V.front().first, V1.back().first - V1.front().first);\n        int mn=0;\n        int val1=V.back().first - V.front().first,val2=V1.back().first - V1.front().first;\n        map<int,int> mp;\n        if(val1==maximum){\n            mp[V[0].second]++;\n            mp[V[N-1].second]++;\n        }\n        if(val2==maximum){\n            mp[V1[0].second]++;\n            mp[V1[N-1].second]++;\n        }\n        vector<int> idx;\n        for(auto x:mp){\n            idx.push_back(x.first);\n        }\n        vector<int> ans;\n        for(int j=0;j<idx.size();j++){\n            vector<int> v2,v3;\n             for (int i = 0; i < N; i++) {\n                if(i==idx[j]) continue;\n                v2.push_back(p[i][0] + p[i][1]);\n                v3.push_back(p[i][0] - p[i][1]);\n            }\n            sort(v2.begin(), v2.end());\n            sort(v3.begin(), v3.end());\n            int maximum\n            = max(v2.back() - v2.front(), v3.back() - v3.front());\n            ans.push_back(maximum);\n        }\n        sort(ans.begin(),ans.end());\n        return ans[0];\n//         for(auto x:mp){\n//             cout<<x.first<<\" \";\n//         }\n//         if((mp[V[N-1].second]>0&&mp[V[0].second]==0)||(mp[V[N-1].second]==0&&mp[V[0].second]>0)){\n//             mn=max(mn,V[N-1].first-V[0].first);\n//             if(mp[V[N-1].second]>0){\n                \n//             }\n//         }\n//         if((mp[V[N-1].second]>0&&mp[V[0].second]>0)){\n//             mn=max(mn,V[N-2].first-V[0].first);\n//             mn=max(mn,V[N-1].first-V[1].first);\n//         }\n//         cout<<mn<<\" \";\n//         if((mp[V1[N-1].second]>0&&mp[V1[0].second]==0)||(mp[V1[N-1].second]==0&&mp[V1[0].second]>0)){\n//             mn=max(mn,V1[N-1].first-V1[0].first);\n//         }\n//         if((mp[V1[N-1].second]>0&&mp[V1[0].second]>0)){\n//             mn=max(mn,V1[N-2].first-V1[0].first);\n//             mn=max(mn,V1[N-1].first-V1[1].first);\n//         }\n//         cout << mn << endl;\n//         return mn;\n    }\n};"
}