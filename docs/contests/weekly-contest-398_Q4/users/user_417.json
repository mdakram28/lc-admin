{
    "username": "gwdyxxzl",
    "submission": "class Solution:\n    def waysToReachStair(self, k: int) -> int:\n        dp = {}\n        def dfs(i, j, pre):\n            if (i, j, pre) in dp:\n                return dp[(i, j, pre)]\n            if i >= k + 2:\n                return 0\n            if i == k + 1 and pre == 0:\n                return 0\n            if i == 0 or pre == 0:\n                dp[(i, j, pre)] = (i == k) + dfs(i + 2 ** j, j + 1, 1)\n                return dp[(i, j, pre)]\n            dp[(i, j, pre)] = (i == k) + dfs(i - 1, j, 0) + dfs(i + 2 ** j, j + 1, 1)\n            return dp[(i, j, pre)]\n        \n        return dfs(1, 0, -1)",
    "submit_ts": 1716088446.0
}