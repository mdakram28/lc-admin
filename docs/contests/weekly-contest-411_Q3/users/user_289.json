{
    "username": "wswartworth",
    "submission": "class Solution:\n\n    def pow10mod7(self, n):\n        val = 1\n        for _ in range(n):\n            val = (10*val) % 7\n        return val\n\n    def largestPalindrome(self, n: int, k: int) -> str:\n\n        if n <= 5:\n            best = None\n            for i in range(10**(n-1), 10**n):\n                if str(i) == str(i)[::-1] and i % k == 0:\n                    best = i\n            return str(best)\n\n        if k in [1,3,9]:\n            return n * '9'\n        if k in [2]:\n            return '8' + (n-2)*'9' + '8'\n        if k in [4]:\n            return '88' + (n-4)*'9' + '88'\n        if k in [5]:\n            return '5' + (n-2)*'9' + '5'\n\n        if k in [6]:\n            if n % 2 == 1:\n                return '8' + ((n-3)//2)*'9' + '8' + ((n-3)//2)*'9' + '8'\n            else:\n                return '8' + ((n-4)//2)*'9' + '77' + ((n-4)//2)*'9' + '8'\n\n        if k in [8]:\n            return '888' + (n-6)*'9' + '888'\n        \n        if k in [7]:\n            all9s = (self.pow10mod7(n) - 1 + 7) % 7\n            if n % 2 == 1:\n                midMod = self.pow10mod7((n-1)//2)\n                for j in range(10):\n                    newMod = (all9s - j*midMod + 70) % 7\n                    if newMod == 0:\n                        return (n-1)//2 * '9' + str(9-j) + (n-1)//2 * '9'\n            else:\n                midMod = (self.pow10mod7(n//2) + self.pow10mod7((n-2)//2))%7\n                for j in range(10):\n                    newMod = (all9s - j*midMod + 70) % 7\n                    if newMod == 0:\n                        return (n-2)//2 * '9' + 2*str(9-j) + (n-2)//2 * '9'\n        \n        return None\n\n\n        \n\n        ",
    "submit_ts": "1723951506",
    "subm_id": "1359773179"
}