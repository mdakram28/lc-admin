{
    "username": "ADIER",
    "submission": "class Solution {\nprivate:\n    int bfs(const vector<vector<int>>& graph, int start, int target1,\n            int target2, int totalNodes) {\n        queue<int> q;\n        vector<bool> visited(totalNodes + 4, false);\n        q.push(start);\n        visited[start] = true;\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int v : graph[u]) {\n                if (!visited[v]) {\n                    q.push(v);\n                    visited[v] = true;\n                }\n            }\n        }\n        return visited[target1] || visited[target2] ? 1 : 0;\n    }\n\npublic:\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        int n = circles.size();\n        vector<vector<int>> graph(n + 4);\n\n        for (int i = 0; i < n; ++i) {\n            int x = circles[i][0];\n            int y = circles[i][1];\n            int r = circles[i][2];\n\n            if (x <= r) {\n                graph[n].push_back(i);\n                graph[i].push_back(n);\n            }\n            if (X - x <= r) {\n                graph[n + 2].push_back(i);\n                graph[i].push_back(n + 2);\n            }\n            if (y <= r) {\n                graph[n + 1].push_back(i);\n                graph[i].push_back(n + 1);\n            }\n            if (Y - y <= r) {\n                graph[n + 3].push_back(i);\n                graph[i].push_back(n + 3);\n            }\n            for (int j = i + 1; j < n; ++j) {\n                double dist =\n                    sqrt(pow(x - circles[j][0], 2) + pow(y - circles[j][1], 2));\n                if (dist <= r + circles[j][2]) {\n                    graph[i].push_back(j);\n                    graph[j].push_back(i);\n                }\n            }\n        }\n        int result = 0;\n        result = max(result, bfs(graph, n, n + 1, n + 2, n + 4));\n        result = max(result, bfs(graph, n + 3, n + 2, n + 1, n + 4));\n\n        return result == 0;\n    }\n};",
    "submit_ts": "1722138803",
    "subm_id": "1335800071"
}