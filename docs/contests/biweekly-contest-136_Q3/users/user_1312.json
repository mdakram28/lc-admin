{
    "username": "sahil_gpt12",
    "submission": "#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minFlips(vector<vector<int>>& watermelon) {\n        int apple = watermelon.size();\n        int banana = watermelon[0].size();\n        int cherry = 0;\n\n        if (apple % 2 == 1 && banana % 2 == 1) {\n            if (watermelon[apple / 2][banana / 2] == 1) {\n                cherry += 1;\n            }\n        }\n\n        vector<int> shift(3, 0);\n        if (apple % 2 == 1) {\n            int grape = 0, kiwi = banana - 1;\n            while (grape < kiwi) {\n                int sm = watermelon[apple / 2][grape] + watermelon[apple / 2][kiwi];\n                shift[sm] += 1;\n                grape += 1;\n                kiwi -= 1;\n            }\n        }\n\n        if (banana % 2 == 1) {\n            int grape = 0, kiwi = apple - 1;\n            while (grape < kiwi) {\n                int sm = watermelon[grape][banana / 2] + watermelon[kiwi][banana / 2];\n                shift[sm] += 1;\n                grape += 1;\n                kiwi -= 1;\n            }\n        }\n\n        if (shift[2] % 2 == 1) {\n            if (shift[1] > 0) {\n                cherry += shift[1];\n            } else {\n                cherry += 2;\n            }\n        } else {\n            cherry += shift[1];\n        }\n\n        for (int i = 0; i < apple / 2; ++i) {\n            for (int j = 0; j < banana / 2; ++j) {\n                int a = watermelon[i][j];\n                int b = watermelon[apple - 1 - i][j];\n                int c = watermelon[i][banana - 1 - j];\n                int d = watermelon[apple - 1 - i][banana - 1 - j];\n\n                int sm = a + b + c + d;\n\n                if (sm != 0 && sm != 4) {\n                    cherry += minVal(sm, 4 - sm);\n                }\n            }\n        }\n\n        return cherry;\n    }\n\nprivate:\n    int minVal(int a, int b) {\n        return a < b ? a : b;\n    }\n};\n",
    "submit_ts": "1722699464",
    "subm_id": "1343212476"
}