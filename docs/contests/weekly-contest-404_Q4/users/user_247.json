{
    "username": "samarthgattu",
    "submission": "class Solution {\npublic:\n    int dia=0;\n    int find(int n,vector<vector<int>> &adj ){\n        int fr=0;\n        deque<int> de;\n        de.push_back(fr);\n        vector<int> vis(n,0);\n        vis[fr]=1;\n        int d1=fr;\n        while(!de.empty()){\n            int cur=de.front();\n            de.pop_front();\n            for(auto j:adj[cur]){\n                if(!vis[j]){\n                    vis[j]=vis[cur]+1;\n                    if(vis[j]>vis[fr]){\n                        d1=j;\n                    }\n                    de.push_back(j);\n                }\n            }\n        }\n        de.push_back(d1);\n        vector<int> vis1(n,0);\n        vis1[d1]=1;\n        int d2=d1;\n        while(!de.empty()){\n            int cur=de.front();\n            de.pop_front();\n            for(auto j:adj[cur]){\n                if(!vis1[j]){\n                    vis1[j]=vis1[cur]+1;\n                    if(vis1[j]>vis1[d2]){\n                        d2=j;\n                    }\n                    de.push_back(j);\n                }\n            }\n        }\n        de.push_back(d2);\n        vector<int> vis2(n,0);\n        vis2[d2]=1;\n        // int d3=d2;\n        while(!de.empty()){\n            int cur=de.front();\n            de.pop_front();\n            for(auto j:adj[cur]){\n                if(!vis2[j]){\n                    vis2[j]=vis2[cur]+1;\n                    // if(vis1[j]>vis1[fr]){\n                    //     d2=j;\n                    // }\n                    de.push_back(j);\n                }\n            }\n        }\n        int mini=0,maxi=0;\n        for(int i=0;i<n;i++){\n            if(max(vis2[i],vis1[i])<max(vis2[mini],vis1[mini])){\n                mini=i;\n            }\n            if(max(vis2[i],vis1[i])>max(vis2[maxi],vis1[maxi])){\n                maxi=i;\n            }\n        }\n        dia=max(vis2[maxi],vis1[maxi])-1;\n        return mini;\n    }\n\n    int minimumDiameterAfterMerge(vector<vector<int>>& e1, vector<vector<int>>& e2) {\n        int n=e1.size()+1,m=e2.size()+1;\n        vector<vector<int>> adj(n),adj2(m),adj3(n+m);\n        for(int i=0;i<n-1;i++){\n            adj[e1[i][0]].push_back(e1[i][1]);\n            adj[e1[i][1]].push_back(e1[i][0]);\n\n            adj3[e1[i][0]].push_back(e1[i][1]);\n            adj3[e1[i][1]].push_back(e1[i][0]);\n\n        }\n        for(int i=0;i<m-1;i++){\n            adj2[e2[i][0]].push_back(e2[i][1]);\n            adj2[e2[i][1]].push_back(e2[i][0]);\n\n            adj3[e2[i][0]+n].push_back(e2[i][1]+n);\n            adj3[e2[i][1]+n].push_back(e2[i][0]+n);\n        }\n        int ind1=find(n,adj);\n        int ind2=find(m,adj2);\n\n        // cout<<ind1<<' '<<ind2<<endl;\n\n        adj3[ind1].push_back(ind2+n);\n        adj3[ind2+n].push_back(ind1);\n\n        find(n+m,adj3);\n        return dia;\n    }\n};",
    "submit_ts": 1719718071.0
}