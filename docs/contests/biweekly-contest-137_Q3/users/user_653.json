{
    "username": "lyongwolf",
    "submission": "class Solution {\n     public long maximumValueSum(int[][] board) {\n        int n = board.length, m = board[0].length;\n        int[][][] mat = new int[n][m][2];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                mat[i][j] = new int[]{board[i][j], j};\n            }\n            Arrays.sort(mat[i], (a, b) -> b[0] - a[0]);\n        }\n        long ans = Long.MIN_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    for (int a = 0; a < 3; a++) {\n                        for (int b = 0; b < 3; b++) {\n                            for (int c = 0; c < 3; c++) {\n                                if (mat[i][a][1] != mat[j][b][1] &&  mat[j][b][1] != mat[k][c][1] && mat[k][c][1] != mat[i][a][1]) {\n                                    ans = Math.max(ans, (long) mat[i][a][0] + mat[j][b][0] + mat[k][c][0]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}",
    "submit_ts": "1723906278",
    "subm_id": "556317404"
}