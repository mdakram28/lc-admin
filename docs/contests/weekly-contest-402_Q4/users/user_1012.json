{
    "username": "MDMASUDRANA",
    "submission": "#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<class T>using oset=tree<T,null_type,less<T>,\nrb_tree_tag,tree_order_statistics_node_update>;\n//*set.find_by_order(a) -> value at index a (0 based index)\n//order_of_key(a) -> index of number a (0 based index)\n\n\nclass Solution {\npublic:\n    vector<int> countOfPeaks(vector<int>& nums, vector<vector<int>>& queries) {\n        oset<int> st;\n        vector<int> ans;\n        \n        for(int i = 1; i + 1 < nums.size(); i++){\n            if(nums[i] > nums[i-1] && nums[i] > nums[i+1]){\n                st.insert(i);\n            }\n        }\n        \n        for(auto i : queries){\n            if(i[0] == 1){\n                int x = st.order_of_key(i[2]) - st.order_of_key(i[1]+1);\n                ans.push_back(max(0,x));\n                continue;\n            }\n                if(i[1] == 0){\n                    nums[i[1]] = i[2];\n                    if(nums.size() > 1 && nums[1] <= i[2]){\n                        if(st.find(1) != st.end()){\n                            st.erase(1);\n                        }\n                    }\n                    if(nums.size() > 2 && nums[1] > nums[0] && nums[1] > nums[2]){\n                        st.insert(1);\n                    }\n                    continue;\n                }\n                if(i[1] == nums.size() - 1){\n                    nums[i[1]] = i[2];\n                    if(i[1] > 0){\n                        if(nums[i[1] - 1] <= i[2]){\n                            if(st.find(i[1]-1) != st.end()){\n                                st.erase(i[1]-1);\n                            }\n                        }\n                    }\n                    if(nums.size() > 2 && nums[i[1]-2] < nums[i[1]-1] && nums[i[1]-1] > nums[i[1]]){\n                        st.insert(i[1]-1);\n                    }\n                    continue;\n                }\n                \n                nums[i[1]] = i[2];\n                if(st.find(i[1]) != st.end()){\n                    st.erase(i[1]);\n                }              \n                if(nums[i[1]] > nums[i[1]-1] && nums[i[1]] > nums[i[1] + 1]){\n                    st.insert(i[1]);\n                }\n                if(st.find(i[1]-1) != st.end()){\n                    st.erase(i[1]-1);\n                }\n                if(st.find(i[1]+1) != st.end()){\n                    st.erase(i[1]+1);\n                }\n                int l = i[1]-2, r = i[1]+2, id = i[1];\n                if(l >= 0 && nums[l] < nums[id-1] && nums[id-1] > nums[id]){\n                    st.insert(id-1);\n                }\n                if(r < nums.size() && nums[r] < nums[id+1] && nums[id+1] > nums[id]){\n                    st.insert(id+1);\n                }\n        }\n        \n        return ans;\n    }\n};\n\n//[9,7,5,8,9]\n//[[2,0,2],[1,0,3],[1,3,3],[2,3,5]]",
    "submit_ts": "1718508098",
    "subm_id": "1289671615"
}