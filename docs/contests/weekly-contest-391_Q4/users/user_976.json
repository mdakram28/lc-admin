{
    "username": "sanjeeb42",
    "submission": "//Credits : GeeksforGeeks https://www.geeksforgeeks.org/maximum-manhattan-distance-between-a-distinct-pair-from-n-coordinates/\n\nclass Solution {\npublic:\n//     int MaxDist(vector<pair<int, int> >& A, int N)\n// {\n\n//     vector<int> V(N), V1(N);\n \n//     for (int i = 0; i < N; i++) {\n//         V[i] = A[i].first + A[i].second;\n//         V1[i] = A[i].first - A[i].second;\n//     }\n        \n        \n \n//     sort(V.begin(), V.end());\n//     sort(V1.begin(), V1.end());\n \n//     int maximum\n//         = max(V.back() - V.front(), V1.back() - V1.front());\n \n//    return maximum;\n// }\n    \n    int MaxDist(vector<vector<int> >& A){\n        multiset<int>v,v1;\n        int n=A.size();\n        for (int i = 0; i < n; i++) {\n                v.insert(A[i][0] + A[i][1]);\n                v1.insert(A[i][0] - A[i][1]);\n        }\n        \n        \n        int ans=INT_MAX;\n        for(int i=0;i<n;i++){\n            //remove this one \n            int sum=A[i][0]+A[i][1], diff=A[i][0] - A[i][1];\n            auto it1=v.lower_bound(sum);\n            auto it2=v1.lower_bound(diff);\n            \n            v.erase(it1);\n            v1.erase(it2);\n            \n            int curr_ans=max(*v.rbegin() - *v.begin(), *v1.rbegin()-*v1.begin());\n            ans=min(ans,curr_ans);\n            v.insert(sum);\n            v1.insert(diff);\n        }\n \n        return ans;\n}\n    \n    \n    int minimumDistance(vector<vector<int>>& points) {\n        int ans=MaxDist(points);\n        return ans;\n    }\n};"
}