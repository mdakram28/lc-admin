{
    "username": "guanwei0711",
    "submission": "class Solution {\npublic:\n    int minChanges(vector<int>& nums, int k) {\n        int maxCounts = 0;\n        int maxDiff = 0;\n        int n = nums.size();\n        unordered_map<int, int> diffCounts;\n\n        for (int i = 0; i < nums.size() / 2; i++) {\n            diffCounts[abs(nums[i] - nums[n - i - 1])]++;\n            // if (maxCounts < diffCounts[abs(nums[i] - nums[n - i - 1])]) {\n            //     maxCounts = diffCounts[abs(nums[i] - nums[n - i - 1])];\n            //     maxDiff = abs(nums[i] - nums[n - i - 1]);\n            // } else if (maxCounts == diffCounts[abs(nums[i] - nums[n - i - 1])] && abs(nums[i] - nums[n - i - 1]) < maxDiff) {\n            //     maxCounts = diffCounts[abs(nums[i] - nums[n - i - 1])];\n            //     maxDiff = abs(nums[i] - nums[n - i - 1]);\n            // }\n        }\n\n        int gAns = INT_MAX;\n        for (auto [diff, count]: diffCounts) {\n            if (n / 2 - count >= gAns) {\n                continue;\n            }\n            int ans = 0;\n            for (int i = 0; i < n / 2; i++) {\n                if (abs(nums[i] - nums[n - i - 1]) == diff) {\n                    continue;\n                }\n\n                if (min(nums[i], nums[n - i - 1]) + diff > k && max(nums[i], nums[n - i - 1]) - diff < 0) {\n                    ans += 2;\n                } else {\n                    ans++;\n                }\n            }\n            gAns = min(gAns, ans);\n        }\n\n\n        return gAns;\n    }\n};\n\n// class Solution {\n// public:\n//     int minChanges(vector<int>& nums, int k) {\n//         // int maxCounts = 0;\n//         int maxDiff = INT_MAX;\n//         int n = nums.size();\n//         unordered_map<int, int> diffCounts;\n\n//         for (int i = 0; i < nums.size() / 2; i++) {\n//             diffCounts[abs(nums[i] - nums[n - i - 1])]++;\n//             // maxCounts = max(maxCounts, diffCounts[abs(nums[i] - nums[n - i - 1])]);\n//             maxDiff = min(maxDiff, abs(k - min(nums[i], nums[n - i - 1])));\n//         }\n\n//         int maxCounts = 0;\n//         for (auto &[diff, count]: diffCounts) {\n//             if (diff > maxDiff) {\n//                 continue;\n//             }\n\n//             maxCounts = max(maxCounts, count);\n//         }\n\n//         return n / 2 - maxCounts;\n//     }\n// };",
    "submit_ts": "1721487878",
    "subm_id": "1327404171"
}