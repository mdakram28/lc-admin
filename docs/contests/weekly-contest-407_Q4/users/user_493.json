{
    "username": "kashif321",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& t) {\n        int n = t.size();\n        using ll = long long;\n        \n        ll ans = 0;\n        for(int i=0;i<n;i++){\n            int sign = ((t[i] - nums[i]) >= 0);\n            vector<int> cur = {0};\n            int j = i;\n            for(;j<n && (((t[j]-nums[j])>=0) == sign); j++){\n                cur.push_back(abs(t[j]-nums[j]));\n            }\n            // cout << i << \" \" << cur.size() << endl;\n            for(int k=1;k<cur.size() ; k++){\n                if(cur[k] > cur[k-1]) ans += cur[k]-cur[k-1];\n            }\n            \n            i = j-1;\n        }\n        return ans;\n    }\n};",
    "submit_ts": "1721531589",
    "subm_id": "1327964813"
}