{
    "username": "kashyapmvekariya1905",
    "submission": "class Solution {\n    public long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {\n        Arrays.sort(horizontalCut);\n        reverseArray(horizontalCut);\n        Arrays.sort(verticalCut);\n        reverseArray(verticalCut);\n\n        long a = 0, b = 0; \n        long hp = 1, vp = 1;\n        long rst = 0;\n\n        while (a < horizontalCut.length && b < verticalCut.length) {\n            if (horizontalCut[(int)a] > verticalCut[(int)b]) {\n                rst += (long)horizontalCut[(int)a] * vp;\n                hp++;\n                a++;\n            } else {\n                rst += (long)verticalCut[(int)b] * hp;\n                vp++;\n                b++;\n            }\n        }\n\n        while (a < horizontalCut.length) {\n            rst += (long)horizontalCut[(int)a] * vp;\n            a++;\n        }\n\n        while (b < verticalCut.length) {\n            rst += (long)verticalCut[(int)b] * hp;\n            b++;\n        }\n\n        return rst;\n    }\n    private void reverseArray(int[] arr) {\n        int left = 0, right = arr.length - 1;\n        while (left < right) {\n            int temp = arr[left];\n            arr[left] = arr[right];\n            arr[right] = temp;\n            left++;\n            right--;\n        }\n    }\n}",
    "submit_ts": "1720926737",
    "subm_id": "1320294954"
}