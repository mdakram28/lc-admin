{
    "username": "debankumarsahu",
    "submission": "from collections import defaultdict\nclass Solution:\n    def minChanges(self, nums: List[int], k: int) -> int:\n        mapp=defaultdict(int)\n        length=len(nums)\n        pointer1=0\n        pointer2=length-1\n        max_occur=0\n        diff=0\n        while pointer1<pointer2:\n            mapp[abs(nums[pointer1]-nums[pointer2])]+=1\n            if mapp[abs(nums[pointer1]-nums[pointer2])]>=max_occur:\n                max_occur=mapp[abs(nums[pointer1]-nums[pointer2])]\n                diff=abs(nums[pointer1]-nums[pointer2])\n            pointer1+=1\n            pointer2-=1\n        sorted_keys = sorted(mapp.keys(),key=lambda x: mapp[x],reverse=True)\n\n        #print(sorted_keys)\n        #print(diff)\n        res=float(\"inf\")\n        for key in sorted_keys:\n            diff=key\n            pointer1=0\n            pointer2=length-1\n            count=0\n            while pointer1<pointer2:\n                temp_var=abs(nums[pointer1]-nums[pointer2])\n                if temp_var==diff:\n                    count+=0\n                else:\n                    if min(nums[pointer1],nums[pointer2])+diff<=k or max(nums[pointer1],nums[pointer2])-diff>=0:\n                        #print(\"YES\",pointer1,pointer2,temp_var,diff)\n                        count+=1\n                    else:\n                        #print(\"NO\",pointer1,pointer2,temp_var,diff)\n                        count+=2\n                        \n                pointer1+=1\n                pointer2-=1\n            if count>res:\n                break\n            elif count<=res:\n                res=count\n        return res\n        \n        \n        ",
    "submit_ts": "1721488218",
    "subm_id": "1327415320"
}