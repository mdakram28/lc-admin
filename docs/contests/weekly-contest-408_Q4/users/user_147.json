{
    "username": "deruikong",
    "submission": "class Solution {\npublic:\n#define px first\n#define py second\n#define point pair<int, int>\n    bool canReachCorner(int X, int Y, vector<vector<int>>& circles) {\n        // cannot reach corner if we can draw a line between the intersection of circles that goes from top to bottom, side to side,\n        // or adjacent bottom left top right corner\n        // where we are only allowed to draw lines between two points of intersection for the same circle;\n        int n = circles.size();\n        vector<vector<int>> adj(n + 1); // stores the intersection index;\n        vector<bool> tl(n + 1), tb(n + 1), tr(n + 1), tt(n + 1), vis(n + 1); // touch left and touch bottom respectrively\n        for(int i = 0; i < n; i++){\n            int ax = circles[i][0], ay = circles[i][1], ar = circles[i][2];\n            if(ax  - ar <= 0) tl[i] = 1;\n            if(ay - ar <= 0) tb[i] = 1;\n            if(ay + ar >= Y) tt[i] = 1;\n            if(ax + ar >= X) tr[i] = 1;\n            for(int j = i + 1; j < n; j++){\n                int bx = circles[j][0], by = circles[j][1], br = circles[j][2];\n                if(1LL * (ax - bx) * (ax - bx) + 1LL * (ay - by) * (ay - by) <= 1LL * (ar + br) * (ar + br)){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        queue<int> q;\n        for(int i = 0; i < n; i++) if(tl[i]){\n            q.push(i);\n            vis[i] = 1;\n        }\n        while(!q.empty()){\n            int u = q.front(); q.pop();\n            for(auto v : adj[u])\n            if(!vis[v]){\n                tl[v] = 1;\n                q.push(v);\n                vis[v] = 1;\n            }\n        }\n        for(int i = 0; i < n; i++){\n            vis[i] = 0;\n            if(tb[i]){\n                q.push(i);\n                vis[i] = 1;\n            }\n        }\n        while(!q.empty()){\n            int u = q.front(); q.pop();\n            for(auto v : adj[u])\n            if(!vis[v]){\n                tb[v] = 1;\n                q.push(v);\n                                vis[v] = 1;\n\n            }\n        }\n        for(int i = 0; i < n; i++){\n            vis[i] = 0;\n            if(tt[i]){\n                q.push(i);\n                vis[i] = 1;\n            }\n        }\n        while(!q.empty()){\n            int u = q.front(); q.pop();\n            for(auto v : adj[u])\n            if(!vis[v]){\n                tt[v] = 1;\n                q.push(v);                vis[v] = 1;\n\n            }\n        }\n        for(int i = 0; i < n; i++){\n            if(tb[i] && tl[i] || tb[i] && tt[i] || tl[i] && tr[i] || tt[i] && tr[i]) return false;\n        }\n        return true;\n    }\n};",
    "submit_ts": "1722138611",
    "subm_id": "1335795214"
}