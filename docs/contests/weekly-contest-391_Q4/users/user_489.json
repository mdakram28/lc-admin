{
    "username": "qiye-5",
    "submission": "int X[100'003], Y[100'003];\nclass Solution {\npublic:\n    int minimumDistance(vector<vector<int>>& points) {\n        int n = points.size();\n        for (int i = 0; i < n; ++i) X[i] = points[i][0] + points[i][1], Y[i] = points[i][0] - points[i][1];\n        // for (int i = 0; i < n; ++i) cout << X[i] << \" \" << endl;\n        // for (int i = 0; i < n; ++i) cout << Y[i] << \" \" << endl;\n\n        X[n] = min_element(X, X + n) - X;\n        X[n + 1] = max_element(X, X + n) - X;\n        Y[n] = min_element(Y, Y + n) - Y;\n        Y[n + 1] = max_element(Y, Y + n) - Y;\n\n        auto CalRemove = [&](int *f, int k) {\n            int min_k = f[n], max_k = f[n + 1];\n            if (k == min_k) {\n                int y = INT_MAX;\n                for (int i = 0; i < n; ++i)if (i != k && y > f[i]) y = f[min_k = i];\n            }\n\n            if (k == max_k) {\n                int y = INT_MIN;\n                for (int i = 0; i < n; ++i) if (i != k && y < f[i]) y = f[max_k = i];\n            }\n            return f[max_k] - f[min_k];\n        };\n\n        int res = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            // cout << CalRemove(X, i) + CalRemove(Y, i) << endl;\n            res = min(res, max(CalRemove(X, i), CalRemove(Y, i)));\n        }\n        return res;\n    }\n};"
}