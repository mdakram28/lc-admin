{
    "username": "epic-6reideryof",
    "submission": "class Solution {\npublic:\n    int chk(vector<int> &p,int x){\n        int res=0,n=p.size();\n        if(x==p.back()){\n            return p[n-2]-p[0];\n        }\n        if(x==p[0]){\n            return p[n-1]-p[1];\n        }\n        return p.back()-p[0];\n    }\n    int minimumDistance(vector<vector<int>>& ps) {\n        int n=ps.size(),ans=1000000000;\n        vector<vector<int> >p(4);\n        for(int i=0;i<n;i++){\n            p[0].push_back(ps[i][0]+ps[i][1]);\n            p[1].push_back(-ps[i][0]+ps[i][1]);\n            p[2].push_back(ps[i][0]-ps[i][1]);\n            p[3].push_back(-ps[i][0]-ps[i][1]);\n        }\n        for(int i=0;i<4;i++)sort(p[i].begin(),p[i].end());\n        for(int i=0;i<n;i++){\n            vector<int> q={ps[i][0]+ps[i][1],-ps[i][0]+ps[i][1],ps[i][0]-ps[i][1],-ps[i][0]-ps[i][1]};\n            int pans=0;\n            for(int j=0;j<4;j++){\n                pans=max(pans,chk(p[j],q[j]));\n            }\n            ans=min(ans,pans);\n        }\n        return ans;\n    }\n};"
}