{
    "username": "leva94",
    "submission": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        def mix_and(a, b):\n            if a == 0:\n                return 0\n            if b == 0:\n                return 0\n            if a % 2 == 1 and b % 2 == 1:\n                return 2 * mix_and(a // 2, b // 2) + 1\n            return 2 * mix_and(a // 2, b // 2)\n        def pref_suff(arr1, arr2, k):\n            first = 0\n            second = 0\n            res = 0\n            while first < len(arr1):\n                while second < len(arr2) and mix_and(arr1[first], arr2[second]) == k:\n                    second += 1\n                res += second\n                first += 1\n            return res\n        def count_and(arr, k):\n            if len(arr) == 0:\n                return 0\n            if len(arr) == 1:\n                if arr[0] == k:\n                    return 1\n                return 0\n            result = 0\n            n = len(arr) // 2\n            result += count_and(arr[:n], k)\n            result += count_and(arr[n:], k)\n            prefix = [arr[n]]\n            for i in range(n + 1, len(arr)):\n                prefix.append(mix_and(prefix[-1], arr[i]))\n            suffix = [arr[n - 1]]\n            for i in range(n - 2, -1, -1):\n                suffix.append(mix_and(suffix[-1], arr[i]))\n            result += pref_suff(prefix, suffix[::-1], k)\n            return result\n        stack = []\n        result = 0\n        for n in nums:\n            if mix_and(n, k) == k:\n                stack.append(n)\n            else:\n                result += count_and(stack, k)\n                stack = []\n        result += count_and(stack, k)\n        return result\n            \n        ",
    "submit_ts": "1720279251",
    "subm_id": "1311743722"
}