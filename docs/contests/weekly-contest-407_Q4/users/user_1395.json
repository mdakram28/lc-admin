{
    "username": "xu-ri-dong-sheng-2n",
    "submission": "class Solution {\npublic:\n    long long minimumOperations(vector<int>& nums, vector<int>& target) {\n        long long res = 0;\n        int n = nums.size();\n        vector<int> check(n);\n        for (int i = 0; i < n; ++i) {\n            check[i] = target[i] - nums[i];\n        }\n        for (auto& x : check) {\n            cout << x << \" \";\n        }\n        cout << endl;\n        for (int i = 0; i < n; ++i) {\n            if (check[i] > 0) {\n                int j = i;\n                int minn = INT_MAX;\n                while (j < n && check[j] > 0) {\n                    minn = min(minn, check[j]);\n                    ++j;\n                }\n                for (int k = i + 1; k < j; ++k) {\n                    if (check[k] > check[k - 1]) res += check[k] - check[k - 1];\n                }\n                //res += minn;\n                res += check[i];\n                i = j - 1;\n            } else if (check[i] < 0) {\n                int j = i;\n                int maxx = INT_MIN;\n                while (j < n && check[j] < 0) {\n                    maxx = max(maxx, check[j]);\n                    ++j;\n                }\n                for (int k = i + 1; k < j; ++k) {\n                    if (check[k] < check[k - 1]) res += check[k - 1] - check[k];\n                }\n                //res -= maxx;\n                res -= check[i];\n                i = j - 1;\n            }\n        }\n        return res;\n    }\n};",
    "submit_ts": "1721532810",
    "subm_id": "548394432"
}