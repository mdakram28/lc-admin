{
    "username": "x____x",
    "submission": "class Solution {\npublic:\n  vector<bool> getResults(vector<vector<int>>& queries) {\n    struct Seg {\n      int head, cap, tail;\n    };\n    const int N = 1 << 16;\n    vector<Seg> segs(N << 1);\n    for (int i = 0; i < N; ++i) segs[N + i] = {1, 1, 1};\n    for (int i = N; i-- > 1; ) segs[i] = {segs[i << 1].head << 1, segs[i << 1].cap << 1, segs[i << 1].tail << 1};\n    \n    auto mrg = [&](const Seg& l, const Seg& r, int w1, int w2) {\n      Seg ret = l;\n      if (l.head == w1) ret.head += r.head;\n      if (r.head == w2) ret.tail += r.tail; else ret.tail = r.tail;\n      ret.cap = max(ret.cap, ret.head);\n      ret.cap = max(ret.cap, ret.tail);\n      ret.cap = max(ret.cap, r.cap);\n      ret.cap = max(ret.cap, l.tail + r.head);\n      return ret;\n    };\n    \n    function<void(int, int, int, int, int)>upd = [&](int x, int b, int e, int p, int w) {\n      if (b <= x && x < e) {\n        if (w > 1) {\n          w >>= 1;\n          upd(x, b, b + w, p << 1, w);\n          upd(x, b + w, e, (p << 1) + 1, w);\n          segs[p] = mrg(segs[p << 1], segs[(p << 1) + 1], w, w);\n        } else {\n          segs[p] = {0, 1, 1};\n        }\n      }\n    };\n    \n    function<Seg(int)> qry = [&](int x) {\n      Seg ret = {0, 0, 0};\n      for (int b = 0, p = 1, w = N, s = 0; b < x; ) {\n        if (b + w <= x) {\n          ret = mrg(ret, segs[p], s, w);\n          break;\n        }\n        w >>= 1;\n        p <<= 1;\n        if (b + w <= x) {\n          ret = mrg(ret, segs[p], s, w);\n          b += w;\n          ++p;\n          s += w;\n        }\n      }\n      return ret;\n    };\n\n    vector<bool> ret;\n    for (const auto& q : queries) {\n      if (q[0] == 1) {\n        upd(q[1], 0, N, 1, N);\n      } else {\n        const auto s = qry(q[1]);\n        int sz = q[2];\n        ret.push_back(s.head >= sz || s.cap >= sz || s.tail >= sz);\n      }\n    }\n    return ret;\n  }\n};",
    "submit_ts": "1716652665",
    "subm_id": "1267668871"
}