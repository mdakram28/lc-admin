{
    "username": "gauriagarwal18",
    "submission": "class Solution {\n    public long minimumOperations(int[] nums, int[] target) {\n        \n        long ans=0;int n=nums.length;\n        \n        int[]diff= new int[n];\n        for(int i=0;i<n;i++){\n            diff[i]= target[i]-nums[i];\n        }\n        \n//         boolean pos=true;\n        \n//         if(diff[0]<0){\n//             pos=false;\n//         }\n        \n        int i=0;\n        \n        while(i<n){\n            \n            while(i<n && diff[i]==0){\n                i++;\n            }\n            \n            long neg=0;\n            int prev=-1;\n            while(i<n && diff[i]<0){\n                if(prev==-1){\n                    neg+= (long)Math.abs(diff[i]);\n                    prev=Math.abs(diff[i]);\n                }\n                else{\n                    neg+= (long)Math.max(0,(Math.abs(diff[i])-prev));\n                    prev=Math.abs(diff[i]);\n                }\n                \n                i++;\n            }\n            \n            \n            ans+= neg;\n            long pos=0;\n            prev=-1;\n            while(i<n && diff[i]>0){\n                if(prev==-1){\n                    pos+= (long)diff[i];\n                    prev=diff[i];\n                }\n                else{\n                    pos+= (long)Math.max(0,(diff[i]-prev));\n                    prev=diff[i];\n                }\n                \n                i++;\n            }\n            ans+=pos;\n        }\n        return ans;\n        \n        \n        \n    }\n}",
    "submit_ts": "1721532752",
    "subm_id": "1327993212"
}