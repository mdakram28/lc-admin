{
    "username": "Farhan20",
    "submission": "class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& a, int k) {\n        int n = a.size();\n        vector<int> b = a;\n        for(auto e : a) {\n            b.push_back(e);\n        }\n\n        vector<int> d(b.size());\n        for(int i = 1; i < b.size(); i++) {\n            if(b[i] != b[i - 1]) d[i] = 1;\n            d[i] += d[i - 1];\n        }\n\n        int ans = 0;\n        for(int i = 0; i < n; i++) {\n            int l = i + 1, r = i + k - 1;\n            int sum = find(l, r, d);\n            // cout << sum << endl;\n            if(sum == k - 1) ans++;\n        }\n        return ans;\n    }\n\n    int find(int l, int r, vector<int>& d) {\n        if(l > r) return 0;\n        int res = d[r];\n        if(l) res -= d[l - 1];\n        return res;\n    }\n};",
    "submit_ts": "1720277208",
    "subm_id": "1311652812"
}