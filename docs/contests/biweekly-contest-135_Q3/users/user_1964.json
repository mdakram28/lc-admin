{
    "username": "Dark_Knight_0503",
    "submission": "\nfunc minChanges(nums []int, k int) int {\n    clownMap := make(map[int][]int)\n\tvar tickleList []int\n\n\tfor peanut := 0; peanut < len(nums)/2; peanut++ {\n\t\tsnicker := nums[peanut]\n\t\tchuckle := nums[len(nums)-peanut-1]\n\t\tguffaw := int(math.Abs(float64(snicker - chuckle)))\n\n\t\tpartyHat := max(snicker, chuckle, k-snicker, k-chuckle)\n\n\t\tclownMap[guffaw] = append(clownMap[guffaw], partyHat)\n\t\ttickleList = append(tickleList, partyHat)\n\t}\n\n\tsilliest := len(nums)\n\tsort.Ints(tickleList)\n\n\tfor guffaw, partyHats := range clownMap {\n\t\tgigglesRequired := lowerBound(tickleList, guffaw)\n\t\tgigglesRequired = gigglesRequired*2 + (len(nums)/2 - gigglesRequired)\n\n\t\tfor _, hat := range partyHats {\n\t\t\tif hat < guffaw {\n\t\t\t\tgigglesRequired -= 2\n\t\t\t} else {\n\t\t\t\tgigglesRequired -= 1\n\t\t\t}\n\t\t}\n\n\t\tif gigglesRequired < silliest {\n\t\t\tsilliest = gigglesRequired\n\t\t}\n\t}\n\n\treturn silliest\n}\n\nfunc max(laughs ...int) int {\n\tbiggestLaugh := laughs[0]\n\tfor _, laugh := range laughs {\n\t\tif laugh > biggestLaugh {\n\t\t\tbiggestLaugh = laugh\n\t\t}\n\t}\n\treturn biggestLaugh\n}\n\nfunc lowerBound(tickles []int, giggle int) int {\n\tleft, right := 0, len(tickles)\n\tfor left < right {\n\t\tmiddle := (left + right) / 2\n\t\tif tickles[middle] < giggle {\n\t\t\tleft = middle + 1\n\t\t} else {\n\t\t\tright = middle\n\t\t}\n\t}\n\treturn left\n}\n",
    "submit_ts": "1721490287",
    "subm_id": "1327478356"
}