{
    "username": "manikiran949",
    "submission": "class Solution {\npublic:\n    #define MAX 100001\n    #define bitscount 32\n    #define ll long long\n    ll prefix_count[bitscount][MAX];\n    void findPrefixCount(vector<int> &arr, ll n){\n        for (ll i = 0; i < bitscount; i++) {\n            prefix_count[i][0] = ((arr[0] >> i) & 1);\n            for (ll j = 1; j < n; j++) {\n                prefix_count[i][j] = ((arr[j] >> i) & 1);\n                prefix_count[i][j] += prefix_count[i][j - 1];\n            }\n        }\n    }\n    ll rangeAnd(ll l, ll r){\n        ll ans = 0;\n        for (ll i = 0; i < bitscount; i++) {\n            ll x;\n            if (l == 0) x = prefix_count[i][r];\n            else x = prefix_count[i][r] - prefix_count[i][l - 1];\n            if (x == r - l + 1) ans = (ans | (1 << i));\n        }\n        return ans;\n    }\n    long long countSubarrays(vector<int>& a, int k) {\n        ll n=a.size();\n        findPrefixCount(a, n);\n        ll sum=0;\n        for(ll i=0;i<n;i++){\n            ll l=i,r=n-1;\n            ll st=n,en=i-1;\n            while(l<=r){\n                ll mid=l+(r-l)/2;\n                ll cur=rangeAnd(i,mid);\n                if(cur==k){\n                    en=max(en,mid);\n                    l=mid+1;\n                }\n                else if(cur>k) l=mid+1;\n                else r=mid-1;\n            }\n            l=i,r=n-1;\n            while(l<=r){\n                ll mid=l+(r-l)/2;\n                ll cur=rangeAnd(i,mid);\n                if(cur==k){\n                    st=min(st,mid);\n                    r=mid-1;\n                }\n                else if(cur>k) l=mid+1;\n                else r=mid-1;\n            }\n            if(st<n && en>i-1) sum+=(en-st+1);\n        }\n        return sum;\n    }\n};",
    "submit_ts": "1720278285",
    "subm_id": "1311702532"
}