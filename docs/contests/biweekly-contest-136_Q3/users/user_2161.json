{
    "username": "ThunderPhoenix",
    "submission": "class Solution {\npublic:\n    int minFlips(vector<vector<int>>& grid) {\n        int n=grid.size();\n        int m=grid[0].size();\n        int ans = 0, ans1 = 0;\n        int count = 0;\n        \n        \n        for(int i=0; i < n/2; i++) {\n            for(int j=0; j < m/2; j++) {\n                int count = 0;\n                \n                count += grid[i][j] + grid[i][m-j-1] + grid[n-i-1][j] + grid[n-i-1][m-j-1];\n                \n                ans += min(count, 4-count);\n            }\n        }\n        \n        if(n%2 == 1) {\n            for(int i=0; i < m/2; i++) {\n                if(grid[n/2][i] != grid[n/2][m-i-1]) {\n                    ans1++;\n                }\n                \n                count += grid[n/2][i] + grid[n/2][m-i-1];\n            }\n        }\n        \n        if(m%2 == 1) {\n            for(int i=0; i < n/2; i++) {\n                if(grid[i][m/2] != grid[n-i-1][m/2]) {\n                    ans1++;\n                }\n                \n                count += grid[i][m/2] + grid[n-i-1][m/2];\n            }\n        }\n        \n        if(n%2 == 1 && m%2 == 1) ans += grid[n/2][m/2];\n        \n        int c = min(count%4, 4-count%4);\n        \n        return ans + max(c, ans1);\n    }\n};",
    "submit_ts": "1722698785",
    "subm_id": "1343191734"
}